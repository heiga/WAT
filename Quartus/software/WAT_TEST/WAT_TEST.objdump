
WAT_TEST.elf:     file format elf32-littlenios2
WAT_TEST.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800000

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x0005bee4 memsz 0x00066338 flags rwx
    LOAD off    0x0005d020 vaddr 0x01004020 paddr 0x01004020 align 2**12
         filesz 0x00000210 memsz 0x00000210 flags r-x
    LOAD off    0x0005e000 vaddr 0x01009000 paddr 0x01009000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags r-x

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000000  01009000  01009000  0005e000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  01004020  01004020  0005d020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0005711c  00800000  00800000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00002e90  0085711c  0085711c  0005811c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001f38  00859fac  00859fac  0005afac  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000a454  0085bee4  0085bee4  0005cee4  2**2
                  ALLOC, SMALL_DATA
  6 .sdram_controller_0 00000000  00866338  00866338  0005e000  2**0
                  CONTENTS
  7 .onchip_memory2_0 00000000  01004230  01004230  0005e000  2**0
                  CONTENTS
  8 .epcs_flash_controller_0 00000000  01009020  01009020  0005e000  2**0
                  CONTENTS
  9 .comment      00000023  00000000  00000000  0005e000  2**0
                  CONTENTS, READONLY
 10 .debug_aranges 00001cd8  00000000  00000000  0005e028  2**3
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_info   000778c5  00000000  00000000  0005fd00  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 0001554d  00000000  00000000  000d75c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00020f99  00000000  00000000  000ecb12  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000078d4  00000000  00000000  0010daac  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0000a4f4  00000000  00000000  00115380  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_loc    000299f7  00000000  00000000  0011f874  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_alt_sim_info 00000010  00000000  00000000  0014926c  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_ranges 00002848  00000000  00000000  00149280  2**3
                  CONTENTS, READONLY, DEBUGGING
 19 .thread_model 00000006  00000000  00000000  001549ce  2**0
                  CONTENTS, READONLY
 20 .cpu          0000000c  00000000  00000000  001549d4  2**0
                  CONTENTS, READONLY
 21 .qsys         00000001  00000000  00000000  001549e0  2**0
                  CONTENTS, READONLY
 22 .simulation_enabled 00000001  00000000  00000000  001549e1  2**0
                  CONTENTS, READONLY
 23 .sysid_hash   00000004  00000000  00000000  001549e2  2**0
                  CONTENTS, READONLY
 24 .sysid_base   00000004  00000000  00000000  001549e6  2**0
                  CONTENTS, READONLY
 25 .sysid_time   00000004  00000000  00000000  001549ea  2**0
                  CONTENTS, READONLY
 26 .stderr_dev   0000000b  00000000  00000000  001549ee  2**0
                  CONTENTS, READONLY
 27 .stdin_dev    0000000b  00000000  00000000  001549f9  2**0
                  CONTENTS, READONLY
 28 .stdout_dev   0000000b  00000000  00000000  00154a04  2**0
                  CONTENTS, READONLY
 29 .sopc_system_name 0000000e  00000000  00000000  00154a0f  2**0
                  CONTENTS, READONLY
 30 .quartus_project_dir 0000000e  00000000  00000000  00154a1d  2**0
                  CONTENTS, READONLY
 31 .jdi          0000448f  00000000  00000000  00154a2b  2**0
                  CONTENTS, READONLY
 32 .sopcinfo     0009c13a  00000000  00000000  00158eba  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
01009000 l    d  .entry	00000000 .entry
01004020 l    d  .exceptions	00000000 .exceptions
00800000 l    d  .text	00000000 .text
0085711c l    d  .rodata	00000000 .rodata
00859fac l    d  .rwdata	00000000 .rwdata
0085bee4 l    d  .bss	00000000 .bss
00866338 l    d  .sdram_controller_0	00000000 .sdram_controller_0
01004230 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
01009020 l    d  .epcs_flash_controller_0	00000000 .epcs_flash_controller_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../WAT_TEST_bsp//obj/HAL/src/crt0.o
00800034 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 camera_test.c
0085bcf8 l     O .rwdata	00000006 CAM_SYNC
0085bcfe l     O .rwdata	00000006 CAM_REST
0085bd04 l     O .rwdata	00000006 CAM_INIT
0085bd0a l     O .rwdata	00000006 CAM_SIZE
0085bd10 l     O .rwdata	00000006 CAM_SNAP
0085bd16 l     O .rwdata	00000006 CAM_GRAB
0085bd1c l     O .rwdata	00000006 CAM_DATA
0085bd22 l     O .rwdata	00000006 CAM_ACK_SYNC
0085bd28 l     O .rwdata	00000006 CAM_ACK_INIT
0085bd2e l     O .rwdata	00000006 CAM_ACK_SIZE
0085bd34 l     O .rwdata	00000006 CAM_ACK_SNAP
0085bd3a l     O .rwdata	00000006 CAM_ACK_GRAB
0085bd40 l     O .rwdata	00000006 CAM_ACK_DATA
0085bd46 l     O .rwdata	00000006 CAM_ACK_DEND
0085bd4c l     O .rwdata	00000006 CAM_NAK_DATA
0085bd54 l     O .rwdata	00000004 CAM_PICTURE_OUTPUT
0085bee4 l     O .bss	00000004 picture.4474
00000000 l    df *ABS*	00000000 imagepro.c
00000000 l    df *ABS*	00000000 motor_test.c
00000000 l    df *ABS*	00000000 wat_main_test.c
0085bd58 l     O .rwdata	00000006 CAM_SYNC
0085bd5e l     O .rwdata	00000006 CAM_REST
0085bd64 l     O .rwdata	00000006 CAM_INIT
0085bd6a l     O .rwdata	00000006 CAM_SIZE
0085bd70 l     O .rwdata	00000006 CAM_SNAP
0085bd76 l     O .rwdata	00000006 CAM_GRAB
0085bd7c l     O .rwdata	00000006 CAM_DATA
0085bd82 l     O .rwdata	00000006 CAM_ACK_SYNC
0085bd88 l     O .rwdata	00000006 CAM_ACK_INIT
0085bd8e l     O .rwdata	00000006 CAM_ACK_SIZE
0085bd94 l     O .rwdata	00000006 CAM_ACK_SNAP
0085bd9a l     O .rwdata	00000006 CAM_ACK_GRAB
0085bda0 l     O .rwdata	00000006 CAM_ACK_DATA
0085bda6 l     O .rwdata	00000006 CAM_ACK_DEND
0085bdac l     O .rwdata	00000006 CAM_NAK_DATA
0085bdb4 l     O .rwdata	00000004 CAM_PICTURE_OUTPUT
00000000 l    df *ABS*	00000000 wifi_test.c
00000000 l    df *ABS*	00000000 jdapimin.c
00801b08 l     F .text	00000428 default_decompress_parms
00000000 l    df *ABS*	00000000 jdapistd.c
008025c8 l     F .text	00000170 output_pass_setup
00000000 l    df *ABS*	00000000 jdatasrc.c
00802bfc l     F .text	0000003c init_source
00802c38 l     F .text	00000024 init_mem_source
00802c5c l     F .text	00000110 fill_input_buffer
00802d6c l     F .text	00000074 fill_mem_input_buffer
0085bdb8 l     O .rwdata	00000004 mybuffer.3831
00802de0 l     F .text	000000b4 skip_input_data
00802e94 l     F .text	00000024 term_source
00000000 l    df *ABS*	00000000 jdinput.c
00803cec l     F .text	000008dc initial_setup
008045c8 l     F .text	000003b4 per_scan_setup
0080497c l     F .text	00000150 latch_quant_tables
00804acc l     F .text	0000007c start_input_pass
00804b48 l     F .text	00000054 finish_input_pass
00804b9c l     F .text	000001a8 consume_markers
00804d44 l     F .text	00000094 reset_input_controller
00000000 l    df *ABS*	00000000 jdmarker.c
00804e8c l     F .text	0000016c get_soi
00804ff8 l     F .text	00000858 get_sof
00805850 l     F .text	00000774 get_sos
00805fc4 l     F .text	000003ac get_dac
00806370 l     F .text	00000664 get_dht
008069d4 l     F .text	00000854 get_dqt
00807228 l     F .text	00000274 get_dri
0080749c l     F .text	00000bf0 get_lse
0080808c l     F .text	00000598 examine_app0
00808624 l     F .text	00000224 examine_app14
00808848 l     F .text	000002b8 get_interesting_appn
00808b00 l     F .text	000004a8 save_marker
00808fa8 l     F .text	000001ac skip_variable
00809154 l     F .text	0000028c next_marker
008093e0 l     F .text	00000190 first_marker
00809570 l     F .text	000007a4 read_markers
00809d14 l     F .text	00000104 read_restart_marker
0080a000 l     F .text	00000068 reset_marker_reader
00000000 l    df *ABS*	00000000 jdmaster.c
0080a414 l     F .text	000001d4 use_merged_upsample
0080aa44 l     F .text	000000d8 prepare_range_limit_table
0080ab1c l     F .text	0000045c master_selection
0080af78 l     F .text	000002a8 prepare_for_output_pass
0080b220 l     F .text	0000006c finish_output_pass
00000000 l    df *ABS*	00000000 jdmerge.c
0080b40c l     F .text	000001ec build_ycc_rgb_table
0080b5f8 l     F .text	000001f0 build_bg_ycc_rgb_table
0080b7e8 l     F .text	00000048 start_pass_merged_upsample
0080b830 l     F .text	000001e8 merged_2v_upsample
0080ba18 l     F .text	000000ac merged_1v_upsample
0080bac4 l     F .text	00000370 h2v1_merged_upsample
0080be34 l     F .text	00000480 h2v2_merged_upsample
00000000 l    df *ABS*	00000000 jdpostct.c
0080c3fc l     F .text	000001a8 start_pass_dpost
0080c5a4 l     F .text	00000114 post_process_1pass
0080c6b8 l     F .text	0000019c post_process_prepass
0080c854 l     F .text	000001c8 post_process_2pass
00000000 l    df *ABS*	00000000 jdsample.c
0080cba8 l     F .text	00000050 start_pass_upsample
0080cbf8 l     F .text	00000270 sep_upsample
0080ce68 l     F .text	0000003c fullsize_upsample
0080cea4 l     F .text	00000038 noop_upsample
0080cedc l     F .text	000001a8 int_upsample
0080d084 l     F .text	000000f0 h2v1_upsample
0080d174 l     F .text	0000013c h2v2_upsample
00000000 l    df *ABS*	00000000 jerror.c
0080d680 l     F .text	00000038 error_exit
0080d6b8 l     F .text	00000060 output_message
0080d718 l     F .text	000000a8 emit_message
0080d7c0 l     F .text	000001fc format_message
0080d9bc l     F .text	0000003c reset_error_mgr
00000000 l    df *ABS*	00000000 jmemmgr.c
0080dab8 l     F .text	00000064 out_of_memory
0085bdbc l     O .rwdata	00000008 first_pool_slop
0085bdc4 l     O .rwdata	00000008 extra_pool_slop
0080db1c l     F .text	000002d0 alloc_small
0080ddec l     F .text	00000178 alloc_large
0080df64 l     F .text	00000178 alloc_sarray
0080e0dc l     F .text	00000188 alloc_barray
0080e264 l     F .text	000000f4 request_virt_sarray
0080e358 l     F .text	000000f4 request_virt_barray
0080e44c l     F .text	0000044c realize_virt_arrays
0080e898 l     F .text	000001e0 do_sarray_io
0080ea78 l     F .text	000001e4 do_barray_io
0080ec5c l     F .text	000002d8 access_virt_sarray
0080ef34 l     F .text	000002dc access_virt_barray
0080f210 l     F .text	00000298 free_pool
0080f4a8 l     F .text	00000080 self_destruct
00000000 l    df *ABS*	00000000 jmemnobs.c
00000000 l    df *ABS*	00000000 jquant1.c
00858ae0 l     O .rodata	00000100 base_dither_matrix
0080f998 l     F .text	00000250 select_ncolors
00858be0 l     O .rodata	0000000c RGB_order.4116
0080fbe8 l     F .text	00000064 output_value
0080fc4c l     F .text	00000060 largest_input_value
0080fcac l     F .text	0000028c create_colormap
0080ff38 l     F .text	00000288 create_colorindex
008101c0 l     F .text	00000140 make_odither_array
00810300 l     F .text	00000120 create_odither_tables
00810420 l     F .text	0000015c color_quantize
0081057c l     F .text	00000180 color_quantize3
008106fc l     F .text	00000210 quantize_ord_dither
0081090c l     F .text	00000270 quantize3_ord_dither
00810b7c l     F .text	00000358 quantize_fs_dither
00810ed4 l     F .text	000000ac alloc_fs_workspace
00810f80 l     F .text	000001dc start_pass_1_quant
0081115c l     F .text	00000024 finish_pass_1_quant
00811180 l     F .text	00000050 new_color_map_1_quant
00000000 l    df *ABS*	00000000 jquant2.c
00811318 l     F .text	00000144 prescan_quantize
0081145c l     F .text	0000007c find_biggest_color_pop
008114d8 l     F .text	00000074 find_biggest_volume
0081154c l     F .text	00000748 update_box
00811c94 l     F .text	00000244 median_cut
00811ed8 l     F .text	000002a0 compute_color
00812178 l     F .text	00000144 select_colors
008122bc l     F .text	00000598 find_nearby_colors
00812854 l     F .text	000002c4 find_best_colors
00812b18 l     F .text	000001f4 fill_inverse_cmap
00812d0c l     F .text	000001b0 pass2_no_dither
00812ebc l     F .text	00000544 pass2_fs_dither
00813400 l     F .text	000001cc init_error_limit
008135cc l     F .text	00000068 finish_pass1
00813634 l     F .text	00000024 finish_pass2
00813658 l     F .text	00000258 start_pass_2_quant
008138b0 l     F .text	0000003c new_color_map_2_quant
00000000 l    df *ABS*	00000000 jutils.c
00000000 l    df *ABS*	00000000 jcomapi.c
00000000 l    df *ABS*	00000000 jdarith.c
00813ef8 l     F .text	000000a8 get_byte
00813fa0 l     F .text	00000254 arith_decode
008141f4 l     F .text	000001d0 process_restart
008143c4 l     F .text	00000420 decode_mcu_DC_first
008147e4 l     F .text	00000364 decode_mcu_AC_first
00814b48 l     F .text	0000010c decode_mcu_DC_refine
00814c54 l     F .text	00000334 decode_mcu_AC_refine
00814f88 l     F .text	000006e4 decode_mcu
0081566c l     F .text	00000684 start_pass
00815cf0 l     F .text	00000024 finish_pass
00000000 l    df *ABS*	00000000 jdcoefct.c
00815e94 l     F .text	000000a4 start_iMCU_row
00815f38 l     F .text	0000003c start_input_pass
00815f74 l     F .text	00000088 start_output_pass
00816a08 l     F .text	00000234 smoothing_ok
00816c3c l     F .text	00000c1c decompress_smooth_data
008166fc l     F .text	0000030c decompress_data
00815ffc l     F .text	000003ac decompress_onepass
008163a8 l     F .text	00000024 dummy_consume_data
008163cc l     F .text	00000330 consume_data
00000000 l    df *ABS*	00000000 jdcolor.c
00817ad4 l     F .text	000001ec build_ycc_rgb_table
00817cc0 l     F .text	000001f0 build_bg_ycc_rgb_table
00817eb0 l     F .text	0000022c ycc_rgb_convert
008180dc l     F .text	00000118 build_rgb_y_table
008181f4 l     F .text	000001b4 rgb_gray_convert
008183a8 l     F .text	00000180 rgb1_rgb_convert
00818528 l     F .text	000001d0 rgb1_gray_convert
008186f8 l     F .text	00000138 rgb_convert
00818830 l     F .text	0000011c null_convert
0081894c l     F .text	0000006c grayscale_convert
008189b8 l     F .text	000000dc gray_rgb_convert
00818a94 l     F .text	0000027c ycck_cmyk_convert
00818d10 l     F .text	00000024 start_pass_dcolor
00000000 l    df *ABS*	00000000 jddctmgr.c
00819388 l     F .text	00000870 start_pass
008590d8 l     O .rodata	00000080 aanscales.4505
00859158 l     O .rodata	00000040 aanscalefactor.4513
00000000 l    df *ABS*	00000000 jdhuff.c
00859198 l     O .rodata	00000100 jpeg_zigzag_order
00859298 l     O .rodata	000000c4 jpeg_zigzag_order7
0085935c l     O .rodata	00000090 jpeg_zigzag_order6
008593ec l     O .rodata	00000064 jpeg_zigzag_order5
00859450 l     O .rodata	00000040 jpeg_zigzag_order4
00859490 l     O .rodata	00000024 jpeg_zigzag_order3
008594b4 l     O .rodata	00000010 jpeg_zigzag_order2
00819cfc l     F .text	000005c4 jpeg_make_d_derived_tbl
0081a2c0 l     F .text	000001ec jpeg_fill_bit_buffer
008594c4 l     O .rodata	00000040 bmask
0081a4ac l     F .text	0000019c jpeg_huff_decode
0081a648 l     F .text	00000068 finish_pass_huff
0081a6b0 l     F .text	000000cc process_restart
0081a77c l     F .text	000003d8 decode_mcu_DC_first
0081ab54 l     F .text	000003e0 decode_mcu_AC_first
0081af34 l     F .text	000001b8 decode_mcu_DC_refine
0081b0ec l     F .text	00000680 decode_mcu_AC_refine
0081b76c l     F .text	00000740 decode_mcu_sub
0081beac l     F .text	00000724 decode_mcu
0081c5d0 l     F .text	00000c54 start_pass_huff_decoder
00000000 l    df *ABS*	00000000 jdmainct.c
0081d3f4 l     F .text	000001d8 alloc_funny_pointers
0081d5cc l     F .text	000002f0 make_funny_pointers
0081d8bc l     F .text	00000280 set_wraparound_pointers
0081db3c l     F .text	000001b0 set_bottom_pointers
0081dcec l     F .text	000000f4 start_pass_main
0081ded8 l     F .text	000002b0 process_data_context_main
0081dde0 l     F .text	000000f8 process_data_simple_main
0081e188 l     F .text	00000070 process_data_crank_post
00000000 l    df *ABS*	00000000 jidctflt.c
00000000 l    df *ABS*	00000000 jidctfst.c
00000000 l    df *ABS*	00000000 jidctint.c
00000000 l    df *ABS*	00000000 jaricom.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
008320d0 l     F .text	00000008 __fp_unlock
008320e4 l     F .text	0000019c __sinit.part.1
00832280 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 fmemopen.c
00832480 l     F .text	000000bc fmemseeker
0083253c l     F .text	00000020 fmemcloser
0083255c l     F .text	00000138 fmemwriter
00832694 l     F .text	00000080 fmemreader
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
00000000 l    df *ABS*	00000000 impure.c
00859fac l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 open_memstream.c
00833ebc l     F .text	00000118 memseeker
00833fd4 l     F .text	000001b0 internal_open_memstream_r
00834208 l     F .text	0000015c memwriter
00834184 l     F .text	00000084 memcloser
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
00834bd8 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 sscanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 vfprintf.c
00859816 l     O .rodata	00000010 zeroes.4389
00859826 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 vfscanf.c
0085983e l     O .rodata	00000022 basefix.4340
00000000 l    df *ABS*	00000000 timesr.c
00000000 l    df *ABS*	00000000 vfprintf.c
00859860 l     O .rodata	00000010 zeroes.4404
0083b2ac l     F .text	000000bc __sbprintf
00859870 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00859981 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
0083b860 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 environ.c
0085bf14 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
0085a7f8 l     O .rwdata	00000020 lc_ctype_charset
0085a7d8 l     O .rwdata	00000020 lc_message_charset
0085a818 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
00859b20 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
0083f370 l     F .text	00000064 sulp
00859c54 l     O .rodata	00000014 fpinan.2773
00859c68 l     O .rodata	00000014 fpi.2737
00859c7c l     O .rodata	00000028 tinytens
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 vfprintf.c
00859ca4 l     O .rodata	00000010 zeroes.4333
00859cb4 l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 vfscanf.c
00859cc4 l     O .rodata	00000022 basefix.3791
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 vfprintf.c
008441b0 l     F .text	000000fc __sprint_r.part.0
00859ce6 l     O .rodata	00000010 zeroes.4349
008457ec l     F .text	000000bc __sbprintf
00859cf6 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00845be8 l     F .text	00000100 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
00849838 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0084994c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
008499ac l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00849d60 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
00849e48 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_lseek.c
00849fb4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_read.c
0084a188 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0085be0c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
0084a3fc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
0084a4b0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_env_lock.c
0085be10 l     O .rwdata	00000004 lockid
0085bf3c l     O .bss	00000004 locks
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
0085be14 l     O .rwdata	00000004 lockid
0085bf44 l     O .bss	00000004 locks
00000000 l    df *ABS*	00000000 os_core.c
0084bee8 l     F .text	00000048 OS_InitMisc
0084bf30 l     F .text	0000006c OS_InitRdyList
0084c09c l     F .text	000000e4 OS_InitTCBList
0084be08 l     F .text	000000e0 OS_InitEventList
0084bf9c l     F .text	00000080 OS_InitTaskIdle
0084c01c l     F .text	00000080 OS_InitTaskStat
0084c30c l     F .text	00000074 OS_SchedNew
00000000 l    df *ABS*	00000000 os_dbg.c
00000000 l    df *ABS*	00000000 os_flag.c
0084e01c l     F .text	000000f4 OS_FlagTaskRdy
0084dddc l     F .text	00000160 OS_FlagBlock
00000000 l    df *ABS*	00000000 os_mem.c
00000000 l    df *ABS*	00000000 os_q.c
00000000 l    df *ABS*	00000000 os_sem.c
00000000 l    df *ABS*	00000000 os_task.c
00000000 l    df *ABS*	00000000 os_time.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
008520f4 l     F .text	00000034 alt_dev_reg
0085a9f8 l     O .rwdata	000000cc epcs_flash_controller_0
0085aac4 l     O .rwdata	0000106c jtag_uart_0
0085bb30 l     O .rwdata	000000d0 wifi_uart
0085bc00 l     O .rwdata	00000028 altera_hostfs
00000000 l    df *ABS*	00000000 altera_avalon_epcs_flash_controller.c
0085221c l     F .text	00000034 alt_flash_device_register
008522a4 l     F .text	000003f8 alt_epcs_flash_query
0085269c l     F .text	000000ec alt_epcs_flash_memcmp
00852a74 l     F .text	00000094 alt_epcs_test_address
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00852fc4 l     F .text	000002a4 altera_avalon_jtag_uart_irq
00853268 l     F .text	00000104 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00853a44 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_init.c
00853da8 l     F .text	0000009c altera_avalon_uart_irq
00853e44 l     F .text	00000138 altera_avalon_uart_rxirq
00853f7c l     F .text	000001a4 altera_avalon_uart_txirq
00000000 l    df *ABS*	00000000 altera_avalon_uart_read.c
00854174 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 altera_avalon_uart_write.c
00854418 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 altera_hostfs.c
0085be8c l     O .rwdata	00000009 hcinfo.2538
0085be98 l     O .rwdata	0000000a hcinfo.2551
0085bea4 l     O .rwdata	00000009 hcinfo.2560
0085beb0 l     O .rwdata	0000000a hcinfo.2573
0085bebc l     O .rwdata	0000000a hcinfo.2586
0085bec8 l     O .rwdata	0000000a hcinfo.2612
00000000 l    df *ABS*	00000000 epcs_commands.c
00854b6c l     F .text	00000038 epcs_test_wip
00854ba4 l     F .text	0000003c epcs_await_wip_released
00000000 l    df *ABS*	00000000 fifoed_avalon_uart.c
0085514c l     F .text	0000003c alt_get_errno
0085561c l     F .text	00000154 fifoed_avalon_uart_rxirq
00855770 l     F .text	000001d4 fifoed_avalon_uart_txirq
00855944 l     F .text	00000090 fifoed_avalon_uart_irq
00000000 l    df *ABS*	00000000 fifoed_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00855e70 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_flash_dev.c
00000000 l    df *ABS*	00000000 alt_fs_reg.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
008561e8 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
00856348 l     F .text	0000003c alt_get_errno
00856384 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 os_cpu_a.o
00000040 l       *ABS*	00000000 OSCtxSw_SWITCH_PC
00000000 l    df *ABS*	00000000 os_cpu_c.c
00000014 l       *ABS*	00000000 OSTCBNext_OFFSET
00000032 l       *ABS*	00000000 OSTCBPrio_OFFSET
00000000 l       *ABS*	00000000 OSTCBStkPtr_OFFSET
00000000 l    df *ABS*	00000000 altera_avalon_spi.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
0085bf9c g     O .bss	00000004 alt_instruction_exception_handler
00858e30 g     O .rodata	000000d0 jpeg_natural_order6
00834588 g     F .text	00000018 putchar
0083ec6c g     F .text	00000074 _mprec_log10
0085be62 g     O .rwdata	00000002 OSTaskNameSize
008529e8 g     F .text	0000008c alt_epcs_flash_get_info
0083ed58 g     F .text	0000008c __any_on
00846794 g     F .text	00000054 _isatty_r
00859b2c g     O .rodata	00000028 __mprec_tinytens
0084a0cc g     F .text	000000bc alt_main
008345a0 g     F .text	000000c0 _puts_r
00863014 g     O .bss	00000100 alt_irq
008251c4 g     F .text	00000e38 jpeg_idct_13x13
0083d790 g     F .text	00000060 _lseek_r
0084e83c g     F .text	000000d8 OS_MemInit
00852094 g     F .text	00000060 OSTimeSet
0083d110 g     F .text	000000ac __sflags
00848b88 g     F .text	00000088 .hidden __eqdf2
00800e30 g     F .text	00000590 find_region
0084ab5c g     F .text	00000610 OSEventPendMulti
0082f728 g     F .text	000004c4 jpeg_idct_3x6
00866338 g       *ABS*	00000000 __alt_heap_start
008569c0 g     F .text	00000024 OSTaskCreateHook
0083f234 g     F .text	0000005c _kill_r
008343dc g     F .text	0000003c printf
0085be3a g     O .rwdata	00000002 OSMboxEn
0084b1c4 g     F .text	0000004c OSIntEnter
008467e8 g     F .text	0000009c _wcrtomb_r
0083effc g     F .text	00000084 _signal_r
0085bf00 g     O .bss	00000004 wifiPackageBuffer
008350ac g     F .text	0000005c __sseek
00832430 g     F .text	00000010 __sinit
0083b368 g     F .text	00000140 __swbuf_r
0085be4a g     O .rwdata	00000002 OSQEn
0083d6b4 g     F .text	0000007c _setlocale_r
00804dd8 g     F .text	000000b4 jinit_input_controller
00832288 g     F .text	00000078 __sfmoreglue
00844198 g     F .text	00000018 ungetc
0084a830 g     F .text	000000cc __malloc_unlock
00856a28 g     F .text	00000020 OSTaskStatHook
0085468c g     F .text	0000011c alt_hostfs_open
0085bf4c g     O .bss	00000001 OSLockNesting
00802738 g     F .text	00000144 jpeg_read_scanlines
0083f3d4 g     F .text	000015e4 _strtod_r
0080f7e8 g     F .text	00000034 jpeg_get_small
0081e3ec g     F .text	00000c5c jpeg_idct_float
0085be88 g     O .rwdata	00000002 OSDataSize
0085bf4d g     O .bss	00000001 OSRunning
0085d014 g     O .bss	00002000 motor_test_stk
00842ce4 g     F .text	00000100 _sfread_r
0082e68c g     F .text	000007f4 jpeg_idct_5x10
0083dbd0 g     F .text	0000015c memmove
00856a68 g     F .text	00000020 OSInitHookBegin
0085be80 g     O .rwdata	00000002 OSTmrSize
00832418 g     F .text	00000018 _cleanup
0083dd2c g     F .text	000000a8 _Balloc
00830fec g     F .text	00000070 .hidden __fixsfsi
0085bc28 g     O .rwdata	000000d0 cam_uart
0085bf50 g     O .bss	00000004 OSIdleCtr
00858f00 g     O .rodata	000000a4 jpeg_natural_order5
0085bfd0 g     O .bss	00001000 camPackageBuffer
00848c10 g     F .text	000000dc .hidden __gtdf2
00856770 g     F .text	00000024 altera_nios2_gen2_irq_init
00856840 g       .text	00000000 OSStartTsk
0082253c g     F .text	000000b8 jpeg_idct_1x1
0084c63c g     F .text	000002d4 OS_TCBInit
00854be0 g     F .text	000000fc epcs_sector_erase
00855ce4 g     F .text	00000060 fifoed_avalon_uart_classic_write_fd
01009000 g     F .entry	00000000 __reset
0084a438 g     F .text	00000078 times
008331e8 g     F .text	0000002c getenv
0085be86 g     O .rwdata	00000002 OSTmrWheelTblSize
0085be26 g     O .rwdata	00000002 OSEventSize
0081fb48 g     F .text	00000c44 jpeg_idct_islow
0085bf54 g     O .bss	00000001 OSPrioHighRdy
00845b8c g     F .text	0000005c _fstat_r
0085cfd0 g     O .bss	00000030 camCommandBuffer
008569e4 g     F .text	00000024 OSTaskDelHook
0085bf18 g     O .bss	00000004 errno
00835028 g     F .text	00000008 __seofread
00856820 g       .text	00000000 OSStartHighRdy
00850b14 g     F .text	000001e4 OSTaskCreateExt
0080b384 g     F .text	00000088 jinit_master_decompress
008417cc g     F .text	000013a0 ___svfiprintf_internal_r
0084d924 g     F .text	00000060 OSFlagPendGetFlagsRdy
0085be66 g     O .rwdata	00000002 OSTaskStatStkSize
0082399c g     F .text	00000c70 jpeg_idct_11x11
0084caa0 g     F .text	00000308 OSFlagAccept
0084ee80 g     F .text	000000b8 OSQFlush
0084e914 g     F .text	00000140 OSQAccept
0085bf34 g     O .bss	00000004 alt_argv
00863cf8 g       *ABS*	00000000 _gp
0085bf04 g     O .bss	00000004 wifiPackageQueue
00830b08 g     F .text	000004e4 .hidden __subsf3
00850968 g     F .text	000001ac OSTaskCreate
00855bc4 g     F .text	00000060 fifoed_avalon_uart_read_fd
00850478 g     F .text	000004f0 OSTaskChangePrio
0085bf48 g     O .bss	00000004 alt_heapsem
00849aa0 g     F .text	00000020 getpid
00826d8c g     F .text	00000e20 jpeg_idct_15x15
0080a5e8 g     F .text	0000045c jpeg_calc_output_dimensions
0084c910 g     F .text	00000190 OSDebugInit
00850cf8 g     F .text	00000344 OSTaskDel
0082c618 g     F .text	00000cac jpeg_idct_8x16
0085a878 g     O .rwdata	00000180 alt_fd_list
00863114 g     O .bss	00000370 OSFlagTbl
00801754 g     F .text	0000006c wifi_uart_interrupt
00829ad4 g     F .text	00000b30 jpeg_idct_14x7
008548c4 g     F .text	00000068 alt_hostfs_seek
00834580 g     F .text	00000008 _putchar_r
0084bbe8 g     F .text	000000b8 OS_EventTaskRemove
00854e24 g     F .text	0000006c epcs_write_status_register
00856ce8 g     F .text	00000090 alt_find_dev
00838fac g     F .text	00000008 _times_r
00833c4c g     F .text	00000148 memcpy
00846538 g     F .text	0000025c __hexnan
0085be50 g     O .rwdata	00000002 OSRdyTblSize
00828bfc g     F .text	00000ed8 jpeg_idct_16x8
008320d8 g     F .text	0000000c _cleanup_r
00813bd4 g     F .text	0000005c jround_up
0084975c g     F .text	000000dc .hidden __floatsidf
008560cc g     F .text	00000080 alt_fs_reg
008562cc g     F .text	0000007c alt_io_redirect
00848cec g     F .text	000000f4 .hidden __ltdf2
00855c84 g     F .text	00000060 fifoed_avalon_uart_classic_read_fd
0085711c g       *ABS*	00000000 __DTOR_END__
00834660 g     F .text	00000014 puts
0085614c g     F .text	0000009c alt_exception_cause_generated_bad_addr
0084a8fc g     F .text	00000120 OSEventNameGet
0085be34 g     O .rwdata	00000002 OSFlagMax
0083da58 g     F .text	000000d8 mbrtowc
00852b80 g     F .text	00000100 alt_epcs_flash_write_block
0083ee44 g     F .text	00000074 __fpclassifyd
0082ee80 g     F .text	000008a8 jpeg_idct_4x8
0083ebc8 g     F .text	000000a4 __ratio
0084b210 g     F .text	000000f8 OSIntExit
00858fa4 g     O .rodata	00000080 jpeg_natural_order4
008457d0 g     F .text	0000001c __vfiprintf_internal
0085be6e g     O .rwdata	00000002 OSTCBSize
0085bf55 g     O .bss	00000001 OSPrioCur
008534c4 g     F .text	000002bc altera_avalon_jtag_uart_read
0080f950 g     F .text	00000024 jpeg_mem_init
00833334 g     F .text	00000014 malloc
008343ac g     F .text	00000030 _printf_r
00813b8c g     F .text	00000048 jdiv_round_up
01004000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0083012c g     F .text	00000064 .hidden __udivsi3
00849d9c g     F .text	000000ac isatty
0083f080 g     F .text	000000bc _raise_r
0085be54 g     O .rwdata	00000002 OSStkWidth
0083d684 g     F .text	00000030 iswspace
00859b7c g     O .rodata	000000c8 __mprec_tens
0085be48 g     O .rwdata	00000002 OSPtrSize
00802fc8 g     F .text	00000110 jpeg_mem_src
0083d730 g     F .text	0000000c __locale_charset
00847844 g     F .text	000000c8 .hidden __lesf2
0085be28 g     O .rwdata	00000002 OSEventTblSize
00846adc g     F .text	00000074 .hidden __fixunsdfsi
00856794 g       .text	00000000 OSCtxSw
00834374 g     F .text	0000001c open_memstream
0085bf10 g     O .bss	00000004 __malloc_top_pad
008030d8 g     F .text	00000c14 jpeg_core_output_dimensions
00842c74 g     F .text	00000070 __ssrefill_r
0085bf58 g     O .bss	00000004 OSTCBList
0083f290 g     F .text	00000004 _getpid_r
0085bf28 g     O .bss	00000004 alt_fd_list_lock
0082ddb0 g     F .text	000008dc jpeg_idct_6x12
0082c204 g     F .text	000002ec jpeg_idct_4x2
008412c0 g     F .text	0000001c strtoul
0085bde4 g     O .rwdata	00000004 __mb_cur_max
0083d760 g     F .text	0000000c _localeconv_r
008412dc g     F .text	00000320 _strtoull_r
0083e160 g     F .text	0000003c __i2b
0083d1bc g     F .text	000004c8 __sfvwrite_r
0083f13c g     F .text	000000a8 __sigtramp_r
00863484 g     O .bss	00000c30 OSMemTbl
0085bf5c g     O .bss	00000001 OSTickStepState
00834dc8 g     F .text	00000054 _sbrk_r
00825ffc g     F .text	00000d90 jpeg_idct_14x14
008547ec g     F .text	0000006c alt_hostfs_read
0080f8f8 g     F .text	00000058 jpeg_open_backing_store
0085be4c g     O .rwdata	00000002 OSQMax
00821fc4 g     F .text	0000033c jpeg_idct_3x3
008640b4 g     O .bss	00000800 OSTaskStatStk
0084e478 g     F .text	000000f0 OSMemNameGet
0085be2c g     O .rwdata	00000002 OSFlagEn
0083ede4 g     F .text	00000060 _read_r
0085be72 g     O .rwdata	00000002 OSTimeTickHookEn
0084e110 g     F .text	000000a4 OS_FlagUnlink
0084f330 g     F .text	00000168 OSQPost
0085be00 g     O .rwdata	00000004 alt_max_fd
0084c1d4 g     F .text	00000068 OS_MemCopy
0084c23c g     F .text	000000d0 OS_Sched
00831d24 g     F .text	000000f0 _fclose_r
0084e388 g     F .text	000000f0 OSMemGet
00851324 g     F .text	000001b4 OSTaskNameSet
008320a0 g     F .text	00000030 fflush
0085bf0c g     O .bss	00000004 __malloc_max_sbrked_mem
0085bf60 g     O .bss	00000004 OSCtxSwCtr
00856a48 g     F .text	00000020 OSTimeTickHook
0085be36 g     O .rwdata	00000002 OSFlagNameSize
00837620 g     F .text	0000198c __ssvfscanf_r
00801ad4 g     F .text	00000034 jpeg_abort_decompress
0084bca0 g     F .text	00000100 OS_EventTaskRemoveMulti
008017c0 g     F .text	000000e8 motorCommand
0084790c g     F .text	000008ac .hidden __adddf3
00847710 g     F .text	00000078 .hidden __nesf2
0080240c g     F .text	000001bc jpeg_start_decompress
0084ba98 g     F .text	00000150 OS_EventTaskWaitMulti
00852b08 g     F .text	00000078 alt_epcs_flash_erase_block
0083e970 g     F .text	0000010c __b2d
0085be4e g     O .rwdata	00000002 OSQSize
0084714c g     F .text	000005c4 .hidden __umoddi3
00849ff0 g     F .text	000000dc lseek
0084fde0 g     F .text	0000020c OSSemPend
00800000 g       *ABS*	00000000 __alt_mem_sdram_controller_0
0085bdcc g     O .rwdata	00000004 _global_impure_ptr
00813df4 g     F .text	0000005c jpeg_destroy
008550f0 g     F .text	0000005c epcs_exit_4_bytes_mode
00859504 g     O .rodata	000001c8 jpeg_aritab
00834674 g     F .text	00000564 _realloc_r
0085be38 g     O .rwdata	00000002 OSLowestPrio
00866338 g       *ABS*	00000000 __bss_end
00849c70 g     F .text	000000f0 alt_iic_isr_register
00856ac8 g     F .text	00000024 OSTCBInitHook
00813c30 g     F .text	000000d4 jcopy_sample_rows
0085be7e g     O .rwdata	00000002 OSTmrCfgTicksPerSec
00856668 g     F .text	00000108 alt_tick
00859d06 g     O .rodata	00000100 __hexdig
00846b50 g     F .text	000005fc .hidden __udivdi3
0080b28c g     F .text	000000f8 jpeg_new_colormap
00845ae8 g     F .text	00000024 _fputwc_r
0085be20 g     O .rwdata	00000002 OSEventEn
00859b54 g     O .rodata	00000028 __mprec_bigtens
0083df44 g     F .text	00000104 __s2b
0085be7a g     O .rwdata	00000002 OSTmrCfgNameSize
0083b848 g     F .text	00000018 abort
00821018 g     F .text	00000610 jpeg_idct_6x6
008319ec g     F .text	000000a8 .hidden __floatunsidf
00855b7c g     F .text	00000048 fifoed_avalon_uart_classic_write
0083e6b0 g     F .text	00000060 __mcmp
00853c48 g     F .text	00000160 altera_avalon_uart_init
00813ea4 g     F .text	00000054 jpeg_alloc_huff_table
00818d34 g     F .text	00000654 jinit_color_deconverter
00832450 g     F .text	00000018 __fp_lock_all
00849c24 g     F .text	0000004c alt_ic_irq_enabled
0085bee8 g     O .bss	00000001 useData
0084df3c g     F .text	000000e0 OS_FlagInit
008565cc g     F .text	0000009c alt_alarm_stop
00840d28 g     F .text	0000001c strtol
0085be5c g     O .rwdata	00000002 OSTaskIdleStkSize
0085bf2c g     O .bss	00000004 alt_irq_active
0084fa18 g     F .text	000000b0 OSSemAccept
0084e67c g     F .text	000000d8 OSMemPut
0084e1b4 g     F .text	000001d4 OSMemCreate
0085bf64 g     O .bss	00000004 OSIdleCtrMax
008547a8 g     F .text	00000044 alt_hostfs_close
010040fc g     F .exceptions	000000d4 alt_irq_handler
0085a850 g     O .rwdata	00000028 alt_dev_null
008588cc g     O .rodata	00000200 jpeg_std_message_table
0085be70 g     O .rwdata	00000002 OSTicksPerSec
0083436c g     F .text	00000008 _open_wmemstream_r
00856794 g       .text	00000000 OSIntCtxSw
00834364 g     F .text	00000008 _open_memstream_r
0082fbec g     F .text	0000031c jpeg_idct_2x4
0083e048 g     F .text	00000068 __hi0bits
008496dc g     F .text	00000080 .hidden __fixdfsi
00827bac g     F .text	00001050 jpeg_idct_16x16
008409b8 g     F .text	00000018 strtod
008138ec g     F .text	000002a0 jinit_2pass_quantizer
0085bf68 g     O .bss	00000004 OSTCBFreeList
0084ffec g     F .text	0000016c OSSemPendAbort
0085bdf8 g     O .rwdata	00000008 alt_dev_list
0080c2b4 g     F .text	00000148 jinit_merged_upsampler
0084a4ec g     F .text	00000100 write
00834418 g     F .text	000000a0 _putc_r
0085be74 g     O .rwdata	00000002 OSVersionNbr
00847788 g     F .text	000000bc .hidden __gtsf2
0085bde0 g     O .rwdata	00000004 environ
008499e8 g     F .text	000000b8 fstat
00832980 g     F .text	00000024 fprintf
00849e84 g     F .text	00000130 kill
00848cec g     F .text	000000f4 .hidden __ledf2
008013c0 g     F .text	0000003c motor_test
0085be1c g     O .rwdata	00000004 OSEndiannessTest
0083e428 g     F .text	00000140 __pow5mult
008442c4 g     F .text	0000150c ___vfiprintf_internal_r
0085bf24 g     O .bss	00000004 __nlocale_changed
00830190 g     F .text	00000058 .hidden __umodsi3
00801aa0 g     F .text	00000034 jpeg_destroy_decompress
00854fac g     F .text	00000068 epcs_read_electronic_signature
0080d9f8 g     F .text	000000c0 jpeg_std_error
0085be2e g     O .rwdata	00000002 OSFlagGrpSize
008018a8 g     F .text	000001f8 jpeg_CreateDecompress
00866338 g       *ABS*	00000000 end
0085beec g     O .bss	00000004 camQueueStatus
00858bec g     O .rodata	00000140 jpeg_natural_order
00854454 g     F .text	00000238 altera_avalon_uart_write
0080f974 g     F .text	00000024 jpeg_mem_term
00852e7c g     F .text	00000148 altera_avalon_jtag_uart_init
0084c4a4 g     F .text	000000cc OS_TaskStat
010041d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0085befc g     O .bss	00000004 SENSOR_SEM
0081e1f8 g     F .text	000001f4 jinit_d_main_controller
0082460c g     F .text	00000bb8 jpeg_idct_12x12
0085711c g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
00853abc g     F .text	0000007c alt_avalon_timer_sc_init
00853b98 g     F .text	00000060 altera_avalon_uart_write_fd
00831c3c g     F .text	00000064 .hidden __clzsi2
0080ca1c g     F .text	0000018c jinit_d_post_controller
00853bf8 g     F .text	00000050 altera_avalon_uart_close_fd
00853780 g     F .text	000002c4 altera_avalon_jtag_uart_write
00832440 g     F .text	00000004 __sfp_lock_acquire
00833b68 g     F .text	000000e4 memchr
0084c180 g     F .text	00000054 OS_MemClr
00838fb4 g     F .text	000022dc ___vfprintf_internal_r
00856864 g     F .text	0000015c OSTaskStkInit
00834e1c g     F .text	00000058 _sprintf_r
00832d38 g     F .text	00000310 _free_r
0083d73c g     F .text	00000010 __locale_mb_cur_max
0084b7f0 g     F .text	00000198 OS_EventTaskRdy
00821628 g     F .text	00000574 jpeg_idct_5x5
0083b6c8 g     F .text	00000180 __call_exitprocs
0085bf6c g     O .bss	00000001 OSCPUUsage
008111d0 g     F .text	00000148 jinit_1pass_quantizer
0080f528 g     F .text	000002c0 jinit_memory_mgr
00802214 g     F .text	0000008c jpeg_has_multiple_scans
00842b6c g     F .text	00000108 _sungetc_r
0085bf20 g     O .bss	00000004 __mlocale_changed
0085bdd4 g     O .rwdata	00000004 __malloc_sbrk_base
00800000 g     F .text	00000038 _start
0085bfa0 g     O .bss	00000004 _alt_tick_rate
0084ef38 g     F .text	0000028c OSQPend
00840d44 g     F .text	00000304 _strtoll_r
00800038 g     F .text	00000b50 camera_test
00851be4 g     F .text	00000104 OSTimeDly
0083e568 g     F .text	00000148 __lshift
00856aec g     F .text	000001fc alt_avalon_spi_command
0085bfa4 g     O .bss	00000004 _alt_nticks
0083f1f8 g     F .text	00000018 signal
0084a1c4 g     F .text	00000104 read
0081f048 g     F .text	00000b00 jpeg_idct_ifast
00852160 g     F .text	000000bc alt_sys_init
0083105c g     F .text	00000124 .hidden __floatsisf
008415fc g     F .text	000001d0 __ssprint_r
00822f44 g     F .text	00000a58 jpeg_idct_10x10
00857004 g     F .text	00000118 __register_exitproc
0085bf6d g     O .bss	00000001 OSTaskCtr
0080f8c8 g     F .text	00000030 jpeg_mem_available
008351a8 g     F .text	000000d0 strncmp
00851ce8 g     F .text	0000017c OSTimeDlyHMSM
00819bf8 g     F .text	00000104 jinit_inverse_dct
00834390 g     F .text	0000001c open_wmemstream
0083e19c g     F .text	0000028c __multiply
0085336c g     F .text	00000068 altera_avalon_jtag_uart_close
008301e8 g     F .text	00000028 .hidden __mulsi3
00835278 g     F .text	000000ec strncpy
0085bfa8 g     O .bss	00000028 __malloc_current_mallinfo
0085be22 g     O .rwdata	00000002 OSEventMax
00847710 g     F .text	00000078 .hidden __eqsf2
0083ea7c g     F .text	0000014c __d2b
00850158 g     F .text	00000110 OSSemPost
0085f014 g     O .bss	00002000 wifi_test_stk
00854b10 g     F .text	0000005c epcs_read_status_register
00802028 g     F .text	00000160 jpeg_consume_input
0084b394 g     F .text	000000dc OSSchedUnlock
0085bef0 g     O .bss	00000004 camCommandQueue
00855b34 g     F .text	00000048 fifoed_avalon_uart_classic_read
00852d18 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00841048 g     F .text	00000278 _strtoul_r
00856e80 g     F .text	000000f4 alt_get_fd
0085bf70 g     O .bss	00000004 OSMemFreeList
0084b4e0 g     F .text	000000b0 OSStatInit
00822300 g     F .text	0000023c jpeg_idct_2x2
0084dd18 g     F .text	000000c4 OSFlagQuery
00802188 g     F .text	0000008c jpeg_input_complete
00855188 g     F .text	0000025c fifoed_avalon_uart_read
0085be58 g     O .rwdata	00000002 OSTaskCreateExtEn
0083b674 g     F .text	00000054 _close_r
00855014 g     F .text	00000080 epcs_read_device_id
00817858 g     F .text	0000027c jinit_d_coef_controller
00856f88 g     F .text	0000007c memcmp
0084b7d0 g     F .text	00000020 OS_Dummy
00852dd8 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00866338 g       *ABS*	00000000 __alt_stack_base
00852e28 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
01009000 g       *ABS*	00000000 __alt_mem_epcs_flash_controller_0
00834ee0 g     F .text	0000007c sscanf
0083b520 g     F .text	00000154 __swsetup_r
008648b4 g     O .bss	000001e0 OSQTbl
008481b8 g     F .text	000009d0 .hidden __divdf3
00832300 g     F .text	00000118 __sfp
0083ece0 g     F .text	00000078 __copybits
0085a3d0 g     O .rwdata	00000408 __malloc_av_
0083244c g     F .text	00000004 __sinit_lock_release
0085bf74 g     O .bss	00000004 OSTCBHighRdy
00831180 g     F .text	0000086c .hidden __muldf3
00834fd4 g     F .text	00000054 __sread
00832be0 g     F .text	00000034 fread
0085bf78 g     O .bss	00000004 OSQFreeList
00856d78 g     F .text	00000108 alt_find_file
0081d224 g     F .text	000001d0 jinit_huff_decoder
00855eac g     F .text	000000a4 alt_dev_llist_insert
0084a710 g     F .text	00000120 __malloc_lock
00832958 g     F .text	00000028 _fprintf_r
0084a34c g     F .text	000000b0 sbrk
00835364 g     F .text	000022bc ___svfprintf_internal_r
0084aa1c g     F .text	00000140 OSEventNameSet
00832044 g     F .text	0000005c _fflush_r
008458a8 g     F .text	000000dc _calloc_r
0085bf7c g     O .bss	00000001 OSRdyGrp
0085bed4 g     O .rwdata	00000008 alt_flash_dev_list
0085bee4 g       *ABS*	00000000 __bss_start
00833d94 g     F .text	00000128 memset
00801464 g     F .text	0000026c main
0080a344 g     F .text	000000d0 jpeg_set_marker_processor
00813d50 g     F .text	000000a4 jpeg_abort
0085bf38 g     O .bss	00000004 alt_envp
0085bf08 g     O .bss	00000004 __malloc_max_total_mem
00852d78 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0083b4a8 g     F .text	00000018 __swbuf
00859e28 g     O .rodata	00000100 OSUnMapTbl
00847844 g     F .text	000000c8 .hidden __ltsf2
008329a4 g     F .text	0000023c _fread_r
00801f30 g     F .text	000000f8 jpeg_read_header
0085be52 g     O .rwdata	00000002 OSSemEn
0084d984 g     F .text	00000394 OSFlagPost
00835108 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
00831e14 g     F .text	00000014 fclose
0084b988 g     F .text	00000110 OS_EventTaskWait
00813e50 g     F .text	00000054 jpeg_alloc_quant_table
00840ad0 g     F .text	00000258 _strtol_r
00831a94 g     F .text	000001a8 .hidden __truncdfsf2
008553e4 g     F .text	00000238 fifoed_avalon_uart_write
00833214 g     F .text	00000104 _findenv_r
0084c570 g     F .text	000000cc OS_TaskStatStkChk
0085103c g     F .text	00000150 OSTaskDelReq
0083ba88 g     F .text	00001688 _dtoa_r
0083335c g     F .text	0000080c _malloc_r
00846944 g     F .text	00000030 __ascii_wctomb
0085be04 g     O .rwdata	00000004 alt_errno
0084b470 g     F .text	00000070 OSStart
0080f858 g     F .text	00000034 jpeg_get_large
00843f30 g     F .text	000000d4 __submore
0082a604 g     F .text	000008f4 jpeg_idct_12x6
0083f210 g     F .text	00000010 _init_signal
0084a6b0 g     F .text	00000060 __env_unlock
008331d0 g     F .text	00000018 _findenv
00833048 g     F .text	000000c4 _fwalk
008514d8 g     F .text	000001d4 OSTaskResume
0084e754 g     F .text	000000e8 OSMemQuery
0085be64 g     O .rwdata	00000002 OSTaskStatEn
0083db74 g     F .text	0000005c _mbtowc_r
0085be3e g     O .rwdata	00000002 OSMemMax
0084f498 g     F .text	00000170 OSQPostFront
008344b8 g     F .text	000000c8 putc
00830034 g     F .text	00000084 .hidden __divsi3
0085bf7d g     O .bss	00000003 OSRdyTbl
0085be18 g     O .rwdata	00000002 OSDebugEn
008022a0 g     F .text	0000016c jpeg_finish_decompress
00832c14 g     F .text	00000124 _malloc_trim_r
0085711c g       *ABS*	00000000 __CTOR_END__
00809e18 g     F .text	000001e8 jpeg_resync_to_restart
008306d8 g     F .text	00000430 .hidden __mulsf3
0085be30 g     O .rwdata	00000002 OSFlagNodeSize
00802eb8 g     F .text	00000110 jpeg_stdio_src
0085be78 g     O .rwdata	00000002 OSTmrCfgMax
00852788 g     F .text	00000260 alt_epcs_flash_write
0083f294 g     F .text	000000dc strcmp
0084ea54 g     F .text	000001ac OSQCreate
0085118c g     F .text	00000198 OSTaskNameGet
0084f608 g     F .text	0000020c OSQPostOpt
0084b590 g     F .text	00000220 OSTimeTick
0085bef4 g     O .bss	00000004 camPackageQueue
0085be60 g     O .rwdata	00000002 OSTaskMax
0085711c g       *ABS*	00000000 __DTOR_LIST__
0084fac8 g     F .text	000000d8 OSSemCreate
0085be84 g     O .rwdata	00000002 OSTmrWheelSize
00855c24 g     F .text	00000060 fifoed_avalon_uart_write_fd
00848b88 g     F .text	00000088 .hidden __nedf2
0085be5a g     O .rwdata	00000002 OSTaskDelEn
00850268 g     F .text	00000110 OSSemQuery
0084ec00 g     F .text	00000280 OSQDel
0084f1c4 g     F .text	0000016c OSQPendAbort
00852128 g     F .text	00000038 alt_irq_init
0084a2c8 g     F .text	00000084 alt_release_fd
00834e74 g     F .text	0000006c sprintf
008596cc g     O .rodata	00000100 .hidden __clz_tab
0085bf1c g     O .bss	00000004 _PathLocale
008409d0 g     F .text	00000100 strtof
00856f74 g     F .text	00000014 atexit
0080f88c g     F .text	0000003c jpeg_free_large
00847788 g     F .text	000000bc .hidden __gesf2
0083b4c0 g     F .text	00000060 _write_r
00859024 g     O .rodata	00000064 jpeg_natural_order3
0084b308 g     F .text	0000008c OSSchedLock
0083d76c g     F .text	00000018 setlocale
008013fc g     F .text	00000068 sensor_interrupt
0084cda8 g     F .text	00000108 OSFlagCreate
0083ef88 g     F .text	00000008 nanf
0085bdd0 g     O .rwdata	00000004 _impure_ptr
0085bf30 g     O .bss	00000004 alt_argc
00831e28 g     F .text	0000021c __sflush_r
0083d9ac g     F .text	000000ac _mbrtowc_r
00855fb0 g     F .text	00000060 _do_dtors
0083d758 g     F .text	00000008 __locale_cjk_lang
0085be2a g     O .rwdata	00000002 OSEventMultiEn
0082d2c4 g     F .text	00000aec jpeg_idct_7x14
00834bf4 g     F .text	000001d4 __srefill_r
0084ceb0 g     F .text	00000248 OSFlagDel
0085bf80 g     O .bss	00000004 OSEventFreeList
01004020 g       .exceptions	00000000 alt_irq_entry
0083db30 g     F .text	00000044 __ascii_mbtowc
0083e90c g     F .text	00000064 __ulp
0084d36c g     F .text	000005b8 OSFlagPend
0085be76 g     O .rwdata	00000002 OSTmrEn
00832468 g     F .text	00000018 __fp_unlock_all
00861014 g     O .bss	00002000 camera_test_stk
0082bd7c g     F .text	00000488 jpeg_idct_6x3
0085bdf0 g     O .rwdata	00000008 alt_fs_list
0082078c g     F .text	0000088c jpeg_idct_7x7
0084c380 g     F .text	00000074 OS_StrCopy
00858d2c g     O .rodata	00000104 jpeg_natural_order7
00854858 g     F .text	0000006c alt_hostfs_write
0080a068 g     F .text	00000128 jinit_marker_reader
0085be40 g     O .rwdata	00000002 OSMemNameSize
0085d000 g     O .bss	00000012 color_region
00856a88 g     F .text	00000020 OSInitHookEnd
00842de4 g     F .text	0000114c __ssvfiscanf_r
0085be6c g     O .rwdata	00000002 OSTCBPrioTblMax
0083d784 g     F .text	0000000c localeconv
00854cdc g     F .text	000000f4 epcs_read_buffer
0085be68 g     O .rwdata	00000002 OSTaskStatStkChkEn
0082ff08 g     F .text	0000012c jpeg_idct_1x2
00852250 g     F .text	00000054 alt_epcs_flash_init
00849ac0 g     F .text	00000050 alt_ic_isr_register
0085be3c g     O .rwdata	00000002 OSMemEn
0080287c g     F .text	00000194 jpeg_read_raw_data
00834f5c g     F .text	00000078 _sscanf_r
0085be46 g     O .rwdata	00000002 OSMutexEn
0085bee4 g       *ABS*	00000000 _edata
00815d14 g     F .text	00000180 jinit_arith_decoder
00853b38 g     F .text	00000060 altera_avalon_uart_read_fd
0082b6d0 g     F .text	000006ac jpeg_idct_8x4
00800ddc g     F .text	00000054 button_interrupt
00866338 g       *ABS*	00000000 _end
0082c4f0 g     F .text	00000128 jpeg_idct_2x1
00856010 g     F .text	00000068 alt_flash_open_dev
0085bf84 g     O .bss	00000001 OSIntNesting
00845984 g     F .text	00000164 __fputwc
008533d4 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
00851e64 g     F .text	000001d4 OSTimeDlyResume
0084d220 g     F .text	0000014c OSFlagNameSet
008516ac g     F .text	000001c0 OSTaskStkChk
00849b98 g     F .text	0000008c alt_ic_irq_disable
00855094 g     F .text	0000005c epcs_enter_4_bytes_mode
0085be42 g     O .rwdata	00000002 OSMemSize
00835030 g     F .text	0000007c __swrite
0085bdd8 g     O .rwdata	00000004 __malloc_trim_threshold
0083d74c g     F .text	0000000c __locale_msgcharset
00821b9c g     F .text	00000428 jpeg_idct_4x4
0085bf88 g     O .bss	00000004 OSTCBCur
00831cec g     F .text	00000038 exit
0085be44 g     O .rwdata	00000002 OSMemTblSize
0083310c g     F .text	000000c4 _fwalk_reent
0083e710 g     F .text	000001fc __mdiff
00856078 g     F .text	00000054 alt_flash_close_dev
008300b8 g     F .text	00000074 .hidden __modsi3
0085bddc g     O .rwdata	00000004 __ctype_ptr__
01000000 g       *ABS*	00000000 __alt_data_end
01004020 g     F .exceptions	00000000 alt_exception
00832444 g     F .text	00000004 __sfp_lock_release
0085bef8 g     O .bss	00000004 BUTTON_SEM
0084b16c g     F .text	00000058 OSInit
00851a50 g     F .text	00000124 OSTaskQuery
0084f970 g     F .text	000000a8 OS_QInit
0083eeb8 g     F .text	000000d0 __sccl
0084c3f4 g     F .text	00000054 OS_StrLen
0084e568 g     F .text	00000114 OSMemNameSet
00859880 g     O .rodata	00000101 _ctype_
0085be5e g     O .rwdata	00000002 OSTaskProfileEn
0085bf8c g     O .bss	00000004 OSTime
0085bde8 g     O .rwdata	00000004 __mbtowc
00854120 g     F .text	00000054 altera_avalon_uart_close
00864a94 g     O .bss	00000800 OSTaskIdleStk
0080a190 g     F .text	000001b4 jpeg_save_markers
00849978 g     F .text	00000034 _exit
00855d44 g     F .text	0000012c alt_alarm_start
0084d0f8 g     F .text	00000128 OSFlagNameGet
00852038 g     F .text	0000005c OSTimeGet
008469d0 g     F .text	0000010c .hidden __muldi3
0083d7f0 g     F .text	000001bc __smakebuf_r
00835110 g     F .text	00000098 strlen
00854dd0 g     F .text	00000054 epcs_write_enable
0083ef90 g     F .text	0000006c _init_signal_r
00856a08 g     F .text	00000020 OSTaskSwHook
00856470 g     F .text	0000015c open
00800b88 g     F .text	000001c4 cam_send_command
00865294 g     O .bss	00000b40 OSEventTbl
00848c10 g     F .text	000000dc .hidden __gedf2
00865dd4 g     O .bss	00000510 OSTCBTbl
00845ce8 g     F .text	00000850 __gethex
00850378 g     F .text	00000100 OSSemSet
00831ca0 g     F .text	0000004c clock
00813d04 g     F .text	0000004c jcopy_block_row
0085bdec g     O .rwdata	00000004 __wctomb
008442ac g     F .text	00000018 __sprint_r
0085be08 g     O .rwdata	00000004 alt_priority_mask
0084fba0 g     F .text	00000240 OSSemDel
00832714 g     F .text	00000228 _fmemopen_r
0085bf90 g     O .bss	00000004 OSFlagFreeList
00849b10 g     F .text	00000088 alt_ic_irq_enable
0085be24 g     O .rwdata	00000002 OSEventNameSize
0080f81c g     F .text	0000003c jpeg_free_small
0083b290 g     F .text	0000001c __vfprintf_internal
0085bf94 g     O .bss	00000001 OSStatRdy
00802ae4 g     F .text	00000118 jpeg_finish_output
008016d0 g     F .text	00000084 wifi_test
008662e4 g     O .bss	00000054 OSTCBPrioTbl
008541b0 g     F .text	00000268 altera_avalon_uart_read
00846974 g     F .text	0000005c _wctomb_r
0084a5ec g     F .text	000000c4 __env_lock
0085be6a g     O .rwdata	00000002 OSTaskSwHookEn
00848de0 g     F .text	000008fc .hidden __subdf3
00802a10 g     F .text	000000d4 jpeg_start_output
00852c80 g     F .text	00000098 alt_epcs_flash_read
0083e0b0 g     F .text	000000b0 __lo0bits
0085bedc g     O .rwdata	00000008 alt_alarm_list
00844004 g     F .text	00000194 _ungetc_r
0085be32 g     O .rwdata	00000002 OSFlagWidth
00855f50 g     F .text	00000060 _do_ctors
0083f220 g     F .text	00000014 __sigtramp
00846884 g     F .text	000000c0 wcrtomb
00849874 g     F .text	000000d8 close
00800d4c g     F .text	00000090 cam_uart_interrupt
00830210 g     F .text	000004c8 .hidden __addsf3
0082aef8 g     F .text	000007d8 jpeg_idct_10x5
0085bf40 g     O .bss	00000004 alt_envsem
00859088 g     O .rodata	00000050 jpeg_natural_order2
0085bf98 g     O .bss	00000004 OSIdleCtrRun
0084b7b0 g     F .text	00000020 OSVersion
0085be7c g     O .rwdata	00000002 OSTmrCfgWheelSize
00851b74 g     F .text	00000070 OS_TaskStkClr
0085be56 g     O .rwdata	00000002 OSTaskCreateEn
0083293c g     F .text	0000001c fmemopen
008559d4 g     F .text	00000160 fifoed_avalon_uart_init
008225f4 g     F .text	00000950 jpeg_idct_9x9
0084bda0 g     F .text	00000068 OS_EventWaitListInit
00845b0c g     F .text	00000080 fputwc
0083f1e4 g     F .text	00000014 raise
00856aa8 g     F .text	00000020 OSTaskIdleHook
0080d2b0 g     F .text	000003d0 jinit_upsampler
00833348 g     F .text	00000014 free
00832448 g     F .text	00000004 __sinit_lock_acquire
00854e90 g     F .text	0000011c epcs_write_buffer
0083ddfc g     F .text	00000148 __multadd
0085186c g     F .text	000001e4 OSTaskSuspend
0083ddd4 g     F .text	00000028 _Bfree
00833318 g     F .text	0000001c _getenv_r
0085492c g     F .text	000001e4 alt_hostfs_fstat
0084c448 g     F .text	0000005c OS_TaskIdle
0085be82 g     O .rwdata	00000002 OSTmrTblSize
0084f814 g     F .text	0000015c OSQQuery



Disassembly of section .exceptions:

01004020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 1004020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 1004024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 1004028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 100402c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 1004030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 1004034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 1004038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 100403c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 1004040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 1004044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 1004048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 100404c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 1004050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 1004054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 1004058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 100405c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 1004060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 1004064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 1004068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 100406c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 1004070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 1004074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 1004078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 100407c:	10000326 	beq	r2,zero,100408c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 1004080:	20000226 	beq	r4,zero,100408c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 1004084:	10040fc0 	call	10040fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 1004088:	00000706 	br	10040a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 100408c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 1004090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 1004094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 1004098:	10041d00 	call	10041d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 100409c:	1000021e 	bne	r2,zero,10040a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 10040a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 10040a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 10040a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 10040ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 10040b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 10040b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 10040b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 10040bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 10040c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 10040c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 10040c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 10040cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 10040d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 10040d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 10040d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 10040dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 10040e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 10040e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 10040e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 10040ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 10040f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 10040f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 10040f8:	ef80083a 	eret

010040fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 10040fc:	defff904 	addi	sp,sp,-28
 1004100:	dfc00615 	stw	ra,24(sp)
 1004104:	df000515 	stw	fp,20(sp)
 1004108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 100410c:	084b1c40 	call	84b1c4 <OSIntEnter>
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 1004110:	0005313a 	rdctl	r2,ipending
 1004114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 1004118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 100411c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 1004120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 1004124:	00800044 	movi	r2,1
 1004128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 100412c:	e0fffb17 	ldw	r3,-20(fp)
 1004130:	e0bffc17 	ldw	r2,-16(fp)
 1004134:	1884703a 	and	r2,r3,r2
 1004138:	10001426 	beq	r2,zero,100418c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 100413c:	008021b4 	movhi	r2,134
 1004140:	108c0504 	addi	r2,r2,12308
 1004144:	e0fffd17 	ldw	r3,-12(fp)
 1004148:	180690fa 	slli	r3,r3,3
 100414c:	10c5883a 	add	r2,r2,r3
 1004150:	10c00017 	ldw	r3,0(r2)
 1004154:	008021b4 	movhi	r2,134
 1004158:	108c0504 	addi	r2,r2,12308
 100415c:	e13ffd17 	ldw	r4,-12(fp)
 1004160:	200890fa 	slli	r4,r4,3
 1004164:	1105883a 	add	r2,r2,r4
 1004168:	10800104 	addi	r2,r2,4
 100416c:	10800017 	ldw	r2,0(r2)
 1004170:	1009883a 	mov	r4,r2
 1004174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 1004178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 100417c:	0005313a 	rdctl	r2,ipending
 1004180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 1004184:	e0bfff17 	ldw	r2,-4(fp)
 1004188:	00000706 	br	10041a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 100418c:	e0bffc17 	ldw	r2,-16(fp)
 1004190:	1085883a 	add	r2,r2,r2
 1004194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 1004198:	e0bffd17 	ldw	r2,-12(fp)
 100419c:	10800044 	addi	r2,r2,1
 10041a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 10041a4:	003fe106 	br	100412c <__alt_mem_epcs_flash_controller_0+0xffffb12c>

    active = alt_irq_pending ();
 10041a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 10041ac:	e0bffb17 	ldw	r2,-20(fp)
 10041b0:	103fdb1e 	bne	r2,zero,1004120 <__alt_mem_epcs_flash_controller_0+0xffffb120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 10041b4:	084b2100 	call	84b210 <OSIntExit>
}
 10041b8:	0001883a 	nop
 10041bc:	e037883a 	mov	sp,fp
 10041c0:	dfc00117 	ldw	ra,4(sp)
 10041c4:	df000017 	ldw	fp,0(sp)
 10041c8:	dec00204 	addi	sp,sp,8
 10041cc:	f800283a 	ret

010041d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 10041d0:	defffb04 	addi	sp,sp,-20
 10041d4:	dfc00415 	stw	ra,16(sp)
 10041d8:	df000315 	stw	fp,12(sp)
 10041dc:	df000304 	addi	fp,sp,12
 10041e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 10041e4:	00bfffc4 	movi	r2,-1
 10041e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 10041ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 10041f0:	d0a0a917 	ldw	r2,-32092(gp)
 10041f4:	10000726 	beq	r2,zero,1004214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 10041f8:	d0a0a917 	ldw	r2,-32092(gp)
 10041fc:	e0fffd17 	ldw	r3,-12(fp)
 1004200:	e1bffe17 	ldw	r6,-8(fp)
 1004204:	e17fff17 	ldw	r5,-4(fp)
 1004208:	1809883a 	mov	r4,r3
 100420c:	103ee83a 	callr	r2
 1004210:	00000206 	br	100421c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 1004214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 1004218:	0005883a 	mov	r2,zero
}
 100421c:	e037883a 	mov	sp,fp
 1004220:	dfc00117 	ldw	ra,4(sp)
 1004224:	df000017 	ldw	fp,0(sp)
 1004228:	dec00204 	addi	sp,sp,8
 100422c:	f800283a 	ret

Disassembly of section .text:

00800000 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800000:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  800004:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  800008:	068021b4 	movhi	gp,134
    ori gp, gp, %lo(_gp)
  80000c:	d68f3e14 	ori	gp,gp,15608
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800010:	00802174 	movhi	r2,133
    ori r2, r2, %lo(__bss_start)
  800014:	10afb914 	ori	r2,r2,48868

    movhi r3, %hi(__bss_end)
  800018:	00c021b4 	movhi	r3,134
    ori r3, r3, %lo(__bss_end)
  80001c:	18d8ce14 	ori	r3,r3,25400

    beq r2, r3, 1f
  800020:	10c00326 	beq	r2,r3,800030 <_start+0x30>

0:
    stw zero, (r2)
  800024:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  800028:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  80002c:	10fffd36 	bltu	r2,r3,800024 <__alt_mem_epcs_flash_controller_0+0xff7f7024>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800030:	084a0cc0 	call	84a0cc <alt_main>

00800034 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  800034:	003fff06 	br	800034 <__alt_mem_epcs_flash_controller_0+0xff7f7034>

00800038 <camera_test>:
 * camera will take a picture and output the average color
 * value to the terminal. Operator will switch the image and
 * press the button again. A different average color should
 * appear in the terminal. Repeat as needed.
 */
void camera_test(void* pdata){
  800038:	defff104 	addi	sp,sp,-60
  80003c:	dfc00e15 	stw	ra,56(sp)
  800040:	df000d15 	stw	fp,52(sp)
  800044:	df000d04 	addi	fp,sp,52
  800048:	e13fff15 	stw	r4,-4(fp)

	uint32_t *leds = GREEN_LEDS_BASE;
  80004c:	00804074 	movhi	r2,257
  800050:	10a83004 	addi	r2,r2,-24384
  800054:	e0bff915 	stw	r2,-28(fp)

	uint16_t q = 0;
  800058:	e03ff30d 	sth	zero,-52(fp)
	uint16_t z = 0;
  80005c:	e03ff38d 	sth	zero,-50(fp)
	uint8_t err;

	uint8_t cam_reply = 0;
  800060:	e03ff405 	stb	zero,-48(fp)
	uint16_t bit_count = 0;
  800064:	e03ffa0d 	sth	zero,-24(fp)
	uint16_t packet_count = 0;
  800068:	e03ff48d 	sth	zero,-46(fp)
	uint16_t last_packet_byte_count = 0;
  80006c:	e03ff50d 	sth	zero,-44(fp)

	bool isGoodPacket = FALSE;
  800070:	e03ff585 	stb	zero,-42(fp)
	uint32_t checksum = 0;
  800074:	e03ff615 	stw	zero,-40(fp)
	uint32_t tempsum = 0;
  800078:	e03ff715 	stw	zero,-36(fp)
	uint16_t data_length = 0;
  80007c:	e03ff80d 	sth	zero,-32(fp)
	uint8_t cam_data_ack[CAM_COMMAND_LENGTH];

	char* pic_location;
	size_t pic_size;
	static FILE* picture;
	picture = open_memstream(&pic_location, &pic_size);
  800080:	e0fffe04 	addi	r3,fp,-8
  800084:	e0bffd04 	addi	r2,fp,-12
  800088:	180b883a 	mov	r5,r3
  80008c:	1009883a 	mov	r4,r2
  800090:	08343740 	call	834374 <open_memstream>
  800094:	d0a07b15 	stw	r2,-32276(gp)

	uint8_t sync_delay = CAM_INIT_SYNC_DELAY;
  800098:	00800144 	movi	r2,5
  80009c:	e0bff885 	stb	r2,-30(fp)
	bool synced = FALSE;
  8000a0:	e03ff8c5 	stb	zero,-29(fp)

//	printf("Starting to open...");
//	picture = fopen(CAM_PICTURE_OUTPUT, "w");
//	printf(" and done\n");

	for(q = 0; q< CAM_COMMAND_LENGTH; q++){
  8000a4:	e03ff30d 	sth	zero,-52(fp)
  8000a8:	00000b06 	br	8000d8 <camera_test+0xa0>
		cam_data_ack[q] = CAM_ACK_DATA[q];
  8000ac:	e0bff30b 	ldhu	r2,-52(fp)
  8000b0:	e13ff30b 	ldhu	r4,-52(fp)
  8000b4:	d0e01204 	addi	r3,gp,-32696
  8000b8:	20c7883a 	add	r3,r4,r3
  8000bc:	18c00003 	ldbu	r3,0(r3)
  8000c0:	e13ffac4 	addi	r4,fp,-21
  8000c4:	2085883a 	add	r2,r4,r2
  8000c8:	10c00005 	stb	r3,0(r2)

//	printf("Starting to open...");
//	picture = fopen(CAM_PICTURE_OUTPUT, "w");
//	printf(" and done\n");

	for(q = 0; q< CAM_COMMAND_LENGTH; q++){
  8000cc:	e0bff30b 	ldhu	r2,-52(fp)
  8000d0:	10800044 	addi	r2,r2,1
  8000d4:	e0bff30d 	sth	r2,-52(fp)
  8000d8:	e0bff30b 	ldhu	r2,-52(fp)
  8000dc:	108001b0 	cmpltui	r2,r2,6
  8000e0:	103ff21e 	bne	r2,zero,8000ac <__alt_mem_epcs_flash_controller_0+0xff7f70ac>
		cam_data_ack[q] = CAM_ACK_DATA[q];
	}

	//Reset to deal with any junk transmissions
	for (z = 0; z < CAM_COMMAND_LENGTH; z++){
  8000e4:	e03ff38d 	sth	zero,-50(fp)
  8000e8:	00001106 	br	800130 <camera_test+0xf8>
		while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
  8000ec:	0001883a 	nop
  8000f0:	00804074 	movhi	r2,257
  8000f4:	10a80204 	addi	r2,r2,-24568
  8000f8:	10800037 	ldwio	r2,0(r2)
  8000fc:	1080100c 	andi	r2,r2,64
  800100:	103ffb26 	beq	r2,zero,8000f0 <__alt_mem_epcs_flash_controller_0+0xff7f70f0>
		IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, CAM_REST[z]);
  800104:	e0fff38b 	ldhu	r3,-50(fp)
  800108:	d0a00184 	addi	r2,gp,-32762
  80010c:	1885883a 	add	r2,r3,r2
  800110:	10800003 	ldbu	r2,0(r2)
  800114:	10c03fcc 	andi	r3,r2,255
  800118:	00804074 	movhi	r2,257
  80011c:	10a80104 	addi	r2,r2,-24572
  800120:	10c00035 	stwio	r3,0(r2)
	for(q = 0; q< CAM_COMMAND_LENGTH; q++){
		cam_data_ack[q] = CAM_ACK_DATA[q];
	}

	//Reset to deal with any junk transmissions
	for (z = 0; z < CAM_COMMAND_LENGTH; z++){
  800124:	e0bff38b 	ldhu	r2,-50(fp)
  800128:	10800044 	addi	r2,r2,1
  80012c:	e0bff38d 	sth	r2,-50(fp)
  800130:	e0bff38b 	ldhu	r2,-50(fp)
  800134:	108001b0 	cmpltui	r2,r2,6
  800138:	103fec1e 	bne	r2,zero,8000ec <__alt_mem_epcs_flash_controller_0+0xff7f70ec>
	* Documentation mentions this will take 25-60 attempts
	* Recommends an increasing delay between attempts
	* with an initial time of 5ms
	*/

	useData = FALSE;
  80013c:	d0207c05 	stb	zero,-32272(gp)
	for (q=0; q < CAM_MAX_ATTEMPTS; q++){
  800140:	e03ff30d 	sth	zero,-52(fp)
  800144:	00006406 	br	8002d8 <camera_test+0x2a0>
		//Assume false until proven otherwise
		synced = FALSE;
  800148:	e03ff8c5 	stb	zero,-29(fp)

		//Send the sync command
		for (z=0; z < CAM_COMMAND_LENGTH; z++){
  80014c:	e03ff38d 	sth	zero,-50(fp)
  800150:	00001106 	br	800198 <camera_test+0x160>
			while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
  800154:	0001883a 	nop
  800158:	00804074 	movhi	r2,257
  80015c:	10a80204 	addi	r2,r2,-24568
  800160:	10800037 	ldwio	r2,0(r2)
  800164:	1080100c 	andi	r2,r2,64
  800168:	103ffb26 	beq	r2,zero,800158 <__alt_mem_epcs_flash_controller_0+0xff7f7158>
			IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, CAM_SYNC[z]);
  80016c:	e0fff38b 	ldhu	r3,-50(fp)
  800170:	d0a00004 	addi	r2,gp,-32768
  800174:	1885883a 	add	r2,r3,r2
  800178:	10800003 	ldbu	r2,0(r2)
  80017c:	10c03fcc 	andi	r3,r2,255
  800180:	00804074 	movhi	r2,257
  800184:	10a80104 	addi	r2,r2,-24572
  800188:	10c00035 	stwio	r3,0(r2)
	for (q=0; q < CAM_MAX_ATTEMPTS; q++){
		//Assume false until proven otherwise
		synced = FALSE;

		//Send the sync command
		for (z=0; z < CAM_COMMAND_LENGTH; z++){
  80018c:	e0bff38b 	ldhu	r2,-50(fp)
  800190:	10800044 	addi	r2,r2,1
  800194:	e0bff38d 	sth	r2,-50(fp)
  800198:	e0bff38b 	ldhu	r2,-50(fp)
  80019c:	108001b0 	cmpltui	r2,r2,6
  8001a0:	103fec1e 	bne	r2,zero,800154 <__alt_mem_epcs_flash_controller_0+0xff7f7154>
			while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
			IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, CAM_SYNC[z]);
		}

		//Wait the recommended sync time as per doc
		OSTimeDlyHMSM(0, 0, 0, sync_delay);
  8001a4:	e0bff883 	ldbu	r2,-30(fp)
  8001a8:	100f883a 	mov	r7,r2
  8001ac:	000d883a 	mov	r6,zero
  8001b0:	000b883a 	mov	r5,zero
  8001b4:	0009883a 	mov	r4,zero
  8001b8:	0851ce80 	call	851ce8 <OSTimeDlyHMSM>

		cam_reply = (uint8_t)OSQAccept(camCommandQueue, &err);
  8001bc:	d0a07e17 	ldw	r2,-32264(gp)
  8001c0:	e0fffa84 	addi	r3,fp,-22
  8001c4:	180b883a 	mov	r5,r3
  8001c8:	1009883a 	mov	r4,r2
  8001cc:	084e9140 	call	84e914 <OSQAccept>
  8001d0:	e0bff405 	stb	r2,-48(fp)
		if (cam_reply == CAM_ACK_SYNC[0]){
  8001d4:	00bfea84 	movi	r2,-86
  8001d8:	10c03fcc 	andi	r3,r2,255
  8001dc:	e0bff403 	ldbu	r2,-48(fp)
  8001e0:	1880351e 	bne	r3,r2,8002b8 <camera_test+0x280>
			synced = TRUE;
  8001e4:	00800044 	movi	r2,1
  8001e8:	e0bff8c5 	stb	r2,-29(fp)
			printf("Receiving %x", cam_reply);
  8001ec:	e0bff403 	ldbu	r2,-48(fp)
  8001f0:	100b883a 	mov	r5,r2
  8001f4:	01002174 	movhi	r4,133
  8001f8:	211c4d04 	addi	r4,r4,28980
  8001fc:	08343dc0 	call	8343dc <printf>
			for (z=1; z < CAM_COMMAND_LENGTH; z++){
  800200:	00800044 	movi	r2,1
  800204:	e0bff38d 	sth	r2,-50(fp)
  800208:	00002606 	br	8002a4 <camera_test+0x26c>
				cam_reply = (uint8_t)OSQPend(camCommandQueue, 0, &err);
  80020c:	d0a07e17 	ldw	r2,-32264(gp)
  800210:	e0fffa84 	addi	r3,fp,-22
  800214:	180d883a 	mov	r6,r3
  800218:	000b883a 	mov	r5,zero
  80021c:	1009883a 	mov	r4,r2
  800220:	084ef380 	call	84ef38 <OSQPend>
  800224:	e0bff405 	stb	r2,-48(fp)
				if ((cam_reply != CAM_ACK_SYNC[z]) && (z != CAM_ACK_IGNORE)){
  800228:	e0fff38b 	ldhu	r3,-50(fp)
  80022c:	d0a00a84 	addi	r2,gp,-32726
  800230:	1885883a 	add	r2,r3,r2
  800234:	10800003 	ldbu	r2,0(r2)
  800238:	10c03fcc 	andi	r3,r2,255
  80023c:	e0bff403 	ldbu	r2,-48(fp)
  800240:	18801026 	beq	r3,r2,800284 <camera_test+0x24c>
  800244:	e0bff38b 	ldhu	r2,-50(fp)
  800248:	108000e0 	cmpeqi	r2,r2,3
  80024c:	10000d1e 	bne	r2,zero,800284 <camera_test+0x24c>
					printf("Got %x expected %x\n", cam_reply, CAM_ACK_SYNC[z]);
  800250:	e13ff403 	ldbu	r4,-48(fp)
  800254:	e0fff38b 	ldhu	r3,-50(fp)
  800258:	d0a00a84 	addi	r2,gp,-32726
  80025c:	1885883a 	add	r2,r3,r2
  800260:	10800003 	ldbu	r2,0(r2)
  800264:	10803fcc 	andi	r2,r2,255
  800268:	100d883a 	mov	r6,r2
  80026c:	200b883a 	mov	r5,r4
  800270:	01002174 	movhi	r4,133
  800274:	211c5104 	addi	r4,r4,28996
  800278:	08343dc0 	call	8343dc <printf>
					synced = FALSE;
  80027c:	e03ff8c5 	stb	zero,-29(fp)
					break;
  800280:	00000b06 	br	8002b0 <camera_test+0x278>
				}else{
					printf(" %x", cam_reply);
  800284:	e0bff403 	ldbu	r2,-48(fp)
  800288:	100b883a 	mov	r5,r2
  80028c:	01002174 	movhi	r4,133
  800290:	211c5604 	addi	r4,r4,29016
  800294:	08343dc0 	call	8343dc <printf>

		cam_reply = (uint8_t)OSQAccept(camCommandQueue, &err);
		if (cam_reply == CAM_ACK_SYNC[0]){
			synced = TRUE;
			printf("Receiving %x", cam_reply);
			for (z=1; z < CAM_COMMAND_LENGTH; z++){
  800298:	e0bff38b 	ldhu	r2,-50(fp)
  80029c:	10800044 	addi	r2,r2,1
  8002a0:	e0bff38d 	sth	r2,-50(fp)
  8002a4:	e0bff38b 	ldhu	r2,-50(fp)
  8002a8:	108001b0 	cmpltui	r2,r2,6
  8002ac:	103fd71e 	bne	r2,zero,80020c <__alt_mem_epcs_flash_controller_0+0xff7f720c>
					break;
				}else{
					printf(" %x", cam_reply);
				}
			}
			printf("\n");
  8002b0:	01000284 	movi	r4,10
  8002b4:	08345880 	call	834588 <putchar>
		}

		if (synced){
  8002b8:	e0bff8c3 	ldbu	r2,-29(fp)
  8002bc:	10000a1e 	bne	r2,zero,8002e8 <camera_test+0x2b0>
			break;
		}else{
			sync_delay++;
  8002c0:	e0bff883 	ldbu	r2,-30(fp)
  8002c4:	10800044 	addi	r2,r2,1
  8002c8:	e0bff885 	stb	r2,-30(fp)
	* Recommends an increasing delay between attempts
	* with an initial time of 5ms
	*/

	useData = FALSE;
	for (q=0; q < CAM_MAX_ATTEMPTS; q++){
  8002cc:	e0bff30b 	ldhu	r2,-52(fp)
  8002d0:	10800044 	addi	r2,r2,1
  8002d4:	e0bff30d 	sth	r2,-52(fp)
  8002d8:	e0bff30b 	ldhu	r2,-52(fp)
  8002dc:	10800f30 	cmpltui	r2,r2,60
  8002e0:	103f991e 	bne	r2,zero,800148 <__alt_mem_epcs_flash_controller_0+0xff7f7148>
  8002e4:	00000106 	br	8002ec <camera_test+0x2b4>
			}
			printf("\n");
		}

		if (synced){
			break;
  8002e8:	0001883a 	nop
		}else{
			sync_delay++;
		}
	}

	if (synced){
  8002ec:	e0bff8c3 	ldbu	r2,-29(fp)
  8002f0:	10000b26 	beq	r2,zero,800320 <camera_test+0x2e8>
		printf("Cam synced after %i attempts\n", sync_delay);
  8002f4:	e0bff883 	ldbu	r2,-30(fp)
  8002f8:	100b883a 	mov	r5,r2
  8002fc:	01002174 	movhi	r4,133
  800300:	211c5704 	addi	r4,r4,29020
  800304:	08343dc0 	call	8343dc <printf>
		*leds = *leds ^ 0xFF;
  800308:	e0bff917 	ldw	r2,-28(fp)
  80030c:	10800017 	ldw	r2,0(r2)
  800310:	10c03fdc 	xori	r3,r2,255
  800314:	e0bff917 	ldw	r2,-28(fp)
  800318:	10c00015 	stw	r3,0(r2)
  80031c:	00000506 	br	800334 <camera_test+0x2fc>
	}else{
		printf("Cam sync failure after %i attempts\n", sync_delay);
  800320:	e0bff883 	ldbu	r2,-30(fp)
  800324:	100b883a 	mov	r5,r2
  800328:	01002174 	movhi	r4,133
  80032c:	211c5f04 	addi	r4,r4,29052
  800330:	08343dc0 	call	8343dc <printf>
		//return;
	}

	//Send ACK to camera to ACK its SYNC
	for (z=0; z < CAM_COMMAND_LENGTH; z++){
  800334:	e03ff38d 	sth	zero,-50(fp)
  800338:	00001106 	br	800380 <camera_test+0x348>
		while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
  80033c:	0001883a 	nop
  800340:	00804074 	movhi	r2,257
  800344:	10a80204 	addi	r2,r2,-24568
  800348:	10800037 	ldwio	r2,0(r2)
  80034c:	1080100c 	andi	r2,r2,64
  800350:	103ffb26 	beq	r2,zero,800340 <__alt_mem_epcs_flash_controller_0+0xff7f7340>
		IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, CAM_ACK_SYNC[z]);
  800354:	e0fff38b 	ldhu	r3,-50(fp)
  800358:	d0a00a84 	addi	r2,gp,-32726
  80035c:	1885883a 	add	r2,r3,r2
  800360:	10800003 	ldbu	r2,0(r2)
  800364:	10c03fcc 	andi	r3,r2,255
  800368:	00804074 	movhi	r2,257
  80036c:	10a80104 	addi	r2,r2,-24572
  800370:	10c00035 	stwio	r3,0(r2)
		printf("Cam sync failure after %i attempts\n", sync_delay);
		//return;
	}

	//Send ACK to camera to ACK its SYNC
	for (z=0; z < CAM_COMMAND_LENGTH; z++){
  800374:	e0bff38b 	ldhu	r2,-50(fp)
  800378:	10800044 	addi	r2,r2,1
  80037c:	e0bff38d 	sth	r2,-50(fp)
  800380:	e0bff38b 	ldhu	r2,-50(fp)
  800384:	108001b0 	cmpltui	r2,r2,6
  800388:	103fec1e 	bne	r2,zero,80033c <__alt_mem_epcs_flash_controller_0+0xff7f733c>
		while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
		IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, CAM_ACK_SYNC[z]);
	}

	//Recommended by doc
	OSTimeDlyHMSM(0, 0, 2, 0);
  80038c:	000f883a 	mov	r7,zero
  800390:	01800084 	movi	r6,2
  800394:	000b883a 	mov	r5,zero
  800398:	0009883a 	mov	r4,zero
  80039c:	0851ce80 	call	851ce8 <OSTimeDlyHMSM>

	//Turn on camera
	printf("INIT ");
  8003a0:	01002174 	movhi	r4,133
  8003a4:	211c6804 	addi	r4,r4,29088
  8003a8:	08343dc0 	call	8343dc <printf>
	if(!cam_send_command(CAM_INIT, CAM_ACK_INIT, CAM_COMMAND_LENGTH, camCommandQueue)){
  8003ac:	d0a07e17 	ldw	r2,-32264(gp)
  8003b0:	100f883a 	mov	r7,r2
  8003b4:	01800184 	movi	r6,6
  8003b8:	d1600c04 	addi	r5,gp,-32720
  8003bc:	d1200304 	addi	r4,gp,-32756
  8003c0:	0800b880 	call	800b88 <cam_send_command>
  8003c4:	1080005c 	xori	r2,r2,1
  8003c8:	10803fcc 	andi	r2,r2,255
  8003cc:	10000326 	beq	r2,zero,8003dc <camera_test+0x3a4>
		printf("Error at init\n");
  8003d0:	01002174 	movhi	r4,133
  8003d4:	211c6a04 	addi	r4,r4,29096
  8003d8:	08346600 	call	834660 <puts>
	}

	//Send package size into to camera
	printf("SIZE ");
  8003dc:	01002174 	movhi	r4,133
  8003e0:	211c6e04 	addi	r4,r4,29112
  8003e4:	08343dc0 	call	8343dc <printf>
	if(!cam_send_command(CAM_SIZE, CAM_ACK_SIZE, CAM_COMMAND_LENGTH, camCommandQueue)){
  8003e8:	d0a07e17 	ldw	r2,-32264(gp)
  8003ec:	100f883a 	mov	r7,r2
  8003f0:	01800184 	movi	r6,6
  8003f4:	d1600d84 	addi	r5,gp,-32714
  8003f8:	d1200484 	addi	r4,gp,-32750
  8003fc:	0800b880 	call	800b88 <cam_send_command>
  800400:	1080005c 	xori	r2,r2,1
  800404:	10803fcc 	andi	r2,r2,255
  800408:	10000326 	beq	r2,zero,800418 <camera_test+0x3e0>
		printf("Error at size\n");
  80040c:	01002174 	movhi	r4,133
  800410:	211c7004 	addi	r4,r4,29120
  800414:	08346600 	call	834660 <puts>
	}

	//Tell camera to take picture
	printf("SNAP ");
  800418:	01002174 	movhi	r4,133
  80041c:	211c7404 	addi	r4,r4,29136
  800420:	08343dc0 	call	8343dc <printf>
	if(!cam_send_command(CAM_SNAP, CAM_ACK_SNAP, CAM_COMMAND_LENGTH, camCommandQueue)){
  800424:	d0a07e17 	ldw	r2,-32264(gp)
  800428:	100f883a 	mov	r7,r2
  80042c:	01800184 	movi	r6,6
  800430:	d1600f04 	addi	r5,gp,-32708
  800434:	d1200604 	addi	r4,gp,-32744
  800438:	0800b880 	call	800b88 <cam_send_command>
  80043c:	1080005c 	xori	r2,r2,1
  800440:	10803fcc 	andi	r2,r2,255
  800444:	10000326 	beq	r2,zero,800454 <camera_test+0x41c>
		printf("Error at snap\n");
  800448:	01002174 	movhi	r4,133
  80044c:	211c7604 	addi	r4,r4,29144
  800450:	08346600 	call	834660 <puts>
	}

	//Tell camera to start sending the picture
	printf("GRAB ");
  800454:	01002174 	movhi	r4,133
  800458:	211c7a04 	addi	r4,r4,29160
  80045c:	08343dc0 	call	8343dc <printf>
	if(!cam_send_command(CAM_GRAB, CAM_ACK_GRAB, CAM_COMMAND_LENGTH, camCommandQueue)){
  800460:	d0a07e17 	ldw	r2,-32264(gp)
  800464:	100f883a 	mov	r7,r2
  800468:	01800184 	movi	r6,6
  80046c:	d1601084 	addi	r5,gp,-32702
  800470:	d1200784 	addi	r4,gp,-32738
  800474:	0800b880 	call	800b88 <cam_send_command>
  800478:	1080005c 	xori	r2,r2,1
  80047c:	10803fcc 	andi	r2,r2,255
  800480:	10000326 	beq	r2,zero,800490 <camera_test+0x458>
		printf("Error at grab\n");
  800484:	01002174 	movhi	r4,133
  800488:	211c7c04 	addi	r4,r4,29168
  80048c:	08346600 	call	834660 <puts>
	}

	//Receive the package count, not an ACK and needs special parsing
	printf ("PARSE ");
  800490:	01002174 	movhi	r4,133
  800494:	211c8004 	addi	r4,r4,29184
  800498:	08343dc0 	call	8343dc <printf>
	cam_reply = (uint8_t)OSQPend(camCommandQueue, 0, &err);
  80049c:	d0a07e17 	ldw	r2,-32264(gp)
  8004a0:	e0fffa84 	addi	r3,fp,-22
  8004a4:	180d883a 	mov	r6,r3
  8004a8:	000b883a 	mov	r5,zero
  8004ac:	1009883a 	mov	r4,r2
  8004b0:	084ef380 	call	84ef38 <OSQPend>
  8004b4:	e0bff405 	stb	r2,-48(fp)
	if (cam_reply == CAM_DATA[0]){
  8004b8:	00bfea84 	movi	r2,-86
  8004bc:	10c03fcc 	andi	r3,r2,255
  8004c0:	e0bff403 	ldbu	r2,-48(fp)
  8004c4:	1880721e 	bne	r3,r2,800690 <camera_test+0x658>
		printf("receiving %x", cam_reply);
  8004c8:	e0bff403 	ldbu	r2,-48(fp)
  8004cc:	100b883a 	mov	r5,r2
  8004d0:	01002174 	movhi	r4,133
  8004d4:	211c8204 	addi	r4,r4,29192
  8004d8:	08343dc0 	call	8343dc <printf>
		for (z = 1; z < CAM_DATA_START; z++){
  8004dc:	00800044 	movi	r2,1
  8004e0:	e0bff38d 	sth	r2,-50(fp)
  8004e4:	00002206 	br	800570 <camera_test+0x538>
			cam_reply = (uint8_t)OSQPend(camCommandQueue, 0, &err);
  8004e8:	d0a07e17 	ldw	r2,-32264(gp)
  8004ec:	e0fffa84 	addi	r3,fp,-22
  8004f0:	180d883a 	mov	r6,r3
  8004f4:	000b883a 	mov	r5,zero
  8004f8:	1009883a 	mov	r4,r2
  8004fc:	084ef380 	call	84ef38 <OSQPend>
  800500:	e0bff405 	stb	r2,-48(fp)
			if ((cam_reply != CAM_DATA[z])){
  800504:	e0fff38b 	ldhu	r3,-50(fp)
  800508:	d0a00904 	addi	r2,gp,-32732
  80050c:	1885883a 	add	r2,r3,r2
  800510:	10800003 	ldbu	r2,0(r2)
  800514:	10c03fcc 	andi	r3,r2,255
  800518:	e0bff403 	ldbu	r2,-48(fp)
  80051c:	18800c26 	beq	r3,r2,800550 <camera_test+0x518>
				printf("got %x expected %x\n", cam_reply, CAM_DATA[z]);
  800520:	e13ff403 	ldbu	r4,-48(fp)
  800524:	e0fff38b 	ldhu	r3,-50(fp)
  800528:	d0a00904 	addi	r2,gp,-32732
  80052c:	1885883a 	add	r2,r3,r2
  800530:	10800003 	ldbu	r2,0(r2)
  800534:	10803fcc 	andi	r2,r2,255
  800538:	100d883a 	mov	r6,r2
  80053c:	200b883a 	mov	r5,r4
  800540:	01002174 	movhi	r4,133
  800544:	211c8604 	addi	r4,r4,29208
  800548:	08343dc0 	call	8343dc <printf>
  80054c:	00000506 	br	800564 <camera_test+0x52c>
			}else{
				printf(" %x", cam_reply);
  800550:	e0bff403 	ldbu	r2,-48(fp)
  800554:	100b883a 	mov	r5,r2
  800558:	01002174 	movhi	r4,133
  80055c:	211c5604 	addi	r4,r4,29016
  800560:	08343dc0 	call	8343dc <printf>
	//Receive the package count, not an ACK and needs special parsing
	printf ("PARSE ");
	cam_reply = (uint8_t)OSQPend(camCommandQueue, 0, &err);
	if (cam_reply == CAM_DATA[0]){
		printf("receiving %x", cam_reply);
		for (z = 1; z < CAM_DATA_START; z++){
  800564:	e0bff38b 	ldhu	r2,-50(fp)
  800568:	10800044 	addi	r2,r2,1
  80056c:	e0bff38d 	sth	r2,-50(fp)
  800570:	e0bff38b 	ldhu	r2,-50(fp)
  800574:	108000f0 	cmpltui	r2,r2,3
  800578:	103fdb1e 	bne	r2,zero,8004e8 <__alt_mem_epcs_flash_controller_0+0xff7f74e8>
		//The last three packages will contain the packet count
		//Need to account for the byte offsets and get a single
		//integer value that contains the total number of bits
		//that will be sent by the camera

		bit_count = 0;
  80057c:	e03ffa0d 	sth	zero,-24(fp)
		cam_reply = (uint8_t)OSQPend(camCommandQueue, 0, &err);
  800580:	d0a07e17 	ldw	r2,-32264(gp)
  800584:	e0fffa84 	addi	r3,fp,-22
  800588:	180d883a 	mov	r6,r3
  80058c:	000b883a 	mov	r5,zero
  800590:	1009883a 	mov	r4,r2
  800594:	084ef380 	call	84ef38 <OSQPend>
  800598:	e0bff405 	stb	r2,-48(fp)
		printf(" %x", cam_reply);
  80059c:	e0bff403 	ldbu	r2,-48(fp)
  8005a0:	100b883a 	mov	r5,r2
  8005a4:	01002174 	movhi	r4,133
  8005a8:	211c5604 	addi	r4,r4,29016
  8005ac:	08343dc0 	call	8343dc <printf>
		bit_count = cam_reply;
  8005b0:	e0bff403 	ldbu	r2,-48(fp)
  8005b4:	e0bffa0d 	sth	r2,-24(fp)

		cam_reply = (uint8_t)OSQPend(camCommandQueue, 0, &err);
  8005b8:	d0a07e17 	ldw	r2,-32264(gp)
  8005bc:	e0fffa84 	addi	r3,fp,-22
  8005c0:	180d883a 	mov	r6,r3
  8005c4:	000b883a 	mov	r5,zero
  8005c8:	1009883a 	mov	r4,r2
  8005cc:	084ef380 	call	84ef38 <OSQPend>
  8005d0:	e0bff405 	stb	r2,-48(fp)
		printf(" %lx", cam_reply);
  8005d4:	e0bff403 	ldbu	r2,-48(fp)
  8005d8:	100b883a 	mov	r5,r2
  8005dc:	01002174 	movhi	r4,133
  8005e0:	211c8b04 	addi	r4,r4,29228
  8005e4:	08343dc0 	call	8343dc <printf>
		bit_count = bit_count + (0x100 * cam_reply);
  8005e8:	e0bff403 	ldbu	r2,-48(fp)
  8005ec:	1004923a 	slli	r2,r2,8
  8005f0:	1007883a 	mov	r3,r2
  8005f4:	e0bffa0b 	ldhu	r2,-24(fp)
  8005f8:	1885883a 	add	r2,r3,r2
  8005fc:	e0bffa0d 	sth	r2,-24(fp)

		cam_reply = (uint8_t)OSQPend(camCommandQueue, 0, &err);
  800600:	d0a07e17 	ldw	r2,-32264(gp)
  800604:	e0fffa84 	addi	r3,fp,-22
  800608:	180d883a 	mov	r6,r3
  80060c:	000b883a 	mov	r5,zero
  800610:	1009883a 	mov	r4,r2
  800614:	084ef380 	call	84ef38 <OSQPend>
  800618:	e0bff405 	stb	r2,-48(fp)
		printf(" %x", cam_reply);
  80061c:	e0bff403 	ldbu	r2,-48(fp)
  800620:	100b883a 	mov	r5,r2
  800624:	01002174 	movhi	r4,133
  800628:	211c5604 	addi	r4,r4,29016
  80062c:	08343dc0 	call	8343dc <printf>
		bit_count = bit_count + (0x10000 * cam_reply);
		printf("\nByte count of %i\n", bit_count);
  800630:	e0bffa0b 	ldhu	r2,-24(fp)
  800634:	100b883a 	mov	r5,r2
  800638:	01002174 	movhi	r4,133
  80063c:	211c8d04 	addi	r4,r4,29236
  800640:	08343dc0 	call	8343dc <printf>

		//Determine the number of packets based on the given bit values
		packet_count = (bit_count / (CAM_PACKAGE_LENGTH - 6)) + 1;
  800644:	e0bffa0b 	ldhu	r2,-24(fp)
  800648:	01407e84 	movi	r5,506
  80064c:	1009883a 	mov	r4,r2
  800650:	083012c0 	call	83012c <__udivsi3>
  800654:	10800044 	addi	r2,r2,1
  800658:	e0bff48d 	sth	r2,-46(fp)
		last_packet_byte_count = bit_count % (CAM_PACKAGE_LENGTH - 6);
  80065c:	e0bffa0b 	ldhu	r2,-24(fp)
  800660:	01407e84 	movi	r5,506
  800664:	1009883a 	mov	r4,r2
  800668:	08301900 	call	830190 <__umodsi3>
  80066c:	e0bff50d 	sth	r2,-44(fp)
		printf("Expecting %i total packets with final one being %i bits\n", packet_count, last_packet_byte_count);
  800670:	e0bff48b 	ldhu	r2,-46(fp)
  800674:	e0fff50b 	ldhu	r3,-44(fp)
  800678:	180d883a 	mov	r6,r3
  80067c:	100b883a 	mov	r5,r2
  800680:	01002174 	movhi	r4,133
  800684:	211c9204 	addi	r4,r4,29256
  800688:	08343dc0 	call	8343dc <printf>
  80068c:	00000806 	br	8006b0 <camera_test+0x678>
	}else{
		printf("got %x expected %x\n", cam_reply, CAM_DATA[0]);
  800690:	e0bff403 	ldbu	r2,-48(fp)
  800694:	00ffea84 	movi	r3,-86
  800698:	18c03fcc 	andi	r3,r3,255
  80069c:	180d883a 	mov	r6,r3
  8006a0:	100b883a 	mov	r5,r2
  8006a4:	01002174 	movhi	r4,133
  8006a8:	211c8604 	addi	r4,r4,29208
  8006ac:	08343dc0 	call	8343dc <printf>
	}

	//TODO clean up numbers here once operational
	//Receive data, start with normal packets
	useData = TRUE;
  8006b0:	00800044 	movi	r2,1
  8006b4:	d0a07c05 	stb	r2,-32272(gp)
	synced = TRUE;
  8006b8:	00800044 	movi	r2,1
  8006bc:	e0bff8c5 	stb	r2,-29(fp)
	q = 0;
  8006c0:	e03ff30d 	sth	zero,-52(fp)
	printf("DATA STARTING\n");
  8006c4:	01002174 	movhi	r4,133
  8006c8:	211ca104 	addi	r4,r4,29316
  8006cc:	08346600 	call	834660 <puts>
	while(q < packet_count){
  8006d0:	0000ee06 	br	800a8c <camera_test+0xa54>

		//Prepare for next iteration
		isGoodPacket = TRUE;
  8006d4:	00800044 	movi	r2,1
  8006d8:	e0bff585 	stb	r2,-42(fp)
		checksum = 0;
  8006dc:	e03ff615 	stw	zero,-40(fp)
		tempsum = 0;
  8006e0:	e03ff715 	stw	zero,-36(fp)
		//TODO fix this if the self recovery from NAK is built in
		if (q == (packet_count - 1)){
  8006e4:	e0fff30b 	ldhu	r3,-52(fp)
  8006e8:	e0bff48b 	ldhu	r2,-46(fp)
  8006ec:	10bfffc4 	addi	r2,r2,-1
  8006f0:	1880031e 	bne	r3,r2,800700 <camera_test+0x6c8>
			data_length = last_packet_byte_count;
  8006f4:	e0bff50b 	ldhu	r2,-44(fp)
  8006f8:	e0bff80d 	sth	r2,-32(fp)
  8006fc:	00000206 	br	800708 <camera_test+0x6d0>
		}else{
			data_length = CAM_PACKAGE_LENGTH - 2;
  800700:	00807f84 	movi	r2,510
  800704:	e0bff80d 	sth	r2,-32(fp)
		}

		OSQFlush(camPackageQueue);
  800708:	d0a07f17 	ldw	r2,-32260(gp)
  80070c:	1009883a 	mov	r4,r2
  800710:	084ee800 	call	84ee80 <OSQFlush>

		//Indicate which packet we intend to receive
		cam_data_ack[4] = q;
  800714:	e0bff30b 	ldhu	r2,-52(fp)
  800718:	e0bffbc5 	stb	r2,-17(fp)
		for (z = 0; z < CAM_COMMAND_LENGTH; z++){
  80071c:	e03ff38d 	sth	zero,-50(fp)
  800720:	00001106 	br	800768 <camera_test+0x730>
			while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
  800724:	0001883a 	nop
  800728:	00804074 	movhi	r2,257
  80072c:	10a80204 	addi	r2,r2,-24568
  800730:	10800037 	ldwio	r2,0(r2)
  800734:	1080100c 	andi	r2,r2,64
  800738:	103ffb26 	beq	r2,zero,800728 <__alt_mem_epcs_flash_controller_0+0xff7f7728>
			IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, cam_data_ack[z]);
  80073c:	e0bff38b 	ldhu	r2,-50(fp)
  800740:	e0fffac4 	addi	r3,fp,-21
  800744:	1885883a 	add	r2,r3,r2
  800748:	10800003 	ldbu	r2,0(r2)
  80074c:	10c03fcc 	andi	r3,r2,255
  800750:	00804074 	movhi	r2,257
  800754:	10a80104 	addi	r2,r2,-24572
  800758:	10c00035 	stwio	r3,0(r2)

		OSQFlush(camPackageQueue);

		//Indicate which packet we intend to receive
		cam_data_ack[4] = q;
		for (z = 0; z < CAM_COMMAND_LENGTH; z++){
  80075c:	e0bff38b 	ldhu	r2,-50(fp)
  800760:	10800044 	addi	r2,r2,1
  800764:	e0bff38d 	sth	r2,-50(fp)
  800768:	e0bff38b 	ldhu	r2,-50(fp)
  80076c:	108001b0 	cmpltui	r2,r2,6
  800770:	103fec1e 	bne	r2,zero,800724 <__alt_mem_epcs_flash_controller_0+0xff7f7724>
			while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
			IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, cam_data_ack[z]);
		}

		//First two bytes are ID, make sure they match the ID we want
		for(z = 0; z < 2; z++){
  800774:	e03ff38d 	sth	zero,-50(fp)
  800778:	00002f06 	br	800838 <camera_test+0x800>
			if(isGoodPacket){
  80077c:	e0bff583 	ldbu	r2,-42(fp)
  800780:	10002a26 	beq	r2,zero,80082c <camera_test+0x7f4>
				cam_reply = (uint8_t)OSQPend(camPackageQueue, MAX_TIME, &err);
  800784:	d0a07f17 	ldw	r2,-32260(gp)
  800788:	e0fffa84 	addi	r3,fp,-22
  80078c:	180d883a 	mov	r6,r3
  800790:	0143e804 	movi	r5,4000
  800794:	1009883a 	mov	r4,r2
  800798:	084ef380 	call	84ef38 <OSQPend>
  80079c:	e0bff405 	stb	r2,-48(fp)
				if(err == OS_TIMEOUT){
  8007a0:	e0bffa83 	ldbu	r2,-22(fp)
  8007a4:	10803fcc 	andi	r2,r2,255
  8007a8:	10800298 	cmpnei	r2,r2,10
  8007ac:	1000051e 	bne	r2,zero,8007c4 <camera_test+0x78c>
					printf("TIMEOUT AT ID\n");
  8007b0:	01002174 	movhi	r4,133
  8007b4:	211ca504 	addi	r4,r4,29332
  8007b8:	08346600 	call	834660 <puts>
					isGoodPacket = FALSE;
  8007bc:	e03ff585 	stb	zero,-42(fp)
  8007c0:	00001a06 	br	80082c <camera_test+0x7f4>
				}else{
					if((cam_reply != (1 + cam_data_ack[z+4])) && (cam_reply != 0)){
  8007c4:	e0fff403 	ldbu	r3,-48(fp)
  8007c8:	e0bff38b 	ldhu	r2,-50(fp)
  8007cc:	10800104 	addi	r2,r2,4
  8007d0:	e13ffac4 	addi	r4,fp,-21
  8007d4:	2085883a 	add	r2,r4,r2
  8007d8:	10800003 	ldbu	r2,0(r2)
  8007dc:	10803fcc 	andi	r2,r2,255
  8007e0:	10800044 	addi	r2,r2,1
  8007e4:	18801126 	beq	r3,r2,80082c <camera_test+0x7f4>
  8007e8:	e0bff403 	ldbu	r2,-48(fp)
  8007ec:	10000f26 	beq	r2,zero,80082c <camera_test+0x7f4>
						isGoodPacket = FALSE;
  8007f0:	e03ff585 	stb	zero,-42(fp)
						printf("Packet %i ID expected %x but got %x\n", q, cam_data_ack[z+4], cam_reply);
  8007f4:	e13ff30b 	ldhu	r4,-52(fp)
  8007f8:	e0bff38b 	ldhu	r2,-50(fp)
  8007fc:	10800104 	addi	r2,r2,4
  800800:	e0fffac4 	addi	r3,fp,-21
  800804:	1885883a 	add	r2,r3,r2
  800808:	10800003 	ldbu	r2,0(r2)
  80080c:	10803fcc 	andi	r2,r2,255
  800810:	e0fff403 	ldbu	r3,-48(fp)
  800814:	180f883a 	mov	r7,r3
  800818:	100d883a 	mov	r6,r2
  80081c:	200b883a 	mov	r5,r4
  800820:	01002174 	movhi	r4,133
  800824:	211ca904 	addi	r4,r4,29348
  800828:	08343dc0 	call	8343dc <printf>
			while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
			IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, cam_data_ack[z]);
		}

		//First two bytes are ID, make sure they match the ID we want
		for(z = 0; z < 2; z++){
  80082c:	e0bff38b 	ldhu	r2,-50(fp)
  800830:	10800044 	addi	r2,r2,1
  800834:	e0bff38d 	sth	r2,-50(fp)
  800838:	e0bff38b 	ldhu	r2,-50(fp)
  80083c:	108000b0 	cmpltui	r2,r2,2
  800840:	103fce1e 	bne	r2,zero,80077c <__alt_mem_epcs_flash_controller_0+0xff7f777c>
						printf("Packet %i ID expected %x but got %x\n", q, cam_data_ack[z+4], cam_reply);
					}
				}
			}
		}
		if (isGoodPacket){
  800844:	e0bff583 	ldbu	r2,-42(fp)
  800848:	10000826 	beq	r2,zero,80086c <camera_test+0x834>
			printf("ID checked\n");
  80084c:	01002174 	movhi	r4,133
  800850:	211cb304 	addi	r4,r4,29388
  800854:	08346600 	call	834660 <puts>
			printf("Packet %i has size of ", q);
  800858:	e0bff30b 	ldhu	r2,-52(fp)
  80085c:	100b883a 	mov	r5,r2
  800860:	01002174 	movhi	r4,133
  800864:	211cb604 	addi	r4,r4,29400
  800868:	08343dc0 	call	8343dc <printf>

		//Next two bytes are data size, print it out until I decide what to do with it
		//Should be LOWER_BYTE UPPER_BYTE of data size and should equal PACKAGE_LENGTH - 6
		//until of course we hit the final packet so it might be a good dea to use this
		//as the loop counter for data parsing loop
		for(z = 0; z < 2; z++){
  80086c:	e03ff38d 	sth	zero,-50(fp)
  800870:	00001a06 	br	8008dc <camera_test+0x8a4>
			if(isGoodPacket){
  800874:	e0bff583 	ldbu	r2,-42(fp)
  800878:	10001526 	beq	r2,zero,8008d0 <camera_test+0x898>
				cam_reply = (uint8_t)OSQPend(camPackageQueue, MAX_TIME, &err);
  80087c:	d0a07f17 	ldw	r2,-32260(gp)
  800880:	e0fffa84 	addi	r3,fp,-22
  800884:	180d883a 	mov	r6,r3
  800888:	0143e804 	movi	r5,4000
  80088c:	1009883a 	mov	r4,r2
  800890:	084ef380 	call	84ef38 <OSQPend>
  800894:	e0bff405 	stb	r2,-48(fp)
				if(err == OS_TIMEOUT){
  800898:	e0bffa83 	ldbu	r2,-22(fp)
  80089c:	10803fcc 	andi	r2,r2,255
  8008a0:	10800298 	cmpnei	r2,r2,10
  8008a4:	1000051e 	bne	r2,zero,8008bc <camera_test+0x884>
					printf("TIMEOUT AT SIZE\n");
  8008a8:	01002174 	movhi	r4,133
  8008ac:	211cbc04 	addi	r4,r4,29424
  8008b0:	08346600 	call	834660 <puts>
					isGoodPacket = FALSE;
  8008b4:	e03ff585 	stb	zero,-42(fp)
  8008b8:	00000506 	br	8008d0 <camera_test+0x898>
				}else{
					//TODO add parsing of data size
					printf("%x ", cam_reply);
  8008bc:	e0bff403 	ldbu	r2,-48(fp)
  8008c0:	100b883a 	mov	r5,r2
  8008c4:	01002174 	movhi	r4,133
  8008c8:	211cc004 	addi	r4,r4,29440
  8008cc:	08343dc0 	call	8343dc <printf>

		//Next two bytes are data size, print it out until I decide what to do with it
		//Should be LOWER_BYTE UPPER_BYTE of data size and should equal PACKAGE_LENGTH - 6
		//until of course we hit the final packet so it might be a good dea to use this
		//as the loop counter for data parsing loop
		for(z = 0; z < 2; z++){
  8008d0:	e0bff38b 	ldhu	r2,-50(fp)
  8008d4:	10800044 	addi	r2,r2,1
  8008d8:	e0bff38d 	sth	r2,-50(fp)
  8008dc:	e0bff38b 	ldhu	r2,-50(fp)
  8008e0:	108000b0 	cmpltui	r2,r2,2
  8008e4:	103fe31e 	bne	r2,zero,800874 <__alt_mem_epcs_flash_controller_0+0xff7f7874>
					//TODO add parsing of data size
					printf("%x ", cam_reply);
				}
			}
		}
		printf("\n");
  8008e8:	01000284 	movi	r4,10
  8008ec:	08345880 	call	834588 <putchar>

		for(z = 4; z < data_length; z++){
  8008f0:	00800104 	movi	r2,4
  8008f4:	e0bff38d 	sth	r2,-50(fp)
  8008f8:	00002306 	br	800988 <camera_test+0x950>
			if(isGoodPacket){
  8008fc:	e0bff583 	ldbu	r2,-42(fp)
  800900:	10001826 	beq	r2,zero,800964 <camera_test+0x92c>
				cam_reply = (uint8_t)OSQPend(camPackageQueue, MAX_TIME, &err);
  800904:	d0a07f17 	ldw	r2,-32260(gp)
  800908:	e0fffa84 	addi	r3,fp,-22
  80090c:	180d883a 	mov	r6,r3
  800910:	0143e804 	movi	r5,4000
  800914:	1009883a 	mov	r4,r2
  800918:	084ef380 	call	84ef38 <OSQPend>
  80091c:	e0bff405 	stb	r2,-48(fp)
				if(err == OS_TIMEOUT){
  800920:	e0bffa83 	ldbu	r2,-22(fp)
  800924:	10803fcc 	andi	r2,r2,255
  800928:	10800298 	cmpnei	r2,r2,10
  80092c:	1000081e 	bne	r2,zero,800950 <camera_test+0x918>
					printf("TIMEOUT AT DATA on byte %i\n", z);
  800930:	e0bff38b 	ldhu	r2,-50(fp)
  800934:	100b883a 	mov	r5,r2
  800938:	01002174 	movhi	r4,133
  80093c:	211cc104 	addi	r4,r4,29444
  800940:	08343dc0 	call	8343dc <printf>
					isGoodPacket = FALSE;
  800944:	e03ff585 	stb	zero,-42(fp)
					cam_reply = 0x00;
  800948:	e03ff405 	stb	zero,-48(fp)
  80094c:	00000606 	br	800968 <camera_test+0x930>
				}else{
					checksum = checksum + cam_reply;
  800950:	e0bff403 	ldbu	r2,-48(fp)
  800954:	e0fff617 	ldw	r3,-40(fp)
  800958:	1885883a 	add	r2,r3,r2
  80095c:	e0bff615 	stw	r2,-40(fp)
  800960:	00000106 	br	800968 <camera_test+0x930>
				}
			}else{
				cam_reply = 0x00;
  800964:	e03ff405 	stb	zero,-48(fp)
			}
			putc(cam_reply, picture);
  800968:	e0bff403 	ldbu	r2,-48(fp)
  80096c:	d0e07b17 	ldw	r3,-32276(gp)
  800970:	180b883a 	mov	r5,r3
  800974:	1009883a 	mov	r4,r2
  800978:	08344b80 	call	8344b8 <putc>
				}
			}
		}
		printf("\n");

		for(z = 4; z < data_length; z++){
  80097c:	e0bff38b 	ldhu	r2,-50(fp)
  800980:	10800044 	addi	r2,r2,1
  800984:	e0bff38d 	sth	r2,-50(fp)
  800988:	e0fff38b 	ldhu	r3,-50(fp)
  80098c:	e0bff80b 	ldhu	r2,-32(fp)
  800990:	18bfda36 	bltu	r3,r2,8008fc <__alt_mem_epcs_flash_controller_0+0xff7f78fc>
			}
			putc(cam_reply, picture);
		}

		//Next two bytes are checksum
		for (z = 0; z < 2; z++){
  800994:	e03ff38d 	sth	zero,-50(fp)
  800998:	00001d06 	br	800a10 <camera_test+0x9d8>
			if(isGoodPacket){
  80099c:	e0bff583 	ldbu	r2,-42(fp)
  8009a0:	10001826 	beq	r2,zero,800a04 <camera_test+0x9cc>
				cam_reply = (uint8_t)OSQPend(camPackageQueue, MAX_TIME, &err);
  8009a4:	d0a07f17 	ldw	r2,-32260(gp)
  8009a8:	e0fffa84 	addi	r3,fp,-22
  8009ac:	180d883a 	mov	r6,r3
  8009b0:	0143e804 	movi	r5,4000
  8009b4:	1009883a 	mov	r4,r2
  8009b8:	084ef380 	call	84ef38 <OSQPend>
  8009bc:	e0bff405 	stb	r2,-48(fp)
				if(err == OS_TIMEOUT){
  8009c0:	e0bffa83 	ldbu	r2,-22(fp)
  8009c4:	10803fcc 	andi	r2,r2,255
  8009c8:	10800298 	cmpnei	r2,r2,10
  8009cc:	1000051e 	bne	r2,zero,8009e4 <camera_test+0x9ac>
					printf("TIMEOUT AT CHECKSUM");
  8009d0:	01002174 	movhi	r4,133
  8009d4:	211cc804 	addi	r4,r4,29472
  8009d8:	08343dc0 	call	8343dc <printf>
					isGoodPacket = FALSE;
  8009dc:	e03ff585 	stb	zero,-42(fp)
  8009e0:	00000806 	br	800a04 <camera_test+0x9cc>
				}else{
					tempsum = tempsum + (cam_reply << (8*z));
  8009e4:	e0fff403 	ldbu	r3,-48(fp)
  8009e8:	e0bff38b 	ldhu	r2,-50(fp)
  8009ec:	100490fa 	slli	r2,r2,3
  8009f0:	1884983a 	sll	r2,r3,r2
  8009f4:	1007883a 	mov	r3,r2
  8009f8:	e0bff717 	ldw	r2,-36(fp)
  8009fc:	10c5883a 	add	r2,r2,r3
  800a00:	e0bff715 	stw	r2,-36(fp)
			}
			putc(cam_reply, picture);
		}

		//Next two bytes are checksum
		for (z = 0; z < 2; z++){
  800a04:	e0bff38b 	ldhu	r2,-50(fp)
  800a08:	10800044 	addi	r2,r2,1
  800a0c:	e0bff38d 	sth	r2,-50(fp)
  800a10:	e0bff38b 	ldhu	r2,-50(fp)
  800a14:	108000b0 	cmpltui	r2,r2,2
  800a18:	103fe01e 	bne	r2,zero,80099c <__alt_mem_epcs_flash_controller_0+0xff7f799c>
					tempsum = tempsum + (cam_reply << (8*z));
				}
			}
		}

		if (checksum != tempsum){
  800a1c:	e0fff617 	ldw	r3,-40(fp)
  800a20:	e0bff717 	ldw	r2,-36(fp)
  800a24:	18800526 	beq	r3,r2,800a3c <camera_test+0xa04>
			printf("Invalid checksum, got %x expected %x\n", checksum, tempsum);
  800a28:	e1bff717 	ldw	r6,-36(fp)
  800a2c:	e17ff617 	ldw	r5,-40(fp)
  800a30:	01002174 	movhi	r4,133
  800a34:	211ccd04 	addi	r4,r4,29492
  800a38:	08343dc0 	call	8343dc <printf>
			//isGoodPacket = FALSE;
		}

		if(isGoodPacket){
  800a3c:	e0bff583 	ldbu	r2,-42(fp)
  800a40:	10000926 	beq	r2,zero,800a68 <camera_test+0xa30>
			printf("Packet %i good\n", q);
  800a44:	e0bff30b 	ldhu	r2,-52(fp)
  800a48:	100b883a 	mov	r5,r2
  800a4c:	01002174 	movhi	r4,133
  800a50:	211cd704 	addi	r4,r4,29532
  800a54:	08343dc0 	call	8343dc <printf>
			q++;
  800a58:	e0bff30b 	ldhu	r2,-52(fp)
  800a5c:	10800044 	addi	r2,r2,1
  800a60:	e0bff30d 	sth	r2,-52(fp)
  800a64:	00000906 	br	800a8c <camera_test+0xa54>
		}else{
			printf("Packet %i bad, moving on\n", q);
  800a68:	e0bff30b 	ldhu	r2,-52(fp)
  800a6c:	100b883a 	mov	r5,r2
  800a70:	01002174 	movhi	r4,133
  800a74:	211cdb04 	addi	r4,r4,29548
  800a78:	08343dc0 	call	8343dc <printf>
			//OSTimeDlyHMSM(0, 0, 1, 0);
			q++;
  800a7c:	e0bff30b 	ldhu	r2,-52(fp)
  800a80:	10800044 	addi	r2,r2,1
  800a84:	e0bff30d 	sth	r2,-52(fp)
			synced = FALSE;
  800a88:	e03ff8c5 	stb	zero,-29(fp)
	//Receive data, start with normal packets
	useData = TRUE;
	synced = TRUE;
	q = 0;
	printf("DATA STARTING\n");
	while(q < packet_count){
  800a8c:	e0fff30b 	ldhu	r3,-52(fp)
  800a90:	e0bff48b 	ldhu	r2,-46(fp)
  800a94:	18bf0f36 	bltu	r3,r2,8006d4 <__alt_mem_epcs_flash_controller_0+0xff7f76d4>
			q++;
			synced = FALSE;
		}
	}

	if (synced){
  800a98:	e0bff8c3 	ldbu	r2,-29(fp)
  800a9c:	10000426 	beq	r2,zero,800ab0 <camera_test+0xa78>
		printf("Camera done perfect\n");
  800aa0:	01002174 	movhi	r4,133
  800aa4:	211ce204 	addi	r4,r4,29576
  800aa8:	08346600 	call	834660 <puts>
  800aac:	00000306 	br	800abc <camera_test+0xa84>
	}else{
		printf("Camera done with err\n");
  800ab0:	01002174 	movhi	r4,133
  800ab4:	211ce704 	addi	r4,r4,29596
  800ab8:	08346600 	call	834660 <puts>
	}

	for (z = 0; z < CAM_COMMAND_LENGTH; z++){
  800abc:	e03ff38d 	sth	zero,-50(fp)
  800ac0:	00001106 	br	800b08 <camera_test+0xad0>
		while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
  800ac4:	0001883a 	nop
  800ac8:	00804074 	movhi	r2,257
  800acc:	10a80204 	addi	r2,r2,-24568
  800ad0:	10800037 	ldwio	r2,0(r2)
  800ad4:	1080100c 	andi	r2,r2,64
  800ad8:	103ffb26 	beq	r2,zero,800ac8 <__alt_mem_epcs_flash_controller_0+0xff7f7ac8>
		IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, CAM_ACK_DEND[z]);
  800adc:	e0fff38b 	ldhu	r3,-50(fp)
  800ae0:	d0a01384 	addi	r2,gp,-32690
  800ae4:	1885883a 	add	r2,r3,r2
  800ae8:	10800003 	ldbu	r2,0(r2)
  800aec:	10c03fcc 	andi	r3,r2,255
  800af0:	00804074 	movhi	r2,257
  800af4:	10a80104 	addi	r2,r2,-24572
  800af8:	10c00035 	stwio	r3,0(r2)
		printf("Camera done perfect\n");
	}else{
		printf("Camera done with err\n");
	}

	for (z = 0; z < CAM_COMMAND_LENGTH; z++){
  800afc:	e0bff38b 	ldhu	r2,-50(fp)
  800b00:	10800044 	addi	r2,r2,1
  800b04:	e0bff38d 	sth	r2,-50(fp)
  800b08:	e0bff38b 	ldhu	r2,-50(fp)
  800b0c:	108001b0 	cmpltui	r2,r2,6
  800b10:	103fec1e 	bne	r2,zero,800ac4 <__alt_mem_epcs_flash_controller_0+0xff7f7ac4>
		while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
		IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, CAM_ACK_DEND[z]);
	}


	printf("size of %i\n", pic_size);
  800b14:	e0bffe17 	ldw	r2,-8(fp)
  800b18:	100b883a 	mov	r5,r2
  800b1c:	01002174 	movhi	r4,133
  800b20:	211ced04 	addi	r4,r4,29620
  800b24:	08343dc0 	call	8343dc <printf>
	fclose(picture);
  800b28:	d0a07b17 	ldw	r2,-32276(gp)
  800b2c:	1009883a 	mov	r4,r2
  800b30:	0831e140 	call	831e14 <fclose>

	//picture = fopen(CAM_PICTURE_OUTPUT, "r");
	picture = fmemopen(pic_location, pic_size, "r");
  800b34:	e0bffd17 	ldw	r2,-12(fp)
  800b38:	e0fffe17 	ldw	r3,-8(fp)
  800b3c:	01802174 	movhi	r6,133
  800b40:	319cf004 	addi	r6,r6,29632
  800b44:	180b883a 	mov	r5,r3
  800b48:	1009883a 	mov	r4,r2
  800b4c:	083293c0 	call	83293c <fmemopen>
  800b50:	d0a07b15 	stw	r2,-32276(gp)

	find_region(picture, REGION_RED);
  800b54:	d0a07b17 	ldw	r2,-32276(gp)
  800b58:	000b883a 	mov	r5,zero
  800b5c:	1009883a 	mov	r4,r2
  800b60:	0800e300 	call	800e30 <find_region>

	fclose(picture);
  800b64:	d0a07b17 	ldw	r2,-32276(gp)
  800b68:	1009883a 	mov	r4,r2
  800b6c:	0831e140 	call	831e14 <fclose>

	while (1){
		//wait for button push
		//OSSemPend(FREQ_SEM, 0, &err);

		OSTimeDlyHMSM(0, 0, 1, 0);
  800b70:	000f883a 	mov	r7,zero
  800b74:	01800044 	movi	r6,1
  800b78:	000b883a 	mov	r5,zero
  800b7c:	0009883a 	mov	r4,zero
  800b80:	0851ce80 	call	851ce8 <OSTimeDlyHMSM>
	}
  800b84:	003ffa06 	br	800b70 <__alt_mem_epcs_flash_controller_0+0xff7f7b70>

00800b88 <cam_send_command>:
}

bool cam_send_command(uint8_t* to_send, uint8_t* to_recieve, uint16_t size, OS_EVENT* used_queue){
  800b88:	defff904 	addi	sp,sp,-28
  800b8c:	dfc00615 	stw	ra,24(sp)
  800b90:	df000515 	stw	fp,20(sp)
  800b94:	df000504 	addi	fp,sp,20
  800b98:	e13ffc15 	stw	r4,-16(fp)
  800b9c:	e17ffd15 	stw	r5,-12(fp)
  800ba0:	3005883a 	mov	r2,r6
  800ba4:	e1ffff15 	stw	r7,-4(fp)
  800ba8:	e0bffe0d 	sth	r2,-8(fp)
	uint8_t z;
	uint8_t err;
	uint8_t cam_reply;

	//Flush queue so we know we have an empty one
	OSQFlush(used_queue);
  800bac:	e13fff17 	ldw	r4,-4(fp)
  800bb0:	084ee800 	call	84ee80 <OSQFlush>
	for (z = 0; z < size; z++){
  800bb4:	e03ffb05 	stb	zero,-20(fp)
  800bb8:	00001106 	br	800c00 <cam_send_command+0x78>
		while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
  800bbc:	0001883a 	nop
  800bc0:	00804074 	movhi	r2,257
  800bc4:	10a80204 	addi	r2,r2,-24568
  800bc8:	10800037 	ldwio	r2,0(r2)
  800bcc:	1080100c 	andi	r2,r2,64
  800bd0:	103ffb26 	beq	r2,zero,800bc0 <__alt_mem_epcs_flash_controller_0+0xff7f7bc0>
		IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, to_send[z]);
  800bd4:	e0bffb03 	ldbu	r2,-20(fp)
  800bd8:	e0fffc17 	ldw	r3,-16(fp)
  800bdc:	1885883a 	add	r2,r3,r2
  800be0:	10800003 	ldbu	r2,0(r2)
  800be4:	10c03fcc 	andi	r3,r2,255
  800be8:	00804074 	movhi	r2,257
  800bec:	10a80104 	addi	r2,r2,-24572
  800bf0:	10c00035 	stwio	r3,0(r2)
	uint8_t err;
	uint8_t cam_reply;

	//Flush queue so we know we have an empty one
	OSQFlush(used_queue);
	for (z = 0; z < size; z++){
  800bf4:	e0bffb03 	ldbu	r2,-20(fp)
  800bf8:	10800044 	addi	r2,r2,1
  800bfc:	e0bffb05 	stb	r2,-20(fp)
  800c00:	e0bffb03 	ldbu	r2,-20(fp)
  800c04:	10ffffcc 	andi	r3,r2,65535
  800c08:	e0bffe0b 	ldhu	r2,-8(fp)
  800c0c:	18bfeb36 	bltu	r3,r2,800bbc <__alt_mem_epcs_flash_controller_0+0xff7f7bbc>
		while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
		IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, to_send[z]);
	}

	cam_reply = (uint8_t)OSQPend(used_queue, 0, &err);
  800c10:	e0bffb84 	addi	r2,fp,-18
  800c14:	100d883a 	mov	r6,r2
  800c18:	000b883a 	mov	r5,zero
  800c1c:	e13fff17 	ldw	r4,-4(fp)
  800c20:	084ef380 	call	84ef38 <OSQPend>
  800c24:	e0bffb45 	stb	r2,-19(fp)
	if (cam_reply == to_recieve[0]){
  800c28:	e0bffd17 	ldw	r2,-12(fp)
  800c2c:	10800003 	ldbu	r2,0(r2)
  800c30:	10c03fcc 	andi	r3,r2,255
  800c34:	e0bffb43 	ldbu	r2,-19(fp)
  800c38:	1880351e 	bne	r3,r2,800d10 <cam_send_command+0x188>
		printf("receiving %x", cam_reply);
  800c3c:	e0bffb43 	ldbu	r2,-19(fp)
  800c40:	100b883a 	mov	r5,r2
  800c44:	01002174 	movhi	r4,133
  800c48:	211c8204 	addi	r4,r4,29192
  800c4c:	08343dc0 	call	8343dc <printf>
		for (z = 1; z < size; z++){
  800c50:	00800044 	movi	r2,1
  800c54:	e0bffb05 	stb	r2,-20(fp)
  800c58:	00002506 	br	800cf0 <cam_send_command+0x168>
			cam_reply = (uint8_t)OSQPend(used_queue, 0, &err);
  800c5c:	e0bffb84 	addi	r2,fp,-18
  800c60:	100d883a 	mov	r6,r2
  800c64:	000b883a 	mov	r5,zero
  800c68:	e13fff17 	ldw	r4,-4(fp)
  800c6c:	084ef380 	call	84ef38 <OSQPend>
  800c70:	e0bffb45 	stb	r2,-19(fp)
			if ((cam_reply != to_recieve[z]) && (z != CAM_ACK_IGNORE)){
  800c74:	e0bffb03 	ldbu	r2,-20(fp)
  800c78:	e0fffd17 	ldw	r3,-12(fp)
  800c7c:	1885883a 	add	r2,r3,r2
  800c80:	10800003 	ldbu	r2,0(r2)
  800c84:	10c03fcc 	andi	r3,r2,255
  800c88:	e0bffb43 	ldbu	r2,-19(fp)
  800c8c:	18801026 	beq	r3,r2,800cd0 <cam_send_command+0x148>
  800c90:	e0bffb03 	ldbu	r2,-20(fp)
  800c94:	108000e0 	cmpeqi	r2,r2,3
  800c98:	10000d1e 	bne	r2,zero,800cd0 <cam_send_command+0x148>
				printf("got %x expected %x\n", cam_reply, to_recieve[z]);
  800c9c:	e13ffb43 	ldbu	r4,-19(fp)
  800ca0:	e0bffb03 	ldbu	r2,-20(fp)
  800ca4:	e0fffd17 	ldw	r3,-12(fp)
  800ca8:	1885883a 	add	r2,r3,r2
  800cac:	10800003 	ldbu	r2,0(r2)
  800cb0:	10803fcc 	andi	r2,r2,255
  800cb4:	100d883a 	mov	r6,r2
  800cb8:	200b883a 	mov	r5,r4
  800cbc:	01002174 	movhi	r4,133
  800cc0:	211c8604 	addi	r4,r4,29208
  800cc4:	08343dc0 	call	8343dc <printf>
				return FALSE;
  800cc8:	0005883a 	mov	r2,zero
  800ccc:	00001a06 	br	800d38 <cam_send_command+0x1b0>
			}else{
				printf(" %x", cam_reply);
  800cd0:	e0bffb43 	ldbu	r2,-19(fp)
  800cd4:	100b883a 	mov	r5,r2
  800cd8:	01002174 	movhi	r4,133
  800cdc:	211c5604 	addi	r4,r4,29016
  800ce0:	08343dc0 	call	8343dc <printf>
	}

	cam_reply = (uint8_t)OSQPend(used_queue, 0, &err);
	if (cam_reply == to_recieve[0]){
		printf("receiving %x", cam_reply);
		for (z = 1; z < size; z++){
  800ce4:	e0bffb03 	ldbu	r2,-20(fp)
  800ce8:	10800044 	addi	r2,r2,1
  800cec:	e0bffb05 	stb	r2,-20(fp)
  800cf0:	e0bffb03 	ldbu	r2,-20(fp)
  800cf4:	10ffffcc 	andi	r3,r2,65535
  800cf8:	e0bffe0b 	ldhu	r2,-8(fp)
  800cfc:	18bfd736 	bltu	r3,r2,800c5c <__alt_mem_epcs_flash_controller_0+0xff7f7c5c>
				return FALSE;
			}else{
				printf(" %x", cam_reply);
			}
		}
		printf("\n");
  800d00:	01000284 	movi	r4,10
  800d04:	08345880 	call	834588 <putchar>
	}else{
		printf("got %x expected %x\n", cam_reply, to_recieve[0]);
		return FALSE;
	}

	return TRUE;
  800d08:	00800044 	movi	r2,1
  800d0c:	00000a06 	br	800d38 <cam_send_command+0x1b0>
				printf(" %x", cam_reply);
			}
		}
		printf("\n");
	}else{
		printf("got %x expected %x\n", cam_reply, to_recieve[0]);
  800d10:	e0fffb43 	ldbu	r3,-19(fp)
  800d14:	e0bffd17 	ldw	r2,-12(fp)
  800d18:	10800003 	ldbu	r2,0(r2)
  800d1c:	10803fcc 	andi	r2,r2,255
  800d20:	100d883a 	mov	r6,r2
  800d24:	180b883a 	mov	r5,r3
  800d28:	01002174 	movhi	r4,133
  800d2c:	211c8604 	addi	r4,r4,29208
  800d30:	08343dc0 	call	8343dc <printf>
		return FALSE;
  800d34:	0005883a 	mov	r2,zero
	}

	return TRUE;
}
  800d38:	e037883a 	mov	sp,fp
  800d3c:	dfc00117 	ldw	ra,4(sp)
  800d40:	df000017 	ldw	fp,0(sp)
  800d44:	dec00204 	addi	sp,sp,8
  800d48:	f800283a 	ret

00800d4c <cam_uart_interrupt>:

void cam_uart_interrupt(void * context){
  800d4c:	defffc04 	addi	sp,sp,-16
  800d50:	dfc00315 	stw	ra,12(sp)
  800d54:	df000215 	stw	fp,8(sp)
  800d58:	df000204 	addi	fp,sp,8
  800d5c:	e13fff15 	stw	r4,-4(fp)
	uint8_t read = 0;
  800d60:	e03ffe05 	stb	zero,-8(fp)

	while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_RRDY_MSK));
  800d64:	0001883a 	nop
  800d68:	00804074 	movhi	r2,257
  800d6c:	10a80204 	addi	r2,r2,-24568
  800d70:	10800037 	ldwio	r2,0(r2)
  800d74:	1080200c 	andi	r2,r2,128
  800d78:	103ffb26 	beq	r2,zero,800d68 <__alt_mem_epcs_flash_controller_0+0xff7f7d68>
	read = IORD_FIFOED_AVALON_UART_RXDATA(CAM_UART_BASE);
  800d7c:	00804074 	movhi	r2,257
  800d80:	10a80004 	addi	r2,r2,-24576
  800d84:	10800037 	ldwio	r2,0(r2)
  800d88:	e0bffe05 	stb	r2,-8(fp)

	if (useData){
  800d8c:	d0a07c03 	ldbu	r2,-32272(gp)
  800d90:	10803fcc 	andi	r2,r2,255
  800d94:	10000626 	beq	r2,zero,800db0 <cam_uart_interrupt+0x64>
		OSQPost(camPackageQueue, (void*) read);
  800d98:	d0a07f17 	ldw	r2,-32260(gp)
  800d9c:	e0fffe03 	ldbu	r3,-8(fp)
  800da0:	180b883a 	mov	r5,r3
  800da4:	1009883a 	mov	r4,r2
  800da8:	084f3300 	call	84f330 <OSQPost>
	}else{
		OSQPost(camCommandQueue, (void*) read);
	}
}
  800dac:	00000506 	br	800dc4 <cam_uart_interrupt+0x78>
	read = IORD_FIFOED_AVALON_UART_RXDATA(CAM_UART_BASE);

	if (useData){
		OSQPost(camPackageQueue, (void*) read);
	}else{
		OSQPost(camCommandQueue, (void*) read);
  800db0:	d0a07e17 	ldw	r2,-32264(gp)
  800db4:	e0fffe03 	ldbu	r3,-8(fp)
  800db8:	180b883a 	mov	r5,r3
  800dbc:	1009883a 	mov	r4,r2
  800dc0:	084f3300 	call	84f330 <OSQPost>
	}
}
  800dc4:	0001883a 	nop
  800dc8:	e037883a 	mov	sp,fp
  800dcc:	dfc00117 	ldw	ra,4(sp)
  800dd0:	df000017 	ldw	fp,0(sp)
  800dd4:	dec00204 	addi	sp,sp,8
  800dd8:	f800283a 	ret

00800ddc <button_interrupt>:

void button_interrupt(void * context){
  800ddc:	defffd04 	addi	sp,sp,-12
  800de0:	dfc00215 	stw	ra,8(sp)
  800de4:	df000115 	stw	fp,4(sp)
  800de8:	df000104 	addi	fp,sp,4
  800dec:	e13fff15 	stw	r4,-4(fp)
	printf("button\n");
  800df0:	01002174 	movhi	r4,133
  800df4:	211cf104 	addi	r4,r4,29636
  800df8:	08346600 	call	834660 <puts>

	//clear interrupt
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_BUTTON_BASE, 0);
  800dfc:	0007883a 	mov	r3,zero
  800e00:	00804074 	movhi	r2,257
  800e04:	10a82f04 	addi	r2,r2,-24388
  800e08:	10c00035 	stwio	r3,0(r2)

	//post semaphore for camera
	OSSemPost(BUTTON_SEM);
  800e0c:	d0a08017 	ldw	r2,-32256(gp)
  800e10:	1009883a 	mov	r4,r2
  800e14:	08501580 	call	850158 <OSSemPost>
}
  800e18:	0001883a 	nop
  800e1c:	e037883a 	mov	sp,fp
  800e20:	dfc00117 	ldw	ra,4(sp)
  800e24:	df000017 	ldw	fp,0(sp)
  800e28:	dec00204 	addi	sp,sp,8
  800e2c:	f800283a 	ret

00800e30 <find_region>:

//http://stackoverflow.com/questions/694080/how-do-i-read-jpeg-and-png-pixels-in-c-on-linux

#include "imagepro.h"

uint16_t find_region(FILE* picture, uint8_t region){
  800e30:	deff2704 	addi	sp,sp,-868
  800e34:	dfc0d815 	stw	ra,864(sp)
  800e38:	df00d715 	stw	fp,860(sp)
  800e3c:	dc00d615 	stw	r16,856(sp)
  800e40:	df00d704 	addi	fp,sp,860
  800e44:	e13ffd15 	stw	r4,-12(fp)
  800e48:	2805883a 	mov	r2,r5
  800e4c:	e0bffe05 	stb	r2,-8(fp)
	uint32_t endTime;

	JSAMPARRAY pJpegBuffer;       /* Output row buffer */
	int row_stride;       /* physical row width in output buffer */

	startTime = clock();
  800e50:	0831ca00 	call	831ca0 <clock>
  800e54:	e0bf2d15 	stw	r2,-844(fp)

	printf("START\n");
  800e58:	01002174 	movhi	r4,133
  800e5c:	211cf304 	addi	r4,r4,29644
  800e60:	08346600 	call	834660 <puts>

	cinfo.err = jpeg_std_error(&jerr);
  800e64:	e0bfdc04 	addi	r2,fp,-144
  800e68:	1009883a 	mov	r4,r2
  800e6c:	080d9f80 	call	80d9f8 <jpeg_std_error>
  800e70:	e0bf6215 	stw	r2,-632(fp)
	jpeg_create_decompress(&cinfo);
  800e74:	e0bf6204 	addi	r2,fp,-632
  800e78:	01807a04 	movi	r6,488
  800e7c:	01401684 	movi	r5,90
  800e80:	1009883a 	mov	r4,r2
  800e84:	08018a80 	call	8018a8 <jpeg_CreateDecompress>
	printf("decompress\n");
  800e88:	01002174 	movhi	r4,133
  800e8c:	211cf504 	addi	r4,r4,29652
  800e90:	08346600 	call	834660 <puts>
	jpeg_stdio_src(&cinfo, picture);
  800e94:	e0bf6204 	addi	r2,fp,-632
  800e98:	e17ffd17 	ldw	r5,-12(fp)
  800e9c:	1009883a 	mov	r4,r2
  800ea0:	0802eb80 	call	802eb8 <jpeg_stdio_src>
	printf("load\n");
  800ea4:	01002174 	movhi	r4,133
  800ea8:	211cf804 	addi	r4,r4,29664
  800eac:	08346600 	call	834660 <puts>
	(void) jpeg_read_header(&cinfo, TRUE);
  800eb0:	e0bf6204 	addi	r2,fp,-632
  800eb4:	01400044 	movi	r5,1
  800eb8:	1009883a 	mov	r4,r2
  800ebc:	0801f300 	call	801f30 <jpeg_read_header>
	printf("header\n");
  800ec0:	01002174 	movhi	r4,133
  800ec4:	211cfa04 	addi	r4,r4,29672
  800ec8:	08346600 	call	834660 <puts>
	(void) jpeg_start_decompress(&cinfo);
  800ecc:	e0bf6204 	addi	r2,fp,-632
  800ed0:	1009883a 	mov	r4,r2
  800ed4:	080240c0 	call	80240c <jpeg_start_decompress>
	printf("decompress\n");
  800ed8:	01002174 	movhi	r4,133
  800edc:	211cf504 	addi	r4,r4,29652
  800ee0:	08346600 	call	834660 <puts>
	width = cinfo.output_width;
  800ee4:	e0bf7e17 	ldw	r2,-520(fp)
  800ee8:	e0bf2e0d 	sth	r2,-840(fp)
	height = cinfo.output_height;
  800eec:	e0bf7f17 	ldw	r2,-516(fp)
  800ef0:	e0bf2e8d 	sth	r2,-838(fp)

	printf("INFO\n");
  800ef4:	01002174 	movhi	r4,133
  800ef8:	211cfc04 	addi	r4,r4,29680
  800efc:	08346600 	call	834660 <puts>

	//Initialize... something. Clearly important
	row_stride = width * cinfo.output_components;
  800f00:	e0bf2e0b 	ldhu	r2,-840(fp)
  800f04:	e0ff8117 	ldw	r3,-508(fp)
  800f08:	180b883a 	mov	r5,r3
  800f0c:	1009883a 	mov	r4,r2
  800f10:	08301e80 	call	8301e8 <__mulsi3>
  800f14:	e0bf2f15 	stw	r2,-836(fp)
	pJpegBuffer = (*cinfo.mem->alloc_sarray)
  800f18:	e0bf6317 	ldw	r2,-628(fp)
  800f1c:	10800217 	ldw	r2,8(r2)
  800f20:	e13f2f17 	ldw	r4,-836(fp)
  800f24:	e0ff6204 	addi	r3,fp,-632
  800f28:	01c00044 	movi	r7,1
  800f2c:	200d883a 	mov	r6,r4
  800f30:	01400044 	movi	r5,1
  800f34:	1809883a 	mov	r4,r3
  800f38:	103ee83a 	callr	r2
  800f3c:	e0bf3015 	stw	r2,-832(fp)
	((j_common_ptr) &cinfo, JPOOL_IMAGE, row_stride, 1);

	printf("BUFFER\n");
  800f40:	01002174 	movhi	r4,133
  800f44:	211cfe04 	addi	r4,r4,29688
  800f48:	08346600 	call	834660 <puts>

	//Initialize the regions struct array
	for (y=0; y < REGION_COUNT; y++){
  800f4c:	e03f2a0d 	sth	zero,-856(fp)
  800f50:	00003306 	br	801020 <find_region+0x1f0>
		regions[y].confidence = 0;
  800f54:	e0bf2a0b 	ldhu	r2,-856(fp)
  800f58:	01400484 	movi	r5,18
  800f5c:	1009883a 	mov	r4,r2
  800f60:	08301e80 	call	8301e8 <__mulsi3>
  800f64:	e0ff2904 	addi	r3,fp,-860
  800f68:	1885883a 	add	r2,r3,r2
  800f6c:	10800c04 	addi	r2,r2,48
  800f70:	1000000d 	sth	zero,0(r2)
		regions[y].pixels_detected = 0;
  800f74:	e0bf2a0b 	ldhu	r2,-856(fp)
  800f78:	01400484 	movi	r5,18
  800f7c:	1009883a 	mov	r4,r2
  800f80:	08301e80 	call	8301e8 <__mulsi3>
  800f84:	e0ff2904 	addi	r3,fp,-860
  800f88:	1885883a 	add	r2,r3,r2
  800f8c:	10800c84 	addi	r2,r2,50
  800f90:	1000000d 	sth	zero,0(r2)
		regions[y].cols_traversed = 0;
  800f94:	e0bf2a0b 	ldhu	r2,-856(fp)
  800f98:	01400484 	movi	r5,18
  800f9c:	1009883a 	mov	r4,r2
  800fa0:	08301e80 	call	8301e8 <__mulsi3>
  800fa4:	e0ff2904 	addi	r3,fp,-860
  800fa8:	1885883a 	add	r2,r3,r2
  800fac:	10800d84 	addi	r2,r2,54
  800fb0:	1000000d 	sth	zero,0(r2)
		regions[y].rows_traversed = 0;
  800fb4:	e0bf2a0b 	ldhu	r2,-856(fp)
  800fb8:	01400484 	movi	r5,18
  800fbc:	1009883a 	mov	r4,r2
  800fc0:	08301e80 	call	8301e8 <__mulsi3>
  800fc4:	e0ff2904 	addi	r3,fp,-860
  800fc8:	1885883a 	add	r2,r3,r2
  800fcc:	10800d04 	addi	r2,r2,52
  800fd0:	1000000d 	sth	zero,0(r2)
		regions[y].x = 0;
  800fd4:	e0bf2a0b 	ldhu	r2,-856(fp)
  800fd8:	01400484 	movi	r5,18
  800fdc:	1009883a 	mov	r4,r2
  800fe0:	08301e80 	call	8301e8 <__mulsi3>
  800fe4:	e0ff2904 	addi	r3,fp,-860
  800fe8:	1885883a 	add	r2,r3,r2
  800fec:	10800e04 	addi	r2,r2,56
  800ff0:	1000000d 	sth	zero,0(r2)
		regions[y].y = 0;
  800ff4:	e0bf2a0b 	ldhu	r2,-856(fp)
  800ff8:	01400484 	movi	r5,18
  800ffc:	1009883a 	mov	r4,r2
  801000:	08301e80 	call	8301e8 <__mulsi3>
  801004:	e0ff2904 	addi	r3,fp,-860
  801008:	1885883a 	add	r2,r3,r2
  80100c:	10800e84 	addi	r2,r2,58
  801010:	1000000d 	sth	zero,0(r2)
	((j_common_ptr) &cinfo, JPOOL_IMAGE, row_stride, 1);

	printf("BUFFER\n");

	//Initialize the regions struct array
	for (y=0; y < REGION_COUNT; y++){
  801014:	e0bf2a0b 	ldhu	r2,-856(fp)
  801018:	10800044 	addi	r2,r2,1
  80101c:	e0bf2a0d 	sth	r2,-856(fp)
  801020:	e0bf2a0b 	ldhu	r2,-856(fp)
  801024:	108002b0 	cmpltui	r2,r2,10
  801028:	103fca1e 	bne	r2,zero,800f54 <__alt_mem_epcs_flash_controller_0+0xff7f7f54>
		regions[y].x = 0;
		regions[y].y = 0;
	}

	//Iterate over the image row by row and detect color regions
	y = 0;
  80102c:	e03f2a0d 	sth	zero,-856(fp)
	while (cinfo.output_scanline < height) {
  801030:	00008d06 	br	801268 <find_region+0x438>
		region_found = FALSE;
  801034:	e03f2c15 	stw	zero,-848(fp)
		temp_row_count = 0;
  801038:	e03f2a8d 	sth	zero,-854(fp)
		temp_x = 0;
  80103c:	e03f2b0d 	sth	zero,-852(fp)
		(void) jpeg_read_scanlines(&cinfo, pJpegBuffer, 1);
  801040:	e0bf6204 	addi	r2,fp,-632
  801044:	01800044 	movi	r6,1
  801048:	e17f3017 	ldw	r5,-832(fp)
  80104c:	1009883a 	mov	r4,r2
  801050:	08027380 	call	802738 <jpeg_read_scanlines>
		for (x = 0; x < width; x++) {
  801054:	e03f298d 	sth	zero,-858(fp)
  801058:	00006e06 	br	801214 <find_region+0x3e4>
			r = pJpegBuffer[0][cinfo.output_components * x];
  80105c:	e0bf3017 	ldw	r2,-832(fp)
  801060:	14000017 	ldw	r16,0(r2)
  801064:	e0bf8117 	ldw	r2,-508(fp)
  801068:	e0ff298b 	ldhu	r3,-858(fp)
  80106c:	180b883a 	mov	r5,r3
  801070:	1009883a 	mov	r4,r2
  801074:	08301e80 	call	8301e8 <__mulsi3>
  801078:	8085883a 	add	r2,r16,r2
  80107c:	10800003 	ldbu	r2,0(r2)
  801080:	e0bf3105 	stb	r2,-828(fp)
			if (cinfo.output_components > 2) {
  801084:	e0bf8117 	ldw	r2,-508(fp)
  801088:	108000d0 	cmplti	r2,r2,3
  80108c:	1000171e 	bne	r2,zero,8010ec <find_region+0x2bc>
				g = pJpegBuffer[0][cinfo.output_components * x + 1];
  801090:	e0bf3017 	ldw	r2,-832(fp)
  801094:	14000017 	ldw	r16,0(r2)
  801098:	e0bf8117 	ldw	r2,-508(fp)
  80109c:	e0ff298b 	ldhu	r3,-858(fp)
  8010a0:	180b883a 	mov	r5,r3
  8010a4:	1009883a 	mov	r4,r2
  8010a8:	08301e80 	call	8301e8 <__mulsi3>
  8010ac:	10800044 	addi	r2,r2,1
  8010b0:	8085883a 	add	r2,r16,r2
  8010b4:	10800003 	ldbu	r2,0(r2)
  8010b8:	e0bf2905 	stb	r2,-860(fp)
				b = pJpegBuffer[0][cinfo.output_components * x + 2];
  8010bc:	e0bf3017 	ldw	r2,-832(fp)
  8010c0:	14000017 	ldw	r16,0(r2)
  8010c4:	e0bf8117 	ldw	r2,-508(fp)
  8010c8:	e0ff298b 	ldhu	r3,-858(fp)
  8010cc:	180b883a 	mov	r5,r3
  8010d0:	1009883a 	mov	r4,r2
  8010d4:	08301e80 	call	8301e8 <__mulsi3>
  8010d8:	10800084 	addi	r2,r2,2
  8010dc:	8085883a 	add	r2,r16,r2
  8010e0:	10800003 	ldbu	r2,0(r2)
  8010e4:	e0bf2945 	stb	r2,-859(fp)
  8010e8:	00000406 	br	8010fc <find_region+0x2cc>
			} else {
				g = r;
  8010ec:	e0bf3103 	ldbu	r2,-828(fp)
  8010f0:	e0bf2905 	stb	r2,-860(fp)
				b = r;
  8010f4:	e0bf3103 	ldbu	r2,-828(fp)
  8010f8:	e0bf2945 	stb	r2,-859(fp)
			}

			if ((region == REGION_RED) && (r > REDREG_RED) &&
  8010fc:	e0bffe03 	ldbu	r2,-8(fp)
  801100:	1000141e 	bne	r2,zero,801154 <find_region+0x324>
  801104:	e0bf3103 	ldbu	r2,-828(fp)
  801108:	10803770 	cmpltui	r2,r2,221
  80110c:	1000111e 	bne	r2,zero,801154 <find_region+0x324>
  801110:	e0bf2903 	ldbu	r2,-860(fp)
  801114:	108016a8 	cmpgeui	r2,r2,90
  801118:	10000e1e 	bne	r2,zero,801154 <find_region+0x324>
					(g < REDREG_GRN) && (b < REDREG_BLU)){
  80111c:	e0bf2943 	ldbu	r2,-859(fp)
  801120:	108016a8 	cmpgeui	r2,r2,90
  801124:	10000b1e 	bne	r2,zero,801154 <find_region+0x324>
				temp_row_count++;
  801128:	e0bf2a8b 	ldhu	r2,-854(fp)
  80112c:	10800044 	addi	r2,r2,1
  801130:	e0bf2a8d 	sth	r2,-854(fp)
				temp_x = x;
  801134:	e0bf298b 	ldhu	r2,-858(fp)
  801138:	e0bf2b0d 	sth	r2,-852(fp)
				region_found = TRUE;
  80113c:	00800044 	movi	r2,1
  801140:	e0bf2c15 	stw	r2,-848(fp)
				regions[0].pixels_detected++;
  801144:	e0bf358b 	ldhu	r2,-810(fp)
  801148:	10800044 	addi	r2,r2,1
  80114c:	e0bf358d 	sth	r2,-810(fp)
  801150:	00002d06 	br	801208 <find_region+0x3d8>
			}else if ((region == REGION_GRN) && (r < GRNREG_RED) &&
  801154:	e0bffe03 	ldbu	r2,-8(fp)
  801158:	10800058 	cmpnei	r2,r2,1
  80115c:	1000141e 	bne	r2,zero,8011b0 <find_region+0x380>
  801160:	e0bf3103 	ldbu	r2,-828(fp)
  801164:	10801928 	cmpgeui	r2,r2,100
  801168:	1000111e 	bne	r2,zero,8011b0 <find_region+0x380>
  80116c:	e0bf2903 	ldbu	r2,-860(fp)
  801170:	10801bf0 	cmpltui	r2,r2,111
  801174:	10000e1e 	bne	r2,zero,8011b0 <find_region+0x380>
					(g > GRNREG_GRN) && (b < GRNREG_BLU)){
  801178:	e0bf2943 	ldbu	r2,-859(fp)
  80117c:	10800a28 	cmpgeui	r2,r2,40
  801180:	10000b1e 	bne	r2,zero,8011b0 <find_region+0x380>
				temp_row_count++;
  801184:	e0bf2a8b 	ldhu	r2,-854(fp)
  801188:	10800044 	addi	r2,r2,1
  80118c:	e0bf2a8d 	sth	r2,-854(fp)
				temp_x = x;
  801190:	e0bf298b 	ldhu	r2,-858(fp)
  801194:	e0bf2b0d 	sth	r2,-852(fp)
				region_found = TRUE;
  801198:	00800044 	movi	r2,1
  80119c:	e0bf2c15 	stw	r2,-848(fp)
				regions[0].pixels_detected++;
  8011a0:	e0bf358b 	ldhu	r2,-810(fp)
  8011a4:	10800044 	addi	r2,r2,1
  8011a8:	e0bf358d 	sth	r2,-810(fp)
  8011ac:	00001606 	br	801208 <find_region+0x3d8>
			}else if ((region == REGION_BLU) && (r < BLUREG_RED) &&
  8011b0:	e0bffe03 	ldbu	r2,-8(fp)
  8011b4:	10800098 	cmpnei	r2,r2,2
  8011b8:	1000131e 	bne	r2,zero,801208 <find_region+0x3d8>
  8011bc:	e0bf3103 	ldbu	r2,-828(fp)
  8011c0:	108007a8 	cmpgeui	r2,r2,30
  8011c4:	1000101e 	bne	r2,zero,801208 <find_region+0x3d8>
  8011c8:	e0bf2903 	ldbu	r2,-860(fp)
  8011cc:	108007a8 	cmpgeui	r2,r2,30
  8011d0:	10000d1e 	bne	r2,zero,801208 <find_region+0x3d8>
					(g < BLUREG_GRN) && (b > BLUREG_BLU)){
  8011d4:	e0bf2943 	ldbu	r2,-859(fp)
  8011d8:	10800a70 	cmpltui	r2,r2,41
  8011dc:	10000a1e 	bne	r2,zero,801208 <find_region+0x3d8>
				temp_row_count++;
  8011e0:	e0bf2a8b 	ldhu	r2,-854(fp)
  8011e4:	10800044 	addi	r2,r2,1
  8011e8:	e0bf2a8d 	sth	r2,-854(fp)
				temp_x = x;
  8011ec:	e0bf298b 	ldhu	r2,-858(fp)
  8011f0:	e0bf2b0d 	sth	r2,-852(fp)
				region_found = TRUE;
  8011f4:	00800044 	movi	r2,1
  8011f8:	e0bf2c15 	stw	r2,-848(fp)
				regions[0].pixels_detected++;
  8011fc:	e0bf358b 	ldhu	r2,-810(fp)
  801200:	10800044 	addi	r2,r2,1
  801204:	e0bf358d 	sth	r2,-810(fp)
	while (cinfo.output_scanline < height) {
		region_found = FALSE;
		temp_row_count = 0;
		temp_x = 0;
		(void) jpeg_read_scanlines(&cinfo, pJpegBuffer, 1);
		for (x = 0; x < width; x++) {
  801208:	e0bf298b 	ldhu	r2,-858(fp)
  80120c:	10800044 	addi	r2,r2,1
  801210:	e0bf298d 	sth	r2,-858(fp)
  801214:	e0ff298b 	ldhu	r3,-858(fp)
  801218:	e0bf2e0b 	ldhu	r2,-840(fp)
  80121c:	18bf8f36 	bltu	r3,r2,80105c <__alt_mem_epcs_flash_controller_0+0xff7f805c>
				region_found = TRUE;
				regions[0].pixels_detected++;
			}
		}

		if (region_found){
  801220:	e0bf2c17 	ldw	r2,-848(fp)
  801224:	10000d26 	beq	r2,zero,80125c <find_region+0x42c>
			regions[0].cols_traversed++;
  801228:	e0bf368b 	ldhu	r2,-806(fp)
  80122c:	10800044 	addi	r2,r2,1
  801230:	e0bf368d 	sth	r2,-806(fp)
			regions[0].y = y;
  801234:	e0bf2a0b 	ldhu	r2,-856(fp)
  801238:	e0bf378d 	sth	r2,-802(fp)
			if (temp_row_count > regions[0].rows_traversed){
  80123c:	e0bf360b 	ldhu	r2,-808(fp)
  801240:	10ffffcc 	andi	r3,r2,65535
  801244:	e0bf2a8b 	ldhu	r2,-854(fp)
  801248:	1880042e 	bgeu	r3,r2,80125c <find_region+0x42c>
				regions[0].rows_traversed = temp_row_count;
  80124c:	e0bf2a8b 	ldhu	r2,-854(fp)
  801250:	e0bf360d 	sth	r2,-808(fp)
				regions[0].x = temp_x;
  801254:	e0bf2b0b 	ldhu	r2,-852(fp)
  801258:	e0bf370d 	sth	r2,-804(fp)
			}
		}
		y++;
  80125c:	e0bf2a0b 	ldhu	r2,-856(fp)
  801260:	10800044 	addi	r2,r2,1
  801264:	e0bf2a0d 	sth	r2,-856(fp)
		regions[y].y = 0;
	}

	//Iterate over the image row by row and detect color regions
	y = 0;
	while (cinfo.output_scanline < height) {
  801268:	e0ff8517 	ldw	r3,-492(fp)
  80126c:	e0bf2e8b 	ldhu	r2,-838(fp)
  801270:	18bf7036 	bltu	r3,r2,801034 <__alt_mem_epcs_flash_controller_0+0xff7f8034>
			}
		}
		y++;
	}

	endTime = clock() - startTime;
  801274:	0831ca00 	call	831ca0 <clock>
  801278:	1007883a 	mov	r3,r2
  80127c:	e0bf2d17 	ldw	r2,-844(fp)
  801280:	1885c83a 	sub	r2,r3,r2
  801284:	e0bf3215 	stw	r2,-824(fp)
	endTime /= 1000;
  801288:	e0bf3217 	ldw	r2,-824(fp)
  80128c:	0140fa04 	movi	r5,1000
  801290:	1009883a 	mov	r4,r2
  801294:	083012c0 	call	83012c <__udivsi3>
  801298:	e0bf3215 	stw	r2,-824(fp)

	int row_mid = regions[0].x - (regions[0].rows_traversed / 2);
  80129c:	e0bf370b 	ldhu	r2,-804(fp)
  8012a0:	10ffffcc 	andi	r3,r2,65535
  8012a4:	e0bf360b 	ldhu	r2,-808(fp)
  8012a8:	10bfffcc 	andi	r2,r2,65535
  8012ac:	1004d07a 	srli	r2,r2,1
  8012b0:	10bfffcc 	andi	r2,r2,65535
  8012b4:	1885c83a 	sub	r2,r3,r2
  8012b8:	e0bf3315 	stw	r2,-820(fp)
	int col_mid = regions[0].y - (regions[0].cols_traversed / 2);
  8012bc:	e0bf378b 	ldhu	r2,-802(fp)
  8012c0:	10ffffcc 	andi	r3,r2,65535
  8012c4:	e0bf368b 	ldhu	r2,-806(fp)
  8012c8:	10bfffcc 	andi	r2,r2,65535
  8012cc:	1004d07a 	srli	r2,r2,1
  8012d0:	10bfffcc 	andi	r2,r2,65535
  8012d4:	1885c83a 	sub	r2,r3,r2
  8012d8:	e0bf3415 	stw	r2,-816(fp)

	printf("height_end=%i width_end=%i\n", regions[0].y, regions[0].x);
  8012dc:	e0bf378b 	ldhu	r2,-802(fp)
  8012e0:	10bfffcc 	andi	r2,r2,65535
  8012e4:	e0ff370b 	ldhu	r3,-804(fp)
  8012e8:	18ffffcc 	andi	r3,r3,65535
  8012ec:	180d883a 	mov	r6,r3
  8012f0:	100b883a 	mov	r5,r2
  8012f4:	01002174 	movhi	r4,133
  8012f8:	211d0004 	addi	r4,r4,29696
  8012fc:	08343dc0 	call	8343dc <printf>
	printf("height_mid=%i width_mid=%i\n", col_mid, row_mid);
  801300:	e1bf3317 	ldw	r6,-820(fp)
  801304:	e17f3417 	ldw	r5,-816(fp)
  801308:	01002174 	movhi	r4,133
  80130c:	211d0704 	addi	r4,r4,29724
  801310:	08343dc0 	call	8343dc <printf>
	printf("cols=%i rows=%i\n", regions[0].cols_traversed, regions[0].rows_traversed);
  801314:	e0bf368b 	ldhu	r2,-806(fp)
  801318:	10bfffcc 	andi	r2,r2,65535
  80131c:	e0ff360b 	ldhu	r3,-808(fp)
  801320:	18ffffcc 	andi	r3,r3,65535
  801324:	180d883a 	mov	r6,r3
  801328:	100b883a 	mov	r5,r2
  80132c:	01002174 	movhi	r4,133
  801330:	211d0e04 	addi	r4,r4,29752
  801334:	08343dc0 	call	8343dc <printf>
	printf("confidence=%i\n", regions[0].confidence);
  801338:	e0bf350b 	ldhu	r2,-812(fp)
  80133c:	10bfffcc 	andi	r2,r2,65535
  801340:	100b883a 	mov	r5,r2
  801344:	01002174 	movhi	r4,133
  801348:	211d1304 	addi	r4,r4,29772
  80134c:	08343dc0 	call	8343dc <printf>
	printf("clock ticks=%i\n", endTime);
  801350:	e17f3217 	ldw	r5,-824(fp)
  801354:	01002174 	movhi	r4,133
  801358:	211d1704 	addi	r4,r4,29788
  80135c:	08343dc0 	call	8343dc <printf>

	(void) jpeg_finish_decompress(&cinfo);
  801360:	e0bf6204 	addi	r2,fp,-632
  801364:	1009883a 	mov	r4,r2
  801368:	08022a00 	call	8022a0 <jpeg_finish_decompress>
	jpeg_destroy_decompress(&cinfo);
  80136c:	e0bf6204 	addi	r2,fp,-632
  801370:	1009883a 	mov	r4,r2
  801374:	0801aa00 	call	801aa0 <jpeg_destroy_decompress>

	printf("DONE\n");
  801378:	01002174 	movhi	r4,133
  80137c:	211d1b04 	addi	r4,r4,29804
  801380:	08346600 	call	834660 <puts>

	if (regions[0].pixels_detected > 0){
  801384:	e0bf358b 	ldhu	r2,-810(fp)
  801388:	10bfffcc 	andi	r2,r2,65535
  80138c:	10000526 	beq	r2,zero,8013a4 <find_region+0x574>
		return width - row_mid;
  801390:	e0bf3317 	ldw	r2,-820(fp)
  801394:	1007883a 	mov	r3,r2
  801398:	e0bf2e0b 	ldhu	r2,-840(fp)
  80139c:	10c5c83a 	sub	r2,r2,r3
  8013a0:	00000106 	br	8013a8 <find_region+0x578>
	}else{
		//Found nothing
		return -1;
  8013a4:	00bfffc4 	movi	r2,-1
	}
}
  8013a8:	e6ffff04 	addi	sp,fp,-4
  8013ac:	dfc00217 	ldw	ra,8(sp)
  8013b0:	df000117 	ldw	fp,4(sp)
  8013b4:	dc000017 	ldw	r16,0(sp)
  8013b8:	dec00304 	addi	sp,sp,12
  8013bc:	f800283a 	ret

008013c0 <motor_test>:

/*
 * Drives FORWARD initially but when the INFRARED SENSOR
 * detects something and it will REVERSE the direction
 */
void motor_test(void* pdata){
  8013c0:	defffd04 	addi	sp,sp,-12
  8013c4:	dfc00215 	stw	ra,8(sp)
  8013c8:	df000115 	stw	fp,4(sp)
  8013cc:	df000104 	addi	fp,sp,4
  8013d0:	e13fff15 	stw	r4,-4(fp)
		OSTimeDlyHMSM(0, 0, 0, 500);
		IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_L_BASE, MOTOR_SHORTSTOP);
		IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_R_BASE, MOTOR_SHORTSTOP);

        */
		OSTimeDlyHMSM(0, 0, 1, 0);
  8013d4:	000f883a 	mov	r7,zero
  8013d8:	01800044 	movi	r6,1
  8013dc:	000b883a 	mov	r5,zero
  8013e0:	0009883a 	mov	r4,zero
  8013e4:	0851ce80 	call	851ce8 <OSTimeDlyHMSM>
		IOWR_ALTERA_AVALON_PIO_DATA(SPEAKER_BASE, 0x0);
  8013e8:	0007883a 	mov	r3,zero
  8013ec:	00804074 	movhi	r2,257
  8013f0:	10a82404 	addi	r2,r2,-24432
  8013f4:	10c00035 	stwio	r3,0(r2)
	}
  8013f8:	003ff606 	br	8013d4 <__alt_mem_epcs_flash_controller_0+0xff7f83d4>

008013fc <sensor_interrupt>:
}

void sensor_interrupt(void * context){
  8013fc:	defffd04 	addi	sp,sp,-12
  801400:	dfc00215 	stw	ra,8(sp)
  801404:	df000115 	stw	fp,4(sp)
  801408:	df000104 	addi	fp,sp,4
  80140c:	e13fff15 	stw	r4,-4(fp)
	printf("sensor\n");
  801410:	01002174 	movhi	r4,133
  801414:	211d1d04 	addi	r4,r4,29812
  801418:	08346600 	call	834660 <puts>

	//clear interrupt
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PROX_SENSOR_BASE, 1);
  80141c:	00c00044 	movi	r3,1
  801420:	00804074 	movhi	r2,257
  801424:	10a83f04 	addi	r2,r2,-24324
  801428:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_IRQ_MASK(PROX_SENSOR_BASE, 0xF);
  80142c:	00c003c4 	movi	r3,15
  801430:	00804074 	movhi	r2,257
  801434:	10a83e04 	addi	r2,r2,-24328
  801438:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(SPEAKER_BASE, 0x1);
  80143c:	00c00044 	movi	r3,1
  801440:	00804074 	movhi	r2,257
  801444:	10a82404 	addi	r2,r2,-24432
  801448:	10c00035 	stwio	r3,0(r2)

	//post semaphore for camera
	//OSSemPost(SENSOR_SEM);
}
  80144c:	0001883a 	nop
  801450:	e037883a 	mov	sp,fp
  801454:	dfc00117 	ldw	ra,4(sp)
  801458:	df000017 	ldw	fp,0(sp)
  80145c:	dec00204 	addi	sp,sp,8
  801460:	f800283a 	ret

00801464 <main>:
 */



/* The main function creates two task and starts multi-tasking */
int main(void){
  801464:	defff904 	addi	sp,sp,-28
  801468:	dfc00615 	stw	ra,24(sp)
  80146c:	df000515 	stw	fp,20(sp)
  801470:	df000504 	addi	fp,sp,20
  
	printf("START OF MAIN\n");
  801474:	01002174 	movhi	r4,133
  801478:	211d2504 	addi	r4,r4,29844
  80147c:	08346600 	call	834660 <puts>


	if(OSTaskCreateExt(motor_test,
  801480:	d8000415 	stw	zero,16(sp)
  801484:	d8000315 	stw	zero,12(sp)
  801488:	00820004 	movi	r2,2048
  80148c:	d8800215 	stw	r2,8(sp)
  801490:	008021b4 	movhi	r2,134
  801494:	10b40504 	addi	r2,r2,-12268
  801498:	d8800115 	stw	r2,4(sp)
  80149c:	00800084 	movi	r2,2
  8014a0:	d8800015 	stw	r2,0(sp)
  8014a4:	01c00084 	movi	r7,2
  8014a8:	018021b4 	movhi	r6,134
  8014ac:	31bc0404 	addi	r6,r6,-4080
  8014b0:	000b883a 	mov	r5,zero
  8014b4:	01002034 	movhi	r4,128
  8014b8:	2104f004 	addi	r4,r4,5056
  8014bc:	0850b140 	call	850b14 <OSTaskCreateExt>
  8014c0:	10803fcc 	andi	r2,r2,255
  8014c4:	10000326 	beq	r2,zero,8014d4 <main+0x70>
                  		motor_test_stk,
                  		TASK_STACKSIZE,
                  		NULL,
                  		0))
	{
		printf("Motor task creation failure\n");
  8014c8:	01002174 	movhi	r4,133
  8014cc:	211d2904 	addi	r4,r4,29860
  8014d0:	08346600 	call	834660 <puts>

	//printf("START OF MOTOR\n");



	if(OSTaskCreateExt(camera_test,
  8014d4:	d8000415 	stw	zero,16(sp)
  8014d8:	d8000315 	stw	zero,12(sp)
  8014dc:	00820004 	movi	r2,2048
  8014e0:	d8800215 	stw	r2,8(sp)
  8014e4:	008021b4 	movhi	r2,134
  8014e8:	10840504 	addi	r2,r2,4116
  8014ec:	d8800115 	stw	r2,4(sp)
  8014f0:	00800044 	movi	r2,1
  8014f4:	d8800015 	stw	r2,0(sp)
  8014f8:	01c00044 	movi	r7,1
  8014fc:	018021b4 	movhi	r6,134
  801500:	318c0404 	addi	r6,r6,12304
  801504:	000b883a 	mov	r5,zero
  801508:	01002034 	movhi	r4,128
  80150c:	21000e04 	addi	r4,r4,56
  801510:	0850b140 	call	850b14 <OSTaskCreateExt>
  801514:	10803fcc 	andi	r2,r2,255
  801518:	10000326 	beq	r2,zero,801528 <main+0xc4>
                  		camera_test_stk,
                  		TASK_STACKSIZE,
                  		NULL,
                  		0))
	{
		printf("Camera task creation failure\n");
  80151c:	01002174 	movhi	r4,133
  801520:	211d3004 	addi	r4,r4,29888
  801524:	08346600 	call	834660 <puts>
	}

	printf("START OF CAM\n");
  801528:	01002174 	movhi	r4,133
  80152c:	211d3804 	addi	r4,r4,29920
  801530:	08346600 	call	834660 <puts>

	if(OSTaskCreateExt(wifi_test,
  801534:	d8000415 	stw	zero,16(sp)
  801538:	d8000315 	stw	zero,12(sp)
  80153c:	00820004 	movi	r2,2048
  801540:	d8800215 	stw	r2,8(sp)
  801544:	008021b4 	movhi	r2,134
  801548:	10bc0504 	addi	r2,r2,-4076
  80154c:	d8800115 	stw	r2,4(sp)
  801550:	008000c4 	movi	r2,3
  801554:	d8800015 	stw	r2,0(sp)
  801558:	01c000c4 	movi	r7,3
  80155c:	018021b4 	movhi	r6,134
  801560:	31840404 	addi	r6,r6,4112
  801564:	000b883a 	mov	r5,zero
  801568:	01002034 	movhi	r4,128
  80156c:	2105b404 	addi	r4,r4,5840
  801570:	0850b140 	call	850b14 <OSTaskCreateExt>
  801574:	10803fcc 	andi	r2,r2,255
  801578:	10000326 	beq	r2,zero,801588 <main+0x124>
                    	wifi_test_stk,
                    	TASK_STACKSIZE,
                    	NULL,
                    	0))
	{
		printf("Wifi task creation failure\n");
  80157c:	01002174 	movhi	r4,133
  801580:	211d3c04 	addi	r4,r4,29936
  801584:	08346600 	call	834660 <puts>
	}

	printf("START OF WIFI\n");
  801588:	01002174 	movhi	r4,133
  80158c:	211d4304 	addi	r4,r4,29964
  801590:	08346600 	call	834660 <puts>

	//Semaphore
	BUTTON_SEM = OSSemCreate(SEM_INIT_VALUE);
  801594:	0009883a 	mov	r4,zero
  801598:	084fac80 	call	84fac8 <OSSemCreate>
  80159c:	d0a08015 	stw	r2,-32256(gp)
	SENSOR_SEM = OSSemCreate(SEM_INIT_VALUE);
  8015a0:	0009883a 	mov	r4,zero
  8015a4:	084fac80 	call	84fac8 <OSSemCreate>
  8015a8:	d0a08115 	stw	r2,-32252(gp)

	//Interrupt masks
	IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BUTTON_BUTTON_BASE, 0xF);
  8015ac:	00c003c4 	movi	r3,15
  8015b0:	00804074 	movhi	r2,257
  8015b4:	10a82e04 	addi	r2,r2,-24392
  8015b8:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_BUTTON_BASE, 0x0);
  8015bc:	0007883a 	mov	r3,zero
  8015c0:	00804074 	movhi	r2,257
  8015c4:	10a82f04 	addi	r2,r2,-24388
  8015c8:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_IRQ_MASK(PROX_SENSOR_BASE, 0xF);
  8015cc:	00c003c4 	movi	r3,15
  8015d0:	00804074 	movhi	r2,257
  8015d4:	10a83e04 	addi	r2,r2,-24328
  8015d8:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PROX_SENSOR_BASE, 0x0);
  8015dc:	0007883a 	mov	r3,zero
  8015e0:	00804074 	movhi	r2,257
  8015e4:	10a83f04 	addi	r2,r2,-24324
  8015e8:	10c00035 	stwio	r3,0(r2)
//					    	NULL))
//	{
//	  printf("button interrupt failed\n");
//	}

	if(alt_ic_isr_register(PROX_SENSOR_IRQ_INTERRUPT_CONTROLLER_ID,
  8015ec:	d8000015 	stw	zero,0(sp)
  8015f0:	000f883a 	mov	r7,zero
  8015f4:	01802034 	movhi	r6,128
  8015f8:	3184ff04 	addi	r6,r6,5116
  8015fc:	01400084 	movi	r5,2
  801600:	0009883a 	mov	r4,zero
  801604:	0849ac00 	call	849ac0 <alt_ic_isr_register>
  801608:	10000326 	beq	r2,zero,801618 <main+0x1b4>
					    	PROX_SENSOR_IRQ,
					    	sensor_interrupt,
					    	NULL,
					    	NULL))
	{
	  printf("proximity sensor interrupt failed\n");
  80160c:	01002174 	movhi	r4,133
  801610:	211d4704 	addi	r4,r4,29980
  801614:	08346600 	call	834660 <puts>
	}

	if(alt_ic_isr_register(CAM_UART_IRQ_INTERRUPT_CONTROLLER_ID,
  801618:	d8000015 	stw	zero,0(sp)
  80161c:	000f883a 	mov	r7,zero
  801620:	01802034 	movhi	r6,128
  801624:	31835304 	addi	r6,r6,3404
  801628:	014001c4 	movi	r5,7
  80162c:	0009883a 	mov	r4,zero
  801630:	0849ac00 	call	849ac0 <alt_ic_isr_register>
  801634:	10000326 	beq	r2,zero,801644 <main+0x1e0>
				  	  	   CAM_UART_IRQ,
				  	  	   &cam_uart_interrupt,
				  	  	   NULL,
				  	  	   NULL))
	{
	  printf("cam interrupt failed\n");
  801638:	01002174 	movhi	r4,133
  80163c:	211d5004 	addi	r4,r4,30016
  801640:	08346600 	call	834660 <puts>
	}
    
    if(alt_ic_isr_register(WIFI_UART_IRQ_INTERRUPT_CONTROLLER_ID,
  801644:	d8000015 	stw	zero,0(sp)
  801648:	000f883a 	mov	r7,zero
  80164c:	01802034 	movhi	r6,128
  801650:	3185d504 	addi	r6,r6,5972
  801654:	01400044 	movi	r5,1
  801658:	0009883a 	mov	r4,zero
  80165c:	0849ac00 	call	849ac0 <alt_ic_isr_register>
  801660:	10000326 	beq	r2,zero,801670 <main+0x20c>
				  	  	   WIFI_UART_IRQ,
				  	  	   &wifi_uart_interrupt,
				  	  	   NULL,
				  	  	   NULL))
	{
	  printf("wifi interrupt failed\n");
  801664:	01002174 	movhi	r4,133
  801668:	211d5604 	addi	r4,r4,30040
  80166c:	08346600 	call	834660 <puts>
	}

	camCommandQueue = OSQCreate(camCommandBuffer, CAM_COMMAND_LENGTH*2);
  801670:	01400304 	movi	r5,12
  801674:	010021b4 	movhi	r4,134
  801678:	2133f404 	addi	r4,r4,-12336
  80167c:	084ea540 	call	84ea54 <OSQCreate>
  801680:	d0a07e15 	stw	r2,-32264(gp)
	camPackageQueue = OSQCreate(camPackageBuffer, CAM_PACKAGE_LENGTH*2);
  801684:	01410004 	movi	r5,1024
  801688:	010021b4 	movhi	r4,134
  80168c:	212ff404 	addi	r4,r4,-16432
  801690:	084ea540 	call	84ea54 <OSQCreate>
  801694:	d0a07f15 	stw	r2,-32260(gp)
    wifiPackageQueue = OSQCreate(wifiPackageBuffer, WIFI_PACKAGE_BUFFER_LENGTH);
  801698:	01400044 	movi	r5,1
  80169c:	d1208204 	addi	r4,gp,-32248
  8016a0:	084ea540 	call	84ea54 <OSQCreate>
  8016a4:	d0a08315 	stw	r2,-32244(gp)

	printf("END OF MAIN\n");
  8016a8:	01002174 	movhi	r4,133
  8016ac:	211d5c04 	addi	r4,r4,30064
  8016b0:	08346600 	call	834660 <puts>

	OSStart();
  8016b4:	084b4700 	call	84b470 <OSStart>

	return 0;
  8016b8:	0005883a 	mov	r2,zero
}
  8016bc:	e037883a 	mov	sp,fp
  8016c0:	dfc00117 	ldw	ra,4(sp)
  8016c4:	df000017 	ldw	fp,0(sp)
  8016c8:	dec00204 	addi	sp,sp,8
  8016cc:	f800283a 	ret

008016d0 <wifi_test>:
 */

#include "wifi_test.h"
#include "motor_test.h"

void wifi_test(void* pdata){
  8016d0:	defffc04 	addi	sp,sp,-16
  8016d4:	dfc00315 	stw	ra,12(sp)
  8016d8:	df000215 	stw	fp,8(sp)
  8016dc:	df000204 	addi	fp,sp,8
  8016e0:	e13fff15 	stw	r4,-4(fp)
    uint8_t wifiReceive;

	while (1){
		  //do stuff
		// OSSemPend(BUTTON_SEM, 0, &err);
		printf("Hello from wifi\n");
  8016e4:	01002174 	movhi	r4,133
  8016e8:	211d5f04 	addi	r4,r4,30076
  8016ec:	08346600 	call	834660 <puts>
	    //IOWR_ALTERA_AVALON_PIO_DATA(SPEAKER_BASE, 0x1);
	    printf("buzz buzz\n");
  8016f0:	01002174 	movhi	r4,133
  8016f4:	211d6304 	addi	r4,r4,30092
  8016f8:	08346600 	call	834660 <puts>
	    OSTimeDlyHMSM(0,0,1,0);
  8016fc:	000f883a 	mov	r7,zero
  801700:	01800044 	movi	r6,1
  801704:	000b883a 	mov	r5,zero
  801708:	0009883a 	mov	r4,zero
  80170c:	0851ce80 	call	851ce8 <OSTimeDlyHMSM>
	    IOWR_ALTERA_AVALON_PIO_DATA(SPEAKER_BASE, 0x0);
  801710:	0007883a 	mov	r3,zero
  801714:	00804074 	movhi	r2,257
  801718:	10a82404 	addi	r2,r2,-24432
  80171c:	10c00035 	stwio	r3,0(r2)

        wifiReceive = (uint8_t) OSQPend(wifiPackageQueue, 0, &err);
  801720:	d0a08317 	ldw	r2,-32244(gp)
  801724:	e0fffe44 	addi	r3,fp,-7
  801728:	180d883a 	mov	r6,r3
  80172c:	000b883a 	mov	r5,zero
  801730:	1009883a 	mov	r4,r2
  801734:	084ef380 	call	84ef38 <OSQPend>
  801738:	e0bffe05 	stb	r2,-8(fp)
        printf("Received form Wifi: %d \n", wifiReceive);
  80173c:	e0bffe03 	ldbu	r2,-8(fp)
  801740:	100b883a 	mov	r5,r2
  801744:	01002174 	movhi	r4,133
  801748:	211d6604 	addi	r4,r4,30104
  80174c:	08343dc0 	call	8343dc <printf>
        //motorCommand(wifiReceive);
	}
  801750:	003fe406 	br	8016e4 <__alt_mem_epcs_flash_controller_0+0xff7f86e4>

00801754 <wifi_uart_interrupt>:
	//OSTimeDlyHMSM(0, 0, 0, CAM_WAIT_MS);
}

void wifi_uart_interrupt(void * context){
  801754:	defffc04 	addi	sp,sp,-16
  801758:	dfc00315 	stw	ra,12(sp)
  80175c:	df000215 	stw	fp,8(sp)
  801760:	df000204 	addi	fp,sp,8
  801764:	e13fff15 	stw	r4,-4(fp)
    uint8_t read = 0;
  801768:	e03ffe05 	stb	zero,-8(fp)
    while(!(IORD_ALTERA_AVALON_UART_STATUS(WIFI_UART_BASE) & ALTERA_AVALON_UART_STATUS_RRDY_MSK));
  80176c:	0001883a 	nop
  801770:	00804074 	movhi	r2,257
  801774:	10a81a04 	addi	r2,r2,-24472
  801778:	10800037 	ldwio	r2,0(r2)
  80177c:	1080200c 	andi	r2,r2,128
  801780:	103ffb26 	beq	r2,zero,801770 <__alt_mem_epcs_flash_controller_0+0xff7f8770>
    read = IORD_ALTERA_AVALON_UART_RXDATA(WIFI_UART_BASE);
  801784:	00804074 	movhi	r2,257
  801788:	10a81804 	addi	r2,r2,-24480
  80178c:	10800037 	ldwio	r2,0(r2)
  801790:	e0bffe05 	stb	r2,-8(fp)
    
    OSQPost(wifiPackageQueue, (void*) read);
  801794:	d0a08317 	ldw	r2,-32244(gp)
  801798:	e0fffe03 	ldbu	r3,-8(fp)
  80179c:	180b883a 	mov	r5,r3
  8017a0:	1009883a 	mov	r4,r2
  8017a4:	084f3300 	call	84f330 <OSQPost>
}
  8017a8:	0001883a 	nop
  8017ac:	e037883a 	mov	sp,fp
  8017b0:	dfc00117 	ldw	ra,4(sp)
  8017b4:	df000017 	ldw	fp,0(sp)
  8017b8:	dec00204 	addi	sp,sp,8
  8017bc:	f800283a 	ret

008017c0 <motorCommand>:

void motorCommand(uint8_t input) {
  8017c0:	defffd04 	addi	sp,sp,-12
  8017c4:	dfc00215 	stw	ra,8(sp)
  8017c8:	df000115 	stw	fp,4(sp)
  8017cc:	df000104 	addi	fp,sp,4
  8017d0:	2005883a 	mov	r2,r4
  8017d4:	e0bfff05 	stb	r2,-4(fp)

    IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_L_BASE, MOTOR_SHORTSTOP);
  8017d8:	00c001c4 	movi	r3,7
  8017dc:	00804074 	movhi	r2,257
  8017e0:	10a83404 	addi	r2,r2,-24368
  8017e4:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_R_BASE, MOTOR_SHORTSTOP);
  8017e8:	00c001c4 	movi	r3,7
  8017ec:	00804074 	movhi	r2,257
  8017f0:	10a83804 	addi	r2,r2,-24352
  8017f4:	10c00035 	stwio	r3,0(r2)
	OSTimeDlyHMSM(0, 0, 0, 100);
  8017f8:	01c01904 	movi	r7,100
  8017fc:	000d883a 	mov	r6,zero
  801800:	000b883a 	mov	r5,zero
  801804:	0009883a 	mov	r4,zero
  801808:	0851ce80 	call	851ce8 <OSTimeDlyHMSM>

    if (input == WIFI_MOTOR_CW) {
  80180c:	e0bfff03 	ldbu	r2,-4(fp)
  801810:	10800c58 	cmpnei	r2,r2,49
  801814:	1000081e 	bne	r2,zero,801838 <motorCommand+0x78>
		IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_L_BASE, MOTOR_FORWARD);
  801818:	00c000c4 	movi	r3,3
  80181c:	00804074 	movhi	r2,257
  801820:	10a83404 	addi	r2,r2,-24368
  801824:	10c00035 	stwio	r3,0(r2)
		IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_R_BASE, MOTOR_FORWARD);
  801828:	00c000c4 	movi	r3,3
  80182c:	00804074 	movhi	r2,257
  801830:	10a83804 	addi	r2,r2,-24352
  801834:	10c00035 	stwio	r3,0(r2)
    }
    if (input == WIFI_MOTOR_CCW) {
  801838:	e0bfff03 	ldbu	r2,-4(fp)
  80183c:	10800c98 	cmpnei	r2,r2,50
  801840:	1000081e 	bne	r2,zero,801864 <motorCommand+0xa4>
        IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_L_BASE, MOTOR_REVERSE);
  801844:	00c00144 	movi	r3,5
  801848:	00804074 	movhi	r2,257
  80184c:	10a83404 	addi	r2,r2,-24368
  801850:	10c00035 	stwio	r3,0(r2)
		IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_R_BASE, MOTOR_REVERSE);
  801854:	00c00144 	movi	r3,5
  801858:	00804074 	movhi	r2,257
  80185c:	10a83804 	addi	r2,r2,-24352
  801860:	10c00035 	stwio	r3,0(r2)
    }
    if (input == WIFI_MOTOR_STOP) {
  801864:	e0bfff03 	ldbu	r2,-4(fp)
  801868:	10800cd8 	cmpnei	r2,r2,51
  80186c:	1000081e 	bne	r2,zero,801890 <motorCommand+0xd0>
        IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_L_BASE, MOTOR_SHORTSTOP);
  801870:	00c001c4 	movi	r3,7
  801874:	00804074 	movhi	r2,257
  801878:	10a83404 	addi	r2,r2,-24368
  80187c:	10c00035 	stwio	r3,0(r2)
		IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_R_BASE, MOTOR_SHORTSTOP);
  801880:	00c001c4 	movi	r3,7
  801884:	00804074 	movhi	r2,257
  801888:	10a83804 	addi	r2,r2,-24352
  80188c:	10c00035 	stwio	r3,0(r2)
    }
}
  801890:	0001883a 	nop
  801894:	e037883a 	mov	sp,fp
  801898:	dfc00117 	ldw	ra,4(sp)
  80189c:	df000017 	ldw	fp,0(sp)
  8018a0:	dec00204 	addi	sp,sp,8
  8018a4:	f800283a 	ret

008018a8 <jpeg_CreateDecompress>:
  8018a8:	defff804 	addi	sp,sp,-32
  8018ac:	dfc00715 	stw	ra,28(sp)
  8018b0:	df000615 	stw	fp,24(sp)
  8018b4:	df000604 	addi	fp,sp,24
  8018b8:	e13ffd15 	stw	r4,-12(fp)
  8018bc:	e17ffe15 	stw	r5,-8(fp)
  8018c0:	e1bfff15 	stw	r6,-4(fp)
  8018c4:	e0bffd17 	ldw	r2,-12(fp)
  8018c8:	10000115 	stw	zero,4(r2)
  8018cc:	e0bffe17 	ldw	r2,-8(fp)
  8018d0:	108016a0 	cmpeqi	r2,r2,90
  8018d4:	1000111e 	bne	r2,zero,80191c <jpeg_CreateDecompress+0x74>
  8018d8:	e0bffd17 	ldw	r2,-12(fp)
  8018dc:	10800017 	ldw	r2,0(r2)
  8018e0:	00c00344 	movi	r3,13
  8018e4:	10c00515 	stw	r3,20(r2)
  8018e8:	e0bffd17 	ldw	r2,-12(fp)
  8018ec:	10800017 	ldw	r2,0(r2)
  8018f0:	00c01684 	movi	r3,90
  8018f4:	10c00615 	stw	r3,24(r2)
  8018f8:	e0bffd17 	ldw	r2,-12(fp)
  8018fc:	10800017 	ldw	r2,0(r2)
  801900:	e0fffe17 	ldw	r3,-8(fp)
  801904:	10c00715 	stw	r3,28(r2)
  801908:	e0bffd17 	ldw	r2,-12(fp)
  80190c:	10800017 	ldw	r2,0(r2)
  801910:	10800017 	ldw	r2,0(r2)
  801914:	e13ffd17 	ldw	r4,-12(fp)
  801918:	103ee83a 	callr	r2
  80191c:	e0bfff17 	ldw	r2,-4(fp)
  801920:	10807a20 	cmpeqi	r2,r2,488
  801924:	1000111e 	bne	r2,zero,80196c <jpeg_CreateDecompress+0xc4>
  801928:	e0bffd17 	ldw	r2,-12(fp)
  80192c:	10800017 	ldw	r2,0(r2)
  801930:	00c00584 	movi	r3,22
  801934:	10c00515 	stw	r3,20(r2)
  801938:	e0bffd17 	ldw	r2,-12(fp)
  80193c:	10800017 	ldw	r2,0(r2)
  801940:	00c07a04 	movi	r3,488
  801944:	10c00615 	stw	r3,24(r2)
  801948:	e0bffd17 	ldw	r2,-12(fp)
  80194c:	10800017 	ldw	r2,0(r2)
  801950:	e0ffff17 	ldw	r3,-4(fp)
  801954:	10c00715 	stw	r3,28(r2)
  801958:	e0bffd17 	ldw	r2,-12(fp)
  80195c:	10800017 	ldw	r2,0(r2)
  801960:	10800017 	ldw	r2,0(r2)
  801964:	e13ffd17 	ldw	r4,-12(fp)
  801968:	103ee83a 	callr	r2
  80196c:	e0bffd17 	ldw	r2,-12(fp)
  801970:	10800017 	ldw	r2,0(r2)
  801974:	e0bffb15 	stw	r2,-20(fp)
  801978:	e0bffd17 	ldw	r2,-12(fp)
  80197c:	10800317 	ldw	r2,12(r2)
  801980:	e0bffc15 	stw	r2,-16(fp)
  801984:	01807a04 	movi	r6,488
  801988:	000b883a 	mov	r5,zero
  80198c:	e13ffd17 	ldw	r4,-12(fp)
  801990:	0833d940 	call	833d94 <memset>
  801994:	e0bffd17 	ldw	r2,-12(fp)
  801998:	e0fffb17 	ldw	r3,-20(fp)
  80199c:	10c00015 	stw	r3,0(r2)
  8019a0:	e0bffd17 	ldw	r2,-12(fp)
  8019a4:	e0fffc17 	ldw	r3,-16(fp)
  8019a8:	10c00315 	stw	r3,12(r2)
  8019ac:	e0bffd17 	ldw	r2,-12(fp)
  8019b0:	00c00044 	movi	r3,1
  8019b4:	10c00415 	stw	r3,16(r2)
  8019b8:	e13ffd17 	ldw	r4,-12(fp)
  8019bc:	080f5280 	call	80f528 <jinit_memory_mgr>
  8019c0:	e0bffd17 	ldw	r2,-12(fp)
  8019c4:	10000215 	stw	zero,8(r2)
  8019c8:	e0bffd17 	ldw	r2,-12(fp)
  8019cc:	10000615 	stw	zero,24(r2)
  8019d0:	e03ffa15 	stw	zero,-24(fp)
  8019d4:	00000a06 	br	801a00 <jpeg_CreateDecompress+0x158>
  8019d8:	e0fffd17 	ldw	r3,-12(fp)
  8019dc:	e0bffa17 	ldw	r2,-24(fp)
  8019e0:	10800a44 	addi	r2,r2,41
  8019e4:	1085883a 	add	r2,r2,r2
  8019e8:	1085883a 	add	r2,r2,r2
  8019ec:	1885883a 	add	r2,r3,r2
  8019f0:	10000015 	stw	zero,0(r2)
  8019f4:	e0bffa17 	ldw	r2,-24(fp)
  8019f8:	10800044 	addi	r2,r2,1
  8019fc:	e0bffa15 	stw	r2,-24(fp)
  801a00:	e0bffa17 	ldw	r2,-24(fp)
  801a04:	10800110 	cmplti	r2,r2,4
  801a08:	103ff31e 	bne	r2,zero,8019d8 <__alt_mem_epcs_flash_controller_0+0xff7f89d8>
  801a0c:	e03ffa15 	stw	zero,-24(fp)
  801a10:	00001106 	br	801a58 <jpeg_CreateDecompress+0x1b0>
  801a14:	e0fffd17 	ldw	r3,-12(fp)
  801a18:	e0bffa17 	ldw	r2,-24(fp)
  801a1c:	10800b44 	addi	r2,r2,45
  801a20:	1085883a 	add	r2,r2,r2
  801a24:	1085883a 	add	r2,r2,r2
  801a28:	1885883a 	add	r2,r3,r2
  801a2c:	10000015 	stw	zero,0(r2)
  801a30:	e0fffd17 	ldw	r3,-12(fp)
  801a34:	e0bffa17 	ldw	r2,-24(fp)
  801a38:	10800c44 	addi	r2,r2,49
  801a3c:	1085883a 	add	r2,r2,r2
  801a40:	1085883a 	add	r2,r2,r2
  801a44:	1885883a 	add	r2,r3,r2
  801a48:	10000015 	stw	zero,0(r2)
  801a4c:	e0bffa17 	ldw	r2,-24(fp)
  801a50:	10800044 	addi	r2,r2,1
  801a54:	e0bffa15 	stw	r2,-24(fp)
  801a58:	e0bffa17 	ldw	r2,-24(fp)
  801a5c:	10800110 	cmplti	r2,r2,4
  801a60:	103fec1e 	bne	r2,zero,801a14 <__alt_mem_epcs_flash_controller_0+0xff7f8a14>
  801a64:	e0bffd17 	ldw	r2,-12(fp)
  801a68:	10004e15 	stw	zero,312(r2)
  801a6c:	e13ffd17 	ldw	r4,-12(fp)
  801a70:	080a0680 	call	80a068 <jinit_marker_reader>
  801a74:	e13ffd17 	ldw	r4,-12(fp)
  801a78:	0804dd80 	call	804dd8 <jinit_input_controller>
  801a7c:	e0bffd17 	ldw	r2,-12(fp)
  801a80:	00c03204 	movi	r3,200
  801a84:	10c00515 	stw	r3,20(r2)
  801a88:	0001883a 	nop
  801a8c:	e037883a 	mov	sp,fp
  801a90:	dfc00117 	ldw	ra,4(sp)
  801a94:	df000017 	ldw	fp,0(sp)
  801a98:	dec00204 	addi	sp,sp,8
  801a9c:	f800283a 	ret

00801aa0 <jpeg_destroy_decompress>:
  801aa0:	defffd04 	addi	sp,sp,-12
  801aa4:	dfc00215 	stw	ra,8(sp)
  801aa8:	df000115 	stw	fp,4(sp)
  801aac:	df000104 	addi	fp,sp,4
  801ab0:	e13fff15 	stw	r4,-4(fp)
  801ab4:	e13fff17 	ldw	r4,-4(fp)
  801ab8:	0813df40 	call	813df4 <jpeg_destroy>
  801abc:	0001883a 	nop
  801ac0:	e037883a 	mov	sp,fp
  801ac4:	dfc00117 	ldw	ra,4(sp)
  801ac8:	df000017 	ldw	fp,0(sp)
  801acc:	dec00204 	addi	sp,sp,8
  801ad0:	f800283a 	ret

00801ad4 <jpeg_abort_decompress>:
  801ad4:	defffd04 	addi	sp,sp,-12
  801ad8:	dfc00215 	stw	ra,8(sp)
  801adc:	df000115 	stw	fp,4(sp)
  801ae0:	df000104 	addi	fp,sp,4
  801ae4:	e13fff15 	stw	r4,-4(fp)
  801ae8:	e13fff17 	ldw	r4,-4(fp)
  801aec:	0813d500 	call	813d50 <jpeg_abort>
  801af0:	0001883a 	nop
  801af4:	e037883a 	mov	sp,fp
  801af8:	dfc00117 	ldw	ra,4(sp)
  801afc:	df000017 	ldw	fp,0(sp)
  801b00:	dec00204 	addi	sp,sp,8
  801b04:	f800283a 	ret

00801b08 <default_decompress_parms>:
  801b08:	defff904 	addi	sp,sp,-28
  801b0c:	dfc00615 	stw	ra,24(sp)
  801b10:	df000515 	stw	fp,20(sp)
  801b14:	df000504 	addi	fp,sp,20
  801b18:	e13fff15 	stw	r4,-4(fp)
  801b1c:	e0bfff17 	ldw	r2,-4(fp)
  801b20:	10800917 	ldw	r2,36(r2)
  801b24:	10c000e0 	cmpeqi	r3,r2,3
  801b28:	18000b1e 	bne	r3,zero,801b58 <default_decompress_parms+0x50>
  801b2c:	10c00120 	cmpeqi	r3,r2,4
  801b30:	1800991e 	bne	r3,zero,801d98 <default_decompress_parms+0x290>
  801b34:	10800060 	cmpeqi	r2,r2,1
  801b38:	1000c526 	beq	r2,zero,801e50 <default_decompress_parms+0x348>
  801b3c:	e0bfff17 	ldw	r2,-4(fp)
  801b40:	00c00044 	movi	r3,1
  801b44:	10c00a15 	stw	r3,40(r2)
  801b48:	e0bfff17 	ldw	r2,-4(fp)
  801b4c:	00c00044 	movi	r3,1
  801b50:	10c00b15 	stw	r3,44(r2)
  801b54:	0000c306 	br	801e64 <default_decompress_parms+0x35c>
  801b58:	e0bfff17 	ldw	r2,-4(fp)
  801b5c:	10803617 	ldw	r2,216(r2)
  801b60:	10800017 	ldw	r2,0(r2)
  801b64:	e0bffb15 	stw	r2,-20(fp)
  801b68:	e0bfff17 	ldw	r2,-4(fp)
  801b6c:	10803617 	ldw	r2,216(r2)
  801b70:	10801604 	addi	r2,r2,88
  801b74:	10800017 	ldw	r2,0(r2)
  801b78:	e0bffc15 	stw	r2,-16(fp)
  801b7c:	e0bfff17 	ldw	r2,-4(fp)
  801b80:	10803617 	ldw	r2,216(r2)
  801b84:	10802c04 	addi	r2,r2,176
  801b88:	10800017 	ldw	r2,0(r2)
  801b8c:	e0bffd15 	stw	r2,-12(fp)
  801b90:	e0bffb17 	ldw	r2,-20(fp)
  801b94:	10800058 	cmpnei	r2,r2,1
  801b98:	10000a1e 	bne	r2,zero,801bc4 <default_decompress_parms+0xbc>
  801b9c:	e0bffc17 	ldw	r2,-16(fp)
  801ba0:	10800098 	cmpnei	r2,r2,2
  801ba4:	1000071e 	bne	r2,zero,801bc4 <default_decompress_parms+0xbc>
  801ba8:	e0bffd17 	ldw	r2,-12(fp)
  801bac:	108000d8 	cmpnei	r2,r2,3
  801bb0:	1000041e 	bne	r2,zero,801bc4 <default_decompress_parms+0xbc>
  801bb4:	e0bfff17 	ldw	r2,-4(fp)
  801bb8:	00c000c4 	movi	r3,3
  801bbc:	10c00a15 	stw	r3,40(r2)
  801bc0:	00007106 	br	801d88 <default_decompress_parms+0x280>
  801bc4:	e0bffb17 	ldw	r2,-20(fp)
  801bc8:	10800058 	cmpnei	r2,r2,1
  801bcc:	10000a1e 	bne	r2,zero,801bf8 <default_decompress_parms+0xf0>
  801bd0:	e0bffc17 	ldw	r2,-16(fp)
  801bd4:	10800898 	cmpnei	r2,r2,34
  801bd8:	1000071e 	bne	r2,zero,801bf8 <default_decompress_parms+0xf0>
  801bdc:	e0bffd17 	ldw	r2,-12(fp)
  801be0:	108008d8 	cmpnei	r2,r2,35
  801be4:	1000041e 	bne	r2,zero,801bf8 <default_decompress_parms+0xf0>
  801be8:	e0bfff17 	ldw	r2,-4(fp)
  801bec:	00c001c4 	movi	r3,7
  801bf0:	10c00a15 	stw	r3,40(r2)
  801bf4:	00006406 	br	801d88 <default_decompress_parms+0x280>
  801bf8:	e0bffb17 	ldw	r2,-20(fp)
  801bfc:	10801498 	cmpnei	r2,r2,82
  801c00:	10000a1e 	bne	r2,zero,801c2c <default_decompress_parms+0x124>
  801c04:	e0bffc17 	ldw	r2,-16(fp)
  801c08:	108011d8 	cmpnei	r2,r2,71
  801c0c:	1000071e 	bne	r2,zero,801c2c <default_decompress_parms+0x124>
  801c10:	e0bffd17 	ldw	r2,-12(fp)
  801c14:	10801098 	cmpnei	r2,r2,66
  801c18:	1000041e 	bne	r2,zero,801c2c <default_decompress_parms+0x124>
  801c1c:	e0bfff17 	ldw	r2,-4(fp)
  801c20:	00c00084 	movi	r3,2
  801c24:	10c00a15 	stw	r3,40(r2)
  801c28:	00005706 	br	801d88 <default_decompress_parms+0x280>
  801c2c:	e0bffb17 	ldw	r2,-20(fp)
  801c30:	10801c98 	cmpnei	r2,r2,114
  801c34:	10000a1e 	bne	r2,zero,801c60 <default_decompress_parms+0x158>
  801c38:	e0bffc17 	ldw	r2,-16(fp)
  801c3c:	108019d8 	cmpnei	r2,r2,103
  801c40:	1000071e 	bne	r2,zero,801c60 <default_decompress_parms+0x158>
  801c44:	e0bffd17 	ldw	r2,-12(fp)
  801c48:	10801898 	cmpnei	r2,r2,98
  801c4c:	1000041e 	bne	r2,zero,801c60 <default_decompress_parms+0x158>
  801c50:	e0bfff17 	ldw	r2,-4(fp)
  801c54:	00c00184 	movi	r3,6
  801c58:	10c00a15 	stw	r3,40(r2)
  801c5c:	00004a06 	br	801d88 <default_decompress_parms+0x280>
  801c60:	e0bfff17 	ldw	r2,-4(fp)
  801c64:	10804717 	ldw	r2,284(r2)
  801c68:	10000426 	beq	r2,zero,801c7c <default_decompress_parms+0x174>
  801c6c:	e0bfff17 	ldw	r2,-4(fp)
  801c70:	00c000c4 	movi	r3,3
  801c74:	10c00a15 	stw	r3,40(r2)
  801c78:	00004306 	br	801d88 <default_decompress_parms+0x280>
  801c7c:	e0bfff17 	ldw	r2,-4(fp)
  801c80:	10804a17 	ldw	r2,296(r2)
  801c84:	10002426 	beq	r2,zero,801d18 <default_decompress_parms+0x210>
  801c88:	e0bfff17 	ldw	r2,-4(fp)
  801c8c:	10804b03 	ldbu	r2,300(r2)
  801c90:	10803fcc 	andi	r2,r2,255
  801c94:	10000326 	beq	r2,zero,801ca4 <default_decompress_parms+0x19c>
  801c98:	10800060 	cmpeqi	r2,r2,1
  801c9c:	1000051e 	bne	r2,zero,801cb4 <default_decompress_parms+0x1ac>
  801ca0:	00000806 	br	801cc4 <default_decompress_parms+0x1bc>
  801ca4:	e0bfff17 	ldw	r2,-4(fp)
  801ca8:	00c00084 	movi	r3,2
  801cac:	10c00a15 	stw	r3,40(r2)
  801cb0:	00003506 	br	801d88 <default_decompress_parms+0x280>
  801cb4:	e0bfff17 	ldw	r2,-4(fp)
  801cb8:	00c000c4 	movi	r3,3
  801cbc:	10c00a15 	stw	r3,40(r2)
  801cc0:	00003106 	br	801d88 <default_decompress_parms+0x280>
  801cc4:	e0bfff17 	ldw	r2,-4(fp)
  801cc8:	10800017 	ldw	r2,0(r2)
  801ccc:	00c01d04 	movi	r3,116
  801cd0:	10c00515 	stw	r3,20(r2)
  801cd4:	e0bfff17 	ldw	r2,-4(fp)
  801cd8:	10800017 	ldw	r2,0(r2)
  801cdc:	e0ffff17 	ldw	r3,-4(fp)
  801ce0:	18c04b03 	ldbu	r3,300(r3)
  801ce4:	18c03fcc 	andi	r3,r3,255
  801ce8:	10c00615 	stw	r3,24(r2)
  801cec:	e0bfff17 	ldw	r2,-4(fp)
  801cf0:	10800017 	ldw	r2,0(r2)
  801cf4:	10800117 	ldw	r2,4(r2)
  801cf8:	017fffc4 	movi	r5,-1
  801cfc:	e13fff17 	ldw	r4,-4(fp)
  801d00:	103ee83a 	callr	r2
  801d04:	e0bfff17 	ldw	r2,-4(fp)
  801d08:	00c000c4 	movi	r3,3
  801d0c:	10c00a15 	stw	r3,40(r2)
  801d10:	0001883a 	nop
  801d14:	00001c06 	br	801d88 <default_decompress_parms+0x280>
  801d18:	e0bfff17 	ldw	r2,-4(fp)
  801d1c:	10800017 	ldw	r2,0(r2)
  801d20:	10800604 	addi	r2,r2,24
  801d24:	e0bffe15 	stw	r2,-8(fp)
  801d28:	e0bffe17 	ldw	r2,-8(fp)
  801d2c:	e0fffb17 	ldw	r3,-20(fp)
  801d30:	10c00015 	stw	r3,0(r2)
  801d34:	e0bffe17 	ldw	r2,-8(fp)
  801d38:	10800104 	addi	r2,r2,4
  801d3c:	e0fffc17 	ldw	r3,-16(fp)
  801d40:	10c00015 	stw	r3,0(r2)
  801d44:	e0bffe17 	ldw	r2,-8(fp)
  801d48:	10800204 	addi	r2,r2,8
  801d4c:	e0fffd17 	ldw	r3,-12(fp)
  801d50:	10c00015 	stw	r3,0(r2)
  801d54:	e0bfff17 	ldw	r2,-4(fp)
  801d58:	10800017 	ldw	r2,0(r2)
  801d5c:	00c01c44 	movi	r3,113
  801d60:	10c00515 	stw	r3,20(r2)
  801d64:	e0bfff17 	ldw	r2,-4(fp)
  801d68:	10800017 	ldw	r2,0(r2)
  801d6c:	10800117 	ldw	r2,4(r2)
  801d70:	01400044 	movi	r5,1
  801d74:	e13fff17 	ldw	r4,-4(fp)
  801d78:	103ee83a 	callr	r2
  801d7c:	e0bfff17 	ldw	r2,-4(fp)
  801d80:	00c000c4 	movi	r3,3
  801d84:	10c00a15 	stw	r3,40(r2)
  801d88:	e0bfff17 	ldw	r2,-4(fp)
  801d8c:	00c00084 	movi	r3,2
  801d90:	10c00b15 	stw	r3,44(r2)
  801d94:	00003306 	br	801e64 <default_decompress_parms+0x35c>
  801d98:	e0bfff17 	ldw	r2,-4(fp)
  801d9c:	10804a17 	ldw	r2,296(r2)
  801da0:	10002426 	beq	r2,zero,801e34 <default_decompress_parms+0x32c>
  801da4:	e0bfff17 	ldw	r2,-4(fp)
  801da8:	10804b03 	ldbu	r2,300(r2)
  801dac:	10803fcc 	andi	r2,r2,255
  801db0:	10000326 	beq	r2,zero,801dc0 <default_decompress_parms+0x2b8>
  801db4:	108000a0 	cmpeqi	r2,r2,2
  801db8:	1000051e 	bne	r2,zero,801dd0 <default_decompress_parms+0x2c8>
  801dbc:	00000806 	br	801de0 <default_decompress_parms+0x2d8>
  801dc0:	e0bfff17 	ldw	r2,-4(fp)
  801dc4:	00c00104 	movi	r3,4
  801dc8:	10c00a15 	stw	r3,40(r2)
  801dcc:	00001c06 	br	801e40 <default_decompress_parms+0x338>
  801dd0:	e0bfff17 	ldw	r2,-4(fp)
  801dd4:	00c00144 	movi	r3,5
  801dd8:	10c00a15 	stw	r3,40(r2)
  801ddc:	00001806 	br	801e40 <default_decompress_parms+0x338>
  801de0:	e0bfff17 	ldw	r2,-4(fp)
  801de4:	10800017 	ldw	r2,0(r2)
  801de8:	00c01d04 	movi	r3,116
  801dec:	10c00515 	stw	r3,20(r2)
  801df0:	e0bfff17 	ldw	r2,-4(fp)
  801df4:	10800017 	ldw	r2,0(r2)
  801df8:	e0ffff17 	ldw	r3,-4(fp)
  801dfc:	18c04b03 	ldbu	r3,300(r3)
  801e00:	18c03fcc 	andi	r3,r3,255
  801e04:	10c00615 	stw	r3,24(r2)
  801e08:	e0bfff17 	ldw	r2,-4(fp)
  801e0c:	10800017 	ldw	r2,0(r2)
  801e10:	10800117 	ldw	r2,4(r2)
  801e14:	017fffc4 	movi	r5,-1
  801e18:	e13fff17 	ldw	r4,-4(fp)
  801e1c:	103ee83a 	callr	r2
  801e20:	e0bfff17 	ldw	r2,-4(fp)
  801e24:	00c00144 	movi	r3,5
  801e28:	10c00a15 	stw	r3,40(r2)
  801e2c:	0001883a 	nop
  801e30:	00000306 	br	801e40 <default_decompress_parms+0x338>
  801e34:	e0bfff17 	ldw	r2,-4(fp)
  801e38:	00c00104 	movi	r3,4
  801e3c:	10c00a15 	stw	r3,40(r2)
  801e40:	e0bfff17 	ldw	r2,-4(fp)
  801e44:	00c00104 	movi	r3,4
  801e48:	10c00b15 	stw	r3,44(r2)
  801e4c:	00000506 	br	801e64 <default_decompress_parms+0x35c>
  801e50:	e0bfff17 	ldw	r2,-4(fp)
  801e54:	10000a15 	stw	zero,40(r2)
  801e58:	e0bfff17 	ldw	r2,-4(fp)
  801e5c:	10000b15 	stw	zero,44(r2)
  801e60:	0001883a 	nop
  801e64:	e0bfff17 	ldw	r2,-4(fp)
  801e68:	10806b17 	ldw	r2,428(r2)
  801e6c:	1007883a 	mov	r3,r2
  801e70:	e0bfff17 	ldw	r2,-4(fp)
  801e74:	10c00c15 	stw	r3,48(r2)
  801e78:	e0bfff17 	ldw	r2,-4(fp)
  801e7c:	10806b17 	ldw	r2,428(r2)
  801e80:	1007883a 	mov	r3,r2
  801e84:	e0bfff17 	ldw	r2,-4(fp)
  801e88:	10c00d15 	stw	r3,52(r2)
  801e8c:	e0bfff17 	ldw	r2,-4(fp)
  801e90:	10000e15 	stw	zero,56(r2)
  801e94:	00cffc34 	movhi	r3,16368
  801e98:	10c00f15 	stw	r3,60(r2)
  801e9c:	e0bfff17 	ldw	r2,-4(fp)
  801ea0:	10001015 	stw	zero,64(r2)
  801ea4:	e0bfff17 	ldw	r2,-4(fp)
  801ea8:	10001115 	stw	zero,68(r2)
  801eac:	e0bfff17 	ldw	r2,-4(fp)
  801eb0:	10001215 	stw	zero,72(r2)
  801eb4:	e0bfff17 	ldw	r2,-4(fp)
  801eb8:	00c00044 	movi	r3,1
  801ebc:	10c01315 	stw	r3,76(r2)
  801ec0:	e0bfff17 	ldw	r2,-4(fp)
  801ec4:	00c00044 	movi	r3,1
  801ec8:	10c01415 	stw	r3,80(r2)
  801ecc:	e0bfff17 	ldw	r2,-4(fp)
  801ed0:	10001515 	stw	zero,84(r2)
  801ed4:	e0bfff17 	ldw	r2,-4(fp)
  801ed8:	00c00084 	movi	r3,2
  801edc:	10c01615 	stw	r3,88(r2)
  801ee0:	e0bfff17 	ldw	r2,-4(fp)
  801ee4:	00c00044 	movi	r3,1
  801ee8:	10c01715 	stw	r3,92(r2)
  801eec:	e0bfff17 	ldw	r2,-4(fp)
  801ef0:	00c04004 	movi	r3,256
  801ef4:	10c01815 	stw	r3,96(r2)
  801ef8:	e0bfff17 	ldw	r2,-4(fp)
  801efc:	10002215 	stw	zero,136(r2)
  801f00:	e0bfff17 	ldw	r2,-4(fp)
  801f04:	10001915 	stw	zero,100(r2)
  801f08:	e0bfff17 	ldw	r2,-4(fp)
  801f0c:	10001a15 	stw	zero,104(r2)
  801f10:	e0bfff17 	ldw	r2,-4(fp)
  801f14:	10001b15 	stw	zero,108(r2)
  801f18:	0001883a 	nop
  801f1c:	e037883a 	mov	sp,fp
  801f20:	dfc00117 	ldw	ra,4(sp)
  801f24:	df000017 	ldw	fp,0(sp)
  801f28:	dec00204 	addi	sp,sp,8
  801f2c:	f800283a 	ret

00801f30 <jpeg_read_header>:
  801f30:	defffb04 	addi	sp,sp,-20
  801f34:	dfc00415 	stw	ra,16(sp)
  801f38:	df000315 	stw	fp,12(sp)
  801f3c:	df000304 	addi	fp,sp,12
  801f40:	e13ffe15 	stw	r4,-8(fp)
  801f44:	e17fff15 	stw	r5,-4(fp)
  801f48:	e0bffe17 	ldw	r2,-8(fp)
  801f4c:	10800517 	ldw	r2,20(r2)
  801f50:	10803220 	cmpeqi	r2,r2,200
  801f54:	1000121e 	bne	r2,zero,801fa0 <jpeg_read_header+0x70>
  801f58:	e0bffe17 	ldw	r2,-8(fp)
  801f5c:	10800517 	ldw	r2,20(r2)
  801f60:	10803260 	cmpeqi	r2,r2,201
  801f64:	10000e1e 	bne	r2,zero,801fa0 <jpeg_read_header+0x70>
  801f68:	e0bffe17 	ldw	r2,-8(fp)
  801f6c:	10800017 	ldw	r2,0(r2)
  801f70:	00c00544 	movi	r3,21
  801f74:	10c00515 	stw	r3,20(r2)
  801f78:	e0bffe17 	ldw	r2,-8(fp)
  801f7c:	10800017 	ldw	r2,0(r2)
  801f80:	e0fffe17 	ldw	r3,-8(fp)
  801f84:	18c00517 	ldw	r3,20(r3)
  801f88:	10c00615 	stw	r3,24(r2)
  801f8c:	e0bffe17 	ldw	r2,-8(fp)
  801f90:	10800017 	ldw	r2,0(r2)
  801f94:	10800017 	ldw	r2,0(r2)
  801f98:	e13ffe17 	ldw	r4,-8(fp)
  801f9c:	103ee83a 	callr	r2
  801fa0:	e13ffe17 	ldw	r4,-8(fp)
  801fa4:	08020280 	call	802028 <jpeg_consume_input>
  801fa8:	e0bffd15 	stw	r2,-12(fp)
  801fac:	e0bffd17 	ldw	r2,-12(fp)
  801fb0:	10c00060 	cmpeqi	r3,r2,1
  801fb4:	1800031e 	bne	r3,zero,801fc4 <jpeg_read_header+0x94>
  801fb8:	108000a0 	cmpeqi	r2,r2,2
  801fbc:	1000041e 	bne	r2,zero,801fd0 <jpeg_read_header+0xa0>
  801fc0:	00001306 	br	802010 <jpeg_read_header+0xe0>
  801fc4:	00800044 	movi	r2,1
  801fc8:	e0bffd15 	stw	r2,-12(fp)
  801fcc:	00001006 	br	802010 <jpeg_read_header+0xe0>
  801fd0:	e0bfff17 	ldw	r2,-4(fp)
  801fd4:	10000926 	beq	r2,zero,801ffc <jpeg_read_header+0xcc>
  801fd8:	e0bffe17 	ldw	r2,-8(fp)
  801fdc:	10800017 	ldw	r2,0(r2)
  801fe0:	00c00d44 	movi	r3,53
  801fe4:	10c00515 	stw	r3,20(r2)
  801fe8:	e0bffe17 	ldw	r2,-8(fp)
  801fec:	10800017 	ldw	r2,0(r2)
  801ff0:	10800017 	ldw	r2,0(r2)
  801ff4:	e13ffe17 	ldw	r4,-8(fp)
  801ff8:	103ee83a 	callr	r2
  801ffc:	e13ffe17 	ldw	r4,-8(fp)
  802000:	0813d500 	call	813d50 <jpeg_abort>
  802004:	00800084 	movi	r2,2
  802008:	e0bffd15 	stw	r2,-12(fp)
  80200c:	0001883a 	nop
  802010:	e0bffd17 	ldw	r2,-12(fp)
  802014:	e037883a 	mov	sp,fp
  802018:	dfc00117 	ldw	ra,4(sp)
  80201c:	df000017 	ldw	fp,0(sp)
  802020:	dec00204 	addi	sp,sp,8
  802024:	f800283a 	ret

00802028 <jpeg_consume_input>:
  802028:	defffc04 	addi	sp,sp,-16
  80202c:	dfc00315 	stw	ra,12(sp)
  802030:	df000215 	stw	fp,8(sp)
  802034:	df000204 	addi	fp,sp,8
  802038:	e13fff15 	stw	r4,-4(fp)
  80203c:	e03ffe15 	stw	zero,-8(fp)
  802040:	e0bfff17 	ldw	r2,-4(fp)
  802044:	10800517 	ldw	r2,20(r2)
  802048:	10bfce04 	addi	r2,r2,-200
  80204c:	10c002e8 	cmpgeui	r3,r2,11
  802050:	1800371e 	bne	r3,zero,802130 <jpeg_consume_input+0x108>
  802054:	100690ba 	slli	r3,r2,2
  802058:	00802034 	movhi	r2,128
  80205c:	10881b04 	addi	r2,r2,8300
  802060:	1885883a 	add	r2,r3,r2
  802064:	10800017 	ldw	r2,0(r2)
  802068:	1000683a 	jmp	r2
  80206c:	00802098 	cmpnei	r2,zero,130
  802070:	008020cc 	andi	r2,zero,131
  802074:	00802108 	cmpgei	r2,zero,132
  802078:	00802114 	movui	r2,132
  80207c:	00802114 	movui	r2,132
  802080:	00802114 	movui	r2,132
  802084:	00802114 	movui	r2,132
  802088:	00802114 	movui	r2,132
  80208c:	00802114 	movui	r2,132
  802090:	00802130 	cmpltui	r2,zero,132
  802094:	00802114 	movui	r2,132
  802098:	e0bfff17 	ldw	r2,-4(fp)
  80209c:	10807317 	ldw	r2,460(r2)
  8020a0:	10800117 	ldw	r2,4(r2)
  8020a4:	e13fff17 	ldw	r4,-4(fp)
  8020a8:	103ee83a 	callr	r2
  8020ac:	e0bfff17 	ldw	r2,-4(fp)
  8020b0:	10800617 	ldw	r2,24(r2)
  8020b4:	10800217 	ldw	r2,8(r2)
  8020b8:	e13fff17 	ldw	r4,-4(fp)
  8020bc:	103ee83a 	callr	r2
  8020c0:	e0bfff17 	ldw	r2,-4(fp)
  8020c4:	00c03244 	movi	r3,201
  8020c8:	10c00515 	stw	r3,20(r2)
  8020cc:	e0bfff17 	ldw	r2,-4(fp)
  8020d0:	10807317 	ldw	r2,460(r2)
  8020d4:	10800017 	ldw	r2,0(r2)
  8020d8:	e13fff17 	ldw	r4,-4(fp)
  8020dc:	103ee83a 	callr	r2
  8020e0:	e0bffe15 	stw	r2,-8(fp)
  8020e4:	e0bffe17 	ldw	r2,-8(fp)
  8020e8:	10800058 	cmpnei	r2,r2,1
  8020ec:	10001f1e 	bne	r2,zero,80216c <jpeg_consume_input+0x144>
  8020f0:	e13fff17 	ldw	r4,-4(fp)
  8020f4:	0801b080 	call	801b08 <default_decompress_parms>
  8020f8:	e0bfff17 	ldw	r2,-4(fp)
  8020fc:	00c03284 	movi	r3,202
  802100:	10c00515 	stw	r3,20(r2)
  802104:	00001906 	br	80216c <jpeg_consume_input+0x144>
  802108:	00800044 	movi	r2,1
  80210c:	e0bffe15 	stw	r2,-8(fp)
  802110:	00001706 	br	802170 <jpeg_consume_input+0x148>
  802114:	e0bfff17 	ldw	r2,-4(fp)
  802118:	10807317 	ldw	r2,460(r2)
  80211c:	10800017 	ldw	r2,0(r2)
  802120:	e13fff17 	ldw	r4,-4(fp)
  802124:	103ee83a 	callr	r2
  802128:	e0bffe15 	stw	r2,-8(fp)
  80212c:	00001006 	br	802170 <jpeg_consume_input+0x148>
  802130:	e0bfff17 	ldw	r2,-4(fp)
  802134:	10800017 	ldw	r2,0(r2)
  802138:	00c00544 	movi	r3,21
  80213c:	10c00515 	stw	r3,20(r2)
  802140:	e0bfff17 	ldw	r2,-4(fp)
  802144:	10800017 	ldw	r2,0(r2)
  802148:	e0ffff17 	ldw	r3,-4(fp)
  80214c:	18c00517 	ldw	r3,20(r3)
  802150:	10c00615 	stw	r3,24(r2)
  802154:	e0bfff17 	ldw	r2,-4(fp)
  802158:	10800017 	ldw	r2,0(r2)
  80215c:	10800017 	ldw	r2,0(r2)
  802160:	e13fff17 	ldw	r4,-4(fp)
  802164:	103ee83a 	callr	r2
  802168:	00000106 	br	802170 <jpeg_consume_input+0x148>
  80216c:	0001883a 	nop
  802170:	e0bffe17 	ldw	r2,-8(fp)
  802174:	e037883a 	mov	sp,fp
  802178:	dfc00117 	ldw	ra,4(sp)
  80217c:	df000017 	ldw	fp,0(sp)
  802180:	dec00204 	addi	sp,sp,8
  802184:	f800283a 	ret

00802188 <jpeg_input_complete>:
  802188:	defffd04 	addi	sp,sp,-12
  80218c:	dfc00215 	stw	ra,8(sp)
  802190:	df000115 	stw	fp,4(sp)
  802194:	df000104 	addi	fp,sp,4
  802198:	e13fff15 	stw	r4,-4(fp)
  80219c:	e0bfff17 	ldw	r2,-4(fp)
  8021a0:	10800517 	ldw	r2,20(r2)
  8021a4:	10803210 	cmplti	r2,r2,200
  8021a8:	1000041e 	bne	r2,zero,8021bc <jpeg_input_complete+0x34>
  8021ac:	e0bfff17 	ldw	r2,-4(fp)
  8021b0:	10800517 	ldw	r2,20(r2)
  8021b4:	108034d0 	cmplti	r2,r2,211
  8021b8:	10000e1e 	bne	r2,zero,8021f4 <jpeg_input_complete+0x6c>
  8021bc:	e0bfff17 	ldw	r2,-4(fp)
  8021c0:	10800017 	ldw	r2,0(r2)
  8021c4:	00c00544 	movi	r3,21
  8021c8:	10c00515 	stw	r3,20(r2)
  8021cc:	e0bfff17 	ldw	r2,-4(fp)
  8021d0:	10800017 	ldw	r2,0(r2)
  8021d4:	e0ffff17 	ldw	r3,-4(fp)
  8021d8:	18c00517 	ldw	r3,20(r3)
  8021dc:	10c00615 	stw	r3,24(r2)
  8021e0:	e0bfff17 	ldw	r2,-4(fp)
  8021e4:	10800017 	ldw	r2,0(r2)
  8021e8:	10800017 	ldw	r2,0(r2)
  8021ec:	e13fff17 	ldw	r4,-4(fp)
  8021f0:	103ee83a 	callr	r2
  8021f4:	e0bfff17 	ldw	r2,-4(fp)
  8021f8:	10807317 	ldw	r2,460(r2)
  8021fc:	10800517 	ldw	r2,20(r2)
  802200:	e037883a 	mov	sp,fp
  802204:	dfc00117 	ldw	ra,4(sp)
  802208:	df000017 	ldw	fp,0(sp)
  80220c:	dec00204 	addi	sp,sp,8
  802210:	f800283a 	ret

00802214 <jpeg_has_multiple_scans>:
  802214:	defffd04 	addi	sp,sp,-12
  802218:	dfc00215 	stw	ra,8(sp)
  80221c:	df000115 	stw	fp,4(sp)
  802220:	df000104 	addi	fp,sp,4
  802224:	e13fff15 	stw	r4,-4(fp)
  802228:	e0bfff17 	ldw	r2,-4(fp)
  80222c:	10800517 	ldw	r2,20(r2)
  802230:	10803290 	cmplti	r2,r2,202
  802234:	1000041e 	bne	r2,zero,802248 <jpeg_has_multiple_scans+0x34>
  802238:	e0bfff17 	ldw	r2,-4(fp)
  80223c:	10800517 	ldw	r2,20(r2)
  802240:	108034d0 	cmplti	r2,r2,211
  802244:	10000e1e 	bne	r2,zero,802280 <jpeg_has_multiple_scans+0x6c>
  802248:	e0bfff17 	ldw	r2,-4(fp)
  80224c:	10800017 	ldw	r2,0(r2)
  802250:	00c00544 	movi	r3,21
  802254:	10c00515 	stw	r3,20(r2)
  802258:	e0bfff17 	ldw	r2,-4(fp)
  80225c:	10800017 	ldw	r2,0(r2)
  802260:	e0ffff17 	ldw	r3,-4(fp)
  802264:	18c00517 	ldw	r3,20(r3)
  802268:	10c00615 	stw	r3,24(r2)
  80226c:	e0bfff17 	ldw	r2,-4(fp)
  802270:	10800017 	ldw	r2,0(r2)
  802274:	10800017 	ldw	r2,0(r2)
  802278:	e13fff17 	ldw	r4,-4(fp)
  80227c:	103ee83a 	callr	r2
  802280:	e0bfff17 	ldw	r2,-4(fp)
  802284:	10807317 	ldw	r2,460(r2)
  802288:	10800417 	ldw	r2,16(r2)
  80228c:	e037883a 	mov	sp,fp
  802290:	dfc00117 	ldw	ra,4(sp)
  802294:	df000017 	ldw	fp,0(sp)
  802298:	dec00204 	addi	sp,sp,8
  80229c:	f800283a 	ret

008022a0 <jpeg_finish_decompress>:
  8022a0:	defffd04 	addi	sp,sp,-12
  8022a4:	dfc00215 	stw	ra,8(sp)
  8022a8:	df000115 	stw	fp,4(sp)
  8022ac:	df000104 	addi	fp,sp,4
  8022b0:	e13fff15 	stw	r4,-4(fp)
  8022b4:	e0bfff17 	ldw	r2,-4(fp)
  8022b8:	10800517 	ldw	r2,20(r2)
  8022bc:	10803360 	cmpeqi	r2,r2,205
  8022c0:	1000041e 	bne	r2,zero,8022d4 <jpeg_finish_decompress+0x34>
  8022c4:	e0bfff17 	ldw	r2,-4(fp)
  8022c8:	10800517 	ldw	r2,20(r2)
  8022cc:	10803398 	cmpnei	r2,r2,206
  8022d0:	10001a1e 	bne	r2,zero,80233c <jpeg_finish_decompress+0x9c>
  8022d4:	e0bfff17 	ldw	r2,-4(fp)
  8022d8:	10801017 	ldw	r2,64(r2)
  8022dc:	1000171e 	bne	r2,zero,80233c <jpeg_finish_decompress+0x9c>
  8022e0:	e0bfff17 	ldw	r2,-4(fp)
  8022e4:	10c02317 	ldw	r3,140(r2)
  8022e8:	e0bfff17 	ldw	r2,-4(fp)
  8022ec:	10801d17 	ldw	r2,116(r2)
  8022f0:	1880092e 	bgeu	r3,r2,802318 <jpeg_finish_decompress+0x78>
  8022f4:	e0bfff17 	ldw	r2,-4(fp)
  8022f8:	10800017 	ldw	r2,0(r2)
  8022fc:	00c01144 	movi	r3,69
  802300:	10c00515 	stw	r3,20(r2)
  802304:	e0bfff17 	ldw	r2,-4(fp)
  802308:	10800017 	ldw	r2,0(r2)
  80230c:	10800017 	ldw	r2,0(r2)
  802310:	e13fff17 	ldw	r4,-4(fp)
  802314:	103ee83a 	callr	r2
  802318:	e0bfff17 	ldw	r2,-4(fp)
  80231c:	10806f17 	ldw	r2,444(r2)
  802320:	10800117 	ldw	r2,4(r2)
  802324:	e13fff17 	ldw	r4,-4(fp)
  802328:	103ee83a 	callr	r2
  80232c:	e0bfff17 	ldw	r2,-4(fp)
  802330:	00c03484 	movi	r3,210
  802334:	10c00515 	stw	r3,20(r2)
  802338:	00001a06 	br	8023a4 <jpeg_finish_decompress+0x104>
  80233c:	e0bfff17 	ldw	r2,-4(fp)
  802340:	10800517 	ldw	r2,20(r2)
  802344:	108033d8 	cmpnei	r2,r2,207
  802348:	1000041e 	bne	r2,zero,80235c <jpeg_finish_decompress+0xbc>
  80234c:	e0bfff17 	ldw	r2,-4(fp)
  802350:	00c03484 	movi	r3,210
  802354:	10c00515 	stw	r3,20(r2)
  802358:	00001b06 	br	8023c8 <jpeg_finish_decompress+0x128>
  80235c:	e0bfff17 	ldw	r2,-4(fp)
  802360:	10800517 	ldw	r2,20(r2)
  802364:	108034a0 	cmpeqi	r2,r2,210
  802368:	1000171e 	bne	r2,zero,8023c8 <jpeg_finish_decompress+0x128>
  80236c:	e0bfff17 	ldw	r2,-4(fp)
  802370:	10800017 	ldw	r2,0(r2)
  802374:	00c00544 	movi	r3,21
  802378:	10c00515 	stw	r3,20(r2)
  80237c:	e0bfff17 	ldw	r2,-4(fp)
  802380:	10800017 	ldw	r2,0(r2)
  802384:	e0ffff17 	ldw	r3,-4(fp)
  802388:	18c00517 	ldw	r3,20(r3)
  80238c:	10c00615 	stw	r3,24(r2)
  802390:	e0bfff17 	ldw	r2,-4(fp)
  802394:	10800017 	ldw	r2,0(r2)
  802398:	10800017 	ldw	r2,0(r2)
  80239c:	e13fff17 	ldw	r4,-4(fp)
  8023a0:	103ee83a 	callr	r2
  8023a4:	00000806 	br	8023c8 <jpeg_finish_decompress+0x128>
  8023a8:	e0bfff17 	ldw	r2,-4(fp)
  8023ac:	10807317 	ldw	r2,460(r2)
  8023b0:	10800017 	ldw	r2,0(r2)
  8023b4:	e13fff17 	ldw	r4,-4(fp)
  8023b8:	103ee83a 	callr	r2
  8023bc:	1000021e 	bne	r2,zero,8023c8 <jpeg_finish_decompress+0x128>
  8023c0:	0005883a 	mov	r2,zero
  8023c4:	00000c06 	br	8023f8 <jpeg_finish_decompress+0x158>
  8023c8:	e0bfff17 	ldw	r2,-4(fp)
  8023cc:	10807317 	ldw	r2,460(r2)
  8023d0:	10800517 	ldw	r2,20(r2)
  8023d4:	103ff426 	beq	r2,zero,8023a8 <__alt_mem_epcs_flash_controller_0+0xff7f93a8>
  8023d8:	e0bfff17 	ldw	r2,-4(fp)
  8023dc:	10800617 	ldw	r2,24(r2)
  8023e0:	10800617 	ldw	r2,24(r2)
  8023e4:	e13fff17 	ldw	r4,-4(fp)
  8023e8:	103ee83a 	callr	r2
  8023ec:	e13fff17 	ldw	r4,-4(fp)
  8023f0:	0813d500 	call	813d50 <jpeg_abort>
  8023f4:	00800044 	movi	r2,1
  8023f8:	e037883a 	mov	sp,fp
  8023fc:	dfc00117 	ldw	ra,4(sp)
  802400:	df000017 	ldw	fp,0(sp)
  802404:	dec00204 	addi	sp,sp,8
  802408:	f800283a 	ret

0080240c <jpeg_start_decompress>:
  80240c:	defffc04 	addi	sp,sp,-16
  802410:	dfc00315 	stw	ra,12(sp)
  802414:	df000215 	stw	fp,8(sp)
  802418:	df000204 	addi	fp,sp,8
  80241c:	e13fff15 	stw	r4,-4(fp)
  802420:	e0bfff17 	ldw	r2,-4(fp)
  802424:	10800517 	ldw	r2,20(r2)
  802428:	10803298 	cmpnei	r2,r2,202
  80242c:	10000d1e 	bne	r2,zero,802464 <jpeg_start_decompress+0x58>
  802430:	e13fff17 	ldw	r4,-4(fp)
  802434:	080b3840 	call	80b384 <jinit_master_decompress>
  802438:	e0bfff17 	ldw	r2,-4(fp)
  80243c:	10801017 	ldw	r2,64(r2)
  802440:	10000526 	beq	r2,zero,802458 <jpeg_start_decompress+0x4c>
  802444:	e0bfff17 	ldw	r2,-4(fp)
  802448:	00c033c4 	movi	r3,207
  80244c:	10c00515 	stw	r3,20(r2)
  802450:	00800044 	movi	r2,1
  802454:	00005706 	br	8025b4 <jpeg_start_decompress+0x1a8>
  802458:	e0bfff17 	ldw	r2,-4(fp)
  80245c:	00c032c4 	movi	r3,203
  802460:	10c00515 	stw	r3,20(r2)
  802464:	e0bfff17 	ldw	r2,-4(fp)
  802468:	10800517 	ldw	r2,20(r2)
  80246c:	108032d8 	cmpnei	r2,r2,203
  802470:	10003c1e 	bne	r2,zero,802564 <jpeg_start_decompress+0x158>
  802474:	e0bfff17 	ldw	r2,-4(fp)
  802478:	10807317 	ldw	r2,460(r2)
  80247c:	10800417 	ldw	r2,16(r2)
  802480:	10003326 	beq	r2,zero,802550 <jpeg_start_decompress+0x144>
  802484:	e0bfff17 	ldw	r2,-4(fp)
  802488:	10800217 	ldw	r2,8(r2)
  80248c:	10000526 	beq	r2,zero,8024a4 <jpeg_start_decompress+0x98>
  802490:	e0bfff17 	ldw	r2,-4(fp)
  802494:	10800217 	ldw	r2,8(r2)
  802498:	10800017 	ldw	r2,0(r2)
  80249c:	e13fff17 	ldw	r4,-4(fp)
  8024a0:	103ee83a 	callr	r2
  8024a4:	e0bfff17 	ldw	r2,-4(fp)
  8024a8:	10807317 	ldw	r2,460(r2)
  8024ac:	10800017 	ldw	r2,0(r2)
  8024b0:	e13fff17 	ldw	r4,-4(fp)
  8024b4:	103ee83a 	callr	r2
  8024b8:	e0bffe15 	stw	r2,-8(fp)
  8024bc:	e0bffe17 	ldw	r2,-8(fp)
  8024c0:	1000021e 	bne	r2,zero,8024cc <jpeg_start_decompress+0xc0>
  8024c4:	0005883a 	mov	r2,zero
  8024c8:	00003a06 	br	8025b4 <jpeg_start_decompress+0x1a8>
  8024cc:	e0bffe17 	ldw	r2,-8(fp)
  8024d0:	10800098 	cmpnei	r2,r2,2
  8024d4:	10001d26 	beq	r2,zero,80254c <jpeg_start_decompress+0x140>
  8024d8:	e0bfff17 	ldw	r2,-4(fp)
  8024dc:	10800217 	ldw	r2,8(r2)
  8024e0:	103fe826 	beq	r2,zero,802484 <__alt_mem_epcs_flash_controller_0+0xff7f9484>
  8024e4:	e0bffe17 	ldw	r2,-8(fp)
  8024e8:	108000e0 	cmpeqi	r2,r2,3
  8024ec:	1000031e 	bne	r2,zero,8024fc <jpeg_start_decompress+0xf0>
  8024f0:	e0bffe17 	ldw	r2,-8(fp)
  8024f4:	10800058 	cmpnei	r2,r2,1
  8024f8:	103fe21e 	bne	r2,zero,802484 <__alt_mem_epcs_flash_controller_0+0xff7f9484>
  8024fc:	e0bfff17 	ldw	r2,-4(fp)
  802500:	10800217 	ldw	r2,8(r2)
  802504:	10c00117 	ldw	r3,4(r2)
  802508:	18c00044 	addi	r3,r3,1
  80250c:	10c00115 	stw	r3,4(r2)
  802510:	10c00117 	ldw	r3,4(r2)
  802514:	e0bfff17 	ldw	r2,-4(fp)
  802518:	10800217 	ldw	r2,8(r2)
  80251c:	10800217 	ldw	r2,8(r2)
  802520:	18bfd816 	blt	r3,r2,802484 <__alt_mem_epcs_flash_controller_0+0xff7f9484>
  802524:	e0bfff17 	ldw	r2,-4(fp)
  802528:	10800217 	ldw	r2,8(r2)
  80252c:	e0ffff17 	ldw	r3,-4(fp)
  802530:	18c00217 	ldw	r3,8(r3)
  802534:	18c00217 	ldw	r3,8(r3)
  802538:	e13fff17 	ldw	r4,-4(fp)
  80253c:	21005317 	ldw	r4,332(r4)
  802540:	1907883a 	add	r3,r3,r4
  802544:	10c00215 	stw	r3,8(r2)
  802548:	003fce06 	br	802484 <__alt_mem_epcs_flash_controller_0+0xff7f9484>
  80254c:	0001883a 	nop
  802550:	e0bfff17 	ldw	r2,-4(fp)
  802554:	10c02417 	ldw	r3,144(r2)
  802558:	e0bfff17 	ldw	r2,-4(fp)
  80255c:	10c02615 	stw	r3,152(r2)
  802560:	00001206 	br	8025ac <jpeg_start_decompress+0x1a0>
  802564:	e0bfff17 	ldw	r2,-4(fp)
  802568:	10800517 	ldw	r2,20(r2)
  80256c:	10803320 	cmpeqi	r2,r2,204
  802570:	10000e1e 	bne	r2,zero,8025ac <jpeg_start_decompress+0x1a0>
  802574:	e0bfff17 	ldw	r2,-4(fp)
  802578:	10800017 	ldw	r2,0(r2)
  80257c:	00c00544 	movi	r3,21
  802580:	10c00515 	stw	r3,20(r2)
  802584:	e0bfff17 	ldw	r2,-4(fp)
  802588:	10800017 	ldw	r2,0(r2)
  80258c:	e0ffff17 	ldw	r3,-4(fp)
  802590:	18c00517 	ldw	r3,20(r3)
  802594:	10c00615 	stw	r3,24(r2)
  802598:	e0bfff17 	ldw	r2,-4(fp)
  80259c:	10800017 	ldw	r2,0(r2)
  8025a0:	10800017 	ldw	r2,0(r2)
  8025a4:	e13fff17 	ldw	r4,-4(fp)
  8025a8:	103ee83a 	callr	r2
  8025ac:	e13fff17 	ldw	r4,-4(fp)
  8025b0:	08025c80 	call	8025c8 <output_pass_setup>
  8025b4:	e037883a 	mov	sp,fp
  8025b8:	dfc00117 	ldw	ra,4(sp)
  8025bc:	df000017 	ldw	fp,0(sp)
  8025c0:	dec00204 	addi	sp,sp,8
  8025c4:	f800283a 	ret

008025c8 <output_pass_setup>:
  8025c8:	defffc04 	addi	sp,sp,-16
  8025cc:	dfc00315 	stw	ra,12(sp)
  8025d0:	df000215 	stw	fp,8(sp)
  8025d4:	df000204 	addi	fp,sp,8
  8025d8:	e13fff15 	stw	r4,-4(fp)
  8025dc:	e0bfff17 	ldw	r2,-4(fp)
  8025e0:	10800517 	ldw	r2,20(r2)
  8025e4:	10803320 	cmpeqi	r2,r2,204
  8025e8:	1000411e 	bne	r2,zero,8026f0 <output_pass_setup+0x128>
  8025ec:	e0bfff17 	ldw	r2,-4(fp)
  8025f0:	10806f17 	ldw	r2,444(r2)
  8025f4:	10800017 	ldw	r2,0(r2)
  8025f8:	e13fff17 	ldw	r4,-4(fp)
  8025fc:	103ee83a 	callr	r2
  802600:	e0bfff17 	ldw	r2,-4(fp)
  802604:	10002315 	stw	zero,140(r2)
  802608:	e0bfff17 	ldw	r2,-4(fp)
  80260c:	00c03304 	movi	r3,204
  802610:	10c00515 	stw	r3,20(r2)
  802614:	00003606 	br	8026f0 <output_pass_setup+0x128>
  802618:	e0bfff17 	ldw	r2,-4(fp)
  80261c:	10800217 	ldw	r2,8(r2)
  802620:	10000f26 	beq	r2,zero,802660 <output_pass_setup+0x98>
  802624:	e0bfff17 	ldw	r2,-4(fp)
  802628:	10800217 	ldw	r2,8(r2)
  80262c:	e0ffff17 	ldw	r3,-4(fp)
  802630:	18c02317 	ldw	r3,140(r3)
  802634:	10c00115 	stw	r3,4(r2)
  802638:	e0bfff17 	ldw	r2,-4(fp)
  80263c:	10800217 	ldw	r2,8(r2)
  802640:	e0ffff17 	ldw	r3,-4(fp)
  802644:	18c01d17 	ldw	r3,116(r3)
  802648:	10c00215 	stw	r3,8(r2)
  80264c:	e0bfff17 	ldw	r2,-4(fp)
  802650:	10800217 	ldw	r2,8(r2)
  802654:	10800017 	ldw	r2,0(r2)
  802658:	e13fff17 	ldw	r4,-4(fp)
  80265c:	103ee83a 	callr	r2
  802660:	e0bfff17 	ldw	r2,-4(fp)
  802664:	10802317 	ldw	r2,140(r2)
  802668:	e0bffe15 	stw	r2,-8(fp)
  80266c:	e0bfff17 	ldw	r2,-4(fp)
  802670:	10807017 	ldw	r2,448(r2)
  802674:	10800117 	ldw	r2,4(r2)
  802678:	e0ffff17 	ldw	r3,-4(fp)
  80267c:	18c02304 	addi	r3,r3,140
  802680:	000f883a 	mov	r7,zero
  802684:	180d883a 	mov	r6,r3
  802688:	000b883a 	mov	r5,zero
  80268c:	e13fff17 	ldw	r4,-4(fp)
  802690:	103ee83a 	callr	r2
  802694:	e0bfff17 	ldw	r2,-4(fp)
  802698:	10c02317 	ldw	r3,140(r2)
  80269c:	e0bffe17 	ldw	r2,-8(fp)
  8026a0:	1880021e 	bne	r3,r2,8026ac <output_pass_setup+0xe4>
  8026a4:	0005883a 	mov	r2,zero
  8026a8:	00001e06 	br	802724 <output_pass_setup+0x15c>
  8026ac:	e0bfff17 	ldw	r2,-4(fp)
  8026b0:	10c02317 	ldw	r3,140(r2)
  8026b4:	e0bfff17 	ldw	r2,-4(fp)
  8026b8:	10801d17 	ldw	r2,116(r2)
  8026bc:	18bfd636 	bltu	r3,r2,802618 <__alt_mem_epcs_flash_controller_0+0xff7f9618>
  8026c0:	e0bfff17 	ldw	r2,-4(fp)
  8026c4:	10806f17 	ldw	r2,444(r2)
  8026c8:	10800117 	ldw	r2,4(r2)
  8026cc:	e13fff17 	ldw	r4,-4(fp)
  8026d0:	103ee83a 	callr	r2
  8026d4:	e0bfff17 	ldw	r2,-4(fp)
  8026d8:	10806f17 	ldw	r2,444(r2)
  8026dc:	10800017 	ldw	r2,0(r2)
  8026e0:	e13fff17 	ldw	r4,-4(fp)
  8026e4:	103ee83a 	callr	r2
  8026e8:	e0bfff17 	ldw	r2,-4(fp)
  8026ec:	10002315 	stw	zero,140(r2)
  8026f0:	e0bfff17 	ldw	r2,-4(fp)
  8026f4:	10806f17 	ldw	r2,444(r2)
  8026f8:	10800217 	ldw	r2,8(r2)
  8026fc:	103feb1e 	bne	r2,zero,8026ac <__alt_mem_epcs_flash_controller_0+0xff7f96ac>
  802700:	e0bfff17 	ldw	r2,-4(fp)
  802704:	10801117 	ldw	r2,68(r2)
  802708:	10000226 	beq	r2,zero,802714 <output_pass_setup+0x14c>
  80270c:	00803384 	movi	r2,206
  802710:	00000106 	br	802718 <output_pass_setup+0x150>
  802714:	00803344 	movi	r2,205
  802718:	e0ffff17 	ldw	r3,-4(fp)
  80271c:	18800515 	stw	r2,20(r3)
  802720:	00800044 	movi	r2,1
  802724:	e037883a 	mov	sp,fp
  802728:	dfc00117 	ldw	ra,4(sp)
  80272c:	df000017 	ldw	fp,0(sp)
  802730:	dec00204 	addi	sp,sp,8
  802734:	f800283a 	ret

00802738 <jpeg_read_scanlines>:
  802738:	defffa04 	addi	sp,sp,-24
  80273c:	dfc00515 	stw	ra,20(sp)
  802740:	df000415 	stw	fp,16(sp)
  802744:	df000404 	addi	fp,sp,16
  802748:	e13ffd15 	stw	r4,-12(fp)
  80274c:	e17ffe15 	stw	r5,-8(fp)
  802750:	e1bfff15 	stw	r6,-4(fp)
  802754:	e0bffd17 	ldw	r2,-12(fp)
  802758:	10800517 	ldw	r2,20(r2)
  80275c:	10803360 	cmpeqi	r2,r2,205
  802760:	10000e1e 	bne	r2,zero,80279c <jpeg_read_scanlines+0x64>
  802764:	e0bffd17 	ldw	r2,-12(fp)
  802768:	10800017 	ldw	r2,0(r2)
  80276c:	00c00544 	movi	r3,21
  802770:	10c00515 	stw	r3,20(r2)
  802774:	e0bffd17 	ldw	r2,-12(fp)
  802778:	10800017 	ldw	r2,0(r2)
  80277c:	e0fffd17 	ldw	r3,-12(fp)
  802780:	18c00517 	ldw	r3,20(r3)
  802784:	10c00615 	stw	r3,24(r2)
  802788:	e0bffd17 	ldw	r2,-12(fp)
  80278c:	10800017 	ldw	r2,0(r2)
  802790:	10800017 	ldw	r2,0(r2)
  802794:	e13ffd17 	ldw	r4,-12(fp)
  802798:	103ee83a 	callr	r2
  80279c:	e0bffd17 	ldw	r2,-12(fp)
  8027a0:	10c02317 	ldw	r3,140(r2)
  8027a4:	e0bffd17 	ldw	r2,-12(fp)
  8027a8:	10801d17 	ldw	r2,116(r2)
  8027ac:	18800c36 	bltu	r3,r2,8027e0 <jpeg_read_scanlines+0xa8>
  8027b0:	e0bffd17 	ldw	r2,-12(fp)
  8027b4:	10800017 	ldw	r2,0(r2)
  8027b8:	00c01f84 	movi	r3,126
  8027bc:	10c00515 	stw	r3,20(r2)
  8027c0:	e0bffd17 	ldw	r2,-12(fp)
  8027c4:	10800017 	ldw	r2,0(r2)
  8027c8:	10800117 	ldw	r2,4(r2)
  8027cc:	017fffc4 	movi	r5,-1
  8027d0:	e13ffd17 	ldw	r4,-12(fp)
  8027d4:	103ee83a 	callr	r2
  8027d8:	0005883a 	mov	r2,zero
  8027dc:	00002206 	br	802868 <jpeg_read_scanlines+0x130>
  8027e0:	e0bffd17 	ldw	r2,-12(fp)
  8027e4:	10800217 	ldw	r2,8(r2)
  8027e8:	10000f26 	beq	r2,zero,802828 <jpeg_read_scanlines+0xf0>
  8027ec:	e0bffd17 	ldw	r2,-12(fp)
  8027f0:	10800217 	ldw	r2,8(r2)
  8027f4:	e0fffd17 	ldw	r3,-12(fp)
  8027f8:	18c02317 	ldw	r3,140(r3)
  8027fc:	10c00115 	stw	r3,4(r2)
  802800:	e0bffd17 	ldw	r2,-12(fp)
  802804:	10800217 	ldw	r2,8(r2)
  802808:	e0fffd17 	ldw	r3,-12(fp)
  80280c:	18c01d17 	ldw	r3,116(r3)
  802810:	10c00215 	stw	r3,8(r2)
  802814:	e0bffd17 	ldw	r2,-12(fp)
  802818:	10800217 	ldw	r2,8(r2)
  80281c:	10800017 	ldw	r2,0(r2)
  802820:	e13ffd17 	ldw	r4,-12(fp)
  802824:	103ee83a 	callr	r2
  802828:	e03ffc15 	stw	zero,-16(fp)
  80282c:	e0bffd17 	ldw	r2,-12(fp)
  802830:	10807017 	ldw	r2,448(r2)
  802834:	10800117 	ldw	r2,4(r2)
  802838:	e1ffff17 	ldw	r7,-4(fp)
  80283c:	e1bffc04 	addi	r6,fp,-16
  802840:	e17ffe17 	ldw	r5,-8(fp)
  802844:	e13ffd17 	ldw	r4,-12(fp)
  802848:	103ee83a 	callr	r2
  80284c:	e0bffd17 	ldw	r2,-12(fp)
  802850:	10c02317 	ldw	r3,140(r2)
  802854:	e0bffc17 	ldw	r2,-16(fp)
  802858:	1887883a 	add	r3,r3,r2
  80285c:	e0bffd17 	ldw	r2,-12(fp)
  802860:	10c02315 	stw	r3,140(r2)
  802864:	e0bffc17 	ldw	r2,-16(fp)
  802868:	e037883a 	mov	sp,fp
  80286c:	dfc00117 	ldw	ra,4(sp)
  802870:	df000017 	ldw	fp,0(sp)
  802874:	dec00204 	addi	sp,sp,8
  802878:	f800283a 	ret

0080287c <jpeg_read_raw_data>:
  80287c:	defffa04 	addi	sp,sp,-24
  802880:	dfc00515 	stw	ra,20(sp)
  802884:	df000415 	stw	fp,16(sp)
  802888:	df000404 	addi	fp,sp,16
  80288c:	e13ffd15 	stw	r4,-12(fp)
  802890:	e17ffe15 	stw	r5,-8(fp)
  802894:	e1bfff15 	stw	r6,-4(fp)
  802898:	e0bffd17 	ldw	r2,-12(fp)
  80289c:	10800517 	ldw	r2,20(r2)
  8028a0:	108033a0 	cmpeqi	r2,r2,206
  8028a4:	10000e1e 	bne	r2,zero,8028e0 <jpeg_read_raw_data+0x64>
  8028a8:	e0bffd17 	ldw	r2,-12(fp)
  8028ac:	10800017 	ldw	r2,0(r2)
  8028b0:	00c00544 	movi	r3,21
  8028b4:	10c00515 	stw	r3,20(r2)
  8028b8:	e0bffd17 	ldw	r2,-12(fp)
  8028bc:	10800017 	ldw	r2,0(r2)
  8028c0:	e0fffd17 	ldw	r3,-12(fp)
  8028c4:	18c00517 	ldw	r3,20(r3)
  8028c8:	10c00615 	stw	r3,24(r2)
  8028cc:	e0bffd17 	ldw	r2,-12(fp)
  8028d0:	10800017 	ldw	r2,0(r2)
  8028d4:	10800017 	ldw	r2,0(r2)
  8028d8:	e13ffd17 	ldw	r4,-12(fp)
  8028dc:	103ee83a 	callr	r2
  8028e0:	e0bffd17 	ldw	r2,-12(fp)
  8028e4:	10c02317 	ldw	r3,140(r2)
  8028e8:	e0bffd17 	ldw	r2,-12(fp)
  8028ec:	10801d17 	ldw	r2,116(r2)
  8028f0:	18800c36 	bltu	r3,r2,802924 <jpeg_read_raw_data+0xa8>
  8028f4:	e0bffd17 	ldw	r2,-12(fp)
  8028f8:	10800017 	ldw	r2,0(r2)
  8028fc:	00c01f84 	movi	r3,126
  802900:	10c00515 	stw	r3,20(r2)
  802904:	e0bffd17 	ldw	r2,-12(fp)
  802908:	10800017 	ldw	r2,0(r2)
  80290c:	10800117 	ldw	r2,4(r2)
  802910:	017fffc4 	movi	r5,-1
  802914:	e13ffd17 	ldw	r4,-12(fp)
  802918:	103ee83a 	callr	r2
  80291c:	0005883a 	mov	r2,zero
  802920:	00003606 	br	8029fc <jpeg_read_raw_data+0x180>
  802924:	e0bffd17 	ldw	r2,-12(fp)
  802928:	10800217 	ldw	r2,8(r2)
  80292c:	10000f26 	beq	r2,zero,80296c <jpeg_read_raw_data+0xf0>
  802930:	e0bffd17 	ldw	r2,-12(fp)
  802934:	10800217 	ldw	r2,8(r2)
  802938:	e0fffd17 	ldw	r3,-12(fp)
  80293c:	18c02317 	ldw	r3,140(r3)
  802940:	10c00115 	stw	r3,4(r2)
  802944:	e0bffd17 	ldw	r2,-12(fp)
  802948:	10800217 	ldw	r2,8(r2)
  80294c:	e0fffd17 	ldw	r3,-12(fp)
  802950:	18c01d17 	ldw	r3,116(r3)
  802954:	10c00215 	stw	r3,8(r2)
  802958:	e0bffd17 	ldw	r2,-12(fp)
  80295c:	10800217 	ldw	r2,8(r2)
  802960:	10800017 	ldw	r2,0(r2)
  802964:	e13ffd17 	ldw	r4,-12(fp)
  802968:	103ee83a 	callr	r2
  80296c:	e0bffd17 	ldw	r2,-12(fp)
  802970:	10c05017 	ldw	r3,320(r2)
  802974:	e0bffd17 	ldw	r2,-12(fp)
  802978:	10805217 	ldw	r2,328(r2)
  80297c:	100b883a 	mov	r5,r2
  802980:	1809883a 	mov	r4,r3
  802984:	08301e80 	call	8301e8 <__mulsi3>
  802988:	e0bffc15 	stw	r2,-16(fp)
  80298c:	e0ffff17 	ldw	r3,-4(fp)
  802990:	e0bffc17 	ldw	r2,-16(fp)
  802994:	1880092e 	bgeu	r3,r2,8029bc <jpeg_read_raw_data+0x140>
  802998:	e0bffd17 	ldw	r2,-12(fp)
  80299c:	10800017 	ldw	r2,0(r2)
  8029a0:	00c00604 	movi	r3,24
  8029a4:	10c00515 	stw	r3,20(r2)
  8029a8:	e0bffd17 	ldw	r2,-12(fp)
  8029ac:	10800017 	ldw	r2,0(r2)
  8029b0:	10800017 	ldw	r2,0(r2)
  8029b4:	e13ffd17 	ldw	r4,-12(fp)
  8029b8:	103ee83a 	callr	r2
  8029bc:	e0bffd17 	ldw	r2,-12(fp)
  8029c0:	10807117 	ldw	r2,452(r2)
  8029c4:	10800317 	ldw	r2,12(r2)
  8029c8:	e17ffe17 	ldw	r5,-8(fp)
  8029cc:	e13ffd17 	ldw	r4,-12(fp)
  8029d0:	103ee83a 	callr	r2
  8029d4:	1000021e 	bne	r2,zero,8029e0 <jpeg_read_raw_data+0x164>
  8029d8:	0005883a 	mov	r2,zero
  8029dc:	00000706 	br	8029fc <jpeg_read_raw_data+0x180>
  8029e0:	e0bffd17 	ldw	r2,-12(fp)
  8029e4:	10c02317 	ldw	r3,140(r2)
  8029e8:	e0bffc17 	ldw	r2,-16(fp)
  8029ec:	1887883a 	add	r3,r3,r2
  8029f0:	e0bffd17 	ldw	r2,-12(fp)
  8029f4:	10c02315 	stw	r3,140(r2)
  8029f8:	e0bffc17 	ldw	r2,-16(fp)
  8029fc:	e037883a 	mov	sp,fp
  802a00:	dfc00117 	ldw	ra,4(sp)
  802a04:	df000017 	ldw	fp,0(sp)
  802a08:	dec00204 	addi	sp,sp,8
  802a0c:	f800283a 	ret

00802a10 <jpeg_start_output>:
  802a10:	defffc04 	addi	sp,sp,-16
  802a14:	dfc00315 	stw	ra,12(sp)
  802a18:	df000215 	stw	fp,8(sp)
  802a1c:	df000204 	addi	fp,sp,8
  802a20:	e13ffe15 	stw	r4,-8(fp)
  802a24:	e17fff15 	stw	r5,-4(fp)
  802a28:	e0bffe17 	ldw	r2,-8(fp)
  802a2c:	10800517 	ldw	r2,20(r2)
  802a30:	108033e0 	cmpeqi	r2,r2,207
  802a34:	1000121e 	bne	r2,zero,802a80 <jpeg_start_output+0x70>
  802a38:	e0bffe17 	ldw	r2,-8(fp)
  802a3c:	10800517 	ldw	r2,20(r2)
  802a40:	10803320 	cmpeqi	r2,r2,204
  802a44:	10000e1e 	bne	r2,zero,802a80 <jpeg_start_output+0x70>
  802a48:	e0bffe17 	ldw	r2,-8(fp)
  802a4c:	10800017 	ldw	r2,0(r2)
  802a50:	00c00544 	movi	r3,21
  802a54:	10c00515 	stw	r3,20(r2)
  802a58:	e0bffe17 	ldw	r2,-8(fp)
  802a5c:	10800017 	ldw	r2,0(r2)
  802a60:	e0fffe17 	ldw	r3,-8(fp)
  802a64:	18c00517 	ldw	r3,20(r3)
  802a68:	10c00615 	stw	r3,24(r2)
  802a6c:	e0bffe17 	ldw	r2,-8(fp)
  802a70:	10800017 	ldw	r2,0(r2)
  802a74:	10800017 	ldw	r2,0(r2)
  802a78:	e13ffe17 	ldw	r4,-8(fp)
  802a7c:	103ee83a 	callr	r2
  802a80:	e0bfff17 	ldw	r2,-4(fp)
  802a84:	00800216 	blt	zero,r2,802a90 <jpeg_start_output+0x80>
  802a88:	00800044 	movi	r2,1
  802a8c:	e0bfff15 	stw	r2,-4(fp)
  802a90:	e0bffe17 	ldw	r2,-8(fp)
  802a94:	10807317 	ldw	r2,460(r2)
  802a98:	10800517 	ldw	r2,20(r2)
  802a9c:	10000726 	beq	r2,zero,802abc <jpeg_start_output+0xac>
  802aa0:	e0bffe17 	ldw	r2,-8(fp)
  802aa4:	10c02417 	ldw	r3,144(r2)
  802aa8:	e0bfff17 	ldw	r2,-4(fp)
  802aac:	1880030e 	bge	r3,r2,802abc <jpeg_start_output+0xac>
  802ab0:	e0bffe17 	ldw	r2,-8(fp)
  802ab4:	10802417 	ldw	r2,144(r2)
  802ab8:	e0bfff15 	stw	r2,-4(fp)
  802abc:	e0bffe17 	ldw	r2,-8(fp)
  802ac0:	e0ffff17 	ldw	r3,-4(fp)
  802ac4:	10c02615 	stw	r3,152(r2)
  802ac8:	e13ffe17 	ldw	r4,-8(fp)
  802acc:	08025c80 	call	8025c8 <output_pass_setup>
  802ad0:	e037883a 	mov	sp,fp
  802ad4:	dfc00117 	ldw	ra,4(sp)
  802ad8:	df000017 	ldw	fp,0(sp)
  802adc:	dec00204 	addi	sp,sp,8
  802ae0:	f800283a 	ret

00802ae4 <jpeg_finish_output>:
  802ae4:	defffd04 	addi	sp,sp,-12
  802ae8:	dfc00215 	stw	ra,8(sp)
  802aec:	df000115 	stw	fp,4(sp)
  802af0:	df000104 	addi	fp,sp,4
  802af4:	e13fff15 	stw	r4,-4(fp)
  802af8:	e0bfff17 	ldw	r2,-4(fp)
  802afc:	10800517 	ldw	r2,20(r2)
  802b00:	10803360 	cmpeqi	r2,r2,205
  802b04:	1000041e 	bne	r2,zero,802b18 <jpeg_finish_output+0x34>
  802b08:	e0bfff17 	ldw	r2,-4(fp)
  802b0c:	10800517 	ldw	r2,20(r2)
  802b10:	10803398 	cmpnei	r2,r2,206
  802b14:	10000c1e 	bne	r2,zero,802b48 <jpeg_finish_output+0x64>
  802b18:	e0bfff17 	ldw	r2,-4(fp)
  802b1c:	10801017 	ldw	r2,64(r2)
  802b20:	10000926 	beq	r2,zero,802b48 <jpeg_finish_output+0x64>
  802b24:	e0bfff17 	ldw	r2,-4(fp)
  802b28:	10806f17 	ldw	r2,444(r2)
  802b2c:	10800117 	ldw	r2,4(r2)
  802b30:	e13fff17 	ldw	r4,-4(fp)
  802b34:	103ee83a 	callr	r2
  802b38:	e0bfff17 	ldw	r2,-4(fp)
  802b3c:	00c03404 	movi	r3,208
  802b40:	10c00515 	stw	r3,20(r2)
  802b44:	00001206 	br	802b90 <jpeg_finish_output+0xac>
  802b48:	e0bfff17 	ldw	r2,-4(fp)
  802b4c:	10800517 	ldw	r2,20(r2)
  802b50:	10803420 	cmpeqi	r2,r2,208
  802b54:	1000171e 	bne	r2,zero,802bb4 <jpeg_finish_output+0xd0>
  802b58:	e0bfff17 	ldw	r2,-4(fp)
  802b5c:	10800017 	ldw	r2,0(r2)
  802b60:	00c00544 	movi	r3,21
  802b64:	10c00515 	stw	r3,20(r2)
  802b68:	e0bfff17 	ldw	r2,-4(fp)
  802b6c:	10800017 	ldw	r2,0(r2)
  802b70:	e0ffff17 	ldw	r3,-4(fp)
  802b74:	18c00517 	ldw	r3,20(r3)
  802b78:	10c00615 	stw	r3,24(r2)
  802b7c:	e0bfff17 	ldw	r2,-4(fp)
  802b80:	10800017 	ldw	r2,0(r2)
  802b84:	10800017 	ldw	r2,0(r2)
  802b88:	e13fff17 	ldw	r4,-4(fp)
  802b8c:	103ee83a 	callr	r2
  802b90:	00000806 	br	802bb4 <jpeg_finish_output+0xd0>
  802b94:	e0bfff17 	ldw	r2,-4(fp)
  802b98:	10807317 	ldw	r2,460(r2)
  802b9c:	10800017 	ldw	r2,0(r2)
  802ba0:	e13fff17 	ldw	r4,-4(fp)
  802ba4:	103ee83a 	callr	r2
  802ba8:	1000021e 	bne	r2,zero,802bb4 <jpeg_finish_output+0xd0>
  802bac:	0005883a 	mov	r2,zero
  802bb0:	00000d06 	br	802be8 <jpeg_finish_output+0x104>
  802bb4:	e0bfff17 	ldw	r2,-4(fp)
  802bb8:	10802417 	ldw	r2,144(r2)
  802bbc:	e0ffff17 	ldw	r3,-4(fp)
  802bc0:	18c02617 	ldw	r3,152(r3)
  802bc4:	18800416 	blt	r3,r2,802bd8 <jpeg_finish_output+0xf4>
  802bc8:	e0bfff17 	ldw	r2,-4(fp)
  802bcc:	10807317 	ldw	r2,460(r2)
  802bd0:	10800517 	ldw	r2,20(r2)
  802bd4:	103fef26 	beq	r2,zero,802b94 <__alt_mem_epcs_flash_controller_0+0xff7f9b94>
  802bd8:	e0bfff17 	ldw	r2,-4(fp)
  802bdc:	00c033c4 	movi	r3,207
  802be0:	10c00515 	stw	r3,20(r2)
  802be4:	00800044 	movi	r2,1
  802be8:	e037883a 	mov	sp,fp
  802bec:	dfc00117 	ldw	ra,4(sp)
  802bf0:	df000017 	ldw	fp,0(sp)
  802bf4:	dec00204 	addi	sp,sp,8
  802bf8:	f800283a 	ret

00802bfc <init_source>:
  802bfc:	defffd04 	addi	sp,sp,-12
  802c00:	df000215 	stw	fp,8(sp)
  802c04:	df000204 	addi	fp,sp,8
  802c08:	e13fff15 	stw	r4,-4(fp)
  802c0c:	e0bfff17 	ldw	r2,-4(fp)
  802c10:	10800617 	ldw	r2,24(r2)
  802c14:	e0bffe15 	stw	r2,-8(fp)
  802c18:	e0bffe17 	ldw	r2,-8(fp)
  802c1c:	00c00044 	movi	r3,1
  802c20:	10c00915 	stw	r3,36(r2)
  802c24:	0001883a 	nop
  802c28:	e037883a 	mov	sp,fp
  802c2c:	df000017 	ldw	fp,0(sp)
  802c30:	dec00104 	addi	sp,sp,4
  802c34:	f800283a 	ret

00802c38 <init_mem_source>:
  802c38:	defffe04 	addi	sp,sp,-8
  802c3c:	df000115 	stw	fp,4(sp)
  802c40:	df000104 	addi	fp,sp,4
  802c44:	e13fff15 	stw	r4,-4(fp)
  802c48:	0001883a 	nop
  802c4c:	e037883a 	mov	sp,fp
  802c50:	df000017 	ldw	fp,0(sp)
  802c54:	dec00104 	addi	sp,sp,4
  802c58:	f800283a 	ret

00802c5c <fill_input_buffer>:
  802c5c:	defffb04 	addi	sp,sp,-20
  802c60:	dfc00415 	stw	ra,16(sp)
  802c64:	df000315 	stw	fp,12(sp)
  802c68:	df000304 	addi	fp,sp,12
  802c6c:	e13fff15 	stw	r4,-4(fp)
  802c70:	e0bfff17 	ldw	r2,-4(fp)
  802c74:	10800617 	ldw	r2,24(r2)
  802c78:	e0bffe15 	stw	r2,-8(fp)
  802c7c:	e0bffe17 	ldw	r2,-8(fp)
  802c80:	10c00817 	ldw	r3,32(r2)
  802c84:	e0bffe17 	ldw	r2,-8(fp)
  802c88:	10800717 	ldw	r2,28(r2)
  802c8c:	100f883a 	mov	r7,r2
  802c90:	01840004 	movi	r6,4096
  802c94:	01400044 	movi	r5,1
  802c98:	1809883a 	mov	r4,r3
  802c9c:	0832be00 	call	832be0 <fread>
  802ca0:	e0bffd15 	stw	r2,-12(fp)
  802ca4:	e0bffd17 	ldw	r2,-12(fp)
  802ca8:	1000211e 	bne	r2,zero,802d30 <fill_input_buffer+0xd4>
  802cac:	e0bffe17 	ldw	r2,-8(fp)
  802cb0:	10800917 	ldw	r2,36(r2)
  802cb4:	10000926 	beq	r2,zero,802cdc <fill_input_buffer+0x80>
  802cb8:	e0bfff17 	ldw	r2,-4(fp)
  802cbc:	10800017 	ldw	r2,0(r2)
  802cc0:	00c00ac4 	movi	r3,43
  802cc4:	10c00515 	stw	r3,20(r2)
  802cc8:	e0bfff17 	ldw	r2,-4(fp)
  802ccc:	10800017 	ldw	r2,0(r2)
  802cd0:	10800017 	ldw	r2,0(r2)
  802cd4:	e13fff17 	ldw	r4,-4(fp)
  802cd8:	103ee83a 	callr	r2
  802cdc:	e0bfff17 	ldw	r2,-4(fp)
  802ce0:	10800017 	ldw	r2,0(r2)
  802ce4:	00c01ec4 	movi	r3,123
  802ce8:	10c00515 	stw	r3,20(r2)
  802cec:	e0bfff17 	ldw	r2,-4(fp)
  802cf0:	10800017 	ldw	r2,0(r2)
  802cf4:	10800117 	ldw	r2,4(r2)
  802cf8:	017fffc4 	movi	r5,-1
  802cfc:	e13fff17 	ldw	r4,-4(fp)
  802d00:	103ee83a 	callr	r2
  802d04:	e0bffe17 	ldw	r2,-8(fp)
  802d08:	10800817 	ldw	r2,32(r2)
  802d0c:	00ffffc4 	movi	r3,-1
  802d10:	10c00005 	stb	r3,0(r2)
  802d14:	e0bffe17 	ldw	r2,-8(fp)
  802d18:	10800817 	ldw	r2,32(r2)
  802d1c:	10800044 	addi	r2,r2,1
  802d20:	00fff644 	movi	r3,-39
  802d24:	10c00005 	stb	r3,0(r2)
  802d28:	00800084 	movi	r2,2
  802d2c:	e0bffd15 	stw	r2,-12(fp)
  802d30:	e0bffe17 	ldw	r2,-8(fp)
  802d34:	10c00817 	ldw	r3,32(r2)
  802d38:	e0bffe17 	ldw	r2,-8(fp)
  802d3c:	10c00015 	stw	r3,0(r2)
  802d40:	e0bffe17 	ldw	r2,-8(fp)
  802d44:	e0fffd17 	ldw	r3,-12(fp)
  802d48:	10c00115 	stw	r3,4(r2)
  802d4c:	e0bffe17 	ldw	r2,-8(fp)
  802d50:	10000915 	stw	zero,36(r2)
  802d54:	00800044 	movi	r2,1
  802d58:	e037883a 	mov	sp,fp
  802d5c:	dfc00117 	ldw	ra,4(sp)
  802d60:	df000017 	ldw	fp,0(sp)
  802d64:	dec00204 	addi	sp,sp,8
  802d68:	f800283a 	ret

00802d6c <fill_mem_input_buffer>:
  802d6c:	defffd04 	addi	sp,sp,-12
  802d70:	dfc00215 	stw	ra,8(sp)
  802d74:	df000115 	stw	fp,4(sp)
  802d78:	df000104 	addi	fp,sp,4
  802d7c:	e13fff15 	stw	r4,-4(fp)
  802d80:	e0bfff17 	ldw	r2,-4(fp)
  802d84:	10800017 	ldw	r2,0(r2)
  802d88:	00c01ec4 	movi	r3,123
  802d8c:	10c00515 	stw	r3,20(r2)
  802d90:	e0bfff17 	ldw	r2,-4(fp)
  802d94:	10800017 	ldw	r2,0(r2)
  802d98:	10800117 	ldw	r2,4(r2)
  802d9c:	017fffc4 	movi	r5,-1
  802da0:	e13fff17 	ldw	r4,-4(fp)
  802da4:	103ee83a 	callr	r2
  802da8:	e0bfff17 	ldw	r2,-4(fp)
  802dac:	10800617 	ldw	r2,24(r2)
  802db0:	d0e03004 	addi	r3,gp,-32576
  802db4:	10c00015 	stw	r3,0(r2)
  802db8:	e0bfff17 	ldw	r2,-4(fp)
  802dbc:	10800617 	ldw	r2,24(r2)
  802dc0:	00c00084 	movi	r3,2
  802dc4:	10c00115 	stw	r3,4(r2)
  802dc8:	00800044 	movi	r2,1
  802dcc:	e037883a 	mov	sp,fp
  802dd0:	dfc00117 	ldw	ra,4(sp)
  802dd4:	df000017 	ldw	fp,0(sp)
  802dd8:	dec00204 	addi	sp,sp,8
  802ddc:	f800283a 	ret

00802de0 <skip_input_data>:
  802de0:	defffb04 	addi	sp,sp,-20
  802de4:	dfc00415 	stw	ra,16(sp)
  802de8:	df000315 	stw	fp,12(sp)
  802dec:	df000304 	addi	fp,sp,12
  802df0:	e13ffe15 	stw	r4,-8(fp)
  802df4:	e17fff15 	stw	r5,-4(fp)
  802df8:	e0bffe17 	ldw	r2,-8(fp)
  802dfc:	10800617 	ldw	r2,24(r2)
  802e00:	e0bffd15 	stw	r2,-12(fp)
  802e04:	e0bfff17 	ldw	r2,-4(fp)
  802e08:	00801c0e 	bge	zero,r2,802e7c <skip_input_data+0x9c>
  802e0c:	00000a06 	br	802e38 <skip_input_data+0x58>
  802e10:	e0bffd17 	ldw	r2,-12(fp)
  802e14:	10800117 	ldw	r2,4(r2)
  802e18:	1007883a 	mov	r3,r2
  802e1c:	e0bfff17 	ldw	r2,-4(fp)
  802e20:	10c5c83a 	sub	r2,r2,r3
  802e24:	e0bfff15 	stw	r2,-4(fp)
  802e28:	e0bffd17 	ldw	r2,-12(fp)
  802e2c:	10800317 	ldw	r2,12(r2)
  802e30:	e13ffe17 	ldw	r4,-8(fp)
  802e34:	103ee83a 	callr	r2
  802e38:	e0bffd17 	ldw	r2,-12(fp)
  802e3c:	10800117 	ldw	r2,4(r2)
  802e40:	1007883a 	mov	r3,r2
  802e44:	e0bfff17 	ldw	r2,-4(fp)
  802e48:	18bff116 	blt	r3,r2,802e10 <__alt_mem_epcs_flash_controller_0+0xff7f9e10>
  802e4c:	e0bffd17 	ldw	r2,-12(fp)
  802e50:	10c00017 	ldw	r3,0(r2)
  802e54:	e0bfff17 	ldw	r2,-4(fp)
  802e58:	1887883a 	add	r3,r3,r2
  802e5c:	e0bffd17 	ldw	r2,-12(fp)
  802e60:	10c00015 	stw	r3,0(r2)
  802e64:	e0bffd17 	ldw	r2,-12(fp)
  802e68:	10c00117 	ldw	r3,4(r2)
  802e6c:	e0bfff17 	ldw	r2,-4(fp)
  802e70:	1887c83a 	sub	r3,r3,r2
  802e74:	e0bffd17 	ldw	r2,-12(fp)
  802e78:	10c00115 	stw	r3,4(r2)
  802e7c:	0001883a 	nop
  802e80:	e037883a 	mov	sp,fp
  802e84:	dfc00117 	ldw	ra,4(sp)
  802e88:	df000017 	ldw	fp,0(sp)
  802e8c:	dec00204 	addi	sp,sp,8
  802e90:	f800283a 	ret

00802e94 <term_source>:
  802e94:	defffe04 	addi	sp,sp,-8
  802e98:	df000115 	stw	fp,4(sp)
  802e9c:	df000104 	addi	fp,sp,4
  802ea0:	e13fff15 	stw	r4,-4(fp)
  802ea4:	0001883a 	nop
  802ea8:	e037883a 	mov	sp,fp
  802eac:	df000017 	ldw	fp,0(sp)
  802eb0:	dec00104 	addi	sp,sp,4
  802eb4:	f800283a 	ret

00802eb8 <jpeg_stdio_src>:
  802eb8:	defffb04 	addi	sp,sp,-20
  802ebc:	dfc00415 	stw	ra,16(sp)
  802ec0:	df000315 	stw	fp,12(sp)
  802ec4:	df000304 	addi	fp,sp,12
  802ec8:	e13ffe15 	stw	r4,-8(fp)
  802ecc:	e17fff15 	stw	r5,-4(fp)
  802ed0:	e0bffe17 	ldw	r2,-8(fp)
  802ed4:	10800617 	ldw	r2,24(r2)
  802ed8:	1000171e 	bne	r2,zero,802f38 <jpeg_stdio_src+0x80>
  802edc:	e0bffe17 	ldw	r2,-8(fp)
  802ee0:	10800117 	ldw	r2,4(r2)
  802ee4:	10800017 	ldw	r2,0(r2)
  802ee8:	01800a04 	movi	r6,40
  802eec:	000b883a 	mov	r5,zero
  802ef0:	e13ffe17 	ldw	r4,-8(fp)
  802ef4:	103ee83a 	callr	r2
  802ef8:	1007883a 	mov	r3,r2
  802efc:	e0bffe17 	ldw	r2,-8(fp)
  802f00:	10c00615 	stw	r3,24(r2)
  802f04:	e0bffe17 	ldw	r2,-8(fp)
  802f08:	10800617 	ldw	r2,24(r2)
  802f0c:	e0bffd15 	stw	r2,-12(fp)
  802f10:	e0bffe17 	ldw	r2,-8(fp)
  802f14:	10800117 	ldw	r2,4(r2)
  802f18:	10800017 	ldw	r2,0(r2)
  802f1c:	01840004 	movi	r6,4096
  802f20:	000b883a 	mov	r5,zero
  802f24:	e13ffe17 	ldw	r4,-8(fp)
  802f28:	103ee83a 	callr	r2
  802f2c:	1007883a 	mov	r3,r2
  802f30:	e0bffd17 	ldw	r2,-12(fp)
  802f34:	10c00815 	stw	r3,32(r2)
  802f38:	e0bffe17 	ldw	r2,-8(fp)
  802f3c:	10800617 	ldw	r2,24(r2)
  802f40:	e0bffd15 	stw	r2,-12(fp)
  802f44:	e0fffd17 	ldw	r3,-12(fp)
  802f48:	00802034 	movhi	r2,128
  802f4c:	108aff04 	addi	r2,r2,11260
  802f50:	18800215 	stw	r2,8(r3)
  802f54:	e0fffd17 	ldw	r3,-12(fp)
  802f58:	00802034 	movhi	r2,128
  802f5c:	108b1704 	addi	r2,r2,11356
  802f60:	18800315 	stw	r2,12(r3)
  802f64:	e0fffd17 	ldw	r3,-12(fp)
  802f68:	00802034 	movhi	r2,128
  802f6c:	108b7804 	addi	r2,r2,11744
  802f70:	18800415 	stw	r2,16(r3)
  802f74:	e0fffd17 	ldw	r3,-12(fp)
  802f78:	00802074 	movhi	r2,129
  802f7c:	10a78604 	addi	r2,r2,-25064
  802f80:	18800515 	stw	r2,20(r3)
  802f84:	e0fffd17 	ldw	r3,-12(fp)
  802f88:	00802034 	movhi	r2,128
  802f8c:	108ba504 	addi	r2,r2,11924
  802f90:	18800615 	stw	r2,24(r3)
  802f94:	e0bffd17 	ldw	r2,-12(fp)
  802f98:	e0ffff17 	ldw	r3,-4(fp)
  802f9c:	10c00715 	stw	r3,28(r2)
  802fa0:	e0bffd17 	ldw	r2,-12(fp)
  802fa4:	10000115 	stw	zero,4(r2)
  802fa8:	e0bffd17 	ldw	r2,-12(fp)
  802fac:	10000015 	stw	zero,0(r2)
  802fb0:	0001883a 	nop
  802fb4:	e037883a 	mov	sp,fp
  802fb8:	dfc00117 	ldw	ra,4(sp)
  802fbc:	df000017 	ldw	fp,0(sp)
  802fc0:	dec00204 	addi	sp,sp,8
  802fc4:	f800283a 	ret

00802fc8 <jpeg_mem_src>:
  802fc8:	defffa04 	addi	sp,sp,-24
  802fcc:	dfc00515 	stw	ra,20(sp)
  802fd0:	df000415 	stw	fp,16(sp)
  802fd4:	df000404 	addi	fp,sp,16
  802fd8:	e13ffd15 	stw	r4,-12(fp)
  802fdc:	e17ffe15 	stw	r5,-8(fp)
  802fe0:	e1bfff15 	stw	r6,-4(fp)
  802fe4:	e0bffe17 	ldw	r2,-8(fp)
  802fe8:	10000226 	beq	r2,zero,802ff4 <jpeg_mem_src+0x2c>
  802fec:	e0bfff17 	ldw	r2,-4(fp)
  802ff0:	1000091e 	bne	r2,zero,803018 <jpeg_mem_src+0x50>
  802ff4:	e0bffd17 	ldw	r2,-12(fp)
  802ff8:	10800017 	ldw	r2,0(r2)
  802ffc:	00c00ac4 	movi	r3,43
  803000:	10c00515 	stw	r3,20(r2)
  803004:	e0bffd17 	ldw	r2,-12(fp)
  803008:	10800017 	ldw	r2,0(r2)
  80300c:	10800017 	ldw	r2,0(r2)
  803010:	e13ffd17 	ldw	r4,-12(fp)
  803014:	103ee83a 	callr	r2
  803018:	e0bffd17 	ldw	r2,-12(fp)
  80301c:	10800617 	ldw	r2,24(r2)
  803020:	10000a1e 	bne	r2,zero,80304c <jpeg_mem_src+0x84>
  803024:	e0bffd17 	ldw	r2,-12(fp)
  803028:	10800117 	ldw	r2,4(r2)
  80302c:	10800017 	ldw	r2,0(r2)
  803030:	01800704 	movi	r6,28
  803034:	000b883a 	mov	r5,zero
  803038:	e13ffd17 	ldw	r4,-12(fp)
  80303c:	103ee83a 	callr	r2
  803040:	1007883a 	mov	r3,r2
  803044:	e0bffd17 	ldw	r2,-12(fp)
  803048:	10c00615 	stw	r3,24(r2)
  80304c:	e0bffd17 	ldw	r2,-12(fp)
  803050:	10800617 	ldw	r2,24(r2)
  803054:	e0bffc15 	stw	r2,-16(fp)
  803058:	e0fffc17 	ldw	r3,-16(fp)
  80305c:	00802034 	movhi	r2,128
  803060:	108b0e04 	addi	r2,r2,11320
  803064:	18800215 	stw	r2,8(r3)
  803068:	e0fffc17 	ldw	r3,-16(fp)
  80306c:	00802034 	movhi	r2,128
  803070:	108b5b04 	addi	r2,r2,11628
  803074:	18800315 	stw	r2,12(r3)
  803078:	e0fffc17 	ldw	r3,-16(fp)
  80307c:	00802034 	movhi	r2,128
  803080:	108b7804 	addi	r2,r2,11744
  803084:	18800415 	stw	r2,16(r3)
  803088:	e0fffc17 	ldw	r3,-16(fp)
  80308c:	00802074 	movhi	r2,129
  803090:	10a78604 	addi	r2,r2,-25064
  803094:	18800515 	stw	r2,20(r3)
  803098:	e0fffc17 	ldw	r3,-16(fp)
  80309c:	00802034 	movhi	r2,128
  8030a0:	108ba504 	addi	r2,r2,11924
  8030a4:	18800615 	stw	r2,24(r3)
  8030a8:	e0bffc17 	ldw	r2,-16(fp)
  8030ac:	e0ffff17 	ldw	r3,-4(fp)
  8030b0:	10c00115 	stw	r3,4(r2)
  8030b4:	e0bffc17 	ldw	r2,-16(fp)
  8030b8:	e0fffe17 	ldw	r3,-8(fp)
  8030bc:	10c00015 	stw	r3,0(r2)
  8030c0:	0001883a 	nop
  8030c4:	e037883a 	mov	sp,fp
  8030c8:	dfc00117 	ldw	ra,4(sp)
  8030cc:	df000017 	ldw	fp,0(sp)
  8030d0:	dec00204 	addi	sp,sp,8
  8030d4:	f800283a 	ret

008030d8 <jpeg_core_output_dimensions>:
  8030d8:	defffa04 	addi	sp,sp,-24
  8030dc:	dfc00515 	stw	ra,20(sp)
  8030e0:	df000415 	stw	fp,16(sp)
  8030e4:	dc000315 	stw	r16,12(sp)
  8030e8:	df000404 	addi	fp,sp,16
  8030ec:	e13ffe15 	stw	r4,-8(fp)
  8030f0:	e0bffe17 	ldw	r2,-8(fp)
  8030f4:	10c00c17 	ldw	r3,48(r2)
  8030f8:	e0bffe17 	ldw	r2,-8(fp)
  8030fc:	10806b17 	ldw	r2,428(r2)
  803100:	100b883a 	mov	r5,r2
  803104:	1809883a 	mov	r4,r3
  803108:	08301e80 	call	8301e8 <__mulsi3>
  80310c:	1007883a 	mov	r3,r2
  803110:	e0bffe17 	ldw	r2,-8(fp)
  803114:	10800d17 	ldw	r2,52(r2)
  803118:	10c01d36 	bltu	r2,r3,803190 <jpeg_core_output_dimensions+0xb8>
  80311c:	e0bffe17 	ldw	r2,-8(fp)
  803120:	10800717 	ldw	r2,28(r2)
  803124:	1007883a 	mov	r3,r2
  803128:	e0bffe17 	ldw	r2,-8(fp)
  80312c:	10806b17 	ldw	r2,428(r2)
  803130:	100b883a 	mov	r5,r2
  803134:	1809883a 	mov	r4,r3
  803138:	0813b8c0 	call	813b8c <jdiv_round_up>
  80313c:	1007883a 	mov	r3,r2
  803140:	e0bffe17 	ldw	r2,-8(fp)
  803144:	10c01c15 	stw	r3,112(r2)
  803148:	e0bffe17 	ldw	r2,-8(fp)
  80314c:	10800817 	ldw	r2,32(r2)
  803150:	1007883a 	mov	r3,r2
  803154:	e0bffe17 	ldw	r2,-8(fp)
  803158:	10806b17 	ldw	r2,428(r2)
  80315c:	100b883a 	mov	r5,r2
  803160:	1809883a 	mov	r4,r3
  803164:	0813b8c0 	call	813b8c <jdiv_round_up>
  803168:	1007883a 	mov	r3,r2
  80316c:	e0bffe17 	ldw	r2,-8(fp)
  803170:	10c01d15 	stw	r3,116(r2)
  803174:	e0bffe17 	ldw	r2,-8(fp)
  803178:	00c00044 	movi	r3,1
  80317c:	10c05115 	stw	r3,324(r2)
  803180:	e0bffe17 	ldw	r2,-8(fp)
  803184:	00c00044 	movi	r3,1
  803188:	10c05215 	stw	r3,328(r2)
  80318c:	0002b906 	br	803c74 <jpeg_core_output_dimensions+0xb9c>
  803190:	e0bffe17 	ldw	r2,-8(fp)
  803194:	10c00c17 	ldw	r3,48(r2)
  803198:	e0bffe17 	ldw	r2,-8(fp)
  80319c:	10806b17 	ldw	r2,428(r2)
  8031a0:	100b883a 	mov	r5,r2
  8031a4:	1809883a 	mov	r4,r3
  8031a8:	08301e80 	call	8301e8 <__mulsi3>
  8031ac:	1007883a 	mov	r3,r2
  8031b0:	e0bffe17 	ldw	r2,-8(fp)
  8031b4:	10800d17 	ldw	r2,52(r2)
  8031b8:	1085883a 	add	r2,r2,r2
  8031bc:	10c01f36 	bltu	r2,r3,80323c <jpeg_core_output_dimensions+0x164>
  8031c0:	e0bffe17 	ldw	r2,-8(fp)
  8031c4:	10800717 	ldw	r2,28(r2)
  8031c8:	1085883a 	add	r2,r2,r2
  8031cc:	1007883a 	mov	r3,r2
  8031d0:	e0bffe17 	ldw	r2,-8(fp)
  8031d4:	10806b17 	ldw	r2,428(r2)
  8031d8:	100b883a 	mov	r5,r2
  8031dc:	1809883a 	mov	r4,r3
  8031e0:	0813b8c0 	call	813b8c <jdiv_round_up>
  8031e4:	1007883a 	mov	r3,r2
  8031e8:	e0bffe17 	ldw	r2,-8(fp)
  8031ec:	10c01c15 	stw	r3,112(r2)
  8031f0:	e0bffe17 	ldw	r2,-8(fp)
  8031f4:	10800817 	ldw	r2,32(r2)
  8031f8:	1085883a 	add	r2,r2,r2
  8031fc:	1007883a 	mov	r3,r2
  803200:	e0bffe17 	ldw	r2,-8(fp)
  803204:	10806b17 	ldw	r2,428(r2)
  803208:	100b883a 	mov	r5,r2
  80320c:	1809883a 	mov	r4,r3
  803210:	0813b8c0 	call	813b8c <jdiv_round_up>
  803214:	1007883a 	mov	r3,r2
  803218:	e0bffe17 	ldw	r2,-8(fp)
  80321c:	10c01d15 	stw	r3,116(r2)
  803220:	e0bffe17 	ldw	r2,-8(fp)
  803224:	00c00084 	movi	r3,2
  803228:	10c05115 	stw	r3,324(r2)
  80322c:	e0bffe17 	ldw	r2,-8(fp)
  803230:	00c00084 	movi	r3,2
  803234:	10c05215 	stw	r3,328(r2)
  803238:	00028e06 	br	803c74 <jpeg_core_output_dimensions+0xb9c>
  80323c:	e0bffe17 	ldw	r2,-8(fp)
  803240:	10c00c17 	ldw	r3,48(r2)
  803244:	e0bffe17 	ldw	r2,-8(fp)
  803248:	10806b17 	ldw	r2,428(r2)
  80324c:	100b883a 	mov	r5,r2
  803250:	1809883a 	mov	r4,r3
  803254:	08301e80 	call	8301e8 <__mulsi3>
  803258:	1009883a 	mov	r4,r2
  80325c:	e0bffe17 	ldw	r2,-8(fp)
  803260:	10c00d17 	ldw	r3,52(r2)
  803264:	1805883a 	mov	r2,r3
  803268:	1085883a 	add	r2,r2,r2
  80326c:	10c5883a 	add	r2,r2,r3
  803270:	11002336 	bltu	r2,r4,803300 <jpeg_core_output_dimensions+0x228>
  803274:	e0bffe17 	ldw	r2,-8(fp)
  803278:	10800717 	ldw	r2,28(r2)
  80327c:	1007883a 	mov	r3,r2
  803280:	1805883a 	mov	r2,r3
  803284:	1085883a 	add	r2,r2,r2
  803288:	10c7883a 	add	r3,r2,r3
  80328c:	e0bffe17 	ldw	r2,-8(fp)
  803290:	10806b17 	ldw	r2,428(r2)
  803294:	100b883a 	mov	r5,r2
  803298:	1809883a 	mov	r4,r3
  80329c:	0813b8c0 	call	813b8c <jdiv_round_up>
  8032a0:	1007883a 	mov	r3,r2
  8032a4:	e0bffe17 	ldw	r2,-8(fp)
  8032a8:	10c01c15 	stw	r3,112(r2)
  8032ac:	e0bffe17 	ldw	r2,-8(fp)
  8032b0:	10800817 	ldw	r2,32(r2)
  8032b4:	1007883a 	mov	r3,r2
  8032b8:	1805883a 	mov	r2,r3
  8032bc:	1085883a 	add	r2,r2,r2
  8032c0:	10c7883a 	add	r3,r2,r3
  8032c4:	e0bffe17 	ldw	r2,-8(fp)
  8032c8:	10806b17 	ldw	r2,428(r2)
  8032cc:	100b883a 	mov	r5,r2
  8032d0:	1809883a 	mov	r4,r3
  8032d4:	0813b8c0 	call	813b8c <jdiv_round_up>
  8032d8:	1007883a 	mov	r3,r2
  8032dc:	e0bffe17 	ldw	r2,-8(fp)
  8032e0:	10c01d15 	stw	r3,116(r2)
  8032e4:	e0bffe17 	ldw	r2,-8(fp)
  8032e8:	00c000c4 	movi	r3,3
  8032ec:	10c05115 	stw	r3,324(r2)
  8032f0:	e0bffe17 	ldw	r2,-8(fp)
  8032f4:	00c000c4 	movi	r3,3
  8032f8:	10c05215 	stw	r3,328(r2)
  8032fc:	00025d06 	br	803c74 <jpeg_core_output_dimensions+0xb9c>
  803300:	e0bffe17 	ldw	r2,-8(fp)
  803304:	10c00c17 	ldw	r3,48(r2)
  803308:	e0bffe17 	ldw	r2,-8(fp)
  80330c:	10806b17 	ldw	r2,428(r2)
  803310:	100b883a 	mov	r5,r2
  803314:	1809883a 	mov	r4,r3
  803318:	08301e80 	call	8301e8 <__mulsi3>
  80331c:	1007883a 	mov	r3,r2
  803320:	e0bffe17 	ldw	r2,-8(fp)
  803324:	10800d17 	ldw	r2,52(r2)
  803328:	1085883a 	add	r2,r2,r2
  80332c:	1085883a 	add	r2,r2,r2
  803330:	10c02136 	bltu	r2,r3,8033b8 <jpeg_core_output_dimensions+0x2e0>
  803334:	e0bffe17 	ldw	r2,-8(fp)
  803338:	10800717 	ldw	r2,28(r2)
  80333c:	1085883a 	add	r2,r2,r2
  803340:	1085883a 	add	r2,r2,r2
  803344:	1007883a 	mov	r3,r2
  803348:	e0bffe17 	ldw	r2,-8(fp)
  80334c:	10806b17 	ldw	r2,428(r2)
  803350:	100b883a 	mov	r5,r2
  803354:	1809883a 	mov	r4,r3
  803358:	0813b8c0 	call	813b8c <jdiv_round_up>
  80335c:	1007883a 	mov	r3,r2
  803360:	e0bffe17 	ldw	r2,-8(fp)
  803364:	10c01c15 	stw	r3,112(r2)
  803368:	e0bffe17 	ldw	r2,-8(fp)
  80336c:	10800817 	ldw	r2,32(r2)
  803370:	1085883a 	add	r2,r2,r2
  803374:	1085883a 	add	r2,r2,r2
  803378:	1007883a 	mov	r3,r2
  80337c:	e0bffe17 	ldw	r2,-8(fp)
  803380:	10806b17 	ldw	r2,428(r2)
  803384:	100b883a 	mov	r5,r2
  803388:	1809883a 	mov	r4,r3
  80338c:	0813b8c0 	call	813b8c <jdiv_round_up>
  803390:	1007883a 	mov	r3,r2
  803394:	e0bffe17 	ldw	r2,-8(fp)
  803398:	10c01d15 	stw	r3,116(r2)
  80339c:	e0bffe17 	ldw	r2,-8(fp)
  8033a0:	00c00104 	movi	r3,4
  8033a4:	10c05115 	stw	r3,324(r2)
  8033a8:	e0bffe17 	ldw	r2,-8(fp)
  8033ac:	00c00104 	movi	r3,4
  8033b0:	10c05215 	stw	r3,328(r2)
  8033b4:	00022f06 	br	803c74 <jpeg_core_output_dimensions+0xb9c>
  8033b8:	e0bffe17 	ldw	r2,-8(fp)
  8033bc:	10c00c17 	ldw	r3,48(r2)
  8033c0:	e0bffe17 	ldw	r2,-8(fp)
  8033c4:	10806b17 	ldw	r2,428(r2)
  8033c8:	100b883a 	mov	r5,r2
  8033cc:	1809883a 	mov	r4,r3
  8033d0:	08301e80 	call	8301e8 <__mulsi3>
  8033d4:	1021883a 	mov	r16,r2
  8033d8:	e0bffe17 	ldw	r2,-8(fp)
  8033dc:	10800d17 	ldw	r2,52(r2)
  8033e0:	01400144 	movi	r5,5
  8033e4:	1009883a 	mov	r4,r2
  8033e8:	08301e80 	call	8301e8 <__mulsi3>
  8033ec:	14002336 	bltu	r2,r16,80347c <jpeg_core_output_dimensions+0x3a4>
  8033f0:	e0bffe17 	ldw	r2,-8(fp)
  8033f4:	10800717 	ldw	r2,28(r2)
  8033f8:	01400144 	movi	r5,5
  8033fc:	1009883a 	mov	r4,r2
  803400:	08301e80 	call	8301e8 <__mulsi3>
  803404:	1007883a 	mov	r3,r2
  803408:	e0bffe17 	ldw	r2,-8(fp)
  80340c:	10806b17 	ldw	r2,428(r2)
  803410:	100b883a 	mov	r5,r2
  803414:	1809883a 	mov	r4,r3
  803418:	0813b8c0 	call	813b8c <jdiv_round_up>
  80341c:	1007883a 	mov	r3,r2
  803420:	e0bffe17 	ldw	r2,-8(fp)
  803424:	10c01c15 	stw	r3,112(r2)
  803428:	e0bffe17 	ldw	r2,-8(fp)
  80342c:	10800817 	ldw	r2,32(r2)
  803430:	01400144 	movi	r5,5
  803434:	1009883a 	mov	r4,r2
  803438:	08301e80 	call	8301e8 <__mulsi3>
  80343c:	1007883a 	mov	r3,r2
  803440:	e0bffe17 	ldw	r2,-8(fp)
  803444:	10806b17 	ldw	r2,428(r2)
  803448:	100b883a 	mov	r5,r2
  80344c:	1809883a 	mov	r4,r3
  803450:	0813b8c0 	call	813b8c <jdiv_round_up>
  803454:	1007883a 	mov	r3,r2
  803458:	e0bffe17 	ldw	r2,-8(fp)
  80345c:	10c01d15 	stw	r3,116(r2)
  803460:	e0bffe17 	ldw	r2,-8(fp)
  803464:	00c00144 	movi	r3,5
  803468:	10c05115 	stw	r3,324(r2)
  80346c:	e0bffe17 	ldw	r2,-8(fp)
  803470:	00c00144 	movi	r3,5
  803474:	10c05215 	stw	r3,328(r2)
  803478:	0001fe06 	br	803c74 <jpeg_core_output_dimensions+0xb9c>
  80347c:	e0bffe17 	ldw	r2,-8(fp)
  803480:	10c00c17 	ldw	r3,48(r2)
  803484:	e0bffe17 	ldw	r2,-8(fp)
  803488:	10806b17 	ldw	r2,428(r2)
  80348c:	100b883a 	mov	r5,r2
  803490:	1809883a 	mov	r4,r3
  803494:	08301e80 	call	8301e8 <__mulsi3>
  803498:	1021883a 	mov	r16,r2
  80349c:	e0bffe17 	ldw	r2,-8(fp)
  8034a0:	10800d17 	ldw	r2,52(r2)
  8034a4:	01400184 	movi	r5,6
  8034a8:	1009883a 	mov	r4,r2
  8034ac:	08301e80 	call	8301e8 <__mulsi3>
  8034b0:	14002336 	bltu	r2,r16,803540 <jpeg_core_output_dimensions+0x468>
  8034b4:	e0bffe17 	ldw	r2,-8(fp)
  8034b8:	10800717 	ldw	r2,28(r2)
  8034bc:	01400184 	movi	r5,6
  8034c0:	1009883a 	mov	r4,r2
  8034c4:	08301e80 	call	8301e8 <__mulsi3>
  8034c8:	1007883a 	mov	r3,r2
  8034cc:	e0bffe17 	ldw	r2,-8(fp)
  8034d0:	10806b17 	ldw	r2,428(r2)
  8034d4:	100b883a 	mov	r5,r2
  8034d8:	1809883a 	mov	r4,r3
  8034dc:	0813b8c0 	call	813b8c <jdiv_round_up>
  8034e0:	1007883a 	mov	r3,r2
  8034e4:	e0bffe17 	ldw	r2,-8(fp)
  8034e8:	10c01c15 	stw	r3,112(r2)
  8034ec:	e0bffe17 	ldw	r2,-8(fp)
  8034f0:	10800817 	ldw	r2,32(r2)
  8034f4:	01400184 	movi	r5,6
  8034f8:	1009883a 	mov	r4,r2
  8034fc:	08301e80 	call	8301e8 <__mulsi3>
  803500:	1007883a 	mov	r3,r2
  803504:	e0bffe17 	ldw	r2,-8(fp)
  803508:	10806b17 	ldw	r2,428(r2)
  80350c:	100b883a 	mov	r5,r2
  803510:	1809883a 	mov	r4,r3
  803514:	0813b8c0 	call	813b8c <jdiv_round_up>
  803518:	1007883a 	mov	r3,r2
  80351c:	e0bffe17 	ldw	r2,-8(fp)
  803520:	10c01d15 	stw	r3,116(r2)
  803524:	e0bffe17 	ldw	r2,-8(fp)
  803528:	00c00184 	movi	r3,6
  80352c:	10c05115 	stw	r3,324(r2)
  803530:	e0bffe17 	ldw	r2,-8(fp)
  803534:	00c00184 	movi	r3,6
  803538:	10c05215 	stw	r3,328(r2)
  80353c:	0001cd06 	br	803c74 <jpeg_core_output_dimensions+0xb9c>
  803540:	e0bffe17 	ldw	r2,-8(fp)
  803544:	10c00c17 	ldw	r3,48(r2)
  803548:	e0bffe17 	ldw	r2,-8(fp)
  80354c:	10806b17 	ldw	r2,428(r2)
  803550:	100b883a 	mov	r5,r2
  803554:	1809883a 	mov	r4,r3
  803558:	08301e80 	call	8301e8 <__mulsi3>
  80355c:	1021883a 	mov	r16,r2
  803560:	e0bffe17 	ldw	r2,-8(fp)
  803564:	10800d17 	ldw	r2,52(r2)
  803568:	014001c4 	movi	r5,7
  80356c:	1009883a 	mov	r4,r2
  803570:	08301e80 	call	8301e8 <__mulsi3>
  803574:	14002336 	bltu	r2,r16,803604 <jpeg_core_output_dimensions+0x52c>
  803578:	e0bffe17 	ldw	r2,-8(fp)
  80357c:	10800717 	ldw	r2,28(r2)
  803580:	014001c4 	movi	r5,7
  803584:	1009883a 	mov	r4,r2
  803588:	08301e80 	call	8301e8 <__mulsi3>
  80358c:	1007883a 	mov	r3,r2
  803590:	e0bffe17 	ldw	r2,-8(fp)
  803594:	10806b17 	ldw	r2,428(r2)
  803598:	100b883a 	mov	r5,r2
  80359c:	1809883a 	mov	r4,r3
  8035a0:	0813b8c0 	call	813b8c <jdiv_round_up>
  8035a4:	1007883a 	mov	r3,r2
  8035a8:	e0bffe17 	ldw	r2,-8(fp)
  8035ac:	10c01c15 	stw	r3,112(r2)
  8035b0:	e0bffe17 	ldw	r2,-8(fp)
  8035b4:	10800817 	ldw	r2,32(r2)
  8035b8:	014001c4 	movi	r5,7
  8035bc:	1009883a 	mov	r4,r2
  8035c0:	08301e80 	call	8301e8 <__mulsi3>
  8035c4:	1007883a 	mov	r3,r2
  8035c8:	e0bffe17 	ldw	r2,-8(fp)
  8035cc:	10806b17 	ldw	r2,428(r2)
  8035d0:	100b883a 	mov	r5,r2
  8035d4:	1809883a 	mov	r4,r3
  8035d8:	0813b8c0 	call	813b8c <jdiv_round_up>
  8035dc:	1007883a 	mov	r3,r2
  8035e0:	e0bffe17 	ldw	r2,-8(fp)
  8035e4:	10c01d15 	stw	r3,116(r2)
  8035e8:	e0bffe17 	ldw	r2,-8(fp)
  8035ec:	00c001c4 	movi	r3,7
  8035f0:	10c05115 	stw	r3,324(r2)
  8035f4:	e0bffe17 	ldw	r2,-8(fp)
  8035f8:	00c001c4 	movi	r3,7
  8035fc:	10c05215 	stw	r3,328(r2)
  803600:	00019c06 	br	803c74 <jpeg_core_output_dimensions+0xb9c>
  803604:	e0bffe17 	ldw	r2,-8(fp)
  803608:	10c00c17 	ldw	r3,48(r2)
  80360c:	e0bffe17 	ldw	r2,-8(fp)
  803610:	10806b17 	ldw	r2,428(r2)
  803614:	100b883a 	mov	r5,r2
  803618:	1809883a 	mov	r4,r3
  80361c:	08301e80 	call	8301e8 <__mulsi3>
  803620:	1007883a 	mov	r3,r2
  803624:	e0bffe17 	ldw	r2,-8(fp)
  803628:	10800d17 	ldw	r2,52(r2)
  80362c:	100490fa 	slli	r2,r2,3
  803630:	10c01d36 	bltu	r2,r3,8036a8 <jpeg_core_output_dimensions+0x5d0>
  803634:	e0bffe17 	ldw	r2,-8(fp)
  803638:	10800717 	ldw	r2,28(r2)
  80363c:	100690fa 	slli	r3,r2,3
  803640:	e0bffe17 	ldw	r2,-8(fp)
  803644:	10806b17 	ldw	r2,428(r2)
  803648:	100b883a 	mov	r5,r2
  80364c:	1809883a 	mov	r4,r3
  803650:	0813b8c0 	call	813b8c <jdiv_round_up>
  803654:	1007883a 	mov	r3,r2
  803658:	e0bffe17 	ldw	r2,-8(fp)
  80365c:	10c01c15 	stw	r3,112(r2)
  803660:	e0bffe17 	ldw	r2,-8(fp)
  803664:	10800817 	ldw	r2,32(r2)
  803668:	100690fa 	slli	r3,r2,3
  80366c:	e0bffe17 	ldw	r2,-8(fp)
  803670:	10806b17 	ldw	r2,428(r2)
  803674:	100b883a 	mov	r5,r2
  803678:	1809883a 	mov	r4,r3
  80367c:	0813b8c0 	call	813b8c <jdiv_round_up>
  803680:	1007883a 	mov	r3,r2
  803684:	e0bffe17 	ldw	r2,-8(fp)
  803688:	10c01d15 	stw	r3,116(r2)
  80368c:	e0bffe17 	ldw	r2,-8(fp)
  803690:	00c00204 	movi	r3,8
  803694:	10c05115 	stw	r3,324(r2)
  803698:	e0bffe17 	ldw	r2,-8(fp)
  80369c:	00c00204 	movi	r3,8
  8036a0:	10c05215 	stw	r3,328(r2)
  8036a4:	00017306 	br	803c74 <jpeg_core_output_dimensions+0xb9c>
  8036a8:	e0bffe17 	ldw	r2,-8(fp)
  8036ac:	10c00c17 	ldw	r3,48(r2)
  8036b0:	e0bffe17 	ldw	r2,-8(fp)
  8036b4:	10806b17 	ldw	r2,428(r2)
  8036b8:	100b883a 	mov	r5,r2
  8036bc:	1809883a 	mov	r4,r3
  8036c0:	08301e80 	call	8301e8 <__mulsi3>
  8036c4:	1021883a 	mov	r16,r2
  8036c8:	e0bffe17 	ldw	r2,-8(fp)
  8036cc:	10800d17 	ldw	r2,52(r2)
  8036d0:	01400244 	movi	r5,9
  8036d4:	1009883a 	mov	r4,r2
  8036d8:	08301e80 	call	8301e8 <__mulsi3>
  8036dc:	14002336 	bltu	r2,r16,80376c <jpeg_core_output_dimensions+0x694>
  8036e0:	e0bffe17 	ldw	r2,-8(fp)
  8036e4:	10800717 	ldw	r2,28(r2)
  8036e8:	01400244 	movi	r5,9
  8036ec:	1009883a 	mov	r4,r2
  8036f0:	08301e80 	call	8301e8 <__mulsi3>
  8036f4:	1007883a 	mov	r3,r2
  8036f8:	e0bffe17 	ldw	r2,-8(fp)
  8036fc:	10806b17 	ldw	r2,428(r2)
  803700:	100b883a 	mov	r5,r2
  803704:	1809883a 	mov	r4,r3
  803708:	0813b8c0 	call	813b8c <jdiv_round_up>
  80370c:	1007883a 	mov	r3,r2
  803710:	e0bffe17 	ldw	r2,-8(fp)
  803714:	10c01c15 	stw	r3,112(r2)
  803718:	e0bffe17 	ldw	r2,-8(fp)
  80371c:	10800817 	ldw	r2,32(r2)
  803720:	01400244 	movi	r5,9
  803724:	1009883a 	mov	r4,r2
  803728:	08301e80 	call	8301e8 <__mulsi3>
  80372c:	1007883a 	mov	r3,r2
  803730:	e0bffe17 	ldw	r2,-8(fp)
  803734:	10806b17 	ldw	r2,428(r2)
  803738:	100b883a 	mov	r5,r2
  80373c:	1809883a 	mov	r4,r3
  803740:	0813b8c0 	call	813b8c <jdiv_round_up>
  803744:	1007883a 	mov	r3,r2
  803748:	e0bffe17 	ldw	r2,-8(fp)
  80374c:	10c01d15 	stw	r3,116(r2)
  803750:	e0bffe17 	ldw	r2,-8(fp)
  803754:	00c00244 	movi	r3,9
  803758:	10c05115 	stw	r3,324(r2)
  80375c:	e0bffe17 	ldw	r2,-8(fp)
  803760:	00c00244 	movi	r3,9
  803764:	10c05215 	stw	r3,328(r2)
  803768:	00014206 	br	803c74 <jpeg_core_output_dimensions+0xb9c>
  80376c:	e0bffe17 	ldw	r2,-8(fp)
  803770:	10c00c17 	ldw	r3,48(r2)
  803774:	e0bffe17 	ldw	r2,-8(fp)
  803778:	10806b17 	ldw	r2,428(r2)
  80377c:	100b883a 	mov	r5,r2
  803780:	1809883a 	mov	r4,r3
  803784:	08301e80 	call	8301e8 <__mulsi3>
  803788:	1021883a 	mov	r16,r2
  80378c:	e0bffe17 	ldw	r2,-8(fp)
  803790:	10800d17 	ldw	r2,52(r2)
  803794:	01400284 	movi	r5,10
  803798:	1009883a 	mov	r4,r2
  80379c:	08301e80 	call	8301e8 <__mulsi3>
  8037a0:	14002336 	bltu	r2,r16,803830 <jpeg_core_output_dimensions+0x758>
  8037a4:	e0bffe17 	ldw	r2,-8(fp)
  8037a8:	10800717 	ldw	r2,28(r2)
  8037ac:	01400284 	movi	r5,10
  8037b0:	1009883a 	mov	r4,r2
  8037b4:	08301e80 	call	8301e8 <__mulsi3>
  8037b8:	1007883a 	mov	r3,r2
  8037bc:	e0bffe17 	ldw	r2,-8(fp)
  8037c0:	10806b17 	ldw	r2,428(r2)
  8037c4:	100b883a 	mov	r5,r2
  8037c8:	1809883a 	mov	r4,r3
  8037cc:	0813b8c0 	call	813b8c <jdiv_round_up>
  8037d0:	1007883a 	mov	r3,r2
  8037d4:	e0bffe17 	ldw	r2,-8(fp)
  8037d8:	10c01c15 	stw	r3,112(r2)
  8037dc:	e0bffe17 	ldw	r2,-8(fp)
  8037e0:	10800817 	ldw	r2,32(r2)
  8037e4:	01400284 	movi	r5,10
  8037e8:	1009883a 	mov	r4,r2
  8037ec:	08301e80 	call	8301e8 <__mulsi3>
  8037f0:	1007883a 	mov	r3,r2
  8037f4:	e0bffe17 	ldw	r2,-8(fp)
  8037f8:	10806b17 	ldw	r2,428(r2)
  8037fc:	100b883a 	mov	r5,r2
  803800:	1809883a 	mov	r4,r3
  803804:	0813b8c0 	call	813b8c <jdiv_round_up>
  803808:	1007883a 	mov	r3,r2
  80380c:	e0bffe17 	ldw	r2,-8(fp)
  803810:	10c01d15 	stw	r3,116(r2)
  803814:	e0bffe17 	ldw	r2,-8(fp)
  803818:	00c00284 	movi	r3,10
  80381c:	10c05115 	stw	r3,324(r2)
  803820:	e0bffe17 	ldw	r2,-8(fp)
  803824:	00c00284 	movi	r3,10
  803828:	10c05215 	stw	r3,328(r2)
  80382c:	00011106 	br	803c74 <jpeg_core_output_dimensions+0xb9c>
  803830:	e0bffe17 	ldw	r2,-8(fp)
  803834:	10c00c17 	ldw	r3,48(r2)
  803838:	e0bffe17 	ldw	r2,-8(fp)
  80383c:	10806b17 	ldw	r2,428(r2)
  803840:	100b883a 	mov	r5,r2
  803844:	1809883a 	mov	r4,r3
  803848:	08301e80 	call	8301e8 <__mulsi3>
  80384c:	1021883a 	mov	r16,r2
  803850:	e0bffe17 	ldw	r2,-8(fp)
  803854:	10800d17 	ldw	r2,52(r2)
  803858:	014002c4 	movi	r5,11
  80385c:	1009883a 	mov	r4,r2
  803860:	08301e80 	call	8301e8 <__mulsi3>
  803864:	14002336 	bltu	r2,r16,8038f4 <jpeg_core_output_dimensions+0x81c>
  803868:	e0bffe17 	ldw	r2,-8(fp)
  80386c:	10800717 	ldw	r2,28(r2)
  803870:	014002c4 	movi	r5,11
  803874:	1009883a 	mov	r4,r2
  803878:	08301e80 	call	8301e8 <__mulsi3>
  80387c:	1007883a 	mov	r3,r2
  803880:	e0bffe17 	ldw	r2,-8(fp)
  803884:	10806b17 	ldw	r2,428(r2)
  803888:	100b883a 	mov	r5,r2
  80388c:	1809883a 	mov	r4,r3
  803890:	0813b8c0 	call	813b8c <jdiv_round_up>
  803894:	1007883a 	mov	r3,r2
  803898:	e0bffe17 	ldw	r2,-8(fp)
  80389c:	10c01c15 	stw	r3,112(r2)
  8038a0:	e0bffe17 	ldw	r2,-8(fp)
  8038a4:	10800817 	ldw	r2,32(r2)
  8038a8:	014002c4 	movi	r5,11
  8038ac:	1009883a 	mov	r4,r2
  8038b0:	08301e80 	call	8301e8 <__mulsi3>
  8038b4:	1007883a 	mov	r3,r2
  8038b8:	e0bffe17 	ldw	r2,-8(fp)
  8038bc:	10806b17 	ldw	r2,428(r2)
  8038c0:	100b883a 	mov	r5,r2
  8038c4:	1809883a 	mov	r4,r3
  8038c8:	0813b8c0 	call	813b8c <jdiv_round_up>
  8038cc:	1007883a 	mov	r3,r2
  8038d0:	e0bffe17 	ldw	r2,-8(fp)
  8038d4:	10c01d15 	stw	r3,116(r2)
  8038d8:	e0bffe17 	ldw	r2,-8(fp)
  8038dc:	00c002c4 	movi	r3,11
  8038e0:	10c05115 	stw	r3,324(r2)
  8038e4:	e0bffe17 	ldw	r2,-8(fp)
  8038e8:	00c002c4 	movi	r3,11
  8038ec:	10c05215 	stw	r3,328(r2)
  8038f0:	0000e006 	br	803c74 <jpeg_core_output_dimensions+0xb9c>
  8038f4:	e0bffe17 	ldw	r2,-8(fp)
  8038f8:	10c00c17 	ldw	r3,48(r2)
  8038fc:	e0bffe17 	ldw	r2,-8(fp)
  803900:	10806b17 	ldw	r2,428(r2)
  803904:	100b883a 	mov	r5,r2
  803908:	1809883a 	mov	r4,r3
  80390c:	08301e80 	call	8301e8 <__mulsi3>
  803910:	1021883a 	mov	r16,r2
  803914:	e0bffe17 	ldw	r2,-8(fp)
  803918:	10800d17 	ldw	r2,52(r2)
  80391c:	01400304 	movi	r5,12
  803920:	1009883a 	mov	r4,r2
  803924:	08301e80 	call	8301e8 <__mulsi3>
  803928:	14002336 	bltu	r2,r16,8039b8 <jpeg_core_output_dimensions+0x8e0>
  80392c:	e0bffe17 	ldw	r2,-8(fp)
  803930:	10800717 	ldw	r2,28(r2)
  803934:	01400304 	movi	r5,12
  803938:	1009883a 	mov	r4,r2
  80393c:	08301e80 	call	8301e8 <__mulsi3>
  803940:	1007883a 	mov	r3,r2
  803944:	e0bffe17 	ldw	r2,-8(fp)
  803948:	10806b17 	ldw	r2,428(r2)
  80394c:	100b883a 	mov	r5,r2
  803950:	1809883a 	mov	r4,r3
  803954:	0813b8c0 	call	813b8c <jdiv_round_up>
  803958:	1007883a 	mov	r3,r2
  80395c:	e0bffe17 	ldw	r2,-8(fp)
  803960:	10c01c15 	stw	r3,112(r2)
  803964:	e0bffe17 	ldw	r2,-8(fp)
  803968:	10800817 	ldw	r2,32(r2)
  80396c:	01400304 	movi	r5,12
  803970:	1009883a 	mov	r4,r2
  803974:	08301e80 	call	8301e8 <__mulsi3>
  803978:	1007883a 	mov	r3,r2
  80397c:	e0bffe17 	ldw	r2,-8(fp)
  803980:	10806b17 	ldw	r2,428(r2)
  803984:	100b883a 	mov	r5,r2
  803988:	1809883a 	mov	r4,r3
  80398c:	0813b8c0 	call	813b8c <jdiv_round_up>
  803990:	1007883a 	mov	r3,r2
  803994:	e0bffe17 	ldw	r2,-8(fp)
  803998:	10c01d15 	stw	r3,116(r2)
  80399c:	e0bffe17 	ldw	r2,-8(fp)
  8039a0:	00c00304 	movi	r3,12
  8039a4:	10c05115 	stw	r3,324(r2)
  8039a8:	e0bffe17 	ldw	r2,-8(fp)
  8039ac:	00c00304 	movi	r3,12
  8039b0:	10c05215 	stw	r3,328(r2)
  8039b4:	0000af06 	br	803c74 <jpeg_core_output_dimensions+0xb9c>
  8039b8:	e0bffe17 	ldw	r2,-8(fp)
  8039bc:	10c00c17 	ldw	r3,48(r2)
  8039c0:	e0bffe17 	ldw	r2,-8(fp)
  8039c4:	10806b17 	ldw	r2,428(r2)
  8039c8:	100b883a 	mov	r5,r2
  8039cc:	1809883a 	mov	r4,r3
  8039d0:	08301e80 	call	8301e8 <__mulsi3>
  8039d4:	1021883a 	mov	r16,r2
  8039d8:	e0bffe17 	ldw	r2,-8(fp)
  8039dc:	10800d17 	ldw	r2,52(r2)
  8039e0:	01400344 	movi	r5,13
  8039e4:	1009883a 	mov	r4,r2
  8039e8:	08301e80 	call	8301e8 <__mulsi3>
  8039ec:	14002336 	bltu	r2,r16,803a7c <jpeg_core_output_dimensions+0x9a4>
  8039f0:	e0bffe17 	ldw	r2,-8(fp)
  8039f4:	10800717 	ldw	r2,28(r2)
  8039f8:	01400344 	movi	r5,13
  8039fc:	1009883a 	mov	r4,r2
  803a00:	08301e80 	call	8301e8 <__mulsi3>
  803a04:	1007883a 	mov	r3,r2
  803a08:	e0bffe17 	ldw	r2,-8(fp)
  803a0c:	10806b17 	ldw	r2,428(r2)
  803a10:	100b883a 	mov	r5,r2
  803a14:	1809883a 	mov	r4,r3
  803a18:	0813b8c0 	call	813b8c <jdiv_round_up>
  803a1c:	1007883a 	mov	r3,r2
  803a20:	e0bffe17 	ldw	r2,-8(fp)
  803a24:	10c01c15 	stw	r3,112(r2)
  803a28:	e0bffe17 	ldw	r2,-8(fp)
  803a2c:	10800817 	ldw	r2,32(r2)
  803a30:	01400344 	movi	r5,13
  803a34:	1009883a 	mov	r4,r2
  803a38:	08301e80 	call	8301e8 <__mulsi3>
  803a3c:	1007883a 	mov	r3,r2
  803a40:	e0bffe17 	ldw	r2,-8(fp)
  803a44:	10806b17 	ldw	r2,428(r2)
  803a48:	100b883a 	mov	r5,r2
  803a4c:	1809883a 	mov	r4,r3
  803a50:	0813b8c0 	call	813b8c <jdiv_round_up>
  803a54:	1007883a 	mov	r3,r2
  803a58:	e0bffe17 	ldw	r2,-8(fp)
  803a5c:	10c01d15 	stw	r3,116(r2)
  803a60:	e0bffe17 	ldw	r2,-8(fp)
  803a64:	00c00344 	movi	r3,13
  803a68:	10c05115 	stw	r3,324(r2)
  803a6c:	e0bffe17 	ldw	r2,-8(fp)
  803a70:	00c00344 	movi	r3,13
  803a74:	10c05215 	stw	r3,328(r2)
  803a78:	00007e06 	br	803c74 <jpeg_core_output_dimensions+0xb9c>
  803a7c:	e0bffe17 	ldw	r2,-8(fp)
  803a80:	10c00c17 	ldw	r3,48(r2)
  803a84:	e0bffe17 	ldw	r2,-8(fp)
  803a88:	10806b17 	ldw	r2,428(r2)
  803a8c:	100b883a 	mov	r5,r2
  803a90:	1809883a 	mov	r4,r3
  803a94:	08301e80 	call	8301e8 <__mulsi3>
  803a98:	1021883a 	mov	r16,r2
  803a9c:	e0bffe17 	ldw	r2,-8(fp)
  803aa0:	10800d17 	ldw	r2,52(r2)
  803aa4:	01400384 	movi	r5,14
  803aa8:	1009883a 	mov	r4,r2
  803aac:	08301e80 	call	8301e8 <__mulsi3>
  803ab0:	14002336 	bltu	r2,r16,803b40 <jpeg_core_output_dimensions+0xa68>
  803ab4:	e0bffe17 	ldw	r2,-8(fp)
  803ab8:	10800717 	ldw	r2,28(r2)
  803abc:	01400384 	movi	r5,14
  803ac0:	1009883a 	mov	r4,r2
  803ac4:	08301e80 	call	8301e8 <__mulsi3>
  803ac8:	1007883a 	mov	r3,r2
  803acc:	e0bffe17 	ldw	r2,-8(fp)
  803ad0:	10806b17 	ldw	r2,428(r2)
  803ad4:	100b883a 	mov	r5,r2
  803ad8:	1809883a 	mov	r4,r3
  803adc:	0813b8c0 	call	813b8c <jdiv_round_up>
  803ae0:	1007883a 	mov	r3,r2
  803ae4:	e0bffe17 	ldw	r2,-8(fp)
  803ae8:	10c01c15 	stw	r3,112(r2)
  803aec:	e0bffe17 	ldw	r2,-8(fp)
  803af0:	10800817 	ldw	r2,32(r2)
  803af4:	01400384 	movi	r5,14
  803af8:	1009883a 	mov	r4,r2
  803afc:	08301e80 	call	8301e8 <__mulsi3>
  803b00:	1007883a 	mov	r3,r2
  803b04:	e0bffe17 	ldw	r2,-8(fp)
  803b08:	10806b17 	ldw	r2,428(r2)
  803b0c:	100b883a 	mov	r5,r2
  803b10:	1809883a 	mov	r4,r3
  803b14:	0813b8c0 	call	813b8c <jdiv_round_up>
  803b18:	1007883a 	mov	r3,r2
  803b1c:	e0bffe17 	ldw	r2,-8(fp)
  803b20:	10c01d15 	stw	r3,116(r2)
  803b24:	e0bffe17 	ldw	r2,-8(fp)
  803b28:	00c00384 	movi	r3,14
  803b2c:	10c05115 	stw	r3,324(r2)
  803b30:	e0bffe17 	ldw	r2,-8(fp)
  803b34:	00c00384 	movi	r3,14
  803b38:	10c05215 	stw	r3,328(r2)
  803b3c:	00004d06 	br	803c74 <jpeg_core_output_dimensions+0xb9c>
  803b40:	e0bffe17 	ldw	r2,-8(fp)
  803b44:	10c00c17 	ldw	r3,48(r2)
  803b48:	e0bffe17 	ldw	r2,-8(fp)
  803b4c:	10806b17 	ldw	r2,428(r2)
  803b50:	100b883a 	mov	r5,r2
  803b54:	1809883a 	mov	r4,r3
  803b58:	08301e80 	call	8301e8 <__mulsi3>
  803b5c:	1021883a 	mov	r16,r2
  803b60:	e0bffe17 	ldw	r2,-8(fp)
  803b64:	10800d17 	ldw	r2,52(r2)
  803b68:	014003c4 	movi	r5,15
  803b6c:	1009883a 	mov	r4,r2
  803b70:	08301e80 	call	8301e8 <__mulsi3>
  803b74:	14002336 	bltu	r2,r16,803c04 <jpeg_core_output_dimensions+0xb2c>
  803b78:	e0bffe17 	ldw	r2,-8(fp)
  803b7c:	10800717 	ldw	r2,28(r2)
  803b80:	014003c4 	movi	r5,15
  803b84:	1009883a 	mov	r4,r2
  803b88:	08301e80 	call	8301e8 <__mulsi3>
  803b8c:	1007883a 	mov	r3,r2
  803b90:	e0bffe17 	ldw	r2,-8(fp)
  803b94:	10806b17 	ldw	r2,428(r2)
  803b98:	100b883a 	mov	r5,r2
  803b9c:	1809883a 	mov	r4,r3
  803ba0:	0813b8c0 	call	813b8c <jdiv_round_up>
  803ba4:	1007883a 	mov	r3,r2
  803ba8:	e0bffe17 	ldw	r2,-8(fp)
  803bac:	10c01c15 	stw	r3,112(r2)
  803bb0:	e0bffe17 	ldw	r2,-8(fp)
  803bb4:	10800817 	ldw	r2,32(r2)
  803bb8:	014003c4 	movi	r5,15
  803bbc:	1009883a 	mov	r4,r2
  803bc0:	08301e80 	call	8301e8 <__mulsi3>
  803bc4:	1007883a 	mov	r3,r2
  803bc8:	e0bffe17 	ldw	r2,-8(fp)
  803bcc:	10806b17 	ldw	r2,428(r2)
  803bd0:	100b883a 	mov	r5,r2
  803bd4:	1809883a 	mov	r4,r3
  803bd8:	0813b8c0 	call	813b8c <jdiv_round_up>
  803bdc:	1007883a 	mov	r3,r2
  803be0:	e0bffe17 	ldw	r2,-8(fp)
  803be4:	10c01d15 	stw	r3,116(r2)
  803be8:	e0bffe17 	ldw	r2,-8(fp)
  803bec:	00c003c4 	movi	r3,15
  803bf0:	10c05115 	stw	r3,324(r2)
  803bf4:	e0bffe17 	ldw	r2,-8(fp)
  803bf8:	00c003c4 	movi	r3,15
  803bfc:	10c05215 	stw	r3,328(r2)
  803c00:	00001c06 	br	803c74 <jpeg_core_output_dimensions+0xb9c>
  803c04:	e0bffe17 	ldw	r2,-8(fp)
  803c08:	10800717 	ldw	r2,28(r2)
  803c0c:	1006913a 	slli	r3,r2,4
  803c10:	e0bffe17 	ldw	r2,-8(fp)
  803c14:	10806b17 	ldw	r2,428(r2)
  803c18:	100b883a 	mov	r5,r2
  803c1c:	1809883a 	mov	r4,r3
  803c20:	0813b8c0 	call	813b8c <jdiv_round_up>
  803c24:	1007883a 	mov	r3,r2
  803c28:	e0bffe17 	ldw	r2,-8(fp)
  803c2c:	10c01c15 	stw	r3,112(r2)
  803c30:	e0bffe17 	ldw	r2,-8(fp)
  803c34:	10800817 	ldw	r2,32(r2)
  803c38:	1006913a 	slli	r3,r2,4
  803c3c:	e0bffe17 	ldw	r2,-8(fp)
  803c40:	10806b17 	ldw	r2,428(r2)
  803c44:	100b883a 	mov	r5,r2
  803c48:	1809883a 	mov	r4,r3
  803c4c:	0813b8c0 	call	813b8c <jdiv_round_up>
  803c50:	1007883a 	mov	r3,r2
  803c54:	e0bffe17 	ldw	r2,-8(fp)
  803c58:	10c01d15 	stw	r3,116(r2)
  803c5c:	e0bffe17 	ldw	r2,-8(fp)
  803c60:	00c00404 	movi	r3,16
  803c64:	10c05115 	stw	r3,324(r2)
  803c68:	e0bffe17 	ldw	r2,-8(fp)
  803c6c:	00c00404 	movi	r3,16
  803c70:	10c05215 	stw	r3,328(r2)
  803c74:	e03ffc15 	stw	zero,-16(fp)
  803c78:	e0bffe17 	ldw	r2,-8(fp)
  803c7c:	10803617 	ldw	r2,216(r2)
  803c80:	e0bffd15 	stw	r2,-12(fp)
  803c84:	00000e06 	br	803cc0 <jpeg_core_output_dimensions+0xbe8>
  803c88:	e0bffe17 	ldw	r2,-8(fp)
  803c8c:	10c05117 	ldw	r3,324(r2)
  803c90:	e0bffd17 	ldw	r2,-12(fp)
  803c94:	10c00915 	stw	r3,36(r2)
  803c98:	e0bffe17 	ldw	r2,-8(fp)
  803c9c:	10c05217 	ldw	r3,328(r2)
  803ca0:	e0bffd17 	ldw	r2,-12(fp)
  803ca4:	10c00a15 	stw	r3,40(r2)
  803ca8:	e0bffc17 	ldw	r2,-16(fp)
  803cac:	10800044 	addi	r2,r2,1
  803cb0:	e0bffc15 	stw	r2,-16(fp)
  803cb4:	e0bffd17 	ldw	r2,-12(fp)
  803cb8:	10801604 	addi	r2,r2,88
  803cbc:	e0bffd15 	stw	r2,-12(fp)
  803cc0:	e0bffe17 	ldw	r2,-8(fp)
  803cc4:	10800917 	ldw	r2,36(r2)
  803cc8:	e0fffc17 	ldw	r3,-16(fp)
  803ccc:	18bfee16 	blt	r3,r2,803c88 <__alt_mem_epcs_flash_controller_0+0xff7fac88>
  803cd0:	0001883a 	nop
  803cd4:	e6ffff04 	addi	sp,fp,-4
  803cd8:	dfc00217 	ldw	ra,8(sp)
  803cdc:	df000117 	ldw	fp,4(sp)
  803ce0:	dc000017 	ldw	r16,0(sp)
  803ce4:	dec00304 	addi	sp,sp,12
  803ce8:	f800283a 	ret

00803cec <initial_setup>:
  803cec:	defffa04 	addi	sp,sp,-24
  803cf0:	dfc00515 	stw	ra,20(sp)
  803cf4:	df000415 	stw	fp,16(sp)
  803cf8:	dc000315 	stw	r16,12(sp)
  803cfc:	df000404 	addi	fp,sp,16
  803d00:	e13ffe15 	stw	r4,-8(fp)
  803d04:	e0bffe17 	ldw	r2,-8(fp)
  803d08:	10800817 	ldw	r2,32(r2)
  803d0c:	1007883a 	mov	r3,r2
  803d10:	00bff714 	movui	r2,65500
  803d14:	10c00516 	blt	r2,r3,803d2c <initial_setup+0x40>
  803d18:	e0bffe17 	ldw	r2,-8(fp)
  803d1c:	10800717 	ldw	r2,28(r2)
  803d20:	1007883a 	mov	r3,r2
  803d24:	00bff714 	movui	r2,65500
  803d28:	10c00d0e 	bge	r2,r3,803d60 <initial_setup+0x74>
  803d2c:	e0bffe17 	ldw	r2,-8(fp)
  803d30:	10800017 	ldw	r2,0(r2)
  803d34:	00c00a84 	movi	r3,42
  803d38:	10c00515 	stw	r3,20(r2)
  803d3c:	e0bffe17 	ldw	r2,-8(fp)
  803d40:	10800017 	ldw	r2,0(r2)
  803d44:	00fff714 	movui	r3,65500
  803d48:	10c00615 	stw	r3,24(r2)
  803d4c:	e0bffe17 	ldw	r2,-8(fp)
  803d50:	10800017 	ldw	r2,0(r2)
  803d54:	10800017 	ldw	r2,0(r2)
  803d58:	e13ffe17 	ldw	r4,-8(fp)
  803d5c:	103ee83a 	callr	r2
  803d60:	e0bffe17 	ldw	r2,-8(fp)
  803d64:	10803517 	ldw	r2,212(r2)
  803d68:	10800210 	cmplti	r2,r2,8
  803d6c:	1000041e 	bne	r2,zero,803d80 <initial_setup+0x94>
  803d70:	e0bffe17 	ldw	r2,-8(fp)
  803d74:	10803517 	ldw	r2,212(r2)
  803d78:	10800350 	cmplti	r2,r2,13
  803d7c:	10000e1e 	bne	r2,zero,803db8 <initial_setup+0xcc>
  803d80:	e0bffe17 	ldw	r2,-8(fp)
  803d84:	10800017 	ldw	r2,0(r2)
  803d88:	00c00404 	movi	r3,16
  803d8c:	10c00515 	stw	r3,20(r2)
  803d90:	e0bffe17 	ldw	r2,-8(fp)
  803d94:	10800017 	ldw	r2,0(r2)
  803d98:	e0fffe17 	ldw	r3,-8(fp)
  803d9c:	18c03517 	ldw	r3,212(r3)
  803da0:	10c00615 	stw	r3,24(r2)
  803da4:	e0bffe17 	ldw	r2,-8(fp)
  803da8:	10800017 	ldw	r2,0(r2)
  803dac:	10800017 	ldw	r2,0(r2)
  803db0:	e13ffe17 	ldw	r4,-8(fp)
  803db4:	103ee83a 	callr	r2
  803db8:	e0bffe17 	ldw	r2,-8(fp)
  803dbc:	10800917 	ldw	r2,36(r2)
  803dc0:	108002d0 	cmplti	r2,r2,11
  803dc4:	1000121e 	bne	r2,zero,803e10 <initial_setup+0x124>
  803dc8:	e0bffe17 	ldw	r2,-8(fp)
  803dcc:	10800017 	ldw	r2,0(r2)
  803dd0:	00c006c4 	movi	r3,27
  803dd4:	10c00515 	stw	r3,20(r2)
  803dd8:	e0bffe17 	ldw	r2,-8(fp)
  803ddc:	10800017 	ldw	r2,0(r2)
  803de0:	e0fffe17 	ldw	r3,-8(fp)
  803de4:	18c00917 	ldw	r3,36(r3)
  803de8:	10c00615 	stw	r3,24(r2)
  803dec:	e0bffe17 	ldw	r2,-8(fp)
  803df0:	10800017 	ldw	r2,0(r2)
  803df4:	00c00284 	movi	r3,10
  803df8:	10c00715 	stw	r3,28(r2)
  803dfc:	e0bffe17 	ldw	r2,-8(fp)
  803e00:	10800017 	ldw	r2,0(r2)
  803e04:	10800017 	ldw	r2,0(r2)
  803e08:	e13ffe17 	ldw	r4,-8(fp)
  803e0c:	103ee83a 	callr	r2
  803e10:	e0bffe17 	ldw	r2,-8(fp)
  803e14:	00c00044 	movi	r3,1
  803e18:	10c04f15 	stw	r3,316(r2)
  803e1c:	e0bffe17 	ldw	r2,-8(fp)
  803e20:	00c00044 	movi	r3,1
  803e24:	10c05015 	stw	r3,320(r2)
  803e28:	e03ffc15 	stw	zero,-16(fp)
  803e2c:	e0bffe17 	ldw	r2,-8(fp)
  803e30:	10803617 	ldw	r2,216(r2)
  803e34:	e0bffd15 	stw	r2,-12(fp)
  803e38:	00002f06 	br	803ef8 <initial_setup+0x20c>
  803e3c:	e0bffd17 	ldw	r2,-12(fp)
  803e40:	10800217 	ldw	r2,8(r2)
  803e44:	00800b0e 	bge	zero,r2,803e74 <initial_setup+0x188>
  803e48:	e0bffd17 	ldw	r2,-12(fp)
  803e4c:	10800217 	ldw	r2,8(r2)
  803e50:	10800148 	cmpgei	r2,r2,5
  803e54:	1000071e 	bne	r2,zero,803e74 <initial_setup+0x188>
  803e58:	e0bffd17 	ldw	r2,-12(fp)
  803e5c:	10800317 	ldw	r2,12(r2)
  803e60:	0080040e 	bge	zero,r2,803e74 <initial_setup+0x188>
  803e64:	e0bffd17 	ldw	r2,-12(fp)
  803e68:	10800317 	ldw	r2,12(r2)
  803e6c:	10800150 	cmplti	r2,r2,5
  803e70:	1000091e 	bne	r2,zero,803e98 <initial_setup+0x1ac>
  803e74:	e0bffe17 	ldw	r2,-8(fp)
  803e78:	10800017 	ldw	r2,0(r2)
  803e7c:	00c004c4 	movi	r3,19
  803e80:	10c00515 	stw	r3,20(r2)
  803e84:	e0bffe17 	ldw	r2,-8(fp)
  803e88:	10800017 	ldw	r2,0(r2)
  803e8c:	10800017 	ldw	r2,0(r2)
  803e90:	e13ffe17 	ldw	r4,-8(fp)
  803e94:	103ee83a 	callr	r2
  803e98:	e0bffd17 	ldw	r2,-12(fp)
  803e9c:	11000217 	ldw	r4,8(r2)
  803ea0:	e0bffe17 	ldw	r2,-8(fp)
  803ea4:	10c04f17 	ldw	r3,316(r2)
  803ea8:	2005883a 	mov	r2,r4
  803eac:	10c0010e 	bge	r2,r3,803eb4 <initial_setup+0x1c8>
  803eb0:	1805883a 	mov	r2,r3
  803eb4:	e0fffe17 	ldw	r3,-8(fp)
  803eb8:	18804f15 	stw	r2,316(r3)
  803ebc:	e0bffd17 	ldw	r2,-12(fp)
  803ec0:	11000317 	ldw	r4,12(r2)
  803ec4:	e0bffe17 	ldw	r2,-8(fp)
  803ec8:	10c05017 	ldw	r3,320(r2)
  803ecc:	2005883a 	mov	r2,r4
  803ed0:	10c0010e 	bge	r2,r3,803ed8 <initial_setup+0x1ec>
  803ed4:	1805883a 	mov	r2,r3
  803ed8:	e0fffe17 	ldw	r3,-8(fp)
  803edc:	18805015 	stw	r2,320(r3)
  803ee0:	e0bffc17 	ldw	r2,-16(fp)
  803ee4:	10800044 	addi	r2,r2,1
  803ee8:	e0bffc15 	stw	r2,-16(fp)
  803eec:	e0bffd17 	ldw	r2,-12(fp)
  803ef0:	10801604 	addi	r2,r2,88
  803ef4:	e0bffd15 	stw	r2,-12(fp)
  803ef8:	e0bffe17 	ldw	r2,-8(fp)
  803efc:	10800917 	ldw	r2,36(r2)
  803f00:	e0fffc17 	ldw	r3,-16(fp)
  803f04:	18bfcd16 	blt	r3,r2,803e3c <__alt_mem_epcs_flash_controller_0+0xff7fae3c>
  803f08:	e0bffe17 	ldw	r2,-8(fp)
  803f0c:	10803717 	ldw	r2,220(r2)
  803f10:	1000061e 	bne	r2,zero,803f2c <initial_setup+0x240>
  803f14:	e0bffe17 	ldw	r2,-8(fp)
  803f18:	10803817 	ldw	r2,224(r2)
  803f1c:	10000e26 	beq	r2,zero,803f58 <initial_setup+0x26c>
  803f20:	e0bffe17 	ldw	r2,-8(fp)
  803f24:	10805517 	ldw	r2,340(r2)
  803f28:	10000b26 	beq	r2,zero,803f58 <initial_setup+0x26c>
  803f2c:	e0bffe17 	ldw	r2,-8(fp)
  803f30:	00c00204 	movi	r3,8
  803f34:	10c06b15 	stw	r3,428(r2)
  803f38:	e0fffe17 	ldw	r3,-8(fp)
  803f3c:	008021b4 	movhi	r2,134
  803f40:	10a2fb04 	addi	r2,r2,-29716
  803f44:	18806c15 	stw	r2,432(r3)
  803f48:	e0bffe17 	ldw	r2,-8(fp)
  803f4c:	00c00fc4 	movi	r3,63
  803f50:	10c06d15 	stw	r3,436(r2)
  803f54:	00010306 	br	804364 <initial_setup+0x678>
  803f58:	e0bffe17 	ldw	r2,-8(fp)
  803f5c:	10806817 	ldw	r2,416(r2)
  803f60:	10c00fe0 	cmpeqi	r3,r2,63
  803f64:	18007e1e 	bne	r3,zero,804160 <initial_setup+0x474>
  803f68:	10c01008 	cmpgei	r3,r2,64
  803f6c:	1800111e 	bne	r3,zero,803fb4 <initial_setup+0x2c8>
  803f70:	10c003e0 	cmpeqi	r3,r2,15
  803f74:	18004a1e 	bne	r3,zero,8040a0 <initial_setup+0x3b4>
  803f78:	10c00408 	cmpgei	r3,r2,16
  803f7c:	1800061e 	bne	r3,zero,803f98 <initial_setup+0x2ac>
  803f80:	10c000e0 	cmpeqi	r3,r2,3
  803f84:	18002e1e 	bne	r3,zero,804040 <initial_setup+0x354>
  803f88:	10c00220 	cmpeqi	r3,r2,8
  803f8c:	1800381e 	bne	r3,zero,804070 <initial_setup+0x384>
  803f90:	10001f26 	beq	r2,zero,804010 <initial_setup+0x324>
  803f94:	0000d506 	br	8042ec <initial_setup+0x600>
  803f98:	10c008e0 	cmpeqi	r3,r2,35
  803f9c:	1800581e 	bne	r3,zero,804100 <initial_setup+0x414>
  803fa0:	10c00c20 	cmpeqi	r3,r2,48
  803fa4:	1800621e 	bne	r3,zero,804130 <initial_setup+0x444>
  803fa8:	10800620 	cmpeqi	r2,r2,24
  803fac:	1000481e 	bne	r2,zero,8040d0 <initial_setup+0x3e4>
  803fb0:	0000ce06 	br	8042ec <initial_setup+0x600>
  803fb4:	10c023e0 	cmpeqi	r3,r2,143
  803fb8:	1800951e 	bne	r3,zero,804210 <initial_setup+0x524>
  803fbc:	10c02408 	cmpgei	r3,r2,144
  803fc0:	1800071e 	bne	r3,zero,803fe0 <initial_setup+0x2f4>
  803fc4:	10c018e0 	cmpeqi	r3,r2,99
  803fc8:	18007b1e 	bne	r3,zero,8041b8 <initial_setup+0x4cc>
  803fcc:	10c01e20 	cmpeqi	r3,r2,120
  803fd0:	1800841e 	bne	r3,zero,8041e4 <initial_setup+0x4f8>
  803fd4:	10801420 	cmpeqi	r2,r2,80
  803fd8:	10006c1e 	bne	r2,zero,80418c <initial_setup+0x4a0>
  803fdc:	0000c306 	br	8042ec <initial_setup+0x600>
  803fe0:	10c030e0 	cmpeqi	r3,r2,195
  803fe4:	1800a01e 	bne	r3,zero,804268 <initial_setup+0x57c>
  803fe8:	10c03108 	cmpgei	r3,r2,196
  803fec:	1800031e 	bne	r3,zero,803ffc <initial_setup+0x310>
  803ff0:	10802a20 	cmpeqi	r2,r2,168
  803ff4:	1000911e 	bne	r2,zero,80423c <initial_setup+0x550>
  803ff8:	0000bc06 	br	8042ec <initial_setup+0x600>
  803ffc:	10c03820 	cmpeqi	r3,r2,224
  804000:	1800a41e 	bne	r3,zero,804294 <initial_setup+0x5a8>
  804004:	10803fe0 	cmpeqi	r2,r2,255
  804008:	1000ad1e 	bne	r2,zero,8042c0 <initial_setup+0x5d4>
  80400c:	0000b706 	br	8042ec <initial_setup+0x600>
  804010:	e0bffe17 	ldw	r2,-8(fp)
  804014:	00c00044 	movi	r3,1
  804018:	10c06b15 	stw	r3,428(r2)
  80401c:	e0fffe17 	ldw	r3,-8(fp)
  804020:	008021b4 	movhi	r2,134
  804024:	10a2fb04 	addi	r2,r2,-29716
  804028:	18806c15 	stw	r2,432(r3)
  80402c:	e0bffe17 	ldw	r2,-8(fp)
  804030:	10c06817 	ldw	r3,416(r2)
  804034:	e0bffe17 	ldw	r2,-8(fp)
  804038:	10c06d15 	stw	r3,436(r2)
  80403c:	0000c906 	br	804364 <initial_setup+0x678>
  804040:	e0bffe17 	ldw	r2,-8(fp)
  804044:	00c00084 	movi	r3,2
  804048:	10c06b15 	stw	r3,428(r2)
  80404c:	e0fffe17 	ldw	r3,-8(fp)
  804050:	008021b4 	movhi	r2,134
  804054:	10a42204 	addi	r2,r2,-28536
  804058:	18806c15 	stw	r2,432(r3)
  80405c:	e0bffe17 	ldw	r2,-8(fp)
  804060:	10c06817 	ldw	r3,416(r2)
  804064:	e0bffe17 	ldw	r2,-8(fp)
  804068:	10c06d15 	stw	r3,436(r2)
  80406c:	0000bd06 	br	804364 <initial_setup+0x678>
  804070:	e0bffe17 	ldw	r2,-8(fp)
  804074:	00c000c4 	movi	r3,3
  804078:	10c06b15 	stw	r3,428(r2)
  80407c:	e0fffe17 	ldw	r3,-8(fp)
  804080:	008021b4 	movhi	r2,134
  804084:	10a40904 	addi	r2,r2,-28636
  804088:	18806c15 	stw	r2,432(r3)
  80408c:	e0bffe17 	ldw	r2,-8(fp)
  804090:	10c06817 	ldw	r3,416(r2)
  804094:	e0bffe17 	ldw	r2,-8(fp)
  804098:	10c06d15 	stw	r3,436(r2)
  80409c:	0000b106 	br	804364 <initial_setup+0x678>
  8040a0:	e0bffe17 	ldw	r2,-8(fp)
  8040a4:	00c00104 	movi	r3,4
  8040a8:	10c06b15 	stw	r3,428(r2)
  8040ac:	e0fffe17 	ldw	r3,-8(fp)
  8040b0:	008021b4 	movhi	r2,134
  8040b4:	10a3e904 	addi	r2,r2,-28764
  8040b8:	18806c15 	stw	r2,432(r3)
  8040bc:	e0bffe17 	ldw	r2,-8(fp)
  8040c0:	10c06817 	ldw	r3,416(r2)
  8040c4:	e0bffe17 	ldw	r2,-8(fp)
  8040c8:	10c06d15 	stw	r3,436(r2)
  8040cc:	0000a506 	br	804364 <initial_setup+0x678>
  8040d0:	e0bffe17 	ldw	r2,-8(fp)
  8040d4:	00c00144 	movi	r3,5
  8040d8:	10c06b15 	stw	r3,428(r2)
  8040dc:	e0fffe17 	ldw	r3,-8(fp)
  8040e0:	008021b4 	movhi	r2,134
  8040e4:	10a3c004 	addi	r2,r2,-28928
  8040e8:	18806c15 	stw	r2,432(r3)
  8040ec:	e0bffe17 	ldw	r2,-8(fp)
  8040f0:	10c06817 	ldw	r3,416(r2)
  8040f4:	e0bffe17 	ldw	r2,-8(fp)
  8040f8:	10c06d15 	stw	r3,436(r2)
  8040fc:	00009906 	br	804364 <initial_setup+0x678>
  804100:	e0bffe17 	ldw	r2,-8(fp)
  804104:	00c00184 	movi	r3,6
  804108:	10c06b15 	stw	r3,428(r2)
  80410c:	e0fffe17 	ldw	r3,-8(fp)
  804110:	008021b4 	movhi	r2,134
  804114:	10a38c04 	addi	r2,r2,-29136
  804118:	18806c15 	stw	r2,432(r3)
  80411c:	e0bffe17 	ldw	r2,-8(fp)
  804120:	10c06817 	ldw	r3,416(r2)
  804124:	e0bffe17 	ldw	r2,-8(fp)
  804128:	10c06d15 	stw	r3,436(r2)
  80412c:	00008d06 	br	804364 <initial_setup+0x678>
  804130:	e0bffe17 	ldw	r2,-8(fp)
  804134:	00c001c4 	movi	r3,7
  804138:	10c06b15 	stw	r3,428(r2)
  80413c:	e0fffe17 	ldw	r3,-8(fp)
  804140:	008021b4 	movhi	r2,134
  804144:	10a34b04 	addi	r2,r2,-29396
  804148:	18806c15 	stw	r2,432(r3)
  80414c:	e0bffe17 	ldw	r2,-8(fp)
  804150:	10c06817 	ldw	r3,416(r2)
  804154:	e0bffe17 	ldw	r2,-8(fp)
  804158:	10c06d15 	stw	r3,436(r2)
  80415c:	00008106 	br	804364 <initial_setup+0x678>
  804160:	e0bffe17 	ldw	r2,-8(fp)
  804164:	00c00204 	movi	r3,8
  804168:	10c06b15 	stw	r3,428(r2)
  80416c:	e0fffe17 	ldw	r3,-8(fp)
  804170:	008021b4 	movhi	r2,134
  804174:	10a2fb04 	addi	r2,r2,-29716
  804178:	18806c15 	stw	r2,432(r3)
  80417c:	e0bffe17 	ldw	r2,-8(fp)
  804180:	00c00fc4 	movi	r3,63
  804184:	10c06d15 	stw	r3,436(r2)
  804188:	00007606 	br	804364 <initial_setup+0x678>
  80418c:	e0bffe17 	ldw	r2,-8(fp)
  804190:	00c00244 	movi	r3,9
  804194:	10c06b15 	stw	r3,428(r2)
  804198:	e0fffe17 	ldw	r3,-8(fp)
  80419c:	008021b4 	movhi	r2,134
  8041a0:	10a2fb04 	addi	r2,r2,-29716
  8041a4:	18806c15 	stw	r2,432(r3)
  8041a8:	e0bffe17 	ldw	r2,-8(fp)
  8041ac:	00c00fc4 	movi	r3,63
  8041b0:	10c06d15 	stw	r3,436(r2)
  8041b4:	00006b06 	br	804364 <initial_setup+0x678>
  8041b8:	e0bffe17 	ldw	r2,-8(fp)
  8041bc:	00c00284 	movi	r3,10
  8041c0:	10c06b15 	stw	r3,428(r2)
  8041c4:	e0fffe17 	ldw	r3,-8(fp)
  8041c8:	008021b4 	movhi	r2,134
  8041cc:	10a2fb04 	addi	r2,r2,-29716
  8041d0:	18806c15 	stw	r2,432(r3)
  8041d4:	e0bffe17 	ldw	r2,-8(fp)
  8041d8:	00c00fc4 	movi	r3,63
  8041dc:	10c06d15 	stw	r3,436(r2)
  8041e0:	00006006 	br	804364 <initial_setup+0x678>
  8041e4:	e0bffe17 	ldw	r2,-8(fp)
  8041e8:	00c002c4 	movi	r3,11
  8041ec:	10c06b15 	stw	r3,428(r2)
  8041f0:	e0fffe17 	ldw	r3,-8(fp)
  8041f4:	008021b4 	movhi	r2,134
  8041f8:	10a2fb04 	addi	r2,r2,-29716
  8041fc:	18806c15 	stw	r2,432(r3)
  804200:	e0bffe17 	ldw	r2,-8(fp)
  804204:	00c00fc4 	movi	r3,63
  804208:	10c06d15 	stw	r3,436(r2)
  80420c:	00005506 	br	804364 <initial_setup+0x678>
  804210:	e0bffe17 	ldw	r2,-8(fp)
  804214:	00c00304 	movi	r3,12
  804218:	10c06b15 	stw	r3,428(r2)
  80421c:	e0fffe17 	ldw	r3,-8(fp)
  804220:	008021b4 	movhi	r2,134
  804224:	10a2fb04 	addi	r2,r2,-29716
  804228:	18806c15 	stw	r2,432(r3)
  80422c:	e0bffe17 	ldw	r2,-8(fp)
  804230:	00c00fc4 	movi	r3,63
  804234:	10c06d15 	stw	r3,436(r2)
  804238:	00004a06 	br	804364 <initial_setup+0x678>
  80423c:	e0bffe17 	ldw	r2,-8(fp)
  804240:	00c00344 	movi	r3,13
  804244:	10c06b15 	stw	r3,428(r2)
  804248:	e0fffe17 	ldw	r3,-8(fp)
  80424c:	008021b4 	movhi	r2,134
  804250:	10a2fb04 	addi	r2,r2,-29716
  804254:	18806c15 	stw	r2,432(r3)
  804258:	e0bffe17 	ldw	r2,-8(fp)
  80425c:	00c00fc4 	movi	r3,63
  804260:	10c06d15 	stw	r3,436(r2)
  804264:	00003f06 	br	804364 <initial_setup+0x678>
  804268:	e0bffe17 	ldw	r2,-8(fp)
  80426c:	00c00384 	movi	r3,14
  804270:	10c06b15 	stw	r3,428(r2)
  804274:	e0fffe17 	ldw	r3,-8(fp)
  804278:	008021b4 	movhi	r2,134
  80427c:	10a2fb04 	addi	r2,r2,-29716
  804280:	18806c15 	stw	r2,432(r3)
  804284:	e0bffe17 	ldw	r2,-8(fp)
  804288:	00c00fc4 	movi	r3,63
  80428c:	10c06d15 	stw	r3,436(r2)
  804290:	00003406 	br	804364 <initial_setup+0x678>
  804294:	e0bffe17 	ldw	r2,-8(fp)
  804298:	00c003c4 	movi	r3,15
  80429c:	10c06b15 	stw	r3,428(r2)
  8042a0:	e0fffe17 	ldw	r3,-8(fp)
  8042a4:	008021b4 	movhi	r2,134
  8042a8:	10a2fb04 	addi	r2,r2,-29716
  8042ac:	18806c15 	stw	r2,432(r3)
  8042b0:	e0bffe17 	ldw	r2,-8(fp)
  8042b4:	00c00fc4 	movi	r3,63
  8042b8:	10c06d15 	stw	r3,436(r2)
  8042bc:	00002906 	br	804364 <initial_setup+0x678>
  8042c0:	e0bffe17 	ldw	r2,-8(fp)
  8042c4:	00c00404 	movi	r3,16
  8042c8:	10c06b15 	stw	r3,428(r2)
  8042cc:	e0fffe17 	ldw	r3,-8(fp)
  8042d0:	008021b4 	movhi	r2,134
  8042d4:	10a2fb04 	addi	r2,r2,-29716
  8042d8:	18806c15 	stw	r2,432(r3)
  8042dc:	e0bffe17 	ldw	r2,-8(fp)
  8042e0:	00c00fc4 	movi	r3,63
  8042e4:	10c06d15 	stw	r3,436(r2)
  8042e8:	00001e06 	br	804364 <initial_setup+0x678>
  8042ec:	e0bffe17 	ldw	r2,-8(fp)
  8042f0:	10800017 	ldw	r2,0(r2)
  8042f4:	00c00444 	movi	r3,17
  8042f8:	10c00515 	stw	r3,20(r2)
  8042fc:	e0bffe17 	ldw	r2,-8(fp)
  804300:	10800017 	ldw	r2,0(r2)
  804304:	e0fffe17 	ldw	r3,-8(fp)
  804308:	18c06717 	ldw	r3,412(r3)
  80430c:	10c00615 	stw	r3,24(r2)
  804310:	e0bffe17 	ldw	r2,-8(fp)
  804314:	10800017 	ldw	r2,0(r2)
  804318:	e0fffe17 	ldw	r3,-8(fp)
  80431c:	18c06817 	ldw	r3,416(r3)
  804320:	10c00715 	stw	r3,28(r2)
  804324:	e0bffe17 	ldw	r2,-8(fp)
  804328:	10800017 	ldw	r2,0(r2)
  80432c:	e0fffe17 	ldw	r3,-8(fp)
  804330:	18c06917 	ldw	r3,420(r3)
  804334:	10c00815 	stw	r3,32(r2)
  804338:	e0bffe17 	ldw	r2,-8(fp)
  80433c:	10800017 	ldw	r2,0(r2)
  804340:	e0fffe17 	ldw	r3,-8(fp)
  804344:	18c06a17 	ldw	r3,424(r3)
  804348:	10c00915 	stw	r3,36(r2)
  80434c:	e0bffe17 	ldw	r2,-8(fp)
  804350:	10800017 	ldw	r2,0(r2)
  804354:	10800017 	ldw	r2,0(r2)
  804358:	e13ffe17 	ldw	r4,-8(fp)
  80435c:	103ee83a 	callr	r2
  804360:	0001883a 	nop
  804364:	e0bffe17 	ldw	r2,-8(fp)
  804368:	10c06b17 	ldw	r3,428(r2)
  80436c:	e0bffe17 	ldw	r2,-8(fp)
  804370:	10c05115 	stw	r3,324(r2)
  804374:	e0bffe17 	ldw	r2,-8(fp)
  804378:	10c06b17 	ldw	r3,428(r2)
  80437c:	e0bffe17 	ldw	r2,-8(fp)
  804380:	10c05215 	stw	r3,328(r2)
  804384:	e03ffc15 	stw	zero,-16(fp)
  804388:	e0bffe17 	ldw	r2,-8(fp)
  80438c:	10803617 	ldw	r2,216(r2)
  804390:	e0bffd15 	stw	r2,-12(fp)
  804394:	00006106 	br	80451c <initial_setup+0x830>
  804398:	e0bffe17 	ldw	r2,-8(fp)
  80439c:	10c06b17 	ldw	r3,428(r2)
  8043a0:	e0bffd17 	ldw	r2,-12(fp)
  8043a4:	10c00915 	stw	r3,36(r2)
  8043a8:	e0bffe17 	ldw	r2,-8(fp)
  8043ac:	10c06b17 	ldw	r3,428(r2)
  8043b0:	e0bffd17 	ldw	r2,-12(fp)
  8043b4:	10c00a15 	stw	r3,40(r2)
  8043b8:	e0bffe17 	ldw	r2,-8(fp)
  8043bc:	10800717 	ldw	r2,28(r2)
  8043c0:	1007883a 	mov	r3,r2
  8043c4:	e0bffd17 	ldw	r2,-12(fp)
  8043c8:	10800217 	ldw	r2,8(r2)
  8043cc:	100b883a 	mov	r5,r2
  8043d0:	1809883a 	mov	r4,r3
  8043d4:	08301e80 	call	8301e8 <__mulsi3>
  8043d8:	1021883a 	mov	r16,r2
  8043dc:	e0bffe17 	ldw	r2,-8(fp)
  8043e0:	10c04f17 	ldw	r3,316(r2)
  8043e4:	e0bffe17 	ldw	r2,-8(fp)
  8043e8:	10806b17 	ldw	r2,428(r2)
  8043ec:	100b883a 	mov	r5,r2
  8043f0:	1809883a 	mov	r4,r3
  8043f4:	08301e80 	call	8301e8 <__mulsi3>
  8043f8:	100b883a 	mov	r5,r2
  8043fc:	8009883a 	mov	r4,r16
  804400:	0813b8c0 	call	813b8c <jdiv_round_up>
  804404:	1007883a 	mov	r3,r2
  804408:	e0bffd17 	ldw	r2,-12(fp)
  80440c:	10c00715 	stw	r3,28(r2)
  804410:	e0bffe17 	ldw	r2,-8(fp)
  804414:	10800817 	ldw	r2,32(r2)
  804418:	1007883a 	mov	r3,r2
  80441c:	e0bffd17 	ldw	r2,-12(fp)
  804420:	10800317 	ldw	r2,12(r2)
  804424:	100b883a 	mov	r5,r2
  804428:	1809883a 	mov	r4,r3
  80442c:	08301e80 	call	8301e8 <__mulsi3>
  804430:	1021883a 	mov	r16,r2
  804434:	e0bffe17 	ldw	r2,-8(fp)
  804438:	10c05017 	ldw	r3,320(r2)
  80443c:	e0bffe17 	ldw	r2,-8(fp)
  804440:	10806b17 	ldw	r2,428(r2)
  804444:	100b883a 	mov	r5,r2
  804448:	1809883a 	mov	r4,r3
  80444c:	08301e80 	call	8301e8 <__mulsi3>
  804450:	100b883a 	mov	r5,r2
  804454:	8009883a 	mov	r4,r16
  804458:	0813b8c0 	call	813b8c <jdiv_round_up>
  80445c:	1007883a 	mov	r3,r2
  804460:	e0bffd17 	ldw	r2,-12(fp)
  804464:	10c00815 	stw	r3,32(r2)
  804468:	e0bffe17 	ldw	r2,-8(fp)
  80446c:	10800717 	ldw	r2,28(r2)
  804470:	1007883a 	mov	r3,r2
  804474:	e0bffd17 	ldw	r2,-12(fp)
  804478:	10800217 	ldw	r2,8(r2)
  80447c:	100b883a 	mov	r5,r2
  804480:	1809883a 	mov	r4,r3
  804484:	08301e80 	call	8301e8 <__mulsi3>
  804488:	1007883a 	mov	r3,r2
  80448c:	e0bffe17 	ldw	r2,-8(fp)
  804490:	10804f17 	ldw	r2,316(r2)
  804494:	100b883a 	mov	r5,r2
  804498:	1809883a 	mov	r4,r3
  80449c:	0813b8c0 	call	813b8c <jdiv_round_up>
  8044a0:	1007883a 	mov	r3,r2
  8044a4:	e0bffd17 	ldw	r2,-12(fp)
  8044a8:	10c00b15 	stw	r3,44(r2)
  8044ac:	e0bffe17 	ldw	r2,-8(fp)
  8044b0:	10800817 	ldw	r2,32(r2)
  8044b4:	1007883a 	mov	r3,r2
  8044b8:	e0bffd17 	ldw	r2,-12(fp)
  8044bc:	10800317 	ldw	r2,12(r2)
  8044c0:	100b883a 	mov	r5,r2
  8044c4:	1809883a 	mov	r4,r3
  8044c8:	08301e80 	call	8301e8 <__mulsi3>
  8044cc:	1007883a 	mov	r3,r2
  8044d0:	e0bffe17 	ldw	r2,-8(fp)
  8044d4:	10805017 	ldw	r2,320(r2)
  8044d8:	100b883a 	mov	r5,r2
  8044dc:	1809883a 	mov	r4,r3
  8044e0:	0813b8c0 	call	813b8c <jdiv_round_up>
  8044e4:	1007883a 	mov	r3,r2
  8044e8:	e0bffd17 	ldw	r2,-12(fp)
  8044ec:	10c00c15 	stw	r3,48(r2)
  8044f0:	e0bffd17 	ldw	r2,-12(fp)
  8044f4:	00c00044 	movi	r3,1
  8044f8:	10c00d15 	stw	r3,52(r2)
  8044fc:	e0bffd17 	ldw	r2,-12(fp)
  804500:	10001415 	stw	zero,80(r2)
  804504:	e0bffc17 	ldw	r2,-16(fp)
  804508:	10800044 	addi	r2,r2,1
  80450c:	e0bffc15 	stw	r2,-16(fp)
  804510:	e0bffd17 	ldw	r2,-12(fp)
  804514:	10801604 	addi	r2,r2,88
  804518:	e0bffd15 	stw	r2,-12(fp)
  80451c:	e0bffe17 	ldw	r2,-8(fp)
  804520:	10800917 	ldw	r2,36(r2)
  804524:	e0fffc17 	ldw	r3,-16(fp)
  804528:	18bf9b16 	blt	r3,r2,804398 <__alt_mem_epcs_flash_controller_0+0xff7fb398>
  80452c:	e0bffe17 	ldw	r2,-8(fp)
  804530:	10800817 	ldw	r2,32(r2)
  804534:	1021883a 	mov	r16,r2
  804538:	e0bffe17 	ldw	r2,-8(fp)
  80453c:	10c05017 	ldw	r3,320(r2)
  804540:	e0bffe17 	ldw	r2,-8(fp)
  804544:	10806b17 	ldw	r2,428(r2)
  804548:	100b883a 	mov	r5,r2
  80454c:	1809883a 	mov	r4,r3
  804550:	08301e80 	call	8301e8 <__mulsi3>
  804554:	100b883a 	mov	r5,r2
  804558:	8009883a 	mov	r4,r16
  80455c:	0813b8c0 	call	813b8c <jdiv_round_up>
  804560:	1007883a 	mov	r3,r2
  804564:	e0bffe17 	ldw	r2,-8(fp)
  804568:	10c05315 	stw	r3,332(r2)
  80456c:	e0bffe17 	ldw	r2,-8(fp)
  804570:	10c05517 	ldw	r3,340(r2)
  804574:	e0bffe17 	ldw	r2,-8(fp)
  804578:	10800917 	ldw	r2,36(r2)
  80457c:	18800316 	blt	r3,r2,80458c <initial_setup+0x8a0>
  804580:	e0bffe17 	ldw	r2,-8(fp)
  804584:	10803817 	ldw	r2,224(r2)
  804588:	10000526 	beq	r2,zero,8045a0 <initial_setup+0x8b4>
  80458c:	e0bffe17 	ldw	r2,-8(fp)
  804590:	10807317 	ldw	r2,460(r2)
  804594:	00c00044 	movi	r3,1
  804598:	10c00415 	stw	r3,16(r2)
  80459c:	00000306 	br	8045ac <initial_setup+0x8c0>
  8045a0:	e0bffe17 	ldw	r2,-8(fp)
  8045a4:	10807317 	ldw	r2,460(r2)
  8045a8:	10000415 	stw	zero,16(r2)
  8045ac:	0001883a 	nop
  8045b0:	e6ffff04 	addi	sp,fp,-4
  8045b4:	dfc00217 	ldw	ra,8(sp)
  8045b8:	df000117 	ldw	fp,4(sp)
  8045bc:	dc000017 	ldw	r16,0(sp)
  8045c0:	dec00304 	addi	sp,sp,12
  8045c4:	f800283a 	ret

008045c8 <per_scan_setup>:
  8045c8:	defff804 	addi	sp,sp,-32
  8045cc:	dfc00715 	stw	ra,28(sp)
  8045d0:	df000615 	stw	fp,24(sp)
  8045d4:	dc000515 	stw	r16,20(sp)
  8045d8:	df000604 	addi	fp,sp,24
  8045dc:	e13ffe15 	stw	r4,-8(fp)
  8045e0:	e0bffe17 	ldw	r2,-8(fp)
  8045e4:	10805517 	ldw	r2,340(r2)
  8045e8:	10800058 	cmpnei	r2,r2,1
  8045ec:	1000311e 	bne	r2,zero,8046b4 <per_scan_setup+0xec>
  8045f0:	e0bffe17 	ldw	r2,-8(fp)
  8045f4:	10805617 	ldw	r2,344(r2)
  8045f8:	e0bffd15 	stw	r2,-12(fp)
  8045fc:	e0bffd17 	ldw	r2,-12(fp)
  804600:	10c00717 	ldw	r3,28(r2)
  804604:	e0bffe17 	ldw	r2,-8(fp)
  804608:	10c05a15 	stw	r3,360(r2)
  80460c:	e0bffd17 	ldw	r2,-12(fp)
  804610:	10c00817 	ldw	r3,32(r2)
  804614:	e0bffe17 	ldw	r2,-8(fp)
  804618:	10c05b15 	stw	r3,364(r2)
  80461c:	e0bffd17 	ldw	r2,-12(fp)
  804620:	00c00044 	movi	r3,1
  804624:	10c00e15 	stw	r3,56(r2)
  804628:	e0bffd17 	ldw	r2,-12(fp)
  80462c:	00c00044 	movi	r3,1
  804630:	10c00f15 	stw	r3,60(r2)
  804634:	e0bffd17 	ldw	r2,-12(fp)
  804638:	00c00044 	movi	r3,1
  80463c:	10c01015 	stw	r3,64(r2)
  804640:	e0bffd17 	ldw	r2,-12(fp)
  804644:	10c00917 	ldw	r3,36(r2)
  804648:	e0bffd17 	ldw	r2,-12(fp)
  80464c:	10c01115 	stw	r3,68(r2)
  804650:	e0bffd17 	ldw	r2,-12(fp)
  804654:	00c00044 	movi	r3,1
  804658:	10c01215 	stw	r3,72(r2)
  80465c:	e0bffd17 	ldw	r2,-12(fp)
  804660:	10c00817 	ldw	r3,32(r2)
  804664:	e0bffd17 	ldw	r2,-12(fp)
  804668:	10800317 	ldw	r2,12(r2)
  80466c:	100b883a 	mov	r5,r2
  804670:	1809883a 	mov	r4,r3
  804674:	08301900 	call	830190 <__umodsi3>
  804678:	e0bffc15 	stw	r2,-16(fp)
  80467c:	e0bffc17 	ldw	r2,-16(fp)
  804680:	1000031e 	bne	r2,zero,804690 <per_scan_setup+0xc8>
  804684:	e0bffd17 	ldw	r2,-12(fp)
  804688:	10800317 	ldw	r2,12(r2)
  80468c:	e0bffc15 	stw	r2,-16(fp)
  804690:	e0bffd17 	ldw	r2,-12(fp)
  804694:	e0fffc17 	ldw	r3,-16(fp)
  804698:	10c01315 	stw	r3,76(r2)
  80469c:	e0bffe17 	ldw	r2,-8(fp)
  8046a0:	00c00044 	movi	r3,1
  8046a4:	10c05c15 	stw	r3,368(r2)
  8046a8:	e0bffe17 	ldw	r2,-8(fp)
  8046ac:	10005d15 	stw	zero,372(r2)
  8046b0:	0000ab06 	br	804960 <per_scan_setup+0x398>
  8046b4:	e0bffe17 	ldw	r2,-8(fp)
  8046b8:	10805517 	ldw	r2,340(r2)
  8046bc:	0080040e 	bge	zero,r2,8046d0 <per_scan_setup+0x108>
  8046c0:	e0bffe17 	ldw	r2,-8(fp)
  8046c4:	10805517 	ldw	r2,340(r2)
  8046c8:	10800150 	cmplti	r2,r2,5
  8046cc:	1000121e 	bne	r2,zero,804718 <per_scan_setup+0x150>
  8046d0:	e0bffe17 	ldw	r2,-8(fp)
  8046d4:	10800017 	ldw	r2,0(r2)
  8046d8:	00c006c4 	movi	r3,27
  8046dc:	10c00515 	stw	r3,20(r2)
  8046e0:	e0bffe17 	ldw	r2,-8(fp)
  8046e4:	10800017 	ldw	r2,0(r2)
  8046e8:	e0fffe17 	ldw	r3,-8(fp)
  8046ec:	18c05517 	ldw	r3,340(r3)
  8046f0:	10c00615 	stw	r3,24(r2)
  8046f4:	e0bffe17 	ldw	r2,-8(fp)
  8046f8:	10800017 	ldw	r2,0(r2)
  8046fc:	00c00104 	movi	r3,4
  804700:	10c00715 	stw	r3,28(r2)
  804704:	e0bffe17 	ldw	r2,-8(fp)
  804708:	10800017 	ldw	r2,0(r2)
  80470c:	10800017 	ldw	r2,0(r2)
  804710:	e13ffe17 	ldw	r4,-8(fp)
  804714:	103ee83a 	callr	r2
  804718:	e0bffe17 	ldw	r2,-8(fp)
  80471c:	10800717 	ldw	r2,28(r2)
  804720:	1021883a 	mov	r16,r2
  804724:	e0bffe17 	ldw	r2,-8(fp)
  804728:	10c04f17 	ldw	r3,316(r2)
  80472c:	e0bffe17 	ldw	r2,-8(fp)
  804730:	10806b17 	ldw	r2,428(r2)
  804734:	100b883a 	mov	r5,r2
  804738:	1809883a 	mov	r4,r3
  80473c:	08301e80 	call	8301e8 <__mulsi3>
  804740:	100b883a 	mov	r5,r2
  804744:	8009883a 	mov	r4,r16
  804748:	0813b8c0 	call	813b8c <jdiv_round_up>
  80474c:	1007883a 	mov	r3,r2
  804750:	e0bffe17 	ldw	r2,-8(fp)
  804754:	10c05a15 	stw	r3,360(r2)
  804758:	e0bffe17 	ldw	r2,-8(fp)
  80475c:	10800817 	ldw	r2,32(r2)
  804760:	1021883a 	mov	r16,r2
  804764:	e0bffe17 	ldw	r2,-8(fp)
  804768:	10c05017 	ldw	r3,320(r2)
  80476c:	e0bffe17 	ldw	r2,-8(fp)
  804770:	10806b17 	ldw	r2,428(r2)
  804774:	100b883a 	mov	r5,r2
  804778:	1809883a 	mov	r4,r3
  80477c:	08301e80 	call	8301e8 <__mulsi3>
  804780:	100b883a 	mov	r5,r2
  804784:	8009883a 	mov	r4,r16
  804788:	0813b8c0 	call	813b8c <jdiv_round_up>
  80478c:	1007883a 	mov	r3,r2
  804790:	e0bffe17 	ldw	r2,-8(fp)
  804794:	10c05b15 	stw	r3,364(r2)
  804798:	e0bffe17 	ldw	r2,-8(fp)
  80479c:	10005c15 	stw	zero,368(r2)
  8047a0:	e03ffa15 	stw	zero,-24(fp)
  8047a4:	00006a06 	br	804950 <per_scan_setup+0x388>
  8047a8:	e0fffe17 	ldw	r3,-8(fp)
  8047ac:	e0bffa17 	ldw	r2,-24(fp)
  8047b0:	10801584 	addi	r2,r2,86
  8047b4:	1085883a 	add	r2,r2,r2
  8047b8:	1085883a 	add	r2,r2,r2
  8047bc:	1885883a 	add	r2,r3,r2
  8047c0:	10800017 	ldw	r2,0(r2)
  8047c4:	e0bffd15 	stw	r2,-12(fp)
  8047c8:	e0bffd17 	ldw	r2,-12(fp)
  8047cc:	10c00217 	ldw	r3,8(r2)
  8047d0:	e0bffd17 	ldw	r2,-12(fp)
  8047d4:	10c00e15 	stw	r3,56(r2)
  8047d8:	e0bffd17 	ldw	r2,-12(fp)
  8047dc:	10c00317 	ldw	r3,12(r2)
  8047e0:	e0bffd17 	ldw	r2,-12(fp)
  8047e4:	10c00f15 	stw	r3,60(r2)
  8047e8:	e0bffd17 	ldw	r2,-12(fp)
  8047ec:	10c00e17 	ldw	r3,56(r2)
  8047f0:	e0bffd17 	ldw	r2,-12(fp)
  8047f4:	10800f17 	ldw	r2,60(r2)
  8047f8:	100b883a 	mov	r5,r2
  8047fc:	1809883a 	mov	r4,r3
  804800:	08301e80 	call	8301e8 <__mulsi3>
  804804:	1007883a 	mov	r3,r2
  804808:	e0bffd17 	ldw	r2,-12(fp)
  80480c:	10c01015 	stw	r3,64(r2)
  804810:	e0bffd17 	ldw	r2,-12(fp)
  804814:	10c00e17 	ldw	r3,56(r2)
  804818:	e0bffd17 	ldw	r2,-12(fp)
  80481c:	10800917 	ldw	r2,36(r2)
  804820:	100b883a 	mov	r5,r2
  804824:	1809883a 	mov	r4,r3
  804828:	08301e80 	call	8301e8 <__mulsi3>
  80482c:	1007883a 	mov	r3,r2
  804830:	e0bffd17 	ldw	r2,-12(fp)
  804834:	10c01115 	stw	r3,68(r2)
  804838:	e0bffd17 	ldw	r2,-12(fp)
  80483c:	10c00717 	ldw	r3,28(r2)
  804840:	e0bffd17 	ldw	r2,-12(fp)
  804844:	10800e17 	ldw	r2,56(r2)
  804848:	100b883a 	mov	r5,r2
  80484c:	1809883a 	mov	r4,r3
  804850:	08301900 	call	830190 <__umodsi3>
  804854:	e0bffc15 	stw	r2,-16(fp)
  804858:	e0bffc17 	ldw	r2,-16(fp)
  80485c:	1000031e 	bne	r2,zero,80486c <per_scan_setup+0x2a4>
  804860:	e0bffd17 	ldw	r2,-12(fp)
  804864:	10800e17 	ldw	r2,56(r2)
  804868:	e0bffc15 	stw	r2,-16(fp)
  80486c:	e0bffd17 	ldw	r2,-12(fp)
  804870:	e0fffc17 	ldw	r3,-16(fp)
  804874:	10c01215 	stw	r3,72(r2)
  804878:	e0bffd17 	ldw	r2,-12(fp)
  80487c:	10c00817 	ldw	r3,32(r2)
  804880:	e0bffd17 	ldw	r2,-12(fp)
  804884:	10800f17 	ldw	r2,60(r2)
  804888:	100b883a 	mov	r5,r2
  80488c:	1809883a 	mov	r4,r3
  804890:	08301900 	call	830190 <__umodsi3>
  804894:	e0bffc15 	stw	r2,-16(fp)
  804898:	e0bffc17 	ldw	r2,-16(fp)
  80489c:	1000031e 	bne	r2,zero,8048ac <per_scan_setup+0x2e4>
  8048a0:	e0bffd17 	ldw	r2,-12(fp)
  8048a4:	10800f17 	ldw	r2,60(r2)
  8048a8:	e0bffc15 	stw	r2,-16(fp)
  8048ac:	e0bffd17 	ldw	r2,-12(fp)
  8048b0:	e0fffc17 	ldw	r3,-16(fp)
  8048b4:	10c01315 	stw	r3,76(r2)
  8048b8:	e0bffd17 	ldw	r2,-12(fp)
  8048bc:	10801017 	ldw	r2,64(r2)
  8048c0:	e0bffb15 	stw	r2,-20(fp)
  8048c4:	e0bffe17 	ldw	r2,-8(fp)
  8048c8:	10c05c17 	ldw	r3,368(r2)
  8048cc:	e0bffb17 	ldw	r2,-20(fp)
  8048d0:	1885883a 	add	r2,r3,r2
  8048d4:	108002d0 	cmplti	r2,r2,11
  8048d8:	1000161e 	bne	r2,zero,804934 <per_scan_setup+0x36c>
  8048dc:	e0bffe17 	ldw	r2,-8(fp)
  8048e0:	10800017 	ldw	r2,0(r2)
  8048e4:	00c00384 	movi	r3,14
  8048e8:	10c00515 	stw	r3,20(r2)
  8048ec:	e0bffe17 	ldw	r2,-8(fp)
  8048f0:	10800017 	ldw	r2,0(r2)
  8048f4:	10800017 	ldw	r2,0(r2)
  8048f8:	e13ffe17 	ldw	r4,-8(fp)
  8048fc:	103ee83a 	callr	r2
  804900:	00000c06 	br	804934 <per_scan_setup+0x36c>
  804904:	e0bffe17 	ldw	r2,-8(fp)
  804908:	10805c17 	ldw	r2,368(r2)
  80490c:	11000044 	addi	r4,r2,1
  804910:	e0fffe17 	ldw	r3,-8(fp)
  804914:	19005c15 	stw	r4,368(r3)
  804918:	e0fffe17 	ldw	r3,-8(fp)
  80491c:	10801744 	addi	r2,r2,93
  804920:	1085883a 	add	r2,r2,r2
  804924:	1085883a 	add	r2,r2,r2
  804928:	1885883a 	add	r2,r3,r2
  80492c:	e0fffa17 	ldw	r3,-24(fp)
  804930:	10c00015 	stw	r3,0(r2)
  804934:	e0bffb17 	ldw	r2,-20(fp)
  804938:	10ffffc4 	addi	r3,r2,-1
  80493c:	e0fffb15 	stw	r3,-20(fp)
  804940:	00bff016 	blt	zero,r2,804904 <__alt_mem_epcs_flash_controller_0+0xff7fb904>
  804944:	e0bffa17 	ldw	r2,-24(fp)
  804948:	10800044 	addi	r2,r2,1
  80494c:	e0bffa15 	stw	r2,-24(fp)
  804950:	e0bffe17 	ldw	r2,-8(fp)
  804954:	10805517 	ldw	r2,340(r2)
  804958:	e0fffa17 	ldw	r3,-24(fp)
  80495c:	18bf9216 	blt	r3,r2,8047a8 <__alt_mem_epcs_flash_controller_0+0xff7fb7a8>
  804960:	0001883a 	nop
  804964:	e6ffff04 	addi	sp,fp,-4
  804968:	dfc00217 	ldw	ra,8(sp)
  80496c:	df000117 	ldw	fp,4(sp)
  804970:	dc000017 	ldw	r16,0(sp)
  804974:	dec00304 	addi	sp,sp,12
  804978:	f800283a 	ret

0080497c <latch_quant_tables>:
  80497c:	defff904 	addi	sp,sp,-28
  804980:	dfc00615 	stw	ra,24(sp)
  804984:	df000515 	stw	fp,20(sp)
  804988:	df000504 	addi	fp,sp,20
  80498c:	e13fff15 	stw	r4,-4(fp)
  804990:	e03ffb15 	stw	zero,-20(fp)
  804994:	00004306 	br	804aa4 <latch_quant_tables+0x128>
  804998:	e0ffff17 	ldw	r3,-4(fp)
  80499c:	e0bffb17 	ldw	r2,-20(fp)
  8049a0:	10801584 	addi	r2,r2,86
  8049a4:	1085883a 	add	r2,r2,r2
  8049a8:	1085883a 	add	r2,r2,r2
  8049ac:	1885883a 	add	r2,r3,r2
  8049b0:	10800017 	ldw	r2,0(r2)
  8049b4:	e0bffc15 	stw	r2,-16(fp)
  8049b8:	e0bffc17 	ldw	r2,-16(fp)
  8049bc:	10801417 	ldw	r2,80(r2)
  8049c0:	1000341e 	bne	r2,zero,804a94 <latch_quant_tables+0x118>
  8049c4:	e0bffc17 	ldw	r2,-16(fp)
  8049c8:	10800417 	ldw	r2,16(r2)
  8049cc:	e0bffd15 	stw	r2,-12(fp)
  8049d0:	e0bffd17 	ldw	r2,-12(fp)
  8049d4:	10000b16 	blt	r2,zero,804a04 <latch_quant_tables+0x88>
  8049d8:	e0bffd17 	ldw	r2,-12(fp)
  8049dc:	10800108 	cmpgei	r2,r2,4
  8049e0:	1000081e 	bne	r2,zero,804a04 <latch_quant_tables+0x88>
  8049e4:	e0ffff17 	ldw	r3,-4(fp)
  8049e8:	e0bffd17 	ldw	r2,-12(fp)
  8049ec:	10800a44 	addi	r2,r2,41
  8049f0:	1085883a 	add	r2,r2,r2
  8049f4:	1085883a 	add	r2,r2,r2
  8049f8:	1885883a 	add	r2,r3,r2
  8049fc:	10800017 	ldw	r2,0(r2)
  804a00:	10000d1e 	bne	r2,zero,804a38 <latch_quant_tables+0xbc>
  804a04:	e0bfff17 	ldw	r2,-4(fp)
  804a08:	10800017 	ldw	r2,0(r2)
  804a0c:	00c00d84 	movi	r3,54
  804a10:	10c00515 	stw	r3,20(r2)
  804a14:	e0bfff17 	ldw	r2,-4(fp)
  804a18:	10800017 	ldw	r2,0(r2)
  804a1c:	e0fffd17 	ldw	r3,-12(fp)
  804a20:	10c00615 	stw	r3,24(r2)
  804a24:	e0bfff17 	ldw	r2,-4(fp)
  804a28:	10800017 	ldw	r2,0(r2)
  804a2c:	10800017 	ldw	r2,0(r2)
  804a30:	e13fff17 	ldw	r4,-4(fp)
  804a34:	103ee83a 	callr	r2
  804a38:	e0bfff17 	ldw	r2,-4(fp)
  804a3c:	10800117 	ldw	r2,4(r2)
  804a40:	10800017 	ldw	r2,0(r2)
  804a44:	01802104 	movi	r6,132
  804a48:	01400044 	movi	r5,1
  804a4c:	e13fff17 	ldw	r4,-4(fp)
  804a50:	103ee83a 	callr	r2
  804a54:	e0bffe15 	stw	r2,-8(fp)
  804a58:	e0ffff17 	ldw	r3,-4(fp)
  804a5c:	e0bffd17 	ldw	r2,-12(fp)
  804a60:	10800a44 	addi	r2,r2,41
  804a64:	1085883a 	add	r2,r2,r2
  804a68:	1085883a 	add	r2,r2,r2
  804a6c:	1885883a 	add	r2,r3,r2
  804a70:	10800017 	ldw	r2,0(r2)
  804a74:	01802104 	movi	r6,132
  804a78:	100b883a 	mov	r5,r2
  804a7c:	e13ffe17 	ldw	r4,-8(fp)
  804a80:	0833c4c0 	call	833c4c <memcpy>
  804a84:	e0bffc17 	ldw	r2,-16(fp)
  804a88:	e0fffe17 	ldw	r3,-8(fp)
  804a8c:	10c01415 	stw	r3,80(r2)
  804a90:	00000106 	br	804a98 <latch_quant_tables+0x11c>
  804a94:	0001883a 	nop
  804a98:	e0bffb17 	ldw	r2,-20(fp)
  804a9c:	10800044 	addi	r2,r2,1
  804aa0:	e0bffb15 	stw	r2,-20(fp)
  804aa4:	e0bfff17 	ldw	r2,-4(fp)
  804aa8:	10805517 	ldw	r2,340(r2)
  804aac:	e0fffb17 	ldw	r3,-20(fp)
  804ab0:	18bfb916 	blt	r3,r2,804998 <__alt_mem_epcs_flash_controller_0+0xff7fb998>
  804ab4:	0001883a 	nop
  804ab8:	e037883a 	mov	sp,fp
  804abc:	dfc00117 	ldw	ra,4(sp)
  804ac0:	df000017 	ldw	fp,0(sp)
  804ac4:	dec00204 	addi	sp,sp,8
  804ac8:	f800283a 	ret

00804acc <start_input_pass>:
  804acc:	defffd04 	addi	sp,sp,-12
  804ad0:	dfc00215 	stw	ra,8(sp)
  804ad4:	df000115 	stw	fp,4(sp)
  804ad8:	df000104 	addi	fp,sp,4
  804adc:	e13fff15 	stw	r4,-4(fp)
  804ae0:	e13fff17 	ldw	r4,-4(fp)
  804ae4:	08045c80 	call	8045c8 <per_scan_setup>
  804ae8:	e13fff17 	ldw	r4,-4(fp)
  804aec:	080497c0 	call	80497c <latch_quant_tables>
  804af0:	e0bfff17 	ldw	r2,-4(fp)
  804af4:	10807517 	ldw	r2,468(r2)
  804af8:	10800017 	ldw	r2,0(r2)
  804afc:	e13fff17 	ldw	r4,-4(fp)
  804b00:	103ee83a 	callr	r2
  804b04:	e0bfff17 	ldw	r2,-4(fp)
  804b08:	10807117 	ldw	r2,452(r2)
  804b0c:	10800017 	ldw	r2,0(r2)
  804b10:	e13fff17 	ldw	r4,-4(fp)
  804b14:	103ee83a 	callr	r2
  804b18:	e0bfff17 	ldw	r2,-4(fp)
  804b1c:	10807317 	ldw	r2,460(r2)
  804b20:	e0ffff17 	ldw	r3,-4(fp)
  804b24:	18c07117 	ldw	r3,452(r3)
  804b28:	18c00117 	ldw	r3,4(r3)
  804b2c:	10c00015 	stw	r3,0(r2)
  804b30:	0001883a 	nop
  804b34:	e037883a 	mov	sp,fp
  804b38:	dfc00117 	ldw	ra,4(sp)
  804b3c:	df000017 	ldw	fp,0(sp)
  804b40:	dec00204 	addi	sp,sp,8
  804b44:	f800283a 	ret

00804b48 <finish_input_pass>:
  804b48:	defffd04 	addi	sp,sp,-12
  804b4c:	dfc00215 	stw	ra,8(sp)
  804b50:	df000115 	stw	fp,4(sp)
  804b54:	df000104 	addi	fp,sp,4
  804b58:	e13fff15 	stw	r4,-4(fp)
  804b5c:	e0bfff17 	ldw	r2,-4(fp)
  804b60:	10807517 	ldw	r2,468(r2)
  804b64:	10800217 	ldw	r2,8(r2)
  804b68:	e13fff17 	ldw	r4,-4(fp)
  804b6c:	103ee83a 	callr	r2
  804b70:	e0bfff17 	ldw	r2,-4(fp)
  804b74:	10c07317 	ldw	r3,460(r2)
  804b78:	00802034 	movhi	r2,128
  804b7c:	1092e704 	addi	r2,r2,19356
  804b80:	18800015 	stw	r2,0(r3)
  804b84:	0001883a 	nop
  804b88:	e037883a 	mov	sp,fp
  804b8c:	dfc00117 	ldw	ra,4(sp)
  804b90:	df000017 	ldw	fp,0(sp)
  804b94:	dec00204 	addi	sp,sp,8
  804b98:	f800283a 	ret

00804b9c <consume_markers>:
  804b9c:	defffb04 	addi	sp,sp,-20
  804ba0:	dfc00415 	stw	ra,16(sp)
  804ba4:	df000315 	stw	fp,12(sp)
  804ba8:	df000304 	addi	fp,sp,12
  804bac:	e13fff15 	stw	r4,-4(fp)
  804bb0:	e0bfff17 	ldw	r2,-4(fp)
  804bb4:	10807317 	ldw	r2,460(r2)
  804bb8:	e0bffd15 	stw	r2,-12(fp)
  804bbc:	e0bffd17 	ldw	r2,-12(fp)
  804bc0:	10800517 	ldw	r2,20(r2)
  804bc4:	10000226 	beq	r2,zero,804bd0 <consume_markers+0x34>
  804bc8:	00800084 	movi	r2,2
  804bcc:	00005806 	br	804d30 <consume_markers+0x194>
  804bd0:	e0bfff17 	ldw	r2,-4(fp)
  804bd4:	10807417 	ldw	r2,464(r2)
  804bd8:	10800117 	ldw	r2,4(r2)
  804bdc:	e13fff17 	ldw	r4,-4(fp)
  804be0:	103ee83a 	callr	r2
  804be4:	e0bffe15 	stw	r2,-8(fp)
  804be8:	e0bffe17 	ldw	r2,-8(fp)
  804bec:	10c00060 	cmpeqi	r3,r2,1
  804bf0:	1800041e 	bne	r3,zero,804c04 <consume_markers+0x68>
  804bf4:	10c000a0 	cmpeqi	r3,r2,2
  804bf8:	1800281e 	bne	r3,zero,804c9c <consume_markers+0x100>
  804bfc:	10004626 	beq	r2,zero,804d18 <consume_markers+0x17c>
  804c00:	00004706 	br	804d20 <consume_markers+0x184>
  804c04:	e0bffd17 	ldw	r2,-12(fp)
  804c08:	10800617 	ldw	r2,24(r2)
  804c0c:	10001026 	beq	r2,zero,804c50 <consume_markers+0xb4>
  804c10:	e0bffd17 	ldw	r2,-12(fp)
  804c14:	10800617 	ldw	r2,24(r2)
  804c18:	10800058 	cmpnei	r2,r2,1
  804c1c:	1000021e 	bne	r2,zero,804c28 <consume_markers+0x8c>
  804c20:	e13fff17 	ldw	r4,-4(fp)
  804c24:	0803cec0 	call	803cec <initial_setup>
  804c28:	e0bfff17 	ldw	r2,-4(fp)
  804c2c:	10805517 	ldw	r2,340(r2)
  804c30:	1000041e 	bne	r2,zero,804c44 <consume_markers+0xa8>
  804c34:	e0bffd17 	ldw	r2,-12(fp)
  804c38:	00c00084 	movi	r3,2
  804c3c:	10c00615 	stw	r3,24(r2)
  804c40:	00003a06 	br	804d2c <consume_markers+0x190>
  804c44:	e0bffd17 	ldw	r2,-12(fp)
  804c48:	10000615 	stw	zero,24(r2)
  804c4c:	00001106 	br	804c94 <consume_markers+0xf8>
  804c50:	e0bffd17 	ldw	r2,-12(fp)
  804c54:	10800417 	ldw	r2,16(r2)
  804c58:	1000091e 	bne	r2,zero,804c80 <consume_markers+0xe4>
  804c5c:	e0bfff17 	ldw	r2,-4(fp)
  804c60:	10800017 	ldw	r2,0(r2)
  804c64:	00c00904 	movi	r3,36
  804c68:	10c00515 	stw	r3,20(r2)
  804c6c:	e0bfff17 	ldw	r2,-4(fp)
  804c70:	10800017 	ldw	r2,0(r2)
  804c74:	10800017 	ldw	r2,0(r2)
  804c78:	e13fff17 	ldw	r4,-4(fp)
  804c7c:	103ee83a 	callr	r2
  804c80:	e0bfff17 	ldw	r2,-4(fp)
  804c84:	10805517 	ldw	r2,340(r2)
  804c88:	10002726 	beq	r2,zero,804d28 <consume_markers+0x18c>
  804c8c:	e13fff17 	ldw	r4,-4(fp)
  804c90:	0804acc0 	call	804acc <start_input_pass>
  804c94:	e0bffe17 	ldw	r2,-8(fp)
  804c98:	00002506 	br	804d30 <consume_markers+0x194>
  804c9c:	e0bffd17 	ldw	r2,-12(fp)
  804ca0:	00c00044 	movi	r3,1
  804ca4:	10c00515 	stw	r3,20(r2)
  804ca8:	e0bffd17 	ldw	r2,-12(fp)
  804cac:	10800617 	ldw	r2,24(r2)
  804cb0:	10000e26 	beq	r2,zero,804cec <consume_markers+0x150>
  804cb4:	e0bfff17 	ldw	r2,-4(fp)
  804cb8:	10807417 	ldw	r2,464(r2)
  804cbc:	10800417 	ldw	r2,16(r2)
  804cc0:	10001326 	beq	r2,zero,804d10 <consume_markers+0x174>
  804cc4:	e0bfff17 	ldw	r2,-4(fp)
  804cc8:	10800017 	ldw	r2,0(r2)
  804ccc:	00c00f84 	movi	r3,62
  804cd0:	10c00515 	stw	r3,20(r2)
  804cd4:	e0bfff17 	ldw	r2,-4(fp)
  804cd8:	10800017 	ldw	r2,0(r2)
  804cdc:	10800017 	ldw	r2,0(r2)
  804ce0:	e13fff17 	ldw	r4,-4(fp)
  804ce4:	103ee83a 	callr	r2
  804ce8:	00000906 	br	804d10 <consume_markers+0x174>
  804cec:	e0bfff17 	ldw	r2,-4(fp)
  804cf0:	10802617 	ldw	r2,152(r2)
  804cf4:	e0ffff17 	ldw	r3,-4(fp)
  804cf8:	18c02417 	ldw	r3,144(r3)
  804cfc:	1880040e 	bge	r3,r2,804d10 <consume_markers+0x174>
  804d00:	e0bfff17 	ldw	r2,-4(fp)
  804d04:	10c02417 	ldw	r3,144(r2)
  804d08:	e0bfff17 	ldw	r2,-4(fp)
  804d0c:	10c02615 	stw	r3,152(r2)
  804d10:	e0bffe17 	ldw	r2,-8(fp)
  804d14:	00000606 	br	804d30 <consume_markers+0x194>
  804d18:	e0bffe17 	ldw	r2,-8(fp)
  804d1c:	00000406 	br	804d30 <consume_markers+0x194>
  804d20:	e0bffe17 	ldw	r2,-8(fp)
  804d24:	00000206 	br	804d30 <consume_markers+0x194>
  804d28:	0001883a 	nop
  804d2c:	003fa806 	br	804bd0 <__alt_mem_epcs_flash_controller_0+0xff7fbbd0>
  804d30:	e037883a 	mov	sp,fp
  804d34:	dfc00117 	ldw	ra,4(sp)
  804d38:	df000017 	ldw	fp,0(sp)
  804d3c:	dec00204 	addi	sp,sp,8
  804d40:	f800283a 	ret

00804d44 <reset_input_controller>:
  804d44:	defffc04 	addi	sp,sp,-16
  804d48:	dfc00315 	stw	ra,12(sp)
  804d4c:	df000215 	stw	fp,8(sp)
  804d50:	df000204 	addi	fp,sp,8
  804d54:	e13fff15 	stw	r4,-4(fp)
  804d58:	e0bfff17 	ldw	r2,-4(fp)
  804d5c:	10807317 	ldw	r2,460(r2)
  804d60:	e0bffe15 	stw	r2,-8(fp)
  804d64:	e0fffe17 	ldw	r3,-8(fp)
  804d68:	00802034 	movhi	r2,128
  804d6c:	1092e704 	addi	r2,r2,19356
  804d70:	18800015 	stw	r2,0(r3)
  804d74:	e0bffe17 	ldw	r2,-8(fp)
  804d78:	10000415 	stw	zero,16(r2)
  804d7c:	e0bffe17 	ldw	r2,-8(fp)
  804d80:	10000515 	stw	zero,20(r2)
  804d84:	e0bffe17 	ldw	r2,-8(fp)
  804d88:	00c00044 	movi	r3,1
  804d8c:	10c00615 	stw	r3,24(r2)
  804d90:	e0bfff17 	ldw	r2,-4(fp)
  804d94:	10800017 	ldw	r2,0(r2)
  804d98:	10800417 	ldw	r2,16(r2)
  804d9c:	e13fff17 	ldw	r4,-4(fp)
  804da0:	103ee83a 	callr	r2
  804da4:	e0bfff17 	ldw	r2,-4(fp)
  804da8:	10807417 	ldw	r2,464(r2)
  804dac:	10800017 	ldw	r2,0(r2)
  804db0:	e13fff17 	ldw	r4,-4(fp)
  804db4:	103ee83a 	callr	r2
  804db8:	e0bfff17 	ldw	r2,-4(fp)
  804dbc:	10002815 	stw	zero,160(r2)
  804dc0:	0001883a 	nop
  804dc4:	e037883a 	mov	sp,fp
  804dc8:	dfc00117 	ldw	ra,4(sp)
  804dcc:	df000017 	ldw	fp,0(sp)
  804dd0:	dec00204 	addi	sp,sp,8
  804dd4:	f800283a 	ret

00804dd8 <jinit_input_controller>:
  804dd8:	defffc04 	addi	sp,sp,-16
  804ddc:	dfc00315 	stw	ra,12(sp)
  804de0:	df000215 	stw	fp,8(sp)
  804de4:	df000204 	addi	fp,sp,8
  804de8:	e13fff15 	stw	r4,-4(fp)
  804dec:	e0bfff17 	ldw	r2,-4(fp)
  804df0:	10800117 	ldw	r2,4(r2)
  804df4:	10800017 	ldw	r2,0(r2)
  804df8:	01800704 	movi	r6,28
  804dfc:	000b883a 	mov	r5,zero
  804e00:	e13fff17 	ldw	r4,-4(fp)
  804e04:	103ee83a 	callr	r2
  804e08:	e0bffe15 	stw	r2,-8(fp)
  804e0c:	e0fffe17 	ldw	r3,-8(fp)
  804e10:	e0bfff17 	ldw	r2,-4(fp)
  804e14:	10c07315 	stw	r3,460(r2)
  804e18:	e0fffe17 	ldw	r3,-8(fp)
  804e1c:	00802034 	movhi	r2,128
  804e20:	1092e704 	addi	r2,r2,19356
  804e24:	18800015 	stw	r2,0(r3)
  804e28:	e0fffe17 	ldw	r3,-8(fp)
  804e2c:	00802034 	movhi	r2,128
  804e30:	10935104 	addi	r2,r2,19780
  804e34:	18800115 	stw	r2,4(r3)
  804e38:	e0fffe17 	ldw	r3,-8(fp)
  804e3c:	00802034 	movhi	r2,128
  804e40:	1092b304 	addi	r2,r2,19148
  804e44:	18800215 	stw	r2,8(r3)
  804e48:	e0fffe17 	ldw	r3,-8(fp)
  804e4c:	00802034 	movhi	r2,128
  804e50:	1092d204 	addi	r2,r2,19272
  804e54:	18800315 	stw	r2,12(r3)
  804e58:	e0bffe17 	ldw	r2,-8(fp)
  804e5c:	10000415 	stw	zero,16(r2)
  804e60:	e0bffe17 	ldw	r2,-8(fp)
  804e64:	10000515 	stw	zero,20(r2)
  804e68:	e0bffe17 	ldw	r2,-8(fp)
  804e6c:	00c00044 	movi	r3,1
  804e70:	10c00615 	stw	r3,24(r2)
  804e74:	0001883a 	nop
  804e78:	e037883a 	mov	sp,fp
  804e7c:	dfc00117 	ldw	ra,4(sp)
  804e80:	df000017 	ldw	fp,0(sp)
  804e84:	dec00204 	addi	sp,sp,8
  804e88:	f800283a 	ret

00804e8c <get_soi>:
  804e8c:	defffc04 	addi	sp,sp,-16
  804e90:	dfc00315 	stw	ra,12(sp)
  804e94:	df000215 	stw	fp,8(sp)
  804e98:	df000204 	addi	fp,sp,8
  804e9c:	e13fff15 	stw	r4,-4(fp)
  804ea0:	e0bfff17 	ldw	r2,-4(fp)
  804ea4:	10800017 	ldw	r2,0(r2)
  804ea8:	00c01a04 	movi	r3,104
  804eac:	10c00515 	stw	r3,20(r2)
  804eb0:	e0bfff17 	ldw	r2,-4(fp)
  804eb4:	10800017 	ldw	r2,0(r2)
  804eb8:	10800117 	ldw	r2,4(r2)
  804ebc:	01400044 	movi	r5,1
  804ec0:	e13fff17 	ldw	r4,-4(fp)
  804ec4:	103ee83a 	callr	r2
  804ec8:	e0bfff17 	ldw	r2,-4(fp)
  804ecc:	10807417 	ldw	r2,464(r2)
  804ed0:	10800317 	ldw	r2,12(r2)
  804ed4:	10000926 	beq	r2,zero,804efc <get_soi+0x70>
  804ed8:	e0bfff17 	ldw	r2,-4(fp)
  804edc:	10800017 	ldw	r2,0(r2)
  804ee0:	00c01004 	movi	r3,64
  804ee4:	10c00515 	stw	r3,20(r2)
  804ee8:	e0bfff17 	ldw	r2,-4(fp)
  804eec:	10800017 	ldw	r2,0(r2)
  804ef0:	10800017 	ldw	r2,0(r2)
  804ef4:	e13fff17 	ldw	r4,-4(fp)
  804ef8:	103ee83a 	callr	r2
  804efc:	e03ffe15 	stw	zero,-8(fp)
  804f00:	00001406 	br	804f54 <get_soi+0xc8>
  804f04:	e0ffff17 	ldw	r3,-4(fp)
  804f08:	e0bffe17 	ldw	r2,-8(fp)
  804f0c:	1885883a 	add	r2,r3,r2
  804f10:	10803a04 	addi	r2,r2,232
  804f14:	10000005 	stb	zero,0(r2)
  804f18:	e0ffff17 	ldw	r3,-4(fp)
  804f1c:	e0bffe17 	ldw	r2,-8(fp)
  804f20:	1885883a 	add	r2,r3,r2
  804f24:	10803e04 	addi	r2,r2,248
  804f28:	00c00044 	movi	r3,1
  804f2c:	10c00005 	stb	r3,0(r2)
  804f30:	e0ffff17 	ldw	r3,-4(fp)
  804f34:	e0bffe17 	ldw	r2,-8(fp)
  804f38:	1885883a 	add	r2,r3,r2
  804f3c:	10804204 	addi	r2,r2,264
  804f40:	00c00144 	movi	r3,5
  804f44:	10c00005 	stb	r3,0(r2)
  804f48:	e0bffe17 	ldw	r2,-8(fp)
  804f4c:	10800044 	addi	r2,r2,1
  804f50:	e0bffe15 	stw	r2,-8(fp)
  804f54:	e0bffe17 	ldw	r2,-8(fp)
  804f58:	10800410 	cmplti	r2,r2,16
  804f5c:	103fe91e 	bne	r2,zero,804f04 <__alt_mem_epcs_flash_controller_0+0xff7fbf04>
  804f60:	e0bfff17 	ldw	r2,-4(fp)
  804f64:	10004615 	stw	zero,280(r2)
  804f68:	e0bfff17 	ldw	r2,-4(fp)
  804f6c:	10000a15 	stw	zero,40(r2)
  804f70:	e0bfff17 	ldw	r2,-4(fp)
  804f74:	10004c15 	stw	zero,304(r2)
  804f78:	e0bfff17 	ldw	r2,-4(fp)
  804f7c:	10004d15 	stw	zero,308(r2)
  804f80:	e0bfff17 	ldw	r2,-4(fp)
  804f84:	10004715 	stw	zero,284(r2)
  804f88:	e0bfff17 	ldw	r2,-4(fp)
  804f8c:	00c00044 	movi	r3,1
  804f90:	10c04805 	stb	r3,288(r2)
  804f94:	e0bfff17 	ldw	r2,-4(fp)
  804f98:	00c00044 	movi	r3,1
  804f9c:	10c04845 	stb	r3,289(r2)
  804fa0:	e0bfff17 	ldw	r2,-4(fp)
  804fa4:	10004885 	stb	zero,290(r2)
  804fa8:	e0bfff17 	ldw	r2,-4(fp)
  804fac:	00c00044 	movi	r3,1
  804fb0:	10c0490d 	sth	r3,292(r2)
  804fb4:	e0bfff17 	ldw	r2,-4(fp)
  804fb8:	00c00044 	movi	r3,1
  804fbc:	10c0498d 	sth	r3,294(r2)
  804fc0:	e0bfff17 	ldw	r2,-4(fp)
  804fc4:	10004a15 	stw	zero,296(r2)
  804fc8:	e0bfff17 	ldw	r2,-4(fp)
  804fcc:	10004b05 	stb	zero,300(r2)
  804fd0:	e0bfff17 	ldw	r2,-4(fp)
  804fd4:	10807417 	ldw	r2,464(r2)
  804fd8:	00c00044 	movi	r3,1
  804fdc:	10c00315 	stw	r3,12(r2)
  804fe0:	00800044 	movi	r2,1
  804fe4:	e037883a 	mov	sp,fp
  804fe8:	dfc00117 	ldw	ra,4(sp)
  804fec:	df000017 	ldw	fp,0(sp)
  804ff0:	dec00204 	addi	sp,sp,8
  804ff4:	f800283a 	ret

00804ff8 <get_sof>:
  804ff8:	deffef04 	addi	sp,sp,-68
  804ffc:	dfc01015 	stw	ra,64(sp)
  805000:	df000f15 	stw	fp,60(sp)
  805004:	dc000e15 	stw	r16,56(sp)
  805008:	df000f04 	addi	fp,sp,60
  80500c:	e13ffb15 	stw	r4,-20(fp)
  805010:	e17ffc15 	stw	r5,-16(fp)
  805014:	e1bffd15 	stw	r6,-12(fp)
  805018:	e1fffe15 	stw	r7,-8(fp)
  80501c:	e0bffb17 	ldw	r2,-20(fp)
  805020:	10800617 	ldw	r2,24(r2)
  805024:	e0bff715 	stw	r2,-36(fp)
  805028:	e0bff717 	ldw	r2,-36(fp)
  80502c:	10800017 	ldw	r2,0(r2)
  805030:	e0bff515 	stw	r2,-44(fp)
  805034:	e0bff717 	ldw	r2,-36(fp)
  805038:	10800117 	ldw	r2,4(r2)
  80503c:	e0bff615 	stw	r2,-40(fp)
  805040:	e0bffb17 	ldw	r2,-20(fp)
  805044:	e0fffc17 	ldw	r3,-16(fp)
  805048:	10c03715 	stw	r3,220(r2)
  80504c:	e0bffb17 	ldw	r2,-20(fp)
  805050:	e0fffd17 	ldw	r3,-12(fp)
  805054:	10c03815 	stw	r3,224(r2)
  805058:	e0bffb17 	ldw	r2,-20(fp)
  80505c:	e0fffe17 	ldw	r3,-8(fp)
  805060:	10c03915 	stw	r3,228(r2)
  805064:	e0bff617 	ldw	r2,-40(fp)
  805068:	10000d1e 	bne	r2,zero,8050a0 <get_sof+0xa8>
  80506c:	e0bff717 	ldw	r2,-36(fp)
  805070:	10800317 	ldw	r2,12(r2)
  805074:	e13ffb17 	ldw	r4,-20(fp)
  805078:	103ee83a 	callr	r2
  80507c:	1000021e 	bne	r2,zero,805088 <get_sof+0x90>
  805080:	0005883a 	mov	r2,zero
  805084:	0001ec06 	br	805838 <get_sof+0x840>
  805088:	e0bff717 	ldw	r2,-36(fp)
  80508c:	10800017 	ldw	r2,0(r2)
  805090:	e0bff515 	stw	r2,-44(fp)
  805094:	e0bff717 	ldw	r2,-36(fp)
  805098:	10800117 	ldw	r2,4(r2)
  80509c:	e0bff615 	stw	r2,-40(fp)
  8050a0:	e0bff617 	ldw	r2,-40(fp)
  8050a4:	10bfffc4 	addi	r2,r2,-1
  8050a8:	e0bff615 	stw	r2,-40(fp)
  8050ac:	e0bff517 	ldw	r2,-44(fp)
  8050b0:	10c00044 	addi	r3,r2,1
  8050b4:	e0fff515 	stw	r3,-44(fp)
  8050b8:	10800003 	ldbu	r2,0(r2)
  8050bc:	10803fcc 	andi	r2,r2,255
  8050c0:	1004923a 	slli	r2,r2,8
  8050c4:	e0bff815 	stw	r2,-32(fp)
  8050c8:	e0bff617 	ldw	r2,-40(fp)
  8050cc:	10000d1e 	bne	r2,zero,805104 <get_sof+0x10c>
  8050d0:	e0bff717 	ldw	r2,-36(fp)
  8050d4:	10800317 	ldw	r2,12(r2)
  8050d8:	e13ffb17 	ldw	r4,-20(fp)
  8050dc:	103ee83a 	callr	r2
  8050e0:	1000021e 	bne	r2,zero,8050ec <get_sof+0xf4>
  8050e4:	0005883a 	mov	r2,zero
  8050e8:	0001d306 	br	805838 <get_sof+0x840>
  8050ec:	e0bff717 	ldw	r2,-36(fp)
  8050f0:	10800017 	ldw	r2,0(r2)
  8050f4:	e0bff515 	stw	r2,-44(fp)
  8050f8:	e0bff717 	ldw	r2,-36(fp)
  8050fc:	10800117 	ldw	r2,4(r2)
  805100:	e0bff615 	stw	r2,-40(fp)
  805104:	e0bff617 	ldw	r2,-40(fp)
  805108:	10bfffc4 	addi	r2,r2,-1
  80510c:	e0bff615 	stw	r2,-40(fp)
  805110:	e0bff517 	ldw	r2,-44(fp)
  805114:	10c00044 	addi	r3,r2,1
  805118:	e0fff515 	stw	r3,-44(fp)
  80511c:	10800003 	ldbu	r2,0(r2)
  805120:	10803fcc 	andi	r2,r2,255
  805124:	e0fff817 	ldw	r3,-32(fp)
  805128:	1885883a 	add	r2,r3,r2
  80512c:	e0bff815 	stw	r2,-32(fp)
  805130:	e0bff617 	ldw	r2,-40(fp)
  805134:	10000d1e 	bne	r2,zero,80516c <get_sof+0x174>
  805138:	e0bff717 	ldw	r2,-36(fp)
  80513c:	10800317 	ldw	r2,12(r2)
  805140:	e13ffb17 	ldw	r4,-20(fp)
  805144:	103ee83a 	callr	r2
  805148:	1000021e 	bne	r2,zero,805154 <get_sof+0x15c>
  80514c:	0005883a 	mov	r2,zero
  805150:	0001b906 	br	805838 <get_sof+0x840>
  805154:	e0bff717 	ldw	r2,-36(fp)
  805158:	10800017 	ldw	r2,0(r2)
  80515c:	e0bff515 	stw	r2,-44(fp)
  805160:	e0bff717 	ldw	r2,-36(fp)
  805164:	10800117 	ldw	r2,4(r2)
  805168:	e0bff615 	stw	r2,-40(fp)
  80516c:	e0bff617 	ldw	r2,-40(fp)
  805170:	10bfffc4 	addi	r2,r2,-1
  805174:	e0bff615 	stw	r2,-40(fp)
  805178:	e0bff517 	ldw	r2,-44(fp)
  80517c:	10c00044 	addi	r3,r2,1
  805180:	e0fff515 	stw	r3,-44(fp)
  805184:	10800003 	ldbu	r2,0(r2)
  805188:	10c03fcc 	andi	r3,r2,255
  80518c:	e0bffb17 	ldw	r2,-20(fp)
  805190:	10c03515 	stw	r3,212(r2)
  805194:	e0bff617 	ldw	r2,-40(fp)
  805198:	10000d1e 	bne	r2,zero,8051d0 <get_sof+0x1d8>
  80519c:	e0bff717 	ldw	r2,-36(fp)
  8051a0:	10800317 	ldw	r2,12(r2)
  8051a4:	e13ffb17 	ldw	r4,-20(fp)
  8051a8:	103ee83a 	callr	r2
  8051ac:	1000021e 	bne	r2,zero,8051b8 <get_sof+0x1c0>
  8051b0:	0005883a 	mov	r2,zero
  8051b4:	0001a006 	br	805838 <get_sof+0x840>
  8051b8:	e0bff717 	ldw	r2,-36(fp)
  8051bc:	10800017 	ldw	r2,0(r2)
  8051c0:	e0bff515 	stw	r2,-44(fp)
  8051c4:	e0bff717 	ldw	r2,-36(fp)
  8051c8:	10800117 	ldw	r2,4(r2)
  8051cc:	e0bff615 	stw	r2,-40(fp)
  8051d0:	e0bff617 	ldw	r2,-40(fp)
  8051d4:	10bfffc4 	addi	r2,r2,-1
  8051d8:	e0bff615 	stw	r2,-40(fp)
  8051dc:	e0bff517 	ldw	r2,-44(fp)
  8051e0:	10c00044 	addi	r3,r2,1
  8051e4:	e0fff515 	stw	r3,-44(fp)
  8051e8:	10800003 	ldbu	r2,0(r2)
  8051ec:	10803fcc 	andi	r2,r2,255
  8051f0:	1006923a 	slli	r3,r2,8
  8051f4:	e0bffb17 	ldw	r2,-20(fp)
  8051f8:	10c00815 	stw	r3,32(r2)
  8051fc:	e0bff617 	ldw	r2,-40(fp)
  805200:	10000d1e 	bne	r2,zero,805238 <get_sof+0x240>
  805204:	e0bff717 	ldw	r2,-36(fp)
  805208:	10800317 	ldw	r2,12(r2)
  80520c:	e13ffb17 	ldw	r4,-20(fp)
  805210:	103ee83a 	callr	r2
  805214:	1000021e 	bne	r2,zero,805220 <get_sof+0x228>
  805218:	0005883a 	mov	r2,zero
  80521c:	00018606 	br	805838 <get_sof+0x840>
  805220:	e0bff717 	ldw	r2,-36(fp)
  805224:	10800017 	ldw	r2,0(r2)
  805228:	e0bff515 	stw	r2,-44(fp)
  80522c:	e0bff717 	ldw	r2,-36(fp)
  805230:	10800117 	ldw	r2,4(r2)
  805234:	e0bff615 	stw	r2,-40(fp)
  805238:	e0bff617 	ldw	r2,-40(fp)
  80523c:	10bfffc4 	addi	r2,r2,-1
  805240:	e0bff615 	stw	r2,-40(fp)
  805244:	e0bff517 	ldw	r2,-44(fp)
  805248:	10c00044 	addi	r3,r2,1
  80524c:	e0fff515 	stw	r3,-44(fp)
  805250:	11000003 	ldbu	r4,0(r2)
  805254:	e0bffb17 	ldw	r2,-20(fp)
  805258:	10c00817 	ldw	r3,32(r2)
  80525c:	20803fcc 	andi	r2,r4,255
  805260:	1887883a 	add	r3,r3,r2
  805264:	e0bffb17 	ldw	r2,-20(fp)
  805268:	10c00815 	stw	r3,32(r2)
  80526c:	e0bff617 	ldw	r2,-40(fp)
  805270:	10000d1e 	bne	r2,zero,8052a8 <get_sof+0x2b0>
  805274:	e0bff717 	ldw	r2,-36(fp)
  805278:	10800317 	ldw	r2,12(r2)
  80527c:	e13ffb17 	ldw	r4,-20(fp)
  805280:	103ee83a 	callr	r2
  805284:	1000021e 	bne	r2,zero,805290 <get_sof+0x298>
  805288:	0005883a 	mov	r2,zero
  80528c:	00016a06 	br	805838 <get_sof+0x840>
  805290:	e0bff717 	ldw	r2,-36(fp)
  805294:	10800017 	ldw	r2,0(r2)
  805298:	e0bff515 	stw	r2,-44(fp)
  80529c:	e0bff717 	ldw	r2,-36(fp)
  8052a0:	10800117 	ldw	r2,4(r2)
  8052a4:	e0bff615 	stw	r2,-40(fp)
  8052a8:	e0bff617 	ldw	r2,-40(fp)
  8052ac:	10bfffc4 	addi	r2,r2,-1
  8052b0:	e0bff615 	stw	r2,-40(fp)
  8052b4:	e0bff517 	ldw	r2,-44(fp)
  8052b8:	10c00044 	addi	r3,r2,1
  8052bc:	e0fff515 	stw	r3,-44(fp)
  8052c0:	10800003 	ldbu	r2,0(r2)
  8052c4:	10803fcc 	andi	r2,r2,255
  8052c8:	1006923a 	slli	r3,r2,8
  8052cc:	e0bffb17 	ldw	r2,-20(fp)
  8052d0:	10c00715 	stw	r3,28(r2)
  8052d4:	e0bff617 	ldw	r2,-40(fp)
  8052d8:	10000d1e 	bne	r2,zero,805310 <get_sof+0x318>
  8052dc:	e0bff717 	ldw	r2,-36(fp)
  8052e0:	10800317 	ldw	r2,12(r2)
  8052e4:	e13ffb17 	ldw	r4,-20(fp)
  8052e8:	103ee83a 	callr	r2
  8052ec:	1000021e 	bne	r2,zero,8052f8 <get_sof+0x300>
  8052f0:	0005883a 	mov	r2,zero
  8052f4:	00015006 	br	805838 <get_sof+0x840>
  8052f8:	e0bff717 	ldw	r2,-36(fp)
  8052fc:	10800017 	ldw	r2,0(r2)
  805300:	e0bff515 	stw	r2,-44(fp)
  805304:	e0bff717 	ldw	r2,-36(fp)
  805308:	10800117 	ldw	r2,4(r2)
  80530c:	e0bff615 	stw	r2,-40(fp)
  805310:	e0bff617 	ldw	r2,-40(fp)
  805314:	10bfffc4 	addi	r2,r2,-1
  805318:	e0bff615 	stw	r2,-40(fp)
  80531c:	e0bff517 	ldw	r2,-44(fp)
  805320:	10c00044 	addi	r3,r2,1
  805324:	e0fff515 	stw	r3,-44(fp)
  805328:	11000003 	ldbu	r4,0(r2)
  80532c:	e0bffb17 	ldw	r2,-20(fp)
  805330:	10c00717 	ldw	r3,28(r2)
  805334:	20803fcc 	andi	r2,r4,255
  805338:	1887883a 	add	r3,r3,r2
  80533c:	e0bffb17 	ldw	r2,-20(fp)
  805340:	10c00715 	stw	r3,28(r2)
  805344:	e0bff617 	ldw	r2,-40(fp)
  805348:	10000d1e 	bne	r2,zero,805380 <get_sof+0x388>
  80534c:	e0bff717 	ldw	r2,-36(fp)
  805350:	10800317 	ldw	r2,12(r2)
  805354:	e13ffb17 	ldw	r4,-20(fp)
  805358:	103ee83a 	callr	r2
  80535c:	1000021e 	bne	r2,zero,805368 <get_sof+0x370>
  805360:	0005883a 	mov	r2,zero
  805364:	00013406 	br	805838 <get_sof+0x840>
  805368:	e0bff717 	ldw	r2,-36(fp)
  80536c:	10800017 	ldw	r2,0(r2)
  805370:	e0bff515 	stw	r2,-44(fp)
  805374:	e0bff717 	ldw	r2,-36(fp)
  805378:	10800117 	ldw	r2,4(r2)
  80537c:	e0bff615 	stw	r2,-40(fp)
  805380:	e0bff617 	ldw	r2,-40(fp)
  805384:	10bfffc4 	addi	r2,r2,-1
  805388:	e0bff615 	stw	r2,-40(fp)
  80538c:	e0bff517 	ldw	r2,-44(fp)
  805390:	10c00044 	addi	r3,r2,1
  805394:	e0fff515 	stw	r3,-44(fp)
  805398:	10800003 	ldbu	r2,0(r2)
  80539c:	10c03fcc 	andi	r3,r2,255
  8053a0:	e0bffb17 	ldw	r2,-20(fp)
  8053a4:	10c00915 	stw	r3,36(r2)
  8053a8:	e0bff817 	ldw	r2,-32(fp)
  8053ac:	10bffe04 	addi	r2,r2,-8
  8053b0:	e0bff815 	stw	r2,-32(fp)
  8053b4:	e0bffb17 	ldw	r2,-20(fp)
  8053b8:	10800017 	ldw	r2,0(r2)
  8053bc:	10800604 	addi	r2,r2,24
  8053c0:	e0bff915 	stw	r2,-28(fp)
  8053c4:	e0bffb17 	ldw	r2,-20(fp)
  8053c8:	10c06e17 	ldw	r3,440(r2)
  8053cc:	e0bff917 	ldw	r2,-28(fp)
  8053d0:	10c00015 	stw	r3,0(r2)
  8053d4:	e0bff917 	ldw	r2,-28(fp)
  8053d8:	10800104 	addi	r2,r2,4
  8053dc:	e0fffb17 	ldw	r3,-20(fp)
  8053e0:	18c00717 	ldw	r3,28(r3)
  8053e4:	10c00015 	stw	r3,0(r2)
  8053e8:	e0bff917 	ldw	r2,-28(fp)
  8053ec:	10800204 	addi	r2,r2,8
  8053f0:	e0fffb17 	ldw	r3,-20(fp)
  8053f4:	18c00817 	ldw	r3,32(r3)
  8053f8:	10c00015 	stw	r3,0(r2)
  8053fc:	e0bff917 	ldw	r2,-28(fp)
  805400:	10800304 	addi	r2,r2,12
  805404:	e0fffb17 	ldw	r3,-20(fp)
  805408:	18c00917 	ldw	r3,36(r3)
  80540c:	10c00015 	stw	r3,0(r2)
  805410:	e0bffb17 	ldw	r2,-20(fp)
  805414:	10800017 	ldw	r2,0(r2)
  805418:	00c01984 	movi	r3,102
  80541c:	10c00515 	stw	r3,20(r2)
  805420:	e0bffb17 	ldw	r2,-20(fp)
  805424:	10800017 	ldw	r2,0(r2)
  805428:	10800117 	ldw	r2,4(r2)
  80542c:	01400044 	movi	r5,1
  805430:	e13ffb17 	ldw	r4,-20(fp)
  805434:	103ee83a 	callr	r2
  805438:	e0bffb17 	ldw	r2,-20(fp)
  80543c:	10807417 	ldw	r2,464(r2)
  805440:	10800417 	ldw	r2,16(r2)
  805444:	10000926 	beq	r2,zero,80546c <get_sof+0x474>
  805448:	e0bffb17 	ldw	r2,-20(fp)
  80544c:	10800017 	ldw	r2,0(r2)
  805450:	00c00f44 	movi	r3,61
  805454:	10c00515 	stw	r3,20(r2)
  805458:	e0bffb17 	ldw	r2,-20(fp)
  80545c:	10800017 	ldw	r2,0(r2)
  805460:	10800017 	ldw	r2,0(r2)
  805464:	e13ffb17 	ldw	r4,-20(fp)
  805468:	103ee83a 	callr	r2
  80546c:	e0bffb17 	ldw	r2,-20(fp)
  805470:	10800817 	ldw	r2,32(r2)
  805474:	10000626 	beq	r2,zero,805490 <get_sof+0x498>
  805478:	e0bffb17 	ldw	r2,-20(fp)
  80547c:	10800717 	ldw	r2,28(r2)
  805480:	10000326 	beq	r2,zero,805490 <get_sof+0x498>
  805484:	e0bffb17 	ldw	r2,-20(fp)
  805488:	10800917 	ldw	r2,36(r2)
  80548c:	00800916 	blt	zero,r2,8054b4 <get_sof+0x4bc>
  805490:	e0bffb17 	ldw	r2,-20(fp)
  805494:	10800017 	ldw	r2,0(r2)
  805498:	00c00844 	movi	r3,33
  80549c:	10c00515 	stw	r3,20(r2)
  8054a0:	e0bffb17 	ldw	r2,-20(fp)
  8054a4:	10800017 	ldw	r2,0(r2)
  8054a8:	10800017 	ldw	r2,0(r2)
  8054ac:	e13ffb17 	ldw	r4,-20(fp)
  8054b0:	103ee83a 	callr	r2
  8054b4:	e0bffb17 	ldw	r2,-20(fp)
  8054b8:	10c00917 	ldw	r3,36(r2)
  8054bc:	1805883a 	mov	r2,r3
  8054c0:	1085883a 	add	r2,r2,r2
  8054c4:	10c7883a 	add	r3,r2,r3
  8054c8:	e0bff817 	ldw	r2,-32(fp)
  8054cc:	18800926 	beq	r3,r2,8054f4 <get_sof+0x4fc>
  8054d0:	e0bffb17 	ldw	r2,-20(fp)
  8054d4:	10800017 	ldw	r2,0(r2)
  8054d8:	00c00304 	movi	r3,12
  8054dc:	10c00515 	stw	r3,20(r2)
  8054e0:	e0bffb17 	ldw	r2,-20(fp)
  8054e4:	10800017 	ldw	r2,0(r2)
  8054e8:	10800017 	ldw	r2,0(r2)
  8054ec:	e13ffb17 	ldw	r4,-20(fp)
  8054f0:	103ee83a 	callr	r2
  8054f4:	e0bffb17 	ldw	r2,-20(fp)
  8054f8:	10803617 	ldw	r2,216(r2)
  8054fc:	10000f1e 	bne	r2,zero,80553c <get_sof+0x544>
  805500:	e0bffb17 	ldw	r2,-20(fp)
  805504:	10800117 	ldw	r2,4(r2)
  805508:	14000017 	ldw	r16,0(r2)
  80550c:	e0bffb17 	ldw	r2,-20(fp)
  805510:	10800917 	ldw	r2,36(r2)
  805514:	01401604 	movi	r5,88
  805518:	1009883a 	mov	r4,r2
  80551c:	08301e80 	call	8301e8 <__mulsi3>
  805520:	100d883a 	mov	r6,r2
  805524:	01400044 	movi	r5,1
  805528:	e13ffb17 	ldw	r4,-20(fp)
  80552c:	803ee83a 	callr	r16
  805530:	1007883a 	mov	r3,r2
  805534:	e0bffb17 	ldw	r2,-20(fp)
  805538:	10c03615 	stw	r3,216(r2)
  80553c:	e03ff215 	stw	zero,-56(fp)
  805540:	0000ae06 	br	8057fc <get_sof+0x804>
  805544:	e0bff617 	ldw	r2,-40(fp)
  805548:	10000d1e 	bne	r2,zero,805580 <get_sof+0x588>
  80554c:	e0bff717 	ldw	r2,-36(fp)
  805550:	10800317 	ldw	r2,12(r2)
  805554:	e13ffb17 	ldw	r4,-20(fp)
  805558:	103ee83a 	callr	r2
  80555c:	1000021e 	bne	r2,zero,805568 <get_sof+0x570>
  805560:	0005883a 	mov	r2,zero
  805564:	0000b406 	br	805838 <get_sof+0x840>
  805568:	e0bff717 	ldw	r2,-36(fp)
  80556c:	10800017 	ldw	r2,0(r2)
  805570:	e0bff515 	stw	r2,-44(fp)
  805574:	e0bff717 	ldw	r2,-36(fp)
  805578:	10800117 	ldw	r2,4(r2)
  80557c:	e0bff615 	stw	r2,-40(fp)
  805580:	e0bff617 	ldw	r2,-40(fp)
  805584:	10bfffc4 	addi	r2,r2,-1
  805588:	e0bff615 	stw	r2,-40(fp)
  80558c:	e0bff517 	ldw	r2,-44(fp)
  805590:	10c00044 	addi	r3,r2,1
  805594:	e0fff515 	stw	r3,-44(fp)
  805598:	10800003 	ldbu	r2,0(r2)
  80559c:	10803fcc 	andi	r2,r2,255
  8055a0:	e0bff115 	stw	r2,-60(fp)
  8055a4:	e03ff315 	stw	zero,-52(fp)
  8055a8:	e0bffb17 	ldw	r2,-20(fp)
  8055ac:	10803617 	ldw	r2,216(r2)
  8055b0:	e0bff415 	stw	r2,-48(fp)
  8055b4:	00002a06 	br	805660 <get_sof+0x668>
  8055b8:	e0bff417 	ldw	r2,-48(fp)
  8055bc:	10c00017 	ldw	r3,0(r2)
  8055c0:	e0bff117 	ldw	r2,-60(fp)
  8055c4:	1880201e 	bne	r3,r2,805648 <get_sof+0x650>
  8055c8:	e0bffb17 	ldw	r2,-20(fp)
  8055cc:	10803617 	ldw	r2,216(r2)
  8055d0:	e0bff415 	stw	r2,-48(fp)
  8055d4:	e0bff417 	ldw	r2,-48(fp)
  8055d8:	10800017 	ldw	r2,0(r2)
  8055dc:	e0bff115 	stw	r2,-60(fp)
  8055e0:	e0bff417 	ldw	r2,-48(fp)
  8055e4:	10801604 	addi	r2,r2,88
  8055e8:	e0bff415 	stw	r2,-48(fp)
  8055ec:	00800044 	movi	r2,1
  8055f0:	e0bff315 	stw	r2,-52(fp)
  8055f4:	00000d06 	br	80562c <get_sof+0x634>
  8055f8:	e0bff417 	ldw	r2,-48(fp)
  8055fc:	10800017 	ldw	r2,0(r2)
  805600:	e0fff117 	ldw	r3,-60(fp)
  805604:	1880030e 	bge	r3,r2,805614 <get_sof+0x61c>
  805608:	e0bff417 	ldw	r2,-48(fp)
  80560c:	10800017 	ldw	r2,0(r2)
  805610:	e0bff115 	stw	r2,-60(fp)
  805614:	e0bff317 	ldw	r2,-52(fp)
  805618:	10800044 	addi	r2,r2,1
  80561c:	e0bff315 	stw	r2,-52(fp)
  805620:	e0bff417 	ldw	r2,-48(fp)
  805624:	10801604 	addi	r2,r2,88
  805628:	e0bff415 	stw	r2,-48(fp)
  80562c:	e0fff317 	ldw	r3,-52(fp)
  805630:	e0bff217 	ldw	r2,-56(fp)
  805634:	18bff016 	blt	r3,r2,8055f8 <__alt_mem_epcs_flash_controller_0+0xff7fc5f8>
  805638:	e0bff117 	ldw	r2,-60(fp)
  80563c:	10800044 	addi	r2,r2,1
  805640:	e0bff115 	stw	r2,-60(fp)
  805644:	00000906 	br	80566c <get_sof+0x674>
  805648:	e0bff317 	ldw	r2,-52(fp)
  80564c:	10800044 	addi	r2,r2,1
  805650:	e0bff315 	stw	r2,-52(fp)
  805654:	e0bff417 	ldw	r2,-48(fp)
  805658:	10801604 	addi	r2,r2,88
  80565c:	e0bff415 	stw	r2,-48(fp)
  805660:	e0fff317 	ldw	r3,-52(fp)
  805664:	e0bff217 	ldw	r2,-56(fp)
  805668:	18bfd316 	blt	r3,r2,8055b8 <__alt_mem_epcs_flash_controller_0+0xff7fc5b8>
  80566c:	e0bff417 	ldw	r2,-48(fp)
  805670:	e0fff117 	ldw	r3,-60(fp)
  805674:	10c00015 	stw	r3,0(r2)
  805678:	e0bff417 	ldw	r2,-48(fp)
  80567c:	e0fff217 	ldw	r3,-56(fp)
  805680:	10c00115 	stw	r3,4(r2)
  805684:	e0bff617 	ldw	r2,-40(fp)
  805688:	10000d1e 	bne	r2,zero,8056c0 <get_sof+0x6c8>
  80568c:	e0bff717 	ldw	r2,-36(fp)
  805690:	10800317 	ldw	r2,12(r2)
  805694:	e13ffb17 	ldw	r4,-20(fp)
  805698:	103ee83a 	callr	r2
  80569c:	1000021e 	bne	r2,zero,8056a8 <get_sof+0x6b0>
  8056a0:	0005883a 	mov	r2,zero
  8056a4:	00006406 	br	805838 <get_sof+0x840>
  8056a8:	e0bff717 	ldw	r2,-36(fp)
  8056ac:	10800017 	ldw	r2,0(r2)
  8056b0:	e0bff515 	stw	r2,-44(fp)
  8056b4:	e0bff717 	ldw	r2,-36(fp)
  8056b8:	10800117 	ldw	r2,4(r2)
  8056bc:	e0bff615 	stw	r2,-40(fp)
  8056c0:	e0bff617 	ldw	r2,-40(fp)
  8056c4:	10bfffc4 	addi	r2,r2,-1
  8056c8:	e0bff615 	stw	r2,-40(fp)
  8056cc:	e0bff517 	ldw	r2,-44(fp)
  8056d0:	10c00044 	addi	r3,r2,1
  8056d4:	e0fff515 	stw	r3,-44(fp)
  8056d8:	10800003 	ldbu	r2,0(r2)
  8056dc:	10803fcc 	andi	r2,r2,255
  8056e0:	e0bff115 	stw	r2,-60(fp)
  8056e4:	e0bff117 	ldw	r2,-60(fp)
  8056e8:	1005d13a 	srai	r2,r2,4
  8056ec:	10c003cc 	andi	r3,r2,15
  8056f0:	e0bff417 	ldw	r2,-48(fp)
  8056f4:	10c00215 	stw	r3,8(r2)
  8056f8:	e0bff117 	ldw	r2,-60(fp)
  8056fc:	10c003cc 	andi	r3,r2,15
  805700:	e0bff417 	ldw	r2,-48(fp)
  805704:	10c00315 	stw	r3,12(r2)
  805708:	e0bff617 	ldw	r2,-40(fp)
  80570c:	10000d1e 	bne	r2,zero,805744 <get_sof+0x74c>
  805710:	e0bff717 	ldw	r2,-36(fp)
  805714:	10800317 	ldw	r2,12(r2)
  805718:	e13ffb17 	ldw	r4,-20(fp)
  80571c:	103ee83a 	callr	r2
  805720:	1000021e 	bne	r2,zero,80572c <get_sof+0x734>
  805724:	0005883a 	mov	r2,zero
  805728:	00004306 	br	805838 <get_sof+0x840>
  80572c:	e0bff717 	ldw	r2,-36(fp)
  805730:	10800017 	ldw	r2,0(r2)
  805734:	e0bff515 	stw	r2,-44(fp)
  805738:	e0bff717 	ldw	r2,-36(fp)
  80573c:	10800117 	ldw	r2,4(r2)
  805740:	e0bff615 	stw	r2,-40(fp)
  805744:	e0bff617 	ldw	r2,-40(fp)
  805748:	10bfffc4 	addi	r2,r2,-1
  80574c:	e0bff615 	stw	r2,-40(fp)
  805750:	e0bff517 	ldw	r2,-44(fp)
  805754:	10c00044 	addi	r3,r2,1
  805758:	e0fff515 	stw	r3,-44(fp)
  80575c:	10800003 	ldbu	r2,0(r2)
  805760:	10c03fcc 	andi	r3,r2,255
  805764:	e0bff417 	ldw	r2,-48(fp)
  805768:	10c00415 	stw	r3,16(r2)
  80576c:	e0bffb17 	ldw	r2,-20(fp)
  805770:	10800017 	ldw	r2,0(r2)
  805774:	10800604 	addi	r2,r2,24
  805778:	e0bffa15 	stw	r2,-24(fp)
  80577c:	e0bff417 	ldw	r2,-48(fp)
  805780:	10c00017 	ldw	r3,0(r2)
  805784:	e0bffa17 	ldw	r2,-24(fp)
  805788:	10c00015 	stw	r3,0(r2)
  80578c:	e0bffa17 	ldw	r2,-24(fp)
  805790:	10800104 	addi	r2,r2,4
  805794:	e0fff417 	ldw	r3,-48(fp)
  805798:	18c00217 	ldw	r3,8(r3)
  80579c:	10c00015 	stw	r3,0(r2)
  8057a0:	e0bffa17 	ldw	r2,-24(fp)
  8057a4:	10800204 	addi	r2,r2,8
  8057a8:	e0fff417 	ldw	r3,-48(fp)
  8057ac:	18c00317 	ldw	r3,12(r3)
  8057b0:	10c00015 	stw	r3,0(r2)
  8057b4:	e0bffa17 	ldw	r2,-24(fp)
  8057b8:	10800304 	addi	r2,r2,12
  8057bc:	e0fff417 	ldw	r3,-48(fp)
  8057c0:	18c00417 	ldw	r3,16(r3)
  8057c4:	10c00015 	stw	r3,0(r2)
  8057c8:	e0bffb17 	ldw	r2,-20(fp)
  8057cc:	10800017 	ldw	r2,0(r2)
  8057d0:	00c019c4 	movi	r3,103
  8057d4:	10c00515 	stw	r3,20(r2)
  8057d8:	e0bffb17 	ldw	r2,-20(fp)
  8057dc:	10800017 	ldw	r2,0(r2)
  8057e0:	10800117 	ldw	r2,4(r2)
  8057e4:	01400044 	movi	r5,1
  8057e8:	e13ffb17 	ldw	r4,-20(fp)
  8057ec:	103ee83a 	callr	r2
  8057f0:	e0bff217 	ldw	r2,-56(fp)
  8057f4:	10800044 	addi	r2,r2,1
  8057f8:	e0bff215 	stw	r2,-56(fp)
  8057fc:	e0bffb17 	ldw	r2,-20(fp)
  805800:	10800917 	ldw	r2,36(r2)
  805804:	e0fff217 	ldw	r3,-56(fp)
  805808:	18bf4e16 	blt	r3,r2,805544 <__alt_mem_epcs_flash_controller_0+0xff7fc544>
  80580c:	e0bffb17 	ldw	r2,-20(fp)
  805810:	10807417 	ldw	r2,464(r2)
  805814:	00c00044 	movi	r3,1
  805818:	10c00415 	stw	r3,16(r2)
  80581c:	e0bff717 	ldw	r2,-36(fp)
  805820:	e0fff517 	ldw	r3,-44(fp)
  805824:	10c00015 	stw	r3,0(r2)
  805828:	e0bff717 	ldw	r2,-36(fp)
  80582c:	e0fff617 	ldw	r3,-40(fp)
  805830:	10c00115 	stw	r3,4(r2)
  805834:	00800044 	movi	r2,1
  805838:	e6ffff04 	addi	sp,fp,-4
  80583c:	dfc00217 	ldw	ra,8(sp)
  805840:	df000117 	ldw	fp,4(sp)
  805844:	dc000017 	ldw	r16,0(sp)
  805848:	dec00304 	addi	sp,sp,12
  80584c:	f800283a 	ret

00805850 <get_sos>:
  805850:	defff204 	addi	sp,sp,-56
  805854:	dfc00d15 	stw	ra,52(sp)
  805858:	df000c15 	stw	fp,48(sp)
  80585c:	df000c04 	addi	fp,sp,48
  805860:	e13fff15 	stw	r4,-4(fp)
  805864:	e0bfff17 	ldw	r2,-4(fp)
  805868:	10800617 	ldw	r2,24(r2)
  80586c:	e0bffa15 	stw	r2,-24(fp)
  805870:	e0bffa17 	ldw	r2,-24(fp)
  805874:	10800017 	ldw	r2,0(r2)
  805878:	e0bff815 	stw	r2,-32(fp)
  80587c:	e0bffa17 	ldw	r2,-24(fp)
  805880:	10800117 	ldw	r2,4(r2)
  805884:	e0bff915 	stw	r2,-28(fp)
  805888:	e0bfff17 	ldw	r2,-4(fp)
  80588c:	10807417 	ldw	r2,464(r2)
  805890:	10800417 	ldw	r2,16(r2)
  805894:	1000111e 	bne	r2,zero,8058dc <get_sos+0x8c>
  805898:	e0bfff17 	ldw	r2,-4(fp)
  80589c:	10800017 	ldw	r2,0(r2)
  8058a0:	00c00f04 	movi	r3,60
  8058a4:	10c00515 	stw	r3,20(r2)
  8058a8:	e0bfff17 	ldw	r2,-4(fp)
  8058ac:	10800017 	ldw	r2,0(r2)
  8058b0:	10800604 	addi	r2,r2,24
  8058b4:	01801404 	movi	r6,80
  8058b8:	01402174 	movhi	r5,133
  8058bc:	295d6d04 	addi	r5,r5,30132
  8058c0:	1009883a 	mov	r4,r2
  8058c4:	08352780 	call	835278 <strncpy>
  8058c8:	e0bfff17 	ldw	r2,-4(fp)
  8058cc:	10800017 	ldw	r2,0(r2)
  8058d0:	10800017 	ldw	r2,0(r2)
  8058d4:	e13fff17 	ldw	r4,-4(fp)
  8058d8:	103ee83a 	callr	r2
  8058dc:	e0bff917 	ldw	r2,-28(fp)
  8058e0:	10000d1e 	bne	r2,zero,805918 <get_sos+0xc8>
  8058e4:	e0bffa17 	ldw	r2,-24(fp)
  8058e8:	10800317 	ldw	r2,12(r2)
  8058ec:	e13fff17 	ldw	r4,-4(fp)
  8058f0:	103ee83a 	callr	r2
  8058f4:	1000021e 	bne	r2,zero,805900 <get_sos+0xb0>
  8058f8:	0005883a 	mov	r2,zero
  8058fc:	0001ac06 	br	805fb0 <get_sos+0x760>
  805900:	e0bffa17 	ldw	r2,-24(fp)
  805904:	10800017 	ldw	r2,0(r2)
  805908:	e0bff815 	stw	r2,-32(fp)
  80590c:	e0bffa17 	ldw	r2,-24(fp)
  805910:	10800117 	ldw	r2,4(r2)
  805914:	e0bff915 	stw	r2,-28(fp)
  805918:	e0bff917 	ldw	r2,-28(fp)
  80591c:	10bfffc4 	addi	r2,r2,-1
  805920:	e0bff915 	stw	r2,-28(fp)
  805924:	e0bff817 	ldw	r2,-32(fp)
  805928:	10c00044 	addi	r3,r2,1
  80592c:	e0fff815 	stw	r3,-32(fp)
  805930:	10800003 	ldbu	r2,0(r2)
  805934:	10803fcc 	andi	r2,r2,255
  805938:	1004923a 	slli	r2,r2,8
  80593c:	e0bffb15 	stw	r2,-20(fp)
  805940:	e0bff917 	ldw	r2,-28(fp)
  805944:	10000d1e 	bne	r2,zero,80597c <get_sos+0x12c>
  805948:	e0bffa17 	ldw	r2,-24(fp)
  80594c:	10800317 	ldw	r2,12(r2)
  805950:	e13fff17 	ldw	r4,-4(fp)
  805954:	103ee83a 	callr	r2
  805958:	1000021e 	bne	r2,zero,805964 <get_sos+0x114>
  80595c:	0005883a 	mov	r2,zero
  805960:	00019306 	br	805fb0 <get_sos+0x760>
  805964:	e0bffa17 	ldw	r2,-24(fp)
  805968:	10800017 	ldw	r2,0(r2)
  80596c:	e0bff815 	stw	r2,-32(fp)
  805970:	e0bffa17 	ldw	r2,-24(fp)
  805974:	10800117 	ldw	r2,4(r2)
  805978:	e0bff915 	stw	r2,-28(fp)
  80597c:	e0bff917 	ldw	r2,-28(fp)
  805980:	10bfffc4 	addi	r2,r2,-1
  805984:	e0bff915 	stw	r2,-28(fp)
  805988:	e0bff817 	ldw	r2,-32(fp)
  80598c:	10c00044 	addi	r3,r2,1
  805990:	e0fff815 	stw	r3,-32(fp)
  805994:	10800003 	ldbu	r2,0(r2)
  805998:	10803fcc 	andi	r2,r2,255
  80599c:	e0fffb17 	ldw	r3,-20(fp)
  8059a0:	1885883a 	add	r2,r3,r2
  8059a4:	e0bffb15 	stw	r2,-20(fp)
  8059a8:	e0bff917 	ldw	r2,-28(fp)
  8059ac:	10000d1e 	bne	r2,zero,8059e4 <get_sos+0x194>
  8059b0:	e0bffa17 	ldw	r2,-24(fp)
  8059b4:	10800317 	ldw	r2,12(r2)
  8059b8:	e13fff17 	ldw	r4,-4(fp)
  8059bc:	103ee83a 	callr	r2
  8059c0:	1000021e 	bne	r2,zero,8059cc <get_sos+0x17c>
  8059c4:	0005883a 	mov	r2,zero
  8059c8:	00017906 	br	805fb0 <get_sos+0x760>
  8059cc:	e0bffa17 	ldw	r2,-24(fp)
  8059d0:	10800017 	ldw	r2,0(r2)
  8059d4:	e0bff815 	stw	r2,-32(fp)
  8059d8:	e0bffa17 	ldw	r2,-24(fp)
  8059dc:	10800117 	ldw	r2,4(r2)
  8059e0:	e0bff915 	stw	r2,-28(fp)
  8059e4:	e0bff917 	ldw	r2,-28(fp)
  8059e8:	10bfffc4 	addi	r2,r2,-1
  8059ec:	e0bff915 	stw	r2,-28(fp)
  8059f0:	e0bff817 	ldw	r2,-32(fp)
  8059f4:	10c00044 	addi	r3,r2,1
  8059f8:	e0fff815 	stw	r3,-32(fp)
  8059fc:	10800003 	ldbu	r2,0(r2)
  805a00:	10803fcc 	andi	r2,r2,255
  805a04:	e0bffc15 	stw	r2,-16(fp)
  805a08:	e0bfff17 	ldw	r2,-4(fp)
  805a0c:	10800017 	ldw	r2,0(r2)
  805a10:	00c01a44 	movi	r3,105
  805a14:	10c00515 	stw	r3,20(r2)
  805a18:	e0bfff17 	ldw	r2,-4(fp)
  805a1c:	10800017 	ldw	r2,0(r2)
  805a20:	e0fffc17 	ldw	r3,-16(fp)
  805a24:	10c00615 	stw	r3,24(r2)
  805a28:	e0bfff17 	ldw	r2,-4(fp)
  805a2c:	10800017 	ldw	r2,0(r2)
  805a30:	10800117 	ldw	r2,4(r2)
  805a34:	01400044 	movi	r5,1
  805a38:	e13fff17 	ldw	r4,-4(fp)
  805a3c:	103ee83a 	callr	r2
  805a40:	e0bffc17 	ldw	r2,-16(fp)
  805a44:	108000c4 	addi	r2,r2,3
  805a48:	1085883a 	add	r2,r2,r2
  805a4c:	1007883a 	mov	r3,r2
  805a50:	e0bffb17 	ldw	r2,-20(fp)
  805a54:	1880081e 	bne	r3,r2,805a78 <get_sos+0x228>
  805a58:	e0bffc17 	ldw	r2,-16(fp)
  805a5c:	10800148 	cmpgei	r2,r2,5
  805a60:	1000051e 	bne	r2,zero,805a78 <get_sos+0x228>
  805a64:	e0bffc17 	ldw	r2,-16(fp)
  805a68:	10000c1e 	bne	r2,zero,805a9c <get_sos+0x24c>
  805a6c:	e0bfff17 	ldw	r2,-4(fp)
  805a70:	10803817 	ldw	r2,224(r2)
  805a74:	1000091e 	bne	r2,zero,805a9c <get_sos+0x24c>
  805a78:	e0bfff17 	ldw	r2,-4(fp)
  805a7c:	10800017 	ldw	r2,0(r2)
  805a80:	00c00304 	movi	r3,12
  805a84:	10c00515 	stw	r3,20(r2)
  805a88:	e0bfff17 	ldw	r2,-4(fp)
  805a8c:	10800017 	ldw	r2,0(r2)
  805a90:	10800017 	ldw	r2,0(r2)
  805a94:	e13fff17 	ldw	r4,-4(fp)
  805a98:	103ee83a 	callr	r2
  805a9c:	e0bfff17 	ldw	r2,-4(fp)
  805aa0:	e0fffc17 	ldw	r3,-16(fp)
  805aa4:	10c05515 	stw	r3,340(r2)
  805aa8:	e03ff615 	stw	zero,-40(fp)
  805aac:	0000b406 	br	805d80 <get_sos+0x530>
  805ab0:	e0bff917 	ldw	r2,-28(fp)
  805ab4:	10000d1e 	bne	r2,zero,805aec <get_sos+0x29c>
  805ab8:	e0bffa17 	ldw	r2,-24(fp)
  805abc:	10800317 	ldw	r2,12(r2)
  805ac0:	e13fff17 	ldw	r4,-4(fp)
  805ac4:	103ee83a 	callr	r2
  805ac8:	1000021e 	bne	r2,zero,805ad4 <get_sos+0x284>
  805acc:	0005883a 	mov	r2,zero
  805ad0:	00013706 	br	805fb0 <get_sos+0x760>
  805ad4:	e0bffa17 	ldw	r2,-24(fp)
  805ad8:	10800017 	ldw	r2,0(r2)
  805adc:	e0bff815 	stw	r2,-32(fp)
  805ae0:	e0bffa17 	ldw	r2,-24(fp)
  805ae4:	10800117 	ldw	r2,4(r2)
  805ae8:	e0bff915 	stw	r2,-28(fp)
  805aec:	e0bff917 	ldw	r2,-28(fp)
  805af0:	10bfffc4 	addi	r2,r2,-1
  805af4:	e0bff915 	stw	r2,-28(fp)
  805af8:	e0bff817 	ldw	r2,-32(fp)
  805afc:	10c00044 	addi	r3,r2,1
  805b00:	e0fff815 	stw	r3,-32(fp)
  805b04:	10800003 	ldbu	r2,0(r2)
  805b08:	10803fcc 	andi	r2,r2,255
  805b0c:	e0bff415 	stw	r2,-48(fp)
  805b10:	e03ff515 	stw	zero,-44(fp)
  805b14:	00002d06 	br	805bcc <get_sos+0x37c>
  805b18:	e0ffff17 	ldw	r3,-4(fp)
  805b1c:	e0bff517 	ldw	r2,-44(fp)
  805b20:	10801584 	addi	r2,r2,86
  805b24:	1085883a 	add	r2,r2,r2
  805b28:	1085883a 	add	r2,r2,r2
  805b2c:	1885883a 	add	r2,r3,r2
  805b30:	10800017 	ldw	r2,0(r2)
  805b34:	10c00017 	ldw	r3,0(r2)
  805b38:	e0bff417 	ldw	r2,-48(fp)
  805b3c:	1880201e 	bne	r3,r2,805bc0 <get_sos+0x370>
  805b40:	e0bfff17 	ldw	r2,-4(fp)
  805b44:	10805617 	ldw	r2,344(r2)
  805b48:	10800017 	ldw	r2,0(r2)
  805b4c:	e0bff415 	stw	r2,-48(fp)
  805b50:	00800044 	movi	r2,1
  805b54:	e0bff515 	stw	r2,-44(fp)
  805b58:	00001206 	br	805ba4 <get_sos+0x354>
  805b5c:	e0ffff17 	ldw	r3,-4(fp)
  805b60:	e0bff517 	ldw	r2,-44(fp)
  805b64:	10801584 	addi	r2,r2,86
  805b68:	1085883a 	add	r2,r2,r2
  805b6c:	1085883a 	add	r2,r2,r2
  805b70:	1885883a 	add	r2,r3,r2
  805b74:	10800017 	ldw	r2,0(r2)
  805b78:	e0bff715 	stw	r2,-36(fp)
  805b7c:	e0bff717 	ldw	r2,-36(fp)
  805b80:	10800017 	ldw	r2,0(r2)
  805b84:	e0fff417 	ldw	r3,-48(fp)
  805b88:	1880030e 	bge	r3,r2,805b98 <get_sos+0x348>
  805b8c:	e0bff717 	ldw	r2,-36(fp)
  805b90:	10800017 	ldw	r2,0(r2)
  805b94:	e0bff415 	stw	r2,-48(fp)
  805b98:	e0bff517 	ldw	r2,-44(fp)
  805b9c:	10800044 	addi	r2,r2,1
  805ba0:	e0bff515 	stw	r2,-44(fp)
  805ba4:	e0fff517 	ldw	r3,-44(fp)
  805ba8:	e0bff617 	ldw	r2,-40(fp)
  805bac:	18bfeb16 	blt	r3,r2,805b5c <__alt_mem_epcs_flash_controller_0+0xff7fcb5c>
  805bb0:	e0bff417 	ldw	r2,-48(fp)
  805bb4:	10800044 	addi	r2,r2,1
  805bb8:	e0bff415 	stw	r2,-48(fp)
  805bbc:	00000606 	br	805bd8 <get_sos+0x388>
  805bc0:	e0bff517 	ldw	r2,-44(fp)
  805bc4:	10800044 	addi	r2,r2,1
  805bc8:	e0bff515 	stw	r2,-44(fp)
  805bcc:	e0fff517 	ldw	r3,-44(fp)
  805bd0:	e0bff617 	ldw	r2,-40(fp)
  805bd4:	18bfd016 	blt	r3,r2,805b18 <__alt_mem_epcs_flash_controller_0+0xff7fcb18>
  805bd8:	e03ff515 	stw	zero,-44(fp)
  805bdc:	e0bfff17 	ldw	r2,-4(fp)
  805be0:	10803617 	ldw	r2,216(r2)
  805be4:	e0bff715 	stw	r2,-36(fp)
  805be8:	00000a06 	br	805c14 <get_sos+0x3c4>
  805bec:	e0bff717 	ldw	r2,-36(fp)
  805bf0:	10c00017 	ldw	r3,0(r2)
  805bf4:	e0bff417 	ldw	r2,-48(fp)
  805bf8:	18801826 	beq	r3,r2,805c5c <get_sos+0x40c>
  805bfc:	e0bff517 	ldw	r2,-44(fp)
  805c00:	10800044 	addi	r2,r2,1
  805c04:	e0bff515 	stw	r2,-44(fp)
  805c08:	e0bff717 	ldw	r2,-36(fp)
  805c0c:	10801604 	addi	r2,r2,88
  805c10:	e0bff715 	stw	r2,-36(fp)
  805c14:	e0bfff17 	ldw	r2,-4(fp)
  805c18:	10800917 	ldw	r2,36(r2)
  805c1c:	e0fff517 	ldw	r3,-44(fp)
  805c20:	18bff216 	blt	r3,r2,805bec <__alt_mem_epcs_flash_controller_0+0xff7fcbec>
  805c24:	e0bfff17 	ldw	r2,-4(fp)
  805c28:	10800017 	ldw	r2,0(r2)
  805c2c:	00c00104 	movi	r3,4
  805c30:	10c00515 	stw	r3,20(r2)
  805c34:	e0bfff17 	ldw	r2,-4(fp)
  805c38:	10800017 	ldw	r2,0(r2)
  805c3c:	e0fff417 	ldw	r3,-48(fp)
  805c40:	10c00615 	stw	r3,24(r2)
  805c44:	e0bfff17 	ldw	r2,-4(fp)
  805c48:	10800017 	ldw	r2,0(r2)
  805c4c:	10800017 	ldw	r2,0(r2)
  805c50:	e13fff17 	ldw	r4,-4(fp)
  805c54:	103ee83a 	callr	r2
  805c58:	00000106 	br	805c60 <get_sos+0x410>
  805c5c:	0001883a 	nop
  805c60:	e0ffff17 	ldw	r3,-4(fp)
  805c64:	e0bff617 	ldw	r2,-40(fp)
  805c68:	10801584 	addi	r2,r2,86
  805c6c:	1085883a 	add	r2,r2,r2
  805c70:	1085883a 	add	r2,r2,r2
  805c74:	1885883a 	add	r2,r3,r2
  805c78:	e0fff717 	ldw	r3,-36(fp)
  805c7c:	10c00015 	stw	r3,0(r2)
  805c80:	e0bff917 	ldw	r2,-28(fp)
  805c84:	10000d1e 	bne	r2,zero,805cbc <get_sos+0x46c>
  805c88:	e0bffa17 	ldw	r2,-24(fp)
  805c8c:	10800317 	ldw	r2,12(r2)
  805c90:	e13fff17 	ldw	r4,-4(fp)
  805c94:	103ee83a 	callr	r2
  805c98:	1000021e 	bne	r2,zero,805ca4 <get_sos+0x454>
  805c9c:	0005883a 	mov	r2,zero
  805ca0:	0000c306 	br	805fb0 <get_sos+0x760>
  805ca4:	e0bffa17 	ldw	r2,-24(fp)
  805ca8:	10800017 	ldw	r2,0(r2)
  805cac:	e0bff815 	stw	r2,-32(fp)
  805cb0:	e0bffa17 	ldw	r2,-24(fp)
  805cb4:	10800117 	ldw	r2,4(r2)
  805cb8:	e0bff915 	stw	r2,-28(fp)
  805cbc:	e0bff917 	ldw	r2,-28(fp)
  805cc0:	10bfffc4 	addi	r2,r2,-1
  805cc4:	e0bff915 	stw	r2,-28(fp)
  805cc8:	e0bff817 	ldw	r2,-32(fp)
  805ccc:	10c00044 	addi	r3,r2,1
  805cd0:	e0fff815 	stw	r3,-32(fp)
  805cd4:	10800003 	ldbu	r2,0(r2)
  805cd8:	10803fcc 	andi	r2,r2,255
  805cdc:	e0bff415 	stw	r2,-48(fp)
  805ce0:	e0bff417 	ldw	r2,-48(fp)
  805ce4:	1005d13a 	srai	r2,r2,4
  805ce8:	10c003cc 	andi	r3,r2,15
  805cec:	e0bff717 	ldw	r2,-36(fp)
  805cf0:	10c00515 	stw	r3,20(r2)
  805cf4:	e0bff417 	ldw	r2,-48(fp)
  805cf8:	10c003cc 	andi	r3,r2,15
  805cfc:	e0bff717 	ldw	r2,-36(fp)
  805d00:	10c00615 	stw	r3,24(r2)
  805d04:	e0bfff17 	ldw	r2,-4(fp)
  805d08:	10800017 	ldw	r2,0(r2)
  805d0c:	10800604 	addi	r2,r2,24
  805d10:	e0bffd15 	stw	r2,-12(fp)
  805d14:	e0bff717 	ldw	r2,-36(fp)
  805d18:	10c00017 	ldw	r3,0(r2)
  805d1c:	e0bffd17 	ldw	r2,-12(fp)
  805d20:	10c00015 	stw	r3,0(r2)
  805d24:	e0bffd17 	ldw	r2,-12(fp)
  805d28:	10800104 	addi	r2,r2,4
  805d2c:	e0fff717 	ldw	r3,-36(fp)
  805d30:	18c00517 	ldw	r3,20(r3)
  805d34:	10c00015 	stw	r3,0(r2)
  805d38:	e0bffd17 	ldw	r2,-12(fp)
  805d3c:	10800204 	addi	r2,r2,8
  805d40:	e0fff717 	ldw	r3,-36(fp)
  805d44:	18c00617 	ldw	r3,24(r3)
  805d48:	10c00015 	stw	r3,0(r2)
  805d4c:	e0bfff17 	ldw	r2,-4(fp)
  805d50:	10800017 	ldw	r2,0(r2)
  805d54:	00c01a84 	movi	r3,106
  805d58:	10c00515 	stw	r3,20(r2)
  805d5c:	e0bfff17 	ldw	r2,-4(fp)
  805d60:	10800017 	ldw	r2,0(r2)
  805d64:	10800117 	ldw	r2,4(r2)
  805d68:	01400044 	movi	r5,1
  805d6c:	e13fff17 	ldw	r4,-4(fp)
  805d70:	103ee83a 	callr	r2
  805d74:	e0bff617 	ldw	r2,-40(fp)
  805d78:	10800044 	addi	r2,r2,1
  805d7c:	e0bff615 	stw	r2,-40(fp)
  805d80:	e0fff617 	ldw	r3,-40(fp)
  805d84:	e0bffc17 	ldw	r2,-16(fp)
  805d88:	18bf4916 	blt	r3,r2,805ab0 <__alt_mem_epcs_flash_controller_0+0xff7fcab0>
  805d8c:	e0bff917 	ldw	r2,-28(fp)
  805d90:	10000d1e 	bne	r2,zero,805dc8 <get_sos+0x578>
  805d94:	e0bffa17 	ldw	r2,-24(fp)
  805d98:	10800317 	ldw	r2,12(r2)
  805d9c:	e13fff17 	ldw	r4,-4(fp)
  805da0:	103ee83a 	callr	r2
  805da4:	1000021e 	bne	r2,zero,805db0 <get_sos+0x560>
  805da8:	0005883a 	mov	r2,zero
  805dac:	00008006 	br	805fb0 <get_sos+0x760>
  805db0:	e0bffa17 	ldw	r2,-24(fp)
  805db4:	10800017 	ldw	r2,0(r2)
  805db8:	e0bff815 	stw	r2,-32(fp)
  805dbc:	e0bffa17 	ldw	r2,-24(fp)
  805dc0:	10800117 	ldw	r2,4(r2)
  805dc4:	e0bff915 	stw	r2,-28(fp)
  805dc8:	e0bff917 	ldw	r2,-28(fp)
  805dcc:	10bfffc4 	addi	r2,r2,-1
  805dd0:	e0bff915 	stw	r2,-28(fp)
  805dd4:	e0bff817 	ldw	r2,-32(fp)
  805dd8:	10c00044 	addi	r3,r2,1
  805ddc:	e0fff815 	stw	r3,-32(fp)
  805de0:	10800003 	ldbu	r2,0(r2)
  805de4:	10803fcc 	andi	r2,r2,255
  805de8:	e0bff415 	stw	r2,-48(fp)
  805dec:	e0bfff17 	ldw	r2,-4(fp)
  805df0:	e0fff417 	ldw	r3,-48(fp)
  805df4:	10c06715 	stw	r3,412(r2)
  805df8:	e0bff917 	ldw	r2,-28(fp)
  805dfc:	10000d1e 	bne	r2,zero,805e34 <get_sos+0x5e4>
  805e00:	e0bffa17 	ldw	r2,-24(fp)
  805e04:	10800317 	ldw	r2,12(r2)
  805e08:	e13fff17 	ldw	r4,-4(fp)
  805e0c:	103ee83a 	callr	r2
  805e10:	1000021e 	bne	r2,zero,805e1c <get_sos+0x5cc>
  805e14:	0005883a 	mov	r2,zero
  805e18:	00006506 	br	805fb0 <get_sos+0x760>
  805e1c:	e0bffa17 	ldw	r2,-24(fp)
  805e20:	10800017 	ldw	r2,0(r2)
  805e24:	e0bff815 	stw	r2,-32(fp)
  805e28:	e0bffa17 	ldw	r2,-24(fp)
  805e2c:	10800117 	ldw	r2,4(r2)
  805e30:	e0bff915 	stw	r2,-28(fp)
  805e34:	e0bff917 	ldw	r2,-28(fp)
  805e38:	10bfffc4 	addi	r2,r2,-1
  805e3c:	e0bff915 	stw	r2,-28(fp)
  805e40:	e0bff817 	ldw	r2,-32(fp)
  805e44:	10c00044 	addi	r3,r2,1
  805e48:	e0fff815 	stw	r3,-32(fp)
  805e4c:	10800003 	ldbu	r2,0(r2)
  805e50:	10803fcc 	andi	r2,r2,255
  805e54:	e0bff415 	stw	r2,-48(fp)
  805e58:	e0bfff17 	ldw	r2,-4(fp)
  805e5c:	e0fff417 	ldw	r3,-48(fp)
  805e60:	10c06815 	stw	r3,416(r2)
  805e64:	e0bff917 	ldw	r2,-28(fp)
  805e68:	10000d1e 	bne	r2,zero,805ea0 <get_sos+0x650>
  805e6c:	e0bffa17 	ldw	r2,-24(fp)
  805e70:	10800317 	ldw	r2,12(r2)
  805e74:	e13fff17 	ldw	r4,-4(fp)
  805e78:	103ee83a 	callr	r2
  805e7c:	1000021e 	bne	r2,zero,805e88 <get_sos+0x638>
  805e80:	0005883a 	mov	r2,zero
  805e84:	00004a06 	br	805fb0 <get_sos+0x760>
  805e88:	e0bffa17 	ldw	r2,-24(fp)
  805e8c:	10800017 	ldw	r2,0(r2)
  805e90:	e0bff815 	stw	r2,-32(fp)
  805e94:	e0bffa17 	ldw	r2,-24(fp)
  805e98:	10800117 	ldw	r2,4(r2)
  805e9c:	e0bff915 	stw	r2,-28(fp)
  805ea0:	e0bff917 	ldw	r2,-28(fp)
  805ea4:	10bfffc4 	addi	r2,r2,-1
  805ea8:	e0bff915 	stw	r2,-28(fp)
  805eac:	e0bff817 	ldw	r2,-32(fp)
  805eb0:	10c00044 	addi	r3,r2,1
  805eb4:	e0fff815 	stw	r3,-32(fp)
  805eb8:	10800003 	ldbu	r2,0(r2)
  805ebc:	10803fcc 	andi	r2,r2,255
  805ec0:	e0bff415 	stw	r2,-48(fp)
  805ec4:	e0bff417 	ldw	r2,-48(fp)
  805ec8:	1005d13a 	srai	r2,r2,4
  805ecc:	10c003cc 	andi	r3,r2,15
  805ed0:	e0bfff17 	ldw	r2,-4(fp)
  805ed4:	10c06915 	stw	r3,420(r2)
  805ed8:	e0bff417 	ldw	r2,-48(fp)
  805edc:	10c003cc 	andi	r3,r2,15
  805ee0:	e0bfff17 	ldw	r2,-4(fp)
  805ee4:	10c06a15 	stw	r3,424(r2)
  805ee8:	e0bfff17 	ldw	r2,-4(fp)
  805eec:	10800017 	ldw	r2,0(r2)
  805ef0:	10800604 	addi	r2,r2,24
  805ef4:	e0bffe15 	stw	r2,-8(fp)
  805ef8:	e0bfff17 	ldw	r2,-4(fp)
  805efc:	10c06717 	ldw	r3,412(r2)
  805f00:	e0bffe17 	ldw	r2,-8(fp)
  805f04:	10c00015 	stw	r3,0(r2)
  805f08:	e0bffe17 	ldw	r2,-8(fp)
  805f0c:	10800104 	addi	r2,r2,4
  805f10:	e0ffff17 	ldw	r3,-4(fp)
  805f14:	18c06817 	ldw	r3,416(r3)
  805f18:	10c00015 	stw	r3,0(r2)
  805f1c:	e0bffe17 	ldw	r2,-8(fp)
  805f20:	10800204 	addi	r2,r2,8
  805f24:	e0ffff17 	ldw	r3,-4(fp)
  805f28:	18c06917 	ldw	r3,420(r3)
  805f2c:	10c00015 	stw	r3,0(r2)
  805f30:	e0bffe17 	ldw	r2,-8(fp)
  805f34:	10800304 	addi	r2,r2,12
  805f38:	e0ffff17 	ldw	r3,-4(fp)
  805f3c:	18c06a17 	ldw	r3,424(r3)
  805f40:	10c00015 	stw	r3,0(r2)
  805f44:	e0bfff17 	ldw	r2,-4(fp)
  805f48:	10800017 	ldw	r2,0(r2)
  805f4c:	00c01ac4 	movi	r3,107
  805f50:	10c00515 	stw	r3,20(r2)
  805f54:	e0bfff17 	ldw	r2,-4(fp)
  805f58:	10800017 	ldw	r2,0(r2)
  805f5c:	10800117 	ldw	r2,4(r2)
  805f60:	01400044 	movi	r5,1
  805f64:	e13fff17 	ldw	r4,-4(fp)
  805f68:	103ee83a 	callr	r2
  805f6c:	e0bfff17 	ldw	r2,-4(fp)
  805f70:	10807417 	ldw	r2,464(r2)
  805f74:	10000515 	stw	zero,20(r2)
  805f78:	e0bffc17 	ldw	r2,-16(fp)
  805f7c:	10000526 	beq	r2,zero,805f94 <get_sos+0x744>
  805f80:	e0bfff17 	ldw	r2,-4(fp)
  805f84:	10802417 	ldw	r2,144(r2)
  805f88:	10c00044 	addi	r3,r2,1
  805f8c:	e0bfff17 	ldw	r2,-4(fp)
  805f90:	10c02415 	stw	r3,144(r2)
  805f94:	e0bffa17 	ldw	r2,-24(fp)
  805f98:	e0fff817 	ldw	r3,-32(fp)
  805f9c:	10c00015 	stw	r3,0(r2)
  805fa0:	e0bffa17 	ldw	r2,-24(fp)
  805fa4:	e0fff917 	ldw	r3,-28(fp)
  805fa8:	10c00115 	stw	r3,4(r2)
  805fac:	00800044 	movi	r2,1
  805fb0:	e037883a 	mov	sp,fp
  805fb4:	dfc00117 	ldw	ra,4(sp)
  805fb8:	df000017 	ldw	fp,0(sp)
  805fbc:	dec00204 	addi	sp,sp,8
  805fc0:	f800283a 	ret

00805fc4 <get_dac>:
  805fc4:	defff704 	addi	sp,sp,-36
  805fc8:	dfc00815 	stw	ra,32(sp)
  805fcc:	df000715 	stw	fp,28(sp)
  805fd0:	df000704 	addi	fp,sp,28
  805fd4:	e13fff15 	stw	r4,-4(fp)
  805fd8:	e0bfff17 	ldw	r2,-4(fp)
  805fdc:	10800617 	ldw	r2,24(r2)
  805fe0:	e0bffc15 	stw	r2,-16(fp)
  805fe4:	e0bffc17 	ldw	r2,-16(fp)
  805fe8:	10800017 	ldw	r2,0(r2)
  805fec:	e0bffa15 	stw	r2,-24(fp)
  805ff0:	e0bffc17 	ldw	r2,-16(fp)
  805ff4:	10800117 	ldw	r2,4(r2)
  805ff8:	e0bffb15 	stw	r2,-20(fp)
  805ffc:	e0bffb17 	ldw	r2,-20(fp)
  806000:	10000d1e 	bne	r2,zero,806038 <get_dac+0x74>
  806004:	e0bffc17 	ldw	r2,-16(fp)
  806008:	10800317 	ldw	r2,12(r2)
  80600c:	e13fff17 	ldw	r4,-4(fp)
  806010:	103ee83a 	callr	r2
  806014:	1000021e 	bne	r2,zero,806020 <get_dac+0x5c>
  806018:	0005883a 	mov	r2,zero
  80601c:	0000cf06 	br	80635c <get_dac+0x398>
  806020:	e0bffc17 	ldw	r2,-16(fp)
  806024:	10800017 	ldw	r2,0(r2)
  806028:	e0bffa15 	stw	r2,-24(fp)
  80602c:	e0bffc17 	ldw	r2,-16(fp)
  806030:	10800117 	ldw	r2,4(r2)
  806034:	e0bffb15 	stw	r2,-20(fp)
  806038:	e0bffb17 	ldw	r2,-20(fp)
  80603c:	10bfffc4 	addi	r2,r2,-1
  806040:	e0bffb15 	stw	r2,-20(fp)
  806044:	e0bffa17 	ldw	r2,-24(fp)
  806048:	10c00044 	addi	r3,r2,1
  80604c:	e0fffa15 	stw	r3,-24(fp)
  806050:	10800003 	ldbu	r2,0(r2)
  806054:	10803fcc 	andi	r2,r2,255
  806058:	1004923a 	slli	r2,r2,8
  80605c:	e0bff915 	stw	r2,-28(fp)
  806060:	e0bffb17 	ldw	r2,-20(fp)
  806064:	10000d1e 	bne	r2,zero,80609c <get_dac+0xd8>
  806068:	e0bffc17 	ldw	r2,-16(fp)
  80606c:	10800317 	ldw	r2,12(r2)
  806070:	e13fff17 	ldw	r4,-4(fp)
  806074:	103ee83a 	callr	r2
  806078:	1000021e 	bne	r2,zero,806084 <get_dac+0xc0>
  80607c:	0005883a 	mov	r2,zero
  806080:	0000b606 	br	80635c <get_dac+0x398>
  806084:	e0bffc17 	ldw	r2,-16(fp)
  806088:	10800017 	ldw	r2,0(r2)
  80608c:	e0bffa15 	stw	r2,-24(fp)
  806090:	e0bffc17 	ldw	r2,-16(fp)
  806094:	10800117 	ldw	r2,4(r2)
  806098:	e0bffb15 	stw	r2,-20(fp)
  80609c:	e0bffb17 	ldw	r2,-20(fp)
  8060a0:	10bfffc4 	addi	r2,r2,-1
  8060a4:	e0bffb15 	stw	r2,-20(fp)
  8060a8:	e0bffa17 	ldw	r2,-24(fp)
  8060ac:	10c00044 	addi	r3,r2,1
  8060b0:	e0fffa15 	stw	r3,-24(fp)
  8060b4:	10800003 	ldbu	r2,0(r2)
  8060b8:	10803fcc 	andi	r2,r2,255
  8060bc:	e0fff917 	ldw	r3,-28(fp)
  8060c0:	1885883a 	add	r2,r3,r2
  8060c4:	e0bff915 	stw	r2,-28(fp)
  8060c8:	e0bff917 	ldw	r2,-28(fp)
  8060cc:	10bfff84 	addi	r2,r2,-2
  8060d0:	e0bff915 	stw	r2,-28(fp)
  8060d4:	00008d06 	br	80630c <get_dac+0x348>
  8060d8:	e0bffb17 	ldw	r2,-20(fp)
  8060dc:	10000d1e 	bne	r2,zero,806114 <get_dac+0x150>
  8060e0:	e0bffc17 	ldw	r2,-16(fp)
  8060e4:	10800317 	ldw	r2,12(r2)
  8060e8:	e13fff17 	ldw	r4,-4(fp)
  8060ec:	103ee83a 	callr	r2
  8060f0:	1000021e 	bne	r2,zero,8060fc <get_dac+0x138>
  8060f4:	0005883a 	mov	r2,zero
  8060f8:	00009806 	br	80635c <get_dac+0x398>
  8060fc:	e0bffc17 	ldw	r2,-16(fp)
  806100:	10800017 	ldw	r2,0(r2)
  806104:	e0bffa15 	stw	r2,-24(fp)
  806108:	e0bffc17 	ldw	r2,-16(fp)
  80610c:	10800117 	ldw	r2,4(r2)
  806110:	e0bffb15 	stw	r2,-20(fp)
  806114:	e0bffb17 	ldw	r2,-20(fp)
  806118:	10bfffc4 	addi	r2,r2,-1
  80611c:	e0bffb15 	stw	r2,-20(fp)
  806120:	e0bffa17 	ldw	r2,-24(fp)
  806124:	10c00044 	addi	r3,r2,1
  806128:	e0fffa15 	stw	r3,-24(fp)
  80612c:	10800003 	ldbu	r2,0(r2)
  806130:	10803fcc 	andi	r2,r2,255
  806134:	e0bffd15 	stw	r2,-12(fp)
  806138:	e0bffb17 	ldw	r2,-20(fp)
  80613c:	10000d1e 	bne	r2,zero,806174 <get_dac+0x1b0>
  806140:	e0bffc17 	ldw	r2,-16(fp)
  806144:	10800317 	ldw	r2,12(r2)
  806148:	e13fff17 	ldw	r4,-4(fp)
  80614c:	103ee83a 	callr	r2
  806150:	1000021e 	bne	r2,zero,80615c <get_dac+0x198>
  806154:	0005883a 	mov	r2,zero
  806158:	00008006 	br	80635c <get_dac+0x398>
  80615c:	e0bffc17 	ldw	r2,-16(fp)
  806160:	10800017 	ldw	r2,0(r2)
  806164:	e0bffa15 	stw	r2,-24(fp)
  806168:	e0bffc17 	ldw	r2,-16(fp)
  80616c:	10800117 	ldw	r2,4(r2)
  806170:	e0bffb15 	stw	r2,-20(fp)
  806174:	e0bffb17 	ldw	r2,-20(fp)
  806178:	10bfffc4 	addi	r2,r2,-1
  80617c:	e0bffb15 	stw	r2,-20(fp)
  806180:	e0bffa17 	ldw	r2,-24(fp)
  806184:	10c00044 	addi	r3,r2,1
  806188:	e0fffa15 	stw	r3,-24(fp)
  80618c:	10800003 	ldbu	r2,0(r2)
  806190:	10803fcc 	andi	r2,r2,255
  806194:	e0bffe15 	stw	r2,-8(fp)
  806198:	e0bff917 	ldw	r2,-28(fp)
  80619c:	10bfff84 	addi	r2,r2,-2
  8061a0:	e0bff915 	stw	r2,-28(fp)
  8061a4:	e0bfff17 	ldw	r2,-4(fp)
  8061a8:	10800017 	ldw	r2,0(r2)
  8061ac:	00c01444 	movi	r3,81
  8061b0:	10c00515 	stw	r3,20(r2)
  8061b4:	e0bfff17 	ldw	r2,-4(fp)
  8061b8:	10800017 	ldw	r2,0(r2)
  8061bc:	e0fffd17 	ldw	r3,-12(fp)
  8061c0:	10c00615 	stw	r3,24(r2)
  8061c4:	e0bfff17 	ldw	r2,-4(fp)
  8061c8:	10800017 	ldw	r2,0(r2)
  8061cc:	e0fffe17 	ldw	r3,-8(fp)
  8061d0:	10c00715 	stw	r3,28(r2)
  8061d4:	e0bfff17 	ldw	r2,-4(fp)
  8061d8:	10800017 	ldw	r2,0(r2)
  8061dc:	10800117 	ldw	r2,4(r2)
  8061e0:	01400044 	movi	r5,1
  8061e4:	e13fff17 	ldw	r4,-4(fp)
  8061e8:	103ee83a 	callr	r2
  8061ec:	e0bffd17 	ldw	r2,-12(fp)
  8061f0:	10000316 	blt	r2,zero,806200 <get_dac+0x23c>
  8061f4:	e0bffd17 	ldw	r2,-12(fp)
  8061f8:	10800810 	cmplti	r2,r2,32
  8061fc:	10000d1e 	bne	r2,zero,806234 <get_dac+0x270>
  806200:	e0bfff17 	ldw	r2,-4(fp)
  806204:	10800017 	ldw	r2,0(r2)
  806208:	00c00744 	movi	r3,29
  80620c:	10c00515 	stw	r3,20(r2)
  806210:	e0bfff17 	ldw	r2,-4(fp)
  806214:	10800017 	ldw	r2,0(r2)
  806218:	e0fffd17 	ldw	r3,-12(fp)
  80621c:	10c00615 	stw	r3,24(r2)
  806220:	e0bfff17 	ldw	r2,-4(fp)
  806224:	10800017 	ldw	r2,0(r2)
  806228:	10800017 	ldw	r2,0(r2)
  80622c:	e13fff17 	ldw	r4,-4(fp)
  806230:	103ee83a 	callr	r2
  806234:	e0bffd17 	ldw	r2,-12(fp)
  806238:	10800410 	cmplti	r2,r2,16
  80623c:	1000091e 	bne	r2,zero,806264 <get_dac+0x2a0>
  806240:	e0bffd17 	ldw	r2,-12(fp)
  806244:	10bffc04 	addi	r2,r2,-16
  806248:	e0fffe17 	ldw	r3,-8(fp)
  80624c:	1809883a 	mov	r4,r3
  806250:	e0ffff17 	ldw	r3,-4(fp)
  806254:	1885883a 	add	r2,r3,r2
  806258:	10804204 	addi	r2,r2,264
  80625c:	11000005 	stb	r4,0(r2)
  806260:	00002a06 	br	80630c <get_dac+0x348>
  806264:	e0bffe17 	ldw	r2,-8(fp)
  806268:	108003cc 	andi	r2,r2,15
  80626c:	1009883a 	mov	r4,r2
  806270:	e0ffff17 	ldw	r3,-4(fp)
  806274:	e0bffd17 	ldw	r2,-12(fp)
  806278:	1885883a 	add	r2,r3,r2
  80627c:	10803a04 	addi	r2,r2,232
  806280:	11000005 	stb	r4,0(r2)
  806284:	e0bffe17 	ldw	r2,-8(fp)
  806288:	1005d13a 	srai	r2,r2,4
  80628c:	1009883a 	mov	r4,r2
  806290:	e0ffff17 	ldw	r3,-4(fp)
  806294:	e0bffd17 	ldw	r2,-12(fp)
  806298:	1885883a 	add	r2,r3,r2
  80629c:	10803e04 	addi	r2,r2,248
  8062a0:	11000005 	stb	r4,0(r2)
  8062a4:	e0ffff17 	ldw	r3,-4(fp)
  8062a8:	e0bffd17 	ldw	r2,-12(fp)
  8062ac:	1885883a 	add	r2,r3,r2
  8062b0:	10803a04 	addi	r2,r2,232
  8062b4:	11000003 	ldbu	r4,0(r2)
  8062b8:	e0ffff17 	ldw	r3,-4(fp)
  8062bc:	e0bffd17 	ldw	r2,-12(fp)
  8062c0:	1885883a 	add	r2,r3,r2
  8062c4:	10803e04 	addi	r2,r2,248
  8062c8:	10c00003 	ldbu	r3,0(r2)
  8062cc:	20803fcc 	andi	r2,r4,255
  8062d0:	18c03fcc 	andi	r3,r3,255
  8062d4:	18800d2e 	bgeu	r3,r2,80630c <get_dac+0x348>
  8062d8:	e0bfff17 	ldw	r2,-4(fp)
  8062dc:	10800017 	ldw	r2,0(r2)
  8062e0:	00c00784 	movi	r3,30
  8062e4:	10c00515 	stw	r3,20(r2)
  8062e8:	e0bfff17 	ldw	r2,-4(fp)
  8062ec:	10800017 	ldw	r2,0(r2)
  8062f0:	e0fffe17 	ldw	r3,-8(fp)
  8062f4:	10c00615 	stw	r3,24(r2)
  8062f8:	e0bfff17 	ldw	r2,-4(fp)
  8062fc:	10800017 	ldw	r2,0(r2)
  806300:	10800017 	ldw	r2,0(r2)
  806304:	e13fff17 	ldw	r4,-4(fp)
  806308:	103ee83a 	callr	r2
  80630c:	e0bff917 	ldw	r2,-28(fp)
  806310:	00bf7116 	blt	zero,r2,8060d8 <__alt_mem_epcs_flash_controller_0+0xff7fd0d8>
  806314:	e0bff917 	ldw	r2,-28(fp)
  806318:	10000926 	beq	r2,zero,806340 <get_dac+0x37c>
  80631c:	e0bfff17 	ldw	r2,-4(fp)
  806320:	10800017 	ldw	r2,0(r2)
  806324:	00c00304 	movi	r3,12
  806328:	10c00515 	stw	r3,20(r2)
  80632c:	e0bfff17 	ldw	r2,-4(fp)
  806330:	10800017 	ldw	r2,0(r2)
  806334:	10800017 	ldw	r2,0(r2)
  806338:	e13fff17 	ldw	r4,-4(fp)
  80633c:	103ee83a 	callr	r2
  806340:	e0bffc17 	ldw	r2,-16(fp)
  806344:	e0fffa17 	ldw	r3,-24(fp)
  806348:	10c00015 	stw	r3,0(r2)
  80634c:	e0bffc17 	ldw	r2,-16(fp)
  806350:	e0fffb17 	ldw	r3,-20(fp)
  806354:	10c00115 	stw	r3,4(r2)
  806358:	00800044 	movi	r2,1
  80635c:	e037883a 	mov	sp,fp
  806360:	dfc00117 	ldw	ra,4(sp)
  806364:	df000017 	ldw	fp,0(sp)
  806368:	dec00204 	addi	sp,sp,8
  80636c:	f800283a 	ret

00806370 <get_dht>:
  806370:	deffae04 	addi	sp,sp,-328
  806374:	dfc05115 	stw	ra,324(sp)
  806378:	df005015 	stw	fp,320(sp)
  80637c:	df005004 	addi	fp,sp,320
  806380:	e13fff15 	stw	r4,-4(fp)
  806384:	e0bfff17 	ldw	r2,-4(fp)
  806388:	10800617 	ldw	r2,24(r2)
  80638c:	e0bfb715 	stw	r2,-292(fp)
  806390:	e0bfb717 	ldw	r2,-292(fp)
  806394:	10800017 	ldw	r2,0(r2)
  806398:	e0bfb515 	stw	r2,-300(fp)
  80639c:	e0bfb717 	ldw	r2,-292(fp)
  8063a0:	10800117 	ldw	r2,4(r2)
  8063a4:	e0bfb615 	stw	r2,-296(fp)
  8063a8:	e0bfb617 	ldw	r2,-296(fp)
  8063ac:	10000d1e 	bne	r2,zero,8063e4 <get_dht+0x74>
  8063b0:	e0bfb717 	ldw	r2,-292(fp)
  8063b4:	10800317 	ldw	r2,12(r2)
  8063b8:	e13fff17 	ldw	r4,-4(fp)
  8063bc:	103ee83a 	callr	r2
  8063c0:	1000021e 	bne	r2,zero,8063cc <get_dht+0x5c>
  8063c4:	0005883a 	mov	r2,zero
  8063c8:	00017d06 	br	8069c0 <get_dht+0x650>
  8063cc:	e0bfb717 	ldw	r2,-292(fp)
  8063d0:	10800017 	ldw	r2,0(r2)
  8063d4:	e0bfb515 	stw	r2,-300(fp)
  8063d8:	e0bfb717 	ldw	r2,-292(fp)
  8063dc:	10800117 	ldw	r2,4(r2)
  8063e0:	e0bfb615 	stw	r2,-296(fp)
  8063e4:	e0bfb617 	ldw	r2,-296(fp)
  8063e8:	10bfffc4 	addi	r2,r2,-1
  8063ec:	e0bfb615 	stw	r2,-296(fp)
  8063f0:	e0bfb517 	ldw	r2,-300(fp)
  8063f4:	10c00044 	addi	r3,r2,1
  8063f8:	e0ffb515 	stw	r3,-300(fp)
  8063fc:	10800003 	ldbu	r2,0(r2)
  806400:	10803fcc 	andi	r2,r2,255
  806404:	1004923a 	slli	r2,r2,8
  806408:	e0bfb015 	stw	r2,-320(fp)
  80640c:	e0bfb617 	ldw	r2,-296(fp)
  806410:	10000d1e 	bne	r2,zero,806448 <get_dht+0xd8>
  806414:	e0bfb717 	ldw	r2,-292(fp)
  806418:	10800317 	ldw	r2,12(r2)
  80641c:	e13fff17 	ldw	r4,-4(fp)
  806420:	103ee83a 	callr	r2
  806424:	1000021e 	bne	r2,zero,806430 <get_dht+0xc0>
  806428:	0005883a 	mov	r2,zero
  80642c:	00016406 	br	8069c0 <get_dht+0x650>
  806430:	e0bfb717 	ldw	r2,-292(fp)
  806434:	10800017 	ldw	r2,0(r2)
  806438:	e0bfb515 	stw	r2,-300(fp)
  80643c:	e0bfb717 	ldw	r2,-292(fp)
  806440:	10800117 	ldw	r2,4(r2)
  806444:	e0bfb615 	stw	r2,-296(fp)
  806448:	e0bfb617 	ldw	r2,-296(fp)
  80644c:	10bfffc4 	addi	r2,r2,-1
  806450:	e0bfb615 	stw	r2,-296(fp)
  806454:	e0bfb517 	ldw	r2,-300(fp)
  806458:	10c00044 	addi	r3,r2,1
  80645c:	e0ffb515 	stw	r3,-300(fp)
  806460:	10800003 	ldbu	r2,0(r2)
  806464:	10803fcc 	andi	r2,r2,255
  806468:	e0ffb017 	ldw	r3,-320(fp)
  80646c:	1885883a 	add	r2,r3,r2
  806470:	e0bfb015 	stw	r2,-320(fp)
  806474:	e0bfb017 	ldw	r2,-320(fp)
  806478:	10bfff84 	addi	r2,r2,-2
  80647c:	e0bfb015 	stw	r2,-320(fp)
  806480:	00013a06 	br	80696c <get_dht+0x5fc>
  806484:	e0bfb617 	ldw	r2,-296(fp)
  806488:	10000d1e 	bne	r2,zero,8064c0 <get_dht+0x150>
  80648c:	e0bfb717 	ldw	r2,-292(fp)
  806490:	10800317 	ldw	r2,12(r2)
  806494:	e13fff17 	ldw	r4,-4(fp)
  806498:	103ee83a 	callr	r2
  80649c:	1000021e 	bne	r2,zero,8064a8 <get_dht+0x138>
  8064a0:	0005883a 	mov	r2,zero
  8064a4:	00014606 	br	8069c0 <get_dht+0x650>
  8064a8:	e0bfb717 	ldw	r2,-292(fp)
  8064ac:	10800017 	ldw	r2,0(r2)
  8064b0:	e0bfb515 	stw	r2,-300(fp)
  8064b4:	e0bfb717 	ldw	r2,-292(fp)
  8064b8:	10800117 	ldw	r2,4(r2)
  8064bc:	e0bfb615 	stw	r2,-296(fp)
  8064c0:	e0bfb617 	ldw	r2,-296(fp)
  8064c4:	10bfffc4 	addi	r2,r2,-1
  8064c8:	e0bfb615 	stw	r2,-296(fp)
  8064cc:	e0bfb517 	ldw	r2,-300(fp)
  8064d0:	10c00044 	addi	r3,r2,1
  8064d4:	e0ffb515 	stw	r3,-300(fp)
  8064d8:	10800003 	ldbu	r2,0(r2)
  8064dc:	10803fcc 	andi	r2,r2,255
  8064e0:	e0bfb215 	stw	r2,-312(fp)
  8064e4:	e0bfff17 	ldw	r2,-4(fp)
  8064e8:	10800017 	ldw	r2,0(r2)
  8064ec:	00c01484 	movi	r3,82
  8064f0:	10c00515 	stw	r3,20(r2)
  8064f4:	e0bfff17 	ldw	r2,-4(fp)
  8064f8:	10800017 	ldw	r2,0(r2)
  8064fc:	e0ffb217 	ldw	r3,-312(fp)
  806500:	10c00615 	stw	r3,24(r2)
  806504:	e0bfff17 	ldw	r2,-4(fp)
  806508:	10800017 	ldw	r2,0(r2)
  80650c:	10800117 	ldw	r2,4(r2)
  806510:	01400044 	movi	r5,1
  806514:	e13fff17 	ldw	r4,-4(fp)
  806518:	103ee83a 	callr	r2
  80651c:	e03fba05 	stb	zero,-280(fp)
  806520:	e03fb315 	stw	zero,-308(fp)
  806524:	00800044 	movi	r2,1
  806528:	e0bfb115 	stw	r2,-316(fp)
  80652c:	00002506 	br	8065c4 <get_dht+0x254>
  806530:	e0bfb617 	ldw	r2,-296(fp)
  806534:	10000d1e 	bne	r2,zero,80656c <get_dht+0x1fc>
  806538:	e0bfb717 	ldw	r2,-292(fp)
  80653c:	10800317 	ldw	r2,12(r2)
  806540:	e13fff17 	ldw	r4,-4(fp)
  806544:	103ee83a 	callr	r2
  806548:	1000021e 	bne	r2,zero,806554 <get_dht+0x1e4>
  80654c:	0005883a 	mov	r2,zero
  806550:	00011b06 	br	8069c0 <get_dht+0x650>
  806554:	e0bfb717 	ldw	r2,-292(fp)
  806558:	10800017 	ldw	r2,0(r2)
  80655c:	e0bfb515 	stw	r2,-300(fp)
  806560:	e0bfb717 	ldw	r2,-292(fp)
  806564:	10800117 	ldw	r2,4(r2)
  806568:	e0bfb615 	stw	r2,-296(fp)
  80656c:	e0bfb617 	ldw	r2,-296(fp)
  806570:	10bfffc4 	addi	r2,r2,-1
  806574:	e0bfb615 	stw	r2,-296(fp)
  806578:	e0bfb517 	ldw	r2,-300(fp)
  80657c:	10c00044 	addi	r3,r2,1
  806580:	e0ffb515 	stw	r3,-300(fp)
  806584:	10c00003 	ldbu	r3,0(r2)
  806588:	e13fba04 	addi	r4,fp,-280
  80658c:	e0bfb117 	ldw	r2,-316(fp)
  806590:	2085883a 	add	r2,r4,r2
  806594:	10c00005 	stb	r3,0(r2)
  806598:	e0ffba04 	addi	r3,fp,-280
  80659c:	e0bfb117 	ldw	r2,-316(fp)
  8065a0:	1885883a 	add	r2,r3,r2
  8065a4:	10800003 	ldbu	r2,0(r2)
  8065a8:	10803fcc 	andi	r2,r2,255
  8065ac:	e0ffb317 	ldw	r3,-308(fp)
  8065b0:	1885883a 	add	r2,r3,r2
  8065b4:	e0bfb315 	stw	r2,-308(fp)
  8065b8:	e0bfb117 	ldw	r2,-316(fp)
  8065bc:	10800044 	addi	r2,r2,1
  8065c0:	e0bfb115 	stw	r2,-316(fp)
  8065c4:	e0bfb117 	ldw	r2,-316(fp)
  8065c8:	10800450 	cmplti	r2,r2,17
  8065cc:	103fd81e 	bne	r2,zero,806530 <__alt_mem_epcs_flash_controller_0+0xff7fd530>
  8065d0:	e0bfb017 	ldw	r2,-320(fp)
  8065d4:	10bffbc4 	addi	r2,r2,-17
  8065d8:	e0bfb015 	stw	r2,-320(fp)
  8065dc:	e0bfff17 	ldw	r2,-4(fp)
  8065e0:	10800017 	ldw	r2,0(r2)
  8065e4:	10800604 	addi	r2,r2,24
  8065e8:	e0bfb815 	stw	r2,-288(fp)
  8065ec:	e0bfba43 	ldbu	r2,-279(fp)
  8065f0:	10c03fcc 	andi	r3,r2,255
  8065f4:	e0bfb817 	ldw	r2,-288(fp)
  8065f8:	10c00015 	stw	r3,0(r2)
  8065fc:	e0bfb817 	ldw	r2,-288(fp)
  806600:	10800104 	addi	r2,r2,4
  806604:	e0ffba83 	ldbu	r3,-278(fp)
  806608:	18c03fcc 	andi	r3,r3,255
  80660c:	10c00015 	stw	r3,0(r2)
  806610:	e0bfb817 	ldw	r2,-288(fp)
  806614:	10800204 	addi	r2,r2,8
  806618:	e0ffbac3 	ldbu	r3,-277(fp)
  80661c:	18c03fcc 	andi	r3,r3,255
  806620:	10c00015 	stw	r3,0(r2)
  806624:	e0bfb817 	ldw	r2,-288(fp)
  806628:	10800304 	addi	r2,r2,12
  80662c:	e0ffbb03 	ldbu	r3,-276(fp)
  806630:	18c03fcc 	andi	r3,r3,255
  806634:	10c00015 	stw	r3,0(r2)
  806638:	e0bfb817 	ldw	r2,-288(fp)
  80663c:	10800404 	addi	r2,r2,16
  806640:	e0ffbb43 	ldbu	r3,-275(fp)
  806644:	18c03fcc 	andi	r3,r3,255
  806648:	10c00015 	stw	r3,0(r2)
  80664c:	e0bfb817 	ldw	r2,-288(fp)
  806650:	10800504 	addi	r2,r2,20
  806654:	e0ffbb83 	ldbu	r3,-274(fp)
  806658:	18c03fcc 	andi	r3,r3,255
  80665c:	10c00015 	stw	r3,0(r2)
  806660:	e0bfb817 	ldw	r2,-288(fp)
  806664:	10800604 	addi	r2,r2,24
  806668:	e0ffbbc3 	ldbu	r3,-273(fp)
  80666c:	18c03fcc 	andi	r3,r3,255
  806670:	10c00015 	stw	r3,0(r2)
  806674:	e0bfb817 	ldw	r2,-288(fp)
  806678:	10800704 	addi	r2,r2,28
  80667c:	e0ffbc03 	ldbu	r3,-272(fp)
  806680:	18c03fcc 	andi	r3,r3,255
  806684:	10c00015 	stw	r3,0(r2)
  806688:	e0bfff17 	ldw	r2,-4(fp)
  80668c:	10800017 	ldw	r2,0(r2)
  806690:	00c01604 	movi	r3,88
  806694:	10c00515 	stw	r3,20(r2)
  806698:	e0bfff17 	ldw	r2,-4(fp)
  80669c:	10800017 	ldw	r2,0(r2)
  8066a0:	10800117 	ldw	r2,4(r2)
  8066a4:	01400084 	movi	r5,2
  8066a8:	e13fff17 	ldw	r4,-4(fp)
  8066ac:	103ee83a 	callr	r2
  8066b0:	e0bfff17 	ldw	r2,-4(fp)
  8066b4:	10800017 	ldw	r2,0(r2)
  8066b8:	10800604 	addi	r2,r2,24
  8066bc:	e0bfb915 	stw	r2,-284(fp)
  8066c0:	e0bfbc43 	ldbu	r2,-271(fp)
  8066c4:	10c03fcc 	andi	r3,r2,255
  8066c8:	e0bfb917 	ldw	r2,-284(fp)
  8066cc:	10c00015 	stw	r3,0(r2)
  8066d0:	e0bfb917 	ldw	r2,-284(fp)
  8066d4:	10800104 	addi	r2,r2,4
  8066d8:	e0ffbc83 	ldbu	r3,-270(fp)
  8066dc:	18c03fcc 	andi	r3,r3,255
  8066e0:	10c00015 	stw	r3,0(r2)
  8066e4:	e0bfb917 	ldw	r2,-284(fp)
  8066e8:	10800204 	addi	r2,r2,8
  8066ec:	e0ffbcc3 	ldbu	r3,-269(fp)
  8066f0:	18c03fcc 	andi	r3,r3,255
  8066f4:	10c00015 	stw	r3,0(r2)
  8066f8:	e0bfb917 	ldw	r2,-284(fp)
  8066fc:	10800304 	addi	r2,r2,12
  806700:	e0ffbd03 	ldbu	r3,-268(fp)
  806704:	18c03fcc 	andi	r3,r3,255
  806708:	10c00015 	stw	r3,0(r2)
  80670c:	e0bfb917 	ldw	r2,-284(fp)
  806710:	10800404 	addi	r2,r2,16
  806714:	e0ffbd43 	ldbu	r3,-267(fp)
  806718:	18c03fcc 	andi	r3,r3,255
  80671c:	10c00015 	stw	r3,0(r2)
  806720:	e0bfb917 	ldw	r2,-284(fp)
  806724:	10800504 	addi	r2,r2,20
  806728:	e0ffbd83 	ldbu	r3,-266(fp)
  80672c:	18c03fcc 	andi	r3,r3,255
  806730:	10c00015 	stw	r3,0(r2)
  806734:	e0bfb917 	ldw	r2,-284(fp)
  806738:	10800604 	addi	r2,r2,24
  80673c:	e0ffbdc3 	ldbu	r3,-265(fp)
  806740:	18c03fcc 	andi	r3,r3,255
  806744:	10c00015 	stw	r3,0(r2)
  806748:	e0bfb917 	ldw	r2,-284(fp)
  80674c:	10800704 	addi	r2,r2,28
  806750:	e0ffbe03 	ldbu	r3,-264(fp)
  806754:	18c03fcc 	andi	r3,r3,255
  806758:	10c00015 	stw	r3,0(r2)
  80675c:	e0bfff17 	ldw	r2,-4(fp)
  806760:	10800017 	ldw	r2,0(r2)
  806764:	00c01604 	movi	r3,88
  806768:	10c00515 	stw	r3,20(r2)
  80676c:	e0bfff17 	ldw	r2,-4(fp)
  806770:	10800017 	ldw	r2,0(r2)
  806774:	10800117 	ldw	r2,4(r2)
  806778:	01400084 	movi	r5,2
  80677c:	e13fff17 	ldw	r4,-4(fp)
  806780:	103ee83a 	callr	r2
  806784:	e0bfb317 	ldw	r2,-308(fp)
  806788:	10804048 	cmpgei	r2,r2,257
  80678c:	1000031e 	bne	r2,zero,80679c <get_dht+0x42c>
  806790:	e0bfb317 	ldw	r2,-308(fp)
  806794:	e0ffb017 	ldw	r3,-320(fp)
  806798:	1880090e 	bge	r3,r2,8067c0 <get_dht+0x450>
  80679c:	e0bfff17 	ldw	r2,-4(fp)
  8067a0:	10800017 	ldw	r2,0(r2)
  8067a4:	00c00244 	movi	r3,9
  8067a8:	10c00515 	stw	r3,20(r2)
  8067ac:	e0bfff17 	ldw	r2,-4(fp)
  8067b0:	10800017 	ldw	r2,0(r2)
  8067b4:	10800017 	ldw	r2,0(r2)
  8067b8:	e13fff17 	ldw	r4,-4(fp)
  8067bc:	103ee83a 	callr	r2
  8067c0:	e0bfbe44 	addi	r2,fp,-263
  8067c4:	01804004 	movi	r6,256
  8067c8:	000b883a 	mov	r5,zero
  8067cc:	1009883a 	mov	r4,r2
  8067d0:	0833d940 	call	833d94 <memset>
  8067d4:	e03fb115 	stw	zero,-316(fp)
  8067d8:	00001d06 	br	806850 <get_dht+0x4e0>
  8067dc:	e0bfb617 	ldw	r2,-296(fp)
  8067e0:	10000d1e 	bne	r2,zero,806818 <get_dht+0x4a8>
  8067e4:	e0bfb717 	ldw	r2,-292(fp)
  8067e8:	10800317 	ldw	r2,12(r2)
  8067ec:	e13fff17 	ldw	r4,-4(fp)
  8067f0:	103ee83a 	callr	r2
  8067f4:	1000021e 	bne	r2,zero,806800 <get_dht+0x490>
  8067f8:	0005883a 	mov	r2,zero
  8067fc:	00007006 	br	8069c0 <get_dht+0x650>
  806800:	e0bfb717 	ldw	r2,-292(fp)
  806804:	10800017 	ldw	r2,0(r2)
  806808:	e0bfb515 	stw	r2,-300(fp)
  80680c:	e0bfb717 	ldw	r2,-292(fp)
  806810:	10800117 	ldw	r2,4(r2)
  806814:	e0bfb615 	stw	r2,-296(fp)
  806818:	e0bfb617 	ldw	r2,-296(fp)
  80681c:	10bfffc4 	addi	r2,r2,-1
  806820:	e0bfb615 	stw	r2,-296(fp)
  806824:	e0bfb517 	ldw	r2,-300(fp)
  806828:	10c00044 	addi	r3,r2,1
  80682c:	e0ffb515 	stw	r3,-300(fp)
  806830:	10c00003 	ldbu	r3,0(r2)
  806834:	e13fbe44 	addi	r4,fp,-263
  806838:	e0bfb117 	ldw	r2,-316(fp)
  80683c:	2085883a 	add	r2,r4,r2
  806840:	10c00005 	stb	r3,0(r2)
  806844:	e0bfb117 	ldw	r2,-316(fp)
  806848:	10800044 	addi	r2,r2,1
  80684c:	e0bfb115 	stw	r2,-316(fp)
  806850:	e0ffb117 	ldw	r3,-316(fp)
  806854:	e0bfb317 	ldw	r2,-308(fp)
  806858:	18bfe016 	blt	r3,r2,8067dc <__alt_mem_epcs_flash_controller_0+0xff7fd7dc>
  80685c:	e0ffb017 	ldw	r3,-320(fp)
  806860:	e0bfb317 	ldw	r2,-308(fp)
  806864:	1885c83a 	sub	r2,r3,r2
  806868:	e0bfb015 	stw	r2,-320(fp)
  80686c:	e0bfb217 	ldw	r2,-312(fp)
  806870:	1080040c 	andi	r2,r2,16
  806874:	10000b26 	beq	r2,zero,8068a4 <get_dht+0x534>
  806878:	e0bfb217 	ldw	r2,-312(fp)
  80687c:	10bffc04 	addi	r2,r2,-16
  806880:	e0bfb215 	stw	r2,-312(fp)
  806884:	e0bfb217 	ldw	r2,-312(fp)
  806888:	10800c44 	addi	r2,r2,49
  80688c:	1085883a 	add	r2,r2,r2
  806890:	1085883a 	add	r2,r2,r2
  806894:	e0ffff17 	ldw	r3,-4(fp)
  806898:	1885883a 	add	r2,r3,r2
  80689c:	e0bfb415 	stw	r2,-304(fp)
  8068a0:	00000706 	br	8068c0 <get_dht+0x550>
  8068a4:	e0bfb217 	ldw	r2,-312(fp)
  8068a8:	10800b44 	addi	r2,r2,45
  8068ac:	1085883a 	add	r2,r2,r2
  8068b0:	1085883a 	add	r2,r2,r2
  8068b4:	e0ffff17 	ldw	r3,-4(fp)
  8068b8:	1885883a 	add	r2,r3,r2
  8068bc:	e0bfb415 	stw	r2,-304(fp)
  8068c0:	e0bfb217 	ldw	r2,-312(fp)
  8068c4:	10000316 	blt	r2,zero,8068d4 <get_dht+0x564>
  8068c8:	e0bfb217 	ldw	r2,-312(fp)
  8068cc:	10800110 	cmplti	r2,r2,4
  8068d0:	10000d1e 	bne	r2,zero,806908 <get_dht+0x598>
  8068d4:	e0bfff17 	ldw	r2,-4(fp)
  8068d8:	10800017 	ldw	r2,0(r2)
  8068dc:	00c007c4 	movi	r3,31
  8068e0:	10c00515 	stw	r3,20(r2)
  8068e4:	e0bfff17 	ldw	r2,-4(fp)
  8068e8:	10800017 	ldw	r2,0(r2)
  8068ec:	e0ffb217 	ldw	r3,-312(fp)
  8068f0:	10c00615 	stw	r3,24(r2)
  8068f4:	e0bfff17 	ldw	r2,-4(fp)
  8068f8:	10800017 	ldw	r2,0(r2)
  8068fc:	10800017 	ldw	r2,0(r2)
  806900:	e13fff17 	ldw	r4,-4(fp)
  806904:	103ee83a 	callr	r2
  806908:	e0bfb417 	ldw	r2,-304(fp)
  80690c:	10800017 	ldw	r2,0(r2)
  806910:	1000051e 	bne	r2,zero,806928 <get_dht+0x5b8>
  806914:	e13fff17 	ldw	r4,-4(fp)
  806918:	0813ea40 	call	813ea4 <jpeg_alloc_huff_table>
  80691c:	1007883a 	mov	r3,r2
  806920:	e0bfb417 	ldw	r2,-304(fp)
  806924:	10c00015 	stw	r3,0(r2)
  806928:	e0bfb417 	ldw	r2,-304(fp)
  80692c:	10800017 	ldw	r2,0(r2)
  806930:	1009883a 	mov	r4,r2
  806934:	e0bfba04 	addi	r2,fp,-280
  806938:	00c00444 	movi	r3,17
  80693c:	180d883a 	mov	r6,r3
  806940:	100b883a 	mov	r5,r2
  806944:	0833c4c0 	call	833c4c <memcpy>
  806948:	e0bfb417 	ldw	r2,-304(fp)
  80694c:	10800017 	ldw	r2,0(r2)
  806950:	10800444 	addi	r2,r2,17
  806954:	1009883a 	mov	r4,r2
  806958:	e0bfbe44 	addi	r2,fp,-263
  80695c:	00c04004 	movi	r3,256
  806960:	180d883a 	mov	r6,r3
  806964:	100b883a 	mov	r5,r2
  806968:	0833c4c0 	call	833c4c <memcpy>
  80696c:	e0bfb017 	ldw	r2,-320(fp)
  806970:	10800448 	cmpgei	r2,r2,17
  806974:	103ec31e 	bne	r2,zero,806484 <__alt_mem_epcs_flash_controller_0+0xff7fd484>
  806978:	e0bfb017 	ldw	r2,-320(fp)
  80697c:	10000926 	beq	r2,zero,8069a4 <get_dht+0x634>
  806980:	e0bfff17 	ldw	r2,-4(fp)
  806984:	10800017 	ldw	r2,0(r2)
  806988:	00c00304 	movi	r3,12
  80698c:	10c00515 	stw	r3,20(r2)
  806990:	e0bfff17 	ldw	r2,-4(fp)
  806994:	10800017 	ldw	r2,0(r2)
  806998:	10800017 	ldw	r2,0(r2)
  80699c:	e13fff17 	ldw	r4,-4(fp)
  8069a0:	103ee83a 	callr	r2
  8069a4:	e0bfb717 	ldw	r2,-292(fp)
  8069a8:	e0ffb517 	ldw	r3,-300(fp)
  8069ac:	10c00015 	stw	r3,0(r2)
  8069b0:	e0bfb717 	ldw	r2,-292(fp)
  8069b4:	e0ffb617 	ldw	r3,-296(fp)
  8069b8:	10c00115 	stw	r3,4(r2)
  8069bc:	00800044 	movi	r2,1
  8069c0:	e037883a 	mov	sp,fp
  8069c4:	dfc00117 	ldw	ra,4(sp)
  8069c8:	df000017 	ldw	fp,0(sp)
  8069cc:	dec00204 	addi	sp,sp,8
  8069d0:	f800283a 	ret

008069d4 <get_dqt>:
  8069d4:	defff104 	addi	sp,sp,-60
  8069d8:	dfc00e15 	stw	ra,56(sp)
  8069dc:	df000d15 	stw	fp,52(sp)
  8069e0:	df000d04 	addi	fp,sp,52
  8069e4:	e13fff15 	stw	r4,-4(fp)
  8069e8:	e0bfff17 	ldw	r2,-4(fp)
  8069ec:	10800617 	ldw	r2,24(r2)
  8069f0:	e0bffa15 	stw	r2,-24(fp)
  8069f4:	e0bffa17 	ldw	r2,-24(fp)
  8069f8:	10800017 	ldw	r2,0(r2)
  8069fc:	e0bff815 	stw	r2,-32(fp)
  806a00:	e0bffa17 	ldw	r2,-24(fp)
  806a04:	10800117 	ldw	r2,4(r2)
  806a08:	e0bff915 	stw	r2,-28(fp)
  806a0c:	e0bff917 	ldw	r2,-28(fp)
  806a10:	10000d1e 	bne	r2,zero,806a48 <get_dqt+0x74>
  806a14:	e0bffa17 	ldw	r2,-24(fp)
  806a18:	10800317 	ldw	r2,12(r2)
  806a1c:	e13fff17 	ldw	r4,-4(fp)
  806a20:	103ee83a 	callr	r2
  806a24:	1000021e 	bne	r2,zero,806a30 <get_dqt+0x5c>
  806a28:	0005883a 	mov	r2,zero
  806a2c:	0001f906 	br	807214 <get_dqt+0x840>
  806a30:	e0bffa17 	ldw	r2,-24(fp)
  806a34:	10800017 	ldw	r2,0(r2)
  806a38:	e0bff815 	stw	r2,-32(fp)
  806a3c:	e0bffa17 	ldw	r2,-24(fp)
  806a40:	10800117 	ldw	r2,4(r2)
  806a44:	e0bff915 	stw	r2,-28(fp)
  806a48:	e0bff917 	ldw	r2,-28(fp)
  806a4c:	10bfffc4 	addi	r2,r2,-1
  806a50:	e0bff915 	stw	r2,-28(fp)
  806a54:	e0bff817 	ldw	r2,-32(fp)
  806a58:	10c00044 	addi	r3,r2,1
  806a5c:	e0fff815 	stw	r3,-32(fp)
  806a60:	10800003 	ldbu	r2,0(r2)
  806a64:	10803fcc 	andi	r2,r2,255
  806a68:	1004923a 	slli	r2,r2,8
  806a6c:	e0bff315 	stw	r2,-52(fp)
  806a70:	e0bff917 	ldw	r2,-28(fp)
  806a74:	10000d1e 	bne	r2,zero,806aac <get_dqt+0xd8>
  806a78:	e0bffa17 	ldw	r2,-24(fp)
  806a7c:	10800317 	ldw	r2,12(r2)
  806a80:	e13fff17 	ldw	r4,-4(fp)
  806a84:	103ee83a 	callr	r2
  806a88:	1000021e 	bne	r2,zero,806a94 <get_dqt+0xc0>
  806a8c:	0005883a 	mov	r2,zero
  806a90:	0001e006 	br	807214 <get_dqt+0x840>
  806a94:	e0bffa17 	ldw	r2,-24(fp)
  806a98:	10800017 	ldw	r2,0(r2)
  806a9c:	e0bff815 	stw	r2,-32(fp)
  806aa0:	e0bffa17 	ldw	r2,-24(fp)
  806aa4:	10800117 	ldw	r2,4(r2)
  806aa8:	e0bff915 	stw	r2,-28(fp)
  806aac:	e0bff917 	ldw	r2,-28(fp)
  806ab0:	10bfffc4 	addi	r2,r2,-1
  806ab4:	e0bff915 	stw	r2,-28(fp)
  806ab8:	e0bff817 	ldw	r2,-32(fp)
  806abc:	10c00044 	addi	r3,r2,1
  806ac0:	e0fff815 	stw	r3,-32(fp)
  806ac4:	10800003 	ldbu	r2,0(r2)
  806ac8:	10803fcc 	andi	r2,r2,255
  806acc:	e0fff317 	ldw	r3,-52(fp)
  806ad0:	1885883a 	add	r2,r3,r2
  806ad4:	e0bff315 	stw	r2,-52(fp)
  806ad8:	e0bff317 	ldw	r2,-52(fp)
  806adc:	10bfff84 	addi	r2,r2,-2
  806ae0:	e0bff315 	stw	r2,-52(fp)
  806ae4:	0001b706 	br	8071c4 <get_dqt+0x7f0>
  806ae8:	e0bff317 	ldw	r2,-52(fp)
  806aec:	10bfffc4 	addi	r2,r2,-1
  806af0:	e0bff315 	stw	r2,-52(fp)
  806af4:	e0bff917 	ldw	r2,-28(fp)
  806af8:	10000d1e 	bne	r2,zero,806b30 <get_dqt+0x15c>
  806afc:	e0bffa17 	ldw	r2,-24(fp)
  806b00:	10800317 	ldw	r2,12(r2)
  806b04:	e13fff17 	ldw	r4,-4(fp)
  806b08:	103ee83a 	callr	r2
  806b0c:	1000021e 	bne	r2,zero,806b18 <get_dqt+0x144>
  806b10:	0005883a 	mov	r2,zero
  806b14:	0001bf06 	br	807214 <get_dqt+0x840>
  806b18:	e0bffa17 	ldw	r2,-24(fp)
  806b1c:	10800017 	ldw	r2,0(r2)
  806b20:	e0bff815 	stw	r2,-32(fp)
  806b24:	e0bffa17 	ldw	r2,-24(fp)
  806b28:	10800117 	ldw	r2,4(r2)
  806b2c:	e0bff915 	stw	r2,-28(fp)
  806b30:	e0bff917 	ldw	r2,-28(fp)
  806b34:	10bfffc4 	addi	r2,r2,-1
  806b38:	e0bff915 	stw	r2,-28(fp)
  806b3c:	e0bff817 	ldw	r2,-32(fp)
  806b40:	10c00044 	addi	r3,r2,1
  806b44:	e0fff815 	stw	r3,-32(fp)
  806b48:	10800003 	ldbu	r2,0(r2)
  806b4c:	10803fcc 	andi	r2,r2,255
  806b50:	e0bffb15 	stw	r2,-20(fp)
  806b54:	e0bffb17 	ldw	r2,-20(fp)
  806b58:	1005d13a 	srai	r2,r2,4
  806b5c:	e0bffc15 	stw	r2,-16(fp)
  806b60:	e0bffb17 	ldw	r2,-20(fp)
  806b64:	108003cc 	andi	r2,r2,15
  806b68:	e0bffb15 	stw	r2,-20(fp)
  806b6c:	e0bfff17 	ldw	r2,-4(fp)
  806b70:	10800017 	ldw	r2,0(r2)
  806b74:	00c014c4 	movi	r3,83
  806b78:	10c00515 	stw	r3,20(r2)
  806b7c:	e0bfff17 	ldw	r2,-4(fp)
  806b80:	10800017 	ldw	r2,0(r2)
  806b84:	e0fffb17 	ldw	r3,-20(fp)
  806b88:	10c00615 	stw	r3,24(r2)
  806b8c:	e0bfff17 	ldw	r2,-4(fp)
  806b90:	10800017 	ldw	r2,0(r2)
  806b94:	e0fffc17 	ldw	r3,-16(fp)
  806b98:	10c00715 	stw	r3,28(r2)
  806b9c:	e0bfff17 	ldw	r2,-4(fp)
  806ba0:	10800017 	ldw	r2,0(r2)
  806ba4:	10800117 	ldw	r2,4(r2)
  806ba8:	01400044 	movi	r5,1
  806bac:	e13fff17 	ldw	r4,-4(fp)
  806bb0:	103ee83a 	callr	r2
  806bb4:	e0bffb17 	ldw	r2,-20(fp)
  806bb8:	10800110 	cmplti	r2,r2,4
  806bbc:	10000d1e 	bne	r2,zero,806bf4 <get_dqt+0x220>
  806bc0:	e0bfff17 	ldw	r2,-4(fp)
  806bc4:	10800017 	ldw	r2,0(r2)
  806bc8:	00c00804 	movi	r3,32
  806bcc:	10c00515 	stw	r3,20(r2)
  806bd0:	e0bfff17 	ldw	r2,-4(fp)
  806bd4:	10800017 	ldw	r2,0(r2)
  806bd8:	e0fffb17 	ldw	r3,-20(fp)
  806bdc:	10c00615 	stw	r3,24(r2)
  806be0:	e0bfff17 	ldw	r2,-4(fp)
  806be4:	10800017 	ldw	r2,0(r2)
  806be8:	10800017 	ldw	r2,0(r2)
  806bec:	e13fff17 	ldw	r4,-4(fp)
  806bf0:	103ee83a 	callr	r2
  806bf4:	e0ffff17 	ldw	r3,-4(fp)
  806bf8:	e0bffb17 	ldw	r2,-20(fp)
  806bfc:	10800a44 	addi	r2,r2,41
  806c00:	1085883a 	add	r2,r2,r2
  806c04:	1085883a 	add	r2,r2,r2
  806c08:	1885883a 	add	r2,r3,r2
  806c0c:	10800017 	ldw	r2,0(r2)
  806c10:	10000a1e 	bne	r2,zero,806c3c <get_dqt+0x268>
  806c14:	e13fff17 	ldw	r4,-4(fp)
  806c18:	0813e500 	call	813e50 <jpeg_alloc_quant_table>
  806c1c:	1009883a 	mov	r4,r2
  806c20:	e0ffff17 	ldw	r3,-4(fp)
  806c24:	e0bffb17 	ldw	r2,-20(fp)
  806c28:	10800a44 	addi	r2,r2,41
  806c2c:	1085883a 	add	r2,r2,r2
  806c30:	1085883a 	add	r2,r2,r2
  806c34:	1885883a 	add	r2,r3,r2
  806c38:	11000015 	stw	r4,0(r2)
  806c3c:	e0ffff17 	ldw	r3,-4(fp)
  806c40:	e0bffb17 	ldw	r2,-20(fp)
  806c44:	10800a44 	addi	r2,r2,41
  806c48:	1085883a 	add	r2,r2,r2
  806c4c:	1085883a 	add	r2,r2,r2
  806c50:	1885883a 	add	r2,r3,r2
  806c54:	10800017 	ldw	r2,0(r2)
  806c58:	e0bffd15 	stw	r2,-12(fp)
  806c5c:	e0bffc17 	ldw	r2,-16(fp)
  806c60:	10001826 	beq	r2,zero,806cc4 <get_dqt+0x2f0>
  806c64:	e0bff317 	ldw	r2,-52(fp)
  806c68:	10802008 	cmpgei	r2,r2,128
  806c6c:	1000121e 	bne	r2,zero,806cb8 <get_dqt+0x2e4>
  806c70:	e03ff515 	stw	zero,-44(fp)
  806c74:	00000906 	br	806c9c <get_dqt+0x2c8>
  806c78:	e0fffd17 	ldw	r3,-12(fp)
  806c7c:	e0bff517 	ldw	r2,-44(fp)
  806c80:	1085883a 	add	r2,r2,r2
  806c84:	1885883a 	add	r2,r3,r2
  806c88:	00c00044 	movi	r3,1
  806c8c:	10c0000d 	sth	r3,0(r2)
  806c90:	e0bff517 	ldw	r2,-44(fp)
  806c94:	10800044 	addi	r2,r2,1
  806c98:	e0bff515 	stw	r2,-44(fp)
  806c9c:	e0bff517 	ldw	r2,-44(fp)
  806ca0:	10801010 	cmplti	r2,r2,64
  806ca4:	103ff41e 	bne	r2,zero,806c78 <__alt_mem_epcs_flash_controller_0+0xff7fdc78>
  806ca8:	e0bff317 	ldw	r2,-52(fp)
  806cac:	1005d07a 	srai	r2,r2,1
  806cb0:	e0bff415 	stw	r2,-48(fp)
  806cb4:	00001906 	br	806d1c <get_dqt+0x348>
  806cb8:	00801004 	movi	r2,64
  806cbc:	e0bff415 	stw	r2,-48(fp)
  806cc0:	00001606 	br	806d1c <get_dqt+0x348>
  806cc4:	e0bff317 	ldw	r2,-52(fp)
  806cc8:	10801008 	cmpgei	r2,r2,64
  806ccc:	1000111e 	bne	r2,zero,806d14 <get_dqt+0x340>
  806cd0:	e03ff515 	stw	zero,-44(fp)
  806cd4:	00000906 	br	806cfc <get_dqt+0x328>
  806cd8:	e0fffd17 	ldw	r3,-12(fp)
  806cdc:	e0bff517 	ldw	r2,-44(fp)
  806ce0:	1085883a 	add	r2,r2,r2
  806ce4:	1885883a 	add	r2,r3,r2
  806ce8:	00c00044 	movi	r3,1
  806cec:	10c0000d 	sth	r3,0(r2)
  806cf0:	e0bff517 	ldw	r2,-44(fp)
  806cf4:	10800044 	addi	r2,r2,1
  806cf8:	e0bff515 	stw	r2,-44(fp)
  806cfc:	e0bff517 	ldw	r2,-44(fp)
  806d00:	10801010 	cmplti	r2,r2,64
  806d04:	103ff41e 	bne	r2,zero,806cd8 <__alt_mem_epcs_flash_controller_0+0xff7fdcd8>
  806d08:	e0bff317 	ldw	r2,-52(fp)
  806d0c:	e0bff415 	stw	r2,-48(fp)
  806d10:	00000206 	br	806d1c <get_dqt+0x348>
  806d14:	00801004 	movi	r2,64
  806d18:	e0bff415 	stw	r2,-48(fp)
  806d1c:	e0bff417 	ldw	r2,-48(fp)
  806d20:	10bfff04 	addi	r2,r2,-4
  806d24:	10c00ba8 	cmpgeui	r3,r2,46
  806d28:	18004c1e 	bne	r3,zero,806e5c <get_dqt+0x488>
  806d2c:	100690ba 	slli	r3,r2,2
  806d30:	00802034 	movhi	r2,128
  806d34:	109b5104 	addi	r2,r2,27972
  806d38:	1885883a 	add	r2,r3,r2
  806d3c:	10800017 	ldw	r2,0(r2)
  806d40:	1000683a 	jmp	r2
  806d44:	00806dfc 	xorhi	r2,zero,439
  806d48:	00806e5c 	xori	r2,zero,441
  806d4c:	00806e5c 	xori	r2,zero,441
  806d50:	00806e5c 	xori	r2,zero,441
  806d54:	00806e5c 	xori	r2,zero,441
  806d58:	00806e0c 	andi	r2,zero,440
  806d5c:	00806e5c 	xori	r2,zero,441
  806d60:	00806e5c 	xori	r2,zero,441
  806d64:	00806e5c 	xori	r2,zero,441
  806d68:	00806e5c 	xori	r2,zero,441
  806d6c:	00806e5c 	xori	r2,zero,441
  806d70:	00806e5c 	xori	r2,zero,441
  806d74:	00806e1c 	xori	r2,zero,440
  806d78:	00806e5c 	xori	r2,zero,441
  806d7c:	00806e5c 	xori	r2,zero,441
  806d80:	00806e5c 	xori	r2,zero,441
  806d84:	00806e5c 	xori	r2,zero,441
  806d88:	00806e5c 	xori	r2,zero,441
  806d8c:	00806e5c 	xori	r2,zero,441
  806d90:	00806e5c 	xori	r2,zero,441
  806d94:	00806e5c 	xori	r2,zero,441
  806d98:	00806e2c 	andhi	r2,zero,440
  806d9c:	00806e5c 	xori	r2,zero,441
  806da0:	00806e5c 	xori	r2,zero,441
  806da4:	00806e5c 	xori	r2,zero,441
  806da8:	00806e5c 	xori	r2,zero,441
  806dac:	00806e5c 	xori	r2,zero,441
  806db0:	00806e5c 	xori	r2,zero,441
  806db4:	00806e5c 	xori	r2,zero,441
  806db8:	00806e5c 	xori	r2,zero,441
  806dbc:	00806e5c 	xori	r2,zero,441
  806dc0:	00806e5c 	xori	r2,zero,441
  806dc4:	00806e3c 	xorhi	r2,zero,440
  806dc8:	00806e5c 	xori	r2,zero,441
  806dcc:	00806e5c 	xori	r2,zero,441
  806dd0:	00806e5c 	xori	r2,zero,441
  806dd4:	00806e5c 	xori	r2,zero,441
  806dd8:	00806e5c 	xori	r2,zero,441
  806ddc:	00806e5c 	xori	r2,zero,441
  806de0:	00806e5c 	xori	r2,zero,441
  806de4:	00806e5c 	xori	r2,zero,441
  806de8:	00806e5c 	xori	r2,zero,441
  806dec:	00806e5c 	xori	r2,zero,441
  806df0:	00806e5c 	xori	r2,zero,441
  806df4:	00806e5c 	xori	r2,zero,441
  806df8:	00806e4c 	andi	r2,zero,441
  806dfc:	008021b4 	movhi	r2,134
  806e00:	10a42204 	addi	r2,r2,-28536
  806e04:	e0bff715 	stw	r2,-36(fp)
  806e08:	00001806 	br	806e6c <get_dqt+0x498>
  806e0c:	008021b4 	movhi	r2,134
  806e10:	10a40904 	addi	r2,r2,-28636
  806e14:	e0bff715 	stw	r2,-36(fp)
  806e18:	00001406 	br	806e6c <get_dqt+0x498>
  806e1c:	008021b4 	movhi	r2,134
  806e20:	10a3e904 	addi	r2,r2,-28764
  806e24:	e0bff715 	stw	r2,-36(fp)
  806e28:	00001006 	br	806e6c <get_dqt+0x498>
  806e2c:	008021b4 	movhi	r2,134
  806e30:	10a3c004 	addi	r2,r2,-28928
  806e34:	e0bff715 	stw	r2,-36(fp)
  806e38:	00000c06 	br	806e6c <get_dqt+0x498>
  806e3c:	008021b4 	movhi	r2,134
  806e40:	10a38c04 	addi	r2,r2,-29136
  806e44:	e0bff715 	stw	r2,-36(fp)
  806e48:	00000806 	br	806e6c <get_dqt+0x498>
  806e4c:	008021b4 	movhi	r2,134
  806e50:	10a34b04 	addi	r2,r2,-29396
  806e54:	e0bff715 	stw	r2,-36(fp)
  806e58:	00000406 	br	806e6c <get_dqt+0x498>
  806e5c:	008021b4 	movhi	r2,134
  806e60:	10a2fb04 	addi	r2,r2,-29716
  806e64:	e0bff715 	stw	r2,-36(fp)
  806e68:	0001883a 	nop
  806e6c:	e03ff515 	stw	zero,-44(fp)
  806e70:	00005e06 	br	806fec <get_dqt+0x618>
  806e74:	e0bffc17 	ldw	r2,-16(fp)
  806e78:	10003426 	beq	r2,zero,806f4c <get_dqt+0x578>
  806e7c:	e0bff917 	ldw	r2,-28(fp)
  806e80:	10000d1e 	bne	r2,zero,806eb8 <get_dqt+0x4e4>
  806e84:	e0bffa17 	ldw	r2,-24(fp)
  806e88:	10800317 	ldw	r2,12(r2)
  806e8c:	e13fff17 	ldw	r4,-4(fp)
  806e90:	103ee83a 	callr	r2
  806e94:	1000021e 	bne	r2,zero,806ea0 <get_dqt+0x4cc>
  806e98:	0005883a 	mov	r2,zero
  806e9c:	0000dd06 	br	807214 <get_dqt+0x840>
  806ea0:	e0bffa17 	ldw	r2,-24(fp)
  806ea4:	10800017 	ldw	r2,0(r2)
  806ea8:	e0bff815 	stw	r2,-32(fp)
  806eac:	e0bffa17 	ldw	r2,-24(fp)
  806eb0:	10800117 	ldw	r2,4(r2)
  806eb4:	e0bff915 	stw	r2,-28(fp)
  806eb8:	e0bff917 	ldw	r2,-28(fp)
  806ebc:	10bfffc4 	addi	r2,r2,-1
  806ec0:	e0bff915 	stw	r2,-28(fp)
  806ec4:	e0bff817 	ldw	r2,-32(fp)
  806ec8:	10c00044 	addi	r3,r2,1
  806ecc:	e0fff815 	stw	r3,-32(fp)
  806ed0:	10800003 	ldbu	r2,0(r2)
  806ed4:	10803fcc 	andi	r2,r2,255
  806ed8:	1004923a 	slli	r2,r2,8
  806edc:	e0bff615 	stw	r2,-40(fp)
  806ee0:	e0bff917 	ldw	r2,-28(fp)
  806ee4:	10000d1e 	bne	r2,zero,806f1c <get_dqt+0x548>
  806ee8:	e0bffa17 	ldw	r2,-24(fp)
  806eec:	10800317 	ldw	r2,12(r2)
  806ef0:	e13fff17 	ldw	r4,-4(fp)
  806ef4:	103ee83a 	callr	r2
  806ef8:	1000021e 	bne	r2,zero,806f04 <get_dqt+0x530>
  806efc:	0005883a 	mov	r2,zero
  806f00:	0000c406 	br	807214 <get_dqt+0x840>
  806f04:	e0bffa17 	ldw	r2,-24(fp)
  806f08:	10800017 	ldw	r2,0(r2)
  806f0c:	e0bff815 	stw	r2,-32(fp)
  806f10:	e0bffa17 	ldw	r2,-24(fp)
  806f14:	10800117 	ldw	r2,4(r2)
  806f18:	e0bff915 	stw	r2,-28(fp)
  806f1c:	e0bff917 	ldw	r2,-28(fp)
  806f20:	10bfffc4 	addi	r2,r2,-1
  806f24:	e0bff915 	stw	r2,-28(fp)
  806f28:	e0bff817 	ldw	r2,-32(fp)
  806f2c:	10c00044 	addi	r3,r2,1
  806f30:	e0fff815 	stw	r3,-32(fp)
  806f34:	10800003 	ldbu	r2,0(r2)
  806f38:	10803fcc 	andi	r2,r2,255
  806f3c:	e0fff617 	ldw	r3,-40(fp)
  806f40:	1885883a 	add	r2,r3,r2
  806f44:	e0bff615 	stw	r2,-40(fp)
  806f48:	00001806 	br	806fac <get_dqt+0x5d8>
  806f4c:	e0bff917 	ldw	r2,-28(fp)
  806f50:	10000d1e 	bne	r2,zero,806f88 <get_dqt+0x5b4>
  806f54:	e0bffa17 	ldw	r2,-24(fp)
  806f58:	10800317 	ldw	r2,12(r2)
  806f5c:	e13fff17 	ldw	r4,-4(fp)
  806f60:	103ee83a 	callr	r2
  806f64:	1000021e 	bne	r2,zero,806f70 <get_dqt+0x59c>
  806f68:	0005883a 	mov	r2,zero
  806f6c:	0000a906 	br	807214 <get_dqt+0x840>
  806f70:	e0bffa17 	ldw	r2,-24(fp)
  806f74:	10800017 	ldw	r2,0(r2)
  806f78:	e0bff815 	stw	r2,-32(fp)
  806f7c:	e0bffa17 	ldw	r2,-24(fp)
  806f80:	10800117 	ldw	r2,4(r2)
  806f84:	e0bff915 	stw	r2,-28(fp)
  806f88:	e0bff917 	ldw	r2,-28(fp)
  806f8c:	10bfffc4 	addi	r2,r2,-1
  806f90:	e0bff915 	stw	r2,-28(fp)
  806f94:	e0bff817 	ldw	r2,-32(fp)
  806f98:	10c00044 	addi	r3,r2,1
  806f9c:	e0fff815 	stw	r3,-32(fp)
  806fa0:	10800003 	ldbu	r2,0(r2)
  806fa4:	10803fcc 	andi	r2,r2,255
  806fa8:	e0bff615 	stw	r2,-40(fp)
  806fac:	e0bff517 	ldw	r2,-44(fp)
  806fb0:	1085883a 	add	r2,r2,r2
  806fb4:	1085883a 	add	r2,r2,r2
  806fb8:	1007883a 	mov	r3,r2
  806fbc:	e0bff717 	ldw	r2,-36(fp)
  806fc0:	10c5883a 	add	r2,r2,r3
  806fc4:	10800017 	ldw	r2,0(r2)
  806fc8:	e0fff617 	ldw	r3,-40(fp)
  806fcc:	1809883a 	mov	r4,r3
  806fd0:	e0fffd17 	ldw	r3,-12(fp)
  806fd4:	1085883a 	add	r2,r2,r2
  806fd8:	1885883a 	add	r2,r3,r2
  806fdc:	1100000d 	sth	r4,0(r2)
  806fe0:	e0bff517 	ldw	r2,-44(fp)
  806fe4:	10800044 	addi	r2,r2,1
  806fe8:	e0bff515 	stw	r2,-44(fp)
  806fec:	e0fff517 	ldw	r3,-44(fp)
  806ff0:	e0bff417 	ldw	r2,-48(fp)
  806ff4:	18bf9f16 	blt	r3,r2,806e74 <__alt_mem_epcs_flash_controller_0+0xff7fde74>
  806ff8:	e0bfff17 	ldw	r2,-4(fp)
  806ffc:	10800017 	ldw	r2,0(r2)
  807000:	10801a17 	ldw	r2,104(r2)
  807004:	10800090 	cmplti	r2,r2,2
  807008:	1000641e 	bne	r2,zero,80719c <get_dqt+0x7c8>
  80700c:	e03ff515 	stw	zero,-44(fp)
  807010:	00005f06 	br	807190 <get_dqt+0x7bc>
  807014:	e0bfff17 	ldw	r2,-4(fp)
  807018:	10800017 	ldw	r2,0(r2)
  80701c:	10800604 	addi	r2,r2,24
  807020:	e0bffe15 	stw	r2,-8(fp)
  807024:	e0fffd17 	ldw	r3,-12(fp)
  807028:	e0bff517 	ldw	r2,-44(fp)
  80702c:	1085883a 	add	r2,r2,r2
  807030:	1885883a 	add	r2,r3,r2
  807034:	1080000b 	ldhu	r2,0(r2)
  807038:	10ffffcc 	andi	r3,r2,65535
  80703c:	e0bffe17 	ldw	r2,-8(fp)
  807040:	10c00015 	stw	r3,0(r2)
  807044:	e0bffe17 	ldw	r2,-8(fp)
  807048:	10c00104 	addi	r3,r2,4
  80704c:	e0bff517 	ldw	r2,-44(fp)
  807050:	10800044 	addi	r2,r2,1
  807054:	e13ffd17 	ldw	r4,-12(fp)
  807058:	1085883a 	add	r2,r2,r2
  80705c:	2085883a 	add	r2,r4,r2
  807060:	1080000b 	ldhu	r2,0(r2)
  807064:	10bfffcc 	andi	r2,r2,65535
  807068:	18800015 	stw	r2,0(r3)
  80706c:	e0bffe17 	ldw	r2,-8(fp)
  807070:	10c00204 	addi	r3,r2,8
  807074:	e0bff517 	ldw	r2,-44(fp)
  807078:	10800084 	addi	r2,r2,2
  80707c:	e13ffd17 	ldw	r4,-12(fp)
  807080:	1085883a 	add	r2,r2,r2
  807084:	2085883a 	add	r2,r4,r2
  807088:	1080000b 	ldhu	r2,0(r2)
  80708c:	10bfffcc 	andi	r2,r2,65535
  807090:	18800015 	stw	r2,0(r3)
  807094:	e0bffe17 	ldw	r2,-8(fp)
  807098:	10c00304 	addi	r3,r2,12
  80709c:	e0bff517 	ldw	r2,-44(fp)
  8070a0:	108000c4 	addi	r2,r2,3
  8070a4:	e13ffd17 	ldw	r4,-12(fp)
  8070a8:	1085883a 	add	r2,r2,r2
  8070ac:	2085883a 	add	r2,r4,r2
  8070b0:	1080000b 	ldhu	r2,0(r2)
  8070b4:	10bfffcc 	andi	r2,r2,65535
  8070b8:	18800015 	stw	r2,0(r3)
  8070bc:	e0bffe17 	ldw	r2,-8(fp)
  8070c0:	10c00404 	addi	r3,r2,16
  8070c4:	e0bff517 	ldw	r2,-44(fp)
  8070c8:	10800104 	addi	r2,r2,4
  8070cc:	e13ffd17 	ldw	r4,-12(fp)
  8070d0:	1085883a 	add	r2,r2,r2
  8070d4:	2085883a 	add	r2,r4,r2
  8070d8:	1080000b 	ldhu	r2,0(r2)
  8070dc:	10bfffcc 	andi	r2,r2,65535
  8070e0:	18800015 	stw	r2,0(r3)
  8070e4:	e0bffe17 	ldw	r2,-8(fp)
  8070e8:	10c00504 	addi	r3,r2,20
  8070ec:	e0bff517 	ldw	r2,-44(fp)
  8070f0:	10800144 	addi	r2,r2,5
  8070f4:	e13ffd17 	ldw	r4,-12(fp)
  8070f8:	1085883a 	add	r2,r2,r2
  8070fc:	2085883a 	add	r2,r4,r2
  807100:	1080000b 	ldhu	r2,0(r2)
  807104:	10bfffcc 	andi	r2,r2,65535
  807108:	18800015 	stw	r2,0(r3)
  80710c:	e0bffe17 	ldw	r2,-8(fp)
  807110:	10c00604 	addi	r3,r2,24
  807114:	e0bff517 	ldw	r2,-44(fp)
  807118:	10800184 	addi	r2,r2,6
  80711c:	e13ffd17 	ldw	r4,-12(fp)
  807120:	1085883a 	add	r2,r2,r2
  807124:	2085883a 	add	r2,r4,r2
  807128:	1080000b 	ldhu	r2,0(r2)
  80712c:	10bfffcc 	andi	r2,r2,65535
  807130:	18800015 	stw	r2,0(r3)
  807134:	e0bffe17 	ldw	r2,-8(fp)
  807138:	10c00704 	addi	r3,r2,28
  80713c:	e0bff517 	ldw	r2,-44(fp)
  807140:	108001c4 	addi	r2,r2,7
  807144:	e13ffd17 	ldw	r4,-12(fp)
  807148:	1085883a 	add	r2,r2,r2
  80714c:	2085883a 	add	r2,r4,r2
  807150:	1080000b 	ldhu	r2,0(r2)
  807154:	10bfffcc 	andi	r2,r2,65535
  807158:	18800015 	stw	r2,0(r3)
  80715c:	e0bfff17 	ldw	r2,-4(fp)
  807160:	10800017 	ldw	r2,0(r2)
  807164:	00c017c4 	movi	r3,95
  807168:	10c00515 	stw	r3,20(r2)
  80716c:	e0bfff17 	ldw	r2,-4(fp)
  807170:	10800017 	ldw	r2,0(r2)
  807174:	10800117 	ldw	r2,4(r2)
  807178:	01400084 	movi	r5,2
  80717c:	e13fff17 	ldw	r4,-4(fp)
  807180:	103ee83a 	callr	r2
  807184:	e0bff517 	ldw	r2,-44(fp)
  807188:	10800204 	addi	r2,r2,8
  80718c:	e0bff515 	stw	r2,-44(fp)
  807190:	e0bff517 	ldw	r2,-44(fp)
  807194:	10801010 	cmplti	r2,r2,64
  807198:	103f9e1e 	bne	r2,zero,807014 <__alt_mem_epcs_flash_controller_0+0xff7fe014>
  80719c:	e0fff317 	ldw	r3,-52(fp)
  8071a0:	e0bff417 	ldw	r2,-48(fp)
  8071a4:	1885c83a 	sub	r2,r3,r2
  8071a8:	e0bff315 	stw	r2,-52(fp)
  8071ac:	e0bffc17 	ldw	r2,-16(fp)
  8071b0:	10000426 	beq	r2,zero,8071c4 <get_dqt+0x7f0>
  8071b4:	e0fff317 	ldw	r3,-52(fp)
  8071b8:	e0bff417 	ldw	r2,-48(fp)
  8071bc:	1885c83a 	sub	r2,r3,r2
  8071c0:	e0bff315 	stw	r2,-52(fp)
  8071c4:	e0bff317 	ldw	r2,-52(fp)
  8071c8:	00be4716 	blt	zero,r2,806ae8 <__alt_mem_epcs_flash_controller_0+0xff7fdae8>
  8071cc:	e0bff317 	ldw	r2,-52(fp)
  8071d0:	10000926 	beq	r2,zero,8071f8 <get_dqt+0x824>
  8071d4:	e0bfff17 	ldw	r2,-4(fp)
  8071d8:	10800017 	ldw	r2,0(r2)
  8071dc:	00c00304 	movi	r3,12
  8071e0:	10c00515 	stw	r3,20(r2)
  8071e4:	e0bfff17 	ldw	r2,-4(fp)
  8071e8:	10800017 	ldw	r2,0(r2)
  8071ec:	10800017 	ldw	r2,0(r2)
  8071f0:	e13fff17 	ldw	r4,-4(fp)
  8071f4:	103ee83a 	callr	r2
  8071f8:	e0bffa17 	ldw	r2,-24(fp)
  8071fc:	e0fff817 	ldw	r3,-32(fp)
  807200:	10c00015 	stw	r3,0(r2)
  807204:	e0bffa17 	ldw	r2,-24(fp)
  807208:	e0fff917 	ldw	r3,-28(fp)
  80720c:	10c00115 	stw	r3,4(r2)
  807210:	00800044 	movi	r2,1
  807214:	e037883a 	mov	sp,fp
  807218:	dfc00117 	ldw	ra,4(sp)
  80721c:	df000017 	ldw	fp,0(sp)
  807220:	dec00204 	addi	sp,sp,8
  807224:	f800283a 	ret

00807228 <get_dri>:
  807228:	defff804 	addi	sp,sp,-32
  80722c:	dfc00715 	stw	ra,28(sp)
  807230:	df000615 	stw	fp,24(sp)
  807234:	df000604 	addi	fp,sp,24
  807238:	e13fff15 	stw	r4,-4(fp)
  80723c:	e0bfff17 	ldw	r2,-4(fp)
  807240:	10800617 	ldw	r2,24(r2)
  807244:	e0bffc15 	stw	r2,-16(fp)
  807248:	e0bffc17 	ldw	r2,-16(fp)
  80724c:	10800017 	ldw	r2,0(r2)
  807250:	e0bffa15 	stw	r2,-24(fp)
  807254:	e0bffc17 	ldw	r2,-16(fp)
  807258:	10800117 	ldw	r2,4(r2)
  80725c:	e0bffb15 	stw	r2,-20(fp)
  807260:	e0bffb17 	ldw	r2,-20(fp)
  807264:	10000d1e 	bne	r2,zero,80729c <get_dri+0x74>
  807268:	e0bffc17 	ldw	r2,-16(fp)
  80726c:	10800317 	ldw	r2,12(r2)
  807270:	e13fff17 	ldw	r4,-4(fp)
  807274:	103ee83a 	callr	r2
  807278:	1000021e 	bne	r2,zero,807284 <get_dri+0x5c>
  80727c:	0005883a 	mov	r2,zero
  807280:	00008106 	br	807488 <get_dri+0x260>
  807284:	e0bffc17 	ldw	r2,-16(fp)
  807288:	10800017 	ldw	r2,0(r2)
  80728c:	e0bffa15 	stw	r2,-24(fp)
  807290:	e0bffc17 	ldw	r2,-16(fp)
  807294:	10800117 	ldw	r2,4(r2)
  807298:	e0bffb15 	stw	r2,-20(fp)
  80729c:	e0bffb17 	ldw	r2,-20(fp)
  8072a0:	10bfffc4 	addi	r2,r2,-1
  8072a4:	e0bffb15 	stw	r2,-20(fp)
  8072a8:	e0bffa17 	ldw	r2,-24(fp)
  8072ac:	10c00044 	addi	r3,r2,1
  8072b0:	e0fffa15 	stw	r3,-24(fp)
  8072b4:	10800003 	ldbu	r2,0(r2)
  8072b8:	10803fcc 	andi	r2,r2,255
  8072bc:	1004923a 	slli	r2,r2,8
  8072c0:	e0bffd15 	stw	r2,-12(fp)
  8072c4:	e0bffb17 	ldw	r2,-20(fp)
  8072c8:	10000d1e 	bne	r2,zero,807300 <get_dri+0xd8>
  8072cc:	e0bffc17 	ldw	r2,-16(fp)
  8072d0:	10800317 	ldw	r2,12(r2)
  8072d4:	e13fff17 	ldw	r4,-4(fp)
  8072d8:	103ee83a 	callr	r2
  8072dc:	1000021e 	bne	r2,zero,8072e8 <get_dri+0xc0>
  8072e0:	0005883a 	mov	r2,zero
  8072e4:	00006806 	br	807488 <get_dri+0x260>
  8072e8:	e0bffc17 	ldw	r2,-16(fp)
  8072ec:	10800017 	ldw	r2,0(r2)
  8072f0:	e0bffa15 	stw	r2,-24(fp)
  8072f4:	e0bffc17 	ldw	r2,-16(fp)
  8072f8:	10800117 	ldw	r2,4(r2)
  8072fc:	e0bffb15 	stw	r2,-20(fp)
  807300:	e0bffb17 	ldw	r2,-20(fp)
  807304:	10bfffc4 	addi	r2,r2,-1
  807308:	e0bffb15 	stw	r2,-20(fp)
  80730c:	e0bffa17 	ldw	r2,-24(fp)
  807310:	10c00044 	addi	r3,r2,1
  807314:	e0fffa15 	stw	r3,-24(fp)
  807318:	10800003 	ldbu	r2,0(r2)
  80731c:	10803fcc 	andi	r2,r2,255
  807320:	e0fffd17 	ldw	r3,-12(fp)
  807324:	1885883a 	add	r2,r3,r2
  807328:	e0bffd15 	stw	r2,-12(fp)
  80732c:	e0bffd17 	ldw	r2,-12(fp)
  807330:	10800120 	cmpeqi	r2,r2,4
  807334:	1000091e 	bne	r2,zero,80735c <get_dri+0x134>
  807338:	e0bfff17 	ldw	r2,-4(fp)
  80733c:	10800017 	ldw	r2,0(r2)
  807340:	00c00304 	movi	r3,12
  807344:	10c00515 	stw	r3,20(r2)
  807348:	e0bfff17 	ldw	r2,-4(fp)
  80734c:	10800017 	ldw	r2,0(r2)
  807350:	10800017 	ldw	r2,0(r2)
  807354:	e13fff17 	ldw	r4,-4(fp)
  807358:	103ee83a 	callr	r2
  80735c:	e0bffb17 	ldw	r2,-20(fp)
  807360:	10000d1e 	bne	r2,zero,807398 <get_dri+0x170>
  807364:	e0bffc17 	ldw	r2,-16(fp)
  807368:	10800317 	ldw	r2,12(r2)
  80736c:	e13fff17 	ldw	r4,-4(fp)
  807370:	103ee83a 	callr	r2
  807374:	1000021e 	bne	r2,zero,807380 <get_dri+0x158>
  807378:	0005883a 	mov	r2,zero
  80737c:	00004206 	br	807488 <get_dri+0x260>
  807380:	e0bffc17 	ldw	r2,-16(fp)
  807384:	10800017 	ldw	r2,0(r2)
  807388:	e0bffa15 	stw	r2,-24(fp)
  80738c:	e0bffc17 	ldw	r2,-16(fp)
  807390:	10800117 	ldw	r2,4(r2)
  807394:	e0bffb15 	stw	r2,-20(fp)
  807398:	e0bffb17 	ldw	r2,-20(fp)
  80739c:	10bfffc4 	addi	r2,r2,-1
  8073a0:	e0bffb15 	stw	r2,-20(fp)
  8073a4:	e0bffa17 	ldw	r2,-24(fp)
  8073a8:	10c00044 	addi	r3,r2,1
  8073ac:	e0fffa15 	stw	r3,-24(fp)
  8073b0:	10800003 	ldbu	r2,0(r2)
  8073b4:	10803fcc 	andi	r2,r2,255
  8073b8:	1004923a 	slli	r2,r2,8
  8073bc:	e0bffe15 	stw	r2,-8(fp)
  8073c0:	e0bffb17 	ldw	r2,-20(fp)
  8073c4:	10000d1e 	bne	r2,zero,8073fc <get_dri+0x1d4>
  8073c8:	e0bffc17 	ldw	r2,-16(fp)
  8073cc:	10800317 	ldw	r2,12(r2)
  8073d0:	e13fff17 	ldw	r4,-4(fp)
  8073d4:	103ee83a 	callr	r2
  8073d8:	1000021e 	bne	r2,zero,8073e4 <get_dri+0x1bc>
  8073dc:	0005883a 	mov	r2,zero
  8073e0:	00002906 	br	807488 <get_dri+0x260>
  8073e4:	e0bffc17 	ldw	r2,-16(fp)
  8073e8:	10800017 	ldw	r2,0(r2)
  8073ec:	e0bffa15 	stw	r2,-24(fp)
  8073f0:	e0bffc17 	ldw	r2,-16(fp)
  8073f4:	10800117 	ldw	r2,4(r2)
  8073f8:	e0bffb15 	stw	r2,-20(fp)
  8073fc:	e0bffb17 	ldw	r2,-20(fp)
  807400:	10bfffc4 	addi	r2,r2,-1
  807404:	e0bffb15 	stw	r2,-20(fp)
  807408:	e0bffa17 	ldw	r2,-24(fp)
  80740c:	10c00044 	addi	r3,r2,1
  807410:	e0fffa15 	stw	r3,-24(fp)
  807414:	10800003 	ldbu	r2,0(r2)
  807418:	10803fcc 	andi	r2,r2,255
  80741c:	e0fffe17 	ldw	r3,-8(fp)
  807420:	1885883a 	add	r2,r3,r2
  807424:	e0bffe15 	stw	r2,-8(fp)
  807428:	e0bfff17 	ldw	r2,-4(fp)
  80742c:	10800017 	ldw	r2,0(r2)
  807430:	00c01504 	movi	r3,84
  807434:	10c00515 	stw	r3,20(r2)
  807438:	e0bfff17 	ldw	r2,-4(fp)
  80743c:	10800017 	ldw	r2,0(r2)
  807440:	e0fffe17 	ldw	r3,-8(fp)
  807444:	10c00615 	stw	r3,24(r2)
  807448:	e0bfff17 	ldw	r2,-4(fp)
  80744c:	10800017 	ldw	r2,0(r2)
  807450:	10800117 	ldw	r2,4(r2)
  807454:	01400044 	movi	r5,1
  807458:	e13fff17 	ldw	r4,-4(fp)
  80745c:	103ee83a 	callr	r2
  807460:	e0bfff17 	ldw	r2,-4(fp)
  807464:	e0fffe17 	ldw	r3,-8(fp)
  807468:	10c04615 	stw	r3,280(r2)
  80746c:	e0bffc17 	ldw	r2,-16(fp)
  807470:	e0fffa17 	ldw	r3,-24(fp)
  807474:	10c00015 	stw	r3,0(r2)
  807478:	e0bffc17 	ldw	r2,-16(fp)
  80747c:	e0fffb17 	ldw	r3,-20(fp)
  807480:	10c00115 	stw	r3,4(r2)
  807484:	00800044 	movi	r2,1
  807488:	e037883a 	mov	sp,fp
  80748c:	dfc00117 	ldw	ra,4(sp)
  807490:	df000017 	ldw	fp,0(sp)
  807494:	dec00204 	addi	sp,sp,8
  807498:	f800283a 	ret

0080749c <get_lse>:
  80749c:	defff704 	addi	sp,sp,-36
  8074a0:	dfc00815 	stw	ra,32(sp)
  8074a4:	df000715 	stw	fp,28(sp)
  8074a8:	df000704 	addi	fp,sp,28
  8074ac:	e13fff15 	stw	r4,-4(fp)
  8074b0:	e0bfff17 	ldw	r2,-4(fp)
  8074b4:	10800617 	ldw	r2,24(r2)
  8074b8:	e0bffb15 	stw	r2,-20(fp)
  8074bc:	e0bffb17 	ldw	r2,-20(fp)
  8074c0:	10800017 	ldw	r2,0(r2)
  8074c4:	e0bff915 	stw	r2,-28(fp)
  8074c8:	e0bffb17 	ldw	r2,-20(fp)
  8074cc:	10800117 	ldw	r2,4(r2)
  8074d0:	e0bffa15 	stw	r2,-24(fp)
  8074d4:	e0bfff17 	ldw	r2,-4(fp)
  8074d8:	10807417 	ldw	r2,464(r2)
  8074dc:	10800417 	ldw	r2,16(r2)
  8074e0:	1000111e 	bne	r2,zero,807528 <get_lse+0x8c>
  8074e4:	e0bfff17 	ldw	r2,-4(fp)
  8074e8:	10800017 	ldw	r2,0(r2)
  8074ec:	00c00f04 	movi	r3,60
  8074f0:	10c00515 	stw	r3,20(r2)
  8074f4:	e0bfff17 	ldw	r2,-4(fp)
  8074f8:	10800017 	ldw	r2,0(r2)
  8074fc:	10800604 	addi	r2,r2,24
  807500:	01801404 	movi	r6,80
  807504:	01402174 	movhi	r5,133
  807508:	295d6e04 	addi	r5,r5,30136
  80750c:	1009883a 	mov	r4,r2
  807510:	08352780 	call	835278 <strncpy>
  807514:	e0bfff17 	ldw	r2,-4(fp)
  807518:	10800017 	ldw	r2,0(r2)
  80751c:	10800017 	ldw	r2,0(r2)
  807520:	e13fff17 	ldw	r4,-4(fp)
  807524:	103ee83a 	callr	r2
  807528:	e0bfff17 	ldw	r2,-4(fp)
  80752c:	10800917 	ldw	r2,36(r2)
  807530:	108000c8 	cmpgei	r2,r2,3
  807534:	1002a226 	beq	r2,zero,807fc0 <get_lse+0xb24>
  807538:	e0bffa17 	ldw	r2,-24(fp)
  80753c:	10000d1e 	bne	r2,zero,807574 <get_lse+0xd8>
  807540:	e0bffb17 	ldw	r2,-20(fp)
  807544:	10800317 	ldw	r2,12(r2)
  807548:	e13fff17 	ldw	r4,-4(fp)
  80754c:	103ee83a 	callr	r2
  807550:	1000021e 	bne	r2,zero,80755c <get_lse+0xc0>
  807554:	0005883a 	mov	r2,zero
  807558:	0002c706 	br	808078 <get_lse+0xbdc>
  80755c:	e0bffb17 	ldw	r2,-20(fp)
  807560:	10800017 	ldw	r2,0(r2)
  807564:	e0bff915 	stw	r2,-28(fp)
  807568:	e0bffb17 	ldw	r2,-20(fp)
  80756c:	10800117 	ldw	r2,4(r2)
  807570:	e0bffa15 	stw	r2,-24(fp)
  807574:	e0bffa17 	ldw	r2,-24(fp)
  807578:	10bfffc4 	addi	r2,r2,-1
  80757c:	e0bffa15 	stw	r2,-24(fp)
  807580:	e0bff917 	ldw	r2,-28(fp)
  807584:	10c00044 	addi	r3,r2,1
  807588:	e0fff915 	stw	r3,-28(fp)
  80758c:	10800003 	ldbu	r2,0(r2)
  807590:	10803fcc 	andi	r2,r2,255
  807594:	1004923a 	slli	r2,r2,8
  807598:	e0bffc15 	stw	r2,-16(fp)
  80759c:	e0bffa17 	ldw	r2,-24(fp)
  8075a0:	10000d1e 	bne	r2,zero,8075d8 <get_lse+0x13c>
  8075a4:	e0bffb17 	ldw	r2,-20(fp)
  8075a8:	10800317 	ldw	r2,12(r2)
  8075ac:	e13fff17 	ldw	r4,-4(fp)
  8075b0:	103ee83a 	callr	r2
  8075b4:	1000021e 	bne	r2,zero,8075c0 <get_lse+0x124>
  8075b8:	0005883a 	mov	r2,zero
  8075bc:	0002ae06 	br	808078 <get_lse+0xbdc>
  8075c0:	e0bffb17 	ldw	r2,-20(fp)
  8075c4:	10800017 	ldw	r2,0(r2)
  8075c8:	e0bff915 	stw	r2,-28(fp)
  8075cc:	e0bffb17 	ldw	r2,-20(fp)
  8075d0:	10800117 	ldw	r2,4(r2)
  8075d4:	e0bffa15 	stw	r2,-24(fp)
  8075d8:	e0bffa17 	ldw	r2,-24(fp)
  8075dc:	10bfffc4 	addi	r2,r2,-1
  8075e0:	e0bffa15 	stw	r2,-24(fp)
  8075e4:	e0bff917 	ldw	r2,-28(fp)
  8075e8:	10c00044 	addi	r3,r2,1
  8075ec:	e0fff915 	stw	r3,-28(fp)
  8075f0:	10800003 	ldbu	r2,0(r2)
  8075f4:	10803fcc 	andi	r2,r2,255
  8075f8:	e0fffc17 	ldw	r3,-16(fp)
  8075fc:	1885883a 	add	r2,r3,r2
  807600:	e0bffc15 	stw	r2,-16(fp)
  807604:	e0bffc17 	ldw	r2,-16(fp)
  807608:	10800620 	cmpeqi	r2,r2,24
  80760c:	1000091e 	bne	r2,zero,807634 <get_lse+0x198>
  807610:	e0bfff17 	ldw	r2,-4(fp)
  807614:	10800017 	ldw	r2,0(r2)
  807618:	00c00304 	movi	r3,12
  80761c:	10c00515 	stw	r3,20(r2)
  807620:	e0bfff17 	ldw	r2,-4(fp)
  807624:	10800017 	ldw	r2,0(r2)
  807628:	10800017 	ldw	r2,0(r2)
  80762c:	e13fff17 	ldw	r4,-4(fp)
  807630:	103ee83a 	callr	r2
  807634:	e0bffa17 	ldw	r2,-24(fp)
  807638:	10000d1e 	bne	r2,zero,807670 <get_lse+0x1d4>
  80763c:	e0bffb17 	ldw	r2,-20(fp)
  807640:	10800317 	ldw	r2,12(r2)
  807644:	e13fff17 	ldw	r4,-4(fp)
  807648:	103ee83a 	callr	r2
  80764c:	1000021e 	bne	r2,zero,807658 <get_lse+0x1bc>
  807650:	0005883a 	mov	r2,zero
  807654:	00028806 	br	808078 <get_lse+0xbdc>
  807658:	e0bffb17 	ldw	r2,-20(fp)
  80765c:	10800017 	ldw	r2,0(r2)
  807660:	e0bff915 	stw	r2,-28(fp)
  807664:	e0bffb17 	ldw	r2,-20(fp)
  807668:	10800117 	ldw	r2,4(r2)
  80766c:	e0bffa15 	stw	r2,-24(fp)
  807670:	e0bffa17 	ldw	r2,-24(fp)
  807674:	10bfffc4 	addi	r2,r2,-1
  807678:	e0bffa15 	stw	r2,-24(fp)
  80767c:	e0bff917 	ldw	r2,-28(fp)
  807680:	10c00044 	addi	r3,r2,1
  807684:	e0fff915 	stw	r3,-28(fp)
  807688:	10800003 	ldbu	r2,0(r2)
  80768c:	10803fcc 	andi	r2,r2,255
  807690:	e0bffd15 	stw	r2,-12(fp)
  807694:	e0bffd17 	ldw	r2,-12(fp)
  807698:	10800360 	cmpeqi	r2,r2,13
  80769c:	10000e1e 	bne	r2,zero,8076d8 <get_lse+0x23c>
  8076a0:	e0bfff17 	ldw	r2,-4(fp)
  8076a4:	10800017 	ldw	r2,0(r2)
  8076a8:	00c01184 	movi	r3,70
  8076ac:	10c00515 	stw	r3,20(r2)
  8076b0:	e0bfff17 	ldw	r2,-4(fp)
  8076b4:	10800017 	ldw	r2,0(r2)
  8076b8:	e0ffff17 	ldw	r3,-4(fp)
  8076bc:	18c06e17 	ldw	r3,440(r3)
  8076c0:	10c00615 	stw	r3,24(r2)
  8076c4:	e0bfff17 	ldw	r2,-4(fp)
  8076c8:	10800017 	ldw	r2,0(r2)
  8076cc:	10800017 	ldw	r2,0(r2)
  8076d0:	e13fff17 	ldw	r4,-4(fp)
  8076d4:	103ee83a 	callr	r2
  8076d8:	e0bffa17 	ldw	r2,-24(fp)
  8076dc:	10000d1e 	bne	r2,zero,807714 <get_lse+0x278>
  8076e0:	e0bffb17 	ldw	r2,-20(fp)
  8076e4:	10800317 	ldw	r2,12(r2)
  8076e8:	e13fff17 	ldw	r4,-4(fp)
  8076ec:	103ee83a 	callr	r2
  8076f0:	1000021e 	bne	r2,zero,8076fc <get_lse+0x260>
  8076f4:	0005883a 	mov	r2,zero
  8076f8:	00025f06 	br	808078 <get_lse+0xbdc>
  8076fc:	e0bffb17 	ldw	r2,-20(fp)
  807700:	10800017 	ldw	r2,0(r2)
  807704:	e0bff915 	stw	r2,-28(fp)
  807708:	e0bffb17 	ldw	r2,-20(fp)
  80770c:	10800117 	ldw	r2,4(r2)
  807710:	e0bffa15 	stw	r2,-24(fp)
  807714:	e0bffa17 	ldw	r2,-24(fp)
  807718:	10bfffc4 	addi	r2,r2,-1
  80771c:	e0bffa15 	stw	r2,-24(fp)
  807720:	e0bff917 	ldw	r2,-28(fp)
  807724:	10c00044 	addi	r3,r2,1
  807728:	e0fff915 	stw	r3,-28(fp)
  80772c:	10800003 	ldbu	r2,0(r2)
  807730:	10803fcc 	andi	r2,r2,255
  807734:	1004923a 	slli	r2,r2,8
  807738:	e0bffd15 	stw	r2,-12(fp)
  80773c:	e0bffa17 	ldw	r2,-24(fp)
  807740:	10000d1e 	bne	r2,zero,807778 <get_lse+0x2dc>
  807744:	e0bffb17 	ldw	r2,-20(fp)
  807748:	10800317 	ldw	r2,12(r2)
  80774c:	e13fff17 	ldw	r4,-4(fp)
  807750:	103ee83a 	callr	r2
  807754:	1000021e 	bne	r2,zero,807760 <get_lse+0x2c4>
  807758:	0005883a 	mov	r2,zero
  80775c:	00024606 	br	808078 <get_lse+0xbdc>
  807760:	e0bffb17 	ldw	r2,-20(fp)
  807764:	10800017 	ldw	r2,0(r2)
  807768:	e0bff915 	stw	r2,-28(fp)
  80776c:	e0bffb17 	ldw	r2,-20(fp)
  807770:	10800117 	ldw	r2,4(r2)
  807774:	e0bffa15 	stw	r2,-24(fp)
  807778:	e0bffa17 	ldw	r2,-24(fp)
  80777c:	10bfffc4 	addi	r2,r2,-1
  807780:	e0bffa15 	stw	r2,-24(fp)
  807784:	e0bff917 	ldw	r2,-28(fp)
  807788:	10c00044 	addi	r3,r2,1
  80778c:	e0fff915 	stw	r3,-28(fp)
  807790:	10800003 	ldbu	r2,0(r2)
  807794:	10803fcc 	andi	r2,r2,255
  807798:	e0fffd17 	ldw	r3,-12(fp)
  80779c:	1885883a 	add	r2,r3,r2
  8077a0:	e0bffd15 	stw	r2,-12(fp)
  8077a4:	e0bffd17 	ldw	r2,-12(fp)
  8077a8:	10803fe0 	cmpeqi	r2,r2,255
  8077ac:	10020626 	beq	r2,zero,807fc8 <get_lse+0xb2c>
  8077b0:	e0bffa17 	ldw	r2,-24(fp)
  8077b4:	10000d1e 	bne	r2,zero,8077ec <get_lse+0x350>
  8077b8:	e0bffb17 	ldw	r2,-20(fp)
  8077bc:	10800317 	ldw	r2,12(r2)
  8077c0:	e13fff17 	ldw	r4,-4(fp)
  8077c4:	103ee83a 	callr	r2
  8077c8:	1000021e 	bne	r2,zero,8077d4 <get_lse+0x338>
  8077cc:	0005883a 	mov	r2,zero
  8077d0:	00022906 	br	808078 <get_lse+0xbdc>
  8077d4:	e0bffb17 	ldw	r2,-20(fp)
  8077d8:	10800017 	ldw	r2,0(r2)
  8077dc:	e0bff915 	stw	r2,-28(fp)
  8077e0:	e0bffb17 	ldw	r2,-20(fp)
  8077e4:	10800117 	ldw	r2,4(r2)
  8077e8:	e0bffa15 	stw	r2,-24(fp)
  8077ec:	e0bffa17 	ldw	r2,-24(fp)
  8077f0:	10bfffc4 	addi	r2,r2,-1
  8077f4:	e0bffa15 	stw	r2,-24(fp)
  8077f8:	e0bff917 	ldw	r2,-28(fp)
  8077fc:	10c00044 	addi	r3,r2,1
  807800:	e0fff915 	stw	r3,-28(fp)
  807804:	10800003 	ldbu	r2,0(r2)
  807808:	10803fcc 	andi	r2,r2,255
  80780c:	e0bffd15 	stw	r2,-12(fp)
  807810:	e0bffd17 	ldw	r2,-12(fp)
  807814:	108000e0 	cmpeqi	r2,r2,3
  807818:	1001ed26 	beq	r2,zero,807fd0 <get_lse+0xb34>
  80781c:	e0bffa17 	ldw	r2,-24(fp)
  807820:	10000d1e 	bne	r2,zero,807858 <get_lse+0x3bc>
  807824:	e0bffb17 	ldw	r2,-20(fp)
  807828:	10800317 	ldw	r2,12(r2)
  80782c:	e13fff17 	ldw	r4,-4(fp)
  807830:	103ee83a 	callr	r2
  807834:	1000021e 	bne	r2,zero,807840 <get_lse+0x3a4>
  807838:	0005883a 	mov	r2,zero
  80783c:	00020e06 	br	808078 <get_lse+0xbdc>
  807840:	e0bffb17 	ldw	r2,-20(fp)
  807844:	10800017 	ldw	r2,0(r2)
  807848:	e0bff915 	stw	r2,-28(fp)
  80784c:	e0bffb17 	ldw	r2,-20(fp)
  807850:	10800117 	ldw	r2,4(r2)
  807854:	e0bffa15 	stw	r2,-24(fp)
  807858:	e0bffa17 	ldw	r2,-24(fp)
  80785c:	10bfffc4 	addi	r2,r2,-1
  807860:	e0bffa15 	stw	r2,-24(fp)
  807864:	e0bff917 	ldw	r2,-28(fp)
  807868:	10c00044 	addi	r3,r2,1
  80786c:	e0fff915 	stw	r3,-28(fp)
  807870:	10800003 	ldbu	r2,0(r2)
  807874:	10803fcc 	andi	r2,r2,255
  807878:	e0bffe15 	stw	r2,-8(fp)
  80787c:	e0bfff17 	ldw	r2,-4(fp)
  807880:	10803617 	ldw	r2,216(r2)
  807884:	10801604 	addi	r2,r2,88
  807888:	10c00017 	ldw	r3,0(r2)
  80788c:	e0bffe17 	ldw	r2,-8(fp)
  807890:	1881d11e 	bne	r3,r2,807fd8 <get_lse+0xb3c>
  807894:	e0bffa17 	ldw	r2,-24(fp)
  807898:	10000d1e 	bne	r2,zero,8078d0 <get_lse+0x434>
  80789c:	e0bffb17 	ldw	r2,-20(fp)
  8078a0:	10800317 	ldw	r2,12(r2)
  8078a4:	e13fff17 	ldw	r4,-4(fp)
  8078a8:	103ee83a 	callr	r2
  8078ac:	1000021e 	bne	r2,zero,8078b8 <get_lse+0x41c>
  8078b0:	0005883a 	mov	r2,zero
  8078b4:	0001f006 	br	808078 <get_lse+0xbdc>
  8078b8:	e0bffb17 	ldw	r2,-20(fp)
  8078bc:	10800017 	ldw	r2,0(r2)
  8078c0:	e0bff915 	stw	r2,-28(fp)
  8078c4:	e0bffb17 	ldw	r2,-20(fp)
  8078c8:	10800117 	ldw	r2,4(r2)
  8078cc:	e0bffa15 	stw	r2,-24(fp)
  8078d0:	e0bffa17 	ldw	r2,-24(fp)
  8078d4:	10bfffc4 	addi	r2,r2,-1
  8078d8:	e0bffa15 	stw	r2,-24(fp)
  8078dc:	e0bff917 	ldw	r2,-28(fp)
  8078e0:	10c00044 	addi	r3,r2,1
  8078e4:	e0fff915 	stw	r3,-28(fp)
  8078e8:	10800003 	ldbu	r2,0(r2)
  8078ec:	10803fcc 	andi	r2,r2,255
  8078f0:	e0bffe15 	stw	r2,-8(fp)
  8078f4:	e0bfff17 	ldw	r2,-4(fp)
  8078f8:	10803617 	ldw	r2,216(r2)
  8078fc:	10c00017 	ldw	r3,0(r2)
  807900:	e0bffe17 	ldw	r2,-8(fp)
  807904:	1881b61e 	bne	r3,r2,807fe0 <get_lse+0xb44>
  807908:	e0bffa17 	ldw	r2,-24(fp)
  80790c:	10000d1e 	bne	r2,zero,807944 <get_lse+0x4a8>
  807910:	e0bffb17 	ldw	r2,-20(fp)
  807914:	10800317 	ldw	r2,12(r2)
  807918:	e13fff17 	ldw	r4,-4(fp)
  80791c:	103ee83a 	callr	r2
  807920:	1000021e 	bne	r2,zero,80792c <get_lse+0x490>
  807924:	0005883a 	mov	r2,zero
  807928:	0001d306 	br	808078 <get_lse+0xbdc>
  80792c:	e0bffb17 	ldw	r2,-20(fp)
  807930:	10800017 	ldw	r2,0(r2)
  807934:	e0bff915 	stw	r2,-28(fp)
  807938:	e0bffb17 	ldw	r2,-20(fp)
  80793c:	10800117 	ldw	r2,4(r2)
  807940:	e0bffa15 	stw	r2,-24(fp)
  807944:	e0bffa17 	ldw	r2,-24(fp)
  807948:	10bfffc4 	addi	r2,r2,-1
  80794c:	e0bffa15 	stw	r2,-24(fp)
  807950:	e0bff917 	ldw	r2,-28(fp)
  807954:	10c00044 	addi	r3,r2,1
  807958:	e0fff915 	stw	r3,-28(fp)
  80795c:	10800003 	ldbu	r2,0(r2)
  807960:	10803fcc 	andi	r2,r2,255
  807964:	e0bffe15 	stw	r2,-8(fp)
  807968:	e0bfff17 	ldw	r2,-4(fp)
  80796c:	10803617 	ldw	r2,216(r2)
  807970:	10802c04 	addi	r2,r2,176
  807974:	10c00017 	ldw	r3,0(r2)
  807978:	e0bffe17 	ldw	r2,-8(fp)
  80797c:	18819a1e 	bne	r3,r2,807fe8 <get_lse+0xb4c>
  807980:	e0bffa17 	ldw	r2,-24(fp)
  807984:	10000d1e 	bne	r2,zero,8079bc <get_lse+0x520>
  807988:	e0bffb17 	ldw	r2,-20(fp)
  80798c:	10800317 	ldw	r2,12(r2)
  807990:	e13fff17 	ldw	r4,-4(fp)
  807994:	103ee83a 	callr	r2
  807998:	1000021e 	bne	r2,zero,8079a4 <get_lse+0x508>
  80799c:	0005883a 	mov	r2,zero
  8079a0:	0001b506 	br	808078 <get_lse+0xbdc>
  8079a4:	e0bffb17 	ldw	r2,-20(fp)
  8079a8:	10800017 	ldw	r2,0(r2)
  8079ac:	e0bff915 	stw	r2,-28(fp)
  8079b0:	e0bffb17 	ldw	r2,-20(fp)
  8079b4:	10800117 	ldw	r2,4(r2)
  8079b8:	e0bffa15 	stw	r2,-24(fp)
  8079bc:	e0bffa17 	ldw	r2,-24(fp)
  8079c0:	10bfffc4 	addi	r2,r2,-1
  8079c4:	e0bffa15 	stw	r2,-24(fp)
  8079c8:	e0bff917 	ldw	r2,-28(fp)
  8079cc:	10c00044 	addi	r3,r2,1
  8079d0:	e0fff915 	stw	r3,-28(fp)
  8079d4:	10800003 	ldbu	r2,0(r2)
  8079d8:	10803fcc 	andi	r2,r2,255
  8079dc:	e0bffd15 	stw	r2,-12(fp)
  8079e0:	e0bffd17 	ldw	r2,-12(fp)
  8079e4:	10802020 	cmpeqi	r2,r2,128
  8079e8:	10018126 	beq	r2,zero,807ff0 <get_lse+0xb54>
  8079ec:	e0bffa17 	ldw	r2,-24(fp)
  8079f0:	10000d1e 	bne	r2,zero,807a28 <get_lse+0x58c>
  8079f4:	e0bffb17 	ldw	r2,-20(fp)
  8079f8:	10800317 	ldw	r2,12(r2)
  8079fc:	e13fff17 	ldw	r4,-4(fp)
  807a00:	103ee83a 	callr	r2
  807a04:	1000021e 	bne	r2,zero,807a10 <get_lse+0x574>
  807a08:	0005883a 	mov	r2,zero
  807a0c:	00019a06 	br	808078 <get_lse+0xbdc>
  807a10:	e0bffb17 	ldw	r2,-20(fp)
  807a14:	10800017 	ldw	r2,0(r2)
  807a18:	e0bff915 	stw	r2,-28(fp)
  807a1c:	e0bffb17 	ldw	r2,-20(fp)
  807a20:	10800117 	ldw	r2,4(r2)
  807a24:	e0bffa15 	stw	r2,-24(fp)
  807a28:	e0bffa17 	ldw	r2,-24(fp)
  807a2c:	10bfffc4 	addi	r2,r2,-1
  807a30:	e0bffa15 	stw	r2,-24(fp)
  807a34:	e0bff917 	ldw	r2,-28(fp)
  807a38:	10c00044 	addi	r3,r2,1
  807a3c:	e0fff915 	stw	r3,-28(fp)
  807a40:	10800003 	ldbu	r2,0(r2)
  807a44:	10803fcc 	andi	r2,r2,255
  807a48:	1004923a 	slli	r2,r2,8
  807a4c:	e0bffd15 	stw	r2,-12(fp)
  807a50:	e0bffa17 	ldw	r2,-24(fp)
  807a54:	10000d1e 	bne	r2,zero,807a8c <get_lse+0x5f0>
  807a58:	e0bffb17 	ldw	r2,-20(fp)
  807a5c:	10800317 	ldw	r2,12(r2)
  807a60:	e13fff17 	ldw	r4,-4(fp)
  807a64:	103ee83a 	callr	r2
  807a68:	1000021e 	bne	r2,zero,807a74 <get_lse+0x5d8>
  807a6c:	0005883a 	mov	r2,zero
  807a70:	00018106 	br	808078 <get_lse+0xbdc>
  807a74:	e0bffb17 	ldw	r2,-20(fp)
  807a78:	10800017 	ldw	r2,0(r2)
  807a7c:	e0bff915 	stw	r2,-28(fp)
  807a80:	e0bffb17 	ldw	r2,-20(fp)
  807a84:	10800117 	ldw	r2,4(r2)
  807a88:	e0bffa15 	stw	r2,-24(fp)
  807a8c:	e0bffa17 	ldw	r2,-24(fp)
  807a90:	10bfffc4 	addi	r2,r2,-1
  807a94:	e0bffa15 	stw	r2,-24(fp)
  807a98:	e0bff917 	ldw	r2,-28(fp)
  807a9c:	10c00044 	addi	r3,r2,1
  807aa0:	e0fff915 	stw	r3,-28(fp)
  807aa4:	10800003 	ldbu	r2,0(r2)
  807aa8:	10803fcc 	andi	r2,r2,255
  807aac:	e0fffd17 	ldw	r3,-12(fp)
  807ab0:	1885883a 	add	r2,r3,r2
  807ab4:	e0bffd15 	stw	r2,-12(fp)
  807ab8:	e0bffd17 	ldw	r2,-12(fp)
  807abc:	10014e1e 	bne	r2,zero,807ff8 <get_lse+0xb5c>
  807ac0:	e0bffa17 	ldw	r2,-24(fp)
  807ac4:	10000d1e 	bne	r2,zero,807afc <get_lse+0x660>
  807ac8:	e0bffb17 	ldw	r2,-20(fp)
  807acc:	10800317 	ldw	r2,12(r2)
  807ad0:	e13fff17 	ldw	r4,-4(fp)
  807ad4:	103ee83a 	callr	r2
  807ad8:	1000021e 	bne	r2,zero,807ae4 <get_lse+0x648>
  807adc:	0005883a 	mov	r2,zero
  807ae0:	00016506 	br	808078 <get_lse+0xbdc>
  807ae4:	e0bffb17 	ldw	r2,-20(fp)
  807ae8:	10800017 	ldw	r2,0(r2)
  807aec:	e0bff915 	stw	r2,-28(fp)
  807af0:	e0bffb17 	ldw	r2,-20(fp)
  807af4:	10800117 	ldw	r2,4(r2)
  807af8:	e0bffa15 	stw	r2,-24(fp)
  807afc:	e0bffa17 	ldw	r2,-24(fp)
  807b00:	10bfffc4 	addi	r2,r2,-1
  807b04:	e0bffa15 	stw	r2,-24(fp)
  807b08:	e0bff917 	ldw	r2,-28(fp)
  807b0c:	10c00044 	addi	r3,r2,1
  807b10:	e0fff915 	stw	r3,-28(fp)
  807b14:	10800003 	ldbu	r2,0(r2)
  807b18:	10803fcc 	andi	r2,r2,255
  807b1c:	1004923a 	slli	r2,r2,8
  807b20:	e0bffd15 	stw	r2,-12(fp)
  807b24:	e0bffa17 	ldw	r2,-24(fp)
  807b28:	10000d1e 	bne	r2,zero,807b60 <get_lse+0x6c4>
  807b2c:	e0bffb17 	ldw	r2,-20(fp)
  807b30:	10800317 	ldw	r2,12(r2)
  807b34:	e13fff17 	ldw	r4,-4(fp)
  807b38:	103ee83a 	callr	r2
  807b3c:	1000021e 	bne	r2,zero,807b48 <get_lse+0x6ac>
  807b40:	0005883a 	mov	r2,zero
  807b44:	00014c06 	br	808078 <get_lse+0xbdc>
  807b48:	e0bffb17 	ldw	r2,-20(fp)
  807b4c:	10800017 	ldw	r2,0(r2)
  807b50:	e0bff915 	stw	r2,-28(fp)
  807b54:	e0bffb17 	ldw	r2,-20(fp)
  807b58:	10800117 	ldw	r2,4(r2)
  807b5c:	e0bffa15 	stw	r2,-24(fp)
  807b60:	e0bffa17 	ldw	r2,-24(fp)
  807b64:	10bfffc4 	addi	r2,r2,-1
  807b68:	e0bffa15 	stw	r2,-24(fp)
  807b6c:	e0bff917 	ldw	r2,-28(fp)
  807b70:	10c00044 	addi	r3,r2,1
  807b74:	e0fff915 	stw	r3,-28(fp)
  807b78:	10800003 	ldbu	r2,0(r2)
  807b7c:	10803fcc 	andi	r2,r2,255
  807b80:	e0fffd17 	ldw	r3,-12(fp)
  807b84:	1885883a 	add	r2,r3,r2
  807b88:	e0bffd15 	stw	r2,-12(fp)
  807b8c:	e0bffd17 	ldw	r2,-12(fp)
  807b90:	10011b1e 	bne	r2,zero,808000 <get_lse+0xb64>
  807b94:	e0bffa17 	ldw	r2,-24(fp)
  807b98:	10000d1e 	bne	r2,zero,807bd0 <get_lse+0x734>
  807b9c:	e0bffb17 	ldw	r2,-20(fp)
  807ba0:	10800317 	ldw	r2,12(r2)
  807ba4:	e13fff17 	ldw	r4,-4(fp)
  807ba8:	103ee83a 	callr	r2
  807bac:	1000021e 	bne	r2,zero,807bb8 <get_lse+0x71c>
  807bb0:	0005883a 	mov	r2,zero
  807bb4:	00013006 	br	808078 <get_lse+0xbdc>
  807bb8:	e0bffb17 	ldw	r2,-20(fp)
  807bbc:	10800017 	ldw	r2,0(r2)
  807bc0:	e0bff915 	stw	r2,-28(fp)
  807bc4:	e0bffb17 	ldw	r2,-20(fp)
  807bc8:	10800117 	ldw	r2,4(r2)
  807bcc:	e0bffa15 	stw	r2,-24(fp)
  807bd0:	e0bffa17 	ldw	r2,-24(fp)
  807bd4:	10bfffc4 	addi	r2,r2,-1
  807bd8:	e0bffa15 	stw	r2,-24(fp)
  807bdc:	e0bff917 	ldw	r2,-28(fp)
  807be0:	10c00044 	addi	r3,r2,1
  807be4:	e0fff915 	stw	r3,-28(fp)
  807be8:	10800003 	ldbu	r2,0(r2)
  807bec:	10803fcc 	andi	r2,r2,255
  807bf0:	e0bffd15 	stw	r2,-12(fp)
  807bf4:	e0bffd17 	ldw	r2,-12(fp)
  807bf8:	1001031e 	bne	r2,zero,808008 <get_lse+0xb6c>
  807bfc:	e0bffa17 	ldw	r2,-24(fp)
  807c00:	10000d1e 	bne	r2,zero,807c38 <get_lse+0x79c>
  807c04:	e0bffb17 	ldw	r2,-20(fp)
  807c08:	10800317 	ldw	r2,12(r2)
  807c0c:	e13fff17 	ldw	r4,-4(fp)
  807c10:	103ee83a 	callr	r2
  807c14:	1000021e 	bne	r2,zero,807c20 <get_lse+0x784>
  807c18:	0005883a 	mov	r2,zero
  807c1c:	00011606 	br	808078 <get_lse+0xbdc>
  807c20:	e0bffb17 	ldw	r2,-20(fp)
  807c24:	10800017 	ldw	r2,0(r2)
  807c28:	e0bff915 	stw	r2,-28(fp)
  807c2c:	e0bffb17 	ldw	r2,-20(fp)
  807c30:	10800117 	ldw	r2,4(r2)
  807c34:	e0bffa15 	stw	r2,-24(fp)
  807c38:	e0bffa17 	ldw	r2,-24(fp)
  807c3c:	10bfffc4 	addi	r2,r2,-1
  807c40:	e0bffa15 	stw	r2,-24(fp)
  807c44:	e0bff917 	ldw	r2,-28(fp)
  807c48:	10c00044 	addi	r3,r2,1
  807c4c:	e0fff915 	stw	r3,-28(fp)
  807c50:	10800003 	ldbu	r2,0(r2)
  807c54:	10803fcc 	andi	r2,r2,255
  807c58:	1004923a 	slli	r2,r2,8
  807c5c:	e0bffd15 	stw	r2,-12(fp)
  807c60:	e0bffa17 	ldw	r2,-24(fp)
  807c64:	10000d1e 	bne	r2,zero,807c9c <get_lse+0x800>
  807c68:	e0bffb17 	ldw	r2,-20(fp)
  807c6c:	10800317 	ldw	r2,12(r2)
  807c70:	e13fff17 	ldw	r4,-4(fp)
  807c74:	103ee83a 	callr	r2
  807c78:	1000021e 	bne	r2,zero,807c84 <get_lse+0x7e8>
  807c7c:	0005883a 	mov	r2,zero
  807c80:	0000fd06 	br	808078 <get_lse+0xbdc>
  807c84:	e0bffb17 	ldw	r2,-20(fp)
  807c88:	10800017 	ldw	r2,0(r2)
  807c8c:	e0bff915 	stw	r2,-28(fp)
  807c90:	e0bffb17 	ldw	r2,-20(fp)
  807c94:	10800117 	ldw	r2,4(r2)
  807c98:	e0bffa15 	stw	r2,-24(fp)
  807c9c:	e0bffa17 	ldw	r2,-24(fp)
  807ca0:	10bfffc4 	addi	r2,r2,-1
  807ca4:	e0bffa15 	stw	r2,-24(fp)
  807ca8:	e0bff917 	ldw	r2,-28(fp)
  807cac:	10c00044 	addi	r3,r2,1
  807cb0:	e0fff915 	stw	r3,-28(fp)
  807cb4:	10800003 	ldbu	r2,0(r2)
  807cb8:	10803fcc 	andi	r2,r2,255
  807cbc:	e0fffd17 	ldw	r3,-12(fp)
  807cc0:	1885883a 	add	r2,r3,r2
  807cc4:	e0bffd15 	stw	r2,-12(fp)
  807cc8:	e0bffd17 	ldw	r2,-12(fp)
  807ccc:	10800060 	cmpeqi	r2,r2,1
  807cd0:	1000cf26 	beq	r2,zero,808010 <get_lse+0xb74>
  807cd4:	e0bffa17 	ldw	r2,-24(fp)
  807cd8:	10000d1e 	bne	r2,zero,807d10 <get_lse+0x874>
  807cdc:	e0bffb17 	ldw	r2,-20(fp)
  807ce0:	10800317 	ldw	r2,12(r2)
  807ce4:	e13fff17 	ldw	r4,-4(fp)
  807ce8:	103ee83a 	callr	r2
  807cec:	1000021e 	bne	r2,zero,807cf8 <get_lse+0x85c>
  807cf0:	0005883a 	mov	r2,zero
  807cf4:	0000e006 	br	808078 <get_lse+0xbdc>
  807cf8:	e0bffb17 	ldw	r2,-20(fp)
  807cfc:	10800017 	ldw	r2,0(r2)
  807d00:	e0bff915 	stw	r2,-28(fp)
  807d04:	e0bffb17 	ldw	r2,-20(fp)
  807d08:	10800117 	ldw	r2,4(r2)
  807d0c:	e0bffa15 	stw	r2,-24(fp)
  807d10:	e0bffa17 	ldw	r2,-24(fp)
  807d14:	10bfffc4 	addi	r2,r2,-1
  807d18:	e0bffa15 	stw	r2,-24(fp)
  807d1c:	e0bff917 	ldw	r2,-28(fp)
  807d20:	10c00044 	addi	r3,r2,1
  807d24:	e0fff915 	stw	r3,-28(fp)
  807d28:	10800003 	ldbu	r2,0(r2)
  807d2c:	10803fcc 	andi	r2,r2,255
  807d30:	1004923a 	slli	r2,r2,8
  807d34:	e0bffd15 	stw	r2,-12(fp)
  807d38:	e0bffa17 	ldw	r2,-24(fp)
  807d3c:	10000d1e 	bne	r2,zero,807d74 <get_lse+0x8d8>
  807d40:	e0bffb17 	ldw	r2,-20(fp)
  807d44:	10800317 	ldw	r2,12(r2)
  807d48:	e13fff17 	ldw	r4,-4(fp)
  807d4c:	103ee83a 	callr	r2
  807d50:	1000021e 	bne	r2,zero,807d5c <get_lse+0x8c0>
  807d54:	0005883a 	mov	r2,zero
  807d58:	0000c706 	br	808078 <get_lse+0xbdc>
  807d5c:	e0bffb17 	ldw	r2,-20(fp)
  807d60:	10800017 	ldw	r2,0(r2)
  807d64:	e0bff915 	stw	r2,-28(fp)
  807d68:	e0bffb17 	ldw	r2,-20(fp)
  807d6c:	10800117 	ldw	r2,4(r2)
  807d70:	e0bffa15 	stw	r2,-24(fp)
  807d74:	e0bffa17 	ldw	r2,-24(fp)
  807d78:	10bfffc4 	addi	r2,r2,-1
  807d7c:	e0bffa15 	stw	r2,-24(fp)
  807d80:	e0bff917 	ldw	r2,-28(fp)
  807d84:	10c00044 	addi	r3,r2,1
  807d88:	e0fff915 	stw	r3,-28(fp)
  807d8c:	10800003 	ldbu	r2,0(r2)
  807d90:	10803fcc 	andi	r2,r2,255
  807d94:	e0fffd17 	ldw	r3,-12(fp)
  807d98:	1885883a 	add	r2,r3,r2
  807d9c:	e0bffd15 	stw	r2,-12(fp)
  807da0:	e0bffd17 	ldw	r2,-12(fp)
  807da4:	10009c1e 	bne	r2,zero,808018 <get_lse+0xb7c>
  807da8:	e0bffa17 	ldw	r2,-24(fp)
  807dac:	10000d1e 	bne	r2,zero,807de4 <get_lse+0x948>
  807db0:	e0bffb17 	ldw	r2,-20(fp)
  807db4:	10800317 	ldw	r2,12(r2)
  807db8:	e13fff17 	ldw	r4,-4(fp)
  807dbc:	103ee83a 	callr	r2
  807dc0:	1000021e 	bne	r2,zero,807dcc <get_lse+0x930>
  807dc4:	0005883a 	mov	r2,zero
  807dc8:	0000ab06 	br	808078 <get_lse+0xbdc>
  807dcc:	e0bffb17 	ldw	r2,-20(fp)
  807dd0:	10800017 	ldw	r2,0(r2)
  807dd4:	e0bff915 	stw	r2,-28(fp)
  807dd8:	e0bffb17 	ldw	r2,-20(fp)
  807ddc:	10800117 	ldw	r2,4(r2)
  807de0:	e0bffa15 	stw	r2,-24(fp)
  807de4:	e0bffa17 	ldw	r2,-24(fp)
  807de8:	10bfffc4 	addi	r2,r2,-1
  807dec:	e0bffa15 	stw	r2,-24(fp)
  807df0:	e0bff917 	ldw	r2,-28(fp)
  807df4:	10c00044 	addi	r3,r2,1
  807df8:	e0fff915 	stw	r3,-28(fp)
  807dfc:	10800003 	ldbu	r2,0(r2)
  807e00:	10803fcc 	andi	r2,r2,255
  807e04:	e0bffd15 	stw	r2,-12(fp)
  807e08:	e0bffd17 	ldw	r2,-12(fp)
  807e0c:	1000841e 	bne	r2,zero,808020 <get_lse+0xb84>
  807e10:	e0bffa17 	ldw	r2,-24(fp)
  807e14:	10000d1e 	bne	r2,zero,807e4c <get_lse+0x9b0>
  807e18:	e0bffb17 	ldw	r2,-20(fp)
  807e1c:	10800317 	ldw	r2,12(r2)
  807e20:	e13fff17 	ldw	r4,-4(fp)
  807e24:	103ee83a 	callr	r2
  807e28:	1000021e 	bne	r2,zero,807e34 <get_lse+0x998>
  807e2c:	0005883a 	mov	r2,zero
  807e30:	00009106 	br	808078 <get_lse+0xbdc>
  807e34:	e0bffb17 	ldw	r2,-20(fp)
  807e38:	10800017 	ldw	r2,0(r2)
  807e3c:	e0bff915 	stw	r2,-28(fp)
  807e40:	e0bffb17 	ldw	r2,-20(fp)
  807e44:	10800117 	ldw	r2,4(r2)
  807e48:	e0bffa15 	stw	r2,-24(fp)
  807e4c:	e0bffa17 	ldw	r2,-24(fp)
  807e50:	10bfffc4 	addi	r2,r2,-1
  807e54:	e0bffa15 	stw	r2,-24(fp)
  807e58:	e0bff917 	ldw	r2,-28(fp)
  807e5c:	10c00044 	addi	r3,r2,1
  807e60:	e0fff915 	stw	r3,-28(fp)
  807e64:	10800003 	ldbu	r2,0(r2)
  807e68:	10803fcc 	andi	r2,r2,255
  807e6c:	1004923a 	slli	r2,r2,8
  807e70:	e0bffd15 	stw	r2,-12(fp)
  807e74:	e0bffa17 	ldw	r2,-24(fp)
  807e78:	10000d1e 	bne	r2,zero,807eb0 <get_lse+0xa14>
  807e7c:	e0bffb17 	ldw	r2,-20(fp)
  807e80:	10800317 	ldw	r2,12(r2)
  807e84:	e13fff17 	ldw	r4,-4(fp)
  807e88:	103ee83a 	callr	r2
  807e8c:	1000021e 	bne	r2,zero,807e98 <get_lse+0x9fc>
  807e90:	0005883a 	mov	r2,zero
  807e94:	00007806 	br	808078 <get_lse+0xbdc>
  807e98:	e0bffb17 	ldw	r2,-20(fp)
  807e9c:	10800017 	ldw	r2,0(r2)
  807ea0:	e0bff915 	stw	r2,-28(fp)
  807ea4:	e0bffb17 	ldw	r2,-20(fp)
  807ea8:	10800117 	ldw	r2,4(r2)
  807eac:	e0bffa15 	stw	r2,-24(fp)
  807eb0:	e0bffa17 	ldw	r2,-24(fp)
  807eb4:	10bfffc4 	addi	r2,r2,-1
  807eb8:	e0bffa15 	stw	r2,-24(fp)
  807ebc:	e0bff917 	ldw	r2,-28(fp)
  807ec0:	10c00044 	addi	r3,r2,1
  807ec4:	e0fff915 	stw	r3,-28(fp)
  807ec8:	10800003 	ldbu	r2,0(r2)
  807ecc:	10803fcc 	andi	r2,r2,255
  807ed0:	e0fffd17 	ldw	r3,-12(fp)
  807ed4:	1885883a 	add	r2,r3,r2
  807ed8:	e0bffd15 	stw	r2,-12(fp)
  807edc:	e0bffd17 	ldw	r2,-12(fp)
  807ee0:	10800060 	cmpeqi	r2,r2,1
  807ee4:	10005026 	beq	r2,zero,808028 <get_lse+0xb8c>
  807ee8:	e0bffa17 	ldw	r2,-24(fp)
  807eec:	10000d1e 	bne	r2,zero,807f24 <get_lse+0xa88>
  807ef0:	e0bffb17 	ldw	r2,-20(fp)
  807ef4:	10800317 	ldw	r2,12(r2)
  807ef8:	e13fff17 	ldw	r4,-4(fp)
  807efc:	103ee83a 	callr	r2
  807f00:	1000021e 	bne	r2,zero,807f0c <get_lse+0xa70>
  807f04:	0005883a 	mov	r2,zero
  807f08:	00005b06 	br	808078 <get_lse+0xbdc>
  807f0c:	e0bffb17 	ldw	r2,-20(fp)
  807f10:	10800017 	ldw	r2,0(r2)
  807f14:	e0bff915 	stw	r2,-28(fp)
  807f18:	e0bffb17 	ldw	r2,-20(fp)
  807f1c:	10800117 	ldw	r2,4(r2)
  807f20:	e0bffa15 	stw	r2,-24(fp)
  807f24:	e0bffa17 	ldw	r2,-24(fp)
  807f28:	10bfffc4 	addi	r2,r2,-1
  807f2c:	e0bffa15 	stw	r2,-24(fp)
  807f30:	e0bff917 	ldw	r2,-28(fp)
  807f34:	10c00044 	addi	r3,r2,1
  807f38:	e0fff915 	stw	r3,-28(fp)
  807f3c:	10800003 	ldbu	r2,0(r2)
  807f40:	10803fcc 	andi	r2,r2,255
  807f44:	1004923a 	slli	r2,r2,8
  807f48:	e0bffd15 	stw	r2,-12(fp)
  807f4c:	e0bffa17 	ldw	r2,-24(fp)
  807f50:	10000d1e 	bne	r2,zero,807f88 <get_lse+0xaec>
  807f54:	e0bffb17 	ldw	r2,-20(fp)
  807f58:	10800317 	ldw	r2,12(r2)
  807f5c:	e13fff17 	ldw	r4,-4(fp)
  807f60:	103ee83a 	callr	r2
  807f64:	1000021e 	bne	r2,zero,807f70 <get_lse+0xad4>
  807f68:	0005883a 	mov	r2,zero
  807f6c:	00004206 	br	808078 <get_lse+0xbdc>
  807f70:	e0bffb17 	ldw	r2,-20(fp)
  807f74:	10800017 	ldw	r2,0(r2)
  807f78:	e0bff915 	stw	r2,-28(fp)
  807f7c:	e0bffb17 	ldw	r2,-20(fp)
  807f80:	10800117 	ldw	r2,4(r2)
  807f84:	e0bffa15 	stw	r2,-24(fp)
  807f88:	e0bffa17 	ldw	r2,-24(fp)
  807f8c:	10bfffc4 	addi	r2,r2,-1
  807f90:	e0bffa15 	stw	r2,-24(fp)
  807f94:	e0bff917 	ldw	r2,-28(fp)
  807f98:	10c00044 	addi	r3,r2,1
  807f9c:	e0fff915 	stw	r3,-28(fp)
  807fa0:	10800003 	ldbu	r2,0(r2)
  807fa4:	10803fcc 	andi	r2,r2,255
  807fa8:	e0fffd17 	ldw	r3,-12(fp)
  807fac:	1885883a 	add	r2,r3,r2
  807fb0:	e0bffd15 	stw	r2,-12(fp)
  807fb4:	e0bffd17 	ldw	r2,-12(fp)
  807fb8:	10002526 	beq	r2,zero,808050 <get_lse+0xbb4>
  807fbc:	00001b06 	br	80802c <get_lse+0xb90>
  807fc0:	0001883a 	nop
  807fc4:	00001906 	br	80802c <get_lse+0xb90>
  807fc8:	0001883a 	nop
  807fcc:	00001706 	br	80802c <get_lse+0xb90>
  807fd0:	0001883a 	nop
  807fd4:	00001506 	br	80802c <get_lse+0xb90>
  807fd8:	0001883a 	nop
  807fdc:	00001306 	br	80802c <get_lse+0xb90>
  807fe0:	0001883a 	nop
  807fe4:	00001106 	br	80802c <get_lse+0xb90>
  807fe8:	0001883a 	nop
  807fec:	00000f06 	br	80802c <get_lse+0xb90>
  807ff0:	0001883a 	nop
  807ff4:	00000d06 	br	80802c <get_lse+0xb90>
  807ff8:	0001883a 	nop
  807ffc:	00000b06 	br	80802c <get_lse+0xb90>
  808000:	0001883a 	nop
  808004:	00000906 	br	80802c <get_lse+0xb90>
  808008:	0001883a 	nop
  80800c:	00000706 	br	80802c <get_lse+0xb90>
  808010:	0001883a 	nop
  808014:	00000506 	br	80802c <get_lse+0xb90>
  808018:	0001883a 	nop
  80801c:	00000306 	br	80802c <get_lse+0xb90>
  808020:	0001883a 	nop
  808024:	00000106 	br	80802c <get_lse+0xb90>
  808028:	0001883a 	nop
  80802c:	e0bfff17 	ldw	r2,-4(fp)
  808030:	10800017 	ldw	r2,0(r2)
  808034:	00c00704 	movi	r3,28
  808038:	10c00515 	stw	r3,20(r2)
  80803c:	e0bfff17 	ldw	r2,-4(fp)
  808040:	10800017 	ldw	r2,0(r2)
  808044:	10800017 	ldw	r2,0(r2)
  808048:	e13fff17 	ldw	r4,-4(fp)
  80804c:	103ee83a 	callr	r2
  808050:	e0bfff17 	ldw	r2,-4(fp)
  808054:	00c00044 	movi	r3,1
  808058:	10c04c15 	stw	r3,304(r2)
  80805c:	e0bffb17 	ldw	r2,-20(fp)
  808060:	e0fff917 	ldw	r3,-28(fp)
  808064:	10c00015 	stw	r3,0(r2)
  808068:	e0bffb17 	ldw	r2,-20(fp)
  80806c:	e0fffa17 	ldw	r3,-24(fp)
  808070:	10c00115 	stw	r3,4(r2)
  808074:	00800044 	movi	r2,1
  808078:	e037883a 	mov	sp,fp
  80807c:	dfc00117 	ldw	ra,4(sp)
  808080:	df000017 	ldw	fp,0(sp)
  808084:	dec00204 	addi	sp,sp,8
  808088:	f800283a 	ret

0080808c <examine_app0>:
  80808c:	defff804 	addi	sp,sp,-32
  808090:	dfc00715 	stw	ra,28(sp)
  808094:	df000615 	stw	fp,24(sp)
  808098:	df000604 	addi	fp,sp,24
  80809c:	e13ffc15 	stw	r4,-16(fp)
  8080a0:	e17ffd15 	stw	r5,-12(fp)
  8080a4:	e1bffe15 	stw	r6,-8(fp)
  8080a8:	e1ffff15 	stw	r7,-4(fp)
  8080ac:	e0fffe17 	ldw	r3,-8(fp)
  8080b0:	e0bfff17 	ldw	r2,-4(fp)
  8080b4:	1885883a 	add	r2,r3,r2
  8080b8:	e0bffa15 	stw	r2,-24(fp)
  8080bc:	e0bffe17 	ldw	r2,-8(fp)
  8080c0:	108003b0 	cmpltui	r2,r2,14
  8080c4:	1000d61e 	bne	r2,zero,808420 <examine_app0+0x394>
  8080c8:	e0bffd17 	ldw	r2,-12(fp)
  8080cc:	10800003 	ldbu	r2,0(r2)
  8080d0:	10803fcc 	andi	r2,r2,255
  8080d4:	10801298 	cmpnei	r2,r2,74
  8080d8:	1000d11e 	bne	r2,zero,808420 <examine_app0+0x394>
  8080dc:	e0bffd17 	ldw	r2,-12(fp)
  8080e0:	10800044 	addi	r2,r2,1
  8080e4:	10800003 	ldbu	r2,0(r2)
  8080e8:	10803fcc 	andi	r2,r2,255
  8080ec:	10801198 	cmpnei	r2,r2,70
  8080f0:	1000cb1e 	bne	r2,zero,808420 <examine_app0+0x394>
  8080f4:	e0bffd17 	ldw	r2,-12(fp)
  8080f8:	10800084 	addi	r2,r2,2
  8080fc:	10800003 	ldbu	r2,0(r2)
  808100:	10803fcc 	andi	r2,r2,255
  808104:	10801258 	cmpnei	r2,r2,73
  808108:	1000c51e 	bne	r2,zero,808420 <examine_app0+0x394>
  80810c:	e0bffd17 	ldw	r2,-12(fp)
  808110:	108000c4 	addi	r2,r2,3
  808114:	10800003 	ldbu	r2,0(r2)
  808118:	10803fcc 	andi	r2,r2,255
  80811c:	10801198 	cmpnei	r2,r2,70
  808120:	1000bf1e 	bne	r2,zero,808420 <examine_app0+0x394>
  808124:	e0bffd17 	ldw	r2,-12(fp)
  808128:	10800104 	addi	r2,r2,4
  80812c:	10800003 	ldbu	r2,0(r2)
  808130:	10803fcc 	andi	r2,r2,255
  808134:	1000ba1e 	bne	r2,zero,808420 <examine_app0+0x394>
  808138:	e0bffc17 	ldw	r2,-16(fp)
  80813c:	00c00044 	movi	r3,1
  808140:	10c04715 	stw	r3,284(r2)
  808144:	e0bffd17 	ldw	r2,-12(fp)
  808148:	10c00143 	ldbu	r3,5(r2)
  80814c:	e0bffc17 	ldw	r2,-16(fp)
  808150:	10c04805 	stb	r3,288(r2)
  808154:	e0bffd17 	ldw	r2,-12(fp)
  808158:	10c00183 	ldbu	r3,6(r2)
  80815c:	e0bffc17 	ldw	r2,-16(fp)
  808160:	10c04845 	stb	r3,289(r2)
  808164:	e0bffd17 	ldw	r2,-12(fp)
  808168:	10c001c3 	ldbu	r3,7(r2)
  80816c:	e0bffc17 	ldw	r2,-16(fp)
  808170:	10c04885 	stb	r3,290(r2)
  808174:	e0bffd17 	ldw	r2,-12(fp)
  808178:	10800204 	addi	r2,r2,8
  80817c:	10800003 	ldbu	r2,0(r2)
  808180:	10803fcc 	andi	r2,r2,255
  808184:	1004923a 	slli	r2,r2,8
  808188:	1007883a 	mov	r3,r2
  80818c:	e0bffd17 	ldw	r2,-12(fp)
  808190:	10800244 	addi	r2,r2,9
  808194:	10800003 	ldbu	r2,0(r2)
  808198:	10803fcc 	andi	r2,r2,255
  80819c:	1885883a 	add	r2,r3,r2
  8081a0:	1007883a 	mov	r3,r2
  8081a4:	e0bffc17 	ldw	r2,-16(fp)
  8081a8:	10c0490d 	sth	r3,292(r2)
  8081ac:	e0bffd17 	ldw	r2,-12(fp)
  8081b0:	10800284 	addi	r2,r2,10
  8081b4:	10800003 	ldbu	r2,0(r2)
  8081b8:	10803fcc 	andi	r2,r2,255
  8081bc:	1004923a 	slli	r2,r2,8
  8081c0:	1007883a 	mov	r3,r2
  8081c4:	e0bffd17 	ldw	r2,-12(fp)
  8081c8:	108002c4 	addi	r2,r2,11
  8081cc:	10800003 	ldbu	r2,0(r2)
  8081d0:	10803fcc 	andi	r2,r2,255
  8081d4:	1885883a 	add	r2,r3,r2
  8081d8:	1007883a 	mov	r3,r2
  8081dc:	e0bffc17 	ldw	r2,-16(fp)
  8081e0:	10c0498d 	sth	r3,294(r2)
  8081e4:	e0bffc17 	ldw	r2,-16(fp)
  8081e8:	10804803 	ldbu	r2,288(r2)
  8081ec:	10803fcc 	andi	r2,r2,255
  8081f0:	10800060 	cmpeqi	r2,r2,1
  8081f4:	10001b1e 	bne	r2,zero,808264 <examine_app0+0x1d8>
  8081f8:	e0bffc17 	ldw	r2,-16(fp)
  8081fc:	10804803 	ldbu	r2,288(r2)
  808200:	10803fcc 	andi	r2,r2,255
  808204:	108000a0 	cmpeqi	r2,r2,2
  808208:	1000161e 	bne	r2,zero,808264 <examine_app0+0x1d8>
  80820c:	e0bffc17 	ldw	r2,-16(fp)
  808210:	10800017 	ldw	r2,0(r2)
  808214:	00c01e84 	movi	r3,122
  808218:	10c00515 	stw	r3,20(r2)
  80821c:	e0bffc17 	ldw	r2,-16(fp)
  808220:	10800017 	ldw	r2,0(r2)
  808224:	e0fffc17 	ldw	r3,-16(fp)
  808228:	18c04803 	ldbu	r3,288(r3)
  80822c:	18c03fcc 	andi	r3,r3,255
  808230:	10c00615 	stw	r3,24(r2)
  808234:	e0bffc17 	ldw	r2,-16(fp)
  808238:	10800017 	ldw	r2,0(r2)
  80823c:	e0fffc17 	ldw	r3,-16(fp)
  808240:	18c04843 	ldbu	r3,289(r3)
  808244:	18c03fcc 	andi	r3,r3,255
  808248:	10c00715 	stw	r3,28(r2)
  80824c:	e0bffc17 	ldw	r2,-16(fp)
  808250:	10800017 	ldw	r2,0(r2)
  808254:	10800117 	ldw	r2,4(r2)
  808258:	017fffc4 	movi	r5,-1
  80825c:	e13ffc17 	ldw	r4,-16(fp)
  808260:	103ee83a 	callr	r2
  808264:	e0bffc17 	ldw	r2,-16(fp)
  808268:	10800017 	ldw	r2,0(r2)
  80826c:	10800604 	addi	r2,r2,24
  808270:	e0bffb15 	stw	r2,-20(fp)
  808274:	e0bffc17 	ldw	r2,-16(fp)
  808278:	10804803 	ldbu	r2,288(r2)
  80827c:	10c03fcc 	andi	r3,r2,255
  808280:	e0bffb17 	ldw	r2,-20(fp)
  808284:	10c00015 	stw	r3,0(r2)
  808288:	e0bffb17 	ldw	r2,-20(fp)
  80828c:	10800104 	addi	r2,r2,4
  808290:	e0fffc17 	ldw	r3,-16(fp)
  808294:	18c04843 	ldbu	r3,289(r3)
  808298:	18c03fcc 	andi	r3,r3,255
  80829c:	10c00015 	stw	r3,0(r2)
  8082a0:	e0bffb17 	ldw	r2,-20(fp)
  8082a4:	10800204 	addi	r2,r2,8
  8082a8:	e0fffc17 	ldw	r3,-16(fp)
  8082ac:	18c0490b 	ldhu	r3,292(r3)
  8082b0:	18ffffcc 	andi	r3,r3,65535
  8082b4:	10c00015 	stw	r3,0(r2)
  8082b8:	e0bffb17 	ldw	r2,-20(fp)
  8082bc:	10800304 	addi	r2,r2,12
  8082c0:	e0fffc17 	ldw	r3,-16(fp)
  8082c4:	18c0498b 	ldhu	r3,294(r3)
  8082c8:	18ffffcc 	andi	r3,r3,65535
  8082cc:	10c00015 	stw	r3,0(r2)
  8082d0:	e0bffb17 	ldw	r2,-20(fp)
  8082d4:	10800404 	addi	r2,r2,16
  8082d8:	e0fffc17 	ldw	r3,-16(fp)
  8082dc:	18c04883 	ldbu	r3,290(r3)
  8082e0:	18c03fcc 	andi	r3,r3,255
  8082e4:	10c00015 	stw	r3,0(r2)
  8082e8:	e0bffc17 	ldw	r2,-16(fp)
  8082ec:	10800017 	ldw	r2,0(r2)
  8082f0:	00c01644 	movi	r3,89
  8082f4:	10c00515 	stw	r3,20(r2)
  8082f8:	e0bffc17 	ldw	r2,-16(fp)
  8082fc:	10800017 	ldw	r2,0(r2)
  808300:	10800117 	ldw	r2,4(r2)
  808304:	01400044 	movi	r5,1
  808308:	e13ffc17 	ldw	r4,-16(fp)
  80830c:	103ee83a 	callr	r2
  808310:	e0bffd17 	ldw	r2,-12(fp)
  808314:	10800304 	addi	r2,r2,12
  808318:	10c00003 	ldbu	r3,0(r2)
  80831c:	e0bffd17 	ldw	r2,-12(fp)
  808320:	10800344 	addi	r2,r2,13
  808324:	10800003 	ldbu	r2,0(r2)
  808328:	1884b03a 	or	r2,r3,r2
  80832c:	10803fcc 	andi	r2,r2,255
  808330:	10001826 	beq	r2,zero,808394 <examine_app0+0x308>
  808334:	e0bffc17 	ldw	r2,-16(fp)
  808338:	10800017 	ldw	r2,0(r2)
  80833c:	00c01704 	movi	r3,92
  808340:	10c00515 	stw	r3,20(r2)
  808344:	e0bffc17 	ldw	r2,-16(fp)
  808348:	10800017 	ldw	r2,0(r2)
  80834c:	e0fffd17 	ldw	r3,-12(fp)
  808350:	18c00304 	addi	r3,r3,12
  808354:	18c00003 	ldbu	r3,0(r3)
  808358:	18c03fcc 	andi	r3,r3,255
  80835c:	10c00615 	stw	r3,24(r2)
  808360:	e0bffc17 	ldw	r2,-16(fp)
  808364:	10800017 	ldw	r2,0(r2)
  808368:	e0fffd17 	ldw	r3,-12(fp)
  80836c:	18c00344 	addi	r3,r3,13
  808370:	18c00003 	ldbu	r3,0(r3)
  808374:	18c03fcc 	andi	r3,r3,255
  808378:	10c00715 	stw	r3,28(r2)
  80837c:	e0bffc17 	ldw	r2,-16(fp)
  808380:	10800017 	ldw	r2,0(r2)
  808384:	10800117 	ldw	r2,4(r2)
  808388:	01400044 	movi	r5,1
  80838c:	e13ffc17 	ldw	r4,-16(fp)
  808390:	103ee83a 	callr	r2
  808394:	e0bffa17 	ldw	r2,-24(fp)
  808398:	10bffc84 	addi	r2,r2,-14
  80839c:	e0bffa15 	stw	r2,-24(fp)
  8083a0:	e0bffd17 	ldw	r2,-12(fp)
  8083a4:	10800304 	addi	r2,r2,12
  8083a8:	10800003 	ldbu	r2,0(r2)
  8083ac:	10c03fcc 	andi	r3,r2,255
  8083b0:	e0bffd17 	ldw	r2,-12(fp)
  8083b4:	10800344 	addi	r2,r2,13
  8083b8:	10800003 	ldbu	r2,0(r2)
  8083bc:	10803fcc 	andi	r2,r2,255
  8083c0:	100b883a 	mov	r5,r2
  8083c4:	1809883a 	mov	r4,r3
  8083c8:	08301e80 	call	8301e8 <__mulsi3>
  8083cc:	1007883a 	mov	r3,r2
  8083d0:	1805883a 	mov	r2,r3
  8083d4:	1085883a 	add	r2,r2,r2
  8083d8:	10c7883a 	add	r3,r2,r3
  8083dc:	e0bffa17 	ldw	r2,-24(fp)
  8083e0:	18808a26 	beq	r3,r2,80860c <examine_app0+0x580>
  8083e4:	e0bffc17 	ldw	r2,-16(fp)
  8083e8:	10800017 	ldw	r2,0(r2)
  8083ec:	00c01684 	movi	r3,90
  8083f0:	10c00515 	stw	r3,20(r2)
  8083f4:	e0bffc17 	ldw	r2,-16(fp)
  8083f8:	10800017 	ldw	r2,0(r2)
  8083fc:	e0fffa17 	ldw	r3,-24(fp)
  808400:	10c00615 	stw	r3,24(r2)
  808404:	e0bffc17 	ldw	r2,-16(fp)
  808408:	10800017 	ldw	r2,0(r2)
  80840c:	10800117 	ldw	r2,4(r2)
  808410:	01400044 	movi	r5,1
  808414:	e13ffc17 	ldw	r4,-16(fp)
  808418:	103ee83a 	callr	r2
  80841c:	00007b06 	br	80860c <examine_app0+0x580>
  808420:	e0bffe17 	ldw	r2,-8(fp)
  808424:	108001b0 	cmpltui	r2,r2,6
  808428:	10006a1e 	bne	r2,zero,8085d4 <examine_app0+0x548>
  80842c:	e0bffd17 	ldw	r2,-12(fp)
  808430:	10800003 	ldbu	r2,0(r2)
  808434:	10803fcc 	andi	r2,r2,255
  808438:	10801298 	cmpnei	r2,r2,74
  80843c:	1000651e 	bne	r2,zero,8085d4 <examine_app0+0x548>
  808440:	e0bffd17 	ldw	r2,-12(fp)
  808444:	10800044 	addi	r2,r2,1
  808448:	10800003 	ldbu	r2,0(r2)
  80844c:	10803fcc 	andi	r2,r2,255
  808450:	10801198 	cmpnei	r2,r2,70
  808454:	10005f1e 	bne	r2,zero,8085d4 <examine_app0+0x548>
  808458:	e0bffd17 	ldw	r2,-12(fp)
  80845c:	10800084 	addi	r2,r2,2
  808460:	10800003 	ldbu	r2,0(r2)
  808464:	10803fcc 	andi	r2,r2,255
  808468:	10801618 	cmpnei	r2,r2,88
  80846c:	1000591e 	bne	r2,zero,8085d4 <examine_app0+0x548>
  808470:	e0bffd17 	ldw	r2,-12(fp)
  808474:	108000c4 	addi	r2,r2,3
  808478:	10800003 	ldbu	r2,0(r2)
  80847c:	10803fcc 	andi	r2,r2,255
  808480:	10801618 	cmpnei	r2,r2,88
  808484:	1000531e 	bne	r2,zero,8085d4 <examine_app0+0x548>
  808488:	e0bffd17 	ldw	r2,-12(fp)
  80848c:	10800104 	addi	r2,r2,4
  808490:	10800003 	ldbu	r2,0(r2)
  808494:	10803fcc 	andi	r2,r2,255
  808498:	10004e1e 	bne	r2,zero,8085d4 <examine_app0+0x548>
  80849c:	e0bffd17 	ldw	r2,-12(fp)
  8084a0:	10800144 	addi	r2,r2,5
  8084a4:	10800003 	ldbu	r2,0(r2)
  8084a8:	10803fcc 	andi	r2,r2,255
  8084ac:	10c00460 	cmpeqi	r3,r2,17
  8084b0:	1800131e 	bne	r3,zero,808500 <examine_app0+0x474>
  8084b4:	10c004e0 	cmpeqi	r3,r2,19
  8084b8:	1800201e 	bne	r3,zero,80853c <examine_app0+0x4b0>
  8084bc:	10800420 	cmpeqi	r2,r2,16
  8084c0:	10002d26 	beq	r2,zero,808578 <examine_app0+0x4ec>
  8084c4:	e0bffc17 	ldw	r2,-16(fp)
  8084c8:	10800017 	ldw	r2,0(r2)
  8084cc:	00c01b84 	movi	r3,110
  8084d0:	10c00515 	stw	r3,20(r2)
  8084d4:	e0bffc17 	ldw	r2,-16(fp)
  8084d8:	10800017 	ldw	r2,0(r2)
  8084dc:	e0fffa17 	ldw	r3,-24(fp)
  8084e0:	10c00615 	stw	r3,24(r2)
  8084e4:	e0bffc17 	ldw	r2,-16(fp)
  8084e8:	10800017 	ldw	r2,0(r2)
  8084ec:	10800117 	ldw	r2,4(r2)
  8084f0:	01400044 	movi	r5,1
  8084f4:	e13ffc17 	ldw	r4,-16(fp)
  8084f8:	103ee83a 	callr	r2
  8084fc:	00003406 	br	8085d0 <examine_app0+0x544>
  808500:	e0bffc17 	ldw	r2,-16(fp)
  808504:	10800017 	ldw	r2,0(r2)
  808508:	00c01bc4 	movi	r3,111
  80850c:	10c00515 	stw	r3,20(r2)
  808510:	e0bffc17 	ldw	r2,-16(fp)
  808514:	10800017 	ldw	r2,0(r2)
  808518:	e0fffa17 	ldw	r3,-24(fp)
  80851c:	10c00615 	stw	r3,24(r2)
  808520:	e0bffc17 	ldw	r2,-16(fp)
  808524:	10800017 	ldw	r2,0(r2)
  808528:	10800117 	ldw	r2,4(r2)
  80852c:	01400044 	movi	r5,1
  808530:	e13ffc17 	ldw	r4,-16(fp)
  808534:	103ee83a 	callr	r2
  808538:	00002506 	br	8085d0 <examine_app0+0x544>
  80853c:	e0bffc17 	ldw	r2,-16(fp)
  808540:	10800017 	ldw	r2,0(r2)
  808544:	00c01c04 	movi	r3,112
  808548:	10c00515 	stw	r3,20(r2)
  80854c:	e0bffc17 	ldw	r2,-16(fp)
  808550:	10800017 	ldw	r2,0(r2)
  808554:	e0fffa17 	ldw	r3,-24(fp)
  808558:	10c00615 	stw	r3,24(r2)
  80855c:	e0bffc17 	ldw	r2,-16(fp)
  808560:	10800017 	ldw	r2,0(r2)
  808564:	10800117 	ldw	r2,4(r2)
  808568:	01400044 	movi	r5,1
  80856c:	e13ffc17 	ldw	r4,-16(fp)
  808570:	103ee83a 	callr	r2
  808574:	00001606 	br	8085d0 <examine_app0+0x544>
  808578:	e0bffc17 	ldw	r2,-16(fp)
  80857c:	10800017 	ldw	r2,0(r2)
  808580:	00c016c4 	movi	r3,91
  808584:	10c00515 	stw	r3,20(r2)
  808588:	e0bffc17 	ldw	r2,-16(fp)
  80858c:	10800017 	ldw	r2,0(r2)
  808590:	e0fffd17 	ldw	r3,-12(fp)
  808594:	18c00144 	addi	r3,r3,5
  808598:	18c00003 	ldbu	r3,0(r3)
  80859c:	18c03fcc 	andi	r3,r3,255
  8085a0:	10c00615 	stw	r3,24(r2)
  8085a4:	e0bffc17 	ldw	r2,-16(fp)
  8085a8:	10800017 	ldw	r2,0(r2)
  8085ac:	e0fffa17 	ldw	r3,-24(fp)
  8085b0:	10c00715 	stw	r3,28(r2)
  8085b4:	e0bffc17 	ldw	r2,-16(fp)
  8085b8:	10800017 	ldw	r2,0(r2)
  8085bc:	10800117 	ldw	r2,4(r2)
  8085c0:	01400044 	movi	r5,1
  8085c4:	e13ffc17 	ldw	r4,-16(fp)
  8085c8:	103ee83a 	callr	r2
  8085cc:	0001883a 	nop
  8085d0:	00000e06 	br	80860c <examine_app0+0x580>
  8085d4:	e0bffc17 	ldw	r2,-16(fp)
  8085d8:	10800017 	ldw	r2,0(r2)
  8085dc:	00c013c4 	movi	r3,79
  8085e0:	10c00515 	stw	r3,20(r2)
  8085e4:	e0bffc17 	ldw	r2,-16(fp)
  8085e8:	10800017 	ldw	r2,0(r2)
  8085ec:	e0fffa17 	ldw	r3,-24(fp)
  8085f0:	10c00615 	stw	r3,24(r2)
  8085f4:	e0bffc17 	ldw	r2,-16(fp)
  8085f8:	10800017 	ldw	r2,0(r2)
  8085fc:	10800117 	ldw	r2,4(r2)
  808600:	01400044 	movi	r5,1
  808604:	e13ffc17 	ldw	r4,-16(fp)
  808608:	103ee83a 	callr	r2
  80860c:	0001883a 	nop
  808610:	e037883a 	mov	sp,fp
  808614:	dfc00117 	ldw	ra,4(sp)
  808618:	df000017 	ldw	fp,0(sp)
  80861c:	dec00204 	addi	sp,sp,8
  808620:	f800283a 	ret

00808624 <examine_app14>:
  808624:	defff504 	addi	sp,sp,-44
  808628:	dfc00a15 	stw	ra,40(sp)
  80862c:	df000915 	stw	fp,36(sp)
  808630:	df000904 	addi	fp,sp,36
  808634:	e13ffc15 	stw	r4,-16(fp)
  808638:	e17ffd15 	stw	r5,-12(fp)
  80863c:	e1bffe15 	stw	r6,-8(fp)
  808640:	e1ffff15 	stw	r7,-4(fp)
  808644:	e0bffe17 	ldw	r2,-8(fp)
  808648:	10800330 	cmpltui	r2,r2,12
  80864c:	1000681e 	bne	r2,zero,8087f0 <examine_app14+0x1cc>
  808650:	e0bffd17 	ldw	r2,-12(fp)
  808654:	10800003 	ldbu	r2,0(r2)
  808658:	10803fcc 	andi	r2,r2,255
  80865c:	10801058 	cmpnei	r2,r2,65
  808660:	1000631e 	bne	r2,zero,8087f0 <examine_app14+0x1cc>
  808664:	e0bffd17 	ldw	r2,-12(fp)
  808668:	10800044 	addi	r2,r2,1
  80866c:	10800003 	ldbu	r2,0(r2)
  808670:	10803fcc 	andi	r2,r2,255
  808674:	10801918 	cmpnei	r2,r2,100
  808678:	10005d1e 	bne	r2,zero,8087f0 <examine_app14+0x1cc>
  80867c:	e0bffd17 	ldw	r2,-12(fp)
  808680:	10800084 	addi	r2,r2,2
  808684:	10800003 	ldbu	r2,0(r2)
  808688:	10803fcc 	andi	r2,r2,255
  80868c:	10801bd8 	cmpnei	r2,r2,111
  808690:	1000571e 	bne	r2,zero,8087f0 <examine_app14+0x1cc>
  808694:	e0bffd17 	ldw	r2,-12(fp)
  808698:	108000c4 	addi	r2,r2,3
  80869c:	10800003 	ldbu	r2,0(r2)
  8086a0:	10803fcc 	andi	r2,r2,255
  8086a4:	10801898 	cmpnei	r2,r2,98
  8086a8:	1000511e 	bne	r2,zero,8087f0 <examine_app14+0x1cc>
  8086ac:	e0bffd17 	ldw	r2,-12(fp)
  8086b0:	10800104 	addi	r2,r2,4
  8086b4:	10800003 	ldbu	r2,0(r2)
  8086b8:	10803fcc 	andi	r2,r2,255
  8086bc:	10801958 	cmpnei	r2,r2,101
  8086c0:	10004b1e 	bne	r2,zero,8087f0 <examine_app14+0x1cc>
  8086c4:	e0bffd17 	ldw	r2,-12(fp)
  8086c8:	10800144 	addi	r2,r2,5
  8086cc:	10800003 	ldbu	r2,0(r2)
  8086d0:	10803fcc 	andi	r2,r2,255
  8086d4:	1006923a 	slli	r3,r2,8
  8086d8:	e0bffd17 	ldw	r2,-12(fp)
  8086dc:	10800184 	addi	r2,r2,6
  8086e0:	10800003 	ldbu	r2,0(r2)
  8086e4:	10803fcc 	andi	r2,r2,255
  8086e8:	1885883a 	add	r2,r3,r2
  8086ec:	e0bff715 	stw	r2,-36(fp)
  8086f0:	e0bffd17 	ldw	r2,-12(fp)
  8086f4:	108001c4 	addi	r2,r2,7
  8086f8:	10800003 	ldbu	r2,0(r2)
  8086fc:	10803fcc 	andi	r2,r2,255
  808700:	1006923a 	slli	r3,r2,8
  808704:	e0bffd17 	ldw	r2,-12(fp)
  808708:	10800204 	addi	r2,r2,8
  80870c:	10800003 	ldbu	r2,0(r2)
  808710:	10803fcc 	andi	r2,r2,255
  808714:	1885883a 	add	r2,r3,r2
  808718:	e0bff815 	stw	r2,-32(fp)
  80871c:	e0bffd17 	ldw	r2,-12(fp)
  808720:	10800244 	addi	r2,r2,9
  808724:	10800003 	ldbu	r2,0(r2)
  808728:	10803fcc 	andi	r2,r2,255
  80872c:	1006923a 	slli	r3,r2,8
  808730:	e0bffd17 	ldw	r2,-12(fp)
  808734:	10800284 	addi	r2,r2,10
  808738:	10800003 	ldbu	r2,0(r2)
  80873c:	10803fcc 	andi	r2,r2,255
  808740:	1885883a 	add	r2,r3,r2
  808744:	e0bff915 	stw	r2,-28(fp)
  808748:	e0bffd17 	ldw	r2,-12(fp)
  80874c:	108002c4 	addi	r2,r2,11
  808750:	10800003 	ldbu	r2,0(r2)
  808754:	10803fcc 	andi	r2,r2,255
  808758:	e0bffa15 	stw	r2,-24(fp)
  80875c:	e0bffc17 	ldw	r2,-16(fp)
  808760:	10800017 	ldw	r2,0(r2)
  808764:	10800604 	addi	r2,r2,24
  808768:	e0bffb15 	stw	r2,-20(fp)
  80876c:	e0fff717 	ldw	r3,-36(fp)
  808770:	e0bffb17 	ldw	r2,-20(fp)
  808774:	10c00015 	stw	r3,0(r2)
  808778:	e0bffb17 	ldw	r2,-20(fp)
  80877c:	10800104 	addi	r2,r2,4
  808780:	e0fff817 	ldw	r3,-32(fp)
  808784:	10c00015 	stw	r3,0(r2)
  808788:	e0bffb17 	ldw	r2,-20(fp)
  80878c:	10800204 	addi	r2,r2,8
  808790:	e0fff917 	ldw	r3,-28(fp)
  808794:	10c00015 	stw	r3,0(r2)
  808798:	e0bffb17 	ldw	r2,-20(fp)
  80879c:	10800304 	addi	r2,r2,12
  8087a0:	e0fffa17 	ldw	r3,-24(fp)
  8087a4:	10c00015 	stw	r3,0(r2)
  8087a8:	e0bffc17 	ldw	r2,-16(fp)
  8087ac:	10800017 	ldw	r2,0(r2)
  8087b0:	00c01384 	movi	r3,78
  8087b4:	10c00515 	stw	r3,20(r2)
  8087b8:	e0bffc17 	ldw	r2,-16(fp)
  8087bc:	10800017 	ldw	r2,0(r2)
  8087c0:	10800117 	ldw	r2,4(r2)
  8087c4:	01400044 	movi	r5,1
  8087c8:	e13ffc17 	ldw	r4,-16(fp)
  8087cc:	103ee83a 	callr	r2
  8087d0:	e0bffc17 	ldw	r2,-16(fp)
  8087d4:	00c00044 	movi	r3,1
  8087d8:	10c04a15 	stw	r3,296(r2)
  8087dc:	e0bffa17 	ldw	r2,-24(fp)
  8087e0:	1007883a 	mov	r3,r2
  8087e4:	e0bffc17 	ldw	r2,-16(fp)
  8087e8:	10c04b05 	stb	r3,300(r2)
  8087ec:	00001006 	br	808830 <examine_app14+0x20c>
  8087f0:	e0bffc17 	ldw	r2,-16(fp)
  8087f4:	10800017 	ldw	r2,0(r2)
  8087f8:	00c01404 	movi	r3,80
  8087fc:	10c00515 	stw	r3,20(r2)
  808800:	e0bffc17 	ldw	r2,-16(fp)
  808804:	10800017 	ldw	r2,0(r2)
  808808:	e13fff17 	ldw	r4,-4(fp)
  80880c:	e0fffe17 	ldw	r3,-8(fp)
  808810:	20c7883a 	add	r3,r4,r3
  808814:	10c00615 	stw	r3,24(r2)
  808818:	e0bffc17 	ldw	r2,-16(fp)
  80881c:	10800017 	ldw	r2,0(r2)
  808820:	10800117 	ldw	r2,4(r2)
  808824:	01400044 	movi	r5,1
  808828:	e13ffc17 	ldw	r4,-16(fp)
  80882c:	103ee83a 	callr	r2
  808830:	0001883a 	nop
  808834:	e037883a 	mov	sp,fp
  808838:	dfc00117 	ldw	ra,4(sp)
  80883c:	df000017 	ldw	fp,0(sp)
  808840:	dec00204 	addi	sp,sp,8
  808844:	f800283a 	ret

00808848 <get_interesting_appn>:
  808848:	defff304 	addi	sp,sp,-52
  80884c:	dfc00c15 	stw	ra,48(sp)
  808850:	df000b15 	stw	fp,44(sp)
  808854:	df000b04 	addi	fp,sp,44
  808858:	e13fff15 	stw	r4,-4(fp)
  80885c:	e0bfff17 	ldw	r2,-4(fp)
  808860:	10800617 	ldw	r2,24(r2)
  808864:	e0bff915 	stw	r2,-28(fp)
  808868:	e0bff917 	ldw	r2,-28(fp)
  80886c:	10800017 	ldw	r2,0(r2)
  808870:	e0bff715 	stw	r2,-36(fp)
  808874:	e0bff917 	ldw	r2,-28(fp)
  808878:	10800117 	ldw	r2,4(r2)
  80887c:	e0bff815 	stw	r2,-32(fp)
  808880:	e0bff817 	ldw	r2,-32(fp)
  808884:	10000d1e 	bne	r2,zero,8088bc <get_interesting_appn+0x74>
  808888:	e0bff917 	ldw	r2,-28(fp)
  80888c:	10800317 	ldw	r2,12(r2)
  808890:	e13fff17 	ldw	r4,-4(fp)
  808894:	103ee83a 	callr	r2
  808898:	1000021e 	bne	r2,zero,8088a4 <get_interesting_appn+0x5c>
  80889c:	0005883a 	mov	r2,zero
  8088a0:	00009206 	br	808aec <get_interesting_appn+0x2a4>
  8088a4:	e0bff917 	ldw	r2,-28(fp)
  8088a8:	10800017 	ldw	r2,0(r2)
  8088ac:	e0bff715 	stw	r2,-36(fp)
  8088b0:	e0bff917 	ldw	r2,-28(fp)
  8088b4:	10800117 	ldw	r2,4(r2)
  8088b8:	e0bff815 	stw	r2,-32(fp)
  8088bc:	e0bff817 	ldw	r2,-32(fp)
  8088c0:	10bfffc4 	addi	r2,r2,-1
  8088c4:	e0bff815 	stw	r2,-32(fp)
  8088c8:	e0bff717 	ldw	r2,-36(fp)
  8088cc:	10c00044 	addi	r3,r2,1
  8088d0:	e0fff715 	stw	r3,-36(fp)
  8088d4:	10800003 	ldbu	r2,0(r2)
  8088d8:	10803fcc 	andi	r2,r2,255
  8088dc:	1004923a 	slli	r2,r2,8
  8088e0:	e0bffa15 	stw	r2,-24(fp)
  8088e4:	e0bff817 	ldw	r2,-32(fp)
  8088e8:	10000d1e 	bne	r2,zero,808920 <get_interesting_appn+0xd8>
  8088ec:	e0bff917 	ldw	r2,-28(fp)
  8088f0:	10800317 	ldw	r2,12(r2)
  8088f4:	e13fff17 	ldw	r4,-4(fp)
  8088f8:	103ee83a 	callr	r2
  8088fc:	1000021e 	bne	r2,zero,808908 <get_interesting_appn+0xc0>
  808900:	0005883a 	mov	r2,zero
  808904:	00007906 	br	808aec <get_interesting_appn+0x2a4>
  808908:	e0bff917 	ldw	r2,-28(fp)
  80890c:	10800017 	ldw	r2,0(r2)
  808910:	e0bff715 	stw	r2,-36(fp)
  808914:	e0bff917 	ldw	r2,-28(fp)
  808918:	10800117 	ldw	r2,4(r2)
  80891c:	e0bff815 	stw	r2,-32(fp)
  808920:	e0bff817 	ldw	r2,-32(fp)
  808924:	10bfffc4 	addi	r2,r2,-1
  808928:	e0bff815 	stw	r2,-32(fp)
  80892c:	e0bff717 	ldw	r2,-36(fp)
  808930:	10c00044 	addi	r3,r2,1
  808934:	e0fff715 	stw	r3,-36(fp)
  808938:	10800003 	ldbu	r2,0(r2)
  80893c:	10803fcc 	andi	r2,r2,255
  808940:	e0fffa17 	ldw	r3,-24(fp)
  808944:	1885883a 	add	r2,r3,r2
  808948:	e0bffa15 	stw	r2,-24(fp)
  80894c:	e0bffa17 	ldw	r2,-24(fp)
  808950:	10bfff84 	addi	r2,r2,-2
  808954:	e0bffa15 	stw	r2,-24(fp)
  808958:	e0bffa17 	ldw	r2,-24(fp)
  80895c:	10800390 	cmplti	r2,r2,14
  808960:	1000031e 	bne	r2,zero,808970 <get_interesting_appn+0x128>
  808964:	00800384 	movi	r2,14
  808968:	e0bff615 	stw	r2,-40(fp)
  80896c:	00000606 	br	808988 <get_interesting_appn+0x140>
  808970:	e0bffa17 	ldw	r2,-24(fp)
  808974:	0080030e 	bge	zero,r2,808984 <get_interesting_appn+0x13c>
  808978:	e0bffa17 	ldw	r2,-24(fp)
  80897c:	e0bff615 	stw	r2,-40(fp)
  808980:	00000106 	br	808988 <get_interesting_appn+0x140>
  808984:	e03ff615 	stw	zero,-40(fp)
  808988:	e03ff515 	stw	zero,-44(fp)
  80898c:	00001d06 	br	808a04 <get_interesting_appn+0x1bc>
  808990:	e0bff817 	ldw	r2,-32(fp)
  808994:	10000d1e 	bne	r2,zero,8089cc <get_interesting_appn+0x184>
  808998:	e0bff917 	ldw	r2,-28(fp)
  80899c:	10800317 	ldw	r2,12(r2)
  8089a0:	e13fff17 	ldw	r4,-4(fp)
  8089a4:	103ee83a 	callr	r2
  8089a8:	1000021e 	bne	r2,zero,8089b4 <get_interesting_appn+0x16c>
  8089ac:	0005883a 	mov	r2,zero
  8089b0:	00004e06 	br	808aec <get_interesting_appn+0x2a4>
  8089b4:	e0bff917 	ldw	r2,-28(fp)
  8089b8:	10800017 	ldw	r2,0(r2)
  8089bc:	e0bff715 	stw	r2,-36(fp)
  8089c0:	e0bff917 	ldw	r2,-28(fp)
  8089c4:	10800117 	ldw	r2,4(r2)
  8089c8:	e0bff815 	stw	r2,-32(fp)
  8089cc:	e0bff817 	ldw	r2,-32(fp)
  8089d0:	10bfffc4 	addi	r2,r2,-1
  8089d4:	e0bff815 	stw	r2,-32(fp)
  8089d8:	e0bff717 	ldw	r2,-36(fp)
  8089dc:	10c00044 	addi	r3,r2,1
  8089e0:	e0fff715 	stw	r3,-36(fp)
  8089e4:	10c00003 	ldbu	r3,0(r2)
  8089e8:	e13ffb04 	addi	r4,fp,-20
  8089ec:	e0bff517 	ldw	r2,-44(fp)
  8089f0:	2085883a 	add	r2,r4,r2
  8089f4:	10c00005 	stb	r3,0(r2)
  8089f8:	e0bff517 	ldw	r2,-44(fp)
  8089fc:	10800044 	addi	r2,r2,1
  808a00:	e0bff515 	stw	r2,-44(fp)
  808a04:	e0fff517 	ldw	r3,-44(fp)
  808a08:	e0bff617 	ldw	r2,-40(fp)
  808a0c:	18bfe036 	bltu	r3,r2,808990 <__alt_mem_epcs_flash_controller_0+0xff7ff990>
  808a10:	e0fffa17 	ldw	r3,-24(fp)
  808a14:	e0bff617 	ldw	r2,-40(fp)
  808a18:	1885c83a 	sub	r2,r3,r2
  808a1c:	e0bffa15 	stw	r2,-24(fp)
  808a20:	e0bfff17 	ldw	r2,-4(fp)
  808a24:	10806e17 	ldw	r2,440(r2)
  808a28:	10c03820 	cmpeqi	r3,r2,224
  808a2c:	1800031e 	bne	r3,zero,808a3c <get_interesting_appn+0x1f4>
  808a30:	10803ba0 	cmpeqi	r2,r2,238
  808a34:	1000081e 	bne	r2,zero,808a58 <get_interesting_appn+0x210>
  808a38:	00000e06 	br	808a74 <get_interesting_appn+0x22c>
  808a3c:	e0bffb04 	addi	r2,fp,-20
  808a40:	e1fffa17 	ldw	r7,-24(fp)
  808a44:	e1bff617 	ldw	r6,-40(fp)
  808a48:	100b883a 	mov	r5,r2
  808a4c:	e13fff17 	ldw	r4,-4(fp)
  808a50:	080808c0 	call	80808c <examine_app0>
  808a54:	00001606 	br	808ab0 <get_interesting_appn+0x268>
  808a58:	e0bffb04 	addi	r2,fp,-20
  808a5c:	e1fffa17 	ldw	r7,-24(fp)
  808a60:	e1bff617 	ldw	r6,-40(fp)
  808a64:	100b883a 	mov	r5,r2
  808a68:	e13fff17 	ldw	r4,-4(fp)
  808a6c:	08086240 	call	808624 <examine_app14>
  808a70:	00000f06 	br	808ab0 <get_interesting_appn+0x268>
  808a74:	e0bfff17 	ldw	r2,-4(fp)
  808a78:	10800017 	ldw	r2,0(r2)
  808a7c:	00c01184 	movi	r3,70
  808a80:	10c00515 	stw	r3,20(r2)
  808a84:	e0bfff17 	ldw	r2,-4(fp)
  808a88:	10800017 	ldw	r2,0(r2)
  808a8c:	e0ffff17 	ldw	r3,-4(fp)
  808a90:	18c06e17 	ldw	r3,440(r3)
  808a94:	10c00615 	stw	r3,24(r2)
  808a98:	e0bfff17 	ldw	r2,-4(fp)
  808a9c:	10800017 	ldw	r2,0(r2)
  808aa0:	10800017 	ldw	r2,0(r2)
  808aa4:	e13fff17 	ldw	r4,-4(fp)
  808aa8:	103ee83a 	callr	r2
  808aac:	0001883a 	nop
  808ab0:	e0bff917 	ldw	r2,-28(fp)
  808ab4:	e0fff717 	ldw	r3,-36(fp)
  808ab8:	10c00015 	stw	r3,0(r2)
  808abc:	e0bff917 	ldw	r2,-28(fp)
  808ac0:	e0fff817 	ldw	r3,-32(fp)
  808ac4:	10c00115 	stw	r3,4(r2)
  808ac8:	e0bffa17 	ldw	r2,-24(fp)
  808acc:	0080060e 	bge	zero,r2,808ae8 <get_interesting_appn+0x2a0>
  808ad0:	e0bfff17 	ldw	r2,-4(fp)
  808ad4:	10800617 	ldw	r2,24(r2)
  808ad8:	10800417 	ldw	r2,16(r2)
  808adc:	e17ffa17 	ldw	r5,-24(fp)
  808ae0:	e13fff17 	ldw	r4,-4(fp)
  808ae4:	103ee83a 	callr	r2
  808ae8:	00800044 	movi	r2,1
  808aec:	e037883a 	mov	sp,fp
  808af0:	dfc00117 	ldw	ra,4(sp)
  808af4:	df000017 	ldw	fp,0(sp)
  808af8:	dec00204 	addi	sp,sp,8
  808afc:	f800283a 	ret

00808b00 <save_marker>:
  808b00:	defff204 	addi	sp,sp,-56
  808b04:	dfc00d15 	stw	ra,52(sp)
  808b08:	df000c15 	stw	fp,48(sp)
  808b0c:	df000c04 	addi	fp,sp,48
  808b10:	e13fff15 	stw	r4,-4(fp)
  808b14:	e0bfff17 	ldw	r2,-4(fp)
  808b18:	10807417 	ldw	r2,464(r2)
  808b1c:	e0bffd15 	stw	r2,-12(fp)
  808b20:	e0bffd17 	ldw	r2,-12(fp)
  808b24:	10802917 	ldw	r2,164(r2)
  808b28:	e0bff415 	stw	r2,-48(fp)
  808b2c:	e03ff815 	stw	zero,-32(fp)
  808b30:	e0bfff17 	ldw	r2,-4(fp)
  808b34:	10800617 	ldw	r2,24(r2)
  808b38:	e0bffe15 	stw	r2,-8(fp)
  808b3c:	e0bffe17 	ldw	r2,-8(fp)
  808b40:	10800017 	ldw	r2,0(r2)
  808b44:	e0bff915 	stw	r2,-28(fp)
  808b48:	e0bffe17 	ldw	r2,-8(fp)
  808b4c:	10800117 	ldw	r2,4(r2)
  808b50:	e0bffa15 	stw	r2,-24(fp)
  808b54:	e0bff417 	ldw	r2,-48(fp)
  808b58:	10007b1e 	bne	r2,zero,808d48 <save_marker+0x248>
  808b5c:	e0bffa17 	ldw	r2,-24(fp)
  808b60:	10000d1e 	bne	r2,zero,808b98 <save_marker+0x98>
  808b64:	e0bffe17 	ldw	r2,-8(fp)
  808b68:	10800317 	ldw	r2,12(r2)
  808b6c:	e13fff17 	ldw	r4,-4(fp)
  808b70:	103ee83a 	callr	r2
  808b74:	1000021e 	bne	r2,zero,808b80 <save_marker+0x80>
  808b78:	0005883a 	mov	r2,zero
  808b7c:	00010506 	br	808f94 <save_marker+0x494>
  808b80:	e0bffe17 	ldw	r2,-8(fp)
  808b84:	10800017 	ldw	r2,0(r2)
  808b88:	e0bff915 	stw	r2,-28(fp)
  808b8c:	e0bffe17 	ldw	r2,-8(fp)
  808b90:	10800117 	ldw	r2,4(r2)
  808b94:	e0bffa15 	stw	r2,-24(fp)
  808b98:	e0bffa17 	ldw	r2,-24(fp)
  808b9c:	10bfffc4 	addi	r2,r2,-1
  808ba0:	e0bffa15 	stw	r2,-24(fp)
  808ba4:	e0bff917 	ldw	r2,-28(fp)
  808ba8:	10c00044 	addi	r3,r2,1
  808bac:	e0fff915 	stw	r3,-28(fp)
  808bb0:	10800003 	ldbu	r2,0(r2)
  808bb4:	10803fcc 	andi	r2,r2,255
  808bb8:	1004923a 	slli	r2,r2,8
  808bbc:	e0bff815 	stw	r2,-32(fp)
  808bc0:	e0bffa17 	ldw	r2,-24(fp)
  808bc4:	10000d1e 	bne	r2,zero,808bfc <save_marker+0xfc>
  808bc8:	e0bffe17 	ldw	r2,-8(fp)
  808bcc:	10800317 	ldw	r2,12(r2)
  808bd0:	e13fff17 	ldw	r4,-4(fp)
  808bd4:	103ee83a 	callr	r2
  808bd8:	1000021e 	bne	r2,zero,808be4 <save_marker+0xe4>
  808bdc:	0005883a 	mov	r2,zero
  808be0:	0000ec06 	br	808f94 <save_marker+0x494>
  808be4:	e0bffe17 	ldw	r2,-8(fp)
  808be8:	10800017 	ldw	r2,0(r2)
  808bec:	e0bff915 	stw	r2,-28(fp)
  808bf0:	e0bffe17 	ldw	r2,-8(fp)
  808bf4:	10800117 	ldw	r2,4(r2)
  808bf8:	e0bffa15 	stw	r2,-24(fp)
  808bfc:	e0bffa17 	ldw	r2,-24(fp)
  808c00:	10bfffc4 	addi	r2,r2,-1
  808c04:	e0bffa15 	stw	r2,-24(fp)
  808c08:	e0bff917 	ldw	r2,-28(fp)
  808c0c:	10c00044 	addi	r3,r2,1
  808c10:	e0fff915 	stw	r3,-28(fp)
  808c14:	10800003 	ldbu	r2,0(r2)
  808c18:	10803fcc 	andi	r2,r2,255
  808c1c:	e0fff817 	ldw	r3,-32(fp)
  808c20:	1885883a 	add	r2,r3,r2
  808c24:	e0bff815 	stw	r2,-32(fp)
  808c28:	e0bff817 	ldw	r2,-32(fp)
  808c2c:	10bfff84 	addi	r2,r2,-2
  808c30:	e0bff815 	stw	r2,-32(fp)
  808c34:	e0bff817 	ldw	r2,-32(fp)
  808c38:	10003e16 	blt	r2,zero,808d34 <save_marker+0x234>
  808c3c:	e0bfff17 	ldw	r2,-4(fp)
  808c40:	10806e17 	ldw	r2,440(r2)
  808c44:	10803f98 	cmpnei	r2,r2,254
  808c48:	1000041e 	bne	r2,zero,808c5c <save_marker+0x15c>
  808c4c:	e0bffd17 	ldw	r2,-12(fp)
  808c50:	10801817 	ldw	r2,96(r2)
  808c54:	e0bffb15 	stw	r2,-20(fp)
  808c58:	00000a06 	br	808c84 <save_marker+0x184>
  808c5c:	e0bfff17 	ldw	r2,-4(fp)
  808c60:	10806e17 	ldw	r2,440(r2)
  808c64:	10bfc804 	addi	r2,r2,-224
  808c68:	e0fffd17 	ldw	r3,-12(fp)
  808c6c:	10800644 	addi	r2,r2,25
  808c70:	1085883a 	add	r2,r2,r2
  808c74:	1085883a 	add	r2,r2,r2
  808c78:	1885883a 	add	r2,r3,r2
  808c7c:	10800017 	ldw	r2,0(r2)
  808c80:	e0bffb15 	stw	r2,-20(fp)
  808c84:	e0fff817 	ldw	r3,-32(fp)
  808c88:	e0bffb17 	ldw	r2,-20(fp)
  808c8c:	1880022e 	bgeu	r3,r2,808c98 <save_marker+0x198>
  808c90:	e0bff817 	ldw	r2,-32(fp)
  808c94:	e0bffb15 	stw	r2,-20(fp)
  808c98:	e0bfff17 	ldw	r2,-4(fp)
  808c9c:	10800117 	ldw	r2,4(r2)
  808ca0:	10800117 	ldw	r2,4(r2)
  808ca4:	e0fffb17 	ldw	r3,-20(fp)
  808ca8:	18c00504 	addi	r3,r3,20
  808cac:	180d883a 	mov	r6,r3
  808cb0:	01400044 	movi	r5,1
  808cb4:	e13fff17 	ldw	r4,-4(fp)
  808cb8:	103ee83a 	callr	r2
  808cbc:	e0bff415 	stw	r2,-48(fp)
  808cc0:	e0bff417 	ldw	r2,-48(fp)
  808cc4:	10000015 	stw	zero,0(r2)
  808cc8:	e0bfff17 	ldw	r2,-4(fp)
  808ccc:	10806e17 	ldw	r2,440(r2)
  808cd0:	1007883a 	mov	r3,r2
  808cd4:	e0bff417 	ldw	r2,-48(fp)
  808cd8:	10c00105 	stb	r3,4(r2)
  808cdc:	e0fff817 	ldw	r3,-32(fp)
  808ce0:	e0bff417 	ldw	r2,-48(fp)
  808ce4:	10c00215 	stw	r3,8(r2)
  808ce8:	e0bff417 	ldw	r2,-48(fp)
  808cec:	e0fffb17 	ldw	r3,-20(fp)
  808cf0:	10c00315 	stw	r3,12(r2)
  808cf4:	e0bff417 	ldw	r2,-48(fp)
  808cf8:	10c00504 	addi	r3,r2,20
  808cfc:	e0bff417 	ldw	r2,-48(fp)
  808d00:	10c00415 	stw	r3,16(r2)
  808d04:	e0bff417 	ldw	r2,-48(fp)
  808d08:	10800417 	ldw	r2,16(r2)
  808d0c:	e0bff715 	stw	r2,-36(fp)
  808d10:	e0bffd17 	ldw	r2,-12(fp)
  808d14:	e0fff417 	ldw	r3,-48(fp)
  808d18:	10c02915 	stw	r3,164(r2)
  808d1c:	e0bffd17 	ldw	r2,-12(fp)
  808d20:	10002a15 	stw	zero,168(r2)
  808d24:	e03ff515 	stw	zero,-44(fp)
  808d28:	e0bffb17 	ldw	r2,-20(fp)
  808d2c:	e0bff615 	stw	r2,-40(fp)
  808d30:	00003d06 	br	808e28 <save_marker+0x328>
  808d34:	e03ff615 	stw	zero,-40(fp)
  808d38:	e0bff617 	ldw	r2,-40(fp)
  808d3c:	e0bff515 	stw	r2,-44(fp)
  808d40:	e03ff715 	stw	zero,-36(fp)
  808d44:	00003806 	br	808e28 <save_marker+0x328>
  808d48:	e0bffd17 	ldw	r2,-12(fp)
  808d4c:	10802a17 	ldw	r2,168(r2)
  808d50:	e0bff515 	stw	r2,-44(fp)
  808d54:	e0bff417 	ldw	r2,-48(fp)
  808d58:	10800317 	ldw	r2,12(r2)
  808d5c:	e0bff615 	stw	r2,-40(fp)
  808d60:	e0bff417 	ldw	r2,-48(fp)
  808d64:	10c00417 	ldw	r3,16(r2)
  808d68:	e0bff517 	ldw	r2,-44(fp)
  808d6c:	1885883a 	add	r2,r3,r2
  808d70:	e0bff715 	stw	r2,-36(fp)
  808d74:	00002c06 	br	808e28 <save_marker+0x328>
  808d78:	e0bffe17 	ldw	r2,-8(fp)
  808d7c:	e0fff917 	ldw	r3,-28(fp)
  808d80:	10c00015 	stw	r3,0(r2)
  808d84:	e0bffe17 	ldw	r2,-8(fp)
  808d88:	e0fffa17 	ldw	r3,-24(fp)
  808d8c:	10c00115 	stw	r3,4(r2)
  808d90:	e0bffd17 	ldw	r2,-12(fp)
  808d94:	e0fff517 	ldw	r3,-44(fp)
  808d98:	10c02a15 	stw	r3,168(r2)
  808d9c:	e0bffa17 	ldw	r2,-24(fp)
  808da0:	10001c1e 	bne	r2,zero,808e14 <save_marker+0x314>
  808da4:	e0bffe17 	ldw	r2,-8(fp)
  808da8:	10800317 	ldw	r2,12(r2)
  808dac:	e13fff17 	ldw	r4,-4(fp)
  808db0:	103ee83a 	callr	r2
  808db4:	1000021e 	bne	r2,zero,808dc0 <save_marker+0x2c0>
  808db8:	0005883a 	mov	r2,zero
  808dbc:	00007506 	br	808f94 <save_marker+0x494>
  808dc0:	e0bffe17 	ldw	r2,-8(fp)
  808dc4:	10800017 	ldw	r2,0(r2)
  808dc8:	e0bff915 	stw	r2,-28(fp)
  808dcc:	e0bffe17 	ldw	r2,-8(fp)
  808dd0:	10800117 	ldw	r2,4(r2)
  808dd4:	e0bffa15 	stw	r2,-24(fp)
  808dd8:	00000e06 	br	808e14 <save_marker+0x314>
  808ddc:	e0bff717 	ldw	r2,-36(fp)
  808de0:	10c00044 	addi	r3,r2,1
  808de4:	e0fff715 	stw	r3,-36(fp)
  808de8:	e0fff917 	ldw	r3,-28(fp)
  808dec:	19000044 	addi	r4,r3,1
  808df0:	e13ff915 	stw	r4,-28(fp)
  808df4:	18c00003 	ldbu	r3,0(r3)
  808df8:	10c00005 	stb	r3,0(r2)
  808dfc:	e0bffa17 	ldw	r2,-24(fp)
  808e00:	10bfffc4 	addi	r2,r2,-1
  808e04:	e0bffa15 	stw	r2,-24(fp)
  808e08:	e0bff517 	ldw	r2,-44(fp)
  808e0c:	10800044 	addi	r2,r2,1
  808e10:	e0bff515 	stw	r2,-44(fp)
  808e14:	e0fff517 	ldw	r3,-44(fp)
  808e18:	e0bff617 	ldw	r2,-40(fp)
  808e1c:	1880022e 	bgeu	r3,r2,808e28 <save_marker+0x328>
  808e20:	e0bffa17 	ldw	r2,-24(fp)
  808e24:	103fed1e 	bne	r2,zero,808ddc <__alt_mem_epcs_flash_controller_0+0xff7ffddc>
  808e28:	e0fff517 	ldw	r3,-44(fp)
  808e2c:	e0bff617 	ldw	r2,-40(fp)
  808e30:	18bfd136 	bltu	r3,r2,808d78 <__alt_mem_epcs_flash_controller_0+0xff7ffd78>
  808e34:	e0bff417 	ldw	r2,-48(fp)
  808e38:	10001c26 	beq	r2,zero,808eac <save_marker+0x3ac>
  808e3c:	e0bfff17 	ldw	r2,-4(fp)
  808e40:	10804e17 	ldw	r2,312(r2)
  808e44:	1000041e 	bne	r2,zero,808e58 <save_marker+0x358>
  808e48:	e0bfff17 	ldw	r2,-4(fp)
  808e4c:	e0fff417 	ldw	r3,-48(fp)
  808e50:	10c04e15 	stw	r3,312(r2)
  808e54:	00000d06 	br	808e8c <save_marker+0x38c>
  808e58:	e0bfff17 	ldw	r2,-4(fp)
  808e5c:	10804e17 	ldw	r2,312(r2)
  808e60:	e0bffc15 	stw	r2,-16(fp)
  808e64:	00000306 	br	808e74 <save_marker+0x374>
  808e68:	e0bffc17 	ldw	r2,-16(fp)
  808e6c:	10800017 	ldw	r2,0(r2)
  808e70:	e0bffc15 	stw	r2,-16(fp)
  808e74:	e0bffc17 	ldw	r2,-16(fp)
  808e78:	10800017 	ldw	r2,0(r2)
  808e7c:	103ffa1e 	bne	r2,zero,808e68 <__alt_mem_epcs_flash_controller_0+0xff7ffe68>
  808e80:	e0bffc17 	ldw	r2,-16(fp)
  808e84:	e0fff417 	ldw	r3,-48(fp)
  808e88:	10c00015 	stw	r3,0(r2)
  808e8c:	e0bff417 	ldw	r2,-48(fp)
  808e90:	10800417 	ldw	r2,16(r2)
  808e94:	e0bff715 	stw	r2,-36(fp)
  808e98:	e0bff417 	ldw	r2,-48(fp)
  808e9c:	10c00217 	ldw	r3,8(r2)
  808ea0:	e0bff617 	ldw	r2,-40(fp)
  808ea4:	1885c83a 	sub	r2,r3,r2
  808ea8:	e0bff815 	stw	r2,-32(fp)
  808eac:	e0bffd17 	ldw	r2,-12(fp)
  808eb0:	10002915 	stw	zero,164(r2)
  808eb4:	e0bfff17 	ldw	r2,-4(fp)
  808eb8:	10806e17 	ldw	r2,440(r2)
  808ebc:	10c03820 	cmpeqi	r3,r2,224
  808ec0:	1800031e 	bne	r3,zero,808ed0 <save_marker+0x3d0>
  808ec4:	10803ba0 	cmpeqi	r2,r2,238
  808ec8:	1000071e 	bne	r2,zero,808ee8 <save_marker+0x3e8>
  808ecc:	00000c06 	br	808f00 <save_marker+0x400>
  808ed0:	e1fff817 	ldw	r7,-32(fp)
  808ed4:	e1bff617 	ldw	r6,-40(fp)
  808ed8:	e17ff717 	ldw	r5,-36(fp)
  808edc:	e13fff17 	ldw	r4,-4(fp)
  808ee0:	080808c0 	call	80808c <examine_app0>
  808ee4:	00001c06 	br	808f58 <save_marker+0x458>
  808ee8:	e1fff817 	ldw	r7,-32(fp)
  808eec:	e1bff617 	ldw	r6,-40(fp)
  808ef0:	e17ff717 	ldw	r5,-36(fp)
  808ef4:	e13fff17 	ldw	r4,-4(fp)
  808ef8:	08086240 	call	808624 <examine_app14>
  808efc:	00001606 	br	808f58 <save_marker+0x458>
  808f00:	e0bfff17 	ldw	r2,-4(fp)
  808f04:	10800017 	ldw	r2,0(r2)
  808f08:	00c01744 	movi	r3,93
  808f0c:	10c00515 	stw	r3,20(r2)
  808f10:	e0bfff17 	ldw	r2,-4(fp)
  808f14:	10800017 	ldw	r2,0(r2)
  808f18:	e0ffff17 	ldw	r3,-4(fp)
  808f1c:	18c06e17 	ldw	r3,440(r3)
  808f20:	10c00615 	stw	r3,24(r2)
  808f24:	e0bfff17 	ldw	r2,-4(fp)
  808f28:	10800017 	ldw	r2,0(r2)
  808f2c:	e13ff817 	ldw	r4,-32(fp)
  808f30:	e0fff617 	ldw	r3,-40(fp)
  808f34:	20c7883a 	add	r3,r4,r3
  808f38:	10c00715 	stw	r3,28(r2)
  808f3c:	e0bfff17 	ldw	r2,-4(fp)
  808f40:	10800017 	ldw	r2,0(r2)
  808f44:	10800117 	ldw	r2,4(r2)
  808f48:	01400044 	movi	r5,1
  808f4c:	e13fff17 	ldw	r4,-4(fp)
  808f50:	103ee83a 	callr	r2
  808f54:	0001883a 	nop
  808f58:	e0bffe17 	ldw	r2,-8(fp)
  808f5c:	e0fff917 	ldw	r3,-28(fp)
  808f60:	10c00015 	stw	r3,0(r2)
  808f64:	e0bffe17 	ldw	r2,-8(fp)
  808f68:	e0fffa17 	ldw	r3,-24(fp)
  808f6c:	10c00115 	stw	r3,4(r2)
  808f70:	e0bff817 	ldw	r2,-32(fp)
  808f74:	0080060e 	bge	zero,r2,808f90 <save_marker+0x490>
  808f78:	e0bfff17 	ldw	r2,-4(fp)
  808f7c:	10800617 	ldw	r2,24(r2)
  808f80:	10800417 	ldw	r2,16(r2)
  808f84:	e17ff817 	ldw	r5,-32(fp)
  808f88:	e13fff17 	ldw	r4,-4(fp)
  808f8c:	103ee83a 	callr	r2
  808f90:	00800044 	movi	r2,1
  808f94:	e037883a 	mov	sp,fp
  808f98:	dfc00117 	ldw	ra,4(sp)
  808f9c:	df000017 	ldw	fp,0(sp)
  808fa0:	dec00204 	addi	sp,sp,8
  808fa4:	f800283a 	ret

00808fa8 <skip_variable>:
  808fa8:	defff904 	addi	sp,sp,-28
  808fac:	dfc00615 	stw	ra,24(sp)
  808fb0:	df000515 	stw	fp,20(sp)
  808fb4:	df000504 	addi	fp,sp,20
  808fb8:	e13fff15 	stw	r4,-4(fp)
  808fbc:	e0bfff17 	ldw	r2,-4(fp)
  808fc0:	10800617 	ldw	r2,24(r2)
  808fc4:	e0bffd15 	stw	r2,-12(fp)
  808fc8:	e0bffd17 	ldw	r2,-12(fp)
  808fcc:	10800017 	ldw	r2,0(r2)
  808fd0:	e0bffb15 	stw	r2,-20(fp)
  808fd4:	e0bffd17 	ldw	r2,-12(fp)
  808fd8:	10800117 	ldw	r2,4(r2)
  808fdc:	e0bffc15 	stw	r2,-16(fp)
  808fe0:	e0bffc17 	ldw	r2,-16(fp)
  808fe4:	10000d1e 	bne	r2,zero,80901c <skip_variable+0x74>
  808fe8:	e0bffd17 	ldw	r2,-12(fp)
  808fec:	10800317 	ldw	r2,12(r2)
  808ff0:	e13fff17 	ldw	r4,-4(fp)
  808ff4:	103ee83a 	callr	r2
  808ff8:	1000021e 	bne	r2,zero,809004 <skip_variable+0x5c>
  808ffc:	0005883a 	mov	r2,zero
  809000:	00004f06 	br	809140 <skip_variable+0x198>
  809004:	e0bffd17 	ldw	r2,-12(fp)
  809008:	10800017 	ldw	r2,0(r2)
  80900c:	e0bffb15 	stw	r2,-20(fp)
  809010:	e0bffd17 	ldw	r2,-12(fp)
  809014:	10800117 	ldw	r2,4(r2)
  809018:	e0bffc15 	stw	r2,-16(fp)
  80901c:	e0bffc17 	ldw	r2,-16(fp)
  809020:	10bfffc4 	addi	r2,r2,-1
  809024:	e0bffc15 	stw	r2,-16(fp)
  809028:	e0bffb17 	ldw	r2,-20(fp)
  80902c:	10c00044 	addi	r3,r2,1
  809030:	e0fffb15 	stw	r3,-20(fp)
  809034:	10800003 	ldbu	r2,0(r2)
  809038:	10803fcc 	andi	r2,r2,255
  80903c:	1004923a 	slli	r2,r2,8
  809040:	e0bffe15 	stw	r2,-8(fp)
  809044:	e0bffc17 	ldw	r2,-16(fp)
  809048:	10000d1e 	bne	r2,zero,809080 <skip_variable+0xd8>
  80904c:	e0bffd17 	ldw	r2,-12(fp)
  809050:	10800317 	ldw	r2,12(r2)
  809054:	e13fff17 	ldw	r4,-4(fp)
  809058:	103ee83a 	callr	r2
  80905c:	1000021e 	bne	r2,zero,809068 <skip_variable+0xc0>
  809060:	0005883a 	mov	r2,zero
  809064:	00003606 	br	809140 <skip_variable+0x198>
  809068:	e0bffd17 	ldw	r2,-12(fp)
  80906c:	10800017 	ldw	r2,0(r2)
  809070:	e0bffb15 	stw	r2,-20(fp)
  809074:	e0bffd17 	ldw	r2,-12(fp)
  809078:	10800117 	ldw	r2,4(r2)
  80907c:	e0bffc15 	stw	r2,-16(fp)
  809080:	e0bffc17 	ldw	r2,-16(fp)
  809084:	10bfffc4 	addi	r2,r2,-1
  809088:	e0bffc15 	stw	r2,-16(fp)
  80908c:	e0bffb17 	ldw	r2,-20(fp)
  809090:	10c00044 	addi	r3,r2,1
  809094:	e0fffb15 	stw	r3,-20(fp)
  809098:	10800003 	ldbu	r2,0(r2)
  80909c:	10803fcc 	andi	r2,r2,255
  8090a0:	e0fffe17 	ldw	r3,-8(fp)
  8090a4:	1885883a 	add	r2,r3,r2
  8090a8:	e0bffe15 	stw	r2,-8(fp)
  8090ac:	e0bffe17 	ldw	r2,-8(fp)
  8090b0:	10bfff84 	addi	r2,r2,-2
  8090b4:	e0bffe15 	stw	r2,-8(fp)
  8090b8:	e0bfff17 	ldw	r2,-4(fp)
  8090bc:	10800017 	ldw	r2,0(r2)
  8090c0:	00c01744 	movi	r3,93
  8090c4:	10c00515 	stw	r3,20(r2)
  8090c8:	e0bfff17 	ldw	r2,-4(fp)
  8090cc:	10800017 	ldw	r2,0(r2)
  8090d0:	e0ffff17 	ldw	r3,-4(fp)
  8090d4:	18c06e17 	ldw	r3,440(r3)
  8090d8:	10c00615 	stw	r3,24(r2)
  8090dc:	e0bfff17 	ldw	r2,-4(fp)
  8090e0:	10800017 	ldw	r2,0(r2)
  8090e4:	e0fffe17 	ldw	r3,-8(fp)
  8090e8:	10c00715 	stw	r3,28(r2)
  8090ec:	e0bfff17 	ldw	r2,-4(fp)
  8090f0:	10800017 	ldw	r2,0(r2)
  8090f4:	10800117 	ldw	r2,4(r2)
  8090f8:	01400044 	movi	r5,1
  8090fc:	e13fff17 	ldw	r4,-4(fp)
  809100:	103ee83a 	callr	r2
  809104:	e0bffd17 	ldw	r2,-12(fp)
  809108:	e0fffb17 	ldw	r3,-20(fp)
  80910c:	10c00015 	stw	r3,0(r2)
  809110:	e0bffd17 	ldw	r2,-12(fp)
  809114:	e0fffc17 	ldw	r3,-16(fp)
  809118:	10c00115 	stw	r3,4(r2)
  80911c:	e0bffe17 	ldw	r2,-8(fp)
  809120:	0080060e 	bge	zero,r2,80913c <skip_variable+0x194>
  809124:	e0bfff17 	ldw	r2,-4(fp)
  809128:	10800617 	ldw	r2,24(r2)
  80912c:	10800417 	ldw	r2,16(r2)
  809130:	e17ffe17 	ldw	r5,-8(fp)
  809134:	e13fff17 	ldw	r4,-4(fp)
  809138:	103ee83a 	callr	r2
  80913c:	00800044 	movi	r2,1
  809140:	e037883a 	mov	sp,fp
  809144:	dfc00117 	ldw	ra,4(sp)
  809148:	df000017 	ldw	fp,0(sp)
  80914c:	dec00204 	addi	sp,sp,8
  809150:	f800283a 	ret

00809154 <next_marker>:
  809154:	defff904 	addi	sp,sp,-28
  809158:	dfc00615 	stw	ra,24(sp)
  80915c:	df000515 	stw	fp,20(sp)
  809160:	df000504 	addi	fp,sp,20
  809164:	e13fff15 	stw	r4,-4(fp)
  809168:	e0bfff17 	ldw	r2,-4(fp)
  80916c:	10800617 	ldw	r2,24(r2)
  809170:	e0bffe15 	stw	r2,-8(fp)
  809174:	e0bffe17 	ldw	r2,-8(fp)
  809178:	10800017 	ldw	r2,0(r2)
  80917c:	e0bffc15 	stw	r2,-16(fp)
  809180:	e0bffe17 	ldw	r2,-8(fp)
  809184:	10800117 	ldw	r2,4(r2)
  809188:	e0bffd15 	stw	r2,-12(fp)
  80918c:	e0bffd17 	ldw	r2,-12(fp)
  809190:	10000d1e 	bne	r2,zero,8091c8 <next_marker+0x74>
  809194:	e0bffe17 	ldw	r2,-8(fp)
  809198:	10800317 	ldw	r2,12(r2)
  80919c:	e13fff17 	ldw	r4,-4(fp)
  8091a0:	103ee83a 	callr	r2
  8091a4:	1000021e 	bne	r2,zero,8091b0 <next_marker+0x5c>
  8091a8:	0005883a 	mov	r2,zero
  8091ac:	00008706 	br	8093cc <next_marker+0x278>
  8091b0:	e0bffe17 	ldw	r2,-8(fp)
  8091b4:	10800017 	ldw	r2,0(r2)
  8091b8:	e0bffc15 	stw	r2,-16(fp)
  8091bc:	e0bffe17 	ldw	r2,-8(fp)
  8091c0:	10800117 	ldw	r2,4(r2)
  8091c4:	e0bffd15 	stw	r2,-12(fp)
  8091c8:	e0bffd17 	ldw	r2,-12(fp)
  8091cc:	10bfffc4 	addi	r2,r2,-1
  8091d0:	e0bffd15 	stw	r2,-12(fp)
  8091d4:	e0bffc17 	ldw	r2,-16(fp)
  8091d8:	10c00044 	addi	r3,r2,1
  8091dc:	e0fffc15 	stw	r3,-16(fp)
  8091e0:	10800003 	ldbu	r2,0(r2)
  8091e4:	10803fcc 	andi	r2,r2,255
  8091e8:	e0bffb15 	stw	r2,-20(fp)
  8091ec:	00002306 	br	80927c <next_marker+0x128>
  8091f0:	e0bfff17 	ldw	r2,-4(fp)
  8091f4:	10807417 	ldw	r2,464(r2)
  8091f8:	10c00617 	ldw	r3,24(r2)
  8091fc:	18c00044 	addi	r3,r3,1
  809200:	10c00615 	stw	r3,24(r2)
  809204:	e0bffe17 	ldw	r2,-8(fp)
  809208:	e0fffc17 	ldw	r3,-16(fp)
  80920c:	10c00015 	stw	r3,0(r2)
  809210:	e0bffe17 	ldw	r2,-8(fp)
  809214:	e0fffd17 	ldw	r3,-12(fp)
  809218:	10c00115 	stw	r3,4(r2)
  80921c:	e0bffd17 	ldw	r2,-12(fp)
  809220:	10000d1e 	bne	r2,zero,809258 <next_marker+0x104>
  809224:	e0bffe17 	ldw	r2,-8(fp)
  809228:	10800317 	ldw	r2,12(r2)
  80922c:	e13fff17 	ldw	r4,-4(fp)
  809230:	103ee83a 	callr	r2
  809234:	1000021e 	bne	r2,zero,809240 <next_marker+0xec>
  809238:	0005883a 	mov	r2,zero
  80923c:	00006306 	br	8093cc <next_marker+0x278>
  809240:	e0bffe17 	ldw	r2,-8(fp)
  809244:	10800017 	ldw	r2,0(r2)
  809248:	e0bffc15 	stw	r2,-16(fp)
  80924c:	e0bffe17 	ldw	r2,-8(fp)
  809250:	10800117 	ldw	r2,4(r2)
  809254:	e0bffd15 	stw	r2,-12(fp)
  809258:	e0bffd17 	ldw	r2,-12(fp)
  80925c:	10bfffc4 	addi	r2,r2,-1
  809260:	e0bffd15 	stw	r2,-12(fp)
  809264:	e0bffc17 	ldw	r2,-16(fp)
  809268:	10c00044 	addi	r3,r2,1
  80926c:	e0fffc15 	stw	r3,-16(fp)
  809270:	10800003 	ldbu	r2,0(r2)
  809274:	10803fcc 	andi	r2,r2,255
  809278:	e0bffb15 	stw	r2,-20(fp)
  80927c:	e0bffb17 	ldw	r2,-20(fp)
  809280:	10803fd8 	cmpnei	r2,r2,255
  809284:	103fda1e 	bne	r2,zero,8091f0 <__alt_mem_epcs_flash_controller_0+0xff8001f0>
  809288:	e0bffd17 	ldw	r2,-12(fp)
  80928c:	10000d1e 	bne	r2,zero,8092c4 <next_marker+0x170>
  809290:	e0bffe17 	ldw	r2,-8(fp)
  809294:	10800317 	ldw	r2,12(r2)
  809298:	e13fff17 	ldw	r4,-4(fp)
  80929c:	103ee83a 	callr	r2
  8092a0:	1000021e 	bne	r2,zero,8092ac <next_marker+0x158>
  8092a4:	0005883a 	mov	r2,zero
  8092a8:	00004806 	br	8093cc <next_marker+0x278>
  8092ac:	e0bffe17 	ldw	r2,-8(fp)
  8092b0:	10800017 	ldw	r2,0(r2)
  8092b4:	e0bffc15 	stw	r2,-16(fp)
  8092b8:	e0bffe17 	ldw	r2,-8(fp)
  8092bc:	10800117 	ldw	r2,4(r2)
  8092c0:	e0bffd15 	stw	r2,-12(fp)
  8092c4:	e0bffd17 	ldw	r2,-12(fp)
  8092c8:	10bfffc4 	addi	r2,r2,-1
  8092cc:	e0bffd15 	stw	r2,-12(fp)
  8092d0:	e0bffc17 	ldw	r2,-16(fp)
  8092d4:	10c00044 	addi	r3,r2,1
  8092d8:	e0fffc15 	stw	r3,-16(fp)
  8092dc:	10800003 	ldbu	r2,0(r2)
  8092e0:	10803fcc 	andi	r2,r2,255
  8092e4:	e0bffb15 	stw	r2,-20(fp)
  8092e8:	e0bffb17 	ldw	r2,-20(fp)
  8092ec:	10803fe0 	cmpeqi	r2,r2,255
  8092f0:	103fe51e 	bne	r2,zero,809288 <__alt_mem_epcs_flash_controller_0+0xff800288>
  8092f4:	e0bffb17 	ldw	r2,-20(fp)
  8092f8:	10000e1e 	bne	r2,zero,809334 <next_marker+0x1e0>
  8092fc:	e0bfff17 	ldw	r2,-4(fp)
  809300:	10807417 	ldw	r2,464(r2)
  809304:	e0ffff17 	ldw	r3,-4(fp)
  809308:	18c07417 	ldw	r3,464(r3)
  80930c:	18c00617 	ldw	r3,24(r3)
  809310:	18c00084 	addi	r3,r3,2
  809314:	10c00615 	stw	r3,24(r2)
  809318:	e0bffe17 	ldw	r2,-8(fp)
  80931c:	e0fffc17 	ldw	r3,-16(fp)
  809320:	10c00015 	stw	r3,0(r2)
  809324:	e0bffe17 	ldw	r2,-8(fp)
  809328:	e0fffd17 	ldw	r3,-12(fp)
  80932c:	10c00115 	stw	r3,4(r2)
  809330:	003f9606 	br	80918c <__alt_mem_epcs_flash_controller_0+0xff80018c>
  809334:	0001883a 	nop
  809338:	e0bfff17 	ldw	r2,-4(fp)
  80933c:	10807417 	ldw	r2,464(r2)
  809340:	10800617 	ldw	r2,24(r2)
  809344:	10001726 	beq	r2,zero,8093a4 <next_marker+0x250>
  809348:	e0bfff17 	ldw	r2,-4(fp)
  80934c:	10800017 	ldw	r2,0(r2)
  809350:	00c01dc4 	movi	r3,119
  809354:	10c00515 	stw	r3,20(r2)
  809358:	e0bfff17 	ldw	r2,-4(fp)
  80935c:	10800017 	ldw	r2,0(r2)
  809360:	e0ffff17 	ldw	r3,-4(fp)
  809364:	18c07417 	ldw	r3,464(r3)
  809368:	18c00617 	ldw	r3,24(r3)
  80936c:	10c00615 	stw	r3,24(r2)
  809370:	e0bfff17 	ldw	r2,-4(fp)
  809374:	10800017 	ldw	r2,0(r2)
  809378:	e0fffb17 	ldw	r3,-20(fp)
  80937c:	10c00715 	stw	r3,28(r2)
  809380:	e0bfff17 	ldw	r2,-4(fp)
  809384:	10800017 	ldw	r2,0(r2)
  809388:	10800117 	ldw	r2,4(r2)
  80938c:	017fffc4 	movi	r5,-1
  809390:	e13fff17 	ldw	r4,-4(fp)
  809394:	103ee83a 	callr	r2
  809398:	e0bfff17 	ldw	r2,-4(fp)
  80939c:	10807417 	ldw	r2,464(r2)
  8093a0:	10000615 	stw	zero,24(r2)
  8093a4:	e0bfff17 	ldw	r2,-4(fp)
  8093a8:	e0fffb17 	ldw	r3,-20(fp)
  8093ac:	10c06e15 	stw	r3,440(r2)
  8093b0:	e0bffe17 	ldw	r2,-8(fp)
  8093b4:	e0fffc17 	ldw	r3,-16(fp)
  8093b8:	10c00015 	stw	r3,0(r2)
  8093bc:	e0bffe17 	ldw	r2,-8(fp)
  8093c0:	e0fffd17 	ldw	r3,-12(fp)
  8093c4:	10c00115 	stw	r3,4(r2)
  8093c8:	00800044 	movi	r2,1
  8093cc:	e037883a 	mov	sp,fp
  8093d0:	dfc00117 	ldw	ra,4(sp)
  8093d4:	df000017 	ldw	fp,0(sp)
  8093d8:	dec00204 	addi	sp,sp,8
  8093dc:	f800283a 	ret

008093e0 <first_marker>:
  8093e0:	defff804 	addi	sp,sp,-32
  8093e4:	dfc00715 	stw	ra,28(sp)
  8093e8:	df000615 	stw	fp,24(sp)
  8093ec:	df000604 	addi	fp,sp,24
  8093f0:	e13fff15 	stw	r4,-4(fp)
  8093f4:	e0bfff17 	ldw	r2,-4(fp)
  8093f8:	10800617 	ldw	r2,24(r2)
  8093fc:	e0bffc15 	stw	r2,-16(fp)
  809400:	e0bffc17 	ldw	r2,-16(fp)
  809404:	10800017 	ldw	r2,0(r2)
  809408:	e0bffa15 	stw	r2,-24(fp)
  80940c:	e0bffc17 	ldw	r2,-16(fp)
  809410:	10800117 	ldw	r2,4(r2)
  809414:	e0bffb15 	stw	r2,-20(fp)
  809418:	e0bffb17 	ldw	r2,-20(fp)
  80941c:	10000d1e 	bne	r2,zero,809454 <first_marker+0x74>
  809420:	e0bffc17 	ldw	r2,-16(fp)
  809424:	10800317 	ldw	r2,12(r2)
  809428:	e13fff17 	ldw	r4,-4(fp)
  80942c:	103ee83a 	callr	r2
  809430:	1000021e 	bne	r2,zero,80943c <first_marker+0x5c>
  809434:	0005883a 	mov	r2,zero
  809438:	00004806 	br	80955c <first_marker+0x17c>
  80943c:	e0bffc17 	ldw	r2,-16(fp)
  809440:	10800017 	ldw	r2,0(r2)
  809444:	e0bffa15 	stw	r2,-24(fp)
  809448:	e0bffc17 	ldw	r2,-16(fp)
  80944c:	10800117 	ldw	r2,4(r2)
  809450:	e0bffb15 	stw	r2,-20(fp)
  809454:	e0bffb17 	ldw	r2,-20(fp)
  809458:	10bfffc4 	addi	r2,r2,-1
  80945c:	e0bffb15 	stw	r2,-20(fp)
  809460:	e0bffa17 	ldw	r2,-24(fp)
  809464:	10c00044 	addi	r3,r2,1
  809468:	e0fffa15 	stw	r3,-24(fp)
  80946c:	10800003 	ldbu	r2,0(r2)
  809470:	10803fcc 	andi	r2,r2,255
  809474:	e0bffd15 	stw	r2,-12(fp)
  809478:	e0bffb17 	ldw	r2,-20(fp)
  80947c:	10000d1e 	bne	r2,zero,8094b4 <first_marker+0xd4>
  809480:	e0bffc17 	ldw	r2,-16(fp)
  809484:	10800317 	ldw	r2,12(r2)
  809488:	e13fff17 	ldw	r4,-4(fp)
  80948c:	103ee83a 	callr	r2
  809490:	1000021e 	bne	r2,zero,80949c <first_marker+0xbc>
  809494:	0005883a 	mov	r2,zero
  809498:	00003006 	br	80955c <first_marker+0x17c>
  80949c:	e0bffc17 	ldw	r2,-16(fp)
  8094a0:	10800017 	ldw	r2,0(r2)
  8094a4:	e0bffa15 	stw	r2,-24(fp)
  8094a8:	e0bffc17 	ldw	r2,-16(fp)
  8094ac:	10800117 	ldw	r2,4(r2)
  8094b0:	e0bffb15 	stw	r2,-20(fp)
  8094b4:	e0bffb17 	ldw	r2,-20(fp)
  8094b8:	10bfffc4 	addi	r2,r2,-1
  8094bc:	e0bffb15 	stw	r2,-20(fp)
  8094c0:	e0bffa17 	ldw	r2,-24(fp)
  8094c4:	10c00044 	addi	r3,r2,1
  8094c8:	e0fffa15 	stw	r3,-24(fp)
  8094cc:	10800003 	ldbu	r2,0(r2)
  8094d0:	10803fcc 	andi	r2,r2,255
  8094d4:	e0bffe15 	stw	r2,-8(fp)
  8094d8:	e0bffd17 	ldw	r2,-12(fp)
  8094dc:	10803fd8 	cmpnei	r2,r2,255
  8094e0:	1000031e 	bne	r2,zero,8094f0 <first_marker+0x110>
  8094e4:	e0bffe17 	ldw	r2,-8(fp)
  8094e8:	10803620 	cmpeqi	r2,r2,216
  8094ec:	1000111e 	bne	r2,zero,809534 <first_marker+0x154>
  8094f0:	e0bfff17 	ldw	r2,-4(fp)
  8094f4:	10800017 	ldw	r2,0(r2)
  8094f8:	00c00dc4 	movi	r3,55
  8094fc:	10c00515 	stw	r3,20(r2)
  809500:	e0bfff17 	ldw	r2,-4(fp)
  809504:	10800017 	ldw	r2,0(r2)
  809508:	e0fffd17 	ldw	r3,-12(fp)
  80950c:	10c00615 	stw	r3,24(r2)
  809510:	e0bfff17 	ldw	r2,-4(fp)
  809514:	10800017 	ldw	r2,0(r2)
  809518:	e0fffe17 	ldw	r3,-8(fp)
  80951c:	10c00715 	stw	r3,28(r2)
  809520:	e0bfff17 	ldw	r2,-4(fp)
  809524:	10800017 	ldw	r2,0(r2)
  809528:	10800017 	ldw	r2,0(r2)
  80952c:	e13fff17 	ldw	r4,-4(fp)
  809530:	103ee83a 	callr	r2
  809534:	e0bfff17 	ldw	r2,-4(fp)
  809538:	e0fffe17 	ldw	r3,-8(fp)
  80953c:	10c06e15 	stw	r3,440(r2)
  809540:	e0bffc17 	ldw	r2,-16(fp)
  809544:	e0fffa17 	ldw	r3,-24(fp)
  809548:	10c00015 	stw	r3,0(r2)
  80954c:	e0bffc17 	ldw	r2,-16(fp)
  809550:	e0fffb17 	ldw	r3,-20(fp)
  809554:	10c00115 	stw	r3,4(r2)
  809558:	00800044 	movi	r2,1
  80955c:	e037883a 	mov	sp,fp
  809560:	dfc00117 	ldw	ra,4(sp)
  809564:	df000017 	ldw	fp,0(sp)
  809568:	dec00204 	addi	sp,sp,8
  80956c:	f800283a 	ret

00809570 <read_markers>:
  809570:	defffd04 	addi	sp,sp,-12
  809574:	dfc00215 	stw	ra,8(sp)
  809578:	df000115 	stw	fp,4(sp)
  80957c:	df000104 	addi	fp,sp,4
  809580:	e13fff15 	stw	r4,-4(fp)
  809584:	e0bfff17 	ldw	r2,-4(fp)
  809588:	10806e17 	ldw	r2,440(r2)
  80958c:	10000e1e 	bne	r2,zero,8095c8 <read_markers+0x58>
  809590:	e0bfff17 	ldw	r2,-4(fp)
  809594:	10807417 	ldw	r2,464(r2)
  809598:	10800317 	ldw	r2,12(r2)
  80959c:	1000051e 	bne	r2,zero,8095b4 <read_markers+0x44>
  8095a0:	e13fff17 	ldw	r4,-4(fp)
  8095a4:	08093e00 	call	8093e0 <first_marker>
  8095a8:	1000071e 	bne	r2,zero,8095c8 <read_markers+0x58>
  8095ac:	0005883a 	mov	r2,zero
  8095b0:	0001d306 	br	809d00 <read_markers+0x790>
  8095b4:	e13fff17 	ldw	r4,-4(fp)
  8095b8:	08091540 	call	809154 <next_marker>
  8095bc:	1000021e 	bne	r2,zero,8095c8 <read_markers+0x58>
  8095c0:	0005883a 	mov	r2,zero
  8095c4:	0001ce06 	br	809d00 <read_markers+0x790>
  8095c8:	e0bfff17 	ldw	r2,-4(fp)
  8095cc:	10806e17 	ldw	r2,440(r2)
  8095d0:	10c03fe8 	cmpgeui	r3,r2,255
  8095d4:	18019d1e 	bne	r3,zero,809c4c <read_markers+0x6dc>
  8095d8:	100690ba 	slli	r3,r2,2
  8095dc:	00802074 	movhi	r2,129
  8095e0:	10a57c04 	addi	r2,r2,-27152
  8095e4:	1885883a 	add	r2,r3,r2
  8095e8:	10800017 	ldw	r2,0(r2)
  8095ec:	1000683a 	jmp	r2
  8095f0:	00809c4c 	andi	r2,zero,625
  8095f4:	00809bf8 	rdprs	r2,zero,623
  8095f8:	00809c4c 	andi	r2,zero,625
  8095fc:	00809c4c 	andi	r2,zero,625
  809600:	00809c4c 	andi	r2,zero,625
  809604:	00809c4c 	andi	r2,zero,625
  809608:	00809c4c 	andi	r2,zero,625
  80960c:	00809c4c 	andi	r2,zero,625
  809610:	00809c4c 	andi	r2,zero,625
  809614:	00809c4c 	andi	r2,zero,625
  809618:	00809c4c 	andi	r2,zero,625
  80961c:	00809c4c 	andi	r2,zero,625
  809620:	00809c4c 	andi	r2,zero,625
  809624:	00809c4c 	andi	r2,zero,625
  809628:	00809c4c 	andi	r2,zero,625
  80962c:	00809c4c 	andi	r2,zero,625
  809630:	00809c4c 	andi	r2,zero,625
  809634:	00809c4c 	andi	r2,zero,625
  809638:	00809c4c 	andi	r2,zero,625
  80963c:	00809c4c 	andi	r2,zero,625
  809640:	00809c4c 	andi	r2,zero,625
  809644:	00809c4c 	andi	r2,zero,625
  809648:	00809c4c 	andi	r2,zero,625
  80964c:	00809c4c 	andi	r2,zero,625
  809650:	00809c4c 	andi	r2,zero,625
  809654:	00809c4c 	andi	r2,zero,625
  809658:	00809c4c 	andi	r2,zero,625
  80965c:	00809c4c 	andi	r2,zero,625
  809660:	00809c4c 	andi	r2,zero,625
  809664:	00809c4c 	andi	r2,zero,625
  809668:	00809c4c 	andi	r2,zero,625
  80966c:	00809c4c 	andi	r2,zero,625
  809670:	00809c4c 	andi	r2,zero,625
  809674:	00809c4c 	andi	r2,zero,625
  809678:	00809c4c 	andi	r2,zero,625
  80967c:	00809c4c 	andi	r2,zero,625
  809680:	00809c4c 	andi	r2,zero,625
  809684:	00809c4c 	andi	r2,zero,625
  809688:	00809c4c 	andi	r2,zero,625
  80968c:	00809c4c 	andi	r2,zero,625
  809690:	00809c4c 	andi	r2,zero,625
  809694:	00809c4c 	andi	r2,zero,625
  809698:	00809c4c 	andi	r2,zero,625
  80969c:	00809c4c 	andi	r2,zero,625
  8096a0:	00809c4c 	andi	r2,zero,625
  8096a4:	00809c4c 	andi	r2,zero,625
  8096a8:	00809c4c 	andi	r2,zero,625
  8096ac:	00809c4c 	andi	r2,zero,625
  8096b0:	00809c4c 	andi	r2,zero,625
  8096b4:	00809c4c 	andi	r2,zero,625
  8096b8:	00809c4c 	andi	r2,zero,625
  8096bc:	00809c4c 	andi	r2,zero,625
  8096c0:	00809c4c 	andi	r2,zero,625
  8096c4:	00809c4c 	andi	r2,zero,625
  8096c8:	00809c4c 	andi	r2,zero,625
  8096cc:	00809c4c 	andi	r2,zero,625
  8096d0:	00809c4c 	andi	r2,zero,625
  8096d4:	00809c4c 	andi	r2,zero,625
  8096d8:	00809c4c 	andi	r2,zero,625
  8096dc:	00809c4c 	andi	r2,zero,625
  8096e0:	00809c4c 	andi	r2,zero,625
  8096e4:	00809c4c 	andi	r2,zero,625
  8096e8:	00809c4c 	andi	r2,zero,625
  8096ec:	00809c4c 	andi	r2,zero,625
  8096f0:	00809c4c 	andi	r2,zero,625
  8096f4:	00809c4c 	andi	r2,zero,625
  8096f8:	00809c4c 	andi	r2,zero,625
  8096fc:	00809c4c 	andi	r2,zero,625
  809700:	00809c4c 	andi	r2,zero,625
  809704:	00809c4c 	andi	r2,zero,625
  809708:	00809c4c 	andi	r2,zero,625
  80970c:	00809c4c 	andi	r2,zero,625
  809710:	00809c4c 	andi	r2,zero,625
  809714:	00809c4c 	andi	r2,zero,625
  809718:	00809c4c 	andi	r2,zero,625
  80971c:	00809c4c 	andi	r2,zero,625
  809720:	00809c4c 	andi	r2,zero,625
  809724:	00809c4c 	andi	r2,zero,625
  809728:	00809c4c 	andi	r2,zero,625
  80972c:	00809c4c 	andi	r2,zero,625
  809730:	00809c4c 	andi	r2,zero,625
  809734:	00809c4c 	andi	r2,zero,625
  809738:	00809c4c 	andi	r2,zero,625
  80973c:	00809c4c 	andi	r2,zero,625
  809740:	00809c4c 	andi	r2,zero,625
  809744:	00809c4c 	andi	r2,zero,625
  809748:	00809c4c 	andi	r2,zero,625
  80974c:	00809c4c 	andi	r2,zero,625
  809750:	00809c4c 	andi	r2,zero,625
  809754:	00809c4c 	andi	r2,zero,625
  809758:	00809c4c 	andi	r2,zero,625
  80975c:	00809c4c 	andi	r2,zero,625
  809760:	00809c4c 	andi	r2,zero,625
  809764:	00809c4c 	andi	r2,zero,625
  809768:	00809c4c 	andi	r2,zero,625
  80976c:	00809c4c 	andi	r2,zero,625
  809770:	00809c4c 	andi	r2,zero,625
  809774:	00809c4c 	andi	r2,zero,625
  809778:	00809c4c 	andi	r2,zero,625
  80977c:	00809c4c 	andi	r2,zero,625
  809780:	00809c4c 	andi	r2,zero,625
  809784:	00809c4c 	andi	r2,zero,625
  809788:	00809c4c 	andi	r2,zero,625
  80978c:	00809c4c 	andi	r2,zero,625
  809790:	00809c4c 	andi	r2,zero,625
  809794:	00809c4c 	andi	r2,zero,625
  809798:	00809c4c 	andi	r2,zero,625
  80979c:	00809c4c 	andi	r2,zero,625
  8097a0:	00809c4c 	andi	r2,zero,625
  8097a4:	00809c4c 	andi	r2,zero,625
  8097a8:	00809c4c 	andi	r2,zero,625
  8097ac:	00809c4c 	andi	r2,zero,625
  8097b0:	00809c4c 	andi	r2,zero,625
  8097b4:	00809c4c 	andi	r2,zero,625
  8097b8:	00809c4c 	andi	r2,zero,625
  8097bc:	00809c4c 	andi	r2,zero,625
  8097c0:	00809c4c 	andi	r2,zero,625
  8097c4:	00809c4c 	andi	r2,zero,625
  8097c8:	00809c4c 	andi	r2,zero,625
  8097cc:	00809c4c 	andi	r2,zero,625
  8097d0:	00809c4c 	andi	r2,zero,625
  8097d4:	00809c4c 	andi	r2,zero,625
  8097d8:	00809c4c 	andi	r2,zero,625
  8097dc:	00809c4c 	andi	r2,zero,625
  8097e0:	00809c4c 	andi	r2,zero,625
  8097e4:	00809c4c 	andi	r2,zero,625
  8097e8:	00809c4c 	andi	r2,zero,625
  8097ec:	00809c4c 	andi	r2,zero,625
  8097f0:	00809c4c 	andi	r2,zero,625
  8097f4:	00809c4c 	andi	r2,zero,625
  8097f8:	00809c4c 	andi	r2,zero,625
  8097fc:	00809c4c 	andi	r2,zero,625
  809800:	00809c4c 	andi	r2,zero,625
  809804:	00809c4c 	andi	r2,zero,625
  809808:	00809c4c 	andi	r2,zero,625
  80980c:	00809c4c 	andi	r2,zero,625
  809810:	00809c4c 	andi	r2,zero,625
  809814:	00809c4c 	andi	r2,zero,625
  809818:	00809c4c 	andi	r2,zero,625
  80981c:	00809c4c 	andi	r2,zero,625
  809820:	00809c4c 	andi	r2,zero,625
  809824:	00809c4c 	andi	r2,zero,625
  809828:	00809c4c 	andi	r2,zero,625
  80982c:	00809c4c 	andi	r2,zero,625
  809830:	00809c4c 	andi	r2,zero,625
  809834:	00809c4c 	andi	r2,zero,625
  809838:	00809c4c 	andi	r2,zero,625
  80983c:	00809c4c 	andi	r2,zero,625
  809840:	00809c4c 	andi	r2,zero,625
  809844:	00809c4c 	andi	r2,zero,625
  809848:	00809c4c 	andi	r2,zero,625
  80984c:	00809c4c 	andi	r2,zero,625
  809850:	00809c4c 	andi	r2,zero,625
  809854:	00809c4c 	andi	r2,zero,625
  809858:	00809c4c 	andi	r2,zero,625
  80985c:	00809c4c 	andi	r2,zero,625
  809860:	00809c4c 	andi	r2,zero,625
  809864:	00809c4c 	andi	r2,zero,625
  809868:	00809c4c 	andi	r2,zero,625
  80986c:	00809c4c 	andi	r2,zero,625
  809870:	00809c4c 	andi	r2,zero,625
  809874:	00809c4c 	andi	r2,zero,625
  809878:	00809c4c 	andi	r2,zero,625
  80987c:	00809c4c 	andi	r2,zero,625
  809880:	00809c4c 	andi	r2,zero,625
  809884:	00809c4c 	andi	r2,zero,625
  809888:	00809c4c 	andi	r2,zero,625
  80988c:	00809c4c 	andi	r2,zero,625
  809890:	00809c4c 	andi	r2,zero,625
  809894:	00809c4c 	andi	r2,zero,625
  809898:	00809c4c 	andi	r2,zero,625
  80989c:	00809c4c 	andi	r2,zero,625
  8098a0:	00809c4c 	andi	r2,zero,625
  8098a4:	00809c4c 	andi	r2,zero,625
  8098a8:	00809c4c 	andi	r2,zero,625
  8098ac:	00809c4c 	andi	r2,zero,625
  8098b0:	00809c4c 	andi	r2,zero,625
  8098b4:	00809c4c 	andi	r2,zero,625
  8098b8:	00809c4c 	andi	r2,zero,625
  8098bc:	00809c4c 	andi	r2,zero,625
  8098c0:	00809c4c 	andi	r2,zero,625
  8098c4:	00809c4c 	andi	r2,zero,625
  8098c8:	00809c4c 	andi	r2,zero,625
  8098cc:	00809c4c 	andi	r2,zero,625
  8098d0:	00809c4c 	andi	r2,zero,625
  8098d4:	00809c4c 	andi	r2,zero,625
  8098d8:	00809c4c 	andi	r2,zero,625
  8098dc:	00809c4c 	andi	r2,zero,625
  8098e0:	00809c4c 	andi	r2,zero,625
  8098e4:	00809c4c 	andi	r2,zero,625
  8098e8:	00809c4c 	andi	r2,zero,625
  8098ec:	00809c4c 	andi	r2,zero,625
  8098f0:	00809a00 	call	809a0 <OSCtxSw_SWITCH_PC+0x80960>
  8098f4:	00809a20 	cmpeqi	r2,zero,616
  8098f8:	00809a40 	call	809a4 <OSCtxSw_SWITCH_PC+0x80964>
  8098fc:	00809aa0 	cmpeqi	r2,zero,618
  809900:	00809b4c 	andi	r2,zero,621
  809904:	00809aa0 	cmpeqi	r2,zero,618
  809908:	00809aa0 	cmpeqi	r2,zero,618
  80990c:	00809aa0 	cmpeqi	r2,zero,618
  809910:	00809aa0 	cmpeqi	r2,zero,618
  809914:	00809a60 	cmpeqi	r2,zero,617
  809918:	00809a80 	call	809a8 <OSCtxSw_SWITCH_PC+0x80968>
  80991c:	00809aa0 	cmpeqi	r2,zero,618
  809920:	00809b38 	rdprs	r2,zero,620
  809924:	00809aa0 	cmpeqi	r2,zero,618
  809928:	00809aa0 	cmpeqi	r2,zero,618
  80992c:	00809aa0 	cmpeqi	r2,zero,618
  809930:	00809bf8 	rdprs	r2,zero,623
  809934:	00809bf8 	rdprs	r2,zero,623
  809938:	00809bf8 	rdprs	r2,zero,623
  80993c:	00809bf8 	rdprs	r2,zero,623
  809940:	00809bf8 	rdprs	r2,zero,623
  809944:	00809bf8 	rdprs	r2,zero,623
  809948:	00809bf8 	rdprs	r2,zero,623
  80994c:	00809bf8 	rdprs	r2,zero,623
  809950:	008099ec 	andhi	r2,zero,615
  809954:	00809b00 	call	809b0 <OSCtxSw_SWITCH_PC+0x80970>
  809958:	00809adc 	xori	r2,zero,619
  80995c:	00809b60 	cmpeqi	r2,zero,621
  809960:	00809c38 	rdprs	r2,zero,624
  809964:	00809b74 	movhi	r2,621
  809968:	00809c4c 	andi	r2,zero,625
  80996c:	00809c4c 	andi	r2,zero,625
  809970:	00809b9c 	xori	r2,zero,622
  809974:	00809b9c 	xori	r2,zero,622
  809978:	00809b9c 	xori	r2,zero,622
  80997c:	00809b9c 	xori	r2,zero,622
  809980:	00809b9c 	xori	r2,zero,622
  809984:	00809b9c 	xori	r2,zero,622
  809988:	00809b9c 	xori	r2,zero,622
  80998c:	00809b9c 	xori	r2,zero,622
  809990:	00809b9c 	xori	r2,zero,622
  809994:	00809b9c 	xori	r2,zero,622
  809998:	00809b9c 	xori	r2,zero,622
  80999c:	00809b9c 	xori	r2,zero,622
  8099a0:	00809b9c 	xori	r2,zero,622
  8099a4:	00809b9c 	xori	r2,zero,622
  8099a8:	00809b9c 	xori	r2,zero,622
  8099ac:	00809b9c 	xori	r2,zero,622
  8099b0:	00809c4c 	andi	r2,zero,625
  8099b4:	00809c4c 	andi	r2,zero,625
  8099b8:	00809c4c 	andi	r2,zero,625
  8099bc:	00809c4c 	andi	r2,zero,625
  8099c0:	00809c4c 	andi	r2,zero,625
  8099c4:	00809c4c 	andi	r2,zero,625
  8099c8:	00809c4c 	andi	r2,zero,625
  8099cc:	00809c4c 	andi	r2,zero,625
  8099d0:	00809b88 	cmpgei	r2,zero,622
  8099d4:	00809c4c 	andi	r2,zero,625
  8099d8:	00809c4c 	andi	r2,zero,625
  8099dc:	00809c4c 	andi	r2,zero,625
  8099e0:	00809c4c 	andi	r2,zero,625
  8099e4:	00809c4c 	andi	r2,zero,625
  8099e8:	00809bd8 	cmpnei	r2,zero,623
  8099ec:	e13fff17 	ldw	r4,-4(fp)
  8099f0:	0804e8c0 	call	804e8c <get_soi>
  8099f4:	1000a41e 	bne	r2,zero,809c88 <read_markers+0x718>
  8099f8:	0005883a 	mov	r2,zero
  8099fc:	0000c006 	br	809d00 <read_markers+0x790>
  809a00:	000f883a 	mov	r7,zero
  809a04:	000d883a 	mov	r6,zero
  809a08:	01400044 	movi	r5,1
  809a0c:	e13fff17 	ldw	r4,-4(fp)
  809a10:	0804ff80 	call	804ff8 <get_sof>
  809a14:	10009e1e 	bne	r2,zero,809c90 <read_markers+0x720>
  809a18:	0005883a 	mov	r2,zero
  809a1c:	0000b806 	br	809d00 <read_markers+0x790>
  809a20:	000f883a 	mov	r7,zero
  809a24:	000d883a 	mov	r6,zero
  809a28:	000b883a 	mov	r5,zero
  809a2c:	e13fff17 	ldw	r4,-4(fp)
  809a30:	0804ff80 	call	804ff8 <get_sof>
  809a34:	1000981e 	bne	r2,zero,809c98 <read_markers+0x728>
  809a38:	0005883a 	mov	r2,zero
  809a3c:	0000b006 	br	809d00 <read_markers+0x790>
  809a40:	000f883a 	mov	r7,zero
  809a44:	01800044 	movi	r6,1
  809a48:	000b883a 	mov	r5,zero
  809a4c:	e13fff17 	ldw	r4,-4(fp)
  809a50:	0804ff80 	call	804ff8 <get_sof>
  809a54:	1000921e 	bne	r2,zero,809ca0 <read_markers+0x730>
  809a58:	0005883a 	mov	r2,zero
  809a5c:	0000a806 	br	809d00 <read_markers+0x790>
  809a60:	01c00044 	movi	r7,1
  809a64:	000d883a 	mov	r6,zero
  809a68:	000b883a 	mov	r5,zero
  809a6c:	e13fff17 	ldw	r4,-4(fp)
  809a70:	0804ff80 	call	804ff8 <get_sof>
  809a74:	10008c1e 	bne	r2,zero,809ca8 <read_markers+0x738>
  809a78:	0005883a 	mov	r2,zero
  809a7c:	0000a006 	br	809d00 <read_markers+0x790>
  809a80:	01c00044 	movi	r7,1
  809a84:	01800044 	movi	r6,1
  809a88:	000b883a 	mov	r5,zero
  809a8c:	e13fff17 	ldw	r4,-4(fp)
  809a90:	0804ff80 	call	804ff8 <get_sof>
  809a94:	1000861e 	bne	r2,zero,809cb0 <read_markers+0x740>
  809a98:	0005883a 	mov	r2,zero
  809a9c:	00009806 	br	809d00 <read_markers+0x790>
  809aa0:	e0bfff17 	ldw	r2,-4(fp)
  809aa4:	10800017 	ldw	r2,0(r2)
  809aa8:	00c00fc4 	movi	r3,63
  809aac:	10c00515 	stw	r3,20(r2)
  809ab0:	e0bfff17 	ldw	r2,-4(fp)
  809ab4:	10800017 	ldw	r2,0(r2)
  809ab8:	e0ffff17 	ldw	r3,-4(fp)
  809abc:	18c06e17 	ldw	r3,440(r3)
  809ac0:	10c00615 	stw	r3,24(r2)
  809ac4:	e0bfff17 	ldw	r2,-4(fp)
  809ac8:	10800017 	ldw	r2,0(r2)
  809acc:	10800017 	ldw	r2,0(r2)
  809ad0:	e13fff17 	ldw	r4,-4(fp)
  809ad4:	103ee83a 	callr	r2
  809ad8:	00008606 	br	809cf4 <read_markers+0x784>
  809adc:	e13fff17 	ldw	r4,-4(fp)
  809ae0:	08058500 	call	805850 <get_sos>
  809ae4:	1000021e 	bne	r2,zero,809af0 <read_markers+0x580>
  809ae8:	0005883a 	mov	r2,zero
  809aec:	00008406 	br	809d00 <read_markers+0x790>
  809af0:	e0bfff17 	ldw	r2,-4(fp)
  809af4:	10006e15 	stw	zero,440(r2)
  809af8:	00800044 	movi	r2,1
  809afc:	00008006 	br	809d00 <read_markers+0x790>
  809b00:	e0bfff17 	ldw	r2,-4(fp)
  809b04:	10800017 	ldw	r2,0(r2)
  809b08:	00c015c4 	movi	r3,87
  809b0c:	10c00515 	stw	r3,20(r2)
  809b10:	e0bfff17 	ldw	r2,-4(fp)
  809b14:	10800017 	ldw	r2,0(r2)
  809b18:	10800117 	ldw	r2,4(r2)
  809b1c:	01400044 	movi	r5,1
  809b20:	e13fff17 	ldw	r4,-4(fp)
  809b24:	103ee83a 	callr	r2
  809b28:	e0bfff17 	ldw	r2,-4(fp)
  809b2c:	10006e15 	stw	zero,440(r2)
  809b30:	00800084 	movi	r2,2
  809b34:	00007206 	br	809d00 <read_markers+0x790>
  809b38:	e13fff17 	ldw	r4,-4(fp)
  809b3c:	0805fc40 	call	805fc4 <get_dac>
  809b40:	10005d1e 	bne	r2,zero,809cb8 <read_markers+0x748>
  809b44:	0005883a 	mov	r2,zero
  809b48:	00006d06 	br	809d00 <read_markers+0x790>
  809b4c:	e13fff17 	ldw	r4,-4(fp)
  809b50:	08063700 	call	806370 <get_dht>
  809b54:	10005a1e 	bne	r2,zero,809cc0 <read_markers+0x750>
  809b58:	0005883a 	mov	r2,zero
  809b5c:	00006806 	br	809d00 <read_markers+0x790>
  809b60:	e13fff17 	ldw	r4,-4(fp)
  809b64:	08069d40 	call	8069d4 <get_dqt>
  809b68:	1000571e 	bne	r2,zero,809cc8 <read_markers+0x758>
  809b6c:	0005883a 	mov	r2,zero
  809b70:	00006306 	br	809d00 <read_markers+0x790>
  809b74:	e13fff17 	ldw	r4,-4(fp)
  809b78:	08072280 	call	807228 <get_dri>
  809b7c:	1000541e 	bne	r2,zero,809cd0 <read_markers+0x760>
  809b80:	0005883a 	mov	r2,zero
  809b84:	00005e06 	br	809d00 <read_markers+0x790>
  809b88:	e13fff17 	ldw	r4,-4(fp)
  809b8c:	080749c0 	call	80749c <get_lse>
  809b90:	1000511e 	bne	r2,zero,809cd8 <read_markers+0x768>
  809b94:	0005883a 	mov	r2,zero
  809b98:	00005906 	br	809d00 <read_markers+0x790>
  809b9c:	e0bfff17 	ldw	r2,-4(fp)
  809ba0:	10c07417 	ldw	r3,464(r2)
  809ba4:	e0bfff17 	ldw	r2,-4(fp)
  809ba8:	10806e17 	ldw	r2,440(r2)
  809bac:	10bfc804 	addi	r2,r2,-224
  809bb0:	10800204 	addi	r2,r2,8
  809bb4:	1085883a 	add	r2,r2,r2
  809bb8:	1085883a 	add	r2,r2,r2
  809bbc:	1885883a 	add	r2,r3,r2
  809bc0:	10800017 	ldw	r2,0(r2)
  809bc4:	e13fff17 	ldw	r4,-4(fp)
  809bc8:	103ee83a 	callr	r2
  809bcc:	1000441e 	bne	r2,zero,809ce0 <read_markers+0x770>
  809bd0:	0005883a 	mov	r2,zero
  809bd4:	00004a06 	br	809d00 <read_markers+0x790>
  809bd8:	e0bfff17 	ldw	r2,-4(fp)
  809bdc:	10807417 	ldw	r2,464(r2)
  809be0:	10800717 	ldw	r2,28(r2)
  809be4:	e13fff17 	ldw	r4,-4(fp)
  809be8:	103ee83a 	callr	r2
  809bec:	10003e1e 	bne	r2,zero,809ce8 <read_markers+0x778>
  809bf0:	0005883a 	mov	r2,zero
  809bf4:	00004206 	br	809d00 <read_markers+0x790>
  809bf8:	e0bfff17 	ldw	r2,-4(fp)
  809bfc:	10800017 	ldw	r2,0(r2)
  809c00:	00c01784 	movi	r3,94
  809c04:	10c00515 	stw	r3,20(r2)
  809c08:	e0bfff17 	ldw	r2,-4(fp)
  809c0c:	10800017 	ldw	r2,0(r2)
  809c10:	e0ffff17 	ldw	r3,-4(fp)
  809c14:	18c06e17 	ldw	r3,440(r3)
  809c18:	10c00615 	stw	r3,24(r2)
  809c1c:	e0bfff17 	ldw	r2,-4(fp)
  809c20:	10800017 	ldw	r2,0(r2)
  809c24:	10800117 	ldw	r2,4(r2)
  809c28:	01400044 	movi	r5,1
  809c2c:	e13fff17 	ldw	r4,-4(fp)
  809c30:	103ee83a 	callr	r2
  809c34:	00002f06 	br	809cf4 <read_markers+0x784>
  809c38:	e13fff17 	ldw	r4,-4(fp)
  809c3c:	0808fa80 	call	808fa8 <skip_variable>
  809c40:	10002b1e 	bne	r2,zero,809cf0 <read_markers+0x780>
  809c44:	0005883a 	mov	r2,zero
  809c48:	00002d06 	br	809d00 <read_markers+0x790>
  809c4c:	e0bfff17 	ldw	r2,-4(fp)
  809c50:	10800017 	ldw	r2,0(r2)
  809c54:	00c01184 	movi	r3,70
  809c58:	10c00515 	stw	r3,20(r2)
  809c5c:	e0bfff17 	ldw	r2,-4(fp)
  809c60:	10800017 	ldw	r2,0(r2)
  809c64:	e0ffff17 	ldw	r3,-4(fp)
  809c68:	18c06e17 	ldw	r3,440(r3)
  809c6c:	10c00615 	stw	r3,24(r2)
  809c70:	e0bfff17 	ldw	r2,-4(fp)
  809c74:	10800017 	ldw	r2,0(r2)
  809c78:	10800017 	ldw	r2,0(r2)
  809c7c:	e13fff17 	ldw	r4,-4(fp)
  809c80:	103ee83a 	callr	r2
  809c84:	00001b06 	br	809cf4 <read_markers+0x784>
  809c88:	0001883a 	nop
  809c8c:	00001906 	br	809cf4 <read_markers+0x784>
  809c90:	0001883a 	nop
  809c94:	00001706 	br	809cf4 <read_markers+0x784>
  809c98:	0001883a 	nop
  809c9c:	00001506 	br	809cf4 <read_markers+0x784>
  809ca0:	0001883a 	nop
  809ca4:	00001306 	br	809cf4 <read_markers+0x784>
  809ca8:	0001883a 	nop
  809cac:	00001106 	br	809cf4 <read_markers+0x784>
  809cb0:	0001883a 	nop
  809cb4:	00000f06 	br	809cf4 <read_markers+0x784>
  809cb8:	0001883a 	nop
  809cbc:	00000d06 	br	809cf4 <read_markers+0x784>
  809cc0:	0001883a 	nop
  809cc4:	00000b06 	br	809cf4 <read_markers+0x784>
  809cc8:	0001883a 	nop
  809ccc:	00000906 	br	809cf4 <read_markers+0x784>
  809cd0:	0001883a 	nop
  809cd4:	00000706 	br	809cf4 <read_markers+0x784>
  809cd8:	0001883a 	nop
  809cdc:	00000506 	br	809cf4 <read_markers+0x784>
  809ce0:	0001883a 	nop
  809ce4:	00000306 	br	809cf4 <read_markers+0x784>
  809ce8:	0001883a 	nop
  809cec:	00000106 	br	809cf4 <read_markers+0x784>
  809cf0:	0001883a 	nop
  809cf4:	e0bfff17 	ldw	r2,-4(fp)
  809cf8:	10006e15 	stw	zero,440(r2)
  809cfc:	003e2106 	br	809584 <__alt_mem_epcs_flash_controller_0+0xff800584>
  809d00:	e037883a 	mov	sp,fp
  809d04:	dfc00117 	ldw	ra,4(sp)
  809d08:	df000017 	ldw	fp,0(sp)
  809d0c:	dec00204 	addi	sp,sp,8
  809d10:	f800283a 	ret

00809d14 <read_restart_marker>:
  809d14:	defffd04 	addi	sp,sp,-12
  809d18:	dfc00215 	stw	ra,8(sp)
  809d1c:	df000115 	stw	fp,4(sp)
  809d20:	df000104 	addi	fp,sp,4
  809d24:	e13fff15 	stw	r4,-4(fp)
  809d28:	e0bfff17 	ldw	r2,-4(fp)
  809d2c:	10806e17 	ldw	r2,440(r2)
  809d30:	1000051e 	bne	r2,zero,809d48 <read_restart_marker+0x34>
  809d34:	e13fff17 	ldw	r4,-4(fp)
  809d38:	08091540 	call	809154 <next_marker>
  809d3c:	1000021e 	bne	r2,zero,809d48 <read_restart_marker+0x34>
  809d40:	0005883a 	mov	r2,zero
  809d44:	00002f06 	br	809e04 <read_restart_marker+0xf0>
  809d48:	e0bfff17 	ldw	r2,-4(fp)
  809d4c:	10c06e17 	ldw	r3,440(r2)
  809d50:	e0bfff17 	ldw	r2,-4(fp)
  809d54:	10807417 	ldw	r2,464(r2)
  809d58:	10800517 	ldw	r2,20(r2)
  809d5c:	10803404 	addi	r2,r2,208
  809d60:	1880131e 	bne	r3,r2,809db0 <read_restart_marker+0x9c>
  809d64:	e0bfff17 	ldw	r2,-4(fp)
  809d68:	10800017 	ldw	r2,0(r2)
  809d6c:	00c01904 	movi	r3,100
  809d70:	10c00515 	stw	r3,20(r2)
  809d74:	e0bfff17 	ldw	r2,-4(fp)
  809d78:	10800017 	ldw	r2,0(r2)
  809d7c:	e0ffff17 	ldw	r3,-4(fp)
  809d80:	18c07417 	ldw	r3,464(r3)
  809d84:	18c00517 	ldw	r3,20(r3)
  809d88:	10c00615 	stw	r3,24(r2)
  809d8c:	e0bfff17 	ldw	r2,-4(fp)
  809d90:	10800017 	ldw	r2,0(r2)
  809d94:	10800117 	ldw	r2,4(r2)
  809d98:	014000c4 	movi	r5,3
  809d9c:	e13fff17 	ldw	r4,-4(fp)
  809da0:	103ee83a 	callr	r2
  809da4:	e0bfff17 	ldw	r2,-4(fp)
  809da8:	10006e15 	stw	zero,440(r2)
  809dac:	00000c06 	br	809de0 <read_restart_marker+0xcc>
  809db0:	e0bfff17 	ldw	r2,-4(fp)
  809db4:	10800617 	ldw	r2,24(r2)
  809db8:	10800517 	ldw	r2,20(r2)
  809dbc:	e0ffff17 	ldw	r3,-4(fp)
  809dc0:	18c07417 	ldw	r3,464(r3)
  809dc4:	18c00517 	ldw	r3,20(r3)
  809dc8:	180b883a 	mov	r5,r3
  809dcc:	e13fff17 	ldw	r4,-4(fp)
  809dd0:	103ee83a 	callr	r2
  809dd4:	1000021e 	bne	r2,zero,809de0 <read_restart_marker+0xcc>
  809dd8:	0005883a 	mov	r2,zero
  809ddc:	00000906 	br	809e04 <read_restart_marker+0xf0>
  809de0:	e0bfff17 	ldw	r2,-4(fp)
  809de4:	10807417 	ldw	r2,464(r2)
  809de8:	e0ffff17 	ldw	r3,-4(fp)
  809dec:	18c07417 	ldw	r3,464(r3)
  809df0:	18c00517 	ldw	r3,20(r3)
  809df4:	18c00044 	addi	r3,r3,1
  809df8:	18c001cc 	andi	r3,r3,7
  809dfc:	10c00515 	stw	r3,20(r2)
  809e00:	00800044 	movi	r2,1
  809e04:	e037883a 	mov	sp,fp
  809e08:	dfc00117 	ldw	ra,4(sp)
  809e0c:	df000017 	ldw	fp,0(sp)
  809e10:	dec00204 	addi	sp,sp,8
  809e14:	f800283a 	ret

00809e18 <jpeg_resync_to_restart>:
  809e18:	defffa04 	addi	sp,sp,-24
  809e1c:	dfc00515 	stw	ra,20(sp)
  809e20:	df000415 	stw	fp,16(sp)
  809e24:	df000404 	addi	fp,sp,16
  809e28:	e13ffe15 	stw	r4,-8(fp)
  809e2c:	e17fff15 	stw	r5,-4(fp)
  809e30:	e0bffe17 	ldw	r2,-8(fp)
  809e34:	10806e17 	ldw	r2,440(r2)
  809e38:	e0bffc15 	stw	r2,-16(fp)
  809e3c:	00800044 	movi	r2,1
  809e40:	e0bffd15 	stw	r2,-12(fp)
  809e44:	e0bffe17 	ldw	r2,-8(fp)
  809e48:	10800017 	ldw	r2,0(r2)
  809e4c:	00c01f04 	movi	r3,124
  809e50:	10c00515 	stw	r3,20(r2)
  809e54:	e0bffe17 	ldw	r2,-8(fp)
  809e58:	10800017 	ldw	r2,0(r2)
  809e5c:	e0fffc17 	ldw	r3,-16(fp)
  809e60:	10c00615 	stw	r3,24(r2)
  809e64:	e0bffe17 	ldw	r2,-8(fp)
  809e68:	10800017 	ldw	r2,0(r2)
  809e6c:	e0ffff17 	ldw	r3,-4(fp)
  809e70:	10c00715 	stw	r3,28(r2)
  809e74:	e0bffe17 	ldw	r2,-8(fp)
  809e78:	10800017 	ldw	r2,0(r2)
  809e7c:	10800117 	ldw	r2,4(r2)
  809e80:	017fffc4 	movi	r5,-1
  809e84:	e13ffe17 	ldw	r4,-8(fp)
  809e88:	103ee83a 	callr	r2
  809e8c:	e0bffc17 	ldw	r2,-16(fp)
  809e90:	10803008 	cmpgei	r2,r2,192
  809e94:	1000031e 	bne	r2,zero,809ea4 <jpeg_resync_to_restart+0x8c>
  809e98:	00800084 	movi	r2,2
  809e9c:	e0bffd15 	stw	r2,-12(fp)
  809ea0:	00002906 	br	809f48 <jpeg_resync_to_restart+0x130>
  809ea4:	e0bffc17 	ldw	r2,-16(fp)
  809ea8:	10803410 	cmplti	r2,r2,208
  809eac:	1000031e 	bne	r2,zero,809ebc <jpeg_resync_to_restart+0xa4>
  809eb0:	e0bffc17 	ldw	r2,-16(fp)
  809eb4:	10803610 	cmplti	r2,r2,216
  809eb8:	1000031e 	bne	r2,zero,809ec8 <jpeg_resync_to_restart+0xb0>
  809ebc:	008000c4 	movi	r2,3
  809ec0:	e0bffd15 	stw	r2,-12(fp)
  809ec4:	00002006 	br	809f48 <jpeg_resync_to_restart+0x130>
  809ec8:	e0bfff17 	ldw	r2,-4(fp)
  809ecc:	10800044 	addi	r2,r2,1
  809ed0:	108001cc 	andi	r2,r2,7
  809ed4:	10c03404 	addi	r3,r2,208
  809ed8:	e0bffc17 	ldw	r2,-16(fp)
  809edc:	18800626 	beq	r3,r2,809ef8 <jpeg_resync_to_restart+0xe0>
  809ee0:	e0bfff17 	ldw	r2,-4(fp)
  809ee4:	10800084 	addi	r2,r2,2
  809ee8:	108001cc 	andi	r2,r2,7
  809eec:	10c03404 	addi	r3,r2,208
  809ef0:	e0bffc17 	ldw	r2,-16(fp)
  809ef4:	1880031e 	bne	r3,r2,809f04 <jpeg_resync_to_restart+0xec>
  809ef8:	008000c4 	movi	r2,3
  809efc:	e0bffd15 	stw	r2,-12(fp)
  809f00:	00001106 	br	809f48 <jpeg_resync_to_restart+0x130>
  809f04:	e0bfff17 	ldw	r2,-4(fp)
  809f08:	10bfffc4 	addi	r2,r2,-1
  809f0c:	108001cc 	andi	r2,r2,7
  809f10:	10c03404 	addi	r3,r2,208
  809f14:	e0bffc17 	ldw	r2,-16(fp)
  809f18:	18800626 	beq	r3,r2,809f34 <jpeg_resync_to_restart+0x11c>
  809f1c:	e0bfff17 	ldw	r2,-4(fp)
  809f20:	10bfff84 	addi	r2,r2,-2
  809f24:	108001cc 	andi	r2,r2,7
  809f28:	10c03404 	addi	r3,r2,208
  809f2c:	e0bffc17 	ldw	r2,-16(fp)
  809f30:	1880031e 	bne	r3,r2,809f40 <jpeg_resync_to_restart+0x128>
  809f34:	00800084 	movi	r2,2
  809f38:	e0bffd15 	stw	r2,-12(fp)
  809f3c:	00000206 	br	809f48 <jpeg_resync_to_restart+0x130>
  809f40:	00800044 	movi	r2,1
  809f44:	e0bffd15 	stw	r2,-12(fp)
  809f48:	e0bffe17 	ldw	r2,-8(fp)
  809f4c:	10800017 	ldw	r2,0(r2)
  809f50:	00c018c4 	movi	r3,99
  809f54:	10c00515 	stw	r3,20(r2)
  809f58:	e0bffe17 	ldw	r2,-8(fp)
  809f5c:	10800017 	ldw	r2,0(r2)
  809f60:	e0fffc17 	ldw	r3,-16(fp)
  809f64:	10c00615 	stw	r3,24(r2)
  809f68:	e0bffe17 	ldw	r2,-8(fp)
  809f6c:	10800017 	ldw	r2,0(r2)
  809f70:	e0fffd17 	ldw	r3,-12(fp)
  809f74:	10c00715 	stw	r3,28(r2)
  809f78:	e0bffe17 	ldw	r2,-8(fp)
  809f7c:	10800017 	ldw	r2,0(r2)
  809f80:	10800117 	ldw	r2,4(r2)
  809f84:	01400104 	movi	r5,4
  809f88:	e13ffe17 	ldw	r4,-8(fp)
  809f8c:	103ee83a 	callr	r2
  809f90:	e0bffd17 	ldw	r2,-12(fp)
  809f94:	10c000a0 	cmpeqi	r3,r2,2
  809f98:	1800081e 	bne	r3,zero,809fbc <jpeg_resync_to_restart+0x1a4>
  809f9c:	10c000e0 	cmpeqi	r3,r2,3
  809fa0:	18000f1e 	bne	r3,zero,809fe0 <jpeg_resync_to_restart+0x1c8>
  809fa4:	10800060 	cmpeqi	r2,r2,1
  809fa8:	10000f26 	beq	r2,zero,809fe8 <jpeg_resync_to_restart+0x1d0>
  809fac:	e0bffe17 	ldw	r2,-8(fp)
  809fb0:	10006e15 	stw	zero,440(r2)
  809fb4:	00800044 	movi	r2,1
  809fb8:	00000c06 	br	809fec <jpeg_resync_to_restart+0x1d4>
  809fbc:	e13ffe17 	ldw	r4,-8(fp)
  809fc0:	08091540 	call	809154 <next_marker>
  809fc4:	1000021e 	bne	r2,zero,809fd0 <jpeg_resync_to_restart+0x1b8>
  809fc8:	0005883a 	mov	r2,zero
  809fcc:	00000706 	br	809fec <jpeg_resync_to_restart+0x1d4>
  809fd0:	e0bffe17 	ldw	r2,-8(fp)
  809fd4:	10806e17 	ldw	r2,440(r2)
  809fd8:	e0bffc15 	stw	r2,-16(fp)
  809fdc:	00000206 	br	809fe8 <jpeg_resync_to_restart+0x1d0>
  809fe0:	00800044 	movi	r2,1
  809fe4:	00000106 	br	809fec <jpeg_resync_to_restart+0x1d4>
  809fe8:	003fa806 	br	809e8c <__alt_mem_epcs_flash_controller_0+0xff800e8c>
  809fec:	e037883a 	mov	sp,fp
  809ff0:	dfc00117 	ldw	ra,4(sp)
  809ff4:	df000017 	ldw	fp,0(sp)
  809ff8:	dec00204 	addi	sp,sp,8
  809ffc:	f800283a 	ret

0080a000 <reset_marker_reader>:
  80a000:	defffd04 	addi	sp,sp,-12
  80a004:	df000215 	stw	fp,8(sp)
  80a008:	df000204 	addi	fp,sp,8
  80a00c:	e13fff15 	stw	r4,-4(fp)
  80a010:	e0bfff17 	ldw	r2,-4(fp)
  80a014:	10807417 	ldw	r2,464(r2)
  80a018:	e0bffe15 	stw	r2,-8(fp)
  80a01c:	e0bfff17 	ldw	r2,-4(fp)
  80a020:	10003615 	stw	zero,216(r2)
  80a024:	e0bfff17 	ldw	r2,-4(fp)
  80a028:	10002415 	stw	zero,144(r2)
  80a02c:	e0bfff17 	ldw	r2,-4(fp)
  80a030:	10006e15 	stw	zero,440(r2)
  80a034:	e0bffe17 	ldw	r2,-8(fp)
  80a038:	10000315 	stw	zero,12(r2)
  80a03c:	e0bffe17 	ldw	r2,-8(fp)
  80a040:	10000415 	stw	zero,16(r2)
  80a044:	e0bffe17 	ldw	r2,-8(fp)
  80a048:	10000615 	stw	zero,24(r2)
  80a04c:	e0bffe17 	ldw	r2,-8(fp)
  80a050:	10002915 	stw	zero,164(r2)
  80a054:	0001883a 	nop
  80a058:	e037883a 	mov	sp,fp
  80a05c:	df000017 	ldw	fp,0(sp)
  80a060:	dec00104 	addi	sp,sp,4
  80a064:	f800283a 	ret

0080a068 <jinit_marker_reader>:
  80a068:	defffb04 	addi	sp,sp,-20
  80a06c:	dfc00415 	stw	ra,16(sp)
  80a070:	df000315 	stw	fp,12(sp)
  80a074:	df000304 	addi	fp,sp,12
  80a078:	e13fff15 	stw	r4,-4(fp)
  80a07c:	e0bfff17 	ldw	r2,-4(fp)
  80a080:	10800117 	ldw	r2,4(r2)
  80a084:	10800017 	ldw	r2,0(r2)
  80a088:	01802b04 	movi	r6,172
  80a08c:	000b883a 	mov	r5,zero
  80a090:	e13fff17 	ldw	r4,-4(fp)
  80a094:	103ee83a 	callr	r2
  80a098:	e0bffe15 	stw	r2,-8(fp)
  80a09c:	e0fffe17 	ldw	r3,-8(fp)
  80a0a0:	e0bfff17 	ldw	r2,-4(fp)
  80a0a4:	10c07415 	stw	r3,464(r2)
  80a0a8:	e0fffe17 	ldw	r3,-8(fp)
  80a0ac:	00802074 	movhi	r2,129
  80a0b0:	10a80004 	addi	r2,r2,-24576
  80a0b4:	18800015 	stw	r2,0(r3)
  80a0b8:	e0fffe17 	ldw	r3,-8(fp)
  80a0bc:	00802074 	movhi	r2,129
  80a0c0:	10a55c04 	addi	r2,r2,-27280
  80a0c4:	18800115 	stw	r2,4(r3)
  80a0c8:	e0fffe17 	ldw	r3,-8(fp)
  80a0cc:	00802074 	movhi	r2,129
  80a0d0:	10a74504 	addi	r2,r2,-25324
  80a0d4:	18800215 	stw	r2,8(r3)
  80a0d8:	e0fffe17 	ldw	r3,-8(fp)
  80a0dc:	00802074 	movhi	r2,129
  80a0e0:	10a3ea04 	addi	r2,r2,-28760
  80a0e4:	18800715 	stw	r2,28(r3)
  80a0e8:	e0bffe17 	ldw	r2,-8(fp)
  80a0ec:	10001815 	stw	zero,96(r2)
  80a0f0:	e03ffd15 	stw	zero,-12(fp)
  80a0f4:	00001306 	br	80a144 <jinit_marker_reader+0xdc>
  80a0f8:	e0fffe17 	ldw	r3,-8(fp)
  80a0fc:	e0bffd17 	ldw	r2,-12(fp)
  80a100:	10800204 	addi	r2,r2,8
  80a104:	1085883a 	add	r2,r2,r2
  80a108:	1085883a 	add	r2,r2,r2
  80a10c:	1887883a 	add	r3,r3,r2
  80a110:	00802074 	movhi	r2,129
  80a114:	10a3ea04 	addi	r2,r2,-28760
  80a118:	18800015 	stw	r2,0(r3)
  80a11c:	e0fffe17 	ldw	r3,-8(fp)
  80a120:	e0bffd17 	ldw	r2,-12(fp)
  80a124:	10800644 	addi	r2,r2,25
  80a128:	1085883a 	add	r2,r2,r2
  80a12c:	1085883a 	add	r2,r2,r2
  80a130:	1885883a 	add	r2,r3,r2
  80a134:	10000015 	stw	zero,0(r2)
  80a138:	e0bffd17 	ldw	r2,-12(fp)
  80a13c:	10800044 	addi	r2,r2,1
  80a140:	e0bffd15 	stw	r2,-12(fp)
  80a144:	e0bffd17 	ldw	r2,-12(fp)
  80a148:	10800410 	cmplti	r2,r2,16
  80a14c:	103fea1e 	bne	r2,zero,80a0f8 <__alt_mem_epcs_flash_controller_0+0xff8010f8>
  80a150:	e0fffe17 	ldw	r3,-8(fp)
  80a154:	00802074 	movhi	r2,129
  80a158:	10a21204 	addi	r2,r2,-30648
  80a15c:	18800815 	stw	r2,32(r3)
  80a160:	e0fffe17 	ldw	r3,-8(fp)
  80a164:	00802074 	movhi	r2,129
  80a168:	10a21204 	addi	r2,r2,-30648
  80a16c:	18801615 	stw	r2,88(r3)
  80a170:	e13fff17 	ldw	r4,-4(fp)
  80a174:	080a0000 	call	80a000 <reset_marker_reader>
  80a178:	0001883a 	nop
  80a17c:	e037883a 	mov	sp,fp
  80a180:	dfc00117 	ldw	ra,4(sp)
  80a184:	df000017 	ldw	fp,0(sp)
  80a188:	dec00204 	addi	sp,sp,8
  80a18c:	f800283a 	ret

0080a190 <jpeg_save_markers>:
  80a190:	defff804 	addi	sp,sp,-32
  80a194:	dfc00715 	stw	ra,28(sp)
  80a198:	df000615 	stw	fp,24(sp)
  80a19c:	df000604 	addi	fp,sp,24
  80a1a0:	e13ffd15 	stw	r4,-12(fp)
  80a1a4:	e17ffe15 	stw	r5,-8(fp)
  80a1a8:	e1bfff15 	stw	r6,-4(fp)
  80a1ac:	e0bffd17 	ldw	r2,-12(fp)
  80a1b0:	10807417 	ldw	r2,464(r2)
  80a1b4:	e0bffb15 	stw	r2,-20(fp)
  80a1b8:	e0bffd17 	ldw	r2,-12(fp)
  80a1bc:	10800117 	ldw	r2,4(r2)
  80a1c0:	10800c17 	ldw	r2,48(r2)
  80a1c4:	10bffb04 	addi	r2,r2,-20
  80a1c8:	e0bffc15 	stw	r2,-16(fp)
  80a1cc:	e0bfff17 	ldw	r2,-4(fp)
  80a1d0:	e0fffc17 	ldw	r3,-16(fp)
  80a1d4:	1880020e 	bge	r3,r2,80a1e0 <jpeg_save_markers+0x50>
  80a1d8:	e0bffc17 	ldw	r2,-16(fp)
  80a1dc:	e0bfff15 	stw	r2,-4(fp)
  80a1e0:	e0bfff17 	ldw	r2,-4(fp)
  80a1e4:	10001526 	beq	r2,zero,80a23c <jpeg_save_markers+0xac>
  80a1e8:	00802074 	movhi	r2,129
  80a1ec:	10a2c004 	addi	r2,r2,-29952
  80a1f0:	e0bffa15 	stw	r2,-24(fp)
  80a1f4:	e0bffe17 	ldw	r2,-8(fp)
  80a1f8:	10803818 	cmpnei	r2,r2,224
  80a1fc:	1000061e 	bne	r2,zero,80a218 <jpeg_save_markers+0x88>
  80a200:	e0bfff17 	ldw	r2,-4(fp)
  80a204:	108003a8 	cmpgeui	r2,r2,14
  80a208:	1000031e 	bne	r2,zero,80a218 <jpeg_save_markers+0x88>
  80a20c:	00800384 	movi	r2,14
  80a210:	e0bfff15 	stw	r2,-4(fp)
  80a214:	00001506 	br	80a26c <jpeg_save_markers+0xdc>
  80a218:	e0bffe17 	ldw	r2,-8(fp)
  80a21c:	10803b98 	cmpnei	r2,r2,238
  80a220:	1000121e 	bne	r2,zero,80a26c <jpeg_save_markers+0xdc>
  80a224:	e0bfff17 	ldw	r2,-4(fp)
  80a228:	10800328 	cmpgeui	r2,r2,12
  80a22c:	10000f1e 	bne	r2,zero,80a26c <jpeg_save_markers+0xdc>
  80a230:	00800304 	movi	r2,12
  80a234:	e0bfff15 	stw	r2,-4(fp)
  80a238:	00000c06 	br	80a26c <jpeg_save_markers+0xdc>
  80a23c:	00802074 	movhi	r2,129
  80a240:	10a3ea04 	addi	r2,r2,-28760
  80a244:	e0bffa15 	stw	r2,-24(fp)
  80a248:	e0bffe17 	ldw	r2,-8(fp)
  80a24c:	10803820 	cmpeqi	r2,r2,224
  80a250:	1000031e 	bne	r2,zero,80a260 <jpeg_save_markers+0xd0>
  80a254:	e0bffe17 	ldw	r2,-8(fp)
  80a258:	10803b98 	cmpnei	r2,r2,238
  80a25c:	1000031e 	bne	r2,zero,80a26c <jpeg_save_markers+0xdc>
  80a260:	00802074 	movhi	r2,129
  80a264:	10a21204 	addi	r2,r2,-30648
  80a268:	e0bffa15 	stw	r2,-24(fp)
  80a26c:	e0bffe17 	ldw	r2,-8(fp)
  80a270:	10803f98 	cmpnei	r2,r2,254
  80a274:	1000071e 	bne	r2,zero,80a294 <jpeg_save_markers+0x104>
  80a278:	e0bffb17 	ldw	r2,-20(fp)
  80a27c:	e0fffa17 	ldw	r3,-24(fp)
  80a280:	10c00715 	stw	r3,28(r2)
  80a284:	e0bffb17 	ldw	r2,-20(fp)
  80a288:	e0ffff17 	ldw	r3,-4(fp)
  80a28c:	10c01815 	stw	r3,96(r2)
  80a290:	00002606 	br	80a32c <jpeg_save_markers+0x19c>
  80a294:	e0bffe17 	ldw	r2,-8(fp)
  80a298:	10803810 	cmplti	r2,r2,224
  80a29c:	1000161e 	bne	r2,zero,80a2f8 <jpeg_save_markers+0x168>
  80a2a0:	e0bffe17 	ldw	r2,-8(fp)
  80a2a4:	10803c08 	cmpgei	r2,r2,240
  80a2a8:	1000131e 	bne	r2,zero,80a2f8 <jpeg_save_markers+0x168>
  80a2ac:	e0bffe17 	ldw	r2,-8(fp)
  80a2b0:	10bfc804 	addi	r2,r2,-224
  80a2b4:	e0fffb17 	ldw	r3,-20(fp)
  80a2b8:	10800204 	addi	r2,r2,8
  80a2bc:	1085883a 	add	r2,r2,r2
  80a2c0:	1085883a 	add	r2,r2,r2
  80a2c4:	1885883a 	add	r2,r3,r2
  80a2c8:	e0fffa17 	ldw	r3,-24(fp)
  80a2cc:	10c00015 	stw	r3,0(r2)
  80a2d0:	e0bffe17 	ldw	r2,-8(fp)
  80a2d4:	10bfc804 	addi	r2,r2,-224
  80a2d8:	e0fffb17 	ldw	r3,-20(fp)
  80a2dc:	10800644 	addi	r2,r2,25
  80a2e0:	1085883a 	add	r2,r2,r2
  80a2e4:	1085883a 	add	r2,r2,r2
  80a2e8:	1885883a 	add	r2,r3,r2
  80a2ec:	e0ffff17 	ldw	r3,-4(fp)
  80a2f0:	10c00015 	stw	r3,0(r2)
  80a2f4:	00000d06 	br	80a32c <jpeg_save_markers+0x19c>
  80a2f8:	e0bffd17 	ldw	r2,-12(fp)
  80a2fc:	10800017 	ldw	r2,0(r2)
  80a300:	00c01184 	movi	r3,70
  80a304:	10c00515 	stw	r3,20(r2)
  80a308:	e0bffd17 	ldw	r2,-12(fp)
  80a30c:	10800017 	ldw	r2,0(r2)
  80a310:	e0fffe17 	ldw	r3,-8(fp)
  80a314:	10c00615 	stw	r3,24(r2)
  80a318:	e0bffd17 	ldw	r2,-12(fp)
  80a31c:	10800017 	ldw	r2,0(r2)
  80a320:	10800017 	ldw	r2,0(r2)
  80a324:	e13ffd17 	ldw	r4,-12(fp)
  80a328:	103ee83a 	callr	r2
  80a32c:	0001883a 	nop
  80a330:	e037883a 	mov	sp,fp
  80a334:	dfc00117 	ldw	ra,4(sp)
  80a338:	df000017 	ldw	fp,0(sp)
  80a33c:	dec00204 	addi	sp,sp,8
  80a340:	f800283a 	ret

0080a344 <jpeg_set_marker_processor>:
  80a344:	defffa04 	addi	sp,sp,-24
  80a348:	dfc00515 	stw	ra,20(sp)
  80a34c:	df000415 	stw	fp,16(sp)
  80a350:	df000404 	addi	fp,sp,16
  80a354:	e13ffd15 	stw	r4,-12(fp)
  80a358:	e17ffe15 	stw	r5,-8(fp)
  80a35c:	e1bfff15 	stw	r6,-4(fp)
  80a360:	e0bffd17 	ldw	r2,-12(fp)
  80a364:	10807417 	ldw	r2,464(r2)
  80a368:	e0bffc15 	stw	r2,-16(fp)
  80a36c:	e0bffe17 	ldw	r2,-8(fp)
  80a370:	10803f98 	cmpnei	r2,r2,254
  80a374:	1000041e 	bne	r2,zero,80a388 <jpeg_set_marker_processor+0x44>
  80a378:	e0bffc17 	ldw	r2,-16(fp)
  80a37c:	e0ffff17 	ldw	r3,-4(fp)
  80a380:	10c00715 	stw	r3,28(r2)
  80a384:	00001d06 	br	80a3fc <jpeg_set_marker_processor+0xb8>
  80a388:	e0bffe17 	ldw	r2,-8(fp)
  80a38c:	10803810 	cmplti	r2,r2,224
  80a390:	10000d1e 	bne	r2,zero,80a3c8 <jpeg_set_marker_processor+0x84>
  80a394:	e0bffe17 	ldw	r2,-8(fp)
  80a398:	10803c08 	cmpgei	r2,r2,240
  80a39c:	10000a1e 	bne	r2,zero,80a3c8 <jpeg_set_marker_processor+0x84>
  80a3a0:	e0bffe17 	ldw	r2,-8(fp)
  80a3a4:	10bfc804 	addi	r2,r2,-224
  80a3a8:	e0fffc17 	ldw	r3,-16(fp)
  80a3ac:	10800204 	addi	r2,r2,8
  80a3b0:	1085883a 	add	r2,r2,r2
  80a3b4:	1085883a 	add	r2,r2,r2
  80a3b8:	1885883a 	add	r2,r3,r2
  80a3bc:	e0ffff17 	ldw	r3,-4(fp)
  80a3c0:	10c00015 	stw	r3,0(r2)
  80a3c4:	00000d06 	br	80a3fc <jpeg_set_marker_processor+0xb8>
  80a3c8:	e0bffd17 	ldw	r2,-12(fp)
  80a3cc:	10800017 	ldw	r2,0(r2)
  80a3d0:	00c01184 	movi	r3,70
  80a3d4:	10c00515 	stw	r3,20(r2)
  80a3d8:	e0bffd17 	ldw	r2,-12(fp)
  80a3dc:	10800017 	ldw	r2,0(r2)
  80a3e0:	e0fffe17 	ldw	r3,-8(fp)
  80a3e4:	10c00615 	stw	r3,24(r2)
  80a3e8:	e0bffd17 	ldw	r2,-12(fp)
  80a3ec:	10800017 	ldw	r2,0(r2)
  80a3f0:	10800017 	ldw	r2,0(r2)
  80a3f4:	e13ffd17 	ldw	r4,-12(fp)
  80a3f8:	103ee83a 	callr	r2
  80a3fc:	0001883a 	nop
  80a400:	e037883a 	mov	sp,fp
  80a404:	dfc00117 	ldw	ra,4(sp)
  80a408:	df000017 	ldw	fp,0(sp)
  80a40c:	dec00204 	addi	sp,sp,8
  80a410:	f800283a 	ret

0080a414 <use_merged_upsample>:
  80a414:	defffe04 	addi	sp,sp,-8
  80a418:	df000115 	stw	fp,4(sp)
  80a41c:	df000104 	addi	fp,sp,4
  80a420:	e13fff15 	stw	r4,-4(fp)
  80a424:	e0bfff17 	ldw	r2,-4(fp)
  80a428:	10804d17 	ldw	r2,308(r2)
  80a42c:	10000226 	beq	r2,zero,80a438 <use_merged_upsample+0x24>
  80a430:	0005883a 	mov	r2,zero
  80a434:	00006806 	br	80a5d8 <use_merged_upsample+0x1c4>
  80a438:	e0bfff17 	ldw	r2,-4(fp)
  80a43c:	10800a17 	ldw	r2,40(r2)
  80a440:	108000e0 	cmpeqi	r2,r2,3
  80a444:	1000041e 	bne	r2,zero,80a458 <use_merged_upsample+0x44>
  80a448:	e0bfff17 	ldw	r2,-4(fp)
  80a44c:	10800a17 	ldw	r2,40(r2)
  80a450:	108001d8 	cmpnei	r2,r2,7
  80a454:	10000f1e 	bne	r2,zero,80a494 <use_merged_upsample+0x80>
  80a458:	e0bfff17 	ldw	r2,-4(fp)
  80a45c:	10800917 	ldw	r2,36(r2)
  80a460:	108000d8 	cmpnei	r2,r2,3
  80a464:	10000b1e 	bne	r2,zero,80a494 <use_merged_upsample+0x80>
  80a468:	e0bfff17 	ldw	r2,-4(fp)
  80a46c:	10800b17 	ldw	r2,44(r2)
  80a470:	10800098 	cmpnei	r2,r2,2
  80a474:	1000071e 	bne	r2,zero,80a494 <use_merged_upsample+0x80>
  80a478:	e0bfff17 	ldw	r2,-4(fp)
  80a47c:	10801e17 	ldw	r2,120(r2)
  80a480:	108000d8 	cmpnei	r2,r2,3
  80a484:	1000031e 	bne	r2,zero,80a494 <use_merged_upsample+0x80>
  80a488:	e0bfff17 	ldw	r2,-4(fp)
  80a48c:	10804c17 	ldw	r2,304(r2)
  80a490:	10000226 	beq	r2,zero,80a49c <use_merged_upsample+0x88>
  80a494:	0005883a 	mov	r2,zero
  80a498:	00004f06 	br	80a5d8 <use_merged_upsample+0x1c4>
  80a49c:	e0bfff17 	ldw	r2,-4(fp)
  80a4a0:	10803617 	ldw	r2,216(r2)
  80a4a4:	10800217 	ldw	r2,8(r2)
  80a4a8:	10800098 	cmpnei	r2,r2,2
  80a4ac:	10001d1e 	bne	r2,zero,80a524 <use_merged_upsample+0x110>
  80a4b0:	e0bfff17 	ldw	r2,-4(fp)
  80a4b4:	10803617 	ldw	r2,216(r2)
  80a4b8:	10801604 	addi	r2,r2,88
  80a4bc:	10800217 	ldw	r2,8(r2)
  80a4c0:	10800058 	cmpnei	r2,r2,1
  80a4c4:	1000171e 	bne	r2,zero,80a524 <use_merged_upsample+0x110>
  80a4c8:	e0bfff17 	ldw	r2,-4(fp)
  80a4cc:	10803617 	ldw	r2,216(r2)
  80a4d0:	10802c04 	addi	r2,r2,176
  80a4d4:	10800217 	ldw	r2,8(r2)
  80a4d8:	10800058 	cmpnei	r2,r2,1
  80a4dc:	1000111e 	bne	r2,zero,80a524 <use_merged_upsample+0x110>
  80a4e0:	e0bfff17 	ldw	r2,-4(fp)
  80a4e4:	10803617 	ldw	r2,216(r2)
  80a4e8:	10800317 	ldw	r2,12(r2)
  80a4ec:	108000c8 	cmpgei	r2,r2,3
  80a4f0:	10000c1e 	bne	r2,zero,80a524 <use_merged_upsample+0x110>
  80a4f4:	e0bfff17 	ldw	r2,-4(fp)
  80a4f8:	10803617 	ldw	r2,216(r2)
  80a4fc:	10801604 	addi	r2,r2,88
  80a500:	10800317 	ldw	r2,12(r2)
  80a504:	10800058 	cmpnei	r2,r2,1
  80a508:	1000061e 	bne	r2,zero,80a524 <use_merged_upsample+0x110>
  80a50c:	e0bfff17 	ldw	r2,-4(fp)
  80a510:	10803617 	ldw	r2,216(r2)
  80a514:	10802c04 	addi	r2,r2,176
  80a518:	10800317 	ldw	r2,12(r2)
  80a51c:	10800060 	cmpeqi	r2,r2,1
  80a520:	1000021e 	bne	r2,zero,80a52c <use_merged_upsample+0x118>
  80a524:	0005883a 	mov	r2,zero
  80a528:	00002b06 	br	80a5d8 <use_merged_upsample+0x1c4>
  80a52c:	e0bfff17 	ldw	r2,-4(fp)
  80a530:	10803617 	ldw	r2,216(r2)
  80a534:	10c00917 	ldw	r3,36(r2)
  80a538:	e0bfff17 	ldw	r2,-4(fp)
  80a53c:	10805117 	ldw	r2,324(r2)
  80a540:	1880221e 	bne	r3,r2,80a5cc <use_merged_upsample+0x1b8>
  80a544:	e0bfff17 	ldw	r2,-4(fp)
  80a548:	10803617 	ldw	r2,216(r2)
  80a54c:	10801604 	addi	r2,r2,88
  80a550:	10c00917 	ldw	r3,36(r2)
  80a554:	e0bfff17 	ldw	r2,-4(fp)
  80a558:	10805117 	ldw	r2,324(r2)
  80a55c:	18801b1e 	bne	r3,r2,80a5cc <use_merged_upsample+0x1b8>
  80a560:	e0bfff17 	ldw	r2,-4(fp)
  80a564:	10803617 	ldw	r2,216(r2)
  80a568:	10802c04 	addi	r2,r2,176
  80a56c:	10c00917 	ldw	r3,36(r2)
  80a570:	e0bfff17 	ldw	r2,-4(fp)
  80a574:	10805117 	ldw	r2,324(r2)
  80a578:	1880141e 	bne	r3,r2,80a5cc <use_merged_upsample+0x1b8>
  80a57c:	e0bfff17 	ldw	r2,-4(fp)
  80a580:	10803617 	ldw	r2,216(r2)
  80a584:	10c00a17 	ldw	r3,40(r2)
  80a588:	e0bfff17 	ldw	r2,-4(fp)
  80a58c:	10805217 	ldw	r2,328(r2)
  80a590:	18800e1e 	bne	r3,r2,80a5cc <use_merged_upsample+0x1b8>
  80a594:	e0bfff17 	ldw	r2,-4(fp)
  80a598:	10803617 	ldw	r2,216(r2)
  80a59c:	10801604 	addi	r2,r2,88
  80a5a0:	10c00a17 	ldw	r3,40(r2)
  80a5a4:	e0bfff17 	ldw	r2,-4(fp)
  80a5a8:	10805217 	ldw	r2,328(r2)
  80a5ac:	1880071e 	bne	r3,r2,80a5cc <use_merged_upsample+0x1b8>
  80a5b0:	e0bfff17 	ldw	r2,-4(fp)
  80a5b4:	10803617 	ldw	r2,216(r2)
  80a5b8:	10802c04 	addi	r2,r2,176
  80a5bc:	10c00a17 	ldw	r3,40(r2)
  80a5c0:	e0bfff17 	ldw	r2,-4(fp)
  80a5c4:	10805217 	ldw	r2,328(r2)
  80a5c8:	18800226 	beq	r3,r2,80a5d4 <use_merged_upsample+0x1c0>
  80a5cc:	0005883a 	mov	r2,zero
  80a5d0:	00000106 	br	80a5d8 <use_merged_upsample+0x1c4>
  80a5d4:	00800044 	movi	r2,1
  80a5d8:	e037883a 	mov	sp,fp
  80a5dc:	df000017 	ldw	fp,0(sp)
  80a5e0:	dec00104 	addi	sp,sp,4
  80a5e4:	f800283a 	ret

0080a5e8 <jpeg_calc_output_dimensions>:
  80a5e8:	defff904 	addi	sp,sp,-28
  80a5ec:	dfc00615 	stw	ra,24(sp)
  80a5f0:	df000515 	stw	fp,20(sp)
  80a5f4:	dc000415 	stw	r16,16(sp)
  80a5f8:	df000504 	addi	fp,sp,20
  80a5fc:	e13ffe15 	stw	r4,-8(fp)
  80a600:	e0bffe17 	ldw	r2,-8(fp)
  80a604:	10800517 	ldw	r2,20(r2)
  80a608:	108032a0 	cmpeqi	r2,r2,202
  80a60c:	10000e1e 	bne	r2,zero,80a648 <jpeg_calc_output_dimensions+0x60>
  80a610:	e0bffe17 	ldw	r2,-8(fp)
  80a614:	10800017 	ldw	r2,0(r2)
  80a618:	00c00544 	movi	r3,21
  80a61c:	10c00515 	stw	r3,20(r2)
  80a620:	e0bffe17 	ldw	r2,-8(fp)
  80a624:	10800017 	ldw	r2,0(r2)
  80a628:	e0fffe17 	ldw	r3,-8(fp)
  80a62c:	18c00517 	ldw	r3,20(r3)
  80a630:	10c00615 	stw	r3,24(r2)
  80a634:	e0bffe17 	ldw	r2,-8(fp)
  80a638:	10800017 	ldw	r2,0(r2)
  80a63c:	10800017 	ldw	r2,0(r2)
  80a640:	e13ffe17 	ldw	r4,-8(fp)
  80a644:	103ee83a 	callr	r2
  80a648:	e13ffe17 	ldw	r4,-8(fp)
  80a64c:	08030d80 	call	8030d8 <jpeg_core_output_dimensions>
  80a650:	e03ffb15 	stw	zero,-20(fp)
  80a654:	e0bffe17 	ldw	r2,-8(fp)
  80a658:	10803617 	ldw	r2,216(r2)
  80a65c:	e0bffc15 	stw	r2,-16(fp)
  80a660:	00006d06 	br	80a818 <jpeg_calc_output_dimensions+0x230>
  80a664:	00800044 	movi	r2,1
  80a668:	e0bffd15 	stw	r2,-12(fp)
  80a66c:	00000306 	br	80a67c <jpeg_calc_output_dimensions+0x94>
  80a670:	e0bffd17 	ldw	r2,-12(fp)
  80a674:	1085883a 	add	r2,r2,r2
  80a678:	e0bffd15 	stw	r2,-12(fp)
  80a67c:	e0bffe17 	ldw	r2,-8(fp)
  80a680:	10805117 	ldw	r2,324(r2)
  80a684:	e17ffd17 	ldw	r5,-12(fp)
  80a688:	1009883a 	mov	r4,r2
  80a68c:	08301e80 	call	8301e8 <__mulsi3>
  80a690:	1007883a 	mov	r3,r2
  80a694:	e0bffe17 	ldw	r2,-8(fp)
  80a698:	10801317 	ldw	r2,76(r2)
  80a69c:	10000226 	beq	r2,zero,80a6a8 <jpeg_calc_output_dimensions+0xc0>
  80a6a0:	00800204 	movi	r2,8
  80a6a4:	00000106 	br	80a6ac <jpeg_calc_output_dimensions+0xc4>
  80a6a8:	00800104 	movi	r2,4
  80a6ac:	10c00c16 	blt	r2,r3,80a6e0 <jpeg_calc_output_dimensions+0xf8>
  80a6b0:	e0bffe17 	ldw	r2,-8(fp)
  80a6b4:	14004f17 	ldw	r16,316(r2)
  80a6b8:	e0bffc17 	ldw	r2,-16(fp)
  80a6bc:	10800217 	ldw	r2,8(r2)
  80a6c0:	e17ffd17 	ldw	r5,-12(fp)
  80a6c4:	1009883a 	mov	r4,r2
  80a6c8:	08301e80 	call	8301e8 <__mulsi3>
  80a6cc:	1085883a 	add	r2,r2,r2
  80a6d0:	100b883a 	mov	r5,r2
  80a6d4:	8009883a 	mov	r4,r16
  80a6d8:	08300b80 	call	8300b8 <__modsi3>
  80a6dc:	103fe426 	beq	r2,zero,80a670 <__alt_mem_epcs_flash_controller_0+0xff801670>
  80a6e0:	e0bffe17 	ldw	r2,-8(fp)
  80a6e4:	10805117 	ldw	r2,324(r2)
  80a6e8:	e17ffd17 	ldw	r5,-12(fp)
  80a6ec:	1009883a 	mov	r4,r2
  80a6f0:	08301e80 	call	8301e8 <__mulsi3>
  80a6f4:	1007883a 	mov	r3,r2
  80a6f8:	e0bffc17 	ldw	r2,-16(fp)
  80a6fc:	10c00915 	stw	r3,36(r2)
  80a700:	00800044 	movi	r2,1
  80a704:	e0bffd15 	stw	r2,-12(fp)
  80a708:	00000306 	br	80a718 <jpeg_calc_output_dimensions+0x130>
  80a70c:	e0bffd17 	ldw	r2,-12(fp)
  80a710:	1085883a 	add	r2,r2,r2
  80a714:	e0bffd15 	stw	r2,-12(fp)
  80a718:	e0bffe17 	ldw	r2,-8(fp)
  80a71c:	10805217 	ldw	r2,328(r2)
  80a720:	e17ffd17 	ldw	r5,-12(fp)
  80a724:	1009883a 	mov	r4,r2
  80a728:	08301e80 	call	8301e8 <__mulsi3>
  80a72c:	1007883a 	mov	r3,r2
  80a730:	e0bffe17 	ldw	r2,-8(fp)
  80a734:	10801317 	ldw	r2,76(r2)
  80a738:	10000226 	beq	r2,zero,80a744 <jpeg_calc_output_dimensions+0x15c>
  80a73c:	00800204 	movi	r2,8
  80a740:	00000106 	br	80a748 <jpeg_calc_output_dimensions+0x160>
  80a744:	00800104 	movi	r2,4
  80a748:	10c00c16 	blt	r2,r3,80a77c <jpeg_calc_output_dimensions+0x194>
  80a74c:	e0bffe17 	ldw	r2,-8(fp)
  80a750:	14005017 	ldw	r16,320(r2)
  80a754:	e0bffc17 	ldw	r2,-16(fp)
  80a758:	10800317 	ldw	r2,12(r2)
  80a75c:	e17ffd17 	ldw	r5,-12(fp)
  80a760:	1009883a 	mov	r4,r2
  80a764:	08301e80 	call	8301e8 <__mulsi3>
  80a768:	1085883a 	add	r2,r2,r2
  80a76c:	100b883a 	mov	r5,r2
  80a770:	8009883a 	mov	r4,r16
  80a774:	08300b80 	call	8300b8 <__modsi3>
  80a778:	103fe426 	beq	r2,zero,80a70c <__alt_mem_epcs_flash_controller_0+0xff80170c>
  80a77c:	e0bffe17 	ldw	r2,-8(fp)
  80a780:	10805217 	ldw	r2,328(r2)
  80a784:	e17ffd17 	ldw	r5,-12(fp)
  80a788:	1009883a 	mov	r4,r2
  80a78c:	08301e80 	call	8301e8 <__mulsi3>
  80a790:	1007883a 	mov	r3,r2
  80a794:	e0bffc17 	ldw	r2,-16(fp)
  80a798:	10c00a15 	stw	r3,40(r2)
  80a79c:	e0bffc17 	ldw	r2,-16(fp)
  80a7a0:	10c00917 	ldw	r3,36(r2)
  80a7a4:	e0bffc17 	ldw	r2,-16(fp)
  80a7a8:	10800a17 	ldw	r2,40(r2)
  80a7ac:	1085883a 	add	r2,r2,r2
  80a7b0:	10c0070e 	bge	r2,r3,80a7d0 <jpeg_calc_output_dimensions+0x1e8>
  80a7b4:	e0bffc17 	ldw	r2,-16(fp)
  80a7b8:	10800a17 	ldw	r2,40(r2)
  80a7bc:	1085883a 	add	r2,r2,r2
  80a7c0:	1007883a 	mov	r3,r2
  80a7c4:	e0bffc17 	ldw	r2,-16(fp)
  80a7c8:	10c00915 	stw	r3,36(r2)
  80a7cc:	00000c06 	br	80a800 <jpeg_calc_output_dimensions+0x218>
  80a7d0:	e0bffc17 	ldw	r2,-16(fp)
  80a7d4:	10c00a17 	ldw	r3,40(r2)
  80a7d8:	e0bffc17 	ldw	r2,-16(fp)
  80a7dc:	10800917 	ldw	r2,36(r2)
  80a7e0:	1085883a 	add	r2,r2,r2
  80a7e4:	10c0060e 	bge	r2,r3,80a800 <jpeg_calc_output_dimensions+0x218>
  80a7e8:	e0bffc17 	ldw	r2,-16(fp)
  80a7ec:	10800917 	ldw	r2,36(r2)
  80a7f0:	1085883a 	add	r2,r2,r2
  80a7f4:	1007883a 	mov	r3,r2
  80a7f8:	e0bffc17 	ldw	r2,-16(fp)
  80a7fc:	10c00a15 	stw	r3,40(r2)
  80a800:	e0bffb17 	ldw	r2,-20(fp)
  80a804:	10800044 	addi	r2,r2,1
  80a808:	e0bffb15 	stw	r2,-20(fp)
  80a80c:	e0bffc17 	ldw	r2,-16(fp)
  80a810:	10801604 	addi	r2,r2,88
  80a814:	e0bffc15 	stw	r2,-16(fp)
  80a818:	e0bffe17 	ldw	r2,-8(fp)
  80a81c:	10800917 	ldw	r2,36(r2)
  80a820:	e0fffb17 	ldw	r3,-20(fp)
  80a824:	18bf8f16 	blt	r3,r2,80a664 <__alt_mem_epcs_flash_controller_0+0xff801664>
  80a828:	e03ffb15 	stw	zero,-20(fp)
  80a82c:	e0bffe17 	ldw	r2,-8(fp)
  80a830:	10803617 	ldw	r2,216(r2)
  80a834:	e0bffc15 	stw	r2,-16(fp)
  80a838:	00003c06 	br	80a92c <jpeg_calc_output_dimensions+0x344>
  80a83c:	e0bffe17 	ldw	r2,-8(fp)
  80a840:	10800717 	ldw	r2,28(r2)
  80a844:	1021883a 	mov	r16,r2
  80a848:	e0bffc17 	ldw	r2,-16(fp)
  80a84c:	10c00217 	ldw	r3,8(r2)
  80a850:	e0bffc17 	ldw	r2,-16(fp)
  80a854:	10800917 	ldw	r2,36(r2)
  80a858:	100b883a 	mov	r5,r2
  80a85c:	1809883a 	mov	r4,r3
  80a860:	08301e80 	call	8301e8 <__mulsi3>
  80a864:	100b883a 	mov	r5,r2
  80a868:	8009883a 	mov	r4,r16
  80a86c:	08301e80 	call	8301e8 <__mulsi3>
  80a870:	1021883a 	mov	r16,r2
  80a874:	e0bffe17 	ldw	r2,-8(fp)
  80a878:	10c04f17 	ldw	r3,316(r2)
  80a87c:	e0bffe17 	ldw	r2,-8(fp)
  80a880:	10806b17 	ldw	r2,428(r2)
  80a884:	100b883a 	mov	r5,r2
  80a888:	1809883a 	mov	r4,r3
  80a88c:	08301e80 	call	8301e8 <__mulsi3>
  80a890:	100b883a 	mov	r5,r2
  80a894:	8009883a 	mov	r4,r16
  80a898:	0813b8c0 	call	813b8c <jdiv_round_up>
  80a89c:	1007883a 	mov	r3,r2
  80a8a0:	e0bffc17 	ldw	r2,-16(fp)
  80a8a4:	10c00b15 	stw	r3,44(r2)
  80a8a8:	e0bffe17 	ldw	r2,-8(fp)
  80a8ac:	10800817 	ldw	r2,32(r2)
  80a8b0:	1021883a 	mov	r16,r2
  80a8b4:	e0bffc17 	ldw	r2,-16(fp)
  80a8b8:	10c00317 	ldw	r3,12(r2)
  80a8bc:	e0bffc17 	ldw	r2,-16(fp)
  80a8c0:	10800a17 	ldw	r2,40(r2)
  80a8c4:	100b883a 	mov	r5,r2
  80a8c8:	1809883a 	mov	r4,r3
  80a8cc:	08301e80 	call	8301e8 <__mulsi3>
  80a8d0:	100b883a 	mov	r5,r2
  80a8d4:	8009883a 	mov	r4,r16
  80a8d8:	08301e80 	call	8301e8 <__mulsi3>
  80a8dc:	1021883a 	mov	r16,r2
  80a8e0:	e0bffe17 	ldw	r2,-8(fp)
  80a8e4:	10c05017 	ldw	r3,320(r2)
  80a8e8:	e0bffe17 	ldw	r2,-8(fp)
  80a8ec:	10806b17 	ldw	r2,428(r2)
  80a8f0:	100b883a 	mov	r5,r2
  80a8f4:	1809883a 	mov	r4,r3
  80a8f8:	08301e80 	call	8301e8 <__mulsi3>
  80a8fc:	100b883a 	mov	r5,r2
  80a900:	8009883a 	mov	r4,r16
  80a904:	0813b8c0 	call	813b8c <jdiv_round_up>
  80a908:	1007883a 	mov	r3,r2
  80a90c:	e0bffc17 	ldw	r2,-16(fp)
  80a910:	10c00c15 	stw	r3,48(r2)
  80a914:	e0bffb17 	ldw	r2,-20(fp)
  80a918:	10800044 	addi	r2,r2,1
  80a91c:	e0bffb15 	stw	r2,-20(fp)
  80a920:	e0bffc17 	ldw	r2,-16(fp)
  80a924:	10801604 	addi	r2,r2,88
  80a928:	e0bffc15 	stw	r2,-16(fp)
  80a92c:	e0bffe17 	ldw	r2,-8(fp)
  80a930:	10800917 	ldw	r2,36(r2)
  80a934:	e0fffb17 	ldw	r3,-20(fp)
  80a938:	18bfc016 	blt	r3,r2,80a83c <__alt_mem_epcs_flash_controller_0+0xff80183c>
  80a93c:	e0bffe17 	ldw	r2,-8(fp)
  80a940:	10800b17 	ldw	r2,44(r2)
  80a944:	10c00228 	cmpgeui	r3,r2,8
  80a948:	18001e1e 	bne	r3,zero,80a9c4 <jpeg_calc_output_dimensions+0x3dc>
  80a94c:	100690ba 	slli	r3,r2,2
  80a950:	00802074 	movhi	r2,129
  80a954:	10aa5904 	addi	r2,r2,-22172
  80a958:	1885883a 	add	r2,r3,r2
  80a95c:	10800017 	ldw	r2,0(r2)
  80a960:	1000683a 	jmp	r2
  80a964:	0080a9c4 	movi	r2,679
  80a968:	0080a984 	movi	r2,678
  80a96c:	0080a994 	movui	r2,678
  80a970:	0080a9a4 	muli	r2,zero,678
  80a974:	0080a9b4 	movhi	r2,678
  80a978:	0080a9b4 	movhi	r2,678
  80a97c:	0080a994 	movui	r2,678
  80a980:	0080a9a4 	muli	r2,zero,678
  80a984:	e0bffe17 	ldw	r2,-8(fp)
  80a988:	00c00044 	movi	r3,1
  80a98c:	10c01e15 	stw	r3,120(r2)
  80a990:	00001106 	br	80a9d8 <jpeg_calc_output_dimensions+0x3f0>
  80a994:	e0bffe17 	ldw	r2,-8(fp)
  80a998:	00c000c4 	movi	r3,3
  80a99c:	10c01e15 	stw	r3,120(r2)
  80a9a0:	00000d06 	br	80a9d8 <jpeg_calc_output_dimensions+0x3f0>
  80a9a4:	e0bffe17 	ldw	r2,-8(fp)
  80a9a8:	00c000c4 	movi	r3,3
  80a9ac:	10c01e15 	stw	r3,120(r2)
  80a9b0:	00000906 	br	80a9d8 <jpeg_calc_output_dimensions+0x3f0>
  80a9b4:	e0bffe17 	ldw	r2,-8(fp)
  80a9b8:	00c00104 	movi	r3,4
  80a9bc:	10c01e15 	stw	r3,120(r2)
  80a9c0:	00000506 	br	80a9d8 <jpeg_calc_output_dimensions+0x3f0>
  80a9c4:	e0bffe17 	ldw	r2,-8(fp)
  80a9c8:	10c00917 	ldw	r3,36(r2)
  80a9cc:	e0bffe17 	ldw	r2,-8(fp)
  80a9d0:	10c01e15 	stw	r3,120(r2)
  80a9d4:	0001883a 	nop
  80a9d8:	e0bffe17 	ldw	r2,-8(fp)
  80a9dc:	10801517 	ldw	r2,84(r2)
  80a9e0:	1000031e 	bne	r2,zero,80a9f0 <jpeg_calc_output_dimensions+0x408>
  80a9e4:	e0bffe17 	ldw	r2,-8(fp)
  80a9e8:	10801e17 	ldw	r2,120(r2)
  80a9ec:	00000106 	br	80a9f4 <jpeg_calc_output_dimensions+0x40c>
  80a9f0:	00800044 	movi	r2,1
  80a9f4:	e0fffe17 	ldw	r3,-8(fp)
  80a9f8:	18801f15 	stw	r2,124(r3)
  80a9fc:	e13ffe17 	ldw	r4,-8(fp)
  80aa00:	080a4140 	call	80a414 <use_merged_upsample>
  80aa04:	10000526 	beq	r2,zero,80aa1c <jpeg_calc_output_dimensions+0x434>
  80aa08:	e0bffe17 	ldw	r2,-8(fp)
  80aa0c:	10c05017 	ldw	r3,320(r2)
  80aa10:	e0bffe17 	ldw	r2,-8(fp)
  80aa14:	10c02015 	stw	r3,128(r2)
  80aa18:	00000306 	br	80aa28 <jpeg_calc_output_dimensions+0x440>
  80aa1c:	e0bffe17 	ldw	r2,-8(fp)
  80aa20:	00c00044 	movi	r3,1
  80aa24:	10c02015 	stw	r3,128(r2)
  80aa28:	0001883a 	nop
  80aa2c:	e6ffff04 	addi	sp,fp,-4
  80aa30:	dfc00217 	ldw	ra,8(sp)
  80aa34:	df000117 	ldw	fp,4(sp)
  80aa38:	dc000017 	ldw	r16,0(sp)
  80aa3c:	dec00304 	addi	sp,sp,12
  80aa40:	f800283a 	ret

0080aa44 <prepare_range_limit_table>:
  80aa44:	defffb04 	addi	sp,sp,-20
  80aa48:	dfc00415 	stw	ra,16(sp)
  80aa4c:	df000315 	stw	fp,12(sp)
  80aa50:	df000304 	addi	fp,sp,12
  80aa54:	e13fff15 	stw	r4,-4(fp)
  80aa58:	e0bfff17 	ldw	r2,-4(fp)
  80aa5c:	10800117 	ldw	r2,4(r2)
  80aa60:	10800017 	ldw	r2,0(r2)
  80aa64:	01814004 	movi	r6,1280
  80aa68:	01400044 	movi	r5,1
  80aa6c:	e13fff17 	ldw	r4,-4(fp)
  80aa70:	103ee83a 	callr	r2
  80aa74:	e0bffe15 	stw	r2,-8(fp)
  80aa78:	01808004 	movi	r6,512
  80aa7c:	000b883a 	mov	r5,zero
  80aa80:	e13ffe17 	ldw	r4,-8(fp)
  80aa84:	0833d940 	call	833d94 <memset>
  80aa88:	e0bffe17 	ldw	r2,-8(fp)
  80aa8c:	10808004 	addi	r2,r2,512
  80aa90:	e0bffe15 	stw	r2,-8(fp)
  80aa94:	e0bfff17 	ldw	r2,-4(fp)
  80aa98:	e0fffe17 	ldw	r3,-8(fp)
  80aa9c:	10c05415 	stw	r3,336(r2)
  80aaa0:	e03ffd15 	stw	zero,-12(fp)
  80aaa4:	00000806 	br	80aac8 <prepare_range_limit_table+0x84>
  80aaa8:	e0bffd17 	ldw	r2,-12(fp)
  80aaac:	e0fffe17 	ldw	r3,-8(fp)
  80aab0:	1885883a 	add	r2,r3,r2
  80aab4:	e0fffd17 	ldw	r3,-12(fp)
  80aab8:	10c00005 	stb	r3,0(r2)
  80aabc:	e0bffd17 	ldw	r2,-12(fp)
  80aac0:	10800044 	addi	r2,r2,1
  80aac4:	e0bffd15 	stw	r2,-12(fp)
  80aac8:	e0bffd17 	ldw	r2,-12(fp)
  80aacc:	10804010 	cmplti	r2,r2,256
  80aad0:	103ff51e 	bne	r2,zero,80aaa8 <__alt_mem_epcs_flash_controller_0+0xff801aa8>
  80aad4:	00000806 	br	80aaf8 <prepare_range_limit_table+0xb4>
  80aad8:	e0bffd17 	ldw	r2,-12(fp)
  80aadc:	e0fffe17 	ldw	r3,-8(fp)
  80aae0:	1885883a 	add	r2,r3,r2
  80aae4:	00ffffc4 	movi	r3,-1
  80aae8:	10c00005 	stb	r3,0(r2)
  80aaec:	e0bffd17 	ldw	r2,-12(fp)
  80aaf0:	10800044 	addi	r2,r2,1
  80aaf4:	e0bffd15 	stw	r2,-12(fp)
  80aaf8:	e0bffd17 	ldw	r2,-12(fp)
  80aafc:	1080c010 	cmplti	r2,r2,768
  80ab00:	103ff51e 	bne	r2,zero,80aad8 <__alt_mem_epcs_flash_controller_0+0xff801ad8>
  80ab04:	0001883a 	nop
  80ab08:	e037883a 	mov	sp,fp
  80ab0c:	dfc00117 	ldw	ra,4(sp)
  80ab10:	df000017 	ldw	fp,0(sp)
  80ab14:	dec00204 	addi	sp,sp,8
  80ab18:	f800283a 	ret

0080ab1c <master_selection>:
  80ab1c:	defff704 	addi	sp,sp,-36
  80ab20:	dfc00815 	stw	ra,32(sp)
  80ab24:	df000715 	stw	fp,28(sp)
  80ab28:	dc000615 	stw	r16,24(sp)
  80ab2c:	df000704 	addi	fp,sp,28
  80ab30:	e13ffe15 	stw	r4,-8(fp)
  80ab34:	e0bffe17 	ldw	r2,-8(fp)
  80ab38:	10806f17 	ldw	r2,444(r2)
  80ab3c:	e0bffa15 	stw	r2,-24(fp)
  80ab40:	e0bffe17 	ldw	r2,-8(fp)
  80ab44:	10803517 	ldw	r2,212(r2)
  80ab48:	10800220 	cmpeqi	r2,r2,8
  80ab4c:	10000e1e 	bne	r2,zero,80ab88 <master_selection+0x6c>
  80ab50:	e0bffe17 	ldw	r2,-8(fp)
  80ab54:	10800017 	ldw	r2,0(r2)
  80ab58:	00c00404 	movi	r3,16
  80ab5c:	10c00515 	stw	r3,20(r2)
  80ab60:	e0bffe17 	ldw	r2,-8(fp)
  80ab64:	10800017 	ldw	r2,0(r2)
  80ab68:	e0fffe17 	ldw	r3,-8(fp)
  80ab6c:	18c03517 	ldw	r3,212(r3)
  80ab70:	10c00615 	stw	r3,24(r2)
  80ab74:	e0bffe17 	ldw	r2,-8(fp)
  80ab78:	10800017 	ldw	r2,0(r2)
  80ab7c:	10800017 	ldw	r2,0(r2)
  80ab80:	e13ffe17 	ldw	r4,-8(fp)
  80ab84:	103ee83a 	callr	r2
  80ab88:	e13ffe17 	ldw	r4,-8(fp)
  80ab8c:	080a5e80 	call	80a5e8 <jpeg_calc_output_dimensions>
  80ab90:	e13ffe17 	ldw	r4,-8(fp)
  80ab94:	080aa440 	call	80aa44 <prepare_range_limit_table>
  80ab98:	e0bffe17 	ldw	r2,-8(fp)
  80ab9c:	10801d17 	ldw	r2,116(r2)
  80aba0:	10000626 	beq	r2,zero,80abbc <master_selection+0xa0>
  80aba4:	e0bffe17 	ldw	r2,-8(fp)
  80aba8:	10801c17 	ldw	r2,112(r2)
  80abac:	10000326 	beq	r2,zero,80abbc <master_selection+0xa0>
  80abb0:	e0bffe17 	ldw	r2,-8(fp)
  80abb4:	10801e17 	ldw	r2,120(r2)
  80abb8:	00800916 	blt	zero,r2,80abe0 <master_selection+0xc4>
  80abbc:	e0bffe17 	ldw	r2,-8(fp)
  80abc0:	10800017 	ldw	r2,0(r2)
  80abc4:	00c00844 	movi	r3,33
  80abc8:	10c00515 	stw	r3,20(r2)
  80abcc:	e0bffe17 	ldw	r2,-8(fp)
  80abd0:	10800017 	ldw	r2,0(r2)
  80abd4:	10800017 	ldw	r2,0(r2)
  80abd8:	e13ffe17 	ldw	r4,-8(fp)
  80abdc:	103ee83a 	callr	r2
  80abe0:	e0bffe17 	ldw	r2,-8(fp)
  80abe4:	10801c17 	ldw	r2,112(r2)
  80abe8:	1007883a 	mov	r3,r2
  80abec:	e0bffe17 	ldw	r2,-8(fp)
  80abf0:	10801e17 	ldw	r2,120(r2)
  80abf4:	100b883a 	mov	r5,r2
  80abf8:	1809883a 	mov	r4,r3
  80abfc:	08301e80 	call	8301e8 <__mulsi3>
  80ac00:	e0bffb15 	stw	r2,-20(fp)
  80ac04:	e0bffb17 	ldw	r2,-20(fp)
  80ac08:	e0bffc15 	stw	r2,-16(fp)
  80ac0c:	e0fffc17 	ldw	r3,-16(fp)
  80ac10:	e0bffb17 	ldw	r2,-20(fp)
  80ac14:	18800926 	beq	r3,r2,80ac3c <master_selection+0x120>
  80ac18:	e0bffe17 	ldw	r2,-8(fp)
  80ac1c:	10800017 	ldw	r2,0(r2)
  80ac20:	00c01204 	movi	r3,72
  80ac24:	10c00515 	stw	r3,20(r2)
  80ac28:	e0bffe17 	ldw	r2,-8(fp)
  80ac2c:	10800017 	ldw	r2,0(r2)
  80ac30:	10800017 	ldw	r2,0(r2)
  80ac34:	e13ffe17 	ldw	r4,-8(fp)
  80ac38:	103ee83a 	callr	r2
  80ac3c:	e0bffa17 	ldw	r2,-24(fp)
  80ac40:	10000315 	stw	zero,12(r2)
  80ac44:	e13ffe17 	ldw	r4,-8(fp)
  80ac48:	080a4140 	call	80a414 <use_merged_upsample>
  80ac4c:	1007883a 	mov	r3,r2
  80ac50:	e0bffa17 	ldw	r2,-24(fp)
  80ac54:	10c00415 	stw	r3,16(r2)
  80ac58:	e0bffa17 	ldw	r2,-24(fp)
  80ac5c:	10000515 	stw	zero,20(r2)
  80ac60:	e0bffa17 	ldw	r2,-24(fp)
  80ac64:	10000615 	stw	zero,24(r2)
  80ac68:	e0bffe17 	ldw	r2,-8(fp)
  80ac6c:	10801517 	ldw	r2,84(r2)
  80ac70:	10000326 	beq	r2,zero,80ac80 <master_selection+0x164>
  80ac74:	e0bffe17 	ldw	r2,-8(fp)
  80ac78:	10801017 	ldw	r2,64(r2)
  80ac7c:	1000061e 	bne	r2,zero,80ac98 <master_selection+0x17c>
  80ac80:	e0bffe17 	ldw	r2,-8(fp)
  80ac84:	10001915 	stw	zero,100(r2)
  80ac88:	e0bffe17 	ldw	r2,-8(fp)
  80ac8c:	10001a15 	stw	zero,104(r2)
  80ac90:	e0bffe17 	ldw	r2,-8(fp)
  80ac94:	10001b15 	stw	zero,108(r2)
  80ac98:	e0bffe17 	ldw	r2,-8(fp)
  80ac9c:	10801517 	ldw	r2,84(r2)
  80aca0:	10004026 	beq	r2,zero,80ada4 <master_selection+0x288>
  80aca4:	e0bffe17 	ldw	r2,-8(fp)
  80aca8:	10801117 	ldw	r2,68(r2)
  80acac:	10000926 	beq	r2,zero,80acd4 <master_selection+0x1b8>
  80acb0:	e0bffe17 	ldw	r2,-8(fp)
  80acb4:	10800017 	ldw	r2,0(r2)
  80acb8:	00c00c04 	movi	r3,48
  80acbc:	10c00515 	stw	r3,20(r2)
  80acc0:	e0bffe17 	ldw	r2,-8(fp)
  80acc4:	10800017 	ldw	r2,0(r2)
  80acc8:	10800017 	ldw	r2,0(r2)
  80accc:	e13ffe17 	ldw	r4,-8(fp)
  80acd0:	103ee83a 	callr	r2
  80acd4:	e0bffe17 	ldw	r2,-8(fp)
  80acd8:	10801e17 	ldw	r2,120(r2)
  80acdc:	108000e0 	cmpeqi	r2,r2,3
  80ace0:	10000a1e 	bne	r2,zero,80ad0c <master_selection+0x1f0>
  80ace4:	e0bffe17 	ldw	r2,-8(fp)
  80ace8:	00c00044 	movi	r3,1
  80acec:	10c01915 	stw	r3,100(r2)
  80acf0:	e0bffe17 	ldw	r2,-8(fp)
  80acf4:	10001a15 	stw	zero,104(r2)
  80acf8:	e0bffe17 	ldw	r2,-8(fp)
  80acfc:	10001b15 	stw	zero,108(r2)
  80ad00:	e0bffe17 	ldw	r2,-8(fp)
  80ad04:	10002215 	stw	zero,136(r2)
  80ad08:	00001106 	br	80ad50 <master_selection+0x234>
  80ad0c:	e0bffe17 	ldw	r2,-8(fp)
  80ad10:	10802217 	ldw	r2,136(r2)
  80ad14:	10000426 	beq	r2,zero,80ad28 <master_selection+0x20c>
  80ad18:	e0bffe17 	ldw	r2,-8(fp)
  80ad1c:	00c00044 	movi	r3,1
  80ad20:	10c01a15 	stw	r3,104(r2)
  80ad24:	00000a06 	br	80ad50 <master_selection+0x234>
  80ad28:	e0bffe17 	ldw	r2,-8(fp)
  80ad2c:	10801717 	ldw	r2,92(r2)
  80ad30:	10000426 	beq	r2,zero,80ad44 <master_selection+0x228>
  80ad34:	e0bffe17 	ldw	r2,-8(fp)
  80ad38:	00c00044 	movi	r3,1
  80ad3c:	10c01b15 	stw	r3,108(r2)
  80ad40:	00000306 	br	80ad50 <master_selection+0x234>
  80ad44:	e0bffe17 	ldw	r2,-8(fp)
  80ad48:	00c00044 	movi	r3,1
  80ad4c:	10c01915 	stw	r3,100(r2)
  80ad50:	e0bffe17 	ldw	r2,-8(fp)
  80ad54:	10801917 	ldw	r2,100(r2)
  80ad58:	10000626 	beq	r2,zero,80ad74 <master_selection+0x258>
  80ad5c:	e13ffe17 	ldw	r4,-8(fp)
  80ad60:	08111d00 	call	8111d0 <jinit_1pass_quantizer>
  80ad64:	e0bffe17 	ldw	r2,-8(fp)
  80ad68:	10c07917 	ldw	r3,484(r2)
  80ad6c:	e0bffa17 	ldw	r2,-24(fp)
  80ad70:	10c00515 	stw	r3,20(r2)
  80ad74:	e0bffe17 	ldw	r2,-8(fp)
  80ad78:	10801b17 	ldw	r2,108(r2)
  80ad7c:	1000031e 	bne	r2,zero,80ad8c <master_selection+0x270>
  80ad80:	e0bffe17 	ldw	r2,-8(fp)
  80ad84:	10801a17 	ldw	r2,104(r2)
  80ad88:	10000626 	beq	r2,zero,80ada4 <master_selection+0x288>
  80ad8c:	e13ffe17 	ldw	r4,-8(fp)
  80ad90:	08138ec0 	call	8138ec <jinit_2pass_quantizer>
  80ad94:	e0bffe17 	ldw	r2,-8(fp)
  80ad98:	10c07917 	ldw	r3,484(r2)
  80ad9c:	e0bffa17 	ldw	r2,-24(fp)
  80ada0:	10c00615 	stw	r3,24(r2)
  80ada4:	e0bffe17 	ldw	r2,-8(fp)
  80ada8:	10801117 	ldw	r2,68(r2)
  80adac:	10000f1e 	bne	r2,zero,80adec <master_selection+0x2d0>
  80adb0:	e0bffa17 	ldw	r2,-24(fp)
  80adb4:	10800417 	ldw	r2,16(r2)
  80adb8:	10000326 	beq	r2,zero,80adc8 <master_selection+0x2ac>
  80adbc:	e13ffe17 	ldw	r4,-8(fp)
  80adc0:	080c2b40 	call	80c2b4 <jinit_merged_upsampler>
  80adc4:	00000406 	br	80add8 <master_selection+0x2bc>
  80adc8:	e13ffe17 	ldw	r4,-8(fp)
  80adcc:	0818d340 	call	818d34 <jinit_color_deconverter>
  80add0:	e13ffe17 	ldw	r4,-8(fp)
  80add4:	080d2b00 	call	80d2b0 <jinit_upsampler>
  80add8:	e0bffe17 	ldw	r2,-8(fp)
  80addc:	10801b17 	ldw	r2,108(r2)
  80ade0:	100b883a 	mov	r5,r2
  80ade4:	e13ffe17 	ldw	r4,-8(fp)
  80ade8:	080ca1c0 	call	80ca1c <jinit_d_post_controller>
  80adec:	e13ffe17 	ldw	r4,-8(fp)
  80adf0:	0819bf80 	call	819bf8 <jinit_inverse_dct>
  80adf4:	e0bffe17 	ldw	r2,-8(fp)
  80adf8:	10803917 	ldw	r2,228(r2)
  80adfc:	10000326 	beq	r2,zero,80ae0c <master_selection+0x2f0>
  80ae00:	e13ffe17 	ldw	r4,-8(fp)
  80ae04:	0815d140 	call	815d14 <jinit_arith_decoder>
  80ae08:	00000206 	br	80ae14 <master_selection+0x2f8>
  80ae0c:	e13ffe17 	ldw	r4,-8(fp)
  80ae10:	081d2240 	call	81d224 <jinit_huff_decoder>
  80ae14:	e0bffe17 	ldw	r2,-8(fp)
  80ae18:	10807317 	ldw	r2,460(r2)
  80ae1c:	10800417 	ldw	r2,16(r2)
  80ae20:	1000031e 	bne	r2,zero,80ae30 <master_selection+0x314>
  80ae24:	e0bffe17 	ldw	r2,-8(fp)
  80ae28:	10801017 	ldw	r2,64(r2)
  80ae2c:	10000226 	beq	r2,zero,80ae38 <master_selection+0x31c>
  80ae30:	00800044 	movi	r2,1
  80ae34:	00000106 	br	80ae3c <master_selection+0x320>
  80ae38:	0005883a 	mov	r2,zero
  80ae3c:	e0bffd15 	stw	r2,-12(fp)
  80ae40:	e17ffd17 	ldw	r5,-12(fp)
  80ae44:	e13ffe17 	ldw	r4,-8(fp)
  80ae48:	08178580 	call	817858 <jinit_d_coef_controller>
  80ae4c:	e0bffe17 	ldw	r2,-8(fp)
  80ae50:	10801117 	ldw	r2,68(r2)
  80ae54:	1000031e 	bne	r2,zero,80ae64 <master_selection+0x348>
  80ae58:	000b883a 	mov	r5,zero
  80ae5c:	e13ffe17 	ldw	r4,-8(fp)
  80ae60:	081e1f80 	call	81e1f8 <jinit_d_main_controller>
  80ae64:	e0bffe17 	ldw	r2,-8(fp)
  80ae68:	10800117 	ldw	r2,4(r2)
  80ae6c:	10800617 	ldw	r2,24(r2)
  80ae70:	e13ffe17 	ldw	r4,-8(fp)
  80ae74:	103ee83a 	callr	r2
  80ae78:	e0bffe17 	ldw	r2,-8(fp)
  80ae7c:	10807317 	ldw	r2,460(r2)
  80ae80:	10800217 	ldw	r2,8(r2)
  80ae84:	e13ffe17 	ldw	r4,-8(fp)
  80ae88:	103ee83a 	callr	r2
  80ae8c:	e0bffe17 	ldw	r2,-8(fp)
  80ae90:	10800217 	ldw	r2,8(r2)
  80ae94:	10003126 	beq	r2,zero,80af5c <master_selection+0x440>
  80ae98:	e0bffe17 	ldw	r2,-8(fp)
  80ae9c:	10801017 	ldw	r2,64(r2)
  80aea0:	10002e1e 	bne	r2,zero,80af5c <master_selection+0x440>
  80aea4:	e0bffe17 	ldw	r2,-8(fp)
  80aea8:	10807317 	ldw	r2,460(r2)
  80aeac:	10800417 	ldw	r2,16(r2)
  80aeb0:	10002a26 	beq	r2,zero,80af5c <master_selection+0x440>
  80aeb4:	e0bffe17 	ldw	r2,-8(fp)
  80aeb8:	10803817 	ldw	r2,224(r2)
  80aebc:	10000826 	beq	r2,zero,80aee0 <master_selection+0x3c4>
  80aec0:	e0bffe17 	ldw	r2,-8(fp)
  80aec4:	10c00917 	ldw	r3,36(r2)
  80aec8:	1805883a 	mov	r2,r3
  80aecc:	1085883a 	add	r2,r2,r2
  80aed0:	10c5883a 	add	r2,r2,r3
  80aed4:	10800084 	addi	r2,r2,2
  80aed8:	e0bff915 	stw	r2,-28(fp)
  80aedc:	00000306 	br	80aeec <master_selection+0x3d0>
  80aee0:	e0bffe17 	ldw	r2,-8(fp)
  80aee4:	10800917 	ldw	r2,36(r2)
  80aee8:	e0bff915 	stw	r2,-28(fp)
  80aeec:	e0bffe17 	ldw	r2,-8(fp)
  80aef0:	10800217 	ldw	r2,8(r2)
  80aef4:	10000115 	stw	zero,4(r2)
  80aef8:	e0bffe17 	ldw	r2,-8(fp)
  80aefc:	14000217 	ldw	r16,8(r2)
  80af00:	e0bffe17 	ldw	r2,-8(fp)
  80af04:	10805317 	ldw	r2,332(r2)
  80af08:	e17ff917 	ldw	r5,-28(fp)
  80af0c:	1009883a 	mov	r4,r2
  80af10:	08301e80 	call	8301e8 <__mulsi3>
  80af14:	80800215 	stw	r2,8(r16)
  80af18:	e0bffe17 	ldw	r2,-8(fp)
  80af1c:	10800217 	ldw	r2,8(r2)
  80af20:	10000315 	stw	zero,12(r2)
  80af24:	e0bffe17 	ldw	r2,-8(fp)
  80af28:	10c00217 	ldw	r3,8(r2)
  80af2c:	e0bffe17 	ldw	r2,-8(fp)
  80af30:	10801b17 	ldw	r2,108(r2)
  80af34:	10000226 	beq	r2,zero,80af40 <master_selection+0x424>
  80af38:	008000c4 	movi	r2,3
  80af3c:	00000106 	br	80af44 <master_selection+0x428>
  80af40:	00800084 	movi	r2,2
  80af44:	18800415 	stw	r2,16(r3)
  80af48:	e0bffa17 	ldw	r2,-24(fp)
  80af4c:	10800317 	ldw	r2,12(r2)
  80af50:	10c00044 	addi	r3,r2,1
  80af54:	e0bffa17 	ldw	r2,-24(fp)
  80af58:	10c00315 	stw	r3,12(r2)
  80af5c:	0001883a 	nop
  80af60:	e6ffff04 	addi	sp,fp,-4
  80af64:	dfc00217 	ldw	ra,8(sp)
  80af68:	df000117 	ldw	fp,4(sp)
  80af6c:	dc000017 	ldw	r16,0(sp)
  80af70:	dec00304 	addi	sp,sp,12
  80af74:	f800283a 	ret

0080af78 <prepare_for_output_pass>:
  80af78:	defffc04 	addi	sp,sp,-16
  80af7c:	dfc00315 	stw	ra,12(sp)
  80af80:	df000215 	stw	fp,8(sp)
  80af84:	df000204 	addi	fp,sp,8
  80af88:	e13fff15 	stw	r4,-4(fp)
  80af8c:	e0bfff17 	ldw	r2,-4(fp)
  80af90:	10806f17 	ldw	r2,444(r2)
  80af94:	e0bffe15 	stw	r2,-8(fp)
  80af98:	e0bffe17 	ldw	r2,-8(fp)
  80af9c:	10800217 	ldw	r2,8(r2)
  80afa0:	10001526 	beq	r2,zero,80aff8 <prepare_for_output_pass+0x80>
  80afa4:	e0bffe17 	ldw	r2,-8(fp)
  80afa8:	10000215 	stw	zero,8(r2)
  80afac:	e0bfff17 	ldw	r2,-4(fp)
  80afb0:	10807917 	ldw	r2,484(r2)
  80afb4:	10800017 	ldw	r2,0(r2)
  80afb8:	000b883a 	mov	r5,zero
  80afbc:	e13fff17 	ldw	r4,-4(fp)
  80afc0:	103ee83a 	callr	r2
  80afc4:	e0bfff17 	ldw	r2,-4(fp)
  80afc8:	10807217 	ldw	r2,456(r2)
  80afcc:	10800017 	ldw	r2,0(r2)
  80afd0:	01400084 	movi	r5,2
  80afd4:	e13fff17 	ldw	r4,-4(fp)
  80afd8:	103ee83a 	callr	r2
  80afdc:	e0bfff17 	ldw	r2,-4(fp)
  80afe0:	10807017 	ldw	r2,448(r2)
  80afe4:	10800017 	ldw	r2,0(r2)
  80afe8:	01400084 	movi	r5,2
  80afec:	e13fff17 	ldw	r4,-4(fp)
  80aff0:	103ee83a 	callr	r2
  80aff4:	00005c06 	br	80b168 <prepare_for_output_pass+0x1f0>
  80aff8:	e0bfff17 	ldw	r2,-4(fp)
  80affc:	10801517 	ldw	r2,84(r2)
  80b000:	10002226 	beq	r2,zero,80b08c <prepare_for_output_pass+0x114>
  80b004:	e0bfff17 	ldw	r2,-4(fp)
  80b008:	10802217 	ldw	r2,136(r2)
  80b00c:	10001f1e 	bne	r2,zero,80b08c <prepare_for_output_pass+0x114>
  80b010:	e0bfff17 	ldw	r2,-4(fp)
  80b014:	10801717 	ldw	r2,92(r2)
  80b018:	10000b26 	beq	r2,zero,80b048 <prepare_for_output_pass+0xd0>
  80b01c:	e0bfff17 	ldw	r2,-4(fp)
  80b020:	10801b17 	ldw	r2,108(r2)
  80b024:	10000826 	beq	r2,zero,80b048 <prepare_for_output_pass+0xd0>
  80b028:	e0bffe17 	ldw	r2,-8(fp)
  80b02c:	10c00617 	ldw	r3,24(r2)
  80b030:	e0bfff17 	ldw	r2,-4(fp)
  80b034:	10c07915 	stw	r3,484(r2)
  80b038:	e0bffe17 	ldw	r2,-8(fp)
  80b03c:	00c00044 	movi	r3,1
  80b040:	10c00215 	stw	r3,8(r2)
  80b044:	00001106 	br	80b08c <prepare_for_output_pass+0x114>
  80b048:	e0bfff17 	ldw	r2,-4(fp)
  80b04c:	10801917 	ldw	r2,100(r2)
  80b050:	10000526 	beq	r2,zero,80b068 <prepare_for_output_pass+0xf0>
  80b054:	e0bffe17 	ldw	r2,-8(fp)
  80b058:	10c00517 	ldw	r3,20(r2)
  80b05c:	e0bfff17 	ldw	r2,-4(fp)
  80b060:	10c07915 	stw	r3,484(r2)
  80b064:	00000906 	br	80b08c <prepare_for_output_pass+0x114>
  80b068:	e0bfff17 	ldw	r2,-4(fp)
  80b06c:	10800017 	ldw	r2,0(r2)
  80b070:	00c00bc4 	movi	r3,47
  80b074:	10c00515 	stw	r3,20(r2)
  80b078:	e0bfff17 	ldw	r2,-4(fp)
  80b07c:	10800017 	ldw	r2,0(r2)
  80b080:	10800017 	ldw	r2,0(r2)
  80b084:	e13fff17 	ldw	r4,-4(fp)
  80b088:	103ee83a 	callr	r2
  80b08c:	e0bfff17 	ldw	r2,-4(fp)
  80b090:	10807617 	ldw	r2,472(r2)
  80b094:	10800017 	ldw	r2,0(r2)
  80b098:	e13fff17 	ldw	r4,-4(fp)
  80b09c:	103ee83a 	callr	r2
  80b0a0:	e0bfff17 	ldw	r2,-4(fp)
  80b0a4:	10807117 	ldw	r2,452(r2)
  80b0a8:	10800217 	ldw	r2,8(r2)
  80b0ac:	e13fff17 	ldw	r4,-4(fp)
  80b0b0:	103ee83a 	callr	r2
  80b0b4:	e0bfff17 	ldw	r2,-4(fp)
  80b0b8:	10801117 	ldw	r2,68(r2)
  80b0bc:	10002a1e 	bne	r2,zero,80b168 <prepare_for_output_pass+0x1f0>
  80b0c0:	e0bffe17 	ldw	r2,-8(fp)
  80b0c4:	10800417 	ldw	r2,16(r2)
  80b0c8:	1000051e 	bne	r2,zero,80b0e0 <prepare_for_output_pass+0x168>
  80b0cc:	e0bfff17 	ldw	r2,-4(fp)
  80b0d0:	10807817 	ldw	r2,480(r2)
  80b0d4:	10800017 	ldw	r2,0(r2)
  80b0d8:	e13fff17 	ldw	r4,-4(fp)
  80b0dc:	103ee83a 	callr	r2
  80b0e0:	e0bfff17 	ldw	r2,-4(fp)
  80b0e4:	10807717 	ldw	r2,476(r2)
  80b0e8:	10800017 	ldw	r2,0(r2)
  80b0ec:	e13fff17 	ldw	r4,-4(fp)
  80b0f0:	103ee83a 	callr	r2
  80b0f4:	e0bfff17 	ldw	r2,-4(fp)
  80b0f8:	10801517 	ldw	r2,84(r2)
  80b0fc:	10000826 	beq	r2,zero,80b120 <prepare_for_output_pass+0x1a8>
  80b100:	e0bfff17 	ldw	r2,-4(fp)
  80b104:	10807917 	ldw	r2,484(r2)
  80b108:	10800017 	ldw	r2,0(r2)
  80b10c:	e0fffe17 	ldw	r3,-8(fp)
  80b110:	18c00217 	ldw	r3,8(r3)
  80b114:	180b883a 	mov	r5,r3
  80b118:	e13fff17 	ldw	r4,-4(fp)
  80b11c:	103ee83a 	callr	r2
  80b120:	e0bfff17 	ldw	r2,-4(fp)
  80b124:	10807217 	ldw	r2,456(r2)
  80b128:	10800017 	ldw	r2,0(r2)
  80b12c:	e0fffe17 	ldw	r3,-8(fp)
  80b130:	18c00217 	ldw	r3,8(r3)
  80b134:	18000226 	beq	r3,zero,80b140 <prepare_for_output_pass+0x1c8>
  80b138:	00c000c4 	movi	r3,3
  80b13c:	00000106 	br	80b144 <prepare_for_output_pass+0x1cc>
  80b140:	0007883a 	mov	r3,zero
  80b144:	180b883a 	mov	r5,r3
  80b148:	e13fff17 	ldw	r4,-4(fp)
  80b14c:	103ee83a 	callr	r2
  80b150:	e0bfff17 	ldw	r2,-4(fp)
  80b154:	10807017 	ldw	r2,448(r2)
  80b158:	10800017 	ldw	r2,0(r2)
  80b15c:	000b883a 	mov	r5,zero
  80b160:	e13fff17 	ldw	r4,-4(fp)
  80b164:	103ee83a 	callr	r2
  80b168:	e0bfff17 	ldw	r2,-4(fp)
  80b16c:	10800217 	ldw	r2,8(r2)
  80b170:	10002526 	beq	r2,zero,80b208 <prepare_for_output_pass+0x290>
  80b174:	e0bfff17 	ldw	r2,-4(fp)
  80b178:	10800217 	ldw	r2,8(r2)
  80b17c:	e0fffe17 	ldw	r3,-8(fp)
  80b180:	18c00317 	ldw	r3,12(r3)
  80b184:	10c00315 	stw	r3,12(r2)
  80b188:	e0bfff17 	ldw	r2,-4(fp)
  80b18c:	10c00217 	ldw	r3,8(r2)
  80b190:	e0bffe17 	ldw	r2,-8(fp)
  80b194:	11000317 	ldw	r4,12(r2)
  80b198:	e0bffe17 	ldw	r2,-8(fp)
  80b19c:	10800217 	ldw	r2,8(r2)
  80b1a0:	10000226 	beq	r2,zero,80b1ac <prepare_for_output_pass+0x234>
  80b1a4:	00800084 	movi	r2,2
  80b1a8:	00000106 	br	80b1b0 <prepare_for_output_pass+0x238>
  80b1ac:	00800044 	movi	r2,1
  80b1b0:	2085883a 	add	r2,r4,r2
  80b1b4:	18800415 	stw	r2,16(r3)
  80b1b8:	e0bfff17 	ldw	r2,-4(fp)
  80b1bc:	10801017 	ldw	r2,64(r2)
  80b1c0:	10001126 	beq	r2,zero,80b208 <prepare_for_output_pass+0x290>
  80b1c4:	e0bfff17 	ldw	r2,-4(fp)
  80b1c8:	10807317 	ldw	r2,460(r2)
  80b1cc:	10800517 	ldw	r2,20(r2)
  80b1d0:	10000d1e 	bne	r2,zero,80b208 <prepare_for_output_pass+0x290>
  80b1d4:	e0bfff17 	ldw	r2,-4(fp)
  80b1d8:	10c00217 	ldw	r3,8(r2)
  80b1dc:	e0bfff17 	ldw	r2,-4(fp)
  80b1e0:	10800217 	ldw	r2,8(r2)
  80b1e4:	11000417 	ldw	r4,16(r2)
  80b1e8:	e0bfff17 	ldw	r2,-4(fp)
  80b1ec:	10801b17 	ldw	r2,108(r2)
  80b1f0:	10000226 	beq	r2,zero,80b1fc <prepare_for_output_pass+0x284>
  80b1f4:	00800084 	movi	r2,2
  80b1f8:	00000106 	br	80b200 <prepare_for_output_pass+0x288>
  80b1fc:	00800044 	movi	r2,1
  80b200:	2085883a 	add	r2,r4,r2
  80b204:	18800415 	stw	r2,16(r3)
  80b208:	0001883a 	nop
  80b20c:	e037883a 	mov	sp,fp
  80b210:	dfc00117 	ldw	ra,4(sp)
  80b214:	df000017 	ldw	fp,0(sp)
  80b218:	dec00204 	addi	sp,sp,8
  80b21c:	f800283a 	ret

0080b220 <finish_output_pass>:
  80b220:	defffc04 	addi	sp,sp,-16
  80b224:	dfc00315 	stw	ra,12(sp)
  80b228:	df000215 	stw	fp,8(sp)
  80b22c:	df000204 	addi	fp,sp,8
  80b230:	e13fff15 	stw	r4,-4(fp)
  80b234:	e0bfff17 	ldw	r2,-4(fp)
  80b238:	10806f17 	ldw	r2,444(r2)
  80b23c:	e0bffe15 	stw	r2,-8(fp)
  80b240:	e0bfff17 	ldw	r2,-4(fp)
  80b244:	10801517 	ldw	r2,84(r2)
  80b248:	10000526 	beq	r2,zero,80b260 <finish_output_pass+0x40>
  80b24c:	e0bfff17 	ldw	r2,-4(fp)
  80b250:	10807917 	ldw	r2,484(r2)
  80b254:	10800217 	ldw	r2,8(r2)
  80b258:	e13fff17 	ldw	r4,-4(fp)
  80b25c:	103ee83a 	callr	r2
  80b260:	e0bffe17 	ldw	r2,-8(fp)
  80b264:	10800317 	ldw	r2,12(r2)
  80b268:	10c00044 	addi	r3,r2,1
  80b26c:	e0bffe17 	ldw	r2,-8(fp)
  80b270:	10c00315 	stw	r3,12(r2)
  80b274:	0001883a 	nop
  80b278:	e037883a 	mov	sp,fp
  80b27c:	dfc00117 	ldw	ra,4(sp)
  80b280:	df000017 	ldw	fp,0(sp)
  80b284:	dec00204 	addi	sp,sp,8
  80b288:	f800283a 	ret

0080b28c <jpeg_new_colormap>:
  80b28c:	defffc04 	addi	sp,sp,-16
  80b290:	dfc00315 	stw	ra,12(sp)
  80b294:	df000215 	stw	fp,8(sp)
  80b298:	df000204 	addi	fp,sp,8
  80b29c:	e13fff15 	stw	r4,-4(fp)
  80b2a0:	e0bfff17 	ldw	r2,-4(fp)
  80b2a4:	10806f17 	ldw	r2,444(r2)
  80b2a8:	e0bffe15 	stw	r2,-8(fp)
  80b2ac:	e0bfff17 	ldw	r2,-4(fp)
  80b2b0:	10800517 	ldw	r2,20(r2)
  80b2b4:	108033e0 	cmpeqi	r2,r2,207
  80b2b8:	10000e1e 	bne	r2,zero,80b2f4 <jpeg_new_colormap+0x68>
  80b2bc:	e0bfff17 	ldw	r2,-4(fp)
  80b2c0:	10800017 	ldw	r2,0(r2)
  80b2c4:	00c00544 	movi	r3,21
  80b2c8:	10c00515 	stw	r3,20(r2)
  80b2cc:	e0bfff17 	ldw	r2,-4(fp)
  80b2d0:	10800017 	ldw	r2,0(r2)
  80b2d4:	e0ffff17 	ldw	r3,-4(fp)
  80b2d8:	18c00517 	ldw	r3,20(r3)
  80b2dc:	10c00615 	stw	r3,24(r2)
  80b2e0:	e0bfff17 	ldw	r2,-4(fp)
  80b2e4:	10800017 	ldw	r2,0(r2)
  80b2e8:	10800017 	ldw	r2,0(r2)
  80b2ec:	e13fff17 	ldw	r4,-4(fp)
  80b2f0:	103ee83a 	callr	r2
  80b2f4:	e0bfff17 	ldw	r2,-4(fp)
  80b2f8:	10801517 	ldw	r2,84(r2)
  80b2fc:	10001226 	beq	r2,zero,80b348 <jpeg_new_colormap+0xbc>
  80b300:	e0bfff17 	ldw	r2,-4(fp)
  80b304:	10801a17 	ldw	r2,104(r2)
  80b308:	10000f26 	beq	r2,zero,80b348 <jpeg_new_colormap+0xbc>
  80b30c:	e0bfff17 	ldw	r2,-4(fp)
  80b310:	10802217 	ldw	r2,136(r2)
  80b314:	10000c26 	beq	r2,zero,80b348 <jpeg_new_colormap+0xbc>
  80b318:	e0bffe17 	ldw	r2,-8(fp)
  80b31c:	10c00617 	ldw	r3,24(r2)
  80b320:	e0bfff17 	ldw	r2,-4(fp)
  80b324:	10c07915 	stw	r3,484(r2)
  80b328:	e0bfff17 	ldw	r2,-4(fp)
  80b32c:	10807917 	ldw	r2,484(r2)
  80b330:	10800317 	ldw	r2,12(r2)
  80b334:	e13fff17 	ldw	r4,-4(fp)
  80b338:	103ee83a 	callr	r2
  80b33c:	e0bffe17 	ldw	r2,-8(fp)
  80b340:	10000215 	stw	zero,8(r2)
  80b344:	00000906 	br	80b36c <jpeg_new_colormap+0xe0>
  80b348:	e0bfff17 	ldw	r2,-4(fp)
  80b34c:	10800017 	ldw	r2,0(r2)
  80b350:	00c00bc4 	movi	r3,47
  80b354:	10c00515 	stw	r3,20(r2)
  80b358:	e0bfff17 	ldw	r2,-4(fp)
  80b35c:	10800017 	ldw	r2,0(r2)
  80b360:	10800017 	ldw	r2,0(r2)
  80b364:	e13fff17 	ldw	r4,-4(fp)
  80b368:	103ee83a 	callr	r2
  80b36c:	0001883a 	nop
  80b370:	e037883a 	mov	sp,fp
  80b374:	dfc00117 	ldw	ra,4(sp)
  80b378:	df000017 	ldw	fp,0(sp)
  80b37c:	dec00204 	addi	sp,sp,8
  80b380:	f800283a 	ret

0080b384 <jinit_master_decompress>:
  80b384:	defffc04 	addi	sp,sp,-16
  80b388:	dfc00315 	stw	ra,12(sp)
  80b38c:	df000215 	stw	fp,8(sp)
  80b390:	df000204 	addi	fp,sp,8
  80b394:	e13fff15 	stw	r4,-4(fp)
  80b398:	e0bfff17 	ldw	r2,-4(fp)
  80b39c:	10800117 	ldw	r2,4(r2)
  80b3a0:	10800017 	ldw	r2,0(r2)
  80b3a4:	01800704 	movi	r6,28
  80b3a8:	01400044 	movi	r5,1
  80b3ac:	e13fff17 	ldw	r4,-4(fp)
  80b3b0:	103ee83a 	callr	r2
  80b3b4:	e0bffe15 	stw	r2,-8(fp)
  80b3b8:	e0fffe17 	ldw	r3,-8(fp)
  80b3bc:	e0bfff17 	ldw	r2,-4(fp)
  80b3c0:	10c06f15 	stw	r3,444(r2)
  80b3c4:	e0fffe17 	ldw	r3,-8(fp)
  80b3c8:	00802074 	movhi	r2,129
  80b3cc:	10abde04 	addi	r2,r2,-20616
  80b3d0:	18800015 	stw	r2,0(r3)
  80b3d4:	e0fffe17 	ldw	r3,-8(fp)
  80b3d8:	00802074 	movhi	r2,129
  80b3dc:	10ac8804 	addi	r2,r2,-19936
  80b3e0:	18800115 	stw	r2,4(r3)
  80b3e4:	e0bffe17 	ldw	r2,-8(fp)
  80b3e8:	10000215 	stw	zero,8(r2)
  80b3ec:	e13fff17 	ldw	r4,-4(fp)
  80b3f0:	080ab1c0 	call	80ab1c <master_selection>
  80b3f4:	0001883a 	nop
  80b3f8:	e037883a 	mov	sp,fp
  80b3fc:	dfc00117 	ldw	ra,4(sp)
  80b400:	df000017 	ldw	fp,0(sp)
  80b404:	dec00204 	addi	sp,sp,8
  80b408:	f800283a 	ret

0080b40c <build_ycc_rgb_table>:
  80b40c:	defff904 	addi	sp,sp,-28
  80b410:	dfc00615 	stw	ra,24(sp)
  80b414:	df000515 	stw	fp,20(sp)
  80b418:	dc000415 	stw	r16,16(sp)
  80b41c:	df000504 	addi	fp,sp,20
  80b420:	e13ffe15 	stw	r4,-8(fp)
  80b424:	e0bffe17 	ldw	r2,-8(fp)
  80b428:	10807717 	ldw	r2,476(r2)
  80b42c:	e0bffd15 	stw	r2,-12(fp)
  80b430:	e0bffe17 	ldw	r2,-8(fp)
  80b434:	10800117 	ldw	r2,4(r2)
  80b438:	10800017 	ldw	r2,0(r2)
  80b43c:	01810004 	movi	r6,1024
  80b440:	01400044 	movi	r5,1
  80b444:	e13ffe17 	ldw	r4,-8(fp)
  80b448:	103ee83a 	callr	r2
  80b44c:	1007883a 	mov	r3,r2
  80b450:	e0bffd17 	ldw	r2,-12(fp)
  80b454:	10c00415 	stw	r3,16(r2)
  80b458:	e0bffe17 	ldw	r2,-8(fp)
  80b45c:	10800117 	ldw	r2,4(r2)
  80b460:	10800017 	ldw	r2,0(r2)
  80b464:	01810004 	movi	r6,1024
  80b468:	01400044 	movi	r5,1
  80b46c:	e13ffe17 	ldw	r4,-8(fp)
  80b470:	103ee83a 	callr	r2
  80b474:	1007883a 	mov	r3,r2
  80b478:	e0bffd17 	ldw	r2,-12(fp)
  80b47c:	10c00515 	stw	r3,20(r2)
  80b480:	e0bffe17 	ldw	r2,-8(fp)
  80b484:	10800117 	ldw	r2,4(r2)
  80b488:	10800017 	ldw	r2,0(r2)
  80b48c:	01810004 	movi	r6,1024
  80b490:	01400044 	movi	r5,1
  80b494:	e13ffe17 	ldw	r4,-8(fp)
  80b498:	103ee83a 	callr	r2
  80b49c:	1007883a 	mov	r3,r2
  80b4a0:	e0bffd17 	ldw	r2,-12(fp)
  80b4a4:	10c00615 	stw	r3,24(r2)
  80b4a8:	e0bffe17 	ldw	r2,-8(fp)
  80b4ac:	10800117 	ldw	r2,4(r2)
  80b4b0:	10800017 	ldw	r2,0(r2)
  80b4b4:	01810004 	movi	r6,1024
  80b4b8:	01400044 	movi	r5,1
  80b4bc:	e13ffe17 	ldw	r4,-8(fp)
  80b4c0:	103ee83a 	callr	r2
  80b4c4:	1007883a 	mov	r3,r2
  80b4c8:	e0bffd17 	ldw	r2,-12(fp)
  80b4cc:	10c00715 	stw	r3,28(r2)
  80b4d0:	e03ffb15 	stw	zero,-20(fp)
  80b4d4:	00bfe004 	movi	r2,-128
  80b4d8:	e0bffc15 	stw	r2,-16(fp)
  80b4dc:	00003c06 	br	80b5d0 <build_ycc_rgb_table+0x1c4>
  80b4e0:	e0bffd17 	ldw	r2,-12(fp)
  80b4e4:	10c00417 	ldw	r3,16(r2)
  80b4e8:	e0bffb17 	ldw	r2,-20(fp)
  80b4ec:	1085883a 	add	r2,r2,r2
  80b4f0:	1085883a 	add	r2,r2,r2
  80b4f4:	18a1883a 	add	r16,r3,r2
  80b4f8:	01400074 	movhi	r5,1
  80b4fc:	2959ba44 	addi	r5,r5,26345
  80b500:	e13ffc17 	ldw	r4,-16(fp)
  80b504:	08301e80 	call	8301e8 <__mulsi3>
  80b508:	1007883a 	mov	r3,r2
  80b50c:	00a00014 	movui	r2,32768
  80b510:	1885883a 	add	r2,r3,r2
  80b514:	1005d43a 	srai	r2,r2,16
  80b518:	80800015 	stw	r2,0(r16)
  80b51c:	e0bffd17 	ldw	r2,-12(fp)
  80b520:	10c00517 	ldw	r3,20(r2)
  80b524:	e0bffb17 	ldw	r2,-20(fp)
  80b528:	1085883a 	add	r2,r2,r2
  80b52c:	1085883a 	add	r2,r2,r2
  80b530:	18a1883a 	add	r16,r3,r2
  80b534:	014000b4 	movhi	r5,2
  80b538:	29716884 	addi	r5,r5,-14942
  80b53c:	e13ffc17 	ldw	r4,-16(fp)
  80b540:	08301e80 	call	8301e8 <__mulsi3>
  80b544:	1007883a 	mov	r3,r2
  80b548:	00a00014 	movui	r2,32768
  80b54c:	1885883a 	add	r2,r3,r2
  80b550:	1005d43a 	srai	r2,r2,16
  80b554:	80800015 	stw	r2,0(r16)
  80b558:	e0bffd17 	ldw	r2,-12(fp)
  80b55c:	10c00617 	ldw	r3,24(r2)
  80b560:	e0bffb17 	ldw	r2,-20(fp)
  80b564:	1085883a 	add	r2,r2,r2
  80b568:	1085883a 	add	r2,r2,r2
  80b56c:	18a1883a 	add	r16,r3,r2
  80b570:	017ffff4 	movhi	r5,65535
  80b574:	29524b84 	addi	r5,r5,18734
  80b578:	e13ffc17 	ldw	r4,-16(fp)
  80b57c:	08301e80 	call	8301e8 <__mulsi3>
  80b580:	80800015 	stw	r2,0(r16)
  80b584:	e0bffd17 	ldw	r2,-12(fp)
  80b588:	10c00717 	ldw	r3,28(r2)
  80b58c:	e0bffb17 	ldw	r2,-20(fp)
  80b590:	1085883a 	add	r2,r2,r2
  80b594:	1085883a 	add	r2,r2,r2
  80b598:	18a1883a 	add	r16,r3,r2
  80b59c:	0169f9c4 	movi	r5,-22553
  80b5a0:	e13ffc17 	ldw	r4,-16(fp)
  80b5a4:	08301e80 	call	8301e8 <__mulsi3>
  80b5a8:	1007883a 	mov	r3,r2
  80b5ac:	00a00014 	movui	r2,32768
  80b5b0:	1885883a 	add	r2,r3,r2
  80b5b4:	80800015 	stw	r2,0(r16)
  80b5b8:	e0bffb17 	ldw	r2,-20(fp)
  80b5bc:	10800044 	addi	r2,r2,1
  80b5c0:	e0bffb15 	stw	r2,-20(fp)
  80b5c4:	e0bffc17 	ldw	r2,-16(fp)
  80b5c8:	10800044 	addi	r2,r2,1
  80b5cc:	e0bffc15 	stw	r2,-16(fp)
  80b5d0:	e0bffb17 	ldw	r2,-20(fp)
  80b5d4:	10804010 	cmplti	r2,r2,256
  80b5d8:	103fc11e 	bne	r2,zero,80b4e0 <__alt_mem_epcs_flash_controller_0+0xff8024e0>
  80b5dc:	0001883a 	nop
  80b5e0:	e6ffff04 	addi	sp,fp,-4
  80b5e4:	dfc00217 	ldw	ra,8(sp)
  80b5e8:	df000117 	ldw	fp,4(sp)
  80b5ec:	dc000017 	ldw	r16,0(sp)
  80b5f0:	dec00304 	addi	sp,sp,12
  80b5f4:	f800283a 	ret

0080b5f8 <build_bg_ycc_rgb_table>:
  80b5f8:	defff904 	addi	sp,sp,-28
  80b5fc:	dfc00615 	stw	ra,24(sp)
  80b600:	df000515 	stw	fp,20(sp)
  80b604:	dc000415 	stw	r16,16(sp)
  80b608:	df000504 	addi	fp,sp,20
  80b60c:	e13ffe15 	stw	r4,-8(fp)
  80b610:	e0bffe17 	ldw	r2,-8(fp)
  80b614:	10807717 	ldw	r2,476(r2)
  80b618:	e0bffd15 	stw	r2,-12(fp)
  80b61c:	e0bffe17 	ldw	r2,-8(fp)
  80b620:	10800117 	ldw	r2,4(r2)
  80b624:	10800017 	ldw	r2,0(r2)
  80b628:	01810004 	movi	r6,1024
  80b62c:	01400044 	movi	r5,1
  80b630:	e13ffe17 	ldw	r4,-8(fp)
  80b634:	103ee83a 	callr	r2
  80b638:	1007883a 	mov	r3,r2
  80b63c:	e0bffd17 	ldw	r2,-12(fp)
  80b640:	10c00415 	stw	r3,16(r2)
  80b644:	e0bffe17 	ldw	r2,-8(fp)
  80b648:	10800117 	ldw	r2,4(r2)
  80b64c:	10800017 	ldw	r2,0(r2)
  80b650:	01810004 	movi	r6,1024
  80b654:	01400044 	movi	r5,1
  80b658:	e13ffe17 	ldw	r4,-8(fp)
  80b65c:	103ee83a 	callr	r2
  80b660:	1007883a 	mov	r3,r2
  80b664:	e0bffd17 	ldw	r2,-12(fp)
  80b668:	10c00515 	stw	r3,20(r2)
  80b66c:	e0bffe17 	ldw	r2,-8(fp)
  80b670:	10800117 	ldw	r2,4(r2)
  80b674:	10800017 	ldw	r2,0(r2)
  80b678:	01810004 	movi	r6,1024
  80b67c:	01400044 	movi	r5,1
  80b680:	e13ffe17 	ldw	r4,-8(fp)
  80b684:	103ee83a 	callr	r2
  80b688:	1007883a 	mov	r3,r2
  80b68c:	e0bffd17 	ldw	r2,-12(fp)
  80b690:	10c00615 	stw	r3,24(r2)
  80b694:	e0bffe17 	ldw	r2,-8(fp)
  80b698:	10800117 	ldw	r2,4(r2)
  80b69c:	10800017 	ldw	r2,0(r2)
  80b6a0:	01810004 	movi	r6,1024
  80b6a4:	01400044 	movi	r5,1
  80b6a8:	e13ffe17 	ldw	r4,-8(fp)
  80b6ac:	103ee83a 	callr	r2
  80b6b0:	1007883a 	mov	r3,r2
  80b6b4:	e0bffd17 	ldw	r2,-12(fp)
  80b6b8:	10c00715 	stw	r3,28(r2)
  80b6bc:	e03ffb15 	stw	zero,-20(fp)
  80b6c0:	00bfe004 	movi	r2,-128
  80b6c4:	e0bffc15 	stw	r2,-16(fp)
  80b6c8:	00003d06 	br	80b7c0 <build_bg_ycc_rgb_table+0x1c8>
  80b6cc:	e0bffd17 	ldw	r2,-12(fp)
  80b6d0:	10c00417 	ldw	r3,16(r2)
  80b6d4:	e0bffb17 	ldw	r2,-20(fp)
  80b6d8:	1085883a 	add	r2,r2,r2
  80b6dc:	1085883a 	add	r2,r2,r2
  80b6e0:	18a1883a 	add	r16,r3,r2
  80b6e4:	014000f4 	movhi	r5,3
  80b6e8:	297374c4 	addi	r5,r5,-12845
  80b6ec:	e13ffc17 	ldw	r4,-16(fp)
  80b6f0:	08301e80 	call	8301e8 <__mulsi3>
  80b6f4:	1007883a 	mov	r3,r2
  80b6f8:	00a00014 	movui	r2,32768
  80b6fc:	1885883a 	add	r2,r3,r2
  80b700:	1005d43a 	srai	r2,r2,16
  80b704:	80800015 	stw	r2,0(r16)
  80b708:	e0bffd17 	ldw	r2,-12(fp)
  80b70c:	10c00517 	ldw	r3,20(r2)
  80b710:	e0bffb17 	ldw	r2,-20(fp)
  80b714:	1085883a 	add	r2,r2,r2
  80b718:	1085883a 	add	r2,r2,r2
  80b71c:	18a1883a 	add	r16,r3,r2
  80b720:	01400134 	movhi	r5,4
  80b724:	2962d104 	addi	r5,r5,-29884
  80b728:	e13ffc17 	ldw	r4,-16(fp)
  80b72c:	08301e80 	call	8301e8 <__mulsi3>
  80b730:	1007883a 	mov	r3,r2
  80b734:	00a00014 	movui	r2,32768
  80b738:	1885883a 	add	r2,r3,r2
  80b73c:	1005d43a 	srai	r2,r2,16
  80b740:	80800015 	stw	r2,0(r16)
  80b744:	e0bffd17 	ldw	r2,-12(fp)
  80b748:	10c00617 	ldw	r3,24(r2)
  80b74c:	e0bffb17 	ldw	r2,-20(fp)
  80b750:	1085883a 	add	r2,r2,r2
  80b754:	1085883a 	add	r2,r2,r2
  80b758:	18a1883a 	add	r16,r3,r2
  80b75c:	017ffff4 	movhi	r5,65535
  80b760:	29649744 	addi	r5,r5,-28067
  80b764:	e13ffc17 	ldw	r4,-16(fp)
  80b768:	08301e80 	call	8301e8 <__mulsi3>
  80b76c:	80800015 	stw	r2,0(r16)
  80b770:	e0bffd17 	ldw	r2,-12(fp)
  80b774:	10c00717 	ldw	r3,28(r2)
  80b778:	e0bffb17 	ldw	r2,-20(fp)
  80b77c:	1085883a 	add	r2,r2,r2
  80b780:	1085883a 	add	r2,r2,r2
  80b784:	18a1883a 	add	r16,r3,r2
  80b788:	017ffff4 	movhi	r5,65535
  80b78c:	2953f344 	addi	r5,r5,20429
  80b790:	e13ffc17 	ldw	r4,-16(fp)
  80b794:	08301e80 	call	8301e8 <__mulsi3>
  80b798:	1007883a 	mov	r3,r2
  80b79c:	00a00014 	movui	r2,32768
  80b7a0:	1885883a 	add	r2,r3,r2
  80b7a4:	80800015 	stw	r2,0(r16)
  80b7a8:	e0bffb17 	ldw	r2,-20(fp)
  80b7ac:	10800044 	addi	r2,r2,1
  80b7b0:	e0bffb15 	stw	r2,-20(fp)
  80b7b4:	e0bffc17 	ldw	r2,-16(fp)
  80b7b8:	10800044 	addi	r2,r2,1
  80b7bc:	e0bffc15 	stw	r2,-16(fp)
  80b7c0:	e0bffb17 	ldw	r2,-20(fp)
  80b7c4:	10804010 	cmplti	r2,r2,256
  80b7c8:	103fc01e 	bne	r2,zero,80b6cc <__alt_mem_epcs_flash_controller_0+0xff8026cc>
  80b7cc:	0001883a 	nop
  80b7d0:	e6ffff04 	addi	sp,fp,-4
  80b7d4:	dfc00217 	ldw	ra,8(sp)
  80b7d8:	df000117 	ldw	fp,4(sp)
  80b7dc:	dc000017 	ldw	r16,0(sp)
  80b7e0:	dec00304 	addi	sp,sp,12
  80b7e4:	f800283a 	ret

0080b7e8 <start_pass_merged_upsample>:
  80b7e8:	defffd04 	addi	sp,sp,-12
  80b7ec:	df000215 	stw	fp,8(sp)
  80b7f0:	df000204 	addi	fp,sp,8
  80b7f4:	e13fff15 	stw	r4,-4(fp)
  80b7f8:	e0bfff17 	ldw	r2,-4(fp)
  80b7fc:	10807717 	ldw	r2,476(r2)
  80b800:	e0bffe15 	stw	r2,-8(fp)
  80b804:	e0bffe17 	ldw	r2,-8(fp)
  80b808:	10000915 	stw	zero,36(r2)
  80b80c:	e0bfff17 	ldw	r2,-4(fp)
  80b810:	10c01d17 	ldw	r3,116(r2)
  80b814:	e0bffe17 	ldw	r2,-8(fp)
  80b818:	10c00b15 	stw	r3,44(r2)
  80b81c:	0001883a 	nop
  80b820:	e037883a 	mov	sp,fp
  80b824:	df000017 	ldw	fp,0(sp)
  80b828:	dec00104 	addi	sp,sp,4
  80b82c:	f800283a 	ret

0080b830 <merged_2v_upsample>:
  80b830:	defff404 	addi	sp,sp,-48
  80b834:	dfc00b15 	stw	ra,44(sp)
  80b838:	df000a15 	stw	fp,40(sp)
  80b83c:	df000a04 	addi	fp,sp,40
  80b840:	e13ffc15 	stw	r4,-16(fp)
  80b844:	e17ffd15 	stw	r5,-12(fp)
  80b848:	e1bffe15 	stw	r6,-8(fp)
  80b84c:	e1ffff15 	stw	r7,-4(fp)
  80b850:	e0bffc17 	ldw	r2,-16(fp)
  80b854:	10807717 	ldw	r2,476(r2)
  80b858:	e0bff915 	stw	r2,-28(fp)
  80b85c:	e0bff917 	ldw	r2,-28(fp)
  80b860:	10800917 	ldw	r2,36(r2)
  80b864:	10001826 	beq	r2,zero,80b8c8 <merged_2v_upsample+0x98>
  80b868:	e0bff917 	ldw	r2,-28(fp)
  80b86c:	10c00804 	addi	r3,r2,32
  80b870:	e0800317 	ldw	r2,12(fp)
  80b874:	10800017 	ldw	r2,0(r2)
  80b878:	1085883a 	add	r2,r2,r2
  80b87c:	1085883a 	add	r2,r2,r2
  80b880:	1009883a 	mov	r4,r2
  80b884:	e0800217 	ldw	r2,8(fp)
  80b888:	1109883a 	add	r4,r2,r4
  80b88c:	e0bff917 	ldw	r2,-28(fp)
  80b890:	10800a17 	ldw	r2,40(r2)
  80b894:	d8800115 	stw	r2,4(sp)
  80b898:	00800044 	movi	r2,1
  80b89c:	d8800015 	stw	r2,0(sp)
  80b8a0:	000f883a 	mov	r7,zero
  80b8a4:	200d883a 	mov	r6,r4
  80b8a8:	000b883a 	mov	r5,zero
  80b8ac:	1809883a 	mov	r4,r3
  80b8b0:	0813c300 	call	813c30 <jcopy_sample_rows>
  80b8b4:	00800044 	movi	r2,1
  80b8b8:	e0bff815 	stw	r2,-32(fp)
  80b8bc:	e0bff917 	ldw	r2,-28(fp)
  80b8c0:	10000915 	stw	zero,36(r2)
  80b8c4:	00003a06 	br	80b9b0 <merged_2v_upsample+0x180>
  80b8c8:	00800084 	movi	r2,2
  80b8cc:	e0bff815 	stw	r2,-32(fp)
  80b8d0:	e0bff917 	ldw	r2,-28(fp)
  80b8d4:	10c00b17 	ldw	r3,44(r2)
  80b8d8:	e0bff817 	ldw	r2,-32(fp)
  80b8dc:	1880032e 	bgeu	r3,r2,80b8ec <merged_2v_upsample+0xbc>
  80b8e0:	e0bff917 	ldw	r2,-28(fp)
  80b8e4:	10800b17 	ldw	r2,44(r2)
  80b8e8:	e0bff815 	stw	r2,-32(fp)
  80b8ec:	e0800317 	ldw	r2,12(fp)
  80b8f0:	10800017 	ldw	r2,0(r2)
  80b8f4:	e0c00417 	ldw	r3,16(fp)
  80b8f8:	1885c83a 	sub	r2,r3,r2
  80b8fc:	e0800415 	stw	r2,16(fp)
  80b900:	e0bff817 	ldw	r2,-32(fp)
  80b904:	e0c00417 	ldw	r3,16(fp)
  80b908:	1880022e 	bgeu	r3,r2,80b914 <merged_2v_upsample+0xe4>
  80b90c:	e0800417 	ldw	r2,16(fp)
  80b910:	e0bff815 	stw	r2,-32(fp)
  80b914:	e0800317 	ldw	r2,12(fp)
  80b918:	10800017 	ldw	r2,0(r2)
  80b91c:	1085883a 	add	r2,r2,r2
  80b920:	1085883a 	add	r2,r2,r2
  80b924:	1007883a 	mov	r3,r2
  80b928:	e0800217 	ldw	r2,8(fp)
  80b92c:	10c5883a 	add	r2,r2,r3
  80b930:	10800017 	ldw	r2,0(r2)
  80b934:	e0bffa15 	stw	r2,-24(fp)
  80b938:	e0bff817 	ldw	r2,-32(fp)
  80b93c:	108000b0 	cmpltui	r2,r2,2
  80b940:	10000b1e 	bne	r2,zero,80b970 <merged_2v_upsample+0x140>
  80b944:	e0800317 	ldw	r2,12(fp)
  80b948:	10800017 	ldw	r2,0(r2)
  80b94c:	10800044 	addi	r2,r2,1
  80b950:	1085883a 	add	r2,r2,r2
  80b954:	1085883a 	add	r2,r2,r2
  80b958:	1007883a 	mov	r3,r2
  80b95c:	e0800217 	ldw	r2,8(fp)
  80b960:	10c5883a 	add	r2,r2,r3
  80b964:	10800017 	ldw	r2,0(r2)
  80b968:	e0bffb15 	stw	r2,-20(fp)
  80b96c:	00000606 	br	80b988 <merged_2v_upsample+0x158>
  80b970:	e0bff917 	ldw	r2,-28(fp)
  80b974:	10800817 	ldw	r2,32(r2)
  80b978:	e0bffb15 	stw	r2,-20(fp)
  80b97c:	e0bff917 	ldw	r2,-28(fp)
  80b980:	00c00044 	movi	r3,1
  80b984:	10c00915 	stw	r3,36(r2)
  80b988:	e0bff917 	ldw	r2,-28(fp)
  80b98c:	10800317 	ldw	r2,12(r2)
  80b990:	e0fffe17 	ldw	r3,-8(fp)
  80b994:	18c00017 	ldw	r3,0(r3)
  80b998:	e13ffa04 	addi	r4,fp,-24
  80b99c:	200f883a 	mov	r7,r4
  80b9a0:	180d883a 	mov	r6,r3
  80b9a4:	e17ffd17 	ldw	r5,-12(fp)
  80b9a8:	e13ffc17 	ldw	r4,-16(fp)
  80b9ac:	103ee83a 	callr	r2
  80b9b0:	e0800317 	ldw	r2,12(fp)
  80b9b4:	10c00017 	ldw	r3,0(r2)
  80b9b8:	e0bff817 	ldw	r2,-32(fp)
  80b9bc:	1887883a 	add	r3,r3,r2
  80b9c0:	e0800317 	ldw	r2,12(fp)
  80b9c4:	10c00015 	stw	r3,0(r2)
  80b9c8:	e0bff917 	ldw	r2,-28(fp)
  80b9cc:	10c00b17 	ldw	r3,44(r2)
  80b9d0:	e0bff817 	ldw	r2,-32(fp)
  80b9d4:	1887c83a 	sub	r3,r3,r2
  80b9d8:	e0bff917 	ldw	r2,-28(fp)
  80b9dc:	10c00b15 	stw	r3,44(r2)
  80b9e0:	e0bff917 	ldw	r2,-28(fp)
  80b9e4:	10800917 	ldw	r2,36(r2)
  80b9e8:	1000051e 	bne	r2,zero,80ba00 <merged_2v_upsample+0x1d0>
  80b9ec:	e0bffe17 	ldw	r2,-8(fp)
  80b9f0:	10800017 	ldw	r2,0(r2)
  80b9f4:	10c00044 	addi	r3,r2,1
  80b9f8:	e0bffe17 	ldw	r2,-8(fp)
  80b9fc:	10c00015 	stw	r3,0(r2)
  80ba00:	0001883a 	nop
  80ba04:	e037883a 	mov	sp,fp
  80ba08:	dfc00117 	ldw	ra,4(sp)
  80ba0c:	df000017 	ldw	fp,0(sp)
  80ba10:	dec00204 	addi	sp,sp,8
  80ba14:	f800283a 	ret

0080ba18 <merged_1v_upsample>:
  80ba18:	defff904 	addi	sp,sp,-28
  80ba1c:	dfc00615 	stw	ra,24(sp)
  80ba20:	df000515 	stw	fp,20(sp)
  80ba24:	df000504 	addi	fp,sp,20
  80ba28:	e13ffc15 	stw	r4,-16(fp)
  80ba2c:	e17ffd15 	stw	r5,-12(fp)
  80ba30:	e1bffe15 	stw	r6,-8(fp)
  80ba34:	e1ffff15 	stw	r7,-4(fp)
  80ba38:	e0bffc17 	ldw	r2,-16(fp)
  80ba3c:	10807717 	ldw	r2,476(r2)
  80ba40:	e0bffb15 	stw	r2,-20(fp)
  80ba44:	e0bffb17 	ldw	r2,-20(fp)
  80ba48:	10c00317 	ldw	r3,12(r2)
  80ba4c:	e0bffe17 	ldw	r2,-8(fp)
  80ba50:	11000017 	ldw	r4,0(r2)
  80ba54:	e0800317 	ldw	r2,12(fp)
  80ba58:	10800017 	ldw	r2,0(r2)
  80ba5c:	1085883a 	add	r2,r2,r2
  80ba60:	1085883a 	add	r2,r2,r2
  80ba64:	100b883a 	mov	r5,r2
  80ba68:	e0800217 	ldw	r2,8(fp)
  80ba6c:	1145883a 	add	r2,r2,r5
  80ba70:	100f883a 	mov	r7,r2
  80ba74:	200d883a 	mov	r6,r4
  80ba78:	e17ffd17 	ldw	r5,-12(fp)
  80ba7c:	e13ffc17 	ldw	r4,-16(fp)
  80ba80:	183ee83a 	callr	r3
  80ba84:	e0800317 	ldw	r2,12(fp)
  80ba88:	10800017 	ldw	r2,0(r2)
  80ba8c:	10c00044 	addi	r3,r2,1
  80ba90:	e0800317 	ldw	r2,12(fp)
  80ba94:	10c00015 	stw	r3,0(r2)
  80ba98:	e0bffe17 	ldw	r2,-8(fp)
  80ba9c:	10800017 	ldw	r2,0(r2)
  80baa0:	10c00044 	addi	r3,r2,1
  80baa4:	e0bffe17 	ldw	r2,-8(fp)
  80baa8:	10c00015 	stw	r3,0(r2)
  80baac:	0001883a 	nop
  80bab0:	e037883a 	mov	sp,fp
  80bab4:	dfc00117 	ldw	ra,4(sp)
  80bab8:	df000017 	ldw	fp,0(sp)
  80babc:	dec00204 	addi	sp,sp,8
  80bac0:	f800283a 	ret

0080bac4 <h2v1_merged_upsample>:
  80bac4:	deffea04 	addi	sp,sp,-88
  80bac8:	df001515 	stw	fp,84(sp)
  80bacc:	dd401415 	stw	r21,80(sp)
  80bad0:	dd001315 	stw	r20,76(sp)
  80bad4:	dcc01215 	stw	r19,72(sp)
  80bad8:	dc801115 	stw	r18,68(sp)
  80badc:	dc401015 	stw	r17,64(sp)
  80bae0:	dc000f15 	stw	r16,60(sp)
  80bae4:	df001504 	addi	fp,sp,84
  80bae8:	e13ff615 	stw	r4,-40(fp)
  80baec:	e17ff715 	stw	r5,-36(fp)
  80baf0:	e1bff815 	stw	r6,-32(fp)
  80baf4:	e1fff915 	stw	r7,-28(fp)
  80baf8:	e0bff617 	ldw	r2,-40(fp)
  80bafc:	10807717 	ldw	r2,476(r2)
  80bb00:	e0bfef15 	stw	r2,-68(fp)
  80bb04:	e0bff617 	ldw	r2,-40(fp)
  80bb08:	14805417 	ldw	r18,336(r2)
  80bb0c:	e0bfef17 	ldw	r2,-68(fp)
  80bb10:	10800417 	ldw	r2,16(r2)
  80bb14:	e0bff015 	stw	r2,-64(fp)
  80bb18:	e0bfef17 	ldw	r2,-68(fp)
  80bb1c:	10800517 	ldw	r2,20(r2)
  80bb20:	e0bff115 	stw	r2,-60(fp)
  80bb24:	e0bfef17 	ldw	r2,-68(fp)
  80bb28:	10800617 	ldw	r2,24(r2)
  80bb2c:	e0bff215 	stw	r2,-56(fp)
  80bb30:	e0bfef17 	ldw	r2,-68(fp)
  80bb34:	10800717 	ldw	r2,28(r2)
  80bb38:	e0bff315 	stw	r2,-52(fp)
  80bb3c:	e0bff717 	ldw	r2,-36(fp)
  80bb40:	10c00017 	ldw	r3,0(r2)
  80bb44:	e0bff817 	ldw	r2,-32(fp)
  80bb48:	1085883a 	add	r2,r2,r2
  80bb4c:	1085883a 	add	r2,r2,r2
  80bb50:	1885883a 	add	r2,r3,r2
  80bb54:	10800017 	ldw	r2,0(r2)
  80bb58:	e0bfeb15 	stw	r2,-84(fp)
  80bb5c:	e0bff717 	ldw	r2,-36(fp)
  80bb60:	10800104 	addi	r2,r2,4
  80bb64:	10c00017 	ldw	r3,0(r2)
  80bb68:	e0bff817 	ldw	r2,-32(fp)
  80bb6c:	1085883a 	add	r2,r2,r2
  80bb70:	1085883a 	add	r2,r2,r2
  80bb74:	1885883a 	add	r2,r3,r2
  80bb78:	10800017 	ldw	r2,0(r2)
  80bb7c:	e0bfec15 	stw	r2,-80(fp)
  80bb80:	e0bff717 	ldw	r2,-36(fp)
  80bb84:	10800204 	addi	r2,r2,8
  80bb88:	10c00017 	ldw	r3,0(r2)
  80bb8c:	e0bff817 	ldw	r2,-32(fp)
  80bb90:	1085883a 	add	r2,r2,r2
  80bb94:	1085883a 	add	r2,r2,r2
  80bb98:	1885883a 	add	r2,r3,r2
  80bb9c:	10800017 	ldw	r2,0(r2)
  80bba0:	e0bfed15 	stw	r2,-76(fp)
  80bba4:	e0bff917 	ldw	r2,-28(fp)
  80bba8:	14000017 	ldw	r16,0(r2)
  80bbac:	e0bff617 	ldw	r2,-40(fp)
  80bbb0:	10801c17 	ldw	r2,112(r2)
  80bbb4:	1004d07a 	srli	r2,r2,1
  80bbb8:	e0bfee15 	stw	r2,-72(fp)
  80bbbc:	00005506 	br	80bd14 <h2v1_merged_upsample+0x250>
  80bbc0:	e0bfec17 	ldw	r2,-80(fp)
  80bbc4:	10c00044 	addi	r3,r2,1
  80bbc8:	e0ffec15 	stw	r3,-80(fp)
  80bbcc:	10800003 	ldbu	r2,0(r2)
  80bbd0:	10803fcc 	andi	r2,r2,255
  80bbd4:	e0bff415 	stw	r2,-48(fp)
  80bbd8:	e0bfed17 	ldw	r2,-76(fp)
  80bbdc:	10c00044 	addi	r3,r2,1
  80bbe0:	e0ffed15 	stw	r3,-76(fp)
  80bbe4:	10800003 	ldbu	r2,0(r2)
  80bbe8:	10803fcc 	andi	r2,r2,255
  80bbec:	e0bff515 	stw	r2,-44(fp)
  80bbf0:	e0bff517 	ldw	r2,-44(fp)
  80bbf4:	1085883a 	add	r2,r2,r2
  80bbf8:	1085883a 	add	r2,r2,r2
  80bbfc:	1007883a 	mov	r3,r2
  80bc00:	e0bff017 	ldw	r2,-64(fp)
  80bc04:	10c5883a 	add	r2,r2,r3
  80bc08:	15400017 	ldw	r21,0(r2)
  80bc0c:	e0bff417 	ldw	r2,-48(fp)
  80bc10:	1085883a 	add	r2,r2,r2
  80bc14:	1085883a 	add	r2,r2,r2
  80bc18:	1007883a 	mov	r3,r2
  80bc1c:	e0bff317 	ldw	r2,-52(fp)
  80bc20:	10c5883a 	add	r2,r2,r3
  80bc24:	10c00017 	ldw	r3,0(r2)
  80bc28:	e0bff517 	ldw	r2,-44(fp)
  80bc2c:	1085883a 	add	r2,r2,r2
  80bc30:	1085883a 	add	r2,r2,r2
  80bc34:	1009883a 	mov	r4,r2
  80bc38:	e0bff217 	ldw	r2,-56(fp)
  80bc3c:	1105883a 	add	r2,r2,r4
  80bc40:	10800017 	ldw	r2,0(r2)
  80bc44:	1885883a 	add	r2,r3,r2
  80bc48:	1029d43a 	srai	r20,r2,16
  80bc4c:	e0bff417 	ldw	r2,-48(fp)
  80bc50:	1085883a 	add	r2,r2,r2
  80bc54:	1085883a 	add	r2,r2,r2
  80bc58:	1007883a 	mov	r3,r2
  80bc5c:	e0bff117 	ldw	r2,-60(fp)
  80bc60:	10c5883a 	add	r2,r2,r3
  80bc64:	14c00017 	ldw	r19,0(r2)
  80bc68:	e0bfeb17 	ldw	r2,-84(fp)
  80bc6c:	10c00044 	addi	r3,r2,1
  80bc70:	e0ffeb15 	stw	r3,-84(fp)
  80bc74:	10800003 	ldbu	r2,0(r2)
  80bc78:	14403fcc 	andi	r17,r2,255
  80bc7c:	8d45883a 	add	r2,r17,r21
  80bc80:	9085883a 	add	r2,r18,r2
  80bc84:	10800003 	ldbu	r2,0(r2)
  80bc88:	80800005 	stb	r2,0(r16)
  80bc8c:	80800044 	addi	r2,r16,1
  80bc90:	8d07883a 	add	r3,r17,r20
  80bc94:	90c7883a 	add	r3,r18,r3
  80bc98:	18c00003 	ldbu	r3,0(r3)
  80bc9c:	10c00005 	stb	r3,0(r2)
  80bca0:	80800084 	addi	r2,r16,2
  80bca4:	8cc7883a 	add	r3,r17,r19
  80bca8:	90c7883a 	add	r3,r18,r3
  80bcac:	18c00003 	ldbu	r3,0(r3)
  80bcb0:	10c00005 	stb	r3,0(r2)
  80bcb4:	840000c4 	addi	r16,r16,3
  80bcb8:	e0bfeb17 	ldw	r2,-84(fp)
  80bcbc:	10c00044 	addi	r3,r2,1
  80bcc0:	e0ffeb15 	stw	r3,-84(fp)
  80bcc4:	10800003 	ldbu	r2,0(r2)
  80bcc8:	14403fcc 	andi	r17,r2,255
  80bccc:	8d45883a 	add	r2,r17,r21
  80bcd0:	9085883a 	add	r2,r18,r2
  80bcd4:	10800003 	ldbu	r2,0(r2)
  80bcd8:	80800005 	stb	r2,0(r16)
  80bcdc:	80800044 	addi	r2,r16,1
  80bce0:	8d07883a 	add	r3,r17,r20
  80bce4:	90c7883a 	add	r3,r18,r3
  80bce8:	18c00003 	ldbu	r3,0(r3)
  80bcec:	10c00005 	stb	r3,0(r2)
  80bcf0:	80800084 	addi	r2,r16,2
  80bcf4:	8cc7883a 	add	r3,r17,r19
  80bcf8:	90c7883a 	add	r3,r18,r3
  80bcfc:	18c00003 	ldbu	r3,0(r3)
  80bd00:	10c00005 	stb	r3,0(r2)
  80bd04:	840000c4 	addi	r16,r16,3
  80bd08:	e0bfee17 	ldw	r2,-72(fp)
  80bd0c:	10bfffc4 	addi	r2,r2,-1
  80bd10:	e0bfee15 	stw	r2,-72(fp)
  80bd14:	e0bfee17 	ldw	r2,-72(fp)
  80bd18:	103fa91e 	bne	r2,zero,80bbc0 <__alt_mem_epcs_flash_controller_0+0xff802bc0>
  80bd1c:	e0bff617 	ldw	r2,-40(fp)
  80bd20:	10801c17 	ldw	r2,112(r2)
  80bd24:	1080004c 	andi	r2,r2,1
  80bd28:	10003726 	beq	r2,zero,80be08 <h2v1_merged_upsample+0x344>
  80bd2c:	e0bfec17 	ldw	r2,-80(fp)
  80bd30:	10800003 	ldbu	r2,0(r2)
  80bd34:	10803fcc 	andi	r2,r2,255
  80bd38:	e0bff415 	stw	r2,-48(fp)
  80bd3c:	e0bfed17 	ldw	r2,-76(fp)
  80bd40:	10800003 	ldbu	r2,0(r2)
  80bd44:	10803fcc 	andi	r2,r2,255
  80bd48:	e0bff515 	stw	r2,-44(fp)
  80bd4c:	e0bff517 	ldw	r2,-44(fp)
  80bd50:	1085883a 	add	r2,r2,r2
  80bd54:	1085883a 	add	r2,r2,r2
  80bd58:	1007883a 	mov	r3,r2
  80bd5c:	e0bff017 	ldw	r2,-64(fp)
  80bd60:	10c5883a 	add	r2,r2,r3
  80bd64:	15400017 	ldw	r21,0(r2)
  80bd68:	e0bff417 	ldw	r2,-48(fp)
  80bd6c:	1085883a 	add	r2,r2,r2
  80bd70:	1085883a 	add	r2,r2,r2
  80bd74:	1007883a 	mov	r3,r2
  80bd78:	e0bff317 	ldw	r2,-52(fp)
  80bd7c:	10c5883a 	add	r2,r2,r3
  80bd80:	10c00017 	ldw	r3,0(r2)
  80bd84:	e0bff517 	ldw	r2,-44(fp)
  80bd88:	1085883a 	add	r2,r2,r2
  80bd8c:	1085883a 	add	r2,r2,r2
  80bd90:	1009883a 	mov	r4,r2
  80bd94:	e0bff217 	ldw	r2,-56(fp)
  80bd98:	1105883a 	add	r2,r2,r4
  80bd9c:	10800017 	ldw	r2,0(r2)
  80bda0:	1885883a 	add	r2,r3,r2
  80bda4:	1029d43a 	srai	r20,r2,16
  80bda8:	e0bff417 	ldw	r2,-48(fp)
  80bdac:	1085883a 	add	r2,r2,r2
  80bdb0:	1085883a 	add	r2,r2,r2
  80bdb4:	1007883a 	mov	r3,r2
  80bdb8:	e0bff117 	ldw	r2,-60(fp)
  80bdbc:	10c5883a 	add	r2,r2,r3
  80bdc0:	14c00017 	ldw	r19,0(r2)
  80bdc4:	e0bfeb17 	ldw	r2,-84(fp)
  80bdc8:	10800003 	ldbu	r2,0(r2)
  80bdcc:	14403fcc 	andi	r17,r2,255
  80bdd0:	8d45883a 	add	r2,r17,r21
  80bdd4:	9085883a 	add	r2,r18,r2
  80bdd8:	10800003 	ldbu	r2,0(r2)
  80bddc:	80800005 	stb	r2,0(r16)
  80bde0:	80800044 	addi	r2,r16,1
  80bde4:	8d07883a 	add	r3,r17,r20
  80bde8:	90c7883a 	add	r3,r18,r3
  80bdec:	18c00003 	ldbu	r3,0(r3)
  80bdf0:	10c00005 	stb	r3,0(r2)
  80bdf4:	80800084 	addi	r2,r16,2
  80bdf8:	8cc7883a 	add	r3,r17,r19
  80bdfc:	90c7883a 	add	r3,r18,r3
  80be00:	18c00003 	ldbu	r3,0(r3)
  80be04:	10c00005 	stb	r3,0(r2)
  80be08:	0001883a 	nop
  80be0c:	e6fffa04 	addi	sp,fp,-24
  80be10:	df000617 	ldw	fp,24(sp)
  80be14:	dd400517 	ldw	r21,20(sp)
  80be18:	dd000417 	ldw	r20,16(sp)
  80be1c:	dcc00317 	ldw	r19,12(sp)
  80be20:	dc800217 	ldw	r18,8(sp)
  80be24:	dc400117 	ldw	r17,4(sp)
  80be28:	dc000017 	ldw	r16,0(sp)
  80be2c:	dec00704 	addi	sp,sp,28
  80be30:	f800283a 	ret

0080be34 <h2v2_merged_upsample>:
  80be34:	deffe804 	addi	sp,sp,-96
  80be38:	df001715 	stw	fp,92(sp)
  80be3c:	dd801615 	stw	r22,88(sp)
  80be40:	dd401515 	stw	r21,84(sp)
  80be44:	dd001415 	stw	r20,80(sp)
  80be48:	dcc01315 	stw	r19,76(sp)
  80be4c:	dc801215 	stw	r18,72(sp)
  80be50:	dc401115 	stw	r17,68(sp)
  80be54:	dc001015 	stw	r16,64(sp)
  80be58:	df001704 	addi	fp,sp,92
  80be5c:	e13ff515 	stw	r4,-44(fp)
  80be60:	e17ff615 	stw	r5,-40(fp)
  80be64:	e1bff715 	stw	r6,-36(fp)
  80be68:	e1fff815 	stw	r7,-32(fp)
  80be6c:	e0bff517 	ldw	r2,-44(fp)
  80be70:	10807717 	ldw	r2,476(r2)
  80be74:	e0bfee15 	stw	r2,-72(fp)
  80be78:	e0bff517 	ldw	r2,-44(fp)
  80be7c:	14405417 	ldw	r17,336(r2)
  80be80:	e0bfee17 	ldw	r2,-72(fp)
  80be84:	10800417 	ldw	r2,16(r2)
  80be88:	e0bfef15 	stw	r2,-68(fp)
  80be8c:	e0bfee17 	ldw	r2,-72(fp)
  80be90:	10800517 	ldw	r2,20(r2)
  80be94:	e0bff015 	stw	r2,-64(fp)
  80be98:	e0bfee17 	ldw	r2,-72(fp)
  80be9c:	10800617 	ldw	r2,24(r2)
  80bea0:	e0bff115 	stw	r2,-60(fp)
  80bea4:	e0bfee17 	ldw	r2,-72(fp)
  80bea8:	10800717 	ldw	r2,28(r2)
  80beac:	e0bff215 	stw	r2,-56(fp)
  80beb0:	e0bff617 	ldw	r2,-40(fp)
  80beb4:	10c00017 	ldw	r3,0(r2)
  80beb8:	e0bff717 	ldw	r2,-36(fp)
  80bebc:	100490fa 	slli	r2,r2,3
  80bec0:	1885883a 	add	r2,r3,r2
  80bec4:	10800017 	ldw	r2,0(r2)
  80bec8:	e0bfe915 	stw	r2,-92(fp)
  80becc:	e0bff617 	ldw	r2,-40(fp)
  80bed0:	10c00017 	ldw	r3,0(r2)
  80bed4:	e0bff717 	ldw	r2,-36(fp)
  80bed8:	100490fa 	slli	r2,r2,3
  80bedc:	10800104 	addi	r2,r2,4
  80bee0:	1885883a 	add	r2,r3,r2
  80bee4:	10800017 	ldw	r2,0(r2)
  80bee8:	e0bfea15 	stw	r2,-88(fp)
  80beec:	e0bff617 	ldw	r2,-40(fp)
  80bef0:	10800104 	addi	r2,r2,4
  80bef4:	10c00017 	ldw	r3,0(r2)
  80bef8:	e0bff717 	ldw	r2,-36(fp)
  80befc:	1085883a 	add	r2,r2,r2
  80bf00:	1085883a 	add	r2,r2,r2
  80bf04:	1885883a 	add	r2,r3,r2
  80bf08:	10800017 	ldw	r2,0(r2)
  80bf0c:	e0bfeb15 	stw	r2,-84(fp)
  80bf10:	e0bff617 	ldw	r2,-40(fp)
  80bf14:	10800204 	addi	r2,r2,8
  80bf18:	10c00017 	ldw	r3,0(r2)
  80bf1c:	e0bff717 	ldw	r2,-36(fp)
  80bf20:	1085883a 	add	r2,r2,r2
  80bf24:	1085883a 	add	r2,r2,r2
  80bf28:	1885883a 	add	r2,r3,r2
  80bf2c:	10800017 	ldw	r2,0(r2)
  80bf30:	e0bfec15 	stw	r2,-80(fp)
  80bf34:	e0bff817 	ldw	r2,-32(fp)
  80bf38:	14c00017 	ldw	r19,0(r2)
  80bf3c:	e0bff817 	ldw	r2,-32(fp)
  80bf40:	14800117 	ldw	r18,4(r2)
  80bf44:	e0bff517 	ldw	r2,-44(fp)
  80bf48:	10801c17 	ldw	r2,112(r2)
  80bf4c:	1004d07a 	srli	r2,r2,1
  80bf50:	e0bfed15 	stw	r2,-76(fp)
  80bf54:	00007d06 	br	80c14c <h2v2_merged_upsample+0x318>
  80bf58:	e0bfeb17 	ldw	r2,-84(fp)
  80bf5c:	10c00044 	addi	r3,r2,1
  80bf60:	e0ffeb15 	stw	r3,-84(fp)
  80bf64:	10800003 	ldbu	r2,0(r2)
  80bf68:	10803fcc 	andi	r2,r2,255
  80bf6c:	e0bff315 	stw	r2,-52(fp)
  80bf70:	e0bfec17 	ldw	r2,-80(fp)
  80bf74:	10c00044 	addi	r3,r2,1
  80bf78:	e0ffec15 	stw	r3,-80(fp)
  80bf7c:	10800003 	ldbu	r2,0(r2)
  80bf80:	10803fcc 	andi	r2,r2,255
  80bf84:	e0bff415 	stw	r2,-48(fp)
  80bf88:	e0bff417 	ldw	r2,-48(fp)
  80bf8c:	1085883a 	add	r2,r2,r2
  80bf90:	1085883a 	add	r2,r2,r2
  80bf94:	1007883a 	mov	r3,r2
  80bf98:	e0bfef17 	ldw	r2,-68(fp)
  80bf9c:	10c5883a 	add	r2,r2,r3
  80bfa0:	15800017 	ldw	r22,0(r2)
  80bfa4:	e0bff317 	ldw	r2,-52(fp)
  80bfa8:	1085883a 	add	r2,r2,r2
  80bfac:	1085883a 	add	r2,r2,r2
  80bfb0:	1007883a 	mov	r3,r2
  80bfb4:	e0bff217 	ldw	r2,-56(fp)
  80bfb8:	10c5883a 	add	r2,r2,r3
  80bfbc:	10c00017 	ldw	r3,0(r2)
  80bfc0:	e0bff417 	ldw	r2,-48(fp)
  80bfc4:	1085883a 	add	r2,r2,r2
  80bfc8:	1085883a 	add	r2,r2,r2
  80bfcc:	1009883a 	mov	r4,r2
  80bfd0:	e0bff117 	ldw	r2,-60(fp)
  80bfd4:	1105883a 	add	r2,r2,r4
  80bfd8:	10800017 	ldw	r2,0(r2)
  80bfdc:	1885883a 	add	r2,r3,r2
  80bfe0:	102bd43a 	srai	r21,r2,16
  80bfe4:	e0bff317 	ldw	r2,-52(fp)
  80bfe8:	1085883a 	add	r2,r2,r2
  80bfec:	1085883a 	add	r2,r2,r2
  80bff0:	1007883a 	mov	r3,r2
  80bff4:	e0bff017 	ldw	r2,-64(fp)
  80bff8:	10c5883a 	add	r2,r2,r3
  80bffc:	15000017 	ldw	r20,0(r2)
  80c000:	e0bfe917 	ldw	r2,-92(fp)
  80c004:	10c00044 	addi	r3,r2,1
  80c008:	e0ffe915 	stw	r3,-92(fp)
  80c00c:	10800003 	ldbu	r2,0(r2)
  80c010:	14003fcc 	andi	r16,r2,255
  80c014:	8585883a 	add	r2,r16,r22
  80c018:	8885883a 	add	r2,r17,r2
  80c01c:	10800003 	ldbu	r2,0(r2)
  80c020:	98800005 	stb	r2,0(r19)
  80c024:	98800044 	addi	r2,r19,1
  80c028:	8547883a 	add	r3,r16,r21
  80c02c:	88c7883a 	add	r3,r17,r3
  80c030:	18c00003 	ldbu	r3,0(r3)
  80c034:	10c00005 	stb	r3,0(r2)
  80c038:	98800084 	addi	r2,r19,2
  80c03c:	8507883a 	add	r3,r16,r20
  80c040:	88c7883a 	add	r3,r17,r3
  80c044:	18c00003 	ldbu	r3,0(r3)
  80c048:	10c00005 	stb	r3,0(r2)
  80c04c:	9cc000c4 	addi	r19,r19,3
  80c050:	e0bfe917 	ldw	r2,-92(fp)
  80c054:	10c00044 	addi	r3,r2,1
  80c058:	e0ffe915 	stw	r3,-92(fp)
  80c05c:	10800003 	ldbu	r2,0(r2)
  80c060:	14003fcc 	andi	r16,r2,255
  80c064:	8585883a 	add	r2,r16,r22
  80c068:	8885883a 	add	r2,r17,r2
  80c06c:	10800003 	ldbu	r2,0(r2)
  80c070:	98800005 	stb	r2,0(r19)
  80c074:	98800044 	addi	r2,r19,1
  80c078:	8547883a 	add	r3,r16,r21
  80c07c:	88c7883a 	add	r3,r17,r3
  80c080:	18c00003 	ldbu	r3,0(r3)
  80c084:	10c00005 	stb	r3,0(r2)
  80c088:	98800084 	addi	r2,r19,2
  80c08c:	8507883a 	add	r3,r16,r20
  80c090:	88c7883a 	add	r3,r17,r3
  80c094:	18c00003 	ldbu	r3,0(r3)
  80c098:	10c00005 	stb	r3,0(r2)
  80c09c:	9cc000c4 	addi	r19,r19,3
  80c0a0:	e0bfea17 	ldw	r2,-88(fp)
  80c0a4:	10c00044 	addi	r3,r2,1
  80c0a8:	e0ffea15 	stw	r3,-88(fp)
  80c0ac:	10800003 	ldbu	r2,0(r2)
  80c0b0:	14003fcc 	andi	r16,r2,255
  80c0b4:	8585883a 	add	r2,r16,r22
  80c0b8:	8885883a 	add	r2,r17,r2
  80c0bc:	10800003 	ldbu	r2,0(r2)
  80c0c0:	90800005 	stb	r2,0(r18)
  80c0c4:	90800044 	addi	r2,r18,1
  80c0c8:	8547883a 	add	r3,r16,r21
  80c0cc:	88c7883a 	add	r3,r17,r3
  80c0d0:	18c00003 	ldbu	r3,0(r3)
  80c0d4:	10c00005 	stb	r3,0(r2)
  80c0d8:	90800084 	addi	r2,r18,2
  80c0dc:	8507883a 	add	r3,r16,r20
  80c0e0:	88c7883a 	add	r3,r17,r3
  80c0e4:	18c00003 	ldbu	r3,0(r3)
  80c0e8:	10c00005 	stb	r3,0(r2)
  80c0ec:	948000c4 	addi	r18,r18,3
  80c0f0:	e0bfea17 	ldw	r2,-88(fp)
  80c0f4:	10c00044 	addi	r3,r2,1
  80c0f8:	e0ffea15 	stw	r3,-88(fp)
  80c0fc:	10800003 	ldbu	r2,0(r2)
  80c100:	14003fcc 	andi	r16,r2,255
  80c104:	8585883a 	add	r2,r16,r22
  80c108:	8885883a 	add	r2,r17,r2
  80c10c:	10800003 	ldbu	r2,0(r2)
  80c110:	90800005 	stb	r2,0(r18)
  80c114:	90800044 	addi	r2,r18,1
  80c118:	8547883a 	add	r3,r16,r21
  80c11c:	88c7883a 	add	r3,r17,r3
  80c120:	18c00003 	ldbu	r3,0(r3)
  80c124:	10c00005 	stb	r3,0(r2)
  80c128:	90800084 	addi	r2,r18,2
  80c12c:	8507883a 	add	r3,r16,r20
  80c130:	88c7883a 	add	r3,r17,r3
  80c134:	18c00003 	ldbu	r3,0(r3)
  80c138:	10c00005 	stb	r3,0(r2)
  80c13c:	948000c4 	addi	r18,r18,3
  80c140:	e0bfed17 	ldw	r2,-76(fp)
  80c144:	10bfffc4 	addi	r2,r2,-1
  80c148:	e0bfed15 	stw	r2,-76(fp)
  80c14c:	e0bfed17 	ldw	r2,-76(fp)
  80c150:	103f811e 	bne	r2,zero,80bf58 <__alt_mem_epcs_flash_controller_0+0xff802f58>
  80c154:	e0bff517 	ldw	r2,-44(fp)
  80c158:	10801c17 	ldw	r2,112(r2)
  80c15c:	1080004c 	andi	r2,r2,1
  80c160:	10004826 	beq	r2,zero,80c284 <h2v2_merged_upsample+0x450>
  80c164:	e0bfeb17 	ldw	r2,-84(fp)
  80c168:	10800003 	ldbu	r2,0(r2)
  80c16c:	10803fcc 	andi	r2,r2,255
  80c170:	e0bff315 	stw	r2,-52(fp)
  80c174:	e0bfec17 	ldw	r2,-80(fp)
  80c178:	10800003 	ldbu	r2,0(r2)
  80c17c:	10803fcc 	andi	r2,r2,255
  80c180:	e0bff415 	stw	r2,-48(fp)
  80c184:	e0bff417 	ldw	r2,-48(fp)
  80c188:	1085883a 	add	r2,r2,r2
  80c18c:	1085883a 	add	r2,r2,r2
  80c190:	1007883a 	mov	r3,r2
  80c194:	e0bfef17 	ldw	r2,-68(fp)
  80c198:	10c5883a 	add	r2,r2,r3
  80c19c:	15800017 	ldw	r22,0(r2)
  80c1a0:	e0bff317 	ldw	r2,-52(fp)
  80c1a4:	1085883a 	add	r2,r2,r2
  80c1a8:	1085883a 	add	r2,r2,r2
  80c1ac:	1007883a 	mov	r3,r2
  80c1b0:	e0bff217 	ldw	r2,-56(fp)
  80c1b4:	10c5883a 	add	r2,r2,r3
  80c1b8:	10c00017 	ldw	r3,0(r2)
  80c1bc:	e0bff417 	ldw	r2,-48(fp)
  80c1c0:	1085883a 	add	r2,r2,r2
  80c1c4:	1085883a 	add	r2,r2,r2
  80c1c8:	1009883a 	mov	r4,r2
  80c1cc:	e0bff117 	ldw	r2,-60(fp)
  80c1d0:	1105883a 	add	r2,r2,r4
  80c1d4:	10800017 	ldw	r2,0(r2)
  80c1d8:	1885883a 	add	r2,r3,r2
  80c1dc:	102bd43a 	srai	r21,r2,16
  80c1e0:	e0bff317 	ldw	r2,-52(fp)
  80c1e4:	1085883a 	add	r2,r2,r2
  80c1e8:	1085883a 	add	r2,r2,r2
  80c1ec:	1007883a 	mov	r3,r2
  80c1f0:	e0bff017 	ldw	r2,-64(fp)
  80c1f4:	10c5883a 	add	r2,r2,r3
  80c1f8:	15000017 	ldw	r20,0(r2)
  80c1fc:	e0bfe917 	ldw	r2,-92(fp)
  80c200:	10800003 	ldbu	r2,0(r2)
  80c204:	14003fcc 	andi	r16,r2,255
  80c208:	8585883a 	add	r2,r16,r22
  80c20c:	8885883a 	add	r2,r17,r2
  80c210:	10800003 	ldbu	r2,0(r2)
  80c214:	98800005 	stb	r2,0(r19)
  80c218:	98800044 	addi	r2,r19,1
  80c21c:	8547883a 	add	r3,r16,r21
  80c220:	88c7883a 	add	r3,r17,r3
  80c224:	18c00003 	ldbu	r3,0(r3)
  80c228:	10c00005 	stb	r3,0(r2)
  80c22c:	98800084 	addi	r2,r19,2
  80c230:	8507883a 	add	r3,r16,r20
  80c234:	88c7883a 	add	r3,r17,r3
  80c238:	18c00003 	ldbu	r3,0(r3)
  80c23c:	10c00005 	stb	r3,0(r2)
  80c240:	e0bfea17 	ldw	r2,-88(fp)
  80c244:	10800003 	ldbu	r2,0(r2)
  80c248:	14003fcc 	andi	r16,r2,255
  80c24c:	8585883a 	add	r2,r16,r22
  80c250:	8885883a 	add	r2,r17,r2
  80c254:	10800003 	ldbu	r2,0(r2)
  80c258:	90800005 	stb	r2,0(r18)
  80c25c:	90800044 	addi	r2,r18,1
  80c260:	8547883a 	add	r3,r16,r21
  80c264:	88c7883a 	add	r3,r17,r3
  80c268:	18c00003 	ldbu	r3,0(r3)
  80c26c:	10c00005 	stb	r3,0(r2)
  80c270:	90800084 	addi	r2,r18,2
  80c274:	8507883a 	add	r3,r16,r20
  80c278:	88c7883a 	add	r3,r17,r3
  80c27c:	18c00003 	ldbu	r3,0(r3)
  80c280:	10c00005 	stb	r3,0(r2)
  80c284:	0001883a 	nop
  80c288:	e6fff904 	addi	sp,fp,-28
  80c28c:	df000717 	ldw	fp,28(sp)
  80c290:	dd800617 	ldw	r22,24(sp)
  80c294:	dd400517 	ldw	r21,20(sp)
  80c298:	dd000417 	ldw	r20,16(sp)
  80c29c:	dcc00317 	ldw	r19,12(sp)
  80c2a0:	dc800217 	ldw	r18,8(sp)
  80c2a4:	dc400117 	ldw	r17,4(sp)
  80c2a8:	dc000017 	ldw	r16,0(sp)
  80c2ac:	dec00804 	addi	sp,sp,32
  80c2b0:	f800283a 	ret

0080c2b4 <jinit_merged_upsampler>:
  80c2b4:	defffc04 	addi	sp,sp,-16
  80c2b8:	dfc00315 	stw	ra,12(sp)
  80c2bc:	df000215 	stw	fp,8(sp)
  80c2c0:	df000204 	addi	fp,sp,8
  80c2c4:	e13fff15 	stw	r4,-4(fp)
  80c2c8:	e0bfff17 	ldw	r2,-4(fp)
  80c2cc:	10800117 	ldw	r2,4(r2)
  80c2d0:	10800017 	ldw	r2,0(r2)
  80c2d4:	01800c04 	movi	r6,48
  80c2d8:	01400044 	movi	r5,1
  80c2dc:	e13fff17 	ldw	r4,-4(fp)
  80c2e0:	103ee83a 	callr	r2
  80c2e4:	e0bffe15 	stw	r2,-8(fp)
  80c2e8:	e0fffe17 	ldw	r3,-8(fp)
  80c2ec:	e0bfff17 	ldw	r2,-4(fp)
  80c2f0:	10c07715 	stw	r3,476(r2)
  80c2f4:	e0fffe17 	ldw	r3,-8(fp)
  80c2f8:	00802074 	movhi	r2,129
  80c2fc:	10adfa04 	addi	r2,r2,-18456
  80c300:	18800015 	stw	r2,0(r3)
  80c304:	e0bffe17 	ldw	r2,-8(fp)
  80c308:	10000215 	stw	zero,8(r2)
  80c30c:	e0bfff17 	ldw	r2,-4(fp)
  80c310:	10c01c17 	ldw	r3,112(r2)
  80c314:	e0bfff17 	ldw	r2,-4(fp)
  80c318:	10801e17 	ldw	r2,120(r2)
  80c31c:	100b883a 	mov	r5,r2
  80c320:	1809883a 	mov	r4,r3
  80c324:	08301e80 	call	8301e8 <__mulsi3>
  80c328:	1007883a 	mov	r3,r2
  80c32c:	e0bffe17 	ldw	r2,-8(fp)
  80c330:	10c00a15 	stw	r3,40(r2)
  80c334:	e0bfff17 	ldw	r2,-4(fp)
  80c338:	10805017 	ldw	r2,320(r2)
  80c33c:	10800098 	cmpnei	r2,r2,2
  80c340:	1000151e 	bne	r2,zero,80c398 <jinit_merged_upsampler+0xe4>
  80c344:	e0fffe17 	ldw	r3,-8(fp)
  80c348:	00802074 	movhi	r2,129
  80c34c:	10ae0c04 	addi	r2,r2,-18384
  80c350:	18800115 	stw	r2,4(r3)
  80c354:	e0fffe17 	ldw	r3,-8(fp)
  80c358:	00802074 	movhi	r2,129
  80c35c:	10af8d04 	addi	r2,r2,-16844
  80c360:	18800315 	stw	r2,12(r3)
  80c364:	e0bfff17 	ldw	r2,-4(fp)
  80c368:	10800117 	ldw	r2,4(r2)
  80c36c:	10800117 	ldw	r2,4(r2)
  80c370:	e0fffe17 	ldw	r3,-8(fp)
  80c374:	18c00a17 	ldw	r3,40(r3)
  80c378:	180d883a 	mov	r6,r3
  80c37c:	01400044 	movi	r5,1
  80c380:	e13fff17 	ldw	r4,-4(fp)
  80c384:	103ee83a 	callr	r2
  80c388:	1007883a 	mov	r3,r2
  80c38c:	e0bffe17 	ldw	r2,-8(fp)
  80c390:	10c00815 	stw	r3,32(r2)
  80c394:	00000a06 	br	80c3c0 <jinit_merged_upsampler+0x10c>
  80c398:	e0fffe17 	ldw	r3,-8(fp)
  80c39c:	00802074 	movhi	r2,129
  80c3a0:	10ae8604 	addi	r2,r2,-17896
  80c3a4:	18800115 	stw	r2,4(r3)
  80c3a8:	e0fffe17 	ldw	r3,-8(fp)
  80c3ac:	00802074 	movhi	r2,129
  80c3b0:	10aeb104 	addi	r2,r2,-17724
  80c3b4:	18800315 	stw	r2,12(r3)
  80c3b8:	e0bffe17 	ldw	r2,-8(fp)
  80c3bc:	10000815 	stw	zero,32(r2)
  80c3c0:	e0bfff17 	ldw	r2,-4(fp)
  80c3c4:	10800a17 	ldw	r2,40(r2)
  80c3c8:	108001d8 	cmpnei	r2,r2,7
  80c3cc:	1000031e 	bne	r2,zero,80c3dc <jinit_merged_upsampler+0x128>
  80c3d0:	e13fff17 	ldw	r4,-4(fp)
  80c3d4:	080b5f80 	call	80b5f8 <build_bg_ycc_rgb_table>
  80c3d8:	00000206 	br	80c3e4 <jinit_merged_upsampler+0x130>
  80c3dc:	e13fff17 	ldw	r4,-4(fp)
  80c3e0:	080b40c0 	call	80b40c <build_ycc_rgb_table>
  80c3e4:	0001883a 	nop
  80c3e8:	e037883a 	mov	sp,fp
  80c3ec:	dfc00117 	ldw	ra,4(sp)
  80c3f0:	df000017 	ldw	fp,0(sp)
  80c3f4:	dec00204 	addi	sp,sp,8
  80c3f8:	f800283a 	ret

0080c3fc <start_pass_dpost>:
  80c3fc:	defffa04 	addi	sp,sp,-24
  80c400:	dfc00515 	stw	ra,20(sp)
  80c404:	df000415 	stw	fp,16(sp)
  80c408:	df000404 	addi	fp,sp,16
  80c40c:	e13ffe15 	stw	r4,-8(fp)
  80c410:	e17fff15 	stw	r5,-4(fp)
  80c414:	e0bffe17 	ldw	r2,-8(fp)
  80c418:	10807217 	ldw	r2,456(r2)
  80c41c:	e0bffd15 	stw	r2,-12(fp)
  80c420:	e0bfff17 	ldw	r2,-4(fp)
  80c424:	10c000a0 	cmpeqi	r3,r2,2
  80c428:	1800361e 	bne	r3,zero,80c504 <start_pass_dpost+0x108>
  80c42c:	10c000e0 	cmpeqi	r3,r2,3
  80c430:	1800231e 	bne	r3,zero,80c4c0 <start_pass_dpost+0xc4>
  80c434:	1000441e 	bne	r2,zero,80c548 <start_pass_dpost+0x14c>
  80c438:	e0bffe17 	ldw	r2,-8(fp)
  80c43c:	10801517 	ldw	r2,84(r2)
  80c440:	10001926 	beq	r2,zero,80c4a8 <start_pass_dpost+0xac>
  80c444:	e0fffd17 	ldw	r3,-12(fp)
  80c448:	00802074 	movhi	r2,129
  80c44c:	10b16904 	addi	r2,r2,-14940
  80c450:	18800115 	stw	r2,4(r3)
  80c454:	e0bffd17 	ldw	r2,-12(fp)
  80c458:	10800317 	ldw	r2,12(r2)
  80c45c:	1000441e 	bne	r2,zero,80c570 <start_pass_dpost+0x174>
  80c460:	e0bffe17 	ldw	r2,-8(fp)
  80c464:	10800117 	ldw	r2,4(r2)
  80c468:	10800717 	ldw	r2,28(r2)
  80c46c:	e0fffd17 	ldw	r3,-12(fp)
  80c470:	19000217 	ldw	r4,8(r3)
  80c474:	e0fffd17 	ldw	r3,-12(fp)
  80c478:	19400417 	ldw	r5,16(r3)
  80c47c:	00c00044 	movi	r3,1
  80c480:	d8c00015 	stw	r3,0(sp)
  80c484:	280f883a 	mov	r7,r5
  80c488:	000d883a 	mov	r6,zero
  80c48c:	200b883a 	mov	r5,r4
  80c490:	e13ffe17 	ldw	r4,-8(fp)
  80c494:	103ee83a 	callr	r2
  80c498:	1007883a 	mov	r3,r2
  80c49c:	e0bffd17 	ldw	r2,-12(fp)
  80c4a0:	10c00315 	stw	r3,12(r2)
  80c4a4:	00003206 	br	80c570 <start_pass_dpost+0x174>
  80c4a8:	e0bffe17 	ldw	r2,-8(fp)
  80c4ac:	10807717 	ldw	r2,476(r2)
  80c4b0:	10c00117 	ldw	r3,4(r2)
  80c4b4:	e0bffd17 	ldw	r2,-12(fp)
  80c4b8:	10c00115 	stw	r3,4(r2)
  80c4bc:	00002c06 	br	80c570 <start_pass_dpost+0x174>
  80c4c0:	e0bffd17 	ldw	r2,-12(fp)
  80c4c4:	10800217 	ldw	r2,8(r2)
  80c4c8:	1000091e 	bne	r2,zero,80c4f0 <start_pass_dpost+0xf4>
  80c4cc:	e0bffe17 	ldw	r2,-8(fp)
  80c4d0:	10800017 	ldw	r2,0(r2)
  80c4d4:	00c000c4 	movi	r3,3
  80c4d8:	10c00515 	stw	r3,20(r2)
  80c4dc:	e0bffe17 	ldw	r2,-8(fp)
  80c4e0:	10800017 	ldw	r2,0(r2)
  80c4e4:	10800017 	ldw	r2,0(r2)
  80c4e8:	e13ffe17 	ldw	r4,-8(fp)
  80c4ec:	103ee83a 	callr	r2
  80c4f0:	e0fffd17 	ldw	r3,-12(fp)
  80c4f4:	00802074 	movhi	r2,129
  80c4f8:	10b1ae04 	addi	r2,r2,-14664
  80c4fc:	18800115 	stw	r2,4(r3)
  80c500:	00001c06 	br	80c574 <start_pass_dpost+0x178>
  80c504:	e0bffd17 	ldw	r2,-12(fp)
  80c508:	10800217 	ldw	r2,8(r2)
  80c50c:	1000091e 	bne	r2,zero,80c534 <start_pass_dpost+0x138>
  80c510:	e0bffe17 	ldw	r2,-8(fp)
  80c514:	10800017 	ldw	r2,0(r2)
  80c518:	00c000c4 	movi	r3,3
  80c51c:	10c00515 	stw	r3,20(r2)
  80c520:	e0bffe17 	ldw	r2,-8(fp)
  80c524:	10800017 	ldw	r2,0(r2)
  80c528:	10800017 	ldw	r2,0(r2)
  80c52c:	e13ffe17 	ldw	r4,-8(fp)
  80c530:	103ee83a 	callr	r2
  80c534:	e0fffd17 	ldw	r3,-12(fp)
  80c538:	00802074 	movhi	r2,129
  80c53c:	10b21504 	addi	r2,r2,-14252
  80c540:	18800115 	stw	r2,4(r3)
  80c544:	00000b06 	br	80c574 <start_pass_dpost+0x178>
  80c548:	e0bffe17 	ldw	r2,-8(fp)
  80c54c:	10800017 	ldw	r2,0(r2)
  80c550:	00c000c4 	movi	r3,3
  80c554:	10c00515 	stw	r3,20(r2)
  80c558:	e0bffe17 	ldw	r2,-8(fp)
  80c55c:	10800017 	ldw	r2,0(r2)
  80c560:	10800017 	ldw	r2,0(r2)
  80c564:	e13ffe17 	ldw	r4,-8(fp)
  80c568:	103ee83a 	callr	r2
  80c56c:	00000106 	br	80c574 <start_pass_dpost+0x178>
  80c570:	0001883a 	nop
  80c574:	e0bffd17 	ldw	r2,-12(fp)
  80c578:	10000615 	stw	zero,24(r2)
  80c57c:	e0bffd17 	ldw	r2,-12(fp)
  80c580:	10c00617 	ldw	r3,24(r2)
  80c584:	e0bffd17 	ldw	r2,-12(fp)
  80c588:	10c00515 	stw	r3,20(r2)
  80c58c:	0001883a 	nop
  80c590:	e037883a 	mov	sp,fp
  80c594:	dfc00117 	ldw	ra,4(sp)
  80c598:	df000017 	ldw	fp,0(sp)
  80c59c:	dec00204 	addi	sp,sp,8
  80c5a0:	f800283a 	ret

0080c5a4 <post_process_1pass>:
  80c5a4:	defff404 	addi	sp,sp,-48
  80c5a8:	dfc00b15 	stw	ra,44(sp)
  80c5ac:	df000a15 	stw	fp,40(sp)
  80c5b0:	df000a04 	addi	fp,sp,40
  80c5b4:	e13ffc15 	stw	r4,-16(fp)
  80c5b8:	e17ffd15 	stw	r5,-12(fp)
  80c5bc:	e1bffe15 	stw	r6,-8(fp)
  80c5c0:	e1ffff15 	stw	r7,-4(fp)
  80c5c4:	e0bffc17 	ldw	r2,-16(fp)
  80c5c8:	10807217 	ldw	r2,456(r2)
  80c5cc:	e0bffa15 	stw	r2,-24(fp)
  80c5d0:	e0800317 	ldw	r2,12(fp)
  80c5d4:	10800017 	ldw	r2,0(r2)
  80c5d8:	e0c00417 	ldw	r3,16(fp)
  80c5dc:	1885c83a 	sub	r2,r3,r2
  80c5e0:	e0bff915 	stw	r2,-28(fp)
  80c5e4:	e0bffa17 	ldw	r2,-24(fp)
  80c5e8:	10c00417 	ldw	r3,16(r2)
  80c5ec:	e0bff917 	ldw	r2,-28(fp)
  80c5f0:	1880032e 	bgeu	r3,r2,80c600 <post_process_1pass+0x5c>
  80c5f4:	e0bffa17 	ldw	r2,-24(fp)
  80c5f8:	10800417 	ldw	r2,16(r2)
  80c5fc:	e0bff915 	stw	r2,-28(fp)
  80c600:	e03ffb15 	stw	zero,-20(fp)
  80c604:	e0bffc17 	ldw	r2,-16(fp)
  80c608:	10807717 	ldw	r2,476(r2)
  80c60c:	10800117 	ldw	r2,4(r2)
  80c610:	e0fffa17 	ldw	r3,-24(fp)
  80c614:	18c00317 	ldw	r3,12(r3)
  80c618:	e13ff917 	ldw	r4,-28(fp)
  80c61c:	d9000215 	stw	r4,8(sp)
  80c620:	e13ffb04 	addi	r4,fp,-20
  80c624:	d9000115 	stw	r4,4(sp)
  80c628:	d8c00015 	stw	r3,0(sp)
  80c62c:	e1ffff17 	ldw	r7,-4(fp)
  80c630:	e1bffe17 	ldw	r6,-8(fp)
  80c634:	e17ffd17 	ldw	r5,-12(fp)
  80c638:	e13ffc17 	ldw	r4,-16(fp)
  80c63c:	103ee83a 	callr	r2
  80c640:	e0bffc17 	ldw	r2,-16(fp)
  80c644:	10807917 	ldw	r2,484(r2)
  80c648:	10c00117 	ldw	r3,4(r2)
  80c64c:	e0bffa17 	ldw	r2,-24(fp)
  80c650:	11000317 	ldw	r4,12(r2)
  80c654:	e0800317 	ldw	r2,12(fp)
  80c658:	10800017 	ldw	r2,0(r2)
  80c65c:	1085883a 	add	r2,r2,r2
  80c660:	1085883a 	add	r2,r2,r2
  80c664:	100b883a 	mov	r5,r2
  80c668:	e0800217 	ldw	r2,8(fp)
  80c66c:	1145883a 	add	r2,r2,r5
  80c670:	e17ffb17 	ldw	r5,-20(fp)
  80c674:	280f883a 	mov	r7,r5
  80c678:	100d883a 	mov	r6,r2
  80c67c:	200b883a 	mov	r5,r4
  80c680:	e13ffc17 	ldw	r4,-16(fp)
  80c684:	183ee83a 	callr	r3
  80c688:	e0800317 	ldw	r2,12(fp)
  80c68c:	10c00017 	ldw	r3,0(r2)
  80c690:	e0bffb17 	ldw	r2,-20(fp)
  80c694:	1887883a 	add	r3,r3,r2
  80c698:	e0800317 	ldw	r2,12(fp)
  80c69c:	10c00015 	stw	r3,0(r2)
  80c6a0:	0001883a 	nop
  80c6a4:	e037883a 	mov	sp,fp
  80c6a8:	dfc00117 	ldw	ra,4(sp)
  80c6ac:	df000017 	ldw	fp,0(sp)
  80c6b0:	dec00204 	addi	sp,sp,8
  80c6b4:	f800283a 	ret

0080c6b8 <post_process_prepass>:
  80c6b8:	defff404 	addi	sp,sp,-48
  80c6bc:	dfc00b15 	stw	ra,44(sp)
  80c6c0:	df000a15 	stw	fp,40(sp)
  80c6c4:	df000a04 	addi	fp,sp,40
  80c6c8:	e13ffc15 	stw	r4,-16(fp)
  80c6cc:	e17ffd15 	stw	r5,-12(fp)
  80c6d0:	e1bffe15 	stw	r6,-8(fp)
  80c6d4:	e1ffff15 	stw	r7,-4(fp)
  80c6d8:	e0bffc17 	ldw	r2,-16(fp)
  80c6dc:	10807217 	ldw	r2,456(r2)
  80c6e0:	e0bff915 	stw	r2,-28(fp)
  80c6e4:	e0bff917 	ldw	r2,-28(fp)
  80c6e8:	10800617 	ldw	r2,24(r2)
  80c6ec:	1000131e 	bne	r2,zero,80c73c <post_process_prepass+0x84>
  80c6f0:	e0bffc17 	ldw	r2,-16(fp)
  80c6f4:	10800117 	ldw	r2,4(r2)
  80c6f8:	10800717 	ldw	r2,28(r2)
  80c6fc:	e0fff917 	ldw	r3,-28(fp)
  80c700:	19000217 	ldw	r4,8(r3)
  80c704:	e0fff917 	ldw	r3,-28(fp)
  80c708:	19400517 	ldw	r5,20(r3)
  80c70c:	e0fff917 	ldw	r3,-28(fp)
  80c710:	19800417 	ldw	r6,16(r3)
  80c714:	00c00044 	movi	r3,1
  80c718:	d8c00015 	stw	r3,0(sp)
  80c71c:	300f883a 	mov	r7,r6
  80c720:	280d883a 	mov	r6,r5
  80c724:	200b883a 	mov	r5,r4
  80c728:	e13ffc17 	ldw	r4,-16(fp)
  80c72c:	103ee83a 	callr	r2
  80c730:	1007883a 	mov	r3,r2
  80c734:	e0bff917 	ldw	r2,-28(fp)
  80c738:	10c00315 	stw	r3,12(r2)
  80c73c:	e0bff917 	ldw	r2,-28(fp)
  80c740:	10800617 	ldw	r2,24(r2)
  80c744:	e0bffa15 	stw	r2,-24(fp)
  80c748:	e0bffc17 	ldw	r2,-16(fp)
  80c74c:	10807717 	ldw	r2,476(r2)
  80c750:	10800117 	ldw	r2,4(r2)
  80c754:	e0fff917 	ldw	r3,-28(fp)
  80c758:	18c00317 	ldw	r3,12(r3)
  80c75c:	e13ff917 	ldw	r4,-28(fp)
  80c760:	21000604 	addi	r4,r4,24
  80c764:	e17ff917 	ldw	r5,-28(fp)
  80c768:	29400417 	ldw	r5,16(r5)
  80c76c:	d9400215 	stw	r5,8(sp)
  80c770:	d9000115 	stw	r4,4(sp)
  80c774:	d8c00015 	stw	r3,0(sp)
  80c778:	e1ffff17 	ldw	r7,-4(fp)
  80c77c:	e1bffe17 	ldw	r6,-8(fp)
  80c780:	e17ffd17 	ldw	r5,-12(fp)
  80c784:	e13ffc17 	ldw	r4,-16(fp)
  80c788:	103ee83a 	callr	r2
  80c78c:	e0bff917 	ldw	r2,-28(fp)
  80c790:	10800617 	ldw	r2,24(r2)
  80c794:	e0fffa17 	ldw	r3,-24(fp)
  80c798:	18801a2e 	bgeu	r3,r2,80c804 <post_process_prepass+0x14c>
  80c79c:	e0bff917 	ldw	r2,-28(fp)
  80c7a0:	10c00617 	ldw	r3,24(r2)
  80c7a4:	e0bffa17 	ldw	r2,-24(fp)
  80c7a8:	1885c83a 	sub	r2,r3,r2
  80c7ac:	e0bffb15 	stw	r2,-20(fp)
  80c7b0:	e0bffc17 	ldw	r2,-16(fp)
  80c7b4:	10807917 	ldw	r2,484(r2)
  80c7b8:	10c00117 	ldw	r3,4(r2)
  80c7bc:	e0bff917 	ldw	r2,-28(fp)
  80c7c0:	11000317 	ldw	r4,12(r2)
  80c7c4:	e0bffa17 	ldw	r2,-24(fp)
  80c7c8:	1085883a 	add	r2,r2,r2
  80c7cc:	1085883a 	add	r2,r2,r2
  80c7d0:	2085883a 	add	r2,r4,r2
  80c7d4:	e13ffb17 	ldw	r4,-20(fp)
  80c7d8:	200f883a 	mov	r7,r4
  80c7dc:	000d883a 	mov	r6,zero
  80c7e0:	100b883a 	mov	r5,r2
  80c7e4:	e13ffc17 	ldw	r4,-16(fp)
  80c7e8:	183ee83a 	callr	r3
  80c7ec:	e0800317 	ldw	r2,12(fp)
  80c7f0:	10c00017 	ldw	r3,0(r2)
  80c7f4:	e0bffb17 	ldw	r2,-20(fp)
  80c7f8:	1887883a 	add	r3,r3,r2
  80c7fc:	e0800317 	ldw	r2,12(fp)
  80c800:	10c00015 	stw	r3,0(r2)
  80c804:	e0bff917 	ldw	r2,-28(fp)
  80c808:	10c00617 	ldw	r3,24(r2)
  80c80c:	e0bff917 	ldw	r2,-28(fp)
  80c810:	10800417 	ldw	r2,16(r2)
  80c814:	18800936 	bltu	r3,r2,80c83c <post_process_prepass+0x184>
  80c818:	e0bff917 	ldw	r2,-28(fp)
  80c81c:	10c00517 	ldw	r3,20(r2)
  80c820:	e0bff917 	ldw	r2,-28(fp)
  80c824:	10800417 	ldw	r2,16(r2)
  80c828:	1887883a 	add	r3,r3,r2
  80c82c:	e0bff917 	ldw	r2,-28(fp)
  80c830:	10c00515 	stw	r3,20(r2)
  80c834:	e0bff917 	ldw	r2,-28(fp)
  80c838:	10000615 	stw	zero,24(r2)
  80c83c:	0001883a 	nop
  80c840:	e037883a 	mov	sp,fp
  80c844:	dfc00117 	ldw	ra,4(sp)
  80c848:	df000017 	ldw	fp,0(sp)
  80c84c:	dec00204 	addi	sp,sp,8
  80c850:	f800283a 	ret

0080c854 <post_process_2pass>:
  80c854:	defff604 	addi	sp,sp,-40
  80c858:	dfc00915 	stw	ra,36(sp)
  80c85c:	df000815 	stw	fp,32(sp)
  80c860:	df000804 	addi	fp,sp,32
  80c864:	e13ffc15 	stw	r4,-16(fp)
  80c868:	e17ffd15 	stw	r5,-12(fp)
  80c86c:	e1bffe15 	stw	r6,-8(fp)
  80c870:	e1ffff15 	stw	r7,-4(fp)
  80c874:	e0bffc17 	ldw	r2,-16(fp)
  80c878:	10807217 	ldw	r2,456(r2)
  80c87c:	e0bffa15 	stw	r2,-24(fp)
  80c880:	e0bffa17 	ldw	r2,-24(fp)
  80c884:	10800617 	ldw	r2,24(r2)
  80c888:	1000121e 	bne	r2,zero,80c8d4 <post_process_2pass+0x80>
  80c88c:	e0bffc17 	ldw	r2,-16(fp)
  80c890:	10800117 	ldw	r2,4(r2)
  80c894:	10800717 	ldw	r2,28(r2)
  80c898:	e0fffa17 	ldw	r3,-24(fp)
  80c89c:	19000217 	ldw	r4,8(r3)
  80c8a0:	e0fffa17 	ldw	r3,-24(fp)
  80c8a4:	19400517 	ldw	r5,20(r3)
  80c8a8:	e0fffa17 	ldw	r3,-24(fp)
  80c8ac:	18c00417 	ldw	r3,16(r3)
  80c8b0:	d8000015 	stw	zero,0(sp)
  80c8b4:	180f883a 	mov	r7,r3
  80c8b8:	280d883a 	mov	r6,r5
  80c8bc:	200b883a 	mov	r5,r4
  80c8c0:	e13ffc17 	ldw	r4,-16(fp)
  80c8c4:	103ee83a 	callr	r2
  80c8c8:	1007883a 	mov	r3,r2
  80c8cc:	e0bffa17 	ldw	r2,-24(fp)
  80c8d0:	10c00315 	stw	r3,12(r2)
  80c8d4:	e0bffa17 	ldw	r2,-24(fp)
  80c8d8:	10c00417 	ldw	r3,16(r2)
  80c8dc:	e0bffa17 	ldw	r2,-24(fp)
  80c8e0:	10800617 	ldw	r2,24(r2)
  80c8e4:	1885c83a 	sub	r2,r3,r2
  80c8e8:	e0bff915 	stw	r2,-28(fp)
  80c8ec:	e0800317 	ldw	r2,12(fp)
  80c8f0:	10800017 	ldw	r2,0(r2)
  80c8f4:	e0c00417 	ldw	r3,16(fp)
  80c8f8:	1885c83a 	sub	r2,r3,r2
  80c8fc:	e0bffb15 	stw	r2,-20(fp)
  80c900:	e0bff917 	ldw	r2,-28(fp)
  80c904:	e0fffb17 	ldw	r3,-20(fp)
  80c908:	1880022e 	bgeu	r3,r2,80c914 <post_process_2pass+0xc0>
  80c90c:	e0bffb17 	ldw	r2,-20(fp)
  80c910:	e0bff915 	stw	r2,-28(fp)
  80c914:	e0bffc17 	ldw	r2,-16(fp)
  80c918:	10c01d17 	ldw	r3,116(r2)
  80c91c:	e0bffa17 	ldw	r2,-24(fp)
  80c920:	10800517 	ldw	r2,20(r2)
  80c924:	1885c83a 	sub	r2,r3,r2
  80c928:	e0bffb15 	stw	r2,-20(fp)
  80c92c:	e0bff917 	ldw	r2,-28(fp)
  80c930:	e0fffb17 	ldw	r3,-20(fp)
  80c934:	1880022e 	bgeu	r3,r2,80c940 <post_process_2pass+0xec>
  80c938:	e0bffb17 	ldw	r2,-20(fp)
  80c93c:	e0bff915 	stw	r2,-28(fp)
  80c940:	e0bffc17 	ldw	r2,-16(fp)
  80c944:	10807917 	ldw	r2,484(r2)
  80c948:	10c00117 	ldw	r3,4(r2)
  80c94c:	e0bffa17 	ldw	r2,-24(fp)
  80c950:	11000317 	ldw	r4,12(r2)
  80c954:	e0bffa17 	ldw	r2,-24(fp)
  80c958:	10800617 	ldw	r2,24(r2)
  80c95c:	1085883a 	add	r2,r2,r2
  80c960:	1085883a 	add	r2,r2,r2
  80c964:	2089883a 	add	r4,r4,r2
  80c968:	e0800317 	ldw	r2,12(fp)
  80c96c:	10800017 	ldw	r2,0(r2)
  80c970:	1085883a 	add	r2,r2,r2
  80c974:	1085883a 	add	r2,r2,r2
  80c978:	100b883a 	mov	r5,r2
  80c97c:	e0800217 	ldw	r2,8(fp)
  80c980:	1145883a 	add	r2,r2,r5
  80c984:	e17ff917 	ldw	r5,-28(fp)
  80c988:	280f883a 	mov	r7,r5
  80c98c:	100d883a 	mov	r6,r2
  80c990:	200b883a 	mov	r5,r4
  80c994:	e13ffc17 	ldw	r4,-16(fp)
  80c998:	183ee83a 	callr	r3
  80c99c:	e0800317 	ldw	r2,12(fp)
  80c9a0:	10c00017 	ldw	r3,0(r2)
  80c9a4:	e0bff917 	ldw	r2,-28(fp)
  80c9a8:	1887883a 	add	r3,r3,r2
  80c9ac:	e0800317 	ldw	r2,12(fp)
  80c9b0:	10c00015 	stw	r3,0(r2)
  80c9b4:	e0bffa17 	ldw	r2,-24(fp)
  80c9b8:	10c00617 	ldw	r3,24(r2)
  80c9bc:	e0bff917 	ldw	r2,-28(fp)
  80c9c0:	1887883a 	add	r3,r3,r2
  80c9c4:	e0bffa17 	ldw	r2,-24(fp)
  80c9c8:	10c00615 	stw	r3,24(r2)
  80c9cc:	e0bffa17 	ldw	r2,-24(fp)
  80c9d0:	10c00617 	ldw	r3,24(r2)
  80c9d4:	e0bffa17 	ldw	r2,-24(fp)
  80c9d8:	10800417 	ldw	r2,16(r2)
  80c9dc:	18800936 	bltu	r3,r2,80ca04 <post_process_2pass+0x1b0>
  80c9e0:	e0bffa17 	ldw	r2,-24(fp)
  80c9e4:	10c00517 	ldw	r3,20(r2)
  80c9e8:	e0bffa17 	ldw	r2,-24(fp)
  80c9ec:	10800417 	ldw	r2,16(r2)
  80c9f0:	1887883a 	add	r3,r3,r2
  80c9f4:	e0bffa17 	ldw	r2,-24(fp)
  80c9f8:	10c00515 	stw	r3,20(r2)
  80c9fc:	e0bffa17 	ldw	r2,-24(fp)
  80ca00:	10000615 	stw	zero,24(r2)
  80ca04:	0001883a 	nop
  80ca08:	e037883a 	mov	sp,fp
  80ca0c:	dfc00117 	ldw	ra,4(sp)
  80ca10:	df000017 	ldw	fp,0(sp)
  80ca14:	dec00204 	addi	sp,sp,8
  80ca18:	f800283a 	ret

0080ca1c <jinit_d_post_controller>:
  80ca1c:	defff704 	addi	sp,sp,-36
  80ca20:	dfc00815 	stw	ra,32(sp)
  80ca24:	df000715 	stw	fp,28(sp)
  80ca28:	dc400615 	stw	r17,24(sp)
  80ca2c:	dc000515 	stw	r16,20(sp)
  80ca30:	df000704 	addi	fp,sp,28
  80ca34:	e13ffc15 	stw	r4,-16(fp)
  80ca38:	e17ffd15 	stw	r5,-12(fp)
  80ca3c:	e0bffc17 	ldw	r2,-16(fp)
  80ca40:	10800117 	ldw	r2,4(r2)
  80ca44:	10800017 	ldw	r2,0(r2)
  80ca48:	01800704 	movi	r6,28
  80ca4c:	01400044 	movi	r5,1
  80ca50:	e13ffc17 	ldw	r4,-16(fp)
  80ca54:	103ee83a 	callr	r2
  80ca58:	e0bffb15 	stw	r2,-20(fp)
  80ca5c:	e0bffc17 	ldw	r2,-16(fp)
  80ca60:	e0fffb17 	ldw	r3,-20(fp)
  80ca64:	10c07215 	stw	r3,456(r2)
  80ca68:	e0fffb17 	ldw	r3,-20(fp)
  80ca6c:	00802074 	movhi	r2,129
  80ca70:	10b0ff04 	addi	r2,r2,-15364
  80ca74:	18800015 	stw	r2,0(r3)
  80ca78:	e0bffb17 	ldw	r2,-20(fp)
  80ca7c:	10000215 	stw	zero,8(r2)
  80ca80:	e0bffb17 	ldw	r2,-20(fp)
  80ca84:	10000315 	stw	zero,12(r2)
  80ca88:	e0bffc17 	ldw	r2,-16(fp)
  80ca8c:	10801517 	ldw	r2,84(r2)
  80ca90:	10003d26 	beq	r2,zero,80cb88 <jinit_d_post_controller+0x16c>
  80ca94:	e0bffc17 	ldw	r2,-16(fp)
  80ca98:	10805017 	ldw	r2,320(r2)
  80ca9c:	1007883a 	mov	r3,r2
  80caa0:	e0bffb17 	ldw	r2,-20(fp)
  80caa4:	10c00415 	stw	r3,16(r2)
  80caa8:	e0bffd17 	ldw	r2,-12(fp)
  80caac:	10002126 	beq	r2,zero,80cb34 <jinit_d_post_controller+0x118>
  80cab0:	e0bffc17 	ldw	r2,-16(fp)
  80cab4:	10800117 	ldw	r2,4(r2)
  80cab8:	14000417 	ldw	r16,16(r2)
  80cabc:	e0bffc17 	ldw	r2,-16(fp)
  80cac0:	10c01c17 	ldw	r3,112(r2)
  80cac4:	e0bffc17 	ldw	r2,-16(fp)
  80cac8:	10801e17 	ldw	r2,120(r2)
  80cacc:	100b883a 	mov	r5,r2
  80cad0:	1809883a 	mov	r4,r3
  80cad4:	08301e80 	call	8301e8 <__mulsi3>
  80cad8:	1023883a 	mov	r17,r2
  80cadc:	e0bffc17 	ldw	r2,-16(fp)
  80cae0:	10801d17 	ldw	r2,116(r2)
  80cae4:	1007883a 	mov	r3,r2
  80cae8:	e0bffb17 	ldw	r2,-20(fp)
  80caec:	10800417 	ldw	r2,16(r2)
  80caf0:	100b883a 	mov	r5,r2
  80caf4:	1809883a 	mov	r4,r3
  80caf8:	0813bd40 	call	813bd4 <jround_up>
  80cafc:	1007883a 	mov	r3,r2
  80cb00:	e0bffb17 	ldw	r2,-20(fp)
  80cb04:	10800417 	ldw	r2,16(r2)
  80cb08:	d8800115 	stw	r2,4(sp)
  80cb0c:	d8c00015 	stw	r3,0(sp)
  80cb10:	880f883a 	mov	r7,r17
  80cb14:	000d883a 	mov	r6,zero
  80cb18:	01400044 	movi	r5,1
  80cb1c:	e13ffc17 	ldw	r4,-16(fp)
  80cb20:	803ee83a 	callr	r16
  80cb24:	1007883a 	mov	r3,r2
  80cb28:	e0bffb17 	ldw	r2,-20(fp)
  80cb2c:	10c00215 	stw	r3,8(r2)
  80cb30:	00001506 	br	80cb88 <jinit_d_post_controller+0x16c>
  80cb34:	e0bffc17 	ldw	r2,-16(fp)
  80cb38:	10800117 	ldw	r2,4(r2)
  80cb3c:	14000217 	ldw	r16,8(r2)
  80cb40:	e0bffc17 	ldw	r2,-16(fp)
  80cb44:	10c01c17 	ldw	r3,112(r2)
  80cb48:	e0bffc17 	ldw	r2,-16(fp)
  80cb4c:	10801e17 	ldw	r2,120(r2)
  80cb50:	100b883a 	mov	r5,r2
  80cb54:	1809883a 	mov	r4,r3
  80cb58:	08301e80 	call	8301e8 <__mulsi3>
  80cb5c:	1007883a 	mov	r3,r2
  80cb60:	e0bffb17 	ldw	r2,-20(fp)
  80cb64:	10800417 	ldw	r2,16(r2)
  80cb68:	100f883a 	mov	r7,r2
  80cb6c:	180d883a 	mov	r6,r3
  80cb70:	01400044 	movi	r5,1
  80cb74:	e13ffc17 	ldw	r4,-16(fp)
  80cb78:	803ee83a 	callr	r16
  80cb7c:	1007883a 	mov	r3,r2
  80cb80:	e0bffb17 	ldw	r2,-20(fp)
  80cb84:	10c00315 	stw	r3,12(r2)
  80cb88:	0001883a 	nop
  80cb8c:	e6fffe04 	addi	sp,fp,-8
  80cb90:	dfc00317 	ldw	ra,12(sp)
  80cb94:	df000217 	ldw	fp,8(sp)
  80cb98:	dc400117 	ldw	r17,4(sp)
  80cb9c:	dc000017 	ldw	r16,0(sp)
  80cba0:	dec00404 	addi	sp,sp,16
  80cba4:	f800283a 	ret

0080cba8 <start_pass_upsample>:
  80cba8:	defffd04 	addi	sp,sp,-12
  80cbac:	df000215 	stw	fp,8(sp)
  80cbb0:	df000204 	addi	fp,sp,8
  80cbb4:	e13fff15 	stw	r4,-4(fp)
  80cbb8:	e0bfff17 	ldw	r2,-4(fp)
  80cbbc:	10807717 	ldw	r2,476(r2)
  80cbc0:	e0bffe15 	stw	r2,-8(fp)
  80cbc4:	e0bfff17 	ldw	r2,-4(fp)
  80cbc8:	10c05017 	ldw	r3,320(r2)
  80cbcc:	e0bffe17 	ldw	r2,-8(fp)
  80cbd0:	10c01715 	stw	r3,92(r2)
  80cbd4:	e0bfff17 	ldw	r2,-4(fp)
  80cbd8:	10c01d17 	ldw	r3,116(r2)
  80cbdc:	e0bffe17 	ldw	r2,-8(fp)
  80cbe0:	10c01815 	stw	r3,96(r2)
  80cbe4:	0001883a 	nop
  80cbe8:	e037883a 	mov	sp,fp
  80cbec:	df000017 	ldw	fp,0(sp)
  80cbf0:	dec00104 	addi	sp,sp,4
  80cbf4:	f800283a 	ret

0080cbf8 <sep_upsample>:
  80cbf8:	defff304 	addi	sp,sp,-52
  80cbfc:	dfc00c15 	stw	ra,48(sp)
  80cc00:	df000b15 	stw	fp,44(sp)
  80cc04:	dc400a15 	stw	r17,40(sp)
  80cc08:	dc000915 	stw	r16,36(sp)
  80cc0c:	df000b04 	addi	fp,sp,44
  80cc10:	e13ffa15 	stw	r4,-24(fp)
  80cc14:	e17ffb15 	stw	r5,-20(fp)
  80cc18:	e1bffc15 	stw	r6,-16(fp)
  80cc1c:	e1fffd15 	stw	r7,-12(fp)
  80cc20:	e0bffa17 	ldw	r2,-24(fp)
  80cc24:	10807717 	ldw	r2,476(r2)
  80cc28:	e0bff915 	stw	r2,-28(fp)
  80cc2c:	e0bff917 	ldw	r2,-28(fp)
  80cc30:	10c01717 	ldw	r3,92(r2)
  80cc34:	e0bffa17 	ldw	r2,-24(fp)
  80cc38:	10805017 	ldw	r2,320(r2)
  80cc3c:	18803816 	blt	r3,r2,80cd20 <sep_upsample+0x128>
  80cc40:	e03ff615 	stw	zero,-40(fp)
  80cc44:	e0bffa17 	ldw	r2,-24(fp)
  80cc48:	10803617 	ldw	r2,216(r2)
  80cc4c:	e0bff715 	stw	r2,-36(fp)
  80cc50:	00002d06 	br	80cd08 <sep_upsample+0x110>
  80cc54:	e0fff917 	ldw	r3,-28(fp)
  80cc58:	e0bff617 	ldw	r2,-40(fp)
  80cc5c:	10800344 	addi	r2,r2,13
  80cc60:	1085883a 	add	r2,r2,r2
  80cc64:	1085883a 	add	r2,r2,r2
  80cc68:	1885883a 	add	r2,r3,r2
  80cc6c:	14000017 	ldw	r16,0(r2)
  80cc70:	e0bff617 	ldw	r2,-40(fp)
  80cc74:	1085883a 	add	r2,r2,r2
  80cc78:	1085883a 	add	r2,r2,r2
  80cc7c:	1007883a 	mov	r3,r2
  80cc80:	e0bffb17 	ldw	r2,-20(fp)
  80cc84:	10c5883a 	add	r2,r2,r3
  80cc88:	14400017 	ldw	r17,0(r2)
  80cc8c:	e0bffc17 	ldw	r2,-16(fp)
  80cc90:	11000017 	ldw	r4,0(r2)
  80cc94:	e0fff917 	ldw	r3,-28(fp)
  80cc98:	e0bff617 	ldw	r2,-40(fp)
  80cc9c:	10800644 	addi	r2,r2,25
  80cca0:	1085883a 	add	r2,r2,r2
  80cca4:	1085883a 	add	r2,r2,r2
  80cca8:	1885883a 	add	r2,r3,r2
  80ccac:	10800017 	ldw	r2,0(r2)
  80ccb0:	100b883a 	mov	r5,r2
  80ccb4:	08301e80 	call	8301e8 <__mulsi3>
  80ccb8:	1085883a 	add	r2,r2,r2
  80ccbc:	1085883a 	add	r2,r2,r2
  80ccc0:	8889883a 	add	r4,r17,r2
  80ccc4:	e0bff917 	ldw	r2,-28(fp)
  80ccc8:	10c00304 	addi	r3,r2,12
  80cccc:	e0bff617 	ldw	r2,-40(fp)
  80ccd0:	1085883a 	add	r2,r2,r2
  80ccd4:	1085883a 	add	r2,r2,r2
  80ccd8:	1885883a 	add	r2,r3,r2
  80ccdc:	100f883a 	mov	r7,r2
  80cce0:	200d883a 	mov	r6,r4
  80cce4:	e17ff717 	ldw	r5,-36(fp)
  80cce8:	e13ffa17 	ldw	r4,-24(fp)
  80ccec:	803ee83a 	callr	r16
  80ccf0:	e0bff617 	ldw	r2,-40(fp)
  80ccf4:	10800044 	addi	r2,r2,1
  80ccf8:	e0bff615 	stw	r2,-40(fp)
  80ccfc:	e0bff717 	ldw	r2,-36(fp)
  80cd00:	10801604 	addi	r2,r2,88
  80cd04:	e0bff715 	stw	r2,-36(fp)
  80cd08:	e0bffa17 	ldw	r2,-24(fp)
  80cd0c:	10800917 	ldw	r2,36(r2)
  80cd10:	e0fff617 	ldw	r3,-40(fp)
  80cd14:	18bfcf16 	blt	r3,r2,80cc54 <__alt_mem_epcs_flash_controller_0+0xff803c54>
  80cd18:	e0bff917 	ldw	r2,-28(fp)
  80cd1c:	10001715 	stw	zero,92(r2)
  80cd20:	e0bffa17 	ldw	r2,-24(fp)
  80cd24:	10c05017 	ldw	r3,320(r2)
  80cd28:	e0bff917 	ldw	r2,-28(fp)
  80cd2c:	10801717 	ldw	r2,92(r2)
  80cd30:	1885c83a 	sub	r2,r3,r2
  80cd34:	e0bff815 	stw	r2,-32(fp)
  80cd38:	e0bff917 	ldw	r2,-28(fp)
  80cd3c:	10c01817 	ldw	r3,96(r2)
  80cd40:	e0bff817 	ldw	r2,-32(fp)
  80cd44:	1880032e 	bgeu	r3,r2,80cd54 <sep_upsample+0x15c>
  80cd48:	e0bff917 	ldw	r2,-28(fp)
  80cd4c:	10801817 	ldw	r2,96(r2)
  80cd50:	e0bff815 	stw	r2,-32(fp)
  80cd54:	e0800317 	ldw	r2,12(fp)
  80cd58:	10800017 	ldw	r2,0(r2)
  80cd5c:	e0c00417 	ldw	r3,16(fp)
  80cd60:	1885c83a 	sub	r2,r3,r2
  80cd64:	e0800415 	stw	r2,16(fp)
  80cd68:	e0bff817 	ldw	r2,-32(fp)
  80cd6c:	e0c00417 	ldw	r3,16(fp)
  80cd70:	1880022e 	bgeu	r3,r2,80cd7c <sep_upsample+0x184>
  80cd74:	e0800417 	ldw	r2,16(fp)
  80cd78:	e0bff815 	stw	r2,-32(fp)
  80cd7c:	e0bffa17 	ldw	r2,-24(fp)
  80cd80:	10807817 	ldw	r2,480(r2)
  80cd84:	10c00117 	ldw	r3,4(r2)
  80cd88:	e0bff917 	ldw	r2,-28(fp)
  80cd8c:	11000304 	addi	r4,r2,12
  80cd90:	e0bff917 	ldw	r2,-28(fp)
  80cd94:	10801717 	ldw	r2,92(r2)
  80cd98:	100d883a 	mov	r6,r2
  80cd9c:	e0800317 	ldw	r2,12(fp)
  80cda0:	10800017 	ldw	r2,0(r2)
  80cda4:	1085883a 	add	r2,r2,r2
  80cda8:	1085883a 	add	r2,r2,r2
  80cdac:	100b883a 	mov	r5,r2
  80cdb0:	e0800217 	ldw	r2,8(fp)
  80cdb4:	114b883a 	add	r5,r2,r5
  80cdb8:	e0bff817 	ldw	r2,-32(fp)
  80cdbc:	d8800015 	stw	r2,0(sp)
  80cdc0:	280f883a 	mov	r7,r5
  80cdc4:	200b883a 	mov	r5,r4
  80cdc8:	e13ffa17 	ldw	r4,-24(fp)
  80cdcc:	183ee83a 	callr	r3
  80cdd0:	e0800317 	ldw	r2,12(fp)
  80cdd4:	10c00017 	ldw	r3,0(r2)
  80cdd8:	e0bff817 	ldw	r2,-32(fp)
  80cddc:	1887883a 	add	r3,r3,r2
  80cde0:	e0800317 	ldw	r2,12(fp)
  80cde4:	10c00015 	stw	r3,0(r2)
  80cde8:	e0bff917 	ldw	r2,-28(fp)
  80cdec:	10c01817 	ldw	r3,96(r2)
  80cdf0:	e0bff817 	ldw	r2,-32(fp)
  80cdf4:	1887c83a 	sub	r3,r3,r2
  80cdf8:	e0bff917 	ldw	r2,-28(fp)
  80cdfc:	10c01815 	stw	r3,96(r2)
  80ce00:	e0bff917 	ldw	r2,-28(fp)
  80ce04:	10801717 	ldw	r2,92(r2)
  80ce08:	1007883a 	mov	r3,r2
  80ce0c:	e0bff817 	ldw	r2,-32(fp)
  80ce10:	1885883a 	add	r2,r3,r2
  80ce14:	1007883a 	mov	r3,r2
  80ce18:	e0bff917 	ldw	r2,-28(fp)
  80ce1c:	10c01715 	stw	r3,92(r2)
  80ce20:	e0bff917 	ldw	r2,-28(fp)
  80ce24:	10c01717 	ldw	r3,92(r2)
  80ce28:	e0bffa17 	ldw	r2,-24(fp)
  80ce2c:	10805017 	ldw	r2,320(r2)
  80ce30:	18800516 	blt	r3,r2,80ce48 <sep_upsample+0x250>
  80ce34:	e0bffc17 	ldw	r2,-16(fp)
  80ce38:	10800017 	ldw	r2,0(r2)
  80ce3c:	10c00044 	addi	r3,r2,1
  80ce40:	e0bffc17 	ldw	r2,-16(fp)
  80ce44:	10c00015 	stw	r3,0(r2)
  80ce48:	0001883a 	nop
  80ce4c:	e6fffe04 	addi	sp,fp,-8
  80ce50:	dfc00317 	ldw	ra,12(sp)
  80ce54:	df000217 	ldw	fp,8(sp)
  80ce58:	dc400117 	ldw	r17,4(sp)
  80ce5c:	dc000017 	ldw	r16,0(sp)
  80ce60:	dec00404 	addi	sp,sp,16
  80ce64:	f800283a 	ret

0080ce68 <fullsize_upsample>:
  80ce68:	defffb04 	addi	sp,sp,-20
  80ce6c:	df000415 	stw	fp,16(sp)
  80ce70:	df000404 	addi	fp,sp,16
  80ce74:	e13ffc15 	stw	r4,-16(fp)
  80ce78:	e17ffd15 	stw	r5,-12(fp)
  80ce7c:	e1bffe15 	stw	r6,-8(fp)
  80ce80:	e1ffff15 	stw	r7,-4(fp)
  80ce84:	e0bfff17 	ldw	r2,-4(fp)
  80ce88:	e0fffe17 	ldw	r3,-8(fp)
  80ce8c:	10c00015 	stw	r3,0(r2)
  80ce90:	0001883a 	nop
  80ce94:	e037883a 	mov	sp,fp
  80ce98:	df000017 	ldw	fp,0(sp)
  80ce9c:	dec00104 	addi	sp,sp,4
  80cea0:	f800283a 	ret

0080cea4 <noop_upsample>:
  80cea4:	defffb04 	addi	sp,sp,-20
  80cea8:	df000415 	stw	fp,16(sp)
  80ceac:	df000404 	addi	fp,sp,16
  80ceb0:	e13ffc15 	stw	r4,-16(fp)
  80ceb4:	e17ffd15 	stw	r5,-12(fp)
  80ceb8:	e1bffe15 	stw	r6,-8(fp)
  80cebc:	e1ffff15 	stw	r7,-4(fp)
  80cec0:	e0bfff17 	ldw	r2,-4(fp)
  80cec4:	10000015 	stw	zero,0(r2)
  80cec8:	0001883a 	nop
  80cecc:	e037883a 	mov	sp,fp
  80ced0:	df000017 	ldw	fp,0(sp)
  80ced4:	dec00104 	addi	sp,sp,4
  80ced8:	f800283a 	ret

0080cedc <int_upsample>:
  80cedc:	deffed04 	addi	sp,sp,-76
  80cee0:	dfc01215 	stw	ra,72(sp)
  80cee4:	df001115 	stw	fp,68(sp)
  80cee8:	dcc01015 	stw	r19,64(sp)
  80ceec:	dc800f15 	stw	r18,60(sp)
  80cef0:	dc400e15 	stw	r17,56(sp)
  80cef4:	dc000d15 	stw	r16,52(sp)
  80cef8:	df001104 	addi	fp,sp,68
  80cefc:	e13ff815 	stw	r4,-32(fp)
  80cf00:	e17ff915 	stw	r5,-28(fp)
  80cf04:	e1bffa15 	stw	r6,-24(fp)
  80cf08:	e1fffb15 	stw	r7,-20(fp)
  80cf0c:	e0bff817 	ldw	r2,-32(fp)
  80cf10:	10807717 	ldw	r2,476(r2)
  80cf14:	e0bff315 	stw	r2,-52(fp)
  80cf18:	e0bffb17 	ldw	r2,-20(fp)
  80cf1c:	10800017 	ldw	r2,0(r2)
  80cf20:	e0bff415 	stw	r2,-48(fp)
  80cf24:	e0bff917 	ldw	r2,-28(fp)
  80cf28:	10800117 	ldw	r2,4(r2)
  80cf2c:	e0fff317 	ldw	r3,-52(fp)
  80cf30:	1885883a 	add	r2,r3,r2
  80cf34:	10802304 	addi	r2,r2,140
  80cf38:	10800003 	ldbu	r2,0(r2)
  80cf3c:	10803fcc 	andi	r2,r2,255
  80cf40:	e0bff515 	stw	r2,-44(fp)
  80cf44:	e0bff917 	ldw	r2,-28(fp)
  80cf48:	10800117 	ldw	r2,4(r2)
  80cf4c:	e0fff317 	ldw	r3,-52(fp)
  80cf50:	1885883a 	add	r2,r3,r2
  80cf54:	10802584 	addi	r2,r2,150
  80cf58:	10800003 	ldbu	r2,0(r2)
  80cf5c:	10803fcc 	andi	r2,r2,255
  80cf60:	e0bff615 	stw	r2,-40(fp)
  80cf64:	e03ff215 	stw	zero,-56(fp)
  80cf68:	e0bff217 	ldw	r2,-56(fp)
  80cf6c:	e0bff115 	stw	r2,-60(fp)
  80cf70:	00003606 	br	80d04c <int_upsample+0x170>
  80cf74:	e0bff117 	ldw	r2,-60(fp)
  80cf78:	1085883a 	add	r2,r2,r2
  80cf7c:	1085883a 	add	r2,r2,r2
  80cf80:	1007883a 	mov	r3,r2
  80cf84:	e0bffa17 	ldw	r2,-24(fp)
  80cf88:	10c5883a 	add	r2,r2,r3
  80cf8c:	14800017 	ldw	r18,0(r2)
  80cf90:	e0bff217 	ldw	r2,-56(fp)
  80cf94:	1085883a 	add	r2,r2,r2
  80cf98:	1085883a 	add	r2,r2,r2
  80cf9c:	1007883a 	mov	r3,r2
  80cfa0:	e0bff417 	ldw	r2,-48(fp)
  80cfa4:	10c5883a 	add	r2,r2,r3
  80cfa8:	14000017 	ldw	r16,0(r2)
  80cfac:	e0bff817 	ldw	r2,-32(fp)
  80cfb0:	10801c17 	ldw	r2,112(r2)
  80cfb4:	8085883a 	add	r2,r16,r2
  80cfb8:	e0bff715 	stw	r2,-36(fp)
  80cfbc:	00000a06 	br	80cfe8 <int_upsample+0x10c>
  80cfc0:	9005883a 	mov	r2,r18
  80cfc4:	14800044 	addi	r18,r2,1
  80cfc8:	14c00003 	ldbu	r19,0(r2)
  80cfcc:	e47ff517 	ldw	r17,-44(fp)
  80cfd0:	00000406 	br	80cfe4 <int_upsample+0x108>
  80cfd4:	8005883a 	mov	r2,r16
  80cfd8:	14000044 	addi	r16,r2,1
  80cfdc:	14c00005 	stb	r19,0(r2)
  80cfe0:	8c7fffc4 	addi	r17,r17,-1
  80cfe4:	047ffb16 	blt	zero,r17,80cfd4 <__alt_mem_epcs_flash_controller_0+0xff803fd4>
  80cfe8:	e0bff717 	ldw	r2,-36(fp)
  80cfec:	80bff436 	bltu	r16,r2,80cfc0 <__alt_mem_epcs_flash_controller_0+0xff803fc0>
  80cff0:	e0bff617 	ldw	r2,-40(fp)
  80cff4:	10800090 	cmplti	r2,r2,2
  80cff8:	10000d1e 	bne	r2,zero,80d030 <int_upsample+0x154>
  80cffc:	e0bff217 	ldw	r2,-56(fp)
  80d000:	11000044 	addi	r4,r2,1
  80d004:	e0bff617 	ldw	r2,-40(fp)
  80d008:	10bfffc4 	addi	r2,r2,-1
  80d00c:	e0fff817 	ldw	r3,-32(fp)
  80d010:	18c01c17 	ldw	r3,112(r3)
  80d014:	d8c00115 	stw	r3,4(sp)
  80d018:	d8800015 	stw	r2,0(sp)
  80d01c:	200f883a 	mov	r7,r4
  80d020:	e1bff417 	ldw	r6,-48(fp)
  80d024:	e17ff217 	ldw	r5,-56(fp)
  80d028:	e13ff417 	ldw	r4,-48(fp)
  80d02c:	0813c300 	call	813c30 <jcopy_sample_rows>
  80d030:	e0bff117 	ldw	r2,-60(fp)
  80d034:	10800044 	addi	r2,r2,1
  80d038:	e0bff115 	stw	r2,-60(fp)
  80d03c:	e0fff217 	ldw	r3,-56(fp)
  80d040:	e0bff617 	ldw	r2,-40(fp)
  80d044:	1885883a 	add	r2,r3,r2
  80d048:	e0bff215 	stw	r2,-56(fp)
  80d04c:	e0bff817 	ldw	r2,-32(fp)
  80d050:	10805017 	ldw	r2,320(r2)
  80d054:	e0fff217 	ldw	r3,-56(fp)
  80d058:	18bfc616 	blt	r3,r2,80cf74 <__alt_mem_epcs_flash_controller_0+0xff803f74>
  80d05c:	0001883a 	nop
  80d060:	e6fffc04 	addi	sp,fp,-16
  80d064:	dfc00517 	ldw	ra,20(sp)
  80d068:	df000417 	ldw	fp,16(sp)
  80d06c:	dcc00317 	ldw	r19,12(sp)
  80d070:	dc800217 	ldw	r18,8(sp)
  80d074:	dc400117 	ldw	r17,4(sp)
  80d078:	dc000017 	ldw	r16,0(sp)
  80d07c:	dec00604 	addi	sp,sp,24
  80d080:	f800283a 	ret

0080d084 <h2v1_upsample>:
  80d084:	defff504 	addi	sp,sp,-44
  80d088:	df000a15 	stw	fp,40(sp)
  80d08c:	dc800915 	stw	r18,36(sp)
  80d090:	dc400815 	stw	r17,32(sp)
  80d094:	dc000715 	stw	r16,28(sp)
  80d098:	df000a04 	addi	fp,sp,40
  80d09c:	e13ff915 	stw	r4,-28(fp)
  80d0a0:	e17ffa15 	stw	r5,-24(fp)
  80d0a4:	e1bffb15 	stw	r6,-20(fp)
  80d0a8:	e1fffc15 	stw	r7,-16(fp)
  80d0ac:	e0bffc17 	ldw	r2,-16(fp)
  80d0b0:	10800017 	ldw	r2,0(r2)
  80d0b4:	e0bff715 	stw	r2,-36(fp)
  80d0b8:	e03ff615 	stw	zero,-40(fp)
  80d0bc:	00002106 	br	80d144 <h2v1_upsample+0xc0>
  80d0c0:	e0bff617 	ldw	r2,-40(fp)
  80d0c4:	1085883a 	add	r2,r2,r2
  80d0c8:	1085883a 	add	r2,r2,r2
  80d0cc:	1007883a 	mov	r3,r2
  80d0d0:	e0bffb17 	ldw	r2,-20(fp)
  80d0d4:	10c5883a 	add	r2,r2,r3
  80d0d8:	14800017 	ldw	r18,0(r2)
  80d0dc:	e0bff617 	ldw	r2,-40(fp)
  80d0e0:	1085883a 	add	r2,r2,r2
  80d0e4:	1085883a 	add	r2,r2,r2
  80d0e8:	1007883a 	mov	r3,r2
  80d0ec:	e0bff717 	ldw	r2,-36(fp)
  80d0f0:	10c5883a 	add	r2,r2,r3
  80d0f4:	14000017 	ldw	r16,0(r2)
  80d0f8:	e0bff917 	ldw	r2,-28(fp)
  80d0fc:	10801c17 	ldw	r2,112(r2)
  80d100:	8085883a 	add	r2,r16,r2
  80d104:	e0bff815 	stw	r2,-32(fp)
  80d108:	00000906 	br	80d130 <h2v1_upsample+0xac>
  80d10c:	9005883a 	mov	r2,r18
  80d110:	14800044 	addi	r18,r2,1
  80d114:	14400003 	ldbu	r17,0(r2)
  80d118:	8005883a 	mov	r2,r16
  80d11c:	14000044 	addi	r16,r2,1
  80d120:	14400005 	stb	r17,0(r2)
  80d124:	8005883a 	mov	r2,r16
  80d128:	14000044 	addi	r16,r2,1
  80d12c:	14400005 	stb	r17,0(r2)
  80d130:	e0bff817 	ldw	r2,-32(fp)
  80d134:	80bff536 	bltu	r16,r2,80d10c <__alt_mem_epcs_flash_controller_0+0xff80410c>
  80d138:	e0bff617 	ldw	r2,-40(fp)
  80d13c:	10800044 	addi	r2,r2,1
  80d140:	e0bff615 	stw	r2,-40(fp)
  80d144:	e0bff917 	ldw	r2,-28(fp)
  80d148:	10805017 	ldw	r2,320(r2)
  80d14c:	e0fff617 	ldw	r3,-40(fp)
  80d150:	18bfdb16 	blt	r3,r2,80d0c0 <__alt_mem_epcs_flash_controller_0+0xff8040c0>
  80d154:	0001883a 	nop
  80d158:	e6fffd04 	addi	sp,fp,-12
  80d15c:	df000317 	ldw	fp,12(sp)
  80d160:	dc800217 	ldw	r18,8(sp)
  80d164:	dc400117 	ldw	r17,4(sp)
  80d168:	dc000017 	ldw	r16,0(sp)
  80d16c:	dec00404 	addi	sp,sp,16
  80d170:	f800283a 	ret

0080d174 <h2v2_upsample>:
  80d174:	defff104 	addi	sp,sp,-60
  80d178:	dfc00e15 	stw	ra,56(sp)
  80d17c:	df000d15 	stw	fp,52(sp)
  80d180:	dc800c15 	stw	r18,48(sp)
  80d184:	dc400b15 	stw	r17,44(sp)
  80d188:	dc000a15 	stw	r16,40(sp)
  80d18c:	df000d04 	addi	fp,sp,52
  80d190:	e13ff915 	stw	r4,-28(fp)
  80d194:	e17ffa15 	stw	r5,-24(fp)
  80d198:	e1bffb15 	stw	r6,-20(fp)
  80d19c:	e1fffc15 	stw	r7,-16(fp)
  80d1a0:	e0bffc17 	ldw	r2,-16(fp)
  80d1a4:	10800017 	ldw	r2,0(r2)
  80d1a8:	e0bff715 	stw	r2,-36(fp)
  80d1ac:	e03ff615 	stw	zero,-40(fp)
  80d1b0:	e0bff617 	ldw	r2,-40(fp)
  80d1b4:	e0bff515 	stw	r2,-44(fp)
  80d1b8:	00003006 	br	80d27c <h2v2_upsample+0x108>
  80d1bc:	e0bff517 	ldw	r2,-44(fp)
  80d1c0:	1085883a 	add	r2,r2,r2
  80d1c4:	1085883a 	add	r2,r2,r2
  80d1c8:	1007883a 	mov	r3,r2
  80d1cc:	e0bffb17 	ldw	r2,-20(fp)
  80d1d0:	10c5883a 	add	r2,r2,r3
  80d1d4:	14800017 	ldw	r18,0(r2)
  80d1d8:	e0bff617 	ldw	r2,-40(fp)
  80d1dc:	1085883a 	add	r2,r2,r2
  80d1e0:	1085883a 	add	r2,r2,r2
  80d1e4:	1007883a 	mov	r3,r2
  80d1e8:	e0bff717 	ldw	r2,-36(fp)
  80d1ec:	10c5883a 	add	r2,r2,r3
  80d1f0:	14000017 	ldw	r16,0(r2)
  80d1f4:	e0bff917 	ldw	r2,-28(fp)
  80d1f8:	10801c17 	ldw	r2,112(r2)
  80d1fc:	8085883a 	add	r2,r16,r2
  80d200:	e0bff815 	stw	r2,-32(fp)
  80d204:	00000906 	br	80d22c <h2v2_upsample+0xb8>
  80d208:	9005883a 	mov	r2,r18
  80d20c:	14800044 	addi	r18,r2,1
  80d210:	14400003 	ldbu	r17,0(r2)
  80d214:	8005883a 	mov	r2,r16
  80d218:	14000044 	addi	r16,r2,1
  80d21c:	14400005 	stb	r17,0(r2)
  80d220:	8005883a 	mov	r2,r16
  80d224:	14000044 	addi	r16,r2,1
  80d228:	14400005 	stb	r17,0(r2)
  80d22c:	e0bff817 	ldw	r2,-32(fp)
  80d230:	80bff536 	bltu	r16,r2,80d208 <__alt_mem_epcs_flash_controller_0+0xff804208>
  80d234:	e0bff617 	ldw	r2,-40(fp)
  80d238:	10c00044 	addi	r3,r2,1
  80d23c:	e0bff917 	ldw	r2,-28(fp)
  80d240:	10801c17 	ldw	r2,112(r2)
  80d244:	d8800115 	stw	r2,4(sp)
  80d248:	00800044 	movi	r2,1
  80d24c:	d8800015 	stw	r2,0(sp)
  80d250:	180f883a 	mov	r7,r3
  80d254:	e1bff717 	ldw	r6,-36(fp)
  80d258:	e17ff617 	ldw	r5,-40(fp)
  80d25c:	e13ff717 	ldw	r4,-36(fp)
  80d260:	0813c300 	call	813c30 <jcopy_sample_rows>
  80d264:	e0bff517 	ldw	r2,-44(fp)
  80d268:	10800044 	addi	r2,r2,1
  80d26c:	e0bff515 	stw	r2,-44(fp)
  80d270:	e0bff617 	ldw	r2,-40(fp)
  80d274:	10800084 	addi	r2,r2,2
  80d278:	e0bff615 	stw	r2,-40(fp)
  80d27c:	e0bff917 	ldw	r2,-28(fp)
  80d280:	10805017 	ldw	r2,320(r2)
  80d284:	e0fff617 	ldw	r3,-40(fp)
  80d288:	18bfcc16 	blt	r3,r2,80d1bc <__alt_mem_epcs_flash_controller_0+0xff8041bc>
  80d28c:	0001883a 	nop
  80d290:	e6fffd04 	addi	sp,fp,-12
  80d294:	dfc00417 	ldw	ra,16(sp)
  80d298:	df000317 	ldw	fp,12(sp)
  80d29c:	dc800217 	ldw	r18,8(sp)
  80d2a0:	dc400117 	ldw	r17,4(sp)
  80d2a4:	dc000017 	ldw	r16,0(sp)
  80d2a8:	dec00504 	addi	sp,sp,20
  80d2ac:	f800283a 	ret

0080d2b0 <jinit_upsampler>:
  80d2b0:	defff504 	addi	sp,sp,-44
  80d2b4:	dfc00a15 	stw	ra,40(sp)
  80d2b8:	df000915 	stw	fp,36(sp)
  80d2bc:	dc000815 	stw	r16,32(sp)
  80d2c0:	df000904 	addi	fp,sp,36
  80d2c4:	e13ffe15 	stw	r4,-8(fp)
  80d2c8:	e0bffe17 	ldw	r2,-8(fp)
  80d2cc:	10800117 	ldw	r2,4(r2)
  80d2d0:	10800017 	ldw	r2,0(r2)
  80d2d4:	01802804 	movi	r6,160
  80d2d8:	01400044 	movi	r5,1
  80d2dc:	e13ffe17 	ldw	r4,-8(fp)
  80d2e0:	103ee83a 	callr	r2
  80d2e4:	e0bff915 	stw	r2,-28(fp)
  80d2e8:	e0fff917 	ldw	r3,-28(fp)
  80d2ec:	e0bffe17 	ldw	r2,-8(fp)
  80d2f0:	10c07715 	stw	r3,476(r2)
  80d2f4:	e0fff917 	ldw	r3,-28(fp)
  80d2f8:	00802074 	movhi	r2,129
  80d2fc:	10b2ea04 	addi	r2,r2,-13400
  80d300:	18800015 	stw	r2,0(r3)
  80d304:	e0fff917 	ldw	r3,-28(fp)
  80d308:	00802074 	movhi	r2,129
  80d30c:	10b2fe04 	addi	r2,r2,-13320
  80d310:	18800115 	stw	r2,4(r3)
  80d314:	e0bff917 	ldw	r2,-28(fp)
  80d318:	10000215 	stw	zero,8(r2)
  80d31c:	e0bffe17 	ldw	r2,-8(fp)
  80d320:	10804d17 	ldw	r2,308(r2)
  80d324:	10000926 	beq	r2,zero,80d34c <jinit_upsampler+0x9c>
  80d328:	e0bffe17 	ldw	r2,-8(fp)
  80d32c:	10800017 	ldw	r2,0(r2)
  80d330:	00c00684 	movi	r3,26
  80d334:	10c00515 	stw	r3,20(r2)
  80d338:	e0bffe17 	ldw	r2,-8(fp)
  80d33c:	10800017 	ldw	r2,0(r2)
  80d340:	10800017 	ldw	r2,0(r2)
  80d344:	e13ffe17 	ldw	r4,-8(fp)
  80d348:	103ee83a 	callr	r2
  80d34c:	e03ff715 	stw	zero,-36(fp)
  80d350:	e0bffe17 	ldw	r2,-8(fp)
  80d354:	10803617 	ldw	r2,216(r2)
  80d358:	e0bff815 	stw	r2,-32(fp)
  80d35c:	0000bd06 	br	80d654 <jinit_upsampler+0x3a4>
  80d360:	e0bff817 	ldw	r2,-32(fp)
  80d364:	10c00217 	ldw	r3,8(r2)
  80d368:	e0bff817 	ldw	r2,-32(fp)
  80d36c:	10800917 	ldw	r2,36(r2)
  80d370:	100b883a 	mov	r5,r2
  80d374:	1809883a 	mov	r4,r3
  80d378:	08301e80 	call	8301e8 <__mulsi3>
  80d37c:	1007883a 	mov	r3,r2
  80d380:	e0bffe17 	ldw	r2,-8(fp)
  80d384:	10805117 	ldw	r2,324(r2)
  80d388:	100b883a 	mov	r5,r2
  80d38c:	1809883a 	mov	r4,r3
  80d390:	08300340 	call	830034 <__divsi3>
  80d394:	e0bffa15 	stw	r2,-24(fp)
  80d398:	e0bff817 	ldw	r2,-32(fp)
  80d39c:	10c00317 	ldw	r3,12(r2)
  80d3a0:	e0bff817 	ldw	r2,-32(fp)
  80d3a4:	10800a17 	ldw	r2,40(r2)
  80d3a8:	100b883a 	mov	r5,r2
  80d3ac:	1809883a 	mov	r4,r3
  80d3b0:	08301e80 	call	8301e8 <__mulsi3>
  80d3b4:	1007883a 	mov	r3,r2
  80d3b8:	e0bffe17 	ldw	r2,-8(fp)
  80d3bc:	10805217 	ldw	r2,328(r2)
  80d3c0:	100b883a 	mov	r5,r2
  80d3c4:	1809883a 	mov	r4,r3
  80d3c8:	08300340 	call	830034 <__divsi3>
  80d3cc:	e0bffb15 	stw	r2,-20(fp)
  80d3d0:	e0bffe17 	ldw	r2,-8(fp)
  80d3d4:	10804f17 	ldw	r2,316(r2)
  80d3d8:	e0bffc15 	stw	r2,-16(fp)
  80d3dc:	e0bffe17 	ldw	r2,-8(fp)
  80d3e0:	10805017 	ldw	r2,320(r2)
  80d3e4:	e0bffd15 	stw	r2,-12(fp)
  80d3e8:	e0fff917 	ldw	r3,-28(fp)
  80d3ec:	e0bff717 	ldw	r2,-36(fp)
  80d3f0:	10800644 	addi	r2,r2,25
  80d3f4:	1085883a 	add	r2,r2,r2
  80d3f8:	1085883a 	add	r2,r2,r2
  80d3fc:	1885883a 	add	r2,r3,r2
  80d400:	e0fffb17 	ldw	r3,-20(fp)
  80d404:	10c00015 	stw	r3,0(r2)
  80d408:	e0bff817 	ldw	r2,-32(fp)
  80d40c:	10800d17 	ldw	r2,52(r2)
  80d410:	10000a1e 	bne	r2,zero,80d43c <jinit_upsampler+0x18c>
  80d414:	e0fff917 	ldw	r3,-28(fp)
  80d418:	e0bff717 	ldw	r2,-36(fp)
  80d41c:	10800344 	addi	r2,r2,13
  80d420:	1085883a 	add	r2,r2,r2
  80d424:	1085883a 	add	r2,r2,r2
  80d428:	1887883a 	add	r3,r3,r2
  80d42c:	00802074 	movhi	r2,129
  80d430:	10b3a904 	addi	r2,r2,-12636
  80d434:	18800015 	stw	r2,0(r3)
  80d438:	00008006 	br	80d63c <jinit_upsampler+0x38c>
  80d43c:	e0fffa17 	ldw	r3,-24(fp)
  80d440:	e0bffc17 	ldw	r2,-16(fp)
  80d444:	18800d1e 	bne	r3,r2,80d47c <jinit_upsampler+0x1cc>
  80d448:	e0fffb17 	ldw	r3,-20(fp)
  80d44c:	e0bffd17 	ldw	r2,-12(fp)
  80d450:	18800a1e 	bne	r3,r2,80d47c <jinit_upsampler+0x1cc>
  80d454:	e0fff917 	ldw	r3,-28(fp)
  80d458:	e0bff717 	ldw	r2,-36(fp)
  80d45c:	10800344 	addi	r2,r2,13
  80d460:	1085883a 	add	r2,r2,r2
  80d464:	1085883a 	add	r2,r2,r2
  80d468:	1887883a 	add	r3,r3,r2
  80d46c:	00802074 	movhi	r2,129
  80d470:	10b39a04 	addi	r2,r2,-12696
  80d474:	18800015 	stw	r2,0(r3)
  80d478:	00007006 	br	80d63c <jinit_upsampler+0x38c>
  80d47c:	e0bffa17 	ldw	r2,-24(fp)
  80d480:	1085883a 	add	r2,r2,r2
  80d484:	1007883a 	mov	r3,r2
  80d488:	e0bffc17 	ldw	r2,-16(fp)
  80d48c:	18800d1e 	bne	r3,r2,80d4c4 <jinit_upsampler+0x214>
  80d490:	e0fffb17 	ldw	r3,-20(fp)
  80d494:	e0bffd17 	ldw	r2,-12(fp)
  80d498:	18800a1e 	bne	r3,r2,80d4c4 <jinit_upsampler+0x214>
  80d49c:	e0fff917 	ldw	r3,-28(fp)
  80d4a0:	e0bff717 	ldw	r2,-36(fp)
  80d4a4:	10800344 	addi	r2,r2,13
  80d4a8:	1085883a 	add	r2,r2,r2
  80d4ac:	1085883a 	add	r2,r2,r2
  80d4b0:	1887883a 	add	r3,r3,r2
  80d4b4:	00802074 	movhi	r2,129
  80d4b8:	10b42104 	addi	r2,r2,-12156
  80d4bc:	18800015 	stw	r2,0(r3)
  80d4c0:	00004306 	br	80d5d0 <jinit_upsampler+0x320>
  80d4c4:	e0bffa17 	ldw	r2,-24(fp)
  80d4c8:	1085883a 	add	r2,r2,r2
  80d4cc:	1007883a 	mov	r3,r2
  80d4d0:	e0bffc17 	ldw	r2,-16(fp)
  80d4d4:	18800f1e 	bne	r3,r2,80d514 <jinit_upsampler+0x264>
  80d4d8:	e0bffb17 	ldw	r2,-20(fp)
  80d4dc:	1085883a 	add	r2,r2,r2
  80d4e0:	1007883a 	mov	r3,r2
  80d4e4:	e0bffd17 	ldw	r2,-12(fp)
  80d4e8:	18800a1e 	bne	r3,r2,80d514 <jinit_upsampler+0x264>
  80d4ec:	e0fff917 	ldw	r3,-28(fp)
  80d4f0:	e0bff717 	ldw	r2,-36(fp)
  80d4f4:	10800344 	addi	r2,r2,13
  80d4f8:	1085883a 	add	r2,r2,r2
  80d4fc:	1085883a 	add	r2,r2,r2
  80d500:	1887883a 	add	r3,r3,r2
  80d504:	00802074 	movhi	r2,129
  80d508:	10b45d04 	addi	r2,r2,-11916
  80d50c:	18800015 	stw	r2,0(r3)
  80d510:	00002f06 	br	80d5d0 <jinit_upsampler+0x320>
  80d514:	e0bffc17 	ldw	r2,-16(fp)
  80d518:	e17ffa17 	ldw	r5,-24(fp)
  80d51c:	1009883a 	mov	r4,r2
  80d520:	08300b80 	call	8300b8 <__modsi3>
  80d524:	1000211e 	bne	r2,zero,80d5ac <jinit_upsampler+0x2fc>
  80d528:	e0bffd17 	ldw	r2,-12(fp)
  80d52c:	e17ffb17 	ldw	r5,-20(fp)
  80d530:	1009883a 	mov	r4,r2
  80d534:	08300b80 	call	8300b8 <__modsi3>
  80d538:	10001c1e 	bne	r2,zero,80d5ac <jinit_upsampler+0x2fc>
  80d53c:	e0fff917 	ldw	r3,-28(fp)
  80d540:	e0bff717 	ldw	r2,-36(fp)
  80d544:	10800344 	addi	r2,r2,13
  80d548:	1085883a 	add	r2,r2,r2
  80d54c:	1085883a 	add	r2,r2,r2
  80d550:	1887883a 	add	r3,r3,r2
  80d554:	00802074 	movhi	r2,129
  80d558:	10b3b704 	addi	r2,r2,-12580
  80d55c:	18800015 	stw	r2,0(r3)
  80d560:	e17ffa17 	ldw	r5,-24(fp)
  80d564:	e13ffc17 	ldw	r4,-16(fp)
  80d568:	08300340 	call	830034 <__divsi3>
  80d56c:	1009883a 	mov	r4,r2
  80d570:	e0fff917 	ldw	r3,-28(fp)
  80d574:	e0bff717 	ldw	r2,-36(fp)
  80d578:	1885883a 	add	r2,r3,r2
  80d57c:	10802304 	addi	r2,r2,140
  80d580:	11000005 	stb	r4,0(r2)
  80d584:	e17ffb17 	ldw	r5,-20(fp)
  80d588:	e13ffd17 	ldw	r4,-12(fp)
  80d58c:	08300340 	call	830034 <__divsi3>
  80d590:	1009883a 	mov	r4,r2
  80d594:	e0fff917 	ldw	r3,-28(fp)
  80d598:	e0bff717 	ldw	r2,-36(fp)
  80d59c:	1885883a 	add	r2,r3,r2
  80d5a0:	10802584 	addi	r2,r2,150
  80d5a4:	11000005 	stb	r4,0(r2)
  80d5a8:	00000906 	br	80d5d0 <jinit_upsampler+0x320>
  80d5ac:	e0bffe17 	ldw	r2,-8(fp)
  80d5b0:	10800017 	ldw	r2,0(r2)
  80d5b4:	00c009c4 	movi	r3,39
  80d5b8:	10c00515 	stw	r3,20(r2)
  80d5bc:	e0bffe17 	ldw	r2,-8(fp)
  80d5c0:	10800017 	ldw	r2,0(r2)
  80d5c4:	10800017 	ldw	r2,0(r2)
  80d5c8:	e13ffe17 	ldw	r4,-8(fp)
  80d5cc:	103ee83a 	callr	r2
  80d5d0:	e0bffe17 	ldw	r2,-8(fp)
  80d5d4:	10800117 	ldw	r2,4(r2)
  80d5d8:	14000217 	ldw	r16,8(r2)
  80d5dc:	e0bffe17 	ldw	r2,-8(fp)
  80d5e0:	10801c17 	ldw	r2,112(r2)
  80d5e4:	1007883a 	mov	r3,r2
  80d5e8:	e0bffe17 	ldw	r2,-8(fp)
  80d5ec:	10804f17 	ldw	r2,316(r2)
  80d5f0:	100b883a 	mov	r5,r2
  80d5f4:	1809883a 	mov	r4,r3
  80d5f8:	0813bd40 	call	813bd4 <jround_up>
  80d5fc:	1007883a 	mov	r3,r2
  80d600:	e0bffe17 	ldw	r2,-8(fp)
  80d604:	10805017 	ldw	r2,320(r2)
  80d608:	100f883a 	mov	r7,r2
  80d60c:	180d883a 	mov	r6,r3
  80d610:	01400044 	movi	r5,1
  80d614:	e13ffe17 	ldw	r4,-8(fp)
  80d618:	803ee83a 	callr	r16
  80d61c:	1009883a 	mov	r4,r2
  80d620:	e0fff917 	ldw	r3,-28(fp)
  80d624:	e0bff717 	ldw	r2,-36(fp)
  80d628:	108000c4 	addi	r2,r2,3
  80d62c:	1085883a 	add	r2,r2,r2
  80d630:	1085883a 	add	r2,r2,r2
  80d634:	1885883a 	add	r2,r3,r2
  80d638:	11000015 	stw	r4,0(r2)
  80d63c:	e0bff717 	ldw	r2,-36(fp)
  80d640:	10800044 	addi	r2,r2,1
  80d644:	e0bff715 	stw	r2,-36(fp)
  80d648:	e0bff817 	ldw	r2,-32(fp)
  80d64c:	10801604 	addi	r2,r2,88
  80d650:	e0bff815 	stw	r2,-32(fp)
  80d654:	e0bffe17 	ldw	r2,-8(fp)
  80d658:	10800917 	ldw	r2,36(r2)
  80d65c:	e0fff717 	ldw	r3,-36(fp)
  80d660:	18bf3f16 	blt	r3,r2,80d360 <__alt_mem_epcs_flash_controller_0+0xff804360>
  80d664:	0001883a 	nop
  80d668:	e6ffff04 	addi	sp,fp,-4
  80d66c:	dfc00217 	ldw	ra,8(sp)
  80d670:	df000117 	ldw	fp,4(sp)
  80d674:	dc000017 	ldw	r16,0(sp)
  80d678:	dec00304 	addi	sp,sp,12
  80d67c:	f800283a 	ret

0080d680 <error_exit>:
  80d680:	defffd04 	addi	sp,sp,-12
  80d684:	dfc00215 	stw	ra,8(sp)
  80d688:	df000115 	stw	fp,4(sp)
  80d68c:	df000104 	addi	fp,sp,4
  80d690:	e13fff15 	stw	r4,-4(fp)
  80d694:	e0bfff17 	ldw	r2,-4(fp)
  80d698:	10800017 	ldw	r2,0(r2)
  80d69c:	10800217 	ldw	r2,8(r2)
  80d6a0:	e13fff17 	ldw	r4,-4(fp)
  80d6a4:	103ee83a 	callr	r2
  80d6a8:	e13fff17 	ldw	r4,-4(fp)
  80d6ac:	0813df40 	call	813df4 <jpeg_destroy>
  80d6b0:	01000044 	movi	r4,1
  80d6b4:	0831cec0 	call	831cec <exit>

0080d6b8 <output_message>:
  80d6b8:	deffcb04 	addi	sp,sp,-212
  80d6bc:	dfc03415 	stw	ra,208(sp)
  80d6c0:	df003315 	stw	fp,204(sp)
  80d6c4:	df003304 	addi	fp,sp,204
  80d6c8:	e13fff15 	stw	r4,-4(fp)
  80d6cc:	e0bfff17 	ldw	r2,-4(fp)
  80d6d0:	10800017 	ldw	r2,0(r2)
  80d6d4:	10800317 	ldw	r2,12(r2)
  80d6d8:	e17fcd04 	addi	r5,fp,-204
  80d6dc:	e13fff17 	ldw	r4,-4(fp)
  80d6e0:	103ee83a 	callr	r2
  80d6e4:	d0a03617 	ldw	r2,-32552(gp)
  80d6e8:	10800317 	ldw	r2,12(r2)
  80d6ec:	e1bfcd04 	addi	r6,fp,-204
  80d6f0:	014021b4 	movhi	r5,134
  80d6f4:	2962b304 	addi	r5,r5,-30004
  80d6f8:	1009883a 	mov	r4,r2
  80d6fc:	08329800 	call	832980 <fprintf>
  80d700:	0001883a 	nop
  80d704:	e037883a 	mov	sp,fp
  80d708:	dfc00117 	ldw	ra,4(sp)
  80d70c:	df000017 	ldw	fp,0(sp)
  80d710:	dec00204 	addi	sp,sp,8
  80d714:	f800283a 	ret

0080d718 <emit_message>:
  80d718:	defffb04 	addi	sp,sp,-20
  80d71c:	dfc00415 	stw	ra,16(sp)
  80d720:	df000315 	stw	fp,12(sp)
  80d724:	df000304 	addi	fp,sp,12
  80d728:	e13ffe15 	stw	r4,-8(fp)
  80d72c:	e17fff15 	stw	r5,-4(fp)
  80d730:	e0bffe17 	ldw	r2,-8(fp)
  80d734:	10800017 	ldw	r2,0(r2)
  80d738:	e0bffd15 	stw	r2,-12(fp)
  80d73c:	e0bfff17 	ldw	r2,-4(fp)
  80d740:	1000110e 	bge	r2,zero,80d788 <emit_message+0x70>
  80d744:	e0bffd17 	ldw	r2,-12(fp)
  80d748:	10801b17 	ldw	r2,108(r2)
  80d74c:	10000426 	beq	r2,zero,80d760 <emit_message+0x48>
  80d750:	e0bffd17 	ldw	r2,-12(fp)
  80d754:	10801a17 	ldw	r2,104(r2)
  80d758:	108000d0 	cmplti	r2,r2,3
  80d75c:	1000041e 	bne	r2,zero,80d770 <emit_message+0x58>
  80d760:	e0bffd17 	ldw	r2,-12(fp)
  80d764:	10800217 	ldw	r2,8(r2)
  80d768:	e13ffe17 	ldw	r4,-8(fp)
  80d76c:	103ee83a 	callr	r2
  80d770:	e0bffd17 	ldw	r2,-12(fp)
  80d774:	10801b17 	ldw	r2,108(r2)
  80d778:	10c00044 	addi	r3,r2,1
  80d77c:	e0bffd17 	ldw	r2,-12(fp)
  80d780:	10c01b15 	stw	r3,108(r2)
  80d784:	00000806 	br	80d7a8 <emit_message+0x90>
  80d788:	e0bffd17 	ldw	r2,-12(fp)
  80d78c:	10c01a17 	ldw	r3,104(r2)
  80d790:	e0bfff17 	ldw	r2,-4(fp)
  80d794:	18800416 	blt	r3,r2,80d7a8 <emit_message+0x90>
  80d798:	e0bffd17 	ldw	r2,-12(fp)
  80d79c:	10800217 	ldw	r2,8(r2)
  80d7a0:	e13ffe17 	ldw	r4,-8(fp)
  80d7a4:	103ee83a 	callr	r2
  80d7a8:	0001883a 	nop
  80d7ac:	e037883a 	mov	sp,fp
  80d7b0:	dfc00117 	ldw	ra,4(sp)
  80d7b4:	df000017 	ldw	fp,0(sp)
  80d7b8:	dec00204 	addi	sp,sp,8
  80d7bc:	f800283a 	ret

0080d7c0 <format_message>:
  80d7c0:	defff004 	addi	sp,sp,-64
  80d7c4:	dfc00f15 	stw	ra,60(sp)
  80d7c8:	df000e15 	stw	fp,56(sp)
  80d7cc:	df000e04 	addi	fp,sp,56
  80d7d0:	e13ffe15 	stw	r4,-8(fp)
  80d7d4:	e17fff15 	stw	r5,-4(fp)
  80d7d8:	e0bffe17 	ldw	r2,-8(fp)
  80d7dc:	10800017 	ldw	r2,0(r2)
  80d7e0:	e0bffb15 	stw	r2,-20(fp)
  80d7e4:	e0bffb17 	ldw	r2,-20(fp)
  80d7e8:	10800517 	ldw	r2,20(r2)
  80d7ec:	e0bffc15 	stw	r2,-16(fp)
  80d7f0:	e03ff815 	stw	zero,-32(fp)
  80d7f4:	e0bffc17 	ldw	r2,-16(fp)
  80d7f8:	00800d0e 	bge	zero,r2,80d830 <format_message+0x70>
  80d7fc:	e0bffb17 	ldw	r2,-20(fp)
  80d800:	10c01d17 	ldw	r3,116(r2)
  80d804:	e0bffc17 	ldw	r2,-16(fp)
  80d808:	18800916 	blt	r3,r2,80d830 <format_message+0x70>
  80d80c:	e0bffb17 	ldw	r2,-20(fp)
  80d810:	10c01c17 	ldw	r3,112(r2)
  80d814:	e0bffc17 	ldw	r2,-16(fp)
  80d818:	1085883a 	add	r2,r2,r2
  80d81c:	1085883a 	add	r2,r2,r2
  80d820:	1885883a 	add	r2,r3,r2
  80d824:	10800017 	ldw	r2,0(r2)
  80d828:	e0bff815 	stw	r2,-32(fp)
  80d82c:	00001606 	br	80d888 <format_message+0xc8>
  80d830:	e0bffb17 	ldw	r2,-20(fp)
  80d834:	10801e17 	ldw	r2,120(r2)
  80d838:	10001326 	beq	r2,zero,80d888 <format_message+0xc8>
  80d83c:	e0bffb17 	ldw	r2,-20(fp)
  80d840:	10801f17 	ldw	r2,124(r2)
  80d844:	e0fffc17 	ldw	r3,-16(fp)
  80d848:	18800f16 	blt	r3,r2,80d888 <format_message+0xc8>
  80d84c:	e0bffb17 	ldw	r2,-20(fp)
  80d850:	10c02017 	ldw	r3,128(r2)
  80d854:	e0bffc17 	ldw	r2,-16(fp)
  80d858:	18800b16 	blt	r3,r2,80d888 <format_message+0xc8>
  80d85c:	e0bffb17 	ldw	r2,-20(fp)
  80d860:	10c01e17 	ldw	r3,120(r2)
  80d864:	e0bffb17 	ldw	r2,-20(fp)
  80d868:	10801f17 	ldw	r2,124(r2)
  80d86c:	e13ffc17 	ldw	r4,-16(fp)
  80d870:	2085c83a 	sub	r2,r4,r2
  80d874:	1085883a 	add	r2,r2,r2
  80d878:	1085883a 	add	r2,r2,r2
  80d87c:	1885883a 	add	r2,r3,r2
  80d880:	10800017 	ldw	r2,0(r2)
  80d884:	e0bff815 	stw	r2,-32(fp)
  80d888:	e0bff817 	ldw	r2,-32(fp)
  80d88c:	1000071e 	bne	r2,zero,80d8ac <format_message+0xec>
  80d890:	e0bffb17 	ldw	r2,-20(fp)
  80d894:	e0fffc17 	ldw	r3,-16(fp)
  80d898:	10c00615 	stw	r3,24(r2)
  80d89c:	e0bffb17 	ldw	r2,-20(fp)
  80d8a0:	10801c17 	ldw	r2,112(r2)
  80d8a4:	10800017 	ldw	r2,0(r2)
  80d8a8:	e0bff815 	stw	r2,-32(fp)
  80d8ac:	e03ffa15 	stw	zero,-24(fp)
  80d8b0:	e0bff817 	ldw	r2,-32(fp)
  80d8b4:	e0bff915 	stw	r2,-28(fp)
  80d8b8:	00000d06 	br	80d8f0 <format_message+0x130>
  80d8bc:	e0bffd07 	ldb	r2,-12(fp)
  80d8c0:	10800958 	cmpnei	r2,r2,37
  80d8c4:	10000a1e 	bne	r2,zero,80d8f0 <format_message+0x130>
  80d8c8:	e0bff917 	ldw	r2,-28(fp)
  80d8cc:	10800003 	ldbu	r2,0(r2)
  80d8d0:	10803fcc 	andi	r2,r2,255
  80d8d4:	1080201c 	xori	r2,r2,128
  80d8d8:	10bfe004 	addi	r2,r2,-128
  80d8dc:	10801cd8 	cmpnei	r2,r2,115
  80d8e0:	10000b1e 	bne	r2,zero,80d910 <format_message+0x150>
  80d8e4:	00800044 	movi	r2,1
  80d8e8:	e0bffa15 	stw	r2,-24(fp)
  80d8ec:	00000806 	br	80d910 <format_message+0x150>
  80d8f0:	e0bff917 	ldw	r2,-28(fp)
  80d8f4:	10c00044 	addi	r3,r2,1
  80d8f8:	e0fff915 	stw	r3,-28(fp)
  80d8fc:	10800003 	ldbu	r2,0(r2)
  80d900:	e0bffd05 	stb	r2,-12(fp)
  80d904:	e0bffd07 	ldb	r2,-12(fp)
  80d908:	103fec1e 	bne	r2,zero,80d8bc <__alt_mem_epcs_flash_controller_0+0xff8048bc>
  80d90c:	00000106 	br	80d914 <format_message+0x154>
  80d910:	0001883a 	nop
  80d914:	e0bffa17 	ldw	r2,-24(fp)
  80d918:	10000726 	beq	r2,zero,80d938 <format_message+0x178>
  80d91c:	e0bffb17 	ldw	r2,-20(fp)
  80d920:	10800604 	addi	r2,r2,24
  80d924:	100d883a 	mov	r6,r2
  80d928:	e17ff817 	ldw	r5,-32(fp)
  80d92c:	e13fff17 	ldw	r4,-4(fp)
  80d930:	0834e740 	call	834e74 <sprintf>
  80d934:	00001b06 	br	80d9a4 <format_message+0x1e4>
  80d938:	e0bffb17 	ldw	r2,-20(fp)
  80d93c:	12000617 	ldw	r8,24(r2)
  80d940:	e0bffb17 	ldw	r2,-20(fp)
  80d944:	12400717 	ldw	r9,28(r2)
  80d948:	e0bffb17 	ldw	r2,-20(fp)
  80d94c:	10800817 	ldw	r2,32(r2)
  80d950:	e0fffb17 	ldw	r3,-20(fp)
  80d954:	18c00917 	ldw	r3,36(r3)
  80d958:	e13ffb17 	ldw	r4,-20(fp)
  80d95c:	21000a17 	ldw	r4,40(r4)
  80d960:	e17ffb17 	ldw	r5,-20(fp)
  80d964:	29400b17 	ldw	r5,44(r5)
  80d968:	e1bffb17 	ldw	r6,-20(fp)
  80d96c:	31800c17 	ldw	r6,48(r6)
  80d970:	e1fffb17 	ldw	r7,-20(fp)
  80d974:	39c00d17 	ldw	r7,52(r7)
  80d978:	d9c00515 	stw	r7,20(sp)
  80d97c:	d9800415 	stw	r6,16(sp)
  80d980:	d9400315 	stw	r5,12(sp)
  80d984:	d9000215 	stw	r4,8(sp)
  80d988:	d8c00115 	stw	r3,4(sp)
  80d98c:	d8800015 	stw	r2,0(sp)
  80d990:	480f883a 	mov	r7,r9
  80d994:	400d883a 	mov	r6,r8
  80d998:	e17ff817 	ldw	r5,-32(fp)
  80d99c:	e13fff17 	ldw	r4,-4(fp)
  80d9a0:	0834e740 	call	834e74 <sprintf>
  80d9a4:	0001883a 	nop
  80d9a8:	e037883a 	mov	sp,fp
  80d9ac:	dfc00117 	ldw	ra,4(sp)
  80d9b0:	df000017 	ldw	fp,0(sp)
  80d9b4:	dec00204 	addi	sp,sp,8
  80d9b8:	f800283a 	ret

0080d9bc <reset_error_mgr>:
  80d9bc:	defffe04 	addi	sp,sp,-8
  80d9c0:	df000115 	stw	fp,4(sp)
  80d9c4:	df000104 	addi	fp,sp,4
  80d9c8:	e13fff15 	stw	r4,-4(fp)
  80d9cc:	e0bfff17 	ldw	r2,-4(fp)
  80d9d0:	10800017 	ldw	r2,0(r2)
  80d9d4:	10001b15 	stw	zero,108(r2)
  80d9d8:	e0bfff17 	ldw	r2,-4(fp)
  80d9dc:	10800017 	ldw	r2,0(r2)
  80d9e0:	10000515 	stw	zero,20(r2)
  80d9e4:	0001883a 	nop
  80d9e8:	e037883a 	mov	sp,fp
  80d9ec:	df000017 	ldw	fp,0(sp)
  80d9f0:	dec00104 	addi	sp,sp,4
  80d9f4:	f800283a 	ret

0080d9f8 <jpeg_std_error>:
  80d9f8:	defffe04 	addi	sp,sp,-8
  80d9fc:	df000115 	stw	fp,4(sp)
  80da00:	df000104 	addi	fp,sp,4
  80da04:	e13fff15 	stw	r4,-4(fp)
  80da08:	e0ffff17 	ldw	r3,-4(fp)
  80da0c:	00802074 	movhi	r2,129
  80da10:	10b5a004 	addi	r2,r2,-10624
  80da14:	18800015 	stw	r2,0(r3)
  80da18:	e0ffff17 	ldw	r3,-4(fp)
  80da1c:	00802074 	movhi	r2,129
  80da20:	10b5c604 	addi	r2,r2,-10472
  80da24:	18800115 	stw	r2,4(r3)
  80da28:	e0ffff17 	ldw	r3,-4(fp)
  80da2c:	00802074 	movhi	r2,129
  80da30:	10b5ae04 	addi	r2,r2,-10568
  80da34:	18800215 	stw	r2,8(r3)
  80da38:	e0ffff17 	ldw	r3,-4(fp)
  80da3c:	00802074 	movhi	r2,129
  80da40:	10b5f004 	addi	r2,r2,-10304
  80da44:	18800315 	stw	r2,12(r3)
  80da48:	e0ffff17 	ldw	r3,-4(fp)
  80da4c:	00802074 	movhi	r2,129
  80da50:	10b66f04 	addi	r2,r2,-9796
  80da54:	18800415 	stw	r2,16(r3)
  80da58:	e0bfff17 	ldw	r2,-4(fp)
  80da5c:	10001a15 	stw	zero,104(r2)
  80da60:	e0bfff17 	ldw	r2,-4(fp)
  80da64:	10001b15 	stw	zero,108(r2)
  80da68:	e0bfff17 	ldw	r2,-4(fp)
  80da6c:	10000515 	stw	zero,20(r2)
  80da70:	e0ffff17 	ldw	r3,-4(fp)
  80da74:	008021b4 	movhi	r2,134
  80da78:	10a23304 	addi	r2,r2,-30516
  80da7c:	18801c15 	stw	r2,112(r3)
  80da80:	e0bfff17 	ldw	r2,-4(fp)
  80da84:	00c01f84 	movi	r3,126
  80da88:	10c01d15 	stw	r3,116(r2)
  80da8c:	e0bfff17 	ldw	r2,-4(fp)
  80da90:	10001e15 	stw	zero,120(r2)
  80da94:	e0bfff17 	ldw	r2,-4(fp)
  80da98:	10001f15 	stw	zero,124(r2)
  80da9c:	e0bfff17 	ldw	r2,-4(fp)
  80daa0:	10002015 	stw	zero,128(r2)
  80daa4:	e0bfff17 	ldw	r2,-4(fp)
  80daa8:	e037883a 	mov	sp,fp
  80daac:	df000017 	ldw	fp,0(sp)
  80dab0:	dec00104 	addi	sp,sp,4
  80dab4:	f800283a 	ret

0080dab8 <out_of_memory>:
  80dab8:	defffc04 	addi	sp,sp,-16
  80dabc:	dfc00315 	stw	ra,12(sp)
  80dac0:	df000215 	stw	fp,8(sp)
  80dac4:	df000204 	addi	fp,sp,8
  80dac8:	e13ffe15 	stw	r4,-8(fp)
  80dacc:	e17fff15 	stw	r5,-4(fp)
  80dad0:	e0bffe17 	ldw	r2,-8(fp)
  80dad4:	10800017 	ldw	r2,0(r2)
  80dad8:	00c00e04 	movi	r3,56
  80dadc:	10c00515 	stw	r3,20(r2)
  80dae0:	e0bffe17 	ldw	r2,-8(fp)
  80dae4:	10800017 	ldw	r2,0(r2)
  80dae8:	e0ffff17 	ldw	r3,-4(fp)
  80daec:	10c00615 	stw	r3,24(r2)
  80daf0:	e0bffe17 	ldw	r2,-8(fp)
  80daf4:	10800017 	ldw	r2,0(r2)
  80daf8:	10800017 	ldw	r2,0(r2)
  80dafc:	e13ffe17 	ldw	r4,-8(fp)
  80db00:	103ee83a 	callr	r2
  80db04:	0001883a 	nop
  80db08:	e037883a 	mov	sp,fp
  80db0c:	dfc00117 	ldw	ra,4(sp)
  80db10:	df000017 	ldw	fp,0(sp)
  80db14:	dec00204 	addi	sp,sp,8
  80db18:	f800283a 	ret

0080db1c <alloc_small>:
  80db1c:	defff404 	addi	sp,sp,-48
  80db20:	dfc00b15 	stw	ra,44(sp)
  80db24:	df000a15 	stw	fp,40(sp)
  80db28:	df000a04 	addi	fp,sp,40
  80db2c:	e13ffd15 	stw	r4,-12(fp)
  80db30:	e17ffe15 	stw	r5,-8(fp)
  80db34:	e1bfff15 	stw	r6,-4(fp)
  80db38:	e0bffd17 	ldw	r2,-12(fp)
  80db3c:	10800117 	ldw	r2,4(r2)
  80db40:	e0bff915 	stw	r2,-28(fp)
  80db44:	e0ffff17 	ldw	r3,-4(fp)
  80db48:	008ee6f4 	movhi	r2,15259
  80db4c:	10b27d04 	addi	r2,r2,-13836
  80db50:	10c0032e 	bgeu	r2,r3,80db60 <alloc_small+0x44>
  80db54:	01400044 	movi	r5,1
  80db58:	e13ffd17 	ldw	r4,-12(fp)
  80db5c:	080dab80 	call	80dab8 <out_of_memory>
  80db60:	e0bfff17 	ldw	r2,-4(fp)
  80db64:	108001cc 	andi	r2,r2,7
  80db68:	e0bffa15 	stw	r2,-24(fp)
  80db6c:	e0bffa17 	ldw	r2,-24(fp)
  80db70:	10000526 	beq	r2,zero,80db88 <alloc_small+0x6c>
  80db74:	e0ffff17 	ldw	r3,-4(fp)
  80db78:	e0bffa17 	ldw	r2,-24(fp)
  80db7c:	1885c83a 	sub	r2,r3,r2
  80db80:	10800204 	addi	r2,r2,8
  80db84:	e0bfff15 	stw	r2,-4(fp)
  80db88:	e0bffe17 	ldw	r2,-8(fp)
  80db8c:	10000316 	blt	r2,zero,80db9c <alloc_small+0x80>
  80db90:	e0bffe17 	ldw	r2,-8(fp)
  80db94:	10800090 	cmplti	r2,r2,2
  80db98:	10000d1e 	bne	r2,zero,80dbd0 <alloc_small+0xb4>
  80db9c:	e0bffd17 	ldw	r2,-12(fp)
  80dba0:	10800017 	ldw	r2,0(r2)
  80dba4:	00c003c4 	movi	r3,15
  80dba8:	10c00515 	stw	r3,20(r2)
  80dbac:	e0bffd17 	ldw	r2,-12(fp)
  80dbb0:	10800017 	ldw	r2,0(r2)
  80dbb4:	e0fffe17 	ldw	r3,-8(fp)
  80dbb8:	10c00615 	stw	r3,24(r2)
  80dbbc:	e0bffd17 	ldw	r2,-12(fp)
  80dbc0:	10800017 	ldw	r2,0(r2)
  80dbc4:	10800017 	ldw	r2,0(r2)
  80dbc8:	e13ffd17 	ldw	r4,-12(fp)
  80dbcc:	103ee83a 	callr	r2
  80dbd0:	e03ff715 	stw	zero,-36(fp)
  80dbd4:	e0fff917 	ldw	r3,-28(fp)
  80dbd8:	e0bffe17 	ldw	r2,-8(fp)
  80dbdc:	10800344 	addi	r2,r2,13
  80dbe0:	1085883a 	add	r2,r2,r2
  80dbe4:	1085883a 	add	r2,r2,r2
  80dbe8:	1885883a 	add	r2,r3,r2
  80dbec:	10800017 	ldw	r2,0(r2)
  80dbf0:	e0bff615 	stw	r2,-40(fp)
  80dbf4:	00000906 	br	80dc1c <alloc_small+0x100>
  80dbf8:	e0bff617 	ldw	r2,-40(fp)
  80dbfc:	10c00217 	ldw	r3,8(r2)
  80dc00:	e0bfff17 	ldw	r2,-4(fp)
  80dc04:	1880082e 	bgeu	r3,r2,80dc28 <alloc_small+0x10c>
  80dc08:	e0bff617 	ldw	r2,-40(fp)
  80dc0c:	e0bff715 	stw	r2,-36(fp)
  80dc10:	e0bff617 	ldw	r2,-40(fp)
  80dc14:	10800017 	ldw	r2,0(r2)
  80dc18:	e0bff615 	stw	r2,-40(fp)
  80dc1c:	e0bff617 	ldw	r2,-40(fp)
  80dc20:	103ff51e 	bne	r2,zero,80dbf8 <__alt_mem_epcs_flash_controller_0+0xff804bf8>
  80dc24:	00000106 	br	80dc2c <alloc_small+0x110>
  80dc28:	0001883a 	nop
  80dc2c:	e0bff617 	ldw	r2,-40(fp)
  80dc30:	1000541e 	bne	r2,zero,80dd84 <alloc_small+0x268>
  80dc34:	e0bfff17 	ldw	r2,-4(fp)
  80dc38:	10800304 	addi	r2,r2,12
  80dc3c:	e0bffb15 	stw	r2,-20(fp)
  80dc40:	e0bff717 	ldw	r2,-36(fp)
  80dc44:	1000081e 	bne	r2,zero,80dc68 <alloc_small+0x14c>
  80dc48:	e0bffe17 	ldw	r2,-8(fp)
  80dc4c:	1085883a 	add	r2,r2,r2
  80dc50:	1087883a 	add	r3,r2,r2
  80dc54:	d0a03104 	addi	r2,gp,-32572
  80dc58:	1885883a 	add	r2,r3,r2
  80dc5c:	10800017 	ldw	r2,0(r2)
  80dc60:	e0bff815 	stw	r2,-32(fp)
  80dc64:	00000706 	br	80dc84 <alloc_small+0x168>
  80dc68:	e0bffe17 	ldw	r2,-8(fp)
  80dc6c:	1085883a 	add	r2,r2,r2
  80dc70:	1087883a 	add	r3,r2,r2
  80dc74:	d0a03304 	addi	r2,gp,-32564
  80dc78:	1885883a 	add	r2,r3,r2
  80dc7c:	10800017 	ldw	r2,0(r2)
  80dc80:	e0bff815 	stw	r2,-32(fp)
  80dc84:	008ee6f4 	movhi	r2,15259
  80dc88:	10b28004 	addi	r2,r2,-13824
  80dc8c:	e0fffb17 	ldw	r3,-20(fp)
  80dc90:	10c7c83a 	sub	r3,r2,r3
  80dc94:	e0bff817 	ldw	r2,-32(fp)
  80dc98:	1880052e 	bgeu	r3,r2,80dcb0 <alloc_small+0x194>
  80dc9c:	008ee6f4 	movhi	r2,15259
  80dca0:	10b28004 	addi	r2,r2,-13824
  80dca4:	e0fffb17 	ldw	r3,-20(fp)
  80dca8:	10c5c83a 	sub	r2,r2,r3
  80dcac:	e0bff815 	stw	r2,-32(fp)
  80dcb0:	e0fffb17 	ldw	r3,-20(fp)
  80dcb4:	e0bff817 	ldw	r2,-32(fp)
  80dcb8:	1885883a 	add	r2,r3,r2
  80dcbc:	100b883a 	mov	r5,r2
  80dcc0:	e13ffd17 	ldw	r4,-12(fp)
  80dcc4:	080f7e80 	call	80f7e8 <jpeg_get_small>
  80dcc8:	e0bff615 	stw	r2,-40(fp)
  80dccc:	e0bff617 	ldw	r2,-40(fp)
  80dcd0:	10000a1e 	bne	r2,zero,80dcfc <alloc_small+0x1e0>
  80dcd4:	e0bff817 	ldw	r2,-32(fp)
  80dcd8:	1004d07a 	srli	r2,r2,1
  80dcdc:	e0bff815 	stw	r2,-32(fp)
  80dce0:	e0bff817 	ldw	r2,-32(fp)
  80dce4:	10800ca8 	cmpgeui	r2,r2,50
  80dce8:	103ff11e 	bne	r2,zero,80dcb0 <__alt_mem_epcs_flash_controller_0+0xff804cb0>
  80dcec:	01400084 	movi	r5,2
  80dcf0:	e13ffd17 	ldw	r4,-12(fp)
  80dcf4:	080dab80 	call	80dab8 <out_of_memory>
  80dcf8:	003fed06 	br	80dcb0 <__alt_mem_epcs_flash_controller_0+0xff804cb0>
  80dcfc:	0001883a 	nop
  80dd00:	e0bff917 	ldw	r2,-28(fp)
  80dd04:	10801317 	ldw	r2,76(r2)
  80dd08:	1009883a 	mov	r4,r2
  80dd0c:	e0fffb17 	ldw	r3,-20(fp)
  80dd10:	e0bff817 	ldw	r2,-32(fp)
  80dd14:	1885883a 	add	r2,r3,r2
  80dd18:	2085883a 	add	r2,r4,r2
  80dd1c:	1007883a 	mov	r3,r2
  80dd20:	e0bff917 	ldw	r2,-28(fp)
  80dd24:	10c01315 	stw	r3,76(r2)
  80dd28:	e0bff617 	ldw	r2,-40(fp)
  80dd2c:	10000015 	stw	zero,0(r2)
  80dd30:	e0bff617 	ldw	r2,-40(fp)
  80dd34:	10000115 	stw	zero,4(r2)
  80dd38:	e0ffff17 	ldw	r3,-4(fp)
  80dd3c:	e0bff817 	ldw	r2,-32(fp)
  80dd40:	1887883a 	add	r3,r3,r2
  80dd44:	e0bff617 	ldw	r2,-40(fp)
  80dd48:	10c00215 	stw	r3,8(r2)
  80dd4c:	e0bff717 	ldw	r2,-36(fp)
  80dd50:	1000091e 	bne	r2,zero,80dd78 <alloc_small+0x25c>
  80dd54:	e0fff917 	ldw	r3,-28(fp)
  80dd58:	e0bffe17 	ldw	r2,-8(fp)
  80dd5c:	10800344 	addi	r2,r2,13
  80dd60:	1085883a 	add	r2,r2,r2
  80dd64:	1085883a 	add	r2,r2,r2
  80dd68:	1885883a 	add	r2,r3,r2
  80dd6c:	e0fff617 	ldw	r3,-40(fp)
  80dd70:	10c00015 	stw	r3,0(r2)
  80dd74:	00000306 	br	80dd84 <alloc_small+0x268>
  80dd78:	e0bff717 	ldw	r2,-36(fp)
  80dd7c:	e0fff617 	ldw	r3,-40(fp)
  80dd80:	10c00015 	stw	r3,0(r2)
  80dd84:	e0bff617 	ldw	r2,-40(fp)
  80dd88:	10800304 	addi	r2,r2,12
  80dd8c:	e0bffc15 	stw	r2,-16(fp)
  80dd90:	e0bff617 	ldw	r2,-40(fp)
  80dd94:	10800117 	ldw	r2,4(r2)
  80dd98:	e0fffc17 	ldw	r3,-16(fp)
  80dd9c:	1885883a 	add	r2,r3,r2
  80dda0:	e0bffc15 	stw	r2,-16(fp)
  80dda4:	e0bff617 	ldw	r2,-40(fp)
  80dda8:	10c00117 	ldw	r3,4(r2)
  80ddac:	e0bfff17 	ldw	r2,-4(fp)
  80ddb0:	1887883a 	add	r3,r3,r2
  80ddb4:	e0bff617 	ldw	r2,-40(fp)
  80ddb8:	10c00115 	stw	r3,4(r2)
  80ddbc:	e0bff617 	ldw	r2,-40(fp)
  80ddc0:	10c00217 	ldw	r3,8(r2)
  80ddc4:	e0bfff17 	ldw	r2,-4(fp)
  80ddc8:	1887c83a 	sub	r3,r3,r2
  80ddcc:	e0bff617 	ldw	r2,-40(fp)
  80ddd0:	10c00215 	stw	r3,8(r2)
  80ddd4:	e0bffc17 	ldw	r2,-16(fp)
  80ddd8:	e037883a 	mov	sp,fp
  80dddc:	dfc00117 	ldw	ra,4(sp)
  80dde0:	df000017 	ldw	fp,0(sp)
  80dde4:	dec00204 	addi	sp,sp,8
  80dde8:	f800283a 	ret

0080ddec <alloc_large>:
  80ddec:	defff804 	addi	sp,sp,-32
  80ddf0:	dfc00715 	stw	ra,28(sp)
  80ddf4:	df000615 	stw	fp,24(sp)
  80ddf8:	df000604 	addi	fp,sp,24
  80ddfc:	e13ffd15 	stw	r4,-12(fp)
  80de00:	e17ffe15 	stw	r5,-8(fp)
  80de04:	e1bfff15 	stw	r6,-4(fp)
  80de08:	e0bffd17 	ldw	r2,-12(fp)
  80de0c:	10800117 	ldw	r2,4(r2)
  80de10:	e0bffa15 	stw	r2,-24(fp)
  80de14:	e0ffff17 	ldw	r3,-4(fp)
  80de18:	008ee6f4 	movhi	r2,15259
  80de1c:	10b27d04 	addi	r2,r2,-13836
  80de20:	10c0032e 	bgeu	r2,r3,80de30 <alloc_large+0x44>
  80de24:	014000c4 	movi	r5,3
  80de28:	e13ffd17 	ldw	r4,-12(fp)
  80de2c:	080dab80 	call	80dab8 <out_of_memory>
  80de30:	e0bfff17 	ldw	r2,-4(fp)
  80de34:	108001cc 	andi	r2,r2,7
  80de38:	e0bffb15 	stw	r2,-20(fp)
  80de3c:	e0bffb17 	ldw	r2,-20(fp)
  80de40:	10000526 	beq	r2,zero,80de58 <alloc_large+0x6c>
  80de44:	e0ffff17 	ldw	r3,-4(fp)
  80de48:	e0bffb17 	ldw	r2,-20(fp)
  80de4c:	1885c83a 	sub	r2,r3,r2
  80de50:	10800204 	addi	r2,r2,8
  80de54:	e0bfff15 	stw	r2,-4(fp)
  80de58:	e0bffe17 	ldw	r2,-8(fp)
  80de5c:	10000316 	blt	r2,zero,80de6c <alloc_large+0x80>
  80de60:	e0bffe17 	ldw	r2,-8(fp)
  80de64:	10800090 	cmplti	r2,r2,2
  80de68:	10000d1e 	bne	r2,zero,80dea0 <alloc_large+0xb4>
  80de6c:	e0bffd17 	ldw	r2,-12(fp)
  80de70:	10800017 	ldw	r2,0(r2)
  80de74:	00c003c4 	movi	r3,15
  80de78:	10c00515 	stw	r3,20(r2)
  80de7c:	e0bffd17 	ldw	r2,-12(fp)
  80de80:	10800017 	ldw	r2,0(r2)
  80de84:	e0fffe17 	ldw	r3,-8(fp)
  80de88:	10c00615 	stw	r3,24(r2)
  80de8c:	e0bffd17 	ldw	r2,-12(fp)
  80de90:	10800017 	ldw	r2,0(r2)
  80de94:	10800017 	ldw	r2,0(r2)
  80de98:	e13ffd17 	ldw	r4,-12(fp)
  80de9c:	103ee83a 	callr	r2
  80dea0:	e0bfff17 	ldw	r2,-4(fp)
  80dea4:	10800304 	addi	r2,r2,12
  80dea8:	100b883a 	mov	r5,r2
  80deac:	e13ffd17 	ldw	r4,-12(fp)
  80deb0:	080f8580 	call	80f858 <jpeg_get_large>
  80deb4:	e0bffc15 	stw	r2,-16(fp)
  80deb8:	e0bffc17 	ldw	r2,-16(fp)
  80debc:	1000031e 	bne	r2,zero,80decc <alloc_large+0xe0>
  80dec0:	01400104 	movi	r5,4
  80dec4:	e13ffd17 	ldw	r4,-12(fp)
  80dec8:	080dab80 	call	80dab8 <out_of_memory>
  80decc:	e0bffa17 	ldw	r2,-24(fp)
  80ded0:	10801317 	ldw	r2,76(r2)
  80ded4:	1007883a 	mov	r3,r2
  80ded8:	e0bfff17 	ldw	r2,-4(fp)
  80dedc:	1885883a 	add	r2,r3,r2
  80dee0:	10800304 	addi	r2,r2,12
  80dee4:	1007883a 	mov	r3,r2
  80dee8:	e0bffa17 	ldw	r2,-24(fp)
  80deec:	10c01315 	stw	r3,76(r2)
  80def0:	e0fffa17 	ldw	r3,-24(fp)
  80def4:	e0bffe17 	ldw	r2,-8(fp)
  80def8:	108003c4 	addi	r2,r2,15
  80defc:	1085883a 	add	r2,r2,r2
  80df00:	1085883a 	add	r2,r2,r2
  80df04:	1885883a 	add	r2,r3,r2
  80df08:	10c00017 	ldw	r3,0(r2)
  80df0c:	e0bffc17 	ldw	r2,-16(fp)
  80df10:	10c00015 	stw	r3,0(r2)
  80df14:	e0bffc17 	ldw	r2,-16(fp)
  80df18:	e0ffff17 	ldw	r3,-4(fp)
  80df1c:	10c00115 	stw	r3,4(r2)
  80df20:	e0bffc17 	ldw	r2,-16(fp)
  80df24:	10000215 	stw	zero,8(r2)
  80df28:	e0fffa17 	ldw	r3,-24(fp)
  80df2c:	e0bffe17 	ldw	r2,-8(fp)
  80df30:	108003c4 	addi	r2,r2,15
  80df34:	1085883a 	add	r2,r2,r2
  80df38:	1085883a 	add	r2,r2,r2
  80df3c:	1885883a 	add	r2,r3,r2
  80df40:	e0fffc17 	ldw	r3,-16(fp)
  80df44:	10c00015 	stw	r3,0(r2)
  80df48:	e0bffc17 	ldw	r2,-16(fp)
  80df4c:	10800304 	addi	r2,r2,12
  80df50:	e037883a 	mov	sp,fp
  80df54:	dfc00117 	ldw	ra,4(sp)
  80df58:	df000017 	ldw	fp,0(sp)
  80df5c:	dec00204 	addi	sp,sp,8
  80df60:	f800283a 	ret

0080df64 <alloc_sarray>:
  80df64:	defff304 	addi	sp,sp,-52
  80df68:	dfc00c15 	stw	ra,48(sp)
  80df6c:	df000b15 	stw	fp,44(sp)
  80df70:	df000b04 	addi	fp,sp,44
  80df74:	e13ffc15 	stw	r4,-16(fp)
  80df78:	e17ffd15 	stw	r5,-12(fp)
  80df7c:	e1bffe15 	stw	r6,-8(fp)
  80df80:	e1ffff15 	stw	r7,-4(fp)
  80df84:	e0bffc17 	ldw	r2,-16(fp)
  80df88:	10800117 	ldw	r2,4(r2)
  80df8c:	e0bff915 	stw	r2,-28(fp)
  80df90:	e17ffe17 	ldw	r5,-8(fp)
  80df94:	010ee6f4 	movhi	r4,15259
  80df98:	21327d04 	addi	r4,r4,-13836
  80df9c:	083012c0 	call	83012c <__udivsi3>
  80dfa0:	e0bffa15 	stw	r2,-24(fp)
  80dfa4:	e0bffa17 	ldw	r2,-24(fp)
  80dfa8:	00800916 	blt	zero,r2,80dfd0 <alloc_sarray+0x6c>
  80dfac:	e0bffc17 	ldw	r2,-16(fp)
  80dfb0:	10800017 	ldw	r2,0(r2)
  80dfb4:	00c01204 	movi	r3,72
  80dfb8:	10c00515 	stw	r3,20(r2)
  80dfbc:	e0bffc17 	ldw	r2,-16(fp)
  80dfc0:	10800017 	ldw	r2,0(r2)
  80dfc4:	10800017 	ldw	r2,0(r2)
  80dfc8:	e13ffc17 	ldw	r4,-16(fp)
  80dfcc:	103ee83a 	callr	r2
  80dfd0:	e0bfff17 	ldw	r2,-4(fp)
  80dfd4:	e0fffa17 	ldw	r3,-24(fp)
  80dfd8:	1880030e 	bge	r3,r2,80dfe8 <alloc_sarray+0x84>
  80dfdc:	e0bffa17 	ldw	r2,-24(fp)
  80dfe0:	e0bff615 	stw	r2,-40(fp)
  80dfe4:	00000206 	br	80dff0 <alloc_sarray+0x8c>
  80dfe8:	e0bfff17 	ldw	r2,-4(fp)
  80dfec:	e0bff615 	stw	r2,-40(fp)
  80dff0:	e0bff917 	ldw	r2,-28(fp)
  80dff4:	e0fff617 	ldw	r3,-40(fp)
  80dff8:	10c01415 	stw	r3,80(r2)
  80dffc:	e0bfff17 	ldw	r2,-4(fp)
  80e000:	1085883a 	add	r2,r2,r2
  80e004:	1085883a 	add	r2,r2,r2
  80e008:	100d883a 	mov	r6,r2
  80e00c:	e17ffd17 	ldw	r5,-12(fp)
  80e010:	e13ffc17 	ldw	r4,-16(fp)
  80e014:	080db1c0 	call	80db1c <alloc_small>
  80e018:	e0bffb15 	stw	r2,-20(fp)
  80e01c:	e03ff715 	stw	zero,-36(fp)
  80e020:	00002506 	br	80e0b8 <alloc_sarray+0x154>
  80e024:	e0ffff17 	ldw	r3,-4(fp)
  80e028:	e0bff717 	ldw	r2,-36(fp)
  80e02c:	1885c83a 	sub	r2,r3,r2
  80e030:	e0fff617 	ldw	r3,-40(fp)
  80e034:	1880012e 	bgeu	r3,r2,80e03c <alloc_sarray+0xd8>
  80e038:	1805883a 	mov	r2,r3
  80e03c:	e0bff615 	stw	r2,-40(fp)
  80e040:	e17ffe17 	ldw	r5,-8(fp)
  80e044:	e13ff617 	ldw	r4,-40(fp)
  80e048:	08301e80 	call	8301e8 <__mulsi3>
  80e04c:	100d883a 	mov	r6,r2
  80e050:	e17ffd17 	ldw	r5,-12(fp)
  80e054:	e13ffc17 	ldw	r4,-16(fp)
  80e058:	080ddec0 	call	80ddec <alloc_large>
  80e05c:	e0bff515 	stw	r2,-44(fp)
  80e060:	e0bff617 	ldw	r2,-40(fp)
  80e064:	e0bff815 	stw	r2,-32(fp)
  80e068:	00001106 	br	80e0b0 <alloc_sarray+0x14c>
  80e06c:	e0bff717 	ldw	r2,-36(fp)
  80e070:	10c00044 	addi	r3,r2,1
  80e074:	e0fff715 	stw	r3,-36(fp)
  80e078:	1085883a 	add	r2,r2,r2
  80e07c:	1085883a 	add	r2,r2,r2
  80e080:	1007883a 	mov	r3,r2
  80e084:	e0bffb17 	ldw	r2,-20(fp)
  80e088:	10c5883a 	add	r2,r2,r3
  80e08c:	e0fff517 	ldw	r3,-44(fp)
  80e090:	10c00015 	stw	r3,0(r2)
  80e094:	e0fff517 	ldw	r3,-44(fp)
  80e098:	e0bffe17 	ldw	r2,-8(fp)
  80e09c:	1885883a 	add	r2,r3,r2
  80e0a0:	e0bff515 	stw	r2,-44(fp)
  80e0a4:	e0bff817 	ldw	r2,-32(fp)
  80e0a8:	10bfffc4 	addi	r2,r2,-1
  80e0ac:	e0bff815 	stw	r2,-32(fp)
  80e0b0:	e0bff817 	ldw	r2,-32(fp)
  80e0b4:	103fed1e 	bne	r2,zero,80e06c <__alt_mem_epcs_flash_controller_0+0xff80506c>
  80e0b8:	e0fff717 	ldw	r3,-36(fp)
  80e0bc:	e0bfff17 	ldw	r2,-4(fp)
  80e0c0:	18bfd836 	bltu	r3,r2,80e024 <__alt_mem_epcs_flash_controller_0+0xff805024>
  80e0c4:	e0bffb17 	ldw	r2,-20(fp)
  80e0c8:	e037883a 	mov	sp,fp
  80e0cc:	dfc00117 	ldw	ra,4(sp)
  80e0d0:	df000017 	ldw	fp,0(sp)
  80e0d4:	dec00204 	addi	sp,sp,8
  80e0d8:	f800283a 	ret

0080e0dc <alloc_barray>:
  80e0dc:	defff304 	addi	sp,sp,-52
  80e0e0:	dfc00c15 	stw	ra,48(sp)
  80e0e4:	df000b15 	stw	fp,44(sp)
  80e0e8:	df000b04 	addi	fp,sp,44
  80e0ec:	e13ffc15 	stw	r4,-16(fp)
  80e0f0:	e17ffd15 	stw	r5,-12(fp)
  80e0f4:	e1bffe15 	stw	r6,-8(fp)
  80e0f8:	e1ffff15 	stw	r7,-4(fp)
  80e0fc:	e0bffc17 	ldw	r2,-16(fp)
  80e100:	10800117 	ldw	r2,4(r2)
  80e104:	e0bff915 	stw	r2,-28(fp)
  80e108:	e0bffe17 	ldw	r2,-8(fp)
  80e10c:	100491fa 	slli	r2,r2,7
  80e110:	100b883a 	mov	r5,r2
  80e114:	010ee6f4 	movhi	r4,15259
  80e118:	21327d04 	addi	r4,r4,-13836
  80e11c:	083012c0 	call	83012c <__udivsi3>
  80e120:	e0bffa15 	stw	r2,-24(fp)
  80e124:	e0bffa17 	ldw	r2,-24(fp)
  80e128:	00800916 	blt	zero,r2,80e150 <alloc_barray+0x74>
  80e12c:	e0bffc17 	ldw	r2,-16(fp)
  80e130:	10800017 	ldw	r2,0(r2)
  80e134:	00c01204 	movi	r3,72
  80e138:	10c00515 	stw	r3,20(r2)
  80e13c:	e0bffc17 	ldw	r2,-16(fp)
  80e140:	10800017 	ldw	r2,0(r2)
  80e144:	10800017 	ldw	r2,0(r2)
  80e148:	e13ffc17 	ldw	r4,-16(fp)
  80e14c:	103ee83a 	callr	r2
  80e150:	e0bfff17 	ldw	r2,-4(fp)
  80e154:	e0fffa17 	ldw	r3,-24(fp)
  80e158:	1880030e 	bge	r3,r2,80e168 <alloc_barray+0x8c>
  80e15c:	e0bffa17 	ldw	r2,-24(fp)
  80e160:	e0bff615 	stw	r2,-40(fp)
  80e164:	00000206 	br	80e170 <alloc_barray+0x94>
  80e168:	e0bfff17 	ldw	r2,-4(fp)
  80e16c:	e0bff615 	stw	r2,-40(fp)
  80e170:	e0bff917 	ldw	r2,-28(fp)
  80e174:	e0fff617 	ldw	r3,-40(fp)
  80e178:	10c01415 	stw	r3,80(r2)
  80e17c:	e0bfff17 	ldw	r2,-4(fp)
  80e180:	1085883a 	add	r2,r2,r2
  80e184:	1085883a 	add	r2,r2,r2
  80e188:	100d883a 	mov	r6,r2
  80e18c:	e17ffd17 	ldw	r5,-12(fp)
  80e190:	e13ffc17 	ldw	r4,-16(fp)
  80e194:	080db1c0 	call	80db1c <alloc_small>
  80e198:	e0bffb15 	stw	r2,-20(fp)
  80e19c:	e03ff715 	stw	zero,-36(fp)
  80e1a0:	00002706 	br	80e240 <alloc_barray+0x164>
  80e1a4:	e0ffff17 	ldw	r3,-4(fp)
  80e1a8:	e0bff717 	ldw	r2,-36(fp)
  80e1ac:	1885c83a 	sub	r2,r3,r2
  80e1b0:	e0fff617 	ldw	r3,-40(fp)
  80e1b4:	1880012e 	bgeu	r3,r2,80e1bc <alloc_barray+0xe0>
  80e1b8:	1805883a 	mov	r2,r3
  80e1bc:	e0bff615 	stw	r2,-40(fp)
  80e1c0:	e17ffe17 	ldw	r5,-8(fp)
  80e1c4:	e13ff617 	ldw	r4,-40(fp)
  80e1c8:	08301e80 	call	8301e8 <__mulsi3>
  80e1cc:	100491fa 	slli	r2,r2,7
  80e1d0:	100d883a 	mov	r6,r2
  80e1d4:	e17ffd17 	ldw	r5,-12(fp)
  80e1d8:	e13ffc17 	ldw	r4,-16(fp)
  80e1dc:	080ddec0 	call	80ddec <alloc_large>
  80e1e0:	e0bff515 	stw	r2,-44(fp)
  80e1e4:	e0bff617 	ldw	r2,-40(fp)
  80e1e8:	e0bff815 	stw	r2,-32(fp)
  80e1ec:	00001206 	br	80e238 <alloc_barray+0x15c>
  80e1f0:	e0bff717 	ldw	r2,-36(fp)
  80e1f4:	10c00044 	addi	r3,r2,1
  80e1f8:	e0fff715 	stw	r3,-36(fp)
  80e1fc:	1085883a 	add	r2,r2,r2
  80e200:	1085883a 	add	r2,r2,r2
  80e204:	1007883a 	mov	r3,r2
  80e208:	e0bffb17 	ldw	r2,-20(fp)
  80e20c:	10c5883a 	add	r2,r2,r3
  80e210:	e0fff517 	ldw	r3,-44(fp)
  80e214:	10c00015 	stw	r3,0(r2)
  80e218:	e0bffe17 	ldw	r2,-8(fp)
  80e21c:	100491fa 	slli	r2,r2,7
  80e220:	e0fff517 	ldw	r3,-44(fp)
  80e224:	1885883a 	add	r2,r3,r2
  80e228:	e0bff515 	stw	r2,-44(fp)
  80e22c:	e0bff817 	ldw	r2,-32(fp)
  80e230:	10bfffc4 	addi	r2,r2,-1
  80e234:	e0bff815 	stw	r2,-32(fp)
  80e238:	e0bff817 	ldw	r2,-32(fp)
  80e23c:	103fec1e 	bne	r2,zero,80e1f0 <__alt_mem_epcs_flash_controller_0+0xff8051f0>
  80e240:	e0fff717 	ldw	r3,-36(fp)
  80e244:	e0bfff17 	ldw	r2,-4(fp)
  80e248:	18bfd636 	bltu	r3,r2,80e1a4 <__alt_mem_epcs_flash_controller_0+0xff8051a4>
  80e24c:	e0bffb17 	ldw	r2,-20(fp)
  80e250:	e037883a 	mov	sp,fp
  80e254:	dfc00117 	ldw	ra,4(sp)
  80e258:	df000017 	ldw	fp,0(sp)
  80e25c:	dec00204 	addi	sp,sp,8
  80e260:	f800283a 	ret

0080e264 <request_virt_sarray>:
  80e264:	defff804 	addi	sp,sp,-32
  80e268:	dfc00715 	stw	ra,28(sp)
  80e26c:	df000615 	stw	fp,24(sp)
  80e270:	df000604 	addi	fp,sp,24
  80e274:	e13ffc15 	stw	r4,-16(fp)
  80e278:	e17ffd15 	stw	r5,-12(fp)
  80e27c:	e1bffe15 	stw	r6,-8(fp)
  80e280:	e1ffff15 	stw	r7,-4(fp)
  80e284:	e0bffc17 	ldw	r2,-16(fp)
  80e288:	10800117 	ldw	r2,4(r2)
  80e28c:	e0bffa15 	stw	r2,-24(fp)
  80e290:	e0bffd17 	ldw	r2,-12(fp)
  80e294:	10800060 	cmpeqi	r2,r2,1
  80e298:	10000d1e 	bne	r2,zero,80e2d0 <request_virt_sarray+0x6c>
  80e29c:	e0bffc17 	ldw	r2,-16(fp)
  80e2a0:	10800017 	ldw	r2,0(r2)
  80e2a4:	00c003c4 	movi	r3,15
  80e2a8:	10c00515 	stw	r3,20(r2)
  80e2ac:	e0bffc17 	ldw	r2,-16(fp)
  80e2b0:	10800017 	ldw	r2,0(r2)
  80e2b4:	e0fffd17 	ldw	r3,-12(fp)
  80e2b8:	10c00615 	stw	r3,24(r2)
  80e2bc:	e0bffc17 	ldw	r2,-16(fp)
  80e2c0:	10800017 	ldw	r2,0(r2)
  80e2c4:	10800017 	ldw	r2,0(r2)
  80e2c8:	e13ffc17 	ldw	r4,-16(fp)
  80e2cc:	103ee83a 	callr	r2
  80e2d0:	01802004 	movi	r6,128
  80e2d4:	e17ffd17 	ldw	r5,-12(fp)
  80e2d8:	e13ffc17 	ldw	r4,-16(fp)
  80e2dc:	080db1c0 	call	80db1c <alloc_small>
  80e2e0:	e0bffb15 	stw	r2,-20(fp)
  80e2e4:	e0bffb17 	ldw	r2,-20(fp)
  80e2e8:	10000015 	stw	zero,0(r2)
  80e2ec:	e0bffb17 	ldw	r2,-20(fp)
  80e2f0:	e0c00217 	ldw	r3,8(fp)
  80e2f4:	10c00115 	stw	r3,4(r2)
  80e2f8:	e0bffb17 	ldw	r2,-20(fp)
  80e2fc:	e0ffff17 	ldw	r3,-4(fp)
  80e300:	10c00215 	stw	r3,8(r2)
  80e304:	e0bffb17 	ldw	r2,-20(fp)
  80e308:	e0c00317 	ldw	r3,12(fp)
  80e30c:	10c00315 	stw	r3,12(r2)
  80e310:	e0bffb17 	ldw	r2,-20(fp)
  80e314:	e0fffe17 	ldw	r3,-8(fp)
  80e318:	10c00815 	stw	r3,32(r2)
  80e31c:	e0bffb17 	ldw	r2,-20(fp)
  80e320:	10000a15 	stw	zero,40(r2)
  80e324:	e0bffa17 	ldw	r2,-24(fp)
  80e328:	10c01117 	ldw	r3,68(r2)
  80e32c:	e0bffb17 	ldw	r2,-20(fp)
  80e330:	10c00b15 	stw	r3,44(r2)
  80e334:	e0bffa17 	ldw	r2,-24(fp)
  80e338:	e0fffb17 	ldw	r3,-20(fp)
  80e33c:	10c01115 	stw	r3,68(r2)
  80e340:	e0bffb17 	ldw	r2,-20(fp)
  80e344:	e037883a 	mov	sp,fp
  80e348:	dfc00117 	ldw	ra,4(sp)
  80e34c:	df000017 	ldw	fp,0(sp)
  80e350:	dec00204 	addi	sp,sp,8
  80e354:	f800283a 	ret

0080e358 <request_virt_barray>:
  80e358:	defff804 	addi	sp,sp,-32
  80e35c:	dfc00715 	stw	ra,28(sp)
  80e360:	df000615 	stw	fp,24(sp)
  80e364:	df000604 	addi	fp,sp,24
  80e368:	e13ffc15 	stw	r4,-16(fp)
  80e36c:	e17ffd15 	stw	r5,-12(fp)
  80e370:	e1bffe15 	stw	r6,-8(fp)
  80e374:	e1ffff15 	stw	r7,-4(fp)
  80e378:	e0bffc17 	ldw	r2,-16(fp)
  80e37c:	10800117 	ldw	r2,4(r2)
  80e380:	e0bffa15 	stw	r2,-24(fp)
  80e384:	e0bffd17 	ldw	r2,-12(fp)
  80e388:	10800060 	cmpeqi	r2,r2,1
  80e38c:	10000d1e 	bne	r2,zero,80e3c4 <request_virt_barray+0x6c>
  80e390:	e0bffc17 	ldw	r2,-16(fp)
  80e394:	10800017 	ldw	r2,0(r2)
  80e398:	00c003c4 	movi	r3,15
  80e39c:	10c00515 	stw	r3,20(r2)
  80e3a0:	e0bffc17 	ldw	r2,-16(fp)
  80e3a4:	10800017 	ldw	r2,0(r2)
  80e3a8:	e0fffd17 	ldw	r3,-12(fp)
  80e3ac:	10c00615 	stw	r3,24(r2)
  80e3b0:	e0bffc17 	ldw	r2,-16(fp)
  80e3b4:	10800017 	ldw	r2,0(r2)
  80e3b8:	10800017 	ldw	r2,0(r2)
  80e3bc:	e13ffc17 	ldw	r4,-16(fp)
  80e3c0:	103ee83a 	callr	r2
  80e3c4:	01802004 	movi	r6,128
  80e3c8:	e17ffd17 	ldw	r5,-12(fp)
  80e3cc:	e13ffc17 	ldw	r4,-16(fp)
  80e3d0:	080db1c0 	call	80db1c <alloc_small>
  80e3d4:	e0bffb15 	stw	r2,-20(fp)
  80e3d8:	e0bffb17 	ldw	r2,-20(fp)
  80e3dc:	10000015 	stw	zero,0(r2)
  80e3e0:	e0bffb17 	ldw	r2,-20(fp)
  80e3e4:	e0c00217 	ldw	r3,8(fp)
  80e3e8:	10c00115 	stw	r3,4(r2)
  80e3ec:	e0bffb17 	ldw	r2,-20(fp)
  80e3f0:	e0ffff17 	ldw	r3,-4(fp)
  80e3f4:	10c00215 	stw	r3,8(r2)
  80e3f8:	e0bffb17 	ldw	r2,-20(fp)
  80e3fc:	e0c00317 	ldw	r3,12(fp)
  80e400:	10c00315 	stw	r3,12(r2)
  80e404:	e0bffb17 	ldw	r2,-20(fp)
  80e408:	e0fffe17 	ldw	r3,-8(fp)
  80e40c:	10c00815 	stw	r3,32(r2)
  80e410:	e0bffb17 	ldw	r2,-20(fp)
  80e414:	10000a15 	stw	zero,40(r2)
  80e418:	e0bffa17 	ldw	r2,-24(fp)
  80e41c:	10c01217 	ldw	r3,72(r2)
  80e420:	e0bffb17 	ldw	r2,-20(fp)
  80e424:	10c00b15 	stw	r3,44(r2)
  80e428:	e0bffa17 	ldw	r2,-24(fp)
  80e42c:	e0fffb17 	ldw	r3,-20(fp)
  80e430:	10c01215 	stw	r3,72(r2)
  80e434:	e0bffb17 	ldw	r2,-20(fp)
  80e438:	e037883a 	mov	sp,fp
  80e43c:	dfc00117 	ldw	ra,4(sp)
  80e440:	df000017 	ldw	fp,0(sp)
  80e444:	dec00204 	addi	sp,sp,8
  80e448:	f800283a 	ret

0080e44c <realize_virt_arrays>:
  80e44c:	defff404 	addi	sp,sp,-48
  80e450:	dfc00b15 	stw	ra,44(sp)
  80e454:	df000a15 	stw	fp,40(sp)
  80e458:	dc000915 	stw	r16,36(sp)
  80e45c:	df000a04 	addi	fp,sp,40
  80e460:	e13ffe15 	stw	r4,-8(fp)
  80e464:	e0bffe17 	ldw	r2,-8(fp)
  80e468:	10800117 	ldw	r2,4(r2)
  80e46c:	e0bffb15 	stw	r2,-20(fp)
  80e470:	e03ff615 	stw	zero,-40(fp)
  80e474:	e03ff715 	stw	zero,-36(fp)
  80e478:	e0bffb17 	ldw	r2,-20(fp)
  80e47c:	10801117 	ldw	r2,68(r2)
  80e480:	e0bff915 	stw	r2,-28(fp)
  80e484:	00001e06 	br	80e500 <realize_virt_arrays+0xb4>
  80e488:	e0bff917 	ldw	r2,-28(fp)
  80e48c:	10800017 	ldw	r2,0(r2)
  80e490:	1000181e 	bne	r2,zero,80e4f4 <realize_virt_arrays+0xa8>
  80e494:	e0bff917 	ldw	r2,-28(fp)
  80e498:	10800317 	ldw	r2,12(r2)
  80e49c:	1007883a 	mov	r3,r2
  80e4a0:	e0bff917 	ldw	r2,-28(fp)
  80e4a4:	10800217 	ldw	r2,8(r2)
  80e4a8:	100b883a 	mov	r5,r2
  80e4ac:	1809883a 	mov	r4,r3
  80e4b0:	08301e80 	call	8301e8 <__mulsi3>
  80e4b4:	1007883a 	mov	r3,r2
  80e4b8:	e0bff617 	ldw	r2,-40(fp)
  80e4bc:	1885883a 	add	r2,r3,r2
  80e4c0:	e0bff615 	stw	r2,-40(fp)
  80e4c4:	e0bff917 	ldw	r2,-28(fp)
  80e4c8:	10800117 	ldw	r2,4(r2)
  80e4cc:	1007883a 	mov	r3,r2
  80e4d0:	e0bff917 	ldw	r2,-28(fp)
  80e4d4:	10800217 	ldw	r2,8(r2)
  80e4d8:	100b883a 	mov	r5,r2
  80e4dc:	1809883a 	mov	r4,r3
  80e4e0:	08301e80 	call	8301e8 <__mulsi3>
  80e4e4:	1007883a 	mov	r3,r2
  80e4e8:	e0bff717 	ldw	r2,-36(fp)
  80e4ec:	1885883a 	add	r2,r3,r2
  80e4f0:	e0bff715 	stw	r2,-36(fp)
  80e4f4:	e0bff917 	ldw	r2,-28(fp)
  80e4f8:	10800b17 	ldw	r2,44(r2)
  80e4fc:	e0bff915 	stw	r2,-28(fp)
  80e500:	e0bff917 	ldw	r2,-28(fp)
  80e504:	103fe01e 	bne	r2,zero,80e488 <__alt_mem_epcs_flash_controller_0+0xff805488>
  80e508:	e0bffb17 	ldw	r2,-20(fp)
  80e50c:	10801217 	ldw	r2,72(r2)
  80e510:	e0bffa15 	stw	r2,-24(fp)
  80e514:	00001e06 	br	80e590 <realize_virt_arrays+0x144>
  80e518:	e0bffa17 	ldw	r2,-24(fp)
  80e51c:	10800017 	ldw	r2,0(r2)
  80e520:	1000181e 	bne	r2,zero,80e584 <realize_virt_arrays+0x138>
  80e524:	e0bffa17 	ldw	r2,-24(fp)
  80e528:	10800317 	ldw	r2,12(r2)
  80e52c:	1007883a 	mov	r3,r2
  80e530:	e0bffa17 	ldw	r2,-24(fp)
  80e534:	10800217 	ldw	r2,8(r2)
  80e538:	100b883a 	mov	r5,r2
  80e53c:	1809883a 	mov	r4,r3
  80e540:	08301e80 	call	8301e8 <__mulsi3>
  80e544:	100691fa 	slli	r3,r2,7
  80e548:	e0bff617 	ldw	r2,-40(fp)
  80e54c:	1885883a 	add	r2,r3,r2
  80e550:	e0bff615 	stw	r2,-40(fp)
  80e554:	e0bffa17 	ldw	r2,-24(fp)
  80e558:	10800117 	ldw	r2,4(r2)
  80e55c:	1007883a 	mov	r3,r2
  80e560:	e0bffa17 	ldw	r2,-24(fp)
  80e564:	10800217 	ldw	r2,8(r2)
  80e568:	100b883a 	mov	r5,r2
  80e56c:	1809883a 	mov	r4,r3
  80e570:	08301e80 	call	8301e8 <__mulsi3>
  80e574:	100691fa 	slli	r3,r2,7
  80e578:	e0bff717 	ldw	r2,-36(fp)
  80e57c:	1885883a 	add	r2,r3,r2
  80e580:	e0bff715 	stw	r2,-36(fp)
  80e584:	e0bffa17 	ldw	r2,-24(fp)
  80e588:	10800b17 	ldw	r2,44(r2)
  80e58c:	e0bffa15 	stw	r2,-24(fp)
  80e590:	e0bffa17 	ldw	r2,-24(fp)
  80e594:	103fe01e 	bne	r2,zero,80e518 <__alt_mem_epcs_flash_controller_0+0xff805518>
  80e598:	e0bff617 	ldw	r2,-40(fp)
  80e59c:	0080b70e 	bge	zero,r2,80e87c <realize_virt_arrays+0x430>
  80e5a0:	e0bffb17 	ldw	r2,-20(fp)
  80e5a4:	10801317 	ldw	r2,76(r2)
  80e5a8:	100f883a 	mov	r7,r2
  80e5ac:	e1bff717 	ldw	r6,-36(fp)
  80e5b0:	e17ff617 	ldw	r5,-40(fp)
  80e5b4:	e13ffe17 	ldw	r4,-8(fp)
  80e5b8:	080f8c80 	call	80f8c8 <jpeg_mem_available>
  80e5bc:	e0bffc15 	stw	r2,-16(fp)
  80e5c0:	e0fffc17 	ldw	r3,-16(fp)
  80e5c4:	e0bff717 	ldw	r2,-36(fp)
  80e5c8:	18800416 	blt	r3,r2,80e5dc <realize_virt_arrays+0x190>
  80e5cc:	008ee6f4 	movhi	r2,15259
  80e5d0:	10b28004 	addi	r2,r2,-13824
  80e5d4:	e0bff815 	stw	r2,-32(fp)
  80e5d8:	00000806 	br	80e5fc <realize_virt_arrays+0x1b0>
  80e5dc:	e17ff617 	ldw	r5,-40(fp)
  80e5e0:	e13ffc17 	ldw	r4,-16(fp)
  80e5e4:	08300340 	call	830034 <__divsi3>
  80e5e8:	e0bff815 	stw	r2,-32(fp)
  80e5ec:	e0bff817 	ldw	r2,-32(fp)
  80e5f0:	00800216 	blt	zero,r2,80e5fc <realize_virt_arrays+0x1b0>
  80e5f4:	00800044 	movi	r2,1
  80e5f8:	e0bff815 	stw	r2,-32(fp)
  80e5fc:	e0bffb17 	ldw	r2,-20(fp)
  80e600:	10801117 	ldw	r2,68(r2)
  80e604:	e0bff915 	stw	r2,-28(fp)
  80e608:	00004906 	br	80e730 <realize_virt_arrays+0x2e4>
  80e60c:	e0bff917 	ldw	r2,-28(fp)
  80e610:	10800017 	ldw	r2,0(r2)
  80e614:	1000431e 	bne	r2,zero,80e724 <realize_virt_arrays+0x2d8>
  80e618:	e0bff917 	ldw	r2,-28(fp)
  80e61c:	10800117 	ldw	r2,4(r2)
  80e620:	10bfffc4 	addi	r2,r2,-1
  80e624:	1007883a 	mov	r3,r2
  80e628:	e0bff917 	ldw	r2,-28(fp)
  80e62c:	10800317 	ldw	r2,12(r2)
  80e630:	100b883a 	mov	r5,r2
  80e634:	1809883a 	mov	r4,r3
  80e638:	083012c0 	call	83012c <__udivsi3>
  80e63c:	10800044 	addi	r2,r2,1
  80e640:	e0bffd15 	stw	r2,-12(fp)
  80e644:	e0bffd17 	ldw	r2,-12(fp)
  80e648:	e0fff817 	ldw	r3,-32(fp)
  80e64c:	18800516 	blt	r3,r2,80e664 <realize_virt_arrays+0x218>
  80e650:	e0bff917 	ldw	r2,-28(fp)
  80e654:	10c00117 	ldw	r3,4(r2)
  80e658:	e0bff917 	ldw	r2,-28(fp)
  80e65c:	10c00415 	stw	r3,16(r2)
  80e660:	00001a06 	br	80e6cc <realize_virt_arrays+0x280>
  80e664:	e0bff917 	ldw	r2,-28(fp)
  80e668:	10800317 	ldw	r2,12(r2)
  80e66c:	e0fff817 	ldw	r3,-32(fp)
  80e670:	180b883a 	mov	r5,r3
  80e674:	1009883a 	mov	r4,r2
  80e678:	08301e80 	call	8301e8 <__mulsi3>
  80e67c:	1007883a 	mov	r3,r2
  80e680:	e0bff917 	ldw	r2,-28(fp)
  80e684:	10c00415 	stw	r3,16(r2)
  80e688:	e0bff917 	ldw	r2,-28(fp)
  80e68c:	14000c04 	addi	r16,r2,48
  80e690:	e0bff917 	ldw	r2,-28(fp)
  80e694:	10800117 	ldw	r2,4(r2)
  80e698:	1007883a 	mov	r3,r2
  80e69c:	e0bff917 	ldw	r2,-28(fp)
  80e6a0:	10800217 	ldw	r2,8(r2)
  80e6a4:	100b883a 	mov	r5,r2
  80e6a8:	1809883a 	mov	r4,r3
  80e6ac:	08301e80 	call	8301e8 <__mulsi3>
  80e6b0:	100d883a 	mov	r6,r2
  80e6b4:	800b883a 	mov	r5,r16
  80e6b8:	e13ffe17 	ldw	r4,-8(fp)
  80e6bc:	080f8f80 	call	80f8f8 <jpeg_open_backing_store>
  80e6c0:	e0bff917 	ldw	r2,-28(fp)
  80e6c4:	00c00044 	movi	r3,1
  80e6c8:	10c00a15 	stw	r3,40(r2)
  80e6cc:	e0bff917 	ldw	r2,-28(fp)
  80e6d0:	10c00217 	ldw	r3,8(r2)
  80e6d4:	e0bff917 	ldw	r2,-28(fp)
  80e6d8:	10800417 	ldw	r2,16(r2)
  80e6dc:	100f883a 	mov	r7,r2
  80e6e0:	180d883a 	mov	r6,r3
  80e6e4:	01400044 	movi	r5,1
  80e6e8:	e13ffe17 	ldw	r4,-8(fp)
  80e6ec:	080df640 	call	80df64 <alloc_sarray>
  80e6f0:	1007883a 	mov	r3,r2
  80e6f4:	e0bff917 	ldw	r2,-28(fp)
  80e6f8:	10c00015 	stw	r3,0(r2)
  80e6fc:	e0bffb17 	ldw	r2,-20(fp)
  80e700:	10c01417 	ldw	r3,80(r2)
  80e704:	e0bff917 	ldw	r2,-28(fp)
  80e708:	10c00515 	stw	r3,20(r2)
  80e70c:	e0bff917 	ldw	r2,-28(fp)
  80e710:	10000615 	stw	zero,24(r2)
  80e714:	e0bff917 	ldw	r2,-28(fp)
  80e718:	10000715 	stw	zero,28(r2)
  80e71c:	e0bff917 	ldw	r2,-28(fp)
  80e720:	10000915 	stw	zero,36(r2)
  80e724:	e0bff917 	ldw	r2,-28(fp)
  80e728:	10800b17 	ldw	r2,44(r2)
  80e72c:	e0bff915 	stw	r2,-28(fp)
  80e730:	e0bff917 	ldw	r2,-28(fp)
  80e734:	103fb51e 	bne	r2,zero,80e60c <__alt_mem_epcs_flash_controller_0+0xff80560c>
  80e738:	e0bffb17 	ldw	r2,-20(fp)
  80e73c:	10801217 	ldw	r2,72(r2)
  80e740:	e0bffa15 	stw	r2,-24(fp)
  80e744:	00004a06 	br	80e870 <realize_virt_arrays+0x424>
  80e748:	e0bffa17 	ldw	r2,-24(fp)
  80e74c:	10800017 	ldw	r2,0(r2)
  80e750:	1000441e 	bne	r2,zero,80e864 <realize_virt_arrays+0x418>
  80e754:	e0bffa17 	ldw	r2,-24(fp)
  80e758:	10800117 	ldw	r2,4(r2)
  80e75c:	10bfffc4 	addi	r2,r2,-1
  80e760:	1007883a 	mov	r3,r2
  80e764:	e0bffa17 	ldw	r2,-24(fp)
  80e768:	10800317 	ldw	r2,12(r2)
  80e76c:	100b883a 	mov	r5,r2
  80e770:	1809883a 	mov	r4,r3
  80e774:	083012c0 	call	83012c <__udivsi3>
  80e778:	10800044 	addi	r2,r2,1
  80e77c:	e0bffd15 	stw	r2,-12(fp)
  80e780:	e0bffd17 	ldw	r2,-12(fp)
  80e784:	e0fff817 	ldw	r3,-32(fp)
  80e788:	18800516 	blt	r3,r2,80e7a0 <realize_virt_arrays+0x354>
  80e78c:	e0bffa17 	ldw	r2,-24(fp)
  80e790:	10c00117 	ldw	r3,4(r2)
  80e794:	e0bffa17 	ldw	r2,-24(fp)
  80e798:	10c00415 	stw	r3,16(r2)
  80e79c:	00001b06 	br	80e80c <realize_virt_arrays+0x3c0>
  80e7a0:	e0bffa17 	ldw	r2,-24(fp)
  80e7a4:	10800317 	ldw	r2,12(r2)
  80e7a8:	e0fff817 	ldw	r3,-32(fp)
  80e7ac:	180b883a 	mov	r5,r3
  80e7b0:	1009883a 	mov	r4,r2
  80e7b4:	08301e80 	call	8301e8 <__mulsi3>
  80e7b8:	1007883a 	mov	r3,r2
  80e7bc:	e0bffa17 	ldw	r2,-24(fp)
  80e7c0:	10c00415 	stw	r3,16(r2)
  80e7c4:	e0bffa17 	ldw	r2,-24(fp)
  80e7c8:	14000c04 	addi	r16,r2,48
  80e7cc:	e0bffa17 	ldw	r2,-24(fp)
  80e7d0:	10800117 	ldw	r2,4(r2)
  80e7d4:	1007883a 	mov	r3,r2
  80e7d8:	e0bffa17 	ldw	r2,-24(fp)
  80e7dc:	10800217 	ldw	r2,8(r2)
  80e7e0:	100b883a 	mov	r5,r2
  80e7e4:	1809883a 	mov	r4,r3
  80e7e8:	08301e80 	call	8301e8 <__mulsi3>
  80e7ec:	100491fa 	slli	r2,r2,7
  80e7f0:	100d883a 	mov	r6,r2
  80e7f4:	800b883a 	mov	r5,r16
  80e7f8:	e13ffe17 	ldw	r4,-8(fp)
  80e7fc:	080f8f80 	call	80f8f8 <jpeg_open_backing_store>
  80e800:	e0bffa17 	ldw	r2,-24(fp)
  80e804:	00c00044 	movi	r3,1
  80e808:	10c00a15 	stw	r3,40(r2)
  80e80c:	e0bffa17 	ldw	r2,-24(fp)
  80e810:	10c00217 	ldw	r3,8(r2)
  80e814:	e0bffa17 	ldw	r2,-24(fp)
  80e818:	10800417 	ldw	r2,16(r2)
  80e81c:	100f883a 	mov	r7,r2
  80e820:	180d883a 	mov	r6,r3
  80e824:	01400044 	movi	r5,1
  80e828:	e13ffe17 	ldw	r4,-8(fp)
  80e82c:	080e0dc0 	call	80e0dc <alloc_barray>
  80e830:	1007883a 	mov	r3,r2
  80e834:	e0bffa17 	ldw	r2,-24(fp)
  80e838:	10c00015 	stw	r3,0(r2)
  80e83c:	e0bffb17 	ldw	r2,-20(fp)
  80e840:	10c01417 	ldw	r3,80(r2)
  80e844:	e0bffa17 	ldw	r2,-24(fp)
  80e848:	10c00515 	stw	r3,20(r2)
  80e84c:	e0bffa17 	ldw	r2,-24(fp)
  80e850:	10000615 	stw	zero,24(r2)
  80e854:	e0bffa17 	ldw	r2,-24(fp)
  80e858:	10000715 	stw	zero,28(r2)
  80e85c:	e0bffa17 	ldw	r2,-24(fp)
  80e860:	10000915 	stw	zero,36(r2)
  80e864:	e0bffa17 	ldw	r2,-24(fp)
  80e868:	10800b17 	ldw	r2,44(r2)
  80e86c:	e0bffa15 	stw	r2,-24(fp)
  80e870:	e0bffa17 	ldw	r2,-24(fp)
  80e874:	103fb41e 	bne	r2,zero,80e748 <__alt_mem_epcs_flash_controller_0+0xff805748>
  80e878:	00000106 	br	80e880 <realize_virt_arrays+0x434>
  80e87c:	0001883a 	nop
  80e880:	e6ffff04 	addi	sp,fp,-4
  80e884:	dfc00217 	ldw	ra,8(sp)
  80e888:	df000117 	ldw	fp,4(sp)
  80e88c:	dc000017 	ldw	r16,0(sp)
  80e890:	dec00304 	addi	sp,sp,12
  80e894:	f800283a 	ret

0080e898 <do_sarray_io>:
  80e898:	defff404 	addi	sp,sp,-48
  80e89c:	dfc00b15 	stw	ra,44(sp)
  80e8a0:	df000a15 	stw	fp,40(sp)
  80e8a4:	df000a04 	addi	fp,sp,40
  80e8a8:	e13ffd15 	stw	r4,-12(fp)
  80e8ac:	e17ffe15 	stw	r5,-8(fp)
  80e8b0:	e1bfff15 	stw	r6,-4(fp)
  80e8b4:	e0bffe17 	ldw	r2,-8(fp)
  80e8b8:	10800217 	ldw	r2,8(r2)
  80e8bc:	e0bff915 	stw	r2,-28(fp)
  80e8c0:	e0bffe17 	ldw	r2,-8(fp)
  80e8c4:	10800617 	ldw	r2,24(r2)
  80e8c8:	e0fff917 	ldw	r3,-28(fp)
  80e8cc:	180b883a 	mov	r5,r3
  80e8d0:	1009883a 	mov	r4,r2
  80e8d4:	08301e80 	call	8301e8 <__mulsi3>
  80e8d8:	e0bff715 	stw	r2,-36(fp)
  80e8dc:	e03ff815 	stw	zero,-32(fp)
  80e8e0:	00005806 	br	80ea44 <do_sarray_io+0x1ac>
  80e8e4:	e0bffe17 	ldw	r2,-8(fp)
  80e8e8:	10800417 	ldw	r2,16(r2)
  80e8ec:	1007883a 	mov	r3,r2
  80e8f0:	e0bff817 	ldw	r2,-32(fp)
  80e8f4:	1889c83a 	sub	r4,r3,r2
  80e8f8:	e0bffe17 	ldw	r2,-8(fp)
  80e8fc:	10800517 	ldw	r2,20(r2)
  80e900:	1007883a 	mov	r3,r2
  80e904:	2005883a 	mov	r2,r4
  80e908:	1880010e 	bge	r3,r2,80e910 <do_sarray_io+0x78>
  80e90c:	1805883a 	mov	r2,r3
  80e910:	e0bffa15 	stw	r2,-24(fp)
  80e914:	e0bffe17 	ldw	r2,-8(fp)
  80e918:	10800617 	ldw	r2,24(r2)
  80e91c:	1007883a 	mov	r3,r2
  80e920:	e0bff817 	ldw	r2,-32(fp)
  80e924:	1885883a 	add	r2,r3,r2
  80e928:	e0bffb15 	stw	r2,-20(fp)
  80e92c:	e0bffe17 	ldw	r2,-8(fp)
  80e930:	10800717 	ldw	r2,28(r2)
  80e934:	1007883a 	mov	r3,r2
  80e938:	e0bffb17 	ldw	r2,-20(fp)
  80e93c:	1885c83a 	sub	r2,r3,r2
  80e940:	e0fffa17 	ldw	r3,-24(fp)
  80e944:	1880010e 	bge	r3,r2,80e94c <do_sarray_io+0xb4>
  80e948:	1805883a 	mov	r2,r3
  80e94c:	e0bffa15 	stw	r2,-24(fp)
  80e950:	e0bffe17 	ldw	r2,-8(fp)
  80e954:	10800117 	ldw	r2,4(r2)
  80e958:	1007883a 	mov	r3,r2
  80e95c:	e0bffb17 	ldw	r2,-20(fp)
  80e960:	1885c83a 	sub	r2,r3,r2
  80e964:	e0fffa17 	ldw	r3,-24(fp)
  80e968:	1880010e 	bge	r3,r2,80e970 <do_sarray_io+0xd8>
  80e96c:	1805883a 	mov	r2,r3
  80e970:	e0bffa15 	stw	r2,-24(fp)
  80e974:	e0bffa17 	ldw	r2,-24(fp)
  80e978:	0080380e 	bge	zero,r2,80ea5c <do_sarray_io+0x1c4>
  80e97c:	e17ff917 	ldw	r5,-28(fp)
  80e980:	e13ffa17 	ldw	r4,-24(fp)
  80e984:	08301e80 	call	8301e8 <__mulsi3>
  80e988:	e0bffc15 	stw	r2,-16(fp)
  80e98c:	e0bfff17 	ldw	r2,-4(fp)
  80e990:	10001226 	beq	r2,zero,80e9dc <do_sarray_io+0x144>
  80e994:	e0bffe17 	ldw	r2,-8(fp)
  80e998:	10c00d17 	ldw	r3,52(r2)
  80e99c:	e0bffe17 	ldw	r2,-8(fp)
  80e9a0:	11400c04 	addi	r5,r2,48
  80e9a4:	e0bffe17 	ldw	r2,-8(fp)
  80e9a8:	11000017 	ldw	r4,0(r2)
  80e9ac:	e0bff817 	ldw	r2,-32(fp)
  80e9b0:	1085883a 	add	r2,r2,r2
  80e9b4:	1085883a 	add	r2,r2,r2
  80e9b8:	2085883a 	add	r2,r4,r2
  80e9bc:	11000017 	ldw	r4,0(r2)
  80e9c0:	e0bffc17 	ldw	r2,-16(fp)
  80e9c4:	d8800015 	stw	r2,0(sp)
  80e9c8:	e1fff717 	ldw	r7,-36(fp)
  80e9cc:	200d883a 	mov	r6,r4
  80e9d0:	e13ffd17 	ldw	r4,-12(fp)
  80e9d4:	183ee83a 	callr	r3
  80e9d8:	00001106 	br	80ea20 <do_sarray_io+0x188>
  80e9dc:	e0bffe17 	ldw	r2,-8(fp)
  80e9e0:	10c00c17 	ldw	r3,48(r2)
  80e9e4:	e0bffe17 	ldw	r2,-8(fp)
  80e9e8:	11400c04 	addi	r5,r2,48
  80e9ec:	e0bffe17 	ldw	r2,-8(fp)
  80e9f0:	11000017 	ldw	r4,0(r2)
  80e9f4:	e0bff817 	ldw	r2,-32(fp)
  80e9f8:	1085883a 	add	r2,r2,r2
  80e9fc:	1085883a 	add	r2,r2,r2
  80ea00:	2085883a 	add	r2,r4,r2
  80ea04:	11000017 	ldw	r4,0(r2)
  80ea08:	e0bffc17 	ldw	r2,-16(fp)
  80ea0c:	d8800015 	stw	r2,0(sp)
  80ea10:	e1fff717 	ldw	r7,-36(fp)
  80ea14:	200d883a 	mov	r6,r4
  80ea18:	e13ffd17 	ldw	r4,-12(fp)
  80ea1c:	183ee83a 	callr	r3
  80ea20:	e0fff717 	ldw	r3,-36(fp)
  80ea24:	e0bffc17 	ldw	r2,-16(fp)
  80ea28:	1885883a 	add	r2,r3,r2
  80ea2c:	e0bff715 	stw	r2,-36(fp)
  80ea30:	e0bffe17 	ldw	r2,-8(fp)
  80ea34:	10c00517 	ldw	r3,20(r2)
  80ea38:	e0bff817 	ldw	r2,-32(fp)
  80ea3c:	1885883a 	add	r2,r3,r2
  80ea40:	e0bff815 	stw	r2,-32(fp)
  80ea44:	e0bffe17 	ldw	r2,-8(fp)
  80ea48:	10800417 	ldw	r2,16(r2)
  80ea4c:	1007883a 	mov	r3,r2
  80ea50:	e0bff817 	ldw	r2,-32(fp)
  80ea54:	10ffa316 	blt	r2,r3,80e8e4 <__alt_mem_epcs_flash_controller_0+0xff8058e4>
  80ea58:	00000106 	br	80ea60 <do_sarray_io+0x1c8>
  80ea5c:	0001883a 	nop
  80ea60:	0001883a 	nop
  80ea64:	e037883a 	mov	sp,fp
  80ea68:	dfc00117 	ldw	ra,4(sp)
  80ea6c:	df000017 	ldw	fp,0(sp)
  80ea70:	dec00204 	addi	sp,sp,8
  80ea74:	f800283a 	ret

0080ea78 <do_barray_io>:
  80ea78:	defff404 	addi	sp,sp,-48
  80ea7c:	dfc00b15 	stw	ra,44(sp)
  80ea80:	df000a15 	stw	fp,40(sp)
  80ea84:	df000a04 	addi	fp,sp,40
  80ea88:	e13ffd15 	stw	r4,-12(fp)
  80ea8c:	e17ffe15 	stw	r5,-8(fp)
  80ea90:	e1bfff15 	stw	r6,-4(fp)
  80ea94:	e0bffe17 	ldw	r2,-8(fp)
  80ea98:	10800217 	ldw	r2,8(r2)
  80ea9c:	100491fa 	slli	r2,r2,7
  80eaa0:	e0bff915 	stw	r2,-28(fp)
  80eaa4:	e0bffe17 	ldw	r2,-8(fp)
  80eaa8:	10800617 	ldw	r2,24(r2)
  80eaac:	e0fff917 	ldw	r3,-28(fp)
  80eab0:	180b883a 	mov	r5,r3
  80eab4:	1009883a 	mov	r4,r2
  80eab8:	08301e80 	call	8301e8 <__mulsi3>
  80eabc:	e0bff715 	stw	r2,-36(fp)
  80eac0:	e03ff815 	stw	zero,-32(fp)
  80eac4:	00005806 	br	80ec28 <do_barray_io+0x1b0>
  80eac8:	e0bffe17 	ldw	r2,-8(fp)
  80eacc:	10800417 	ldw	r2,16(r2)
  80ead0:	1007883a 	mov	r3,r2
  80ead4:	e0bff817 	ldw	r2,-32(fp)
  80ead8:	1889c83a 	sub	r4,r3,r2
  80eadc:	e0bffe17 	ldw	r2,-8(fp)
  80eae0:	10800517 	ldw	r2,20(r2)
  80eae4:	1007883a 	mov	r3,r2
  80eae8:	2005883a 	mov	r2,r4
  80eaec:	1880010e 	bge	r3,r2,80eaf4 <do_barray_io+0x7c>
  80eaf0:	1805883a 	mov	r2,r3
  80eaf4:	e0bffa15 	stw	r2,-24(fp)
  80eaf8:	e0bffe17 	ldw	r2,-8(fp)
  80eafc:	10800617 	ldw	r2,24(r2)
  80eb00:	1007883a 	mov	r3,r2
  80eb04:	e0bff817 	ldw	r2,-32(fp)
  80eb08:	1885883a 	add	r2,r3,r2
  80eb0c:	e0bffb15 	stw	r2,-20(fp)
  80eb10:	e0bffe17 	ldw	r2,-8(fp)
  80eb14:	10800717 	ldw	r2,28(r2)
  80eb18:	1007883a 	mov	r3,r2
  80eb1c:	e0bffb17 	ldw	r2,-20(fp)
  80eb20:	1885c83a 	sub	r2,r3,r2
  80eb24:	e0fffa17 	ldw	r3,-24(fp)
  80eb28:	1880010e 	bge	r3,r2,80eb30 <do_barray_io+0xb8>
  80eb2c:	1805883a 	mov	r2,r3
  80eb30:	e0bffa15 	stw	r2,-24(fp)
  80eb34:	e0bffe17 	ldw	r2,-8(fp)
  80eb38:	10800117 	ldw	r2,4(r2)
  80eb3c:	1007883a 	mov	r3,r2
  80eb40:	e0bffb17 	ldw	r2,-20(fp)
  80eb44:	1885c83a 	sub	r2,r3,r2
  80eb48:	e0fffa17 	ldw	r3,-24(fp)
  80eb4c:	1880010e 	bge	r3,r2,80eb54 <do_barray_io+0xdc>
  80eb50:	1805883a 	mov	r2,r3
  80eb54:	e0bffa15 	stw	r2,-24(fp)
  80eb58:	e0bffa17 	ldw	r2,-24(fp)
  80eb5c:	0080380e 	bge	zero,r2,80ec40 <do_barray_io+0x1c8>
  80eb60:	e17ff917 	ldw	r5,-28(fp)
  80eb64:	e13ffa17 	ldw	r4,-24(fp)
  80eb68:	08301e80 	call	8301e8 <__mulsi3>
  80eb6c:	e0bffc15 	stw	r2,-16(fp)
  80eb70:	e0bfff17 	ldw	r2,-4(fp)
  80eb74:	10001226 	beq	r2,zero,80ebc0 <do_barray_io+0x148>
  80eb78:	e0bffe17 	ldw	r2,-8(fp)
  80eb7c:	10c00d17 	ldw	r3,52(r2)
  80eb80:	e0bffe17 	ldw	r2,-8(fp)
  80eb84:	11400c04 	addi	r5,r2,48
  80eb88:	e0bffe17 	ldw	r2,-8(fp)
  80eb8c:	11000017 	ldw	r4,0(r2)
  80eb90:	e0bff817 	ldw	r2,-32(fp)
  80eb94:	1085883a 	add	r2,r2,r2
  80eb98:	1085883a 	add	r2,r2,r2
  80eb9c:	2085883a 	add	r2,r4,r2
  80eba0:	11000017 	ldw	r4,0(r2)
  80eba4:	e0bffc17 	ldw	r2,-16(fp)
  80eba8:	d8800015 	stw	r2,0(sp)
  80ebac:	e1fff717 	ldw	r7,-36(fp)
  80ebb0:	200d883a 	mov	r6,r4
  80ebb4:	e13ffd17 	ldw	r4,-12(fp)
  80ebb8:	183ee83a 	callr	r3
  80ebbc:	00001106 	br	80ec04 <do_barray_io+0x18c>
  80ebc0:	e0bffe17 	ldw	r2,-8(fp)
  80ebc4:	10c00c17 	ldw	r3,48(r2)
  80ebc8:	e0bffe17 	ldw	r2,-8(fp)
  80ebcc:	11400c04 	addi	r5,r2,48
  80ebd0:	e0bffe17 	ldw	r2,-8(fp)
  80ebd4:	11000017 	ldw	r4,0(r2)
  80ebd8:	e0bff817 	ldw	r2,-32(fp)
  80ebdc:	1085883a 	add	r2,r2,r2
  80ebe0:	1085883a 	add	r2,r2,r2
  80ebe4:	2085883a 	add	r2,r4,r2
  80ebe8:	11000017 	ldw	r4,0(r2)
  80ebec:	e0bffc17 	ldw	r2,-16(fp)
  80ebf0:	d8800015 	stw	r2,0(sp)
  80ebf4:	e1fff717 	ldw	r7,-36(fp)
  80ebf8:	200d883a 	mov	r6,r4
  80ebfc:	e13ffd17 	ldw	r4,-12(fp)
  80ec00:	183ee83a 	callr	r3
  80ec04:	e0fff717 	ldw	r3,-36(fp)
  80ec08:	e0bffc17 	ldw	r2,-16(fp)
  80ec0c:	1885883a 	add	r2,r3,r2
  80ec10:	e0bff715 	stw	r2,-36(fp)
  80ec14:	e0bffe17 	ldw	r2,-8(fp)
  80ec18:	10c00517 	ldw	r3,20(r2)
  80ec1c:	e0bff817 	ldw	r2,-32(fp)
  80ec20:	1885883a 	add	r2,r3,r2
  80ec24:	e0bff815 	stw	r2,-32(fp)
  80ec28:	e0bffe17 	ldw	r2,-8(fp)
  80ec2c:	10800417 	ldw	r2,16(r2)
  80ec30:	1007883a 	mov	r3,r2
  80ec34:	e0bff817 	ldw	r2,-32(fp)
  80ec38:	10ffa316 	blt	r2,r3,80eac8 <__alt_mem_epcs_flash_controller_0+0xff805ac8>
  80ec3c:	00000106 	br	80ec44 <do_barray_io+0x1cc>
  80ec40:	0001883a 	nop
  80ec44:	0001883a 	nop
  80ec48:	e037883a 	mov	sp,fp
  80ec4c:	dfc00117 	ldw	ra,4(sp)
  80ec50:	df000017 	ldw	fp,0(sp)
  80ec54:	dec00204 	addi	sp,sp,8
  80ec58:	f800283a 	ret

0080ec5c <access_virt_sarray>:
  80ec5c:	defff604 	addi	sp,sp,-40
  80ec60:	dfc00915 	stw	ra,36(sp)
  80ec64:	df000815 	stw	fp,32(sp)
  80ec68:	df000804 	addi	fp,sp,32
  80ec6c:	e13ffc15 	stw	r4,-16(fp)
  80ec70:	e17ffd15 	stw	r5,-12(fp)
  80ec74:	e1bffe15 	stw	r6,-8(fp)
  80ec78:	e1ffff15 	stw	r7,-4(fp)
  80ec7c:	e0fffe17 	ldw	r3,-8(fp)
  80ec80:	e0bfff17 	ldw	r2,-4(fp)
  80ec84:	1885883a 	add	r2,r3,r2
  80ec88:	e0bffa15 	stw	r2,-24(fp)
  80ec8c:	e0bffd17 	ldw	r2,-12(fp)
  80ec90:	10c00117 	ldw	r3,4(r2)
  80ec94:	e0bffa17 	ldw	r2,-24(fp)
  80ec98:	18800736 	bltu	r3,r2,80ecb8 <access_virt_sarray+0x5c>
  80ec9c:	e0bffd17 	ldw	r2,-12(fp)
  80eca0:	10c00317 	ldw	r3,12(r2)
  80eca4:	e0bfff17 	ldw	r2,-4(fp)
  80eca8:	18800336 	bltu	r3,r2,80ecb8 <access_virt_sarray+0x5c>
  80ecac:	e0bffd17 	ldw	r2,-12(fp)
  80ecb0:	10800017 	ldw	r2,0(r2)
  80ecb4:	1000091e 	bne	r2,zero,80ecdc <access_virt_sarray+0x80>
  80ecb8:	e0bffc17 	ldw	r2,-16(fp)
  80ecbc:	10800017 	ldw	r2,0(r2)
  80ecc0:	00c005c4 	movi	r3,23
  80ecc4:	10c00515 	stw	r3,20(r2)
  80ecc8:	e0bffc17 	ldw	r2,-16(fp)
  80eccc:	10800017 	ldw	r2,0(r2)
  80ecd0:	10800017 	ldw	r2,0(r2)
  80ecd4:	e13ffc17 	ldw	r4,-16(fp)
  80ecd8:	103ee83a 	callr	r2
  80ecdc:	e0bffd17 	ldw	r2,-12(fp)
  80ece0:	10800617 	ldw	r2,24(r2)
  80ece4:	e0fffe17 	ldw	r3,-8(fp)
  80ece8:	18800736 	bltu	r3,r2,80ed08 <access_virt_sarray+0xac>
  80ecec:	e0bffd17 	ldw	r2,-12(fp)
  80ecf0:	10c00617 	ldw	r3,24(r2)
  80ecf4:	e0bffd17 	ldw	r2,-12(fp)
  80ecf8:	10800417 	ldw	r2,16(r2)
  80ecfc:	1887883a 	add	r3,r3,r2
  80ed00:	e0bffa17 	ldw	r2,-24(fp)
  80ed04:	18802c2e 	bgeu	r3,r2,80edb8 <access_virt_sarray+0x15c>
  80ed08:	e0bffd17 	ldw	r2,-12(fp)
  80ed0c:	10800a17 	ldw	r2,40(r2)
  80ed10:	1000091e 	bne	r2,zero,80ed38 <access_virt_sarray+0xdc>
  80ed14:	e0bffc17 	ldw	r2,-16(fp)
  80ed18:	10800017 	ldw	r2,0(r2)
  80ed1c:	00c011c4 	movi	r3,71
  80ed20:	10c00515 	stw	r3,20(r2)
  80ed24:	e0bffc17 	ldw	r2,-16(fp)
  80ed28:	10800017 	ldw	r2,0(r2)
  80ed2c:	10800017 	ldw	r2,0(r2)
  80ed30:	e13ffc17 	ldw	r4,-16(fp)
  80ed34:	103ee83a 	callr	r2
  80ed38:	e0bffd17 	ldw	r2,-12(fp)
  80ed3c:	10800917 	ldw	r2,36(r2)
  80ed40:	10000626 	beq	r2,zero,80ed5c <access_virt_sarray+0x100>
  80ed44:	01800044 	movi	r6,1
  80ed48:	e17ffd17 	ldw	r5,-12(fp)
  80ed4c:	e13ffc17 	ldw	r4,-16(fp)
  80ed50:	080e8980 	call	80e898 <do_sarray_io>
  80ed54:	e0bffd17 	ldw	r2,-12(fp)
  80ed58:	10000915 	stw	zero,36(r2)
  80ed5c:	e0bffd17 	ldw	r2,-12(fp)
  80ed60:	10c00617 	ldw	r3,24(r2)
  80ed64:	e0bffe17 	ldw	r2,-8(fp)
  80ed68:	1880042e 	bgeu	r3,r2,80ed7c <access_virt_sarray+0x120>
  80ed6c:	e0bffd17 	ldw	r2,-12(fp)
  80ed70:	e0fffe17 	ldw	r3,-8(fp)
  80ed74:	10c00615 	stw	r3,24(r2)
  80ed78:	00000b06 	br	80eda8 <access_virt_sarray+0x14c>
  80ed7c:	e0bffa17 	ldw	r2,-24(fp)
  80ed80:	e0fffd17 	ldw	r3,-12(fp)
  80ed84:	18c00417 	ldw	r3,16(r3)
  80ed88:	10c5c83a 	sub	r2,r2,r3
  80ed8c:	e0bff915 	stw	r2,-28(fp)
  80ed90:	e0bff917 	ldw	r2,-28(fp)
  80ed94:	1000010e 	bge	r2,zero,80ed9c <access_virt_sarray+0x140>
  80ed98:	e03ff915 	stw	zero,-28(fp)
  80ed9c:	e0fff917 	ldw	r3,-28(fp)
  80eda0:	e0bffd17 	ldw	r2,-12(fp)
  80eda4:	10c00615 	stw	r3,24(r2)
  80eda8:	000d883a 	mov	r6,zero
  80edac:	e17ffd17 	ldw	r5,-12(fp)
  80edb0:	e13ffc17 	ldw	r4,-16(fp)
  80edb4:	080e8980 	call	80e898 <do_sarray_io>
  80edb8:	e0bffd17 	ldw	r2,-12(fp)
  80edbc:	10c00717 	ldw	r3,28(r2)
  80edc0:	e0bffa17 	ldw	r2,-24(fp)
  80edc4:	1880482e 	bgeu	r3,r2,80eee8 <access_virt_sarray+0x28c>
  80edc8:	e0bffd17 	ldw	r2,-12(fp)
  80edcc:	10c00717 	ldw	r3,28(r2)
  80edd0:	e0bffe17 	ldw	r2,-8(fp)
  80edd4:	18800e2e 	bgeu	r3,r2,80ee10 <access_virt_sarray+0x1b4>
  80edd8:	e0800217 	ldw	r2,8(fp)
  80eddc:	10000926 	beq	r2,zero,80ee04 <access_virt_sarray+0x1a8>
  80ede0:	e0bffc17 	ldw	r2,-16(fp)
  80ede4:	10800017 	ldw	r2,0(r2)
  80ede8:	00c005c4 	movi	r3,23
  80edec:	10c00515 	stw	r3,20(r2)
  80edf0:	e0bffc17 	ldw	r2,-16(fp)
  80edf4:	10800017 	ldw	r2,0(r2)
  80edf8:	10800017 	ldw	r2,0(r2)
  80edfc:	e13ffc17 	ldw	r4,-16(fp)
  80ee00:	103ee83a 	callr	r2
  80ee04:	e0bffe17 	ldw	r2,-8(fp)
  80ee08:	e0bff815 	stw	r2,-32(fp)
  80ee0c:	00000306 	br	80ee1c <access_virt_sarray+0x1c0>
  80ee10:	e0bffd17 	ldw	r2,-12(fp)
  80ee14:	10800717 	ldw	r2,28(r2)
  80ee18:	e0bff815 	stw	r2,-32(fp)
  80ee1c:	e0800217 	ldw	r2,8(fp)
  80ee20:	10000326 	beq	r2,zero,80ee30 <access_virt_sarray+0x1d4>
  80ee24:	e0bffd17 	ldw	r2,-12(fp)
  80ee28:	e0fffa17 	ldw	r3,-24(fp)
  80ee2c:	10c00715 	stw	r3,28(r2)
  80ee30:	e0bffd17 	ldw	r2,-12(fp)
  80ee34:	10800817 	ldw	r2,32(r2)
  80ee38:	10002026 	beq	r2,zero,80eebc <access_virt_sarray+0x260>
  80ee3c:	e0bffd17 	ldw	r2,-12(fp)
  80ee40:	10800217 	ldw	r2,8(r2)
  80ee44:	e0bffb15 	stw	r2,-20(fp)
  80ee48:	e0bffd17 	ldw	r2,-12(fp)
  80ee4c:	10800617 	ldw	r2,24(r2)
  80ee50:	e0fff817 	ldw	r3,-32(fp)
  80ee54:	1885c83a 	sub	r2,r3,r2
  80ee58:	e0bff815 	stw	r2,-32(fp)
  80ee5c:	e0bffd17 	ldw	r2,-12(fp)
  80ee60:	10800617 	ldw	r2,24(r2)
  80ee64:	e0fffa17 	ldw	r3,-24(fp)
  80ee68:	1885c83a 	sub	r2,r3,r2
  80ee6c:	e0bffa15 	stw	r2,-24(fp)
  80ee70:	00000e06 	br	80eeac <access_virt_sarray+0x250>
  80ee74:	e0bffd17 	ldw	r2,-12(fp)
  80ee78:	10c00017 	ldw	r3,0(r2)
  80ee7c:	e0bff817 	ldw	r2,-32(fp)
  80ee80:	1085883a 	add	r2,r2,r2
  80ee84:	1085883a 	add	r2,r2,r2
  80ee88:	1885883a 	add	r2,r3,r2
  80ee8c:	10800017 	ldw	r2,0(r2)
  80ee90:	e1bffb17 	ldw	r6,-20(fp)
  80ee94:	000b883a 	mov	r5,zero
  80ee98:	1009883a 	mov	r4,r2
  80ee9c:	0833d940 	call	833d94 <memset>
  80eea0:	e0bff817 	ldw	r2,-32(fp)
  80eea4:	10800044 	addi	r2,r2,1
  80eea8:	e0bff815 	stw	r2,-32(fp)
  80eeac:	e0fff817 	ldw	r3,-32(fp)
  80eeb0:	e0bffa17 	ldw	r2,-24(fp)
  80eeb4:	18bfef36 	bltu	r3,r2,80ee74 <__alt_mem_epcs_flash_controller_0+0xff805e74>
  80eeb8:	00000b06 	br	80eee8 <access_virt_sarray+0x28c>
  80eebc:	e0800217 	ldw	r2,8(fp)
  80eec0:	1000091e 	bne	r2,zero,80eee8 <access_virt_sarray+0x28c>
  80eec4:	e0bffc17 	ldw	r2,-16(fp)
  80eec8:	10800017 	ldw	r2,0(r2)
  80eecc:	00c005c4 	movi	r3,23
  80eed0:	10c00515 	stw	r3,20(r2)
  80eed4:	e0bffc17 	ldw	r2,-16(fp)
  80eed8:	10800017 	ldw	r2,0(r2)
  80eedc:	10800017 	ldw	r2,0(r2)
  80eee0:	e13ffc17 	ldw	r4,-16(fp)
  80eee4:	103ee83a 	callr	r2
  80eee8:	e0800217 	ldw	r2,8(fp)
  80eeec:	10000326 	beq	r2,zero,80eefc <access_virt_sarray+0x2a0>
  80eef0:	e0bffd17 	ldw	r2,-12(fp)
  80eef4:	00c00044 	movi	r3,1
  80eef8:	10c00915 	stw	r3,36(r2)
  80eefc:	e0bffd17 	ldw	r2,-12(fp)
  80ef00:	10c00017 	ldw	r3,0(r2)
  80ef04:	e0bffd17 	ldw	r2,-12(fp)
  80ef08:	10800617 	ldw	r2,24(r2)
  80ef0c:	e13ffe17 	ldw	r4,-8(fp)
  80ef10:	2085c83a 	sub	r2,r4,r2
  80ef14:	1085883a 	add	r2,r2,r2
  80ef18:	1085883a 	add	r2,r2,r2
  80ef1c:	1885883a 	add	r2,r3,r2
  80ef20:	e037883a 	mov	sp,fp
  80ef24:	dfc00117 	ldw	ra,4(sp)
  80ef28:	df000017 	ldw	fp,0(sp)
  80ef2c:	dec00204 	addi	sp,sp,8
  80ef30:	f800283a 	ret

0080ef34 <access_virt_barray>:
  80ef34:	defff604 	addi	sp,sp,-40
  80ef38:	dfc00915 	stw	ra,36(sp)
  80ef3c:	df000815 	stw	fp,32(sp)
  80ef40:	df000804 	addi	fp,sp,32
  80ef44:	e13ffc15 	stw	r4,-16(fp)
  80ef48:	e17ffd15 	stw	r5,-12(fp)
  80ef4c:	e1bffe15 	stw	r6,-8(fp)
  80ef50:	e1ffff15 	stw	r7,-4(fp)
  80ef54:	e0fffe17 	ldw	r3,-8(fp)
  80ef58:	e0bfff17 	ldw	r2,-4(fp)
  80ef5c:	1885883a 	add	r2,r3,r2
  80ef60:	e0bffa15 	stw	r2,-24(fp)
  80ef64:	e0bffd17 	ldw	r2,-12(fp)
  80ef68:	10c00117 	ldw	r3,4(r2)
  80ef6c:	e0bffa17 	ldw	r2,-24(fp)
  80ef70:	18800736 	bltu	r3,r2,80ef90 <access_virt_barray+0x5c>
  80ef74:	e0bffd17 	ldw	r2,-12(fp)
  80ef78:	10c00317 	ldw	r3,12(r2)
  80ef7c:	e0bfff17 	ldw	r2,-4(fp)
  80ef80:	18800336 	bltu	r3,r2,80ef90 <access_virt_barray+0x5c>
  80ef84:	e0bffd17 	ldw	r2,-12(fp)
  80ef88:	10800017 	ldw	r2,0(r2)
  80ef8c:	1000091e 	bne	r2,zero,80efb4 <access_virt_barray+0x80>
  80ef90:	e0bffc17 	ldw	r2,-16(fp)
  80ef94:	10800017 	ldw	r2,0(r2)
  80ef98:	00c005c4 	movi	r3,23
  80ef9c:	10c00515 	stw	r3,20(r2)
  80efa0:	e0bffc17 	ldw	r2,-16(fp)
  80efa4:	10800017 	ldw	r2,0(r2)
  80efa8:	10800017 	ldw	r2,0(r2)
  80efac:	e13ffc17 	ldw	r4,-16(fp)
  80efb0:	103ee83a 	callr	r2
  80efb4:	e0bffd17 	ldw	r2,-12(fp)
  80efb8:	10800617 	ldw	r2,24(r2)
  80efbc:	e0fffe17 	ldw	r3,-8(fp)
  80efc0:	18800736 	bltu	r3,r2,80efe0 <access_virt_barray+0xac>
  80efc4:	e0bffd17 	ldw	r2,-12(fp)
  80efc8:	10c00617 	ldw	r3,24(r2)
  80efcc:	e0bffd17 	ldw	r2,-12(fp)
  80efd0:	10800417 	ldw	r2,16(r2)
  80efd4:	1887883a 	add	r3,r3,r2
  80efd8:	e0bffa17 	ldw	r2,-24(fp)
  80efdc:	18802c2e 	bgeu	r3,r2,80f090 <access_virt_barray+0x15c>
  80efe0:	e0bffd17 	ldw	r2,-12(fp)
  80efe4:	10800a17 	ldw	r2,40(r2)
  80efe8:	1000091e 	bne	r2,zero,80f010 <access_virt_barray+0xdc>
  80efec:	e0bffc17 	ldw	r2,-16(fp)
  80eff0:	10800017 	ldw	r2,0(r2)
  80eff4:	00c011c4 	movi	r3,71
  80eff8:	10c00515 	stw	r3,20(r2)
  80effc:	e0bffc17 	ldw	r2,-16(fp)
  80f000:	10800017 	ldw	r2,0(r2)
  80f004:	10800017 	ldw	r2,0(r2)
  80f008:	e13ffc17 	ldw	r4,-16(fp)
  80f00c:	103ee83a 	callr	r2
  80f010:	e0bffd17 	ldw	r2,-12(fp)
  80f014:	10800917 	ldw	r2,36(r2)
  80f018:	10000626 	beq	r2,zero,80f034 <access_virt_barray+0x100>
  80f01c:	01800044 	movi	r6,1
  80f020:	e17ffd17 	ldw	r5,-12(fp)
  80f024:	e13ffc17 	ldw	r4,-16(fp)
  80f028:	080ea780 	call	80ea78 <do_barray_io>
  80f02c:	e0bffd17 	ldw	r2,-12(fp)
  80f030:	10000915 	stw	zero,36(r2)
  80f034:	e0bffd17 	ldw	r2,-12(fp)
  80f038:	10c00617 	ldw	r3,24(r2)
  80f03c:	e0bffe17 	ldw	r2,-8(fp)
  80f040:	1880042e 	bgeu	r3,r2,80f054 <access_virt_barray+0x120>
  80f044:	e0bffd17 	ldw	r2,-12(fp)
  80f048:	e0fffe17 	ldw	r3,-8(fp)
  80f04c:	10c00615 	stw	r3,24(r2)
  80f050:	00000b06 	br	80f080 <access_virt_barray+0x14c>
  80f054:	e0bffa17 	ldw	r2,-24(fp)
  80f058:	e0fffd17 	ldw	r3,-12(fp)
  80f05c:	18c00417 	ldw	r3,16(r3)
  80f060:	10c5c83a 	sub	r2,r2,r3
  80f064:	e0bff915 	stw	r2,-28(fp)
  80f068:	e0bff917 	ldw	r2,-28(fp)
  80f06c:	1000010e 	bge	r2,zero,80f074 <access_virt_barray+0x140>
  80f070:	e03ff915 	stw	zero,-28(fp)
  80f074:	e0fff917 	ldw	r3,-28(fp)
  80f078:	e0bffd17 	ldw	r2,-12(fp)
  80f07c:	10c00615 	stw	r3,24(r2)
  80f080:	000d883a 	mov	r6,zero
  80f084:	e17ffd17 	ldw	r5,-12(fp)
  80f088:	e13ffc17 	ldw	r4,-16(fp)
  80f08c:	080ea780 	call	80ea78 <do_barray_io>
  80f090:	e0bffd17 	ldw	r2,-12(fp)
  80f094:	10c00717 	ldw	r3,28(r2)
  80f098:	e0bffa17 	ldw	r2,-24(fp)
  80f09c:	1880492e 	bgeu	r3,r2,80f1c4 <access_virt_barray+0x290>
  80f0a0:	e0bffd17 	ldw	r2,-12(fp)
  80f0a4:	10c00717 	ldw	r3,28(r2)
  80f0a8:	e0bffe17 	ldw	r2,-8(fp)
  80f0ac:	18800e2e 	bgeu	r3,r2,80f0e8 <access_virt_barray+0x1b4>
  80f0b0:	e0800217 	ldw	r2,8(fp)
  80f0b4:	10000926 	beq	r2,zero,80f0dc <access_virt_barray+0x1a8>
  80f0b8:	e0bffc17 	ldw	r2,-16(fp)
  80f0bc:	10800017 	ldw	r2,0(r2)
  80f0c0:	00c005c4 	movi	r3,23
  80f0c4:	10c00515 	stw	r3,20(r2)
  80f0c8:	e0bffc17 	ldw	r2,-16(fp)
  80f0cc:	10800017 	ldw	r2,0(r2)
  80f0d0:	10800017 	ldw	r2,0(r2)
  80f0d4:	e13ffc17 	ldw	r4,-16(fp)
  80f0d8:	103ee83a 	callr	r2
  80f0dc:	e0bffe17 	ldw	r2,-8(fp)
  80f0e0:	e0bff815 	stw	r2,-32(fp)
  80f0e4:	00000306 	br	80f0f4 <access_virt_barray+0x1c0>
  80f0e8:	e0bffd17 	ldw	r2,-12(fp)
  80f0ec:	10800717 	ldw	r2,28(r2)
  80f0f0:	e0bff815 	stw	r2,-32(fp)
  80f0f4:	e0800217 	ldw	r2,8(fp)
  80f0f8:	10000326 	beq	r2,zero,80f108 <access_virt_barray+0x1d4>
  80f0fc:	e0bffd17 	ldw	r2,-12(fp)
  80f100:	e0fffa17 	ldw	r3,-24(fp)
  80f104:	10c00715 	stw	r3,28(r2)
  80f108:	e0bffd17 	ldw	r2,-12(fp)
  80f10c:	10800817 	ldw	r2,32(r2)
  80f110:	10002126 	beq	r2,zero,80f198 <access_virt_barray+0x264>
  80f114:	e0bffd17 	ldw	r2,-12(fp)
  80f118:	10800217 	ldw	r2,8(r2)
  80f11c:	100491fa 	slli	r2,r2,7
  80f120:	e0bffb15 	stw	r2,-20(fp)
  80f124:	e0bffd17 	ldw	r2,-12(fp)
  80f128:	10800617 	ldw	r2,24(r2)
  80f12c:	e0fff817 	ldw	r3,-32(fp)
  80f130:	1885c83a 	sub	r2,r3,r2
  80f134:	e0bff815 	stw	r2,-32(fp)
  80f138:	e0bffd17 	ldw	r2,-12(fp)
  80f13c:	10800617 	ldw	r2,24(r2)
  80f140:	e0fffa17 	ldw	r3,-24(fp)
  80f144:	1885c83a 	sub	r2,r3,r2
  80f148:	e0bffa15 	stw	r2,-24(fp)
  80f14c:	00000e06 	br	80f188 <access_virt_barray+0x254>
  80f150:	e0bffd17 	ldw	r2,-12(fp)
  80f154:	10c00017 	ldw	r3,0(r2)
  80f158:	e0bff817 	ldw	r2,-32(fp)
  80f15c:	1085883a 	add	r2,r2,r2
  80f160:	1085883a 	add	r2,r2,r2
  80f164:	1885883a 	add	r2,r3,r2
  80f168:	10800017 	ldw	r2,0(r2)
  80f16c:	e1bffb17 	ldw	r6,-20(fp)
  80f170:	000b883a 	mov	r5,zero
  80f174:	1009883a 	mov	r4,r2
  80f178:	0833d940 	call	833d94 <memset>
  80f17c:	e0bff817 	ldw	r2,-32(fp)
  80f180:	10800044 	addi	r2,r2,1
  80f184:	e0bff815 	stw	r2,-32(fp)
  80f188:	e0fff817 	ldw	r3,-32(fp)
  80f18c:	e0bffa17 	ldw	r2,-24(fp)
  80f190:	18bfef36 	bltu	r3,r2,80f150 <__alt_mem_epcs_flash_controller_0+0xff806150>
  80f194:	00000b06 	br	80f1c4 <access_virt_barray+0x290>
  80f198:	e0800217 	ldw	r2,8(fp)
  80f19c:	1000091e 	bne	r2,zero,80f1c4 <access_virt_barray+0x290>
  80f1a0:	e0bffc17 	ldw	r2,-16(fp)
  80f1a4:	10800017 	ldw	r2,0(r2)
  80f1a8:	00c005c4 	movi	r3,23
  80f1ac:	10c00515 	stw	r3,20(r2)
  80f1b0:	e0bffc17 	ldw	r2,-16(fp)
  80f1b4:	10800017 	ldw	r2,0(r2)
  80f1b8:	10800017 	ldw	r2,0(r2)
  80f1bc:	e13ffc17 	ldw	r4,-16(fp)
  80f1c0:	103ee83a 	callr	r2
  80f1c4:	e0800217 	ldw	r2,8(fp)
  80f1c8:	10000326 	beq	r2,zero,80f1d8 <access_virt_barray+0x2a4>
  80f1cc:	e0bffd17 	ldw	r2,-12(fp)
  80f1d0:	00c00044 	movi	r3,1
  80f1d4:	10c00915 	stw	r3,36(r2)
  80f1d8:	e0bffd17 	ldw	r2,-12(fp)
  80f1dc:	10c00017 	ldw	r3,0(r2)
  80f1e0:	e0bffd17 	ldw	r2,-12(fp)
  80f1e4:	10800617 	ldw	r2,24(r2)
  80f1e8:	e13ffe17 	ldw	r4,-8(fp)
  80f1ec:	2085c83a 	sub	r2,r4,r2
  80f1f0:	1085883a 	add	r2,r2,r2
  80f1f4:	1085883a 	add	r2,r2,r2
  80f1f8:	1885883a 	add	r2,r3,r2
  80f1fc:	e037883a 	mov	sp,fp
  80f200:	dfc00117 	ldw	ra,4(sp)
  80f204:	df000017 	ldw	fp,0(sp)
  80f208:	dec00204 	addi	sp,sp,8
  80f20c:	f800283a 	ret

0080f210 <free_pool>:
  80f210:	defff404 	addi	sp,sp,-48
  80f214:	dfc00b15 	stw	ra,44(sp)
  80f218:	df000a15 	stw	fp,40(sp)
  80f21c:	df000a04 	addi	fp,sp,40
  80f220:	e13ffe15 	stw	r4,-8(fp)
  80f224:	e17fff15 	stw	r5,-4(fp)
  80f228:	e0bffe17 	ldw	r2,-8(fp)
  80f22c:	10800117 	ldw	r2,4(r2)
  80f230:	e0bffa15 	stw	r2,-24(fp)
  80f234:	e0bfff17 	ldw	r2,-4(fp)
  80f238:	10000316 	blt	r2,zero,80f248 <free_pool+0x38>
  80f23c:	e0bfff17 	ldw	r2,-4(fp)
  80f240:	10800090 	cmplti	r2,r2,2
  80f244:	10000d1e 	bne	r2,zero,80f27c <free_pool+0x6c>
  80f248:	e0bffe17 	ldw	r2,-8(fp)
  80f24c:	10800017 	ldw	r2,0(r2)
  80f250:	00c003c4 	movi	r3,15
  80f254:	10c00515 	stw	r3,20(r2)
  80f258:	e0bffe17 	ldw	r2,-8(fp)
  80f25c:	10800017 	ldw	r2,0(r2)
  80f260:	e0ffff17 	ldw	r3,-4(fp)
  80f264:	10c00615 	stw	r3,24(r2)
  80f268:	e0bffe17 	ldw	r2,-8(fp)
  80f26c:	10800017 	ldw	r2,0(r2)
  80f270:	10800017 	ldw	r2,0(r2)
  80f274:	e13ffe17 	ldw	r4,-8(fp)
  80f278:	103ee83a 	callr	r2
  80f27c:	e0bfff17 	ldw	r2,-4(fp)
  80f280:	10800058 	cmpnei	r2,r2,1
  80f284:	10002e1e 	bne	r2,zero,80f340 <free_pool+0x130>
  80f288:	e0bffa17 	ldw	r2,-24(fp)
  80f28c:	10801117 	ldw	r2,68(r2)
  80f290:	e0bff815 	stw	r2,-32(fp)
  80f294:	00000f06 	br	80f2d4 <free_pool+0xc4>
  80f298:	e0bff817 	ldw	r2,-32(fp)
  80f29c:	10800a17 	ldw	r2,40(r2)
  80f2a0:	10000926 	beq	r2,zero,80f2c8 <free_pool+0xb8>
  80f2a4:	e0bff817 	ldw	r2,-32(fp)
  80f2a8:	10000a15 	stw	zero,40(r2)
  80f2ac:	e0bff817 	ldw	r2,-32(fp)
  80f2b0:	10800e17 	ldw	r2,56(r2)
  80f2b4:	e0fff817 	ldw	r3,-32(fp)
  80f2b8:	18c00c04 	addi	r3,r3,48
  80f2bc:	180b883a 	mov	r5,r3
  80f2c0:	e13ffe17 	ldw	r4,-8(fp)
  80f2c4:	103ee83a 	callr	r2
  80f2c8:	e0bff817 	ldw	r2,-32(fp)
  80f2cc:	10800b17 	ldw	r2,44(r2)
  80f2d0:	e0bff815 	stw	r2,-32(fp)
  80f2d4:	e0bff817 	ldw	r2,-32(fp)
  80f2d8:	103fef1e 	bne	r2,zero,80f298 <__alt_mem_epcs_flash_controller_0+0xff806298>
  80f2dc:	e0bffa17 	ldw	r2,-24(fp)
  80f2e0:	10001115 	stw	zero,68(r2)
  80f2e4:	e0bffa17 	ldw	r2,-24(fp)
  80f2e8:	10801217 	ldw	r2,72(r2)
  80f2ec:	e0bff915 	stw	r2,-28(fp)
  80f2f0:	00000f06 	br	80f330 <free_pool+0x120>
  80f2f4:	e0bff917 	ldw	r2,-28(fp)
  80f2f8:	10800a17 	ldw	r2,40(r2)
  80f2fc:	10000926 	beq	r2,zero,80f324 <free_pool+0x114>
  80f300:	e0bff917 	ldw	r2,-28(fp)
  80f304:	10000a15 	stw	zero,40(r2)
  80f308:	e0bff917 	ldw	r2,-28(fp)
  80f30c:	10800e17 	ldw	r2,56(r2)
  80f310:	e0fff917 	ldw	r3,-28(fp)
  80f314:	18c00c04 	addi	r3,r3,48
  80f318:	180b883a 	mov	r5,r3
  80f31c:	e13ffe17 	ldw	r4,-8(fp)
  80f320:	103ee83a 	callr	r2
  80f324:	e0bff917 	ldw	r2,-28(fp)
  80f328:	10800b17 	ldw	r2,44(r2)
  80f32c:	e0bff915 	stw	r2,-28(fp)
  80f330:	e0bff917 	ldw	r2,-28(fp)
  80f334:	103fef1e 	bne	r2,zero,80f2f4 <__alt_mem_epcs_flash_controller_0+0xff8062f4>
  80f338:	e0bffa17 	ldw	r2,-24(fp)
  80f33c:	10001215 	stw	zero,72(r2)
  80f340:	e0fffa17 	ldw	r3,-24(fp)
  80f344:	e0bfff17 	ldw	r2,-4(fp)
  80f348:	108003c4 	addi	r2,r2,15
  80f34c:	1085883a 	add	r2,r2,r2
  80f350:	1085883a 	add	r2,r2,r2
  80f354:	1885883a 	add	r2,r3,r2
  80f358:	10800017 	ldw	r2,0(r2)
  80f35c:	e0bff715 	stw	r2,-36(fp)
  80f360:	e0fffa17 	ldw	r3,-24(fp)
  80f364:	e0bfff17 	ldw	r2,-4(fp)
  80f368:	108003c4 	addi	r2,r2,15
  80f36c:	1085883a 	add	r2,r2,r2
  80f370:	1085883a 	add	r2,r2,r2
  80f374:	1885883a 	add	r2,r3,r2
  80f378:	10000015 	stw	zero,0(r2)
  80f37c:	00001806 	br	80f3e0 <free_pool+0x1d0>
  80f380:	e0bff717 	ldw	r2,-36(fp)
  80f384:	10800017 	ldw	r2,0(r2)
  80f388:	e0bffb15 	stw	r2,-20(fp)
  80f38c:	e0bff717 	ldw	r2,-36(fp)
  80f390:	10c00117 	ldw	r3,4(r2)
  80f394:	e0bff717 	ldw	r2,-36(fp)
  80f398:	10800217 	ldw	r2,8(r2)
  80f39c:	1885883a 	add	r2,r3,r2
  80f3a0:	10800304 	addi	r2,r2,12
  80f3a4:	e0bffc15 	stw	r2,-16(fp)
  80f3a8:	e1bffc17 	ldw	r6,-16(fp)
  80f3ac:	e17ff717 	ldw	r5,-36(fp)
  80f3b0:	e13ffe17 	ldw	r4,-8(fp)
  80f3b4:	080f88c0 	call	80f88c <jpeg_free_large>
  80f3b8:	e0bffa17 	ldw	r2,-24(fp)
  80f3bc:	10801317 	ldw	r2,76(r2)
  80f3c0:	1007883a 	mov	r3,r2
  80f3c4:	e0bffc17 	ldw	r2,-16(fp)
  80f3c8:	1885c83a 	sub	r2,r3,r2
  80f3cc:	1007883a 	mov	r3,r2
  80f3d0:	e0bffa17 	ldw	r2,-24(fp)
  80f3d4:	10c01315 	stw	r3,76(r2)
  80f3d8:	e0bffb17 	ldw	r2,-20(fp)
  80f3dc:	e0bff715 	stw	r2,-36(fp)
  80f3e0:	e0bff717 	ldw	r2,-36(fp)
  80f3e4:	103fe61e 	bne	r2,zero,80f380 <__alt_mem_epcs_flash_controller_0+0xff806380>
  80f3e8:	e0fffa17 	ldw	r3,-24(fp)
  80f3ec:	e0bfff17 	ldw	r2,-4(fp)
  80f3f0:	10800344 	addi	r2,r2,13
  80f3f4:	1085883a 	add	r2,r2,r2
  80f3f8:	1085883a 	add	r2,r2,r2
  80f3fc:	1885883a 	add	r2,r3,r2
  80f400:	10800017 	ldw	r2,0(r2)
  80f404:	e0bff615 	stw	r2,-40(fp)
  80f408:	e0fffa17 	ldw	r3,-24(fp)
  80f40c:	e0bfff17 	ldw	r2,-4(fp)
  80f410:	10800344 	addi	r2,r2,13
  80f414:	1085883a 	add	r2,r2,r2
  80f418:	1085883a 	add	r2,r2,r2
  80f41c:	1885883a 	add	r2,r3,r2
  80f420:	10000015 	stw	zero,0(r2)
  80f424:	00001806 	br	80f488 <free_pool+0x278>
  80f428:	e0bff617 	ldw	r2,-40(fp)
  80f42c:	10800017 	ldw	r2,0(r2)
  80f430:	e0bffd15 	stw	r2,-12(fp)
  80f434:	e0bff617 	ldw	r2,-40(fp)
  80f438:	10c00117 	ldw	r3,4(r2)
  80f43c:	e0bff617 	ldw	r2,-40(fp)
  80f440:	10800217 	ldw	r2,8(r2)
  80f444:	1885883a 	add	r2,r3,r2
  80f448:	10800304 	addi	r2,r2,12
  80f44c:	e0bffc15 	stw	r2,-16(fp)
  80f450:	e1bffc17 	ldw	r6,-16(fp)
  80f454:	e17ff617 	ldw	r5,-40(fp)
  80f458:	e13ffe17 	ldw	r4,-8(fp)
  80f45c:	080f81c0 	call	80f81c <jpeg_free_small>
  80f460:	e0bffa17 	ldw	r2,-24(fp)
  80f464:	10801317 	ldw	r2,76(r2)
  80f468:	1007883a 	mov	r3,r2
  80f46c:	e0bffc17 	ldw	r2,-16(fp)
  80f470:	1885c83a 	sub	r2,r3,r2
  80f474:	1007883a 	mov	r3,r2
  80f478:	e0bffa17 	ldw	r2,-24(fp)
  80f47c:	10c01315 	stw	r3,76(r2)
  80f480:	e0bffd17 	ldw	r2,-12(fp)
  80f484:	e0bff615 	stw	r2,-40(fp)
  80f488:	e0bff617 	ldw	r2,-40(fp)
  80f48c:	103fe61e 	bne	r2,zero,80f428 <__alt_mem_epcs_flash_controller_0+0xff806428>
  80f490:	0001883a 	nop
  80f494:	e037883a 	mov	sp,fp
  80f498:	dfc00117 	ldw	ra,4(sp)
  80f49c:	df000017 	ldw	fp,0(sp)
  80f4a0:	dec00204 	addi	sp,sp,8
  80f4a4:	f800283a 	ret

0080f4a8 <self_destruct>:
  80f4a8:	defffc04 	addi	sp,sp,-16
  80f4ac:	dfc00315 	stw	ra,12(sp)
  80f4b0:	df000215 	stw	fp,8(sp)
  80f4b4:	df000204 	addi	fp,sp,8
  80f4b8:	e13fff15 	stw	r4,-4(fp)
  80f4bc:	00800044 	movi	r2,1
  80f4c0:	e0bffe15 	stw	r2,-8(fp)
  80f4c4:	00000606 	br	80f4e0 <self_destruct+0x38>
  80f4c8:	e17ffe17 	ldw	r5,-8(fp)
  80f4cc:	e13fff17 	ldw	r4,-4(fp)
  80f4d0:	080f2100 	call	80f210 <free_pool>
  80f4d4:	e0bffe17 	ldw	r2,-8(fp)
  80f4d8:	10bfffc4 	addi	r2,r2,-1
  80f4dc:	e0bffe15 	stw	r2,-8(fp)
  80f4e0:	e0bffe17 	ldw	r2,-8(fp)
  80f4e4:	103ff80e 	bge	r2,zero,80f4c8 <__alt_mem_epcs_flash_controller_0+0xff8064c8>
  80f4e8:	e0bfff17 	ldw	r2,-4(fp)
  80f4ec:	10800117 	ldw	r2,4(r2)
  80f4f0:	01801504 	movi	r6,84
  80f4f4:	100b883a 	mov	r5,r2
  80f4f8:	e13fff17 	ldw	r4,-4(fp)
  80f4fc:	080f81c0 	call	80f81c <jpeg_free_small>
  80f500:	e0bfff17 	ldw	r2,-4(fp)
  80f504:	10000115 	stw	zero,4(r2)
  80f508:	e13fff17 	ldw	r4,-4(fp)
  80f50c:	080f9740 	call	80f974 <jpeg_mem_term>
  80f510:	0001883a 	nop
  80f514:	e037883a 	mov	sp,fp
  80f518:	dfc00117 	ldw	ra,4(sp)
  80f51c:	df000017 	ldw	fp,0(sp)
  80f520:	dec00204 	addi	sp,sp,8
  80f524:	f800283a 	ret

0080f528 <jinit_memory_mgr>:
  80f528:	defff704 	addi	sp,sp,-36
  80f52c:	dfc00815 	stw	ra,32(sp)
  80f530:	df000715 	stw	fp,28(sp)
  80f534:	df000704 	addi	fp,sp,28
  80f538:	e13fff15 	stw	r4,-4(fp)
  80f53c:	e0bfff17 	ldw	r2,-4(fp)
  80f540:	10000115 	stw	zero,4(r2)
  80f544:	008ee6f4 	movhi	r2,15259
  80f548:	10b28004 	addi	r2,r2,-13824
  80f54c:	e0bffa15 	stw	r2,-24(fp)
  80f550:	e0fffa17 	ldw	r3,-24(fp)
  80f554:	008ee6f4 	movhi	r2,15259
  80f558:	10b28004 	addi	r2,r2,-13824
  80f55c:	18800926 	beq	r3,r2,80f584 <jinit_memory_mgr+0x5c>
  80f560:	e0bfff17 	ldw	r2,-4(fp)
  80f564:	10800017 	ldw	r2,0(r2)
  80f568:	00c00084 	movi	r3,2
  80f56c:	10c00515 	stw	r3,20(r2)
  80f570:	e0bfff17 	ldw	r2,-4(fp)
  80f574:	10800017 	ldw	r2,0(r2)
  80f578:	10800017 	ldw	r2,0(r2)
  80f57c:	e13fff17 	ldw	r4,-4(fp)
  80f580:	103ee83a 	callr	r2
  80f584:	e13fff17 	ldw	r4,-4(fp)
  80f588:	080f9500 	call	80f950 <jpeg_mem_init>
  80f58c:	e0bffd15 	stw	r2,-12(fp)
  80f590:	01401504 	movi	r5,84
  80f594:	e13fff17 	ldw	r4,-4(fp)
  80f598:	080f7e80 	call	80f7e8 <jpeg_get_small>
  80f59c:	e0bffb15 	stw	r2,-20(fp)
  80f5a0:	e0bffb17 	ldw	r2,-20(fp)
  80f5a4:	10000e1e 	bne	r2,zero,80f5e0 <jinit_memory_mgr+0xb8>
  80f5a8:	e13fff17 	ldw	r4,-4(fp)
  80f5ac:	080f9740 	call	80f974 <jpeg_mem_term>
  80f5b0:	e0bfff17 	ldw	r2,-4(fp)
  80f5b4:	10800017 	ldw	r2,0(r2)
  80f5b8:	00c00e04 	movi	r3,56
  80f5bc:	10c00515 	stw	r3,20(r2)
  80f5c0:	e0bfff17 	ldw	r2,-4(fp)
  80f5c4:	10800017 	ldw	r2,0(r2)
  80f5c8:	10000615 	stw	zero,24(r2)
  80f5cc:	e0bfff17 	ldw	r2,-4(fp)
  80f5d0:	10800017 	ldw	r2,0(r2)
  80f5d4:	10800017 	ldw	r2,0(r2)
  80f5d8:	e13fff17 	ldw	r4,-4(fp)
  80f5dc:	103ee83a 	callr	r2
  80f5e0:	e0fffb17 	ldw	r3,-20(fp)
  80f5e4:	00802074 	movhi	r2,129
  80f5e8:	10b6c704 	addi	r2,r2,-9444
  80f5ec:	18800015 	stw	r2,0(r3)
  80f5f0:	e0fffb17 	ldw	r3,-20(fp)
  80f5f4:	00802074 	movhi	r2,129
  80f5f8:	10b77b04 	addi	r2,r2,-8724
  80f5fc:	18800115 	stw	r2,4(r3)
  80f600:	e0fffb17 	ldw	r3,-20(fp)
  80f604:	00802074 	movhi	r2,129
  80f608:	10b7d904 	addi	r2,r2,-8348
  80f60c:	18800215 	stw	r2,8(r3)
  80f610:	e0fffb17 	ldw	r3,-20(fp)
  80f614:	00802074 	movhi	r2,129
  80f618:	10b83704 	addi	r2,r2,-7972
  80f61c:	18800315 	stw	r2,12(r3)
  80f620:	e0fffb17 	ldw	r3,-20(fp)
  80f624:	00802074 	movhi	r2,129
  80f628:	10b89904 	addi	r2,r2,-7580
  80f62c:	18800415 	stw	r2,16(r3)
  80f630:	e0fffb17 	ldw	r3,-20(fp)
  80f634:	00802074 	movhi	r2,129
  80f638:	10b8d604 	addi	r2,r2,-7336
  80f63c:	18800515 	stw	r2,20(r3)
  80f640:	e0fffb17 	ldw	r3,-20(fp)
  80f644:	00802074 	movhi	r2,129
  80f648:	10b91304 	addi	r2,r2,-7092
  80f64c:	18800615 	stw	r2,24(r3)
  80f650:	e0fffb17 	ldw	r3,-20(fp)
  80f654:	00802074 	movhi	r2,129
  80f658:	10bb1704 	addi	r2,r2,-5028
  80f65c:	18800715 	stw	r2,28(r3)
  80f660:	e0fffb17 	ldw	r3,-20(fp)
  80f664:	00802074 	movhi	r2,129
  80f668:	10bbcd04 	addi	r2,r2,-4300
  80f66c:	18800815 	stw	r2,32(r3)
  80f670:	e0fffb17 	ldw	r3,-20(fp)
  80f674:	00802074 	movhi	r2,129
  80f678:	10bc8404 	addi	r2,r2,-3568
  80f67c:	18800915 	stw	r2,36(r3)
  80f680:	e0fffb17 	ldw	r3,-20(fp)
  80f684:	00802074 	movhi	r2,129
  80f688:	10bd2a04 	addi	r2,r2,-2904
  80f68c:	18800a15 	stw	r2,40(r3)
  80f690:	e0fffb17 	ldw	r3,-20(fp)
  80f694:	008ee6f4 	movhi	r2,15259
  80f698:	10b28004 	addi	r2,r2,-13824
  80f69c:	18800c15 	stw	r2,48(r3)
  80f6a0:	e0fffd17 	ldw	r3,-12(fp)
  80f6a4:	e0bffb17 	ldw	r2,-20(fp)
  80f6a8:	10c00b15 	stw	r3,44(r2)
  80f6ac:	00800044 	movi	r2,1
  80f6b0:	e0bff915 	stw	r2,-28(fp)
  80f6b4:	00001106 	br	80f6fc <jinit_memory_mgr+0x1d4>
  80f6b8:	e0fffb17 	ldw	r3,-20(fp)
  80f6bc:	e0bff917 	ldw	r2,-28(fp)
  80f6c0:	10800344 	addi	r2,r2,13
  80f6c4:	1085883a 	add	r2,r2,r2
  80f6c8:	1085883a 	add	r2,r2,r2
  80f6cc:	1885883a 	add	r2,r3,r2
  80f6d0:	10000015 	stw	zero,0(r2)
  80f6d4:	e0fffb17 	ldw	r3,-20(fp)
  80f6d8:	e0bff917 	ldw	r2,-28(fp)
  80f6dc:	108003c4 	addi	r2,r2,15
  80f6e0:	1085883a 	add	r2,r2,r2
  80f6e4:	1085883a 	add	r2,r2,r2
  80f6e8:	1885883a 	add	r2,r3,r2
  80f6ec:	10000015 	stw	zero,0(r2)
  80f6f0:	e0bff917 	ldw	r2,-28(fp)
  80f6f4:	10bfffc4 	addi	r2,r2,-1
  80f6f8:	e0bff915 	stw	r2,-28(fp)
  80f6fc:	e0bff917 	ldw	r2,-28(fp)
  80f700:	103fed0e 	bge	r2,zero,80f6b8 <__alt_mem_epcs_flash_controller_0+0xff8066b8>
  80f704:	e0bffb17 	ldw	r2,-20(fp)
  80f708:	10001115 	stw	zero,68(r2)
  80f70c:	e0bffb17 	ldw	r2,-20(fp)
  80f710:	10001215 	stw	zero,72(r2)
  80f714:	e0bffb17 	ldw	r2,-20(fp)
  80f718:	00c01504 	movi	r3,84
  80f71c:	10c01315 	stw	r3,76(r2)
  80f720:	e0fffb17 	ldw	r3,-20(fp)
  80f724:	e0bfff17 	ldw	r2,-4(fp)
  80f728:	10c00115 	stw	r3,4(r2)
  80f72c:	010021b4 	movhi	r4,134
  80f730:	2122b404 	addi	r4,r4,-30000
  80f734:	08331e80 	call	8331e8 <getenv>
  80f738:	e0bffc15 	stw	r2,-16(fp)
  80f73c:	e0bffc17 	ldw	r2,-16(fp)
  80f740:	10002326 	beq	r2,zero,80f7d0 <jinit_memory_mgr+0x2a8>
  80f744:	00801e04 	movi	r2,120
  80f748:	e0bffe05 	stb	r2,-8(fp)
  80f74c:	e0fffe04 	addi	r3,fp,-8
  80f750:	e0bffd04 	addi	r2,fp,-12
  80f754:	180f883a 	mov	r7,r3
  80f758:	100d883a 	mov	r6,r2
  80f75c:	014021b4 	movhi	r5,134
  80f760:	2962b604 	addi	r5,r5,-29992
  80f764:	e13ffc17 	ldw	r4,-16(fp)
  80f768:	0834ee00 	call	834ee0 <sscanf>
  80f76c:	0080180e 	bge	zero,r2,80f7d0 <jinit_memory_mgr+0x2a8>
  80f770:	e0bffe03 	ldbu	r2,-8(fp)
  80f774:	10803fcc 	andi	r2,r2,255
  80f778:	1080201c 	xori	r2,r2,128
  80f77c:	10bfe004 	addi	r2,r2,-128
  80f780:	10801b60 	cmpeqi	r2,r2,109
  80f784:	1000061e 	bne	r2,zero,80f7a0 <jinit_memory_mgr+0x278>
  80f788:	e0bffe03 	ldbu	r2,-8(fp)
  80f78c:	10803fcc 	andi	r2,r2,255
  80f790:	1080201c 	xori	r2,r2,128
  80f794:	10bfe004 	addi	r2,r2,-128
  80f798:	10801358 	cmpnei	r2,r2,77
  80f79c:	1000051e 	bne	r2,zero,80f7b4 <jinit_memory_mgr+0x28c>
  80f7a0:	e0bffd17 	ldw	r2,-12(fp)
  80f7a4:	0140fa04 	movi	r5,1000
  80f7a8:	1009883a 	mov	r4,r2
  80f7ac:	08301e80 	call	8301e8 <__mulsi3>
  80f7b0:	e0bffd15 	stw	r2,-12(fp)
  80f7b4:	e0bffd17 	ldw	r2,-12(fp)
  80f7b8:	0140fa04 	movi	r5,1000
  80f7bc:	1009883a 	mov	r4,r2
  80f7c0:	08301e80 	call	8301e8 <__mulsi3>
  80f7c4:	1007883a 	mov	r3,r2
  80f7c8:	e0bffb17 	ldw	r2,-20(fp)
  80f7cc:	10c00b15 	stw	r3,44(r2)
  80f7d0:	0001883a 	nop
  80f7d4:	e037883a 	mov	sp,fp
  80f7d8:	dfc00117 	ldw	ra,4(sp)
  80f7dc:	df000017 	ldw	fp,0(sp)
  80f7e0:	dec00204 	addi	sp,sp,8
  80f7e4:	f800283a 	ret

0080f7e8 <jpeg_get_small>:
  80f7e8:	defffc04 	addi	sp,sp,-16
  80f7ec:	dfc00315 	stw	ra,12(sp)
  80f7f0:	df000215 	stw	fp,8(sp)
  80f7f4:	df000204 	addi	fp,sp,8
  80f7f8:	e13ffe15 	stw	r4,-8(fp)
  80f7fc:	e17fff15 	stw	r5,-4(fp)
  80f800:	e13fff17 	ldw	r4,-4(fp)
  80f804:	08333340 	call	833334 <malloc>
  80f808:	e037883a 	mov	sp,fp
  80f80c:	dfc00117 	ldw	ra,4(sp)
  80f810:	df000017 	ldw	fp,0(sp)
  80f814:	dec00204 	addi	sp,sp,8
  80f818:	f800283a 	ret

0080f81c <jpeg_free_small>:
  80f81c:	defffb04 	addi	sp,sp,-20
  80f820:	dfc00415 	stw	ra,16(sp)
  80f824:	df000315 	stw	fp,12(sp)
  80f828:	df000304 	addi	fp,sp,12
  80f82c:	e13ffd15 	stw	r4,-12(fp)
  80f830:	e17ffe15 	stw	r5,-8(fp)
  80f834:	e1bfff15 	stw	r6,-4(fp)
  80f838:	e13ffe17 	ldw	r4,-8(fp)
  80f83c:	08333480 	call	833348 <free>
  80f840:	0001883a 	nop
  80f844:	e037883a 	mov	sp,fp
  80f848:	dfc00117 	ldw	ra,4(sp)
  80f84c:	df000017 	ldw	fp,0(sp)
  80f850:	dec00204 	addi	sp,sp,8
  80f854:	f800283a 	ret

0080f858 <jpeg_get_large>:
  80f858:	defffc04 	addi	sp,sp,-16
  80f85c:	dfc00315 	stw	ra,12(sp)
  80f860:	df000215 	stw	fp,8(sp)
  80f864:	df000204 	addi	fp,sp,8
  80f868:	e13ffe15 	stw	r4,-8(fp)
  80f86c:	e17fff15 	stw	r5,-4(fp)
  80f870:	e13fff17 	ldw	r4,-4(fp)
  80f874:	08333340 	call	833334 <malloc>
  80f878:	e037883a 	mov	sp,fp
  80f87c:	dfc00117 	ldw	ra,4(sp)
  80f880:	df000017 	ldw	fp,0(sp)
  80f884:	dec00204 	addi	sp,sp,8
  80f888:	f800283a 	ret

0080f88c <jpeg_free_large>:
  80f88c:	defffb04 	addi	sp,sp,-20
  80f890:	dfc00415 	stw	ra,16(sp)
  80f894:	df000315 	stw	fp,12(sp)
  80f898:	df000304 	addi	fp,sp,12
  80f89c:	e13ffd15 	stw	r4,-12(fp)
  80f8a0:	e17ffe15 	stw	r5,-8(fp)
  80f8a4:	e1bfff15 	stw	r6,-4(fp)
  80f8a8:	e13ffe17 	ldw	r4,-8(fp)
  80f8ac:	08333480 	call	833348 <free>
  80f8b0:	0001883a 	nop
  80f8b4:	e037883a 	mov	sp,fp
  80f8b8:	dfc00117 	ldw	ra,4(sp)
  80f8bc:	df000017 	ldw	fp,0(sp)
  80f8c0:	dec00204 	addi	sp,sp,8
  80f8c4:	f800283a 	ret

0080f8c8 <jpeg_mem_available>:
  80f8c8:	defffb04 	addi	sp,sp,-20
  80f8cc:	df000415 	stw	fp,16(sp)
  80f8d0:	df000404 	addi	fp,sp,16
  80f8d4:	e13ffc15 	stw	r4,-16(fp)
  80f8d8:	e17ffd15 	stw	r5,-12(fp)
  80f8dc:	e1bffe15 	stw	r6,-8(fp)
  80f8e0:	e1ffff15 	stw	r7,-4(fp)
  80f8e4:	e0bffe17 	ldw	r2,-8(fp)
  80f8e8:	e037883a 	mov	sp,fp
  80f8ec:	df000017 	ldw	fp,0(sp)
  80f8f0:	dec00104 	addi	sp,sp,4
  80f8f4:	f800283a 	ret

0080f8f8 <jpeg_open_backing_store>:
  80f8f8:	defffb04 	addi	sp,sp,-20
  80f8fc:	dfc00415 	stw	ra,16(sp)
  80f900:	df000315 	stw	fp,12(sp)
  80f904:	df000304 	addi	fp,sp,12
  80f908:	e13ffd15 	stw	r4,-12(fp)
  80f90c:	e17ffe15 	stw	r5,-8(fp)
  80f910:	e1bfff15 	stw	r6,-4(fp)
  80f914:	e0bffd17 	ldw	r2,-12(fp)
  80f918:	10800017 	ldw	r2,0(r2)
  80f91c:	00c00cc4 	movi	r3,51
  80f920:	10c00515 	stw	r3,20(r2)
  80f924:	e0bffd17 	ldw	r2,-12(fp)
  80f928:	10800017 	ldw	r2,0(r2)
  80f92c:	10800017 	ldw	r2,0(r2)
  80f930:	e13ffd17 	ldw	r4,-12(fp)
  80f934:	103ee83a 	callr	r2
  80f938:	0001883a 	nop
  80f93c:	e037883a 	mov	sp,fp
  80f940:	dfc00117 	ldw	ra,4(sp)
  80f944:	df000017 	ldw	fp,0(sp)
  80f948:	dec00204 	addi	sp,sp,8
  80f94c:	f800283a 	ret

0080f950 <jpeg_mem_init>:
  80f950:	defffe04 	addi	sp,sp,-8
  80f954:	df000115 	stw	fp,4(sp)
  80f958:	df000104 	addi	fp,sp,4
  80f95c:	e13fff15 	stw	r4,-4(fp)
  80f960:	0005883a 	mov	r2,zero
  80f964:	e037883a 	mov	sp,fp
  80f968:	df000017 	ldw	fp,0(sp)
  80f96c:	dec00104 	addi	sp,sp,4
  80f970:	f800283a 	ret

0080f974 <jpeg_mem_term>:
  80f974:	defffe04 	addi	sp,sp,-8
  80f978:	df000115 	stw	fp,4(sp)
  80f97c:	df000104 	addi	fp,sp,4
  80f980:	e13fff15 	stw	r4,-4(fp)
  80f984:	0001883a 	nop
  80f988:	e037883a 	mov	sp,fp
  80f98c:	df000017 	ldw	fp,0(sp)
  80f990:	dec00104 	addi	sp,sp,4
  80f994:	f800283a 	ret

0080f998 <select_ncolors>:
  80f998:	defff404 	addi	sp,sp,-48
  80f99c:	dfc00b15 	stw	ra,44(sp)
  80f9a0:	df000a15 	stw	fp,40(sp)
  80f9a4:	df000a04 	addi	fp,sp,40
  80f9a8:	e13ffe15 	stw	r4,-8(fp)
  80f9ac:	e17fff15 	stw	r5,-4(fp)
  80f9b0:	e0bffe17 	ldw	r2,-8(fp)
  80f9b4:	10801e17 	ldw	r2,120(r2)
  80f9b8:	e0bffb15 	stw	r2,-20(fp)
  80f9bc:	e0bffe17 	ldw	r2,-8(fp)
  80f9c0:	10801817 	ldw	r2,96(r2)
  80f9c4:	e0bffc15 	stw	r2,-16(fp)
  80f9c8:	00800044 	movi	r2,1
  80f9cc:	e0bff715 	stw	r2,-36(fp)
  80f9d0:	e0bff717 	ldw	r2,-36(fp)
  80f9d4:	10800044 	addi	r2,r2,1
  80f9d8:	e0bff715 	stw	r2,-36(fp)
  80f9dc:	e0bff717 	ldw	r2,-36(fp)
  80f9e0:	e0bffa15 	stw	r2,-24(fp)
  80f9e4:	00800044 	movi	r2,1
  80f9e8:	e0bff815 	stw	r2,-32(fp)
  80f9ec:	00000706 	br	80fa0c <select_ncolors+0x74>
  80f9f0:	e17ff717 	ldw	r5,-36(fp)
  80f9f4:	e13ffa17 	ldw	r4,-24(fp)
  80f9f8:	08301e80 	call	8301e8 <__mulsi3>
  80f9fc:	e0bffa15 	stw	r2,-24(fp)
  80fa00:	e0bff817 	ldw	r2,-32(fp)
  80fa04:	10800044 	addi	r2,r2,1
  80fa08:	e0bff815 	stw	r2,-32(fp)
  80fa0c:	e0fff817 	ldw	r3,-32(fp)
  80fa10:	e0bffb17 	ldw	r2,-20(fp)
  80fa14:	18bff616 	blt	r3,r2,80f9f0 <__alt_mem_epcs_flash_controller_0+0xff8069f0>
  80fa18:	e0bffa17 	ldw	r2,-24(fp)
  80fa1c:	e0fffc17 	ldw	r3,-16(fp)
  80fa20:	18bfeb0e 	bge	r3,r2,80f9d0 <__alt_mem_epcs_flash_controller_0+0xff8069d0>
  80fa24:	e0bff717 	ldw	r2,-36(fp)
  80fa28:	10bfffc4 	addi	r2,r2,-1
  80fa2c:	e0bff715 	stw	r2,-36(fp)
  80fa30:	e0bff717 	ldw	r2,-36(fp)
  80fa34:	10800088 	cmpgei	r2,r2,2
  80fa38:	10000d1e 	bne	r2,zero,80fa70 <select_ncolors+0xd8>
  80fa3c:	e0bffe17 	ldw	r2,-8(fp)
  80fa40:	10800017 	ldw	r2,0(r2)
  80fa44:	00c00e84 	movi	r3,58
  80fa48:	10c00515 	stw	r3,20(r2)
  80fa4c:	e0bffe17 	ldw	r2,-8(fp)
  80fa50:	10800017 	ldw	r2,0(r2)
  80fa54:	e0fffa17 	ldw	r3,-24(fp)
  80fa58:	10c00615 	stw	r3,24(r2)
  80fa5c:	e0bffe17 	ldw	r2,-8(fp)
  80fa60:	10800017 	ldw	r2,0(r2)
  80fa64:	10800017 	ldw	r2,0(r2)
  80fa68:	e13ffe17 	ldw	r4,-8(fp)
  80fa6c:	103ee83a 	callr	r2
  80fa70:	00800044 	movi	r2,1
  80fa74:	e0bff615 	stw	r2,-40(fp)
  80fa78:	e03ff815 	stw	zero,-32(fp)
  80fa7c:	00000f06 	br	80fabc <select_ncolors+0x124>
  80fa80:	e0bff817 	ldw	r2,-32(fp)
  80fa84:	1085883a 	add	r2,r2,r2
  80fa88:	1085883a 	add	r2,r2,r2
  80fa8c:	1007883a 	mov	r3,r2
  80fa90:	e0bfff17 	ldw	r2,-4(fp)
  80fa94:	10c5883a 	add	r2,r2,r3
  80fa98:	e0fff717 	ldw	r3,-36(fp)
  80fa9c:	10c00015 	stw	r3,0(r2)
  80faa0:	e17ff717 	ldw	r5,-36(fp)
  80faa4:	e13ff617 	ldw	r4,-40(fp)
  80faa8:	08301e80 	call	8301e8 <__mulsi3>
  80faac:	e0bff615 	stw	r2,-40(fp)
  80fab0:	e0bff817 	ldw	r2,-32(fp)
  80fab4:	10800044 	addi	r2,r2,1
  80fab8:	e0bff815 	stw	r2,-32(fp)
  80fabc:	e0fff817 	ldw	r3,-32(fp)
  80fac0:	e0bffb17 	ldw	r2,-20(fp)
  80fac4:	18bfee16 	blt	r3,r2,80fa80 <__alt_mem_epcs_flash_controller_0+0xff806a80>
  80fac8:	e03ff915 	stw	zero,-28(fp)
  80facc:	e03ff815 	stw	zero,-32(fp)
  80fad0:	00003806 	br	80fbb4 <select_ncolors+0x21c>
  80fad4:	e0bffe17 	ldw	r2,-8(fp)
  80fad8:	10800b17 	ldw	r2,44(r2)
  80fadc:	10800098 	cmpnei	r2,r2,2
  80fae0:	1000081e 	bne	r2,zero,80fb04 <select_ncolors+0x16c>
  80fae4:	008021b4 	movhi	r2,134
  80fae8:	10a2f804 	addi	r2,r2,-29728
  80faec:	e0fff817 	ldw	r3,-32(fp)
  80faf0:	18c7883a 	add	r3,r3,r3
  80faf4:	18c7883a 	add	r3,r3,r3
  80faf8:	10c5883a 	add	r2,r2,r3
  80fafc:	10800017 	ldw	r2,0(r2)
  80fb00:	00000106 	br	80fb08 <select_ncolors+0x170>
  80fb04:	e0bff817 	ldw	r2,-32(fp)
  80fb08:	e0bffd15 	stw	r2,-12(fp)
  80fb0c:	e0bffd17 	ldw	r2,-12(fp)
  80fb10:	1085883a 	add	r2,r2,r2
  80fb14:	1085883a 	add	r2,r2,r2
  80fb18:	1007883a 	mov	r3,r2
  80fb1c:	e0bfff17 	ldw	r2,-4(fp)
  80fb20:	10c5883a 	add	r2,r2,r3
  80fb24:	10800017 	ldw	r2,0(r2)
  80fb28:	100b883a 	mov	r5,r2
  80fb2c:	e13ff617 	ldw	r4,-40(fp)
  80fb30:	08300340 	call	830034 <__divsi3>
  80fb34:	e0bffa15 	stw	r2,-24(fp)
  80fb38:	e0bffd17 	ldw	r2,-12(fp)
  80fb3c:	1085883a 	add	r2,r2,r2
  80fb40:	1085883a 	add	r2,r2,r2
  80fb44:	1007883a 	mov	r3,r2
  80fb48:	e0bfff17 	ldw	r2,-4(fp)
  80fb4c:	10c5883a 	add	r2,r2,r3
  80fb50:	10800017 	ldw	r2,0(r2)
  80fb54:	10800044 	addi	r2,r2,1
  80fb58:	100b883a 	mov	r5,r2
  80fb5c:	e13ffa17 	ldw	r4,-24(fp)
  80fb60:	08301e80 	call	8301e8 <__mulsi3>
  80fb64:	e0bffa15 	stw	r2,-24(fp)
  80fb68:	e0bffa17 	ldw	r2,-24(fp)
  80fb6c:	e0fffc17 	ldw	r3,-16(fp)
  80fb70:	18801416 	blt	r3,r2,80fbc4 <select_ncolors+0x22c>
  80fb74:	e0bffd17 	ldw	r2,-12(fp)
  80fb78:	1085883a 	add	r2,r2,r2
  80fb7c:	1085883a 	add	r2,r2,r2
  80fb80:	1007883a 	mov	r3,r2
  80fb84:	e0bfff17 	ldw	r2,-4(fp)
  80fb88:	10c5883a 	add	r2,r2,r3
  80fb8c:	10c00017 	ldw	r3,0(r2)
  80fb90:	18c00044 	addi	r3,r3,1
  80fb94:	10c00015 	stw	r3,0(r2)
  80fb98:	e0bffa17 	ldw	r2,-24(fp)
  80fb9c:	e0bff615 	stw	r2,-40(fp)
  80fba0:	00800044 	movi	r2,1
  80fba4:	e0bff915 	stw	r2,-28(fp)
  80fba8:	e0bff817 	ldw	r2,-32(fp)
  80fbac:	10800044 	addi	r2,r2,1
  80fbb0:	e0bff815 	stw	r2,-32(fp)
  80fbb4:	e0fff817 	ldw	r3,-32(fp)
  80fbb8:	e0bffb17 	ldw	r2,-20(fp)
  80fbbc:	18bfc516 	blt	r3,r2,80fad4 <__alt_mem_epcs_flash_controller_0+0xff806ad4>
  80fbc0:	00000106 	br	80fbc8 <select_ncolors+0x230>
  80fbc4:	0001883a 	nop
  80fbc8:	e0bff917 	ldw	r2,-28(fp)
  80fbcc:	103fbe1e 	bne	r2,zero,80fac8 <__alt_mem_epcs_flash_controller_0+0xff806ac8>
  80fbd0:	e0bff617 	ldw	r2,-40(fp)
  80fbd4:	e037883a 	mov	sp,fp
  80fbd8:	dfc00117 	ldw	ra,4(sp)
  80fbdc:	df000017 	ldw	fp,0(sp)
  80fbe0:	dec00204 	addi	sp,sp,8
  80fbe4:	f800283a 	ret

0080fbe8 <output_value>:
  80fbe8:	defffa04 	addi	sp,sp,-24
  80fbec:	dfc00515 	stw	ra,20(sp)
  80fbf0:	df000415 	stw	fp,16(sp)
  80fbf4:	df000404 	addi	fp,sp,16
  80fbf8:	e13ffc15 	stw	r4,-16(fp)
  80fbfc:	e17ffd15 	stw	r5,-12(fp)
  80fc00:	e1bffe15 	stw	r6,-8(fp)
  80fc04:	e1ffff15 	stw	r7,-4(fp)
  80fc08:	01403fc4 	movi	r5,255
  80fc0c:	e13ffe17 	ldw	r4,-8(fp)
  80fc10:	08301e80 	call	8301e8 <__mulsi3>
  80fc14:	1009883a 	mov	r4,r2
  80fc18:	e0bfff17 	ldw	r2,-4(fp)
  80fc1c:	1006d7fa 	srli	r3,r2,31
  80fc20:	1885883a 	add	r2,r3,r2
  80fc24:	1005d07a 	srai	r2,r2,1
  80fc28:	2085883a 	add	r2,r4,r2
  80fc2c:	e17fff17 	ldw	r5,-4(fp)
  80fc30:	1009883a 	mov	r4,r2
  80fc34:	08300340 	call	830034 <__divsi3>
  80fc38:	e037883a 	mov	sp,fp
  80fc3c:	dfc00117 	ldw	ra,4(sp)
  80fc40:	df000017 	ldw	fp,0(sp)
  80fc44:	dec00204 	addi	sp,sp,8
  80fc48:	f800283a 	ret

0080fc4c <largest_input_value>:
  80fc4c:	defffa04 	addi	sp,sp,-24
  80fc50:	dfc00515 	stw	ra,20(sp)
  80fc54:	df000415 	stw	fp,16(sp)
  80fc58:	df000404 	addi	fp,sp,16
  80fc5c:	e13ffc15 	stw	r4,-16(fp)
  80fc60:	e17ffd15 	stw	r5,-12(fp)
  80fc64:	e1bffe15 	stw	r6,-8(fp)
  80fc68:	e1ffff15 	stw	r7,-4(fp)
  80fc6c:	01407f84 	movi	r5,510
  80fc70:	e13ffe17 	ldw	r4,-8(fp)
  80fc74:	08301e80 	call	8301e8 <__mulsi3>
  80fc78:	10c03fc4 	addi	r3,r2,255
  80fc7c:	e0bfff17 	ldw	r2,-4(fp)
  80fc80:	1887883a 	add	r3,r3,r2
  80fc84:	e0bfff17 	ldw	r2,-4(fp)
  80fc88:	1085883a 	add	r2,r2,r2
  80fc8c:	100b883a 	mov	r5,r2
  80fc90:	1809883a 	mov	r4,r3
  80fc94:	08300340 	call	830034 <__divsi3>
  80fc98:	e037883a 	mov	sp,fp
  80fc9c:	dfc00117 	ldw	ra,4(sp)
  80fca0:	df000017 	ldw	fp,0(sp)
  80fca4:	dec00204 	addi	sp,sp,8
  80fca8:	f800283a 	ret

0080fcac <create_colormap>:
  80fcac:	defff104 	addi	sp,sp,-60
  80fcb0:	dfc00e15 	stw	ra,56(sp)
  80fcb4:	df000d15 	stw	fp,52(sp)
  80fcb8:	df000d04 	addi	fp,sp,52
  80fcbc:	e13fff15 	stw	r4,-4(fp)
  80fcc0:	e0bfff17 	ldw	r2,-4(fp)
  80fcc4:	10807917 	ldw	r2,484(r2)
  80fcc8:	e0bff815 	stw	r2,-32(fp)
  80fccc:	e0bff817 	ldw	r2,-32(fp)
  80fcd0:	10800804 	addi	r2,r2,32
  80fcd4:	100b883a 	mov	r5,r2
  80fcd8:	e13fff17 	ldw	r4,-4(fp)
  80fcdc:	080f9980 	call	80f998 <select_ncolors>
  80fce0:	e0bff915 	stw	r2,-28(fp)
  80fce4:	e0bfff17 	ldw	r2,-4(fp)
  80fce8:	10801e17 	ldw	r2,120(r2)
  80fcec:	108000d8 	cmpnei	r2,r2,3
  80fcf0:	1000211e 	bne	r2,zero,80fd78 <create_colormap+0xcc>
  80fcf4:	e0bfff17 	ldw	r2,-4(fp)
  80fcf8:	10800017 	ldw	r2,0(r2)
  80fcfc:	10800604 	addi	r2,r2,24
  80fd00:	e0bffa15 	stw	r2,-24(fp)
  80fd04:	e0bffa17 	ldw	r2,-24(fp)
  80fd08:	e0fff917 	ldw	r3,-28(fp)
  80fd0c:	10c00015 	stw	r3,0(r2)
  80fd10:	e0bffa17 	ldw	r2,-24(fp)
  80fd14:	10800104 	addi	r2,r2,4
  80fd18:	e0fff817 	ldw	r3,-32(fp)
  80fd1c:	18c00817 	ldw	r3,32(r3)
  80fd20:	10c00015 	stw	r3,0(r2)
  80fd24:	e0bffa17 	ldw	r2,-24(fp)
  80fd28:	10800204 	addi	r2,r2,8
  80fd2c:	e0fff817 	ldw	r3,-32(fp)
  80fd30:	18c00917 	ldw	r3,36(r3)
  80fd34:	10c00015 	stw	r3,0(r2)
  80fd38:	e0bffa17 	ldw	r2,-24(fp)
  80fd3c:	10800304 	addi	r2,r2,12
  80fd40:	e0fff817 	ldw	r3,-32(fp)
  80fd44:	18c00a17 	ldw	r3,40(r3)
  80fd48:	10c00015 	stw	r3,0(r2)
  80fd4c:	e0bfff17 	ldw	r2,-4(fp)
  80fd50:	10800017 	ldw	r2,0(r2)
  80fd54:	00c01804 	movi	r3,96
  80fd58:	10c00515 	stw	r3,20(r2)
  80fd5c:	e0bfff17 	ldw	r2,-4(fp)
  80fd60:	10800017 	ldw	r2,0(r2)
  80fd64:	10800117 	ldw	r2,4(r2)
  80fd68:	01400044 	movi	r5,1
  80fd6c:	e13fff17 	ldw	r4,-4(fp)
  80fd70:	103ee83a 	callr	r2
  80fd74:	00000e06 	br	80fdb0 <create_colormap+0x104>
  80fd78:	e0bfff17 	ldw	r2,-4(fp)
  80fd7c:	10800017 	ldw	r2,0(r2)
  80fd80:	00c01844 	movi	r3,97
  80fd84:	10c00515 	stw	r3,20(r2)
  80fd88:	e0bfff17 	ldw	r2,-4(fp)
  80fd8c:	10800017 	ldw	r2,0(r2)
  80fd90:	e0fff917 	ldw	r3,-28(fp)
  80fd94:	10c00615 	stw	r3,24(r2)
  80fd98:	e0bfff17 	ldw	r2,-4(fp)
  80fd9c:	10800017 	ldw	r2,0(r2)
  80fda0:	10800117 	ldw	r2,4(r2)
  80fda4:	01400044 	movi	r5,1
  80fda8:	e13fff17 	ldw	r4,-4(fp)
  80fdac:	103ee83a 	callr	r2
  80fdb0:	e0bfff17 	ldw	r2,-4(fp)
  80fdb4:	10800117 	ldw	r2,4(r2)
  80fdb8:	10800217 	ldw	r2,8(r2)
  80fdbc:	e13ff917 	ldw	r4,-28(fp)
  80fdc0:	e0ffff17 	ldw	r3,-4(fp)
  80fdc4:	18c01e17 	ldw	r3,120(r3)
  80fdc8:	180f883a 	mov	r7,r3
  80fdcc:	200d883a 	mov	r6,r4
  80fdd0:	01400044 	movi	r5,1
  80fdd4:	e13fff17 	ldw	r4,-4(fp)
  80fdd8:	103ee83a 	callr	r2
  80fddc:	e0bffb15 	stw	r2,-20(fp)
  80fde0:	e0bff917 	ldw	r2,-28(fp)
  80fde4:	e0bff615 	stw	r2,-40(fp)
  80fde8:	e03ff315 	stw	zero,-52(fp)
  80fdec:	00004206 	br	80fef8 <create_colormap+0x24c>
  80fdf0:	e0fff817 	ldw	r3,-32(fp)
  80fdf4:	e0bff317 	ldw	r2,-52(fp)
  80fdf8:	10800204 	addi	r2,r2,8
  80fdfc:	1085883a 	add	r2,r2,r2
  80fe00:	1085883a 	add	r2,r2,r2
  80fe04:	1885883a 	add	r2,r3,r2
  80fe08:	10800017 	ldw	r2,0(r2)
  80fe0c:	e0bffc15 	stw	r2,-16(fp)
  80fe10:	e17ffc17 	ldw	r5,-16(fp)
  80fe14:	e13ff617 	ldw	r4,-40(fp)
  80fe18:	08300340 	call	830034 <__divsi3>
  80fe1c:	e0bffd15 	stw	r2,-12(fp)
  80fe20:	e03ff415 	stw	zero,-48(fp)
  80fe24:	00002c06 	br	80fed8 <create_colormap+0x22c>
  80fe28:	e0bffc17 	ldw	r2,-16(fp)
  80fe2c:	10bfffc4 	addi	r2,r2,-1
  80fe30:	100f883a 	mov	r7,r2
  80fe34:	e1bff417 	ldw	r6,-48(fp)
  80fe38:	e17ff317 	ldw	r5,-52(fp)
  80fe3c:	e13fff17 	ldw	r4,-4(fp)
  80fe40:	080fbe80 	call	80fbe8 <output_value>
  80fe44:	e0bffe15 	stw	r2,-8(fp)
  80fe48:	e17ffd17 	ldw	r5,-12(fp)
  80fe4c:	e13ff417 	ldw	r4,-48(fp)
  80fe50:	08301e80 	call	8301e8 <__mulsi3>
  80fe54:	e0bff715 	stw	r2,-36(fp)
  80fe58:	00001906 	br	80fec0 <create_colormap+0x214>
  80fe5c:	e03ff515 	stw	zero,-44(fp)
  80fe60:	00001006 	br	80fea4 <create_colormap+0x1f8>
  80fe64:	e0bff317 	ldw	r2,-52(fp)
  80fe68:	1085883a 	add	r2,r2,r2
  80fe6c:	1085883a 	add	r2,r2,r2
  80fe70:	1007883a 	mov	r3,r2
  80fe74:	e0bffb17 	ldw	r2,-20(fp)
  80fe78:	10c5883a 	add	r2,r2,r3
  80fe7c:	10800017 	ldw	r2,0(r2)
  80fe80:	e13ff717 	ldw	r4,-36(fp)
  80fe84:	e0fff517 	ldw	r3,-44(fp)
  80fe88:	20c7883a 	add	r3,r4,r3
  80fe8c:	10c5883a 	add	r2,r2,r3
  80fe90:	e0fffe17 	ldw	r3,-8(fp)
  80fe94:	10c00005 	stb	r3,0(r2)
  80fe98:	e0bff517 	ldw	r2,-44(fp)
  80fe9c:	10800044 	addi	r2,r2,1
  80fea0:	e0bff515 	stw	r2,-44(fp)
  80fea4:	e0fff517 	ldw	r3,-44(fp)
  80fea8:	e0bffd17 	ldw	r2,-12(fp)
  80feac:	18bfed16 	blt	r3,r2,80fe64 <__alt_mem_epcs_flash_controller_0+0xff806e64>
  80feb0:	e0fff717 	ldw	r3,-36(fp)
  80feb4:	e0bff617 	ldw	r2,-40(fp)
  80feb8:	1885883a 	add	r2,r3,r2
  80febc:	e0bff715 	stw	r2,-36(fp)
  80fec0:	e0fff717 	ldw	r3,-36(fp)
  80fec4:	e0bff917 	ldw	r2,-28(fp)
  80fec8:	18bfe416 	blt	r3,r2,80fe5c <__alt_mem_epcs_flash_controller_0+0xff806e5c>
  80fecc:	e0bff417 	ldw	r2,-48(fp)
  80fed0:	10800044 	addi	r2,r2,1
  80fed4:	e0bff415 	stw	r2,-48(fp)
  80fed8:	e0fff417 	ldw	r3,-48(fp)
  80fedc:	e0bffc17 	ldw	r2,-16(fp)
  80fee0:	18bfd116 	blt	r3,r2,80fe28 <__alt_mem_epcs_flash_controller_0+0xff806e28>
  80fee4:	e0bffd17 	ldw	r2,-12(fp)
  80fee8:	e0bff615 	stw	r2,-40(fp)
  80feec:	e0bff317 	ldw	r2,-52(fp)
  80fef0:	10800044 	addi	r2,r2,1
  80fef4:	e0bff315 	stw	r2,-52(fp)
  80fef8:	e0bfff17 	ldw	r2,-4(fp)
  80fefc:	10801e17 	ldw	r2,120(r2)
  80ff00:	e0fff317 	ldw	r3,-52(fp)
  80ff04:	18bfba16 	blt	r3,r2,80fdf0 <__alt_mem_epcs_flash_controller_0+0xff806df0>
  80ff08:	e0bff817 	ldw	r2,-32(fp)
  80ff0c:	e0fffb17 	ldw	r3,-20(fp)
  80ff10:	10c00415 	stw	r3,16(r2)
  80ff14:	e0bff817 	ldw	r2,-32(fp)
  80ff18:	e0fff917 	ldw	r3,-28(fp)
  80ff1c:	10c00515 	stw	r3,20(r2)
  80ff20:	0001883a 	nop
  80ff24:	e037883a 	mov	sp,fp
  80ff28:	dfc00117 	ldw	ra,4(sp)
  80ff2c:	df000017 	ldw	fp,0(sp)
  80ff30:	dec00204 	addi	sp,sp,8
  80ff34:	f800283a 	ret

0080ff38 <create_colorindex>:
  80ff38:	defff304 	addi	sp,sp,-52
  80ff3c:	dfc00c15 	stw	ra,48(sp)
  80ff40:	df000b15 	stw	fp,44(sp)
  80ff44:	dc000a15 	stw	r16,40(sp)
  80ff48:	df000b04 	addi	fp,sp,44
  80ff4c:	e13ffe15 	stw	r4,-8(fp)
  80ff50:	e0bffe17 	ldw	r2,-8(fp)
  80ff54:	10807917 	ldw	r2,484(r2)
  80ff58:	e0bffb15 	stw	r2,-20(fp)
  80ff5c:	e0bffe17 	ldw	r2,-8(fp)
  80ff60:	10801617 	ldw	r2,88(r2)
  80ff64:	10800058 	cmpnei	r2,r2,1
  80ff68:	1000061e 	bne	r2,zero,80ff84 <create_colorindex+0x4c>
  80ff6c:	00807f84 	movi	r2,510
  80ff70:	e0bffa15 	stw	r2,-24(fp)
  80ff74:	e0bffb17 	ldw	r2,-20(fp)
  80ff78:	00c00044 	movi	r3,1
  80ff7c:	10c00715 	stw	r3,28(r2)
  80ff80:	00000306 	br	80ff90 <create_colorindex+0x58>
  80ff84:	e03ffa15 	stw	zero,-24(fp)
  80ff88:	e0bffb17 	ldw	r2,-20(fp)
  80ff8c:	10000715 	stw	zero,28(r2)
  80ff90:	e0bffe17 	ldw	r2,-8(fp)
  80ff94:	10800117 	ldw	r2,4(r2)
  80ff98:	10800217 	ldw	r2,8(r2)
  80ff9c:	e0fffa17 	ldw	r3,-24(fp)
  80ffa0:	18c04004 	addi	r3,r3,256
  80ffa4:	1809883a 	mov	r4,r3
  80ffa8:	e0fffe17 	ldw	r3,-8(fp)
  80ffac:	18c01e17 	ldw	r3,120(r3)
  80ffb0:	180f883a 	mov	r7,r3
  80ffb4:	200d883a 	mov	r6,r4
  80ffb8:	01400044 	movi	r5,1
  80ffbc:	e13ffe17 	ldw	r4,-8(fp)
  80ffc0:	103ee83a 	callr	r2
  80ffc4:	1007883a 	mov	r3,r2
  80ffc8:	e0bffb17 	ldw	r2,-20(fp)
  80ffcc:	10c00615 	stw	r3,24(r2)
  80ffd0:	e0bffb17 	ldw	r2,-20(fp)
  80ffd4:	10800517 	ldw	r2,20(r2)
  80ffd8:	e0bff815 	stw	r2,-32(fp)
  80ffdc:	e03ff515 	stw	zero,-44(fp)
  80ffe0:	00006c06 	br	810194 <create_colorindex+0x25c>
  80ffe4:	e0fffb17 	ldw	r3,-20(fp)
  80ffe8:	e0bff517 	ldw	r2,-44(fp)
  80ffec:	10800204 	addi	r2,r2,8
  80fff0:	1085883a 	add	r2,r2,r2
  80fff4:	1085883a 	add	r2,r2,r2
  80fff8:	1885883a 	add	r2,r3,r2
  80fffc:	10800017 	ldw	r2,0(r2)
  810000:	e0bffc15 	stw	r2,-16(fp)
  810004:	e17ffc17 	ldw	r5,-16(fp)
  810008:	e13ff817 	ldw	r4,-32(fp)
  81000c:	08300340 	call	830034 <__divsi3>
  810010:	e0bff815 	stw	r2,-32(fp)
  810014:	e0bffa17 	ldw	r2,-24(fp)
  810018:	10000f26 	beq	r2,zero,810058 <create_colorindex+0x120>
  81001c:	e0bffb17 	ldw	r2,-20(fp)
  810020:	10c00617 	ldw	r3,24(r2)
  810024:	e0bff517 	ldw	r2,-44(fp)
  810028:	1085883a 	add	r2,r2,r2
  81002c:	1085883a 	add	r2,r2,r2
  810030:	1887883a 	add	r3,r3,r2
  810034:	e0bffb17 	ldw	r2,-20(fp)
  810038:	11000617 	ldw	r4,24(r2)
  81003c:	e0bff517 	ldw	r2,-44(fp)
  810040:	1085883a 	add	r2,r2,r2
  810044:	1085883a 	add	r2,r2,r2
  810048:	2085883a 	add	r2,r4,r2
  81004c:	10800017 	ldw	r2,0(r2)
  810050:	10803fc4 	addi	r2,r2,255
  810054:	18800015 	stw	r2,0(r3)
  810058:	e0bffb17 	ldw	r2,-20(fp)
  81005c:	10c00617 	ldw	r3,24(r2)
  810060:	e0bff517 	ldw	r2,-44(fp)
  810064:	1085883a 	add	r2,r2,r2
  810068:	1085883a 	add	r2,r2,r2
  81006c:	1885883a 	add	r2,r3,r2
  810070:	10800017 	ldw	r2,0(r2)
  810074:	e0bffd15 	stw	r2,-12(fp)
  810078:	e03ff915 	stw	zero,-28(fp)
  81007c:	e0bffc17 	ldw	r2,-16(fp)
  810080:	10bfffc4 	addi	r2,r2,-1
  810084:	100f883a 	mov	r7,r2
  810088:	000d883a 	mov	r6,zero
  81008c:	e17ff517 	ldw	r5,-44(fp)
  810090:	e13ffe17 	ldw	r4,-8(fp)
  810094:	080fc4c0 	call	80fc4c <largest_input_value>
  810098:	e0bff715 	stw	r2,-36(fp)
  81009c:	e03ff615 	stw	zero,-40(fp)
  8100a0:	00001b06 	br	810110 <create_colorindex+0x1d8>
  8100a4:	e0bff917 	ldw	r2,-28(fp)
  8100a8:	10800044 	addi	r2,r2,1
  8100ac:	e0bff915 	stw	r2,-28(fp)
  8100b0:	e0bffc17 	ldw	r2,-16(fp)
  8100b4:	10bfffc4 	addi	r2,r2,-1
  8100b8:	100f883a 	mov	r7,r2
  8100bc:	e1bff917 	ldw	r6,-28(fp)
  8100c0:	e17ff517 	ldw	r5,-44(fp)
  8100c4:	e13ffe17 	ldw	r4,-8(fp)
  8100c8:	080fc4c0 	call	80fc4c <largest_input_value>
  8100cc:	e0bff715 	stw	r2,-36(fp)
  8100d0:	e0bff617 	ldw	r2,-40(fp)
  8100d4:	e0fff717 	ldw	r3,-36(fp)
  8100d8:	18bff216 	blt	r3,r2,8100a4 <__alt_mem_epcs_flash_controller_0+0xff8070a4>
  8100dc:	e0bff617 	ldw	r2,-40(fp)
  8100e0:	e0fffd17 	ldw	r3,-12(fp)
  8100e4:	18a1883a 	add	r16,r3,r2
  8100e8:	e0bff917 	ldw	r2,-28(fp)
  8100ec:	1007883a 	mov	r3,r2
  8100f0:	e0bff817 	ldw	r2,-32(fp)
  8100f4:	100b883a 	mov	r5,r2
  8100f8:	1809883a 	mov	r4,r3
  8100fc:	08301e80 	call	8301e8 <__mulsi3>
  810100:	80800005 	stb	r2,0(r16)
  810104:	e0bff617 	ldw	r2,-40(fp)
  810108:	10800044 	addi	r2,r2,1
  81010c:	e0bff615 	stw	r2,-40(fp)
  810110:	e0bff617 	ldw	r2,-40(fp)
  810114:	10804010 	cmplti	r2,r2,256
  810118:	103fed1e 	bne	r2,zero,8100d0 <__alt_mem_epcs_flash_controller_0+0xff8070d0>
  81011c:	e0bffa17 	ldw	r2,-24(fp)
  810120:	10001926 	beq	r2,zero,810188 <create_colorindex+0x250>
  810124:	00800044 	movi	r2,1
  810128:	e0bff615 	stw	r2,-40(fp)
  81012c:	00001306 	br	81017c <create_colorindex+0x244>
  810130:	e0bff617 	ldw	r2,-40(fp)
  810134:	0085c83a 	sub	r2,zero,r2
  810138:	1007883a 	mov	r3,r2
  81013c:	e0bffd17 	ldw	r2,-12(fp)
  810140:	10c5883a 	add	r2,r2,r3
  810144:	e0fffd17 	ldw	r3,-12(fp)
  810148:	18c00003 	ldbu	r3,0(r3)
  81014c:	10c00005 	stb	r3,0(r2)
  810150:	e0bff617 	ldw	r2,-40(fp)
  810154:	10803fc4 	addi	r2,r2,255
  810158:	1007883a 	mov	r3,r2
  81015c:	e0bffd17 	ldw	r2,-12(fp)
  810160:	10c5883a 	add	r2,r2,r3
  810164:	e0fffd17 	ldw	r3,-12(fp)
  810168:	18c03fc3 	ldbu	r3,255(r3)
  81016c:	10c00005 	stb	r3,0(r2)
  810170:	e0bff617 	ldw	r2,-40(fp)
  810174:	10800044 	addi	r2,r2,1
  810178:	e0bff615 	stw	r2,-40(fp)
  81017c:	e0bff617 	ldw	r2,-40(fp)
  810180:	10804010 	cmplti	r2,r2,256
  810184:	103fea1e 	bne	r2,zero,810130 <__alt_mem_epcs_flash_controller_0+0xff807130>
  810188:	e0bff517 	ldw	r2,-44(fp)
  81018c:	10800044 	addi	r2,r2,1
  810190:	e0bff515 	stw	r2,-44(fp)
  810194:	e0bffe17 	ldw	r2,-8(fp)
  810198:	10801e17 	ldw	r2,120(r2)
  81019c:	e0fff517 	ldw	r3,-44(fp)
  8101a0:	18bf9016 	blt	r3,r2,80ffe4 <__alt_mem_epcs_flash_controller_0+0xff806fe4>
  8101a4:	0001883a 	nop
  8101a8:	e6ffff04 	addi	sp,fp,-4
  8101ac:	dfc00217 	ldw	ra,8(sp)
  8101b0:	df000117 	ldw	fp,4(sp)
  8101b4:	dc000017 	ldw	r16,0(sp)
  8101b8:	dec00304 	addi	sp,sp,12
  8101bc:	f800283a 	ret

008101c0 <make_odither_array>:
  8101c0:	defff604 	addi	sp,sp,-40
  8101c4:	dfc00915 	stw	ra,36(sp)
  8101c8:	df000815 	stw	fp,32(sp)
  8101cc:	dc000715 	stw	r16,28(sp)
  8101d0:	df000804 	addi	fp,sp,32
  8101d4:	e13ffd15 	stw	r4,-12(fp)
  8101d8:	e17ffe15 	stw	r5,-8(fp)
  8101dc:	e0bffd17 	ldw	r2,-12(fp)
  8101e0:	10800117 	ldw	r2,4(r2)
  8101e4:	10800017 	ldw	r2,0(r2)
  8101e8:	01810004 	movi	r6,1024
  8101ec:	01400044 	movi	r5,1
  8101f0:	e13ffd17 	ldw	r4,-12(fp)
  8101f4:	103ee83a 	callr	r2
  8101f8:	e0bffa15 	stw	r2,-24(fp)
  8101fc:	e0bffe17 	ldw	r2,-8(fp)
  810200:	10bfffc4 	addi	r2,r2,-1
  810204:	1004927a 	slli	r2,r2,9
  810208:	e0bffb15 	stw	r2,-20(fp)
  81020c:	e03ff815 	stw	zero,-32(fp)
  810210:	00003106 	br	8102d8 <make_odither_array+0x118>
  810214:	e03ff915 	stw	zero,-28(fp)
  810218:	00002906 	br	8102c0 <make_odither_array+0x100>
  81021c:	008021b4 	movhi	r2,134
  810220:	10a2b804 	addi	r2,r2,-29984
  810224:	e0fff817 	ldw	r3,-32(fp)
  810228:	1806913a 	slli	r3,r3,4
  81022c:	10c7883a 	add	r3,r2,r3
  810230:	e0bff917 	ldw	r2,-28(fp)
  810234:	1885883a 	add	r2,r3,r2
  810238:	10800003 	ldbu	r2,0(r2)
  81023c:	10803fcc 	andi	r2,r2,255
  810240:	017f8084 	movi	r5,-510
  810244:	1009883a 	mov	r4,r2
  810248:	08301e80 	call	8301e8 <__mulsi3>
  81024c:	1007883a 	mov	r3,r2
  810250:	00bf8054 	movui	r2,65025
  810254:	1885883a 	add	r2,r3,r2
  810258:	e0bffc15 	stw	r2,-16(fp)
  81025c:	e0bff817 	ldw	r2,-32(fp)
  810260:	100491ba 	slli	r2,r2,6
  810264:	e0fffa17 	ldw	r3,-24(fp)
  810268:	18a1883a 	add	r16,r3,r2
  81026c:	e0bffc17 	ldw	r2,-16(fp)
  810270:	1000070e 	bge	r2,zero,810290 <make_odither_array+0xd0>
  810274:	e0bffc17 	ldw	r2,-16(fp)
  810278:	0085c83a 	sub	r2,zero,r2
  81027c:	e17ffb17 	ldw	r5,-20(fp)
  810280:	1009883a 	mov	r4,r2
  810284:	08300340 	call	830034 <__divsi3>
  810288:	0087c83a 	sub	r3,zero,r2
  81028c:	00000406 	br	8102a0 <make_odither_array+0xe0>
  810290:	e17ffb17 	ldw	r5,-20(fp)
  810294:	e13ffc17 	ldw	r4,-16(fp)
  810298:	08300340 	call	830034 <__divsi3>
  81029c:	1007883a 	mov	r3,r2
  8102a0:	e0bff917 	ldw	r2,-28(fp)
  8102a4:	1085883a 	add	r2,r2,r2
  8102a8:	1085883a 	add	r2,r2,r2
  8102ac:	8085883a 	add	r2,r16,r2
  8102b0:	10c00015 	stw	r3,0(r2)
  8102b4:	e0bff917 	ldw	r2,-28(fp)
  8102b8:	10800044 	addi	r2,r2,1
  8102bc:	e0bff915 	stw	r2,-28(fp)
  8102c0:	e0bff917 	ldw	r2,-28(fp)
  8102c4:	10800410 	cmplti	r2,r2,16
  8102c8:	103fd41e 	bne	r2,zero,81021c <__alt_mem_epcs_flash_controller_0+0xff80721c>
  8102cc:	e0bff817 	ldw	r2,-32(fp)
  8102d0:	10800044 	addi	r2,r2,1
  8102d4:	e0bff815 	stw	r2,-32(fp)
  8102d8:	e0bff817 	ldw	r2,-32(fp)
  8102dc:	10800410 	cmplti	r2,r2,16
  8102e0:	103fcc1e 	bne	r2,zero,810214 <__alt_mem_epcs_flash_controller_0+0xff807214>
  8102e4:	e0bffa17 	ldw	r2,-24(fp)
  8102e8:	e6ffff04 	addi	sp,fp,-4
  8102ec:	dfc00217 	ldw	ra,8(sp)
  8102f0:	df000117 	ldw	fp,4(sp)
  8102f4:	dc000017 	ldw	r16,0(sp)
  8102f8:	dec00304 	addi	sp,sp,12
  8102fc:	f800283a 	ret

00810300 <create_odither_tables>:
  810300:	defff804 	addi	sp,sp,-32
  810304:	dfc00715 	stw	ra,28(sp)
  810308:	df000615 	stw	fp,24(sp)
  81030c:	df000604 	addi	fp,sp,24
  810310:	e13fff15 	stw	r4,-4(fp)
  810314:	e0bfff17 	ldw	r2,-4(fp)
  810318:	10807917 	ldw	r2,484(r2)
  81031c:	e0bffd15 	stw	r2,-12(fp)
  810320:	e03ffb15 	stw	zero,-20(fp)
  810324:	00003406 	br	8103f8 <create_odither_tables+0xf8>
  810328:	e0fffd17 	ldw	r3,-12(fp)
  81032c:	e0bffb17 	ldw	r2,-20(fp)
  810330:	10800204 	addi	r2,r2,8
  810334:	1085883a 	add	r2,r2,r2
  810338:	1085883a 	add	r2,r2,r2
  81033c:	1885883a 	add	r2,r3,r2
  810340:	10800017 	ldw	r2,0(r2)
  810344:	e0bffe15 	stw	r2,-8(fp)
  810348:	e03ffa15 	stw	zero,-24(fp)
  81034c:	e03ffc15 	stw	zero,-16(fp)
  810350:	00001506 	br	8103a8 <create_odither_tables+0xa8>
  810354:	e0fffd17 	ldw	r3,-12(fp)
  810358:	e0bffc17 	ldw	r2,-16(fp)
  81035c:	10800204 	addi	r2,r2,8
  810360:	1085883a 	add	r2,r2,r2
  810364:	1085883a 	add	r2,r2,r2
  810368:	1885883a 	add	r2,r3,r2
  81036c:	10c00017 	ldw	r3,0(r2)
  810370:	e0bffe17 	ldw	r2,-8(fp)
  810374:	1880091e 	bne	r3,r2,81039c <create_odither_tables+0x9c>
  810378:	e0fffd17 	ldw	r3,-12(fp)
  81037c:	e0bffc17 	ldw	r2,-16(fp)
  810380:	10800344 	addi	r2,r2,13
  810384:	1085883a 	add	r2,r2,r2
  810388:	1085883a 	add	r2,r2,r2
  81038c:	1885883a 	add	r2,r3,r2
  810390:	10800017 	ldw	r2,0(r2)
  810394:	e0bffa15 	stw	r2,-24(fp)
  810398:	00000606 	br	8103b4 <create_odither_tables+0xb4>
  81039c:	e0bffc17 	ldw	r2,-16(fp)
  8103a0:	10800044 	addi	r2,r2,1
  8103a4:	e0bffc15 	stw	r2,-16(fp)
  8103a8:	e0fffc17 	ldw	r3,-16(fp)
  8103ac:	e0bffb17 	ldw	r2,-20(fp)
  8103b0:	18bfe816 	blt	r3,r2,810354 <__alt_mem_epcs_flash_controller_0+0xff807354>
  8103b4:	e0bffa17 	ldw	r2,-24(fp)
  8103b8:	1000041e 	bne	r2,zero,8103cc <create_odither_tables+0xcc>
  8103bc:	e17ffe17 	ldw	r5,-8(fp)
  8103c0:	e13fff17 	ldw	r4,-4(fp)
  8103c4:	08101c00 	call	8101c0 <make_odither_array>
  8103c8:	e0bffa15 	stw	r2,-24(fp)
  8103cc:	e0fffd17 	ldw	r3,-12(fp)
  8103d0:	e0bffb17 	ldw	r2,-20(fp)
  8103d4:	10800344 	addi	r2,r2,13
  8103d8:	1085883a 	add	r2,r2,r2
  8103dc:	1085883a 	add	r2,r2,r2
  8103e0:	1885883a 	add	r2,r3,r2
  8103e4:	e0fffa17 	ldw	r3,-24(fp)
  8103e8:	10c00015 	stw	r3,0(r2)
  8103ec:	e0bffb17 	ldw	r2,-20(fp)
  8103f0:	10800044 	addi	r2,r2,1
  8103f4:	e0bffb15 	stw	r2,-20(fp)
  8103f8:	e0bfff17 	ldw	r2,-4(fp)
  8103fc:	10801e17 	ldw	r2,120(r2)
  810400:	e0fffb17 	ldw	r3,-20(fp)
  810404:	18bfc816 	blt	r3,r2,810328 <__alt_mem_epcs_flash_controller_0+0xff807328>
  810408:	0001883a 	nop
  81040c:	e037883a 	mov	sp,fp
  810410:	dfc00117 	ldw	ra,4(sp)
  810414:	df000017 	ldw	fp,0(sp)
  810418:	dec00204 	addi	sp,sp,8
  81041c:	f800283a 	ret

00810420 <color_quantize>:
  810420:	defff104 	addi	sp,sp,-60
  810424:	df000e15 	stw	fp,56(sp)
  810428:	dd000d15 	stw	r20,52(sp)
  81042c:	dcc00c15 	stw	r19,48(sp)
  810430:	dc800b15 	stw	r18,44(sp)
  810434:	dc400a15 	stw	r17,40(sp)
  810438:	dc000915 	stw	r16,36(sp)
  81043c:	df000e04 	addi	fp,sp,56
  810440:	e13ff715 	stw	r4,-36(fp)
  810444:	e17ff815 	stw	r5,-32(fp)
  810448:	e1bff915 	stw	r6,-28(fp)
  81044c:	e1fffa15 	stw	r7,-24(fp)
  810450:	e0bff717 	ldw	r2,-36(fp)
  810454:	10807917 	ldw	r2,484(r2)
  810458:	e0bff415 	stw	r2,-48(fp)
  81045c:	e0bff417 	ldw	r2,-48(fp)
  810460:	10800617 	ldw	r2,24(r2)
  810464:	e0bff515 	stw	r2,-44(fp)
  810468:	e0bff717 	ldw	r2,-36(fp)
  81046c:	10801c17 	ldw	r2,112(r2)
  810470:	e0bff615 	stw	r2,-40(fp)
  810474:	e0bff717 	ldw	r2,-36(fp)
  810478:	15001e17 	ldw	r20,120(r2)
  81047c:	e03ff215 	stw	zero,-56(fp)
  810480:	00003106 	br	810548 <color_quantize+0x128>
  810484:	e0bff217 	ldw	r2,-56(fp)
  810488:	1085883a 	add	r2,r2,r2
  81048c:	1085883a 	add	r2,r2,r2
  810490:	1007883a 	mov	r3,r2
  810494:	e0bff817 	ldw	r2,-32(fp)
  810498:	10c5883a 	add	r2,r2,r3
  81049c:	14800017 	ldw	r18,0(r2)
  8104a0:	e0bff217 	ldw	r2,-56(fp)
  8104a4:	1085883a 	add	r2,r2,r2
  8104a8:	1085883a 	add	r2,r2,r2
  8104ac:	1007883a 	mov	r3,r2
  8104b0:	e0bff917 	ldw	r2,-28(fp)
  8104b4:	10c5883a 	add	r2,r2,r3
  8104b8:	14c00017 	ldw	r19,0(r2)
  8104bc:	e0bff617 	ldw	r2,-40(fp)
  8104c0:	e0bff315 	stw	r2,-52(fp)
  8104c4:	00001b06 	br	810534 <color_quantize+0x114>
  8104c8:	0023883a 	mov	r17,zero
  8104cc:	0021883a 	mov	r16,zero
  8104d0:	00001006 	br	810514 <color_quantize+0xf4>
  8104d4:	8005883a 	mov	r2,r16
  8104d8:	1085883a 	add	r2,r2,r2
  8104dc:	1085883a 	add	r2,r2,r2
  8104e0:	1007883a 	mov	r3,r2
  8104e4:	e0bff517 	ldw	r2,-44(fp)
  8104e8:	10c5883a 	add	r2,r2,r3
  8104ec:	10c00017 	ldw	r3,0(r2)
  8104f0:	9005883a 	mov	r2,r18
  8104f4:	14800044 	addi	r18,r2,1
  8104f8:	10800003 	ldbu	r2,0(r2)
  8104fc:	10803fcc 	andi	r2,r2,255
  810500:	1885883a 	add	r2,r3,r2
  810504:	10800003 	ldbu	r2,0(r2)
  810508:	10803fcc 	andi	r2,r2,255
  81050c:	88a3883a 	add	r17,r17,r2
  810510:	84000044 	addi	r16,r16,1
  810514:	853fef16 	blt	r16,r20,8104d4 <__alt_mem_epcs_flash_controller_0+0xff8074d4>
  810518:	9805883a 	mov	r2,r19
  81051c:	14c00044 	addi	r19,r2,1
  810520:	8807883a 	mov	r3,r17
  810524:	10c00005 	stb	r3,0(r2)
  810528:	e0bff317 	ldw	r2,-52(fp)
  81052c:	10bfffc4 	addi	r2,r2,-1
  810530:	e0bff315 	stw	r2,-52(fp)
  810534:	e0bff317 	ldw	r2,-52(fp)
  810538:	103fe31e 	bne	r2,zero,8104c8 <__alt_mem_epcs_flash_controller_0+0xff8074c8>
  81053c:	e0bff217 	ldw	r2,-56(fp)
  810540:	10800044 	addi	r2,r2,1
  810544:	e0bff215 	stw	r2,-56(fp)
  810548:	e0fff217 	ldw	r3,-56(fp)
  81054c:	e0bffa17 	ldw	r2,-24(fp)
  810550:	18bfcc16 	blt	r3,r2,810484 <__alt_mem_epcs_flash_controller_0+0xff807484>
  810554:	0001883a 	nop
  810558:	e6fffb04 	addi	sp,fp,-20
  81055c:	df000517 	ldw	fp,20(sp)
  810560:	dd000417 	ldw	r20,16(sp)
  810564:	dcc00317 	ldw	r19,12(sp)
  810568:	dc800217 	ldw	r18,8(sp)
  81056c:	dc400117 	ldw	r17,4(sp)
  810570:	dc000017 	ldw	r16,0(sp)
  810574:	dec00604 	addi	sp,sp,24
  810578:	f800283a 	ret

0081057c <color_quantize3>:
  81057c:	defff104 	addi	sp,sp,-60
  810580:	df000e15 	stw	fp,56(sp)
  810584:	dc800d15 	stw	r18,52(sp)
  810588:	dc400c15 	stw	r17,48(sp)
  81058c:	dc000b15 	stw	r16,44(sp)
  810590:	df000e04 	addi	fp,sp,56
  810594:	e13ff915 	stw	r4,-28(fp)
  810598:	e17ffa15 	stw	r5,-24(fp)
  81059c:	e1bffb15 	stw	r6,-20(fp)
  8105a0:	e1fffc15 	stw	r7,-16(fp)
  8105a4:	e0bff917 	ldw	r2,-28(fp)
  8105a8:	10807917 	ldw	r2,484(r2)
  8105ac:	e0bff415 	stw	r2,-48(fp)
  8105b0:	e0bff417 	ldw	r2,-48(fp)
  8105b4:	10800617 	ldw	r2,24(r2)
  8105b8:	10800017 	ldw	r2,0(r2)
  8105bc:	e0bff515 	stw	r2,-44(fp)
  8105c0:	e0bff417 	ldw	r2,-48(fp)
  8105c4:	10800617 	ldw	r2,24(r2)
  8105c8:	10800117 	ldw	r2,4(r2)
  8105cc:	e0bff615 	stw	r2,-40(fp)
  8105d0:	e0bff417 	ldw	r2,-48(fp)
  8105d4:	10800617 	ldw	r2,24(r2)
  8105d8:	10800217 	ldw	r2,8(r2)
  8105dc:	e0bff715 	stw	r2,-36(fp)
  8105e0:	e0bff917 	ldw	r2,-28(fp)
  8105e4:	10801c17 	ldw	r2,112(r2)
  8105e8:	e0bff815 	stw	r2,-32(fp)
  8105ec:	e03ff215 	stw	zero,-56(fp)
  8105f0:	00003706 	br	8106d0 <color_quantize3+0x154>
  8105f4:	e0bff217 	ldw	r2,-56(fp)
  8105f8:	1085883a 	add	r2,r2,r2
  8105fc:	1085883a 	add	r2,r2,r2
  810600:	1007883a 	mov	r3,r2
  810604:	e0bffa17 	ldw	r2,-24(fp)
  810608:	10c5883a 	add	r2,r2,r3
  81060c:	14400017 	ldw	r17,0(r2)
  810610:	e0bff217 	ldw	r2,-56(fp)
  810614:	1085883a 	add	r2,r2,r2
  810618:	1085883a 	add	r2,r2,r2
  81061c:	1007883a 	mov	r3,r2
  810620:	e0bffb17 	ldw	r2,-20(fp)
  810624:	10c5883a 	add	r2,r2,r3
  810628:	14800017 	ldw	r18,0(r2)
  81062c:	e0bff817 	ldw	r2,-32(fp)
  810630:	e0bff315 	stw	r2,-52(fp)
  810634:	00002106 	br	8106bc <color_quantize3+0x140>
  810638:	8805883a 	mov	r2,r17
  81063c:	14400044 	addi	r17,r2,1
  810640:	10800003 	ldbu	r2,0(r2)
  810644:	10803fcc 	andi	r2,r2,255
  810648:	e0fff517 	ldw	r3,-44(fp)
  81064c:	1885883a 	add	r2,r3,r2
  810650:	10800003 	ldbu	r2,0(r2)
  810654:	14003fcc 	andi	r16,r2,255
  810658:	8805883a 	mov	r2,r17
  81065c:	14400044 	addi	r17,r2,1
  810660:	10800003 	ldbu	r2,0(r2)
  810664:	10803fcc 	andi	r2,r2,255
  810668:	e0fff617 	ldw	r3,-40(fp)
  81066c:	1885883a 	add	r2,r3,r2
  810670:	10800003 	ldbu	r2,0(r2)
  810674:	10803fcc 	andi	r2,r2,255
  810678:	80a1883a 	add	r16,r16,r2
  81067c:	8805883a 	mov	r2,r17
  810680:	14400044 	addi	r17,r2,1
  810684:	10800003 	ldbu	r2,0(r2)
  810688:	10803fcc 	andi	r2,r2,255
  81068c:	e0fff717 	ldw	r3,-36(fp)
  810690:	1885883a 	add	r2,r3,r2
  810694:	10800003 	ldbu	r2,0(r2)
  810698:	10803fcc 	andi	r2,r2,255
  81069c:	80a1883a 	add	r16,r16,r2
  8106a0:	9005883a 	mov	r2,r18
  8106a4:	14800044 	addi	r18,r2,1
  8106a8:	8007883a 	mov	r3,r16
  8106ac:	10c00005 	stb	r3,0(r2)
  8106b0:	e0bff317 	ldw	r2,-52(fp)
  8106b4:	10bfffc4 	addi	r2,r2,-1
  8106b8:	e0bff315 	stw	r2,-52(fp)
  8106bc:	e0bff317 	ldw	r2,-52(fp)
  8106c0:	103fdd1e 	bne	r2,zero,810638 <__alt_mem_epcs_flash_controller_0+0xff807638>
  8106c4:	e0bff217 	ldw	r2,-56(fp)
  8106c8:	10800044 	addi	r2,r2,1
  8106cc:	e0bff215 	stw	r2,-56(fp)
  8106d0:	e0fff217 	ldw	r3,-56(fp)
  8106d4:	e0bffc17 	ldw	r2,-16(fp)
  8106d8:	18bfc616 	blt	r3,r2,8105f4 <__alt_mem_epcs_flash_controller_0+0xff8075f4>
  8106dc:	0001883a 	nop
  8106e0:	e6fffd04 	addi	sp,fp,-12
  8106e4:	df000317 	ldw	fp,12(sp)
  8106e8:	dc800217 	ldw	r18,8(sp)
  8106ec:	dc400117 	ldw	r17,4(sp)
  8106f0:	dc000017 	ldw	r16,0(sp)
  8106f4:	dec00404 	addi	sp,sp,16
  8106f8:	f800283a 	ret

008106fc <quantize_ord_dither>:
  8106fc:	deffee04 	addi	sp,sp,-72
  810700:	dfc01115 	stw	ra,68(sp)
  810704:	df001015 	stw	fp,64(sp)
  810708:	dc400f15 	stw	r17,60(sp)
  81070c:	dc000e15 	stw	r16,56(sp)
  810710:	df001004 	addi	fp,sp,64
  810714:	e13ffa15 	stw	r4,-24(fp)
  810718:	e17ffb15 	stw	r5,-20(fp)
  81071c:	e1bffc15 	stw	r6,-16(fp)
  810720:	e1fffd15 	stw	r7,-12(fp)
  810724:	e0bffa17 	ldw	r2,-24(fp)
  810728:	10807917 	ldw	r2,484(r2)
  81072c:	e0bff415 	stw	r2,-48(fp)
  810730:	e0bffa17 	ldw	r2,-24(fp)
  810734:	10801e17 	ldw	r2,120(r2)
  810738:	e0bff515 	stw	r2,-44(fp)
  81073c:	e0bffa17 	ldw	r2,-24(fp)
  810740:	10801c17 	ldw	r2,112(r2)
  810744:	e0bff615 	stw	r2,-40(fp)
  810748:	e03ff215 	stw	zero,-56(fp)
  81074c:	00006406 	br	8108e0 <quantize_ord_dither+0x1e4>
  810750:	e0bff217 	ldw	r2,-56(fp)
  810754:	1085883a 	add	r2,r2,r2
  810758:	1085883a 	add	r2,r2,r2
  81075c:	1007883a 	mov	r3,r2
  810760:	e0bffc17 	ldw	r2,-16(fp)
  810764:	10c5883a 	add	r2,r2,r3
  810768:	10800017 	ldw	r2,0(r2)
  81076c:	e1bff617 	ldw	r6,-40(fp)
  810770:	000b883a 	mov	r5,zero
  810774:	1009883a 	mov	r4,r2
  810778:	0833d940 	call	833d94 <memset>
  81077c:	e0bff417 	ldw	r2,-48(fp)
  810780:	10800c17 	ldw	r2,48(r2)
  810784:	e0bff715 	stw	r2,-36(fp)
  810788:	e03ff115 	stw	zero,-60(fp)
  81078c:	00004706 	br	8108ac <quantize_ord_dither+0x1b0>
  810790:	e0bff217 	ldw	r2,-56(fp)
  810794:	1085883a 	add	r2,r2,r2
  810798:	1085883a 	add	r2,r2,r2
  81079c:	1007883a 	mov	r3,r2
  8107a0:	e0bffb17 	ldw	r2,-20(fp)
  8107a4:	10c5883a 	add	r2,r2,r3
  8107a8:	10c00017 	ldw	r3,0(r2)
  8107ac:	e0bff117 	ldw	r2,-60(fp)
  8107b0:	18a3883a 	add	r17,r3,r2
  8107b4:	e0bff217 	ldw	r2,-56(fp)
  8107b8:	1085883a 	add	r2,r2,r2
  8107bc:	1085883a 	add	r2,r2,r2
  8107c0:	1007883a 	mov	r3,r2
  8107c4:	e0bffc17 	ldw	r2,-16(fp)
  8107c8:	10c5883a 	add	r2,r2,r3
  8107cc:	14000017 	ldw	r16,0(r2)
  8107d0:	e0bff417 	ldw	r2,-48(fp)
  8107d4:	10c00617 	ldw	r3,24(r2)
  8107d8:	e0bff117 	ldw	r2,-60(fp)
  8107dc:	1085883a 	add	r2,r2,r2
  8107e0:	1085883a 	add	r2,r2,r2
  8107e4:	1885883a 	add	r2,r3,r2
  8107e8:	10800017 	ldw	r2,0(r2)
  8107ec:	e0bff815 	stw	r2,-32(fp)
  8107f0:	e0fff417 	ldw	r3,-48(fp)
  8107f4:	e0bff117 	ldw	r2,-60(fp)
  8107f8:	10800344 	addi	r2,r2,13
  8107fc:	1085883a 	add	r2,r2,r2
  810800:	1085883a 	add	r2,r2,r2
  810804:	1885883a 	add	r2,r3,r2
  810808:	10c00017 	ldw	r3,0(r2)
  81080c:	e0bff717 	ldw	r2,-36(fp)
  810810:	100491ba 	slli	r2,r2,6
  810814:	1885883a 	add	r2,r3,r2
  810818:	e0bff915 	stw	r2,-28(fp)
  81081c:	e03ff015 	stw	zero,-64(fp)
  810820:	e0bff617 	ldw	r2,-40(fp)
  810824:	e0bff315 	stw	r2,-52(fp)
  810828:	00001b06 	br	810898 <quantize_ord_dither+0x19c>
  81082c:	80c00003 	ldbu	r3,0(r16)
  810830:	88800003 	ldbu	r2,0(r17)
  810834:	11003fcc 	andi	r4,r2,255
  810838:	e0bff017 	ldw	r2,-64(fp)
  81083c:	1085883a 	add	r2,r2,r2
  810840:	1085883a 	add	r2,r2,r2
  810844:	100b883a 	mov	r5,r2
  810848:	e0bff917 	ldw	r2,-28(fp)
  81084c:	1145883a 	add	r2,r2,r5
  810850:	10800017 	ldw	r2,0(r2)
  810854:	2085883a 	add	r2,r4,r2
  810858:	1009883a 	mov	r4,r2
  81085c:	e0bff817 	ldw	r2,-32(fp)
  810860:	1105883a 	add	r2,r2,r4
  810864:	10800003 	ldbu	r2,0(r2)
  810868:	1885883a 	add	r2,r3,r2
  81086c:	80800005 	stb	r2,0(r16)
  810870:	e0bff517 	ldw	r2,-44(fp)
  810874:	88a3883a 	add	r17,r17,r2
  810878:	84000044 	addi	r16,r16,1
  81087c:	e0bff017 	ldw	r2,-64(fp)
  810880:	10800044 	addi	r2,r2,1
  810884:	108003cc 	andi	r2,r2,15
  810888:	e0bff015 	stw	r2,-64(fp)
  81088c:	e0bff317 	ldw	r2,-52(fp)
  810890:	10bfffc4 	addi	r2,r2,-1
  810894:	e0bff315 	stw	r2,-52(fp)
  810898:	e0bff317 	ldw	r2,-52(fp)
  81089c:	103fe31e 	bne	r2,zero,81082c <__alt_mem_epcs_flash_controller_0+0xff80782c>
  8108a0:	e0bff117 	ldw	r2,-60(fp)
  8108a4:	10800044 	addi	r2,r2,1
  8108a8:	e0bff115 	stw	r2,-60(fp)
  8108ac:	e0fff117 	ldw	r3,-60(fp)
  8108b0:	e0bff517 	ldw	r2,-44(fp)
  8108b4:	18bfb616 	blt	r3,r2,810790 <__alt_mem_epcs_flash_controller_0+0xff807790>
  8108b8:	e0bff717 	ldw	r2,-36(fp)
  8108bc:	10800044 	addi	r2,r2,1
  8108c0:	108003cc 	andi	r2,r2,15
  8108c4:	e0bff715 	stw	r2,-36(fp)
  8108c8:	e0bff417 	ldw	r2,-48(fp)
  8108cc:	e0fff717 	ldw	r3,-36(fp)
  8108d0:	10c00c15 	stw	r3,48(r2)
  8108d4:	e0bff217 	ldw	r2,-56(fp)
  8108d8:	10800044 	addi	r2,r2,1
  8108dc:	e0bff215 	stw	r2,-56(fp)
  8108e0:	e0fff217 	ldw	r3,-56(fp)
  8108e4:	e0bffd17 	ldw	r2,-12(fp)
  8108e8:	18bf9916 	blt	r3,r2,810750 <__alt_mem_epcs_flash_controller_0+0xff807750>
  8108ec:	0001883a 	nop
  8108f0:	e6fffe04 	addi	sp,fp,-8
  8108f4:	dfc00317 	ldw	ra,12(sp)
  8108f8:	df000217 	ldw	fp,8(sp)
  8108fc:	dc400117 	ldw	r17,4(sp)
  810900:	dc000017 	ldw	r16,0(sp)
  810904:	dec00404 	addi	sp,sp,16
  810908:	f800283a 	ret

0081090c <quantize3_ord_dither>:
  81090c:	deffec04 	addi	sp,sp,-80
  810910:	df001315 	stw	fp,76(sp)
  810914:	dc801215 	stw	r18,72(sp)
  810918:	dc401115 	stw	r17,68(sp)
  81091c:	dc001015 	stw	r16,64(sp)
  810920:	df001304 	addi	fp,sp,76
  810924:	e13ff915 	stw	r4,-28(fp)
  810928:	e17ffa15 	stw	r5,-24(fp)
  81092c:	e1bffb15 	stw	r6,-20(fp)
  810930:	e1fffc15 	stw	r7,-16(fp)
  810934:	e0bff917 	ldw	r2,-28(fp)
  810938:	10807917 	ldw	r2,484(r2)
  81093c:	e0bff015 	stw	r2,-64(fp)
  810940:	e0bff017 	ldw	r2,-64(fp)
  810944:	10800617 	ldw	r2,24(r2)
  810948:	10800017 	ldw	r2,0(r2)
  81094c:	e0bff115 	stw	r2,-60(fp)
  810950:	e0bff017 	ldw	r2,-64(fp)
  810954:	10800617 	ldw	r2,24(r2)
  810958:	10800117 	ldw	r2,4(r2)
  81095c:	e0bff215 	stw	r2,-56(fp)
  810960:	e0bff017 	ldw	r2,-64(fp)
  810964:	10800617 	ldw	r2,24(r2)
  810968:	10800217 	ldw	r2,8(r2)
  81096c:	e0bff315 	stw	r2,-52(fp)
  810970:	e0bff917 	ldw	r2,-28(fp)
  810974:	10801c17 	ldw	r2,112(r2)
  810978:	e0bff415 	stw	r2,-48(fp)
  81097c:	e03fee15 	stw	zero,-72(fp)
  810980:	00007306 	br	810b50 <quantize3_ord_dither+0x244>
  810984:	e0bff017 	ldw	r2,-64(fp)
  810988:	10800c17 	ldw	r2,48(r2)
  81098c:	e0bff515 	stw	r2,-44(fp)
  810990:	e0bfee17 	ldw	r2,-72(fp)
  810994:	1085883a 	add	r2,r2,r2
  810998:	1085883a 	add	r2,r2,r2
  81099c:	1007883a 	mov	r3,r2
  8109a0:	e0bffa17 	ldw	r2,-24(fp)
  8109a4:	10c5883a 	add	r2,r2,r3
  8109a8:	14400017 	ldw	r17,0(r2)
  8109ac:	e0bfee17 	ldw	r2,-72(fp)
  8109b0:	1085883a 	add	r2,r2,r2
  8109b4:	1085883a 	add	r2,r2,r2
  8109b8:	1007883a 	mov	r3,r2
  8109bc:	e0bffb17 	ldw	r2,-20(fp)
  8109c0:	10c5883a 	add	r2,r2,r3
  8109c4:	14800017 	ldw	r18,0(r2)
  8109c8:	e0bff017 	ldw	r2,-64(fp)
  8109cc:	10c00d17 	ldw	r3,52(r2)
  8109d0:	e0bff517 	ldw	r2,-44(fp)
  8109d4:	100491ba 	slli	r2,r2,6
  8109d8:	1885883a 	add	r2,r3,r2
  8109dc:	e0bff615 	stw	r2,-40(fp)
  8109e0:	e0bff017 	ldw	r2,-64(fp)
  8109e4:	10c00e17 	ldw	r3,56(r2)
  8109e8:	e0bff517 	ldw	r2,-44(fp)
  8109ec:	100491ba 	slli	r2,r2,6
  8109f0:	1885883a 	add	r2,r3,r2
  8109f4:	e0bff715 	stw	r2,-36(fp)
  8109f8:	e0bff017 	ldw	r2,-64(fp)
  8109fc:	10c00f17 	ldw	r3,60(r2)
  810a00:	e0bff517 	ldw	r2,-44(fp)
  810a04:	100491ba 	slli	r2,r2,6
  810a08:	1885883a 	add	r2,r3,r2
  810a0c:	e0bff815 	stw	r2,-32(fp)
  810a10:	e03fed15 	stw	zero,-76(fp)
  810a14:	e0bff417 	ldw	r2,-48(fp)
  810a18:	e0bfef15 	stw	r2,-68(fp)
  810a1c:	00004006 	br	810b20 <quantize3_ord_dither+0x214>
  810a20:	8805883a 	mov	r2,r17
  810a24:	14400044 	addi	r17,r2,1
  810a28:	10800003 	ldbu	r2,0(r2)
  810a2c:	10c03fcc 	andi	r3,r2,255
  810a30:	e0bfed17 	ldw	r2,-76(fp)
  810a34:	1085883a 	add	r2,r2,r2
  810a38:	1085883a 	add	r2,r2,r2
  810a3c:	1009883a 	mov	r4,r2
  810a40:	e0bff617 	ldw	r2,-40(fp)
  810a44:	1105883a 	add	r2,r2,r4
  810a48:	10800017 	ldw	r2,0(r2)
  810a4c:	1885883a 	add	r2,r3,r2
  810a50:	1007883a 	mov	r3,r2
  810a54:	e0bff117 	ldw	r2,-60(fp)
  810a58:	10c5883a 	add	r2,r2,r3
  810a5c:	10800003 	ldbu	r2,0(r2)
  810a60:	14003fcc 	andi	r16,r2,255
  810a64:	8805883a 	mov	r2,r17
  810a68:	14400044 	addi	r17,r2,1
  810a6c:	10800003 	ldbu	r2,0(r2)
  810a70:	10c03fcc 	andi	r3,r2,255
  810a74:	e0bfed17 	ldw	r2,-76(fp)
  810a78:	1085883a 	add	r2,r2,r2
  810a7c:	1085883a 	add	r2,r2,r2
  810a80:	1009883a 	mov	r4,r2
  810a84:	e0bff717 	ldw	r2,-36(fp)
  810a88:	1105883a 	add	r2,r2,r4
  810a8c:	10800017 	ldw	r2,0(r2)
  810a90:	1885883a 	add	r2,r3,r2
  810a94:	1007883a 	mov	r3,r2
  810a98:	e0bff217 	ldw	r2,-56(fp)
  810a9c:	10c5883a 	add	r2,r2,r3
  810aa0:	10800003 	ldbu	r2,0(r2)
  810aa4:	10803fcc 	andi	r2,r2,255
  810aa8:	80a1883a 	add	r16,r16,r2
  810aac:	8805883a 	mov	r2,r17
  810ab0:	14400044 	addi	r17,r2,1
  810ab4:	10800003 	ldbu	r2,0(r2)
  810ab8:	10c03fcc 	andi	r3,r2,255
  810abc:	e0bfed17 	ldw	r2,-76(fp)
  810ac0:	1085883a 	add	r2,r2,r2
  810ac4:	1085883a 	add	r2,r2,r2
  810ac8:	1009883a 	mov	r4,r2
  810acc:	e0bff817 	ldw	r2,-32(fp)
  810ad0:	1105883a 	add	r2,r2,r4
  810ad4:	10800017 	ldw	r2,0(r2)
  810ad8:	1885883a 	add	r2,r3,r2
  810adc:	1007883a 	mov	r3,r2
  810ae0:	e0bff317 	ldw	r2,-52(fp)
  810ae4:	10c5883a 	add	r2,r2,r3
  810ae8:	10800003 	ldbu	r2,0(r2)
  810aec:	10803fcc 	andi	r2,r2,255
  810af0:	80a1883a 	add	r16,r16,r2
  810af4:	9005883a 	mov	r2,r18
  810af8:	14800044 	addi	r18,r2,1
  810afc:	8007883a 	mov	r3,r16
  810b00:	10c00005 	stb	r3,0(r2)
  810b04:	e0bfed17 	ldw	r2,-76(fp)
  810b08:	10800044 	addi	r2,r2,1
  810b0c:	108003cc 	andi	r2,r2,15
  810b10:	e0bfed15 	stw	r2,-76(fp)
  810b14:	e0bfef17 	ldw	r2,-68(fp)
  810b18:	10bfffc4 	addi	r2,r2,-1
  810b1c:	e0bfef15 	stw	r2,-68(fp)
  810b20:	e0bfef17 	ldw	r2,-68(fp)
  810b24:	103fbe1e 	bne	r2,zero,810a20 <__alt_mem_epcs_flash_controller_0+0xff807a20>
  810b28:	e0bff517 	ldw	r2,-44(fp)
  810b2c:	10800044 	addi	r2,r2,1
  810b30:	108003cc 	andi	r2,r2,15
  810b34:	e0bff515 	stw	r2,-44(fp)
  810b38:	e0bff017 	ldw	r2,-64(fp)
  810b3c:	e0fff517 	ldw	r3,-44(fp)
  810b40:	10c00c15 	stw	r3,48(r2)
  810b44:	e0bfee17 	ldw	r2,-72(fp)
  810b48:	10800044 	addi	r2,r2,1
  810b4c:	e0bfee15 	stw	r2,-72(fp)
  810b50:	e0ffee17 	ldw	r3,-72(fp)
  810b54:	e0bffc17 	ldw	r2,-16(fp)
  810b58:	18bf8a16 	blt	r3,r2,810984 <__alt_mem_epcs_flash_controller_0+0xff807984>
  810b5c:	0001883a 	nop
  810b60:	e6fffd04 	addi	sp,fp,-12
  810b64:	df000317 	ldw	fp,12(sp)
  810b68:	dc800217 	ldw	r18,8(sp)
  810b6c:	dc400117 	ldw	r17,4(sp)
  810b70:	dc000017 	ldw	r16,0(sp)
  810b74:	dec00404 	addi	sp,sp,16
  810b78:	f800283a 	ret

00810b7c <quantize_fs_dither>:
  810b7c:	deffe604 	addi	sp,sp,-104
  810b80:	dfc01915 	stw	ra,100(sp)
  810b84:	df001815 	stw	fp,96(sp)
  810b88:	dcc01715 	stw	r19,92(sp)
  810b8c:	dc801615 	stw	r18,88(sp)
  810b90:	dc401515 	stw	r17,84(sp)
  810b94:	dc001415 	stw	r16,80(sp)
  810b98:	df001804 	addi	fp,sp,96
  810b9c:	e13ff815 	stw	r4,-32(fp)
  810ba0:	e17ff915 	stw	r5,-28(fp)
  810ba4:	e1bffa15 	stw	r6,-24(fp)
  810ba8:	e1fffb15 	stw	r7,-20(fp)
  810bac:	e0bff817 	ldw	r2,-32(fp)
  810bb0:	10807917 	ldw	r2,484(r2)
  810bb4:	e0bfef15 	stw	r2,-68(fp)
  810bb8:	e0bff817 	ldw	r2,-32(fp)
  810bbc:	10801e17 	ldw	r2,120(r2)
  810bc0:	e0bff015 	stw	r2,-64(fp)
  810bc4:	e0bff817 	ldw	r2,-32(fp)
  810bc8:	10801c17 	ldw	r2,112(r2)
  810bcc:	e0bff115 	stw	r2,-60(fp)
  810bd0:	e0bff817 	ldw	r2,-32(fp)
  810bd4:	10805417 	ldw	r2,336(r2)
  810bd8:	e0bff215 	stw	r2,-56(fp)
  810bdc:	e03fed15 	stw	zero,-76(fp)
  810be0:	0000af06 	br	810ea0 <quantize_fs_dither+0x324>
  810be4:	e0bfed17 	ldw	r2,-76(fp)
  810be8:	1085883a 	add	r2,r2,r2
  810bec:	1085883a 	add	r2,r2,r2
  810bf0:	1007883a 	mov	r3,r2
  810bf4:	e0bffa17 	ldw	r2,-24(fp)
  810bf8:	10c5883a 	add	r2,r2,r3
  810bfc:	10800017 	ldw	r2,0(r2)
  810c00:	e1bff117 	ldw	r6,-60(fp)
  810c04:	000b883a 	mov	r5,zero
  810c08:	1009883a 	mov	r4,r2
  810c0c:	0833d940 	call	833d94 <memset>
  810c10:	e03fec15 	stw	zero,-80(fp)
  810c14:	00009606 	br	810e70 <quantize_fs_dither+0x2f4>
  810c18:	e0bfed17 	ldw	r2,-76(fp)
  810c1c:	1085883a 	add	r2,r2,r2
  810c20:	1085883a 	add	r2,r2,r2
  810c24:	1007883a 	mov	r3,r2
  810c28:	e0bff917 	ldw	r2,-28(fp)
  810c2c:	10c5883a 	add	r2,r2,r3
  810c30:	10c00017 	ldw	r3,0(r2)
  810c34:	e0bfec17 	ldw	r2,-80(fp)
  810c38:	18a7883a 	add	r19,r3,r2
  810c3c:	e0bfed17 	ldw	r2,-76(fp)
  810c40:	1085883a 	add	r2,r2,r2
  810c44:	1085883a 	add	r2,r2,r2
  810c48:	1007883a 	mov	r3,r2
  810c4c:	e0bffa17 	ldw	r2,-24(fp)
  810c50:	10c5883a 	add	r2,r2,r3
  810c54:	14800017 	ldw	r18,0(r2)
  810c58:	e0bfef17 	ldw	r2,-68(fp)
  810c5c:	10801517 	ldw	r2,84(r2)
  810c60:	10001b26 	beq	r2,zero,810cd0 <quantize_fs_dither+0x154>
  810c64:	e0bff117 	ldw	r2,-60(fp)
  810c68:	10bfffc4 	addi	r2,r2,-1
  810c6c:	e0fff017 	ldw	r3,-64(fp)
  810c70:	180b883a 	mov	r5,r3
  810c74:	1009883a 	mov	r4,r2
  810c78:	08301e80 	call	8301e8 <__mulsi3>
  810c7c:	98a7883a 	add	r19,r19,r2
  810c80:	e0bff117 	ldw	r2,-60(fp)
  810c84:	10bfffc4 	addi	r2,r2,-1
  810c88:	90a5883a 	add	r18,r18,r2
  810c8c:	00bfffc4 	movi	r2,-1
  810c90:	e0bfea15 	stw	r2,-88(fp)
  810c94:	e0bff017 	ldw	r2,-64(fp)
  810c98:	0085c83a 	sub	r2,zero,r2
  810c9c:	e0bfeb15 	stw	r2,-84(fp)
  810ca0:	e0ffef17 	ldw	r3,-68(fp)
  810ca4:	e0bfec17 	ldw	r2,-80(fp)
  810ca8:	10800444 	addi	r2,r2,17
  810cac:	1085883a 	add	r2,r2,r2
  810cb0:	1085883a 	add	r2,r2,r2
  810cb4:	1885883a 	add	r2,r3,r2
  810cb8:	10c00017 	ldw	r3,0(r2)
  810cbc:	e0bff117 	ldw	r2,-60(fp)
  810cc0:	10800044 	addi	r2,r2,1
  810cc4:	1085883a 	add	r2,r2,r2
  810cc8:	18a3883a 	add	r17,r3,r2
  810ccc:	00000b06 	br	810cfc <quantize_fs_dither+0x180>
  810cd0:	00800044 	movi	r2,1
  810cd4:	e0bfea15 	stw	r2,-88(fp)
  810cd8:	e0bff017 	ldw	r2,-64(fp)
  810cdc:	e0bfeb15 	stw	r2,-84(fp)
  810ce0:	e0ffef17 	ldw	r3,-68(fp)
  810ce4:	e0bfec17 	ldw	r2,-80(fp)
  810ce8:	10800444 	addi	r2,r2,17
  810cec:	1085883a 	add	r2,r2,r2
  810cf0:	1085883a 	add	r2,r2,r2
  810cf4:	1885883a 	add	r2,r3,r2
  810cf8:	14400017 	ldw	r17,0(r2)
  810cfc:	e0bfef17 	ldw	r2,-68(fp)
  810d00:	10c00617 	ldw	r3,24(r2)
  810d04:	e0bfec17 	ldw	r2,-80(fp)
  810d08:	1085883a 	add	r2,r2,r2
  810d0c:	1085883a 	add	r2,r2,r2
  810d10:	1885883a 	add	r2,r3,r2
  810d14:	10800017 	ldw	r2,0(r2)
  810d18:	e0bff315 	stw	r2,-52(fp)
  810d1c:	e0bfef17 	ldw	r2,-68(fp)
  810d20:	10c00417 	ldw	r3,16(r2)
  810d24:	e0bfec17 	ldw	r2,-80(fp)
  810d28:	1085883a 	add	r2,r2,r2
  810d2c:	1085883a 	add	r2,r2,r2
  810d30:	1885883a 	add	r2,r3,r2
  810d34:	10800017 	ldw	r2,0(r2)
  810d38:	e0bff415 	stw	r2,-48(fp)
  810d3c:	0021883a 	mov	r16,zero
  810d40:	e03fe915 	stw	zero,-92(fp)
  810d44:	e0bfe917 	ldw	r2,-92(fp)
  810d48:	e0bfe815 	stw	r2,-96(fp)
  810d4c:	e0bff117 	ldw	r2,-60(fp)
  810d50:	e0bfee15 	stw	r2,-72(fp)
  810d54:	00003f06 	br	810e54 <quantize_fs_dither+0x2d8>
  810d58:	e0bfea17 	ldw	r2,-88(fp)
  810d5c:	1085883a 	add	r2,r2,r2
  810d60:	8885883a 	add	r2,r17,r2
  810d64:	1080000b 	ldhu	r2,0(r2)
  810d68:	10bfffcc 	andi	r2,r2,65535
  810d6c:	10a0001c 	xori	r2,r2,32768
  810d70:	10a00004 	addi	r2,r2,-32768
  810d74:	1405883a 	add	r2,r2,r16
  810d78:	10800204 	addi	r2,r2,8
  810d7c:	1021d13a 	srai	r16,r2,4
  810d80:	98800003 	ldbu	r2,0(r19)
  810d84:	10803fcc 	andi	r2,r2,255
  810d88:	80a1883a 	add	r16,r16,r2
  810d8c:	8007883a 	mov	r3,r16
  810d90:	e0bff217 	ldw	r2,-56(fp)
  810d94:	10c5883a 	add	r2,r2,r3
  810d98:	10800003 	ldbu	r2,0(r2)
  810d9c:	14003fcc 	andi	r16,r2,255
  810da0:	8007883a 	mov	r3,r16
  810da4:	e0bff317 	ldw	r2,-52(fp)
  810da8:	10c5883a 	add	r2,r2,r3
  810dac:	10800003 	ldbu	r2,0(r2)
  810db0:	10803fcc 	andi	r2,r2,255
  810db4:	e0bff515 	stw	r2,-44(fp)
  810db8:	90800003 	ldbu	r2,0(r18)
  810dbc:	e0fff517 	ldw	r3,-44(fp)
  810dc0:	10c5883a 	add	r2,r2,r3
  810dc4:	90800005 	stb	r2,0(r18)
  810dc8:	e0bff517 	ldw	r2,-44(fp)
  810dcc:	e0fff417 	ldw	r3,-48(fp)
  810dd0:	1885883a 	add	r2,r3,r2
  810dd4:	10800003 	ldbu	r2,0(r2)
  810dd8:	10803fcc 	andi	r2,r2,255
  810ddc:	80a1c83a 	sub	r16,r16,r2
  810de0:	e43ff615 	stw	r16,-40(fp)
  810de4:	8405883a 	add	r2,r16,r16
  810de8:	e0bff715 	stw	r2,-36(fp)
  810dec:	e0bff717 	ldw	r2,-36(fp)
  810df0:	80a1883a 	add	r16,r16,r2
  810df4:	e0bfe917 	ldw	r2,-92(fp)
  810df8:	1007883a 	mov	r3,r2
  810dfc:	8005883a 	mov	r2,r16
  810e00:	1885883a 	add	r2,r3,r2
  810e04:	8880000d 	sth	r2,0(r17)
  810e08:	e0bff717 	ldw	r2,-36(fp)
  810e0c:	80a1883a 	add	r16,r16,r2
  810e10:	e0bfe817 	ldw	r2,-96(fp)
  810e14:	1405883a 	add	r2,r2,r16
  810e18:	e0bfe915 	stw	r2,-92(fp)
  810e1c:	e0bff617 	ldw	r2,-40(fp)
  810e20:	e0bfe815 	stw	r2,-96(fp)
  810e24:	e0bff717 	ldw	r2,-36(fp)
  810e28:	80a1883a 	add	r16,r16,r2
  810e2c:	e0bfeb17 	ldw	r2,-84(fp)
  810e30:	98a7883a 	add	r19,r19,r2
  810e34:	e0bfea17 	ldw	r2,-88(fp)
  810e38:	90a5883a 	add	r18,r18,r2
  810e3c:	e0bfea17 	ldw	r2,-88(fp)
  810e40:	1085883a 	add	r2,r2,r2
  810e44:	88a3883a 	add	r17,r17,r2
  810e48:	e0bfee17 	ldw	r2,-72(fp)
  810e4c:	10bfffc4 	addi	r2,r2,-1
  810e50:	e0bfee15 	stw	r2,-72(fp)
  810e54:	e0bfee17 	ldw	r2,-72(fp)
  810e58:	103fbf1e 	bne	r2,zero,810d58 <__alt_mem_epcs_flash_controller_0+0xff807d58>
  810e5c:	e0bfe917 	ldw	r2,-92(fp)
  810e60:	8880000d 	sth	r2,0(r17)
  810e64:	e0bfec17 	ldw	r2,-80(fp)
  810e68:	10800044 	addi	r2,r2,1
  810e6c:	e0bfec15 	stw	r2,-80(fp)
  810e70:	e0ffec17 	ldw	r3,-80(fp)
  810e74:	e0bff017 	ldw	r2,-64(fp)
  810e78:	18bf6716 	blt	r3,r2,810c18 <__alt_mem_epcs_flash_controller_0+0xff807c18>
  810e7c:	e0bfef17 	ldw	r2,-68(fp)
  810e80:	10801517 	ldw	r2,84(r2)
  810e84:	1005003a 	cmpeq	r2,r2,zero
  810e88:	10c03fcc 	andi	r3,r2,255
  810e8c:	e0bfef17 	ldw	r2,-68(fp)
  810e90:	10c01515 	stw	r3,84(r2)
  810e94:	e0bfed17 	ldw	r2,-76(fp)
  810e98:	10800044 	addi	r2,r2,1
  810e9c:	e0bfed15 	stw	r2,-76(fp)
  810ea0:	e0ffed17 	ldw	r3,-76(fp)
  810ea4:	e0bffb17 	ldw	r2,-20(fp)
  810ea8:	18bf4e16 	blt	r3,r2,810be4 <__alt_mem_epcs_flash_controller_0+0xff807be4>
  810eac:	0001883a 	nop
  810eb0:	e6fffc04 	addi	sp,fp,-16
  810eb4:	dfc00517 	ldw	ra,20(sp)
  810eb8:	df000417 	ldw	fp,16(sp)
  810ebc:	dcc00317 	ldw	r19,12(sp)
  810ec0:	dc800217 	ldw	r18,8(sp)
  810ec4:	dc400117 	ldw	r17,4(sp)
  810ec8:	dc000017 	ldw	r16,0(sp)
  810ecc:	dec00604 	addi	sp,sp,24
  810ed0:	f800283a 	ret

00810ed4 <alloc_fs_workspace>:
  810ed4:	defffa04 	addi	sp,sp,-24
  810ed8:	dfc00515 	stw	ra,20(sp)
  810edc:	df000415 	stw	fp,16(sp)
  810ee0:	df000404 	addi	fp,sp,16
  810ee4:	e13fff15 	stw	r4,-4(fp)
  810ee8:	e0bfff17 	ldw	r2,-4(fp)
  810eec:	10807917 	ldw	r2,484(r2)
  810ef0:	e0bffd15 	stw	r2,-12(fp)
  810ef4:	e0bfff17 	ldw	r2,-4(fp)
  810ef8:	10801c17 	ldw	r2,112(r2)
  810efc:	10800084 	addi	r2,r2,2
  810f00:	1085883a 	add	r2,r2,r2
  810f04:	e0bffe15 	stw	r2,-8(fp)
  810f08:	e03ffc15 	stw	zero,-16(fp)
  810f0c:	00001206 	br	810f58 <alloc_fs_workspace+0x84>
  810f10:	e0bfff17 	ldw	r2,-4(fp)
  810f14:	10800117 	ldw	r2,4(r2)
  810f18:	10800117 	ldw	r2,4(r2)
  810f1c:	e1bffe17 	ldw	r6,-8(fp)
  810f20:	01400044 	movi	r5,1
  810f24:	e13fff17 	ldw	r4,-4(fp)
  810f28:	103ee83a 	callr	r2
  810f2c:	1009883a 	mov	r4,r2
  810f30:	e0fffd17 	ldw	r3,-12(fp)
  810f34:	e0bffc17 	ldw	r2,-16(fp)
  810f38:	10800444 	addi	r2,r2,17
  810f3c:	1085883a 	add	r2,r2,r2
  810f40:	1085883a 	add	r2,r2,r2
  810f44:	1885883a 	add	r2,r3,r2
  810f48:	11000015 	stw	r4,0(r2)
  810f4c:	e0bffc17 	ldw	r2,-16(fp)
  810f50:	10800044 	addi	r2,r2,1
  810f54:	e0bffc15 	stw	r2,-16(fp)
  810f58:	e0bfff17 	ldw	r2,-4(fp)
  810f5c:	10801e17 	ldw	r2,120(r2)
  810f60:	e0fffc17 	ldw	r3,-16(fp)
  810f64:	18bfea16 	blt	r3,r2,810f10 <__alt_mem_epcs_flash_controller_0+0xff807f10>
  810f68:	0001883a 	nop
  810f6c:	e037883a 	mov	sp,fp
  810f70:	dfc00117 	ldw	ra,4(sp)
  810f74:	df000017 	ldw	fp,0(sp)
  810f78:	dec00204 	addi	sp,sp,8
  810f7c:	f800283a 	ret

00810f80 <start_pass_1_quant>:
  810f80:	defff904 	addi	sp,sp,-28
  810f84:	dfc00615 	stw	ra,24(sp)
  810f88:	df000515 	stw	fp,20(sp)
  810f8c:	df000504 	addi	fp,sp,20
  810f90:	e13ffe15 	stw	r4,-8(fp)
  810f94:	e17fff15 	stw	r5,-4(fp)
  810f98:	e0bffe17 	ldw	r2,-8(fp)
  810f9c:	10807917 	ldw	r2,484(r2)
  810fa0:	e0bffc15 	stw	r2,-16(fp)
  810fa4:	e0bffc17 	ldw	r2,-16(fp)
  810fa8:	10c00417 	ldw	r3,16(r2)
  810fac:	e0bffe17 	ldw	r2,-8(fp)
  810fb0:	10c02215 	stw	r3,136(r2)
  810fb4:	e0bffc17 	ldw	r2,-16(fp)
  810fb8:	10c00517 	ldw	r3,20(r2)
  810fbc:	e0bffe17 	ldw	r2,-8(fp)
  810fc0:	10c02115 	stw	r3,132(r2)
  810fc4:	e0bffe17 	ldw	r2,-8(fp)
  810fc8:	10801617 	ldw	r2,88(r2)
  810fcc:	10c00060 	cmpeqi	r3,r2,1
  810fd0:	1800121e 	bne	r3,zero,81101c <start_pass_1_quant+0x9c>
  810fd4:	0080032e 	bgeu	zero,r2,810fe4 <start_pass_1_quant+0x64>
  810fd8:	108000a0 	cmpeqi	r2,r2,2
  810fdc:	1000291e 	bne	r2,zero,811084 <start_pass_1_quant+0x104>
  810fe0:	00004d06 	br	811118 <start_pass_1_quant+0x198>
  810fe4:	e0bffe17 	ldw	r2,-8(fp)
  810fe8:	10801e17 	ldw	r2,120(r2)
  810fec:	108000d8 	cmpnei	r2,r2,3
  810ff0:	1000051e 	bne	r2,zero,811008 <start_pass_1_quant+0x88>
  810ff4:	e0fffc17 	ldw	r3,-16(fp)
  810ff8:	00802074 	movhi	r2,129
  810ffc:	10815f04 	addi	r2,r2,1404
  811000:	18800115 	stw	r2,4(r3)
  811004:	00004f06 	br	811144 <start_pass_1_quant+0x1c4>
  811008:	e0fffc17 	ldw	r3,-16(fp)
  81100c:	00802074 	movhi	r2,129
  811010:	10810804 	addi	r2,r2,1056
  811014:	18800115 	stw	r2,4(r3)
  811018:	00004a06 	br	811144 <start_pass_1_quant+0x1c4>
  81101c:	e0bffe17 	ldw	r2,-8(fp)
  811020:	10801e17 	ldw	r2,120(r2)
  811024:	108000d8 	cmpnei	r2,r2,3
  811028:	1000051e 	bne	r2,zero,811040 <start_pass_1_quant+0xc0>
  81102c:	e0fffc17 	ldw	r3,-16(fp)
  811030:	00802074 	movhi	r2,129
  811034:	10824304 	addi	r2,r2,2316
  811038:	18800115 	stw	r2,4(r3)
  81103c:	00000406 	br	811050 <start_pass_1_quant+0xd0>
  811040:	e0fffc17 	ldw	r3,-16(fp)
  811044:	00802074 	movhi	r2,129
  811048:	1081bf04 	addi	r2,r2,1788
  81104c:	18800115 	stw	r2,4(r3)
  811050:	e0bffc17 	ldw	r2,-16(fp)
  811054:	10000c15 	stw	zero,48(r2)
  811058:	e0bffc17 	ldw	r2,-16(fp)
  81105c:	10800717 	ldw	r2,28(r2)
  811060:	1000021e 	bne	r2,zero,81106c <start_pass_1_quant+0xec>
  811064:	e13ffe17 	ldw	r4,-8(fp)
  811068:	080ff380 	call	80ff38 <create_colorindex>
  81106c:	e0bffc17 	ldw	r2,-16(fp)
  811070:	10800d17 	ldw	r2,52(r2)
  811074:	1000321e 	bne	r2,zero,811140 <start_pass_1_quant+0x1c0>
  811078:	e13ffe17 	ldw	r4,-8(fp)
  81107c:	08103000 	call	810300 <create_odither_tables>
  811080:	00002f06 	br	811140 <start_pass_1_quant+0x1c0>
  811084:	e0fffc17 	ldw	r3,-16(fp)
  811088:	00802074 	movhi	r2,129
  81108c:	1082df04 	addi	r2,r2,2940
  811090:	18800115 	stw	r2,4(r3)
  811094:	e0bffc17 	ldw	r2,-16(fp)
  811098:	10001515 	stw	zero,84(r2)
  81109c:	e0bffc17 	ldw	r2,-16(fp)
  8110a0:	10801117 	ldw	r2,68(r2)
  8110a4:	1000021e 	bne	r2,zero,8110b0 <start_pass_1_quant+0x130>
  8110a8:	e13ffe17 	ldw	r4,-8(fp)
  8110ac:	0810ed40 	call	810ed4 <alloc_fs_workspace>
  8110b0:	e0bffe17 	ldw	r2,-8(fp)
  8110b4:	10801c17 	ldw	r2,112(r2)
  8110b8:	10800084 	addi	r2,r2,2
  8110bc:	1085883a 	add	r2,r2,r2
  8110c0:	e0bffd15 	stw	r2,-12(fp)
  8110c4:	e03ffb15 	stw	zero,-20(fp)
  8110c8:	00000e06 	br	811104 <start_pass_1_quant+0x184>
  8110cc:	e0fffc17 	ldw	r3,-16(fp)
  8110d0:	e0bffb17 	ldw	r2,-20(fp)
  8110d4:	10800444 	addi	r2,r2,17
  8110d8:	1085883a 	add	r2,r2,r2
  8110dc:	1085883a 	add	r2,r2,r2
  8110e0:	1885883a 	add	r2,r3,r2
  8110e4:	10800017 	ldw	r2,0(r2)
  8110e8:	e1bffd17 	ldw	r6,-12(fp)
  8110ec:	000b883a 	mov	r5,zero
  8110f0:	1009883a 	mov	r4,r2
  8110f4:	0833d940 	call	833d94 <memset>
  8110f8:	e0bffb17 	ldw	r2,-20(fp)
  8110fc:	10800044 	addi	r2,r2,1
  811100:	e0bffb15 	stw	r2,-20(fp)
  811104:	e0bffe17 	ldw	r2,-8(fp)
  811108:	10801e17 	ldw	r2,120(r2)
  81110c:	e0fffb17 	ldw	r3,-20(fp)
  811110:	18bfee16 	blt	r3,r2,8110cc <__alt_mem_epcs_flash_controller_0+0xff8080cc>
  811114:	00000b06 	br	811144 <start_pass_1_quant+0x1c4>
  811118:	e0bffe17 	ldw	r2,-8(fp)
  81111c:	10800017 	ldw	r2,0(r2)
  811120:	00c00c44 	movi	r3,49
  811124:	10c00515 	stw	r3,20(r2)
  811128:	e0bffe17 	ldw	r2,-8(fp)
  81112c:	10800017 	ldw	r2,0(r2)
  811130:	10800017 	ldw	r2,0(r2)
  811134:	e13ffe17 	ldw	r4,-8(fp)
  811138:	103ee83a 	callr	r2
  81113c:	00000106 	br	811144 <start_pass_1_quant+0x1c4>
  811140:	0001883a 	nop
  811144:	0001883a 	nop
  811148:	e037883a 	mov	sp,fp
  81114c:	dfc00117 	ldw	ra,4(sp)
  811150:	df000017 	ldw	fp,0(sp)
  811154:	dec00204 	addi	sp,sp,8
  811158:	f800283a 	ret

0081115c <finish_pass_1_quant>:
  81115c:	defffe04 	addi	sp,sp,-8
  811160:	df000115 	stw	fp,4(sp)
  811164:	df000104 	addi	fp,sp,4
  811168:	e13fff15 	stw	r4,-4(fp)
  81116c:	0001883a 	nop
  811170:	e037883a 	mov	sp,fp
  811174:	df000017 	ldw	fp,0(sp)
  811178:	dec00104 	addi	sp,sp,4
  81117c:	f800283a 	ret

00811180 <new_color_map_1_quant>:
  811180:	defffd04 	addi	sp,sp,-12
  811184:	dfc00215 	stw	ra,8(sp)
  811188:	df000115 	stw	fp,4(sp)
  81118c:	df000104 	addi	fp,sp,4
  811190:	e13fff15 	stw	r4,-4(fp)
  811194:	e0bfff17 	ldw	r2,-4(fp)
  811198:	10800017 	ldw	r2,0(r2)
  81119c:	00c00bc4 	movi	r3,47
  8111a0:	10c00515 	stw	r3,20(r2)
  8111a4:	e0bfff17 	ldw	r2,-4(fp)
  8111a8:	10800017 	ldw	r2,0(r2)
  8111ac:	10800017 	ldw	r2,0(r2)
  8111b0:	e13fff17 	ldw	r4,-4(fp)
  8111b4:	103ee83a 	callr	r2
  8111b8:	0001883a 	nop
  8111bc:	e037883a 	mov	sp,fp
  8111c0:	dfc00117 	ldw	ra,4(sp)
  8111c4:	df000017 	ldw	fp,0(sp)
  8111c8:	dec00204 	addi	sp,sp,8
  8111cc:	f800283a 	ret

008111d0 <jinit_1pass_quantizer>:
  8111d0:	defffc04 	addi	sp,sp,-16
  8111d4:	dfc00315 	stw	ra,12(sp)
  8111d8:	df000215 	stw	fp,8(sp)
  8111dc:	df000204 	addi	fp,sp,8
  8111e0:	e13fff15 	stw	r4,-4(fp)
  8111e4:	e0bfff17 	ldw	r2,-4(fp)
  8111e8:	10800117 	ldw	r2,4(r2)
  8111ec:	10800017 	ldw	r2,0(r2)
  8111f0:	01801604 	movi	r6,88
  8111f4:	01400044 	movi	r5,1
  8111f8:	e13fff17 	ldw	r4,-4(fp)
  8111fc:	103ee83a 	callr	r2
  811200:	e0bffe15 	stw	r2,-8(fp)
  811204:	e0bfff17 	ldw	r2,-4(fp)
  811208:	e0fffe17 	ldw	r3,-8(fp)
  81120c:	10c07915 	stw	r3,484(r2)
  811210:	e0fffe17 	ldw	r3,-8(fp)
  811214:	00802074 	movhi	r2,129
  811218:	1083e004 	addi	r2,r2,3968
  81121c:	18800015 	stw	r2,0(r3)
  811220:	e0fffe17 	ldw	r3,-8(fp)
  811224:	00802074 	movhi	r2,129
  811228:	10845704 	addi	r2,r2,4444
  81122c:	18800215 	stw	r2,8(r3)
  811230:	e0fffe17 	ldw	r3,-8(fp)
  811234:	00802074 	movhi	r2,129
  811238:	10846004 	addi	r2,r2,4480
  81123c:	18800315 	stw	r2,12(r3)
  811240:	e0bffe17 	ldw	r2,-8(fp)
  811244:	10001115 	stw	zero,68(r2)
  811248:	e0bffe17 	ldw	r2,-8(fp)
  81124c:	10000d15 	stw	zero,52(r2)
  811250:	e0bfff17 	ldw	r2,-4(fp)
  811254:	10801e17 	ldw	r2,120(r2)
  811258:	10800150 	cmplti	r2,r2,5
  81125c:	10000d1e 	bne	r2,zero,811294 <jinit_1pass_quantizer+0xc4>
  811260:	e0bfff17 	ldw	r2,-4(fp)
  811264:	10800017 	ldw	r2,0(r2)
  811268:	00c00e44 	movi	r3,57
  81126c:	10c00515 	stw	r3,20(r2)
  811270:	e0bfff17 	ldw	r2,-4(fp)
  811274:	10800017 	ldw	r2,0(r2)
  811278:	00c00104 	movi	r3,4
  81127c:	10c00615 	stw	r3,24(r2)
  811280:	e0bfff17 	ldw	r2,-4(fp)
  811284:	10800017 	ldw	r2,0(r2)
  811288:	10800017 	ldw	r2,0(r2)
  81128c:	e13fff17 	ldw	r4,-4(fp)
  811290:	103ee83a 	callr	r2
  811294:	e0bfff17 	ldw	r2,-4(fp)
  811298:	10801817 	ldw	r2,96(r2)
  81129c:	10804050 	cmplti	r2,r2,257
  8112a0:	10000d1e 	bne	r2,zero,8112d8 <jinit_1pass_quantizer+0x108>
  8112a4:	e0bfff17 	ldw	r2,-4(fp)
  8112a8:	10800017 	ldw	r2,0(r2)
  8112ac:	00c00ec4 	movi	r3,59
  8112b0:	10c00515 	stw	r3,20(r2)
  8112b4:	e0bfff17 	ldw	r2,-4(fp)
  8112b8:	10800017 	ldw	r2,0(r2)
  8112bc:	00c04004 	movi	r3,256
  8112c0:	10c00615 	stw	r3,24(r2)
  8112c4:	e0bfff17 	ldw	r2,-4(fp)
  8112c8:	10800017 	ldw	r2,0(r2)
  8112cc:	10800017 	ldw	r2,0(r2)
  8112d0:	e13fff17 	ldw	r4,-4(fp)
  8112d4:	103ee83a 	callr	r2
  8112d8:	e13fff17 	ldw	r4,-4(fp)
  8112dc:	080fcac0 	call	80fcac <create_colormap>
  8112e0:	e13fff17 	ldw	r4,-4(fp)
  8112e4:	080ff380 	call	80ff38 <create_colorindex>
  8112e8:	e0bfff17 	ldw	r2,-4(fp)
  8112ec:	10801617 	ldw	r2,88(r2)
  8112f0:	10800098 	cmpnei	r2,r2,2
  8112f4:	1000021e 	bne	r2,zero,811300 <jinit_1pass_quantizer+0x130>
  8112f8:	e13fff17 	ldw	r4,-4(fp)
  8112fc:	0810ed40 	call	810ed4 <alloc_fs_workspace>
  811300:	0001883a 	nop
  811304:	e037883a 	mov	sp,fp
  811308:	dfc00117 	ldw	ra,4(sp)
  81130c:	df000017 	ldw	fp,0(sp)
  811310:	dec00204 	addi	sp,sp,8
  811314:	f800283a 	ret

00811318 <prescan_quantize>:
  811318:	defff404 	addi	sp,sp,-48
  81131c:	df000b15 	stw	fp,44(sp)
  811320:	dc800a15 	stw	r18,40(sp)
  811324:	dc400915 	stw	r17,36(sp)
  811328:	dc000815 	stw	r16,32(sp)
  81132c:	df000b04 	addi	fp,sp,44
  811330:	e13ff915 	stw	r4,-28(fp)
  811334:	e17ffa15 	stw	r5,-24(fp)
  811338:	e1bffb15 	stw	r6,-20(fp)
  81133c:	e1fffc15 	stw	r7,-16(fp)
  811340:	e0bff917 	ldw	r2,-28(fp)
  811344:	10807917 	ldw	r2,484(r2)
  811348:	e0bff715 	stw	r2,-36(fp)
  81134c:	e0bff717 	ldw	r2,-36(fp)
  811350:	14800617 	ldw	r18,24(r2)
  811354:	e0bff917 	ldw	r2,-28(fp)
  811358:	10801c17 	ldw	r2,112(r2)
  81135c:	e0bff815 	stw	r2,-32(fp)
  811360:	e03ff515 	stw	zero,-44(fp)
  811364:	00003206 	br	811430 <prescan_quantize+0x118>
  811368:	e0bff517 	ldw	r2,-44(fp)
  81136c:	1085883a 	add	r2,r2,r2
  811370:	1085883a 	add	r2,r2,r2
  811374:	1007883a 	mov	r3,r2
  811378:	e0bffa17 	ldw	r2,-24(fp)
  81137c:	10c5883a 	add	r2,r2,r3
  811380:	14000017 	ldw	r16,0(r2)
  811384:	e0bff817 	ldw	r2,-32(fp)
  811388:	e0bff615 	stw	r2,-40(fp)
  81138c:	00002306 	br	81141c <prescan_quantize+0x104>
  811390:	80800003 	ldbu	r2,0(r16)
  811394:	10803fcc 	andi	r2,r2,255
  811398:	1004d0fa 	srli	r2,r2,3
  81139c:	10803fcc 	andi	r2,r2,255
  8113a0:	1085883a 	add	r2,r2,r2
  8113a4:	1085883a 	add	r2,r2,r2
  8113a8:	9085883a 	add	r2,r18,r2
  8113ac:	10c00017 	ldw	r3,0(r2)
  8113b0:	80800044 	addi	r2,r16,1
  8113b4:	10800003 	ldbu	r2,0(r2)
  8113b8:	10803fcc 	andi	r2,r2,255
  8113bc:	1004d0ba 	srli	r2,r2,2
  8113c0:	10803fcc 	andi	r2,r2,255
  8113c4:	100491ba 	slli	r2,r2,6
  8113c8:	1887883a 	add	r3,r3,r2
  8113cc:	80800084 	addi	r2,r16,2
  8113d0:	10800003 	ldbu	r2,0(r2)
  8113d4:	10803fcc 	andi	r2,r2,255
  8113d8:	1004d0fa 	srli	r2,r2,3
  8113dc:	10803fcc 	andi	r2,r2,255
  8113e0:	1085883a 	add	r2,r2,r2
  8113e4:	18a3883a 	add	r17,r3,r2
  8113e8:	8880000b 	ldhu	r2,0(r17)
  8113ec:	10800044 	addi	r2,r2,1
  8113f0:	8880000d 	sth	r2,0(r17)
  8113f4:	8880000b 	ldhu	r2,0(r17)
  8113f8:	10bfffcc 	andi	r2,r2,65535
  8113fc:	1000031e 	bne	r2,zero,81140c <prescan_quantize+0xf4>
  811400:	8880000b 	ldhu	r2,0(r17)
  811404:	10bfffc4 	addi	r2,r2,-1
  811408:	8880000d 	sth	r2,0(r17)
  81140c:	840000c4 	addi	r16,r16,3
  811410:	e0bff617 	ldw	r2,-40(fp)
  811414:	10bfffc4 	addi	r2,r2,-1
  811418:	e0bff615 	stw	r2,-40(fp)
  81141c:	e0bff617 	ldw	r2,-40(fp)
  811420:	103fdb1e 	bne	r2,zero,811390 <__alt_mem_epcs_flash_controller_0+0xff808390>
  811424:	e0bff517 	ldw	r2,-44(fp)
  811428:	10800044 	addi	r2,r2,1
  81142c:	e0bff515 	stw	r2,-44(fp)
  811430:	e0fff517 	ldw	r3,-44(fp)
  811434:	e0bffc17 	ldw	r2,-16(fp)
  811438:	18bfcb16 	blt	r3,r2,811368 <__alt_mem_epcs_flash_controller_0+0xff808368>
  81143c:	0001883a 	nop
  811440:	e6fffd04 	addi	sp,fp,-12
  811444:	df000317 	ldw	fp,12(sp)
  811448:	dc800217 	ldw	r18,8(sp)
  81144c:	dc400117 	ldw	r17,4(sp)
  811450:	dc000017 	ldw	r16,0(sp)
  811454:	dec00404 	addi	sp,sp,16
  811458:	f800283a 	ret

0081145c <find_biggest_color_pop>:
  81145c:	defff904 	addi	sp,sp,-28
  811460:	df000615 	stw	fp,24(sp)
  811464:	dc800515 	stw	r18,20(sp)
  811468:	dc400415 	stw	r17,16(sp)
  81146c:	dc000315 	stw	r16,12(sp)
  811470:	df000604 	addi	fp,sp,24
  811474:	e13ffb15 	stw	r4,-20(fp)
  811478:	e17ffc15 	stw	r5,-16(fp)
  81147c:	0025883a 	mov	r18,zero
  811480:	e03ffa15 	stw	zero,-24(fp)
  811484:	0023883a 	mov	r17,zero
  811488:	e43ffb17 	ldw	r16,-20(fp)
  81148c:	00000806 	br	8114b0 <find_biggest_color_pop+0x54>
  811490:	80800717 	ldw	r2,28(r16)
  811494:	9080040e 	bge	r18,r2,8114a8 <find_biggest_color_pop+0x4c>
  811498:	80800617 	ldw	r2,24(r16)
  81149c:	0080020e 	bge	zero,r2,8114a8 <find_biggest_color_pop+0x4c>
  8114a0:	e43ffa15 	stw	r16,-24(fp)
  8114a4:	84800717 	ldw	r18,28(r16)
  8114a8:	8c400044 	addi	r17,r17,1
  8114ac:	84000804 	addi	r16,r16,32
  8114b0:	e0bffc17 	ldw	r2,-16(fp)
  8114b4:	88bff616 	blt	r17,r2,811490 <__alt_mem_epcs_flash_controller_0+0xff808490>
  8114b8:	e0bffa17 	ldw	r2,-24(fp)
  8114bc:	e6fffd04 	addi	sp,fp,-12
  8114c0:	df000317 	ldw	fp,12(sp)
  8114c4:	dc800217 	ldw	r18,8(sp)
  8114c8:	dc400117 	ldw	r17,4(sp)
  8114cc:	dc000017 	ldw	r16,0(sp)
  8114d0:	dec00404 	addi	sp,sp,16
  8114d4:	f800283a 	ret

008114d8 <find_biggest_volume>:
  8114d8:	defff904 	addi	sp,sp,-28
  8114dc:	df000615 	stw	fp,24(sp)
  8114e0:	dc800515 	stw	r18,20(sp)
  8114e4:	dc400415 	stw	r17,16(sp)
  8114e8:	dc000315 	stw	r16,12(sp)
  8114ec:	df000604 	addi	fp,sp,24
  8114f0:	e13ffb15 	stw	r4,-20(fp)
  8114f4:	e17ffc15 	stw	r5,-16(fp)
  8114f8:	0025883a 	mov	r18,zero
  8114fc:	e03ffa15 	stw	zero,-24(fp)
  811500:	0023883a 	mov	r17,zero
  811504:	e43ffb17 	ldw	r16,-20(fp)
  811508:	00000606 	br	811524 <find_biggest_volume+0x4c>
  81150c:	80800617 	ldw	r2,24(r16)
  811510:	9080020e 	bge	r18,r2,81151c <find_biggest_volume+0x44>
  811514:	e43ffa15 	stw	r16,-24(fp)
  811518:	84800617 	ldw	r18,24(r16)
  81151c:	8c400044 	addi	r17,r17,1
  811520:	84000804 	addi	r16,r16,32
  811524:	e0bffc17 	ldw	r2,-16(fp)
  811528:	88bff816 	blt	r17,r2,81150c <__alt_mem_epcs_flash_controller_0+0xff80850c>
  81152c:	e0bffa17 	ldw	r2,-24(fp)
  811530:	e6fffd04 	addi	sp,fp,-12
  811534:	df000317 	ldw	fp,12(sp)
  811538:	dc800217 	ldw	r18,8(sp)
  81153c:	dc400117 	ldw	r17,4(sp)
  811540:	dc000017 	ldw	r16,0(sp)
  811544:	dec00404 	addi	sp,sp,16
  811548:	f800283a 	ret

0081154c <update_box>:
  81154c:	deffeb04 	addi	sp,sp,-84
  811550:	dfc01415 	stw	ra,80(sp)
  811554:	df001315 	stw	fp,76(sp)
  811558:	dc001215 	stw	r16,72(sp)
  81155c:	df001304 	addi	fp,sp,76
  811560:	e13ffd15 	stw	r4,-12(fp)
  811564:	e17ffe15 	stw	r5,-8(fp)
  811568:	e0bffd17 	ldw	r2,-12(fp)
  81156c:	10807917 	ldw	r2,484(r2)
  811570:	e0bff815 	stw	r2,-32(fp)
  811574:	e0bff817 	ldw	r2,-32(fp)
  811578:	10800617 	ldw	r2,24(r2)
  81157c:	e0bff915 	stw	r2,-28(fp)
  811580:	e0bffe17 	ldw	r2,-8(fp)
  811584:	10800017 	ldw	r2,0(r2)
  811588:	e0bff115 	stw	r2,-60(fp)
  81158c:	e0bffe17 	ldw	r2,-8(fp)
  811590:	10800117 	ldw	r2,4(r2)
  811594:	e0bff215 	stw	r2,-56(fp)
  811598:	e0bffe17 	ldw	r2,-8(fp)
  81159c:	10800217 	ldw	r2,8(r2)
  8115a0:	e0bff315 	stw	r2,-52(fp)
  8115a4:	e0bffe17 	ldw	r2,-8(fp)
  8115a8:	10800317 	ldw	r2,12(r2)
  8115ac:	e0bff415 	stw	r2,-48(fp)
  8115b0:	e0bffe17 	ldw	r2,-8(fp)
  8115b4:	10800417 	ldw	r2,16(r2)
  8115b8:	e0bff515 	stw	r2,-44(fp)
  8115bc:	e0bffe17 	ldw	r2,-8(fp)
  8115c0:	10800517 	ldw	r2,20(r2)
  8115c4:	e0bff615 	stw	r2,-40(fp)
  8115c8:	e0bff217 	ldw	r2,-56(fp)
  8115cc:	e0fff117 	ldw	r3,-60(fp)
  8115d0:	1880350e 	bge	r3,r2,8116a8 <update_box+0x15c>
  8115d4:	e0bff117 	ldw	r2,-60(fp)
  8115d8:	e0bfee15 	stw	r2,-72(fp)
  8115dc:	00002f06 	br	81169c <update_box+0x150>
  8115e0:	e0bff317 	ldw	r2,-52(fp)
  8115e4:	e0bfef15 	stw	r2,-68(fp)
  8115e8:	00002606 	br	811684 <update_box+0x138>
  8115ec:	e0bfee17 	ldw	r2,-72(fp)
  8115f0:	1085883a 	add	r2,r2,r2
  8115f4:	1085883a 	add	r2,r2,r2
  8115f8:	1007883a 	mov	r3,r2
  8115fc:	e0bff917 	ldw	r2,-28(fp)
  811600:	10c5883a 	add	r2,r2,r3
  811604:	10c00017 	ldw	r3,0(r2)
  811608:	e0bfef17 	ldw	r2,-68(fp)
  81160c:	100491ba 	slli	r2,r2,6
  811610:	1887883a 	add	r3,r3,r2
  811614:	e0bff517 	ldw	r2,-44(fp)
  811618:	1085883a 	add	r2,r2,r2
  81161c:	1885883a 	add	r2,r3,r2
  811620:	e0bfed15 	stw	r2,-76(fp)
  811624:	e0bff517 	ldw	r2,-44(fp)
  811628:	e0bff015 	stw	r2,-64(fp)
  81162c:	00000f06 	br	81166c <update_box+0x120>
  811630:	e0bfed17 	ldw	r2,-76(fp)
  811634:	10c00084 	addi	r3,r2,2
  811638:	e0ffed15 	stw	r3,-76(fp)
  81163c:	1080000b 	ldhu	r2,0(r2)
  811640:	10bfffcc 	andi	r2,r2,65535
  811644:	10000626 	beq	r2,zero,811660 <update_box+0x114>
  811648:	e0bfee17 	ldw	r2,-72(fp)
  81164c:	e0bff115 	stw	r2,-60(fp)
  811650:	e0bffe17 	ldw	r2,-8(fp)
  811654:	e0fff117 	ldw	r3,-60(fp)
  811658:	10c00015 	stw	r3,0(r2)
  81165c:	00001206 	br	8116a8 <update_box+0x15c>
  811660:	e0bff017 	ldw	r2,-64(fp)
  811664:	10800044 	addi	r2,r2,1
  811668:	e0bff015 	stw	r2,-64(fp)
  81166c:	e0bff017 	ldw	r2,-64(fp)
  811670:	e0fff617 	ldw	r3,-40(fp)
  811674:	18bfee0e 	bge	r3,r2,811630 <__alt_mem_epcs_flash_controller_0+0xff808630>
  811678:	e0bfef17 	ldw	r2,-68(fp)
  81167c:	10800044 	addi	r2,r2,1
  811680:	e0bfef15 	stw	r2,-68(fp)
  811684:	e0bfef17 	ldw	r2,-68(fp)
  811688:	e0fff417 	ldw	r3,-48(fp)
  81168c:	18bfd70e 	bge	r3,r2,8115ec <__alt_mem_epcs_flash_controller_0+0xff8085ec>
  811690:	e0bfee17 	ldw	r2,-72(fp)
  811694:	10800044 	addi	r2,r2,1
  811698:	e0bfee15 	stw	r2,-72(fp)
  81169c:	e0bfee17 	ldw	r2,-72(fp)
  8116a0:	e0fff217 	ldw	r3,-56(fp)
  8116a4:	18bfce0e 	bge	r3,r2,8115e0 <__alt_mem_epcs_flash_controller_0+0xff8085e0>
  8116a8:	e0bff217 	ldw	r2,-56(fp)
  8116ac:	e0fff117 	ldw	r3,-60(fp)
  8116b0:	1880350e 	bge	r3,r2,811788 <update_box+0x23c>
  8116b4:	e0bff217 	ldw	r2,-56(fp)
  8116b8:	e0bfee15 	stw	r2,-72(fp)
  8116bc:	00002f06 	br	81177c <update_box+0x230>
  8116c0:	e0bff317 	ldw	r2,-52(fp)
  8116c4:	e0bfef15 	stw	r2,-68(fp)
  8116c8:	00002606 	br	811764 <update_box+0x218>
  8116cc:	e0bfee17 	ldw	r2,-72(fp)
  8116d0:	1085883a 	add	r2,r2,r2
  8116d4:	1085883a 	add	r2,r2,r2
  8116d8:	1007883a 	mov	r3,r2
  8116dc:	e0bff917 	ldw	r2,-28(fp)
  8116e0:	10c5883a 	add	r2,r2,r3
  8116e4:	10c00017 	ldw	r3,0(r2)
  8116e8:	e0bfef17 	ldw	r2,-68(fp)
  8116ec:	100491ba 	slli	r2,r2,6
  8116f0:	1887883a 	add	r3,r3,r2
  8116f4:	e0bff517 	ldw	r2,-44(fp)
  8116f8:	1085883a 	add	r2,r2,r2
  8116fc:	1885883a 	add	r2,r3,r2
  811700:	e0bfed15 	stw	r2,-76(fp)
  811704:	e0bff517 	ldw	r2,-44(fp)
  811708:	e0bff015 	stw	r2,-64(fp)
  81170c:	00000f06 	br	81174c <update_box+0x200>
  811710:	e0bfed17 	ldw	r2,-76(fp)
  811714:	10c00084 	addi	r3,r2,2
  811718:	e0ffed15 	stw	r3,-76(fp)
  81171c:	1080000b 	ldhu	r2,0(r2)
  811720:	10bfffcc 	andi	r2,r2,65535
  811724:	10000626 	beq	r2,zero,811740 <update_box+0x1f4>
  811728:	e0bfee17 	ldw	r2,-72(fp)
  81172c:	e0bff215 	stw	r2,-56(fp)
  811730:	e0bffe17 	ldw	r2,-8(fp)
  811734:	e0fff217 	ldw	r3,-56(fp)
  811738:	10c00115 	stw	r3,4(r2)
  81173c:	00001206 	br	811788 <update_box+0x23c>
  811740:	e0bff017 	ldw	r2,-64(fp)
  811744:	10800044 	addi	r2,r2,1
  811748:	e0bff015 	stw	r2,-64(fp)
  81174c:	e0bff017 	ldw	r2,-64(fp)
  811750:	e0fff617 	ldw	r3,-40(fp)
  811754:	18bfee0e 	bge	r3,r2,811710 <__alt_mem_epcs_flash_controller_0+0xff808710>
  811758:	e0bfef17 	ldw	r2,-68(fp)
  81175c:	10800044 	addi	r2,r2,1
  811760:	e0bfef15 	stw	r2,-68(fp)
  811764:	e0bfef17 	ldw	r2,-68(fp)
  811768:	e0fff417 	ldw	r3,-48(fp)
  81176c:	18bfd70e 	bge	r3,r2,8116cc <__alt_mem_epcs_flash_controller_0+0xff8086cc>
  811770:	e0bfee17 	ldw	r2,-72(fp)
  811774:	10bfffc4 	addi	r2,r2,-1
  811778:	e0bfee15 	stw	r2,-72(fp)
  81177c:	e0ffee17 	ldw	r3,-72(fp)
  811780:	e0bff117 	ldw	r2,-60(fp)
  811784:	18bfce0e 	bge	r3,r2,8116c0 <__alt_mem_epcs_flash_controller_0+0xff8086c0>
  811788:	e0bff417 	ldw	r2,-48(fp)
  81178c:	e0fff317 	ldw	r3,-52(fp)
  811790:	1880350e 	bge	r3,r2,811868 <update_box+0x31c>
  811794:	e0bff317 	ldw	r2,-52(fp)
  811798:	e0bfef15 	stw	r2,-68(fp)
  81179c:	00002f06 	br	81185c <update_box+0x310>
  8117a0:	e0bff117 	ldw	r2,-60(fp)
  8117a4:	e0bfee15 	stw	r2,-72(fp)
  8117a8:	00002606 	br	811844 <update_box+0x2f8>
  8117ac:	e0bfee17 	ldw	r2,-72(fp)
  8117b0:	1085883a 	add	r2,r2,r2
  8117b4:	1085883a 	add	r2,r2,r2
  8117b8:	1007883a 	mov	r3,r2
  8117bc:	e0bff917 	ldw	r2,-28(fp)
  8117c0:	10c5883a 	add	r2,r2,r3
  8117c4:	10c00017 	ldw	r3,0(r2)
  8117c8:	e0bfef17 	ldw	r2,-68(fp)
  8117cc:	100491ba 	slli	r2,r2,6
  8117d0:	1887883a 	add	r3,r3,r2
  8117d4:	e0bff517 	ldw	r2,-44(fp)
  8117d8:	1085883a 	add	r2,r2,r2
  8117dc:	1885883a 	add	r2,r3,r2
  8117e0:	e0bfed15 	stw	r2,-76(fp)
  8117e4:	e0bff517 	ldw	r2,-44(fp)
  8117e8:	e0bff015 	stw	r2,-64(fp)
  8117ec:	00000f06 	br	81182c <update_box+0x2e0>
  8117f0:	e0bfed17 	ldw	r2,-76(fp)
  8117f4:	10c00084 	addi	r3,r2,2
  8117f8:	e0ffed15 	stw	r3,-76(fp)
  8117fc:	1080000b 	ldhu	r2,0(r2)
  811800:	10bfffcc 	andi	r2,r2,65535
  811804:	10000626 	beq	r2,zero,811820 <update_box+0x2d4>
  811808:	e0bfef17 	ldw	r2,-68(fp)
  81180c:	e0bff315 	stw	r2,-52(fp)
  811810:	e0bffe17 	ldw	r2,-8(fp)
  811814:	e0fff317 	ldw	r3,-52(fp)
  811818:	10c00215 	stw	r3,8(r2)
  81181c:	00001206 	br	811868 <update_box+0x31c>
  811820:	e0bff017 	ldw	r2,-64(fp)
  811824:	10800044 	addi	r2,r2,1
  811828:	e0bff015 	stw	r2,-64(fp)
  81182c:	e0bff017 	ldw	r2,-64(fp)
  811830:	e0fff617 	ldw	r3,-40(fp)
  811834:	18bfee0e 	bge	r3,r2,8117f0 <__alt_mem_epcs_flash_controller_0+0xff8087f0>
  811838:	e0bfee17 	ldw	r2,-72(fp)
  81183c:	10800044 	addi	r2,r2,1
  811840:	e0bfee15 	stw	r2,-72(fp)
  811844:	e0bfee17 	ldw	r2,-72(fp)
  811848:	e0fff217 	ldw	r3,-56(fp)
  81184c:	18bfd70e 	bge	r3,r2,8117ac <__alt_mem_epcs_flash_controller_0+0xff8087ac>
  811850:	e0bfef17 	ldw	r2,-68(fp)
  811854:	10800044 	addi	r2,r2,1
  811858:	e0bfef15 	stw	r2,-68(fp)
  81185c:	e0bfef17 	ldw	r2,-68(fp)
  811860:	e0fff417 	ldw	r3,-48(fp)
  811864:	18bfce0e 	bge	r3,r2,8117a0 <__alt_mem_epcs_flash_controller_0+0xff8087a0>
  811868:	e0bff417 	ldw	r2,-48(fp)
  81186c:	e0fff317 	ldw	r3,-52(fp)
  811870:	1880350e 	bge	r3,r2,811948 <update_box+0x3fc>
  811874:	e0bff417 	ldw	r2,-48(fp)
  811878:	e0bfef15 	stw	r2,-68(fp)
  81187c:	00002f06 	br	81193c <update_box+0x3f0>
  811880:	e0bff117 	ldw	r2,-60(fp)
  811884:	e0bfee15 	stw	r2,-72(fp)
  811888:	00002606 	br	811924 <update_box+0x3d8>
  81188c:	e0bfee17 	ldw	r2,-72(fp)
  811890:	1085883a 	add	r2,r2,r2
  811894:	1085883a 	add	r2,r2,r2
  811898:	1007883a 	mov	r3,r2
  81189c:	e0bff917 	ldw	r2,-28(fp)
  8118a0:	10c5883a 	add	r2,r2,r3
  8118a4:	10c00017 	ldw	r3,0(r2)
  8118a8:	e0bfef17 	ldw	r2,-68(fp)
  8118ac:	100491ba 	slli	r2,r2,6
  8118b0:	1887883a 	add	r3,r3,r2
  8118b4:	e0bff517 	ldw	r2,-44(fp)
  8118b8:	1085883a 	add	r2,r2,r2
  8118bc:	1885883a 	add	r2,r3,r2
  8118c0:	e0bfed15 	stw	r2,-76(fp)
  8118c4:	e0bff517 	ldw	r2,-44(fp)
  8118c8:	e0bff015 	stw	r2,-64(fp)
  8118cc:	00000f06 	br	81190c <update_box+0x3c0>
  8118d0:	e0bfed17 	ldw	r2,-76(fp)
  8118d4:	10c00084 	addi	r3,r2,2
  8118d8:	e0ffed15 	stw	r3,-76(fp)
  8118dc:	1080000b 	ldhu	r2,0(r2)
  8118e0:	10bfffcc 	andi	r2,r2,65535
  8118e4:	10000626 	beq	r2,zero,811900 <update_box+0x3b4>
  8118e8:	e0bfef17 	ldw	r2,-68(fp)
  8118ec:	e0bff415 	stw	r2,-48(fp)
  8118f0:	e0bffe17 	ldw	r2,-8(fp)
  8118f4:	e0fff417 	ldw	r3,-48(fp)
  8118f8:	10c00315 	stw	r3,12(r2)
  8118fc:	00001206 	br	811948 <update_box+0x3fc>
  811900:	e0bff017 	ldw	r2,-64(fp)
  811904:	10800044 	addi	r2,r2,1
  811908:	e0bff015 	stw	r2,-64(fp)
  81190c:	e0bff017 	ldw	r2,-64(fp)
  811910:	e0fff617 	ldw	r3,-40(fp)
  811914:	18bfee0e 	bge	r3,r2,8118d0 <__alt_mem_epcs_flash_controller_0+0xff8088d0>
  811918:	e0bfee17 	ldw	r2,-72(fp)
  81191c:	10800044 	addi	r2,r2,1
  811920:	e0bfee15 	stw	r2,-72(fp)
  811924:	e0bfee17 	ldw	r2,-72(fp)
  811928:	e0fff217 	ldw	r3,-56(fp)
  81192c:	18bfd70e 	bge	r3,r2,81188c <__alt_mem_epcs_flash_controller_0+0xff80888c>
  811930:	e0bfef17 	ldw	r2,-68(fp)
  811934:	10bfffc4 	addi	r2,r2,-1
  811938:	e0bfef15 	stw	r2,-68(fp)
  81193c:	e0ffef17 	ldw	r3,-68(fp)
  811940:	e0bff317 	ldw	r2,-52(fp)
  811944:	18bfce0e 	bge	r3,r2,811880 <__alt_mem_epcs_flash_controller_0+0xff808880>
  811948:	e0bff617 	ldw	r2,-40(fp)
  81194c:	e0fff517 	ldw	r3,-44(fp)
  811950:	1880360e 	bge	r3,r2,811a2c <update_box+0x4e0>
  811954:	e0bff517 	ldw	r2,-44(fp)
  811958:	e0bff015 	stw	r2,-64(fp)
  81195c:	00003006 	br	811a20 <update_box+0x4d4>
  811960:	e0bff117 	ldw	r2,-60(fp)
  811964:	e0bfee15 	stw	r2,-72(fp)
  811968:	00002706 	br	811a08 <update_box+0x4bc>
  81196c:	e0bfee17 	ldw	r2,-72(fp)
  811970:	1085883a 	add	r2,r2,r2
  811974:	1085883a 	add	r2,r2,r2
  811978:	1007883a 	mov	r3,r2
  81197c:	e0bff917 	ldw	r2,-28(fp)
  811980:	10c5883a 	add	r2,r2,r3
  811984:	10c00017 	ldw	r3,0(r2)
  811988:	e0bff317 	ldw	r2,-52(fp)
  81198c:	100491ba 	slli	r2,r2,6
  811990:	1887883a 	add	r3,r3,r2
  811994:	e0bff017 	ldw	r2,-64(fp)
  811998:	1085883a 	add	r2,r2,r2
  81199c:	1885883a 	add	r2,r3,r2
  8119a0:	e0bfed15 	stw	r2,-76(fp)
  8119a4:	e0bff317 	ldw	r2,-52(fp)
  8119a8:	e0bfef15 	stw	r2,-68(fp)
  8119ac:	00001006 	br	8119f0 <update_box+0x4a4>
  8119b0:	e0bfed17 	ldw	r2,-76(fp)
  8119b4:	1080000b 	ldhu	r2,0(r2)
  8119b8:	10bfffcc 	andi	r2,r2,65535
  8119bc:	10000626 	beq	r2,zero,8119d8 <update_box+0x48c>
  8119c0:	e0bff017 	ldw	r2,-64(fp)
  8119c4:	e0bff515 	stw	r2,-44(fp)
  8119c8:	e0bffe17 	ldw	r2,-8(fp)
  8119cc:	e0fff517 	ldw	r3,-44(fp)
  8119d0:	10c00415 	stw	r3,16(r2)
  8119d4:	00001506 	br	811a2c <update_box+0x4e0>
  8119d8:	e0bfef17 	ldw	r2,-68(fp)
  8119dc:	10800044 	addi	r2,r2,1
  8119e0:	e0bfef15 	stw	r2,-68(fp)
  8119e4:	e0bfed17 	ldw	r2,-76(fp)
  8119e8:	10801004 	addi	r2,r2,64
  8119ec:	e0bfed15 	stw	r2,-76(fp)
  8119f0:	e0bfef17 	ldw	r2,-68(fp)
  8119f4:	e0fff417 	ldw	r3,-48(fp)
  8119f8:	18bfed0e 	bge	r3,r2,8119b0 <__alt_mem_epcs_flash_controller_0+0xff8089b0>
  8119fc:	e0bfee17 	ldw	r2,-72(fp)
  811a00:	10800044 	addi	r2,r2,1
  811a04:	e0bfee15 	stw	r2,-72(fp)
  811a08:	e0bfee17 	ldw	r2,-72(fp)
  811a0c:	e0fff217 	ldw	r3,-56(fp)
  811a10:	18bfd60e 	bge	r3,r2,81196c <__alt_mem_epcs_flash_controller_0+0xff80896c>
  811a14:	e0bff017 	ldw	r2,-64(fp)
  811a18:	10800044 	addi	r2,r2,1
  811a1c:	e0bff015 	stw	r2,-64(fp)
  811a20:	e0bff017 	ldw	r2,-64(fp)
  811a24:	e0fff617 	ldw	r3,-40(fp)
  811a28:	18bfcd0e 	bge	r3,r2,811960 <__alt_mem_epcs_flash_controller_0+0xff808960>
  811a2c:	e0bff617 	ldw	r2,-40(fp)
  811a30:	e0fff517 	ldw	r3,-44(fp)
  811a34:	1880360e 	bge	r3,r2,811b10 <update_box+0x5c4>
  811a38:	e0bff617 	ldw	r2,-40(fp)
  811a3c:	e0bff015 	stw	r2,-64(fp)
  811a40:	00003006 	br	811b04 <update_box+0x5b8>
  811a44:	e0bff117 	ldw	r2,-60(fp)
  811a48:	e0bfee15 	stw	r2,-72(fp)
  811a4c:	00002706 	br	811aec <update_box+0x5a0>
  811a50:	e0bfee17 	ldw	r2,-72(fp)
  811a54:	1085883a 	add	r2,r2,r2
  811a58:	1085883a 	add	r2,r2,r2
  811a5c:	1007883a 	mov	r3,r2
  811a60:	e0bff917 	ldw	r2,-28(fp)
  811a64:	10c5883a 	add	r2,r2,r3
  811a68:	10c00017 	ldw	r3,0(r2)
  811a6c:	e0bff317 	ldw	r2,-52(fp)
  811a70:	100491ba 	slli	r2,r2,6
  811a74:	1887883a 	add	r3,r3,r2
  811a78:	e0bff017 	ldw	r2,-64(fp)
  811a7c:	1085883a 	add	r2,r2,r2
  811a80:	1885883a 	add	r2,r3,r2
  811a84:	e0bfed15 	stw	r2,-76(fp)
  811a88:	e0bff317 	ldw	r2,-52(fp)
  811a8c:	e0bfef15 	stw	r2,-68(fp)
  811a90:	00001006 	br	811ad4 <update_box+0x588>
  811a94:	e0bfed17 	ldw	r2,-76(fp)
  811a98:	1080000b 	ldhu	r2,0(r2)
  811a9c:	10bfffcc 	andi	r2,r2,65535
  811aa0:	10000626 	beq	r2,zero,811abc <update_box+0x570>
  811aa4:	e0bff017 	ldw	r2,-64(fp)
  811aa8:	e0bff615 	stw	r2,-40(fp)
  811aac:	e0bffe17 	ldw	r2,-8(fp)
  811ab0:	e0fff617 	ldw	r3,-40(fp)
  811ab4:	10c00515 	stw	r3,20(r2)
  811ab8:	00001506 	br	811b10 <update_box+0x5c4>
  811abc:	e0bfef17 	ldw	r2,-68(fp)
  811ac0:	10800044 	addi	r2,r2,1
  811ac4:	e0bfef15 	stw	r2,-68(fp)
  811ac8:	e0bfed17 	ldw	r2,-76(fp)
  811acc:	10801004 	addi	r2,r2,64
  811ad0:	e0bfed15 	stw	r2,-76(fp)
  811ad4:	e0bfef17 	ldw	r2,-68(fp)
  811ad8:	e0fff417 	ldw	r3,-48(fp)
  811adc:	18bfed0e 	bge	r3,r2,811a94 <__alt_mem_epcs_flash_controller_0+0xff808a94>
  811ae0:	e0bfee17 	ldw	r2,-72(fp)
  811ae4:	10800044 	addi	r2,r2,1
  811ae8:	e0bfee15 	stw	r2,-72(fp)
  811aec:	e0bfee17 	ldw	r2,-72(fp)
  811af0:	e0fff217 	ldw	r3,-56(fp)
  811af4:	18bfd60e 	bge	r3,r2,811a50 <__alt_mem_epcs_flash_controller_0+0xff808a50>
  811af8:	e0bff017 	ldw	r2,-64(fp)
  811afc:	10bfffc4 	addi	r2,r2,-1
  811b00:	e0bff015 	stw	r2,-64(fp)
  811b04:	e0fff017 	ldw	r3,-64(fp)
  811b08:	e0bff517 	ldw	r2,-44(fp)
  811b0c:	18bfcd0e 	bge	r3,r2,811a44 <__alt_mem_epcs_flash_controller_0+0xff808a44>
  811b10:	e0fff217 	ldw	r3,-56(fp)
  811b14:	e0bff117 	ldw	r2,-60(fp)
  811b18:	1885c83a 	sub	r2,r3,r2
  811b1c:	100490fa 	slli	r2,r2,3
  811b20:	1085883a 	add	r2,r2,r2
  811b24:	e0bffa15 	stw	r2,-24(fp)
  811b28:	e0fff417 	ldw	r3,-48(fp)
  811b2c:	e0bff317 	ldw	r2,-52(fp)
  811b30:	1885c83a 	sub	r2,r3,r2
  811b34:	1085883a 	add	r2,r2,r2
  811b38:	1085883a 	add	r2,r2,r2
  811b3c:	1007883a 	mov	r3,r2
  811b40:	1805883a 	mov	r2,r3
  811b44:	1085883a 	add	r2,r2,r2
  811b48:	10c5883a 	add	r2,r2,r3
  811b4c:	e0bffb15 	stw	r2,-20(fp)
  811b50:	e0fff617 	ldw	r3,-40(fp)
  811b54:	e0bff517 	ldw	r2,-44(fp)
  811b58:	1885c83a 	sub	r2,r3,r2
  811b5c:	100490fa 	slli	r2,r2,3
  811b60:	e0bffc15 	stw	r2,-16(fp)
  811b64:	e17ffa17 	ldw	r5,-24(fp)
  811b68:	e13ffa17 	ldw	r4,-24(fp)
  811b6c:	08301e80 	call	8301e8 <__mulsi3>
  811b70:	1021883a 	mov	r16,r2
  811b74:	e17ffb17 	ldw	r5,-20(fp)
  811b78:	e13ffb17 	ldw	r4,-20(fp)
  811b7c:	08301e80 	call	8301e8 <__mulsi3>
  811b80:	80a1883a 	add	r16,r16,r2
  811b84:	e17ffc17 	ldw	r5,-16(fp)
  811b88:	e13ffc17 	ldw	r4,-16(fp)
  811b8c:	08301e80 	call	8301e8 <__mulsi3>
  811b90:	8087883a 	add	r3,r16,r2
  811b94:	e0bffe17 	ldw	r2,-8(fp)
  811b98:	10c00615 	stw	r3,24(r2)
  811b9c:	e03ff715 	stw	zero,-36(fp)
  811ba0:	e0bff117 	ldw	r2,-60(fp)
  811ba4:	e0bfee15 	stw	r2,-72(fp)
  811ba8:	00002d06 	br	811c60 <update_box+0x714>
  811bac:	e0bff317 	ldw	r2,-52(fp)
  811bb0:	e0bfef15 	stw	r2,-68(fp)
  811bb4:	00002406 	br	811c48 <update_box+0x6fc>
  811bb8:	e0bfee17 	ldw	r2,-72(fp)
  811bbc:	1085883a 	add	r2,r2,r2
  811bc0:	1085883a 	add	r2,r2,r2
  811bc4:	1007883a 	mov	r3,r2
  811bc8:	e0bff917 	ldw	r2,-28(fp)
  811bcc:	10c5883a 	add	r2,r2,r3
  811bd0:	10c00017 	ldw	r3,0(r2)
  811bd4:	e0bfef17 	ldw	r2,-68(fp)
  811bd8:	100491ba 	slli	r2,r2,6
  811bdc:	1887883a 	add	r3,r3,r2
  811be0:	e0bff517 	ldw	r2,-44(fp)
  811be4:	1085883a 	add	r2,r2,r2
  811be8:	1885883a 	add	r2,r3,r2
  811bec:	e0bfed15 	stw	r2,-76(fp)
  811bf0:	e0bff517 	ldw	r2,-44(fp)
  811bf4:	e0bff015 	stw	r2,-64(fp)
  811bf8:	00000d06 	br	811c30 <update_box+0x6e4>
  811bfc:	e0bfed17 	ldw	r2,-76(fp)
  811c00:	1080000b 	ldhu	r2,0(r2)
  811c04:	10bfffcc 	andi	r2,r2,65535
  811c08:	10000326 	beq	r2,zero,811c18 <update_box+0x6cc>
  811c0c:	e0bff717 	ldw	r2,-36(fp)
  811c10:	10800044 	addi	r2,r2,1
  811c14:	e0bff715 	stw	r2,-36(fp)
  811c18:	e0bff017 	ldw	r2,-64(fp)
  811c1c:	10800044 	addi	r2,r2,1
  811c20:	e0bff015 	stw	r2,-64(fp)
  811c24:	e0bfed17 	ldw	r2,-76(fp)
  811c28:	10800084 	addi	r2,r2,2
  811c2c:	e0bfed15 	stw	r2,-76(fp)
  811c30:	e0bff017 	ldw	r2,-64(fp)
  811c34:	e0fff617 	ldw	r3,-40(fp)
  811c38:	18bff00e 	bge	r3,r2,811bfc <__alt_mem_epcs_flash_controller_0+0xff808bfc>
  811c3c:	e0bfef17 	ldw	r2,-68(fp)
  811c40:	10800044 	addi	r2,r2,1
  811c44:	e0bfef15 	stw	r2,-68(fp)
  811c48:	e0bfef17 	ldw	r2,-68(fp)
  811c4c:	e0fff417 	ldw	r3,-48(fp)
  811c50:	18bfd90e 	bge	r3,r2,811bb8 <__alt_mem_epcs_flash_controller_0+0xff808bb8>
  811c54:	e0bfee17 	ldw	r2,-72(fp)
  811c58:	10800044 	addi	r2,r2,1
  811c5c:	e0bfee15 	stw	r2,-72(fp)
  811c60:	e0bfee17 	ldw	r2,-72(fp)
  811c64:	e0fff217 	ldw	r3,-56(fp)
  811c68:	18bfd00e 	bge	r3,r2,811bac <__alt_mem_epcs_flash_controller_0+0xff808bac>
  811c6c:	e0bffe17 	ldw	r2,-8(fp)
  811c70:	e0fff717 	ldw	r3,-36(fp)
  811c74:	10c00715 	stw	r3,28(r2)
  811c78:	0001883a 	nop
  811c7c:	e6ffff04 	addi	sp,fp,-4
  811c80:	dfc00217 	ldw	ra,8(sp)
  811c84:	df000117 	ldw	fp,4(sp)
  811c88:	dc000017 	ldw	r16,0(sp)
  811c8c:	dec00304 	addi	sp,sp,12
  811c90:	f800283a 	ret

00811c94 <median_cut>:
  811c94:	defff204 	addi	sp,sp,-56
  811c98:	dfc00d15 	stw	ra,52(sp)
  811c9c:	df000c15 	stw	fp,48(sp)
  811ca0:	dc400b15 	stw	r17,44(sp)
  811ca4:	dc000a15 	stw	r16,40(sp)
  811ca8:	df000c04 	addi	fp,sp,48
  811cac:	e13ffa15 	stw	r4,-24(fp)
  811cb0:	e17ffb15 	stw	r5,-20(fp)
  811cb4:	e1bffc15 	stw	r6,-16(fp)
  811cb8:	e1fffd15 	stw	r7,-12(fp)
  811cbc:	00007906 	br	811ea4 <median_cut+0x210>
  811cc0:	e0bffc17 	ldw	r2,-16(fp)
  811cc4:	1085883a 	add	r2,r2,r2
  811cc8:	1007883a 	mov	r3,r2
  811ccc:	e0bffd17 	ldw	r2,-12(fp)
  811cd0:	10c00516 	blt	r2,r3,811ce8 <median_cut+0x54>
  811cd4:	e17ffc17 	ldw	r5,-16(fp)
  811cd8:	e13ffb17 	ldw	r4,-20(fp)
  811cdc:	081145c0 	call	81145c <find_biggest_color_pop>
  811ce0:	1021883a 	mov	r16,r2
  811ce4:	00000406 	br	811cf8 <median_cut+0x64>
  811ce8:	e17ffc17 	ldw	r5,-16(fp)
  811cec:	e13ffb17 	ldw	r4,-20(fp)
  811cf0:	08114d80 	call	8114d8 <find_biggest_volume>
  811cf4:	1021883a 	mov	r16,r2
  811cf8:	80006e26 	beq	r16,zero,811eb4 <median_cut+0x220>
  811cfc:	e0bffc17 	ldw	r2,-16(fp)
  811d00:	1004917a 	slli	r2,r2,5
  811d04:	e0fffb17 	ldw	r3,-20(fp)
  811d08:	18a3883a 	add	r17,r3,r2
  811d0c:	80800117 	ldw	r2,4(r16)
  811d10:	88800115 	stw	r2,4(r17)
  811d14:	80800317 	ldw	r2,12(r16)
  811d18:	88800315 	stw	r2,12(r17)
  811d1c:	80800517 	ldw	r2,20(r16)
  811d20:	88800515 	stw	r2,20(r17)
  811d24:	80800017 	ldw	r2,0(r16)
  811d28:	88800015 	stw	r2,0(r17)
  811d2c:	80800217 	ldw	r2,8(r16)
  811d30:	88800215 	stw	r2,8(r17)
  811d34:	80800417 	ldw	r2,16(r16)
  811d38:	88800415 	stw	r2,16(r17)
  811d3c:	80c00117 	ldw	r3,4(r16)
  811d40:	80800017 	ldw	r2,0(r16)
  811d44:	1885c83a 	sub	r2,r3,r2
  811d48:	100490fa 	slli	r2,r2,3
  811d4c:	1085883a 	add	r2,r2,r2
  811d50:	e0bff615 	stw	r2,-40(fp)
  811d54:	80c00317 	ldw	r3,12(r16)
  811d58:	80800217 	ldw	r2,8(r16)
  811d5c:	1885c83a 	sub	r2,r3,r2
  811d60:	1085883a 	add	r2,r2,r2
  811d64:	1085883a 	add	r2,r2,r2
  811d68:	1007883a 	mov	r3,r2
  811d6c:	1805883a 	mov	r2,r3
  811d70:	1085883a 	add	r2,r2,r2
  811d74:	10c5883a 	add	r2,r2,r3
  811d78:	e0bff715 	stw	r2,-36(fp)
  811d7c:	80c00517 	ldw	r3,20(r16)
  811d80:	80800417 	ldw	r2,16(r16)
  811d84:	1885c83a 	sub	r2,r3,r2
  811d88:	100490fa 	slli	r2,r2,3
  811d8c:	e0bff815 	stw	r2,-32(fp)
  811d90:	e0bff717 	ldw	r2,-36(fp)
  811d94:	e0bff515 	stw	r2,-44(fp)
  811d98:	00800044 	movi	r2,1
  811d9c:	e0bff415 	stw	r2,-48(fp)
  811da0:	e0bff617 	ldw	r2,-40(fp)
  811da4:	e0fff517 	ldw	r3,-44(fp)
  811da8:	1880030e 	bge	r3,r2,811db8 <median_cut+0x124>
  811dac:	e0bff617 	ldw	r2,-40(fp)
  811db0:	e0bff515 	stw	r2,-44(fp)
  811db4:	e03ff415 	stw	zero,-48(fp)
  811db8:	e0bff817 	ldw	r2,-32(fp)
  811dbc:	e0fff517 	ldw	r3,-44(fp)
  811dc0:	1880020e 	bge	r3,r2,811dcc <median_cut+0x138>
  811dc4:	00800084 	movi	r2,2
  811dc8:	e0bff415 	stw	r2,-48(fp)
  811dcc:	e0bff417 	ldw	r2,-48(fp)
  811dd0:	10c00060 	cmpeqi	r3,r2,1
  811dd4:	1800101e 	bne	r3,zero,811e18 <median_cut+0x184>
  811dd8:	10c000a0 	cmpeqi	r3,r2,2
  811ddc:	18001b1e 	bne	r3,zero,811e4c <median_cut+0x1b8>
  811de0:	1000271e 	bne	r2,zero,811e80 <median_cut+0x1ec>
  811de4:	80c00117 	ldw	r3,4(r16)
  811de8:	80800017 	ldw	r2,0(r16)
  811dec:	1885883a 	add	r2,r3,r2
  811df0:	1006d7fa 	srli	r3,r2,31
  811df4:	1885883a 	add	r2,r3,r2
  811df8:	1005d07a 	srai	r2,r2,1
  811dfc:	e0bff915 	stw	r2,-28(fp)
  811e00:	e0bff917 	ldw	r2,-28(fp)
  811e04:	80800115 	stw	r2,4(r16)
  811e08:	e0bff917 	ldw	r2,-28(fp)
  811e0c:	10800044 	addi	r2,r2,1
  811e10:	88800015 	stw	r2,0(r17)
  811e14:	00001a06 	br	811e80 <median_cut+0x1ec>
  811e18:	80c00317 	ldw	r3,12(r16)
  811e1c:	80800217 	ldw	r2,8(r16)
  811e20:	1885883a 	add	r2,r3,r2
  811e24:	1006d7fa 	srli	r3,r2,31
  811e28:	1885883a 	add	r2,r3,r2
  811e2c:	1005d07a 	srai	r2,r2,1
  811e30:	e0bff915 	stw	r2,-28(fp)
  811e34:	e0bff917 	ldw	r2,-28(fp)
  811e38:	80800315 	stw	r2,12(r16)
  811e3c:	e0bff917 	ldw	r2,-28(fp)
  811e40:	10800044 	addi	r2,r2,1
  811e44:	88800215 	stw	r2,8(r17)
  811e48:	00000d06 	br	811e80 <median_cut+0x1ec>
  811e4c:	80c00517 	ldw	r3,20(r16)
  811e50:	80800417 	ldw	r2,16(r16)
  811e54:	1885883a 	add	r2,r3,r2
  811e58:	1006d7fa 	srli	r3,r2,31
  811e5c:	1885883a 	add	r2,r3,r2
  811e60:	1005d07a 	srai	r2,r2,1
  811e64:	e0bff915 	stw	r2,-28(fp)
  811e68:	e0bff917 	ldw	r2,-28(fp)
  811e6c:	80800515 	stw	r2,20(r16)
  811e70:	e0bff917 	ldw	r2,-28(fp)
  811e74:	10800044 	addi	r2,r2,1
  811e78:	88800415 	stw	r2,16(r17)
  811e7c:	0001883a 	nop
  811e80:	800b883a 	mov	r5,r16
  811e84:	e13ffa17 	ldw	r4,-24(fp)
  811e88:	081154c0 	call	81154c <update_box>
  811e8c:	880b883a 	mov	r5,r17
  811e90:	e13ffa17 	ldw	r4,-24(fp)
  811e94:	081154c0 	call	81154c <update_box>
  811e98:	e0bffc17 	ldw	r2,-16(fp)
  811e9c:	10800044 	addi	r2,r2,1
  811ea0:	e0bffc15 	stw	r2,-16(fp)
  811ea4:	e0fffc17 	ldw	r3,-16(fp)
  811ea8:	e0bffd17 	ldw	r2,-12(fp)
  811eac:	18bf8416 	blt	r3,r2,811cc0 <__alt_mem_epcs_flash_controller_0+0xff808cc0>
  811eb0:	00000106 	br	811eb8 <median_cut+0x224>
  811eb4:	0001883a 	nop
  811eb8:	e0bffc17 	ldw	r2,-16(fp)
  811ebc:	e6fffe04 	addi	sp,fp,-8
  811ec0:	dfc00317 	ldw	ra,12(sp)
  811ec4:	df000217 	ldw	fp,8(sp)
  811ec8:	dc400117 	ldw	r17,4(sp)
  811ecc:	dc000017 	ldw	r16,0(sp)
  811ed0:	dec00404 	addi	sp,sp,16
  811ed4:	f800283a 	ret

00811ed8 <compute_color>:
  811ed8:	deffe904 	addi	sp,sp,-92
  811edc:	dfc01615 	stw	ra,88(sp)
  811ee0:	df001515 	stw	fp,84(sp)
  811ee4:	dc001415 	stw	r16,80(sp)
  811ee8:	df001504 	addi	fp,sp,84
  811eec:	e13ffc15 	stw	r4,-16(fp)
  811ef0:	e17ffd15 	stw	r5,-12(fp)
  811ef4:	e1bffe15 	stw	r6,-8(fp)
  811ef8:	e0bffc17 	ldw	r2,-16(fp)
  811efc:	10807917 	ldw	r2,484(r2)
  811f00:	e0bff315 	stw	r2,-52(fp)
  811f04:	e0bff317 	ldw	r2,-52(fp)
  811f08:	10800617 	ldw	r2,24(r2)
  811f0c:	e0bff415 	stw	r2,-48(fp)
  811f10:	e03fef15 	stw	zero,-68(fp)
  811f14:	e03ff015 	stw	zero,-64(fp)
  811f18:	e03ff115 	stw	zero,-60(fp)
  811f1c:	e03ff215 	stw	zero,-56(fp)
  811f20:	e0bffd17 	ldw	r2,-12(fp)
  811f24:	10800017 	ldw	r2,0(r2)
  811f28:	e0bff515 	stw	r2,-44(fp)
  811f2c:	e0bffd17 	ldw	r2,-12(fp)
  811f30:	10800117 	ldw	r2,4(r2)
  811f34:	e0bff615 	stw	r2,-40(fp)
  811f38:	e0bffd17 	ldw	r2,-12(fp)
  811f3c:	10800217 	ldw	r2,8(r2)
  811f40:	e0bff715 	stw	r2,-36(fp)
  811f44:	e0bffd17 	ldw	r2,-12(fp)
  811f48:	10800317 	ldw	r2,12(r2)
  811f4c:	e0bff815 	stw	r2,-32(fp)
  811f50:	e0bffd17 	ldw	r2,-12(fp)
  811f54:	10800417 	ldw	r2,16(r2)
  811f58:	e0bff915 	stw	r2,-28(fp)
  811f5c:	e0bffd17 	ldw	r2,-12(fp)
  811f60:	10800517 	ldw	r2,20(r2)
  811f64:	e0bffa15 	stw	r2,-24(fp)
  811f68:	e0bff517 	ldw	r2,-44(fp)
  811f6c:	e0bfec15 	stw	r2,-80(fp)
  811f70:	00004e06 	br	8120ac <compute_color+0x1d4>
  811f74:	e0bff717 	ldw	r2,-36(fp)
  811f78:	e0bfed15 	stw	r2,-76(fp)
  811f7c:	00004506 	br	812094 <compute_color+0x1bc>
  811f80:	e0bfec17 	ldw	r2,-80(fp)
  811f84:	1085883a 	add	r2,r2,r2
  811f88:	1085883a 	add	r2,r2,r2
  811f8c:	1007883a 	mov	r3,r2
  811f90:	e0bff417 	ldw	r2,-48(fp)
  811f94:	10c5883a 	add	r2,r2,r3
  811f98:	10c00017 	ldw	r3,0(r2)
  811f9c:	e0bfed17 	ldw	r2,-76(fp)
  811fa0:	100491ba 	slli	r2,r2,6
  811fa4:	1887883a 	add	r3,r3,r2
  811fa8:	e0bff917 	ldw	r2,-28(fp)
  811fac:	1085883a 	add	r2,r2,r2
  811fb0:	1885883a 	add	r2,r3,r2
  811fb4:	e0bfeb15 	stw	r2,-84(fp)
  811fb8:	e0bff917 	ldw	r2,-28(fp)
  811fbc:	e0bfee15 	stw	r2,-72(fp)
  811fc0:	00002e06 	br	81207c <compute_color+0x1a4>
  811fc4:	e0bfeb17 	ldw	r2,-84(fp)
  811fc8:	10c00084 	addi	r3,r2,2
  811fcc:	e0ffeb15 	stw	r3,-84(fp)
  811fd0:	1080000b 	ldhu	r2,0(r2)
  811fd4:	10bfffcc 	andi	r2,r2,65535
  811fd8:	e0bffb15 	stw	r2,-20(fp)
  811fdc:	e0bffb17 	ldw	r2,-20(fp)
  811fe0:	10002326 	beq	r2,zero,812070 <compute_color+0x198>
  811fe4:	e0ffef17 	ldw	r3,-68(fp)
  811fe8:	e0bffb17 	ldw	r2,-20(fp)
  811fec:	1885883a 	add	r2,r3,r2
  811ff0:	e0bfef15 	stw	r2,-68(fp)
  811ff4:	e0bfec17 	ldw	r2,-80(fp)
  811ff8:	100490fa 	slli	r2,r2,3
  811ffc:	10800104 	addi	r2,r2,4
  812000:	e17ffb17 	ldw	r5,-20(fp)
  812004:	1009883a 	mov	r4,r2
  812008:	08301e80 	call	8301e8 <__mulsi3>
  81200c:	1007883a 	mov	r3,r2
  812010:	e0bff017 	ldw	r2,-64(fp)
  812014:	10c5883a 	add	r2,r2,r3
  812018:	e0bff015 	stw	r2,-64(fp)
  81201c:	e0bfed17 	ldw	r2,-76(fp)
  812020:	1085883a 	add	r2,r2,r2
  812024:	1085883a 	add	r2,r2,r2
  812028:	10800084 	addi	r2,r2,2
  81202c:	e17ffb17 	ldw	r5,-20(fp)
  812030:	1009883a 	mov	r4,r2
  812034:	08301e80 	call	8301e8 <__mulsi3>
  812038:	1007883a 	mov	r3,r2
  81203c:	e0bff117 	ldw	r2,-60(fp)
  812040:	10c5883a 	add	r2,r2,r3
  812044:	e0bff115 	stw	r2,-60(fp)
  812048:	e0bfee17 	ldw	r2,-72(fp)
  81204c:	100490fa 	slli	r2,r2,3
  812050:	10800104 	addi	r2,r2,4
  812054:	e17ffb17 	ldw	r5,-20(fp)
  812058:	1009883a 	mov	r4,r2
  81205c:	08301e80 	call	8301e8 <__mulsi3>
  812060:	1007883a 	mov	r3,r2
  812064:	e0bff217 	ldw	r2,-56(fp)
  812068:	10c5883a 	add	r2,r2,r3
  81206c:	e0bff215 	stw	r2,-56(fp)
  812070:	e0bfee17 	ldw	r2,-72(fp)
  812074:	10800044 	addi	r2,r2,1
  812078:	e0bfee15 	stw	r2,-72(fp)
  81207c:	e0bfee17 	ldw	r2,-72(fp)
  812080:	e0fffa17 	ldw	r3,-24(fp)
  812084:	18bfcf0e 	bge	r3,r2,811fc4 <__alt_mem_epcs_flash_controller_0+0xff808fc4>
  812088:	e0bfed17 	ldw	r2,-76(fp)
  81208c:	10800044 	addi	r2,r2,1
  812090:	e0bfed15 	stw	r2,-76(fp)
  812094:	e0bfed17 	ldw	r2,-76(fp)
  812098:	e0fff817 	ldw	r3,-32(fp)
  81209c:	18bfb80e 	bge	r3,r2,811f80 <__alt_mem_epcs_flash_controller_0+0xff808f80>
  8120a0:	e0bfec17 	ldw	r2,-80(fp)
  8120a4:	10800044 	addi	r2,r2,1
  8120a8:	e0bfec15 	stw	r2,-80(fp)
  8120ac:	e0bfec17 	ldw	r2,-80(fp)
  8120b0:	e0fff617 	ldw	r3,-40(fp)
  8120b4:	18bfaf0e 	bge	r3,r2,811f74 <__alt_mem_epcs_flash_controller_0+0xff808f74>
  8120b8:	e0bffc17 	ldw	r2,-16(fp)
  8120bc:	10802217 	ldw	r2,136(r2)
  8120c0:	10c00017 	ldw	r3,0(r2)
  8120c4:	e0bffe17 	ldw	r2,-8(fp)
  8120c8:	18a1883a 	add	r16,r3,r2
  8120cc:	e0bfef17 	ldw	r2,-68(fp)
  8120d0:	1007d07a 	srai	r3,r2,1
  8120d4:	e0bff017 	ldw	r2,-64(fp)
  8120d8:	1885883a 	add	r2,r3,r2
  8120dc:	e17fef17 	ldw	r5,-68(fp)
  8120e0:	1009883a 	mov	r4,r2
  8120e4:	08300340 	call	830034 <__divsi3>
  8120e8:	80800005 	stb	r2,0(r16)
  8120ec:	e0bffc17 	ldw	r2,-16(fp)
  8120f0:	10802217 	ldw	r2,136(r2)
  8120f4:	10800104 	addi	r2,r2,4
  8120f8:	10c00017 	ldw	r3,0(r2)
  8120fc:	e0bffe17 	ldw	r2,-8(fp)
  812100:	18a1883a 	add	r16,r3,r2
  812104:	e0bfef17 	ldw	r2,-68(fp)
  812108:	1007d07a 	srai	r3,r2,1
  81210c:	e0bff117 	ldw	r2,-60(fp)
  812110:	1885883a 	add	r2,r3,r2
  812114:	e17fef17 	ldw	r5,-68(fp)
  812118:	1009883a 	mov	r4,r2
  81211c:	08300340 	call	830034 <__divsi3>
  812120:	80800005 	stb	r2,0(r16)
  812124:	e0bffc17 	ldw	r2,-16(fp)
  812128:	10802217 	ldw	r2,136(r2)
  81212c:	10800204 	addi	r2,r2,8
  812130:	10c00017 	ldw	r3,0(r2)
  812134:	e0bffe17 	ldw	r2,-8(fp)
  812138:	18a1883a 	add	r16,r3,r2
  81213c:	e0bfef17 	ldw	r2,-68(fp)
  812140:	1007d07a 	srai	r3,r2,1
  812144:	e0bff217 	ldw	r2,-56(fp)
  812148:	1885883a 	add	r2,r3,r2
  81214c:	e17fef17 	ldw	r5,-68(fp)
  812150:	1009883a 	mov	r4,r2
  812154:	08300340 	call	830034 <__divsi3>
  812158:	80800005 	stb	r2,0(r16)
  81215c:	0001883a 	nop
  812160:	e6ffff04 	addi	sp,fp,-4
  812164:	dfc00217 	ldw	ra,8(sp)
  812168:	df000117 	ldw	fp,4(sp)
  81216c:	dc000017 	ldw	r16,0(sp)
  812170:	dec00304 	addi	sp,sp,12
  812174:	f800283a 	ret

00812178 <select_colors>:
  812178:	defff904 	addi	sp,sp,-28
  81217c:	dfc00615 	stw	ra,24(sp)
  812180:	df000515 	stw	fp,20(sp)
  812184:	df000504 	addi	fp,sp,20
  812188:	e13ffe15 	stw	r4,-8(fp)
  81218c:	e17fff15 	stw	r5,-4(fp)
  812190:	e0bffe17 	ldw	r2,-8(fp)
  812194:	10800117 	ldw	r2,4(r2)
  812198:	10800017 	ldw	r2,0(r2)
  81219c:	e0ffff17 	ldw	r3,-4(fp)
  8121a0:	1806917a 	slli	r3,r3,5
  8121a4:	180d883a 	mov	r6,r3
  8121a8:	01400044 	movi	r5,1
  8121ac:	e13ffe17 	ldw	r4,-8(fp)
  8121b0:	103ee83a 	callr	r2
  8121b4:	e0bffc15 	stw	r2,-16(fp)
  8121b8:	00800044 	movi	r2,1
  8121bc:	e0bffd15 	stw	r2,-12(fp)
  8121c0:	e0bffc17 	ldw	r2,-16(fp)
  8121c4:	10000015 	stw	zero,0(r2)
  8121c8:	e0bffc17 	ldw	r2,-16(fp)
  8121cc:	00c007c4 	movi	r3,31
  8121d0:	10c00115 	stw	r3,4(r2)
  8121d4:	e0bffc17 	ldw	r2,-16(fp)
  8121d8:	10000215 	stw	zero,8(r2)
  8121dc:	e0bffc17 	ldw	r2,-16(fp)
  8121e0:	00c00fc4 	movi	r3,63
  8121e4:	10c00315 	stw	r3,12(r2)
  8121e8:	e0bffc17 	ldw	r2,-16(fp)
  8121ec:	10000415 	stw	zero,16(r2)
  8121f0:	e0bffc17 	ldw	r2,-16(fp)
  8121f4:	00c007c4 	movi	r3,31
  8121f8:	10c00515 	stw	r3,20(r2)
  8121fc:	e17ffc17 	ldw	r5,-16(fp)
  812200:	e13ffe17 	ldw	r4,-8(fp)
  812204:	081154c0 	call	81154c <update_box>
  812208:	e1ffff17 	ldw	r7,-4(fp)
  81220c:	e1bffd17 	ldw	r6,-12(fp)
  812210:	e17ffc17 	ldw	r5,-16(fp)
  812214:	e13ffe17 	ldw	r4,-8(fp)
  812218:	0811c940 	call	811c94 <median_cut>
  81221c:	e0bffd15 	stw	r2,-12(fp)
  812220:	e03ffb15 	stw	zero,-20(fp)
  812224:	00000b06 	br	812254 <select_colors+0xdc>
  812228:	e0bffb17 	ldw	r2,-20(fp)
  81222c:	1004917a 	slli	r2,r2,5
  812230:	e0fffc17 	ldw	r3,-16(fp)
  812234:	1885883a 	add	r2,r3,r2
  812238:	e1bffb17 	ldw	r6,-20(fp)
  81223c:	100b883a 	mov	r5,r2
  812240:	e13ffe17 	ldw	r4,-8(fp)
  812244:	0811ed80 	call	811ed8 <compute_color>
  812248:	e0bffb17 	ldw	r2,-20(fp)
  81224c:	10800044 	addi	r2,r2,1
  812250:	e0bffb15 	stw	r2,-20(fp)
  812254:	e0fffb17 	ldw	r3,-20(fp)
  812258:	e0bffd17 	ldw	r2,-12(fp)
  81225c:	18bff216 	blt	r3,r2,812228 <__alt_mem_epcs_flash_controller_0+0xff809228>
  812260:	e0bffe17 	ldw	r2,-8(fp)
  812264:	e0fffd17 	ldw	r3,-12(fp)
  812268:	10c02115 	stw	r3,132(r2)
  81226c:	e0bffe17 	ldw	r2,-8(fp)
  812270:	10800017 	ldw	r2,0(r2)
  812274:	00c01884 	movi	r3,98
  812278:	10c00515 	stw	r3,20(r2)
  81227c:	e0bffe17 	ldw	r2,-8(fp)
  812280:	10800017 	ldw	r2,0(r2)
  812284:	e0fffd17 	ldw	r3,-12(fp)
  812288:	10c00615 	stw	r3,24(r2)
  81228c:	e0bffe17 	ldw	r2,-8(fp)
  812290:	10800017 	ldw	r2,0(r2)
  812294:	10800117 	ldw	r2,4(r2)
  812298:	01400044 	movi	r5,1
  81229c:	e13ffe17 	ldw	r4,-8(fp)
  8122a0:	103ee83a 	callr	r2
  8122a4:	0001883a 	nop
  8122a8:	e037883a 	mov	sp,fp
  8122ac:	dfc00117 	ldw	ra,4(sp)
  8122b0:	df000017 	ldw	fp,0(sp)
  8122b4:	dec00204 	addi	sp,sp,8
  8122b8:	f800283a 	ret

008122bc <find_nearby_colors>:
  8122bc:	defeec04 	addi	sp,sp,-1104
  8122c0:	dfc11315 	stw	ra,1100(sp)
  8122c4:	df011215 	stw	fp,1096(sp)
  8122c8:	df011204 	addi	fp,sp,1096
  8122cc:	e13ffc15 	stw	r4,-16(fp)
  8122d0:	e17ffd15 	stw	r5,-12(fp)
  8122d4:	e1bffe15 	stw	r6,-8(fp)
  8122d8:	e1ffff15 	stw	r7,-4(fp)
  8122dc:	e0bffc17 	ldw	r2,-16(fp)
  8122e0:	10802117 	ldw	r2,132(r2)
  8122e4:	e0bef315 	stw	r2,-1076(fp)
  8122e8:	e0bffd17 	ldw	r2,-12(fp)
  8122ec:	10800604 	addi	r2,r2,24
  8122f0:	e0bef415 	stw	r2,-1072(fp)
  8122f4:	e0fffd17 	ldw	r3,-12(fp)
  8122f8:	e0bef417 	ldw	r2,-1072(fp)
  8122fc:	1885883a 	add	r2,r3,r2
  812300:	1005d07a 	srai	r2,r2,1
  812304:	e0bef515 	stw	r2,-1068(fp)
  812308:	e0bffe17 	ldw	r2,-8(fp)
  81230c:	10800704 	addi	r2,r2,28
  812310:	e0bef615 	stw	r2,-1064(fp)
  812314:	e0fffe17 	ldw	r3,-8(fp)
  812318:	e0bef617 	ldw	r2,-1064(fp)
  81231c:	1885883a 	add	r2,r3,r2
  812320:	1005d07a 	srai	r2,r2,1
  812324:	e0bef715 	stw	r2,-1060(fp)
  812328:	e0bfff17 	ldw	r2,-4(fp)
  81232c:	10800604 	addi	r2,r2,24
  812330:	e0bef815 	stw	r2,-1056(fp)
  812334:	e0ffff17 	ldw	r3,-4(fp)
  812338:	e0bef817 	ldw	r2,-1056(fp)
  81233c:	1885883a 	add	r2,r3,r2
  812340:	1005d07a 	srai	r2,r2,1
  812344:	e0bef915 	stw	r2,-1052(fp)
  812348:	00a00034 	movhi	r2,32768
  81234c:	10bfffc4 	addi	r2,r2,-1
  812350:	e0bef015 	stw	r2,-1088(fp)
  812354:	e03eee15 	stw	zero,-1096(fp)
  812358:	00011b06 	br	8127c8 <find_nearby_colors+0x50c>
  81235c:	e0bffc17 	ldw	r2,-16(fp)
  812360:	10802217 	ldw	r2,136(r2)
  812364:	10c00017 	ldw	r3,0(r2)
  812368:	e0beee17 	ldw	r2,-1096(fp)
  81236c:	1885883a 	add	r2,r3,r2
  812370:	10800003 	ldbu	r2,0(r2)
  812374:	10803fcc 	andi	r2,r2,255
  812378:	e0befa15 	stw	r2,-1048(fp)
  81237c:	e0fefa17 	ldw	r3,-1048(fp)
  812380:	e0bffd17 	ldw	r2,-12(fp)
  812384:	1880130e 	bge	r3,r2,8123d4 <find_nearby_colors+0x118>
  812388:	e0fefa17 	ldw	r3,-1048(fp)
  81238c:	e0bffd17 	ldw	r2,-12(fp)
  812390:	1885c83a 	sub	r2,r3,r2
  812394:	1085883a 	add	r2,r2,r2
  812398:	e0befb15 	stw	r2,-1044(fp)
  81239c:	e17efb17 	ldw	r5,-1044(fp)
  8123a0:	e13efb17 	ldw	r4,-1044(fp)
  8123a4:	08301e80 	call	8301e8 <__mulsi3>
  8123a8:	e0bef115 	stw	r2,-1084(fp)
  8123ac:	e0fefa17 	ldw	r3,-1048(fp)
  8123b0:	e0bef417 	ldw	r2,-1072(fp)
  8123b4:	1885c83a 	sub	r2,r3,r2
  8123b8:	1085883a 	add	r2,r2,r2
  8123bc:	e0befb15 	stw	r2,-1044(fp)
  8123c0:	e17efb17 	ldw	r5,-1044(fp)
  8123c4:	e13efb17 	ldw	r4,-1044(fp)
  8123c8:	08301e80 	call	8301e8 <__mulsi3>
  8123cc:	e0bef215 	stw	r2,-1080(fp)
  8123d0:	00002d06 	br	812488 <find_nearby_colors+0x1cc>
  8123d4:	e0befa17 	ldw	r2,-1048(fp)
  8123d8:	e0fef417 	ldw	r3,-1072(fp)
  8123dc:	1880130e 	bge	r3,r2,81242c <find_nearby_colors+0x170>
  8123e0:	e0fefa17 	ldw	r3,-1048(fp)
  8123e4:	e0bef417 	ldw	r2,-1072(fp)
  8123e8:	1885c83a 	sub	r2,r3,r2
  8123ec:	1085883a 	add	r2,r2,r2
  8123f0:	e0befb15 	stw	r2,-1044(fp)
  8123f4:	e17efb17 	ldw	r5,-1044(fp)
  8123f8:	e13efb17 	ldw	r4,-1044(fp)
  8123fc:	08301e80 	call	8301e8 <__mulsi3>
  812400:	e0bef115 	stw	r2,-1084(fp)
  812404:	e0fefa17 	ldw	r3,-1048(fp)
  812408:	e0bffd17 	ldw	r2,-12(fp)
  81240c:	1885c83a 	sub	r2,r3,r2
  812410:	1085883a 	add	r2,r2,r2
  812414:	e0befb15 	stw	r2,-1044(fp)
  812418:	e17efb17 	ldw	r5,-1044(fp)
  81241c:	e13efb17 	ldw	r4,-1044(fp)
  812420:	08301e80 	call	8301e8 <__mulsi3>
  812424:	e0bef215 	stw	r2,-1080(fp)
  812428:	00001706 	br	812488 <find_nearby_colors+0x1cc>
  81242c:	e03ef115 	stw	zero,-1084(fp)
  812430:	e0befa17 	ldw	r2,-1048(fp)
  812434:	e0fef517 	ldw	r3,-1068(fp)
  812438:	18800a16 	blt	r3,r2,812464 <find_nearby_colors+0x1a8>
  81243c:	e0fefa17 	ldw	r3,-1048(fp)
  812440:	e0bef417 	ldw	r2,-1072(fp)
  812444:	1885c83a 	sub	r2,r3,r2
  812448:	1085883a 	add	r2,r2,r2
  81244c:	e0befb15 	stw	r2,-1044(fp)
  812450:	e17efb17 	ldw	r5,-1044(fp)
  812454:	e13efb17 	ldw	r4,-1044(fp)
  812458:	08301e80 	call	8301e8 <__mulsi3>
  81245c:	e0bef215 	stw	r2,-1080(fp)
  812460:	00000906 	br	812488 <find_nearby_colors+0x1cc>
  812464:	e0fefa17 	ldw	r3,-1048(fp)
  812468:	e0bffd17 	ldw	r2,-12(fp)
  81246c:	1885c83a 	sub	r2,r3,r2
  812470:	1085883a 	add	r2,r2,r2
  812474:	e0befb15 	stw	r2,-1044(fp)
  812478:	e17efb17 	ldw	r5,-1044(fp)
  81247c:	e13efb17 	ldw	r4,-1044(fp)
  812480:	08301e80 	call	8301e8 <__mulsi3>
  812484:	e0bef215 	stw	r2,-1080(fp)
  812488:	e0bffc17 	ldw	r2,-16(fp)
  81248c:	10802217 	ldw	r2,136(r2)
  812490:	10800104 	addi	r2,r2,4
  812494:	10c00017 	ldw	r3,0(r2)
  812498:	e0beee17 	ldw	r2,-1096(fp)
  81249c:	1885883a 	add	r2,r3,r2
  8124a0:	10800003 	ldbu	r2,0(r2)
  8124a4:	10803fcc 	andi	r2,r2,255
  8124a8:	e0befa15 	stw	r2,-1048(fp)
  8124ac:	e0fefa17 	ldw	r3,-1048(fp)
  8124b0:	e0bffe17 	ldw	r2,-8(fp)
  8124b4:	18801d0e 	bge	r3,r2,81252c <find_nearby_colors+0x270>
  8124b8:	e0fefa17 	ldw	r3,-1048(fp)
  8124bc:	e0bffe17 	ldw	r2,-8(fp)
  8124c0:	1887c83a 	sub	r3,r3,r2
  8124c4:	1805883a 	mov	r2,r3
  8124c8:	1085883a 	add	r2,r2,r2
  8124cc:	10c5883a 	add	r2,r2,r3
  8124d0:	e0befb15 	stw	r2,-1044(fp)
  8124d4:	e17efb17 	ldw	r5,-1044(fp)
  8124d8:	e13efb17 	ldw	r4,-1044(fp)
  8124dc:	08301e80 	call	8301e8 <__mulsi3>
  8124e0:	1007883a 	mov	r3,r2
  8124e4:	e0bef117 	ldw	r2,-1084(fp)
  8124e8:	10c5883a 	add	r2,r2,r3
  8124ec:	e0bef115 	stw	r2,-1084(fp)
  8124f0:	e0fefa17 	ldw	r3,-1048(fp)
  8124f4:	e0bef617 	ldw	r2,-1064(fp)
  8124f8:	1887c83a 	sub	r3,r3,r2
  8124fc:	1805883a 	mov	r2,r3
  812500:	1085883a 	add	r2,r2,r2
  812504:	10c5883a 	add	r2,r2,r3
  812508:	e0befb15 	stw	r2,-1044(fp)
  81250c:	e17efb17 	ldw	r5,-1044(fp)
  812510:	e13efb17 	ldw	r4,-1044(fp)
  812514:	08301e80 	call	8301e8 <__mulsi3>
  812518:	1007883a 	mov	r3,r2
  81251c:	e0bef217 	ldw	r2,-1080(fp)
  812520:	10c5883a 	add	r2,r2,r3
  812524:	e0bef215 	stw	r2,-1080(fp)
  812528:	00004006 	br	81262c <find_nearby_colors+0x370>
  81252c:	e0befa17 	ldw	r2,-1048(fp)
  812530:	e0fef617 	ldw	r3,-1064(fp)
  812534:	18801d0e 	bge	r3,r2,8125ac <find_nearby_colors+0x2f0>
  812538:	e0fefa17 	ldw	r3,-1048(fp)
  81253c:	e0bef617 	ldw	r2,-1064(fp)
  812540:	1887c83a 	sub	r3,r3,r2
  812544:	1805883a 	mov	r2,r3
  812548:	1085883a 	add	r2,r2,r2
  81254c:	10c5883a 	add	r2,r2,r3
  812550:	e0befb15 	stw	r2,-1044(fp)
  812554:	e17efb17 	ldw	r5,-1044(fp)
  812558:	e13efb17 	ldw	r4,-1044(fp)
  81255c:	08301e80 	call	8301e8 <__mulsi3>
  812560:	1007883a 	mov	r3,r2
  812564:	e0bef117 	ldw	r2,-1084(fp)
  812568:	10c5883a 	add	r2,r2,r3
  81256c:	e0bef115 	stw	r2,-1084(fp)
  812570:	e0fefa17 	ldw	r3,-1048(fp)
  812574:	e0bffe17 	ldw	r2,-8(fp)
  812578:	1887c83a 	sub	r3,r3,r2
  81257c:	1805883a 	mov	r2,r3
  812580:	1085883a 	add	r2,r2,r2
  812584:	10c5883a 	add	r2,r2,r3
  812588:	e0befb15 	stw	r2,-1044(fp)
  81258c:	e17efb17 	ldw	r5,-1044(fp)
  812590:	e13efb17 	ldw	r4,-1044(fp)
  812594:	08301e80 	call	8301e8 <__mulsi3>
  812598:	1007883a 	mov	r3,r2
  81259c:	e0bef217 	ldw	r2,-1080(fp)
  8125a0:	10c5883a 	add	r2,r2,r3
  8125a4:	e0bef215 	stw	r2,-1080(fp)
  8125a8:	00002006 	br	81262c <find_nearby_colors+0x370>
  8125ac:	e0befa17 	ldw	r2,-1048(fp)
  8125b0:	e0fef717 	ldw	r3,-1060(fp)
  8125b4:	18800f16 	blt	r3,r2,8125f4 <find_nearby_colors+0x338>
  8125b8:	e0fefa17 	ldw	r3,-1048(fp)
  8125bc:	e0bef617 	ldw	r2,-1064(fp)
  8125c0:	1887c83a 	sub	r3,r3,r2
  8125c4:	1805883a 	mov	r2,r3
  8125c8:	1085883a 	add	r2,r2,r2
  8125cc:	10c5883a 	add	r2,r2,r3
  8125d0:	e0befb15 	stw	r2,-1044(fp)
  8125d4:	e17efb17 	ldw	r5,-1044(fp)
  8125d8:	e13efb17 	ldw	r4,-1044(fp)
  8125dc:	08301e80 	call	8301e8 <__mulsi3>
  8125e0:	1007883a 	mov	r3,r2
  8125e4:	e0bef217 	ldw	r2,-1080(fp)
  8125e8:	10c5883a 	add	r2,r2,r3
  8125ec:	e0bef215 	stw	r2,-1080(fp)
  8125f0:	00000e06 	br	81262c <find_nearby_colors+0x370>
  8125f4:	e0fefa17 	ldw	r3,-1048(fp)
  8125f8:	e0bffe17 	ldw	r2,-8(fp)
  8125fc:	1887c83a 	sub	r3,r3,r2
  812600:	1805883a 	mov	r2,r3
  812604:	1085883a 	add	r2,r2,r2
  812608:	10c5883a 	add	r2,r2,r3
  81260c:	e0befb15 	stw	r2,-1044(fp)
  812610:	e17efb17 	ldw	r5,-1044(fp)
  812614:	e13efb17 	ldw	r4,-1044(fp)
  812618:	08301e80 	call	8301e8 <__mulsi3>
  81261c:	1007883a 	mov	r3,r2
  812620:	e0bef217 	ldw	r2,-1080(fp)
  812624:	10c5883a 	add	r2,r2,r3
  812628:	e0bef215 	stw	r2,-1080(fp)
  81262c:	e0bffc17 	ldw	r2,-16(fp)
  812630:	10802217 	ldw	r2,136(r2)
  812634:	10800204 	addi	r2,r2,8
  812638:	10c00017 	ldw	r3,0(r2)
  81263c:	e0beee17 	ldw	r2,-1096(fp)
  812640:	1885883a 	add	r2,r3,r2
  812644:	10800003 	ldbu	r2,0(r2)
  812648:	10803fcc 	andi	r2,r2,255
  81264c:	e0befa15 	stw	r2,-1048(fp)
  812650:	e0fefa17 	ldw	r3,-1048(fp)
  812654:	e0bfff17 	ldw	r2,-4(fp)
  812658:	1880170e 	bge	r3,r2,8126b8 <find_nearby_colors+0x3fc>
  81265c:	e0fefa17 	ldw	r3,-1048(fp)
  812660:	e0bfff17 	ldw	r2,-4(fp)
  812664:	1885c83a 	sub	r2,r3,r2
  812668:	e0befb15 	stw	r2,-1044(fp)
  81266c:	e17efb17 	ldw	r5,-1044(fp)
  812670:	e13efb17 	ldw	r4,-1044(fp)
  812674:	08301e80 	call	8301e8 <__mulsi3>
  812678:	1007883a 	mov	r3,r2
  81267c:	e0bef117 	ldw	r2,-1084(fp)
  812680:	10c5883a 	add	r2,r2,r3
  812684:	e0bef115 	stw	r2,-1084(fp)
  812688:	e0fefa17 	ldw	r3,-1048(fp)
  81268c:	e0bef817 	ldw	r2,-1056(fp)
  812690:	1885c83a 	sub	r2,r3,r2
  812694:	e0befb15 	stw	r2,-1044(fp)
  812698:	e17efb17 	ldw	r5,-1044(fp)
  81269c:	e13efb17 	ldw	r4,-1044(fp)
  8126a0:	08301e80 	call	8301e8 <__mulsi3>
  8126a4:	1007883a 	mov	r3,r2
  8126a8:	e0bef217 	ldw	r2,-1080(fp)
  8126ac:	10c5883a 	add	r2,r2,r3
  8126b0:	e0bef215 	stw	r2,-1080(fp)
  8126b4:	00003406 	br	812788 <find_nearby_colors+0x4cc>
  8126b8:	e0befa17 	ldw	r2,-1048(fp)
  8126bc:	e0fef817 	ldw	r3,-1056(fp)
  8126c0:	1880170e 	bge	r3,r2,812720 <find_nearby_colors+0x464>
  8126c4:	e0fefa17 	ldw	r3,-1048(fp)
  8126c8:	e0bef817 	ldw	r2,-1056(fp)
  8126cc:	1885c83a 	sub	r2,r3,r2
  8126d0:	e0befb15 	stw	r2,-1044(fp)
  8126d4:	e17efb17 	ldw	r5,-1044(fp)
  8126d8:	e13efb17 	ldw	r4,-1044(fp)
  8126dc:	08301e80 	call	8301e8 <__mulsi3>
  8126e0:	1007883a 	mov	r3,r2
  8126e4:	e0bef117 	ldw	r2,-1084(fp)
  8126e8:	10c5883a 	add	r2,r2,r3
  8126ec:	e0bef115 	stw	r2,-1084(fp)
  8126f0:	e0fefa17 	ldw	r3,-1048(fp)
  8126f4:	e0bfff17 	ldw	r2,-4(fp)
  8126f8:	1885c83a 	sub	r2,r3,r2
  8126fc:	e0befb15 	stw	r2,-1044(fp)
  812700:	e17efb17 	ldw	r5,-1044(fp)
  812704:	e13efb17 	ldw	r4,-1044(fp)
  812708:	08301e80 	call	8301e8 <__mulsi3>
  81270c:	1007883a 	mov	r3,r2
  812710:	e0bef217 	ldw	r2,-1080(fp)
  812714:	10c5883a 	add	r2,r2,r3
  812718:	e0bef215 	stw	r2,-1080(fp)
  81271c:	00001a06 	br	812788 <find_nearby_colors+0x4cc>
  812720:	e0befa17 	ldw	r2,-1048(fp)
  812724:	e0fef917 	ldw	r3,-1052(fp)
  812728:	18800c16 	blt	r3,r2,81275c <find_nearby_colors+0x4a0>
  81272c:	e0fefa17 	ldw	r3,-1048(fp)
  812730:	e0bef817 	ldw	r2,-1056(fp)
  812734:	1885c83a 	sub	r2,r3,r2
  812738:	e0befb15 	stw	r2,-1044(fp)
  81273c:	e17efb17 	ldw	r5,-1044(fp)
  812740:	e13efb17 	ldw	r4,-1044(fp)
  812744:	08301e80 	call	8301e8 <__mulsi3>
  812748:	1007883a 	mov	r3,r2
  81274c:	e0bef217 	ldw	r2,-1080(fp)
  812750:	10c5883a 	add	r2,r2,r3
  812754:	e0bef215 	stw	r2,-1080(fp)
  812758:	00000b06 	br	812788 <find_nearby_colors+0x4cc>
  81275c:	e0fefa17 	ldw	r3,-1048(fp)
  812760:	e0bfff17 	ldw	r2,-4(fp)
  812764:	1885c83a 	sub	r2,r3,r2
  812768:	e0befb15 	stw	r2,-1044(fp)
  81276c:	e17efb17 	ldw	r5,-1044(fp)
  812770:	e13efb17 	ldw	r4,-1044(fp)
  812774:	08301e80 	call	8301e8 <__mulsi3>
  812778:	1007883a 	mov	r3,r2
  81277c:	e0bef217 	ldw	r2,-1080(fp)
  812780:	10c5883a 	add	r2,r2,r3
  812784:	e0bef215 	stw	r2,-1080(fp)
  812788:	e0beee17 	ldw	r2,-1096(fp)
  81278c:	1085883a 	add	r2,r2,r2
  812790:	1085883a 	add	r2,r2,r2
  812794:	e0feee04 	addi	r3,fp,-1096
  812798:	1885883a 	add	r2,r3,r2
  81279c:	10800e04 	addi	r2,r2,56
  8127a0:	e0fef117 	ldw	r3,-1084(fp)
  8127a4:	10c00015 	stw	r3,0(r2)
  8127a8:	e0fef217 	ldw	r3,-1080(fp)
  8127ac:	e0bef017 	ldw	r2,-1088(fp)
  8127b0:	1880020e 	bge	r3,r2,8127bc <find_nearby_colors+0x500>
  8127b4:	e0bef217 	ldw	r2,-1080(fp)
  8127b8:	e0bef015 	stw	r2,-1088(fp)
  8127bc:	e0beee17 	ldw	r2,-1096(fp)
  8127c0:	10800044 	addi	r2,r2,1
  8127c4:	e0beee15 	stw	r2,-1096(fp)
  8127c8:	e0feee17 	ldw	r3,-1096(fp)
  8127cc:	e0bef317 	ldw	r2,-1076(fp)
  8127d0:	18bee216 	blt	r3,r2,81235c <__alt_mem_epcs_flash_controller_0+0xff80935c>
  8127d4:	e03eef15 	stw	zero,-1092(fp)
  8127d8:	e03eee15 	stw	zero,-1096(fp)
  8127dc:	00001406 	br	812830 <find_nearby_colors+0x574>
  8127e0:	e0beee17 	ldw	r2,-1096(fp)
  8127e4:	1085883a 	add	r2,r2,r2
  8127e8:	1085883a 	add	r2,r2,r2
  8127ec:	e0feee04 	addi	r3,fp,-1096
  8127f0:	1885883a 	add	r2,r3,r2
  8127f4:	10800e04 	addi	r2,r2,56
  8127f8:	10800017 	ldw	r2,0(r2)
  8127fc:	e0fef017 	ldw	r3,-1088(fp)
  812800:	18800816 	blt	r3,r2,812824 <find_nearby_colors+0x568>
  812804:	e0beef17 	ldw	r2,-1092(fp)
  812808:	10c00044 	addi	r3,r2,1
  81280c:	e0feef15 	stw	r3,-1092(fp)
  812810:	1007883a 	mov	r3,r2
  812814:	e0800217 	ldw	r2,8(fp)
  812818:	10c5883a 	add	r2,r2,r3
  81281c:	e0feee17 	ldw	r3,-1096(fp)
  812820:	10c00005 	stb	r3,0(r2)
  812824:	e0beee17 	ldw	r2,-1096(fp)
  812828:	10800044 	addi	r2,r2,1
  81282c:	e0beee15 	stw	r2,-1096(fp)
  812830:	e0feee17 	ldw	r3,-1096(fp)
  812834:	e0bef317 	ldw	r2,-1076(fp)
  812838:	18bfe916 	blt	r3,r2,8127e0 <__alt_mem_epcs_flash_controller_0+0xff8097e0>
  81283c:	e0beef17 	ldw	r2,-1092(fp)
  812840:	e037883a 	mov	sp,fp
  812844:	dfc00117 	ldw	ra,4(sp)
  812848:	df000017 	ldw	fp,0(sp)
  81284c:	dec00204 	addi	sp,sp,8
  812850:	f800283a 	ret

00812854 <find_best_colors>:
  812854:	deff6a04 	addi	sp,sp,-600
  812858:	dfc09515 	stw	ra,596(sp)
  81285c:	df009415 	stw	fp,592(sp)
  812860:	dc809315 	stw	r18,588(sp)
  812864:	dc409215 	stw	r17,584(sp)
  812868:	dc009115 	stw	r16,580(sp)
  81286c:	df009404 	addi	fp,sp,592
  812870:	e13ff915 	stw	r4,-28(fp)
  812874:	e17ffa15 	stw	r5,-24(fp)
  812878:	e1bffb15 	stw	r6,-20(fp)
  81287c:	e1fffc15 	stw	r7,-16(fp)
  812880:	e43f7904 	addi	r16,fp,-540
  812884:	00801fc4 	movi	r2,127
  812888:	e0bf6f15 	stw	r2,-580(fp)
  81288c:	00000806 	br	8128b0 <find_best_colors+0x5c>
  812890:	8007883a 	mov	r3,r16
  812894:	1c000104 	addi	r16,r3,4
  812898:	00a00034 	movhi	r2,32768
  81289c:	10bfffc4 	addi	r2,r2,-1
  8128a0:	18800015 	stw	r2,0(r3)
  8128a4:	e0bf6f17 	ldw	r2,-580(fp)
  8128a8:	10bfffc4 	addi	r2,r2,-1
  8128ac:	e0bf6f15 	stw	r2,-580(fp)
  8128b0:	e0bf6f17 	ldw	r2,-580(fp)
  8128b4:	103ff60e 	bge	r2,zero,812890 <__alt_mem_epcs_flash_controller_0+0xff809890>
  8128b8:	e03f6f15 	stw	zero,-580(fp)
  8128bc:	00008a06 	br	812ae8 <find_best_colors+0x294>
  8128c0:	e0bf6f17 	ldw	r2,-580(fp)
  8128c4:	e0c00317 	ldw	r3,12(fp)
  8128c8:	1885883a 	add	r2,r3,r2
  8128cc:	10800003 	ldbu	r2,0(r2)
  8128d0:	10803fcc 	andi	r2,r2,255
  8128d4:	e0bf7515 	stw	r2,-556(fp)
  8128d8:	e0bff917 	ldw	r2,-28(fp)
  8128dc:	10802217 	ldw	r2,136(r2)
  8128e0:	10c00017 	ldw	r3,0(r2)
  8128e4:	e0bf7517 	ldw	r2,-556(fp)
  8128e8:	1885883a 	add	r2,r3,r2
  8128ec:	10800003 	ldbu	r2,0(r2)
  8128f0:	10803fcc 	andi	r2,r2,255
  8128f4:	e0fffa17 	ldw	r3,-24(fp)
  8128f8:	1885c83a 	sub	r2,r3,r2
  8128fc:	1085883a 	add	r2,r2,r2
  812900:	e0bf7615 	stw	r2,-552(fp)
  812904:	e17f7617 	ldw	r5,-552(fp)
  812908:	e13f7617 	ldw	r4,-552(fp)
  81290c:	08301e80 	call	8301e8 <__mulsi3>
  812910:	e0bf7115 	stw	r2,-572(fp)
  812914:	e0bff917 	ldw	r2,-28(fp)
  812918:	10802217 	ldw	r2,136(r2)
  81291c:	10800104 	addi	r2,r2,4
  812920:	10c00017 	ldw	r3,0(r2)
  812924:	e0bf7517 	ldw	r2,-556(fp)
  812928:	1885883a 	add	r2,r3,r2
  81292c:	10800003 	ldbu	r2,0(r2)
  812930:	10803fcc 	andi	r2,r2,255
  812934:	e0fffb17 	ldw	r3,-20(fp)
  812938:	1887c83a 	sub	r3,r3,r2
  81293c:	1805883a 	mov	r2,r3
  812940:	1085883a 	add	r2,r2,r2
  812944:	10c5883a 	add	r2,r2,r3
  812948:	e0bf7715 	stw	r2,-548(fp)
  81294c:	e17f7717 	ldw	r5,-548(fp)
  812950:	e13f7717 	ldw	r4,-548(fp)
  812954:	08301e80 	call	8301e8 <__mulsi3>
  812958:	1007883a 	mov	r3,r2
  81295c:	e0bf7117 	ldw	r2,-572(fp)
  812960:	10c5883a 	add	r2,r2,r3
  812964:	e0bf7115 	stw	r2,-572(fp)
  812968:	e0bff917 	ldw	r2,-28(fp)
  81296c:	10802217 	ldw	r2,136(r2)
  812970:	10800204 	addi	r2,r2,8
  812974:	10c00017 	ldw	r3,0(r2)
  812978:	e0bf7517 	ldw	r2,-556(fp)
  81297c:	1885883a 	add	r2,r3,r2
  812980:	10800003 	ldbu	r2,0(r2)
  812984:	10803fcc 	andi	r2,r2,255
  812988:	e0fffc17 	ldw	r3,-16(fp)
  81298c:	1885c83a 	sub	r2,r3,r2
  812990:	e0bf7815 	stw	r2,-544(fp)
  812994:	e17f7817 	ldw	r5,-544(fp)
  812998:	e13f7817 	ldw	r4,-544(fp)
  81299c:	08301e80 	call	8301e8 <__mulsi3>
  8129a0:	1007883a 	mov	r3,r2
  8129a4:	e0bf7117 	ldw	r2,-572(fp)
  8129a8:	10c5883a 	add	r2,r2,r3
  8129ac:	e0bf7115 	stw	r2,-572(fp)
  8129b0:	e0bf7617 	ldw	r2,-552(fp)
  8129b4:	10800204 	addi	r2,r2,8
  8129b8:	1004917a 	slli	r2,r2,5
  8129bc:	e0bf7615 	stw	r2,-552(fp)
  8129c0:	01400604 	movi	r5,24
  8129c4:	e13f7717 	ldw	r4,-548(fp)
  8129c8:	08301e80 	call	8301e8 <__mulsi3>
  8129cc:	10802404 	addi	r2,r2,144
  8129d0:	e0bf7715 	stw	r2,-548(fp)
  8129d4:	e0bf7817 	ldw	r2,-544(fp)
  8129d8:	10800104 	addi	r2,r2,4
  8129dc:	1004913a 	slli	r2,r2,4
  8129e0:	e0bf7815 	stw	r2,-544(fp)
  8129e4:	e43f7904 	addi	r16,fp,-540
  8129e8:	e0800417 	ldw	r2,16(fp)
  8129ec:	e0bf7015 	stw	r2,-576(fp)
  8129f0:	e0bf7617 	ldw	r2,-552(fp)
  8129f4:	e0bf7315 	stw	r2,-564(fp)
  8129f8:	008000c4 	movi	r2,3
  8129fc:	e0bf6c15 	stw	r2,-592(fp)
  812a00:	00003406 	br	812ad4 <find_best_colors+0x280>
  812a04:	e0bf7117 	ldw	r2,-572(fp)
  812a08:	e0bf7215 	stw	r2,-568(fp)
  812a0c:	e0bf7717 	ldw	r2,-548(fp)
  812a10:	e0bf7415 	stw	r2,-560(fp)
  812a14:	008001c4 	movi	r2,7
  812a18:	e0bf6d15 	stw	r2,-588(fp)
  812a1c:	00002106 	br	812aa4 <find_best_colors+0x250>
  812a20:	e47f7217 	ldw	r17,-568(fp)
  812a24:	e4bf7817 	ldw	r18,-544(fp)
  812a28:	008000c4 	movi	r2,3
  812a2c:	e0bf6e15 	stw	r2,-584(fp)
  812a30:	00001006 	br	812a74 <find_best_colors+0x220>
  812a34:	80800017 	ldw	r2,0(r16)
  812a38:	8880050e 	bge	r17,r2,812a50 <find_best_colors+0x1fc>
  812a3c:	84400015 	stw	r17,0(r16)
  812a40:	e0bf7517 	ldw	r2,-556(fp)
  812a44:	1007883a 	mov	r3,r2
  812a48:	e0bf7017 	ldw	r2,-576(fp)
  812a4c:	10c00005 	stb	r3,0(r2)
  812a50:	8ca3883a 	add	r17,r17,r18
  812a54:	94802004 	addi	r18,r18,128
  812a58:	84000104 	addi	r16,r16,4
  812a5c:	e0bf7017 	ldw	r2,-576(fp)
  812a60:	10800044 	addi	r2,r2,1
  812a64:	e0bf7015 	stw	r2,-576(fp)
  812a68:	e0bf6e17 	ldw	r2,-584(fp)
  812a6c:	10bfffc4 	addi	r2,r2,-1
  812a70:	e0bf6e15 	stw	r2,-584(fp)
  812a74:	e0bf6e17 	ldw	r2,-584(fp)
  812a78:	103fee0e 	bge	r2,zero,812a34 <__alt_mem_epcs_flash_controller_0+0xff809a34>
  812a7c:	e0ff7217 	ldw	r3,-568(fp)
  812a80:	e0bf7417 	ldw	r2,-560(fp)
  812a84:	1885883a 	add	r2,r3,r2
  812a88:	e0bf7215 	stw	r2,-568(fp)
  812a8c:	e0bf7417 	ldw	r2,-560(fp)
  812a90:	10804804 	addi	r2,r2,288
  812a94:	e0bf7415 	stw	r2,-560(fp)
  812a98:	e0bf6d17 	ldw	r2,-588(fp)
  812a9c:	10bfffc4 	addi	r2,r2,-1
  812aa0:	e0bf6d15 	stw	r2,-588(fp)
  812aa4:	e0bf6d17 	ldw	r2,-588(fp)
  812aa8:	103fdd0e 	bge	r2,zero,812a20 <__alt_mem_epcs_flash_controller_0+0xff809a20>
  812aac:	e0ff7117 	ldw	r3,-572(fp)
  812ab0:	e0bf7317 	ldw	r2,-564(fp)
  812ab4:	1885883a 	add	r2,r3,r2
  812ab8:	e0bf7115 	stw	r2,-572(fp)
  812abc:	e0bf7317 	ldw	r2,-564(fp)
  812ac0:	10808004 	addi	r2,r2,512
  812ac4:	e0bf7315 	stw	r2,-564(fp)
  812ac8:	e0bf6c17 	ldw	r2,-592(fp)
  812acc:	10bfffc4 	addi	r2,r2,-1
  812ad0:	e0bf6c15 	stw	r2,-592(fp)
  812ad4:	e0bf6c17 	ldw	r2,-592(fp)
  812ad8:	103fca0e 	bge	r2,zero,812a04 <__alt_mem_epcs_flash_controller_0+0xff809a04>
  812adc:	e0bf6f17 	ldw	r2,-580(fp)
  812ae0:	10800044 	addi	r2,r2,1
  812ae4:	e0bf6f15 	stw	r2,-580(fp)
  812ae8:	e0ff6f17 	ldw	r3,-580(fp)
  812aec:	e0800217 	ldw	r2,8(fp)
  812af0:	18bf7316 	blt	r3,r2,8128c0 <__alt_mem_epcs_flash_controller_0+0xff8098c0>
  812af4:	0001883a 	nop
  812af8:	e6fffd04 	addi	sp,fp,-12
  812afc:	dfc00417 	ldw	ra,16(sp)
  812b00:	df000317 	ldw	fp,12(sp)
  812b04:	dc800217 	ldw	r18,8(sp)
  812b08:	dc400117 	ldw	r17,4(sp)
  812b0c:	dc000017 	ldw	r16,0(sp)
  812b10:	dec00504 	addi	sp,sp,20
  812b14:	f800283a 	ret

00812b18 <fill_inverse_cmap>:
  812b18:	deff8c04 	addi	sp,sp,-464
  812b1c:	dfc07315 	stw	ra,460(sp)
  812b20:	df007215 	stw	fp,456(sp)
  812b24:	dc407115 	stw	r17,452(sp)
  812b28:	dc007015 	stw	r16,448(sp)
  812b2c:	df007204 	addi	fp,sp,456
  812b30:	e13ffa15 	stw	r4,-24(fp)
  812b34:	e17ffb15 	stw	r5,-20(fp)
  812b38:	e1bffc15 	stw	r6,-16(fp)
  812b3c:	e1fffd15 	stw	r7,-12(fp)
  812b40:	e0bffa17 	ldw	r2,-24(fp)
  812b44:	10807917 	ldw	r2,484(r2)
  812b48:	e0bf9415 	stw	r2,-432(fp)
  812b4c:	e0bf9417 	ldw	r2,-432(fp)
  812b50:	10800617 	ldw	r2,24(r2)
  812b54:	e0bf9515 	stw	r2,-428(fp)
  812b58:	e0bffb17 	ldw	r2,-20(fp)
  812b5c:	1005d0ba 	srai	r2,r2,2
  812b60:	e0bffb15 	stw	r2,-20(fp)
  812b64:	e0bffc17 	ldw	r2,-16(fp)
  812b68:	1005d0fa 	srai	r2,r2,3
  812b6c:	e0bffc15 	stw	r2,-16(fp)
  812b70:	e0bffd17 	ldw	r2,-12(fp)
  812b74:	1005d0ba 	srai	r2,r2,2
  812b78:	e0bffd15 	stw	r2,-12(fp)
  812b7c:	e0bffb17 	ldw	r2,-20(fp)
  812b80:	1004917a 	slli	r2,r2,5
  812b84:	10800104 	addi	r2,r2,4
  812b88:	e0bf9615 	stw	r2,-424(fp)
  812b8c:	e0bffc17 	ldw	r2,-16(fp)
  812b90:	1004917a 	slli	r2,r2,5
  812b94:	10800084 	addi	r2,r2,2
  812b98:	e0bf9715 	stw	r2,-420(fp)
  812b9c:	e0bffd17 	ldw	r2,-12(fp)
  812ba0:	1004917a 	slli	r2,r2,5
  812ba4:	10800104 	addi	r2,r2,4
  812ba8:	e0bf9815 	stw	r2,-416(fp)
  812bac:	e0bf9a04 	addi	r2,fp,-408
  812bb0:	d8800015 	stw	r2,0(sp)
  812bb4:	e1ff9817 	ldw	r7,-416(fp)
  812bb8:	e1bf9717 	ldw	r6,-420(fp)
  812bbc:	e17f9617 	ldw	r5,-424(fp)
  812bc0:	e13ffa17 	ldw	r4,-24(fp)
  812bc4:	08122bc0 	call	8122bc <find_nearby_colors>
  812bc8:	e0bf9915 	stw	r2,-412(fp)
  812bcc:	e0bfda04 	addi	r2,fp,-152
  812bd0:	d8800215 	stw	r2,8(sp)
  812bd4:	e0bf9a04 	addi	r2,fp,-408
  812bd8:	d8800115 	stw	r2,4(sp)
  812bdc:	e0bf9917 	ldw	r2,-412(fp)
  812be0:	d8800015 	stw	r2,0(sp)
  812be4:	e1ff9817 	ldw	r7,-416(fp)
  812be8:	e1bf9717 	ldw	r6,-420(fp)
  812bec:	e17f9617 	ldw	r5,-424(fp)
  812bf0:	e13ffa17 	ldw	r4,-24(fp)
  812bf4:	08128540 	call	812854 <find_best_colors>
  812bf8:	e0bffb17 	ldw	r2,-20(fp)
  812bfc:	1085883a 	add	r2,r2,r2
  812c00:	1085883a 	add	r2,r2,r2
  812c04:	e0bffb15 	stw	r2,-20(fp)
  812c08:	e0bffc17 	ldw	r2,-16(fp)
  812c0c:	100490fa 	slli	r2,r2,3
  812c10:	e0bffc15 	stw	r2,-16(fp)
  812c14:	e0bffd17 	ldw	r2,-12(fp)
  812c18:	1085883a 	add	r2,r2,r2
  812c1c:	1085883a 	add	r2,r2,r2
  812c20:	e0bffd15 	stw	r2,-12(fp)
  812c24:	e43fda04 	addi	r16,fp,-152
  812c28:	e03f9115 	stw	zero,-444(fp)
  812c2c:	00002c06 	br	812ce0 <fill_inverse_cmap+0x1c8>
  812c30:	e03f9215 	stw	zero,-440(fp)
  812c34:	00002406 	br	812cc8 <fill_inverse_cmap+0x1b0>
  812c38:	e0fffb17 	ldw	r3,-20(fp)
  812c3c:	e0bf9117 	ldw	r2,-444(fp)
  812c40:	1885883a 	add	r2,r3,r2
  812c44:	1085883a 	add	r2,r2,r2
  812c48:	1085883a 	add	r2,r2,r2
  812c4c:	1007883a 	mov	r3,r2
  812c50:	e0bf9517 	ldw	r2,-428(fp)
  812c54:	10c5883a 	add	r2,r2,r3
  812c58:	10c00017 	ldw	r3,0(r2)
  812c5c:	e13ffc17 	ldw	r4,-16(fp)
  812c60:	e0bf9217 	ldw	r2,-440(fp)
  812c64:	2085883a 	add	r2,r4,r2
  812c68:	100491ba 	slli	r2,r2,6
  812c6c:	1887883a 	add	r3,r3,r2
  812c70:	e0bffd17 	ldw	r2,-12(fp)
  812c74:	1085883a 	add	r2,r2,r2
  812c78:	18a3883a 	add	r17,r3,r2
  812c7c:	e03f9315 	stw	zero,-436(fp)
  812c80:	00000b06 	br	812cb0 <fill_inverse_cmap+0x198>
  812c84:	8805883a 	mov	r2,r17
  812c88:	14400084 	addi	r17,r2,2
  812c8c:	8007883a 	mov	r3,r16
  812c90:	1c000044 	addi	r16,r3,1
  812c94:	18c00003 	ldbu	r3,0(r3)
  812c98:	18c03fcc 	andi	r3,r3,255
  812c9c:	18c00044 	addi	r3,r3,1
  812ca0:	10c0000d 	sth	r3,0(r2)
  812ca4:	e0bf9317 	ldw	r2,-436(fp)
  812ca8:	10800044 	addi	r2,r2,1
  812cac:	e0bf9315 	stw	r2,-436(fp)
  812cb0:	e0bf9317 	ldw	r2,-436(fp)
  812cb4:	10800110 	cmplti	r2,r2,4
  812cb8:	103ff21e 	bne	r2,zero,812c84 <__alt_mem_epcs_flash_controller_0+0xff809c84>
  812cbc:	e0bf9217 	ldw	r2,-440(fp)
  812cc0:	10800044 	addi	r2,r2,1
  812cc4:	e0bf9215 	stw	r2,-440(fp)
  812cc8:	e0bf9217 	ldw	r2,-440(fp)
  812ccc:	10800210 	cmplti	r2,r2,8
  812cd0:	103fd91e 	bne	r2,zero,812c38 <__alt_mem_epcs_flash_controller_0+0xff809c38>
  812cd4:	e0bf9117 	ldw	r2,-444(fp)
  812cd8:	10800044 	addi	r2,r2,1
  812cdc:	e0bf9115 	stw	r2,-444(fp)
  812ce0:	e0bf9117 	ldw	r2,-444(fp)
  812ce4:	10800110 	cmplti	r2,r2,4
  812ce8:	103fd11e 	bne	r2,zero,812c30 <__alt_mem_epcs_flash_controller_0+0xff809c30>
  812cec:	0001883a 	nop
  812cf0:	e6fffe04 	addi	sp,fp,-8
  812cf4:	dfc00317 	ldw	ra,12(sp)
  812cf8:	df000217 	ldw	fp,8(sp)
  812cfc:	dc400117 	ldw	r17,4(sp)
  812d00:	dc000017 	ldw	r16,0(sp)
  812d04:	dec00404 	addi	sp,sp,16
  812d08:	f800283a 	ret

00812d0c <pass2_no_dither>:
  812d0c:	deffef04 	addi	sp,sp,-68
  812d10:	dfc01015 	stw	ra,64(sp)
  812d14:	df000f15 	stw	fp,60(sp)
  812d18:	dd400e15 	stw	r21,56(sp)
  812d1c:	dd000d15 	stw	r20,52(sp)
  812d20:	dcc00c15 	stw	r19,48(sp)
  812d24:	dc800b15 	stw	r18,44(sp)
  812d28:	dc400a15 	stw	r17,40(sp)
  812d2c:	dc000915 	stw	r16,36(sp)
  812d30:	df000f04 	addi	fp,sp,60
  812d34:	e13ff615 	stw	r4,-40(fp)
  812d38:	e17ff715 	stw	r5,-36(fp)
  812d3c:	e1bff815 	stw	r6,-32(fp)
  812d40:	e1fff915 	stw	r7,-28(fp)
  812d44:	e0bff617 	ldw	r2,-40(fp)
  812d48:	10807917 	ldw	r2,484(r2)
  812d4c:	e0bff315 	stw	r2,-52(fp)
  812d50:	e0bff317 	ldw	r2,-52(fp)
  812d54:	10800617 	ldw	r2,24(r2)
  812d58:	e0bff415 	stw	r2,-48(fp)
  812d5c:	e0bff617 	ldw	r2,-40(fp)
  812d60:	10801c17 	ldw	r2,112(r2)
  812d64:	e0bff515 	stw	r2,-44(fp)
  812d68:	e03ff115 	stw	zero,-60(fp)
  812d6c:	00004406 	br	812e80 <pass2_no_dither+0x174>
  812d70:	e0bff117 	ldw	r2,-60(fp)
  812d74:	1085883a 	add	r2,r2,r2
  812d78:	1085883a 	add	r2,r2,r2
  812d7c:	1007883a 	mov	r3,r2
  812d80:	e0bff717 	ldw	r2,-36(fp)
  812d84:	10c5883a 	add	r2,r2,r3
  812d88:	14000017 	ldw	r16,0(r2)
  812d8c:	e0bff117 	ldw	r2,-60(fp)
  812d90:	1085883a 	add	r2,r2,r2
  812d94:	1085883a 	add	r2,r2,r2
  812d98:	1007883a 	mov	r3,r2
  812d9c:	e0bff817 	ldw	r2,-32(fp)
  812da0:	10c5883a 	add	r2,r2,r3
  812da4:	14c00017 	ldw	r19,0(r2)
  812da8:	e0bff517 	ldw	r2,-44(fp)
  812dac:	e0bff215 	stw	r2,-56(fp)
  812db0:	00002e06 	br	812e6c <pass2_no_dither+0x160>
  812db4:	8005883a 	mov	r2,r16
  812db8:	14000044 	addi	r16,r2,1
  812dbc:	10800003 	ldbu	r2,0(r2)
  812dc0:	10803fcc 	andi	r2,r2,255
  812dc4:	1004d0fa 	srli	r2,r2,3
  812dc8:	15003fcc 	andi	r20,r2,255
  812dcc:	8005883a 	mov	r2,r16
  812dd0:	14000044 	addi	r16,r2,1
  812dd4:	10800003 	ldbu	r2,0(r2)
  812dd8:	10803fcc 	andi	r2,r2,255
  812ddc:	1004d0ba 	srli	r2,r2,2
  812de0:	15403fcc 	andi	r21,r2,255
  812de4:	8005883a 	mov	r2,r16
  812de8:	14000044 	addi	r16,r2,1
  812dec:	10800003 	ldbu	r2,0(r2)
  812df0:	10803fcc 	andi	r2,r2,255
  812df4:	1004d0fa 	srli	r2,r2,3
  812df8:	14403fcc 	andi	r17,r2,255
  812dfc:	a005883a 	mov	r2,r20
  812e00:	1085883a 	add	r2,r2,r2
  812e04:	1085883a 	add	r2,r2,r2
  812e08:	1007883a 	mov	r3,r2
  812e0c:	e0bff417 	ldw	r2,-48(fp)
  812e10:	10c5883a 	add	r2,r2,r3
  812e14:	10c00017 	ldw	r3,0(r2)
  812e18:	a805883a 	mov	r2,r21
  812e1c:	100491ba 	slli	r2,r2,6
  812e20:	1887883a 	add	r3,r3,r2
  812e24:	8c45883a 	add	r2,r17,r17
  812e28:	18a5883a 	add	r18,r3,r2
  812e2c:	9080000b 	ldhu	r2,0(r18)
  812e30:	10bfffcc 	andi	r2,r2,65535
  812e34:	1000051e 	bne	r2,zero,812e4c <pass2_no_dither+0x140>
  812e38:	880f883a 	mov	r7,r17
  812e3c:	a80d883a 	mov	r6,r21
  812e40:	a00b883a 	mov	r5,r20
  812e44:	e13ff617 	ldw	r4,-40(fp)
  812e48:	0812b180 	call	812b18 <fill_inverse_cmap>
  812e4c:	9805883a 	mov	r2,r19
  812e50:	14c00044 	addi	r19,r2,1
  812e54:	90c0000b 	ldhu	r3,0(r18)
  812e58:	18ffffc4 	addi	r3,r3,-1
  812e5c:	10c00005 	stb	r3,0(r2)
  812e60:	e0bff217 	ldw	r2,-56(fp)
  812e64:	10bfffc4 	addi	r2,r2,-1
  812e68:	e0bff215 	stw	r2,-56(fp)
  812e6c:	e0bff217 	ldw	r2,-56(fp)
  812e70:	103fd01e 	bne	r2,zero,812db4 <__alt_mem_epcs_flash_controller_0+0xff809db4>
  812e74:	e0bff117 	ldw	r2,-60(fp)
  812e78:	10800044 	addi	r2,r2,1
  812e7c:	e0bff115 	stw	r2,-60(fp)
  812e80:	e0fff117 	ldw	r3,-60(fp)
  812e84:	e0bff917 	ldw	r2,-28(fp)
  812e88:	18bfb916 	blt	r3,r2,812d70 <__alt_mem_epcs_flash_controller_0+0xff809d70>
  812e8c:	0001883a 	nop
  812e90:	e6fffa04 	addi	sp,fp,-24
  812e94:	dfc00717 	ldw	ra,28(sp)
  812e98:	df000617 	ldw	fp,24(sp)
  812e9c:	dd400517 	ldw	r21,20(sp)
  812ea0:	dd000417 	ldw	r20,16(sp)
  812ea4:	dcc00317 	ldw	r19,12(sp)
  812ea8:	dc800217 	ldw	r18,8(sp)
  812eac:	dc400117 	ldw	r17,4(sp)
  812eb0:	dc000017 	ldw	r16,0(sp)
  812eb4:	dec00804 	addi	sp,sp,32
  812eb8:	f800283a 	ret

00812ebc <pass2_fs_dither>:
  812ebc:	deffdf04 	addi	sp,sp,-132
  812ec0:	dfc02015 	stw	ra,128(sp)
  812ec4:	df001f15 	stw	fp,124(sp)
  812ec8:	dd401e15 	stw	r21,120(sp)
  812ecc:	dd001d15 	stw	r20,116(sp)
  812ed0:	dcc01c15 	stw	r19,112(sp)
  812ed4:	dc801b15 	stw	r18,108(sp)
  812ed8:	dc401a15 	stw	r17,104(sp)
  812edc:	dc001915 	stw	r16,100(sp)
  812ee0:	df001f04 	addi	fp,sp,124
  812ee4:	e13ff615 	stw	r4,-40(fp)
  812ee8:	e17ff715 	stw	r5,-36(fp)
  812eec:	e1bff815 	stw	r6,-32(fp)
  812ef0:	e1fff915 	stw	r7,-28(fp)
  812ef4:	e0bff617 	ldw	r2,-40(fp)
  812ef8:	10807917 	ldw	r2,484(r2)
  812efc:	e0bfed15 	stw	r2,-76(fp)
  812f00:	e0bfed17 	ldw	r2,-76(fp)
  812f04:	10800617 	ldw	r2,24(r2)
  812f08:	e0bfee15 	stw	r2,-72(fp)
  812f0c:	e0bff617 	ldw	r2,-40(fp)
  812f10:	10801c17 	ldw	r2,112(r2)
  812f14:	e0bfef15 	stw	r2,-68(fp)
  812f18:	e0bff617 	ldw	r2,-40(fp)
  812f1c:	10805417 	ldw	r2,336(r2)
  812f20:	e0bff015 	stw	r2,-64(fp)
  812f24:	e0bfed17 	ldw	r2,-76(fp)
  812f28:	10800a17 	ldw	r2,40(r2)
  812f2c:	e0bff115 	stw	r2,-60(fp)
  812f30:	e0bff617 	ldw	r2,-40(fp)
  812f34:	10802217 	ldw	r2,136(r2)
  812f38:	10800017 	ldw	r2,0(r2)
  812f3c:	e0bff215 	stw	r2,-56(fp)
  812f40:	e0bff617 	ldw	r2,-40(fp)
  812f44:	10802217 	ldw	r2,136(r2)
  812f48:	10800117 	ldw	r2,4(r2)
  812f4c:	e0bff315 	stw	r2,-52(fp)
  812f50:	e0bff617 	ldw	r2,-40(fp)
  812f54:	10802217 	ldw	r2,136(r2)
  812f58:	10800217 	ldw	r2,8(r2)
  812f5c:	e0bff415 	stw	r2,-48(fp)
  812f60:	e03feb15 	stw	zero,-84(fp)
  812f64:	00011706 	br	8133c4 <pass2_fs_dither+0x508>
  812f68:	e0bfeb17 	ldw	r2,-84(fp)
  812f6c:	1085883a 	add	r2,r2,r2
  812f70:	1085883a 	add	r2,r2,r2
  812f74:	1007883a 	mov	r3,r2
  812f78:	e0bff717 	ldw	r2,-36(fp)
  812f7c:	10c5883a 	add	r2,r2,r3
  812f80:	10800017 	ldw	r2,0(r2)
  812f84:	e0bfe715 	stw	r2,-100(fp)
  812f88:	e0bfeb17 	ldw	r2,-84(fp)
  812f8c:	1085883a 	add	r2,r2,r2
  812f90:	1085883a 	add	r2,r2,r2
  812f94:	1007883a 	mov	r3,r2
  812f98:	e0bff817 	ldw	r2,-32(fp)
  812f9c:	10c5883a 	add	r2,r2,r3
  812fa0:	10800017 	ldw	r2,0(r2)
  812fa4:	e0bfe815 	stw	r2,-96(fp)
  812fa8:	e0bfed17 	ldw	r2,-76(fp)
  812fac:	10800917 	ldw	r2,36(r2)
  812fb0:	10001c26 	beq	r2,zero,813024 <pass2_fs_dither+0x168>
  812fb4:	e0ffef17 	ldw	r3,-68(fp)
  812fb8:	1805883a 	mov	r2,r3
  812fbc:	1085883a 	add	r2,r2,r2
  812fc0:	10c5883a 	add	r2,r2,r3
  812fc4:	10bfff44 	addi	r2,r2,-3
  812fc8:	e0ffe717 	ldw	r3,-100(fp)
  812fcc:	1885883a 	add	r2,r3,r2
  812fd0:	e0bfe715 	stw	r2,-100(fp)
  812fd4:	e0bfef17 	ldw	r2,-68(fp)
  812fd8:	10bfffc4 	addi	r2,r2,-1
  812fdc:	e0ffe817 	ldw	r3,-96(fp)
  812fe0:	1885883a 	add	r2,r3,r2
  812fe4:	e0bfe815 	stw	r2,-96(fp)
  812fe8:	00bfffc4 	movi	r2,-1
  812fec:	e0bfe915 	stw	r2,-92(fp)
  812ff0:	00bfff44 	movi	r2,-3
  812ff4:	e0bfea15 	stw	r2,-88(fp)
  812ff8:	e0bfed17 	ldw	r2,-76(fp)
  812ffc:	14000817 	ldw	r16,32(r2)
  813000:	e0bfef17 	ldw	r2,-68(fp)
  813004:	10800044 	addi	r2,r2,1
  813008:	01400184 	movi	r5,6
  81300c:	1009883a 	mov	r4,r2
  813010:	08301e80 	call	8301e8 <__mulsi3>
  813014:	80a7883a 	add	r19,r16,r2
  813018:	e0bfed17 	ldw	r2,-76(fp)
  81301c:	10000915 	stw	zero,36(r2)
  813020:	00000906 	br	813048 <pass2_fs_dither+0x18c>
  813024:	00800044 	movi	r2,1
  813028:	e0bfe915 	stw	r2,-92(fp)
  81302c:	008000c4 	movi	r2,3
  813030:	e0bfea15 	stw	r2,-88(fp)
  813034:	e0bfed17 	ldw	r2,-76(fp)
  813038:	14c00817 	ldw	r19,32(r2)
  81303c:	e0bfed17 	ldw	r2,-76(fp)
  813040:	00c00044 	movi	r3,1
  813044:	10c00915 	stw	r3,36(r2)
  813048:	0023883a 	mov	r17,zero
  81304c:	8821883a 	mov	r16,r17
  813050:	8025883a 	mov	r18,r16
  813054:	e03fe315 	stw	zero,-116(fp)
  813058:	e0bfe317 	ldw	r2,-116(fp)
  81305c:	e0bfe215 	stw	r2,-120(fp)
  813060:	e0bfe217 	ldw	r2,-120(fp)
  813064:	e0bfe115 	stw	r2,-124(fp)
  813068:	e03fe615 	stw	zero,-104(fp)
  81306c:	e0bfe617 	ldw	r2,-104(fp)
  813070:	e0bfe515 	stw	r2,-108(fp)
  813074:	e0bfe517 	ldw	r2,-108(fp)
  813078:	e0bfe415 	stw	r2,-112(fp)
  81307c:	e0bfef17 	ldw	r2,-68(fp)
  813080:	e0bfec15 	stw	r2,-80(fp)
  813084:	0000c206 	br	813390 <pass2_fs_dither+0x4d4>
  813088:	e0bfea17 	ldw	r2,-88(fp)
  81308c:	1085883a 	add	r2,r2,r2
  813090:	9885883a 	add	r2,r19,r2
  813094:	1080000b 	ldhu	r2,0(r2)
  813098:	10bfffcc 	andi	r2,r2,65535
  81309c:	10a0001c 	xori	r2,r2,32768
  8130a0:	10a00004 	addi	r2,r2,-32768
  8130a4:	1485883a 	add	r2,r2,r18
  8130a8:	10800204 	addi	r2,r2,8
  8130ac:	1025d13a 	srai	r18,r2,4
  8130b0:	e0bfea17 	ldw	r2,-88(fp)
  8130b4:	10800044 	addi	r2,r2,1
  8130b8:	1085883a 	add	r2,r2,r2
  8130bc:	9885883a 	add	r2,r19,r2
  8130c0:	1080000b 	ldhu	r2,0(r2)
  8130c4:	10bfffcc 	andi	r2,r2,65535
  8130c8:	10a0001c 	xori	r2,r2,32768
  8130cc:	10a00004 	addi	r2,r2,-32768
  8130d0:	1405883a 	add	r2,r2,r16
  8130d4:	10800204 	addi	r2,r2,8
  8130d8:	1021d13a 	srai	r16,r2,4
  8130dc:	e0bfea17 	ldw	r2,-88(fp)
  8130e0:	10800084 	addi	r2,r2,2
  8130e4:	1085883a 	add	r2,r2,r2
  8130e8:	9885883a 	add	r2,r19,r2
  8130ec:	1080000b 	ldhu	r2,0(r2)
  8130f0:	10bfffcc 	andi	r2,r2,65535
  8130f4:	10a0001c 	xori	r2,r2,32768
  8130f8:	10a00004 	addi	r2,r2,-32768
  8130fc:	1445883a 	add	r2,r2,r17
  813100:	10800204 	addi	r2,r2,8
  813104:	1023d13a 	srai	r17,r2,4
  813108:	9005883a 	mov	r2,r18
  81310c:	1085883a 	add	r2,r2,r2
  813110:	1085883a 	add	r2,r2,r2
  813114:	1007883a 	mov	r3,r2
  813118:	e0bff117 	ldw	r2,-60(fp)
  81311c:	10c5883a 	add	r2,r2,r3
  813120:	14800017 	ldw	r18,0(r2)
  813124:	8005883a 	mov	r2,r16
  813128:	1085883a 	add	r2,r2,r2
  81312c:	1085883a 	add	r2,r2,r2
  813130:	1007883a 	mov	r3,r2
  813134:	e0bff117 	ldw	r2,-60(fp)
  813138:	10c5883a 	add	r2,r2,r3
  81313c:	14000017 	ldw	r16,0(r2)
  813140:	8805883a 	mov	r2,r17
  813144:	1085883a 	add	r2,r2,r2
  813148:	1085883a 	add	r2,r2,r2
  81314c:	1007883a 	mov	r3,r2
  813150:	e0bff117 	ldw	r2,-60(fp)
  813154:	10c5883a 	add	r2,r2,r3
  813158:	14400017 	ldw	r17,0(r2)
  81315c:	e0bfe717 	ldw	r2,-100(fp)
  813160:	10800003 	ldbu	r2,0(r2)
  813164:	10803fcc 	andi	r2,r2,255
  813168:	90a5883a 	add	r18,r18,r2
  81316c:	e0bfe717 	ldw	r2,-100(fp)
  813170:	10800044 	addi	r2,r2,1
  813174:	10800003 	ldbu	r2,0(r2)
  813178:	10803fcc 	andi	r2,r2,255
  81317c:	80a1883a 	add	r16,r16,r2
  813180:	e0bfe717 	ldw	r2,-100(fp)
  813184:	10800084 	addi	r2,r2,2
  813188:	10800003 	ldbu	r2,0(r2)
  81318c:	10803fcc 	andi	r2,r2,255
  813190:	88a3883a 	add	r17,r17,r2
  813194:	9007883a 	mov	r3,r18
  813198:	e0bff017 	ldw	r2,-64(fp)
  81319c:	10c5883a 	add	r2,r2,r3
  8131a0:	10800003 	ldbu	r2,0(r2)
  8131a4:	14803fcc 	andi	r18,r2,255
  8131a8:	8007883a 	mov	r3,r16
  8131ac:	e0bff017 	ldw	r2,-64(fp)
  8131b0:	10c5883a 	add	r2,r2,r3
  8131b4:	10800003 	ldbu	r2,0(r2)
  8131b8:	14003fcc 	andi	r16,r2,255
  8131bc:	8807883a 	mov	r3,r17
  8131c0:	e0bff017 	ldw	r2,-64(fp)
  8131c4:	10c5883a 	add	r2,r2,r3
  8131c8:	10800003 	ldbu	r2,0(r2)
  8131cc:	14403fcc 	andi	r17,r2,255
  8131d0:	9005d0fa 	srai	r2,r18,3
  8131d4:	1085883a 	add	r2,r2,r2
  8131d8:	1085883a 	add	r2,r2,r2
  8131dc:	1007883a 	mov	r3,r2
  8131e0:	e0bfee17 	ldw	r2,-72(fp)
  8131e4:	10c5883a 	add	r2,r2,r3
  8131e8:	10c00017 	ldw	r3,0(r2)
  8131ec:	8005d0ba 	srai	r2,r16,2
  8131f0:	100491ba 	slli	r2,r2,6
  8131f4:	1887883a 	add	r3,r3,r2
  8131f8:	8805d0fa 	srai	r2,r17,3
  8131fc:	1085883a 	add	r2,r2,r2
  813200:	1885883a 	add	r2,r3,r2
  813204:	e0bff515 	stw	r2,-44(fp)
  813208:	e0bff517 	ldw	r2,-44(fp)
  81320c:	1080000b 	ldhu	r2,0(r2)
  813210:	10bfffcc 	andi	r2,r2,65535
  813214:	1000081e 	bne	r2,zero,813238 <pass2_fs_dither+0x37c>
  813218:	9005d0fa 	srai	r2,r18,3
  81321c:	8007d0ba 	srai	r3,r16,2
  813220:	8809d0fa 	srai	r4,r17,3
  813224:	200f883a 	mov	r7,r4
  813228:	180d883a 	mov	r6,r3
  81322c:	100b883a 	mov	r5,r2
  813230:	e13ff617 	ldw	r4,-40(fp)
  813234:	0812b180 	call	812b18 <fill_inverse_cmap>
  813238:	e0bff517 	ldw	r2,-44(fp)
  81323c:	1080000b 	ldhu	r2,0(r2)
  813240:	10bfffcc 	andi	r2,r2,65535
  813244:	153fffc4 	addi	r20,r2,-1
  813248:	a007883a 	mov	r3,r20
  81324c:	e0bfe817 	ldw	r2,-96(fp)
  813250:	10c00005 	stb	r3,0(r2)
  813254:	a007883a 	mov	r3,r20
  813258:	e0bff217 	ldw	r2,-56(fp)
  81325c:	10c5883a 	add	r2,r2,r3
  813260:	10800003 	ldbu	r2,0(r2)
  813264:	10803fcc 	andi	r2,r2,255
  813268:	90a5c83a 	sub	r18,r18,r2
  81326c:	a007883a 	mov	r3,r20
  813270:	e0bff317 	ldw	r2,-52(fp)
  813274:	10c5883a 	add	r2,r2,r3
  813278:	10800003 	ldbu	r2,0(r2)
  81327c:	10803fcc 	andi	r2,r2,255
  813280:	80a1c83a 	sub	r16,r16,r2
  813284:	a007883a 	mov	r3,r20
  813288:	e0bff417 	ldw	r2,-48(fp)
  81328c:	10c5883a 	add	r2,r2,r3
  813290:	10800003 	ldbu	r2,0(r2)
  813294:	10803fcc 	andi	r2,r2,255
  813298:	88a3c83a 	sub	r17,r17,r2
  81329c:	902b883a 	mov	r21,r18
  8132a0:	9485883a 	add	r2,r18,r18
  8132a4:	1029883a 	mov	r20,r2
  8132a8:	9525883a 	add	r18,r18,r20
  8132ac:	e0bfe417 	ldw	r2,-112(fp)
  8132b0:	1007883a 	mov	r3,r2
  8132b4:	9005883a 	mov	r2,r18
  8132b8:	1885883a 	add	r2,r3,r2
  8132bc:	9880000d 	sth	r2,0(r19)
  8132c0:	9525883a 	add	r18,r18,r20
  8132c4:	e0bfe117 	ldw	r2,-124(fp)
  8132c8:	1485883a 	add	r2,r2,r18
  8132cc:	e0bfe415 	stw	r2,-112(fp)
  8132d0:	e57fe115 	stw	r21,-124(fp)
  8132d4:	9525883a 	add	r18,r18,r20
  8132d8:	802b883a 	mov	r21,r16
  8132dc:	8405883a 	add	r2,r16,r16
  8132e0:	1029883a 	mov	r20,r2
  8132e4:	8521883a 	add	r16,r16,r20
  8132e8:	98800084 	addi	r2,r19,2
  8132ec:	e0ffe517 	ldw	r3,-108(fp)
  8132f0:	1809883a 	mov	r4,r3
  8132f4:	8007883a 	mov	r3,r16
  8132f8:	20c7883a 	add	r3,r4,r3
  8132fc:	10c0000d 	sth	r3,0(r2)
  813300:	8521883a 	add	r16,r16,r20
  813304:	e0bfe217 	ldw	r2,-120(fp)
  813308:	1405883a 	add	r2,r2,r16
  81330c:	e0bfe515 	stw	r2,-108(fp)
  813310:	e57fe215 	stw	r21,-120(fp)
  813314:	8521883a 	add	r16,r16,r20
  813318:	882b883a 	mov	r21,r17
  81331c:	8c45883a 	add	r2,r17,r17
  813320:	1029883a 	mov	r20,r2
  813324:	8d23883a 	add	r17,r17,r20
  813328:	98800104 	addi	r2,r19,4
  81332c:	e0ffe617 	ldw	r3,-104(fp)
  813330:	1809883a 	mov	r4,r3
  813334:	8807883a 	mov	r3,r17
  813338:	20c7883a 	add	r3,r4,r3
  81333c:	10c0000d 	sth	r3,0(r2)
  813340:	8d23883a 	add	r17,r17,r20
  813344:	e0bfe317 	ldw	r2,-116(fp)
  813348:	1445883a 	add	r2,r2,r17
  81334c:	e0bfe615 	stw	r2,-104(fp)
  813350:	e57fe315 	stw	r21,-116(fp)
  813354:	8d23883a 	add	r17,r17,r20
  813358:	e0bfea17 	ldw	r2,-88(fp)
  81335c:	e0ffe717 	ldw	r3,-100(fp)
  813360:	1885883a 	add	r2,r3,r2
  813364:	e0bfe715 	stw	r2,-100(fp)
  813368:	e0bfe917 	ldw	r2,-92(fp)
  81336c:	e0ffe817 	ldw	r3,-96(fp)
  813370:	1885883a 	add	r2,r3,r2
  813374:	e0bfe815 	stw	r2,-96(fp)
  813378:	e0bfea17 	ldw	r2,-88(fp)
  81337c:	1085883a 	add	r2,r2,r2
  813380:	98a7883a 	add	r19,r19,r2
  813384:	e0bfec17 	ldw	r2,-80(fp)
  813388:	10bfffc4 	addi	r2,r2,-1
  81338c:	e0bfec15 	stw	r2,-80(fp)
  813390:	e0bfec17 	ldw	r2,-80(fp)
  813394:	103f3c1e 	bne	r2,zero,813088 <__alt_mem_epcs_flash_controller_0+0xff80a088>
  813398:	e0bfe417 	ldw	r2,-112(fp)
  81339c:	9880000d 	sth	r2,0(r19)
  8133a0:	98800084 	addi	r2,r19,2
  8133a4:	e0ffe517 	ldw	r3,-108(fp)
  8133a8:	10c0000d 	sth	r3,0(r2)
  8133ac:	98800104 	addi	r2,r19,4
  8133b0:	e0ffe617 	ldw	r3,-104(fp)
  8133b4:	10c0000d 	sth	r3,0(r2)
  8133b8:	e0bfeb17 	ldw	r2,-84(fp)
  8133bc:	10800044 	addi	r2,r2,1
  8133c0:	e0bfeb15 	stw	r2,-84(fp)
  8133c4:	e0ffeb17 	ldw	r3,-84(fp)
  8133c8:	e0bff917 	ldw	r2,-28(fp)
  8133cc:	18bee616 	blt	r3,r2,812f68 <__alt_mem_epcs_flash_controller_0+0xff809f68>
  8133d0:	0001883a 	nop
  8133d4:	e6fffa04 	addi	sp,fp,-24
  8133d8:	dfc00717 	ldw	ra,28(sp)
  8133dc:	df000617 	ldw	fp,24(sp)
  8133e0:	dd400517 	ldw	r21,20(sp)
  8133e4:	dd000417 	ldw	r20,16(sp)
  8133e8:	dcc00317 	ldw	r19,12(sp)
  8133ec:	dc800217 	ldw	r18,8(sp)
  8133f0:	dc400117 	ldw	r17,4(sp)
  8133f4:	dc000017 	ldw	r16,0(sp)
  8133f8:	dec00804 	addi	sp,sp,32
  8133fc:	f800283a 	ret

00813400 <init_error_limit>:
  813400:	defff904 	addi	sp,sp,-28
  813404:	dfc00615 	stw	ra,24(sp)
  813408:	df000515 	stw	fp,20(sp)
  81340c:	df000504 	addi	fp,sp,20
  813410:	e13fff15 	stw	r4,-4(fp)
  813414:	e0bfff17 	ldw	r2,-4(fp)
  813418:	10807917 	ldw	r2,484(r2)
  81341c:	e0bffd15 	stw	r2,-12(fp)
  813420:	e0bfff17 	ldw	r2,-4(fp)
  813424:	10800117 	ldw	r2,4(r2)
  813428:	10800017 	ldw	r2,0(r2)
  81342c:	0181ff04 	movi	r6,2044
  813430:	01400044 	movi	r5,1
  813434:	e13fff17 	ldw	r4,-4(fp)
  813438:	103ee83a 	callr	r2
  81343c:	e0bffe15 	stw	r2,-8(fp)
  813440:	e0bffe17 	ldw	r2,-8(fp)
  813444:	1080ff04 	addi	r2,r2,1020
  813448:	e0bffe15 	stw	r2,-8(fp)
  81344c:	e0bffd17 	ldw	r2,-12(fp)
  813450:	e0fffe17 	ldw	r3,-8(fp)
  813454:	10c00a15 	stw	r3,40(r2)
  813458:	e03ffc15 	stw	zero,-16(fp)
  81345c:	e03ffb15 	stw	zero,-20(fp)
  813460:	00001806 	br	8134c4 <init_error_limit+0xc4>
  813464:	e0bffb17 	ldw	r2,-20(fp)
  813468:	1085883a 	add	r2,r2,r2
  81346c:	1085883a 	add	r2,r2,r2
  813470:	1007883a 	mov	r3,r2
  813474:	e0bffe17 	ldw	r2,-8(fp)
  813478:	10c5883a 	add	r2,r2,r3
  81347c:	e0fffc17 	ldw	r3,-16(fp)
  813480:	10c00015 	stw	r3,0(r2)
  813484:	e0bffb17 	ldw	r2,-20(fp)
  813488:	017fff04 	movi	r5,-4
  81348c:	1009883a 	mov	r4,r2
  813490:	08301e80 	call	8301e8 <__mulsi3>
  813494:	1007883a 	mov	r3,r2
  813498:	e0bffe17 	ldw	r2,-8(fp)
  81349c:	10c5883a 	add	r2,r2,r3
  8134a0:	e0fffc17 	ldw	r3,-16(fp)
  8134a4:	00c7c83a 	sub	r3,zero,r3
  8134a8:	10c00015 	stw	r3,0(r2)
  8134ac:	e0bffb17 	ldw	r2,-20(fp)
  8134b0:	10800044 	addi	r2,r2,1
  8134b4:	e0bffb15 	stw	r2,-20(fp)
  8134b8:	e0bffc17 	ldw	r2,-16(fp)
  8134bc:	10800044 	addi	r2,r2,1
  8134c0:	e0bffc15 	stw	r2,-16(fp)
  8134c4:	e0bffb17 	ldw	r2,-20(fp)
  8134c8:	10800410 	cmplti	r2,r2,16
  8134cc:	103fe51e 	bne	r2,zero,813464 <__alt_mem_epcs_flash_controller_0+0xff80a464>
  8134d0:	00001c06 	br	813544 <init_error_limit+0x144>
  8134d4:	e0bffb17 	ldw	r2,-20(fp)
  8134d8:	1085883a 	add	r2,r2,r2
  8134dc:	1085883a 	add	r2,r2,r2
  8134e0:	1007883a 	mov	r3,r2
  8134e4:	e0bffe17 	ldw	r2,-8(fp)
  8134e8:	10c5883a 	add	r2,r2,r3
  8134ec:	e0fffc17 	ldw	r3,-16(fp)
  8134f0:	10c00015 	stw	r3,0(r2)
  8134f4:	e0bffb17 	ldw	r2,-20(fp)
  8134f8:	017fff04 	movi	r5,-4
  8134fc:	1009883a 	mov	r4,r2
  813500:	08301e80 	call	8301e8 <__mulsi3>
  813504:	1007883a 	mov	r3,r2
  813508:	e0bffe17 	ldw	r2,-8(fp)
  81350c:	10c5883a 	add	r2,r2,r3
  813510:	e0fffc17 	ldw	r3,-16(fp)
  813514:	00c7c83a 	sub	r3,zero,r3
  813518:	10c00015 	stw	r3,0(r2)
  81351c:	e0bffb17 	ldw	r2,-20(fp)
  813520:	10800044 	addi	r2,r2,1
  813524:	e0bffb15 	stw	r2,-20(fp)
  813528:	e0bffb17 	ldw	r2,-20(fp)
  81352c:	1080004c 	andi	r2,r2,1
  813530:	1005003a 	cmpeq	r2,r2,zero
  813534:	10803fcc 	andi	r2,r2,255
  813538:	e0fffc17 	ldw	r3,-16(fp)
  81353c:	1885883a 	add	r2,r3,r2
  813540:	e0bffc15 	stw	r2,-16(fp)
  813544:	e0bffb17 	ldw	r2,-20(fp)
  813548:	10800c10 	cmplti	r2,r2,48
  81354c:	103fe11e 	bne	r2,zero,8134d4 <__alt_mem_epcs_flash_controller_0+0xff80a4d4>
  813550:	00001506 	br	8135a8 <init_error_limit+0x1a8>
  813554:	e0bffb17 	ldw	r2,-20(fp)
  813558:	1085883a 	add	r2,r2,r2
  81355c:	1085883a 	add	r2,r2,r2
  813560:	1007883a 	mov	r3,r2
  813564:	e0bffe17 	ldw	r2,-8(fp)
  813568:	10c5883a 	add	r2,r2,r3
  81356c:	e0fffc17 	ldw	r3,-16(fp)
  813570:	10c00015 	stw	r3,0(r2)
  813574:	e0bffb17 	ldw	r2,-20(fp)
  813578:	017fff04 	movi	r5,-4
  81357c:	1009883a 	mov	r4,r2
  813580:	08301e80 	call	8301e8 <__mulsi3>
  813584:	1007883a 	mov	r3,r2
  813588:	e0bffe17 	ldw	r2,-8(fp)
  81358c:	10c5883a 	add	r2,r2,r3
  813590:	e0fffc17 	ldw	r3,-16(fp)
  813594:	00c7c83a 	sub	r3,zero,r3
  813598:	10c00015 	stw	r3,0(r2)
  81359c:	e0bffb17 	ldw	r2,-20(fp)
  8135a0:	10800044 	addi	r2,r2,1
  8135a4:	e0bffb15 	stw	r2,-20(fp)
  8135a8:	e0bffb17 	ldw	r2,-20(fp)
  8135ac:	10804010 	cmplti	r2,r2,256
  8135b0:	103fe81e 	bne	r2,zero,813554 <__alt_mem_epcs_flash_controller_0+0xff80a554>
  8135b4:	0001883a 	nop
  8135b8:	e037883a 	mov	sp,fp
  8135bc:	dfc00117 	ldw	ra,4(sp)
  8135c0:	df000017 	ldw	fp,0(sp)
  8135c4:	dec00204 	addi	sp,sp,8
  8135c8:	f800283a 	ret

008135cc <finish_pass1>:
  8135cc:	defffc04 	addi	sp,sp,-16
  8135d0:	dfc00315 	stw	ra,12(sp)
  8135d4:	df000215 	stw	fp,8(sp)
  8135d8:	df000204 	addi	fp,sp,8
  8135dc:	e13fff15 	stw	r4,-4(fp)
  8135e0:	e0bfff17 	ldw	r2,-4(fp)
  8135e4:	10807917 	ldw	r2,484(r2)
  8135e8:	e0bffe15 	stw	r2,-8(fp)
  8135ec:	e0bffe17 	ldw	r2,-8(fp)
  8135f0:	10c00417 	ldw	r3,16(r2)
  8135f4:	e0bfff17 	ldw	r2,-4(fp)
  8135f8:	10c02215 	stw	r3,136(r2)
  8135fc:	e0bffe17 	ldw	r2,-8(fp)
  813600:	10800517 	ldw	r2,20(r2)
  813604:	100b883a 	mov	r5,r2
  813608:	e13fff17 	ldw	r4,-4(fp)
  81360c:	08121780 	call	812178 <select_colors>
  813610:	e0bffe17 	ldw	r2,-8(fp)
  813614:	00c00044 	movi	r3,1
  813618:	10c00715 	stw	r3,28(r2)
  81361c:	0001883a 	nop
  813620:	e037883a 	mov	sp,fp
  813624:	dfc00117 	ldw	ra,4(sp)
  813628:	df000017 	ldw	fp,0(sp)
  81362c:	dec00204 	addi	sp,sp,8
  813630:	f800283a 	ret

00813634 <finish_pass2>:
  813634:	defffe04 	addi	sp,sp,-8
  813638:	df000115 	stw	fp,4(sp)
  81363c:	df000104 	addi	fp,sp,4
  813640:	e13fff15 	stw	r4,-4(fp)
  813644:	0001883a 	nop
  813648:	e037883a 	mov	sp,fp
  81364c:	df000017 	ldw	fp,0(sp)
  813650:	dec00104 	addi	sp,sp,4
  813654:	f800283a 	ret

00813658 <start_pass_2_quant>:
  813658:	defff804 	addi	sp,sp,-32
  81365c:	dfc00715 	stw	ra,28(sp)
  813660:	df000615 	stw	fp,24(sp)
  813664:	df000604 	addi	fp,sp,24
  813668:	e13ffe15 	stw	r4,-8(fp)
  81366c:	e17fff15 	stw	r5,-4(fp)
  813670:	e0bffe17 	ldw	r2,-8(fp)
  813674:	10807917 	ldw	r2,484(r2)
  813678:	e0bffb15 	stw	r2,-20(fp)
  81367c:	e0bffb17 	ldw	r2,-20(fp)
  813680:	10800617 	ldw	r2,24(r2)
  813684:	e0bffc15 	stw	r2,-16(fp)
  813688:	e0bffe17 	ldw	r2,-8(fp)
  81368c:	10801617 	ldw	r2,88(r2)
  813690:	10000326 	beq	r2,zero,8136a0 <start_pass_2_quant+0x48>
  813694:	e0bffe17 	ldw	r2,-8(fp)
  813698:	00c00084 	movi	r3,2
  81369c:	10c01615 	stw	r3,88(r2)
  8136a0:	e0bfff17 	ldw	r2,-4(fp)
  8136a4:	10000c26 	beq	r2,zero,8136d8 <start_pass_2_quant+0x80>
  8136a8:	e0fffb17 	ldw	r3,-20(fp)
  8136ac:	00802074 	movhi	r2,129
  8136b0:	1084c604 	addi	r2,r2,4888
  8136b4:	18800115 	stw	r2,4(r3)
  8136b8:	e0fffb17 	ldw	r3,-20(fp)
  8136bc:	00802074 	movhi	r2,129
  8136c0:	108d7304 	addi	r2,r2,13772
  8136c4:	18800215 	stw	r2,8(r3)
  8136c8:	e0bffb17 	ldw	r2,-20(fp)
  8136cc:	00c00044 	movi	r3,1
  8136d0:	10c00715 	stw	r3,28(r2)
  8136d4:	00005806 	br	813838 <start_pass_2_quant+0x1e0>
  8136d8:	e0bffe17 	ldw	r2,-8(fp)
  8136dc:	10801617 	ldw	r2,88(r2)
  8136e0:	10800098 	cmpnei	r2,r2,2
  8136e4:	1000051e 	bne	r2,zero,8136fc <start_pass_2_quant+0xa4>
  8136e8:	e0fffb17 	ldw	r3,-20(fp)
  8136ec:	00802074 	movhi	r2,129
  8136f0:	108baf04 	addi	r2,r2,11964
  8136f4:	18800115 	stw	r2,4(r3)
  8136f8:	00000406 	br	81370c <start_pass_2_quant+0xb4>
  8136fc:	e0fffb17 	ldw	r3,-20(fp)
  813700:	00802074 	movhi	r2,129
  813704:	108b4304 	addi	r2,r2,11532
  813708:	18800115 	stw	r2,4(r3)
  81370c:	e0fffb17 	ldw	r3,-20(fp)
  813710:	00802074 	movhi	r2,129
  813714:	108d8d04 	addi	r2,r2,13876
  813718:	18800215 	stw	r2,8(r3)
  81371c:	e0bffe17 	ldw	r2,-8(fp)
  813720:	10802117 	ldw	r2,132(r2)
  813724:	e0bffa15 	stw	r2,-24(fp)
  813728:	e0bffa17 	ldw	r2,-24(fp)
  81372c:	00800d16 	blt	zero,r2,813764 <start_pass_2_quant+0x10c>
  813730:	e0bffe17 	ldw	r2,-8(fp)
  813734:	10800017 	ldw	r2,0(r2)
  813738:	00c00e84 	movi	r3,58
  81373c:	10c00515 	stw	r3,20(r2)
  813740:	e0bffe17 	ldw	r2,-8(fp)
  813744:	10800017 	ldw	r2,0(r2)
  813748:	00c00044 	movi	r3,1
  81374c:	10c00615 	stw	r3,24(r2)
  813750:	e0bffe17 	ldw	r2,-8(fp)
  813754:	10800017 	ldw	r2,0(r2)
  813758:	10800017 	ldw	r2,0(r2)
  81375c:	e13ffe17 	ldw	r4,-8(fp)
  813760:	103ee83a 	callr	r2
  813764:	e0bffa17 	ldw	r2,-24(fp)
  813768:	10804050 	cmplti	r2,r2,257
  81376c:	10000d1e 	bne	r2,zero,8137a4 <start_pass_2_quant+0x14c>
  813770:	e0bffe17 	ldw	r2,-8(fp)
  813774:	10800017 	ldw	r2,0(r2)
  813778:	00c00ec4 	movi	r3,59
  81377c:	10c00515 	stw	r3,20(r2)
  813780:	e0bffe17 	ldw	r2,-8(fp)
  813784:	10800017 	ldw	r2,0(r2)
  813788:	00c04004 	movi	r3,256
  81378c:	10c00615 	stw	r3,24(r2)
  813790:	e0bffe17 	ldw	r2,-8(fp)
  813794:	10800017 	ldw	r2,0(r2)
  813798:	10800017 	ldw	r2,0(r2)
  81379c:	e13ffe17 	ldw	r4,-8(fp)
  8137a0:	103ee83a 	callr	r2
  8137a4:	e0bffe17 	ldw	r2,-8(fp)
  8137a8:	10801617 	ldw	r2,88(r2)
  8137ac:	10800098 	cmpnei	r2,r2,2
  8137b0:	1000211e 	bne	r2,zero,813838 <start_pass_2_quant+0x1e0>
  8137b4:	e0bffe17 	ldw	r2,-8(fp)
  8137b8:	10801c17 	ldw	r2,112(r2)
  8137bc:	01400184 	movi	r5,6
  8137c0:	1009883a 	mov	r4,r2
  8137c4:	08301e80 	call	8301e8 <__mulsi3>
  8137c8:	10800304 	addi	r2,r2,12
  8137cc:	e0bffd15 	stw	r2,-12(fp)
  8137d0:	e0bffb17 	ldw	r2,-20(fp)
  8137d4:	10800817 	ldw	r2,32(r2)
  8137d8:	10000a1e 	bne	r2,zero,813804 <start_pass_2_quant+0x1ac>
  8137dc:	e0bffe17 	ldw	r2,-8(fp)
  8137e0:	10800117 	ldw	r2,4(r2)
  8137e4:	10800117 	ldw	r2,4(r2)
  8137e8:	e1bffd17 	ldw	r6,-12(fp)
  8137ec:	01400044 	movi	r5,1
  8137f0:	e13ffe17 	ldw	r4,-8(fp)
  8137f4:	103ee83a 	callr	r2
  8137f8:	1007883a 	mov	r3,r2
  8137fc:	e0bffb17 	ldw	r2,-20(fp)
  813800:	10c00815 	stw	r3,32(r2)
  813804:	e0bffb17 	ldw	r2,-20(fp)
  813808:	10800817 	ldw	r2,32(r2)
  81380c:	e1bffd17 	ldw	r6,-12(fp)
  813810:	000b883a 	mov	r5,zero
  813814:	1009883a 	mov	r4,r2
  813818:	0833d940 	call	833d94 <memset>
  81381c:	e0bffb17 	ldw	r2,-20(fp)
  813820:	10800a17 	ldw	r2,40(r2)
  813824:	1000021e 	bne	r2,zero,813830 <start_pass_2_quant+0x1d8>
  813828:	e13ffe17 	ldw	r4,-8(fp)
  81382c:	08134000 	call	813400 <init_error_limit>
  813830:	e0bffb17 	ldw	r2,-20(fp)
  813834:	10000915 	stw	zero,36(r2)
  813838:	e0bffb17 	ldw	r2,-20(fp)
  81383c:	10800717 	ldw	r2,28(r2)
  813840:	10001526 	beq	r2,zero,813898 <start_pass_2_quant+0x240>
  813844:	e03ffa15 	stw	zero,-24(fp)
  813848:	00000e06 	br	813884 <start_pass_2_quant+0x22c>
  81384c:	e0bffa17 	ldw	r2,-24(fp)
  813850:	1085883a 	add	r2,r2,r2
  813854:	1085883a 	add	r2,r2,r2
  813858:	1007883a 	mov	r3,r2
  81385c:	e0bffc17 	ldw	r2,-16(fp)
  813860:	10c5883a 	add	r2,r2,r3
  813864:	10800017 	ldw	r2,0(r2)
  813868:	01840004 	movi	r6,4096
  81386c:	000b883a 	mov	r5,zero
  813870:	1009883a 	mov	r4,r2
  813874:	0833d940 	call	833d94 <memset>
  813878:	e0bffa17 	ldw	r2,-24(fp)
  81387c:	10800044 	addi	r2,r2,1
  813880:	e0bffa15 	stw	r2,-24(fp)
  813884:	e0bffa17 	ldw	r2,-24(fp)
  813888:	10800810 	cmplti	r2,r2,32
  81388c:	103fef1e 	bne	r2,zero,81384c <__alt_mem_epcs_flash_controller_0+0xff80a84c>
  813890:	e0bffb17 	ldw	r2,-20(fp)
  813894:	10000715 	stw	zero,28(r2)
  813898:	0001883a 	nop
  81389c:	e037883a 	mov	sp,fp
  8138a0:	dfc00117 	ldw	ra,4(sp)
  8138a4:	df000017 	ldw	fp,0(sp)
  8138a8:	dec00204 	addi	sp,sp,8
  8138ac:	f800283a 	ret

008138b0 <new_color_map_2_quant>:
  8138b0:	defffd04 	addi	sp,sp,-12
  8138b4:	df000215 	stw	fp,8(sp)
  8138b8:	df000204 	addi	fp,sp,8
  8138bc:	e13fff15 	stw	r4,-4(fp)
  8138c0:	e0bfff17 	ldw	r2,-4(fp)
  8138c4:	10807917 	ldw	r2,484(r2)
  8138c8:	e0bffe15 	stw	r2,-8(fp)
  8138cc:	e0bffe17 	ldw	r2,-8(fp)
  8138d0:	00c00044 	movi	r3,1
  8138d4:	10c00715 	stw	r3,28(r2)
  8138d8:	0001883a 	nop
  8138dc:	e037883a 	mov	sp,fp
  8138e0:	df000017 	ldw	fp,0(sp)
  8138e4:	dec00104 	addi	sp,sp,4
  8138e8:	f800283a 	ret

008138ec <jinit_2pass_quantizer>:
  8138ec:	defff904 	addi	sp,sp,-28
  8138f0:	dfc00615 	stw	ra,24(sp)
  8138f4:	df000515 	stw	fp,20(sp)
  8138f8:	dc000415 	stw	r16,16(sp)
  8138fc:	df000504 	addi	fp,sp,20
  813900:	e13ffe15 	stw	r4,-8(fp)
  813904:	e0bffe17 	ldw	r2,-8(fp)
  813908:	10800117 	ldw	r2,4(r2)
  81390c:	10800017 	ldw	r2,0(r2)
  813910:	01800b04 	movi	r6,44
  813914:	01400044 	movi	r5,1
  813918:	e13ffe17 	ldw	r4,-8(fp)
  81391c:	103ee83a 	callr	r2
  813920:	e0bffc15 	stw	r2,-16(fp)
  813924:	e0bffe17 	ldw	r2,-8(fp)
  813928:	e0fffc17 	ldw	r3,-16(fp)
  81392c:	10c07915 	stw	r3,484(r2)
  813930:	e0fffc17 	ldw	r3,-16(fp)
  813934:	00802074 	movhi	r2,129
  813938:	108d9604 	addi	r2,r2,13912
  81393c:	18800015 	stw	r2,0(r3)
  813940:	e0fffc17 	ldw	r3,-16(fp)
  813944:	00802074 	movhi	r2,129
  813948:	108e2c04 	addi	r2,r2,14512
  81394c:	18800315 	stw	r2,12(r3)
  813950:	e0bffc17 	ldw	r2,-16(fp)
  813954:	10000815 	stw	zero,32(r2)
  813958:	e0bffc17 	ldw	r2,-16(fp)
  81395c:	10000a15 	stw	zero,40(r2)
  813960:	e0bffe17 	ldw	r2,-8(fp)
  813964:	10801e17 	ldw	r2,120(r2)
  813968:	108000e0 	cmpeqi	r2,r2,3
  81396c:	1000091e 	bne	r2,zero,813994 <jinit_2pass_quantizer+0xa8>
  813970:	e0bffe17 	ldw	r2,-8(fp)
  813974:	10800017 	ldw	r2,0(r2)
  813978:	00c00c04 	movi	r3,48
  81397c:	10c00515 	stw	r3,20(r2)
  813980:	e0bffe17 	ldw	r2,-8(fp)
  813984:	10800017 	ldw	r2,0(r2)
  813988:	10800017 	ldw	r2,0(r2)
  81398c:	e13ffe17 	ldw	r4,-8(fp)
  813990:	103ee83a 	callr	r2
  813994:	e0bffe17 	ldw	r2,-8(fp)
  813998:	10800117 	ldw	r2,4(r2)
  81399c:	10800017 	ldw	r2,0(r2)
  8139a0:	01802004 	movi	r6,128
  8139a4:	01400044 	movi	r5,1
  8139a8:	e13ffe17 	ldw	r4,-8(fp)
  8139ac:	103ee83a 	callr	r2
  8139b0:	1007883a 	mov	r3,r2
  8139b4:	e0bffc17 	ldw	r2,-16(fp)
  8139b8:	10c00615 	stw	r3,24(r2)
  8139bc:	e03ffb15 	stw	zero,-20(fp)
  8139c0:	00001106 	br	813a08 <jinit_2pass_quantizer+0x11c>
  8139c4:	e0bffc17 	ldw	r2,-16(fp)
  8139c8:	10c00617 	ldw	r3,24(r2)
  8139cc:	e0bffb17 	ldw	r2,-20(fp)
  8139d0:	1085883a 	add	r2,r2,r2
  8139d4:	1085883a 	add	r2,r2,r2
  8139d8:	18a1883a 	add	r16,r3,r2
  8139dc:	e0bffe17 	ldw	r2,-8(fp)
  8139e0:	10800117 	ldw	r2,4(r2)
  8139e4:	10800117 	ldw	r2,4(r2)
  8139e8:	01840004 	movi	r6,4096
  8139ec:	01400044 	movi	r5,1
  8139f0:	e13ffe17 	ldw	r4,-8(fp)
  8139f4:	103ee83a 	callr	r2
  8139f8:	80800015 	stw	r2,0(r16)
  8139fc:	e0bffb17 	ldw	r2,-20(fp)
  813a00:	10800044 	addi	r2,r2,1
  813a04:	e0bffb15 	stw	r2,-20(fp)
  813a08:	e0bffb17 	ldw	r2,-20(fp)
  813a0c:	10800810 	cmplti	r2,r2,32
  813a10:	103fec1e 	bne	r2,zero,8139c4 <__alt_mem_epcs_flash_controller_0+0xff80a9c4>
  813a14:	e0bffc17 	ldw	r2,-16(fp)
  813a18:	00c00044 	movi	r3,1
  813a1c:	10c00715 	stw	r3,28(r2)
  813a20:	e0bffe17 	ldw	r2,-8(fp)
  813a24:	10801b17 	ldw	r2,108(r2)
  813a28:	10003326 	beq	r2,zero,813af8 <jinit_2pass_quantizer+0x20c>
  813a2c:	e0bffe17 	ldw	r2,-8(fp)
  813a30:	10801817 	ldw	r2,96(r2)
  813a34:	e0bffd15 	stw	r2,-12(fp)
  813a38:	e0bffd17 	ldw	r2,-12(fp)
  813a3c:	10800208 	cmpgei	r2,r2,8
  813a40:	10000d1e 	bne	r2,zero,813a78 <jinit_2pass_quantizer+0x18c>
  813a44:	e0bffe17 	ldw	r2,-8(fp)
  813a48:	10800017 	ldw	r2,0(r2)
  813a4c:	00c00e84 	movi	r3,58
  813a50:	10c00515 	stw	r3,20(r2)
  813a54:	e0bffe17 	ldw	r2,-8(fp)
  813a58:	10800017 	ldw	r2,0(r2)
  813a5c:	00c00204 	movi	r3,8
  813a60:	10c00615 	stw	r3,24(r2)
  813a64:	e0bffe17 	ldw	r2,-8(fp)
  813a68:	10800017 	ldw	r2,0(r2)
  813a6c:	10800017 	ldw	r2,0(r2)
  813a70:	e13ffe17 	ldw	r4,-8(fp)
  813a74:	103ee83a 	callr	r2
  813a78:	e0bffd17 	ldw	r2,-12(fp)
  813a7c:	10804050 	cmplti	r2,r2,257
  813a80:	10000d1e 	bne	r2,zero,813ab8 <jinit_2pass_quantizer+0x1cc>
  813a84:	e0bffe17 	ldw	r2,-8(fp)
  813a88:	10800017 	ldw	r2,0(r2)
  813a8c:	00c00ec4 	movi	r3,59
  813a90:	10c00515 	stw	r3,20(r2)
  813a94:	e0bffe17 	ldw	r2,-8(fp)
  813a98:	10800017 	ldw	r2,0(r2)
  813a9c:	00c04004 	movi	r3,256
  813aa0:	10c00615 	stw	r3,24(r2)
  813aa4:	e0bffe17 	ldw	r2,-8(fp)
  813aa8:	10800017 	ldw	r2,0(r2)
  813aac:	10800017 	ldw	r2,0(r2)
  813ab0:	e13ffe17 	ldw	r4,-8(fp)
  813ab4:	103ee83a 	callr	r2
  813ab8:	e0bffe17 	ldw	r2,-8(fp)
  813abc:	10800117 	ldw	r2,4(r2)
  813ac0:	10800217 	ldw	r2,8(r2)
  813ac4:	e0fffd17 	ldw	r3,-12(fp)
  813ac8:	01c000c4 	movi	r7,3
  813acc:	180d883a 	mov	r6,r3
  813ad0:	01400044 	movi	r5,1
  813ad4:	e13ffe17 	ldw	r4,-8(fp)
  813ad8:	103ee83a 	callr	r2
  813adc:	1007883a 	mov	r3,r2
  813ae0:	e0bffc17 	ldw	r2,-16(fp)
  813ae4:	10c00415 	stw	r3,16(r2)
  813ae8:	e0bffc17 	ldw	r2,-16(fp)
  813aec:	e0fffd17 	ldw	r3,-12(fp)
  813af0:	10c00515 	stw	r3,20(r2)
  813af4:	00000206 	br	813b00 <jinit_2pass_quantizer+0x214>
  813af8:	e0bffc17 	ldw	r2,-16(fp)
  813afc:	10000415 	stw	zero,16(r2)
  813b00:	e0bffe17 	ldw	r2,-8(fp)
  813b04:	10801617 	ldw	r2,88(r2)
  813b08:	10000326 	beq	r2,zero,813b18 <jinit_2pass_quantizer+0x22c>
  813b0c:	e0bffe17 	ldw	r2,-8(fp)
  813b10:	00c00084 	movi	r3,2
  813b14:	10c01615 	stw	r3,88(r2)
  813b18:	e0bffe17 	ldw	r2,-8(fp)
  813b1c:	10801617 	ldw	r2,88(r2)
  813b20:	10800098 	cmpnei	r2,r2,2
  813b24:	1000121e 	bne	r2,zero,813b70 <jinit_2pass_quantizer+0x284>
  813b28:	e0bffe17 	ldw	r2,-8(fp)
  813b2c:	10800117 	ldw	r2,4(r2)
  813b30:	14000117 	ldw	r16,4(r2)
  813b34:	e0bffe17 	ldw	r2,-8(fp)
  813b38:	10801c17 	ldw	r2,112(r2)
  813b3c:	01400184 	movi	r5,6
  813b40:	1009883a 	mov	r4,r2
  813b44:	08301e80 	call	8301e8 <__mulsi3>
  813b48:	10800304 	addi	r2,r2,12
  813b4c:	100d883a 	mov	r6,r2
  813b50:	01400044 	movi	r5,1
  813b54:	e13ffe17 	ldw	r4,-8(fp)
  813b58:	803ee83a 	callr	r16
  813b5c:	1007883a 	mov	r3,r2
  813b60:	e0bffc17 	ldw	r2,-16(fp)
  813b64:	10c00815 	stw	r3,32(r2)
  813b68:	e13ffe17 	ldw	r4,-8(fp)
  813b6c:	08134000 	call	813400 <init_error_limit>
  813b70:	0001883a 	nop
  813b74:	e6ffff04 	addi	sp,fp,-4
  813b78:	dfc00217 	ldw	ra,8(sp)
  813b7c:	df000117 	ldw	fp,4(sp)
  813b80:	dc000017 	ldw	r16,0(sp)
  813b84:	dec00304 	addi	sp,sp,12
  813b88:	f800283a 	ret

00813b8c <jdiv_round_up>:
  813b8c:	defffc04 	addi	sp,sp,-16
  813b90:	dfc00315 	stw	ra,12(sp)
  813b94:	df000215 	stw	fp,8(sp)
  813b98:	df000204 	addi	fp,sp,8
  813b9c:	e13ffe15 	stw	r4,-8(fp)
  813ba0:	e17fff15 	stw	r5,-4(fp)
  813ba4:	e0fffe17 	ldw	r3,-8(fp)
  813ba8:	e0bfff17 	ldw	r2,-4(fp)
  813bac:	1885883a 	add	r2,r3,r2
  813bb0:	10bfffc4 	addi	r2,r2,-1
  813bb4:	e17fff17 	ldw	r5,-4(fp)
  813bb8:	1009883a 	mov	r4,r2
  813bbc:	08300340 	call	830034 <__divsi3>
  813bc0:	e037883a 	mov	sp,fp
  813bc4:	dfc00117 	ldw	ra,4(sp)
  813bc8:	df000017 	ldw	fp,0(sp)
  813bcc:	dec00204 	addi	sp,sp,8
  813bd0:	f800283a 	ret

00813bd4 <jround_up>:
  813bd4:	defffc04 	addi	sp,sp,-16
  813bd8:	dfc00315 	stw	ra,12(sp)
  813bdc:	df000215 	stw	fp,8(sp)
  813be0:	df000204 	addi	fp,sp,8
  813be4:	e13ffe15 	stw	r4,-8(fp)
  813be8:	e17fff15 	stw	r5,-4(fp)
  813bec:	e0bfff17 	ldw	r2,-4(fp)
  813bf0:	10bfffc4 	addi	r2,r2,-1
  813bf4:	e0fffe17 	ldw	r3,-8(fp)
  813bf8:	1885883a 	add	r2,r3,r2
  813bfc:	e0bffe15 	stw	r2,-8(fp)
  813c00:	e0bffe17 	ldw	r2,-8(fp)
  813c04:	e17fff17 	ldw	r5,-4(fp)
  813c08:	1009883a 	mov	r4,r2
  813c0c:	08300b80 	call	8300b8 <__modsi3>
  813c10:	1007883a 	mov	r3,r2
  813c14:	e0bffe17 	ldw	r2,-8(fp)
  813c18:	10c5c83a 	sub	r2,r2,r3
  813c1c:	e037883a 	mov	sp,fp
  813c20:	dfc00117 	ldw	ra,4(sp)
  813c24:	df000017 	ldw	fp,0(sp)
  813c28:	dec00204 	addi	sp,sp,8
  813c2c:	f800283a 	ret

00813c30 <jcopy_sample_rows>:
  813c30:	defff604 	addi	sp,sp,-40
  813c34:	dfc00915 	stw	ra,36(sp)
  813c38:	df000815 	stw	fp,32(sp)
  813c3c:	dcc00715 	stw	r19,28(sp)
  813c40:	dc800615 	stw	r18,24(sp)
  813c44:	dc400515 	stw	r17,20(sp)
  813c48:	dc000415 	stw	r16,16(sp)
  813c4c:	df000804 	addi	fp,sp,32
  813c50:	e13ff815 	stw	r4,-32(fp)
  813c54:	e17ff915 	stw	r5,-28(fp)
  813c58:	e1bffa15 	stw	r6,-24(fp)
  813c5c:	e1fffb15 	stw	r7,-20(fp)
  813c60:	e4400317 	ldw	r17,12(fp)
  813c64:	e0bff917 	ldw	r2,-28(fp)
  813c68:	1085883a 	add	r2,r2,r2
  813c6c:	1085883a 	add	r2,r2,r2
  813c70:	1007883a 	mov	r3,r2
  813c74:	e0bff817 	ldw	r2,-32(fp)
  813c78:	10c5883a 	add	r2,r2,r3
  813c7c:	e0bff815 	stw	r2,-32(fp)
  813c80:	e0bffb17 	ldw	r2,-20(fp)
  813c84:	1085883a 	add	r2,r2,r2
  813c88:	1085883a 	add	r2,r2,r2
  813c8c:	1007883a 	mov	r3,r2
  813c90:	e0bffa17 	ldw	r2,-24(fp)
  813c94:	10c5883a 	add	r2,r2,r3
  813c98:	e0bffa15 	stw	r2,-24(fp)
  813c9c:	e4000217 	ldw	r16,8(fp)
  813ca0:	00000d06 	br	813cd8 <jcopy_sample_rows+0xa8>
  813ca4:	e0bff817 	ldw	r2,-32(fp)
  813ca8:	10c00104 	addi	r3,r2,4
  813cac:	e0fff815 	stw	r3,-32(fp)
  813cb0:	14c00017 	ldw	r19,0(r2)
  813cb4:	e0bffa17 	ldw	r2,-24(fp)
  813cb8:	10c00104 	addi	r3,r2,4
  813cbc:	e0fffa15 	stw	r3,-24(fp)
  813cc0:	14800017 	ldw	r18,0(r2)
  813cc4:	880d883a 	mov	r6,r17
  813cc8:	980b883a 	mov	r5,r19
  813ccc:	9009883a 	mov	r4,r18
  813cd0:	0833c4c0 	call	833c4c <memcpy>
  813cd4:	843fffc4 	addi	r16,r16,-1
  813cd8:	043ff216 	blt	zero,r16,813ca4 <__alt_mem_epcs_flash_controller_0+0xff80aca4>
  813cdc:	0001883a 	nop
  813ce0:	e6fffc04 	addi	sp,fp,-16
  813ce4:	dfc00517 	ldw	ra,20(sp)
  813ce8:	df000417 	ldw	fp,16(sp)
  813cec:	dcc00317 	ldw	r19,12(sp)
  813cf0:	dc800217 	ldw	r18,8(sp)
  813cf4:	dc400117 	ldw	r17,4(sp)
  813cf8:	dc000017 	ldw	r16,0(sp)
  813cfc:	dec00604 	addi	sp,sp,24
  813d00:	f800283a 	ret

00813d04 <jcopy_block_row>:
  813d04:	defffb04 	addi	sp,sp,-20
  813d08:	dfc00415 	stw	ra,16(sp)
  813d0c:	df000315 	stw	fp,12(sp)
  813d10:	df000304 	addi	fp,sp,12
  813d14:	e13ffd15 	stw	r4,-12(fp)
  813d18:	e17ffe15 	stw	r5,-8(fp)
  813d1c:	e1bfff15 	stw	r6,-4(fp)
  813d20:	e0bfff17 	ldw	r2,-4(fp)
  813d24:	100491fa 	slli	r2,r2,7
  813d28:	100d883a 	mov	r6,r2
  813d2c:	e17ffd17 	ldw	r5,-12(fp)
  813d30:	e13ffe17 	ldw	r4,-8(fp)
  813d34:	0833c4c0 	call	833c4c <memcpy>
  813d38:	0001883a 	nop
  813d3c:	e037883a 	mov	sp,fp
  813d40:	dfc00117 	ldw	ra,4(sp)
  813d44:	df000017 	ldw	fp,0(sp)
  813d48:	dec00204 	addi	sp,sp,8
  813d4c:	f800283a 	ret

00813d50 <jpeg_abort>:
  813d50:	defffc04 	addi	sp,sp,-16
  813d54:	dfc00315 	stw	ra,12(sp)
  813d58:	df000215 	stw	fp,8(sp)
  813d5c:	df000204 	addi	fp,sp,8
  813d60:	e13fff15 	stw	r4,-4(fp)
  813d64:	e0bfff17 	ldw	r2,-4(fp)
  813d68:	10800117 	ldw	r2,4(r2)
  813d6c:	10001b26 	beq	r2,zero,813ddc <jpeg_abort+0x8c>
  813d70:	00800044 	movi	r2,1
  813d74:	e0bffe15 	stw	r2,-8(fp)
  813d78:	00000906 	br	813da0 <jpeg_abort+0x50>
  813d7c:	e0bfff17 	ldw	r2,-4(fp)
  813d80:	10800117 	ldw	r2,4(r2)
  813d84:	10800917 	ldw	r2,36(r2)
  813d88:	e17ffe17 	ldw	r5,-8(fp)
  813d8c:	e13fff17 	ldw	r4,-4(fp)
  813d90:	103ee83a 	callr	r2
  813d94:	e0bffe17 	ldw	r2,-8(fp)
  813d98:	10bfffc4 	addi	r2,r2,-1
  813d9c:	e0bffe15 	stw	r2,-8(fp)
  813da0:	e0bffe17 	ldw	r2,-8(fp)
  813da4:	00bff516 	blt	zero,r2,813d7c <__alt_mem_epcs_flash_controller_0+0xff80ad7c>
  813da8:	e0bfff17 	ldw	r2,-4(fp)
  813dac:	10800417 	ldw	r2,16(r2)
  813db0:	10000626 	beq	r2,zero,813dcc <jpeg_abort+0x7c>
  813db4:	e0bfff17 	ldw	r2,-4(fp)
  813db8:	00c03204 	movi	r3,200
  813dbc:	10c00515 	stw	r3,20(r2)
  813dc0:	e0bfff17 	ldw	r2,-4(fp)
  813dc4:	10004e15 	stw	zero,312(r2)
  813dc8:	00000506 	br	813de0 <jpeg_abort+0x90>
  813dcc:	e0bfff17 	ldw	r2,-4(fp)
  813dd0:	00c01904 	movi	r3,100
  813dd4:	10c00515 	stw	r3,20(r2)
  813dd8:	00000106 	br	813de0 <jpeg_abort+0x90>
  813ddc:	0001883a 	nop
  813de0:	e037883a 	mov	sp,fp
  813de4:	dfc00117 	ldw	ra,4(sp)
  813de8:	df000017 	ldw	fp,0(sp)
  813dec:	dec00204 	addi	sp,sp,8
  813df0:	f800283a 	ret

00813df4 <jpeg_destroy>:
  813df4:	defffd04 	addi	sp,sp,-12
  813df8:	dfc00215 	stw	ra,8(sp)
  813dfc:	df000115 	stw	fp,4(sp)
  813e00:	df000104 	addi	fp,sp,4
  813e04:	e13fff15 	stw	r4,-4(fp)
  813e08:	e0bfff17 	ldw	r2,-4(fp)
  813e0c:	10800117 	ldw	r2,4(r2)
  813e10:	10000526 	beq	r2,zero,813e28 <jpeg_destroy+0x34>
  813e14:	e0bfff17 	ldw	r2,-4(fp)
  813e18:	10800117 	ldw	r2,4(r2)
  813e1c:	10800a17 	ldw	r2,40(r2)
  813e20:	e13fff17 	ldw	r4,-4(fp)
  813e24:	103ee83a 	callr	r2
  813e28:	e0bfff17 	ldw	r2,-4(fp)
  813e2c:	10000115 	stw	zero,4(r2)
  813e30:	e0bfff17 	ldw	r2,-4(fp)
  813e34:	10000515 	stw	zero,20(r2)
  813e38:	0001883a 	nop
  813e3c:	e037883a 	mov	sp,fp
  813e40:	dfc00117 	ldw	ra,4(sp)
  813e44:	df000017 	ldw	fp,0(sp)
  813e48:	dec00204 	addi	sp,sp,8
  813e4c:	f800283a 	ret

00813e50 <jpeg_alloc_quant_table>:
  813e50:	defffc04 	addi	sp,sp,-16
  813e54:	dfc00315 	stw	ra,12(sp)
  813e58:	df000215 	stw	fp,8(sp)
  813e5c:	df000204 	addi	fp,sp,8
  813e60:	e13fff15 	stw	r4,-4(fp)
  813e64:	e0bfff17 	ldw	r2,-4(fp)
  813e68:	10800117 	ldw	r2,4(r2)
  813e6c:	10800017 	ldw	r2,0(r2)
  813e70:	01802104 	movi	r6,132
  813e74:	000b883a 	mov	r5,zero
  813e78:	e13fff17 	ldw	r4,-4(fp)
  813e7c:	103ee83a 	callr	r2
  813e80:	e0bffe15 	stw	r2,-8(fp)
  813e84:	e0bffe17 	ldw	r2,-8(fp)
  813e88:	10002015 	stw	zero,128(r2)
  813e8c:	e0bffe17 	ldw	r2,-8(fp)
  813e90:	e037883a 	mov	sp,fp
  813e94:	dfc00117 	ldw	ra,4(sp)
  813e98:	df000017 	ldw	fp,0(sp)
  813e9c:	dec00204 	addi	sp,sp,8
  813ea0:	f800283a 	ret

00813ea4 <jpeg_alloc_huff_table>:
  813ea4:	defffc04 	addi	sp,sp,-16
  813ea8:	dfc00315 	stw	ra,12(sp)
  813eac:	df000215 	stw	fp,8(sp)
  813eb0:	df000204 	addi	fp,sp,8
  813eb4:	e13fff15 	stw	r4,-4(fp)
  813eb8:	e0bfff17 	ldw	r2,-4(fp)
  813ebc:	10800117 	ldw	r2,4(r2)
  813ec0:	10800017 	ldw	r2,0(r2)
  813ec4:	01804604 	movi	r6,280
  813ec8:	000b883a 	mov	r5,zero
  813ecc:	e13fff17 	ldw	r4,-4(fp)
  813ed0:	103ee83a 	callr	r2
  813ed4:	e0bffe15 	stw	r2,-8(fp)
  813ed8:	e0bffe17 	ldw	r2,-8(fp)
  813edc:	10004515 	stw	zero,276(r2)
  813ee0:	e0bffe17 	ldw	r2,-8(fp)
  813ee4:	e037883a 	mov	sp,fp
  813ee8:	dfc00117 	ldw	ra,4(sp)
  813eec:	df000017 	ldw	fp,0(sp)
  813ef0:	dec00204 	addi	sp,sp,8
  813ef4:	f800283a 	ret

00813ef8 <get_byte>:
  813ef8:	defffc04 	addi	sp,sp,-16
  813efc:	dfc00315 	stw	ra,12(sp)
  813f00:	df000215 	stw	fp,8(sp)
  813f04:	df000204 	addi	fp,sp,8
  813f08:	e13fff15 	stw	r4,-4(fp)
  813f0c:	e0bfff17 	ldw	r2,-4(fp)
  813f10:	10800617 	ldw	r2,24(r2)
  813f14:	e0bffe15 	stw	r2,-8(fp)
  813f18:	e0bffe17 	ldw	r2,-8(fp)
  813f1c:	10800117 	ldw	r2,4(r2)
  813f20:	10000e1e 	bne	r2,zero,813f5c <get_byte+0x64>
  813f24:	e0bffe17 	ldw	r2,-8(fp)
  813f28:	10800317 	ldw	r2,12(r2)
  813f2c:	e13fff17 	ldw	r4,-4(fp)
  813f30:	103ee83a 	callr	r2
  813f34:	1000091e 	bne	r2,zero,813f5c <get_byte+0x64>
  813f38:	e0bfff17 	ldw	r2,-4(fp)
  813f3c:	10800017 	ldw	r2,0(r2)
  813f40:	00c00644 	movi	r3,25
  813f44:	10c00515 	stw	r3,20(r2)
  813f48:	e0bfff17 	ldw	r2,-4(fp)
  813f4c:	10800017 	ldw	r2,0(r2)
  813f50:	10800017 	ldw	r2,0(r2)
  813f54:	e13fff17 	ldw	r4,-4(fp)
  813f58:	103ee83a 	callr	r2
  813f5c:	e0bffe17 	ldw	r2,-8(fp)
  813f60:	10800117 	ldw	r2,4(r2)
  813f64:	10ffffc4 	addi	r3,r2,-1
  813f68:	e0bffe17 	ldw	r2,-8(fp)
  813f6c:	10c00115 	stw	r3,4(r2)
  813f70:	e0bffe17 	ldw	r2,-8(fp)
  813f74:	10800017 	ldw	r2,0(r2)
  813f78:	11000044 	addi	r4,r2,1
  813f7c:	e0fffe17 	ldw	r3,-8(fp)
  813f80:	19000015 	stw	r4,0(r3)
  813f84:	10800003 	ldbu	r2,0(r2)
  813f88:	10803fcc 	andi	r2,r2,255
  813f8c:	e037883a 	mov	sp,fp
  813f90:	dfc00117 	ldw	ra,4(sp)
  813f94:	df000017 	ldw	fp,0(sp)
  813f98:	dec00204 	addi	sp,sp,8
  813f9c:	f800283a 	ret

00813fa0 <arith_decode>:
  813fa0:	defff604 	addi	sp,sp,-40
  813fa4:	dfc00915 	stw	ra,36(sp)
  813fa8:	df000815 	stw	fp,32(sp)
  813fac:	dd400715 	stw	r21,28(sp)
  813fb0:	dd000615 	stw	r20,24(sp)
  813fb4:	dcc00515 	stw	r19,20(sp)
  813fb8:	dc800415 	stw	r18,16(sp)
  813fbc:	dc400315 	stw	r17,12(sp)
  813fc0:	dc000215 	stw	r16,8(sp)
  813fc4:	df000804 	addi	fp,sp,32
  813fc8:	e13ff815 	stw	r4,-32(fp)
  813fcc:	e17ff915 	stw	r5,-28(fp)
  813fd0:	e0bff817 	ldw	r2,-32(fp)
  813fd4:	14007517 	ldw	r16,468(r2)
  813fd8:	00002d06 	br	814090 <arith_decode+0xf0>
  813fdc:	80800517 	ldw	r2,20(r16)
  813fe0:	10bfffc4 	addi	r2,r2,-1
  813fe4:	80800515 	stw	r2,20(r16)
  813fe8:	80800517 	ldw	r2,20(r16)
  813fec:	1000250e 	bge	r2,zero,814084 <arith_decode+0xe4>
  813ff0:	e0bff817 	ldw	r2,-32(fp)
  813ff4:	10806e17 	ldw	r2,440(r2)
  813ff8:	10000226 	beq	r2,zero,814004 <arith_decode+0x64>
  813ffc:	0023883a 	mov	r17,zero
  814000:	00001006 	br	814044 <arith_decode+0xa4>
  814004:	e13ff817 	ldw	r4,-32(fp)
  814008:	0813ef80 	call	813ef8 <get_byte>
  81400c:	1023883a 	mov	r17,r2
  814010:	88803fd8 	cmpnei	r2,r17,255
  814014:	10000b1e 	bne	r2,zero,814044 <arith_decode+0xa4>
  814018:	e13ff817 	ldw	r4,-32(fp)
  81401c:	0813ef80 	call	813ef8 <get_byte>
  814020:	1023883a 	mov	r17,r2
  814024:	88803fe0 	cmpeqi	r2,r17,255
  814028:	103ffb1e 	bne	r2,zero,814018 <__alt_mem_epcs_flash_controller_0+0xff80b018>
  81402c:	8800021e 	bne	r17,zero,814038 <arith_decode+0x98>
  814030:	04403fc4 	movi	r17,255
  814034:	00000306 	br	814044 <arith_decode+0xa4>
  814038:	e0bff817 	ldw	r2,-32(fp)
  81403c:	14406e15 	stw	r17,440(r2)
  814040:	0023883a 	mov	r17,zero
  814044:	80800317 	ldw	r2,12(r16)
  814048:	1004923a 	slli	r2,r2,8
  81404c:	1444b03a 	or	r2,r2,r17
  814050:	80800315 	stw	r2,12(r16)
  814054:	80800517 	ldw	r2,20(r16)
  814058:	10800204 	addi	r2,r2,8
  81405c:	80800515 	stw	r2,20(r16)
  814060:	80800517 	ldw	r2,20(r16)
  814064:	1000070e 	bge	r2,zero,814084 <arith_decode+0xe4>
  814068:	80800517 	ldw	r2,20(r16)
  81406c:	10800044 	addi	r2,r2,1
  814070:	80800515 	stw	r2,20(r16)
  814074:	80800517 	ldw	r2,20(r16)
  814078:	1000021e 	bne	r2,zero,814084 <arith_decode+0xe4>
  81407c:	00a00014 	movui	r2,32768
  814080:	80800415 	stw	r2,16(r16)
  814084:	80800417 	ldw	r2,16(r16)
  814088:	1085883a 	add	r2,r2,r2
  81408c:	80800415 	stw	r2,16(r16)
  814090:	80800417 	ldw	r2,16(r16)
  814094:	00dfffc4 	movi	r3,32767
  814098:	18bfd00e 	bge	r3,r2,813fdc <__alt_mem_epcs_flash_controller_0+0xff80afdc>
  81409c:	e0bff917 	ldw	r2,-28(fp)
  8140a0:	10800003 	ldbu	r2,0(r2)
  8140a4:	14803fcc 	andi	r18,r2,255
  8140a8:	90c01fcc 	andi	r3,r18,127
  8140ac:	008021b4 	movhi	r2,134
  8140b0:	10a54104 	addi	r2,r2,-27388
  8140b4:	18c7883a 	add	r3,r3,r3
  8140b8:	18c7883a 	add	r3,r3,r3
  8140bc:	10c5883a 	add	r2,r2,r3
  8140c0:	14400017 	ldw	r17,0(r2)
  8140c4:	882b883a 	mov	r21,r17
  8140c8:	8823d23a 	srai	r17,r17,8
  8140cc:	8829883a 	mov	r20,r17
  8140d0:	8823d23a 	srai	r17,r17,8
  8140d4:	80800417 	ldw	r2,16(r16)
  8140d8:	1467c83a 	sub	r19,r2,r17
  8140dc:	84c00415 	stw	r19,16(r16)
  8140e0:	80800517 	ldw	r2,20(r16)
  8140e4:	98a6983a 	sll	r19,r19,r2
  8140e8:	80800317 	ldw	r2,12(r16)
  8140ec:	14c01c16 	blt	r2,r19,814160 <arith_decode+0x1c0>
  8140f0:	80800317 	ldw	r2,12(r16)
  8140f4:	14c5c83a 	sub	r2,r2,r19
  8140f8:	80800315 	stw	r2,12(r16)
  8140fc:	80800417 	ldw	r2,16(r16)
  814100:	14400b0e 	bge	r2,r17,814130 <arith_decode+0x190>
  814104:	84400415 	stw	r17,16(r16)
  814108:	9007883a 	mov	r3,r18
  81410c:	00bfe004 	movi	r2,-128
  814110:	1884703a 	and	r2,r3,r2
  814114:	1007883a 	mov	r3,r2
  814118:	a005883a 	mov	r2,r20
  81411c:	1884f03a 	xor	r2,r3,r2
  814120:	1007883a 	mov	r3,r2
  814124:	e0bff917 	ldw	r2,-28(fp)
  814128:	10c00005 	stb	r3,0(r2)
  81412c:	00002506 	br	8141c4 <arith_decode+0x224>
  814130:	84400415 	stw	r17,16(r16)
  814134:	9007883a 	mov	r3,r18
  814138:	00bfe004 	movi	r2,-128
  81413c:	1884703a 	and	r2,r3,r2
  814140:	1007883a 	mov	r3,r2
  814144:	a805883a 	mov	r2,r21
  814148:	1884f03a 	xor	r2,r3,r2
  81414c:	1007883a 	mov	r3,r2
  814150:	e0bff917 	ldw	r2,-28(fp)
  814154:	10c00005 	stb	r3,0(r2)
  814158:	9480201c 	xori	r18,r18,128
  81415c:	00001906 	br	8141c4 <arith_decode+0x224>
  814160:	80800417 	ldw	r2,16(r16)
  814164:	00dfffc4 	movi	r3,32767
  814168:	18801616 	blt	r3,r2,8141c4 <arith_decode+0x224>
  81416c:	80800417 	ldw	r2,16(r16)
  814170:	14400b0e 	bge	r2,r17,8141a0 <arith_decode+0x200>
  814174:	9007883a 	mov	r3,r18
  814178:	00bfe004 	movi	r2,-128
  81417c:	1884703a 	and	r2,r3,r2
  814180:	1007883a 	mov	r3,r2
  814184:	a805883a 	mov	r2,r21
  814188:	1884f03a 	xor	r2,r3,r2
  81418c:	1007883a 	mov	r3,r2
  814190:	e0bff917 	ldw	r2,-28(fp)
  814194:	10c00005 	stb	r3,0(r2)
  814198:	9480201c 	xori	r18,r18,128
  81419c:	00000906 	br	8141c4 <arith_decode+0x224>
  8141a0:	9007883a 	mov	r3,r18
  8141a4:	00bfe004 	movi	r2,-128
  8141a8:	1884703a 	and	r2,r3,r2
  8141ac:	1007883a 	mov	r3,r2
  8141b0:	a005883a 	mov	r2,r20
  8141b4:	1884f03a 	xor	r2,r3,r2
  8141b8:	1007883a 	mov	r3,r2
  8141bc:	e0bff917 	ldw	r2,-28(fp)
  8141c0:	10c00005 	stb	r3,0(r2)
  8141c4:	9005d1fa 	srai	r2,r18,7
  8141c8:	e6fffa04 	addi	sp,fp,-24
  8141cc:	dfc00717 	ldw	ra,28(sp)
  8141d0:	df000617 	ldw	fp,24(sp)
  8141d4:	dd400517 	ldw	r21,20(sp)
  8141d8:	dd000417 	ldw	r20,16(sp)
  8141dc:	dcc00317 	ldw	r19,12(sp)
  8141e0:	dc800217 	ldw	r18,8(sp)
  8141e4:	dc400117 	ldw	r17,4(sp)
  8141e8:	dc000017 	ldw	r16,0(sp)
  8141ec:	dec00804 	addi	sp,sp,32
  8141f0:	f800283a 	ret

008141f4 <process_restart>:
  8141f4:	defffa04 	addi	sp,sp,-24
  8141f8:	dfc00515 	stw	ra,20(sp)
  8141fc:	df000415 	stw	fp,16(sp)
  814200:	df000404 	addi	fp,sp,16
  814204:	e13fff15 	stw	r4,-4(fp)
  814208:	e0bfff17 	ldw	r2,-4(fp)
  81420c:	10807517 	ldw	r2,468(r2)
  814210:	e0bffd15 	stw	r2,-12(fp)
  814214:	e0bfff17 	ldw	r2,-4(fp)
  814218:	10807417 	ldw	r2,464(r2)
  81421c:	10800217 	ldw	r2,8(r2)
  814220:	e13fff17 	ldw	r4,-4(fp)
  814224:	103ee83a 	callr	r2
  814228:	1000091e 	bne	r2,zero,814250 <process_restart+0x5c>
  81422c:	e0bfff17 	ldw	r2,-4(fp)
  814230:	10800017 	ldw	r2,0(r2)
  814234:	00c00644 	movi	r3,25
  814238:	10c00515 	stw	r3,20(r2)
  81423c:	e0bfff17 	ldw	r2,-4(fp)
  814240:	10800017 	ldw	r2,0(r2)
  814244:	10800017 	ldw	r2,0(r2)
  814248:	e13fff17 	ldw	r4,-4(fp)
  81424c:	103ee83a 	callr	r2
  814250:	e03ffc15 	stw	zero,-16(fp)
  814254:	00004606 	br	814370 <process_restart+0x17c>
  814258:	e0ffff17 	ldw	r3,-4(fp)
  81425c:	e0bffc17 	ldw	r2,-16(fp)
  814260:	10801584 	addi	r2,r2,86
  814264:	1085883a 	add	r2,r2,r2
  814268:	1085883a 	add	r2,r2,r2
  81426c:	1885883a 	add	r2,r3,r2
  814270:	10800017 	ldw	r2,0(r2)
  814274:	e0bffe15 	stw	r2,-8(fp)
  814278:	e0bfff17 	ldw	r2,-4(fp)
  81427c:	10803817 	ldw	r2,224(r2)
  814280:	10000626 	beq	r2,zero,81429c <process_restart+0xa8>
  814284:	e0bfff17 	ldw	r2,-4(fp)
  814288:	10806717 	ldw	r2,412(r2)
  81428c:	10001d1e 	bne	r2,zero,814304 <process_restart+0x110>
  814290:	e0bfff17 	ldw	r2,-4(fp)
  814294:	10806917 	ldw	r2,420(r2)
  814298:	10001a1e 	bne	r2,zero,814304 <process_restart+0x110>
  81429c:	e0bffe17 	ldw	r2,-8(fp)
  8142a0:	10800517 	ldw	r2,20(r2)
  8142a4:	e0fffd17 	ldw	r3,-12(fp)
  8142a8:	108003c4 	addi	r2,r2,15
  8142ac:	1085883a 	add	r2,r2,r2
  8142b0:	1085883a 	add	r2,r2,r2
  8142b4:	1885883a 	add	r2,r3,r2
  8142b8:	10800017 	ldw	r2,0(r2)
  8142bc:	01801004 	movi	r6,64
  8142c0:	000b883a 	mov	r5,zero
  8142c4:	1009883a 	mov	r4,r2
  8142c8:	0833d940 	call	833d94 <memset>
  8142cc:	e0fffd17 	ldw	r3,-12(fp)
  8142d0:	e0bffc17 	ldw	r2,-16(fp)
  8142d4:	10800184 	addi	r2,r2,6
  8142d8:	1085883a 	add	r2,r2,r2
  8142dc:	1085883a 	add	r2,r2,r2
  8142e0:	1885883a 	add	r2,r3,r2
  8142e4:	10000015 	stw	zero,0(r2)
  8142e8:	e0fffd17 	ldw	r3,-12(fp)
  8142ec:	e0bffc17 	ldw	r2,-16(fp)
  8142f0:	10800284 	addi	r2,r2,10
  8142f4:	1085883a 	add	r2,r2,r2
  8142f8:	1085883a 	add	r2,r2,r2
  8142fc:	1885883a 	add	r2,r3,r2
  814300:	10000015 	stw	zero,0(r2)
  814304:	e0bfff17 	ldw	r2,-4(fp)
  814308:	10803817 	ldw	r2,224(r2)
  81430c:	1000031e 	bne	r2,zero,81431c <process_restart+0x128>
  814310:	e0bfff17 	ldw	r2,-4(fp)
  814314:	10806d17 	ldw	r2,436(r2)
  814318:	1000061e 	bne	r2,zero,814334 <process_restart+0x140>
  81431c:	e0bfff17 	ldw	r2,-4(fp)
  814320:	10803817 	ldw	r2,224(r2)
  814324:	10000f26 	beq	r2,zero,814364 <process_restart+0x170>
  814328:	e0bfff17 	ldw	r2,-4(fp)
  81432c:	10806717 	ldw	r2,412(r2)
  814330:	10000c26 	beq	r2,zero,814364 <process_restart+0x170>
  814334:	e0bffe17 	ldw	r2,-8(fp)
  814338:	10800617 	ldw	r2,24(r2)
  81433c:	e0fffd17 	ldw	r3,-12(fp)
  814340:	108007c4 	addi	r2,r2,31
  814344:	1085883a 	add	r2,r2,r2
  814348:	1085883a 	add	r2,r2,r2
  81434c:	1885883a 	add	r2,r3,r2
  814350:	10800017 	ldw	r2,0(r2)
  814354:	01804004 	movi	r6,256
  814358:	000b883a 	mov	r5,zero
  81435c:	1009883a 	mov	r4,r2
  814360:	0833d940 	call	833d94 <memset>
  814364:	e0bffc17 	ldw	r2,-16(fp)
  814368:	10800044 	addi	r2,r2,1
  81436c:	e0bffc15 	stw	r2,-16(fp)
  814370:	e0bfff17 	ldw	r2,-4(fp)
  814374:	10805517 	ldw	r2,340(r2)
  814378:	e0fffc17 	ldw	r3,-16(fp)
  81437c:	18bfb616 	blt	r3,r2,814258 <__alt_mem_epcs_flash_controller_0+0xff80b258>
  814380:	e0bffd17 	ldw	r2,-12(fp)
  814384:	10000315 	stw	zero,12(r2)
  814388:	e0bffd17 	ldw	r2,-12(fp)
  81438c:	10000415 	stw	zero,16(r2)
  814390:	e0bffd17 	ldw	r2,-12(fp)
  814394:	00fffc04 	movi	r3,-16
  814398:	10c00515 	stw	r3,20(r2)
  81439c:	e0bfff17 	ldw	r2,-4(fp)
  8143a0:	10c04617 	ldw	r3,280(r2)
  8143a4:	e0bffd17 	ldw	r2,-12(fp)
  8143a8:	10c00e15 	stw	r3,56(r2)
  8143ac:	0001883a 	nop
  8143b0:	e037883a 	mov	sp,fp
  8143b4:	dfc00117 	ldw	ra,4(sp)
  8143b8:	df000017 	ldw	fp,0(sp)
  8143bc:	dec00204 	addi	sp,sp,8
  8143c0:	f800283a 	ret

008143c4 <decode_mcu_DC_first>:
  8143c4:	defff304 	addi	sp,sp,-52
  8143c8:	dfc00c15 	stw	ra,48(sp)
  8143cc:	df000b15 	stw	fp,44(sp)
  8143d0:	df000b04 	addi	fp,sp,44
  8143d4:	e13ffe15 	stw	r4,-8(fp)
  8143d8:	e17fff15 	stw	r5,-4(fp)
  8143dc:	e0bffe17 	ldw	r2,-8(fp)
  8143e0:	10807517 	ldw	r2,468(r2)
  8143e4:	e0bff915 	stw	r2,-28(fp)
  8143e8:	e0bffe17 	ldw	r2,-8(fp)
  8143ec:	10804617 	ldw	r2,280(r2)
  8143f0:	10000a26 	beq	r2,zero,81441c <decode_mcu_DC_first+0x58>
  8143f4:	e0bff917 	ldw	r2,-28(fp)
  8143f8:	10800e17 	ldw	r2,56(r2)
  8143fc:	1000021e 	bne	r2,zero,814408 <decode_mcu_DC_first+0x44>
  814400:	e13ffe17 	ldw	r4,-8(fp)
  814404:	08141f40 	call	8141f4 <process_restart>
  814408:	e0bff917 	ldw	r2,-28(fp)
  81440c:	10800e17 	ldw	r2,56(r2)
  814410:	10ffffc4 	addi	r3,r2,-1
  814414:	e0bff917 	ldw	r2,-28(fp)
  814418:	10c00e15 	stw	r3,56(r2)
  81441c:	e0bff917 	ldw	r2,-28(fp)
  814420:	10800517 	ldw	r2,20(r2)
  814424:	10bfffd8 	cmpnei	r2,r2,-1
  814428:	1000021e 	bne	r2,zero,814434 <decode_mcu_DC_first+0x70>
  81442c:	00800044 	movi	r2,1
  814430:	0000e706 	br	8147d0 <decode_mcu_DC_first+0x40c>
  814434:	e03ff615 	stw	zero,-40(fp)
  814438:	0000e006 	br	8147bc <decode_mcu_DC_first+0x3f8>
  81443c:	e0bff617 	ldw	r2,-40(fp)
  814440:	1085883a 	add	r2,r2,r2
  814444:	1085883a 	add	r2,r2,r2
  814448:	1007883a 	mov	r3,r2
  81444c:	e0bfff17 	ldw	r2,-4(fp)
  814450:	10c5883a 	add	r2,r2,r3
  814454:	10800017 	ldw	r2,0(r2)
  814458:	e0bffa15 	stw	r2,-24(fp)
  81445c:	e0fffe17 	ldw	r3,-8(fp)
  814460:	e0bff617 	ldw	r2,-40(fp)
  814464:	10801744 	addi	r2,r2,93
  814468:	1085883a 	add	r2,r2,r2
  81446c:	1085883a 	add	r2,r2,r2
  814470:	1885883a 	add	r2,r3,r2
  814474:	10800017 	ldw	r2,0(r2)
  814478:	e0bffb15 	stw	r2,-20(fp)
  81447c:	e0fffe17 	ldw	r3,-8(fp)
  814480:	e0bffb17 	ldw	r2,-20(fp)
  814484:	10801584 	addi	r2,r2,86
  814488:	1085883a 	add	r2,r2,r2
  81448c:	1085883a 	add	r2,r2,r2
  814490:	1885883a 	add	r2,r3,r2
  814494:	10800017 	ldw	r2,0(r2)
  814498:	10800517 	ldw	r2,20(r2)
  81449c:	e0bffc15 	stw	r2,-16(fp)
  8144a0:	e0fff917 	ldw	r3,-28(fp)
  8144a4:	e0bffc17 	ldw	r2,-16(fp)
  8144a8:	108003c4 	addi	r2,r2,15
  8144ac:	1085883a 	add	r2,r2,r2
  8144b0:	1085883a 	add	r2,r2,r2
  8144b4:	1885883a 	add	r2,r3,r2
  8144b8:	10c00017 	ldw	r3,0(r2)
  8144bc:	e13ff917 	ldw	r4,-28(fp)
  8144c0:	e0bffb17 	ldw	r2,-20(fp)
  8144c4:	10800284 	addi	r2,r2,10
  8144c8:	1085883a 	add	r2,r2,r2
  8144cc:	1085883a 	add	r2,r2,r2
  8144d0:	2085883a 	add	r2,r4,r2
  8144d4:	10800017 	ldw	r2,0(r2)
  8144d8:	1885883a 	add	r2,r3,r2
  8144dc:	e0bff515 	stw	r2,-44(fp)
  8144e0:	e17ff517 	ldw	r5,-44(fp)
  8144e4:	e13ffe17 	ldw	r4,-8(fp)
  8144e8:	0813fa00 	call	813fa0 <arith_decode>
  8144ec:	1000081e 	bne	r2,zero,814510 <decode_mcu_DC_first+0x14c>
  8144f0:	e0fff917 	ldw	r3,-28(fp)
  8144f4:	e0bffb17 	ldw	r2,-20(fp)
  8144f8:	10800284 	addi	r2,r2,10
  8144fc:	1085883a 	add	r2,r2,r2
  814500:	1085883a 	add	r2,r2,r2
  814504:	1885883a 	add	r2,r3,r2
  814508:	10000015 	stw	zero,0(r2)
  81450c:	00009b06 	br	81477c <decode_mcu_DC_first+0x3b8>
  814510:	e0bff517 	ldw	r2,-44(fp)
  814514:	10800044 	addi	r2,r2,1
  814518:	100b883a 	mov	r5,r2
  81451c:	e13ffe17 	ldw	r4,-8(fp)
  814520:	0813fa00 	call	813fa0 <arith_decode>
  814524:	e0bffd15 	stw	r2,-12(fp)
  814528:	e0bff517 	ldw	r2,-44(fp)
  81452c:	10800084 	addi	r2,r2,2
  814530:	e0bff515 	stw	r2,-44(fp)
  814534:	e0bffd17 	ldw	r2,-12(fp)
  814538:	e0fff517 	ldw	r3,-44(fp)
  81453c:	1885883a 	add	r2,r3,r2
  814540:	e0bff515 	stw	r2,-44(fp)
  814544:	e17ff517 	ldw	r5,-44(fp)
  814548:	e13ffe17 	ldw	r4,-8(fp)
  81454c:	0813fa00 	call	813fa0 <arith_decode>
  814550:	e0bff815 	stw	r2,-32(fp)
  814554:	e0bff817 	ldw	r2,-32(fp)
  814558:	10002626 	beq	r2,zero,8145f4 <decode_mcu_DC_first+0x230>
  81455c:	e0fff917 	ldw	r3,-28(fp)
  814560:	e0bffc17 	ldw	r2,-16(fp)
  814564:	108003c4 	addi	r2,r2,15
  814568:	1085883a 	add	r2,r2,r2
  81456c:	1085883a 	add	r2,r2,r2
  814570:	1885883a 	add	r2,r3,r2
  814574:	10800017 	ldw	r2,0(r2)
  814578:	10800504 	addi	r2,r2,20
  81457c:	e0bff515 	stw	r2,-44(fp)
  814580:	00001806 	br	8145e4 <decode_mcu_DC_first+0x220>
  814584:	e0bff817 	ldw	r2,-32(fp)
  814588:	1085883a 	add	r2,r2,r2
  81458c:	e0bff815 	stw	r2,-32(fp)
  814590:	e0fff817 	ldw	r3,-32(fp)
  814594:	00a00014 	movui	r2,32768
  814598:	18800f1e 	bne	r3,r2,8145d8 <decode_mcu_DC_first+0x214>
  81459c:	e0bffe17 	ldw	r2,-8(fp)
  8145a0:	10800017 	ldw	r2,0(r2)
  8145a4:	00c01d44 	movi	r3,117
  8145a8:	10c00515 	stw	r3,20(r2)
  8145ac:	e0bffe17 	ldw	r2,-8(fp)
  8145b0:	10800017 	ldw	r2,0(r2)
  8145b4:	10800117 	ldw	r2,4(r2)
  8145b8:	017fffc4 	movi	r5,-1
  8145bc:	e13ffe17 	ldw	r4,-8(fp)
  8145c0:	103ee83a 	callr	r2
  8145c4:	e0bff917 	ldw	r2,-28(fp)
  8145c8:	00ffffc4 	movi	r3,-1
  8145cc:	10c00515 	stw	r3,20(r2)
  8145d0:	00800044 	movi	r2,1
  8145d4:	00007e06 	br	8147d0 <decode_mcu_DC_first+0x40c>
  8145d8:	e0bff517 	ldw	r2,-44(fp)
  8145dc:	10800044 	addi	r2,r2,1
  8145e0:	e0bff515 	stw	r2,-44(fp)
  8145e4:	e17ff517 	ldw	r5,-44(fp)
  8145e8:	e13ffe17 	ldw	r4,-8(fp)
  8145ec:	0813fa00 	call	813fa0 <arith_decode>
  8145f0:	103fe41e 	bne	r2,zero,814584 <__alt_mem_epcs_flash_controller_0+0xff80b584>
  8145f4:	e0fffe17 	ldw	r3,-8(fp)
  8145f8:	e0bffc17 	ldw	r2,-16(fp)
  8145fc:	1885883a 	add	r2,r3,r2
  814600:	10803a04 	addi	r2,r2,232
  814604:	10800003 	ldbu	r2,0(r2)
  814608:	10803fcc 	andi	r2,r2,255
  81460c:	00c00044 	movi	r3,1
  814610:	1884983a 	sll	r2,r3,r2
  814614:	1005d07a 	srai	r2,r2,1
  814618:	e0fff817 	ldw	r3,-32(fp)
  81461c:	1880080e 	bge	r3,r2,814640 <decode_mcu_DC_first+0x27c>
  814620:	e0fff917 	ldw	r3,-28(fp)
  814624:	e0bffb17 	ldw	r2,-20(fp)
  814628:	10800284 	addi	r2,r2,10
  81462c:	1085883a 	add	r2,r2,r2
  814630:	1085883a 	add	r2,r2,r2
  814634:	1885883a 	add	r2,r3,r2
  814638:	10000015 	stw	zero,0(r2)
  81463c:	00002406 	br	8146d0 <decode_mcu_DC_first+0x30c>
  814640:	e0fffe17 	ldw	r3,-8(fp)
  814644:	e0bffc17 	ldw	r2,-16(fp)
  814648:	1885883a 	add	r2,r3,r2
  81464c:	10803e04 	addi	r2,r2,248
  814650:	10800003 	ldbu	r2,0(r2)
  814654:	10803fcc 	andi	r2,r2,255
  814658:	00c00044 	movi	r3,1
  81465c:	1884983a 	sll	r2,r3,r2
  814660:	1007d07a 	srai	r3,r2,1
  814664:	e0bff817 	ldw	r2,-32(fp)
  814668:	18800d0e 	bge	r3,r2,8146a0 <decode_mcu_DC_first+0x2dc>
  81466c:	e0bffd17 	ldw	r2,-12(fp)
  814670:	108000c4 	addi	r2,r2,3
  814674:	1085883a 	add	r2,r2,r2
  814678:	1085883a 	add	r2,r2,r2
  81467c:	1009883a 	mov	r4,r2
  814680:	e0fff917 	ldw	r3,-28(fp)
  814684:	e0bffb17 	ldw	r2,-20(fp)
  814688:	10800284 	addi	r2,r2,10
  81468c:	1085883a 	add	r2,r2,r2
  814690:	1085883a 	add	r2,r2,r2
  814694:	1885883a 	add	r2,r3,r2
  814698:	11000015 	stw	r4,0(r2)
  81469c:	00000c06 	br	8146d0 <decode_mcu_DC_first+0x30c>
  8146a0:	e0bffd17 	ldw	r2,-12(fp)
  8146a4:	10800044 	addi	r2,r2,1
  8146a8:	1085883a 	add	r2,r2,r2
  8146ac:	1085883a 	add	r2,r2,r2
  8146b0:	1009883a 	mov	r4,r2
  8146b4:	e0fff917 	ldw	r3,-28(fp)
  8146b8:	e0bffb17 	ldw	r2,-20(fp)
  8146bc:	10800284 	addi	r2,r2,10
  8146c0:	1085883a 	add	r2,r2,r2
  8146c4:	1085883a 	add	r2,r2,r2
  8146c8:	1885883a 	add	r2,r3,r2
  8146cc:	11000015 	stw	r4,0(r2)
  8146d0:	e0bff817 	ldw	r2,-32(fp)
  8146d4:	e0bff715 	stw	r2,-36(fp)
  8146d8:	e0bff517 	ldw	r2,-44(fp)
  8146dc:	10800384 	addi	r2,r2,14
  8146e0:	e0bff515 	stw	r2,-44(fp)
  8146e4:	00000806 	br	814708 <decode_mcu_DC_first+0x344>
  8146e8:	e17ff517 	ldw	r5,-44(fp)
  8146ec:	e13ffe17 	ldw	r4,-8(fp)
  8146f0:	0813fa00 	call	813fa0 <arith_decode>
  8146f4:	10000426 	beq	r2,zero,814708 <decode_mcu_DC_first+0x344>
  8146f8:	e0fff717 	ldw	r3,-36(fp)
  8146fc:	e0bff817 	ldw	r2,-32(fp)
  814700:	1884b03a 	or	r2,r3,r2
  814704:	e0bff715 	stw	r2,-36(fp)
  814708:	e0bff817 	ldw	r2,-32(fp)
  81470c:	1005d07a 	srai	r2,r2,1
  814710:	e0bff815 	stw	r2,-32(fp)
  814714:	e0bff817 	ldw	r2,-32(fp)
  814718:	103ff31e 	bne	r2,zero,8146e8 <__alt_mem_epcs_flash_controller_0+0xff80b6e8>
  81471c:	e0bff717 	ldw	r2,-36(fp)
  814720:	10800044 	addi	r2,r2,1
  814724:	e0bff715 	stw	r2,-36(fp)
  814728:	e0bffd17 	ldw	r2,-12(fp)
  81472c:	10000326 	beq	r2,zero,81473c <decode_mcu_DC_first+0x378>
  814730:	e0bff717 	ldw	r2,-36(fp)
  814734:	0085c83a 	sub	r2,zero,r2
  814738:	e0bff715 	stw	r2,-36(fp)
  81473c:	e0fff917 	ldw	r3,-28(fp)
  814740:	e0bffb17 	ldw	r2,-20(fp)
  814744:	10800184 	addi	r2,r2,6
  814748:	1085883a 	add	r2,r2,r2
  81474c:	1085883a 	add	r2,r2,r2
  814750:	1885883a 	add	r2,r3,r2
  814754:	10c00017 	ldw	r3,0(r2)
  814758:	e0bff717 	ldw	r2,-36(fp)
  81475c:	1887883a 	add	r3,r3,r2
  814760:	e13ff917 	ldw	r4,-28(fp)
  814764:	e0bffb17 	ldw	r2,-20(fp)
  814768:	10800184 	addi	r2,r2,6
  81476c:	1085883a 	add	r2,r2,r2
  814770:	1085883a 	add	r2,r2,r2
  814774:	2085883a 	add	r2,r4,r2
  814778:	10c00015 	stw	r3,0(r2)
  81477c:	e0fff917 	ldw	r3,-28(fp)
  814780:	e0bffb17 	ldw	r2,-20(fp)
  814784:	10800184 	addi	r2,r2,6
  814788:	1085883a 	add	r2,r2,r2
  81478c:	1085883a 	add	r2,r2,r2
  814790:	1885883a 	add	r2,r3,r2
  814794:	10c00017 	ldw	r3,0(r2)
  814798:	e0bffe17 	ldw	r2,-8(fp)
  81479c:	10806a17 	ldw	r2,424(r2)
  8147a0:	1884983a 	sll	r2,r3,r2
  8147a4:	1007883a 	mov	r3,r2
  8147a8:	e0bffa17 	ldw	r2,-24(fp)
  8147ac:	10c0000d 	sth	r3,0(r2)
  8147b0:	e0bff617 	ldw	r2,-40(fp)
  8147b4:	10800044 	addi	r2,r2,1
  8147b8:	e0bff615 	stw	r2,-40(fp)
  8147bc:	e0bffe17 	ldw	r2,-8(fp)
  8147c0:	10805c17 	ldw	r2,368(r2)
  8147c4:	e0fff617 	ldw	r3,-40(fp)
  8147c8:	18bf1c16 	blt	r3,r2,81443c <__alt_mem_epcs_flash_controller_0+0xff80b43c>
  8147cc:	00800044 	movi	r2,1
  8147d0:	e037883a 	mov	sp,fp
  8147d4:	dfc00117 	ldw	ra,4(sp)
  8147d8:	df000017 	ldw	fp,0(sp)
  8147dc:	dec00204 	addi	sp,sp,8
  8147e0:	f800283a 	ret

008147e4 <decode_mcu_AC_first>:
  8147e4:	defff304 	addi	sp,sp,-52
  8147e8:	dfc00c15 	stw	ra,48(sp)
  8147ec:	df000b15 	stw	fp,44(sp)
  8147f0:	df000b04 	addi	fp,sp,44
  8147f4:	e13ffe15 	stw	r4,-8(fp)
  8147f8:	e17fff15 	stw	r5,-4(fp)
  8147fc:	e0bffe17 	ldw	r2,-8(fp)
  814800:	10807517 	ldw	r2,468(r2)
  814804:	e0bff915 	stw	r2,-28(fp)
  814808:	e0bffe17 	ldw	r2,-8(fp)
  81480c:	10804617 	ldw	r2,280(r2)
  814810:	10000a26 	beq	r2,zero,81483c <decode_mcu_AC_first+0x58>
  814814:	e0bff917 	ldw	r2,-28(fp)
  814818:	10800e17 	ldw	r2,56(r2)
  81481c:	1000021e 	bne	r2,zero,814828 <decode_mcu_AC_first+0x44>
  814820:	e13ffe17 	ldw	r4,-8(fp)
  814824:	08141f40 	call	8141f4 <process_restart>
  814828:	e0bff917 	ldw	r2,-28(fp)
  81482c:	10800e17 	ldw	r2,56(r2)
  814830:	10ffffc4 	addi	r3,r2,-1
  814834:	e0bff917 	ldw	r2,-28(fp)
  814838:	10c00e15 	stw	r3,56(r2)
  81483c:	e0bff917 	ldw	r2,-28(fp)
  814840:	10800517 	ldw	r2,20(r2)
  814844:	10bfffd8 	cmpnei	r2,r2,-1
  814848:	1000021e 	bne	r2,zero,814854 <decode_mcu_AC_first+0x70>
  81484c:	00800044 	movi	r2,1
  814850:	0000b806 	br	814b34 <decode_mcu_AC_first+0x350>
  814854:	e0bffe17 	ldw	r2,-8(fp)
  814858:	10806c17 	ldw	r2,432(r2)
  81485c:	e0bffa15 	stw	r2,-24(fp)
  814860:	e0bfff17 	ldw	r2,-4(fp)
  814864:	10800017 	ldw	r2,0(r2)
  814868:	e0bffb15 	stw	r2,-20(fp)
  81486c:	e0bffe17 	ldw	r2,-8(fp)
  814870:	10805617 	ldw	r2,344(r2)
  814874:	10800617 	ldw	r2,24(r2)
  814878:	e0bffc15 	stw	r2,-16(fp)
  81487c:	e0bffe17 	ldw	r2,-8(fp)
  814880:	10806717 	ldw	r2,412(r2)
  814884:	10bfffc4 	addi	r2,r2,-1
  814888:	e0bff615 	stw	r2,-40(fp)
  81488c:	e0fff917 	ldw	r3,-28(fp)
  814890:	e0bffc17 	ldw	r2,-16(fp)
  814894:	108007c4 	addi	r2,r2,31
  814898:	1085883a 	add	r2,r2,r2
  81489c:	1085883a 	add	r2,r2,r2
  8148a0:	1885883a 	add	r2,r3,r2
  8148a4:	11000017 	ldw	r4,0(r2)
  8148a8:	e0fff617 	ldw	r3,-40(fp)
  8148ac:	1805883a 	mov	r2,r3
  8148b0:	1085883a 	add	r2,r2,r2
  8148b4:	10c5883a 	add	r2,r2,r3
  8148b8:	2085883a 	add	r2,r4,r2
  8148bc:	e0bff515 	stw	r2,-44(fp)
  8148c0:	e17ff517 	ldw	r5,-44(fp)
  8148c4:	e13ffe17 	ldw	r4,-8(fp)
  8148c8:	0813fa00 	call	813fa0 <arith_decode>
  8148cc:	1000971e 	bne	r2,zero,814b2c <decode_mcu_AC_first+0x348>
  8148d0:	e0bff617 	ldw	r2,-40(fp)
  8148d4:	10800044 	addi	r2,r2,1
  8148d8:	e0bff615 	stw	r2,-40(fp)
  8148dc:	e0bff517 	ldw	r2,-44(fp)
  8148e0:	10800044 	addi	r2,r2,1
  8148e4:	100b883a 	mov	r5,r2
  8148e8:	e13ffe17 	ldw	r4,-8(fp)
  8148ec:	0813fa00 	call	813fa0 <arith_decode>
  8148f0:	1000161e 	bne	r2,zero,81494c <decode_mcu_AC_first+0x168>
  8148f4:	e0bff517 	ldw	r2,-44(fp)
  8148f8:	108000c4 	addi	r2,r2,3
  8148fc:	e0bff515 	stw	r2,-44(fp)
  814900:	e0bffe17 	ldw	r2,-8(fp)
  814904:	10806817 	ldw	r2,416(r2)
  814908:	e0fff617 	ldw	r3,-40(fp)
  81490c:	18bff016 	blt	r3,r2,8148d0 <__alt_mem_epcs_flash_controller_0+0xff80b8d0>
  814910:	e0bffe17 	ldw	r2,-8(fp)
  814914:	10800017 	ldw	r2,0(r2)
  814918:	00c01d44 	movi	r3,117
  81491c:	10c00515 	stw	r3,20(r2)
  814920:	e0bffe17 	ldw	r2,-8(fp)
  814924:	10800017 	ldw	r2,0(r2)
  814928:	10800117 	ldw	r2,4(r2)
  81492c:	017fffc4 	movi	r5,-1
  814930:	e13ffe17 	ldw	r4,-8(fp)
  814934:	103ee83a 	callr	r2
  814938:	e0bff917 	ldw	r2,-28(fp)
  81493c:	00ffffc4 	movi	r3,-1
  814940:	10c00515 	stw	r3,20(r2)
  814944:	00800044 	movi	r2,1
  814948:	00007a06 	br	814b34 <decode_mcu_AC_first+0x350>
  81494c:	0001883a 	nop
  814950:	e0bff917 	ldw	r2,-28(fp)
  814954:	10802f04 	addi	r2,r2,188
  814958:	100b883a 	mov	r5,r2
  81495c:	e13ffe17 	ldw	r4,-8(fp)
  814960:	0813fa00 	call	813fa0 <arith_decode>
  814964:	e0bffd15 	stw	r2,-12(fp)
  814968:	e0bff517 	ldw	r2,-44(fp)
  81496c:	10800084 	addi	r2,r2,2
  814970:	e0bff515 	stw	r2,-44(fp)
  814974:	e17ff517 	ldw	r5,-44(fp)
  814978:	e13ffe17 	ldw	r4,-8(fp)
  81497c:	0813fa00 	call	813fa0 <arith_decode>
  814980:	e0bff815 	stw	r2,-32(fp)
  814984:	e0bff817 	ldw	r2,-32(fp)
  814988:	10003826 	beq	r2,zero,814a6c <decode_mcu_AC_first+0x288>
  81498c:	e17ff517 	ldw	r5,-44(fp)
  814990:	e13ffe17 	ldw	r4,-8(fp)
  814994:	0813fa00 	call	813fa0 <arith_decode>
  814998:	10003426 	beq	r2,zero,814a6c <decode_mcu_AC_first+0x288>
  81499c:	e0bff817 	ldw	r2,-32(fp)
  8149a0:	1085883a 	add	r2,r2,r2
  8149a4:	e0bff815 	stw	r2,-32(fp)
  8149a8:	e0fff917 	ldw	r3,-28(fp)
  8149ac:	e0bffc17 	ldw	r2,-16(fp)
  8149b0:	108007c4 	addi	r2,r2,31
  8149b4:	1085883a 	add	r2,r2,r2
  8149b8:	1085883a 	add	r2,r2,r2
  8149bc:	1885883a 	add	r2,r3,r2
  8149c0:	10c00017 	ldw	r3,0(r2)
  8149c4:	e13ffe17 	ldw	r4,-8(fp)
  8149c8:	e0bffc17 	ldw	r2,-16(fp)
  8149cc:	2085883a 	add	r2,r4,r2
  8149d0:	10804204 	addi	r2,r2,264
  8149d4:	10800003 	ldbu	r2,0(r2)
  8149d8:	11003fcc 	andi	r4,r2,255
  8149dc:	e0bff617 	ldw	r2,-40(fp)
  8149e0:	20800216 	blt	r4,r2,8149ec <decode_mcu_AC_first+0x208>
  8149e4:	00802f44 	movi	r2,189
  8149e8:	00000106 	br	8149f0 <decode_mcu_AC_first+0x20c>
  8149ec:	00803644 	movi	r2,217
  8149f0:	1885883a 	add	r2,r3,r2
  8149f4:	e0bff515 	stw	r2,-44(fp)
  8149f8:	00001806 	br	814a5c <decode_mcu_AC_first+0x278>
  8149fc:	e0bff817 	ldw	r2,-32(fp)
  814a00:	1085883a 	add	r2,r2,r2
  814a04:	e0bff815 	stw	r2,-32(fp)
  814a08:	e0fff817 	ldw	r3,-32(fp)
  814a0c:	00a00014 	movui	r2,32768
  814a10:	18800f1e 	bne	r3,r2,814a50 <decode_mcu_AC_first+0x26c>
  814a14:	e0bffe17 	ldw	r2,-8(fp)
  814a18:	10800017 	ldw	r2,0(r2)
  814a1c:	00c01d44 	movi	r3,117
  814a20:	10c00515 	stw	r3,20(r2)
  814a24:	e0bffe17 	ldw	r2,-8(fp)
  814a28:	10800017 	ldw	r2,0(r2)
  814a2c:	10800117 	ldw	r2,4(r2)
  814a30:	017fffc4 	movi	r5,-1
  814a34:	e13ffe17 	ldw	r4,-8(fp)
  814a38:	103ee83a 	callr	r2
  814a3c:	e0bff917 	ldw	r2,-28(fp)
  814a40:	00ffffc4 	movi	r3,-1
  814a44:	10c00515 	stw	r3,20(r2)
  814a48:	00800044 	movi	r2,1
  814a4c:	00003906 	br	814b34 <decode_mcu_AC_first+0x350>
  814a50:	e0bff517 	ldw	r2,-44(fp)
  814a54:	10800044 	addi	r2,r2,1
  814a58:	e0bff515 	stw	r2,-44(fp)
  814a5c:	e17ff517 	ldw	r5,-44(fp)
  814a60:	e13ffe17 	ldw	r4,-8(fp)
  814a64:	0813fa00 	call	813fa0 <arith_decode>
  814a68:	103fe41e 	bne	r2,zero,8149fc <__alt_mem_epcs_flash_controller_0+0xff80b9fc>
  814a6c:	e0bff817 	ldw	r2,-32(fp)
  814a70:	e0bff715 	stw	r2,-36(fp)
  814a74:	e0bff517 	ldw	r2,-44(fp)
  814a78:	10800384 	addi	r2,r2,14
  814a7c:	e0bff515 	stw	r2,-44(fp)
  814a80:	00000806 	br	814aa4 <decode_mcu_AC_first+0x2c0>
  814a84:	e17ff517 	ldw	r5,-44(fp)
  814a88:	e13ffe17 	ldw	r4,-8(fp)
  814a8c:	0813fa00 	call	813fa0 <arith_decode>
  814a90:	10000426 	beq	r2,zero,814aa4 <decode_mcu_AC_first+0x2c0>
  814a94:	e0fff717 	ldw	r3,-36(fp)
  814a98:	e0bff817 	ldw	r2,-32(fp)
  814a9c:	1884b03a 	or	r2,r3,r2
  814aa0:	e0bff715 	stw	r2,-36(fp)
  814aa4:	e0bff817 	ldw	r2,-32(fp)
  814aa8:	1005d07a 	srai	r2,r2,1
  814aac:	e0bff815 	stw	r2,-32(fp)
  814ab0:	e0bff817 	ldw	r2,-32(fp)
  814ab4:	103ff31e 	bne	r2,zero,814a84 <__alt_mem_epcs_flash_controller_0+0xff80ba84>
  814ab8:	e0bff717 	ldw	r2,-36(fp)
  814abc:	10800044 	addi	r2,r2,1
  814ac0:	e0bff715 	stw	r2,-36(fp)
  814ac4:	e0bffd17 	ldw	r2,-12(fp)
  814ac8:	10000326 	beq	r2,zero,814ad8 <decode_mcu_AC_first+0x2f4>
  814acc:	e0bff717 	ldw	r2,-36(fp)
  814ad0:	0085c83a 	sub	r2,zero,r2
  814ad4:	e0bff715 	stw	r2,-36(fp)
  814ad8:	e0bff617 	ldw	r2,-40(fp)
  814adc:	1085883a 	add	r2,r2,r2
  814ae0:	1085883a 	add	r2,r2,r2
  814ae4:	1007883a 	mov	r3,r2
  814ae8:	e0bffa17 	ldw	r2,-24(fp)
  814aec:	10c5883a 	add	r2,r2,r3
  814af0:	10800017 	ldw	r2,0(r2)
  814af4:	e0fffe17 	ldw	r3,-8(fp)
  814af8:	18c06a17 	ldw	r3,424(r3)
  814afc:	e13ff717 	ldw	r4,-36(fp)
  814b00:	20c6983a 	sll	r3,r4,r3
  814b04:	1809883a 	mov	r4,r3
  814b08:	e0fffb17 	ldw	r3,-20(fp)
  814b0c:	1085883a 	add	r2,r2,r2
  814b10:	1885883a 	add	r2,r3,r2
  814b14:	1100000d 	sth	r4,0(r2)
  814b18:	e0bffe17 	ldw	r2,-8(fp)
  814b1c:	10806817 	ldw	r2,416(r2)
  814b20:	e0fff617 	ldw	r3,-40(fp)
  814b24:	18bf5916 	blt	r3,r2,81488c <__alt_mem_epcs_flash_controller_0+0xff80b88c>
  814b28:	00000106 	br	814b30 <decode_mcu_AC_first+0x34c>
  814b2c:	0001883a 	nop
  814b30:	00800044 	movi	r2,1
  814b34:	e037883a 	mov	sp,fp
  814b38:	dfc00117 	ldw	ra,4(sp)
  814b3c:	df000017 	ldw	fp,0(sp)
  814b40:	dec00204 	addi	sp,sp,8
  814b44:	f800283a 	ret

00814b48 <decode_mcu_DC_refine>:
  814b48:	defff804 	addi	sp,sp,-32
  814b4c:	dfc00715 	stw	ra,28(sp)
  814b50:	df000615 	stw	fp,24(sp)
  814b54:	df000604 	addi	fp,sp,24
  814b58:	e13ffe15 	stw	r4,-8(fp)
  814b5c:	e17fff15 	stw	r5,-4(fp)
  814b60:	e0bffe17 	ldw	r2,-8(fp)
  814b64:	10807517 	ldw	r2,468(r2)
  814b68:	e0bffb15 	stw	r2,-20(fp)
  814b6c:	e0bffe17 	ldw	r2,-8(fp)
  814b70:	10804617 	ldw	r2,280(r2)
  814b74:	10000a26 	beq	r2,zero,814ba0 <decode_mcu_DC_refine+0x58>
  814b78:	e0bffb17 	ldw	r2,-20(fp)
  814b7c:	10800e17 	ldw	r2,56(r2)
  814b80:	1000021e 	bne	r2,zero,814b8c <decode_mcu_DC_refine+0x44>
  814b84:	e13ffe17 	ldw	r4,-8(fp)
  814b88:	08141f40 	call	8141f4 <process_restart>
  814b8c:	e0bffb17 	ldw	r2,-20(fp)
  814b90:	10800e17 	ldw	r2,56(r2)
  814b94:	10ffffc4 	addi	r3,r2,-1
  814b98:	e0bffb17 	ldw	r2,-20(fp)
  814b9c:	10c00e15 	stw	r3,56(r2)
  814ba0:	e0bffb17 	ldw	r2,-20(fp)
  814ba4:	10802f04 	addi	r2,r2,188
  814ba8:	e0bffc15 	stw	r2,-16(fp)
  814bac:	e0bffe17 	ldw	r2,-8(fp)
  814bb0:	10806a17 	ldw	r2,424(r2)
  814bb4:	00c00044 	movi	r3,1
  814bb8:	1884983a 	sll	r2,r3,r2
  814bbc:	e0bffd15 	stw	r2,-12(fp)
  814bc0:	e03ffa15 	stw	zero,-24(fp)
  814bc4:	00001906 	br	814c2c <decode_mcu_DC_refine+0xe4>
  814bc8:	e17ffc17 	ldw	r5,-16(fp)
  814bcc:	e13ffe17 	ldw	r4,-8(fp)
  814bd0:	0813fa00 	call	813fa0 <arith_decode>
  814bd4:	10001226 	beq	r2,zero,814c20 <decode_mcu_DC_refine+0xd8>
  814bd8:	e0bffa17 	ldw	r2,-24(fp)
  814bdc:	1085883a 	add	r2,r2,r2
  814be0:	1085883a 	add	r2,r2,r2
  814be4:	1007883a 	mov	r3,r2
  814be8:	e0bfff17 	ldw	r2,-4(fp)
  814bec:	10c5883a 	add	r2,r2,r3
  814bf0:	10c00017 	ldw	r3,0(r2)
  814bf4:	e0bffa17 	ldw	r2,-24(fp)
  814bf8:	1085883a 	add	r2,r2,r2
  814bfc:	1085883a 	add	r2,r2,r2
  814c00:	1009883a 	mov	r4,r2
  814c04:	e0bfff17 	ldw	r2,-4(fp)
  814c08:	1105883a 	add	r2,r2,r4
  814c0c:	10800017 	ldw	r2,0(r2)
  814c10:	1080000b 	ldhu	r2,0(r2)
  814c14:	e13ffd17 	ldw	r4,-12(fp)
  814c18:	1104b03a 	or	r2,r2,r4
  814c1c:	1880000d 	sth	r2,0(r3)
  814c20:	e0bffa17 	ldw	r2,-24(fp)
  814c24:	10800044 	addi	r2,r2,1
  814c28:	e0bffa15 	stw	r2,-24(fp)
  814c2c:	e0bffe17 	ldw	r2,-8(fp)
  814c30:	10805c17 	ldw	r2,368(r2)
  814c34:	e0fffa17 	ldw	r3,-24(fp)
  814c38:	18bfe316 	blt	r3,r2,814bc8 <__alt_mem_epcs_flash_controller_0+0xff80bbc8>
  814c3c:	00800044 	movi	r2,1
  814c40:	e037883a 	mov	sp,fp
  814c44:	dfc00117 	ldw	ra,4(sp)
  814c48:	df000017 	ldw	fp,0(sp)
  814c4c:	dec00204 	addi	sp,sp,8
  814c50:	f800283a 	ret

00814c54 <decode_mcu_AC_refine>:
  814c54:	defff204 	addi	sp,sp,-56
  814c58:	dfc00d15 	stw	ra,52(sp)
  814c5c:	df000c15 	stw	fp,48(sp)
  814c60:	df000c04 	addi	fp,sp,48
  814c64:	e13ffe15 	stw	r4,-8(fp)
  814c68:	e17fff15 	stw	r5,-4(fp)
  814c6c:	e0bffe17 	ldw	r2,-8(fp)
  814c70:	10807517 	ldw	r2,468(r2)
  814c74:	e0bff715 	stw	r2,-36(fp)
  814c78:	e0bffe17 	ldw	r2,-8(fp)
  814c7c:	10804617 	ldw	r2,280(r2)
  814c80:	10000a26 	beq	r2,zero,814cac <decode_mcu_AC_refine+0x58>
  814c84:	e0bff717 	ldw	r2,-36(fp)
  814c88:	10800e17 	ldw	r2,56(r2)
  814c8c:	1000021e 	bne	r2,zero,814c98 <decode_mcu_AC_refine+0x44>
  814c90:	e13ffe17 	ldw	r4,-8(fp)
  814c94:	08141f40 	call	8141f4 <process_restart>
  814c98:	e0bff717 	ldw	r2,-36(fp)
  814c9c:	10800e17 	ldw	r2,56(r2)
  814ca0:	10ffffc4 	addi	r3,r2,-1
  814ca4:	e0bff717 	ldw	r2,-36(fp)
  814ca8:	10c00e15 	stw	r3,56(r2)
  814cac:	e0bff717 	ldw	r2,-36(fp)
  814cb0:	10800517 	ldw	r2,20(r2)
  814cb4:	10bfffd8 	cmpnei	r2,r2,-1
  814cb8:	1000021e 	bne	r2,zero,814cc4 <decode_mcu_AC_refine+0x70>
  814cbc:	00800044 	movi	r2,1
  814cc0:	0000ac06 	br	814f74 <decode_mcu_AC_refine+0x320>
  814cc4:	e0bffe17 	ldw	r2,-8(fp)
  814cc8:	10806c17 	ldw	r2,432(r2)
  814ccc:	e0bff815 	stw	r2,-32(fp)
  814cd0:	e0bfff17 	ldw	r2,-4(fp)
  814cd4:	10800017 	ldw	r2,0(r2)
  814cd8:	e0bff915 	stw	r2,-28(fp)
  814cdc:	e0bffe17 	ldw	r2,-8(fp)
  814ce0:	10805617 	ldw	r2,344(r2)
  814ce4:	10800617 	ldw	r2,24(r2)
  814ce8:	e0bffa15 	stw	r2,-24(fp)
  814cec:	e0bffe17 	ldw	r2,-8(fp)
  814cf0:	10806a17 	ldw	r2,424(r2)
  814cf4:	00c00044 	movi	r3,1
  814cf8:	1884983a 	sll	r2,r3,r2
  814cfc:	e0bffb15 	stw	r2,-20(fp)
  814d00:	e0bffe17 	ldw	r2,-8(fp)
  814d04:	10806a17 	ldw	r2,424(r2)
  814d08:	00ffffc4 	movi	r3,-1
  814d0c:	1884983a 	sll	r2,r3,r2
  814d10:	e0bffc15 	stw	r2,-16(fp)
  814d14:	e0bffe17 	ldw	r2,-8(fp)
  814d18:	10806817 	ldw	r2,416(r2)
  814d1c:	e0bff615 	stw	r2,-40(fp)
  814d20:	e0bff617 	ldw	r2,-40(fp)
  814d24:	1085883a 	add	r2,r2,r2
  814d28:	1085883a 	add	r2,r2,r2
  814d2c:	1007883a 	mov	r3,r2
  814d30:	e0bff817 	ldw	r2,-32(fp)
  814d34:	10c5883a 	add	r2,r2,r3
  814d38:	10800017 	ldw	r2,0(r2)
  814d3c:	e0fff917 	ldw	r3,-28(fp)
  814d40:	1085883a 	add	r2,r2,r2
  814d44:	1885883a 	add	r2,r3,r2
  814d48:	1080000b 	ldhu	r2,0(r2)
  814d4c:	10bfffcc 	andi	r2,r2,65535
  814d50:	10a0001c 	xori	r2,r2,32768
  814d54:	10a00004 	addi	r2,r2,-32768
  814d58:	1000061e 	bne	r2,zero,814d74 <decode_mcu_AC_refine+0x120>
  814d5c:	e0bff617 	ldw	r2,-40(fp)
  814d60:	10bfffc4 	addi	r2,r2,-1
  814d64:	e0bff615 	stw	r2,-40(fp)
  814d68:	e0bff617 	ldw	r2,-40(fp)
  814d6c:	103fec1e 	bne	r2,zero,814d20 <__alt_mem_epcs_flash_controller_0+0xff80bd20>
  814d70:	00000106 	br	814d78 <decode_mcu_AC_refine+0x124>
  814d74:	0001883a 	nop
  814d78:	e0bffe17 	ldw	r2,-8(fp)
  814d7c:	10806717 	ldw	r2,412(r2)
  814d80:	10bfffc4 	addi	r2,r2,-1
  814d84:	e0bff515 	stw	r2,-44(fp)
  814d88:	e0fff717 	ldw	r3,-36(fp)
  814d8c:	e0bffa17 	ldw	r2,-24(fp)
  814d90:	108007c4 	addi	r2,r2,31
  814d94:	1085883a 	add	r2,r2,r2
  814d98:	1085883a 	add	r2,r2,r2
  814d9c:	1885883a 	add	r2,r3,r2
  814da0:	11000017 	ldw	r4,0(r2)
  814da4:	e0fff517 	ldw	r3,-44(fp)
  814da8:	1805883a 	mov	r2,r3
  814dac:	1085883a 	add	r2,r2,r2
  814db0:	10c5883a 	add	r2,r2,r3
  814db4:	2085883a 	add	r2,r4,r2
  814db8:	e0bff415 	stw	r2,-48(fp)
  814dbc:	e0fff517 	ldw	r3,-44(fp)
  814dc0:	e0bff617 	ldw	r2,-40(fp)
  814dc4:	18800416 	blt	r3,r2,814dd8 <decode_mcu_AC_refine+0x184>
  814dc8:	e17ff417 	ldw	r5,-48(fp)
  814dcc:	e13ffe17 	ldw	r4,-8(fp)
  814dd0:	0813fa00 	call	813fa0 <arith_decode>
  814dd4:	1000651e 	bne	r2,zero,814f6c <decode_mcu_AC_refine+0x318>
  814dd8:	e0bff517 	ldw	r2,-44(fp)
  814ddc:	10800044 	addi	r2,r2,1
  814de0:	e0bff515 	stw	r2,-44(fp)
  814de4:	e0bff517 	ldw	r2,-44(fp)
  814de8:	1085883a 	add	r2,r2,r2
  814dec:	1085883a 	add	r2,r2,r2
  814df0:	1007883a 	mov	r3,r2
  814df4:	e0bff817 	ldw	r2,-32(fp)
  814df8:	10c5883a 	add	r2,r2,r3
  814dfc:	10800017 	ldw	r2,0(r2)
  814e00:	1085883a 	add	r2,r2,r2
  814e04:	1007883a 	mov	r3,r2
  814e08:	e0bff917 	ldw	r2,-28(fp)
  814e0c:	10c5883a 	add	r2,r2,r3
  814e10:	e0bffd15 	stw	r2,-12(fp)
  814e14:	e0bffd17 	ldw	r2,-12(fp)
  814e18:	1080000b 	ldhu	r2,0(r2)
  814e1c:	10bfffcc 	andi	r2,r2,65535
  814e20:	10a0001c 	xori	r2,r2,32768
  814e24:	10a00004 	addi	r2,r2,-32768
  814e28:	10001e26 	beq	r2,zero,814ea4 <decode_mcu_AC_refine+0x250>
  814e2c:	e0bff417 	ldw	r2,-48(fp)
  814e30:	10800084 	addi	r2,r2,2
  814e34:	100b883a 	mov	r5,r2
  814e38:	e13ffe17 	ldw	r4,-8(fp)
  814e3c:	0813fa00 	call	813fa0 <arith_decode>
  814e40:	10004426 	beq	r2,zero,814f54 <decode_mcu_AC_refine+0x300>
  814e44:	e0bffd17 	ldw	r2,-12(fp)
  814e48:	1080000b 	ldhu	r2,0(r2)
  814e4c:	10bfffcc 	andi	r2,r2,65535
  814e50:	10a0001c 	xori	r2,r2,32768
  814e54:	10a00004 	addi	r2,r2,-32768
  814e58:	1000090e 	bge	r2,zero,814e80 <decode_mcu_AC_refine+0x22c>
  814e5c:	e0bffd17 	ldw	r2,-12(fp)
  814e60:	1080000b 	ldhu	r2,0(r2)
  814e64:	1007883a 	mov	r3,r2
  814e68:	e0bffc17 	ldw	r2,-16(fp)
  814e6c:	1885883a 	add	r2,r3,r2
  814e70:	1007883a 	mov	r3,r2
  814e74:	e0bffd17 	ldw	r2,-12(fp)
  814e78:	10c0000d 	sth	r3,0(r2)
  814e7c:	00003506 	br	814f54 <decode_mcu_AC_refine+0x300>
  814e80:	e0bffd17 	ldw	r2,-12(fp)
  814e84:	1080000b 	ldhu	r2,0(r2)
  814e88:	1007883a 	mov	r3,r2
  814e8c:	e0bffb17 	ldw	r2,-20(fp)
  814e90:	1885883a 	add	r2,r3,r2
  814e94:	1007883a 	mov	r3,r2
  814e98:	e0bffd17 	ldw	r2,-12(fp)
  814e9c:	10c0000d 	sth	r3,0(r2)
  814ea0:	00002c06 	br	814f54 <decode_mcu_AC_refine+0x300>
  814ea4:	e0bff417 	ldw	r2,-48(fp)
  814ea8:	10800044 	addi	r2,r2,1
  814eac:	100b883a 	mov	r5,r2
  814eb0:	e13ffe17 	ldw	r4,-8(fp)
  814eb4:	0813fa00 	call	813fa0 <arith_decode>
  814eb8:	10001026 	beq	r2,zero,814efc <decode_mcu_AC_refine+0x2a8>
  814ebc:	e0bff717 	ldw	r2,-36(fp)
  814ec0:	10802f04 	addi	r2,r2,188
  814ec4:	100b883a 	mov	r5,r2
  814ec8:	e13ffe17 	ldw	r4,-8(fp)
  814ecc:	0813fa00 	call	813fa0 <arith_decode>
  814ed0:	10000526 	beq	r2,zero,814ee8 <decode_mcu_AC_refine+0x294>
  814ed4:	e0bffc17 	ldw	r2,-16(fp)
  814ed8:	1007883a 	mov	r3,r2
  814edc:	e0bffd17 	ldw	r2,-12(fp)
  814ee0:	10c0000d 	sth	r3,0(r2)
  814ee4:	00001c06 	br	814f58 <decode_mcu_AC_refine+0x304>
  814ee8:	e0bffb17 	ldw	r2,-20(fp)
  814eec:	1007883a 	mov	r3,r2
  814ef0:	e0bffd17 	ldw	r2,-12(fp)
  814ef4:	10c0000d 	sth	r3,0(r2)
  814ef8:	00001706 	br	814f58 <decode_mcu_AC_refine+0x304>
  814efc:	e0bff417 	ldw	r2,-48(fp)
  814f00:	108000c4 	addi	r2,r2,3
  814f04:	e0bff415 	stw	r2,-48(fp)
  814f08:	e0bffe17 	ldw	r2,-8(fp)
  814f0c:	10806817 	ldw	r2,416(r2)
  814f10:	e0fff517 	ldw	r3,-44(fp)
  814f14:	18bfb016 	blt	r3,r2,814dd8 <__alt_mem_epcs_flash_controller_0+0xff80bdd8>
  814f18:	e0bffe17 	ldw	r2,-8(fp)
  814f1c:	10800017 	ldw	r2,0(r2)
  814f20:	00c01d44 	movi	r3,117
  814f24:	10c00515 	stw	r3,20(r2)
  814f28:	e0bffe17 	ldw	r2,-8(fp)
  814f2c:	10800017 	ldw	r2,0(r2)
  814f30:	10800117 	ldw	r2,4(r2)
  814f34:	017fffc4 	movi	r5,-1
  814f38:	e13ffe17 	ldw	r4,-8(fp)
  814f3c:	103ee83a 	callr	r2
  814f40:	e0bff717 	ldw	r2,-36(fp)
  814f44:	00ffffc4 	movi	r3,-1
  814f48:	10c00515 	stw	r3,20(r2)
  814f4c:	00800044 	movi	r2,1
  814f50:	00000806 	br	814f74 <decode_mcu_AC_refine+0x320>
  814f54:	0001883a 	nop
  814f58:	e0bffe17 	ldw	r2,-8(fp)
  814f5c:	10806817 	ldw	r2,416(r2)
  814f60:	e0fff517 	ldw	r3,-44(fp)
  814f64:	18bf8816 	blt	r3,r2,814d88 <__alt_mem_epcs_flash_controller_0+0xff80bd88>
  814f68:	00000106 	br	814f70 <decode_mcu_AC_refine+0x31c>
  814f6c:	0001883a 	nop
  814f70:	00800044 	movi	r2,1
  814f74:	e037883a 	mov	sp,fp
  814f78:	dfc00117 	ldw	ra,4(sp)
  814f7c:	df000017 	ldw	fp,0(sp)
  814f80:	dec00204 	addi	sp,sp,8
  814f84:	f800283a 	ret

00814f88 <decode_mcu>:
  814f88:	defff004 	addi	sp,sp,-64
  814f8c:	dfc00f15 	stw	ra,60(sp)
  814f90:	df000e15 	stw	fp,56(sp)
  814f94:	df000e04 	addi	fp,sp,56
  814f98:	e13ffe15 	stw	r4,-8(fp)
  814f9c:	e17fff15 	stw	r5,-4(fp)
  814fa0:	e0bffe17 	ldw	r2,-8(fp)
  814fa4:	10807517 	ldw	r2,468(r2)
  814fa8:	e0bff715 	stw	r2,-36(fp)
  814fac:	e0bffe17 	ldw	r2,-8(fp)
  814fb0:	10804617 	ldw	r2,280(r2)
  814fb4:	10000a26 	beq	r2,zero,814fe0 <decode_mcu+0x58>
  814fb8:	e0bff717 	ldw	r2,-36(fp)
  814fbc:	10800e17 	ldw	r2,56(r2)
  814fc0:	1000021e 	bne	r2,zero,814fcc <decode_mcu+0x44>
  814fc4:	e13ffe17 	ldw	r4,-8(fp)
  814fc8:	08141f40 	call	8141f4 <process_restart>
  814fcc:	e0bff717 	ldw	r2,-36(fp)
  814fd0:	10800e17 	ldw	r2,56(r2)
  814fd4:	10ffffc4 	addi	r3,r2,-1
  814fd8:	e0bff717 	ldw	r2,-36(fp)
  814fdc:	10c00e15 	stw	r3,56(r2)
  814fe0:	e0bff717 	ldw	r2,-36(fp)
  814fe4:	10800517 	ldw	r2,20(r2)
  814fe8:	10bfffd8 	cmpnei	r2,r2,-1
  814fec:	1000021e 	bne	r2,zero,814ff8 <decode_mcu+0x70>
  814ff0:	00800044 	movi	r2,1
  814ff4:	00019806 	br	815658 <decode_mcu+0x6d0>
  814ff8:	e0bffe17 	ldw	r2,-8(fp)
  814ffc:	10806c17 	ldw	r2,432(r2)
  815000:	e0bff815 	stw	r2,-32(fp)
  815004:	e03ff315 	stw	zero,-52(fp)
  815008:	00018e06 	br	815644 <decode_mcu+0x6bc>
  81500c:	e0bff317 	ldw	r2,-52(fp)
  815010:	1085883a 	add	r2,r2,r2
  815014:	1085883a 	add	r2,r2,r2
  815018:	1007883a 	mov	r3,r2
  81501c:	e0bfff17 	ldw	r2,-4(fp)
  815020:	10c5883a 	add	r2,r2,r3
  815024:	10800017 	ldw	r2,0(r2)
  815028:	e0bff915 	stw	r2,-28(fp)
  81502c:	e0fffe17 	ldw	r3,-8(fp)
  815030:	e0bff317 	ldw	r2,-52(fp)
  815034:	10801744 	addi	r2,r2,93
  815038:	1085883a 	add	r2,r2,r2
  81503c:	1085883a 	add	r2,r2,r2
  815040:	1885883a 	add	r2,r3,r2
  815044:	10800017 	ldw	r2,0(r2)
  815048:	e0bffa15 	stw	r2,-24(fp)
  81504c:	e0fffe17 	ldw	r3,-8(fp)
  815050:	e0bffa17 	ldw	r2,-24(fp)
  815054:	10801584 	addi	r2,r2,86
  815058:	1085883a 	add	r2,r2,r2
  81505c:	1085883a 	add	r2,r2,r2
  815060:	1885883a 	add	r2,r3,r2
  815064:	10800017 	ldw	r2,0(r2)
  815068:	e0bffb15 	stw	r2,-20(fp)
  81506c:	e0bffb17 	ldw	r2,-20(fp)
  815070:	10800517 	ldw	r2,20(r2)
  815074:	e0bffc15 	stw	r2,-16(fp)
  815078:	e0fff717 	ldw	r3,-36(fp)
  81507c:	e0bffc17 	ldw	r2,-16(fp)
  815080:	108003c4 	addi	r2,r2,15
  815084:	1085883a 	add	r2,r2,r2
  815088:	1085883a 	add	r2,r2,r2
  81508c:	1885883a 	add	r2,r3,r2
  815090:	10c00017 	ldw	r3,0(r2)
  815094:	e13ff717 	ldw	r4,-36(fp)
  815098:	e0bffa17 	ldw	r2,-24(fp)
  81509c:	10800284 	addi	r2,r2,10
  8150a0:	1085883a 	add	r2,r2,r2
  8150a4:	1085883a 	add	r2,r2,r2
  8150a8:	2085883a 	add	r2,r4,r2
  8150ac:	10800017 	ldw	r2,0(r2)
  8150b0:	1885883a 	add	r2,r3,r2
  8150b4:	e0bff215 	stw	r2,-56(fp)
  8150b8:	e17ff217 	ldw	r5,-56(fp)
  8150bc:	e13ffe17 	ldw	r4,-8(fp)
  8150c0:	0813fa00 	call	813fa0 <arith_decode>
  8150c4:	1000081e 	bne	r2,zero,8150e8 <decode_mcu+0x160>
  8150c8:	e0fff717 	ldw	r3,-36(fp)
  8150cc:	e0bffa17 	ldw	r2,-24(fp)
  8150d0:	10800284 	addi	r2,r2,10
  8150d4:	1085883a 	add	r2,r2,r2
  8150d8:	1085883a 	add	r2,r2,r2
  8150dc:	1885883a 	add	r2,r3,r2
  8150e0:	10000015 	stw	zero,0(r2)
  8150e4:	00009b06 	br	815354 <decode_mcu+0x3cc>
  8150e8:	e0bff217 	ldw	r2,-56(fp)
  8150ec:	10800044 	addi	r2,r2,1
  8150f0:	100b883a 	mov	r5,r2
  8150f4:	e13ffe17 	ldw	r4,-8(fp)
  8150f8:	0813fa00 	call	813fa0 <arith_decode>
  8150fc:	e0bffd15 	stw	r2,-12(fp)
  815100:	e0bff217 	ldw	r2,-56(fp)
  815104:	10800084 	addi	r2,r2,2
  815108:	e0bff215 	stw	r2,-56(fp)
  81510c:	e0bffd17 	ldw	r2,-12(fp)
  815110:	e0fff217 	ldw	r3,-56(fp)
  815114:	1885883a 	add	r2,r3,r2
  815118:	e0bff215 	stw	r2,-56(fp)
  81511c:	e17ff217 	ldw	r5,-56(fp)
  815120:	e13ffe17 	ldw	r4,-8(fp)
  815124:	0813fa00 	call	813fa0 <arith_decode>
  815128:	e0bff615 	stw	r2,-40(fp)
  81512c:	e0bff617 	ldw	r2,-40(fp)
  815130:	10002626 	beq	r2,zero,8151cc <decode_mcu+0x244>
  815134:	e0fff717 	ldw	r3,-36(fp)
  815138:	e0bffc17 	ldw	r2,-16(fp)
  81513c:	108003c4 	addi	r2,r2,15
  815140:	1085883a 	add	r2,r2,r2
  815144:	1085883a 	add	r2,r2,r2
  815148:	1885883a 	add	r2,r3,r2
  81514c:	10800017 	ldw	r2,0(r2)
  815150:	10800504 	addi	r2,r2,20
  815154:	e0bff215 	stw	r2,-56(fp)
  815158:	00001806 	br	8151bc <decode_mcu+0x234>
  81515c:	e0bff617 	ldw	r2,-40(fp)
  815160:	1085883a 	add	r2,r2,r2
  815164:	e0bff615 	stw	r2,-40(fp)
  815168:	e0fff617 	ldw	r3,-40(fp)
  81516c:	00a00014 	movui	r2,32768
  815170:	18800f1e 	bne	r3,r2,8151b0 <decode_mcu+0x228>
  815174:	e0bffe17 	ldw	r2,-8(fp)
  815178:	10800017 	ldw	r2,0(r2)
  81517c:	00c01d44 	movi	r3,117
  815180:	10c00515 	stw	r3,20(r2)
  815184:	e0bffe17 	ldw	r2,-8(fp)
  815188:	10800017 	ldw	r2,0(r2)
  81518c:	10800117 	ldw	r2,4(r2)
  815190:	017fffc4 	movi	r5,-1
  815194:	e13ffe17 	ldw	r4,-8(fp)
  815198:	103ee83a 	callr	r2
  81519c:	e0bff717 	ldw	r2,-36(fp)
  8151a0:	00ffffc4 	movi	r3,-1
  8151a4:	10c00515 	stw	r3,20(r2)
  8151a8:	00800044 	movi	r2,1
  8151ac:	00012a06 	br	815658 <decode_mcu+0x6d0>
  8151b0:	e0bff217 	ldw	r2,-56(fp)
  8151b4:	10800044 	addi	r2,r2,1
  8151b8:	e0bff215 	stw	r2,-56(fp)
  8151bc:	e17ff217 	ldw	r5,-56(fp)
  8151c0:	e13ffe17 	ldw	r4,-8(fp)
  8151c4:	0813fa00 	call	813fa0 <arith_decode>
  8151c8:	103fe41e 	bne	r2,zero,81515c <__alt_mem_epcs_flash_controller_0+0xff80c15c>
  8151cc:	e0fffe17 	ldw	r3,-8(fp)
  8151d0:	e0bffc17 	ldw	r2,-16(fp)
  8151d4:	1885883a 	add	r2,r3,r2
  8151d8:	10803a04 	addi	r2,r2,232
  8151dc:	10800003 	ldbu	r2,0(r2)
  8151e0:	10803fcc 	andi	r2,r2,255
  8151e4:	00c00044 	movi	r3,1
  8151e8:	1884983a 	sll	r2,r3,r2
  8151ec:	1005d07a 	srai	r2,r2,1
  8151f0:	e0fff617 	ldw	r3,-40(fp)
  8151f4:	1880080e 	bge	r3,r2,815218 <decode_mcu+0x290>
  8151f8:	e0fff717 	ldw	r3,-36(fp)
  8151fc:	e0bffa17 	ldw	r2,-24(fp)
  815200:	10800284 	addi	r2,r2,10
  815204:	1085883a 	add	r2,r2,r2
  815208:	1085883a 	add	r2,r2,r2
  81520c:	1885883a 	add	r2,r3,r2
  815210:	10000015 	stw	zero,0(r2)
  815214:	00002406 	br	8152a8 <decode_mcu+0x320>
  815218:	e0fffe17 	ldw	r3,-8(fp)
  81521c:	e0bffc17 	ldw	r2,-16(fp)
  815220:	1885883a 	add	r2,r3,r2
  815224:	10803e04 	addi	r2,r2,248
  815228:	10800003 	ldbu	r2,0(r2)
  81522c:	10803fcc 	andi	r2,r2,255
  815230:	00c00044 	movi	r3,1
  815234:	1884983a 	sll	r2,r3,r2
  815238:	1007d07a 	srai	r3,r2,1
  81523c:	e0bff617 	ldw	r2,-40(fp)
  815240:	18800d0e 	bge	r3,r2,815278 <decode_mcu+0x2f0>
  815244:	e0bffd17 	ldw	r2,-12(fp)
  815248:	108000c4 	addi	r2,r2,3
  81524c:	1085883a 	add	r2,r2,r2
  815250:	1085883a 	add	r2,r2,r2
  815254:	1009883a 	mov	r4,r2
  815258:	e0fff717 	ldw	r3,-36(fp)
  81525c:	e0bffa17 	ldw	r2,-24(fp)
  815260:	10800284 	addi	r2,r2,10
  815264:	1085883a 	add	r2,r2,r2
  815268:	1085883a 	add	r2,r2,r2
  81526c:	1885883a 	add	r2,r3,r2
  815270:	11000015 	stw	r4,0(r2)
  815274:	00000c06 	br	8152a8 <decode_mcu+0x320>
  815278:	e0bffd17 	ldw	r2,-12(fp)
  81527c:	10800044 	addi	r2,r2,1
  815280:	1085883a 	add	r2,r2,r2
  815284:	1085883a 	add	r2,r2,r2
  815288:	1009883a 	mov	r4,r2
  81528c:	e0fff717 	ldw	r3,-36(fp)
  815290:	e0bffa17 	ldw	r2,-24(fp)
  815294:	10800284 	addi	r2,r2,10
  815298:	1085883a 	add	r2,r2,r2
  81529c:	1085883a 	add	r2,r2,r2
  8152a0:	1885883a 	add	r2,r3,r2
  8152a4:	11000015 	stw	r4,0(r2)
  8152a8:	e0bff617 	ldw	r2,-40(fp)
  8152ac:	e0bff515 	stw	r2,-44(fp)
  8152b0:	e0bff217 	ldw	r2,-56(fp)
  8152b4:	10800384 	addi	r2,r2,14
  8152b8:	e0bff215 	stw	r2,-56(fp)
  8152bc:	00000806 	br	8152e0 <decode_mcu+0x358>
  8152c0:	e17ff217 	ldw	r5,-56(fp)
  8152c4:	e13ffe17 	ldw	r4,-8(fp)
  8152c8:	0813fa00 	call	813fa0 <arith_decode>
  8152cc:	10000426 	beq	r2,zero,8152e0 <decode_mcu+0x358>
  8152d0:	e0fff517 	ldw	r3,-44(fp)
  8152d4:	e0bff617 	ldw	r2,-40(fp)
  8152d8:	1884b03a 	or	r2,r3,r2
  8152dc:	e0bff515 	stw	r2,-44(fp)
  8152e0:	e0bff617 	ldw	r2,-40(fp)
  8152e4:	1005d07a 	srai	r2,r2,1
  8152e8:	e0bff615 	stw	r2,-40(fp)
  8152ec:	e0bff617 	ldw	r2,-40(fp)
  8152f0:	103ff31e 	bne	r2,zero,8152c0 <__alt_mem_epcs_flash_controller_0+0xff80c2c0>
  8152f4:	e0bff517 	ldw	r2,-44(fp)
  8152f8:	10800044 	addi	r2,r2,1
  8152fc:	e0bff515 	stw	r2,-44(fp)
  815300:	e0bffd17 	ldw	r2,-12(fp)
  815304:	10000326 	beq	r2,zero,815314 <decode_mcu+0x38c>
  815308:	e0bff517 	ldw	r2,-44(fp)
  81530c:	0085c83a 	sub	r2,zero,r2
  815310:	e0bff515 	stw	r2,-44(fp)
  815314:	e0fff717 	ldw	r3,-36(fp)
  815318:	e0bffa17 	ldw	r2,-24(fp)
  81531c:	10800184 	addi	r2,r2,6
  815320:	1085883a 	add	r2,r2,r2
  815324:	1085883a 	add	r2,r2,r2
  815328:	1885883a 	add	r2,r3,r2
  81532c:	10c00017 	ldw	r3,0(r2)
  815330:	e0bff517 	ldw	r2,-44(fp)
  815334:	1887883a 	add	r3,r3,r2
  815338:	e13ff717 	ldw	r4,-36(fp)
  81533c:	e0bffa17 	ldw	r2,-24(fp)
  815340:	10800184 	addi	r2,r2,6
  815344:	1085883a 	add	r2,r2,r2
  815348:	1085883a 	add	r2,r2,r2
  81534c:	2085883a 	add	r2,r4,r2
  815350:	10c00015 	stw	r3,0(r2)
  815354:	e0fff717 	ldw	r3,-36(fp)
  815358:	e0bffa17 	ldw	r2,-24(fp)
  81535c:	10800184 	addi	r2,r2,6
  815360:	1085883a 	add	r2,r2,r2
  815364:	1085883a 	add	r2,r2,r2
  815368:	1885883a 	add	r2,r3,r2
  81536c:	10800017 	ldw	r2,0(r2)
  815370:	1007883a 	mov	r3,r2
  815374:	e0bff917 	ldw	r2,-28(fp)
  815378:	10c0000d 	sth	r3,0(r2)
  81537c:	e0bffe17 	ldw	r2,-8(fp)
  815380:	10806d17 	ldw	r2,436(r2)
  815384:	1000a926 	beq	r2,zero,81562c <decode_mcu+0x6a4>
  815388:	e0bffb17 	ldw	r2,-20(fp)
  81538c:	10800617 	ldw	r2,24(r2)
  815390:	e0bffc15 	stw	r2,-16(fp)
  815394:	e03ff415 	stw	zero,-48(fp)
  815398:	e0fff717 	ldw	r3,-36(fp)
  81539c:	e0bffc17 	ldw	r2,-16(fp)
  8153a0:	108007c4 	addi	r2,r2,31
  8153a4:	1085883a 	add	r2,r2,r2
  8153a8:	1085883a 	add	r2,r2,r2
  8153ac:	1885883a 	add	r2,r3,r2
  8153b0:	11000017 	ldw	r4,0(r2)
  8153b4:	e0fff417 	ldw	r3,-48(fp)
  8153b8:	1805883a 	mov	r2,r3
  8153bc:	1085883a 	add	r2,r2,r2
  8153c0:	10c5883a 	add	r2,r2,r3
  8153c4:	2085883a 	add	r2,r4,r2
  8153c8:	e0bff215 	stw	r2,-56(fp)
  8153cc:	e17ff217 	ldw	r5,-56(fp)
  8153d0:	e13ffe17 	ldw	r4,-8(fp)
  8153d4:	0813fa00 	call	813fa0 <arith_decode>
  8153d8:	1000961e 	bne	r2,zero,815634 <decode_mcu+0x6ac>
  8153dc:	e0bff417 	ldw	r2,-48(fp)
  8153e0:	10800044 	addi	r2,r2,1
  8153e4:	e0bff415 	stw	r2,-48(fp)
  8153e8:	e0bff217 	ldw	r2,-56(fp)
  8153ec:	10800044 	addi	r2,r2,1
  8153f0:	100b883a 	mov	r5,r2
  8153f4:	e13ffe17 	ldw	r4,-8(fp)
  8153f8:	0813fa00 	call	813fa0 <arith_decode>
  8153fc:	1000161e 	bne	r2,zero,815458 <decode_mcu+0x4d0>
  815400:	e0bff217 	ldw	r2,-56(fp)
  815404:	108000c4 	addi	r2,r2,3
  815408:	e0bff215 	stw	r2,-56(fp)
  81540c:	e0bffe17 	ldw	r2,-8(fp)
  815410:	10806d17 	ldw	r2,436(r2)
  815414:	e0fff417 	ldw	r3,-48(fp)
  815418:	18bff016 	blt	r3,r2,8153dc <__alt_mem_epcs_flash_controller_0+0xff80c3dc>
  81541c:	e0bffe17 	ldw	r2,-8(fp)
  815420:	10800017 	ldw	r2,0(r2)
  815424:	00c01d44 	movi	r3,117
  815428:	10c00515 	stw	r3,20(r2)
  81542c:	e0bffe17 	ldw	r2,-8(fp)
  815430:	10800017 	ldw	r2,0(r2)
  815434:	10800117 	ldw	r2,4(r2)
  815438:	017fffc4 	movi	r5,-1
  81543c:	e13ffe17 	ldw	r4,-8(fp)
  815440:	103ee83a 	callr	r2
  815444:	e0bff717 	ldw	r2,-36(fp)
  815448:	00ffffc4 	movi	r3,-1
  81544c:	10c00515 	stw	r3,20(r2)
  815450:	00800044 	movi	r2,1
  815454:	00008006 	br	815658 <decode_mcu+0x6d0>
  815458:	0001883a 	nop
  81545c:	e0bff717 	ldw	r2,-36(fp)
  815460:	10802f04 	addi	r2,r2,188
  815464:	100b883a 	mov	r5,r2
  815468:	e13ffe17 	ldw	r4,-8(fp)
  81546c:	0813fa00 	call	813fa0 <arith_decode>
  815470:	e0bffd15 	stw	r2,-12(fp)
  815474:	e0bff217 	ldw	r2,-56(fp)
  815478:	10800084 	addi	r2,r2,2
  81547c:	e0bff215 	stw	r2,-56(fp)
  815480:	e17ff217 	ldw	r5,-56(fp)
  815484:	e13ffe17 	ldw	r4,-8(fp)
  815488:	0813fa00 	call	813fa0 <arith_decode>
  81548c:	e0bff615 	stw	r2,-40(fp)
  815490:	e0bff617 	ldw	r2,-40(fp)
  815494:	10003826 	beq	r2,zero,815578 <decode_mcu+0x5f0>
  815498:	e17ff217 	ldw	r5,-56(fp)
  81549c:	e13ffe17 	ldw	r4,-8(fp)
  8154a0:	0813fa00 	call	813fa0 <arith_decode>
  8154a4:	10003426 	beq	r2,zero,815578 <decode_mcu+0x5f0>
  8154a8:	e0bff617 	ldw	r2,-40(fp)
  8154ac:	1085883a 	add	r2,r2,r2
  8154b0:	e0bff615 	stw	r2,-40(fp)
  8154b4:	e0fff717 	ldw	r3,-36(fp)
  8154b8:	e0bffc17 	ldw	r2,-16(fp)
  8154bc:	108007c4 	addi	r2,r2,31
  8154c0:	1085883a 	add	r2,r2,r2
  8154c4:	1085883a 	add	r2,r2,r2
  8154c8:	1885883a 	add	r2,r3,r2
  8154cc:	10c00017 	ldw	r3,0(r2)
  8154d0:	e13ffe17 	ldw	r4,-8(fp)
  8154d4:	e0bffc17 	ldw	r2,-16(fp)
  8154d8:	2085883a 	add	r2,r4,r2
  8154dc:	10804204 	addi	r2,r2,264
  8154e0:	10800003 	ldbu	r2,0(r2)
  8154e4:	11003fcc 	andi	r4,r2,255
  8154e8:	e0bff417 	ldw	r2,-48(fp)
  8154ec:	20800216 	blt	r4,r2,8154f8 <decode_mcu+0x570>
  8154f0:	00802f44 	movi	r2,189
  8154f4:	00000106 	br	8154fc <decode_mcu+0x574>
  8154f8:	00803644 	movi	r2,217
  8154fc:	1885883a 	add	r2,r3,r2
  815500:	e0bff215 	stw	r2,-56(fp)
  815504:	00001806 	br	815568 <decode_mcu+0x5e0>
  815508:	e0bff617 	ldw	r2,-40(fp)
  81550c:	1085883a 	add	r2,r2,r2
  815510:	e0bff615 	stw	r2,-40(fp)
  815514:	e0fff617 	ldw	r3,-40(fp)
  815518:	00a00014 	movui	r2,32768
  81551c:	18800f1e 	bne	r3,r2,81555c <decode_mcu+0x5d4>
  815520:	e0bffe17 	ldw	r2,-8(fp)
  815524:	10800017 	ldw	r2,0(r2)
  815528:	00c01d44 	movi	r3,117
  81552c:	10c00515 	stw	r3,20(r2)
  815530:	e0bffe17 	ldw	r2,-8(fp)
  815534:	10800017 	ldw	r2,0(r2)
  815538:	10800117 	ldw	r2,4(r2)
  81553c:	017fffc4 	movi	r5,-1
  815540:	e13ffe17 	ldw	r4,-8(fp)
  815544:	103ee83a 	callr	r2
  815548:	e0bff717 	ldw	r2,-36(fp)
  81554c:	00ffffc4 	movi	r3,-1
  815550:	10c00515 	stw	r3,20(r2)
  815554:	00800044 	movi	r2,1
  815558:	00003f06 	br	815658 <decode_mcu+0x6d0>
  81555c:	e0bff217 	ldw	r2,-56(fp)
  815560:	10800044 	addi	r2,r2,1
  815564:	e0bff215 	stw	r2,-56(fp)
  815568:	e17ff217 	ldw	r5,-56(fp)
  81556c:	e13ffe17 	ldw	r4,-8(fp)
  815570:	0813fa00 	call	813fa0 <arith_decode>
  815574:	103fe41e 	bne	r2,zero,815508 <__alt_mem_epcs_flash_controller_0+0xff80c508>
  815578:	e0bff617 	ldw	r2,-40(fp)
  81557c:	e0bff515 	stw	r2,-44(fp)
  815580:	e0bff217 	ldw	r2,-56(fp)
  815584:	10800384 	addi	r2,r2,14
  815588:	e0bff215 	stw	r2,-56(fp)
  81558c:	00000806 	br	8155b0 <decode_mcu+0x628>
  815590:	e17ff217 	ldw	r5,-56(fp)
  815594:	e13ffe17 	ldw	r4,-8(fp)
  815598:	0813fa00 	call	813fa0 <arith_decode>
  81559c:	10000426 	beq	r2,zero,8155b0 <decode_mcu+0x628>
  8155a0:	e0fff517 	ldw	r3,-44(fp)
  8155a4:	e0bff617 	ldw	r2,-40(fp)
  8155a8:	1884b03a 	or	r2,r3,r2
  8155ac:	e0bff515 	stw	r2,-44(fp)
  8155b0:	e0bff617 	ldw	r2,-40(fp)
  8155b4:	1005d07a 	srai	r2,r2,1
  8155b8:	e0bff615 	stw	r2,-40(fp)
  8155bc:	e0bff617 	ldw	r2,-40(fp)
  8155c0:	103ff31e 	bne	r2,zero,815590 <__alt_mem_epcs_flash_controller_0+0xff80c590>
  8155c4:	e0bff517 	ldw	r2,-44(fp)
  8155c8:	10800044 	addi	r2,r2,1
  8155cc:	e0bff515 	stw	r2,-44(fp)
  8155d0:	e0bffd17 	ldw	r2,-12(fp)
  8155d4:	10000326 	beq	r2,zero,8155e4 <decode_mcu+0x65c>
  8155d8:	e0bff517 	ldw	r2,-44(fp)
  8155dc:	0085c83a 	sub	r2,zero,r2
  8155e0:	e0bff515 	stw	r2,-44(fp)
  8155e4:	e0bff417 	ldw	r2,-48(fp)
  8155e8:	1085883a 	add	r2,r2,r2
  8155ec:	1085883a 	add	r2,r2,r2
  8155f0:	1007883a 	mov	r3,r2
  8155f4:	e0bff817 	ldw	r2,-32(fp)
  8155f8:	10c5883a 	add	r2,r2,r3
  8155fc:	10800017 	ldw	r2,0(r2)
  815600:	e0fff517 	ldw	r3,-44(fp)
  815604:	1809883a 	mov	r4,r3
  815608:	e0fff917 	ldw	r3,-28(fp)
  81560c:	1085883a 	add	r2,r2,r2
  815610:	1885883a 	add	r2,r3,r2
  815614:	1100000d 	sth	r4,0(r2)
  815618:	e0bffe17 	ldw	r2,-8(fp)
  81561c:	10806d17 	ldw	r2,436(r2)
  815620:	e0fff417 	ldw	r3,-48(fp)
  815624:	18bf5c16 	blt	r3,r2,815398 <__alt_mem_epcs_flash_controller_0+0xff80c398>
  815628:	00000306 	br	815638 <decode_mcu+0x6b0>
  81562c:	0001883a 	nop
  815630:	00000106 	br	815638 <decode_mcu+0x6b0>
  815634:	0001883a 	nop
  815638:	e0bff317 	ldw	r2,-52(fp)
  81563c:	10800044 	addi	r2,r2,1
  815640:	e0bff315 	stw	r2,-52(fp)
  815644:	e0bffe17 	ldw	r2,-8(fp)
  815648:	10805c17 	ldw	r2,368(r2)
  81564c:	e0fff317 	ldw	r3,-52(fp)
  815650:	18be6e16 	blt	r3,r2,81500c <__alt_mem_epcs_flash_controller_0+0xff80c00c>
  815654:	00800044 	movi	r2,1
  815658:	e037883a 	mov	sp,fp
  81565c:	dfc00117 	ldw	ra,4(sp)
  815660:	df000017 	ldw	fp,0(sp)
  815664:	dec00204 	addi	sp,sp,8
  815668:	f800283a 	ret

0081566c <start_pass>:
  81566c:	defff504 	addi	sp,sp,-44
  815670:	dfc00a15 	stw	ra,40(sp)
  815674:	df000915 	stw	fp,36(sp)
  815678:	df000904 	addi	fp,sp,36
  81567c:	e13fff15 	stw	r4,-4(fp)
  815680:	e0bfff17 	ldw	r2,-4(fp)
  815684:	10807517 	ldw	r2,468(r2)
  815688:	e0bff915 	stw	r2,-28(fp)
  81568c:	e0bfff17 	ldw	r2,-4(fp)
  815690:	10803817 	ldw	r2,224(r2)
  815694:	1000c326 	beq	r2,zero,8159a4 <start_pass+0x338>
  815698:	e0bfff17 	ldw	r2,-4(fp)
  81569c:	10806717 	ldw	r2,412(r2)
  8156a0:	1000041e 	bne	r2,zero,8156b4 <start_pass+0x48>
  8156a4:	e0bfff17 	ldw	r2,-4(fp)
  8156a8:	10806817 	ldw	r2,416(r2)
  8156ac:	10000f26 	beq	r2,zero,8156ec <start_pass+0x80>
  8156b0:	00001f06 	br	815730 <start_pass+0xc4>
  8156b4:	e0bfff17 	ldw	r2,-4(fp)
  8156b8:	10c06817 	ldw	r3,416(r2)
  8156bc:	e0bfff17 	ldw	r2,-4(fp)
  8156c0:	10806717 	ldw	r2,412(r2)
  8156c4:	18801a16 	blt	r3,r2,815730 <start_pass+0xc4>
  8156c8:	e0bfff17 	ldw	r2,-4(fp)
  8156cc:	10806817 	ldw	r2,416(r2)
  8156d0:	e0ffff17 	ldw	r3,-4(fp)
  8156d4:	18c06d17 	ldw	r3,436(r3)
  8156d8:	18801516 	blt	r3,r2,815730 <start_pass+0xc4>
  8156dc:	e0bfff17 	ldw	r2,-4(fp)
  8156e0:	10805517 	ldw	r2,340(r2)
  8156e4:	10800060 	cmpeqi	r2,r2,1
  8156e8:	10000e26 	beq	r2,zero,815724 <start_pass+0xb8>
  8156ec:	e0bfff17 	ldw	r2,-4(fp)
  8156f0:	10806917 	ldw	r2,420(r2)
  8156f4:	10000626 	beq	r2,zero,815710 <start_pass+0xa4>
  8156f8:	e0bfff17 	ldw	r2,-4(fp)
  8156fc:	10806917 	ldw	r2,420(r2)
  815700:	10ffffc4 	addi	r3,r2,-1
  815704:	e0bfff17 	ldw	r2,-4(fp)
  815708:	10806a17 	ldw	r2,424(r2)
  81570c:	1880071e 	bne	r3,r2,81572c <start_pass+0xc0>
  815710:	e0bfff17 	ldw	r2,-4(fp)
  815714:	10806a17 	ldw	r2,424(r2)
  815718:	10800390 	cmplti	r2,r2,14
  81571c:	1000211e 	bne	r2,zero,8157a4 <start_pass+0x138>
  815720:	00000306 	br	815730 <start_pass+0xc4>
  815724:	0001883a 	nop
  815728:	00000106 	br	815730 <start_pass+0xc4>
  81572c:	0001883a 	nop
  815730:	e0bfff17 	ldw	r2,-4(fp)
  815734:	10800017 	ldw	r2,0(r2)
  815738:	00c00444 	movi	r3,17
  81573c:	10c00515 	stw	r3,20(r2)
  815740:	e0bfff17 	ldw	r2,-4(fp)
  815744:	10800017 	ldw	r2,0(r2)
  815748:	e0ffff17 	ldw	r3,-4(fp)
  81574c:	18c06717 	ldw	r3,412(r3)
  815750:	10c00615 	stw	r3,24(r2)
  815754:	e0bfff17 	ldw	r2,-4(fp)
  815758:	10800017 	ldw	r2,0(r2)
  81575c:	e0ffff17 	ldw	r3,-4(fp)
  815760:	18c06817 	ldw	r3,416(r3)
  815764:	10c00715 	stw	r3,28(r2)
  815768:	e0bfff17 	ldw	r2,-4(fp)
  81576c:	10800017 	ldw	r2,0(r2)
  815770:	e0ffff17 	ldw	r3,-4(fp)
  815774:	18c06917 	ldw	r3,420(r3)
  815778:	10c00815 	stw	r3,32(r2)
  81577c:	e0bfff17 	ldw	r2,-4(fp)
  815780:	10800017 	ldw	r2,0(r2)
  815784:	e0ffff17 	ldw	r3,-4(fp)
  815788:	18c06a17 	ldw	r3,424(r3)
  81578c:	10c00915 	stw	r3,36(r2)
  815790:	e0bfff17 	ldw	r2,-4(fp)
  815794:	10800017 	ldw	r2,0(r2)
  815798:	10800017 	ldw	r2,0(r2)
  81579c:	e13fff17 	ldw	r4,-4(fp)
  8157a0:	103ee83a 	callr	r2
  8157a4:	e03ff715 	stw	zero,-36(fp)
  8157a8:	00005d06 	br	815920 <start_pass+0x2b4>
  8157ac:	e0ffff17 	ldw	r3,-4(fp)
  8157b0:	e0bff717 	ldw	r2,-36(fp)
  8157b4:	10801584 	addi	r2,r2,86
  8157b8:	1085883a 	add	r2,r2,r2
  8157bc:	1085883a 	add	r2,r2,r2
  8157c0:	1885883a 	add	r2,r3,r2
  8157c4:	10800017 	ldw	r2,0(r2)
  8157c8:	10800117 	ldw	r2,4(r2)
  8157cc:	e0bffa15 	stw	r2,-24(fp)
  8157d0:	e0bfff17 	ldw	r2,-4(fp)
  8157d4:	10c02817 	ldw	r3,160(r2)
  8157d8:	e0bffa17 	ldw	r2,-24(fp)
  8157dc:	1004923a 	slli	r2,r2,8
  8157e0:	1885883a 	add	r2,r3,r2
  8157e4:	e0bffb15 	stw	r2,-20(fp)
  8157e8:	e0bfff17 	ldw	r2,-4(fp)
  8157ec:	10806717 	ldw	r2,412(r2)
  8157f0:	10001426 	beq	r2,zero,815844 <start_pass+0x1d8>
  8157f4:	e0bffb17 	ldw	r2,-20(fp)
  8157f8:	10800017 	ldw	r2,0(r2)
  8157fc:	1000110e 	bge	r2,zero,815844 <start_pass+0x1d8>
  815800:	e0bfff17 	ldw	r2,-4(fp)
  815804:	10800017 	ldw	r2,0(r2)
  815808:	00c01d84 	movi	r3,118
  81580c:	10c00515 	stw	r3,20(r2)
  815810:	e0bfff17 	ldw	r2,-4(fp)
  815814:	10800017 	ldw	r2,0(r2)
  815818:	e0fffa17 	ldw	r3,-24(fp)
  81581c:	10c00615 	stw	r3,24(r2)
  815820:	e0bfff17 	ldw	r2,-4(fp)
  815824:	10800017 	ldw	r2,0(r2)
  815828:	10000715 	stw	zero,28(r2)
  81582c:	e0bfff17 	ldw	r2,-4(fp)
  815830:	10800017 	ldw	r2,0(r2)
  815834:	10800117 	ldw	r2,4(r2)
  815838:	017fffc4 	movi	r5,-1
  81583c:	e13fff17 	ldw	r4,-4(fp)
  815840:	103ee83a 	callr	r2
  815844:	e0bfff17 	ldw	r2,-4(fp)
  815848:	10806717 	ldw	r2,412(r2)
  81584c:	e0bff815 	stw	r2,-32(fp)
  815850:	00002c06 	br	815904 <start_pass+0x298>
  815854:	e0bff817 	ldw	r2,-32(fp)
  815858:	1085883a 	add	r2,r2,r2
  81585c:	1085883a 	add	r2,r2,r2
  815860:	1007883a 	mov	r3,r2
  815864:	e0bffb17 	ldw	r2,-20(fp)
  815868:	10c5883a 	add	r2,r2,r3
  81586c:	10800017 	ldw	r2,0(r2)
  815870:	1000010e 	bge	r2,zero,815878 <start_pass+0x20c>
  815874:	0005883a 	mov	r2,zero
  815878:	e0bffc15 	stw	r2,-16(fp)
  81587c:	e0bfff17 	ldw	r2,-4(fp)
  815880:	10c06917 	ldw	r3,420(r2)
  815884:	e0bffc17 	ldw	r2,-16(fp)
  815888:	18801226 	beq	r3,r2,8158d4 <start_pass+0x268>
  81588c:	e0bfff17 	ldw	r2,-4(fp)
  815890:	10800017 	ldw	r2,0(r2)
  815894:	00c01d84 	movi	r3,118
  815898:	10c00515 	stw	r3,20(r2)
  81589c:	e0bfff17 	ldw	r2,-4(fp)
  8158a0:	10800017 	ldw	r2,0(r2)
  8158a4:	e0fffa17 	ldw	r3,-24(fp)
  8158a8:	10c00615 	stw	r3,24(r2)
  8158ac:	e0bfff17 	ldw	r2,-4(fp)
  8158b0:	10800017 	ldw	r2,0(r2)
  8158b4:	e0fff817 	ldw	r3,-32(fp)
  8158b8:	10c00715 	stw	r3,28(r2)
  8158bc:	e0bfff17 	ldw	r2,-4(fp)
  8158c0:	10800017 	ldw	r2,0(r2)
  8158c4:	10800117 	ldw	r2,4(r2)
  8158c8:	017fffc4 	movi	r5,-1
  8158cc:	e13fff17 	ldw	r4,-4(fp)
  8158d0:	103ee83a 	callr	r2
  8158d4:	e0bff817 	ldw	r2,-32(fp)
  8158d8:	1085883a 	add	r2,r2,r2
  8158dc:	1085883a 	add	r2,r2,r2
  8158e0:	1007883a 	mov	r3,r2
  8158e4:	e0bffb17 	ldw	r2,-20(fp)
  8158e8:	10c5883a 	add	r2,r2,r3
  8158ec:	e0ffff17 	ldw	r3,-4(fp)
  8158f0:	18c06a17 	ldw	r3,424(r3)
  8158f4:	10c00015 	stw	r3,0(r2)
  8158f8:	e0bff817 	ldw	r2,-32(fp)
  8158fc:	10800044 	addi	r2,r2,1
  815900:	e0bff815 	stw	r2,-32(fp)
  815904:	e0bfff17 	ldw	r2,-4(fp)
  815908:	10c06817 	ldw	r3,416(r2)
  81590c:	e0bff817 	ldw	r2,-32(fp)
  815910:	18bfd00e 	bge	r3,r2,815854 <__alt_mem_epcs_flash_controller_0+0xff80c854>
  815914:	e0bff717 	ldw	r2,-36(fp)
  815918:	10800044 	addi	r2,r2,1
  81591c:	e0bff715 	stw	r2,-36(fp)
  815920:	e0bfff17 	ldw	r2,-4(fp)
  815924:	10805517 	ldw	r2,340(r2)
  815928:	e0fff717 	ldw	r3,-36(fp)
  81592c:	18bf9f16 	blt	r3,r2,8157ac <__alt_mem_epcs_flash_controller_0+0xff80c7ac>
  815930:	e0bfff17 	ldw	r2,-4(fp)
  815934:	10806917 	ldw	r2,420(r2)
  815938:	10000d1e 	bne	r2,zero,815970 <start_pass+0x304>
  81593c:	e0bfff17 	ldw	r2,-4(fp)
  815940:	10806717 	ldw	r2,412(r2)
  815944:	1000051e 	bne	r2,zero,81595c <start_pass+0x2f0>
  815948:	e0fff917 	ldw	r3,-28(fp)
  81594c:	00802074 	movhi	r2,129
  815950:	1090f104 	addi	r2,r2,17348
  815954:	18800115 	stw	r2,4(r3)
  815958:	00003206 	br	815a24 <start_pass+0x3b8>
  81595c:	e0fff917 	ldw	r3,-28(fp)
  815960:	00802074 	movhi	r2,129
  815964:	1091f904 	addi	r2,r2,18404
  815968:	18800115 	stw	r2,4(r3)
  81596c:	00002d06 	br	815a24 <start_pass+0x3b8>
  815970:	e0bfff17 	ldw	r2,-4(fp)
  815974:	10806717 	ldw	r2,412(r2)
  815978:	1000051e 	bne	r2,zero,815990 <start_pass+0x324>
  81597c:	e0fff917 	ldw	r3,-28(fp)
  815980:	00802074 	movhi	r2,129
  815984:	1092d204 	addi	r2,r2,19272
  815988:	18800115 	stw	r2,4(r3)
  81598c:	00002506 	br	815a24 <start_pass+0x3b8>
  815990:	e0fff917 	ldw	r3,-28(fp)
  815994:	00802074 	movhi	r2,129
  815998:	10931504 	addi	r2,r2,19540
  81599c:	18800115 	stw	r2,4(r3)
  8159a0:	00002006 	br	815a24 <start_pass+0x3b8>
  8159a4:	e0bfff17 	ldw	r2,-4(fp)
  8159a8:	10806717 	ldw	r2,412(r2)
  8159ac:	10000f1e 	bne	r2,zero,8159ec <start_pass+0x380>
  8159b0:	e0bfff17 	ldw	r2,-4(fp)
  8159b4:	10806917 	ldw	r2,420(r2)
  8159b8:	10000c1e 	bne	r2,zero,8159ec <start_pass+0x380>
  8159bc:	e0bfff17 	ldw	r2,-4(fp)
  8159c0:	10806a17 	ldw	r2,424(r2)
  8159c4:	1000091e 	bne	r2,zero,8159ec <start_pass+0x380>
  8159c8:	e0bfff17 	ldw	r2,-4(fp)
  8159cc:	10806817 	ldw	r2,416(r2)
  8159d0:	10801008 	cmpgei	r2,r2,64
  8159d4:	10000f1e 	bne	r2,zero,815a14 <start_pass+0x3a8>
  8159d8:	e0bfff17 	ldw	r2,-4(fp)
  8159dc:	10c06817 	ldw	r3,416(r2)
  8159e0:	e0bfff17 	ldw	r2,-4(fp)
  8159e4:	10806d17 	ldw	r2,436(r2)
  8159e8:	18800a26 	beq	r3,r2,815a14 <start_pass+0x3a8>
  8159ec:	e0bfff17 	ldw	r2,-4(fp)
  8159f0:	10800017 	ldw	r2,0(r2)
  8159f4:	00c01f44 	movi	r3,125
  8159f8:	10c00515 	stw	r3,20(r2)
  8159fc:	e0bfff17 	ldw	r2,-4(fp)
  815a00:	10800017 	ldw	r2,0(r2)
  815a04:	10800117 	ldw	r2,4(r2)
  815a08:	017fffc4 	movi	r5,-1
  815a0c:	e13fff17 	ldw	r4,-4(fp)
  815a10:	103ee83a 	callr	r2
  815a14:	e0fff917 	ldw	r3,-28(fp)
  815a18:	00802074 	movhi	r2,129
  815a1c:	1093e204 	addi	r2,r2,20360
  815a20:	18800115 	stw	r2,4(r3)
  815a24:	e03ff715 	stw	zero,-36(fp)
  815a28:	00009c06 	br	815c9c <start_pass+0x630>
  815a2c:	e0ffff17 	ldw	r3,-4(fp)
  815a30:	e0bff717 	ldw	r2,-36(fp)
  815a34:	10801584 	addi	r2,r2,86
  815a38:	1085883a 	add	r2,r2,r2
  815a3c:	1085883a 	add	r2,r2,r2
  815a40:	1885883a 	add	r2,r3,r2
  815a44:	10800017 	ldw	r2,0(r2)
  815a48:	e0bffd15 	stw	r2,-12(fp)
  815a4c:	e0bfff17 	ldw	r2,-4(fp)
  815a50:	10803817 	ldw	r2,224(r2)
  815a54:	10000626 	beq	r2,zero,815a70 <start_pass+0x404>
  815a58:	e0bfff17 	ldw	r2,-4(fp)
  815a5c:	10806717 	ldw	r2,412(r2)
  815a60:	1000481e 	bne	r2,zero,815b84 <start_pass+0x518>
  815a64:	e0bfff17 	ldw	r2,-4(fp)
  815a68:	10806917 	ldw	r2,420(r2)
  815a6c:	1000451e 	bne	r2,zero,815b84 <start_pass+0x518>
  815a70:	e0bffd17 	ldw	r2,-12(fp)
  815a74:	10800517 	ldw	r2,20(r2)
  815a78:	e0bffe15 	stw	r2,-8(fp)
  815a7c:	e0bffe17 	ldw	r2,-8(fp)
  815a80:	10000316 	blt	r2,zero,815a90 <start_pass+0x424>
  815a84:	e0bffe17 	ldw	r2,-8(fp)
  815a88:	10800410 	cmplti	r2,r2,16
  815a8c:	10000d1e 	bne	r2,zero,815ac4 <start_pass+0x458>
  815a90:	e0bfff17 	ldw	r2,-4(fp)
  815a94:	10800017 	ldw	r2,0(r2)
  815a98:	00c00c84 	movi	r3,50
  815a9c:	10c00515 	stw	r3,20(r2)
  815aa0:	e0bfff17 	ldw	r2,-4(fp)
  815aa4:	10800017 	ldw	r2,0(r2)
  815aa8:	e0fffe17 	ldw	r3,-8(fp)
  815aac:	10c00615 	stw	r3,24(r2)
  815ab0:	e0bfff17 	ldw	r2,-4(fp)
  815ab4:	10800017 	ldw	r2,0(r2)
  815ab8:	10800017 	ldw	r2,0(r2)
  815abc:	e13fff17 	ldw	r4,-4(fp)
  815ac0:	103ee83a 	callr	r2
  815ac4:	e0fff917 	ldw	r3,-28(fp)
  815ac8:	e0bffe17 	ldw	r2,-8(fp)
  815acc:	108003c4 	addi	r2,r2,15
  815ad0:	1085883a 	add	r2,r2,r2
  815ad4:	1085883a 	add	r2,r2,r2
  815ad8:	1885883a 	add	r2,r3,r2
  815adc:	10800017 	ldw	r2,0(r2)
  815ae0:	10000f1e 	bne	r2,zero,815b20 <start_pass+0x4b4>
  815ae4:	e0bfff17 	ldw	r2,-4(fp)
  815ae8:	10800117 	ldw	r2,4(r2)
  815aec:	10800017 	ldw	r2,0(r2)
  815af0:	01801004 	movi	r6,64
  815af4:	01400044 	movi	r5,1
  815af8:	e13fff17 	ldw	r4,-4(fp)
  815afc:	103ee83a 	callr	r2
  815b00:	1009883a 	mov	r4,r2
  815b04:	e0fff917 	ldw	r3,-28(fp)
  815b08:	e0bffe17 	ldw	r2,-8(fp)
  815b0c:	108003c4 	addi	r2,r2,15
  815b10:	1085883a 	add	r2,r2,r2
  815b14:	1085883a 	add	r2,r2,r2
  815b18:	1885883a 	add	r2,r3,r2
  815b1c:	11000015 	stw	r4,0(r2)
  815b20:	e0fff917 	ldw	r3,-28(fp)
  815b24:	e0bffe17 	ldw	r2,-8(fp)
  815b28:	108003c4 	addi	r2,r2,15
  815b2c:	1085883a 	add	r2,r2,r2
  815b30:	1085883a 	add	r2,r2,r2
  815b34:	1885883a 	add	r2,r3,r2
  815b38:	10800017 	ldw	r2,0(r2)
  815b3c:	01801004 	movi	r6,64
  815b40:	000b883a 	mov	r5,zero
  815b44:	1009883a 	mov	r4,r2
  815b48:	0833d940 	call	833d94 <memset>
  815b4c:	e0fff917 	ldw	r3,-28(fp)
  815b50:	e0bff717 	ldw	r2,-36(fp)
  815b54:	10800184 	addi	r2,r2,6
  815b58:	1085883a 	add	r2,r2,r2
  815b5c:	1085883a 	add	r2,r2,r2
  815b60:	1885883a 	add	r2,r3,r2
  815b64:	10000015 	stw	zero,0(r2)
  815b68:	e0fff917 	ldw	r3,-28(fp)
  815b6c:	e0bff717 	ldw	r2,-36(fp)
  815b70:	10800284 	addi	r2,r2,10
  815b74:	1085883a 	add	r2,r2,r2
  815b78:	1085883a 	add	r2,r2,r2
  815b7c:	1885883a 	add	r2,r3,r2
  815b80:	10000015 	stw	zero,0(r2)
  815b84:	e0bfff17 	ldw	r2,-4(fp)
  815b88:	10803817 	ldw	r2,224(r2)
  815b8c:	1000031e 	bne	r2,zero,815b9c <start_pass+0x530>
  815b90:	e0bfff17 	ldw	r2,-4(fp)
  815b94:	10806d17 	ldw	r2,436(r2)
  815b98:	1000061e 	bne	r2,zero,815bb4 <start_pass+0x548>
  815b9c:	e0bfff17 	ldw	r2,-4(fp)
  815ba0:	10803817 	ldw	r2,224(r2)
  815ba4:	10003a26 	beq	r2,zero,815c90 <start_pass+0x624>
  815ba8:	e0bfff17 	ldw	r2,-4(fp)
  815bac:	10806717 	ldw	r2,412(r2)
  815bb0:	10003726 	beq	r2,zero,815c90 <start_pass+0x624>
  815bb4:	e0bffd17 	ldw	r2,-12(fp)
  815bb8:	10800617 	ldw	r2,24(r2)
  815bbc:	e0bffe15 	stw	r2,-8(fp)
  815bc0:	e0bffe17 	ldw	r2,-8(fp)
  815bc4:	10000316 	blt	r2,zero,815bd4 <start_pass+0x568>
  815bc8:	e0bffe17 	ldw	r2,-8(fp)
  815bcc:	10800410 	cmplti	r2,r2,16
  815bd0:	10000d1e 	bne	r2,zero,815c08 <start_pass+0x59c>
  815bd4:	e0bfff17 	ldw	r2,-4(fp)
  815bd8:	10800017 	ldw	r2,0(r2)
  815bdc:	00c00c84 	movi	r3,50
  815be0:	10c00515 	stw	r3,20(r2)
  815be4:	e0bfff17 	ldw	r2,-4(fp)
  815be8:	10800017 	ldw	r2,0(r2)
  815bec:	e0fffe17 	ldw	r3,-8(fp)
  815bf0:	10c00615 	stw	r3,24(r2)
  815bf4:	e0bfff17 	ldw	r2,-4(fp)
  815bf8:	10800017 	ldw	r2,0(r2)
  815bfc:	10800017 	ldw	r2,0(r2)
  815c00:	e13fff17 	ldw	r4,-4(fp)
  815c04:	103ee83a 	callr	r2
  815c08:	e0fff917 	ldw	r3,-28(fp)
  815c0c:	e0bffe17 	ldw	r2,-8(fp)
  815c10:	108007c4 	addi	r2,r2,31
  815c14:	1085883a 	add	r2,r2,r2
  815c18:	1085883a 	add	r2,r2,r2
  815c1c:	1885883a 	add	r2,r3,r2
  815c20:	10800017 	ldw	r2,0(r2)
  815c24:	10000f1e 	bne	r2,zero,815c64 <start_pass+0x5f8>
  815c28:	e0bfff17 	ldw	r2,-4(fp)
  815c2c:	10800117 	ldw	r2,4(r2)
  815c30:	10800017 	ldw	r2,0(r2)
  815c34:	01804004 	movi	r6,256
  815c38:	01400044 	movi	r5,1
  815c3c:	e13fff17 	ldw	r4,-4(fp)
  815c40:	103ee83a 	callr	r2
  815c44:	1009883a 	mov	r4,r2
  815c48:	e0fff917 	ldw	r3,-28(fp)
  815c4c:	e0bffe17 	ldw	r2,-8(fp)
  815c50:	108007c4 	addi	r2,r2,31
  815c54:	1085883a 	add	r2,r2,r2
  815c58:	1085883a 	add	r2,r2,r2
  815c5c:	1885883a 	add	r2,r3,r2
  815c60:	11000015 	stw	r4,0(r2)
  815c64:	e0fff917 	ldw	r3,-28(fp)
  815c68:	e0bffe17 	ldw	r2,-8(fp)
  815c6c:	108007c4 	addi	r2,r2,31
  815c70:	1085883a 	add	r2,r2,r2
  815c74:	1085883a 	add	r2,r2,r2
  815c78:	1885883a 	add	r2,r3,r2
  815c7c:	10800017 	ldw	r2,0(r2)
  815c80:	01804004 	movi	r6,256
  815c84:	000b883a 	mov	r5,zero
  815c88:	1009883a 	mov	r4,r2
  815c8c:	0833d940 	call	833d94 <memset>
  815c90:	e0bff717 	ldw	r2,-36(fp)
  815c94:	10800044 	addi	r2,r2,1
  815c98:	e0bff715 	stw	r2,-36(fp)
  815c9c:	e0bfff17 	ldw	r2,-4(fp)
  815ca0:	10805517 	ldw	r2,340(r2)
  815ca4:	e0fff717 	ldw	r3,-36(fp)
  815ca8:	18bf6016 	blt	r3,r2,815a2c <__alt_mem_epcs_flash_controller_0+0xff80ca2c>
  815cac:	e0bff917 	ldw	r2,-28(fp)
  815cb0:	10000315 	stw	zero,12(r2)
  815cb4:	e0bff917 	ldw	r2,-28(fp)
  815cb8:	10000415 	stw	zero,16(r2)
  815cbc:	e0bff917 	ldw	r2,-28(fp)
  815cc0:	00fffc04 	movi	r3,-16
  815cc4:	10c00515 	stw	r3,20(r2)
  815cc8:	e0bfff17 	ldw	r2,-4(fp)
  815ccc:	10c04617 	ldw	r3,280(r2)
  815cd0:	e0bff917 	ldw	r2,-28(fp)
  815cd4:	10c00e15 	stw	r3,56(r2)
  815cd8:	0001883a 	nop
  815cdc:	e037883a 	mov	sp,fp
  815ce0:	dfc00117 	ldw	ra,4(sp)
  815ce4:	df000017 	ldw	fp,0(sp)
  815ce8:	dec00204 	addi	sp,sp,8
  815cec:	f800283a 	ret

00815cf0 <finish_pass>:
  815cf0:	defffe04 	addi	sp,sp,-8
  815cf4:	df000115 	stw	fp,4(sp)
  815cf8:	df000104 	addi	fp,sp,4
  815cfc:	e13fff15 	stw	r4,-4(fp)
  815d00:	0001883a 	nop
  815d04:	e037883a 	mov	sp,fp
  815d08:	df000017 	ldw	fp,0(sp)
  815d0c:	dec00104 	addi	sp,sp,4
  815d10:	f800283a 	ret

00815d14 <jinit_arith_decoder>:
  815d14:	defff904 	addi	sp,sp,-28
  815d18:	dfc00615 	stw	ra,24(sp)
  815d1c:	df000515 	stw	fp,20(sp)
  815d20:	df000504 	addi	fp,sp,20
  815d24:	e13fff15 	stw	r4,-4(fp)
  815d28:	e0bfff17 	ldw	r2,-4(fp)
  815d2c:	10800117 	ldw	r2,4(r2)
  815d30:	10800017 	ldw	r2,0(r2)
  815d34:	01803004 	movi	r6,192
  815d38:	01400044 	movi	r5,1
  815d3c:	e13fff17 	ldw	r4,-4(fp)
  815d40:	103ee83a 	callr	r2
  815d44:	e0bffe15 	stw	r2,-8(fp)
  815d48:	e0fffe17 	ldw	r3,-8(fp)
  815d4c:	e0bfff17 	ldw	r2,-4(fp)
  815d50:	10c07515 	stw	r3,468(r2)
  815d54:	e0fffe17 	ldw	r3,-8(fp)
  815d58:	00802074 	movhi	r2,129
  815d5c:	10959b04 	addi	r2,r2,22124
  815d60:	18800015 	stw	r2,0(r3)
  815d64:	e0fffe17 	ldw	r3,-8(fp)
  815d68:	00802074 	movhi	r2,129
  815d6c:	10973c04 	addi	r2,r2,23792
  815d70:	18800215 	stw	r2,8(r3)
  815d74:	e03ffb15 	stw	zero,-20(fp)
  815d78:	00001106 	br	815dc0 <jinit_arith_decoder+0xac>
  815d7c:	e0fffe17 	ldw	r3,-8(fp)
  815d80:	e0bffb17 	ldw	r2,-20(fp)
  815d84:	108003c4 	addi	r2,r2,15
  815d88:	1085883a 	add	r2,r2,r2
  815d8c:	1085883a 	add	r2,r2,r2
  815d90:	1885883a 	add	r2,r3,r2
  815d94:	10000015 	stw	zero,0(r2)
  815d98:	e0fffe17 	ldw	r3,-8(fp)
  815d9c:	e0bffb17 	ldw	r2,-20(fp)
  815da0:	108007c4 	addi	r2,r2,31
  815da4:	1085883a 	add	r2,r2,r2
  815da8:	1085883a 	add	r2,r2,r2
  815dac:	1885883a 	add	r2,r3,r2
  815db0:	10000015 	stw	zero,0(r2)
  815db4:	e0bffb17 	ldw	r2,-20(fp)
  815db8:	10800044 	addi	r2,r2,1
  815dbc:	e0bffb15 	stw	r2,-20(fp)
  815dc0:	e0bffb17 	ldw	r2,-20(fp)
  815dc4:	10800410 	cmplti	r2,r2,16
  815dc8:	103fec1e 	bne	r2,zero,815d7c <__alt_mem_epcs_flash_controller_0+0xff80cd7c>
  815dcc:	e0bffe17 	ldw	r2,-8(fp)
  815dd0:	00c01c44 	movi	r3,113
  815dd4:	10c02f05 	stb	r3,188(r2)
  815dd8:	e0bfff17 	ldw	r2,-4(fp)
  815ddc:	10803817 	ldw	r2,224(r2)
  815de0:	10002626 	beq	r2,zero,815e7c <jinit_arith_decoder+0x168>
  815de4:	e0bfff17 	ldw	r2,-4(fp)
  815de8:	10800117 	ldw	r2,4(r2)
  815dec:	10800017 	ldw	r2,0(r2)
  815df0:	e0ffff17 	ldw	r3,-4(fp)
  815df4:	18c00917 	ldw	r3,36(r3)
  815df8:	1806923a 	slli	r3,r3,8
  815dfc:	180d883a 	mov	r6,r3
  815e00:	01400044 	movi	r5,1
  815e04:	e13fff17 	ldw	r4,-4(fp)
  815e08:	103ee83a 	callr	r2
  815e0c:	1007883a 	mov	r3,r2
  815e10:	e0bfff17 	ldw	r2,-4(fp)
  815e14:	10c02815 	stw	r3,160(r2)
  815e18:	e0bfff17 	ldw	r2,-4(fp)
  815e1c:	10802817 	ldw	r2,160(r2)
  815e20:	e0bffc15 	stw	r2,-16(fp)
  815e24:	e03ffd15 	stw	zero,-12(fp)
  815e28:	00001006 	br	815e6c <jinit_arith_decoder+0x158>
  815e2c:	e03ffb15 	stw	zero,-20(fp)
  815e30:	00000806 	br	815e54 <jinit_arith_decoder+0x140>
  815e34:	e0bffc17 	ldw	r2,-16(fp)
  815e38:	10c00104 	addi	r3,r2,4
  815e3c:	e0fffc15 	stw	r3,-16(fp)
  815e40:	00ffffc4 	movi	r3,-1
  815e44:	10c00015 	stw	r3,0(r2)
  815e48:	e0bffb17 	ldw	r2,-20(fp)
  815e4c:	10800044 	addi	r2,r2,1
  815e50:	e0bffb15 	stw	r2,-20(fp)
  815e54:	e0bffb17 	ldw	r2,-20(fp)
  815e58:	10801010 	cmplti	r2,r2,64
  815e5c:	103ff51e 	bne	r2,zero,815e34 <__alt_mem_epcs_flash_controller_0+0xff80ce34>
  815e60:	e0bffd17 	ldw	r2,-12(fp)
  815e64:	10800044 	addi	r2,r2,1
  815e68:	e0bffd15 	stw	r2,-12(fp)
  815e6c:	e0bfff17 	ldw	r2,-4(fp)
  815e70:	10800917 	ldw	r2,36(r2)
  815e74:	e0fffd17 	ldw	r3,-12(fp)
  815e78:	18bfec16 	blt	r3,r2,815e2c <__alt_mem_epcs_flash_controller_0+0xff80ce2c>
  815e7c:	0001883a 	nop
  815e80:	e037883a 	mov	sp,fp
  815e84:	dfc00117 	ldw	ra,4(sp)
  815e88:	df000017 	ldw	fp,0(sp)
  815e8c:	dec00204 	addi	sp,sp,8
  815e90:	f800283a 	ret

00815e94 <start_iMCU_row>:
  815e94:	defffd04 	addi	sp,sp,-12
  815e98:	df000215 	stw	fp,8(sp)
  815e9c:	df000204 	addi	fp,sp,8
  815ea0:	e13fff15 	stw	r4,-4(fp)
  815ea4:	e0bfff17 	ldw	r2,-4(fp)
  815ea8:	10807117 	ldw	r2,452(r2)
  815eac:	e0bffe15 	stw	r2,-8(fp)
  815eb0:	e0bfff17 	ldw	r2,-4(fp)
  815eb4:	10805517 	ldw	r2,340(r2)
  815eb8:	10800090 	cmplti	r2,r2,2
  815ebc:	1000041e 	bne	r2,zero,815ed0 <start_iMCU_row+0x3c>
  815ec0:	e0bffe17 	ldw	r2,-8(fp)
  815ec4:	00c00044 	movi	r3,1
  815ec8:	10c00715 	stw	r3,28(r2)
  815ecc:	00001106 	br	815f14 <start_iMCU_row+0x80>
  815ed0:	e0bfff17 	ldw	r2,-4(fp)
  815ed4:	10c02517 	ldw	r3,148(r2)
  815ed8:	e0bfff17 	ldw	r2,-4(fp)
  815edc:	10805317 	ldw	r2,332(r2)
  815ee0:	10bfffc4 	addi	r2,r2,-1
  815ee4:	1880062e 	bgeu	r3,r2,815f00 <start_iMCU_row+0x6c>
  815ee8:	e0bfff17 	ldw	r2,-4(fp)
  815eec:	10805617 	ldw	r2,344(r2)
  815ef0:	10c00317 	ldw	r3,12(r2)
  815ef4:	e0bffe17 	ldw	r2,-8(fp)
  815ef8:	10c00715 	stw	r3,28(r2)
  815efc:	00000506 	br	815f14 <start_iMCU_row+0x80>
  815f00:	e0bfff17 	ldw	r2,-4(fp)
  815f04:	10805617 	ldw	r2,344(r2)
  815f08:	10c01317 	ldw	r3,76(r2)
  815f0c:	e0bffe17 	ldw	r2,-8(fp)
  815f10:	10c00715 	stw	r3,28(r2)
  815f14:	e0bffe17 	ldw	r2,-8(fp)
  815f18:	10000515 	stw	zero,20(r2)
  815f1c:	e0bffe17 	ldw	r2,-8(fp)
  815f20:	10000615 	stw	zero,24(r2)
  815f24:	0001883a 	nop
  815f28:	e037883a 	mov	sp,fp
  815f2c:	df000017 	ldw	fp,0(sp)
  815f30:	dec00104 	addi	sp,sp,4
  815f34:	f800283a 	ret

00815f38 <start_input_pass>:
  815f38:	defffd04 	addi	sp,sp,-12
  815f3c:	dfc00215 	stw	ra,8(sp)
  815f40:	df000115 	stw	fp,4(sp)
  815f44:	df000104 	addi	fp,sp,4
  815f48:	e13fff15 	stw	r4,-4(fp)
  815f4c:	e0bfff17 	ldw	r2,-4(fp)
  815f50:	10002515 	stw	zero,148(r2)
  815f54:	e13fff17 	ldw	r4,-4(fp)
  815f58:	0815e940 	call	815e94 <start_iMCU_row>
  815f5c:	0001883a 	nop
  815f60:	e037883a 	mov	sp,fp
  815f64:	dfc00117 	ldw	ra,4(sp)
  815f68:	df000017 	ldw	fp,0(sp)
  815f6c:	dec00204 	addi	sp,sp,8
  815f70:	f800283a 	ret

00815f74 <start_output_pass>:
  815f74:	defffc04 	addi	sp,sp,-16
  815f78:	dfc00315 	stw	ra,12(sp)
  815f7c:	df000215 	stw	fp,8(sp)
  815f80:	df000204 	addi	fp,sp,8
  815f84:	e13fff15 	stw	r4,-4(fp)
  815f88:	e0bfff17 	ldw	r2,-4(fp)
  815f8c:	10807117 	ldw	r2,452(r2)
  815f90:	e0bffe15 	stw	r2,-8(fp)
  815f94:	e0bffe17 	ldw	r2,-8(fp)
  815f98:	10800417 	ldw	r2,16(r2)
  815f9c:	10000f26 	beq	r2,zero,815fdc <start_output_pass+0x68>
  815fa0:	e0bfff17 	ldw	r2,-4(fp)
  815fa4:	10801417 	ldw	r2,80(r2)
  815fa8:	10000826 	beq	r2,zero,815fcc <start_output_pass+0x58>
  815fac:	e13fff17 	ldw	r4,-4(fp)
  815fb0:	0816a080 	call	816a08 <smoothing_ok>
  815fb4:	10000526 	beq	r2,zero,815fcc <start_output_pass+0x58>
  815fb8:	e0fffe17 	ldw	r3,-8(fp)
  815fbc:	00802074 	movhi	r2,129
  815fc0:	109b0f04 	addi	r2,r2,27708
  815fc4:	18800315 	stw	r2,12(r3)
  815fc8:	00000406 	br	815fdc <start_output_pass+0x68>
  815fcc:	e0fffe17 	ldw	r3,-8(fp)
  815fd0:	00802074 	movhi	r2,129
  815fd4:	1099bf04 	addi	r2,r2,26364
  815fd8:	18800315 	stw	r2,12(r3)
  815fdc:	e0bfff17 	ldw	r2,-4(fp)
  815fe0:	10002715 	stw	zero,156(r2)
  815fe4:	0001883a 	nop
  815fe8:	e037883a 	mov	sp,fp
  815fec:	dfc00117 	ldw	ra,4(sp)
  815ff0:	df000017 	ldw	fp,0(sp)
  815ff4:	dec00204 	addi	sp,sp,8
  815ff8:	f800283a 	ret

00815ffc <decompress_onepass>:
  815ffc:	deffeb04 	addi	sp,sp,-84
  816000:	dfc01415 	stw	ra,80(sp)
  816004:	df001315 	stw	fp,76(sp)
  816008:	dc001215 	stw	r16,72(sp)
  81600c:	df001304 	addi	fp,sp,76
  816010:	e13ffd15 	stw	r4,-12(fp)
  816014:	e17ffe15 	stw	r5,-8(fp)
  816018:	e0bffd17 	ldw	r2,-12(fp)
  81601c:	10807117 	ldw	r2,452(r2)
  816020:	e0bff615 	stw	r2,-40(fp)
  816024:	e0bffd17 	ldw	r2,-12(fp)
  816028:	10805a17 	ldw	r2,360(r2)
  81602c:	10bfffc4 	addi	r2,r2,-1
  816030:	e0bff715 	stw	r2,-36(fp)
  816034:	e0bffd17 	ldw	r2,-12(fp)
  816038:	10805317 	ldw	r2,332(r2)
  81603c:	10bfffc4 	addi	r2,r2,-1
  816040:	e0bff815 	stw	r2,-32(fp)
  816044:	e0bff617 	ldw	r2,-40(fp)
  816048:	10800617 	ldw	r2,24(r2)
  81604c:	e0bff315 	stw	r2,-52(fp)
  816050:	0000b206 	br	81631c <decompress_onepass+0x320>
  816054:	e0bff617 	ldw	r2,-40(fp)
  816058:	10800517 	ldw	r2,20(r2)
  81605c:	e0bfee15 	stw	r2,-72(fp)
  816060:	0000a606 	br	8162fc <decompress_onepass+0x300>
  816064:	e0bffd17 	ldw	r2,-12(fp)
  816068:	10806d17 	ldw	r2,436(r2)
  81606c:	10000926 	beq	r2,zero,816094 <decompress_onepass+0x98>
  816070:	e0bff617 	ldw	r2,-40(fp)
  816074:	10c00817 	ldw	r3,32(r2)
  816078:	e0bffd17 	ldw	r2,-12(fp)
  81607c:	10805c17 	ldw	r2,368(r2)
  816080:	100491fa 	slli	r2,r2,7
  816084:	100d883a 	mov	r6,r2
  816088:	000b883a 	mov	r5,zero
  81608c:	1809883a 	mov	r4,r3
  816090:	0833d940 	call	833d94 <memset>
  816094:	e0bffd17 	ldw	r2,-12(fp)
  816098:	10807517 	ldw	r2,468(r2)
  81609c:	10800117 	ldw	r2,4(r2)
  8160a0:	e0fff617 	ldw	r3,-40(fp)
  8160a4:	18c00804 	addi	r3,r3,32
  8160a8:	180b883a 	mov	r5,r3
  8160ac:	e13ffd17 	ldw	r4,-12(fp)
  8160b0:	103ee83a 	callr	r2
  8160b4:	1000081e 	bne	r2,zero,8160d8 <decompress_onepass+0xdc>
  8160b8:	e0bff617 	ldw	r2,-40(fp)
  8160bc:	e0fff317 	ldw	r3,-52(fp)
  8160c0:	10c00615 	stw	r3,24(r2)
  8160c4:	e0bff617 	ldw	r2,-40(fp)
  8160c8:	e0ffee17 	ldw	r3,-72(fp)
  8160cc:	10c00515 	stw	r3,20(r2)
  8160d0:	0005883a 	mov	r2,zero
  8160d4:	0000ae06 	br	816390 <decompress_onepass+0x394>
  8160d8:	e03fef15 	stw	zero,-68(fp)
  8160dc:	e03ff015 	stw	zero,-64(fp)
  8160e0:	00007f06 	br	8162e0 <decompress_onepass+0x2e4>
  8160e4:	e0fffd17 	ldw	r3,-12(fp)
  8160e8:	e0bff017 	ldw	r2,-64(fp)
  8160ec:	10801584 	addi	r2,r2,86
  8160f0:	1085883a 	add	r2,r2,r2
  8160f4:	1085883a 	add	r2,r2,r2
  8160f8:	1885883a 	add	r2,r3,r2
  8160fc:	10800017 	ldw	r2,0(r2)
  816100:	e0bff915 	stw	r2,-28(fp)
  816104:	e0bff917 	ldw	r2,-28(fp)
  816108:	10800d17 	ldw	r2,52(r2)
  81610c:	1000061e 	bne	r2,zero,816128 <decompress_onepass+0x12c>
  816110:	e0bff917 	ldw	r2,-28(fp)
  816114:	10801017 	ldw	r2,64(r2)
  816118:	e0ffef17 	ldw	r3,-68(fp)
  81611c:	1885883a 	add	r2,r3,r2
  816120:	e0bfef15 	stw	r2,-68(fp)
  816124:	00006b06 	br	8162d4 <decompress_onepass+0x2d8>
  816128:	e0bffd17 	ldw	r2,-12(fp)
  81612c:	10c07617 	ldw	r3,472(r2)
  816130:	e0bff917 	ldw	r2,-28(fp)
  816134:	10800117 	ldw	r2,4(r2)
  816138:	10800044 	addi	r2,r2,1
  81613c:	1085883a 	add	r2,r2,r2
  816140:	1085883a 	add	r2,r2,r2
  816144:	1885883a 	add	r2,r3,r2
  816148:	10800017 	ldw	r2,0(r2)
  81614c:	e0bffa15 	stw	r2,-24(fp)
  816150:	e0ffee17 	ldw	r3,-72(fp)
  816154:	e0bff717 	ldw	r2,-36(fp)
  816158:	1880032e 	bgeu	r3,r2,816168 <decompress_onepass+0x16c>
  81615c:	e0bff917 	ldw	r2,-28(fp)
  816160:	10800e17 	ldw	r2,56(r2)
  816164:	00000206 	br	816170 <decompress_onepass+0x174>
  816168:	e0bff917 	ldw	r2,-28(fp)
  81616c:	10801217 	ldw	r2,72(r2)
  816170:	e0bffb15 	stw	r2,-20(fp)
  816174:	e0bff917 	ldw	r2,-28(fp)
  816178:	10800117 	ldw	r2,4(r2)
  81617c:	1085883a 	add	r2,r2,r2
  816180:	1085883a 	add	r2,r2,r2
  816184:	1007883a 	mov	r3,r2
  816188:	e0bffe17 	ldw	r2,-8(fp)
  81618c:	10c5883a 	add	r2,r2,r3
  816190:	14000017 	ldw	r16,0(r2)
  816194:	e0bff917 	ldw	r2,-28(fp)
  816198:	10800a17 	ldw	r2,40(r2)
  81619c:	e17ff317 	ldw	r5,-52(fp)
  8161a0:	1009883a 	mov	r4,r2
  8161a4:	08301e80 	call	8301e8 <__mulsi3>
  8161a8:	1085883a 	add	r2,r2,r2
  8161ac:	1085883a 	add	r2,r2,r2
  8161b0:	8085883a 	add	r2,r16,r2
  8161b4:	e0bff415 	stw	r2,-48(fp)
  8161b8:	e0bff917 	ldw	r2,-28(fp)
  8161bc:	10801117 	ldw	r2,68(r2)
  8161c0:	e17fee17 	ldw	r5,-72(fp)
  8161c4:	1009883a 	mov	r4,r2
  8161c8:	08301e80 	call	8301e8 <__mulsi3>
  8161cc:	e0bffc15 	stw	r2,-16(fp)
  8161d0:	e03ff215 	stw	zero,-56(fp)
  8161d4:	00003b06 	br	8162c4 <decompress_onepass+0x2c8>
  8161d8:	e0bffd17 	ldw	r2,-12(fp)
  8161dc:	10c02517 	ldw	r3,148(r2)
  8161e0:	e0bff817 	ldw	r2,-32(fp)
  8161e4:	18800636 	bltu	r3,r2,816200 <decompress_onepass+0x204>
  8161e8:	e0fff317 	ldw	r3,-52(fp)
  8161ec:	e0bff217 	ldw	r2,-56(fp)
  8161f0:	1887883a 	add	r3,r3,r2
  8161f4:	e0bff917 	ldw	r2,-28(fp)
  8161f8:	10801317 	ldw	r2,76(r2)
  8161fc:	1880210e 	bge	r3,r2,816284 <decompress_onepass+0x288>
  816200:	e0bffc17 	ldw	r2,-16(fp)
  816204:	e0bff515 	stw	r2,-44(fp)
  816208:	e03ff115 	stw	zero,-60(fp)
  81620c:	00001a06 	br	816278 <decompress_onepass+0x27c>
  816210:	e0ffef17 	ldw	r3,-68(fp)
  816214:	e0bff117 	ldw	r2,-60(fp)
  816218:	1885883a 	add	r2,r3,r2
  81621c:	e0fff617 	ldw	r3,-40(fp)
  816220:	10800204 	addi	r2,r2,8
  816224:	1085883a 	add	r2,r2,r2
  816228:	1085883a 	add	r2,r2,r2
  81622c:	1885883a 	add	r2,r3,r2
  816230:	10c00017 	ldw	r3,0(r2)
  816234:	e0bff517 	ldw	r2,-44(fp)
  816238:	d8800015 	stw	r2,0(sp)
  81623c:	e0bffa17 	ldw	r2,-24(fp)
  816240:	e1fff417 	ldw	r7,-48(fp)
  816244:	180d883a 	mov	r6,r3
  816248:	e17ff917 	ldw	r5,-28(fp)
  81624c:	e13ffd17 	ldw	r4,-12(fp)
  816250:	103ee83a 	callr	r2
  816254:	e0bff917 	ldw	r2,-28(fp)
  816258:	10800917 	ldw	r2,36(r2)
  81625c:	1007883a 	mov	r3,r2
  816260:	e0bff517 	ldw	r2,-44(fp)
  816264:	10c5883a 	add	r2,r2,r3
  816268:	e0bff515 	stw	r2,-44(fp)
  81626c:	e0bff117 	ldw	r2,-60(fp)
  816270:	10800044 	addi	r2,r2,1
  816274:	e0bff115 	stw	r2,-60(fp)
  816278:	e0fff117 	ldw	r3,-60(fp)
  81627c:	e0bffb17 	ldw	r2,-20(fp)
  816280:	18bfe316 	blt	r3,r2,816210 <__alt_mem_epcs_flash_controller_0+0xff80d210>
  816284:	e0bff917 	ldw	r2,-28(fp)
  816288:	10800e17 	ldw	r2,56(r2)
  81628c:	e0ffef17 	ldw	r3,-68(fp)
  816290:	1885883a 	add	r2,r3,r2
  816294:	e0bfef15 	stw	r2,-68(fp)
  816298:	e0bff917 	ldw	r2,-28(fp)
  81629c:	10800a17 	ldw	r2,40(r2)
  8162a0:	1085883a 	add	r2,r2,r2
  8162a4:	1085883a 	add	r2,r2,r2
  8162a8:	1007883a 	mov	r3,r2
  8162ac:	e0bff417 	ldw	r2,-48(fp)
  8162b0:	10c5883a 	add	r2,r2,r3
  8162b4:	e0bff415 	stw	r2,-48(fp)
  8162b8:	e0bff217 	ldw	r2,-56(fp)
  8162bc:	10800044 	addi	r2,r2,1
  8162c0:	e0bff215 	stw	r2,-56(fp)
  8162c4:	e0bff917 	ldw	r2,-28(fp)
  8162c8:	10800f17 	ldw	r2,60(r2)
  8162cc:	e0fff217 	ldw	r3,-56(fp)
  8162d0:	18bfc116 	blt	r3,r2,8161d8 <__alt_mem_epcs_flash_controller_0+0xff80d1d8>
  8162d4:	e0bff017 	ldw	r2,-64(fp)
  8162d8:	10800044 	addi	r2,r2,1
  8162dc:	e0bff015 	stw	r2,-64(fp)
  8162e0:	e0bffd17 	ldw	r2,-12(fp)
  8162e4:	10805517 	ldw	r2,340(r2)
  8162e8:	e0fff017 	ldw	r3,-64(fp)
  8162ec:	18bf7d16 	blt	r3,r2,8160e4 <__alt_mem_epcs_flash_controller_0+0xff80d0e4>
  8162f0:	e0bfee17 	ldw	r2,-72(fp)
  8162f4:	10800044 	addi	r2,r2,1
  8162f8:	e0bfee15 	stw	r2,-72(fp)
  8162fc:	e0bfee17 	ldw	r2,-72(fp)
  816300:	e0fff717 	ldw	r3,-36(fp)
  816304:	18bf572e 	bgeu	r3,r2,816064 <__alt_mem_epcs_flash_controller_0+0xff80d064>
  816308:	e0bff617 	ldw	r2,-40(fp)
  81630c:	10000515 	stw	zero,20(r2)
  816310:	e0bff317 	ldw	r2,-52(fp)
  816314:	10800044 	addi	r2,r2,1
  816318:	e0bff315 	stw	r2,-52(fp)
  81631c:	e0bff617 	ldw	r2,-40(fp)
  816320:	10800717 	ldw	r2,28(r2)
  816324:	e0fff317 	ldw	r3,-52(fp)
  816328:	18bf4a16 	blt	r3,r2,816054 <__alt_mem_epcs_flash_controller_0+0xff80d054>
  81632c:	e0bffd17 	ldw	r2,-12(fp)
  816330:	10802717 	ldw	r2,156(r2)
  816334:	10c00044 	addi	r3,r2,1
  816338:	e0bffd17 	ldw	r2,-12(fp)
  81633c:	10c02715 	stw	r3,156(r2)
  816340:	e0bffd17 	ldw	r2,-12(fp)
  816344:	10802517 	ldw	r2,148(r2)
  816348:	10c00044 	addi	r3,r2,1
  81634c:	e0bffd17 	ldw	r2,-12(fp)
  816350:	10c02515 	stw	r3,148(r2)
  816354:	e0bffd17 	ldw	r2,-12(fp)
  816358:	10c02517 	ldw	r3,148(r2)
  81635c:	e0bffd17 	ldw	r2,-12(fp)
  816360:	10805317 	ldw	r2,332(r2)
  816364:	1880042e 	bgeu	r3,r2,816378 <decompress_onepass+0x37c>
  816368:	e13ffd17 	ldw	r4,-12(fp)
  81636c:	0815e940 	call	815e94 <start_iMCU_row>
  816370:	008000c4 	movi	r2,3
  816374:	00000606 	br	816390 <decompress_onepass+0x394>
  816378:	e0bffd17 	ldw	r2,-12(fp)
  81637c:	10807317 	ldw	r2,460(r2)
  816380:	10800317 	ldw	r2,12(r2)
  816384:	e13ffd17 	ldw	r4,-12(fp)
  816388:	103ee83a 	callr	r2
  81638c:	00800104 	movi	r2,4
  816390:	e6ffff04 	addi	sp,fp,-4
  816394:	dfc00217 	ldw	ra,8(sp)
  816398:	df000117 	ldw	fp,4(sp)
  81639c:	dc000017 	ldw	r16,0(sp)
  8163a0:	dec00304 	addi	sp,sp,12
  8163a4:	f800283a 	ret

008163a8 <dummy_consume_data>:
  8163a8:	defffe04 	addi	sp,sp,-8
  8163ac:	df000115 	stw	fp,4(sp)
  8163b0:	df000104 	addi	fp,sp,4
  8163b4:	e13fff15 	stw	r4,-4(fp)
  8163b8:	0005883a 	mov	r2,zero
  8163bc:	e037883a 	mov	sp,fp
  8163c0:	df000017 	ldw	fp,0(sp)
  8163c4:	dec00104 	addi	sp,sp,4
  8163c8:	f800283a 	ret

008163cc <consume_data>:
  8163cc:	deffec04 	addi	sp,sp,-80
  8163d0:	dfc01315 	stw	ra,76(sp)
  8163d4:	df001215 	stw	fp,72(sp)
  8163d8:	dc401115 	stw	r17,68(sp)
  8163dc:	dc001015 	stw	r16,64(sp)
  8163e0:	df001204 	addi	fp,sp,72
  8163e4:	e13ffd15 	stw	r4,-12(fp)
  8163e8:	e0bffd17 	ldw	r2,-12(fp)
  8163ec:	10807117 	ldw	r2,452(r2)
  8163f0:	e0bff615 	stw	r2,-40(fp)
  8163f4:	e03ff115 	stw	zero,-60(fp)
  8163f8:	00003006 	br	8164bc <consume_data+0xf0>
  8163fc:	e0fffd17 	ldw	r3,-12(fp)
  816400:	e0bff117 	ldw	r2,-60(fp)
  816404:	10801584 	addi	r2,r2,86
  816408:	1085883a 	add	r2,r2,r2
  81640c:	1085883a 	add	r2,r2,r2
  816410:	1885883a 	add	r2,r3,r2
  816414:	10800017 	ldw	r2,0(r2)
  816418:	e0bff715 	stw	r2,-36(fp)
  81641c:	e0bffd17 	ldw	r2,-12(fp)
  816420:	10800117 	ldw	r2,4(r2)
  816424:	14000817 	ldw	r16,32(r2)
  816428:	e0bff717 	ldw	r2,-36(fp)
  81642c:	10800117 	ldw	r2,4(r2)
  816430:	e0fff617 	ldw	r3,-40(fp)
  816434:	10800484 	addi	r2,r2,18
  816438:	1085883a 	add	r2,r2,r2
  81643c:	1085883a 	add	r2,r2,r2
  816440:	1885883a 	add	r2,r3,r2
  816444:	14400017 	ldw	r17,0(r2)
  816448:	e0bffd17 	ldw	r2,-12(fp)
  81644c:	10c02517 	ldw	r3,148(r2)
  816450:	e0bff717 	ldw	r2,-36(fp)
  816454:	10800317 	ldw	r2,12(r2)
  816458:	100b883a 	mov	r5,r2
  81645c:	1809883a 	mov	r4,r3
  816460:	08301e80 	call	8301e8 <__mulsi3>
  816464:	1007883a 	mov	r3,r2
  816468:	e0bff717 	ldw	r2,-36(fp)
  81646c:	10800317 	ldw	r2,12(r2)
  816470:	1009883a 	mov	r4,r2
  816474:	00800044 	movi	r2,1
  816478:	d8800015 	stw	r2,0(sp)
  81647c:	200f883a 	mov	r7,r4
  816480:	180d883a 	mov	r6,r3
  816484:	880b883a 	mov	r5,r17
  816488:	e13ffd17 	ldw	r4,-12(fp)
  81648c:	803ee83a 	callr	r16
  816490:	1007883a 	mov	r3,r2
  816494:	e0bff117 	ldw	r2,-60(fp)
  816498:	1085883a 	add	r2,r2,r2
  81649c:	1085883a 	add	r2,r2,r2
  8164a0:	e13fef04 	addi	r4,fp,-68
  8164a4:	2085883a 	add	r2,r4,r2
  8164a8:	10800a04 	addi	r2,r2,40
  8164ac:	10c00015 	stw	r3,0(r2)
  8164b0:	e0bff117 	ldw	r2,-60(fp)
  8164b4:	10800044 	addi	r2,r2,1
  8164b8:	e0bff115 	stw	r2,-60(fp)
  8164bc:	e0bffd17 	ldw	r2,-12(fp)
  8164c0:	10805517 	ldw	r2,340(r2)
  8164c4:	e0fff117 	ldw	r3,-60(fp)
  8164c8:	18bfcc16 	blt	r3,r2,8163fc <__alt_mem_epcs_flash_controller_0+0xff80d3fc>
  8164cc:	e0bff617 	ldw	r2,-40(fp)
  8164d0:	10800617 	ldw	r2,24(r2)
  8164d4:	e0bff415 	stw	r2,-48(fp)
  8164d8:	00006906 	br	816680 <consume_data+0x2b4>
  8164dc:	e0bff617 	ldw	r2,-40(fp)
  8164e0:	10800517 	ldw	r2,20(r2)
  8164e4:	e0bfef15 	stw	r2,-68(fp)
  8164e8:	00005c06 	br	81665c <consume_data+0x290>
  8164ec:	e03ff015 	stw	zero,-64(fp)
  8164f0:	e03ff115 	stw	zero,-60(fp)
  8164f4:	00004106 	br	8165fc <consume_data+0x230>
  8164f8:	e0fffd17 	ldw	r3,-12(fp)
  8164fc:	e0bff117 	ldw	r2,-60(fp)
  816500:	10801584 	addi	r2,r2,86
  816504:	1085883a 	add	r2,r2,r2
  816508:	1085883a 	add	r2,r2,r2
  81650c:	1885883a 	add	r2,r3,r2
  816510:	10800017 	ldw	r2,0(r2)
  816514:	e0bff715 	stw	r2,-36(fp)
  816518:	e0bff717 	ldw	r2,-36(fp)
  81651c:	10800e17 	ldw	r2,56(r2)
  816520:	e17fef17 	ldw	r5,-68(fp)
  816524:	1009883a 	mov	r4,r2
  816528:	08301e80 	call	8301e8 <__mulsi3>
  81652c:	e0bff815 	stw	r2,-32(fp)
  816530:	e03ff315 	stw	zero,-52(fp)
  816534:	00002a06 	br	8165e0 <consume_data+0x214>
  816538:	e0bff117 	ldw	r2,-60(fp)
  81653c:	1085883a 	add	r2,r2,r2
  816540:	1085883a 	add	r2,r2,r2
  816544:	e0ffef04 	addi	r3,fp,-68
  816548:	1885883a 	add	r2,r3,r2
  81654c:	10800a04 	addi	r2,r2,40
  816550:	10c00017 	ldw	r3,0(r2)
  816554:	e13ff317 	ldw	r4,-52(fp)
  816558:	e0bff417 	ldw	r2,-48(fp)
  81655c:	2085883a 	add	r2,r4,r2
  816560:	1085883a 	add	r2,r2,r2
  816564:	1085883a 	add	r2,r2,r2
  816568:	1885883a 	add	r2,r3,r2
  81656c:	10c00017 	ldw	r3,0(r2)
  816570:	e0bff817 	ldw	r2,-32(fp)
  816574:	100491fa 	slli	r2,r2,7
  816578:	1885883a 	add	r2,r3,r2
  81657c:	e0bff515 	stw	r2,-44(fp)
  816580:	e03ff215 	stw	zero,-56(fp)
  816584:	00000f06 	br	8165c4 <consume_data+0x1f8>
  816588:	e0fff017 	ldw	r3,-64(fp)
  81658c:	18800044 	addi	r2,r3,1
  816590:	e0bff015 	stw	r2,-64(fp)
  816594:	e0bff517 	ldw	r2,-44(fp)
  816598:	11002004 	addi	r4,r2,128
  81659c:	e13ff515 	stw	r4,-44(fp)
  8165a0:	e13ff617 	ldw	r4,-40(fp)
  8165a4:	18c00204 	addi	r3,r3,8
  8165a8:	18c7883a 	add	r3,r3,r3
  8165ac:	18c7883a 	add	r3,r3,r3
  8165b0:	20c7883a 	add	r3,r4,r3
  8165b4:	18800015 	stw	r2,0(r3)
  8165b8:	e0bff217 	ldw	r2,-56(fp)
  8165bc:	10800044 	addi	r2,r2,1
  8165c0:	e0bff215 	stw	r2,-56(fp)
  8165c4:	e0bff717 	ldw	r2,-36(fp)
  8165c8:	10800e17 	ldw	r2,56(r2)
  8165cc:	e0fff217 	ldw	r3,-56(fp)
  8165d0:	18bfed16 	blt	r3,r2,816588 <__alt_mem_epcs_flash_controller_0+0xff80d588>
  8165d4:	e0bff317 	ldw	r2,-52(fp)
  8165d8:	10800044 	addi	r2,r2,1
  8165dc:	e0bff315 	stw	r2,-52(fp)
  8165e0:	e0bff717 	ldw	r2,-36(fp)
  8165e4:	10800f17 	ldw	r2,60(r2)
  8165e8:	e0fff317 	ldw	r3,-52(fp)
  8165ec:	18bfd216 	blt	r3,r2,816538 <__alt_mem_epcs_flash_controller_0+0xff80d538>
  8165f0:	e0bff117 	ldw	r2,-60(fp)
  8165f4:	10800044 	addi	r2,r2,1
  8165f8:	e0bff115 	stw	r2,-60(fp)
  8165fc:	e0bffd17 	ldw	r2,-12(fp)
  816600:	10805517 	ldw	r2,340(r2)
  816604:	e0fff117 	ldw	r3,-60(fp)
  816608:	18bfbb16 	blt	r3,r2,8164f8 <__alt_mem_epcs_flash_controller_0+0xff80d4f8>
  81660c:	e0bffd17 	ldw	r2,-12(fp)
  816610:	10807517 	ldw	r2,468(r2)
  816614:	10800117 	ldw	r2,4(r2)
  816618:	e0fff617 	ldw	r3,-40(fp)
  81661c:	18c00804 	addi	r3,r3,32
  816620:	180b883a 	mov	r5,r3
  816624:	e13ffd17 	ldw	r4,-12(fp)
  816628:	103ee83a 	callr	r2
  81662c:	1000081e 	bne	r2,zero,816650 <consume_data+0x284>
  816630:	e0bff617 	ldw	r2,-40(fp)
  816634:	e0fff417 	ldw	r3,-48(fp)
  816638:	10c00615 	stw	r3,24(r2)
  81663c:	e0bff617 	ldw	r2,-40(fp)
  816640:	e0ffef17 	ldw	r3,-68(fp)
  816644:	10c00515 	stw	r3,20(r2)
  816648:	0005883a 	mov	r2,zero
  81664c:	00002406 	br	8166e0 <consume_data+0x314>
  816650:	e0bfef17 	ldw	r2,-68(fp)
  816654:	10800044 	addi	r2,r2,1
  816658:	e0bfef15 	stw	r2,-68(fp)
  81665c:	e0bffd17 	ldw	r2,-12(fp)
  816660:	10805a17 	ldw	r2,360(r2)
  816664:	e0ffef17 	ldw	r3,-68(fp)
  816668:	18bfa036 	bltu	r3,r2,8164ec <__alt_mem_epcs_flash_controller_0+0xff80d4ec>
  81666c:	e0bff617 	ldw	r2,-40(fp)
  816670:	10000515 	stw	zero,20(r2)
  816674:	e0bff417 	ldw	r2,-48(fp)
  816678:	10800044 	addi	r2,r2,1
  81667c:	e0bff415 	stw	r2,-48(fp)
  816680:	e0bff617 	ldw	r2,-40(fp)
  816684:	10800717 	ldw	r2,28(r2)
  816688:	e0fff417 	ldw	r3,-48(fp)
  81668c:	18bf9316 	blt	r3,r2,8164dc <__alt_mem_epcs_flash_controller_0+0xff80d4dc>
  816690:	e0bffd17 	ldw	r2,-12(fp)
  816694:	10802517 	ldw	r2,148(r2)
  816698:	10c00044 	addi	r3,r2,1
  81669c:	e0bffd17 	ldw	r2,-12(fp)
  8166a0:	10c02515 	stw	r3,148(r2)
  8166a4:	e0bffd17 	ldw	r2,-12(fp)
  8166a8:	10c02517 	ldw	r3,148(r2)
  8166ac:	e0bffd17 	ldw	r2,-12(fp)
  8166b0:	10805317 	ldw	r2,332(r2)
  8166b4:	1880042e 	bgeu	r3,r2,8166c8 <consume_data+0x2fc>
  8166b8:	e13ffd17 	ldw	r4,-12(fp)
  8166bc:	0815e940 	call	815e94 <start_iMCU_row>
  8166c0:	008000c4 	movi	r2,3
  8166c4:	00000606 	br	8166e0 <consume_data+0x314>
  8166c8:	e0bffd17 	ldw	r2,-12(fp)
  8166cc:	10807317 	ldw	r2,460(r2)
  8166d0:	10800317 	ldw	r2,12(r2)
  8166d4:	e13ffd17 	ldw	r4,-12(fp)
  8166d8:	103ee83a 	callr	r2
  8166dc:	00800104 	movi	r2,4
  8166e0:	e6fffe04 	addi	sp,fp,-8
  8166e4:	dfc00317 	ldw	ra,12(sp)
  8166e8:	df000217 	ldw	fp,8(sp)
  8166ec:	dc400117 	ldw	r17,4(sp)
  8166f0:	dc000017 	ldw	r16,0(sp)
  8166f4:	dec00404 	addi	sp,sp,16
  8166f8:	f800283a 	ret

008166fc <decompress_data>:
  8166fc:	deffed04 	addi	sp,sp,-76
  816700:	dfc01215 	stw	ra,72(sp)
  816704:	df001115 	stw	fp,68(sp)
  816708:	dc401015 	stw	r17,64(sp)
  81670c:	dc000f15 	stw	r16,60(sp)
  816710:	df001104 	addi	fp,sp,68
  816714:	e13ffc15 	stw	r4,-16(fp)
  816718:	e17ffd15 	stw	r5,-12(fp)
  81671c:	e0bffc17 	ldw	r2,-16(fp)
  816720:	10807117 	ldw	r2,452(r2)
  816724:	e0bff815 	stw	r2,-32(fp)
  816728:	e0bffc17 	ldw	r2,-16(fp)
  81672c:	10805317 	ldw	r2,332(r2)
  816730:	10bfffc4 	addi	r2,r2,-1
  816734:	e0bff915 	stw	r2,-28(fp)
  816738:	00000806 	br	81675c <decompress_data+0x60>
  81673c:	e0bffc17 	ldw	r2,-16(fp)
  816740:	10807317 	ldw	r2,460(r2)
  816744:	10800017 	ldw	r2,0(r2)
  816748:	e13ffc17 	ldw	r4,-16(fp)
  81674c:	103ee83a 	callr	r2
  816750:	1000021e 	bne	r2,zero,81675c <decompress_data+0x60>
  816754:	0005883a 	mov	r2,zero
  816758:	0000a406 	br	8169ec <decompress_data+0x2f0>
  81675c:	e0bffc17 	ldw	r2,-16(fp)
  816760:	10c02417 	ldw	r3,144(r2)
  816764:	e0bffc17 	ldw	r2,-16(fp)
  816768:	10802617 	ldw	r2,152(r2)
  81676c:	18bff316 	blt	r3,r2,81673c <__alt_mem_epcs_flash_controller_0+0xff80d73c>
  816770:	e0bffc17 	ldw	r2,-16(fp)
  816774:	10c02417 	ldw	r3,144(r2)
  816778:	e0bffc17 	ldw	r2,-16(fp)
  81677c:	10802617 	ldw	r2,152(r2)
  816780:	1880051e 	bne	r3,r2,816798 <decompress_data+0x9c>
  816784:	e0bffc17 	ldw	r2,-16(fp)
  816788:	10802517 	ldw	r2,148(r2)
  81678c:	e0fffc17 	ldw	r3,-16(fp)
  816790:	18c02717 	ldw	r3,156(r3)
  816794:	18bfe92e 	bgeu	r3,r2,81673c <__alt_mem_epcs_flash_controller_0+0xff80d73c>
  816798:	e03ff115 	stw	zero,-60(fp)
  81679c:	e0bffc17 	ldw	r2,-16(fp)
  8167a0:	10803617 	ldw	r2,216(r2)
  8167a4:	e0bff715 	stw	r2,-36(fp)
  8167a8:	00007f06 	br	8169a8 <decompress_data+0x2ac>
  8167ac:	e0bff717 	ldw	r2,-36(fp)
  8167b0:	10800d17 	ldw	r2,52(r2)
  8167b4:	10007526 	beq	r2,zero,81698c <decompress_data+0x290>
  8167b8:	e0bffc17 	ldw	r2,-16(fp)
  8167bc:	10800117 	ldw	r2,4(r2)
  8167c0:	14000817 	ldw	r16,32(r2)
  8167c4:	e0fff817 	ldw	r3,-32(fp)
  8167c8:	e0bff117 	ldw	r2,-60(fp)
  8167cc:	10800484 	addi	r2,r2,18
  8167d0:	1085883a 	add	r2,r2,r2
  8167d4:	1085883a 	add	r2,r2,r2
  8167d8:	1885883a 	add	r2,r3,r2
  8167dc:	14400017 	ldw	r17,0(r2)
  8167e0:	e0bffc17 	ldw	r2,-16(fp)
  8167e4:	10c02717 	ldw	r3,156(r2)
  8167e8:	e0bff717 	ldw	r2,-36(fp)
  8167ec:	10800317 	ldw	r2,12(r2)
  8167f0:	100b883a 	mov	r5,r2
  8167f4:	1809883a 	mov	r4,r3
  8167f8:	08301e80 	call	8301e8 <__mulsi3>
  8167fc:	1007883a 	mov	r3,r2
  816800:	e0bff717 	ldw	r2,-36(fp)
  816804:	10800317 	ldw	r2,12(r2)
  816808:	d8000015 	stw	zero,0(sp)
  81680c:	100f883a 	mov	r7,r2
  816810:	180d883a 	mov	r6,r3
  816814:	880b883a 	mov	r5,r17
  816818:	e13ffc17 	ldw	r4,-16(fp)
  81681c:	803ee83a 	callr	r16
  816820:	e0bffa15 	stw	r2,-24(fp)
  816824:	e0bffc17 	ldw	r2,-16(fp)
  816828:	10c02717 	ldw	r3,156(r2)
  81682c:	e0bff917 	ldw	r2,-28(fp)
  816830:	1880042e 	bgeu	r3,r2,816844 <decompress_data+0x148>
  816834:	e0bff717 	ldw	r2,-36(fp)
  816838:	10800317 	ldw	r2,12(r2)
  81683c:	e0bff315 	stw	r2,-52(fp)
  816840:	00000d06 	br	816878 <decompress_data+0x17c>
  816844:	e0bff717 	ldw	r2,-36(fp)
  816848:	10c00817 	ldw	r3,32(r2)
  81684c:	e0bff717 	ldw	r2,-36(fp)
  816850:	10800317 	ldw	r2,12(r2)
  816854:	100b883a 	mov	r5,r2
  816858:	1809883a 	mov	r4,r3
  81685c:	08301900 	call	830190 <__umodsi3>
  816860:	e0bff315 	stw	r2,-52(fp)
  816864:	e0bff317 	ldw	r2,-52(fp)
  816868:	1000031e 	bne	r2,zero,816878 <decompress_data+0x17c>
  81686c:	e0bff717 	ldw	r2,-36(fp)
  816870:	10800317 	ldw	r2,12(r2)
  816874:	e0bff315 	stw	r2,-52(fp)
  816878:	e0bffc17 	ldw	r2,-16(fp)
  81687c:	10c07617 	ldw	r3,472(r2)
  816880:	e0bff117 	ldw	r2,-60(fp)
  816884:	10800044 	addi	r2,r2,1
  816888:	1085883a 	add	r2,r2,r2
  81688c:	1085883a 	add	r2,r2,r2
  816890:	1885883a 	add	r2,r3,r2
  816894:	10800017 	ldw	r2,0(r2)
  816898:	e0bffb15 	stw	r2,-20(fp)
  81689c:	e0bff117 	ldw	r2,-60(fp)
  8168a0:	1085883a 	add	r2,r2,r2
  8168a4:	1085883a 	add	r2,r2,r2
  8168a8:	1007883a 	mov	r3,r2
  8168ac:	e0bffd17 	ldw	r2,-12(fp)
  8168b0:	10c5883a 	add	r2,r2,r3
  8168b4:	10800017 	ldw	r2,0(r2)
  8168b8:	e0bff515 	stw	r2,-44(fp)
  8168bc:	e03ff215 	stw	zero,-56(fp)
  8168c0:	00002e06 	br	81697c <decompress_data+0x280>
  8168c4:	e0bff217 	ldw	r2,-56(fp)
  8168c8:	1085883a 	add	r2,r2,r2
  8168cc:	1085883a 	add	r2,r2,r2
  8168d0:	1007883a 	mov	r3,r2
  8168d4:	e0bffa17 	ldw	r2,-24(fp)
  8168d8:	10c5883a 	add	r2,r2,r3
  8168dc:	10800017 	ldw	r2,0(r2)
  8168e0:	e0bff415 	stw	r2,-48(fp)
  8168e4:	e03ff615 	stw	zero,-40(fp)
  8168e8:	e03ff015 	stw	zero,-64(fp)
  8168ec:	00001406 	br	816940 <decompress_data+0x244>
  8168f0:	e0bff617 	ldw	r2,-40(fp)
  8168f4:	d8800015 	stw	r2,0(sp)
  8168f8:	e0bffb17 	ldw	r2,-20(fp)
  8168fc:	e1fff517 	ldw	r7,-44(fp)
  816900:	e1bff417 	ldw	r6,-48(fp)
  816904:	e17ff717 	ldw	r5,-36(fp)
  816908:	e13ffc17 	ldw	r4,-16(fp)
  81690c:	103ee83a 	callr	r2
  816910:	e0bff417 	ldw	r2,-48(fp)
  816914:	10802004 	addi	r2,r2,128
  816918:	e0bff415 	stw	r2,-48(fp)
  81691c:	e0bff717 	ldw	r2,-36(fp)
  816920:	10800917 	ldw	r2,36(r2)
  816924:	1007883a 	mov	r3,r2
  816928:	e0bff617 	ldw	r2,-40(fp)
  81692c:	10c5883a 	add	r2,r2,r3
  816930:	e0bff615 	stw	r2,-40(fp)
  816934:	e0bff017 	ldw	r2,-64(fp)
  816938:	10800044 	addi	r2,r2,1
  81693c:	e0bff015 	stw	r2,-64(fp)
  816940:	e0bff717 	ldw	r2,-36(fp)
  816944:	10800717 	ldw	r2,28(r2)
  816948:	e0fff017 	ldw	r3,-64(fp)
  81694c:	18bfe836 	bltu	r3,r2,8168f0 <__alt_mem_epcs_flash_controller_0+0xff80d8f0>
  816950:	e0bff717 	ldw	r2,-36(fp)
  816954:	10800a17 	ldw	r2,40(r2)
  816958:	1085883a 	add	r2,r2,r2
  81695c:	1085883a 	add	r2,r2,r2
  816960:	1007883a 	mov	r3,r2
  816964:	e0bff517 	ldw	r2,-44(fp)
  816968:	10c5883a 	add	r2,r2,r3
  81696c:	e0bff515 	stw	r2,-44(fp)
  816970:	e0bff217 	ldw	r2,-56(fp)
  816974:	10800044 	addi	r2,r2,1
  816978:	e0bff215 	stw	r2,-56(fp)
  81697c:	e0fff217 	ldw	r3,-56(fp)
  816980:	e0bff317 	ldw	r2,-52(fp)
  816984:	18bfcf16 	blt	r3,r2,8168c4 <__alt_mem_epcs_flash_controller_0+0xff80d8c4>
  816988:	00000106 	br	816990 <decompress_data+0x294>
  81698c:	0001883a 	nop
  816990:	e0bff117 	ldw	r2,-60(fp)
  816994:	10800044 	addi	r2,r2,1
  816998:	e0bff115 	stw	r2,-60(fp)
  81699c:	e0bff717 	ldw	r2,-36(fp)
  8169a0:	10801604 	addi	r2,r2,88
  8169a4:	e0bff715 	stw	r2,-36(fp)
  8169a8:	e0bffc17 	ldw	r2,-16(fp)
  8169ac:	10800917 	ldw	r2,36(r2)
  8169b0:	e0fff117 	ldw	r3,-60(fp)
  8169b4:	18bf7d16 	blt	r3,r2,8167ac <__alt_mem_epcs_flash_controller_0+0xff80d7ac>
  8169b8:	e0bffc17 	ldw	r2,-16(fp)
  8169bc:	10802717 	ldw	r2,156(r2)
  8169c0:	10c00044 	addi	r3,r2,1
  8169c4:	e0bffc17 	ldw	r2,-16(fp)
  8169c8:	10c02715 	stw	r3,156(r2)
  8169cc:	e0bffc17 	ldw	r2,-16(fp)
  8169d0:	10c02717 	ldw	r3,156(r2)
  8169d4:	e0bffc17 	ldw	r2,-16(fp)
  8169d8:	10805317 	ldw	r2,332(r2)
  8169dc:	1880022e 	bgeu	r3,r2,8169e8 <decompress_data+0x2ec>
  8169e0:	008000c4 	movi	r2,3
  8169e4:	00000106 	br	8169ec <decompress_data+0x2f0>
  8169e8:	00800104 	movi	r2,4
  8169ec:	e6fffe04 	addi	sp,fp,-8
  8169f0:	dfc00317 	ldw	ra,12(sp)
  8169f4:	df000217 	ldw	fp,8(sp)
  8169f8:	dc400117 	ldw	r17,4(sp)
  8169fc:	dc000017 	ldw	r16,0(sp)
  816a00:	dec00404 	addi	sp,sp,16
  816a04:	f800283a 	ret

00816a08 <smoothing_ok>:
  816a08:	defff404 	addi	sp,sp,-48
  816a0c:	dfc00b15 	stw	ra,44(sp)
  816a10:	df000a15 	stw	fp,40(sp)
  816a14:	dc000915 	stw	r16,36(sp)
  816a18:	df000a04 	addi	fp,sp,40
  816a1c:	e13ffe15 	stw	r4,-8(fp)
  816a20:	e0bffe17 	ldw	r2,-8(fp)
  816a24:	10807117 	ldw	r2,452(r2)
  816a28:	e0bffb15 	stw	r2,-20(fp)
  816a2c:	e03ff615 	stw	zero,-40(fp)
  816a30:	e0bffe17 	ldw	r2,-8(fp)
  816a34:	10803817 	ldw	r2,224(r2)
  816a38:	10000326 	beq	r2,zero,816a48 <smoothing_ok+0x40>
  816a3c:	e0bffe17 	ldw	r2,-8(fp)
  816a40:	10802817 	ldw	r2,160(r2)
  816a44:	1000021e 	bne	r2,zero,816a50 <smoothing_ok+0x48>
  816a48:	0005883a 	mov	r2,zero
  816a4c:	00007506 	br	816c24 <smoothing_ok+0x21c>
  816a50:	e0bffb17 	ldw	r2,-20(fp)
  816a54:	10801c17 	ldw	r2,112(r2)
  816a58:	10000f1e 	bne	r2,zero,816a98 <smoothing_ok+0x90>
  816a5c:	e0bffe17 	ldw	r2,-8(fp)
  816a60:	10800117 	ldw	r2,4(r2)
  816a64:	14000017 	ldw	r16,0(r2)
  816a68:	e0bffe17 	ldw	r2,-8(fp)
  816a6c:	10800917 	ldw	r2,36(r2)
  816a70:	01400604 	movi	r5,24
  816a74:	1009883a 	mov	r4,r2
  816a78:	08301e80 	call	8301e8 <__mulsi3>
  816a7c:	100d883a 	mov	r6,r2
  816a80:	01400044 	movi	r5,1
  816a84:	e13ffe17 	ldw	r4,-8(fp)
  816a88:	803ee83a 	callr	r16
  816a8c:	1007883a 	mov	r3,r2
  816a90:	e0bffb17 	ldw	r2,-20(fp)
  816a94:	10c01c15 	stw	r3,112(r2)
  816a98:	e0bffb17 	ldw	r2,-20(fp)
  816a9c:	10801c17 	ldw	r2,112(r2)
  816aa0:	e0bffa15 	stw	r2,-24(fp)
  816aa4:	e03ff715 	stw	zero,-36(fp)
  816aa8:	e0bffe17 	ldw	r2,-8(fp)
  816aac:	10803617 	ldw	r2,216(r2)
  816ab0:	e0bff915 	stw	r2,-28(fp)
  816ab4:	00005606 	br	816c10 <smoothing_ok+0x208>
  816ab8:	e0bff917 	ldw	r2,-28(fp)
  816abc:	10801417 	ldw	r2,80(r2)
  816ac0:	e0bffc15 	stw	r2,-16(fp)
  816ac4:	e0bffc17 	ldw	r2,-16(fp)
  816ac8:	1000021e 	bne	r2,zero,816ad4 <smoothing_ok+0xcc>
  816acc:	0005883a 	mov	r2,zero
  816ad0:	00005406 	br	816c24 <smoothing_ok+0x21c>
  816ad4:	e0bffc17 	ldw	r2,-16(fp)
  816ad8:	1080000b 	ldhu	r2,0(r2)
  816adc:	10bfffcc 	andi	r2,r2,65535
  816ae0:	10001426 	beq	r2,zero,816b34 <smoothing_ok+0x12c>
  816ae4:	e0bffc17 	ldw	r2,-16(fp)
  816ae8:	1080008b 	ldhu	r2,2(r2)
  816aec:	10bfffcc 	andi	r2,r2,65535
  816af0:	10001026 	beq	r2,zero,816b34 <smoothing_ok+0x12c>
  816af4:	e0bffc17 	ldw	r2,-16(fp)
  816af8:	1080040b 	ldhu	r2,16(r2)
  816afc:	10bfffcc 	andi	r2,r2,65535
  816b00:	10000c26 	beq	r2,zero,816b34 <smoothing_ok+0x12c>
  816b04:	e0bffc17 	ldw	r2,-16(fp)
  816b08:	1080080b 	ldhu	r2,32(r2)
  816b0c:	10bfffcc 	andi	r2,r2,65535
  816b10:	10000826 	beq	r2,zero,816b34 <smoothing_ok+0x12c>
  816b14:	e0bffc17 	ldw	r2,-16(fp)
  816b18:	1080048b 	ldhu	r2,18(r2)
  816b1c:	10bfffcc 	andi	r2,r2,65535
  816b20:	10000426 	beq	r2,zero,816b34 <smoothing_ok+0x12c>
  816b24:	e0bffc17 	ldw	r2,-16(fp)
  816b28:	1080010b 	ldhu	r2,4(r2)
  816b2c:	10bfffcc 	andi	r2,r2,65535
  816b30:	1000021e 	bne	r2,zero,816b3c <smoothing_ok+0x134>
  816b34:	0005883a 	mov	r2,zero
  816b38:	00003a06 	br	816c24 <smoothing_ok+0x21c>
  816b3c:	e0bffe17 	ldw	r2,-8(fp)
  816b40:	10c02817 	ldw	r3,160(r2)
  816b44:	e0bff717 	ldw	r2,-36(fp)
  816b48:	1004923a 	slli	r2,r2,8
  816b4c:	1885883a 	add	r2,r3,r2
  816b50:	e0bffd15 	stw	r2,-12(fp)
  816b54:	e0bffd17 	ldw	r2,-12(fp)
  816b58:	10800017 	ldw	r2,0(r2)
  816b5c:	1000020e 	bge	r2,zero,816b68 <smoothing_ok+0x160>
  816b60:	0005883a 	mov	r2,zero
  816b64:	00002f06 	br	816c24 <smoothing_ok+0x21c>
  816b68:	00800044 	movi	r2,1
  816b6c:	e0bff815 	stw	r2,-32(fp)
  816b70:	00001b06 	br	816be0 <smoothing_ok+0x1d8>
  816b74:	e0bff817 	ldw	r2,-32(fp)
  816b78:	1085883a 	add	r2,r2,r2
  816b7c:	1085883a 	add	r2,r2,r2
  816b80:	1007883a 	mov	r3,r2
  816b84:	e0bffa17 	ldw	r2,-24(fp)
  816b88:	10c7883a 	add	r3,r2,r3
  816b8c:	e0bff817 	ldw	r2,-32(fp)
  816b90:	1085883a 	add	r2,r2,r2
  816b94:	1085883a 	add	r2,r2,r2
  816b98:	1009883a 	mov	r4,r2
  816b9c:	e0bffd17 	ldw	r2,-12(fp)
  816ba0:	1105883a 	add	r2,r2,r4
  816ba4:	10800017 	ldw	r2,0(r2)
  816ba8:	18800015 	stw	r2,0(r3)
  816bac:	e0bff817 	ldw	r2,-32(fp)
  816bb0:	1085883a 	add	r2,r2,r2
  816bb4:	1085883a 	add	r2,r2,r2
  816bb8:	1007883a 	mov	r3,r2
  816bbc:	e0bffd17 	ldw	r2,-12(fp)
  816bc0:	10c5883a 	add	r2,r2,r3
  816bc4:	10800017 	ldw	r2,0(r2)
  816bc8:	10000226 	beq	r2,zero,816bd4 <smoothing_ok+0x1cc>
  816bcc:	00800044 	movi	r2,1
  816bd0:	e0bff615 	stw	r2,-40(fp)
  816bd4:	e0bff817 	ldw	r2,-32(fp)
  816bd8:	10800044 	addi	r2,r2,1
  816bdc:	e0bff815 	stw	r2,-32(fp)
  816be0:	e0bff817 	ldw	r2,-32(fp)
  816be4:	10800190 	cmplti	r2,r2,6
  816be8:	103fe21e 	bne	r2,zero,816b74 <__alt_mem_epcs_flash_controller_0+0xff80db74>
  816bec:	e0bffa17 	ldw	r2,-24(fp)
  816bf0:	10800604 	addi	r2,r2,24
  816bf4:	e0bffa15 	stw	r2,-24(fp)
  816bf8:	e0bff717 	ldw	r2,-36(fp)
  816bfc:	10800044 	addi	r2,r2,1
  816c00:	e0bff715 	stw	r2,-36(fp)
  816c04:	e0bff917 	ldw	r2,-28(fp)
  816c08:	10801604 	addi	r2,r2,88
  816c0c:	e0bff915 	stw	r2,-28(fp)
  816c10:	e0bffe17 	ldw	r2,-8(fp)
  816c14:	10800917 	ldw	r2,36(r2)
  816c18:	e0fff717 	ldw	r3,-36(fp)
  816c1c:	18bfa616 	blt	r3,r2,816ab8 <__alt_mem_epcs_flash_controller_0+0xff80dab8>
  816c20:	e0bff617 	ldw	r2,-40(fp)
  816c24:	e6ffff04 	addi	sp,fp,-4
  816c28:	dfc00217 	ldw	ra,8(sp)
  816c2c:	df000117 	ldw	fp,4(sp)
  816c30:	dc000017 	ldw	r16,0(sp)
  816c34:	dec00304 	addi	sp,sp,12
  816c38:	f800283a 	ret

00816c3c <decompress_smooth_data>:
  816c3c:	deffb204 	addi	sp,sp,-312
  816c40:	dfc04d15 	stw	ra,308(sp)
  816c44:	df004c15 	stw	fp,304(sp)
  816c48:	dc404b15 	stw	r17,300(sp)
  816c4c:	dc004a15 	stw	r16,296(sp)
  816c50:	df004c04 	addi	fp,sp,304
  816c54:	e13ffc15 	stw	r4,-16(fp)
  816c58:	e17ffd15 	stw	r5,-12(fp)
  816c5c:	e0bffc17 	ldw	r2,-16(fp)
  816c60:	10807117 	ldw	r2,452(r2)
  816c64:	e0bfcd15 	stw	r2,-204(fp)
  816c68:	e0bffc17 	ldw	r2,-16(fp)
  816c6c:	10805317 	ldw	r2,332(r2)
  816c70:	10bfffc4 	addi	r2,r2,-1
  816c74:	e0bfce15 	stw	r2,-200(fp)
  816c78:	00001906 	br	816ce0 <decompress_smooth_data+0xa4>
  816c7c:	e0bffc17 	ldw	r2,-16(fp)
  816c80:	10c02417 	ldw	r3,144(r2)
  816c84:	e0bffc17 	ldw	r2,-16(fp)
  816c88:	10802617 	ldw	r2,152(r2)
  816c8c:	18800c1e 	bne	r3,r2,816cc0 <decompress_smooth_data+0x84>
  816c90:	e0bffc17 	ldw	r2,-16(fp)
  816c94:	10806717 	ldw	r2,412(r2)
  816c98:	1005003a 	cmpeq	r2,r2,zero
  816c9c:	10803fcc 	andi	r2,r2,255
  816ca0:	e0bfcf15 	stw	r2,-196(fp)
  816ca4:	e0bffc17 	ldw	r2,-16(fp)
  816ca8:	10802517 	ldw	r2,148(r2)
  816cac:	e0fffc17 	ldw	r3,-16(fp)
  816cb0:	19002717 	ldw	r4,156(r3)
  816cb4:	e0ffcf17 	ldw	r3,-196(fp)
  816cb8:	20c7883a 	add	r3,r4,r3
  816cbc:	18801236 	bltu	r3,r2,816d08 <decompress_smooth_data+0xcc>
  816cc0:	e0bffc17 	ldw	r2,-16(fp)
  816cc4:	10807317 	ldw	r2,460(r2)
  816cc8:	10800017 	ldw	r2,0(r2)
  816ccc:	e13ffc17 	ldw	r4,-16(fp)
  816cd0:	103ee83a 	callr	r2
  816cd4:	1000021e 	bne	r2,zero,816ce0 <decompress_smooth_data+0xa4>
  816cd8:	0005883a 	mov	r2,zero
  816cdc:	0002d706 	br	81783c <decompress_smooth_data+0xc00>
  816ce0:	e0bffc17 	ldw	r2,-16(fp)
  816ce4:	10802417 	ldw	r2,144(r2)
  816ce8:	e0fffc17 	ldw	r3,-16(fp)
  816cec:	18c02617 	ldw	r3,152(r3)
  816cf0:	18800616 	blt	r3,r2,816d0c <decompress_smooth_data+0xd0>
  816cf4:	e0bffc17 	ldw	r2,-16(fp)
  816cf8:	10807317 	ldw	r2,460(r2)
  816cfc:	10800517 	ldw	r2,20(r2)
  816d00:	103fde26 	beq	r2,zero,816c7c <__alt_mem_epcs_flash_controller_0+0xff80dc7c>
  816d04:	00000106 	br	816d0c <decompress_smooth_data+0xd0>
  816d08:	0001883a 	nop
  816d0c:	e03fb615 	stw	zero,-296(fp)
  816d10:	e0bffc17 	ldw	r2,-16(fp)
  816d14:	10803617 	ldw	r2,216(r2)
  816d18:	e0bfc015 	stw	r2,-256(fp)
  816d1c:	0002b606 	br	8177f8 <decompress_smooth_data+0xbbc>
  816d20:	e0bfc017 	ldw	r2,-256(fp)
  816d24:	10800d17 	ldw	r2,52(r2)
  816d28:	1002ac26 	beq	r2,zero,8177dc <decompress_smooth_data+0xba0>
  816d2c:	e0bffc17 	ldw	r2,-16(fp)
  816d30:	10c02717 	ldw	r3,156(r2)
  816d34:	e0bfce17 	ldw	r2,-200(fp)
  816d38:	1880082e 	bgeu	r3,r2,816d5c <decompress_smooth_data+0x120>
  816d3c:	e0bfc017 	ldw	r2,-256(fp)
  816d40:	10800317 	ldw	r2,12(r2)
  816d44:	e0bfb815 	stw	r2,-288(fp)
  816d48:	e0bfb817 	ldw	r2,-288(fp)
  816d4c:	1085883a 	add	r2,r2,r2
  816d50:	e0bfb915 	stw	r2,-284(fp)
  816d54:	e03fc215 	stw	zero,-248(fp)
  816d58:	00001106 	br	816da0 <decompress_smooth_data+0x164>
  816d5c:	e0bfc017 	ldw	r2,-256(fp)
  816d60:	10c00817 	ldw	r3,32(r2)
  816d64:	e0bfc017 	ldw	r2,-256(fp)
  816d68:	10800317 	ldw	r2,12(r2)
  816d6c:	100b883a 	mov	r5,r2
  816d70:	1809883a 	mov	r4,r3
  816d74:	08301900 	call	830190 <__umodsi3>
  816d78:	e0bfb815 	stw	r2,-288(fp)
  816d7c:	e0bfb817 	ldw	r2,-288(fp)
  816d80:	1000031e 	bne	r2,zero,816d90 <decompress_smooth_data+0x154>
  816d84:	e0bfc017 	ldw	r2,-256(fp)
  816d88:	10800317 	ldw	r2,12(r2)
  816d8c:	e0bfb815 	stw	r2,-288(fp)
  816d90:	e0bfb817 	ldw	r2,-288(fp)
  816d94:	e0bfb915 	stw	r2,-284(fp)
  816d98:	00800044 	movi	r2,1
  816d9c:	e0bfc215 	stw	r2,-248(fp)
  816da0:	e0bffc17 	ldw	r2,-16(fp)
  816da4:	10802717 	ldw	r2,156(r2)
  816da8:	10002a26 	beq	r2,zero,816e54 <decompress_smooth_data+0x218>
  816dac:	e0bfc017 	ldw	r2,-256(fp)
  816db0:	10800317 	ldw	r2,12(r2)
  816db4:	e0ffb917 	ldw	r3,-284(fp)
  816db8:	1885883a 	add	r2,r3,r2
  816dbc:	e0bfb915 	stw	r2,-284(fp)
  816dc0:	e0bffc17 	ldw	r2,-16(fp)
  816dc4:	10800117 	ldw	r2,4(r2)
  816dc8:	14000817 	ldw	r16,32(r2)
  816dcc:	e0ffcd17 	ldw	r3,-204(fp)
  816dd0:	e0bfb617 	ldw	r2,-296(fp)
  816dd4:	10800484 	addi	r2,r2,18
  816dd8:	1085883a 	add	r2,r2,r2
  816ddc:	1085883a 	add	r2,r2,r2
  816de0:	1885883a 	add	r2,r3,r2
  816de4:	14400017 	ldw	r17,0(r2)
  816de8:	e0bffc17 	ldw	r2,-16(fp)
  816dec:	10802717 	ldw	r2,156(r2)
  816df0:	10ffffc4 	addi	r3,r2,-1
  816df4:	e0bfc017 	ldw	r2,-256(fp)
  816df8:	10800317 	ldw	r2,12(r2)
  816dfc:	100b883a 	mov	r5,r2
  816e00:	1809883a 	mov	r4,r3
  816e04:	08301e80 	call	8301e8 <__mulsi3>
  816e08:	1007883a 	mov	r3,r2
  816e0c:	e0bfb917 	ldw	r2,-284(fp)
  816e10:	d8000015 	stw	zero,0(sp)
  816e14:	100f883a 	mov	r7,r2
  816e18:	180d883a 	mov	r6,r3
  816e1c:	880b883a 	mov	r5,r17
  816e20:	e13ffc17 	ldw	r4,-16(fp)
  816e24:	803ee83a 	callr	r16
  816e28:	e0bfba15 	stw	r2,-280(fp)
  816e2c:	e0bfc017 	ldw	r2,-256(fp)
  816e30:	10800317 	ldw	r2,12(r2)
  816e34:	1085883a 	add	r2,r2,r2
  816e38:	1085883a 	add	r2,r2,r2
  816e3c:	1007883a 	mov	r3,r2
  816e40:	e0bfba17 	ldw	r2,-280(fp)
  816e44:	10c5883a 	add	r2,r2,r3
  816e48:	e0bfba15 	stw	r2,-280(fp)
  816e4c:	e03fc115 	stw	zero,-252(fp)
  816e50:	00001406 	br	816ea4 <decompress_smooth_data+0x268>
  816e54:	e0bffc17 	ldw	r2,-16(fp)
  816e58:	10800117 	ldw	r2,4(r2)
  816e5c:	10c00817 	ldw	r3,32(r2)
  816e60:	e13fcd17 	ldw	r4,-204(fp)
  816e64:	e0bfb617 	ldw	r2,-296(fp)
  816e68:	10800484 	addi	r2,r2,18
  816e6c:	1085883a 	add	r2,r2,r2
  816e70:	1085883a 	add	r2,r2,r2
  816e74:	2085883a 	add	r2,r4,r2
  816e78:	10800017 	ldw	r2,0(r2)
  816e7c:	e13fb917 	ldw	r4,-284(fp)
  816e80:	d8000015 	stw	zero,0(sp)
  816e84:	200f883a 	mov	r7,r4
  816e88:	000d883a 	mov	r6,zero
  816e8c:	100b883a 	mov	r5,r2
  816e90:	e13ffc17 	ldw	r4,-16(fp)
  816e94:	183ee83a 	callr	r3
  816e98:	e0bfba15 	stw	r2,-280(fp)
  816e9c:	00800044 	movi	r2,1
  816ea0:	e0bfc115 	stw	r2,-252(fp)
  816ea4:	e0bfcd17 	ldw	r2,-204(fp)
  816ea8:	14001c17 	ldw	r16,112(r2)
  816eac:	01400604 	movi	r5,24
  816eb0:	e13fb617 	ldw	r4,-296(fp)
  816eb4:	08301e80 	call	8301e8 <__mulsi3>
  816eb8:	8085883a 	add	r2,r16,r2
  816ebc:	e0bfd015 	stw	r2,-192(fp)
  816ec0:	e0bfc017 	ldw	r2,-256(fp)
  816ec4:	10801417 	ldw	r2,80(r2)
  816ec8:	e0bfd115 	stw	r2,-188(fp)
  816ecc:	e0bfd117 	ldw	r2,-188(fp)
  816ed0:	1080000b 	ldhu	r2,0(r2)
  816ed4:	10bfffcc 	andi	r2,r2,65535
  816ed8:	e0bfd215 	stw	r2,-184(fp)
  816edc:	e0bfd117 	ldw	r2,-188(fp)
  816ee0:	1080008b 	ldhu	r2,2(r2)
  816ee4:	10bfffcc 	andi	r2,r2,65535
  816ee8:	e0bfd315 	stw	r2,-180(fp)
  816eec:	e0bfd117 	ldw	r2,-188(fp)
  816ef0:	1080040b 	ldhu	r2,16(r2)
  816ef4:	10bfffcc 	andi	r2,r2,65535
  816ef8:	e0bfd415 	stw	r2,-176(fp)
  816efc:	e0bfd117 	ldw	r2,-188(fp)
  816f00:	1080080b 	ldhu	r2,32(r2)
  816f04:	10bfffcc 	andi	r2,r2,65535
  816f08:	e0bfd515 	stw	r2,-172(fp)
  816f0c:	e0bfd117 	ldw	r2,-188(fp)
  816f10:	1080048b 	ldhu	r2,18(r2)
  816f14:	10bfffcc 	andi	r2,r2,65535
  816f18:	e0bfd615 	stw	r2,-168(fp)
  816f1c:	e0bfd117 	ldw	r2,-188(fp)
  816f20:	1080010b 	ldhu	r2,4(r2)
  816f24:	10bfffcc 	andi	r2,r2,65535
  816f28:	e0bfd715 	stw	r2,-164(fp)
  816f2c:	e0bffc17 	ldw	r2,-16(fp)
  816f30:	10c07617 	ldw	r3,472(r2)
  816f34:	e0bfb617 	ldw	r2,-296(fp)
  816f38:	10800044 	addi	r2,r2,1
  816f3c:	1085883a 	add	r2,r2,r2
  816f40:	1085883a 	add	r2,r2,r2
  816f44:	1885883a 	add	r2,r3,r2
  816f48:	10800017 	ldw	r2,0(r2)
  816f4c:	e0bfd815 	stw	r2,-160(fp)
  816f50:	e0bfb617 	ldw	r2,-296(fp)
  816f54:	1085883a 	add	r2,r2,r2
  816f58:	1085883a 	add	r2,r2,r2
  816f5c:	1007883a 	mov	r3,r2
  816f60:	e0bffd17 	ldw	r2,-12(fp)
  816f64:	10c5883a 	add	r2,r2,r3
  816f68:	10800017 	ldw	r2,0(r2)
  816f6c:	e0bfbe15 	stw	r2,-264(fp)
  816f70:	e03fb715 	stw	zero,-292(fp)
  816f74:	00021506 	br	8177cc <decompress_smooth_data+0xb90>
  816f78:	e0bfb717 	ldw	r2,-292(fp)
  816f7c:	1085883a 	add	r2,r2,r2
  816f80:	1085883a 	add	r2,r2,r2
  816f84:	1007883a 	mov	r3,r2
  816f88:	e0bfba17 	ldw	r2,-280(fp)
  816f8c:	10c5883a 	add	r2,r2,r3
  816f90:	10800017 	ldw	r2,0(r2)
  816f94:	e0bfbb15 	stw	r2,-276(fp)
  816f98:	e0bfc117 	ldw	r2,-252(fp)
  816f9c:	10000526 	beq	r2,zero,816fb4 <decompress_smooth_data+0x378>
  816fa0:	e0bfb717 	ldw	r2,-292(fp)
  816fa4:	1000031e 	bne	r2,zero,816fb4 <decompress_smooth_data+0x378>
  816fa8:	e0bfbb17 	ldw	r2,-276(fp)
  816fac:	e0bfbc15 	stw	r2,-272(fp)
  816fb0:	00000b06 	br	816fe0 <decompress_smooth_data+0x3a4>
  816fb4:	e0ffb717 	ldw	r3,-292(fp)
  816fb8:	00900034 	movhi	r2,16384
  816fbc:	10bfffc4 	addi	r2,r2,-1
  816fc0:	1885883a 	add	r2,r3,r2
  816fc4:	1085883a 	add	r2,r2,r2
  816fc8:	1085883a 	add	r2,r2,r2
  816fcc:	1007883a 	mov	r3,r2
  816fd0:	e0bfba17 	ldw	r2,-280(fp)
  816fd4:	10c5883a 	add	r2,r2,r3
  816fd8:	10800017 	ldw	r2,0(r2)
  816fdc:	e0bfbc15 	stw	r2,-272(fp)
  816fe0:	e0bfc217 	ldw	r2,-248(fp)
  816fe4:	10000726 	beq	r2,zero,817004 <decompress_smooth_data+0x3c8>
  816fe8:	e0bfb817 	ldw	r2,-288(fp)
  816fec:	10ffffc4 	addi	r3,r2,-1
  816ff0:	e0bfb717 	ldw	r2,-292(fp)
  816ff4:	1880031e 	bne	r3,r2,817004 <decompress_smooth_data+0x3c8>
  816ff8:	e0bfbb17 	ldw	r2,-276(fp)
  816ffc:	e0bfbd15 	stw	r2,-268(fp)
  817000:	00000906 	br	817028 <decompress_smooth_data+0x3ec>
  817004:	e0bfb717 	ldw	r2,-292(fp)
  817008:	10800044 	addi	r2,r2,1
  81700c:	1085883a 	add	r2,r2,r2
  817010:	1085883a 	add	r2,r2,r2
  817014:	1007883a 	mov	r3,r2
  817018:	e0bfba17 	ldw	r2,-280(fp)
  81701c:	10c5883a 	add	r2,r2,r3
  817020:	10800017 	ldw	r2,0(r2)
  817024:	e0bfbd15 	stw	r2,-268(fp)
  817028:	e0bfbc17 	ldw	r2,-272(fp)
  81702c:	1080000b 	ldhu	r2,0(r2)
  817030:	10bfffcc 	andi	r2,r2,65535
  817034:	10a0001c 	xori	r2,r2,32768
  817038:	10a00004 	addi	r2,r2,-32768
  81703c:	e0bfc515 	stw	r2,-236(fp)
  817040:	e0bfc517 	ldw	r2,-236(fp)
  817044:	e0bfc415 	stw	r2,-240(fp)
  817048:	e0bfc417 	ldw	r2,-240(fp)
  81704c:	e0bfc315 	stw	r2,-244(fp)
  817050:	e0bfbb17 	ldw	r2,-276(fp)
  817054:	1080000b 	ldhu	r2,0(r2)
  817058:	10bfffcc 	andi	r2,r2,65535
  81705c:	10a0001c 	xori	r2,r2,32768
  817060:	10a00004 	addi	r2,r2,-32768
  817064:	e0bfc815 	stw	r2,-224(fp)
  817068:	e0bfc817 	ldw	r2,-224(fp)
  81706c:	e0bfc715 	stw	r2,-228(fp)
  817070:	e0bfc717 	ldw	r2,-228(fp)
  817074:	e0bfc615 	stw	r2,-232(fp)
  817078:	e0bfbd17 	ldw	r2,-268(fp)
  81707c:	1080000b 	ldhu	r2,0(r2)
  817080:	10bfffcc 	andi	r2,r2,65535
  817084:	10a0001c 	xori	r2,r2,32768
  817088:	10a00004 	addi	r2,r2,-32768
  81708c:	e0bfcb15 	stw	r2,-212(fp)
  817090:	e0bfcb17 	ldw	r2,-212(fp)
  817094:	e0bfca15 	stw	r2,-216(fp)
  817098:	e0bfca17 	ldw	r2,-216(fp)
  81709c:	e0bfc915 	stw	r2,-220(fp)
  8170a0:	e03fbf15 	stw	zero,-260(fp)
  8170a4:	e0bfc017 	ldw	r2,-256(fp)
  8170a8:	10800717 	ldw	r2,28(r2)
  8170ac:	10bfffc4 	addi	r2,r2,-1
  8170b0:	e0bfd915 	stw	r2,-156(fp)
  8170b4:	e03fb515 	stw	zero,-300(fp)
  8170b8:	0001b606 	br	817794 <decompress_smooth_data+0xb58>
  8170bc:	e0bfdc04 	addi	r2,fp,-144
  8170c0:	01800044 	movi	r6,1
  8170c4:	100b883a 	mov	r5,r2
  8170c8:	e13fbb17 	ldw	r4,-276(fp)
  8170cc:	0813d040 	call	813d04 <jcopy_block_row>
  8170d0:	e0ffb517 	ldw	r3,-300(fp)
  8170d4:	e0bfd917 	ldw	r2,-156(fp)
  8170d8:	1880152e 	bgeu	r3,r2,817130 <decompress_smooth_data+0x4f4>
  8170dc:	e0bfbc17 	ldw	r2,-272(fp)
  8170e0:	10802004 	addi	r2,r2,128
  8170e4:	1080000b 	ldhu	r2,0(r2)
  8170e8:	10bfffcc 	andi	r2,r2,65535
  8170ec:	10a0001c 	xori	r2,r2,32768
  8170f0:	10a00004 	addi	r2,r2,-32768
  8170f4:	e0bfc515 	stw	r2,-236(fp)
  8170f8:	e0bfbb17 	ldw	r2,-276(fp)
  8170fc:	10802004 	addi	r2,r2,128
  817100:	1080000b 	ldhu	r2,0(r2)
  817104:	10bfffcc 	andi	r2,r2,65535
  817108:	10a0001c 	xori	r2,r2,32768
  81710c:	10a00004 	addi	r2,r2,-32768
  817110:	e0bfc815 	stw	r2,-224(fp)
  817114:	e0bfbd17 	ldw	r2,-268(fp)
  817118:	10802004 	addi	r2,r2,128
  81711c:	1080000b 	ldhu	r2,0(r2)
  817120:	10bfffcc 	andi	r2,r2,65535
  817124:	10a0001c 	xori	r2,r2,32768
  817128:	10a00004 	addi	r2,r2,-32768
  81712c:	e0bfcb15 	stw	r2,-212(fp)
  817130:	e0bfd017 	ldw	r2,-192(fp)
  817134:	10800117 	ldw	r2,4(r2)
  817138:	e0bfda15 	stw	r2,-152(fp)
  81713c:	e0bfda17 	ldw	r2,-152(fp)
  817140:	10004326 	beq	r2,zero,817250 <decompress_smooth_data+0x614>
  817144:	e0bfdc8b 	ldhu	r2,-142(fp)
  817148:	10bfffcc 	andi	r2,r2,65535
  81714c:	10a0001c 	xori	r2,r2,32768
  817150:	10a00004 	addi	r2,r2,-32768
  817154:	10003e1e 	bne	r2,zero,817250 <decompress_smooth_data+0x614>
  817158:	01400904 	movi	r5,36
  81715c:	e13fd217 	ldw	r4,-184(fp)
  817160:	08301e80 	call	8301e8 <__mulsi3>
  817164:	1009883a 	mov	r4,r2
  817168:	e0ffc617 	ldw	r3,-232(fp)
  81716c:	e0bfc817 	ldw	r2,-224(fp)
  817170:	1885c83a 	sub	r2,r3,r2
  817174:	100b883a 	mov	r5,r2
  817178:	08301e80 	call	8301e8 <__mulsi3>
  81717c:	e0bfdb15 	stw	r2,-148(fp)
  817180:	e0bfdb17 	ldw	r2,-148(fp)
  817184:	10001716 	blt	r2,zero,8171e4 <decompress_smooth_data+0x5a8>
  817188:	e0bfd317 	ldw	r2,-180(fp)
  81718c:	100691fa 	slli	r3,r2,7
  817190:	e0bfdb17 	ldw	r2,-148(fp)
  817194:	1887883a 	add	r3,r3,r2
  817198:	e0bfd317 	ldw	r2,-180(fp)
  81719c:	1004923a 	slli	r2,r2,8
  8171a0:	100b883a 	mov	r5,r2
  8171a4:	1809883a 	mov	r4,r3
  8171a8:	08300340 	call	830034 <__divsi3>
  8171ac:	e0bfcc15 	stw	r2,-208(fp)
  8171b0:	e0bfda17 	ldw	r2,-152(fp)
  8171b4:	0080240e 	bge	zero,r2,817248 <decompress_smooth_data+0x60c>
  8171b8:	00c00044 	movi	r3,1
  8171bc:	e0bfda17 	ldw	r2,-152(fp)
  8171c0:	1884983a 	sll	r2,r3,r2
  8171c4:	e0ffcc17 	ldw	r3,-208(fp)
  8171c8:	18801f16 	blt	r3,r2,817248 <decompress_smooth_data+0x60c>
  8171cc:	00c00044 	movi	r3,1
  8171d0:	e0bfda17 	ldw	r2,-152(fp)
  8171d4:	1884983a 	sll	r2,r3,r2
  8171d8:	10bfffc4 	addi	r2,r2,-1
  8171dc:	e0bfcc15 	stw	r2,-208(fp)
  8171e0:	00001906 	br	817248 <decompress_smooth_data+0x60c>
  8171e4:	e0bfd317 	ldw	r2,-180(fp)
  8171e8:	100691fa 	slli	r3,r2,7
  8171ec:	e0bfdb17 	ldw	r2,-148(fp)
  8171f0:	1887c83a 	sub	r3,r3,r2
  8171f4:	e0bfd317 	ldw	r2,-180(fp)
  8171f8:	1004923a 	slli	r2,r2,8
  8171fc:	100b883a 	mov	r5,r2
  817200:	1809883a 	mov	r4,r3
  817204:	08300340 	call	830034 <__divsi3>
  817208:	e0bfcc15 	stw	r2,-208(fp)
  81720c:	e0bfda17 	ldw	r2,-152(fp)
  817210:	00800a0e 	bge	zero,r2,81723c <decompress_smooth_data+0x600>
  817214:	00c00044 	movi	r3,1
  817218:	e0bfda17 	ldw	r2,-152(fp)
  81721c:	1884983a 	sll	r2,r3,r2
  817220:	e0ffcc17 	ldw	r3,-208(fp)
  817224:	18800516 	blt	r3,r2,81723c <decompress_smooth_data+0x600>
  817228:	00c00044 	movi	r3,1
  81722c:	e0bfda17 	ldw	r2,-152(fp)
  817230:	1884983a 	sll	r2,r3,r2
  817234:	10bfffc4 	addi	r2,r2,-1
  817238:	e0bfcc15 	stw	r2,-208(fp)
  81723c:	e0bfcc17 	ldw	r2,-208(fp)
  817240:	0085c83a 	sub	r2,zero,r2
  817244:	e0bfcc15 	stw	r2,-208(fp)
  817248:	e0bfcc17 	ldw	r2,-208(fp)
  81724c:	e0bfdc8d 	sth	r2,-142(fp)
  817250:	e0bfd017 	ldw	r2,-192(fp)
  817254:	10800217 	ldw	r2,8(r2)
  817258:	e0bfda15 	stw	r2,-152(fp)
  81725c:	e0bfda17 	ldw	r2,-152(fp)
  817260:	10004326 	beq	r2,zero,817370 <decompress_smooth_data+0x734>
  817264:	e0bfe00b 	ldhu	r2,-128(fp)
  817268:	10bfffcc 	andi	r2,r2,65535
  81726c:	10a0001c 	xori	r2,r2,32768
  817270:	10a00004 	addi	r2,r2,-32768
  817274:	10003e1e 	bne	r2,zero,817370 <decompress_smooth_data+0x734>
  817278:	01400904 	movi	r5,36
  81727c:	e13fd217 	ldw	r4,-184(fp)
  817280:	08301e80 	call	8301e8 <__mulsi3>
  817284:	1009883a 	mov	r4,r2
  817288:	e0ffc417 	ldw	r3,-240(fp)
  81728c:	e0bfca17 	ldw	r2,-216(fp)
  817290:	1885c83a 	sub	r2,r3,r2
  817294:	100b883a 	mov	r5,r2
  817298:	08301e80 	call	8301e8 <__mulsi3>
  81729c:	e0bfdb15 	stw	r2,-148(fp)
  8172a0:	e0bfdb17 	ldw	r2,-148(fp)
  8172a4:	10001716 	blt	r2,zero,817304 <decompress_smooth_data+0x6c8>
  8172a8:	e0bfd417 	ldw	r2,-176(fp)
  8172ac:	100691fa 	slli	r3,r2,7
  8172b0:	e0bfdb17 	ldw	r2,-148(fp)
  8172b4:	1887883a 	add	r3,r3,r2
  8172b8:	e0bfd417 	ldw	r2,-176(fp)
  8172bc:	1004923a 	slli	r2,r2,8
  8172c0:	100b883a 	mov	r5,r2
  8172c4:	1809883a 	mov	r4,r3
  8172c8:	08300340 	call	830034 <__divsi3>
  8172cc:	e0bfcc15 	stw	r2,-208(fp)
  8172d0:	e0bfda17 	ldw	r2,-152(fp)
  8172d4:	0080240e 	bge	zero,r2,817368 <decompress_smooth_data+0x72c>
  8172d8:	00c00044 	movi	r3,1
  8172dc:	e0bfda17 	ldw	r2,-152(fp)
  8172e0:	1884983a 	sll	r2,r3,r2
  8172e4:	e0ffcc17 	ldw	r3,-208(fp)
  8172e8:	18801f16 	blt	r3,r2,817368 <decompress_smooth_data+0x72c>
  8172ec:	00c00044 	movi	r3,1
  8172f0:	e0bfda17 	ldw	r2,-152(fp)
  8172f4:	1884983a 	sll	r2,r3,r2
  8172f8:	10bfffc4 	addi	r2,r2,-1
  8172fc:	e0bfcc15 	stw	r2,-208(fp)
  817300:	00001906 	br	817368 <decompress_smooth_data+0x72c>
  817304:	e0bfd417 	ldw	r2,-176(fp)
  817308:	100691fa 	slli	r3,r2,7
  81730c:	e0bfdb17 	ldw	r2,-148(fp)
  817310:	1887c83a 	sub	r3,r3,r2
  817314:	e0bfd417 	ldw	r2,-176(fp)
  817318:	1004923a 	slli	r2,r2,8
  81731c:	100b883a 	mov	r5,r2
  817320:	1809883a 	mov	r4,r3
  817324:	08300340 	call	830034 <__divsi3>
  817328:	e0bfcc15 	stw	r2,-208(fp)
  81732c:	e0bfda17 	ldw	r2,-152(fp)
  817330:	00800a0e 	bge	zero,r2,81735c <decompress_smooth_data+0x720>
  817334:	00c00044 	movi	r3,1
  817338:	e0bfda17 	ldw	r2,-152(fp)
  81733c:	1884983a 	sll	r2,r3,r2
  817340:	e0ffcc17 	ldw	r3,-208(fp)
  817344:	18800516 	blt	r3,r2,81735c <decompress_smooth_data+0x720>
  817348:	00c00044 	movi	r3,1
  81734c:	e0bfda17 	ldw	r2,-152(fp)
  817350:	1884983a 	sll	r2,r3,r2
  817354:	10bfffc4 	addi	r2,r2,-1
  817358:	e0bfcc15 	stw	r2,-208(fp)
  81735c:	e0bfcc17 	ldw	r2,-208(fp)
  817360:	0085c83a 	sub	r2,zero,r2
  817364:	e0bfcc15 	stw	r2,-208(fp)
  817368:	e0bfcc17 	ldw	r2,-208(fp)
  81736c:	e0bfe00d 	sth	r2,-128(fp)
  817370:	e0bfd017 	ldw	r2,-192(fp)
  817374:	10800317 	ldw	r2,12(r2)
  817378:	e0bfda15 	stw	r2,-152(fp)
  81737c:	e0bfda17 	ldw	r2,-152(fp)
  817380:	10004626 	beq	r2,zero,81749c <decompress_smooth_data+0x860>
  817384:	e0bfe40b 	ldhu	r2,-112(fp)
  817388:	10bfffcc 	andi	r2,r2,65535
  81738c:	10a0001c 	xori	r2,r2,32768
  817390:	10a00004 	addi	r2,r2,-32768
  817394:	1000411e 	bne	r2,zero,81749c <decompress_smooth_data+0x860>
  817398:	01400244 	movi	r5,9
  81739c:	e13fd217 	ldw	r4,-184(fp)
  8173a0:	08301e80 	call	8301e8 <__mulsi3>
  8173a4:	1009883a 	mov	r4,r2
  8173a8:	e0ffc417 	ldw	r3,-240(fp)
  8173ac:	e0bfca17 	ldw	r2,-216(fp)
  8173b0:	1887883a 	add	r3,r3,r2
  8173b4:	e0bfc717 	ldw	r2,-228(fp)
  8173b8:	1085883a 	add	r2,r2,r2
  8173bc:	1885c83a 	sub	r2,r3,r2
  8173c0:	100b883a 	mov	r5,r2
  8173c4:	08301e80 	call	8301e8 <__mulsi3>
  8173c8:	e0bfdb15 	stw	r2,-148(fp)
  8173cc:	e0bfdb17 	ldw	r2,-148(fp)
  8173d0:	10001716 	blt	r2,zero,817430 <decompress_smooth_data+0x7f4>
  8173d4:	e0bfd517 	ldw	r2,-172(fp)
  8173d8:	100691fa 	slli	r3,r2,7
  8173dc:	e0bfdb17 	ldw	r2,-148(fp)
  8173e0:	1887883a 	add	r3,r3,r2
  8173e4:	e0bfd517 	ldw	r2,-172(fp)
  8173e8:	1004923a 	slli	r2,r2,8
  8173ec:	100b883a 	mov	r5,r2
  8173f0:	1809883a 	mov	r4,r3
  8173f4:	08300340 	call	830034 <__divsi3>
  8173f8:	e0bfcc15 	stw	r2,-208(fp)
  8173fc:	e0bfda17 	ldw	r2,-152(fp)
  817400:	0080240e 	bge	zero,r2,817494 <decompress_smooth_data+0x858>
  817404:	00c00044 	movi	r3,1
  817408:	e0bfda17 	ldw	r2,-152(fp)
  81740c:	1884983a 	sll	r2,r3,r2
  817410:	e0ffcc17 	ldw	r3,-208(fp)
  817414:	18801f16 	blt	r3,r2,817494 <decompress_smooth_data+0x858>
  817418:	00c00044 	movi	r3,1
  81741c:	e0bfda17 	ldw	r2,-152(fp)
  817420:	1884983a 	sll	r2,r3,r2
  817424:	10bfffc4 	addi	r2,r2,-1
  817428:	e0bfcc15 	stw	r2,-208(fp)
  81742c:	00001906 	br	817494 <decompress_smooth_data+0x858>
  817430:	e0bfd517 	ldw	r2,-172(fp)
  817434:	100691fa 	slli	r3,r2,7
  817438:	e0bfdb17 	ldw	r2,-148(fp)
  81743c:	1887c83a 	sub	r3,r3,r2
  817440:	e0bfd517 	ldw	r2,-172(fp)
  817444:	1004923a 	slli	r2,r2,8
  817448:	100b883a 	mov	r5,r2
  81744c:	1809883a 	mov	r4,r3
  817450:	08300340 	call	830034 <__divsi3>
  817454:	e0bfcc15 	stw	r2,-208(fp)
  817458:	e0bfda17 	ldw	r2,-152(fp)
  81745c:	00800a0e 	bge	zero,r2,817488 <decompress_smooth_data+0x84c>
  817460:	00c00044 	movi	r3,1
  817464:	e0bfda17 	ldw	r2,-152(fp)
  817468:	1884983a 	sll	r2,r3,r2
  81746c:	e0ffcc17 	ldw	r3,-208(fp)
  817470:	18800516 	blt	r3,r2,817488 <decompress_smooth_data+0x84c>
  817474:	00c00044 	movi	r3,1
  817478:	e0bfda17 	ldw	r2,-152(fp)
  81747c:	1884983a 	sll	r2,r3,r2
  817480:	10bfffc4 	addi	r2,r2,-1
  817484:	e0bfcc15 	stw	r2,-208(fp)
  817488:	e0bfcc17 	ldw	r2,-208(fp)
  81748c:	0085c83a 	sub	r2,zero,r2
  817490:	e0bfcc15 	stw	r2,-208(fp)
  817494:	e0bfcc17 	ldw	r2,-208(fp)
  817498:	e0bfe40d 	sth	r2,-112(fp)
  81749c:	e0bfd017 	ldw	r2,-192(fp)
  8174a0:	10800417 	ldw	r2,16(r2)
  8174a4:	e0bfda15 	stw	r2,-152(fp)
  8174a8:	e0bfda17 	ldw	r2,-152(fp)
  8174ac:	10004726 	beq	r2,zero,8175cc <decompress_smooth_data+0x990>
  8174b0:	e0bfe08b 	ldhu	r2,-126(fp)
  8174b4:	10bfffcc 	andi	r2,r2,65535
  8174b8:	10a0001c 	xori	r2,r2,32768
  8174bc:	10a00004 	addi	r2,r2,-32768
  8174c0:	1000421e 	bne	r2,zero,8175cc <decompress_smooth_data+0x990>
  8174c4:	01400144 	movi	r5,5
  8174c8:	e13fd217 	ldw	r4,-184(fp)
  8174cc:	08301e80 	call	8301e8 <__mulsi3>
  8174d0:	1009883a 	mov	r4,r2
  8174d4:	e0ffc317 	ldw	r3,-244(fp)
  8174d8:	e0bfc517 	ldw	r2,-236(fp)
  8174dc:	1887c83a 	sub	r3,r3,r2
  8174e0:	e0bfc917 	ldw	r2,-220(fp)
  8174e4:	1887c83a 	sub	r3,r3,r2
  8174e8:	e0bfcb17 	ldw	r2,-212(fp)
  8174ec:	1885883a 	add	r2,r3,r2
  8174f0:	100b883a 	mov	r5,r2
  8174f4:	08301e80 	call	8301e8 <__mulsi3>
  8174f8:	e0bfdb15 	stw	r2,-148(fp)
  8174fc:	e0bfdb17 	ldw	r2,-148(fp)
  817500:	10001716 	blt	r2,zero,817560 <decompress_smooth_data+0x924>
  817504:	e0bfd617 	ldw	r2,-168(fp)
  817508:	100691fa 	slli	r3,r2,7
  81750c:	e0bfdb17 	ldw	r2,-148(fp)
  817510:	1887883a 	add	r3,r3,r2
  817514:	e0bfd617 	ldw	r2,-168(fp)
  817518:	1004923a 	slli	r2,r2,8
  81751c:	100b883a 	mov	r5,r2
  817520:	1809883a 	mov	r4,r3
  817524:	08300340 	call	830034 <__divsi3>
  817528:	e0bfcc15 	stw	r2,-208(fp)
  81752c:	e0bfda17 	ldw	r2,-152(fp)
  817530:	0080240e 	bge	zero,r2,8175c4 <decompress_smooth_data+0x988>
  817534:	00c00044 	movi	r3,1
  817538:	e0bfda17 	ldw	r2,-152(fp)
  81753c:	1884983a 	sll	r2,r3,r2
  817540:	e0ffcc17 	ldw	r3,-208(fp)
  817544:	18801f16 	blt	r3,r2,8175c4 <decompress_smooth_data+0x988>
  817548:	00c00044 	movi	r3,1
  81754c:	e0bfda17 	ldw	r2,-152(fp)
  817550:	1884983a 	sll	r2,r3,r2
  817554:	10bfffc4 	addi	r2,r2,-1
  817558:	e0bfcc15 	stw	r2,-208(fp)
  81755c:	00001906 	br	8175c4 <decompress_smooth_data+0x988>
  817560:	e0bfd617 	ldw	r2,-168(fp)
  817564:	100691fa 	slli	r3,r2,7
  817568:	e0bfdb17 	ldw	r2,-148(fp)
  81756c:	1887c83a 	sub	r3,r3,r2
  817570:	e0bfd617 	ldw	r2,-168(fp)
  817574:	1004923a 	slli	r2,r2,8
  817578:	100b883a 	mov	r5,r2
  81757c:	1809883a 	mov	r4,r3
  817580:	08300340 	call	830034 <__divsi3>
  817584:	e0bfcc15 	stw	r2,-208(fp)
  817588:	e0bfda17 	ldw	r2,-152(fp)
  81758c:	00800a0e 	bge	zero,r2,8175b8 <decompress_smooth_data+0x97c>
  817590:	00c00044 	movi	r3,1
  817594:	e0bfda17 	ldw	r2,-152(fp)
  817598:	1884983a 	sll	r2,r3,r2
  81759c:	e0ffcc17 	ldw	r3,-208(fp)
  8175a0:	18800516 	blt	r3,r2,8175b8 <decompress_smooth_data+0x97c>
  8175a4:	00c00044 	movi	r3,1
  8175a8:	e0bfda17 	ldw	r2,-152(fp)
  8175ac:	1884983a 	sll	r2,r3,r2
  8175b0:	10bfffc4 	addi	r2,r2,-1
  8175b4:	e0bfcc15 	stw	r2,-208(fp)
  8175b8:	e0bfcc17 	ldw	r2,-208(fp)
  8175bc:	0085c83a 	sub	r2,zero,r2
  8175c0:	e0bfcc15 	stw	r2,-208(fp)
  8175c4:	e0bfcc17 	ldw	r2,-208(fp)
  8175c8:	e0bfe08d 	sth	r2,-126(fp)
  8175cc:	e0bfd017 	ldw	r2,-192(fp)
  8175d0:	10800517 	ldw	r2,20(r2)
  8175d4:	e0bfda15 	stw	r2,-152(fp)
  8175d8:	e0bfda17 	ldw	r2,-152(fp)
  8175dc:	10004626 	beq	r2,zero,8176f8 <decompress_smooth_data+0xabc>
  8175e0:	e0bfdd0b 	ldhu	r2,-140(fp)
  8175e4:	10bfffcc 	andi	r2,r2,65535
  8175e8:	10a0001c 	xori	r2,r2,32768
  8175ec:	10a00004 	addi	r2,r2,-32768
  8175f0:	1000411e 	bne	r2,zero,8176f8 <decompress_smooth_data+0xabc>
  8175f4:	01400244 	movi	r5,9
  8175f8:	e13fd217 	ldw	r4,-184(fp)
  8175fc:	08301e80 	call	8301e8 <__mulsi3>
  817600:	1009883a 	mov	r4,r2
  817604:	e0ffc617 	ldw	r3,-232(fp)
  817608:	e0bfc817 	ldw	r2,-224(fp)
  81760c:	1887883a 	add	r3,r3,r2
  817610:	e0bfc717 	ldw	r2,-228(fp)
  817614:	1085883a 	add	r2,r2,r2
  817618:	1885c83a 	sub	r2,r3,r2
  81761c:	100b883a 	mov	r5,r2
  817620:	08301e80 	call	8301e8 <__mulsi3>
  817624:	e0bfdb15 	stw	r2,-148(fp)
  817628:	e0bfdb17 	ldw	r2,-148(fp)
  81762c:	10001716 	blt	r2,zero,81768c <decompress_smooth_data+0xa50>
  817630:	e0bfd717 	ldw	r2,-164(fp)
  817634:	100691fa 	slli	r3,r2,7
  817638:	e0bfdb17 	ldw	r2,-148(fp)
  81763c:	1887883a 	add	r3,r3,r2
  817640:	e0bfd717 	ldw	r2,-164(fp)
  817644:	1004923a 	slli	r2,r2,8
  817648:	100b883a 	mov	r5,r2
  81764c:	1809883a 	mov	r4,r3
  817650:	08300340 	call	830034 <__divsi3>
  817654:	e0bfcc15 	stw	r2,-208(fp)
  817658:	e0bfda17 	ldw	r2,-152(fp)
  81765c:	0080240e 	bge	zero,r2,8176f0 <decompress_smooth_data+0xab4>
  817660:	00c00044 	movi	r3,1
  817664:	e0bfda17 	ldw	r2,-152(fp)
  817668:	1884983a 	sll	r2,r3,r2
  81766c:	e0ffcc17 	ldw	r3,-208(fp)
  817670:	18801f16 	blt	r3,r2,8176f0 <decompress_smooth_data+0xab4>
  817674:	00c00044 	movi	r3,1
  817678:	e0bfda17 	ldw	r2,-152(fp)
  81767c:	1884983a 	sll	r2,r3,r2
  817680:	10bfffc4 	addi	r2,r2,-1
  817684:	e0bfcc15 	stw	r2,-208(fp)
  817688:	00001906 	br	8176f0 <decompress_smooth_data+0xab4>
  81768c:	e0bfd717 	ldw	r2,-164(fp)
  817690:	100691fa 	slli	r3,r2,7
  817694:	e0bfdb17 	ldw	r2,-148(fp)
  817698:	1887c83a 	sub	r3,r3,r2
  81769c:	e0bfd717 	ldw	r2,-164(fp)
  8176a0:	1004923a 	slli	r2,r2,8
  8176a4:	100b883a 	mov	r5,r2
  8176a8:	1809883a 	mov	r4,r3
  8176ac:	08300340 	call	830034 <__divsi3>
  8176b0:	e0bfcc15 	stw	r2,-208(fp)
  8176b4:	e0bfda17 	ldw	r2,-152(fp)
  8176b8:	00800a0e 	bge	zero,r2,8176e4 <decompress_smooth_data+0xaa8>
  8176bc:	00c00044 	movi	r3,1
  8176c0:	e0bfda17 	ldw	r2,-152(fp)
  8176c4:	1884983a 	sll	r2,r3,r2
  8176c8:	e0ffcc17 	ldw	r3,-208(fp)
  8176cc:	18800516 	blt	r3,r2,8176e4 <decompress_smooth_data+0xaa8>
  8176d0:	00c00044 	movi	r3,1
  8176d4:	e0bfda17 	ldw	r2,-152(fp)
  8176d8:	1884983a 	sll	r2,r3,r2
  8176dc:	10bfffc4 	addi	r2,r2,-1
  8176e0:	e0bfcc15 	stw	r2,-208(fp)
  8176e4:	e0bfcc17 	ldw	r2,-208(fp)
  8176e8:	0085c83a 	sub	r2,zero,r2
  8176ec:	e0bfcc15 	stw	r2,-208(fp)
  8176f0:	e0bfcc17 	ldw	r2,-208(fp)
  8176f4:	e0bfdd0d 	sth	r2,-140(fp)
  8176f8:	e0ffdc04 	addi	r3,fp,-144
  8176fc:	e0bfbf17 	ldw	r2,-260(fp)
  817700:	d8800015 	stw	r2,0(sp)
  817704:	e0bfd817 	ldw	r2,-160(fp)
  817708:	e1ffbe17 	ldw	r7,-264(fp)
  81770c:	180d883a 	mov	r6,r3
  817710:	e17fc017 	ldw	r5,-256(fp)
  817714:	e13ffc17 	ldw	r4,-16(fp)
  817718:	103ee83a 	callr	r2
  81771c:	e0bfc417 	ldw	r2,-240(fp)
  817720:	e0bfc315 	stw	r2,-244(fp)
  817724:	e0bfc517 	ldw	r2,-236(fp)
  817728:	e0bfc415 	stw	r2,-240(fp)
  81772c:	e0bfc717 	ldw	r2,-228(fp)
  817730:	e0bfc615 	stw	r2,-232(fp)
  817734:	e0bfc817 	ldw	r2,-224(fp)
  817738:	e0bfc715 	stw	r2,-228(fp)
  81773c:	e0bfca17 	ldw	r2,-216(fp)
  817740:	e0bfc915 	stw	r2,-220(fp)
  817744:	e0bfcb17 	ldw	r2,-212(fp)
  817748:	e0bfca15 	stw	r2,-216(fp)
  81774c:	e0bfbb17 	ldw	r2,-276(fp)
  817750:	10802004 	addi	r2,r2,128
  817754:	e0bfbb15 	stw	r2,-276(fp)
  817758:	e0bfbc17 	ldw	r2,-272(fp)
  81775c:	10802004 	addi	r2,r2,128
  817760:	e0bfbc15 	stw	r2,-272(fp)
  817764:	e0bfbd17 	ldw	r2,-268(fp)
  817768:	10802004 	addi	r2,r2,128
  81776c:	e0bfbd15 	stw	r2,-268(fp)
  817770:	e0bfc017 	ldw	r2,-256(fp)
  817774:	10800917 	ldw	r2,36(r2)
  817778:	1007883a 	mov	r3,r2
  81777c:	e0bfbf17 	ldw	r2,-260(fp)
  817780:	10c5883a 	add	r2,r2,r3
  817784:	e0bfbf15 	stw	r2,-260(fp)
  817788:	e0bfb517 	ldw	r2,-300(fp)
  81778c:	10800044 	addi	r2,r2,1
  817790:	e0bfb515 	stw	r2,-300(fp)
  817794:	e0bfb517 	ldw	r2,-300(fp)
  817798:	e0ffd917 	ldw	r3,-156(fp)
  81779c:	18be472e 	bgeu	r3,r2,8170bc <__alt_mem_epcs_flash_controller_0+0xff80e0bc>
  8177a0:	e0bfc017 	ldw	r2,-256(fp)
  8177a4:	10800a17 	ldw	r2,40(r2)
  8177a8:	1085883a 	add	r2,r2,r2
  8177ac:	1085883a 	add	r2,r2,r2
  8177b0:	1007883a 	mov	r3,r2
  8177b4:	e0bfbe17 	ldw	r2,-264(fp)
  8177b8:	10c5883a 	add	r2,r2,r3
  8177bc:	e0bfbe15 	stw	r2,-264(fp)
  8177c0:	e0bfb717 	ldw	r2,-292(fp)
  8177c4:	10800044 	addi	r2,r2,1
  8177c8:	e0bfb715 	stw	r2,-292(fp)
  8177cc:	e0ffb717 	ldw	r3,-292(fp)
  8177d0:	e0bfb817 	ldw	r2,-288(fp)
  8177d4:	18bde816 	blt	r3,r2,816f78 <__alt_mem_epcs_flash_controller_0+0xff80df78>
  8177d8:	00000106 	br	8177e0 <decompress_smooth_data+0xba4>
  8177dc:	0001883a 	nop
  8177e0:	e0bfb617 	ldw	r2,-296(fp)
  8177e4:	10800044 	addi	r2,r2,1
  8177e8:	e0bfb615 	stw	r2,-296(fp)
  8177ec:	e0bfc017 	ldw	r2,-256(fp)
  8177f0:	10801604 	addi	r2,r2,88
  8177f4:	e0bfc015 	stw	r2,-256(fp)
  8177f8:	e0bffc17 	ldw	r2,-16(fp)
  8177fc:	10800917 	ldw	r2,36(r2)
  817800:	e0ffb617 	ldw	r3,-296(fp)
  817804:	18bd4616 	blt	r3,r2,816d20 <__alt_mem_epcs_flash_controller_0+0xff80dd20>
  817808:	e0bffc17 	ldw	r2,-16(fp)
  81780c:	10802717 	ldw	r2,156(r2)
  817810:	10c00044 	addi	r3,r2,1
  817814:	e0bffc17 	ldw	r2,-16(fp)
  817818:	10c02715 	stw	r3,156(r2)
  81781c:	e0bffc17 	ldw	r2,-16(fp)
  817820:	10c02717 	ldw	r3,156(r2)
  817824:	e0bffc17 	ldw	r2,-16(fp)
  817828:	10805317 	ldw	r2,332(r2)
  81782c:	1880022e 	bgeu	r3,r2,817838 <decompress_smooth_data+0xbfc>
  817830:	008000c4 	movi	r2,3
  817834:	00000106 	br	81783c <decompress_smooth_data+0xc00>
  817838:	00800104 	movi	r2,4
  81783c:	e6fffe04 	addi	sp,fp,-8
  817840:	dfc00317 	ldw	ra,12(sp)
  817844:	df000217 	ldw	fp,8(sp)
  817848:	dc400117 	ldw	r17,4(sp)
  81784c:	dc000017 	ldw	r16,0(sp)
  817850:	dec00404 	addi	sp,sp,16
  817854:	f800283a 	ret

00817858 <jinit_d_coef_controller>:
  817858:	defff204 	addi	sp,sp,-56
  81785c:	dfc00d15 	stw	ra,52(sp)
  817860:	df000c15 	stw	fp,48(sp)
  817864:	dc400b15 	stw	r17,44(sp)
  817868:	dc000a15 	stw	r16,40(sp)
  81786c:	df000c04 	addi	fp,sp,48
  817870:	e13ffc15 	stw	r4,-16(fp)
  817874:	e17ffd15 	stw	r5,-12(fp)
  817878:	e0bffc17 	ldw	r2,-16(fp)
  81787c:	10800117 	ldw	r2,4(r2)
  817880:	10800017 	ldw	r2,0(r2)
  817884:	01801d04 	movi	r6,116
  817888:	01400044 	movi	r5,1
  81788c:	e13ffc17 	ldw	r4,-16(fp)
  817890:	103ee83a 	callr	r2
  817894:	e0bffa15 	stw	r2,-24(fp)
  817898:	e0bffc17 	ldw	r2,-16(fp)
  81789c:	e0fffa17 	ldw	r3,-24(fp)
  8178a0:	10c07115 	stw	r3,452(r2)
  8178a4:	e0fffa17 	ldw	r3,-24(fp)
  8178a8:	00802074 	movhi	r2,129
  8178ac:	1097ce04 	addi	r2,r2,24376
  8178b0:	18800015 	stw	r2,0(r3)
  8178b4:	e0fffa17 	ldw	r3,-24(fp)
  8178b8:	00802074 	movhi	r2,129
  8178bc:	1097dd04 	addi	r2,r2,24436
  8178c0:	18800215 	stw	r2,8(r3)
  8178c4:	e0bffa17 	ldw	r2,-24(fp)
  8178c8:	10001c15 	stw	zero,112(r2)
  8178cc:	e0bffd17 	ldw	r2,-12(fp)
  8178d0:	10004c26 	beq	r2,zero,817a04 <jinit_d_coef_controller+0x1ac>
  8178d4:	e03ff615 	stw	zero,-40(fp)
  8178d8:	e0bffc17 	ldw	r2,-16(fp)
  8178dc:	10803617 	ldw	r2,216(r2)
  8178e0:	e0bff815 	stw	r2,-32(fp)
  8178e4:	00003606 	br	8179c0 <jinit_d_coef_controller+0x168>
  8178e8:	e0bff817 	ldw	r2,-32(fp)
  8178ec:	10800317 	ldw	r2,12(r2)
  8178f0:	e0bff715 	stw	r2,-36(fp)
  8178f4:	e0bffc17 	ldw	r2,-16(fp)
  8178f8:	10803817 	ldw	r2,224(r2)
  8178fc:	10000526 	beq	r2,zero,817914 <jinit_d_coef_controller+0xbc>
  817900:	e0fff717 	ldw	r3,-36(fp)
  817904:	1805883a 	mov	r2,r3
  817908:	1085883a 	add	r2,r2,r2
  81790c:	10c5883a 	add	r2,r2,r3
  817910:	e0bff715 	stw	r2,-36(fp)
  817914:	e0bffc17 	ldw	r2,-16(fp)
  817918:	10800117 	ldw	r2,4(r2)
  81791c:	14000517 	ldw	r16,20(r2)
  817920:	e0bff817 	ldw	r2,-32(fp)
  817924:	10800717 	ldw	r2,28(r2)
  817928:	1007883a 	mov	r3,r2
  81792c:	e0bff817 	ldw	r2,-32(fp)
  817930:	10800217 	ldw	r2,8(r2)
  817934:	100b883a 	mov	r5,r2
  817938:	1809883a 	mov	r4,r3
  81793c:	0813bd40 	call	813bd4 <jround_up>
  817940:	1023883a 	mov	r17,r2
  817944:	e0bff817 	ldw	r2,-32(fp)
  817948:	10800817 	ldw	r2,32(r2)
  81794c:	1007883a 	mov	r3,r2
  817950:	e0bff817 	ldw	r2,-32(fp)
  817954:	10800317 	ldw	r2,12(r2)
  817958:	100b883a 	mov	r5,r2
  81795c:	1809883a 	mov	r4,r3
  817960:	0813bd40 	call	813bd4 <jround_up>
  817964:	1007883a 	mov	r3,r2
  817968:	e0bff717 	ldw	r2,-36(fp)
  81796c:	d8800115 	stw	r2,4(sp)
  817970:	d8c00015 	stw	r3,0(sp)
  817974:	880f883a 	mov	r7,r17
  817978:	01800044 	movi	r6,1
  81797c:	01400044 	movi	r5,1
  817980:	e13ffc17 	ldw	r4,-16(fp)
  817984:	803ee83a 	callr	r16
  817988:	1009883a 	mov	r4,r2
  81798c:	e0fffa17 	ldw	r3,-24(fp)
  817990:	e0bff617 	ldw	r2,-40(fp)
  817994:	10800484 	addi	r2,r2,18
  817998:	1085883a 	add	r2,r2,r2
  81799c:	1085883a 	add	r2,r2,r2
  8179a0:	1885883a 	add	r2,r3,r2
  8179a4:	11000015 	stw	r4,0(r2)
  8179a8:	e0bff617 	ldw	r2,-40(fp)
  8179ac:	10800044 	addi	r2,r2,1
  8179b0:	e0bff615 	stw	r2,-40(fp)
  8179b4:	e0bff817 	ldw	r2,-32(fp)
  8179b8:	10801604 	addi	r2,r2,88
  8179bc:	e0bff815 	stw	r2,-32(fp)
  8179c0:	e0bffc17 	ldw	r2,-16(fp)
  8179c4:	10800917 	ldw	r2,36(r2)
  8179c8:	e0fff617 	ldw	r3,-40(fp)
  8179cc:	18bfc616 	blt	r3,r2,8178e8 <__alt_mem_epcs_flash_controller_0+0xff80e8e8>
  8179d0:	e0fffa17 	ldw	r3,-24(fp)
  8179d4:	00802074 	movhi	r2,129
  8179d8:	1098f304 	addi	r2,r2,25548
  8179dc:	18800115 	stw	r2,4(r3)
  8179e0:	e0fffa17 	ldw	r3,-24(fp)
  8179e4:	00802074 	movhi	r2,129
  8179e8:	1099bf04 	addi	r2,r2,26364
  8179ec:	18800315 	stw	r2,12(r3)
  8179f0:	e0bffa17 	ldw	r2,-24(fp)
  8179f4:	10c01204 	addi	r3,r2,72
  8179f8:	e0bffa17 	ldw	r2,-24(fp)
  8179fc:	10c00415 	stw	r3,16(r2)
  817a00:	00002c06 	br	817ab4 <jinit_d_coef_controller+0x25c>
  817a04:	e0bffc17 	ldw	r2,-16(fp)
  817a08:	10800117 	ldw	r2,4(r2)
  817a0c:	10800117 	ldw	r2,4(r2)
  817a10:	01814004 	movi	r6,1280
  817a14:	01400044 	movi	r5,1
  817a18:	e13ffc17 	ldw	r4,-16(fp)
  817a1c:	103ee83a 	callr	r2
  817a20:	e0bffb15 	stw	r2,-20(fp)
  817a24:	e03ff915 	stw	zero,-28(fp)
  817a28:	00000e06 	br	817a64 <jinit_d_coef_controller+0x20c>
  817a2c:	e0bff917 	ldw	r2,-28(fp)
  817a30:	100491fa 	slli	r2,r2,7
  817a34:	e0fffb17 	ldw	r3,-20(fp)
  817a38:	1887883a 	add	r3,r3,r2
  817a3c:	e13ffa17 	ldw	r4,-24(fp)
  817a40:	e0bff917 	ldw	r2,-28(fp)
  817a44:	10800204 	addi	r2,r2,8
  817a48:	1085883a 	add	r2,r2,r2
  817a4c:	1085883a 	add	r2,r2,r2
  817a50:	2085883a 	add	r2,r4,r2
  817a54:	10c00015 	stw	r3,0(r2)
  817a58:	e0bff917 	ldw	r2,-28(fp)
  817a5c:	10800044 	addi	r2,r2,1
  817a60:	e0bff915 	stw	r2,-28(fp)
  817a64:	e0bff917 	ldw	r2,-28(fp)
  817a68:	10800290 	cmplti	r2,r2,10
  817a6c:	103fef1e 	bne	r2,zero,817a2c <__alt_mem_epcs_flash_controller_0+0xff80ea2c>
  817a70:	e0bffc17 	ldw	r2,-16(fp)
  817a74:	10806d17 	ldw	r2,436(r2)
  817a78:	1000041e 	bne	r2,zero,817a8c <jinit_d_coef_controller+0x234>
  817a7c:	01814004 	movi	r6,1280
  817a80:	000b883a 	mov	r5,zero
  817a84:	e13ffb17 	ldw	r4,-20(fp)
  817a88:	0833d940 	call	833d94 <memset>
  817a8c:	e0fffa17 	ldw	r3,-24(fp)
  817a90:	00802074 	movhi	r2,129
  817a94:	1098ea04 	addi	r2,r2,25512
  817a98:	18800115 	stw	r2,4(r3)
  817a9c:	e0fffa17 	ldw	r3,-24(fp)
  817aa0:	00802074 	movhi	r2,129
  817aa4:	1097ff04 	addi	r2,r2,24572
  817aa8:	18800315 	stw	r2,12(r3)
  817aac:	e0bffa17 	ldw	r2,-24(fp)
  817ab0:	10000415 	stw	zero,16(r2)
  817ab4:	0001883a 	nop
  817ab8:	e6fffe04 	addi	sp,fp,-8
  817abc:	dfc00317 	ldw	ra,12(sp)
  817ac0:	df000217 	ldw	fp,8(sp)
  817ac4:	dc400117 	ldw	r17,4(sp)
  817ac8:	dc000017 	ldw	r16,0(sp)
  817acc:	dec00404 	addi	sp,sp,16
  817ad0:	f800283a 	ret

00817ad4 <build_ycc_rgb_table>:
  817ad4:	defff904 	addi	sp,sp,-28
  817ad8:	dfc00615 	stw	ra,24(sp)
  817adc:	df000515 	stw	fp,20(sp)
  817ae0:	dc000415 	stw	r16,16(sp)
  817ae4:	df000504 	addi	fp,sp,20
  817ae8:	e13ffe15 	stw	r4,-8(fp)
  817aec:	e0bffe17 	ldw	r2,-8(fp)
  817af0:	10807817 	ldw	r2,480(r2)
  817af4:	e0bffd15 	stw	r2,-12(fp)
  817af8:	e0bffe17 	ldw	r2,-8(fp)
  817afc:	10800117 	ldw	r2,4(r2)
  817b00:	10800017 	ldw	r2,0(r2)
  817b04:	01810004 	movi	r6,1024
  817b08:	01400044 	movi	r5,1
  817b0c:	e13ffe17 	ldw	r4,-8(fp)
  817b10:	103ee83a 	callr	r2
  817b14:	1007883a 	mov	r3,r2
  817b18:	e0bffd17 	ldw	r2,-12(fp)
  817b1c:	10c00215 	stw	r3,8(r2)
  817b20:	e0bffe17 	ldw	r2,-8(fp)
  817b24:	10800117 	ldw	r2,4(r2)
  817b28:	10800017 	ldw	r2,0(r2)
  817b2c:	01810004 	movi	r6,1024
  817b30:	01400044 	movi	r5,1
  817b34:	e13ffe17 	ldw	r4,-8(fp)
  817b38:	103ee83a 	callr	r2
  817b3c:	1007883a 	mov	r3,r2
  817b40:	e0bffd17 	ldw	r2,-12(fp)
  817b44:	10c00315 	stw	r3,12(r2)
  817b48:	e0bffe17 	ldw	r2,-8(fp)
  817b4c:	10800117 	ldw	r2,4(r2)
  817b50:	10800017 	ldw	r2,0(r2)
  817b54:	01810004 	movi	r6,1024
  817b58:	01400044 	movi	r5,1
  817b5c:	e13ffe17 	ldw	r4,-8(fp)
  817b60:	103ee83a 	callr	r2
  817b64:	1007883a 	mov	r3,r2
  817b68:	e0bffd17 	ldw	r2,-12(fp)
  817b6c:	10c00415 	stw	r3,16(r2)
  817b70:	e0bffe17 	ldw	r2,-8(fp)
  817b74:	10800117 	ldw	r2,4(r2)
  817b78:	10800017 	ldw	r2,0(r2)
  817b7c:	01810004 	movi	r6,1024
  817b80:	01400044 	movi	r5,1
  817b84:	e13ffe17 	ldw	r4,-8(fp)
  817b88:	103ee83a 	callr	r2
  817b8c:	1007883a 	mov	r3,r2
  817b90:	e0bffd17 	ldw	r2,-12(fp)
  817b94:	10c00515 	stw	r3,20(r2)
  817b98:	e03ffb15 	stw	zero,-20(fp)
  817b9c:	00bfe004 	movi	r2,-128
  817ba0:	e0bffc15 	stw	r2,-16(fp)
  817ba4:	00003c06 	br	817c98 <build_ycc_rgb_table+0x1c4>
  817ba8:	e0bffd17 	ldw	r2,-12(fp)
  817bac:	10c00217 	ldw	r3,8(r2)
  817bb0:	e0bffb17 	ldw	r2,-20(fp)
  817bb4:	1085883a 	add	r2,r2,r2
  817bb8:	1085883a 	add	r2,r2,r2
  817bbc:	18a1883a 	add	r16,r3,r2
  817bc0:	01400074 	movhi	r5,1
  817bc4:	2959ba44 	addi	r5,r5,26345
  817bc8:	e13ffc17 	ldw	r4,-16(fp)
  817bcc:	08301e80 	call	8301e8 <__mulsi3>
  817bd0:	1007883a 	mov	r3,r2
  817bd4:	00a00014 	movui	r2,32768
  817bd8:	1885883a 	add	r2,r3,r2
  817bdc:	1005d43a 	srai	r2,r2,16
  817be0:	80800015 	stw	r2,0(r16)
  817be4:	e0bffd17 	ldw	r2,-12(fp)
  817be8:	10c00317 	ldw	r3,12(r2)
  817bec:	e0bffb17 	ldw	r2,-20(fp)
  817bf0:	1085883a 	add	r2,r2,r2
  817bf4:	1085883a 	add	r2,r2,r2
  817bf8:	18a1883a 	add	r16,r3,r2
  817bfc:	014000b4 	movhi	r5,2
  817c00:	29716884 	addi	r5,r5,-14942
  817c04:	e13ffc17 	ldw	r4,-16(fp)
  817c08:	08301e80 	call	8301e8 <__mulsi3>
  817c0c:	1007883a 	mov	r3,r2
  817c10:	00a00014 	movui	r2,32768
  817c14:	1885883a 	add	r2,r3,r2
  817c18:	1005d43a 	srai	r2,r2,16
  817c1c:	80800015 	stw	r2,0(r16)
  817c20:	e0bffd17 	ldw	r2,-12(fp)
  817c24:	10c00417 	ldw	r3,16(r2)
  817c28:	e0bffb17 	ldw	r2,-20(fp)
  817c2c:	1085883a 	add	r2,r2,r2
  817c30:	1085883a 	add	r2,r2,r2
  817c34:	18a1883a 	add	r16,r3,r2
  817c38:	017ffff4 	movhi	r5,65535
  817c3c:	29524b84 	addi	r5,r5,18734
  817c40:	e13ffc17 	ldw	r4,-16(fp)
  817c44:	08301e80 	call	8301e8 <__mulsi3>
  817c48:	80800015 	stw	r2,0(r16)
  817c4c:	e0bffd17 	ldw	r2,-12(fp)
  817c50:	10c00517 	ldw	r3,20(r2)
  817c54:	e0bffb17 	ldw	r2,-20(fp)
  817c58:	1085883a 	add	r2,r2,r2
  817c5c:	1085883a 	add	r2,r2,r2
  817c60:	18a1883a 	add	r16,r3,r2
  817c64:	0169f9c4 	movi	r5,-22553
  817c68:	e13ffc17 	ldw	r4,-16(fp)
  817c6c:	08301e80 	call	8301e8 <__mulsi3>
  817c70:	1007883a 	mov	r3,r2
  817c74:	00a00014 	movui	r2,32768
  817c78:	1885883a 	add	r2,r3,r2
  817c7c:	80800015 	stw	r2,0(r16)
  817c80:	e0bffb17 	ldw	r2,-20(fp)
  817c84:	10800044 	addi	r2,r2,1
  817c88:	e0bffb15 	stw	r2,-20(fp)
  817c8c:	e0bffc17 	ldw	r2,-16(fp)
  817c90:	10800044 	addi	r2,r2,1
  817c94:	e0bffc15 	stw	r2,-16(fp)
  817c98:	e0bffb17 	ldw	r2,-20(fp)
  817c9c:	10804010 	cmplti	r2,r2,256
  817ca0:	103fc11e 	bne	r2,zero,817ba8 <__alt_mem_epcs_flash_controller_0+0xff80eba8>
  817ca4:	0001883a 	nop
  817ca8:	e6ffff04 	addi	sp,fp,-4
  817cac:	dfc00217 	ldw	ra,8(sp)
  817cb0:	df000117 	ldw	fp,4(sp)
  817cb4:	dc000017 	ldw	r16,0(sp)
  817cb8:	dec00304 	addi	sp,sp,12
  817cbc:	f800283a 	ret

00817cc0 <build_bg_ycc_rgb_table>:
  817cc0:	defff904 	addi	sp,sp,-28
  817cc4:	dfc00615 	stw	ra,24(sp)
  817cc8:	df000515 	stw	fp,20(sp)
  817ccc:	dc000415 	stw	r16,16(sp)
  817cd0:	df000504 	addi	fp,sp,20
  817cd4:	e13ffe15 	stw	r4,-8(fp)
  817cd8:	e0bffe17 	ldw	r2,-8(fp)
  817cdc:	10807817 	ldw	r2,480(r2)
  817ce0:	e0bffd15 	stw	r2,-12(fp)
  817ce4:	e0bffe17 	ldw	r2,-8(fp)
  817ce8:	10800117 	ldw	r2,4(r2)
  817cec:	10800017 	ldw	r2,0(r2)
  817cf0:	01810004 	movi	r6,1024
  817cf4:	01400044 	movi	r5,1
  817cf8:	e13ffe17 	ldw	r4,-8(fp)
  817cfc:	103ee83a 	callr	r2
  817d00:	1007883a 	mov	r3,r2
  817d04:	e0bffd17 	ldw	r2,-12(fp)
  817d08:	10c00215 	stw	r3,8(r2)
  817d0c:	e0bffe17 	ldw	r2,-8(fp)
  817d10:	10800117 	ldw	r2,4(r2)
  817d14:	10800017 	ldw	r2,0(r2)
  817d18:	01810004 	movi	r6,1024
  817d1c:	01400044 	movi	r5,1
  817d20:	e13ffe17 	ldw	r4,-8(fp)
  817d24:	103ee83a 	callr	r2
  817d28:	1007883a 	mov	r3,r2
  817d2c:	e0bffd17 	ldw	r2,-12(fp)
  817d30:	10c00315 	stw	r3,12(r2)
  817d34:	e0bffe17 	ldw	r2,-8(fp)
  817d38:	10800117 	ldw	r2,4(r2)
  817d3c:	10800017 	ldw	r2,0(r2)
  817d40:	01810004 	movi	r6,1024
  817d44:	01400044 	movi	r5,1
  817d48:	e13ffe17 	ldw	r4,-8(fp)
  817d4c:	103ee83a 	callr	r2
  817d50:	1007883a 	mov	r3,r2
  817d54:	e0bffd17 	ldw	r2,-12(fp)
  817d58:	10c00415 	stw	r3,16(r2)
  817d5c:	e0bffe17 	ldw	r2,-8(fp)
  817d60:	10800117 	ldw	r2,4(r2)
  817d64:	10800017 	ldw	r2,0(r2)
  817d68:	01810004 	movi	r6,1024
  817d6c:	01400044 	movi	r5,1
  817d70:	e13ffe17 	ldw	r4,-8(fp)
  817d74:	103ee83a 	callr	r2
  817d78:	1007883a 	mov	r3,r2
  817d7c:	e0bffd17 	ldw	r2,-12(fp)
  817d80:	10c00515 	stw	r3,20(r2)
  817d84:	e03ffb15 	stw	zero,-20(fp)
  817d88:	00bfe004 	movi	r2,-128
  817d8c:	e0bffc15 	stw	r2,-16(fp)
  817d90:	00003d06 	br	817e88 <build_bg_ycc_rgb_table+0x1c8>
  817d94:	e0bffd17 	ldw	r2,-12(fp)
  817d98:	10c00217 	ldw	r3,8(r2)
  817d9c:	e0bffb17 	ldw	r2,-20(fp)
  817da0:	1085883a 	add	r2,r2,r2
  817da4:	1085883a 	add	r2,r2,r2
  817da8:	18a1883a 	add	r16,r3,r2
  817dac:	014000f4 	movhi	r5,3
  817db0:	297374c4 	addi	r5,r5,-12845
  817db4:	e13ffc17 	ldw	r4,-16(fp)
  817db8:	08301e80 	call	8301e8 <__mulsi3>
  817dbc:	1007883a 	mov	r3,r2
  817dc0:	00a00014 	movui	r2,32768
  817dc4:	1885883a 	add	r2,r3,r2
  817dc8:	1005d43a 	srai	r2,r2,16
  817dcc:	80800015 	stw	r2,0(r16)
  817dd0:	e0bffd17 	ldw	r2,-12(fp)
  817dd4:	10c00317 	ldw	r3,12(r2)
  817dd8:	e0bffb17 	ldw	r2,-20(fp)
  817ddc:	1085883a 	add	r2,r2,r2
  817de0:	1085883a 	add	r2,r2,r2
  817de4:	18a1883a 	add	r16,r3,r2
  817de8:	01400134 	movhi	r5,4
  817dec:	2962d104 	addi	r5,r5,-29884
  817df0:	e13ffc17 	ldw	r4,-16(fp)
  817df4:	08301e80 	call	8301e8 <__mulsi3>
  817df8:	1007883a 	mov	r3,r2
  817dfc:	00a00014 	movui	r2,32768
  817e00:	1885883a 	add	r2,r3,r2
  817e04:	1005d43a 	srai	r2,r2,16
  817e08:	80800015 	stw	r2,0(r16)
  817e0c:	e0bffd17 	ldw	r2,-12(fp)
  817e10:	10c00417 	ldw	r3,16(r2)
  817e14:	e0bffb17 	ldw	r2,-20(fp)
  817e18:	1085883a 	add	r2,r2,r2
  817e1c:	1085883a 	add	r2,r2,r2
  817e20:	18a1883a 	add	r16,r3,r2
  817e24:	017ffff4 	movhi	r5,65535
  817e28:	29649744 	addi	r5,r5,-28067
  817e2c:	e13ffc17 	ldw	r4,-16(fp)
  817e30:	08301e80 	call	8301e8 <__mulsi3>
  817e34:	80800015 	stw	r2,0(r16)
  817e38:	e0bffd17 	ldw	r2,-12(fp)
  817e3c:	10c00517 	ldw	r3,20(r2)
  817e40:	e0bffb17 	ldw	r2,-20(fp)
  817e44:	1085883a 	add	r2,r2,r2
  817e48:	1085883a 	add	r2,r2,r2
  817e4c:	18a1883a 	add	r16,r3,r2
  817e50:	017ffff4 	movhi	r5,65535
  817e54:	2953f344 	addi	r5,r5,20429
  817e58:	e13ffc17 	ldw	r4,-16(fp)
  817e5c:	08301e80 	call	8301e8 <__mulsi3>
  817e60:	1007883a 	mov	r3,r2
  817e64:	00a00014 	movui	r2,32768
  817e68:	1885883a 	add	r2,r3,r2
  817e6c:	80800015 	stw	r2,0(r16)
  817e70:	e0bffb17 	ldw	r2,-20(fp)
  817e74:	10800044 	addi	r2,r2,1
  817e78:	e0bffb15 	stw	r2,-20(fp)
  817e7c:	e0bffc17 	ldw	r2,-16(fp)
  817e80:	10800044 	addi	r2,r2,1
  817e84:	e0bffc15 	stw	r2,-16(fp)
  817e88:	e0bffb17 	ldw	r2,-20(fp)
  817e8c:	10804010 	cmplti	r2,r2,256
  817e90:	103fc01e 	bne	r2,zero,817d94 <__alt_mem_epcs_flash_controller_0+0xff80ed94>
  817e94:	0001883a 	nop
  817e98:	e6ffff04 	addi	sp,fp,-4
  817e9c:	dfc00217 	ldw	ra,8(sp)
  817ea0:	df000117 	ldw	fp,4(sp)
  817ea4:	dc000017 	ldw	r16,0(sp)
  817ea8:	dec00304 	addi	sp,sp,12
  817eac:	f800283a 	ret

00817eb0 <ycc_rgb_convert>:
  817eb0:	deffec04 	addi	sp,sp,-80
  817eb4:	df001315 	stw	fp,76(sp)
  817eb8:	ddc01215 	stw	r23,72(sp)
  817ebc:	dd801115 	stw	r22,68(sp)
  817ec0:	dd401015 	stw	r21,64(sp)
  817ec4:	dd000f15 	stw	r20,60(sp)
  817ec8:	dcc00e15 	stw	r19,56(sp)
  817ecc:	dc800d15 	stw	r18,52(sp)
  817ed0:	dc400c15 	stw	r17,48(sp)
  817ed4:	dc000b15 	stw	r16,44(sp)
  817ed8:	df001304 	addi	fp,sp,76
  817edc:	e13fef15 	stw	r4,-68(fp)
  817ee0:	e17ff015 	stw	r5,-64(fp)
  817ee4:	e1bff115 	stw	r6,-60(fp)
  817ee8:	e1fff215 	stw	r7,-56(fp)
  817eec:	e0bfef17 	ldw	r2,-68(fp)
  817ef0:	10807817 	ldw	r2,480(r2)
  817ef4:	e0bfed15 	stw	r2,-76(fp)
  817ef8:	e0bfef17 	ldw	r2,-68(fp)
  817efc:	10801c17 	ldw	r2,112(r2)
  817f00:	e0bfee15 	stw	r2,-72(fp)
  817f04:	e0bfef17 	ldw	r2,-68(fp)
  817f08:	14805417 	ldw	r18,336(r2)
  817f0c:	e0bfed17 	ldw	r2,-76(fp)
  817f10:	15000217 	ldw	r20,8(r2)
  817f14:	e0bfed17 	ldw	r2,-76(fp)
  817f18:	15400317 	ldw	r21,12(r2)
  817f1c:	e0bfed17 	ldw	r2,-76(fp)
  817f20:	15800417 	ldw	r22,16(r2)
  817f24:	e0bfed17 	ldw	r2,-76(fp)
  817f28:	15c00517 	ldw	r23,20(r2)
  817f2c:	00005906 	br	818094 <ycc_rgb_convert+0x1e4>
  817f30:	e0bff017 	ldw	r2,-64(fp)
  817f34:	10c00017 	ldw	r3,0(r2)
  817f38:	e0bff117 	ldw	r2,-60(fp)
  817f3c:	1085883a 	add	r2,r2,r2
  817f40:	1085883a 	add	r2,r2,r2
  817f44:	1885883a 	add	r2,r3,r2
  817f48:	10800017 	ldw	r2,0(r2)
  817f4c:	e0bff315 	stw	r2,-52(fp)
  817f50:	e0bff017 	ldw	r2,-64(fp)
  817f54:	10800104 	addi	r2,r2,4
  817f58:	10c00017 	ldw	r3,0(r2)
  817f5c:	e0bff117 	ldw	r2,-60(fp)
  817f60:	1085883a 	add	r2,r2,r2
  817f64:	1085883a 	add	r2,r2,r2
  817f68:	1885883a 	add	r2,r3,r2
  817f6c:	10800017 	ldw	r2,0(r2)
  817f70:	e0bff415 	stw	r2,-48(fp)
  817f74:	e0bff017 	ldw	r2,-64(fp)
  817f78:	10800204 	addi	r2,r2,8
  817f7c:	10c00017 	ldw	r3,0(r2)
  817f80:	e0bff117 	ldw	r2,-60(fp)
  817f84:	1085883a 	add	r2,r2,r2
  817f88:	1085883a 	add	r2,r2,r2
  817f8c:	1885883a 	add	r2,r3,r2
  817f90:	10800017 	ldw	r2,0(r2)
  817f94:	e0bff515 	stw	r2,-44(fp)
  817f98:	e0bff117 	ldw	r2,-60(fp)
  817f9c:	10800044 	addi	r2,r2,1
  817fa0:	e0bff115 	stw	r2,-60(fp)
  817fa4:	e0bff217 	ldw	r2,-56(fp)
  817fa8:	10c00104 	addi	r3,r2,4
  817fac:	e0fff215 	stw	r3,-56(fp)
  817fb0:	14400017 	ldw	r17,0(r2)
  817fb4:	0021883a 	mov	r16,zero
  817fb8:	00003406 	br	81808c <ycc_rgb_convert+0x1dc>
  817fbc:	e0fff317 	ldw	r3,-52(fp)
  817fc0:	1c05883a 	add	r2,r3,r16
  817fc4:	10800003 	ldbu	r2,0(r2)
  817fc8:	14c03fcc 	andi	r19,r2,255
  817fcc:	e0fff417 	ldw	r3,-48(fp)
  817fd0:	1c05883a 	add	r2,r3,r16
  817fd4:	10800003 	ldbu	r2,0(r2)
  817fd8:	10803fcc 	andi	r2,r2,255
  817fdc:	e0bff615 	stw	r2,-40(fp)
  817fe0:	e0fff517 	ldw	r3,-44(fp)
  817fe4:	1c05883a 	add	r2,r3,r16
  817fe8:	10800003 	ldbu	r2,0(r2)
  817fec:	10803fcc 	andi	r2,r2,255
  817ff0:	e0bff715 	stw	r2,-36(fp)
  817ff4:	e0bff717 	ldw	r2,-36(fp)
  817ff8:	1085883a 	add	r2,r2,r2
  817ffc:	1085883a 	add	r2,r2,r2
  818000:	a085883a 	add	r2,r20,r2
  818004:	10800017 	ldw	r2,0(r2)
  818008:	14c5883a 	add	r2,r2,r19
  81800c:	9085883a 	add	r2,r18,r2
  818010:	10800003 	ldbu	r2,0(r2)
  818014:	88800005 	stb	r2,0(r17)
  818018:	88c00044 	addi	r3,r17,1
  81801c:	e0bff617 	ldw	r2,-40(fp)
  818020:	1085883a 	add	r2,r2,r2
  818024:	1085883a 	add	r2,r2,r2
  818028:	b885883a 	add	r2,r23,r2
  81802c:	11000017 	ldw	r4,0(r2)
  818030:	e0bff717 	ldw	r2,-36(fp)
  818034:	1085883a 	add	r2,r2,r2
  818038:	1085883a 	add	r2,r2,r2
  81803c:	b085883a 	add	r2,r22,r2
  818040:	10800017 	ldw	r2,0(r2)
  818044:	2085883a 	add	r2,r4,r2
  818048:	1005d43a 	srai	r2,r2,16
  81804c:	14c5883a 	add	r2,r2,r19
  818050:	9085883a 	add	r2,r18,r2
  818054:	10800003 	ldbu	r2,0(r2)
  818058:	18800005 	stb	r2,0(r3)
  81805c:	88c00084 	addi	r3,r17,2
  818060:	e0bff617 	ldw	r2,-40(fp)
  818064:	1085883a 	add	r2,r2,r2
  818068:	1085883a 	add	r2,r2,r2
  81806c:	a885883a 	add	r2,r21,r2
  818070:	10800017 	ldw	r2,0(r2)
  818074:	14c5883a 	add	r2,r2,r19
  818078:	9085883a 	add	r2,r18,r2
  81807c:	10800003 	ldbu	r2,0(r2)
  818080:	18800005 	stb	r2,0(r3)
  818084:	8c4000c4 	addi	r17,r17,3
  818088:	84000044 	addi	r16,r16,1
  81808c:	e0bfee17 	ldw	r2,-72(fp)
  818090:	80bfca36 	bltu	r16,r2,817fbc <__alt_mem_epcs_flash_controller_0+0xff80efbc>
  818094:	e0800117 	ldw	r2,4(fp)
  818098:	10bfffc4 	addi	r2,r2,-1
  81809c:	e0800115 	stw	r2,4(fp)
  8180a0:	e0800117 	ldw	r2,4(fp)
  8180a4:	103fa20e 	bge	r2,zero,817f30 <__alt_mem_epcs_flash_controller_0+0xff80ef30>
  8180a8:	0001883a 	nop
  8180ac:	e6fff804 	addi	sp,fp,-32
  8180b0:	df000817 	ldw	fp,32(sp)
  8180b4:	ddc00717 	ldw	r23,28(sp)
  8180b8:	dd800617 	ldw	r22,24(sp)
  8180bc:	dd400517 	ldw	r21,20(sp)
  8180c0:	dd000417 	ldw	r20,16(sp)
  8180c4:	dcc00317 	ldw	r19,12(sp)
  8180c8:	dc800217 	ldw	r18,8(sp)
  8180cc:	dc400117 	ldw	r17,4(sp)
  8180d0:	dc000017 	ldw	r16,0(sp)
  8180d4:	dec00904 	addi	sp,sp,36
  8180d8:	f800283a 	ret

008180dc <build_rgb_y_table>:
  8180dc:	defff904 	addi	sp,sp,-28
  8180e0:	dfc00615 	stw	ra,24(sp)
  8180e4:	df000515 	stw	fp,20(sp)
  8180e8:	dc000415 	stw	r16,16(sp)
  8180ec:	df000504 	addi	fp,sp,20
  8180f0:	e13ffe15 	stw	r4,-8(fp)
  8180f4:	e0bffe17 	ldw	r2,-8(fp)
  8180f8:	10807817 	ldw	r2,480(r2)
  8180fc:	e0bffc15 	stw	r2,-16(fp)
  818100:	e0bffe17 	ldw	r2,-8(fp)
  818104:	10800117 	ldw	r2,4(r2)
  818108:	10800017 	ldw	r2,0(r2)
  81810c:	01830004 	movi	r6,3072
  818110:	01400044 	movi	r5,1
  818114:	e13ffe17 	ldw	r4,-8(fp)
  818118:	103ee83a 	callr	r2
  81811c:	e0bffd15 	stw	r2,-12(fp)
  818120:	e0bffc17 	ldw	r2,-16(fp)
  818124:	e0fffd17 	ldw	r3,-12(fp)
  818128:	10c00615 	stw	r3,24(r2)
  81812c:	e03ffb15 	stw	zero,-20(fp)
  818130:	00002606 	br	8181cc <build_rgb_y_table+0xf0>
  818134:	e0bffb17 	ldw	r2,-20(fp)
  818138:	1085883a 	add	r2,r2,r2
  81813c:	1085883a 	add	r2,r2,r2
  818140:	1007883a 	mov	r3,r2
  818144:	e0bffd17 	ldw	r2,-12(fp)
  818148:	10e1883a 	add	r16,r2,r3
  81814c:	015322c4 	movi	r5,19595
  818150:	e13ffb17 	ldw	r4,-20(fp)
  818154:	08301e80 	call	8301e8 <__mulsi3>
  818158:	80800015 	stw	r2,0(r16)
  81815c:	e0bffb17 	ldw	r2,-20(fp)
  818160:	10804004 	addi	r2,r2,256
  818164:	1085883a 	add	r2,r2,r2
  818168:	1085883a 	add	r2,r2,r2
  81816c:	1007883a 	mov	r3,r2
  818170:	e0bffd17 	ldw	r2,-12(fp)
  818174:	10e1883a 	add	r16,r2,r3
  818178:	01659194 	movui	r5,38470
  81817c:	e13ffb17 	ldw	r4,-20(fp)
  818180:	08301e80 	call	8301e8 <__mulsi3>
  818184:	80800015 	stw	r2,0(r16)
  818188:	e0bffb17 	ldw	r2,-20(fp)
  81818c:	10808004 	addi	r2,r2,512
  818190:	1085883a 	add	r2,r2,r2
  818194:	1085883a 	add	r2,r2,r2
  818198:	1007883a 	mov	r3,r2
  81819c:	e0bffd17 	ldw	r2,-12(fp)
  8181a0:	10e1883a 	add	r16,r2,r3
  8181a4:	01474bc4 	movi	r5,7471
  8181a8:	e13ffb17 	ldw	r4,-20(fp)
  8181ac:	08301e80 	call	8301e8 <__mulsi3>
  8181b0:	1007883a 	mov	r3,r2
  8181b4:	00a00014 	movui	r2,32768
  8181b8:	1885883a 	add	r2,r3,r2
  8181bc:	80800015 	stw	r2,0(r16)
  8181c0:	e0bffb17 	ldw	r2,-20(fp)
  8181c4:	10800044 	addi	r2,r2,1
  8181c8:	e0bffb15 	stw	r2,-20(fp)
  8181cc:	e0bffb17 	ldw	r2,-20(fp)
  8181d0:	10804010 	cmplti	r2,r2,256
  8181d4:	103fd71e 	bne	r2,zero,818134 <__alt_mem_epcs_flash_controller_0+0xff80f134>
  8181d8:	0001883a 	nop
  8181dc:	e6ffff04 	addi	sp,fp,-4
  8181e0:	dfc00217 	ldw	ra,8(sp)
  8181e4:	df000117 	ldw	fp,4(sp)
  8181e8:	dc000017 	ldw	r16,0(sp)
  8181ec:	dec00304 	addi	sp,sp,12
  8181f0:	f800283a 	ret

008181f4 <rgb_gray_convert>:
  8181f4:	defff004 	addi	sp,sp,-64
  8181f8:	df000f15 	stw	fp,60(sp)
  8181fc:	ddc00e15 	stw	r23,56(sp)
  818200:	dd800d15 	stw	r22,52(sp)
  818204:	dd400c15 	stw	r21,48(sp)
  818208:	dd000b15 	stw	r20,44(sp)
  81820c:	dcc00a15 	stw	r19,40(sp)
  818210:	dc800915 	stw	r18,36(sp)
  818214:	dc400815 	stw	r17,32(sp)
  818218:	dc000715 	stw	r16,28(sp)
  81821c:	df000f04 	addi	fp,sp,60
  818220:	e13ff315 	stw	r4,-52(fp)
  818224:	e17ff415 	stw	r5,-48(fp)
  818228:	e1bff515 	stw	r6,-44(fp)
  81822c:	e1fff615 	stw	r7,-40(fp)
  818230:	e0bff317 	ldw	r2,-52(fp)
  818234:	10807817 	ldw	r2,480(r2)
  818238:	e0bff115 	stw	r2,-60(fp)
  81823c:	e0bff117 	ldw	r2,-60(fp)
  818240:	14400617 	ldw	r17,24(r2)
  818244:	e0bff317 	ldw	r2,-52(fp)
  818248:	10801c17 	ldw	r2,112(r2)
  81824c:	e0bff215 	stw	r2,-56(fp)
  818250:	00004306 	br	818360 <rgb_gray_convert+0x16c>
  818254:	e0bff417 	ldw	r2,-48(fp)
  818258:	10c00017 	ldw	r3,0(r2)
  81825c:	e0bff517 	ldw	r2,-44(fp)
  818260:	1085883a 	add	r2,r2,r2
  818264:	1085883a 	add	r2,r2,r2
  818268:	1885883a 	add	r2,r3,r2
  81826c:	14800017 	ldw	r18,0(r2)
  818270:	e0bff417 	ldw	r2,-48(fp)
  818274:	10800104 	addi	r2,r2,4
  818278:	10c00017 	ldw	r3,0(r2)
  81827c:	e0bff517 	ldw	r2,-44(fp)
  818280:	1085883a 	add	r2,r2,r2
  818284:	1085883a 	add	r2,r2,r2
  818288:	1885883a 	add	r2,r3,r2
  81828c:	14c00017 	ldw	r19,0(r2)
  818290:	e0bff417 	ldw	r2,-48(fp)
  818294:	10800204 	addi	r2,r2,8
  818298:	10c00017 	ldw	r3,0(r2)
  81829c:	e0bff517 	ldw	r2,-44(fp)
  8182a0:	1085883a 	add	r2,r2,r2
  8182a4:	1085883a 	add	r2,r2,r2
  8182a8:	1885883a 	add	r2,r3,r2
  8182ac:	15000017 	ldw	r20,0(r2)
  8182b0:	e0bff517 	ldw	r2,-44(fp)
  8182b4:	10800044 	addi	r2,r2,1
  8182b8:	e0bff515 	stw	r2,-44(fp)
  8182bc:	e0bff617 	ldw	r2,-40(fp)
  8182c0:	10c00104 	addi	r3,r2,4
  8182c4:	e0fff615 	stw	r3,-40(fp)
  8182c8:	15400017 	ldw	r21,0(r2)
  8182cc:	0021883a 	mov	r16,zero
  8182d0:	00002106 	br	818358 <rgb_gray_convert+0x164>
  8182d4:	9405883a 	add	r2,r18,r16
  8182d8:	10800003 	ldbu	r2,0(r2)
  8182dc:	10803fcc 	andi	r2,r2,255
  8182e0:	e0bff715 	stw	r2,-36(fp)
  8182e4:	9c05883a 	add	r2,r19,r16
  8182e8:	10800003 	ldbu	r2,0(r2)
  8182ec:	15c03fcc 	andi	r23,r2,255
  8182f0:	a405883a 	add	r2,r20,r16
  8182f4:	10800003 	ldbu	r2,0(r2)
  8182f8:	15803fcc 	andi	r22,r2,255
  8182fc:	ac07883a 	add	r3,r21,r16
  818300:	e0bff717 	ldw	r2,-36(fp)
  818304:	1085883a 	add	r2,r2,r2
  818308:	1085883a 	add	r2,r2,r2
  81830c:	8885883a 	add	r2,r17,r2
  818310:	11000017 	ldw	r4,0(r2)
  818314:	b805883a 	mov	r2,r23
  818318:	10804004 	addi	r2,r2,256
  81831c:	1085883a 	add	r2,r2,r2
  818320:	1085883a 	add	r2,r2,r2
  818324:	8885883a 	add	r2,r17,r2
  818328:	10800017 	ldw	r2,0(r2)
  81832c:	2089883a 	add	r4,r4,r2
  818330:	b005883a 	mov	r2,r22
  818334:	10808004 	addi	r2,r2,512
  818338:	1085883a 	add	r2,r2,r2
  81833c:	1085883a 	add	r2,r2,r2
  818340:	8885883a 	add	r2,r17,r2
  818344:	10800017 	ldw	r2,0(r2)
  818348:	2085883a 	add	r2,r4,r2
  81834c:	1005d43a 	srai	r2,r2,16
  818350:	18800005 	stb	r2,0(r3)
  818354:	84000044 	addi	r16,r16,1
  818358:	e0bff217 	ldw	r2,-56(fp)
  81835c:	80bfdd36 	bltu	r16,r2,8182d4 <__alt_mem_epcs_flash_controller_0+0xff80f2d4>
  818360:	e0800117 	ldw	r2,4(fp)
  818364:	10bfffc4 	addi	r2,r2,-1
  818368:	e0800115 	stw	r2,4(fp)
  81836c:	e0800117 	ldw	r2,4(fp)
  818370:	103fb80e 	bge	r2,zero,818254 <__alt_mem_epcs_flash_controller_0+0xff80f254>
  818374:	0001883a 	nop
  818378:	e6fff804 	addi	sp,fp,-32
  81837c:	df000817 	ldw	fp,32(sp)
  818380:	ddc00717 	ldw	r23,28(sp)
  818384:	dd800617 	ldw	r22,24(sp)
  818388:	dd400517 	ldw	r21,20(sp)
  81838c:	dd000417 	ldw	r20,16(sp)
  818390:	dcc00317 	ldw	r19,12(sp)
  818394:	dc800217 	ldw	r18,8(sp)
  818398:	dc400117 	ldw	r17,4(sp)
  81839c:	dc000017 	ldw	r16,0(sp)
  8183a0:	dec00904 	addi	sp,sp,36
  8183a4:	f800283a 	ret

008183a8 <rgb1_rgb_convert>:
  8183a8:	defff204 	addi	sp,sp,-56
  8183ac:	df000d15 	stw	fp,52(sp)
  8183b0:	ddc00c15 	stw	r23,48(sp)
  8183b4:	dd800b15 	stw	r22,44(sp)
  8183b8:	dd400a15 	stw	r21,40(sp)
  8183bc:	dd000915 	stw	r20,36(sp)
  8183c0:	dcc00815 	stw	r19,32(sp)
  8183c4:	dc800715 	stw	r18,28(sp)
  8183c8:	dc400615 	stw	r17,24(sp)
  8183cc:	dc000515 	stw	r16,20(sp)
  8183d0:	df000d04 	addi	fp,sp,52
  8183d4:	e13ff415 	stw	r4,-48(fp)
  8183d8:	e17ff515 	stw	r5,-44(fp)
  8183dc:	e1bff615 	stw	r6,-40(fp)
  8183e0:	e1fff715 	stw	r7,-36(fp)
  8183e4:	e0bff417 	ldw	r2,-48(fp)
  8183e8:	10801c17 	ldw	r2,112(r2)
  8183ec:	e0bff315 	stw	r2,-52(fp)
  8183f0:	00003b06 	br	8184e0 <rgb1_rgb_convert+0x138>
  8183f4:	e0bff517 	ldw	r2,-44(fp)
  8183f8:	10c00017 	ldw	r3,0(r2)
  8183fc:	e0bff617 	ldw	r2,-40(fp)
  818400:	1085883a 	add	r2,r2,r2
  818404:	1085883a 	add	r2,r2,r2
  818408:	1885883a 	add	r2,r3,r2
  81840c:	14c00017 	ldw	r19,0(r2)
  818410:	e0bff517 	ldw	r2,-44(fp)
  818414:	10800104 	addi	r2,r2,4
  818418:	10c00017 	ldw	r3,0(r2)
  81841c:	e0bff617 	ldw	r2,-40(fp)
  818420:	1085883a 	add	r2,r2,r2
  818424:	1085883a 	add	r2,r2,r2
  818428:	1885883a 	add	r2,r3,r2
  81842c:	15000017 	ldw	r20,0(r2)
  818430:	e0bff517 	ldw	r2,-44(fp)
  818434:	10800204 	addi	r2,r2,8
  818438:	10c00017 	ldw	r3,0(r2)
  81843c:	e0bff617 	ldw	r2,-40(fp)
  818440:	1085883a 	add	r2,r2,r2
  818444:	1085883a 	add	r2,r2,r2
  818448:	1885883a 	add	r2,r3,r2
  81844c:	15400017 	ldw	r21,0(r2)
  818450:	e0bff617 	ldw	r2,-40(fp)
  818454:	10800044 	addi	r2,r2,1
  818458:	e0bff615 	stw	r2,-40(fp)
  81845c:	e0bff717 	ldw	r2,-36(fp)
  818460:	10c00104 	addi	r3,r2,4
  818464:	e0fff715 	stw	r3,-36(fp)
  818468:	14400017 	ldw	r17,0(r2)
  81846c:	0021883a 	mov	r16,zero
  818470:	00001906 	br	8184d8 <rgb1_rgb_convert+0x130>
  818474:	9c05883a 	add	r2,r19,r16
  818478:	10800003 	ldbu	r2,0(r2)
  81847c:	15c03fcc 	andi	r23,r2,255
  818480:	a405883a 	add	r2,r20,r16
  818484:	10800003 	ldbu	r2,0(r2)
  818488:	14803fcc 	andi	r18,r2,255
  81848c:	ac05883a 	add	r2,r21,r16
  818490:	10800003 	ldbu	r2,0(r2)
  818494:	15803fcc 	andi	r22,r2,255
  818498:	b807883a 	mov	r3,r23
  81849c:	9005883a 	mov	r2,r18
  8184a0:	1885883a 	add	r2,r3,r2
  8184a4:	10bfe004 	addi	r2,r2,-128
  8184a8:	88800005 	stb	r2,0(r17)
  8184ac:	88800044 	addi	r2,r17,1
  8184b0:	9007883a 	mov	r3,r18
  8184b4:	10c00005 	stb	r3,0(r2)
  8184b8:	88800084 	addi	r2,r17,2
  8184bc:	b009883a 	mov	r4,r22
  8184c0:	9007883a 	mov	r3,r18
  8184c4:	20c7883a 	add	r3,r4,r3
  8184c8:	18ffe004 	addi	r3,r3,-128
  8184cc:	10c00005 	stb	r3,0(r2)
  8184d0:	8c4000c4 	addi	r17,r17,3
  8184d4:	84000044 	addi	r16,r16,1
  8184d8:	e0bff317 	ldw	r2,-52(fp)
  8184dc:	80bfe536 	bltu	r16,r2,818474 <__alt_mem_epcs_flash_controller_0+0xff80f474>
  8184e0:	e0800117 	ldw	r2,4(fp)
  8184e4:	10bfffc4 	addi	r2,r2,-1
  8184e8:	e0800115 	stw	r2,4(fp)
  8184ec:	e0800117 	ldw	r2,4(fp)
  8184f0:	103fc00e 	bge	r2,zero,8183f4 <__alt_mem_epcs_flash_controller_0+0xff80f3f4>
  8184f4:	0001883a 	nop
  8184f8:	e6fff804 	addi	sp,fp,-32
  8184fc:	df000817 	ldw	fp,32(sp)
  818500:	ddc00717 	ldw	r23,28(sp)
  818504:	dd800617 	ldw	r22,24(sp)
  818508:	dd400517 	ldw	r21,20(sp)
  81850c:	dd000417 	ldw	r20,16(sp)
  818510:	dcc00317 	ldw	r19,12(sp)
  818514:	dc800217 	ldw	r18,8(sp)
  818518:	dc400117 	ldw	r17,4(sp)
  81851c:	dc000017 	ldw	r16,0(sp)
  818520:	dec00904 	addi	sp,sp,36
  818524:	f800283a 	ret

00818528 <rgb1_gray_convert>:
  818528:	defff004 	addi	sp,sp,-64
  81852c:	df000f15 	stw	fp,60(sp)
  818530:	ddc00e15 	stw	r23,56(sp)
  818534:	dd800d15 	stw	r22,52(sp)
  818538:	dd400c15 	stw	r21,48(sp)
  81853c:	dd000b15 	stw	r20,44(sp)
  818540:	dcc00a15 	stw	r19,40(sp)
  818544:	dc800915 	stw	r18,36(sp)
  818548:	dc400815 	stw	r17,32(sp)
  81854c:	dc000715 	stw	r16,28(sp)
  818550:	df000f04 	addi	fp,sp,60
  818554:	e13ff315 	stw	r4,-52(fp)
  818558:	e17ff415 	stw	r5,-48(fp)
  81855c:	e1bff515 	stw	r6,-44(fp)
  818560:	e1fff615 	stw	r7,-40(fp)
  818564:	e0bff317 	ldw	r2,-52(fp)
  818568:	10807817 	ldw	r2,480(r2)
  81856c:	e0bff115 	stw	r2,-60(fp)
  818570:	e0bff117 	ldw	r2,-60(fp)
  818574:	14400617 	ldw	r17,24(r2)
  818578:	e0bff317 	ldw	r2,-52(fp)
  81857c:	10801c17 	ldw	r2,112(r2)
  818580:	e0bff215 	stw	r2,-56(fp)
  818584:	00004a06 	br	8186b0 <rgb1_gray_convert+0x188>
  818588:	e0bff417 	ldw	r2,-48(fp)
  81858c:	10c00017 	ldw	r3,0(r2)
  818590:	e0bff517 	ldw	r2,-44(fp)
  818594:	1085883a 	add	r2,r2,r2
  818598:	1085883a 	add	r2,r2,r2
  81859c:	1885883a 	add	r2,r3,r2
  8185a0:	15400017 	ldw	r21,0(r2)
  8185a4:	e0bff417 	ldw	r2,-48(fp)
  8185a8:	10800104 	addi	r2,r2,4
  8185ac:	10c00017 	ldw	r3,0(r2)
  8185b0:	e0bff517 	ldw	r2,-44(fp)
  8185b4:	1085883a 	add	r2,r2,r2
  8185b8:	1085883a 	add	r2,r2,r2
  8185bc:	1885883a 	add	r2,r3,r2
  8185c0:	15800017 	ldw	r22,0(r2)
  8185c4:	e0bff417 	ldw	r2,-48(fp)
  8185c8:	10800204 	addi	r2,r2,8
  8185cc:	10c00017 	ldw	r3,0(r2)
  8185d0:	e0bff517 	ldw	r2,-44(fp)
  8185d4:	1085883a 	add	r2,r2,r2
  8185d8:	1085883a 	add	r2,r2,r2
  8185dc:	1885883a 	add	r2,r3,r2
  8185e0:	15c00017 	ldw	r23,0(r2)
  8185e4:	e0bff517 	ldw	r2,-44(fp)
  8185e8:	10800044 	addi	r2,r2,1
  8185ec:	e0bff515 	stw	r2,-44(fp)
  8185f0:	e0bff617 	ldw	r2,-40(fp)
  8185f4:	10c00104 	addi	r3,r2,4
  8185f8:	e0fff615 	stw	r3,-40(fp)
  8185fc:	10800017 	ldw	r2,0(r2)
  818600:	e0bff715 	stw	r2,-36(fp)
  818604:	0021883a 	mov	r16,zero
  818608:	00002706 	br	8186a8 <rgb1_gray_convert+0x180>
  81860c:	ac05883a 	add	r2,r21,r16
  818610:	10800003 	ldbu	r2,0(r2)
  818614:	15003fcc 	andi	r20,r2,255
  818618:	b405883a 	add	r2,r22,r16
  81861c:	10800003 	ldbu	r2,0(r2)
  818620:	14c03fcc 	andi	r19,r2,255
  818624:	bc05883a 	add	r2,r23,r16
  818628:	10800003 	ldbu	r2,0(r2)
  81862c:	14803fcc 	andi	r18,r2,255
  818630:	a4c5883a 	add	r2,r20,r19
  818634:	10bfe004 	addi	r2,r2,-128
  818638:	15003fcc 	andi	r20,r2,255
  81863c:	94c5883a 	add	r2,r18,r19
  818640:	10bfe004 	addi	r2,r2,-128
  818644:	14803fcc 	andi	r18,r2,255
  818648:	e0bff717 	ldw	r2,-36(fp)
  81864c:	1407883a 	add	r3,r2,r16
  818650:	a005883a 	mov	r2,r20
  818654:	1085883a 	add	r2,r2,r2
  818658:	1085883a 	add	r2,r2,r2
  81865c:	8885883a 	add	r2,r17,r2
  818660:	11000017 	ldw	r4,0(r2)
  818664:	9805883a 	mov	r2,r19
  818668:	10804004 	addi	r2,r2,256
  81866c:	1085883a 	add	r2,r2,r2
  818670:	1085883a 	add	r2,r2,r2
  818674:	8885883a 	add	r2,r17,r2
  818678:	10800017 	ldw	r2,0(r2)
  81867c:	2089883a 	add	r4,r4,r2
  818680:	9005883a 	mov	r2,r18
  818684:	10808004 	addi	r2,r2,512
  818688:	1085883a 	add	r2,r2,r2
  81868c:	1085883a 	add	r2,r2,r2
  818690:	8885883a 	add	r2,r17,r2
  818694:	10800017 	ldw	r2,0(r2)
  818698:	2085883a 	add	r2,r4,r2
  81869c:	1005d43a 	srai	r2,r2,16
  8186a0:	18800005 	stb	r2,0(r3)
  8186a4:	84000044 	addi	r16,r16,1
  8186a8:	e0bff217 	ldw	r2,-56(fp)
  8186ac:	80bfd736 	bltu	r16,r2,81860c <__alt_mem_epcs_flash_controller_0+0xff80f60c>
  8186b0:	e0800117 	ldw	r2,4(fp)
  8186b4:	10bfffc4 	addi	r2,r2,-1
  8186b8:	e0800115 	stw	r2,4(fp)
  8186bc:	e0800117 	ldw	r2,4(fp)
  8186c0:	103fb10e 	bge	r2,zero,818588 <__alt_mem_epcs_flash_controller_0+0xff80f588>
  8186c4:	0001883a 	nop
  8186c8:	e6fff804 	addi	sp,fp,-32
  8186cc:	df000817 	ldw	fp,32(sp)
  8186d0:	ddc00717 	ldw	r23,28(sp)
  8186d4:	dd800617 	ldw	r22,24(sp)
  8186d8:	dd400517 	ldw	r21,20(sp)
  8186dc:	dd000417 	ldw	r20,16(sp)
  8186e0:	dcc00317 	ldw	r19,12(sp)
  8186e4:	dc800217 	ldw	r18,8(sp)
  8186e8:	dc400117 	ldw	r17,4(sp)
  8186ec:	dc000017 	ldw	r16,0(sp)
  8186f0:	dec00904 	addi	sp,sp,36
  8186f4:	f800283a 	ret

008186f8 <rgb_convert>:
  8186f8:	defff504 	addi	sp,sp,-44
  8186fc:	df000a15 	stw	fp,40(sp)
  818700:	dd000915 	stw	r20,36(sp)
  818704:	dcc00815 	stw	r19,32(sp)
  818708:	dc800715 	stw	r18,28(sp)
  81870c:	dc400615 	stw	r17,24(sp)
  818710:	dc000515 	stw	r16,20(sp)
  818714:	df000a04 	addi	fp,sp,40
  818718:	e13ff715 	stw	r4,-36(fp)
  81871c:	e17ff815 	stw	r5,-32(fp)
  818720:	e1bff915 	stw	r6,-28(fp)
  818724:	e1fffa15 	stw	r7,-24(fp)
  818728:	e0bff717 	ldw	r2,-36(fp)
  81872c:	10801c17 	ldw	r2,112(r2)
  818730:	e0bff615 	stw	r2,-40(fp)
  818734:	00002f06 	br	8187f4 <rgb_convert+0xfc>
  818738:	e0bff817 	ldw	r2,-32(fp)
  81873c:	10c00017 	ldw	r3,0(r2)
  818740:	e0bff917 	ldw	r2,-28(fp)
  818744:	1085883a 	add	r2,r2,r2
  818748:	1085883a 	add	r2,r2,r2
  81874c:	1885883a 	add	r2,r3,r2
  818750:	14800017 	ldw	r18,0(r2)
  818754:	e0bff817 	ldw	r2,-32(fp)
  818758:	10800104 	addi	r2,r2,4
  81875c:	10c00017 	ldw	r3,0(r2)
  818760:	e0bff917 	ldw	r2,-28(fp)
  818764:	1085883a 	add	r2,r2,r2
  818768:	1085883a 	add	r2,r2,r2
  81876c:	1885883a 	add	r2,r3,r2
  818770:	14c00017 	ldw	r19,0(r2)
  818774:	e0bff817 	ldw	r2,-32(fp)
  818778:	10800204 	addi	r2,r2,8
  81877c:	10c00017 	ldw	r3,0(r2)
  818780:	e0bff917 	ldw	r2,-28(fp)
  818784:	1085883a 	add	r2,r2,r2
  818788:	1085883a 	add	r2,r2,r2
  81878c:	1885883a 	add	r2,r3,r2
  818790:	15000017 	ldw	r20,0(r2)
  818794:	e0bff917 	ldw	r2,-28(fp)
  818798:	10800044 	addi	r2,r2,1
  81879c:	e0bff915 	stw	r2,-28(fp)
  8187a0:	e0bffa17 	ldw	r2,-24(fp)
  8187a4:	10c00104 	addi	r3,r2,4
  8187a8:	e0fffa15 	stw	r3,-24(fp)
  8187ac:	14400017 	ldw	r17,0(r2)
  8187b0:	0021883a 	mov	r16,zero
  8187b4:	00000d06 	br	8187ec <rgb_convert+0xf4>
  8187b8:	9405883a 	add	r2,r18,r16
  8187bc:	10800003 	ldbu	r2,0(r2)
  8187c0:	88800005 	stb	r2,0(r17)
  8187c4:	88800044 	addi	r2,r17,1
  8187c8:	9c07883a 	add	r3,r19,r16
  8187cc:	18c00003 	ldbu	r3,0(r3)
  8187d0:	10c00005 	stb	r3,0(r2)
  8187d4:	88800084 	addi	r2,r17,2
  8187d8:	a407883a 	add	r3,r20,r16
  8187dc:	18c00003 	ldbu	r3,0(r3)
  8187e0:	10c00005 	stb	r3,0(r2)
  8187e4:	8c4000c4 	addi	r17,r17,3
  8187e8:	84000044 	addi	r16,r16,1
  8187ec:	e0bff617 	ldw	r2,-40(fp)
  8187f0:	80bff136 	bltu	r16,r2,8187b8 <__alt_mem_epcs_flash_controller_0+0xff80f7b8>
  8187f4:	e0800117 	ldw	r2,4(fp)
  8187f8:	10bfffc4 	addi	r2,r2,-1
  8187fc:	e0800115 	stw	r2,4(fp)
  818800:	e0800117 	ldw	r2,4(fp)
  818804:	103fcc0e 	bge	r2,zero,818738 <__alt_mem_epcs_flash_controller_0+0xff80f738>
  818808:	0001883a 	nop
  81880c:	e6fffb04 	addi	sp,fp,-20
  818810:	df000517 	ldw	fp,20(sp)
  818814:	dd000417 	ldw	r20,16(sp)
  818818:	dcc00317 	ldw	r19,12(sp)
  81881c:	dc800217 	ldw	r18,8(sp)
  818820:	dc400117 	ldw	r17,4(sp)
  818824:	dc000017 	ldw	r16,0(sp)
  818828:	dec00604 	addi	sp,sp,24
  81882c:	f800283a 	ret

00818830 <null_convert>:
  818830:	defff504 	addi	sp,sp,-44
  818834:	df000a15 	stw	fp,40(sp)
  818838:	dcc00915 	stw	r19,36(sp)
  81883c:	dc800815 	stw	r18,32(sp)
  818840:	dc400715 	stw	r17,28(sp)
  818844:	dc000615 	stw	r16,24(sp)
  818848:	df000a04 	addi	fp,sp,40
  81884c:	e13ff815 	stw	r4,-32(fp)
  818850:	e17ff915 	stw	r5,-28(fp)
  818854:	e1bffa15 	stw	r6,-24(fp)
  818858:	e1fffb15 	stw	r7,-20(fp)
  81885c:	e0bff817 	ldw	r2,-32(fp)
  818860:	14800917 	ldw	r18,36(r2)
  818864:	e0bff817 	ldw	r2,-32(fp)
  818868:	10801c17 	ldw	r2,112(r2)
  81886c:	e0bff715 	stw	r2,-36(fp)
  818870:	00002806 	br	818914 <null_convert+0xe4>
  818874:	e03ff615 	stw	zero,-40(fp)
  818878:	00001e06 	br	8188f4 <null_convert+0xc4>
  81887c:	e0bff617 	ldw	r2,-40(fp)
  818880:	1085883a 	add	r2,r2,r2
  818884:	1085883a 	add	r2,r2,r2
  818888:	1007883a 	mov	r3,r2
  81888c:	e0bff917 	ldw	r2,-28(fp)
  818890:	10c5883a 	add	r2,r2,r3
  818894:	10c00017 	ldw	r3,0(r2)
  818898:	e0bffa17 	ldw	r2,-24(fp)
  81889c:	1085883a 	add	r2,r2,r2
  8188a0:	1085883a 	add	r2,r2,r2
  8188a4:	1885883a 	add	r2,r3,r2
  8188a8:	14c00017 	ldw	r19,0(r2)
  8188ac:	e0bffb17 	ldw	r2,-20(fp)
  8188b0:	10c00017 	ldw	r3,0(r2)
  8188b4:	e0bff617 	ldw	r2,-40(fp)
  8188b8:	18a1883a 	add	r16,r3,r2
  8188bc:	0023883a 	mov	r17,zero
  8188c0:	00000706 	br	8188e0 <null_convert+0xb0>
  8188c4:	9805883a 	mov	r2,r19
  8188c8:	14c00044 	addi	r19,r2,1
  8188cc:	10800003 	ldbu	r2,0(r2)
  8188d0:	80800005 	stb	r2,0(r16)
  8188d4:	9005883a 	mov	r2,r18
  8188d8:	80a1883a 	add	r16,r16,r2
  8188dc:	8c400044 	addi	r17,r17,1
  8188e0:	e0bff717 	ldw	r2,-36(fp)
  8188e4:	88bff736 	bltu	r17,r2,8188c4 <__alt_mem_epcs_flash_controller_0+0xff80f8c4>
  8188e8:	e0bff617 	ldw	r2,-40(fp)
  8188ec:	10800044 	addi	r2,r2,1
  8188f0:	e0bff615 	stw	r2,-40(fp)
  8188f4:	e0bff617 	ldw	r2,-40(fp)
  8188f8:	14bfe016 	blt	r2,r18,81887c <__alt_mem_epcs_flash_controller_0+0xff80f87c>
  8188fc:	e0bffa17 	ldw	r2,-24(fp)
  818900:	10800044 	addi	r2,r2,1
  818904:	e0bffa15 	stw	r2,-24(fp)
  818908:	e0bffb17 	ldw	r2,-20(fp)
  81890c:	10800104 	addi	r2,r2,4
  818910:	e0bffb15 	stw	r2,-20(fp)
  818914:	e0800117 	ldw	r2,4(fp)
  818918:	10bfffc4 	addi	r2,r2,-1
  81891c:	e0800115 	stw	r2,4(fp)
  818920:	e0800117 	ldw	r2,4(fp)
  818924:	103fd30e 	bge	r2,zero,818874 <__alt_mem_epcs_flash_controller_0+0xff80f874>
  818928:	0001883a 	nop
  81892c:	e6fffc04 	addi	sp,fp,-16
  818930:	df000417 	ldw	fp,16(sp)
  818934:	dcc00317 	ldw	r19,12(sp)
  818938:	dc800217 	ldw	r18,8(sp)
  81893c:	dc400117 	ldw	r17,4(sp)
  818940:	dc000017 	ldw	r16,0(sp)
  818944:	dec00504 	addi	sp,sp,20
  818948:	f800283a 	ret

0081894c <grayscale_convert>:
  81894c:	defff804 	addi	sp,sp,-32
  818950:	dfc00715 	stw	ra,28(sp)
  818954:	df000615 	stw	fp,24(sp)
  818958:	df000604 	addi	fp,sp,24
  81895c:	e13ffc15 	stw	r4,-16(fp)
  818960:	e17ffd15 	stw	r5,-12(fp)
  818964:	e1bffe15 	stw	r6,-8(fp)
  818968:	e1ffff15 	stw	r7,-4(fp)
  81896c:	e0bffd17 	ldw	r2,-12(fp)
  818970:	10c00017 	ldw	r3,0(r2)
  818974:	e13ffe17 	ldw	r4,-8(fp)
  818978:	e0bffc17 	ldw	r2,-16(fp)
  81897c:	10801c17 	ldw	r2,112(r2)
  818980:	d8800115 	stw	r2,4(sp)
  818984:	e0800217 	ldw	r2,8(fp)
  818988:	d8800015 	stw	r2,0(sp)
  81898c:	000f883a 	mov	r7,zero
  818990:	e1bfff17 	ldw	r6,-4(fp)
  818994:	200b883a 	mov	r5,r4
  818998:	1809883a 	mov	r4,r3
  81899c:	0813c300 	call	813c30 <jcopy_sample_rows>
  8189a0:	0001883a 	nop
  8189a4:	e037883a 	mov	sp,fp
  8189a8:	dfc00117 	ldw	ra,4(sp)
  8189ac:	df000017 	ldw	fp,0(sp)
  8189b0:	dec00204 	addi	sp,sp,8
  8189b4:	f800283a 	ret

008189b8 <gray_rgb_convert>:
  8189b8:	defff704 	addi	sp,sp,-36
  8189bc:	df000815 	stw	fp,32(sp)
  8189c0:	dc800715 	stw	r18,28(sp)
  8189c4:	dc400615 	stw	r17,24(sp)
  8189c8:	dc000515 	stw	r16,20(sp)
  8189cc:	df000804 	addi	fp,sp,32
  8189d0:	e13ff915 	stw	r4,-28(fp)
  8189d4:	e17ffa15 	stw	r5,-24(fp)
  8189d8:	e1bffb15 	stw	r6,-20(fp)
  8189dc:	e1fffc15 	stw	r7,-16(fp)
  8189e0:	e0bff917 	ldw	r2,-28(fp)
  8189e4:	10801c17 	ldw	r2,112(r2)
  8189e8:	e0bff815 	stw	r2,-32(fp)
  8189ec:	00001c06 	br	818a60 <gray_rgb_convert+0xa8>
  8189f0:	e0bffa17 	ldw	r2,-24(fp)
  8189f4:	10c00017 	ldw	r3,0(r2)
  8189f8:	e0bffb17 	ldw	r2,-20(fp)
  8189fc:	11000044 	addi	r4,r2,1
  818a00:	e13ffb15 	stw	r4,-20(fp)
  818a04:	1085883a 	add	r2,r2,r2
  818a08:	1085883a 	add	r2,r2,r2
  818a0c:	1885883a 	add	r2,r3,r2
  818a10:	14800017 	ldw	r18,0(r2)
  818a14:	e0bffc17 	ldw	r2,-16(fp)
  818a18:	10c00104 	addi	r3,r2,4
  818a1c:	e0fffc15 	stw	r3,-16(fp)
  818a20:	14000017 	ldw	r16,0(r2)
  818a24:	0023883a 	mov	r17,zero
  818a28:	00000b06 	br	818a58 <gray_rgb_convert+0xa0>
  818a2c:	80800044 	addi	r2,r16,1
  818a30:	80c00084 	addi	r3,r16,2
  818a34:	9449883a 	add	r4,r18,r17
  818a38:	21000003 	ldbu	r4,0(r4)
  818a3c:	19000005 	stb	r4,0(r3)
  818a40:	18c00003 	ldbu	r3,0(r3)
  818a44:	10c00005 	stb	r3,0(r2)
  818a48:	10800003 	ldbu	r2,0(r2)
  818a4c:	80800005 	stb	r2,0(r16)
  818a50:	840000c4 	addi	r16,r16,3
  818a54:	8c400044 	addi	r17,r17,1
  818a58:	e0bff817 	ldw	r2,-32(fp)
  818a5c:	88bff336 	bltu	r17,r2,818a2c <__alt_mem_epcs_flash_controller_0+0xff80fa2c>
  818a60:	e0800117 	ldw	r2,4(fp)
  818a64:	10bfffc4 	addi	r2,r2,-1
  818a68:	e0800115 	stw	r2,4(fp)
  818a6c:	e0800117 	ldw	r2,4(fp)
  818a70:	103fdf0e 	bge	r2,zero,8189f0 <__alt_mem_epcs_flash_controller_0+0xff80f9f0>
  818a74:	0001883a 	nop
  818a78:	e6fffd04 	addi	sp,fp,-12
  818a7c:	df000317 	ldw	fp,12(sp)
  818a80:	dc800217 	ldw	r18,8(sp)
  818a84:	dc400117 	ldw	r17,4(sp)
  818a88:	dc000017 	ldw	r16,0(sp)
  818a8c:	dec00404 	addi	sp,sp,16
  818a90:	f800283a 	ret

00818a94 <ycck_cmyk_convert>:
  818a94:	deffeb04 	addi	sp,sp,-84
  818a98:	df001415 	stw	fp,80(sp)
  818a9c:	ddc01315 	stw	r23,76(sp)
  818aa0:	dd801215 	stw	r22,72(sp)
  818aa4:	dd401115 	stw	r21,68(sp)
  818aa8:	dd001015 	stw	r20,64(sp)
  818aac:	dcc00f15 	stw	r19,60(sp)
  818ab0:	dc800e15 	stw	r18,56(sp)
  818ab4:	dc400d15 	stw	r17,52(sp)
  818ab8:	dc000c15 	stw	r16,48(sp)
  818abc:	df001404 	addi	fp,sp,80
  818ac0:	e13fee15 	stw	r4,-72(fp)
  818ac4:	e17fef15 	stw	r5,-68(fp)
  818ac8:	e1bff015 	stw	r6,-64(fp)
  818acc:	e1fff115 	stw	r7,-60(fp)
  818ad0:	e0bfee17 	ldw	r2,-72(fp)
  818ad4:	10807817 	ldw	r2,480(r2)
  818ad8:	e0bfec15 	stw	r2,-80(fp)
  818adc:	e0bfee17 	ldw	r2,-72(fp)
  818ae0:	10801c17 	ldw	r2,112(r2)
  818ae4:	e0bfed15 	stw	r2,-76(fp)
  818ae8:	e0bfee17 	ldw	r2,-72(fp)
  818aec:	14805417 	ldw	r18,336(r2)
  818af0:	e0bfec17 	ldw	r2,-80(fp)
  818af4:	15000217 	ldw	r20,8(r2)
  818af8:	e0bfec17 	ldw	r2,-80(fp)
  818afc:	15400317 	ldw	r21,12(r2)
  818b00:	e0bfec17 	ldw	r2,-80(fp)
  818b04:	15800417 	ldw	r22,16(r2)
  818b08:	e0bfec17 	ldw	r2,-80(fp)
  818b0c:	15c00517 	ldw	r23,20(r2)
  818b10:	00006d06 	br	818cc8 <ycck_cmyk_convert+0x234>
  818b14:	e0bfef17 	ldw	r2,-68(fp)
  818b18:	10c00017 	ldw	r3,0(r2)
  818b1c:	e0bff017 	ldw	r2,-64(fp)
  818b20:	1085883a 	add	r2,r2,r2
  818b24:	1085883a 	add	r2,r2,r2
  818b28:	1885883a 	add	r2,r3,r2
  818b2c:	10800017 	ldw	r2,0(r2)
  818b30:	e0bff215 	stw	r2,-56(fp)
  818b34:	e0bfef17 	ldw	r2,-68(fp)
  818b38:	10800104 	addi	r2,r2,4
  818b3c:	10c00017 	ldw	r3,0(r2)
  818b40:	e0bff017 	ldw	r2,-64(fp)
  818b44:	1085883a 	add	r2,r2,r2
  818b48:	1085883a 	add	r2,r2,r2
  818b4c:	1885883a 	add	r2,r3,r2
  818b50:	10800017 	ldw	r2,0(r2)
  818b54:	e0bff315 	stw	r2,-52(fp)
  818b58:	e0bfef17 	ldw	r2,-68(fp)
  818b5c:	10800204 	addi	r2,r2,8
  818b60:	10c00017 	ldw	r3,0(r2)
  818b64:	e0bff017 	ldw	r2,-64(fp)
  818b68:	1085883a 	add	r2,r2,r2
  818b6c:	1085883a 	add	r2,r2,r2
  818b70:	1885883a 	add	r2,r3,r2
  818b74:	10800017 	ldw	r2,0(r2)
  818b78:	e0bff415 	stw	r2,-48(fp)
  818b7c:	e0bfef17 	ldw	r2,-68(fp)
  818b80:	10800304 	addi	r2,r2,12
  818b84:	10c00017 	ldw	r3,0(r2)
  818b88:	e0bff017 	ldw	r2,-64(fp)
  818b8c:	1085883a 	add	r2,r2,r2
  818b90:	1085883a 	add	r2,r2,r2
  818b94:	1885883a 	add	r2,r3,r2
  818b98:	10800017 	ldw	r2,0(r2)
  818b9c:	e0bff515 	stw	r2,-44(fp)
  818ba0:	e0bff017 	ldw	r2,-64(fp)
  818ba4:	10800044 	addi	r2,r2,1
  818ba8:	e0bff015 	stw	r2,-64(fp)
  818bac:	e0bff117 	ldw	r2,-60(fp)
  818bb0:	10c00104 	addi	r3,r2,4
  818bb4:	e0fff115 	stw	r3,-60(fp)
  818bb8:	14400017 	ldw	r17,0(r2)
  818bbc:	0021883a 	mov	r16,zero
  818bc0:	00003f06 	br	818cc0 <ycck_cmyk_convert+0x22c>
  818bc4:	e0fff217 	ldw	r3,-56(fp)
  818bc8:	1c05883a 	add	r2,r3,r16
  818bcc:	10800003 	ldbu	r2,0(r2)
  818bd0:	14c03fcc 	andi	r19,r2,255
  818bd4:	e13ff317 	ldw	r4,-52(fp)
  818bd8:	2405883a 	add	r2,r4,r16
  818bdc:	10800003 	ldbu	r2,0(r2)
  818be0:	10803fcc 	andi	r2,r2,255
  818be4:	e0bff615 	stw	r2,-40(fp)
  818be8:	e0fff417 	ldw	r3,-48(fp)
  818bec:	1c05883a 	add	r2,r3,r16
  818bf0:	10800003 	ldbu	r2,0(r2)
  818bf4:	10803fcc 	andi	r2,r2,255
  818bf8:	e0bff715 	stw	r2,-36(fp)
  818bfc:	e0bff717 	ldw	r2,-36(fp)
  818c00:	1085883a 	add	r2,r2,r2
  818c04:	1085883a 	add	r2,r2,r2
  818c08:	a085883a 	add	r2,r20,r2
  818c0c:	10800017 	ldw	r2,0(r2)
  818c10:	14c5883a 	add	r2,r2,r19
  818c14:	00c03fc4 	movi	r3,255
  818c18:	1885c83a 	sub	r2,r3,r2
  818c1c:	9085883a 	add	r2,r18,r2
  818c20:	10800003 	ldbu	r2,0(r2)
  818c24:	88800005 	stb	r2,0(r17)
  818c28:	88c00044 	addi	r3,r17,1
  818c2c:	e0bff617 	ldw	r2,-40(fp)
  818c30:	1085883a 	add	r2,r2,r2
  818c34:	1085883a 	add	r2,r2,r2
  818c38:	b885883a 	add	r2,r23,r2
  818c3c:	11000017 	ldw	r4,0(r2)
  818c40:	e0bff717 	ldw	r2,-36(fp)
  818c44:	1085883a 	add	r2,r2,r2
  818c48:	1085883a 	add	r2,r2,r2
  818c4c:	b085883a 	add	r2,r22,r2
  818c50:	10800017 	ldw	r2,0(r2)
  818c54:	2085883a 	add	r2,r4,r2
  818c58:	1005d43a 	srai	r2,r2,16
  818c5c:	14c5883a 	add	r2,r2,r19
  818c60:	01003fc4 	movi	r4,255
  818c64:	2085c83a 	sub	r2,r4,r2
  818c68:	9085883a 	add	r2,r18,r2
  818c6c:	10800003 	ldbu	r2,0(r2)
  818c70:	18800005 	stb	r2,0(r3)
  818c74:	88c00084 	addi	r3,r17,2
  818c78:	e0bff617 	ldw	r2,-40(fp)
  818c7c:	1085883a 	add	r2,r2,r2
  818c80:	1085883a 	add	r2,r2,r2
  818c84:	a885883a 	add	r2,r21,r2
  818c88:	10800017 	ldw	r2,0(r2)
  818c8c:	14c5883a 	add	r2,r2,r19
  818c90:	01003fc4 	movi	r4,255
  818c94:	2085c83a 	sub	r2,r4,r2
  818c98:	9085883a 	add	r2,r18,r2
  818c9c:	10800003 	ldbu	r2,0(r2)
  818ca0:	18800005 	stb	r2,0(r3)
  818ca4:	888000c4 	addi	r2,r17,3
  818ca8:	e13ff517 	ldw	r4,-44(fp)
  818cac:	2407883a 	add	r3,r4,r16
  818cb0:	18c00003 	ldbu	r3,0(r3)
  818cb4:	10c00005 	stb	r3,0(r2)
  818cb8:	8c400104 	addi	r17,r17,4
  818cbc:	84000044 	addi	r16,r16,1
  818cc0:	e0bfed17 	ldw	r2,-76(fp)
  818cc4:	80bfbf36 	bltu	r16,r2,818bc4 <__alt_mem_epcs_flash_controller_0+0xff80fbc4>
  818cc8:	e0800117 	ldw	r2,4(fp)
  818ccc:	10bfffc4 	addi	r2,r2,-1
  818cd0:	e0800115 	stw	r2,4(fp)
  818cd4:	e0800117 	ldw	r2,4(fp)
  818cd8:	103f8e0e 	bge	r2,zero,818b14 <__alt_mem_epcs_flash_controller_0+0xff80fb14>
  818cdc:	0001883a 	nop
  818ce0:	e6fff804 	addi	sp,fp,-32
  818ce4:	df000817 	ldw	fp,32(sp)
  818ce8:	ddc00717 	ldw	r23,28(sp)
  818cec:	dd800617 	ldw	r22,24(sp)
  818cf0:	dd400517 	ldw	r21,20(sp)
  818cf4:	dd000417 	ldw	r20,16(sp)
  818cf8:	dcc00317 	ldw	r19,12(sp)
  818cfc:	dc800217 	ldw	r18,8(sp)
  818d00:	dc400117 	ldw	r17,4(sp)
  818d04:	dc000017 	ldw	r16,0(sp)
  818d08:	dec00904 	addi	sp,sp,36
  818d0c:	f800283a 	ret

00818d10 <start_pass_dcolor>:
  818d10:	defffe04 	addi	sp,sp,-8
  818d14:	df000115 	stw	fp,4(sp)
  818d18:	df000104 	addi	fp,sp,4
  818d1c:	e13fff15 	stw	r4,-4(fp)
  818d20:	0001883a 	nop
  818d24:	e037883a 	mov	sp,fp
  818d28:	df000017 	ldw	fp,0(sp)
  818d2c:	dec00104 	addi	sp,sp,4
  818d30:	f800283a 	ret

00818d34 <jinit_color_deconverter>:
  818d34:	defffa04 	addi	sp,sp,-24
  818d38:	dfc00515 	stw	ra,20(sp)
  818d3c:	df000415 	stw	fp,16(sp)
  818d40:	dc000315 	stw	r16,12(sp)
  818d44:	df000404 	addi	fp,sp,16
  818d48:	e13ffe15 	stw	r4,-8(fp)
  818d4c:	e0bffe17 	ldw	r2,-8(fp)
  818d50:	10800117 	ldw	r2,4(r2)
  818d54:	10800017 	ldw	r2,0(r2)
  818d58:	01800704 	movi	r6,28
  818d5c:	01400044 	movi	r5,1
  818d60:	e13ffe17 	ldw	r4,-8(fp)
  818d64:	103ee83a 	callr	r2
  818d68:	e0bffd15 	stw	r2,-12(fp)
  818d6c:	e0fffd17 	ldw	r3,-12(fp)
  818d70:	e0bffe17 	ldw	r2,-8(fp)
  818d74:	10c07815 	stw	r3,480(r2)
  818d78:	e0fffd17 	ldw	r3,-12(fp)
  818d7c:	008020b4 	movhi	r2,130
  818d80:	10a34404 	addi	r2,r2,-29424
  818d84:	18800015 	stw	r2,0(r3)
  818d88:	e0bffe17 	ldw	r2,-8(fp)
  818d8c:	10800a17 	ldw	r2,40(r2)
  818d90:	10c00228 	cmpgeui	r3,r2,8
  818d94:	1800381e 	bne	r3,zero,818e78 <jinit_color_deconverter+0x144>
  818d98:	100690ba 	slli	r3,r2,2
  818d9c:	008020b4 	movhi	r2,130
  818da0:	10a36c04 	addi	r2,r2,-29264
  818da4:	1885883a 	add	r2,r3,r2
  818da8:	10800017 	ldw	r2,0(r2)
  818dac:	1000683a 	jmp	r2
  818db0:	00818e78 	rdprs	r2,zero,1593
  818db4:	00818dd0 	cmplti	r2,zero,1591
  818db8:	00818e08 	cmpgei	r2,zero,1592
  818dbc:	00818e08 	cmpgei	r2,zero,1592
  818dc0:	00818e40 	call	818e4 <OSCtxSw_SWITCH_PC+0x818a4>
  818dc4:	00818e40 	call	818e4 <OSCtxSw_SWITCH_PC+0x818a4>
  818dc8:	00818e08 	cmpgei	r2,zero,1592
  818dcc:	00818e08 	cmpgei	r2,zero,1592
  818dd0:	e0bffe17 	ldw	r2,-8(fp)
  818dd4:	10800917 	ldw	r2,36(r2)
  818dd8:	10800060 	cmpeqi	r2,r2,1
  818ddc:	1000331e 	bne	r2,zero,818eac <jinit_color_deconverter+0x178>
  818de0:	e0bffe17 	ldw	r2,-8(fp)
  818de4:	10800017 	ldw	r2,0(r2)
  818de8:	00c002c4 	movi	r3,11
  818dec:	10c00515 	stw	r3,20(r2)
  818df0:	e0bffe17 	ldw	r2,-8(fp)
  818df4:	10800017 	ldw	r2,0(r2)
  818df8:	10800017 	ldw	r2,0(r2)
  818dfc:	e13ffe17 	ldw	r4,-8(fp)
  818e00:	103ee83a 	callr	r2
  818e04:	00002906 	br	818eac <jinit_color_deconverter+0x178>
  818e08:	e0bffe17 	ldw	r2,-8(fp)
  818e0c:	10800917 	ldw	r2,36(r2)
  818e10:	108000e0 	cmpeqi	r2,r2,3
  818e14:	1000271e 	bne	r2,zero,818eb4 <jinit_color_deconverter+0x180>
  818e18:	e0bffe17 	ldw	r2,-8(fp)
  818e1c:	10800017 	ldw	r2,0(r2)
  818e20:	00c002c4 	movi	r3,11
  818e24:	10c00515 	stw	r3,20(r2)
  818e28:	e0bffe17 	ldw	r2,-8(fp)
  818e2c:	10800017 	ldw	r2,0(r2)
  818e30:	10800017 	ldw	r2,0(r2)
  818e34:	e13ffe17 	ldw	r4,-8(fp)
  818e38:	103ee83a 	callr	r2
  818e3c:	00001d06 	br	818eb4 <jinit_color_deconverter+0x180>
  818e40:	e0bffe17 	ldw	r2,-8(fp)
  818e44:	10800917 	ldw	r2,36(r2)
  818e48:	10800120 	cmpeqi	r2,r2,4
  818e4c:	10001b1e 	bne	r2,zero,818ebc <jinit_color_deconverter+0x188>
  818e50:	e0bffe17 	ldw	r2,-8(fp)
  818e54:	10800017 	ldw	r2,0(r2)
  818e58:	00c002c4 	movi	r3,11
  818e5c:	10c00515 	stw	r3,20(r2)
  818e60:	e0bffe17 	ldw	r2,-8(fp)
  818e64:	10800017 	ldw	r2,0(r2)
  818e68:	10800017 	ldw	r2,0(r2)
  818e6c:	e13ffe17 	ldw	r4,-8(fp)
  818e70:	103ee83a 	callr	r2
  818e74:	00001106 	br	818ebc <jinit_color_deconverter+0x188>
  818e78:	e0bffe17 	ldw	r2,-8(fp)
  818e7c:	10800917 	ldw	r2,36(r2)
  818e80:	00801016 	blt	zero,r2,818ec4 <jinit_color_deconverter+0x190>
  818e84:	e0bffe17 	ldw	r2,-8(fp)
  818e88:	10800017 	ldw	r2,0(r2)
  818e8c:	00c002c4 	movi	r3,11
  818e90:	10c00515 	stw	r3,20(r2)
  818e94:	e0bffe17 	ldw	r2,-8(fp)
  818e98:	10800017 	ldw	r2,0(r2)
  818e9c:	10800017 	ldw	r2,0(r2)
  818ea0:	e13ffe17 	ldw	r4,-8(fp)
  818ea4:	103ee83a 	callr	r2
  818ea8:	00000606 	br	818ec4 <jinit_color_deconverter+0x190>
  818eac:	0001883a 	nop
  818eb0:	00000506 	br	818ec8 <jinit_color_deconverter+0x194>
  818eb4:	0001883a 	nop
  818eb8:	00000306 	br	818ec8 <jinit_color_deconverter+0x194>
  818ebc:	0001883a 	nop
  818ec0:	00000106 	br	818ec8 <jinit_color_deconverter+0x194>
  818ec4:	0001883a 	nop
  818ec8:	e0bffe17 	ldw	r2,-8(fp)
  818ecc:	10804c17 	ldw	r2,304(r2)
  818ed0:	10001126 	beq	r2,zero,818f18 <jinit_color_deconverter+0x1e4>
  818ed4:	e0bffe17 	ldw	r2,-8(fp)
  818ed8:	10800a17 	ldw	r2,40(r2)
  818edc:	108000a0 	cmpeqi	r2,r2,2
  818ee0:	10000d1e 	bne	r2,zero,818f18 <jinit_color_deconverter+0x1e4>
  818ee4:	e0bffe17 	ldw	r2,-8(fp)
  818ee8:	10800a17 	ldw	r2,40(r2)
  818eec:	108001a0 	cmpeqi	r2,r2,6
  818ef0:	1000091e 	bne	r2,zero,818f18 <jinit_color_deconverter+0x1e4>
  818ef4:	e0bffe17 	ldw	r2,-8(fp)
  818ef8:	10800017 	ldw	r2,0(r2)
  818efc:	00c00704 	movi	r3,28
  818f00:	10c00515 	stw	r3,20(r2)
  818f04:	e0bffe17 	ldw	r2,-8(fp)
  818f08:	10800017 	ldw	r2,0(r2)
  818f0c:	10800017 	ldw	r2,0(r2)
  818f10:	e13ffe17 	ldw	r4,-8(fp)
  818f14:	103ee83a 	callr	r2
  818f18:	e0bffe17 	ldw	r2,-8(fp)
  818f1c:	10800b17 	ldw	r2,44(r2)
  818f20:	10c000a0 	cmpeqi	r3,r2,2
  818f24:	1800581e 	bne	r3,zero,819088 <jinit_color_deconverter+0x354>
  818f28:	10c000e8 	cmpgeui	r3,r2,3
  818f2c:	1800031e 	bne	r3,zero,818f3c <jinit_color_deconverter+0x208>
  818f30:	10800060 	cmpeqi	r2,r2,1
  818f34:	1000061e 	bne	r2,zero,818f50 <jinit_color_deconverter+0x21c>
  818f38:	0000e906 	br	8192e0 <jinit_color_deconverter+0x5ac>
  818f3c:	10c00120 	cmpeqi	r3,r2,4
  818f40:	1800c71e 	bne	r3,zero,819260 <jinit_color_deconverter+0x52c>
  818f44:	108001a0 	cmpeqi	r2,r2,6
  818f48:	1000991e 	bne	r2,zero,8191b0 <jinit_color_deconverter+0x47c>
  818f4c:	0000e406 	br	8192e0 <jinit_color_deconverter+0x5ac>
  818f50:	e0bffe17 	ldw	r2,-8(fp)
  818f54:	00c00044 	movi	r3,1
  818f58:	10c01e15 	stw	r3,120(r2)
  818f5c:	e0bffe17 	ldw	r2,-8(fp)
  818f60:	10800a17 	ldw	r2,40(r2)
  818f64:	10c000a0 	cmpeqi	r3,r2,2
  818f68:	1800201e 	bne	r3,zero,818fec <jinit_color_deconverter+0x2b8>
  818f6c:	10c000e8 	cmpgeui	r3,r2,3
  818f70:	1800031e 	bne	r3,zero,818f80 <jinit_color_deconverter+0x24c>
  818f74:	10800060 	cmpeqi	r2,r2,1
  818f78:	1000051e 	bne	r2,zero,818f90 <jinit_color_deconverter+0x25c>
  818f7c:	00003706 	br	81905c <jinit_color_deconverter+0x328>
  818f80:	10c000e0 	cmpeqi	r3,r2,3
  818f84:	1800021e 	bne	r3,zero,818f90 <jinit_color_deconverter+0x25c>
  818f88:	108001e0 	cmpeqi	r2,r2,7
  818f8c:	10003326 	beq	r2,zero,81905c <jinit_color_deconverter+0x328>
  818f90:	e0fffd17 	ldw	r3,-12(fp)
  818f94:	008020b4 	movhi	r2,130
  818f98:	10a25304 	addi	r2,r2,-30388
  818f9c:	18800115 	stw	r2,4(r3)
  818fa0:	00800044 	movi	r2,1
  818fa4:	e0bffc15 	stw	r2,-16(fp)
  818fa8:	00000b06 	br	818fd8 <jinit_color_deconverter+0x2a4>
  818fac:	e0bffe17 	ldw	r2,-8(fp)
  818fb0:	14003617 	ldw	r16,216(r2)
  818fb4:	e0bffc17 	ldw	r2,-16(fp)
  818fb8:	01401604 	movi	r5,88
  818fbc:	1009883a 	mov	r4,r2
  818fc0:	08301e80 	call	8301e8 <__mulsi3>
  818fc4:	8085883a 	add	r2,r16,r2
  818fc8:	10000d15 	stw	zero,52(r2)
  818fcc:	e0bffc17 	ldw	r2,-16(fp)
  818fd0:	10800044 	addi	r2,r2,1
  818fd4:	e0bffc15 	stw	r2,-16(fp)
  818fd8:	e0bffe17 	ldw	r2,-8(fp)
  818fdc:	10800917 	ldw	r2,36(r2)
  818fe0:	e0fffc17 	ldw	r3,-16(fp)
  818fe4:	18bff116 	blt	r3,r2,818fac <__alt_mem_epcs_flash_controller_0+0xff80ffac>
  818fe8:	00002606 	br	819084 <jinit_color_deconverter+0x350>
  818fec:	e0bffe17 	ldw	r2,-8(fp)
  818ff0:	10804c17 	ldw	r2,304(r2)
  818ff4:	10000326 	beq	r2,zero,819004 <jinit_color_deconverter+0x2d0>
  818ff8:	10800060 	cmpeqi	r2,r2,1
  818ffc:	1000061e 	bne	r2,zero,819018 <jinit_color_deconverter+0x2e4>
  819000:	00000a06 	br	81902c <jinit_color_deconverter+0x2f8>
  819004:	e0fffd17 	ldw	r3,-12(fp)
  819008:	008020b4 	movhi	r2,130
  81900c:	10a07d04 	addi	r2,r2,-32268
  819010:	18800115 	stw	r2,4(r3)
  819014:	00000e06 	br	819050 <jinit_color_deconverter+0x31c>
  819018:	e0fffd17 	ldw	r3,-12(fp)
  81901c:	008020b4 	movhi	r2,130
  819020:	10a14a04 	addi	r2,r2,-31448
  819024:	18800115 	stw	r2,4(r3)
  819028:	00000906 	br	819050 <jinit_color_deconverter+0x31c>
  81902c:	e0bffe17 	ldw	r2,-8(fp)
  819030:	10800017 	ldw	r2,0(r2)
  819034:	00c00704 	movi	r3,28
  819038:	10c00515 	stw	r3,20(r2)
  81903c:	e0bffe17 	ldw	r2,-8(fp)
  819040:	10800017 	ldw	r2,0(r2)
  819044:	10800017 	ldw	r2,0(r2)
  819048:	e13ffe17 	ldw	r4,-8(fp)
  81904c:	103ee83a 	callr	r2
  819050:	e13ffe17 	ldw	r4,-8(fp)
  819054:	08180dc0 	call	8180dc <build_rgb_y_table>
  819058:	00000a06 	br	819084 <jinit_color_deconverter+0x350>
  81905c:	e0bffe17 	ldw	r2,-8(fp)
  819060:	10800017 	ldw	r2,0(r2)
  819064:	00c00704 	movi	r3,28
  819068:	10c00515 	stw	r3,20(r2)
  81906c:	e0bffe17 	ldw	r2,-8(fp)
  819070:	10800017 	ldw	r2,0(r2)
  819074:	10800017 	ldw	r2,0(r2)
  819078:	e13ffe17 	ldw	r4,-8(fp)
  81907c:	103ee83a 	callr	r2
  819080:	0000af06 	br	819340 <jinit_color_deconverter+0x60c>
  819084:	0000ae06 	br	819340 <jinit_color_deconverter+0x60c>
  819088:	e0bffe17 	ldw	r2,-8(fp)
  81908c:	00c000c4 	movi	r3,3
  819090:	10c01e15 	stw	r3,120(r2)
  819094:	e0bffe17 	ldw	r2,-8(fp)
  819098:	10800a17 	ldw	r2,40(r2)
  81909c:	10c000a0 	cmpeqi	r3,r2,2
  8190a0:	18001d1e 	bne	r3,zero,819118 <jinit_color_deconverter+0x3e4>
  8190a4:	10c000e8 	cmpgeui	r3,r2,3
  8190a8:	1800031e 	bne	r3,zero,8190b8 <jinit_color_deconverter+0x384>
  8190ac:	10800060 	cmpeqi	r2,r2,1
  8190b0:	1000061e 	bne	r2,zero,8190cc <jinit_color_deconverter+0x398>
  8190b4:	00003306 	br	819184 <jinit_color_deconverter+0x450>
  8190b8:	10c000e0 	cmpeqi	r3,r2,3
  8190bc:	1800081e 	bne	r3,zero,8190e0 <jinit_color_deconverter+0x3ac>
  8190c0:	108001e0 	cmpeqi	r2,r2,7
  8190c4:	10000d1e 	bne	r2,zero,8190fc <jinit_color_deconverter+0x3c8>
  8190c8:	00002e06 	br	819184 <jinit_color_deconverter+0x450>
  8190cc:	e0fffd17 	ldw	r3,-12(fp)
  8190d0:	008020b4 	movhi	r2,130
  8190d4:	10a26e04 	addi	r2,r2,-30280
  8190d8:	18800115 	stw	r2,4(r3)
  8190dc:	00003306 	br	8191ac <jinit_color_deconverter+0x478>
  8190e0:	e0fffd17 	ldw	r3,-12(fp)
  8190e4:	00802074 	movhi	r2,129
  8190e8:	109fac04 	addi	r2,r2,32432
  8190ec:	18800115 	stw	r2,4(r3)
  8190f0:	e13ffe17 	ldw	r4,-8(fp)
  8190f4:	0817ad40 	call	817ad4 <build_ycc_rgb_table>
  8190f8:	00002c06 	br	8191ac <jinit_color_deconverter+0x478>
  8190fc:	e0fffd17 	ldw	r3,-12(fp)
  819100:	00802074 	movhi	r2,129
  819104:	109fac04 	addi	r2,r2,32432
  819108:	18800115 	stw	r2,4(r3)
  81910c:	e13ffe17 	ldw	r4,-8(fp)
  819110:	0817cc00 	call	817cc0 <build_bg_ycc_rgb_table>
  819114:	00002506 	br	8191ac <jinit_color_deconverter+0x478>
  819118:	e0bffe17 	ldw	r2,-8(fp)
  81911c:	10804c17 	ldw	r2,304(r2)
  819120:	10000326 	beq	r2,zero,819130 <jinit_color_deconverter+0x3fc>
  819124:	10800060 	cmpeqi	r2,r2,1
  819128:	1000061e 	bne	r2,zero,819144 <jinit_color_deconverter+0x410>
  81912c:	00000a06 	br	819158 <jinit_color_deconverter+0x424>
  819130:	e0fffd17 	ldw	r3,-12(fp)
  819134:	008020b4 	movhi	r2,130
  819138:	10a1be04 	addi	r2,r2,-30984
  81913c:	18800115 	stw	r2,4(r3)
  819140:	00000f06 	br	819180 <jinit_color_deconverter+0x44c>
  819144:	e0fffd17 	ldw	r3,-12(fp)
  819148:	008020b4 	movhi	r2,130
  81914c:	10a0ea04 	addi	r2,r2,-31832
  819150:	18800115 	stw	r2,4(r3)
  819154:	00000a06 	br	819180 <jinit_color_deconverter+0x44c>
  819158:	e0bffe17 	ldw	r2,-8(fp)
  81915c:	10800017 	ldw	r2,0(r2)
  819160:	00c00704 	movi	r3,28
  819164:	10c00515 	stw	r3,20(r2)
  819168:	e0bffe17 	ldw	r2,-8(fp)
  81916c:	10800017 	ldw	r2,0(r2)
  819170:	10800017 	ldw	r2,0(r2)
  819174:	e13ffe17 	ldw	r4,-8(fp)
  819178:	103ee83a 	callr	r2
  81917c:	00000b06 	br	8191ac <jinit_color_deconverter+0x478>
  819180:	00000a06 	br	8191ac <jinit_color_deconverter+0x478>
  819184:	e0bffe17 	ldw	r2,-8(fp)
  819188:	10800017 	ldw	r2,0(r2)
  81918c:	00c00704 	movi	r3,28
  819190:	10c00515 	stw	r3,20(r2)
  819194:	e0bffe17 	ldw	r2,-8(fp)
  819198:	10800017 	ldw	r2,0(r2)
  81919c:	10800017 	ldw	r2,0(r2)
  8191a0:	e13ffe17 	ldw	r4,-8(fp)
  8191a4:	103ee83a 	callr	r2
  8191a8:	00006506 	br	819340 <jinit_color_deconverter+0x60c>
  8191ac:	00006406 	br	819340 <jinit_color_deconverter+0x60c>
  8191b0:	e0bffe17 	ldw	r2,-8(fp)
  8191b4:	00c000c4 	movi	r3,3
  8191b8:	10c01e15 	stw	r3,120(r2)
  8191bc:	e0bffe17 	ldw	r2,-8(fp)
  8191c0:	10800a17 	ldw	r2,40(r2)
  8191c4:	10800198 	cmpnei	r2,r2,6
  8191c8:	10001a1e 	bne	r2,zero,819234 <jinit_color_deconverter+0x500>
  8191cc:	e0bffe17 	ldw	r2,-8(fp)
  8191d0:	10804c17 	ldw	r2,304(r2)
  8191d4:	10000326 	beq	r2,zero,8191e4 <jinit_color_deconverter+0x4b0>
  8191d8:	10800060 	cmpeqi	r2,r2,1
  8191dc:	1000061e 	bne	r2,zero,8191f8 <jinit_color_deconverter+0x4c4>
  8191e0:	00000a06 	br	81920c <jinit_color_deconverter+0x4d8>
  8191e4:	e0fffd17 	ldw	r3,-12(fp)
  8191e8:	008020b4 	movhi	r2,130
  8191ec:	10a1be04 	addi	r2,r2,-30984
  8191f0:	18800115 	stw	r2,4(r3)
  8191f4:	00001906 	br	81925c <jinit_color_deconverter+0x528>
  8191f8:	e0fffd17 	ldw	r3,-12(fp)
  8191fc:	008020b4 	movhi	r2,130
  819200:	10a0ea04 	addi	r2,r2,-31832
  819204:	18800115 	stw	r2,4(r3)
  819208:	00001406 	br	81925c <jinit_color_deconverter+0x528>
  81920c:	e0bffe17 	ldw	r2,-8(fp)
  819210:	10800017 	ldw	r2,0(r2)
  819214:	00c00704 	movi	r3,28
  819218:	10c00515 	stw	r3,20(r2)
  81921c:	e0bffe17 	ldw	r2,-8(fp)
  819220:	10800017 	ldw	r2,0(r2)
  819224:	10800017 	ldw	r2,0(r2)
  819228:	e13ffe17 	ldw	r4,-8(fp)
  81922c:	103ee83a 	callr	r2
  819230:	00004306 	br	819340 <jinit_color_deconverter+0x60c>
  819234:	e0bffe17 	ldw	r2,-8(fp)
  819238:	10800017 	ldw	r2,0(r2)
  81923c:	00c00704 	movi	r3,28
  819240:	10c00515 	stw	r3,20(r2)
  819244:	e0bffe17 	ldw	r2,-8(fp)
  819248:	10800017 	ldw	r2,0(r2)
  81924c:	10800017 	ldw	r2,0(r2)
  819250:	e13ffe17 	ldw	r4,-8(fp)
  819254:	103ee83a 	callr	r2
  819258:	00003906 	br	819340 <jinit_color_deconverter+0x60c>
  81925c:	00003806 	br	819340 <jinit_color_deconverter+0x60c>
  819260:	e0bffe17 	ldw	r2,-8(fp)
  819264:	00c00104 	movi	r3,4
  819268:	10c01e15 	stw	r3,120(r2)
  81926c:	e0bffe17 	ldw	r2,-8(fp)
  819270:	10800a17 	ldw	r2,40(r2)
  819274:	10c00120 	cmpeqi	r3,r2,4
  819278:	1800091e 	bne	r3,zero,8192a0 <jinit_color_deconverter+0x56c>
  81927c:	10800160 	cmpeqi	r2,r2,5
  819280:	10000c26 	beq	r2,zero,8192b4 <jinit_color_deconverter+0x580>
  819284:	e0fffd17 	ldw	r3,-12(fp)
  819288:	008020b4 	movhi	r2,130
  81928c:	10a2a504 	addi	r2,r2,-30060
  819290:	18800115 	stw	r2,4(r3)
  819294:	e13ffe17 	ldw	r4,-8(fp)
  819298:	0817ad40 	call	817ad4 <build_ycc_rgb_table>
  81929c:	00000f06 	br	8192dc <jinit_color_deconverter+0x5a8>
  8192a0:	e0fffd17 	ldw	r3,-12(fp)
  8192a4:	008020b4 	movhi	r2,130
  8192a8:	10a20c04 	addi	r2,r2,-30672
  8192ac:	18800115 	stw	r2,4(r3)
  8192b0:	00000a06 	br	8192dc <jinit_color_deconverter+0x5a8>
  8192b4:	e0bffe17 	ldw	r2,-8(fp)
  8192b8:	10800017 	ldw	r2,0(r2)
  8192bc:	00c00704 	movi	r3,28
  8192c0:	10c00515 	stw	r3,20(r2)
  8192c4:	e0bffe17 	ldw	r2,-8(fp)
  8192c8:	10800017 	ldw	r2,0(r2)
  8192cc:	10800017 	ldw	r2,0(r2)
  8192d0:	e13ffe17 	ldw	r4,-8(fp)
  8192d4:	103ee83a 	callr	r2
  8192d8:	00001906 	br	819340 <jinit_color_deconverter+0x60c>
  8192dc:	00001806 	br	819340 <jinit_color_deconverter+0x60c>
  8192e0:	e0bffe17 	ldw	r2,-8(fp)
  8192e4:	10c00b17 	ldw	r3,44(r2)
  8192e8:	e0bffe17 	ldw	r2,-8(fp)
  8192ec:	10800a17 	ldw	r2,40(r2)
  8192f0:	1880091e 	bne	r3,r2,819318 <jinit_color_deconverter+0x5e4>
  8192f4:	e0bffe17 	ldw	r2,-8(fp)
  8192f8:	10c00917 	ldw	r3,36(r2)
  8192fc:	e0bffe17 	ldw	r2,-8(fp)
  819300:	10c01e15 	stw	r3,120(r2)
  819304:	e0fffd17 	ldw	r3,-12(fp)
  819308:	008020b4 	movhi	r2,130
  81930c:	10a20c04 	addi	r2,r2,-30672
  819310:	18800115 	stw	r2,4(r3)
  819314:	00000906 	br	81933c <jinit_color_deconverter+0x608>
  819318:	e0bffe17 	ldw	r2,-8(fp)
  81931c:	10800017 	ldw	r2,0(r2)
  819320:	00c00704 	movi	r3,28
  819324:	10c00515 	stw	r3,20(r2)
  819328:	e0bffe17 	ldw	r2,-8(fp)
  81932c:	10800017 	ldw	r2,0(r2)
  819330:	10800017 	ldw	r2,0(r2)
  819334:	e13ffe17 	ldw	r4,-8(fp)
  819338:	103ee83a 	callr	r2
  81933c:	0001883a 	nop
  819340:	e0bffe17 	ldw	r2,-8(fp)
  819344:	10801517 	ldw	r2,84(r2)
  819348:	10000426 	beq	r2,zero,81935c <jinit_color_deconverter+0x628>
  81934c:	e0bffe17 	ldw	r2,-8(fp)
  819350:	00c00044 	movi	r3,1
  819354:	10c01f15 	stw	r3,124(r2)
  819358:	00000406 	br	81936c <jinit_color_deconverter+0x638>
  81935c:	e0bffe17 	ldw	r2,-8(fp)
  819360:	10c01e17 	ldw	r3,120(r2)
  819364:	e0bffe17 	ldw	r2,-8(fp)
  819368:	10c01f15 	stw	r3,124(r2)
  81936c:	0001883a 	nop
  819370:	e6ffff04 	addi	sp,fp,-4
  819374:	dfc00217 	ldw	ra,8(sp)
  819378:	df000117 	ldw	fp,4(sp)
  81937c:	dc000017 	ldw	r16,0(sp)
  819380:	dec00304 	addi	sp,sp,12
  819384:	f800283a 	ret

00819388 <start_pass>:
  819388:	defff004 	addi	sp,sp,-64
  81938c:	dfc00f15 	stw	ra,60(sp)
  819390:	df000e15 	stw	fp,56(sp)
  819394:	dc000d15 	stw	r16,52(sp)
  819398:	df000e04 	addi	fp,sp,56
  81939c:	e13ffe15 	stw	r4,-8(fp)
  8193a0:	e0bffe17 	ldw	r2,-8(fp)
  8193a4:	10807617 	ldw	r2,472(r2)
  8193a8:	e0bff915 	stw	r2,-28(fp)
  8193ac:	e03ff515 	stw	zero,-44(fp)
  8193b0:	e03ff615 	stw	zero,-40(fp)
  8193b4:	e03ff215 	stw	zero,-56(fp)
  8193b8:	e0bffe17 	ldw	r2,-8(fp)
  8193bc:	10803617 	ldw	r2,216(r2)
  8193c0:	e0bff415 	stw	r2,-48(fp)
  8193c4:	00020106 	br	819bcc <start_pass+0x844>
  8193c8:	e0bff417 	ldw	r2,-48(fp)
  8193cc:	10800917 	ldw	r2,36(r2)
  8193d0:	1006923a 	slli	r3,r2,8
  8193d4:	e0bff417 	ldw	r2,-48(fp)
  8193d8:	10800a17 	ldw	r2,40(r2)
  8193dc:	1885883a 	add	r2,r3,r2
  8193e0:	10c1c1e0 	cmpeqi	r3,r2,1799
  8193e4:	1800751e 	bne	r3,zero,8195bc <start_pass+0x234>
  8193e8:	10c1c208 	cmpgei	r3,r2,1800
  8193ec:	1800281e 	bne	r3,zero,819490 <start_pass+0x108>
  8193f0:	10c100a0 	cmpeqi	r3,r2,1026
  8193f4:	1800bc1e 	bne	r3,zero,8196e8 <start_pass+0x360>
  8193f8:	10c100c8 	cmpgei	r3,r2,1027
  8193fc:	1800121e 	bne	r3,zero,819448 <start_pass+0xc0>
  819400:	10c080a0 	cmpeqi	r3,r2,514
  819404:	1800541e 	bne	r3,zero,819558 <start_pass+0x1d0>
  819408:	10c080c8 	cmpgei	r3,r2,515
  81940c:	1800071e 	bne	r3,zero,81942c <start_pass+0xa4>
  819410:	10c040a0 	cmpeqi	r3,r2,258
  819414:	1800e11e 	bne	r3,zero,81979c <start_pass+0x414>
  819418:	10c08060 	cmpeqi	r3,r2,513
  81941c:	1800b71e 	bne	r3,zero,8196fc <start_pass+0x374>
  819420:	10804060 	cmpeqi	r2,r2,257
  819424:	1000471e 	bne	r2,zero,819544 <start_pass+0x1bc>
  819428:	00010506 	br	819840 <start_pass+0x4b8>
  81942c:	10c0c0e0 	cmpeqi	r3,r2,771
  819430:	18004e1e 	bne	r3,zero,81956c <start_pass+0x1e4>
  819434:	10c0c1a0 	cmpeqi	r3,r2,774
  819438:	1800ce1e 	bne	r3,zero,819774 <start_pass+0x3ec>
  81943c:	10808120 	cmpeqi	r2,r2,516
  819440:	1000d11e 	bne	r2,zero,819788 <start_pass+0x400>
  819444:	0000fe06 	br	819840 <start_pass+0x4b8>
  819448:	10c142a0 	cmpeqi	r3,r2,1290
  81944c:	1800bf1e 	bne	r3,zero,81974c <start_pass+0x3c4>
  819450:	10c142c8 	cmpgei	r3,r2,1291
  819454:	1800071e 	bne	r3,zero,819474 <start_pass+0xec>
  819458:	10c10220 	cmpeqi	r3,r2,1032
  81945c:	1800c01e 	bne	r3,zero,819760 <start_pass+0x3d8>
  819460:	10c14160 	cmpeqi	r3,r2,1285
  819464:	18004b1e 	bne	r3,zero,819594 <start_pass+0x20c>
  819468:	10810120 	cmpeqi	r2,r2,1028
  81946c:	1000441e 	bne	r2,zero,819580 <start_pass+0x1f8>
  819470:	0000f306 	br	819840 <start_pass+0x4b8>
  819474:	10c181a0 	cmpeqi	r3,r2,1542
  819478:	18004b1e 	bne	r3,zero,8195a8 <start_pass+0x220>
  81947c:	10c18320 	cmpeqi	r3,r2,1548
  819480:	1800ad1e 	bne	r3,zero,819738 <start_pass+0x3b0>
  819484:	108180e0 	cmpeqi	r2,r2,1539
  819488:	1000921e 	bne	r2,zero,8196d4 <start_pass+0x34c>
  81948c:	0000ec06 	br	819840 <start_pass+0x4b8>
  819490:	10c2c2e0 	cmpeqi	r3,r2,2827
  819494:	1800581e 	bne	r3,zero,8195f8 <start_pass+0x270>
  819498:	10c2c308 	cmpgei	r3,r2,2828
  81949c:	1800121e 	bne	r3,zero,8194e8 <start_pass+0x160>
  8194a0:	10c20420 	cmpeqi	r3,r2,2064
  8194a4:	18009a1e 	bne	r3,zero,819710 <start_pass+0x388>
  8194a8:	10c20448 	cmpgei	r3,r2,2065
  8194ac:	1800071e 	bne	r3,zero,8194cc <start_pass+0x144>
  8194b0:	10c20120 	cmpeqi	r3,r2,2052
  8194b4:	1800821e 	bne	r3,zero,8196c0 <start_pass+0x338>
  8194b8:	10c20220 	cmpeqi	r3,r2,2056
  8194bc:	1800bc1e 	bne	r3,zero,8197b0 <start_pass+0x428>
  8194c0:	1081c3a0 	cmpeqi	r2,r2,1806
  8194c4:	1000971e 	bne	r2,zero,819724 <start_pass+0x39c>
  8194c8:	0000dd06 	br	819840 <start_pass+0x4b8>
  8194cc:	10c28160 	cmpeqi	r3,r2,2565
  8194d0:	1800761e 	bne	r3,zero,8196ac <start_pass+0x324>
  8194d4:	10c282a0 	cmpeqi	r3,r2,2570
  8194d8:	1800421e 	bne	r3,zero,8195e4 <start_pass+0x25c>
  8194dc:	10824260 	cmpeqi	r2,r2,2313
  8194e0:	10003b1e 	bne	r2,zero,8195d0 <start_pass+0x248>
  8194e4:	0000d606 	br	819840 <start_pass+0x4b8>
  8194e8:	10c381e0 	cmpeqi	r3,r2,3591
  8194ec:	1800651e 	bne	r3,zero,819684 <start_pass+0x2fc>
  8194f0:	10c38208 	cmpgei	r3,r2,3592
  8194f4:	1800071e 	bne	r3,zero,819514 <start_pass+0x18c>
  8194f8:	10c30320 	cmpeqi	r3,r2,3084
  8194fc:	1800431e 	bne	r3,zero,81960c <start_pass+0x284>
  819500:	10c34360 	cmpeqi	r3,r2,3341
  819504:	1800461e 	bne	r3,zero,819620 <start_pass+0x298>
  819508:	108301a0 	cmpeqi	r2,r2,3078
  81950c:	1000621e 	bne	r2,zero,819698 <start_pass+0x310>
  819510:	0000cb06 	br	819840 <start_pass+0x4b8>
  819514:	10c3c3e0 	cmpeqi	r3,r2,3855
  819518:	18004b1e 	bne	r3,zero,819648 <start_pass+0x2c0>
  81951c:	10c3c408 	cmpgei	r3,r2,3856
  819520:	1800031e 	bne	r3,zero,819530 <start_pass+0x1a8>
  819524:	108383a0 	cmpeqi	r2,r2,3598
  819528:	1000421e 	bne	r2,zero,819634 <start_pass+0x2ac>
  81952c:	0000c406 	br	819840 <start_pass+0x4b8>
  819530:	10c40220 	cmpeqi	r3,r2,4104
  819534:	18004e1e 	bne	r3,zero,819670 <start_pass+0x2e8>
  819538:	10840420 	cmpeqi	r2,r2,4112
  81953c:	1000471e 	bne	r2,zero,81965c <start_pass+0x2d4>
  819540:	0000bf06 	br	819840 <start_pass+0x4b8>
  819544:	008020b4 	movhi	r2,130
  819548:	10894f04 	addi	r2,r2,9532
  81954c:	e0bff615 	stw	r2,-40(fp)
  819550:	e03ff515 	stw	zero,-44(fp)
  819554:	0000ce06 	br	819890 <start_pass+0x508>
  819558:	008020b4 	movhi	r2,130
  81955c:	1088c004 	addi	r2,r2,8960
  819560:	e0bff615 	stw	r2,-40(fp)
  819564:	e03ff515 	stw	zero,-44(fp)
  819568:	0000c906 	br	819890 <start_pass+0x508>
  81956c:	008020b4 	movhi	r2,130
  819570:	1087f104 	addi	r2,r2,8132
  819574:	e0bff615 	stw	r2,-40(fp)
  819578:	e03ff515 	stw	zero,-44(fp)
  81957c:	0000c406 	br	819890 <start_pass+0x508>
  819580:	008020b4 	movhi	r2,130
  819584:	1086e704 	addi	r2,r2,7068
  819588:	e0bff615 	stw	r2,-40(fp)
  81958c:	e03ff515 	stw	zero,-44(fp)
  819590:	0000bf06 	br	819890 <start_pass+0x508>
  819594:	008020b4 	movhi	r2,130
  819598:	10858a04 	addi	r2,r2,5672
  81959c:	e0bff615 	stw	r2,-40(fp)
  8195a0:	e03ff515 	stw	zero,-44(fp)
  8195a4:	0000ba06 	br	819890 <start_pass+0x508>
  8195a8:	008020b4 	movhi	r2,130
  8195ac:	10840604 	addi	r2,r2,4120
  8195b0:	e0bff615 	stw	r2,-40(fp)
  8195b4:	e03ff515 	stw	zero,-44(fp)
  8195b8:	0000b506 	br	819890 <start_pass+0x508>
  8195bc:	008020b4 	movhi	r2,130
  8195c0:	1081e304 	addi	r2,r2,1932
  8195c4:	e0bff615 	stw	r2,-40(fp)
  8195c8:	e03ff515 	stw	zero,-44(fp)
  8195cc:	0000b006 	br	819890 <start_pass+0x508>
  8195d0:	008020b4 	movhi	r2,130
  8195d4:	10897d04 	addi	r2,r2,9716
  8195d8:	e0bff615 	stw	r2,-40(fp)
  8195dc:	e03ff515 	stw	zero,-44(fp)
  8195e0:	0000ab06 	br	819890 <start_pass+0x508>
  8195e4:	008020b4 	movhi	r2,130
  8195e8:	108bd104 	addi	r2,r2,12100
  8195ec:	e0bff615 	stw	r2,-40(fp)
  8195f0:	e03ff515 	stw	zero,-44(fp)
  8195f4:	0000a606 	br	819890 <start_pass+0x508>
  8195f8:	008020b4 	movhi	r2,130
  8195fc:	108e6704 	addi	r2,r2,14748
  819600:	e0bff615 	stw	r2,-40(fp)
  819604:	e03ff515 	stw	zero,-44(fp)
  819608:	0000a106 	br	819890 <start_pass+0x508>
  81960c:	008020b4 	movhi	r2,130
  819610:	10918304 	addi	r2,r2,17932
  819614:	e0bff615 	stw	r2,-40(fp)
  819618:	e03ff515 	stw	zero,-44(fp)
  81961c:	00009c06 	br	819890 <start_pass+0x508>
  819620:	008020b4 	movhi	r2,130
  819624:	10947104 	addi	r2,r2,20932
  819628:	e0bff615 	stw	r2,-40(fp)
  81962c:	e03ff515 	stw	zero,-44(fp)
  819630:	00009706 	br	819890 <start_pass+0x508>
  819634:	008020b4 	movhi	r2,130
  819638:	1097ff04 	addi	r2,r2,24572
  81963c:	e0bff615 	stw	r2,-40(fp)
  819640:	e03ff515 	stw	zero,-44(fp)
  819644:	00009206 	br	819890 <start_pass+0x508>
  819648:	008020b4 	movhi	r2,130
  81964c:	109b6304 	addi	r2,r2,28044
  819650:	e0bff615 	stw	r2,-40(fp)
  819654:	e03ff515 	stw	zero,-44(fp)
  819658:	00008d06 	br	819890 <start_pass+0x508>
  81965c:	008020b4 	movhi	r2,130
  819660:	109eeb04 	addi	r2,r2,31660
  819664:	e0bff615 	stw	r2,-40(fp)
  819668:	e03ff515 	stw	zero,-44(fp)
  81966c:	00008806 	br	819890 <start_pass+0x508>
  819670:	008020f4 	movhi	r2,131
  819674:	10a2ff04 	addi	r2,r2,-29700
  819678:	e0bff615 	stw	r2,-40(fp)
  81967c:	e03ff515 	stw	zero,-44(fp)
  819680:	00008306 	br	819890 <start_pass+0x508>
  819684:	008020f4 	movhi	r2,131
  819688:	10a6b504 	addi	r2,r2,-25900
  81968c:	e0bff615 	stw	r2,-40(fp)
  819690:	e03ff515 	stw	zero,-44(fp)
  819694:	00007e06 	br	819890 <start_pass+0x508>
  819698:	008020f4 	movhi	r2,131
  81969c:	10a98104 	addi	r2,r2,-23036
  8196a0:	e0bff615 	stw	r2,-40(fp)
  8196a4:	e03ff515 	stw	zero,-44(fp)
  8196a8:	00007906 	br	819890 <start_pass+0x508>
  8196ac:	008020f4 	movhi	r2,131
  8196b0:	10abbe04 	addi	r2,r2,-20744
  8196b4:	e0bff615 	stw	r2,-40(fp)
  8196b8:	e03ff515 	stw	zero,-44(fp)
  8196bc:	00007406 	br	819890 <start_pass+0x508>
  8196c0:	008020f4 	movhi	r2,131
  8196c4:	10adb404 	addi	r2,r2,-18736
  8196c8:	e0bff615 	stw	r2,-40(fp)
  8196cc:	e03ff515 	stw	zero,-44(fp)
  8196d0:	00006f06 	br	819890 <start_pass+0x508>
  8196d4:	008020f4 	movhi	r2,131
  8196d8:	10af5f04 	addi	r2,r2,-17028
  8196dc:	e0bff615 	stw	r2,-40(fp)
  8196e0:	e03ff515 	stw	zero,-44(fp)
  8196e4:	00006a06 	br	819890 <start_pass+0x508>
  8196e8:	008020f4 	movhi	r2,131
  8196ec:	10b08104 	addi	r2,r2,-15868
  8196f0:	e0bff615 	stw	r2,-40(fp)
  8196f4:	e03ff515 	stw	zero,-44(fp)
  8196f8:	00006506 	br	819890 <start_pass+0x508>
  8196fc:	008020f4 	movhi	r2,131
  819700:	10b13c04 	addi	r2,r2,-15120
  819704:	e0bff615 	stw	r2,-40(fp)
  819708:	e03ff515 	stw	zero,-44(fp)
  81970c:	00006006 	br	819890 <start_pass+0x508>
  819710:	008020f4 	movhi	r2,131
  819714:	10b18604 	addi	r2,r2,-14824
  819718:	e0bff615 	stw	r2,-40(fp)
  81971c:	e03ff515 	stw	zero,-44(fp)
  819720:	00005b06 	br	819890 <start_pass+0x508>
  819724:	008020f4 	movhi	r2,131
  819728:	10b4b104 	addi	r2,r2,-11580
  81972c:	e0bff615 	stw	r2,-40(fp)
  819730:	e03ff515 	stw	zero,-44(fp)
  819734:	00005606 	br	819890 <start_pass+0x508>
  819738:	008020f4 	movhi	r2,131
  81973c:	10b76c04 	addi	r2,r2,-8784
  819740:	e0bff615 	stw	r2,-40(fp)
  819744:	e03ff515 	stw	zero,-44(fp)
  819748:	00005106 	br	819890 <start_pass+0x508>
  81974c:	008020f4 	movhi	r2,131
  819750:	10b9a304 	addi	r2,r2,-6516
  819754:	e0bff615 	stw	r2,-40(fp)
  819758:	e03ff515 	stw	zero,-44(fp)
  81975c:	00004c06 	br	819890 <start_pass+0x508>
  819760:	008020f4 	movhi	r2,131
  819764:	10bba004 	addi	r2,r2,-4480
  819768:	e0bff615 	stw	r2,-40(fp)
  81976c:	e03ff515 	stw	zero,-44(fp)
  819770:	00004706 	br	819890 <start_pass+0x508>
  819774:	008020f4 	movhi	r2,131
  819778:	10bdca04 	addi	r2,r2,-2264
  81977c:	e0bff615 	stw	r2,-40(fp)
  819780:	e03ff515 	stw	zero,-44(fp)
  819784:	00004206 	br	819890 <start_pass+0x508>
  819788:	008020f4 	movhi	r2,131
  81978c:	10befb04 	addi	r2,r2,-1044
  819790:	e0bff615 	stw	r2,-40(fp)
  819794:	e03ff515 	stw	zero,-44(fp)
  819798:	00003d06 	br	819890 <start_pass+0x508>
  81979c:	008020f4 	movhi	r2,131
  8197a0:	10bfc204 	addi	r2,r2,-248
  8197a4:	e0bff615 	stw	r2,-40(fp)
  8197a8:	e03ff515 	stw	zero,-44(fp)
  8197ac:	00003806 	br	819890 <start_pass+0x508>
  8197b0:	e0bffe17 	ldw	r2,-8(fp)
  8197b4:	10801217 	ldw	r2,72(r2)
  8197b8:	10c00060 	cmpeqi	r3,r2,1
  8197bc:	1800091e 	bne	r3,zero,8197e4 <start_pass+0x45c>
  8197c0:	0080032e 	bgeu	zero,r2,8197d0 <start_pass+0x448>
  8197c4:	108000a0 	cmpeqi	r2,r2,2
  8197c8:	10000c1e 	bne	r2,zero,8197fc <start_pass+0x474>
  8197cc:	00001106 	br	819814 <start_pass+0x48c>
  8197d0:	008020b4 	movhi	r2,130
  8197d4:	10bed204 	addi	r2,r2,-1208
  8197d8:	e0bff615 	stw	r2,-40(fp)
  8197dc:	e03ff515 	stw	zero,-44(fp)
  8197e0:	00001606 	br	81983c <start_pass+0x4b4>
  8197e4:	008020b4 	movhi	r2,130
  8197e8:	10bc1204 	addi	r2,r2,-4024
  8197ec:	e0bff615 	stw	r2,-40(fp)
  8197f0:	00800044 	movi	r2,1
  8197f4:	e0bff515 	stw	r2,-44(fp)
  8197f8:	00001006 	br	81983c <start_pass+0x4b4>
  8197fc:	008020b4 	movhi	r2,130
  819800:	10b8fb04 	addi	r2,r2,-7188
  819804:	e0bff615 	stw	r2,-40(fp)
  819808:	00800084 	movi	r2,2
  81980c:	e0bff515 	stw	r2,-44(fp)
  819810:	00000a06 	br	81983c <start_pass+0x4b4>
  819814:	e0bffe17 	ldw	r2,-8(fp)
  819818:	10800017 	ldw	r2,0(r2)
  81981c:	00c00c44 	movi	r3,49
  819820:	10c00515 	stw	r3,20(r2)
  819824:	e0bffe17 	ldw	r2,-8(fp)
  819828:	10800017 	ldw	r2,0(r2)
  81982c:	10800017 	ldw	r2,0(r2)
  819830:	e13ffe17 	ldw	r4,-8(fp)
  819834:	103ee83a 	callr	r2
  819838:	0001883a 	nop
  81983c:	00001406 	br	819890 <start_pass+0x508>
  819840:	e0bffe17 	ldw	r2,-8(fp)
  819844:	10800017 	ldw	r2,0(r2)
  819848:	00c001c4 	movi	r3,7
  81984c:	10c00515 	stw	r3,20(r2)
  819850:	e0bffe17 	ldw	r2,-8(fp)
  819854:	10800017 	ldw	r2,0(r2)
  819858:	e0fff417 	ldw	r3,-48(fp)
  81985c:	18c00917 	ldw	r3,36(r3)
  819860:	10c00615 	stw	r3,24(r2)
  819864:	e0bffe17 	ldw	r2,-8(fp)
  819868:	10800017 	ldw	r2,0(r2)
  81986c:	e0fff417 	ldw	r3,-48(fp)
  819870:	18c00a17 	ldw	r3,40(r3)
  819874:	10c00715 	stw	r3,28(r2)
  819878:	e0bffe17 	ldw	r2,-8(fp)
  81987c:	10800017 	ldw	r2,0(r2)
  819880:	10800017 	ldw	r2,0(r2)
  819884:	e13ffe17 	ldw	r4,-8(fp)
  819888:	103ee83a 	callr	r2
  81988c:	0001883a 	nop
  819890:	e0fff917 	ldw	r3,-28(fp)
  819894:	e0bff217 	ldw	r2,-56(fp)
  819898:	10800044 	addi	r2,r2,1
  81989c:	1085883a 	add	r2,r2,r2
  8198a0:	1085883a 	add	r2,r2,r2
  8198a4:	1885883a 	add	r2,r3,r2
  8198a8:	e0fff617 	ldw	r3,-40(fp)
  8198ac:	10c00015 	stw	r3,0(r2)
  8198b0:	e0bff417 	ldw	r2,-48(fp)
  8198b4:	10800d17 	ldw	r2,52(r2)
  8198b8:	1000bb26 	beq	r2,zero,819ba8 <start_pass+0x820>
  8198bc:	e0fff917 	ldw	r3,-28(fp)
  8198c0:	e0bff217 	ldw	r2,-56(fp)
  8198c4:	108002c4 	addi	r2,r2,11
  8198c8:	1085883a 	add	r2,r2,r2
  8198cc:	1085883a 	add	r2,r2,r2
  8198d0:	1885883a 	add	r2,r3,r2
  8198d4:	10c00017 	ldw	r3,0(r2)
  8198d8:	e0bff517 	ldw	r2,-44(fp)
  8198dc:	1880b226 	beq	r3,r2,819ba8 <start_pass+0x820>
  8198e0:	e0bff417 	ldw	r2,-48(fp)
  8198e4:	10801417 	ldw	r2,80(r2)
  8198e8:	e0bffa15 	stw	r2,-24(fp)
  8198ec:	e0bffa17 	ldw	r2,-24(fp)
  8198f0:	1000af26 	beq	r2,zero,819bb0 <start_pass+0x828>
  8198f4:	e0fff917 	ldw	r3,-28(fp)
  8198f8:	e0bff217 	ldw	r2,-56(fp)
  8198fc:	108002c4 	addi	r2,r2,11
  819900:	1085883a 	add	r2,r2,r2
  819904:	1085883a 	add	r2,r2,r2
  819908:	1885883a 	add	r2,r3,r2
  81990c:	e0fff517 	ldw	r3,-44(fp)
  819910:	10c00015 	stw	r3,0(r2)
  819914:	e0bff517 	ldw	r2,-44(fp)
  819918:	10c00060 	cmpeqi	r3,r2,1
  81991c:	18001c1e 	bne	r3,zero,819990 <start_pass+0x608>
  819920:	10c000a0 	cmpeqi	r3,r2,2
  819924:	1800401e 	bne	r3,zero,819a28 <start_pass+0x6a0>
  819928:	1000951e 	bne	r2,zero,819b80 <start_pass+0x7f8>
  81992c:	e0bff417 	ldw	r2,-48(fp)
  819930:	10801517 	ldw	r2,84(r2)
  819934:	e0bffb15 	stw	r2,-20(fp)
  819938:	e03ff315 	stw	zero,-52(fp)
  81993c:	00001006 	br	819980 <start_pass+0x5f8>
  819940:	e0bff317 	ldw	r2,-52(fp)
  819944:	1085883a 	add	r2,r2,r2
  819948:	1085883a 	add	r2,r2,r2
  81994c:	1007883a 	mov	r3,r2
  819950:	e0bffb17 	ldw	r2,-20(fp)
  819954:	10c7883a 	add	r3,r2,r3
  819958:	e13ffa17 	ldw	r4,-24(fp)
  81995c:	e0bff317 	ldw	r2,-52(fp)
  819960:	1085883a 	add	r2,r2,r2
  819964:	2085883a 	add	r2,r4,r2
  819968:	1080000b 	ldhu	r2,0(r2)
  81996c:	10bfffcc 	andi	r2,r2,65535
  819970:	18800015 	stw	r2,0(r3)
  819974:	e0bff317 	ldw	r2,-52(fp)
  819978:	10800044 	addi	r2,r2,1
  81997c:	e0bff315 	stw	r2,-52(fp)
  819980:	e0bff317 	ldw	r2,-52(fp)
  819984:	10801010 	cmplti	r2,r2,64
  819988:	103fed1e 	bne	r2,zero,819940 <__alt_mem_epcs_flash_controller_0+0xff810940>
  81998c:	00008906 	br	819bb4 <start_pass+0x82c>
  819990:	e0bff417 	ldw	r2,-48(fp)
  819994:	10801517 	ldw	r2,84(r2)
  819998:	e0bffc15 	stw	r2,-16(fp)
  81999c:	e03ff315 	stw	zero,-52(fp)
  8199a0:	00001d06 	br	819a18 <start_pass+0x690>
  8199a4:	e0bff317 	ldw	r2,-52(fp)
  8199a8:	1085883a 	add	r2,r2,r2
  8199ac:	1085883a 	add	r2,r2,r2
  8199b0:	1007883a 	mov	r3,r2
  8199b4:	e0bffc17 	ldw	r2,-16(fp)
  8199b8:	10e1883a 	add	r16,r2,r3
  8199bc:	e0fffa17 	ldw	r3,-24(fp)
  8199c0:	e0bff317 	ldw	r2,-52(fp)
  8199c4:	1085883a 	add	r2,r2,r2
  8199c8:	1885883a 	add	r2,r3,r2
  8199cc:	1080000b 	ldhu	r2,0(r2)
  8199d0:	113fffcc 	andi	r4,r2,65535
  8199d4:	008021b4 	movhi	r2,134
  8199d8:	10a43604 	addi	r2,r2,-28456
  8199dc:	e0fff317 	ldw	r3,-52(fp)
  8199e0:	18c7883a 	add	r3,r3,r3
  8199e4:	10c5883a 	add	r2,r2,r3
  8199e8:	1080000b 	ldhu	r2,0(r2)
  8199ec:	10bfffcc 	andi	r2,r2,65535
  8199f0:	10a0001c 	xori	r2,r2,32768
  8199f4:	10a00004 	addi	r2,r2,-32768
  8199f8:	100b883a 	mov	r5,r2
  8199fc:	08301e80 	call	8301e8 <__mulsi3>
  819a00:	10820004 	addi	r2,r2,2048
  819a04:	1005d33a 	srai	r2,r2,12
  819a08:	80800015 	stw	r2,0(r16)
  819a0c:	e0bff317 	ldw	r2,-52(fp)
  819a10:	10800044 	addi	r2,r2,1
  819a14:	e0bff315 	stw	r2,-52(fp)
  819a18:	e0bff317 	ldw	r2,-52(fp)
  819a1c:	10801010 	cmplti	r2,r2,64
  819a20:	103fe01e 	bne	r2,zero,8199a4 <__alt_mem_epcs_flash_controller_0+0xff8109a4>
  819a24:	00006306 	br	819bb4 <start_pass+0x82c>
  819a28:	e0bff417 	ldw	r2,-48(fp)
  819a2c:	10801517 	ldw	r2,84(r2)
  819a30:	e0bffd15 	stw	r2,-12(fp)
  819a34:	e03ff315 	stw	zero,-52(fp)
  819a38:	e03ff715 	stw	zero,-36(fp)
  819a3c:	00004c06 	br	819b70 <start_pass+0x7e8>
  819a40:	e03ff815 	stw	zero,-32(fp)
  819a44:	00004406 	br	819b58 <start_pass+0x7d0>
  819a48:	e0bff317 	ldw	r2,-52(fp)
  819a4c:	1085883a 	add	r2,r2,r2
  819a50:	1085883a 	add	r2,r2,r2
  819a54:	1007883a 	mov	r3,r2
  819a58:	e0bffd17 	ldw	r2,-12(fp)
  819a5c:	10e1883a 	add	r16,r2,r3
  819a60:	e0fffa17 	ldw	r3,-24(fp)
  819a64:	e0bff317 	ldw	r2,-52(fp)
  819a68:	1085883a 	add	r2,r2,r2
  819a6c:	1885883a 	add	r2,r3,r2
  819a70:	1080000b 	ldhu	r2,0(r2)
  819a74:	10bfffcc 	andi	r2,r2,65535
  819a78:	1009883a 	mov	r4,r2
  819a7c:	08319ec0 	call	8319ec <__floatunsidf>
  819a80:	1011883a 	mov	r8,r2
  819a84:	1813883a 	mov	r9,r3
  819a88:	008021b4 	movhi	r2,134
  819a8c:	10a45604 	addi	r2,r2,-28328
  819a90:	e0fff717 	ldw	r3,-36(fp)
  819a94:	180690fa 	slli	r3,r3,3
  819a98:	10c9883a 	add	r4,r2,r3
  819a9c:	20800017 	ldw	r2,0(r4)
  819aa0:	20c00117 	ldw	r3,4(r4)
  819aa4:	100d883a 	mov	r6,r2
  819aa8:	180f883a 	mov	r7,r3
  819aac:	4009883a 	mov	r4,r8
  819ab0:	480b883a 	mov	r5,r9
  819ab4:	08311800 	call	831180 <__muldf3>
  819ab8:	1009883a 	mov	r4,r2
  819abc:	180b883a 	mov	r5,r3
  819ac0:	2011883a 	mov	r8,r4
  819ac4:	2813883a 	mov	r9,r5
  819ac8:	008021b4 	movhi	r2,134
  819acc:	10a45604 	addi	r2,r2,-28328
  819ad0:	e0fff817 	ldw	r3,-32(fp)
  819ad4:	180690fa 	slli	r3,r3,3
  819ad8:	10c9883a 	add	r4,r2,r3
  819adc:	20800017 	ldw	r2,0(r4)
  819ae0:	20c00117 	ldw	r3,4(r4)
  819ae4:	100d883a 	mov	r6,r2
  819ae8:	180f883a 	mov	r7,r3
  819aec:	4009883a 	mov	r4,r8
  819af0:	480b883a 	mov	r5,r9
  819af4:	08311800 	call	831180 <__muldf3>
  819af8:	1009883a 	mov	r4,r2
  819afc:	180b883a 	mov	r5,r3
  819b00:	2005883a 	mov	r2,r4
  819b04:	2807883a 	mov	r3,r5
  819b08:	000d883a 	mov	r6,zero
  819b0c:	01cff034 	movhi	r7,16320
  819b10:	1009883a 	mov	r4,r2
  819b14:	180b883a 	mov	r5,r3
  819b18:	08311800 	call	831180 <__muldf3>
  819b1c:	1009883a 	mov	r4,r2
  819b20:	180b883a 	mov	r5,r3
  819b24:	2005883a 	mov	r2,r4
  819b28:	2807883a 	mov	r3,r5
  819b2c:	1009883a 	mov	r4,r2
  819b30:	180b883a 	mov	r5,r3
  819b34:	0831a940 	call	831a94 <__truncdfsf2>
  819b38:	1007883a 	mov	r3,r2
  819b3c:	80c00015 	stw	r3,0(r16)
  819b40:	e0bff317 	ldw	r2,-52(fp)
  819b44:	10800044 	addi	r2,r2,1
  819b48:	e0bff315 	stw	r2,-52(fp)
  819b4c:	e0bff817 	ldw	r2,-32(fp)
  819b50:	10800044 	addi	r2,r2,1
  819b54:	e0bff815 	stw	r2,-32(fp)
  819b58:	e0bff817 	ldw	r2,-32(fp)
  819b5c:	10800210 	cmplti	r2,r2,8
  819b60:	103fb91e 	bne	r2,zero,819a48 <__alt_mem_epcs_flash_controller_0+0xff810a48>
  819b64:	e0bff717 	ldw	r2,-36(fp)
  819b68:	10800044 	addi	r2,r2,1
  819b6c:	e0bff715 	stw	r2,-36(fp)
  819b70:	e0bff717 	ldw	r2,-36(fp)
  819b74:	10800210 	cmplti	r2,r2,8
  819b78:	103fb11e 	bne	r2,zero,819a40 <__alt_mem_epcs_flash_controller_0+0xff810a40>
  819b7c:	00000d06 	br	819bb4 <start_pass+0x82c>
  819b80:	e0bffe17 	ldw	r2,-8(fp)
  819b84:	10800017 	ldw	r2,0(r2)
  819b88:	00c00c44 	movi	r3,49
  819b8c:	10c00515 	stw	r3,20(r2)
  819b90:	e0bffe17 	ldw	r2,-8(fp)
  819b94:	10800017 	ldw	r2,0(r2)
  819b98:	10800017 	ldw	r2,0(r2)
  819b9c:	e13ffe17 	ldw	r4,-8(fp)
  819ba0:	103ee83a 	callr	r2
  819ba4:	00000306 	br	819bb4 <start_pass+0x82c>
  819ba8:	0001883a 	nop
  819bac:	00000106 	br	819bb4 <start_pass+0x82c>
  819bb0:	0001883a 	nop
  819bb4:	e0bff217 	ldw	r2,-56(fp)
  819bb8:	10800044 	addi	r2,r2,1
  819bbc:	e0bff215 	stw	r2,-56(fp)
  819bc0:	e0bff417 	ldw	r2,-48(fp)
  819bc4:	10801604 	addi	r2,r2,88
  819bc8:	e0bff415 	stw	r2,-48(fp)
  819bcc:	e0bffe17 	ldw	r2,-8(fp)
  819bd0:	10800917 	ldw	r2,36(r2)
  819bd4:	e0fff217 	ldw	r3,-56(fp)
  819bd8:	18bdfb16 	blt	r3,r2,8193c8 <__alt_mem_epcs_flash_controller_0+0xff8103c8>
  819bdc:	0001883a 	nop
  819be0:	e6ffff04 	addi	sp,fp,-4
  819be4:	dfc00217 	ldw	ra,8(sp)
  819be8:	df000117 	ldw	fp,4(sp)
  819bec:	dc000017 	ldw	r16,0(sp)
  819bf0:	dec00304 	addi	sp,sp,12
  819bf4:	f800283a 	ret

00819bf8 <jinit_inverse_dct>:
  819bf8:	defffa04 	addi	sp,sp,-24
  819bfc:	dfc00515 	stw	ra,20(sp)
  819c00:	df000415 	stw	fp,16(sp)
  819c04:	df000404 	addi	fp,sp,16
  819c08:	e13fff15 	stw	r4,-4(fp)
  819c0c:	e0bfff17 	ldw	r2,-4(fp)
  819c10:	10800117 	ldw	r2,4(r2)
  819c14:	10800017 	ldw	r2,0(r2)
  819c18:	01801504 	movi	r6,84
  819c1c:	01400044 	movi	r5,1
  819c20:	e13fff17 	ldw	r4,-4(fp)
  819c24:	103ee83a 	callr	r2
  819c28:	e0bffe15 	stw	r2,-8(fp)
  819c2c:	e0fffe17 	ldw	r3,-8(fp)
  819c30:	e0bfff17 	ldw	r2,-4(fp)
  819c34:	10c07615 	stw	r3,472(r2)
  819c38:	e0fffe17 	ldw	r3,-8(fp)
  819c3c:	008020b4 	movhi	r2,130
  819c40:	10a4e204 	addi	r2,r2,-27768
  819c44:	18800015 	stw	r2,0(r3)
  819c48:	e03ffc15 	stw	zero,-16(fp)
  819c4c:	e0bfff17 	ldw	r2,-4(fp)
  819c50:	10803617 	ldw	r2,216(r2)
  819c54:	e0bffd15 	stw	r2,-12(fp)
  819c58:	00001e06 	br	819cd4 <jinit_inverse_dct+0xdc>
  819c5c:	e0bfff17 	ldw	r2,-4(fp)
  819c60:	10800117 	ldw	r2,4(r2)
  819c64:	10800017 	ldw	r2,0(r2)
  819c68:	01804004 	movi	r6,256
  819c6c:	01400044 	movi	r5,1
  819c70:	e13fff17 	ldw	r4,-4(fp)
  819c74:	103ee83a 	callr	r2
  819c78:	1007883a 	mov	r3,r2
  819c7c:	e0bffd17 	ldw	r2,-12(fp)
  819c80:	10c01515 	stw	r3,84(r2)
  819c84:	e0bffd17 	ldw	r2,-12(fp)
  819c88:	10801517 	ldw	r2,84(r2)
  819c8c:	01804004 	movi	r6,256
  819c90:	000b883a 	mov	r5,zero
  819c94:	1009883a 	mov	r4,r2
  819c98:	0833d940 	call	833d94 <memset>
  819c9c:	e0fffe17 	ldw	r3,-8(fp)
  819ca0:	e0bffc17 	ldw	r2,-16(fp)
  819ca4:	108002c4 	addi	r2,r2,11
  819ca8:	1085883a 	add	r2,r2,r2
  819cac:	1085883a 	add	r2,r2,r2
  819cb0:	1885883a 	add	r2,r3,r2
  819cb4:	00ffffc4 	movi	r3,-1
  819cb8:	10c00015 	stw	r3,0(r2)
  819cbc:	e0bffc17 	ldw	r2,-16(fp)
  819cc0:	10800044 	addi	r2,r2,1
  819cc4:	e0bffc15 	stw	r2,-16(fp)
  819cc8:	e0bffd17 	ldw	r2,-12(fp)
  819ccc:	10801604 	addi	r2,r2,88
  819cd0:	e0bffd15 	stw	r2,-12(fp)
  819cd4:	e0bfff17 	ldw	r2,-4(fp)
  819cd8:	10800917 	ldw	r2,36(r2)
  819cdc:	e0fffc17 	ldw	r3,-16(fp)
  819ce0:	18bfde16 	blt	r3,r2,819c5c <__alt_mem_epcs_flash_controller_0+0xff810c5c>
  819ce4:	0001883a 	nop
  819ce8:	e037883a 	mov	sp,fp
  819cec:	dfc00117 	ldw	ra,4(sp)
  819cf0:	df000017 	ldw	fp,0(sp)
  819cf4:	dec00204 	addi	sp,sp,8
  819cf8:	f800283a 	ret

00819cfc <jpeg_make_d_derived_tbl>:
  819cfc:	defead04 	addi	sp,sp,-1356
  819d00:	dfc15215 	stw	ra,1352(sp)
  819d04:	df015115 	stw	fp,1348(sp)
  819d08:	df015104 	addi	fp,sp,1348
  819d0c:	e13ffc15 	stw	r4,-16(fp)
  819d10:	e17ffd15 	stw	r5,-12(fp)
  819d14:	e1bffe15 	stw	r6,-8(fp)
  819d18:	e1ffff15 	stw	r7,-4(fp)
  819d1c:	e0bffe17 	ldw	r2,-8(fp)
  819d20:	10000316 	blt	r2,zero,819d30 <jpeg_make_d_derived_tbl+0x34>
  819d24:	e0bffe17 	ldw	r2,-8(fp)
  819d28:	10800110 	cmplti	r2,r2,4
  819d2c:	10000d1e 	bne	r2,zero,819d64 <jpeg_make_d_derived_tbl+0x68>
  819d30:	e0bffc17 	ldw	r2,-16(fp)
  819d34:	10800017 	ldw	r2,0(r2)
  819d38:	00c00d04 	movi	r3,52
  819d3c:	10c00515 	stw	r3,20(r2)
  819d40:	e0bffc17 	ldw	r2,-16(fp)
  819d44:	10800017 	ldw	r2,0(r2)
  819d48:	e0fffe17 	ldw	r3,-8(fp)
  819d4c:	10c00615 	stw	r3,24(r2)
  819d50:	e0bffc17 	ldw	r2,-16(fp)
  819d54:	10800017 	ldw	r2,0(r2)
  819d58:	10800017 	ldw	r2,0(r2)
  819d5c:	e13ffc17 	ldw	r4,-16(fp)
  819d60:	103ee83a 	callr	r2
  819d64:	e0bffd17 	ldw	r2,-12(fp)
  819d68:	10000826 	beq	r2,zero,819d8c <jpeg_make_d_derived_tbl+0x90>
  819d6c:	e0fffc17 	ldw	r3,-16(fp)
  819d70:	e0bffe17 	ldw	r2,-8(fp)
  819d74:	10800b44 	addi	r2,r2,45
  819d78:	1085883a 	add	r2,r2,r2
  819d7c:	1085883a 	add	r2,r2,r2
  819d80:	1885883a 	add	r2,r3,r2
  819d84:	10800017 	ldw	r2,0(r2)
  819d88:	00000706 	br	819da8 <jpeg_make_d_derived_tbl+0xac>
  819d8c:	e0fffc17 	ldw	r3,-16(fp)
  819d90:	e0bffe17 	ldw	r2,-8(fp)
  819d94:	10800c44 	addi	r2,r2,49
  819d98:	1085883a 	add	r2,r2,r2
  819d9c:	1085883a 	add	r2,r2,r2
  819da0:	1885883a 	add	r2,r3,r2
  819da4:	10800017 	ldw	r2,0(r2)
  819da8:	e0beb615 	stw	r2,-1320(fp)
  819dac:	e0beb617 	ldw	r2,-1320(fp)
  819db0:	10000d1e 	bne	r2,zero,819de8 <jpeg_make_d_derived_tbl+0xec>
  819db4:	e0bffc17 	ldw	r2,-16(fp)
  819db8:	10800017 	ldw	r2,0(r2)
  819dbc:	00c00d04 	movi	r3,52
  819dc0:	10c00515 	stw	r3,20(r2)
  819dc4:	e0bffc17 	ldw	r2,-16(fp)
  819dc8:	10800017 	ldw	r2,0(r2)
  819dcc:	e0fffe17 	ldw	r3,-8(fp)
  819dd0:	10c00615 	stw	r3,24(r2)
  819dd4:	e0bffc17 	ldw	r2,-16(fp)
  819dd8:	10800017 	ldw	r2,0(r2)
  819ddc:	10800017 	ldw	r2,0(r2)
  819de0:	e13ffc17 	ldw	r4,-16(fp)
  819de4:	103ee83a 	callr	r2
  819de8:	e0bfff17 	ldw	r2,-4(fp)
  819dec:	10800017 	ldw	r2,0(r2)
  819df0:	10000a1e 	bne	r2,zero,819e1c <jpeg_make_d_derived_tbl+0x120>
  819df4:	e0bffc17 	ldw	r2,-16(fp)
  819df8:	10800117 	ldw	r2,4(r2)
  819dfc:	10800017 	ldw	r2,0(r2)
  819e00:	01816404 	movi	r6,1424
  819e04:	01400044 	movi	r5,1
  819e08:	e13ffc17 	ldw	r4,-16(fp)
  819e0c:	103ee83a 	callr	r2
  819e10:	1007883a 	mov	r3,r2
  819e14:	e0bfff17 	ldw	r2,-4(fp)
  819e18:	10c00015 	stw	r3,0(r2)
  819e1c:	e0bfff17 	ldw	r2,-4(fp)
  819e20:	10800017 	ldw	r2,0(r2)
  819e24:	e0beb715 	stw	r2,-1316(fp)
  819e28:	e0beb717 	ldw	r2,-1316(fp)
  819e2c:	e0feb617 	ldw	r3,-1320(fp)
  819e30:	10c02315 	stw	r3,140(r2)
  819e34:	e03eaf15 	stw	zero,-1348(fp)
  819e38:	00800044 	movi	r2,1
  819e3c:	e0beb115 	stw	r2,-1340(fp)
  819e40:	00002606 	br	819edc <jpeg_make_d_derived_tbl+0x1e0>
  819e44:	e0feb617 	ldw	r3,-1320(fp)
  819e48:	e0beb117 	ldw	r2,-1340(fp)
  819e4c:	1885883a 	add	r2,r3,r2
  819e50:	10800003 	ldbu	r2,0(r2)
  819e54:	10803fcc 	andi	r2,r2,255
  819e58:	e0beb015 	stw	r2,-1344(fp)
  819e5c:	e0beb017 	ldw	r2,-1344(fp)
  819e60:	10000516 	blt	r2,zero,819e78 <jpeg_make_d_derived_tbl+0x17c>
  819e64:	e0feaf17 	ldw	r3,-1348(fp)
  819e68:	e0beb017 	ldw	r2,-1344(fp)
  819e6c:	1885883a 	add	r2,r3,r2
  819e70:	10804050 	cmplti	r2,r2,257
  819e74:	1000121e 	bne	r2,zero,819ec0 <jpeg_make_d_derived_tbl+0x1c4>
  819e78:	e0bffc17 	ldw	r2,-16(fp)
  819e7c:	10800017 	ldw	r2,0(r2)
  819e80:	00c00244 	movi	r3,9
  819e84:	10c00515 	stw	r3,20(r2)
  819e88:	e0bffc17 	ldw	r2,-16(fp)
  819e8c:	10800017 	ldw	r2,0(r2)
  819e90:	10800017 	ldw	r2,0(r2)
  819e94:	e13ffc17 	ldw	r4,-16(fp)
  819e98:	103ee83a 	callr	r2
  819e9c:	00000806 	br	819ec0 <jpeg_make_d_derived_tbl+0x1c4>
  819ea0:	e0beaf17 	ldw	r2,-1348(fp)
  819ea4:	10c00044 	addi	r3,r2,1
  819ea8:	e0feaf15 	stw	r3,-1348(fp)
  819eac:	e0feb117 	ldw	r3,-1340(fp)
  819eb0:	1809883a 	mov	r4,r3
  819eb4:	e0feba04 	addi	r3,fp,-1304
  819eb8:	1885883a 	add	r2,r3,r2
  819ebc:	11000005 	stb	r4,0(r2)
  819ec0:	e0beb017 	ldw	r2,-1344(fp)
  819ec4:	10ffffc4 	addi	r3,r2,-1
  819ec8:	e0feb015 	stw	r3,-1344(fp)
  819ecc:	103ff41e 	bne	r2,zero,819ea0 <__alt_mem_epcs_flash_controller_0+0xff810ea0>
  819ed0:	e0beb117 	ldw	r2,-1340(fp)
  819ed4:	10800044 	addi	r2,r2,1
  819ed8:	e0beb115 	stw	r2,-1340(fp)
  819edc:	e0beb117 	ldw	r2,-1340(fp)
  819ee0:	10800450 	cmplti	r2,r2,17
  819ee4:	103fd71e 	bne	r2,zero,819e44 <__alt_mem_epcs_flash_controller_0+0xff810e44>
  819ee8:	e0feba04 	addi	r3,fp,-1304
  819eec:	e0beaf17 	ldw	r2,-1348(fp)
  819ef0:	1885883a 	add	r2,r3,r2
  819ef4:	10000005 	stb	zero,0(r2)
  819ef8:	e0beaf17 	ldw	r2,-1348(fp)
  819efc:	e0beb815 	stw	r2,-1312(fp)
  819f00:	e03eb515 	stw	zero,-1324(fp)
  819f04:	e0beba03 	ldbu	r2,-1304(fp)
  819f08:	10803fcc 	andi	r2,r2,255
  819f0c:	1080201c 	xori	r2,r2,128
  819f10:	10bfe004 	addi	r2,r2,-128
  819f14:	e0beb215 	stw	r2,-1336(fp)
  819f18:	e03eaf15 	stw	zero,-1348(fp)
  819f1c:	00002a06 	br	819fc8 <jpeg_make_d_derived_tbl+0x2cc>
  819f20:	e0beaf17 	ldw	r2,-1348(fp)
  819f24:	10c00044 	addi	r3,r2,1
  819f28:	e0feaf15 	stw	r3,-1348(fp)
  819f2c:	1085883a 	add	r2,r2,r2
  819f30:	1085883a 	add	r2,r2,r2
  819f34:	e0feaf04 	addi	r3,fp,-1348
  819f38:	1885883a 	add	r2,r3,r2
  819f3c:	10804c04 	addi	r2,r2,304
  819f40:	e0feb517 	ldw	r3,-1324(fp)
  819f44:	10c00015 	stw	r3,0(r2)
  819f48:	e0beb517 	ldw	r2,-1324(fp)
  819f4c:	10800044 	addi	r2,r2,1
  819f50:	e0beb515 	stw	r2,-1324(fp)
  819f54:	e0feba04 	addi	r3,fp,-1304
  819f58:	e0beaf17 	ldw	r2,-1348(fp)
  819f5c:	1885883a 	add	r2,r3,r2
  819f60:	10800003 	ldbu	r2,0(r2)
  819f64:	10c03fcc 	andi	r3,r2,255
  819f68:	18c0201c 	xori	r3,r3,128
  819f6c:	18ffe004 	addi	r3,r3,-128
  819f70:	e0beb217 	ldw	r2,-1336(fp)
  819f74:	18bfea26 	beq	r3,r2,819f20 <__alt_mem_epcs_flash_controller_0+0xff810f20>
  819f78:	00c00044 	movi	r3,1
  819f7c:	e0beb217 	ldw	r2,-1336(fp)
  819f80:	1884983a 	sll	r2,r3,r2
  819f84:	e0feb517 	ldw	r3,-1324(fp)
  819f88:	18800916 	blt	r3,r2,819fb0 <jpeg_make_d_derived_tbl+0x2b4>
  819f8c:	e0bffc17 	ldw	r2,-16(fp)
  819f90:	10800017 	ldw	r2,0(r2)
  819f94:	00c00244 	movi	r3,9
  819f98:	10c00515 	stw	r3,20(r2)
  819f9c:	e0bffc17 	ldw	r2,-16(fp)
  819fa0:	10800017 	ldw	r2,0(r2)
  819fa4:	10800017 	ldw	r2,0(r2)
  819fa8:	e13ffc17 	ldw	r4,-16(fp)
  819fac:	103ee83a 	callr	r2
  819fb0:	e0beb517 	ldw	r2,-1324(fp)
  819fb4:	1085883a 	add	r2,r2,r2
  819fb8:	e0beb515 	stw	r2,-1324(fp)
  819fbc:	e0beb217 	ldw	r2,-1336(fp)
  819fc0:	10800044 	addi	r2,r2,1
  819fc4:	e0beb215 	stw	r2,-1336(fp)
  819fc8:	e0feba04 	addi	r3,fp,-1304
  819fcc:	e0beaf17 	ldw	r2,-1348(fp)
  819fd0:	1885883a 	add	r2,r3,r2
  819fd4:	10800003 	ldbu	r2,0(r2)
  819fd8:	10803fcc 	andi	r2,r2,255
  819fdc:	1080201c 	xori	r2,r2,128
  819fe0:	10bfe004 	addi	r2,r2,-128
  819fe4:	103fdb1e 	bne	r2,zero,819f54 <__alt_mem_epcs_flash_controller_0+0xff810f54>
  819fe8:	e03eaf15 	stw	zero,-1348(fp)
  819fec:	00800044 	movi	r2,1
  819ff0:	e0beb115 	stw	r2,-1340(fp)
  819ff4:	00003906 	br	81a0dc <jpeg_make_d_derived_tbl+0x3e0>
  819ff8:	e0feb617 	ldw	r3,-1320(fp)
  819ffc:	e0beb117 	ldw	r2,-1340(fp)
  81a000:	1885883a 	add	r2,r3,r2
  81a004:	10800003 	ldbu	r2,0(r2)
  81a008:	10803fcc 	andi	r2,r2,255
  81a00c:	10002926 	beq	r2,zero,81a0b4 <jpeg_make_d_derived_tbl+0x3b8>
  81a010:	e0beaf17 	ldw	r2,-1348(fp)
  81a014:	1085883a 	add	r2,r2,r2
  81a018:	1085883a 	add	r2,r2,r2
  81a01c:	e0feaf04 	addi	r3,fp,-1348
  81a020:	1885883a 	add	r2,r3,r2
  81a024:	10804c04 	addi	r2,r2,304
  81a028:	10800017 	ldw	r2,0(r2)
  81a02c:	1007883a 	mov	r3,r2
  81a030:	e0beaf17 	ldw	r2,-1348(fp)
  81a034:	10c7c83a 	sub	r3,r2,r3
  81a038:	e13eb717 	ldw	r4,-1316(fp)
  81a03c:	e0beb117 	ldw	r2,-1340(fp)
  81a040:	10800484 	addi	r2,r2,18
  81a044:	1085883a 	add	r2,r2,r2
  81a048:	1085883a 	add	r2,r2,r2
  81a04c:	2085883a 	add	r2,r4,r2
  81a050:	10c00015 	stw	r3,0(r2)
  81a054:	e0feb617 	ldw	r3,-1320(fp)
  81a058:	e0beb117 	ldw	r2,-1340(fp)
  81a05c:	1885883a 	add	r2,r3,r2
  81a060:	10800003 	ldbu	r2,0(r2)
  81a064:	10803fcc 	andi	r2,r2,255
  81a068:	e0feaf17 	ldw	r3,-1348(fp)
  81a06c:	1885883a 	add	r2,r3,r2
  81a070:	e0beaf15 	stw	r2,-1348(fp)
  81a074:	e0beaf17 	ldw	r2,-1348(fp)
  81a078:	10bfffc4 	addi	r2,r2,-1
  81a07c:	1085883a 	add	r2,r2,r2
  81a080:	1085883a 	add	r2,r2,r2
  81a084:	e0feaf04 	addi	r3,fp,-1348
  81a088:	1885883a 	add	r2,r3,r2
  81a08c:	10804c04 	addi	r2,r2,304
  81a090:	10800017 	ldw	r2,0(r2)
  81a094:	1009883a 	mov	r4,r2
  81a098:	e0feb717 	ldw	r3,-1316(fp)
  81a09c:	e0beb117 	ldw	r2,-1340(fp)
  81a0a0:	1085883a 	add	r2,r2,r2
  81a0a4:	1085883a 	add	r2,r2,r2
  81a0a8:	1885883a 	add	r2,r3,r2
  81a0ac:	11000015 	stw	r4,0(r2)
  81a0b0:	00000706 	br	81a0d0 <jpeg_make_d_derived_tbl+0x3d4>
  81a0b4:	e0feb717 	ldw	r3,-1316(fp)
  81a0b8:	e0beb117 	ldw	r2,-1340(fp)
  81a0bc:	1085883a 	add	r2,r2,r2
  81a0c0:	1085883a 	add	r2,r2,r2
  81a0c4:	1885883a 	add	r2,r3,r2
  81a0c8:	00ffffc4 	movi	r3,-1
  81a0cc:	10c00015 	stw	r3,0(r2)
  81a0d0:	e0beb117 	ldw	r2,-1340(fp)
  81a0d4:	10800044 	addi	r2,r2,1
  81a0d8:	e0beb115 	stw	r2,-1340(fp)
  81a0dc:	e0beb117 	ldw	r2,-1340(fp)
  81a0e0:	10800450 	cmplti	r2,r2,17
  81a0e4:	103fc41e 	bne	r2,zero,819ff8 <__alt_mem_epcs_flash_controller_0+0xff810ff8>
  81a0e8:	e0feb717 	ldw	r3,-1316(fp)
  81a0ec:	00800434 	movhi	r2,16
  81a0f0:	10bfffc4 	addi	r2,r2,-1
  81a0f4:	18801115 	stw	r2,68(r3)
  81a0f8:	e0beb717 	ldw	r2,-1316(fp)
  81a0fc:	10802404 	addi	r2,r2,144
  81a100:	01810004 	movi	r6,1024
  81a104:	000b883a 	mov	r5,zero
  81a108:	1009883a 	mov	r4,r2
  81a10c:	0833d940 	call	833d94 <memset>
  81a110:	e03eaf15 	stw	zero,-1348(fp)
  81a114:	00800044 	movi	r2,1
  81a118:	e0beb115 	stw	r2,-1340(fp)
  81a11c:	00004006 	br	81a220 <jpeg_make_d_derived_tbl+0x524>
  81a120:	00800044 	movi	r2,1
  81a124:	e0beb015 	stw	r2,-1344(fp)
  81a128:	00003306 	br	81a1f8 <jpeg_make_d_derived_tbl+0x4fc>
  81a12c:	e0beaf17 	ldw	r2,-1348(fp)
  81a130:	1085883a 	add	r2,r2,r2
  81a134:	1085883a 	add	r2,r2,r2
  81a138:	e0feaf04 	addi	r3,fp,-1348
  81a13c:	1885883a 	add	r2,r3,r2
  81a140:	10804c04 	addi	r2,r2,304
  81a144:	10c00017 	ldw	r3,0(r2)
  81a148:	01000204 	movi	r4,8
  81a14c:	e0beb117 	ldw	r2,-1340(fp)
  81a150:	2085c83a 	sub	r2,r4,r2
  81a154:	1884983a 	sll	r2,r3,r2
  81a158:	e0beb315 	stw	r2,-1332(fp)
  81a15c:	00c00204 	movi	r3,8
  81a160:	e0beb117 	ldw	r2,-1340(fp)
  81a164:	1885c83a 	sub	r2,r3,r2
  81a168:	00c00044 	movi	r3,1
  81a16c:	1884983a 	sll	r2,r3,r2
  81a170:	e0beb415 	stw	r2,-1328(fp)
  81a174:	00001806 	br	81a1d8 <jpeg_make_d_derived_tbl+0x4dc>
  81a178:	e0feb717 	ldw	r3,-1316(fp)
  81a17c:	e0beb317 	ldw	r2,-1332(fp)
  81a180:	10800904 	addi	r2,r2,36
  81a184:	1085883a 	add	r2,r2,r2
  81a188:	1085883a 	add	r2,r2,r2
  81a18c:	1885883a 	add	r2,r3,r2
  81a190:	e0feb117 	ldw	r3,-1340(fp)
  81a194:	10c00015 	stw	r3,0(r2)
  81a198:	e0feb617 	ldw	r3,-1320(fp)
  81a19c:	e0beaf17 	ldw	r2,-1348(fp)
  81a1a0:	1885883a 	add	r2,r3,r2
  81a1a4:	10800444 	addi	r2,r2,17
  81a1a8:	10c00003 	ldbu	r3,0(r2)
  81a1ac:	e13eb717 	ldw	r4,-1316(fp)
  81a1b0:	e0beb317 	ldw	r2,-1332(fp)
  81a1b4:	2085883a 	add	r2,r4,r2
  81a1b8:	10812404 	addi	r2,r2,1168
  81a1bc:	10c00005 	stb	r3,0(r2)
  81a1c0:	e0beb317 	ldw	r2,-1332(fp)
  81a1c4:	10800044 	addi	r2,r2,1
  81a1c8:	e0beb315 	stw	r2,-1332(fp)
  81a1cc:	e0beb417 	ldw	r2,-1328(fp)
  81a1d0:	10bfffc4 	addi	r2,r2,-1
  81a1d4:	e0beb415 	stw	r2,-1328(fp)
  81a1d8:	e0beb417 	ldw	r2,-1328(fp)
  81a1dc:	00bfe616 	blt	zero,r2,81a178 <__alt_mem_epcs_flash_controller_0+0xff811178>
  81a1e0:	e0beb017 	ldw	r2,-1344(fp)
  81a1e4:	10800044 	addi	r2,r2,1
  81a1e8:	e0beb015 	stw	r2,-1344(fp)
  81a1ec:	e0beaf17 	ldw	r2,-1348(fp)
  81a1f0:	10800044 	addi	r2,r2,1
  81a1f4:	e0beaf15 	stw	r2,-1348(fp)
  81a1f8:	e0feb617 	ldw	r3,-1320(fp)
  81a1fc:	e0beb117 	ldw	r2,-1340(fp)
  81a200:	1885883a 	add	r2,r3,r2
  81a204:	10800003 	ldbu	r2,0(r2)
  81a208:	10c03fcc 	andi	r3,r2,255
  81a20c:	e0beb017 	ldw	r2,-1344(fp)
  81a210:	18bfc60e 	bge	r3,r2,81a12c <__alt_mem_epcs_flash_controller_0+0xff81112c>
  81a214:	e0beb117 	ldw	r2,-1340(fp)
  81a218:	10800044 	addi	r2,r2,1
  81a21c:	e0beb115 	stw	r2,-1340(fp)
  81a220:	e0beb117 	ldw	r2,-1340(fp)
  81a224:	10800250 	cmplti	r2,r2,9
  81a228:	103fbd1e 	bne	r2,zero,81a120 <__alt_mem_epcs_flash_controller_0+0xff811120>
  81a22c:	e0bffd17 	ldw	r2,-12(fp)
  81a230:	10001d26 	beq	r2,zero,81a2a8 <jpeg_make_d_derived_tbl+0x5ac>
  81a234:	e03eb015 	stw	zero,-1344(fp)
  81a238:	00001806 	br	81a29c <jpeg_make_d_derived_tbl+0x5a0>
  81a23c:	e0feb617 	ldw	r3,-1320(fp)
  81a240:	e0beb017 	ldw	r2,-1344(fp)
  81a244:	1885883a 	add	r2,r3,r2
  81a248:	10800444 	addi	r2,r2,17
  81a24c:	10800003 	ldbu	r2,0(r2)
  81a250:	10803fcc 	andi	r2,r2,255
  81a254:	e0beb915 	stw	r2,-1308(fp)
  81a258:	e0beb917 	ldw	r2,-1308(fp)
  81a25c:	10000316 	blt	r2,zero,81a26c <jpeg_make_d_derived_tbl+0x570>
  81a260:	e0beb917 	ldw	r2,-1308(fp)
  81a264:	10800410 	cmplti	r2,r2,16
  81a268:	1000091e 	bne	r2,zero,81a290 <jpeg_make_d_derived_tbl+0x594>
  81a26c:	e0bffc17 	ldw	r2,-16(fp)
  81a270:	10800017 	ldw	r2,0(r2)
  81a274:	00c00244 	movi	r3,9
  81a278:	10c00515 	stw	r3,20(r2)
  81a27c:	e0bffc17 	ldw	r2,-16(fp)
  81a280:	10800017 	ldw	r2,0(r2)
  81a284:	10800017 	ldw	r2,0(r2)
  81a288:	e13ffc17 	ldw	r4,-16(fp)
  81a28c:	103ee83a 	callr	r2
  81a290:	e0beb017 	ldw	r2,-1344(fp)
  81a294:	10800044 	addi	r2,r2,1
  81a298:	e0beb015 	stw	r2,-1344(fp)
  81a29c:	e0feb017 	ldw	r3,-1344(fp)
  81a2a0:	e0beb817 	ldw	r2,-1312(fp)
  81a2a4:	18bfe516 	blt	r3,r2,81a23c <__alt_mem_epcs_flash_controller_0+0xff81123c>
  81a2a8:	0001883a 	nop
  81a2ac:	e037883a 	mov	sp,fp
  81a2b0:	dfc00117 	ldw	ra,4(sp)
  81a2b4:	df000017 	ldw	fp,0(sp)
  81a2b8:	dec00204 	addi	sp,sp,8
  81a2bc:	f800283a 	ret

0081a2c0 <jpeg_fill_bit_buffer>:
  81a2c0:	defff604 	addi	sp,sp,-40
  81a2c4:	dfc00915 	stw	ra,36(sp)
  81a2c8:	df000815 	stw	fp,32(sp)
  81a2cc:	dd000715 	stw	r20,28(sp)
  81a2d0:	dcc00615 	stw	r19,24(sp)
  81a2d4:	dc800515 	stw	r18,20(sp)
  81a2d8:	dc400415 	stw	r17,16(sp)
  81a2dc:	dc000315 	stw	r16,12(sp)
  81a2e0:	df000804 	addi	fp,sp,32
  81a2e4:	e13ff915 	stw	r4,-28(fp)
  81a2e8:	2829883a 	mov	r20,r5
  81a2ec:	3025883a 	mov	r18,r6
  81a2f0:	e1fffa15 	stw	r7,-24(fp)
  81a2f4:	e0bff917 	ldw	r2,-28(fp)
  81a2f8:	14c00017 	ldw	r19,0(r2)
  81a2fc:	e0bff917 	ldw	r2,-28(fp)
  81a300:	14000117 	ldw	r16,4(r2)
  81a304:	e0bff917 	ldw	r2,-28(fp)
  81a308:	10800417 	ldw	r2,16(r2)
  81a30c:	e0bff815 	stw	r2,-32(fp)
  81a310:	e0bff817 	ldw	r2,-32(fp)
  81a314:	10806e17 	ldw	r2,440(r2)
  81a318:	1000391e 	bne	r2,zero,81a400 <jpeg_fill_bit_buffer+0x140>
  81a31c:	00003506 	br	81a3f4 <jpeg_fill_bit_buffer+0x134>
  81a320:	80000e1e 	bne	r16,zero,81a35c <jpeg_fill_bit_buffer+0x9c>
  81a324:	e0bff817 	ldw	r2,-32(fp)
  81a328:	10800617 	ldw	r2,24(r2)
  81a32c:	10800317 	ldw	r2,12(r2)
  81a330:	e13ff817 	ldw	r4,-32(fp)
  81a334:	103ee83a 	callr	r2
  81a338:	1000021e 	bne	r2,zero,81a344 <jpeg_fill_bit_buffer+0x84>
  81a33c:	0005883a 	mov	r2,zero
  81a340:	00005006 	br	81a484 <jpeg_fill_bit_buffer+0x1c4>
  81a344:	e0bff817 	ldw	r2,-32(fp)
  81a348:	10800617 	ldw	r2,24(r2)
  81a34c:	14c00017 	ldw	r19,0(r2)
  81a350:	e0bff817 	ldw	r2,-32(fp)
  81a354:	10800617 	ldw	r2,24(r2)
  81a358:	14000117 	ldw	r16,4(r2)
  81a35c:	843fffc4 	addi	r16,r16,-1
  81a360:	9805883a 	mov	r2,r19
  81a364:	14c00044 	addi	r19,r2,1
  81a368:	10800003 	ldbu	r2,0(r2)
  81a36c:	14403fcc 	andi	r17,r2,255
  81a370:	88803fd8 	cmpnei	r2,r17,255
  81a374:	10001c1e 	bne	r2,zero,81a3e8 <jpeg_fill_bit_buffer+0x128>
  81a378:	80000e1e 	bne	r16,zero,81a3b4 <jpeg_fill_bit_buffer+0xf4>
  81a37c:	e0bff817 	ldw	r2,-32(fp)
  81a380:	10800617 	ldw	r2,24(r2)
  81a384:	10800317 	ldw	r2,12(r2)
  81a388:	e13ff817 	ldw	r4,-32(fp)
  81a38c:	103ee83a 	callr	r2
  81a390:	1000021e 	bne	r2,zero,81a39c <jpeg_fill_bit_buffer+0xdc>
  81a394:	0005883a 	mov	r2,zero
  81a398:	00003a06 	br	81a484 <jpeg_fill_bit_buffer+0x1c4>
  81a39c:	e0bff817 	ldw	r2,-32(fp)
  81a3a0:	10800617 	ldw	r2,24(r2)
  81a3a4:	14c00017 	ldw	r19,0(r2)
  81a3a8:	e0bff817 	ldw	r2,-32(fp)
  81a3ac:	10800617 	ldw	r2,24(r2)
  81a3b0:	14000117 	ldw	r16,4(r2)
  81a3b4:	843fffc4 	addi	r16,r16,-1
  81a3b8:	9805883a 	mov	r2,r19
  81a3bc:	14c00044 	addi	r19,r2,1
  81a3c0:	10800003 	ldbu	r2,0(r2)
  81a3c4:	14403fcc 	andi	r17,r2,255
  81a3c8:	88803fe0 	cmpeqi	r2,r17,255
  81a3cc:	103fea1e 	bne	r2,zero,81a378 <__alt_mem_epcs_flash_controller_0+0xff811378>
  81a3d0:	8800021e 	bne	r17,zero,81a3dc <jpeg_fill_bit_buffer+0x11c>
  81a3d4:	04403fc4 	movi	r17,255
  81a3d8:	00000306 	br	81a3e8 <jpeg_fill_bit_buffer+0x128>
  81a3dc:	e0bff817 	ldw	r2,-32(fp)
  81a3e0:	14406e15 	stw	r17,440(r2)
  81a3e4:	00000606 	br	81a400 <jpeg_fill_bit_buffer+0x140>
  81a3e8:	a004923a 	slli	r2,r20,8
  81a3ec:	1468b03a 	or	r20,r2,r17
  81a3f0:	94800204 	addi	r18,r18,8
  81a3f4:	90800650 	cmplti	r2,r18,25
  81a3f8:	103fc91e 	bne	r2,zero,81a320 <__alt_mem_epcs_flash_controller_0+0xff811320>
  81a3fc:	00001806 	br	81a460 <jpeg_fill_bit_buffer+0x1a0>
  81a400:	e0bffa17 	ldw	r2,-24(fp)
  81a404:	9080160e 	bge	r18,r2,81a460 <jpeg_fill_bit_buffer+0x1a0>
  81a408:	e0bff817 	ldw	r2,-32(fp)
  81a40c:	10807517 	ldw	r2,468(r2)
  81a410:	10800a17 	ldw	r2,40(r2)
  81a414:	10000e1e 	bne	r2,zero,81a450 <jpeg_fill_bit_buffer+0x190>
  81a418:	e0bff817 	ldw	r2,-32(fp)
  81a41c:	10800017 	ldw	r2,0(r2)
  81a420:	00c01e04 	movi	r3,120
  81a424:	10c00515 	stw	r3,20(r2)
  81a428:	e0bff817 	ldw	r2,-32(fp)
  81a42c:	10800017 	ldw	r2,0(r2)
  81a430:	10800117 	ldw	r2,4(r2)
  81a434:	017fffc4 	movi	r5,-1
  81a438:	e13ff817 	ldw	r4,-32(fp)
  81a43c:	103ee83a 	callr	r2
  81a440:	e0bff817 	ldw	r2,-32(fp)
  81a444:	10807517 	ldw	r2,468(r2)
  81a448:	00c00044 	movi	r3,1
  81a44c:	10c00a15 	stw	r3,40(r2)
  81a450:	00800644 	movi	r2,25
  81a454:	1485c83a 	sub	r2,r2,r18
  81a458:	a0a8983a 	sll	r20,r20,r2
  81a45c:	04800644 	movi	r18,25
  81a460:	e0bff917 	ldw	r2,-28(fp)
  81a464:	14c00015 	stw	r19,0(r2)
  81a468:	e0bff917 	ldw	r2,-28(fp)
  81a46c:	14000115 	stw	r16,4(r2)
  81a470:	e0bff917 	ldw	r2,-28(fp)
  81a474:	15000215 	stw	r20,8(r2)
  81a478:	e0bff917 	ldw	r2,-28(fp)
  81a47c:	14800315 	stw	r18,12(r2)
  81a480:	00800044 	movi	r2,1
  81a484:	e6fffb04 	addi	sp,fp,-20
  81a488:	dfc00617 	ldw	ra,24(sp)
  81a48c:	df000517 	ldw	fp,20(sp)
  81a490:	dd000417 	ldw	r20,16(sp)
  81a494:	dcc00317 	ldw	r19,12(sp)
  81a498:	dc800217 	ldw	r18,8(sp)
  81a49c:	dc400117 	ldw	r17,4(sp)
  81a4a0:	dc000017 	ldw	r16,0(sp)
  81a4a4:	dec00704 	addi	sp,sp,28
  81a4a8:	f800283a 	ret

0081a4ac <jpeg_huff_decode>:
  81a4ac:	defffa04 	addi	sp,sp,-24
  81a4b0:	dfc00515 	stw	ra,20(sp)
  81a4b4:	df000415 	stw	fp,16(sp)
  81a4b8:	dc400315 	stw	r17,12(sp)
  81a4bc:	dc000215 	stw	r16,8(sp)
  81a4c0:	df000404 	addi	fp,sp,16
  81a4c4:	e13ffc15 	stw	r4,-16(fp)
  81a4c8:	2807883a 	mov	r3,r5
  81a4cc:	3005883a 	mov	r2,r6
  81a4d0:	e1fffd15 	stw	r7,-12(fp)
  81a4d4:	e4000217 	ldw	r16,8(fp)
  81a4d8:	14000c0e 	bge	r2,r16,81a50c <jpeg_huff_decode+0x60>
  81a4dc:	800f883a 	mov	r7,r16
  81a4e0:	100d883a 	mov	r6,r2
  81a4e4:	180b883a 	mov	r5,r3
  81a4e8:	e13ffc17 	ldw	r4,-16(fp)
  81a4ec:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81a4f0:	1000021e 	bne	r2,zero,81a4fc <jpeg_huff_decode+0x50>
  81a4f4:	00bfffc4 	movi	r2,-1
  81a4f8:	00004c06 	br	81a62c <jpeg_huff_decode+0x180>
  81a4fc:	e0bffc17 	ldw	r2,-16(fp)
  81a500:	10c00217 	ldw	r3,8(r2)
  81a504:	e0bffc17 	ldw	r2,-16(fp)
  81a508:	10800317 	ldw	r2,12(r2)
  81a50c:	1405c83a 	sub	r2,r2,r16
  81a510:	188dd83a 	sra	r6,r3,r2
  81a514:	010021b4 	movhi	r4,134
  81a518:	21253104 	addi	r4,r4,-27452
  81a51c:	840b883a 	add	r5,r16,r16
  81a520:	294b883a 	add	r5,r5,r5
  81a524:	2149883a 	add	r4,r4,r5
  81a528:	21000017 	ldw	r4,0(r4)
  81a52c:	3122703a 	and	r17,r6,r4
  81a530:	00001506 	br	81a588 <jpeg_huff_decode+0xdc>
  81a534:	8c49883a 	add	r4,r17,r17
  81a538:	2023883a 	mov	r17,r4
  81a53c:	00800c16 	blt	zero,r2,81a570 <jpeg_huff_decode+0xc4>
  81a540:	01c00044 	movi	r7,1
  81a544:	100d883a 	mov	r6,r2
  81a548:	180b883a 	mov	r5,r3
  81a54c:	e13ffc17 	ldw	r4,-16(fp)
  81a550:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81a554:	1000021e 	bne	r2,zero,81a560 <jpeg_huff_decode+0xb4>
  81a558:	00bfffc4 	movi	r2,-1
  81a55c:	00003306 	br	81a62c <jpeg_huff_decode+0x180>
  81a560:	e0bffc17 	ldw	r2,-16(fp)
  81a564:	10c00217 	ldw	r3,8(r2)
  81a568:	e0bffc17 	ldw	r2,-16(fp)
  81a56c:	10800317 	ldw	r2,12(r2)
  81a570:	10bfffc4 	addi	r2,r2,-1
  81a574:	188bd83a 	sra	r5,r3,r2
  81a578:	01000044 	movi	r4,1
  81a57c:	2908703a 	and	r4,r5,r4
  81a580:	8922b03a 	or	r17,r17,r4
  81a584:	84000044 	addi	r16,r16,1
  81a588:	e17ffd17 	ldw	r5,-12(fp)
  81a58c:	8409883a 	add	r4,r16,r16
  81a590:	2109883a 	add	r4,r4,r4
  81a594:	2909883a 	add	r4,r5,r4
  81a598:	21000017 	ldw	r4,0(r4)
  81a59c:	247fe516 	blt	r4,r17,81a534 <__alt_mem_epcs_flash_controller_0+0xff811534>
  81a5a0:	e13ffc17 	ldw	r4,-16(fp)
  81a5a4:	20c00215 	stw	r3,8(r4)
  81a5a8:	e0fffc17 	ldw	r3,-16(fp)
  81a5ac:	18800315 	stw	r2,12(r3)
  81a5b0:	80800450 	cmplti	r2,r16,17
  81a5b4:	1000101e 	bne	r2,zero,81a5f8 <jpeg_huff_decode+0x14c>
  81a5b8:	e0bffc17 	ldw	r2,-16(fp)
  81a5bc:	10800417 	ldw	r2,16(r2)
  81a5c0:	10800017 	ldw	r2,0(r2)
  81a5c4:	00c01e44 	movi	r3,121
  81a5c8:	10c00515 	stw	r3,20(r2)
  81a5cc:	e0bffc17 	ldw	r2,-16(fp)
  81a5d0:	10800417 	ldw	r2,16(r2)
  81a5d4:	10800017 	ldw	r2,0(r2)
  81a5d8:	10800117 	ldw	r2,4(r2)
  81a5dc:	e0fffc17 	ldw	r3,-16(fp)
  81a5e0:	18c00417 	ldw	r3,16(r3)
  81a5e4:	017fffc4 	movi	r5,-1
  81a5e8:	1809883a 	mov	r4,r3
  81a5ec:	103ee83a 	callr	r2
  81a5f0:	0005883a 	mov	r2,zero
  81a5f4:	00000d06 	br	81a62c <jpeg_huff_decode+0x180>
  81a5f8:	e0bffd17 	ldw	r2,-12(fp)
  81a5fc:	10c02317 	ldw	r3,140(r2)
  81a600:	e13ffd17 	ldw	r4,-12(fp)
  81a604:	80800484 	addi	r2,r16,18
  81a608:	1085883a 	add	r2,r2,r2
  81a60c:	1085883a 	add	r2,r2,r2
  81a610:	2085883a 	add	r2,r4,r2
  81a614:	10800017 	ldw	r2,0(r2)
  81a618:	1445883a 	add	r2,r2,r17
  81a61c:	1885883a 	add	r2,r3,r2
  81a620:	10800444 	addi	r2,r2,17
  81a624:	10800003 	ldbu	r2,0(r2)
  81a628:	10803fcc 	andi	r2,r2,255
  81a62c:	e6fffe04 	addi	sp,fp,-8
  81a630:	dfc00317 	ldw	ra,12(sp)
  81a634:	df000217 	ldw	fp,8(sp)
  81a638:	dc400117 	ldw	r17,4(sp)
  81a63c:	dc000017 	ldw	r16,0(sp)
  81a640:	dec00404 	addi	sp,sp,16
  81a644:	f800283a 	ret

0081a648 <finish_pass_huff>:
  81a648:	defffd04 	addi	sp,sp,-12
  81a64c:	df000215 	stw	fp,8(sp)
  81a650:	df000204 	addi	fp,sp,8
  81a654:	e13fff15 	stw	r4,-4(fp)
  81a658:	e0bfff17 	ldw	r2,-4(fp)
  81a65c:	10807517 	ldw	r2,468(r2)
  81a660:	e0bffe15 	stw	r2,-8(fp)
  81a664:	e0bfff17 	ldw	r2,-4(fp)
  81a668:	10c07417 	ldw	r3,464(r2)
  81a66c:	e0bfff17 	ldw	r2,-4(fp)
  81a670:	10807417 	ldw	r2,464(r2)
  81a674:	11000617 	ldw	r4,24(r2)
  81a678:	e0bffe17 	ldw	r2,-8(fp)
  81a67c:	10800417 	ldw	r2,16(r2)
  81a680:	1000010e 	bge	r2,zero,81a688 <finish_pass_huff+0x40>
  81a684:	108001c4 	addi	r2,r2,7
  81a688:	1005d0fa 	srai	r2,r2,3
  81a68c:	2085883a 	add	r2,r4,r2
  81a690:	18800615 	stw	r2,24(r3)
  81a694:	e0bffe17 	ldw	r2,-8(fp)
  81a698:	10000415 	stw	zero,16(r2)
  81a69c:	0001883a 	nop
  81a6a0:	e037883a 	mov	sp,fp
  81a6a4:	df000017 	ldw	fp,0(sp)
  81a6a8:	dec00104 	addi	sp,sp,4
  81a6ac:	f800283a 	ret

0081a6b0 <process_restart>:
  81a6b0:	defffb04 	addi	sp,sp,-20
  81a6b4:	dfc00415 	stw	ra,16(sp)
  81a6b8:	df000315 	stw	fp,12(sp)
  81a6bc:	df000304 	addi	fp,sp,12
  81a6c0:	e13fff15 	stw	r4,-4(fp)
  81a6c4:	e0bfff17 	ldw	r2,-4(fp)
  81a6c8:	10807517 	ldw	r2,468(r2)
  81a6cc:	e0bffe15 	stw	r2,-8(fp)
  81a6d0:	e13fff17 	ldw	r4,-4(fp)
  81a6d4:	081a6480 	call	81a648 <finish_pass_huff>
  81a6d8:	e0bfff17 	ldw	r2,-4(fp)
  81a6dc:	10807417 	ldw	r2,464(r2)
  81a6e0:	10800217 	ldw	r2,8(r2)
  81a6e4:	e13fff17 	ldw	r4,-4(fp)
  81a6e8:	103ee83a 	callr	r2
  81a6ec:	1000021e 	bne	r2,zero,81a6f8 <process_restart+0x48>
  81a6f0:	0005883a 	mov	r2,zero
  81a6f4:	00001c06 	br	81a768 <process_restart+0xb8>
  81a6f8:	e03ffd15 	stw	zero,-12(fp)
  81a6fc:	00000a06 	br	81a728 <process_restart+0x78>
  81a700:	e0fffe17 	ldw	r3,-8(fp)
  81a704:	e0bffd17 	ldw	r2,-12(fp)
  81a708:	10800184 	addi	r2,r2,6
  81a70c:	1085883a 	add	r2,r2,r2
  81a710:	1085883a 	add	r2,r2,r2
  81a714:	1885883a 	add	r2,r3,r2
  81a718:	10000015 	stw	zero,0(r2)
  81a71c:	e0bffd17 	ldw	r2,-12(fp)
  81a720:	10800044 	addi	r2,r2,1
  81a724:	e0bffd15 	stw	r2,-12(fp)
  81a728:	e0bfff17 	ldw	r2,-4(fp)
  81a72c:	10805517 	ldw	r2,340(r2)
  81a730:	e0fffd17 	ldw	r3,-12(fp)
  81a734:	18bff216 	blt	r3,r2,81a700 <__alt_mem_epcs_flash_controller_0+0xff811700>
  81a738:	e0bffe17 	ldw	r2,-8(fp)
  81a73c:	10000515 	stw	zero,20(r2)
  81a740:	e0bfff17 	ldw	r2,-4(fp)
  81a744:	10c04617 	ldw	r3,280(r2)
  81a748:	e0bffe17 	ldw	r2,-8(fp)
  81a74c:	10c00b15 	stw	r3,44(r2)
  81a750:	e0bfff17 	ldw	r2,-4(fp)
  81a754:	10806e17 	ldw	r2,440(r2)
  81a758:	1000021e 	bne	r2,zero,81a764 <process_restart+0xb4>
  81a75c:	e0bffe17 	ldw	r2,-8(fp)
  81a760:	10000a15 	stw	zero,40(r2)
  81a764:	00800044 	movi	r2,1
  81a768:	e037883a 	mov	sp,fp
  81a76c:	dfc00117 	ldw	ra,4(sp)
  81a770:	df000017 	ldw	fp,0(sp)
  81a774:	dec00204 	addi	sp,sp,8
  81a778:	f800283a 	ret

0081a77c <decode_mcu_DC_first>:
  81a77c:	deffe604 	addi	sp,sp,-104
  81a780:	dfc01915 	stw	ra,100(sp)
  81a784:	df001815 	stw	fp,96(sp)
  81a788:	dcc01715 	stw	r19,92(sp)
  81a78c:	dc801615 	stw	r18,88(sp)
  81a790:	dc401515 	stw	r17,84(sp)
  81a794:	dc001415 	stw	r16,80(sp)
  81a798:	df001804 	addi	fp,sp,96
  81a79c:	e13ffa15 	stw	r4,-24(fp)
  81a7a0:	e17ffb15 	stw	r5,-20(fp)
  81a7a4:	e0bffa17 	ldw	r2,-24(fp)
  81a7a8:	10807517 	ldw	r2,468(r2)
  81a7ac:	e0bfea15 	stw	r2,-88(fp)
  81a7b0:	e0bffa17 	ldw	r2,-24(fp)
  81a7b4:	10806a17 	ldw	r2,424(r2)
  81a7b8:	e0bfeb15 	stw	r2,-84(fp)
  81a7bc:	e0bffa17 	ldw	r2,-24(fp)
  81a7c0:	10804617 	ldw	r2,280(r2)
  81a7c4:	10000826 	beq	r2,zero,81a7e8 <decode_mcu_DC_first+0x6c>
  81a7c8:	e0bfea17 	ldw	r2,-88(fp)
  81a7cc:	10800b17 	ldw	r2,44(r2)
  81a7d0:	1000051e 	bne	r2,zero,81a7e8 <decode_mcu_DC_first+0x6c>
  81a7d4:	e13ffa17 	ldw	r4,-24(fp)
  81a7d8:	081a6b00 	call	81a6b0 <process_restart>
  81a7dc:	1000021e 	bne	r2,zero,81a7e8 <decode_mcu_DC_first+0x6c>
  81a7e0:	0005883a 	mov	r2,zero
  81a7e4:	0000d206 	br	81ab30 <decode_mcu_DC_first+0x3b4>
  81a7e8:	e0bfea17 	ldw	r2,-88(fp)
  81a7ec:	10800a17 	ldw	r2,40(r2)
  81a7f0:	1000c91e 	bne	r2,zero,81ab18 <decode_mcu_DC_first+0x39c>
  81a7f4:	e0bffa17 	ldw	r2,-24(fp)
  81a7f8:	e0bff415 	stw	r2,-48(fp)
  81a7fc:	e0bffa17 	ldw	r2,-24(fp)
  81a800:	10800617 	ldw	r2,24(r2)
  81a804:	10800017 	ldw	r2,0(r2)
  81a808:	e0bff015 	stw	r2,-64(fp)
  81a80c:	e0bffa17 	ldw	r2,-24(fp)
  81a810:	10800617 	ldw	r2,24(r2)
  81a814:	10800117 	ldw	r2,4(r2)
  81a818:	e0bff115 	stw	r2,-60(fp)
  81a81c:	e0bfea17 	ldw	r2,-88(fp)
  81a820:	14800317 	ldw	r18,12(r2)
  81a824:	e0bfea17 	ldw	r2,-88(fp)
  81a828:	14000417 	ldw	r16,16(r2)
  81a82c:	e0bfea17 	ldw	r2,-88(fp)
  81a830:	10c00517 	ldw	r3,20(r2)
  81a834:	e0fff515 	stw	r3,-44(fp)
  81a838:	10c00617 	ldw	r3,24(r2)
  81a83c:	e0fff615 	stw	r3,-40(fp)
  81a840:	10c00717 	ldw	r3,28(r2)
  81a844:	e0fff715 	stw	r3,-36(fp)
  81a848:	10c00817 	ldw	r3,32(r2)
  81a84c:	e0fff815 	stw	r3,-32(fp)
  81a850:	10800917 	ldw	r2,36(r2)
  81a854:	e0bff915 	stw	r2,-28(fp)
  81a858:	e03fe915 	stw	zero,-92(fp)
  81a85c:	00009306 	br	81aaac <decode_mcu_DC_first+0x330>
  81a860:	e0bfe917 	ldw	r2,-92(fp)
  81a864:	1085883a 	add	r2,r2,r2
  81a868:	1085883a 	add	r2,r2,r2
  81a86c:	1007883a 	mov	r3,r2
  81a870:	e0bffb17 	ldw	r2,-20(fp)
  81a874:	10c5883a 	add	r2,r2,r3
  81a878:	10800017 	ldw	r2,0(r2)
  81a87c:	e0bfec15 	stw	r2,-80(fp)
  81a880:	e0fffa17 	ldw	r3,-24(fp)
  81a884:	e0bfe917 	ldw	r2,-92(fp)
  81a888:	10801744 	addi	r2,r2,93
  81a88c:	1085883a 	add	r2,r2,r2
  81a890:	1085883a 	add	r2,r2,r2
  81a894:	1885883a 	add	r2,r3,r2
  81a898:	10800017 	ldw	r2,0(r2)
  81a89c:	e0bfed15 	stw	r2,-76(fp)
  81a8a0:	e0fffa17 	ldw	r3,-24(fp)
  81a8a4:	e0bfed17 	ldw	r2,-76(fp)
  81a8a8:	10801584 	addi	r2,r2,86
  81a8ac:	1085883a 	add	r2,r2,r2
  81a8b0:	1085883a 	add	r2,r2,r2
  81a8b4:	1885883a 	add	r2,r3,r2
  81a8b8:	10800017 	ldw	r2,0(r2)
  81a8bc:	e0bfee15 	stw	r2,-72(fp)
  81a8c0:	e0bfee17 	ldw	r2,-72(fp)
  81a8c4:	10800517 	ldw	r2,20(r2)
  81a8c8:	e0ffea17 	ldw	r3,-88(fp)
  81a8cc:	10800304 	addi	r2,r2,12
  81a8d0:	1085883a 	add	r2,r2,r2
  81a8d4:	1085883a 	add	r2,r2,r2
  81a8d8:	1885883a 	add	r2,r3,r2
  81a8dc:	10800017 	ldw	r2,0(r2)
  81a8e0:	e0bfef15 	stw	r2,-68(fp)
  81a8e4:	80800208 	cmpgei	r2,r16,8
  81a8e8:	10000f1e 	bne	r2,zero,81a928 <decode_mcu_DC_first+0x1ac>
  81a8ec:	e0bff004 	addi	r2,fp,-64
  81a8f0:	000f883a 	mov	r7,zero
  81a8f4:	800d883a 	mov	r6,r16
  81a8f8:	900b883a 	mov	r5,r18
  81a8fc:	1009883a 	mov	r4,r2
  81a900:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81a904:	1000021e 	bne	r2,zero,81a910 <decode_mcu_DC_first+0x194>
  81a908:	0005883a 	mov	r2,zero
  81a90c:	00008806 	br	81ab30 <decode_mcu_DC_first+0x3b4>
  81a910:	e4bff217 	ldw	r18,-56(fp)
  81a914:	e43ff317 	ldw	r16,-52(fp)
  81a918:	80800208 	cmpgei	r2,r16,8
  81a91c:	1000021e 	bne	r2,zero,81a928 <decode_mcu_DC_first+0x1ac>
  81a920:	04400044 	movi	r17,1
  81a924:	00001306 	br	81a974 <decode_mcu_DC_first+0x1f8>
  81a928:	80bffe04 	addi	r2,r16,-8
  81a92c:	9087d83a 	sra	r3,r18,r2
  81a930:	00803fc4 	movi	r2,255
  81a934:	18a6703a 	and	r19,r3,r2
  81a938:	e0ffef17 	ldw	r3,-68(fp)
  81a93c:	98800904 	addi	r2,r19,36
  81a940:	1085883a 	add	r2,r2,r2
  81a944:	1085883a 	add	r2,r2,r2
  81a948:	1885883a 	add	r2,r3,r2
  81a94c:	14400017 	ldw	r17,0(r2)
  81a950:	88000726 	beq	r17,zero,81a970 <decode_mcu_DC_first+0x1f4>
  81a954:	8461c83a 	sub	r16,r16,r17
  81a958:	e0bfef17 	ldw	r2,-68(fp)
  81a95c:	14c5883a 	add	r2,r2,r19
  81a960:	10812404 	addi	r2,r2,1168
  81a964:	10800003 	ldbu	r2,0(r2)
  81a968:	14403fcc 	andi	r17,r2,255
  81a96c:	00000e06 	br	81a9a8 <decode_mcu_DC_first+0x22c>
  81a970:	04400244 	movi	r17,9
  81a974:	e0bff004 	addi	r2,fp,-64
  81a978:	dc400015 	stw	r17,0(sp)
  81a97c:	e1ffef17 	ldw	r7,-68(fp)
  81a980:	800d883a 	mov	r6,r16
  81a984:	900b883a 	mov	r5,r18
  81a988:	1009883a 	mov	r4,r2
  81a98c:	081a4ac0 	call	81a4ac <jpeg_huff_decode>
  81a990:	1023883a 	mov	r17,r2
  81a994:	8800020e 	bge	r17,zero,81a9a0 <decode_mcu_DC_first+0x224>
  81a998:	0005883a 	mov	r2,zero
  81a99c:	00006406 	br	81ab30 <decode_mcu_DC_first+0x3b4>
  81a9a0:	e4bff217 	ldw	r18,-56(fp)
  81a9a4:	e43ff317 	ldw	r16,-52(fp)
  81a9a8:	88002726 	beq	r17,zero,81aa48 <decode_mcu_DC_first+0x2cc>
  81a9ac:	84400b0e 	bge	r16,r17,81a9dc <decode_mcu_DC_first+0x260>
  81a9b0:	e0bff004 	addi	r2,fp,-64
  81a9b4:	880f883a 	mov	r7,r17
  81a9b8:	800d883a 	mov	r6,r16
  81a9bc:	900b883a 	mov	r5,r18
  81a9c0:	1009883a 	mov	r4,r2
  81a9c4:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81a9c8:	1000021e 	bne	r2,zero,81a9d4 <decode_mcu_DC_first+0x258>
  81a9cc:	0005883a 	mov	r2,zero
  81a9d0:	00005706 	br	81ab30 <decode_mcu_DC_first+0x3b4>
  81a9d4:	e4bff217 	ldw	r18,-56(fp)
  81a9d8:	e43ff317 	ldw	r16,-52(fp)
  81a9dc:	8461c83a 	sub	r16,r16,r17
  81a9e0:	9409d83a 	sra	r4,r18,r16
  81a9e4:	008021b4 	movhi	r2,134
  81a9e8:	10a53104 	addi	r2,r2,-27452
  81a9ec:	8c47883a 	add	r3,r17,r17
  81a9f0:	18c7883a 	add	r3,r3,r3
  81a9f4:	10c5883a 	add	r2,r2,r3
  81a9f8:	10800017 	ldw	r2,0(r2)
  81a9fc:	20a6703a 	and	r19,r4,r2
  81aa00:	88ffffc4 	addi	r3,r17,-1
  81aa04:	008021b4 	movhi	r2,134
  81aa08:	10a53104 	addi	r2,r2,-27452
  81aa0c:	18c7883a 	add	r3,r3,r3
  81aa10:	18c7883a 	add	r3,r3,r3
  81aa14:	10c5883a 	add	r2,r2,r3
  81aa18:	10800017 	ldw	r2,0(r2)
  81aa1c:	14c00816 	blt	r2,r19,81aa40 <decode_mcu_DC_first+0x2c4>
  81aa20:	008021b4 	movhi	r2,134
  81aa24:	10a53104 	addi	r2,r2,-27452
  81aa28:	8c47883a 	add	r3,r17,r17
  81aa2c:	18c7883a 	add	r3,r3,r3
  81aa30:	10c5883a 	add	r2,r2,r3
  81aa34:	10800017 	ldw	r2,0(r2)
  81aa38:	9885c83a 	sub	r2,r19,r2
  81aa3c:	00000106 	br	81aa44 <decode_mcu_DC_first+0x2c8>
  81aa40:	9805883a 	mov	r2,r19
  81aa44:	1023883a 	mov	r17,r2
  81aa48:	e0bfed17 	ldw	r2,-76(fp)
  81aa4c:	10800044 	addi	r2,r2,1
  81aa50:	1085883a 	add	r2,r2,r2
  81aa54:	1085883a 	add	r2,r2,r2
  81aa58:	e0ffe904 	addi	r3,fp,-92
  81aa5c:	1885883a 	add	r2,r3,r2
  81aa60:	10800c04 	addi	r2,r2,48
  81aa64:	10800017 	ldw	r2,0(r2)
  81aa68:	88a3883a 	add	r17,r17,r2
  81aa6c:	e0bfed17 	ldw	r2,-76(fp)
  81aa70:	10800044 	addi	r2,r2,1
  81aa74:	1085883a 	add	r2,r2,r2
  81aa78:	1085883a 	add	r2,r2,r2
  81aa7c:	e0ffe904 	addi	r3,fp,-92
  81aa80:	1885883a 	add	r2,r3,r2
  81aa84:	10800c04 	addi	r2,r2,48
  81aa88:	14400015 	stw	r17,0(r2)
  81aa8c:	e0bfeb17 	ldw	r2,-84(fp)
  81aa90:	8884983a 	sll	r2,r17,r2
  81aa94:	1007883a 	mov	r3,r2
  81aa98:	e0bfec17 	ldw	r2,-80(fp)
  81aa9c:	10c0000d 	sth	r3,0(r2)
  81aaa0:	e0bfe917 	ldw	r2,-92(fp)
  81aaa4:	10800044 	addi	r2,r2,1
  81aaa8:	e0bfe915 	stw	r2,-92(fp)
  81aaac:	e0bffa17 	ldw	r2,-24(fp)
  81aab0:	10805c17 	ldw	r2,368(r2)
  81aab4:	e0ffe917 	ldw	r3,-92(fp)
  81aab8:	18bf6916 	blt	r3,r2,81a860 <__alt_mem_epcs_flash_controller_0+0xff811860>
  81aabc:	e0bffa17 	ldw	r2,-24(fp)
  81aac0:	10800617 	ldw	r2,24(r2)
  81aac4:	e0fff017 	ldw	r3,-64(fp)
  81aac8:	10c00015 	stw	r3,0(r2)
  81aacc:	e0bffa17 	ldw	r2,-24(fp)
  81aad0:	10800617 	ldw	r2,24(r2)
  81aad4:	e0fff117 	ldw	r3,-60(fp)
  81aad8:	10c00115 	stw	r3,4(r2)
  81aadc:	e0bfea17 	ldw	r2,-88(fp)
  81aae0:	14800315 	stw	r18,12(r2)
  81aae4:	e0bfea17 	ldw	r2,-88(fp)
  81aae8:	14000415 	stw	r16,16(r2)
  81aaec:	e0bfea17 	ldw	r2,-88(fp)
  81aaf0:	e0fff517 	ldw	r3,-44(fp)
  81aaf4:	10c00515 	stw	r3,20(r2)
  81aaf8:	e0fff617 	ldw	r3,-40(fp)
  81aafc:	10c00615 	stw	r3,24(r2)
  81ab00:	e0fff717 	ldw	r3,-36(fp)
  81ab04:	10c00715 	stw	r3,28(r2)
  81ab08:	e0fff817 	ldw	r3,-32(fp)
  81ab0c:	10c00815 	stw	r3,32(r2)
  81ab10:	e0fff917 	ldw	r3,-28(fp)
  81ab14:	10c00915 	stw	r3,36(r2)
  81ab18:	e0bfea17 	ldw	r2,-88(fp)
  81ab1c:	10800b17 	ldw	r2,44(r2)
  81ab20:	10ffffc4 	addi	r3,r2,-1
  81ab24:	e0bfea17 	ldw	r2,-88(fp)
  81ab28:	10c00b15 	stw	r3,44(r2)
  81ab2c:	00800044 	movi	r2,1
  81ab30:	e6fffc04 	addi	sp,fp,-16
  81ab34:	dfc00517 	ldw	ra,20(sp)
  81ab38:	df000417 	ldw	fp,16(sp)
  81ab3c:	dcc00317 	ldw	r19,12(sp)
  81ab40:	dc800217 	ldw	r18,8(sp)
  81ab44:	dc400117 	ldw	r17,4(sp)
  81ab48:	dc000017 	ldw	r16,0(sp)
  81ab4c:	dec00604 	addi	sp,sp,24
  81ab50:	f800283a 	ret

0081ab54 <decode_mcu_AC_first>:
  81ab54:	deffea04 	addi	sp,sp,-88
  81ab58:	dfc01515 	stw	ra,84(sp)
  81ab5c:	df001415 	stw	fp,80(sp)
  81ab60:	dd001315 	stw	r20,76(sp)
  81ab64:	dcc01215 	stw	r19,72(sp)
  81ab68:	dc801115 	stw	r18,68(sp)
  81ab6c:	dc401015 	stw	r17,64(sp)
  81ab70:	dc000f15 	stw	r16,60(sp)
  81ab74:	df001404 	addi	fp,sp,80
  81ab78:	e13ff915 	stw	r4,-28(fp)
  81ab7c:	e17ffa15 	stw	r5,-24(fp)
  81ab80:	e0bff917 	ldw	r2,-28(fp)
  81ab84:	10807517 	ldw	r2,468(r2)
  81ab88:	e0bfee15 	stw	r2,-72(fp)
  81ab8c:	e0bff917 	ldw	r2,-28(fp)
  81ab90:	10804617 	ldw	r2,280(r2)
  81ab94:	10000826 	beq	r2,zero,81abb8 <decode_mcu_AC_first+0x64>
  81ab98:	e0bfee17 	ldw	r2,-72(fp)
  81ab9c:	10800b17 	ldw	r2,44(r2)
  81aba0:	1000051e 	bne	r2,zero,81abb8 <decode_mcu_AC_first+0x64>
  81aba4:	e13ff917 	ldw	r4,-28(fp)
  81aba8:	081a6b00 	call	81a6b0 <process_restart>
  81abac:	1000021e 	bne	r2,zero,81abb8 <decode_mcu_AC_first+0x64>
  81abb0:	0005883a 	mov	r2,zero
  81abb4:	0000d506 	br	81af0c <decode_mcu_AC_first+0x3b8>
  81abb8:	e0bfee17 	ldw	r2,-72(fp)
  81abbc:	10800a17 	ldw	r2,40(r2)
  81abc0:	1000cc1e 	bne	r2,zero,81aef4 <decode_mcu_AC_first+0x3a0>
  81abc4:	e0bff917 	ldw	r2,-28(fp)
  81abc8:	10806817 	ldw	r2,416(r2)
  81abcc:	e0bfef15 	stw	r2,-68(fp)
  81abd0:	e0bff917 	ldw	r2,-28(fp)
  81abd4:	10806a17 	ldw	r2,424(r2)
  81abd8:	e0bff015 	stw	r2,-64(fp)
  81abdc:	e0bff917 	ldw	r2,-28(fp)
  81abe0:	10806c17 	ldw	r2,432(r2)
  81abe4:	e0bff115 	stw	r2,-60(fp)
  81abe8:	e0bfee17 	ldw	r2,-72(fp)
  81abec:	10800517 	ldw	r2,20(r2)
  81abf0:	e0bfed15 	stw	r2,-76(fp)
  81abf4:	e0bfed17 	ldw	r2,-76(fp)
  81abf8:	10000426 	beq	r2,zero,81ac0c <decode_mcu_AC_first+0xb8>
  81abfc:	e0bfed17 	ldw	r2,-76(fp)
  81ac00:	10bfffc4 	addi	r2,r2,-1
  81ac04:	e0bfed15 	stw	r2,-76(fp)
  81ac08:	0000b706 	br	81aee8 <decode_mcu_AC_first+0x394>
  81ac0c:	e0bff917 	ldw	r2,-28(fp)
  81ac10:	e0bff815 	stw	r2,-32(fp)
  81ac14:	e0bff917 	ldw	r2,-28(fp)
  81ac18:	10800617 	ldw	r2,24(r2)
  81ac1c:	10800017 	ldw	r2,0(r2)
  81ac20:	e0bff415 	stw	r2,-48(fp)
  81ac24:	e0bff917 	ldw	r2,-28(fp)
  81ac28:	10800617 	ldw	r2,24(r2)
  81ac2c:	10800117 	ldw	r2,4(r2)
  81ac30:	e0bff515 	stw	r2,-44(fp)
  81ac34:	e0bfee17 	ldw	r2,-72(fp)
  81ac38:	14c00317 	ldw	r19,12(r2)
  81ac3c:	e0bfee17 	ldw	r2,-72(fp)
  81ac40:	14000417 	ldw	r16,16(r2)
  81ac44:	e0bffa17 	ldw	r2,-24(fp)
  81ac48:	10800017 	ldw	r2,0(r2)
  81ac4c:	e0bff215 	stw	r2,-56(fp)
  81ac50:	e0bfee17 	ldw	r2,-72(fp)
  81ac54:	10801017 	ldw	r2,64(r2)
  81ac58:	e0bff315 	stw	r2,-52(fp)
  81ac5c:	e0bff917 	ldw	r2,-28(fp)
  81ac60:	15006717 	ldw	r20,412(r2)
  81ac64:	00009006 	br	81aea8 <decode_mcu_AC_first+0x354>
  81ac68:	80800208 	cmpgei	r2,r16,8
  81ac6c:	10000f1e 	bne	r2,zero,81acac <decode_mcu_AC_first+0x158>
  81ac70:	e0bff404 	addi	r2,fp,-48
  81ac74:	000f883a 	mov	r7,zero
  81ac78:	800d883a 	mov	r6,r16
  81ac7c:	980b883a 	mov	r5,r19
  81ac80:	1009883a 	mov	r4,r2
  81ac84:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81ac88:	1000021e 	bne	r2,zero,81ac94 <decode_mcu_AC_first+0x140>
  81ac8c:	0005883a 	mov	r2,zero
  81ac90:	00009e06 	br	81af0c <decode_mcu_AC_first+0x3b8>
  81ac94:	e4fff617 	ldw	r19,-40(fp)
  81ac98:	e43ff717 	ldw	r16,-36(fp)
  81ac9c:	80800208 	cmpgei	r2,r16,8
  81aca0:	1000021e 	bne	r2,zero,81acac <decode_mcu_AC_first+0x158>
  81aca4:	04400044 	movi	r17,1
  81aca8:	00001306 	br	81acf8 <decode_mcu_AC_first+0x1a4>
  81acac:	80bffe04 	addi	r2,r16,-8
  81acb0:	9887d83a 	sra	r3,r19,r2
  81acb4:	00803fc4 	movi	r2,255
  81acb8:	18a4703a 	and	r18,r3,r2
  81acbc:	e0fff317 	ldw	r3,-52(fp)
  81acc0:	90800904 	addi	r2,r18,36
  81acc4:	1085883a 	add	r2,r2,r2
  81acc8:	1085883a 	add	r2,r2,r2
  81accc:	1885883a 	add	r2,r3,r2
  81acd0:	14400017 	ldw	r17,0(r2)
  81acd4:	88000726 	beq	r17,zero,81acf4 <decode_mcu_AC_first+0x1a0>
  81acd8:	8461c83a 	sub	r16,r16,r17
  81acdc:	e0bff317 	ldw	r2,-52(fp)
  81ace0:	1485883a 	add	r2,r2,r18
  81ace4:	10812404 	addi	r2,r2,1168
  81ace8:	10800003 	ldbu	r2,0(r2)
  81acec:	14403fcc 	andi	r17,r2,255
  81acf0:	00000e06 	br	81ad2c <decode_mcu_AC_first+0x1d8>
  81acf4:	04400244 	movi	r17,9
  81acf8:	e0bff404 	addi	r2,fp,-48
  81acfc:	dc400015 	stw	r17,0(sp)
  81ad00:	e1fff317 	ldw	r7,-52(fp)
  81ad04:	800d883a 	mov	r6,r16
  81ad08:	980b883a 	mov	r5,r19
  81ad0c:	1009883a 	mov	r4,r2
  81ad10:	081a4ac0 	call	81a4ac <jpeg_huff_decode>
  81ad14:	1023883a 	mov	r17,r2
  81ad18:	8800020e 	bge	r17,zero,81ad24 <decode_mcu_AC_first+0x1d0>
  81ad1c:	0005883a 	mov	r2,zero
  81ad20:	00007a06 	br	81af0c <decode_mcu_AC_first+0x3b8>
  81ad24:	e4fff617 	ldw	r19,-40(fp)
  81ad28:	e43ff717 	ldw	r16,-36(fp)
  81ad2c:	8825d13a 	srai	r18,r17,4
  81ad30:	8c4003cc 	andi	r17,r17,15
  81ad34:	88003726 	beq	r17,zero,81ae14 <decode_mcu_AC_first+0x2c0>
  81ad38:	a4a9883a 	add	r20,r20,r18
  81ad3c:	84400b0e 	bge	r16,r17,81ad6c <decode_mcu_AC_first+0x218>
  81ad40:	e0bff404 	addi	r2,fp,-48
  81ad44:	880f883a 	mov	r7,r17
  81ad48:	800d883a 	mov	r6,r16
  81ad4c:	980b883a 	mov	r5,r19
  81ad50:	1009883a 	mov	r4,r2
  81ad54:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81ad58:	1000021e 	bne	r2,zero,81ad64 <decode_mcu_AC_first+0x210>
  81ad5c:	0005883a 	mov	r2,zero
  81ad60:	00006a06 	br	81af0c <decode_mcu_AC_first+0x3b8>
  81ad64:	e4fff617 	ldw	r19,-40(fp)
  81ad68:	e43ff717 	ldw	r16,-36(fp)
  81ad6c:	8461c83a 	sub	r16,r16,r17
  81ad70:	9c09d83a 	sra	r4,r19,r16
  81ad74:	008021b4 	movhi	r2,134
  81ad78:	10a53104 	addi	r2,r2,-27452
  81ad7c:	8c47883a 	add	r3,r17,r17
  81ad80:	18c7883a 	add	r3,r3,r3
  81ad84:	10c5883a 	add	r2,r2,r3
  81ad88:	10800017 	ldw	r2,0(r2)
  81ad8c:	20a4703a 	and	r18,r4,r2
  81ad90:	88ffffc4 	addi	r3,r17,-1
  81ad94:	008021b4 	movhi	r2,134
  81ad98:	10a53104 	addi	r2,r2,-27452
  81ad9c:	18c7883a 	add	r3,r3,r3
  81ada0:	18c7883a 	add	r3,r3,r3
  81ada4:	10c5883a 	add	r2,r2,r3
  81ada8:	10800017 	ldw	r2,0(r2)
  81adac:	14800816 	blt	r2,r18,81add0 <decode_mcu_AC_first+0x27c>
  81adb0:	008021b4 	movhi	r2,134
  81adb4:	10a53104 	addi	r2,r2,-27452
  81adb8:	8c47883a 	add	r3,r17,r17
  81adbc:	18c7883a 	add	r3,r3,r3
  81adc0:	10c5883a 	add	r2,r2,r3
  81adc4:	10800017 	ldw	r2,0(r2)
  81adc8:	9085c83a 	sub	r2,r18,r2
  81adcc:	00000106 	br	81add4 <decode_mcu_AC_first+0x280>
  81add0:	9005883a 	mov	r2,r18
  81add4:	1023883a 	mov	r17,r2
  81add8:	a005883a 	mov	r2,r20
  81addc:	1085883a 	add	r2,r2,r2
  81ade0:	1085883a 	add	r2,r2,r2
  81ade4:	1007883a 	mov	r3,r2
  81ade8:	e0bff117 	ldw	r2,-60(fp)
  81adec:	10c5883a 	add	r2,r2,r3
  81adf0:	10800017 	ldw	r2,0(r2)
  81adf4:	e0fff017 	ldw	r3,-64(fp)
  81adf8:	88c6983a 	sll	r3,r17,r3
  81adfc:	1809883a 	mov	r4,r3
  81ae00:	e0fff217 	ldw	r3,-56(fp)
  81ae04:	1085883a 	add	r2,r2,r2
  81ae08:	1885883a 	add	r2,r3,r2
  81ae0c:	1100000d 	sth	r4,0(r2)
  81ae10:	00002406 	br	81aea4 <decode_mcu_AC_first+0x350>
  81ae14:	908003e0 	cmpeqi	r2,r18,15
  81ae18:	1000211e 	bne	r2,zero,81aea0 <decode_mcu_AC_first+0x34c>
  81ae1c:	90002526 	beq	r18,zero,81aeb4 <decode_mcu_AC_first+0x360>
  81ae20:	00800044 	movi	r2,1
  81ae24:	1484983a 	sll	r2,r2,r18
  81ae28:	e0bfed15 	stw	r2,-76(fp)
  81ae2c:	84800b0e 	bge	r16,r18,81ae5c <decode_mcu_AC_first+0x308>
  81ae30:	e0bff404 	addi	r2,fp,-48
  81ae34:	900f883a 	mov	r7,r18
  81ae38:	800d883a 	mov	r6,r16
  81ae3c:	980b883a 	mov	r5,r19
  81ae40:	1009883a 	mov	r4,r2
  81ae44:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81ae48:	1000021e 	bne	r2,zero,81ae54 <decode_mcu_AC_first+0x300>
  81ae4c:	0005883a 	mov	r2,zero
  81ae50:	00002e06 	br	81af0c <decode_mcu_AC_first+0x3b8>
  81ae54:	e4fff617 	ldw	r19,-40(fp)
  81ae58:	e43ff717 	ldw	r16,-36(fp)
  81ae5c:	84a1c83a 	sub	r16,r16,r18
  81ae60:	9c09d83a 	sra	r4,r19,r16
  81ae64:	008021b4 	movhi	r2,134
  81ae68:	10a53104 	addi	r2,r2,-27452
  81ae6c:	9487883a 	add	r3,r18,r18
  81ae70:	18c7883a 	add	r3,r3,r3
  81ae74:	10c5883a 	add	r2,r2,r3
  81ae78:	10800017 	ldw	r2,0(r2)
  81ae7c:	20a4703a 	and	r18,r4,r2
  81ae80:	9007883a 	mov	r3,r18
  81ae84:	e0bfed17 	ldw	r2,-76(fp)
  81ae88:	10c5883a 	add	r2,r2,r3
  81ae8c:	e0bfed15 	stw	r2,-76(fp)
  81ae90:	e0bfed17 	ldw	r2,-76(fp)
  81ae94:	10bfffc4 	addi	r2,r2,-1
  81ae98:	e0bfed15 	stw	r2,-76(fp)
  81ae9c:	00000506 	br	81aeb4 <decode_mcu_AC_first+0x360>
  81aea0:	a50003c4 	addi	r20,r20,15
  81aea4:	a5000044 	addi	r20,r20,1
  81aea8:	e0bfef17 	ldw	r2,-68(fp)
  81aeac:	153f6e0e 	bge	r2,r20,81ac68 <__alt_mem_epcs_flash_controller_0+0xff811c68>
  81aeb0:	00000106 	br	81aeb8 <decode_mcu_AC_first+0x364>
  81aeb4:	0001883a 	nop
  81aeb8:	e0bff917 	ldw	r2,-28(fp)
  81aebc:	10800617 	ldw	r2,24(r2)
  81aec0:	e0fff417 	ldw	r3,-48(fp)
  81aec4:	10c00015 	stw	r3,0(r2)
  81aec8:	e0bff917 	ldw	r2,-28(fp)
  81aecc:	10800617 	ldw	r2,24(r2)
  81aed0:	e0fff517 	ldw	r3,-44(fp)
  81aed4:	10c00115 	stw	r3,4(r2)
  81aed8:	e0bfee17 	ldw	r2,-72(fp)
  81aedc:	14c00315 	stw	r19,12(r2)
  81aee0:	e0bfee17 	ldw	r2,-72(fp)
  81aee4:	14000415 	stw	r16,16(r2)
  81aee8:	e0bfee17 	ldw	r2,-72(fp)
  81aeec:	e0ffed17 	ldw	r3,-76(fp)
  81aef0:	10c00515 	stw	r3,20(r2)
  81aef4:	e0bfee17 	ldw	r2,-72(fp)
  81aef8:	10800b17 	ldw	r2,44(r2)
  81aefc:	10ffffc4 	addi	r3,r2,-1
  81af00:	e0bfee17 	ldw	r2,-72(fp)
  81af04:	10c00b15 	stw	r3,44(r2)
  81af08:	00800044 	movi	r2,1
  81af0c:	e6fffb04 	addi	sp,fp,-20
  81af10:	dfc00617 	ldw	ra,24(sp)
  81af14:	df000517 	ldw	fp,20(sp)
  81af18:	dd000417 	ldw	r20,16(sp)
  81af1c:	dcc00317 	ldw	r19,12(sp)
  81af20:	dc800217 	ldw	r18,8(sp)
  81af24:	dc400117 	ldw	r17,4(sp)
  81af28:	dc000017 	ldw	r16,0(sp)
  81af2c:	dec00704 	addi	sp,sp,28
  81af30:	f800283a 	ret

0081af34 <decode_mcu_DC_refine>:
  81af34:	defff204 	addi	sp,sp,-56
  81af38:	dfc00d15 	stw	ra,52(sp)
  81af3c:	df000c15 	stw	fp,48(sp)
  81af40:	dc400b15 	stw	r17,44(sp)
  81af44:	dc000a15 	stw	r16,40(sp)
  81af48:	df000c04 	addi	fp,sp,48
  81af4c:	e13ffc15 	stw	r4,-16(fp)
  81af50:	e17ffd15 	stw	r5,-12(fp)
  81af54:	e0bffc17 	ldw	r2,-16(fp)
  81af58:	10807517 	ldw	r2,468(r2)
  81af5c:	e0bff515 	stw	r2,-44(fp)
  81af60:	e0bffc17 	ldw	r2,-16(fp)
  81af64:	10804617 	ldw	r2,280(r2)
  81af68:	10000826 	beq	r2,zero,81af8c <decode_mcu_DC_refine+0x58>
  81af6c:	e0bff517 	ldw	r2,-44(fp)
  81af70:	10800b17 	ldw	r2,44(r2)
  81af74:	1000051e 	bne	r2,zero,81af8c <decode_mcu_DC_refine+0x58>
  81af78:	e13ffc17 	ldw	r4,-16(fp)
  81af7c:	081a6b00 	call	81a6b0 <process_restart>
  81af80:	1000021e 	bne	r2,zero,81af8c <decode_mcu_DC_refine+0x58>
  81af84:	0005883a 	mov	r2,zero
  81af88:	00005106 	br	81b0d0 <decode_mcu_DC_refine+0x19c>
  81af8c:	e0bffc17 	ldw	r2,-16(fp)
  81af90:	e0bffb15 	stw	r2,-20(fp)
  81af94:	e0bffc17 	ldw	r2,-16(fp)
  81af98:	10800617 	ldw	r2,24(r2)
  81af9c:	10800017 	ldw	r2,0(r2)
  81afa0:	e0bff715 	stw	r2,-36(fp)
  81afa4:	e0bffc17 	ldw	r2,-16(fp)
  81afa8:	10800617 	ldw	r2,24(r2)
  81afac:	10800117 	ldw	r2,4(r2)
  81afb0:	e0bff815 	stw	r2,-32(fp)
  81afb4:	e0bff517 	ldw	r2,-44(fp)
  81afb8:	14400317 	ldw	r17,12(r2)
  81afbc:	e0bff517 	ldw	r2,-44(fp)
  81afc0:	14000417 	ldw	r16,16(r2)
  81afc4:	e0bffc17 	ldw	r2,-16(fp)
  81afc8:	10806a17 	ldw	r2,424(r2)
  81afcc:	00c00044 	movi	r3,1
  81afd0:	1884983a 	sll	r2,r3,r2
  81afd4:	e0bff615 	stw	r2,-40(fp)
  81afd8:	e03ff415 	stw	zero,-48(fp)
  81afdc:	00002606 	br	81b078 <decode_mcu_DC_refine+0x144>
  81afe0:	04000b16 	blt	zero,r16,81b010 <decode_mcu_DC_refine+0xdc>
  81afe4:	e0bff704 	addi	r2,fp,-36
  81afe8:	01c00044 	movi	r7,1
  81afec:	800d883a 	mov	r6,r16
  81aff0:	880b883a 	mov	r5,r17
  81aff4:	1009883a 	mov	r4,r2
  81aff8:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81affc:	1000021e 	bne	r2,zero,81b008 <decode_mcu_DC_refine+0xd4>
  81b000:	0005883a 	mov	r2,zero
  81b004:	00003206 	br	81b0d0 <decode_mcu_DC_refine+0x19c>
  81b008:	e47ff917 	ldw	r17,-28(fp)
  81b00c:	e43ffa17 	ldw	r16,-24(fp)
  81b010:	843fffc4 	addi	r16,r16,-1
  81b014:	8c07d83a 	sra	r3,r17,r16
  81b018:	00800044 	movi	r2,1
  81b01c:	1884703a 	and	r2,r3,r2
  81b020:	10001226 	beq	r2,zero,81b06c <decode_mcu_DC_refine+0x138>
  81b024:	e0bff417 	ldw	r2,-48(fp)
  81b028:	1085883a 	add	r2,r2,r2
  81b02c:	1085883a 	add	r2,r2,r2
  81b030:	1007883a 	mov	r3,r2
  81b034:	e0bffd17 	ldw	r2,-12(fp)
  81b038:	10c5883a 	add	r2,r2,r3
  81b03c:	10c00017 	ldw	r3,0(r2)
  81b040:	e0bff417 	ldw	r2,-48(fp)
  81b044:	1085883a 	add	r2,r2,r2
  81b048:	1085883a 	add	r2,r2,r2
  81b04c:	1009883a 	mov	r4,r2
  81b050:	e0bffd17 	ldw	r2,-12(fp)
  81b054:	1105883a 	add	r2,r2,r4
  81b058:	10800017 	ldw	r2,0(r2)
  81b05c:	1080000b 	ldhu	r2,0(r2)
  81b060:	e13ff617 	ldw	r4,-40(fp)
  81b064:	1104b03a 	or	r2,r2,r4
  81b068:	1880000d 	sth	r2,0(r3)
  81b06c:	e0bff417 	ldw	r2,-48(fp)
  81b070:	10800044 	addi	r2,r2,1
  81b074:	e0bff415 	stw	r2,-48(fp)
  81b078:	e0bffc17 	ldw	r2,-16(fp)
  81b07c:	10805c17 	ldw	r2,368(r2)
  81b080:	e0fff417 	ldw	r3,-48(fp)
  81b084:	18bfd616 	blt	r3,r2,81afe0 <__alt_mem_epcs_flash_controller_0+0xff811fe0>
  81b088:	e0bffc17 	ldw	r2,-16(fp)
  81b08c:	10800617 	ldw	r2,24(r2)
  81b090:	e0fff717 	ldw	r3,-36(fp)
  81b094:	10c00015 	stw	r3,0(r2)
  81b098:	e0bffc17 	ldw	r2,-16(fp)
  81b09c:	10800617 	ldw	r2,24(r2)
  81b0a0:	e0fff817 	ldw	r3,-32(fp)
  81b0a4:	10c00115 	stw	r3,4(r2)
  81b0a8:	e0bff517 	ldw	r2,-44(fp)
  81b0ac:	14400315 	stw	r17,12(r2)
  81b0b0:	e0bff517 	ldw	r2,-44(fp)
  81b0b4:	14000415 	stw	r16,16(r2)
  81b0b8:	e0bff517 	ldw	r2,-44(fp)
  81b0bc:	10800b17 	ldw	r2,44(r2)
  81b0c0:	10ffffc4 	addi	r3,r2,-1
  81b0c4:	e0bff517 	ldw	r2,-44(fp)
  81b0c8:	10c00b15 	stw	r3,44(r2)
  81b0cc:	00800044 	movi	r2,1
  81b0d0:	e6fffe04 	addi	sp,fp,-8
  81b0d4:	dfc00317 	ldw	ra,12(sp)
  81b0d8:	df000217 	ldw	fp,8(sp)
  81b0dc:	dc400117 	ldw	r17,4(sp)
  81b0e0:	dc000017 	ldw	r16,0(sp)
  81b0e4:	dec00404 	addi	sp,sp,16
  81b0e8:	f800283a 	ret

0081b0ec <decode_mcu_AC_refine>:
  81b0ec:	deffa604 	addi	sp,sp,-360
  81b0f0:	dfc05915 	stw	ra,356(sp)
  81b0f4:	df005815 	stw	fp,352(sp)
  81b0f8:	dd005715 	stw	r20,348(sp)
  81b0fc:	dcc05615 	stw	r19,344(sp)
  81b100:	dc805515 	stw	r18,340(sp)
  81b104:	dc405415 	stw	r17,336(sp)
  81b108:	dc005315 	stw	r16,332(sp)
  81b10c:	df005804 	addi	fp,sp,352
  81b110:	e13ff915 	stw	r4,-28(fp)
  81b114:	e17ffa15 	stw	r5,-24(fp)
  81b118:	e0bff917 	ldw	r2,-28(fp)
  81b11c:	10807517 	ldw	r2,468(r2)
  81b120:	e0bfab15 	stw	r2,-340(fp)
  81b124:	e0bff917 	ldw	r2,-28(fp)
  81b128:	10804617 	ldw	r2,280(r2)
  81b12c:	10000826 	beq	r2,zero,81b150 <decode_mcu_AC_refine+0x64>
  81b130:	e0bfab17 	ldw	r2,-340(fp)
  81b134:	10800b17 	ldw	r2,44(r2)
  81b138:	1000051e 	bne	r2,zero,81b150 <decode_mcu_AC_refine+0x64>
  81b13c:	e13ff917 	ldw	r4,-28(fp)
  81b140:	081a6b00 	call	81a6b0 <process_restart>
  81b144:	1000021e 	bne	r2,zero,81b150 <decode_mcu_AC_refine+0x64>
  81b148:	0005883a 	mov	r2,zero
  81b14c:	00017d06 	br	81b744 <decode_mcu_AC_refine+0x658>
  81b150:	e0bfab17 	ldw	r2,-340(fp)
  81b154:	10800a17 	ldw	r2,40(r2)
  81b158:	1001561e 	bne	r2,zero,81b6b4 <decode_mcu_AC_refine+0x5c8>
  81b15c:	e0bff917 	ldw	r2,-28(fp)
  81b160:	10806817 	ldw	r2,416(r2)
  81b164:	e0bfac15 	stw	r2,-336(fp)
  81b168:	e0bff917 	ldw	r2,-28(fp)
  81b16c:	10806a17 	ldw	r2,424(r2)
  81b170:	00c00044 	movi	r3,1
  81b174:	1884983a 	sll	r2,r3,r2
  81b178:	e0bfad15 	stw	r2,-332(fp)
  81b17c:	e0bff917 	ldw	r2,-28(fp)
  81b180:	10806a17 	ldw	r2,424(r2)
  81b184:	00ffffc4 	movi	r3,-1
  81b188:	1884983a 	sll	r2,r3,r2
  81b18c:	e0bfae15 	stw	r2,-328(fp)
  81b190:	e0bff917 	ldw	r2,-28(fp)
  81b194:	10806c17 	ldw	r2,432(r2)
  81b198:	e0bfaf15 	stw	r2,-324(fp)
  81b19c:	e0bff917 	ldw	r2,-28(fp)
  81b1a0:	e0bfb815 	stw	r2,-288(fp)
  81b1a4:	e0bff917 	ldw	r2,-28(fp)
  81b1a8:	10800617 	ldw	r2,24(r2)
  81b1ac:	10800017 	ldw	r2,0(r2)
  81b1b0:	e0bfb415 	stw	r2,-304(fp)
  81b1b4:	e0bff917 	ldw	r2,-28(fp)
  81b1b8:	10800617 	ldw	r2,24(r2)
  81b1bc:	10800117 	ldw	r2,4(r2)
  81b1c0:	e0bfb515 	stw	r2,-300(fp)
  81b1c4:	e0bfab17 	ldw	r2,-340(fp)
  81b1c8:	14400317 	ldw	r17,12(r2)
  81b1cc:	e0bfab17 	ldw	r2,-340(fp)
  81b1d0:	14000417 	ldw	r16,16(r2)
  81b1d4:	e0bfab17 	ldw	r2,-340(fp)
  81b1d8:	10800517 	ldw	r2,20(r2)
  81b1dc:	e0bfa915 	stw	r2,-348(fp)
  81b1e0:	e0bffa17 	ldw	r2,-24(fp)
  81b1e4:	10800017 	ldw	r2,0(r2)
  81b1e8:	e0bfb015 	stw	r2,-320(fp)
  81b1ec:	e0bfab17 	ldw	r2,-340(fp)
  81b1f0:	10801017 	ldw	r2,64(r2)
  81b1f4:	e0bfb115 	stw	r2,-316(fp)
  81b1f8:	e03faa15 	stw	zero,-344(fp)
  81b1fc:	e0bff917 	ldw	r2,-28(fp)
  81b200:	14c06717 	ldw	r19,412(r2)
  81b204:	e0bfa917 	ldw	r2,-348(fp)
  81b208:	1000d31e 	bne	r2,zero,81b558 <decode_mcu_AC_refine+0x46c>
  81b20c:	80800208 	cmpgei	r2,r16,8
  81b210:	10000d1e 	bne	r2,zero,81b248 <decode_mcu_AC_refine+0x15c>
  81b214:	e0bfb404 	addi	r2,fp,-304
  81b218:	000f883a 	mov	r7,zero
  81b21c:	800d883a 	mov	r6,r16
  81b220:	880b883a 	mov	r5,r17
  81b224:	1009883a 	mov	r4,r2
  81b228:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81b22c:	10012826 	beq	r2,zero,81b6d0 <decode_mcu_AC_refine+0x5e4>
  81b230:	e47fb617 	ldw	r17,-296(fp)
  81b234:	e43fb717 	ldw	r16,-292(fp)
  81b238:	80800208 	cmpgei	r2,r16,8
  81b23c:	1000021e 	bne	r2,zero,81b248 <decode_mcu_AC_refine+0x15c>
  81b240:	04800044 	movi	r18,1
  81b244:	00001306 	br	81b294 <decode_mcu_AC_refine+0x1a8>
  81b248:	80bffe04 	addi	r2,r16,-8
  81b24c:	8887d83a 	sra	r3,r17,r2
  81b250:	00803fc4 	movi	r2,255
  81b254:	18a8703a 	and	r20,r3,r2
  81b258:	e0ffb117 	ldw	r3,-316(fp)
  81b25c:	a0800904 	addi	r2,r20,36
  81b260:	1085883a 	add	r2,r2,r2
  81b264:	1085883a 	add	r2,r2,r2
  81b268:	1885883a 	add	r2,r3,r2
  81b26c:	14800017 	ldw	r18,0(r2)
  81b270:	90000726 	beq	r18,zero,81b290 <decode_mcu_AC_refine+0x1a4>
  81b274:	84a1c83a 	sub	r16,r16,r18
  81b278:	e0bfb117 	ldw	r2,-316(fp)
  81b27c:	1505883a 	add	r2,r2,r20
  81b280:	10812404 	addi	r2,r2,1168
  81b284:	10800003 	ldbu	r2,0(r2)
  81b288:	15003fcc 	andi	r20,r2,255
  81b28c:	00000c06 	br	81b2c0 <decode_mcu_AC_refine+0x1d4>
  81b290:	04800244 	movi	r18,9
  81b294:	e0bfb404 	addi	r2,fp,-304
  81b298:	dc800015 	stw	r18,0(sp)
  81b29c:	e1ffb117 	ldw	r7,-316(fp)
  81b2a0:	800d883a 	mov	r6,r16
  81b2a4:	880b883a 	mov	r5,r17
  81b2a8:	1009883a 	mov	r4,r2
  81b2ac:	081a4ac0 	call	81a4ac <jpeg_huff_decode>
  81b2b0:	1029883a 	mov	r20,r2
  81b2b4:	a0010816 	blt	r20,zero,81b6d8 <decode_mcu_AC_refine+0x5ec>
  81b2b8:	e47fb617 	ldw	r17,-296(fp)
  81b2bc:	e43fb717 	ldw	r16,-292(fp)
  81b2c0:	a025d13a 	srai	r18,r20,4
  81b2c4:	a50003cc 	andi	r20,r20,15
  81b2c8:	a0001f26 	beq	r20,zero,81b348 <decode_mcu_AC_refine+0x25c>
  81b2cc:	a0800060 	cmpeqi	r2,r20,1
  81b2d0:	10000a1e 	bne	r2,zero,81b2fc <decode_mcu_AC_refine+0x210>
  81b2d4:	e0bff917 	ldw	r2,-28(fp)
  81b2d8:	10800017 	ldw	r2,0(r2)
  81b2dc:	00c01e44 	movi	r3,121
  81b2e0:	10c00515 	stw	r3,20(r2)
  81b2e4:	e0bff917 	ldw	r2,-28(fp)
  81b2e8:	10800017 	ldw	r2,0(r2)
  81b2ec:	10800117 	ldw	r2,4(r2)
  81b2f0:	017fffc4 	movi	r5,-1
  81b2f4:	e13ff917 	ldw	r4,-28(fp)
  81b2f8:	103ee83a 	callr	r2
  81b2fc:	04000916 	blt	zero,r16,81b324 <decode_mcu_AC_refine+0x238>
  81b300:	e0bfb404 	addi	r2,fp,-304
  81b304:	01c00044 	movi	r7,1
  81b308:	800d883a 	mov	r6,r16
  81b30c:	880b883a 	mov	r5,r17
  81b310:	1009883a 	mov	r4,r2
  81b314:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81b318:	1000f126 	beq	r2,zero,81b6e0 <decode_mcu_AC_refine+0x5f4>
  81b31c:	e47fb617 	ldw	r17,-296(fp)
  81b320:	e43fb717 	ldw	r16,-292(fp)
  81b324:	843fffc4 	addi	r16,r16,-1
  81b328:	8c07d83a 	sra	r3,r17,r16
  81b32c:	00800044 	movi	r2,1
  81b330:	1884703a 	and	r2,r3,r2
  81b334:	10000226 	beq	r2,zero,81b340 <decode_mcu_AC_refine+0x254>
  81b338:	e53fad17 	ldw	r20,-332(fp)
  81b33c:	00002006 	br	81b3c0 <decode_mcu_AC_refine+0x2d4>
  81b340:	e53fae17 	ldw	r20,-328(fp)
  81b344:	00001e06 	br	81b3c0 <decode_mcu_AC_refine+0x2d4>
  81b348:	908003e0 	cmpeqi	r2,r18,15
  81b34c:	10001c1e 	bne	r2,zero,81b3c0 <decode_mcu_AC_refine+0x2d4>
  81b350:	00800044 	movi	r2,1
  81b354:	1484983a 	sll	r2,r2,r18
  81b358:	e0bfa915 	stw	r2,-348(fp)
  81b35c:	90007d26 	beq	r18,zero,81b554 <decode_mcu_AC_refine+0x468>
  81b360:	8480090e 	bge	r16,r18,81b388 <decode_mcu_AC_refine+0x29c>
  81b364:	e0bfb404 	addi	r2,fp,-304
  81b368:	900f883a 	mov	r7,r18
  81b36c:	800d883a 	mov	r6,r16
  81b370:	880b883a 	mov	r5,r17
  81b374:	1009883a 	mov	r4,r2
  81b378:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81b37c:	1000da26 	beq	r2,zero,81b6e8 <decode_mcu_AC_refine+0x5fc>
  81b380:	e47fb617 	ldw	r17,-296(fp)
  81b384:	e43fb717 	ldw	r16,-292(fp)
  81b388:	84a1c83a 	sub	r16,r16,r18
  81b38c:	8c09d83a 	sra	r4,r17,r16
  81b390:	008021b4 	movhi	r2,134
  81b394:	10a53104 	addi	r2,r2,-27452
  81b398:	9487883a 	add	r3,r18,r18
  81b39c:	18c7883a 	add	r3,r3,r3
  81b3a0:	10c5883a 	add	r2,r2,r3
  81b3a4:	10800017 	ldw	r2,0(r2)
  81b3a8:	20a4703a 	and	r18,r4,r2
  81b3ac:	9007883a 	mov	r3,r18
  81b3b0:	e0bfa917 	ldw	r2,-348(fp)
  81b3b4:	10c5883a 	add	r2,r2,r3
  81b3b8:	e0bfa915 	stw	r2,-348(fp)
  81b3bc:	00006506 	br	81b554 <decode_mcu_AC_refine+0x468>
  81b3c0:	9805883a 	mov	r2,r19
  81b3c4:	1085883a 	add	r2,r2,r2
  81b3c8:	1085883a 	add	r2,r2,r2
  81b3cc:	1007883a 	mov	r3,r2
  81b3d0:	e0bfaf17 	ldw	r2,-324(fp)
  81b3d4:	10c5883a 	add	r2,r2,r3
  81b3d8:	10800017 	ldw	r2,0(r2)
  81b3dc:	1085883a 	add	r2,r2,r2
  81b3e0:	1007883a 	mov	r3,r2
  81b3e4:	e0bfb017 	ldw	r2,-320(fp)
  81b3e8:	10c5883a 	add	r2,r2,r3
  81b3ec:	e0bfb215 	stw	r2,-312(fp)
  81b3f0:	e0bfb217 	ldw	r2,-312(fp)
  81b3f4:	1080000b 	ldhu	r2,0(r2)
  81b3f8:	10bfffcc 	andi	r2,r2,65535
  81b3fc:	10a0001c 	xori	r2,r2,32768
  81b400:	10a00004 	addi	r2,r2,-32768
  81b404:	10002f26 	beq	r2,zero,81b4c4 <decode_mcu_AC_refine+0x3d8>
  81b408:	04000916 	blt	zero,r16,81b430 <decode_mcu_AC_refine+0x344>
  81b40c:	e0bfb404 	addi	r2,fp,-304
  81b410:	01c00044 	movi	r7,1
  81b414:	800d883a 	mov	r6,r16
  81b418:	880b883a 	mov	r5,r17
  81b41c:	1009883a 	mov	r4,r2
  81b420:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81b424:	1000b226 	beq	r2,zero,81b6f0 <decode_mcu_AC_refine+0x604>
  81b428:	e47fb617 	ldw	r17,-296(fp)
  81b42c:	e43fb717 	ldw	r16,-292(fp)
  81b430:	843fffc4 	addi	r16,r16,-1
  81b434:	8c07d83a 	sra	r3,r17,r16
  81b438:	00800044 	movi	r2,1
  81b43c:	1884703a 	and	r2,r3,r2
  81b440:	10002226 	beq	r2,zero,81b4cc <decode_mcu_AC_refine+0x3e0>
  81b444:	e0bfb217 	ldw	r2,-312(fp)
  81b448:	1080000b 	ldhu	r2,0(r2)
  81b44c:	10ffffcc 	andi	r3,r2,65535
  81b450:	18e0001c 	xori	r3,r3,32768
  81b454:	18e00004 	addi	r3,r3,-32768
  81b458:	e0bfad17 	ldw	r2,-332(fp)
  81b45c:	1884703a 	and	r2,r3,r2
  81b460:	10001a1e 	bne	r2,zero,81b4cc <decode_mcu_AC_refine+0x3e0>
  81b464:	e0bfb217 	ldw	r2,-312(fp)
  81b468:	1080000b 	ldhu	r2,0(r2)
  81b46c:	10bfffcc 	andi	r2,r2,65535
  81b470:	10a0001c 	xori	r2,r2,32768
  81b474:	10a00004 	addi	r2,r2,-32768
  81b478:	10000916 	blt	r2,zero,81b4a0 <decode_mcu_AC_refine+0x3b4>
  81b47c:	e0bfb217 	ldw	r2,-312(fp)
  81b480:	1080000b 	ldhu	r2,0(r2)
  81b484:	1007883a 	mov	r3,r2
  81b488:	e0bfad17 	ldw	r2,-332(fp)
  81b48c:	1885883a 	add	r2,r3,r2
  81b490:	1007883a 	mov	r3,r2
  81b494:	e0bfb217 	ldw	r2,-312(fp)
  81b498:	10c0000d 	sth	r3,0(r2)
  81b49c:	00000b06 	br	81b4cc <decode_mcu_AC_refine+0x3e0>
  81b4a0:	e0bfb217 	ldw	r2,-312(fp)
  81b4a4:	1080000b 	ldhu	r2,0(r2)
  81b4a8:	1007883a 	mov	r3,r2
  81b4ac:	e0bfae17 	ldw	r2,-328(fp)
  81b4b0:	1885883a 	add	r2,r3,r2
  81b4b4:	1007883a 	mov	r3,r2
  81b4b8:	e0bfb217 	ldw	r2,-312(fp)
  81b4bc:	10c0000d 	sth	r3,0(r2)
  81b4c0:	00000206 	br	81b4cc <decode_mcu_AC_refine+0x3e0>
  81b4c4:	94bfffc4 	addi	r18,r18,-1
  81b4c8:	90000416 	blt	r18,zero,81b4dc <decode_mcu_AC_refine+0x3f0>
  81b4cc:	9cc00044 	addi	r19,r19,1
  81b4d0:	e0bfac17 	ldw	r2,-336(fp)
  81b4d4:	14ffba0e 	bge	r2,r19,81b3c0 <__alt_mem_epcs_flash_controller_0+0xff8123c0>
  81b4d8:	00000106 	br	81b4e0 <decode_mcu_AC_refine+0x3f4>
  81b4dc:	0001883a 	nop
  81b4e0:	a0001826 	beq	r20,zero,81b544 <decode_mcu_AC_refine+0x458>
  81b4e4:	9805883a 	mov	r2,r19
  81b4e8:	1085883a 	add	r2,r2,r2
  81b4ec:	1085883a 	add	r2,r2,r2
  81b4f0:	1007883a 	mov	r3,r2
  81b4f4:	e0bfaf17 	ldw	r2,-324(fp)
  81b4f8:	10c5883a 	add	r2,r2,r3
  81b4fc:	10800017 	ldw	r2,0(r2)
  81b500:	e0bfb315 	stw	r2,-308(fp)
  81b504:	a009883a 	mov	r4,r20
  81b508:	e0ffb017 	ldw	r3,-320(fp)
  81b50c:	e0bfb317 	ldw	r2,-308(fp)
  81b510:	1085883a 	add	r2,r2,r2
  81b514:	1885883a 	add	r2,r3,r2
  81b518:	1100000d 	sth	r4,0(r2)
  81b51c:	e0bfaa17 	ldw	r2,-344(fp)
  81b520:	10c00044 	addi	r3,r2,1
  81b524:	e0ffaa15 	stw	r3,-344(fp)
  81b528:	1085883a 	add	r2,r2,r2
  81b52c:	1085883a 	add	r2,r2,r2
  81b530:	e0ffa904 	addi	r3,fp,-348
  81b534:	1885883a 	add	r2,r3,r2
  81b538:	10801004 	addi	r2,r2,64
  81b53c:	e0ffb317 	ldw	r3,-308(fp)
  81b540:	10c00015 	stw	r3,0(r2)
  81b544:	9cc00044 	addi	r19,r19,1
  81b548:	e0bfac17 	ldw	r2,-336(fp)
  81b54c:	14ff2f0e 	bge	r2,r19,81b20c <__alt_mem_epcs_flash_controller_0+0xff81220c>
  81b550:	00000106 	br	81b558 <decode_mcu_AC_refine+0x46c>
  81b554:	0001883a 	nop
  81b558:	e0bfa917 	ldw	r2,-348(fp)
  81b55c:	10004626 	beq	r2,zero,81b678 <decode_mcu_AC_refine+0x58c>
  81b560:	9805883a 	mov	r2,r19
  81b564:	1085883a 	add	r2,r2,r2
  81b568:	1085883a 	add	r2,r2,r2
  81b56c:	1007883a 	mov	r3,r2
  81b570:	e0bfaf17 	ldw	r2,-324(fp)
  81b574:	10c5883a 	add	r2,r2,r3
  81b578:	10800017 	ldw	r2,0(r2)
  81b57c:	1085883a 	add	r2,r2,r2
  81b580:	1007883a 	mov	r3,r2
  81b584:	e0bfb017 	ldw	r2,-320(fp)
  81b588:	10c5883a 	add	r2,r2,r3
  81b58c:	e0bfb215 	stw	r2,-312(fp)
  81b590:	e0bfb217 	ldw	r2,-312(fp)
  81b594:	1080000b 	ldhu	r2,0(r2)
  81b598:	10bfffcc 	andi	r2,r2,65535
  81b59c:	10a0001c 	xori	r2,r2,32768
  81b5a0:	10a00004 	addi	r2,r2,-32768
  81b5a4:	10002e26 	beq	r2,zero,81b660 <decode_mcu_AC_refine+0x574>
  81b5a8:	04000916 	blt	zero,r16,81b5d0 <decode_mcu_AC_refine+0x4e4>
  81b5ac:	e0bfb404 	addi	r2,fp,-304
  81b5b0:	01c00044 	movi	r7,1
  81b5b4:	800d883a 	mov	r6,r16
  81b5b8:	880b883a 	mov	r5,r17
  81b5bc:	1009883a 	mov	r4,r2
  81b5c0:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81b5c4:	10004c26 	beq	r2,zero,81b6f8 <decode_mcu_AC_refine+0x60c>
  81b5c8:	e47fb617 	ldw	r17,-296(fp)
  81b5cc:	e43fb717 	ldw	r16,-292(fp)
  81b5d0:	843fffc4 	addi	r16,r16,-1
  81b5d4:	8c07d83a 	sra	r3,r17,r16
  81b5d8:	00800044 	movi	r2,1
  81b5dc:	1884703a 	and	r2,r3,r2
  81b5e0:	10001f26 	beq	r2,zero,81b660 <decode_mcu_AC_refine+0x574>
  81b5e4:	e0bfb217 	ldw	r2,-312(fp)
  81b5e8:	1080000b 	ldhu	r2,0(r2)
  81b5ec:	10ffffcc 	andi	r3,r2,65535
  81b5f0:	18e0001c 	xori	r3,r3,32768
  81b5f4:	18e00004 	addi	r3,r3,-32768
  81b5f8:	e0bfad17 	ldw	r2,-332(fp)
  81b5fc:	1884703a 	and	r2,r3,r2
  81b600:	1000171e 	bne	r2,zero,81b660 <decode_mcu_AC_refine+0x574>
  81b604:	e0bfb217 	ldw	r2,-312(fp)
  81b608:	1080000b 	ldhu	r2,0(r2)
  81b60c:	10bfffcc 	andi	r2,r2,65535
  81b610:	10a0001c 	xori	r2,r2,32768
  81b614:	10a00004 	addi	r2,r2,-32768
  81b618:	10000916 	blt	r2,zero,81b640 <decode_mcu_AC_refine+0x554>
  81b61c:	e0bfb217 	ldw	r2,-312(fp)
  81b620:	1080000b 	ldhu	r2,0(r2)
  81b624:	1007883a 	mov	r3,r2
  81b628:	e0bfad17 	ldw	r2,-332(fp)
  81b62c:	1885883a 	add	r2,r3,r2
  81b630:	1007883a 	mov	r3,r2
  81b634:	e0bfb217 	ldw	r2,-312(fp)
  81b638:	10c0000d 	sth	r3,0(r2)
  81b63c:	00000806 	br	81b660 <decode_mcu_AC_refine+0x574>
  81b640:	e0bfb217 	ldw	r2,-312(fp)
  81b644:	1080000b 	ldhu	r2,0(r2)
  81b648:	1007883a 	mov	r3,r2
  81b64c:	e0bfae17 	ldw	r2,-328(fp)
  81b650:	1885883a 	add	r2,r3,r2
  81b654:	1007883a 	mov	r3,r2
  81b658:	e0bfb217 	ldw	r2,-312(fp)
  81b65c:	10c0000d 	sth	r3,0(r2)
  81b660:	9cc00044 	addi	r19,r19,1
  81b664:	e0bfac17 	ldw	r2,-336(fp)
  81b668:	14ffbd0e 	bge	r2,r19,81b560 <__alt_mem_epcs_flash_controller_0+0xff812560>
  81b66c:	e0bfa917 	ldw	r2,-348(fp)
  81b670:	10bfffc4 	addi	r2,r2,-1
  81b674:	e0bfa915 	stw	r2,-348(fp)
  81b678:	e0bff917 	ldw	r2,-28(fp)
  81b67c:	10800617 	ldw	r2,24(r2)
  81b680:	e0ffb417 	ldw	r3,-304(fp)
  81b684:	10c00015 	stw	r3,0(r2)
  81b688:	e0bff917 	ldw	r2,-28(fp)
  81b68c:	10800617 	ldw	r2,24(r2)
  81b690:	e0ffb517 	ldw	r3,-300(fp)
  81b694:	10c00115 	stw	r3,4(r2)
  81b698:	e0bfab17 	ldw	r2,-340(fp)
  81b69c:	14400315 	stw	r17,12(r2)
  81b6a0:	e0bfab17 	ldw	r2,-340(fp)
  81b6a4:	14000415 	stw	r16,16(r2)
  81b6a8:	e0bfab17 	ldw	r2,-340(fp)
  81b6ac:	e0ffa917 	ldw	r3,-348(fp)
  81b6b0:	10c00515 	stw	r3,20(r2)
  81b6b4:	e0bfab17 	ldw	r2,-340(fp)
  81b6b8:	10800b17 	ldw	r2,44(r2)
  81b6bc:	10ffffc4 	addi	r3,r2,-1
  81b6c0:	e0bfab17 	ldw	r2,-340(fp)
  81b6c4:	10c00b15 	stw	r3,44(r2)
  81b6c8:	00800044 	movi	r2,1
  81b6cc:	00001d06 	br	81b744 <decode_mcu_AC_refine+0x658>
  81b6d0:	0001883a 	nop
  81b6d4:	00001806 	br	81b738 <decode_mcu_AC_refine+0x64c>
  81b6d8:	0001883a 	nop
  81b6dc:	00001606 	br	81b738 <decode_mcu_AC_refine+0x64c>
  81b6e0:	0001883a 	nop
  81b6e4:	00001406 	br	81b738 <decode_mcu_AC_refine+0x64c>
  81b6e8:	0001883a 	nop
  81b6ec:	00001206 	br	81b738 <decode_mcu_AC_refine+0x64c>
  81b6f0:	0001883a 	nop
  81b6f4:	00001006 	br	81b738 <decode_mcu_AC_refine+0x64c>
  81b6f8:	0001883a 	nop
  81b6fc:	00000e06 	br	81b738 <decode_mcu_AC_refine+0x64c>
  81b700:	e0bfaa17 	ldw	r2,-344(fp)
  81b704:	10bfffc4 	addi	r2,r2,-1
  81b708:	e0bfaa15 	stw	r2,-344(fp)
  81b70c:	e0bfaa17 	ldw	r2,-344(fp)
  81b710:	1085883a 	add	r2,r2,r2
  81b714:	1085883a 	add	r2,r2,r2
  81b718:	e0ffa904 	addi	r3,fp,-348
  81b71c:	1885883a 	add	r2,r3,r2
  81b720:	10801004 	addi	r2,r2,64
  81b724:	10800017 	ldw	r2,0(r2)
  81b728:	e0ffb017 	ldw	r3,-320(fp)
  81b72c:	1085883a 	add	r2,r2,r2
  81b730:	1885883a 	add	r2,r3,r2
  81b734:	1000000d 	sth	zero,0(r2)
  81b738:	e0bfaa17 	ldw	r2,-344(fp)
  81b73c:	103ff01e 	bne	r2,zero,81b700 <__alt_mem_epcs_flash_controller_0+0xff812700>
  81b740:	0005883a 	mov	r2,zero
  81b744:	e6fffb04 	addi	sp,fp,-20
  81b748:	dfc00617 	ldw	ra,24(sp)
  81b74c:	df000517 	ldw	fp,20(sp)
  81b750:	dd000417 	ldw	r20,16(sp)
  81b754:	dcc00317 	ldw	r19,12(sp)
  81b758:	dc800217 	ldw	r18,8(sp)
  81b75c:	dc400117 	ldw	r17,4(sp)
  81b760:	dc000017 	ldw	r16,0(sp)
  81b764:	dec00704 	addi	sp,sp,28
  81b768:	f800283a 	ret

0081b76c <decode_mcu_sub>:
  81b76c:	deffe404 	addi	sp,sp,-112
  81b770:	dfc01b15 	stw	ra,108(sp)
  81b774:	df001a15 	stw	fp,104(sp)
  81b778:	dd001915 	stw	r20,100(sp)
  81b77c:	dcc01815 	stw	r19,96(sp)
  81b780:	dc801715 	stw	r18,92(sp)
  81b784:	dc401615 	stw	r17,88(sp)
  81b788:	dc001515 	stw	r16,84(sp)
  81b78c:	df001a04 	addi	fp,sp,104
  81b790:	e13ff915 	stw	r4,-28(fp)
  81b794:	e17ffa15 	stw	r5,-24(fp)
  81b798:	e0bff917 	ldw	r2,-28(fp)
  81b79c:	10807517 	ldw	r2,468(r2)
  81b7a0:	e0bfe815 	stw	r2,-96(fp)
  81b7a4:	e0bff917 	ldw	r2,-28(fp)
  81b7a8:	10804617 	ldw	r2,280(r2)
  81b7ac:	10000826 	beq	r2,zero,81b7d0 <decode_mcu_sub+0x64>
  81b7b0:	e0bfe817 	ldw	r2,-96(fp)
  81b7b4:	10800b17 	ldw	r2,44(r2)
  81b7b8:	1000051e 	bne	r2,zero,81b7d0 <decode_mcu_sub+0x64>
  81b7bc:	e13ff917 	ldw	r4,-28(fp)
  81b7c0:	081a6b00 	call	81a6b0 <process_restart>
  81b7c4:	1000021e 	bne	r2,zero,81b7d0 <decode_mcu_sub+0x64>
  81b7c8:	0005883a 	mov	r2,zero
  81b7cc:	0001ad06 	br	81be84 <decode_mcu_sub+0x718>
  81b7d0:	e0bfe817 	ldw	r2,-96(fp)
  81b7d4:	10800a17 	ldw	r2,40(r2)
  81b7d8:	1001a41e 	bne	r2,zero,81be6c <decode_mcu_sub+0x700>
  81b7dc:	e0bff917 	ldw	r2,-28(fp)
  81b7e0:	10806c17 	ldw	r2,432(r2)
  81b7e4:	e0bfe915 	stw	r2,-92(fp)
  81b7e8:	e0bff917 	ldw	r2,-28(fp)
  81b7ec:	10806d17 	ldw	r2,436(r2)
  81b7f0:	e0bfea15 	stw	r2,-88(fp)
  81b7f4:	e0bff917 	ldw	r2,-28(fp)
  81b7f8:	e0bff315 	stw	r2,-52(fp)
  81b7fc:	e0bff917 	ldw	r2,-28(fp)
  81b800:	10800617 	ldw	r2,24(r2)
  81b804:	10800017 	ldw	r2,0(r2)
  81b808:	e0bfef15 	stw	r2,-68(fp)
  81b80c:	e0bff917 	ldw	r2,-28(fp)
  81b810:	10800617 	ldw	r2,24(r2)
  81b814:	10800117 	ldw	r2,4(r2)
  81b818:	e0bff015 	stw	r2,-64(fp)
  81b81c:	e0bfe817 	ldw	r2,-96(fp)
  81b820:	14800317 	ldw	r18,12(r2)
  81b824:	e0bfe817 	ldw	r2,-96(fp)
  81b828:	14000417 	ldw	r16,16(r2)
  81b82c:	e0bfe817 	ldw	r2,-96(fp)
  81b830:	10c00517 	ldw	r3,20(r2)
  81b834:	e0fff415 	stw	r3,-48(fp)
  81b838:	10c00617 	ldw	r3,24(r2)
  81b83c:	e0fff515 	stw	r3,-44(fp)
  81b840:	10c00717 	ldw	r3,28(r2)
  81b844:	e0fff615 	stw	r3,-40(fp)
  81b848:	10c00817 	ldw	r3,32(r2)
  81b84c:	e0fff715 	stw	r3,-36(fp)
  81b850:	10800917 	ldw	r2,36(r2)
  81b854:	e0bff815 	stw	r2,-32(fp)
  81b858:	e03fe715 	stw	zero,-100(fp)
  81b85c:	00016806 	br	81be00 <decode_mcu_sub+0x694>
  81b860:	e0bfe717 	ldw	r2,-100(fp)
  81b864:	1085883a 	add	r2,r2,r2
  81b868:	1085883a 	add	r2,r2,r2
  81b86c:	1007883a 	mov	r3,r2
  81b870:	e0bffa17 	ldw	r2,-24(fp)
  81b874:	10c5883a 	add	r2,r2,r3
  81b878:	10800017 	ldw	r2,0(r2)
  81b87c:	e0bfeb15 	stw	r2,-84(fp)
  81b880:	e0ffe817 	ldw	r3,-96(fp)
  81b884:	e0bfe717 	ldw	r2,-100(fp)
  81b888:	10800644 	addi	r2,r2,25
  81b88c:	1085883a 	add	r2,r2,r2
  81b890:	1085883a 	add	r2,r2,r2
  81b894:	1885883a 	add	r2,r3,r2
  81b898:	10800017 	ldw	r2,0(r2)
  81b89c:	e0bfec15 	stw	r2,-80(fp)
  81b8a0:	80800208 	cmpgei	r2,r16,8
  81b8a4:	10000f1e 	bne	r2,zero,81b8e4 <decode_mcu_sub+0x178>
  81b8a8:	e0bfef04 	addi	r2,fp,-68
  81b8ac:	000f883a 	mov	r7,zero
  81b8b0:	800d883a 	mov	r6,r16
  81b8b4:	900b883a 	mov	r5,r18
  81b8b8:	1009883a 	mov	r4,r2
  81b8bc:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81b8c0:	1000021e 	bne	r2,zero,81b8cc <decode_mcu_sub+0x160>
  81b8c4:	0005883a 	mov	r2,zero
  81b8c8:	00016e06 	br	81be84 <decode_mcu_sub+0x718>
  81b8cc:	e4bff117 	ldw	r18,-60(fp)
  81b8d0:	e43ff217 	ldw	r16,-56(fp)
  81b8d4:	80800208 	cmpgei	r2,r16,8
  81b8d8:	1000021e 	bne	r2,zero,81b8e4 <decode_mcu_sub+0x178>
  81b8dc:	04400044 	movi	r17,1
  81b8e0:	00001306 	br	81b930 <decode_mcu_sub+0x1c4>
  81b8e4:	80bffe04 	addi	r2,r16,-8
  81b8e8:	9087d83a 	sra	r3,r18,r2
  81b8ec:	00803fc4 	movi	r2,255
  81b8f0:	18a6703a 	and	r19,r3,r2
  81b8f4:	e0ffec17 	ldw	r3,-80(fp)
  81b8f8:	98800904 	addi	r2,r19,36
  81b8fc:	1085883a 	add	r2,r2,r2
  81b900:	1085883a 	add	r2,r2,r2
  81b904:	1885883a 	add	r2,r3,r2
  81b908:	14400017 	ldw	r17,0(r2)
  81b90c:	88000726 	beq	r17,zero,81b92c <decode_mcu_sub+0x1c0>
  81b910:	8461c83a 	sub	r16,r16,r17
  81b914:	e0bfec17 	ldw	r2,-80(fp)
  81b918:	14c5883a 	add	r2,r2,r19
  81b91c:	10812404 	addi	r2,r2,1168
  81b920:	10800003 	ldbu	r2,0(r2)
  81b924:	14403fcc 	andi	r17,r2,255
  81b928:	00000e06 	br	81b964 <decode_mcu_sub+0x1f8>
  81b92c:	04400244 	movi	r17,9
  81b930:	e0bfef04 	addi	r2,fp,-68
  81b934:	dc400015 	stw	r17,0(sp)
  81b938:	e1ffec17 	ldw	r7,-80(fp)
  81b93c:	800d883a 	mov	r6,r16
  81b940:	900b883a 	mov	r5,r18
  81b944:	1009883a 	mov	r4,r2
  81b948:	081a4ac0 	call	81a4ac <jpeg_huff_decode>
  81b94c:	1023883a 	mov	r17,r2
  81b950:	8800020e 	bge	r17,zero,81b95c <decode_mcu_sub+0x1f0>
  81b954:	0005883a 	mov	r2,zero
  81b958:	00014a06 	br	81be84 <decode_mcu_sub+0x718>
  81b95c:	e4bff117 	ldw	r18,-60(fp)
  81b960:	e43ff217 	ldw	r16,-56(fp)
  81b964:	e0ffe817 	ldw	r3,-96(fp)
  81b968:	e0bfe717 	ldw	r2,-100(fp)
  81b96c:	108008c4 	addi	r2,r2,35
  81b970:	1085883a 	add	r2,r2,r2
  81b974:	1085883a 	add	r2,r2,r2
  81b978:	1885883a 	add	r2,r3,r2
  81b97c:	10800017 	ldw	r2,0(r2)
  81b980:	e0bfec15 	stw	r2,-80(fp)
  81b984:	04c00044 	movi	r19,1
  81b988:	e0ffe817 	ldw	r3,-96(fp)
  81b98c:	e0bfe717 	ldw	r2,-100(fp)
  81b990:	10800b44 	addi	r2,r2,45
  81b994:	1085883a 	add	r2,r2,r2
  81b998:	1085883a 	add	r2,r2,r2
  81b99c:	1885883a 	add	r2,r3,r2
  81b9a0:	10800017 	ldw	r2,0(r2)
  81b9a4:	e0bfed15 	stw	r2,-76(fp)
  81b9a8:	e0bfed17 	ldw	r2,-76(fp)
  81b9ac:	1000b526 	beq	r2,zero,81bc84 <decode_mcu_sub+0x518>
  81b9b0:	88002726 	beq	r17,zero,81ba50 <decode_mcu_sub+0x2e4>
  81b9b4:	84400b0e 	bge	r16,r17,81b9e4 <decode_mcu_sub+0x278>
  81b9b8:	e0bfef04 	addi	r2,fp,-68
  81b9bc:	880f883a 	mov	r7,r17
  81b9c0:	800d883a 	mov	r6,r16
  81b9c4:	900b883a 	mov	r5,r18
  81b9c8:	1009883a 	mov	r4,r2
  81b9cc:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81b9d0:	1000021e 	bne	r2,zero,81b9dc <decode_mcu_sub+0x270>
  81b9d4:	0005883a 	mov	r2,zero
  81b9d8:	00012a06 	br	81be84 <decode_mcu_sub+0x718>
  81b9dc:	e4bff117 	ldw	r18,-60(fp)
  81b9e0:	e43ff217 	ldw	r16,-56(fp)
  81b9e4:	8461c83a 	sub	r16,r16,r17
  81b9e8:	9409d83a 	sra	r4,r18,r16
  81b9ec:	008021b4 	movhi	r2,134
  81b9f0:	10a53104 	addi	r2,r2,-27452
  81b9f4:	8c47883a 	add	r3,r17,r17
  81b9f8:	18c7883a 	add	r3,r3,r3
  81b9fc:	10c5883a 	add	r2,r2,r3
  81ba00:	10800017 	ldw	r2,0(r2)
  81ba04:	20a8703a 	and	r20,r4,r2
  81ba08:	88ffffc4 	addi	r3,r17,-1
  81ba0c:	008021b4 	movhi	r2,134
  81ba10:	10a53104 	addi	r2,r2,-27452
  81ba14:	18c7883a 	add	r3,r3,r3
  81ba18:	18c7883a 	add	r3,r3,r3
  81ba1c:	10c5883a 	add	r2,r2,r3
  81ba20:	10800017 	ldw	r2,0(r2)
  81ba24:	15000816 	blt	r2,r20,81ba48 <decode_mcu_sub+0x2dc>
  81ba28:	008021b4 	movhi	r2,134
  81ba2c:	10a53104 	addi	r2,r2,-27452
  81ba30:	8c47883a 	add	r3,r17,r17
  81ba34:	18c7883a 	add	r3,r3,r3
  81ba38:	10c5883a 	add	r2,r2,r3
  81ba3c:	10800017 	ldw	r2,0(r2)
  81ba40:	a085c83a 	sub	r2,r20,r2
  81ba44:	00000106 	br	81ba4c <decode_mcu_sub+0x2e0>
  81ba48:	a005883a 	mov	r2,r20
  81ba4c:	1023883a 	mov	r17,r2
  81ba50:	e0fff917 	ldw	r3,-28(fp)
  81ba54:	e0bfe717 	ldw	r2,-100(fp)
  81ba58:	10801744 	addi	r2,r2,93
  81ba5c:	1085883a 	add	r2,r2,r2
  81ba60:	1085883a 	add	r2,r2,r2
  81ba64:	1885883a 	add	r2,r3,r2
  81ba68:	10800017 	ldw	r2,0(r2)
  81ba6c:	e0bfee15 	stw	r2,-72(fp)
  81ba70:	e0bfee17 	ldw	r2,-72(fp)
  81ba74:	10800044 	addi	r2,r2,1
  81ba78:	1085883a 	add	r2,r2,r2
  81ba7c:	1085883a 	add	r2,r2,r2
  81ba80:	e0ffe704 	addi	r3,fp,-100
  81ba84:	1885883a 	add	r2,r3,r2
  81ba88:	10800d04 	addi	r2,r2,52
  81ba8c:	10800017 	ldw	r2,0(r2)
  81ba90:	88a3883a 	add	r17,r17,r2
  81ba94:	e0bfee17 	ldw	r2,-72(fp)
  81ba98:	10800044 	addi	r2,r2,1
  81ba9c:	1085883a 	add	r2,r2,r2
  81baa0:	1085883a 	add	r2,r2,r2
  81baa4:	e0ffe704 	addi	r3,fp,-100
  81baa8:	1885883a 	add	r2,r3,r2
  81baac:	10800d04 	addi	r2,r2,52
  81bab0:	14400015 	stw	r17,0(r2)
  81bab4:	8807883a 	mov	r3,r17
  81bab8:	e0bfeb17 	ldw	r2,-84(fp)
  81babc:	10c0000d 	sth	r3,0(r2)
  81bac0:	00006d06 	br	81bc78 <decode_mcu_sub+0x50c>
  81bac4:	80800208 	cmpgei	r2,r16,8
  81bac8:	10000f1e 	bne	r2,zero,81bb08 <decode_mcu_sub+0x39c>
  81bacc:	e0bfef04 	addi	r2,fp,-68
  81bad0:	000f883a 	mov	r7,zero
  81bad4:	800d883a 	mov	r6,r16
  81bad8:	900b883a 	mov	r5,r18
  81badc:	1009883a 	mov	r4,r2
  81bae0:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81bae4:	1000021e 	bne	r2,zero,81baf0 <decode_mcu_sub+0x384>
  81bae8:	0005883a 	mov	r2,zero
  81baec:	0000e506 	br	81be84 <decode_mcu_sub+0x718>
  81baf0:	e4bff117 	ldw	r18,-60(fp)
  81baf4:	e43ff217 	ldw	r16,-56(fp)
  81baf8:	80800208 	cmpgei	r2,r16,8
  81bafc:	1000021e 	bne	r2,zero,81bb08 <decode_mcu_sub+0x39c>
  81bb00:	04400044 	movi	r17,1
  81bb04:	00001306 	br	81bb54 <decode_mcu_sub+0x3e8>
  81bb08:	80bffe04 	addi	r2,r16,-8
  81bb0c:	9087d83a 	sra	r3,r18,r2
  81bb10:	00803fc4 	movi	r2,255
  81bb14:	18a8703a 	and	r20,r3,r2
  81bb18:	e0ffec17 	ldw	r3,-80(fp)
  81bb1c:	a0800904 	addi	r2,r20,36
  81bb20:	1085883a 	add	r2,r2,r2
  81bb24:	1085883a 	add	r2,r2,r2
  81bb28:	1885883a 	add	r2,r3,r2
  81bb2c:	14400017 	ldw	r17,0(r2)
  81bb30:	88000726 	beq	r17,zero,81bb50 <decode_mcu_sub+0x3e4>
  81bb34:	8461c83a 	sub	r16,r16,r17
  81bb38:	e0bfec17 	ldw	r2,-80(fp)
  81bb3c:	1505883a 	add	r2,r2,r20
  81bb40:	10812404 	addi	r2,r2,1168
  81bb44:	10800003 	ldbu	r2,0(r2)
  81bb48:	14403fcc 	andi	r17,r2,255
  81bb4c:	00000e06 	br	81bb88 <decode_mcu_sub+0x41c>
  81bb50:	04400244 	movi	r17,9
  81bb54:	e0bfef04 	addi	r2,fp,-68
  81bb58:	dc400015 	stw	r17,0(sp)
  81bb5c:	e1ffec17 	ldw	r7,-80(fp)
  81bb60:	800d883a 	mov	r6,r16
  81bb64:	900b883a 	mov	r5,r18
  81bb68:	1009883a 	mov	r4,r2
  81bb6c:	081a4ac0 	call	81a4ac <jpeg_huff_decode>
  81bb70:	1023883a 	mov	r17,r2
  81bb74:	8800020e 	bge	r17,zero,81bb80 <decode_mcu_sub+0x414>
  81bb78:	0005883a 	mov	r2,zero
  81bb7c:	0000c106 	br	81be84 <decode_mcu_sub+0x718>
  81bb80:	e4bff117 	ldw	r18,-60(fp)
  81bb84:	e43ff217 	ldw	r16,-56(fp)
  81bb88:	8829d13a 	srai	r20,r17,4
  81bb8c:	8c4003cc 	andi	r17,r17,15
  81bb90:	88003526 	beq	r17,zero,81bc68 <decode_mcu_sub+0x4fc>
  81bb94:	9d27883a 	add	r19,r19,r20
  81bb98:	84400b0e 	bge	r16,r17,81bbc8 <decode_mcu_sub+0x45c>
  81bb9c:	e0bfef04 	addi	r2,fp,-68
  81bba0:	880f883a 	mov	r7,r17
  81bba4:	800d883a 	mov	r6,r16
  81bba8:	900b883a 	mov	r5,r18
  81bbac:	1009883a 	mov	r4,r2
  81bbb0:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81bbb4:	1000021e 	bne	r2,zero,81bbc0 <decode_mcu_sub+0x454>
  81bbb8:	0005883a 	mov	r2,zero
  81bbbc:	0000b106 	br	81be84 <decode_mcu_sub+0x718>
  81bbc0:	e4bff117 	ldw	r18,-60(fp)
  81bbc4:	e43ff217 	ldw	r16,-56(fp)
  81bbc8:	8461c83a 	sub	r16,r16,r17
  81bbcc:	9409d83a 	sra	r4,r18,r16
  81bbd0:	008021b4 	movhi	r2,134
  81bbd4:	10a53104 	addi	r2,r2,-27452
  81bbd8:	8c47883a 	add	r3,r17,r17
  81bbdc:	18c7883a 	add	r3,r3,r3
  81bbe0:	10c5883a 	add	r2,r2,r3
  81bbe4:	10800017 	ldw	r2,0(r2)
  81bbe8:	20a8703a 	and	r20,r4,r2
  81bbec:	88ffffc4 	addi	r3,r17,-1
  81bbf0:	008021b4 	movhi	r2,134
  81bbf4:	10a53104 	addi	r2,r2,-27452
  81bbf8:	18c7883a 	add	r3,r3,r3
  81bbfc:	18c7883a 	add	r3,r3,r3
  81bc00:	10c5883a 	add	r2,r2,r3
  81bc04:	10800017 	ldw	r2,0(r2)
  81bc08:	15000816 	blt	r2,r20,81bc2c <decode_mcu_sub+0x4c0>
  81bc0c:	008021b4 	movhi	r2,134
  81bc10:	10a53104 	addi	r2,r2,-27452
  81bc14:	8c47883a 	add	r3,r17,r17
  81bc18:	18c7883a 	add	r3,r3,r3
  81bc1c:	10c5883a 	add	r2,r2,r3
  81bc20:	10800017 	ldw	r2,0(r2)
  81bc24:	a085c83a 	sub	r2,r20,r2
  81bc28:	00000106 	br	81bc30 <decode_mcu_sub+0x4c4>
  81bc2c:	a005883a 	mov	r2,r20
  81bc30:	1023883a 	mov	r17,r2
  81bc34:	9805883a 	mov	r2,r19
  81bc38:	1085883a 	add	r2,r2,r2
  81bc3c:	1085883a 	add	r2,r2,r2
  81bc40:	1007883a 	mov	r3,r2
  81bc44:	e0bfe917 	ldw	r2,-92(fp)
  81bc48:	10c5883a 	add	r2,r2,r3
  81bc4c:	10800017 	ldw	r2,0(r2)
  81bc50:	8809883a 	mov	r4,r17
  81bc54:	e0ffeb17 	ldw	r3,-84(fp)
  81bc58:	1085883a 	add	r2,r2,r2
  81bc5c:	1885883a 	add	r2,r3,r2
  81bc60:	1100000d 	sth	r4,0(r2)
  81bc64:	00000306 	br	81bc74 <decode_mcu_sub+0x508>
  81bc68:	a08003e0 	cmpeqi	r2,r20,15
  81bc6c:	10005e26 	beq	r2,zero,81bde8 <decode_mcu_sub+0x67c>
  81bc70:	9cc003c4 	addi	r19,r19,15
  81bc74:	9cc00044 	addi	r19,r19,1
  81bc78:	e0bfed17 	ldw	r2,-76(fp)
  81bc7c:	98bf9116 	blt	r19,r2,81bac4 <__alt_mem_epcs_flash_controller_0+0xff812ac4>
  81bc80:	00005606 	br	81bddc <decode_mcu_sub+0x670>
  81bc84:	88005526 	beq	r17,zero,81bddc <decode_mcu_sub+0x670>
  81bc88:	84400b0e 	bge	r16,r17,81bcb8 <decode_mcu_sub+0x54c>
  81bc8c:	e0bfef04 	addi	r2,fp,-68
  81bc90:	880f883a 	mov	r7,r17
  81bc94:	800d883a 	mov	r6,r16
  81bc98:	900b883a 	mov	r5,r18
  81bc9c:	1009883a 	mov	r4,r2
  81bca0:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81bca4:	1000021e 	bne	r2,zero,81bcb0 <decode_mcu_sub+0x544>
  81bca8:	0005883a 	mov	r2,zero
  81bcac:	00007506 	br	81be84 <decode_mcu_sub+0x718>
  81bcb0:	e4bff117 	ldw	r18,-60(fp)
  81bcb4:	e43ff217 	ldw	r16,-56(fp)
  81bcb8:	8461c83a 	sub	r16,r16,r17
  81bcbc:	00004706 	br	81bddc <decode_mcu_sub+0x670>
  81bcc0:	80800208 	cmpgei	r2,r16,8
  81bcc4:	10000f1e 	bne	r2,zero,81bd04 <decode_mcu_sub+0x598>
  81bcc8:	e0bfef04 	addi	r2,fp,-68
  81bccc:	000f883a 	mov	r7,zero
  81bcd0:	800d883a 	mov	r6,r16
  81bcd4:	900b883a 	mov	r5,r18
  81bcd8:	1009883a 	mov	r4,r2
  81bcdc:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81bce0:	1000021e 	bne	r2,zero,81bcec <decode_mcu_sub+0x580>
  81bce4:	0005883a 	mov	r2,zero
  81bce8:	00006606 	br	81be84 <decode_mcu_sub+0x718>
  81bcec:	e4bff117 	ldw	r18,-60(fp)
  81bcf0:	e43ff217 	ldw	r16,-56(fp)
  81bcf4:	80800208 	cmpgei	r2,r16,8
  81bcf8:	1000021e 	bne	r2,zero,81bd04 <decode_mcu_sub+0x598>
  81bcfc:	04400044 	movi	r17,1
  81bd00:	00001306 	br	81bd50 <decode_mcu_sub+0x5e4>
  81bd04:	80bffe04 	addi	r2,r16,-8
  81bd08:	9087d83a 	sra	r3,r18,r2
  81bd0c:	00803fc4 	movi	r2,255
  81bd10:	18a8703a 	and	r20,r3,r2
  81bd14:	e0ffec17 	ldw	r3,-80(fp)
  81bd18:	a0800904 	addi	r2,r20,36
  81bd1c:	1085883a 	add	r2,r2,r2
  81bd20:	1085883a 	add	r2,r2,r2
  81bd24:	1885883a 	add	r2,r3,r2
  81bd28:	14400017 	ldw	r17,0(r2)
  81bd2c:	88000726 	beq	r17,zero,81bd4c <decode_mcu_sub+0x5e0>
  81bd30:	8461c83a 	sub	r16,r16,r17
  81bd34:	e0bfec17 	ldw	r2,-80(fp)
  81bd38:	1505883a 	add	r2,r2,r20
  81bd3c:	10812404 	addi	r2,r2,1168
  81bd40:	10800003 	ldbu	r2,0(r2)
  81bd44:	14403fcc 	andi	r17,r2,255
  81bd48:	00000e06 	br	81bd84 <decode_mcu_sub+0x618>
  81bd4c:	04400244 	movi	r17,9
  81bd50:	e0bfef04 	addi	r2,fp,-68
  81bd54:	dc400015 	stw	r17,0(sp)
  81bd58:	e1ffec17 	ldw	r7,-80(fp)
  81bd5c:	800d883a 	mov	r6,r16
  81bd60:	900b883a 	mov	r5,r18
  81bd64:	1009883a 	mov	r4,r2
  81bd68:	081a4ac0 	call	81a4ac <jpeg_huff_decode>
  81bd6c:	1023883a 	mov	r17,r2
  81bd70:	8800020e 	bge	r17,zero,81bd7c <decode_mcu_sub+0x610>
  81bd74:	0005883a 	mov	r2,zero
  81bd78:	00004206 	br	81be84 <decode_mcu_sub+0x718>
  81bd7c:	e4bff117 	ldw	r18,-60(fp)
  81bd80:	e43ff217 	ldw	r16,-56(fp)
  81bd84:	8829d13a 	srai	r20,r17,4
  81bd88:	8c4003cc 	andi	r17,r17,15
  81bd8c:	88000f26 	beq	r17,zero,81bdcc <decode_mcu_sub+0x660>
  81bd90:	9d27883a 	add	r19,r19,r20
  81bd94:	84400b0e 	bge	r16,r17,81bdc4 <decode_mcu_sub+0x658>
  81bd98:	e0bfef04 	addi	r2,fp,-68
  81bd9c:	880f883a 	mov	r7,r17
  81bda0:	800d883a 	mov	r6,r16
  81bda4:	900b883a 	mov	r5,r18
  81bda8:	1009883a 	mov	r4,r2
  81bdac:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81bdb0:	1000021e 	bne	r2,zero,81bdbc <decode_mcu_sub+0x650>
  81bdb4:	0005883a 	mov	r2,zero
  81bdb8:	00003206 	br	81be84 <decode_mcu_sub+0x718>
  81bdbc:	e4bff117 	ldw	r18,-60(fp)
  81bdc0:	e43ff217 	ldw	r16,-56(fp)
  81bdc4:	8461c83a 	sub	r16,r16,r17
  81bdc8:	00000306 	br	81bdd8 <decode_mcu_sub+0x66c>
  81bdcc:	a08003e0 	cmpeqi	r2,r20,15
  81bdd0:	10000726 	beq	r2,zero,81bdf0 <decode_mcu_sub+0x684>
  81bdd4:	9cc003c4 	addi	r19,r19,15
  81bdd8:	9cc00044 	addi	r19,r19,1
  81bddc:	e0bfea17 	ldw	r2,-88(fp)
  81bde0:	14ffb70e 	bge	r2,r19,81bcc0 <__alt_mem_epcs_flash_controller_0+0xff812cc0>
  81bde4:	00000306 	br	81bdf4 <decode_mcu_sub+0x688>
  81bde8:	0001883a 	nop
  81bdec:	00000106 	br	81bdf4 <decode_mcu_sub+0x688>
  81bdf0:	0001883a 	nop
  81bdf4:	e0bfe717 	ldw	r2,-100(fp)
  81bdf8:	10800044 	addi	r2,r2,1
  81bdfc:	e0bfe715 	stw	r2,-100(fp)
  81be00:	e0bff917 	ldw	r2,-28(fp)
  81be04:	10805c17 	ldw	r2,368(r2)
  81be08:	e0ffe717 	ldw	r3,-100(fp)
  81be0c:	18be9416 	blt	r3,r2,81b860 <__alt_mem_epcs_flash_controller_0+0xff812860>
  81be10:	e0bff917 	ldw	r2,-28(fp)
  81be14:	10800617 	ldw	r2,24(r2)
  81be18:	e0ffef17 	ldw	r3,-68(fp)
  81be1c:	10c00015 	stw	r3,0(r2)
  81be20:	e0bff917 	ldw	r2,-28(fp)
  81be24:	10800617 	ldw	r2,24(r2)
  81be28:	e0fff017 	ldw	r3,-64(fp)
  81be2c:	10c00115 	stw	r3,4(r2)
  81be30:	e0bfe817 	ldw	r2,-96(fp)
  81be34:	14800315 	stw	r18,12(r2)
  81be38:	e0bfe817 	ldw	r2,-96(fp)
  81be3c:	14000415 	stw	r16,16(r2)
  81be40:	e0bfe817 	ldw	r2,-96(fp)
  81be44:	e0fff417 	ldw	r3,-48(fp)
  81be48:	10c00515 	stw	r3,20(r2)
  81be4c:	e0fff517 	ldw	r3,-44(fp)
  81be50:	10c00615 	stw	r3,24(r2)
  81be54:	e0fff617 	ldw	r3,-40(fp)
  81be58:	10c00715 	stw	r3,28(r2)
  81be5c:	e0fff717 	ldw	r3,-36(fp)
  81be60:	10c00815 	stw	r3,32(r2)
  81be64:	e0fff817 	ldw	r3,-32(fp)
  81be68:	10c00915 	stw	r3,36(r2)
  81be6c:	e0bfe817 	ldw	r2,-96(fp)
  81be70:	10800b17 	ldw	r2,44(r2)
  81be74:	10ffffc4 	addi	r3,r2,-1
  81be78:	e0bfe817 	ldw	r2,-96(fp)
  81be7c:	10c00b15 	stw	r3,44(r2)
  81be80:	00800044 	movi	r2,1
  81be84:	e6fffb04 	addi	sp,fp,-20
  81be88:	dfc00617 	ldw	ra,24(sp)
  81be8c:	df000517 	ldw	fp,20(sp)
  81be90:	dd000417 	ldw	r20,16(sp)
  81be94:	dcc00317 	ldw	r19,12(sp)
  81be98:	dc800217 	ldw	r18,8(sp)
  81be9c:	dc400117 	ldw	r17,4(sp)
  81bea0:	dc000017 	ldw	r16,0(sp)
  81bea4:	dec00704 	addi	sp,sp,28
  81bea8:	f800283a 	ret

0081beac <decode_mcu>:
  81beac:	deffe604 	addi	sp,sp,-104
  81beb0:	dfc01915 	stw	ra,100(sp)
  81beb4:	df001815 	stw	fp,96(sp)
  81beb8:	dd001715 	stw	r20,92(sp)
  81bebc:	dcc01615 	stw	r19,88(sp)
  81bec0:	dc801515 	stw	r18,84(sp)
  81bec4:	dc401415 	stw	r17,80(sp)
  81bec8:	dc001315 	stw	r16,76(sp)
  81becc:	df001804 	addi	fp,sp,96
  81bed0:	e13ff915 	stw	r4,-28(fp)
  81bed4:	e17ffa15 	stw	r5,-24(fp)
  81bed8:	e0bff917 	ldw	r2,-28(fp)
  81bedc:	10807517 	ldw	r2,468(r2)
  81bee0:	e0bfea15 	stw	r2,-88(fp)
  81bee4:	e0bff917 	ldw	r2,-28(fp)
  81bee8:	10804617 	ldw	r2,280(r2)
  81beec:	10000826 	beq	r2,zero,81bf10 <decode_mcu+0x64>
  81bef0:	e0bfea17 	ldw	r2,-88(fp)
  81bef4:	10800b17 	ldw	r2,44(r2)
  81bef8:	1000051e 	bne	r2,zero,81bf10 <decode_mcu+0x64>
  81befc:	e13ff917 	ldw	r4,-28(fp)
  81bf00:	081a6b00 	call	81a6b0 <process_restart>
  81bf04:	1000021e 	bne	r2,zero,81bf10 <decode_mcu+0x64>
  81bf08:	0005883a 	mov	r2,zero
  81bf0c:	0001a606 	br	81c5a8 <decode_mcu+0x6fc>
  81bf10:	e0bfea17 	ldw	r2,-88(fp)
  81bf14:	10800a17 	ldw	r2,40(r2)
  81bf18:	10019d1e 	bne	r2,zero,81c590 <decode_mcu+0x6e4>
  81bf1c:	e0bff917 	ldw	r2,-28(fp)
  81bf20:	e0bff315 	stw	r2,-52(fp)
  81bf24:	e0bff917 	ldw	r2,-28(fp)
  81bf28:	10800617 	ldw	r2,24(r2)
  81bf2c:	10800017 	ldw	r2,0(r2)
  81bf30:	e0bfef15 	stw	r2,-68(fp)
  81bf34:	e0bff917 	ldw	r2,-28(fp)
  81bf38:	10800617 	ldw	r2,24(r2)
  81bf3c:	10800117 	ldw	r2,4(r2)
  81bf40:	e0bff015 	stw	r2,-64(fp)
  81bf44:	e0bfea17 	ldw	r2,-88(fp)
  81bf48:	14800317 	ldw	r18,12(r2)
  81bf4c:	e0bfea17 	ldw	r2,-88(fp)
  81bf50:	14000417 	ldw	r16,16(r2)
  81bf54:	e0bfea17 	ldw	r2,-88(fp)
  81bf58:	10c00517 	ldw	r3,20(r2)
  81bf5c:	e0fff415 	stw	r3,-48(fp)
  81bf60:	10c00617 	ldw	r3,24(r2)
  81bf64:	e0fff515 	stw	r3,-44(fp)
  81bf68:	10c00717 	ldw	r3,28(r2)
  81bf6c:	e0fff615 	stw	r3,-40(fp)
  81bf70:	10c00817 	ldw	r3,32(r2)
  81bf74:	e0fff715 	stw	r3,-36(fp)
  81bf78:	10800917 	ldw	r2,36(r2)
  81bf7c:	e0bff815 	stw	r2,-32(fp)
  81bf80:	e03fe915 	stw	zero,-92(fp)
  81bf84:	00016706 	br	81c524 <decode_mcu+0x678>
  81bf88:	e0bfe917 	ldw	r2,-92(fp)
  81bf8c:	1085883a 	add	r2,r2,r2
  81bf90:	1085883a 	add	r2,r2,r2
  81bf94:	1007883a 	mov	r3,r2
  81bf98:	e0bffa17 	ldw	r2,-24(fp)
  81bf9c:	10c5883a 	add	r2,r2,r3
  81bfa0:	10800017 	ldw	r2,0(r2)
  81bfa4:	e0bfeb15 	stw	r2,-84(fp)
  81bfa8:	e0ffea17 	ldw	r3,-88(fp)
  81bfac:	e0bfe917 	ldw	r2,-92(fp)
  81bfb0:	10800644 	addi	r2,r2,25
  81bfb4:	1085883a 	add	r2,r2,r2
  81bfb8:	1085883a 	add	r2,r2,r2
  81bfbc:	1885883a 	add	r2,r3,r2
  81bfc0:	10800017 	ldw	r2,0(r2)
  81bfc4:	e0bfec15 	stw	r2,-80(fp)
  81bfc8:	80800208 	cmpgei	r2,r16,8
  81bfcc:	10000f1e 	bne	r2,zero,81c00c <decode_mcu+0x160>
  81bfd0:	e0bfef04 	addi	r2,fp,-68
  81bfd4:	000f883a 	mov	r7,zero
  81bfd8:	800d883a 	mov	r6,r16
  81bfdc:	900b883a 	mov	r5,r18
  81bfe0:	1009883a 	mov	r4,r2
  81bfe4:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81bfe8:	1000021e 	bne	r2,zero,81bff4 <decode_mcu+0x148>
  81bfec:	0005883a 	mov	r2,zero
  81bff0:	00016d06 	br	81c5a8 <decode_mcu+0x6fc>
  81bff4:	e4bff117 	ldw	r18,-60(fp)
  81bff8:	e43ff217 	ldw	r16,-56(fp)
  81bffc:	80800208 	cmpgei	r2,r16,8
  81c000:	1000021e 	bne	r2,zero,81c00c <decode_mcu+0x160>
  81c004:	04400044 	movi	r17,1
  81c008:	00001306 	br	81c058 <decode_mcu+0x1ac>
  81c00c:	80bffe04 	addi	r2,r16,-8
  81c010:	9087d83a 	sra	r3,r18,r2
  81c014:	00803fc4 	movi	r2,255
  81c018:	18a6703a 	and	r19,r3,r2
  81c01c:	e0ffec17 	ldw	r3,-80(fp)
  81c020:	98800904 	addi	r2,r19,36
  81c024:	1085883a 	add	r2,r2,r2
  81c028:	1085883a 	add	r2,r2,r2
  81c02c:	1885883a 	add	r2,r3,r2
  81c030:	14400017 	ldw	r17,0(r2)
  81c034:	88000726 	beq	r17,zero,81c054 <decode_mcu+0x1a8>
  81c038:	8461c83a 	sub	r16,r16,r17
  81c03c:	e0bfec17 	ldw	r2,-80(fp)
  81c040:	14c5883a 	add	r2,r2,r19
  81c044:	10812404 	addi	r2,r2,1168
  81c048:	10800003 	ldbu	r2,0(r2)
  81c04c:	14403fcc 	andi	r17,r2,255
  81c050:	00000e06 	br	81c08c <decode_mcu+0x1e0>
  81c054:	04400244 	movi	r17,9
  81c058:	e0bfef04 	addi	r2,fp,-68
  81c05c:	dc400015 	stw	r17,0(sp)
  81c060:	e1ffec17 	ldw	r7,-80(fp)
  81c064:	800d883a 	mov	r6,r16
  81c068:	900b883a 	mov	r5,r18
  81c06c:	1009883a 	mov	r4,r2
  81c070:	081a4ac0 	call	81a4ac <jpeg_huff_decode>
  81c074:	1023883a 	mov	r17,r2
  81c078:	8800020e 	bge	r17,zero,81c084 <decode_mcu+0x1d8>
  81c07c:	0005883a 	mov	r2,zero
  81c080:	00014906 	br	81c5a8 <decode_mcu+0x6fc>
  81c084:	e4bff117 	ldw	r18,-60(fp)
  81c088:	e43ff217 	ldw	r16,-56(fp)
  81c08c:	e0ffea17 	ldw	r3,-88(fp)
  81c090:	e0bfe917 	ldw	r2,-92(fp)
  81c094:	108008c4 	addi	r2,r2,35
  81c098:	1085883a 	add	r2,r2,r2
  81c09c:	1085883a 	add	r2,r2,r2
  81c0a0:	1885883a 	add	r2,r3,r2
  81c0a4:	10800017 	ldw	r2,0(r2)
  81c0a8:	e0bfec15 	stw	r2,-80(fp)
  81c0ac:	04c00044 	movi	r19,1
  81c0b0:	e0ffea17 	ldw	r3,-88(fp)
  81c0b4:	e0bfe917 	ldw	r2,-92(fp)
  81c0b8:	10800b44 	addi	r2,r2,45
  81c0bc:	1085883a 	add	r2,r2,r2
  81c0c0:	1085883a 	add	r2,r2,r2
  81c0c4:	1885883a 	add	r2,r3,r2
  81c0c8:	10800017 	ldw	r2,0(r2)
  81c0cc:	e0bfed15 	stw	r2,-76(fp)
  81c0d0:	e0bfed17 	ldw	r2,-76(fp)
  81c0d4:	1000b426 	beq	r2,zero,81c3a8 <decode_mcu+0x4fc>
  81c0d8:	88002726 	beq	r17,zero,81c178 <decode_mcu+0x2cc>
  81c0dc:	84400b0e 	bge	r16,r17,81c10c <decode_mcu+0x260>
  81c0e0:	e0bfef04 	addi	r2,fp,-68
  81c0e4:	880f883a 	mov	r7,r17
  81c0e8:	800d883a 	mov	r6,r16
  81c0ec:	900b883a 	mov	r5,r18
  81c0f0:	1009883a 	mov	r4,r2
  81c0f4:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81c0f8:	1000021e 	bne	r2,zero,81c104 <decode_mcu+0x258>
  81c0fc:	0005883a 	mov	r2,zero
  81c100:	00012906 	br	81c5a8 <decode_mcu+0x6fc>
  81c104:	e4bff117 	ldw	r18,-60(fp)
  81c108:	e43ff217 	ldw	r16,-56(fp)
  81c10c:	8461c83a 	sub	r16,r16,r17
  81c110:	9409d83a 	sra	r4,r18,r16
  81c114:	008021b4 	movhi	r2,134
  81c118:	10a53104 	addi	r2,r2,-27452
  81c11c:	8c47883a 	add	r3,r17,r17
  81c120:	18c7883a 	add	r3,r3,r3
  81c124:	10c5883a 	add	r2,r2,r3
  81c128:	10800017 	ldw	r2,0(r2)
  81c12c:	20a8703a 	and	r20,r4,r2
  81c130:	88ffffc4 	addi	r3,r17,-1
  81c134:	008021b4 	movhi	r2,134
  81c138:	10a53104 	addi	r2,r2,-27452
  81c13c:	18c7883a 	add	r3,r3,r3
  81c140:	18c7883a 	add	r3,r3,r3
  81c144:	10c5883a 	add	r2,r2,r3
  81c148:	10800017 	ldw	r2,0(r2)
  81c14c:	15000816 	blt	r2,r20,81c170 <decode_mcu+0x2c4>
  81c150:	008021b4 	movhi	r2,134
  81c154:	10a53104 	addi	r2,r2,-27452
  81c158:	8c47883a 	add	r3,r17,r17
  81c15c:	18c7883a 	add	r3,r3,r3
  81c160:	10c5883a 	add	r2,r2,r3
  81c164:	10800017 	ldw	r2,0(r2)
  81c168:	a085c83a 	sub	r2,r20,r2
  81c16c:	00000106 	br	81c174 <decode_mcu+0x2c8>
  81c170:	a005883a 	mov	r2,r20
  81c174:	1023883a 	mov	r17,r2
  81c178:	e0fff917 	ldw	r3,-28(fp)
  81c17c:	e0bfe917 	ldw	r2,-92(fp)
  81c180:	10801744 	addi	r2,r2,93
  81c184:	1085883a 	add	r2,r2,r2
  81c188:	1085883a 	add	r2,r2,r2
  81c18c:	1885883a 	add	r2,r3,r2
  81c190:	10800017 	ldw	r2,0(r2)
  81c194:	e0bfee15 	stw	r2,-72(fp)
  81c198:	e0bfee17 	ldw	r2,-72(fp)
  81c19c:	10800044 	addi	r2,r2,1
  81c1a0:	1085883a 	add	r2,r2,r2
  81c1a4:	1085883a 	add	r2,r2,r2
  81c1a8:	e0ffe904 	addi	r3,fp,-92
  81c1ac:	1885883a 	add	r2,r3,r2
  81c1b0:	10800b04 	addi	r2,r2,44
  81c1b4:	10800017 	ldw	r2,0(r2)
  81c1b8:	88a3883a 	add	r17,r17,r2
  81c1bc:	e0bfee17 	ldw	r2,-72(fp)
  81c1c0:	10800044 	addi	r2,r2,1
  81c1c4:	1085883a 	add	r2,r2,r2
  81c1c8:	1085883a 	add	r2,r2,r2
  81c1cc:	e0ffe904 	addi	r3,fp,-92
  81c1d0:	1885883a 	add	r2,r3,r2
  81c1d4:	10800b04 	addi	r2,r2,44
  81c1d8:	14400015 	stw	r17,0(r2)
  81c1dc:	8807883a 	mov	r3,r17
  81c1e0:	e0bfeb17 	ldw	r2,-84(fp)
  81c1e4:	10c0000d 	sth	r3,0(r2)
  81c1e8:	00006c06 	br	81c39c <decode_mcu+0x4f0>
  81c1ec:	80800208 	cmpgei	r2,r16,8
  81c1f0:	10000f1e 	bne	r2,zero,81c230 <decode_mcu+0x384>
  81c1f4:	e0bfef04 	addi	r2,fp,-68
  81c1f8:	000f883a 	mov	r7,zero
  81c1fc:	800d883a 	mov	r6,r16
  81c200:	900b883a 	mov	r5,r18
  81c204:	1009883a 	mov	r4,r2
  81c208:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81c20c:	1000021e 	bne	r2,zero,81c218 <decode_mcu+0x36c>
  81c210:	0005883a 	mov	r2,zero
  81c214:	0000e406 	br	81c5a8 <decode_mcu+0x6fc>
  81c218:	e4bff117 	ldw	r18,-60(fp)
  81c21c:	e43ff217 	ldw	r16,-56(fp)
  81c220:	80800208 	cmpgei	r2,r16,8
  81c224:	1000021e 	bne	r2,zero,81c230 <decode_mcu+0x384>
  81c228:	04400044 	movi	r17,1
  81c22c:	00001306 	br	81c27c <decode_mcu+0x3d0>
  81c230:	80bffe04 	addi	r2,r16,-8
  81c234:	9087d83a 	sra	r3,r18,r2
  81c238:	00803fc4 	movi	r2,255
  81c23c:	18a8703a 	and	r20,r3,r2
  81c240:	e0ffec17 	ldw	r3,-80(fp)
  81c244:	a0800904 	addi	r2,r20,36
  81c248:	1085883a 	add	r2,r2,r2
  81c24c:	1085883a 	add	r2,r2,r2
  81c250:	1885883a 	add	r2,r3,r2
  81c254:	14400017 	ldw	r17,0(r2)
  81c258:	88000726 	beq	r17,zero,81c278 <decode_mcu+0x3cc>
  81c25c:	8461c83a 	sub	r16,r16,r17
  81c260:	e0bfec17 	ldw	r2,-80(fp)
  81c264:	1505883a 	add	r2,r2,r20
  81c268:	10812404 	addi	r2,r2,1168
  81c26c:	10800003 	ldbu	r2,0(r2)
  81c270:	14403fcc 	andi	r17,r2,255
  81c274:	00000e06 	br	81c2b0 <decode_mcu+0x404>
  81c278:	04400244 	movi	r17,9
  81c27c:	e0bfef04 	addi	r2,fp,-68
  81c280:	dc400015 	stw	r17,0(sp)
  81c284:	e1ffec17 	ldw	r7,-80(fp)
  81c288:	800d883a 	mov	r6,r16
  81c28c:	900b883a 	mov	r5,r18
  81c290:	1009883a 	mov	r4,r2
  81c294:	081a4ac0 	call	81a4ac <jpeg_huff_decode>
  81c298:	1023883a 	mov	r17,r2
  81c29c:	8800020e 	bge	r17,zero,81c2a8 <decode_mcu+0x3fc>
  81c2a0:	0005883a 	mov	r2,zero
  81c2a4:	0000c006 	br	81c5a8 <decode_mcu+0x6fc>
  81c2a8:	e4bff117 	ldw	r18,-60(fp)
  81c2ac:	e43ff217 	ldw	r16,-56(fp)
  81c2b0:	8829d13a 	srai	r20,r17,4
  81c2b4:	8c4003cc 	andi	r17,r17,15
  81c2b8:	88003426 	beq	r17,zero,81c38c <decode_mcu+0x4e0>
  81c2bc:	9d27883a 	add	r19,r19,r20
  81c2c0:	84400b0e 	bge	r16,r17,81c2f0 <decode_mcu+0x444>
  81c2c4:	e0bfef04 	addi	r2,fp,-68
  81c2c8:	880f883a 	mov	r7,r17
  81c2cc:	800d883a 	mov	r6,r16
  81c2d0:	900b883a 	mov	r5,r18
  81c2d4:	1009883a 	mov	r4,r2
  81c2d8:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81c2dc:	1000021e 	bne	r2,zero,81c2e8 <decode_mcu+0x43c>
  81c2e0:	0005883a 	mov	r2,zero
  81c2e4:	0000b006 	br	81c5a8 <decode_mcu+0x6fc>
  81c2e8:	e4bff117 	ldw	r18,-60(fp)
  81c2ec:	e43ff217 	ldw	r16,-56(fp)
  81c2f0:	8461c83a 	sub	r16,r16,r17
  81c2f4:	9409d83a 	sra	r4,r18,r16
  81c2f8:	008021b4 	movhi	r2,134
  81c2fc:	10a53104 	addi	r2,r2,-27452
  81c300:	8c47883a 	add	r3,r17,r17
  81c304:	18c7883a 	add	r3,r3,r3
  81c308:	10c5883a 	add	r2,r2,r3
  81c30c:	10800017 	ldw	r2,0(r2)
  81c310:	20a8703a 	and	r20,r4,r2
  81c314:	88ffffc4 	addi	r3,r17,-1
  81c318:	008021b4 	movhi	r2,134
  81c31c:	10a53104 	addi	r2,r2,-27452
  81c320:	18c7883a 	add	r3,r3,r3
  81c324:	18c7883a 	add	r3,r3,r3
  81c328:	10c5883a 	add	r2,r2,r3
  81c32c:	10800017 	ldw	r2,0(r2)
  81c330:	15000816 	blt	r2,r20,81c354 <decode_mcu+0x4a8>
  81c334:	008021b4 	movhi	r2,134
  81c338:	10a53104 	addi	r2,r2,-27452
  81c33c:	8c47883a 	add	r3,r17,r17
  81c340:	18c7883a 	add	r3,r3,r3
  81c344:	10c5883a 	add	r2,r2,r3
  81c348:	10800017 	ldw	r2,0(r2)
  81c34c:	a085c83a 	sub	r2,r20,r2
  81c350:	00000106 	br	81c358 <decode_mcu+0x4ac>
  81c354:	a005883a 	mov	r2,r20
  81c358:	1023883a 	mov	r17,r2
  81c35c:	008021b4 	movhi	r2,134
  81c360:	10a2fb04 	addi	r2,r2,-29716
  81c364:	9cc7883a 	add	r3,r19,r19
  81c368:	18c7883a 	add	r3,r3,r3
  81c36c:	10c5883a 	add	r2,r2,r3
  81c370:	10800017 	ldw	r2,0(r2)
  81c374:	8809883a 	mov	r4,r17
  81c378:	e0ffeb17 	ldw	r3,-84(fp)
  81c37c:	1085883a 	add	r2,r2,r2
  81c380:	1885883a 	add	r2,r3,r2
  81c384:	1100000d 	sth	r4,0(r2)
  81c388:	00000306 	br	81c398 <decode_mcu+0x4ec>
  81c38c:	a08003e0 	cmpeqi	r2,r20,15
  81c390:	10005e26 	beq	r2,zero,81c50c <decode_mcu+0x660>
  81c394:	9cc003c4 	addi	r19,r19,15
  81c398:	9cc00044 	addi	r19,r19,1
  81c39c:	e0bfed17 	ldw	r2,-76(fp)
  81c3a0:	98bf9216 	blt	r19,r2,81c1ec <__alt_mem_epcs_flash_controller_0+0xff8131ec>
  81c3a4:	00005606 	br	81c500 <decode_mcu+0x654>
  81c3a8:	88005526 	beq	r17,zero,81c500 <decode_mcu+0x654>
  81c3ac:	84400b0e 	bge	r16,r17,81c3dc <decode_mcu+0x530>
  81c3b0:	e0bfef04 	addi	r2,fp,-68
  81c3b4:	880f883a 	mov	r7,r17
  81c3b8:	800d883a 	mov	r6,r16
  81c3bc:	900b883a 	mov	r5,r18
  81c3c0:	1009883a 	mov	r4,r2
  81c3c4:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81c3c8:	1000021e 	bne	r2,zero,81c3d4 <decode_mcu+0x528>
  81c3cc:	0005883a 	mov	r2,zero
  81c3d0:	00007506 	br	81c5a8 <decode_mcu+0x6fc>
  81c3d4:	e4bff117 	ldw	r18,-60(fp)
  81c3d8:	e43ff217 	ldw	r16,-56(fp)
  81c3dc:	8461c83a 	sub	r16,r16,r17
  81c3e0:	00004706 	br	81c500 <decode_mcu+0x654>
  81c3e4:	80800208 	cmpgei	r2,r16,8
  81c3e8:	10000f1e 	bne	r2,zero,81c428 <decode_mcu+0x57c>
  81c3ec:	e0bfef04 	addi	r2,fp,-68
  81c3f0:	000f883a 	mov	r7,zero
  81c3f4:	800d883a 	mov	r6,r16
  81c3f8:	900b883a 	mov	r5,r18
  81c3fc:	1009883a 	mov	r4,r2
  81c400:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81c404:	1000021e 	bne	r2,zero,81c410 <decode_mcu+0x564>
  81c408:	0005883a 	mov	r2,zero
  81c40c:	00006606 	br	81c5a8 <decode_mcu+0x6fc>
  81c410:	e4bff117 	ldw	r18,-60(fp)
  81c414:	e43ff217 	ldw	r16,-56(fp)
  81c418:	80800208 	cmpgei	r2,r16,8
  81c41c:	1000021e 	bne	r2,zero,81c428 <decode_mcu+0x57c>
  81c420:	04400044 	movi	r17,1
  81c424:	00001306 	br	81c474 <decode_mcu+0x5c8>
  81c428:	80bffe04 	addi	r2,r16,-8
  81c42c:	9087d83a 	sra	r3,r18,r2
  81c430:	00803fc4 	movi	r2,255
  81c434:	18a8703a 	and	r20,r3,r2
  81c438:	e0ffec17 	ldw	r3,-80(fp)
  81c43c:	a0800904 	addi	r2,r20,36
  81c440:	1085883a 	add	r2,r2,r2
  81c444:	1085883a 	add	r2,r2,r2
  81c448:	1885883a 	add	r2,r3,r2
  81c44c:	14400017 	ldw	r17,0(r2)
  81c450:	88000726 	beq	r17,zero,81c470 <decode_mcu+0x5c4>
  81c454:	8461c83a 	sub	r16,r16,r17
  81c458:	e0bfec17 	ldw	r2,-80(fp)
  81c45c:	1505883a 	add	r2,r2,r20
  81c460:	10812404 	addi	r2,r2,1168
  81c464:	10800003 	ldbu	r2,0(r2)
  81c468:	14403fcc 	andi	r17,r2,255
  81c46c:	00000e06 	br	81c4a8 <decode_mcu+0x5fc>
  81c470:	04400244 	movi	r17,9
  81c474:	e0bfef04 	addi	r2,fp,-68
  81c478:	dc400015 	stw	r17,0(sp)
  81c47c:	e1ffec17 	ldw	r7,-80(fp)
  81c480:	800d883a 	mov	r6,r16
  81c484:	900b883a 	mov	r5,r18
  81c488:	1009883a 	mov	r4,r2
  81c48c:	081a4ac0 	call	81a4ac <jpeg_huff_decode>
  81c490:	1023883a 	mov	r17,r2
  81c494:	8800020e 	bge	r17,zero,81c4a0 <decode_mcu+0x5f4>
  81c498:	0005883a 	mov	r2,zero
  81c49c:	00004206 	br	81c5a8 <decode_mcu+0x6fc>
  81c4a0:	e4bff117 	ldw	r18,-60(fp)
  81c4a4:	e43ff217 	ldw	r16,-56(fp)
  81c4a8:	8829d13a 	srai	r20,r17,4
  81c4ac:	8c4003cc 	andi	r17,r17,15
  81c4b0:	88000f26 	beq	r17,zero,81c4f0 <decode_mcu+0x644>
  81c4b4:	9d27883a 	add	r19,r19,r20
  81c4b8:	84400b0e 	bge	r16,r17,81c4e8 <decode_mcu+0x63c>
  81c4bc:	e0bfef04 	addi	r2,fp,-68
  81c4c0:	880f883a 	mov	r7,r17
  81c4c4:	800d883a 	mov	r6,r16
  81c4c8:	900b883a 	mov	r5,r18
  81c4cc:	1009883a 	mov	r4,r2
  81c4d0:	081a2c00 	call	81a2c0 <jpeg_fill_bit_buffer>
  81c4d4:	1000021e 	bne	r2,zero,81c4e0 <decode_mcu+0x634>
  81c4d8:	0005883a 	mov	r2,zero
  81c4dc:	00003206 	br	81c5a8 <decode_mcu+0x6fc>
  81c4e0:	e4bff117 	ldw	r18,-60(fp)
  81c4e4:	e43ff217 	ldw	r16,-56(fp)
  81c4e8:	8461c83a 	sub	r16,r16,r17
  81c4ec:	00000306 	br	81c4fc <decode_mcu+0x650>
  81c4f0:	a08003e0 	cmpeqi	r2,r20,15
  81c4f4:	10000726 	beq	r2,zero,81c514 <decode_mcu+0x668>
  81c4f8:	9cc003c4 	addi	r19,r19,15
  81c4fc:	9cc00044 	addi	r19,r19,1
  81c500:	98801010 	cmplti	r2,r19,64
  81c504:	103fb71e 	bne	r2,zero,81c3e4 <__alt_mem_epcs_flash_controller_0+0xff8133e4>
  81c508:	00000306 	br	81c518 <decode_mcu+0x66c>
  81c50c:	0001883a 	nop
  81c510:	00000106 	br	81c518 <decode_mcu+0x66c>
  81c514:	0001883a 	nop
  81c518:	e0bfe917 	ldw	r2,-92(fp)
  81c51c:	10800044 	addi	r2,r2,1
  81c520:	e0bfe915 	stw	r2,-92(fp)
  81c524:	e0bff917 	ldw	r2,-28(fp)
  81c528:	10805c17 	ldw	r2,368(r2)
  81c52c:	e0ffe917 	ldw	r3,-92(fp)
  81c530:	18be9516 	blt	r3,r2,81bf88 <__alt_mem_epcs_flash_controller_0+0xff812f88>
  81c534:	e0bff917 	ldw	r2,-28(fp)
  81c538:	10800617 	ldw	r2,24(r2)
  81c53c:	e0ffef17 	ldw	r3,-68(fp)
  81c540:	10c00015 	stw	r3,0(r2)
  81c544:	e0bff917 	ldw	r2,-28(fp)
  81c548:	10800617 	ldw	r2,24(r2)
  81c54c:	e0fff017 	ldw	r3,-64(fp)
  81c550:	10c00115 	stw	r3,4(r2)
  81c554:	e0bfea17 	ldw	r2,-88(fp)
  81c558:	14800315 	stw	r18,12(r2)
  81c55c:	e0bfea17 	ldw	r2,-88(fp)
  81c560:	14000415 	stw	r16,16(r2)
  81c564:	e0bfea17 	ldw	r2,-88(fp)
  81c568:	e0fff417 	ldw	r3,-48(fp)
  81c56c:	10c00515 	stw	r3,20(r2)
  81c570:	e0fff517 	ldw	r3,-44(fp)
  81c574:	10c00615 	stw	r3,24(r2)
  81c578:	e0fff617 	ldw	r3,-40(fp)
  81c57c:	10c00715 	stw	r3,28(r2)
  81c580:	e0fff717 	ldw	r3,-36(fp)
  81c584:	10c00815 	stw	r3,32(r2)
  81c588:	e0fff817 	ldw	r3,-32(fp)
  81c58c:	10c00915 	stw	r3,36(r2)
  81c590:	e0bfea17 	ldw	r2,-88(fp)
  81c594:	10800b17 	ldw	r2,44(r2)
  81c598:	10ffffc4 	addi	r3,r2,-1
  81c59c:	e0bfea17 	ldw	r2,-88(fp)
  81c5a0:	10c00b15 	stw	r3,44(r2)
  81c5a4:	00800044 	movi	r2,1
  81c5a8:	e6fffb04 	addi	sp,fp,-20
  81c5ac:	dfc00617 	ldw	ra,24(sp)
  81c5b0:	df000517 	ldw	fp,20(sp)
  81c5b4:	dd000417 	ldw	r20,16(sp)
  81c5b8:	dcc00317 	ldw	r19,12(sp)
  81c5bc:	dc800217 	ldw	r18,8(sp)
  81c5c0:	dc400117 	ldw	r17,4(sp)
  81c5c4:	dc000017 	ldw	r16,0(sp)
  81c5c8:	dec00704 	addi	sp,sp,28
  81c5cc:	f800283a 	ret

0081c5d0 <start_pass_huff_decoder>:
  81c5d0:	defff104 	addi	sp,sp,-60
  81c5d4:	dfc00e15 	stw	ra,56(sp)
  81c5d8:	df000d15 	stw	fp,52(sp)
  81c5dc:	dc400c15 	stw	r17,48(sp)
  81c5e0:	dc000b15 	stw	r16,44(sp)
  81c5e4:	df000d04 	addi	fp,sp,52
  81c5e8:	e13ffd15 	stw	r4,-12(fp)
  81c5ec:	e0bffd17 	ldw	r2,-12(fp)
  81c5f0:	10807517 	ldw	r2,468(r2)
  81c5f4:	e0bff715 	stw	r2,-36(fp)
  81c5f8:	e0bffd17 	ldw	r2,-12(fp)
  81c5fc:	10803817 	ldw	r2,224(r2)
  81c600:	10010926 	beq	r2,zero,81ca28 <start_pass_huff_decoder+0x458>
  81c604:	e0bffd17 	ldw	r2,-12(fp)
  81c608:	10806717 	ldw	r2,412(r2)
  81c60c:	1000041e 	bne	r2,zero,81c620 <start_pass_huff_decoder+0x50>
  81c610:	e0bffd17 	ldw	r2,-12(fp)
  81c614:	10806817 	ldw	r2,416(r2)
  81c618:	10000f26 	beq	r2,zero,81c658 <start_pass_huff_decoder+0x88>
  81c61c:	00001f06 	br	81c69c <start_pass_huff_decoder+0xcc>
  81c620:	e0bffd17 	ldw	r2,-12(fp)
  81c624:	10c06817 	ldw	r3,416(r2)
  81c628:	e0bffd17 	ldw	r2,-12(fp)
  81c62c:	10806717 	ldw	r2,412(r2)
  81c630:	18801a16 	blt	r3,r2,81c69c <start_pass_huff_decoder+0xcc>
  81c634:	e0bffd17 	ldw	r2,-12(fp)
  81c638:	10806817 	ldw	r2,416(r2)
  81c63c:	e0fffd17 	ldw	r3,-12(fp)
  81c640:	18c06d17 	ldw	r3,436(r3)
  81c644:	18801516 	blt	r3,r2,81c69c <start_pass_huff_decoder+0xcc>
  81c648:	e0bffd17 	ldw	r2,-12(fp)
  81c64c:	10805517 	ldw	r2,340(r2)
  81c650:	10800060 	cmpeqi	r2,r2,1
  81c654:	10000e26 	beq	r2,zero,81c690 <start_pass_huff_decoder+0xc0>
  81c658:	e0bffd17 	ldw	r2,-12(fp)
  81c65c:	10806917 	ldw	r2,420(r2)
  81c660:	10000626 	beq	r2,zero,81c67c <start_pass_huff_decoder+0xac>
  81c664:	e0bffd17 	ldw	r2,-12(fp)
  81c668:	10806917 	ldw	r2,420(r2)
  81c66c:	10ffffc4 	addi	r3,r2,-1
  81c670:	e0bffd17 	ldw	r2,-12(fp)
  81c674:	10806a17 	ldw	r2,424(r2)
  81c678:	1880071e 	bne	r3,r2,81c698 <start_pass_huff_decoder+0xc8>
  81c67c:	e0bffd17 	ldw	r2,-12(fp)
  81c680:	10806a17 	ldw	r2,424(r2)
  81c684:	10800390 	cmplti	r2,r2,14
  81c688:	1000211e 	bne	r2,zero,81c710 <start_pass_huff_decoder+0x140>
  81c68c:	00000306 	br	81c69c <start_pass_huff_decoder+0xcc>
  81c690:	0001883a 	nop
  81c694:	00000106 	br	81c69c <start_pass_huff_decoder+0xcc>
  81c698:	0001883a 	nop
  81c69c:	e0bffd17 	ldw	r2,-12(fp)
  81c6a0:	10800017 	ldw	r2,0(r2)
  81c6a4:	00c00444 	movi	r3,17
  81c6a8:	10c00515 	stw	r3,20(r2)
  81c6ac:	e0bffd17 	ldw	r2,-12(fp)
  81c6b0:	10800017 	ldw	r2,0(r2)
  81c6b4:	e0fffd17 	ldw	r3,-12(fp)
  81c6b8:	18c06717 	ldw	r3,412(r3)
  81c6bc:	10c00615 	stw	r3,24(r2)
  81c6c0:	e0bffd17 	ldw	r2,-12(fp)
  81c6c4:	10800017 	ldw	r2,0(r2)
  81c6c8:	e0fffd17 	ldw	r3,-12(fp)
  81c6cc:	18c06817 	ldw	r3,416(r3)
  81c6d0:	10c00715 	stw	r3,28(r2)
  81c6d4:	e0bffd17 	ldw	r2,-12(fp)
  81c6d8:	10800017 	ldw	r2,0(r2)
  81c6dc:	e0fffd17 	ldw	r3,-12(fp)
  81c6e0:	18c06917 	ldw	r3,420(r3)
  81c6e4:	10c00815 	stw	r3,32(r2)
  81c6e8:	e0bffd17 	ldw	r2,-12(fp)
  81c6ec:	10800017 	ldw	r2,0(r2)
  81c6f0:	e0fffd17 	ldw	r3,-12(fp)
  81c6f4:	18c06a17 	ldw	r3,424(r3)
  81c6f8:	10c00915 	stw	r3,36(r2)
  81c6fc:	e0bffd17 	ldw	r2,-12(fp)
  81c700:	10800017 	ldw	r2,0(r2)
  81c704:	10800017 	ldw	r2,0(r2)
  81c708:	e13ffd17 	ldw	r4,-12(fp)
  81c70c:	103ee83a 	callr	r2
  81c710:	e03ff315 	stw	zero,-52(fp)
  81c714:	00005d06 	br	81c88c <start_pass_huff_decoder+0x2bc>
  81c718:	e0fffd17 	ldw	r3,-12(fp)
  81c71c:	e0bff317 	ldw	r2,-52(fp)
  81c720:	10801584 	addi	r2,r2,86
  81c724:	1085883a 	add	r2,r2,r2
  81c728:	1085883a 	add	r2,r2,r2
  81c72c:	1885883a 	add	r2,r3,r2
  81c730:	10800017 	ldw	r2,0(r2)
  81c734:	10800117 	ldw	r2,4(r2)
  81c738:	e0bff815 	stw	r2,-32(fp)
  81c73c:	e0bffd17 	ldw	r2,-12(fp)
  81c740:	10c02817 	ldw	r3,160(r2)
  81c744:	e0bff817 	ldw	r2,-32(fp)
  81c748:	1004923a 	slli	r2,r2,8
  81c74c:	1885883a 	add	r2,r3,r2
  81c750:	e0bff915 	stw	r2,-28(fp)
  81c754:	e0bffd17 	ldw	r2,-12(fp)
  81c758:	10806717 	ldw	r2,412(r2)
  81c75c:	10001426 	beq	r2,zero,81c7b0 <start_pass_huff_decoder+0x1e0>
  81c760:	e0bff917 	ldw	r2,-28(fp)
  81c764:	10800017 	ldw	r2,0(r2)
  81c768:	1000110e 	bge	r2,zero,81c7b0 <start_pass_huff_decoder+0x1e0>
  81c76c:	e0bffd17 	ldw	r2,-12(fp)
  81c770:	10800017 	ldw	r2,0(r2)
  81c774:	00c01d84 	movi	r3,118
  81c778:	10c00515 	stw	r3,20(r2)
  81c77c:	e0bffd17 	ldw	r2,-12(fp)
  81c780:	10800017 	ldw	r2,0(r2)
  81c784:	e0fff817 	ldw	r3,-32(fp)
  81c788:	10c00615 	stw	r3,24(r2)
  81c78c:	e0bffd17 	ldw	r2,-12(fp)
  81c790:	10800017 	ldw	r2,0(r2)
  81c794:	10000715 	stw	zero,28(r2)
  81c798:	e0bffd17 	ldw	r2,-12(fp)
  81c79c:	10800017 	ldw	r2,0(r2)
  81c7a0:	10800117 	ldw	r2,4(r2)
  81c7a4:	017fffc4 	movi	r5,-1
  81c7a8:	e13ffd17 	ldw	r4,-12(fp)
  81c7ac:	103ee83a 	callr	r2
  81c7b0:	e0bffd17 	ldw	r2,-12(fp)
  81c7b4:	10806717 	ldw	r2,412(r2)
  81c7b8:	e0bff615 	stw	r2,-40(fp)
  81c7bc:	00002c06 	br	81c870 <start_pass_huff_decoder+0x2a0>
  81c7c0:	e0bff617 	ldw	r2,-40(fp)
  81c7c4:	1085883a 	add	r2,r2,r2
  81c7c8:	1085883a 	add	r2,r2,r2
  81c7cc:	1007883a 	mov	r3,r2
  81c7d0:	e0bff917 	ldw	r2,-28(fp)
  81c7d4:	10c5883a 	add	r2,r2,r3
  81c7d8:	10800017 	ldw	r2,0(r2)
  81c7dc:	1000010e 	bge	r2,zero,81c7e4 <start_pass_huff_decoder+0x214>
  81c7e0:	0005883a 	mov	r2,zero
  81c7e4:	e0bffa15 	stw	r2,-24(fp)
  81c7e8:	e0bffd17 	ldw	r2,-12(fp)
  81c7ec:	10c06917 	ldw	r3,420(r2)
  81c7f0:	e0bffa17 	ldw	r2,-24(fp)
  81c7f4:	18801226 	beq	r3,r2,81c840 <start_pass_huff_decoder+0x270>
  81c7f8:	e0bffd17 	ldw	r2,-12(fp)
  81c7fc:	10800017 	ldw	r2,0(r2)
  81c800:	00c01d84 	movi	r3,118
  81c804:	10c00515 	stw	r3,20(r2)
  81c808:	e0bffd17 	ldw	r2,-12(fp)
  81c80c:	10800017 	ldw	r2,0(r2)
  81c810:	e0fff817 	ldw	r3,-32(fp)
  81c814:	10c00615 	stw	r3,24(r2)
  81c818:	e0bffd17 	ldw	r2,-12(fp)
  81c81c:	10800017 	ldw	r2,0(r2)
  81c820:	e0fff617 	ldw	r3,-40(fp)
  81c824:	10c00715 	stw	r3,28(r2)
  81c828:	e0bffd17 	ldw	r2,-12(fp)
  81c82c:	10800017 	ldw	r2,0(r2)
  81c830:	10800117 	ldw	r2,4(r2)
  81c834:	017fffc4 	movi	r5,-1
  81c838:	e13ffd17 	ldw	r4,-12(fp)
  81c83c:	103ee83a 	callr	r2
  81c840:	e0bff617 	ldw	r2,-40(fp)
  81c844:	1085883a 	add	r2,r2,r2
  81c848:	1085883a 	add	r2,r2,r2
  81c84c:	1007883a 	mov	r3,r2
  81c850:	e0bff917 	ldw	r2,-28(fp)
  81c854:	10c5883a 	add	r2,r2,r3
  81c858:	e0fffd17 	ldw	r3,-12(fp)
  81c85c:	18c06a17 	ldw	r3,424(r3)
  81c860:	10c00015 	stw	r3,0(r2)
  81c864:	e0bff617 	ldw	r2,-40(fp)
  81c868:	10800044 	addi	r2,r2,1
  81c86c:	e0bff615 	stw	r2,-40(fp)
  81c870:	e0bffd17 	ldw	r2,-12(fp)
  81c874:	10c06817 	ldw	r3,416(r2)
  81c878:	e0bff617 	ldw	r2,-40(fp)
  81c87c:	18bfd00e 	bge	r3,r2,81c7c0 <__alt_mem_epcs_flash_controller_0+0xff8137c0>
  81c880:	e0bff317 	ldw	r2,-52(fp)
  81c884:	10800044 	addi	r2,r2,1
  81c888:	e0bff315 	stw	r2,-52(fp)
  81c88c:	e0bffd17 	ldw	r2,-12(fp)
  81c890:	10805517 	ldw	r2,340(r2)
  81c894:	e0fff317 	ldw	r3,-52(fp)
  81c898:	18bf9f16 	blt	r3,r2,81c718 <__alt_mem_epcs_flash_controller_0+0xff813718>
  81c89c:	e0bffd17 	ldw	r2,-12(fp)
  81c8a0:	10806917 	ldw	r2,420(r2)
  81c8a4:	10000d1e 	bne	r2,zero,81c8dc <start_pass_huff_decoder+0x30c>
  81c8a8:	e0bffd17 	ldw	r2,-12(fp)
  81c8ac:	10806717 	ldw	r2,412(r2)
  81c8b0:	1000051e 	bne	r2,zero,81c8c8 <start_pass_huff_decoder+0x2f8>
  81c8b4:	e0fff717 	ldw	r3,-36(fp)
  81c8b8:	008020b4 	movhi	r2,130
  81c8bc:	10a9df04 	addi	r2,r2,-22660
  81c8c0:	18800115 	stw	r2,4(r3)
  81c8c4:	00001106 	br	81c90c <start_pass_huff_decoder+0x33c>
  81c8c8:	e0fff717 	ldw	r3,-36(fp)
  81c8cc:	008020b4 	movhi	r2,130
  81c8d0:	10aad504 	addi	r2,r2,-21676
  81c8d4:	18800115 	stw	r2,4(r3)
  81c8d8:	00000c06 	br	81c90c <start_pass_huff_decoder+0x33c>
  81c8dc:	e0bffd17 	ldw	r2,-12(fp)
  81c8e0:	10806717 	ldw	r2,412(r2)
  81c8e4:	1000051e 	bne	r2,zero,81c8fc <start_pass_huff_decoder+0x32c>
  81c8e8:	e0fff717 	ldw	r3,-36(fp)
  81c8ec:	008020b4 	movhi	r2,130
  81c8f0:	10abcd04 	addi	r2,r2,-20684
  81c8f4:	18800115 	stw	r2,4(r3)
  81c8f8:	00000406 	br	81c90c <start_pass_huff_decoder+0x33c>
  81c8fc:	e0fff717 	ldw	r3,-36(fp)
  81c900:	008020b4 	movhi	r2,130
  81c904:	10ac3b04 	addi	r2,r2,-20244
  81c908:	18800115 	stw	r2,4(r3)
  81c90c:	e03ff315 	stw	zero,-52(fp)
  81c910:	00003e06 	br	81ca0c <start_pass_huff_decoder+0x43c>
  81c914:	e0fffd17 	ldw	r3,-12(fp)
  81c918:	e0bff317 	ldw	r2,-52(fp)
  81c91c:	10801584 	addi	r2,r2,86
  81c920:	1085883a 	add	r2,r2,r2
  81c924:	1085883a 	add	r2,r2,r2
  81c928:	1885883a 	add	r2,r3,r2
  81c92c:	10800017 	ldw	r2,0(r2)
  81c930:	e0bffb15 	stw	r2,-20(fp)
  81c934:	e0bffd17 	ldw	r2,-12(fp)
  81c938:	10806717 	ldw	r2,412(r2)
  81c93c:	1000121e 	bne	r2,zero,81c988 <start_pass_huff_decoder+0x3b8>
  81c940:	e0bffd17 	ldw	r2,-12(fp)
  81c944:	10806917 	ldw	r2,420(r2)
  81c948:	1000261e 	bne	r2,zero,81c9e4 <start_pass_huff_decoder+0x414>
  81c94c:	e0bffb17 	ldw	r2,-20(fp)
  81c950:	10800517 	ldw	r2,20(r2)
  81c954:	e0bffc15 	stw	r2,-16(fp)
  81c958:	e0bffc17 	ldw	r2,-16(fp)
  81c95c:	10800304 	addi	r2,r2,12
  81c960:	1085883a 	add	r2,r2,r2
  81c964:	1085883a 	add	r2,r2,r2
  81c968:	e0fff717 	ldw	r3,-36(fp)
  81c96c:	1885883a 	add	r2,r3,r2
  81c970:	100f883a 	mov	r7,r2
  81c974:	e1bffc17 	ldw	r6,-16(fp)
  81c978:	01400044 	movi	r5,1
  81c97c:	e13ffd17 	ldw	r4,-12(fp)
  81c980:	0819cfc0 	call	819cfc <jpeg_make_d_derived_tbl>
  81c984:	00001706 	br	81c9e4 <start_pass_huff_decoder+0x414>
  81c988:	e0bffb17 	ldw	r2,-20(fp)
  81c98c:	10800617 	ldw	r2,24(r2)
  81c990:	e0bffc15 	stw	r2,-16(fp)
  81c994:	e0bffc17 	ldw	r2,-16(fp)
  81c998:	10800304 	addi	r2,r2,12
  81c99c:	1085883a 	add	r2,r2,r2
  81c9a0:	1085883a 	add	r2,r2,r2
  81c9a4:	e0fff717 	ldw	r3,-36(fp)
  81c9a8:	1885883a 	add	r2,r3,r2
  81c9ac:	100f883a 	mov	r7,r2
  81c9b0:	e1bffc17 	ldw	r6,-16(fp)
  81c9b4:	000b883a 	mov	r5,zero
  81c9b8:	e13ffd17 	ldw	r4,-12(fp)
  81c9bc:	0819cfc0 	call	819cfc <jpeg_make_d_derived_tbl>
  81c9c0:	e0fff717 	ldw	r3,-36(fp)
  81c9c4:	e0bffc17 	ldw	r2,-16(fp)
  81c9c8:	10800304 	addi	r2,r2,12
  81c9cc:	1085883a 	add	r2,r2,r2
  81c9d0:	1085883a 	add	r2,r2,r2
  81c9d4:	1885883a 	add	r2,r3,r2
  81c9d8:	10c00017 	ldw	r3,0(r2)
  81c9dc:	e0bff717 	ldw	r2,-36(fp)
  81c9e0:	10c01015 	stw	r3,64(r2)
  81c9e4:	e0fff717 	ldw	r3,-36(fp)
  81c9e8:	e0bff317 	ldw	r2,-52(fp)
  81c9ec:	10800184 	addi	r2,r2,6
  81c9f0:	1085883a 	add	r2,r2,r2
  81c9f4:	1085883a 	add	r2,r2,r2
  81c9f8:	1885883a 	add	r2,r3,r2
  81c9fc:	10000015 	stw	zero,0(r2)
  81ca00:	e0bff317 	ldw	r2,-52(fp)
  81ca04:	10800044 	addi	r2,r2,1
  81ca08:	e0bff315 	stw	r2,-52(fp)
  81ca0c:	e0bffd17 	ldw	r2,-12(fp)
  81ca10:	10805517 	ldw	r2,340(r2)
  81ca14:	e0fff317 	ldw	r3,-52(fp)
  81ca18:	18bfbe16 	blt	r3,r2,81c914 <__alt_mem_epcs_flash_controller_0+0xff813914>
  81ca1c:	e0bff717 	ldw	r2,-36(fp)
  81ca20:	10000515 	stw	zero,20(r2)
  81ca24:	0001ed06 	br	81d1dc <start_pass_huff_decoder+0xc0c>
  81ca28:	e0bffd17 	ldw	r2,-12(fp)
  81ca2c:	10806717 	ldw	r2,412(r2)
  81ca30:	1000121e 	bne	r2,zero,81ca7c <start_pass_huff_decoder+0x4ac>
  81ca34:	e0bffd17 	ldw	r2,-12(fp)
  81ca38:	10806917 	ldw	r2,420(r2)
  81ca3c:	10000f1e 	bne	r2,zero,81ca7c <start_pass_huff_decoder+0x4ac>
  81ca40:	e0bffd17 	ldw	r2,-12(fp)
  81ca44:	10806a17 	ldw	r2,424(r2)
  81ca48:	10000c1e 	bne	r2,zero,81ca7c <start_pass_huff_decoder+0x4ac>
  81ca4c:	e0bffd17 	ldw	r2,-12(fp)
  81ca50:	10803717 	ldw	r2,220(r2)
  81ca54:	1000041e 	bne	r2,zero,81ca68 <start_pass_huff_decoder+0x498>
  81ca58:	e0bffd17 	ldw	r2,-12(fp)
  81ca5c:	10806817 	ldw	r2,416(r2)
  81ca60:	10801008 	cmpgei	r2,r2,64
  81ca64:	10000f1e 	bne	r2,zero,81caa4 <start_pass_huff_decoder+0x4d4>
  81ca68:	e0bffd17 	ldw	r2,-12(fp)
  81ca6c:	10c06817 	ldw	r3,416(r2)
  81ca70:	e0bffd17 	ldw	r2,-12(fp)
  81ca74:	10806d17 	ldw	r2,436(r2)
  81ca78:	18800a26 	beq	r3,r2,81caa4 <start_pass_huff_decoder+0x4d4>
  81ca7c:	e0bffd17 	ldw	r2,-12(fp)
  81ca80:	10800017 	ldw	r2,0(r2)
  81ca84:	00c01f44 	movi	r3,125
  81ca88:	10c00515 	stw	r3,20(r2)
  81ca8c:	e0bffd17 	ldw	r2,-12(fp)
  81ca90:	10800017 	ldw	r2,0(r2)
  81ca94:	10800117 	ldw	r2,4(r2)
  81ca98:	017fffc4 	movi	r5,-1
  81ca9c:	e13ffd17 	ldw	r4,-12(fp)
  81caa0:	103ee83a 	callr	r2
  81caa4:	e0bffd17 	ldw	r2,-12(fp)
  81caa8:	10806d17 	ldw	r2,436(r2)
  81caac:	10800fe0 	cmpeqi	r2,r2,63
  81cab0:	1000051e 	bne	r2,zero,81cac8 <start_pass_huff_decoder+0x4f8>
  81cab4:	e0fff717 	ldw	r3,-36(fp)
  81cab8:	008020b4 	movhi	r2,130
  81cabc:	10addb04 	addi	r2,r2,-18580
  81cac0:	18800115 	stw	r2,4(r3)
  81cac4:	00000406 	br	81cad8 <start_pass_huff_decoder+0x508>
  81cac8:	e0fff717 	ldw	r3,-36(fp)
  81cacc:	008020b4 	movhi	r2,130
  81cad0:	10afab04 	addi	r2,r2,-16724
  81cad4:	18800115 	stw	r2,4(r3)
  81cad8:	e03ff315 	stw	zero,-52(fp)
  81cadc:	00003106 	br	81cba4 <start_pass_huff_decoder+0x5d4>
  81cae0:	e0fffd17 	ldw	r3,-12(fp)
  81cae4:	e0bff317 	ldw	r2,-52(fp)
  81cae8:	10801584 	addi	r2,r2,86
  81caec:	1085883a 	add	r2,r2,r2
  81caf0:	1085883a 	add	r2,r2,r2
  81caf4:	1885883a 	add	r2,r3,r2
  81caf8:	10800017 	ldw	r2,0(r2)
  81cafc:	e0bffb15 	stw	r2,-20(fp)
  81cb00:	e0bffb17 	ldw	r2,-20(fp)
  81cb04:	10800517 	ldw	r2,20(r2)
  81cb08:	e0bffc15 	stw	r2,-16(fp)
  81cb0c:	e0bffc17 	ldw	r2,-16(fp)
  81cb10:	10800444 	addi	r2,r2,17
  81cb14:	1085883a 	add	r2,r2,r2
  81cb18:	1085883a 	add	r2,r2,r2
  81cb1c:	e0fff717 	ldw	r3,-36(fp)
  81cb20:	1885883a 	add	r2,r3,r2
  81cb24:	100f883a 	mov	r7,r2
  81cb28:	e1bffc17 	ldw	r6,-16(fp)
  81cb2c:	01400044 	movi	r5,1
  81cb30:	e13ffd17 	ldw	r4,-12(fp)
  81cb34:	0819cfc0 	call	819cfc <jpeg_make_d_derived_tbl>
  81cb38:	e0bffd17 	ldw	r2,-12(fp)
  81cb3c:	10806d17 	ldw	r2,436(r2)
  81cb40:	10000e26 	beq	r2,zero,81cb7c <start_pass_huff_decoder+0x5ac>
  81cb44:	e0bffb17 	ldw	r2,-20(fp)
  81cb48:	10800617 	ldw	r2,24(r2)
  81cb4c:	e0bffc15 	stw	r2,-16(fp)
  81cb50:	e0bffc17 	ldw	r2,-16(fp)
  81cb54:	10800544 	addi	r2,r2,21
  81cb58:	1085883a 	add	r2,r2,r2
  81cb5c:	1085883a 	add	r2,r2,r2
  81cb60:	e0fff717 	ldw	r3,-36(fp)
  81cb64:	1885883a 	add	r2,r3,r2
  81cb68:	100f883a 	mov	r7,r2
  81cb6c:	e1bffc17 	ldw	r6,-16(fp)
  81cb70:	000b883a 	mov	r5,zero
  81cb74:	e13ffd17 	ldw	r4,-12(fp)
  81cb78:	0819cfc0 	call	819cfc <jpeg_make_d_derived_tbl>
  81cb7c:	e0fff717 	ldw	r3,-36(fp)
  81cb80:	e0bff317 	ldw	r2,-52(fp)
  81cb84:	10800184 	addi	r2,r2,6
  81cb88:	1085883a 	add	r2,r2,r2
  81cb8c:	1085883a 	add	r2,r2,r2
  81cb90:	1885883a 	add	r2,r3,r2
  81cb94:	10000015 	stw	zero,0(r2)
  81cb98:	e0bff317 	ldw	r2,-52(fp)
  81cb9c:	10800044 	addi	r2,r2,1
  81cba0:	e0bff315 	stw	r2,-52(fp)
  81cba4:	e0bffd17 	ldw	r2,-12(fp)
  81cba8:	10805517 	ldw	r2,340(r2)
  81cbac:	e0fff317 	ldw	r3,-52(fp)
  81cbb0:	18bfcb16 	blt	r3,r2,81cae0 <__alt_mem_epcs_flash_controller_0+0xff813ae0>
  81cbb4:	e03ff415 	stw	zero,-48(fp)
  81cbb8:	00018406 	br	81d1cc <start_pass_huff_decoder+0xbfc>
  81cbbc:	e0fffd17 	ldw	r3,-12(fp)
  81cbc0:	e0bff417 	ldw	r2,-48(fp)
  81cbc4:	10801744 	addi	r2,r2,93
  81cbc8:	1085883a 	add	r2,r2,r2
  81cbcc:	1085883a 	add	r2,r2,r2
  81cbd0:	1885883a 	add	r2,r3,r2
  81cbd4:	10800017 	ldw	r2,0(r2)
  81cbd8:	e0bff315 	stw	r2,-52(fp)
  81cbdc:	e0fffd17 	ldw	r3,-12(fp)
  81cbe0:	e0bff317 	ldw	r2,-52(fp)
  81cbe4:	10801584 	addi	r2,r2,86
  81cbe8:	1085883a 	add	r2,r2,r2
  81cbec:	1085883a 	add	r2,r2,r2
  81cbf0:	1885883a 	add	r2,r3,r2
  81cbf4:	10800017 	ldw	r2,0(r2)
  81cbf8:	e0bffb15 	stw	r2,-20(fp)
  81cbfc:	e0bffb17 	ldw	r2,-20(fp)
  81cc00:	10800517 	ldw	r2,20(r2)
  81cc04:	e0fff717 	ldw	r3,-36(fp)
  81cc08:	10800444 	addi	r2,r2,17
  81cc0c:	1085883a 	add	r2,r2,r2
  81cc10:	1085883a 	add	r2,r2,r2
  81cc14:	1885883a 	add	r2,r3,r2
  81cc18:	10c00017 	ldw	r3,0(r2)
  81cc1c:	e13ff717 	ldw	r4,-36(fp)
  81cc20:	e0bff417 	ldw	r2,-48(fp)
  81cc24:	10800644 	addi	r2,r2,25
  81cc28:	1085883a 	add	r2,r2,r2
  81cc2c:	1085883a 	add	r2,r2,r2
  81cc30:	2085883a 	add	r2,r4,r2
  81cc34:	10c00015 	stw	r3,0(r2)
  81cc38:	e0bffb17 	ldw	r2,-20(fp)
  81cc3c:	10800617 	ldw	r2,24(r2)
  81cc40:	e0fff717 	ldw	r3,-36(fp)
  81cc44:	10800544 	addi	r2,r2,21
  81cc48:	1085883a 	add	r2,r2,r2
  81cc4c:	1085883a 	add	r2,r2,r2
  81cc50:	1885883a 	add	r2,r3,r2
  81cc54:	10c00017 	ldw	r3,0(r2)
  81cc58:	e13ff717 	ldw	r4,-36(fp)
  81cc5c:	e0bff417 	ldw	r2,-48(fp)
  81cc60:	108008c4 	addi	r2,r2,35
  81cc64:	1085883a 	add	r2,r2,r2
  81cc68:	1085883a 	add	r2,r2,r2
  81cc6c:	2085883a 	add	r2,r4,r2
  81cc70:	10c00015 	stw	r3,0(r2)
  81cc74:	e0bffb17 	ldw	r2,-20(fp)
  81cc78:	10800d17 	ldw	r2,52(r2)
  81cc7c:	10014926 	beq	r2,zero,81d1a4 <start_pass_huff_decoder+0xbd4>
  81cc80:	e0bffb17 	ldw	r2,-20(fp)
  81cc84:	10800a17 	ldw	r2,40(r2)
  81cc88:	e0bff315 	stw	r2,-52(fp)
  81cc8c:	e0bffb17 	ldw	r2,-20(fp)
  81cc90:	10800917 	ldw	r2,36(r2)
  81cc94:	e0bff515 	stw	r2,-44(fp)
  81cc98:	e0bffd17 	ldw	r2,-12(fp)
  81cc9c:	10806d17 	ldw	r2,436(r2)
  81cca0:	10c00c68 	cmpgeui	r3,r2,49
  81cca4:	18011b1e 	bne	r3,zero,81d114 <start_pass_huff_decoder+0xb44>
  81cca8:	100690ba 	slli	r3,r2,2
  81ccac:	008020b4 	movhi	r2,130
  81ccb0:	10b33004 	addi	r2,r2,-13120
  81ccb4:	1885883a 	add	r2,r3,r2
  81ccb8:	10800017 	ldw	r2,0(r2)
  81ccbc:	1000683a 	jmp	r2
  81ccc0:	0081cd84 	movi	r2,1846
  81ccc4:	0081d114 	movui	r2,1860
  81ccc8:	0081d114 	movui	r2,1860
  81cccc:	0081cda8 	cmpgeui	r2,zero,1846
  81ccd0:	0081d114 	movui	r2,1860
  81ccd4:	0081d114 	movui	r2,1860
  81ccd8:	0081d114 	movui	r2,1860
  81ccdc:	0081d114 	movui	r2,1860
  81cce0:	0081ce34 	movhi	r2,1848
  81cce4:	0081d114 	movui	r2,1860
  81cce8:	0081d114 	movui	r2,1860
  81ccec:	0081d114 	movui	r2,1860
  81ccf0:	0081d114 	movui	r2,1860
  81ccf4:	0081d114 	movui	r2,1860
  81ccf8:	0081d114 	movui	r2,1860
  81ccfc:	0081cec8 	cmpgei	r2,zero,1851
  81cd00:	0081d114 	movui	r2,1860
  81cd04:	0081d114 	movui	r2,1860
  81cd08:	0081d114 	movui	r2,1860
  81cd0c:	0081d114 	movui	r2,1860
  81cd10:	0081d114 	movui	r2,1860
  81cd14:	0081d114 	movui	r2,1860
  81cd18:	0081d114 	movui	r2,1860
  81cd1c:	0081d114 	movui	r2,1860
  81cd20:	0081cf58 	cmpnei	r2,zero,1853
  81cd24:	0081d114 	movui	r2,1860
  81cd28:	0081d114 	movui	r2,1860
  81cd2c:	0081d114 	movui	r2,1860
  81cd30:	0081d114 	movui	r2,1860
  81cd34:	0081d114 	movui	r2,1860
  81cd38:	0081d114 	movui	r2,1860
  81cd3c:	0081d114 	movui	r2,1860
  81cd40:	0081d114 	movui	r2,1860
  81cd44:	0081d114 	movui	r2,1860
  81cd48:	0081d114 	movui	r2,1860
  81cd4c:	0081cfec 	andhi	r2,zero,1855
  81cd50:	0081d114 	movui	r2,1860
  81cd54:	0081d114 	movui	r2,1860
  81cd58:	0081d114 	movui	r2,1860
  81cd5c:	0081d114 	movui	r2,1860
  81cd60:	0081d114 	movui	r2,1860
  81cd64:	0081d114 	movui	r2,1860
  81cd68:	0081d114 	movui	r2,1860
  81cd6c:	0081d114 	movui	r2,1860
  81cd70:	0081d114 	movui	r2,1860
  81cd74:	0081d114 	movui	r2,1860
  81cd78:	0081d114 	movui	r2,1860
  81cd7c:	0081d114 	movui	r2,1860
  81cd80:	0081d080 	call	81d08 <OSCtxSw_SWITCH_PC+0x81cc8>
  81cd84:	e0fff717 	ldw	r3,-36(fp)
  81cd88:	e0bff417 	ldw	r2,-48(fp)
  81cd8c:	10800b44 	addi	r2,r2,45
  81cd90:	1085883a 	add	r2,r2,r2
  81cd94:	1085883a 	add	r2,r2,r2
  81cd98:	1885883a 	add	r2,r3,r2
  81cd9c:	00c00044 	movi	r3,1
  81cda0:	10c00015 	stw	r3,0(r2)
  81cda4:	00010606 	br	81d1c0 <start_pass_huff_decoder+0xbf0>
  81cda8:	e0bff317 	ldw	r2,-52(fp)
  81cdac:	0080030e 	bge	zero,r2,81cdbc <start_pass_huff_decoder+0x7ec>
  81cdb0:	e0bff317 	ldw	r2,-52(fp)
  81cdb4:	108000d0 	cmplti	r2,r2,3
  81cdb8:	1000021e 	bne	r2,zero,81cdc4 <start_pass_huff_decoder+0x7f4>
  81cdbc:	00800084 	movi	r2,2
  81cdc0:	e0bff315 	stw	r2,-52(fp)
  81cdc4:	e0bff517 	ldw	r2,-44(fp)
  81cdc8:	0080030e 	bge	zero,r2,81cdd8 <start_pass_huff_decoder+0x808>
  81cdcc:	e0bff517 	ldw	r2,-44(fp)
  81cdd0:	108000d0 	cmplti	r2,r2,3
  81cdd4:	1000021e 	bne	r2,zero,81cde0 <start_pass_huff_decoder+0x810>
  81cdd8:	00800084 	movi	r2,2
  81cddc:	e0bff515 	stw	r2,-44(fp)
  81cde0:	e0bff317 	ldw	r2,-52(fp)
  81cde4:	10ffffc4 	addi	r3,r2,-1
  81cde8:	e0bff517 	ldw	r2,-44(fp)
  81cdec:	113fffc4 	addi	r4,r2,-1
  81cdf0:	008021b4 	movhi	r2,134
  81cdf4:	10a52d04 	addi	r2,r2,-27468
  81cdf8:	18c7883a 	add	r3,r3,r3
  81cdfc:	1907883a 	add	r3,r3,r4
  81ce00:	18c7883a 	add	r3,r3,r3
  81ce04:	18c7883a 	add	r3,r3,r3
  81ce08:	10c5883a 	add	r2,r2,r3
  81ce0c:	10800017 	ldw	r2,0(r2)
  81ce10:	10c00044 	addi	r3,r2,1
  81ce14:	e13ff717 	ldw	r4,-36(fp)
  81ce18:	e0bff417 	ldw	r2,-48(fp)
  81ce1c:	10800b44 	addi	r2,r2,45
  81ce20:	1085883a 	add	r2,r2,r2
  81ce24:	1085883a 	add	r2,r2,r2
  81ce28:	2085883a 	add	r2,r4,r2
  81ce2c:	10c00015 	stw	r3,0(r2)
  81ce30:	0000e306 	br	81d1c0 <start_pass_huff_decoder+0xbf0>
  81ce34:	e0bff317 	ldw	r2,-52(fp)
  81ce38:	0080030e 	bge	zero,r2,81ce48 <start_pass_huff_decoder+0x878>
  81ce3c:	e0bff317 	ldw	r2,-52(fp)
  81ce40:	10800110 	cmplti	r2,r2,4
  81ce44:	1000021e 	bne	r2,zero,81ce50 <start_pass_huff_decoder+0x880>
  81ce48:	008000c4 	movi	r2,3
  81ce4c:	e0bff315 	stw	r2,-52(fp)
  81ce50:	e0bff517 	ldw	r2,-44(fp)
  81ce54:	0080030e 	bge	zero,r2,81ce64 <start_pass_huff_decoder+0x894>
  81ce58:	e0bff517 	ldw	r2,-44(fp)
  81ce5c:	10800110 	cmplti	r2,r2,4
  81ce60:	1000021e 	bne	r2,zero,81ce6c <start_pass_huff_decoder+0x89c>
  81ce64:	008000c4 	movi	r2,3
  81ce68:	e0bff515 	stw	r2,-44(fp)
  81ce6c:	e0bff317 	ldw	r2,-52(fp)
  81ce70:	113fffc4 	addi	r4,r2,-1
  81ce74:	e0bff517 	ldw	r2,-44(fp)
  81ce78:	117fffc4 	addi	r5,r2,-1
  81ce7c:	00c021b4 	movhi	r3,134
  81ce80:	18e52404 	addi	r3,r3,-27504
  81ce84:	2005883a 	mov	r2,r4
  81ce88:	1085883a 	add	r2,r2,r2
  81ce8c:	1105883a 	add	r2,r2,r4
  81ce90:	1145883a 	add	r2,r2,r5
  81ce94:	1085883a 	add	r2,r2,r2
  81ce98:	1085883a 	add	r2,r2,r2
  81ce9c:	1885883a 	add	r2,r3,r2
  81cea0:	10800017 	ldw	r2,0(r2)
  81cea4:	10c00044 	addi	r3,r2,1
  81cea8:	e13ff717 	ldw	r4,-36(fp)
  81ceac:	e0bff417 	ldw	r2,-48(fp)
  81ceb0:	10800b44 	addi	r2,r2,45
  81ceb4:	1085883a 	add	r2,r2,r2
  81ceb8:	1085883a 	add	r2,r2,r2
  81cebc:	2085883a 	add	r2,r4,r2
  81cec0:	10c00015 	stw	r3,0(r2)
  81cec4:	0000be06 	br	81d1c0 <start_pass_huff_decoder+0xbf0>
  81cec8:	e0bff317 	ldw	r2,-52(fp)
  81cecc:	0080030e 	bge	zero,r2,81cedc <start_pass_huff_decoder+0x90c>
  81ced0:	e0bff317 	ldw	r2,-52(fp)
  81ced4:	10800150 	cmplti	r2,r2,5
  81ced8:	1000021e 	bne	r2,zero,81cee4 <start_pass_huff_decoder+0x914>
  81cedc:	00800104 	movi	r2,4
  81cee0:	e0bff315 	stw	r2,-52(fp)
  81cee4:	e0bff517 	ldw	r2,-44(fp)
  81cee8:	0080030e 	bge	zero,r2,81cef8 <start_pass_huff_decoder+0x928>
  81ceec:	e0bff517 	ldw	r2,-44(fp)
  81cef0:	10800150 	cmplti	r2,r2,5
  81cef4:	1000021e 	bne	r2,zero,81cf00 <start_pass_huff_decoder+0x930>
  81cef8:	00800104 	movi	r2,4
  81cefc:	e0bff515 	stw	r2,-44(fp)
  81cf00:	e0bff317 	ldw	r2,-52(fp)
  81cf04:	10ffffc4 	addi	r3,r2,-1
  81cf08:	e0bff517 	ldw	r2,-44(fp)
  81cf0c:	113fffc4 	addi	r4,r2,-1
  81cf10:	008021b4 	movhi	r2,134
  81cf14:	10a51404 	addi	r2,r2,-27568
  81cf18:	18c7883a 	add	r3,r3,r3
  81cf1c:	18c7883a 	add	r3,r3,r3
  81cf20:	1907883a 	add	r3,r3,r4
  81cf24:	18c7883a 	add	r3,r3,r3
  81cf28:	18c7883a 	add	r3,r3,r3
  81cf2c:	10c5883a 	add	r2,r2,r3
  81cf30:	10800017 	ldw	r2,0(r2)
  81cf34:	10c00044 	addi	r3,r2,1
  81cf38:	e13ff717 	ldw	r4,-36(fp)
  81cf3c:	e0bff417 	ldw	r2,-48(fp)
  81cf40:	10800b44 	addi	r2,r2,45
  81cf44:	1085883a 	add	r2,r2,r2
  81cf48:	1085883a 	add	r2,r2,r2
  81cf4c:	2085883a 	add	r2,r4,r2
  81cf50:	10c00015 	stw	r3,0(r2)
  81cf54:	00009a06 	br	81d1c0 <start_pass_huff_decoder+0xbf0>
  81cf58:	e0bff317 	ldw	r2,-52(fp)
  81cf5c:	0080030e 	bge	zero,r2,81cf6c <start_pass_huff_decoder+0x99c>
  81cf60:	e0bff317 	ldw	r2,-52(fp)
  81cf64:	10800190 	cmplti	r2,r2,6
  81cf68:	1000021e 	bne	r2,zero,81cf74 <start_pass_huff_decoder+0x9a4>
  81cf6c:	00800144 	movi	r2,5
  81cf70:	e0bff315 	stw	r2,-52(fp)
  81cf74:	e0bff517 	ldw	r2,-44(fp)
  81cf78:	0080030e 	bge	zero,r2,81cf88 <start_pass_huff_decoder+0x9b8>
  81cf7c:	e0bff517 	ldw	r2,-44(fp)
  81cf80:	10800190 	cmplti	r2,r2,6
  81cf84:	1000021e 	bne	r2,zero,81cf90 <start_pass_huff_decoder+0x9c0>
  81cf88:	00800144 	movi	r2,5
  81cf8c:	e0bff515 	stw	r2,-44(fp)
  81cf90:	e0bff317 	ldw	r2,-52(fp)
  81cf94:	10ffffc4 	addi	r3,r2,-1
  81cf98:	e0bff517 	ldw	r2,-44(fp)
  81cf9c:	147fffc4 	addi	r17,r2,-1
  81cfa0:	040021b4 	movhi	r16,134
  81cfa4:	8424fb04 	addi	r16,r16,-27668
  81cfa8:	01400144 	movi	r5,5
  81cfac:	1809883a 	mov	r4,r3
  81cfb0:	08301e80 	call	8301e8 <__mulsi3>
  81cfb4:	1445883a 	add	r2,r2,r17
  81cfb8:	1085883a 	add	r2,r2,r2
  81cfbc:	1085883a 	add	r2,r2,r2
  81cfc0:	8085883a 	add	r2,r16,r2
  81cfc4:	10800017 	ldw	r2,0(r2)
  81cfc8:	10c00044 	addi	r3,r2,1
  81cfcc:	e13ff717 	ldw	r4,-36(fp)
  81cfd0:	e0bff417 	ldw	r2,-48(fp)
  81cfd4:	10800b44 	addi	r2,r2,45
  81cfd8:	1085883a 	add	r2,r2,r2
  81cfdc:	1085883a 	add	r2,r2,r2
  81cfe0:	2085883a 	add	r2,r4,r2
  81cfe4:	10c00015 	stw	r3,0(r2)
  81cfe8:	00007506 	br	81d1c0 <start_pass_huff_decoder+0xbf0>
  81cfec:	e0bff317 	ldw	r2,-52(fp)
  81cff0:	0080030e 	bge	zero,r2,81d000 <start_pass_huff_decoder+0xa30>
  81cff4:	e0bff317 	ldw	r2,-52(fp)
  81cff8:	108001d0 	cmplti	r2,r2,7
  81cffc:	1000021e 	bne	r2,zero,81d008 <start_pass_huff_decoder+0xa38>
  81d000:	00800184 	movi	r2,6
  81d004:	e0bff315 	stw	r2,-52(fp)
  81d008:	e0bff517 	ldw	r2,-44(fp)
  81d00c:	0080030e 	bge	zero,r2,81d01c <start_pass_huff_decoder+0xa4c>
  81d010:	e0bff517 	ldw	r2,-44(fp)
  81d014:	108001d0 	cmplti	r2,r2,7
  81d018:	1000021e 	bne	r2,zero,81d024 <start_pass_huff_decoder+0xa54>
  81d01c:	00800184 	movi	r2,6
  81d020:	e0bff515 	stw	r2,-44(fp)
  81d024:	e0bff317 	ldw	r2,-52(fp)
  81d028:	10ffffc4 	addi	r3,r2,-1
  81d02c:	e0bff517 	ldw	r2,-44(fp)
  81d030:	147fffc4 	addi	r17,r2,-1
  81d034:	040021b4 	movhi	r16,134
  81d038:	8424d704 	addi	r16,r16,-27812
  81d03c:	01400184 	movi	r5,6
  81d040:	1809883a 	mov	r4,r3
  81d044:	08301e80 	call	8301e8 <__mulsi3>
  81d048:	1445883a 	add	r2,r2,r17
  81d04c:	1085883a 	add	r2,r2,r2
  81d050:	1085883a 	add	r2,r2,r2
  81d054:	8085883a 	add	r2,r16,r2
  81d058:	10800017 	ldw	r2,0(r2)
  81d05c:	10c00044 	addi	r3,r2,1
  81d060:	e13ff717 	ldw	r4,-36(fp)
  81d064:	e0bff417 	ldw	r2,-48(fp)
  81d068:	10800b44 	addi	r2,r2,45
  81d06c:	1085883a 	add	r2,r2,r2
  81d070:	1085883a 	add	r2,r2,r2
  81d074:	2085883a 	add	r2,r4,r2
  81d078:	10c00015 	stw	r3,0(r2)
  81d07c:	00005006 	br	81d1c0 <start_pass_huff_decoder+0xbf0>
  81d080:	e0bff317 	ldw	r2,-52(fp)
  81d084:	0080030e 	bge	zero,r2,81d094 <start_pass_huff_decoder+0xac4>
  81d088:	e0bff317 	ldw	r2,-52(fp)
  81d08c:	10800210 	cmplti	r2,r2,8
  81d090:	1000021e 	bne	r2,zero,81d09c <start_pass_huff_decoder+0xacc>
  81d094:	008001c4 	movi	r2,7
  81d098:	e0bff315 	stw	r2,-52(fp)
  81d09c:	e0bff517 	ldw	r2,-44(fp)
  81d0a0:	0080030e 	bge	zero,r2,81d0b0 <start_pass_huff_decoder+0xae0>
  81d0a4:	e0bff517 	ldw	r2,-44(fp)
  81d0a8:	10800210 	cmplti	r2,r2,8
  81d0ac:	1000021e 	bne	r2,zero,81d0b8 <start_pass_huff_decoder+0xae8>
  81d0b0:	008001c4 	movi	r2,7
  81d0b4:	e0bff515 	stw	r2,-44(fp)
  81d0b8:	e0bff317 	ldw	r2,-52(fp)
  81d0bc:	10ffffc4 	addi	r3,r2,-1
  81d0c0:	e0bff517 	ldw	r2,-44(fp)
  81d0c4:	147fffc4 	addi	r17,r2,-1
  81d0c8:	040021b4 	movhi	r16,134
  81d0cc:	8424a604 	addi	r16,r16,-28008
  81d0d0:	014001c4 	movi	r5,7
  81d0d4:	1809883a 	mov	r4,r3
  81d0d8:	08301e80 	call	8301e8 <__mulsi3>
  81d0dc:	1445883a 	add	r2,r2,r17
  81d0e0:	1085883a 	add	r2,r2,r2
  81d0e4:	1085883a 	add	r2,r2,r2
  81d0e8:	8085883a 	add	r2,r16,r2
  81d0ec:	10800017 	ldw	r2,0(r2)
  81d0f0:	10c00044 	addi	r3,r2,1
  81d0f4:	e13ff717 	ldw	r4,-36(fp)
  81d0f8:	e0bff417 	ldw	r2,-48(fp)
  81d0fc:	10800b44 	addi	r2,r2,45
  81d100:	1085883a 	add	r2,r2,r2
  81d104:	1085883a 	add	r2,r2,r2
  81d108:	2085883a 	add	r2,r4,r2
  81d10c:	10c00015 	stw	r3,0(r2)
  81d110:	00002b06 	br	81d1c0 <start_pass_huff_decoder+0xbf0>
  81d114:	e0bff317 	ldw	r2,-52(fp)
  81d118:	0080030e 	bge	zero,r2,81d128 <start_pass_huff_decoder+0xb58>
  81d11c:	e0bff317 	ldw	r2,-52(fp)
  81d120:	10800250 	cmplti	r2,r2,9
  81d124:	1000021e 	bne	r2,zero,81d130 <start_pass_huff_decoder+0xb60>
  81d128:	00800204 	movi	r2,8
  81d12c:	e0bff315 	stw	r2,-52(fp)
  81d130:	e0bff517 	ldw	r2,-44(fp)
  81d134:	0080030e 	bge	zero,r2,81d144 <start_pass_huff_decoder+0xb74>
  81d138:	e0bff517 	ldw	r2,-44(fp)
  81d13c:	10800250 	cmplti	r2,r2,9
  81d140:	1000021e 	bne	r2,zero,81d14c <start_pass_huff_decoder+0xb7c>
  81d144:	00800204 	movi	r2,8
  81d148:	e0bff515 	stw	r2,-44(fp)
  81d14c:	e0bff317 	ldw	r2,-52(fp)
  81d150:	113fffc4 	addi	r4,r2,-1
  81d154:	e0bff517 	ldw	r2,-44(fp)
  81d158:	10ffffc4 	addi	r3,r2,-1
  81d15c:	008021b4 	movhi	r2,134
  81d160:	10a46604 	addi	r2,r2,-28264
  81d164:	200890fa 	slli	r4,r4,3
  81d168:	20c7883a 	add	r3,r4,r3
  81d16c:	18c7883a 	add	r3,r3,r3
  81d170:	18c7883a 	add	r3,r3,r3
  81d174:	10c5883a 	add	r2,r2,r3
  81d178:	10800017 	ldw	r2,0(r2)
  81d17c:	10c00044 	addi	r3,r2,1
  81d180:	e13ff717 	ldw	r4,-36(fp)
  81d184:	e0bff417 	ldw	r2,-48(fp)
  81d188:	10800b44 	addi	r2,r2,45
  81d18c:	1085883a 	add	r2,r2,r2
  81d190:	1085883a 	add	r2,r2,r2
  81d194:	2085883a 	add	r2,r4,r2
  81d198:	10c00015 	stw	r3,0(r2)
  81d19c:	0001883a 	nop
  81d1a0:	00000706 	br	81d1c0 <start_pass_huff_decoder+0xbf0>
  81d1a4:	e0fff717 	ldw	r3,-36(fp)
  81d1a8:	e0bff417 	ldw	r2,-48(fp)
  81d1ac:	10800b44 	addi	r2,r2,45
  81d1b0:	1085883a 	add	r2,r2,r2
  81d1b4:	1085883a 	add	r2,r2,r2
  81d1b8:	1885883a 	add	r2,r3,r2
  81d1bc:	10000015 	stw	zero,0(r2)
  81d1c0:	e0bff417 	ldw	r2,-48(fp)
  81d1c4:	10800044 	addi	r2,r2,1
  81d1c8:	e0bff415 	stw	r2,-48(fp)
  81d1cc:	e0bffd17 	ldw	r2,-12(fp)
  81d1d0:	10805c17 	ldw	r2,368(r2)
  81d1d4:	e0fff417 	ldw	r3,-48(fp)
  81d1d8:	18be7816 	blt	r3,r2,81cbbc <__alt_mem_epcs_flash_controller_0+0xff813bbc>
  81d1dc:	e0bff717 	ldw	r2,-36(fp)
  81d1e0:	10000415 	stw	zero,16(r2)
  81d1e4:	e0bff717 	ldw	r2,-36(fp)
  81d1e8:	10000315 	stw	zero,12(r2)
  81d1ec:	e0bff717 	ldw	r2,-36(fp)
  81d1f0:	10000a15 	stw	zero,40(r2)
  81d1f4:	e0bffd17 	ldw	r2,-12(fp)
  81d1f8:	10c04617 	ldw	r3,280(r2)
  81d1fc:	e0bff717 	ldw	r2,-36(fp)
  81d200:	10c00b15 	stw	r3,44(r2)
  81d204:	0001883a 	nop
  81d208:	e6fffe04 	addi	sp,fp,-8
  81d20c:	dfc00317 	ldw	ra,12(sp)
  81d210:	df000217 	ldw	fp,8(sp)
  81d214:	dc400117 	ldw	r17,4(sp)
  81d218:	dc000017 	ldw	r16,0(sp)
  81d21c:	dec00404 	addi	sp,sp,16
  81d220:	f800283a 	ret

0081d224 <jinit_huff_decoder>:
  81d224:	defff904 	addi	sp,sp,-28
  81d228:	dfc00615 	stw	ra,24(sp)
  81d22c:	df000515 	stw	fp,20(sp)
  81d230:	df000504 	addi	fp,sp,20
  81d234:	e13fff15 	stw	r4,-4(fp)
  81d238:	e0bfff17 	ldw	r2,-4(fp)
  81d23c:	10800117 	ldw	r2,4(r2)
  81d240:	10800017 	ldw	r2,0(r2)
  81d244:	01803704 	movi	r6,220
  81d248:	01400044 	movi	r5,1
  81d24c:	e13fff17 	ldw	r4,-4(fp)
  81d250:	103ee83a 	callr	r2
  81d254:	e0bffe15 	stw	r2,-8(fp)
  81d258:	e0fffe17 	ldw	r3,-8(fp)
  81d25c:	e0bfff17 	ldw	r2,-4(fp)
  81d260:	10c07515 	stw	r3,468(r2)
  81d264:	e0fffe17 	ldw	r3,-8(fp)
  81d268:	008020b4 	movhi	r2,130
  81d26c:	10b17404 	addi	r2,r2,-14896
  81d270:	18800015 	stw	r2,0(r3)
  81d274:	e0fffe17 	ldw	r3,-8(fp)
  81d278:	008020b4 	movhi	r2,130
  81d27c:	10a99204 	addi	r2,r2,-22968
  81d280:	18800215 	stw	r2,8(r3)
  81d284:	e0bfff17 	ldw	r2,-4(fp)
  81d288:	10803817 	ldw	r2,224(r2)
  81d28c:	10003626 	beq	r2,zero,81d368 <jinit_huff_decoder+0x144>
  81d290:	e0bfff17 	ldw	r2,-4(fp)
  81d294:	10800117 	ldw	r2,4(r2)
  81d298:	10800017 	ldw	r2,0(r2)
  81d29c:	e0ffff17 	ldw	r3,-4(fp)
  81d2a0:	18c00917 	ldw	r3,36(r3)
  81d2a4:	1806923a 	slli	r3,r3,8
  81d2a8:	180d883a 	mov	r6,r3
  81d2ac:	01400044 	movi	r5,1
  81d2b0:	e13fff17 	ldw	r4,-4(fp)
  81d2b4:	103ee83a 	callr	r2
  81d2b8:	1007883a 	mov	r3,r2
  81d2bc:	e0bfff17 	ldw	r2,-4(fp)
  81d2c0:	10c02815 	stw	r3,160(r2)
  81d2c4:	e0bfff17 	ldw	r2,-4(fp)
  81d2c8:	10802817 	ldw	r2,160(r2)
  81d2cc:	e0bffc15 	stw	r2,-16(fp)
  81d2d0:	e03ffd15 	stw	zero,-12(fp)
  81d2d4:	00001006 	br	81d318 <jinit_huff_decoder+0xf4>
  81d2d8:	e03ffb15 	stw	zero,-20(fp)
  81d2dc:	00000806 	br	81d300 <jinit_huff_decoder+0xdc>
  81d2e0:	e0bffc17 	ldw	r2,-16(fp)
  81d2e4:	10c00104 	addi	r3,r2,4
  81d2e8:	e0fffc15 	stw	r3,-16(fp)
  81d2ec:	00ffffc4 	movi	r3,-1
  81d2f0:	10c00015 	stw	r3,0(r2)
  81d2f4:	e0bffb17 	ldw	r2,-20(fp)
  81d2f8:	10800044 	addi	r2,r2,1
  81d2fc:	e0bffb15 	stw	r2,-20(fp)
  81d300:	e0bffb17 	ldw	r2,-20(fp)
  81d304:	10801010 	cmplti	r2,r2,64
  81d308:	103ff51e 	bne	r2,zero,81d2e0 <__alt_mem_epcs_flash_controller_0+0xff8142e0>
  81d30c:	e0bffd17 	ldw	r2,-12(fp)
  81d310:	10800044 	addi	r2,r2,1
  81d314:	e0bffd15 	stw	r2,-12(fp)
  81d318:	e0bfff17 	ldw	r2,-4(fp)
  81d31c:	10800917 	ldw	r2,36(r2)
  81d320:	e0fffd17 	ldw	r3,-12(fp)
  81d324:	18bfec16 	blt	r3,r2,81d2d8 <__alt_mem_epcs_flash_controller_0+0xff8142d8>
  81d328:	e03ffb15 	stw	zero,-20(fp)
  81d32c:	00000a06 	br	81d358 <jinit_huff_decoder+0x134>
  81d330:	e0fffe17 	ldw	r3,-8(fp)
  81d334:	e0bffb17 	ldw	r2,-20(fp)
  81d338:	10800304 	addi	r2,r2,12
  81d33c:	1085883a 	add	r2,r2,r2
  81d340:	1085883a 	add	r2,r2,r2
  81d344:	1885883a 	add	r2,r3,r2
  81d348:	10000015 	stw	zero,0(r2)
  81d34c:	e0bffb17 	ldw	r2,-20(fp)
  81d350:	10800044 	addi	r2,r2,1
  81d354:	e0bffb15 	stw	r2,-20(fp)
  81d358:	e0bffb17 	ldw	r2,-20(fp)
  81d35c:	10800110 	cmplti	r2,r2,4
  81d360:	103ff31e 	bne	r2,zero,81d330 <__alt_mem_epcs_flash_controller_0+0xff814330>
  81d364:	00001d06 	br	81d3dc <jinit_huff_decoder+0x1b8>
  81d368:	e03ffb15 	stw	zero,-20(fp)
  81d36c:	00001806 	br	81d3d0 <jinit_huff_decoder+0x1ac>
  81d370:	e0fffe17 	ldw	r3,-8(fp)
  81d374:	e0bffb17 	ldw	r2,-20(fp)
  81d378:	10800544 	addi	r2,r2,21
  81d37c:	1085883a 	add	r2,r2,r2
  81d380:	1085883a 	add	r2,r2,r2
  81d384:	1885883a 	add	r2,r3,r2
  81d388:	10000015 	stw	zero,0(r2)
  81d38c:	e0fffe17 	ldw	r3,-8(fp)
  81d390:	e0bffb17 	ldw	r2,-20(fp)
  81d394:	10800544 	addi	r2,r2,21
  81d398:	1085883a 	add	r2,r2,r2
  81d39c:	1085883a 	add	r2,r2,r2
  81d3a0:	1885883a 	add	r2,r3,r2
  81d3a4:	10c00017 	ldw	r3,0(r2)
  81d3a8:	e13ffe17 	ldw	r4,-8(fp)
  81d3ac:	e0bffb17 	ldw	r2,-20(fp)
  81d3b0:	10800444 	addi	r2,r2,17
  81d3b4:	1085883a 	add	r2,r2,r2
  81d3b8:	1085883a 	add	r2,r2,r2
  81d3bc:	2085883a 	add	r2,r4,r2
  81d3c0:	10c00015 	stw	r3,0(r2)
  81d3c4:	e0bffb17 	ldw	r2,-20(fp)
  81d3c8:	10800044 	addi	r2,r2,1
  81d3cc:	e0bffb15 	stw	r2,-20(fp)
  81d3d0:	e0bffb17 	ldw	r2,-20(fp)
  81d3d4:	10800110 	cmplti	r2,r2,4
  81d3d8:	103fe51e 	bne	r2,zero,81d370 <__alt_mem_epcs_flash_controller_0+0xff814370>
  81d3dc:	0001883a 	nop
  81d3e0:	e037883a 	mov	sp,fp
  81d3e4:	dfc00117 	ldw	ra,4(sp)
  81d3e8:	df000017 	ldw	fp,0(sp)
  81d3ec:	dec00204 	addi	sp,sp,8
  81d3f0:	f800283a 	ret

0081d3f4 <alloc_funny_pointers>:
  81d3f4:	defff604 	addi	sp,sp,-40
  81d3f8:	dfc00915 	stw	ra,36(sp)
  81d3fc:	df000815 	stw	fp,32(sp)
  81d400:	dc000715 	stw	r16,28(sp)
  81d404:	df000804 	addi	fp,sp,32
  81d408:	e13ffe15 	stw	r4,-8(fp)
  81d40c:	e0bffe17 	ldw	r2,-8(fp)
  81d410:	10807017 	ldw	r2,448(r2)
  81d414:	e0bffa15 	stw	r2,-24(fp)
  81d418:	e0bffe17 	ldw	r2,-8(fp)
  81d41c:	10805217 	ldw	r2,328(r2)
  81d420:	e0bffb15 	stw	r2,-20(fp)
  81d424:	e0bffe17 	ldw	r2,-8(fp)
  81d428:	10800117 	ldw	r2,4(r2)
  81d42c:	10800017 	ldw	r2,0(r2)
  81d430:	e0fffe17 	ldw	r3,-8(fp)
  81d434:	18c00917 	ldw	r3,36(r3)
  81d438:	180690fa 	slli	r3,r3,3
  81d43c:	180d883a 	mov	r6,r3
  81d440:	01400044 	movi	r5,1
  81d444:	e13ffe17 	ldw	r4,-8(fp)
  81d448:	103ee83a 	callr	r2
  81d44c:	1007883a 	mov	r3,r2
  81d450:	e0bffa17 	ldw	r2,-24(fp)
  81d454:	10c00e15 	stw	r3,56(r2)
  81d458:	e0bffa17 	ldw	r2,-24(fp)
  81d45c:	10c00e17 	ldw	r3,56(r2)
  81d460:	e0bffe17 	ldw	r2,-8(fp)
  81d464:	10800917 	ldw	r2,36(r2)
  81d468:	1085883a 	add	r2,r2,r2
  81d46c:	1085883a 	add	r2,r2,r2
  81d470:	1887883a 	add	r3,r3,r2
  81d474:	e0bffa17 	ldw	r2,-24(fp)
  81d478:	10c00f15 	stw	r3,60(r2)
  81d47c:	e03ff815 	stw	zero,-32(fp)
  81d480:	e0bffe17 	ldw	r2,-8(fp)
  81d484:	10803617 	ldw	r2,216(r2)
  81d488:	e0bff915 	stw	r2,-28(fp)
  81d48c:	00004406 	br	81d5a0 <alloc_funny_pointers+0x1ac>
  81d490:	e0bff917 	ldw	r2,-28(fp)
  81d494:	10c00317 	ldw	r3,12(r2)
  81d498:	e0bff917 	ldw	r2,-28(fp)
  81d49c:	10800a17 	ldw	r2,40(r2)
  81d4a0:	100b883a 	mov	r5,r2
  81d4a4:	1809883a 	mov	r4,r3
  81d4a8:	08301e80 	call	8301e8 <__mulsi3>
  81d4ac:	1007883a 	mov	r3,r2
  81d4b0:	e0bffe17 	ldw	r2,-8(fp)
  81d4b4:	10805217 	ldw	r2,328(r2)
  81d4b8:	100b883a 	mov	r5,r2
  81d4bc:	1809883a 	mov	r4,r3
  81d4c0:	08300340 	call	830034 <__divsi3>
  81d4c4:	e0bffc15 	stw	r2,-16(fp)
  81d4c8:	e0bffe17 	ldw	r2,-8(fp)
  81d4cc:	10800117 	ldw	r2,4(r2)
  81d4d0:	14000017 	ldw	r16,0(r2)
  81d4d4:	e0bffb17 	ldw	r2,-20(fp)
  81d4d8:	10800104 	addi	r2,r2,4
  81d4dc:	e17ffc17 	ldw	r5,-16(fp)
  81d4e0:	1009883a 	mov	r4,r2
  81d4e4:	08301e80 	call	8301e8 <__mulsi3>
  81d4e8:	100490fa 	slli	r2,r2,3
  81d4ec:	100d883a 	mov	r6,r2
  81d4f0:	01400044 	movi	r5,1
  81d4f4:	e13ffe17 	ldw	r4,-8(fp)
  81d4f8:	803ee83a 	callr	r16
  81d4fc:	e0bffd15 	stw	r2,-12(fp)
  81d500:	e0bffc17 	ldw	r2,-16(fp)
  81d504:	1085883a 	add	r2,r2,r2
  81d508:	1085883a 	add	r2,r2,r2
  81d50c:	1007883a 	mov	r3,r2
  81d510:	e0bffd17 	ldw	r2,-12(fp)
  81d514:	10c5883a 	add	r2,r2,r3
  81d518:	e0bffd15 	stw	r2,-12(fp)
  81d51c:	e0bffa17 	ldw	r2,-24(fp)
  81d520:	10c00e17 	ldw	r3,56(r2)
  81d524:	e0bff817 	ldw	r2,-32(fp)
  81d528:	1085883a 	add	r2,r2,r2
  81d52c:	1085883a 	add	r2,r2,r2
  81d530:	1885883a 	add	r2,r3,r2
  81d534:	e0fffd17 	ldw	r3,-12(fp)
  81d538:	10c00015 	stw	r3,0(r2)
  81d53c:	e0bffb17 	ldw	r2,-20(fp)
  81d540:	10800104 	addi	r2,r2,4
  81d544:	e17ffc17 	ldw	r5,-16(fp)
  81d548:	1009883a 	mov	r4,r2
  81d54c:	08301e80 	call	8301e8 <__mulsi3>
  81d550:	1085883a 	add	r2,r2,r2
  81d554:	1085883a 	add	r2,r2,r2
  81d558:	1007883a 	mov	r3,r2
  81d55c:	e0bffd17 	ldw	r2,-12(fp)
  81d560:	10c5883a 	add	r2,r2,r3
  81d564:	e0bffd15 	stw	r2,-12(fp)
  81d568:	e0bffa17 	ldw	r2,-24(fp)
  81d56c:	10c00f17 	ldw	r3,60(r2)
  81d570:	e0bff817 	ldw	r2,-32(fp)
  81d574:	1085883a 	add	r2,r2,r2
  81d578:	1085883a 	add	r2,r2,r2
  81d57c:	1885883a 	add	r2,r3,r2
  81d580:	e0fffd17 	ldw	r3,-12(fp)
  81d584:	10c00015 	stw	r3,0(r2)
  81d588:	e0bff817 	ldw	r2,-32(fp)
  81d58c:	10800044 	addi	r2,r2,1
  81d590:	e0bff815 	stw	r2,-32(fp)
  81d594:	e0bff917 	ldw	r2,-28(fp)
  81d598:	10801604 	addi	r2,r2,88
  81d59c:	e0bff915 	stw	r2,-28(fp)
  81d5a0:	e0bffe17 	ldw	r2,-8(fp)
  81d5a4:	10800917 	ldw	r2,36(r2)
  81d5a8:	e0fff817 	ldw	r3,-32(fp)
  81d5ac:	18bfb816 	blt	r3,r2,81d490 <__alt_mem_epcs_flash_controller_0+0xff814490>
  81d5b0:	0001883a 	nop
  81d5b4:	e6ffff04 	addi	sp,fp,-4
  81d5b8:	dfc00217 	ldw	ra,8(sp)
  81d5bc:	df000117 	ldw	fp,4(sp)
  81d5c0:	dc000017 	ldw	r16,0(sp)
  81d5c4:	dec00304 	addi	sp,sp,12
  81d5c8:	f800283a 	ret

0081d5cc <make_funny_pointers>:
  81d5cc:	defff304 	addi	sp,sp,-52
  81d5d0:	dfc00c15 	stw	ra,48(sp)
  81d5d4:	df000b15 	stw	fp,44(sp)
  81d5d8:	dc000a15 	stw	r16,40(sp)
  81d5dc:	df000b04 	addi	fp,sp,44
  81d5e0:	e13ffe15 	stw	r4,-8(fp)
  81d5e4:	e0bffe17 	ldw	r2,-8(fp)
  81d5e8:	10807017 	ldw	r2,448(r2)
  81d5ec:	e0bff815 	stw	r2,-32(fp)
  81d5f0:	e0bffe17 	ldw	r2,-8(fp)
  81d5f4:	10805217 	ldw	r2,328(r2)
  81d5f8:	e0bff915 	stw	r2,-28(fp)
  81d5fc:	e03ff515 	stw	zero,-44(fp)
  81d600:	e0bffe17 	ldw	r2,-8(fp)
  81d604:	10803617 	ldw	r2,216(r2)
  81d608:	e0bff715 	stw	r2,-36(fp)
  81d60c:	0000a006 	br	81d890 <make_funny_pointers+0x2c4>
  81d610:	e0bff717 	ldw	r2,-36(fp)
  81d614:	10c00317 	ldw	r3,12(r2)
  81d618:	e0bff717 	ldw	r2,-36(fp)
  81d61c:	10800a17 	ldw	r2,40(r2)
  81d620:	100b883a 	mov	r5,r2
  81d624:	1809883a 	mov	r4,r3
  81d628:	08301e80 	call	8301e8 <__mulsi3>
  81d62c:	1007883a 	mov	r3,r2
  81d630:	e0bffe17 	ldw	r2,-8(fp)
  81d634:	10805217 	ldw	r2,328(r2)
  81d638:	100b883a 	mov	r5,r2
  81d63c:	1809883a 	mov	r4,r3
  81d640:	08300340 	call	830034 <__divsi3>
  81d644:	e0bffa15 	stw	r2,-24(fp)
  81d648:	e0bff817 	ldw	r2,-32(fp)
  81d64c:	10c00e17 	ldw	r3,56(r2)
  81d650:	e0bff517 	ldw	r2,-44(fp)
  81d654:	1085883a 	add	r2,r2,r2
  81d658:	1085883a 	add	r2,r2,r2
  81d65c:	1885883a 	add	r2,r3,r2
  81d660:	10800017 	ldw	r2,0(r2)
  81d664:	e0bffb15 	stw	r2,-20(fp)
  81d668:	e0bff817 	ldw	r2,-32(fp)
  81d66c:	10c00f17 	ldw	r3,60(r2)
  81d670:	e0bff517 	ldw	r2,-44(fp)
  81d674:	1085883a 	add	r2,r2,r2
  81d678:	1085883a 	add	r2,r2,r2
  81d67c:	1885883a 	add	r2,r3,r2
  81d680:	10800017 	ldw	r2,0(r2)
  81d684:	e0bffc15 	stw	r2,-16(fp)
  81d688:	e0fff817 	ldw	r3,-32(fp)
  81d68c:	e0bff517 	ldw	r2,-44(fp)
  81d690:	10800084 	addi	r2,r2,2
  81d694:	1085883a 	add	r2,r2,r2
  81d698:	1085883a 	add	r2,r2,r2
  81d69c:	1885883a 	add	r2,r3,r2
  81d6a0:	10800017 	ldw	r2,0(r2)
  81d6a4:	e0bffd15 	stw	r2,-12(fp)
  81d6a8:	e03ff615 	stw	zero,-40(fp)
  81d6ac:	00001906 	br	81d714 <make_funny_pointers+0x148>
  81d6b0:	e0bff617 	ldw	r2,-40(fp)
  81d6b4:	1085883a 	add	r2,r2,r2
  81d6b8:	1085883a 	add	r2,r2,r2
  81d6bc:	1007883a 	mov	r3,r2
  81d6c0:	e0bffb17 	ldw	r2,-20(fp)
  81d6c4:	10c9883a 	add	r4,r2,r3
  81d6c8:	e0bff617 	ldw	r2,-40(fp)
  81d6cc:	1085883a 	add	r2,r2,r2
  81d6d0:	1085883a 	add	r2,r2,r2
  81d6d4:	1007883a 	mov	r3,r2
  81d6d8:	e0bffc17 	ldw	r2,-16(fp)
  81d6dc:	10c5883a 	add	r2,r2,r3
  81d6e0:	e0fff617 	ldw	r3,-40(fp)
  81d6e4:	18c7883a 	add	r3,r3,r3
  81d6e8:	18c7883a 	add	r3,r3,r3
  81d6ec:	180b883a 	mov	r5,r3
  81d6f0:	e0fffd17 	ldw	r3,-12(fp)
  81d6f4:	1947883a 	add	r3,r3,r5
  81d6f8:	18c00017 	ldw	r3,0(r3)
  81d6fc:	10c00015 	stw	r3,0(r2)
  81d700:	10800017 	ldw	r2,0(r2)
  81d704:	20800015 	stw	r2,0(r4)
  81d708:	e0bff617 	ldw	r2,-40(fp)
  81d70c:	10800044 	addi	r2,r2,1
  81d710:	e0bff615 	stw	r2,-40(fp)
  81d714:	e0bff917 	ldw	r2,-28(fp)
  81d718:	10800084 	addi	r2,r2,2
  81d71c:	e17ffa17 	ldw	r5,-24(fp)
  81d720:	1009883a 	mov	r4,r2
  81d724:	08301e80 	call	8301e8 <__mulsi3>
  81d728:	1007883a 	mov	r3,r2
  81d72c:	e0bff617 	ldw	r2,-40(fp)
  81d730:	10ffdf16 	blt	r2,r3,81d6b0 <__alt_mem_epcs_flash_controller_0+0xff8146b0>
  81d734:	e03ff615 	stw	zero,-40(fp)
  81d738:	00003706 	br	81d818 <make_funny_pointers+0x24c>
  81d73c:	e0bff917 	ldw	r2,-28(fp)
  81d740:	10bfff84 	addi	r2,r2,-2
  81d744:	e17ffa17 	ldw	r5,-24(fp)
  81d748:	1009883a 	mov	r4,r2
  81d74c:	08301e80 	call	8301e8 <__mulsi3>
  81d750:	1007883a 	mov	r3,r2
  81d754:	e0bff617 	ldw	r2,-40(fp)
  81d758:	1885883a 	add	r2,r3,r2
  81d75c:	1085883a 	add	r2,r2,r2
  81d760:	1085883a 	add	r2,r2,r2
  81d764:	1007883a 	mov	r3,r2
  81d768:	e0bffc17 	ldw	r2,-16(fp)
  81d76c:	10e1883a 	add	r16,r2,r3
  81d770:	e17ff917 	ldw	r5,-28(fp)
  81d774:	e13ffa17 	ldw	r4,-24(fp)
  81d778:	08301e80 	call	8301e8 <__mulsi3>
  81d77c:	1007883a 	mov	r3,r2
  81d780:	e0bff617 	ldw	r2,-40(fp)
  81d784:	1885883a 	add	r2,r3,r2
  81d788:	1085883a 	add	r2,r2,r2
  81d78c:	1085883a 	add	r2,r2,r2
  81d790:	1007883a 	mov	r3,r2
  81d794:	e0bffd17 	ldw	r2,-12(fp)
  81d798:	10c5883a 	add	r2,r2,r3
  81d79c:	10800017 	ldw	r2,0(r2)
  81d7a0:	80800015 	stw	r2,0(r16)
  81d7a4:	e17ff917 	ldw	r5,-28(fp)
  81d7a8:	e13ffa17 	ldw	r4,-24(fp)
  81d7ac:	08301e80 	call	8301e8 <__mulsi3>
  81d7b0:	1007883a 	mov	r3,r2
  81d7b4:	e0bff617 	ldw	r2,-40(fp)
  81d7b8:	1885883a 	add	r2,r3,r2
  81d7bc:	1085883a 	add	r2,r2,r2
  81d7c0:	1085883a 	add	r2,r2,r2
  81d7c4:	1007883a 	mov	r3,r2
  81d7c8:	e0bffc17 	ldw	r2,-16(fp)
  81d7cc:	10e1883a 	add	r16,r2,r3
  81d7d0:	e0bff917 	ldw	r2,-28(fp)
  81d7d4:	10bfff84 	addi	r2,r2,-2
  81d7d8:	e17ffa17 	ldw	r5,-24(fp)
  81d7dc:	1009883a 	mov	r4,r2
  81d7e0:	08301e80 	call	8301e8 <__mulsi3>
  81d7e4:	1007883a 	mov	r3,r2
  81d7e8:	e0bff617 	ldw	r2,-40(fp)
  81d7ec:	1885883a 	add	r2,r3,r2
  81d7f0:	1085883a 	add	r2,r2,r2
  81d7f4:	1085883a 	add	r2,r2,r2
  81d7f8:	1007883a 	mov	r3,r2
  81d7fc:	e0bffd17 	ldw	r2,-12(fp)
  81d800:	10c5883a 	add	r2,r2,r3
  81d804:	10800017 	ldw	r2,0(r2)
  81d808:	80800015 	stw	r2,0(r16)
  81d80c:	e0bff617 	ldw	r2,-40(fp)
  81d810:	10800044 	addi	r2,r2,1
  81d814:	e0bff615 	stw	r2,-40(fp)
  81d818:	e0bffa17 	ldw	r2,-24(fp)
  81d81c:	1085883a 	add	r2,r2,r2
  81d820:	1007883a 	mov	r3,r2
  81d824:	e0bff617 	ldw	r2,-40(fp)
  81d828:	10ffc416 	blt	r2,r3,81d73c <__alt_mem_epcs_flash_controller_0+0xff81473c>
  81d82c:	e03ff615 	stw	zero,-40(fp)
  81d830:	00000e06 	br	81d86c <make_funny_pointers+0x2a0>
  81d834:	e0fff617 	ldw	r3,-40(fp)
  81d838:	e0bffa17 	ldw	r2,-24(fp)
  81d83c:	1885c83a 	sub	r2,r3,r2
  81d840:	1085883a 	add	r2,r2,r2
  81d844:	1085883a 	add	r2,r2,r2
  81d848:	1007883a 	mov	r3,r2
  81d84c:	e0bffb17 	ldw	r2,-20(fp)
  81d850:	10c5883a 	add	r2,r2,r3
  81d854:	e0fffb17 	ldw	r3,-20(fp)
  81d858:	18c00017 	ldw	r3,0(r3)
  81d85c:	10c00015 	stw	r3,0(r2)
  81d860:	e0bff617 	ldw	r2,-40(fp)
  81d864:	10800044 	addi	r2,r2,1
  81d868:	e0bff615 	stw	r2,-40(fp)
  81d86c:	e0fff617 	ldw	r3,-40(fp)
  81d870:	e0bffa17 	ldw	r2,-24(fp)
  81d874:	18bfef16 	blt	r3,r2,81d834 <__alt_mem_epcs_flash_controller_0+0xff814834>
  81d878:	e0bff517 	ldw	r2,-44(fp)
  81d87c:	10800044 	addi	r2,r2,1
  81d880:	e0bff515 	stw	r2,-44(fp)
  81d884:	e0bff717 	ldw	r2,-36(fp)
  81d888:	10801604 	addi	r2,r2,88
  81d88c:	e0bff715 	stw	r2,-36(fp)
  81d890:	e0bffe17 	ldw	r2,-8(fp)
  81d894:	10800917 	ldw	r2,36(r2)
  81d898:	e0fff517 	ldw	r3,-44(fp)
  81d89c:	18bf5c16 	blt	r3,r2,81d610 <__alt_mem_epcs_flash_controller_0+0xff814610>
  81d8a0:	0001883a 	nop
  81d8a4:	e6ffff04 	addi	sp,fp,-4
  81d8a8:	dfc00217 	ldw	ra,8(sp)
  81d8ac:	df000117 	ldw	fp,4(sp)
  81d8b0:	dc000017 	ldw	r16,0(sp)
  81d8b4:	dec00304 	addi	sp,sp,12
  81d8b8:	f800283a 	ret

0081d8bc <set_wraparound_pointers>:
  81d8bc:	defff404 	addi	sp,sp,-48
  81d8c0:	dfc00b15 	stw	ra,44(sp)
  81d8c4:	df000a15 	stw	fp,40(sp)
  81d8c8:	dc000915 	stw	r16,36(sp)
  81d8cc:	df000a04 	addi	fp,sp,40
  81d8d0:	e13ffe15 	stw	r4,-8(fp)
  81d8d4:	e0bffe17 	ldw	r2,-8(fp)
  81d8d8:	10807017 	ldw	r2,448(r2)
  81d8dc:	e0bff915 	stw	r2,-28(fp)
  81d8e0:	e0bffe17 	ldw	r2,-8(fp)
  81d8e4:	10805217 	ldw	r2,328(r2)
  81d8e8:	e0bffa15 	stw	r2,-24(fp)
  81d8ec:	e03ff615 	stw	zero,-40(fp)
  81d8f0:	e0bffe17 	ldw	r2,-8(fp)
  81d8f4:	10803617 	ldw	r2,216(r2)
  81d8f8:	e0bff815 	stw	r2,-32(fp)
  81d8fc:	00008406 	br	81db10 <set_wraparound_pointers+0x254>
  81d900:	e0bff817 	ldw	r2,-32(fp)
  81d904:	10c00317 	ldw	r3,12(r2)
  81d908:	e0bff817 	ldw	r2,-32(fp)
  81d90c:	10800a17 	ldw	r2,40(r2)
  81d910:	100b883a 	mov	r5,r2
  81d914:	1809883a 	mov	r4,r3
  81d918:	08301e80 	call	8301e8 <__mulsi3>
  81d91c:	1007883a 	mov	r3,r2
  81d920:	e0bffe17 	ldw	r2,-8(fp)
  81d924:	10805217 	ldw	r2,328(r2)
  81d928:	100b883a 	mov	r5,r2
  81d92c:	1809883a 	mov	r4,r3
  81d930:	08300340 	call	830034 <__divsi3>
  81d934:	e0bffb15 	stw	r2,-20(fp)
  81d938:	e0bff917 	ldw	r2,-28(fp)
  81d93c:	10c00e17 	ldw	r3,56(r2)
  81d940:	e0bff617 	ldw	r2,-40(fp)
  81d944:	1085883a 	add	r2,r2,r2
  81d948:	1085883a 	add	r2,r2,r2
  81d94c:	1885883a 	add	r2,r3,r2
  81d950:	10800017 	ldw	r2,0(r2)
  81d954:	e0bffc15 	stw	r2,-16(fp)
  81d958:	e0bff917 	ldw	r2,-28(fp)
  81d95c:	10c00f17 	ldw	r3,60(r2)
  81d960:	e0bff617 	ldw	r2,-40(fp)
  81d964:	1085883a 	add	r2,r2,r2
  81d968:	1085883a 	add	r2,r2,r2
  81d96c:	1885883a 	add	r2,r3,r2
  81d970:	10800017 	ldw	r2,0(r2)
  81d974:	e0bffd15 	stw	r2,-12(fp)
  81d978:	e03ff715 	stw	zero,-36(fp)
  81d97c:	00005b06 	br	81daec <set_wraparound_pointers+0x230>
  81d980:	e0fff717 	ldw	r3,-36(fp)
  81d984:	e0bffb17 	ldw	r2,-20(fp)
  81d988:	1885c83a 	sub	r2,r3,r2
  81d98c:	1085883a 	add	r2,r2,r2
  81d990:	1085883a 	add	r2,r2,r2
  81d994:	1007883a 	mov	r3,r2
  81d998:	e0bffc17 	ldw	r2,-16(fp)
  81d99c:	10e1883a 	add	r16,r2,r3
  81d9a0:	e0bffa17 	ldw	r2,-24(fp)
  81d9a4:	10800044 	addi	r2,r2,1
  81d9a8:	e17ffb17 	ldw	r5,-20(fp)
  81d9ac:	1009883a 	mov	r4,r2
  81d9b0:	08301e80 	call	8301e8 <__mulsi3>
  81d9b4:	1007883a 	mov	r3,r2
  81d9b8:	e0bff717 	ldw	r2,-36(fp)
  81d9bc:	1885883a 	add	r2,r3,r2
  81d9c0:	1085883a 	add	r2,r2,r2
  81d9c4:	1085883a 	add	r2,r2,r2
  81d9c8:	1007883a 	mov	r3,r2
  81d9cc:	e0bffc17 	ldw	r2,-16(fp)
  81d9d0:	10c5883a 	add	r2,r2,r3
  81d9d4:	10800017 	ldw	r2,0(r2)
  81d9d8:	80800015 	stw	r2,0(r16)
  81d9dc:	e0fff717 	ldw	r3,-36(fp)
  81d9e0:	e0bffb17 	ldw	r2,-20(fp)
  81d9e4:	1885c83a 	sub	r2,r3,r2
  81d9e8:	1085883a 	add	r2,r2,r2
  81d9ec:	1085883a 	add	r2,r2,r2
  81d9f0:	1007883a 	mov	r3,r2
  81d9f4:	e0bffd17 	ldw	r2,-12(fp)
  81d9f8:	10e1883a 	add	r16,r2,r3
  81d9fc:	e0bffa17 	ldw	r2,-24(fp)
  81da00:	10800044 	addi	r2,r2,1
  81da04:	e17ffb17 	ldw	r5,-20(fp)
  81da08:	1009883a 	mov	r4,r2
  81da0c:	08301e80 	call	8301e8 <__mulsi3>
  81da10:	1007883a 	mov	r3,r2
  81da14:	e0bff717 	ldw	r2,-36(fp)
  81da18:	1885883a 	add	r2,r3,r2
  81da1c:	1085883a 	add	r2,r2,r2
  81da20:	1085883a 	add	r2,r2,r2
  81da24:	1007883a 	mov	r3,r2
  81da28:	e0bffd17 	ldw	r2,-12(fp)
  81da2c:	10c5883a 	add	r2,r2,r3
  81da30:	10800017 	ldw	r2,0(r2)
  81da34:	80800015 	stw	r2,0(r16)
  81da38:	e0bffa17 	ldw	r2,-24(fp)
  81da3c:	10800084 	addi	r2,r2,2
  81da40:	e17ffb17 	ldw	r5,-20(fp)
  81da44:	1009883a 	mov	r4,r2
  81da48:	08301e80 	call	8301e8 <__mulsi3>
  81da4c:	1007883a 	mov	r3,r2
  81da50:	e0bff717 	ldw	r2,-36(fp)
  81da54:	1885883a 	add	r2,r3,r2
  81da58:	1085883a 	add	r2,r2,r2
  81da5c:	1085883a 	add	r2,r2,r2
  81da60:	1007883a 	mov	r3,r2
  81da64:	e0bffc17 	ldw	r2,-16(fp)
  81da68:	10c7883a 	add	r3,r2,r3
  81da6c:	e0bff717 	ldw	r2,-36(fp)
  81da70:	1085883a 	add	r2,r2,r2
  81da74:	1085883a 	add	r2,r2,r2
  81da78:	1009883a 	mov	r4,r2
  81da7c:	e0bffc17 	ldw	r2,-16(fp)
  81da80:	1105883a 	add	r2,r2,r4
  81da84:	10800017 	ldw	r2,0(r2)
  81da88:	18800015 	stw	r2,0(r3)
  81da8c:	e0bffa17 	ldw	r2,-24(fp)
  81da90:	10800084 	addi	r2,r2,2
  81da94:	e17ffb17 	ldw	r5,-20(fp)
  81da98:	1009883a 	mov	r4,r2
  81da9c:	08301e80 	call	8301e8 <__mulsi3>
  81daa0:	1007883a 	mov	r3,r2
  81daa4:	e0bff717 	ldw	r2,-36(fp)
  81daa8:	1885883a 	add	r2,r3,r2
  81daac:	1085883a 	add	r2,r2,r2
  81dab0:	1085883a 	add	r2,r2,r2
  81dab4:	1007883a 	mov	r3,r2
  81dab8:	e0bffd17 	ldw	r2,-12(fp)
  81dabc:	10c7883a 	add	r3,r2,r3
  81dac0:	e0bff717 	ldw	r2,-36(fp)
  81dac4:	1085883a 	add	r2,r2,r2
  81dac8:	1085883a 	add	r2,r2,r2
  81dacc:	1009883a 	mov	r4,r2
  81dad0:	e0bffd17 	ldw	r2,-12(fp)
  81dad4:	1105883a 	add	r2,r2,r4
  81dad8:	10800017 	ldw	r2,0(r2)
  81dadc:	18800015 	stw	r2,0(r3)
  81dae0:	e0bff717 	ldw	r2,-36(fp)
  81dae4:	10800044 	addi	r2,r2,1
  81dae8:	e0bff715 	stw	r2,-36(fp)
  81daec:	e0fff717 	ldw	r3,-36(fp)
  81daf0:	e0bffb17 	ldw	r2,-20(fp)
  81daf4:	18bfa216 	blt	r3,r2,81d980 <__alt_mem_epcs_flash_controller_0+0xff814980>
  81daf8:	e0bff617 	ldw	r2,-40(fp)
  81dafc:	10800044 	addi	r2,r2,1
  81db00:	e0bff615 	stw	r2,-40(fp)
  81db04:	e0bff817 	ldw	r2,-32(fp)
  81db08:	10801604 	addi	r2,r2,88
  81db0c:	e0bff815 	stw	r2,-32(fp)
  81db10:	e0bffe17 	ldw	r2,-8(fp)
  81db14:	10800917 	ldw	r2,36(r2)
  81db18:	e0fff617 	ldw	r3,-40(fp)
  81db1c:	18bf7816 	blt	r3,r2,81d900 <__alt_mem_epcs_flash_controller_0+0xff814900>
  81db20:	0001883a 	nop
  81db24:	e6ffff04 	addi	sp,fp,-4
  81db28:	dfc00217 	ldw	ra,8(sp)
  81db2c:	df000117 	ldw	fp,4(sp)
  81db30:	dc000017 	ldw	r16,0(sp)
  81db34:	dec00304 	addi	sp,sp,12
  81db38:	f800283a 	ret

0081db3c <set_bottom_pointers>:
  81db3c:	defff504 	addi	sp,sp,-44
  81db40:	dfc00a15 	stw	ra,40(sp)
  81db44:	df000915 	stw	fp,36(sp)
  81db48:	df000904 	addi	fp,sp,36
  81db4c:	e13fff15 	stw	r4,-4(fp)
  81db50:	e0bfff17 	ldw	r2,-4(fp)
  81db54:	10807017 	ldw	r2,448(r2)
  81db58:	e0bffb15 	stw	r2,-20(fp)
  81db5c:	e03ff715 	stw	zero,-36(fp)
  81db60:	e0bfff17 	ldw	r2,-4(fp)
  81db64:	10803617 	ldw	r2,216(r2)
  81db68:	e0bffa15 	stw	r2,-24(fp)
  81db6c:	00005506 	br	81dcc4 <set_bottom_pointers+0x188>
  81db70:	e0bffa17 	ldw	r2,-24(fp)
  81db74:	10c00317 	ldw	r3,12(r2)
  81db78:	e0bffa17 	ldw	r2,-24(fp)
  81db7c:	10800a17 	ldw	r2,40(r2)
  81db80:	100b883a 	mov	r5,r2
  81db84:	1809883a 	mov	r4,r3
  81db88:	08301e80 	call	8301e8 <__mulsi3>
  81db8c:	e0bffc15 	stw	r2,-16(fp)
  81db90:	e0bfff17 	ldw	r2,-4(fp)
  81db94:	10805217 	ldw	r2,328(r2)
  81db98:	100b883a 	mov	r5,r2
  81db9c:	e13ffc17 	ldw	r4,-16(fp)
  81dba0:	08300340 	call	830034 <__divsi3>
  81dba4:	e0bffd15 	stw	r2,-12(fp)
  81dba8:	e0bffa17 	ldw	r2,-24(fp)
  81dbac:	10800c17 	ldw	r2,48(r2)
  81dbb0:	e0fffc17 	ldw	r3,-16(fp)
  81dbb4:	180b883a 	mov	r5,r3
  81dbb8:	1009883a 	mov	r4,r2
  81dbbc:	08301900 	call	830190 <__umodsi3>
  81dbc0:	e0bff915 	stw	r2,-28(fp)
  81dbc4:	e0bff917 	ldw	r2,-28(fp)
  81dbc8:	1000021e 	bne	r2,zero,81dbd4 <set_bottom_pointers+0x98>
  81dbcc:	e0bffc17 	ldw	r2,-16(fp)
  81dbd0:	e0bff915 	stw	r2,-28(fp)
  81dbd4:	e0bff717 	ldw	r2,-36(fp)
  81dbd8:	1000091e 	bne	r2,zero,81dc00 <set_bottom_pointers+0xc4>
  81dbdc:	e0bff917 	ldw	r2,-28(fp)
  81dbe0:	10bfffc4 	addi	r2,r2,-1
  81dbe4:	e17ffd17 	ldw	r5,-12(fp)
  81dbe8:	1009883a 	mov	r4,r2
  81dbec:	08300340 	call	830034 <__divsi3>
  81dbf0:	10800044 	addi	r2,r2,1
  81dbf4:	1007883a 	mov	r3,r2
  81dbf8:	e0bffb17 	ldw	r2,-20(fp)
  81dbfc:	10c01215 	stw	r3,72(r2)
  81dc00:	e0bffb17 	ldw	r2,-20(fp)
  81dc04:	10801017 	ldw	r2,64(r2)
  81dc08:	e0fffb17 	ldw	r3,-20(fp)
  81dc0c:	10800384 	addi	r2,r2,14
  81dc10:	1085883a 	add	r2,r2,r2
  81dc14:	1085883a 	add	r2,r2,r2
  81dc18:	1885883a 	add	r2,r3,r2
  81dc1c:	10c00017 	ldw	r3,0(r2)
  81dc20:	e0bff717 	ldw	r2,-36(fp)
  81dc24:	1085883a 	add	r2,r2,r2
  81dc28:	1085883a 	add	r2,r2,r2
  81dc2c:	1885883a 	add	r2,r3,r2
  81dc30:	10800017 	ldw	r2,0(r2)
  81dc34:	e0bffe15 	stw	r2,-8(fp)
  81dc38:	e03ff815 	stw	zero,-32(fp)
  81dc3c:	00001606 	br	81dc98 <set_bottom_pointers+0x15c>
  81dc40:	e0fff917 	ldw	r3,-28(fp)
  81dc44:	e0bff817 	ldw	r2,-32(fp)
  81dc48:	1885883a 	add	r2,r3,r2
  81dc4c:	1085883a 	add	r2,r2,r2
  81dc50:	1085883a 	add	r2,r2,r2
  81dc54:	1007883a 	mov	r3,r2
  81dc58:	e0bffe17 	ldw	r2,-8(fp)
  81dc5c:	10c7883a 	add	r3,r2,r3
  81dc60:	e13ff917 	ldw	r4,-28(fp)
  81dc64:	00900034 	movhi	r2,16384
  81dc68:	10bfffc4 	addi	r2,r2,-1
  81dc6c:	2085883a 	add	r2,r4,r2
  81dc70:	1085883a 	add	r2,r2,r2
  81dc74:	1085883a 	add	r2,r2,r2
  81dc78:	1009883a 	mov	r4,r2
  81dc7c:	e0bffe17 	ldw	r2,-8(fp)
  81dc80:	1105883a 	add	r2,r2,r4
  81dc84:	10800017 	ldw	r2,0(r2)
  81dc88:	18800015 	stw	r2,0(r3)
  81dc8c:	e0bff817 	ldw	r2,-32(fp)
  81dc90:	10800044 	addi	r2,r2,1
  81dc94:	e0bff815 	stw	r2,-32(fp)
  81dc98:	e0bffd17 	ldw	r2,-12(fp)
  81dc9c:	1085883a 	add	r2,r2,r2
  81dca0:	1007883a 	mov	r3,r2
  81dca4:	e0bff817 	ldw	r2,-32(fp)
  81dca8:	10ffe516 	blt	r2,r3,81dc40 <__alt_mem_epcs_flash_controller_0+0xff814c40>
  81dcac:	e0bff717 	ldw	r2,-36(fp)
  81dcb0:	10800044 	addi	r2,r2,1
  81dcb4:	e0bff715 	stw	r2,-36(fp)
  81dcb8:	e0bffa17 	ldw	r2,-24(fp)
  81dcbc:	10801604 	addi	r2,r2,88
  81dcc0:	e0bffa15 	stw	r2,-24(fp)
  81dcc4:	e0bfff17 	ldw	r2,-4(fp)
  81dcc8:	10800917 	ldw	r2,36(r2)
  81dccc:	e0fff717 	ldw	r3,-36(fp)
  81dcd0:	18bfa716 	blt	r3,r2,81db70 <__alt_mem_epcs_flash_controller_0+0xff814b70>
  81dcd4:	0001883a 	nop
  81dcd8:	e037883a 	mov	sp,fp
  81dcdc:	dfc00117 	ldw	ra,4(sp)
  81dce0:	df000017 	ldw	fp,0(sp)
  81dce4:	dec00204 	addi	sp,sp,8
  81dce8:	f800283a 	ret

0081dcec <start_pass_main>:
  81dcec:	defffb04 	addi	sp,sp,-20
  81dcf0:	dfc00415 	stw	ra,16(sp)
  81dcf4:	df000315 	stw	fp,12(sp)
  81dcf8:	df000304 	addi	fp,sp,12
  81dcfc:	e13ffe15 	stw	r4,-8(fp)
  81dd00:	e17fff15 	stw	r5,-4(fp)
  81dd04:	e0bffe17 	ldw	r2,-8(fp)
  81dd08:	10807017 	ldw	r2,448(r2)
  81dd0c:	e0bffd15 	stw	r2,-12(fp)
  81dd10:	e0bfff17 	ldw	r2,-4(fp)
  81dd14:	10000326 	beq	r2,zero,81dd24 <start_pass_main+0x38>
  81dd18:	108000a0 	cmpeqi	r2,r2,2
  81dd1c:	10001b1e 	bne	r2,zero,81dd8c <start_pass_main+0xa0>
  81dd20:	00001f06 	br	81dda0 <start_pass_main+0xb4>
  81dd24:	e0bffe17 	ldw	r2,-8(fp)
  81dd28:	10807717 	ldw	r2,476(r2)
  81dd2c:	10800217 	ldw	r2,8(r2)
  81dd30:	10000d26 	beq	r2,zero,81dd68 <start_pass_main+0x7c>
  81dd34:	e0fffd17 	ldw	r3,-12(fp)
  81dd38:	008020b4 	movhi	r2,130
  81dd3c:	10b7b604 	addi	r2,r2,-8488
  81dd40:	18800115 	stw	r2,4(r3)
  81dd44:	e13ffe17 	ldw	r4,-8(fp)
  81dd48:	081d5cc0 	call	81d5cc <make_funny_pointers>
  81dd4c:	e0bffd17 	ldw	r2,-12(fp)
  81dd50:	10001015 	stw	zero,64(r2)
  81dd54:	e0bffd17 	ldw	r2,-12(fp)
  81dd58:	10001115 	stw	zero,68(r2)
  81dd5c:	e0bffd17 	ldw	r2,-12(fp)
  81dd60:	10001315 	stw	zero,76(r2)
  81dd64:	00000406 	br	81dd78 <start_pass_main+0x8c>
  81dd68:	e0fffd17 	ldw	r3,-12(fp)
  81dd6c:	008020b4 	movhi	r2,130
  81dd70:	10b77804 	addi	r2,r2,-8736
  81dd74:	18800115 	stw	r2,4(r3)
  81dd78:	e0bffd17 	ldw	r2,-12(fp)
  81dd7c:	10000c15 	stw	zero,48(r2)
  81dd80:	e0bffd17 	ldw	r2,-12(fp)
  81dd84:	10000d15 	stw	zero,52(r2)
  81dd88:	00000f06 	br	81ddc8 <start_pass_main+0xdc>
  81dd8c:	e0fffd17 	ldw	r3,-12(fp)
  81dd90:	008020b4 	movhi	r2,130
  81dd94:	10b86204 	addi	r2,r2,-7800
  81dd98:	18800115 	stw	r2,4(r3)
  81dd9c:	00000a06 	br	81ddc8 <start_pass_main+0xdc>
  81dda0:	e0bffe17 	ldw	r2,-8(fp)
  81dda4:	10800017 	ldw	r2,0(r2)
  81dda8:	00c000c4 	movi	r3,3
  81ddac:	10c00515 	stw	r3,20(r2)
  81ddb0:	e0bffe17 	ldw	r2,-8(fp)
  81ddb4:	10800017 	ldw	r2,0(r2)
  81ddb8:	10800017 	ldw	r2,0(r2)
  81ddbc:	e13ffe17 	ldw	r4,-8(fp)
  81ddc0:	103ee83a 	callr	r2
  81ddc4:	0001883a 	nop
  81ddc8:	0001883a 	nop
  81ddcc:	e037883a 	mov	sp,fp
  81ddd0:	dfc00117 	ldw	ra,4(sp)
  81ddd4:	df000017 	ldw	fp,0(sp)
  81ddd8:	dec00204 	addi	sp,sp,8
  81dddc:	f800283a 	ret

0081dde0 <process_data_simple_main>:
  81dde0:	defff504 	addi	sp,sp,-44
  81dde4:	dfc00a15 	stw	ra,40(sp)
  81dde8:	df000915 	stw	fp,36(sp)
  81ddec:	df000904 	addi	fp,sp,36
  81ddf0:	e13ffc15 	stw	r4,-16(fp)
  81ddf4:	e17ffd15 	stw	r5,-12(fp)
  81ddf8:	e1bffe15 	stw	r6,-8(fp)
  81ddfc:	e1ffff15 	stw	r7,-4(fp)
  81de00:	e0bffc17 	ldw	r2,-16(fp)
  81de04:	10807017 	ldw	r2,448(r2)
  81de08:	e0bffa15 	stw	r2,-24(fp)
  81de0c:	e0bffa17 	ldw	r2,-24(fp)
  81de10:	10800c17 	ldw	r2,48(r2)
  81de14:	10000c1e 	bne	r2,zero,81de48 <process_data_simple_main+0x68>
  81de18:	e0bffc17 	ldw	r2,-16(fp)
  81de1c:	10807117 	ldw	r2,452(r2)
  81de20:	10800317 	ldw	r2,12(r2)
  81de24:	e0fffa17 	ldw	r3,-24(fp)
  81de28:	18c00204 	addi	r3,r3,8
  81de2c:	180b883a 	mov	r5,r3
  81de30:	e13ffc17 	ldw	r4,-16(fp)
  81de34:	103ee83a 	callr	r2
  81de38:	10002126 	beq	r2,zero,81dec0 <process_data_simple_main+0xe0>
  81de3c:	e0bffa17 	ldw	r2,-24(fp)
  81de40:	00c00044 	movi	r3,1
  81de44:	10c00c15 	stw	r3,48(r2)
  81de48:	e0bffc17 	ldw	r2,-16(fp)
  81de4c:	10805217 	ldw	r2,328(r2)
  81de50:	e0bffb15 	stw	r2,-20(fp)
  81de54:	e0bffc17 	ldw	r2,-16(fp)
  81de58:	10807217 	ldw	r2,456(r2)
  81de5c:	10800117 	ldw	r2,4(r2)
  81de60:	e0fffa17 	ldw	r3,-24(fp)
  81de64:	19000204 	addi	r4,r3,8
  81de68:	e0fffa17 	ldw	r3,-24(fp)
  81de6c:	19400d04 	addi	r5,r3,52
  81de70:	e0ffff17 	ldw	r3,-4(fp)
  81de74:	d8c00215 	stw	r3,8(sp)
  81de78:	e0fffe17 	ldw	r3,-8(fp)
  81de7c:	d8c00115 	stw	r3,4(sp)
  81de80:	e0fffd17 	ldw	r3,-12(fp)
  81de84:	d8c00015 	stw	r3,0(sp)
  81de88:	e1fffb17 	ldw	r7,-20(fp)
  81de8c:	280d883a 	mov	r6,r5
  81de90:	200b883a 	mov	r5,r4
  81de94:	e13ffc17 	ldw	r4,-16(fp)
  81de98:	103ee83a 	callr	r2
  81de9c:	e0bffa17 	ldw	r2,-24(fp)
  81dea0:	10c00d17 	ldw	r3,52(r2)
  81dea4:	e0bffb17 	ldw	r2,-20(fp)
  81dea8:	18800636 	bltu	r3,r2,81dec4 <process_data_simple_main+0xe4>
  81deac:	e0bffa17 	ldw	r2,-24(fp)
  81deb0:	10000c15 	stw	zero,48(r2)
  81deb4:	e0bffa17 	ldw	r2,-24(fp)
  81deb8:	10000d15 	stw	zero,52(r2)
  81debc:	00000106 	br	81dec4 <process_data_simple_main+0xe4>
  81dec0:	0001883a 	nop
  81dec4:	e037883a 	mov	sp,fp
  81dec8:	dfc00117 	ldw	ra,4(sp)
  81decc:	df000017 	ldw	fp,0(sp)
  81ded0:	dec00204 	addi	sp,sp,8
  81ded4:	f800283a 	ret

0081ded8 <process_data_context_main>:
  81ded8:	defff604 	addi	sp,sp,-40
  81dedc:	dfc00915 	stw	ra,36(sp)
  81dee0:	df000815 	stw	fp,32(sp)
  81dee4:	df000804 	addi	fp,sp,32
  81dee8:	e13ffc15 	stw	r4,-16(fp)
  81deec:	e17ffd15 	stw	r5,-12(fp)
  81def0:	e1bffe15 	stw	r6,-8(fp)
  81def4:	e1ffff15 	stw	r7,-4(fp)
  81def8:	e0bffc17 	ldw	r2,-16(fp)
  81defc:	10807017 	ldw	r2,448(r2)
  81df00:	e0bffb15 	stw	r2,-20(fp)
  81df04:	e0bffb17 	ldw	r2,-20(fp)
  81df08:	10800c17 	ldw	r2,48(r2)
  81df0c:	1000171e 	bne	r2,zero,81df6c <process_data_context_main+0x94>
  81df10:	e0bffc17 	ldw	r2,-16(fp)
  81df14:	10807117 	ldw	r2,452(r2)
  81df18:	10c00317 	ldw	r3,12(r2)
  81df1c:	e0bffb17 	ldw	r2,-20(fp)
  81df20:	10801017 	ldw	r2,64(r2)
  81df24:	e13ffb17 	ldw	r4,-20(fp)
  81df28:	10800384 	addi	r2,r2,14
  81df2c:	1085883a 	add	r2,r2,r2
  81df30:	1085883a 	add	r2,r2,r2
  81df34:	2085883a 	add	r2,r4,r2
  81df38:	10800017 	ldw	r2,0(r2)
  81df3c:	100b883a 	mov	r5,r2
  81df40:	e13ffc17 	ldw	r4,-16(fp)
  81df44:	183ee83a 	callr	r3
  81df48:	10008326 	beq	r2,zero,81e158 <process_data_context_main+0x280>
  81df4c:	e0bffb17 	ldw	r2,-20(fp)
  81df50:	00c00044 	movi	r3,1
  81df54:	10c00c15 	stw	r3,48(r2)
  81df58:	e0bffb17 	ldw	r2,-20(fp)
  81df5c:	10801317 	ldw	r2,76(r2)
  81df60:	10c00044 	addi	r3,r2,1
  81df64:	e0bffb17 	ldw	r2,-20(fp)
  81df68:	10c01315 	stw	r3,76(r2)
  81df6c:	e0bffb17 	ldw	r2,-20(fp)
  81df70:	10801117 	ldw	r2,68(r2)
  81df74:	10c00060 	cmpeqi	r3,r2,1
  81df78:	18003b1e 	bne	r3,zero,81e068 <process_data_context_main+0x190>
  81df7c:	10c000a0 	cmpeqi	r3,r2,2
  81df80:	1800021e 	bne	r3,zero,81df8c <process_data_context_main+0xb4>
  81df84:	10002626 	beq	r2,zero,81e020 <process_data_context_main+0x148>
  81df88:	00007a06 	br	81e174 <process_data_context_main+0x29c>
  81df8c:	e0bffc17 	ldw	r2,-16(fp)
  81df90:	10807217 	ldw	r2,456(r2)
  81df94:	10c00117 	ldw	r3,4(r2)
  81df98:	e0bffb17 	ldw	r2,-20(fp)
  81df9c:	10801017 	ldw	r2,64(r2)
  81dfa0:	e13ffb17 	ldw	r4,-20(fp)
  81dfa4:	10800384 	addi	r2,r2,14
  81dfa8:	1085883a 	add	r2,r2,r2
  81dfac:	1085883a 	add	r2,r2,r2
  81dfb0:	2085883a 	add	r2,r4,r2
  81dfb4:	11000017 	ldw	r4,0(r2)
  81dfb8:	e0bffb17 	ldw	r2,-20(fp)
  81dfbc:	11400d04 	addi	r5,r2,52
  81dfc0:	e0bffb17 	ldw	r2,-20(fp)
  81dfc4:	11801217 	ldw	r6,72(r2)
  81dfc8:	e0bfff17 	ldw	r2,-4(fp)
  81dfcc:	d8800215 	stw	r2,8(sp)
  81dfd0:	e0bffe17 	ldw	r2,-8(fp)
  81dfd4:	d8800115 	stw	r2,4(sp)
  81dfd8:	e0bffd17 	ldw	r2,-12(fp)
  81dfdc:	d8800015 	stw	r2,0(sp)
  81dfe0:	300f883a 	mov	r7,r6
  81dfe4:	280d883a 	mov	r6,r5
  81dfe8:	200b883a 	mov	r5,r4
  81dfec:	e13ffc17 	ldw	r4,-16(fp)
  81dff0:	183ee83a 	callr	r3
  81dff4:	e0bffb17 	ldw	r2,-20(fp)
  81dff8:	10c00d17 	ldw	r3,52(r2)
  81dffc:	e0bffb17 	ldw	r2,-20(fp)
  81e000:	10801217 	ldw	r2,72(r2)
  81e004:	18805636 	bltu	r3,r2,81e160 <process_data_context_main+0x288>
  81e008:	e0bffb17 	ldw	r2,-20(fp)
  81e00c:	10001115 	stw	zero,68(r2)
  81e010:	e0bffe17 	ldw	r2,-8(fp)
  81e014:	10c00017 	ldw	r3,0(r2)
  81e018:	e0bfff17 	ldw	r2,-4(fp)
  81e01c:	1880522e 	bgeu	r3,r2,81e168 <process_data_context_main+0x290>
  81e020:	e0bffb17 	ldw	r2,-20(fp)
  81e024:	10000d15 	stw	zero,52(r2)
  81e028:	e0bffc17 	ldw	r2,-16(fp)
  81e02c:	10805217 	ldw	r2,328(r2)
  81e030:	10bfffc4 	addi	r2,r2,-1
  81e034:	1007883a 	mov	r3,r2
  81e038:	e0bffb17 	ldw	r2,-20(fp)
  81e03c:	10c01215 	stw	r3,72(r2)
  81e040:	e0bffb17 	ldw	r2,-20(fp)
  81e044:	10c01317 	ldw	r3,76(r2)
  81e048:	e0bffc17 	ldw	r2,-16(fp)
  81e04c:	10805317 	ldw	r2,332(r2)
  81e050:	1880021e 	bne	r3,r2,81e05c <process_data_context_main+0x184>
  81e054:	e13ffc17 	ldw	r4,-16(fp)
  81e058:	081db3c0 	call	81db3c <set_bottom_pointers>
  81e05c:	e0bffb17 	ldw	r2,-20(fp)
  81e060:	00c00044 	movi	r3,1
  81e064:	10c01115 	stw	r3,68(r2)
  81e068:	e0bffc17 	ldw	r2,-16(fp)
  81e06c:	10807217 	ldw	r2,456(r2)
  81e070:	10c00117 	ldw	r3,4(r2)
  81e074:	e0bffb17 	ldw	r2,-20(fp)
  81e078:	10801017 	ldw	r2,64(r2)
  81e07c:	e13ffb17 	ldw	r4,-20(fp)
  81e080:	10800384 	addi	r2,r2,14
  81e084:	1085883a 	add	r2,r2,r2
  81e088:	1085883a 	add	r2,r2,r2
  81e08c:	2085883a 	add	r2,r4,r2
  81e090:	11000017 	ldw	r4,0(r2)
  81e094:	e0bffb17 	ldw	r2,-20(fp)
  81e098:	11400d04 	addi	r5,r2,52
  81e09c:	e0bffb17 	ldw	r2,-20(fp)
  81e0a0:	11801217 	ldw	r6,72(r2)
  81e0a4:	e0bfff17 	ldw	r2,-4(fp)
  81e0a8:	d8800215 	stw	r2,8(sp)
  81e0ac:	e0bffe17 	ldw	r2,-8(fp)
  81e0b0:	d8800115 	stw	r2,4(sp)
  81e0b4:	e0bffd17 	ldw	r2,-12(fp)
  81e0b8:	d8800015 	stw	r2,0(sp)
  81e0bc:	300f883a 	mov	r7,r6
  81e0c0:	280d883a 	mov	r6,r5
  81e0c4:	200b883a 	mov	r5,r4
  81e0c8:	e13ffc17 	ldw	r4,-16(fp)
  81e0cc:	183ee83a 	callr	r3
  81e0d0:	e0bffb17 	ldw	r2,-20(fp)
  81e0d4:	10c00d17 	ldw	r3,52(r2)
  81e0d8:	e0bffb17 	ldw	r2,-20(fp)
  81e0dc:	10801217 	ldw	r2,72(r2)
  81e0e0:	18802336 	bltu	r3,r2,81e170 <process_data_context_main+0x298>
  81e0e4:	e0bffb17 	ldw	r2,-20(fp)
  81e0e8:	10801317 	ldw	r2,76(r2)
  81e0ec:	10800058 	cmpnei	r2,r2,1
  81e0f0:	1000021e 	bne	r2,zero,81e0fc <process_data_context_main+0x224>
  81e0f4:	e13ffc17 	ldw	r4,-16(fp)
  81e0f8:	081d8bc0 	call	81d8bc <set_wraparound_pointers>
  81e0fc:	e0bffb17 	ldw	r2,-20(fp)
  81e100:	10801017 	ldw	r2,64(r2)
  81e104:	10c0005c 	xori	r3,r2,1
  81e108:	e0bffb17 	ldw	r2,-20(fp)
  81e10c:	10c01015 	stw	r3,64(r2)
  81e110:	e0bffb17 	ldw	r2,-20(fp)
  81e114:	10000c15 	stw	zero,48(r2)
  81e118:	e0bffc17 	ldw	r2,-16(fp)
  81e11c:	10805217 	ldw	r2,328(r2)
  81e120:	10800044 	addi	r2,r2,1
  81e124:	1007883a 	mov	r3,r2
  81e128:	e0bffb17 	ldw	r2,-20(fp)
  81e12c:	10c00d15 	stw	r3,52(r2)
  81e130:	e0bffc17 	ldw	r2,-16(fp)
  81e134:	10805217 	ldw	r2,328(r2)
  81e138:	10800084 	addi	r2,r2,2
  81e13c:	1007883a 	mov	r3,r2
  81e140:	e0bffb17 	ldw	r2,-20(fp)
  81e144:	10c01215 	stw	r3,72(r2)
  81e148:	e0bffb17 	ldw	r2,-20(fp)
  81e14c:	00c00084 	movi	r3,2
  81e150:	10c01115 	stw	r3,68(r2)
  81e154:	00000706 	br	81e174 <process_data_context_main+0x29c>
  81e158:	0001883a 	nop
  81e15c:	00000506 	br	81e174 <process_data_context_main+0x29c>
  81e160:	0001883a 	nop
  81e164:	00000306 	br	81e174 <process_data_context_main+0x29c>
  81e168:	0001883a 	nop
  81e16c:	00000106 	br	81e174 <process_data_context_main+0x29c>
  81e170:	0001883a 	nop
  81e174:	e037883a 	mov	sp,fp
  81e178:	dfc00117 	ldw	ra,4(sp)
  81e17c:	df000017 	ldw	fp,0(sp)
  81e180:	dec00204 	addi	sp,sp,8
  81e184:	f800283a 	ret

0081e188 <process_data_crank_post>:
  81e188:	defff704 	addi	sp,sp,-36
  81e18c:	dfc00815 	stw	ra,32(sp)
  81e190:	df000715 	stw	fp,28(sp)
  81e194:	df000704 	addi	fp,sp,28
  81e198:	e13ffc15 	stw	r4,-16(fp)
  81e19c:	e17ffd15 	stw	r5,-12(fp)
  81e1a0:	e1bffe15 	stw	r6,-8(fp)
  81e1a4:	e1ffff15 	stw	r7,-4(fp)
  81e1a8:	e0bffc17 	ldw	r2,-16(fp)
  81e1ac:	10807217 	ldw	r2,456(r2)
  81e1b0:	10800117 	ldw	r2,4(r2)
  81e1b4:	e0ffff17 	ldw	r3,-4(fp)
  81e1b8:	d8c00215 	stw	r3,8(sp)
  81e1bc:	e0fffe17 	ldw	r3,-8(fp)
  81e1c0:	d8c00115 	stw	r3,4(sp)
  81e1c4:	e0fffd17 	ldw	r3,-12(fp)
  81e1c8:	d8c00015 	stw	r3,0(sp)
  81e1cc:	000f883a 	mov	r7,zero
  81e1d0:	000d883a 	mov	r6,zero
  81e1d4:	000b883a 	mov	r5,zero
  81e1d8:	e13ffc17 	ldw	r4,-16(fp)
  81e1dc:	103ee83a 	callr	r2
  81e1e0:	0001883a 	nop
  81e1e4:	e037883a 	mov	sp,fp
  81e1e8:	dfc00117 	ldw	ra,4(sp)
  81e1ec:	df000017 	ldw	fp,0(sp)
  81e1f0:	dec00204 	addi	sp,sp,8
  81e1f4:	f800283a 	ret

0081e1f8 <jinit_d_main_controller>:
  81e1f8:	defff504 	addi	sp,sp,-44
  81e1fc:	dfc00a15 	stw	ra,40(sp)
  81e200:	df000915 	stw	fp,36(sp)
  81e204:	dc400815 	stw	r17,32(sp)
  81e208:	dc000715 	stw	r16,28(sp)
  81e20c:	df000904 	addi	fp,sp,36
  81e210:	e13ffc15 	stw	r4,-16(fp)
  81e214:	e17ffd15 	stw	r5,-12(fp)
  81e218:	e0bffc17 	ldw	r2,-16(fp)
  81e21c:	10800117 	ldw	r2,4(r2)
  81e220:	10800017 	ldw	r2,0(r2)
  81e224:	01801404 	movi	r6,80
  81e228:	01400044 	movi	r5,1
  81e22c:	e13ffc17 	ldw	r4,-16(fp)
  81e230:	103ee83a 	callr	r2
  81e234:	e0bffa15 	stw	r2,-24(fp)
  81e238:	e0fffa17 	ldw	r3,-24(fp)
  81e23c:	e0bffc17 	ldw	r2,-16(fp)
  81e240:	10c07015 	stw	r3,448(r2)
  81e244:	e0fffa17 	ldw	r3,-24(fp)
  81e248:	008020b4 	movhi	r2,130
  81e24c:	10b73b04 	addi	r2,r2,-8980
  81e250:	18800015 	stw	r2,0(r3)
  81e254:	e0bffd17 	ldw	r2,-12(fp)
  81e258:	10000926 	beq	r2,zero,81e280 <jinit_d_main_controller+0x88>
  81e25c:	e0bffc17 	ldw	r2,-16(fp)
  81e260:	10800017 	ldw	r2,0(r2)
  81e264:	00c000c4 	movi	r3,3
  81e268:	10c00515 	stw	r3,20(r2)
  81e26c:	e0bffc17 	ldw	r2,-16(fp)
  81e270:	10800017 	ldw	r2,0(r2)
  81e274:	10800017 	ldw	r2,0(r2)
  81e278:	e13ffc17 	ldw	r4,-16(fp)
  81e27c:	103ee83a 	callr	r2
  81e280:	e0bffc17 	ldw	r2,-16(fp)
  81e284:	10807717 	ldw	r2,476(r2)
  81e288:	10800217 	ldw	r2,8(r2)
  81e28c:	10001426 	beq	r2,zero,81e2e0 <jinit_d_main_controller+0xe8>
  81e290:	e0bffc17 	ldw	r2,-16(fp)
  81e294:	10805217 	ldw	r2,328(r2)
  81e298:	10800088 	cmpgei	r2,r2,2
  81e29c:	1000091e 	bne	r2,zero,81e2c4 <jinit_d_main_controller+0xcc>
  81e2a0:	e0bffc17 	ldw	r2,-16(fp)
  81e2a4:	10800017 	ldw	r2,0(r2)
  81e2a8:	00c00c04 	movi	r3,48
  81e2ac:	10c00515 	stw	r3,20(r2)
  81e2b0:	e0bffc17 	ldw	r2,-16(fp)
  81e2b4:	10800017 	ldw	r2,0(r2)
  81e2b8:	10800017 	ldw	r2,0(r2)
  81e2bc:	e13ffc17 	ldw	r4,-16(fp)
  81e2c0:	103ee83a 	callr	r2
  81e2c4:	e13ffc17 	ldw	r4,-16(fp)
  81e2c8:	081d3f40 	call	81d3f4 <alloc_funny_pointers>
  81e2cc:	e0bffc17 	ldw	r2,-16(fp)
  81e2d0:	10805217 	ldw	r2,328(r2)
  81e2d4:	10800084 	addi	r2,r2,2
  81e2d8:	e0bff815 	stw	r2,-32(fp)
  81e2dc:	00000306 	br	81e2ec <jinit_d_main_controller+0xf4>
  81e2e0:	e0bffc17 	ldw	r2,-16(fp)
  81e2e4:	10805217 	ldw	r2,328(r2)
  81e2e8:	e0bff815 	stw	r2,-32(fp)
  81e2ec:	e03ff715 	stw	zero,-36(fp)
  81e2f0:	e0bffc17 	ldw	r2,-16(fp)
  81e2f4:	10803617 	ldw	r2,216(r2)
  81e2f8:	e0bff915 	stw	r2,-28(fp)
  81e2fc:	00002f06 	br	81e3bc <jinit_d_main_controller+0x1c4>
  81e300:	e0bff917 	ldw	r2,-28(fp)
  81e304:	10c00317 	ldw	r3,12(r2)
  81e308:	e0bff917 	ldw	r2,-28(fp)
  81e30c:	10800a17 	ldw	r2,40(r2)
  81e310:	100b883a 	mov	r5,r2
  81e314:	1809883a 	mov	r4,r3
  81e318:	08301e80 	call	8301e8 <__mulsi3>
  81e31c:	1007883a 	mov	r3,r2
  81e320:	e0bffc17 	ldw	r2,-16(fp)
  81e324:	10805217 	ldw	r2,328(r2)
  81e328:	100b883a 	mov	r5,r2
  81e32c:	1809883a 	mov	r4,r3
  81e330:	08300340 	call	830034 <__divsi3>
  81e334:	e0bffb15 	stw	r2,-20(fp)
  81e338:	e0bffc17 	ldw	r2,-16(fp)
  81e33c:	10800117 	ldw	r2,4(r2)
  81e340:	14000217 	ldw	r16,8(r2)
  81e344:	e0bff917 	ldw	r2,-28(fp)
  81e348:	10c00717 	ldw	r3,28(r2)
  81e34c:	e0bff917 	ldw	r2,-28(fp)
  81e350:	10800917 	ldw	r2,36(r2)
  81e354:	100b883a 	mov	r5,r2
  81e358:	1809883a 	mov	r4,r3
  81e35c:	08301e80 	call	8301e8 <__mulsi3>
  81e360:	1023883a 	mov	r17,r2
  81e364:	e17ff817 	ldw	r5,-32(fp)
  81e368:	e13ffb17 	ldw	r4,-20(fp)
  81e36c:	08301e80 	call	8301e8 <__mulsi3>
  81e370:	100f883a 	mov	r7,r2
  81e374:	880d883a 	mov	r6,r17
  81e378:	01400044 	movi	r5,1
  81e37c:	e13ffc17 	ldw	r4,-16(fp)
  81e380:	803ee83a 	callr	r16
  81e384:	1009883a 	mov	r4,r2
  81e388:	e0fffa17 	ldw	r3,-24(fp)
  81e38c:	e0bff717 	ldw	r2,-36(fp)
  81e390:	10800084 	addi	r2,r2,2
  81e394:	1085883a 	add	r2,r2,r2
  81e398:	1085883a 	add	r2,r2,r2
  81e39c:	1885883a 	add	r2,r3,r2
  81e3a0:	11000015 	stw	r4,0(r2)
  81e3a4:	e0bff717 	ldw	r2,-36(fp)
  81e3a8:	10800044 	addi	r2,r2,1
  81e3ac:	e0bff715 	stw	r2,-36(fp)
  81e3b0:	e0bff917 	ldw	r2,-28(fp)
  81e3b4:	10801604 	addi	r2,r2,88
  81e3b8:	e0bff915 	stw	r2,-28(fp)
  81e3bc:	e0bffc17 	ldw	r2,-16(fp)
  81e3c0:	10800917 	ldw	r2,36(r2)
  81e3c4:	e0fff717 	ldw	r3,-36(fp)
  81e3c8:	18bfcd16 	blt	r3,r2,81e300 <__alt_mem_epcs_flash_controller_0+0xff815300>
  81e3cc:	0001883a 	nop
  81e3d0:	e6fffe04 	addi	sp,fp,-8
  81e3d4:	dfc00317 	ldw	ra,12(sp)
  81e3d8:	df000217 	ldw	fp,8(sp)
  81e3dc:	dc400117 	ldw	r17,4(sp)
  81e3e0:	dc000017 	ldw	r16,0(sp)
  81e3e4:	dec00404 	addi	sp,sp,16
  81e3e8:	f800283a 	ret

0081e3ec <jpeg_idct_float>:
  81e3ec:	deffa104 	addi	sp,sp,-380
  81e3f0:	dfc05e15 	stw	ra,376(sp)
  81e3f4:	df005d15 	stw	fp,372(sp)
  81e3f8:	dc005c15 	stw	r16,368(sp)
  81e3fc:	df005d04 	addi	fp,sp,372
  81e400:	e13ffb15 	stw	r4,-20(fp)
  81e404:	e17ffc15 	stw	r5,-16(fp)
  81e408:	e1bffd15 	stw	r6,-12(fp)
  81e40c:	e1fffe15 	stw	r7,-8(fp)
  81e410:	e0bffb17 	ldw	r2,-20(fp)
  81e414:	10805417 	ldw	r2,336(r2)
  81e418:	10bfa004 	addi	r2,r2,-384
  81e41c:	e0bfa715 	stw	r2,-356(fp)
  81e420:	e0bffd17 	ldw	r2,-12(fp)
  81e424:	e0bfa315 	stw	r2,-372(fp)
  81e428:	e0bffc17 	ldw	r2,-16(fp)
  81e42c:	10801517 	ldw	r2,84(r2)
  81e430:	e0bfa415 	stw	r2,-368(fp)
  81e434:	e0bfbb04 	addi	r2,fp,-276
  81e438:	e0bfa515 	stw	r2,-364(fp)
  81e43c:	00800204 	movi	r2,8
  81e440:	e0bfa615 	stw	r2,-360(fp)
  81e444:	0001b806 	br	81eb28 <jpeg_idct_float+0x73c>
  81e448:	e0bfa317 	ldw	r2,-372(fp)
  81e44c:	10800404 	addi	r2,r2,16
  81e450:	1080000b 	ldhu	r2,0(r2)
  81e454:	10bfffcc 	andi	r2,r2,65535
  81e458:	10a0001c 	xori	r2,r2,32768
  81e45c:	10a00004 	addi	r2,r2,-32768
  81e460:	1000611e 	bne	r2,zero,81e5e8 <jpeg_idct_float+0x1fc>
  81e464:	e0bfa317 	ldw	r2,-372(fp)
  81e468:	10800804 	addi	r2,r2,32
  81e46c:	1080000b 	ldhu	r2,0(r2)
  81e470:	10bfffcc 	andi	r2,r2,65535
  81e474:	10a0001c 	xori	r2,r2,32768
  81e478:	10a00004 	addi	r2,r2,-32768
  81e47c:	10005a1e 	bne	r2,zero,81e5e8 <jpeg_idct_float+0x1fc>
  81e480:	e0bfa317 	ldw	r2,-372(fp)
  81e484:	10800c04 	addi	r2,r2,48
  81e488:	1080000b 	ldhu	r2,0(r2)
  81e48c:	10bfffcc 	andi	r2,r2,65535
  81e490:	10a0001c 	xori	r2,r2,32768
  81e494:	10a00004 	addi	r2,r2,-32768
  81e498:	1000531e 	bne	r2,zero,81e5e8 <jpeg_idct_float+0x1fc>
  81e49c:	e0bfa317 	ldw	r2,-372(fp)
  81e4a0:	10801004 	addi	r2,r2,64
  81e4a4:	1080000b 	ldhu	r2,0(r2)
  81e4a8:	10bfffcc 	andi	r2,r2,65535
  81e4ac:	10a0001c 	xori	r2,r2,32768
  81e4b0:	10a00004 	addi	r2,r2,-32768
  81e4b4:	10004c1e 	bne	r2,zero,81e5e8 <jpeg_idct_float+0x1fc>
  81e4b8:	e0bfa317 	ldw	r2,-372(fp)
  81e4bc:	10801404 	addi	r2,r2,80
  81e4c0:	1080000b 	ldhu	r2,0(r2)
  81e4c4:	10bfffcc 	andi	r2,r2,65535
  81e4c8:	10a0001c 	xori	r2,r2,32768
  81e4cc:	10a00004 	addi	r2,r2,-32768
  81e4d0:	1000451e 	bne	r2,zero,81e5e8 <jpeg_idct_float+0x1fc>
  81e4d4:	e0bfa317 	ldw	r2,-372(fp)
  81e4d8:	10801804 	addi	r2,r2,96
  81e4dc:	1080000b 	ldhu	r2,0(r2)
  81e4e0:	10bfffcc 	andi	r2,r2,65535
  81e4e4:	10a0001c 	xori	r2,r2,32768
  81e4e8:	10a00004 	addi	r2,r2,-32768
  81e4ec:	10003e1e 	bne	r2,zero,81e5e8 <jpeg_idct_float+0x1fc>
  81e4f0:	e0bfa317 	ldw	r2,-372(fp)
  81e4f4:	10801c04 	addi	r2,r2,112
  81e4f8:	1080000b 	ldhu	r2,0(r2)
  81e4fc:	10bfffcc 	andi	r2,r2,65535
  81e500:	10a0001c 	xori	r2,r2,32768
  81e504:	10a00004 	addi	r2,r2,-32768
  81e508:	1000371e 	bne	r2,zero,81e5e8 <jpeg_idct_float+0x1fc>
  81e50c:	e0bfa317 	ldw	r2,-372(fp)
  81e510:	1080000b 	ldhu	r2,0(r2)
  81e514:	10bfffcc 	andi	r2,r2,65535
  81e518:	10a0001c 	xori	r2,r2,32768
  81e51c:	10a00004 	addi	r2,r2,-32768
  81e520:	1009883a 	mov	r4,r2
  81e524:	083105c0 	call	83105c <__floatsisf>
  81e528:	1009883a 	mov	r4,r2
  81e52c:	e0bfa417 	ldw	r2,-368(fp)
  81e530:	10c00017 	ldw	r3,0(r2)
  81e534:	180b883a 	mov	r5,r3
  81e538:	08306d80 	call	8306d8 <__mulsf3>
  81e53c:	1007883a 	mov	r3,r2
  81e540:	e0ffa815 	stw	r3,-352(fp)
  81e544:	e0bfa517 	ldw	r2,-364(fp)
  81e548:	e0ffa817 	ldw	r3,-352(fp)
  81e54c:	10c00015 	stw	r3,0(r2)
  81e550:	e0bfa517 	ldw	r2,-364(fp)
  81e554:	10800804 	addi	r2,r2,32
  81e558:	e0ffa817 	ldw	r3,-352(fp)
  81e55c:	10c00015 	stw	r3,0(r2)
  81e560:	e0bfa517 	ldw	r2,-364(fp)
  81e564:	10801004 	addi	r2,r2,64
  81e568:	e0ffa817 	ldw	r3,-352(fp)
  81e56c:	10c00015 	stw	r3,0(r2)
  81e570:	e0bfa517 	ldw	r2,-364(fp)
  81e574:	10801804 	addi	r2,r2,96
  81e578:	e0ffa817 	ldw	r3,-352(fp)
  81e57c:	10c00015 	stw	r3,0(r2)
  81e580:	e0bfa517 	ldw	r2,-364(fp)
  81e584:	10802004 	addi	r2,r2,128
  81e588:	e0ffa817 	ldw	r3,-352(fp)
  81e58c:	10c00015 	stw	r3,0(r2)
  81e590:	e0bfa517 	ldw	r2,-364(fp)
  81e594:	10802804 	addi	r2,r2,160
  81e598:	e0ffa817 	ldw	r3,-352(fp)
  81e59c:	10c00015 	stw	r3,0(r2)
  81e5a0:	e0bfa517 	ldw	r2,-364(fp)
  81e5a4:	10803004 	addi	r2,r2,192
  81e5a8:	e0ffa817 	ldw	r3,-352(fp)
  81e5ac:	10c00015 	stw	r3,0(r2)
  81e5b0:	e0bfa517 	ldw	r2,-364(fp)
  81e5b4:	10803804 	addi	r2,r2,224
  81e5b8:	e0ffa817 	ldw	r3,-352(fp)
  81e5bc:	10c00015 	stw	r3,0(r2)
  81e5c0:	e0bfa317 	ldw	r2,-372(fp)
  81e5c4:	10800084 	addi	r2,r2,2
  81e5c8:	e0bfa315 	stw	r2,-372(fp)
  81e5cc:	e0bfa417 	ldw	r2,-368(fp)
  81e5d0:	10800104 	addi	r2,r2,4
  81e5d4:	e0bfa415 	stw	r2,-368(fp)
  81e5d8:	e0bfa517 	ldw	r2,-364(fp)
  81e5dc:	10800104 	addi	r2,r2,4
  81e5e0:	e0bfa515 	stw	r2,-364(fp)
  81e5e4:	00014d06 	br	81eb1c <jpeg_idct_float+0x730>
  81e5e8:	e0bfa317 	ldw	r2,-372(fp)
  81e5ec:	1080000b 	ldhu	r2,0(r2)
  81e5f0:	10bfffcc 	andi	r2,r2,65535
  81e5f4:	10a0001c 	xori	r2,r2,32768
  81e5f8:	10a00004 	addi	r2,r2,-32768
  81e5fc:	1009883a 	mov	r4,r2
  81e600:	083105c0 	call	83105c <__floatsisf>
  81e604:	1009883a 	mov	r4,r2
  81e608:	e0bfa417 	ldw	r2,-368(fp)
  81e60c:	10c00017 	ldw	r3,0(r2)
  81e610:	180b883a 	mov	r5,r3
  81e614:	08306d80 	call	8306d8 <__mulsf3>
  81e618:	1007883a 	mov	r3,r2
  81e61c:	e0ffa915 	stw	r3,-348(fp)
  81e620:	e0bfa317 	ldw	r2,-372(fp)
  81e624:	10800804 	addi	r2,r2,32
  81e628:	1080000b 	ldhu	r2,0(r2)
  81e62c:	10bfffcc 	andi	r2,r2,65535
  81e630:	10a0001c 	xori	r2,r2,32768
  81e634:	10a00004 	addi	r2,r2,-32768
  81e638:	1009883a 	mov	r4,r2
  81e63c:	083105c0 	call	83105c <__floatsisf>
  81e640:	1009883a 	mov	r4,r2
  81e644:	e0bfa417 	ldw	r2,-368(fp)
  81e648:	10801004 	addi	r2,r2,64
  81e64c:	10c00017 	ldw	r3,0(r2)
  81e650:	180b883a 	mov	r5,r3
  81e654:	08306d80 	call	8306d8 <__mulsf3>
  81e658:	1007883a 	mov	r3,r2
  81e65c:	e0ffaa15 	stw	r3,-344(fp)
  81e660:	e0bfa317 	ldw	r2,-372(fp)
  81e664:	10801004 	addi	r2,r2,64
  81e668:	1080000b 	ldhu	r2,0(r2)
  81e66c:	10bfffcc 	andi	r2,r2,65535
  81e670:	10a0001c 	xori	r2,r2,32768
  81e674:	10a00004 	addi	r2,r2,-32768
  81e678:	1009883a 	mov	r4,r2
  81e67c:	083105c0 	call	83105c <__floatsisf>
  81e680:	1009883a 	mov	r4,r2
  81e684:	e0bfa417 	ldw	r2,-368(fp)
  81e688:	10802004 	addi	r2,r2,128
  81e68c:	10c00017 	ldw	r3,0(r2)
  81e690:	180b883a 	mov	r5,r3
  81e694:	08306d80 	call	8306d8 <__mulsf3>
  81e698:	1007883a 	mov	r3,r2
  81e69c:	e0ffab15 	stw	r3,-340(fp)
  81e6a0:	e0bfa317 	ldw	r2,-372(fp)
  81e6a4:	10801804 	addi	r2,r2,96
  81e6a8:	1080000b 	ldhu	r2,0(r2)
  81e6ac:	10bfffcc 	andi	r2,r2,65535
  81e6b0:	10a0001c 	xori	r2,r2,32768
  81e6b4:	10a00004 	addi	r2,r2,-32768
  81e6b8:	1009883a 	mov	r4,r2
  81e6bc:	083105c0 	call	83105c <__floatsisf>
  81e6c0:	1009883a 	mov	r4,r2
  81e6c4:	e0bfa417 	ldw	r2,-368(fp)
  81e6c8:	10803004 	addi	r2,r2,192
  81e6cc:	10c00017 	ldw	r3,0(r2)
  81e6d0:	180b883a 	mov	r5,r3
  81e6d4:	08306d80 	call	8306d8 <__mulsf3>
  81e6d8:	1007883a 	mov	r3,r2
  81e6dc:	e0ffac15 	stw	r3,-336(fp)
  81e6e0:	e17fab17 	ldw	r5,-340(fp)
  81e6e4:	e13fa917 	ldw	r4,-348(fp)
  81e6e8:	08302100 	call	830210 <__addsf3>
  81e6ec:	1007883a 	mov	r3,r2
  81e6f0:	e0ffad15 	stw	r3,-332(fp)
  81e6f4:	e17fab17 	ldw	r5,-340(fp)
  81e6f8:	e13fa917 	ldw	r4,-348(fp)
  81e6fc:	0830b080 	call	830b08 <__subsf3>
  81e700:	1007883a 	mov	r3,r2
  81e704:	e0ffae15 	stw	r3,-328(fp)
  81e708:	e17fac17 	ldw	r5,-336(fp)
  81e70c:	e13faa17 	ldw	r4,-344(fp)
  81e710:	08302100 	call	830210 <__addsf3>
  81e714:	1007883a 	mov	r3,r2
  81e718:	e0ffaf15 	stw	r3,-324(fp)
  81e71c:	e17fac17 	ldw	r5,-336(fp)
  81e720:	e13faa17 	ldw	r4,-344(fp)
  81e724:	0830b080 	call	830b08 <__subsf3>
  81e728:	1007883a 	mov	r3,r2
  81e72c:	1805883a 	mov	r2,r3
  81e730:	014fed74 	movhi	r5,16309
  81e734:	29413cc4 	addi	r5,r5,1267
  81e738:	1009883a 	mov	r4,r2
  81e73c:	08306d80 	call	8306d8 <__mulsf3>
  81e740:	1007883a 	mov	r3,r2
  81e744:	1805883a 	mov	r2,r3
  81e748:	e17faf17 	ldw	r5,-324(fp)
  81e74c:	1009883a 	mov	r4,r2
  81e750:	0830b080 	call	830b08 <__subsf3>
  81e754:	1007883a 	mov	r3,r2
  81e758:	e0ffb015 	stw	r3,-320(fp)
  81e75c:	e17faf17 	ldw	r5,-324(fp)
  81e760:	e13fad17 	ldw	r4,-332(fp)
  81e764:	08302100 	call	830210 <__addsf3>
  81e768:	1007883a 	mov	r3,r2
  81e76c:	e0ffa915 	stw	r3,-348(fp)
  81e770:	e17faf17 	ldw	r5,-324(fp)
  81e774:	e13fad17 	ldw	r4,-332(fp)
  81e778:	0830b080 	call	830b08 <__subsf3>
  81e77c:	1007883a 	mov	r3,r2
  81e780:	e0ffac15 	stw	r3,-336(fp)
  81e784:	e17fb017 	ldw	r5,-320(fp)
  81e788:	e13fae17 	ldw	r4,-328(fp)
  81e78c:	08302100 	call	830210 <__addsf3>
  81e790:	1007883a 	mov	r3,r2
  81e794:	e0ffaa15 	stw	r3,-344(fp)
  81e798:	e17fb017 	ldw	r5,-320(fp)
  81e79c:	e13fae17 	ldw	r4,-328(fp)
  81e7a0:	0830b080 	call	830b08 <__subsf3>
  81e7a4:	1007883a 	mov	r3,r2
  81e7a8:	e0ffab15 	stw	r3,-340(fp)
  81e7ac:	e0bfa317 	ldw	r2,-372(fp)
  81e7b0:	10800404 	addi	r2,r2,16
  81e7b4:	1080000b 	ldhu	r2,0(r2)
  81e7b8:	10bfffcc 	andi	r2,r2,65535
  81e7bc:	10a0001c 	xori	r2,r2,32768
  81e7c0:	10a00004 	addi	r2,r2,-32768
  81e7c4:	1009883a 	mov	r4,r2
  81e7c8:	083105c0 	call	83105c <__floatsisf>
  81e7cc:	1009883a 	mov	r4,r2
  81e7d0:	e0bfa417 	ldw	r2,-368(fp)
  81e7d4:	10800804 	addi	r2,r2,32
  81e7d8:	10c00017 	ldw	r3,0(r2)
  81e7dc:	180b883a 	mov	r5,r3
  81e7e0:	08306d80 	call	8306d8 <__mulsf3>
  81e7e4:	1007883a 	mov	r3,r2
  81e7e8:	e0ffb115 	stw	r3,-316(fp)
  81e7ec:	e0bfa317 	ldw	r2,-372(fp)
  81e7f0:	10800c04 	addi	r2,r2,48
  81e7f4:	1080000b 	ldhu	r2,0(r2)
  81e7f8:	10bfffcc 	andi	r2,r2,65535
  81e7fc:	10a0001c 	xori	r2,r2,32768
  81e800:	10a00004 	addi	r2,r2,-32768
  81e804:	1009883a 	mov	r4,r2
  81e808:	083105c0 	call	83105c <__floatsisf>
  81e80c:	1009883a 	mov	r4,r2
  81e810:	e0bfa417 	ldw	r2,-368(fp)
  81e814:	10801804 	addi	r2,r2,96
  81e818:	10c00017 	ldw	r3,0(r2)
  81e81c:	180b883a 	mov	r5,r3
  81e820:	08306d80 	call	8306d8 <__mulsf3>
  81e824:	1007883a 	mov	r3,r2
  81e828:	e0ffb215 	stw	r3,-312(fp)
  81e82c:	e0bfa317 	ldw	r2,-372(fp)
  81e830:	10801404 	addi	r2,r2,80
  81e834:	1080000b 	ldhu	r2,0(r2)
  81e838:	10bfffcc 	andi	r2,r2,65535
  81e83c:	10a0001c 	xori	r2,r2,32768
  81e840:	10a00004 	addi	r2,r2,-32768
  81e844:	1009883a 	mov	r4,r2
  81e848:	083105c0 	call	83105c <__floatsisf>
  81e84c:	1009883a 	mov	r4,r2
  81e850:	e0bfa417 	ldw	r2,-368(fp)
  81e854:	10802804 	addi	r2,r2,160
  81e858:	10c00017 	ldw	r3,0(r2)
  81e85c:	180b883a 	mov	r5,r3
  81e860:	08306d80 	call	8306d8 <__mulsf3>
  81e864:	1007883a 	mov	r3,r2
  81e868:	e0ffb315 	stw	r3,-308(fp)
  81e86c:	e0bfa317 	ldw	r2,-372(fp)
  81e870:	10801c04 	addi	r2,r2,112
  81e874:	1080000b 	ldhu	r2,0(r2)
  81e878:	10bfffcc 	andi	r2,r2,65535
  81e87c:	10a0001c 	xori	r2,r2,32768
  81e880:	10a00004 	addi	r2,r2,-32768
  81e884:	1009883a 	mov	r4,r2
  81e888:	083105c0 	call	83105c <__floatsisf>
  81e88c:	1009883a 	mov	r4,r2
  81e890:	e0bfa417 	ldw	r2,-368(fp)
  81e894:	10803804 	addi	r2,r2,224
  81e898:	10c00017 	ldw	r3,0(r2)
  81e89c:	180b883a 	mov	r5,r3
  81e8a0:	08306d80 	call	8306d8 <__mulsf3>
  81e8a4:	1007883a 	mov	r3,r2
  81e8a8:	e0ffb415 	stw	r3,-304(fp)
  81e8ac:	e17fb217 	ldw	r5,-312(fp)
  81e8b0:	e13fb317 	ldw	r4,-308(fp)
  81e8b4:	08302100 	call	830210 <__addsf3>
  81e8b8:	1007883a 	mov	r3,r2
  81e8bc:	e0ffb515 	stw	r3,-300(fp)
  81e8c0:	e17fb217 	ldw	r5,-312(fp)
  81e8c4:	e13fb317 	ldw	r4,-308(fp)
  81e8c8:	0830b080 	call	830b08 <__subsf3>
  81e8cc:	1007883a 	mov	r3,r2
  81e8d0:	e0ffb615 	stw	r3,-296(fp)
  81e8d4:	e17fb417 	ldw	r5,-304(fp)
  81e8d8:	e13fb117 	ldw	r4,-316(fp)
  81e8dc:	08302100 	call	830210 <__addsf3>
  81e8e0:	1007883a 	mov	r3,r2
  81e8e4:	e0ffb715 	stw	r3,-292(fp)
  81e8e8:	e17fb417 	ldw	r5,-304(fp)
  81e8ec:	e13fb117 	ldw	r4,-316(fp)
  81e8f0:	0830b080 	call	830b08 <__subsf3>
  81e8f4:	1007883a 	mov	r3,r2
  81e8f8:	e0ffb815 	stw	r3,-288(fp)
  81e8fc:	e17fb517 	ldw	r5,-300(fp)
  81e900:	e13fb717 	ldw	r4,-292(fp)
  81e904:	08302100 	call	830210 <__addsf3>
  81e908:	1007883a 	mov	r3,r2
  81e90c:	e0ffb415 	stw	r3,-304(fp)
  81e910:	e17fb517 	ldw	r5,-300(fp)
  81e914:	e13fb717 	ldw	r4,-292(fp)
  81e918:	0830b080 	call	830b08 <__subsf3>
  81e91c:	1007883a 	mov	r3,r2
  81e920:	1805883a 	mov	r2,r3
  81e924:	014fed74 	movhi	r5,16309
  81e928:	29413cc4 	addi	r5,r5,1267
  81e92c:	1009883a 	mov	r4,r2
  81e930:	08306d80 	call	8306d8 <__mulsf3>
  81e934:	1007883a 	mov	r3,r2
  81e938:	e0ffae15 	stw	r3,-328(fp)
  81e93c:	e17fb817 	ldw	r5,-288(fp)
  81e940:	e13fb617 	ldw	r4,-296(fp)
  81e944:	08302100 	call	830210 <__addsf3>
  81e948:	1007883a 	mov	r3,r2
  81e94c:	1805883a 	mov	r2,r3
  81e950:	014ffb74 	movhi	r5,16365
  81e954:	2960d784 	addi	r5,r5,-31906
  81e958:	1009883a 	mov	r4,r2
  81e95c:	08306d80 	call	8306d8 <__mulsf3>
  81e960:	1007883a 	mov	r3,r2
  81e964:	e0ffb915 	stw	r3,-284(fp)
  81e968:	014fe2f4 	movhi	r5,16267
  81e96c:	2962f504 	addi	r5,r5,-29740
  81e970:	e13fb817 	ldw	r4,-288(fp)
  81e974:	08306d80 	call	8306d8 <__mulsf3>
  81e978:	1007883a 	mov	r3,r2
  81e97c:	1805883a 	mov	r2,r3
  81e980:	100b883a 	mov	r5,r2
  81e984:	e13fb917 	ldw	r4,-284(fp)
  81e988:	0830b080 	call	830b08 <__subsf3>
  81e98c:	1007883a 	mov	r3,r2
  81e990:	e0ffad15 	stw	r3,-332(fp)
  81e994:	015009f4 	movhi	r5,16423
  81e998:	294f5d44 	addi	r5,r5,15733
  81e99c:	e13fb617 	ldw	r4,-296(fp)
  81e9a0:	08306d80 	call	8306d8 <__mulsf3>
  81e9a4:	1007883a 	mov	r3,r2
  81e9a8:	1805883a 	mov	r2,r3
  81e9ac:	100b883a 	mov	r5,r2
  81e9b0:	e13fb917 	ldw	r4,-284(fp)
  81e9b4:	0830b080 	call	830b08 <__subsf3>
  81e9b8:	1007883a 	mov	r3,r2
  81e9bc:	e0ffb015 	stw	r3,-320(fp)
  81e9c0:	e17fb417 	ldw	r5,-304(fp)
  81e9c4:	e13fb017 	ldw	r4,-320(fp)
  81e9c8:	0830b080 	call	830b08 <__subsf3>
  81e9cc:	1007883a 	mov	r3,r2
  81e9d0:	e0ffb315 	stw	r3,-308(fp)
  81e9d4:	e17fb317 	ldw	r5,-308(fp)
  81e9d8:	e13fae17 	ldw	r4,-328(fp)
  81e9dc:	0830b080 	call	830b08 <__subsf3>
  81e9e0:	1007883a 	mov	r3,r2
  81e9e4:	e0ffb215 	stw	r3,-312(fp)
  81e9e8:	e17fb217 	ldw	r5,-312(fp)
  81e9ec:	e13fad17 	ldw	r4,-332(fp)
  81e9f0:	0830b080 	call	830b08 <__subsf3>
  81e9f4:	1007883a 	mov	r3,r2
  81e9f8:	e0ffb115 	stw	r3,-316(fp)
  81e9fc:	e17fb417 	ldw	r5,-304(fp)
  81ea00:	e13fa917 	ldw	r4,-348(fp)
  81ea04:	08302100 	call	830210 <__addsf3>
  81ea08:	1009883a 	mov	r4,r2
  81ea0c:	2007883a 	mov	r3,r4
  81ea10:	e0bfa517 	ldw	r2,-364(fp)
  81ea14:	10c00015 	stw	r3,0(r2)
  81ea18:	e0bfa517 	ldw	r2,-364(fp)
  81ea1c:	14003804 	addi	r16,r2,224
  81ea20:	e17fb417 	ldw	r5,-304(fp)
  81ea24:	e13fa917 	ldw	r4,-348(fp)
  81ea28:	0830b080 	call	830b08 <__subsf3>
  81ea2c:	1007883a 	mov	r3,r2
  81ea30:	1805883a 	mov	r2,r3
  81ea34:	80800015 	stw	r2,0(r16)
  81ea38:	e0bfa517 	ldw	r2,-364(fp)
  81ea3c:	14000804 	addi	r16,r2,32
  81ea40:	e17fb317 	ldw	r5,-308(fp)
  81ea44:	e13faa17 	ldw	r4,-344(fp)
  81ea48:	08302100 	call	830210 <__addsf3>
  81ea4c:	1007883a 	mov	r3,r2
  81ea50:	1805883a 	mov	r2,r3
  81ea54:	80800015 	stw	r2,0(r16)
  81ea58:	e0bfa517 	ldw	r2,-364(fp)
  81ea5c:	14003004 	addi	r16,r2,192
  81ea60:	e17fb317 	ldw	r5,-308(fp)
  81ea64:	e13faa17 	ldw	r4,-344(fp)
  81ea68:	0830b080 	call	830b08 <__subsf3>
  81ea6c:	1007883a 	mov	r3,r2
  81ea70:	1805883a 	mov	r2,r3
  81ea74:	80800015 	stw	r2,0(r16)
  81ea78:	e0bfa517 	ldw	r2,-364(fp)
  81ea7c:	14001004 	addi	r16,r2,64
  81ea80:	e17fb217 	ldw	r5,-312(fp)
  81ea84:	e13fab17 	ldw	r4,-340(fp)
  81ea88:	08302100 	call	830210 <__addsf3>
  81ea8c:	1007883a 	mov	r3,r2
  81ea90:	1805883a 	mov	r2,r3
  81ea94:	80800015 	stw	r2,0(r16)
  81ea98:	e0bfa517 	ldw	r2,-364(fp)
  81ea9c:	14002804 	addi	r16,r2,160
  81eaa0:	e17fb217 	ldw	r5,-312(fp)
  81eaa4:	e13fab17 	ldw	r4,-340(fp)
  81eaa8:	0830b080 	call	830b08 <__subsf3>
  81eaac:	1007883a 	mov	r3,r2
  81eab0:	1805883a 	mov	r2,r3
  81eab4:	80800015 	stw	r2,0(r16)
  81eab8:	e0bfa517 	ldw	r2,-364(fp)
  81eabc:	14001804 	addi	r16,r2,96
  81eac0:	e17fb117 	ldw	r5,-316(fp)
  81eac4:	e13fac17 	ldw	r4,-336(fp)
  81eac8:	08302100 	call	830210 <__addsf3>
  81eacc:	1007883a 	mov	r3,r2
  81ead0:	1805883a 	mov	r2,r3
  81ead4:	80800015 	stw	r2,0(r16)
  81ead8:	e0bfa517 	ldw	r2,-364(fp)
  81eadc:	14002004 	addi	r16,r2,128
  81eae0:	e17fb117 	ldw	r5,-316(fp)
  81eae4:	e13fac17 	ldw	r4,-336(fp)
  81eae8:	0830b080 	call	830b08 <__subsf3>
  81eaec:	1007883a 	mov	r3,r2
  81eaf0:	1805883a 	mov	r2,r3
  81eaf4:	80800015 	stw	r2,0(r16)
  81eaf8:	e0bfa317 	ldw	r2,-372(fp)
  81eafc:	10800084 	addi	r2,r2,2
  81eb00:	e0bfa315 	stw	r2,-372(fp)
  81eb04:	e0bfa417 	ldw	r2,-368(fp)
  81eb08:	10800104 	addi	r2,r2,4
  81eb0c:	e0bfa415 	stw	r2,-368(fp)
  81eb10:	e0bfa517 	ldw	r2,-364(fp)
  81eb14:	10800104 	addi	r2,r2,4
  81eb18:	e0bfa515 	stw	r2,-364(fp)
  81eb1c:	e0bfa617 	ldw	r2,-360(fp)
  81eb20:	10bfffc4 	addi	r2,r2,-1
  81eb24:	e0bfa615 	stw	r2,-360(fp)
  81eb28:	e0bfa617 	ldw	r2,-360(fp)
  81eb2c:	00be4616 	blt	zero,r2,81e448 <__alt_mem_epcs_flash_controller_0+0xff815448>
  81eb30:	e0bfbb04 	addi	r2,fp,-276
  81eb34:	e0bfa515 	stw	r2,-364(fp)
  81eb38:	e03fa615 	stw	zero,-360(fp)
  81eb3c:	00013806 	br	81f020 <jpeg_idct_float+0xc34>
  81eb40:	e0bfa617 	ldw	r2,-360(fp)
  81eb44:	1085883a 	add	r2,r2,r2
  81eb48:	1085883a 	add	r2,r2,r2
  81eb4c:	1007883a 	mov	r3,r2
  81eb50:	e0bffe17 	ldw	r2,-8(fp)
  81eb54:	10c5883a 	add	r2,r2,r3
  81eb58:	10c00017 	ldw	r3,0(r2)
  81eb5c:	e0800217 	ldw	r2,8(fp)
  81eb60:	1885883a 	add	r2,r3,r2
  81eb64:	e0bfba15 	stw	r2,-280(fp)
  81eb68:	e0bfa517 	ldw	r2,-364(fp)
  81eb6c:	10c00017 	ldw	r3,0(r2)
  81eb70:	01510034 	movhi	r5,17408
  81eb74:	29480004 	addi	r5,r5,8192
  81eb78:	1809883a 	mov	r4,r3
  81eb7c:	08302100 	call	830210 <__addsf3>
  81eb80:	1007883a 	mov	r3,r2
  81eb84:	e0ffb915 	stw	r3,-284(fp)
  81eb88:	e0bfa517 	ldw	r2,-364(fp)
  81eb8c:	10800404 	addi	r2,r2,16
  81eb90:	10c00017 	ldw	r3,0(r2)
  81eb94:	e17fb917 	ldw	r5,-284(fp)
  81eb98:	1809883a 	mov	r4,r3
  81eb9c:	08302100 	call	830210 <__addsf3>
  81eba0:	1007883a 	mov	r3,r2
  81eba4:	e0ffad15 	stw	r3,-332(fp)
  81eba8:	e0bfa517 	ldw	r2,-364(fp)
  81ebac:	10800404 	addi	r2,r2,16
  81ebb0:	10c00017 	ldw	r3,0(r2)
  81ebb4:	180b883a 	mov	r5,r3
  81ebb8:	e13fb917 	ldw	r4,-284(fp)
  81ebbc:	0830b080 	call	830b08 <__subsf3>
  81ebc0:	1007883a 	mov	r3,r2
  81ebc4:	e0ffae15 	stw	r3,-328(fp)
  81ebc8:	e0bfa517 	ldw	r2,-364(fp)
  81ebcc:	10800204 	addi	r2,r2,8
  81ebd0:	10c00017 	ldw	r3,0(r2)
  81ebd4:	e0bfa517 	ldw	r2,-364(fp)
  81ebd8:	10800604 	addi	r2,r2,24
  81ebdc:	11000017 	ldw	r4,0(r2)
  81ebe0:	200b883a 	mov	r5,r4
  81ebe4:	1809883a 	mov	r4,r3
  81ebe8:	08302100 	call	830210 <__addsf3>
  81ebec:	1007883a 	mov	r3,r2
  81ebf0:	e0ffaf15 	stw	r3,-324(fp)
  81ebf4:	e0bfa517 	ldw	r2,-364(fp)
  81ebf8:	10800204 	addi	r2,r2,8
  81ebfc:	10c00017 	ldw	r3,0(r2)
  81ec00:	e0bfa517 	ldw	r2,-364(fp)
  81ec04:	10800604 	addi	r2,r2,24
  81ec08:	11000017 	ldw	r4,0(r2)
  81ec0c:	200b883a 	mov	r5,r4
  81ec10:	1809883a 	mov	r4,r3
  81ec14:	0830b080 	call	830b08 <__subsf3>
  81ec18:	1007883a 	mov	r3,r2
  81ec1c:	1805883a 	mov	r2,r3
  81ec20:	014fed74 	movhi	r5,16309
  81ec24:	29413cc4 	addi	r5,r5,1267
  81ec28:	1009883a 	mov	r4,r2
  81ec2c:	08306d80 	call	8306d8 <__mulsf3>
  81ec30:	1007883a 	mov	r3,r2
  81ec34:	1805883a 	mov	r2,r3
  81ec38:	e17faf17 	ldw	r5,-324(fp)
  81ec3c:	1009883a 	mov	r4,r2
  81ec40:	0830b080 	call	830b08 <__subsf3>
  81ec44:	1007883a 	mov	r3,r2
  81ec48:	e0ffb015 	stw	r3,-320(fp)
  81ec4c:	e17faf17 	ldw	r5,-324(fp)
  81ec50:	e13fad17 	ldw	r4,-332(fp)
  81ec54:	08302100 	call	830210 <__addsf3>
  81ec58:	1007883a 	mov	r3,r2
  81ec5c:	e0ffa915 	stw	r3,-348(fp)
  81ec60:	e17faf17 	ldw	r5,-324(fp)
  81ec64:	e13fad17 	ldw	r4,-332(fp)
  81ec68:	0830b080 	call	830b08 <__subsf3>
  81ec6c:	1007883a 	mov	r3,r2
  81ec70:	e0ffac15 	stw	r3,-336(fp)
  81ec74:	e17fb017 	ldw	r5,-320(fp)
  81ec78:	e13fae17 	ldw	r4,-328(fp)
  81ec7c:	08302100 	call	830210 <__addsf3>
  81ec80:	1007883a 	mov	r3,r2
  81ec84:	e0ffaa15 	stw	r3,-344(fp)
  81ec88:	e17fb017 	ldw	r5,-320(fp)
  81ec8c:	e13fae17 	ldw	r4,-328(fp)
  81ec90:	0830b080 	call	830b08 <__subsf3>
  81ec94:	1007883a 	mov	r3,r2
  81ec98:	e0ffab15 	stw	r3,-340(fp)
  81ec9c:	e0bfa517 	ldw	r2,-364(fp)
  81eca0:	10800504 	addi	r2,r2,20
  81eca4:	10c00017 	ldw	r3,0(r2)
  81eca8:	e0bfa517 	ldw	r2,-364(fp)
  81ecac:	10800304 	addi	r2,r2,12
  81ecb0:	11000017 	ldw	r4,0(r2)
  81ecb4:	200b883a 	mov	r5,r4
  81ecb8:	1809883a 	mov	r4,r3
  81ecbc:	08302100 	call	830210 <__addsf3>
  81ecc0:	1007883a 	mov	r3,r2
  81ecc4:	e0ffb515 	stw	r3,-300(fp)
  81ecc8:	e0bfa517 	ldw	r2,-364(fp)
  81eccc:	10800504 	addi	r2,r2,20
  81ecd0:	10c00017 	ldw	r3,0(r2)
  81ecd4:	e0bfa517 	ldw	r2,-364(fp)
  81ecd8:	10800304 	addi	r2,r2,12
  81ecdc:	11000017 	ldw	r4,0(r2)
  81ece0:	200b883a 	mov	r5,r4
  81ece4:	1809883a 	mov	r4,r3
  81ece8:	0830b080 	call	830b08 <__subsf3>
  81ecec:	1007883a 	mov	r3,r2
  81ecf0:	e0ffb615 	stw	r3,-296(fp)
  81ecf4:	e0bfa517 	ldw	r2,-364(fp)
  81ecf8:	10800104 	addi	r2,r2,4
  81ecfc:	10c00017 	ldw	r3,0(r2)
  81ed00:	e0bfa517 	ldw	r2,-364(fp)
  81ed04:	10800704 	addi	r2,r2,28
  81ed08:	11000017 	ldw	r4,0(r2)
  81ed0c:	200b883a 	mov	r5,r4
  81ed10:	1809883a 	mov	r4,r3
  81ed14:	08302100 	call	830210 <__addsf3>
  81ed18:	1007883a 	mov	r3,r2
  81ed1c:	e0ffb715 	stw	r3,-292(fp)
  81ed20:	e0bfa517 	ldw	r2,-364(fp)
  81ed24:	10800104 	addi	r2,r2,4
  81ed28:	10c00017 	ldw	r3,0(r2)
  81ed2c:	e0bfa517 	ldw	r2,-364(fp)
  81ed30:	10800704 	addi	r2,r2,28
  81ed34:	11000017 	ldw	r4,0(r2)
  81ed38:	200b883a 	mov	r5,r4
  81ed3c:	1809883a 	mov	r4,r3
  81ed40:	0830b080 	call	830b08 <__subsf3>
  81ed44:	1007883a 	mov	r3,r2
  81ed48:	e0ffb815 	stw	r3,-288(fp)
  81ed4c:	e17fb517 	ldw	r5,-300(fp)
  81ed50:	e13fb717 	ldw	r4,-292(fp)
  81ed54:	08302100 	call	830210 <__addsf3>
  81ed58:	1007883a 	mov	r3,r2
  81ed5c:	e0ffb415 	stw	r3,-304(fp)
  81ed60:	e17fb517 	ldw	r5,-300(fp)
  81ed64:	e13fb717 	ldw	r4,-292(fp)
  81ed68:	0830b080 	call	830b08 <__subsf3>
  81ed6c:	1007883a 	mov	r3,r2
  81ed70:	1805883a 	mov	r2,r3
  81ed74:	014fed74 	movhi	r5,16309
  81ed78:	29413cc4 	addi	r5,r5,1267
  81ed7c:	1009883a 	mov	r4,r2
  81ed80:	08306d80 	call	8306d8 <__mulsf3>
  81ed84:	1007883a 	mov	r3,r2
  81ed88:	e0ffae15 	stw	r3,-328(fp)
  81ed8c:	e17fb817 	ldw	r5,-288(fp)
  81ed90:	e13fb617 	ldw	r4,-296(fp)
  81ed94:	08302100 	call	830210 <__addsf3>
  81ed98:	1007883a 	mov	r3,r2
  81ed9c:	1805883a 	mov	r2,r3
  81eda0:	014ffb74 	movhi	r5,16365
  81eda4:	2960d784 	addi	r5,r5,-31906
  81eda8:	1009883a 	mov	r4,r2
  81edac:	08306d80 	call	8306d8 <__mulsf3>
  81edb0:	1007883a 	mov	r3,r2
  81edb4:	e0ffb915 	stw	r3,-284(fp)
  81edb8:	014fe2f4 	movhi	r5,16267
  81edbc:	2962f504 	addi	r5,r5,-29740
  81edc0:	e13fb817 	ldw	r4,-288(fp)
  81edc4:	08306d80 	call	8306d8 <__mulsf3>
  81edc8:	1007883a 	mov	r3,r2
  81edcc:	1805883a 	mov	r2,r3
  81edd0:	100b883a 	mov	r5,r2
  81edd4:	e13fb917 	ldw	r4,-284(fp)
  81edd8:	0830b080 	call	830b08 <__subsf3>
  81eddc:	1007883a 	mov	r3,r2
  81ede0:	e0ffad15 	stw	r3,-332(fp)
  81ede4:	015009f4 	movhi	r5,16423
  81ede8:	294f5d44 	addi	r5,r5,15733
  81edec:	e13fb617 	ldw	r4,-296(fp)
  81edf0:	08306d80 	call	8306d8 <__mulsf3>
  81edf4:	1007883a 	mov	r3,r2
  81edf8:	1805883a 	mov	r2,r3
  81edfc:	100b883a 	mov	r5,r2
  81ee00:	e13fb917 	ldw	r4,-284(fp)
  81ee04:	0830b080 	call	830b08 <__subsf3>
  81ee08:	1007883a 	mov	r3,r2
  81ee0c:	e0ffb015 	stw	r3,-320(fp)
  81ee10:	e17fb417 	ldw	r5,-304(fp)
  81ee14:	e13fb017 	ldw	r4,-320(fp)
  81ee18:	0830b080 	call	830b08 <__subsf3>
  81ee1c:	1007883a 	mov	r3,r2
  81ee20:	e0ffb315 	stw	r3,-308(fp)
  81ee24:	e17fb317 	ldw	r5,-308(fp)
  81ee28:	e13fae17 	ldw	r4,-328(fp)
  81ee2c:	0830b080 	call	830b08 <__subsf3>
  81ee30:	1007883a 	mov	r3,r2
  81ee34:	e0ffb215 	stw	r3,-312(fp)
  81ee38:	e17fb217 	ldw	r5,-312(fp)
  81ee3c:	e13fad17 	ldw	r4,-332(fp)
  81ee40:	0830b080 	call	830b08 <__subsf3>
  81ee44:	1007883a 	mov	r3,r2
  81ee48:	e0ffb115 	stw	r3,-316(fp)
  81ee4c:	e17fb417 	ldw	r5,-304(fp)
  81ee50:	e13fa917 	ldw	r4,-348(fp)
  81ee54:	08302100 	call	830210 <__addsf3>
  81ee58:	1007883a 	mov	r3,r2
  81ee5c:	1805883a 	mov	r2,r3
  81ee60:	1009883a 	mov	r4,r2
  81ee64:	0830fec0 	call	830fec <__fixsfsi>
  81ee68:	1080ffcc 	andi	r2,r2,1023
  81ee6c:	e0ffa717 	ldw	r3,-356(fp)
  81ee70:	1885883a 	add	r2,r3,r2
  81ee74:	10c00003 	ldbu	r3,0(r2)
  81ee78:	e0bfba17 	ldw	r2,-280(fp)
  81ee7c:	10c00005 	stb	r3,0(r2)
  81ee80:	e0bfba17 	ldw	r2,-280(fp)
  81ee84:	140001c4 	addi	r16,r2,7
  81ee88:	e17fb417 	ldw	r5,-304(fp)
  81ee8c:	e13fa917 	ldw	r4,-348(fp)
  81ee90:	0830b080 	call	830b08 <__subsf3>
  81ee94:	1007883a 	mov	r3,r2
  81ee98:	1805883a 	mov	r2,r3
  81ee9c:	1009883a 	mov	r4,r2
  81eea0:	0830fec0 	call	830fec <__fixsfsi>
  81eea4:	1080ffcc 	andi	r2,r2,1023
  81eea8:	e0ffa717 	ldw	r3,-356(fp)
  81eeac:	1885883a 	add	r2,r3,r2
  81eeb0:	10800003 	ldbu	r2,0(r2)
  81eeb4:	80800005 	stb	r2,0(r16)
  81eeb8:	e0bfba17 	ldw	r2,-280(fp)
  81eebc:	14000044 	addi	r16,r2,1
  81eec0:	e17fb317 	ldw	r5,-308(fp)
  81eec4:	e13faa17 	ldw	r4,-344(fp)
  81eec8:	08302100 	call	830210 <__addsf3>
  81eecc:	1007883a 	mov	r3,r2
  81eed0:	1805883a 	mov	r2,r3
  81eed4:	1009883a 	mov	r4,r2
  81eed8:	0830fec0 	call	830fec <__fixsfsi>
  81eedc:	1080ffcc 	andi	r2,r2,1023
  81eee0:	e0ffa717 	ldw	r3,-356(fp)
  81eee4:	1885883a 	add	r2,r3,r2
  81eee8:	10800003 	ldbu	r2,0(r2)
  81eeec:	80800005 	stb	r2,0(r16)
  81eef0:	e0bfba17 	ldw	r2,-280(fp)
  81eef4:	14000184 	addi	r16,r2,6
  81eef8:	e17fb317 	ldw	r5,-308(fp)
  81eefc:	e13faa17 	ldw	r4,-344(fp)
  81ef00:	0830b080 	call	830b08 <__subsf3>
  81ef04:	1007883a 	mov	r3,r2
  81ef08:	1805883a 	mov	r2,r3
  81ef0c:	1009883a 	mov	r4,r2
  81ef10:	0830fec0 	call	830fec <__fixsfsi>
  81ef14:	1080ffcc 	andi	r2,r2,1023
  81ef18:	e0ffa717 	ldw	r3,-356(fp)
  81ef1c:	1885883a 	add	r2,r3,r2
  81ef20:	10800003 	ldbu	r2,0(r2)
  81ef24:	80800005 	stb	r2,0(r16)
  81ef28:	e0bfba17 	ldw	r2,-280(fp)
  81ef2c:	14000084 	addi	r16,r2,2
  81ef30:	e17fb217 	ldw	r5,-312(fp)
  81ef34:	e13fab17 	ldw	r4,-340(fp)
  81ef38:	08302100 	call	830210 <__addsf3>
  81ef3c:	1007883a 	mov	r3,r2
  81ef40:	1805883a 	mov	r2,r3
  81ef44:	1009883a 	mov	r4,r2
  81ef48:	0830fec0 	call	830fec <__fixsfsi>
  81ef4c:	1080ffcc 	andi	r2,r2,1023
  81ef50:	e0ffa717 	ldw	r3,-356(fp)
  81ef54:	1885883a 	add	r2,r3,r2
  81ef58:	10800003 	ldbu	r2,0(r2)
  81ef5c:	80800005 	stb	r2,0(r16)
  81ef60:	e0bfba17 	ldw	r2,-280(fp)
  81ef64:	14000144 	addi	r16,r2,5
  81ef68:	e17fb217 	ldw	r5,-312(fp)
  81ef6c:	e13fab17 	ldw	r4,-340(fp)
  81ef70:	0830b080 	call	830b08 <__subsf3>
  81ef74:	1007883a 	mov	r3,r2
  81ef78:	1805883a 	mov	r2,r3
  81ef7c:	1009883a 	mov	r4,r2
  81ef80:	0830fec0 	call	830fec <__fixsfsi>
  81ef84:	1080ffcc 	andi	r2,r2,1023
  81ef88:	e0ffa717 	ldw	r3,-356(fp)
  81ef8c:	1885883a 	add	r2,r3,r2
  81ef90:	10800003 	ldbu	r2,0(r2)
  81ef94:	80800005 	stb	r2,0(r16)
  81ef98:	e0bfba17 	ldw	r2,-280(fp)
  81ef9c:	140000c4 	addi	r16,r2,3
  81efa0:	e17fb117 	ldw	r5,-316(fp)
  81efa4:	e13fac17 	ldw	r4,-336(fp)
  81efa8:	08302100 	call	830210 <__addsf3>
  81efac:	1007883a 	mov	r3,r2
  81efb0:	1805883a 	mov	r2,r3
  81efb4:	1009883a 	mov	r4,r2
  81efb8:	0830fec0 	call	830fec <__fixsfsi>
  81efbc:	1080ffcc 	andi	r2,r2,1023
  81efc0:	e0ffa717 	ldw	r3,-356(fp)
  81efc4:	1885883a 	add	r2,r3,r2
  81efc8:	10800003 	ldbu	r2,0(r2)
  81efcc:	80800005 	stb	r2,0(r16)
  81efd0:	e0bfba17 	ldw	r2,-280(fp)
  81efd4:	14000104 	addi	r16,r2,4
  81efd8:	e17fb117 	ldw	r5,-316(fp)
  81efdc:	e13fac17 	ldw	r4,-336(fp)
  81efe0:	0830b080 	call	830b08 <__subsf3>
  81efe4:	1007883a 	mov	r3,r2
  81efe8:	1805883a 	mov	r2,r3
  81efec:	1009883a 	mov	r4,r2
  81eff0:	0830fec0 	call	830fec <__fixsfsi>
  81eff4:	1080ffcc 	andi	r2,r2,1023
  81eff8:	e0ffa717 	ldw	r3,-356(fp)
  81effc:	1885883a 	add	r2,r3,r2
  81f000:	10800003 	ldbu	r2,0(r2)
  81f004:	80800005 	stb	r2,0(r16)
  81f008:	e0bfa517 	ldw	r2,-364(fp)
  81f00c:	10800804 	addi	r2,r2,32
  81f010:	e0bfa515 	stw	r2,-364(fp)
  81f014:	e0bfa617 	ldw	r2,-360(fp)
  81f018:	10800044 	addi	r2,r2,1
  81f01c:	e0bfa615 	stw	r2,-360(fp)
  81f020:	e0bfa617 	ldw	r2,-360(fp)
  81f024:	10800210 	cmplti	r2,r2,8
  81f028:	103ec51e 	bne	r2,zero,81eb40 <__alt_mem_epcs_flash_controller_0+0xff815b40>
  81f02c:	0001883a 	nop
  81f030:	e6ffff04 	addi	sp,fp,-4
  81f034:	dfc00217 	ldw	ra,8(sp)
  81f038:	df000117 	ldw	fp,4(sp)
  81f03c:	dc000017 	ldw	r16,0(sp)
  81f040:	dec00304 	addi	sp,sp,12
  81f044:	f800283a 	ret

0081f048 <jpeg_idct_ifast>:
  81f048:	deffa104 	addi	sp,sp,-380
  81f04c:	dfc05e15 	stw	ra,376(sp)
  81f050:	df005d15 	stw	fp,372(sp)
  81f054:	df005d04 	addi	fp,sp,372
  81f058:	e13ffc15 	stw	r4,-16(fp)
  81f05c:	e17ffd15 	stw	r5,-12(fp)
  81f060:	e1bffe15 	stw	r6,-8(fp)
  81f064:	e1ffff15 	stw	r7,-4(fp)
  81f068:	e0bffc17 	ldw	r2,-16(fp)
  81f06c:	10805417 	ldw	r2,336(r2)
  81f070:	10bfa004 	addi	r2,r2,-384
  81f074:	e0bfa715 	stw	r2,-356(fp)
  81f078:	e0bffe17 	ldw	r2,-8(fp)
  81f07c:	e0bfa315 	stw	r2,-372(fp)
  81f080:	e0bffd17 	ldw	r2,-12(fp)
  81f084:	10801517 	ldw	r2,84(r2)
  81f088:	e0bfa415 	stw	r2,-368(fp)
  81f08c:	e0bfbc04 	addi	r2,fp,-272
  81f090:	e0bfa515 	stw	r2,-364(fp)
  81f094:	00800204 	movi	r2,8
  81f098:	e0bfa615 	stw	r2,-360(fp)
  81f09c:	00016a06 	br	81f648 <jpeg_idct_ifast+0x600>
  81f0a0:	e0bfa317 	ldw	r2,-372(fp)
  81f0a4:	10800404 	addi	r2,r2,16
  81f0a8:	1080000b 	ldhu	r2,0(r2)
  81f0ac:	10bfffcc 	andi	r2,r2,65535
  81f0b0:	10a0001c 	xori	r2,r2,32768
  81f0b4:	10a00004 	addi	r2,r2,-32768
  81f0b8:	10005e1e 	bne	r2,zero,81f234 <jpeg_idct_ifast+0x1ec>
  81f0bc:	e0bfa317 	ldw	r2,-372(fp)
  81f0c0:	10800804 	addi	r2,r2,32
  81f0c4:	1080000b 	ldhu	r2,0(r2)
  81f0c8:	10bfffcc 	andi	r2,r2,65535
  81f0cc:	10a0001c 	xori	r2,r2,32768
  81f0d0:	10a00004 	addi	r2,r2,-32768
  81f0d4:	1000571e 	bne	r2,zero,81f234 <jpeg_idct_ifast+0x1ec>
  81f0d8:	e0bfa317 	ldw	r2,-372(fp)
  81f0dc:	10800c04 	addi	r2,r2,48
  81f0e0:	1080000b 	ldhu	r2,0(r2)
  81f0e4:	10bfffcc 	andi	r2,r2,65535
  81f0e8:	10a0001c 	xori	r2,r2,32768
  81f0ec:	10a00004 	addi	r2,r2,-32768
  81f0f0:	1000501e 	bne	r2,zero,81f234 <jpeg_idct_ifast+0x1ec>
  81f0f4:	e0bfa317 	ldw	r2,-372(fp)
  81f0f8:	10801004 	addi	r2,r2,64
  81f0fc:	1080000b 	ldhu	r2,0(r2)
  81f100:	10bfffcc 	andi	r2,r2,65535
  81f104:	10a0001c 	xori	r2,r2,32768
  81f108:	10a00004 	addi	r2,r2,-32768
  81f10c:	1000491e 	bne	r2,zero,81f234 <jpeg_idct_ifast+0x1ec>
  81f110:	e0bfa317 	ldw	r2,-372(fp)
  81f114:	10801404 	addi	r2,r2,80
  81f118:	1080000b 	ldhu	r2,0(r2)
  81f11c:	10bfffcc 	andi	r2,r2,65535
  81f120:	10a0001c 	xori	r2,r2,32768
  81f124:	10a00004 	addi	r2,r2,-32768
  81f128:	1000421e 	bne	r2,zero,81f234 <jpeg_idct_ifast+0x1ec>
  81f12c:	e0bfa317 	ldw	r2,-372(fp)
  81f130:	10801804 	addi	r2,r2,96
  81f134:	1080000b 	ldhu	r2,0(r2)
  81f138:	10bfffcc 	andi	r2,r2,65535
  81f13c:	10a0001c 	xori	r2,r2,32768
  81f140:	10a00004 	addi	r2,r2,-32768
  81f144:	10003b1e 	bne	r2,zero,81f234 <jpeg_idct_ifast+0x1ec>
  81f148:	e0bfa317 	ldw	r2,-372(fp)
  81f14c:	10801c04 	addi	r2,r2,112
  81f150:	1080000b 	ldhu	r2,0(r2)
  81f154:	10bfffcc 	andi	r2,r2,65535
  81f158:	10a0001c 	xori	r2,r2,32768
  81f15c:	10a00004 	addi	r2,r2,-32768
  81f160:	1000341e 	bne	r2,zero,81f234 <jpeg_idct_ifast+0x1ec>
  81f164:	e0bfa317 	ldw	r2,-372(fp)
  81f168:	1080000b 	ldhu	r2,0(r2)
  81f16c:	10ffffcc 	andi	r3,r2,65535
  81f170:	18e0001c 	xori	r3,r3,32768
  81f174:	18e00004 	addi	r3,r3,-32768
  81f178:	e0bfa417 	ldw	r2,-368(fp)
  81f17c:	10800017 	ldw	r2,0(r2)
  81f180:	100b883a 	mov	r5,r2
  81f184:	1809883a 	mov	r4,r3
  81f188:	08301e80 	call	8301e8 <__mulsi3>
  81f18c:	e0bfa815 	stw	r2,-352(fp)
  81f190:	e0bfa517 	ldw	r2,-364(fp)
  81f194:	e0ffa817 	ldw	r3,-352(fp)
  81f198:	10c00015 	stw	r3,0(r2)
  81f19c:	e0bfa517 	ldw	r2,-364(fp)
  81f1a0:	10800804 	addi	r2,r2,32
  81f1a4:	e0ffa817 	ldw	r3,-352(fp)
  81f1a8:	10c00015 	stw	r3,0(r2)
  81f1ac:	e0bfa517 	ldw	r2,-364(fp)
  81f1b0:	10801004 	addi	r2,r2,64
  81f1b4:	e0ffa817 	ldw	r3,-352(fp)
  81f1b8:	10c00015 	stw	r3,0(r2)
  81f1bc:	e0bfa517 	ldw	r2,-364(fp)
  81f1c0:	10801804 	addi	r2,r2,96
  81f1c4:	e0ffa817 	ldw	r3,-352(fp)
  81f1c8:	10c00015 	stw	r3,0(r2)
  81f1cc:	e0bfa517 	ldw	r2,-364(fp)
  81f1d0:	10802004 	addi	r2,r2,128
  81f1d4:	e0ffa817 	ldw	r3,-352(fp)
  81f1d8:	10c00015 	stw	r3,0(r2)
  81f1dc:	e0bfa517 	ldw	r2,-364(fp)
  81f1e0:	10802804 	addi	r2,r2,160
  81f1e4:	e0ffa817 	ldw	r3,-352(fp)
  81f1e8:	10c00015 	stw	r3,0(r2)
  81f1ec:	e0bfa517 	ldw	r2,-364(fp)
  81f1f0:	10803004 	addi	r2,r2,192
  81f1f4:	e0ffa817 	ldw	r3,-352(fp)
  81f1f8:	10c00015 	stw	r3,0(r2)
  81f1fc:	e0bfa517 	ldw	r2,-364(fp)
  81f200:	10803804 	addi	r2,r2,224
  81f204:	e0ffa817 	ldw	r3,-352(fp)
  81f208:	10c00015 	stw	r3,0(r2)
  81f20c:	e0bfa317 	ldw	r2,-372(fp)
  81f210:	10800084 	addi	r2,r2,2
  81f214:	e0bfa315 	stw	r2,-372(fp)
  81f218:	e0bfa417 	ldw	r2,-368(fp)
  81f21c:	10800104 	addi	r2,r2,4
  81f220:	e0bfa415 	stw	r2,-368(fp)
  81f224:	e0bfa517 	ldw	r2,-364(fp)
  81f228:	10800104 	addi	r2,r2,4
  81f22c:	e0bfa515 	stw	r2,-364(fp)
  81f230:	00010206 	br	81f63c <jpeg_idct_ifast+0x5f4>
  81f234:	e0bfa317 	ldw	r2,-372(fp)
  81f238:	1080000b 	ldhu	r2,0(r2)
  81f23c:	10ffffcc 	andi	r3,r2,65535
  81f240:	18e0001c 	xori	r3,r3,32768
  81f244:	18e00004 	addi	r3,r3,-32768
  81f248:	e0bfa417 	ldw	r2,-368(fp)
  81f24c:	10800017 	ldw	r2,0(r2)
  81f250:	100b883a 	mov	r5,r2
  81f254:	1809883a 	mov	r4,r3
  81f258:	08301e80 	call	8301e8 <__mulsi3>
  81f25c:	e0bfa915 	stw	r2,-348(fp)
  81f260:	e0bfa317 	ldw	r2,-372(fp)
  81f264:	10800804 	addi	r2,r2,32
  81f268:	1080000b 	ldhu	r2,0(r2)
  81f26c:	10ffffcc 	andi	r3,r2,65535
  81f270:	18e0001c 	xori	r3,r3,32768
  81f274:	18e00004 	addi	r3,r3,-32768
  81f278:	e0bfa417 	ldw	r2,-368(fp)
  81f27c:	10801004 	addi	r2,r2,64
  81f280:	10800017 	ldw	r2,0(r2)
  81f284:	100b883a 	mov	r5,r2
  81f288:	1809883a 	mov	r4,r3
  81f28c:	08301e80 	call	8301e8 <__mulsi3>
  81f290:	e0bfaa15 	stw	r2,-344(fp)
  81f294:	e0bfa317 	ldw	r2,-372(fp)
  81f298:	10801004 	addi	r2,r2,64
  81f29c:	1080000b 	ldhu	r2,0(r2)
  81f2a0:	10ffffcc 	andi	r3,r2,65535
  81f2a4:	18e0001c 	xori	r3,r3,32768
  81f2a8:	18e00004 	addi	r3,r3,-32768
  81f2ac:	e0bfa417 	ldw	r2,-368(fp)
  81f2b0:	10802004 	addi	r2,r2,128
  81f2b4:	10800017 	ldw	r2,0(r2)
  81f2b8:	100b883a 	mov	r5,r2
  81f2bc:	1809883a 	mov	r4,r3
  81f2c0:	08301e80 	call	8301e8 <__mulsi3>
  81f2c4:	e0bfab15 	stw	r2,-340(fp)
  81f2c8:	e0bfa317 	ldw	r2,-372(fp)
  81f2cc:	10801804 	addi	r2,r2,96
  81f2d0:	1080000b 	ldhu	r2,0(r2)
  81f2d4:	10ffffcc 	andi	r3,r2,65535
  81f2d8:	18e0001c 	xori	r3,r3,32768
  81f2dc:	18e00004 	addi	r3,r3,-32768
  81f2e0:	e0bfa417 	ldw	r2,-368(fp)
  81f2e4:	10803004 	addi	r2,r2,192
  81f2e8:	10800017 	ldw	r2,0(r2)
  81f2ec:	100b883a 	mov	r5,r2
  81f2f0:	1809883a 	mov	r4,r3
  81f2f4:	08301e80 	call	8301e8 <__mulsi3>
  81f2f8:	e0bfac15 	stw	r2,-336(fp)
  81f2fc:	e0ffa917 	ldw	r3,-348(fp)
  81f300:	e0bfab17 	ldw	r2,-340(fp)
  81f304:	1885883a 	add	r2,r3,r2
  81f308:	e0bfad15 	stw	r2,-332(fp)
  81f30c:	e0ffa917 	ldw	r3,-348(fp)
  81f310:	e0bfab17 	ldw	r2,-340(fp)
  81f314:	1885c83a 	sub	r2,r3,r2
  81f318:	e0bfae15 	stw	r2,-328(fp)
  81f31c:	e0ffaa17 	ldw	r3,-344(fp)
  81f320:	e0bfac17 	ldw	r2,-336(fp)
  81f324:	1885883a 	add	r2,r3,r2
  81f328:	e0bfaf15 	stw	r2,-324(fp)
  81f32c:	e0ffaa17 	ldw	r3,-344(fp)
  81f330:	e0bfac17 	ldw	r2,-336(fp)
  81f334:	1885c83a 	sub	r2,r3,r2
  81f338:	01405a84 	movi	r5,362
  81f33c:	1009883a 	mov	r4,r2
  81f340:	08301e80 	call	8301e8 <__mulsi3>
  81f344:	1007d23a 	srai	r3,r2,8
  81f348:	e0bfaf17 	ldw	r2,-324(fp)
  81f34c:	1885c83a 	sub	r2,r3,r2
  81f350:	e0bfb015 	stw	r2,-320(fp)
  81f354:	e0ffad17 	ldw	r3,-332(fp)
  81f358:	e0bfaf17 	ldw	r2,-324(fp)
  81f35c:	1885883a 	add	r2,r3,r2
  81f360:	e0bfa915 	stw	r2,-348(fp)
  81f364:	e0ffad17 	ldw	r3,-332(fp)
  81f368:	e0bfaf17 	ldw	r2,-324(fp)
  81f36c:	1885c83a 	sub	r2,r3,r2
  81f370:	e0bfac15 	stw	r2,-336(fp)
  81f374:	e0ffae17 	ldw	r3,-328(fp)
  81f378:	e0bfb017 	ldw	r2,-320(fp)
  81f37c:	1885883a 	add	r2,r3,r2
  81f380:	e0bfaa15 	stw	r2,-344(fp)
  81f384:	e0ffae17 	ldw	r3,-328(fp)
  81f388:	e0bfb017 	ldw	r2,-320(fp)
  81f38c:	1885c83a 	sub	r2,r3,r2
  81f390:	e0bfab15 	stw	r2,-340(fp)
  81f394:	e0bfa317 	ldw	r2,-372(fp)
  81f398:	10800404 	addi	r2,r2,16
  81f39c:	1080000b 	ldhu	r2,0(r2)
  81f3a0:	10ffffcc 	andi	r3,r2,65535
  81f3a4:	18e0001c 	xori	r3,r3,32768
  81f3a8:	18e00004 	addi	r3,r3,-32768
  81f3ac:	e0bfa417 	ldw	r2,-368(fp)
  81f3b0:	10800804 	addi	r2,r2,32
  81f3b4:	10800017 	ldw	r2,0(r2)
  81f3b8:	100b883a 	mov	r5,r2
  81f3bc:	1809883a 	mov	r4,r3
  81f3c0:	08301e80 	call	8301e8 <__mulsi3>
  81f3c4:	e0bfb115 	stw	r2,-316(fp)
  81f3c8:	e0bfa317 	ldw	r2,-372(fp)
  81f3cc:	10800c04 	addi	r2,r2,48
  81f3d0:	1080000b 	ldhu	r2,0(r2)
  81f3d4:	10ffffcc 	andi	r3,r2,65535
  81f3d8:	18e0001c 	xori	r3,r3,32768
  81f3dc:	18e00004 	addi	r3,r3,-32768
  81f3e0:	e0bfa417 	ldw	r2,-368(fp)
  81f3e4:	10801804 	addi	r2,r2,96
  81f3e8:	10800017 	ldw	r2,0(r2)
  81f3ec:	100b883a 	mov	r5,r2
  81f3f0:	1809883a 	mov	r4,r3
  81f3f4:	08301e80 	call	8301e8 <__mulsi3>
  81f3f8:	e0bfb215 	stw	r2,-312(fp)
  81f3fc:	e0bfa317 	ldw	r2,-372(fp)
  81f400:	10801404 	addi	r2,r2,80
  81f404:	1080000b 	ldhu	r2,0(r2)
  81f408:	10ffffcc 	andi	r3,r2,65535
  81f40c:	18e0001c 	xori	r3,r3,32768
  81f410:	18e00004 	addi	r3,r3,-32768
  81f414:	e0bfa417 	ldw	r2,-368(fp)
  81f418:	10802804 	addi	r2,r2,160
  81f41c:	10800017 	ldw	r2,0(r2)
  81f420:	100b883a 	mov	r5,r2
  81f424:	1809883a 	mov	r4,r3
  81f428:	08301e80 	call	8301e8 <__mulsi3>
  81f42c:	e0bfb315 	stw	r2,-308(fp)
  81f430:	e0bfa317 	ldw	r2,-372(fp)
  81f434:	10801c04 	addi	r2,r2,112
  81f438:	1080000b 	ldhu	r2,0(r2)
  81f43c:	10ffffcc 	andi	r3,r2,65535
  81f440:	18e0001c 	xori	r3,r3,32768
  81f444:	18e00004 	addi	r3,r3,-32768
  81f448:	e0bfa417 	ldw	r2,-368(fp)
  81f44c:	10803804 	addi	r2,r2,224
  81f450:	10800017 	ldw	r2,0(r2)
  81f454:	100b883a 	mov	r5,r2
  81f458:	1809883a 	mov	r4,r3
  81f45c:	08301e80 	call	8301e8 <__mulsi3>
  81f460:	e0bfb415 	stw	r2,-304(fp)
  81f464:	e0ffb317 	ldw	r3,-308(fp)
  81f468:	e0bfb217 	ldw	r2,-312(fp)
  81f46c:	1885883a 	add	r2,r3,r2
  81f470:	e0bfb515 	stw	r2,-300(fp)
  81f474:	e0ffb317 	ldw	r3,-308(fp)
  81f478:	e0bfb217 	ldw	r2,-312(fp)
  81f47c:	1885c83a 	sub	r2,r3,r2
  81f480:	e0bfb615 	stw	r2,-296(fp)
  81f484:	e0ffb117 	ldw	r3,-316(fp)
  81f488:	e0bfb417 	ldw	r2,-304(fp)
  81f48c:	1885883a 	add	r2,r3,r2
  81f490:	e0bfb715 	stw	r2,-292(fp)
  81f494:	e0ffb117 	ldw	r3,-316(fp)
  81f498:	e0bfb417 	ldw	r2,-304(fp)
  81f49c:	1885c83a 	sub	r2,r3,r2
  81f4a0:	e0bfb815 	stw	r2,-288(fp)
  81f4a4:	e0ffb717 	ldw	r3,-292(fp)
  81f4a8:	e0bfb517 	ldw	r2,-300(fp)
  81f4ac:	1885883a 	add	r2,r3,r2
  81f4b0:	e0bfb415 	stw	r2,-304(fp)
  81f4b4:	e0ffb717 	ldw	r3,-292(fp)
  81f4b8:	e0bfb517 	ldw	r2,-300(fp)
  81f4bc:	1885c83a 	sub	r2,r3,r2
  81f4c0:	01405a84 	movi	r5,362
  81f4c4:	1009883a 	mov	r4,r2
  81f4c8:	08301e80 	call	8301e8 <__mulsi3>
  81f4cc:	1005d23a 	srai	r2,r2,8
  81f4d0:	e0bfae15 	stw	r2,-328(fp)
  81f4d4:	e0ffb617 	ldw	r3,-296(fp)
  81f4d8:	e0bfb817 	ldw	r2,-288(fp)
  81f4dc:	1885883a 	add	r2,r3,r2
  81f4e0:	01407644 	movi	r5,473
  81f4e4:	1009883a 	mov	r4,r2
  81f4e8:	08301e80 	call	8301e8 <__mulsi3>
  81f4ec:	1005d23a 	srai	r2,r2,8
  81f4f0:	e0bfb915 	stw	r2,-284(fp)
  81f4f4:	01404544 	movi	r5,277
  81f4f8:	e13fb817 	ldw	r4,-288(fp)
  81f4fc:	08301e80 	call	8301e8 <__mulsi3>
  81f500:	1005d23a 	srai	r2,r2,8
  81f504:	e0ffb917 	ldw	r3,-284(fp)
  81f508:	1885c83a 	sub	r2,r3,r2
  81f50c:	e0bfad15 	stw	r2,-332(fp)
  81f510:	0140a744 	movi	r5,669
  81f514:	e13fb617 	ldw	r4,-296(fp)
  81f518:	08301e80 	call	8301e8 <__mulsi3>
  81f51c:	1005d23a 	srai	r2,r2,8
  81f520:	e0ffb917 	ldw	r3,-284(fp)
  81f524:	1885c83a 	sub	r2,r3,r2
  81f528:	e0bfb015 	stw	r2,-320(fp)
  81f52c:	e0ffb017 	ldw	r3,-320(fp)
  81f530:	e0bfb417 	ldw	r2,-304(fp)
  81f534:	1885c83a 	sub	r2,r3,r2
  81f538:	e0bfb315 	stw	r2,-308(fp)
  81f53c:	e0ffae17 	ldw	r3,-328(fp)
  81f540:	e0bfb317 	ldw	r2,-308(fp)
  81f544:	1885c83a 	sub	r2,r3,r2
  81f548:	e0bfb215 	stw	r2,-312(fp)
  81f54c:	e0ffad17 	ldw	r3,-332(fp)
  81f550:	e0bfb217 	ldw	r2,-312(fp)
  81f554:	1885c83a 	sub	r2,r3,r2
  81f558:	e0bfb115 	stw	r2,-316(fp)
  81f55c:	e0ffa917 	ldw	r3,-348(fp)
  81f560:	e0bfb417 	ldw	r2,-304(fp)
  81f564:	1887883a 	add	r3,r3,r2
  81f568:	e0bfa517 	ldw	r2,-364(fp)
  81f56c:	10c00015 	stw	r3,0(r2)
  81f570:	e0bfa517 	ldw	r2,-364(fp)
  81f574:	10803804 	addi	r2,r2,224
  81f578:	e13fa917 	ldw	r4,-348(fp)
  81f57c:	e0ffb417 	ldw	r3,-304(fp)
  81f580:	20c7c83a 	sub	r3,r4,r3
  81f584:	10c00015 	stw	r3,0(r2)
  81f588:	e0bfa517 	ldw	r2,-364(fp)
  81f58c:	10800804 	addi	r2,r2,32
  81f590:	e13faa17 	ldw	r4,-344(fp)
  81f594:	e0ffb317 	ldw	r3,-308(fp)
  81f598:	20c7883a 	add	r3,r4,r3
  81f59c:	10c00015 	stw	r3,0(r2)
  81f5a0:	e0bfa517 	ldw	r2,-364(fp)
  81f5a4:	10803004 	addi	r2,r2,192
  81f5a8:	e13faa17 	ldw	r4,-344(fp)
  81f5ac:	e0ffb317 	ldw	r3,-308(fp)
  81f5b0:	20c7c83a 	sub	r3,r4,r3
  81f5b4:	10c00015 	stw	r3,0(r2)
  81f5b8:	e0bfa517 	ldw	r2,-364(fp)
  81f5bc:	10801004 	addi	r2,r2,64
  81f5c0:	e13fab17 	ldw	r4,-340(fp)
  81f5c4:	e0ffb217 	ldw	r3,-312(fp)
  81f5c8:	20c7883a 	add	r3,r4,r3
  81f5cc:	10c00015 	stw	r3,0(r2)
  81f5d0:	e0bfa517 	ldw	r2,-364(fp)
  81f5d4:	10802804 	addi	r2,r2,160
  81f5d8:	e13fab17 	ldw	r4,-340(fp)
  81f5dc:	e0ffb217 	ldw	r3,-312(fp)
  81f5e0:	20c7c83a 	sub	r3,r4,r3
  81f5e4:	10c00015 	stw	r3,0(r2)
  81f5e8:	e0bfa517 	ldw	r2,-364(fp)
  81f5ec:	10801804 	addi	r2,r2,96
  81f5f0:	e13fac17 	ldw	r4,-336(fp)
  81f5f4:	e0ffb117 	ldw	r3,-316(fp)
  81f5f8:	20c7883a 	add	r3,r4,r3
  81f5fc:	10c00015 	stw	r3,0(r2)
  81f600:	e0bfa517 	ldw	r2,-364(fp)
  81f604:	10802004 	addi	r2,r2,128
  81f608:	e13fac17 	ldw	r4,-336(fp)
  81f60c:	e0ffb117 	ldw	r3,-316(fp)
  81f610:	20c7c83a 	sub	r3,r4,r3
  81f614:	10c00015 	stw	r3,0(r2)
  81f618:	e0bfa317 	ldw	r2,-372(fp)
  81f61c:	10800084 	addi	r2,r2,2
  81f620:	e0bfa315 	stw	r2,-372(fp)
  81f624:	e0bfa417 	ldw	r2,-368(fp)
  81f628:	10800104 	addi	r2,r2,4
  81f62c:	e0bfa415 	stw	r2,-368(fp)
  81f630:	e0bfa517 	ldw	r2,-364(fp)
  81f634:	10800104 	addi	r2,r2,4
  81f638:	e0bfa515 	stw	r2,-364(fp)
  81f63c:	e0bfa617 	ldw	r2,-360(fp)
  81f640:	10bfffc4 	addi	r2,r2,-1
  81f644:	e0bfa615 	stw	r2,-360(fp)
  81f648:	e0bfa617 	ldw	r2,-360(fp)
  81f64c:	00be9416 	blt	zero,r2,81f0a0 <__alt_mem_epcs_flash_controller_0+0xff8160a0>
  81f650:	e0bfbc04 	addi	r2,fp,-272
  81f654:	e0bfa515 	stw	r2,-364(fp)
  81f658:	e03fa615 	stw	zero,-360(fp)
  81f65c:	00013106 	br	81fb24 <jpeg_idct_ifast+0xadc>
  81f660:	e0bfa617 	ldw	r2,-360(fp)
  81f664:	1085883a 	add	r2,r2,r2
  81f668:	1085883a 	add	r2,r2,r2
  81f66c:	1007883a 	mov	r3,r2
  81f670:	e0bfff17 	ldw	r2,-4(fp)
  81f674:	10c5883a 	add	r2,r2,r3
  81f678:	10c00017 	ldw	r3,0(r2)
  81f67c:	e0800217 	ldw	r2,8(fp)
  81f680:	1885883a 	add	r2,r3,r2
  81f684:	e0bfba15 	stw	r2,-280(fp)
  81f688:	e0bfa517 	ldw	r2,-364(fp)
  81f68c:	10800017 	ldw	r2,0(r2)
  81f690:	10900404 	addi	r2,r2,16400
  81f694:	e0bfb915 	stw	r2,-284(fp)
  81f698:	e0bfa517 	ldw	r2,-364(fp)
  81f69c:	10800104 	addi	r2,r2,4
  81f6a0:	10800017 	ldw	r2,0(r2)
  81f6a4:	1000421e 	bne	r2,zero,81f7b0 <jpeg_idct_ifast+0x768>
  81f6a8:	e0bfa517 	ldw	r2,-364(fp)
  81f6ac:	10800204 	addi	r2,r2,8
  81f6b0:	10800017 	ldw	r2,0(r2)
  81f6b4:	10003e1e 	bne	r2,zero,81f7b0 <jpeg_idct_ifast+0x768>
  81f6b8:	e0bfa517 	ldw	r2,-364(fp)
  81f6bc:	10800304 	addi	r2,r2,12
  81f6c0:	10800017 	ldw	r2,0(r2)
  81f6c4:	10003a1e 	bne	r2,zero,81f7b0 <jpeg_idct_ifast+0x768>
  81f6c8:	e0bfa517 	ldw	r2,-364(fp)
  81f6cc:	10800404 	addi	r2,r2,16
  81f6d0:	10800017 	ldw	r2,0(r2)
  81f6d4:	1000361e 	bne	r2,zero,81f7b0 <jpeg_idct_ifast+0x768>
  81f6d8:	e0bfa517 	ldw	r2,-364(fp)
  81f6dc:	10800504 	addi	r2,r2,20
  81f6e0:	10800017 	ldw	r2,0(r2)
  81f6e4:	1000321e 	bne	r2,zero,81f7b0 <jpeg_idct_ifast+0x768>
  81f6e8:	e0bfa517 	ldw	r2,-364(fp)
  81f6ec:	10800604 	addi	r2,r2,24
  81f6f0:	10800017 	ldw	r2,0(r2)
  81f6f4:	10002e1e 	bne	r2,zero,81f7b0 <jpeg_idct_ifast+0x768>
  81f6f8:	e0bfa517 	ldw	r2,-364(fp)
  81f6fc:	10800704 	addi	r2,r2,28
  81f700:	10800017 	ldw	r2,0(r2)
  81f704:	10002a1e 	bne	r2,zero,81f7b0 <jpeg_idct_ifast+0x768>
  81f708:	e0bfb917 	ldw	r2,-284(fp)
  81f70c:	1005d17a 	srai	r2,r2,5
  81f710:	1080ffcc 	andi	r2,r2,1023
  81f714:	e0ffa717 	ldw	r3,-356(fp)
  81f718:	1885883a 	add	r2,r3,r2
  81f71c:	10800003 	ldbu	r2,0(r2)
  81f720:	e0bfbb05 	stb	r2,-276(fp)
  81f724:	e0bfba17 	ldw	r2,-280(fp)
  81f728:	e0ffbb03 	ldbu	r3,-276(fp)
  81f72c:	10c00005 	stb	r3,0(r2)
  81f730:	e0bfba17 	ldw	r2,-280(fp)
  81f734:	10800044 	addi	r2,r2,1
  81f738:	e0ffbb03 	ldbu	r3,-276(fp)
  81f73c:	10c00005 	stb	r3,0(r2)
  81f740:	e0bfba17 	ldw	r2,-280(fp)
  81f744:	10800084 	addi	r2,r2,2
  81f748:	e0ffbb03 	ldbu	r3,-276(fp)
  81f74c:	10c00005 	stb	r3,0(r2)
  81f750:	e0bfba17 	ldw	r2,-280(fp)
  81f754:	108000c4 	addi	r2,r2,3
  81f758:	e0ffbb03 	ldbu	r3,-276(fp)
  81f75c:	10c00005 	stb	r3,0(r2)
  81f760:	e0bfba17 	ldw	r2,-280(fp)
  81f764:	10800104 	addi	r2,r2,4
  81f768:	e0ffbb03 	ldbu	r3,-276(fp)
  81f76c:	10c00005 	stb	r3,0(r2)
  81f770:	e0bfba17 	ldw	r2,-280(fp)
  81f774:	10800144 	addi	r2,r2,5
  81f778:	e0ffbb03 	ldbu	r3,-276(fp)
  81f77c:	10c00005 	stb	r3,0(r2)
  81f780:	e0bfba17 	ldw	r2,-280(fp)
  81f784:	10800184 	addi	r2,r2,6
  81f788:	e0ffbb03 	ldbu	r3,-276(fp)
  81f78c:	10c00005 	stb	r3,0(r2)
  81f790:	e0bfba17 	ldw	r2,-280(fp)
  81f794:	108001c4 	addi	r2,r2,7
  81f798:	e0ffbb03 	ldbu	r3,-276(fp)
  81f79c:	10c00005 	stb	r3,0(r2)
  81f7a0:	e0bfa517 	ldw	r2,-364(fp)
  81f7a4:	10800804 	addi	r2,r2,32
  81f7a8:	e0bfa515 	stw	r2,-364(fp)
  81f7ac:	0000da06 	br	81fb18 <jpeg_idct_ifast+0xad0>
  81f7b0:	e0bfa517 	ldw	r2,-364(fp)
  81f7b4:	10800404 	addi	r2,r2,16
  81f7b8:	10c00017 	ldw	r3,0(r2)
  81f7bc:	e0bfb917 	ldw	r2,-284(fp)
  81f7c0:	1885883a 	add	r2,r3,r2
  81f7c4:	e0bfad15 	stw	r2,-332(fp)
  81f7c8:	e0bfa517 	ldw	r2,-364(fp)
  81f7cc:	10800404 	addi	r2,r2,16
  81f7d0:	10800017 	ldw	r2,0(r2)
  81f7d4:	e0ffb917 	ldw	r3,-284(fp)
  81f7d8:	1885c83a 	sub	r2,r3,r2
  81f7dc:	e0bfae15 	stw	r2,-328(fp)
  81f7e0:	e0bfa517 	ldw	r2,-364(fp)
  81f7e4:	10800204 	addi	r2,r2,8
  81f7e8:	10c00017 	ldw	r3,0(r2)
  81f7ec:	e0bfa517 	ldw	r2,-364(fp)
  81f7f0:	10800604 	addi	r2,r2,24
  81f7f4:	10800017 	ldw	r2,0(r2)
  81f7f8:	1885883a 	add	r2,r3,r2
  81f7fc:	e0bfaf15 	stw	r2,-324(fp)
  81f800:	e0bfa517 	ldw	r2,-364(fp)
  81f804:	10800204 	addi	r2,r2,8
  81f808:	10c00017 	ldw	r3,0(r2)
  81f80c:	e0bfa517 	ldw	r2,-364(fp)
  81f810:	10800604 	addi	r2,r2,24
  81f814:	10800017 	ldw	r2,0(r2)
  81f818:	1885c83a 	sub	r2,r3,r2
  81f81c:	01405a84 	movi	r5,362
  81f820:	1009883a 	mov	r4,r2
  81f824:	08301e80 	call	8301e8 <__mulsi3>
  81f828:	1007d23a 	srai	r3,r2,8
  81f82c:	e0bfaf17 	ldw	r2,-324(fp)
  81f830:	1885c83a 	sub	r2,r3,r2
  81f834:	e0bfb015 	stw	r2,-320(fp)
  81f838:	e0ffad17 	ldw	r3,-332(fp)
  81f83c:	e0bfaf17 	ldw	r2,-324(fp)
  81f840:	1885883a 	add	r2,r3,r2
  81f844:	e0bfa915 	stw	r2,-348(fp)
  81f848:	e0ffad17 	ldw	r3,-332(fp)
  81f84c:	e0bfaf17 	ldw	r2,-324(fp)
  81f850:	1885c83a 	sub	r2,r3,r2
  81f854:	e0bfac15 	stw	r2,-336(fp)
  81f858:	e0ffae17 	ldw	r3,-328(fp)
  81f85c:	e0bfb017 	ldw	r2,-320(fp)
  81f860:	1885883a 	add	r2,r3,r2
  81f864:	e0bfaa15 	stw	r2,-344(fp)
  81f868:	e0ffae17 	ldw	r3,-328(fp)
  81f86c:	e0bfb017 	ldw	r2,-320(fp)
  81f870:	1885c83a 	sub	r2,r3,r2
  81f874:	e0bfab15 	stw	r2,-340(fp)
  81f878:	e0bfa517 	ldw	r2,-364(fp)
  81f87c:	10800504 	addi	r2,r2,20
  81f880:	10c00017 	ldw	r3,0(r2)
  81f884:	e0bfa517 	ldw	r2,-364(fp)
  81f888:	10800304 	addi	r2,r2,12
  81f88c:	10800017 	ldw	r2,0(r2)
  81f890:	1885883a 	add	r2,r3,r2
  81f894:	e0bfb515 	stw	r2,-300(fp)
  81f898:	e0bfa517 	ldw	r2,-364(fp)
  81f89c:	10800504 	addi	r2,r2,20
  81f8a0:	10c00017 	ldw	r3,0(r2)
  81f8a4:	e0bfa517 	ldw	r2,-364(fp)
  81f8a8:	10800304 	addi	r2,r2,12
  81f8ac:	10800017 	ldw	r2,0(r2)
  81f8b0:	1885c83a 	sub	r2,r3,r2
  81f8b4:	e0bfb615 	stw	r2,-296(fp)
  81f8b8:	e0bfa517 	ldw	r2,-364(fp)
  81f8bc:	10800104 	addi	r2,r2,4
  81f8c0:	10c00017 	ldw	r3,0(r2)
  81f8c4:	e0bfa517 	ldw	r2,-364(fp)
  81f8c8:	10800704 	addi	r2,r2,28
  81f8cc:	10800017 	ldw	r2,0(r2)
  81f8d0:	1885883a 	add	r2,r3,r2
  81f8d4:	e0bfb715 	stw	r2,-292(fp)
  81f8d8:	e0bfa517 	ldw	r2,-364(fp)
  81f8dc:	10800104 	addi	r2,r2,4
  81f8e0:	10c00017 	ldw	r3,0(r2)
  81f8e4:	e0bfa517 	ldw	r2,-364(fp)
  81f8e8:	10800704 	addi	r2,r2,28
  81f8ec:	10800017 	ldw	r2,0(r2)
  81f8f0:	1885c83a 	sub	r2,r3,r2
  81f8f4:	e0bfb815 	stw	r2,-288(fp)
  81f8f8:	e0ffb717 	ldw	r3,-292(fp)
  81f8fc:	e0bfb517 	ldw	r2,-300(fp)
  81f900:	1885883a 	add	r2,r3,r2
  81f904:	e0bfb415 	stw	r2,-304(fp)
  81f908:	e0ffb717 	ldw	r3,-292(fp)
  81f90c:	e0bfb517 	ldw	r2,-300(fp)
  81f910:	1885c83a 	sub	r2,r3,r2
  81f914:	01405a84 	movi	r5,362
  81f918:	1009883a 	mov	r4,r2
  81f91c:	08301e80 	call	8301e8 <__mulsi3>
  81f920:	1005d23a 	srai	r2,r2,8
  81f924:	e0bfae15 	stw	r2,-328(fp)
  81f928:	e0ffb617 	ldw	r3,-296(fp)
  81f92c:	e0bfb817 	ldw	r2,-288(fp)
  81f930:	1885883a 	add	r2,r3,r2
  81f934:	01407644 	movi	r5,473
  81f938:	1009883a 	mov	r4,r2
  81f93c:	08301e80 	call	8301e8 <__mulsi3>
  81f940:	1005d23a 	srai	r2,r2,8
  81f944:	e0bfb915 	stw	r2,-284(fp)
  81f948:	01404544 	movi	r5,277
  81f94c:	e13fb817 	ldw	r4,-288(fp)
  81f950:	08301e80 	call	8301e8 <__mulsi3>
  81f954:	1005d23a 	srai	r2,r2,8
  81f958:	e0ffb917 	ldw	r3,-284(fp)
  81f95c:	1885c83a 	sub	r2,r3,r2
  81f960:	e0bfad15 	stw	r2,-332(fp)
  81f964:	0140a744 	movi	r5,669
  81f968:	e13fb617 	ldw	r4,-296(fp)
  81f96c:	08301e80 	call	8301e8 <__mulsi3>
  81f970:	1005d23a 	srai	r2,r2,8
  81f974:	e0ffb917 	ldw	r3,-284(fp)
  81f978:	1885c83a 	sub	r2,r3,r2
  81f97c:	e0bfb015 	stw	r2,-320(fp)
  81f980:	e0ffb017 	ldw	r3,-320(fp)
  81f984:	e0bfb417 	ldw	r2,-304(fp)
  81f988:	1885c83a 	sub	r2,r3,r2
  81f98c:	e0bfb315 	stw	r2,-308(fp)
  81f990:	e0ffae17 	ldw	r3,-328(fp)
  81f994:	e0bfb317 	ldw	r2,-308(fp)
  81f998:	1885c83a 	sub	r2,r3,r2
  81f99c:	e0bfb215 	stw	r2,-312(fp)
  81f9a0:	e0ffad17 	ldw	r3,-332(fp)
  81f9a4:	e0bfb217 	ldw	r2,-312(fp)
  81f9a8:	1885c83a 	sub	r2,r3,r2
  81f9ac:	e0bfb115 	stw	r2,-316(fp)
  81f9b0:	e0ffa917 	ldw	r3,-348(fp)
  81f9b4:	e0bfb417 	ldw	r2,-304(fp)
  81f9b8:	1885883a 	add	r2,r3,r2
  81f9bc:	1005d17a 	srai	r2,r2,5
  81f9c0:	1080ffcc 	andi	r2,r2,1023
  81f9c4:	e0ffa717 	ldw	r3,-356(fp)
  81f9c8:	1885883a 	add	r2,r3,r2
  81f9cc:	10c00003 	ldbu	r3,0(r2)
  81f9d0:	e0bfba17 	ldw	r2,-280(fp)
  81f9d4:	10c00005 	stb	r3,0(r2)
  81f9d8:	e0bfba17 	ldw	r2,-280(fp)
  81f9dc:	108001c4 	addi	r2,r2,7
  81f9e0:	e13fa917 	ldw	r4,-348(fp)
  81f9e4:	e0ffb417 	ldw	r3,-304(fp)
  81f9e8:	20c7c83a 	sub	r3,r4,r3
  81f9ec:	1807d17a 	srai	r3,r3,5
  81f9f0:	18c0ffcc 	andi	r3,r3,1023
  81f9f4:	e13fa717 	ldw	r4,-356(fp)
  81f9f8:	20c7883a 	add	r3,r4,r3
  81f9fc:	18c00003 	ldbu	r3,0(r3)
  81fa00:	10c00005 	stb	r3,0(r2)
  81fa04:	e0bfba17 	ldw	r2,-280(fp)
  81fa08:	10800044 	addi	r2,r2,1
  81fa0c:	e13faa17 	ldw	r4,-344(fp)
  81fa10:	e0ffb317 	ldw	r3,-308(fp)
  81fa14:	20c7883a 	add	r3,r4,r3
  81fa18:	1807d17a 	srai	r3,r3,5
  81fa1c:	18c0ffcc 	andi	r3,r3,1023
  81fa20:	e13fa717 	ldw	r4,-356(fp)
  81fa24:	20c7883a 	add	r3,r4,r3
  81fa28:	18c00003 	ldbu	r3,0(r3)
  81fa2c:	10c00005 	stb	r3,0(r2)
  81fa30:	e0bfba17 	ldw	r2,-280(fp)
  81fa34:	10800184 	addi	r2,r2,6
  81fa38:	e13faa17 	ldw	r4,-344(fp)
  81fa3c:	e0ffb317 	ldw	r3,-308(fp)
  81fa40:	20c7c83a 	sub	r3,r4,r3
  81fa44:	1807d17a 	srai	r3,r3,5
  81fa48:	18c0ffcc 	andi	r3,r3,1023
  81fa4c:	e13fa717 	ldw	r4,-356(fp)
  81fa50:	20c7883a 	add	r3,r4,r3
  81fa54:	18c00003 	ldbu	r3,0(r3)
  81fa58:	10c00005 	stb	r3,0(r2)
  81fa5c:	e0bfba17 	ldw	r2,-280(fp)
  81fa60:	10800084 	addi	r2,r2,2
  81fa64:	e13fab17 	ldw	r4,-340(fp)
  81fa68:	e0ffb217 	ldw	r3,-312(fp)
  81fa6c:	20c7883a 	add	r3,r4,r3
  81fa70:	1807d17a 	srai	r3,r3,5
  81fa74:	18c0ffcc 	andi	r3,r3,1023
  81fa78:	e13fa717 	ldw	r4,-356(fp)
  81fa7c:	20c7883a 	add	r3,r4,r3
  81fa80:	18c00003 	ldbu	r3,0(r3)
  81fa84:	10c00005 	stb	r3,0(r2)
  81fa88:	e0bfba17 	ldw	r2,-280(fp)
  81fa8c:	10800144 	addi	r2,r2,5
  81fa90:	e13fab17 	ldw	r4,-340(fp)
  81fa94:	e0ffb217 	ldw	r3,-312(fp)
  81fa98:	20c7c83a 	sub	r3,r4,r3
  81fa9c:	1807d17a 	srai	r3,r3,5
  81faa0:	18c0ffcc 	andi	r3,r3,1023
  81faa4:	e13fa717 	ldw	r4,-356(fp)
  81faa8:	20c7883a 	add	r3,r4,r3
  81faac:	18c00003 	ldbu	r3,0(r3)
  81fab0:	10c00005 	stb	r3,0(r2)
  81fab4:	e0bfba17 	ldw	r2,-280(fp)
  81fab8:	108000c4 	addi	r2,r2,3
  81fabc:	e13fac17 	ldw	r4,-336(fp)
  81fac0:	e0ffb117 	ldw	r3,-316(fp)
  81fac4:	20c7883a 	add	r3,r4,r3
  81fac8:	1807d17a 	srai	r3,r3,5
  81facc:	18c0ffcc 	andi	r3,r3,1023
  81fad0:	e13fa717 	ldw	r4,-356(fp)
  81fad4:	20c7883a 	add	r3,r4,r3
  81fad8:	18c00003 	ldbu	r3,0(r3)
  81fadc:	10c00005 	stb	r3,0(r2)
  81fae0:	e0bfba17 	ldw	r2,-280(fp)
  81fae4:	10800104 	addi	r2,r2,4
  81fae8:	e13fac17 	ldw	r4,-336(fp)
  81faec:	e0ffb117 	ldw	r3,-316(fp)
  81faf0:	20c7c83a 	sub	r3,r4,r3
  81faf4:	1807d17a 	srai	r3,r3,5
  81faf8:	18c0ffcc 	andi	r3,r3,1023
  81fafc:	e13fa717 	ldw	r4,-356(fp)
  81fb00:	20c7883a 	add	r3,r4,r3
  81fb04:	18c00003 	ldbu	r3,0(r3)
  81fb08:	10c00005 	stb	r3,0(r2)
  81fb0c:	e0bfa517 	ldw	r2,-364(fp)
  81fb10:	10800804 	addi	r2,r2,32
  81fb14:	e0bfa515 	stw	r2,-364(fp)
  81fb18:	e0bfa617 	ldw	r2,-360(fp)
  81fb1c:	10800044 	addi	r2,r2,1
  81fb20:	e0bfa615 	stw	r2,-360(fp)
  81fb24:	e0bfa617 	ldw	r2,-360(fp)
  81fb28:	10800210 	cmplti	r2,r2,8
  81fb2c:	103ecc1e 	bne	r2,zero,81f660 <__alt_mem_epcs_flash_controller_0+0xff816660>
  81fb30:	0001883a 	nop
  81fb34:	e037883a 	mov	sp,fp
  81fb38:	dfc00117 	ldw	ra,4(sp)
  81fb3c:	df000017 	ldw	fp,0(sp)
  81fb40:	dec00204 	addi	sp,sp,8
  81fb44:	f800283a 	ret

0081fb48 <jpeg_idct_islow>:
  81fb48:	deffa704 	addi	sp,sp,-356
  81fb4c:	dfc05815 	stw	ra,352(sp)
  81fb50:	df005715 	stw	fp,348(sp)
  81fb54:	df005704 	addi	fp,sp,348
  81fb58:	e13ffc15 	stw	r4,-16(fp)
  81fb5c:	e17ffd15 	stw	r5,-12(fp)
  81fb60:	e1bffe15 	stw	r6,-8(fp)
  81fb64:	e1ffff15 	stw	r7,-4(fp)
  81fb68:	e0bffc17 	ldw	r2,-16(fp)
  81fb6c:	10805417 	ldw	r2,336(r2)
  81fb70:	10bfa004 	addi	r2,r2,-384
  81fb74:	e0bfad15 	stw	r2,-332(fp)
  81fb78:	e0bffe17 	ldw	r2,-8(fp)
  81fb7c:	e0bfa915 	stw	r2,-348(fp)
  81fb80:	e0bffd17 	ldw	r2,-12(fp)
  81fb84:	10801517 	ldw	r2,84(r2)
  81fb88:	e0bfaa15 	stw	r2,-344(fp)
  81fb8c:	e0bfbc04 	addi	r2,fp,-272
  81fb90:	e0bfab15 	stw	r2,-340(fp)
  81fb94:	00800204 	movi	r2,8
  81fb98:	e0bfac15 	stw	r2,-336(fp)
  81fb9c:	00019b06 	br	82020c <jpeg_idct_islow+0x6c4>
  81fba0:	e0bfa917 	ldw	r2,-348(fp)
  81fba4:	10800404 	addi	r2,r2,16
  81fba8:	1080000b 	ldhu	r2,0(r2)
  81fbac:	10bfffcc 	andi	r2,r2,65535
  81fbb0:	10a0001c 	xori	r2,r2,32768
  81fbb4:	10a00004 	addi	r2,r2,-32768
  81fbb8:	1000601e 	bne	r2,zero,81fd3c <jpeg_idct_islow+0x1f4>
  81fbbc:	e0bfa917 	ldw	r2,-348(fp)
  81fbc0:	10800804 	addi	r2,r2,32
  81fbc4:	1080000b 	ldhu	r2,0(r2)
  81fbc8:	10bfffcc 	andi	r2,r2,65535
  81fbcc:	10a0001c 	xori	r2,r2,32768
  81fbd0:	10a00004 	addi	r2,r2,-32768
  81fbd4:	1000591e 	bne	r2,zero,81fd3c <jpeg_idct_islow+0x1f4>
  81fbd8:	e0bfa917 	ldw	r2,-348(fp)
  81fbdc:	10800c04 	addi	r2,r2,48
  81fbe0:	1080000b 	ldhu	r2,0(r2)
  81fbe4:	10bfffcc 	andi	r2,r2,65535
  81fbe8:	10a0001c 	xori	r2,r2,32768
  81fbec:	10a00004 	addi	r2,r2,-32768
  81fbf0:	1000521e 	bne	r2,zero,81fd3c <jpeg_idct_islow+0x1f4>
  81fbf4:	e0bfa917 	ldw	r2,-348(fp)
  81fbf8:	10801004 	addi	r2,r2,64
  81fbfc:	1080000b 	ldhu	r2,0(r2)
  81fc00:	10bfffcc 	andi	r2,r2,65535
  81fc04:	10a0001c 	xori	r2,r2,32768
  81fc08:	10a00004 	addi	r2,r2,-32768
  81fc0c:	10004b1e 	bne	r2,zero,81fd3c <jpeg_idct_islow+0x1f4>
  81fc10:	e0bfa917 	ldw	r2,-348(fp)
  81fc14:	10801404 	addi	r2,r2,80
  81fc18:	1080000b 	ldhu	r2,0(r2)
  81fc1c:	10bfffcc 	andi	r2,r2,65535
  81fc20:	10a0001c 	xori	r2,r2,32768
  81fc24:	10a00004 	addi	r2,r2,-32768
  81fc28:	1000441e 	bne	r2,zero,81fd3c <jpeg_idct_islow+0x1f4>
  81fc2c:	e0bfa917 	ldw	r2,-348(fp)
  81fc30:	10801804 	addi	r2,r2,96
  81fc34:	1080000b 	ldhu	r2,0(r2)
  81fc38:	10bfffcc 	andi	r2,r2,65535
  81fc3c:	10a0001c 	xori	r2,r2,32768
  81fc40:	10a00004 	addi	r2,r2,-32768
  81fc44:	10003d1e 	bne	r2,zero,81fd3c <jpeg_idct_islow+0x1f4>
  81fc48:	e0bfa917 	ldw	r2,-348(fp)
  81fc4c:	10801c04 	addi	r2,r2,112
  81fc50:	1080000b 	ldhu	r2,0(r2)
  81fc54:	10bfffcc 	andi	r2,r2,65535
  81fc58:	10a0001c 	xori	r2,r2,32768
  81fc5c:	10a00004 	addi	r2,r2,-32768
  81fc60:	1000361e 	bne	r2,zero,81fd3c <jpeg_idct_islow+0x1f4>
  81fc64:	e0bfa917 	ldw	r2,-348(fp)
  81fc68:	1080000b 	ldhu	r2,0(r2)
  81fc6c:	10ffffcc 	andi	r3,r2,65535
  81fc70:	18e0001c 	xori	r3,r3,32768
  81fc74:	18e00004 	addi	r3,r3,-32768
  81fc78:	e0bfaa17 	ldw	r2,-344(fp)
  81fc7c:	10800017 	ldw	r2,0(r2)
  81fc80:	100b883a 	mov	r5,r2
  81fc84:	1809883a 	mov	r4,r3
  81fc88:	08301e80 	call	8301e8 <__mulsi3>
  81fc8c:	1085883a 	add	r2,r2,r2
  81fc90:	1085883a 	add	r2,r2,r2
  81fc94:	e0bfae15 	stw	r2,-328(fp)
  81fc98:	e0bfab17 	ldw	r2,-340(fp)
  81fc9c:	e0ffae17 	ldw	r3,-328(fp)
  81fca0:	10c00015 	stw	r3,0(r2)
  81fca4:	e0bfab17 	ldw	r2,-340(fp)
  81fca8:	10800804 	addi	r2,r2,32
  81fcac:	e0ffae17 	ldw	r3,-328(fp)
  81fcb0:	10c00015 	stw	r3,0(r2)
  81fcb4:	e0bfab17 	ldw	r2,-340(fp)
  81fcb8:	10801004 	addi	r2,r2,64
  81fcbc:	e0ffae17 	ldw	r3,-328(fp)
  81fcc0:	10c00015 	stw	r3,0(r2)
  81fcc4:	e0bfab17 	ldw	r2,-340(fp)
  81fcc8:	10801804 	addi	r2,r2,96
  81fccc:	e0ffae17 	ldw	r3,-328(fp)
  81fcd0:	10c00015 	stw	r3,0(r2)
  81fcd4:	e0bfab17 	ldw	r2,-340(fp)
  81fcd8:	10802004 	addi	r2,r2,128
  81fcdc:	e0ffae17 	ldw	r3,-328(fp)
  81fce0:	10c00015 	stw	r3,0(r2)
  81fce4:	e0bfab17 	ldw	r2,-340(fp)
  81fce8:	10802804 	addi	r2,r2,160
  81fcec:	e0ffae17 	ldw	r3,-328(fp)
  81fcf0:	10c00015 	stw	r3,0(r2)
  81fcf4:	e0bfab17 	ldw	r2,-340(fp)
  81fcf8:	10803004 	addi	r2,r2,192
  81fcfc:	e0ffae17 	ldw	r3,-328(fp)
  81fd00:	10c00015 	stw	r3,0(r2)
  81fd04:	e0bfab17 	ldw	r2,-340(fp)
  81fd08:	10803804 	addi	r2,r2,224
  81fd0c:	e0ffae17 	ldw	r3,-328(fp)
  81fd10:	10c00015 	stw	r3,0(r2)
  81fd14:	e0bfa917 	ldw	r2,-348(fp)
  81fd18:	10800084 	addi	r2,r2,2
  81fd1c:	e0bfa915 	stw	r2,-348(fp)
  81fd20:	e0bfaa17 	ldw	r2,-344(fp)
  81fd24:	10800104 	addi	r2,r2,4
  81fd28:	e0bfaa15 	stw	r2,-344(fp)
  81fd2c:	e0bfab17 	ldw	r2,-340(fp)
  81fd30:	10800104 	addi	r2,r2,4
  81fd34:	e0bfab15 	stw	r2,-340(fp)
  81fd38:	00013106 	br	820200 <jpeg_idct_islow+0x6b8>
  81fd3c:	e0bfa917 	ldw	r2,-348(fp)
  81fd40:	1080000b 	ldhu	r2,0(r2)
  81fd44:	10ffffcc 	andi	r3,r2,65535
  81fd48:	18e0001c 	xori	r3,r3,32768
  81fd4c:	18e00004 	addi	r3,r3,-32768
  81fd50:	e0bfaa17 	ldw	r2,-344(fp)
  81fd54:	10800017 	ldw	r2,0(r2)
  81fd58:	100b883a 	mov	r5,r2
  81fd5c:	1809883a 	mov	r4,r3
  81fd60:	08301e80 	call	8301e8 <__mulsi3>
  81fd64:	e0bfaf15 	stw	r2,-324(fp)
  81fd68:	e0bfa917 	ldw	r2,-348(fp)
  81fd6c:	10801004 	addi	r2,r2,64
  81fd70:	1080000b 	ldhu	r2,0(r2)
  81fd74:	10ffffcc 	andi	r3,r2,65535
  81fd78:	18e0001c 	xori	r3,r3,32768
  81fd7c:	18e00004 	addi	r3,r3,-32768
  81fd80:	e0bfaa17 	ldw	r2,-344(fp)
  81fd84:	10802004 	addi	r2,r2,128
  81fd88:	10800017 	ldw	r2,0(r2)
  81fd8c:	100b883a 	mov	r5,r2
  81fd90:	1809883a 	mov	r4,r3
  81fd94:	08301e80 	call	8301e8 <__mulsi3>
  81fd98:	e0bfb015 	stw	r2,-320(fp)
  81fd9c:	e0bfaf17 	ldw	r2,-324(fp)
  81fda0:	1004937a 	slli	r2,r2,13
  81fda4:	e0bfaf15 	stw	r2,-324(fp)
  81fda8:	e0bfb017 	ldw	r2,-320(fp)
  81fdac:	1004937a 	slli	r2,r2,13
  81fdb0:	e0bfb015 	stw	r2,-320(fp)
  81fdb4:	e0bfaf17 	ldw	r2,-324(fp)
  81fdb8:	10810004 	addi	r2,r2,1024
  81fdbc:	e0bfaf15 	stw	r2,-324(fp)
  81fdc0:	e0ffaf17 	ldw	r3,-324(fp)
  81fdc4:	e0bfb017 	ldw	r2,-320(fp)
  81fdc8:	1885883a 	add	r2,r3,r2
  81fdcc:	e0bfb115 	stw	r2,-316(fp)
  81fdd0:	e0ffaf17 	ldw	r3,-324(fp)
  81fdd4:	e0bfb017 	ldw	r2,-320(fp)
  81fdd8:	1885c83a 	sub	r2,r3,r2
  81fddc:	e0bfb215 	stw	r2,-312(fp)
  81fde0:	e0bfa917 	ldw	r2,-348(fp)
  81fde4:	10800804 	addi	r2,r2,32
  81fde8:	1080000b 	ldhu	r2,0(r2)
  81fdec:	10ffffcc 	andi	r3,r2,65535
  81fdf0:	18e0001c 	xori	r3,r3,32768
  81fdf4:	18e00004 	addi	r3,r3,-32768
  81fdf8:	e0bfaa17 	ldw	r2,-344(fp)
  81fdfc:	10801004 	addi	r2,r2,64
  81fe00:	10800017 	ldw	r2,0(r2)
  81fe04:	100b883a 	mov	r5,r2
  81fe08:	1809883a 	mov	r4,r3
  81fe0c:	08301e80 	call	8301e8 <__mulsi3>
  81fe10:	e0bfaf15 	stw	r2,-324(fp)
  81fe14:	e0bfa917 	ldw	r2,-348(fp)
  81fe18:	10801804 	addi	r2,r2,96
  81fe1c:	1080000b 	ldhu	r2,0(r2)
  81fe20:	10ffffcc 	andi	r3,r2,65535
  81fe24:	18e0001c 	xori	r3,r3,32768
  81fe28:	18e00004 	addi	r3,r3,-32768
  81fe2c:	e0bfaa17 	ldw	r2,-344(fp)
  81fe30:	10803004 	addi	r2,r2,192
  81fe34:	10800017 	ldw	r2,0(r2)
  81fe38:	100b883a 	mov	r5,r2
  81fe3c:	1809883a 	mov	r4,r3
  81fe40:	08301e80 	call	8301e8 <__mulsi3>
  81fe44:	e0bfb015 	stw	r2,-320(fp)
  81fe48:	e0ffaf17 	ldw	r3,-324(fp)
  81fe4c:	e0bfb017 	ldw	r2,-320(fp)
  81fe50:	1885883a 	add	r2,r3,r2
  81fe54:	01445444 	movi	r5,4433
  81fe58:	1009883a 	mov	r4,r2
  81fe5c:	08301e80 	call	8301e8 <__mulsi3>
  81fe60:	e0bfb315 	stw	r2,-308(fp)
  81fe64:	01461f84 	movi	r5,6270
  81fe68:	e13faf17 	ldw	r4,-324(fp)
  81fe6c:	08301e80 	call	8301e8 <__mulsi3>
  81fe70:	1007883a 	mov	r3,r2
  81fe74:	e0bfb317 	ldw	r2,-308(fp)
  81fe78:	1885883a 	add	r2,r3,r2
  81fe7c:	e0bfb415 	stw	r2,-304(fp)
  81fe80:	017137c4 	movi	r5,-15137
  81fe84:	e13fb017 	ldw	r4,-320(fp)
  81fe88:	08301e80 	call	8301e8 <__mulsi3>
  81fe8c:	1007883a 	mov	r3,r2
  81fe90:	e0bfb317 	ldw	r2,-308(fp)
  81fe94:	1885883a 	add	r2,r3,r2
  81fe98:	e0bfb515 	stw	r2,-300(fp)
  81fe9c:	e0ffb117 	ldw	r3,-316(fp)
  81fea0:	e0bfb417 	ldw	r2,-304(fp)
  81fea4:	1885883a 	add	r2,r3,r2
  81fea8:	e0bfb615 	stw	r2,-296(fp)
  81feac:	e0ffb117 	ldw	r3,-316(fp)
  81feb0:	e0bfb417 	ldw	r2,-304(fp)
  81feb4:	1885c83a 	sub	r2,r3,r2
  81feb8:	e0bfb715 	stw	r2,-292(fp)
  81febc:	e0ffb217 	ldw	r3,-312(fp)
  81fec0:	e0bfb517 	ldw	r2,-300(fp)
  81fec4:	1885883a 	add	r2,r3,r2
  81fec8:	e0bfb815 	stw	r2,-288(fp)
  81fecc:	e0ffb217 	ldw	r3,-312(fp)
  81fed0:	e0bfb517 	ldw	r2,-300(fp)
  81fed4:	1885c83a 	sub	r2,r3,r2
  81fed8:	e0bfb915 	stw	r2,-284(fp)
  81fedc:	e0bfa917 	ldw	r2,-348(fp)
  81fee0:	10801c04 	addi	r2,r2,112
  81fee4:	1080000b 	ldhu	r2,0(r2)
  81fee8:	10ffffcc 	andi	r3,r2,65535
  81feec:	18e0001c 	xori	r3,r3,32768
  81fef0:	18e00004 	addi	r3,r3,-32768
  81fef4:	e0bfaa17 	ldw	r2,-344(fp)
  81fef8:	10803804 	addi	r2,r2,224
  81fefc:	10800017 	ldw	r2,0(r2)
  81ff00:	100b883a 	mov	r5,r2
  81ff04:	1809883a 	mov	r4,r3
  81ff08:	08301e80 	call	8301e8 <__mulsi3>
  81ff0c:	e0bfb115 	stw	r2,-316(fp)
  81ff10:	e0bfa917 	ldw	r2,-348(fp)
  81ff14:	10801404 	addi	r2,r2,80
  81ff18:	1080000b 	ldhu	r2,0(r2)
  81ff1c:	10ffffcc 	andi	r3,r2,65535
  81ff20:	18e0001c 	xori	r3,r3,32768
  81ff24:	18e00004 	addi	r3,r3,-32768
  81ff28:	e0bfaa17 	ldw	r2,-344(fp)
  81ff2c:	10802804 	addi	r2,r2,160
  81ff30:	10800017 	ldw	r2,0(r2)
  81ff34:	100b883a 	mov	r5,r2
  81ff38:	1809883a 	mov	r4,r3
  81ff3c:	08301e80 	call	8301e8 <__mulsi3>
  81ff40:	e0bfb215 	stw	r2,-312(fp)
  81ff44:	e0bfa917 	ldw	r2,-348(fp)
  81ff48:	10800c04 	addi	r2,r2,48
  81ff4c:	1080000b 	ldhu	r2,0(r2)
  81ff50:	10ffffcc 	andi	r3,r2,65535
  81ff54:	18e0001c 	xori	r3,r3,32768
  81ff58:	18e00004 	addi	r3,r3,-32768
  81ff5c:	e0bfaa17 	ldw	r2,-344(fp)
  81ff60:	10801804 	addi	r2,r2,96
  81ff64:	10800017 	ldw	r2,0(r2)
  81ff68:	100b883a 	mov	r5,r2
  81ff6c:	1809883a 	mov	r4,r3
  81ff70:	08301e80 	call	8301e8 <__mulsi3>
  81ff74:	e0bfb415 	stw	r2,-304(fp)
  81ff78:	e0bfa917 	ldw	r2,-348(fp)
  81ff7c:	10800404 	addi	r2,r2,16
  81ff80:	1080000b 	ldhu	r2,0(r2)
  81ff84:	10ffffcc 	andi	r3,r2,65535
  81ff88:	18e0001c 	xori	r3,r3,32768
  81ff8c:	18e00004 	addi	r3,r3,-32768
  81ff90:	e0bfaa17 	ldw	r2,-344(fp)
  81ff94:	10800804 	addi	r2,r2,32
  81ff98:	10800017 	ldw	r2,0(r2)
  81ff9c:	100b883a 	mov	r5,r2
  81ffa0:	1809883a 	mov	r4,r3
  81ffa4:	08301e80 	call	8301e8 <__mulsi3>
  81ffa8:	e0bfb515 	stw	r2,-300(fp)
  81ffac:	e0ffb117 	ldw	r3,-316(fp)
  81ffb0:	e0bfb417 	ldw	r2,-304(fp)
  81ffb4:	1885883a 	add	r2,r3,r2
  81ffb8:	e0bfaf15 	stw	r2,-324(fp)
  81ffbc:	e0ffb217 	ldw	r3,-312(fp)
  81ffc0:	e0bfb517 	ldw	r2,-300(fp)
  81ffc4:	1885883a 	add	r2,r3,r2
  81ffc8:	e0bfb015 	stw	r2,-320(fp)
  81ffcc:	e0ffaf17 	ldw	r3,-324(fp)
  81ffd0:	e0bfb017 	ldw	r2,-320(fp)
  81ffd4:	1885883a 	add	r2,r3,r2
  81ffd8:	01496844 	movi	r5,9633
  81ffdc:	1009883a 	mov	r4,r2
  81ffe0:	08301e80 	call	8301e8 <__mulsi3>
  81ffe4:	e0bfb315 	stw	r2,-308(fp)
  81ffe8:	01704ec4 	movi	r5,-16069
  81ffec:	e13faf17 	ldw	r4,-324(fp)
  81fff0:	08301e80 	call	8301e8 <__mulsi3>
  81fff4:	e0bfaf15 	stw	r2,-324(fp)
  81fff8:	017ce104 	movi	r5,-3196
  81fffc:	e13fb017 	ldw	r4,-320(fp)
  820000:	08301e80 	call	8301e8 <__mulsi3>
  820004:	e0bfb015 	stw	r2,-320(fp)
  820008:	e0ffaf17 	ldw	r3,-324(fp)
  82000c:	e0bfb317 	ldw	r2,-308(fp)
  820010:	1885883a 	add	r2,r3,r2
  820014:	e0bfaf15 	stw	r2,-324(fp)
  820018:	e0ffb017 	ldw	r3,-320(fp)
  82001c:	e0bfb317 	ldw	r2,-308(fp)
  820020:	1885883a 	add	r2,r3,r2
  820024:	e0bfb015 	stw	r2,-320(fp)
  820028:	e0ffb117 	ldw	r3,-316(fp)
  82002c:	e0bfb517 	ldw	r2,-300(fp)
  820030:	1885883a 	add	r2,r3,r2
  820034:	0178ccc4 	movi	r5,-7373
  820038:	1009883a 	mov	r4,r2
  82003c:	08301e80 	call	8301e8 <__mulsi3>
  820040:	e0bfb315 	stw	r2,-308(fp)
  820044:	01426384 	movi	r5,2446
  820048:	e13fb117 	ldw	r4,-316(fp)
  82004c:	08301e80 	call	8301e8 <__mulsi3>
  820050:	e0bfb115 	stw	r2,-316(fp)
  820054:	014c02c4 	movi	r5,12299
  820058:	e13fb517 	ldw	r4,-300(fp)
  82005c:	08301e80 	call	8301e8 <__mulsi3>
  820060:	e0bfb515 	stw	r2,-300(fp)
  820064:	e0ffb317 	ldw	r3,-308(fp)
  820068:	e0bfaf17 	ldw	r2,-324(fp)
  82006c:	1885883a 	add	r2,r3,r2
  820070:	e0ffb117 	ldw	r3,-316(fp)
  820074:	1885883a 	add	r2,r3,r2
  820078:	e0bfb115 	stw	r2,-316(fp)
  82007c:	e0ffb317 	ldw	r3,-308(fp)
  820080:	e0bfb017 	ldw	r2,-320(fp)
  820084:	1885883a 	add	r2,r3,r2
  820088:	e0ffb517 	ldw	r3,-300(fp)
  82008c:	1885883a 	add	r2,r3,r2
  820090:	e0bfb515 	stw	r2,-300(fp)
  820094:	e0ffb217 	ldw	r3,-312(fp)
  820098:	e0bfb417 	ldw	r2,-304(fp)
  82009c:	1885883a 	add	r2,r3,r2
  8200a0:	016b7f44 	movi	r5,-20995
  8200a4:	1009883a 	mov	r4,r2
  8200a8:	08301e80 	call	8301e8 <__mulsi3>
  8200ac:	e0bfb315 	stw	r2,-308(fp)
  8200b0:	01506cc4 	movi	r5,16819
  8200b4:	e13fb217 	ldw	r4,-312(fp)
  8200b8:	08301e80 	call	8301e8 <__mulsi3>
  8200bc:	e0bfb215 	stw	r2,-312(fp)
  8200c0:	01589504 	movi	r5,25172
  8200c4:	e13fb417 	ldw	r4,-304(fp)
  8200c8:	08301e80 	call	8301e8 <__mulsi3>
  8200cc:	e0bfb415 	stw	r2,-304(fp)
  8200d0:	e0ffb317 	ldw	r3,-308(fp)
  8200d4:	e0bfb017 	ldw	r2,-320(fp)
  8200d8:	1885883a 	add	r2,r3,r2
  8200dc:	e0ffb217 	ldw	r3,-312(fp)
  8200e0:	1885883a 	add	r2,r3,r2
  8200e4:	e0bfb215 	stw	r2,-312(fp)
  8200e8:	e0ffb317 	ldw	r3,-308(fp)
  8200ec:	e0bfaf17 	ldw	r2,-324(fp)
  8200f0:	1885883a 	add	r2,r3,r2
  8200f4:	e0ffb417 	ldw	r3,-304(fp)
  8200f8:	1885883a 	add	r2,r3,r2
  8200fc:	e0bfb415 	stw	r2,-304(fp)
  820100:	e0ffb617 	ldw	r3,-296(fp)
  820104:	e0bfb517 	ldw	r2,-300(fp)
  820108:	1885883a 	add	r2,r3,r2
  82010c:	1007d2fa 	srai	r3,r2,11
  820110:	e0bfab17 	ldw	r2,-340(fp)
  820114:	10c00015 	stw	r3,0(r2)
  820118:	e0bfab17 	ldw	r2,-340(fp)
  82011c:	10803804 	addi	r2,r2,224
  820120:	e13fb617 	ldw	r4,-296(fp)
  820124:	e0ffb517 	ldw	r3,-300(fp)
  820128:	20c7c83a 	sub	r3,r4,r3
  82012c:	1807d2fa 	srai	r3,r3,11
  820130:	10c00015 	stw	r3,0(r2)
  820134:	e0bfab17 	ldw	r2,-340(fp)
  820138:	10800804 	addi	r2,r2,32
  82013c:	e13fb817 	ldw	r4,-288(fp)
  820140:	e0ffb417 	ldw	r3,-304(fp)
  820144:	20c7883a 	add	r3,r4,r3
  820148:	1807d2fa 	srai	r3,r3,11
  82014c:	10c00015 	stw	r3,0(r2)
  820150:	e0bfab17 	ldw	r2,-340(fp)
  820154:	10803004 	addi	r2,r2,192
  820158:	e13fb817 	ldw	r4,-288(fp)
  82015c:	e0ffb417 	ldw	r3,-304(fp)
  820160:	20c7c83a 	sub	r3,r4,r3
  820164:	1807d2fa 	srai	r3,r3,11
  820168:	10c00015 	stw	r3,0(r2)
  82016c:	e0bfab17 	ldw	r2,-340(fp)
  820170:	10801004 	addi	r2,r2,64
  820174:	e13fb917 	ldw	r4,-284(fp)
  820178:	e0ffb217 	ldw	r3,-312(fp)
  82017c:	20c7883a 	add	r3,r4,r3
  820180:	1807d2fa 	srai	r3,r3,11
  820184:	10c00015 	stw	r3,0(r2)
  820188:	e0bfab17 	ldw	r2,-340(fp)
  82018c:	10802804 	addi	r2,r2,160
  820190:	e13fb917 	ldw	r4,-284(fp)
  820194:	e0ffb217 	ldw	r3,-312(fp)
  820198:	20c7c83a 	sub	r3,r4,r3
  82019c:	1807d2fa 	srai	r3,r3,11
  8201a0:	10c00015 	stw	r3,0(r2)
  8201a4:	e0bfab17 	ldw	r2,-340(fp)
  8201a8:	10801804 	addi	r2,r2,96
  8201ac:	e13fb717 	ldw	r4,-292(fp)
  8201b0:	e0ffb117 	ldw	r3,-316(fp)
  8201b4:	20c7883a 	add	r3,r4,r3
  8201b8:	1807d2fa 	srai	r3,r3,11
  8201bc:	10c00015 	stw	r3,0(r2)
  8201c0:	e0bfab17 	ldw	r2,-340(fp)
  8201c4:	10802004 	addi	r2,r2,128
  8201c8:	e13fb717 	ldw	r4,-292(fp)
  8201cc:	e0ffb117 	ldw	r3,-316(fp)
  8201d0:	20c7c83a 	sub	r3,r4,r3
  8201d4:	1807d2fa 	srai	r3,r3,11
  8201d8:	10c00015 	stw	r3,0(r2)
  8201dc:	e0bfa917 	ldw	r2,-348(fp)
  8201e0:	10800084 	addi	r2,r2,2
  8201e4:	e0bfa915 	stw	r2,-348(fp)
  8201e8:	e0bfaa17 	ldw	r2,-344(fp)
  8201ec:	10800104 	addi	r2,r2,4
  8201f0:	e0bfaa15 	stw	r2,-344(fp)
  8201f4:	e0bfab17 	ldw	r2,-340(fp)
  8201f8:	10800104 	addi	r2,r2,4
  8201fc:	e0bfab15 	stw	r2,-340(fp)
  820200:	e0bfac17 	ldw	r2,-336(fp)
  820204:	10bfffc4 	addi	r2,r2,-1
  820208:	e0bfac15 	stw	r2,-336(fp)
  82020c:	e0bfac17 	ldw	r2,-336(fp)
  820210:	00be6316 	blt	zero,r2,81fba0 <__alt_mem_epcs_flash_controller_0+0xff816ba0>
  820214:	e0bfbc04 	addi	r2,fp,-272
  820218:	e0bfab15 	stw	r2,-340(fp)
  82021c:	e03fac15 	stw	zero,-336(fp)
  820220:	00015106 	br	820768 <jpeg_idct_islow+0xc20>
  820224:	e0bfac17 	ldw	r2,-336(fp)
  820228:	1085883a 	add	r2,r2,r2
  82022c:	1085883a 	add	r2,r2,r2
  820230:	1007883a 	mov	r3,r2
  820234:	e0bfff17 	ldw	r2,-4(fp)
  820238:	10c5883a 	add	r2,r2,r3
  82023c:	10c00017 	ldw	r3,0(r2)
  820240:	e0800217 	ldw	r2,8(fp)
  820244:	1885883a 	add	r2,r3,r2
  820248:	e0bfba15 	stw	r2,-280(fp)
  82024c:	e0bfab17 	ldw	r2,-340(fp)
  820250:	10800017 	ldw	r2,0(r2)
  820254:	10900404 	addi	r2,r2,16400
  820258:	e0bfaf15 	stw	r2,-324(fp)
  82025c:	e0bfab17 	ldw	r2,-340(fp)
  820260:	10800104 	addi	r2,r2,4
  820264:	10800017 	ldw	r2,0(r2)
  820268:	1000421e 	bne	r2,zero,820374 <jpeg_idct_islow+0x82c>
  82026c:	e0bfab17 	ldw	r2,-340(fp)
  820270:	10800204 	addi	r2,r2,8
  820274:	10800017 	ldw	r2,0(r2)
  820278:	10003e1e 	bne	r2,zero,820374 <jpeg_idct_islow+0x82c>
  82027c:	e0bfab17 	ldw	r2,-340(fp)
  820280:	10800304 	addi	r2,r2,12
  820284:	10800017 	ldw	r2,0(r2)
  820288:	10003a1e 	bne	r2,zero,820374 <jpeg_idct_islow+0x82c>
  82028c:	e0bfab17 	ldw	r2,-340(fp)
  820290:	10800404 	addi	r2,r2,16
  820294:	10800017 	ldw	r2,0(r2)
  820298:	1000361e 	bne	r2,zero,820374 <jpeg_idct_islow+0x82c>
  82029c:	e0bfab17 	ldw	r2,-340(fp)
  8202a0:	10800504 	addi	r2,r2,20
  8202a4:	10800017 	ldw	r2,0(r2)
  8202a8:	1000321e 	bne	r2,zero,820374 <jpeg_idct_islow+0x82c>
  8202ac:	e0bfab17 	ldw	r2,-340(fp)
  8202b0:	10800604 	addi	r2,r2,24
  8202b4:	10800017 	ldw	r2,0(r2)
  8202b8:	10002e1e 	bne	r2,zero,820374 <jpeg_idct_islow+0x82c>
  8202bc:	e0bfab17 	ldw	r2,-340(fp)
  8202c0:	10800704 	addi	r2,r2,28
  8202c4:	10800017 	ldw	r2,0(r2)
  8202c8:	10002a1e 	bne	r2,zero,820374 <jpeg_idct_islow+0x82c>
  8202cc:	e0bfaf17 	ldw	r2,-324(fp)
  8202d0:	1005d17a 	srai	r2,r2,5
  8202d4:	1080ffcc 	andi	r2,r2,1023
  8202d8:	e0ffad17 	ldw	r3,-332(fp)
  8202dc:	1885883a 	add	r2,r3,r2
  8202e0:	10800003 	ldbu	r2,0(r2)
  8202e4:	e0bfbb05 	stb	r2,-276(fp)
  8202e8:	e0bfba17 	ldw	r2,-280(fp)
  8202ec:	e0ffbb03 	ldbu	r3,-276(fp)
  8202f0:	10c00005 	stb	r3,0(r2)
  8202f4:	e0bfba17 	ldw	r2,-280(fp)
  8202f8:	10800044 	addi	r2,r2,1
  8202fc:	e0ffbb03 	ldbu	r3,-276(fp)
  820300:	10c00005 	stb	r3,0(r2)
  820304:	e0bfba17 	ldw	r2,-280(fp)
  820308:	10800084 	addi	r2,r2,2
  82030c:	e0ffbb03 	ldbu	r3,-276(fp)
  820310:	10c00005 	stb	r3,0(r2)
  820314:	e0bfba17 	ldw	r2,-280(fp)
  820318:	108000c4 	addi	r2,r2,3
  82031c:	e0ffbb03 	ldbu	r3,-276(fp)
  820320:	10c00005 	stb	r3,0(r2)
  820324:	e0bfba17 	ldw	r2,-280(fp)
  820328:	10800104 	addi	r2,r2,4
  82032c:	e0ffbb03 	ldbu	r3,-276(fp)
  820330:	10c00005 	stb	r3,0(r2)
  820334:	e0bfba17 	ldw	r2,-280(fp)
  820338:	10800144 	addi	r2,r2,5
  82033c:	e0ffbb03 	ldbu	r3,-276(fp)
  820340:	10c00005 	stb	r3,0(r2)
  820344:	e0bfba17 	ldw	r2,-280(fp)
  820348:	10800184 	addi	r2,r2,6
  82034c:	e0ffbb03 	ldbu	r3,-276(fp)
  820350:	10c00005 	stb	r3,0(r2)
  820354:	e0bfba17 	ldw	r2,-280(fp)
  820358:	108001c4 	addi	r2,r2,7
  82035c:	e0ffbb03 	ldbu	r3,-276(fp)
  820360:	10c00005 	stb	r3,0(r2)
  820364:	e0bfab17 	ldw	r2,-340(fp)
  820368:	10800804 	addi	r2,r2,32
  82036c:	e0bfab15 	stw	r2,-340(fp)
  820370:	0000fa06 	br	82075c <jpeg_idct_islow+0xc14>
  820374:	e0bfab17 	ldw	r2,-340(fp)
  820378:	10800404 	addi	r2,r2,16
  82037c:	10800017 	ldw	r2,0(r2)
  820380:	e0bfb015 	stw	r2,-320(fp)
  820384:	e0ffaf17 	ldw	r3,-324(fp)
  820388:	e0bfb017 	ldw	r2,-320(fp)
  82038c:	1885883a 	add	r2,r3,r2
  820390:	1004937a 	slli	r2,r2,13
  820394:	e0bfb115 	stw	r2,-316(fp)
  820398:	e0ffaf17 	ldw	r3,-324(fp)
  82039c:	e0bfb017 	ldw	r2,-320(fp)
  8203a0:	1885c83a 	sub	r2,r3,r2
  8203a4:	1004937a 	slli	r2,r2,13
  8203a8:	e0bfb215 	stw	r2,-312(fp)
  8203ac:	e0bfab17 	ldw	r2,-340(fp)
  8203b0:	10800204 	addi	r2,r2,8
  8203b4:	10800017 	ldw	r2,0(r2)
  8203b8:	e0bfaf15 	stw	r2,-324(fp)
  8203bc:	e0bfab17 	ldw	r2,-340(fp)
  8203c0:	10800604 	addi	r2,r2,24
  8203c4:	10800017 	ldw	r2,0(r2)
  8203c8:	e0bfb015 	stw	r2,-320(fp)
  8203cc:	e0ffaf17 	ldw	r3,-324(fp)
  8203d0:	e0bfb017 	ldw	r2,-320(fp)
  8203d4:	1885883a 	add	r2,r3,r2
  8203d8:	01445444 	movi	r5,4433
  8203dc:	1009883a 	mov	r4,r2
  8203e0:	08301e80 	call	8301e8 <__mulsi3>
  8203e4:	e0bfb315 	stw	r2,-308(fp)
  8203e8:	01461f84 	movi	r5,6270
  8203ec:	e13faf17 	ldw	r4,-324(fp)
  8203f0:	08301e80 	call	8301e8 <__mulsi3>
  8203f4:	1007883a 	mov	r3,r2
  8203f8:	e0bfb317 	ldw	r2,-308(fp)
  8203fc:	1885883a 	add	r2,r3,r2
  820400:	e0bfb415 	stw	r2,-304(fp)
  820404:	017137c4 	movi	r5,-15137
  820408:	e13fb017 	ldw	r4,-320(fp)
  82040c:	08301e80 	call	8301e8 <__mulsi3>
  820410:	1007883a 	mov	r3,r2
  820414:	e0bfb317 	ldw	r2,-308(fp)
  820418:	1885883a 	add	r2,r3,r2
  82041c:	e0bfb515 	stw	r2,-300(fp)
  820420:	e0ffb117 	ldw	r3,-316(fp)
  820424:	e0bfb417 	ldw	r2,-304(fp)
  820428:	1885883a 	add	r2,r3,r2
  82042c:	e0bfb615 	stw	r2,-296(fp)
  820430:	e0ffb117 	ldw	r3,-316(fp)
  820434:	e0bfb417 	ldw	r2,-304(fp)
  820438:	1885c83a 	sub	r2,r3,r2
  82043c:	e0bfb715 	stw	r2,-292(fp)
  820440:	e0ffb217 	ldw	r3,-312(fp)
  820444:	e0bfb517 	ldw	r2,-300(fp)
  820448:	1885883a 	add	r2,r3,r2
  82044c:	e0bfb815 	stw	r2,-288(fp)
  820450:	e0ffb217 	ldw	r3,-312(fp)
  820454:	e0bfb517 	ldw	r2,-300(fp)
  820458:	1885c83a 	sub	r2,r3,r2
  82045c:	e0bfb915 	stw	r2,-284(fp)
  820460:	e0bfab17 	ldw	r2,-340(fp)
  820464:	10800704 	addi	r2,r2,28
  820468:	10800017 	ldw	r2,0(r2)
  82046c:	e0bfb115 	stw	r2,-316(fp)
  820470:	e0bfab17 	ldw	r2,-340(fp)
  820474:	10800504 	addi	r2,r2,20
  820478:	10800017 	ldw	r2,0(r2)
  82047c:	e0bfb215 	stw	r2,-312(fp)
  820480:	e0bfab17 	ldw	r2,-340(fp)
  820484:	10800304 	addi	r2,r2,12
  820488:	10800017 	ldw	r2,0(r2)
  82048c:	e0bfb415 	stw	r2,-304(fp)
  820490:	e0bfab17 	ldw	r2,-340(fp)
  820494:	10800104 	addi	r2,r2,4
  820498:	10800017 	ldw	r2,0(r2)
  82049c:	e0bfb515 	stw	r2,-300(fp)
  8204a0:	e0ffb117 	ldw	r3,-316(fp)
  8204a4:	e0bfb417 	ldw	r2,-304(fp)
  8204a8:	1885883a 	add	r2,r3,r2
  8204ac:	e0bfaf15 	stw	r2,-324(fp)
  8204b0:	e0ffb217 	ldw	r3,-312(fp)
  8204b4:	e0bfb517 	ldw	r2,-300(fp)
  8204b8:	1885883a 	add	r2,r3,r2
  8204bc:	e0bfb015 	stw	r2,-320(fp)
  8204c0:	e0ffaf17 	ldw	r3,-324(fp)
  8204c4:	e0bfb017 	ldw	r2,-320(fp)
  8204c8:	1885883a 	add	r2,r3,r2
  8204cc:	01496844 	movi	r5,9633
  8204d0:	1009883a 	mov	r4,r2
  8204d4:	08301e80 	call	8301e8 <__mulsi3>
  8204d8:	e0bfb315 	stw	r2,-308(fp)
  8204dc:	01704ec4 	movi	r5,-16069
  8204e0:	e13faf17 	ldw	r4,-324(fp)
  8204e4:	08301e80 	call	8301e8 <__mulsi3>
  8204e8:	e0bfaf15 	stw	r2,-324(fp)
  8204ec:	017ce104 	movi	r5,-3196
  8204f0:	e13fb017 	ldw	r4,-320(fp)
  8204f4:	08301e80 	call	8301e8 <__mulsi3>
  8204f8:	e0bfb015 	stw	r2,-320(fp)
  8204fc:	e0ffaf17 	ldw	r3,-324(fp)
  820500:	e0bfb317 	ldw	r2,-308(fp)
  820504:	1885883a 	add	r2,r3,r2
  820508:	e0bfaf15 	stw	r2,-324(fp)
  82050c:	e0ffb017 	ldw	r3,-320(fp)
  820510:	e0bfb317 	ldw	r2,-308(fp)
  820514:	1885883a 	add	r2,r3,r2
  820518:	e0bfb015 	stw	r2,-320(fp)
  82051c:	e0ffb117 	ldw	r3,-316(fp)
  820520:	e0bfb517 	ldw	r2,-300(fp)
  820524:	1885883a 	add	r2,r3,r2
  820528:	0178ccc4 	movi	r5,-7373
  82052c:	1009883a 	mov	r4,r2
  820530:	08301e80 	call	8301e8 <__mulsi3>
  820534:	e0bfb315 	stw	r2,-308(fp)
  820538:	01426384 	movi	r5,2446
  82053c:	e13fb117 	ldw	r4,-316(fp)
  820540:	08301e80 	call	8301e8 <__mulsi3>
  820544:	e0bfb115 	stw	r2,-316(fp)
  820548:	014c02c4 	movi	r5,12299
  82054c:	e13fb517 	ldw	r4,-300(fp)
  820550:	08301e80 	call	8301e8 <__mulsi3>
  820554:	e0bfb515 	stw	r2,-300(fp)
  820558:	e0ffb317 	ldw	r3,-308(fp)
  82055c:	e0bfaf17 	ldw	r2,-324(fp)
  820560:	1885883a 	add	r2,r3,r2
  820564:	e0ffb117 	ldw	r3,-316(fp)
  820568:	1885883a 	add	r2,r3,r2
  82056c:	e0bfb115 	stw	r2,-316(fp)
  820570:	e0ffb317 	ldw	r3,-308(fp)
  820574:	e0bfb017 	ldw	r2,-320(fp)
  820578:	1885883a 	add	r2,r3,r2
  82057c:	e0ffb517 	ldw	r3,-300(fp)
  820580:	1885883a 	add	r2,r3,r2
  820584:	e0bfb515 	stw	r2,-300(fp)
  820588:	e0ffb217 	ldw	r3,-312(fp)
  82058c:	e0bfb417 	ldw	r2,-304(fp)
  820590:	1885883a 	add	r2,r3,r2
  820594:	016b7f44 	movi	r5,-20995
  820598:	1009883a 	mov	r4,r2
  82059c:	08301e80 	call	8301e8 <__mulsi3>
  8205a0:	e0bfb315 	stw	r2,-308(fp)
  8205a4:	01506cc4 	movi	r5,16819
  8205a8:	e13fb217 	ldw	r4,-312(fp)
  8205ac:	08301e80 	call	8301e8 <__mulsi3>
  8205b0:	e0bfb215 	stw	r2,-312(fp)
  8205b4:	01589504 	movi	r5,25172
  8205b8:	e13fb417 	ldw	r4,-304(fp)
  8205bc:	08301e80 	call	8301e8 <__mulsi3>
  8205c0:	e0bfb415 	stw	r2,-304(fp)
  8205c4:	e0ffb317 	ldw	r3,-308(fp)
  8205c8:	e0bfb017 	ldw	r2,-320(fp)
  8205cc:	1885883a 	add	r2,r3,r2
  8205d0:	e0ffb217 	ldw	r3,-312(fp)
  8205d4:	1885883a 	add	r2,r3,r2
  8205d8:	e0bfb215 	stw	r2,-312(fp)
  8205dc:	e0ffb317 	ldw	r3,-308(fp)
  8205e0:	e0bfaf17 	ldw	r2,-324(fp)
  8205e4:	1885883a 	add	r2,r3,r2
  8205e8:	e0ffb417 	ldw	r3,-304(fp)
  8205ec:	1885883a 	add	r2,r3,r2
  8205f0:	e0bfb415 	stw	r2,-304(fp)
  8205f4:	e0ffb617 	ldw	r3,-296(fp)
  8205f8:	e0bfb517 	ldw	r2,-300(fp)
  8205fc:	1885883a 	add	r2,r3,r2
  820600:	1005d4ba 	srai	r2,r2,18
  820604:	1080ffcc 	andi	r2,r2,1023
  820608:	e0ffad17 	ldw	r3,-332(fp)
  82060c:	1885883a 	add	r2,r3,r2
  820610:	10c00003 	ldbu	r3,0(r2)
  820614:	e0bfba17 	ldw	r2,-280(fp)
  820618:	10c00005 	stb	r3,0(r2)
  82061c:	e0bfba17 	ldw	r2,-280(fp)
  820620:	108001c4 	addi	r2,r2,7
  820624:	e13fb617 	ldw	r4,-296(fp)
  820628:	e0ffb517 	ldw	r3,-300(fp)
  82062c:	20c7c83a 	sub	r3,r4,r3
  820630:	1807d4ba 	srai	r3,r3,18
  820634:	18c0ffcc 	andi	r3,r3,1023
  820638:	e13fad17 	ldw	r4,-332(fp)
  82063c:	20c7883a 	add	r3,r4,r3
  820640:	18c00003 	ldbu	r3,0(r3)
  820644:	10c00005 	stb	r3,0(r2)
  820648:	e0bfba17 	ldw	r2,-280(fp)
  82064c:	10800044 	addi	r2,r2,1
  820650:	e13fb817 	ldw	r4,-288(fp)
  820654:	e0ffb417 	ldw	r3,-304(fp)
  820658:	20c7883a 	add	r3,r4,r3
  82065c:	1807d4ba 	srai	r3,r3,18
  820660:	18c0ffcc 	andi	r3,r3,1023
  820664:	e13fad17 	ldw	r4,-332(fp)
  820668:	20c7883a 	add	r3,r4,r3
  82066c:	18c00003 	ldbu	r3,0(r3)
  820670:	10c00005 	stb	r3,0(r2)
  820674:	e0bfba17 	ldw	r2,-280(fp)
  820678:	10800184 	addi	r2,r2,6
  82067c:	e13fb817 	ldw	r4,-288(fp)
  820680:	e0ffb417 	ldw	r3,-304(fp)
  820684:	20c7c83a 	sub	r3,r4,r3
  820688:	1807d4ba 	srai	r3,r3,18
  82068c:	18c0ffcc 	andi	r3,r3,1023
  820690:	e13fad17 	ldw	r4,-332(fp)
  820694:	20c7883a 	add	r3,r4,r3
  820698:	18c00003 	ldbu	r3,0(r3)
  82069c:	10c00005 	stb	r3,0(r2)
  8206a0:	e0bfba17 	ldw	r2,-280(fp)
  8206a4:	10800084 	addi	r2,r2,2
  8206a8:	e13fb917 	ldw	r4,-284(fp)
  8206ac:	e0ffb217 	ldw	r3,-312(fp)
  8206b0:	20c7883a 	add	r3,r4,r3
  8206b4:	1807d4ba 	srai	r3,r3,18
  8206b8:	18c0ffcc 	andi	r3,r3,1023
  8206bc:	e13fad17 	ldw	r4,-332(fp)
  8206c0:	20c7883a 	add	r3,r4,r3
  8206c4:	18c00003 	ldbu	r3,0(r3)
  8206c8:	10c00005 	stb	r3,0(r2)
  8206cc:	e0bfba17 	ldw	r2,-280(fp)
  8206d0:	10800144 	addi	r2,r2,5
  8206d4:	e13fb917 	ldw	r4,-284(fp)
  8206d8:	e0ffb217 	ldw	r3,-312(fp)
  8206dc:	20c7c83a 	sub	r3,r4,r3
  8206e0:	1807d4ba 	srai	r3,r3,18
  8206e4:	18c0ffcc 	andi	r3,r3,1023
  8206e8:	e13fad17 	ldw	r4,-332(fp)
  8206ec:	20c7883a 	add	r3,r4,r3
  8206f0:	18c00003 	ldbu	r3,0(r3)
  8206f4:	10c00005 	stb	r3,0(r2)
  8206f8:	e0bfba17 	ldw	r2,-280(fp)
  8206fc:	108000c4 	addi	r2,r2,3
  820700:	e13fb717 	ldw	r4,-292(fp)
  820704:	e0ffb117 	ldw	r3,-316(fp)
  820708:	20c7883a 	add	r3,r4,r3
  82070c:	1807d4ba 	srai	r3,r3,18
  820710:	18c0ffcc 	andi	r3,r3,1023
  820714:	e13fad17 	ldw	r4,-332(fp)
  820718:	20c7883a 	add	r3,r4,r3
  82071c:	18c00003 	ldbu	r3,0(r3)
  820720:	10c00005 	stb	r3,0(r2)
  820724:	e0bfba17 	ldw	r2,-280(fp)
  820728:	10800104 	addi	r2,r2,4
  82072c:	e13fb717 	ldw	r4,-292(fp)
  820730:	e0ffb117 	ldw	r3,-316(fp)
  820734:	20c7c83a 	sub	r3,r4,r3
  820738:	1807d4ba 	srai	r3,r3,18
  82073c:	18c0ffcc 	andi	r3,r3,1023
  820740:	e13fad17 	ldw	r4,-332(fp)
  820744:	20c7883a 	add	r3,r4,r3
  820748:	18c00003 	ldbu	r3,0(r3)
  82074c:	10c00005 	stb	r3,0(r2)
  820750:	e0bfab17 	ldw	r2,-340(fp)
  820754:	10800804 	addi	r2,r2,32
  820758:	e0bfab15 	stw	r2,-340(fp)
  82075c:	e0bfac17 	ldw	r2,-336(fp)
  820760:	10800044 	addi	r2,r2,1
  820764:	e0bfac15 	stw	r2,-336(fp)
  820768:	e0bfac17 	ldw	r2,-336(fp)
  82076c:	10800210 	cmplti	r2,r2,8
  820770:	103eac1e 	bne	r2,zero,820224 <__alt_mem_epcs_flash_controller_0+0xff817224>
  820774:	0001883a 	nop
  820778:	e037883a 	mov	sp,fp
  82077c:	dfc00117 	ldw	ra,4(sp)
  820780:	df000017 	ldw	fp,0(sp)
  820784:	dec00204 	addi	sp,sp,8
  820788:	f800283a 	ret

0082078c <jpeg_idct_7x7>:
  82078c:	deffb804 	addi	sp,sp,-288
  820790:	dfc04715 	stw	ra,284(sp)
  820794:	df004615 	stw	fp,280(sp)
  820798:	dc004515 	stw	r16,276(sp)
  82079c:	df004604 	addi	fp,sp,280
  8207a0:	e13ffb15 	stw	r4,-20(fp)
  8207a4:	e17ffc15 	stw	r5,-16(fp)
  8207a8:	e1bffd15 	stw	r6,-12(fp)
  8207ac:	e1fffe15 	stw	r7,-8(fp)
  8207b0:	e0bffb17 	ldw	r2,-20(fp)
  8207b4:	10805417 	ldw	r2,336(r2)
  8207b8:	10bfa004 	addi	r2,r2,-384
  8207bc:	e0bfbe15 	stw	r2,-264(fp)
  8207c0:	e0bffd17 	ldw	r2,-12(fp)
  8207c4:	e0bfba15 	stw	r2,-280(fp)
  8207c8:	e0bffc17 	ldw	r2,-16(fp)
  8207cc:	10801517 	ldw	r2,84(r2)
  8207d0:	e0bfbb15 	stw	r2,-276(fp)
  8207d4:	e0bfca04 	addi	r2,fp,-216
  8207d8:	e0bfbc15 	stw	r2,-272(fp)
  8207dc:	e03fbd15 	stw	zero,-268(fp)
  8207e0:	00010e06 	br	820c1c <jpeg_idct_7x7+0x490>
  8207e4:	e0bfba17 	ldw	r2,-280(fp)
  8207e8:	1080000b 	ldhu	r2,0(r2)
  8207ec:	10ffffcc 	andi	r3,r2,65535
  8207f0:	18e0001c 	xori	r3,r3,32768
  8207f4:	18e00004 	addi	r3,r3,-32768
  8207f8:	e0bfbb17 	ldw	r2,-276(fp)
  8207fc:	10800017 	ldw	r2,0(r2)
  820800:	100b883a 	mov	r5,r2
  820804:	1809883a 	mov	r4,r3
  820808:	08301e80 	call	8301e8 <__mulsi3>
  82080c:	e0bfbf15 	stw	r2,-260(fp)
  820810:	e0bfbf17 	ldw	r2,-260(fp)
  820814:	1004937a 	slli	r2,r2,13
  820818:	e0bfbf15 	stw	r2,-260(fp)
  82081c:	e0bfbf17 	ldw	r2,-260(fp)
  820820:	10810004 	addi	r2,r2,1024
  820824:	e0bfbf15 	stw	r2,-260(fp)
  820828:	e0bfba17 	ldw	r2,-280(fp)
  82082c:	10800804 	addi	r2,r2,32
  820830:	1080000b 	ldhu	r2,0(r2)
  820834:	10ffffcc 	andi	r3,r2,65535
  820838:	18e0001c 	xori	r3,r3,32768
  82083c:	18e00004 	addi	r3,r3,-32768
  820840:	e0bfbb17 	ldw	r2,-276(fp)
  820844:	10801004 	addi	r2,r2,64
  820848:	10800017 	ldw	r2,0(r2)
  82084c:	100b883a 	mov	r5,r2
  820850:	1809883a 	mov	r4,r3
  820854:	08301e80 	call	8301e8 <__mulsi3>
  820858:	e0bfc015 	stw	r2,-256(fp)
  82085c:	e0bfba17 	ldw	r2,-280(fp)
  820860:	10801004 	addi	r2,r2,64
  820864:	1080000b 	ldhu	r2,0(r2)
  820868:	10ffffcc 	andi	r3,r2,65535
  82086c:	18e0001c 	xori	r3,r3,32768
  820870:	18e00004 	addi	r3,r3,-32768
  820874:	e0bfbb17 	ldw	r2,-276(fp)
  820878:	10802004 	addi	r2,r2,128
  82087c:	10800017 	ldw	r2,0(r2)
  820880:	100b883a 	mov	r5,r2
  820884:	1809883a 	mov	r4,r3
  820888:	08301e80 	call	8301e8 <__mulsi3>
  82088c:	e0bfc115 	stw	r2,-252(fp)
  820890:	e0bfba17 	ldw	r2,-280(fp)
  820894:	10801804 	addi	r2,r2,96
  820898:	1080000b 	ldhu	r2,0(r2)
  82089c:	10ffffcc 	andi	r3,r2,65535
  8208a0:	18e0001c 	xori	r3,r3,32768
  8208a4:	18e00004 	addi	r3,r3,-32768
  8208a8:	e0bfbb17 	ldw	r2,-276(fp)
  8208ac:	10803004 	addi	r2,r2,192
  8208b0:	10800017 	ldw	r2,0(r2)
  8208b4:	100b883a 	mov	r5,r2
  8208b8:	1809883a 	mov	r4,r3
  8208bc:	08301e80 	call	8301e8 <__mulsi3>
  8208c0:	e0bfc215 	stw	r2,-248(fp)
  8208c4:	e0ffc117 	ldw	r3,-252(fp)
  8208c8:	e0bfc217 	ldw	r2,-248(fp)
  8208cc:	1885c83a 	sub	r2,r3,r2
  8208d0:	01470dc4 	movi	r5,7223
  8208d4:	1009883a 	mov	r4,r2
  8208d8:	08301e80 	call	8301e8 <__mulsi3>
  8208dc:	e0bfc315 	stw	r2,-244(fp)
  8208e0:	e0ffc017 	ldw	r3,-256(fp)
  8208e4:	e0bfc117 	ldw	r2,-252(fp)
  8208e8:	1885c83a 	sub	r2,r3,r2
  8208ec:	01428484 	movi	r5,2578
  8208f0:	1009883a 	mov	r4,r2
  8208f4:	08301e80 	call	8301e8 <__mulsi3>
  8208f8:	e0bfc415 	stw	r2,-240(fp)
  8208fc:	e0ffc317 	ldw	r3,-244(fp)
  820900:	e0bfc417 	ldw	r2,-240(fp)
  820904:	1887883a 	add	r3,r3,r2
  820908:	e0bfbf17 	ldw	r2,-260(fp)
  82090c:	18a1883a 	add	r16,r3,r2
  820910:	01714544 	movi	r5,-15083
  820914:	e13fc117 	ldw	r4,-252(fp)
  820918:	08301e80 	call	8301e8 <__mulsi3>
  82091c:	8085883a 	add	r2,r16,r2
  820920:	e0bfc515 	stw	r2,-236(fp)
  820924:	e0ffc017 	ldw	r3,-256(fp)
  820928:	e0bfc217 	ldw	r2,-248(fp)
  82092c:	1885883a 	add	r2,r3,r2
  820930:	e0bfc615 	stw	r2,-232(fp)
  820934:	e0ffc117 	ldw	r3,-252(fp)
  820938:	e0bfc617 	ldw	r2,-232(fp)
  82093c:	1885c83a 	sub	r2,r3,r2
  820940:	e0bfc115 	stw	r2,-252(fp)
  820944:	014a3184 	movi	r5,10438
  820948:	e13fc617 	ldw	r4,-232(fp)
  82094c:	08301e80 	call	8301e8 <__mulsi3>
  820950:	1007883a 	mov	r3,r2
  820954:	e0bfbf17 	ldw	r2,-260(fp)
  820958:	1885883a 	add	r2,r3,r2
  82095c:	e0bfc615 	stw	r2,-232(fp)
  820960:	017f60c4 	movi	r5,-637
  820964:	e13fc217 	ldw	r4,-248(fp)
  820968:	08301e80 	call	8301e8 <__mulsi3>
  82096c:	1007883a 	mov	r3,r2
  820970:	e0bfc617 	ldw	r2,-232(fp)
  820974:	1885883a 	add	r2,r3,r2
  820978:	e0ffc317 	ldw	r3,-244(fp)
  82097c:	1885883a 	add	r2,r3,r2
  820980:	e0bfc315 	stw	r2,-244(fp)
  820984:	016c3c44 	movi	r5,-20239
  820988:	e13fc017 	ldw	r4,-256(fp)
  82098c:	08301e80 	call	8301e8 <__mulsi3>
  820990:	1007883a 	mov	r3,r2
  820994:	e0bfc617 	ldw	r2,-232(fp)
  820998:	1885883a 	add	r2,r3,r2
  82099c:	e0ffc417 	ldw	r3,-240(fp)
  8209a0:	1885883a 	add	r2,r3,r2
  8209a4:	e0bfc415 	stw	r2,-240(fp)
  8209a8:	014b5044 	movi	r5,11585
  8209ac:	e13fc117 	ldw	r4,-252(fp)
  8209b0:	08301e80 	call	8301e8 <__mulsi3>
  8209b4:	1007883a 	mov	r3,r2
  8209b8:	e0bfbf17 	ldw	r2,-260(fp)
  8209bc:	10c5883a 	add	r2,r2,r3
  8209c0:	e0bfbf15 	stw	r2,-260(fp)
  8209c4:	e0bfba17 	ldw	r2,-280(fp)
  8209c8:	10800404 	addi	r2,r2,16
  8209cc:	1080000b 	ldhu	r2,0(r2)
  8209d0:	10ffffcc 	andi	r3,r2,65535
  8209d4:	18e0001c 	xori	r3,r3,32768
  8209d8:	18e00004 	addi	r3,r3,-32768
  8209dc:	e0bfbb17 	ldw	r2,-276(fp)
  8209e0:	10800804 	addi	r2,r2,32
  8209e4:	10800017 	ldw	r2,0(r2)
  8209e8:	100b883a 	mov	r5,r2
  8209ec:	1809883a 	mov	r4,r3
  8209f0:	08301e80 	call	8301e8 <__mulsi3>
  8209f4:	e0bfc015 	stw	r2,-256(fp)
  8209f8:	e0bfba17 	ldw	r2,-280(fp)
  8209fc:	10800c04 	addi	r2,r2,48
  820a00:	1080000b 	ldhu	r2,0(r2)
  820a04:	10ffffcc 	andi	r3,r2,65535
  820a08:	18e0001c 	xori	r3,r3,32768
  820a0c:	18e00004 	addi	r3,r3,-32768
  820a10:	e0bfbb17 	ldw	r2,-276(fp)
  820a14:	10801804 	addi	r2,r2,96
  820a18:	10800017 	ldw	r2,0(r2)
  820a1c:	100b883a 	mov	r5,r2
  820a20:	1809883a 	mov	r4,r3
  820a24:	08301e80 	call	8301e8 <__mulsi3>
  820a28:	e0bfc115 	stw	r2,-252(fp)
  820a2c:	e0bfba17 	ldw	r2,-280(fp)
  820a30:	10801404 	addi	r2,r2,80
  820a34:	1080000b 	ldhu	r2,0(r2)
  820a38:	10ffffcc 	andi	r3,r2,65535
  820a3c:	18e0001c 	xori	r3,r3,32768
  820a40:	18e00004 	addi	r3,r3,-32768
  820a44:	e0bfbb17 	ldw	r2,-276(fp)
  820a48:	10802804 	addi	r2,r2,160
  820a4c:	10800017 	ldw	r2,0(r2)
  820a50:	100b883a 	mov	r5,r2
  820a54:	1809883a 	mov	r4,r3
  820a58:	08301e80 	call	8301e8 <__mulsi3>
  820a5c:	e0bfc215 	stw	r2,-248(fp)
  820a60:	e0ffc017 	ldw	r3,-256(fp)
  820a64:	e0bfc117 	ldw	r2,-252(fp)
  820a68:	1885883a 	add	r2,r3,r2
  820a6c:	01477bc4 	movi	r5,7663
  820a70:	1009883a 	mov	r4,r2
  820a74:	08301e80 	call	8301e8 <__mulsi3>
  820a78:	e0bfc715 	stw	r2,-228(fp)
  820a7c:	e0ffc017 	ldw	r3,-256(fp)
  820a80:	e0bfc117 	ldw	r2,-252(fp)
  820a84:	1885c83a 	sub	r2,r3,r2
  820a88:	01415cc4 	movi	r5,1395
  820a8c:	1009883a 	mov	r4,r2
  820a90:	08301e80 	call	8301e8 <__mulsi3>
  820a94:	e0bfc815 	stw	r2,-224(fp)
  820a98:	e0ffc717 	ldw	r3,-228(fp)
  820a9c:	e0bfc817 	ldw	r2,-224(fp)
  820aa0:	1885c83a 	sub	r2,r3,r2
  820aa4:	e0bfc615 	stw	r2,-232(fp)
  820aa8:	e0ffc717 	ldw	r3,-228(fp)
  820aac:	e0bfc817 	ldw	r2,-224(fp)
  820ab0:	1885883a 	add	r2,r3,r2
  820ab4:	e0bfc715 	stw	r2,-228(fp)
  820ab8:	e0ffc117 	ldw	r3,-252(fp)
  820abc:	e0bfc217 	ldw	r2,-248(fp)
  820ac0:	1885883a 	add	r2,r3,r2
  820ac4:	0174f844 	movi	r5,-11295
  820ac8:	1009883a 	mov	r4,r2
  820acc:	08301e80 	call	8301e8 <__mulsi3>
  820ad0:	e0bfc815 	stw	r2,-224(fp)
  820ad4:	e0ffc717 	ldw	r3,-228(fp)
  820ad8:	e0bfc817 	ldw	r2,-224(fp)
  820adc:	1885883a 	add	r2,r3,r2
  820ae0:	e0bfc715 	stw	r2,-228(fp)
  820ae4:	e0ffc017 	ldw	r3,-256(fp)
  820ae8:	e0bfc217 	ldw	r2,-248(fp)
  820aec:	1885883a 	add	r2,r3,r2
  820af0:	0144e8c4 	movi	r5,5027
  820af4:	1009883a 	mov	r4,r2
  820af8:	08301e80 	call	8301e8 <__mulsi3>
  820afc:	e0bfc115 	stw	r2,-252(fp)
  820b00:	e0ffc617 	ldw	r3,-232(fp)
  820b04:	e0bfc117 	ldw	r2,-252(fp)
  820b08:	1885883a 	add	r2,r3,r2
  820b0c:	e0bfc615 	stw	r2,-232(fp)
  820b10:	014ef784 	movi	r5,15326
  820b14:	e13fc217 	ldw	r4,-248(fp)
  820b18:	08301e80 	call	8301e8 <__mulsi3>
  820b1c:	1007883a 	mov	r3,r2
  820b20:	e0bfc117 	ldw	r2,-252(fp)
  820b24:	1885883a 	add	r2,r3,r2
  820b28:	e0ffc817 	ldw	r3,-224(fp)
  820b2c:	1885883a 	add	r2,r3,r2
  820b30:	e0bfc815 	stw	r2,-224(fp)
  820b34:	e0ffc317 	ldw	r3,-244(fp)
  820b38:	e0bfc617 	ldw	r2,-232(fp)
  820b3c:	1885883a 	add	r2,r3,r2
  820b40:	1007d2fa 	srai	r3,r2,11
  820b44:	e0bfbc17 	ldw	r2,-272(fp)
  820b48:	10c00015 	stw	r3,0(r2)
  820b4c:	e0bfbc17 	ldw	r2,-272(fp)
  820b50:	10802a04 	addi	r2,r2,168
  820b54:	e13fc317 	ldw	r4,-244(fp)
  820b58:	e0ffc617 	ldw	r3,-232(fp)
  820b5c:	20c7c83a 	sub	r3,r4,r3
  820b60:	1807d2fa 	srai	r3,r3,11
  820b64:	10c00015 	stw	r3,0(r2)
  820b68:	e0bfbc17 	ldw	r2,-272(fp)
  820b6c:	10800704 	addi	r2,r2,28
  820b70:	e13fc517 	ldw	r4,-236(fp)
  820b74:	e0ffc717 	ldw	r3,-228(fp)
  820b78:	20c7883a 	add	r3,r4,r3
  820b7c:	1807d2fa 	srai	r3,r3,11
  820b80:	10c00015 	stw	r3,0(r2)
  820b84:	e0bfbc17 	ldw	r2,-272(fp)
  820b88:	10802304 	addi	r2,r2,140
  820b8c:	e13fc517 	ldw	r4,-236(fp)
  820b90:	e0ffc717 	ldw	r3,-228(fp)
  820b94:	20c7c83a 	sub	r3,r4,r3
  820b98:	1807d2fa 	srai	r3,r3,11
  820b9c:	10c00015 	stw	r3,0(r2)
  820ba0:	e0bfbc17 	ldw	r2,-272(fp)
  820ba4:	10800e04 	addi	r2,r2,56
  820ba8:	e13fc417 	ldw	r4,-240(fp)
  820bac:	e0ffc817 	ldw	r3,-224(fp)
  820bb0:	20c7883a 	add	r3,r4,r3
  820bb4:	1807d2fa 	srai	r3,r3,11
  820bb8:	10c00015 	stw	r3,0(r2)
  820bbc:	e0bfbc17 	ldw	r2,-272(fp)
  820bc0:	10801c04 	addi	r2,r2,112
  820bc4:	e13fc417 	ldw	r4,-240(fp)
  820bc8:	e0ffc817 	ldw	r3,-224(fp)
  820bcc:	20c7c83a 	sub	r3,r4,r3
  820bd0:	1807d2fa 	srai	r3,r3,11
  820bd4:	10c00015 	stw	r3,0(r2)
  820bd8:	e0bfbc17 	ldw	r2,-272(fp)
  820bdc:	10801504 	addi	r2,r2,84
  820be0:	e0ffbf17 	ldw	r3,-260(fp)
  820be4:	1807d2fa 	srai	r3,r3,11
  820be8:	10c00015 	stw	r3,0(r2)
  820bec:	e0bfbd17 	ldw	r2,-268(fp)
  820bf0:	10800044 	addi	r2,r2,1
  820bf4:	e0bfbd15 	stw	r2,-268(fp)
  820bf8:	e0bfba17 	ldw	r2,-280(fp)
  820bfc:	10800084 	addi	r2,r2,2
  820c00:	e0bfba15 	stw	r2,-280(fp)
  820c04:	e0bfbb17 	ldw	r2,-276(fp)
  820c08:	10800104 	addi	r2,r2,4
  820c0c:	e0bfbb15 	stw	r2,-276(fp)
  820c10:	e0bfbc17 	ldw	r2,-272(fp)
  820c14:	10800104 	addi	r2,r2,4
  820c18:	e0bfbc15 	stw	r2,-272(fp)
  820c1c:	e0bfbd17 	ldw	r2,-268(fp)
  820c20:	108001d0 	cmplti	r2,r2,7
  820c24:	103eef1e 	bne	r2,zero,8207e4 <__alt_mem_epcs_flash_controller_0+0xff8177e4>
  820c28:	e0bfca04 	addi	r2,fp,-216
  820c2c:	e0bfbc15 	stw	r2,-272(fp)
  820c30:	e03fbd15 	stw	zero,-268(fp)
  820c34:	0000ee06 	br	820ff0 <jpeg_idct_7x7+0x864>
  820c38:	e0bfbd17 	ldw	r2,-268(fp)
  820c3c:	1085883a 	add	r2,r2,r2
  820c40:	1085883a 	add	r2,r2,r2
  820c44:	1007883a 	mov	r3,r2
  820c48:	e0bffe17 	ldw	r2,-8(fp)
  820c4c:	10c5883a 	add	r2,r2,r3
  820c50:	10c00017 	ldw	r3,0(r2)
  820c54:	e0800217 	ldw	r2,8(fp)
  820c58:	1885883a 	add	r2,r3,r2
  820c5c:	e0bfc915 	stw	r2,-220(fp)
  820c60:	e0bfbc17 	ldw	r2,-272(fp)
  820c64:	10800017 	ldw	r2,0(r2)
  820c68:	10900404 	addi	r2,r2,16400
  820c6c:	e0bfbf15 	stw	r2,-260(fp)
  820c70:	e0bfbf17 	ldw	r2,-260(fp)
  820c74:	1004937a 	slli	r2,r2,13
  820c78:	e0bfbf15 	stw	r2,-260(fp)
  820c7c:	e0bfbc17 	ldw	r2,-272(fp)
  820c80:	10800204 	addi	r2,r2,8
  820c84:	10800017 	ldw	r2,0(r2)
  820c88:	e0bfc015 	stw	r2,-256(fp)
  820c8c:	e0bfbc17 	ldw	r2,-272(fp)
  820c90:	10800404 	addi	r2,r2,16
  820c94:	10800017 	ldw	r2,0(r2)
  820c98:	e0bfc115 	stw	r2,-252(fp)
  820c9c:	e0bfbc17 	ldw	r2,-272(fp)
  820ca0:	10800604 	addi	r2,r2,24
  820ca4:	10800017 	ldw	r2,0(r2)
  820ca8:	e0bfc215 	stw	r2,-248(fp)
  820cac:	e0ffc117 	ldw	r3,-252(fp)
  820cb0:	e0bfc217 	ldw	r2,-248(fp)
  820cb4:	1885c83a 	sub	r2,r3,r2
  820cb8:	01470dc4 	movi	r5,7223
  820cbc:	1009883a 	mov	r4,r2
  820cc0:	08301e80 	call	8301e8 <__mulsi3>
  820cc4:	e0bfc315 	stw	r2,-244(fp)
  820cc8:	e0ffc017 	ldw	r3,-256(fp)
  820ccc:	e0bfc117 	ldw	r2,-252(fp)
  820cd0:	1885c83a 	sub	r2,r3,r2
  820cd4:	01428484 	movi	r5,2578
  820cd8:	1009883a 	mov	r4,r2
  820cdc:	08301e80 	call	8301e8 <__mulsi3>
  820ce0:	e0bfc415 	stw	r2,-240(fp)
  820ce4:	e0ffc317 	ldw	r3,-244(fp)
  820ce8:	e0bfc417 	ldw	r2,-240(fp)
  820cec:	1887883a 	add	r3,r3,r2
  820cf0:	e0bfbf17 	ldw	r2,-260(fp)
  820cf4:	18a1883a 	add	r16,r3,r2
  820cf8:	01714544 	movi	r5,-15083
  820cfc:	e13fc117 	ldw	r4,-252(fp)
  820d00:	08301e80 	call	8301e8 <__mulsi3>
  820d04:	8085883a 	add	r2,r16,r2
  820d08:	e0bfc515 	stw	r2,-236(fp)
  820d0c:	e0ffc017 	ldw	r3,-256(fp)
  820d10:	e0bfc217 	ldw	r2,-248(fp)
  820d14:	1885883a 	add	r2,r3,r2
  820d18:	e0bfc615 	stw	r2,-232(fp)
  820d1c:	e0ffc117 	ldw	r3,-252(fp)
  820d20:	e0bfc617 	ldw	r2,-232(fp)
  820d24:	1885c83a 	sub	r2,r3,r2
  820d28:	e0bfc115 	stw	r2,-252(fp)
  820d2c:	014a3184 	movi	r5,10438
  820d30:	e13fc617 	ldw	r4,-232(fp)
  820d34:	08301e80 	call	8301e8 <__mulsi3>
  820d38:	1007883a 	mov	r3,r2
  820d3c:	e0bfbf17 	ldw	r2,-260(fp)
  820d40:	1885883a 	add	r2,r3,r2
  820d44:	e0bfc615 	stw	r2,-232(fp)
  820d48:	017f60c4 	movi	r5,-637
  820d4c:	e13fc217 	ldw	r4,-248(fp)
  820d50:	08301e80 	call	8301e8 <__mulsi3>
  820d54:	1007883a 	mov	r3,r2
  820d58:	e0bfc617 	ldw	r2,-232(fp)
  820d5c:	1885883a 	add	r2,r3,r2
  820d60:	e0ffc317 	ldw	r3,-244(fp)
  820d64:	1885883a 	add	r2,r3,r2
  820d68:	e0bfc315 	stw	r2,-244(fp)
  820d6c:	016c3c44 	movi	r5,-20239
  820d70:	e13fc017 	ldw	r4,-256(fp)
  820d74:	08301e80 	call	8301e8 <__mulsi3>
  820d78:	1007883a 	mov	r3,r2
  820d7c:	e0bfc617 	ldw	r2,-232(fp)
  820d80:	1885883a 	add	r2,r3,r2
  820d84:	e0ffc417 	ldw	r3,-240(fp)
  820d88:	1885883a 	add	r2,r3,r2
  820d8c:	e0bfc415 	stw	r2,-240(fp)
  820d90:	014b5044 	movi	r5,11585
  820d94:	e13fc117 	ldw	r4,-252(fp)
  820d98:	08301e80 	call	8301e8 <__mulsi3>
  820d9c:	1007883a 	mov	r3,r2
  820da0:	e0bfbf17 	ldw	r2,-260(fp)
  820da4:	10c5883a 	add	r2,r2,r3
  820da8:	e0bfbf15 	stw	r2,-260(fp)
  820dac:	e0bfbc17 	ldw	r2,-272(fp)
  820db0:	10800104 	addi	r2,r2,4
  820db4:	10800017 	ldw	r2,0(r2)
  820db8:	e0bfc015 	stw	r2,-256(fp)
  820dbc:	e0bfbc17 	ldw	r2,-272(fp)
  820dc0:	10800304 	addi	r2,r2,12
  820dc4:	10800017 	ldw	r2,0(r2)
  820dc8:	e0bfc115 	stw	r2,-252(fp)
  820dcc:	e0bfbc17 	ldw	r2,-272(fp)
  820dd0:	10800504 	addi	r2,r2,20
  820dd4:	10800017 	ldw	r2,0(r2)
  820dd8:	e0bfc215 	stw	r2,-248(fp)
  820ddc:	e0ffc017 	ldw	r3,-256(fp)
  820de0:	e0bfc117 	ldw	r2,-252(fp)
  820de4:	1885883a 	add	r2,r3,r2
  820de8:	01477bc4 	movi	r5,7663
  820dec:	1009883a 	mov	r4,r2
  820df0:	08301e80 	call	8301e8 <__mulsi3>
  820df4:	e0bfc715 	stw	r2,-228(fp)
  820df8:	e0ffc017 	ldw	r3,-256(fp)
  820dfc:	e0bfc117 	ldw	r2,-252(fp)
  820e00:	1885c83a 	sub	r2,r3,r2
  820e04:	01415cc4 	movi	r5,1395
  820e08:	1009883a 	mov	r4,r2
  820e0c:	08301e80 	call	8301e8 <__mulsi3>
  820e10:	e0bfc815 	stw	r2,-224(fp)
  820e14:	e0ffc717 	ldw	r3,-228(fp)
  820e18:	e0bfc817 	ldw	r2,-224(fp)
  820e1c:	1885c83a 	sub	r2,r3,r2
  820e20:	e0bfc615 	stw	r2,-232(fp)
  820e24:	e0ffc717 	ldw	r3,-228(fp)
  820e28:	e0bfc817 	ldw	r2,-224(fp)
  820e2c:	1885883a 	add	r2,r3,r2
  820e30:	e0bfc715 	stw	r2,-228(fp)
  820e34:	e0ffc117 	ldw	r3,-252(fp)
  820e38:	e0bfc217 	ldw	r2,-248(fp)
  820e3c:	1885883a 	add	r2,r3,r2
  820e40:	0174f844 	movi	r5,-11295
  820e44:	1009883a 	mov	r4,r2
  820e48:	08301e80 	call	8301e8 <__mulsi3>
  820e4c:	e0bfc815 	stw	r2,-224(fp)
  820e50:	e0ffc717 	ldw	r3,-228(fp)
  820e54:	e0bfc817 	ldw	r2,-224(fp)
  820e58:	1885883a 	add	r2,r3,r2
  820e5c:	e0bfc715 	stw	r2,-228(fp)
  820e60:	e0ffc017 	ldw	r3,-256(fp)
  820e64:	e0bfc217 	ldw	r2,-248(fp)
  820e68:	1885883a 	add	r2,r3,r2
  820e6c:	0144e8c4 	movi	r5,5027
  820e70:	1009883a 	mov	r4,r2
  820e74:	08301e80 	call	8301e8 <__mulsi3>
  820e78:	e0bfc115 	stw	r2,-252(fp)
  820e7c:	e0ffc617 	ldw	r3,-232(fp)
  820e80:	e0bfc117 	ldw	r2,-252(fp)
  820e84:	1885883a 	add	r2,r3,r2
  820e88:	e0bfc615 	stw	r2,-232(fp)
  820e8c:	014ef784 	movi	r5,15326
  820e90:	e13fc217 	ldw	r4,-248(fp)
  820e94:	08301e80 	call	8301e8 <__mulsi3>
  820e98:	1007883a 	mov	r3,r2
  820e9c:	e0bfc117 	ldw	r2,-252(fp)
  820ea0:	1885883a 	add	r2,r3,r2
  820ea4:	e0ffc817 	ldw	r3,-224(fp)
  820ea8:	1885883a 	add	r2,r3,r2
  820eac:	e0bfc815 	stw	r2,-224(fp)
  820eb0:	e0ffc317 	ldw	r3,-244(fp)
  820eb4:	e0bfc617 	ldw	r2,-232(fp)
  820eb8:	1885883a 	add	r2,r3,r2
  820ebc:	1005d4ba 	srai	r2,r2,18
  820ec0:	1080ffcc 	andi	r2,r2,1023
  820ec4:	e0ffbe17 	ldw	r3,-264(fp)
  820ec8:	1885883a 	add	r2,r3,r2
  820ecc:	10c00003 	ldbu	r3,0(r2)
  820ed0:	e0bfc917 	ldw	r2,-220(fp)
  820ed4:	10c00005 	stb	r3,0(r2)
  820ed8:	e0bfc917 	ldw	r2,-220(fp)
  820edc:	10800184 	addi	r2,r2,6
  820ee0:	e13fc317 	ldw	r4,-244(fp)
  820ee4:	e0ffc617 	ldw	r3,-232(fp)
  820ee8:	20c7c83a 	sub	r3,r4,r3
  820eec:	1807d4ba 	srai	r3,r3,18
  820ef0:	18c0ffcc 	andi	r3,r3,1023
  820ef4:	e13fbe17 	ldw	r4,-264(fp)
  820ef8:	20c7883a 	add	r3,r4,r3
  820efc:	18c00003 	ldbu	r3,0(r3)
  820f00:	10c00005 	stb	r3,0(r2)
  820f04:	e0bfc917 	ldw	r2,-220(fp)
  820f08:	10800044 	addi	r2,r2,1
  820f0c:	e13fc517 	ldw	r4,-236(fp)
  820f10:	e0ffc717 	ldw	r3,-228(fp)
  820f14:	20c7883a 	add	r3,r4,r3
  820f18:	1807d4ba 	srai	r3,r3,18
  820f1c:	18c0ffcc 	andi	r3,r3,1023
  820f20:	e13fbe17 	ldw	r4,-264(fp)
  820f24:	20c7883a 	add	r3,r4,r3
  820f28:	18c00003 	ldbu	r3,0(r3)
  820f2c:	10c00005 	stb	r3,0(r2)
  820f30:	e0bfc917 	ldw	r2,-220(fp)
  820f34:	10800144 	addi	r2,r2,5
  820f38:	e13fc517 	ldw	r4,-236(fp)
  820f3c:	e0ffc717 	ldw	r3,-228(fp)
  820f40:	20c7c83a 	sub	r3,r4,r3
  820f44:	1807d4ba 	srai	r3,r3,18
  820f48:	18c0ffcc 	andi	r3,r3,1023
  820f4c:	e13fbe17 	ldw	r4,-264(fp)
  820f50:	20c7883a 	add	r3,r4,r3
  820f54:	18c00003 	ldbu	r3,0(r3)
  820f58:	10c00005 	stb	r3,0(r2)
  820f5c:	e0bfc917 	ldw	r2,-220(fp)
  820f60:	10800084 	addi	r2,r2,2
  820f64:	e13fc417 	ldw	r4,-240(fp)
  820f68:	e0ffc817 	ldw	r3,-224(fp)
  820f6c:	20c7883a 	add	r3,r4,r3
  820f70:	1807d4ba 	srai	r3,r3,18
  820f74:	18c0ffcc 	andi	r3,r3,1023
  820f78:	e13fbe17 	ldw	r4,-264(fp)
  820f7c:	20c7883a 	add	r3,r4,r3
  820f80:	18c00003 	ldbu	r3,0(r3)
  820f84:	10c00005 	stb	r3,0(r2)
  820f88:	e0bfc917 	ldw	r2,-220(fp)
  820f8c:	10800104 	addi	r2,r2,4
  820f90:	e13fc417 	ldw	r4,-240(fp)
  820f94:	e0ffc817 	ldw	r3,-224(fp)
  820f98:	20c7c83a 	sub	r3,r4,r3
  820f9c:	1807d4ba 	srai	r3,r3,18
  820fa0:	18c0ffcc 	andi	r3,r3,1023
  820fa4:	e13fbe17 	ldw	r4,-264(fp)
  820fa8:	20c7883a 	add	r3,r4,r3
  820fac:	18c00003 	ldbu	r3,0(r3)
  820fb0:	10c00005 	stb	r3,0(r2)
  820fb4:	e0bfc917 	ldw	r2,-220(fp)
  820fb8:	108000c4 	addi	r2,r2,3
  820fbc:	e0ffbf17 	ldw	r3,-260(fp)
  820fc0:	1807d4ba 	srai	r3,r3,18
  820fc4:	18c0ffcc 	andi	r3,r3,1023
  820fc8:	e13fbe17 	ldw	r4,-264(fp)
  820fcc:	20c7883a 	add	r3,r4,r3
  820fd0:	18c00003 	ldbu	r3,0(r3)
  820fd4:	10c00005 	stb	r3,0(r2)
  820fd8:	e0bfbc17 	ldw	r2,-272(fp)
  820fdc:	10800704 	addi	r2,r2,28
  820fe0:	e0bfbc15 	stw	r2,-272(fp)
  820fe4:	e0bfbd17 	ldw	r2,-268(fp)
  820fe8:	10800044 	addi	r2,r2,1
  820fec:	e0bfbd15 	stw	r2,-268(fp)
  820ff0:	e0bfbd17 	ldw	r2,-268(fp)
  820ff4:	108001d0 	cmplti	r2,r2,7
  820ff8:	103f0f1e 	bne	r2,zero,820c38 <__alt_mem_epcs_flash_controller_0+0xff817c38>
  820ffc:	0001883a 	nop
  821000:	e6ffff04 	addi	sp,fp,-4
  821004:	dfc00217 	ldw	ra,8(sp)
  821008:	df000117 	ldw	fp,4(sp)
  82100c:	dc000017 	ldw	r16,0(sp)
  821010:	dec00304 	addi	sp,sp,12
  821014:	f800283a 	ret

00821018 <jpeg_idct_6x6>:
  821018:	deffc704 	addi	sp,sp,-228
  82101c:	dfc03815 	stw	ra,224(sp)
  821020:	df003715 	stw	fp,220(sp)
  821024:	df003704 	addi	fp,sp,220
  821028:	e13ffc15 	stw	r4,-16(fp)
  82102c:	e17ffd15 	stw	r5,-12(fp)
  821030:	e1bffe15 	stw	r6,-8(fp)
  821034:	e1ffff15 	stw	r7,-4(fp)
  821038:	e0bffc17 	ldw	r2,-16(fp)
  82103c:	10805417 	ldw	r2,336(r2)
  821040:	10bfa004 	addi	r2,r2,-384
  821044:	e0bfcd15 	stw	r2,-204(fp)
  821048:	e0bffe17 	ldw	r2,-8(fp)
  82104c:	e0bfc915 	stw	r2,-220(fp)
  821050:	e0bffd17 	ldw	r2,-12(fp)
  821054:	10801517 	ldw	r2,84(r2)
  821058:	e0bfca15 	stw	r2,-216(fp)
  82105c:	e0bfd804 	addi	r2,fp,-160
  821060:	e0bfcb15 	stw	r2,-212(fp)
  821064:	e03fcc15 	stw	zero,-208(fp)
  821068:	0000bd06 	br	821360 <jpeg_idct_6x6+0x348>
  82106c:	e0bfc917 	ldw	r2,-220(fp)
  821070:	1080000b 	ldhu	r2,0(r2)
  821074:	10ffffcc 	andi	r3,r2,65535
  821078:	18e0001c 	xori	r3,r3,32768
  82107c:	18e00004 	addi	r3,r3,-32768
  821080:	e0bfca17 	ldw	r2,-216(fp)
  821084:	10800017 	ldw	r2,0(r2)
  821088:	100b883a 	mov	r5,r2
  82108c:	1809883a 	mov	r4,r3
  821090:	08301e80 	call	8301e8 <__mulsi3>
  821094:	e0bfce15 	stw	r2,-200(fp)
  821098:	e0bfce17 	ldw	r2,-200(fp)
  82109c:	1004937a 	slli	r2,r2,13
  8210a0:	e0bfce15 	stw	r2,-200(fp)
  8210a4:	e0bfce17 	ldw	r2,-200(fp)
  8210a8:	10810004 	addi	r2,r2,1024
  8210ac:	e0bfce15 	stw	r2,-200(fp)
  8210b0:	e0bfc917 	ldw	r2,-220(fp)
  8210b4:	10801004 	addi	r2,r2,64
  8210b8:	1080000b 	ldhu	r2,0(r2)
  8210bc:	10ffffcc 	andi	r3,r2,65535
  8210c0:	18e0001c 	xori	r3,r3,32768
  8210c4:	18e00004 	addi	r3,r3,-32768
  8210c8:	e0bfca17 	ldw	r2,-216(fp)
  8210cc:	10802004 	addi	r2,r2,128
  8210d0:	10800017 	ldw	r2,0(r2)
  8210d4:	100b883a 	mov	r5,r2
  8210d8:	1809883a 	mov	r4,r3
  8210dc:	08301e80 	call	8301e8 <__mulsi3>
  8210e0:	e0bfcf15 	stw	r2,-196(fp)
  8210e4:	0145a844 	movi	r5,5793
  8210e8:	e13fcf17 	ldw	r4,-196(fp)
  8210ec:	08301e80 	call	8301e8 <__mulsi3>
  8210f0:	e0bfd015 	stw	r2,-192(fp)
  8210f4:	e0ffce17 	ldw	r3,-200(fp)
  8210f8:	e0bfd017 	ldw	r2,-192(fp)
  8210fc:	1885883a 	add	r2,r3,r2
  821100:	e0bfd115 	stw	r2,-188(fp)
  821104:	e0ffce17 	ldw	r3,-200(fp)
  821108:	e0bfd017 	ldw	r2,-192(fp)
  82110c:	1887c83a 	sub	r3,r3,r2
  821110:	e0bfd017 	ldw	r2,-192(fp)
  821114:	1885c83a 	sub	r2,r3,r2
  821118:	1005d2fa 	srai	r2,r2,11
  82111c:	e0bfd215 	stw	r2,-184(fp)
  821120:	e0bfc917 	ldw	r2,-220(fp)
  821124:	10800804 	addi	r2,r2,32
  821128:	1080000b 	ldhu	r2,0(r2)
  82112c:	10ffffcc 	andi	r3,r2,65535
  821130:	18e0001c 	xori	r3,r3,32768
  821134:	18e00004 	addi	r3,r3,-32768
  821138:	e0bfca17 	ldw	r2,-216(fp)
  82113c:	10801004 	addi	r2,r2,64
  821140:	10800017 	ldw	r2,0(r2)
  821144:	100b883a 	mov	r5,r2
  821148:	1809883a 	mov	r4,r3
  82114c:	08301e80 	call	8301e8 <__mulsi3>
  821150:	e0bfd015 	stw	r2,-192(fp)
  821154:	0149cc44 	movi	r5,10033
  821158:	e13fd017 	ldw	r4,-192(fp)
  82115c:	08301e80 	call	8301e8 <__mulsi3>
  821160:	e0bfce15 	stw	r2,-200(fp)
  821164:	e0ffd117 	ldw	r3,-188(fp)
  821168:	e0bfce17 	ldw	r2,-200(fp)
  82116c:	1885883a 	add	r2,r3,r2
  821170:	e0bfd015 	stw	r2,-192(fp)
  821174:	e0ffd117 	ldw	r3,-188(fp)
  821178:	e0bfce17 	ldw	r2,-200(fp)
  82117c:	1885c83a 	sub	r2,r3,r2
  821180:	e0bfd315 	stw	r2,-180(fp)
  821184:	e0bfc917 	ldw	r2,-220(fp)
  821188:	10800404 	addi	r2,r2,16
  82118c:	1080000b 	ldhu	r2,0(r2)
  821190:	10ffffcc 	andi	r3,r2,65535
  821194:	18e0001c 	xori	r3,r3,32768
  821198:	18e00004 	addi	r3,r3,-32768
  82119c:	e0bfca17 	ldw	r2,-216(fp)
  8211a0:	10800804 	addi	r2,r2,32
  8211a4:	10800017 	ldw	r2,0(r2)
  8211a8:	100b883a 	mov	r5,r2
  8211ac:	1809883a 	mov	r4,r3
  8211b0:	08301e80 	call	8301e8 <__mulsi3>
  8211b4:	e0bfd415 	stw	r2,-176(fp)
  8211b8:	e0bfc917 	ldw	r2,-220(fp)
  8211bc:	10800c04 	addi	r2,r2,48
  8211c0:	1080000b 	ldhu	r2,0(r2)
  8211c4:	10ffffcc 	andi	r3,r2,65535
  8211c8:	18e0001c 	xori	r3,r3,32768
  8211cc:	18e00004 	addi	r3,r3,-32768
  8211d0:	e0bfca17 	ldw	r2,-216(fp)
  8211d4:	10801804 	addi	r2,r2,96
  8211d8:	10800017 	ldw	r2,0(r2)
  8211dc:	100b883a 	mov	r5,r2
  8211e0:	1809883a 	mov	r4,r3
  8211e4:	08301e80 	call	8301e8 <__mulsi3>
  8211e8:	e0bfd515 	stw	r2,-172(fp)
  8211ec:	e0bfc917 	ldw	r2,-220(fp)
  8211f0:	10801404 	addi	r2,r2,80
  8211f4:	1080000b 	ldhu	r2,0(r2)
  8211f8:	10ffffcc 	andi	r3,r2,65535
  8211fc:	18e0001c 	xori	r3,r3,32768
  821200:	18e00004 	addi	r3,r3,-32768
  821204:	e0bfca17 	ldw	r2,-216(fp)
  821208:	10802804 	addi	r2,r2,160
  82120c:	10800017 	ldw	r2,0(r2)
  821210:	100b883a 	mov	r5,r2
  821214:	1809883a 	mov	r4,r3
  821218:	08301e80 	call	8301e8 <__mulsi3>
  82121c:	e0bfd615 	stw	r2,-168(fp)
  821220:	e0ffd417 	ldw	r3,-176(fp)
  821224:	e0bfd617 	ldw	r2,-168(fp)
  821228:	1885883a 	add	r2,r3,r2
  82122c:	0142ed84 	movi	r5,2998
  821230:	1009883a 	mov	r4,r2
  821234:	08301e80 	call	8301e8 <__mulsi3>
  821238:	e0bfd115 	stw	r2,-188(fp)
  82123c:	e0ffd417 	ldw	r3,-176(fp)
  821240:	e0bfd517 	ldw	r2,-172(fp)
  821244:	1885883a 	add	r2,r3,r2
  821248:	1006937a 	slli	r3,r2,13
  82124c:	e0bfd117 	ldw	r2,-188(fp)
  821250:	1885883a 	add	r2,r3,r2
  821254:	e0bfce15 	stw	r2,-200(fp)
  821258:	e0ffd617 	ldw	r3,-168(fp)
  82125c:	e0bfd517 	ldw	r2,-172(fp)
  821260:	1885c83a 	sub	r2,r3,r2
  821264:	1006937a 	slli	r3,r2,13
  821268:	e0bfd117 	ldw	r2,-188(fp)
  82126c:	1885883a 	add	r2,r3,r2
  821270:	e0bfcf15 	stw	r2,-196(fp)
  821274:	e0ffd417 	ldw	r3,-176(fp)
  821278:	e0bfd517 	ldw	r2,-172(fp)
  82127c:	1887c83a 	sub	r3,r3,r2
  821280:	e0bfd617 	ldw	r2,-168(fp)
  821284:	1885c83a 	sub	r2,r3,r2
  821288:	1085883a 	add	r2,r2,r2
  82128c:	1085883a 	add	r2,r2,r2
  821290:	e0bfd115 	stw	r2,-188(fp)
  821294:	e0ffd017 	ldw	r3,-192(fp)
  821298:	e0bfce17 	ldw	r2,-200(fp)
  82129c:	1885883a 	add	r2,r3,r2
  8212a0:	1007d2fa 	srai	r3,r2,11
  8212a4:	e0bfcb17 	ldw	r2,-212(fp)
  8212a8:	10c00015 	stw	r3,0(r2)
  8212ac:	e0bfcb17 	ldw	r2,-212(fp)
  8212b0:	10801e04 	addi	r2,r2,120
  8212b4:	e13fd017 	ldw	r4,-192(fp)
  8212b8:	e0ffce17 	ldw	r3,-200(fp)
  8212bc:	20c7c83a 	sub	r3,r4,r3
  8212c0:	1807d2fa 	srai	r3,r3,11
  8212c4:	10c00015 	stw	r3,0(r2)
  8212c8:	e0bfcb17 	ldw	r2,-212(fp)
  8212cc:	10800604 	addi	r2,r2,24
  8212d0:	e13fd217 	ldw	r4,-184(fp)
  8212d4:	e0ffd117 	ldw	r3,-188(fp)
  8212d8:	20c7883a 	add	r3,r4,r3
  8212dc:	10c00015 	stw	r3,0(r2)
  8212e0:	e0bfcb17 	ldw	r2,-212(fp)
  8212e4:	10801804 	addi	r2,r2,96
  8212e8:	e13fd217 	ldw	r4,-184(fp)
  8212ec:	e0ffd117 	ldw	r3,-188(fp)
  8212f0:	20c7c83a 	sub	r3,r4,r3
  8212f4:	10c00015 	stw	r3,0(r2)
  8212f8:	e0bfcb17 	ldw	r2,-212(fp)
  8212fc:	10800c04 	addi	r2,r2,48
  821300:	e13fd317 	ldw	r4,-180(fp)
  821304:	e0ffcf17 	ldw	r3,-196(fp)
  821308:	20c7883a 	add	r3,r4,r3
  82130c:	1807d2fa 	srai	r3,r3,11
  821310:	10c00015 	stw	r3,0(r2)
  821314:	e0bfcb17 	ldw	r2,-212(fp)
  821318:	10801204 	addi	r2,r2,72
  82131c:	e13fd317 	ldw	r4,-180(fp)
  821320:	e0ffcf17 	ldw	r3,-196(fp)
  821324:	20c7c83a 	sub	r3,r4,r3
  821328:	1807d2fa 	srai	r3,r3,11
  82132c:	10c00015 	stw	r3,0(r2)
  821330:	e0bfcc17 	ldw	r2,-208(fp)
  821334:	10800044 	addi	r2,r2,1
  821338:	e0bfcc15 	stw	r2,-208(fp)
  82133c:	e0bfc917 	ldw	r2,-220(fp)
  821340:	10800084 	addi	r2,r2,2
  821344:	e0bfc915 	stw	r2,-220(fp)
  821348:	e0bfca17 	ldw	r2,-216(fp)
  82134c:	10800104 	addi	r2,r2,4
  821350:	e0bfca15 	stw	r2,-216(fp)
  821354:	e0bfcb17 	ldw	r2,-212(fp)
  821358:	10800104 	addi	r2,r2,4
  82135c:	e0bfcb15 	stw	r2,-212(fp)
  821360:	e0bfcc17 	ldw	r2,-208(fp)
  821364:	10800190 	cmplti	r2,r2,6
  821368:	103f401e 	bne	r2,zero,82106c <__alt_mem_epcs_flash_controller_0+0xff81806c>
  82136c:	e0bfd804 	addi	r2,fp,-160
  821370:	e0bfcb15 	stw	r2,-212(fp)
  821374:	e03fcc15 	stw	zero,-208(fp)
  821378:	0000a206 	br	821604 <jpeg_idct_6x6+0x5ec>
  82137c:	e0bfcc17 	ldw	r2,-208(fp)
  821380:	1085883a 	add	r2,r2,r2
  821384:	1085883a 	add	r2,r2,r2
  821388:	1007883a 	mov	r3,r2
  82138c:	e0bfff17 	ldw	r2,-4(fp)
  821390:	10c5883a 	add	r2,r2,r3
  821394:	10c00017 	ldw	r3,0(r2)
  821398:	e0800217 	ldw	r2,8(fp)
  82139c:	1885883a 	add	r2,r3,r2
  8213a0:	e0bfd715 	stw	r2,-164(fp)
  8213a4:	e0bfcb17 	ldw	r2,-212(fp)
  8213a8:	10800017 	ldw	r2,0(r2)
  8213ac:	10900404 	addi	r2,r2,16400
  8213b0:	e0bfce15 	stw	r2,-200(fp)
  8213b4:	e0bfce17 	ldw	r2,-200(fp)
  8213b8:	1004937a 	slli	r2,r2,13
  8213bc:	e0bfce15 	stw	r2,-200(fp)
  8213c0:	e0bfcb17 	ldw	r2,-212(fp)
  8213c4:	10800404 	addi	r2,r2,16
  8213c8:	10800017 	ldw	r2,0(r2)
  8213cc:	e0bfcf15 	stw	r2,-196(fp)
  8213d0:	0145a844 	movi	r5,5793
  8213d4:	e13fcf17 	ldw	r4,-196(fp)
  8213d8:	08301e80 	call	8301e8 <__mulsi3>
  8213dc:	e0bfd015 	stw	r2,-192(fp)
  8213e0:	e0ffce17 	ldw	r3,-200(fp)
  8213e4:	e0bfd017 	ldw	r2,-192(fp)
  8213e8:	1885883a 	add	r2,r3,r2
  8213ec:	e0bfd115 	stw	r2,-188(fp)
  8213f0:	e0ffce17 	ldw	r3,-200(fp)
  8213f4:	e0bfd017 	ldw	r2,-192(fp)
  8213f8:	1887c83a 	sub	r3,r3,r2
  8213fc:	e0bfd017 	ldw	r2,-192(fp)
  821400:	1885c83a 	sub	r2,r3,r2
  821404:	e0bfd215 	stw	r2,-184(fp)
  821408:	e0bfcb17 	ldw	r2,-212(fp)
  82140c:	10800204 	addi	r2,r2,8
  821410:	10800017 	ldw	r2,0(r2)
  821414:	e0bfd015 	stw	r2,-192(fp)
  821418:	0149cc44 	movi	r5,10033
  82141c:	e13fd017 	ldw	r4,-192(fp)
  821420:	08301e80 	call	8301e8 <__mulsi3>
  821424:	e0bfce15 	stw	r2,-200(fp)
  821428:	e0ffd117 	ldw	r3,-188(fp)
  82142c:	e0bfce17 	ldw	r2,-200(fp)
  821430:	1885883a 	add	r2,r3,r2
  821434:	e0bfd015 	stw	r2,-192(fp)
  821438:	e0ffd117 	ldw	r3,-188(fp)
  82143c:	e0bfce17 	ldw	r2,-200(fp)
  821440:	1885c83a 	sub	r2,r3,r2
  821444:	e0bfd315 	stw	r2,-180(fp)
  821448:	e0bfcb17 	ldw	r2,-212(fp)
  82144c:	10800104 	addi	r2,r2,4
  821450:	10800017 	ldw	r2,0(r2)
  821454:	e0bfd415 	stw	r2,-176(fp)
  821458:	e0bfcb17 	ldw	r2,-212(fp)
  82145c:	10800304 	addi	r2,r2,12
  821460:	10800017 	ldw	r2,0(r2)
  821464:	e0bfd515 	stw	r2,-172(fp)
  821468:	e0bfcb17 	ldw	r2,-212(fp)
  82146c:	10800504 	addi	r2,r2,20
  821470:	10800017 	ldw	r2,0(r2)
  821474:	e0bfd615 	stw	r2,-168(fp)
  821478:	e0ffd417 	ldw	r3,-176(fp)
  82147c:	e0bfd617 	ldw	r2,-168(fp)
  821480:	1885883a 	add	r2,r3,r2
  821484:	0142ed84 	movi	r5,2998
  821488:	1009883a 	mov	r4,r2
  82148c:	08301e80 	call	8301e8 <__mulsi3>
  821490:	e0bfd115 	stw	r2,-188(fp)
  821494:	e0ffd417 	ldw	r3,-176(fp)
  821498:	e0bfd517 	ldw	r2,-172(fp)
  82149c:	1885883a 	add	r2,r3,r2
  8214a0:	1006937a 	slli	r3,r2,13
  8214a4:	e0bfd117 	ldw	r2,-188(fp)
  8214a8:	1885883a 	add	r2,r3,r2
  8214ac:	e0bfce15 	stw	r2,-200(fp)
  8214b0:	e0ffd617 	ldw	r3,-168(fp)
  8214b4:	e0bfd517 	ldw	r2,-172(fp)
  8214b8:	1885c83a 	sub	r2,r3,r2
  8214bc:	1006937a 	slli	r3,r2,13
  8214c0:	e0bfd117 	ldw	r2,-188(fp)
  8214c4:	1885883a 	add	r2,r3,r2
  8214c8:	e0bfcf15 	stw	r2,-196(fp)
  8214cc:	e0ffd417 	ldw	r3,-176(fp)
  8214d0:	e0bfd517 	ldw	r2,-172(fp)
  8214d4:	1887c83a 	sub	r3,r3,r2
  8214d8:	e0bfd617 	ldw	r2,-168(fp)
  8214dc:	1885c83a 	sub	r2,r3,r2
  8214e0:	1004937a 	slli	r2,r2,13
  8214e4:	e0bfd115 	stw	r2,-188(fp)
  8214e8:	e0ffd017 	ldw	r3,-192(fp)
  8214ec:	e0bfce17 	ldw	r2,-200(fp)
  8214f0:	1885883a 	add	r2,r3,r2
  8214f4:	1005d4ba 	srai	r2,r2,18
  8214f8:	1080ffcc 	andi	r2,r2,1023
  8214fc:	e0ffcd17 	ldw	r3,-204(fp)
  821500:	1885883a 	add	r2,r3,r2
  821504:	10c00003 	ldbu	r3,0(r2)
  821508:	e0bfd717 	ldw	r2,-164(fp)
  82150c:	10c00005 	stb	r3,0(r2)
  821510:	e0bfd717 	ldw	r2,-164(fp)
  821514:	10800144 	addi	r2,r2,5
  821518:	e13fd017 	ldw	r4,-192(fp)
  82151c:	e0ffce17 	ldw	r3,-200(fp)
  821520:	20c7c83a 	sub	r3,r4,r3
  821524:	1807d4ba 	srai	r3,r3,18
  821528:	18c0ffcc 	andi	r3,r3,1023
  82152c:	e13fcd17 	ldw	r4,-204(fp)
  821530:	20c7883a 	add	r3,r4,r3
  821534:	18c00003 	ldbu	r3,0(r3)
  821538:	10c00005 	stb	r3,0(r2)
  82153c:	e0bfd717 	ldw	r2,-164(fp)
  821540:	10800044 	addi	r2,r2,1
  821544:	e13fd217 	ldw	r4,-184(fp)
  821548:	e0ffd117 	ldw	r3,-188(fp)
  82154c:	20c7883a 	add	r3,r4,r3
  821550:	1807d4ba 	srai	r3,r3,18
  821554:	18c0ffcc 	andi	r3,r3,1023
  821558:	e13fcd17 	ldw	r4,-204(fp)
  82155c:	20c7883a 	add	r3,r4,r3
  821560:	18c00003 	ldbu	r3,0(r3)
  821564:	10c00005 	stb	r3,0(r2)
  821568:	e0bfd717 	ldw	r2,-164(fp)
  82156c:	10800104 	addi	r2,r2,4
  821570:	e13fd217 	ldw	r4,-184(fp)
  821574:	e0ffd117 	ldw	r3,-188(fp)
  821578:	20c7c83a 	sub	r3,r4,r3
  82157c:	1807d4ba 	srai	r3,r3,18
  821580:	18c0ffcc 	andi	r3,r3,1023
  821584:	e13fcd17 	ldw	r4,-204(fp)
  821588:	20c7883a 	add	r3,r4,r3
  82158c:	18c00003 	ldbu	r3,0(r3)
  821590:	10c00005 	stb	r3,0(r2)
  821594:	e0bfd717 	ldw	r2,-164(fp)
  821598:	10800084 	addi	r2,r2,2
  82159c:	e13fd317 	ldw	r4,-180(fp)
  8215a0:	e0ffcf17 	ldw	r3,-196(fp)
  8215a4:	20c7883a 	add	r3,r4,r3
  8215a8:	1807d4ba 	srai	r3,r3,18
  8215ac:	18c0ffcc 	andi	r3,r3,1023
  8215b0:	e13fcd17 	ldw	r4,-204(fp)
  8215b4:	20c7883a 	add	r3,r4,r3
  8215b8:	18c00003 	ldbu	r3,0(r3)
  8215bc:	10c00005 	stb	r3,0(r2)
  8215c0:	e0bfd717 	ldw	r2,-164(fp)
  8215c4:	108000c4 	addi	r2,r2,3
  8215c8:	e13fd317 	ldw	r4,-180(fp)
  8215cc:	e0ffcf17 	ldw	r3,-196(fp)
  8215d0:	20c7c83a 	sub	r3,r4,r3
  8215d4:	1807d4ba 	srai	r3,r3,18
  8215d8:	18c0ffcc 	andi	r3,r3,1023
  8215dc:	e13fcd17 	ldw	r4,-204(fp)
  8215e0:	20c7883a 	add	r3,r4,r3
  8215e4:	18c00003 	ldbu	r3,0(r3)
  8215e8:	10c00005 	stb	r3,0(r2)
  8215ec:	e0bfcb17 	ldw	r2,-212(fp)
  8215f0:	10800604 	addi	r2,r2,24
  8215f4:	e0bfcb15 	stw	r2,-212(fp)
  8215f8:	e0bfcc17 	ldw	r2,-208(fp)
  8215fc:	10800044 	addi	r2,r2,1
  821600:	e0bfcc15 	stw	r2,-208(fp)
  821604:	e0bfcc17 	ldw	r2,-208(fp)
  821608:	10800190 	cmplti	r2,r2,6
  82160c:	103f5b1e 	bne	r2,zero,82137c <__alt_mem_epcs_flash_controller_0+0xff81837c>
  821610:	0001883a 	nop
  821614:	e037883a 	mov	sp,fp
  821618:	dfc00117 	ldw	ra,4(sp)
  82161c:	df000017 	ldw	fp,0(sp)
  821620:	dec00204 	addi	sp,sp,8
  821624:	f800283a 	ret

00821628 <jpeg_idct_5x5>:
  821628:	deffd304 	addi	sp,sp,-180
  82162c:	dfc02c15 	stw	ra,176(sp)
  821630:	df002b15 	stw	fp,172(sp)
  821634:	df002b04 	addi	fp,sp,172
  821638:	e13ffc15 	stw	r4,-16(fp)
  82163c:	e17ffd15 	stw	r5,-12(fp)
  821640:	e1bffe15 	stw	r6,-8(fp)
  821644:	e1ffff15 	stw	r7,-4(fp)
  821648:	e0bffc17 	ldw	r2,-16(fp)
  82164c:	10805417 	ldw	r2,336(r2)
  821650:	10bfa004 	addi	r2,r2,-384
  821654:	e0bfd915 	stw	r2,-156(fp)
  821658:	e0bffe17 	ldw	r2,-8(fp)
  82165c:	e0bfd515 	stw	r2,-172(fp)
  821660:	e0bffd17 	ldw	r2,-12(fp)
  821664:	10801517 	ldw	r2,84(r2)
  821668:	e0bfd615 	stw	r2,-168(fp)
  82166c:	e0bfe304 	addi	r2,fp,-116
  821670:	e0bfd715 	stw	r2,-164(fp)
  821674:	e03fd815 	stw	zero,-160(fp)
  821678:	0000a706 	br	821918 <jpeg_idct_5x5+0x2f0>
  82167c:	e0bfd517 	ldw	r2,-172(fp)
  821680:	1080000b 	ldhu	r2,0(r2)
  821684:	10ffffcc 	andi	r3,r2,65535
  821688:	18e0001c 	xori	r3,r3,32768
  82168c:	18e00004 	addi	r3,r3,-32768
  821690:	e0bfd617 	ldw	r2,-168(fp)
  821694:	10800017 	ldw	r2,0(r2)
  821698:	100b883a 	mov	r5,r2
  82169c:	1809883a 	mov	r4,r3
  8216a0:	08301e80 	call	8301e8 <__mulsi3>
  8216a4:	e0bfda15 	stw	r2,-152(fp)
  8216a8:	e0bfda17 	ldw	r2,-152(fp)
  8216ac:	1004937a 	slli	r2,r2,13
  8216b0:	e0bfda15 	stw	r2,-152(fp)
  8216b4:	e0bfda17 	ldw	r2,-152(fp)
  8216b8:	10810004 	addi	r2,r2,1024
  8216bc:	e0bfda15 	stw	r2,-152(fp)
  8216c0:	e0bfd517 	ldw	r2,-172(fp)
  8216c4:	10800804 	addi	r2,r2,32
  8216c8:	1080000b 	ldhu	r2,0(r2)
  8216cc:	10ffffcc 	andi	r3,r2,65535
  8216d0:	18e0001c 	xori	r3,r3,32768
  8216d4:	18e00004 	addi	r3,r3,-32768
  8216d8:	e0bfd617 	ldw	r2,-168(fp)
  8216dc:	10801004 	addi	r2,r2,64
  8216e0:	10800017 	ldw	r2,0(r2)
  8216e4:	100b883a 	mov	r5,r2
  8216e8:	1809883a 	mov	r4,r3
  8216ec:	08301e80 	call	8301e8 <__mulsi3>
  8216f0:	e0bfdb15 	stw	r2,-148(fp)
  8216f4:	e0bfd517 	ldw	r2,-172(fp)
  8216f8:	10801004 	addi	r2,r2,64
  8216fc:	1080000b 	ldhu	r2,0(r2)
  821700:	10ffffcc 	andi	r3,r2,65535
  821704:	18e0001c 	xori	r3,r3,32768
  821708:	18e00004 	addi	r3,r3,-32768
  82170c:	e0bfd617 	ldw	r2,-168(fp)
  821710:	10802004 	addi	r2,r2,128
  821714:	10800017 	ldw	r2,0(r2)
  821718:	100b883a 	mov	r5,r2
  82171c:	1809883a 	mov	r4,r3
  821720:	08301e80 	call	8301e8 <__mulsi3>
  821724:	e0bfdc15 	stw	r2,-144(fp)
  821728:	e0ffdb17 	ldw	r3,-148(fp)
  82172c:	e0bfdc17 	ldw	r2,-144(fp)
  821730:	1885883a 	add	r2,r3,r2
  821734:	01465304 	movi	r5,6476
  821738:	1009883a 	mov	r4,r2
  82173c:	08301e80 	call	8301e8 <__mulsi3>
  821740:	e0bfdd15 	stw	r2,-140(fp)
  821744:	e0ffdb17 	ldw	r3,-148(fp)
  821748:	e0bfdc17 	ldw	r2,-144(fp)
  82174c:	1885c83a 	sub	r2,r3,r2
  821750:	0142d404 	movi	r5,2896
  821754:	1009883a 	mov	r4,r2
  821758:	08301e80 	call	8301e8 <__mulsi3>
  82175c:	e0bfde15 	stw	r2,-136(fp)
  821760:	e0ffda17 	ldw	r3,-152(fp)
  821764:	e0bfde17 	ldw	r2,-136(fp)
  821768:	1885883a 	add	r2,r3,r2
  82176c:	e0bfdf15 	stw	r2,-132(fp)
  821770:	e0ffdf17 	ldw	r3,-132(fp)
  821774:	e0bfdd17 	ldw	r2,-140(fp)
  821778:	1885883a 	add	r2,r3,r2
  82177c:	e0bfe015 	stw	r2,-128(fp)
  821780:	e0ffdf17 	ldw	r3,-132(fp)
  821784:	e0bfdd17 	ldw	r2,-140(fp)
  821788:	1885c83a 	sub	r2,r3,r2
  82178c:	e0bfe115 	stw	r2,-124(fp)
  821790:	e0bfde17 	ldw	r2,-136(fp)
  821794:	1085883a 	add	r2,r2,r2
  821798:	1085883a 	add	r2,r2,r2
  82179c:	1007883a 	mov	r3,r2
  8217a0:	e0bfda17 	ldw	r2,-152(fp)
  8217a4:	10c5c83a 	sub	r2,r2,r3
  8217a8:	e0bfda15 	stw	r2,-152(fp)
  8217ac:	e0bfd517 	ldw	r2,-172(fp)
  8217b0:	10800404 	addi	r2,r2,16
  8217b4:	1080000b 	ldhu	r2,0(r2)
  8217b8:	10ffffcc 	andi	r3,r2,65535
  8217bc:	18e0001c 	xori	r3,r3,32768
  8217c0:	18e00004 	addi	r3,r3,-32768
  8217c4:	e0bfd617 	ldw	r2,-168(fp)
  8217c8:	10800804 	addi	r2,r2,32
  8217cc:	10800017 	ldw	r2,0(r2)
  8217d0:	100b883a 	mov	r5,r2
  8217d4:	1809883a 	mov	r4,r3
  8217d8:	08301e80 	call	8301e8 <__mulsi3>
  8217dc:	e0bfde15 	stw	r2,-136(fp)
  8217e0:	e0bfd517 	ldw	r2,-172(fp)
  8217e4:	10800c04 	addi	r2,r2,48
  8217e8:	1080000b 	ldhu	r2,0(r2)
  8217ec:	10ffffcc 	andi	r3,r2,65535
  8217f0:	18e0001c 	xori	r3,r3,32768
  8217f4:	18e00004 	addi	r3,r3,-32768
  8217f8:	e0bfd617 	ldw	r2,-168(fp)
  8217fc:	10801804 	addi	r2,r2,96
  821800:	10800017 	ldw	r2,0(r2)
  821804:	100b883a 	mov	r5,r2
  821808:	1809883a 	mov	r4,r3
  82180c:	08301e80 	call	8301e8 <__mulsi3>
  821810:	e0bfdf15 	stw	r2,-132(fp)
  821814:	e0ffde17 	ldw	r3,-136(fp)
  821818:	e0bfdf17 	ldw	r2,-132(fp)
  82181c:	1885883a 	add	r2,r3,r2
  821820:	0146a684 	movi	r5,6810
  821824:	1009883a 	mov	r4,r2
  821828:	08301e80 	call	8301e8 <__mulsi3>
  82182c:	e0bfdd15 	stw	r2,-140(fp)
  821830:	01441c44 	movi	r5,4209
  821834:	e13fde17 	ldw	r4,-136(fp)
  821838:	08301e80 	call	8301e8 <__mulsi3>
  82183c:	1007883a 	mov	r3,r2
  821840:	e0bfdd17 	ldw	r2,-140(fp)
  821844:	1885883a 	add	r2,r3,r2
  821848:	e0bfdb15 	stw	r2,-148(fp)
  82184c:	016e9704 	movi	r5,-17828
  821850:	e13fdf17 	ldw	r4,-132(fp)
  821854:	08301e80 	call	8301e8 <__mulsi3>
  821858:	1007883a 	mov	r3,r2
  82185c:	e0bfdd17 	ldw	r2,-140(fp)
  821860:	1885883a 	add	r2,r3,r2
  821864:	e0bfdc15 	stw	r2,-144(fp)
  821868:	e0ffe017 	ldw	r3,-128(fp)
  82186c:	e0bfdb17 	ldw	r2,-148(fp)
  821870:	1885883a 	add	r2,r3,r2
  821874:	1007d2fa 	srai	r3,r2,11
  821878:	e0bfd717 	ldw	r2,-164(fp)
  82187c:	10c00015 	stw	r3,0(r2)
  821880:	e0bfd717 	ldw	r2,-164(fp)
  821884:	10801404 	addi	r2,r2,80
  821888:	e13fe017 	ldw	r4,-128(fp)
  82188c:	e0ffdb17 	ldw	r3,-148(fp)
  821890:	20c7c83a 	sub	r3,r4,r3
  821894:	1807d2fa 	srai	r3,r3,11
  821898:	10c00015 	stw	r3,0(r2)
  82189c:	e0bfd717 	ldw	r2,-164(fp)
  8218a0:	10800504 	addi	r2,r2,20
  8218a4:	e13fe117 	ldw	r4,-124(fp)
  8218a8:	e0ffdc17 	ldw	r3,-144(fp)
  8218ac:	20c7883a 	add	r3,r4,r3
  8218b0:	1807d2fa 	srai	r3,r3,11
  8218b4:	10c00015 	stw	r3,0(r2)
  8218b8:	e0bfd717 	ldw	r2,-164(fp)
  8218bc:	10800f04 	addi	r2,r2,60
  8218c0:	e13fe117 	ldw	r4,-124(fp)
  8218c4:	e0ffdc17 	ldw	r3,-144(fp)
  8218c8:	20c7c83a 	sub	r3,r4,r3
  8218cc:	1807d2fa 	srai	r3,r3,11
  8218d0:	10c00015 	stw	r3,0(r2)
  8218d4:	e0bfd717 	ldw	r2,-164(fp)
  8218d8:	10800a04 	addi	r2,r2,40
  8218dc:	e0ffda17 	ldw	r3,-152(fp)
  8218e0:	1807d2fa 	srai	r3,r3,11
  8218e4:	10c00015 	stw	r3,0(r2)
  8218e8:	e0bfd817 	ldw	r2,-160(fp)
  8218ec:	10800044 	addi	r2,r2,1
  8218f0:	e0bfd815 	stw	r2,-160(fp)
  8218f4:	e0bfd517 	ldw	r2,-172(fp)
  8218f8:	10800084 	addi	r2,r2,2
  8218fc:	e0bfd515 	stw	r2,-172(fp)
  821900:	e0bfd617 	ldw	r2,-168(fp)
  821904:	10800104 	addi	r2,r2,4
  821908:	e0bfd615 	stw	r2,-168(fp)
  82190c:	e0bfd717 	ldw	r2,-164(fp)
  821910:	10800104 	addi	r2,r2,4
  821914:	e0bfd715 	stw	r2,-164(fp)
  821918:	e0bfd817 	ldw	r2,-160(fp)
  82191c:	10800150 	cmplti	r2,r2,5
  821920:	103f561e 	bne	r2,zero,82167c <__alt_mem_epcs_flash_controller_0+0xff81867c>
  821924:	e0bfe304 	addi	r2,fp,-116
  821928:	e0bfd715 	stw	r2,-164(fp)
  82192c:	e03fd815 	stw	zero,-160(fp)
  821930:	00009106 	br	821b78 <jpeg_idct_5x5+0x550>
  821934:	e0bfd817 	ldw	r2,-160(fp)
  821938:	1085883a 	add	r2,r2,r2
  82193c:	1085883a 	add	r2,r2,r2
  821940:	1007883a 	mov	r3,r2
  821944:	e0bfff17 	ldw	r2,-4(fp)
  821948:	10c5883a 	add	r2,r2,r3
  82194c:	10c00017 	ldw	r3,0(r2)
  821950:	e0800217 	ldw	r2,8(fp)
  821954:	1885883a 	add	r2,r3,r2
  821958:	e0bfe215 	stw	r2,-120(fp)
  82195c:	e0bfd717 	ldw	r2,-164(fp)
  821960:	10800017 	ldw	r2,0(r2)
  821964:	10900404 	addi	r2,r2,16400
  821968:	e0bfda15 	stw	r2,-152(fp)
  82196c:	e0bfda17 	ldw	r2,-152(fp)
  821970:	1004937a 	slli	r2,r2,13
  821974:	e0bfda15 	stw	r2,-152(fp)
  821978:	e0bfd717 	ldw	r2,-164(fp)
  82197c:	10800204 	addi	r2,r2,8
  821980:	10800017 	ldw	r2,0(r2)
  821984:	e0bfdb15 	stw	r2,-148(fp)
  821988:	e0bfd717 	ldw	r2,-164(fp)
  82198c:	10800404 	addi	r2,r2,16
  821990:	10800017 	ldw	r2,0(r2)
  821994:	e0bfdc15 	stw	r2,-144(fp)
  821998:	e0ffdb17 	ldw	r3,-148(fp)
  82199c:	e0bfdc17 	ldw	r2,-144(fp)
  8219a0:	1885883a 	add	r2,r3,r2
  8219a4:	01465304 	movi	r5,6476
  8219a8:	1009883a 	mov	r4,r2
  8219ac:	08301e80 	call	8301e8 <__mulsi3>
  8219b0:	e0bfdd15 	stw	r2,-140(fp)
  8219b4:	e0ffdb17 	ldw	r3,-148(fp)
  8219b8:	e0bfdc17 	ldw	r2,-144(fp)
  8219bc:	1885c83a 	sub	r2,r3,r2
  8219c0:	0142d404 	movi	r5,2896
  8219c4:	1009883a 	mov	r4,r2
  8219c8:	08301e80 	call	8301e8 <__mulsi3>
  8219cc:	e0bfde15 	stw	r2,-136(fp)
  8219d0:	e0ffda17 	ldw	r3,-152(fp)
  8219d4:	e0bfde17 	ldw	r2,-136(fp)
  8219d8:	1885883a 	add	r2,r3,r2
  8219dc:	e0bfdf15 	stw	r2,-132(fp)
  8219e0:	e0ffdf17 	ldw	r3,-132(fp)
  8219e4:	e0bfdd17 	ldw	r2,-140(fp)
  8219e8:	1885883a 	add	r2,r3,r2
  8219ec:	e0bfe015 	stw	r2,-128(fp)
  8219f0:	e0ffdf17 	ldw	r3,-132(fp)
  8219f4:	e0bfdd17 	ldw	r2,-140(fp)
  8219f8:	1885c83a 	sub	r2,r3,r2
  8219fc:	e0bfe115 	stw	r2,-124(fp)
  821a00:	e0bfde17 	ldw	r2,-136(fp)
  821a04:	1085883a 	add	r2,r2,r2
  821a08:	1085883a 	add	r2,r2,r2
  821a0c:	1007883a 	mov	r3,r2
  821a10:	e0bfda17 	ldw	r2,-152(fp)
  821a14:	10c5c83a 	sub	r2,r2,r3
  821a18:	e0bfda15 	stw	r2,-152(fp)
  821a1c:	e0bfd717 	ldw	r2,-164(fp)
  821a20:	10800104 	addi	r2,r2,4
  821a24:	10800017 	ldw	r2,0(r2)
  821a28:	e0bfde15 	stw	r2,-136(fp)
  821a2c:	e0bfd717 	ldw	r2,-164(fp)
  821a30:	10800304 	addi	r2,r2,12
  821a34:	10800017 	ldw	r2,0(r2)
  821a38:	e0bfdf15 	stw	r2,-132(fp)
  821a3c:	e0ffde17 	ldw	r3,-136(fp)
  821a40:	e0bfdf17 	ldw	r2,-132(fp)
  821a44:	1885883a 	add	r2,r3,r2
  821a48:	0146a684 	movi	r5,6810
  821a4c:	1009883a 	mov	r4,r2
  821a50:	08301e80 	call	8301e8 <__mulsi3>
  821a54:	e0bfdd15 	stw	r2,-140(fp)
  821a58:	01441c44 	movi	r5,4209
  821a5c:	e13fde17 	ldw	r4,-136(fp)
  821a60:	08301e80 	call	8301e8 <__mulsi3>
  821a64:	1007883a 	mov	r3,r2
  821a68:	e0bfdd17 	ldw	r2,-140(fp)
  821a6c:	1885883a 	add	r2,r3,r2
  821a70:	e0bfdb15 	stw	r2,-148(fp)
  821a74:	016e9704 	movi	r5,-17828
  821a78:	e13fdf17 	ldw	r4,-132(fp)
  821a7c:	08301e80 	call	8301e8 <__mulsi3>
  821a80:	1007883a 	mov	r3,r2
  821a84:	e0bfdd17 	ldw	r2,-140(fp)
  821a88:	1885883a 	add	r2,r3,r2
  821a8c:	e0bfdc15 	stw	r2,-144(fp)
  821a90:	e0ffe017 	ldw	r3,-128(fp)
  821a94:	e0bfdb17 	ldw	r2,-148(fp)
  821a98:	1885883a 	add	r2,r3,r2
  821a9c:	1005d4ba 	srai	r2,r2,18
  821aa0:	1080ffcc 	andi	r2,r2,1023
  821aa4:	e0ffd917 	ldw	r3,-156(fp)
  821aa8:	1885883a 	add	r2,r3,r2
  821aac:	10c00003 	ldbu	r3,0(r2)
  821ab0:	e0bfe217 	ldw	r2,-120(fp)
  821ab4:	10c00005 	stb	r3,0(r2)
  821ab8:	e0bfe217 	ldw	r2,-120(fp)
  821abc:	10800104 	addi	r2,r2,4
  821ac0:	e13fe017 	ldw	r4,-128(fp)
  821ac4:	e0ffdb17 	ldw	r3,-148(fp)
  821ac8:	20c7c83a 	sub	r3,r4,r3
  821acc:	1807d4ba 	srai	r3,r3,18
  821ad0:	18c0ffcc 	andi	r3,r3,1023
  821ad4:	e13fd917 	ldw	r4,-156(fp)
  821ad8:	20c7883a 	add	r3,r4,r3
  821adc:	18c00003 	ldbu	r3,0(r3)
  821ae0:	10c00005 	stb	r3,0(r2)
  821ae4:	e0bfe217 	ldw	r2,-120(fp)
  821ae8:	10800044 	addi	r2,r2,1
  821aec:	e13fe117 	ldw	r4,-124(fp)
  821af0:	e0ffdc17 	ldw	r3,-144(fp)
  821af4:	20c7883a 	add	r3,r4,r3
  821af8:	1807d4ba 	srai	r3,r3,18
  821afc:	18c0ffcc 	andi	r3,r3,1023
  821b00:	e13fd917 	ldw	r4,-156(fp)
  821b04:	20c7883a 	add	r3,r4,r3
  821b08:	18c00003 	ldbu	r3,0(r3)
  821b0c:	10c00005 	stb	r3,0(r2)
  821b10:	e0bfe217 	ldw	r2,-120(fp)
  821b14:	108000c4 	addi	r2,r2,3
  821b18:	e13fe117 	ldw	r4,-124(fp)
  821b1c:	e0ffdc17 	ldw	r3,-144(fp)
  821b20:	20c7c83a 	sub	r3,r4,r3
  821b24:	1807d4ba 	srai	r3,r3,18
  821b28:	18c0ffcc 	andi	r3,r3,1023
  821b2c:	e13fd917 	ldw	r4,-156(fp)
  821b30:	20c7883a 	add	r3,r4,r3
  821b34:	18c00003 	ldbu	r3,0(r3)
  821b38:	10c00005 	stb	r3,0(r2)
  821b3c:	e0bfe217 	ldw	r2,-120(fp)
  821b40:	10800084 	addi	r2,r2,2
  821b44:	e0ffda17 	ldw	r3,-152(fp)
  821b48:	1807d4ba 	srai	r3,r3,18
  821b4c:	18c0ffcc 	andi	r3,r3,1023
  821b50:	e13fd917 	ldw	r4,-156(fp)
  821b54:	20c7883a 	add	r3,r4,r3
  821b58:	18c00003 	ldbu	r3,0(r3)
  821b5c:	10c00005 	stb	r3,0(r2)
  821b60:	e0bfd717 	ldw	r2,-164(fp)
  821b64:	10800504 	addi	r2,r2,20
  821b68:	e0bfd715 	stw	r2,-164(fp)
  821b6c:	e0bfd817 	ldw	r2,-160(fp)
  821b70:	10800044 	addi	r2,r2,1
  821b74:	e0bfd815 	stw	r2,-160(fp)
  821b78:	e0bfd817 	ldw	r2,-160(fp)
  821b7c:	10800150 	cmplti	r2,r2,5
  821b80:	103f6c1e 	bne	r2,zero,821934 <__alt_mem_epcs_flash_controller_0+0xff818934>
  821b84:	0001883a 	nop
  821b88:	e037883a 	mov	sp,fp
  821b8c:	dfc00117 	ldw	ra,4(sp)
  821b90:	df000017 	ldw	fp,0(sp)
  821b94:	dec00204 	addi	sp,sp,8
  821b98:	f800283a 	ret

00821b9c <jpeg_idct_4x4>:
  821b9c:	deffdd04 	addi	sp,sp,-140
  821ba0:	dfc02215 	stw	ra,136(sp)
  821ba4:	df002115 	stw	fp,132(sp)
  821ba8:	df002104 	addi	fp,sp,132
  821bac:	e13ffc15 	stw	r4,-16(fp)
  821bb0:	e17ffd15 	stw	r5,-12(fp)
  821bb4:	e1bffe15 	stw	r6,-8(fp)
  821bb8:	e1ffff15 	stw	r7,-4(fp)
  821bbc:	e0bffc17 	ldw	r2,-16(fp)
  821bc0:	10805417 	ldw	r2,336(r2)
  821bc4:	10bfa004 	addi	r2,r2,-384
  821bc8:	e0bfe315 	stw	r2,-116(fp)
  821bcc:	e0bffe17 	ldw	r2,-8(fp)
  821bd0:	e0bfdf15 	stw	r2,-132(fp)
  821bd4:	e0bffd17 	ldw	r2,-12(fp)
  821bd8:	10801517 	ldw	r2,84(r2)
  821bdc:	e0bfe015 	stw	r2,-128(fp)
  821be0:	e0bfec04 	addi	r2,fp,-80
  821be4:	e0bfe115 	stw	r2,-124(fp)
  821be8:	e03fe215 	stw	zero,-120(fp)
  821bec:	00007b06 	br	821ddc <jpeg_idct_4x4+0x240>
  821bf0:	e0bfdf17 	ldw	r2,-132(fp)
  821bf4:	1080000b 	ldhu	r2,0(r2)
  821bf8:	10ffffcc 	andi	r3,r2,65535
  821bfc:	18e0001c 	xori	r3,r3,32768
  821c00:	18e00004 	addi	r3,r3,-32768
  821c04:	e0bfe017 	ldw	r2,-128(fp)
  821c08:	10800017 	ldw	r2,0(r2)
  821c0c:	100b883a 	mov	r5,r2
  821c10:	1809883a 	mov	r4,r3
  821c14:	08301e80 	call	8301e8 <__mulsi3>
  821c18:	e0bfe415 	stw	r2,-112(fp)
  821c1c:	e0bfdf17 	ldw	r2,-132(fp)
  821c20:	10800804 	addi	r2,r2,32
  821c24:	1080000b 	ldhu	r2,0(r2)
  821c28:	10ffffcc 	andi	r3,r2,65535
  821c2c:	18e0001c 	xori	r3,r3,32768
  821c30:	18e00004 	addi	r3,r3,-32768
  821c34:	e0bfe017 	ldw	r2,-128(fp)
  821c38:	10801004 	addi	r2,r2,64
  821c3c:	10800017 	ldw	r2,0(r2)
  821c40:	100b883a 	mov	r5,r2
  821c44:	1809883a 	mov	r4,r3
  821c48:	08301e80 	call	8301e8 <__mulsi3>
  821c4c:	e0bfe515 	stw	r2,-108(fp)
  821c50:	e0ffe417 	ldw	r3,-112(fp)
  821c54:	e0bfe517 	ldw	r2,-108(fp)
  821c58:	1885883a 	add	r2,r3,r2
  821c5c:	1085883a 	add	r2,r2,r2
  821c60:	1085883a 	add	r2,r2,r2
  821c64:	e0bfe615 	stw	r2,-104(fp)
  821c68:	e0ffe417 	ldw	r3,-112(fp)
  821c6c:	e0bfe517 	ldw	r2,-108(fp)
  821c70:	1885c83a 	sub	r2,r3,r2
  821c74:	1085883a 	add	r2,r2,r2
  821c78:	1085883a 	add	r2,r2,r2
  821c7c:	e0bfe715 	stw	r2,-100(fp)
  821c80:	e0bfdf17 	ldw	r2,-132(fp)
  821c84:	10800404 	addi	r2,r2,16
  821c88:	1080000b 	ldhu	r2,0(r2)
  821c8c:	10ffffcc 	andi	r3,r2,65535
  821c90:	18e0001c 	xori	r3,r3,32768
  821c94:	18e00004 	addi	r3,r3,-32768
  821c98:	e0bfe017 	ldw	r2,-128(fp)
  821c9c:	10800804 	addi	r2,r2,32
  821ca0:	10800017 	ldw	r2,0(r2)
  821ca4:	100b883a 	mov	r5,r2
  821ca8:	1809883a 	mov	r4,r3
  821cac:	08301e80 	call	8301e8 <__mulsi3>
  821cb0:	e0bfe815 	stw	r2,-96(fp)
  821cb4:	e0bfdf17 	ldw	r2,-132(fp)
  821cb8:	10800c04 	addi	r2,r2,48
  821cbc:	1080000b 	ldhu	r2,0(r2)
  821cc0:	10ffffcc 	andi	r3,r2,65535
  821cc4:	18e0001c 	xori	r3,r3,32768
  821cc8:	18e00004 	addi	r3,r3,-32768
  821ccc:	e0bfe017 	ldw	r2,-128(fp)
  821cd0:	10801804 	addi	r2,r2,96
  821cd4:	10800017 	ldw	r2,0(r2)
  821cd8:	100b883a 	mov	r5,r2
  821cdc:	1809883a 	mov	r4,r3
  821ce0:	08301e80 	call	8301e8 <__mulsi3>
  821ce4:	e0bfe915 	stw	r2,-92(fp)
  821ce8:	e0ffe817 	ldw	r3,-96(fp)
  821cec:	e0bfe917 	ldw	r2,-92(fp)
  821cf0:	1885883a 	add	r2,r3,r2
  821cf4:	01445444 	movi	r5,4433
  821cf8:	1009883a 	mov	r4,r2
  821cfc:	08301e80 	call	8301e8 <__mulsi3>
  821d00:	e0bfea15 	stw	r2,-88(fp)
  821d04:	e0bfea17 	ldw	r2,-88(fp)
  821d08:	10810004 	addi	r2,r2,1024
  821d0c:	e0bfea15 	stw	r2,-88(fp)
  821d10:	01461f84 	movi	r5,6270
  821d14:	e13fe817 	ldw	r4,-96(fp)
  821d18:	08301e80 	call	8301e8 <__mulsi3>
  821d1c:	1007883a 	mov	r3,r2
  821d20:	e0bfea17 	ldw	r2,-88(fp)
  821d24:	1885883a 	add	r2,r3,r2
  821d28:	1005d2fa 	srai	r2,r2,11
  821d2c:	e0bfe415 	stw	r2,-112(fp)
  821d30:	017137c4 	movi	r5,-15137
  821d34:	e13fe917 	ldw	r4,-92(fp)
  821d38:	08301e80 	call	8301e8 <__mulsi3>
  821d3c:	1007883a 	mov	r3,r2
  821d40:	e0bfea17 	ldw	r2,-88(fp)
  821d44:	1885883a 	add	r2,r3,r2
  821d48:	1005d2fa 	srai	r2,r2,11
  821d4c:	e0bfe515 	stw	r2,-108(fp)
  821d50:	e0ffe617 	ldw	r3,-104(fp)
  821d54:	e0bfe417 	ldw	r2,-112(fp)
  821d58:	1887883a 	add	r3,r3,r2
  821d5c:	e0bfe117 	ldw	r2,-124(fp)
  821d60:	10c00015 	stw	r3,0(r2)
  821d64:	e0bfe117 	ldw	r2,-124(fp)
  821d68:	10800c04 	addi	r2,r2,48
  821d6c:	e13fe617 	ldw	r4,-104(fp)
  821d70:	e0ffe417 	ldw	r3,-112(fp)
  821d74:	20c7c83a 	sub	r3,r4,r3
  821d78:	10c00015 	stw	r3,0(r2)
  821d7c:	e0bfe117 	ldw	r2,-124(fp)
  821d80:	10800404 	addi	r2,r2,16
  821d84:	e13fe717 	ldw	r4,-100(fp)
  821d88:	e0ffe517 	ldw	r3,-108(fp)
  821d8c:	20c7883a 	add	r3,r4,r3
  821d90:	10c00015 	stw	r3,0(r2)
  821d94:	e0bfe117 	ldw	r2,-124(fp)
  821d98:	10800804 	addi	r2,r2,32
  821d9c:	e13fe717 	ldw	r4,-100(fp)
  821da0:	e0ffe517 	ldw	r3,-108(fp)
  821da4:	20c7c83a 	sub	r3,r4,r3
  821da8:	10c00015 	stw	r3,0(r2)
  821dac:	e0bfe217 	ldw	r2,-120(fp)
  821db0:	10800044 	addi	r2,r2,1
  821db4:	e0bfe215 	stw	r2,-120(fp)
  821db8:	e0bfdf17 	ldw	r2,-132(fp)
  821dbc:	10800084 	addi	r2,r2,2
  821dc0:	e0bfdf15 	stw	r2,-132(fp)
  821dc4:	e0bfe017 	ldw	r2,-128(fp)
  821dc8:	10800104 	addi	r2,r2,4
  821dcc:	e0bfe015 	stw	r2,-128(fp)
  821dd0:	e0bfe117 	ldw	r2,-124(fp)
  821dd4:	10800104 	addi	r2,r2,4
  821dd8:	e0bfe115 	stw	r2,-124(fp)
  821ddc:	e0bfe217 	ldw	r2,-120(fp)
  821de0:	10800110 	cmplti	r2,r2,4
  821de4:	103f821e 	bne	r2,zero,821bf0 <__alt_mem_epcs_flash_controller_0+0xff818bf0>
  821de8:	e0bfec04 	addi	r2,fp,-80
  821dec:	e0bfe115 	stw	r2,-124(fp)
  821df0:	e03fe215 	stw	zero,-120(fp)
  821df4:	00006a06 	br	821fa0 <jpeg_idct_4x4+0x404>
  821df8:	e0bfe217 	ldw	r2,-120(fp)
  821dfc:	1085883a 	add	r2,r2,r2
  821e00:	1085883a 	add	r2,r2,r2
  821e04:	1007883a 	mov	r3,r2
  821e08:	e0bfff17 	ldw	r2,-4(fp)
  821e0c:	10c5883a 	add	r2,r2,r3
  821e10:	10c00017 	ldw	r3,0(r2)
  821e14:	e0800217 	ldw	r2,8(fp)
  821e18:	1885883a 	add	r2,r3,r2
  821e1c:	e0bfeb15 	stw	r2,-84(fp)
  821e20:	e0bfe117 	ldw	r2,-124(fp)
  821e24:	10800017 	ldw	r2,0(r2)
  821e28:	10900404 	addi	r2,r2,16400
  821e2c:	e0bfe415 	stw	r2,-112(fp)
  821e30:	e0bfe117 	ldw	r2,-124(fp)
  821e34:	10800204 	addi	r2,r2,8
  821e38:	10800017 	ldw	r2,0(r2)
  821e3c:	e0bfe515 	stw	r2,-108(fp)
  821e40:	e0ffe417 	ldw	r3,-112(fp)
  821e44:	e0bfe517 	ldw	r2,-108(fp)
  821e48:	1885883a 	add	r2,r3,r2
  821e4c:	1004937a 	slli	r2,r2,13
  821e50:	e0bfe615 	stw	r2,-104(fp)
  821e54:	e0ffe417 	ldw	r3,-112(fp)
  821e58:	e0bfe517 	ldw	r2,-108(fp)
  821e5c:	1885c83a 	sub	r2,r3,r2
  821e60:	1004937a 	slli	r2,r2,13
  821e64:	e0bfe715 	stw	r2,-100(fp)
  821e68:	e0bfe117 	ldw	r2,-124(fp)
  821e6c:	10800104 	addi	r2,r2,4
  821e70:	10800017 	ldw	r2,0(r2)
  821e74:	e0bfe815 	stw	r2,-96(fp)
  821e78:	e0bfe117 	ldw	r2,-124(fp)
  821e7c:	10800304 	addi	r2,r2,12
  821e80:	10800017 	ldw	r2,0(r2)
  821e84:	e0bfe915 	stw	r2,-92(fp)
  821e88:	e0ffe817 	ldw	r3,-96(fp)
  821e8c:	e0bfe917 	ldw	r2,-92(fp)
  821e90:	1885883a 	add	r2,r3,r2
  821e94:	01445444 	movi	r5,4433
  821e98:	1009883a 	mov	r4,r2
  821e9c:	08301e80 	call	8301e8 <__mulsi3>
  821ea0:	e0bfea15 	stw	r2,-88(fp)
  821ea4:	01461f84 	movi	r5,6270
  821ea8:	e13fe817 	ldw	r4,-96(fp)
  821eac:	08301e80 	call	8301e8 <__mulsi3>
  821eb0:	1007883a 	mov	r3,r2
  821eb4:	e0bfea17 	ldw	r2,-88(fp)
  821eb8:	1885883a 	add	r2,r3,r2
  821ebc:	e0bfe415 	stw	r2,-112(fp)
  821ec0:	017137c4 	movi	r5,-15137
  821ec4:	e13fe917 	ldw	r4,-92(fp)
  821ec8:	08301e80 	call	8301e8 <__mulsi3>
  821ecc:	1007883a 	mov	r3,r2
  821ed0:	e0bfea17 	ldw	r2,-88(fp)
  821ed4:	1885883a 	add	r2,r3,r2
  821ed8:	e0bfe515 	stw	r2,-108(fp)
  821edc:	e0ffe617 	ldw	r3,-104(fp)
  821ee0:	e0bfe417 	ldw	r2,-112(fp)
  821ee4:	1885883a 	add	r2,r3,r2
  821ee8:	1005d4ba 	srai	r2,r2,18
  821eec:	1080ffcc 	andi	r2,r2,1023
  821ef0:	e0ffe317 	ldw	r3,-116(fp)
  821ef4:	1885883a 	add	r2,r3,r2
  821ef8:	10c00003 	ldbu	r3,0(r2)
  821efc:	e0bfeb17 	ldw	r2,-84(fp)
  821f00:	10c00005 	stb	r3,0(r2)
  821f04:	e0bfeb17 	ldw	r2,-84(fp)
  821f08:	108000c4 	addi	r2,r2,3
  821f0c:	e13fe617 	ldw	r4,-104(fp)
  821f10:	e0ffe417 	ldw	r3,-112(fp)
  821f14:	20c7c83a 	sub	r3,r4,r3
  821f18:	1807d4ba 	srai	r3,r3,18
  821f1c:	18c0ffcc 	andi	r3,r3,1023
  821f20:	e13fe317 	ldw	r4,-116(fp)
  821f24:	20c7883a 	add	r3,r4,r3
  821f28:	18c00003 	ldbu	r3,0(r3)
  821f2c:	10c00005 	stb	r3,0(r2)
  821f30:	e0bfeb17 	ldw	r2,-84(fp)
  821f34:	10800044 	addi	r2,r2,1
  821f38:	e13fe717 	ldw	r4,-100(fp)
  821f3c:	e0ffe517 	ldw	r3,-108(fp)
  821f40:	20c7883a 	add	r3,r4,r3
  821f44:	1807d4ba 	srai	r3,r3,18
  821f48:	18c0ffcc 	andi	r3,r3,1023
  821f4c:	e13fe317 	ldw	r4,-116(fp)
  821f50:	20c7883a 	add	r3,r4,r3
  821f54:	18c00003 	ldbu	r3,0(r3)
  821f58:	10c00005 	stb	r3,0(r2)
  821f5c:	e0bfeb17 	ldw	r2,-84(fp)
  821f60:	10800084 	addi	r2,r2,2
  821f64:	e13fe717 	ldw	r4,-100(fp)
  821f68:	e0ffe517 	ldw	r3,-108(fp)
  821f6c:	20c7c83a 	sub	r3,r4,r3
  821f70:	1807d4ba 	srai	r3,r3,18
  821f74:	18c0ffcc 	andi	r3,r3,1023
  821f78:	e13fe317 	ldw	r4,-116(fp)
  821f7c:	20c7883a 	add	r3,r4,r3
  821f80:	18c00003 	ldbu	r3,0(r3)
  821f84:	10c00005 	stb	r3,0(r2)
  821f88:	e0bfe117 	ldw	r2,-124(fp)
  821f8c:	10800404 	addi	r2,r2,16
  821f90:	e0bfe115 	stw	r2,-124(fp)
  821f94:	e0bfe217 	ldw	r2,-120(fp)
  821f98:	10800044 	addi	r2,r2,1
  821f9c:	e0bfe215 	stw	r2,-120(fp)
  821fa0:	e0bfe217 	ldw	r2,-120(fp)
  821fa4:	10800110 	cmplti	r2,r2,4
  821fa8:	103f931e 	bne	r2,zero,821df8 <__alt_mem_epcs_flash_controller_0+0xff818df8>
  821fac:	0001883a 	nop
  821fb0:	e037883a 	mov	sp,fp
  821fb4:	dfc00117 	ldw	ra,4(sp)
  821fb8:	df000017 	ldw	fp,0(sp)
  821fbc:	dec00204 	addi	sp,sp,8
  821fc0:	f800283a 	ret

00821fc4 <jpeg_idct_3x3>:
  821fc4:	deffe704 	addi	sp,sp,-100
  821fc8:	dfc01815 	stw	ra,96(sp)
  821fcc:	df001715 	stw	fp,92(sp)
  821fd0:	df001704 	addi	fp,sp,92
  821fd4:	e13ffc15 	stw	r4,-16(fp)
  821fd8:	e17ffd15 	stw	r5,-12(fp)
  821fdc:	e1bffe15 	stw	r6,-8(fp)
  821fe0:	e1ffff15 	stw	r7,-4(fp)
  821fe4:	e0bffc17 	ldw	r2,-16(fp)
  821fe8:	10805417 	ldw	r2,336(r2)
  821fec:	10bfa004 	addi	r2,r2,-384
  821ff0:	e0bfed15 	stw	r2,-76(fp)
  821ff4:	e0bffe17 	ldw	r2,-8(fp)
  821ff8:	e0bfe915 	stw	r2,-92(fp)
  821ffc:	e0bffd17 	ldw	r2,-12(fp)
  822000:	10801517 	ldw	r2,84(r2)
  822004:	e0bfea15 	stw	r2,-88(fp)
  822008:	e0bff304 	addi	r2,fp,-52
  82200c:	e0bfeb15 	stw	r2,-84(fp)
  822010:	e03fec15 	stw	zero,-80(fp)
  822014:	00005b06 	br	822184 <jpeg_idct_3x3+0x1c0>
  822018:	e0bfe917 	ldw	r2,-92(fp)
  82201c:	1080000b 	ldhu	r2,0(r2)
  822020:	10ffffcc 	andi	r3,r2,65535
  822024:	18e0001c 	xori	r3,r3,32768
  822028:	18e00004 	addi	r3,r3,-32768
  82202c:	e0bfea17 	ldw	r2,-88(fp)
  822030:	10800017 	ldw	r2,0(r2)
  822034:	100b883a 	mov	r5,r2
  822038:	1809883a 	mov	r4,r3
  82203c:	08301e80 	call	8301e8 <__mulsi3>
  822040:	e0bfee15 	stw	r2,-72(fp)
  822044:	e0bfee17 	ldw	r2,-72(fp)
  822048:	1004937a 	slli	r2,r2,13
  82204c:	e0bfee15 	stw	r2,-72(fp)
  822050:	e0bfee17 	ldw	r2,-72(fp)
  822054:	10810004 	addi	r2,r2,1024
  822058:	e0bfee15 	stw	r2,-72(fp)
  82205c:	e0bfe917 	ldw	r2,-92(fp)
  822060:	10800804 	addi	r2,r2,32
  822064:	1080000b 	ldhu	r2,0(r2)
  822068:	10ffffcc 	andi	r3,r2,65535
  82206c:	18e0001c 	xori	r3,r3,32768
  822070:	18e00004 	addi	r3,r3,-32768
  822074:	e0bfea17 	ldw	r2,-88(fp)
  822078:	10801004 	addi	r2,r2,64
  82207c:	10800017 	ldw	r2,0(r2)
  822080:	100b883a 	mov	r5,r2
  822084:	1809883a 	mov	r4,r3
  822088:	08301e80 	call	8301e8 <__mulsi3>
  82208c:	e0bfef15 	stw	r2,-68(fp)
  822090:	0145a844 	movi	r5,5793
  822094:	e13fef17 	ldw	r4,-68(fp)
  822098:	08301e80 	call	8301e8 <__mulsi3>
  82209c:	e0bff015 	stw	r2,-64(fp)
  8220a0:	e0ffee17 	ldw	r3,-72(fp)
  8220a4:	e0bff017 	ldw	r2,-64(fp)
  8220a8:	1885883a 	add	r2,r3,r2
  8220ac:	e0bff115 	stw	r2,-60(fp)
  8220b0:	e0ffee17 	ldw	r3,-72(fp)
  8220b4:	e0bff017 	ldw	r2,-64(fp)
  8220b8:	1887c83a 	sub	r3,r3,r2
  8220bc:	e0bff017 	ldw	r2,-64(fp)
  8220c0:	1885c83a 	sub	r2,r3,r2
  8220c4:	e0bfef15 	stw	r2,-68(fp)
  8220c8:	e0bfe917 	ldw	r2,-92(fp)
  8220cc:	10800404 	addi	r2,r2,16
  8220d0:	1080000b 	ldhu	r2,0(r2)
  8220d4:	10ffffcc 	andi	r3,r2,65535
  8220d8:	18e0001c 	xori	r3,r3,32768
  8220dc:	18e00004 	addi	r3,r3,-32768
  8220e0:	e0bfea17 	ldw	r2,-88(fp)
  8220e4:	10800804 	addi	r2,r2,32
  8220e8:	10800017 	ldw	r2,0(r2)
  8220ec:	100b883a 	mov	r5,r2
  8220f0:	1809883a 	mov	r4,r3
  8220f4:	08301e80 	call	8301e8 <__mulsi3>
  8220f8:	e0bff015 	stw	r2,-64(fp)
  8220fc:	0149cc44 	movi	r5,10033
  822100:	e13ff017 	ldw	r4,-64(fp)
  822104:	08301e80 	call	8301e8 <__mulsi3>
  822108:	e0bfee15 	stw	r2,-72(fp)
  82210c:	e0fff117 	ldw	r3,-60(fp)
  822110:	e0bfee17 	ldw	r2,-72(fp)
  822114:	1885883a 	add	r2,r3,r2
  822118:	1007d2fa 	srai	r3,r2,11
  82211c:	e0bfeb17 	ldw	r2,-84(fp)
  822120:	10c00015 	stw	r3,0(r2)
  822124:	e0bfeb17 	ldw	r2,-84(fp)
  822128:	10800604 	addi	r2,r2,24
  82212c:	e13ff117 	ldw	r4,-60(fp)
  822130:	e0ffee17 	ldw	r3,-72(fp)
  822134:	20c7c83a 	sub	r3,r4,r3
  822138:	1807d2fa 	srai	r3,r3,11
  82213c:	10c00015 	stw	r3,0(r2)
  822140:	e0bfeb17 	ldw	r2,-84(fp)
  822144:	10800304 	addi	r2,r2,12
  822148:	e0ffef17 	ldw	r3,-68(fp)
  82214c:	1807d2fa 	srai	r3,r3,11
  822150:	10c00015 	stw	r3,0(r2)
  822154:	e0bfec17 	ldw	r2,-80(fp)
  822158:	10800044 	addi	r2,r2,1
  82215c:	e0bfec15 	stw	r2,-80(fp)
  822160:	e0bfe917 	ldw	r2,-92(fp)
  822164:	10800084 	addi	r2,r2,2
  822168:	e0bfe915 	stw	r2,-92(fp)
  82216c:	e0bfea17 	ldw	r2,-88(fp)
  822170:	10800104 	addi	r2,r2,4
  822174:	e0bfea15 	stw	r2,-88(fp)
  822178:	e0bfeb17 	ldw	r2,-84(fp)
  82217c:	10800104 	addi	r2,r2,4
  822180:	e0bfeb15 	stw	r2,-84(fp)
  822184:	e0bfec17 	ldw	r2,-80(fp)
  822188:	108000d0 	cmplti	r2,r2,3
  82218c:	103fa21e 	bne	r2,zero,822018 <__alt_mem_epcs_flash_controller_0+0xff819018>
  822190:	e0bff304 	addi	r2,fp,-52
  822194:	e0bfeb15 	stw	r2,-84(fp)
  822198:	e03fec15 	stw	zero,-80(fp)
  82219c:	00004f06 	br	8222dc <jpeg_idct_3x3+0x318>
  8221a0:	e0bfec17 	ldw	r2,-80(fp)
  8221a4:	1085883a 	add	r2,r2,r2
  8221a8:	1085883a 	add	r2,r2,r2
  8221ac:	1007883a 	mov	r3,r2
  8221b0:	e0bfff17 	ldw	r2,-4(fp)
  8221b4:	10c5883a 	add	r2,r2,r3
  8221b8:	10c00017 	ldw	r3,0(r2)
  8221bc:	e0800217 	ldw	r2,8(fp)
  8221c0:	1885883a 	add	r2,r3,r2
  8221c4:	e0bff215 	stw	r2,-56(fp)
  8221c8:	e0bfeb17 	ldw	r2,-84(fp)
  8221cc:	10800017 	ldw	r2,0(r2)
  8221d0:	10900404 	addi	r2,r2,16400
  8221d4:	e0bfee15 	stw	r2,-72(fp)
  8221d8:	e0bfee17 	ldw	r2,-72(fp)
  8221dc:	1004937a 	slli	r2,r2,13
  8221e0:	e0bfee15 	stw	r2,-72(fp)
  8221e4:	e0bfeb17 	ldw	r2,-84(fp)
  8221e8:	10800204 	addi	r2,r2,8
  8221ec:	10800017 	ldw	r2,0(r2)
  8221f0:	e0bfef15 	stw	r2,-68(fp)
  8221f4:	0145a844 	movi	r5,5793
  8221f8:	e13fef17 	ldw	r4,-68(fp)
  8221fc:	08301e80 	call	8301e8 <__mulsi3>
  822200:	e0bff015 	stw	r2,-64(fp)
  822204:	e0ffee17 	ldw	r3,-72(fp)
  822208:	e0bff017 	ldw	r2,-64(fp)
  82220c:	1885883a 	add	r2,r3,r2
  822210:	e0bff115 	stw	r2,-60(fp)
  822214:	e0ffee17 	ldw	r3,-72(fp)
  822218:	e0bff017 	ldw	r2,-64(fp)
  82221c:	1887c83a 	sub	r3,r3,r2
  822220:	e0bff017 	ldw	r2,-64(fp)
  822224:	1885c83a 	sub	r2,r3,r2
  822228:	e0bfef15 	stw	r2,-68(fp)
  82222c:	e0bfeb17 	ldw	r2,-84(fp)
  822230:	10800104 	addi	r2,r2,4
  822234:	10800017 	ldw	r2,0(r2)
  822238:	e0bff015 	stw	r2,-64(fp)
  82223c:	0149cc44 	movi	r5,10033
  822240:	e13ff017 	ldw	r4,-64(fp)
  822244:	08301e80 	call	8301e8 <__mulsi3>
  822248:	e0bfee15 	stw	r2,-72(fp)
  82224c:	e0fff117 	ldw	r3,-60(fp)
  822250:	e0bfee17 	ldw	r2,-72(fp)
  822254:	1885883a 	add	r2,r3,r2
  822258:	1005d4ba 	srai	r2,r2,18
  82225c:	1080ffcc 	andi	r2,r2,1023
  822260:	e0ffed17 	ldw	r3,-76(fp)
  822264:	1885883a 	add	r2,r3,r2
  822268:	10c00003 	ldbu	r3,0(r2)
  82226c:	e0bff217 	ldw	r2,-56(fp)
  822270:	10c00005 	stb	r3,0(r2)
  822274:	e0bff217 	ldw	r2,-56(fp)
  822278:	10800084 	addi	r2,r2,2
  82227c:	e13ff117 	ldw	r4,-60(fp)
  822280:	e0ffee17 	ldw	r3,-72(fp)
  822284:	20c7c83a 	sub	r3,r4,r3
  822288:	1807d4ba 	srai	r3,r3,18
  82228c:	18c0ffcc 	andi	r3,r3,1023
  822290:	e13fed17 	ldw	r4,-76(fp)
  822294:	20c7883a 	add	r3,r4,r3
  822298:	18c00003 	ldbu	r3,0(r3)
  82229c:	10c00005 	stb	r3,0(r2)
  8222a0:	e0bff217 	ldw	r2,-56(fp)
  8222a4:	10800044 	addi	r2,r2,1
  8222a8:	e0ffef17 	ldw	r3,-68(fp)
  8222ac:	1807d4ba 	srai	r3,r3,18
  8222b0:	18c0ffcc 	andi	r3,r3,1023
  8222b4:	e13fed17 	ldw	r4,-76(fp)
  8222b8:	20c7883a 	add	r3,r4,r3
  8222bc:	18c00003 	ldbu	r3,0(r3)
  8222c0:	10c00005 	stb	r3,0(r2)
  8222c4:	e0bfeb17 	ldw	r2,-84(fp)
  8222c8:	10800304 	addi	r2,r2,12
  8222cc:	e0bfeb15 	stw	r2,-84(fp)
  8222d0:	e0bfec17 	ldw	r2,-80(fp)
  8222d4:	10800044 	addi	r2,r2,1
  8222d8:	e0bfec15 	stw	r2,-80(fp)
  8222dc:	e0bfec17 	ldw	r2,-80(fp)
  8222e0:	108000d0 	cmplti	r2,r2,3
  8222e4:	103fae1e 	bne	r2,zero,8221a0 <__alt_mem_epcs_flash_controller_0+0xff8191a0>
  8222e8:	0001883a 	nop
  8222ec:	e037883a 	mov	sp,fp
  8222f0:	dfc00117 	ldw	ra,4(sp)
  8222f4:	df000017 	ldw	fp,0(sp)
  8222f8:	dec00204 	addi	sp,sp,8
  8222fc:	f800283a 	ret

00822300 <jpeg_idct_2x2>:
  822300:	defff104 	addi	sp,sp,-60
  822304:	dfc00e15 	stw	ra,56(sp)
  822308:	df000d15 	stw	fp,52(sp)
  82230c:	df000d04 	addi	fp,sp,52
  822310:	e13ffc15 	stw	r4,-16(fp)
  822314:	e17ffd15 	stw	r5,-12(fp)
  822318:	e1bffe15 	stw	r6,-8(fp)
  82231c:	e1ffff15 	stw	r7,-4(fp)
  822320:	e0bffc17 	ldw	r2,-16(fp)
  822324:	10805417 	ldw	r2,336(r2)
  822328:	10bfa004 	addi	r2,r2,-384
  82232c:	e0bff315 	stw	r2,-52(fp)
  822330:	e0bffd17 	ldw	r2,-12(fp)
  822334:	10801517 	ldw	r2,84(r2)
  822338:	e0bff415 	stw	r2,-48(fp)
  82233c:	e0bffe17 	ldw	r2,-8(fp)
  822340:	1080000b 	ldhu	r2,0(r2)
  822344:	10ffffcc 	andi	r3,r2,65535
  822348:	18e0001c 	xori	r3,r3,32768
  82234c:	18e00004 	addi	r3,r3,-32768
  822350:	e0bff417 	ldw	r2,-48(fp)
  822354:	10800017 	ldw	r2,0(r2)
  822358:	100b883a 	mov	r5,r2
  82235c:	1809883a 	mov	r4,r3
  822360:	08301e80 	call	8301e8 <__mulsi3>
  822364:	e0bff515 	stw	r2,-44(fp)
  822368:	e0bffe17 	ldw	r2,-8(fp)
  82236c:	10800404 	addi	r2,r2,16
  822370:	1080000b 	ldhu	r2,0(r2)
  822374:	10ffffcc 	andi	r3,r2,65535
  822378:	18e0001c 	xori	r3,r3,32768
  82237c:	18e00004 	addi	r3,r3,-32768
  822380:	e0bff417 	ldw	r2,-48(fp)
  822384:	10800804 	addi	r2,r2,32
  822388:	10800017 	ldw	r2,0(r2)
  82238c:	100b883a 	mov	r5,r2
  822390:	1809883a 	mov	r4,r3
  822394:	08301e80 	call	8301e8 <__mulsi3>
  822398:	e0bff615 	stw	r2,-40(fp)
  82239c:	e0bff517 	ldw	r2,-44(fp)
  8223a0:	10840104 	addi	r2,r2,4100
  8223a4:	e0bff515 	stw	r2,-44(fp)
  8223a8:	e0fff517 	ldw	r3,-44(fp)
  8223ac:	e0bff617 	ldw	r2,-40(fp)
  8223b0:	1885883a 	add	r2,r3,r2
  8223b4:	e0bff715 	stw	r2,-36(fp)
  8223b8:	e0fff517 	ldw	r3,-44(fp)
  8223bc:	e0bff617 	ldw	r2,-40(fp)
  8223c0:	1885c83a 	sub	r2,r3,r2
  8223c4:	e0bff815 	stw	r2,-32(fp)
  8223c8:	e0bffe17 	ldw	r2,-8(fp)
  8223cc:	10800084 	addi	r2,r2,2
  8223d0:	1080000b 	ldhu	r2,0(r2)
  8223d4:	10ffffcc 	andi	r3,r2,65535
  8223d8:	18e0001c 	xori	r3,r3,32768
  8223dc:	18e00004 	addi	r3,r3,-32768
  8223e0:	e0bff417 	ldw	r2,-48(fp)
  8223e4:	10800104 	addi	r2,r2,4
  8223e8:	10800017 	ldw	r2,0(r2)
  8223ec:	100b883a 	mov	r5,r2
  8223f0:	1809883a 	mov	r4,r3
  8223f4:	08301e80 	call	8301e8 <__mulsi3>
  8223f8:	e0bff515 	stw	r2,-44(fp)
  8223fc:	e0bffe17 	ldw	r2,-8(fp)
  822400:	10800484 	addi	r2,r2,18
  822404:	1080000b 	ldhu	r2,0(r2)
  822408:	10ffffcc 	andi	r3,r2,65535
  82240c:	18e0001c 	xori	r3,r3,32768
  822410:	18e00004 	addi	r3,r3,-32768
  822414:	e0bff417 	ldw	r2,-48(fp)
  822418:	10800904 	addi	r2,r2,36
  82241c:	10800017 	ldw	r2,0(r2)
  822420:	100b883a 	mov	r5,r2
  822424:	1809883a 	mov	r4,r3
  822428:	08301e80 	call	8301e8 <__mulsi3>
  82242c:	e0bff615 	stw	r2,-40(fp)
  822430:	e0fff517 	ldw	r3,-44(fp)
  822434:	e0bff617 	ldw	r2,-40(fp)
  822438:	1885883a 	add	r2,r3,r2
  82243c:	e0bff915 	stw	r2,-28(fp)
  822440:	e0fff517 	ldw	r3,-44(fp)
  822444:	e0bff617 	ldw	r2,-40(fp)
  822448:	1885c83a 	sub	r2,r3,r2
  82244c:	e0bffa15 	stw	r2,-24(fp)
  822450:	e0bfff17 	ldw	r2,-4(fp)
  822454:	10c00017 	ldw	r3,0(r2)
  822458:	e0800217 	ldw	r2,8(fp)
  82245c:	1885883a 	add	r2,r3,r2
  822460:	e0bffb15 	stw	r2,-20(fp)
  822464:	e0fff717 	ldw	r3,-36(fp)
  822468:	e0bff917 	ldw	r2,-28(fp)
  82246c:	1885883a 	add	r2,r3,r2
  822470:	1005d0fa 	srai	r2,r2,3
  822474:	1080ffcc 	andi	r2,r2,1023
  822478:	e0fff317 	ldw	r3,-52(fp)
  82247c:	1885883a 	add	r2,r3,r2
  822480:	10c00003 	ldbu	r3,0(r2)
  822484:	e0bffb17 	ldw	r2,-20(fp)
  822488:	10c00005 	stb	r3,0(r2)
  82248c:	e0bffb17 	ldw	r2,-20(fp)
  822490:	10800044 	addi	r2,r2,1
  822494:	e13ff717 	ldw	r4,-36(fp)
  822498:	e0fff917 	ldw	r3,-28(fp)
  82249c:	20c7c83a 	sub	r3,r4,r3
  8224a0:	1807d0fa 	srai	r3,r3,3
  8224a4:	18c0ffcc 	andi	r3,r3,1023
  8224a8:	e13ff317 	ldw	r4,-52(fp)
  8224ac:	20c7883a 	add	r3,r4,r3
  8224b0:	18c00003 	ldbu	r3,0(r3)
  8224b4:	10c00005 	stb	r3,0(r2)
  8224b8:	e0bfff17 	ldw	r2,-4(fp)
  8224bc:	10800104 	addi	r2,r2,4
  8224c0:	10c00017 	ldw	r3,0(r2)
  8224c4:	e0800217 	ldw	r2,8(fp)
  8224c8:	1885883a 	add	r2,r3,r2
  8224cc:	e0bffb15 	stw	r2,-20(fp)
  8224d0:	e0fff817 	ldw	r3,-32(fp)
  8224d4:	e0bffa17 	ldw	r2,-24(fp)
  8224d8:	1885883a 	add	r2,r3,r2
  8224dc:	1005d0fa 	srai	r2,r2,3
  8224e0:	1080ffcc 	andi	r2,r2,1023
  8224e4:	e0fff317 	ldw	r3,-52(fp)
  8224e8:	1885883a 	add	r2,r3,r2
  8224ec:	10c00003 	ldbu	r3,0(r2)
  8224f0:	e0bffb17 	ldw	r2,-20(fp)
  8224f4:	10c00005 	stb	r3,0(r2)
  8224f8:	e0bffb17 	ldw	r2,-20(fp)
  8224fc:	10800044 	addi	r2,r2,1
  822500:	e13ff817 	ldw	r4,-32(fp)
  822504:	e0fffa17 	ldw	r3,-24(fp)
  822508:	20c7c83a 	sub	r3,r4,r3
  82250c:	1807d0fa 	srai	r3,r3,3
  822510:	18c0ffcc 	andi	r3,r3,1023
  822514:	e13ff317 	ldw	r4,-52(fp)
  822518:	20c7883a 	add	r3,r4,r3
  82251c:	18c00003 	ldbu	r3,0(r3)
  822520:	10c00005 	stb	r3,0(r2)
  822524:	0001883a 	nop
  822528:	e037883a 	mov	sp,fp
  82252c:	dfc00117 	ldw	ra,4(sp)
  822530:	df000017 	ldw	fp,0(sp)
  822534:	dec00204 	addi	sp,sp,8
  822538:	f800283a 	ret

0082253c <jpeg_idct_1x1>:
  82253c:	defff704 	addi	sp,sp,-36
  822540:	dfc00815 	stw	ra,32(sp)
  822544:	df000715 	stw	fp,28(sp)
  822548:	df000704 	addi	fp,sp,28
  82254c:	e13ffc15 	stw	r4,-16(fp)
  822550:	e17ffd15 	stw	r5,-12(fp)
  822554:	e1bffe15 	stw	r6,-8(fp)
  822558:	e1ffff15 	stw	r7,-4(fp)
  82255c:	e0bffc17 	ldw	r2,-16(fp)
  822560:	10805417 	ldw	r2,336(r2)
  822564:	10bfa004 	addi	r2,r2,-384
  822568:	e0bff915 	stw	r2,-28(fp)
  82256c:	e0bffd17 	ldw	r2,-12(fp)
  822570:	10801517 	ldw	r2,84(r2)
  822574:	e0bffa15 	stw	r2,-24(fp)
  822578:	e0bffe17 	ldw	r2,-8(fp)
  82257c:	1080000b 	ldhu	r2,0(r2)
  822580:	10ffffcc 	andi	r3,r2,65535
  822584:	18e0001c 	xori	r3,r3,32768
  822588:	18e00004 	addi	r3,r3,-32768
  82258c:	e0bffa17 	ldw	r2,-24(fp)
  822590:	10800017 	ldw	r2,0(r2)
  822594:	100b883a 	mov	r5,r2
  822598:	1809883a 	mov	r4,r3
  82259c:	08301e80 	call	8301e8 <__mulsi3>
  8225a0:	e0bffb15 	stw	r2,-20(fp)
  8225a4:	e0bffb17 	ldw	r2,-20(fp)
  8225a8:	10840104 	addi	r2,r2,4100
  8225ac:	e0bffb15 	stw	r2,-20(fp)
  8225b0:	e0bfff17 	ldw	r2,-4(fp)
  8225b4:	10c00017 	ldw	r3,0(r2)
  8225b8:	e0800217 	ldw	r2,8(fp)
  8225bc:	1885883a 	add	r2,r3,r2
  8225c0:	e0fffb17 	ldw	r3,-20(fp)
  8225c4:	1807d0fa 	srai	r3,r3,3
  8225c8:	18c0ffcc 	andi	r3,r3,1023
  8225cc:	e13ff917 	ldw	r4,-28(fp)
  8225d0:	20c7883a 	add	r3,r4,r3
  8225d4:	18c00003 	ldbu	r3,0(r3)
  8225d8:	10c00005 	stb	r3,0(r2)
  8225dc:	0001883a 	nop
  8225e0:	e037883a 	mov	sp,fp
  8225e4:	dfc00117 	ldw	ra,4(sp)
  8225e8:	df000017 	ldw	fp,0(sp)
  8225ec:	dec00204 	addi	sp,sp,8
  8225f0:	f800283a 	ret

008225f4 <jpeg_idct_9x9>:
  8225f4:	deff9f04 	addi	sp,sp,-388
  8225f8:	dfc06015 	stw	ra,384(sp)
  8225fc:	df005f15 	stw	fp,380(sp)
  822600:	df005f04 	addi	fp,sp,380
  822604:	e13ffc15 	stw	r4,-16(fp)
  822608:	e17ffd15 	stw	r5,-12(fp)
  82260c:	e1bffe15 	stw	r6,-8(fp)
  822610:	e1ffff15 	stw	r7,-4(fp)
  822614:	e0bffc17 	ldw	r2,-16(fp)
  822618:	10805417 	ldw	r2,336(r2)
  82261c:	10bfa004 	addi	r2,r2,-384
  822620:	e0bfa515 	stw	r2,-364(fp)
  822624:	e0bffe17 	ldw	r2,-8(fp)
  822628:	e0bfa115 	stw	r2,-380(fp)
  82262c:	e0bffd17 	ldw	r2,-12(fp)
  822630:	10801517 	ldw	r2,84(r2)
  822634:	e0bfa215 	stw	r2,-376(fp)
  822638:	e0bfb404 	addi	r2,fp,-304
  82263c:	e0bfa315 	stw	r2,-372(fp)
  822640:	e03fa415 	stw	zero,-368(fp)
  822644:	00012806 	br	822ae8 <jpeg_idct_9x9+0x4f4>
  822648:	e0bfa117 	ldw	r2,-380(fp)
  82264c:	1080000b 	ldhu	r2,0(r2)
  822650:	10ffffcc 	andi	r3,r2,65535
  822654:	18e0001c 	xori	r3,r3,32768
  822658:	18e00004 	addi	r3,r3,-32768
  82265c:	e0bfa217 	ldw	r2,-376(fp)
  822660:	10800017 	ldw	r2,0(r2)
  822664:	100b883a 	mov	r5,r2
  822668:	1809883a 	mov	r4,r3
  82266c:	08301e80 	call	8301e8 <__mulsi3>
  822670:	e0bfa615 	stw	r2,-360(fp)
  822674:	e0bfa617 	ldw	r2,-360(fp)
  822678:	1004937a 	slli	r2,r2,13
  82267c:	e0bfa615 	stw	r2,-360(fp)
  822680:	e0bfa617 	ldw	r2,-360(fp)
  822684:	10810004 	addi	r2,r2,1024
  822688:	e0bfa615 	stw	r2,-360(fp)
  82268c:	e0bfa117 	ldw	r2,-380(fp)
  822690:	10800804 	addi	r2,r2,32
  822694:	1080000b 	ldhu	r2,0(r2)
  822698:	10ffffcc 	andi	r3,r2,65535
  82269c:	18e0001c 	xori	r3,r3,32768
  8226a0:	18e00004 	addi	r3,r3,-32768
  8226a4:	e0bfa217 	ldw	r2,-376(fp)
  8226a8:	10801004 	addi	r2,r2,64
  8226ac:	10800017 	ldw	r2,0(r2)
  8226b0:	100b883a 	mov	r5,r2
  8226b4:	1809883a 	mov	r4,r3
  8226b8:	08301e80 	call	8301e8 <__mulsi3>
  8226bc:	e0bfa715 	stw	r2,-356(fp)
  8226c0:	e0bfa117 	ldw	r2,-380(fp)
  8226c4:	10801004 	addi	r2,r2,64
  8226c8:	1080000b 	ldhu	r2,0(r2)
  8226cc:	10ffffcc 	andi	r3,r2,65535
  8226d0:	18e0001c 	xori	r3,r3,32768
  8226d4:	18e00004 	addi	r3,r3,-32768
  8226d8:	e0bfa217 	ldw	r2,-376(fp)
  8226dc:	10802004 	addi	r2,r2,128
  8226e0:	10800017 	ldw	r2,0(r2)
  8226e4:	100b883a 	mov	r5,r2
  8226e8:	1809883a 	mov	r4,r3
  8226ec:	08301e80 	call	8301e8 <__mulsi3>
  8226f0:	e0bfa815 	stw	r2,-352(fp)
  8226f4:	e0bfa117 	ldw	r2,-380(fp)
  8226f8:	10801804 	addi	r2,r2,96
  8226fc:	1080000b 	ldhu	r2,0(r2)
  822700:	10ffffcc 	andi	r3,r2,65535
  822704:	18e0001c 	xori	r3,r3,32768
  822708:	18e00004 	addi	r3,r3,-32768
  82270c:	e0bfa217 	ldw	r2,-376(fp)
  822710:	10803004 	addi	r2,r2,192
  822714:	10800017 	ldw	r2,0(r2)
  822718:	100b883a 	mov	r5,r2
  82271c:	1809883a 	mov	r4,r3
  822720:	08301e80 	call	8301e8 <__mulsi3>
  822724:	e0bfa915 	stw	r2,-348(fp)
  822728:	0145a844 	movi	r5,5793
  82272c:	e13fa917 	ldw	r4,-348(fp)
  822730:	08301e80 	call	8301e8 <__mulsi3>
  822734:	e0bfaa15 	stw	r2,-344(fp)
  822738:	e0ffa617 	ldw	r3,-360(fp)
  82273c:	e0bfaa17 	ldw	r2,-344(fp)
  822740:	1885883a 	add	r2,r3,r2
  822744:	e0bfab15 	stw	r2,-340(fp)
  822748:	e0ffa617 	ldw	r3,-360(fp)
  82274c:	e0bfaa17 	ldw	r2,-344(fp)
  822750:	1887c83a 	sub	r3,r3,r2
  822754:	e0bfaa17 	ldw	r2,-344(fp)
  822758:	1885c83a 	sub	r2,r3,r2
  82275c:	e0bfac15 	stw	r2,-336(fp)
  822760:	e0ffa717 	ldw	r3,-356(fp)
  822764:	e0bfa817 	ldw	r2,-352(fp)
  822768:	1885c83a 	sub	r2,r3,r2
  82276c:	0145a844 	movi	r5,5793
  822770:	1009883a 	mov	r4,r2
  822774:	08301e80 	call	8301e8 <__mulsi3>
  822778:	e0bfa615 	stw	r2,-360(fp)
  82277c:	e0ffac17 	ldw	r3,-336(fp)
  822780:	e0bfa617 	ldw	r2,-360(fp)
  822784:	1885883a 	add	r2,r3,r2
  822788:	e0bfad15 	stw	r2,-332(fp)
  82278c:	e0ffac17 	ldw	r3,-336(fp)
  822790:	e0bfa617 	ldw	r2,-360(fp)
  822794:	1887c83a 	sub	r3,r3,r2
  822798:	e0bfa617 	ldw	r2,-360(fp)
  82279c:	1885c83a 	sub	r2,r3,r2
  8227a0:	e0bfae15 	stw	r2,-328(fp)
  8227a4:	e0ffa717 	ldw	r3,-356(fp)
  8227a8:	e0bfa817 	ldw	r2,-352(fp)
  8227ac:	1885883a 	add	r2,r3,r2
  8227b0:	014aa1c4 	movi	r5,10887
  8227b4:	1009883a 	mov	r4,r2
  8227b8:	08301e80 	call	8301e8 <__mulsi3>
  8227bc:	e0bfa615 	stw	r2,-360(fp)
  8227c0:	0148aac4 	movi	r5,8875
  8227c4:	e13fa717 	ldw	r4,-356(fp)
  8227c8:	08301e80 	call	8301e8 <__mulsi3>
  8227cc:	e0bfac15 	stw	r2,-336(fp)
  8227d0:	0141f704 	movi	r5,2012
  8227d4:	e13fa817 	ldw	r4,-352(fp)
  8227d8:	08301e80 	call	8301e8 <__mulsi3>
  8227dc:	e0bfaa15 	stw	r2,-344(fp)
  8227e0:	e0ffab17 	ldw	r3,-340(fp)
  8227e4:	e0bfa617 	ldw	r2,-360(fp)
  8227e8:	1887883a 	add	r3,r3,r2
  8227ec:	e0bfaa17 	ldw	r2,-344(fp)
  8227f0:	1885c83a 	sub	r2,r3,r2
  8227f4:	e0bfaf15 	stw	r2,-324(fp)
  8227f8:	e0ffab17 	ldw	r3,-340(fp)
  8227fc:	e0bfa617 	ldw	r2,-360(fp)
  822800:	1887c83a 	sub	r3,r3,r2
  822804:	e0bfac17 	ldw	r2,-336(fp)
  822808:	1885883a 	add	r2,r3,r2
  82280c:	e0bfb015 	stw	r2,-320(fp)
  822810:	e0ffab17 	ldw	r3,-340(fp)
  822814:	e0bfac17 	ldw	r2,-336(fp)
  822818:	1887c83a 	sub	r3,r3,r2
  82281c:	e0bfaa17 	ldw	r2,-344(fp)
  822820:	1885883a 	add	r2,r3,r2
  822824:	e0bfb115 	stw	r2,-316(fp)
  822828:	e0bfa117 	ldw	r2,-380(fp)
  82282c:	10800404 	addi	r2,r2,16
  822830:	1080000b 	ldhu	r2,0(r2)
  822834:	10ffffcc 	andi	r3,r2,65535
  822838:	18e0001c 	xori	r3,r3,32768
  82283c:	18e00004 	addi	r3,r3,-32768
  822840:	e0bfa217 	ldw	r2,-376(fp)
  822844:	10800804 	addi	r2,r2,32
  822848:	10800017 	ldw	r2,0(r2)
  82284c:	100b883a 	mov	r5,r2
  822850:	1809883a 	mov	r4,r3
  822854:	08301e80 	call	8301e8 <__mulsi3>
  822858:	e0bfa715 	stw	r2,-356(fp)
  82285c:	e0bfa117 	ldw	r2,-380(fp)
  822860:	10800c04 	addi	r2,r2,48
  822864:	1080000b 	ldhu	r2,0(r2)
  822868:	10ffffcc 	andi	r3,r2,65535
  82286c:	18e0001c 	xori	r3,r3,32768
  822870:	18e00004 	addi	r3,r3,-32768
  822874:	e0bfa217 	ldw	r2,-376(fp)
  822878:	10801804 	addi	r2,r2,96
  82287c:	10800017 	ldw	r2,0(r2)
  822880:	100b883a 	mov	r5,r2
  822884:	1809883a 	mov	r4,r3
  822888:	08301e80 	call	8301e8 <__mulsi3>
  82288c:	e0bfa815 	stw	r2,-352(fp)
  822890:	e0bfa117 	ldw	r2,-380(fp)
  822894:	10801404 	addi	r2,r2,80
  822898:	1080000b 	ldhu	r2,0(r2)
  82289c:	10ffffcc 	andi	r3,r2,65535
  8228a0:	18e0001c 	xori	r3,r3,32768
  8228a4:	18e00004 	addi	r3,r3,-32768
  8228a8:	e0bfa217 	ldw	r2,-376(fp)
  8228ac:	10802804 	addi	r2,r2,160
  8228b0:	10800017 	ldw	r2,0(r2)
  8228b4:	100b883a 	mov	r5,r2
  8228b8:	1809883a 	mov	r4,r3
  8228bc:	08301e80 	call	8301e8 <__mulsi3>
  8228c0:	e0bfa915 	stw	r2,-348(fp)
  8228c4:	e0bfa117 	ldw	r2,-380(fp)
  8228c8:	10801c04 	addi	r2,r2,112
  8228cc:	1080000b 	ldhu	r2,0(r2)
  8228d0:	10ffffcc 	andi	r3,r2,65535
  8228d4:	18e0001c 	xori	r3,r3,32768
  8228d8:	18e00004 	addi	r3,r3,-32768
  8228dc:	e0bfa217 	ldw	r2,-376(fp)
  8228e0:	10803804 	addi	r2,r2,224
  8228e4:	10800017 	ldw	r2,0(r2)
  8228e8:	100b883a 	mov	r5,r2
  8228ec:	1809883a 	mov	r4,r3
  8228f0:	08301e80 	call	8301e8 <__mulsi3>
  8228f4:	e0bfb215 	stw	r2,-312(fp)
  8228f8:	017633c4 	movi	r5,-10033
  8228fc:	e13fa817 	ldw	r4,-352(fp)
  822900:	08301e80 	call	8301e8 <__mulsi3>
  822904:	e0bfa815 	stw	r2,-352(fp)
  822908:	e0ffa717 	ldw	r3,-356(fp)
  82290c:	e0bfa917 	ldw	r2,-348(fp)
  822910:	1885883a 	add	r2,r3,r2
  822914:	014745c4 	movi	r5,7447
  822918:	1009883a 	mov	r4,r2
  82291c:	08301e80 	call	8301e8 <__mulsi3>
  822920:	e0bfac15 	stw	r2,-336(fp)
  822924:	e0ffa717 	ldw	r3,-356(fp)
  822928:	e0bfb217 	ldw	r2,-312(fp)
  82292c:	1885883a 	add	r2,r3,r2
  822930:	0143de84 	movi	r5,3962
  822934:	1009883a 	mov	r4,r2
  822938:	08301e80 	call	8301e8 <__mulsi3>
  82293c:	e0bfaa15 	stw	r2,-344(fp)
  822940:	e0ffac17 	ldw	r3,-336(fp)
  822944:	e0bfaa17 	ldw	r2,-344(fp)
  822948:	1887883a 	add	r3,r3,r2
  82294c:	e0bfa817 	ldw	r2,-352(fp)
  822950:	1885c83a 	sub	r2,r3,r2
  822954:	e0bfa615 	stw	r2,-360(fp)
  822958:	e0ffa917 	ldw	r3,-348(fp)
  82295c:	e0bfb217 	ldw	r2,-312(fp)
  822960:	1885c83a 	sub	r2,r3,r2
  822964:	014b2444 	movi	r5,11409
  822968:	1009883a 	mov	r4,r2
  82296c:	08301e80 	call	8301e8 <__mulsi3>
  822970:	e0bfab15 	stw	r2,-340(fp)
  822974:	e0ffa817 	ldw	r3,-352(fp)
  822978:	e0bfab17 	ldw	r2,-340(fp)
  82297c:	1885c83a 	sub	r2,r3,r2
  822980:	e0ffac17 	ldw	r3,-336(fp)
  822984:	1885883a 	add	r2,r3,r2
  822988:	e0bfac15 	stw	r2,-336(fp)
  82298c:	e0ffa817 	ldw	r3,-352(fp)
  822990:	e0bfab17 	ldw	r2,-340(fp)
  822994:	1885883a 	add	r2,r3,r2
  822998:	e0ffaa17 	ldw	r3,-344(fp)
  82299c:	1885883a 	add	r2,r3,r2
  8229a0:	e0bfaa15 	stw	r2,-344(fp)
  8229a4:	e0ffa717 	ldw	r3,-356(fp)
  8229a8:	e0bfa917 	ldw	r2,-348(fp)
  8229ac:	1887c83a 	sub	r3,r3,r2
  8229b0:	e0bfb217 	ldw	r2,-312(fp)
  8229b4:	1885c83a 	sub	r2,r3,r2
  8229b8:	0149cc44 	movi	r5,10033
  8229bc:	1009883a 	mov	r4,r2
  8229c0:	08301e80 	call	8301e8 <__mulsi3>
  8229c4:	e0bfab15 	stw	r2,-340(fp)
  8229c8:	e0ffaf17 	ldw	r3,-324(fp)
  8229cc:	e0bfa617 	ldw	r2,-360(fp)
  8229d0:	1885883a 	add	r2,r3,r2
  8229d4:	1007d2fa 	srai	r3,r2,11
  8229d8:	e0bfa317 	ldw	r2,-372(fp)
  8229dc:	10c00015 	stw	r3,0(r2)
  8229e0:	e0bfa317 	ldw	r2,-372(fp)
  8229e4:	10804004 	addi	r2,r2,256
  8229e8:	e13faf17 	ldw	r4,-324(fp)
  8229ec:	e0ffa617 	ldw	r3,-360(fp)
  8229f0:	20c7c83a 	sub	r3,r4,r3
  8229f4:	1807d2fa 	srai	r3,r3,11
  8229f8:	10c00015 	stw	r3,0(r2)
  8229fc:	e0bfa317 	ldw	r2,-372(fp)
  822a00:	10800804 	addi	r2,r2,32
  822a04:	e13fad17 	ldw	r4,-332(fp)
  822a08:	e0ffab17 	ldw	r3,-340(fp)
  822a0c:	20c7883a 	add	r3,r4,r3
  822a10:	1807d2fa 	srai	r3,r3,11
  822a14:	10c00015 	stw	r3,0(r2)
  822a18:	e0bfa317 	ldw	r2,-372(fp)
  822a1c:	10803804 	addi	r2,r2,224
  822a20:	e13fad17 	ldw	r4,-332(fp)
  822a24:	e0ffab17 	ldw	r3,-340(fp)
  822a28:	20c7c83a 	sub	r3,r4,r3
  822a2c:	1807d2fa 	srai	r3,r3,11
  822a30:	10c00015 	stw	r3,0(r2)
  822a34:	e0bfa317 	ldw	r2,-372(fp)
  822a38:	10801004 	addi	r2,r2,64
  822a3c:	e13fb017 	ldw	r4,-320(fp)
  822a40:	e0ffac17 	ldw	r3,-336(fp)
  822a44:	20c7883a 	add	r3,r4,r3
  822a48:	1807d2fa 	srai	r3,r3,11
  822a4c:	10c00015 	stw	r3,0(r2)
  822a50:	e0bfa317 	ldw	r2,-372(fp)
  822a54:	10803004 	addi	r2,r2,192
  822a58:	e13fb017 	ldw	r4,-320(fp)
  822a5c:	e0ffac17 	ldw	r3,-336(fp)
  822a60:	20c7c83a 	sub	r3,r4,r3
  822a64:	1807d2fa 	srai	r3,r3,11
  822a68:	10c00015 	stw	r3,0(r2)
  822a6c:	e0bfa317 	ldw	r2,-372(fp)
  822a70:	10801804 	addi	r2,r2,96
  822a74:	e13fb117 	ldw	r4,-316(fp)
  822a78:	e0ffaa17 	ldw	r3,-344(fp)
  822a7c:	20c7883a 	add	r3,r4,r3
  822a80:	1807d2fa 	srai	r3,r3,11
  822a84:	10c00015 	stw	r3,0(r2)
  822a88:	e0bfa317 	ldw	r2,-372(fp)
  822a8c:	10802804 	addi	r2,r2,160
  822a90:	e13fb117 	ldw	r4,-316(fp)
  822a94:	e0ffaa17 	ldw	r3,-344(fp)
  822a98:	20c7c83a 	sub	r3,r4,r3
  822a9c:	1807d2fa 	srai	r3,r3,11
  822aa0:	10c00015 	stw	r3,0(r2)
  822aa4:	e0bfa317 	ldw	r2,-372(fp)
  822aa8:	10802004 	addi	r2,r2,128
  822aac:	e0ffae17 	ldw	r3,-328(fp)
  822ab0:	1807d2fa 	srai	r3,r3,11
  822ab4:	10c00015 	stw	r3,0(r2)
  822ab8:	e0bfa417 	ldw	r2,-368(fp)
  822abc:	10800044 	addi	r2,r2,1
  822ac0:	e0bfa415 	stw	r2,-368(fp)
  822ac4:	e0bfa117 	ldw	r2,-380(fp)
  822ac8:	10800084 	addi	r2,r2,2
  822acc:	e0bfa115 	stw	r2,-380(fp)
  822ad0:	e0bfa217 	ldw	r2,-376(fp)
  822ad4:	10800104 	addi	r2,r2,4
  822ad8:	e0bfa215 	stw	r2,-376(fp)
  822adc:	e0bfa317 	ldw	r2,-372(fp)
  822ae0:	10800104 	addi	r2,r2,4
  822ae4:	e0bfa315 	stw	r2,-372(fp)
  822ae8:	e0bfa417 	ldw	r2,-368(fp)
  822aec:	10800210 	cmplti	r2,r2,8
  822af0:	103ed51e 	bne	r2,zero,822648 <__alt_mem_epcs_flash_controller_0+0xff819648>
  822af4:	e0bfb404 	addi	r2,fp,-304
  822af8:	e0bfa315 	stw	r2,-372(fp)
  822afc:	e03fa415 	stw	zero,-368(fp)
  822b00:	00010706 	br	822f20 <jpeg_idct_9x9+0x92c>
  822b04:	e0bfa417 	ldw	r2,-368(fp)
  822b08:	1085883a 	add	r2,r2,r2
  822b0c:	1085883a 	add	r2,r2,r2
  822b10:	1007883a 	mov	r3,r2
  822b14:	e0bfff17 	ldw	r2,-4(fp)
  822b18:	10c5883a 	add	r2,r2,r3
  822b1c:	10c00017 	ldw	r3,0(r2)
  822b20:	e0800217 	ldw	r2,8(fp)
  822b24:	1885883a 	add	r2,r3,r2
  822b28:	e0bfb315 	stw	r2,-308(fp)
  822b2c:	e0bfa317 	ldw	r2,-372(fp)
  822b30:	10800017 	ldw	r2,0(r2)
  822b34:	10900404 	addi	r2,r2,16400
  822b38:	e0bfa615 	stw	r2,-360(fp)
  822b3c:	e0bfa617 	ldw	r2,-360(fp)
  822b40:	1004937a 	slli	r2,r2,13
  822b44:	e0bfa615 	stw	r2,-360(fp)
  822b48:	e0bfa317 	ldw	r2,-372(fp)
  822b4c:	10800204 	addi	r2,r2,8
  822b50:	10800017 	ldw	r2,0(r2)
  822b54:	e0bfa715 	stw	r2,-356(fp)
  822b58:	e0bfa317 	ldw	r2,-372(fp)
  822b5c:	10800404 	addi	r2,r2,16
  822b60:	10800017 	ldw	r2,0(r2)
  822b64:	e0bfa815 	stw	r2,-352(fp)
  822b68:	e0bfa317 	ldw	r2,-372(fp)
  822b6c:	10800604 	addi	r2,r2,24
  822b70:	10800017 	ldw	r2,0(r2)
  822b74:	e0bfa915 	stw	r2,-348(fp)
  822b78:	0145a844 	movi	r5,5793
  822b7c:	e13fa917 	ldw	r4,-348(fp)
  822b80:	08301e80 	call	8301e8 <__mulsi3>
  822b84:	e0bfaa15 	stw	r2,-344(fp)
  822b88:	e0ffa617 	ldw	r3,-360(fp)
  822b8c:	e0bfaa17 	ldw	r2,-344(fp)
  822b90:	1885883a 	add	r2,r3,r2
  822b94:	e0bfab15 	stw	r2,-340(fp)
  822b98:	e0ffa617 	ldw	r3,-360(fp)
  822b9c:	e0bfaa17 	ldw	r2,-344(fp)
  822ba0:	1887c83a 	sub	r3,r3,r2
  822ba4:	e0bfaa17 	ldw	r2,-344(fp)
  822ba8:	1885c83a 	sub	r2,r3,r2
  822bac:	e0bfac15 	stw	r2,-336(fp)
  822bb0:	e0ffa717 	ldw	r3,-356(fp)
  822bb4:	e0bfa817 	ldw	r2,-352(fp)
  822bb8:	1885c83a 	sub	r2,r3,r2
  822bbc:	0145a844 	movi	r5,5793
  822bc0:	1009883a 	mov	r4,r2
  822bc4:	08301e80 	call	8301e8 <__mulsi3>
  822bc8:	e0bfa615 	stw	r2,-360(fp)
  822bcc:	e0ffac17 	ldw	r3,-336(fp)
  822bd0:	e0bfa617 	ldw	r2,-360(fp)
  822bd4:	1885883a 	add	r2,r3,r2
  822bd8:	e0bfad15 	stw	r2,-332(fp)
  822bdc:	e0ffac17 	ldw	r3,-336(fp)
  822be0:	e0bfa617 	ldw	r2,-360(fp)
  822be4:	1887c83a 	sub	r3,r3,r2
  822be8:	e0bfa617 	ldw	r2,-360(fp)
  822bec:	1885c83a 	sub	r2,r3,r2
  822bf0:	e0bfae15 	stw	r2,-328(fp)
  822bf4:	e0ffa717 	ldw	r3,-356(fp)
  822bf8:	e0bfa817 	ldw	r2,-352(fp)
  822bfc:	1885883a 	add	r2,r3,r2
  822c00:	014aa1c4 	movi	r5,10887
  822c04:	1009883a 	mov	r4,r2
  822c08:	08301e80 	call	8301e8 <__mulsi3>
  822c0c:	e0bfa615 	stw	r2,-360(fp)
  822c10:	0148aac4 	movi	r5,8875
  822c14:	e13fa717 	ldw	r4,-356(fp)
  822c18:	08301e80 	call	8301e8 <__mulsi3>
  822c1c:	e0bfac15 	stw	r2,-336(fp)
  822c20:	0141f704 	movi	r5,2012
  822c24:	e13fa817 	ldw	r4,-352(fp)
  822c28:	08301e80 	call	8301e8 <__mulsi3>
  822c2c:	e0bfaa15 	stw	r2,-344(fp)
  822c30:	e0ffab17 	ldw	r3,-340(fp)
  822c34:	e0bfa617 	ldw	r2,-360(fp)
  822c38:	1887883a 	add	r3,r3,r2
  822c3c:	e0bfaa17 	ldw	r2,-344(fp)
  822c40:	1885c83a 	sub	r2,r3,r2
  822c44:	e0bfaf15 	stw	r2,-324(fp)
  822c48:	e0ffab17 	ldw	r3,-340(fp)
  822c4c:	e0bfa617 	ldw	r2,-360(fp)
  822c50:	1887c83a 	sub	r3,r3,r2
  822c54:	e0bfac17 	ldw	r2,-336(fp)
  822c58:	1885883a 	add	r2,r3,r2
  822c5c:	e0bfb015 	stw	r2,-320(fp)
  822c60:	e0ffab17 	ldw	r3,-340(fp)
  822c64:	e0bfac17 	ldw	r2,-336(fp)
  822c68:	1887c83a 	sub	r3,r3,r2
  822c6c:	e0bfaa17 	ldw	r2,-344(fp)
  822c70:	1885883a 	add	r2,r3,r2
  822c74:	e0bfb115 	stw	r2,-316(fp)
  822c78:	e0bfa317 	ldw	r2,-372(fp)
  822c7c:	10800104 	addi	r2,r2,4
  822c80:	10800017 	ldw	r2,0(r2)
  822c84:	e0bfa715 	stw	r2,-356(fp)
  822c88:	e0bfa317 	ldw	r2,-372(fp)
  822c8c:	10800304 	addi	r2,r2,12
  822c90:	10800017 	ldw	r2,0(r2)
  822c94:	e0bfa815 	stw	r2,-352(fp)
  822c98:	e0bfa317 	ldw	r2,-372(fp)
  822c9c:	10800504 	addi	r2,r2,20
  822ca0:	10800017 	ldw	r2,0(r2)
  822ca4:	e0bfa915 	stw	r2,-348(fp)
  822ca8:	e0bfa317 	ldw	r2,-372(fp)
  822cac:	10800704 	addi	r2,r2,28
  822cb0:	10800017 	ldw	r2,0(r2)
  822cb4:	e0bfb215 	stw	r2,-312(fp)
  822cb8:	017633c4 	movi	r5,-10033
  822cbc:	e13fa817 	ldw	r4,-352(fp)
  822cc0:	08301e80 	call	8301e8 <__mulsi3>
  822cc4:	e0bfa815 	stw	r2,-352(fp)
  822cc8:	e0ffa717 	ldw	r3,-356(fp)
  822ccc:	e0bfa917 	ldw	r2,-348(fp)
  822cd0:	1885883a 	add	r2,r3,r2
  822cd4:	014745c4 	movi	r5,7447
  822cd8:	1009883a 	mov	r4,r2
  822cdc:	08301e80 	call	8301e8 <__mulsi3>
  822ce0:	e0bfac15 	stw	r2,-336(fp)
  822ce4:	e0ffa717 	ldw	r3,-356(fp)
  822ce8:	e0bfb217 	ldw	r2,-312(fp)
  822cec:	1885883a 	add	r2,r3,r2
  822cf0:	0143de84 	movi	r5,3962
  822cf4:	1009883a 	mov	r4,r2
  822cf8:	08301e80 	call	8301e8 <__mulsi3>
  822cfc:	e0bfaa15 	stw	r2,-344(fp)
  822d00:	e0ffac17 	ldw	r3,-336(fp)
  822d04:	e0bfaa17 	ldw	r2,-344(fp)
  822d08:	1887883a 	add	r3,r3,r2
  822d0c:	e0bfa817 	ldw	r2,-352(fp)
  822d10:	1885c83a 	sub	r2,r3,r2
  822d14:	e0bfa615 	stw	r2,-360(fp)
  822d18:	e0ffa917 	ldw	r3,-348(fp)
  822d1c:	e0bfb217 	ldw	r2,-312(fp)
  822d20:	1885c83a 	sub	r2,r3,r2
  822d24:	014b2444 	movi	r5,11409
  822d28:	1009883a 	mov	r4,r2
  822d2c:	08301e80 	call	8301e8 <__mulsi3>
  822d30:	e0bfab15 	stw	r2,-340(fp)
  822d34:	e0ffa817 	ldw	r3,-352(fp)
  822d38:	e0bfab17 	ldw	r2,-340(fp)
  822d3c:	1885c83a 	sub	r2,r3,r2
  822d40:	e0ffac17 	ldw	r3,-336(fp)
  822d44:	1885883a 	add	r2,r3,r2
  822d48:	e0bfac15 	stw	r2,-336(fp)
  822d4c:	e0ffa817 	ldw	r3,-352(fp)
  822d50:	e0bfab17 	ldw	r2,-340(fp)
  822d54:	1885883a 	add	r2,r3,r2
  822d58:	e0ffaa17 	ldw	r3,-344(fp)
  822d5c:	1885883a 	add	r2,r3,r2
  822d60:	e0bfaa15 	stw	r2,-344(fp)
  822d64:	e0ffa717 	ldw	r3,-356(fp)
  822d68:	e0bfa917 	ldw	r2,-348(fp)
  822d6c:	1887c83a 	sub	r3,r3,r2
  822d70:	e0bfb217 	ldw	r2,-312(fp)
  822d74:	1885c83a 	sub	r2,r3,r2
  822d78:	0149cc44 	movi	r5,10033
  822d7c:	1009883a 	mov	r4,r2
  822d80:	08301e80 	call	8301e8 <__mulsi3>
  822d84:	e0bfab15 	stw	r2,-340(fp)
  822d88:	e0ffaf17 	ldw	r3,-324(fp)
  822d8c:	e0bfa617 	ldw	r2,-360(fp)
  822d90:	1885883a 	add	r2,r3,r2
  822d94:	1005d4ba 	srai	r2,r2,18
  822d98:	1080ffcc 	andi	r2,r2,1023
  822d9c:	e0ffa517 	ldw	r3,-364(fp)
  822da0:	1885883a 	add	r2,r3,r2
  822da4:	10c00003 	ldbu	r3,0(r2)
  822da8:	e0bfb317 	ldw	r2,-308(fp)
  822dac:	10c00005 	stb	r3,0(r2)
  822db0:	e0bfb317 	ldw	r2,-308(fp)
  822db4:	10800204 	addi	r2,r2,8
  822db8:	e13faf17 	ldw	r4,-324(fp)
  822dbc:	e0ffa617 	ldw	r3,-360(fp)
  822dc0:	20c7c83a 	sub	r3,r4,r3
  822dc4:	1807d4ba 	srai	r3,r3,18
  822dc8:	18c0ffcc 	andi	r3,r3,1023
  822dcc:	e13fa517 	ldw	r4,-364(fp)
  822dd0:	20c7883a 	add	r3,r4,r3
  822dd4:	18c00003 	ldbu	r3,0(r3)
  822dd8:	10c00005 	stb	r3,0(r2)
  822ddc:	e0bfb317 	ldw	r2,-308(fp)
  822de0:	10800044 	addi	r2,r2,1
  822de4:	e13fad17 	ldw	r4,-332(fp)
  822de8:	e0ffab17 	ldw	r3,-340(fp)
  822dec:	20c7883a 	add	r3,r4,r3
  822df0:	1807d4ba 	srai	r3,r3,18
  822df4:	18c0ffcc 	andi	r3,r3,1023
  822df8:	e13fa517 	ldw	r4,-364(fp)
  822dfc:	20c7883a 	add	r3,r4,r3
  822e00:	18c00003 	ldbu	r3,0(r3)
  822e04:	10c00005 	stb	r3,0(r2)
  822e08:	e0bfb317 	ldw	r2,-308(fp)
  822e0c:	108001c4 	addi	r2,r2,7
  822e10:	e13fad17 	ldw	r4,-332(fp)
  822e14:	e0ffab17 	ldw	r3,-340(fp)
  822e18:	20c7c83a 	sub	r3,r4,r3
  822e1c:	1807d4ba 	srai	r3,r3,18
  822e20:	18c0ffcc 	andi	r3,r3,1023
  822e24:	e13fa517 	ldw	r4,-364(fp)
  822e28:	20c7883a 	add	r3,r4,r3
  822e2c:	18c00003 	ldbu	r3,0(r3)
  822e30:	10c00005 	stb	r3,0(r2)
  822e34:	e0bfb317 	ldw	r2,-308(fp)
  822e38:	10800084 	addi	r2,r2,2
  822e3c:	e13fb017 	ldw	r4,-320(fp)
  822e40:	e0ffac17 	ldw	r3,-336(fp)
  822e44:	20c7883a 	add	r3,r4,r3
  822e48:	1807d4ba 	srai	r3,r3,18
  822e4c:	18c0ffcc 	andi	r3,r3,1023
  822e50:	e13fa517 	ldw	r4,-364(fp)
  822e54:	20c7883a 	add	r3,r4,r3
  822e58:	18c00003 	ldbu	r3,0(r3)
  822e5c:	10c00005 	stb	r3,0(r2)
  822e60:	e0bfb317 	ldw	r2,-308(fp)
  822e64:	10800184 	addi	r2,r2,6
  822e68:	e13fb017 	ldw	r4,-320(fp)
  822e6c:	e0ffac17 	ldw	r3,-336(fp)
  822e70:	20c7c83a 	sub	r3,r4,r3
  822e74:	1807d4ba 	srai	r3,r3,18
  822e78:	18c0ffcc 	andi	r3,r3,1023
  822e7c:	e13fa517 	ldw	r4,-364(fp)
  822e80:	20c7883a 	add	r3,r4,r3
  822e84:	18c00003 	ldbu	r3,0(r3)
  822e88:	10c00005 	stb	r3,0(r2)
  822e8c:	e0bfb317 	ldw	r2,-308(fp)
  822e90:	108000c4 	addi	r2,r2,3
  822e94:	e13fb117 	ldw	r4,-316(fp)
  822e98:	e0ffaa17 	ldw	r3,-344(fp)
  822e9c:	20c7883a 	add	r3,r4,r3
  822ea0:	1807d4ba 	srai	r3,r3,18
  822ea4:	18c0ffcc 	andi	r3,r3,1023
  822ea8:	e13fa517 	ldw	r4,-364(fp)
  822eac:	20c7883a 	add	r3,r4,r3
  822eb0:	18c00003 	ldbu	r3,0(r3)
  822eb4:	10c00005 	stb	r3,0(r2)
  822eb8:	e0bfb317 	ldw	r2,-308(fp)
  822ebc:	10800144 	addi	r2,r2,5
  822ec0:	e13fb117 	ldw	r4,-316(fp)
  822ec4:	e0ffaa17 	ldw	r3,-344(fp)
  822ec8:	20c7c83a 	sub	r3,r4,r3
  822ecc:	1807d4ba 	srai	r3,r3,18
  822ed0:	18c0ffcc 	andi	r3,r3,1023
  822ed4:	e13fa517 	ldw	r4,-364(fp)
  822ed8:	20c7883a 	add	r3,r4,r3
  822edc:	18c00003 	ldbu	r3,0(r3)
  822ee0:	10c00005 	stb	r3,0(r2)
  822ee4:	e0bfb317 	ldw	r2,-308(fp)
  822ee8:	10800104 	addi	r2,r2,4
  822eec:	e0ffae17 	ldw	r3,-328(fp)
  822ef0:	1807d4ba 	srai	r3,r3,18
  822ef4:	18c0ffcc 	andi	r3,r3,1023
  822ef8:	e13fa517 	ldw	r4,-364(fp)
  822efc:	20c7883a 	add	r3,r4,r3
  822f00:	18c00003 	ldbu	r3,0(r3)
  822f04:	10c00005 	stb	r3,0(r2)
  822f08:	e0bfa317 	ldw	r2,-372(fp)
  822f0c:	10800804 	addi	r2,r2,32
  822f10:	e0bfa315 	stw	r2,-372(fp)
  822f14:	e0bfa417 	ldw	r2,-368(fp)
  822f18:	10800044 	addi	r2,r2,1
  822f1c:	e0bfa415 	stw	r2,-368(fp)
  822f20:	e0bfa417 	ldw	r2,-368(fp)
  822f24:	10800250 	cmplti	r2,r2,9
  822f28:	103ef61e 	bne	r2,zero,822b04 <__alt_mem_epcs_flash_controller_0+0xff819b04>
  822f2c:	0001883a 	nop
  822f30:	e037883a 	mov	sp,fp
  822f34:	dfc00117 	ldw	ra,4(sp)
  822f38:	df000017 	ldw	fp,0(sp)
  822f3c:	dec00204 	addi	sp,sp,8
  822f40:	f800283a 	ret

00822f44 <jpeg_idct_10x10>:
  822f44:	deff9504 	addi	sp,sp,-428
  822f48:	dfc06a15 	stw	ra,424(sp)
  822f4c:	df006915 	stw	fp,420(sp)
  822f50:	df006904 	addi	fp,sp,420
  822f54:	e13ffc15 	stw	r4,-16(fp)
  822f58:	e17ffd15 	stw	r5,-12(fp)
  822f5c:	e1bffe15 	stw	r6,-8(fp)
  822f60:	e1ffff15 	stw	r7,-4(fp)
  822f64:	e0bffc17 	ldw	r2,-16(fp)
  822f68:	10805417 	ldw	r2,336(r2)
  822f6c:	10bfa004 	addi	r2,r2,-384
  822f70:	e0bf9b15 	stw	r2,-404(fp)
  822f74:	e0bffe17 	ldw	r2,-8(fp)
  822f78:	e0bf9715 	stw	r2,-420(fp)
  822f7c:	e0bffd17 	ldw	r2,-12(fp)
  822f80:	10801517 	ldw	r2,84(r2)
  822f84:	e0bf9815 	stw	r2,-416(fp)
  822f88:	e0bfac04 	addi	r2,fp,-336
  822f8c:	e0bf9915 	stw	r2,-412(fp)
  822f90:	e03f9a15 	stw	zero,-408(fp)
  822f94:	00014706 	br	8234b4 <jpeg_idct_10x10+0x570>
  822f98:	e0bf9717 	ldw	r2,-420(fp)
  822f9c:	1080000b 	ldhu	r2,0(r2)
  822fa0:	10ffffcc 	andi	r3,r2,65535
  822fa4:	18e0001c 	xori	r3,r3,32768
  822fa8:	18e00004 	addi	r3,r3,-32768
  822fac:	e0bf9817 	ldw	r2,-416(fp)
  822fb0:	10800017 	ldw	r2,0(r2)
  822fb4:	100b883a 	mov	r5,r2
  822fb8:	1809883a 	mov	r4,r3
  822fbc:	08301e80 	call	8301e8 <__mulsi3>
  822fc0:	e0bf9c15 	stw	r2,-400(fp)
  822fc4:	e0bf9c17 	ldw	r2,-400(fp)
  822fc8:	1004937a 	slli	r2,r2,13
  822fcc:	e0bf9c15 	stw	r2,-400(fp)
  822fd0:	e0bf9c17 	ldw	r2,-400(fp)
  822fd4:	10810004 	addi	r2,r2,1024
  822fd8:	e0bf9c15 	stw	r2,-400(fp)
  822fdc:	e0bf9717 	ldw	r2,-420(fp)
  822fe0:	10801004 	addi	r2,r2,64
  822fe4:	1080000b 	ldhu	r2,0(r2)
  822fe8:	10ffffcc 	andi	r3,r2,65535
  822fec:	18e0001c 	xori	r3,r3,32768
  822ff0:	18e00004 	addi	r3,r3,-32768
  822ff4:	e0bf9817 	ldw	r2,-416(fp)
  822ff8:	10802004 	addi	r2,r2,128
  822ffc:	10800017 	ldw	r2,0(r2)
  823000:	100b883a 	mov	r5,r2
  823004:	1809883a 	mov	r4,r3
  823008:	08301e80 	call	8301e8 <__mulsi3>
  82300c:	e0bf9d15 	stw	r2,-396(fp)
  823010:	01492744 	movi	r5,9373
  823014:	e13f9d17 	ldw	r4,-396(fp)
  823018:	08301e80 	call	8301e8 <__mulsi3>
  82301c:	e0bf9e15 	stw	r2,-392(fp)
  823020:	01437f04 	movi	r5,3580
  823024:	e13f9d17 	ldw	r4,-396(fp)
  823028:	08301e80 	call	8301e8 <__mulsi3>
  82302c:	e0bf9f15 	stw	r2,-388(fp)
  823030:	e0ff9c17 	ldw	r3,-400(fp)
  823034:	e0bf9e17 	ldw	r2,-392(fp)
  823038:	1885883a 	add	r2,r3,r2
  82303c:	e0bfa015 	stw	r2,-384(fp)
  823040:	e0ff9c17 	ldw	r3,-400(fp)
  823044:	e0bf9f17 	ldw	r2,-388(fp)
  823048:	1885c83a 	sub	r2,r3,r2
  82304c:	e0bfa115 	stw	r2,-380(fp)
  823050:	e0ff9e17 	ldw	r3,-392(fp)
  823054:	e0bf9f17 	ldw	r2,-388(fp)
  823058:	1885c83a 	sub	r2,r3,r2
  82305c:	1085883a 	add	r2,r2,r2
  823060:	1007883a 	mov	r3,r2
  823064:	e0bf9c17 	ldw	r2,-400(fp)
  823068:	10c5c83a 	sub	r2,r2,r3
  82306c:	1005d2fa 	srai	r2,r2,11
  823070:	e0bfa215 	stw	r2,-376(fp)
  823074:	e0bf9717 	ldw	r2,-420(fp)
  823078:	10800804 	addi	r2,r2,32
  82307c:	1080000b 	ldhu	r2,0(r2)
  823080:	10ffffcc 	andi	r3,r2,65535
  823084:	18e0001c 	xori	r3,r3,32768
  823088:	18e00004 	addi	r3,r3,-32768
  82308c:	e0bf9817 	ldw	r2,-416(fp)
  823090:	10801004 	addi	r2,r2,64
  823094:	10800017 	ldw	r2,0(r2)
  823098:	100b883a 	mov	r5,r2
  82309c:	1809883a 	mov	r4,r3
  8230a0:	08301e80 	call	8301e8 <__mulsi3>
  8230a4:	e0bf9f15 	stw	r2,-388(fp)
  8230a8:	e0bf9717 	ldw	r2,-420(fp)
  8230ac:	10801804 	addi	r2,r2,96
  8230b0:	1080000b 	ldhu	r2,0(r2)
  8230b4:	10ffffcc 	andi	r3,r2,65535
  8230b8:	18e0001c 	xori	r3,r3,32768
  8230bc:	18e00004 	addi	r3,r3,-32768
  8230c0:	e0bf9817 	ldw	r2,-416(fp)
  8230c4:	10803004 	addi	r2,r2,192
  8230c8:	10800017 	ldw	r2,0(r2)
  8230cc:	100b883a 	mov	r5,r2
  8230d0:	1809883a 	mov	r4,r3
  8230d4:	08301e80 	call	8301e8 <__mulsi3>
  8230d8:	e0bf9c15 	stw	r2,-400(fp)
  8230dc:	e0ff9f17 	ldw	r3,-388(fp)
  8230e0:	e0bf9c17 	ldw	r2,-400(fp)
  8230e4:	1885883a 	add	r2,r3,r2
  8230e8:	0146a684 	movi	r5,6810
  8230ec:	1009883a 	mov	r4,r2
  8230f0:	08301e80 	call	8301e8 <__mulsi3>
  8230f4:	e0bf9e15 	stw	r2,-392(fp)
  8230f8:	01441c44 	movi	r5,4209
  8230fc:	e13f9f17 	ldw	r4,-388(fp)
  823100:	08301e80 	call	8301e8 <__mulsi3>
  823104:	1007883a 	mov	r3,r2
  823108:	e0bf9e17 	ldw	r2,-392(fp)
  82310c:	1885883a 	add	r2,r3,r2
  823110:	e0bfa315 	stw	r2,-372(fp)
  823114:	016e9704 	movi	r5,-17828
  823118:	e13f9c17 	ldw	r4,-400(fp)
  82311c:	08301e80 	call	8301e8 <__mulsi3>
  823120:	1007883a 	mov	r3,r2
  823124:	e0bf9e17 	ldw	r2,-392(fp)
  823128:	1885883a 	add	r2,r3,r2
  82312c:	e0bfa415 	stw	r2,-368(fp)
  823130:	e0ffa017 	ldw	r3,-384(fp)
  823134:	e0bfa317 	ldw	r2,-372(fp)
  823138:	1885883a 	add	r2,r3,r2
  82313c:	e0bfa515 	stw	r2,-364(fp)
  823140:	e0ffa017 	ldw	r3,-384(fp)
  823144:	e0bfa317 	ldw	r2,-372(fp)
  823148:	1885c83a 	sub	r2,r3,r2
  82314c:	e0bfa615 	stw	r2,-360(fp)
  823150:	e0ffa117 	ldw	r3,-380(fp)
  823154:	e0bfa417 	ldw	r2,-368(fp)
  823158:	1885883a 	add	r2,r3,r2
  82315c:	e0bfa715 	stw	r2,-356(fp)
  823160:	e0ffa117 	ldw	r3,-380(fp)
  823164:	e0bfa417 	ldw	r2,-368(fp)
  823168:	1885c83a 	sub	r2,r3,r2
  82316c:	e0bfa815 	stw	r2,-352(fp)
  823170:	e0bf9717 	ldw	r2,-420(fp)
  823174:	10800404 	addi	r2,r2,16
  823178:	1080000b 	ldhu	r2,0(r2)
  82317c:	10ffffcc 	andi	r3,r2,65535
  823180:	18e0001c 	xori	r3,r3,32768
  823184:	18e00004 	addi	r3,r3,-32768
  823188:	e0bf9817 	ldw	r2,-416(fp)
  82318c:	10800804 	addi	r2,r2,32
  823190:	10800017 	ldw	r2,0(r2)
  823194:	100b883a 	mov	r5,r2
  823198:	1809883a 	mov	r4,r3
  82319c:	08301e80 	call	8301e8 <__mulsi3>
  8231a0:	e0bf9e15 	stw	r2,-392(fp)
  8231a4:	e0bf9717 	ldw	r2,-420(fp)
  8231a8:	10800c04 	addi	r2,r2,48
  8231ac:	1080000b 	ldhu	r2,0(r2)
  8231b0:	10ffffcc 	andi	r3,r2,65535
  8231b4:	18e0001c 	xori	r3,r3,32768
  8231b8:	18e00004 	addi	r3,r3,-32768
  8231bc:	e0bf9817 	ldw	r2,-416(fp)
  8231c0:	10801804 	addi	r2,r2,96
  8231c4:	10800017 	ldw	r2,0(r2)
  8231c8:	100b883a 	mov	r5,r2
  8231cc:	1809883a 	mov	r4,r3
  8231d0:	08301e80 	call	8301e8 <__mulsi3>
  8231d4:	e0bf9f15 	stw	r2,-388(fp)
  8231d8:	e0bf9717 	ldw	r2,-420(fp)
  8231dc:	10801404 	addi	r2,r2,80
  8231e0:	1080000b 	ldhu	r2,0(r2)
  8231e4:	10ffffcc 	andi	r3,r2,65535
  8231e8:	18e0001c 	xori	r3,r3,32768
  8231ec:	18e00004 	addi	r3,r3,-32768
  8231f0:	e0bf9817 	ldw	r2,-416(fp)
  8231f4:	10802804 	addi	r2,r2,160
  8231f8:	10800017 	ldw	r2,0(r2)
  8231fc:	100b883a 	mov	r5,r2
  823200:	1809883a 	mov	r4,r3
  823204:	08301e80 	call	8301e8 <__mulsi3>
  823208:	e0bf9c15 	stw	r2,-400(fp)
  82320c:	e0bf9717 	ldw	r2,-420(fp)
  823210:	10801c04 	addi	r2,r2,112
  823214:	1080000b 	ldhu	r2,0(r2)
  823218:	10ffffcc 	andi	r3,r2,65535
  82321c:	18e0001c 	xori	r3,r3,32768
  823220:	18e00004 	addi	r3,r3,-32768
  823224:	e0bf9817 	ldw	r2,-416(fp)
  823228:	10803804 	addi	r2,r2,224
  82322c:	10800017 	ldw	r2,0(r2)
  823230:	100b883a 	mov	r5,r2
  823234:	1809883a 	mov	r4,r3
  823238:	08301e80 	call	8301e8 <__mulsi3>
  82323c:	e0bf9d15 	stw	r2,-396(fp)
  823240:	e0ff9f17 	ldw	r3,-388(fp)
  823244:	e0bf9d17 	ldw	r2,-396(fp)
  823248:	1885883a 	add	r2,r3,r2
  82324c:	e0bfa115 	stw	r2,-380(fp)
  823250:	e0ff9f17 	ldw	r3,-388(fp)
  823254:	e0bf9d17 	ldw	r2,-396(fp)
  823258:	1885c83a 	sub	r2,r3,r2
  82325c:	e0bfa415 	stw	r2,-368(fp)
  823260:	014278c4 	movi	r5,2531
  823264:	e13fa417 	ldw	r4,-368(fp)
  823268:	08301e80 	call	8301e8 <__mulsi3>
  82326c:	e0bfa315 	stw	r2,-372(fp)
  823270:	e0bf9c17 	ldw	r2,-400(fp)
  823274:	1004937a 	slli	r2,r2,13
  823278:	e0bfa915 	stw	r2,-348(fp)
  82327c:	01479bc4 	movi	r5,7791
  823280:	e13fa117 	ldw	r4,-380(fp)
  823284:	08301e80 	call	8301e8 <__mulsi3>
  823288:	e0bf9f15 	stw	r2,-388(fp)
  82328c:	e0ffa917 	ldw	r3,-348(fp)
  823290:	e0bfa317 	ldw	r2,-372(fp)
  823294:	1885883a 	add	r2,r3,r2
  823298:	e0bf9d15 	stw	r2,-396(fp)
  82329c:	014b2cc4 	movi	r5,11443
  8232a0:	e13f9e17 	ldw	r4,-392(fp)
  8232a4:	08301e80 	call	8301e8 <__mulsi3>
  8232a8:	1007883a 	mov	r3,r2
  8232ac:	e0bf9f17 	ldw	r2,-388(fp)
  8232b0:	1887883a 	add	r3,r3,r2
  8232b4:	e0bf9d17 	ldw	r2,-396(fp)
  8232b8:	1885883a 	add	r2,r3,r2
  8232bc:	e0bfa015 	stw	r2,-384(fp)
  8232c0:	0141c504 	movi	r5,1812
  8232c4:	e13f9e17 	ldw	r4,-392(fp)
  8232c8:	08301e80 	call	8301e8 <__mulsi3>
  8232cc:	1007883a 	mov	r3,r2
  8232d0:	e0bf9f17 	ldw	r2,-388(fp)
  8232d4:	1887c83a 	sub	r3,r3,r2
  8232d8:	e0bf9d17 	ldw	r2,-396(fp)
  8232dc:	1885883a 	add	r2,r3,r2
  8232e0:	e0bfaa15 	stw	r2,-344(fp)
  8232e4:	0144b3c4 	movi	r5,4815
  8232e8:	e13fa117 	ldw	r4,-380(fp)
  8232ec:	08301e80 	call	8301e8 <__mulsi3>
  8232f0:	e0bf9f15 	stw	r2,-388(fp)
  8232f4:	e0ffa917 	ldw	r3,-348(fp)
  8232f8:	e0bfa317 	ldw	r2,-372(fp)
  8232fc:	1887c83a 	sub	r3,r3,r2
  823300:	e0bfa417 	ldw	r2,-368(fp)
  823304:	1004933a 	slli	r2,r2,12
  823308:	1885c83a 	sub	r2,r3,r2
  82330c:	e0bf9d15 	stw	r2,-396(fp)
  823310:	e0ff9e17 	ldw	r3,-392(fp)
  823314:	e0bfa417 	ldw	r2,-368(fp)
  823318:	1887c83a 	sub	r3,r3,r2
  82331c:	e0bf9c17 	ldw	r2,-400(fp)
  823320:	1885c83a 	sub	r2,r3,r2
  823324:	1085883a 	add	r2,r2,r2
  823328:	1085883a 	add	r2,r2,r2
  82332c:	e0bfa315 	stw	r2,-372(fp)
  823330:	014a14c4 	movi	r5,10323
  823334:	e13f9e17 	ldw	r4,-392(fp)
  823338:	08301e80 	call	8301e8 <__mulsi3>
  82333c:	1007883a 	mov	r3,r2
  823340:	e0bf9f17 	ldw	r2,-388(fp)
  823344:	1887c83a 	sub	r3,r3,r2
  823348:	e0bf9d17 	ldw	r2,-396(fp)
  82334c:	1885c83a 	sub	r2,r3,r2
  823350:	e0bfa115 	stw	r2,-380(fp)
  823354:	01452304 	movi	r5,5260
  823358:	e13f9e17 	ldw	r4,-392(fp)
  82335c:	08301e80 	call	8301e8 <__mulsi3>
  823360:	1007883a 	mov	r3,r2
  823364:	e0bf9f17 	ldw	r2,-388(fp)
  823368:	1887c83a 	sub	r3,r3,r2
  82336c:	e0bf9d17 	ldw	r2,-396(fp)
  823370:	1885883a 	add	r2,r3,r2
  823374:	e0bfa415 	stw	r2,-368(fp)
  823378:	e0ffa517 	ldw	r3,-364(fp)
  82337c:	e0bfa017 	ldw	r2,-384(fp)
  823380:	1885883a 	add	r2,r3,r2
  823384:	1007d2fa 	srai	r3,r2,11
  823388:	e0bf9917 	ldw	r2,-412(fp)
  82338c:	10c00015 	stw	r3,0(r2)
  823390:	e0bf9917 	ldw	r2,-412(fp)
  823394:	10804804 	addi	r2,r2,288
  823398:	e13fa517 	ldw	r4,-364(fp)
  82339c:	e0ffa017 	ldw	r3,-384(fp)
  8233a0:	20c7c83a 	sub	r3,r4,r3
  8233a4:	1807d2fa 	srai	r3,r3,11
  8233a8:	10c00015 	stw	r3,0(r2)
  8233ac:	e0bf9917 	ldw	r2,-412(fp)
  8233b0:	10800804 	addi	r2,r2,32
  8233b4:	e13fa717 	ldw	r4,-356(fp)
  8233b8:	e0ffa117 	ldw	r3,-380(fp)
  8233bc:	20c7883a 	add	r3,r4,r3
  8233c0:	1807d2fa 	srai	r3,r3,11
  8233c4:	10c00015 	stw	r3,0(r2)
  8233c8:	e0bf9917 	ldw	r2,-412(fp)
  8233cc:	10804004 	addi	r2,r2,256
  8233d0:	e13fa717 	ldw	r4,-356(fp)
  8233d4:	e0ffa117 	ldw	r3,-380(fp)
  8233d8:	20c7c83a 	sub	r3,r4,r3
  8233dc:	1807d2fa 	srai	r3,r3,11
  8233e0:	10c00015 	stw	r3,0(r2)
  8233e4:	e0bf9917 	ldw	r2,-412(fp)
  8233e8:	10801004 	addi	r2,r2,64
  8233ec:	e13fa217 	ldw	r4,-376(fp)
  8233f0:	e0ffa317 	ldw	r3,-372(fp)
  8233f4:	20c7883a 	add	r3,r4,r3
  8233f8:	10c00015 	stw	r3,0(r2)
  8233fc:	e0bf9917 	ldw	r2,-412(fp)
  823400:	10803804 	addi	r2,r2,224
  823404:	e13fa217 	ldw	r4,-376(fp)
  823408:	e0ffa317 	ldw	r3,-372(fp)
  82340c:	20c7c83a 	sub	r3,r4,r3
  823410:	10c00015 	stw	r3,0(r2)
  823414:	e0bf9917 	ldw	r2,-412(fp)
  823418:	10801804 	addi	r2,r2,96
  82341c:	e13fa817 	ldw	r4,-352(fp)
  823420:	e0ffa417 	ldw	r3,-368(fp)
  823424:	20c7883a 	add	r3,r4,r3
  823428:	1807d2fa 	srai	r3,r3,11
  82342c:	10c00015 	stw	r3,0(r2)
  823430:	e0bf9917 	ldw	r2,-412(fp)
  823434:	10803004 	addi	r2,r2,192
  823438:	e13fa817 	ldw	r4,-352(fp)
  82343c:	e0ffa417 	ldw	r3,-368(fp)
  823440:	20c7c83a 	sub	r3,r4,r3
  823444:	1807d2fa 	srai	r3,r3,11
  823448:	10c00015 	stw	r3,0(r2)
  82344c:	e0bf9917 	ldw	r2,-412(fp)
  823450:	10802004 	addi	r2,r2,128
  823454:	e13fa617 	ldw	r4,-360(fp)
  823458:	e0ffaa17 	ldw	r3,-344(fp)
  82345c:	20c7883a 	add	r3,r4,r3
  823460:	1807d2fa 	srai	r3,r3,11
  823464:	10c00015 	stw	r3,0(r2)
  823468:	e0bf9917 	ldw	r2,-412(fp)
  82346c:	10802804 	addi	r2,r2,160
  823470:	e13fa617 	ldw	r4,-360(fp)
  823474:	e0ffaa17 	ldw	r3,-344(fp)
  823478:	20c7c83a 	sub	r3,r4,r3
  82347c:	1807d2fa 	srai	r3,r3,11
  823480:	10c00015 	stw	r3,0(r2)
  823484:	e0bf9a17 	ldw	r2,-408(fp)
  823488:	10800044 	addi	r2,r2,1
  82348c:	e0bf9a15 	stw	r2,-408(fp)
  823490:	e0bf9717 	ldw	r2,-420(fp)
  823494:	10800084 	addi	r2,r2,2
  823498:	e0bf9715 	stw	r2,-420(fp)
  82349c:	e0bf9817 	ldw	r2,-416(fp)
  8234a0:	10800104 	addi	r2,r2,4
  8234a4:	e0bf9815 	stw	r2,-416(fp)
  8234a8:	e0bf9917 	ldw	r2,-412(fp)
  8234ac:	10800104 	addi	r2,r2,4
  8234b0:	e0bf9915 	stw	r2,-412(fp)
  8234b4:	e0bf9a17 	ldw	r2,-408(fp)
  8234b8:	10800210 	cmplti	r2,r2,8
  8234bc:	103eb61e 	bne	r2,zero,822f98 <__alt_mem_epcs_flash_controller_0+0xff819f98>
  8234c0:	e0bfac04 	addi	r2,fp,-336
  8234c4:	e0bf9915 	stw	r2,-412(fp)
  8234c8:	e03f9a15 	stw	zero,-408(fp)
  8234cc:	00012a06 	br	823978 <jpeg_idct_10x10+0xa34>
  8234d0:	e0bf9a17 	ldw	r2,-408(fp)
  8234d4:	1085883a 	add	r2,r2,r2
  8234d8:	1085883a 	add	r2,r2,r2
  8234dc:	1007883a 	mov	r3,r2
  8234e0:	e0bfff17 	ldw	r2,-4(fp)
  8234e4:	10c5883a 	add	r2,r2,r3
  8234e8:	10c00017 	ldw	r3,0(r2)
  8234ec:	e0800217 	ldw	r2,8(fp)
  8234f0:	1885883a 	add	r2,r3,r2
  8234f4:	e0bfab15 	stw	r2,-340(fp)
  8234f8:	e0bf9917 	ldw	r2,-412(fp)
  8234fc:	10800017 	ldw	r2,0(r2)
  823500:	10900404 	addi	r2,r2,16400
  823504:	e0bf9c15 	stw	r2,-400(fp)
  823508:	e0bf9c17 	ldw	r2,-400(fp)
  82350c:	1004937a 	slli	r2,r2,13
  823510:	e0bf9c15 	stw	r2,-400(fp)
  823514:	e0bf9917 	ldw	r2,-412(fp)
  823518:	10800404 	addi	r2,r2,16
  82351c:	10800017 	ldw	r2,0(r2)
  823520:	e0bf9d15 	stw	r2,-396(fp)
  823524:	01492744 	movi	r5,9373
  823528:	e13f9d17 	ldw	r4,-396(fp)
  82352c:	08301e80 	call	8301e8 <__mulsi3>
  823530:	e0bf9e15 	stw	r2,-392(fp)
  823534:	01437f04 	movi	r5,3580
  823538:	e13f9d17 	ldw	r4,-396(fp)
  82353c:	08301e80 	call	8301e8 <__mulsi3>
  823540:	e0bf9f15 	stw	r2,-388(fp)
  823544:	e0ff9c17 	ldw	r3,-400(fp)
  823548:	e0bf9e17 	ldw	r2,-392(fp)
  82354c:	1885883a 	add	r2,r3,r2
  823550:	e0bfa015 	stw	r2,-384(fp)
  823554:	e0ff9c17 	ldw	r3,-400(fp)
  823558:	e0bf9f17 	ldw	r2,-388(fp)
  82355c:	1885c83a 	sub	r2,r3,r2
  823560:	e0bfa115 	stw	r2,-380(fp)
  823564:	e0ff9e17 	ldw	r3,-392(fp)
  823568:	e0bf9f17 	ldw	r2,-388(fp)
  82356c:	1885c83a 	sub	r2,r3,r2
  823570:	1085883a 	add	r2,r2,r2
  823574:	1007883a 	mov	r3,r2
  823578:	e0bf9c17 	ldw	r2,-400(fp)
  82357c:	10c5c83a 	sub	r2,r2,r3
  823580:	e0bfa215 	stw	r2,-376(fp)
  823584:	e0bf9917 	ldw	r2,-412(fp)
  823588:	10800204 	addi	r2,r2,8
  82358c:	10800017 	ldw	r2,0(r2)
  823590:	e0bf9f15 	stw	r2,-388(fp)
  823594:	e0bf9917 	ldw	r2,-412(fp)
  823598:	10800604 	addi	r2,r2,24
  82359c:	10800017 	ldw	r2,0(r2)
  8235a0:	e0bf9c15 	stw	r2,-400(fp)
  8235a4:	e0ff9f17 	ldw	r3,-388(fp)
  8235a8:	e0bf9c17 	ldw	r2,-400(fp)
  8235ac:	1885883a 	add	r2,r3,r2
  8235b0:	0146a684 	movi	r5,6810
  8235b4:	1009883a 	mov	r4,r2
  8235b8:	08301e80 	call	8301e8 <__mulsi3>
  8235bc:	e0bf9e15 	stw	r2,-392(fp)
  8235c0:	01441c44 	movi	r5,4209
  8235c4:	e13f9f17 	ldw	r4,-388(fp)
  8235c8:	08301e80 	call	8301e8 <__mulsi3>
  8235cc:	1007883a 	mov	r3,r2
  8235d0:	e0bf9e17 	ldw	r2,-392(fp)
  8235d4:	1885883a 	add	r2,r3,r2
  8235d8:	e0bfa315 	stw	r2,-372(fp)
  8235dc:	016e9704 	movi	r5,-17828
  8235e0:	e13f9c17 	ldw	r4,-400(fp)
  8235e4:	08301e80 	call	8301e8 <__mulsi3>
  8235e8:	1007883a 	mov	r3,r2
  8235ec:	e0bf9e17 	ldw	r2,-392(fp)
  8235f0:	1885883a 	add	r2,r3,r2
  8235f4:	e0bfa415 	stw	r2,-368(fp)
  8235f8:	e0ffa017 	ldw	r3,-384(fp)
  8235fc:	e0bfa317 	ldw	r2,-372(fp)
  823600:	1885883a 	add	r2,r3,r2
  823604:	e0bfa515 	stw	r2,-364(fp)
  823608:	e0ffa017 	ldw	r3,-384(fp)
  82360c:	e0bfa317 	ldw	r2,-372(fp)
  823610:	1885c83a 	sub	r2,r3,r2
  823614:	e0bfa615 	stw	r2,-360(fp)
  823618:	e0ffa117 	ldw	r3,-380(fp)
  82361c:	e0bfa417 	ldw	r2,-368(fp)
  823620:	1885883a 	add	r2,r3,r2
  823624:	e0bfa715 	stw	r2,-356(fp)
  823628:	e0ffa117 	ldw	r3,-380(fp)
  82362c:	e0bfa417 	ldw	r2,-368(fp)
  823630:	1885c83a 	sub	r2,r3,r2
  823634:	e0bfa815 	stw	r2,-352(fp)
  823638:	e0bf9917 	ldw	r2,-412(fp)
  82363c:	10800104 	addi	r2,r2,4
  823640:	10800017 	ldw	r2,0(r2)
  823644:	e0bf9e15 	stw	r2,-392(fp)
  823648:	e0bf9917 	ldw	r2,-412(fp)
  82364c:	10800304 	addi	r2,r2,12
  823650:	10800017 	ldw	r2,0(r2)
  823654:	e0bf9f15 	stw	r2,-388(fp)
  823658:	e0bf9917 	ldw	r2,-412(fp)
  82365c:	10800504 	addi	r2,r2,20
  823660:	10800017 	ldw	r2,0(r2)
  823664:	e0bf9c15 	stw	r2,-400(fp)
  823668:	e0bf9c17 	ldw	r2,-400(fp)
  82366c:	1004937a 	slli	r2,r2,13
  823670:	e0bf9c15 	stw	r2,-400(fp)
  823674:	e0bf9917 	ldw	r2,-412(fp)
  823678:	10800704 	addi	r2,r2,28
  82367c:	10800017 	ldw	r2,0(r2)
  823680:	e0bf9d15 	stw	r2,-396(fp)
  823684:	e0ff9f17 	ldw	r3,-388(fp)
  823688:	e0bf9d17 	ldw	r2,-396(fp)
  82368c:	1885883a 	add	r2,r3,r2
  823690:	e0bfa115 	stw	r2,-380(fp)
  823694:	e0ff9f17 	ldw	r3,-388(fp)
  823698:	e0bf9d17 	ldw	r2,-396(fp)
  82369c:	1885c83a 	sub	r2,r3,r2
  8236a0:	e0bfa415 	stw	r2,-368(fp)
  8236a4:	014278c4 	movi	r5,2531
  8236a8:	e13fa417 	ldw	r4,-368(fp)
  8236ac:	08301e80 	call	8301e8 <__mulsi3>
  8236b0:	e0bfa315 	stw	r2,-372(fp)
  8236b4:	01479bc4 	movi	r5,7791
  8236b8:	e13fa117 	ldw	r4,-380(fp)
  8236bc:	08301e80 	call	8301e8 <__mulsi3>
  8236c0:	e0bf9f15 	stw	r2,-388(fp)
  8236c4:	e0ff9c17 	ldw	r3,-400(fp)
  8236c8:	e0bfa317 	ldw	r2,-372(fp)
  8236cc:	1885883a 	add	r2,r3,r2
  8236d0:	e0bf9d15 	stw	r2,-396(fp)
  8236d4:	014b2cc4 	movi	r5,11443
  8236d8:	e13f9e17 	ldw	r4,-392(fp)
  8236dc:	08301e80 	call	8301e8 <__mulsi3>
  8236e0:	1007883a 	mov	r3,r2
  8236e4:	e0bf9f17 	ldw	r2,-388(fp)
  8236e8:	1887883a 	add	r3,r3,r2
  8236ec:	e0bf9d17 	ldw	r2,-396(fp)
  8236f0:	1885883a 	add	r2,r3,r2
  8236f4:	e0bfa015 	stw	r2,-384(fp)
  8236f8:	0141c504 	movi	r5,1812
  8236fc:	e13f9e17 	ldw	r4,-392(fp)
  823700:	08301e80 	call	8301e8 <__mulsi3>
  823704:	1007883a 	mov	r3,r2
  823708:	e0bf9f17 	ldw	r2,-388(fp)
  82370c:	1887c83a 	sub	r3,r3,r2
  823710:	e0bf9d17 	ldw	r2,-396(fp)
  823714:	1885883a 	add	r2,r3,r2
  823718:	e0bfaa15 	stw	r2,-344(fp)
  82371c:	0144b3c4 	movi	r5,4815
  823720:	e13fa117 	ldw	r4,-380(fp)
  823724:	08301e80 	call	8301e8 <__mulsi3>
  823728:	e0bf9f15 	stw	r2,-388(fp)
  82372c:	e0ff9c17 	ldw	r3,-400(fp)
  823730:	e0bfa317 	ldw	r2,-372(fp)
  823734:	1887c83a 	sub	r3,r3,r2
  823738:	e0bfa417 	ldw	r2,-368(fp)
  82373c:	1004933a 	slli	r2,r2,12
  823740:	1885c83a 	sub	r2,r3,r2
  823744:	e0bf9d15 	stw	r2,-396(fp)
  823748:	e0ff9e17 	ldw	r3,-392(fp)
  82374c:	e0bfa417 	ldw	r2,-368(fp)
  823750:	1885c83a 	sub	r2,r3,r2
  823754:	1006937a 	slli	r3,r2,13
  823758:	e0bf9c17 	ldw	r2,-400(fp)
  82375c:	1885c83a 	sub	r2,r3,r2
  823760:	e0bfa315 	stw	r2,-372(fp)
  823764:	014a14c4 	movi	r5,10323
  823768:	e13f9e17 	ldw	r4,-392(fp)
  82376c:	08301e80 	call	8301e8 <__mulsi3>
  823770:	1007883a 	mov	r3,r2
  823774:	e0bf9f17 	ldw	r2,-388(fp)
  823778:	1887c83a 	sub	r3,r3,r2
  82377c:	e0bf9d17 	ldw	r2,-396(fp)
  823780:	1885c83a 	sub	r2,r3,r2
  823784:	e0bfa115 	stw	r2,-380(fp)
  823788:	01452304 	movi	r5,5260
  82378c:	e13f9e17 	ldw	r4,-392(fp)
  823790:	08301e80 	call	8301e8 <__mulsi3>
  823794:	1007883a 	mov	r3,r2
  823798:	e0bf9f17 	ldw	r2,-388(fp)
  82379c:	1887c83a 	sub	r3,r3,r2
  8237a0:	e0bf9d17 	ldw	r2,-396(fp)
  8237a4:	1885883a 	add	r2,r3,r2
  8237a8:	e0bfa415 	stw	r2,-368(fp)
  8237ac:	e0ffa517 	ldw	r3,-364(fp)
  8237b0:	e0bfa017 	ldw	r2,-384(fp)
  8237b4:	1885883a 	add	r2,r3,r2
  8237b8:	1005d4ba 	srai	r2,r2,18
  8237bc:	1080ffcc 	andi	r2,r2,1023
  8237c0:	e0ff9b17 	ldw	r3,-404(fp)
  8237c4:	1885883a 	add	r2,r3,r2
  8237c8:	10c00003 	ldbu	r3,0(r2)
  8237cc:	e0bfab17 	ldw	r2,-340(fp)
  8237d0:	10c00005 	stb	r3,0(r2)
  8237d4:	e0bfab17 	ldw	r2,-340(fp)
  8237d8:	10800244 	addi	r2,r2,9
  8237dc:	e13fa517 	ldw	r4,-364(fp)
  8237e0:	e0ffa017 	ldw	r3,-384(fp)
  8237e4:	20c7c83a 	sub	r3,r4,r3
  8237e8:	1807d4ba 	srai	r3,r3,18
  8237ec:	18c0ffcc 	andi	r3,r3,1023
  8237f0:	e13f9b17 	ldw	r4,-404(fp)
  8237f4:	20c7883a 	add	r3,r4,r3
  8237f8:	18c00003 	ldbu	r3,0(r3)
  8237fc:	10c00005 	stb	r3,0(r2)
  823800:	e0bfab17 	ldw	r2,-340(fp)
  823804:	10800044 	addi	r2,r2,1
  823808:	e13fa717 	ldw	r4,-356(fp)
  82380c:	e0ffa117 	ldw	r3,-380(fp)
  823810:	20c7883a 	add	r3,r4,r3
  823814:	1807d4ba 	srai	r3,r3,18
  823818:	18c0ffcc 	andi	r3,r3,1023
  82381c:	e13f9b17 	ldw	r4,-404(fp)
  823820:	20c7883a 	add	r3,r4,r3
  823824:	18c00003 	ldbu	r3,0(r3)
  823828:	10c00005 	stb	r3,0(r2)
  82382c:	e0bfab17 	ldw	r2,-340(fp)
  823830:	10800204 	addi	r2,r2,8
  823834:	e13fa717 	ldw	r4,-356(fp)
  823838:	e0ffa117 	ldw	r3,-380(fp)
  82383c:	20c7c83a 	sub	r3,r4,r3
  823840:	1807d4ba 	srai	r3,r3,18
  823844:	18c0ffcc 	andi	r3,r3,1023
  823848:	e13f9b17 	ldw	r4,-404(fp)
  82384c:	20c7883a 	add	r3,r4,r3
  823850:	18c00003 	ldbu	r3,0(r3)
  823854:	10c00005 	stb	r3,0(r2)
  823858:	e0bfab17 	ldw	r2,-340(fp)
  82385c:	10800084 	addi	r2,r2,2
  823860:	e13fa217 	ldw	r4,-376(fp)
  823864:	e0ffa317 	ldw	r3,-372(fp)
  823868:	20c7883a 	add	r3,r4,r3
  82386c:	1807d4ba 	srai	r3,r3,18
  823870:	18c0ffcc 	andi	r3,r3,1023
  823874:	e13f9b17 	ldw	r4,-404(fp)
  823878:	20c7883a 	add	r3,r4,r3
  82387c:	18c00003 	ldbu	r3,0(r3)
  823880:	10c00005 	stb	r3,0(r2)
  823884:	e0bfab17 	ldw	r2,-340(fp)
  823888:	108001c4 	addi	r2,r2,7
  82388c:	e13fa217 	ldw	r4,-376(fp)
  823890:	e0ffa317 	ldw	r3,-372(fp)
  823894:	20c7c83a 	sub	r3,r4,r3
  823898:	1807d4ba 	srai	r3,r3,18
  82389c:	18c0ffcc 	andi	r3,r3,1023
  8238a0:	e13f9b17 	ldw	r4,-404(fp)
  8238a4:	20c7883a 	add	r3,r4,r3
  8238a8:	18c00003 	ldbu	r3,0(r3)
  8238ac:	10c00005 	stb	r3,0(r2)
  8238b0:	e0bfab17 	ldw	r2,-340(fp)
  8238b4:	108000c4 	addi	r2,r2,3
  8238b8:	e13fa817 	ldw	r4,-352(fp)
  8238bc:	e0ffa417 	ldw	r3,-368(fp)
  8238c0:	20c7883a 	add	r3,r4,r3
  8238c4:	1807d4ba 	srai	r3,r3,18
  8238c8:	18c0ffcc 	andi	r3,r3,1023
  8238cc:	e13f9b17 	ldw	r4,-404(fp)
  8238d0:	20c7883a 	add	r3,r4,r3
  8238d4:	18c00003 	ldbu	r3,0(r3)
  8238d8:	10c00005 	stb	r3,0(r2)
  8238dc:	e0bfab17 	ldw	r2,-340(fp)
  8238e0:	10800184 	addi	r2,r2,6
  8238e4:	e13fa817 	ldw	r4,-352(fp)
  8238e8:	e0ffa417 	ldw	r3,-368(fp)
  8238ec:	20c7c83a 	sub	r3,r4,r3
  8238f0:	1807d4ba 	srai	r3,r3,18
  8238f4:	18c0ffcc 	andi	r3,r3,1023
  8238f8:	e13f9b17 	ldw	r4,-404(fp)
  8238fc:	20c7883a 	add	r3,r4,r3
  823900:	18c00003 	ldbu	r3,0(r3)
  823904:	10c00005 	stb	r3,0(r2)
  823908:	e0bfab17 	ldw	r2,-340(fp)
  82390c:	10800104 	addi	r2,r2,4
  823910:	e13fa617 	ldw	r4,-360(fp)
  823914:	e0ffaa17 	ldw	r3,-344(fp)
  823918:	20c7883a 	add	r3,r4,r3
  82391c:	1807d4ba 	srai	r3,r3,18
  823920:	18c0ffcc 	andi	r3,r3,1023
  823924:	e13f9b17 	ldw	r4,-404(fp)
  823928:	20c7883a 	add	r3,r4,r3
  82392c:	18c00003 	ldbu	r3,0(r3)
  823930:	10c00005 	stb	r3,0(r2)
  823934:	e0bfab17 	ldw	r2,-340(fp)
  823938:	10800144 	addi	r2,r2,5
  82393c:	e13fa617 	ldw	r4,-360(fp)
  823940:	e0ffaa17 	ldw	r3,-344(fp)
  823944:	20c7c83a 	sub	r3,r4,r3
  823948:	1807d4ba 	srai	r3,r3,18
  82394c:	18c0ffcc 	andi	r3,r3,1023
  823950:	e13f9b17 	ldw	r4,-404(fp)
  823954:	20c7883a 	add	r3,r4,r3
  823958:	18c00003 	ldbu	r3,0(r3)
  82395c:	10c00005 	stb	r3,0(r2)
  823960:	e0bf9917 	ldw	r2,-412(fp)
  823964:	10800804 	addi	r2,r2,32
  823968:	e0bf9915 	stw	r2,-412(fp)
  82396c:	e0bf9a17 	ldw	r2,-408(fp)
  823970:	10800044 	addi	r2,r2,1
  823974:	e0bf9a15 	stw	r2,-408(fp)
  823978:	e0bf9a17 	ldw	r2,-408(fp)
  82397c:	10800290 	cmplti	r2,r2,10
  823980:	103ed31e 	bne	r2,zero,8234d0 <__alt_mem_epcs_flash_controller_0+0xff81a4d0>
  823984:	0001883a 	nop
  823988:	e037883a 	mov	sp,fp
  82398c:	dfc00117 	ldw	ra,4(sp)
  823990:	df000017 	ldw	fp,0(sp)
  823994:	dec00204 	addi	sp,sp,8
  823998:	f800283a 	ret

0082399c <jpeg_idct_11x11>:
  82399c:	deff8c04 	addi	sp,sp,-464
  8239a0:	dfc07315 	stw	ra,460(sp)
  8239a4:	df007215 	stw	fp,456(sp)
  8239a8:	dc007115 	stw	r16,452(sp)
  8239ac:	df007204 	addi	fp,sp,456
  8239b0:	e13ffb15 	stw	r4,-20(fp)
  8239b4:	e17ffc15 	stw	r5,-16(fp)
  8239b8:	e1bffd15 	stw	r6,-12(fp)
  8239bc:	e1fffe15 	stw	r7,-8(fp)
  8239c0:	e0bffb17 	ldw	r2,-20(fp)
  8239c4:	10805417 	ldw	r2,336(r2)
  8239c8:	10bfa004 	addi	r2,r2,-384
  8239cc:	e0bf9215 	stw	r2,-440(fp)
  8239d0:	e0bffd17 	ldw	r2,-12(fp)
  8239d4:	e0bf8e15 	stw	r2,-456(fp)
  8239d8:	e0bffc17 	ldw	r2,-16(fp)
  8239dc:	10801517 	ldw	r2,84(r2)
  8239e0:	e0bf8f15 	stw	r2,-452(fp)
  8239e4:	e0bfa304 	addi	r2,fp,-372
  8239e8:	e0bf9015 	stw	r2,-448(fp)
  8239ec:	e03f9115 	stw	zero,-444(fp)
  8239f0:	00018706 	br	824010 <jpeg_idct_11x11+0x674>
  8239f4:	e0bf8e17 	ldw	r2,-456(fp)
  8239f8:	1080000b 	ldhu	r2,0(r2)
  8239fc:	10ffffcc 	andi	r3,r2,65535
  823a00:	18e0001c 	xori	r3,r3,32768
  823a04:	18e00004 	addi	r3,r3,-32768
  823a08:	e0bf8f17 	ldw	r2,-452(fp)
  823a0c:	10800017 	ldw	r2,0(r2)
  823a10:	100b883a 	mov	r5,r2
  823a14:	1809883a 	mov	r4,r3
  823a18:	08301e80 	call	8301e8 <__mulsi3>
  823a1c:	e0bf9315 	stw	r2,-436(fp)
  823a20:	e0bf9317 	ldw	r2,-436(fp)
  823a24:	1004937a 	slli	r2,r2,13
  823a28:	e0bf9315 	stw	r2,-436(fp)
  823a2c:	e0bf9317 	ldw	r2,-436(fp)
  823a30:	10810004 	addi	r2,r2,1024
  823a34:	e0bf9315 	stw	r2,-436(fp)
  823a38:	e0bf8e17 	ldw	r2,-456(fp)
  823a3c:	10800804 	addi	r2,r2,32
  823a40:	1080000b 	ldhu	r2,0(r2)
  823a44:	10ffffcc 	andi	r3,r2,65535
  823a48:	18e0001c 	xori	r3,r3,32768
  823a4c:	18e00004 	addi	r3,r3,-32768
  823a50:	e0bf8f17 	ldw	r2,-452(fp)
  823a54:	10801004 	addi	r2,r2,64
  823a58:	10800017 	ldw	r2,0(r2)
  823a5c:	100b883a 	mov	r5,r2
  823a60:	1809883a 	mov	r4,r3
  823a64:	08301e80 	call	8301e8 <__mulsi3>
  823a68:	e0bf9415 	stw	r2,-432(fp)
  823a6c:	e0bf8e17 	ldw	r2,-456(fp)
  823a70:	10801004 	addi	r2,r2,64
  823a74:	1080000b 	ldhu	r2,0(r2)
  823a78:	10ffffcc 	andi	r3,r2,65535
  823a7c:	18e0001c 	xori	r3,r3,32768
  823a80:	18e00004 	addi	r3,r3,-32768
  823a84:	e0bf8f17 	ldw	r2,-452(fp)
  823a88:	10802004 	addi	r2,r2,128
  823a8c:	10800017 	ldw	r2,0(r2)
  823a90:	100b883a 	mov	r5,r2
  823a94:	1809883a 	mov	r4,r3
  823a98:	08301e80 	call	8301e8 <__mulsi3>
  823a9c:	e0bf9515 	stw	r2,-428(fp)
  823aa0:	e0bf8e17 	ldw	r2,-456(fp)
  823aa4:	10801804 	addi	r2,r2,96
  823aa8:	1080000b 	ldhu	r2,0(r2)
  823aac:	10ffffcc 	andi	r3,r2,65535
  823ab0:	18e0001c 	xori	r3,r3,32768
  823ab4:	18e00004 	addi	r3,r3,-32768
  823ab8:	e0bf8f17 	ldw	r2,-452(fp)
  823abc:	10803004 	addi	r2,r2,192
  823ac0:	10800017 	ldw	r2,0(r2)
  823ac4:	100b883a 	mov	r5,r2
  823ac8:	1809883a 	mov	r4,r3
  823acc:	08301e80 	call	8301e8 <__mulsi3>
  823ad0:	e0bf9615 	stw	r2,-424(fp)
  823ad4:	e0ff9517 	ldw	r3,-428(fp)
  823ad8:	e0bf9617 	ldw	r2,-424(fp)
  823adc:	1885c83a 	sub	r2,r3,r2
  823ae0:	01545f84 	movi	r5,20862
  823ae4:	1009883a 	mov	r4,r2
  823ae8:	08301e80 	call	8301e8 <__mulsi3>
  823aec:	e0bf9715 	stw	r2,-420(fp)
  823af0:	e0ff9517 	ldw	r3,-428(fp)
  823af4:	e0bf9417 	ldw	r2,-432(fp)
  823af8:	1885c83a 	sub	r2,r3,r2
  823afc:	01437244 	movi	r5,3529
  823b00:	1009883a 	mov	r4,r2
  823b04:	08301e80 	call	8301e8 <__mulsi3>
  823b08:	e0bf9815 	stw	r2,-416(fp)
  823b0c:	e0ff9417 	ldw	r3,-432(fp)
  823b10:	e0bf9617 	ldw	r2,-424(fp)
  823b14:	1885883a 	add	r2,r3,r2
  823b18:	e0bf9915 	stw	r2,-412(fp)
  823b1c:	0176c144 	movi	r5,-9467
  823b20:	e13f9917 	ldw	r4,-412(fp)
  823b24:	08301e80 	call	8301e8 <__mulsi3>
  823b28:	e0bf9a15 	stw	r2,-408(fp)
  823b2c:	e0ff9917 	ldw	r3,-412(fp)
  823b30:	e0bf9517 	ldw	r2,-428(fp)
  823b34:	1885c83a 	sub	r2,r3,r2
  823b38:	e0bf9915 	stw	r2,-412(fp)
  823b3c:	014adb04 	movi	r5,11116
  823b40:	e13f9917 	ldw	r4,-412(fp)
  823b44:	08301e80 	call	8301e8 <__mulsi3>
  823b48:	1007883a 	mov	r3,r2
  823b4c:	e0bf9317 	ldw	r2,-436(fp)
  823b50:	1885883a 	add	r2,r3,r2
  823b54:	e0bf9b15 	stw	r2,-404(fp)
  823b58:	e0ff9717 	ldw	r3,-420(fp)
  823b5c:	e0bf9817 	ldw	r2,-416(fp)
  823b60:	1887883a 	add	r3,r3,r2
  823b64:	e0bf9b17 	ldw	r2,-404(fp)
  823b68:	18a1883a 	add	r16,r3,r2
  823b6c:	01716d04 	movi	r5,-14924
  823b70:	e13f9517 	ldw	r4,-428(fp)
  823b74:	08301e80 	call	8301e8 <__mulsi3>
  823b78:	8085883a 	add	r2,r16,r2
  823b7c:	e0bf9c15 	stw	r2,-400(fp)
  823b80:	0150ed44 	movi	r5,17333
  823b84:	e13f9617 	ldw	r4,-424(fp)
  823b88:	08301e80 	call	8301e8 <__mulsi3>
  823b8c:	1007883a 	mov	r3,r2
  823b90:	e0bf9b17 	ldw	r2,-404(fp)
  823b94:	1885883a 	add	r2,r3,r2
  823b98:	e0ff9717 	ldw	r3,-420(fp)
  823b9c:	1885883a 	add	r2,r3,r2
  823ba0:	e0bf9715 	stw	r2,-420(fp)
  823ba4:	0173e444 	movi	r5,-12399
  823ba8:	e13f9417 	ldw	r4,-432(fp)
  823bac:	08301e80 	call	8301e8 <__mulsi3>
  823bb0:	1007883a 	mov	r3,r2
  823bb4:	e0bf9b17 	ldw	r2,-404(fp)
  823bb8:	1885883a 	add	r2,r3,r2
  823bbc:	e0ff9817 	ldw	r3,-416(fp)
  823bc0:	1885883a 	add	r2,r3,r2
  823bc4:	e0bf9815 	stw	r2,-416(fp)
  823bc8:	e0ff9a17 	ldw	r3,-408(fp)
  823bcc:	e0bf9b17 	ldw	r2,-404(fp)
  823bd0:	1885883a 	add	r2,r3,r2
  823bd4:	e0bf9a15 	stw	r2,-408(fp)
  823bd8:	0179b0c4 	movi	r5,-6461
  823bdc:	e13f9617 	ldw	r4,-424(fp)
  823be0:	08301e80 	call	8301e8 <__mulsi3>
  823be4:	1007883a 	mov	r3,r2
  823be8:	e0bf9a17 	ldw	r2,-408(fp)
  823bec:	1885883a 	add	r2,r3,r2
  823bf0:	e0bf9d15 	stw	r2,-396(fp)
  823bf4:	014f8e44 	movi	r5,15929
  823bf8:	e13f9517 	ldw	r4,-428(fp)
  823bfc:	08301e80 	call	8301e8 <__mulsi3>
  823c00:	1021883a 	mov	r16,r2
  823c04:	0174df44 	movi	r5,-11395
  823c08:	e13f9417 	ldw	r4,-432(fp)
  823c0c:	08301e80 	call	8301e8 <__mulsi3>
  823c10:	8085883a 	add	r2,r16,r2
  823c14:	e0ff9a17 	ldw	r3,-408(fp)
  823c18:	1885883a 	add	r2,r3,r2
  823c1c:	e0bf9a15 	stw	r2,-408(fp)
  823c20:	0174afc4 	movi	r5,-11585
  823c24:	e13f9917 	ldw	r4,-412(fp)
  823c28:	08301e80 	call	8301e8 <__mulsi3>
  823c2c:	1007883a 	mov	r3,r2
  823c30:	e0bf9317 	ldw	r2,-436(fp)
  823c34:	1885883a 	add	r2,r3,r2
  823c38:	e0bf9b15 	stw	r2,-404(fp)
  823c3c:	e0bf8e17 	ldw	r2,-456(fp)
  823c40:	10800404 	addi	r2,r2,16
  823c44:	1080000b 	ldhu	r2,0(r2)
  823c48:	10ffffcc 	andi	r3,r2,65535
  823c4c:	18e0001c 	xori	r3,r3,32768
  823c50:	18e00004 	addi	r3,r3,-32768
  823c54:	e0bf8f17 	ldw	r2,-452(fp)
  823c58:	10800804 	addi	r2,r2,32
  823c5c:	10800017 	ldw	r2,0(r2)
  823c60:	100b883a 	mov	r5,r2
  823c64:	1809883a 	mov	r4,r3
  823c68:	08301e80 	call	8301e8 <__mulsi3>
  823c6c:	e0bf9415 	stw	r2,-432(fp)
  823c70:	e0bf8e17 	ldw	r2,-456(fp)
  823c74:	10800c04 	addi	r2,r2,48
  823c78:	1080000b 	ldhu	r2,0(r2)
  823c7c:	10ffffcc 	andi	r3,r2,65535
  823c80:	18e0001c 	xori	r3,r3,32768
  823c84:	18e00004 	addi	r3,r3,-32768
  823c88:	e0bf8f17 	ldw	r2,-452(fp)
  823c8c:	10801804 	addi	r2,r2,96
  823c90:	10800017 	ldw	r2,0(r2)
  823c94:	100b883a 	mov	r5,r2
  823c98:	1809883a 	mov	r4,r3
  823c9c:	08301e80 	call	8301e8 <__mulsi3>
  823ca0:	e0bf9515 	stw	r2,-428(fp)
  823ca4:	e0bf8e17 	ldw	r2,-456(fp)
  823ca8:	10801404 	addi	r2,r2,80
  823cac:	1080000b 	ldhu	r2,0(r2)
  823cb0:	10ffffcc 	andi	r3,r2,65535
  823cb4:	18e0001c 	xori	r3,r3,32768
  823cb8:	18e00004 	addi	r3,r3,-32768
  823cbc:	e0bf8f17 	ldw	r2,-452(fp)
  823cc0:	10802804 	addi	r2,r2,160
  823cc4:	10800017 	ldw	r2,0(r2)
  823cc8:	100b883a 	mov	r5,r2
  823ccc:	1809883a 	mov	r4,r3
  823cd0:	08301e80 	call	8301e8 <__mulsi3>
  823cd4:	e0bf9615 	stw	r2,-424(fp)
  823cd8:	e0bf8e17 	ldw	r2,-456(fp)
  823cdc:	10801c04 	addi	r2,r2,112
  823ce0:	1080000b 	ldhu	r2,0(r2)
  823ce4:	10ffffcc 	andi	r3,r2,65535
  823ce8:	18e0001c 	xori	r3,r3,32768
  823cec:	18e00004 	addi	r3,r3,-32768
  823cf0:	e0bf8f17 	ldw	r2,-452(fp)
  823cf4:	10803804 	addi	r2,r2,224
  823cf8:	10800017 	ldw	r2,0(r2)
  823cfc:	100b883a 	mov	r5,r2
  823d00:	1809883a 	mov	r4,r3
  823d04:	08301e80 	call	8301e8 <__mulsi3>
  823d08:	e0bf9915 	stw	r2,-412(fp)
  823d0c:	e0ff9417 	ldw	r3,-432(fp)
  823d10:	e0bf9517 	ldw	r2,-428(fp)
  823d14:	1885883a 	add	r2,r3,r2
  823d18:	e0bf9e15 	stw	r2,-392(fp)
  823d1c:	e0ff9e17 	ldw	r3,-392(fp)
  823d20:	e0bf9617 	ldw	r2,-424(fp)
  823d24:	1887883a 	add	r3,r3,r2
  823d28:	e0bf9917 	ldw	r2,-412(fp)
  823d2c:	1885883a 	add	r2,r3,r2
  823d30:	01433004 	movi	r5,3264
  823d34:	1009883a 	mov	r4,r2
  823d38:	08301e80 	call	8301e8 <__mulsi3>
  823d3c:	e0bf9f15 	stw	r2,-388(fp)
  823d40:	01471a84 	movi	r5,7274
  823d44:	e13f9e17 	ldw	r4,-392(fp)
  823d48:	08301e80 	call	8301e8 <__mulsi3>
  823d4c:	e0bf9e15 	stw	r2,-392(fp)
  823d50:	e0ff9417 	ldw	r3,-432(fp)
  823d54:	e0bf9617 	ldw	r2,-424(fp)
  823d58:	1885883a 	add	r2,r3,r2
  823d5c:	01455d04 	movi	r5,5492
  823d60:	1009883a 	mov	r4,r2
  823d64:	08301e80 	call	8301e8 <__mulsi3>
  823d68:	e0bfa015 	stw	r2,-384(fp)
  823d6c:	e0ff9417 	ldw	r3,-432(fp)
  823d70:	e0bf9917 	ldw	r2,-412(fp)
  823d74:	1885883a 	add	r2,r3,r2
  823d78:	0142ee04 	movi	r5,3000
  823d7c:	1009883a 	mov	r4,r2
  823d80:	08301e80 	call	8301e8 <__mulsi3>
  823d84:	1007883a 	mov	r3,r2
  823d88:	e0bf9f17 	ldw	r2,-388(fp)
  823d8c:	1885883a 	add	r2,r3,r2
  823d90:	e0bfa115 	stw	r2,-380(fp)
  823d94:	e0ff9e17 	ldw	r3,-392(fp)
  823d98:	e0bfa017 	ldw	r2,-384(fp)
  823d9c:	1887883a 	add	r3,r3,r2
  823da0:	e0bfa117 	ldw	r2,-380(fp)
  823da4:	18a1883a 	add	r16,r3,r2
  823da8:	01789d84 	movi	r5,-7562
  823dac:	e13f9417 	ldw	r4,-432(fp)
  823db0:	08301e80 	call	8301e8 <__mulsi3>
  823db4:	8085883a 	add	r2,r16,r2
  823db8:	e0bf9315 	stw	r2,-436(fp)
  823dbc:	e0ff9517 	ldw	r3,-428(fp)
  823dc0:	e0bf9617 	ldw	r2,-424(fp)
  823dc4:	1885883a 	add	r2,r3,r2
  823dc8:	0176b244 	movi	r5,-9527
  823dcc:	1009883a 	mov	r4,r2
  823dd0:	08301e80 	call	8301e8 <__mulsi3>
  823dd4:	1007883a 	mov	r3,r2
  823dd8:	e0bf9f17 	ldw	r2,-388(fp)
  823ddc:	1885883a 	add	r2,r3,r2
  823de0:	e0bf9415 	stw	r2,-432(fp)
  823de4:	01509604 	movi	r5,16984
  823de8:	e13f9517 	ldw	r4,-428(fp)
  823dec:	08301e80 	call	8301e8 <__mulsi3>
  823df0:	1007883a 	mov	r3,r2
  823df4:	e0bf9417 	ldw	r2,-432(fp)
  823df8:	1885883a 	add	r2,r3,r2
  823dfc:	e0ff9e17 	ldw	r3,-392(fp)
  823e00:	1885883a 	add	r2,r3,r2
  823e04:	e0bf9e15 	stw	r2,-392(fp)
  823e08:	01767684 	movi	r5,-9766
  823e0c:	e13f9617 	ldw	r4,-424(fp)
  823e10:	08301e80 	call	8301e8 <__mulsi3>
  823e14:	1007883a 	mov	r3,r2
  823e18:	e0bf9417 	ldw	r2,-432(fp)
  823e1c:	1885883a 	add	r2,r3,r2
  823e20:	e0ffa017 	ldw	r3,-384(fp)
  823e24:	1885883a 	add	r2,r3,r2
  823e28:	e0bfa015 	stw	r2,-384(fp)
  823e2c:	e0ff9517 	ldw	r3,-428(fp)
  823e30:	e0bf9917 	ldw	r2,-412(fp)
  823e34:	1885883a 	add	r2,r3,r2
  823e38:	01719d44 	movi	r5,-14731
  823e3c:	1009883a 	mov	r4,r2
  823e40:	08301e80 	call	8301e8 <__mulsi3>
  823e44:	e0bf9415 	stw	r2,-432(fp)
  823e48:	e0ff9e17 	ldw	r3,-392(fp)
  823e4c:	e0bf9417 	ldw	r2,-432(fp)
  823e50:	1885883a 	add	r2,r3,r2
  823e54:	e0bf9e15 	stw	r2,-392(fp)
  823e58:	0150d1c4 	movi	r5,17223
  823e5c:	e13f9917 	ldw	r4,-412(fp)
  823e60:	08301e80 	call	8301e8 <__mulsi3>
  823e64:	1007883a 	mov	r3,r2
  823e68:	e0bf9417 	ldw	r2,-432(fp)
  823e6c:	1885883a 	add	r2,r3,r2
  823e70:	e0ffa117 	ldw	r3,-380(fp)
  823e74:	1885883a 	add	r2,r3,r2
  823e78:	e0bfa115 	stw	r2,-380(fp)
  823e7c:	01744344 	movi	r5,-12019
  823e80:	e13f9517 	ldw	r4,-428(fp)
  823e84:	08301e80 	call	8301e8 <__mulsi3>
  823e88:	1021883a 	mov	r16,r2
  823e8c:	014802c4 	movi	r5,8203
  823e90:	e13f9617 	ldw	r4,-424(fp)
  823e94:	08301e80 	call	8301e8 <__mulsi3>
  823e98:	80a1883a 	add	r16,r16,r2
  823e9c:	01728584 	movi	r5,-13802
  823ea0:	e13f9917 	ldw	r4,-412(fp)
  823ea4:	08301e80 	call	8301e8 <__mulsi3>
  823ea8:	8085883a 	add	r2,r16,r2
  823eac:	e0ff9f17 	ldw	r3,-388(fp)
  823eb0:	1885883a 	add	r2,r3,r2
  823eb4:	e0bf9f15 	stw	r2,-388(fp)
  823eb8:	e0ff9717 	ldw	r3,-420(fp)
  823ebc:	e0bf9317 	ldw	r2,-436(fp)
  823ec0:	1885883a 	add	r2,r3,r2
  823ec4:	1007d2fa 	srai	r3,r2,11
  823ec8:	e0bf9017 	ldw	r2,-448(fp)
  823ecc:	10c00015 	stw	r3,0(r2)
  823ed0:	e0bf9017 	ldw	r2,-448(fp)
  823ed4:	10805004 	addi	r2,r2,320
  823ed8:	e13f9717 	ldw	r4,-420(fp)
  823edc:	e0ff9317 	ldw	r3,-436(fp)
  823ee0:	20c7c83a 	sub	r3,r4,r3
  823ee4:	1807d2fa 	srai	r3,r3,11
  823ee8:	10c00015 	stw	r3,0(r2)
  823eec:	e0bf9017 	ldw	r2,-448(fp)
  823ef0:	10800804 	addi	r2,r2,32
  823ef4:	e13f9c17 	ldw	r4,-400(fp)
  823ef8:	e0ff9e17 	ldw	r3,-392(fp)
  823efc:	20c7883a 	add	r3,r4,r3
  823f00:	1807d2fa 	srai	r3,r3,11
  823f04:	10c00015 	stw	r3,0(r2)
  823f08:	e0bf9017 	ldw	r2,-448(fp)
  823f0c:	10804804 	addi	r2,r2,288
  823f10:	e13f9c17 	ldw	r4,-400(fp)
  823f14:	e0ff9e17 	ldw	r3,-392(fp)
  823f18:	20c7c83a 	sub	r3,r4,r3
  823f1c:	1807d2fa 	srai	r3,r3,11
  823f20:	10c00015 	stw	r3,0(r2)
  823f24:	e0bf9017 	ldw	r2,-448(fp)
  823f28:	10801004 	addi	r2,r2,64
  823f2c:	e13f9d17 	ldw	r4,-396(fp)
  823f30:	e0ffa017 	ldw	r3,-384(fp)
  823f34:	20c7883a 	add	r3,r4,r3
  823f38:	1807d2fa 	srai	r3,r3,11
  823f3c:	10c00015 	stw	r3,0(r2)
  823f40:	e0bf9017 	ldw	r2,-448(fp)
  823f44:	10804004 	addi	r2,r2,256
  823f48:	e13f9d17 	ldw	r4,-396(fp)
  823f4c:	e0ffa017 	ldw	r3,-384(fp)
  823f50:	20c7c83a 	sub	r3,r4,r3
  823f54:	1807d2fa 	srai	r3,r3,11
  823f58:	10c00015 	stw	r3,0(r2)
  823f5c:	e0bf9017 	ldw	r2,-448(fp)
  823f60:	10801804 	addi	r2,r2,96
  823f64:	e13f9817 	ldw	r4,-416(fp)
  823f68:	e0ffa117 	ldw	r3,-380(fp)
  823f6c:	20c7883a 	add	r3,r4,r3
  823f70:	1807d2fa 	srai	r3,r3,11
  823f74:	10c00015 	stw	r3,0(r2)
  823f78:	e0bf9017 	ldw	r2,-448(fp)
  823f7c:	10803804 	addi	r2,r2,224
  823f80:	e13f9817 	ldw	r4,-416(fp)
  823f84:	e0ffa117 	ldw	r3,-380(fp)
  823f88:	20c7c83a 	sub	r3,r4,r3
  823f8c:	1807d2fa 	srai	r3,r3,11
  823f90:	10c00015 	stw	r3,0(r2)
  823f94:	e0bf9017 	ldw	r2,-448(fp)
  823f98:	10802004 	addi	r2,r2,128
  823f9c:	e13f9a17 	ldw	r4,-408(fp)
  823fa0:	e0ff9f17 	ldw	r3,-388(fp)
  823fa4:	20c7883a 	add	r3,r4,r3
  823fa8:	1807d2fa 	srai	r3,r3,11
  823fac:	10c00015 	stw	r3,0(r2)
  823fb0:	e0bf9017 	ldw	r2,-448(fp)
  823fb4:	10803004 	addi	r2,r2,192
  823fb8:	e13f9a17 	ldw	r4,-408(fp)
  823fbc:	e0ff9f17 	ldw	r3,-388(fp)
  823fc0:	20c7c83a 	sub	r3,r4,r3
  823fc4:	1807d2fa 	srai	r3,r3,11
  823fc8:	10c00015 	stw	r3,0(r2)
  823fcc:	e0bf9017 	ldw	r2,-448(fp)
  823fd0:	10802804 	addi	r2,r2,160
  823fd4:	e0ff9b17 	ldw	r3,-404(fp)
  823fd8:	1807d2fa 	srai	r3,r3,11
  823fdc:	10c00015 	stw	r3,0(r2)
  823fe0:	e0bf9117 	ldw	r2,-444(fp)
  823fe4:	10800044 	addi	r2,r2,1
  823fe8:	e0bf9115 	stw	r2,-444(fp)
  823fec:	e0bf8e17 	ldw	r2,-456(fp)
  823ff0:	10800084 	addi	r2,r2,2
  823ff4:	e0bf8e15 	stw	r2,-456(fp)
  823ff8:	e0bf8f17 	ldw	r2,-452(fp)
  823ffc:	10800104 	addi	r2,r2,4
  824000:	e0bf8f15 	stw	r2,-452(fp)
  824004:	e0bf9017 	ldw	r2,-448(fp)
  824008:	10800104 	addi	r2,r2,4
  82400c:	e0bf9015 	stw	r2,-448(fp)
  824010:	e0bf9117 	ldw	r2,-444(fp)
  824014:	10800210 	cmplti	r2,r2,8
  824018:	103e761e 	bne	r2,zero,8239f4 <__alt_mem_epcs_flash_controller_0+0xff81a9f4>
  82401c:	e0bfa304 	addi	r2,fp,-372
  824020:	e0bf9015 	stw	r2,-448(fp)
  824024:	e03f9115 	stw	zero,-444(fp)
  824028:	00016e06 	br	8245e4 <jpeg_idct_11x11+0xc48>
  82402c:	e0bf9117 	ldw	r2,-444(fp)
  824030:	1085883a 	add	r2,r2,r2
  824034:	1085883a 	add	r2,r2,r2
  824038:	1007883a 	mov	r3,r2
  82403c:	e0bffe17 	ldw	r2,-8(fp)
  824040:	10c5883a 	add	r2,r2,r3
  824044:	10c00017 	ldw	r3,0(r2)
  824048:	e0800217 	ldw	r2,8(fp)
  82404c:	1885883a 	add	r2,r3,r2
  824050:	e0bfa215 	stw	r2,-376(fp)
  824054:	e0bf9017 	ldw	r2,-448(fp)
  824058:	10800017 	ldw	r2,0(r2)
  82405c:	10900404 	addi	r2,r2,16400
  824060:	e0bf9315 	stw	r2,-436(fp)
  824064:	e0bf9317 	ldw	r2,-436(fp)
  824068:	1004937a 	slli	r2,r2,13
  82406c:	e0bf9315 	stw	r2,-436(fp)
  824070:	e0bf9017 	ldw	r2,-448(fp)
  824074:	10800204 	addi	r2,r2,8
  824078:	10800017 	ldw	r2,0(r2)
  82407c:	e0bf9415 	stw	r2,-432(fp)
  824080:	e0bf9017 	ldw	r2,-448(fp)
  824084:	10800404 	addi	r2,r2,16
  824088:	10800017 	ldw	r2,0(r2)
  82408c:	e0bf9515 	stw	r2,-428(fp)
  824090:	e0bf9017 	ldw	r2,-448(fp)
  824094:	10800604 	addi	r2,r2,24
  824098:	10800017 	ldw	r2,0(r2)
  82409c:	e0bf9615 	stw	r2,-424(fp)
  8240a0:	e0ff9517 	ldw	r3,-428(fp)
  8240a4:	e0bf9617 	ldw	r2,-424(fp)
  8240a8:	1885c83a 	sub	r2,r3,r2
  8240ac:	01545f84 	movi	r5,20862
  8240b0:	1009883a 	mov	r4,r2
  8240b4:	08301e80 	call	8301e8 <__mulsi3>
  8240b8:	e0bf9715 	stw	r2,-420(fp)
  8240bc:	e0ff9517 	ldw	r3,-428(fp)
  8240c0:	e0bf9417 	ldw	r2,-432(fp)
  8240c4:	1885c83a 	sub	r2,r3,r2
  8240c8:	01437244 	movi	r5,3529
  8240cc:	1009883a 	mov	r4,r2
  8240d0:	08301e80 	call	8301e8 <__mulsi3>
  8240d4:	e0bf9815 	stw	r2,-416(fp)
  8240d8:	e0ff9417 	ldw	r3,-432(fp)
  8240dc:	e0bf9617 	ldw	r2,-424(fp)
  8240e0:	1885883a 	add	r2,r3,r2
  8240e4:	e0bf9915 	stw	r2,-412(fp)
  8240e8:	0176c144 	movi	r5,-9467
  8240ec:	e13f9917 	ldw	r4,-412(fp)
  8240f0:	08301e80 	call	8301e8 <__mulsi3>
  8240f4:	e0bf9a15 	stw	r2,-408(fp)
  8240f8:	e0ff9917 	ldw	r3,-412(fp)
  8240fc:	e0bf9517 	ldw	r2,-428(fp)
  824100:	1885c83a 	sub	r2,r3,r2
  824104:	e0bf9915 	stw	r2,-412(fp)
  824108:	014adb04 	movi	r5,11116
  82410c:	e13f9917 	ldw	r4,-412(fp)
  824110:	08301e80 	call	8301e8 <__mulsi3>
  824114:	1007883a 	mov	r3,r2
  824118:	e0bf9317 	ldw	r2,-436(fp)
  82411c:	1885883a 	add	r2,r3,r2
  824120:	e0bf9b15 	stw	r2,-404(fp)
  824124:	e0ff9717 	ldw	r3,-420(fp)
  824128:	e0bf9817 	ldw	r2,-416(fp)
  82412c:	1887883a 	add	r3,r3,r2
  824130:	e0bf9b17 	ldw	r2,-404(fp)
  824134:	18a1883a 	add	r16,r3,r2
  824138:	01716d04 	movi	r5,-14924
  82413c:	e13f9517 	ldw	r4,-428(fp)
  824140:	08301e80 	call	8301e8 <__mulsi3>
  824144:	8085883a 	add	r2,r16,r2
  824148:	e0bf9c15 	stw	r2,-400(fp)
  82414c:	0150ed44 	movi	r5,17333
  824150:	e13f9617 	ldw	r4,-424(fp)
  824154:	08301e80 	call	8301e8 <__mulsi3>
  824158:	1007883a 	mov	r3,r2
  82415c:	e0bf9b17 	ldw	r2,-404(fp)
  824160:	1885883a 	add	r2,r3,r2
  824164:	e0ff9717 	ldw	r3,-420(fp)
  824168:	1885883a 	add	r2,r3,r2
  82416c:	e0bf9715 	stw	r2,-420(fp)
  824170:	0173e444 	movi	r5,-12399
  824174:	e13f9417 	ldw	r4,-432(fp)
  824178:	08301e80 	call	8301e8 <__mulsi3>
  82417c:	1007883a 	mov	r3,r2
  824180:	e0bf9b17 	ldw	r2,-404(fp)
  824184:	1885883a 	add	r2,r3,r2
  824188:	e0ff9817 	ldw	r3,-416(fp)
  82418c:	1885883a 	add	r2,r3,r2
  824190:	e0bf9815 	stw	r2,-416(fp)
  824194:	e0ff9a17 	ldw	r3,-408(fp)
  824198:	e0bf9b17 	ldw	r2,-404(fp)
  82419c:	1885883a 	add	r2,r3,r2
  8241a0:	e0bf9a15 	stw	r2,-408(fp)
  8241a4:	0179b0c4 	movi	r5,-6461
  8241a8:	e13f9617 	ldw	r4,-424(fp)
  8241ac:	08301e80 	call	8301e8 <__mulsi3>
  8241b0:	1007883a 	mov	r3,r2
  8241b4:	e0bf9a17 	ldw	r2,-408(fp)
  8241b8:	1885883a 	add	r2,r3,r2
  8241bc:	e0bf9d15 	stw	r2,-396(fp)
  8241c0:	014f8e44 	movi	r5,15929
  8241c4:	e13f9517 	ldw	r4,-428(fp)
  8241c8:	08301e80 	call	8301e8 <__mulsi3>
  8241cc:	1021883a 	mov	r16,r2
  8241d0:	0174df44 	movi	r5,-11395
  8241d4:	e13f9417 	ldw	r4,-432(fp)
  8241d8:	08301e80 	call	8301e8 <__mulsi3>
  8241dc:	8085883a 	add	r2,r16,r2
  8241e0:	e0ff9a17 	ldw	r3,-408(fp)
  8241e4:	1885883a 	add	r2,r3,r2
  8241e8:	e0bf9a15 	stw	r2,-408(fp)
  8241ec:	0174afc4 	movi	r5,-11585
  8241f0:	e13f9917 	ldw	r4,-412(fp)
  8241f4:	08301e80 	call	8301e8 <__mulsi3>
  8241f8:	1007883a 	mov	r3,r2
  8241fc:	e0bf9317 	ldw	r2,-436(fp)
  824200:	1885883a 	add	r2,r3,r2
  824204:	e0bf9b15 	stw	r2,-404(fp)
  824208:	e0bf9017 	ldw	r2,-448(fp)
  82420c:	10800104 	addi	r2,r2,4
  824210:	10800017 	ldw	r2,0(r2)
  824214:	e0bf9415 	stw	r2,-432(fp)
  824218:	e0bf9017 	ldw	r2,-448(fp)
  82421c:	10800304 	addi	r2,r2,12
  824220:	10800017 	ldw	r2,0(r2)
  824224:	e0bf9515 	stw	r2,-428(fp)
  824228:	e0bf9017 	ldw	r2,-448(fp)
  82422c:	10800504 	addi	r2,r2,20
  824230:	10800017 	ldw	r2,0(r2)
  824234:	e0bf9615 	stw	r2,-424(fp)
  824238:	e0bf9017 	ldw	r2,-448(fp)
  82423c:	10800704 	addi	r2,r2,28
  824240:	10800017 	ldw	r2,0(r2)
  824244:	e0bf9915 	stw	r2,-412(fp)
  824248:	e0ff9417 	ldw	r3,-432(fp)
  82424c:	e0bf9517 	ldw	r2,-428(fp)
  824250:	1885883a 	add	r2,r3,r2
  824254:	e0bf9e15 	stw	r2,-392(fp)
  824258:	e0ff9e17 	ldw	r3,-392(fp)
  82425c:	e0bf9617 	ldw	r2,-424(fp)
  824260:	1887883a 	add	r3,r3,r2
  824264:	e0bf9917 	ldw	r2,-412(fp)
  824268:	1885883a 	add	r2,r3,r2
  82426c:	01433004 	movi	r5,3264
  824270:	1009883a 	mov	r4,r2
  824274:	08301e80 	call	8301e8 <__mulsi3>
  824278:	e0bf9f15 	stw	r2,-388(fp)
  82427c:	01471a84 	movi	r5,7274
  824280:	e13f9e17 	ldw	r4,-392(fp)
  824284:	08301e80 	call	8301e8 <__mulsi3>
  824288:	e0bf9e15 	stw	r2,-392(fp)
  82428c:	e0ff9417 	ldw	r3,-432(fp)
  824290:	e0bf9617 	ldw	r2,-424(fp)
  824294:	1885883a 	add	r2,r3,r2
  824298:	01455d04 	movi	r5,5492
  82429c:	1009883a 	mov	r4,r2
  8242a0:	08301e80 	call	8301e8 <__mulsi3>
  8242a4:	e0bfa015 	stw	r2,-384(fp)
  8242a8:	e0ff9417 	ldw	r3,-432(fp)
  8242ac:	e0bf9917 	ldw	r2,-412(fp)
  8242b0:	1885883a 	add	r2,r3,r2
  8242b4:	0142ee04 	movi	r5,3000
  8242b8:	1009883a 	mov	r4,r2
  8242bc:	08301e80 	call	8301e8 <__mulsi3>
  8242c0:	1007883a 	mov	r3,r2
  8242c4:	e0bf9f17 	ldw	r2,-388(fp)
  8242c8:	1885883a 	add	r2,r3,r2
  8242cc:	e0bfa115 	stw	r2,-380(fp)
  8242d0:	e0ff9e17 	ldw	r3,-392(fp)
  8242d4:	e0bfa017 	ldw	r2,-384(fp)
  8242d8:	1887883a 	add	r3,r3,r2
  8242dc:	e0bfa117 	ldw	r2,-380(fp)
  8242e0:	18a1883a 	add	r16,r3,r2
  8242e4:	01789d84 	movi	r5,-7562
  8242e8:	e13f9417 	ldw	r4,-432(fp)
  8242ec:	08301e80 	call	8301e8 <__mulsi3>
  8242f0:	8085883a 	add	r2,r16,r2
  8242f4:	e0bf9315 	stw	r2,-436(fp)
  8242f8:	e0ff9517 	ldw	r3,-428(fp)
  8242fc:	e0bf9617 	ldw	r2,-424(fp)
  824300:	1885883a 	add	r2,r3,r2
  824304:	0176b244 	movi	r5,-9527
  824308:	1009883a 	mov	r4,r2
  82430c:	08301e80 	call	8301e8 <__mulsi3>
  824310:	1007883a 	mov	r3,r2
  824314:	e0bf9f17 	ldw	r2,-388(fp)
  824318:	1885883a 	add	r2,r3,r2
  82431c:	e0bf9415 	stw	r2,-432(fp)
  824320:	01509604 	movi	r5,16984
  824324:	e13f9517 	ldw	r4,-428(fp)
  824328:	08301e80 	call	8301e8 <__mulsi3>
  82432c:	1007883a 	mov	r3,r2
  824330:	e0bf9417 	ldw	r2,-432(fp)
  824334:	1885883a 	add	r2,r3,r2
  824338:	e0ff9e17 	ldw	r3,-392(fp)
  82433c:	1885883a 	add	r2,r3,r2
  824340:	e0bf9e15 	stw	r2,-392(fp)
  824344:	01767684 	movi	r5,-9766
  824348:	e13f9617 	ldw	r4,-424(fp)
  82434c:	08301e80 	call	8301e8 <__mulsi3>
  824350:	1007883a 	mov	r3,r2
  824354:	e0bf9417 	ldw	r2,-432(fp)
  824358:	1885883a 	add	r2,r3,r2
  82435c:	e0ffa017 	ldw	r3,-384(fp)
  824360:	1885883a 	add	r2,r3,r2
  824364:	e0bfa015 	stw	r2,-384(fp)
  824368:	e0ff9517 	ldw	r3,-428(fp)
  82436c:	e0bf9917 	ldw	r2,-412(fp)
  824370:	1885883a 	add	r2,r3,r2
  824374:	01719d44 	movi	r5,-14731
  824378:	1009883a 	mov	r4,r2
  82437c:	08301e80 	call	8301e8 <__mulsi3>
  824380:	e0bf9415 	stw	r2,-432(fp)
  824384:	e0ff9e17 	ldw	r3,-392(fp)
  824388:	e0bf9417 	ldw	r2,-432(fp)
  82438c:	1885883a 	add	r2,r3,r2
  824390:	e0bf9e15 	stw	r2,-392(fp)
  824394:	0150d1c4 	movi	r5,17223
  824398:	e13f9917 	ldw	r4,-412(fp)
  82439c:	08301e80 	call	8301e8 <__mulsi3>
  8243a0:	1007883a 	mov	r3,r2
  8243a4:	e0bf9417 	ldw	r2,-432(fp)
  8243a8:	1885883a 	add	r2,r3,r2
  8243ac:	e0ffa117 	ldw	r3,-380(fp)
  8243b0:	1885883a 	add	r2,r3,r2
  8243b4:	e0bfa115 	stw	r2,-380(fp)
  8243b8:	01744344 	movi	r5,-12019
  8243bc:	e13f9517 	ldw	r4,-428(fp)
  8243c0:	08301e80 	call	8301e8 <__mulsi3>
  8243c4:	1021883a 	mov	r16,r2
  8243c8:	014802c4 	movi	r5,8203
  8243cc:	e13f9617 	ldw	r4,-424(fp)
  8243d0:	08301e80 	call	8301e8 <__mulsi3>
  8243d4:	80a1883a 	add	r16,r16,r2
  8243d8:	01728584 	movi	r5,-13802
  8243dc:	e13f9917 	ldw	r4,-412(fp)
  8243e0:	08301e80 	call	8301e8 <__mulsi3>
  8243e4:	8085883a 	add	r2,r16,r2
  8243e8:	e0ff9f17 	ldw	r3,-388(fp)
  8243ec:	1885883a 	add	r2,r3,r2
  8243f0:	e0bf9f15 	stw	r2,-388(fp)
  8243f4:	e0ff9717 	ldw	r3,-420(fp)
  8243f8:	e0bf9317 	ldw	r2,-436(fp)
  8243fc:	1885883a 	add	r2,r3,r2
  824400:	1005d4ba 	srai	r2,r2,18
  824404:	1080ffcc 	andi	r2,r2,1023
  824408:	e0ff9217 	ldw	r3,-440(fp)
  82440c:	1885883a 	add	r2,r3,r2
  824410:	10c00003 	ldbu	r3,0(r2)
  824414:	e0bfa217 	ldw	r2,-376(fp)
  824418:	10c00005 	stb	r3,0(r2)
  82441c:	e0bfa217 	ldw	r2,-376(fp)
  824420:	10800284 	addi	r2,r2,10
  824424:	e13f9717 	ldw	r4,-420(fp)
  824428:	e0ff9317 	ldw	r3,-436(fp)
  82442c:	20c7c83a 	sub	r3,r4,r3
  824430:	1807d4ba 	srai	r3,r3,18
  824434:	18c0ffcc 	andi	r3,r3,1023
  824438:	e13f9217 	ldw	r4,-440(fp)
  82443c:	20c7883a 	add	r3,r4,r3
  824440:	18c00003 	ldbu	r3,0(r3)
  824444:	10c00005 	stb	r3,0(r2)
  824448:	e0bfa217 	ldw	r2,-376(fp)
  82444c:	10800044 	addi	r2,r2,1
  824450:	e13f9c17 	ldw	r4,-400(fp)
  824454:	e0ff9e17 	ldw	r3,-392(fp)
  824458:	20c7883a 	add	r3,r4,r3
  82445c:	1807d4ba 	srai	r3,r3,18
  824460:	18c0ffcc 	andi	r3,r3,1023
  824464:	e13f9217 	ldw	r4,-440(fp)
  824468:	20c7883a 	add	r3,r4,r3
  82446c:	18c00003 	ldbu	r3,0(r3)
  824470:	10c00005 	stb	r3,0(r2)
  824474:	e0bfa217 	ldw	r2,-376(fp)
  824478:	10800244 	addi	r2,r2,9
  82447c:	e13f9c17 	ldw	r4,-400(fp)
  824480:	e0ff9e17 	ldw	r3,-392(fp)
  824484:	20c7c83a 	sub	r3,r4,r3
  824488:	1807d4ba 	srai	r3,r3,18
  82448c:	18c0ffcc 	andi	r3,r3,1023
  824490:	e13f9217 	ldw	r4,-440(fp)
  824494:	20c7883a 	add	r3,r4,r3
  824498:	18c00003 	ldbu	r3,0(r3)
  82449c:	10c00005 	stb	r3,0(r2)
  8244a0:	e0bfa217 	ldw	r2,-376(fp)
  8244a4:	10800084 	addi	r2,r2,2
  8244a8:	e13f9d17 	ldw	r4,-396(fp)
  8244ac:	e0ffa017 	ldw	r3,-384(fp)
  8244b0:	20c7883a 	add	r3,r4,r3
  8244b4:	1807d4ba 	srai	r3,r3,18
  8244b8:	18c0ffcc 	andi	r3,r3,1023
  8244bc:	e13f9217 	ldw	r4,-440(fp)
  8244c0:	20c7883a 	add	r3,r4,r3
  8244c4:	18c00003 	ldbu	r3,0(r3)
  8244c8:	10c00005 	stb	r3,0(r2)
  8244cc:	e0bfa217 	ldw	r2,-376(fp)
  8244d0:	10800204 	addi	r2,r2,8
  8244d4:	e13f9d17 	ldw	r4,-396(fp)
  8244d8:	e0ffa017 	ldw	r3,-384(fp)
  8244dc:	20c7c83a 	sub	r3,r4,r3
  8244e0:	1807d4ba 	srai	r3,r3,18
  8244e4:	18c0ffcc 	andi	r3,r3,1023
  8244e8:	e13f9217 	ldw	r4,-440(fp)
  8244ec:	20c7883a 	add	r3,r4,r3
  8244f0:	18c00003 	ldbu	r3,0(r3)
  8244f4:	10c00005 	stb	r3,0(r2)
  8244f8:	e0bfa217 	ldw	r2,-376(fp)
  8244fc:	108000c4 	addi	r2,r2,3
  824500:	e13f9817 	ldw	r4,-416(fp)
  824504:	e0ffa117 	ldw	r3,-380(fp)
  824508:	20c7883a 	add	r3,r4,r3
  82450c:	1807d4ba 	srai	r3,r3,18
  824510:	18c0ffcc 	andi	r3,r3,1023
  824514:	e13f9217 	ldw	r4,-440(fp)
  824518:	20c7883a 	add	r3,r4,r3
  82451c:	18c00003 	ldbu	r3,0(r3)
  824520:	10c00005 	stb	r3,0(r2)
  824524:	e0bfa217 	ldw	r2,-376(fp)
  824528:	108001c4 	addi	r2,r2,7
  82452c:	e13f9817 	ldw	r4,-416(fp)
  824530:	e0ffa117 	ldw	r3,-380(fp)
  824534:	20c7c83a 	sub	r3,r4,r3
  824538:	1807d4ba 	srai	r3,r3,18
  82453c:	18c0ffcc 	andi	r3,r3,1023
  824540:	e13f9217 	ldw	r4,-440(fp)
  824544:	20c7883a 	add	r3,r4,r3
  824548:	18c00003 	ldbu	r3,0(r3)
  82454c:	10c00005 	stb	r3,0(r2)
  824550:	e0bfa217 	ldw	r2,-376(fp)
  824554:	10800104 	addi	r2,r2,4
  824558:	e13f9a17 	ldw	r4,-408(fp)
  82455c:	e0ff9f17 	ldw	r3,-388(fp)
  824560:	20c7883a 	add	r3,r4,r3
  824564:	1807d4ba 	srai	r3,r3,18
  824568:	18c0ffcc 	andi	r3,r3,1023
  82456c:	e13f9217 	ldw	r4,-440(fp)
  824570:	20c7883a 	add	r3,r4,r3
  824574:	18c00003 	ldbu	r3,0(r3)
  824578:	10c00005 	stb	r3,0(r2)
  82457c:	e0bfa217 	ldw	r2,-376(fp)
  824580:	10800184 	addi	r2,r2,6
  824584:	e13f9a17 	ldw	r4,-408(fp)
  824588:	e0ff9f17 	ldw	r3,-388(fp)
  82458c:	20c7c83a 	sub	r3,r4,r3
  824590:	1807d4ba 	srai	r3,r3,18
  824594:	18c0ffcc 	andi	r3,r3,1023
  824598:	e13f9217 	ldw	r4,-440(fp)
  82459c:	20c7883a 	add	r3,r4,r3
  8245a0:	18c00003 	ldbu	r3,0(r3)
  8245a4:	10c00005 	stb	r3,0(r2)
  8245a8:	e0bfa217 	ldw	r2,-376(fp)
  8245ac:	10800144 	addi	r2,r2,5
  8245b0:	e0ff9b17 	ldw	r3,-404(fp)
  8245b4:	1807d4ba 	srai	r3,r3,18
  8245b8:	18c0ffcc 	andi	r3,r3,1023
  8245bc:	e13f9217 	ldw	r4,-440(fp)
  8245c0:	20c7883a 	add	r3,r4,r3
  8245c4:	18c00003 	ldbu	r3,0(r3)
  8245c8:	10c00005 	stb	r3,0(r2)
  8245cc:	e0bf9017 	ldw	r2,-448(fp)
  8245d0:	10800804 	addi	r2,r2,32
  8245d4:	e0bf9015 	stw	r2,-448(fp)
  8245d8:	e0bf9117 	ldw	r2,-444(fp)
  8245dc:	10800044 	addi	r2,r2,1
  8245e0:	e0bf9115 	stw	r2,-444(fp)
  8245e4:	e0bf9117 	ldw	r2,-444(fp)
  8245e8:	108002d0 	cmplti	r2,r2,11
  8245ec:	103e8f1e 	bne	r2,zero,82402c <__alt_mem_epcs_flash_controller_0+0xff81b02c>
  8245f0:	0001883a 	nop
  8245f4:	e6ffff04 	addi	sp,fp,-4
  8245f8:	dfc00217 	ldw	ra,8(sp)
  8245fc:	df000117 	ldw	fp,4(sp)
  824600:	dc000017 	ldw	r16,0(sp)
  824604:	dec00304 	addi	sp,sp,12
  824608:	f800283a 	ret

0082460c <jpeg_idct_12x12>:
  82460c:	deff8304 	addi	sp,sp,-500
  824610:	dfc07c15 	stw	ra,496(sp)
  824614:	df007b15 	stw	fp,492(sp)
  824618:	dc007a15 	stw	r16,488(sp)
  82461c:	df007b04 	addi	fp,sp,492
  824620:	e13ffb15 	stw	r4,-20(fp)
  824624:	e17ffc15 	stw	r5,-16(fp)
  824628:	e1bffd15 	stw	r6,-12(fp)
  82462c:	e1fffe15 	stw	r7,-8(fp)
  824630:	e0bffb17 	ldw	r2,-20(fp)
  824634:	10805417 	ldw	r2,336(r2)
  824638:	10bfa004 	addi	r2,r2,-384
  82463c:	e0bf8915 	stw	r2,-476(fp)
  824640:	e0bffd17 	ldw	r2,-12(fp)
  824644:	e0bf8515 	stw	r2,-492(fp)
  824648:	e0bffc17 	ldw	r2,-16(fp)
  82464c:	10801517 	ldw	r2,84(r2)
  824650:	e0bf8615 	stw	r2,-488(fp)
  824654:	e0bf9b04 	addi	r2,fp,-404
  824658:	e0bf8715 	stw	r2,-484(fp)
  82465c:	e03f8815 	stw	zero,-480(fp)
  824660:	00016e06 	br	824c1c <jpeg_idct_12x12+0x610>
  824664:	e0bf8517 	ldw	r2,-492(fp)
  824668:	1080000b 	ldhu	r2,0(r2)
  82466c:	10ffffcc 	andi	r3,r2,65535
  824670:	18e0001c 	xori	r3,r3,32768
  824674:	18e00004 	addi	r3,r3,-32768
  824678:	e0bf8617 	ldw	r2,-488(fp)
  82467c:	10800017 	ldw	r2,0(r2)
  824680:	100b883a 	mov	r5,r2
  824684:	1809883a 	mov	r4,r3
  824688:	08301e80 	call	8301e8 <__mulsi3>
  82468c:	e0bf8a15 	stw	r2,-472(fp)
  824690:	e0bf8a17 	ldw	r2,-472(fp)
  824694:	1004937a 	slli	r2,r2,13
  824698:	e0bf8a15 	stw	r2,-472(fp)
  82469c:	e0bf8a17 	ldw	r2,-472(fp)
  8246a0:	10810004 	addi	r2,r2,1024
  8246a4:	e0bf8a15 	stw	r2,-472(fp)
  8246a8:	e0bf8517 	ldw	r2,-492(fp)
  8246ac:	10801004 	addi	r2,r2,64
  8246b0:	1080000b 	ldhu	r2,0(r2)
  8246b4:	10ffffcc 	andi	r3,r2,65535
  8246b8:	18e0001c 	xori	r3,r3,32768
  8246bc:	18e00004 	addi	r3,r3,-32768
  8246c0:	e0bf8617 	ldw	r2,-488(fp)
  8246c4:	10802004 	addi	r2,r2,128
  8246c8:	10800017 	ldw	r2,0(r2)
  8246cc:	100b883a 	mov	r5,r2
  8246d0:	1809883a 	mov	r4,r3
  8246d4:	08301e80 	call	8301e8 <__mulsi3>
  8246d8:	e0bf8b15 	stw	r2,-468(fp)
  8246dc:	0149cc44 	movi	r5,10033
  8246e0:	e13f8b17 	ldw	r4,-468(fp)
  8246e4:	08301e80 	call	8301e8 <__mulsi3>
  8246e8:	e0bf8b15 	stw	r2,-468(fp)
  8246ec:	e0ff8a17 	ldw	r3,-472(fp)
  8246f0:	e0bf8b17 	ldw	r2,-468(fp)
  8246f4:	1885883a 	add	r2,r3,r2
  8246f8:	e0bf8c15 	stw	r2,-464(fp)
  8246fc:	e0ff8a17 	ldw	r3,-472(fp)
  824700:	e0bf8b17 	ldw	r2,-468(fp)
  824704:	1885c83a 	sub	r2,r3,r2
  824708:	e0bf8d15 	stw	r2,-460(fp)
  82470c:	e0bf8517 	ldw	r2,-492(fp)
  824710:	10800804 	addi	r2,r2,32
  824714:	1080000b 	ldhu	r2,0(r2)
  824718:	10ffffcc 	andi	r3,r2,65535
  82471c:	18e0001c 	xori	r3,r3,32768
  824720:	18e00004 	addi	r3,r3,-32768
  824724:	e0bf8617 	ldw	r2,-488(fp)
  824728:	10801004 	addi	r2,r2,64
  82472c:	10800017 	ldw	r2,0(r2)
  824730:	100b883a 	mov	r5,r2
  824734:	1809883a 	mov	r4,r3
  824738:	08301e80 	call	8301e8 <__mulsi3>
  82473c:	e0bf8e15 	stw	r2,-456(fp)
  824740:	014aed84 	movi	r5,11190
  824744:	e13f8e17 	ldw	r4,-456(fp)
  824748:	08301e80 	call	8301e8 <__mulsi3>
  82474c:	e0bf8b15 	stw	r2,-468(fp)
  824750:	e0bf8e17 	ldw	r2,-456(fp)
  824754:	1004937a 	slli	r2,r2,13
  824758:	e0bf8e15 	stw	r2,-456(fp)
  82475c:	e0bf8517 	ldw	r2,-492(fp)
  824760:	10801804 	addi	r2,r2,96
  824764:	1080000b 	ldhu	r2,0(r2)
  824768:	10ffffcc 	andi	r3,r2,65535
  82476c:	18e0001c 	xori	r3,r3,32768
  824770:	18e00004 	addi	r3,r3,-32768
  824774:	e0bf8617 	ldw	r2,-488(fp)
  824778:	10803004 	addi	r2,r2,192
  82477c:	10800017 	ldw	r2,0(r2)
  824780:	100b883a 	mov	r5,r2
  824784:	1809883a 	mov	r4,r3
  824788:	08301e80 	call	8301e8 <__mulsi3>
  82478c:	e0bf8f15 	stw	r2,-452(fp)
  824790:	e0bf8f17 	ldw	r2,-452(fp)
  824794:	1004937a 	slli	r2,r2,13
  824798:	e0bf8f15 	stw	r2,-452(fp)
  82479c:	e0ff8e17 	ldw	r3,-456(fp)
  8247a0:	e0bf8f17 	ldw	r2,-452(fp)
  8247a4:	1885c83a 	sub	r2,r3,r2
  8247a8:	e0bf9015 	stw	r2,-448(fp)
  8247ac:	e0ff8a17 	ldw	r3,-472(fp)
  8247b0:	e0bf9017 	ldw	r2,-448(fp)
  8247b4:	1885883a 	add	r2,r3,r2
  8247b8:	e0bf9115 	stw	r2,-444(fp)
  8247bc:	e0ff8a17 	ldw	r3,-472(fp)
  8247c0:	e0bf9017 	ldw	r2,-448(fp)
  8247c4:	1885c83a 	sub	r2,r3,r2
  8247c8:	e0bf9215 	stw	r2,-440(fp)
  8247cc:	e0ff8b17 	ldw	r3,-468(fp)
  8247d0:	e0bf8f17 	ldw	r2,-452(fp)
  8247d4:	1885883a 	add	r2,r3,r2
  8247d8:	e0bf9015 	stw	r2,-448(fp)
  8247dc:	e0ff8c17 	ldw	r3,-464(fp)
  8247e0:	e0bf9017 	ldw	r2,-448(fp)
  8247e4:	1885883a 	add	r2,r3,r2
  8247e8:	e0bf9315 	stw	r2,-436(fp)
  8247ec:	e0ff8c17 	ldw	r3,-464(fp)
  8247f0:	e0bf9017 	ldw	r2,-448(fp)
  8247f4:	1885c83a 	sub	r2,r3,r2
  8247f8:	e0bf9415 	stw	r2,-432(fp)
  8247fc:	e0ff8b17 	ldw	r3,-468(fp)
  824800:	e0bf8e17 	ldw	r2,-456(fp)
  824804:	1887c83a 	sub	r3,r3,r2
  824808:	e0bf8f17 	ldw	r2,-452(fp)
  82480c:	1885c83a 	sub	r2,r3,r2
  824810:	e0bf9015 	stw	r2,-448(fp)
  824814:	e0ff8d17 	ldw	r3,-460(fp)
  824818:	e0bf9017 	ldw	r2,-448(fp)
  82481c:	1885883a 	add	r2,r3,r2
  824820:	e0bf9515 	stw	r2,-428(fp)
  824824:	e0ff8d17 	ldw	r3,-460(fp)
  824828:	e0bf9017 	ldw	r2,-448(fp)
  82482c:	1885c83a 	sub	r2,r3,r2
  824830:	e0bf9615 	stw	r2,-424(fp)
  824834:	e0bf8517 	ldw	r2,-492(fp)
  824838:	10800404 	addi	r2,r2,16
  82483c:	1080000b 	ldhu	r2,0(r2)
  824840:	10ffffcc 	andi	r3,r2,65535
  824844:	18e0001c 	xori	r3,r3,32768
  824848:	18e00004 	addi	r3,r3,-32768
  82484c:	e0bf8617 	ldw	r2,-488(fp)
  824850:	10800804 	addi	r2,r2,32
  824854:	10800017 	ldw	r2,0(r2)
  824858:	100b883a 	mov	r5,r2
  82485c:	1809883a 	mov	r4,r3
  824860:	08301e80 	call	8301e8 <__mulsi3>
  824864:	e0bf8e15 	stw	r2,-456(fp)
  824868:	e0bf8517 	ldw	r2,-492(fp)
  82486c:	10800c04 	addi	r2,r2,48
  824870:	1080000b 	ldhu	r2,0(r2)
  824874:	10ffffcc 	andi	r3,r2,65535
  824878:	18e0001c 	xori	r3,r3,32768
  82487c:	18e00004 	addi	r3,r3,-32768
  824880:	e0bf8617 	ldw	r2,-488(fp)
  824884:	10801804 	addi	r2,r2,96
  824888:	10800017 	ldw	r2,0(r2)
  82488c:	100b883a 	mov	r5,r2
  824890:	1809883a 	mov	r4,r3
  824894:	08301e80 	call	8301e8 <__mulsi3>
  824898:	e0bf8f15 	stw	r2,-452(fp)
  82489c:	e0bf8517 	ldw	r2,-492(fp)
  8248a0:	10801404 	addi	r2,r2,80
  8248a4:	1080000b 	ldhu	r2,0(r2)
  8248a8:	10ffffcc 	andi	r3,r2,65535
  8248ac:	18e0001c 	xori	r3,r3,32768
  8248b0:	18e00004 	addi	r3,r3,-32768
  8248b4:	e0bf8617 	ldw	r2,-488(fp)
  8248b8:	10802804 	addi	r2,r2,160
  8248bc:	10800017 	ldw	r2,0(r2)
  8248c0:	100b883a 	mov	r5,r2
  8248c4:	1809883a 	mov	r4,r3
  8248c8:	08301e80 	call	8301e8 <__mulsi3>
  8248cc:	e0bf8a15 	stw	r2,-472(fp)
  8248d0:	e0bf8517 	ldw	r2,-492(fp)
  8248d4:	10801c04 	addi	r2,r2,112
  8248d8:	1080000b 	ldhu	r2,0(r2)
  8248dc:	10ffffcc 	andi	r3,r2,65535
  8248e0:	18e0001c 	xori	r3,r3,32768
  8248e4:	18e00004 	addi	r3,r3,-32768
  8248e8:	e0bf8617 	ldw	r2,-488(fp)
  8248ec:	10803804 	addi	r2,r2,224
  8248f0:	10800017 	ldw	r2,0(r2)
  8248f4:	100b883a 	mov	r5,r2
  8248f8:	1809883a 	mov	r4,r3
  8248fc:	08301e80 	call	8301e8 <__mulsi3>
  824900:	e0bf8b15 	stw	r2,-468(fp)
  824904:	014a73c4 	movi	r5,10703
  824908:	e13f8f17 	ldw	r4,-452(fp)
  82490c:	08301e80 	call	8301e8 <__mulsi3>
  824910:	e0bf8d15 	stw	r2,-460(fp)
  824914:	017babc4 	movi	r5,-4433
  824918:	e13f8f17 	ldw	r4,-452(fp)
  82491c:	08301e80 	call	8301e8 <__mulsi3>
  824920:	e0bf9715 	stw	r2,-420(fp)
  824924:	e0ff8e17 	ldw	r3,-456(fp)
  824928:	e0bf8a17 	ldw	r2,-472(fp)
  82492c:	1885883a 	add	r2,r3,r2
  824930:	e0bf8c15 	stw	r2,-464(fp)
  824934:	e0ff8c17 	ldw	r3,-464(fp)
  824938:	e0bf8b17 	ldw	r2,-468(fp)
  82493c:	1885883a 	add	r2,r3,r2
  824940:	0146e344 	movi	r5,7053
  824944:	1009883a 	mov	r4,r2
  824948:	08301e80 	call	8301e8 <__mulsi3>
  82494c:	e0bf9815 	stw	r2,-416(fp)
  824950:	014216c4 	movi	r5,2139
  824954:	e13f8c17 	ldw	r4,-464(fp)
  824958:	08301e80 	call	8301e8 <__mulsi3>
  82495c:	1007883a 	mov	r3,r2
  824960:	e0bf9817 	ldw	r2,-416(fp)
  824964:	1885883a 	add	r2,r3,r2
  824968:	e0bf9015 	stw	r2,-448(fp)
  82496c:	e0ff9017 	ldw	r3,-448(fp)
  824970:	e0bf8d17 	ldw	r2,-460(fp)
  824974:	18a1883a 	add	r16,r3,r2
  824978:	01423dc4 	movi	r5,2295
  82497c:	e13f8e17 	ldw	r4,-456(fp)
  824980:	08301e80 	call	8301e8 <__mulsi3>
  824984:	8085883a 	add	r2,r16,r2
  824988:	e0bf8c15 	stw	r2,-464(fp)
  82498c:	e0ff8a17 	ldw	r3,-472(fp)
  824990:	e0bf8b17 	ldw	r2,-468(fp)
  824994:	1885883a 	add	r2,r3,r2
  824998:	0177a2c4 	movi	r5,-8565
  82499c:	1009883a 	mov	r4,r2
  8249a0:	08301e80 	call	8301e8 <__mulsi3>
  8249a4:	e0bf9915 	stw	r2,-412(fp)
  8249a8:	e0ff9917 	ldw	r3,-412(fp)
  8249ac:	e0bf9717 	ldw	r2,-420(fp)
  8249b0:	18a1883a 	add	r16,r3,r2
  8249b4:	01742c04 	movi	r5,-12112
  8249b8:	e13f8a17 	ldw	r4,-472(fp)
  8249bc:	08301e80 	call	8301e8 <__mulsi3>
  8249c0:	8085883a 	add	r2,r16,r2
  8249c4:	e0ff9017 	ldw	r3,-448(fp)
  8249c8:	1885883a 	add	r2,r3,r2
  8249cc:	e0bf9015 	stw	r2,-448(fp)
  8249d0:	e0ff9817 	ldw	r3,-416(fp)
  8249d4:	e0bf8d17 	ldw	r2,-460(fp)
  8249d8:	18a1c83a 	sub	r16,r3,r2
  8249dc:	014cb184 	movi	r5,12998
  8249e0:	e13f8b17 	ldw	r4,-468(fp)
  8249e4:	08301e80 	call	8301e8 <__mulsi3>
  8249e8:	8085883a 	add	r2,r16,r2
  8249ec:	e0ff9917 	ldw	r3,-412(fp)
  8249f0:	1885883a 	add	r2,r3,r2
  8249f4:	e0bf9915 	stw	r2,-412(fp)
  8249f8:	017a9704 	movi	r5,-5540
  8249fc:	e13f8e17 	ldw	r4,-456(fp)
  824a00:	08301e80 	call	8301e8 <__mulsi3>
  824a04:	1007883a 	mov	r3,r2
  824a08:	e0bf9717 	ldw	r2,-420(fp)
  824a0c:	18a1883a 	add	r16,r3,r2
  824a10:	01702304 	movi	r5,-16244
  824a14:	e13f8b17 	ldw	r4,-468(fp)
  824a18:	08301e80 	call	8301e8 <__mulsi3>
  824a1c:	8085883a 	add	r2,r16,r2
  824a20:	e0ff9817 	ldw	r3,-416(fp)
  824a24:	1885883a 	add	r2,r3,r2
  824a28:	e0bf9815 	stw	r2,-416(fp)
  824a2c:	e0ff8e17 	ldw	r3,-456(fp)
  824a30:	e0bf8b17 	ldw	r2,-468(fp)
  824a34:	1885c83a 	sub	r2,r3,r2
  824a38:	e0bf8e15 	stw	r2,-456(fp)
  824a3c:	e0ff8f17 	ldw	r3,-452(fp)
  824a40:	e0bf8a17 	ldw	r2,-472(fp)
  824a44:	1885c83a 	sub	r2,r3,r2
  824a48:	e0bf8f15 	stw	r2,-452(fp)
  824a4c:	e0ff8e17 	ldw	r3,-456(fp)
  824a50:	e0bf8f17 	ldw	r2,-452(fp)
  824a54:	1885883a 	add	r2,r3,r2
  824a58:	01445444 	movi	r5,4433
  824a5c:	1009883a 	mov	r4,r2
  824a60:	08301e80 	call	8301e8 <__mulsi3>
  824a64:	e0bf8a15 	stw	r2,-472(fp)
  824a68:	01461f84 	movi	r5,6270
  824a6c:	e13f8e17 	ldw	r4,-456(fp)
  824a70:	08301e80 	call	8301e8 <__mulsi3>
  824a74:	1007883a 	mov	r3,r2
  824a78:	e0bf8a17 	ldw	r2,-472(fp)
  824a7c:	1885883a 	add	r2,r3,r2
  824a80:	e0bf8d15 	stw	r2,-460(fp)
  824a84:	017137c4 	movi	r5,-15137
  824a88:	e13f8f17 	ldw	r4,-452(fp)
  824a8c:	08301e80 	call	8301e8 <__mulsi3>
  824a90:	1007883a 	mov	r3,r2
  824a94:	e0bf8a17 	ldw	r2,-472(fp)
  824a98:	1885883a 	add	r2,r3,r2
  824a9c:	e0bf9715 	stw	r2,-420(fp)
  824aa0:	e0ff9317 	ldw	r3,-436(fp)
  824aa4:	e0bf8c17 	ldw	r2,-464(fp)
  824aa8:	1885883a 	add	r2,r3,r2
  824aac:	1007d2fa 	srai	r3,r2,11
  824ab0:	e0bf8717 	ldw	r2,-484(fp)
  824ab4:	10c00015 	stw	r3,0(r2)
  824ab8:	e0bf8717 	ldw	r2,-484(fp)
  824abc:	10805804 	addi	r2,r2,352
  824ac0:	e13f9317 	ldw	r4,-436(fp)
  824ac4:	e0ff8c17 	ldw	r3,-464(fp)
  824ac8:	20c7c83a 	sub	r3,r4,r3
  824acc:	1807d2fa 	srai	r3,r3,11
  824ad0:	10c00015 	stw	r3,0(r2)
  824ad4:	e0bf8717 	ldw	r2,-484(fp)
  824ad8:	10800804 	addi	r2,r2,32
  824adc:	e13f9117 	ldw	r4,-444(fp)
  824ae0:	e0ff8d17 	ldw	r3,-460(fp)
  824ae4:	20c7883a 	add	r3,r4,r3
  824ae8:	1807d2fa 	srai	r3,r3,11
  824aec:	10c00015 	stw	r3,0(r2)
  824af0:	e0bf8717 	ldw	r2,-484(fp)
  824af4:	10805004 	addi	r2,r2,320
  824af8:	e13f9117 	ldw	r4,-444(fp)
  824afc:	e0ff8d17 	ldw	r3,-460(fp)
  824b00:	20c7c83a 	sub	r3,r4,r3
  824b04:	1807d2fa 	srai	r3,r3,11
  824b08:	10c00015 	stw	r3,0(r2)
  824b0c:	e0bf8717 	ldw	r2,-484(fp)
  824b10:	10801004 	addi	r2,r2,64
  824b14:	e13f9517 	ldw	r4,-428(fp)
  824b18:	e0ff9017 	ldw	r3,-448(fp)
  824b1c:	20c7883a 	add	r3,r4,r3
  824b20:	1807d2fa 	srai	r3,r3,11
  824b24:	10c00015 	stw	r3,0(r2)
  824b28:	e0bf8717 	ldw	r2,-484(fp)
  824b2c:	10804804 	addi	r2,r2,288
  824b30:	e13f9517 	ldw	r4,-428(fp)
  824b34:	e0ff9017 	ldw	r3,-448(fp)
  824b38:	20c7c83a 	sub	r3,r4,r3
  824b3c:	1807d2fa 	srai	r3,r3,11
  824b40:	10c00015 	stw	r3,0(r2)
  824b44:	e0bf8717 	ldw	r2,-484(fp)
  824b48:	10801804 	addi	r2,r2,96
  824b4c:	e13f9617 	ldw	r4,-424(fp)
  824b50:	e0ff9917 	ldw	r3,-412(fp)
  824b54:	20c7883a 	add	r3,r4,r3
  824b58:	1807d2fa 	srai	r3,r3,11
  824b5c:	10c00015 	stw	r3,0(r2)
  824b60:	e0bf8717 	ldw	r2,-484(fp)
  824b64:	10804004 	addi	r2,r2,256
  824b68:	e13f9617 	ldw	r4,-424(fp)
  824b6c:	e0ff9917 	ldw	r3,-412(fp)
  824b70:	20c7c83a 	sub	r3,r4,r3
  824b74:	1807d2fa 	srai	r3,r3,11
  824b78:	10c00015 	stw	r3,0(r2)
  824b7c:	e0bf8717 	ldw	r2,-484(fp)
  824b80:	10802004 	addi	r2,r2,128
  824b84:	e13f9217 	ldw	r4,-440(fp)
  824b88:	e0ff9717 	ldw	r3,-420(fp)
  824b8c:	20c7883a 	add	r3,r4,r3
  824b90:	1807d2fa 	srai	r3,r3,11
  824b94:	10c00015 	stw	r3,0(r2)
  824b98:	e0bf8717 	ldw	r2,-484(fp)
  824b9c:	10803804 	addi	r2,r2,224
  824ba0:	e13f9217 	ldw	r4,-440(fp)
  824ba4:	e0ff9717 	ldw	r3,-420(fp)
  824ba8:	20c7c83a 	sub	r3,r4,r3
  824bac:	1807d2fa 	srai	r3,r3,11
  824bb0:	10c00015 	stw	r3,0(r2)
  824bb4:	e0bf8717 	ldw	r2,-484(fp)
  824bb8:	10802804 	addi	r2,r2,160
  824bbc:	e13f9417 	ldw	r4,-432(fp)
  824bc0:	e0ff9817 	ldw	r3,-416(fp)
  824bc4:	20c7883a 	add	r3,r4,r3
  824bc8:	1807d2fa 	srai	r3,r3,11
  824bcc:	10c00015 	stw	r3,0(r2)
  824bd0:	e0bf8717 	ldw	r2,-484(fp)
  824bd4:	10803004 	addi	r2,r2,192
  824bd8:	e13f9417 	ldw	r4,-432(fp)
  824bdc:	e0ff9817 	ldw	r3,-416(fp)
  824be0:	20c7c83a 	sub	r3,r4,r3
  824be4:	1807d2fa 	srai	r3,r3,11
  824be8:	10c00015 	stw	r3,0(r2)
  824bec:	e0bf8817 	ldw	r2,-480(fp)
  824bf0:	10800044 	addi	r2,r2,1
  824bf4:	e0bf8815 	stw	r2,-480(fp)
  824bf8:	e0bf8517 	ldw	r2,-492(fp)
  824bfc:	10800084 	addi	r2,r2,2
  824c00:	e0bf8515 	stw	r2,-492(fp)
  824c04:	e0bf8617 	ldw	r2,-488(fp)
  824c08:	10800104 	addi	r2,r2,4
  824c0c:	e0bf8615 	stw	r2,-488(fp)
  824c10:	e0bf8717 	ldw	r2,-484(fp)
  824c14:	10800104 	addi	r2,r2,4
  824c18:	e0bf8715 	stw	r2,-484(fp)
  824c1c:	e0bf8817 	ldw	r2,-480(fp)
  824c20:	10800210 	cmplti	r2,r2,8
  824c24:	103e8f1e 	bne	r2,zero,824664 <__alt_mem_epcs_flash_controller_0+0xff81b664>
  824c28:	e0bf9b04 	addi	r2,fp,-404
  824c2c:	e0bf8715 	stw	r2,-484(fp)
  824c30:	e03f8815 	stw	zero,-480(fp)
  824c34:	00015906 	br	82519c <jpeg_idct_12x12+0xb90>
  824c38:	e0bf8817 	ldw	r2,-480(fp)
  824c3c:	1085883a 	add	r2,r2,r2
  824c40:	1085883a 	add	r2,r2,r2
  824c44:	1007883a 	mov	r3,r2
  824c48:	e0bffe17 	ldw	r2,-8(fp)
  824c4c:	10c5883a 	add	r2,r2,r3
  824c50:	10c00017 	ldw	r3,0(r2)
  824c54:	e0800217 	ldw	r2,8(fp)
  824c58:	1885883a 	add	r2,r3,r2
  824c5c:	e0bf9a15 	stw	r2,-408(fp)
  824c60:	e0bf8717 	ldw	r2,-484(fp)
  824c64:	10800017 	ldw	r2,0(r2)
  824c68:	10900404 	addi	r2,r2,16400
  824c6c:	e0bf8a15 	stw	r2,-472(fp)
  824c70:	e0bf8a17 	ldw	r2,-472(fp)
  824c74:	1004937a 	slli	r2,r2,13
  824c78:	e0bf8a15 	stw	r2,-472(fp)
  824c7c:	e0bf8717 	ldw	r2,-484(fp)
  824c80:	10800404 	addi	r2,r2,16
  824c84:	10800017 	ldw	r2,0(r2)
  824c88:	e0bf8b15 	stw	r2,-468(fp)
  824c8c:	0149cc44 	movi	r5,10033
  824c90:	e13f8b17 	ldw	r4,-468(fp)
  824c94:	08301e80 	call	8301e8 <__mulsi3>
  824c98:	e0bf8b15 	stw	r2,-468(fp)
  824c9c:	e0ff8a17 	ldw	r3,-472(fp)
  824ca0:	e0bf8b17 	ldw	r2,-468(fp)
  824ca4:	1885883a 	add	r2,r3,r2
  824ca8:	e0bf8c15 	stw	r2,-464(fp)
  824cac:	e0ff8a17 	ldw	r3,-472(fp)
  824cb0:	e0bf8b17 	ldw	r2,-468(fp)
  824cb4:	1885c83a 	sub	r2,r3,r2
  824cb8:	e0bf8d15 	stw	r2,-460(fp)
  824cbc:	e0bf8717 	ldw	r2,-484(fp)
  824cc0:	10800204 	addi	r2,r2,8
  824cc4:	10800017 	ldw	r2,0(r2)
  824cc8:	e0bf8e15 	stw	r2,-456(fp)
  824ccc:	014aed84 	movi	r5,11190
  824cd0:	e13f8e17 	ldw	r4,-456(fp)
  824cd4:	08301e80 	call	8301e8 <__mulsi3>
  824cd8:	e0bf8b15 	stw	r2,-468(fp)
  824cdc:	e0bf8e17 	ldw	r2,-456(fp)
  824ce0:	1004937a 	slli	r2,r2,13
  824ce4:	e0bf8e15 	stw	r2,-456(fp)
  824ce8:	e0bf8717 	ldw	r2,-484(fp)
  824cec:	10800604 	addi	r2,r2,24
  824cf0:	10800017 	ldw	r2,0(r2)
  824cf4:	e0bf8f15 	stw	r2,-452(fp)
  824cf8:	e0bf8f17 	ldw	r2,-452(fp)
  824cfc:	1004937a 	slli	r2,r2,13
  824d00:	e0bf8f15 	stw	r2,-452(fp)
  824d04:	e0ff8e17 	ldw	r3,-456(fp)
  824d08:	e0bf8f17 	ldw	r2,-452(fp)
  824d0c:	1885c83a 	sub	r2,r3,r2
  824d10:	e0bf9015 	stw	r2,-448(fp)
  824d14:	e0ff8a17 	ldw	r3,-472(fp)
  824d18:	e0bf9017 	ldw	r2,-448(fp)
  824d1c:	1885883a 	add	r2,r3,r2
  824d20:	e0bf9115 	stw	r2,-444(fp)
  824d24:	e0ff8a17 	ldw	r3,-472(fp)
  824d28:	e0bf9017 	ldw	r2,-448(fp)
  824d2c:	1885c83a 	sub	r2,r3,r2
  824d30:	e0bf9215 	stw	r2,-440(fp)
  824d34:	e0ff8b17 	ldw	r3,-468(fp)
  824d38:	e0bf8f17 	ldw	r2,-452(fp)
  824d3c:	1885883a 	add	r2,r3,r2
  824d40:	e0bf9015 	stw	r2,-448(fp)
  824d44:	e0ff8c17 	ldw	r3,-464(fp)
  824d48:	e0bf9017 	ldw	r2,-448(fp)
  824d4c:	1885883a 	add	r2,r3,r2
  824d50:	e0bf9315 	stw	r2,-436(fp)
  824d54:	e0ff8c17 	ldw	r3,-464(fp)
  824d58:	e0bf9017 	ldw	r2,-448(fp)
  824d5c:	1885c83a 	sub	r2,r3,r2
  824d60:	e0bf9415 	stw	r2,-432(fp)
  824d64:	e0ff8b17 	ldw	r3,-468(fp)
  824d68:	e0bf8e17 	ldw	r2,-456(fp)
  824d6c:	1887c83a 	sub	r3,r3,r2
  824d70:	e0bf8f17 	ldw	r2,-452(fp)
  824d74:	1885c83a 	sub	r2,r3,r2
  824d78:	e0bf9015 	stw	r2,-448(fp)
  824d7c:	e0ff8d17 	ldw	r3,-460(fp)
  824d80:	e0bf9017 	ldw	r2,-448(fp)
  824d84:	1885883a 	add	r2,r3,r2
  824d88:	e0bf9515 	stw	r2,-428(fp)
  824d8c:	e0ff8d17 	ldw	r3,-460(fp)
  824d90:	e0bf9017 	ldw	r2,-448(fp)
  824d94:	1885c83a 	sub	r2,r3,r2
  824d98:	e0bf9615 	stw	r2,-424(fp)
  824d9c:	e0bf8717 	ldw	r2,-484(fp)
  824da0:	10800104 	addi	r2,r2,4
  824da4:	10800017 	ldw	r2,0(r2)
  824da8:	e0bf8e15 	stw	r2,-456(fp)
  824dac:	e0bf8717 	ldw	r2,-484(fp)
  824db0:	10800304 	addi	r2,r2,12
  824db4:	10800017 	ldw	r2,0(r2)
  824db8:	e0bf8f15 	stw	r2,-452(fp)
  824dbc:	e0bf8717 	ldw	r2,-484(fp)
  824dc0:	10800504 	addi	r2,r2,20
  824dc4:	10800017 	ldw	r2,0(r2)
  824dc8:	e0bf8a15 	stw	r2,-472(fp)
  824dcc:	e0bf8717 	ldw	r2,-484(fp)
  824dd0:	10800704 	addi	r2,r2,28
  824dd4:	10800017 	ldw	r2,0(r2)
  824dd8:	e0bf8b15 	stw	r2,-468(fp)
  824ddc:	014a73c4 	movi	r5,10703
  824de0:	e13f8f17 	ldw	r4,-452(fp)
  824de4:	08301e80 	call	8301e8 <__mulsi3>
  824de8:	e0bf8d15 	stw	r2,-460(fp)
  824dec:	017babc4 	movi	r5,-4433
  824df0:	e13f8f17 	ldw	r4,-452(fp)
  824df4:	08301e80 	call	8301e8 <__mulsi3>
  824df8:	e0bf9715 	stw	r2,-420(fp)
  824dfc:	e0ff8e17 	ldw	r3,-456(fp)
  824e00:	e0bf8a17 	ldw	r2,-472(fp)
  824e04:	1885883a 	add	r2,r3,r2
  824e08:	e0bf8c15 	stw	r2,-464(fp)
  824e0c:	e0ff8c17 	ldw	r3,-464(fp)
  824e10:	e0bf8b17 	ldw	r2,-468(fp)
  824e14:	1885883a 	add	r2,r3,r2
  824e18:	0146e344 	movi	r5,7053
  824e1c:	1009883a 	mov	r4,r2
  824e20:	08301e80 	call	8301e8 <__mulsi3>
  824e24:	e0bf9815 	stw	r2,-416(fp)
  824e28:	014216c4 	movi	r5,2139
  824e2c:	e13f8c17 	ldw	r4,-464(fp)
  824e30:	08301e80 	call	8301e8 <__mulsi3>
  824e34:	1007883a 	mov	r3,r2
  824e38:	e0bf9817 	ldw	r2,-416(fp)
  824e3c:	1885883a 	add	r2,r3,r2
  824e40:	e0bf9015 	stw	r2,-448(fp)
  824e44:	e0ff9017 	ldw	r3,-448(fp)
  824e48:	e0bf8d17 	ldw	r2,-460(fp)
  824e4c:	18a1883a 	add	r16,r3,r2
  824e50:	01423dc4 	movi	r5,2295
  824e54:	e13f8e17 	ldw	r4,-456(fp)
  824e58:	08301e80 	call	8301e8 <__mulsi3>
  824e5c:	8085883a 	add	r2,r16,r2
  824e60:	e0bf8c15 	stw	r2,-464(fp)
  824e64:	e0ff8a17 	ldw	r3,-472(fp)
  824e68:	e0bf8b17 	ldw	r2,-468(fp)
  824e6c:	1885883a 	add	r2,r3,r2
  824e70:	0177a2c4 	movi	r5,-8565
  824e74:	1009883a 	mov	r4,r2
  824e78:	08301e80 	call	8301e8 <__mulsi3>
  824e7c:	e0bf9915 	stw	r2,-412(fp)
  824e80:	e0ff9917 	ldw	r3,-412(fp)
  824e84:	e0bf9717 	ldw	r2,-420(fp)
  824e88:	18a1883a 	add	r16,r3,r2
  824e8c:	01742c04 	movi	r5,-12112
  824e90:	e13f8a17 	ldw	r4,-472(fp)
  824e94:	08301e80 	call	8301e8 <__mulsi3>
  824e98:	8085883a 	add	r2,r16,r2
  824e9c:	e0ff9017 	ldw	r3,-448(fp)
  824ea0:	1885883a 	add	r2,r3,r2
  824ea4:	e0bf9015 	stw	r2,-448(fp)
  824ea8:	e0ff9817 	ldw	r3,-416(fp)
  824eac:	e0bf8d17 	ldw	r2,-460(fp)
  824eb0:	18a1c83a 	sub	r16,r3,r2
  824eb4:	014cb184 	movi	r5,12998
  824eb8:	e13f8b17 	ldw	r4,-468(fp)
  824ebc:	08301e80 	call	8301e8 <__mulsi3>
  824ec0:	8085883a 	add	r2,r16,r2
  824ec4:	e0ff9917 	ldw	r3,-412(fp)
  824ec8:	1885883a 	add	r2,r3,r2
  824ecc:	e0bf9915 	stw	r2,-412(fp)
  824ed0:	017a9704 	movi	r5,-5540
  824ed4:	e13f8e17 	ldw	r4,-456(fp)
  824ed8:	08301e80 	call	8301e8 <__mulsi3>
  824edc:	1007883a 	mov	r3,r2
  824ee0:	e0bf9717 	ldw	r2,-420(fp)
  824ee4:	18a1883a 	add	r16,r3,r2
  824ee8:	01702304 	movi	r5,-16244
  824eec:	e13f8b17 	ldw	r4,-468(fp)
  824ef0:	08301e80 	call	8301e8 <__mulsi3>
  824ef4:	8085883a 	add	r2,r16,r2
  824ef8:	e0ff9817 	ldw	r3,-416(fp)
  824efc:	1885883a 	add	r2,r3,r2
  824f00:	e0bf9815 	stw	r2,-416(fp)
  824f04:	e0ff8e17 	ldw	r3,-456(fp)
  824f08:	e0bf8b17 	ldw	r2,-468(fp)
  824f0c:	1885c83a 	sub	r2,r3,r2
  824f10:	e0bf8e15 	stw	r2,-456(fp)
  824f14:	e0ff8f17 	ldw	r3,-452(fp)
  824f18:	e0bf8a17 	ldw	r2,-472(fp)
  824f1c:	1885c83a 	sub	r2,r3,r2
  824f20:	e0bf8f15 	stw	r2,-452(fp)
  824f24:	e0ff8e17 	ldw	r3,-456(fp)
  824f28:	e0bf8f17 	ldw	r2,-452(fp)
  824f2c:	1885883a 	add	r2,r3,r2
  824f30:	01445444 	movi	r5,4433
  824f34:	1009883a 	mov	r4,r2
  824f38:	08301e80 	call	8301e8 <__mulsi3>
  824f3c:	e0bf8a15 	stw	r2,-472(fp)
  824f40:	01461f84 	movi	r5,6270
  824f44:	e13f8e17 	ldw	r4,-456(fp)
  824f48:	08301e80 	call	8301e8 <__mulsi3>
  824f4c:	1007883a 	mov	r3,r2
  824f50:	e0bf8a17 	ldw	r2,-472(fp)
  824f54:	1885883a 	add	r2,r3,r2
  824f58:	e0bf8d15 	stw	r2,-460(fp)
  824f5c:	017137c4 	movi	r5,-15137
  824f60:	e13f8f17 	ldw	r4,-452(fp)
  824f64:	08301e80 	call	8301e8 <__mulsi3>
  824f68:	1007883a 	mov	r3,r2
  824f6c:	e0bf8a17 	ldw	r2,-472(fp)
  824f70:	1885883a 	add	r2,r3,r2
  824f74:	e0bf9715 	stw	r2,-420(fp)
  824f78:	e0ff9317 	ldw	r3,-436(fp)
  824f7c:	e0bf8c17 	ldw	r2,-464(fp)
  824f80:	1885883a 	add	r2,r3,r2
  824f84:	1005d4ba 	srai	r2,r2,18
  824f88:	1080ffcc 	andi	r2,r2,1023
  824f8c:	e0ff8917 	ldw	r3,-476(fp)
  824f90:	1885883a 	add	r2,r3,r2
  824f94:	10c00003 	ldbu	r3,0(r2)
  824f98:	e0bf9a17 	ldw	r2,-408(fp)
  824f9c:	10c00005 	stb	r3,0(r2)
  824fa0:	e0bf9a17 	ldw	r2,-408(fp)
  824fa4:	108002c4 	addi	r2,r2,11
  824fa8:	e13f9317 	ldw	r4,-436(fp)
  824fac:	e0ff8c17 	ldw	r3,-464(fp)
  824fb0:	20c7c83a 	sub	r3,r4,r3
  824fb4:	1807d4ba 	srai	r3,r3,18
  824fb8:	18c0ffcc 	andi	r3,r3,1023
  824fbc:	e13f8917 	ldw	r4,-476(fp)
  824fc0:	20c7883a 	add	r3,r4,r3
  824fc4:	18c00003 	ldbu	r3,0(r3)
  824fc8:	10c00005 	stb	r3,0(r2)
  824fcc:	e0bf9a17 	ldw	r2,-408(fp)
  824fd0:	10800044 	addi	r2,r2,1
  824fd4:	e13f9117 	ldw	r4,-444(fp)
  824fd8:	e0ff8d17 	ldw	r3,-460(fp)
  824fdc:	20c7883a 	add	r3,r4,r3
  824fe0:	1807d4ba 	srai	r3,r3,18
  824fe4:	18c0ffcc 	andi	r3,r3,1023
  824fe8:	e13f8917 	ldw	r4,-476(fp)
  824fec:	20c7883a 	add	r3,r4,r3
  824ff0:	18c00003 	ldbu	r3,0(r3)
  824ff4:	10c00005 	stb	r3,0(r2)
  824ff8:	e0bf9a17 	ldw	r2,-408(fp)
  824ffc:	10800284 	addi	r2,r2,10
  825000:	e13f9117 	ldw	r4,-444(fp)
  825004:	e0ff8d17 	ldw	r3,-460(fp)
  825008:	20c7c83a 	sub	r3,r4,r3
  82500c:	1807d4ba 	srai	r3,r3,18
  825010:	18c0ffcc 	andi	r3,r3,1023
  825014:	e13f8917 	ldw	r4,-476(fp)
  825018:	20c7883a 	add	r3,r4,r3
  82501c:	18c00003 	ldbu	r3,0(r3)
  825020:	10c00005 	stb	r3,0(r2)
  825024:	e0bf9a17 	ldw	r2,-408(fp)
  825028:	10800084 	addi	r2,r2,2
  82502c:	e13f9517 	ldw	r4,-428(fp)
  825030:	e0ff9017 	ldw	r3,-448(fp)
  825034:	20c7883a 	add	r3,r4,r3
  825038:	1807d4ba 	srai	r3,r3,18
  82503c:	18c0ffcc 	andi	r3,r3,1023
  825040:	e13f8917 	ldw	r4,-476(fp)
  825044:	20c7883a 	add	r3,r4,r3
  825048:	18c00003 	ldbu	r3,0(r3)
  82504c:	10c00005 	stb	r3,0(r2)
  825050:	e0bf9a17 	ldw	r2,-408(fp)
  825054:	10800244 	addi	r2,r2,9
  825058:	e13f9517 	ldw	r4,-428(fp)
  82505c:	e0ff9017 	ldw	r3,-448(fp)
  825060:	20c7c83a 	sub	r3,r4,r3
  825064:	1807d4ba 	srai	r3,r3,18
  825068:	18c0ffcc 	andi	r3,r3,1023
  82506c:	e13f8917 	ldw	r4,-476(fp)
  825070:	20c7883a 	add	r3,r4,r3
  825074:	18c00003 	ldbu	r3,0(r3)
  825078:	10c00005 	stb	r3,0(r2)
  82507c:	e0bf9a17 	ldw	r2,-408(fp)
  825080:	108000c4 	addi	r2,r2,3
  825084:	e13f9617 	ldw	r4,-424(fp)
  825088:	e0ff9917 	ldw	r3,-412(fp)
  82508c:	20c7883a 	add	r3,r4,r3
  825090:	1807d4ba 	srai	r3,r3,18
  825094:	18c0ffcc 	andi	r3,r3,1023
  825098:	e13f8917 	ldw	r4,-476(fp)
  82509c:	20c7883a 	add	r3,r4,r3
  8250a0:	18c00003 	ldbu	r3,0(r3)
  8250a4:	10c00005 	stb	r3,0(r2)
  8250a8:	e0bf9a17 	ldw	r2,-408(fp)
  8250ac:	10800204 	addi	r2,r2,8
  8250b0:	e13f9617 	ldw	r4,-424(fp)
  8250b4:	e0ff9917 	ldw	r3,-412(fp)
  8250b8:	20c7c83a 	sub	r3,r4,r3
  8250bc:	1807d4ba 	srai	r3,r3,18
  8250c0:	18c0ffcc 	andi	r3,r3,1023
  8250c4:	e13f8917 	ldw	r4,-476(fp)
  8250c8:	20c7883a 	add	r3,r4,r3
  8250cc:	18c00003 	ldbu	r3,0(r3)
  8250d0:	10c00005 	stb	r3,0(r2)
  8250d4:	e0bf9a17 	ldw	r2,-408(fp)
  8250d8:	10800104 	addi	r2,r2,4
  8250dc:	e13f9217 	ldw	r4,-440(fp)
  8250e0:	e0ff9717 	ldw	r3,-420(fp)
  8250e4:	20c7883a 	add	r3,r4,r3
  8250e8:	1807d4ba 	srai	r3,r3,18
  8250ec:	18c0ffcc 	andi	r3,r3,1023
  8250f0:	e13f8917 	ldw	r4,-476(fp)
  8250f4:	20c7883a 	add	r3,r4,r3
  8250f8:	18c00003 	ldbu	r3,0(r3)
  8250fc:	10c00005 	stb	r3,0(r2)
  825100:	e0bf9a17 	ldw	r2,-408(fp)
  825104:	108001c4 	addi	r2,r2,7
  825108:	e13f9217 	ldw	r4,-440(fp)
  82510c:	e0ff9717 	ldw	r3,-420(fp)
  825110:	20c7c83a 	sub	r3,r4,r3
  825114:	1807d4ba 	srai	r3,r3,18
  825118:	18c0ffcc 	andi	r3,r3,1023
  82511c:	e13f8917 	ldw	r4,-476(fp)
  825120:	20c7883a 	add	r3,r4,r3
  825124:	18c00003 	ldbu	r3,0(r3)
  825128:	10c00005 	stb	r3,0(r2)
  82512c:	e0bf9a17 	ldw	r2,-408(fp)
  825130:	10800144 	addi	r2,r2,5
  825134:	e13f9417 	ldw	r4,-432(fp)
  825138:	e0ff9817 	ldw	r3,-416(fp)
  82513c:	20c7883a 	add	r3,r4,r3
  825140:	1807d4ba 	srai	r3,r3,18
  825144:	18c0ffcc 	andi	r3,r3,1023
  825148:	e13f8917 	ldw	r4,-476(fp)
  82514c:	20c7883a 	add	r3,r4,r3
  825150:	18c00003 	ldbu	r3,0(r3)
  825154:	10c00005 	stb	r3,0(r2)
  825158:	e0bf9a17 	ldw	r2,-408(fp)
  82515c:	10800184 	addi	r2,r2,6
  825160:	e13f9417 	ldw	r4,-432(fp)
  825164:	e0ff9817 	ldw	r3,-416(fp)
  825168:	20c7c83a 	sub	r3,r4,r3
  82516c:	1807d4ba 	srai	r3,r3,18
  825170:	18c0ffcc 	andi	r3,r3,1023
  825174:	e13f8917 	ldw	r4,-476(fp)
  825178:	20c7883a 	add	r3,r4,r3
  82517c:	18c00003 	ldbu	r3,0(r3)
  825180:	10c00005 	stb	r3,0(r2)
  825184:	e0bf8717 	ldw	r2,-484(fp)
  825188:	10800804 	addi	r2,r2,32
  82518c:	e0bf8715 	stw	r2,-484(fp)
  825190:	e0bf8817 	ldw	r2,-480(fp)
  825194:	10800044 	addi	r2,r2,1
  825198:	e0bf8815 	stw	r2,-480(fp)
  82519c:	e0bf8817 	ldw	r2,-480(fp)
  8251a0:	10800310 	cmplti	r2,r2,12
  8251a4:	103ea41e 	bne	r2,zero,824c38 <__alt_mem_epcs_flash_controller_0+0xff81bc38>
  8251a8:	0001883a 	nop
  8251ac:	e6ffff04 	addi	sp,fp,-4
  8251b0:	dfc00217 	ldw	ra,8(sp)
  8251b4:	df000117 	ldw	fp,4(sp)
  8251b8:	dc000017 	ldw	r16,0(sp)
  8251bc:	dec00304 	addi	sp,sp,12
  8251c0:	f800283a 	ret

008251c4 <jpeg_idct_13x13>:
  8251c4:	deff7a04 	addi	sp,sp,-536
  8251c8:	dfc08515 	stw	ra,532(sp)
  8251cc:	df008415 	stw	fp,528(sp)
  8251d0:	dc008315 	stw	r16,524(sp)
  8251d4:	df008404 	addi	fp,sp,528
  8251d8:	e13ffb15 	stw	r4,-20(fp)
  8251dc:	e17ffc15 	stw	r5,-16(fp)
  8251e0:	e1bffd15 	stw	r6,-12(fp)
  8251e4:	e1fffe15 	stw	r7,-8(fp)
  8251e8:	e0bffb17 	ldw	r2,-20(fp)
  8251ec:	10805417 	ldw	r2,336(r2)
  8251f0:	10bfa004 	addi	r2,r2,-384
  8251f4:	e0bf8015 	stw	r2,-512(fp)
  8251f8:	e0bffd17 	ldw	r2,-12(fp)
  8251fc:	e0bf7c15 	stw	r2,-528(fp)
  825200:	e0bffc17 	ldw	r2,-16(fp)
  825204:	10801517 	ldw	r2,84(r2)
  825208:	e0bf7d15 	stw	r2,-524(fp)
  82520c:	e0bf9304 	addi	r2,fp,-436
  825210:	e0bf7e15 	stw	r2,-520(fp)
  825214:	e03f7f15 	stw	zero,-516(fp)
  825218:	0001bc06 	br	82590c <jpeg_idct_13x13+0x748>
  82521c:	e0bf7c17 	ldw	r2,-528(fp)
  825220:	1080000b 	ldhu	r2,0(r2)
  825224:	10ffffcc 	andi	r3,r2,65535
  825228:	18e0001c 	xori	r3,r3,32768
  82522c:	18e00004 	addi	r3,r3,-32768
  825230:	e0bf7d17 	ldw	r2,-524(fp)
  825234:	10800017 	ldw	r2,0(r2)
  825238:	100b883a 	mov	r5,r2
  82523c:	1809883a 	mov	r4,r3
  825240:	08301e80 	call	8301e8 <__mulsi3>
  825244:	e0bf8115 	stw	r2,-508(fp)
  825248:	e0bf8117 	ldw	r2,-508(fp)
  82524c:	1004937a 	slli	r2,r2,13
  825250:	e0bf8115 	stw	r2,-508(fp)
  825254:	e0bf8117 	ldw	r2,-508(fp)
  825258:	10810004 	addi	r2,r2,1024
  82525c:	e0bf8115 	stw	r2,-508(fp)
  825260:	e0bf7c17 	ldw	r2,-528(fp)
  825264:	10800804 	addi	r2,r2,32
  825268:	1080000b 	ldhu	r2,0(r2)
  82526c:	10ffffcc 	andi	r3,r2,65535
  825270:	18e0001c 	xori	r3,r3,32768
  825274:	18e00004 	addi	r3,r3,-32768
  825278:	e0bf7d17 	ldw	r2,-524(fp)
  82527c:	10801004 	addi	r2,r2,64
  825280:	10800017 	ldw	r2,0(r2)
  825284:	100b883a 	mov	r5,r2
  825288:	1809883a 	mov	r4,r3
  82528c:	08301e80 	call	8301e8 <__mulsi3>
  825290:	e0bf8215 	stw	r2,-504(fp)
  825294:	e0bf7c17 	ldw	r2,-528(fp)
  825298:	10801004 	addi	r2,r2,64
  82529c:	1080000b 	ldhu	r2,0(r2)
  8252a0:	10ffffcc 	andi	r3,r2,65535
  8252a4:	18e0001c 	xori	r3,r3,32768
  8252a8:	18e00004 	addi	r3,r3,-32768
  8252ac:	e0bf7d17 	ldw	r2,-524(fp)
  8252b0:	10802004 	addi	r2,r2,128
  8252b4:	10800017 	ldw	r2,0(r2)
  8252b8:	100b883a 	mov	r5,r2
  8252bc:	1809883a 	mov	r4,r3
  8252c0:	08301e80 	call	8301e8 <__mulsi3>
  8252c4:	e0bf8315 	stw	r2,-500(fp)
  8252c8:	e0bf7c17 	ldw	r2,-528(fp)
  8252cc:	10801804 	addi	r2,r2,96
  8252d0:	1080000b 	ldhu	r2,0(r2)
  8252d4:	10ffffcc 	andi	r3,r2,65535
  8252d8:	18e0001c 	xori	r3,r3,32768
  8252dc:	18e00004 	addi	r3,r3,-32768
  8252e0:	e0bf7d17 	ldw	r2,-524(fp)
  8252e4:	10803004 	addi	r2,r2,192
  8252e8:	10800017 	ldw	r2,0(r2)
  8252ec:	100b883a 	mov	r5,r2
  8252f0:	1809883a 	mov	r4,r3
  8252f4:	08301e80 	call	8301e8 <__mulsi3>
  8252f8:	e0bf8415 	stw	r2,-496(fp)
  8252fc:	e0ff8317 	ldw	r3,-500(fp)
  825300:	e0bf8417 	ldw	r2,-496(fp)
  825304:	1885883a 	add	r2,r3,r2
  825308:	e0bf8515 	stw	r2,-492(fp)
  82530c:	e0ff8317 	ldw	r3,-500(fp)
  825310:	e0bf8417 	ldw	r2,-496(fp)
  825314:	1885c83a 	sub	r2,r3,r2
  825318:	e0bf8615 	stw	r2,-488(fp)
  82531c:	01493e44 	movi	r5,9465
  825320:	e13f8517 	ldw	r4,-492(fp)
  825324:	08301e80 	call	8301e8 <__mulsi3>
  825328:	e0bf8715 	stw	r2,-484(fp)
  82532c:	0140c644 	movi	r5,793
  825330:	e13f8617 	ldw	r4,-488(fp)
  825334:	08301e80 	call	8301e8 <__mulsi3>
  825338:	1007883a 	mov	r3,r2
  82533c:	e0bf8117 	ldw	r2,-508(fp)
  825340:	1885883a 	add	r2,r3,r2
  825344:	e0bf8815 	stw	r2,-480(fp)
  825348:	014afc44 	movi	r5,11249
  82534c:	e13f8217 	ldw	r4,-504(fp)
  825350:	08301e80 	call	8301e8 <__mulsi3>
  825354:	1007883a 	mov	r3,r2
  825358:	e0bf8717 	ldw	r2,-484(fp)
  82535c:	1887883a 	add	r3,r3,r2
  825360:	e0bf8817 	ldw	r2,-480(fp)
  825364:	1885883a 	add	r2,r3,r2
  825368:	e0bf8915 	stw	r2,-476(fp)
  82536c:	01440304 	movi	r5,4108
  825370:	e13f8217 	ldw	r4,-504(fp)
  825374:	08301e80 	call	8301e8 <__mulsi3>
  825378:	1007883a 	mov	r3,r2
  82537c:	e0bf8717 	ldw	r2,-484(fp)
  825380:	1887c83a 	sub	r3,r3,r2
  825384:	e0bf8817 	ldw	r2,-480(fp)
  825388:	1885883a 	add	r2,r3,r2
  82538c:	e0bf8a15 	stw	r2,-472(fp)
  825390:	01428804 	movi	r5,2592
  825394:	e13f8517 	ldw	r4,-492(fp)
  825398:	08301e80 	call	8301e8 <__mulsi3>
  82539c:	e0bf8715 	stw	r2,-484(fp)
  8253a0:	0143e544 	movi	r5,3989
  8253a4:	e13f8617 	ldw	r4,-488(fp)
  8253a8:	08301e80 	call	8301e8 <__mulsi3>
  8253ac:	1007883a 	mov	r3,r2
  8253b0:	e0bf8117 	ldw	r2,-508(fp)
  8253b4:	1885883a 	add	r2,r3,r2
  8253b8:	e0bf8815 	stw	r2,-480(fp)
  8253bc:	01487804 	movi	r5,8672
  8253c0:	e13f8217 	ldw	r4,-504(fp)
  8253c4:	08301e80 	call	8301e8 <__mulsi3>
  8253c8:	1007883a 	mov	r3,r2
  8253cc:	e0bf8717 	ldw	r2,-484(fp)
  8253d0:	1887c83a 	sub	r3,r3,r2
  8253d4:	e0bf8817 	ldw	r2,-480(fp)
  8253d8:	1885883a 	add	r2,r3,r2
  8253dc:	e0bf8b15 	stw	r2,-468(fp)
  8253e0:	0175fb84 	movi	r5,-10258
  8253e4:	e13f8217 	ldw	r4,-504(fp)
  8253e8:	08301e80 	call	8301e8 <__mulsi3>
  8253ec:	1007883a 	mov	r3,r2
  8253f0:	e0bf8717 	ldw	r2,-484(fp)
  8253f4:	1887883a 	add	r3,r3,r2
  8253f8:	e0bf8817 	ldw	r2,-480(fp)
  8253fc:	1885883a 	add	r2,r3,r2
  825400:	e0bf8c15 	stw	r2,-464(fp)
  825404:	01437c84 	movi	r5,3570
  825408:	e13f8517 	ldw	r4,-492(fp)
  82540c:	08301e80 	call	8301e8 <__mulsi3>
  825410:	e0bf8715 	stw	r2,-484(fp)
  825414:	01477f84 	movi	r5,7678
  825418:	e13f8617 	ldw	r4,-488(fp)
  82541c:	08301e80 	call	8301e8 <__mulsi3>
  825420:	1007883a 	mov	r3,r2
  825424:	e0bf8117 	ldw	r2,-508(fp)
  825428:	1885c83a 	sub	r2,r3,r2
  82542c:	e0bf8815 	stw	r2,-480(fp)
  825430:	017ea304 	movi	r5,-1396
  825434:	e13f8217 	ldw	r4,-504(fp)
  825438:	08301e80 	call	8301e8 <__mulsi3>
  82543c:	1007883a 	mov	r3,r2
  825440:	e0bf8717 	ldw	r2,-484(fp)
  825444:	1887c83a 	sub	r3,r3,r2
  825448:	e0bf8817 	ldw	r2,-480(fp)
  82544c:	1885c83a 	sub	r2,r3,r2
  825450:	e0bf8d15 	stw	r2,-460(fp)
  825454:	017992c4 	movi	r5,-6581
  825458:	e13f8217 	ldw	r4,-504(fp)
  82545c:	08301e80 	call	8301e8 <__mulsi3>
  825460:	1007883a 	mov	r3,r2
  825464:	e0bf8717 	ldw	r2,-484(fp)
  825468:	1887883a 	add	r3,r3,r2
  82546c:	e0bf8817 	ldw	r2,-480(fp)
  825470:	1885c83a 	sub	r2,r3,r2
  825474:	e0bf8e15 	stw	r2,-456(fp)
  825478:	e0ff8617 	ldw	r3,-488(fp)
  82547c:	e0bf8217 	ldw	r2,-504(fp)
  825480:	1885c83a 	sub	r2,r3,r2
  825484:	014b5044 	movi	r5,11585
  825488:	1009883a 	mov	r4,r2
  82548c:	08301e80 	call	8301e8 <__mulsi3>
  825490:	1007883a 	mov	r3,r2
  825494:	e0bf8117 	ldw	r2,-508(fp)
  825498:	1885883a 	add	r2,r3,r2
  82549c:	e0bf8f15 	stw	r2,-452(fp)
  8254a0:	e0bf7c17 	ldw	r2,-528(fp)
  8254a4:	10800404 	addi	r2,r2,16
  8254a8:	1080000b 	ldhu	r2,0(r2)
  8254ac:	10ffffcc 	andi	r3,r2,65535
  8254b0:	18e0001c 	xori	r3,r3,32768
  8254b4:	18e00004 	addi	r3,r3,-32768
  8254b8:	e0bf7d17 	ldw	r2,-524(fp)
  8254bc:	10800804 	addi	r2,r2,32
  8254c0:	10800017 	ldw	r2,0(r2)
  8254c4:	100b883a 	mov	r5,r2
  8254c8:	1809883a 	mov	r4,r3
  8254cc:	08301e80 	call	8301e8 <__mulsi3>
  8254d0:	e0bf8115 	stw	r2,-508(fp)
  8254d4:	e0bf7c17 	ldw	r2,-528(fp)
  8254d8:	10800c04 	addi	r2,r2,48
  8254dc:	1080000b 	ldhu	r2,0(r2)
  8254e0:	10ffffcc 	andi	r3,r2,65535
  8254e4:	18e0001c 	xori	r3,r3,32768
  8254e8:	18e00004 	addi	r3,r3,-32768
  8254ec:	e0bf7d17 	ldw	r2,-524(fp)
  8254f0:	10801804 	addi	r2,r2,96
  8254f4:	10800017 	ldw	r2,0(r2)
  8254f8:	100b883a 	mov	r5,r2
  8254fc:	1809883a 	mov	r4,r3
  825500:	08301e80 	call	8301e8 <__mulsi3>
  825504:	e0bf8215 	stw	r2,-504(fp)
  825508:	e0bf7c17 	ldw	r2,-528(fp)
  82550c:	10801404 	addi	r2,r2,80
  825510:	1080000b 	ldhu	r2,0(r2)
  825514:	10ffffcc 	andi	r3,r2,65535
  825518:	18e0001c 	xori	r3,r3,32768
  82551c:	18e00004 	addi	r3,r3,-32768
  825520:	e0bf7d17 	ldw	r2,-524(fp)
  825524:	10802804 	addi	r2,r2,160
  825528:	10800017 	ldw	r2,0(r2)
  82552c:	100b883a 	mov	r5,r2
  825530:	1809883a 	mov	r4,r3
  825534:	08301e80 	call	8301e8 <__mulsi3>
  825538:	e0bf8315 	stw	r2,-500(fp)
  82553c:	e0bf7c17 	ldw	r2,-528(fp)
  825540:	10801c04 	addi	r2,r2,112
  825544:	1080000b 	ldhu	r2,0(r2)
  825548:	10ffffcc 	andi	r3,r2,65535
  82554c:	18e0001c 	xori	r3,r3,32768
  825550:	18e00004 	addi	r3,r3,-32768
  825554:	e0bf7d17 	ldw	r2,-524(fp)
  825558:	10803804 	addi	r2,r2,224
  82555c:	10800017 	ldw	r2,0(r2)
  825560:	100b883a 	mov	r5,r2
  825564:	1809883a 	mov	r4,r3
  825568:	08301e80 	call	8301e8 <__mulsi3>
  82556c:	e0bf8415 	stw	r2,-496(fp)
  825570:	e0ff8117 	ldw	r3,-508(fp)
  825574:	e0bf8217 	ldw	r2,-504(fp)
  825578:	1885883a 	add	r2,r3,r2
  82557c:	014a9404 	movi	r5,10832
  825580:	1009883a 	mov	r4,r2
  825584:	08301e80 	call	8301e8 <__mulsi3>
  825588:	e0bf8615 	stw	r2,-488(fp)
  82558c:	e0ff8117 	ldw	r3,-508(fp)
  825590:	e0bf8317 	ldw	r2,-500(fp)
  825594:	1885883a 	add	r2,r3,r2
  825598:	01494f84 	movi	r5,9534
  82559c:	1009883a 	mov	r4,r2
  8255a0:	08301e80 	call	8301e8 <__mulsi3>
  8255a4:	e0bf8715 	stw	r2,-484(fp)
  8255a8:	e0ff8117 	ldw	r3,-508(fp)
  8255ac:	e0bf8417 	ldw	r2,-496(fp)
  8255b0:	1885883a 	add	r2,r3,r2
  8255b4:	e0bf9015 	stw	r2,-448(fp)
  8255b8:	01478084 	movi	r5,7682
  8255bc:	e13f9017 	ldw	r4,-448(fp)
  8255c0:	08301e80 	call	8301e8 <__mulsi3>
  8255c4:	e0bf8815 	stw	r2,-480(fp)
  8255c8:	e0ff8617 	ldw	r3,-488(fp)
  8255cc:	e0bf8717 	ldw	r2,-484(fp)
  8255d0:	1887883a 	add	r3,r3,r2
  8255d4:	e0bf8817 	ldw	r2,-480(fp)
  8255d8:	18a1883a 	add	r16,r3,r2
  8255dc:	016fd6c4 	movi	r5,-16549
  8255e0:	e13f8117 	ldw	r4,-508(fp)
  8255e4:	08301e80 	call	8301e8 <__mulsi3>
  8255e8:	8085883a 	add	r2,r16,r2
  8255ec:	e0bf8515 	stw	r2,-492(fp)
  8255f0:	e0ff8217 	ldw	r3,-504(fp)
  8255f4:	e0bf8317 	ldw	r2,-500(fp)
  8255f8:	1885883a 	add	r2,r3,r2
  8255fc:	017d4ac4 	movi	r5,-2773
  825600:	1009883a 	mov	r4,r2
  825604:	08301e80 	call	8301e8 <__mulsi3>
  825608:	e0bf9115 	stw	r2,-444(fp)
  82560c:	0146b2c4 	movi	r5,6859
  825610:	e13f8217 	ldw	r4,-504(fp)
  825614:	08301e80 	call	8301e8 <__mulsi3>
  825618:	1007883a 	mov	r3,r2
  82561c:	e0bf9117 	ldw	r2,-444(fp)
  825620:	1885883a 	add	r2,r3,r2
  825624:	e0ff8617 	ldw	r3,-488(fp)
  825628:	1885883a 	add	r2,r3,r2
  82562c:	e0bf8615 	stw	r2,-488(fp)
  825630:	01736c44 	movi	r5,-12879
  825634:	e13f8317 	ldw	r4,-500(fp)
  825638:	08301e80 	call	8301e8 <__mulsi3>
  82563c:	1007883a 	mov	r3,r2
  825640:	e0bf9117 	ldw	r2,-444(fp)
  825644:	1885883a 	add	r2,r3,r2
  825648:	e0ff8717 	ldw	r3,-484(fp)
  82564c:	1885883a 	add	r2,r3,r2
  825650:	e0bf8715 	stw	r2,-484(fp)
  825654:	e0ff8217 	ldw	r3,-504(fp)
  825658:	e0bf8417 	ldw	r2,-496(fp)
  82565c:	1885883a 	add	r2,r3,r2
  825660:	0176b084 	movi	r5,-9534
  825664:	1009883a 	mov	r4,r2
  825668:	08301e80 	call	8301e8 <__mulsi3>
  82566c:	e0bf9115 	stw	r2,-444(fp)
  825670:	e0ff8617 	ldw	r3,-488(fp)
  825674:	e0bf9117 	ldw	r2,-444(fp)
  825678:	1885883a 	add	r2,r3,r2
  82567c:	e0bf8615 	stw	r2,-488(fp)
  825680:	0151a504 	movi	r5,18068
  825684:	e13f8417 	ldw	r4,-496(fp)
  825688:	08301e80 	call	8301e8 <__mulsi3>
  82568c:	1007883a 	mov	r3,r2
  825690:	e0bf9117 	ldw	r2,-444(fp)
  825694:	1885883a 	add	r2,r3,r2
  825698:	e0ff8817 	ldw	r3,-480(fp)
  82569c:	1885883a 	add	r2,r3,r2
  8256a0:	e0bf8815 	stw	r2,-480(fp)
  8256a4:	e0ff8317 	ldw	r3,-500(fp)
  8256a8:	e0bf8417 	ldw	r2,-496(fp)
  8256ac:	1885883a 	add	r2,r3,r2
  8256b0:	017abe04 	movi	r5,-5384
  8256b4:	1009883a 	mov	r4,r2
  8256b8:	08301e80 	call	8301e8 <__mulsi3>
  8256bc:	e0bf9115 	stw	r2,-444(fp)
  8256c0:	e0ff8717 	ldw	r3,-484(fp)
  8256c4:	e0bf9117 	ldw	r2,-444(fp)
  8256c8:	1885883a 	add	r2,r3,r2
  8256cc:	e0bf8715 	stw	r2,-484(fp)
  8256d0:	e0ff8817 	ldw	r3,-480(fp)
  8256d4:	e0bf9117 	ldw	r2,-444(fp)
  8256d8:	1885883a 	add	r2,r3,r2
  8256dc:	e0bf8815 	stw	r2,-480(fp)
  8256e0:	0142b544 	movi	r5,2773
  8256e4:	e13f9017 	ldw	r4,-448(fp)
  8256e8:	08301e80 	call	8301e8 <__mulsi3>
  8256ec:	e0bf9015 	stw	r2,-448(fp)
  8256f0:	01428cc4 	movi	r5,2611
  8256f4:	e13f8117 	ldw	r4,-508(fp)
  8256f8:	08301e80 	call	8301e8 <__mulsi3>
  8256fc:	1007883a 	mov	r3,r2
  825700:	e0bf9017 	ldw	r2,-448(fp)
  825704:	18a1883a 	add	r16,r3,r2
  825708:	017c4584 	movi	r5,-3818
  82570c:	e13f8217 	ldw	r4,-504(fp)
  825710:	08301e80 	call	8301e8 <__mulsi3>
  825714:	8085883a 	add	r2,r16,r2
  825718:	e0bf9115 	stw	r2,-444(fp)
  82571c:	e0ff8317 	ldw	r3,-500(fp)
  825720:	e0bf8217 	ldw	r2,-504(fp)
  825724:	1885c83a 	sub	r2,r3,r2
  825728:	01478084 	movi	r5,7682
  82572c:	1009883a 	mov	r4,r2
  825730:	08301e80 	call	8301e8 <__mulsi3>
  825734:	e0bf8115 	stw	r2,-508(fp)
  825738:	e0ff9117 	ldw	r3,-444(fp)
  82573c:	e0bf8117 	ldw	r2,-508(fp)
  825740:	1885883a 	add	r2,r3,r2
  825744:	e0bf9115 	stw	r2,-444(fp)
  825748:	01431384 	movi	r5,3150
  82574c:	e13f8317 	ldw	r4,-500(fp)
  825750:	08301e80 	call	8301e8 <__mulsi3>
  825754:	1007883a 	mov	r3,r2
  825758:	e0bf8117 	ldw	r2,-508(fp)
  82575c:	18a1883a 	add	r16,r3,r2
  825760:	01720fc4 	movi	r5,-14273
  825764:	e13f8417 	ldw	r4,-496(fp)
  825768:	08301e80 	call	8301e8 <__mulsi3>
  82576c:	8085883a 	add	r2,r16,r2
  825770:	e0ff9017 	ldw	r3,-448(fp)
  825774:	1885883a 	add	r2,r3,r2
  825778:	e0bf9015 	stw	r2,-448(fp)
  82577c:	e0ff8917 	ldw	r3,-476(fp)
  825780:	e0bf8517 	ldw	r2,-492(fp)
  825784:	1885883a 	add	r2,r3,r2
  825788:	1007d2fa 	srai	r3,r2,11
  82578c:	e0bf7e17 	ldw	r2,-520(fp)
  825790:	10c00015 	stw	r3,0(r2)
  825794:	e0bf7e17 	ldw	r2,-520(fp)
  825798:	10806004 	addi	r2,r2,384
  82579c:	e13f8917 	ldw	r4,-476(fp)
  8257a0:	e0ff8517 	ldw	r3,-492(fp)
  8257a4:	20c7c83a 	sub	r3,r4,r3
  8257a8:	1807d2fa 	srai	r3,r3,11
  8257ac:	10c00015 	stw	r3,0(r2)
  8257b0:	e0bf7e17 	ldw	r2,-520(fp)
  8257b4:	10800804 	addi	r2,r2,32
  8257b8:	e13f8b17 	ldw	r4,-468(fp)
  8257bc:	e0ff8617 	ldw	r3,-488(fp)
  8257c0:	20c7883a 	add	r3,r4,r3
  8257c4:	1807d2fa 	srai	r3,r3,11
  8257c8:	10c00015 	stw	r3,0(r2)
  8257cc:	e0bf7e17 	ldw	r2,-520(fp)
  8257d0:	10805804 	addi	r2,r2,352
  8257d4:	e13f8b17 	ldw	r4,-468(fp)
  8257d8:	e0ff8617 	ldw	r3,-488(fp)
  8257dc:	20c7c83a 	sub	r3,r4,r3
  8257e0:	1807d2fa 	srai	r3,r3,11
  8257e4:	10c00015 	stw	r3,0(r2)
  8257e8:	e0bf7e17 	ldw	r2,-520(fp)
  8257ec:	10801004 	addi	r2,r2,64
  8257f0:	e13f8a17 	ldw	r4,-472(fp)
  8257f4:	e0ff8717 	ldw	r3,-484(fp)
  8257f8:	20c7883a 	add	r3,r4,r3
  8257fc:	1807d2fa 	srai	r3,r3,11
  825800:	10c00015 	stw	r3,0(r2)
  825804:	e0bf7e17 	ldw	r2,-520(fp)
  825808:	10805004 	addi	r2,r2,320
  82580c:	e13f8a17 	ldw	r4,-472(fp)
  825810:	e0ff8717 	ldw	r3,-484(fp)
  825814:	20c7c83a 	sub	r3,r4,r3
  825818:	1807d2fa 	srai	r3,r3,11
  82581c:	10c00015 	stw	r3,0(r2)
  825820:	e0bf7e17 	ldw	r2,-520(fp)
  825824:	10801804 	addi	r2,r2,96
  825828:	e13f8d17 	ldw	r4,-460(fp)
  82582c:	e0ff8817 	ldw	r3,-480(fp)
  825830:	20c7883a 	add	r3,r4,r3
  825834:	1807d2fa 	srai	r3,r3,11
  825838:	10c00015 	stw	r3,0(r2)
  82583c:	e0bf7e17 	ldw	r2,-520(fp)
  825840:	10804804 	addi	r2,r2,288
  825844:	e13f8d17 	ldw	r4,-460(fp)
  825848:	e0ff8817 	ldw	r3,-480(fp)
  82584c:	20c7c83a 	sub	r3,r4,r3
  825850:	1807d2fa 	srai	r3,r3,11
  825854:	10c00015 	stw	r3,0(r2)
  825858:	e0bf7e17 	ldw	r2,-520(fp)
  82585c:	10802004 	addi	r2,r2,128
  825860:	e13f8e17 	ldw	r4,-456(fp)
  825864:	e0ff9117 	ldw	r3,-444(fp)
  825868:	20c7883a 	add	r3,r4,r3
  82586c:	1807d2fa 	srai	r3,r3,11
  825870:	10c00015 	stw	r3,0(r2)
  825874:	e0bf7e17 	ldw	r2,-520(fp)
  825878:	10804004 	addi	r2,r2,256
  82587c:	e13f8e17 	ldw	r4,-456(fp)
  825880:	e0ff9117 	ldw	r3,-444(fp)
  825884:	20c7c83a 	sub	r3,r4,r3
  825888:	1807d2fa 	srai	r3,r3,11
  82588c:	10c00015 	stw	r3,0(r2)
  825890:	e0bf7e17 	ldw	r2,-520(fp)
  825894:	10802804 	addi	r2,r2,160
  825898:	e13f8c17 	ldw	r4,-464(fp)
  82589c:	e0ff9017 	ldw	r3,-448(fp)
  8258a0:	20c7883a 	add	r3,r4,r3
  8258a4:	1807d2fa 	srai	r3,r3,11
  8258a8:	10c00015 	stw	r3,0(r2)
  8258ac:	e0bf7e17 	ldw	r2,-520(fp)
  8258b0:	10803804 	addi	r2,r2,224
  8258b4:	e13f8c17 	ldw	r4,-464(fp)
  8258b8:	e0ff9017 	ldw	r3,-448(fp)
  8258bc:	20c7c83a 	sub	r3,r4,r3
  8258c0:	1807d2fa 	srai	r3,r3,11
  8258c4:	10c00015 	stw	r3,0(r2)
  8258c8:	e0bf7e17 	ldw	r2,-520(fp)
  8258cc:	10803004 	addi	r2,r2,192
  8258d0:	e0ff8f17 	ldw	r3,-452(fp)
  8258d4:	1807d2fa 	srai	r3,r3,11
  8258d8:	10c00015 	stw	r3,0(r2)
  8258dc:	e0bf7f17 	ldw	r2,-516(fp)
  8258e0:	10800044 	addi	r2,r2,1
  8258e4:	e0bf7f15 	stw	r2,-516(fp)
  8258e8:	e0bf7c17 	ldw	r2,-528(fp)
  8258ec:	10800084 	addi	r2,r2,2
  8258f0:	e0bf7c15 	stw	r2,-528(fp)
  8258f4:	e0bf7d17 	ldw	r2,-524(fp)
  8258f8:	10800104 	addi	r2,r2,4
  8258fc:	e0bf7d15 	stw	r2,-524(fp)
  825900:	e0bf7e17 	ldw	r2,-520(fp)
  825904:	10800104 	addi	r2,r2,4
  825908:	e0bf7e15 	stw	r2,-520(fp)
  82590c:	e0bf7f17 	ldw	r2,-516(fp)
  825910:	10800210 	cmplti	r2,r2,8
  825914:	103e411e 	bne	r2,zero,82521c <__alt_mem_epcs_flash_controller_0+0xff81c21c>
  825918:	e0bf9304 	addi	r2,fp,-436
  82591c:	e0bf7e15 	stw	r2,-520(fp)
  825920:	e03f7f15 	stw	zero,-516(fp)
  825924:	0001ab06 	br	825fd4 <jpeg_idct_13x13+0xe10>
  825928:	e0bf7f17 	ldw	r2,-516(fp)
  82592c:	1085883a 	add	r2,r2,r2
  825930:	1085883a 	add	r2,r2,r2
  825934:	1007883a 	mov	r3,r2
  825938:	e0bffe17 	ldw	r2,-8(fp)
  82593c:	10c5883a 	add	r2,r2,r3
  825940:	10c00017 	ldw	r3,0(r2)
  825944:	e0800217 	ldw	r2,8(fp)
  825948:	1885883a 	add	r2,r3,r2
  82594c:	e0bf9215 	stw	r2,-440(fp)
  825950:	e0bf7e17 	ldw	r2,-520(fp)
  825954:	10800017 	ldw	r2,0(r2)
  825958:	10900404 	addi	r2,r2,16400
  82595c:	e0bf8115 	stw	r2,-508(fp)
  825960:	e0bf8117 	ldw	r2,-508(fp)
  825964:	1004937a 	slli	r2,r2,13
  825968:	e0bf8115 	stw	r2,-508(fp)
  82596c:	e0bf7e17 	ldw	r2,-520(fp)
  825970:	10800204 	addi	r2,r2,8
  825974:	10800017 	ldw	r2,0(r2)
  825978:	e0bf8215 	stw	r2,-504(fp)
  82597c:	e0bf7e17 	ldw	r2,-520(fp)
  825980:	10800404 	addi	r2,r2,16
  825984:	10800017 	ldw	r2,0(r2)
  825988:	e0bf8315 	stw	r2,-500(fp)
  82598c:	e0bf7e17 	ldw	r2,-520(fp)
  825990:	10800604 	addi	r2,r2,24
  825994:	10800017 	ldw	r2,0(r2)
  825998:	e0bf8415 	stw	r2,-496(fp)
  82599c:	e0ff8317 	ldw	r3,-500(fp)
  8259a0:	e0bf8417 	ldw	r2,-496(fp)
  8259a4:	1885883a 	add	r2,r3,r2
  8259a8:	e0bf8515 	stw	r2,-492(fp)
  8259ac:	e0ff8317 	ldw	r3,-500(fp)
  8259b0:	e0bf8417 	ldw	r2,-496(fp)
  8259b4:	1885c83a 	sub	r2,r3,r2
  8259b8:	e0bf8615 	stw	r2,-488(fp)
  8259bc:	01493e44 	movi	r5,9465
  8259c0:	e13f8517 	ldw	r4,-492(fp)
  8259c4:	08301e80 	call	8301e8 <__mulsi3>
  8259c8:	e0bf8715 	stw	r2,-484(fp)
  8259cc:	0140c644 	movi	r5,793
  8259d0:	e13f8617 	ldw	r4,-488(fp)
  8259d4:	08301e80 	call	8301e8 <__mulsi3>
  8259d8:	1007883a 	mov	r3,r2
  8259dc:	e0bf8117 	ldw	r2,-508(fp)
  8259e0:	1885883a 	add	r2,r3,r2
  8259e4:	e0bf8815 	stw	r2,-480(fp)
  8259e8:	014afc44 	movi	r5,11249
  8259ec:	e13f8217 	ldw	r4,-504(fp)
  8259f0:	08301e80 	call	8301e8 <__mulsi3>
  8259f4:	1007883a 	mov	r3,r2
  8259f8:	e0bf8717 	ldw	r2,-484(fp)
  8259fc:	1887883a 	add	r3,r3,r2
  825a00:	e0bf8817 	ldw	r2,-480(fp)
  825a04:	1885883a 	add	r2,r3,r2
  825a08:	e0bf8915 	stw	r2,-476(fp)
  825a0c:	01440304 	movi	r5,4108
  825a10:	e13f8217 	ldw	r4,-504(fp)
  825a14:	08301e80 	call	8301e8 <__mulsi3>
  825a18:	1007883a 	mov	r3,r2
  825a1c:	e0bf8717 	ldw	r2,-484(fp)
  825a20:	1887c83a 	sub	r3,r3,r2
  825a24:	e0bf8817 	ldw	r2,-480(fp)
  825a28:	1885883a 	add	r2,r3,r2
  825a2c:	e0bf8a15 	stw	r2,-472(fp)
  825a30:	01428804 	movi	r5,2592
  825a34:	e13f8517 	ldw	r4,-492(fp)
  825a38:	08301e80 	call	8301e8 <__mulsi3>
  825a3c:	e0bf8715 	stw	r2,-484(fp)
  825a40:	0143e544 	movi	r5,3989
  825a44:	e13f8617 	ldw	r4,-488(fp)
  825a48:	08301e80 	call	8301e8 <__mulsi3>
  825a4c:	1007883a 	mov	r3,r2
  825a50:	e0bf8117 	ldw	r2,-508(fp)
  825a54:	1885883a 	add	r2,r3,r2
  825a58:	e0bf8815 	stw	r2,-480(fp)
  825a5c:	01487804 	movi	r5,8672
  825a60:	e13f8217 	ldw	r4,-504(fp)
  825a64:	08301e80 	call	8301e8 <__mulsi3>
  825a68:	1007883a 	mov	r3,r2
  825a6c:	e0bf8717 	ldw	r2,-484(fp)
  825a70:	1887c83a 	sub	r3,r3,r2
  825a74:	e0bf8817 	ldw	r2,-480(fp)
  825a78:	1885883a 	add	r2,r3,r2
  825a7c:	e0bf8b15 	stw	r2,-468(fp)
  825a80:	0175fb84 	movi	r5,-10258
  825a84:	e13f8217 	ldw	r4,-504(fp)
  825a88:	08301e80 	call	8301e8 <__mulsi3>
  825a8c:	1007883a 	mov	r3,r2
  825a90:	e0bf8717 	ldw	r2,-484(fp)
  825a94:	1887883a 	add	r3,r3,r2
  825a98:	e0bf8817 	ldw	r2,-480(fp)
  825a9c:	1885883a 	add	r2,r3,r2
  825aa0:	e0bf8c15 	stw	r2,-464(fp)
  825aa4:	01437c84 	movi	r5,3570
  825aa8:	e13f8517 	ldw	r4,-492(fp)
  825aac:	08301e80 	call	8301e8 <__mulsi3>
  825ab0:	e0bf8715 	stw	r2,-484(fp)
  825ab4:	01477f84 	movi	r5,7678
  825ab8:	e13f8617 	ldw	r4,-488(fp)
  825abc:	08301e80 	call	8301e8 <__mulsi3>
  825ac0:	1007883a 	mov	r3,r2
  825ac4:	e0bf8117 	ldw	r2,-508(fp)
  825ac8:	1885c83a 	sub	r2,r3,r2
  825acc:	e0bf8815 	stw	r2,-480(fp)
  825ad0:	017ea304 	movi	r5,-1396
  825ad4:	e13f8217 	ldw	r4,-504(fp)
  825ad8:	08301e80 	call	8301e8 <__mulsi3>
  825adc:	1007883a 	mov	r3,r2
  825ae0:	e0bf8717 	ldw	r2,-484(fp)
  825ae4:	1887c83a 	sub	r3,r3,r2
  825ae8:	e0bf8817 	ldw	r2,-480(fp)
  825aec:	1885c83a 	sub	r2,r3,r2
  825af0:	e0bf8d15 	stw	r2,-460(fp)
  825af4:	017992c4 	movi	r5,-6581
  825af8:	e13f8217 	ldw	r4,-504(fp)
  825afc:	08301e80 	call	8301e8 <__mulsi3>
  825b00:	1007883a 	mov	r3,r2
  825b04:	e0bf8717 	ldw	r2,-484(fp)
  825b08:	1887883a 	add	r3,r3,r2
  825b0c:	e0bf8817 	ldw	r2,-480(fp)
  825b10:	1885c83a 	sub	r2,r3,r2
  825b14:	e0bf8e15 	stw	r2,-456(fp)
  825b18:	e0ff8617 	ldw	r3,-488(fp)
  825b1c:	e0bf8217 	ldw	r2,-504(fp)
  825b20:	1885c83a 	sub	r2,r3,r2
  825b24:	014b5044 	movi	r5,11585
  825b28:	1009883a 	mov	r4,r2
  825b2c:	08301e80 	call	8301e8 <__mulsi3>
  825b30:	1007883a 	mov	r3,r2
  825b34:	e0bf8117 	ldw	r2,-508(fp)
  825b38:	1885883a 	add	r2,r3,r2
  825b3c:	e0bf8f15 	stw	r2,-452(fp)
  825b40:	e0bf7e17 	ldw	r2,-520(fp)
  825b44:	10800104 	addi	r2,r2,4
  825b48:	10800017 	ldw	r2,0(r2)
  825b4c:	e0bf8115 	stw	r2,-508(fp)
  825b50:	e0bf7e17 	ldw	r2,-520(fp)
  825b54:	10800304 	addi	r2,r2,12
  825b58:	10800017 	ldw	r2,0(r2)
  825b5c:	e0bf8215 	stw	r2,-504(fp)
  825b60:	e0bf7e17 	ldw	r2,-520(fp)
  825b64:	10800504 	addi	r2,r2,20
  825b68:	10800017 	ldw	r2,0(r2)
  825b6c:	e0bf8315 	stw	r2,-500(fp)
  825b70:	e0bf7e17 	ldw	r2,-520(fp)
  825b74:	10800704 	addi	r2,r2,28
  825b78:	10800017 	ldw	r2,0(r2)
  825b7c:	e0bf8415 	stw	r2,-496(fp)
  825b80:	e0ff8117 	ldw	r3,-508(fp)
  825b84:	e0bf8217 	ldw	r2,-504(fp)
  825b88:	1885883a 	add	r2,r3,r2
  825b8c:	014a9404 	movi	r5,10832
  825b90:	1009883a 	mov	r4,r2
  825b94:	08301e80 	call	8301e8 <__mulsi3>
  825b98:	e0bf8615 	stw	r2,-488(fp)
  825b9c:	e0ff8117 	ldw	r3,-508(fp)
  825ba0:	e0bf8317 	ldw	r2,-500(fp)
  825ba4:	1885883a 	add	r2,r3,r2
  825ba8:	01494f84 	movi	r5,9534
  825bac:	1009883a 	mov	r4,r2
  825bb0:	08301e80 	call	8301e8 <__mulsi3>
  825bb4:	e0bf8715 	stw	r2,-484(fp)
  825bb8:	e0ff8117 	ldw	r3,-508(fp)
  825bbc:	e0bf8417 	ldw	r2,-496(fp)
  825bc0:	1885883a 	add	r2,r3,r2
  825bc4:	e0bf9015 	stw	r2,-448(fp)
  825bc8:	01478084 	movi	r5,7682
  825bcc:	e13f9017 	ldw	r4,-448(fp)
  825bd0:	08301e80 	call	8301e8 <__mulsi3>
  825bd4:	e0bf8815 	stw	r2,-480(fp)
  825bd8:	e0ff8617 	ldw	r3,-488(fp)
  825bdc:	e0bf8717 	ldw	r2,-484(fp)
  825be0:	1887883a 	add	r3,r3,r2
  825be4:	e0bf8817 	ldw	r2,-480(fp)
  825be8:	18a1883a 	add	r16,r3,r2
  825bec:	016fd6c4 	movi	r5,-16549
  825bf0:	e13f8117 	ldw	r4,-508(fp)
  825bf4:	08301e80 	call	8301e8 <__mulsi3>
  825bf8:	8085883a 	add	r2,r16,r2
  825bfc:	e0bf8515 	stw	r2,-492(fp)
  825c00:	e0ff8217 	ldw	r3,-504(fp)
  825c04:	e0bf8317 	ldw	r2,-500(fp)
  825c08:	1885883a 	add	r2,r3,r2
  825c0c:	017d4ac4 	movi	r5,-2773
  825c10:	1009883a 	mov	r4,r2
  825c14:	08301e80 	call	8301e8 <__mulsi3>
  825c18:	e0bf9115 	stw	r2,-444(fp)
  825c1c:	0146b2c4 	movi	r5,6859
  825c20:	e13f8217 	ldw	r4,-504(fp)
  825c24:	08301e80 	call	8301e8 <__mulsi3>
  825c28:	1007883a 	mov	r3,r2
  825c2c:	e0bf9117 	ldw	r2,-444(fp)
  825c30:	1885883a 	add	r2,r3,r2
  825c34:	e0ff8617 	ldw	r3,-488(fp)
  825c38:	1885883a 	add	r2,r3,r2
  825c3c:	e0bf8615 	stw	r2,-488(fp)
  825c40:	01736c44 	movi	r5,-12879
  825c44:	e13f8317 	ldw	r4,-500(fp)
  825c48:	08301e80 	call	8301e8 <__mulsi3>
  825c4c:	1007883a 	mov	r3,r2
  825c50:	e0bf9117 	ldw	r2,-444(fp)
  825c54:	1885883a 	add	r2,r3,r2
  825c58:	e0ff8717 	ldw	r3,-484(fp)
  825c5c:	1885883a 	add	r2,r3,r2
  825c60:	e0bf8715 	stw	r2,-484(fp)
  825c64:	e0ff8217 	ldw	r3,-504(fp)
  825c68:	e0bf8417 	ldw	r2,-496(fp)
  825c6c:	1885883a 	add	r2,r3,r2
  825c70:	0176b084 	movi	r5,-9534
  825c74:	1009883a 	mov	r4,r2
  825c78:	08301e80 	call	8301e8 <__mulsi3>
  825c7c:	e0bf9115 	stw	r2,-444(fp)
  825c80:	e0ff8617 	ldw	r3,-488(fp)
  825c84:	e0bf9117 	ldw	r2,-444(fp)
  825c88:	1885883a 	add	r2,r3,r2
  825c8c:	e0bf8615 	stw	r2,-488(fp)
  825c90:	0151a504 	movi	r5,18068
  825c94:	e13f8417 	ldw	r4,-496(fp)
  825c98:	08301e80 	call	8301e8 <__mulsi3>
  825c9c:	1007883a 	mov	r3,r2
  825ca0:	e0bf9117 	ldw	r2,-444(fp)
  825ca4:	1885883a 	add	r2,r3,r2
  825ca8:	e0ff8817 	ldw	r3,-480(fp)
  825cac:	1885883a 	add	r2,r3,r2
  825cb0:	e0bf8815 	stw	r2,-480(fp)
  825cb4:	e0ff8317 	ldw	r3,-500(fp)
  825cb8:	e0bf8417 	ldw	r2,-496(fp)
  825cbc:	1885883a 	add	r2,r3,r2
  825cc0:	017abe04 	movi	r5,-5384
  825cc4:	1009883a 	mov	r4,r2
  825cc8:	08301e80 	call	8301e8 <__mulsi3>
  825ccc:	e0bf9115 	stw	r2,-444(fp)
  825cd0:	e0ff8717 	ldw	r3,-484(fp)
  825cd4:	e0bf9117 	ldw	r2,-444(fp)
  825cd8:	1885883a 	add	r2,r3,r2
  825cdc:	e0bf8715 	stw	r2,-484(fp)
  825ce0:	e0ff8817 	ldw	r3,-480(fp)
  825ce4:	e0bf9117 	ldw	r2,-444(fp)
  825ce8:	1885883a 	add	r2,r3,r2
  825cec:	e0bf8815 	stw	r2,-480(fp)
  825cf0:	0142b544 	movi	r5,2773
  825cf4:	e13f9017 	ldw	r4,-448(fp)
  825cf8:	08301e80 	call	8301e8 <__mulsi3>
  825cfc:	e0bf9015 	stw	r2,-448(fp)
  825d00:	01428cc4 	movi	r5,2611
  825d04:	e13f8117 	ldw	r4,-508(fp)
  825d08:	08301e80 	call	8301e8 <__mulsi3>
  825d0c:	1007883a 	mov	r3,r2
  825d10:	e0bf9017 	ldw	r2,-448(fp)
  825d14:	18a1883a 	add	r16,r3,r2
  825d18:	017c4584 	movi	r5,-3818
  825d1c:	e13f8217 	ldw	r4,-504(fp)
  825d20:	08301e80 	call	8301e8 <__mulsi3>
  825d24:	8085883a 	add	r2,r16,r2
  825d28:	e0bf9115 	stw	r2,-444(fp)
  825d2c:	e0ff8317 	ldw	r3,-500(fp)
  825d30:	e0bf8217 	ldw	r2,-504(fp)
  825d34:	1885c83a 	sub	r2,r3,r2
  825d38:	01478084 	movi	r5,7682
  825d3c:	1009883a 	mov	r4,r2
  825d40:	08301e80 	call	8301e8 <__mulsi3>
  825d44:	e0bf8115 	stw	r2,-508(fp)
  825d48:	e0ff9117 	ldw	r3,-444(fp)
  825d4c:	e0bf8117 	ldw	r2,-508(fp)
  825d50:	1885883a 	add	r2,r3,r2
  825d54:	e0bf9115 	stw	r2,-444(fp)
  825d58:	01431384 	movi	r5,3150
  825d5c:	e13f8317 	ldw	r4,-500(fp)
  825d60:	08301e80 	call	8301e8 <__mulsi3>
  825d64:	1007883a 	mov	r3,r2
  825d68:	e0bf8117 	ldw	r2,-508(fp)
  825d6c:	18a1883a 	add	r16,r3,r2
  825d70:	01720fc4 	movi	r5,-14273
  825d74:	e13f8417 	ldw	r4,-496(fp)
  825d78:	08301e80 	call	8301e8 <__mulsi3>
  825d7c:	8085883a 	add	r2,r16,r2
  825d80:	e0ff9017 	ldw	r3,-448(fp)
  825d84:	1885883a 	add	r2,r3,r2
  825d88:	e0bf9015 	stw	r2,-448(fp)
  825d8c:	e0ff8917 	ldw	r3,-476(fp)
  825d90:	e0bf8517 	ldw	r2,-492(fp)
  825d94:	1885883a 	add	r2,r3,r2
  825d98:	1005d4ba 	srai	r2,r2,18
  825d9c:	1080ffcc 	andi	r2,r2,1023
  825da0:	e0ff8017 	ldw	r3,-512(fp)
  825da4:	1885883a 	add	r2,r3,r2
  825da8:	10c00003 	ldbu	r3,0(r2)
  825dac:	e0bf9217 	ldw	r2,-440(fp)
  825db0:	10c00005 	stb	r3,0(r2)
  825db4:	e0bf9217 	ldw	r2,-440(fp)
  825db8:	10800304 	addi	r2,r2,12
  825dbc:	e13f8917 	ldw	r4,-476(fp)
  825dc0:	e0ff8517 	ldw	r3,-492(fp)
  825dc4:	20c7c83a 	sub	r3,r4,r3
  825dc8:	1807d4ba 	srai	r3,r3,18
  825dcc:	18c0ffcc 	andi	r3,r3,1023
  825dd0:	e13f8017 	ldw	r4,-512(fp)
  825dd4:	20c7883a 	add	r3,r4,r3
  825dd8:	18c00003 	ldbu	r3,0(r3)
  825ddc:	10c00005 	stb	r3,0(r2)
  825de0:	e0bf9217 	ldw	r2,-440(fp)
  825de4:	10800044 	addi	r2,r2,1
  825de8:	e13f8b17 	ldw	r4,-468(fp)
  825dec:	e0ff8617 	ldw	r3,-488(fp)
  825df0:	20c7883a 	add	r3,r4,r3
  825df4:	1807d4ba 	srai	r3,r3,18
  825df8:	18c0ffcc 	andi	r3,r3,1023
  825dfc:	e13f8017 	ldw	r4,-512(fp)
  825e00:	20c7883a 	add	r3,r4,r3
  825e04:	18c00003 	ldbu	r3,0(r3)
  825e08:	10c00005 	stb	r3,0(r2)
  825e0c:	e0bf9217 	ldw	r2,-440(fp)
  825e10:	108002c4 	addi	r2,r2,11
  825e14:	e13f8b17 	ldw	r4,-468(fp)
  825e18:	e0ff8617 	ldw	r3,-488(fp)
  825e1c:	20c7c83a 	sub	r3,r4,r3
  825e20:	1807d4ba 	srai	r3,r3,18
  825e24:	18c0ffcc 	andi	r3,r3,1023
  825e28:	e13f8017 	ldw	r4,-512(fp)
  825e2c:	20c7883a 	add	r3,r4,r3
  825e30:	18c00003 	ldbu	r3,0(r3)
  825e34:	10c00005 	stb	r3,0(r2)
  825e38:	e0bf9217 	ldw	r2,-440(fp)
  825e3c:	10800084 	addi	r2,r2,2
  825e40:	e13f8a17 	ldw	r4,-472(fp)
  825e44:	e0ff8717 	ldw	r3,-484(fp)
  825e48:	20c7883a 	add	r3,r4,r3
  825e4c:	1807d4ba 	srai	r3,r3,18
  825e50:	18c0ffcc 	andi	r3,r3,1023
  825e54:	e13f8017 	ldw	r4,-512(fp)
  825e58:	20c7883a 	add	r3,r4,r3
  825e5c:	18c00003 	ldbu	r3,0(r3)
  825e60:	10c00005 	stb	r3,0(r2)
  825e64:	e0bf9217 	ldw	r2,-440(fp)
  825e68:	10800284 	addi	r2,r2,10
  825e6c:	e13f8a17 	ldw	r4,-472(fp)
  825e70:	e0ff8717 	ldw	r3,-484(fp)
  825e74:	20c7c83a 	sub	r3,r4,r3
  825e78:	1807d4ba 	srai	r3,r3,18
  825e7c:	18c0ffcc 	andi	r3,r3,1023
  825e80:	e13f8017 	ldw	r4,-512(fp)
  825e84:	20c7883a 	add	r3,r4,r3
  825e88:	18c00003 	ldbu	r3,0(r3)
  825e8c:	10c00005 	stb	r3,0(r2)
  825e90:	e0bf9217 	ldw	r2,-440(fp)
  825e94:	108000c4 	addi	r2,r2,3
  825e98:	e13f8d17 	ldw	r4,-460(fp)
  825e9c:	e0ff8817 	ldw	r3,-480(fp)
  825ea0:	20c7883a 	add	r3,r4,r3
  825ea4:	1807d4ba 	srai	r3,r3,18
  825ea8:	18c0ffcc 	andi	r3,r3,1023
  825eac:	e13f8017 	ldw	r4,-512(fp)
  825eb0:	20c7883a 	add	r3,r4,r3
  825eb4:	18c00003 	ldbu	r3,0(r3)
  825eb8:	10c00005 	stb	r3,0(r2)
  825ebc:	e0bf9217 	ldw	r2,-440(fp)
  825ec0:	10800244 	addi	r2,r2,9
  825ec4:	e13f8d17 	ldw	r4,-460(fp)
  825ec8:	e0ff8817 	ldw	r3,-480(fp)
  825ecc:	20c7c83a 	sub	r3,r4,r3
  825ed0:	1807d4ba 	srai	r3,r3,18
  825ed4:	18c0ffcc 	andi	r3,r3,1023
  825ed8:	e13f8017 	ldw	r4,-512(fp)
  825edc:	20c7883a 	add	r3,r4,r3
  825ee0:	18c00003 	ldbu	r3,0(r3)
  825ee4:	10c00005 	stb	r3,0(r2)
  825ee8:	e0bf9217 	ldw	r2,-440(fp)
  825eec:	10800104 	addi	r2,r2,4
  825ef0:	e13f8e17 	ldw	r4,-456(fp)
  825ef4:	e0ff9117 	ldw	r3,-444(fp)
  825ef8:	20c7883a 	add	r3,r4,r3
  825efc:	1807d4ba 	srai	r3,r3,18
  825f00:	18c0ffcc 	andi	r3,r3,1023
  825f04:	e13f8017 	ldw	r4,-512(fp)
  825f08:	20c7883a 	add	r3,r4,r3
  825f0c:	18c00003 	ldbu	r3,0(r3)
  825f10:	10c00005 	stb	r3,0(r2)
  825f14:	e0bf9217 	ldw	r2,-440(fp)
  825f18:	10800204 	addi	r2,r2,8
  825f1c:	e13f8e17 	ldw	r4,-456(fp)
  825f20:	e0ff9117 	ldw	r3,-444(fp)
  825f24:	20c7c83a 	sub	r3,r4,r3
  825f28:	1807d4ba 	srai	r3,r3,18
  825f2c:	18c0ffcc 	andi	r3,r3,1023
  825f30:	e13f8017 	ldw	r4,-512(fp)
  825f34:	20c7883a 	add	r3,r4,r3
  825f38:	18c00003 	ldbu	r3,0(r3)
  825f3c:	10c00005 	stb	r3,0(r2)
  825f40:	e0bf9217 	ldw	r2,-440(fp)
  825f44:	10800144 	addi	r2,r2,5
  825f48:	e13f8c17 	ldw	r4,-464(fp)
  825f4c:	e0ff9017 	ldw	r3,-448(fp)
  825f50:	20c7883a 	add	r3,r4,r3
  825f54:	1807d4ba 	srai	r3,r3,18
  825f58:	18c0ffcc 	andi	r3,r3,1023
  825f5c:	e13f8017 	ldw	r4,-512(fp)
  825f60:	20c7883a 	add	r3,r4,r3
  825f64:	18c00003 	ldbu	r3,0(r3)
  825f68:	10c00005 	stb	r3,0(r2)
  825f6c:	e0bf9217 	ldw	r2,-440(fp)
  825f70:	108001c4 	addi	r2,r2,7
  825f74:	e13f8c17 	ldw	r4,-464(fp)
  825f78:	e0ff9017 	ldw	r3,-448(fp)
  825f7c:	20c7c83a 	sub	r3,r4,r3
  825f80:	1807d4ba 	srai	r3,r3,18
  825f84:	18c0ffcc 	andi	r3,r3,1023
  825f88:	e13f8017 	ldw	r4,-512(fp)
  825f8c:	20c7883a 	add	r3,r4,r3
  825f90:	18c00003 	ldbu	r3,0(r3)
  825f94:	10c00005 	stb	r3,0(r2)
  825f98:	e0bf9217 	ldw	r2,-440(fp)
  825f9c:	10800184 	addi	r2,r2,6
  825fa0:	e0ff8f17 	ldw	r3,-452(fp)
  825fa4:	1807d4ba 	srai	r3,r3,18
  825fa8:	18c0ffcc 	andi	r3,r3,1023
  825fac:	e13f8017 	ldw	r4,-512(fp)
  825fb0:	20c7883a 	add	r3,r4,r3
  825fb4:	18c00003 	ldbu	r3,0(r3)
  825fb8:	10c00005 	stb	r3,0(r2)
  825fbc:	e0bf7e17 	ldw	r2,-520(fp)
  825fc0:	10800804 	addi	r2,r2,32
  825fc4:	e0bf7e15 	stw	r2,-520(fp)
  825fc8:	e0bf7f17 	ldw	r2,-516(fp)
  825fcc:	10800044 	addi	r2,r2,1
  825fd0:	e0bf7f15 	stw	r2,-516(fp)
  825fd4:	e0bf7f17 	ldw	r2,-516(fp)
  825fd8:	10800350 	cmplti	r2,r2,13
  825fdc:	103e521e 	bne	r2,zero,825928 <__alt_mem_epcs_flash_controller_0+0xff81c928>
  825fe0:	0001883a 	nop
  825fe4:	e6ffff04 	addi	sp,fp,-4
  825fe8:	dfc00217 	ldw	ra,8(sp)
  825fec:	df000117 	ldw	fp,4(sp)
  825ff0:	dc000017 	ldw	r16,0(sp)
  825ff4:	dec00304 	addi	sp,sp,12
  825ff8:	f800283a 	ret

00825ffc <jpeg_idct_14x14>:
  825ffc:	deff7104 	addi	sp,sp,-572
  826000:	dfc08e15 	stw	ra,568(sp)
  826004:	df008d15 	stw	fp,564(sp)
  826008:	dc008c15 	stw	r16,560(sp)
  82600c:	df008d04 	addi	fp,sp,564
  826010:	e13ffb15 	stw	r4,-20(fp)
  826014:	e17ffc15 	stw	r5,-16(fp)
  826018:	e1bffd15 	stw	r6,-12(fp)
  82601c:	e1fffe15 	stw	r7,-8(fp)
  826020:	e0bffb17 	ldw	r2,-20(fp)
  826024:	10805417 	ldw	r2,336(r2)
  826028:	10bfa004 	addi	r2,r2,-384
  82602c:	e0bf7715 	stw	r2,-548(fp)
  826030:	e0bffd17 	ldw	r2,-12(fp)
  826034:	e0bf7315 	stw	r2,-564(fp)
  826038:	e0bffc17 	ldw	r2,-16(fp)
  82603c:	10801517 	ldw	r2,84(r2)
  826040:	e0bf7415 	stw	r2,-560(fp)
  826044:	e0bf8b04 	addi	r2,fp,-468
  826048:	e0bf7515 	stw	r2,-556(fp)
  82604c:	e03f7615 	stw	zero,-552(fp)
  826050:	0001a606 	br	8266ec <jpeg_idct_14x14+0x6f0>
  826054:	e0bf7317 	ldw	r2,-564(fp)
  826058:	1080000b 	ldhu	r2,0(r2)
  82605c:	10ffffcc 	andi	r3,r2,65535
  826060:	18e0001c 	xori	r3,r3,32768
  826064:	18e00004 	addi	r3,r3,-32768
  826068:	e0bf7417 	ldw	r2,-560(fp)
  82606c:	10800017 	ldw	r2,0(r2)
  826070:	100b883a 	mov	r5,r2
  826074:	1809883a 	mov	r4,r3
  826078:	08301e80 	call	8301e8 <__mulsi3>
  82607c:	e0bf7815 	stw	r2,-544(fp)
  826080:	e0bf7817 	ldw	r2,-544(fp)
  826084:	1004937a 	slli	r2,r2,13
  826088:	e0bf7815 	stw	r2,-544(fp)
  82608c:	e0bf7817 	ldw	r2,-544(fp)
  826090:	10810004 	addi	r2,r2,1024
  826094:	e0bf7815 	stw	r2,-544(fp)
  826098:	e0bf7317 	ldw	r2,-564(fp)
  82609c:	10801004 	addi	r2,r2,64
  8260a0:	1080000b 	ldhu	r2,0(r2)
  8260a4:	10ffffcc 	andi	r3,r2,65535
  8260a8:	18e0001c 	xori	r3,r3,32768
  8260ac:	18e00004 	addi	r3,r3,-32768
  8260b0:	e0bf7417 	ldw	r2,-560(fp)
  8260b4:	10802004 	addi	r2,r2,128
  8260b8:	10800017 	ldw	r2,0(r2)
  8260bc:	100b883a 	mov	r5,r2
  8260c0:	1809883a 	mov	r4,r3
  8260c4:	08301e80 	call	8301e8 <__mulsi3>
  8260c8:	e0bf7915 	stw	r2,-540(fp)
  8260cc:	014a3184 	movi	r5,10438
  8260d0:	e13f7917 	ldw	r4,-540(fp)
  8260d4:	08301e80 	call	8301e8 <__mulsi3>
  8260d8:	e0bf7a15 	stw	r2,-536(fp)
  8260dc:	01428484 	movi	r5,2578
  8260e0:	e13f7917 	ldw	r4,-540(fp)
  8260e4:	08301e80 	call	8301e8 <__mulsi3>
  8260e8:	e0bf7b15 	stw	r2,-532(fp)
  8260ec:	01470dc4 	movi	r5,7223
  8260f0:	e13f7917 	ldw	r4,-540(fp)
  8260f4:	08301e80 	call	8301e8 <__mulsi3>
  8260f8:	e0bf7915 	stw	r2,-540(fp)
  8260fc:	e0ff7817 	ldw	r3,-544(fp)
  826100:	e0bf7a17 	ldw	r2,-536(fp)
  826104:	1885883a 	add	r2,r3,r2
  826108:	e0bf7c15 	stw	r2,-528(fp)
  82610c:	e0ff7817 	ldw	r3,-544(fp)
  826110:	e0bf7b17 	ldw	r2,-532(fp)
  826114:	1885883a 	add	r2,r3,r2
  826118:	e0bf7d15 	stw	r2,-524(fp)
  82611c:	e0ff7817 	ldw	r3,-544(fp)
  826120:	e0bf7917 	ldw	r2,-540(fp)
  826124:	1885c83a 	sub	r2,r3,r2
  826128:	e0bf7e15 	stw	r2,-520(fp)
  82612c:	e0ff7a17 	ldw	r3,-536(fp)
  826130:	e0bf7b17 	ldw	r2,-532(fp)
  826134:	1887883a 	add	r3,r3,r2
  826138:	e0bf7917 	ldw	r2,-540(fp)
  82613c:	1885c83a 	sub	r2,r3,r2
  826140:	1085883a 	add	r2,r2,r2
  826144:	1007883a 	mov	r3,r2
  826148:	e0bf7817 	ldw	r2,-544(fp)
  82614c:	10c5c83a 	sub	r2,r2,r3
  826150:	1005d2fa 	srai	r2,r2,11
  826154:	e0bf7f15 	stw	r2,-516(fp)
  826158:	e0bf7317 	ldw	r2,-564(fp)
  82615c:	10800804 	addi	r2,r2,32
  826160:	1080000b 	ldhu	r2,0(r2)
  826164:	10ffffcc 	andi	r3,r2,65535
  826168:	18e0001c 	xori	r3,r3,32768
  82616c:	18e00004 	addi	r3,r3,-32768
  826170:	e0bf7417 	ldw	r2,-560(fp)
  826174:	10801004 	addi	r2,r2,64
  826178:	10800017 	ldw	r2,0(r2)
  82617c:	100b883a 	mov	r5,r2
  826180:	1809883a 	mov	r4,r3
  826184:	08301e80 	call	8301e8 <__mulsi3>
  826188:	e0bf7815 	stw	r2,-544(fp)
  82618c:	e0bf7317 	ldw	r2,-564(fp)
  826190:	10801804 	addi	r2,r2,96
  826194:	1080000b 	ldhu	r2,0(r2)
  826198:	10ffffcc 	andi	r3,r2,65535
  82619c:	18e0001c 	xori	r3,r3,32768
  8261a0:	18e00004 	addi	r3,r3,-32768
  8261a4:	e0bf7417 	ldw	r2,-560(fp)
  8261a8:	10803004 	addi	r2,r2,192
  8261ac:	10800017 	ldw	r2,0(r2)
  8261b0:	100b883a 	mov	r5,r2
  8261b4:	1809883a 	mov	r4,r3
  8261b8:	08301e80 	call	8301e8 <__mulsi3>
  8261bc:	e0bf7a15 	stw	r2,-536(fp)
  8261c0:	e0ff7817 	ldw	r3,-544(fp)
  8261c4:	e0bf7a17 	ldw	r2,-536(fp)
  8261c8:	1885883a 	add	r2,r3,r2
  8261cc:	0148d884 	movi	r5,9058
  8261d0:	1009883a 	mov	r4,r2
  8261d4:	08301e80 	call	8301e8 <__mulsi3>
  8261d8:	e0bf7b15 	stw	r2,-532(fp)
  8261dc:	01422f44 	movi	r5,2237
  8261e0:	e13f7817 	ldw	r4,-544(fp)
  8261e4:	08301e80 	call	8301e8 <__mulsi3>
  8261e8:	1007883a 	mov	r3,r2
  8261ec:	e0bf7b17 	ldw	r2,-532(fp)
  8261f0:	1885883a 	add	r2,r3,r2
  8261f4:	e0bf8015 	stw	r2,-512(fp)
  8261f8:	01723f04 	movi	r5,-14084
  8261fc:	e13f7a17 	ldw	r4,-536(fp)
  826200:	08301e80 	call	8301e8 <__mulsi3>
  826204:	1007883a 	mov	r3,r2
  826208:	e0bf7b17 	ldw	r2,-532(fp)
  82620c:	1885883a 	add	r2,r3,r2
  826210:	e0bf8115 	stw	r2,-508(fp)
  826214:	0144e8c4 	movi	r5,5027
  826218:	e13f7817 	ldw	r4,-544(fp)
  82621c:	08301e80 	call	8301e8 <__mulsi3>
  826220:	1021883a 	mov	r16,r2
  826224:	0174f844 	movi	r5,-11295
  826228:	e13f7a17 	ldw	r4,-536(fp)
  82622c:	08301e80 	call	8301e8 <__mulsi3>
  826230:	8085883a 	add	r2,r16,r2
  826234:	e0bf8215 	stw	r2,-504(fp)
  826238:	e0ff7c17 	ldw	r3,-528(fp)
  82623c:	e0bf8017 	ldw	r2,-512(fp)
  826240:	1885883a 	add	r2,r3,r2
  826244:	e0bf8315 	stw	r2,-500(fp)
  826248:	e0ff7c17 	ldw	r3,-528(fp)
  82624c:	e0bf8017 	ldw	r2,-512(fp)
  826250:	1885c83a 	sub	r2,r3,r2
  826254:	e0bf8415 	stw	r2,-496(fp)
  826258:	e0ff7d17 	ldw	r3,-524(fp)
  82625c:	e0bf8117 	ldw	r2,-508(fp)
  826260:	1885883a 	add	r2,r3,r2
  826264:	e0bf8515 	stw	r2,-492(fp)
  826268:	e0ff7d17 	ldw	r3,-524(fp)
  82626c:	e0bf8117 	ldw	r2,-508(fp)
  826270:	1885c83a 	sub	r2,r3,r2
  826274:	e0bf8615 	stw	r2,-488(fp)
  826278:	e0ff7e17 	ldw	r3,-520(fp)
  82627c:	e0bf8217 	ldw	r2,-504(fp)
  826280:	1885883a 	add	r2,r3,r2
  826284:	e0bf8715 	stw	r2,-484(fp)
  826288:	e0ff7e17 	ldw	r3,-520(fp)
  82628c:	e0bf8217 	ldw	r2,-504(fp)
  826290:	1885c83a 	sub	r2,r3,r2
  826294:	e0bf8815 	stw	r2,-480(fp)
  826298:	e0bf7317 	ldw	r2,-564(fp)
  82629c:	10800404 	addi	r2,r2,16
  8262a0:	1080000b 	ldhu	r2,0(r2)
  8262a4:	10ffffcc 	andi	r3,r2,65535
  8262a8:	18e0001c 	xori	r3,r3,32768
  8262ac:	18e00004 	addi	r3,r3,-32768
  8262b0:	e0bf7417 	ldw	r2,-560(fp)
  8262b4:	10800804 	addi	r2,r2,32
  8262b8:	10800017 	ldw	r2,0(r2)
  8262bc:	100b883a 	mov	r5,r2
  8262c0:	1809883a 	mov	r4,r3
  8262c4:	08301e80 	call	8301e8 <__mulsi3>
  8262c8:	e0bf7815 	stw	r2,-544(fp)
  8262cc:	e0bf7317 	ldw	r2,-564(fp)
  8262d0:	10800c04 	addi	r2,r2,48
  8262d4:	1080000b 	ldhu	r2,0(r2)
  8262d8:	10ffffcc 	andi	r3,r2,65535
  8262dc:	18e0001c 	xori	r3,r3,32768
  8262e0:	18e00004 	addi	r3,r3,-32768
  8262e4:	e0bf7417 	ldw	r2,-560(fp)
  8262e8:	10801804 	addi	r2,r2,96
  8262ec:	10800017 	ldw	r2,0(r2)
  8262f0:	100b883a 	mov	r5,r2
  8262f4:	1809883a 	mov	r4,r3
  8262f8:	08301e80 	call	8301e8 <__mulsi3>
  8262fc:	e0bf7a15 	stw	r2,-536(fp)
  826300:	e0bf7317 	ldw	r2,-564(fp)
  826304:	10801404 	addi	r2,r2,80
  826308:	1080000b 	ldhu	r2,0(r2)
  82630c:	10ffffcc 	andi	r3,r2,65535
  826310:	18e0001c 	xori	r3,r3,32768
  826314:	18e00004 	addi	r3,r3,-32768
  826318:	e0bf7417 	ldw	r2,-560(fp)
  82631c:	10802804 	addi	r2,r2,160
  826320:	10800017 	ldw	r2,0(r2)
  826324:	100b883a 	mov	r5,r2
  826328:	1809883a 	mov	r4,r3
  82632c:	08301e80 	call	8301e8 <__mulsi3>
  826330:	e0bf7b15 	stw	r2,-532(fp)
  826334:	e0bf7317 	ldw	r2,-564(fp)
  826338:	10801c04 	addi	r2,r2,112
  82633c:	1080000b 	ldhu	r2,0(r2)
  826340:	10ffffcc 	andi	r3,r2,65535
  826344:	18e0001c 	xori	r3,r3,32768
  826348:	18e00004 	addi	r3,r3,-32768
  82634c:	e0bf7417 	ldw	r2,-560(fp)
  826350:	10803804 	addi	r2,r2,224
  826354:	10800017 	ldw	r2,0(r2)
  826358:	100b883a 	mov	r5,r2
  82635c:	1809883a 	mov	r4,r3
  826360:	08301e80 	call	8301e8 <__mulsi3>
  826364:	e0bf7915 	stw	r2,-540(fp)
  826368:	e0bf7917 	ldw	r2,-540(fp)
  82636c:	1004937a 	slli	r2,r2,13
  826370:	e0bf8015 	stw	r2,-512(fp)
  826374:	e0ff7817 	ldw	r3,-544(fp)
  826378:	e0bf7b17 	ldw	r2,-532(fp)
  82637c:	1885883a 	add	r2,r3,r2
  826380:	e0bf8115 	stw	r2,-508(fp)
  826384:	e0ff7817 	ldw	r3,-544(fp)
  826388:	e0bf7a17 	ldw	r2,-536(fp)
  82638c:	1885883a 	add	r2,r3,r2
  826390:	014aadc4 	movi	r5,10935
  826394:	1009883a 	mov	r4,r2
  826398:	08301e80 	call	8301e8 <__mulsi3>
  82639c:	e0bf7d15 	stw	r2,-524(fp)
  8263a0:	01499484 	movi	r5,9810
  8263a4:	e13f8117 	ldw	r4,-508(fp)
  8263a8:	08301e80 	call	8301e8 <__mulsi3>
  8263ac:	e0bf7e15 	stw	r2,-520(fp)
  8263b0:	e0ff7d17 	ldw	r3,-524(fp)
  8263b4:	e0bf7e17 	ldw	r2,-520(fp)
  8263b8:	1887883a 	add	r3,r3,r2
  8263bc:	e0bf8017 	ldw	r2,-512(fp)
  8263c0:	18a1883a 	add	r16,r3,r2
  8263c4:	0176fc04 	movi	r5,-9232
  8263c8:	e13f7817 	ldw	r4,-544(fp)
  8263cc:	08301e80 	call	8301e8 <__mulsi3>
  8263d0:	8085883a 	add	r2,r16,r2
  8263d4:	e0bf7c15 	stw	r2,-528(fp)
  8263d8:	01460504 	movi	r5,6164
  8263dc:	e13f8117 	ldw	r4,-508(fp)
  8263e0:	08301e80 	call	8301e8 <__mulsi3>
  8263e4:	e0bf8115 	stw	r2,-508(fp)
  8263e8:	017782c4 	movi	r5,-8693
  8263ec:	e13f7817 	ldw	r4,-544(fp)
  8263f0:	08301e80 	call	8301e8 <__mulsi3>
  8263f4:	1007883a 	mov	r3,r2
  8263f8:	e0bf8117 	ldw	r2,-508(fp)
  8263fc:	1885883a 	add	r2,r3,r2
  826400:	e0bf8915 	stw	r2,-476(fp)
  826404:	e0ff7817 	ldw	r3,-544(fp)
  826408:	e0bf7a17 	ldw	r2,-536(fp)
  82640c:	1885c83a 	sub	r2,r3,r2
  826410:	e0bf7815 	stw	r2,-544(fp)
  826414:	0143bc84 	movi	r5,3826
  826418:	e13f7817 	ldw	r4,-544(fp)
  82641c:	08301e80 	call	8301e8 <__mulsi3>
  826420:	1007883a 	mov	r3,r2
  826424:	e0bf8017 	ldw	r2,-512(fp)
  826428:	1885c83a 	sub	r2,r3,r2
  82642c:	e0bf8215 	stw	r2,-504(fp)
  826430:	e0ff8917 	ldw	r3,-476(fp)
  826434:	e0bf8217 	ldw	r2,-504(fp)
  826438:	1885883a 	add	r2,r3,r2
  82643c:	e0bf8915 	stw	r2,-476(fp)
  826440:	e0ff7817 	ldw	r3,-544(fp)
  826444:	e0bf7917 	ldw	r2,-540(fp)
  826448:	1885883a 	add	r2,r3,r2
  82644c:	e0bf7815 	stw	r2,-544(fp)
  826450:	e0ff7a17 	ldw	r3,-536(fp)
  826454:	e0bf7b17 	ldw	r2,-532(fp)
  826458:	1885883a 	add	r2,r3,r2
  82645c:	017ebbc4 	movi	r5,-1297
  826460:	1009883a 	mov	r4,r2
  826464:	08301e80 	call	8301e8 <__mulsi3>
  826468:	1007883a 	mov	r3,r2
  82646c:	e0bf8017 	ldw	r2,-512(fp)
  826470:	1885c83a 	sub	r2,r3,r2
  826474:	e0bf7915 	stw	r2,-540(fp)
  826478:	017c9b84 	movi	r5,-3474
  82647c:	e13f7a17 	ldw	r4,-536(fp)
  826480:	08301e80 	call	8301e8 <__mulsi3>
  826484:	1007883a 	mov	r3,r2
  826488:	e0bf7917 	ldw	r2,-540(fp)
  82648c:	1885883a 	add	r2,r3,r2
  826490:	e0ff7d17 	ldw	r3,-524(fp)
  826494:	1885883a 	add	r2,r3,r2
  826498:	e0bf7d15 	stw	r2,-524(fp)
  82649c:	016d0244 	movi	r5,-19447
  8264a0:	e13f7b17 	ldw	r4,-532(fp)
  8264a4:	08301e80 	call	8301e8 <__mulsi3>
  8264a8:	1007883a 	mov	r3,r2
  8264ac:	e0bf7917 	ldw	r2,-540(fp)
  8264b0:	1885883a 	add	r2,r3,r2
  8264b4:	e0ff7e17 	ldw	r3,-520(fp)
  8264b8:	1885883a 	add	r2,r3,r2
  8264bc:	e0bf7e15 	stw	r2,-520(fp)
  8264c0:	e0ff7b17 	ldw	r3,-532(fp)
  8264c4:	e0bf7a17 	ldw	r2,-536(fp)
  8264c8:	1885c83a 	sub	r2,r3,r2
  8264cc:	014b3e04 	movi	r5,11512
  8264d0:	1009883a 	mov	r4,r2
  8264d4:	08301e80 	call	8301e8 <__mulsi3>
  8264d8:	e0bf7915 	stw	r2,-540(fp)
  8264dc:	e0ff7917 	ldw	r3,-540(fp)
  8264e0:	e0bf8017 	ldw	r2,-512(fp)
  8264e4:	18a1883a 	add	r16,r3,r2
  8264e8:	01727984 	movi	r5,-13850
  8264ec:	e13f7b17 	ldw	r4,-532(fp)
  8264f0:	08301e80 	call	8301e8 <__mulsi3>
  8264f4:	8085883a 	add	r2,r16,r2
  8264f8:	e0ff8117 	ldw	r3,-508(fp)
  8264fc:	1885883a 	add	r2,r3,r2
  826500:	e0bf8115 	stw	r2,-508(fp)
  826504:	01456644 	movi	r5,5529
  826508:	e13f7a17 	ldw	r4,-536(fp)
  82650c:	08301e80 	call	8301e8 <__mulsi3>
  826510:	1007883a 	mov	r3,r2
  826514:	e0bf7917 	ldw	r2,-540(fp)
  826518:	1885883a 	add	r2,r3,r2
  82651c:	e0ff8217 	ldw	r3,-504(fp)
  826520:	1885883a 	add	r2,r3,r2
  826524:	e0bf8215 	stw	r2,-504(fp)
  826528:	e0ff7817 	ldw	r3,-544(fp)
  82652c:	e0bf7b17 	ldw	r2,-532(fp)
  826530:	1885c83a 	sub	r2,r3,r2
  826534:	1085883a 	add	r2,r2,r2
  826538:	1085883a 	add	r2,r2,r2
  82653c:	e0bf8015 	stw	r2,-512(fp)
  826540:	e0ff8317 	ldw	r3,-500(fp)
  826544:	e0bf7c17 	ldw	r2,-528(fp)
  826548:	1885883a 	add	r2,r3,r2
  82654c:	1007d2fa 	srai	r3,r2,11
  826550:	e0bf7517 	ldw	r2,-556(fp)
  826554:	10c00015 	stw	r3,0(r2)
  826558:	e0bf7517 	ldw	r2,-556(fp)
  82655c:	10806804 	addi	r2,r2,416
  826560:	e13f8317 	ldw	r4,-500(fp)
  826564:	e0ff7c17 	ldw	r3,-528(fp)
  826568:	20c7c83a 	sub	r3,r4,r3
  82656c:	1807d2fa 	srai	r3,r3,11
  826570:	10c00015 	stw	r3,0(r2)
  826574:	e0bf7517 	ldw	r2,-556(fp)
  826578:	10800804 	addi	r2,r2,32
  82657c:	e13f8517 	ldw	r4,-492(fp)
  826580:	e0ff7d17 	ldw	r3,-524(fp)
  826584:	20c7883a 	add	r3,r4,r3
  826588:	1807d2fa 	srai	r3,r3,11
  82658c:	10c00015 	stw	r3,0(r2)
  826590:	e0bf7517 	ldw	r2,-556(fp)
  826594:	10806004 	addi	r2,r2,384
  826598:	e13f8517 	ldw	r4,-492(fp)
  82659c:	e0ff7d17 	ldw	r3,-524(fp)
  8265a0:	20c7c83a 	sub	r3,r4,r3
  8265a4:	1807d2fa 	srai	r3,r3,11
  8265a8:	10c00015 	stw	r3,0(r2)
  8265ac:	e0bf7517 	ldw	r2,-556(fp)
  8265b0:	10801004 	addi	r2,r2,64
  8265b4:	e13f8717 	ldw	r4,-484(fp)
  8265b8:	e0ff7e17 	ldw	r3,-520(fp)
  8265bc:	20c7883a 	add	r3,r4,r3
  8265c0:	1807d2fa 	srai	r3,r3,11
  8265c4:	10c00015 	stw	r3,0(r2)
  8265c8:	e0bf7517 	ldw	r2,-556(fp)
  8265cc:	10805804 	addi	r2,r2,352
  8265d0:	e13f8717 	ldw	r4,-484(fp)
  8265d4:	e0ff7e17 	ldw	r3,-520(fp)
  8265d8:	20c7c83a 	sub	r3,r4,r3
  8265dc:	1807d2fa 	srai	r3,r3,11
  8265e0:	10c00015 	stw	r3,0(r2)
  8265e4:	e0bf7517 	ldw	r2,-556(fp)
  8265e8:	10801804 	addi	r2,r2,96
  8265ec:	e13f7f17 	ldw	r4,-516(fp)
  8265f0:	e0ff8017 	ldw	r3,-512(fp)
  8265f4:	20c7883a 	add	r3,r4,r3
  8265f8:	10c00015 	stw	r3,0(r2)
  8265fc:	e0bf7517 	ldw	r2,-556(fp)
  826600:	10805004 	addi	r2,r2,320
  826604:	e13f7f17 	ldw	r4,-516(fp)
  826608:	e0ff8017 	ldw	r3,-512(fp)
  82660c:	20c7c83a 	sub	r3,r4,r3
  826610:	10c00015 	stw	r3,0(r2)
  826614:	e0bf7517 	ldw	r2,-556(fp)
  826618:	10802004 	addi	r2,r2,128
  82661c:	e13f8817 	ldw	r4,-480(fp)
  826620:	e0ff8117 	ldw	r3,-508(fp)
  826624:	20c7883a 	add	r3,r4,r3
  826628:	1807d2fa 	srai	r3,r3,11
  82662c:	10c00015 	stw	r3,0(r2)
  826630:	e0bf7517 	ldw	r2,-556(fp)
  826634:	10804804 	addi	r2,r2,288
  826638:	e13f8817 	ldw	r4,-480(fp)
  82663c:	e0ff8117 	ldw	r3,-508(fp)
  826640:	20c7c83a 	sub	r3,r4,r3
  826644:	1807d2fa 	srai	r3,r3,11
  826648:	10c00015 	stw	r3,0(r2)
  82664c:	e0bf7517 	ldw	r2,-556(fp)
  826650:	10802804 	addi	r2,r2,160
  826654:	e13f8617 	ldw	r4,-488(fp)
  826658:	e0ff8217 	ldw	r3,-504(fp)
  82665c:	20c7883a 	add	r3,r4,r3
  826660:	1807d2fa 	srai	r3,r3,11
  826664:	10c00015 	stw	r3,0(r2)
  826668:	e0bf7517 	ldw	r2,-556(fp)
  82666c:	10804004 	addi	r2,r2,256
  826670:	e13f8617 	ldw	r4,-488(fp)
  826674:	e0ff8217 	ldw	r3,-504(fp)
  826678:	20c7c83a 	sub	r3,r4,r3
  82667c:	1807d2fa 	srai	r3,r3,11
  826680:	10c00015 	stw	r3,0(r2)
  826684:	e0bf7517 	ldw	r2,-556(fp)
  826688:	10803004 	addi	r2,r2,192
  82668c:	e13f8417 	ldw	r4,-496(fp)
  826690:	e0ff8917 	ldw	r3,-476(fp)
  826694:	20c7883a 	add	r3,r4,r3
  826698:	1807d2fa 	srai	r3,r3,11
  82669c:	10c00015 	stw	r3,0(r2)
  8266a0:	e0bf7517 	ldw	r2,-556(fp)
  8266a4:	10803804 	addi	r2,r2,224
  8266a8:	e13f8417 	ldw	r4,-496(fp)
  8266ac:	e0ff8917 	ldw	r3,-476(fp)
  8266b0:	20c7c83a 	sub	r3,r4,r3
  8266b4:	1807d2fa 	srai	r3,r3,11
  8266b8:	10c00015 	stw	r3,0(r2)
  8266bc:	e0bf7617 	ldw	r2,-552(fp)
  8266c0:	10800044 	addi	r2,r2,1
  8266c4:	e0bf7615 	stw	r2,-552(fp)
  8266c8:	e0bf7317 	ldw	r2,-564(fp)
  8266cc:	10800084 	addi	r2,r2,2
  8266d0:	e0bf7315 	stw	r2,-564(fp)
  8266d4:	e0bf7417 	ldw	r2,-560(fp)
  8266d8:	10800104 	addi	r2,r2,4
  8266dc:	e0bf7415 	stw	r2,-560(fp)
  8266e0:	e0bf7517 	ldw	r2,-556(fp)
  8266e4:	10800104 	addi	r2,r2,4
  8266e8:	e0bf7515 	stw	r2,-556(fp)
  8266ec:	e0bf7617 	ldw	r2,-552(fp)
  8266f0:	10800210 	cmplti	r2,r2,8
  8266f4:	103e571e 	bne	r2,zero,826054 <__alt_mem_epcs_flash_controller_0+0xff81d054>
  8266f8:	e0bf8b04 	addi	r2,fp,-468
  8266fc:	e0bf7515 	stw	r2,-556(fp)
  826700:	e03f7615 	stw	zero,-552(fp)
  826704:	00019706 	br	826d64 <jpeg_idct_14x14+0xd68>
  826708:	e0bf7617 	ldw	r2,-552(fp)
  82670c:	1085883a 	add	r2,r2,r2
  826710:	1085883a 	add	r2,r2,r2
  826714:	1007883a 	mov	r3,r2
  826718:	e0bffe17 	ldw	r2,-8(fp)
  82671c:	10c5883a 	add	r2,r2,r3
  826720:	10c00017 	ldw	r3,0(r2)
  826724:	e0800217 	ldw	r2,8(fp)
  826728:	1885883a 	add	r2,r3,r2
  82672c:	e0bf8a15 	stw	r2,-472(fp)
  826730:	e0bf7517 	ldw	r2,-556(fp)
  826734:	10800017 	ldw	r2,0(r2)
  826738:	10900404 	addi	r2,r2,16400
  82673c:	e0bf7815 	stw	r2,-544(fp)
  826740:	e0bf7817 	ldw	r2,-544(fp)
  826744:	1004937a 	slli	r2,r2,13
  826748:	e0bf7815 	stw	r2,-544(fp)
  82674c:	e0bf7517 	ldw	r2,-556(fp)
  826750:	10800404 	addi	r2,r2,16
  826754:	10800017 	ldw	r2,0(r2)
  826758:	e0bf7915 	stw	r2,-540(fp)
  82675c:	014a3184 	movi	r5,10438
  826760:	e13f7917 	ldw	r4,-540(fp)
  826764:	08301e80 	call	8301e8 <__mulsi3>
  826768:	e0bf7a15 	stw	r2,-536(fp)
  82676c:	01428484 	movi	r5,2578
  826770:	e13f7917 	ldw	r4,-540(fp)
  826774:	08301e80 	call	8301e8 <__mulsi3>
  826778:	e0bf7b15 	stw	r2,-532(fp)
  82677c:	01470dc4 	movi	r5,7223
  826780:	e13f7917 	ldw	r4,-540(fp)
  826784:	08301e80 	call	8301e8 <__mulsi3>
  826788:	e0bf7915 	stw	r2,-540(fp)
  82678c:	e0ff7817 	ldw	r3,-544(fp)
  826790:	e0bf7a17 	ldw	r2,-536(fp)
  826794:	1885883a 	add	r2,r3,r2
  826798:	e0bf7c15 	stw	r2,-528(fp)
  82679c:	e0ff7817 	ldw	r3,-544(fp)
  8267a0:	e0bf7b17 	ldw	r2,-532(fp)
  8267a4:	1885883a 	add	r2,r3,r2
  8267a8:	e0bf7d15 	stw	r2,-524(fp)
  8267ac:	e0ff7817 	ldw	r3,-544(fp)
  8267b0:	e0bf7917 	ldw	r2,-540(fp)
  8267b4:	1885c83a 	sub	r2,r3,r2
  8267b8:	e0bf7e15 	stw	r2,-520(fp)
  8267bc:	e0ff7a17 	ldw	r3,-536(fp)
  8267c0:	e0bf7b17 	ldw	r2,-532(fp)
  8267c4:	1887883a 	add	r3,r3,r2
  8267c8:	e0bf7917 	ldw	r2,-540(fp)
  8267cc:	1885c83a 	sub	r2,r3,r2
  8267d0:	1085883a 	add	r2,r2,r2
  8267d4:	1007883a 	mov	r3,r2
  8267d8:	e0bf7817 	ldw	r2,-544(fp)
  8267dc:	10c5c83a 	sub	r2,r2,r3
  8267e0:	e0bf7f15 	stw	r2,-516(fp)
  8267e4:	e0bf7517 	ldw	r2,-556(fp)
  8267e8:	10800204 	addi	r2,r2,8
  8267ec:	10800017 	ldw	r2,0(r2)
  8267f0:	e0bf7815 	stw	r2,-544(fp)
  8267f4:	e0bf7517 	ldw	r2,-556(fp)
  8267f8:	10800604 	addi	r2,r2,24
  8267fc:	10800017 	ldw	r2,0(r2)
  826800:	e0bf7a15 	stw	r2,-536(fp)
  826804:	e0ff7817 	ldw	r3,-544(fp)
  826808:	e0bf7a17 	ldw	r2,-536(fp)
  82680c:	1885883a 	add	r2,r3,r2
  826810:	0148d884 	movi	r5,9058
  826814:	1009883a 	mov	r4,r2
  826818:	08301e80 	call	8301e8 <__mulsi3>
  82681c:	e0bf7b15 	stw	r2,-532(fp)
  826820:	01422f44 	movi	r5,2237
  826824:	e13f7817 	ldw	r4,-544(fp)
  826828:	08301e80 	call	8301e8 <__mulsi3>
  82682c:	1007883a 	mov	r3,r2
  826830:	e0bf7b17 	ldw	r2,-532(fp)
  826834:	1885883a 	add	r2,r3,r2
  826838:	e0bf8015 	stw	r2,-512(fp)
  82683c:	01723f04 	movi	r5,-14084
  826840:	e13f7a17 	ldw	r4,-536(fp)
  826844:	08301e80 	call	8301e8 <__mulsi3>
  826848:	1007883a 	mov	r3,r2
  82684c:	e0bf7b17 	ldw	r2,-532(fp)
  826850:	1885883a 	add	r2,r3,r2
  826854:	e0bf8115 	stw	r2,-508(fp)
  826858:	0144e8c4 	movi	r5,5027
  82685c:	e13f7817 	ldw	r4,-544(fp)
  826860:	08301e80 	call	8301e8 <__mulsi3>
  826864:	1021883a 	mov	r16,r2
  826868:	0174f844 	movi	r5,-11295
  82686c:	e13f7a17 	ldw	r4,-536(fp)
  826870:	08301e80 	call	8301e8 <__mulsi3>
  826874:	8085883a 	add	r2,r16,r2
  826878:	e0bf8215 	stw	r2,-504(fp)
  82687c:	e0ff7c17 	ldw	r3,-528(fp)
  826880:	e0bf8017 	ldw	r2,-512(fp)
  826884:	1885883a 	add	r2,r3,r2
  826888:	e0bf8315 	stw	r2,-500(fp)
  82688c:	e0ff7c17 	ldw	r3,-528(fp)
  826890:	e0bf8017 	ldw	r2,-512(fp)
  826894:	1885c83a 	sub	r2,r3,r2
  826898:	e0bf8415 	stw	r2,-496(fp)
  82689c:	e0ff7d17 	ldw	r3,-524(fp)
  8268a0:	e0bf8117 	ldw	r2,-508(fp)
  8268a4:	1885883a 	add	r2,r3,r2
  8268a8:	e0bf8515 	stw	r2,-492(fp)
  8268ac:	e0ff7d17 	ldw	r3,-524(fp)
  8268b0:	e0bf8117 	ldw	r2,-508(fp)
  8268b4:	1885c83a 	sub	r2,r3,r2
  8268b8:	e0bf8615 	stw	r2,-488(fp)
  8268bc:	e0ff7e17 	ldw	r3,-520(fp)
  8268c0:	e0bf8217 	ldw	r2,-504(fp)
  8268c4:	1885883a 	add	r2,r3,r2
  8268c8:	e0bf8715 	stw	r2,-484(fp)
  8268cc:	e0ff7e17 	ldw	r3,-520(fp)
  8268d0:	e0bf8217 	ldw	r2,-504(fp)
  8268d4:	1885c83a 	sub	r2,r3,r2
  8268d8:	e0bf8815 	stw	r2,-480(fp)
  8268dc:	e0bf7517 	ldw	r2,-556(fp)
  8268e0:	10800104 	addi	r2,r2,4
  8268e4:	10800017 	ldw	r2,0(r2)
  8268e8:	e0bf7815 	stw	r2,-544(fp)
  8268ec:	e0bf7517 	ldw	r2,-556(fp)
  8268f0:	10800304 	addi	r2,r2,12
  8268f4:	10800017 	ldw	r2,0(r2)
  8268f8:	e0bf7a15 	stw	r2,-536(fp)
  8268fc:	e0bf7517 	ldw	r2,-556(fp)
  826900:	10800504 	addi	r2,r2,20
  826904:	10800017 	ldw	r2,0(r2)
  826908:	e0bf7b15 	stw	r2,-532(fp)
  82690c:	e0bf7517 	ldw	r2,-556(fp)
  826910:	10800704 	addi	r2,r2,28
  826914:	10800017 	ldw	r2,0(r2)
  826918:	e0bf7915 	stw	r2,-540(fp)
  82691c:	e0bf7917 	ldw	r2,-540(fp)
  826920:	1004937a 	slli	r2,r2,13
  826924:	e0bf7915 	stw	r2,-540(fp)
  826928:	e0ff7817 	ldw	r3,-544(fp)
  82692c:	e0bf7b17 	ldw	r2,-532(fp)
  826930:	1885883a 	add	r2,r3,r2
  826934:	e0bf8115 	stw	r2,-508(fp)
  826938:	e0ff7817 	ldw	r3,-544(fp)
  82693c:	e0bf7a17 	ldw	r2,-536(fp)
  826940:	1885883a 	add	r2,r3,r2
  826944:	014aadc4 	movi	r5,10935
  826948:	1009883a 	mov	r4,r2
  82694c:	08301e80 	call	8301e8 <__mulsi3>
  826950:	e0bf7d15 	stw	r2,-524(fp)
  826954:	01499484 	movi	r5,9810
  826958:	e13f8117 	ldw	r4,-508(fp)
  82695c:	08301e80 	call	8301e8 <__mulsi3>
  826960:	e0bf7e15 	stw	r2,-520(fp)
  826964:	e0ff7d17 	ldw	r3,-524(fp)
  826968:	e0bf7e17 	ldw	r2,-520(fp)
  82696c:	1887883a 	add	r3,r3,r2
  826970:	e0bf7917 	ldw	r2,-540(fp)
  826974:	18a1883a 	add	r16,r3,r2
  826978:	0176fc04 	movi	r5,-9232
  82697c:	e13f7817 	ldw	r4,-544(fp)
  826980:	08301e80 	call	8301e8 <__mulsi3>
  826984:	8085883a 	add	r2,r16,r2
  826988:	e0bf7c15 	stw	r2,-528(fp)
  82698c:	01460504 	movi	r5,6164
  826990:	e13f8117 	ldw	r4,-508(fp)
  826994:	08301e80 	call	8301e8 <__mulsi3>
  826998:	e0bf8115 	stw	r2,-508(fp)
  82699c:	017782c4 	movi	r5,-8693
  8269a0:	e13f7817 	ldw	r4,-544(fp)
  8269a4:	08301e80 	call	8301e8 <__mulsi3>
  8269a8:	1007883a 	mov	r3,r2
  8269ac:	e0bf8117 	ldw	r2,-508(fp)
  8269b0:	1885883a 	add	r2,r3,r2
  8269b4:	e0bf8915 	stw	r2,-476(fp)
  8269b8:	e0ff7817 	ldw	r3,-544(fp)
  8269bc:	e0bf7a17 	ldw	r2,-536(fp)
  8269c0:	1885c83a 	sub	r2,r3,r2
  8269c4:	e0bf7815 	stw	r2,-544(fp)
  8269c8:	0143bc84 	movi	r5,3826
  8269cc:	e13f7817 	ldw	r4,-544(fp)
  8269d0:	08301e80 	call	8301e8 <__mulsi3>
  8269d4:	1007883a 	mov	r3,r2
  8269d8:	e0bf7917 	ldw	r2,-540(fp)
  8269dc:	1885c83a 	sub	r2,r3,r2
  8269e0:	e0bf8215 	stw	r2,-504(fp)
  8269e4:	e0ff8917 	ldw	r3,-476(fp)
  8269e8:	e0bf8217 	ldw	r2,-504(fp)
  8269ec:	1885883a 	add	r2,r3,r2
  8269f0:	e0bf8915 	stw	r2,-476(fp)
  8269f4:	e0ff7a17 	ldw	r3,-536(fp)
  8269f8:	e0bf7b17 	ldw	r2,-532(fp)
  8269fc:	1885883a 	add	r2,r3,r2
  826a00:	017ebbc4 	movi	r5,-1297
  826a04:	1009883a 	mov	r4,r2
  826a08:	08301e80 	call	8301e8 <__mulsi3>
  826a0c:	1007883a 	mov	r3,r2
  826a10:	e0bf7917 	ldw	r2,-540(fp)
  826a14:	1885c83a 	sub	r2,r3,r2
  826a18:	e0bf8015 	stw	r2,-512(fp)
  826a1c:	017c9b84 	movi	r5,-3474
  826a20:	e13f7a17 	ldw	r4,-536(fp)
  826a24:	08301e80 	call	8301e8 <__mulsi3>
  826a28:	1007883a 	mov	r3,r2
  826a2c:	e0bf8017 	ldw	r2,-512(fp)
  826a30:	1885883a 	add	r2,r3,r2
  826a34:	e0ff7d17 	ldw	r3,-524(fp)
  826a38:	1885883a 	add	r2,r3,r2
  826a3c:	e0bf7d15 	stw	r2,-524(fp)
  826a40:	016d0244 	movi	r5,-19447
  826a44:	e13f7b17 	ldw	r4,-532(fp)
  826a48:	08301e80 	call	8301e8 <__mulsi3>
  826a4c:	1007883a 	mov	r3,r2
  826a50:	e0bf8017 	ldw	r2,-512(fp)
  826a54:	1885883a 	add	r2,r3,r2
  826a58:	e0ff7e17 	ldw	r3,-520(fp)
  826a5c:	1885883a 	add	r2,r3,r2
  826a60:	e0bf7e15 	stw	r2,-520(fp)
  826a64:	e0ff7b17 	ldw	r3,-532(fp)
  826a68:	e0bf7a17 	ldw	r2,-536(fp)
  826a6c:	1885c83a 	sub	r2,r3,r2
  826a70:	014b3e04 	movi	r5,11512
  826a74:	1009883a 	mov	r4,r2
  826a78:	08301e80 	call	8301e8 <__mulsi3>
  826a7c:	e0bf8015 	stw	r2,-512(fp)
  826a80:	e0ff8017 	ldw	r3,-512(fp)
  826a84:	e0bf7917 	ldw	r2,-540(fp)
  826a88:	18a1883a 	add	r16,r3,r2
  826a8c:	01727984 	movi	r5,-13850
  826a90:	e13f7b17 	ldw	r4,-532(fp)
  826a94:	08301e80 	call	8301e8 <__mulsi3>
  826a98:	8085883a 	add	r2,r16,r2
  826a9c:	e0ff8117 	ldw	r3,-508(fp)
  826aa0:	1885883a 	add	r2,r3,r2
  826aa4:	e0bf8115 	stw	r2,-508(fp)
  826aa8:	01456644 	movi	r5,5529
  826aac:	e13f7a17 	ldw	r4,-536(fp)
  826ab0:	08301e80 	call	8301e8 <__mulsi3>
  826ab4:	1007883a 	mov	r3,r2
  826ab8:	e0bf8017 	ldw	r2,-512(fp)
  826abc:	1885883a 	add	r2,r3,r2
  826ac0:	e0ff8217 	ldw	r3,-504(fp)
  826ac4:	1885883a 	add	r2,r3,r2
  826ac8:	e0bf8215 	stw	r2,-504(fp)
  826acc:	e0ff7817 	ldw	r3,-544(fp)
  826ad0:	e0bf7b17 	ldw	r2,-532(fp)
  826ad4:	1885c83a 	sub	r2,r3,r2
  826ad8:	1006937a 	slli	r3,r2,13
  826adc:	e0bf7917 	ldw	r2,-540(fp)
  826ae0:	1885883a 	add	r2,r3,r2
  826ae4:	e0bf8015 	stw	r2,-512(fp)
  826ae8:	e0ff8317 	ldw	r3,-500(fp)
  826aec:	e0bf7c17 	ldw	r2,-528(fp)
  826af0:	1885883a 	add	r2,r3,r2
  826af4:	1005d4ba 	srai	r2,r2,18
  826af8:	1080ffcc 	andi	r2,r2,1023
  826afc:	e0ff7717 	ldw	r3,-548(fp)
  826b00:	1885883a 	add	r2,r3,r2
  826b04:	10c00003 	ldbu	r3,0(r2)
  826b08:	e0bf8a17 	ldw	r2,-472(fp)
  826b0c:	10c00005 	stb	r3,0(r2)
  826b10:	e0bf8a17 	ldw	r2,-472(fp)
  826b14:	10800344 	addi	r2,r2,13
  826b18:	e13f8317 	ldw	r4,-500(fp)
  826b1c:	e0ff7c17 	ldw	r3,-528(fp)
  826b20:	20c7c83a 	sub	r3,r4,r3
  826b24:	1807d4ba 	srai	r3,r3,18
  826b28:	18c0ffcc 	andi	r3,r3,1023
  826b2c:	e13f7717 	ldw	r4,-548(fp)
  826b30:	20c7883a 	add	r3,r4,r3
  826b34:	18c00003 	ldbu	r3,0(r3)
  826b38:	10c00005 	stb	r3,0(r2)
  826b3c:	e0bf8a17 	ldw	r2,-472(fp)
  826b40:	10800044 	addi	r2,r2,1
  826b44:	e13f8517 	ldw	r4,-492(fp)
  826b48:	e0ff7d17 	ldw	r3,-524(fp)
  826b4c:	20c7883a 	add	r3,r4,r3
  826b50:	1807d4ba 	srai	r3,r3,18
  826b54:	18c0ffcc 	andi	r3,r3,1023
  826b58:	e13f7717 	ldw	r4,-548(fp)
  826b5c:	20c7883a 	add	r3,r4,r3
  826b60:	18c00003 	ldbu	r3,0(r3)
  826b64:	10c00005 	stb	r3,0(r2)
  826b68:	e0bf8a17 	ldw	r2,-472(fp)
  826b6c:	10800304 	addi	r2,r2,12
  826b70:	e13f8517 	ldw	r4,-492(fp)
  826b74:	e0ff7d17 	ldw	r3,-524(fp)
  826b78:	20c7c83a 	sub	r3,r4,r3
  826b7c:	1807d4ba 	srai	r3,r3,18
  826b80:	18c0ffcc 	andi	r3,r3,1023
  826b84:	e13f7717 	ldw	r4,-548(fp)
  826b88:	20c7883a 	add	r3,r4,r3
  826b8c:	18c00003 	ldbu	r3,0(r3)
  826b90:	10c00005 	stb	r3,0(r2)
  826b94:	e0bf8a17 	ldw	r2,-472(fp)
  826b98:	10800084 	addi	r2,r2,2
  826b9c:	e13f8717 	ldw	r4,-484(fp)
  826ba0:	e0ff7e17 	ldw	r3,-520(fp)
  826ba4:	20c7883a 	add	r3,r4,r3
  826ba8:	1807d4ba 	srai	r3,r3,18
  826bac:	18c0ffcc 	andi	r3,r3,1023
  826bb0:	e13f7717 	ldw	r4,-548(fp)
  826bb4:	20c7883a 	add	r3,r4,r3
  826bb8:	18c00003 	ldbu	r3,0(r3)
  826bbc:	10c00005 	stb	r3,0(r2)
  826bc0:	e0bf8a17 	ldw	r2,-472(fp)
  826bc4:	108002c4 	addi	r2,r2,11
  826bc8:	e13f8717 	ldw	r4,-484(fp)
  826bcc:	e0ff7e17 	ldw	r3,-520(fp)
  826bd0:	20c7c83a 	sub	r3,r4,r3
  826bd4:	1807d4ba 	srai	r3,r3,18
  826bd8:	18c0ffcc 	andi	r3,r3,1023
  826bdc:	e13f7717 	ldw	r4,-548(fp)
  826be0:	20c7883a 	add	r3,r4,r3
  826be4:	18c00003 	ldbu	r3,0(r3)
  826be8:	10c00005 	stb	r3,0(r2)
  826bec:	e0bf8a17 	ldw	r2,-472(fp)
  826bf0:	108000c4 	addi	r2,r2,3
  826bf4:	e13f7f17 	ldw	r4,-516(fp)
  826bf8:	e0ff8017 	ldw	r3,-512(fp)
  826bfc:	20c7883a 	add	r3,r4,r3
  826c00:	1807d4ba 	srai	r3,r3,18
  826c04:	18c0ffcc 	andi	r3,r3,1023
  826c08:	e13f7717 	ldw	r4,-548(fp)
  826c0c:	20c7883a 	add	r3,r4,r3
  826c10:	18c00003 	ldbu	r3,0(r3)
  826c14:	10c00005 	stb	r3,0(r2)
  826c18:	e0bf8a17 	ldw	r2,-472(fp)
  826c1c:	10800284 	addi	r2,r2,10
  826c20:	e13f7f17 	ldw	r4,-516(fp)
  826c24:	e0ff8017 	ldw	r3,-512(fp)
  826c28:	20c7c83a 	sub	r3,r4,r3
  826c2c:	1807d4ba 	srai	r3,r3,18
  826c30:	18c0ffcc 	andi	r3,r3,1023
  826c34:	e13f7717 	ldw	r4,-548(fp)
  826c38:	20c7883a 	add	r3,r4,r3
  826c3c:	18c00003 	ldbu	r3,0(r3)
  826c40:	10c00005 	stb	r3,0(r2)
  826c44:	e0bf8a17 	ldw	r2,-472(fp)
  826c48:	10800104 	addi	r2,r2,4
  826c4c:	e13f8817 	ldw	r4,-480(fp)
  826c50:	e0ff8117 	ldw	r3,-508(fp)
  826c54:	20c7883a 	add	r3,r4,r3
  826c58:	1807d4ba 	srai	r3,r3,18
  826c5c:	18c0ffcc 	andi	r3,r3,1023
  826c60:	e13f7717 	ldw	r4,-548(fp)
  826c64:	20c7883a 	add	r3,r4,r3
  826c68:	18c00003 	ldbu	r3,0(r3)
  826c6c:	10c00005 	stb	r3,0(r2)
  826c70:	e0bf8a17 	ldw	r2,-472(fp)
  826c74:	10800244 	addi	r2,r2,9
  826c78:	e13f8817 	ldw	r4,-480(fp)
  826c7c:	e0ff8117 	ldw	r3,-508(fp)
  826c80:	20c7c83a 	sub	r3,r4,r3
  826c84:	1807d4ba 	srai	r3,r3,18
  826c88:	18c0ffcc 	andi	r3,r3,1023
  826c8c:	e13f7717 	ldw	r4,-548(fp)
  826c90:	20c7883a 	add	r3,r4,r3
  826c94:	18c00003 	ldbu	r3,0(r3)
  826c98:	10c00005 	stb	r3,0(r2)
  826c9c:	e0bf8a17 	ldw	r2,-472(fp)
  826ca0:	10800144 	addi	r2,r2,5
  826ca4:	e13f8617 	ldw	r4,-488(fp)
  826ca8:	e0ff8217 	ldw	r3,-504(fp)
  826cac:	20c7883a 	add	r3,r4,r3
  826cb0:	1807d4ba 	srai	r3,r3,18
  826cb4:	18c0ffcc 	andi	r3,r3,1023
  826cb8:	e13f7717 	ldw	r4,-548(fp)
  826cbc:	20c7883a 	add	r3,r4,r3
  826cc0:	18c00003 	ldbu	r3,0(r3)
  826cc4:	10c00005 	stb	r3,0(r2)
  826cc8:	e0bf8a17 	ldw	r2,-472(fp)
  826ccc:	10800204 	addi	r2,r2,8
  826cd0:	e13f8617 	ldw	r4,-488(fp)
  826cd4:	e0ff8217 	ldw	r3,-504(fp)
  826cd8:	20c7c83a 	sub	r3,r4,r3
  826cdc:	1807d4ba 	srai	r3,r3,18
  826ce0:	18c0ffcc 	andi	r3,r3,1023
  826ce4:	e13f7717 	ldw	r4,-548(fp)
  826ce8:	20c7883a 	add	r3,r4,r3
  826cec:	18c00003 	ldbu	r3,0(r3)
  826cf0:	10c00005 	stb	r3,0(r2)
  826cf4:	e0bf8a17 	ldw	r2,-472(fp)
  826cf8:	10800184 	addi	r2,r2,6
  826cfc:	e13f8417 	ldw	r4,-496(fp)
  826d00:	e0ff8917 	ldw	r3,-476(fp)
  826d04:	20c7883a 	add	r3,r4,r3
  826d08:	1807d4ba 	srai	r3,r3,18
  826d0c:	18c0ffcc 	andi	r3,r3,1023
  826d10:	e13f7717 	ldw	r4,-548(fp)
  826d14:	20c7883a 	add	r3,r4,r3
  826d18:	18c00003 	ldbu	r3,0(r3)
  826d1c:	10c00005 	stb	r3,0(r2)
  826d20:	e0bf8a17 	ldw	r2,-472(fp)
  826d24:	108001c4 	addi	r2,r2,7
  826d28:	e13f8417 	ldw	r4,-496(fp)
  826d2c:	e0ff8917 	ldw	r3,-476(fp)
  826d30:	20c7c83a 	sub	r3,r4,r3
  826d34:	1807d4ba 	srai	r3,r3,18
  826d38:	18c0ffcc 	andi	r3,r3,1023
  826d3c:	e13f7717 	ldw	r4,-548(fp)
  826d40:	20c7883a 	add	r3,r4,r3
  826d44:	18c00003 	ldbu	r3,0(r3)
  826d48:	10c00005 	stb	r3,0(r2)
  826d4c:	e0bf7517 	ldw	r2,-556(fp)
  826d50:	10800804 	addi	r2,r2,32
  826d54:	e0bf7515 	stw	r2,-556(fp)
  826d58:	e0bf7617 	ldw	r2,-552(fp)
  826d5c:	10800044 	addi	r2,r2,1
  826d60:	e0bf7615 	stw	r2,-552(fp)
  826d64:	e0bf7617 	ldw	r2,-552(fp)
  826d68:	10800390 	cmplti	r2,r2,14
  826d6c:	103e661e 	bne	r2,zero,826708 <__alt_mem_epcs_flash_controller_0+0xff81d708>
  826d70:	0001883a 	nop
  826d74:	e6ffff04 	addi	sp,fp,-4
  826d78:	dfc00217 	ldw	ra,8(sp)
  826d7c:	df000117 	ldw	fp,4(sp)
  826d80:	dc000017 	ldw	r16,0(sp)
  826d84:	dec00304 	addi	sp,sp,12
  826d88:	f800283a 	ret

00826d8c <jpeg_idct_15x15>:
  826d8c:	deff6904 	addi	sp,sp,-604
  826d90:	dfc09615 	stw	ra,600(sp)
  826d94:	df009515 	stw	fp,596(sp)
  826d98:	df009504 	addi	fp,sp,596
  826d9c:	e13ffc15 	stw	r4,-16(fp)
  826da0:	e17ffd15 	stw	r5,-12(fp)
  826da4:	e1bffe15 	stw	r6,-8(fp)
  826da8:	e1ffff15 	stw	r7,-4(fp)
  826dac:	e0bffc17 	ldw	r2,-16(fp)
  826db0:	10805417 	ldw	r2,336(r2)
  826db4:	10bfa004 	addi	r2,r2,-384
  826db8:	e0bf6f15 	stw	r2,-580(fp)
  826dbc:	e0bffe17 	ldw	r2,-8(fp)
  826dc0:	e0bf6b15 	stw	r2,-596(fp)
  826dc4:	e0bffd17 	ldw	r2,-12(fp)
  826dc8:	10801517 	ldw	r2,84(r2)
  826dcc:	e0bf6c15 	stw	r2,-592(fp)
  826dd0:	e0bf8404 	addi	r2,fp,-496
  826dd4:	e0bf6d15 	stw	r2,-588(fp)
  826dd8:	e03f6e15 	stw	zero,-584(fp)
  826ddc:	0001b606 	br	8274b8 <jpeg_idct_15x15+0x72c>
  826de0:	e0bf6b17 	ldw	r2,-596(fp)
  826de4:	1080000b 	ldhu	r2,0(r2)
  826de8:	10ffffcc 	andi	r3,r2,65535
  826dec:	18e0001c 	xori	r3,r3,32768
  826df0:	18e00004 	addi	r3,r3,-32768
  826df4:	e0bf6c17 	ldw	r2,-592(fp)
  826df8:	10800017 	ldw	r2,0(r2)
  826dfc:	100b883a 	mov	r5,r2
  826e00:	1809883a 	mov	r4,r3
  826e04:	08301e80 	call	8301e8 <__mulsi3>
  826e08:	e0bf7015 	stw	r2,-576(fp)
  826e0c:	e0bf7017 	ldw	r2,-576(fp)
  826e10:	1004937a 	slli	r2,r2,13
  826e14:	e0bf7015 	stw	r2,-576(fp)
  826e18:	e0bf7017 	ldw	r2,-576(fp)
  826e1c:	10810004 	addi	r2,r2,1024
  826e20:	e0bf7015 	stw	r2,-576(fp)
  826e24:	e0bf6b17 	ldw	r2,-596(fp)
  826e28:	10800804 	addi	r2,r2,32
  826e2c:	1080000b 	ldhu	r2,0(r2)
  826e30:	10ffffcc 	andi	r3,r2,65535
  826e34:	18e0001c 	xori	r3,r3,32768
  826e38:	18e00004 	addi	r3,r3,-32768
  826e3c:	e0bf6c17 	ldw	r2,-592(fp)
  826e40:	10801004 	addi	r2,r2,64
  826e44:	10800017 	ldw	r2,0(r2)
  826e48:	100b883a 	mov	r5,r2
  826e4c:	1809883a 	mov	r4,r3
  826e50:	08301e80 	call	8301e8 <__mulsi3>
  826e54:	e0bf7115 	stw	r2,-572(fp)
  826e58:	e0bf6b17 	ldw	r2,-596(fp)
  826e5c:	10801004 	addi	r2,r2,64
  826e60:	1080000b 	ldhu	r2,0(r2)
  826e64:	10ffffcc 	andi	r3,r2,65535
  826e68:	18e0001c 	xori	r3,r3,32768
  826e6c:	18e00004 	addi	r3,r3,-32768
  826e70:	e0bf6c17 	ldw	r2,-592(fp)
  826e74:	10802004 	addi	r2,r2,128
  826e78:	10800017 	ldw	r2,0(r2)
  826e7c:	100b883a 	mov	r5,r2
  826e80:	1809883a 	mov	r4,r3
  826e84:	08301e80 	call	8301e8 <__mulsi3>
  826e88:	e0bf7215 	stw	r2,-568(fp)
  826e8c:	e0bf6b17 	ldw	r2,-596(fp)
  826e90:	10801804 	addi	r2,r2,96
  826e94:	1080000b 	ldhu	r2,0(r2)
  826e98:	10ffffcc 	andi	r3,r2,65535
  826e9c:	18e0001c 	xori	r3,r3,32768
  826ea0:	18e00004 	addi	r3,r3,-32768
  826ea4:	e0bf6c17 	ldw	r2,-592(fp)
  826ea8:	10803004 	addi	r2,r2,192
  826eac:	10800017 	ldw	r2,0(r2)
  826eb0:	100b883a 	mov	r5,r2
  826eb4:	1809883a 	mov	r4,r3
  826eb8:	08301e80 	call	8301e8 <__mulsi3>
  826ebc:	e0bf7315 	stw	r2,-564(fp)
  826ec0:	01437f04 	movi	r5,3580
  826ec4:	e13f7317 	ldw	r4,-564(fp)
  826ec8:	08301e80 	call	8301e8 <__mulsi3>
  826ecc:	e0bf7415 	stw	r2,-560(fp)
  826ed0:	01492744 	movi	r5,9373
  826ed4:	e13f7317 	ldw	r4,-564(fp)
  826ed8:	08301e80 	call	8301e8 <__mulsi3>
  826edc:	e0bf7515 	stw	r2,-556(fp)
  826ee0:	e0ff7017 	ldw	r3,-576(fp)
  826ee4:	e0bf7417 	ldw	r2,-560(fp)
  826ee8:	1885c83a 	sub	r2,r3,r2
  826eec:	e0bf7615 	stw	r2,-552(fp)
  826ef0:	e0ff7017 	ldw	r3,-576(fp)
  826ef4:	e0bf7517 	ldw	r2,-556(fp)
  826ef8:	1885883a 	add	r2,r3,r2
  826efc:	e0bf7715 	stw	r2,-548(fp)
  826f00:	e0ff7517 	ldw	r3,-556(fp)
  826f04:	e0bf7417 	ldw	r2,-560(fp)
  826f08:	1885c83a 	sub	r2,r3,r2
  826f0c:	1085883a 	add	r2,r2,r2
  826f10:	1007883a 	mov	r3,r2
  826f14:	e0bf7017 	ldw	r2,-576(fp)
  826f18:	10c5c83a 	sub	r2,r2,r3
  826f1c:	e0bf7015 	stw	r2,-576(fp)
  826f20:	e0ff7117 	ldw	r3,-572(fp)
  826f24:	e0bf7217 	ldw	r2,-568(fp)
  826f28:	1885c83a 	sub	r2,r3,r2
  826f2c:	e0bf7315 	stw	r2,-564(fp)
  826f30:	e0ff7217 	ldw	r3,-568(fp)
  826f34:	e0bf7117 	ldw	r2,-572(fp)
  826f38:	1885883a 	add	r2,r3,r2
  826f3c:	e0bf7215 	stw	r2,-568(fp)
  826f40:	014ab384 	movi	r5,10958
  826f44:	e13f7217 	ldw	r4,-568(fp)
  826f48:	08301e80 	call	8301e8 <__mulsi3>
  826f4c:	e0bf7415 	stw	r2,-560(fp)
  826f50:	01405d84 	movi	r5,374
  826f54:	e13f7317 	ldw	r4,-564(fp)
  826f58:	08301e80 	call	8301e8 <__mulsi3>
  826f5c:	e0bf7515 	stw	r2,-556(fp)
  826f60:	014b84c4 	movi	r5,11795
  826f64:	e13f7117 	ldw	r4,-572(fp)
  826f68:	08301e80 	call	8301e8 <__mulsi3>
  826f6c:	e0bf7115 	stw	r2,-572(fp)
  826f70:	e0ff7717 	ldw	r3,-548(fp)
  826f74:	e0bf7417 	ldw	r2,-560(fp)
  826f78:	1887883a 	add	r3,r3,r2
  826f7c:	e0bf7517 	ldw	r2,-556(fp)
  826f80:	1885883a 	add	r2,r3,r2
  826f84:	e0bf7815 	stw	r2,-544(fp)
  826f88:	e0ff7617 	ldw	r3,-552(fp)
  826f8c:	e0bf7417 	ldw	r2,-560(fp)
  826f90:	1887c83a 	sub	r3,r3,r2
  826f94:	e0bf7517 	ldw	r2,-556(fp)
  826f98:	1887883a 	add	r3,r3,r2
  826f9c:	e0bf7117 	ldw	r2,-572(fp)
  826fa0:	1885883a 	add	r2,r3,r2
  826fa4:	e0bf7915 	stw	r2,-540(fp)
  826fa8:	01446084 	movi	r5,4482
  826fac:	e13f7217 	ldw	r4,-568(fp)
  826fb0:	08301e80 	call	8301e8 <__mulsi3>
  826fb4:	e0bf7415 	stw	r2,-560(fp)
  826fb8:	014331c4 	movi	r5,3271
  826fbc:	e13f7317 	ldw	r4,-564(fp)
  826fc0:	08301e80 	call	8301e8 <__mulsi3>
  826fc4:	e0bf7515 	stw	r2,-556(fp)
  826fc8:	e0ff7717 	ldw	r3,-548(fp)
  826fcc:	e0bf7417 	ldw	r2,-560(fp)
  826fd0:	1887c83a 	sub	r3,r3,r2
  826fd4:	e0bf7517 	ldw	r2,-556(fp)
  826fd8:	1885c83a 	sub	r2,r3,r2
  826fdc:	e0bf7a15 	stw	r2,-536(fp)
  826fe0:	e0ff7617 	ldw	r3,-552(fp)
  826fe4:	e0bf7417 	ldw	r2,-560(fp)
  826fe8:	1887883a 	add	r3,r3,r2
  826fec:	e0bf7517 	ldw	r2,-556(fp)
  826ff0:	1887c83a 	sub	r3,r3,r2
  826ff4:	e0bf7117 	ldw	r2,-572(fp)
  826ff8:	1885c83a 	sub	r2,r3,r2
  826ffc:	e0bf7b15 	stw	r2,-532(fp)
  827000:	01465304 	movi	r5,6476
  827004:	e13f7217 	ldw	r4,-568(fp)
  827008:	08301e80 	call	8301e8 <__mulsi3>
  82700c:	e0bf7415 	stw	r2,-560(fp)
  827010:	0142d404 	movi	r5,2896
  827014:	e13f7317 	ldw	r4,-564(fp)
  827018:	08301e80 	call	8301e8 <__mulsi3>
  82701c:	e0bf7515 	stw	r2,-556(fp)
  827020:	e0ff7617 	ldw	r3,-552(fp)
  827024:	e0bf7417 	ldw	r2,-560(fp)
  827028:	1887883a 	add	r3,r3,r2
  82702c:	e0bf7517 	ldw	r2,-556(fp)
  827030:	1885883a 	add	r2,r3,r2
  827034:	e0bf7c15 	stw	r2,-528(fp)
  827038:	e0ff7717 	ldw	r3,-548(fp)
  82703c:	e0bf7417 	ldw	r2,-560(fp)
  827040:	1887c83a 	sub	r3,r3,r2
  827044:	e0bf7517 	ldw	r2,-556(fp)
  827048:	1885883a 	add	r2,r3,r2
  82704c:	e0bf7d15 	stw	r2,-524(fp)
  827050:	e0ff7517 	ldw	r3,-556(fp)
  827054:	e0bf7517 	ldw	r2,-556(fp)
  827058:	1885883a 	add	r2,r3,r2
  82705c:	e0bf7515 	stw	r2,-556(fp)
  827060:	e0ff7017 	ldw	r3,-576(fp)
  827064:	e0bf7517 	ldw	r2,-556(fp)
  827068:	1885883a 	add	r2,r3,r2
  82706c:	e0bf7e15 	stw	r2,-520(fp)
  827070:	e0ff7017 	ldw	r3,-576(fp)
  827074:	e0bf7517 	ldw	r2,-556(fp)
  827078:	1887c83a 	sub	r3,r3,r2
  82707c:	e0bf7517 	ldw	r2,-556(fp)
  827080:	1885c83a 	sub	r2,r3,r2
  827084:	e0bf7f15 	stw	r2,-516(fp)
  827088:	e0bf6b17 	ldw	r2,-596(fp)
  82708c:	10800404 	addi	r2,r2,16
  827090:	1080000b 	ldhu	r2,0(r2)
  827094:	10ffffcc 	andi	r3,r2,65535
  827098:	18e0001c 	xori	r3,r3,32768
  82709c:	18e00004 	addi	r3,r3,-32768
  8270a0:	e0bf6c17 	ldw	r2,-592(fp)
  8270a4:	10800804 	addi	r2,r2,32
  8270a8:	10800017 	ldw	r2,0(r2)
  8270ac:	100b883a 	mov	r5,r2
  8270b0:	1809883a 	mov	r4,r3
  8270b4:	08301e80 	call	8301e8 <__mulsi3>
  8270b8:	e0bf7015 	stw	r2,-576(fp)
  8270bc:	e0bf6b17 	ldw	r2,-596(fp)
  8270c0:	10800c04 	addi	r2,r2,48
  8270c4:	1080000b 	ldhu	r2,0(r2)
  8270c8:	10ffffcc 	andi	r3,r2,65535
  8270cc:	18e0001c 	xori	r3,r3,32768
  8270d0:	18e00004 	addi	r3,r3,-32768
  8270d4:	e0bf6c17 	ldw	r2,-592(fp)
  8270d8:	10801804 	addi	r2,r2,96
  8270dc:	10800017 	ldw	r2,0(r2)
  8270e0:	100b883a 	mov	r5,r2
  8270e4:	1809883a 	mov	r4,r3
  8270e8:	08301e80 	call	8301e8 <__mulsi3>
  8270ec:	e0bf7115 	stw	r2,-572(fp)
  8270f0:	e0bf6b17 	ldw	r2,-596(fp)
  8270f4:	10801404 	addi	r2,r2,80
  8270f8:	1080000b 	ldhu	r2,0(r2)
  8270fc:	10ffffcc 	andi	r3,r2,65535
  827100:	18e0001c 	xori	r3,r3,32768
  827104:	18e00004 	addi	r3,r3,-32768
  827108:	e0bf6c17 	ldw	r2,-592(fp)
  82710c:	10802804 	addi	r2,r2,160
  827110:	10800017 	ldw	r2,0(r2)
  827114:	100b883a 	mov	r5,r2
  827118:	1809883a 	mov	r4,r3
  82711c:	08301e80 	call	8301e8 <__mulsi3>
  827120:	e0bf7315 	stw	r2,-564(fp)
  827124:	0149cc44 	movi	r5,10033
  827128:	e13f7317 	ldw	r4,-564(fp)
  82712c:	08301e80 	call	8301e8 <__mulsi3>
  827130:	e0bf7215 	stw	r2,-568(fp)
  827134:	e0bf6b17 	ldw	r2,-596(fp)
  827138:	10801c04 	addi	r2,r2,112
  82713c:	1080000b 	ldhu	r2,0(r2)
  827140:	10ffffcc 	andi	r3,r2,65535
  827144:	18e0001c 	xori	r3,r3,32768
  827148:	18e00004 	addi	r3,r3,-32768
  82714c:	e0bf6c17 	ldw	r2,-592(fp)
  827150:	10803804 	addi	r2,r2,224
  827154:	10800017 	ldw	r2,0(r2)
  827158:	100b883a 	mov	r5,r2
  82715c:	1809883a 	mov	r4,r3
  827160:	08301e80 	call	8301e8 <__mulsi3>
  827164:	e0bf7315 	stw	r2,-564(fp)
  827168:	e0ff7117 	ldw	r3,-572(fp)
  82716c:	e0bf7317 	ldw	r2,-564(fp)
  827170:	1885c83a 	sub	r2,r3,r2
  827174:	e0bf7715 	stw	r2,-548(fp)
  827178:	e0ff7017 	ldw	r3,-576(fp)
  82717c:	e0bf7717 	ldw	r2,-548(fp)
  827180:	1885883a 	add	r2,r3,r2
  827184:	0146a684 	movi	r5,6810
  827188:	1009883a 	mov	r4,r2
  82718c:	08301e80 	call	8301e8 <__mulsi3>
  827190:	e0bf8015 	stw	r2,-512(fp)
  827194:	01441c44 	movi	r5,4209
  827198:	e13f7017 	ldw	r4,-576(fp)
  82719c:	08301e80 	call	8301e8 <__mulsi3>
  8271a0:	1007883a 	mov	r3,r2
  8271a4:	e0bf8017 	ldw	r2,-512(fp)
  8271a8:	1885883a 	add	r2,r3,r2
  8271ac:	e0bf7515 	stw	r2,-556(fp)
  8271b0:	016e9704 	movi	r5,-17828
  8271b4:	e13f7717 	ldw	r4,-548(fp)
  8271b8:	08301e80 	call	8301e8 <__mulsi3>
  8271bc:	1007883a 	mov	r3,r2
  8271c0:	e0bf8017 	ldw	r2,-512(fp)
  8271c4:	1885883a 	add	r2,r3,r2
  8271c8:	e0bf8115 	stw	r2,-508(fp)
  8271cc:	01795984 	movi	r5,-6810
  8271d0:	e13f7117 	ldw	r4,-572(fp)
  8271d4:	08301e80 	call	8301e8 <__mulsi3>
  8271d8:	e0bf7715 	stw	r2,-548(fp)
  8271dc:	01753d84 	movi	r5,-11018
  8271e0:	e13f7117 	ldw	r4,-572(fp)
  8271e4:	08301e80 	call	8301e8 <__mulsi3>
  8271e8:	e0bf8015 	stw	r2,-512(fp)
  8271ec:	e0ff7017 	ldw	r3,-576(fp)
  8271f0:	e0bf7317 	ldw	r2,-564(fp)
  8271f4:	1885c83a 	sub	r2,r3,r2
  8271f8:	e0bf7115 	stw	r2,-572(fp)
  8271fc:	014b4084 	movi	r5,11522
  827200:	e13f7117 	ldw	r4,-572(fp)
  827204:	08301e80 	call	8301e8 <__mulsi3>
  827208:	1007883a 	mov	r3,r2
  82720c:	e0bf7217 	ldw	r2,-568(fp)
  827210:	1885883a 	add	r2,r3,r2
  827214:	e0bf7615 	stw	r2,-552(fp)
  827218:	0153a8c4 	movi	r5,20131
  82721c:	e13f7317 	ldw	r4,-564(fp)
  827220:	08301e80 	call	8301e8 <__mulsi3>
  827224:	1007883a 	mov	r3,r2
  827228:	e0bf7617 	ldw	r2,-552(fp)
  82722c:	1887883a 	add	r3,r3,r2
  827230:	e0bf8017 	ldw	r2,-512(fp)
  827234:	1885c83a 	sub	r2,r3,r2
  827238:	e0bf7415 	stw	r2,-560(fp)
  82723c:	017719c4 	movi	r5,-9113
  827240:	e13f7017 	ldw	r4,-576(fp)
  827244:	08301e80 	call	8301e8 <__mulsi3>
  827248:	1007883a 	mov	r3,r2
  82724c:	e0bf7617 	ldw	r2,-552(fp)
  827250:	1887883a 	add	r3,r3,r2
  827254:	e0bf7717 	ldw	r2,-548(fp)
  827258:	1885883a 	add	r2,r3,r2
  82725c:	e0bf8215 	stw	r2,-504(fp)
  827260:	0149cc44 	movi	r5,10033
  827264:	e13f7117 	ldw	r4,-572(fp)
  827268:	08301e80 	call	8301e8 <__mulsi3>
  82726c:	1007883a 	mov	r3,r2
  827270:	e0bf7217 	ldw	r2,-568(fp)
  827274:	1885c83a 	sub	r2,r3,r2
  827278:	e0bf7615 	stw	r2,-552(fp)
  82727c:	e0ff7017 	ldw	r3,-576(fp)
  827280:	e0bf7317 	ldw	r2,-564(fp)
  827284:	1885883a 	add	r2,r3,r2
  827288:	01449a04 	movi	r5,4712
  82728c:	1009883a 	mov	r4,r2
  827290:	08301e80 	call	8301e8 <__mulsi3>
  827294:	e0bf7115 	stw	r2,-572(fp)
  827298:	0143ce44 	movi	r5,3897
  82729c:	e13f7017 	ldw	r4,-576(fp)
  8272a0:	08301e80 	call	8301e8 <__mulsi3>
  8272a4:	1007883a 	mov	r3,r2
  8272a8:	e0bf7117 	ldw	r2,-572(fp)
  8272ac:	1887883a 	add	r3,r3,r2
  8272b0:	e0bf7217 	ldw	r2,-568(fp)
  8272b4:	1885c83a 	sub	r2,r3,r2
  8272b8:	e0ff7717 	ldw	r3,-548(fp)
  8272bc:	1885883a 	add	r2,r3,r2
  8272c0:	e0bf7715 	stw	r2,-548(fp)
  8272c4:	01790bc4 	movi	r5,-7121
  8272c8:	e13f7317 	ldw	r4,-564(fp)
  8272cc:	08301e80 	call	8301e8 <__mulsi3>
  8272d0:	1007883a 	mov	r3,r2
  8272d4:	e0bf7117 	ldw	r2,-572(fp)
  8272d8:	1887883a 	add	r3,r3,r2
  8272dc:	e0bf7217 	ldw	r2,-568(fp)
  8272e0:	1885883a 	add	r2,r3,r2
  8272e4:	e0ff8017 	ldw	r3,-512(fp)
  8272e8:	1885883a 	add	r2,r3,r2
  8272ec:	e0bf8015 	stw	r2,-512(fp)
  8272f0:	e0ff7817 	ldw	r3,-544(fp)
  8272f4:	e0bf7417 	ldw	r2,-560(fp)
  8272f8:	1885883a 	add	r2,r3,r2
  8272fc:	1007d2fa 	srai	r3,r2,11
  827300:	e0bf6d17 	ldw	r2,-588(fp)
  827304:	10c00015 	stw	r3,0(r2)
  827308:	e0bf6d17 	ldw	r2,-588(fp)
  82730c:	10807004 	addi	r2,r2,448
  827310:	e13f7817 	ldw	r4,-544(fp)
  827314:	e0ff7417 	ldw	r3,-560(fp)
  827318:	20c7c83a 	sub	r3,r4,r3
  82731c:	1807d2fa 	srai	r3,r3,11
  827320:	10c00015 	stw	r3,0(r2)
  827324:	e0bf6d17 	ldw	r2,-588(fp)
  827328:	10800804 	addi	r2,r2,32
  82732c:	e13f7c17 	ldw	r4,-528(fp)
  827330:	e0ff7517 	ldw	r3,-556(fp)
  827334:	20c7883a 	add	r3,r4,r3
  827338:	1807d2fa 	srai	r3,r3,11
  82733c:	10c00015 	stw	r3,0(r2)
  827340:	e0bf6d17 	ldw	r2,-588(fp)
  827344:	10806804 	addi	r2,r2,416
  827348:	e13f7c17 	ldw	r4,-528(fp)
  82734c:	e0ff7517 	ldw	r3,-556(fp)
  827350:	20c7c83a 	sub	r3,r4,r3
  827354:	1807d2fa 	srai	r3,r3,11
  827358:	10c00015 	stw	r3,0(r2)
  82735c:	e0bf6d17 	ldw	r2,-588(fp)
  827360:	10801004 	addi	r2,r2,64
  827364:	e13f7e17 	ldw	r4,-520(fp)
  827368:	e0ff7617 	ldw	r3,-552(fp)
  82736c:	20c7883a 	add	r3,r4,r3
  827370:	1807d2fa 	srai	r3,r3,11
  827374:	10c00015 	stw	r3,0(r2)
  827378:	e0bf6d17 	ldw	r2,-588(fp)
  82737c:	10806004 	addi	r2,r2,384
  827380:	e13f7e17 	ldw	r4,-520(fp)
  827384:	e0ff7617 	ldw	r3,-552(fp)
  827388:	20c7c83a 	sub	r3,r4,r3
  82738c:	1807d2fa 	srai	r3,r3,11
  827390:	10c00015 	stw	r3,0(r2)
  827394:	e0bf6d17 	ldw	r2,-588(fp)
  827398:	10801804 	addi	r2,r2,96
  82739c:	e13f7917 	ldw	r4,-540(fp)
  8273a0:	e0ff7717 	ldw	r3,-548(fp)
  8273a4:	20c7883a 	add	r3,r4,r3
  8273a8:	1807d2fa 	srai	r3,r3,11
  8273ac:	10c00015 	stw	r3,0(r2)
  8273b0:	e0bf6d17 	ldw	r2,-588(fp)
  8273b4:	10805804 	addi	r2,r2,352
  8273b8:	e13f7917 	ldw	r4,-540(fp)
  8273bc:	e0ff7717 	ldw	r3,-548(fp)
  8273c0:	20c7c83a 	sub	r3,r4,r3
  8273c4:	1807d2fa 	srai	r3,r3,11
  8273c8:	10c00015 	stw	r3,0(r2)
  8273cc:	e0bf6d17 	ldw	r2,-588(fp)
  8273d0:	10802004 	addi	r2,r2,128
  8273d4:	e13f7d17 	ldw	r4,-524(fp)
  8273d8:	e0ff8117 	ldw	r3,-508(fp)
  8273dc:	20c7883a 	add	r3,r4,r3
  8273e0:	1807d2fa 	srai	r3,r3,11
  8273e4:	10c00015 	stw	r3,0(r2)
  8273e8:	e0bf6d17 	ldw	r2,-588(fp)
  8273ec:	10805004 	addi	r2,r2,320
  8273f0:	e13f7d17 	ldw	r4,-524(fp)
  8273f4:	e0ff8117 	ldw	r3,-508(fp)
  8273f8:	20c7c83a 	sub	r3,r4,r3
  8273fc:	1807d2fa 	srai	r3,r3,11
  827400:	10c00015 	stw	r3,0(r2)
  827404:	e0bf6d17 	ldw	r2,-588(fp)
  827408:	10802804 	addi	r2,r2,160
  82740c:	e13f7a17 	ldw	r4,-536(fp)
  827410:	e0ff8017 	ldw	r3,-512(fp)
  827414:	20c7883a 	add	r3,r4,r3
  827418:	1807d2fa 	srai	r3,r3,11
  82741c:	10c00015 	stw	r3,0(r2)
  827420:	e0bf6d17 	ldw	r2,-588(fp)
  827424:	10804804 	addi	r2,r2,288
  827428:	e13f7a17 	ldw	r4,-536(fp)
  82742c:	e0ff8017 	ldw	r3,-512(fp)
  827430:	20c7c83a 	sub	r3,r4,r3
  827434:	1807d2fa 	srai	r3,r3,11
  827438:	10c00015 	stw	r3,0(r2)
  82743c:	e0bf6d17 	ldw	r2,-588(fp)
  827440:	10803004 	addi	r2,r2,192
  827444:	e13f7b17 	ldw	r4,-532(fp)
  827448:	e0ff8217 	ldw	r3,-504(fp)
  82744c:	20c7883a 	add	r3,r4,r3
  827450:	1807d2fa 	srai	r3,r3,11
  827454:	10c00015 	stw	r3,0(r2)
  827458:	e0bf6d17 	ldw	r2,-588(fp)
  82745c:	10804004 	addi	r2,r2,256
  827460:	e13f7b17 	ldw	r4,-532(fp)
  827464:	e0ff8217 	ldw	r3,-504(fp)
  827468:	20c7c83a 	sub	r3,r4,r3
  82746c:	1807d2fa 	srai	r3,r3,11
  827470:	10c00015 	stw	r3,0(r2)
  827474:	e0bf6d17 	ldw	r2,-588(fp)
  827478:	10803804 	addi	r2,r2,224
  82747c:	e0ff7f17 	ldw	r3,-516(fp)
  827480:	1807d2fa 	srai	r3,r3,11
  827484:	10c00015 	stw	r3,0(r2)
  827488:	e0bf6e17 	ldw	r2,-584(fp)
  82748c:	10800044 	addi	r2,r2,1
  827490:	e0bf6e15 	stw	r2,-584(fp)
  827494:	e0bf6b17 	ldw	r2,-596(fp)
  827498:	10800084 	addi	r2,r2,2
  82749c:	e0bf6b15 	stw	r2,-596(fp)
  8274a0:	e0bf6c17 	ldw	r2,-592(fp)
  8274a4:	10800104 	addi	r2,r2,4
  8274a8:	e0bf6c15 	stw	r2,-592(fp)
  8274ac:	e0bf6d17 	ldw	r2,-588(fp)
  8274b0:	10800104 	addi	r2,r2,4
  8274b4:	e0bf6d15 	stw	r2,-588(fp)
  8274b8:	e0bf6e17 	ldw	r2,-584(fp)
  8274bc:	10800210 	cmplti	r2,r2,8
  8274c0:	103e471e 	bne	r2,zero,826de0 <__alt_mem_epcs_flash_controller_0+0xff81dde0>
  8274c4:	e0bf8404 	addi	r2,fp,-496
  8274c8:	e0bf6d15 	stw	r2,-588(fp)
  8274cc:	e03f6e15 	stw	zero,-584(fp)
  8274d0:	0001ad06 	br	827b88 <jpeg_idct_15x15+0xdfc>
  8274d4:	e0bf6e17 	ldw	r2,-584(fp)
  8274d8:	1085883a 	add	r2,r2,r2
  8274dc:	1085883a 	add	r2,r2,r2
  8274e0:	1007883a 	mov	r3,r2
  8274e4:	e0bfff17 	ldw	r2,-4(fp)
  8274e8:	10c5883a 	add	r2,r2,r3
  8274ec:	10c00017 	ldw	r3,0(r2)
  8274f0:	e0800217 	ldw	r2,8(fp)
  8274f4:	1885883a 	add	r2,r3,r2
  8274f8:	e0bf8315 	stw	r2,-500(fp)
  8274fc:	e0bf6d17 	ldw	r2,-588(fp)
  827500:	10800017 	ldw	r2,0(r2)
  827504:	10900404 	addi	r2,r2,16400
  827508:	e0bf7015 	stw	r2,-576(fp)
  82750c:	e0bf7017 	ldw	r2,-576(fp)
  827510:	1004937a 	slli	r2,r2,13
  827514:	e0bf7015 	stw	r2,-576(fp)
  827518:	e0bf6d17 	ldw	r2,-588(fp)
  82751c:	10800204 	addi	r2,r2,8
  827520:	10800017 	ldw	r2,0(r2)
  827524:	e0bf7115 	stw	r2,-572(fp)
  827528:	e0bf6d17 	ldw	r2,-588(fp)
  82752c:	10800404 	addi	r2,r2,16
  827530:	10800017 	ldw	r2,0(r2)
  827534:	e0bf7215 	stw	r2,-568(fp)
  827538:	e0bf6d17 	ldw	r2,-588(fp)
  82753c:	10800604 	addi	r2,r2,24
  827540:	10800017 	ldw	r2,0(r2)
  827544:	e0bf7315 	stw	r2,-564(fp)
  827548:	01437f04 	movi	r5,3580
  82754c:	e13f7317 	ldw	r4,-564(fp)
  827550:	08301e80 	call	8301e8 <__mulsi3>
  827554:	e0bf7415 	stw	r2,-560(fp)
  827558:	01492744 	movi	r5,9373
  82755c:	e13f7317 	ldw	r4,-564(fp)
  827560:	08301e80 	call	8301e8 <__mulsi3>
  827564:	e0bf7515 	stw	r2,-556(fp)
  827568:	e0ff7017 	ldw	r3,-576(fp)
  82756c:	e0bf7417 	ldw	r2,-560(fp)
  827570:	1885c83a 	sub	r2,r3,r2
  827574:	e0bf7615 	stw	r2,-552(fp)
  827578:	e0ff7017 	ldw	r3,-576(fp)
  82757c:	e0bf7517 	ldw	r2,-556(fp)
  827580:	1885883a 	add	r2,r3,r2
  827584:	e0bf7715 	stw	r2,-548(fp)
  827588:	e0ff7517 	ldw	r3,-556(fp)
  82758c:	e0bf7417 	ldw	r2,-560(fp)
  827590:	1885c83a 	sub	r2,r3,r2
  827594:	1085883a 	add	r2,r2,r2
  827598:	1007883a 	mov	r3,r2
  82759c:	e0bf7017 	ldw	r2,-576(fp)
  8275a0:	10c5c83a 	sub	r2,r2,r3
  8275a4:	e0bf7015 	stw	r2,-576(fp)
  8275a8:	e0ff7117 	ldw	r3,-572(fp)
  8275ac:	e0bf7217 	ldw	r2,-568(fp)
  8275b0:	1885c83a 	sub	r2,r3,r2
  8275b4:	e0bf7315 	stw	r2,-564(fp)
  8275b8:	e0ff7217 	ldw	r3,-568(fp)
  8275bc:	e0bf7117 	ldw	r2,-572(fp)
  8275c0:	1885883a 	add	r2,r3,r2
  8275c4:	e0bf7215 	stw	r2,-568(fp)
  8275c8:	014ab384 	movi	r5,10958
  8275cc:	e13f7217 	ldw	r4,-568(fp)
  8275d0:	08301e80 	call	8301e8 <__mulsi3>
  8275d4:	e0bf7415 	stw	r2,-560(fp)
  8275d8:	01405d84 	movi	r5,374
  8275dc:	e13f7317 	ldw	r4,-564(fp)
  8275e0:	08301e80 	call	8301e8 <__mulsi3>
  8275e4:	e0bf7515 	stw	r2,-556(fp)
  8275e8:	014b84c4 	movi	r5,11795
  8275ec:	e13f7117 	ldw	r4,-572(fp)
  8275f0:	08301e80 	call	8301e8 <__mulsi3>
  8275f4:	e0bf7115 	stw	r2,-572(fp)
  8275f8:	e0ff7717 	ldw	r3,-548(fp)
  8275fc:	e0bf7417 	ldw	r2,-560(fp)
  827600:	1887883a 	add	r3,r3,r2
  827604:	e0bf7517 	ldw	r2,-556(fp)
  827608:	1885883a 	add	r2,r3,r2
  82760c:	e0bf7815 	stw	r2,-544(fp)
  827610:	e0ff7617 	ldw	r3,-552(fp)
  827614:	e0bf7417 	ldw	r2,-560(fp)
  827618:	1887c83a 	sub	r3,r3,r2
  82761c:	e0bf7517 	ldw	r2,-556(fp)
  827620:	1887883a 	add	r3,r3,r2
  827624:	e0bf7117 	ldw	r2,-572(fp)
  827628:	1885883a 	add	r2,r3,r2
  82762c:	e0bf7915 	stw	r2,-540(fp)
  827630:	01446084 	movi	r5,4482
  827634:	e13f7217 	ldw	r4,-568(fp)
  827638:	08301e80 	call	8301e8 <__mulsi3>
  82763c:	e0bf7415 	stw	r2,-560(fp)
  827640:	014331c4 	movi	r5,3271
  827644:	e13f7317 	ldw	r4,-564(fp)
  827648:	08301e80 	call	8301e8 <__mulsi3>
  82764c:	e0bf7515 	stw	r2,-556(fp)
  827650:	e0ff7717 	ldw	r3,-548(fp)
  827654:	e0bf7417 	ldw	r2,-560(fp)
  827658:	1887c83a 	sub	r3,r3,r2
  82765c:	e0bf7517 	ldw	r2,-556(fp)
  827660:	1885c83a 	sub	r2,r3,r2
  827664:	e0bf7a15 	stw	r2,-536(fp)
  827668:	e0ff7617 	ldw	r3,-552(fp)
  82766c:	e0bf7417 	ldw	r2,-560(fp)
  827670:	1887883a 	add	r3,r3,r2
  827674:	e0bf7517 	ldw	r2,-556(fp)
  827678:	1887c83a 	sub	r3,r3,r2
  82767c:	e0bf7117 	ldw	r2,-572(fp)
  827680:	1885c83a 	sub	r2,r3,r2
  827684:	e0bf7b15 	stw	r2,-532(fp)
  827688:	01465304 	movi	r5,6476
  82768c:	e13f7217 	ldw	r4,-568(fp)
  827690:	08301e80 	call	8301e8 <__mulsi3>
  827694:	e0bf7415 	stw	r2,-560(fp)
  827698:	0142d404 	movi	r5,2896
  82769c:	e13f7317 	ldw	r4,-564(fp)
  8276a0:	08301e80 	call	8301e8 <__mulsi3>
  8276a4:	e0bf7515 	stw	r2,-556(fp)
  8276a8:	e0ff7617 	ldw	r3,-552(fp)
  8276ac:	e0bf7417 	ldw	r2,-560(fp)
  8276b0:	1887883a 	add	r3,r3,r2
  8276b4:	e0bf7517 	ldw	r2,-556(fp)
  8276b8:	1885883a 	add	r2,r3,r2
  8276bc:	e0bf7c15 	stw	r2,-528(fp)
  8276c0:	e0ff7717 	ldw	r3,-548(fp)
  8276c4:	e0bf7417 	ldw	r2,-560(fp)
  8276c8:	1887c83a 	sub	r3,r3,r2
  8276cc:	e0bf7517 	ldw	r2,-556(fp)
  8276d0:	1885883a 	add	r2,r3,r2
  8276d4:	e0bf7d15 	stw	r2,-524(fp)
  8276d8:	e0ff7517 	ldw	r3,-556(fp)
  8276dc:	e0bf7517 	ldw	r2,-556(fp)
  8276e0:	1885883a 	add	r2,r3,r2
  8276e4:	e0bf7515 	stw	r2,-556(fp)
  8276e8:	e0ff7017 	ldw	r3,-576(fp)
  8276ec:	e0bf7517 	ldw	r2,-556(fp)
  8276f0:	1885883a 	add	r2,r3,r2
  8276f4:	e0bf7e15 	stw	r2,-520(fp)
  8276f8:	e0ff7017 	ldw	r3,-576(fp)
  8276fc:	e0bf7517 	ldw	r2,-556(fp)
  827700:	1887c83a 	sub	r3,r3,r2
  827704:	e0bf7517 	ldw	r2,-556(fp)
  827708:	1885c83a 	sub	r2,r3,r2
  82770c:	e0bf7f15 	stw	r2,-516(fp)
  827710:	e0bf6d17 	ldw	r2,-588(fp)
  827714:	10800104 	addi	r2,r2,4
  827718:	10800017 	ldw	r2,0(r2)
  82771c:	e0bf7015 	stw	r2,-576(fp)
  827720:	e0bf6d17 	ldw	r2,-588(fp)
  827724:	10800304 	addi	r2,r2,12
  827728:	10800017 	ldw	r2,0(r2)
  82772c:	e0bf7115 	stw	r2,-572(fp)
  827730:	e0bf6d17 	ldw	r2,-588(fp)
  827734:	10800504 	addi	r2,r2,20
  827738:	10800017 	ldw	r2,0(r2)
  82773c:	e0bf7315 	stw	r2,-564(fp)
  827740:	0149cc44 	movi	r5,10033
  827744:	e13f7317 	ldw	r4,-564(fp)
  827748:	08301e80 	call	8301e8 <__mulsi3>
  82774c:	e0bf7215 	stw	r2,-568(fp)
  827750:	e0bf6d17 	ldw	r2,-588(fp)
  827754:	10800704 	addi	r2,r2,28
  827758:	10800017 	ldw	r2,0(r2)
  82775c:	e0bf7315 	stw	r2,-564(fp)
  827760:	e0ff7117 	ldw	r3,-572(fp)
  827764:	e0bf7317 	ldw	r2,-564(fp)
  827768:	1885c83a 	sub	r2,r3,r2
  82776c:	e0bf7715 	stw	r2,-548(fp)
  827770:	e0ff7017 	ldw	r3,-576(fp)
  827774:	e0bf7717 	ldw	r2,-548(fp)
  827778:	1885883a 	add	r2,r3,r2
  82777c:	0146a684 	movi	r5,6810
  827780:	1009883a 	mov	r4,r2
  827784:	08301e80 	call	8301e8 <__mulsi3>
  827788:	e0bf8015 	stw	r2,-512(fp)
  82778c:	01441c44 	movi	r5,4209
  827790:	e13f7017 	ldw	r4,-576(fp)
  827794:	08301e80 	call	8301e8 <__mulsi3>
  827798:	1007883a 	mov	r3,r2
  82779c:	e0bf8017 	ldw	r2,-512(fp)
  8277a0:	1885883a 	add	r2,r3,r2
  8277a4:	e0bf7515 	stw	r2,-556(fp)
  8277a8:	016e9704 	movi	r5,-17828
  8277ac:	e13f7717 	ldw	r4,-548(fp)
  8277b0:	08301e80 	call	8301e8 <__mulsi3>
  8277b4:	1007883a 	mov	r3,r2
  8277b8:	e0bf8017 	ldw	r2,-512(fp)
  8277bc:	1885883a 	add	r2,r3,r2
  8277c0:	e0bf8115 	stw	r2,-508(fp)
  8277c4:	01795984 	movi	r5,-6810
  8277c8:	e13f7117 	ldw	r4,-572(fp)
  8277cc:	08301e80 	call	8301e8 <__mulsi3>
  8277d0:	e0bf7715 	stw	r2,-548(fp)
  8277d4:	01753d84 	movi	r5,-11018
  8277d8:	e13f7117 	ldw	r4,-572(fp)
  8277dc:	08301e80 	call	8301e8 <__mulsi3>
  8277e0:	e0bf8015 	stw	r2,-512(fp)
  8277e4:	e0ff7017 	ldw	r3,-576(fp)
  8277e8:	e0bf7317 	ldw	r2,-564(fp)
  8277ec:	1885c83a 	sub	r2,r3,r2
  8277f0:	e0bf7115 	stw	r2,-572(fp)
  8277f4:	014b4084 	movi	r5,11522
  8277f8:	e13f7117 	ldw	r4,-572(fp)
  8277fc:	08301e80 	call	8301e8 <__mulsi3>
  827800:	1007883a 	mov	r3,r2
  827804:	e0bf7217 	ldw	r2,-568(fp)
  827808:	1885883a 	add	r2,r3,r2
  82780c:	e0bf7615 	stw	r2,-552(fp)
  827810:	0153a8c4 	movi	r5,20131
  827814:	e13f7317 	ldw	r4,-564(fp)
  827818:	08301e80 	call	8301e8 <__mulsi3>
  82781c:	1007883a 	mov	r3,r2
  827820:	e0bf7617 	ldw	r2,-552(fp)
  827824:	1887883a 	add	r3,r3,r2
  827828:	e0bf8017 	ldw	r2,-512(fp)
  82782c:	1885c83a 	sub	r2,r3,r2
  827830:	e0bf7415 	stw	r2,-560(fp)
  827834:	017719c4 	movi	r5,-9113
  827838:	e13f7017 	ldw	r4,-576(fp)
  82783c:	08301e80 	call	8301e8 <__mulsi3>
  827840:	1007883a 	mov	r3,r2
  827844:	e0bf7617 	ldw	r2,-552(fp)
  827848:	1887883a 	add	r3,r3,r2
  82784c:	e0bf7717 	ldw	r2,-548(fp)
  827850:	1885883a 	add	r2,r3,r2
  827854:	e0bf8215 	stw	r2,-504(fp)
  827858:	0149cc44 	movi	r5,10033
  82785c:	e13f7117 	ldw	r4,-572(fp)
  827860:	08301e80 	call	8301e8 <__mulsi3>
  827864:	1007883a 	mov	r3,r2
  827868:	e0bf7217 	ldw	r2,-568(fp)
  82786c:	1885c83a 	sub	r2,r3,r2
  827870:	e0bf7615 	stw	r2,-552(fp)
  827874:	e0ff7017 	ldw	r3,-576(fp)
  827878:	e0bf7317 	ldw	r2,-564(fp)
  82787c:	1885883a 	add	r2,r3,r2
  827880:	01449a04 	movi	r5,4712
  827884:	1009883a 	mov	r4,r2
  827888:	08301e80 	call	8301e8 <__mulsi3>
  82788c:	e0bf7115 	stw	r2,-572(fp)
  827890:	0143ce44 	movi	r5,3897
  827894:	e13f7017 	ldw	r4,-576(fp)
  827898:	08301e80 	call	8301e8 <__mulsi3>
  82789c:	1007883a 	mov	r3,r2
  8278a0:	e0bf7117 	ldw	r2,-572(fp)
  8278a4:	1887883a 	add	r3,r3,r2
  8278a8:	e0bf7217 	ldw	r2,-568(fp)
  8278ac:	1885c83a 	sub	r2,r3,r2
  8278b0:	e0ff7717 	ldw	r3,-548(fp)
  8278b4:	1885883a 	add	r2,r3,r2
  8278b8:	e0bf7715 	stw	r2,-548(fp)
  8278bc:	01790bc4 	movi	r5,-7121
  8278c0:	e13f7317 	ldw	r4,-564(fp)
  8278c4:	08301e80 	call	8301e8 <__mulsi3>
  8278c8:	1007883a 	mov	r3,r2
  8278cc:	e0bf7117 	ldw	r2,-572(fp)
  8278d0:	1887883a 	add	r3,r3,r2
  8278d4:	e0bf7217 	ldw	r2,-568(fp)
  8278d8:	1885883a 	add	r2,r3,r2
  8278dc:	e0ff8017 	ldw	r3,-512(fp)
  8278e0:	1885883a 	add	r2,r3,r2
  8278e4:	e0bf8015 	stw	r2,-512(fp)
  8278e8:	e0ff7817 	ldw	r3,-544(fp)
  8278ec:	e0bf7417 	ldw	r2,-560(fp)
  8278f0:	1885883a 	add	r2,r3,r2
  8278f4:	1005d4ba 	srai	r2,r2,18
  8278f8:	1080ffcc 	andi	r2,r2,1023
  8278fc:	e0ff6f17 	ldw	r3,-580(fp)
  827900:	1885883a 	add	r2,r3,r2
  827904:	10c00003 	ldbu	r3,0(r2)
  827908:	e0bf8317 	ldw	r2,-500(fp)
  82790c:	10c00005 	stb	r3,0(r2)
  827910:	e0bf8317 	ldw	r2,-500(fp)
  827914:	10800384 	addi	r2,r2,14
  827918:	e13f7817 	ldw	r4,-544(fp)
  82791c:	e0ff7417 	ldw	r3,-560(fp)
  827920:	20c7c83a 	sub	r3,r4,r3
  827924:	1807d4ba 	srai	r3,r3,18
  827928:	18c0ffcc 	andi	r3,r3,1023
  82792c:	e13f6f17 	ldw	r4,-580(fp)
  827930:	20c7883a 	add	r3,r4,r3
  827934:	18c00003 	ldbu	r3,0(r3)
  827938:	10c00005 	stb	r3,0(r2)
  82793c:	e0bf8317 	ldw	r2,-500(fp)
  827940:	10800044 	addi	r2,r2,1
  827944:	e13f7c17 	ldw	r4,-528(fp)
  827948:	e0ff7517 	ldw	r3,-556(fp)
  82794c:	20c7883a 	add	r3,r4,r3
  827950:	1807d4ba 	srai	r3,r3,18
  827954:	18c0ffcc 	andi	r3,r3,1023
  827958:	e13f6f17 	ldw	r4,-580(fp)
  82795c:	20c7883a 	add	r3,r4,r3
  827960:	18c00003 	ldbu	r3,0(r3)
  827964:	10c00005 	stb	r3,0(r2)
  827968:	e0bf8317 	ldw	r2,-500(fp)
  82796c:	10800344 	addi	r2,r2,13
  827970:	e13f7c17 	ldw	r4,-528(fp)
  827974:	e0ff7517 	ldw	r3,-556(fp)
  827978:	20c7c83a 	sub	r3,r4,r3
  82797c:	1807d4ba 	srai	r3,r3,18
  827980:	18c0ffcc 	andi	r3,r3,1023
  827984:	e13f6f17 	ldw	r4,-580(fp)
  827988:	20c7883a 	add	r3,r4,r3
  82798c:	18c00003 	ldbu	r3,0(r3)
  827990:	10c00005 	stb	r3,0(r2)
  827994:	e0bf8317 	ldw	r2,-500(fp)
  827998:	10800084 	addi	r2,r2,2
  82799c:	e13f7e17 	ldw	r4,-520(fp)
  8279a0:	e0ff7617 	ldw	r3,-552(fp)
  8279a4:	20c7883a 	add	r3,r4,r3
  8279a8:	1807d4ba 	srai	r3,r3,18
  8279ac:	18c0ffcc 	andi	r3,r3,1023
  8279b0:	e13f6f17 	ldw	r4,-580(fp)
  8279b4:	20c7883a 	add	r3,r4,r3
  8279b8:	18c00003 	ldbu	r3,0(r3)
  8279bc:	10c00005 	stb	r3,0(r2)
  8279c0:	e0bf8317 	ldw	r2,-500(fp)
  8279c4:	10800304 	addi	r2,r2,12
  8279c8:	e13f7e17 	ldw	r4,-520(fp)
  8279cc:	e0ff7617 	ldw	r3,-552(fp)
  8279d0:	20c7c83a 	sub	r3,r4,r3
  8279d4:	1807d4ba 	srai	r3,r3,18
  8279d8:	18c0ffcc 	andi	r3,r3,1023
  8279dc:	e13f6f17 	ldw	r4,-580(fp)
  8279e0:	20c7883a 	add	r3,r4,r3
  8279e4:	18c00003 	ldbu	r3,0(r3)
  8279e8:	10c00005 	stb	r3,0(r2)
  8279ec:	e0bf8317 	ldw	r2,-500(fp)
  8279f0:	108000c4 	addi	r2,r2,3
  8279f4:	e13f7917 	ldw	r4,-540(fp)
  8279f8:	e0ff7717 	ldw	r3,-548(fp)
  8279fc:	20c7883a 	add	r3,r4,r3
  827a00:	1807d4ba 	srai	r3,r3,18
  827a04:	18c0ffcc 	andi	r3,r3,1023
  827a08:	e13f6f17 	ldw	r4,-580(fp)
  827a0c:	20c7883a 	add	r3,r4,r3
  827a10:	18c00003 	ldbu	r3,0(r3)
  827a14:	10c00005 	stb	r3,0(r2)
  827a18:	e0bf8317 	ldw	r2,-500(fp)
  827a1c:	108002c4 	addi	r2,r2,11
  827a20:	e13f7917 	ldw	r4,-540(fp)
  827a24:	e0ff7717 	ldw	r3,-548(fp)
  827a28:	20c7c83a 	sub	r3,r4,r3
  827a2c:	1807d4ba 	srai	r3,r3,18
  827a30:	18c0ffcc 	andi	r3,r3,1023
  827a34:	e13f6f17 	ldw	r4,-580(fp)
  827a38:	20c7883a 	add	r3,r4,r3
  827a3c:	18c00003 	ldbu	r3,0(r3)
  827a40:	10c00005 	stb	r3,0(r2)
  827a44:	e0bf8317 	ldw	r2,-500(fp)
  827a48:	10800104 	addi	r2,r2,4
  827a4c:	e13f7d17 	ldw	r4,-524(fp)
  827a50:	e0ff8117 	ldw	r3,-508(fp)
  827a54:	20c7883a 	add	r3,r4,r3
  827a58:	1807d4ba 	srai	r3,r3,18
  827a5c:	18c0ffcc 	andi	r3,r3,1023
  827a60:	e13f6f17 	ldw	r4,-580(fp)
  827a64:	20c7883a 	add	r3,r4,r3
  827a68:	18c00003 	ldbu	r3,0(r3)
  827a6c:	10c00005 	stb	r3,0(r2)
  827a70:	e0bf8317 	ldw	r2,-500(fp)
  827a74:	10800284 	addi	r2,r2,10
  827a78:	e13f7d17 	ldw	r4,-524(fp)
  827a7c:	e0ff8117 	ldw	r3,-508(fp)
  827a80:	20c7c83a 	sub	r3,r4,r3
  827a84:	1807d4ba 	srai	r3,r3,18
  827a88:	18c0ffcc 	andi	r3,r3,1023
  827a8c:	e13f6f17 	ldw	r4,-580(fp)
  827a90:	20c7883a 	add	r3,r4,r3
  827a94:	18c00003 	ldbu	r3,0(r3)
  827a98:	10c00005 	stb	r3,0(r2)
  827a9c:	e0bf8317 	ldw	r2,-500(fp)
  827aa0:	10800144 	addi	r2,r2,5
  827aa4:	e13f7a17 	ldw	r4,-536(fp)
  827aa8:	e0ff8017 	ldw	r3,-512(fp)
  827aac:	20c7883a 	add	r3,r4,r3
  827ab0:	1807d4ba 	srai	r3,r3,18
  827ab4:	18c0ffcc 	andi	r3,r3,1023
  827ab8:	e13f6f17 	ldw	r4,-580(fp)
  827abc:	20c7883a 	add	r3,r4,r3
  827ac0:	18c00003 	ldbu	r3,0(r3)
  827ac4:	10c00005 	stb	r3,0(r2)
  827ac8:	e0bf8317 	ldw	r2,-500(fp)
  827acc:	10800244 	addi	r2,r2,9
  827ad0:	e13f7a17 	ldw	r4,-536(fp)
  827ad4:	e0ff8017 	ldw	r3,-512(fp)
  827ad8:	20c7c83a 	sub	r3,r4,r3
  827adc:	1807d4ba 	srai	r3,r3,18
  827ae0:	18c0ffcc 	andi	r3,r3,1023
  827ae4:	e13f6f17 	ldw	r4,-580(fp)
  827ae8:	20c7883a 	add	r3,r4,r3
  827aec:	18c00003 	ldbu	r3,0(r3)
  827af0:	10c00005 	stb	r3,0(r2)
  827af4:	e0bf8317 	ldw	r2,-500(fp)
  827af8:	10800184 	addi	r2,r2,6
  827afc:	e13f7b17 	ldw	r4,-532(fp)
  827b00:	e0ff8217 	ldw	r3,-504(fp)
  827b04:	20c7883a 	add	r3,r4,r3
  827b08:	1807d4ba 	srai	r3,r3,18
  827b0c:	18c0ffcc 	andi	r3,r3,1023
  827b10:	e13f6f17 	ldw	r4,-580(fp)
  827b14:	20c7883a 	add	r3,r4,r3
  827b18:	18c00003 	ldbu	r3,0(r3)
  827b1c:	10c00005 	stb	r3,0(r2)
  827b20:	e0bf8317 	ldw	r2,-500(fp)
  827b24:	10800204 	addi	r2,r2,8
  827b28:	e13f7b17 	ldw	r4,-532(fp)
  827b2c:	e0ff8217 	ldw	r3,-504(fp)
  827b30:	20c7c83a 	sub	r3,r4,r3
  827b34:	1807d4ba 	srai	r3,r3,18
  827b38:	18c0ffcc 	andi	r3,r3,1023
  827b3c:	e13f6f17 	ldw	r4,-580(fp)
  827b40:	20c7883a 	add	r3,r4,r3
  827b44:	18c00003 	ldbu	r3,0(r3)
  827b48:	10c00005 	stb	r3,0(r2)
  827b4c:	e0bf8317 	ldw	r2,-500(fp)
  827b50:	108001c4 	addi	r2,r2,7
  827b54:	e0ff7f17 	ldw	r3,-516(fp)
  827b58:	1807d4ba 	srai	r3,r3,18
  827b5c:	18c0ffcc 	andi	r3,r3,1023
  827b60:	e13f6f17 	ldw	r4,-580(fp)
  827b64:	20c7883a 	add	r3,r4,r3
  827b68:	18c00003 	ldbu	r3,0(r3)
  827b6c:	10c00005 	stb	r3,0(r2)
  827b70:	e0bf6d17 	ldw	r2,-588(fp)
  827b74:	10800804 	addi	r2,r2,32
  827b78:	e0bf6d15 	stw	r2,-588(fp)
  827b7c:	e0bf6e17 	ldw	r2,-584(fp)
  827b80:	10800044 	addi	r2,r2,1
  827b84:	e0bf6e15 	stw	r2,-584(fp)
  827b88:	e0bf6e17 	ldw	r2,-584(fp)
  827b8c:	108003d0 	cmplti	r2,r2,15
  827b90:	103e501e 	bne	r2,zero,8274d4 <__alt_mem_epcs_flash_controller_0+0xff81e4d4>
  827b94:	0001883a 	nop
  827b98:	e037883a 	mov	sp,fp
  827b9c:	dfc00117 	ldw	ra,4(sp)
  827ba0:	df000017 	ldw	fp,0(sp)
  827ba4:	dec00204 	addi	sp,sp,8
  827ba8:	f800283a 	ret

00827bac <jpeg_idct_16x16>:
  827bac:	deff5f04 	addi	sp,sp,-644
  827bb0:	dfc0a015 	stw	ra,640(sp)
  827bb4:	df009f15 	stw	fp,636(sp)
  827bb8:	dc009e15 	stw	r16,632(sp)
  827bbc:	df009f04 	addi	fp,sp,636
  827bc0:	e13ffb15 	stw	r4,-20(fp)
  827bc4:	e17ffc15 	stw	r5,-16(fp)
  827bc8:	e1bffd15 	stw	r6,-12(fp)
  827bcc:	e1fffe15 	stw	r7,-8(fp)
  827bd0:	e0bffb17 	ldw	r2,-20(fp)
  827bd4:	10805417 	ldw	r2,336(r2)
  827bd8:	10bfa004 	addi	r2,r2,-384
  827bdc:	e0bf6515 	stw	r2,-620(fp)
  827be0:	e0bffd17 	ldw	r2,-12(fp)
  827be4:	e0bf6115 	stw	r2,-636(fp)
  827be8:	e0bffc17 	ldw	r2,-16(fp)
  827bec:	10801517 	ldw	r2,84(r2)
  827bf0:	e0bf6215 	stw	r2,-632(fp)
  827bf4:	e0bf7b04 	addi	r2,fp,-532
  827bf8:	e0bf6315 	stw	r2,-628(fp)
  827bfc:	e03f6415 	stw	zero,-624(fp)
  827c00:	0001f906 	br	8283e8 <jpeg_idct_16x16+0x83c>
  827c04:	e0bf6117 	ldw	r2,-636(fp)
  827c08:	1080000b 	ldhu	r2,0(r2)
  827c0c:	10ffffcc 	andi	r3,r2,65535
  827c10:	18e0001c 	xori	r3,r3,32768
  827c14:	18e00004 	addi	r3,r3,-32768
  827c18:	e0bf6217 	ldw	r2,-632(fp)
  827c1c:	10800017 	ldw	r2,0(r2)
  827c20:	100b883a 	mov	r5,r2
  827c24:	1809883a 	mov	r4,r3
  827c28:	08301e80 	call	8301e8 <__mulsi3>
  827c2c:	e0bf6615 	stw	r2,-616(fp)
  827c30:	e0bf6617 	ldw	r2,-616(fp)
  827c34:	1004937a 	slli	r2,r2,13
  827c38:	e0bf6615 	stw	r2,-616(fp)
  827c3c:	e0bf6617 	ldw	r2,-616(fp)
  827c40:	10810004 	addi	r2,r2,1024
  827c44:	e0bf6615 	stw	r2,-616(fp)
  827c48:	e0bf6117 	ldw	r2,-636(fp)
  827c4c:	10801004 	addi	r2,r2,64
  827c50:	1080000b 	ldhu	r2,0(r2)
  827c54:	10ffffcc 	andi	r3,r2,65535
  827c58:	18e0001c 	xori	r3,r3,32768
  827c5c:	18e00004 	addi	r3,r3,-32768
  827c60:	e0bf6217 	ldw	r2,-632(fp)
  827c64:	10802004 	addi	r2,r2,128
  827c68:	10800017 	ldw	r2,0(r2)
  827c6c:	100b883a 	mov	r5,r2
  827c70:	1809883a 	mov	r4,r3
  827c74:	08301e80 	call	8301e8 <__mulsi3>
  827c78:	e0bf6715 	stw	r2,-612(fp)
  827c7c:	014a73c4 	movi	r5,10703
  827c80:	e13f6717 	ldw	r4,-612(fp)
  827c84:	08301e80 	call	8301e8 <__mulsi3>
  827c88:	e0bf6815 	stw	r2,-608(fp)
  827c8c:	01445444 	movi	r5,4433
  827c90:	e13f6717 	ldw	r4,-612(fp)
  827c94:	08301e80 	call	8301e8 <__mulsi3>
  827c98:	e0bf6915 	stw	r2,-604(fp)
  827c9c:	e0ff6617 	ldw	r3,-616(fp)
  827ca0:	e0bf6817 	ldw	r2,-608(fp)
  827ca4:	1885883a 	add	r2,r3,r2
  827ca8:	e0bf6a15 	stw	r2,-600(fp)
  827cac:	e0ff6617 	ldw	r3,-616(fp)
  827cb0:	e0bf6817 	ldw	r2,-608(fp)
  827cb4:	1885c83a 	sub	r2,r3,r2
  827cb8:	e0bf6b15 	stw	r2,-596(fp)
  827cbc:	e0ff6617 	ldw	r3,-616(fp)
  827cc0:	e0bf6917 	ldw	r2,-604(fp)
  827cc4:	1885883a 	add	r2,r3,r2
  827cc8:	e0bf6c15 	stw	r2,-592(fp)
  827ccc:	e0ff6617 	ldw	r3,-616(fp)
  827cd0:	e0bf6917 	ldw	r2,-604(fp)
  827cd4:	1885c83a 	sub	r2,r3,r2
  827cd8:	e0bf6d15 	stw	r2,-588(fp)
  827cdc:	e0bf6117 	ldw	r2,-636(fp)
  827ce0:	10800804 	addi	r2,r2,32
  827ce4:	1080000b 	ldhu	r2,0(r2)
  827ce8:	10ffffcc 	andi	r3,r2,65535
  827cec:	18e0001c 	xori	r3,r3,32768
  827cf0:	18e00004 	addi	r3,r3,-32768
  827cf4:	e0bf6217 	ldw	r2,-632(fp)
  827cf8:	10801004 	addi	r2,r2,64
  827cfc:	10800017 	ldw	r2,0(r2)
  827d00:	100b883a 	mov	r5,r2
  827d04:	1809883a 	mov	r4,r3
  827d08:	08301e80 	call	8301e8 <__mulsi3>
  827d0c:	e0bf6715 	stw	r2,-612(fp)
  827d10:	e0bf6117 	ldw	r2,-636(fp)
  827d14:	10801804 	addi	r2,r2,96
  827d18:	1080000b 	ldhu	r2,0(r2)
  827d1c:	10ffffcc 	andi	r3,r2,65535
  827d20:	18e0001c 	xori	r3,r3,32768
  827d24:	18e00004 	addi	r3,r3,-32768
  827d28:	e0bf6217 	ldw	r2,-632(fp)
  827d2c:	10803004 	addi	r2,r2,192
  827d30:	10800017 	ldw	r2,0(r2)
  827d34:	100b883a 	mov	r5,r2
  827d38:	1809883a 	mov	r4,r3
  827d3c:	08301e80 	call	8301e8 <__mulsi3>
  827d40:	e0bf6e15 	stw	r2,-584(fp)
  827d44:	e0ff6717 	ldw	r3,-612(fp)
  827d48:	e0bf6e17 	ldw	r2,-584(fp)
  827d4c:	1885c83a 	sub	r2,r3,r2
  827d50:	e0bf6f15 	stw	r2,-580(fp)
  827d54:	01423504 	movi	r5,2260
  827d58:	e13f6f17 	ldw	r4,-580(fp)
  827d5c:	08301e80 	call	8301e8 <__mulsi3>
  827d60:	e0bf7015 	stw	r2,-576(fp)
  827d64:	014b18c4 	movi	r5,11363
  827d68:	e13f6f17 	ldw	r4,-580(fp)
  827d6c:	08301e80 	call	8301e8 <__mulsi3>
  827d70:	e0bf6f15 	stw	r2,-580(fp)
  827d74:	015480c4 	movi	r5,20995
  827d78:	e13f6e17 	ldw	r4,-584(fp)
  827d7c:	08301e80 	call	8301e8 <__mulsi3>
  827d80:	1007883a 	mov	r3,r2
  827d84:	e0bf6f17 	ldw	r2,-580(fp)
  827d88:	1885883a 	add	r2,r3,r2
  827d8c:	e0bf6615 	stw	r2,-616(fp)
  827d90:	01473344 	movi	r5,7373
  827d94:	e13f6717 	ldw	r4,-612(fp)
  827d98:	08301e80 	call	8301e8 <__mulsi3>
  827d9c:	1007883a 	mov	r3,r2
  827da0:	e0bf7017 	ldw	r2,-576(fp)
  827da4:	1885883a 	add	r2,r3,r2
  827da8:	e0bf6815 	stw	r2,-608(fp)
  827dac:	017b3084 	movi	r5,-4926
  827db0:	e13f6717 	ldw	r4,-612(fp)
  827db4:	08301e80 	call	8301e8 <__mulsi3>
  827db8:	1007883a 	mov	r3,r2
  827dbc:	e0bf6f17 	ldw	r2,-580(fp)
  827dc0:	1885883a 	add	r2,r3,r2
  827dc4:	e0bf6915 	stw	r2,-604(fp)
  827dc8:	017bec04 	movi	r5,-4176
  827dcc:	e13f6e17 	ldw	r4,-584(fp)
  827dd0:	08301e80 	call	8301e8 <__mulsi3>
  827dd4:	1007883a 	mov	r3,r2
  827dd8:	e0bf7017 	ldw	r2,-576(fp)
  827ddc:	1885883a 	add	r2,r3,r2
  827de0:	e0bf7115 	stw	r2,-572(fp)
  827de4:	e0ff6a17 	ldw	r3,-600(fp)
  827de8:	e0bf6617 	ldw	r2,-616(fp)
  827dec:	1885883a 	add	r2,r3,r2
  827df0:	e0bf7215 	stw	r2,-568(fp)
  827df4:	e0ff6a17 	ldw	r3,-600(fp)
  827df8:	e0bf6617 	ldw	r2,-616(fp)
  827dfc:	1885c83a 	sub	r2,r3,r2
  827e00:	e0bf7315 	stw	r2,-564(fp)
  827e04:	e0ff6c17 	ldw	r3,-592(fp)
  827e08:	e0bf6817 	ldw	r2,-608(fp)
  827e0c:	1885883a 	add	r2,r3,r2
  827e10:	e0bf7415 	stw	r2,-560(fp)
  827e14:	e0ff6c17 	ldw	r3,-592(fp)
  827e18:	e0bf6817 	ldw	r2,-608(fp)
  827e1c:	1885c83a 	sub	r2,r3,r2
  827e20:	e0bf7515 	stw	r2,-556(fp)
  827e24:	e0ff6d17 	ldw	r3,-588(fp)
  827e28:	e0bf6917 	ldw	r2,-604(fp)
  827e2c:	1885883a 	add	r2,r3,r2
  827e30:	e0bf7615 	stw	r2,-552(fp)
  827e34:	e0ff6d17 	ldw	r3,-588(fp)
  827e38:	e0bf6917 	ldw	r2,-604(fp)
  827e3c:	1885c83a 	sub	r2,r3,r2
  827e40:	e0bf7715 	stw	r2,-548(fp)
  827e44:	e0ff6b17 	ldw	r3,-596(fp)
  827e48:	e0bf7117 	ldw	r2,-572(fp)
  827e4c:	1885883a 	add	r2,r3,r2
  827e50:	e0bf7815 	stw	r2,-544(fp)
  827e54:	e0ff6b17 	ldw	r3,-596(fp)
  827e58:	e0bf7117 	ldw	r2,-572(fp)
  827e5c:	1885c83a 	sub	r2,r3,r2
  827e60:	e0bf7915 	stw	r2,-540(fp)
  827e64:	e0bf6117 	ldw	r2,-636(fp)
  827e68:	10800404 	addi	r2,r2,16
  827e6c:	1080000b 	ldhu	r2,0(r2)
  827e70:	10ffffcc 	andi	r3,r2,65535
  827e74:	18e0001c 	xori	r3,r3,32768
  827e78:	18e00004 	addi	r3,r3,-32768
  827e7c:	e0bf6217 	ldw	r2,-632(fp)
  827e80:	10800804 	addi	r2,r2,32
  827e84:	10800017 	ldw	r2,0(r2)
  827e88:	100b883a 	mov	r5,r2
  827e8c:	1809883a 	mov	r4,r3
  827e90:	08301e80 	call	8301e8 <__mulsi3>
  827e94:	e0bf6715 	stw	r2,-612(fp)
  827e98:	e0bf6117 	ldw	r2,-636(fp)
  827e9c:	10800c04 	addi	r2,r2,48
  827ea0:	1080000b 	ldhu	r2,0(r2)
  827ea4:	10ffffcc 	andi	r3,r2,65535
  827ea8:	18e0001c 	xori	r3,r3,32768
  827eac:	18e00004 	addi	r3,r3,-32768
  827eb0:	e0bf6217 	ldw	r2,-632(fp)
  827eb4:	10801804 	addi	r2,r2,96
  827eb8:	10800017 	ldw	r2,0(r2)
  827ebc:	100b883a 	mov	r5,r2
  827ec0:	1809883a 	mov	r4,r3
  827ec4:	08301e80 	call	8301e8 <__mulsi3>
  827ec8:	e0bf6e15 	stw	r2,-584(fp)
  827ecc:	e0bf6117 	ldw	r2,-636(fp)
  827ed0:	10801404 	addi	r2,r2,80
  827ed4:	1080000b 	ldhu	r2,0(r2)
  827ed8:	10ffffcc 	andi	r3,r2,65535
  827edc:	18e0001c 	xori	r3,r3,32768
  827ee0:	18e00004 	addi	r3,r3,-32768
  827ee4:	e0bf6217 	ldw	r2,-632(fp)
  827ee8:	10802804 	addi	r2,r2,160
  827eec:	10800017 	ldw	r2,0(r2)
  827ef0:	100b883a 	mov	r5,r2
  827ef4:	1809883a 	mov	r4,r3
  827ef8:	08301e80 	call	8301e8 <__mulsi3>
  827efc:	e0bf6f15 	stw	r2,-580(fp)
  827f00:	e0bf6117 	ldw	r2,-636(fp)
  827f04:	10801c04 	addi	r2,r2,112
  827f08:	1080000b 	ldhu	r2,0(r2)
  827f0c:	10ffffcc 	andi	r3,r2,65535
  827f10:	18e0001c 	xori	r3,r3,32768
  827f14:	18e00004 	addi	r3,r3,-32768
  827f18:	e0bf6217 	ldw	r2,-632(fp)
  827f1c:	10803804 	addi	r2,r2,224
  827f20:	10800017 	ldw	r2,0(r2)
  827f24:	100b883a 	mov	r5,r2
  827f28:	1809883a 	mov	r4,r3
  827f2c:	08301e80 	call	8301e8 <__mulsi3>
  827f30:	e0bf7015 	stw	r2,-576(fp)
  827f34:	e0ff6717 	ldw	r3,-612(fp)
  827f38:	e0bf6f17 	ldw	r2,-580(fp)
  827f3c:	1885883a 	add	r2,r3,r2
  827f40:	e0bf6b15 	stw	r2,-596(fp)
  827f44:	e0ff6717 	ldw	r3,-612(fp)
  827f48:	e0bf6e17 	ldw	r2,-584(fp)
  827f4c:	1885883a 	add	r2,r3,r2
  827f50:	014ad384 	movi	r5,11086
  827f54:	1009883a 	mov	r4,r2
  827f58:	08301e80 	call	8301e8 <__mulsi3>
  827f5c:	e0bf6815 	stw	r2,-608(fp)
  827f60:	0149fa44 	movi	r5,10217
  827f64:	e13f6b17 	ldw	r4,-596(fp)
  827f68:	08301e80 	call	8301e8 <__mulsi3>
  827f6c:	e0bf6915 	stw	r2,-604(fp)
  827f70:	e0ff6717 	ldw	r3,-612(fp)
  827f74:	e0bf7017 	ldw	r2,-576(fp)
  827f78:	1885883a 	add	r2,r3,r2
  827f7c:	0148bf04 	movi	r5,8956
  827f80:	1009883a 	mov	r4,r2
  827f84:	08301e80 	call	8301e8 <__mulsi3>
  827f88:	e0bf7115 	stw	r2,-572(fp)
  827f8c:	e0ff6717 	ldw	r3,-612(fp)
  827f90:	e0bf7017 	ldw	r2,-576(fp)
  827f94:	1885c83a 	sub	r2,r3,r2
  827f98:	01472d84 	movi	r5,7350
  827f9c:	1009883a 	mov	r4,r2
  827fa0:	08301e80 	call	8301e8 <__mulsi3>
  827fa4:	e0bf6a15 	stw	r2,-600(fp)
  827fa8:	01455544 	movi	r5,5461
  827fac:	e13f6b17 	ldw	r4,-596(fp)
  827fb0:	08301e80 	call	8301e8 <__mulsi3>
  827fb4:	e0bf6b15 	stw	r2,-596(fp)
  827fb8:	e0ff6717 	ldw	r3,-612(fp)
  827fbc:	e0bf6e17 	ldw	r2,-584(fp)
  827fc0:	1885c83a 	sub	r2,r3,r2
  827fc4:	014348c4 	movi	r5,3363
  827fc8:	1009883a 	mov	r4,r2
  827fcc:	08301e80 	call	8301e8 <__mulsi3>
  827fd0:	e0bf6c15 	stw	r2,-592(fp)
  827fd4:	e0ff6817 	ldw	r3,-608(fp)
  827fd8:	e0bf6917 	ldw	r2,-604(fp)
  827fdc:	1887883a 	add	r3,r3,r2
  827fe0:	e0bf7117 	ldw	r2,-572(fp)
  827fe4:	18a1883a 	add	r16,r3,r2
  827fe8:	016db584 	movi	r5,-18730
  827fec:	e13f6717 	ldw	r4,-612(fp)
  827ff0:	08301e80 	call	8301e8 <__mulsi3>
  827ff4:	8085883a 	add	r2,r16,r2
  827ff8:	e0bf6615 	stw	r2,-616(fp)
  827ffc:	e0ff6a17 	ldw	r3,-600(fp)
  828000:	e0bf6b17 	ldw	r2,-596(fp)
  828004:	1887883a 	add	r3,r3,r2
  828008:	e0bf6c17 	ldw	r2,-592(fp)
  82800c:	18a1883a 	add	r16,r3,r2
  828010:	01715084 	movi	r5,-15038
  828014:	e13f6717 	ldw	r4,-612(fp)
  828018:	08301e80 	call	8301e8 <__mulsi3>
  82801c:	8085883a 	add	r2,r16,r2
  828020:	e0bf6d15 	stw	r2,-588(fp)
  828024:	e0ff6e17 	ldw	r3,-584(fp)
  828028:	e0bf6f17 	ldw	r2,-580(fp)
  82802c:	1885883a 	add	r2,r3,r2
  828030:	01411c04 	movi	r5,1136
  828034:	1009883a 	mov	r4,r2
  828038:	08301e80 	call	8301e8 <__mulsi3>
  82803c:	e0bf6715 	stw	r2,-612(fp)
  828040:	01409344 	movi	r5,589
  828044:	e13f6e17 	ldw	r4,-584(fp)
  828048:	08301e80 	call	8301e8 <__mulsi3>
  82804c:	1007883a 	mov	r3,r2
  828050:	e0bf6717 	ldw	r2,-612(fp)
  828054:	1885883a 	add	r2,r3,r2
  828058:	e0ff6817 	ldw	r3,-608(fp)
  82805c:	1885883a 	add	r2,r3,r2
  828060:	e0bf6815 	stw	r2,-608(fp)
  828064:	0176fe84 	movi	r5,-9222
  828068:	e13f6f17 	ldw	r4,-580(fp)
  82806c:	08301e80 	call	8301e8 <__mulsi3>
  828070:	1007883a 	mov	r3,r2
  828074:	e0bf6717 	ldw	r2,-612(fp)
  828078:	1885883a 	add	r2,r3,r2
  82807c:	e0ff6917 	ldw	r3,-604(fp)
  828080:	1885883a 	add	r2,r3,r2
  828084:	e0bf6915 	stw	r2,-604(fp)
  828088:	e0ff6f17 	ldw	r3,-580(fp)
  82808c:	e0bf6e17 	ldw	r2,-584(fp)
  828090:	1885c83a 	sub	r2,r3,r2
  828094:	014b4244 	movi	r5,11529
  828098:	1009883a 	mov	r4,r2
  82809c:	08301e80 	call	8301e8 <__mulsi3>
  8280a0:	e0bf6715 	stw	r2,-612(fp)
  8280a4:	0179de84 	movi	r5,-6278
  8280a8:	e13f6f17 	ldw	r4,-580(fp)
  8280ac:	08301e80 	call	8301e8 <__mulsi3>
  8280b0:	1007883a 	mov	r3,r2
  8280b4:	e0bf6717 	ldw	r2,-612(fp)
  8280b8:	1885883a 	add	r2,r3,r2
  8280bc:	e0ff6b17 	ldw	r3,-596(fp)
  8280c0:	1885883a 	add	r2,r3,r2
  8280c4:	e0bf6b15 	stw	r2,-596(fp)
  8280c8:	014fc684 	movi	r5,16154
  8280cc:	e13f6e17 	ldw	r4,-584(fp)
  8280d0:	08301e80 	call	8301e8 <__mulsi3>
  8280d4:	1007883a 	mov	r3,r2
  8280d8:	e0bf6717 	ldw	r2,-612(fp)
  8280dc:	1885883a 	add	r2,r3,r2
  8280e0:	e0ff6c17 	ldw	r3,-592(fp)
  8280e4:	1885883a 	add	r2,r3,r2
  8280e8:	e0bf6c15 	stw	r2,-592(fp)
  8280ec:	e0ff6e17 	ldw	r3,-584(fp)
  8280f0:	e0bf7017 	ldw	r2,-576(fp)
  8280f4:	1885883a 	add	r2,r3,r2
  8280f8:	e0bf6e15 	stw	r2,-584(fp)
  8280fc:	017aaac4 	movi	r5,-5461
  828100:	e13f6e17 	ldw	r4,-584(fp)
  828104:	08301e80 	call	8301e8 <__mulsi3>
  828108:	e0bf6715 	stw	r2,-612(fp)
  82810c:	e0ff6817 	ldw	r3,-608(fp)
  828110:	e0bf6717 	ldw	r2,-612(fp)
  828114:	1885883a 	add	r2,r3,r2
  828118:	e0bf6815 	stw	r2,-608(fp)
  82811c:	01488604 	movi	r5,8728
  828120:	e13f7017 	ldw	r4,-576(fp)
  828124:	08301e80 	call	8301e8 <__mulsi3>
  828128:	1007883a 	mov	r3,r2
  82812c:	e0bf6717 	ldw	r2,-612(fp)
  828130:	1885883a 	add	r2,r3,r2
  828134:	e0ff7117 	ldw	r3,-572(fp)
  828138:	1885883a 	add	r2,r3,r2
  82813c:	e0bf7115 	stw	r2,-572(fp)
  828140:	017605c4 	movi	r5,-10217
  828144:	e13f6e17 	ldw	r4,-584(fp)
  828148:	08301e80 	call	8301e8 <__mulsi3>
  82814c:	e0bf6e15 	stw	r2,-584(fp)
  828150:	01592144 	movi	r5,25733
  828154:	e13f7017 	ldw	r4,-576(fp)
  828158:	08301e80 	call	8301e8 <__mulsi3>
  82815c:	1007883a 	mov	r3,r2
  828160:	e0bf6e17 	ldw	r2,-584(fp)
  828164:	1885883a 	add	r2,r3,r2
  828168:	e0ff6a17 	ldw	r3,-600(fp)
  82816c:	1885883a 	add	r2,r3,r2
  828170:	e0bf6a15 	stw	r2,-600(fp)
  828174:	e0ff6c17 	ldw	r3,-592(fp)
  828178:	e0bf6e17 	ldw	r2,-584(fp)
  82817c:	1885883a 	add	r2,r3,r2
  828180:	e0bf6c15 	stw	r2,-592(fp)
  828184:	e0ff6f17 	ldw	r3,-580(fp)
  828188:	e0bf7017 	ldw	r2,-576(fp)
  82818c:	1885883a 	add	r2,r3,r2
  828190:	01752c84 	movi	r5,-11086
  828194:	1009883a 	mov	r4,r2
  828198:	08301e80 	call	8301e8 <__mulsi3>
  82819c:	e0bf6e15 	stw	r2,-584(fp)
  8281a0:	e0ff6917 	ldw	r3,-604(fp)
  8281a4:	e0bf6e17 	ldw	r2,-584(fp)
  8281a8:	1885883a 	add	r2,r3,r2
  8281ac:	e0bf6915 	stw	r2,-604(fp)
  8281b0:	e0ff7117 	ldw	r3,-572(fp)
  8281b4:	e0bf6e17 	ldw	r2,-584(fp)
  8281b8:	1885883a 	add	r2,r3,r2
  8281bc:	e0bf7115 	stw	r2,-572(fp)
  8281c0:	e0ff7017 	ldw	r3,-576(fp)
  8281c4:	e0bf6f17 	ldw	r2,-580(fp)
  8281c8:	1885c83a 	sub	r2,r3,r2
  8281cc:	014348c4 	movi	r5,3363
  8281d0:	1009883a 	mov	r4,r2
  8281d4:	08301e80 	call	8301e8 <__mulsi3>
  8281d8:	e0bf6e15 	stw	r2,-584(fp)
  8281dc:	e0ff6a17 	ldw	r3,-600(fp)
  8281e0:	e0bf6e17 	ldw	r2,-584(fp)
  8281e4:	1885883a 	add	r2,r3,r2
  8281e8:	e0bf6a15 	stw	r2,-600(fp)
  8281ec:	e0ff6b17 	ldw	r3,-596(fp)
  8281f0:	e0bf6e17 	ldw	r2,-584(fp)
  8281f4:	1885883a 	add	r2,r3,r2
  8281f8:	e0bf6b15 	stw	r2,-596(fp)
  8281fc:	e0ff7217 	ldw	r3,-568(fp)
  828200:	e0bf6617 	ldw	r2,-616(fp)
  828204:	1885883a 	add	r2,r3,r2
  828208:	1007d2fa 	srai	r3,r2,11
  82820c:	e0bf6317 	ldw	r2,-628(fp)
  828210:	10c00015 	stw	r3,0(r2)
  828214:	e0bf6317 	ldw	r2,-628(fp)
  828218:	10807804 	addi	r2,r2,480
  82821c:	e13f7217 	ldw	r4,-568(fp)
  828220:	e0ff6617 	ldw	r3,-616(fp)
  828224:	20c7c83a 	sub	r3,r4,r3
  828228:	1807d2fa 	srai	r3,r3,11
  82822c:	10c00015 	stw	r3,0(r2)
  828230:	e0bf6317 	ldw	r2,-628(fp)
  828234:	10800804 	addi	r2,r2,32
  828238:	e13f7417 	ldw	r4,-560(fp)
  82823c:	e0ff6817 	ldw	r3,-608(fp)
  828240:	20c7883a 	add	r3,r4,r3
  828244:	1807d2fa 	srai	r3,r3,11
  828248:	10c00015 	stw	r3,0(r2)
  82824c:	e0bf6317 	ldw	r2,-628(fp)
  828250:	10807004 	addi	r2,r2,448
  828254:	e13f7417 	ldw	r4,-560(fp)
  828258:	e0ff6817 	ldw	r3,-608(fp)
  82825c:	20c7c83a 	sub	r3,r4,r3
  828260:	1807d2fa 	srai	r3,r3,11
  828264:	10c00015 	stw	r3,0(r2)
  828268:	e0bf6317 	ldw	r2,-628(fp)
  82826c:	10801004 	addi	r2,r2,64
  828270:	e13f7617 	ldw	r4,-552(fp)
  828274:	e0ff6917 	ldw	r3,-604(fp)
  828278:	20c7883a 	add	r3,r4,r3
  82827c:	1807d2fa 	srai	r3,r3,11
  828280:	10c00015 	stw	r3,0(r2)
  828284:	e0bf6317 	ldw	r2,-628(fp)
  828288:	10806804 	addi	r2,r2,416
  82828c:	e13f7617 	ldw	r4,-552(fp)
  828290:	e0ff6917 	ldw	r3,-604(fp)
  828294:	20c7c83a 	sub	r3,r4,r3
  828298:	1807d2fa 	srai	r3,r3,11
  82829c:	10c00015 	stw	r3,0(r2)
  8282a0:	e0bf6317 	ldw	r2,-628(fp)
  8282a4:	10801804 	addi	r2,r2,96
  8282a8:	e13f7817 	ldw	r4,-544(fp)
  8282ac:	e0ff7117 	ldw	r3,-572(fp)
  8282b0:	20c7883a 	add	r3,r4,r3
  8282b4:	1807d2fa 	srai	r3,r3,11
  8282b8:	10c00015 	stw	r3,0(r2)
  8282bc:	e0bf6317 	ldw	r2,-628(fp)
  8282c0:	10806004 	addi	r2,r2,384
  8282c4:	e13f7817 	ldw	r4,-544(fp)
  8282c8:	e0ff7117 	ldw	r3,-572(fp)
  8282cc:	20c7c83a 	sub	r3,r4,r3
  8282d0:	1807d2fa 	srai	r3,r3,11
  8282d4:	10c00015 	stw	r3,0(r2)
  8282d8:	e0bf6317 	ldw	r2,-628(fp)
  8282dc:	10802004 	addi	r2,r2,128
  8282e0:	e13f7917 	ldw	r4,-540(fp)
  8282e4:	e0ff6a17 	ldw	r3,-600(fp)
  8282e8:	20c7883a 	add	r3,r4,r3
  8282ec:	1807d2fa 	srai	r3,r3,11
  8282f0:	10c00015 	stw	r3,0(r2)
  8282f4:	e0bf6317 	ldw	r2,-628(fp)
  8282f8:	10805804 	addi	r2,r2,352
  8282fc:	e13f7917 	ldw	r4,-540(fp)
  828300:	e0ff6a17 	ldw	r3,-600(fp)
  828304:	20c7c83a 	sub	r3,r4,r3
  828308:	1807d2fa 	srai	r3,r3,11
  82830c:	10c00015 	stw	r3,0(r2)
  828310:	e0bf6317 	ldw	r2,-628(fp)
  828314:	10802804 	addi	r2,r2,160
  828318:	e13f7717 	ldw	r4,-548(fp)
  82831c:	e0ff6b17 	ldw	r3,-596(fp)
  828320:	20c7883a 	add	r3,r4,r3
  828324:	1807d2fa 	srai	r3,r3,11
  828328:	10c00015 	stw	r3,0(r2)
  82832c:	e0bf6317 	ldw	r2,-628(fp)
  828330:	10805004 	addi	r2,r2,320
  828334:	e13f7717 	ldw	r4,-548(fp)
  828338:	e0ff6b17 	ldw	r3,-596(fp)
  82833c:	20c7c83a 	sub	r3,r4,r3
  828340:	1807d2fa 	srai	r3,r3,11
  828344:	10c00015 	stw	r3,0(r2)
  828348:	e0bf6317 	ldw	r2,-628(fp)
  82834c:	10803004 	addi	r2,r2,192
  828350:	e13f7517 	ldw	r4,-556(fp)
  828354:	e0ff6c17 	ldw	r3,-592(fp)
  828358:	20c7883a 	add	r3,r4,r3
  82835c:	1807d2fa 	srai	r3,r3,11
  828360:	10c00015 	stw	r3,0(r2)
  828364:	e0bf6317 	ldw	r2,-628(fp)
  828368:	10804804 	addi	r2,r2,288
  82836c:	e13f7517 	ldw	r4,-556(fp)
  828370:	e0ff6c17 	ldw	r3,-592(fp)
  828374:	20c7c83a 	sub	r3,r4,r3
  828378:	1807d2fa 	srai	r3,r3,11
  82837c:	10c00015 	stw	r3,0(r2)
  828380:	e0bf6317 	ldw	r2,-628(fp)
  828384:	10803804 	addi	r2,r2,224
  828388:	e13f7317 	ldw	r4,-564(fp)
  82838c:	e0ff6d17 	ldw	r3,-588(fp)
  828390:	20c7883a 	add	r3,r4,r3
  828394:	1807d2fa 	srai	r3,r3,11
  828398:	10c00015 	stw	r3,0(r2)
  82839c:	e0bf6317 	ldw	r2,-628(fp)
  8283a0:	10804004 	addi	r2,r2,256
  8283a4:	e13f7317 	ldw	r4,-564(fp)
  8283a8:	e0ff6d17 	ldw	r3,-588(fp)
  8283ac:	20c7c83a 	sub	r3,r4,r3
  8283b0:	1807d2fa 	srai	r3,r3,11
  8283b4:	10c00015 	stw	r3,0(r2)
  8283b8:	e0bf6417 	ldw	r2,-624(fp)
  8283bc:	10800044 	addi	r2,r2,1
  8283c0:	e0bf6415 	stw	r2,-624(fp)
  8283c4:	e0bf6117 	ldw	r2,-636(fp)
  8283c8:	10800084 	addi	r2,r2,2
  8283cc:	e0bf6115 	stw	r2,-636(fp)
  8283d0:	e0bf6217 	ldw	r2,-632(fp)
  8283d4:	10800104 	addi	r2,r2,4
  8283d8:	e0bf6215 	stw	r2,-632(fp)
  8283dc:	e0bf6317 	ldw	r2,-628(fp)
  8283e0:	10800104 	addi	r2,r2,4
  8283e4:	e0bf6315 	stw	r2,-628(fp)
  8283e8:	e0bf6417 	ldw	r2,-624(fp)
  8283ec:	10800210 	cmplti	r2,r2,8
  8283f0:	103e041e 	bne	r2,zero,827c04 <__alt_mem_epcs_flash_controller_0+0xff81ec04>
  8283f4:	e0bf7b04 	addi	r2,fp,-532
  8283f8:	e0bf6315 	stw	r2,-628(fp)
  8283fc:	e03f6415 	stw	zero,-624(fp)
  828400:	0001f406 	br	828bd4 <jpeg_idct_16x16+0x1028>
  828404:	e0bf6417 	ldw	r2,-624(fp)
  828408:	1085883a 	add	r2,r2,r2
  82840c:	1085883a 	add	r2,r2,r2
  828410:	1007883a 	mov	r3,r2
  828414:	e0bffe17 	ldw	r2,-8(fp)
  828418:	10c5883a 	add	r2,r2,r3
  82841c:	10c00017 	ldw	r3,0(r2)
  828420:	e0800217 	ldw	r2,8(fp)
  828424:	1885883a 	add	r2,r3,r2
  828428:	e0bf7a15 	stw	r2,-536(fp)
  82842c:	e0bf6317 	ldw	r2,-628(fp)
  828430:	10800017 	ldw	r2,0(r2)
  828434:	10900404 	addi	r2,r2,16400
  828438:	e0bf6615 	stw	r2,-616(fp)
  82843c:	e0bf6617 	ldw	r2,-616(fp)
  828440:	1004937a 	slli	r2,r2,13
  828444:	e0bf6615 	stw	r2,-616(fp)
  828448:	e0bf6317 	ldw	r2,-628(fp)
  82844c:	10800404 	addi	r2,r2,16
  828450:	10800017 	ldw	r2,0(r2)
  828454:	e0bf6715 	stw	r2,-612(fp)
  828458:	014a73c4 	movi	r5,10703
  82845c:	e13f6717 	ldw	r4,-612(fp)
  828460:	08301e80 	call	8301e8 <__mulsi3>
  828464:	e0bf6815 	stw	r2,-608(fp)
  828468:	01445444 	movi	r5,4433
  82846c:	e13f6717 	ldw	r4,-612(fp)
  828470:	08301e80 	call	8301e8 <__mulsi3>
  828474:	e0bf6915 	stw	r2,-604(fp)
  828478:	e0ff6617 	ldw	r3,-616(fp)
  82847c:	e0bf6817 	ldw	r2,-608(fp)
  828480:	1885883a 	add	r2,r3,r2
  828484:	e0bf6a15 	stw	r2,-600(fp)
  828488:	e0ff6617 	ldw	r3,-616(fp)
  82848c:	e0bf6817 	ldw	r2,-608(fp)
  828490:	1885c83a 	sub	r2,r3,r2
  828494:	e0bf6b15 	stw	r2,-596(fp)
  828498:	e0ff6617 	ldw	r3,-616(fp)
  82849c:	e0bf6917 	ldw	r2,-604(fp)
  8284a0:	1885883a 	add	r2,r3,r2
  8284a4:	e0bf6c15 	stw	r2,-592(fp)
  8284a8:	e0ff6617 	ldw	r3,-616(fp)
  8284ac:	e0bf6917 	ldw	r2,-604(fp)
  8284b0:	1885c83a 	sub	r2,r3,r2
  8284b4:	e0bf6d15 	stw	r2,-588(fp)
  8284b8:	e0bf6317 	ldw	r2,-628(fp)
  8284bc:	10800204 	addi	r2,r2,8
  8284c0:	10800017 	ldw	r2,0(r2)
  8284c4:	e0bf6715 	stw	r2,-612(fp)
  8284c8:	e0bf6317 	ldw	r2,-628(fp)
  8284cc:	10800604 	addi	r2,r2,24
  8284d0:	10800017 	ldw	r2,0(r2)
  8284d4:	e0bf6e15 	stw	r2,-584(fp)
  8284d8:	e0ff6717 	ldw	r3,-612(fp)
  8284dc:	e0bf6e17 	ldw	r2,-584(fp)
  8284e0:	1885c83a 	sub	r2,r3,r2
  8284e4:	e0bf6f15 	stw	r2,-580(fp)
  8284e8:	01423504 	movi	r5,2260
  8284ec:	e13f6f17 	ldw	r4,-580(fp)
  8284f0:	08301e80 	call	8301e8 <__mulsi3>
  8284f4:	e0bf7015 	stw	r2,-576(fp)
  8284f8:	014b18c4 	movi	r5,11363
  8284fc:	e13f6f17 	ldw	r4,-580(fp)
  828500:	08301e80 	call	8301e8 <__mulsi3>
  828504:	e0bf6f15 	stw	r2,-580(fp)
  828508:	015480c4 	movi	r5,20995
  82850c:	e13f6e17 	ldw	r4,-584(fp)
  828510:	08301e80 	call	8301e8 <__mulsi3>
  828514:	1007883a 	mov	r3,r2
  828518:	e0bf6f17 	ldw	r2,-580(fp)
  82851c:	1885883a 	add	r2,r3,r2
  828520:	e0bf6615 	stw	r2,-616(fp)
  828524:	01473344 	movi	r5,7373
  828528:	e13f6717 	ldw	r4,-612(fp)
  82852c:	08301e80 	call	8301e8 <__mulsi3>
  828530:	1007883a 	mov	r3,r2
  828534:	e0bf7017 	ldw	r2,-576(fp)
  828538:	1885883a 	add	r2,r3,r2
  82853c:	e0bf6815 	stw	r2,-608(fp)
  828540:	017b3084 	movi	r5,-4926
  828544:	e13f6717 	ldw	r4,-612(fp)
  828548:	08301e80 	call	8301e8 <__mulsi3>
  82854c:	1007883a 	mov	r3,r2
  828550:	e0bf6f17 	ldw	r2,-580(fp)
  828554:	1885883a 	add	r2,r3,r2
  828558:	e0bf6915 	stw	r2,-604(fp)
  82855c:	017bec04 	movi	r5,-4176
  828560:	e13f6e17 	ldw	r4,-584(fp)
  828564:	08301e80 	call	8301e8 <__mulsi3>
  828568:	1007883a 	mov	r3,r2
  82856c:	e0bf7017 	ldw	r2,-576(fp)
  828570:	1885883a 	add	r2,r3,r2
  828574:	e0bf7115 	stw	r2,-572(fp)
  828578:	e0ff6a17 	ldw	r3,-600(fp)
  82857c:	e0bf6617 	ldw	r2,-616(fp)
  828580:	1885883a 	add	r2,r3,r2
  828584:	e0bf7215 	stw	r2,-568(fp)
  828588:	e0ff6a17 	ldw	r3,-600(fp)
  82858c:	e0bf6617 	ldw	r2,-616(fp)
  828590:	1885c83a 	sub	r2,r3,r2
  828594:	e0bf7315 	stw	r2,-564(fp)
  828598:	e0ff6c17 	ldw	r3,-592(fp)
  82859c:	e0bf6817 	ldw	r2,-608(fp)
  8285a0:	1885883a 	add	r2,r3,r2
  8285a4:	e0bf7415 	stw	r2,-560(fp)
  8285a8:	e0ff6c17 	ldw	r3,-592(fp)
  8285ac:	e0bf6817 	ldw	r2,-608(fp)
  8285b0:	1885c83a 	sub	r2,r3,r2
  8285b4:	e0bf7515 	stw	r2,-556(fp)
  8285b8:	e0ff6d17 	ldw	r3,-588(fp)
  8285bc:	e0bf6917 	ldw	r2,-604(fp)
  8285c0:	1885883a 	add	r2,r3,r2
  8285c4:	e0bf7615 	stw	r2,-552(fp)
  8285c8:	e0ff6d17 	ldw	r3,-588(fp)
  8285cc:	e0bf6917 	ldw	r2,-604(fp)
  8285d0:	1885c83a 	sub	r2,r3,r2
  8285d4:	e0bf7715 	stw	r2,-548(fp)
  8285d8:	e0ff6b17 	ldw	r3,-596(fp)
  8285dc:	e0bf7117 	ldw	r2,-572(fp)
  8285e0:	1885883a 	add	r2,r3,r2
  8285e4:	e0bf7815 	stw	r2,-544(fp)
  8285e8:	e0ff6b17 	ldw	r3,-596(fp)
  8285ec:	e0bf7117 	ldw	r2,-572(fp)
  8285f0:	1885c83a 	sub	r2,r3,r2
  8285f4:	e0bf7915 	stw	r2,-540(fp)
  8285f8:	e0bf6317 	ldw	r2,-628(fp)
  8285fc:	10800104 	addi	r2,r2,4
  828600:	10800017 	ldw	r2,0(r2)
  828604:	e0bf6715 	stw	r2,-612(fp)
  828608:	e0bf6317 	ldw	r2,-628(fp)
  82860c:	10800304 	addi	r2,r2,12
  828610:	10800017 	ldw	r2,0(r2)
  828614:	e0bf6e15 	stw	r2,-584(fp)
  828618:	e0bf6317 	ldw	r2,-628(fp)
  82861c:	10800504 	addi	r2,r2,20
  828620:	10800017 	ldw	r2,0(r2)
  828624:	e0bf6f15 	stw	r2,-580(fp)
  828628:	e0bf6317 	ldw	r2,-628(fp)
  82862c:	10800704 	addi	r2,r2,28
  828630:	10800017 	ldw	r2,0(r2)
  828634:	e0bf7015 	stw	r2,-576(fp)
  828638:	e0ff6717 	ldw	r3,-612(fp)
  82863c:	e0bf6f17 	ldw	r2,-580(fp)
  828640:	1885883a 	add	r2,r3,r2
  828644:	e0bf6b15 	stw	r2,-596(fp)
  828648:	e0ff6717 	ldw	r3,-612(fp)
  82864c:	e0bf6e17 	ldw	r2,-584(fp)
  828650:	1885883a 	add	r2,r3,r2
  828654:	014ad384 	movi	r5,11086
  828658:	1009883a 	mov	r4,r2
  82865c:	08301e80 	call	8301e8 <__mulsi3>
  828660:	e0bf6815 	stw	r2,-608(fp)
  828664:	0149fa44 	movi	r5,10217
  828668:	e13f6b17 	ldw	r4,-596(fp)
  82866c:	08301e80 	call	8301e8 <__mulsi3>
  828670:	e0bf6915 	stw	r2,-604(fp)
  828674:	e0ff6717 	ldw	r3,-612(fp)
  828678:	e0bf7017 	ldw	r2,-576(fp)
  82867c:	1885883a 	add	r2,r3,r2
  828680:	0148bf04 	movi	r5,8956
  828684:	1009883a 	mov	r4,r2
  828688:	08301e80 	call	8301e8 <__mulsi3>
  82868c:	e0bf7115 	stw	r2,-572(fp)
  828690:	e0ff6717 	ldw	r3,-612(fp)
  828694:	e0bf7017 	ldw	r2,-576(fp)
  828698:	1885c83a 	sub	r2,r3,r2
  82869c:	01472d84 	movi	r5,7350
  8286a0:	1009883a 	mov	r4,r2
  8286a4:	08301e80 	call	8301e8 <__mulsi3>
  8286a8:	e0bf6a15 	stw	r2,-600(fp)
  8286ac:	01455544 	movi	r5,5461
  8286b0:	e13f6b17 	ldw	r4,-596(fp)
  8286b4:	08301e80 	call	8301e8 <__mulsi3>
  8286b8:	e0bf6b15 	stw	r2,-596(fp)
  8286bc:	e0ff6717 	ldw	r3,-612(fp)
  8286c0:	e0bf6e17 	ldw	r2,-584(fp)
  8286c4:	1885c83a 	sub	r2,r3,r2
  8286c8:	014348c4 	movi	r5,3363
  8286cc:	1009883a 	mov	r4,r2
  8286d0:	08301e80 	call	8301e8 <__mulsi3>
  8286d4:	e0bf6c15 	stw	r2,-592(fp)
  8286d8:	e0ff6817 	ldw	r3,-608(fp)
  8286dc:	e0bf6917 	ldw	r2,-604(fp)
  8286e0:	1887883a 	add	r3,r3,r2
  8286e4:	e0bf7117 	ldw	r2,-572(fp)
  8286e8:	18a1883a 	add	r16,r3,r2
  8286ec:	016db584 	movi	r5,-18730
  8286f0:	e13f6717 	ldw	r4,-612(fp)
  8286f4:	08301e80 	call	8301e8 <__mulsi3>
  8286f8:	8085883a 	add	r2,r16,r2
  8286fc:	e0bf6615 	stw	r2,-616(fp)
  828700:	e0ff6a17 	ldw	r3,-600(fp)
  828704:	e0bf6b17 	ldw	r2,-596(fp)
  828708:	1887883a 	add	r3,r3,r2
  82870c:	e0bf6c17 	ldw	r2,-592(fp)
  828710:	18a1883a 	add	r16,r3,r2
  828714:	01715084 	movi	r5,-15038
  828718:	e13f6717 	ldw	r4,-612(fp)
  82871c:	08301e80 	call	8301e8 <__mulsi3>
  828720:	8085883a 	add	r2,r16,r2
  828724:	e0bf6d15 	stw	r2,-588(fp)
  828728:	e0ff6e17 	ldw	r3,-584(fp)
  82872c:	e0bf6f17 	ldw	r2,-580(fp)
  828730:	1885883a 	add	r2,r3,r2
  828734:	01411c04 	movi	r5,1136
  828738:	1009883a 	mov	r4,r2
  82873c:	08301e80 	call	8301e8 <__mulsi3>
  828740:	e0bf6715 	stw	r2,-612(fp)
  828744:	01409344 	movi	r5,589
  828748:	e13f6e17 	ldw	r4,-584(fp)
  82874c:	08301e80 	call	8301e8 <__mulsi3>
  828750:	1007883a 	mov	r3,r2
  828754:	e0bf6717 	ldw	r2,-612(fp)
  828758:	1885883a 	add	r2,r3,r2
  82875c:	e0ff6817 	ldw	r3,-608(fp)
  828760:	1885883a 	add	r2,r3,r2
  828764:	e0bf6815 	stw	r2,-608(fp)
  828768:	0176fe84 	movi	r5,-9222
  82876c:	e13f6f17 	ldw	r4,-580(fp)
  828770:	08301e80 	call	8301e8 <__mulsi3>
  828774:	1007883a 	mov	r3,r2
  828778:	e0bf6717 	ldw	r2,-612(fp)
  82877c:	1885883a 	add	r2,r3,r2
  828780:	e0ff6917 	ldw	r3,-604(fp)
  828784:	1885883a 	add	r2,r3,r2
  828788:	e0bf6915 	stw	r2,-604(fp)
  82878c:	e0ff6f17 	ldw	r3,-580(fp)
  828790:	e0bf6e17 	ldw	r2,-584(fp)
  828794:	1885c83a 	sub	r2,r3,r2
  828798:	014b4244 	movi	r5,11529
  82879c:	1009883a 	mov	r4,r2
  8287a0:	08301e80 	call	8301e8 <__mulsi3>
  8287a4:	e0bf6715 	stw	r2,-612(fp)
  8287a8:	0179de84 	movi	r5,-6278
  8287ac:	e13f6f17 	ldw	r4,-580(fp)
  8287b0:	08301e80 	call	8301e8 <__mulsi3>
  8287b4:	1007883a 	mov	r3,r2
  8287b8:	e0bf6717 	ldw	r2,-612(fp)
  8287bc:	1885883a 	add	r2,r3,r2
  8287c0:	e0ff6b17 	ldw	r3,-596(fp)
  8287c4:	1885883a 	add	r2,r3,r2
  8287c8:	e0bf6b15 	stw	r2,-596(fp)
  8287cc:	014fc684 	movi	r5,16154
  8287d0:	e13f6e17 	ldw	r4,-584(fp)
  8287d4:	08301e80 	call	8301e8 <__mulsi3>
  8287d8:	1007883a 	mov	r3,r2
  8287dc:	e0bf6717 	ldw	r2,-612(fp)
  8287e0:	1885883a 	add	r2,r3,r2
  8287e4:	e0ff6c17 	ldw	r3,-592(fp)
  8287e8:	1885883a 	add	r2,r3,r2
  8287ec:	e0bf6c15 	stw	r2,-592(fp)
  8287f0:	e0ff6e17 	ldw	r3,-584(fp)
  8287f4:	e0bf7017 	ldw	r2,-576(fp)
  8287f8:	1885883a 	add	r2,r3,r2
  8287fc:	e0bf6e15 	stw	r2,-584(fp)
  828800:	017aaac4 	movi	r5,-5461
  828804:	e13f6e17 	ldw	r4,-584(fp)
  828808:	08301e80 	call	8301e8 <__mulsi3>
  82880c:	e0bf6715 	stw	r2,-612(fp)
  828810:	e0ff6817 	ldw	r3,-608(fp)
  828814:	e0bf6717 	ldw	r2,-612(fp)
  828818:	1885883a 	add	r2,r3,r2
  82881c:	e0bf6815 	stw	r2,-608(fp)
  828820:	01488604 	movi	r5,8728
  828824:	e13f7017 	ldw	r4,-576(fp)
  828828:	08301e80 	call	8301e8 <__mulsi3>
  82882c:	1007883a 	mov	r3,r2
  828830:	e0bf6717 	ldw	r2,-612(fp)
  828834:	1885883a 	add	r2,r3,r2
  828838:	e0ff7117 	ldw	r3,-572(fp)
  82883c:	1885883a 	add	r2,r3,r2
  828840:	e0bf7115 	stw	r2,-572(fp)
  828844:	017605c4 	movi	r5,-10217
  828848:	e13f6e17 	ldw	r4,-584(fp)
  82884c:	08301e80 	call	8301e8 <__mulsi3>
  828850:	e0bf6e15 	stw	r2,-584(fp)
  828854:	01592144 	movi	r5,25733
  828858:	e13f7017 	ldw	r4,-576(fp)
  82885c:	08301e80 	call	8301e8 <__mulsi3>
  828860:	1007883a 	mov	r3,r2
  828864:	e0bf6e17 	ldw	r2,-584(fp)
  828868:	1885883a 	add	r2,r3,r2
  82886c:	e0ff6a17 	ldw	r3,-600(fp)
  828870:	1885883a 	add	r2,r3,r2
  828874:	e0bf6a15 	stw	r2,-600(fp)
  828878:	e0ff6c17 	ldw	r3,-592(fp)
  82887c:	e0bf6e17 	ldw	r2,-584(fp)
  828880:	1885883a 	add	r2,r3,r2
  828884:	e0bf6c15 	stw	r2,-592(fp)
  828888:	e0ff6f17 	ldw	r3,-580(fp)
  82888c:	e0bf7017 	ldw	r2,-576(fp)
  828890:	1885883a 	add	r2,r3,r2
  828894:	01752c84 	movi	r5,-11086
  828898:	1009883a 	mov	r4,r2
  82889c:	08301e80 	call	8301e8 <__mulsi3>
  8288a0:	e0bf6e15 	stw	r2,-584(fp)
  8288a4:	e0ff6917 	ldw	r3,-604(fp)
  8288a8:	e0bf6e17 	ldw	r2,-584(fp)
  8288ac:	1885883a 	add	r2,r3,r2
  8288b0:	e0bf6915 	stw	r2,-604(fp)
  8288b4:	e0ff7117 	ldw	r3,-572(fp)
  8288b8:	e0bf6e17 	ldw	r2,-584(fp)
  8288bc:	1885883a 	add	r2,r3,r2
  8288c0:	e0bf7115 	stw	r2,-572(fp)
  8288c4:	e0ff7017 	ldw	r3,-576(fp)
  8288c8:	e0bf6f17 	ldw	r2,-580(fp)
  8288cc:	1885c83a 	sub	r2,r3,r2
  8288d0:	014348c4 	movi	r5,3363
  8288d4:	1009883a 	mov	r4,r2
  8288d8:	08301e80 	call	8301e8 <__mulsi3>
  8288dc:	e0bf6e15 	stw	r2,-584(fp)
  8288e0:	e0ff6a17 	ldw	r3,-600(fp)
  8288e4:	e0bf6e17 	ldw	r2,-584(fp)
  8288e8:	1885883a 	add	r2,r3,r2
  8288ec:	e0bf6a15 	stw	r2,-600(fp)
  8288f0:	e0ff6b17 	ldw	r3,-596(fp)
  8288f4:	e0bf6e17 	ldw	r2,-584(fp)
  8288f8:	1885883a 	add	r2,r3,r2
  8288fc:	e0bf6b15 	stw	r2,-596(fp)
  828900:	e0ff7217 	ldw	r3,-568(fp)
  828904:	e0bf6617 	ldw	r2,-616(fp)
  828908:	1885883a 	add	r2,r3,r2
  82890c:	1005d4ba 	srai	r2,r2,18
  828910:	1080ffcc 	andi	r2,r2,1023
  828914:	e0ff6517 	ldw	r3,-620(fp)
  828918:	1885883a 	add	r2,r3,r2
  82891c:	10c00003 	ldbu	r3,0(r2)
  828920:	e0bf7a17 	ldw	r2,-536(fp)
  828924:	10c00005 	stb	r3,0(r2)
  828928:	e0bf7a17 	ldw	r2,-536(fp)
  82892c:	108003c4 	addi	r2,r2,15
  828930:	e13f7217 	ldw	r4,-568(fp)
  828934:	e0ff6617 	ldw	r3,-616(fp)
  828938:	20c7c83a 	sub	r3,r4,r3
  82893c:	1807d4ba 	srai	r3,r3,18
  828940:	18c0ffcc 	andi	r3,r3,1023
  828944:	e13f6517 	ldw	r4,-620(fp)
  828948:	20c7883a 	add	r3,r4,r3
  82894c:	18c00003 	ldbu	r3,0(r3)
  828950:	10c00005 	stb	r3,0(r2)
  828954:	e0bf7a17 	ldw	r2,-536(fp)
  828958:	10800044 	addi	r2,r2,1
  82895c:	e13f7417 	ldw	r4,-560(fp)
  828960:	e0ff6817 	ldw	r3,-608(fp)
  828964:	20c7883a 	add	r3,r4,r3
  828968:	1807d4ba 	srai	r3,r3,18
  82896c:	18c0ffcc 	andi	r3,r3,1023
  828970:	e13f6517 	ldw	r4,-620(fp)
  828974:	20c7883a 	add	r3,r4,r3
  828978:	18c00003 	ldbu	r3,0(r3)
  82897c:	10c00005 	stb	r3,0(r2)
  828980:	e0bf7a17 	ldw	r2,-536(fp)
  828984:	10800384 	addi	r2,r2,14
  828988:	e13f7417 	ldw	r4,-560(fp)
  82898c:	e0ff6817 	ldw	r3,-608(fp)
  828990:	20c7c83a 	sub	r3,r4,r3
  828994:	1807d4ba 	srai	r3,r3,18
  828998:	18c0ffcc 	andi	r3,r3,1023
  82899c:	e13f6517 	ldw	r4,-620(fp)
  8289a0:	20c7883a 	add	r3,r4,r3
  8289a4:	18c00003 	ldbu	r3,0(r3)
  8289a8:	10c00005 	stb	r3,0(r2)
  8289ac:	e0bf7a17 	ldw	r2,-536(fp)
  8289b0:	10800084 	addi	r2,r2,2
  8289b4:	e13f7617 	ldw	r4,-552(fp)
  8289b8:	e0ff6917 	ldw	r3,-604(fp)
  8289bc:	20c7883a 	add	r3,r4,r3
  8289c0:	1807d4ba 	srai	r3,r3,18
  8289c4:	18c0ffcc 	andi	r3,r3,1023
  8289c8:	e13f6517 	ldw	r4,-620(fp)
  8289cc:	20c7883a 	add	r3,r4,r3
  8289d0:	18c00003 	ldbu	r3,0(r3)
  8289d4:	10c00005 	stb	r3,0(r2)
  8289d8:	e0bf7a17 	ldw	r2,-536(fp)
  8289dc:	10800344 	addi	r2,r2,13
  8289e0:	e13f7617 	ldw	r4,-552(fp)
  8289e4:	e0ff6917 	ldw	r3,-604(fp)
  8289e8:	20c7c83a 	sub	r3,r4,r3
  8289ec:	1807d4ba 	srai	r3,r3,18
  8289f0:	18c0ffcc 	andi	r3,r3,1023
  8289f4:	e13f6517 	ldw	r4,-620(fp)
  8289f8:	20c7883a 	add	r3,r4,r3
  8289fc:	18c00003 	ldbu	r3,0(r3)
  828a00:	10c00005 	stb	r3,0(r2)
  828a04:	e0bf7a17 	ldw	r2,-536(fp)
  828a08:	108000c4 	addi	r2,r2,3
  828a0c:	e13f7817 	ldw	r4,-544(fp)
  828a10:	e0ff7117 	ldw	r3,-572(fp)
  828a14:	20c7883a 	add	r3,r4,r3
  828a18:	1807d4ba 	srai	r3,r3,18
  828a1c:	18c0ffcc 	andi	r3,r3,1023
  828a20:	e13f6517 	ldw	r4,-620(fp)
  828a24:	20c7883a 	add	r3,r4,r3
  828a28:	18c00003 	ldbu	r3,0(r3)
  828a2c:	10c00005 	stb	r3,0(r2)
  828a30:	e0bf7a17 	ldw	r2,-536(fp)
  828a34:	10800304 	addi	r2,r2,12
  828a38:	e13f7817 	ldw	r4,-544(fp)
  828a3c:	e0ff7117 	ldw	r3,-572(fp)
  828a40:	20c7c83a 	sub	r3,r4,r3
  828a44:	1807d4ba 	srai	r3,r3,18
  828a48:	18c0ffcc 	andi	r3,r3,1023
  828a4c:	e13f6517 	ldw	r4,-620(fp)
  828a50:	20c7883a 	add	r3,r4,r3
  828a54:	18c00003 	ldbu	r3,0(r3)
  828a58:	10c00005 	stb	r3,0(r2)
  828a5c:	e0bf7a17 	ldw	r2,-536(fp)
  828a60:	10800104 	addi	r2,r2,4
  828a64:	e13f7917 	ldw	r4,-540(fp)
  828a68:	e0ff6a17 	ldw	r3,-600(fp)
  828a6c:	20c7883a 	add	r3,r4,r3
  828a70:	1807d4ba 	srai	r3,r3,18
  828a74:	18c0ffcc 	andi	r3,r3,1023
  828a78:	e13f6517 	ldw	r4,-620(fp)
  828a7c:	20c7883a 	add	r3,r4,r3
  828a80:	18c00003 	ldbu	r3,0(r3)
  828a84:	10c00005 	stb	r3,0(r2)
  828a88:	e0bf7a17 	ldw	r2,-536(fp)
  828a8c:	108002c4 	addi	r2,r2,11
  828a90:	e13f7917 	ldw	r4,-540(fp)
  828a94:	e0ff6a17 	ldw	r3,-600(fp)
  828a98:	20c7c83a 	sub	r3,r4,r3
  828a9c:	1807d4ba 	srai	r3,r3,18
  828aa0:	18c0ffcc 	andi	r3,r3,1023
  828aa4:	e13f6517 	ldw	r4,-620(fp)
  828aa8:	20c7883a 	add	r3,r4,r3
  828aac:	18c00003 	ldbu	r3,0(r3)
  828ab0:	10c00005 	stb	r3,0(r2)
  828ab4:	e0bf7a17 	ldw	r2,-536(fp)
  828ab8:	10800144 	addi	r2,r2,5
  828abc:	e13f7717 	ldw	r4,-548(fp)
  828ac0:	e0ff6b17 	ldw	r3,-596(fp)
  828ac4:	20c7883a 	add	r3,r4,r3
  828ac8:	1807d4ba 	srai	r3,r3,18
  828acc:	18c0ffcc 	andi	r3,r3,1023
  828ad0:	e13f6517 	ldw	r4,-620(fp)
  828ad4:	20c7883a 	add	r3,r4,r3
  828ad8:	18c00003 	ldbu	r3,0(r3)
  828adc:	10c00005 	stb	r3,0(r2)
  828ae0:	e0bf7a17 	ldw	r2,-536(fp)
  828ae4:	10800284 	addi	r2,r2,10
  828ae8:	e13f7717 	ldw	r4,-548(fp)
  828aec:	e0ff6b17 	ldw	r3,-596(fp)
  828af0:	20c7c83a 	sub	r3,r4,r3
  828af4:	1807d4ba 	srai	r3,r3,18
  828af8:	18c0ffcc 	andi	r3,r3,1023
  828afc:	e13f6517 	ldw	r4,-620(fp)
  828b00:	20c7883a 	add	r3,r4,r3
  828b04:	18c00003 	ldbu	r3,0(r3)
  828b08:	10c00005 	stb	r3,0(r2)
  828b0c:	e0bf7a17 	ldw	r2,-536(fp)
  828b10:	10800184 	addi	r2,r2,6
  828b14:	e13f7517 	ldw	r4,-556(fp)
  828b18:	e0ff6c17 	ldw	r3,-592(fp)
  828b1c:	20c7883a 	add	r3,r4,r3
  828b20:	1807d4ba 	srai	r3,r3,18
  828b24:	18c0ffcc 	andi	r3,r3,1023
  828b28:	e13f6517 	ldw	r4,-620(fp)
  828b2c:	20c7883a 	add	r3,r4,r3
  828b30:	18c00003 	ldbu	r3,0(r3)
  828b34:	10c00005 	stb	r3,0(r2)
  828b38:	e0bf7a17 	ldw	r2,-536(fp)
  828b3c:	10800244 	addi	r2,r2,9
  828b40:	e13f7517 	ldw	r4,-556(fp)
  828b44:	e0ff6c17 	ldw	r3,-592(fp)
  828b48:	20c7c83a 	sub	r3,r4,r3
  828b4c:	1807d4ba 	srai	r3,r3,18
  828b50:	18c0ffcc 	andi	r3,r3,1023
  828b54:	e13f6517 	ldw	r4,-620(fp)
  828b58:	20c7883a 	add	r3,r4,r3
  828b5c:	18c00003 	ldbu	r3,0(r3)
  828b60:	10c00005 	stb	r3,0(r2)
  828b64:	e0bf7a17 	ldw	r2,-536(fp)
  828b68:	108001c4 	addi	r2,r2,7
  828b6c:	e13f7317 	ldw	r4,-564(fp)
  828b70:	e0ff6d17 	ldw	r3,-588(fp)
  828b74:	20c7883a 	add	r3,r4,r3
  828b78:	1807d4ba 	srai	r3,r3,18
  828b7c:	18c0ffcc 	andi	r3,r3,1023
  828b80:	e13f6517 	ldw	r4,-620(fp)
  828b84:	20c7883a 	add	r3,r4,r3
  828b88:	18c00003 	ldbu	r3,0(r3)
  828b8c:	10c00005 	stb	r3,0(r2)
  828b90:	e0bf7a17 	ldw	r2,-536(fp)
  828b94:	10800204 	addi	r2,r2,8
  828b98:	e13f7317 	ldw	r4,-564(fp)
  828b9c:	e0ff6d17 	ldw	r3,-588(fp)
  828ba0:	20c7c83a 	sub	r3,r4,r3
  828ba4:	1807d4ba 	srai	r3,r3,18
  828ba8:	18c0ffcc 	andi	r3,r3,1023
  828bac:	e13f6517 	ldw	r4,-620(fp)
  828bb0:	20c7883a 	add	r3,r4,r3
  828bb4:	18c00003 	ldbu	r3,0(r3)
  828bb8:	10c00005 	stb	r3,0(r2)
  828bbc:	e0bf6317 	ldw	r2,-628(fp)
  828bc0:	10800804 	addi	r2,r2,32
  828bc4:	e0bf6315 	stw	r2,-628(fp)
  828bc8:	e0bf6417 	ldw	r2,-624(fp)
  828bcc:	10800044 	addi	r2,r2,1
  828bd0:	e0bf6415 	stw	r2,-624(fp)
  828bd4:	e0bf6417 	ldw	r2,-624(fp)
  828bd8:	10800410 	cmplti	r2,r2,16
  828bdc:	103e091e 	bne	r2,zero,828404 <__alt_mem_epcs_flash_controller_0+0xff81f404>
  828be0:	0001883a 	nop
  828be4:	e6ffff04 	addi	sp,fp,-4
  828be8:	dfc00217 	ldw	ra,8(sp)
  828bec:	df000117 	ldw	fp,4(sp)
  828bf0:	dc000017 	ldw	r16,0(sp)
  828bf4:	dec00304 	addi	sp,sp,12
  828bf8:	f800283a 	ret

00828bfc <jpeg_idct_16x8>:
  828bfc:	deff9e04 	addi	sp,sp,-392
  828c00:	dfc06115 	stw	ra,388(sp)
  828c04:	df006015 	stw	fp,384(sp)
  828c08:	dc005f15 	stw	r16,380(sp)
  828c0c:	df006004 	addi	fp,sp,384
  828c10:	e13ffb15 	stw	r4,-20(fp)
  828c14:	e17ffc15 	stw	r5,-16(fp)
  828c18:	e1bffd15 	stw	r6,-12(fp)
  828c1c:	e1fffe15 	stw	r7,-8(fp)
  828c20:	e0bffb17 	ldw	r2,-20(fp)
  828c24:	10805417 	ldw	r2,336(r2)
  828c28:	10bfa004 	addi	r2,r2,-384
  828c2c:	e0bfa415 	stw	r2,-368(fp)
  828c30:	e0bffd17 	ldw	r2,-12(fp)
  828c34:	e0bfa015 	stw	r2,-384(fp)
  828c38:	e0bffc17 	ldw	r2,-16(fp)
  828c3c:	10801517 	ldw	r2,84(r2)
  828c40:	e0bfa115 	stw	r2,-380(fp)
  828c44:	e0bfbb04 	addi	r2,fp,-276
  828c48:	e0bfa215 	stw	r2,-376(fp)
  828c4c:	00800204 	movi	r2,8
  828c50:	e0bfa315 	stw	r2,-372(fp)
  828c54:	00019b06 	br	8292c4 <jpeg_idct_16x8+0x6c8>
  828c58:	e0bfa017 	ldw	r2,-384(fp)
  828c5c:	10800404 	addi	r2,r2,16
  828c60:	1080000b 	ldhu	r2,0(r2)
  828c64:	10bfffcc 	andi	r2,r2,65535
  828c68:	10a0001c 	xori	r2,r2,32768
  828c6c:	10a00004 	addi	r2,r2,-32768
  828c70:	1000601e 	bne	r2,zero,828df4 <jpeg_idct_16x8+0x1f8>
  828c74:	e0bfa017 	ldw	r2,-384(fp)
  828c78:	10800804 	addi	r2,r2,32
  828c7c:	1080000b 	ldhu	r2,0(r2)
  828c80:	10bfffcc 	andi	r2,r2,65535
  828c84:	10a0001c 	xori	r2,r2,32768
  828c88:	10a00004 	addi	r2,r2,-32768
  828c8c:	1000591e 	bne	r2,zero,828df4 <jpeg_idct_16x8+0x1f8>
  828c90:	e0bfa017 	ldw	r2,-384(fp)
  828c94:	10800c04 	addi	r2,r2,48
  828c98:	1080000b 	ldhu	r2,0(r2)
  828c9c:	10bfffcc 	andi	r2,r2,65535
  828ca0:	10a0001c 	xori	r2,r2,32768
  828ca4:	10a00004 	addi	r2,r2,-32768
  828ca8:	1000521e 	bne	r2,zero,828df4 <jpeg_idct_16x8+0x1f8>
  828cac:	e0bfa017 	ldw	r2,-384(fp)
  828cb0:	10801004 	addi	r2,r2,64
  828cb4:	1080000b 	ldhu	r2,0(r2)
  828cb8:	10bfffcc 	andi	r2,r2,65535
  828cbc:	10a0001c 	xori	r2,r2,32768
  828cc0:	10a00004 	addi	r2,r2,-32768
  828cc4:	10004b1e 	bne	r2,zero,828df4 <jpeg_idct_16x8+0x1f8>
  828cc8:	e0bfa017 	ldw	r2,-384(fp)
  828ccc:	10801404 	addi	r2,r2,80
  828cd0:	1080000b 	ldhu	r2,0(r2)
  828cd4:	10bfffcc 	andi	r2,r2,65535
  828cd8:	10a0001c 	xori	r2,r2,32768
  828cdc:	10a00004 	addi	r2,r2,-32768
  828ce0:	1000441e 	bne	r2,zero,828df4 <jpeg_idct_16x8+0x1f8>
  828ce4:	e0bfa017 	ldw	r2,-384(fp)
  828ce8:	10801804 	addi	r2,r2,96
  828cec:	1080000b 	ldhu	r2,0(r2)
  828cf0:	10bfffcc 	andi	r2,r2,65535
  828cf4:	10a0001c 	xori	r2,r2,32768
  828cf8:	10a00004 	addi	r2,r2,-32768
  828cfc:	10003d1e 	bne	r2,zero,828df4 <jpeg_idct_16x8+0x1f8>
  828d00:	e0bfa017 	ldw	r2,-384(fp)
  828d04:	10801c04 	addi	r2,r2,112
  828d08:	1080000b 	ldhu	r2,0(r2)
  828d0c:	10bfffcc 	andi	r2,r2,65535
  828d10:	10a0001c 	xori	r2,r2,32768
  828d14:	10a00004 	addi	r2,r2,-32768
  828d18:	1000361e 	bne	r2,zero,828df4 <jpeg_idct_16x8+0x1f8>
  828d1c:	e0bfa017 	ldw	r2,-384(fp)
  828d20:	1080000b 	ldhu	r2,0(r2)
  828d24:	10ffffcc 	andi	r3,r2,65535
  828d28:	18e0001c 	xori	r3,r3,32768
  828d2c:	18e00004 	addi	r3,r3,-32768
  828d30:	e0bfa117 	ldw	r2,-380(fp)
  828d34:	10800017 	ldw	r2,0(r2)
  828d38:	100b883a 	mov	r5,r2
  828d3c:	1809883a 	mov	r4,r3
  828d40:	08301e80 	call	8301e8 <__mulsi3>
  828d44:	1085883a 	add	r2,r2,r2
  828d48:	1085883a 	add	r2,r2,r2
  828d4c:	e0bfa515 	stw	r2,-364(fp)
  828d50:	e0bfa217 	ldw	r2,-376(fp)
  828d54:	e0ffa517 	ldw	r3,-364(fp)
  828d58:	10c00015 	stw	r3,0(r2)
  828d5c:	e0bfa217 	ldw	r2,-376(fp)
  828d60:	10800804 	addi	r2,r2,32
  828d64:	e0ffa517 	ldw	r3,-364(fp)
  828d68:	10c00015 	stw	r3,0(r2)
  828d6c:	e0bfa217 	ldw	r2,-376(fp)
  828d70:	10801004 	addi	r2,r2,64
  828d74:	e0ffa517 	ldw	r3,-364(fp)
  828d78:	10c00015 	stw	r3,0(r2)
  828d7c:	e0bfa217 	ldw	r2,-376(fp)
  828d80:	10801804 	addi	r2,r2,96
  828d84:	e0ffa517 	ldw	r3,-364(fp)
  828d88:	10c00015 	stw	r3,0(r2)
  828d8c:	e0bfa217 	ldw	r2,-376(fp)
  828d90:	10802004 	addi	r2,r2,128
  828d94:	e0ffa517 	ldw	r3,-364(fp)
  828d98:	10c00015 	stw	r3,0(r2)
  828d9c:	e0bfa217 	ldw	r2,-376(fp)
  828da0:	10802804 	addi	r2,r2,160
  828da4:	e0ffa517 	ldw	r3,-364(fp)
  828da8:	10c00015 	stw	r3,0(r2)
  828dac:	e0bfa217 	ldw	r2,-376(fp)
  828db0:	10803004 	addi	r2,r2,192
  828db4:	e0ffa517 	ldw	r3,-364(fp)
  828db8:	10c00015 	stw	r3,0(r2)
  828dbc:	e0bfa217 	ldw	r2,-376(fp)
  828dc0:	10803804 	addi	r2,r2,224
  828dc4:	e0ffa517 	ldw	r3,-364(fp)
  828dc8:	10c00015 	stw	r3,0(r2)
  828dcc:	e0bfa017 	ldw	r2,-384(fp)
  828dd0:	10800084 	addi	r2,r2,2
  828dd4:	e0bfa015 	stw	r2,-384(fp)
  828dd8:	e0bfa117 	ldw	r2,-380(fp)
  828ddc:	10800104 	addi	r2,r2,4
  828de0:	e0bfa115 	stw	r2,-380(fp)
  828de4:	e0bfa217 	ldw	r2,-376(fp)
  828de8:	10800104 	addi	r2,r2,4
  828dec:	e0bfa215 	stw	r2,-376(fp)
  828df0:	00013106 	br	8292b8 <jpeg_idct_16x8+0x6bc>
  828df4:	e0bfa017 	ldw	r2,-384(fp)
  828df8:	10800804 	addi	r2,r2,32
  828dfc:	1080000b 	ldhu	r2,0(r2)
  828e00:	10ffffcc 	andi	r3,r2,65535
  828e04:	18e0001c 	xori	r3,r3,32768
  828e08:	18e00004 	addi	r3,r3,-32768
  828e0c:	e0bfa117 	ldw	r2,-380(fp)
  828e10:	10801004 	addi	r2,r2,64
  828e14:	10800017 	ldw	r2,0(r2)
  828e18:	100b883a 	mov	r5,r2
  828e1c:	1809883a 	mov	r4,r3
  828e20:	08301e80 	call	8301e8 <__mulsi3>
  828e24:	e0bfa615 	stw	r2,-360(fp)
  828e28:	e0bfa017 	ldw	r2,-384(fp)
  828e2c:	10801804 	addi	r2,r2,96
  828e30:	1080000b 	ldhu	r2,0(r2)
  828e34:	10ffffcc 	andi	r3,r2,65535
  828e38:	18e0001c 	xori	r3,r3,32768
  828e3c:	18e00004 	addi	r3,r3,-32768
  828e40:	e0bfa117 	ldw	r2,-380(fp)
  828e44:	10803004 	addi	r2,r2,192
  828e48:	10800017 	ldw	r2,0(r2)
  828e4c:	100b883a 	mov	r5,r2
  828e50:	1809883a 	mov	r4,r3
  828e54:	08301e80 	call	8301e8 <__mulsi3>
  828e58:	e0bfa715 	stw	r2,-356(fp)
  828e5c:	e0ffa617 	ldw	r3,-360(fp)
  828e60:	e0bfa717 	ldw	r2,-356(fp)
  828e64:	1885883a 	add	r2,r3,r2
  828e68:	01445444 	movi	r5,4433
  828e6c:	1009883a 	mov	r4,r2
  828e70:	08301e80 	call	8301e8 <__mulsi3>
  828e74:	e0bfa815 	stw	r2,-352(fp)
  828e78:	01461f84 	movi	r5,6270
  828e7c:	e13fa617 	ldw	r4,-360(fp)
  828e80:	08301e80 	call	8301e8 <__mulsi3>
  828e84:	1007883a 	mov	r3,r2
  828e88:	e0bfa817 	ldw	r2,-352(fp)
  828e8c:	1885883a 	add	r2,r3,r2
  828e90:	e0bfa915 	stw	r2,-348(fp)
  828e94:	017137c4 	movi	r5,-15137
  828e98:	e13fa717 	ldw	r4,-356(fp)
  828e9c:	08301e80 	call	8301e8 <__mulsi3>
  828ea0:	1007883a 	mov	r3,r2
  828ea4:	e0bfa817 	ldw	r2,-352(fp)
  828ea8:	1885883a 	add	r2,r3,r2
  828eac:	e0bfaa15 	stw	r2,-344(fp)
  828eb0:	e0bfa017 	ldw	r2,-384(fp)
  828eb4:	1080000b 	ldhu	r2,0(r2)
  828eb8:	10ffffcc 	andi	r3,r2,65535
  828ebc:	18e0001c 	xori	r3,r3,32768
  828ec0:	18e00004 	addi	r3,r3,-32768
  828ec4:	e0bfa117 	ldw	r2,-380(fp)
  828ec8:	10800017 	ldw	r2,0(r2)
  828ecc:	100b883a 	mov	r5,r2
  828ed0:	1809883a 	mov	r4,r3
  828ed4:	08301e80 	call	8301e8 <__mulsi3>
  828ed8:	e0bfa615 	stw	r2,-360(fp)
  828edc:	e0bfa017 	ldw	r2,-384(fp)
  828ee0:	10801004 	addi	r2,r2,64
  828ee4:	1080000b 	ldhu	r2,0(r2)
  828ee8:	10ffffcc 	andi	r3,r2,65535
  828eec:	18e0001c 	xori	r3,r3,32768
  828ef0:	18e00004 	addi	r3,r3,-32768
  828ef4:	e0bfa117 	ldw	r2,-380(fp)
  828ef8:	10802004 	addi	r2,r2,128
  828efc:	10800017 	ldw	r2,0(r2)
  828f00:	100b883a 	mov	r5,r2
  828f04:	1809883a 	mov	r4,r3
  828f08:	08301e80 	call	8301e8 <__mulsi3>
  828f0c:	e0bfa715 	stw	r2,-356(fp)
  828f10:	e0bfa617 	ldw	r2,-360(fp)
  828f14:	1004937a 	slli	r2,r2,13
  828f18:	e0bfa615 	stw	r2,-360(fp)
  828f1c:	e0bfa717 	ldw	r2,-356(fp)
  828f20:	1004937a 	slli	r2,r2,13
  828f24:	e0bfa715 	stw	r2,-356(fp)
  828f28:	e0bfa617 	ldw	r2,-360(fp)
  828f2c:	10810004 	addi	r2,r2,1024
  828f30:	e0bfa615 	stw	r2,-360(fp)
  828f34:	e0ffa617 	ldw	r3,-360(fp)
  828f38:	e0bfa717 	ldw	r2,-356(fp)
  828f3c:	1885883a 	add	r2,r3,r2
  828f40:	e0bfab15 	stw	r2,-340(fp)
  828f44:	e0ffa617 	ldw	r3,-360(fp)
  828f48:	e0bfa717 	ldw	r2,-356(fp)
  828f4c:	1885c83a 	sub	r2,r3,r2
  828f50:	e0bfac15 	stw	r2,-336(fp)
  828f54:	e0ffab17 	ldw	r3,-340(fp)
  828f58:	e0bfa917 	ldw	r2,-348(fp)
  828f5c:	1885883a 	add	r2,r3,r2
  828f60:	e0bfad15 	stw	r2,-332(fp)
  828f64:	e0ffab17 	ldw	r3,-340(fp)
  828f68:	e0bfa917 	ldw	r2,-348(fp)
  828f6c:	1885c83a 	sub	r2,r3,r2
  828f70:	e0bfae15 	stw	r2,-328(fp)
  828f74:	e0ffac17 	ldw	r3,-336(fp)
  828f78:	e0bfaa17 	ldw	r2,-344(fp)
  828f7c:	1885883a 	add	r2,r3,r2
  828f80:	e0bfaf15 	stw	r2,-324(fp)
  828f84:	e0ffac17 	ldw	r3,-336(fp)
  828f88:	e0bfaa17 	ldw	r2,-344(fp)
  828f8c:	1885c83a 	sub	r2,r3,r2
  828f90:	e0bfb015 	stw	r2,-320(fp)
  828f94:	e0bfa017 	ldw	r2,-384(fp)
  828f98:	10801c04 	addi	r2,r2,112
  828f9c:	1080000b 	ldhu	r2,0(r2)
  828fa0:	10ffffcc 	andi	r3,r2,65535
  828fa4:	18e0001c 	xori	r3,r3,32768
  828fa8:	18e00004 	addi	r3,r3,-32768
  828fac:	e0bfa117 	ldw	r2,-380(fp)
  828fb0:	10803804 	addi	r2,r2,224
  828fb4:	10800017 	ldw	r2,0(r2)
  828fb8:	100b883a 	mov	r5,r2
  828fbc:	1809883a 	mov	r4,r3
  828fc0:	08301e80 	call	8301e8 <__mulsi3>
  828fc4:	e0bfab15 	stw	r2,-340(fp)
  828fc8:	e0bfa017 	ldw	r2,-384(fp)
  828fcc:	10801404 	addi	r2,r2,80
  828fd0:	1080000b 	ldhu	r2,0(r2)
  828fd4:	10ffffcc 	andi	r3,r2,65535
  828fd8:	18e0001c 	xori	r3,r3,32768
  828fdc:	18e00004 	addi	r3,r3,-32768
  828fe0:	e0bfa117 	ldw	r2,-380(fp)
  828fe4:	10802804 	addi	r2,r2,160
  828fe8:	10800017 	ldw	r2,0(r2)
  828fec:	100b883a 	mov	r5,r2
  828ff0:	1809883a 	mov	r4,r3
  828ff4:	08301e80 	call	8301e8 <__mulsi3>
  828ff8:	e0bfac15 	stw	r2,-336(fp)
  828ffc:	e0bfa017 	ldw	r2,-384(fp)
  829000:	10800c04 	addi	r2,r2,48
  829004:	1080000b 	ldhu	r2,0(r2)
  829008:	10ffffcc 	andi	r3,r2,65535
  82900c:	18e0001c 	xori	r3,r3,32768
  829010:	18e00004 	addi	r3,r3,-32768
  829014:	e0bfa117 	ldw	r2,-380(fp)
  829018:	10801804 	addi	r2,r2,96
  82901c:	10800017 	ldw	r2,0(r2)
  829020:	100b883a 	mov	r5,r2
  829024:	1809883a 	mov	r4,r3
  829028:	08301e80 	call	8301e8 <__mulsi3>
  82902c:	e0bfa915 	stw	r2,-348(fp)
  829030:	e0bfa017 	ldw	r2,-384(fp)
  829034:	10800404 	addi	r2,r2,16
  829038:	1080000b 	ldhu	r2,0(r2)
  82903c:	10ffffcc 	andi	r3,r2,65535
  829040:	18e0001c 	xori	r3,r3,32768
  829044:	18e00004 	addi	r3,r3,-32768
  829048:	e0bfa117 	ldw	r2,-380(fp)
  82904c:	10800804 	addi	r2,r2,32
  829050:	10800017 	ldw	r2,0(r2)
  829054:	100b883a 	mov	r5,r2
  829058:	1809883a 	mov	r4,r3
  82905c:	08301e80 	call	8301e8 <__mulsi3>
  829060:	e0bfaa15 	stw	r2,-344(fp)
  829064:	e0ffab17 	ldw	r3,-340(fp)
  829068:	e0bfa917 	ldw	r2,-348(fp)
  82906c:	1885883a 	add	r2,r3,r2
  829070:	e0bfa615 	stw	r2,-360(fp)
  829074:	e0ffac17 	ldw	r3,-336(fp)
  829078:	e0bfaa17 	ldw	r2,-344(fp)
  82907c:	1885883a 	add	r2,r3,r2
  829080:	e0bfa715 	stw	r2,-356(fp)
  829084:	e0ffa617 	ldw	r3,-360(fp)
  829088:	e0bfa717 	ldw	r2,-356(fp)
  82908c:	1885883a 	add	r2,r3,r2
  829090:	01496844 	movi	r5,9633
  829094:	1009883a 	mov	r4,r2
  829098:	08301e80 	call	8301e8 <__mulsi3>
  82909c:	e0bfa815 	stw	r2,-352(fp)
  8290a0:	01704ec4 	movi	r5,-16069
  8290a4:	e13fa617 	ldw	r4,-360(fp)
  8290a8:	08301e80 	call	8301e8 <__mulsi3>
  8290ac:	e0bfa615 	stw	r2,-360(fp)
  8290b0:	017ce104 	movi	r5,-3196
  8290b4:	e13fa717 	ldw	r4,-356(fp)
  8290b8:	08301e80 	call	8301e8 <__mulsi3>
  8290bc:	e0bfa715 	stw	r2,-356(fp)
  8290c0:	e0ffa617 	ldw	r3,-360(fp)
  8290c4:	e0bfa817 	ldw	r2,-352(fp)
  8290c8:	1885883a 	add	r2,r3,r2
  8290cc:	e0bfa615 	stw	r2,-360(fp)
  8290d0:	e0ffa717 	ldw	r3,-356(fp)
  8290d4:	e0bfa817 	ldw	r2,-352(fp)
  8290d8:	1885883a 	add	r2,r3,r2
  8290dc:	e0bfa715 	stw	r2,-356(fp)
  8290e0:	e0ffab17 	ldw	r3,-340(fp)
  8290e4:	e0bfaa17 	ldw	r2,-344(fp)
  8290e8:	1885883a 	add	r2,r3,r2
  8290ec:	0178ccc4 	movi	r5,-7373
  8290f0:	1009883a 	mov	r4,r2
  8290f4:	08301e80 	call	8301e8 <__mulsi3>
  8290f8:	e0bfa815 	stw	r2,-352(fp)
  8290fc:	01426384 	movi	r5,2446
  829100:	e13fab17 	ldw	r4,-340(fp)
  829104:	08301e80 	call	8301e8 <__mulsi3>
  829108:	e0bfab15 	stw	r2,-340(fp)
  82910c:	014c02c4 	movi	r5,12299
  829110:	e13faa17 	ldw	r4,-344(fp)
  829114:	08301e80 	call	8301e8 <__mulsi3>
  829118:	e0bfaa15 	stw	r2,-344(fp)
  82911c:	e0ffa817 	ldw	r3,-352(fp)
  829120:	e0bfa617 	ldw	r2,-360(fp)
  829124:	1885883a 	add	r2,r3,r2
  829128:	e0ffab17 	ldw	r3,-340(fp)
  82912c:	1885883a 	add	r2,r3,r2
  829130:	e0bfab15 	stw	r2,-340(fp)
  829134:	e0ffa817 	ldw	r3,-352(fp)
  829138:	e0bfa717 	ldw	r2,-356(fp)
  82913c:	1885883a 	add	r2,r3,r2
  829140:	e0ffaa17 	ldw	r3,-344(fp)
  829144:	1885883a 	add	r2,r3,r2
  829148:	e0bfaa15 	stw	r2,-344(fp)
  82914c:	e0ffac17 	ldw	r3,-336(fp)
  829150:	e0bfa917 	ldw	r2,-348(fp)
  829154:	1885883a 	add	r2,r3,r2
  829158:	016b7f44 	movi	r5,-20995
  82915c:	1009883a 	mov	r4,r2
  829160:	08301e80 	call	8301e8 <__mulsi3>
  829164:	e0bfa815 	stw	r2,-352(fp)
  829168:	01506cc4 	movi	r5,16819
  82916c:	e13fac17 	ldw	r4,-336(fp)
  829170:	08301e80 	call	8301e8 <__mulsi3>
  829174:	e0bfac15 	stw	r2,-336(fp)
  829178:	01589504 	movi	r5,25172
  82917c:	e13fa917 	ldw	r4,-348(fp)
  829180:	08301e80 	call	8301e8 <__mulsi3>
  829184:	e0bfa915 	stw	r2,-348(fp)
  829188:	e0ffa817 	ldw	r3,-352(fp)
  82918c:	e0bfa717 	ldw	r2,-356(fp)
  829190:	1885883a 	add	r2,r3,r2
  829194:	e0ffac17 	ldw	r3,-336(fp)
  829198:	1885883a 	add	r2,r3,r2
  82919c:	e0bfac15 	stw	r2,-336(fp)
  8291a0:	e0ffa817 	ldw	r3,-352(fp)
  8291a4:	e0bfa617 	ldw	r2,-360(fp)
  8291a8:	1885883a 	add	r2,r3,r2
  8291ac:	e0ffa917 	ldw	r3,-348(fp)
  8291b0:	1885883a 	add	r2,r3,r2
  8291b4:	e0bfa915 	stw	r2,-348(fp)
  8291b8:	e0ffad17 	ldw	r3,-332(fp)
  8291bc:	e0bfaa17 	ldw	r2,-344(fp)
  8291c0:	1885883a 	add	r2,r3,r2
  8291c4:	1007d2fa 	srai	r3,r2,11
  8291c8:	e0bfa217 	ldw	r2,-376(fp)
  8291cc:	10c00015 	stw	r3,0(r2)
  8291d0:	e0bfa217 	ldw	r2,-376(fp)
  8291d4:	10803804 	addi	r2,r2,224
  8291d8:	e13fad17 	ldw	r4,-332(fp)
  8291dc:	e0ffaa17 	ldw	r3,-344(fp)
  8291e0:	20c7c83a 	sub	r3,r4,r3
  8291e4:	1807d2fa 	srai	r3,r3,11
  8291e8:	10c00015 	stw	r3,0(r2)
  8291ec:	e0bfa217 	ldw	r2,-376(fp)
  8291f0:	10800804 	addi	r2,r2,32
  8291f4:	e13faf17 	ldw	r4,-324(fp)
  8291f8:	e0ffa917 	ldw	r3,-348(fp)
  8291fc:	20c7883a 	add	r3,r4,r3
  829200:	1807d2fa 	srai	r3,r3,11
  829204:	10c00015 	stw	r3,0(r2)
  829208:	e0bfa217 	ldw	r2,-376(fp)
  82920c:	10803004 	addi	r2,r2,192
  829210:	e13faf17 	ldw	r4,-324(fp)
  829214:	e0ffa917 	ldw	r3,-348(fp)
  829218:	20c7c83a 	sub	r3,r4,r3
  82921c:	1807d2fa 	srai	r3,r3,11
  829220:	10c00015 	stw	r3,0(r2)
  829224:	e0bfa217 	ldw	r2,-376(fp)
  829228:	10801004 	addi	r2,r2,64
  82922c:	e13fb017 	ldw	r4,-320(fp)
  829230:	e0ffac17 	ldw	r3,-336(fp)
  829234:	20c7883a 	add	r3,r4,r3
  829238:	1807d2fa 	srai	r3,r3,11
  82923c:	10c00015 	stw	r3,0(r2)
  829240:	e0bfa217 	ldw	r2,-376(fp)
  829244:	10802804 	addi	r2,r2,160
  829248:	e13fb017 	ldw	r4,-320(fp)
  82924c:	e0ffac17 	ldw	r3,-336(fp)
  829250:	20c7c83a 	sub	r3,r4,r3
  829254:	1807d2fa 	srai	r3,r3,11
  829258:	10c00015 	stw	r3,0(r2)
  82925c:	e0bfa217 	ldw	r2,-376(fp)
  829260:	10801804 	addi	r2,r2,96
  829264:	e13fae17 	ldw	r4,-328(fp)
  829268:	e0ffab17 	ldw	r3,-340(fp)
  82926c:	20c7883a 	add	r3,r4,r3
  829270:	1807d2fa 	srai	r3,r3,11
  829274:	10c00015 	stw	r3,0(r2)
  829278:	e0bfa217 	ldw	r2,-376(fp)
  82927c:	10802004 	addi	r2,r2,128
  829280:	e13fae17 	ldw	r4,-328(fp)
  829284:	e0ffab17 	ldw	r3,-340(fp)
  829288:	20c7c83a 	sub	r3,r4,r3
  82928c:	1807d2fa 	srai	r3,r3,11
  829290:	10c00015 	stw	r3,0(r2)
  829294:	e0bfa017 	ldw	r2,-384(fp)
  829298:	10800084 	addi	r2,r2,2
  82929c:	e0bfa015 	stw	r2,-384(fp)
  8292a0:	e0bfa117 	ldw	r2,-380(fp)
  8292a4:	10800104 	addi	r2,r2,4
  8292a8:	e0bfa115 	stw	r2,-380(fp)
  8292ac:	e0bfa217 	ldw	r2,-376(fp)
  8292b0:	10800104 	addi	r2,r2,4
  8292b4:	e0bfa215 	stw	r2,-376(fp)
  8292b8:	e0bfa317 	ldw	r2,-372(fp)
  8292bc:	10bfffc4 	addi	r2,r2,-1
  8292c0:	e0bfa315 	stw	r2,-372(fp)
  8292c4:	e0bfa317 	ldw	r2,-372(fp)
  8292c8:	00be6316 	blt	zero,r2,828c58 <__alt_mem_epcs_flash_controller_0+0xff81fc58>
  8292cc:	e0bfbb04 	addi	r2,fp,-276
  8292d0:	e0bfa215 	stw	r2,-376(fp)
  8292d4:	e03fa315 	stw	zero,-372(fp)
  8292d8:	0001f406 	br	829aac <jpeg_idct_16x8+0xeb0>
  8292dc:	e0bfa317 	ldw	r2,-372(fp)
  8292e0:	1085883a 	add	r2,r2,r2
  8292e4:	1085883a 	add	r2,r2,r2
  8292e8:	1007883a 	mov	r3,r2
  8292ec:	e0bffe17 	ldw	r2,-8(fp)
  8292f0:	10c5883a 	add	r2,r2,r3
  8292f4:	10c00017 	ldw	r3,0(r2)
  8292f8:	e0800217 	ldw	r2,8(fp)
  8292fc:	1885883a 	add	r2,r3,r2
  829300:	e0bfb115 	stw	r2,-316(fp)
  829304:	e0bfa217 	ldw	r2,-376(fp)
  829308:	10800017 	ldw	r2,0(r2)
  82930c:	10900404 	addi	r2,r2,16400
  829310:	e0bfab15 	stw	r2,-340(fp)
  829314:	e0bfab17 	ldw	r2,-340(fp)
  829318:	1004937a 	slli	r2,r2,13
  82931c:	e0bfab15 	stw	r2,-340(fp)
  829320:	e0bfa217 	ldw	r2,-376(fp)
  829324:	10800404 	addi	r2,r2,16
  829328:	10800017 	ldw	r2,0(r2)
  82932c:	e0bfa815 	stw	r2,-352(fp)
  829330:	014a73c4 	movi	r5,10703
  829334:	e13fa817 	ldw	r4,-352(fp)
  829338:	08301e80 	call	8301e8 <__mulsi3>
  82933c:	e0bfac15 	stw	r2,-336(fp)
  829340:	01445444 	movi	r5,4433
  829344:	e13fa817 	ldw	r4,-352(fp)
  829348:	08301e80 	call	8301e8 <__mulsi3>
  82934c:	e0bfa915 	stw	r2,-348(fp)
  829350:	e0ffab17 	ldw	r3,-340(fp)
  829354:	e0bfac17 	ldw	r2,-336(fp)
  829358:	1885883a 	add	r2,r3,r2
  82935c:	e0bfad15 	stw	r2,-332(fp)
  829360:	e0ffab17 	ldw	r3,-340(fp)
  829364:	e0bfac17 	ldw	r2,-336(fp)
  829368:	1885c83a 	sub	r2,r3,r2
  82936c:	e0bfaf15 	stw	r2,-324(fp)
  829370:	e0ffab17 	ldw	r3,-340(fp)
  829374:	e0bfa917 	ldw	r2,-348(fp)
  829378:	1885883a 	add	r2,r3,r2
  82937c:	e0bfb015 	stw	r2,-320(fp)
  829380:	e0ffab17 	ldw	r3,-340(fp)
  829384:	e0bfa917 	ldw	r2,-348(fp)
  829388:	1885c83a 	sub	r2,r3,r2
  82938c:	e0bfae15 	stw	r2,-328(fp)
  829390:	e0bfa217 	ldw	r2,-376(fp)
  829394:	10800204 	addi	r2,r2,8
  829398:	10800017 	ldw	r2,0(r2)
  82939c:	e0bfa815 	stw	r2,-352(fp)
  8293a0:	e0bfa217 	ldw	r2,-376(fp)
  8293a4:	10800604 	addi	r2,r2,24
  8293a8:	10800017 	ldw	r2,0(r2)
  8293ac:	e0bfa615 	stw	r2,-360(fp)
  8293b0:	e0ffa817 	ldw	r3,-352(fp)
  8293b4:	e0bfa617 	ldw	r2,-360(fp)
  8293b8:	1885c83a 	sub	r2,r3,r2
  8293bc:	e0bfa715 	stw	r2,-356(fp)
  8293c0:	01423504 	movi	r5,2260
  8293c4:	e13fa717 	ldw	r4,-356(fp)
  8293c8:	08301e80 	call	8301e8 <__mulsi3>
  8293cc:	e0bfb215 	stw	r2,-312(fp)
  8293d0:	014b18c4 	movi	r5,11363
  8293d4:	e13fa717 	ldw	r4,-356(fp)
  8293d8:	08301e80 	call	8301e8 <__mulsi3>
  8293dc:	e0bfa715 	stw	r2,-356(fp)
  8293e0:	015480c4 	movi	r5,20995
  8293e4:	e13fa617 	ldw	r4,-360(fp)
  8293e8:	08301e80 	call	8301e8 <__mulsi3>
  8293ec:	1007883a 	mov	r3,r2
  8293f0:	e0bfa717 	ldw	r2,-356(fp)
  8293f4:	1885883a 	add	r2,r3,r2
  8293f8:	e0bfab15 	stw	r2,-340(fp)
  8293fc:	01473344 	movi	r5,7373
  829400:	e13fa817 	ldw	r4,-352(fp)
  829404:	08301e80 	call	8301e8 <__mulsi3>
  829408:	1007883a 	mov	r3,r2
  82940c:	e0bfb217 	ldw	r2,-312(fp)
  829410:	1885883a 	add	r2,r3,r2
  829414:	e0bfac15 	stw	r2,-336(fp)
  829418:	017b3084 	movi	r5,-4926
  82941c:	e13fa817 	ldw	r4,-352(fp)
  829420:	08301e80 	call	8301e8 <__mulsi3>
  829424:	1007883a 	mov	r3,r2
  829428:	e0bfa717 	ldw	r2,-356(fp)
  82942c:	1885883a 	add	r2,r3,r2
  829430:	e0bfa915 	stw	r2,-348(fp)
  829434:	017bec04 	movi	r5,-4176
  829438:	e13fa617 	ldw	r4,-360(fp)
  82943c:	08301e80 	call	8301e8 <__mulsi3>
  829440:	1007883a 	mov	r3,r2
  829444:	e0bfb217 	ldw	r2,-312(fp)
  829448:	1885883a 	add	r2,r3,r2
  82944c:	e0bfaa15 	stw	r2,-344(fp)
  829450:	e0ffad17 	ldw	r3,-332(fp)
  829454:	e0bfab17 	ldw	r2,-340(fp)
  829458:	1885883a 	add	r2,r3,r2
  82945c:	e0bfb315 	stw	r2,-308(fp)
  829460:	e0ffad17 	ldw	r3,-332(fp)
  829464:	e0bfab17 	ldw	r2,-340(fp)
  829468:	1885c83a 	sub	r2,r3,r2
  82946c:	e0bfb415 	stw	r2,-304(fp)
  829470:	e0ffb017 	ldw	r3,-320(fp)
  829474:	e0bfac17 	ldw	r2,-336(fp)
  829478:	1885883a 	add	r2,r3,r2
  82947c:	e0bfb515 	stw	r2,-300(fp)
  829480:	e0ffb017 	ldw	r3,-320(fp)
  829484:	e0bfac17 	ldw	r2,-336(fp)
  829488:	1885c83a 	sub	r2,r3,r2
  82948c:	e0bfb615 	stw	r2,-296(fp)
  829490:	e0ffae17 	ldw	r3,-328(fp)
  829494:	e0bfa917 	ldw	r2,-348(fp)
  829498:	1885883a 	add	r2,r3,r2
  82949c:	e0bfb715 	stw	r2,-292(fp)
  8294a0:	e0ffae17 	ldw	r3,-328(fp)
  8294a4:	e0bfa917 	ldw	r2,-348(fp)
  8294a8:	1885c83a 	sub	r2,r3,r2
  8294ac:	e0bfb815 	stw	r2,-288(fp)
  8294b0:	e0ffaf17 	ldw	r3,-324(fp)
  8294b4:	e0bfaa17 	ldw	r2,-344(fp)
  8294b8:	1885883a 	add	r2,r3,r2
  8294bc:	e0bfb915 	stw	r2,-284(fp)
  8294c0:	e0ffaf17 	ldw	r3,-324(fp)
  8294c4:	e0bfaa17 	ldw	r2,-344(fp)
  8294c8:	1885c83a 	sub	r2,r3,r2
  8294cc:	e0bfba15 	stw	r2,-280(fp)
  8294d0:	e0bfa217 	ldw	r2,-376(fp)
  8294d4:	10800104 	addi	r2,r2,4
  8294d8:	10800017 	ldw	r2,0(r2)
  8294dc:	e0bfa815 	stw	r2,-352(fp)
  8294e0:	e0bfa217 	ldw	r2,-376(fp)
  8294e4:	10800304 	addi	r2,r2,12
  8294e8:	10800017 	ldw	r2,0(r2)
  8294ec:	e0bfa615 	stw	r2,-360(fp)
  8294f0:	e0bfa217 	ldw	r2,-376(fp)
  8294f4:	10800504 	addi	r2,r2,20
  8294f8:	10800017 	ldw	r2,0(r2)
  8294fc:	e0bfa715 	stw	r2,-356(fp)
  829500:	e0bfa217 	ldw	r2,-376(fp)
  829504:	10800704 	addi	r2,r2,28
  829508:	10800017 	ldw	r2,0(r2)
  82950c:	e0bfb215 	stw	r2,-312(fp)
  829510:	e0ffa817 	ldw	r3,-352(fp)
  829514:	e0bfa717 	ldw	r2,-356(fp)
  829518:	1885883a 	add	r2,r3,r2
  82951c:	e0bfaf15 	stw	r2,-324(fp)
  829520:	e0ffa817 	ldw	r3,-352(fp)
  829524:	e0bfa617 	ldw	r2,-360(fp)
  829528:	1885883a 	add	r2,r3,r2
  82952c:	014ad384 	movi	r5,11086
  829530:	1009883a 	mov	r4,r2
  829534:	08301e80 	call	8301e8 <__mulsi3>
  829538:	e0bfac15 	stw	r2,-336(fp)
  82953c:	0149fa44 	movi	r5,10217
  829540:	e13faf17 	ldw	r4,-324(fp)
  829544:	08301e80 	call	8301e8 <__mulsi3>
  829548:	e0bfa915 	stw	r2,-348(fp)
  82954c:	e0ffa817 	ldw	r3,-352(fp)
  829550:	e0bfb217 	ldw	r2,-312(fp)
  829554:	1885883a 	add	r2,r3,r2
  829558:	0148bf04 	movi	r5,8956
  82955c:	1009883a 	mov	r4,r2
  829560:	08301e80 	call	8301e8 <__mulsi3>
  829564:	e0bfaa15 	stw	r2,-344(fp)
  829568:	e0ffa817 	ldw	r3,-352(fp)
  82956c:	e0bfb217 	ldw	r2,-312(fp)
  829570:	1885c83a 	sub	r2,r3,r2
  829574:	01472d84 	movi	r5,7350
  829578:	1009883a 	mov	r4,r2
  82957c:	08301e80 	call	8301e8 <__mulsi3>
  829580:	e0bfad15 	stw	r2,-332(fp)
  829584:	01455544 	movi	r5,5461
  829588:	e13faf17 	ldw	r4,-324(fp)
  82958c:	08301e80 	call	8301e8 <__mulsi3>
  829590:	e0bfaf15 	stw	r2,-324(fp)
  829594:	e0ffa817 	ldw	r3,-352(fp)
  829598:	e0bfa617 	ldw	r2,-360(fp)
  82959c:	1885c83a 	sub	r2,r3,r2
  8295a0:	014348c4 	movi	r5,3363
  8295a4:	1009883a 	mov	r4,r2
  8295a8:	08301e80 	call	8301e8 <__mulsi3>
  8295ac:	e0bfb015 	stw	r2,-320(fp)
  8295b0:	e0ffac17 	ldw	r3,-336(fp)
  8295b4:	e0bfa917 	ldw	r2,-348(fp)
  8295b8:	1887883a 	add	r3,r3,r2
  8295bc:	e0bfaa17 	ldw	r2,-344(fp)
  8295c0:	18a1883a 	add	r16,r3,r2
  8295c4:	016db584 	movi	r5,-18730
  8295c8:	e13fa817 	ldw	r4,-352(fp)
  8295cc:	08301e80 	call	8301e8 <__mulsi3>
  8295d0:	8085883a 	add	r2,r16,r2
  8295d4:	e0bfab15 	stw	r2,-340(fp)
  8295d8:	e0ffad17 	ldw	r3,-332(fp)
  8295dc:	e0bfaf17 	ldw	r2,-324(fp)
  8295e0:	1887883a 	add	r3,r3,r2
  8295e4:	e0bfb017 	ldw	r2,-320(fp)
  8295e8:	18a1883a 	add	r16,r3,r2
  8295ec:	01715084 	movi	r5,-15038
  8295f0:	e13fa817 	ldw	r4,-352(fp)
  8295f4:	08301e80 	call	8301e8 <__mulsi3>
  8295f8:	8085883a 	add	r2,r16,r2
  8295fc:	e0bfae15 	stw	r2,-328(fp)
  829600:	e0ffa617 	ldw	r3,-360(fp)
  829604:	e0bfa717 	ldw	r2,-356(fp)
  829608:	1885883a 	add	r2,r3,r2
  82960c:	01411c04 	movi	r5,1136
  829610:	1009883a 	mov	r4,r2
  829614:	08301e80 	call	8301e8 <__mulsi3>
  829618:	e0bfa815 	stw	r2,-352(fp)
  82961c:	01409344 	movi	r5,589
  829620:	e13fa617 	ldw	r4,-360(fp)
  829624:	08301e80 	call	8301e8 <__mulsi3>
  829628:	1007883a 	mov	r3,r2
  82962c:	e0bfa817 	ldw	r2,-352(fp)
  829630:	1885883a 	add	r2,r3,r2
  829634:	e0ffac17 	ldw	r3,-336(fp)
  829638:	1885883a 	add	r2,r3,r2
  82963c:	e0bfac15 	stw	r2,-336(fp)
  829640:	0176fe84 	movi	r5,-9222
  829644:	e13fa717 	ldw	r4,-356(fp)
  829648:	08301e80 	call	8301e8 <__mulsi3>
  82964c:	1007883a 	mov	r3,r2
  829650:	e0bfa817 	ldw	r2,-352(fp)
  829654:	1885883a 	add	r2,r3,r2
  829658:	e0ffa917 	ldw	r3,-348(fp)
  82965c:	1885883a 	add	r2,r3,r2
  829660:	e0bfa915 	stw	r2,-348(fp)
  829664:	e0ffa717 	ldw	r3,-356(fp)
  829668:	e0bfa617 	ldw	r2,-360(fp)
  82966c:	1885c83a 	sub	r2,r3,r2
  829670:	014b4244 	movi	r5,11529
  829674:	1009883a 	mov	r4,r2
  829678:	08301e80 	call	8301e8 <__mulsi3>
  82967c:	e0bfa815 	stw	r2,-352(fp)
  829680:	0179de84 	movi	r5,-6278
  829684:	e13fa717 	ldw	r4,-356(fp)
  829688:	08301e80 	call	8301e8 <__mulsi3>
  82968c:	1007883a 	mov	r3,r2
  829690:	e0bfa817 	ldw	r2,-352(fp)
  829694:	1885883a 	add	r2,r3,r2
  829698:	e0ffaf17 	ldw	r3,-324(fp)
  82969c:	1885883a 	add	r2,r3,r2
  8296a0:	e0bfaf15 	stw	r2,-324(fp)
  8296a4:	014fc684 	movi	r5,16154
  8296a8:	e13fa617 	ldw	r4,-360(fp)
  8296ac:	08301e80 	call	8301e8 <__mulsi3>
  8296b0:	1007883a 	mov	r3,r2
  8296b4:	e0bfa817 	ldw	r2,-352(fp)
  8296b8:	1885883a 	add	r2,r3,r2
  8296bc:	e0ffb017 	ldw	r3,-320(fp)
  8296c0:	1885883a 	add	r2,r3,r2
  8296c4:	e0bfb015 	stw	r2,-320(fp)
  8296c8:	e0ffa617 	ldw	r3,-360(fp)
  8296cc:	e0bfb217 	ldw	r2,-312(fp)
  8296d0:	1885883a 	add	r2,r3,r2
  8296d4:	e0bfa615 	stw	r2,-360(fp)
  8296d8:	017aaac4 	movi	r5,-5461
  8296dc:	e13fa617 	ldw	r4,-360(fp)
  8296e0:	08301e80 	call	8301e8 <__mulsi3>
  8296e4:	e0bfa815 	stw	r2,-352(fp)
  8296e8:	e0ffac17 	ldw	r3,-336(fp)
  8296ec:	e0bfa817 	ldw	r2,-352(fp)
  8296f0:	1885883a 	add	r2,r3,r2
  8296f4:	e0bfac15 	stw	r2,-336(fp)
  8296f8:	01488604 	movi	r5,8728
  8296fc:	e13fb217 	ldw	r4,-312(fp)
  829700:	08301e80 	call	8301e8 <__mulsi3>
  829704:	1007883a 	mov	r3,r2
  829708:	e0bfa817 	ldw	r2,-352(fp)
  82970c:	1885883a 	add	r2,r3,r2
  829710:	e0ffaa17 	ldw	r3,-344(fp)
  829714:	1885883a 	add	r2,r3,r2
  829718:	e0bfaa15 	stw	r2,-344(fp)
  82971c:	017605c4 	movi	r5,-10217
  829720:	e13fa617 	ldw	r4,-360(fp)
  829724:	08301e80 	call	8301e8 <__mulsi3>
  829728:	e0bfa615 	stw	r2,-360(fp)
  82972c:	01592144 	movi	r5,25733
  829730:	e13fb217 	ldw	r4,-312(fp)
  829734:	08301e80 	call	8301e8 <__mulsi3>
  829738:	1007883a 	mov	r3,r2
  82973c:	e0bfa617 	ldw	r2,-360(fp)
  829740:	1885883a 	add	r2,r3,r2
  829744:	e0ffad17 	ldw	r3,-332(fp)
  829748:	1885883a 	add	r2,r3,r2
  82974c:	e0bfad15 	stw	r2,-332(fp)
  829750:	e0ffb017 	ldw	r3,-320(fp)
  829754:	e0bfa617 	ldw	r2,-360(fp)
  829758:	1885883a 	add	r2,r3,r2
  82975c:	e0bfb015 	stw	r2,-320(fp)
  829760:	e0ffa717 	ldw	r3,-356(fp)
  829764:	e0bfb217 	ldw	r2,-312(fp)
  829768:	1885883a 	add	r2,r3,r2
  82976c:	01752c84 	movi	r5,-11086
  829770:	1009883a 	mov	r4,r2
  829774:	08301e80 	call	8301e8 <__mulsi3>
  829778:	e0bfa615 	stw	r2,-360(fp)
  82977c:	e0ffa917 	ldw	r3,-348(fp)
  829780:	e0bfa617 	ldw	r2,-360(fp)
  829784:	1885883a 	add	r2,r3,r2
  829788:	e0bfa915 	stw	r2,-348(fp)
  82978c:	e0ffaa17 	ldw	r3,-344(fp)
  829790:	e0bfa617 	ldw	r2,-360(fp)
  829794:	1885883a 	add	r2,r3,r2
  829798:	e0bfaa15 	stw	r2,-344(fp)
  82979c:	e0ffb217 	ldw	r3,-312(fp)
  8297a0:	e0bfa717 	ldw	r2,-356(fp)
  8297a4:	1885c83a 	sub	r2,r3,r2
  8297a8:	014348c4 	movi	r5,3363
  8297ac:	1009883a 	mov	r4,r2
  8297b0:	08301e80 	call	8301e8 <__mulsi3>
  8297b4:	e0bfa615 	stw	r2,-360(fp)
  8297b8:	e0ffad17 	ldw	r3,-332(fp)
  8297bc:	e0bfa617 	ldw	r2,-360(fp)
  8297c0:	1885883a 	add	r2,r3,r2
  8297c4:	e0bfad15 	stw	r2,-332(fp)
  8297c8:	e0ffaf17 	ldw	r3,-324(fp)
  8297cc:	e0bfa617 	ldw	r2,-360(fp)
  8297d0:	1885883a 	add	r2,r3,r2
  8297d4:	e0bfaf15 	stw	r2,-324(fp)
  8297d8:	e0ffb317 	ldw	r3,-308(fp)
  8297dc:	e0bfab17 	ldw	r2,-340(fp)
  8297e0:	1885883a 	add	r2,r3,r2
  8297e4:	1005d4ba 	srai	r2,r2,18
  8297e8:	1080ffcc 	andi	r2,r2,1023
  8297ec:	e0ffa417 	ldw	r3,-368(fp)
  8297f0:	1885883a 	add	r2,r3,r2
  8297f4:	10c00003 	ldbu	r3,0(r2)
  8297f8:	e0bfb117 	ldw	r2,-316(fp)
  8297fc:	10c00005 	stb	r3,0(r2)
  829800:	e0bfb117 	ldw	r2,-316(fp)
  829804:	108003c4 	addi	r2,r2,15
  829808:	e13fb317 	ldw	r4,-308(fp)
  82980c:	e0ffab17 	ldw	r3,-340(fp)
  829810:	20c7c83a 	sub	r3,r4,r3
  829814:	1807d4ba 	srai	r3,r3,18
  829818:	18c0ffcc 	andi	r3,r3,1023
  82981c:	e13fa417 	ldw	r4,-368(fp)
  829820:	20c7883a 	add	r3,r4,r3
  829824:	18c00003 	ldbu	r3,0(r3)
  829828:	10c00005 	stb	r3,0(r2)
  82982c:	e0bfb117 	ldw	r2,-316(fp)
  829830:	10800044 	addi	r2,r2,1
  829834:	e13fb517 	ldw	r4,-300(fp)
  829838:	e0ffac17 	ldw	r3,-336(fp)
  82983c:	20c7883a 	add	r3,r4,r3
  829840:	1807d4ba 	srai	r3,r3,18
  829844:	18c0ffcc 	andi	r3,r3,1023
  829848:	e13fa417 	ldw	r4,-368(fp)
  82984c:	20c7883a 	add	r3,r4,r3
  829850:	18c00003 	ldbu	r3,0(r3)
  829854:	10c00005 	stb	r3,0(r2)
  829858:	e0bfb117 	ldw	r2,-316(fp)
  82985c:	10800384 	addi	r2,r2,14
  829860:	e13fb517 	ldw	r4,-300(fp)
  829864:	e0ffac17 	ldw	r3,-336(fp)
  829868:	20c7c83a 	sub	r3,r4,r3
  82986c:	1807d4ba 	srai	r3,r3,18
  829870:	18c0ffcc 	andi	r3,r3,1023
  829874:	e13fa417 	ldw	r4,-368(fp)
  829878:	20c7883a 	add	r3,r4,r3
  82987c:	18c00003 	ldbu	r3,0(r3)
  829880:	10c00005 	stb	r3,0(r2)
  829884:	e0bfb117 	ldw	r2,-316(fp)
  829888:	10800084 	addi	r2,r2,2
  82988c:	e13fb717 	ldw	r4,-292(fp)
  829890:	e0ffa917 	ldw	r3,-348(fp)
  829894:	20c7883a 	add	r3,r4,r3
  829898:	1807d4ba 	srai	r3,r3,18
  82989c:	18c0ffcc 	andi	r3,r3,1023
  8298a0:	e13fa417 	ldw	r4,-368(fp)
  8298a4:	20c7883a 	add	r3,r4,r3
  8298a8:	18c00003 	ldbu	r3,0(r3)
  8298ac:	10c00005 	stb	r3,0(r2)
  8298b0:	e0bfb117 	ldw	r2,-316(fp)
  8298b4:	10800344 	addi	r2,r2,13
  8298b8:	e13fb717 	ldw	r4,-292(fp)
  8298bc:	e0ffa917 	ldw	r3,-348(fp)
  8298c0:	20c7c83a 	sub	r3,r4,r3
  8298c4:	1807d4ba 	srai	r3,r3,18
  8298c8:	18c0ffcc 	andi	r3,r3,1023
  8298cc:	e13fa417 	ldw	r4,-368(fp)
  8298d0:	20c7883a 	add	r3,r4,r3
  8298d4:	18c00003 	ldbu	r3,0(r3)
  8298d8:	10c00005 	stb	r3,0(r2)
  8298dc:	e0bfb117 	ldw	r2,-316(fp)
  8298e0:	108000c4 	addi	r2,r2,3
  8298e4:	e13fb917 	ldw	r4,-284(fp)
  8298e8:	e0ffaa17 	ldw	r3,-344(fp)
  8298ec:	20c7883a 	add	r3,r4,r3
  8298f0:	1807d4ba 	srai	r3,r3,18
  8298f4:	18c0ffcc 	andi	r3,r3,1023
  8298f8:	e13fa417 	ldw	r4,-368(fp)
  8298fc:	20c7883a 	add	r3,r4,r3
  829900:	18c00003 	ldbu	r3,0(r3)
  829904:	10c00005 	stb	r3,0(r2)
  829908:	e0bfb117 	ldw	r2,-316(fp)
  82990c:	10800304 	addi	r2,r2,12
  829910:	e13fb917 	ldw	r4,-284(fp)
  829914:	e0ffaa17 	ldw	r3,-344(fp)
  829918:	20c7c83a 	sub	r3,r4,r3
  82991c:	1807d4ba 	srai	r3,r3,18
  829920:	18c0ffcc 	andi	r3,r3,1023
  829924:	e13fa417 	ldw	r4,-368(fp)
  829928:	20c7883a 	add	r3,r4,r3
  82992c:	18c00003 	ldbu	r3,0(r3)
  829930:	10c00005 	stb	r3,0(r2)
  829934:	e0bfb117 	ldw	r2,-316(fp)
  829938:	10800104 	addi	r2,r2,4
  82993c:	e13fba17 	ldw	r4,-280(fp)
  829940:	e0ffad17 	ldw	r3,-332(fp)
  829944:	20c7883a 	add	r3,r4,r3
  829948:	1807d4ba 	srai	r3,r3,18
  82994c:	18c0ffcc 	andi	r3,r3,1023
  829950:	e13fa417 	ldw	r4,-368(fp)
  829954:	20c7883a 	add	r3,r4,r3
  829958:	18c00003 	ldbu	r3,0(r3)
  82995c:	10c00005 	stb	r3,0(r2)
  829960:	e0bfb117 	ldw	r2,-316(fp)
  829964:	108002c4 	addi	r2,r2,11
  829968:	e13fba17 	ldw	r4,-280(fp)
  82996c:	e0ffad17 	ldw	r3,-332(fp)
  829970:	20c7c83a 	sub	r3,r4,r3
  829974:	1807d4ba 	srai	r3,r3,18
  829978:	18c0ffcc 	andi	r3,r3,1023
  82997c:	e13fa417 	ldw	r4,-368(fp)
  829980:	20c7883a 	add	r3,r4,r3
  829984:	18c00003 	ldbu	r3,0(r3)
  829988:	10c00005 	stb	r3,0(r2)
  82998c:	e0bfb117 	ldw	r2,-316(fp)
  829990:	10800144 	addi	r2,r2,5
  829994:	e13fb817 	ldw	r4,-288(fp)
  829998:	e0ffaf17 	ldw	r3,-324(fp)
  82999c:	20c7883a 	add	r3,r4,r3
  8299a0:	1807d4ba 	srai	r3,r3,18
  8299a4:	18c0ffcc 	andi	r3,r3,1023
  8299a8:	e13fa417 	ldw	r4,-368(fp)
  8299ac:	20c7883a 	add	r3,r4,r3
  8299b0:	18c00003 	ldbu	r3,0(r3)
  8299b4:	10c00005 	stb	r3,0(r2)
  8299b8:	e0bfb117 	ldw	r2,-316(fp)
  8299bc:	10800284 	addi	r2,r2,10
  8299c0:	e13fb817 	ldw	r4,-288(fp)
  8299c4:	e0ffaf17 	ldw	r3,-324(fp)
  8299c8:	20c7c83a 	sub	r3,r4,r3
  8299cc:	1807d4ba 	srai	r3,r3,18
  8299d0:	18c0ffcc 	andi	r3,r3,1023
  8299d4:	e13fa417 	ldw	r4,-368(fp)
  8299d8:	20c7883a 	add	r3,r4,r3
  8299dc:	18c00003 	ldbu	r3,0(r3)
  8299e0:	10c00005 	stb	r3,0(r2)
  8299e4:	e0bfb117 	ldw	r2,-316(fp)
  8299e8:	10800184 	addi	r2,r2,6
  8299ec:	e13fb617 	ldw	r4,-296(fp)
  8299f0:	e0ffb017 	ldw	r3,-320(fp)
  8299f4:	20c7883a 	add	r3,r4,r3
  8299f8:	1807d4ba 	srai	r3,r3,18
  8299fc:	18c0ffcc 	andi	r3,r3,1023
  829a00:	e13fa417 	ldw	r4,-368(fp)
  829a04:	20c7883a 	add	r3,r4,r3
  829a08:	18c00003 	ldbu	r3,0(r3)
  829a0c:	10c00005 	stb	r3,0(r2)
  829a10:	e0bfb117 	ldw	r2,-316(fp)
  829a14:	10800244 	addi	r2,r2,9
  829a18:	e13fb617 	ldw	r4,-296(fp)
  829a1c:	e0ffb017 	ldw	r3,-320(fp)
  829a20:	20c7c83a 	sub	r3,r4,r3
  829a24:	1807d4ba 	srai	r3,r3,18
  829a28:	18c0ffcc 	andi	r3,r3,1023
  829a2c:	e13fa417 	ldw	r4,-368(fp)
  829a30:	20c7883a 	add	r3,r4,r3
  829a34:	18c00003 	ldbu	r3,0(r3)
  829a38:	10c00005 	stb	r3,0(r2)
  829a3c:	e0bfb117 	ldw	r2,-316(fp)
  829a40:	108001c4 	addi	r2,r2,7
  829a44:	e13fb417 	ldw	r4,-304(fp)
  829a48:	e0ffae17 	ldw	r3,-328(fp)
  829a4c:	20c7883a 	add	r3,r4,r3
  829a50:	1807d4ba 	srai	r3,r3,18
  829a54:	18c0ffcc 	andi	r3,r3,1023
  829a58:	e13fa417 	ldw	r4,-368(fp)
  829a5c:	20c7883a 	add	r3,r4,r3
  829a60:	18c00003 	ldbu	r3,0(r3)
  829a64:	10c00005 	stb	r3,0(r2)
  829a68:	e0bfb117 	ldw	r2,-316(fp)
  829a6c:	10800204 	addi	r2,r2,8
  829a70:	e13fb417 	ldw	r4,-304(fp)
  829a74:	e0ffae17 	ldw	r3,-328(fp)
  829a78:	20c7c83a 	sub	r3,r4,r3
  829a7c:	1807d4ba 	srai	r3,r3,18
  829a80:	18c0ffcc 	andi	r3,r3,1023
  829a84:	e13fa417 	ldw	r4,-368(fp)
  829a88:	20c7883a 	add	r3,r4,r3
  829a8c:	18c00003 	ldbu	r3,0(r3)
  829a90:	10c00005 	stb	r3,0(r2)
  829a94:	e0bfa217 	ldw	r2,-376(fp)
  829a98:	10800804 	addi	r2,r2,32
  829a9c:	e0bfa215 	stw	r2,-376(fp)
  829aa0:	e0bfa317 	ldw	r2,-372(fp)
  829aa4:	10800044 	addi	r2,r2,1
  829aa8:	e0bfa315 	stw	r2,-372(fp)
  829aac:	e0bfa317 	ldw	r2,-372(fp)
  829ab0:	10800210 	cmplti	r2,r2,8
  829ab4:	103e091e 	bne	r2,zero,8292dc <__alt_mem_epcs_flash_controller_0+0xff8202dc>
  829ab8:	0001883a 	nop
  829abc:	e6ffff04 	addi	sp,fp,-4
  829ac0:	dfc00217 	ldw	ra,8(sp)
  829ac4:	df000117 	ldw	fp,4(sp)
  829ac8:	dc000017 	ldw	r16,0(sp)
  829acc:	dec00304 	addi	sp,sp,12
  829ad0:	f800283a 	ret

00829ad4 <jpeg_idct_14x7>:
  829ad4:	deffa904 	addi	sp,sp,-348
  829ad8:	dfc05615 	stw	ra,344(sp)
  829adc:	df005515 	stw	fp,340(sp)
  829ae0:	dc005415 	stw	r16,336(sp)
  829ae4:	df005504 	addi	fp,sp,340
  829ae8:	e13ffb15 	stw	r4,-20(fp)
  829aec:	e17ffc15 	stw	r5,-16(fp)
  829af0:	e1bffd15 	stw	r6,-12(fp)
  829af4:	e1fffe15 	stw	r7,-8(fp)
  829af8:	e0bffb17 	ldw	r2,-20(fp)
  829afc:	10805417 	ldw	r2,336(r2)
  829b00:	10bfa004 	addi	r2,r2,-384
  829b04:	e0bfaf15 	stw	r2,-324(fp)
  829b08:	e0bffd17 	ldw	r2,-12(fp)
  829b0c:	e0bfab15 	stw	r2,-340(fp)
  829b10:	e0bffc17 	ldw	r2,-16(fp)
  829b14:	10801517 	ldw	r2,84(r2)
  829b18:	e0bfac15 	stw	r2,-336(fp)
  829b1c:	e0bfc304 	addi	r2,fp,-244
  829b20:	e0bfad15 	stw	r2,-332(fp)
  829b24:	e03fae15 	stw	zero,-328(fp)
  829b28:	00010e06 	br	829f64 <jpeg_idct_14x7+0x490>
  829b2c:	e0bfab17 	ldw	r2,-340(fp)
  829b30:	1080000b 	ldhu	r2,0(r2)
  829b34:	10ffffcc 	andi	r3,r2,65535
  829b38:	18e0001c 	xori	r3,r3,32768
  829b3c:	18e00004 	addi	r3,r3,-32768
  829b40:	e0bfac17 	ldw	r2,-336(fp)
  829b44:	10800017 	ldw	r2,0(r2)
  829b48:	100b883a 	mov	r5,r2
  829b4c:	1809883a 	mov	r4,r3
  829b50:	08301e80 	call	8301e8 <__mulsi3>
  829b54:	e0bfb015 	stw	r2,-320(fp)
  829b58:	e0bfb017 	ldw	r2,-320(fp)
  829b5c:	1004937a 	slli	r2,r2,13
  829b60:	e0bfb015 	stw	r2,-320(fp)
  829b64:	e0bfb017 	ldw	r2,-320(fp)
  829b68:	10810004 	addi	r2,r2,1024
  829b6c:	e0bfb015 	stw	r2,-320(fp)
  829b70:	e0bfab17 	ldw	r2,-340(fp)
  829b74:	10800804 	addi	r2,r2,32
  829b78:	1080000b 	ldhu	r2,0(r2)
  829b7c:	10ffffcc 	andi	r3,r2,65535
  829b80:	18e0001c 	xori	r3,r3,32768
  829b84:	18e00004 	addi	r3,r3,-32768
  829b88:	e0bfac17 	ldw	r2,-336(fp)
  829b8c:	10801004 	addi	r2,r2,64
  829b90:	10800017 	ldw	r2,0(r2)
  829b94:	100b883a 	mov	r5,r2
  829b98:	1809883a 	mov	r4,r3
  829b9c:	08301e80 	call	8301e8 <__mulsi3>
  829ba0:	e0bfb115 	stw	r2,-316(fp)
  829ba4:	e0bfab17 	ldw	r2,-340(fp)
  829ba8:	10801004 	addi	r2,r2,64
  829bac:	1080000b 	ldhu	r2,0(r2)
  829bb0:	10ffffcc 	andi	r3,r2,65535
  829bb4:	18e0001c 	xori	r3,r3,32768
  829bb8:	18e00004 	addi	r3,r3,-32768
  829bbc:	e0bfac17 	ldw	r2,-336(fp)
  829bc0:	10802004 	addi	r2,r2,128
  829bc4:	10800017 	ldw	r2,0(r2)
  829bc8:	100b883a 	mov	r5,r2
  829bcc:	1809883a 	mov	r4,r3
  829bd0:	08301e80 	call	8301e8 <__mulsi3>
  829bd4:	e0bfb215 	stw	r2,-312(fp)
  829bd8:	e0bfab17 	ldw	r2,-340(fp)
  829bdc:	10801804 	addi	r2,r2,96
  829be0:	1080000b 	ldhu	r2,0(r2)
  829be4:	10ffffcc 	andi	r3,r2,65535
  829be8:	18e0001c 	xori	r3,r3,32768
  829bec:	18e00004 	addi	r3,r3,-32768
  829bf0:	e0bfac17 	ldw	r2,-336(fp)
  829bf4:	10803004 	addi	r2,r2,192
  829bf8:	10800017 	ldw	r2,0(r2)
  829bfc:	100b883a 	mov	r5,r2
  829c00:	1809883a 	mov	r4,r3
  829c04:	08301e80 	call	8301e8 <__mulsi3>
  829c08:	e0bfb315 	stw	r2,-308(fp)
  829c0c:	e0ffb217 	ldw	r3,-312(fp)
  829c10:	e0bfb317 	ldw	r2,-308(fp)
  829c14:	1885c83a 	sub	r2,r3,r2
  829c18:	01470dc4 	movi	r5,7223
  829c1c:	1009883a 	mov	r4,r2
  829c20:	08301e80 	call	8301e8 <__mulsi3>
  829c24:	e0bfb415 	stw	r2,-304(fp)
  829c28:	e0ffb117 	ldw	r3,-316(fp)
  829c2c:	e0bfb217 	ldw	r2,-312(fp)
  829c30:	1885c83a 	sub	r2,r3,r2
  829c34:	01428484 	movi	r5,2578
  829c38:	1009883a 	mov	r4,r2
  829c3c:	08301e80 	call	8301e8 <__mulsi3>
  829c40:	e0bfb515 	stw	r2,-300(fp)
  829c44:	e0ffb417 	ldw	r3,-304(fp)
  829c48:	e0bfb517 	ldw	r2,-300(fp)
  829c4c:	1887883a 	add	r3,r3,r2
  829c50:	e0bfb017 	ldw	r2,-320(fp)
  829c54:	18a1883a 	add	r16,r3,r2
  829c58:	01714544 	movi	r5,-15083
  829c5c:	e13fb217 	ldw	r4,-312(fp)
  829c60:	08301e80 	call	8301e8 <__mulsi3>
  829c64:	8085883a 	add	r2,r16,r2
  829c68:	e0bfb615 	stw	r2,-296(fp)
  829c6c:	e0ffb117 	ldw	r3,-316(fp)
  829c70:	e0bfb317 	ldw	r2,-308(fp)
  829c74:	1885883a 	add	r2,r3,r2
  829c78:	e0bfb715 	stw	r2,-292(fp)
  829c7c:	e0ffb217 	ldw	r3,-312(fp)
  829c80:	e0bfb717 	ldw	r2,-292(fp)
  829c84:	1885c83a 	sub	r2,r3,r2
  829c88:	e0bfb215 	stw	r2,-312(fp)
  829c8c:	014a3184 	movi	r5,10438
  829c90:	e13fb717 	ldw	r4,-292(fp)
  829c94:	08301e80 	call	8301e8 <__mulsi3>
  829c98:	1007883a 	mov	r3,r2
  829c9c:	e0bfb017 	ldw	r2,-320(fp)
  829ca0:	1885883a 	add	r2,r3,r2
  829ca4:	e0bfb715 	stw	r2,-292(fp)
  829ca8:	017f60c4 	movi	r5,-637
  829cac:	e13fb317 	ldw	r4,-308(fp)
  829cb0:	08301e80 	call	8301e8 <__mulsi3>
  829cb4:	1007883a 	mov	r3,r2
  829cb8:	e0bfb717 	ldw	r2,-292(fp)
  829cbc:	1885883a 	add	r2,r3,r2
  829cc0:	e0ffb417 	ldw	r3,-304(fp)
  829cc4:	1885883a 	add	r2,r3,r2
  829cc8:	e0bfb415 	stw	r2,-304(fp)
  829ccc:	016c3c44 	movi	r5,-20239
  829cd0:	e13fb117 	ldw	r4,-316(fp)
  829cd4:	08301e80 	call	8301e8 <__mulsi3>
  829cd8:	1007883a 	mov	r3,r2
  829cdc:	e0bfb717 	ldw	r2,-292(fp)
  829ce0:	1885883a 	add	r2,r3,r2
  829ce4:	e0ffb517 	ldw	r3,-300(fp)
  829ce8:	1885883a 	add	r2,r3,r2
  829cec:	e0bfb515 	stw	r2,-300(fp)
  829cf0:	014b5044 	movi	r5,11585
  829cf4:	e13fb217 	ldw	r4,-312(fp)
  829cf8:	08301e80 	call	8301e8 <__mulsi3>
  829cfc:	1007883a 	mov	r3,r2
  829d00:	e0bfb017 	ldw	r2,-320(fp)
  829d04:	10c5883a 	add	r2,r2,r3
  829d08:	e0bfb015 	stw	r2,-320(fp)
  829d0c:	e0bfab17 	ldw	r2,-340(fp)
  829d10:	10800404 	addi	r2,r2,16
  829d14:	1080000b 	ldhu	r2,0(r2)
  829d18:	10ffffcc 	andi	r3,r2,65535
  829d1c:	18e0001c 	xori	r3,r3,32768
  829d20:	18e00004 	addi	r3,r3,-32768
  829d24:	e0bfac17 	ldw	r2,-336(fp)
  829d28:	10800804 	addi	r2,r2,32
  829d2c:	10800017 	ldw	r2,0(r2)
  829d30:	100b883a 	mov	r5,r2
  829d34:	1809883a 	mov	r4,r3
  829d38:	08301e80 	call	8301e8 <__mulsi3>
  829d3c:	e0bfb115 	stw	r2,-316(fp)
  829d40:	e0bfab17 	ldw	r2,-340(fp)
  829d44:	10800c04 	addi	r2,r2,48
  829d48:	1080000b 	ldhu	r2,0(r2)
  829d4c:	10ffffcc 	andi	r3,r2,65535
  829d50:	18e0001c 	xori	r3,r3,32768
  829d54:	18e00004 	addi	r3,r3,-32768
  829d58:	e0bfac17 	ldw	r2,-336(fp)
  829d5c:	10801804 	addi	r2,r2,96
  829d60:	10800017 	ldw	r2,0(r2)
  829d64:	100b883a 	mov	r5,r2
  829d68:	1809883a 	mov	r4,r3
  829d6c:	08301e80 	call	8301e8 <__mulsi3>
  829d70:	e0bfb215 	stw	r2,-312(fp)
  829d74:	e0bfab17 	ldw	r2,-340(fp)
  829d78:	10801404 	addi	r2,r2,80
  829d7c:	1080000b 	ldhu	r2,0(r2)
  829d80:	10ffffcc 	andi	r3,r2,65535
  829d84:	18e0001c 	xori	r3,r3,32768
  829d88:	18e00004 	addi	r3,r3,-32768
  829d8c:	e0bfac17 	ldw	r2,-336(fp)
  829d90:	10802804 	addi	r2,r2,160
  829d94:	10800017 	ldw	r2,0(r2)
  829d98:	100b883a 	mov	r5,r2
  829d9c:	1809883a 	mov	r4,r3
  829da0:	08301e80 	call	8301e8 <__mulsi3>
  829da4:	e0bfb315 	stw	r2,-308(fp)
  829da8:	e0ffb117 	ldw	r3,-316(fp)
  829dac:	e0bfb217 	ldw	r2,-312(fp)
  829db0:	1885883a 	add	r2,r3,r2
  829db4:	01477bc4 	movi	r5,7663
  829db8:	1009883a 	mov	r4,r2
  829dbc:	08301e80 	call	8301e8 <__mulsi3>
  829dc0:	e0bfb815 	stw	r2,-288(fp)
  829dc4:	e0ffb117 	ldw	r3,-316(fp)
  829dc8:	e0bfb217 	ldw	r2,-312(fp)
  829dcc:	1885c83a 	sub	r2,r3,r2
  829dd0:	01415cc4 	movi	r5,1395
  829dd4:	1009883a 	mov	r4,r2
  829dd8:	08301e80 	call	8301e8 <__mulsi3>
  829ddc:	e0bfb915 	stw	r2,-284(fp)
  829de0:	e0ffb817 	ldw	r3,-288(fp)
  829de4:	e0bfb917 	ldw	r2,-284(fp)
  829de8:	1885c83a 	sub	r2,r3,r2
  829dec:	e0bfb715 	stw	r2,-292(fp)
  829df0:	e0ffb817 	ldw	r3,-288(fp)
  829df4:	e0bfb917 	ldw	r2,-284(fp)
  829df8:	1885883a 	add	r2,r3,r2
  829dfc:	e0bfb815 	stw	r2,-288(fp)
  829e00:	e0ffb217 	ldw	r3,-312(fp)
  829e04:	e0bfb317 	ldw	r2,-308(fp)
  829e08:	1885883a 	add	r2,r3,r2
  829e0c:	0174f844 	movi	r5,-11295
  829e10:	1009883a 	mov	r4,r2
  829e14:	08301e80 	call	8301e8 <__mulsi3>
  829e18:	e0bfb915 	stw	r2,-284(fp)
  829e1c:	e0ffb817 	ldw	r3,-288(fp)
  829e20:	e0bfb917 	ldw	r2,-284(fp)
  829e24:	1885883a 	add	r2,r3,r2
  829e28:	e0bfb815 	stw	r2,-288(fp)
  829e2c:	e0ffb117 	ldw	r3,-316(fp)
  829e30:	e0bfb317 	ldw	r2,-308(fp)
  829e34:	1885883a 	add	r2,r3,r2
  829e38:	0144e8c4 	movi	r5,5027
  829e3c:	1009883a 	mov	r4,r2
  829e40:	08301e80 	call	8301e8 <__mulsi3>
  829e44:	e0bfb215 	stw	r2,-312(fp)
  829e48:	e0ffb717 	ldw	r3,-292(fp)
  829e4c:	e0bfb217 	ldw	r2,-312(fp)
  829e50:	1885883a 	add	r2,r3,r2
  829e54:	e0bfb715 	stw	r2,-292(fp)
  829e58:	014ef784 	movi	r5,15326
  829e5c:	e13fb317 	ldw	r4,-308(fp)
  829e60:	08301e80 	call	8301e8 <__mulsi3>
  829e64:	1007883a 	mov	r3,r2
  829e68:	e0bfb217 	ldw	r2,-312(fp)
  829e6c:	1885883a 	add	r2,r3,r2
  829e70:	e0ffb917 	ldw	r3,-284(fp)
  829e74:	1885883a 	add	r2,r3,r2
  829e78:	e0bfb915 	stw	r2,-284(fp)
  829e7c:	e0ffb417 	ldw	r3,-304(fp)
  829e80:	e0bfb717 	ldw	r2,-292(fp)
  829e84:	1885883a 	add	r2,r3,r2
  829e88:	1007d2fa 	srai	r3,r2,11
  829e8c:	e0bfad17 	ldw	r2,-332(fp)
  829e90:	10c00015 	stw	r3,0(r2)
  829e94:	e0bfad17 	ldw	r2,-332(fp)
  829e98:	10803004 	addi	r2,r2,192
  829e9c:	e13fb417 	ldw	r4,-304(fp)
  829ea0:	e0ffb717 	ldw	r3,-292(fp)
  829ea4:	20c7c83a 	sub	r3,r4,r3
  829ea8:	1807d2fa 	srai	r3,r3,11
  829eac:	10c00015 	stw	r3,0(r2)
  829eb0:	e0bfad17 	ldw	r2,-332(fp)
  829eb4:	10800804 	addi	r2,r2,32
  829eb8:	e13fb617 	ldw	r4,-296(fp)
  829ebc:	e0ffb817 	ldw	r3,-288(fp)
  829ec0:	20c7883a 	add	r3,r4,r3
  829ec4:	1807d2fa 	srai	r3,r3,11
  829ec8:	10c00015 	stw	r3,0(r2)
  829ecc:	e0bfad17 	ldw	r2,-332(fp)
  829ed0:	10802804 	addi	r2,r2,160
  829ed4:	e13fb617 	ldw	r4,-296(fp)
  829ed8:	e0ffb817 	ldw	r3,-288(fp)
  829edc:	20c7c83a 	sub	r3,r4,r3
  829ee0:	1807d2fa 	srai	r3,r3,11
  829ee4:	10c00015 	stw	r3,0(r2)
  829ee8:	e0bfad17 	ldw	r2,-332(fp)
  829eec:	10801004 	addi	r2,r2,64
  829ef0:	e13fb517 	ldw	r4,-300(fp)
  829ef4:	e0ffb917 	ldw	r3,-284(fp)
  829ef8:	20c7883a 	add	r3,r4,r3
  829efc:	1807d2fa 	srai	r3,r3,11
  829f00:	10c00015 	stw	r3,0(r2)
  829f04:	e0bfad17 	ldw	r2,-332(fp)
  829f08:	10802004 	addi	r2,r2,128
  829f0c:	e13fb517 	ldw	r4,-300(fp)
  829f10:	e0ffb917 	ldw	r3,-284(fp)
  829f14:	20c7c83a 	sub	r3,r4,r3
  829f18:	1807d2fa 	srai	r3,r3,11
  829f1c:	10c00015 	stw	r3,0(r2)
  829f20:	e0bfad17 	ldw	r2,-332(fp)
  829f24:	10801804 	addi	r2,r2,96
  829f28:	e0ffb017 	ldw	r3,-320(fp)
  829f2c:	1807d2fa 	srai	r3,r3,11
  829f30:	10c00015 	stw	r3,0(r2)
  829f34:	e0bfae17 	ldw	r2,-328(fp)
  829f38:	10800044 	addi	r2,r2,1
  829f3c:	e0bfae15 	stw	r2,-328(fp)
  829f40:	e0bfab17 	ldw	r2,-340(fp)
  829f44:	10800084 	addi	r2,r2,2
  829f48:	e0bfab15 	stw	r2,-340(fp)
  829f4c:	e0bfac17 	ldw	r2,-336(fp)
  829f50:	10800104 	addi	r2,r2,4
  829f54:	e0bfac15 	stw	r2,-336(fp)
  829f58:	e0bfad17 	ldw	r2,-332(fp)
  829f5c:	10800104 	addi	r2,r2,4
  829f60:	e0bfad15 	stw	r2,-332(fp)
  829f64:	e0bfae17 	ldw	r2,-328(fp)
  829f68:	10800210 	cmplti	r2,r2,8
  829f6c:	103eef1e 	bne	r2,zero,829b2c <__alt_mem_epcs_flash_controller_0+0xff820b2c>
  829f70:	e0bfc304 	addi	r2,fp,-244
  829f74:	e0bfad15 	stw	r2,-332(fp)
  829f78:	e03fae15 	stw	zero,-328(fp)
  829f7c:	00019706 	br	82a5dc <jpeg_idct_14x7+0xb08>
  829f80:	e0bfae17 	ldw	r2,-328(fp)
  829f84:	1085883a 	add	r2,r2,r2
  829f88:	1085883a 	add	r2,r2,r2
  829f8c:	1007883a 	mov	r3,r2
  829f90:	e0bffe17 	ldw	r2,-8(fp)
  829f94:	10c5883a 	add	r2,r2,r3
  829f98:	10c00017 	ldw	r3,0(r2)
  829f9c:	e0800217 	ldw	r2,8(fp)
  829fa0:	1885883a 	add	r2,r3,r2
  829fa4:	e0bfba15 	stw	r2,-280(fp)
  829fa8:	e0bfad17 	ldw	r2,-332(fp)
  829fac:	10800017 	ldw	r2,0(r2)
  829fb0:	10900404 	addi	r2,r2,16400
  829fb4:	e0bfb115 	stw	r2,-316(fp)
  829fb8:	e0bfb117 	ldw	r2,-316(fp)
  829fbc:	1004937a 	slli	r2,r2,13
  829fc0:	e0bfb115 	stw	r2,-316(fp)
  829fc4:	e0bfad17 	ldw	r2,-332(fp)
  829fc8:	10800404 	addi	r2,r2,16
  829fcc:	10800017 	ldw	r2,0(r2)
  829fd0:	e0bfbb15 	stw	r2,-276(fp)
  829fd4:	014a3184 	movi	r5,10438
  829fd8:	e13fbb17 	ldw	r4,-276(fp)
  829fdc:	08301e80 	call	8301e8 <__mulsi3>
  829fe0:	e0bfb215 	stw	r2,-312(fp)
  829fe4:	01428484 	movi	r5,2578
  829fe8:	e13fbb17 	ldw	r4,-276(fp)
  829fec:	08301e80 	call	8301e8 <__mulsi3>
  829ff0:	e0bfb315 	stw	r2,-308(fp)
  829ff4:	01470dc4 	movi	r5,7223
  829ff8:	e13fbb17 	ldw	r4,-276(fp)
  829ffc:	08301e80 	call	8301e8 <__mulsi3>
  82a000:	e0bfbb15 	stw	r2,-276(fp)
  82a004:	e0ffb117 	ldw	r3,-316(fp)
  82a008:	e0bfb217 	ldw	r2,-312(fp)
  82a00c:	1885883a 	add	r2,r3,r2
  82a010:	e0bfb715 	stw	r2,-292(fp)
  82a014:	e0ffb117 	ldw	r3,-316(fp)
  82a018:	e0bfb317 	ldw	r2,-308(fp)
  82a01c:	1885883a 	add	r2,r3,r2
  82a020:	e0bfb815 	stw	r2,-288(fp)
  82a024:	e0ffb117 	ldw	r3,-316(fp)
  82a028:	e0bfbb17 	ldw	r2,-276(fp)
  82a02c:	1885c83a 	sub	r2,r3,r2
  82a030:	e0bfb915 	stw	r2,-284(fp)
  82a034:	e0ffb217 	ldw	r3,-312(fp)
  82a038:	e0bfb317 	ldw	r2,-308(fp)
  82a03c:	1887883a 	add	r3,r3,r2
  82a040:	e0bfbb17 	ldw	r2,-276(fp)
  82a044:	1885c83a 	sub	r2,r3,r2
  82a048:	1085883a 	add	r2,r2,r2
  82a04c:	1007883a 	mov	r3,r2
  82a050:	e0bfb117 	ldw	r2,-316(fp)
  82a054:	10c5c83a 	sub	r2,r2,r3
  82a058:	e0bfb015 	stw	r2,-320(fp)
  82a05c:	e0bfad17 	ldw	r2,-332(fp)
  82a060:	10800204 	addi	r2,r2,8
  82a064:	10800017 	ldw	r2,0(r2)
  82a068:	e0bfb115 	stw	r2,-316(fp)
  82a06c:	e0bfad17 	ldw	r2,-332(fp)
  82a070:	10800604 	addi	r2,r2,24
  82a074:	10800017 	ldw	r2,0(r2)
  82a078:	e0bfb215 	stw	r2,-312(fp)
  82a07c:	e0ffb117 	ldw	r3,-316(fp)
  82a080:	e0bfb217 	ldw	r2,-312(fp)
  82a084:	1885883a 	add	r2,r3,r2
  82a088:	0148d884 	movi	r5,9058
  82a08c:	1009883a 	mov	r4,r2
  82a090:	08301e80 	call	8301e8 <__mulsi3>
  82a094:	e0bfb315 	stw	r2,-308(fp)
  82a098:	01422f44 	movi	r5,2237
  82a09c:	e13fb117 	ldw	r4,-316(fp)
  82a0a0:	08301e80 	call	8301e8 <__mulsi3>
  82a0a4:	1007883a 	mov	r3,r2
  82a0a8:	e0bfb317 	ldw	r2,-308(fp)
  82a0ac:	1885883a 	add	r2,r3,r2
  82a0b0:	e0bfbc15 	stw	r2,-272(fp)
  82a0b4:	01723f04 	movi	r5,-14084
  82a0b8:	e13fb217 	ldw	r4,-312(fp)
  82a0bc:	08301e80 	call	8301e8 <__mulsi3>
  82a0c0:	1007883a 	mov	r3,r2
  82a0c4:	e0bfb317 	ldw	r2,-308(fp)
  82a0c8:	1885883a 	add	r2,r3,r2
  82a0cc:	e0bfbd15 	stw	r2,-268(fp)
  82a0d0:	0144e8c4 	movi	r5,5027
  82a0d4:	e13fb117 	ldw	r4,-316(fp)
  82a0d8:	08301e80 	call	8301e8 <__mulsi3>
  82a0dc:	1021883a 	mov	r16,r2
  82a0e0:	0174f844 	movi	r5,-11295
  82a0e4:	e13fb217 	ldw	r4,-312(fp)
  82a0e8:	08301e80 	call	8301e8 <__mulsi3>
  82a0ec:	8085883a 	add	r2,r16,r2
  82a0f0:	e0bfbe15 	stw	r2,-264(fp)
  82a0f4:	e0ffb717 	ldw	r3,-292(fp)
  82a0f8:	e0bfbc17 	ldw	r2,-272(fp)
  82a0fc:	1885883a 	add	r2,r3,r2
  82a100:	e0bfb415 	stw	r2,-304(fp)
  82a104:	e0ffb717 	ldw	r3,-292(fp)
  82a108:	e0bfbc17 	ldw	r2,-272(fp)
  82a10c:	1885c83a 	sub	r2,r3,r2
  82a110:	e0bfbf15 	stw	r2,-260(fp)
  82a114:	e0ffb817 	ldw	r3,-288(fp)
  82a118:	e0bfbd17 	ldw	r2,-268(fp)
  82a11c:	1885883a 	add	r2,r3,r2
  82a120:	e0bfb615 	stw	r2,-296(fp)
  82a124:	e0ffb817 	ldw	r3,-288(fp)
  82a128:	e0bfbd17 	ldw	r2,-268(fp)
  82a12c:	1885c83a 	sub	r2,r3,r2
  82a130:	e0bfc015 	stw	r2,-256(fp)
  82a134:	e0ffb917 	ldw	r3,-284(fp)
  82a138:	e0bfbe17 	ldw	r2,-264(fp)
  82a13c:	1885883a 	add	r2,r3,r2
  82a140:	e0bfb515 	stw	r2,-300(fp)
  82a144:	e0ffb917 	ldw	r3,-284(fp)
  82a148:	e0bfbe17 	ldw	r2,-264(fp)
  82a14c:	1885c83a 	sub	r2,r3,r2
  82a150:	e0bfc115 	stw	r2,-252(fp)
  82a154:	e0bfad17 	ldw	r2,-332(fp)
  82a158:	10800104 	addi	r2,r2,4
  82a15c:	10800017 	ldw	r2,0(r2)
  82a160:	e0bfb115 	stw	r2,-316(fp)
  82a164:	e0bfad17 	ldw	r2,-332(fp)
  82a168:	10800304 	addi	r2,r2,12
  82a16c:	10800017 	ldw	r2,0(r2)
  82a170:	e0bfb215 	stw	r2,-312(fp)
  82a174:	e0bfad17 	ldw	r2,-332(fp)
  82a178:	10800504 	addi	r2,r2,20
  82a17c:	10800017 	ldw	r2,0(r2)
  82a180:	e0bfb315 	stw	r2,-308(fp)
  82a184:	e0bfad17 	ldw	r2,-332(fp)
  82a188:	10800704 	addi	r2,r2,28
  82a18c:	10800017 	ldw	r2,0(r2)
  82a190:	e0bfbb15 	stw	r2,-276(fp)
  82a194:	e0bfbb17 	ldw	r2,-276(fp)
  82a198:	1004937a 	slli	r2,r2,13
  82a19c:	e0bfbb15 	stw	r2,-276(fp)
  82a1a0:	e0ffb117 	ldw	r3,-316(fp)
  82a1a4:	e0bfb317 	ldw	r2,-308(fp)
  82a1a8:	1885883a 	add	r2,r3,r2
  82a1ac:	e0bfbd15 	stw	r2,-268(fp)
  82a1b0:	e0ffb117 	ldw	r3,-316(fp)
  82a1b4:	e0bfb217 	ldw	r2,-312(fp)
  82a1b8:	1885883a 	add	r2,r3,r2
  82a1bc:	014aadc4 	movi	r5,10935
  82a1c0:	1009883a 	mov	r4,r2
  82a1c4:	08301e80 	call	8301e8 <__mulsi3>
  82a1c8:	e0bfb815 	stw	r2,-288(fp)
  82a1cc:	01499484 	movi	r5,9810
  82a1d0:	e13fbd17 	ldw	r4,-268(fp)
  82a1d4:	08301e80 	call	8301e8 <__mulsi3>
  82a1d8:	e0bfb915 	stw	r2,-284(fp)
  82a1dc:	e0ffb817 	ldw	r3,-288(fp)
  82a1e0:	e0bfb917 	ldw	r2,-284(fp)
  82a1e4:	1887883a 	add	r3,r3,r2
  82a1e8:	e0bfbb17 	ldw	r2,-276(fp)
  82a1ec:	18a1883a 	add	r16,r3,r2
  82a1f0:	0176fc04 	movi	r5,-9232
  82a1f4:	e13fb117 	ldw	r4,-316(fp)
  82a1f8:	08301e80 	call	8301e8 <__mulsi3>
  82a1fc:	8085883a 	add	r2,r16,r2
  82a200:	e0bfb715 	stw	r2,-292(fp)
  82a204:	01460504 	movi	r5,6164
  82a208:	e13fbd17 	ldw	r4,-268(fp)
  82a20c:	08301e80 	call	8301e8 <__mulsi3>
  82a210:	e0bfbd15 	stw	r2,-268(fp)
  82a214:	017782c4 	movi	r5,-8693
  82a218:	e13fb117 	ldw	r4,-316(fp)
  82a21c:	08301e80 	call	8301e8 <__mulsi3>
  82a220:	1007883a 	mov	r3,r2
  82a224:	e0bfbd17 	ldw	r2,-268(fp)
  82a228:	1885883a 	add	r2,r3,r2
  82a22c:	e0bfc215 	stw	r2,-248(fp)
  82a230:	e0ffb117 	ldw	r3,-316(fp)
  82a234:	e0bfb217 	ldw	r2,-312(fp)
  82a238:	1885c83a 	sub	r2,r3,r2
  82a23c:	e0bfb115 	stw	r2,-316(fp)
  82a240:	0143bc84 	movi	r5,3826
  82a244:	e13fb117 	ldw	r4,-316(fp)
  82a248:	08301e80 	call	8301e8 <__mulsi3>
  82a24c:	1007883a 	mov	r3,r2
  82a250:	e0bfbb17 	ldw	r2,-276(fp)
  82a254:	1885c83a 	sub	r2,r3,r2
  82a258:	e0bfbe15 	stw	r2,-264(fp)
  82a25c:	e0ffc217 	ldw	r3,-248(fp)
  82a260:	e0bfbe17 	ldw	r2,-264(fp)
  82a264:	1885883a 	add	r2,r3,r2
  82a268:	e0bfc215 	stw	r2,-248(fp)
  82a26c:	e0ffb217 	ldw	r3,-312(fp)
  82a270:	e0bfb317 	ldw	r2,-308(fp)
  82a274:	1885883a 	add	r2,r3,r2
  82a278:	017ebbc4 	movi	r5,-1297
  82a27c:	1009883a 	mov	r4,r2
  82a280:	08301e80 	call	8301e8 <__mulsi3>
  82a284:	1007883a 	mov	r3,r2
  82a288:	e0bfbb17 	ldw	r2,-276(fp)
  82a28c:	1885c83a 	sub	r2,r3,r2
  82a290:	e0bfbc15 	stw	r2,-272(fp)
  82a294:	017c9b84 	movi	r5,-3474
  82a298:	e13fb217 	ldw	r4,-312(fp)
  82a29c:	08301e80 	call	8301e8 <__mulsi3>
  82a2a0:	1007883a 	mov	r3,r2
  82a2a4:	e0bfbc17 	ldw	r2,-272(fp)
  82a2a8:	1885883a 	add	r2,r3,r2
  82a2ac:	e0ffb817 	ldw	r3,-288(fp)
  82a2b0:	1885883a 	add	r2,r3,r2
  82a2b4:	e0bfb815 	stw	r2,-288(fp)
  82a2b8:	016d0244 	movi	r5,-19447
  82a2bc:	e13fb317 	ldw	r4,-308(fp)
  82a2c0:	08301e80 	call	8301e8 <__mulsi3>
  82a2c4:	1007883a 	mov	r3,r2
  82a2c8:	e0bfbc17 	ldw	r2,-272(fp)
  82a2cc:	1885883a 	add	r2,r3,r2
  82a2d0:	e0ffb917 	ldw	r3,-284(fp)
  82a2d4:	1885883a 	add	r2,r3,r2
  82a2d8:	e0bfb915 	stw	r2,-284(fp)
  82a2dc:	e0ffb317 	ldw	r3,-308(fp)
  82a2e0:	e0bfb217 	ldw	r2,-312(fp)
  82a2e4:	1885c83a 	sub	r2,r3,r2
  82a2e8:	014b3e04 	movi	r5,11512
  82a2ec:	1009883a 	mov	r4,r2
  82a2f0:	08301e80 	call	8301e8 <__mulsi3>
  82a2f4:	e0bfbc15 	stw	r2,-272(fp)
  82a2f8:	e0ffbc17 	ldw	r3,-272(fp)
  82a2fc:	e0bfbb17 	ldw	r2,-276(fp)
  82a300:	18a1883a 	add	r16,r3,r2
  82a304:	01727984 	movi	r5,-13850
  82a308:	e13fb317 	ldw	r4,-308(fp)
  82a30c:	08301e80 	call	8301e8 <__mulsi3>
  82a310:	8085883a 	add	r2,r16,r2
  82a314:	e0ffbd17 	ldw	r3,-268(fp)
  82a318:	1885883a 	add	r2,r3,r2
  82a31c:	e0bfbd15 	stw	r2,-268(fp)
  82a320:	01456644 	movi	r5,5529
  82a324:	e13fb217 	ldw	r4,-312(fp)
  82a328:	08301e80 	call	8301e8 <__mulsi3>
  82a32c:	1007883a 	mov	r3,r2
  82a330:	e0bfbc17 	ldw	r2,-272(fp)
  82a334:	1885883a 	add	r2,r3,r2
  82a338:	e0ffbe17 	ldw	r3,-264(fp)
  82a33c:	1885883a 	add	r2,r3,r2
  82a340:	e0bfbe15 	stw	r2,-264(fp)
  82a344:	e0ffb117 	ldw	r3,-316(fp)
  82a348:	e0bfb317 	ldw	r2,-308(fp)
  82a34c:	1885c83a 	sub	r2,r3,r2
  82a350:	1006937a 	slli	r3,r2,13
  82a354:	e0bfbb17 	ldw	r2,-276(fp)
  82a358:	1885883a 	add	r2,r3,r2
  82a35c:	e0bfbc15 	stw	r2,-272(fp)
  82a360:	e0ffb417 	ldw	r3,-304(fp)
  82a364:	e0bfb717 	ldw	r2,-292(fp)
  82a368:	1885883a 	add	r2,r3,r2
  82a36c:	1005d4ba 	srai	r2,r2,18
  82a370:	1080ffcc 	andi	r2,r2,1023
  82a374:	e0ffaf17 	ldw	r3,-324(fp)
  82a378:	1885883a 	add	r2,r3,r2
  82a37c:	10c00003 	ldbu	r3,0(r2)
  82a380:	e0bfba17 	ldw	r2,-280(fp)
  82a384:	10c00005 	stb	r3,0(r2)
  82a388:	e0bfba17 	ldw	r2,-280(fp)
  82a38c:	10800344 	addi	r2,r2,13
  82a390:	e13fb417 	ldw	r4,-304(fp)
  82a394:	e0ffb717 	ldw	r3,-292(fp)
  82a398:	20c7c83a 	sub	r3,r4,r3
  82a39c:	1807d4ba 	srai	r3,r3,18
  82a3a0:	18c0ffcc 	andi	r3,r3,1023
  82a3a4:	e13faf17 	ldw	r4,-324(fp)
  82a3a8:	20c7883a 	add	r3,r4,r3
  82a3ac:	18c00003 	ldbu	r3,0(r3)
  82a3b0:	10c00005 	stb	r3,0(r2)
  82a3b4:	e0bfba17 	ldw	r2,-280(fp)
  82a3b8:	10800044 	addi	r2,r2,1
  82a3bc:	e13fb617 	ldw	r4,-296(fp)
  82a3c0:	e0ffb817 	ldw	r3,-288(fp)
  82a3c4:	20c7883a 	add	r3,r4,r3
  82a3c8:	1807d4ba 	srai	r3,r3,18
  82a3cc:	18c0ffcc 	andi	r3,r3,1023
  82a3d0:	e13faf17 	ldw	r4,-324(fp)
  82a3d4:	20c7883a 	add	r3,r4,r3
  82a3d8:	18c00003 	ldbu	r3,0(r3)
  82a3dc:	10c00005 	stb	r3,0(r2)
  82a3e0:	e0bfba17 	ldw	r2,-280(fp)
  82a3e4:	10800304 	addi	r2,r2,12
  82a3e8:	e13fb617 	ldw	r4,-296(fp)
  82a3ec:	e0ffb817 	ldw	r3,-288(fp)
  82a3f0:	20c7c83a 	sub	r3,r4,r3
  82a3f4:	1807d4ba 	srai	r3,r3,18
  82a3f8:	18c0ffcc 	andi	r3,r3,1023
  82a3fc:	e13faf17 	ldw	r4,-324(fp)
  82a400:	20c7883a 	add	r3,r4,r3
  82a404:	18c00003 	ldbu	r3,0(r3)
  82a408:	10c00005 	stb	r3,0(r2)
  82a40c:	e0bfba17 	ldw	r2,-280(fp)
  82a410:	10800084 	addi	r2,r2,2
  82a414:	e13fb517 	ldw	r4,-300(fp)
  82a418:	e0ffb917 	ldw	r3,-284(fp)
  82a41c:	20c7883a 	add	r3,r4,r3
  82a420:	1807d4ba 	srai	r3,r3,18
  82a424:	18c0ffcc 	andi	r3,r3,1023
  82a428:	e13faf17 	ldw	r4,-324(fp)
  82a42c:	20c7883a 	add	r3,r4,r3
  82a430:	18c00003 	ldbu	r3,0(r3)
  82a434:	10c00005 	stb	r3,0(r2)
  82a438:	e0bfba17 	ldw	r2,-280(fp)
  82a43c:	108002c4 	addi	r2,r2,11
  82a440:	e13fb517 	ldw	r4,-300(fp)
  82a444:	e0ffb917 	ldw	r3,-284(fp)
  82a448:	20c7c83a 	sub	r3,r4,r3
  82a44c:	1807d4ba 	srai	r3,r3,18
  82a450:	18c0ffcc 	andi	r3,r3,1023
  82a454:	e13faf17 	ldw	r4,-324(fp)
  82a458:	20c7883a 	add	r3,r4,r3
  82a45c:	18c00003 	ldbu	r3,0(r3)
  82a460:	10c00005 	stb	r3,0(r2)
  82a464:	e0bfba17 	ldw	r2,-280(fp)
  82a468:	108000c4 	addi	r2,r2,3
  82a46c:	e13fb017 	ldw	r4,-320(fp)
  82a470:	e0ffbc17 	ldw	r3,-272(fp)
  82a474:	20c7883a 	add	r3,r4,r3
  82a478:	1807d4ba 	srai	r3,r3,18
  82a47c:	18c0ffcc 	andi	r3,r3,1023
  82a480:	e13faf17 	ldw	r4,-324(fp)
  82a484:	20c7883a 	add	r3,r4,r3
  82a488:	18c00003 	ldbu	r3,0(r3)
  82a48c:	10c00005 	stb	r3,0(r2)
  82a490:	e0bfba17 	ldw	r2,-280(fp)
  82a494:	10800284 	addi	r2,r2,10
  82a498:	e13fb017 	ldw	r4,-320(fp)
  82a49c:	e0ffbc17 	ldw	r3,-272(fp)
  82a4a0:	20c7c83a 	sub	r3,r4,r3
  82a4a4:	1807d4ba 	srai	r3,r3,18
  82a4a8:	18c0ffcc 	andi	r3,r3,1023
  82a4ac:	e13faf17 	ldw	r4,-324(fp)
  82a4b0:	20c7883a 	add	r3,r4,r3
  82a4b4:	18c00003 	ldbu	r3,0(r3)
  82a4b8:	10c00005 	stb	r3,0(r2)
  82a4bc:	e0bfba17 	ldw	r2,-280(fp)
  82a4c0:	10800104 	addi	r2,r2,4
  82a4c4:	e13fc117 	ldw	r4,-252(fp)
  82a4c8:	e0ffbd17 	ldw	r3,-268(fp)
  82a4cc:	20c7883a 	add	r3,r4,r3
  82a4d0:	1807d4ba 	srai	r3,r3,18
  82a4d4:	18c0ffcc 	andi	r3,r3,1023
  82a4d8:	e13faf17 	ldw	r4,-324(fp)
  82a4dc:	20c7883a 	add	r3,r4,r3
  82a4e0:	18c00003 	ldbu	r3,0(r3)
  82a4e4:	10c00005 	stb	r3,0(r2)
  82a4e8:	e0bfba17 	ldw	r2,-280(fp)
  82a4ec:	10800244 	addi	r2,r2,9
  82a4f0:	e13fc117 	ldw	r4,-252(fp)
  82a4f4:	e0ffbd17 	ldw	r3,-268(fp)
  82a4f8:	20c7c83a 	sub	r3,r4,r3
  82a4fc:	1807d4ba 	srai	r3,r3,18
  82a500:	18c0ffcc 	andi	r3,r3,1023
  82a504:	e13faf17 	ldw	r4,-324(fp)
  82a508:	20c7883a 	add	r3,r4,r3
  82a50c:	18c00003 	ldbu	r3,0(r3)
  82a510:	10c00005 	stb	r3,0(r2)
  82a514:	e0bfba17 	ldw	r2,-280(fp)
  82a518:	10800144 	addi	r2,r2,5
  82a51c:	e13fc017 	ldw	r4,-256(fp)
  82a520:	e0ffbe17 	ldw	r3,-264(fp)
  82a524:	20c7883a 	add	r3,r4,r3
  82a528:	1807d4ba 	srai	r3,r3,18
  82a52c:	18c0ffcc 	andi	r3,r3,1023
  82a530:	e13faf17 	ldw	r4,-324(fp)
  82a534:	20c7883a 	add	r3,r4,r3
  82a538:	18c00003 	ldbu	r3,0(r3)
  82a53c:	10c00005 	stb	r3,0(r2)
  82a540:	e0bfba17 	ldw	r2,-280(fp)
  82a544:	10800204 	addi	r2,r2,8
  82a548:	e13fc017 	ldw	r4,-256(fp)
  82a54c:	e0ffbe17 	ldw	r3,-264(fp)
  82a550:	20c7c83a 	sub	r3,r4,r3
  82a554:	1807d4ba 	srai	r3,r3,18
  82a558:	18c0ffcc 	andi	r3,r3,1023
  82a55c:	e13faf17 	ldw	r4,-324(fp)
  82a560:	20c7883a 	add	r3,r4,r3
  82a564:	18c00003 	ldbu	r3,0(r3)
  82a568:	10c00005 	stb	r3,0(r2)
  82a56c:	e0bfba17 	ldw	r2,-280(fp)
  82a570:	10800184 	addi	r2,r2,6
  82a574:	e13fbf17 	ldw	r4,-260(fp)
  82a578:	e0ffc217 	ldw	r3,-248(fp)
  82a57c:	20c7883a 	add	r3,r4,r3
  82a580:	1807d4ba 	srai	r3,r3,18
  82a584:	18c0ffcc 	andi	r3,r3,1023
  82a588:	e13faf17 	ldw	r4,-324(fp)
  82a58c:	20c7883a 	add	r3,r4,r3
  82a590:	18c00003 	ldbu	r3,0(r3)
  82a594:	10c00005 	stb	r3,0(r2)
  82a598:	e0bfba17 	ldw	r2,-280(fp)
  82a59c:	108001c4 	addi	r2,r2,7
  82a5a0:	e13fbf17 	ldw	r4,-260(fp)
  82a5a4:	e0ffc217 	ldw	r3,-248(fp)
  82a5a8:	20c7c83a 	sub	r3,r4,r3
  82a5ac:	1807d4ba 	srai	r3,r3,18
  82a5b0:	18c0ffcc 	andi	r3,r3,1023
  82a5b4:	e13faf17 	ldw	r4,-324(fp)
  82a5b8:	20c7883a 	add	r3,r4,r3
  82a5bc:	18c00003 	ldbu	r3,0(r3)
  82a5c0:	10c00005 	stb	r3,0(r2)
  82a5c4:	e0bfad17 	ldw	r2,-332(fp)
  82a5c8:	10800804 	addi	r2,r2,32
  82a5cc:	e0bfad15 	stw	r2,-332(fp)
  82a5d0:	e0bfae17 	ldw	r2,-328(fp)
  82a5d4:	10800044 	addi	r2,r2,1
  82a5d8:	e0bfae15 	stw	r2,-328(fp)
  82a5dc:	e0bfae17 	ldw	r2,-328(fp)
  82a5e0:	108001d0 	cmplti	r2,r2,7
  82a5e4:	103e661e 	bne	r2,zero,829f80 <__alt_mem_epcs_flash_controller_0+0xff820f80>
  82a5e8:	0001883a 	nop
  82a5ec:	e6ffff04 	addi	sp,fp,-4
  82a5f0:	dfc00217 	ldw	ra,8(sp)
  82a5f4:	df000117 	ldw	fp,4(sp)
  82a5f8:	dc000017 	ldw	r16,0(sp)
  82a5fc:	dec00304 	addi	sp,sp,12
  82a600:	f800283a 	ret

0082a604 <jpeg_idct_12x6>:
  82a604:	deffb304 	addi	sp,sp,-308
  82a608:	dfc04c15 	stw	ra,304(sp)
  82a60c:	df004b15 	stw	fp,300(sp)
  82a610:	dc004a15 	stw	r16,296(sp)
  82a614:	df004b04 	addi	fp,sp,300
  82a618:	e13ffb15 	stw	r4,-20(fp)
  82a61c:	e17ffc15 	stw	r5,-16(fp)
  82a620:	e1bffd15 	stw	r6,-12(fp)
  82a624:	e1fffe15 	stw	r7,-8(fp)
  82a628:	e0bffb17 	ldw	r2,-20(fp)
  82a62c:	10805417 	ldw	r2,336(r2)
  82a630:	10bfa004 	addi	r2,r2,-384
  82a634:	e0bfb915 	stw	r2,-284(fp)
  82a638:	e0bffd17 	ldw	r2,-12(fp)
  82a63c:	e0bfb515 	stw	r2,-300(fp)
  82a640:	e0bffc17 	ldw	r2,-16(fp)
  82a644:	10801517 	ldw	r2,84(r2)
  82a648:	e0bfb615 	stw	r2,-296(fp)
  82a64c:	e0bfcb04 	addi	r2,fp,-212
  82a650:	e0bfb715 	stw	r2,-292(fp)
  82a654:	e03fb815 	stw	zero,-288(fp)
  82a658:	0000bd06 	br	82a950 <jpeg_idct_12x6+0x34c>
  82a65c:	e0bfb517 	ldw	r2,-300(fp)
  82a660:	1080000b 	ldhu	r2,0(r2)
  82a664:	10ffffcc 	andi	r3,r2,65535
  82a668:	18e0001c 	xori	r3,r3,32768
  82a66c:	18e00004 	addi	r3,r3,-32768
  82a670:	e0bfb617 	ldw	r2,-296(fp)
  82a674:	10800017 	ldw	r2,0(r2)
  82a678:	100b883a 	mov	r5,r2
  82a67c:	1809883a 	mov	r4,r3
  82a680:	08301e80 	call	8301e8 <__mulsi3>
  82a684:	e0bfba15 	stw	r2,-280(fp)
  82a688:	e0bfba17 	ldw	r2,-280(fp)
  82a68c:	1004937a 	slli	r2,r2,13
  82a690:	e0bfba15 	stw	r2,-280(fp)
  82a694:	e0bfba17 	ldw	r2,-280(fp)
  82a698:	10810004 	addi	r2,r2,1024
  82a69c:	e0bfba15 	stw	r2,-280(fp)
  82a6a0:	e0bfb517 	ldw	r2,-300(fp)
  82a6a4:	10801004 	addi	r2,r2,64
  82a6a8:	1080000b 	ldhu	r2,0(r2)
  82a6ac:	10ffffcc 	andi	r3,r2,65535
  82a6b0:	18e0001c 	xori	r3,r3,32768
  82a6b4:	18e00004 	addi	r3,r3,-32768
  82a6b8:	e0bfb617 	ldw	r2,-296(fp)
  82a6bc:	10802004 	addi	r2,r2,128
  82a6c0:	10800017 	ldw	r2,0(r2)
  82a6c4:	100b883a 	mov	r5,r2
  82a6c8:	1809883a 	mov	r4,r3
  82a6cc:	08301e80 	call	8301e8 <__mulsi3>
  82a6d0:	e0bfbb15 	stw	r2,-276(fp)
  82a6d4:	0145a844 	movi	r5,5793
  82a6d8:	e13fbb17 	ldw	r4,-276(fp)
  82a6dc:	08301e80 	call	8301e8 <__mulsi3>
  82a6e0:	e0bfbc15 	stw	r2,-272(fp)
  82a6e4:	e0ffba17 	ldw	r3,-280(fp)
  82a6e8:	e0bfbc17 	ldw	r2,-272(fp)
  82a6ec:	1885883a 	add	r2,r3,r2
  82a6f0:	e0bfbd15 	stw	r2,-268(fp)
  82a6f4:	e0ffba17 	ldw	r3,-280(fp)
  82a6f8:	e0bfbc17 	ldw	r2,-272(fp)
  82a6fc:	1887c83a 	sub	r3,r3,r2
  82a700:	e0bfbc17 	ldw	r2,-272(fp)
  82a704:	1885c83a 	sub	r2,r3,r2
  82a708:	1005d2fa 	srai	r2,r2,11
  82a70c:	e0bfbe15 	stw	r2,-264(fp)
  82a710:	e0bfb517 	ldw	r2,-300(fp)
  82a714:	10800804 	addi	r2,r2,32
  82a718:	1080000b 	ldhu	r2,0(r2)
  82a71c:	10ffffcc 	andi	r3,r2,65535
  82a720:	18e0001c 	xori	r3,r3,32768
  82a724:	18e00004 	addi	r3,r3,-32768
  82a728:	e0bfb617 	ldw	r2,-296(fp)
  82a72c:	10801004 	addi	r2,r2,64
  82a730:	10800017 	ldw	r2,0(r2)
  82a734:	100b883a 	mov	r5,r2
  82a738:	1809883a 	mov	r4,r3
  82a73c:	08301e80 	call	8301e8 <__mulsi3>
  82a740:	e0bfbc15 	stw	r2,-272(fp)
  82a744:	0149cc44 	movi	r5,10033
  82a748:	e13fbc17 	ldw	r4,-272(fp)
  82a74c:	08301e80 	call	8301e8 <__mulsi3>
  82a750:	e0bfba15 	stw	r2,-280(fp)
  82a754:	e0ffbd17 	ldw	r3,-268(fp)
  82a758:	e0bfba17 	ldw	r2,-280(fp)
  82a75c:	1885883a 	add	r2,r3,r2
  82a760:	e0bfbc15 	stw	r2,-272(fp)
  82a764:	e0ffbd17 	ldw	r3,-268(fp)
  82a768:	e0bfba17 	ldw	r2,-280(fp)
  82a76c:	1885c83a 	sub	r2,r3,r2
  82a770:	e0bfbf15 	stw	r2,-260(fp)
  82a774:	e0bfb517 	ldw	r2,-300(fp)
  82a778:	10800404 	addi	r2,r2,16
  82a77c:	1080000b 	ldhu	r2,0(r2)
  82a780:	10ffffcc 	andi	r3,r2,65535
  82a784:	18e0001c 	xori	r3,r3,32768
  82a788:	18e00004 	addi	r3,r3,-32768
  82a78c:	e0bfb617 	ldw	r2,-296(fp)
  82a790:	10800804 	addi	r2,r2,32
  82a794:	10800017 	ldw	r2,0(r2)
  82a798:	100b883a 	mov	r5,r2
  82a79c:	1809883a 	mov	r4,r3
  82a7a0:	08301e80 	call	8301e8 <__mulsi3>
  82a7a4:	e0bfc015 	stw	r2,-256(fp)
  82a7a8:	e0bfb517 	ldw	r2,-300(fp)
  82a7ac:	10800c04 	addi	r2,r2,48
  82a7b0:	1080000b 	ldhu	r2,0(r2)
  82a7b4:	10ffffcc 	andi	r3,r2,65535
  82a7b8:	18e0001c 	xori	r3,r3,32768
  82a7bc:	18e00004 	addi	r3,r3,-32768
  82a7c0:	e0bfb617 	ldw	r2,-296(fp)
  82a7c4:	10801804 	addi	r2,r2,96
  82a7c8:	10800017 	ldw	r2,0(r2)
  82a7cc:	100b883a 	mov	r5,r2
  82a7d0:	1809883a 	mov	r4,r3
  82a7d4:	08301e80 	call	8301e8 <__mulsi3>
  82a7d8:	e0bfc115 	stw	r2,-252(fp)
  82a7dc:	e0bfb517 	ldw	r2,-300(fp)
  82a7e0:	10801404 	addi	r2,r2,80
  82a7e4:	1080000b 	ldhu	r2,0(r2)
  82a7e8:	10ffffcc 	andi	r3,r2,65535
  82a7ec:	18e0001c 	xori	r3,r3,32768
  82a7f0:	18e00004 	addi	r3,r3,-32768
  82a7f4:	e0bfb617 	ldw	r2,-296(fp)
  82a7f8:	10802804 	addi	r2,r2,160
  82a7fc:	10800017 	ldw	r2,0(r2)
  82a800:	100b883a 	mov	r5,r2
  82a804:	1809883a 	mov	r4,r3
  82a808:	08301e80 	call	8301e8 <__mulsi3>
  82a80c:	e0bfc215 	stw	r2,-248(fp)
  82a810:	e0ffc017 	ldw	r3,-256(fp)
  82a814:	e0bfc217 	ldw	r2,-248(fp)
  82a818:	1885883a 	add	r2,r3,r2
  82a81c:	0142ed84 	movi	r5,2998
  82a820:	1009883a 	mov	r4,r2
  82a824:	08301e80 	call	8301e8 <__mulsi3>
  82a828:	e0bfbd15 	stw	r2,-268(fp)
  82a82c:	e0ffc017 	ldw	r3,-256(fp)
  82a830:	e0bfc117 	ldw	r2,-252(fp)
  82a834:	1885883a 	add	r2,r3,r2
  82a838:	1006937a 	slli	r3,r2,13
  82a83c:	e0bfbd17 	ldw	r2,-268(fp)
  82a840:	1885883a 	add	r2,r3,r2
  82a844:	e0bfba15 	stw	r2,-280(fp)
  82a848:	e0ffc217 	ldw	r3,-248(fp)
  82a84c:	e0bfc117 	ldw	r2,-252(fp)
  82a850:	1885c83a 	sub	r2,r3,r2
  82a854:	1006937a 	slli	r3,r2,13
  82a858:	e0bfbd17 	ldw	r2,-268(fp)
  82a85c:	1885883a 	add	r2,r3,r2
  82a860:	e0bfbb15 	stw	r2,-276(fp)
  82a864:	e0ffc017 	ldw	r3,-256(fp)
  82a868:	e0bfc117 	ldw	r2,-252(fp)
  82a86c:	1887c83a 	sub	r3,r3,r2
  82a870:	e0bfc217 	ldw	r2,-248(fp)
  82a874:	1885c83a 	sub	r2,r3,r2
  82a878:	1085883a 	add	r2,r2,r2
  82a87c:	1085883a 	add	r2,r2,r2
  82a880:	e0bfbd15 	stw	r2,-268(fp)
  82a884:	e0ffbc17 	ldw	r3,-272(fp)
  82a888:	e0bfba17 	ldw	r2,-280(fp)
  82a88c:	1885883a 	add	r2,r3,r2
  82a890:	1007d2fa 	srai	r3,r2,11
  82a894:	e0bfb717 	ldw	r2,-292(fp)
  82a898:	10c00015 	stw	r3,0(r2)
  82a89c:	e0bfb717 	ldw	r2,-292(fp)
  82a8a0:	10802804 	addi	r2,r2,160
  82a8a4:	e13fbc17 	ldw	r4,-272(fp)
  82a8a8:	e0ffba17 	ldw	r3,-280(fp)
  82a8ac:	20c7c83a 	sub	r3,r4,r3
  82a8b0:	1807d2fa 	srai	r3,r3,11
  82a8b4:	10c00015 	stw	r3,0(r2)
  82a8b8:	e0bfb717 	ldw	r2,-292(fp)
  82a8bc:	10800804 	addi	r2,r2,32
  82a8c0:	e13fbe17 	ldw	r4,-264(fp)
  82a8c4:	e0ffbd17 	ldw	r3,-268(fp)
  82a8c8:	20c7883a 	add	r3,r4,r3
  82a8cc:	10c00015 	stw	r3,0(r2)
  82a8d0:	e0bfb717 	ldw	r2,-292(fp)
  82a8d4:	10802004 	addi	r2,r2,128
  82a8d8:	e13fbe17 	ldw	r4,-264(fp)
  82a8dc:	e0ffbd17 	ldw	r3,-268(fp)
  82a8e0:	20c7c83a 	sub	r3,r4,r3
  82a8e4:	10c00015 	stw	r3,0(r2)
  82a8e8:	e0bfb717 	ldw	r2,-292(fp)
  82a8ec:	10801004 	addi	r2,r2,64
  82a8f0:	e13fbf17 	ldw	r4,-260(fp)
  82a8f4:	e0ffbb17 	ldw	r3,-276(fp)
  82a8f8:	20c7883a 	add	r3,r4,r3
  82a8fc:	1807d2fa 	srai	r3,r3,11
  82a900:	10c00015 	stw	r3,0(r2)
  82a904:	e0bfb717 	ldw	r2,-292(fp)
  82a908:	10801804 	addi	r2,r2,96
  82a90c:	e13fbf17 	ldw	r4,-260(fp)
  82a910:	e0ffbb17 	ldw	r3,-276(fp)
  82a914:	20c7c83a 	sub	r3,r4,r3
  82a918:	1807d2fa 	srai	r3,r3,11
  82a91c:	10c00015 	stw	r3,0(r2)
  82a920:	e0bfb817 	ldw	r2,-288(fp)
  82a924:	10800044 	addi	r2,r2,1
  82a928:	e0bfb815 	stw	r2,-288(fp)
  82a92c:	e0bfb517 	ldw	r2,-300(fp)
  82a930:	10800084 	addi	r2,r2,2
  82a934:	e0bfb515 	stw	r2,-300(fp)
  82a938:	e0bfb617 	ldw	r2,-296(fp)
  82a93c:	10800104 	addi	r2,r2,4
  82a940:	e0bfb615 	stw	r2,-296(fp)
  82a944:	e0bfb717 	ldw	r2,-292(fp)
  82a948:	10800104 	addi	r2,r2,4
  82a94c:	e0bfb715 	stw	r2,-292(fp)
  82a950:	e0bfb817 	ldw	r2,-288(fp)
  82a954:	10800210 	cmplti	r2,r2,8
  82a958:	103f401e 	bne	r2,zero,82a65c <__alt_mem_epcs_flash_controller_0+0xff82165c>
  82a95c:	e0bfcb04 	addi	r2,fp,-212
  82a960:	e0bfb715 	stw	r2,-292(fp)
  82a964:	e03fb815 	stw	zero,-288(fp)
  82a968:	00015906 	br	82aed0 <jpeg_idct_12x6+0x8cc>
  82a96c:	e0bfb817 	ldw	r2,-288(fp)
  82a970:	1085883a 	add	r2,r2,r2
  82a974:	1085883a 	add	r2,r2,r2
  82a978:	1007883a 	mov	r3,r2
  82a97c:	e0bffe17 	ldw	r2,-8(fp)
  82a980:	10c5883a 	add	r2,r2,r3
  82a984:	10c00017 	ldw	r3,0(r2)
  82a988:	e0800217 	ldw	r2,8(fp)
  82a98c:	1885883a 	add	r2,r3,r2
  82a990:	e0bfc315 	stw	r2,-244(fp)
  82a994:	e0bfb717 	ldw	r2,-292(fp)
  82a998:	10800017 	ldw	r2,0(r2)
  82a99c:	10900404 	addi	r2,r2,16400
  82a9a0:	e0bfc215 	stw	r2,-248(fp)
  82a9a4:	e0bfc217 	ldw	r2,-248(fp)
  82a9a8:	1004937a 	slli	r2,r2,13
  82a9ac:	e0bfc215 	stw	r2,-248(fp)
  82a9b0:	e0bfb717 	ldw	r2,-292(fp)
  82a9b4:	10800404 	addi	r2,r2,16
  82a9b8:	10800017 	ldw	r2,0(r2)
  82a9bc:	e0bfc415 	stw	r2,-240(fp)
  82a9c0:	0149cc44 	movi	r5,10033
  82a9c4:	e13fc417 	ldw	r4,-240(fp)
  82a9c8:	08301e80 	call	8301e8 <__mulsi3>
  82a9cc:	e0bfc415 	stw	r2,-240(fp)
  82a9d0:	e0ffc217 	ldw	r3,-248(fp)
  82a9d4:	e0bfc417 	ldw	r2,-240(fp)
  82a9d8:	1885883a 	add	r2,r3,r2
  82a9dc:	e0bfba15 	stw	r2,-280(fp)
  82a9e0:	e0ffc217 	ldw	r3,-248(fp)
  82a9e4:	e0bfc417 	ldw	r2,-240(fp)
  82a9e8:	1885c83a 	sub	r2,r3,r2
  82a9ec:	e0bfbd15 	stw	r2,-268(fp)
  82a9f0:	e0bfb717 	ldw	r2,-292(fp)
  82a9f4:	10800204 	addi	r2,r2,8
  82a9f8:	10800017 	ldw	r2,0(r2)
  82a9fc:	e0bfc015 	stw	r2,-256(fp)
  82aa00:	014aed84 	movi	r5,11190
  82aa04:	e13fc017 	ldw	r4,-256(fp)
  82aa08:	08301e80 	call	8301e8 <__mulsi3>
  82aa0c:	e0bfc415 	stw	r2,-240(fp)
  82aa10:	e0bfc017 	ldw	r2,-256(fp)
  82aa14:	1004937a 	slli	r2,r2,13
  82aa18:	e0bfc015 	stw	r2,-256(fp)
  82aa1c:	e0bfb717 	ldw	r2,-292(fp)
  82aa20:	10800604 	addi	r2,r2,24
  82aa24:	10800017 	ldw	r2,0(r2)
  82aa28:	e0bfc115 	stw	r2,-252(fp)
  82aa2c:	e0bfc117 	ldw	r2,-252(fp)
  82aa30:	1004937a 	slli	r2,r2,13
  82aa34:	e0bfc115 	stw	r2,-252(fp)
  82aa38:	e0ffc017 	ldw	r3,-256(fp)
  82aa3c:	e0bfc117 	ldw	r2,-252(fp)
  82aa40:	1885c83a 	sub	r2,r3,r2
  82aa44:	e0bfbb15 	stw	r2,-276(fp)
  82aa48:	e0ffc217 	ldw	r3,-248(fp)
  82aa4c:	e0bfbb17 	ldw	r2,-276(fp)
  82aa50:	1885883a 	add	r2,r3,r2
  82aa54:	e0bfbe15 	stw	r2,-264(fp)
  82aa58:	e0ffc217 	ldw	r3,-248(fp)
  82aa5c:	e0bfbb17 	ldw	r2,-276(fp)
  82aa60:	1885c83a 	sub	r2,r3,r2
  82aa64:	e0bfc515 	stw	r2,-236(fp)
  82aa68:	e0ffc417 	ldw	r3,-240(fp)
  82aa6c:	e0bfc117 	ldw	r2,-252(fp)
  82aa70:	1885883a 	add	r2,r3,r2
  82aa74:	e0bfbb15 	stw	r2,-276(fp)
  82aa78:	e0ffba17 	ldw	r3,-280(fp)
  82aa7c:	e0bfbb17 	ldw	r2,-276(fp)
  82aa80:	1885883a 	add	r2,r3,r2
  82aa84:	e0bfbc15 	stw	r2,-272(fp)
  82aa88:	e0ffba17 	ldw	r3,-280(fp)
  82aa8c:	e0bfbb17 	ldw	r2,-276(fp)
  82aa90:	1885c83a 	sub	r2,r3,r2
  82aa94:	e0bfc615 	stw	r2,-232(fp)
  82aa98:	e0ffc417 	ldw	r3,-240(fp)
  82aa9c:	e0bfc017 	ldw	r2,-256(fp)
  82aaa0:	1887c83a 	sub	r3,r3,r2
  82aaa4:	e0bfc117 	ldw	r2,-252(fp)
  82aaa8:	1885c83a 	sub	r2,r3,r2
  82aaac:	e0bfbb15 	stw	r2,-276(fp)
  82aab0:	e0ffbd17 	ldw	r3,-268(fp)
  82aab4:	e0bfbb17 	ldw	r2,-276(fp)
  82aab8:	1885883a 	add	r2,r3,r2
  82aabc:	e0bfbf15 	stw	r2,-260(fp)
  82aac0:	e0ffbd17 	ldw	r3,-268(fp)
  82aac4:	e0bfbb17 	ldw	r2,-276(fp)
  82aac8:	1885c83a 	sub	r2,r3,r2
  82aacc:	e0bfc715 	stw	r2,-228(fp)
  82aad0:	e0bfb717 	ldw	r2,-292(fp)
  82aad4:	10800104 	addi	r2,r2,4
  82aad8:	10800017 	ldw	r2,0(r2)
  82aadc:	e0bfc015 	stw	r2,-256(fp)
  82aae0:	e0bfb717 	ldw	r2,-292(fp)
  82aae4:	10800304 	addi	r2,r2,12
  82aae8:	10800017 	ldw	r2,0(r2)
  82aaec:	e0bfc115 	stw	r2,-252(fp)
  82aaf0:	e0bfb717 	ldw	r2,-292(fp)
  82aaf4:	10800504 	addi	r2,r2,20
  82aaf8:	10800017 	ldw	r2,0(r2)
  82aafc:	e0bfc215 	stw	r2,-248(fp)
  82ab00:	e0bfb717 	ldw	r2,-292(fp)
  82ab04:	10800704 	addi	r2,r2,28
  82ab08:	10800017 	ldw	r2,0(r2)
  82ab0c:	e0bfc415 	stw	r2,-240(fp)
  82ab10:	014a73c4 	movi	r5,10703
  82ab14:	e13fc117 	ldw	r4,-252(fp)
  82ab18:	08301e80 	call	8301e8 <__mulsi3>
  82ab1c:	e0bfbd15 	stw	r2,-268(fp)
  82ab20:	017babc4 	movi	r5,-4433
  82ab24:	e13fc117 	ldw	r4,-252(fp)
  82ab28:	08301e80 	call	8301e8 <__mulsi3>
  82ab2c:	e0bfc815 	stw	r2,-224(fp)
  82ab30:	e0ffc017 	ldw	r3,-256(fp)
  82ab34:	e0bfc217 	ldw	r2,-248(fp)
  82ab38:	1885883a 	add	r2,r3,r2
  82ab3c:	e0bfba15 	stw	r2,-280(fp)
  82ab40:	e0ffba17 	ldw	r3,-280(fp)
  82ab44:	e0bfc417 	ldw	r2,-240(fp)
  82ab48:	1885883a 	add	r2,r3,r2
  82ab4c:	0146e344 	movi	r5,7053
  82ab50:	1009883a 	mov	r4,r2
  82ab54:	08301e80 	call	8301e8 <__mulsi3>
  82ab58:	e0bfc915 	stw	r2,-220(fp)
  82ab5c:	014216c4 	movi	r5,2139
  82ab60:	e13fba17 	ldw	r4,-280(fp)
  82ab64:	08301e80 	call	8301e8 <__mulsi3>
  82ab68:	1007883a 	mov	r3,r2
  82ab6c:	e0bfc917 	ldw	r2,-220(fp)
  82ab70:	1885883a 	add	r2,r3,r2
  82ab74:	e0bfbb15 	stw	r2,-276(fp)
  82ab78:	e0ffbb17 	ldw	r3,-276(fp)
  82ab7c:	e0bfbd17 	ldw	r2,-268(fp)
  82ab80:	18a1883a 	add	r16,r3,r2
  82ab84:	01423dc4 	movi	r5,2295
  82ab88:	e13fc017 	ldw	r4,-256(fp)
  82ab8c:	08301e80 	call	8301e8 <__mulsi3>
  82ab90:	8085883a 	add	r2,r16,r2
  82ab94:	e0bfba15 	stw	r2,-280(fp)
  82ab98:	e0ffc217 	ldw	r3,-248(fp)
  82ab9c:	e0bfc417 	ldw	r2,-240(fp)
  82aba0:	1885883a 	add	r2,r3,r2
  82aba4:	0177a2c4 	movi	r5,-8565
  82aba8:	1009883a 	mov	r4,r2
  82abac:	08301e80 	call	8301e8 <__mulsi3>
  82abb0:	e0bfca15 	stw	r2,-216(fp)
  82abb4:	e0ffca17 	ldw	r3,-216(fp)
  82abb8:	e0bfc817 	ldw	r2,-224(fp)
  82abbc:	18a1883a 	add	r16,r3,r2
  82abc0:	01742c04 	movi	r5,-12112
  82abc4:	e13fc217 	ldw	r4,-248(fp)
  82abc8:	08301e80 	call	8301e8 <__mulsi3>
  82abcc:	8085883a 	add	r2,r16,r2
  82abd0:	e0ffbb17 	ldw	r3,-276(fp)
  82abd4:	1885883a 	add	r2,r3,r2
  82abd8:	e0bfbb15 	stw	r2,-276(fp)
  82abdc:	e0ffc917 	ldw	r3,-220(fp)
  82abe0:	e0bfbd17 	ldw	r2,-268(fp)
  82abe4:	18a1c83a 	sub	r16,r3,r2
  82abe8:	014cb184 	movi	r5,12998
  82abec:	e13fc417 	ldw	r4,-240(fp)
  82abf0:	08301e80 	call	8301e8 <__mulsi3>
  82abf4:	8085883a 	add	r2,r16,r2
  82abf8:	e0ffca17 	ldw	r3,-216(fp)
  82abfc:	1885883a 	add	r2,r3,r2
  82ac00:	e0bfca15 	stw	r2,-216(fp)
  82ac04:	017a9704 	movi	r5,-5540
  82ac08:	e13fc017 	ldw	r4,-256(fp)
  82ac0c:	08301e80 	call	8301e8 <__mulsi3>
  82ac10:	1007883a 	mov	r3,r2
  82ac14:	e0bfc817 	ldw	r2,-224(fp)
  82ac18:	18a1883a 	add	r16,r3,r2
  82ac1c:	01702304 	movi	r5,-16244
  82ac20:	e13fc417 	ldw	r4,-240(fp)
  82ac24:	08301e80 	call	8301e8 <__mulsi3>
  82ac28:	8085883a 	add	r2,r16,r2
  82ac2c:	e0ffc917 	ldw	r3,-220(fp)
  82ac30:	1885883a 	add	r2,r3,r2
  82ac34:	e0bfc915 	stw	r2,-220(fp)
  82ac38:	e0ffc017 	ldw	r3,-256(fp)
  82ac3c:	e0bfc417 	ldw	r2,-240(fp)
  82ac40:	1885c83a 	sub	r2,r3,r2
  82ac44:	e0bfc015 	stw	r2,-256(fp)
  82ac48:	e0ffc117 	ldw	r3,-252(fp)
  82ac4c:	e0bfc217 	ldw	r2,-248(fp)
  82ac50:	1885c83a 	sub	r2,r3,r2
  82ac54:	e0bfc115 	stw	r2,-252(fp)
  82ac58:	e0ffc017 	ldw	r3,-256(fp)
  82ac5c:	e0bfc117 	ldw	r2,-252(fp)
  82ac60:	1885883a 	add	r2,r3,r2
  82ac64:	01445444 	movi	r5,4433
  82ac68:	1009883a 	mov	r4,r2
  82ac6c:	08301e80 	call	8301e8 <__mulsi3>
  82ac70:	e0bfc215 	stw	r2,-248(fp)
  82ac74:	01461f84 	movi	r5,6270
  82ac78:	e13fc017 	ldw	r4,-256(fp)
  82ac7c:	08301e80 	call	8301e8 <__mulsi3>
  82ac80:	1007883a 	mov	r3,r2
  82ac84:	e0bfc217 	ldw	r2,-248(fp)
  82ac88:	1885883a 	add	r2,r3,r2
  82ac8c:	e0bfbd15 	stw	r2,-268(fp)
  82ac90:	017137c4 	movi	r5,-15137
  82ac94:	e13fc117 	ldw	r4,-252(fp)
  82ac98:	08301e80 	call	8301e8 <__mulsi3>
  82ac9c:	1007883a 	mov	r3,r2
  82aca0:	e0bfc217 	ldw	r2,-248(fp)
  82aca4:	1885883a 	add	r2,r3,r2
  82aca8:	e0bfc815 	stw	r2,-224(fp)
  82acac:	e0ffbc17 	ldw	r3,-272(fp)
  82acb0:	e0bfba17 	ldw	r2,-280(fp)
  82acb4:	1885883a 	add	r2,r3,r2
  82acb8:	1005d4ba 	srai	r2,r2,18
  82acbc:	1080ffcc 	andi	r2,r2,1023
  82acc0:	e0ffb917 	ldw	r3,-284(fp)
  82acc4:	1885883a 	add	r2,r3,r2
  82acc8:	10c00003 	ldbu	r3,0(r2)
  82accc:	e0bfc317 	ldw	r2,-244(fp)
  82acd0:	10c00005 	stb	r3,0(r2)
  82acd4:	e0bfc317 	ldw	r2,-244(fp)
  82acd8:	108002c4 	addi	r2,r2,11
  82acdc:	e13fbc17 	ldw	r4,-272(fp)
  82ace0:	e0ffba17 	ldw	r3,-280(fp)
  82ace4:	20c7c83a 	sub	r3,r4,r3
  82ace8:	1807d4ba 	srai	r3,r3,18
  82acec:	18c0ffcc 	andi	r3,r3,1023
  82acf0:	e13fb917 	ldw	r4,-284(fp)
  82acf4:	20c7883a 	add	r3,r4,r3
  82acf8:	18c00003 	ldbu	r3,0(r3)
  82acfc:	10c00005 	stb	r3,0(r2)
  82ad00:	e0bfc317 	ldw	r2,-244(fp)
  82ad04:	10800044 	addi	r2,r2,1
  82ad08:	e13fbe17 	ldw	r4,-264(fp)
  82ad0c:	e0ffbd17 	ldw	r3,-268(fp)
  82ad10:	20c7883a 	add	r3,r4,r3
  82ad14:	1807d4ba 	srai	r3,r3,18
  82ad18:	18c0ffcc 	andi	r3,r3,1023
  82ad1c:	e13fb917 	ldw	r4,-284(fp)
  82ad20:	20c7883a 	add	r3,r4,r3
  82ad24:	18c00003 	ldbu	r3,0(r3)
  82ad28:	10c00005 	stb	r3,0(r2)
  82ad2c:	e0bfc317 	ldw	r2,-244(fp)
  82ad30:	10800284 	addi	r2,r2,10
  82ad34:	e13fbe17 	ldw	r4,-264(fp)
  82ad38:	e0ffbd17 	ldw	r3,-268(fp)
  82ad3c:	20c7c83a 	sub	r3,r4,r3
  82ad40:	1807d4ba 	srai	r3,r3,18
  82ad44:	18c0ffcc 	andi	r3,r3,1023
  82ad48:	e13fb917 	ldw	r4,-284(fp)
  82ad4c:	20c7883a 	add	r3,r4,r3
  82ad50:	18c00003 	ldbu	r3,0(r3)
  82ad54:	10c00005 	stb	r3,0(r2)
  82ad58:	e0bfc317 	ldw	r2,-244(fp)
  82ad5c:	10800084 	addi	r2,r2,2
  82ad60:	e13fbf17 	ldw	r4,-260(fp)
  82ad64:	e0ffbb17 	ldw	r3,-276(fp)
  82ad68:	20c7883a 	add	r3,r4,r3
  82ad6c:	1807d4ba 	srai	r3,r3,18
  82ad70:	18c0ffcc 	andi	r3,r3,1023
  82ad74:	e13fb917 	ldw	r4,-284(fp)
  82ad78:	20c7883a 	add	r3,r4,r3
  82ad7c:	18c00003 	ldbu	r3,0(r3)
  82ad80:	10c00005 	stb	r3,0(r2)
  82ad84:	e0bfc317 	ldw	r2,-244(fp)
  82ad88:	10800244 	addi	r2,r2,9
  82ad8c:	e13fbf17 	ldw	r4,-260(fp)
  82ad90:	e0ffbb17 	ldw	r3,-276(fp)
  82ad94:	20c7c83a 	sub	r3,r4,r3
  82ad98:	1807d4ba 	srai	r3,r3,18
  82ad9c:	18c0ffcc 	andi	r3,r3,1023
  82ada0:	e13fb917 	ldw	r4,-284(fp)
  82ada4:	20c7883a 	add	r3,r4,r3
  82ada8:	18c00003 	ldbu	r3,0(r3)
  82adac:	10c00005 	stb	r3,0(r2)
  82adb0:	e0bfc317 	ldw	r2,-244(fp)
  82adb4:	108000c4 	addi	r2,r2,3
  82adb8:	e13fc717 	ldw	r4,-228(fp)
  82adbc:	e0ffca17 	ldw	r3,-216(fp)
  82adc0:	20c7883a 	add	r3,r4,r3
  82adc4:	1807d4ba 	srai	r3,r3,18
  82adc8:	18c0ffcc 	andi	r3,r3,1023
  82adcc:	e13fb917 	ldw	r4,-284(fp)
  82add0:	20c7883a 	add	r3,r4,r3
  82add4:	18c00003 	ldbu	r3,0(r3)
  82add8:	10c00005 	stb	r3,0(r2)
  82addc:	e0bfc317 	ldw	r2,-244(fp)
  82ade0:	10800204 	addi	r2,r2,8
  82ade4:	e13fc717 	ldw	r4,-228(fp)
  82ade8:	e0ffca17 	ldw	r3,-216(fp)
  82adec:	20c7c83a 	sub	r3,r4,r3
  82adf0:	1807d4ba 	srai	r3,r3,18
  82adf4:	18c0ffcc 	andi	r3,r3,1023
  82adf8:	e13fb917 	ldw	r4,-284(fp)
  82adfc:	20c7883a 	add	r3,r4,r3
  82ae00:	18c00003 	ldbu	r3,0(r3)
  82ae04:	10c00005 	stb	r3,0(r2)
  82ae08:	e0bfc317 	ldw	r2,-244(fp)
  82ae0c:	10800104 	addi	r2,r2,4
  82ae10:	e13fc517 	ldw	r4,-236(fp)
  82ae14:	e0ffc817 	ldw	r3,-224(fp)
  82ae18:	20c7883a 	add	r3,r4,r3
  82ae1c:	1807d4ba 	srai	r3,r3,18
  82ae20:	18c0ffcc 	andi	r3,r3,1023
  82ae24:	e13fb917 	ldw	r4,-284(fp)
  82ae28:	20c7883a 	add	r3,r4,r3
  82ae2c:	18c00003 	ldbu	r3,0(r3)
  82ae30:	10c00005 	stb	r3,0(r2)
  82ae34:	e0bfc317 	ldw	r2,-244(fp)
  82ae38:	108001c4 	addi	r2,r2,7
  82ae3c:	e13fc517 	ldw	r4,-236(fp)
  82ae40:	e0ffc817 	ldw	r3,-224(fp)
  82ae44:	20c7c83a 	sub	r3,r4,r3
  82ae48:	1807d4ba 	srai	r3,r3,18
  82ae4c:	18c0ffcc 	andi	r3,r3,1023
  82ae50:	e13fb917 	ldw	r4,-284(fp)
  82ae54:	20c7883a 	add	r3,r4,r3
  82ae58:	18c00003 	ldbu	r3,0(r3)
  82ae5c:	10c00005 	stb	r3,0(r2)
  82ae60:	e0bfc317 	ldw	r2,-244(fp)
  82ae64:	10800144 	addi	r2,r2,5
  82ae68:	e13fc617 	ldw	r4,-232(fp)
  82ae6c:	e0ffc917 	ldw	r3,-220(fp)
  82ae70:	20c7883a 	add	r3,r4,r3
  82ae74:	1807d4ba 	srai	r3,r3,18
  82ae78:	18c0ffcc 	andi	r3,r3,1023
  82ae7c:	e13fb917 	ldw	r4,-284(fp)
  82ae80:	20c7883a 	add	r3,r4,r3
  82ae84:	18c00003 	ldbu	r3,0(r3)
  82ae88:	10c00005 	stb	r3,0(r2)
  82ae8c:	e0bfc317 	ldw	r2,-244(fp)
  82ae90:	10800184 	addi	r2,r2,6
  82ae94:	e13fc617 	ldw	r4,-232(fp)
  82ae98:	e0ffc917 	ldw	r3,-220(fp)
  82ae9c:	20c7c83a 	sub	r3,r4,r3
  82aea0:	1807d4ba 	srai	r3,r3,18
  82aea4:	18c0ffcc 	andi	r3,r3,1023
  82aea8:	e13fb917 	ldw	r4,-284(fp)
  82aeac:	20c7883a 	add	r3,r4,r3
  82aeb0:	18c00003 	ldbu	r3,0(r3)
  82aeb4:	10c00005 	stb	r3,0(r2)
  82aeb8:	e0bfb717 	ldw	r2,-292(fp)
  82aebc:	10800804 	addi	r2,r2,32
  82aec0:	e0bfb715 	stw	r2,-292(fp)
  82aec4:	e0bfb817 	ldw	r2,-288(fp)
  82aec8:	10800044 	addi	r2,r2,1
  82aecc:	e0bfb815 	stw	r2,-288(fp)
  82aed0:	e0bfb817 	ldw	r2,-288(fp)
  82aed4:	10800190 	cmplti	r2,r2,6
  82aed8:	103ea41e 	bne	r2,zero,82a96c <__alt_mem_epcs_flash_controller_0+0xff82196c>
  82aedc:	0001883a 	nop
  82aee0:	e6ffff04 	addi	sp,fp,-4
  82aee4:	dfc00217 	ldw	ra,8(sp)
  82aee8:	df000117 	ldw	fp,4(sp)
  82aeec:	dc000017 	ldw	r16,0(sp)
  82aef0:	dec00304 	addi	sp,sp,12
  82aef4:	f800283a 	ret

0082aef8 <jpeg_idct_10x5>:
  82aef8:	deffbe04 	addi	sp,sp,-264
  82aefc:	dfc04115 	stw	ra,260(sp)
  82af00:	df004015 	stw	fp,256(sp)
  82af04:	df004004 	addi	fp,sp,256
  82af08:	e13ffc15 	stw	r4,-16(fp)
  82af0c:	e17ffd15 	stw	r5,-12(fp)
  82af10:	e1bffe15 	stw	r6,-8(fp)
  82af14:	e1ffff15 	stw	r7,-4(fp)
  82af18:	e0bffc17 	ldw	r2,-16(fp)
  82af1c:	10805417 	ldw	r2,336(r2)
  82af20:	10bfa004 	addi	r2,r2,-384
  82af24:	e0bfc415 	stw	r2,-240(fp)
  82af28:	e0bffe17 	ldw	r2,-8(fp)
  82af2c:	e0bfc015 	stw	r2,-256(fp)
  82af30:	e0bffd17 	ldw	r2,-12(fp)
  82af34:	10801517 	ldw	r2,84(r2)
  82af38:	e0bfc115 	stw	r2,-252(fp)
  82af3c:	e0bfd404 	addi	r2,fp,-176
  82af40:	e0bfc215 	stw	r2,-248(fp)
  82af44:	e03fc315 	stw	zero,-244(fp)
  82af48:	0000a706 	br	82b1e8 <jpeg_idct_10x5+0x2f0>
  82af4c:	e0bfc017 	ldw	r2,-256(fp)
  82af50:	1080000b 	ldhu	r2,0(r2)
  82af54:	10ffffcc 	andi	r3,r2,65535
  82af58:	18e0001c 	xori	r3,r3,32768
  82af5c:	18e00004 	addi	r3,r3,-32768
  82af60:	e0bfc117 	ldw	r2,-252(fp)
  82af64:	10800017 	ldw	r2,0(r2)
  82af68:	100b883a 	mov	r5,r2
  82af6c:	1809883a 	mov	r4,r3
  82af70:	08301e80 	call	8301e8 <__mulsi3>
  82af74:	e0bfc515 	stw	r2,-236(fp)
  82af78:	e0bfc517 	ldw	r2,-236(fp)
  82af7c:	1004937a 	slli	r2,r2,13
  82af80:	e0bfc515 	stw	r2,-236(fp)
  82af84:	e0bfc517 	ldw	r2,-236(fp)
  82af88:	10810004 	addi	r2,r2,1024
  82af8c:	e0bfc515 	stw	r2,-236(fp)
  82af90:	e0bfc017 	ldw	r2,-256(fp)
  82af94:	10800804 	addi	r2,r2,32
  82af98:	1080000b 	ldhu	r2,0(r2)
  82af9c:	10ffffcc 	andi	r3,r2,65535
  82afa0:	18e0001c 	xori	r3,r3,32768
  82afa4:	18e00004 	addi	r3,r3,-32768
  82afa8:	e0bfc117 	ldw	r2,-252(fp)
  82afac:	10801004 	addi	r2,r2,64
  82afb0:	10800017 	ldw	r2,0(r2)
  82afb4:	100b883a 	mov	r5,r2
  82afb8:	1809883a 	mov	r4,r3
  82afbc:	08301e80 	call	8301e8 <__mulsi3>
  82afc0:	e0bfc615 	stw	r2,-232(fp)
  82afc4:	e0bfc017 	ldw	r2,-256(fp)
  82afc8:	10801004 	addi	r2,r2,64
  82afcc:	1080000b 	ldhu	r2,0(r2)
  82afd0:	10ffffcc 	andi	r3,r2,65535
  82afd4:	18e0001c 	xori	r3,r3,32768
  82afd8:	18e00004 	addi	r3,r3,-32768
  82afdc:	e0bfc117 	ldw	r2,-252(fp)
  82afe0:	10802004 	addi	r2,r2,128
  82afe4:	10800017 	ldw	r2,0(r2)
  82afe8:	100b883a 	mov	r5,r2
  82afec:	1809883a 	mov	r4,r3
  82aff0:	08301e80 	call	8301e8 <__mulsi3>
  82aff4:	e0bfc715 	stw	r2,-228(fp)
  82aff8:	e0ffc617 	ldw	r3,-232(fp)
  82affc:	e0bfc717 	ldw	r2,-228(fp)
  82b000:	1885883a 	add	r2,r3,r2
  82b004:	01465304 	movi	r5,6476
  82b008:	1009883a 	mov	r4,r2
  82b00c:	08301e80 	call	8301e8 <__mulsi3>
  82b010:	e0bfc815 	stw	r2,-224(fp)
  82b014:	e0ffc617 	ldw	r3,-232(fp)
  82b018:	e0bfc717 	ldw	r2,-228(fp)
  82b01c:	1885c83a 	sub	r2,r3,r2
  82b020:	0142d404 	movi	r5,2896
  82b024:	1009883a 	mov	r4,r2
  82b028:	08301e80 	call	8301e8 <__mulsi3>
  82b02c:	e0bfc915 	stw	r2,-220(fp)
  82b030:	e0ffc517 	ldw	r3,-236(fp)
  82b034:	e0bfc917 	ldw	r2,-220(fp)
  82b038:	1885883a 	add	r2,r3,r2
  82b03c:	e0bfca15 	stw	r2,-216(fp)
  82b040:	e0ffca17 	ldw	r3,-216(fp)
  82b044:	e0bfc817 	ldw	r2,-224(fp)
  82b048:	1885883a 	add	r2,r3,r2
  82b04c:	e0bfcb15 	stw	r2,-212(fp)
  82b050:	e0ffca17 	ldw	r3,-216(fp)
  82b054:	e0bfc817 	ldw	r2,-224(fp)
  82b058:	1885c83a 	sub	r2,r3,r2
  82b05c:	e0bfcc15 	stw	r2,-208(fp)
  82b060:	e0bfc917 	ldw	r2,-220(fp)
  82b064:	1085883a 	add	r2,r2,r2
  82b068:	1085883a 	add	r2,r2,r2
  82b06c:	1007883a 	mov	r3,r2
  82b070:	e0bfc517 	ldw	r2,-236(fp)
  82b074:	10c5c83a 	sub	r2,r2,r3
  82b078:	e0bfc515 	stw	r2,-236(fp)
  82b07c:	e0bfc017 	ldw	r2,-256(fp)
  82b080:	10800404 	addi	r2,r2,16
  82b084:	1080000b 	ldhu	r2,0(r2)
  82b088:	10ffffcc 	andi	r3,r2,65535
  82b08c:	18e0001c 	xori	r3,r3,32768
  82b090:	18e00004 	addi	r3,r3,-32768
  82b094:	e0bfc117 	ldw	r2,-252(fp)
  82b098:	10800804 	addi	r2,r2,32
  82b09c:	10800017 	ldw	r2,0(r2)
  82b0a0:	100b883a 	mov	r5,r2
  82b0a4:	1809883a 	mov	r4,r3
  82b0a8:	08301e80 	call	8301e8 <__mulsi3>
  82b0ac:	e0bfc915 	stw	r2,-220(fp)
  82b0b0:	e0bfc017 	ldw	r2,-256(fp)
  82b0b4:	10800c04 	addi	r2,r2,48
  82b0b8:	1080000b 	ldhu	r2,0(r2)
  82b0bc:	10ffffcc 	andi	r3,r2,65535
  82b0c0:	18e0001c 	xori	r3,r3,32768
  82b0c4:	18e00004 	addi	r3,r3,-32768
  82b0c8:	e0bfc117 	ldw	r2,-252(fp)
  82b0cc:	10801804 	addi	r2,r2,96
  82b0d0:	10800017 	ldw	r2,0(r2)
  82b0d4:	100b883a 	mov	r5,r2
  82b0d8:	1809883a 	mov	r4,r3
  82b0dc:	08301e80 	call	8301e8 <__mulsi3>
  82b0e0:	e0bfca15 	stw	r2,-216(fp)
  82b0e4:	e0ffc917 	ldw	r3,-220(fp)
  82b0e8:	e0bfca17 	ldw	r2,-216(fp)
  82b0ec:	1885883a 	add	r2,r3,r2
  82b0f0:	0146a684 	movi	r5,6810
  82b0f4:	1009883a 	mov	r4,r2
  82b0f8:	08301e80 	call	8301e8 <__mulsi3>
  82b0fc:	e0bfc815 	stw	r2,-224(fp)
  82b100:	01441c44 	movi	r5,4209
  82b104:	e13fc917 	ldw	r4,-220(fp)
  82b108:	08301e80 	call	8301e8 <__mulsi3>
  82b10c:	1007883a 	mov	r3,r2
  82b110:	e0bfc817 	ldw	r2,-224(fp)
  82b114:	1885883a 	add	r2,r3,r2
  82b118:	e0bfc615 	stw	r2,-232(fp)
  82b11c:	016e9704 	movi	r5,-17828
  82b120:	e13fca17 	ldw	r4,-216(fp)
  82b124:	08301e80 	call	8301e8 <__mulsi3>
  82b128:	1007883a 	mov	r3,r2
  82b12c:	e0bfc817 	ldw	r2,-224(fp)
  82b130:	1885883a 	add	r2,r3,r2
  82b134:	e0bfc715 	stw	r2,-228(fp)
  82b138:	e0ffcb17 	ldw	r3,-212(fp)
  82b13c:	e0bfc617 	ldw	r2,-232(fp)
  82b140:	1885883a 	add	r2,r3,r2
  82b144:	1007d2fa 	srai	r3,r2,11
  82b148:	e0bfc217 	ldw	r2,-248(fp)
  82b14c:	10c00015 	stw	r3,0(r2)
  82b150:	e0bfc217 	ldw	r2,-248(fp)
  82b154:	10802004 	addi	r2,r2,128
  82b158:	e13fcb17 	ldw	r4,-212(fp)
  82b15c:	e0ffc617 	ldw	r3,-232(fp)
  82b160:	20c7c83a 	sub	r3,r4,r3
  82b164:	1807d2fa 	srai	r3,r3,11
  82b168:	10c00015 	stw	r3,0(r2)
  82b16c:	e0bfc217 	ldw	r2,-248(fp)
  82b170:	10800804 	addi	r2,r2,32
  82b174:	e13fcc17 	ldw	r4,-208(fp)
  82b178:	e0ffc717 	ldw	r3,-228(fp)
  82b17c:	20c7883a 	add	r3,r4,r3
  82b180:	1807d2fa 	srai	r3,r3,11
  82b184:	10c00015 	stw	r3,0(r2)
  82b188:	e0bfc217 	ldw	r2,-248(fp)
  82b18c:	10801804 	addi	r2,r2,96
  82b190:	e13fcc17 	ldw	r4,-208(fp)
  82b194:	e0ffc717 	ldw	r3,-228(fp)
  82b198:	20c7c83a 	sub	r3,r4,r3
  82b19c:	1807d2fa 	srai	r3,r3,11
  82b1a0:	10c00015 	stw	r3,0(r2)
  82b1a4:	e0bfc217 	ldw	r2,-248(fp)
  82b1a8:	10801004 	addi	r2,r2,64
  82b1ac:	e0ffc517 	ldw	r3,-236(fp)
  82b1b0:	1807d2fa 	srai	r3,r3,11
  82b1b4:	10c00015 	stw	r3,0(r2)
  82b1b8:	e0bfc317 	ldw	r2,-244(fp)
  82b1bc:	10800044 	addi	r2,r2,1
  82b1c0:	e0bfc315 	stw	r2,-244(fp)
  82b1c4:	e0bfc017 	ldw	r2,-256(fp)
  82b1c8:	10800084 	addi	r2,r2,2
  82b1cc:	e0bfc015 	stw	r2,-256(fp)
  82b1d0:	e0bfc117 	ldw	r2,-252(fp)
  82b1d4:	10800104 	addi	r2,r2,4
  82b1d8:	e0bfc115 	stw	r2,-252(fp)
  82b1dc:	e0bfc217 	ldw	r2,-248(fp)
  82b1e0:	10800104 	addi	r2,r2,4
  82b1e4:	e0bfc215 	stw	r2,-248(fp)
  82b1e8:	e0bfc317 	ldw	r2,-244(fp)
  82b1ec:	10800210 	cmplti	r2,r2,8
  82b1f0:	103f561e 	bne	r2,zero,82af4c <__alt_mem_epcs_flash_controller_0+0xff821f4c>
  82b1f4:	e0bfd404 	addi	r2,fp,-176
  82b1f8:	e0bfc215 	stw	r2,-248(fp)
  82b1fc:	e03fc315 	stw	zero,-244(fp)
  82b200:	00012a06 	br	82b6ac <jpeg_idct_10x5+0x7b4>
  82b204:	e0bfc317 	ldw	r2,-244(fp)
  82b208:	1085883a 	add	r2,r2,r2
  82b20c:	1085883a 	add	r2,r2,r2
  82b210:	1007883a 	mov	r3,r2
  82b214:	e0bfff17 	ldw	r2,-4(fp)
  82b218:	10c5883a 	add	r2,r2,r3
  82b21c:	10c00017 	ldw	r3,0(r2)
  82b220:	e0800217 	ldw	r2,8(fp)
  82b224:	1885883a 	add	r2,r3,r2
  82b228:	e0bfcd15 	stw	r2,-204(fp)
  82b22c:	e0bfc217 	ldw	r2,-248(fp)
  82b230:	10800017 	ldw	r2,0(r2)
  82b234:	10900404 	addi	r2,r2,16400
  82b238:	e0bfca15 	stw	r2,-216(fp)
  82b23c:	e0bfca17 	ldw	r2,-216(fp)
  82b240:	1004937a 	slli	r2,r2,13
  82b244:	e0bfca15 	stw	r2,-216(fp)
  82b248:	e0bfc217 	ldw	r2,-248(fp)
  82b24c:	10800404 	addi	r2,r2,16
  82b250:	10800017 	ldw	r2,0(r2)
  82b254:	e0bfce15 	stw	r2,-200(fp)
  82b258:	01492744 	movi	r5,9373
  82b25c:	e13fce17 	ldw	r4,-200(fp)
  82b260:	08301e80 	call	8301e8 <__mulsi3>
  82b264:	e0bfc815 	stw	r2,-224(fp)
  82b268:	01437f04 	movi	r5,3580
  82b26c:	e13fce17 	ldw	r4,-200(fp)
  82b270:	08301e80 	call	8301e8 <__mulsi3>
  82b274:	e0bfc915 	stw	r2,-220(fp)
  82b278:	e0ffca17 	ldw	r3,-216(fp)
  82b27c:	e0bfc817 	ldw	r2,-224(fp)
  82b280:	1885883a 	add	r2,r3,r2
  82b284:	e0bfcb15 	stw	r2,-212(fp)
  82b288:	e0ffca17 	ldw	r3,-216(fp)
  82b28c:	e0bfc917 	ldw	r2,-220(fp)
  82b290:	1885c83a 	sub	r2,r3,r2
  82b294:	e0bfcc15 	stw	r2,-208(fp)
  82b298:	e0ffc817 	ldw	r3,-224(fp)
  82b29c:	e0bfc917 	ldw	r2,-220(fp)
  82b2a0:	1885c83a 	sub	r2,r3,r2
  82b2a4:	1085883a 	add	r2,r2,r2
  82b2a8:	1007883a 	mov	r3,r2
  82b2ac:	e0bfca17 	ldw	r2,-216(fp)
  82b2b0:	10c5c83a 	sub	r2,r2,r3
  82b2b4:	e0bfcf15 	stw	r2,-196(fp)
  82b2b8:	e0bfc217 	ldw	r2,-248(fp)
  82b2bc:	10800204 	addi	r2,r2,8
  82b2c0:	10800017 	ldw	r2,0(r2)
  82b2c4:	e0bfc915 	stw	r2,-220(fp)
  82b2c8:	e0bfc217 	ldw	r2,-248(fp)
  82b2cc:	10800604 	addi	r2,r2,24
  82b2d0:	10800017 	ldw	r2,0(r2)
  82b2d4:	e0bfca15 	stw	r2,-216(fp)
  82b2d8:	e0ffc917 	ldw	r3,-220(fp)
  82b2dc:	e0bfca17 	ldw	r2,-216(fp)
  82b2e0:	1885883a 	add	r2,r3,r2
  82b2e4:	0146a684 	movi	r5,6810
  82b2e8:	1009883a 	mov	r4,r2
  82b2ec:	08301e80 	call	8301e8 <__mulsi3>
  82b2f0:	e0bfc815 	stw	r2,-224(fp)
  82b2f4:	01441c44 	movi	r5,4209
  82b2f8:	e13fc917 	ldw	r4,-220(fp)
  82b2fc:	08301e80 	call	8301e8 <__mulsi3>
  82b300:	1007883a 	mov	r3,r2
  82b304:	e0bfc817 	ldw	r2,-224(fp)
  82b308:	1885883a 	add	r2,r3,r2
  82b30c:	e0bfc515 	stw	r2,-236(fp)
  82b310:	016e9704 	movi	r5,-17828
  82b314:	e13fca17 	ldw	r4,-216(fp)
  82b318:	08301e80 	call	8301e8 <__mulsi3>
  82b31c:	1007883a 	mov	r3,r2
  82b320:	e0bfc817 	ldw	r2,-224(fp)
  82b324:	1885883a 	add	r2,r3,r2
  82b328:	e0bfc615 	stw	r2,-232(fp)
  82b32c:	e0ffcb17 	ldw	r3,-212(fp)
  82b330:	e0bfc517 	ldw	r2,-236(fp)
  82b334:	1885883a 	add	r2,r3,r2
  82b338:	e0bfd015 	stw	r2,-192(fp)
  82b33c:	e0ffcb17 	ldw	r3,-212(fp)
  82b340:	e0bfc517 	ldw	r2,-236(fp)
  82b344:	1885c83a 	sub	r2,r3,r2
  82b348:	e0bfd115 	stw	r2,-188(fp)
  82b34c:	e0ffcc17 	ldw	r3,-208(fp)
  82b350:	e0bfc617 	ldw	r2,-232(fp)
  82b354:	1885883a 	add	r2,r3,r2
  82b358:	e0bfd215 	stw	r2,-184(fp)
  82b35c:	e0ffcc17 	ldw	r3,-208(fp)
  82b360:	e0bfc617 	ldw	r2,-232(fp)
  82b364:	1885c83a 	sub	r2,r3,r2
  82b368:	e0bfd315 	stw	r2,-180(fp)
  82b36c:	e0bfc217 	ldw	r2,-248(fp)
  82b370:	10800104 	addi	r2,r2,4
  82b374:	10800017 	ldw	r2,0(r2)
  82b378:	e0bfc815 	stw	r2,-224(fp)
  82b37c:	e0bfc217 	ldw	r2,-248(fp)
  82b380:	10800304 	addi	r2,r2,12
  82b384:	10800017 	ldw	r2,0(r2)
  82b388:	e0bfc915 	stw	r2,-220(fp)
  82b38c:	e0bfc217 	ldw	r2,-248(fp)
  82b390:	10800504 	addi	r2,r2,20
  82b394:	10800017 	ldw	r2,0(r2)
  82b398:	e0bfca15 	stw	r2,-216(fp)
  82b39c:	e0bfca17 	ldw	r2,-216(fp)
  82b3a0:	1004937a 	slli	r2,r2,13
  82b3a4:	e0bfca15 	stw	r2,-216(fp)
  82b3a8:	e0bfc217 	ldw	r2,-248(fp)
  82b3ac:	10800704 	addi	r2,r2,28
  82b3b0:	10800017 	ldw	r2,0(r2)
  82b3b4:	e0bfce15 	stw	r2,-200(fp)
  82b3b8:	e0ffc917 	ldw	r3,-220(fp)
  82b3bc:	e0bfce17 	ldw	r2,-200(fp)
  82b3c0:	1885883a 	add	r2,r3,r2
  82b3c4:	e0bfcc15 	stw	r2,-208(fp)
  82b3c8:	e0ffc917 	ldw	r3,-220(fp)
  82b3cc:	e0bfce17 	ldw	r2,-200(fp)
  82b3d0:	1885c83a 	sub	r2,r3,r2
  82b3d4:	e0bfc615 	stw	r2,-232(fp)
  82b3d8:	014278c4 	movi	r5,2531
  82b3dc:	e13fc617 	ldw	r4,-232(fp)
  82b3e0:	08301e80 	call	8301e8 <__mulsi3>
  82b3e4:	e0bfc515 	stw	r2,-236(fp)
  82b3e8:	01479bc4 	movi	r5,7791
  82b3ec:	e13fcc17 	ldw	r4,-208(fp)
  82b3f0:	08301e80 	call	8301e8 <__mulsi3>
  82b3f4:	e0bfc915 	stw	r2,-220(fp)
  82b3f8:	e0ffca17 	ldw	r3,-216(fp)
  82b3fc:	e0bfc517 	ldw	r2,-236(fp)
  82b400:	1885883a 	add	r2,r3,r2
  82b404:	e0bfce15 	stw	r2,-200(fp)
  82b408:	014b2cc4 	movi	r5,11443
  82b40c:	e13fc817 	ldw	r4,-224(fp)
  82b410:	08301e80 	call	8301e8 <__mulsi3>
  82b414:	1007883a 	mov	r3,r2
  82b418:	e0bfc917 	ldw	r2,-220(fp)
  82b41c:	1887883a 	add	r3,r3,r2
  82b420:	e0bfce17 	ldw	r2,-200(fp)
  82b424:	1885883a 	add	r2,r3,r2
  82b428:	e0bfcb15 	stw	r2,-212(fp)
  82b42c:	0141c504 	movi	r5,1812
  82b430:	e13fc817 	ldw	r4,-224(fp)
  82b434:	08301e80 	call	8301e8 <__mulsi3>
  82b438:	1007883a 	mov	r3,r2
  82b43c:	e0bfc917 	ldw	r2,-220(fp)
  82b440:	1887c83a 	sub	r3,r3,r2
  82b444:	e0bfce17 	ldw	r2,-200(fp)
  82b448:	1885883a 	add	r2,r3,r2
  82b44c:	e0bfc715 	stw	r2,-228(fp)
  82b450:	0144b3c4 	movi	r5,4815
  82b454:	e13fcc17 	ldw	r4,-208(fp)
  82b458:	08301e80 	call	8301e8 <__mulsi3>
  82b45c:	e0bfc915 	stw	r2,-220(fp)
  82b460:	e0ffca17 	ldw	r3,-216(fp)
  82b464:	e0bfc517 	ldw	r2,-236(fp)
  82b468:	1887c83a 	sub	r3,r3,r2
  82b46c:	e0bfc617 	ldw	r2,-232(fp)
  82b470:	1004933a 	slli	r2,r2,12
  82b474:	1885c83a 	sub	r2,r3,r2
  82b478:	e0bfce15 	stw	r2,-200(fp)
  82b47c:	e0ffc817 	ldw	r3,-224(fp)
  82b480:	e0bfc617 	ldw	r2,-232(fp)
  82b484:	1885c83a 	sub	r2,r3,r2
  82b488:	1006937a 	slli	r3,r2,13
  82b48c:	e0bfca17 	ldw	r2,-216(fp)
  82b490:	1885c83a 	sub	r2,r3,r2
  82b494:	e0bfc515 	stw	r2,-236(fp)
  82b498:	014a14c4 	movi	r5,10323
  82b49c:	e13fc817 	ldw	r4,-224(fp)
  82b4a0:	08301e80 	call	8301e8 <__mulsi3>
  82b4a4:	1007883a 	mov	r3,r2
  82b4a8:	e0bfc917 	ldw	r2,-220(fp)
  82b4ac:	1887c83a 	sub	r3,r3,r2
  82b4b0:	e0bfce17 	ldw	r2,-200(fp)
  82b4b4:	1885c83a 	sub	r2,r3,r2
  82b4b8:	e0bfcc15 	stw	r2,-208(fp)
  82b4bc:	01452304 	movi	r5,5260
  82b4c0:	e13fc817 	ldw	r4,-224(fp)
  82b4c4:	08301e80 	call	8301e8 <__mulsi3>
  82b4c8:	1007883a 	mov	r3,r2
  82b4cc:	e0bfc917 	ldw	r2,-220(fp)
  82b4d0:	1887c83a 	sub	r3,r3,r2
  82b4d4:	e0bfce17 	ldw	r2,-200(fp)
  82b4d8:	1885883a 	add	r2,r3,r2
  82b4dc:	e0bfc615 	stw	r2,-232(fp)
  82b4e0:	e0ffd017 	ldw	r3,-192(fp)
  82b4e4:	e0bfcb17 	ldw	r2,-212(fp)
  82b4e8:	1885883a 	add	r2,r3,r2
  82b4ec:	1005d4ba 	srai	r2,r2,18
  82b4f0:	1080ffcc 	andi	r2,r2,1023
  82b4f4:	e0ffc417 	ldw	r3,-240(fp)
  82b4f8:	1885883a 	add	r2,r3,r2
  82b4fc:	10c00003 	ldbu	r3,0(r2)
  82b500:	e0bfcd17 	ldw	r2,-204(fp)
  82b504:	10c00005 	stb	r3,0(r2)
  82b508:	e0bfcd17 	ldw	r2,-204(fp)
  82b50c:	10800244 	addi	r2,r2,9
  82b510:	e13fd017 	ldw	r4,-192(fp)
  82b514:	e0ffcb17 	ldw	r3,-212(fp)
  82b518:	20c7c83a 	sub	r3,r4,r3
  82b51c:	1807d4ba 	srai	r3,r3,18
  82b520:	18c0ffcc 	andi	r3,r3,1023
  82b524:	e13fc417 	ldw	r4,-240(fp)
  82b528:	20c7883a 	add	r3,r4,r3
  82b52c:	18c00003 	ldbu	r3,0(r3)
  82b530:	10c00005 	stb	r3,0(r2)
  82b534:	e0bfcd17 	ldw	r2,-204(fp)
  82b538:	10800044 	addi	r2,r2,1
  82b53c:	e13fd217 	ldw	r4,-184(fp)
  82b540:	e0ffcc17 	ldw	r3,-208(fp)
  82b544:	20c7883a 	add	r3,r4,r3
  82b548:	1807d4ba 	srai	r3,r3,18
  82b54c:	18c0ffcc 	andi	r3,r3,1023
  82b550:	e13fc417 	ldw	r4,-240(fp)
  82b554:	20c7883a 	add	r3,r4,r3
  82b558:	18c00003 	ldbu	r3,0(r3)
  82b55c:	10c00005 	stb	r3,0(r2)
  82b560:	e0bfcd17 	ldw	r2,-204(fp)
  82b564:	10800204 	addi	r2,r2,8
  82b568:	e13fd217 	ldw	r4,-184(fp)
  82b56c:	e0ffcc17 	ldw	r3,-208(fp)
  82b570:	20c7c83a 	sub	r3,r4,r3
  82b574:	1807d4ba 	srai	r3,r3,18
  82b578:	18c0ffcc 	andi	r3,r3,1023
  82b57c:	e13fc417 	ldw	r4,-240(fp)
  82b580:	20c7883a 	add	r3,r4,r3
  82b584:	18c00003 	ldbu	r3,0(r3)
  82b588:	10c00005 	stb	r3,0(r2)
  82b58c:	e0bfcd17 	ldw	r2,-204(fp)
  82b590:	10800084 	addi	r2,r2,2
  82b594:	e13fcf17 	ldw	r4,-196(fp)
  82b598:	e0ffc517 	ldw	r3,-236(fp)
  82b59c:	20c7883a 	add	r3,r4,r3
  82b5a0:	1807d4ba 	srai	r3,r3,18
  82b5a4:	18c0ffcc 	andi	r3,r3,1023
  82b5a8:	e13fc417 	ldw	r4,-240(fp)
  82b5ac:	20c7883a 	add	r3,r4,r3
  82b5b0:	18c00003 	ldbu	r3,0(r3)
  82b5b4:	10c00005 	stb	r3,0(r2)
  82b5b8:	e0bfcd17 	ldw	r2,-204(fp)
  82b5bc:	108001c4 	addi	r2,r2,7
  82b5c0:	e13fcf17 	ldw	r4,-196(fp)
  82b5c4:	e0ffc517 	ldw	r3,-236(fp)
  82b5c8:	20c7c83a 	sub	r3,r4,r3
  82b5cc:	1807d4ba 	srai	r3,r3,18
  82b5d0:	18c0ffcc 	andi	r3,r3,1023
  82b5d4:	e13fc417 	ldw	r4,-240(fp)
  82b5d8:	20c7883a 	add	r3,r4,r3
  82b5dc:	18c00003 	ldbu	r3,0(r3)
  82b5e0:	10c00005 	stb	r3,0(r2)
  82b5e4:	e0bfcd17 	ldw	r2,-204(fp)
  82b5e8:	108000c4 	addi	r2,r2,3
  82b5ec:	e13fd317 	ldw	r4,-180(fp)
  82b5f0:	e0ffc617 	ldw	r3,-232(fp)
  82b5f4:	20c7883a 	add	r3,r4,r3
  82b5f8:	1807d4ba 	srai	r3,r3,18
  82b5fc:	18c0ffcc 	andi	r3,r3,1023
  82b600:	e13fc417 	ldw	r4,-240(fp)
  82b604:	20c7883a 	add	r3,r4,r3
  82b608:	18c00003 	ldbu	r3,0(r3)
  82b60c:	10c00005 	stb	r3,0(r2)
  82b610:	e0bfcd17 	ldw	r2,-204(fp)
  82b614:	10800184 	addi	r2,r2,6
  82b618:	e13fd317 	ldw	r4,-180(fp)
  82b61c:	e0ffc617 	ldw	r3,-232(fp)
  82b620:	20c7c83a 	sub	r3,r4,r3
  82b624:	1807d4ba 	srai	r3,r3,18
  82b628:	18c0ffcc 	andi	r3,r3,1023
  82b62c:	e13fc417 	ldw	r4,-240(fp)
  82b630:	20c7883a 	add	r3,r4,r3
  82b634:	18c00003 	ldbu	r3,0(r3)
  82b638:	10c00005 	stb	r3,0(r2)
  82b63c:	e0bfcd17 	ldw	r2,-204(fp)
  82b640:	10800104 	addi	r2,r2,4
  82b644:	e13fd117 	ldw	r4,-188(fp)
  82b648:	e0ffc717 	ldw	r3,-228(fp)
  82b64c:	20c7883a 	add	r3,r4,r3
  82b650:	1807d4ba 	srai	r3,r3,18
  82b654:	18c0ffcc 	andi	r3,r3,1023
  82b658:	e13fc417 	ldw	r4,-240(fp)
  82b65c:	20c7883a 	add	r3,r4,r3
  82b660:	18c00003 	ldbu	r3,0(r3)
  82b664:	10c00005 	stb	r3,0(r2)
  82b668:	e0bfcd17 	ldw	r2,-204(fp)
  82b66c:	10800144 	addi	r2,r2,5
  82b670:	e13fd117 	ldw	r4,-188(fp)
  82b674:	e0ffc717 	ldw	r3,-228(fp)
  82b678:	20c7c83a 	sub	r3,r4,r3
  82b67c:	1807d4ba 	srai	r3,r3,18
  82b680:	18c0ffcc 	andi	r3,r3,1023
  82b684:	e13fc417 	ldw	r4,-240(fp)
  82b688:	20c7883a 	add	r3,r4,r3
  82b68c:	18c00003 	ldbu	r3,0(r3)
  82b690:	10c00005 	stb	r3,0(r2)
  82b694:	e0bfc217 	ldw	r2,-248(fp)
  82b698:	10800804 	addi	r2,r2,32
  82b69c:	e0bfc215 	stw	r2,-248(fp)
  82b6a0:	e0bfc317 	ldw	r2,-244(fp)
  82b6a4:	10800044 	addi	r2,r2,1
  82b6a8:	e0bfc315 	stw	r2,-244(fp)
  82b6ac:	e0bfc317 	ldw	r2,-244(fp)
  82b6b0:	10800150 	cmplti	r2,r2,5
  82b6b4:	103ed31e 	bne	r2,zero,82b204 <__alt_mem_epcs_flash_controller_0+0xff822204>
  82b6b8:	0001883a 	nop
  82b6bc:	e037883a 	mov	sp,fp
  82b6c0:	dfc00117 	ldw	ra,4(sp)
  82b6c4:	df000017 	ldw	fp,0(sp)
  82b6c8:	dec00204 	addi	sp,sp,8
  82b6cc:	f800283a 	ret

0082b6d0 <jpeg_idct_8x4>:
  82b6d0:	deffc904 	addi	sp,sp,-220
  82b6d4:	dfc03615 	stw	ra,216(sp)
  82b6d8:	df003515 	stw	fp,212(sp)
  82b6dc:	df003504 	addi	fp,sp,212
  82b6e0:	e13ffc15 	stw	r4,-16(fp)
  82b6e4:	e17ffd15 	stw	r5,-12(fp)
  82b6e8:	e1bffe15 	stw	r6,-8(fp)
  82b6ec:	e1ffff15 	stw	r7,-4(fp)
  82b6f0:	e0bffc17 	ldw	r2,-16(fp)
  82b6f4:	10805417 	ldw	r2,336(r2)
  82b6f8:	10bfa004 	addi	r2,r2,-384
  82b6fc:	e0bfcf15 	stw	r2,-196(fp)
  82b700:	e0bffe17 	ldw	r2,-8(fp)
  82b704:	e0bfcb15 	stw	r2,-212(fp)
  82b708:	e0bffd17 	ldw	r2,-12(fp)
  82b70c:	10801517 	ldw	r2,84(r2)
  82b710:	e0bfcc15 	stw	r2,-208(fp)
  82b714:	e0bfdc04 	addi	r2,fp,-144
  82b718:	e0bfcd15 	stw	r2,-204(fp)
  82b71c:	e03fce15 	stw	zero,-200(fp)
  82b720:	00007b06 	br	82b910 <jpeg_idct_8x4+0x240>
  82b724:	e0bfcb17 	ldw	r2,-212(fp)
  82b728:	1080000b 	ldhu	r2,0(r2)
  82b72c:	10ffffcc 	andi	r3,r2,65535
  82b730:	18e0001c 	xori	r3,r3,32768
  82b734:	18e00004 	addi	r3,r3,-32768
  82b738:	e0bfcc17 	ldw	r2,-208(fp)
  82b73c:	10800017 	ldw	r2,0(r2)
  82b740:	100b883a 	mov	r5,r2
  82b744:	1809883a 	mov	r4,r3
  82b748:	08301e80 	call	8301e8 <__mulsi3>
  82b74c:	e0bfd015 	stw	r2,-192(fp)
  82b750:	e0bfcb17 	ldw	r2,-212(fp)
  82b754:	10800804 	addi	r2,r2,32
  82b758:	1080000b 	ldhu	r2,0(r2)
  82b75c:	10ffffcc 	andi	r3,r2,65535
  82b760:	18e0001c 	xori	r3,r3,32768
  82b764:	18e00004 	addi	r3,r3,-32768
  82b768:	e0bfcc17 	ldw	r2,-208(fp)
  82b76c:	10801004 	addi	r2,r2,64
  82b770:	10800017 	ldw	r2,0(r2)
  82b774:	100b883a 	mov	r5,r2
  82b778:	1809883a 	mov	r4,r3
  82b77c:	08301e80 	call	8301e8 <__mulsi3>
  82b780:	e0bfd115 	stw	r2,-188(fp)
  82b784:	e0ffd017 	ldw	r3,-192(fp)
  82b788:	e0bfd117 	ldw	r2,-188(fp)
  82b78c:	1885883a 	add	r2,r3,r2
  82b790:	1085883a 	add	r2,r2,r2
  82b794:	1085883a 	add	r2,r2,r2
  82b798:	e0bfd215 	stw	r2,-184(fp)
  82b79c:	e0ffd017 	ldw	r3,-192(fp)
  82b7a0:	e0bfd117 	ldw	r2,-188(fp)
  82b7a4:	1885c83a 	sub	r2,r3,r2
  82b7a8:	1085883a 	add	r2,r2,r2
  82b7ac:	1085883a 	add	r2,r2,r2
  82b7b0:	e0bfd315 	stw	r2,-180(fp)
  82b7b4:	e0bfcb17 	ldw	r2,-212(fp)
  82b7b8:	10800404 	addi	r2,r2,16
  82b7bc:	1080000b 	ldhu	r2,0(r2)
  82b7c0:	10ffffcc 	andi	r3,r2,65535
  82b7c4:	18e0001c 	xori	r3,r3,32768
  82b7c8:	18e00004 	addi	r3,r3,-32768
  82b7cc:	e0bfcc17 	ldw	r2,-208(fp)
  82b7d0:	10800804 	addi	r2,r2,32
  82b7d4:	10800017 	ldw	r2,0(r2)
  82b7d8:	100b883a 	mov	r5,r2
  82b7dc:	1809883a 	mov	r4,r3
  82b7e0:	08301e80 	call	8301e8 <__mulsi3>
  82b7e4:	e0bfd415 	stw	r2,-176(fp)
  82b7e8:	e0bfcb17 	ldw	r2,-212(fp)
  82b7ec:	10800c04 	addi	r2,r2,48
  82b7f0:	1080000b 	ldhu	r2,0(r2)
  82b7f4:	10ffffcc 	andi	r3,r2,65535
  82b7f8:	18e0001c 	xori	r3,r3,32768
  82b7fc:	18e00004 	addi	r3,r3,-32768
  82b800:	e0bfcc17 	ldw	r2,-208(fp)
  82b804:	10801804 	addi	r2,r2,96
  82b808:	10800017 	ldw	r2,0(r2)
  82b80c:	100b883a 	mov	r5,r2
  82b810:	1809883a 	mov	r4,r3
  82b814:	08301e80 	call	8301e8 <__mulsi3>
  82b818:	e0bfd515 	stw	r2,-172(fp)
  82b81c:	e0ffd417 	ldw	r3,-176(fp)
  82b820:	e0bfd517 	ldw	r2,-172(fp)
  82b824:	1885883a 	add	r2,r3,r2
  82b828:	01445444 	movi	r5,4433
  82b82c:	1009883a 	mov	r4,r2
  82b830:	08301e80 	call	8301e8 <__mulsi3>
  82b834:	e0bfd615 	stw	r2,-168(fp)
  82b838:	e0bfd617 	ldw	r2,-168(fp)
  82b83c:	10810004 	addi	r2,r2,1024
  82b840:	e0bfd615 	stw	r2,-168(fp)
  82b844:	01461f84 	movi	r5,6270
  82b848:	e13fd417 	ldw	r4,-176(fp)
  82b84c:	08301e80 	call	8301e8 <__mulsi3>
  82b850:	1007883a 	mov	r3,r2
  82b854:	e0bfd617 	ldw	r2,-168(fp)
  82b858:	1885883a 	add	r2,r3,r2
  82b85c:	1005d2fa 	srai	r2,r2,11
  82b860:	e0bfd015 	stw	r2,-192(fp)
  82b864:	017137c4 	movi	r5,-15137
  82b868:	e13fd517 	ldw	r4,-172(fp)
  82b86c:	08301e80 	call	8301e8 <__mulsi3>
  82b870:	1007883a 	mov	r3,r2
  82b874:	e0bfd617 	ldw	r2,-168(fp)
  82b878:	1885883a 	add	r2,r3,r2
  82b87c:	1005d2fa 	srai	r2,r2,11
  82b880:	e0bfd115 	stw	r2,-188(fp)
  82b884:	e0ffd217 	ldw	r3,-184(fp)
  82b888:	e0bfd017 	ldw	r2,-192(fp)
  82b88c:	1887883a 	add	r3,r3,r2
  82b890:	e0bfcd17 	ldw	r2,-204(fp)
  82b894:	10c00015 	stw	r3,0(r2)
  82b898:	e0bfcd17 	ldw	r2,-204(fp)
  82b89c:	10801804 	addi	r2,r2,96
  82b8a0:	e13fd217 	ldw	r4,-184(fp)
  82b8a4:	e0ffd017 	ldw	r3,-192(fp)
  82b8a8:	20c7c83a 	sub	r3,r4,r3
  82b8ac:	10c00015 	stw	r3,0(r2)
  82b8b0:	e0bfcd17 	ldw	r2,-204(fp)
  82b8b4:	10800804 	addi	r2,r2,32
  82b8b8:	e13fd317 	ldw	r4,-180(fp)
  82b8bc:	e0ffd117 	ldw	r3,-188(fp)
  82b8c0:	20c7883a 	add	r3,r4,r3
  82b8c4:	10c00015 	stw	r3,0(r2)
  82b8c8:	e0bfcd17 	ldw	r2,-204(fp)
  82b8cc:	10801004 	addi	r2,r2,64
  82b8d0:	e13fd317 	ldw	r4,-180(fp)
  82b8d4:	e0ffd117 	ldw	r3,-188(fp)
  82b8d8:	20c7c83a 	sub	r3,r4,r3
  82b8dc:	10c00015 	stw	r3,0(r2)
  82b8e0:	e0bfce17 	ldw	r2,-200(fp)
  82b8e4:	10800044 	addi	r2,r2,1
  82b8e8:	e0bfce15 	stw	r2,-200(fp)
  82b8ec:	e0bfcb17 	ldw	r2,-212(fp)
  82b8f0:	10800084 	addi	r2,r2,2
  82b8f4:	e0bfcb15 	stw	r2,-212(fp)
  82b8f8:	e0bfcc17 	ldw	r2,-208(fp)
  82b8fc:	10800104 	addi	r2,r2,4
  82b900:	e0bfcc15 	stw	r2,-208(fp)
  82b904:	e0bfcd17 	ldw	r2,-204(fp)
  82b908:	10800104 	addi	r2,r2,4
  82b90c:	e0bfcd15 	stw	r2,-204(fp)
  82b910:	e0bfce17 	ldw	r2,-200(fp)
  82b914:	10800210 	cmplti	r2,r2,8
  82b918:	103f821e 	bne	r2,zero,82b724 <__alt_mem_epcs_flash_controller_0+0xff822724>
  82b91c:	e0bfdc04 	addi	r2,fp,-144
  82b920:	e0bfcd15 	stw	r2,-204(fp)
  82b924:	e03fce15 	stw	zero,-200(fp)
  82b928:	00010b06 	br	82bd58 <jpeg_idct_8x4+0x688>
  82b92c:	e0bfce17 	ldw	r2,-200(fp)
  82b930:	1085883a 	add	r2,r2,r2
  82b934:	1085883a 	add	r2,r2,r2
  82b938:	1007883a 	mov	r3,r2
  82b93c:	e0bfff17 	ldw	r2,-4(fp)
  82b940:	10c5883a 	add	r2,r2,r3
  82b944:	10c00017 	ldw	r3,0(r2)
  82b948:	e0800217 	ldw	r2,8(fp)
  82b94c:	1885883a 	add	r2,r3,r2
  82b950:	e0bfd715 	stw	r2,-164(fp)
  82b954:	e0bfcd17 	ldw	r2,-204(fp)
  82b958:	10800017 	ldw	r2,0(r2)
  82b95c:	10900404 	addi	r2,r2,16400
  82b960:	e0bfd415 	stw	r2,-176(fp)
  82b964:	e0bfcd17 	ldw	r2,-204(fp)
  82b968:	10800404 	addi	r2,r2,16
  82b96c:	10800017 	ldw	r2,0(r2)
  82b970:	e0bfd515 	stw	r2,-172(fp)
  82b974:	e0ffd417 	ldw	r3,-176(fp)
  82b978:	e0bfd517 	ldw	r2,-172(fp)
  82b97c:	1885883a 	add	r2,r3,r2
  82b980:	1004937a 	slli	r2,r2,13
  82b984:	e0bfd015 	stw	r2,-192(fp)
  82b988:	e0ffd417 	ldw	r3,-176(fp)
  82b98c:	e0bfd517 	ldw	r2,-172(fp)
  82b990:	1885c83a 	sub	r2,r3,r2
  82b994:	1004937a 	slli	r2,r2,13
  82b998:	e0bfd815 	stw	r2,-160(fp)
  82b99c:	e0bfcd17 	ldw	r2,-204(fp)
  82b9a0:	10800204 	addi	r2,r2,8
  82b9a4:	10800017 	ldw	r2,0(r2)
  82b9a8:	e0bfd415 	stw	r2,-176(fp)
  82b9ac:	e0bfcd17 	ldw	r2,-204(fp)
  82b9b0:	10800604 	addi	r2,r2,24
  82b9b4:	10800017 	ldw	r2,0(r2)
  82b9b8:	e0bfd515 	stw	r2,-172(fp)
  82b9bc:	e0ffd417 	ldw	r3,-176(fp)
  82b9c0:	e0bfd517 	ldw	r2,-172(fp)
  82b9c4:	1885883a 	add	r2,r3,r2
  82b9c8:	01445444 	movi	r5,4433
  82b9cc:	1009883a 	mov	r4,r2
  82b9d0:	08301e80 	call	8301e8 <__mulsi3>
  82b9d4:	e0bfd615 	stw	r2,-168(fp)
  82b9d8:	01461f84 	movi	r5,6270
  82b9dc:	e13fd417 	ldw	r4,-176(fp)
  82b9e0:	08301e80 	call	8301e8 <__mulsi3>
  82b9e4:	1007883a 	mov	r3,r2
  82b9e8:	e0bfd617 	ldw	r2,-168(fp)
  82b9ec:	1885883a 	add	r2,r3,r2
  82b9f0:	e0bfd115 	stw	r2,-188(fp)
  82b9f4:	017137c4 	movi	r5,-15137
  82b9f8:	e13fd517 	ldw	r4,-172(fp)
  82b9fc:	08301e80 	call	8301e8 <__mulsi3>
  82ba00:	1007883a 	mov	r3,r2
  82ba04:	e0bfd617 	ldw	r2,-168(fp)
  82ba08:	1885883a 	add	r2,r3,r2
  82ba0c:	e0bfd915 	stw	r2,-156(fp)
  82ba10:	e0ffd017 	ldw	r3,-192(fp)
  82ba14:	e0bfd117 	ldw	r2,-188(fp)
  82ba18:	1885883a 	add	r2,r3,r2
  82ba1c:	e0bfd215 	stw	r2,-184(fp)
  82ba20:	e0ffd017 	ldw	r3,-192(fp)
  82ba24:	e0bfd117 	ldw	r2,-188(fp)
  82ba28:	1885c83a 	sub	r2,r3,r2
  82ba2c:	e0bfda15 	stw	r2,-152(fp)
  82ba30:	e0ffd817 	ldw	r3,-160(fp)
  82ba34:	e0bfd917 	ldw	r2,-156(fp)
  82ba38:	1885883a 	add	r2,r3,r2
  82ba3c:	e0bfdb15 	stw	r2,-148(fp)
  82ba40:	e0ffd817 	ldw	r3,-160(fp)
  82ba44:	e0bfd917 	ldw	r2,-156(fp)
  82ba48:	1885c83a 	sub	r2,r3,r2
  82ba4c:	e0bfd315 	stw	r2,-180(fp)
  82ba50:	e0bfcd17 	ldw	r2,-204(fp)
  82ba54:	10800704 	addi	r2,r2,28
  82ba58:	10800017 	ldw	r2,0(r2)
  82ba5c:	e0bfd015 	stw	r2,-192(fp)
  82ba60:	e0bfcd17 	ldw	r2,-204(fp)
  82ba64:	10800504 	addi	r2,r2,20
  82ba68:	10800017 	ldw	r2,0(r2)
  82ba6c:	e0bfd815 	stw	r2,-160(fp)
  82ba70:	e0bfcd17 	ldw	r2,-204(fp)
  82ba74:	10800304 	addi	r2,r2,12
  82ba78:	10800017 	ldw	r2,0(r2)
  82ba7c:	e0bfd115 	stw	r2,-188(fp)
  82ba80:	e0bfcd17 	ldw	r2,-204(fp)
  82ba84:	10800104 	addi	r2,r2,4
  82ba88:	10800017 	ldw	r2,0(r2)
  82ba8c:	e0bfd915 	stw	r2,-156(fp)
  82ba90:	e0ffd017 	ldw	r3,-192(fp)
  82ba94:	e0bfd117 	ldw	r2,-188(fp)
  82ba98:	1885883a 	add	r2,r3,r2
  82ba9c:	e0bfd415 	stw	r2,-176(fp)
  82baa0:	e0ffd817 	ldw	r3,-160(fp)
  82baa4:	e0bfd917 	ldw	r2,-156(fp)
  82baa8:	1885883a 	add	r2,r3,r2
  82baac:	e0bfd515 	stw	r2,-172(fp)
  82bab0:	e0ffd417 	ldw	r3,-176(fp)
  82bab4:	e0bfd517 	ldw	r2,-172(fp)
  82bab8:	1885883a 	add	r2,r3,r2
  82babc:	01496844 	movi	r5,9633
  82bac0:	1009883a 	mov	r4,r2
  82bac4:	08301e80 	call	8301e8 <__mulsi3>
  82bac8:	e0bfd615 	stw	r2,-168(fp)
  82bacc:	01704ec4 	movi	r5,-16069
  82bad0:	e13fd417 	ldw	r4,-176(fp)
  82bad4:	08301e80 	call	8301e8 <__mulsi3>
  82bad8:	e0bfd415 	stw	r2,-176(fp)
  82badc:	017ce104 	movi	r5,-3196
  82bae0:	e13fd517 	ldw	r4,-172(fp)
  82bae4:	08301e80 	call	8301e8 <__mulsi3>
  82bae8:	e0bfd515 	stw	r2,-172(fp)
  82baec:	e0ffd417 	ldw	r3,-176(fp)
  82baf0:	e0bfd617 	ldw	r2,-168(fp)
  82baf4:	1885883a 	add	r2,r3,r2
  82baf8:	e0bfd415 	stw	r2,-176(fp)
  82bafc:	e0ffd517 	ldw	r3,-172(fp)
  82bb00:	e0bfd617 	ldw	r2,-168(fp)
  82bb04:	1885883a 	add	r2,r3,r2
  82bb08:	e0bfd515 	stw	r2,-172(fp)
  82bb0c:	e0ffd017 	ldw	r3,-192(fp)
  82bb10:	e0bfd917 	ldw	r2,-156(fp)
  82bb14:	1885883a 	add	r2,r3,r2
  82bb18:	0178ccc4 	movi	r5,-7373
  82bb1c:	1009883a 	mov	r4,r2
  82bb20:	08301e80 	call	8301e8 <__mulsi3>
  82bb24:	e0bfd615 	stw	r2,-168(fp)
  82bb28:	01426384 	movi	r5,2446
  82bb2c:	e13fd017 	ldw	r4,-192(fp)
  82bb30:	08301e80 	call	8301e8 <__mulsi3>
  82bb34:	e0bfd015 	stw	r2,-192(fp)
  82bb38:	014c02c4 	movi	r5,12299
  82bb3c:	e13fd917 	ldw	r4,-156(fp)
  82bb40:	08301e80 	call	8301e8 <__mulsi3>
  82bb44:	e0bfd915 	stw	r2,-156(fp)
  82bb48:	e0ffd617 	ldw	r3,-168(fp)
  82bb4c:	e0bfd417 	ldw	r2,-176(fp)
  82bb50:	1885883a 	add	r2,r3,r2
  82bb54:	e0ffd017 	ldw	r3,-192(fp)
  82bb58:	1885883a 	add	r2,r3,r2
  82bb5c:	e0bfd015 	stw	r2,-192(fp)
  82bb60:	e0ffd617 	ldw	r3,-168(fp)
  82bb64:	e0bfd517 	ldw	r2,-172(fp)
  82bb68:	1885883a 	add	r2,r3,r2
  82bb6c:	e0ffd917 	ldw	r3,-156(fp)
  82bb70:	1885883a 	add	r2,r3,r2
  82bb74:	e0bfd915 	stw	r2,-156(fp)
  82bb78:	e0ffd817 	ldw	r3,-160(fp)
  82bb7c:	e0bfd117 	ldw	r2,-188(fp)
  82bb80:	1885883a 	add	r2,r3,r2
  82bb84:	016b7f44 	movi	r5,-20995
  82bb88:	1009883a 	mov	r4,r2
  82bb8c:	08301e80 	call	8301e8 <__mulsi3>
  82bb90:	e0bfd615 	stw	r2,-168(fp)
  82bb94:	01506cc4 	movi	r5,16819
  82bb98:	e13fd817 	ldw	r4,-160(fp)
  82bb9c:	08301e80 	call	8301e8 <__mulsi3>
  82bba0:	e0bfd815 	stw	r2,-160(fp)
  82bba4:	01589504 	movi	r5,25172
  82bba8:	e13fd117 	ldw	r4,-188(fp)
  82bbac:	08301e80 	call	8301e8 <__mulsi3>
  82bbb0:	e0bfd115 	stw	r2,-188(fp)
  82bbb4:	e0ffd617 	ldw	r3,-168(fp)
  82bbb8:	e0bfd517 	ldw	r2,-172(fp)
  82bbbc:	1885883a 	add	r2,r3,r2
  82bbc0:	e0ffd817 	ldw	r3,-160(fp)
  82bbc4:	1885883a 	add	r2,r3,r2
  82bbc8:	e0bfd815 	stw	r2,-160(fp)
  82bbcc:	e0ffd617 	ldw	r3,-168(fp)
  82bbd0:	e0bfd417 	ldw	r2,-176(fp)
  82bbd4:	1885883a 	add	r2,r3,r2
  82bbd8:	e0ffd117 	ldw	r3,-188(fp)
  82bbdc:	1885883a 	add	r2,r3,r2
  82bbe0:	e0bfd115 	stw	r2,-188(fp)
  82bbe4:	e0ffd217 	ldw	r3,-184(fp)
  82bbe8:	e0bfd917 	ldw	r2,-156(fp)
  82bbec:	1885883a 	add	r2,r3,r2
  82bbf0:	1005d4ba 	srai	r2,r2,18
  82bbf4:	1080ffcc 	andi	r2,r2,1023
  82bbf8:	e0ffcf17 	ldw	r3,-196(fp)
  82bbfc:	1885883a 	add	r2,r3,r2
  82bc00:	10c00003 	ldbu	r3,0(r2)
  82bc04:	e0bfd717 	ldw	r2,-164(fp)
  82bc08:	10c00005 	stb	r3,0(r2)
  82bc0c:	e0bfd717 	ldw	r2,-164(fp)
  82bc10:	108001c4 	addi	r2,r2,7
  82bc14:	e13fd217 	ldw	r4,-184(fp)
  82bc18:	e0ffd917 	ldw	r3,-156(fp)
  82bc1c:	20c7c83a 	sub	r3,r4,r3
  82bc20:	1807d4ba 	srai	r3,r3,18
  82bc24:	18c0ffcc 	andi	r3,r3,1023
  82bc28:	e13fcf17 	ldw	r4,-196(fp)
  82bc2c:	20c7883a 	add	r3,r4,r3
  82bc30:	18c00003 	ldbu	r3,0(r3)
  82bc34:	10c00005 	stb	r3,0(r2)
  82bc38:	e0bfd717 	ldw	r2,-164(fp)
  82bc3c:	10800044 	addi	r2,r2,1
  82bc40:	e13fdb17 	ldw	r4,-148(fp)
  82bc44:	e0ffd117 	ldw	r3,-188(fp)
  82bc48:	20c7883a 	add	r3,r4,r3
  82bc4c:	1807d4ba 	srai	r3,r3,18
  82bc50:	18c0ffcc 	andi	r3,r3,1023
  82bc54:	e13fcf17 	ldw	r4,-196(fp)
  82bc58:	20c7883a 	add	r3,r4,r3
  82bc5c:	18c00003 	ldbu	r3,0(r3)
  82bc60:	10c00005 	stb	r3,0(r2)
  82bc64:	e0bfd717 	ldw	r2,-164(fp)
  82bc68:	10800184 	addi	r2,r2,6
  82bc6c:	e13fdb17 	ldw	r4,-148(fp)
  82bc70:	e0ffd117 	ldw	r3,-188(fp)
  82bc74:	20c7c83a 	sub	r3,r4,r3
  82bc78:	1807d4ba 	srai	r3,r3,18
  82bc7c:	18c0ffcc 	andi	r3,r3,1023
  82bc80:	e13fcf17 	ldw	r4,-196(fp)
  82bc84:	20c7883a 	add	r3,r4,r3
  82bc88:	18c00003 	ldbu	r3,0(r3)
  82bc8c:	10c00005 	stb	r3,0(r2)
  82bc90:	e0bfd717 	ldw	r2,-164(fp)
  82bc94:	10800084 	addi	r2,r2,2
  82bc98:	e13fd317 	ldw	r4,-180(fp)
  82bc9c:	e0ffd817 	ldw	r3,-160(fp)
  82bca0:	20c7883a 	add	r3,r4,r3
  82bca4:	1807d4ba 	srai	r3,r3,18
  82bca8:	18c0ffcc 	andi	r3,r3,1023
  82bcac:	e13fcf17 	ldw	r4,-196(fp)
  82bcb0:	20c7883a 	add	r3,r4,r3
  82bcb4:	18c00003 	ldbu	r3,0(r3)
  82bcb8:	10c00005 	stb	r3,0(r2)
  82bcbc:	e0bfd717 	ldw	r2,-164(fp)
  82bcc0:	10800144 	addi	r2,r2,5
  82bcc4:	e13fd317 	ldw	r4,-180(fp)
  82bcc8:	e0ffd817 	ldw	r3,-160(fp)
  82bccc:	20c7c83a 	sub	r3,r4,r3
  82bcd0:	1807d4ba 	srai	r3,r3,18
  82bcd4:	18c0ffcc 	andi	r3,r3,1023
  82bcd8:	e13fcf17 	ldw	r4,-196(fp)
  82bcdc:	20c7883a 	add	r3,r4,r3
  82bce0:	18c00003 	ldbu	r3,0(r3)
  82bce4:	10c00005 	stb	r3,0(r2)
  82bce8:	e0bfd717 	ldw	r2,-164(fp)
  82bcec:	108000c4 	addi	r2,r2,3
  82bcf0:	e13fda17 	ldw	r4,-152(fp)
  82bcf4:	e0ffd017 	ldw	r3,-192(fp)
  82bcf8:	20c7883a 	add	r3,r4,r3
  82bcfc:	1807d4ba 	srai	r3,r3,18
  82bd00:	18c0ffcc 	andi	r3,r3,1023
  82bd04:	e13fcf17 	ldw	r4,-196(fp)
  82bd08:	20c7883a 	add	r3,r4,r3
  82bd0c:	18c00003 	ldbu	r3,0(r3)
  82bd10:	10c00005 	stb	r3,0(r2)
  82bd14:	e0bfd717 	ldw	r2,-164(fp)
  82bd18:	10800104 	addi	r2,r2,4
  82bd1c:	e13fda17 	ldw	r4,-152(fp)
  82bd20:	e0ffd017 	ldw	r3,-192(fp)
  82bd24:	20c7c83a 	sub	r3,r4,r3
  82bd28:	1807d4ba 	srai	r3,r3,18
  82bd2c:	18c0ffcc 	andi	r3,r3,1023
  82bd30:	e13fcf17 	ldw	r4,-196(fp)
  82bd34:	20c7883a 	add	r3,r4,r3
  82bd38:	18c00003 	ldbu	r3,0(r3)
  82bd3c:	10c00005 	stb	r3,0(r2)
  82bd40:	e0bfcd17 	ldw	r2,-204(fp)
  82bd44:	10800804 	addi	r2,r2,32
  82bd48:	e0bfcd15 	stw	r2,-204(fp)
  82bd4c:	e0bfce17 	ldw	r2,-200(fp)
  82bd50:	10800044 	addi	r2,r2,1
  82bd54:	e0bfce15 	stw	r2,-200(fp)
  82bd58:	e0bfce17 	ldw	r2,-200(fp)
  82bd5c:	10800110 	cmplti	r2,r2,4
  82bd60:	103ef21e 	bne	r2,zero,82b92c <__alt_mem_epcs_flash_controller_0+0xff82292c>
  82bd64:	0001883a 	nop
  82bd68:	e037883a 	mov	sp,fp
  82bd6c:	dfc00117 	ldw	ra,4(sp)
  82bd70:	df000017 	ldw	fp,0(sp)
  82bd74:	dec00204 	addi	sp,sp,8
  82bd78:	f800283a 	ret

0082bd7c <jpeg_idct_6x3>:
  82bd7c:	deffd904 	addi	sp,sp,-156
  82bd80:	dfc02615 	stw	ra,152(sp)
  82bd84:	df002515 	stw	fp,148(sp)
  82bd88:	df002504 	addi	fp,sp,148
  82bd8c:	e13ffc15 	stw	r4,-16(fp)
  82bd90:	e17ffd15 	stw	r5,-12(fp)
  82bd94:	e1bffe15 	stw	r6,-8(fp)
  82bd98:	e1ffff15 	stw	r7,-4(fp)
  82bd9c:	e0bffc17 	ldw	r2,-16(fp)
  82bda0:	10805417 	ldw	r2,336(r2)
  82bda4:	10bfa004 	addi	r2,r2,-384
  82bda8:	e0bfdf15 	stw	r2,-132(fp)
  82bdac:	e0bffe17 	ldw	r2,-8(fp)
  82bdb0:	e0bfdb15 	stw	r2,-148(fp)
  82bdb4:	e0bffd17 	ldw	r2,-12(fp)
  82bdb8:	10801517 	ldw	r2,84(r2)
  82bdbc:	e0bfdc15 	stw	r2,-144(fp)
  82bdc0:	e0bfea04 	addi	r2,fp,-88
  82bdc4:	e0bfdd15 	stw	r2,-140(fp)
  82bdc8:	e03fde15 	stw	zero,-136(fp)
  82bdcc:	00005b06 	br	82bf3c <jpeg_idct_6x3+0x1c0>
  82bdd0:	e0bfdb17 	ldw	r2,-148(fp)
  82bdd4:	1080000b 	ldhu	r2,0(r2)
  82bdd8:	10ffffcc 	andi	r3,r2,65535
  82bddc:	18e0001c 	xori	r3,r3,32768
  82bde0:	18e00004 	addi	r3,r3,-32768
  82bde4:	e0bfdc17 	ldw	r2,-144(fp)
  82bde8:	10800017 	ldw	r2,0(r2)
  82bdec:	100b883a 	mov	r5,r2
  82bdf0:	1809883a 	mov	r4,r3
  82bdf4:	08301e80 	call	8301e8 <__mulsi3>
  82bdf8:	e0bfe015 	stw	r2,-128(fp)
  82bdfc:	e0bfe017 	ldw	r2,-128(fp)
  82be00:	1004937a 	slli	r2,r2,13
  82be04:	e0bfe015 	stw	r2,-128(fp)
  82be08:	e0bfe017 	ldw	r2,-128(fp)
  82be0c:	10810004 	addi	r2,r2,1024
  82be10:	e0bfe015 	stw	r2,-128(fp)
  82be14:	e0bfdb17 	ldw	r2,-148(fp)
  82be18:	10800804 	addi	r2,r2,32
  82be1c:	1080000b 	ldhu	r2,0(r2)
  82be20:	10ffffcc 	andi	r3,r2,65535
  82be24:	18e0001c 	xori	r3,r3,32768
  82be28:	18e00004 	addi	r3,r3,-32768
  82be2c:	e0bfdc17 	ldw	r2,-144(fp)
  82be30:	10801004 	addi	r2,r2,64
  82be34:	10800017 	ldw	r2,0(r2)
  82be38:	100b883a 	mov	r5,r2
  82be3c:	1809883a 	mov	r4,r3
  82be40:	08301e80 	call	8301e8 <__mulsi3>
  82be44:	e0bfe115 	stw	r2,-124(fp)
  82be48:	0145a844 	movi	r5,5793
  82be4c:	e13fe117 	ldw	r4,-124(fp)
  82be50:	08301e80 	call	8301e8 <__mulsi3>
  82be54:	e0bfe215 	stw	r2,-120(fp)
  82be58:	e0ffe017 	ldw	r3,-128(fp)
  82be5c:	e0bfe217 	ldw	r2,-120(fp)
  82be60:	1885883a 	add	r2,r3,r2
  82be64:	e0bfe315 	stw	r2,-116(fp)
  82be68:	e0ffe017 	ldw	r3,-128(fp)
  82be6c:	e0bfe217 	ldw	r2,-120(fp)
  82be70:	1887c83a 	sub	r3,r3,r2
  82be74:	e0bfe217 	ldw	r2,-120(fp)
  82be78:	1885c83a 	sub	r2,r3,r2
  82be7c:	e0bfe115 	stw	r2,-124(fp)
  82be80:	e0bfdb17 	ldw	r2,-148(fp)
  82be84:	10800404 	addi	r2,r2,16
  82be88:	1080000b 	ldhu	r2,0(r2)
  82be8c:	10ffffcc 	andi	r3,r2,65535
  82be90:	18e0001c 	xori	r3,r3,32768
  82be94:	18e00004 	addi	r3,r3,-32768
  82be98:	e0bfdc17 	ldw	r2,-144(fp)
  82be9c:	10800804 	addi	r2,r2,32
  82bea0:	10800017 	ldw	r2,0(r2)
  82bea4:	100b883a 	mov	r5,r2
  82bea8:	1809883a 	mov	r4,r3
  82beac:	08301e80 	call	8301e8 <__mulsi3>
  82beb0:	e0bfe215 	stw	r2,-120(fp)
  82beb4:	0149cc44 	movi	r5,10033
  82beb8:	e13fe217 	ldw	r4,-120(fp)
  82bebc:	08301e80 	call	8301e8 <__mulsi3>
  82bec0:	e0bfe015 	stw	r2,-128(fp)
  82bec4:	e0ffe317 	ldw	r3,-116(fp)
  82bec8:	e0bfe017 	ldw	r2,-128(fp)
  82becc:	1885883a 	add	r2,r3,r2
  82bed0:	1007d2fa 	srai	r3,r2,11
  82bed4:	e0bfdd17 	ldw	r2,-140(fp)
  82bed8:	10c00015 	stw	r3,0(r2)
  82bedc:	e0bfdd17 	ldw	r2,-140(fp)
  82bee0:	10800c04 	addi	r2,r2,48
  82bee4:	e13fe317 	ldw	r4,-116(fp)
  82bee8:	e0ffe017 	ldw	r3,-128(fp)
  82beec:	20c7c83a 	sub	r3,r4,r3
  82bef0:	1807d2fa 	srai	r3,r3,11
  82bef4:	10c00015 	stw	r3,0(r2)
  82bef8:	e0bfdd17 	ldw	r2,-140(fp)
  82befc:	10800604 	addi	r2,r2,24
  82bf00:	e0ffe117 	ldw	r3,-124(fp)
  82bf04:	1807d2fa 	srai	r3,r3,11
  82bf08:	10c00015 	stw	r3,0(r2)
  82bf0c:	e0bfde17 	ldw	r2,-136(fp)
  82bf10:	10800044 	addi	r2,r2,1
  82bf14:	e0bfde15 	stw	r2,-136(fp)
  82bf18:	e0bfdb17 	ldw	r2,-148(fp)
  82bf1c:	10800084 	addi	r2,r2,2
  82bf20:	e0bfdb15 	stw	r2,-148(fp)
  82bf24:	e0bfdc17 	ldw	r2,-144(fp)
  82bf28:	10800104 	addi	r2,r2,4
  82bf2c:	e0bfdc15 	stw	r2,-144(fp)
  82bf30:	e0bfdd17 	ldw	r2,-140(fp)
  82bf34:	10800104 	addi	r2,r2,4
  82bf38:	e0bfdd15 	stw	r2,-140(fp)
  82bf3c:	e0bfde17 	ldw	r2,-136(fp)
  82bf40:	10800190 	cmplti	r2,r2,6
  82bf44:	103fa21e 	bne	r2,zero,82bdd0 <__alt_mem_epcs_flash_controller_0+0xff822dd0>
  82bf48:	e0bfea04 	addi	r2,fp,-88
  82bf4c:	e0bfdd15 	stw	r2,-140(fp)
  82bf50:	e03fde15 	stw	zero,-136(fp)
  82bf54:	0000a206 	br	82c1e0 <jpeg_idct_6x3+0x464>
  82bf58:	e0bfde17 	ldw	r2,-136(fp)
  82bf5c:	1085883a 	add	r2,r2,r2
  82bf60:	1085883a 	add	r2,r2,r2
  82bf64:	1007883a 	mov	r3,r2
  82bf68:	e0bfff17 	ldw	r2,-4(fp)
  82bf6c:	10c5883a 	add	r2,r2,r3
  82bf70:	10c00017 	ldw	r3,0(r2)
  82bf74:	e0800217 	ldw	r2,8(fp)
  82bf78:	1885883a 	add	r2,r3,r2
  82bf7c:	e0bfe415 	stw	r2,-112(fp)
  82bf80:	e0bfdd17 	ldw	r2,-140(fp)
  82bf84:	10800017 	ldw	r2,0(r2)
  82bf88:	10900404 	addi	r2,r2,16400
  82bf8c:	e0bfe015 	stw	r2,-128(fp)
  82bf90:	e0bfe017 	ldw	r2,-128(fp)
  82bf94:	1004937a 	slli	r2,r2,13
  82bf98:	e0bfe015 	stw	r2,-128(fp)
  82bf9c:	e0bfdd17 	ldw	r2,-140(fp)
  82bfa0:	10800404 	addi	r2,r2,16
  82bfa4:	10800017 	ldw	r2,0(r2)
  82bfa8:	e0bfe115 	stw	r2,-124(fp)
  82bfac:	0145a844 	movi	r5,5793
  82bfb0:	e13fe117 	ldw	r4,-124(fp)
  82bfb4:	08301e80 	call	8301e8 <__mulsi3>
  82bfb8:	e0bfe315 	stw	r2,-116(fp)
  82bfbc:	e0ffe017 	ldw	r3,-128(fp)
  82bfc0:	e0bfe317 	ldw	r2,-116(fp)
  82bfc4:	1885883a 	add	r2,r3,r2
  82bfc8:	e0bfe515 	stw	r2,-108(fp)
  82bfcc:	e0ffe017 	ldw	r3,-128(fp)
  82bfd0:	e0bfe317 	ldw	r2,-116(fp)
  82bfd4:	1887c83a 	sub	r3,r3,r2
  82bfd8:	e0bfe317 	ldw	r2,-116(fp)
  82bfdc:	1885c83a 	sub	r2,r3,r2
  82bfe0:	e0bfe615 	stw	r2,-104(fp)
  82bfe4:	e0bfdd17 	ldw	r2,-140(fp)
  82bfe8:	10800204 	addi	r2,r2,8
  82bfec:	10800017 	ldw	r2,0(r2)
  82bff0:	e0bfe315 	stw	r2,-116(fp)
  82bff4:	0149cc44 	movi	r5,10033
  82bff8:	e13fe317 	ldw	r4,-116(fp)
  82bffc:	08301e80 	call	8301e8 <__mulsi3>
  82c000:	e0bfe015 	stw	r2,-128(fp)
  82c004:	e0ffe517 	ldw	r3,-108(fp)
  82c008:	e0bfe017 	ldw	r2,-128(fp)
  82c00c:	1885883a 	add	r2,r3,r2
  82c010:	e0bfe315 	stw	r2,-116(fp)
  82c014:	e0ffe517 	ldw	r3,-108(fp)
  82c018:	e0bfe017 	ldw	r2,-128(fp)
  82c01c:	1885c83a 	sub	r2,r3,r2
  82c020:	e0bfe215 	stw	r2,-120(fp)
  82c024:	e0bfdd17 	ldw	r2,-140(fp)
  82c028:	10800104 	addi	r2,r2,4
  82c02c:	10800017 	ldw	r2,0(r2)
  82c030:	e0bfe715 	stw	r2,-100(fp)
  82c034:	e0bfdd17 	ldw	r2,-140(fp)
  82c038:	10800304 	addi	r2,r2,12
  82c03c:	10800017 	ldw	r2,0(r2)
  82c040:	e0bfe815 	stw	r2,-96(fp)
  82c044:	e0bfdd17 	ldw	r2,-140(fp)
  82c048:	10800504 	addi	r2,r2,20
  82c04c:	10800017 	ldw	r2,0(r2)
  82c050:	e0bfe915 	stw	r2,-92(fp)
  82c054:	e0ffe717 	ldw	r3,-100(fp)
  82c058:	e0bfe917 	ldw	r2,-92(fp)
  82c05c:	1885883a 	add	r2,r3,r2
  82c060:	0142ed84 	movi	r5,2998
  82c064:	1009883a 	mov	r4,r2
  82c068:	08301e80 	call	8301e8 <__mulsi3>
  82c06c:	e0bfe515 	stw	r2,-108(fp)
  82c070:	e0ffe717 	ldw	r3,-100(fp)
  82c074:	e0bfe817 	ldw	r2,-96(fp)
  82c078:	1885883a 	add	r2,r3,r2
  82c07c:	1006937a 	slli	r3,r2,13
  82c080:	e0bfe517 	ldw	r2,-108(fp)
  82c084:	1885883a 	add	r2,r3,r2
  82c088:	e0bfe015 	stw	r2,-128(fp)
  82c08c:	e0ffe917 	ldw	r3,-92(fp)
  82c090:	e0bfe817 	ldw	r2,-96(fp)
  82c094:	1885c83a 	sub	r2,r3,r2
  82c098:	1006937a 	slli	r3,r2,13
  82c09c:	e0bfe517 	ldw	r2,-108(fp)
  82c0a0:	1885883a 	add	r2,r3,r2
  82c0a4:	e0bfe115 	stw	r2,-124(fp)
  82c0a8:	e0ffe717 	ldw	r3,-100(fp)
  82c0ac:	e0bfe817 	ldw	r2,-96(fp)
  82c0b0:	1887c83a 	sub	r3,r3,r2
  82c0b4:	e0bfe917 	ldw	r2,-92(fp)
  82c0b8:	1885c83a 	sub	r2,r3,r2
  82c0bc:	1004937a 	slli	r2,r2,13
  82c0c0:	e0bfe515 	stw	r2,-108(fp)
  82c0c4:	e0ffe317 	ldw	r3,-116(fp)
  82c0c8:	e0bfe017 	ldw	r2,-128(fp)
  82c0cc:	1885883a 	add	r2,r3,r2
  82c0d0:	1005d4ba 	srai	r2,r2,18
  82c0d4:	1080ffcc 	andi	r2,r2,1023
  82c0d8:	e0ffdf17 	ldw	r3,-132(fp)
  82c0dc:	1885883a 	add	r2,r3,r2
  82c0e0:	10c00003 	ldbu	r3,0(r2)
  82c0e4:	e0bfe417 	ldw	r2,-112(fp)
  82c0e8:	10c00005 	stb	r3,0(r2)
  82c0ec:	e0bfe417 	ldw	r2,-112(fp)
  82c0f0:	10800144 	addi	r2,r2,5
  82c0f4:	e13fe317 	ldw	r4,-116(fp)
  82c0f8:	e0ffe017 	ldw	r3,-128(fp)
  82c0fc:	20c7c83a 	sub	r3,r4,r3
  82c100:	1807d4ba 	srai	r3,r3,18
  82c104:	18c0ffcc 	andi	r3,r3,1023
  82c108:	e13fdf17 	ldw	r4,-132(fp)
  82c10c:	20c7883a 	add	r3,r4,r3
  82c110:	18c00003 	ldbu	r3,0(r3)
  82c114:	10c00005 	stb	r3,0(r2)
  82c118:	e0bfe417 	ldw	r2,-112(fp)
  82c11c:	10800044 	addi	r2,r2,1
  82c120:	e13fe617 	ldw	r4,-104(fp)
  82c124:	e0ffe517 	ldw	r3,-108(fp)
  82c128:	20c7883a 	add	r3,r4,r3
  82c12c:	1807d4ba 	srai	r3,r3,18
  82c130:	18c0ffcc 	andi	r3,r3,1023
  82c134:	e13fdf17 	ldw	r4,-132(fp)
  82c138:	20c7883a 	add	r3,r4,r3
  82c13c:	18c00003 	ldbu	r3,0(r3)
  82c140:	10c00005 	stb	r3,0(r2)
  82c144:	e0bfe417 	ldw	r2,-112(fp)
  82c148:	10800104 	addi	r2,r2,4
  82c14c:	e13fe617 	ldw	r4,-104(fp)
  82c150:	e0ffe517 	ldw	r3,-108(fp)
  82c154:	20c7c83a 	sub	r3,r4,r3
  82c158:	1807d4ba 	srai	r3,r3,18
  82c15c:	18c0ffcc 	andi	r3,r3,1023
  82c160:	e13fdf17 	ldw	r4,-132(fp)
  82c164:	20c7883a 	add	r3,r4,r3
  82c168:	18c00003 	ldbu	r3,0(r3)
  82c16c:	10c00005 	stb	r3,0(r2)
  82c170:	e0bfe417 	ldw	r2,-112(fp)
  82c174:	10800084 	addi	r2,r2,2
  82c178:	e13fe217 	ldw	r4,-120(fp)
  82c17c:	e0ffe117 	ldw	r3,-124(fp)
  82c180:	20c7883a 	add	r3,r4,r3
  82c184:	1807d4ba 	srai	r3,r3,18
  82c188:	18c0ffcc 	andi	r3,r3,1023
  82c18c:	e13fdf17 	ldw	r4,-132(fp)
  82c190:	20c7883a 	add	r3,r4,r3
  82c194:	18c00003 	ldbu	r3,0(r3)
  82c198:	10c00005 	stb	r3,0(r2)
  82c19c:	e0bfe417 	ldw	r2,-112(fp)
  82c1a0:	108000c4 	addi	r2,r2,3
  82c1a4:	e13fe217 	ldw	r4,-120(fp)
  82c1a8:	e0ffe117 	ldw	r3,-124(fp)
  82c1ac:	20c7c83a 	sub	r3,r4,r3
  82c1b0:	1807d4ba 	srai	r3,r3,18
  82c1b4:	18c0ffcc 	andi	r3,r3,1023
  82c1b8:	e13fdf17 	ldw	r4,-132(fp)
  82c1bc:	20c7883a 	add	r3,r4,r3
  82c1c0:	18c00003 	ldbu	r3,0(r3)
  82c1c4:	10c00005 	stb	r3,0(r2)
  82c1c8:	e0bfdd17 	ldw	r2,-140(fp)
  82c1cc:	10800604 	addi	r2,r2,24
  82c1d0:	e0bfdd15 	stw	r2,-140(fp)
  82c1d4:	e0bfde17 	ldw	r2,-136(fp)
  82c1d8:	10800044 	addi	r2,r2,1
  82c1dc:	e0bfde15 	stw	r2,-136(fp)
  82c1e0:	e0bfde17 	ldw	r2,-136(fp)
  82c1e4:	108000d0 	cmplti	r2,r2,3
  82c1e8:	103f5b1e 	bne	r2,zero,82bf58 <__alt_mem_epcs_flash_controller_0+0xff822f58>
  82c1ec:	0001883a 	nop
  82c1f0:	e037883a 	mov	sp,fp
  82c1f4:	dfc00117 	ldw	ra,4(sp)
  82c1f8:	df000017 	ldw	fp,0(sp)
  82c1fc:	dec00204 	addi	sp,sp,8
  82c200:	f800283a 	ret

0082c204 <jpeg_idct_4x2>:
  82c204:	deffe504 	addi	sp,sp,-108
  82c208:	dfc01a15 	stw	ra,104(sp)
  82c20c:	df001915 	stw	fp,100(sp)
  82c210:	df001904 	addi	fp,sp,100
  82c214:	e13ffc15 	stw	r4,-16(fp)
  82c218:	e17ffd15 	stw	r5,-12(fp)
  82c21c:	e1bffe15 	stw	r6,-8(fp)
  82c220:	e1ffff15 	stw	r7,-4(fp)
  82c224:	e0bffc17 	ldw	r2,-16(fp)
  82c228:	10805417 	ldw	r2,336(r2)
  82c22c:	10bfa004 	addi	r2,r2,-384
  82c230:	e0bfeb15 	stw	r2,-84(fp)
  82c234:	e0bffe17 	ldw	r2,-8(fp)
  82c238:	e0bfe715 	stw	r2,-100(fp)
  82c23c:	e0bffd17 	ldw	r2,-12(fp)
  82c240:	10801517 	ldw	r2,84(r2)
  82c244:	e0bfe815 	stw	r2,-96(fp)
  82c248:	e0bff404 	addi	r2,fp,-48
  82c24c:	e0bfe915 	stw	r2,-92(fp)
  82c250:	e03fea15 	stw	zero,-88(fp)
  82c254:	00002f06 	br	82c314 <jpeg_idct_4x2+0x110>
  82c258:	e0bfe717 	ldw	r2,-100(fp)
  82c25c:	1080000b 	ldhu	r2,0(r2)
  82c260:	10ffffcc 	andi	r3,r2,65535
  82c264:	18e0001c 	xori	r3,r3,32768
  82c268:	18e00004 	addi	r3,r3,-32768
  82c26c:	e0bfe817 	ldw	r2,-96(fp)
  82c270:	10800017 	ldw	r2,0(r2)
  82c274:	100b883a 	mov	r5,r2
  82c278:	1809883a 	mov	r4,r3
  82c27c:	08301e80 	call	8301e8 <__mulsi3>
  82c280:	e0bfec15 	stw	r2,-80(fp)
  82c284:	e0bfe717 	ldw	r2,-100(fp)
  82c288:	10800404 	addi	r2,r2,16
  82c28c:	1080000b 	ldhu	r2,0(r2)
  82c290:	10ffffcc 	andi	r3,r2,65535
  82c294:	18e0001c 	xori	r3,r3,32768
  82c298:	18e00004 	addi	r3,r3,-32768
  82c29c:	e0bfe817 	ldw	r2,-96(fp)
  82c2a0:	10800804 	addi	r2,r2,32
  82c2a4:	10800017 	ldw	r2,0(r2)
  82c2a8:	100b883a 	mov	r5,r2
  82c2ac:	1809883a 	mov	r4,r3
  82c2b0:	08301e80 	call	8301e8 <__mulsi3>
  82c2b4:	e0bfed15 	stw	r2,-76(fp)
  82c2b8:	e0ffec17 	ldw	r3,-80(fp)
  82c2bc:	e0bfed17 	ldw	r2,-76(fp)
  82c2c0:	1887883a 	add	r3,r3,r2
  82c2c4:	e0bfe917 	ldw	r2,-92(fp)
  82c2c8:	10c00015 	stw	r3,0(r2)
  82c2cc:	e0bfe917 	ldw	r2,-92(fp)
  82c2d0:	10800404 	addi	r2,r2,16
  82c2d4:	e13fec17 	ldw	r4,-80(fp)
  82c2d8:	e0ffed17 	ldw	r3,-76(fp)
  82c2dc:	20c7c83a 	sub	r3,r4,r3
  82c2e0:	10c00015 	stw	r3,0(r2)
  82c2e4:	e0bfea17 	ldw	r2,-88(fp)
  82c2e8:	10800044 	addi	r2,r2,1
  82c2ec:	e0bfea15 	stw	r2,-88(fp)
  82c2f0:	e0bfe717 	ldw	r2,-100(fp)
  82c2f4:	10800084 	addi	r2,r2,2
  82c2f8:	e0bfe715 	stw	r2,-100(fp)
  82c2fc:	e0bfe817 	ldw	r2,-96(fp)
  82c300:	10800104 	addi	r2,r2,4
  82c304:	e0bfe815 	stw	r2,-96(fp)
  82c308:	e0bfe917 	ldw	r2,-92(fp)
  82c30c:	10800104 	addi	r2,r2,4
  82c310:	e0bfe915 	stw	r2,-92(fp)
  82c314:	e0bfea17 	ldw	r2,-88(fp)
  82c318:	10800110 	cmplti	r2,r2,4
  82c31c:	103fce1e 	bne	r2,zero,82c258 <__alt_mem_epcs_flash_controller_0+0xff823258>
  82c320:	e0bff404 	addi	r2,fp,-48
  82c324:	e0bfe915 	stw	r2,-92(fp)
  82c328:	e03fea15 	stw	zero,-88(fp)
  82c32c:	00006706 	br	82c4cc <jpeg_idct_4x2+0x2c8>
  82c330:	e0bfea17 	ldw	r2,-88(fp)
  82c334:	1085883a 	add	r2,r2,r2
  82c338:	1085883a 	add	r2,r2,r2
  82c33c:	1007883a 	mov	r3,r2
  82c340:	e0bfff17 	ldw	r2,-4(fp)
  82c344:	10c5883a 	add	r2,r2,r3
  82c348:	10c00017 	ldw	r3,0(r2)
  82c34c:	e0800217 	ldw	r2,8(fp)
  82c350:	1885883a 	add	r2,r3,r2
  82c354:	e0bfee15 	stw	r2,-72(fp)
  82c358:	e0bfe917 	ldw	r2,-92(fp)
  82c35c:	10800017 	ldw	r2,0(r2)
  82c360:	10840104 	addi	r2,r2,4100
  82c364:	e0bfed15 	stw	r2,-76(fp)
  82c368:	e0bfe917 	ldw	r2,-92(fp)
  82c36c:	10800217 	ldw	r2,8(r2)
  82c370:	e0bfef15 	stw	r2,-68(fp)
  82c374:	e0ffed17 	ldw	r3,-76(fp)
  82c378:	e0bfef17 	ldw	r2,-68(fp)
  82c37c:	1885883a 	add	r2,r3,r2
  82c380:	1004937a 	slli	r2,r2,13
  82c384:	e0bfec15 	stw	r2,-80(fp)
  82c388:	e0ffed17 	ldw	r3,-76(fp)
  82c38c:	e0bfef17 	ldw	r2,-68(fp)
  82c390:	1885c83a 	sub	r2,r3,r2
  82c394:	1004937a 	slli	r2,r2,13
  82c398:	e0bff015 	stw	r2,-64(fp)
  82c39c:	e0bfe917 	ldw	r2,-92(fp)
  82c3a0:	10800117 	ldw	r2,4(r2)
  82c3a4:	e0bff115 	stw	r2,-60(fp)
  82c3a8:	e0bfe917 	ldw	r2,-92(fp)
  82c3ac:	10800317 	ldw	r2,12(r2)
  82c3b0:	e0bff215 	stw	r2,-56(fp)
  82c3b4:	e0fff117 	ldw	r3,-60(fp)
  82c3b8:	e0bff217 	ldw	r2,-56(fp)
  82c3bc:	1885883a 	add	r2,r3,r2
  82c3c0:	01445444 	movi	r5,4433
  82c3c4:	1009883a 	mov	r4,r2
  82c3c8:	08301e80 	call	8301e8 <__mulsi3>
  82c3cc:	e0bff315 	stw	r2,-52(fp)
  82c3d0:	01461f84 	movi	r5,6270
  82c3d4:	e13ff117 	ldw	r4,-60(fp)
  82c3d8:	08301e80 	call	8301e8 <__mulsi3>
  82c3dc:	1007883a 	mov	r3,r2
  82c3e0:	e0bff317 	ldw	r2,-52(fp)
  82c3e4:	1885883a 	add	r2,r3,r2
  82c3e8:	e0bfed15 	stw	r2,-76(fp)
  82c3ec:	017137c4 	movi	r5,-15137
  82c3f0:	e13ff217 	ldw	r4,-56(fp)
  82c3f4:	08301e80 	call	8301e8 <__mulsi3>
  82c3f8:	1007883a 	mov	r3,r2
  82c3fc:	e0bff317 	ldw	r2,-52(fp)
  82c400:	1885883a 	add	r2,r3,r2
  82c404:	e0bfef15 	stw	r2,-68(fp)
  82c408:	e0ffec17 	ldw	r3,-80(fp)
  82c40c:	e0bfed17 	ldw	r2,-76(fp)
  82c410:	1885883a 	add	r2,r3,r2
  82c414:	1005d43a 	srai	r2,r2,16
  82c418:	1080ffcc 	andi	r2,r2,1023
  82c41c:	e0ffeb17 	ldw	r3,-84(fp)
  82c420:	1885883a 	add	r2,r3,r2
  82c424:	10c00003 	ldbu	r3,0(r2)
  82c428:	e0bfee17 	ldw	r2,-72(fp)
  82c42c:	10c00005 	stb	r3,0(r2)
  82c430:	e0bfee17 	ldw	r2,-72(fp)
  82c434:	108000c4 	addi	r2,r2,3
  82c438:	e13fec17 	ldw	r4,-80(fp)
  82c43c:	e0ffed17 	ldw	r3,-76(fp)
  82c440:	20c7c83a 	sub	r3,r4,r3
  82c444:	1807d43a 	srai	r3,r3,16
  82c448:	18c0ffcc 	andi	r3,r3,1023
  82c44c:	e13feb17 	ldw	r4,-84(fp)
  82c450:	20c7883a 	add	r3,r4,r3
  82c454:	18c00003 	ldbu	r3,0(r3)
  82c458:	10c00005 	stb	r3,0(r2)
  82c45c:	e0bfee17 	ldw	r2,-72(fp)
  82c460:	10800044 	addi	r2,r2,1
  82c464:	e13ff017 	ldw	r4,-64(fp)
  82c468:	e0ffef17 	ldw	r3,-68(fp)
  82c46c:	20c7883a 	add	r3,r4,r3
  82c470:	1807d43a 	srai	r3,r3,16
  82c474:	18c0ffcc 	andi	r3,r3,1023
  82c478:	e13feb17 	ldw	r4,-84(fp)
  82c47c:	20c7883a 	add	r3,r4,r3
  82c480:	18c00003 	ldbu	r3,0(r3)
  82c484:	10c00005 	stb	r3,0(r2)
  82c488:	e0bfee17 	ldw	r2,-72(fp)
  82c48c:	10800084 	addi	r2,r2,2
  82c490:	e13ff017 	ldw	r4,-64(fp)
  82c494:	e0ffef17 	ldw	r3,-68(fp)
  82c498:	20c7c83a 	sub	r3,r4,r3
  82c49c:	1807d43a 	srai	r3,r3,16
  82c4a0:	18c0ffcc 	andi	r3,r3,1023
  82c4a4:	e13feb17 	ldw	r4,-84(fp)
  82c4a8:	20c7883a 	add	r3,r4,r3
  82c4ac:	18c00003 	ldbu	r3,0(r3)
  82c4b0:	10c00005 	stb	r3,0(r2)
  82c4b4:	e0bfe917 	ldw	r2,-92(fp)
  82c4b8:	10800404 	addi	r2,r2,16
  82c4bc:	e0bfe915 	stw	r2,-92(fp)
  82c4c0:	e0bfea17 	ldw	r2,-88(fp)
  82c4c4:	10800044 	addi	r2,r2,1
  82c4c8:	e0bfea15 	stw	r2,-88(fp)
  82c4cc:	e0bfea17 	ldw	r2,-88(fp)
  82c4d0:	10800090 	cmplti	r2,r2,2
  82c4d4:	103f961e 	bne	r2,zero,82c330 <__alt_mem_epcs_flash_controller_0+0xff823330>
  82c4d8:	0001883a 	nop
  82c4dc:	e037883a 	mov	sp,fp
  82c4e0:	dfc00117 	ldw	ra,4(sp)
  82c4e4:	df000017 	ldw	fp,0(sp)
  82c4e8:	dec00204 	addi	sp,sp,8
  82c4ec:	f800283a 	ret

0082c4f0 <jpeg_idct_2x1>:
  82c4f0:	defff504 	addi	sp,sp,-44
  82c4f4:	dfc00a15 	stw	ra,40(sp)
  82c4f8:	df000915 	stw	fp,36(sp)
  82c4fc:	df000904 	addi	fp,sp,36
  82c500:	e13ffc15 	stw	r4,-16(fp)
  82c504:	e17ffd15 	stw	r5,-12(fp)
  82c508:	e1bffe15 	stw	r6,-8(fp)
  82c50c:	e1ffff15 	stw	r7,-4(fp)
  82c510:	e0bffc17 	ldw	r2,-16(fp)
  82c514:	10805417 	ldw	r2,336(r2)
  82c518:	10bfa004 	addi	r2,r2,-384
  82c51c:	e0bff715 	stw	r2,-36(fp)
  82c520:	e0bffd17 	ldw	r2,-12(fp)
  82c524:	10801517 	ldw	r2,84(r2)
  82c528:	e0bff815 	stw	r2,-32(fp)
  82c52c:	e0bfff17 	ldw	r2,-4(fp)
  82c530:	10c00017 	ldw	r3,0(r2)
  82c534:	e0800217 	ldw	r2,8(fp)
  82c538:	1885883a 	add	r2,r3,r2
  82c53c:	e0bff915 	stw	r2,-28(fp)
  82c540:	e0bffe17 	ldw	r2,-8(fp)
  82c544:	1080000b 	ldhu	r2,0(r2)
  82c548:	10ffffcc 	andi	r3,r2,65535
  82c54c:	18e0001c 	xori	r3,r3,32768
  82c550:	18e00004 	addi	r3,r3,-32768
  82c554:	e0bff817 	ldw	r2,-32(fp)
  82c558:	10800017 	ldw	r2,0(r2)
  82c55c:	100b883a 	mov	r5,r2
  82c560:	1809883a 	mov	r4,r3
  82c564:	08301e80 	call	8301e8 <__mulsi3>
  82c568:	e0bffa15 	stw	r2,-24(fp)
  82c56c:	e0bffa17 	ldw	r2,-24(fp)
  82c570:	10840104 	addi	r2,r2,4100
  82c574:	e0bffa15 	stw	r2,-24(fp)
  82c578:	e0bffe17 	ldw	r2,-8(fp)
  82c57c:	10800084 	addi	r2,r2,2
  82c580:	1080000b 	ldhu	r2,0(r2)
  82c584:	10ffffcc 	andi	r3,r2,65535
  82c588:	18e0001c 	xori	r3,r3,32768
  82c58c:	18e00004 	addi	r3,r3,-32768
  82c590:	e0bff817 	ldw	r2,-32(fp)
  82c594:	10800104 	addi	r2,r2,4
  82c598:	10800017 	ldw	r2,0(r2)
  82c59c:	100b883a 	mov	r5,r2
  82c5a0:	1809883a 	mov	r4,r3
  82c5a4:	08301e80 	call	8301e8 <__mulsi3>
  82c5a8:	e0bffb15 	stw	r2,-20(fp)
  82c5ac:	e0fffa17 	ldw	r3,-24(fp)
  82c5b0:	e0bffb17 	ldw	r2,-20(fp)
  82c5b4:	1885883a 	add	r2,r3,r2
  82c5b8:	1005d0fa 	srai	r2,r2,3
  82c5bc:	1080ffcc 	andi	r2,r2,1023
  82c5c0:	e0fff717 	ldw	r3,-36(fp)
  82c5c4:	1885883a 	add	r2,r3,r2
  82c5c8:	10c00003 	ldbu	r3,0(r2)
  82c5cc:	e0bff917 	ldw	r2,-28(fp)
  82c5d0:	10c00005 	stb	r3,0(r2)
  82c5d4:	e0bff917 	ldw	r2,-28(fp)
  82c5d8:	10800044 	addi	r2,r2,1
  82c5dc:	e13ffa17 	ldw	r4,-24(fp)
  82c5e0:	e0fffb17 	ldw	r3,-20(fp)
  82c5e4:	20c7c83a 	sub	r3,r4,r3
  82c5e8:	1807d0fa 	srai	r3,r3,3
  82c5ec:	18c0ffcc 	andi	r3,r3,1023
  82c5f0:	e13ff717 	ldw	r4,-36(fp)
  82c5f4:	20c7883a 	add	r3,r4,r3
  82c5f8:	18c00003 	ldbu	r3,0(r3)
  82c5fc:	10c00005 	stb	r3,0(r2)
  82c600:	0001883a 	nop
  82c604:	e037883a 	mov	sp,fp
  82c608:	dfc00117 	ldw	ra,4(sp)
  82c60c:	df000017 	ldw	fp,0(sp)
  82c610:	dec00204 	addi	sp,sp,8
  82c614:	f800283a 	ret

0082c618 <jpeg_idct_8x16>:
  82c618:	deff5f04 	addi	sp,sp,-644
  82c61c:	dfc0a015 	stw	ra,640(sp)
  82c620:	df009f15 	stw	fp,636(sp)
  82c624:	dc009e15 	stw	r16,632(sp)
  82c628:	df009f04 	addi	fp,sp,636
  82c62c:	e13ffb15 	stw	r4,-20(fp)
  82c630:	e17ffc15 	stw	r5,-16(fp)
  82c634:	e1bffd15 	stw	r6,-12(fp)
  82c638:	e1fffe15 	stw	r7,-8(fp)
  82c63c:	e0bffb17 	ldw	r2,-20(fp)
  82c640:	10805417 	ldw	r2,336(r2)
  82c644:	10bfa004 	addi	r2,r2,-384
  82c648:	e0bf6515 	stw	r2,-620(fp)
  82c64c:	e0bffd17 	ldw	r2,-12(fp)
  82c650:	e0bf6115 	stw	r2,-636(fp)
  82c654:	e0bffc17 	ldw	r2,-16(fp)
  82c658:	10801517 	ldw	r2,84(r2)
  82c65c:	e0bf6215 	stw	r2,-632(fp)
  82c660:	e0bf7b04 	addi	r2,fp,-532
  82c664:	e0bf6315 	stw	r2,-628(fp)
  82c668:	e03f6415 	stw	zero,-624(fp)
  82c66c:	0001f906 	br	82ce54 <jpeg_idct_8x16+0x83c>
  82c670:	e0bf6117 	ldw	r2,-636(fp)
  82c674:	1080000b 	ldhu	r2,0(r2)
  82c678:	10ffffcc 	andi	r3,r2,65535
  82c67c:	18e0001c 	xori	r3,r3,32768
  82c680:	18e00004 	addi	r3,r3,-32768
  82c684:	e0bf6217 	ldw	r2,-632(fp)
  82c688:	10800017 	ldw	r2,0(r2)
  82c68c:	100b883a 	mov	r5,r2
  82c690:	1809883a 	mov	r4,r3
  82c694:	08301e80 	call	8301e8 <__mulsi3>
  82c698:	e0bf6615 	stw	r2,-616(fp)
  82c69c:	e0bf6617 	ldw	r2,-616(fp)
  82c6a0:	1004937a 	slli	r2,r2,13
  82c6a4:	e0bf6615 	stw	r2,-616(fp)
  82c6a8:	e0bf6617 	ldw	r2,-616(fp)
  82c6ac:	10810004 	addi	r2,r2,1024
  82c6b0:	e0bf6615 	stw	r2,-616(fp)
  82c6b4:	e0bf6117 	ldw	r2,-636(fp)
  82c6b8:	10801004 	addi	r2,r2,64
  82c6bc:	1080000b 	ldhu	r2,0(r2)
  82c6c0:	10ffffcc 	andi	r3,r2,65535
  82c6c4:	18e0001c 	xori	r3,r3,32768
  82c6c8:	18e00004 	addi	r3,r3,-32768
  82c6cc:	e0bf6217 	ldw	r2,-632(fp)
  82c6d0:	10802004 	addi	r2,r2,128
  82c6d4:	10800017 	ldw	r2,0(r2)
  82c6d8:	100b883a 	mov	r5,r2
  82c6dc:	1809883a 	mov	r4,r3
  82c6e0:	08301e80 	call	8301e8 <__mulsi3>
  82c6e4:	e0bf6715 	stw	r2,-612(fp)
  82c6e8:	014a73c4 	movi	r5,10703
  82c6ec:	e13f6717 	ldw	r4,-612(fp)
  82c6f0:	08301e80 	call	8301e8 <__mulsi3>
  82c6f4:	e0bf6815 	stw	r2,-608(fp)
  82c6f8:	01445444 	movi	r5,4433
  82c6fc:	e13f6717 	ldw	r4,-612(fp)
  82c700:	08301e80 	call	8301e8 <__mulsi3>
  82c704:	e0bf6915 	stw	r2,-604(fp)
  82c708:	e0ff6617 	ldw	r3,-616(fp)
  82c70c:	e0bf6817 	ldw	r2,-608(fp)
  82c710:	1885883a 	add	r2,r3,r2
  82c714:	e0bf6a15 	stw	r2,-600(fp)
  82c718:	e0ff6617 	ldw	r3,-616(fp)
  82c71c:	e0bf6817 	ldw	r2,-608(fp)
  82c720:	1885c83a 	sub	r2,r3,r2
  82c724:	e0bf6b15 	stw	r2,-596(fp)
  82c728:	e0ff6617 	ldw	r3,-616(fp)
  82c72c:	e0bf6917 	ldw	r2,-604(fp)
  82c730:	1885883a 	add	r2,r3,r2
  82c734:	e0bf6c15 	stw	r2,-592(fp)
  82c738:	e0ff6617 	ldw	r3,-616(fp)
  82c73c:	e0bf6917 	ldw	r2,-604(fp)
  82c740:	1885c83a 	sub	r2,r3,r2
  82c744:	e0bf6d15 	stw	r2,-588(fp)
  82c748:	e0bf6117 	ldw	r2,-636(fp)
  82c74c:	10800804 	addi	r2,r2,32
  82c750:	1080000b 	ldhu	r2,0(r2)
  82c754:	10ffffcc 	andi	r3,r2,65535
  82c758:	18e0001c 	xori	r3,r3,32768
  82c75c:	18e00004 	addi	r3,r3,-32768
  82c760:	e0bf6217 	ldw	r2,-632(fp)
  82c764:	10801004 	addi	r2,r2,64
  82c768:	10800017 	ldw	r2,0(r2)
  82c76c:	100b883a 	mov	r5,r2
  82c770:	1809883a 	mov	r4,r3
  82c774:	08301e80 	call	8301e8 <__mulsi3>
  82c778:	e0bf6715 	stw	r2,-612(fp)
  82c77c:	e0bf6117 	ldw	r2,-636(fp)
  82c780:	10801804 	addi	r2,r2,96
  82c784:	1080000b 	ldhu	r2,0(r2)
  82c788:	10ffffcc 	andi	r3,r2,65535
  82c78c:	18e0001c 	xori	r3,r3,32768
  82c790:	18e00004 	addi	r3,r3,-32768
  82c794:	e0bf6217 	ldw	r2,-632(fp)
  82c798:	10803004 	addi	r2,r2,192
  82c79c:	10800017 	ldw	r2,0(r2)
  82c7a0:	100b883a 	mov	r5,r2
  82c7a4:	1809883a 	mov	r4,r3
  82c7a8:	08301e80 	call	8301e8 <__mulsi3>
  82c7ac:	e0bf6e15 	stw	r2,-584(fp)
  82c7b0:	e0ff6717 	ldw	r3,-612(fp)
  82c7b4:	e0bf6e17 	ldw	r2,-584(fp)
  82c7b8:	1885c83a 	sub	r2,r3,r2
  82c7bc:	e0bf6f15 	stw	r2,-580(fp)
  82c7c0:	01423504 	movi	r5,2260
  82c7c4:	e13f6f17 	ldw	r4,-580(fp)
  82c7c8:	08301e80 	call	8301e8 <__mulsi3>
  82c7cc:	e0bf7015 	stw	r2,-576(fp)
  82c7d0:	014b18c4 	movi	r5,11363
  82c7d4:	e13f6f17 	ldw	r4,-580(fp)
  82c7d8:	08301e80 	call	8301e8 <__mulsi3>
  82c7dc:	e0bf6f15 	stw	r2,-580(fp)
  82c7e0:	015480c4 	movi	r5,20995
  82c7e4:	e13f6e17 	ldw	r4,-584(fp)
  82c7e8:	08301e80 	call	8301e8 <__mulsi3>
  82c7ec:	1007883a 	mov	r3,r2
  82c7f0:	e0bf6f17 	ldw	r2,-580(fp)
  82c7f4:	1885883a 	add	r2,r3,r2
  82c7f8:	e0bf6615 	stw	r2,-616(fp)
  82c7fc:	01473344 	movi	r5,7373
  82c800:	e13f6717 	ldw	r4,-612(fp)
  82c804:	08301e80 	call	8301e8 <__mulsi3>
  82c808:	1007883a 	mov	r3,r2
  82c80c:	e0bf7017 	ldw	r2,-576(fp)
  82c810:	1885883a 	add	r2,r3,r2
  82c814:	e0bf6815 	stw	r2,-608(fp)
  82c818:	017b3084 	movi	r5,-4926
  82c81c:	e13f6717 	ldw	r4,-612(fp)
  82c820:	08301e80 	call	8301e8 <__mulsi3>
  82c824:	1007883a 	mov	r3,r2
  82c828:	e0bf6f17 	ldw	r2,-580(fp)
  82c82c:	1885883a 	add	r2,r3,r2
  82c830:	e0bf6915 	stw	r2,-604(fp)
  82c834:	017bec04 	movi	r5,-4176
  82c838:	e13f6e17 	ldw	r4,-584(fp)
  82c83c:	08301e80 	call	8301e8 <__mulsi3>
  82c840:	1007883a 	mov	r3,r2
  82c844:	e0bf7017 	ldw	r2,-576(fp)
  82c848:	1885883a 	add	r2,r3,r2
  82c84c:	e0bf7115 	stw	r2,-572(fp)
  82c850:	e0ff6a17 	ldw	r3,-600(fp)
  82c854:	e0bf6617 	ldw	r2,-616(fp)
  82c858:	1885883a 	add	r2,r3,r2
  82c85c:	e0bf7215 	stw	r2,-568(fp)
  82c860:	e0ff6a17 	ldw	r3,-600(fp)
  82c864:	e0bf6617 	ldw	r2,-616(fp)
  82c868:	1885c83a 	sub	r2,r3,r2
  82c86c:	e0bf7315 	stw	r2,-564(fp)
  82c870:	e0ff6c17 	ldw	r3,-592(fp)
  82c874:	e0bf6817 	ldw	r2,-608(fp)
  82c878:	1885883a 	add	r2,r3,r2
  82c87c:	e0bf7415 	stw	r2,-560(fp)
  82c880:	e0ff6c17 	ldw	r3,-592(fp)
  82c884:	e0bf6817 	ldw	r2,-608(fp)
  82c888:	1885c83a 	sub	r2,r3,r2
  82c88c:	e0bf7515 	stw	r2,-556(fp)
  82c890:	e0ff6d17 	ldw	r3,-588(fp)
  82c894:	e0bf6917 	ldw	r2,-604(fp)
  82c898:	1885883a 	add	r2,r3,r2
  82c89c:	e0bf7615 	stw	r2,-552(fp)
  82c8a0:	e0ff6d17 	ldw	r3,-588(fp)
  82c8a4:	e0bf6917 	ldw	r2,-604(fp)
  82c8a8:	1885c83a 	sub	r2,r3,r2
  82c8ac:	e0bf7715 	stw	r2,-548(fp)
  82c8b0:	e0ff6b17 	ldw	r3,-596(fp)
  82c8b4:	e0bf7117 	ldw	r2,-572(fp)
  82c8b8:	1885883a 	add	r2,r3,r2
  82c8bc:	e0bf7815 	stw	r2,-544(fp)
  82c8c0:	e0ff6b17 	ldw	r3,-596(fp)
  82c8c4:	e0bf7117 	ldw	r2,-572(fp)
  82c8c8:	1885c83a 	sub	r2,r3,r2
  82c8cc:	e0bf7915 	stw	r2,-540(fp)
  82c8d0:	e0bf6117 	ldw	r2,-636(fp)
  82c8d4:	10800404 	addi	r2,r2,16
  82c8d8:	1080000b 	ldhu	r2,0(r2)
  82c8dc:	10ffffcc 	andi	r3,r2,65535
  82c8e0:	18e0001c 	xori	r3,r3,32768
  82c8e4:	18e00004 	addi	r3,r3,-32768
  82c8e8:	e0bf6217 	ldw	r2,-632(fp)
  82c8ec:	10800804 	addi	r2,r2,32
  82c8f0:	10800017 	ldw	r2,0(r2)
  82c8f4:	100b883a 	mov	r5,r2
  82c8f8:	1809883a 	mov	r4,r3
  82c8fc:	08301e80 	call	8301e8 <__mulsi3>
  82c900:	e0bf6715 	stw	r2,-612(fp)
  82c904:	e0bf6117 	ldw	r2,-636(fp)
  82c908:	10800c04 	addi	r2,r2,48
  82c90c:	1080000b 	ldhu	r2,0(r2)
  82c910:	10ffffcc 	andi	r3,r2,65535
  82c914:	18e0001c 	xori	r3,r3,32768
  82c918:	18e00004 	addi	r3,r3,-32768
  82c91c:	e0bf6217 	ldw	r2,-632(fp)
  82c920:	10801804 	addi	r2,r2,96
  82c924:	10800017 	ldw	r2,0(r2)
  82c928:	100b883a 	mov	r5,r2
  82c92c:	1809883a 	mov	r4,r3
  82c930:	08301e80 	call	8301e8 <__mulsi3>
  82c934:	e0bf6e15 	stw	r2,-584(fp)
  82c938:	e0bf6117 	ldw	r2,-636(fp)
  82c93c:	10801404 	addi	r2,r2,80
  82c940:	1080000b 	ldhu	r2,0(r2)
  82c944:	10ffffcc 	andi	r3,r2,65535
  82c948:	18e0001c 	xori	r3,r3,32768
  82c94c:	18e00004 	addi	r3,r3,-32768
  82c950:	e0bf6217 	ldw	r2,-632(fp)
  82c954:	10802804 	addi	r2,r2,160
  82c958:	10800017 	ldw	r2,0(r2)
  82c95c:	100b883a 	mov	r5,r2
  82c960:	1809883a 	mov	r4,r3
  82c964:	08301e80 	call	8301e8 <__mulsi3>
  82c968:	e0bf6f15 	stw	r2,-580(fp)
  82c96c:	e0bf6117 	ldw	r2,-636(fp)
  82c970:	10801c04 	addi	r2,r2,112
  82c974:	1080000b 	ldhu	r2,0(r2)
  82c978:	10ffffcc 	andi	r3,r2,65535
  82c97c:	18e0001c 	xori	r3,r3,32768
  82c980:	18e00004 	addi	r3,r3,-32768
  82c984:	e0bf6217 	ldw	r2,-632(fp)
  82c988:	10803804 	addi	r2,r2,224
  82c98c:	10800017 	ldw	r2,0(r2)
  82c990:	100b883a 	mov	r5,r2
  82c994:	1809883a 	mov	r4,r3
  82c998:	08301e80 	call	8301e8 <__mulsi3>
  82c99c:	e0bf7015 	stw	r2,-576(fp)
  82c9a0:	e0ff6717 	ldw	r3,-612(fp)
  82c9a4:	e0bf6f17 	ldw	r2,-580(fp)
  82c9a8:	1885883a 	add	r2,r3,r2
  82c9ac:	e0bf6b15 	stw	r2,-596(fp)
  82c9b0:	e0ff6717 	ldw	r3,-612(fp)
  82c9b4:	e0bf6e17 	ldw	r2,-584(fp)
  82c9b8:	1885883a 	add	r2,r3,r2
  82c9bc:	014ad384 	movi	r5,11086
  82c9c0:	1009883a 	mov	r4,r2
  82c9c4:	08301e80 	call	8301e8 <__mulsi3>
  82c9c8:	e0bf6815 	stw	r2,-608(fp)
  82c9cc:	0149fa44 	movi	r5,10217
  82c9d0:	e13f6b17 	ldw	r4,-596(fp)
  82c9d4:	08301e80 	call	8301e8 <__mulsi3>
  82c9d8:	e0bf6915 	stw	r2,-604(fp)
  82c9dc:	e0ff6717 	ldw	r3,-612(fp)
  82c9e0:	e0bf7017 	ldw	r2,-576(fp)
  82c9e4:	1885883a 	add	r2,r3,r2
  82c9e8:	0148bf04 	movi	r5,8956
  82c9ec:	1009883a 	mov	r4,r2
  82c9f0:	08301e80 	call	8301e8 <__mulsi3>
  82c9f4:	e0bf7115 	stw	r2,-572(fp)
  82c9f8:	e0ff6717 	ldw	r3,-612(fp)
  82c9fc:	e0bf7017 	ldw	r2,-576(fp)
  82ca00:	1885c83a 	sub	r2,r3,r2
  82ca04:	01472d84 	movi	r5,7350
  82ca08:	1009883a 	mov	r4,r2
  82ca0c:	08301e80 	call	8301e8 <__mulsi3>
  82ca10:	e0bf6a15 	stw	r2,-600(fp)
  82ca14:	01455544 	movi	r5,5461
  82ca18:	e13f6b17 	ldw	r4,-596(fp)
  82ca1c:	08301e80 	call	8301e8 <__mulsi3>
  82ca20:	e0bf6b15 	stw	r2,-596(fp)
  82ca24:	e0ff6717 	ldw	r3,-612(fp)
  82ca28:	e0bf6e17 	ldw	r2,-584(fp)
  82ca2c:	1885c83a 	sub	r2,r3,r2
  82ca30:	014348c4 	movi	r5,3363
  82ca34:	1009883a 	mov	r4,r2
  82ca38:	08301e80 	call	8301e8 <__mulsi3>
  82ca3c:	e0bf6c15 	stw	r2,-592(fp)
  82ca40:	e0ff6817 	ldw	r3,-608(fp)
  82ca44:	e0bf6917 	ldw	r2,-604(fp)
  82ca48:	1887883a 	add	r3,r3,r2
  82ca4c:	e0bf7117 	ldw	r2,-572(fp)
  82ca50:	18a1883a 	add	r16,r3,r2
  82ca54:	016db584 	movi	r5,-18730
  82ca58:	e13f6717 	ldw	r4,-612(fp)
  82ca5c:	08301e80 	call	8301e8 <__mulsi3>
  82ca60:	8085883a 	add	r2,r16,r2
  82ca64:	e0bf6615 	stw	r2,-616(fp)
  82ca68:	e0ff6a17 	ldw	r3,-600(fp)
  82ca6c:	e0bf6b17 	ldw	r2,-596(fp)
  82ca70:	1887883a 	add	r3,r3,r2
  82ca74:	e0bf6c17 	ldw	r2,-592(fp)
  82ca78:	18a1883a 	add	r16,r3,r2
  82ca7c:	01715084 	movi	r5,-15038
  82ca80:	e13f6717 	ldw	r4,-612(fp)
  82ca84:	08301e80 	call	8301e8 <__mulsi3>
  82ca88:	8085883a 	add	r2,r16,r2
  82ca8c:	e0bf6d15 	stw	r2,-588(fp)
  82ca90:	e0ff6e17 	ldw	r3,-584(fp)
  82ca94:	e0bf6f17 	ldw	r2,-580(fp)
  82ca98:	1885883a 	add	r2,r3,r2
  82ca9c:	01411c04 	movi	r5,1136
  82caa0:	1009883a 	mov	r4,r2
  82caa4:	08301e80 	call	8301e8 <__mulsi3>
  82caa8:	e0bf6715 	stw	r2,-612(fp)
  82caac:	01409344 	movi	r5,589
  82cab0:	e13f6e17 	ldw	r4,-584(fp)
  82cab4:	08301e80 	call	8301e8 <__mulsi3>
  82cab8:	1007883a 	mov	r3,r2
  82cabc:	e0bf6717 	ldw	r2,-612(fp)
  82cac0:	1885883a 	add	r2,r3,r2
  82cac4:	e0ff6817 	ldw	r3,-608(fp)
  82cac8:	1885883a 	add	r2,r3,r2
  82cacc:	e0bf6815 	stw	r2,-608(fp)
  82cad0:	0176fe84 	movi	r5,-9222
  82cad4:	e13f6f17 	ldw	r4,-580(fp)
  82cad8:	08301e80 	call	8301e8 <__mulsi3>
  82cadc:	1007883a 	mov	r3,r2
  82cae0:	e0bf6717 	ldw	r2,-612(fp)
  82cae4:	1885883a 	add	r2,r3,r2
  82cae8:	e0ff6917 	ldw	r3,-604(fp)
  82caec:	1885883a 	add	r2,r3,r2
  82caf0:	e0bf6915 	stw	r2,-604(fp)
  82caf4:	e0ff6f17 	ldw	r3,-580(fp)
  82caf8:	e0bf6e17 	ldw	r2,-584(fp)
  82cafc:	1885c83a 	sub	r2,r3,r2
  82cb00:	014b4244 	movi	r5,11529
  82cb04:	1009883a 	mov	r4,r2
  82cb08:	08301e80 	call	8301e8 <__mulsi3>
  82cb0c:	e0bf6715 	stw	r2,-612(fp)
  82cb10:	0179de84 	movi	r5,-6278
  82cb14:	e13f6f17 	ldw	r4,-580(fp)
  82cb18:	08301e80 	call	8301e8 <__mulsi3>
  82cb1c:	1007883a 	mov	r3,r2
  82cb20:	e0bf6717 	ldw	r2,-612(fp)
  82cb24:	1885883a 	add	r2,r3,r2
  82cb28:	e0ff6b17 	ldw	r3,-596(fp)
  82cb2c:	1885883a 	add	r2,r3,r2
  82cb30:	e0bf6b15 	stw	r2,-596(fp)
  82cb34:	014fc684 	movi	r5,16154
  82cb38:	e13f6e17 	ldw	r4,-584(fp)
  82cb3c:	08301e80 	call	8301e8 <__mulsi3>
  82cb40:	1007883a 	mov	r3,r2
  82cb44:	e0bf6717 	ldw	r2,-612(fp)
  82cb48:	1885883a 	add	r2,r3,r2
  82cb4c:	e0ff6c17 	ldw	r3,-592(fp)
  82cb50:	1885883a 	add	r2,r3,r2
  82cb54:	e0bf6c15 	stw	r2,-592(fp)
  82cb58:	e0ff6e17 	ldw	r3,-584(fp)
  82cb5c:	e0bf7017 	ldw	r2,-576(fp)
  82cb60:	1885883a 	add	r2,r3,r2
  82cb64:	e0bf6e15 	stw	r2,-584(fp)
  82cb68:	017aaac4 	movi	r5,-5461
  82cb6c:	e13f6e17 	ldw	r4,-584(fp)
  82cb70:	08301e80 	call	8301e8 <__mulsi3>
  82cb74:	e0bf6715 	stw	r2,-612(fp)
  82cb78:	e0ff6817 	ldw	r3,-608(fp)
  82cb7c:	e0bf6717 	ldw	r2,-612(fp)
  82cb80:	1885883a 	add	r2,r3,r2
  82cb84:	e0bf6815 	stw	r2,-608(fp)
  82cb88:	01488604 	movi	r5,8728
  82cb8c:	e13f7017 	ldw	r4,-576(fp)
  82cb90:	08301e80 	call	8301e8 <__mulsi3>
  82cb94:	1007883a 	mov	r3,r2
  82cb98:	e0bf6717 	ldw	r2,-612(fp)
  82cb9c:	1885883a 	add	r2,r3,r2
  82cba0:	e0ff7117 	ldw	r3,-572(fp)
  82cba4:	1885883a 	add	r2,r3,r2
  82cba8:	e0bf7115 	stw	r2,-572(fp)
  82cbac:	017605c4 	movi	r5,-10217
  82cbb0:	e13f6e17 	ldw	r4,-584(fp)
  82cbb4:	08301e80 	call	8301e8 <__mulsi3>
  82cbb8:	e0bf6e15 	stw	r2,-584(fp)
  82cbbc:	01592144 	movi	r5,25733
  82cbc0:	e13f7017 	ldw	r4,-576(fp)
  82cbc4:	08301e80 	call	8301e8 <__mulsi3>
  82cbc8:	1007883a 	mov	r3,r2
  82cbcc:	e0bf6e17 	ldw	r2,-584(fp)
  82cbd0:	1885883a 	add	r2,r3,r2
  82cbd4:	e0ff6a17 	ldw	r3,-600(fp)
  82cbd8:	1885883a 	add	r2,r3,r2
  82cbdc:	e0bf6a15 	stw	r2,-600(fp)
  82cbe0:	e0ff6c17 	ldw	r3,-592(fp)
  82cbe4:	e0bf6e17 	ldw	r2,-584(fp)
  82cbe8:	1885883a 	add	r2,r3,r2
  82cbec:	e0bf6c15 	stw	r2,-592(fp)
  82cbf0:	e0ff6f17 	ldw	r3,-580(fp)
  82cbf4:	e0bf7017 	ldw	r2,-576(fp)
  82cbf8:	1885883a 	add	r2,r3,r2
  82cbfc:	01752c84 	movi	r5,-11086
  82cc00:	1009883a 	mov	r4,r2
  82cc04:	08301e80 	call	8301e8 <__mulsi3>
  82cc08:	e0bf6e15 	stw	r2,-584(fp)
  82cc0c:	e0ff6917 	ldw	r3,-604(fp)
  82cc10:	e0bf6e17 	ldw	r2,-584(fp)
  82cc14:	1885883a 	add	r2,r3,r2
  82cc18:	e0bf6915 	stw	r2,-604(fp)
  82cc1c:	e0ff7117 	ldw	r3,-572(fp)
  82cc20:	e0bf6e17 	ldw	r2,-584(fp)
  82cc24:	1885883a 	add	r2,r3,r2
  82cc28:	e0bf7115 	stw	r2,-572(fp)
  82cc2c:	e0ff7017 	ldw	r3,-576(fp)
  82cc30:	e0bf6f17 	ldw	r2,-580(fp)
  82cc34:	1885c83a 	sub	r2,r3,r2
  82cc38:	014348c4 	movi	r5,3363
  82cc3c:	1009883a 	mov	r4,r2
  82cc40:	08301e80 	call	8301e8 <__mulsi3>
  82cc44:	e0bf6e15 	stw	r2,-584(fp)
  82cc48:	e0ff6a17 	ldw	r3,-600(fp)
  82cc4c:	e0bf6e17 	ldw	r2,-584(fp)
  82cc50:	1885883a 	add	r2,r3,r2
  82cc54:	e0bf6a15 	stw	r2,-600(fp)
  82cc58:	e0ff6b17 	ldw	r3,-596(fp)
  82cc5c:	e0bf6e17 	ldw	r2,-584(fp)
  82cc60:	1885883a 	add	r2,r3,r2
  82cc64:	e0bf6b15 	stw	r2,-596(fp)
  82cc68:	e0ff7217 	ldw	r3,-568(fp)
  82cc6c:	e0bf6617 	ldw	r2,-616(fp)
  82cc70:	1885883a 	add	r2,r3,r2
  82cc74:	1007d2fa 	srai	r3,r2,11
  82cc78:	e0bf6317 	ldw	r2,-628(fp)
  82cc7c:	10c00015 	stw	r3,0(r2)
  82cc80:	e0bf6317 	ldw	r2,-628(fp)
  82cc84:	10807804 	addi	r2,r2,480
  82cc88:	e13f7217 	ldw	r4,-568(fp)
  82cc8c:	e0ff6617 	ldw	r3,-616(fp)
  82cc90:	20c7c83a 	sub	r3,r4,r3
  82cc94:	1807d2fa 	srai	r3,r3,11
  82cc98:	10c00015 	stw	r3,0(r2)
  82cc9c:	e0bf6317 	ldw	r2,-628(fp)
  82cca0:	10800804 	addi	r2,r2,32
  82cca4:	e13f7417 	ldw	r4,-560(fp)
  82cca8:	e0ff6817 	ldw	r3,-608(fp)
  82ccac:	20c7883a 	add	r3,r4,r3
  82ccb0:	1807d2fa 	srai	r3,r3,11
  82ccb4:	10c00015 	stw	r3,0(r2)
  82ccb8:	e0bf6317 	ldw	r2,-628(fp)
  82ccbc:	10807004 	addi	r2,r2,448
  82ccc0:	e13f7417 	ldw	r4,-560(fp)
  82ccc4:	e0ff6817 	ldw	r3,-608(fp)
  82ccc8:	20c7c83a 	sub	r3,r4,r3
  82cccc:	1807d2fa 	srai	r3,r3,11
  82ccd0:	10c00015 	stw	r3,0(r2)
  82ccd4:	e0bf6317 	ldw	r2,-628(fp)
  82ccd8:	10801004 	addi	r2,r2,64
  82ccdc:	e13f7617 	ldw	r4,-552(fp)
  82cce0:	e0ff6917 	ldw	r3,-604(fp)
  82cce4:	20c7883a 	add	r3,r4,r3
  82cce8:	1807d2fa 	srai	r3,r3,11
  82ccec:	10c00015 	stw	r3,0(r2)
  82ccf0:	e0bf6317 	ldw	r2,-628(fp)
  82ccf4:	10806804 	addi	r2,r2,416
  82ccf8:	e13f7617 	ldw	r4,-552(fp)
  82ccfc:	e0ff6917 	ldw	r3,-604(fp)
  82cd00:	20c7c83a 	sub	r3,r4,r3
  82cd04:	1807d2fa 	srai	r3,r3,11
  82cd08:	10c00015 	stw	r3,0(r2)
  82cd0c:	e0bf6317 	ldw	r2,-628(fp)
  82cd10:	10801804 	addi	r2,r2,96
  82cd14:	e13f7817 	ldw	r4,-544(fp)
  82cd18:	e0ff7117 	ldw	r3,-572(fp)
  82cd1c:	20c7883a 	add	r3,r4,r3
  82cd20:	1807d2fa 	srai	r3,r3,11
  82cd24:	10c00015 	stw	r3,0(r2)
  82cd28:	e0bf6317 	ldw	r2,-628(fp)
  82cd2c:	10806004 	addi	r2,r2,384
  82cd30:	e13f7817 	ldw	r4,-544(fp)
  82cd34:	e0ff7117 	ldw	r3,-572(fp)
  82cd38:	20c7c83a 	sub	r3,r4,r3
  82cd3c:	1807d2fa 	srai	r3,r3,11
  82cd40:	10c00015 	stw	r3,0(r2)
  82cd44:	e0bf6317 	ldw	r2,-628(fp)
  82cd48:	10802004 	addi	r2,r2,128
  82cd4c:	e13f7917 	ldw	r4,-540(fp)
  82cd50:	e0ff6a17 	ldw	r3,-600(fp)
  82cd54:	20c7883a 	add	r3,r4,r3
  82cd58:	1807d2fa 	srai	r3,r3,11
  82cd5c:	10c00015 	stw	r3,0(r2)
  82cd60:	e0bf6317 	ldw	r2,-628(fp)
  82cd64:	10805804 	addi	r2,r2,352
  82cd68:	e13f7917 	ldw	r4,-540(fp)
  82cd6c:	e0ff6a17 	ldw	r3,-600(fp)
  82cd70:	20c7c83a 	sub	r3,r4,r3
  82cd74:	1807d2fa 	srai	r3,r3,11
  82cd78:	10c00015 	stw	r3,0(r2)
  82cd7c:	e0bf6317 	ldw	r2,-628(fp)
  82cd80:	10802804 	addi	r2,r2,160
  82cd84:	e13f7717 	ldw	r4,-548(fp)
  82cd88:	e0ff6b17 	ldw	r3,-596(fp)
  82cd8c:	20c7883a 	add	r3,r4,r3
  82cd90:	1807d2fa 	srai	r3,r3,11
  82cd94:	10c00015 	stw	r3,0(r2)
  82cd98:	e0bf6317 	ldw	r2,-628(fp)
  82cd9c:	10805004 	addi	r2,r2,320
  82cda0:	e13f7717 	ldw	r4,-548(fp)
  82cda4:	e0ff6b17 	ldw	r3,-596(fp)
  82cda8:	20c7c83a 	sub	r3,r4,r3
  82cdac:	1807d2fa 	srai	r3,r3,11
  82cdb0:	10c00015 	stw	r3,0(r2)
  82cdb4:	e0bf6317 	ldw	r2,-628(fp)
  82cdb8:	10803004 	addi	r2,r2,192
  82cdbc:	e13f7517 	ldw	r4,-556(fp)
  82cdc0:	e0ff6c17 	ldw	r3,-592(fp)
  82cdc4:	20c7883a 	add	r3,r4,r3
  82cdc8:	1807d2fa 	srai	r3,r3,11
  82cdcc:	10c00015 	stw	r3,0(r2)
  82cdd0:	e0bf6317 	ldw	r2,-628(fp)
  82cdd4:	10804804 	addi	r2,r2,288
  82cdd8:	e13f7517 	ldw	r4,-556(fp)
  82cddc:	e0ff6c17 	ldw	r3,-592(fp)
  82cde0:	20c7c83a 	sub	r3,r4,r3
  82cde4:	1807d2fa 	srai	r3,r3,11
  82cde8:	10c00015 	stw	r3,0(r2)
  82cdec:	e0bf6317 	ldw	r2,-628(fp)
  82cdf0:	10803804 	addi	r2,r2,224
  82cdf4:	e13f7317 	ldw	r4,-564(fp)
  82cdf8:	e0ff6d17 	ldw	r3,-588(fp)
  82cdfc:	20c7883a 	add	r3,r4,r3
  82ce00:	1807d2fa 	srai	r3,r3,11
  82ce04:	10c00015 	stw	r3,0(r2)
  82ce08:	e0bf6317 	ldw	r2,-628(fp)
  82ce0c:	10804004 	addi	r2,r2,256
  82ce10:	e13f7317 	ldw	r4,-564(fp)
  82ce14:	e0ff6d17 	ldw	r3,-588(fp)
  82ce18:	20c7c83a 	sub	r3,r4,r3
  82ce1c:	1807d2fa 	srai	r3,r3,11
  82ce20:	10c00015 	stw	r3,0(r2)
  82ce24:	e0bf6417 	ldw	r2,-624(fp)
  82ce28:	10800044 	addi	r2,r2,1
  82ce2c:	e0bf6415 	stw	r2,-624(fp)
  82ce30:	e0bf6117 	ldw	r2,-636(fp)
  82ce34:	10800084 	addi	r2,r2,2
  82ce38:	e0bf6115 	stw	r2,-636(fp)
  82ce3c:	e0bf6217 	ldw	r2,-632(fp)
  82ce40:	10800104 	addi	r2,r2,4
  82ce44:	e0bf6215 	stw	r2,-632(fp)
  82ce48:	e0bf6317 	ldw	r2,-628(fp)
  82ce4c:	10800104 	addi	r2,r2,4
  82ce50:	e0bf6315 	stw	r2,-628(fp)
  82ce54:	e0bf6417 	ldw	r2,-624(fp)
  82ce58:	10800210 	cmplti	r2,r2,8
  82ce5c:	103e041e 	bne	r2,zero,82c670 <__alt_mem_epcs_flash_controller_0+0xff823670>
  82ce60:	e0bf7b04 	addi	r2,fp,-532
  82ce64:	e0bf6315 	stw	r2,-628(fp)
  82ce68:	e03f6415 	stw	zero,-624(fp)
  82ce6c:	00010b06 	br	82d29c <jpeg_idct_8x16+0xc84>
  82ce70:	e0bf6417 	ldw	r2,-624(fp)
  82ce74:	1085883a 	add	r2,r2,r2
  82ce78:	1085883a 	add	r2,r2,r2
  82ce7c:	1007883a 	mov	r3,r2
  82ce80:	e0bffe17 	ldw	r2,-8(fp)
  82ce84:	10c5883a 	add	r2,r2,r3
  82ce88:	10c00017 	ldw	r3,0(r2)
  82ce8c:	e0800217 	ldw	r2,8(fp)
  82ce90:	1885883a 	add	r2,r3,r2
  82ce94:	e0bf7a15 	stw	r2,-536(fp)
  82ce98:	e0bf6317 	ldw	r2,-628(fp)
  82ce9c:	10800017 	ldw	r2,0(r2)
  82cea0:	10900404 	addi	r2,r2,16400
  82cea4:	e0bf6e15 	stw	r2,-584(fp)
  82cea8:	e0bf6317 	ldw	r2,-628(fp)
  82ceac:	10800404 	addi	r2,r2,16
  82ceb0:	10800017 	ldw	r2,0(r2)
  82ceb4:	e0bf6f15 	stw	r2,-580(fp)
  82ceb8:	e0ff6e17 	ldw	r3,-584(fp)
  82cebc:	e0bf6f17 	ldw	r2,-580(fp)
  82cec0:	1885883a 	add	r2,r3,r2
  82cec4:	1004937a 	slli	r2,r2,13
  82cec8:	e0bf6615 	stw	r2,-616(fp)
  82cecc:	e0ff6e17 	ldw	r3,-584(fp)
  82ced0:	e0bf6f17 	ldw	r2,-580(fp)
  82ced4:	1885c83a 	sub	r2,r3,r2
  82ced8:	1004937a 	slli	r2,r2,13
  82cedc:	e0bf6815 	stw	r2,-608(fp)
  82cee0:	e0bf6317 	ldw	r2,-628(fp)
  82cee4:	10800204 	addi	r2,r2,8
  82cee8:	10800017 	ldw	r2,0(r2)
  82ceec:	e0bf6e15 	stw	r2,-584(fp)
  82cef0:	e0bf6317 	ldw	r2,-628(fp)
  82cef4:	10800604 	addi	r2,r2,24
  82cef8:	10800017 	ldw	r2,0(r2)
  82cefc:	e0bf6f15 	stw	r2,-580(fp)
  82cf00:	e0ff6e17 	ldw	r3,-584(fp)
  82cf04:	e0bf6f17 	ldw	r2,-580(fp)
  82cf08:	1885883a 	add	r2,r3,r2
  82cf0c:	01445444 	movi	r5,4433
  82cf10:	1009883a 	mov	r4,r2
  82cf14:	08301e80 	call	8301e8 <__mulsi3>
  82cf18:	e0bf6715 	stw	r2,-612(fp)
  82cf1c:	01461f84 	movi	r5,6270
  82cf20:	e13f6e17 	ldw	r4,-584(fp)
  82cf24:	08301e80 	call	8301e8 <__mulsi3>
  82cf28:	1007883a 	mov	r3,r2
  82cf2c:	e0bf6717 	ldw	r2,-612(fp)
  82cf30:	1885883a 	add	r2,r3,r2
  82cf34:	e0bf6915 	stw	r2,-604(fp)
  82cf38:	017137c4 	movi	r5,-15137
  82cf3c:	e13f6f17 	ldw	r4,-580(fp)
  82cf40:	08301e80 	call	8301e8 <__mulsi3>
  82cf44:	1007883a 	mov	r3,r2
  82cf48:	e0bf6717 	ldw	r2,-612(fp)
  82cf4c:	1885883a 	add	r2,r3,r2
  82cf50:	e0bf7115 	stw	r2,-572(fp)
  82cf54:	e0ff6617 	ldw	r3,-616(fp)
  82cf58:	e0bf6917 	ldw	r2,-604(fp)
  82cf5c:	1885883a 	add	r2,r3,r2
  82cf60:	e0bf6a15 	stw	r2,-600(fp)
  82cf64:	e0ff6617 	ldw	r3,-616(fp)
  82cf68:	e0bf6917 	ldw	r2,-604(fp)
  82cf6c:	1885c83a 	sub	r2,r3,r2
  82cf70:	e0bf6d15 	stw	r2,-588(fp)
  82cf74:	e0ff6817 	ldw	r3,-608(fp)
  82cf78:	e0bf7117 	ldw	r2,-572(fp)
  82cf7c:	1885883a 	add	r2,r3,r2
  82cf80:	e0bf6b15 	stw	r2,-596(fp)
  82cf84:	e0ff6817 	ldw	r3,-608(fp)
  82cf88:	e0bf7117 	ldw	r2,-572(fp)
  82cf8c:	1885c83a 	sub	r2,r3,r2
  82cf90:	e0bf6c15 	stw	r2,-592(fp)
  82cf94:	e0bf6317 	ldw	r2,-628(fp)
  82cf98:	10800704 	addi	r2,r2,28
  82cf9c:	10800017 	ldw	r2,0(r2)
  82cfa0:	e0bf6615 	stw	r2,-616(fp)
  82cfa4:	e0bf6317 	ldw	r2,-628(fp)
  82cfa8:	10800504 	addi	r2,r2,20
  82cfac:	10800017 	ldw	r2,0(r2)
  82cfb0:	e0bf6815 	stw	r2,-608(fp)
  82cfb4:	e0bf6317 	ldw	r2,-628(fp)
  82cfb8:	10800304 	addi	r2,r2,12
  82cfbc:	10800017 	ldw	r2,0(r2)
  82cfc0:	e0bf6915 	stw	r2,-604(fp)
  82cfc4:	e0bf6317 	ldw	r2,-628(fp)
  82cfc8:	10800104 	addi	r2,r2,4
  82cfcc:	10800017 	ldw	r2,0(r2)
  82cfd0:	e0bf7115 	stw	r2,-572(fp)
  82cfd4:	e0ff6617 	ldw	r3,-616(fp)
  82cfd8:	e0bf6917 	ldw	r2,-604(fp)
  82cfdc:	1885883a 	add	r2,r3,r2
  82cfe0:	e0bf6e15 	stw	r2,-584(fp)
  82cfe4:	e0ff6817 	ldw	r3,-608(fp)
  82cfe8:	e0bf7117 	ldw	r2,-572(fp)
  82cfec:	1885883a 	add	r2,r3,r2
  82cff0:	e0bf6f15 	stw	r2,-580(fp)
  82cff4:	e0ff6e17 	ldw	r3,-584(fp)
  82cff8:	e0bf6f17 	ldw	r2,-580(fp)
  82cffc:	1885883a 	add	r2,r3,r2
  82d000:	01496844 	movi	r5,9633
  82d004:	1009883a 	mov	r4,r2
  82d008:	08301e80 	call	8301e8 <__mulsi3>
  82d00c:	e0bf6715 	stw	r2,-612(fp)
  82d010:	01704ec4 	movi	r5,-16069
  82d014:	e13f6e17 	ldw	r4,-584(fp)
  82d018:	08301e80 	call	8301e8 <__mulsi3>
  82d01c:	e0bf6e15 	stw	r2,-584(fp)
  82d020:	017ce104 	movi	r5,-3196
  82d024:	e13f6f17 	ldw	r4,-580(fp)
  82d028:	08301e80 	call	8301e8 <__mulsi3>
  82d02c:	e0bf6f15 	stw	r2,-580(fp)
  82d030:	e0ff6e17 	ldw	r3,-584(fp)
  82d034:	e0bf6717 	ldw	r2,-612(fp)
  82d038:	1885883a 	add	r2,r3,r2
  82d03c:	e0bf6e15 	stw	r2,-584(fp)
  82d040:	e0ff6f17 	ldw	r3,-580(fp)
  82d044:	e0bf6717 	ldw	r2,-612(fp)
  82d048:	1885883a 	add	r2,r3,r2
  82d04c:	e0bf6f15 	stw	r2,-580(fp)
  82d050:	e0ff6617 	ldw	r3,-616(fp)
  82d054:	e0bf7117 	ldw	r2,-572(fp)
  82d058:	1885883a 	add	r2,r3,r2
  82d05c:	0178ccc4 	movi	r5,-7373
  82d060:	1009883a 	mov	r4,r2
  82d064:	08301e80 	call	8301e8 <__mulsi3>
  82d068:	e0bf6715 	stw	r2,-612(fp)
  82d06c:	01426384 	movi	r5,2446
  82d070:	e13f6617 	ldw	r4,-616(fp)
  82d074:	08301e80 	call	8301e8 <__mulsi3>
  82d078:	e0bf6615 	stw	r2,-616(fp)
  82d07c:	014c02c4 	movi	r5,12299
  82d080:	e13f7117 	ldw	r4,-572(fp)
  82d084:	08301e80 	call	8301e8 <__mulsi3>
  82d088:	e0bf7115 	stw	r2,-572(fp)
  82d08c:	e0ff6717 	ldw	r3,-612(fp)
  82d090:	e0bf6e17 	ldw	r2,-584(fp)
  82d094:	1885883a 	add	r2,r3,r2
  82d098:	e0ff6617 	ldw	r3,-616(fp)
  82d09c:	1885883a 	add	r2,r3,r2
  82d0a0:	e0bf6615 	stw	r2,-616(fp)
  82d0a4:	e0ff6717 	ldw	r3,-612(fp)
  82d0a8:	e0bf6f17 	ldw	r2,-580(fp)
  82d0ac:	1885883a 	add	r2,r3,r2
  82d0b0:	e0ff7117 	ldw	r3,-572(fp)
  82d0b4:	1885883a 	add	r2,r3,r2
  82d0b8:	e0bf7115 	stw	r2,-572(fp)
  82d0bc:	e0ff6817 	ldw	r3,-608(fp)
  82d0c0:	e0bf6917 	ldw	r2,-604(fp)
  82d0c4:	1885883a 	add	r2,r3,r2
  82d0c8:	016b7f44 	movi	r5,-20995
  82d0cc:	1009883a 	mov	r4,r2
  82d0d0:	08301e80 	call	8301e8 <__mulsi3>
  82d0d4:	e0bf6715 	stw	r2,-612(fp)
  82d0d8:	01506cc4 	movi	r5,16819
  82d0dc:	e13f6817 	ldw	r4,-608(fp)
  82d0e0:	08301e80 	call	8301e8 <__mulsi3>
  82d0e4:	e0bf6815 	stw	r2,-608(fp)
  82d0e8:	01589504 	movi	r5,25172
  82d0ec:	e13f6917 	ldw	r4,-604(fp)
  82d0f0:	08301e80 	call	8301e8 <__mulsi3>
  82d0f4:	e0bf6915 	stw	r2,-604(fp)
  82d0f8:	e0ff6717 	ldw	r3,-612(fp)
  82d0fc:	e0bf6f17 	ldw	r2,-580(fp)
  82d100:	1885883a 	add	r2,r3,r2
  82d104:	e0ff6817 	ldw	r3,-608(fp)
  82d108:	1885883a 	add	r2,r3,r2
  82d10c:	e0bf6815 	stw	r2,-608(fp)
  82d110:	e0ff6717 	ldw	r3,-612(fp)
  82d114:	e0bf6e17 	ldw	r2,-584(fp)
  82d118:	1885883a 	add	r2,r3,r2
  82d11c:	e0ff6917 	ldw	r3,-604(fp)
  82d120:	1885883a 	add	r2,r3,r2
  82d124:	e0bf6915 	stw	r2,-604(fp)
  82d128:	e0ff6a17 	ldw	r3,-600(fp)
  82d12c:	e0bf7117 	ldw	r2,-572(fp)
  82d130:	1885883a 	add	r2,r3,r2
  82d134:	1005d4ba 	srai	r2,r2,18
  82d138:	1080ffcc 	andi	r2,r2,1023
  82d13c:	e0ff6517 	ldw	r3,-620(fp)
  82d140:	1885883a 	add	r2,r3,r2
  82d144:	10c00003 	ldbu	r3,0(r2)
  82d148:	e0bf7a17 	ldw	r2,-536(fp)
  82d14c:	10c00005 	stb	r3,0(r2)
  82d150:	e0bf7a17 	ldw	r2,-536(fp)
  82d154:	108001c4 	addi	r2,r2,7
  82d158:	e13f6a17 	ldw	r4,-600(fp)
  82d15c:	e0ff7117 	ldw	r3,-572(fp)
  82d160:	20c7c83a 	sub	r3,r4,r3
  82d164:	1807d4ba 	srai	r3,r3,18
  82d168:	18c0ffcc 	andi	r3,r3,1023
  82d16c:	e13f6517 	ldw	r4,-620(fp)
  82d170:	20c7883a 	add	r3,r4,r3
  82d174:	18c00003 	ldbu	r3,0(r3)
  82d178:	10c00005 	stb	r3,0(r2)
  82d17c:	e0bf7a17 	ldw	r2,-536(fp)
  82d180:	10800044 	addi	r2,r2,1
  82d184:	e13f6b17 	ldw	r4,-596(fp)
  82d188:	e0ff6917 	ldw	r3,-604(fp)
  82d18c:	20c7883a 	add	r3,r4,r3
  82d190:	1807d4ba 	srai	r3,r3,18
  82d194:	18c0ffcc 	andi	r3,r3,1023
  82d198:	e13f6517 	ldw	r4,-620(fp)
  82d19c:	20c7883a 	add	r3,r4,r3
  82d1a0:	18c00003 	ldbu	r3,0(r3)
  82d1a4:	10c00005 	stb	r3,0(r2)
  82d1a8:	e0bf7a17 	ldw	r2,-536(fp)
  82d1ac:	10800184 	addi	r2,r2,6
  82d1b0:	e13f6b17 	ldw	r4,-596(fp)
  82d1b4:	e0ff6917 	ldw	r3,-604(fp)
  82d1b8:	20c7c83a 	sub	r3,r4,r3
  82d1bc:	1807d4ba 	srai	r3,r3,18
  82d1c0:	18c0ffcc 	andi	r3,r3,1023
  82d1c4:	e13f6517 	ldw	r4,-620(fp)
  82d1c8:	20c7883a 	add	r3,r4,r3
  82d1cc:	18c00003 	ldbu	r3,0(r3)
  82d1d0:	10c00005 	stb	r3,0(r2)
  82d1d4:	e0bf7a17 	ldw	r2,-536(fp)
  82d1d8:	10800084 	addi	r2,r2,2
  82d1dc:	e13f6c17 	ldw	r4,-592(fp)
  82d1e0:	e0ff6817 	ldw	r3,-608(fp)
  82d1e4:	20c7883a 	add	r3,r4,r3
  82d1e8:	1807d4ba 	srai	r3,r3,18
  82d1ec:	18c0ffcc 	andi	r3,r3,1023
  82d1f0:	e13f6517 	ldw	r4,-620(fp)
  82d1f4:	20c7883a 	add	r3,r4,r3
  82d1f8:	18c00003 	ldbu	r3,0(r3)
  82d1fc:	10c00005 	stb	r3,0(r2)
  82d200:	e0bf7a17 	ldw	r2,-536(fp)
  82d204:	10800144 	addi	r2,r2,5
  82d208:	e13f6c17 	ldw	r4,-592(fp)
  82d20c:	e0ff6817 	ldw	r3,-608(fp)
  82d210:	20c7c83a 	sub	r3,r4,r3
  82d214:	1807d4ba 	srai	r3,r3,18
  82d218:	18c0ffcc 	andi	r3,r3,1023
  82d21c:	e13f6517 	ldw	r4,-620(fp)
  82d220:	20c7883a 	add	r3,r4,r3
  82d224:	18c00003 	ldbu	r3,0(r3)
  82d228:	10c00005 	stb	r3,0(r2)
  82d22c:	e0bf7a17 	ldw	r2,-536(fp)
  82d230:	108000c4 	addi	r2,r2,3
  82d234:	e13f6d17 	ldw	r4,-588(fp)
  82d238:	e0ff6617 	ldw	r3,-616(fp)
  82d23c:	20c7883a 	add	r3,r4,r3
  82d240:	1807d4ba 	srai	r3,r3,18
  82d244:	18c0ffcc 	andi	r3,r3,1023
  82d248:	e13f6517 	ldw	r4,-620(fp)
  82d24c:	20c7883a 	add	r3,r4,r3
  82d250:	18c00003 	ldbu	r3,0(r3)
  82d254:	10c00005 	stb	r3,0(r2)
  82d258:	e0bf7a17 	ldw	r2,-536(fp)
  82d25c:	10800104 	addi	r2,r2,4
  82d260:	e13f6d17 	ldw	r4,-588(fp)
  82d264:	e0ff6617 	ldw	r3,-616(fp)
  82d268:	20c7c83a 	sub	r3,r4,r3
  82d26c:	1807d4ba 	srai	r3,r3,18
  82d270:	18c0ffcc 	andi	r3,r3,1023
  82d274:	e13f6517 	ldw	r4,-620(fp)
  82d278:	20c7883a 	add	r3,r4,r3
  82d27c:	18c00003 	ldbu	r3,0(r3)
  82d280:	10c00005 	stb	r3,0(r2)
  82d284:	e0bf6317 	ldw	r2,-628(fp)
  82d288:	10800804 	addi	r2,r2,32
  82d28c:	e0bf6315 	stw	r2,-628(fp)
  82d290:	e0bf6417 	ldw	r2,-624(fp)
  82d294:	10800044 	addi	r2,r2,1
  82d298:	e0bf6415 	stw	r2,-624(fp)
  82d29c:	e0bf6417 	ldw	r2,-624(fp)
  82d2a0:	10800410 	cmplti	r2,r2,16
  82d2a4:	103ef21e 	bne	r2,zero,82ce70 <__alt_mem_epcs_flash_controller_0+0xff823e70>
  82d2a8:	0001883a 	nop
  82d2ac:	e6ffff04 	addi	sp,fp,-4
  82d2b0:	dfc00217 	ldw	ra,8(sp)
  82d2b4:	df000117 	ldw	fp,4(sp)
  82d2b8:	dc000017 	ldw	r16,0(sp)
  82d2bc:	dec00304 	addi	sp,sp,12
  82d2c0:	f800283a 	ret

0082d2c4 <jpeg_idct_7x14>:
  82d2c4:	deff7f04 	addi	sp,sp,-516
  82d2c8:	dfc08015 	stw	ra,512(sp)
  82d2cc:	df007f15 	stw	fp,508(sp)
  82d2d0:	dc007e15 	stw	r16,504(sp)
  82d2d4:	df007f04 	addi	fp,sp,508
  82d2d8:	e13ffb15 	stw	r4,-20(fp)
  82d2dc:	e17ffc15 	stw	r5,-16(fp)
  82d2e0:	e1bffd15 	stw	r6,-12(fp)
  82d2e4:	e1fffe15 	stw	r7,-8(fp)
  82d2e8:	e0bffb17 	ldw	r2,-20(fp)
  82d2ec:	10805417 	ldw	r2,336(r2)
  82d2f0:	10bfa004 	addi	r2,r2,-384
  82d2f4:	e0bf8515 	stw	r2,-492(fp)
  82d2f8:	e0bffd17 	ldw	r2,-12(fp)
  82d2fc:	e0bf8115 	stw	r2,-508(fp)
  82d300:	e0bffc17 	ldw	r2,-16(fp)
  82d304:	10801517 	ldw	r2,84(r2)
  82d308:	e0bf8215 	stw	r2,-504(fp)
  82d30c:	e0bf9904 	addi	r2,fp,-412
  82d310:	e0bf8315 	stw	r2,-500(fp)
  82d314:	e03f8415 	stw	zero,-496(fp)
  82d318:	0001a606 	br	82d9b4 <jpeg_idct_7x14+0x6f0>
  82d31c:	e0bf8117 	ldw	r2,-508(fp)
  82d320:	1080000b 	ldhu	r2,0(r2)
  82d324:	10ffffcc 	andi	r3,r2,65535
  82d328:	18e0001c 	xori	r3,r3,32768
  82d32c:	18e00004 	addi	r3,r3,-32768
  82d330:	e0bf8217 	ldw	r2,-504(fp)
  82d334:	10800017 	ldw	r2,0(r2)
  82d338:	100b883a 	mov	r5,r2
  82d33c:	1809883a 	mov	r4,r3
  82d340:	08301e80 	call	8301e8 <__mulsi3>
  82d344:	e0bf8615 	stw	r2,-488(fp)
  82d348:	e0bf8617 	ldw	r2,-488(fp)
  82d34c:	1004937a 	slli	r2,r2,13
  82d350:	e0bf8615 	stw	r2,-488(fp)
  82d354:	e0bf8617 	ldw	r2,-488(fp)
  82d358:	10810004 	addi	r2,r2,1024
  82d35c:	e0bf8615 	stw	r2,-488(fp)
  82d360:	e0bf8117 	ldw	r2,-508(fp)
  82d364:	10801004 	addi	r2,r2,64
  82d368:	1080000b 	ldhu	r2,0(r2)
  82d36c:	10ffffcc 	andi	r3,r2,65535
  82d370:	18e0001c 	xori	r3,r3,32768
  82d374:	18e00004 	addi	r3,r3,-32768
  82d378:	e0bf8217 	ldw	r2,-504(fp)
  82d37c:	10802004 	addi	r2,r2,128
  82d380:	10800017 	ldw	r2,0(r2)
  82d384:	100b883a 	mov	r5,r2
  82d388:	1809883a 	mov	r4,r3
  82d38c:	08301e80 	call	8301e8 <__mulsi3>
  82d390:	e0bf8715 	stw	r2,-484(fp)
  82d394:	014a3184 	movi	r5,10438
  82d398:	e13f8717 	ldw	r4,-484(fp)
  82d39c:	08301e80 	call	8301e8 <__mulsi3>
  82d3a0:	e0bf8815 	stw	r2,-480(fp)
  82d3a4:	01428484 	movi	r5,2578
  82d3a8:	e13f8717 	ldw	r4,-484(fp)
  82d3ac:	08301e80 	call	8301e8 <__mulsi3>
  82d3b0:	e0bf8915 	stw	r2,-476(fp)
  82d3b4:	01470dc4 	movi	r5,7223
  82d3b8:	e13f8717 	ldw	r4,-484(fp)
  82d3bc:	08301e80 	call	8301e8 <__mulsi3>
  82d3c0:	e0bf8715 	stw	r2,-484(fp)
  82d3c4:	e0ff8617 	ldw	r3,-488(fp)
  82d3c8:	e0bf8817 	ldw	r2,-480(fp)
  82d3cc:	1885883a 	add	r2,r3,r2
  82d3d0:	e0bf8a15 	stw	r2,-472(fp)
  82d3d4:	e0ff8617 	ldw	r3,-488(fp)
  82d3d8:	e0bf8917 	ldw	r2,-476(fp)
  82d3dc:	1885883a 	add	r2,r3,r2
  82d3e0:	e0bf8b15 	stw	r2,-468(fp)
  82d3e4:	e0ff8617 	ldw	r3,-488(fp)
  82d3e8:	e0bf8717 	ldw	r2,-484(fp)
  82d3ec:	1885c83a 	sub	r2,r3,r2
  82d3f0:	e0bf8c15 	stw	r2,-464(fp)
  82d3f4:	e0ff8817 	ldw	r3,-480(fp)
  82d3f8:	e0bf8917 	ldw	r2,-476(fp)
  82d3fc:	1887883a 	add	r3,r3,r2
  82d400:	e0bf8717 	ldw	r2,-484(fp)
  82d404:	1885c83a 	sub	r2,r3,r2
  82d408:	1085883a 	add	r2,r2,r2
  82d40c:	1007883a 	mov	r3,r2
  82d410:	e0bf8617 	ldw	r2,-488(fp)
  82d414:	10c5c83a 	sub	r2,r2,r3
  82d418:	1005d2fa 	srai	r2,r2,11
  82d41c:	e0bf8d15 	stw	r2,-460(fp)
  82d420:	e0bf8117 	ldw	r2,-508(fp)
  82d424:	10800804 	addi	r2,r2,32
  82d428:	1080000b 	ldhu	r2,0(r2)
  82d42c:	10ffffcc 	andi	r3,r2,65535
  82d430:	18e0001c 	xori	r3,r3,32768
  82d434:	18e00004 	addi	r3,r3,-32768
  82d438:	e0bf8217 	ldw	r2,-504(fp)
  82d43c:	10801004 	addi	r2,r2,64
  82d440:	10800017 	ldw	r2,0(r2)
  82d444:	100b883a 	mov	r5,r2
  82d448:	1809883a 	mov	r4,r3
  82d44c:	08301e80 	call	8301e8 <__mulsi3>
  82d450:	e0bf8615 	stw	r2,-488(fp)
  82d454:	e0bf8117 	ldw	r2,-508(fp)
  82d458:	10801804 	addi	r2,r2,96
  82d45c:	1080000b 	ldhu	r2,0(r2)
  82d460:	10ffffcc 	andi	r3,r2,65535
  82d464:	18e0001c 	xori	r3,r3,32768
  82d468:	18e00004 	addi	r3,r3,-32768
  82d46c:	e0bf8217 	ldw	r2,-504(fp)
  82d470:	10803004 	addi	r2,r2,192
  82d474:	10800017 	ldw	r2,0(r2)
  82d478:	100b883a 	mov	r5,r2
  82d47c:	1809883a 	mov	r4,r3
  82d480:	08301e80 	call	8301e8 <__mulsi3>
  82d484:	e0bf8815 	stw	r2,-480(fp)
  82d488:	e0ff8617 	ldw	r3,-488(fp)
  82d48c:	e0bf8817 	ldw	r2,-480(fp)
  82d490:	1885883a 	add	r2,r3,r2
  82d494:	0148d884 	movi	r5,9058
  82d498:	1009883a 	mov	r4,r2
  82d49c:	08301e80 	call	8301e8 <__mulsi3>
  82d4a0:	e0bf8915 	stw	r2,-476(fp)
  82d4a4:	01422f44 	movi	r5,2237
  82d4a8:	e13f8617 	ldw	r4,-488(fp)
  82d4ac:	08301e80 	call	8301e8 <__mulsi3>
  82d4b0:	1007883a 	mov	r3,r2
  82d4b4:	e0bf8917 	ldw	r2,-476(fp)
  82d4b8:	1885883a 	add	r2,r3,r2
  82d4bc:	e0bf8e15 	stw	r2,-456(fp)
  82d4c0:	01723f04 	movi	r5,-14084
  82d4c4:	e13f8817 	ldw	r4,-480(fp)
  82d4c8:	08301e80 	call	8301e8 <__mulsi3>
  82d4cc:	1007883a 	mov	r3,r2
  82d4d0:	e0bf8917 	ldw	r2,-476(fp)
  82d4d4:	1885883a 	add	r2,r3,r2
  82d4d8:	e0bf8f15 	stw	r2,-452(fp)
  82d4dc:	0144e8c4 	movi	r5,5027
  82d4e0:	e13f8617 	ldw	r4,-488(fp)
  82d4e4:	08301e80 	call	8301e8 <__mulsi3>
  82d4e8:	1021883a 	mov	r16,r2
  82d4ec:	0174f844 	movi	r5,-11295
  82d4f0:	e13f8817 	ldw	r4,-480(fp)
  82d4f4:	08301e80 	call	8301e8 <__mulsi3>
  82d4f8:	8085883a 	add	r2,r16,r2
  82d4fc:	e0bf9015 	stw	r2,-448(fp)
  82d500:	e0ff8a17 	ldw	r3,-472(fp)
  82d504:	e0bf8e17 	ldw	r2,-456(fp)
  82d508:	1885883a 	add	r2,r3,r2
  82d50c:	e0bf9115 	stw	r2,-444(fp)
  82d510:	e0ff8a17 	ldw	r3,-472(fp)
  82d514:	e0bf8e17 	ldw	r2,-456(fp)
  82d518:	1885c83a 	sub	r2,r3,r2
  82d51c:	e0bf9215 	stw	r2,-440(fp)
  82d520:	e0ff8b17 	ldw	r3,-468(fp)
  82d524:	e0bf8f17 	ldw	r2,-452(fp)
  82d528:	1885883a 	add	r2,r3,r2
  82d52c:	e0bf9315 	stw	r2,-436(fp)
  82d530:	e0ff8b17 	ldw	r3,-468(fp)
  82d534:	e0bf8f17 	ldw	r2,-452(fp)
  82d538:	1885c83a 	sub	r2,r3,r2
  82d53c:	e0bf9415 	stw	r2,-432(fp)
  82d540:	e0ff8c17 	ldw	r3,-464(fp)
  82d544:	e0bf9017 	ldw	r2,-448(fp)
  82d548:	1885883a 	add	r2,r3,r2
  82d54c:	e0bf9515 	stw	r2,-428(fp)
  82d550:	e0ff8c17 	ldw	r3,-464(fp)
  82d554:	e0bf9017 	ldw	r2,-448(fp)
  82d558:	1885c83a 	sub	r2,r3,r2
  82d55c:	e0bf9615 	stw	r2,-424(fp)
  82d560:	e0bf8117 	ldw	r2,-508(fp)
  82d564:	10800404 	addi	r2,r2,16
  82d568:	1080000b 	ldhu	r2,0(r2)
  82d56c:	10ffffcc 	andi	r3,r2,65535
  82d570:	18e0001c 	xori	r3,r3,32768
  82d574:	18e00004 	addi	r3,r3,-32768
  82d578:	e0bf8217 	ldw	r2,-504(fp)
  82d57c:	10800804 	addi	r2,r2,32
  82d580:	10800017 	ldw	r2,0(r2)
  82d584:	100b883a 	mov	r5,r2
  82d588:	1809883a 	mov	r4,r3
  82d58c:	08301e80 	call	8301e8 <__mulsi3>
  82d590:	e0bf8615 	stw	r2,-488(fp)
  82d594:	e0bf8117 	ldw	r2,-508(fp)
  82d598:	10800c04 	addi	r2,r2,48
  82d59c:	1080000b 	ldhu	r2,0(r2)
  82d5a0:	10ffffcc 	andi	r3,r2,65535
  82d5a4:	18e0001c 	xori	r3,r3,32768
  82d5a8:	18e00004 	addi	r3,r3,-32768
  82d5ac:	e0bf8217 	ldw	r2,-504(fp)
  82d5b0:	10801804 	addi	r2,r2,96
  82d5b4:	10800017 	ldw	r2,0(r2)
  82d5b8:	100b883a 	mov	r5,r2
  82d5bc:	1809883a 	mov	r4,r3
  82d5c0:	08301e80 	call	8301e8 <__mulsi3>
  82d5c4:	e0bf8815 	stw	r2,-480(fp)
  82d5c8:	e0bf8117 	ldw	r2,-508(fp)
  82d5cc:	10801404 	addi	r2,r2,80
  82d5d0:	1080000b 	ldhu	r2,0(r2)
  82d5d4:	10ffffcc 	andi	r3,r2,65535
  82d5d8:	18e0001c 	xori	r3,r3,32768
  82d5dc:	18e00004 	addi	r3,r3,-32768
  82d5e0:	e0bf8217 	ldw	r2,-504(fp)
  82d5e4:	10802804 	addi	r2,r2,160
  82d5e8:	10800017 	ldw	r2,0(r2)
  82d5ec:	100b883a 	mov	r5,r2
  82d5f0:	1809883a 	mov	r4,r3
  82d5f4:	08301e80 	call	8301e8 <__mulsi3>
  82d5f8:	e0bf8915 	stw	r2,-476(fp)
  82d5fc:	e0bf8117 	ldw	r2,-508(fp)
  82d600:	10801c04 	addi	r2,r2,112
  82d604:	1080000b 	ldhu	r2,0(r2)
  82d608:	10ffffcc 	andi	r3,r2,65535
  82d60c:	18e0001c 	xori	r3,r3,32768
  82d610:	18e00004 	addi	r3,r3,-32768
  82d614:	e0bf8217 	ldw	r2,-504(fp)
  82d618:	10803804 	addi	r2,r2,224
  82d61c:	10800017 	ldw	r2,0(r2)
  82d620:	100b883a 	mov	r5,r2
  82d624:	1809883a 	mov	r4,r3
  82d628:	08301e80 	call	8301e8 <__mulsi3>
  82d62c:	e0bf8715 	stw	r2,-484(fp)
  82d630:	e0bf8717 	ldw	r2,-484(fp)
  82d634:	1004937a 	slli	r2,r2,13
  82d638:	e0bf8e15 	stw	r2,-456(fp)
  82d63c:	e0ff8617 	ldw	r3,-488(fp)
  82d640:	e0bf8917 	ldw	r2,-476(fp)
  82d644:	1885883a 	add	r2,r3,r2
  82d648:	e0bf8f15 	stw	r2,-452(fp)
  82d64c:	e0ff8617 	ldw	r3,-488(fp)
  82d650:	e0bf8817 	ldw	r2,-480(fp)
  82d654:	1885883a 	add	r2,r3,r2
  82d658:	014aadc4 	movi	r5,10935
  82d65c:	1009883a 	mov	r4,r2
  82d660:	08301e80 	call	8301e8 <__mulsi3>
  82d664:	e0bf8b15 	stw	r2,-468(fp)
  82d668:	01499484 	movi	r5,9810
  82d66c:	e13f8f17 	ldw	r4,-452(fp)
  82d670:	08301e80 	call	8301e8 <__mulsi3>
  82d674:	e0bf8c15 	stw	r2,-464(fp)
  82d678:	e0ff8b17 	ldw	r3,-468(fp)
  82d67c:	e0bf8c17 	ldw	r2,-464(fp)
  82d680:	1887883a 	add	r3,r3,r2
  82d684:	e0bf8e17 	ldw	r2,-456(fp)
  82d688:	18a1883a 	add	r16,r3,r2
  82d68c:	0176fc04 	movi	r5,-9232
  82d690:	e13f8617 	ldw	r4,-488(fp)
  82d694:	08301e80 	call	8301e8 <__mulsi3>
  82d698:	8085883a 	add	r2,r16,r2
  82d69c:	e0bf8a15 	stw	r2,-472(fp)
  82d6a0:	01460504 	movi	r5,6164
  82d6a4:	e13f8f17 	ldw	r4,-452(fp)
  82d6a8:	08301e80 	call	8301e8 <__mulsi3>
  82d6ac:	e0bf8f15 	stw	r2,-452(fp)
  82d6b0:	017782c4 	movi	r5,-8693
  82d6b4:	e13f8617 	ldw	r4,-488(fp)
  82d6b8:	08301e80 	call	8301e8 <__mulsi3>
  82d6bc:	1007883a 	mov	r3,r2
  82d6c0:	e0bf8f17 	ldw	r2,-452(fp)
  82d6c4:	1885883a 	add	r2,r3,r2
  82d6c8:	e0bf9715 	stw	r2,-420(fp)
  82d6cc:	e0ff8617 	ldw	r3,-488(fp)
  82d6d0:	e0bf8817 	ldw	r2,-480(fp)
  82d6d4:	1885c83a 	sub	r2,r3,r2
  82d6d8:	e0bf8615 	stw	r2,-488(fp)
  82d6dc:	0143bc84 	movi	r5,3826
  82d6e0:	e13f8617 	ldw	r4,-488(fp)
  82d6e4:	08301e80 	call	8301e8 <__mulsi3>
  82d6e8:	1007883a 	mov	r3,r2
  82d6ec:	e0bf8e17 	ldw	r2,-456(fp)
  82d6f0:	1885c83a 	sub	r2,r3,r2
  82d6f4:	e0bf9015 	stw	r2,-448(fp)
  82d6f8:	e0ff9717 	ldw	r3,-420(fp)
  82d6fc:	e0bf9017 	ldw	r2,-448(fp)
  82d700:	1885883a 	add	r2,r3,r2
  82d704:	e0bf9715 	stw	r2,-420(fp)
  82d708:	e0ff8617 	ldw	r3,-488(fp)
  82d70c:	e0bf8717 	ldw	r2,-484(fp)
  82d710:	1885883a 	add	r2,r3,r2
  82d714:	e0bf8615 	stw	r2,-488(fp)
  82d718:	e0ff8817 	ldw	r3,-480(fp)
  82d71c:	e0bf8917 	ldw	r2,-476(fp)
  82d720:	1885883a 	add	r2,r3,r2
  82d724:	017ebbc4 	movi	r5,-1297
  82d728:	1009883a 	mov	r4,r2
  82d72c:	08301e80 	call	8301e8 <__mulsi3>
  82d730:	1007883a 	mov	r3,r2
  82d734:	e0bf8e17 	ldw	r2,-456(fp)
  82d738:	1885c83a 	sub	r2,r3,r2
  82d73c:	e0bf8715 	stw	r2,-484(fp)
  82d740:	017c9b84 	movi	r5,-3474
  82d744:	e13f8817 	ldw	r4,-480(fp)
  82d748:	08301e80 	call	8301e8 <__mulsi3>
  82d74c:	1007883a 	mov	r3,r2
  82d750:	e0bf8717 	ldw	r2,-484(fp)
  82d754:	1885883a 	add	r2,r3,r2
  82d758:	e0ff8b17 	ldw	r3,-468(fp)
  82d75c:	1885883a 	add	r2,r3,r2
  82d760:	e0bf8b15 	stw	r2,-468(fp)
  82d764:	016d0244 	movi	r5,-19447
  82d768:	e13f8917 	ldw	r4,-476(fp)
  82d76c:	08301e80 	call	8301e8 <__mulsi3>
  82d770:	1007883a 	mov	r3,r2
  82d774:	e0bf8717 	ldw	r2,-484(fp)
  82d778:	1885883a 	add	r2,r3,r2
  82d77c:	e0ff8c17 	ldw	r3,-464(fp)
  82d780:	1885883a 	add	r2,r3,r2
  82d784:	e0bf8c15 	stw	r2,-464(fp)
  82d788:	e0ff8917 	ldw	r3,-476(fp)
  82d78c:	e0bf8817 	ldw	r2,-480(fp)
  82d790:	1885c83a 	sub	r2,r3,r2
  82d794:	014b3e04 	movi	r5,11512
  82d798:	1009883a 	mov	r4,r2
  82d79c:	08301e80 	call	8301e8 <__mulsi3>
  82d7a0:	e0bf8715 	stw	r2,-484(fp)
  82d7a4:	e0ff8717 	ldw	r3,-484(fp)
  82d7a8:	e0bf8e17 	ldw	r2,-456(fp)
  82d7ac:	18a1883a 	add	r16,r3,r2
  82d7b0:	01727984 	movi	r5,-13850
  82d7b4:	e13f8917 	ldw	r4,-476(fp)
  82d7b8:	08301e80 	call	8301e8 <__mulsi3>
  82d7bc:	8085883a 	add	r2,r16,r2
  82d7c0:	e0ff8f17 	ldw	r3,-452(fp)
  82d7c4:	1885883a 	add	r2,r3,r2
  82d7c8:	e0bf8f15 	stw	r2,-452(fp)
  82d7cc:	01456644 	movi	r5,5529
  82d7d0:	e13f8817 	ldw	r4,-480(fp)
  82d7d4:	08301e80 	call	8301e8 <__mulsi3>
  82d7d8:	1007883a 	mov	r3,r2
  82d7dc:	e0bf8717 	ldw	r2,-484(fp)
  82d7e0:	1885883a 	add	r2,r3,r2
  82d7e4:	e0ff9017 	ldw	r3,-448(fp)
  82d7e8:	1885883a 	add	r2,r3,r2
  82d7ec:	e0bf9015 	stw	r2,-448(fp)
  82d7f0:	e0ff8617 	ldw	r3,-488(fp)
  82d7f4:	e0bf8917 	ldw	r2,-476(fp)
  82d7f8:	1885c83a 	sub	r2,r3,r2
  82d7fc:	1085883a 	add	r2,r2,r2
  82d800:	1085883a 	add	r2,r2,r2
  82d804:	e0bf8e15 	stw	r2,-456(fp)
  82d808:	e0ff9117 	ldw	r3,-444(fp)
  82d80c:	e0bf8a17 	ldw	r2,-472(fp)
  82d810:	1885883a 	add	r2,r3,r2
  82d814:	1007d2fa 	srai	r3,r2,11
  82d818:	e0bf8317 	ldw	r2,-500(fp)
  82d81c:	10c00015 	stw	r3,0(r2)
  82d820:	e0bf8317 	ldw	r2,-500(fp)
  82d824:	10805b04 	addi	r2,r2,364
  82d828:	e13f9117 	ldw	r4,-444(fp)
  82d82c:	e0ff8a17 	ldw	r3,-472(fp)
  82d830:	20c7c83a 	sub	r3,r4,r3
  82d834:	1807d2fa 	srai	r3,r3,11
  82d838:	10c00015 	stw	r3,0(r2)
  82d83c:	e0bf8317 	ldw	r2,-500(fp)
  82d840:	10800704 	addi	r2,r2,28
  82d844:	e13f9317 	ldw	r4,-436(fp)
  82d848:	e0ff8b17 	ldw	r3,-468(fp)
  82d84c:	20c7883a 	add	r3,r4,r3
  82d850:	1807d2fa 	srai	r3,r3,11
  82d854:	10c00015 	stw	r3,0(r2)
  82d858:	e0bf8317 	ldw	r2,-500(fp)
  82d85c:	10805404 	addi	r2,r2,336
  82d860:	e13f9317 	ldw	r4,-436(fp)
  82d864:	e0ff8b17 	ldw	r3,-468(fp)
  82d868:	20c7c83a 	sub	r3,r4,r3
  82d86c:	1807d2fa 	srai	r3,r3,11
  82d870:	10c00015 	stw	r3,0(r2)
  82d874:	e0bf8317 	ldw	r2,-500(fp)
  82d878:	10800e04 	addi	r2,r2,56
  82d87c:	e13f9517 	ldw	r4,-428(fp)
  82d880:	e0ff8c17 	ldw	r3,-464(fp)
  82d884:	20c7883a 	add	r3,r4,r3
  82d888:	1807d2fa 	srai	r3,r3,11
  82d88c:	10c00015 	stw	r3,0(r2)
  82d890:	e0bf8317 	ldw	r2,-500(fp)
  82d894:	10804d04 	addi	r2,r2,308
  82d898:	e13f9517 	ldw	r4,-428(fp)
  82d89c:	e0ff8c17 	ldw	r3,-464(fp)
  82d8a0:	20c7c83a 	sub	r3,r4,r3
  82d8a4:	1807d2fa 	srai	r3,r3,11
  82d8a8:	10c00015 	stw	r3,0(r2)
  82d8ac:	e0bf8317 	ldw	r2,-500(fp)
  82d8b0:	10801504 	addi	r2,r2,84
  82d8b4:	e13f8d17 	ldw	r4,-460(fp)
  82d8b8:	e0ff8e17 	ldw	r3,-456(fp)
  82d8bc:	20c7883a 	add	r3,r4,r3
  82d8c0:	10c00015 	stw	r3,0(r2)
  82d8c4:	e0bf8317 	ldw	r2,-500(fp)
  82d8c8:	10804604 	addi	r2,r2,280
  82d8cc:	e13f8d17 	ldw	r4,-460(fp)
  82d8d0:	e0ff8e17 	ldw	r3,-456(fp)
  82d8d4:	20c7c83a 	sub	r3,r4,r3
  82d8d8:	10c00015 	stw	r3,0(r2)
  82d8dc:	e0bf8317 	ldw	r2,-500(fp)
  82d8e0:	10801c04 	addi	r2,r2,112
  82d8e4:	e13f9617 	ldw	r4,-424(fp)
  82d8e8:	e0ff8f17 	ldw	r3,-452(fp)
  82d8ec:	20c7883a 	add	r3,r4,r3
  82d8f0:	1807d2fa 	srai	r3,r3,11
  82d8f4:	10c00015 	stw	r3,0(r2)
  82d8f8:	e0bf8317 	ldw	r2,-500(fp)
  82d8fc:	10803f04 	addi	r2,r2,252
  82d900:	e13f9617 	ldw	r4,-424(fp)
  82d904:	e0ff8f17 	ldw	r3,-452(fp)
  82d908:	20c7c83a 	sub	r3,r4,r3
  82d90c:	1807d2fa 	srai	r3,r3,11
  82d910:	10c00015 	stw	r3,0(r2)
  82d914:	e0bf8317 	ldw	r2,-500(fp)
  82d918:	10802304 	addi	r2,r2,140
  82d91c:	e13f9417 	ldw	r4,-432(fp)
  82d920:	e0ff9017 	ldw	r3,-448(fp)
  82d924:	20c7883a 	add	r3,r4,r3
  82d928:	1807d2fa 	srai	r3,r3,11
  82d92c:	10c00015 	stw	r3,0(r2)
  82d930:	e0bf8317 	ldw	r2,-500(fp)
  82d934:	10803804 	addi	r2,r2,224
  82d938:	e13f9417 	ldw	r4,-432(fp)
  82d93c:	e0ff9017 	ldw	r3,-448(fp)
  82d940:	20c7c83a 	sub	r3,r4,r3
  82d944:	1807d2fa 	srai	r3,r3,11
  82d948:	10c00015 	stw	r3,0(r2)
  82d94c:	e0bf8317 	ldw	r2,-500(fp)
  82d950:	10802a04 	addi	r2,r2,168
  82d954:	e13f9217 	ldw	r4,-440(fp)
  82d958:	e0ff9717 	ldw	r3,-420(fp)
  82d95c:	20c7883a 	add	r3,r4,r3
  82d960:	1807d2fa 	srai	r3,r3,11
  82d964:	10c00015 	stw	r3,0(r2)
  82d968:	e0bf8317 	ldw	r2,-500(fp)
  82d96c:	10803104 	addi	r2,r2,196
  82d970:	e13f9217 	ldw	r4,-440(fp)
  82d974:	e0ff9717 	ldw	r3,-420(fp)
  82d978:	20c7c83a 	sub	r3,r4,r3
  82d97c:	1807d2fa 	srai	r3,r3,11
  82d980:	10c00015 	stw	r3,0(r2)
  82d984:	e0bf8417 	ldw	r2,-496(fp)
  82d988:	10800044 	addi	r2,r2,1
  82d98c:	e0bf8415 	stw	r2,-496(fp)
  82d990:	e0bf8117 	ldw	r2,-508(fp)
  82d994:	10800084 	addi	r2,r2,2
  82d998:	e0bf8115 	stw	r2,-508(fp)
  82d99c:	e0bf8217 	ldw	r2,-504(fp)
  82d9a0:	10800104 	addi	r2,r2,4
  82d9a4:	e0bf8215 	stw	r2,-504(fp)
  82d9a8:	e0bf8317 	ldw	r2,-500(fp)
  82d9ac:	10800104 	addi	r2,r2,4
  82d9b0:	e0bf8315 	stw	r2,-500(fp)
  82d9b4:	e0bf8417 	ldw	r2,-496(fp)
  82d9b8:	108001d0 	cmplti	r2,r2,7
  82d9bc:	103e571e 	bne	r2,zero,82d31c <__alt_mem_epcs_flash_controller_0+0xff82431c>
  82d9c0:	e0bf9904 	addi	r2,fp,-412
  82d9c4:	e0bf8315 	stw	r2,-500(fp)
  82d9c8:	e03f8415 	stw	zero,-496(fp)
  82d9cc:	0000ee06 	br	82dd88 <jpeg_idct_7x14+0xac4>
  82d9d0:	e0bf8417 	ldw	r2,-496(fp)
  82d9d4:	1085883a 	add	r2,r2,r2
  82d9d8:	1085883a 	add	r2,r2,r2
  82d9dc:	1007883a 	mov	r3,r2
  82d9e0:	e0bffe17 	ldw	r2,-8(fp)
  82d9e4:	10c5883a 	add	r2,r2,r3
  82d9e8:	10c00017 	ldw	r3,0(r2)
  82d9ec:	e0800217 	ldw	r2,8(fp)
  82d9f0:	1885883a 	add	r2,r3,r2
  82d9f4:	e0bf9815 	stw	r2,-416(fp)
  82d9f8:	e0bf8317 	ldw	r2,-500(fp)
  82d9fc:	10800017 	ldw	r2,0(r2)
  82da00:	10900404 	addi	r2,r2,16400
  82da04:	e0bf8d15 	stw	r2,-460(fp)
  82da08:	e0bf8d17 	ldw	r2,-460(fp)
  82da0c:	1004937a 	slli	r2,r2,13
  82da10:	e0bf8d15 	stw	r2,-460(fp)
  82da14:	e0bf8317 	ldw	r2,-500(fp)
  82da18:	10800204 	addi	r2,r2,8
  82da1c:	10800017 	ldw	r2,0(r2)
  82da20:	e0bf8615 	stw	r2,-488(fp)
  82da24:	e0bf8317 	ldw	r2,-500(fp)
  82da28:	10800404 	addi	r2,r2,16
  82da2c:	10800017 	ldw	r2,0(r2)
  82da30:	e0bf8815 	stw	r2,-480(fp)
  82da34:	e0bf8317 	ldw	r2,-500(fp)
  82da38:	10800604 	addi	r2,r2,24
  82da3c:	10800017 	ldw	r2,0(r2)
  82da40:	e0bf8915 	stw	r2,-476(fp)
  82da44:	e0ff8817 	ldw	r3,-480(fp)
  82da48:	e0bf8917 	ldw	r2,-476(fp)
  82da4c:	1885c83a 	sub	r2,r3,r2
  82da50:	01470dc4 	movi	r5,7223
  82da54:	1009883a 	mov	r4,r2
  82da58:	08301e80 	call	8301e8 <__mulsi3>
  82da5c:	e0bf9115 	stw	r2,-444(fp)
  82da60:	e0ff8617 	ldw	r3,-488(fp)
  82da64:	e0bf8817 	ldw	r2,-480(fp)
  82da68:	1885c83a 	sub	r2,r3,r2
  82da6c:	01428484 	movi	r5,2578
  82da70:	1009883a 	mov	r4,r2
  82da74:	08301e80 	call	8301e8 <__mulsi3>
  82da78:	e0bf9515 	stw	r2,-428(fp)
  82da7c:	e0ff9117 	ldw	r3,-444(fp)
  82da80:	e0bf9517 	ldw	r2,-428(fp)
  82da84:	1887883a 	add	r3,r3,r2
  82da88:	e0bf8d17 	ldw	r2,-460(fp)
  82da8c:	18a1883a 	add	r16,r3,r2
  82da90:	01714544 	movi	r5,-15083
  82da94:	e13f8817 	ldw	r4,-480(fp)
  82da98:	08301e80 	call	8301e8 <__mulsi3>
  82da9c:	8085883a 	add	r2,r16,r2
  82daa0:	e0bf9315 	stw	r2,-436(fp)
  82daa4:	e0ff8617 	ldw	r3,-488(fp)
  82daa8:	e0bf8917 	ldw	r2,-476(fp)
  82daac:	1885883a 	add	r2,r3,r2
  82dab0:	e0bf8a15 	stw	r2,-472(fp)
  82dab4:	e0ff8817 	ldw	r3,-480(fp)
  82dab8:	e0bf8a17 	ldw	r2,-472(fp)
  82dabc:	1885c83a 	sub	r2,r3,r2
  82dac0:	e0bf8815 	stw	r2,-480(fp)
  82dac4:	014a3184 	movi	r5,10438
  82dac8:	e13f8a17 	ldw	r4,-472(fp)
  82dacc:	08301e80 	call	8301e8 <__mulsi3>
  82dad0:	1007883a 	mov	r3,r2
  82dad4:	e0bf8d17 	ldw	r2,-460(fp)
  82dad8:	1885883a 	add	r2,r3,r2
  82dadc:	e0bf8a15 	stw	r2,-472(fp)
  82dae0:	017f60c4 	movi	r5,-637
  82dae4:	e13f8917 	ldw	r4,-476(fp)
  82dae8:	08301e80 	call	8301e8 <__mulsi3>
  82daec:	1007883a 	mov	r3,r2
  82daf0:	e0bf8a17 	ldw	r2,-472(fp)
  82daf4:	1885883a 	add	r2,r3,r2
  82daf8:	e0ff9117 	ldw	r3,-444(fp)
  82dafc:	1885883a 	add	r2,r3,r2
  82db00:	e0bf9115 	stw	r2,-444(fp)
  82db04:	016c3c44 	movi	r5,-20239
  82db08:	e13f8617 	ldw	r4,-488(fp)
  82db0c:	08301e80 	call	8301e8 <__mulsi3>
  82db10:	1007883a 	mov	r3,r2
  82db14:	e0bf8a17 	ldw	r2,-472(fp)
  82db18:	1885883a 	add	r2,r3,r2
  82db1c:	e0ff9517 	ldw	r3,-428(fp)
  82db20:	1885883a 	add	r2,r3,r2
  82db24:	e0bf9515 	stw	r2,-428(fp)
  82db28:	014b5044 	movi	r5,11585
  82db2c:	e13f8817 	ldw	r4,-480(fp)
  82db30:	08301e80 	call	8301e8 <__mulsi3>
  82db34:	1007883a 	mov	r3,r2
  82db38:	e0bf8d17 	ldw	r2,-460(fp)
  82db3c:	10c5883a 	add	r2,r2,r3
  82db40:	e0bf8d15 	stw	r2,-460(fp)
  82db44:	e0bf8317 	ldw	r2,-500(fp)
  82db48:	10800104 	addi	r2,r2,4
  82db4c:	10800017 	ldw	r2,0(r2)
  82db50:	e0bf8615 	stw	r2,-488(fp)
  82db54:	e0bf8317 	ldw	r2,-500(fp)
  82db58:	10800304 	addi	r2,r2,12
  82db5c:	10800017 	ldw	r2,0(r2)
  82db60:	e0bf8815 	stw	r2,-480(fp)
  82db64:	e0bf8317 	ldw	r2,-500(fp)
  82db68:	10800504 	addi	r2,r2,20
  82db6c:	10800017 	ldw	r2,0(r2)
  82db70:	e0bf8915 	stw	r2,-476(fp)
  82db74:	e0ff8617 	ldw	r3,-488(fp)
  82db78:	e0bf8817 	ldw	r2,-480(fp)
  82db7c:	1885883a 	add	r2,r3,r2
  82db80:	01477bc4 	movi	r5,7663
  82db84:	1009883a 	mov	r4,r2
  82db88:	08301e80 	call	8301e8 <__mulsi3>
  82db8c:	e0bf8b15 	stw	r2,-468(fp)
  82db90:	e0ff8617 	ldw	r3,-488(fp)
  82db94:	e0bf8817 	ldw	r2,-480(fp)
  82db98:	1885c83a 	sub	r2,r3,r2
  82db9c:	01415cc4 	movi	r5,1395
  82dba0:	1009883a 	mov	r4,r2
  82dba4:	08301e80 	call	8301e8 <__mulsi3>
  82dba8:	e0bf8c15 	stw	r2,-464(fp)
  82dbac:	e0ff8b17 	ldw	r3,-468(fp)
  82dbb0:	e0bf8c17 	ldw	r2,-464(fp)
  82dbb4:	1885c83a 	sub	r2,r3,r2
  82dbb8:	e0bf8a15 	stw	r2,-472(fp)
  82dbbc:	e0ff8b17 	ldw	r3,-468(fp)
  82dbc0:	e0bf8c17 	ldw	r2,-464(fp)
  82dbc4:	1885883a 	add	r2,r3,r2
  82dbc8:	e0bf8b15 	stw	r2,-468(fp)
  82dbcc:	e0ff8817 	ldw	r3,-480(fp)
  82dbd0:	e0bf8917 	ldw	r2,-476(fp)
  82dbd4:	1885883a 	add	r2,r3,r2
  82dbd8:	0174f844 	movi	r5,-11295
  82dbdc:	1009883a 	mov	r4,r2
  82dbe0:	08301e80 	call	8301e8 <__mulsi3>
  82dbe4:	e0bf8c15 	stw	r2,-464(fp)
  82dbe8:	e0ff8b17 	ldw	r3,-468(fp)
  82dbec:	e0bf8c17 	ldw	r2,-464(fp)
  82dbf0:	1885883a 	add	r2,r3,r2
  82dbf4:	e0bf8b15 	stw	r2,-468(fp)
  82dbf8:	e0ff8617 	ldw	r3,-488(fp)
  82dbfc:	e0bf8917 	ldw	r2,-476(fp)
  82dc00:	1885883a 	add	r2,r3,r2
  82dc04:	0144e8c4 	movi	r5,5027
  82dc08:	1009883a 	mov	r4,r2
  82dc0c:	08301e80 	call	8301e8 <__mulsi3>
  82dc10:	e0bf8815 	stw	r2,-480(fp)
  82dc14:	e0ff8a17 	ldw	r3,-472(fp)
  82dc18:	e0bf8817 	ldw	r2,-480(fp)
  82dc1c:	1885883a 	add	r2,r3,r2
  82dc20:	e0bf8a15 	stw	r2,-472(fp)
  82dc24:	014ef784 	movi	r5,15326
  82dc28:	e13f8917 	ldw	r4,-476(fp)
  82dc2c:	08301e80 	call	8301e8 <__mulsi3>
  82dc30:	1007883a 	mov	r3,r2
  82dc34:	e0bf8817 	ldw	r2,-480(fp)
  82dc38:	1885883a 	add	r2,r3,r2
  82dc3c:	e0ff8c17 	ldw	r3,-464(fp)
  82dc40:	1885883a 	add	r2,r3,r2
  82dc44:	e0bf8c15 	stw	r2,-464(fp)
  82dc48:	e0ff9117 	ldw	r3,-444(fp)
  82dc4c:	e0bf8a17 	ldw	r2,-472(fp)
  82dc50:	1885883a 	add	r2,r3,r2
  82dc54:	1005d4ba 	srai	r2,r2,18
  82dc58:	1080ffcc 	andi	r2,r2,1023
  82dc5c:	e0ff8517 	ldw	r3,-492(fp)
  82dc60:	1885883a 	add	r2,r3,r2
  82dc64:	10c00003 	ldbu	r3,0(r2)
  82dc68:	e0bf9817 	ldw	r2,-416(fp)
  82dc6c:	10c00005 	stb	r3,0(r2)
  82dc70:	e0bf9817 	ldw	r2,-416(fp)
  82dc74:	10800184 	addi	r2,r2,6
  82dc78:	e13f9117 	ldw	r4,-444(fp)
  82dc7c:	e0ff8a17 	ldw	r3,-472(fp)
  82dc80:	20c7c83a 	sub	r3,r4,r3
  82dc84:	1807d4ba 	srai	r3,r3,18
  82dc88:	18c0ffcc 	andi	r3,r3,1023
  82dc8c:	e13f8517 	ldw	r4,-492(fp)
  82dc90:	20c7883a 	add	r3,r4,r3
  82dc94:	18c00003 	ldbu	r3,0(r3)
  82dc98:	10c00005 	stb	r3,0(r2)
  82dc9c:	e0bf9817 	ldw	r2,-416(fp)
  82dca0:	10800044 	addi	r2,r2,1
  82dca4:	e13f9317 	ldw	r4,-436(fp)
  82dca8:	e0ff8b17 	ldw	r3,-468(fp)
  82dcac:	20c7883a 	add	r3,r4,r3
  82dcb0:	1807d4ba 	srai	r3,r3,18
  82dcb4:	18c0ffcc 	andi	r3,r3,1023
  82dcb8:	e13f8517 	ldw	r4,-492(fp)
  82dcbc:	20c7883a 	add	r3,r4,r3
  82dcc0:	18c00003 	ldbu	r3,0(r3)
  82dcc4:	10c00005 	stb	r3,0(r2)
  82dcc8:	e0bf9817 	ldw	r2,-416(fp)
  82dccc:	10800144 	addi	r2,r2,5
  82dcd0:	e13f9317 	ldw	r4,-436(fp)
  82dcd4:	e0ff8b17 	ldw	r3,-468(fp)
  82dcd8:	20c7c83a 	sub	r3,r4,r3
  82dcdc:	1807d4ba 	srai	r3,r3,18
  82dce0:	18c0ffcc 	andi	r3,r3,1023
  82dce4:	e13f8517 	ldw	r4,-492(fp)
  82dce8:	20c7883a 	add	r3,r4,r3
  82dcec:	18c00003 	ldbu	r3,0(r3)
  82dcf0:	10c00005 	stb	r3,0(r2)
  82dcf4:	e0bf9817 	ldw	r2,-416(fp)
  82dcf8:	10800084 	addi	r2,r2,2
  82dcfc:	e13f9517 	ldw	r4,-428(fp)
  82dd00:	e0ff8c17 	ldw	r3,-464(fp)
  82dd04:	20c7883a 	add	r3,r4,r3
  82dd08:	1807d4ba 	srai	r3,r3,18
  82dd0c:	18c0ffcc 	andi	r3,r3,1023
  82dd10:	e13f8517 	ldw	r4,-492(fp)
  82dd14:	20c7883a 	add	r3,r4,r3
  82dd18:	18c00003 	ldbu	r3,0(r3)
  82dd1c:	10c00005 	stb	r3,0(r2)
  82dd20:	e0bf9817 	ldw	r2,-416(fp)
  82dd24:	10800104 	addi	r2,r2,4
  82dd28:	e13f9517 	ldw	r4,-428(fp)
  82dd2c:	e0ff8c17 	ldw	r3,-464(fp)
  82dd30:	20c7c83a 	sub	r3,r4,r3
  82dd34:	1807d4ba 	srai	r3,r3,18
  82dd38:	18c0ffcc 	andi	r3,r3,1023
  82dd3c:	e13f8517 	ldw	r4,-492(fp)
  82dd40:	20c7883a 	add	r3,r4,r3
  82dd44:	18c00003 	ldbu	r3,0(r3)
  82dd48:	10c00005 	stb	r3,0(r2)
  82dd4c:	e0bf9817 	ldw	r2,-416(fp)
  82dd50:	108000c4 	addi	r2,r2,3
  82dd54:	e0ff8d17 	ldw	r3,-460(fp)
  82dd58:	1807d4ba 	srai	r3,r3,18
  82dd5c:	18c0ffcc 	andi	r3,r3,1023
  82dd60:	e13f8517 	ldw	r4,-492(fp)
  82dd64:	20c7883a 	add	r3,r4,r3
  82dd68:	18c00003 	ldbu	r3,0(r3)
  82dd6c:	10c00005 	stb	r3,0(r2)
  82dd70:	e0bf8317 	ldw	r2,-500(fp)
  82dd74:	10800704 	addi	r2,r2,28
  82dd78:	e0bf8315 	stw	r2,-500(fp)
  82dd7c:	e0bf8417 	ldw	r2,-496(fp)
  82dd80:	10800044 	addi	r2,r2,1
  82dd84:	e0bf8415 	stw	r2,-496(fp)
  82dd88:	e0bf8417 	ldw	r2,-496(fp)
  82dd8c:	10800390 	cmplti	r2,r2,14
  82dd90:	103f0f1e 	bne	r2,zero,82d9d0 <__alt_mem_epcs_flash_controller_0+0xff8249d0>
  82dd94:	0001883a 	nop
  82dd98:	e6ffff04 	addi	sp,fp,-4
  82dd9c:	dfc00217 	ldw	ra,8(sp)
  82dda0:	df000117 	ldw	fp,4(sp)
  82dda4:	dc000017 	ldw	r16,0(sp)
  82dda8:	dec00304 	addi	sp,sp,12
  82ddac:	f800283a 	ret

0082ddb0 <jpeg_idct_6x12>:
  82ddb0:	deff9b04 	addi	sp,sp,-404
  82ddb4:	dfc06415 	stw	ra,400(sp)
  82ddb8:	df006315 	stw	fp,396(sp)
  82ddbc:	dc006215 	stw	r16,392(sp)
  82ddc0:	df006304 	addi	fp,sp,396
  82ddc4:	e13ffb15 	stw	r4,-20(fp)
  82ddc8:	e17ffc15 	stw	r5,-16(fp)
  82ddcc:	e1bffd15 	stw	r6,-12(fp)
  82ddd0:	e1fffe15 	stw	r7,-8(fp)
  82ddd4:	e0bffb17 	ldw	r2,-20(fp)
  82ddd8:	10805417 	ldw	r2,336(r2)
  82dddc:	10bfa004 	addi	r2,r2,-384
  82dde0:	e0bfa115 	stw	r2,-380(fp)
  82dde4:	e0bffd17 	ldw	r2,-12(fp)
  82dde8:	e0bf9d15 	stw	r2,-396(fp)
  82ddec:	e0bffc17 	ldw	r2,-16(fp)
  82ddf0:	10801517 	ldw	r2,84(r2)
  82ddf4:	e0bf9e15 	stw	r2,-392(fp)
  82ddf8:	e0bfb304 	addi	r2,fp,-308
  82ddfc:	e0bf9f15 	stw	r2,-388(fp)
  82de00:	e03fa015 	stw	zero,-384(fp)
  82de04:	00016e06 	br	82e3c0 <jpeg_idct_6x12+0x610>
  82de08:	e0bf9d17 	ldw	r2,-396(fp)
  82de0c:	1080000b 	ldhu	r2,0(r2)
  82de10:	10ffffcc 	andi	r3,r2,65535
  82de14:	18e0001c 	xori	r3,r3,32768
  82de18:	18e00004 	addi	r3,r3,-32768
  82de1c:	e0bf9e17 	ldw	r2,-392(fp)
  82de20:	10800017 	ldw	r2,0(r2)
  82de24:	100b883a 	mov	r5,r2
  82de28:	1809883a 	mov	r4,r3
  82de2c:	08301e80 	call	8301e8 <__mulsi3>
  82de30:	e0bfa215 	stw	r2,-376(fp)
  82de34:	e0bfa217 	ldw	r2,-376(fp)
  82de38:	1004937a 	slli	r2,r2,13
  82de3c:	e0bfa215 	stw	r2,-376(fp)
  82de40:	e0bfa217 	ldw	r2,-376(fp)
  82de44:	10810004 	addi	r2,r2,1024
  82de48:	e0bfa215 	stw	r2,-376(fp)
  82de4c:	e0bf9d17 	ldw	r2,-396(fp)
  82de50:	10801004 	addi	r2,r2,64
  82de54:	1080000b 	ldhu	r2,0(r2)
  82de58:	10ffffcc 	andi	r3,r2,65535
  82de5c:	18e0001c 	xori	r3,r3,32768
  82de60:	18e00004 	addi	r3,r3,-32768
  82de64:	e0bf9e17 	ldw	r2,-392(fp)
  82de68:	10802004 	addi	r2,r2,128
  82de6c:	10800017 	ldw	r2,0(r2)
  82de70:	100b883a 	mov	r5,r2
  82de74:	1809883a 	mov	r4,r3
  82de78:	08301e80 	call	8301e8 <__mulsi3>
  82de7c:	e0bfa315 	stw	r2,-372(fp)
  82de80:	0149cc44 	movi	r5,10033
  82de84:	e13fa317 	ldw	r4,-372(fp)
  82de88:	08301e80 	call	8301e8 <__mulsi3>
  82de8c:	e0bfa315 	stw	r2,-372(fp)
  82de90:	e0ffa217 	ldw	r3,-376(fp)
  82de94:	e0bfa317 	ldw	r2,-372(fp)
  82de98:	1885883a 	add	r2,r3,r2
  82de9c:	e0bfa415 	stw	r2,-368(fp)
  82dea0:	e0ffa217 	ldw	r3,-376(fp)
  82dea4:	e0bfa317 	ldw	r2,-372(fp)
  82dea8:	1885c83a 	sub	r2,r3,r2
  82deac:	e0bfa515 	stw	r2,-364(fp)
  82deb0:	e0bf9d17 	ldw	r2,-396(fp)
  82deb4:	10800804 	addi	r2,r2,32
  82deb8:	1080000b 	ldhu	r2,0(r2)
  82debc:	10ffffcc 	andi	r3,r2,65535
  82dec0:	18e0001c 	xori	r3,r3,32768
  82dec4:	18e00004 	addi	r3,r3,-32768
  82dec8:	e0bf9e17 	ldw	r2,-392(fp)
  82decc:	10801004 	addi	r2,r2,64
  82ded0:	10800017 	ldw	r2,0(r2)
  82ded4:	100b883a 	mov	r5,r2
  82ded8:	1809883a 	mov	r4,r3
  82dedc:	08301e80 	call	8301e8 <__mulsi3>
  82dee0:	e0bfa615 	stw	r2,-360(fp)
  82dee4:	014aed84 	movi	r5,11190
  82dee8:	e13fa617 	ldw	r4,-360(fp)
  82deec:	08301e80 	call	8301e8 <__mulsi3>
  82def0:	e0bfa315 	stw	r2,-372(fp)
  82def4:	e0bfa617 	ldw	r2,-360(fp)
  82def8:	1004937a 	slli	r2,r2,13
  82defc:	e0bfa615 	stw	r2,-360(fp)
  82df00:	e0bf9d17 	ldw	r2,-396(fp)
  82df04:	10801804 	addi	r2,r2,96
  82df08:	1080000b 	ldhu	r2,0(r2)
  82df0c:	10ffffcc 	andi	r3,r2,65535
  82df10:	18e0001c 	xori	r3,r3,32768
  82df14:	18e00004 	addi	r3,r3,-32768
  82df18:	e0bf9e17 	ldw	r2,-392(fp)
  82df1c:	10803004 	addi	r2,r2,192
  82df20:	10800017 	ldw	r2,0(r2)
  82df24:	100b883a 	mov	r5,r2
  82df28:	1809883a 	mov	r4,r3
  82df2c:	08301e80 	call	8301e8 <__mulsi3>
  82df30:	e0bfa715 	stw	r2,-356(fp)
  82df34:	e0bfa717 	ldw	r2,-356(fp)
  82df38:	1004937a 	slli	r2,r2,13
  82df3c:	e0bfa715 	stw	r2,-356(fp)
  82df40:	e0ffa617 	ldw	r3,-360(fp)
  82df44:	e0bfa717 	ldw	r2,-356(fp)
  82df48:	1885c83a 	sub	r2,r3,r2
  82df4c:	e0bfa815 	stw	r2,-352(fp)
  82df50:	e0ffa217 	ldw	r3,-376(fp)
  82df54:	e0bfa817 	ldw	r2,-352(fp)
  82df58:	1885883a 	add	r2,r3,r2
  82df5c:	e0bfa915 	stw	r2,-348(fp)
  82df60:	e0ffa217 	ldw	r3,-376(fp)
  82df64:	e0bfa817 	ldw	r2,-352(fp)
  82df68:	1885c83a 	sub	r2,r3,r2
  82df6c:	e0bfaa15 	stw	r2,-344(fp)
  82df70:	e0ffa317 	ldw	r3,-372(fp)
  82df74:	e0bfa717 	ldw	r2,-356(fp)
  82df78:	1885883a 	add	r2,r3,r2
  82df7c:	e0bfa815 	stw	r2,-352(fp)
  82df80:	e0ffa417 	ldw	r3,-368(fp)
  82df84:	e0bfa817 	ldw	r2,-352(fp)
  82df88:	1885883a 	add	r2,r3,r2
  82df8c:	e0bfab15 	stw	r2,-340(fp)
  82df90:	e0ffa417 	ldw	r3,-368(fp)
  82df94:	e0bfa817 	ldw	r2,-352(fp)
  82df98:	1885c83a 	sub	r2,r3,r2
  82df9c:	e0bfac15 	stw	r2,-336(fp)
  82dfa0:	e0ffa317 	ldw	r3,-372(fp)
  82dfa4:	e0bfa617 	ldw	r2,-360(fp)
  82dfa8:	1887c83a 	sub	r3,r3,r2
  82dfac:	e0bfa717 	ldw	r2,-356(fp)
  82dfb0:	1885c83a 	sub	r2,r3,r2
  82dfb4:	e0bfa815 	stw	r2,-352(fp)
  82dfb8:	e0ffa517 	ldw	r3,-364(fp)
  82dfbc:	e0bfa817 	ldw	r2,-352(fp)
  82dfc0:	1885883a 	add	r2,r3,r2
  82dfc4:	e0bfad15 	stw	r2,-332(fp)
  82dfc8:	e0ffa517 	ldw	r3,-364(fp)
  82dfcc:	e0bfa817 	ldw	r2,-352(fp)
  82dfd0:	1885c83a 	sub	r2,r3,r2
  82dfd4:	e0bfae15 	stw	r2,-328(fp)
  82dfd8:	e0bf9d17 	ldw	r2,-396(fp)
  82dfdc:	10800404 	addi	r2,r2,16
  82dfe0:	1080000b 	ldhu	r2,0(r2)
  82dfe4:	10ffffcc 	andi	r3,r2,65535
  82dfe8:	18e0001c 	xori	r3,r3,32768
  82dfec:	18e00004 	addi	r3,r3,-32768
  82dff0:	e0bf9e17 	ldw	r2,-392(fp)
  82dff4:	10800804 	addi	r2,r2,32
  82dff8:	10800017 	ldw	r2,0(r2)
  82dffc:	100b883a 	mov	r5,r2
  82e000:	1809883a 	mov	r4,r3
  82e004:	08301e80 	call	8301e8 <__mulsi3>
  82e008:	e0bfa615 	stw	r2,-360(fp)
  82e00c:	e0bf9d17 	ldw	r2,-396(fp)
  82e010:	10800c04 	addi	r2,r2,48
  82e014:	1080000b 	ldhu	r2,0(r2)
  82e018:	10ffffcc 	andi	r3,r2,65535
  82e01c:	18e0001c 	xori	r3,r3,32768
  82e020:	18e00004 	addi	r3,r3,-32768
  82e024:	e0bf9e17 	ldw	r2,-392(fp)
  82e028:	10801804 	addi	r2,r2,96
  82e02c:	10800017 	ldw	r2,0(r2)
  82e030:	100b883a 	mov	r5,r2
  82e034:	1809883a 	mov	r4,r3
  82e038:	08301e80 	call	8301e8 <__mulsi3>
  82e03c:	e0bfa715 	stw	r2,-356(fp)
  82e040:	e0bf9d17 	ldw	r2,-396(fp)
  82e044:	10801404 	addi	r2,r2,80
  82e048:	1080000b 	ldhu	r2,0(r2)
  82e04c:	10ffffcc 	andi	r3,r2,65535
  82e050:	18e0001c 	xori	r3,r3,32768
  82e054:	18e00004 	addi	r3,r3,-32768
  82e058:	e0bf9e17 	ldw	r2,-392(fp)
  82e05c:	10802804 	addi	r2,r2,160
  82e060:	10800017 	ldw	r2,0(r2)
  82e064:	100b883a 	mov	r5,r2
  82e068:	1809883a 	mov	r4,r3
  82e06c:	08301e80 	call	8301e8 <__mulsi3>
  82e070:	e0bfa215 	stw	r2,-376(fp)
  82e074:	e0bf9d17 	ldw	r2,-396(fp)
  82e078:	10801c04 	addi	r2,r2,112
  82e07c:	1080000b 	ldhu	r2,0(r2)
  82e080:	10ffffcc 	andi	r3,r2,65535
  82e084:	18e0001c 	xori	r3,r3,32768
  82e088:	18e00004 	addi	r3,r3,-32768
  82e08c:	e0bf9e17 	ldw	r2,-392(fp)
  82e090:	10803804 	addi	r2,r2,224
  82e094:	10800017 	ldw	r2,0(r2)
  82e098:	100b883a 	mov	r5,r2
  82e09c:	1809883a 	mov	r4,r3
  82e0a0:	08301e80 	call	8301e8 <__mulsi3>
  82e0a4:	e0bfa315 	stw	r2,-372(fp)
  82e0a8:	014a73c4 	movi	r5,10703
  82e0ac:	e13fa717 	ldw	r4,-356(fp)
  82e0b0:	08301e80 	call	8301e8 <__mulsi3>
  82e0b4:	e0bfa515 	stw	r2,-364(fp)
  82e0b8:	017babc4 	movi	r5,-4433
  82e0bc:	e13fa717 	ldw	r4,-356(fp)
  82e0c0:	08301e80 	call	8301e8 <__mulsi3>
  82e0c4:	e0bfaf15 	stw	r2,-324(fp)
  82e0c8:	e0ffa617 	ldw	r3,-360(fp)
  82e0cc:	e0bfa217 	ldw	r2,-376(fp)
  82e0d0:	1885883a 	add	r2,r3,r2
  82e0d4:	e0bfa415 	stw	r2,-368(fp)
  82e0d8:	e0ffa417 	ldw	r3,-368(fp)
  82e0dc:	e0bfa317 	ldw	r2,-372(fp)
  82e0e0:	1885883a 	add	r2,r3,r2
  82e0e4:	0146e344 	movi	r5,7053
  82e0e8:	1009883a 	mov	r4,r2
  82e0ec:	08301e80 	call	8301e8 <__mulsi3>
  82e0f0:	e0bfb015 	stw	r2,-320(fp)
  82e0f4:	014216c4 	movi	r5,2139
  82e0f8:	e13fa417 	ldw	r4,-368(fp)
  82e0fc:	08301e80 	call	8301e8 <__mulsi3>
  82e100:	1007883a 	mov	r3,r2
  82e104:	e0bfb017 	ldw	r2,-320(fp)
  82e108:	1885883a 	add	r2,r3,r2
  82e10c:	e0bfa815 	stw	r2,-352(fp)
  82e110:	e0ffa817 	ldw	r3,-352(fp)
  82e114:	e0bfa517 	ldw	r2,-364(fp)
  82e118:	18a1883a 	add	r16,r3,r2
  82e11c:	01423dc4 	movi	r5,2295
  82e120:	e13fa617 	ldw	r4,-360(fp)
  82e124:	08301e80 	call	8301e8 <__mulsi3>
  82e128:	8085883a 	add	r2,r16,r2
  82e12c:	e0bfa415 	stw	r2,-368(fp)
  82e130:	e0ffa217 	ldw	r3,-376(fp)
  82e134:	e0bfa317 	ldw	r2,-372(fp)
  82e138:	1885883a 	add	r2,r3,r2
  82e13c:	0177a2c4 	movi	r5,-8565
  82e140:	1009883a 	mov	r4,r2
  82e144:	08301e80 	call	8301e8 <__mulsi3>
  82e148:	e0bfb115 	stw	r2,-316(fp)
  82e14c:	e0ffb117 	ldw	r3,-316(fp)
  82e150:	e0bfaf17 	ldw	r2,-324(fp)
  82e154:	18a1883a 	add	r16,r3,r2
  82e158:	01742c04 	movi	r5,-12112
  82e15c:	e13fa217 	ldw	r4,-376(fp)
  82e160:	08301e80 	call	8301e8 <__mulsi3>
  82e164:	8085883a 	add	r2,r16,r2
  82e168:	e0ffa817 	ldw	r3,-352(fp)
  82e16c:	1885883a 	add	r2,r3,r2
  82e170:	e0bfa815 	stw	r2,-352(fp)
  82e174:	e0ffb017 	ldw	r3,-320(fp)
  82e178:	e0bfa517 	ldw	r2,-364(fp)
  82e17c:	18a1c83a 	sub	r16,r3,r2
  82e180:	014cb184 	movi	r5,12998
  82e184:	e13fa317 	ldw	r4,-372(fp)
  82e188:	08301e80 	call	8301e8 <__mulsi3>
  82e18c:	8085883a 	add	r2,r16,r2
  82e190:	e0ffb117 	ldw	r3,-316(fp)
  82e194:	1885883a 	add	r2,r3,r2
  82e198:	e0bfb115 	stw	r2,-316(fp)
  82e19c:	017a9704 	movi	r5,-5540
  82e1a0:	e13fa617 	ldw	r4,-360(fp)
  82e1a4:	08301e80 	call	8301e8 <__mulsi3>
  82e1a8:	1007883a 	mov	r3,r2
  82e1ac:	e0bfaf17 	ldw	r2,-324(fp)
  82e1b0:	18a1883a 	add	r16,r3,r2
  82e1b4:	01702304 	movi	r5,-16244
  82e1b8:	e13fa317 	ldw	r4,-372(fp)
  82e1bc:	08301e80 	call	8301e8 <__mulsi3>
  82e1c0:	8085883a 	add	r2,r16,r2
  82e1c4:	e0ffb017 	ldw	r3,-320(fp)
  82e1c8:	1885883a 	add	r2,r3,r2
  82e1cc:	e0bfb015 	stw	r2,-320(fp)
  82e1d0:	e0ffa617 	ldw	r3,-360(fp)
  82e1d4:	e0bfa317 	ldw	r2,-372(fp)
  82e1d8:	1885c83a 	sub	r2,r3,r2
  82e1dc:	e0bfa615 	stw	r2,-360(fp)
  82e1e0:	e0ffa717 	ldw	r3,-356(fp)
  82e1e4:	e0bfa217 	ldw	r2,-376(fp)
  82e1e8:	1885c83a 	sub	r2,r3,r2
  82e1ec:	e0bfa715 	stw	r2,-356(fp)
  82e1f0:	e0ffa617 	ldw	r3,-360(fp)
  82e1f4:	e0bfa717 	ldw	r2,-356(fp)
  82e1f8:	1885883a 	add	r2,r3,r2
  82e1fc:	01445444 	movi	r5,4433
  82e200:	1009883a 	mov	r4,r2
  82e204:	08301e80 	call	8301e8 <__mulsi3>
  82e208:	e0bfa215 	stw	r2,-376(fp)
  82e20c:	01461f84 	movi	r5,6270
  82e210:	e13fa617 	ldw	r4,-360(fp)
  82e214:	08301e80 	call	8301e8 <__mulsi3>
  82e218:	1007883a 	mov	r3,r2
  82e21c:	e0bfa217 	ldw	r2,-376(fp)
  82e220:	1885883a 	add	r2,r3,r2
  82e224:	e0bfa515 	stw	r2,-364(fp)
  82e228:	017137c4 	movi	r5,-15137
  82e22c:	e13fa717 	ldw	r4,-356(fp)
  82e230:	08301e80 	call	8301e8 <__mulsi3>
  82e234:	1007883a 	mov	r3,r2
  82e238:	e0bfa217 	ldw	r2,-376(fp)
  82e23c:	1885883a 	add	r2,r3,r2
  82e240:	e0bfaf15 	stw	r2,-324(fp)
  82e244:	e0ffab17 	ldw	r3,-340(fp)
  82e248:	e0bfa417 	ldw	r2,-368(fp)
  82e24c:	1885883a 	add	r2,r3,r2
  82e250:	1007d2fa 	srai	r3,r2,11
  82e254:	e0bf9f17 	ldw	r2,-388(fp)
  82e258:	10c00015 	stw	r3,0(r2)
  82e25c:	e0bf9f17 	ldw	r2,-388(fp)
  82e260:	10804204 	addi	r2,r2,264
  82e264:	e13fab17 	ldw	r4,-340(fp)
  82e268:	e0ffa417 	ldw	r3,-368(fp)
  82e26c:	20c7c83a 	sub	r3,r4,r3
  82e270:	1807d2fa 	srai	r3,r3,11
  82e274:	10c00015 	stw	r3,0(r2)
  82e278:	e0bf9f17 	ldw	r2,-388(fp)
  82e27c:	10800604 	addi	r2,r2,24
  82e280:	e13fa917 	ldw	r4,-348(fp)
  82e284:	e0ffa517 	ldw	r3,-364(fp)
  82e288:	20c7883a 	add	r3,r4,r3
  82e28c:	1807d2fa 	srai	r3,r3,11
  82e290:	10c00015 	stw	r3,0(r2)
  82e294:	e0bf9f17 	ldw	r2,-388(fp)
  82e298:	10803c04 	addi	r2,r2,240
  82e29c:	e13fa917 	ldw	r4,-348(fp)
  82e2a0:	e0ffa517 	ldw	r3,-364(fp)
  82e2a4:	20c7c83a 	sub	r3,r4,r3
  82e2a8:	1807d2fa 	srai	r3,r3,11
  82e2ac:	10c00015 	stw	r3,0(r2)
  82e2b0:	e0bf9f17 	ldw	r2,-388(fp)
  82e2b4:	10800c04 	addi	r2,r2,48
  82e2b8:	e13fad17 	ldw	r4,-332(fp)
  82e2bc:	e0ffa817 	ldw	r3,-352(fp)
  82e2c0:	20c7883a 	add	r3,r4,r3
  82e2c4:	1807d2fa 	srai	r3,r3,11
  82e2c8:	10c00015 	stw	r3,0(r2)
  82e2cc:	e0bf9f17 	ldw	r2,-388(fp)
  82e2d0:	10803604 	addi	r2,r2,216
  82e2d4:	e13fad17 	ldw	r4,-332(fp)
  82e2d8:	e0ffa817 	ldw	r3,-352(fp)
  82e2dc:	20c7c83a 	sub	r3,r4,r3
  82e2e0:	1807d2fa 	srai	r3,r3,11
  82e2e4:	10c00015 	stw	r3,0(r2)
  82e2e8:	e0bf9f17 	ldw	r2,-388(fp)
  82e2ec:	10801204 	addi	r2,r2,72
  82e2f0:	e13fae17 	ldw	r4,-328(fp)
  82e2f4:	e0ffb117 	ldw	r3,-316(fp)
  82e2f8:	20c7883a 	add	r3,r4,r3
  82e2fc:	1807d2fa 	srai	r3,r3,11
  82e300:	10c00015 	stw	r3,0(r2)
  82e304:	e0bf9f17 	ldw	r2,-388(fp)
  82e308:	10803004 	addi	r2,r2,192
  82e30c:	e13fae17 	ldw	r4,-328(fp)
  82e310:	e0ffb117 	ldw	r3,-316(fp)
  82e314:	20c7c83a 	sub	r3,r4,r3
  82e318:	1807d2fa 	srai	r3,r3,11
  82e31c:	10c00015 	stw	r3,0(r2)
  82e320:	e0bf9f17 	ldw	r2,-388(fp)
  82e324:	10801804 	addi	r2,r2,96
  82e328:	e13faa17 	ldw	r4,-344(fp)
  82e32c:	e0ffaf17 	ldw	r3,-324(fp)
  82e330:	20c7883a 	add	r3,r4,r3
  82e334:	1807d2fa 	srai	r3,r3,11
  82e338:	10c00015 	stw	r3,0(r2)
  82e33c:	e0bf9f17 	ldw	r2,-388(fp)
  82e340:	10802a04 	addi	r2,r2,168
  82e344:	e13faa17 	ldw	r4,-344(fp)
  82e348:	e0ffaf17 	ldw	r3,-324(fp)
  82e34c:	20c7c83a 	sub	r3,r4,r3
  82e350:	1807d2fa 	srai	r3,r3,11
  82e354:	10c00015 	stw	r3,0(r2)
  82e358:	e0bf9f17 	ldw	r2,-388(fp)
  82e35c:	10801e04 	addi	r2,r2,120
  82e360:	e13fac17 	ldw	r4,-336(fp)
  82e364:	e0ffb017 	ldw	r3,-320(fp)
  82e368:	20c7883a 	add	r3,r4,r3
  82e36c:	1807d2fa 	srai	r3,r3,11
  82e370:	10c00015 	stw	r3,0(r2)
  82e374:	e0bf9f17 	ldw	r2,-388(fp)
  82e378:	10802404 	addi	r2,r2,144
  82e37c:	e13fac17 	ldw	r4,-336(fp)
  82e380:	e0ffb017 	ldw	r3,-320(fp)
  82e384:	20c7c83a 	sub	r3,r4,r3
  82e388:	1807d2fa 	srai	r3,r3,11
  82e38c:	10c00015 	stw	r3,0(r2)
  82e390:	e0bfa017 	ldw	r2,-384(fp)
  82e394:	10800044 	addi	r2,r2,1
  82e398:	e0bfa015 	stw	r2,-384(fp)
  82e39c:	e0bf9d17 	ldw	r2,-396(fp)
  82e3a0:	10800084 	addi	r2,r2,2
  82e3a4:	e0bf9d15 	stw	r2,-396(fp)
  82e3a8:	e0bf9e17 	ldw	r2,-392(fp)
  82e3ac:	10800104 	addi	r2,r2,4
  82e3b0:	e0bf9e15 	stw	r2,-392(fp)
  82e3b4:	e0bf9f17 	ldw	r2,-388(fp)
  82e3b8:	10800104 	addi	r2,r2,4
  82e3bc:	e0bf9f15 	stw	r2,-388(fp)
  82e3c0:	e0bfa017 	ldw	r2,-384(fp)
  82e3c4:	10800190 	cmplti	r2,r2,6
  82e3c8:	103e8f1e 	bne	r2,zero,82de08 <__alt_mem_epcs_flash_controller_0+0xff824e08>
  82e3cc:	e0bfb304 	addi	r2,fp,-308
  82e3d0:	e0bf9f15 	stw	r2,-388(fp)
  82e3d4:	e03fa015 	stw	zero,-384(fp)
  82e3d8:	0000a206 	br	82e664 <jpeg_idct_6x12+0x8b4>
  82e3dc:	e0bfa017 	ldw	r2,-384(fp)
  82e3e0:	1085883a 	add	r2,r2,r2
  82e3e4:	1085883a 	add	r2,r2,r2
  82e3e8:	1007883a 	mov	r3,r2
  82e3ec:	e0bffe17 	ldw	r2,-8(fp)
  82e3f0:	10c5883a 	add	r2,r2,r3
  82e3f4:	10c00017 	ldw	r3,0(r2)
  82e3f8:	e0800217 	ldw	r2,8(fp)
  82e3fc:	1885883a 	add	r2,r3,r2
  82e400:	e0bfb215 	stw	r2,-312(fp)
  82e404:	e0bf9f17 	ldw	r2,-388(fp)
  82e408:	10800017 	ldw	r2,0(r2)
  82e40c:	10900404 	addi	r2,r2,16400
  82e410:	e0bfa415 	stw	r2,-368(fp)
  82e414:	e0bfa417 	ldw	r2,-368(fp)
  82e418:	1004937a 	slli	r2,r2,13
  82e41c:	e0bfa415 	stw	r2,-368(fp)
  82e420:	e0bf9f17 	ldw	r2,-388(fp)
  82e424:	10800404 	addi	r2,r2,16
  82e428:	10800017 	ldw	r2,0(r2)
  82e42c:	e0bfa815 	stw	r2,-352(fp)
  82e430:	0145a844 	movi	r5,5793
  82e434:	e13fa817 	ldw	r4,-352(fp)
  82e438:	08301e80 	call	8301e8 <__mulsi3>
  82e43c:	e0bfab15 	stw	r2,-340(fp)
  82e440:	e0ffa417 	ldw	r3,-368(fp)
  82e444:	e0bfab17 	ldw	r2,-340(fp)
  82e448:	1885883a 	add	r2,r3,r2
  82e44c:	e0bfa515 	stw	r2,-364(fp)
  82e450:	e0ffa417 	ldw	r3,-368(fp)
  82e454:	e0bfab17 	ldw	r2,-340(fp)
  82e458:	1887c83a 	sub	r3,r3,r2
  82e45c:	e0bfab17 	ldw	r2,-340(fp)
  82e460:	1885c83a 	sub	r2,r3,r2
  82e464:	e0bfa915 	stw	r2,-348(fp)
  82e468:	e0bf9f17 	ldw	r2,-388(fp)
  82e46c:	10800204 	addi	r2,r2,8
  82e470:	10800017 	ldw	r2,0(r2)
  82e474:	e0bfab15 	stw	r2,-340(fp)
  82e478:	0149cc44 	movi	r5,10033
  82e47c:	e13fab17 	ldw	r4,-340(fp)
  82e480:	08301e80 	call	8301e8 <__mulsi3>
  82e484:	e0bfa415 	stw	r2,-368(fp)
  82e488:	e0ffa517 	ldw	r3,-364(fp)
  82e48c:	e0bfa417 	ldw	r2,-368(fp)
  82e490:	1885883a 	add	r2,r3,r2
  82e494:	e0bfab15 	stw	r2,-340(fp)
  82e498:	e0ffa517 	ldw	r3,-364(fp)
  82e49c:	e0bfa417 	ldw	r2,-368(fp)
  82e4a0:	1885c83a 	sub	r2,r3,r2
  82e4a4:	e0bfad15 	stw	r2,-332(fp)
  82e4a8:	e0bf9f17 	ldw	r2,-388(fp)
  82e4ac:	10800104 	addi	r2,r2,4
  82e4b0:	10800017 	ldw	r2,0(r2)
  82e4b4:	e0bfa615 	stw	r2,-360(fp)
  82e4b8:	e0bf9f17 	ldw	r2,-388(fp)
  82e4bc:	10800304 	addi	r2,r2,12
  82e4c0:	10800017 	ldw	r2,0(r2)
  82e4c4:	e0bfa715 	stw	r2,-356(fp)
  82e4c8:	e0bf9f17 	ldw	r2,-388(fp)
  82e4cc:	10800504 	addi	r2,r2,20
  82e4d0:	10800017 	ldw	r2,0(r2)
  82e4d4:	e0bfa215 	stw	r2,-376(fp)
  82e4d8:	e0ffa617 	ldw	r3,-360(fp)
  82e4dc:	e0bfa217 	ldw	r2,-376(fp)
  82e4e0:	1885883a 	add	r2,r3,r2
  82e4e4:	0142ed84 	movi	r5,2998
  82e4e8:	1009883a 	mov	r4,r2
  82e4ec:	08301e80 	call	8301e8 <__mulsi3>
  82e4f0:	e0bfa515 	stw	r2,-364(fp)
  82e4f4:	e0ffa617 	ldw	r3,-360(fp)
  82e4f8:	e0bfa717 	ldw	r2,-356(fp)
  82e4fc:	1885883a 	add	r2,r3,r2
  82e500:	1006937a 	slli	r3,r2,13
  82e504:	e0bfa517 	ldw	r2,-364(fp)
  82e508:	1885883a 	add	r2,r3,r2
  82e50c:	e0bfa415 	stw	r2,-368(fp)
  82e510:	e0ffa217 	ldw	r3,-376(fp)
  82e514:	e0bfa717 	ldw	r2,-356(fp)
  82e518:	1885c83a 	sub	r2,r3,r2
  82e51c:	1006937a 	slli	r3,r2,13
  82e520:	e0bfa517 	ldw	r2,-364(fp)
  82e524:	1885883a 	add	r2,r3,r2
  82e528:	e0bfa815 	stw	r2,-352(fp)
  82e52c:	e0ffa617 	ldw	r3,-360(fp)
  82e530:	e0bfa717 	ldw	r2,-356(fp)
  82e534:	1887c83a 	sub	r3,r3,r2
  82e538:	e0bfa217 	ldw	r2,-376(fp)
  82e53c:	1885c83a 	sub	r2,r3,r2
  82e540:	1004937a 	slli	r2,r2,13
  82e544:	e0bfa515 	stw	r2,-364(fp)
  82e548:	e0ffab17 	ldw	r3,-340(fp)
  82e54c:	e0bfa417 	ldw	r2,-368(fp)
  82e550:	1885883a 	add	r2,r3,r2
  82e554:	1005d4ba 	srai	r2,r2,18
  82e558:	1080ffcc 	andi	r2,r2,1023
  82e55c:	e0ffa117 	ldw	r3,-380(fp)
  82e560:	1885883a 	add	r2,r3,r2
  82e564:	10c00003 	ldbu	r3,0(r2)
  82e568:	e0bfb217 	ldw	r2,-312(fp)
  82e56c:	10c00005 	stb	r3,0(r2)
  82e570:	e0bfb217 	ldw	r2,-312(fp)
  82e574:	10800144 	addi	r2,r2,5
  82e578:	e13fab17 	ldw	r4,-340(fp)
  82e57c:	e0ffa417 	ldw	r3,-368(fp)
  82e580:	20c7c83a 	sub	r3,r4,r3
  82e584:	1807d4ba 	srai	r3,r3,18
  82e588:	18c0ffcc 	andi	r3,r3,1023
  82e58c:	e13fa117 	ldw	r4,-380(fp)
  82e590:	20c7883a 	add	r3,r4,r3
  82e594:	18c00003 	ldbu	r3,0(r3)
  82e598:	10c00005 	stb	r3,0(r2)
  82e59c:	e0bfb217 	ldw	r2,-312(fp)
  82e5a0:	10800044 	addi	r2,r2,1
  82e5a4:	e13fa917 	ldw	r4,-348(fp)
  82e5a8:	e0ffa517 	ldw	r3,-364(fp)
  82e5ac:	20c7883a 	add	r3,r4,r3
  82e5b0:	1807d4ba 	srai	r3,r3,18
  82e5b4:	18c0ffcc 	andi	r3,r3,1023
  82e5b8:	e13fa117 	ldw	r4,-380(fp)
  82e5bc:	20c7883a 	add	r3,r4,r3
  82e5c0:	18c00003 	ldbu	r3,0(r3)
  82e5c4:	10c00005 	stb	r3,0(r2)
  82e5c8:	e0bfb217 	ldw	r2,-312(fp)
  82e5cc:	10800104 	addi	r2,r2,4
  82e5d0:	e13fa917 	ldw	r4,-348(fp)
  82e5d4:	e0ffa517 	ldw	r3,-364(fp)
  82e5d8:	20c7c83a 	sub	r3,r4,r3
  82e5dc:	1807d4ba 	srai	r3,r3,18
  82e5e0:	18c0ffcc 	andi	r3,r3,1023
  82e5e4:	e13fa117 	ldw	r4,-380(fp)
  82e5e8:	20c7883a 	add	r3,r4,r3
  82e5ec:	18c00003 	ldbu	r3,0(r3)
  82e5f0:	10c00005 	stb	r3,0(r2)
  82e5f4:	e0bfb217 	ldw	r2,-312(fp)
  82e5f8:	10800084 	addi	r2,r2,2
  82e5fc:	e13fad17 	ldw	r4,-332(fp)
  82e600:	e0ffa817 	ldw	r3,-352(fp)
  82e604:	20c7883a 	add	r3,r4,r3
  82e608:	1807d4ba 	srai	r3,r3,18
  82e60c:	18c0ffcc 	andi	r3,r3,1023
  82e610:	e13fa117 	ldw	r4,-380(fp)
  82e614:	20c7883a 	add	r3,r4,r3
  82e618:	18c00003 	ldbu	r3,0(r3)
  82e61c:	10c00005 	stb	r3,0(r2)
  82e620:	e0bfb217 	ldw	r2,-312(fp)
  82e624:	108000c4 	addi	r2,r2,3
  82e628:	e13fad17 	ldw	r4,-332(fp)
  82e62c:	e0ffa817 	ldw	r3,-352(fp)
  82e630:	20c7c83a 	sub	r3,r4,r3
  82e634:	1807d4ba 	srai	r3,r3,18
  82e638:	18c0ffcc 	andi	r3,r3,1023
  82e63c:	e13fa117 	ldw	r4,-380(fp)
  82e640:	20c7883a 	add	r3,r4,r3
  82e644:	18c00003 	ldbu	r3,0(r3)
  82e648:	10c00005 	stb	r3,0(r2)
  82e64c:	e0bf9f17 	ldw	r2,-388(fp)
  82e650:	10800604 	addi	r2,r2,24
  82e654:	e0bf9f15 	stw	r2,-388(fp)
  82e658:	e0bfa017 	ldw	r2,-384(fp)
  82e65c:	10800044 	addi	r2,r2,1
  82e660:	e0bfa015 	stw	r2,-384(fp)
  82e664:	e0bfa017 	ldw	r2,-384(fp)
  82e668:	10800310 	cmplti	r2,r2,12
  82e66c:	103f5b1e 	bne	r2,zero,82e3dc <__alt_mem_epcs_flash_controller_0+0xff8253dc>
  82e670:	0001883a 	nop
  82e674:	e6ffff04 	addi	sp,fp,-4
  82e678:	dfc00217 	ldw	ra,8(sp)
  82e67c:	df000117 	ldw	fp,4(sp)
  82e680:	dc000017 	ldw	r16,0(sp)
  82e684:	dec00304 	addi	sp,sp,12
  82e688:	f800283a 	ret

0082e68c <jpeg_idct_5x10>:
  82e68c:	deffb304 	addi	sp,sp,-308
  82e690:	dfc04c15 	stw	ra,304(sp)
  82e694:	df004b15 	stw	fp,300(sp)
  82e698:	df004b04 	addi	fp,sp,300
  82e69c:	e13ffc15 	stw	r4,-16(fp)
  82e6a0:	e17ffd15 	stw	r5,-12(fp)
  82e6a4:	e1bffe15 	stw	r6,-8(fp)
  82e6a8:	e1ffff15 	stw	r7,-4(fp)
  82e6ac:	e0bffc17 	ldw	r2,-16(fp)
  82e6b0:	10805417 	ldw	r2,336(r2)
  82e6b4:	10bfa004 	addi	r2,r2,-384
  82e6b8:	e0bfb915 	stw	r2,-284(fp)
  82e6bc:	e0bffe17 	ldw	r2,-8(fp)
  82e6c0:	e0bfb515 	stw	r2,-300(fp)
  82e6c4:	e0bffd17 	ldw	r2,-12(fp)
  82e6c8:	10801517 	ldw	r2,84(r2)
  82e6cc:	e0bfb615 	stw	r2,-296(fp)
  82e6d0:	e0bfca04 	addi	r2,fp,-216
  82e6d4:	e0bfb715 	stw	r2,-292(fp)
  82e6d8:	e03fb815 	stw	zero,-288(fp)
  82e6dc:	00014706 	br	82ebfc <jpeg_idct_5x10+0x570>
  82e6e0:	e0bfb517 	ldw	r2,-300(fp)
  82e6e4:	1080000b 	ldhu	r2,0(r2)
  82e6e8:	10ffffcc 	andi	r3,r2,65535
  82e6ec:	18e0001c 	xori	r3,r3,32768
  82e6f0:	18e00004 	addi	r3,r3,-32768
  82e6f4:	e0bfb617 	ldw	r2,-296(fp)
  82e6f8:	10800017 	ldw	r2,0(r2)
  82e6fc:	100b883a 	mov	r5,r2
  82e700:	1809883a 	mov	r4,r3
  82e704:	08301e80 	call	8301e8 <__mulsi3>
  82e708:	e0bfba15 	stw	r2,-280(fp)
  82e70c:	e0bfba17 	ldw	r2,-280(fp)
  82e710:	1004937a 	slli	r2,r2,13
  82e714:	e0bfba15 	stw	r2,-280(fp)
  82e718:	e0bfba17 	ldw	r2,-280(fp)
  82e71c:	10810004 	addi	r2,r2,1024
  82e720:	e0bfba15 	stw	r2,-280(fp)
  82e724:	e0bfb517 	ldw	r2,-300(fp)
  82e728:	10801004 	addi	r2,r2,64
  82e72c:	1080000b 	ldhu	r2,0(r2)
  82e730:	10ffffcc 	andi	r3,r2,65535
  82e734:	18e0001c 	xori	r3,r3,32768
  82e738:	18e00004 	addi	r3,r3,-32768
  82e73c:	e0bfb617 	ldw	r2,-296(fp)
  82e740:	10802004 	addi	r2,r2,128
  82e744:	10800017 	ldw	r2,0(r2)
  82e748:	100b883a 	mov	r5,r2
  82e74c:	1809883a 	mov	r4,r3
  82e750:	08301e80 	call	8301e8 <__mulsi3>
  82e754:	e0bfbb15 	stw	r2,-276(fp)
  82e758:	01492744 	movi	r5,9373
  82e75c:	e13fbb17 	ldw	r4,-276(fp)
  82e760:	08301e80 	call	8301e8 <__mulsi3>
  82e764:	e0bfbc15 	stw	r2,-272(fp)
  82e768:	01437f04 	movi	r5,3580
  82e76c:	e13fbb17 	ldw	r4,-276(fp)
  82e770:	08301e80 	call	8301e8 <__mulsi3>
  82e774:	e0bfbd15 	stw	r2,-268(fp)
  82e778:	e0ffba17 	ldw	r3,-280(fp)
  82e77c:	e0bfbc17 	ldw	r2,-272(fp)
  82e780:	1885883a 	add	r2,r3,r2
  82e784:	e0bfbe15 	stw	r2,-264(fp)
  82e788:	e0ffba17 	ldw	r3,-280(fp)
  82e78c:	e0bfbd17 	ldw	r2,-268(fp)
  82e790:	1885c83a 	sub	r2,r3,r2
  82e794:	e0bfbf15 	stw	r2,-260(fp)
  82e798:	e0ffbc17 	ldw	r3,-272(fp)
  82e79c:	e0bfbd17 	ldw	r2,-268(fp)
  82e7a0:	1885c83a 	sub	r2,r3,r2
  82e7a4:	1085883a 	add	r2,r2,r2
  82e7a8:	1007883a 	mov	r3,r2
  82e7ac:	e0bfba17 	ldw	r2,-280(fp)
  82e7b0:	10c5c83a 	sub	r2,r2,r3
  82e7b4:	1005d2fa 	srai	r2,r2,11
  82e7b8:	e0bfc015 	stw	r2,-256(fp)
  82e7bc:	e0bfb517 	ldw	r2,-300(fp)
  82e7c0:	10800804 	addi	r2,r2,32
  82e7c4:	1080000b 	ldhu	r2,0(r2)
  82e7c8:	10ffffcc 	andi	r3,r2,65535
  82e7cc:	18e0001c 	xori	r3,r3,32768
  82e7d0:	18e00004 	addi	r3,r3,-32768
  82e7d4:	e0bfb617 	ldw	r2,-296(fp)
  82e7d8:	10801004 	addi	r2,r2,64
  82e7dc:	10800017 	ldw	r2,0(r2)
  82e7e0:	100b883a 	mov	r5,r2
  82e7e4:	1809883a 	mov	r4,r3
  82e7e8:	08301e80 	call	8301e8 <__mulsi3>
  82e7ec:	e0bfbd15 	stw	r2,-268(fp)
  82e7f0:	e0bfb517 	ldw	r2,-300(fp)
  82e7f4:	10801804 	addi	r2,r2,96
  82e7f8:	1080000b 	ldhu	r2,0(r2)
  82e7fc:	10ffffcc 	andi	r3,r2,65535
  82e800:	18e0001c 	xori	r3,r3,32768
  82e804:	18e00004 	addi	r3,r3,-32768
  82e808:	e0bfb617 	ldw	r2,-296(fp)
  82e80c:	10803004 	addi	r2,r2,192
  82e810:	10800017 	ldw	r2,0(r2)
  82e814:	100b883a 	mov	r5,r2
  82e818:	1809883a 	mov	r4,r3
  82e81c:	08301e80 	call	8301e8 <__mulsi3>
  82e820:	e0bfba15 	stw	r2,-280(fp)
  82e824:	e0ffbd17 	ldw	r3,-268(fp)
  82e828:	e0bfba17 	ldw	r2,-280(fp)
  82e82c:	1885883a 	add	r2,r3,r2
  82e830:	0146a684 	movi	r5,6810
  82e834:	1009883a 	mov	r4,r2
  82e838:	08301e80 	call	8301e8 <__mulsi3>
  82e83c:	e0bfbc15 	stw	r2,-272(fp)
  82e840:	01441c44 	movi	r5,4209
  82e844:	e13fbd17 	ldw	r4,-268(fp)
  82e848:	08301e80 	call	8301e8 <__mulsi3>
  82e84c:	1007883a 	mov	r3,r2
  82e850:	e0bfbc17 	ldw	r2,-272(fp)
  82e854:	1885883a 	add	r2,r3,r2
  82e858:	e0bfc115 	stw	r2,-252(fp)
  82e85c:	016e9704 	movi	r5,-17828
  82e860:	e13fba17 	ldw	r4,-280(fp)
  82e864:	08301e80 	call	8301e8 <__mulsi3>
  82e868:	1007883a 	mov	r3,r2
  82e86c:	e0bfbc17 	ldw	r2,-272(fp)
  82e870:	1885883a 	add	r2,r3,r2
  82e874:	e0bfc215 	stw	r2,-248(fp)
  82e878:	e0ffbe17 	ldw	r3,-264(fp)
  82e87c:	e0bfc117 	ldw	r2,-252(fp)
  82e880:	1885883a 	add	r2,r3,r2
  82e884:	e0bfc315 	stw	r2,-244(fp)
  82e888:	e0ffbe17 	ldw	r3,-264(fp)
  82e88c:	e0bfc117 	ldw	r2,-252(fp)
  82e890:	1885c83a 	sub	r2,r3,r2
  82e894:	e0bfc415 	stw	r2,-240(fp)
  82e898:	e0ffbf17 	ldw	r3,-260(fp)
  82e89c:	e0bfc217 	ldw	r2,-248(fp)
  82e8a0:	1885883a 	add	r2,r3,r2
  82e8a4:	e0bfc515 	stw	r2,-236(fp)
  82e8a8:	e0ffbf17 	ldw	r3,-260(fp)
  82e8ac:	e0bfc217 	ldw	r2,-248(fp)
  82e8b0:	1885c83a 	sub	r2,r3,r2
  82e8b4:	e0bfc615 	stw	r2,-232(fp)
  82e8b8:	e0bfb517 	ldw	r2,-300(fp)
  82e8bc:	10800404 	addi	r2,r2,16
  82e8c0:	1080000b 	ldhu	r2,0(r2)
  82e8c4:	10ffffcc 	andi	r3,r2,65535
  82e8c8:	18e0001c 	xori	r3,r3,32768
  82e8cc:	18e00004 	addi	r3,r3,-32768
  82e8d0:	e0bfb617 	ldw	r2,-296(fp)
  82e8d4:	10800804 	addi	r2,r2,32
  82e8d8:	10800017 	ldw	r2,0(r2)
  82e8dc:	100b883a 	mov	r5,r2
  82e8e0:	1809883a 	mov	r4,r3
  82e8e4:	08301e80 	call	8301e8 <__mulsi3>
  82e8e8:	e0bfbc15 	stw	r2,-272(fp)
  82e8ec:	e0bfb517 	ldw	r2,-300(fp)
  82e8f0:	10800c04 	addi	r2,r2,48
  82e8f4:	1080000b 	ldhu	r2,0(r2)
  82e8f8:	10ffffcc 	andi	r3,r2,65535
  82e8fc:	18e0001c 	xori	r3,r3,32768
  82e900:	18e00004 	addi	r3,r3,-32768
  82e904:	e0bfb617 	ldw	r2,-296(fp)
  82e908:	10801804 	addi	r2,r2,96
  82e90c:	10800017 	ldw	r2,0(r2)
  82e910:	100b883a 	mov	r5,r2
  82e914:	1809883a 	mov	r4,r3
  82e918:	08301e80 	call	8301e8 <__mulsi3>
  82e91c:	e0bfbd15 	stw	r2,-268(fp)
  82e920:	e0bfb517 	ldw	r2,-300(fp)
  82e924:	10801404 	addi	r2,r2,80
  82e928:	1080000b 	ldhu	r2,0(r2)
  82e92c:	10ffffcc 	andi	r3,r2,65535
  82e930:	18e0001c 	xori	r3,r3,32768
  82e934:	18e00004 	addi	r3,r3,-32768
  82e938:	e0bfb617 	ldw	r2,-296(fp)
  82e93c:	10802804 	addi	r2,r2,160
  82e940:	10800017 	ldw	r2,0(r2)
  82e944:	100b883a 	mov	r5,r2
  82e948:	1809883a 	mov	r4,r3
  82e94c:	08301e80 	call	8301e8 <__mulsi3>
  82e950:	e0bfba15 	stw	r2,-280(fp)
  82e954:	e0bfb517 	ldw	r2,-300(fp)
  82e958:	10801c04 	addi	r2,r2,112
  82e95c:	1080000b 	ldhu	r2,0(r2)
  82e960:	10ffffcc 	andi	r3,r2,65535
  82e964:	18e0001c 	xori	r3,r3,32768
  82e968:	18e00004 	addi	r3,r3,-32768
  82e96c:	e0bfb617 	ldw	r2,-296(fp)
  82e970:	10803804 	addi	r2,r2,224
  82e974:	10800017 	ldw	r2,0(r2)
  82e978:	100b883a 	mov	r5,r2
  82e97c:	1809883a 	mov	r4,r3
  82e980:	08301e80 	call	8301e8 <__mulsi3>
  82e984:	e0bfbb15 	stw	r2,-276(fp)
  82e988:	e0ffbd17 	ldw	r3,-268(fp)
  82e98c:	e0bfbb17 	ldw	r2,-276(fp)
  82e990:	1885883a 	add	r2,r3,r2
  82e994:	e0bfbf15 	stw	r2,-260(fp)
  82e998:	e0ffbd17 	ldw	r3,-268(fp)
  82e99c:	e0bfbb17 	ldw	r2,-276(fp)
  82e9a0:	1885c83a 	sub	r2,r3,r2
  82e9a4:	e0bfc215 	stw	r2,-248(fp)
  82e9a8:	014278c4 	movi	r5,2531
  82e9ac:	e13fc217 	ldw	r4,-248(fp)
  82e9b0:	08301e80 	call	8301e8 <__mulsi3>
  82e9b4:	e0bfc115 	stw	r2,-252(fp)
  82e9b8:	e0bfba17 	ldw	r2,-280(fp)
  82e9bc:	1004937a 	slli	r2,r2,13
  82e9c0:	e0bfc715 	stw	r2,-228(fp)
  82e9c4:	01479bc4 	movi	r5,7791
  82e9c8:	e13fbf17 	ldw	r4,-260(fp)
  82e9cc:	08301e80 	call	8301e8 <__mulsi3>
  82e9d0:	e0bfbd15 	stw	r2,-268(fp)
  82e9d4:	e0ffc717 	ldw	r3,-228(fp)
  82e9d8:	e0bfc117 	ldw	r2,-252(fp)
  82e9dc:	1885883a 	add	r2,r3,r2
  82e9e0:	e0bfbb15 	stw	r2,-276(fp)
  82e9e4:	014b2cc4 	movi	r5,11443
  82e9e8:	e13fbc17 	ldw	r4,-272(fp)
  82e9ec:	08301e80 	call	8301e8 <__mulsi3>
  82e9f0:	1007883a 	mov	r3,r2
  82e9f4:	e0bfbd17 	ldw	r2,-268(fp)
  82e9f8:	1887883a 	add	r3,r3,r2
  82e9fc:	e0bfbb17 	ldw	r2,-276(fp)
  82ea00:	1885883a 	add	r2,r3,r2
  82ea04:	e0bfbe15 	stw	r2,-264(fp)
  82ea08:	0141c504 	movi	r5,1812
  82ea0c:	e13fbc17 	ldw	r4,-272(fp)
  82ea10:	08301e80 	call	8301e8 <__mulsi3>
  82ea14:	1007883a 	mov	r3,r2
  82ea18:	e0bfbd17 	ldw	r2,-268(fp)
  82ea1c:	1887c83a 	sub	r3,r3,r2
  82ea20:	e0bfbb17 	ldw	r2,-276(fp)
  82ea24:	1885883a 	add	r2,r3,r2
  82ea28:	e0bfc815 	stw	r2,-224(fp)
  82ea2c:	0144b3c4 	movi	r5,4815
  82ea30:	e13fbf17 	ldw	r4,-260(fp)
  82ea34:	08301e80 	call	8301e8 <__mulsi3>
  82ea38:	e0bfbd15 	stw	r2,-268(fp)
  82ea3c:	e0ffc717 	ldw	r3,-228(fp)
  82ea40:	e0bfc117 	ldw	r2,-252(fp)
  82ea44:	1887c83a 	sub	r3,r3,r2
  82ea48:	e0bfc217 	ldw	r2,-248(fp)
  82ea4c:	1004933a 	slli	r2,r2,12
  82ea50:	1885c83a 	sub	r2,r3,r2
  82ea54:	e0bfbb15 	stw	r2,-276(fp)
  82ea58:	e0ffbc17 	ldw	r3,-272(fp)
  82ea5c:	e0bfc217 	ldw	r2,-248(fp)
  82ea60:	1887c83a 	sub	r3,r3,r2
  82ea64:	e0bfba17 	ldw	r2,-280(fp)
  82ea68:	1885c83a 	sub	r2,r3,r2
  82ea6c:	1085883a 	add	r2,r2,r2
  82ea70:	1085883a 	add	r2,r2,r2
  82ea74:	e0bfc115 	stw	r2,-252(fp)
  82ea78:	014a14c4 	movi	r5,10323
  82ea7c:	e13fbc17 	ldw	r4,-272(fp)
  82ea80:	08301e80 	call	8301e8 <__mulsi3>
  82ea84:	1007883a 	mov	r3,r2
  82ea88:	e0bfbd17 	ldw	r2,-268(fp)
  82ea8c:	1887c83a 	sub	r3,r3,r2
  82ea90:	e0bfbb17 	ldw	r2,-276(fp)
  82ea94:	1885c83a 	sub	r2,r3,r2
  82ea98:	e0bfbf15 	stw	r2,-260(fp)
  82ea9c:	01452304 	movi	r5,5260
  82eaa0:	e13fbc17 	ldw	r4,-272(fp)
  82eaa4:	08301e80 	call	8301e8 <__mulsi3>
  82eaa8:	1007883a 	mov	r3,r2
  82eaac:	e0bfbd17 	ldw	r2,-268(fp)
  82eab0:	1887c83a 	sub	r3,r3,r2
  82eab4:	e0bfbb17 	ldw	r2,-276(fp)
  82eab8:	1885883a 	add	r2,r3,r2
  82eabc:	e0bfc215 	stw	r2,-248(fp)
  82eac0:	e0ffc317 	ldw	r3,-244(fp)
  82eac4:	e0bfbe17 	ldw	r2,-264(fp)
  82eac8:	1885883a 	add	r2,r3,r2
  82eacc:	1007d2fa 	srai	r3,r2,11
  82ead0:	e0bfb717 	ldw	r2,-292(fp)
  82ead4:	10c00015 	stw	r3,0(r2)
  82ead8:	e0bfb717 	ldw	r2,-292(fp)
  82eadc:	10802d04 	addi	r2,r2,180
  82eae0:	e13fc317 	ldw	r4,-244(fp)
  82eae4:	e0ffbe17 	ldw	r3,-264(fp)
  82eae8:	20c7c83a 	sub	r3,r4,r3
  82eaec:	1807d2fa 	srai	r3,r3,11
  82eaf0:	10c00015 	stw	r3,0(r2)
  82eaf4:	e0bfb717 	ldw	r2,-292(fp)
  82eaf8:	10800504 	addi	r2,r2,20
  82eafc:	e13fc517 	ldw	r4,-236(fp)
  82eb00:	e0ffbf17 	ldw	r3,-260(fp)
  82eb04:	20c7883a 	add	r3,r4,r3
  82eb08:	1807d2fa 	srai	r3,r3,11
  82eb0c:	10c00015 	stw	r3,0(r2)
  82eb10:	e0bfb717 	ldw	r2,-292(fp)
  82eb14:	10802804 	addi	r2,r2,160
  82eb18:	e13fc517 	ldw	r4,-236(fp)
  82eb1c:	e0ffbf17 	ldw	r3,-260(fp)
  82eb20:	20c7c83a 	sub	r3,r4,r3
  82eb24:	1807d2fa 	srai	r3,r3,11
  82eb28:	10c00015 	stw	r3,0(r2)
  82eb2c:	e0bfb717 	ldw	r2,-292(fp)
  82eb30:	10800a04 	addi	r2,r2,40
  82eb34:	e13fc017 	ldw	r4,-256(fp)
  82eb38:	e0ffc117 	ldw	r3,-252(fp)
  82eb3c:	20c7883a 	add	r3,r4,r3
  82eb40:	10c00015 	stw	r3,0(r2)
  82eb44:	e0bfb717 	ldw	r2,-292(fp)
  82eb48:	10802304 	addi	r2,r2,140
  82eb4c:	e13fc017 	ldw	r4,-256(fp)
  82eb50:	e0ffc117 	ldw	r3,-252(fp)
  82eb54:	20c7c83a 	sub	r3,r4,r3
  82eb58:	10c00015 	stw	r3,0(r2)
  82eb5c:	e0bfb717 	ldw	r2,-292(fp)
  82eb60:	10800f04 	addi	r2,r2,60
  82eb64:	e13fc617 	ldw	r4,-232(fp)
  82eb68:	e0ffc217 	ldw	r3,-248(fp)
  82eb6c:	20c7883a 	add	r3,r4,r3
  82eb70:	1807d2fa 	srai	r3,r3,11
  82eb74:	10c00015 	stw	r3,0(r2)
  82eb78:	e0bfb717 	ldw	r2,-292(fp)
  82eb7c:	10801e04 	addi	r2,r2,120
  82eb80:	e13fc617 	ldw	r4,-232(fp)
  82eb84:	e0ffc217 	ldw	r3,-248(fp)
  82eb88:	20c7c83a 	sub	r3,r4,r3
  82eb8c:	1807d2fa 	srai	r3,r3,11
  82eb90:	10c00015 	stw	r3,0(r2)
  82eb94:	e0bfb717 	ldw	r2,-292(fp)
  82eb98:	10801404 	addi	r2,r2,80
  82eb9c:	e13fc417 	ldw	r4,-240(fp)
  82eba0:	e0ffc817 	ldw	r3,-224(fp)
  82eba4:	20c7883a 	add	r3,r4,r3
  82eba8:	1807d2fa 	srai	r3,r3,11
  82ebac:	10c00015 	stw	r3,0(r2)
  82ebb0:	e0bfb717 	ldw	r2,-292(fp)
  82ebb4:	10801904 	addi	r2,r2,100
  82ebb8:	e13fc417 	ldw	r4,-240(fp)
  82ebbc:	e0ffc817 	ldw	r3,-224(fp)
  82ebc0:	20c7c83a 	sub	r3,r4,r3
  82ebc4:	1807d2fa 	srai	r3,r3,11
  82ebc8:	10c00015 	stw	r3,0(r2)
  82ebcc:	e0bfb817 	ldw	r2,-288(fp)
  82ebd0:	10800044 	addi	r2,r2,1
  82ebd4:	e0bfb815 	stw	r2,-288(fp)
  82ebd8:	e0bfb517 	ldw	r2,-300(fp)
  82ebdc:	10800084 	addi	r2,r2,2
  82ebe0:	e0bfb515 	stw	r2,-300(fp)
  82ebe4:	e0bfb617 	ldw	r2,-296(fp)
  82ebe8:	10800104 	addi	r2,r2,4
  82ebec:	e0bfb615 	stw	r2,-296(fp)
  82ebf0:	e0bfb717 	ldw	r2,-292(fp)
  82ebf4:	10800104 	addi	r2,r2,4
  82ebf8:	e0bfb715 	stw	r2,-292(fp)
  82ebfc:	e0bfb817 	ldw	r2,-288(fp)
  82ec00:	10800150 	cmplti	r2,r2,5
  82ec04:	103eb61e 	bne	r2,zero,82e6e0 <__alt_mem_epcs_flash_controller_0+0xff8256e0>
  82ec08:	e0bfca04 	addi	r2,fp,-216
  82ec0c:	e0bfb715 	stw	r2,-292(fp)
  82ec10:	e03fb815 	stw	zero,-288(fp)
  82ec14:	00009106 	br	82ee5c <jpeg_idct_5x10+0x7d0>
  82ec18:	e0bfb817 	ldw	r2,-288(fp)
  82ec1c:	1085883a 	add	r2,r2,r2
  82ec20:	1085883a 	add	r2,r2,r2
  82ec24:	1007883a 	mov	r3,r2
  82ec28:	e0bfff17 	ldw	r2,-4(fp)
  82ec2c:	10c5883a 	add	r2,r2,r3
  82ec30:	10c00017 	ldw	r3,0(r2)
  82ec34:	e0800217 	ldw	r2,8(fp)
  82ec38:	1885883a 	add	r2,r3,r2
  82ec3c:	e0bfc915 	stw	r2,-220(fp)
  82ec40:	e0bfb717 	ldw	r2,-292(fp)
  82ec44:	10800017 	ldw	r2,0(r2)
  82ec48:	10900404 	addi	r2,r2,16400
  82ec4c:	e0bfc115 	stw	r2,-252(fp)
  82ec50:	e0bfc117 	ldw	r2,-252(fp)
  82ec54:	1004937a 	slli	r2,r2,13
  82ec58:	e0bfc115 	stw	r2,-252(fp)
  82ec5c:	e0bfb717 	ldw	r2,-292(fp)
  82ec60:	10800204 	addi	r2,r2,8
  82ec64:	10800017 	ldw	r2,0(r2)
  82ec68:	e0bfc215 	stw	r2,-248(fp)
  82ec6c:	e0bfb717 	ldw	r2,-292(fp)
  82ec70:	10800404 	addi	r2,r2,16
  82ec74:	10800017 	ldw	r2,0(r2)
  82ec78:	e0bfc815 	stw	r2,-224(fp)
  82ec7c:	e0ffc217 	ldw	r3,-248(fp)
  82ec80:	e0bfc817 	ldw	r2,-224(fp)
  82ec84:	1885883a 	add	r2,r3,r2
  82ec88:	01465304 	movi	r5,6476
  82ec8c:	1009883a 	mov	r4,r2
  82ec90:	08301e80 	call	8301e8 <__mulsi3>
  82ec94:	e0bfbc15 	stw	r2,-272(fp)
  82ec98:	e0ffc217 	ldw	r3,-248(fp)
  82ec9c:	e0bfc817 	ldw	r2,-224(fp)
  82eca0:	1885c83a 	sub	r2,r3,r2
  82eca4:	0142d404 	movi	r5,2896
  82eca8:	1009883a 	mov	r4,r2
  82ecac:	08301e80 	call	8301e8 <__mulsi3>
  82ecb0:	e0bfbd15 	stw	r2,-268(fp)
  82ecb4:	e0ffc117 	ldw	r3,-252(fp)
  82ecb8:	e0bfbd17 	ldw	r2,-268(fp)
  82ecbc:	1885883a 	add	r2,r3,r2
  82ecc0:	e0bfba15 	stw	r2,-280(fp)
  82ecc4:	e0ffba17 	ldw	r3,-280(fp)
  82ecc8:	e0bfbc17 	ldw	r2,-272(fp)
  82eccc:	1885883a 	add	r2,r3,r2
  82ecd0:	e0bfbe15 	stw	r2,-264(fp)
  82ecd4:	e0ffba17 	ldw	r3,-280(fp)
  82ecd8:	e0bfbc17 	ldw	r2,-272(fp)
  82ecdc:	1885c83a 	sub	r2,r3,r2
  82ece0:	e0bfbf15 	stw	r2,-260(fp)
  82ece4:	e0bfbd17 	ldw	r2,-268(fp)
  82ece8:	1085883a 	add	r2,r2,r2
  82ecec:	1085883a 	add	r2,r2,r2
  82ecf0:	1007883a 	mov	r3,r2
  82ecf4:	e0bfc117 	ldw	r2,-252(fp)
  82ecf8:	10c5c83a 	sub	r2,r2,r3
  82ecfc:	e0bfc115 	stw	r2,-252(fp)
  82ed00:	e0bfb717 	ldw	r2,-292(fp)
  82ed04:	10800104 	addi	r2,r2,4
  82ed08:	10800017 	ldw	r2,0(r2)
  82ed0c:	e0bfbd15 	stw	r2,-268(fp)
  82ed10:	e0bfb717 	ldw	r2,-292(fp)
  82ed14:	10800304 	addi	r2,r2,12
  82ed18:	10800017 	ldw	r2,0(r2)
  82ed1c:	e0bfba15 	stw	r2,-280(fp)
  82ed20:	e0ffbd17 	ldw	r3,-268(fp)
  82ed24:	e0bfba17 	ldw	r2,-280(fp)
  82ed28:	1885883a 	add	r2,r3,r2
  82ed2c:	0146a684 	movi	r5,6810
  82ed30:	1009883a 	mov	r4,r2
  82ed34:	08301e80 	call	8301e8 <__mulsi3>
  82ed38:	e0bfbc15 	stw	r2,-272(fp)
  82ed3c:	01441c44 	movi	r5,4209
  82ed40:	e13fbd17 	ldw	r4,-268(fp)
  82ed44:	08301e80 	call	8301e8 <__mulsi3>
  82ed48:	1007883a 	mov	r3,r2
  82ed4c:	e0bfbc17 	ldw	r2,-272(fp)
  82ed50:	1885883a 	add	r2,r3,r2
  82ed54:	e0bfc215 	stw	r2,-248(fp)
  82ed58:	016e9704 	movi	r5,-17828
  82ed5c:	e13fba17 	ldw	r4,-280(fp)
  82ed60:	08301e80 	call	8301e8 <__mulsi3>
  82ed64:	1007883a 	mov	r3,r2
  82ed68:	e0bfbc17 	ldw	r2,-272(fp)
  82ed6c:	1885883a 	add	r2,r3,r2
  82ed70:	e0bfc815 	stw	r2,-224(fp)
  82ed74:	e0ffbe17 	ldw	r3,-264(fp)
  82ed78:	e0bfc217 	ldw	r2,-248(fp)
  82ed7c:	1885883a 	add	r2,r3,r2
  82ed80:	1005d4ba 	srai	r2,r2,18
  82ed84:	1080ffcc 	andi	r2,r2,1023
  82ed88:	e0ffb917 	ldw	r3,-284(fp)
  82ed8c:	1885883a 	add	r2,r3,r2
  82ed90:	10c00003 	ldbu	r3,0(r2)
  82ed94:	e0bfc917 	ldw	r2,-220(fp)
  82ed98:	10c00005 	stb	r3,0(r2)
  82ed9c:	e0bfc917 	ldw	r2,-220(fp)
  82eda0:	10800104 	addi	r2,r2,4
  82eda4:	e13fbe17 	ldw	r4,-264(fp)
  82eda8:	e0ffc217 	ldw	r3,-248(fp)
  82edac:	20c7c83a 	sub	r3,r4,r3
  82edb0:	1807d4ba 	srai	r3,r3,18
  82edb4:	18c0ffcc 	andi	r3,r3,1023
  82edb8:	e13fb917 	ldw	r4,-284(fp)
  82edbc:	20c7883a 	add	r3,r4,r3
  82edc0:	18c00003 	ldbu	r3,0(r3)
  82edc4:	10c00005 	stb	r3,0(r2)
  82edc8:	e0bfc917 	ldw	r2,-220(fp)
  82edcc:	10800044 	addi	r2,r2,1
  82edd0:	e13fbf17 	ldw	r4,-260(fp)
  82edd4:	e0ffc817 	ldw	r3,-224(fp)
  82edd8:	20c7883a 	add	r3,r4,r3
  82eddc:	1807d4ba 	srai	r3,r3,18
  82ede0:	18c0ffcc 	andi	r3,r3,1023
  82ede4:	e13fb917 	ldw	r4,-284(fp)
  82ede8:	20c7883a 	add	r3,r4,r3
  82edec:	18c00003 	ldbu	r3,0(r3)
  82edf0:	10c00005 	stb	r3,0(r2)
  82edf4:	e0bfc917 	ldw	r2,-220(fp)
  82edf8:	108000c4 	addi	r2,r2,3
  82edfc:	e13fbf17 	ldw	r4,-260(fp)
  82ee00:	e0ffc817 	ldw	r3,-224(fp)
  82ee04:	20c7c83a 	sub	r3,r4,r3
  82ee08:	1807d4ba 	srai	r3,r3,18
  82ee0c:	18c0ffcc 	andi	r3,r3,1023
  82ee10:	e13fb917 	ldw	r4,-284(fp)
  82ee14:	20c7883a 	add	r3,r4,r3
  82ee18:	18c00003 	ldbu	r3,0(r3)
  82ee1c:	10c00005 	stb	r3,0(r2)
  82ee20:	e0bfc917 	ldw	r2,-220(fp)
  82ee24:	10800084 	addi	r2,r2,2
  82ee28:	e0ffc117 	ldw	r3,-252(fp)
  82ee2c:	1807d4ba 	srai	r3,r3,18
  82ee30:	18c0ffcc 	andi	r3,r3,1023
  82ee34:	e13fb917 	ldw	r4,-284(fp)
  82ee38:	20c7883a 	add	r3,r4,r3
  82ee3c:	18c00003 	ldbu	r3,0(r3)
  82ee40:	10c00005 	stb	r3,0(r2)
  82ee44:	e0bfb717 	ldw	r2,-292(fp)
  82ee48:	10800504 	addi	r2,r2,20
  82ee4c:	e0bfb715 	stw	r2,-292(fp)
  82ee50:	e0bfb817 	ldw	r2,-288(fp)
  82ee54:	10800044 	addi	r2,r2,1
  82ee58:	e0bfb815 	stw	r2,-288(fp)
  82ee5c:	e0bfb817 	ldw	r2,-288(fp)
  82ee60:	10800290 	cmplti	r2,r2,10
  82ee64:	103f6c1e 	bne	r2,zero,82ec18 <__alt_mem_epcs_flash_controller_0+0xff825c18>
  82ee68:	0001883a 	nop
  82ee6c:	e037883a 	mov	sp,fp
  82ee70:	dfc00117 	ldw	ra,4(sp)
  82ee74:	df000017 	ldw	fp,0(sp)
  82ee78:	dec00204 	addi	sp,sp,8
  82ee7c:	f800283a 	ret

0082ee80 <jpeg_idct_4x8>:
  82ee80:	deffc804 	addi	sp,sp,-224
  82ee84:	dfc03715 	stw	ra,220(sp)
  82ee88:	df003615 	stw	fp,216(sp)
  82ee8c:	df003604 	addi	fp,sp,216
  82ee90:	e13ffc15 	stw	r4,-16(fp)
  82ee94:	e17ffd15 	stw	r5,-12(fp)
  82ee98:	e1bffe15 	stw	r6,-8(fp)
  82ee9c:	e1ffff15 	stw	r7,-4(fp)
  82eea0:	e0bffc17 	ldw	r2,-16(fp)
  82eea4:	10805417 	ldw	r2,336(r2)
  82eea8:	10bfa004 	addi	r2,r2,-384
  82eeac:	e0bfce15 	stw	r2,-200(fp)
  82eeb0:	e0bffe17 	ldw	r2,-8(fp)
  82eeb4:	e0bfca15 	stw	r2,-216(fp)
  82eeb8:	e0bffd17 	ldw	r2,-12(fp)
  82eebc:	10801517 	ldw	r2,84(r2)
  82eec0:	e0bfcb15 	stw	r2,-212(fp)
  82eec4:	e0bfdc04 	addi	r2,fp,-144
  82eec8:	e0bfcc15 	stw	r2,-208(fp)
  82eecc:	00800104 	movi	r2,4
  82eed0:	e0bfcd15 	stw	r2,-204(fp)
  82eed4:	00019b06 	br	82f544 <jpeg_idct_4x8+0x6c4>
  82eed8:	e0bfca17 	ldw	r2,-216(fp)
  82eedc:	10800404 	addi	r2,r2,16
  82eee0:	1080000b 	ldhu	r2,0(r2)
  82eee4:	10bfffcc 	andi	r2,r2,65535
  82eee8:	10a0001c 	xori	r2,r2,32768
  82eeec:	10a00004 	addi	r2,r2,-32768
  82eef0:	1000601e 	bne	r2,zero,82f074 <jpeg_idct_4x8+0x1f4>
  82eef4:	e0bfca17 	ldw	r2,-216(fp)
  82eef8:	10800804 	addi	r2,r2,32
  82eefc:	1080000b 	ldhu	r2,0(r2)
  82ef00:	10bfffcc 	andi	r2,r2,65535
  82ef04:	10a0001c 	xori	r2,r2,32768
  82ef08:	10a00004 	addi	r2,r2,-32768
  82ef0c:	1000591e 	bne	r2,zero,82f074 <jpeg_idct_4x8+0x1f4>
  82ef10:	e0bfca17 	ldw	r2,-216(fp)
  82ef14:	10800c04 	addi	r2,r2,48
  82ef18:	1080000b 	ldhu	r2,0(r2)
  82ef1c:	10bfffcc 	andi	r2,r2,65535
  82ef20:	10a0001c 	xori	r2,r2,32768
  82ef24:	10a00004 	addi	r2,r2,-32768
  82ef28:	1000521e 	bne	r2,zero,82f074 <jpeg_idct_4x8+0x1f4>
  82ef2c:	e0bfca17 	ldw	r2,-216(fp)
  82ef30:	10801004 	addi	r2,r2,64
  82ef34:	1080000b 	ldhu	r2,0(r2)
  82ef38:	10bfffcc 	andi	r2,r2,65535
  82ef3c:	10a0001c 	xori	r2,r2,32768
  82ef40:	10a00004 	addi	r2,r2,-32768
  82ef44:	10004b1e 	bne	r2,zero,82f074 <jpeg_idct_4x8+0x1f4>
  82ef48:	e0bfca17 	ldw	r2,-216(fp)
  82ef4c:	10801404 	addi	r2,r2,80
  82ef50:	1080000b 	ldhu	r2,0(r2)
  82ef54:	10bfffcc 	andi	r2,r2,65535
  82ef58:	10a0001c 	xori	r2,r2,32768
  82ef5c:	10a00004 	addi	r2,r2,-32768
  82ef60:	1000441e 	bne	r2,zero,82f074 <jpeg_idct_4x8+0x1f4>
  82ef64:	e0bfca17 	ldw	r2,-216(fp)
  82ef68:	10801804 	addi	r2,r2,96
  82ef6c:	1080000b 	ldhu	r2,0(r2)
  82ef70:	10bfffcc 	andi	r2,r2,65535
  82ef74:	10a0001c 	xori	r2,r2,32768
  82ef78:	10a00004 	addi	r2,r2,-32768
  82ef7c:	10003d1e 	bne	r2,zero,82f074 <jpeg_idct_4x8+0x1f4>
  82ef80:	e0bfca17 	ldw	r2,-216(fp)
  82ef84:	10801c04 	addi	r2,r2,112
  82ef88:	1080000b 	ldhu	r2,0(r2)
  82ef8c:	10bfffcc 	andi	r2,r2,65535
  82ef90:	10a0001c 	xori	r2,r2,32768
  82ef94:	10a00004 	addi	r2,r2,-32768
  82ef98:	1000361e 	bne	r2,zero,82f074 <jpeg_idct_4x8+0x1f4>
  82ef9c:	e0bfca17 	ldw	r2,-216(fp)
  82efa0:	1080000b 	ldhu	r2,0(r2)
  82efa4:	10ffffcc 	andi	r3,r2,65535
  82efa8:	18e0001c 	xori	r3,r3,32768
  82efac:	18e00004 	addi	r3,r3,-32768
  82efb0:	e0bfcb17 	ldw	r2,-212(fp)
  82efb4:	10800017 	ldw	r2,0(r2)
  82efb8:	100b883a 	mov	r5,r2
  82efbc:	1809883a 	mov	r4,r3
  82efc0:	08301e80 	call	8301e8 <__mulsi3>
  82efc4:	1085883a 	add	r2,r2,r2
  82efc8:	1085883a 	add	r2,r2,r2
  82efcc:	e0bfcf15 	stw	r2,-196(fp)
  82efd0:	e0bfcc17 	ldw	r2,-208(fp)
  82efd4:	e0ffcf17 	ldw	r3,-196(fp)
  82efd8:	10c00015 	stw	r3,0(r2)
  82efdc:	e0bfcc17 	ldw	r2,-208(fp)
  82efe0:	10800404 	addi	r2,r2,16
  82efe4:	e0ffcf17 	ldw	r3,-196(fp)
  82efe8:	10c00015 	stw	r3,0(r2)
  82efec:	e0bfcc17 	ldw	r2,-208(fp)
  82eff0:	10800804 	addi	r2,r2,32
  82eff4:	e0ffcf17 	ldw	r3,-196(fp)
  82eff8:	10c00015 	stw	r3,0(r2)
  82effc:	e0bfcc17 	ldw	r2,-208(fp)
  82f000:	10800c04 	addi	r2,r2,48
  82f004:	e0ffcf17 	ldw	r3,-196(fp)
  82f008:	10c00015 	stw	r3,0(r2)
  82f00c:	e0bfcc17 	ldw	r2,-208(fp)
  82f010:	10801004 	addi	r2,r2,64
  82f014:	e0ffcf17 	ldw	r3,-196(fp)
  82f018:	10c00015 	stw	r3,0(r2)
  82f01c:	e0bfcc17 	ldw	r2,-208(fp)
  82f020:	10801404 	addi	r2,r2,80
  82f024:	e0ffcf17 	ldw	r3,-196(fp)
  82f028:	10c00015 	stw	r3,0(r2)
  82f02c:	e0bfcc17 	ldw	r2,-208(fp)
  82f030:	10801804 	addi	r2,r2,96
  82f034:	e0ffcf17 	ldw	r3,-196(fp)
  82f038:	10c00015 	stw	r3,0(r2)
  82f03c:	e0bfcc17 	ldw	r2,-208(fp)
  82f040:	10801c04 	addi	r2,r2,112
  82f044:	e0ffcf17 	ldw	r3,-196(fp)
  82f048:	10c00015 	stw	r3,0(r2)
  82f04c:	e0bfca17 	ldw	r2,-216(fp)
  82f050:	10800084 	addi	r2,r2,2
  82f054:	e0bfca15 	stw	r2,-216(fp)
  82f058:	e0bfcb17 	ldw	r2,-212(fp)
  82f05c:	10800104 	addi	r2,r2,4
  82f060:	e0bfcb15 	stw	r2,-212(fp)
  82f064:	e0bfcc17 	ldw	r2,-208(fp)
  82f068:	10800104 	addi	r2,r2,4
  82f06c:	e0bfcc15 	stw	r2,-208(fp)
  82f070:	00013106 	br	82f538 <jpeg_idct_4x8+0x6b8>
  82f074:	e0bfca17 	ldw	r2,-216(fp)
  82f078:	10800804 	addi	r2,r2,32
  82f07c:	1080000b 	ldhu	r2,0(r2)
  82f080:	10ffffcc 	andi	r3,r2,65535
  82f084:	18e0001c 	xori	r3,r3,32768
  82f088:	18e00004 	addi	r3,r3,-32768
  82f08c:	e0bfcb17 	ldw	r2,-212(fp)
  82f090:	10801004 	addi	r2,r2,64
  82f094:	10800017 	ldw	r2,0(r2)
  82f098:	100b883a 	mov	r5,r2
  82f09c:	1809883a 	mov	r4,r3
  82f0a0:	08301e80 	call	8301e8 <__mulsi3>
  82f0a4:	e0bfd015 	stw	r2,-192(fp)
  82f0a8:	e0bfca17 	ldw	r2,-216(fp)
  82f0ac:	10801804 	addi	r2,r2,96
  82f0b0:	1080000b 	ldhu	r2,0(r2)
  82f0b4:	10ffffcc 	andi	r3,r2,65535
  82f0b8:	18e0001c 	xori	r3,r3,32768
  82f0bc:	18e00004 	addi	r3,r3,-32768
  82f0c0:	e0bfcb17 	ldw	r2,-212(fp)
  82f0c4:	10803004 	addi	r2,r2,192
  82f0c8:	10800017 	ldw	r2,0(r2)
  82f0cc:	100b883a 	mov	r5,r2
  82f0d0:	1809883a 	mov	r4,r3
  82f0d4:	08301e80 	call	8301e8 <__mulsi3>
  82f0d8:	e0bfd115 	stw	r2,-188(fp)
  82f0dc:	e0ffd017 	ldw	r3,-192(fp)
  82f0e0:	e0bfd117 	ldw	r2,-188(fp)
  82f0e4:	1885883a 	add	r2,r3,r2
  82f0e8:	01445444 	movi	r5,4433
  82f0ec:	1009883a 	mov	r4,r2
  82f0f0:	08301e80 	call	8301e8 <__mulsi3>
  82f0f4:	e0bfd215 	stw	r2,-184(fp)
  82f0f8:	01461f84 	movi	r5,6270
  82f0fc:	e13fd017 	ldw	r4,-192(fp)
  82f100:	08301e80 	call	8301e8 <__mulsi3>
  82f104:	1007883a 	mov	r3,r2
  82f108:	e0bfd217 	ldw	r2,-184(fp)
  82f10c:	1885883a 	add	r2,r3,r2
  82f110:	e0bfd315 	stw	r2,-180(fp)
  82f114:	017137c4 	movi	r5,-15137
  82f118:	e13fd117 	ldw	r4,-188(fp)
  82f11c:	08301e80 	call	8301e8 <__mulsi3>
  82f120:	1007883a 	mov	r3,r2
  82f124:	e0bfd217 	ldw	r2,-184(fp)
  82f128:	1885883a 	add	r2,r3,r2
  82f12c:	e0bfd415 	stw	r2,-176(fp)
  82f130:	e0bfca17 	ldw	r2,-216(fp)
  82f134:	1080000b 	ldhu	r2,0(r2)
  82f138:	10ffffcc 	andi	r3,r2,65535
  82f13c:	18e0001c 	xori	r3,r3,32768
  82f140:	18e00004 	addi	r3,r3,-32768
  82f144:	e0bfcb17 	ldw	r2,-212(fp)
  82f148:	10800017 	ldw	r2,0(r2)
  82f14c:	100b883a 	mov	r5,r2
  82f150:	1809883a 	mov	r4,r3
  82f154:	08301e80 	call	8301e8 <__mulsi3>
  82f158:	e0bfd015 	stw	r2,-192(fp)
  82f15c:	e0bfca17 	ldw	r2,-216(fp)
  82f160:	10801004 	addi	r2,r2,64
  82f164:	1080000b 	ldhu	r2,0(r2)
  82f168:	10ffffcc 	andi	r3,r2,65535
  82f16c:	18e0001c 	xori	r3,r3,32768
  82f170:	18e00004 	addi	r3,r3,-32768
  82f174:	e0bfcb17 	ldw	r2,-212(fp)
  82f178:	10802004 	addi	r2,r2,128
  82f17c:	10800017 	ldw	r2,0(r2)
  82f180:	100b883a 	mov	r5,r2
  82f184:	1809883a 	mov	r4,r3
  82f188:	08301e80 	call	8301e8 <__mulsi3>
  82f18c:	e0bfd115 	stw	r2,-188(fp)
  82f190:	e0bfd017 	ldw	r2,-192(fp)
  82f194:	1004937a 	slli	r2,r2,13
  82f198:	e0bfd015 	stw	r2,-192(fp)
  82f19c:	e0bfd117 	ldw	r2,-188(fp)
  82f1a0:	1004937a 	slli	r2,r2,13
  82f1a4:	e0bfd115 	stw	r2,-188(fp)
  82f1a8:	e0bfd017 	ldw	r2,-192(fp)
  82f1ac:	10810004 	addi	r2,r2,1024
  82f1b0:	e0bfd015 	stw	r2,-192(fp)
  82f1b4:	e0ffd017 	ldw	r3,-192(fp)
  82f1b8:	e0bfd117 	ldw	r2,-188(fp)
  82f1bc:	1885883a 	add	r2,r3,r2
  82f1c0:	e0bfd515 	stw	r2,-172(fp)
  82f1c4:	e0ffd017 	ldw	r3,-192(fp)
  82f1c8:	e0bfd117 	ldw	r2,-188(fp)
  82f1cc:	1885c83a 	sub	r2,r3,r2
  82f1d0:	e0bfd615 	stw	r2,-168(fp)
  82f1d4:	e0ffd517 	ldw	r3,-172(fp)
  82f1d8:	e0bfd317 	ldw	r2,-180(fp)
  82f1dc:	1885883a 	add	r2,r3,r2
  82f1e0:	e0bfd715 	stw	r2,-164(fp)
  82f1e4:	e0ffd517 	ldw	r3,-172(fp)
  82f1e8:	e0bfd317 	ldw	r2,-180(fp)
  82f1ec:	1885c83a 	sub	r2,r3,r2
  82f1f0:	e0bfd815 	stw	r2,-160(fp)
  82f1f4:	e0ffd617 	ldw	r3,-168(fp)
  82f1f8:	e0bfd417 	ldw	r2,-176(fp)
  82f1fc:	1885883a 	add	r2,r3,r2
  82f200:	e0bfd915 	stw	r2,-156(fp)
  82f204:	e0ffd617 	ldw	r3,-168(fp)
  82f208:	e0bfd417 	ldw	r2,-176(fp)
  82f20c:	1885c83a 	sub	r2,r3,r2
  82f210:	e0bfda15 	stw	r2,-152(fp)
  82f214:	e0bfca17 	ldw	r2,-216(fp)
  82f218:	10801c04 	addi	r2,r2,112
  82f21c:	1080000b 	ldhu	r2,0(r2)
  82f220:	10ffffcc 	andi	r3,r2,65535
  82f224:	18e0001c 	xori	r3,r3,32768
  82f228:	18e00004 	addi	r3,r3,-32768
  82f22c:	e0bfcb17 	ldw	r2,-212(fp)
  82f230:	10803804 	addi	r2,r2,224
  82f234:	10800017 	ldw	r2,0(r2)
  82f238:	100b883a 	mov	r5,r2
  82f23c:	1809883a 	mov	r4,r3
  82f240:	08301e80 	call	8301e8 <__mulsi3>
  82f244:	e0bfd515 	stw	r2,-172(fp)
  82f248:	e0bfca17 	ldw	r2,-216(fp)
  82f24c:	10801404 	addi	r2,r2,80
  82f250:	1080000b 	ldhu	r2,0(r2)
  82f254:	10ffffcc 	andi	r3,r2,65535
  82f258:	18e0001c 	xori	r3,r3,32768
  82f25c:	18e00004 	addi	r3,r3,-32768
  82f260:	e0bfcb17 	ldw	r2,-212(fp)
  82f264:	10802804 	addi	r2,r2,160
  82f268:	10800017 	ldw	r2,0(r2)
  82f26c:	100b883a 	mov	r5,r2
  82f270:	1809883a 	mov	r4,r3
  82f274:	08301e80 	call	8301e8 <__mulsi3>
  82f278:	e0bfd615 	stw	r2,-168(fp)
  82f27c:	e0bfca17 	ldw	r2,-216(fp)
  82f280:	10800c04 	addi	r2,r2,48
  82f284:	1080000b 	ldhu	r2,0(r2)
  82f288:	10ffffcc 	andi	r3,r2,65535
  82f28c:	18e0001c 	xori	r3,r3,32768
  82f290:	18e00004 	addi	r3,r3,-32768
  82f294:	e0bfcb17 	ldw	r2,-212(fp)
  82f298:	10801804 	addi	r2,r2,96
  82f29c:	10800017 	ldw	r2,0(r2)
  82f2a0:	100b883a 	mov	r5,r2
  82f2a4:	1809883a 	mov	r4,r3
  82f2a8:	08301e80 	call	8301e8 <__mulsi3>
  82f2ac:	e0bfd315 	stw	r2,-180(fp)
  82f2b0:	e0bfca17 	ldw	r2,-216(fp)
  82f2b4:	10800404 	addi	r2,r2,16
  82f2b8:	1080000b 	ldhu	r2,0(r2)
  82f2bc:	10ffffcc 	andi	r3,r2,65535
  82f2c0:	18e0001c 	xori	r3,r3,32768
  82f2c4:	18e00004 	addi	r3,r3,-32768
  82f2c8:	e0bfcb17 	ldw	r2,-212(fp)
  82f2cc:	10800804 	addi	r2,r2,32
  82f2d0:	10800017 	ldw	r2,0(r2)
  82f2d4:	100b883a 	mov	r5,r2
  82f2d8:	1809883a 	mov	r4,r3
  82f2dc:	08301e80 	call	8301e8 <__mulsi3>
  82f2e0:	e0bfd415 	stw	r2,-176(fp)
  82f2e4:	e0ffd517 	ldw	r3,-172(fp)
  82f2e8:	e0bfd317 	ldw	r2,-180(fp)
  82f2ec:	1885883a 	add	r2,r3,r2
  82f2f0:	e0bfd015 	stw	r2,-192(fp)
  82f2f4:	e0ffd617 	ldw	r3,-168(fp)
  82f2f8:	e0bfd417 	ldw	r2,-176(fp)
  82f2fc:	1885883a 	add	r2,r3,r2
  82f300:	e0bfd115 	stw	r2,-188(fp)
  82f304:	e0ffd017 	ldw	r3,-192(fp)
  82f308:	e0bfd117 	ldw	r2,-188(fp)
  82f30c:	1885883a 	add	r2,r3,r2
  82f310:	01496844 	movi	r5,9633
  82f314:	1009883a 	mov	r4,r2
  82f318:	08301e80 	call	8301e8 <__mulsi3>
  82f31c:	e0bfd215 	stw	r2,-184(fp)
  82f320:	01704ec4 	movi	r5,-16069
  82f324:	e13fd017 	ldw	r4,-192(fp)
  82f328:	08301e80 	call	8301e8 <__mulsi3>
  82f32c:	e0bfd015 	stw	r2,-192(fp)
  82f330:	017ce104 	movi	r5,-3196
  82f334:	e13fd117 	ldw	r4,-188(fp)
  82f338:	08301e80 	call	8301e8 <__mulsi3>
  82f33c:	e0bfd115 	stw	r2,-188(fp)
  82f340:	e0ffd017 	ldw	r3,-192(fp)
  82f344:	e0bfd217 	ldw	r2,-184(fp)
  82f348:	1885883a 	add	r2,r3,r2
  82f34c:	e0bfd015 	stw	r2,-192(fp)
  82f350:	e0ffd117 	ldw	r3,-188(fp)
  82f354:	e0bfd217 	ldw	r2,-184(fp)
  82f358:	1885883a 	add	r2,r3,r2
  82f35c:	e0bfd115 	stw	r2,-188(fp)
  82f360:	e0ffd517 	ldw	r3,-172(fp)
  82f364:	e0bfd417 	ldw	r2,-176(fp)
  82f368:	1885883a 	add	r2,r3,r2
  82f36c:	0178ccc4 	movi	r5,-7373
  82f370:	1009883a 	mov	r4,r2
  82f374:	08301e80 	call	8301e8 <__mulsi3>
  82f378:	e0bfd215 	stw	r2,-184(fp)
  82f37c:	01426384 	movi	r5,2446
  82f380:	e13fd517 	ldw	r4,-172(fp)
  82f384:	08301e80 	call	8301e8 <__mulsi3>
  82f388:	e0bfd515 	stw	r2,-172(fp)
  82f38c:	014c02c4 	movi	r5,12299
  82f390:	e13fd417 	ldw	r4,-176(fp)
  82f394:	08301e80 	call	8301e8 <__mulsi3>
  82f398:	e0bfd415 	stw	r2,-176(fp)
  82f39c:	e0ffd217 	ldw	r3,-184(fp)
  82f3a0:	e0bfd017 	ldw	r2,-192(fp)
  82f3a4:	1885883a 	add	r2,r3,r2
  82f3a8:	e0ffd517 	ldw	r3,-172(fp)
  82f3ac:	1885883a 	add	r2,r3,r2
  82f3b0:	e0bfd515 	stw	r2,-172(fp)
  82f3b4:	e0ffd217 	ldw	r3,-184(fp)
  82f3b8:	e0bfd117 	ldw	r2,-188(fp)
  82f3bc:	1885883a 	add	r2,r3,r2
  82f3c0:	e0ffd417 	ldw	r3,-176(fp)
  82f3c4:	1885883a 	add	r2,r3,r2
  82f3c8:	e0bfd415 	stw	r2,-176(fp)
  82f3cc:	e0ffd617 	ldw	r3,-168(fp)
  82f3d0:	e0bfd317 	ldw	r2,-180(fp)
  82f3d4:	1885883a 	add	r2,r3,r2
  82f3d8:	016b7f44 	movi	r5,-20995
  82f3dc:	1009883a 	mov	r4,r2
  82f3e0:	08301e80 	call	8301e8 <__mulsi3>
  82f3e4:	e0bfd215 	stw	r2,-184(fp)
  82f3e8:	01506cc4 	movi	r5,16819
  82f3ec:	e13fd617 	ldw	r4,-168(fp)
  82f3f0:	08301e80 	call	8301e8 <__mulsi3>
  82f3f4:	e0bfd615 	stw	r2,-168(fp)
  82f3f8:	01589504 	movi	r5,25172
  82f3fc:	e13fd317 	ldw	r4,-180(fp)
  82f400:	08301e80 	call	8301e8 <__mulsi3>
  82f404:	e0bfd315 	stw	r2,-180(fp)
  82f408:	e0ffd217 	ldw	r3,-184(fp)
  82f40c:	e0bfd117 	ldw	r2,-188(fp)
  82f410:	1885883a 	add	r2,r3,r2
  82f414:	e0ffd617 	ldw	r3,-168(fp)
  82f418:	1885883a 	add	r2,r3,r2
  82f41c:	e0bfd615 	stw	r2,-168(fp)
  82f420:	e0ffd217 	ldw	r3,-184(fp)
  82f424:	e0bfd017 	ldw	r2,-192(fp)
  82f428:	1885883a 	add	r2,r3,r2
  82f42c:	e0ffd317 	ldw	r3,-180(fp)
  82f430:	1885883a 	add	r2,r3,r2
  82f434:	e0bfd315 	stw	r2,-180(fp)
  82f438:	e0ffd717 	ldw	r3,-164(fp)
  82f43c:	e0bfd417 	ldw	r2,-176(fp)
  82f440:	1885883a 	add	r2,r3,r2
  82f444:	1007d2fa 	srai	r3,r2,11
  82f448:	e0bfcc17 	ldw	r2,-208(fp)
  82f44c:	10c00015 	stw	r3,0(r2)
  82f450:	e0bfcc17 	ldw	r2,-208(fp)
  82f454:	10801c04 	addi	r2,r2,112
  82f458:	e13fd717 	ldw	r4,-164(fp)
  82f45c:	e0ffd417 	ldw	r3,-176(fp)
  82f460:	20c7c83a 	sub	r3,r4,r3
  82f464:	1807d2fa 	srai	r3,r3,11
  82f468:	10c00015 	stw	r3,0(r2)
  82f46c:	e0bfcc17 	ldw	r2,-208(fp)
  82f470:	10800404 	addi	r2,r2,16
  82f474:	e13fd917 	ldw	r4,-156(fp)
  82f478:	e0ffd317 	ldw	r3,-180(fp)
  82f47c:	20c7883a 	add	r3,r4,r3
  82f480:	1807d2fa 	srai	r3,r3,11
  82f484:	10c00015 	stw	r3,0(r2)
  82f488:	e0bfcc17 	ldw	r2,-208(fp)
  82f48c:	10801804 	addi	r2,r2,96
  82f490:	e13fd917 	ldw	r4,-156(fp)
  82f494:	e0ffd317 	ldw	r3,-180(fp)
  82f498:	20c7c83a 	sub	r3,r4,r3
  82f49c:	1807d2fa 	srai	r3,r3,11
  82f4a0:	10c00015 	stw	r3,0(r2)
  82f4a4:	e0bfcc17 	ldw	r2,-208(fp)
  82f4a8:	10800804 	addi	r2,r2,32
  82f4ac:	e13fda17 	ldw	r4,-152(fp)
  82f4b0:	e0ffd617 	ldw	r3,-168(fp)
  82f4b4:	20c7883a 	add	r3,r4,r3
  82f4b8:	1807d2fa 	srai	r3,r3,11
  82f4bc:	10c00015 	stw	r3,0(r2)
  82f4c0:	e0bfcc17 	ldw	r2,-208(fp)
  82f4c4:	10801404 	addi	r2,r2,80
  82f4c8:	e13fda17 	ldw	r4,-152(fp)
  82f4cc:	e0ffd617 	ldw	r3,-168(fp)
  82f4d0:	20c7c83a 	sub	r3,r4,r3
  82f4d4:	1807d2fa 	srai	r3,r3,11
  82f4d8:	10c00015 	stw	r3,0(r2)
  82f4dc:	e0bfcc17 	ldw	r2,-208(fp)
  82f4e0:	10800c04 	addi	r2,r2,48
  82f4e4:	e13fd817 	ldw	r4,-160(fp)
  82f4e8:	e0ffd517 	ldw	r3,-172(fp)
  82f4ec:	20c7883a 	add	r3,r4,r3
  82f4f0:	1807d2fa 	srai	r3,r3,11
  82f4f4:	10c00015 	stw	r3,0(r2)
  82f4f8:	e0bfcc17 	ldw	r2,-208(fp)
  82f4fc:	10801004 	addi	r2,r2,64
  82f500:	e13fd817 	ldw	r4,-160(fp)
  82f504:	e0ffd517 	ldw	r3,-172(fp)
  82f508:	20c7c83a 	sub	r3,r4,r3
  82f50c:	1807d2fa 	srai	r3,r3,11
  82f510:	10c00015 	stw	r3,0(r2)
  82f514:	e0bfca17 	ldw	r2,-216(fp)
  82f518:	10800084 	addi	r2,r2,2
  82f51c:	e0bfca15 	stw	r2,-216(fp)
  82f520:	e0bfcb17 	ldw	r2,-212(fp)
  82f524:	10800104 	addi	r2,r2,4
  82f528:	e0bfcb15 	stw	r2,-212(fp)
  82f52c:	e0bfcc17 	ldw	r2,-208(fp)
  82f530:	10800104 	addi	r2,r2,4
  82f534:	e0bfcc15 	stw	r2,-208(fp)
  82f538:	e0bfcd17 	ldw	r2,-204(fp)
  82f53c:	10bfffc4 	addi	r2,r2,-1
  82f540:	e0bfcd15 	stw	r2,-204(fp)
  82f544:	e0bfcd17 	ldw	r2,-204(fp)
  82f548:	00be6316 	blt	zero,r2,82eed8 <__alt_mem_epcs_flash_controller_0+0xff825ed8>
  82f54c:	e0bfdc04 	addi	r2,fp,-144
  82f550:	e0bfcc15 	stw	r2,-208(fp)
  82f554:	e03fcd15 	stw	zero,-204(fp)
  82f558:	00006a06 	br	82f704 <jpeg_idct_4x8+0x884>
  82f55c:	e0bfcd17 	ldw	r2,-204(fp)
  82f560:	1085883a 	add	r2,r2,r2
  82f564:	1085883a 	add	r2,r2,r2
  82f568:	1007883a 	mov	r3,r2
  82f56c:	e0bfff17 	ldw	r2,-4(fp)
  82f570:	10c5883a 	add	r2,r2,r3
  82f574:	10c00017 	ldw	r3,0(r2)
  82f578:	e0800217 	ldw	r2,8(fp)
  82f57c:	1885883a 	add	r2,r3,r2
  82f580:	e0bfdb15 	stw	r2,-148(fp)
  82f584:	e0bfcc17 	ldw	r2,-208(fp)
  82f588:	10800017 	ldw	r2,0(r2)
  82f58c:	10900404 	addi	r2,r2,16400
  82f590:	e0bfd515 	stw	r2,-172(fp)
  82f594:	e0bfcc17 	ldw	r2,-208(fp)
  82f598:	10800204 	addi	r2,r2,8
  82f59c:	10800017 	ldw	r2,0(r2)
  82f5a0:	e0bfd315 	stw	r2,-180(fp)
  82f5a4:	e0ffd517 	ldw	r3,-172(fp)
  82f5a8:	e0bfd317 	ldw	r2,-180(fp)
  82f5ac:	1885883a 	add	r2,r3,r2
  82f5b0:	1004937a 	slli	r2,r2,13
  82f5b4:	e0bfd715 	stw	r2,-164(fp)
  82f5b8:	e0ffd517 	ldw	r3,-172(fp)
  82f5bc:	e0bfd317 	ldw	r2,-180(fp)
  82f5c0:	1885c83a 	sub	r2,r3,r2
  82f5c4:	1004937a 	slli	r2,r2,13
  82f5c8:	e0bfda15 	stw	r2,-152(fp)
  82f5cc:	e0bfcc17 	ldw	r2,-208(fp)
  82f5d0:	10800104 	addi	r2,r2,4
  82f5d4:	10800017 	ldw	r2,0(r2)
  82f5d8:	e0bfd015 	stw	r2,-192(fp)
  82f5dc:	e0bfcc17 	ldw	r2,-208(fp)
  82f5e0:	10800304 	addi	r2,r2,12
  82f5e4:	10800017 	ldw	r2,0(r2)
  82f5e8:	e0bfd115 	stw	r2,-188(fp)
  82f5ec:	e0ffd017 	ldw	r3,-192(fp)
  82f5f0:	e0bfd117 	ldw	r2,-188(fp)
  82f5f4:	1885883a 	add	r2,r3,r2
  82f5f8:	01445444 	movi	r5,4433
  82f5fc:	1009883a 	mov	r4,r2
  82f600:	08301e80 	call	8301e8 <__mulsi3>
  82f604:	e0bfd215 	stw	r2,-184(fp)
  82f608:	01461f84 	movi	r5,6270
  82f60c:	e13fd017 	ldw	r4,-192(fp)
  82f610:	08301e80 	call	8301e8 <__mulsi3>
  82f614:	1007883a 	mov	r3,r2
  82f618:	e0bfd217 	ldw	r2,-184(fp)
  82f61c:	1885883a 	add	r2,r3,r2
  82f620:	e0bfd515 	stw	r2,-172(fp)
  82f624:	017137c4 	movi	r5,-15137
  82f628:	e13fd117 	ldw	r4,-188(fp)
  82f62c:	08301e80 	call	8301e8 <__mulsi3>
  82f630:	1007883a 	mov	r3,r2
  82f634:	e0bfd217 	ldw	r2,-184(fp)
  82f638:	1885883a 	add	r2,r3,r2
  82f63c:	e0bfd315 	stw	r2,-180(fp)
  82f640:	e0ffd717 	ldw	r3,-164(fp)
  82f644:	e0bfd517 	ldw	r2,-172(fp)
  82f648:	1885883a 	add	r2,r3,r2
  82f64c:	1005d4ba 	srai	r2,r2,18
  82f650:	1080ffcc 	andi	r2,r2,1023
  82f654:	e0ffce17 	ldw	r3,-200(fp)
  82f658:	1885883a 	add	r2,r3,r2
  82f65c:	10c00003 	ldbu	r3,0(r2)
  82f660:	e0bfdb17 	ldw	r2,-148(fp)
  82f664:	10c00005 	stb	r3,0(r2)
  82f668:	e0bfdb17 	ldw	r2,-148(fp)
  82f66c:	108000c4 	addi	r2,r2,3
  82f670:	e13fd717 	ldw	r4,-164(fp)
  82f674:	e0ffd517 	ldw	r3,-172(fp)
  82f678:	20c7c83a 	sub	r3,r4,r3
  82f67c:	1807d4ba 	srai	r3,r3,18
  82f680:	18c0ffcc 	andi	r3,r3,1023
  82f684:	e13fce17 	ldw	r4,-200(fp)
  82f688:	20c7883a 	add	r3,r4,r3
  82f68c:	18c00003 	ldbu	r3,0(r3)
  82f690:	10c00005 	stb	r3,0(r2)
  82f694:	e0bfdb17 	ldw	r2,-148(fp)
  82f698:	10800044 	addi	r2,r2,1
  82f69c:	e13fda17 	ldw	r4,-152(fp)
  82f6a0:	e0ffd317 	ldw	r3,-180(fp)
  82f6a4:	20c7883a 	add	r3,r4,r3
  82f6a8:	1807d4ba 	srai	r3,r3,18
  82f6ac:	18c0ffcc 	andi	r3,r3,1023
  82f6b0:	e13fce17 	ldw	r4,-200(fp)
  82f6b4:	20c7883a 	add	r3,r4,r3
  82f6b8:	18c00003 	ldbu	r3,0(r3)
  82f6bc:	10c00005 	stb	r3,0(r2)
  82f6c0:	e0bfdb17 	ldw	r2,-148(fp)
  82f6c4:	10800084 	addi	r2,r2,2
  82f6c8:	e13fda17 	ldw	r4,-152(fp)
  82f6cc:	e0ffd317 	ldw	r3,-180(fp)
  82f6d0:	20c7c83a 	sub	r3,r4,r3
  82f6d4:	1807d4ba 	srai	r3,r3,18
  82f6d8:	18c0ffcc 	andi	r3,r3,1023
  82f6dc:	e13fce17 	ldw	r4,-200(fp)
  82f6e0:	20c7883a 	add	r3,r4,r3
  82f6e4:	18c00003 	ldbu	r3,0(r3)
  82f6e8:	10c00005 	stb	r3,0(r2)
  82f6ec:	e0bfcc17 	ldw	r2,-208(fp)
  82f6f0:	10800404 	addi	r2,r2,16
  82f6f4:	e0bfcc15 	stw	r2,-208(fp)
  82f6f8:	e0bfcd17 	ldw	r2,-204(fp)
  82f6fc:	10800044 	addi	r2,r2,1
  82f700:	e0bfcd15 	stw	r2,-204(fp)
  82f704:	e0bfcd17 	ldw	r2,-204(fp)
  82f708:	10800210 	cmplti	r2,r2,8
  82f70c:	103f931e 	bne	r2,zero,82f55c <__alt_mem_epcs_flash_controller_0+0xff82655c>
  82f710:	0001883a 	nop
  82f714:	e037883a 	mov	sp,fp
  82f718:	dfc00117 	ldw	ra,4(sp)
  82f71c:	df000017 	ldw	fp,0(sp)
  82f720:	dec00204 	addi	sp,sp,8
  82f724:	f800283a 	ret

0082f728 <jpeg_idct_3x6>:
  82f728:	deffd904 	addi	sp,sp,-156
  82f72c:	dfc02615 	stw	ra,152(sp)
  82f730:	df002515 	stw	fp,148(sp)
  82f734:	df002504 	addi	fp,sp,148
  82f738:	e13ffc15 	stw	r4,-16(fp)
  82f73c:	e17ffd15 	stw	r5,-12(fp)
  82f740:	e1bffe15 	stw	r6,-8(fp)
  82f744:	e1ffff15 	stw	r7,-4(fp)
  82f748:	e0bffc17 	ldw	r2,-16(fp)
  82f74c:	10805417 	ldw	r2,336(r2)
  82f750:	10bfa004 	addi	r2,r2,-384
  82f754:	e0bfdf15 	stw	r2,-132(fp)
  82f758:	e0bffe17 	ldw	r2,-8(fp)
  82f75c:	e0bfdb15 	stw	r2,-148(fp)
  82f760:	e0bffd17 	ldw	r2,-12(fp)
  82f764:	10801517 	ldw	r2,84(r2)
  82f768:	e0bfdc15 	stw	r2,-144(fp)
  82f76c:	e0bfea04 	addi	r2,fp,-88
  82f770:	e0bfdd15 	stw	r2,-140(fp)
  82f774:	e03fde15 	stw	zero,-136(fp)
  82f778:	0000bd06 	br	82fa70 <jpeg_idct_3x6+0x348>
  82f77c:	e0bfdb17 	ldw	r2,-148(fp)
  82f780:	1080000b 	ldhu	r2,0(r2)
  82f784:	10ffffcc 	andi	r3,r2,65535
  82f788:	18e0001c 	xori	r3,r3,32768
  82f78c:	18e00004 	addi	r3,r3,-32768
  82f790:	e0bfdc17 	ldw	r2,-144(fp)
  82f794:	10800017 	ldw	r2,0(r2)
  82f798:	100b883a 	mov	r5,r2
  82f79c:	1809883a 	mov	r4,r3
  82f7a0:	08301e80 	call	8301e8 <__mulsi3>
  82f7a4:	e0bfe015 	stw	r2,-128(fp)
  82f7a8:	e0bfe017 	ldw	r2,-128(fp)
  82f7ac:	1004937a 	slli	r2,r2,13
  82f7b0:	e0bfe015 	stw	r2,-128(fp)
  82f7b4:	e0bfe017 	ldw	r2,-128(fp)
  82f7b8:	10810004 	addi	r2,r2,1024
  82f7bc:	e0bfe015 	stw	r2,-128(fp)
  82f7c0:	e0bfdb17 	ldw	r2,-148(fp)
  82f7c4:	10801004 	addi	r2,r2,64
  82f7c8:	1080000b 	ldhu	r2,0(r2)
  82f7cc:	10ffffcc 	andi	r3,r2,65535
  82f7d0:	18e0001c 	xori	r3,r3,32768
  82f7d4:	18e00004 	addi	r3,r3,-32768
  82f7d8:	e0bfdc17 	ldw	r2,-144(fp)
  82f7dc:	10802004 	addi	r2,r2,128
  82f7e0:	10800017 	ldw	r2,0(r2)
  82f7e4:	100b883a 	mov	r5,r2
  82f7e8:	1809883a 	mov	r4,r3
  82f7ec:	08301e80 	call	8301e8 <__mulsi3>
  82f7f0:	e0bfe115 	stw	r2,-124(fp)
  82f7f4:	0145a844 	movi	r5,5793
  82f7f8:	e13fe117 	ldw	r4,-124(fp)
  82f7fc:	08301e80 	call	8301e8 <__mulsi3>
  82f800:	e0bfe215 	stw	r2,-120(fp)
  82f804:	e0ffe017 	ldw	r3,-128(fp)
  82f808:	e0bfe217 	ldw	r2,-120(fp)
  82f80c:	1885883a 	add	r2,r3,r2
  82f810:	e0bfe315 	stw	r2,-116(fp)
  82f814:	e0ffe017 	ldw	r3,-128(fp)
  82f818:	e0bfe217 	ldw	r2,-120(fp)
  82f81c:	1887c83a 	sub	r3,r3,r2
  82f820:	e0bfe217 	ldw	r2,-120(fp)
  82f824:	1885c83a 	sub	r2,r3,r2
  82f828:	1005d2fa 	srai	r2,r2,11
  82f82c:	e0bfe415 	stw	r2,-112(fp)
  82f830:	e0bfdb17 	ldw	r2,-148(fp)
  82f834:	10800804 	addi	r2,r2,32
  82f838:	1080000b 	ldhu	r2,0(r2)
  82f83c:	10ffffcc 	andi	r3,r2,65535
  82f840:	18e0001c 	xori	r3,r3,32768
  82f844:	18e00004 	addi	r3,r3,-32768
  82f848:	e0bfdc17 	ldw	r2,-144(fp)
  82f84c:	10801004 	addi	r2,r2,64
  82f850:	10800017 	ldw	r2,0(r2)
  82f854:	100b883a 	mov	r5,r2
  82f858:	1809883a 	mov	r4,r3
  82f85c:	08301e80 	call	8301e8 <__mulsi3>
  82f860:	e0bfe215 	stw	r2,-120(fp)
  82f864:	0149cc44 	movi	r5,10033
  82f868:	e13fe217 	ldw	r4,-120(fp)
  82f86c:	08301e80 	call	8301e8 <__mulsi3>
  82f870:	e0bfe015 	stw	r2,-128(fp)
  82f874:	e0ffe317 	ldw	r3,-116(fp)
  82f878:	e0bfe017 	ldw	r2,-128(fp)
  82f87c:	1885883a 	add	r2,r3,r2
  82f880:	e0bfe215 	stw	r2,-120(fp)
  82f884:	e0ffe317 	ldw	r3,-116(fp)
  82f888:	e0bfe017 	ldw	r2,-128(fp)
  82f88c:	1885c83a 	sub	r2,r3,r2
  82f890:	e0bfe515 	stw	r2,-108(fp)
  82f894:	e0bfdb17 	ldw	r2,-148(fp)
  82f898:	10800404 	addi	r2,r2,16
  82f89c:	1080000b 	ldhu	r2,0(r2)
  82f8a0:	10ffffcc 	andi	r3,r2,65535
  82f8a4:	18e0001c 	xori	r3,r3,32768
  82f8a8:	18e00004 	addi	r3,r3,-32768
  82f8ac:	e0bfdc17 	ldw	r2,-144(fp)
  82f8b0:	10800804 	addi	r2,r2,32
  82f8b4:	10800017 	ldw	r2,0(r2)
  82f8b8:	100b883a 	mov	r5,r2
  82f8bc:	1809883a 	mov	r4,r3
  82f8c0:	08301e80 	call	8301e8 <__mulsi3>
  82f8c4:	e0bfe615 	stw	r2,-104(fp)
  82f8c8:	e0bfdb17 	ldw	r2,-148(fp)
  82f8cc:	10800c04 	addi	r2,r2,48
  82f8d0:	1080000b 	ldhu	r2,0(r2)
  82f8d4:	10ffffcc 	andi	r3,r2,65535
  82f8d8:	18e0001c 	xori	r3,r3,32768
  82f8dc:	18e00004 	addi	r3,r3,-32768
  82f8e0:	e0bfdc17 	ldw	r2,-144(fp)
  82f8e4:	10801804 	addi	r2,r2,96
  82f8e8:	10800017 	ldw	r2,0(r2)
  82f8ec:	100b883a 	mov	r5,r2
  82f8f0:	1809883a 	mov	r4,r3
  82f8f4:	08301e80 	call	8301e8 <__mulsi3>
  82f8f8:	e0bfe715 	stw	r2,-100(fp)
  82f8fc:	e0bfdb17 	ldw	r2,-148(fp)
  82f900:	10801404 	addi	r2,r2,80
  82f904:	1080000b 	ldhu	r2,0(r2)
  82f908:	10ffffcc 	andi	r3,r2,65535
  82f90c:	18e0001c 	xori	r3,r3,32768
  82f910:	18e00004 	addi	r3,r3,-32768
  82f914:	e0bfdc17 	ldw	r2,-144(fp)
  82f918:	10802804 	addi	r2,r2,160
  82f91c:	10800017 	ldw	r2,0(r2)
  82f920:	100b883a 	mov	r5,r2
  82f924:	1809883a 	mov	r4,r3
  82f928:	08301e80 	call	8301e8 <__mulsi3>
  82f92c:	e0bfe815 	stw	r2,-96(fp)
  82f930:	e0ffe617 	ldw	r3,-104(fp)
  82f934:	e0bfe817 	ldw	r2,-96(fp)
  82f938:	1885883a 	add	r2,r3,r2
  82f93c:	0142ed84 	movi	r5,2998
  82f940:	1009883a 	mov	r4,r2
  82f944:	08301e80 	call	8301e8 <__mulsi3>
  82f948:	e0bfe315 	stw	r2,-116(fp)
  82f94c:	e0ffe617 	ldw	r3,-104(fp)
  82f950:	e0bfe717 	ldw	r2,-100(fp)
  82f954:	1885883a 	add	r2,r3,r2
  82f958:	1006937a 	slli	r3,r2,13
  82f95c:	e0bfe317 	ldw	r2,-116(fp)
  82f960:	1885883a 	add	r2,r3,r2
  82f964:	e0bfe015 	stw	r2,-128(fp)
  82f968:	e0ffe817 	ldw	r3,-96(fp)
  82f96c:	e0bfe717 	ldw	r2,-100(fp)
  82f970:	1885c83a 	sub	r2,r3,r2
  82f974:	1006937a 	slli	r3,r2,13
  82f978:	e0bfe317 	ldw	r2,-116(fp)
  82f97c:	1885883a 	add	r2,r3,r2
  82f980:	e0bfe115 	stw	r2,-124(fp)
  82f984:	e0ffe617 	ldw	r3,-104(fp)
  82f988:	e0bfe717 	ldw	r2,-100(fp)
  82f98c:	1887c83a 	sub	r3,r3,r2
  82f990:	e0bfe817 	ldw	r2,-96(fp)
  82f994:	1885c83a 	sub	r2,r3,r2
  82f998:	1085883a 	add	r2,r2,r2
  82f99c:	1085883a 	add	r2,r2,r2
  82f9a0:	e0bfe315 	stw	r2,-116(fp)
  82f9a4:	e0ffe217 	ldw	r3,-120(fp)
  82f9a8:	e0bfe017 	ldw	r2,-128(fp)
  82f9ac:	1885883a 	add	r2,r3,r2
  82f9b0:	1007d2fa 	srai	r3,r2,11
  82f9b4:	e0bfdd17 	ldw	r2,-140(fp)
  82f9b8:	10c00015 	stw	r3,0(r2)
  82f9bc:	e0bfdd17 	ldw	r2,-140(fp)
  82f9c0:	10800f04 	addi	r2,r2,60
  82f9c4:	e13fe217 	ldw	r4,-120(fp)
  82f9c8:	e0ffe017 	ldw	r3,-128(fp)
  82f9cc:	20c7c83a 	sub	r3,r4,r3
  82f9d0:	1807d2fa 	srai	r3,r3,11
  82f9d4:	10c00015 	stw	r3,0(r2)
  82f9d8:	e0bfdd17 	ldw	r2,-140(fp)
  82f9dc:	10800304 	addi	r2,r2,12
  82f9e0:	e13fe417 	ldw	r4,-112(fp)
  82f9e4:	e0ffe317 	ldw	r3,-116(fp)
  82f9e8:	20c7883a 	add	r3,r4,r3
  82f9ec:	10c00015 	stw	r3,0(r2)
  82f9f0:	e0bfdd17 	ldw	r2,-140(fp)
  82f9f4:	10800c04 	addi	r2,r2,48
  82f9f8:	e13fe417 	ldw	r4,-112(fp)
  82f9fc:	e0ffe317 	ldw	r3,-116(fp)
  82fa00:	20c7c83a 	sub	r3,r4,r3
  82fa04:	10c00015 	stw	r3,0(r2)
  82fa08:	e0bfdd17 	ldw	r2,-140(fp)
  82fa0c:	10800604 	addi	r2,r2,24
  82fa10:	e13fe517 	ldw	r4,-108(fp)
  82fa14:	e0ffe117 	ldw	r3,-124(fp)
  82fa18:	20c7883a 	add	r3,r4,r3
  82fa1c:	1807d2fa 	srai	r3,r3,11
  82fa20:	10c00015 	stw	r3,0(r2)
  82fa24:	e0bfdd17 	ldw	r2,-140(fp)
  82fa28:	10800904 	addi	r2,r2,36
  82fa2c:	e13fe517 	ldw	r4,-108(fp)
  82fa30:	e0ffe117 	ldw	r3,-124(fp)
  82fa34:	20c7c83a 	sub	r3,r4,r3
  82fa38:	1807d2fa 	srai	r3,r3,11
  82fa3c:	10c00015 	stw	r3,0(r2)
  82fa40:	e0bfde17 	ldw	r2,-136(fp)
  82fa44:	10800044 	addi	r2,r2,1
  82fa48:	e0bfde15 	stw	r2,-136(fp)
  82fa4c:	e0bfdb17 	ldw	r2,-148(fp)
  82fa50:	10800084 	addi	r2,r2,2
  82fa54:	e0bfdb15 	stw	r2,-148(fp)
  82fa58:	e0bfdc17 	ldw	r2,-144(fp)
  82fa5c:	10800104 	addi	r2,r2,4
  82fa60:	e0bfdc15 	stw	r2,-144(fp)
  82fa64:	e0bfdd17 	ldw	r2,-140(fp)
  82fa68:	10800104 	addi	r2,r2,4
  82fa6c:	e0bfdd15 	stw	r2,-140(fp)
  82fa70:	e0bfde17 	ldw	r2,-136(fp)
  82fa74:	108000d0 	cmplti	r2,r2,3
  82fa78:	103f401e 	bne	r2,zero,82f77c <__alt_mem_epcs_flash_controller_0+0xff82677c>
  82fa7c:	e0bfea04 	addi	r2,fp,-88
  82fa80:	e0bfdd15 	stw	r2,-140(fp)
  82fa84:	e03fde15 	stw	zero,-136(fp)
  82fa88:	00004f06 	br	82fbc8 <jpeg_idct_3x6+0x4a0>
  82fa8c:	e0bfde17 	ldw	r2,-136(fp)
  82fa90:	1085883a 	add	r2,r2,r2
  82fa94:	1085883a 	add	r2,r2,r2
  82fa98:	1007883a 	mov	r3,r2
  82fa9c:	e0bfff17 	ldw	r2,-4(fp)
  82faa0:	10c5883a 	add	r2,r2,r3
  82faa4:	10c00017 	ldw	r3,0(r2)
  82faa8:	e0800217 	ldw	r2,8(fp)
  82faac:	1885883a 	add	r2,r3,r2
  82fab0:	e0bfe915 	stw	r2,-92(fp)
  82fab4:	e0bfdd17 	ldw	r2,-140(fp)
  82fab8:	10800017 	ldw	r2,0(r2)
  82fabc:	10900404 	addi	r2,r2,16400
  82fac0:	e0bfe015 	stw	r2,-128(fp)
  82fac4:	e0bfe017 	ldw	r2,-128(fp)
  82fac8:	1004937a 	slli	r2,r2,13
  82facc:	e0bfe015 	stw	r2,-128(fp)
  82fad0:	e0bfdd17 	ldw	r2,-140(fp)
  82fad4:	10800204 	addi	r2,r2,8
  82fad8:	10800017 	ldw	r2,0(r2)
  82fadc:	e0bfe115 	stw	r2,-124(fp)
  82fae0:	0145a844 	movi	r5,5793
  82fae4:	e13fe117 	ldw	r4,-124(fp)
  82fae8:	08301e80 	call	8301e8 <__mulsi3>
  82faec:	e0bfe515 	stw	r2,-108(fp)
  82faf0:	e0ffe017 	ldw	r3,-128(fp)
  82faf4:	e0bfe517 	ldw	r2,-108(fp)
  82faf8:	1885883a 	add	r2,r3,r2
  82fafc:	e0bfe215 	stw	r2,-120(fp)
  82fb00:	e0ffe017 	ldw	r3,-128(fp)
  82fb04:	e0bfe517 	ldw	r2,-108(fp)
  82fb08:	1887c83a 	sub	r3,r3,r2
  82fb0c:	e0bfe517 	ldw	r2,-108(fp)
  82fb10:	1885c83a 	sub	r2,r3,r2
  82fb14:	e0bfe115 	stw	r2,-124(fp)
  82fb18:	e0bfdd17 	ldw	r2,-140(fp)
  82fb1c:	10800104 	addi	r2,r2,4
  82fb20:	10800017 	ldw	r2,0(r2)
  82fb24:	e0bfe515 	stw	r2,-108(fp)
  82fb28:	0149cc44 	movi	r5,10033
  82fb2c:	e13fe517 	ldw	r4,-108(fp)
  82fb30:	08301e80 	call	8301e8 <__mulsi3>
  82fb34:	e0bfe015 	stw	r2,-128(fp)
  82fb38:	e0ffe217 	ldw	r3,-120(fp)
  82fb3c:	e0bfe017 	ldw	r2,-128(fp)
  82fb40:	1885883a 	add	r2,r3,r2
  82fb44:	1005d4ba 	srai	r2,r2,18
  82fb48:	1080ffcc 	andi	r2,r2,1023
  82fb4c:	e0ffdf17 	ldw	r3,-132(fp)
  82fb50:	1885883a 	add	r2,r3,r2
  82fb54:	10c00003 	ldbu	r3,0(r2)
  82fb58:	e0bfe917 	ldw	r2,-92(fp)
  82fb5c:	10c00005 	stb	r3,0(r2)
  82fb60:	e0bfe917 	ldw	r2,-92(fp)
  82fb64:	10800084 	addi	r2,r2,2
  82fb68:	e13fe217 	ldw	r4,-120(fp)
  82fb6c:	e0ffe017 	ldw	r3,-128(fp)
  82fb70:	20c7c83a 	sub	r3,r4,r3
  82fb74:	1807d4ba 	srai	r3,r3,18
  82fb78:	18c0ffcc 	andi	r3,r3,1023
  82fb7c:	e13fdf17 	ldw	r4,-132(fp)
  82fb80:	20c7883a 	add	r3,r4,r3
  82fb84:	18c00003 	ldbu	r3,0(r3)
  82fb88:	10c00005 	stb	r3,0(r2)
  82fb8c:	e0bfe917 	ldw	r2,-92(fp)
  82fb90:	10800044 	addi	r2,r2,1
  82fb94:	e0ffe117 	ldw	r3,-124(fp)
  82fb98:	1807d4ba 	srai	r3,r3,18
  82fb9c:	18c0ffcc 	andi	r3,r3,1023
  82fba0:	e13fdf17 	ldw	r4,-132(fp)
  82fba4:	20c7883a 	add	r3,r4,r3
  82fba8:	18c00003 	ldbu	r3,0(r3)
  82fbac:	10c00005 	stb	r3,0(r2)
  82fbb0:	e0bfdd17 	ldw	r2,-140(fp)
  82fbb4:	10800304 	addi	r2,r2,12
  82fbb8:	e0bfdd15 	stw	r2,-140(fp)
  82fbbc:	e0bfde17 	ldw	r2,-136(fp)
  82fbc0:	10800044 	addi	r2,r2,1
  82fbc4:	e0bfde15 	stw	r2,-136(fp)
  82fbc8:	e0bfde17 	ldw	r2,-136(fp)
  82fbcc:	10800190 	cmplti	r2,r2,6
  82fbd0:	103fae1e 	bne	r2,zero,82fa8c <__alt_mem_epcs_flash_controller_0+0xff826a8c>
  82fbd4:	0001883a 	nop
  82fbd8:	e037883a 	mov	sp,fp
  82fbdc:	dfc00117 	ldw	ra,4(sp)
  82fbe0:	df000017 	ldw	fp,0(sp)
  82fbe4:	dec00204 	addi	sp,sp,8
  82fbe8:	f800283a 	ret

0082fbec <jpeg_idct_2x4>:
  82fbec:	deffe504 	addi	sp,sp,-108
  82fbf0:	dfc01a15 	stw	ra,104(sp)
  82fbf4:	df001915 	stw	fp,100(sp)
  82fbf8:	df001904 	addi	fp,sp,100
  82fbfc:	e13ffc15 	stw	r4,-16(fp)
  82fc00:	e17ffd15 	stw	r5,-12(fp)
  82fc04:	e1bffe15 	stw	r6,-8(fp)
  82fc08:	e1ffff15 	stw	r7,-4(fp)
  82fc0c:	e0bffc17 	ldw	r2,-16(fp)
  82fc10:	10805417 	ldw	r2,336(r2)
  82fc14:	10bfa004 	addi	r2,r2,-384
  82fc18:	e0bfeb15 	stw	r2,-84(fp)
  82fc1c:	e0bffe17 	ldw	r2,-8(fp)
  82fc20:	e0bfe715 	stw	r2,-100(fp)
  82fc24:	e0bffd17 	ldw	r2,-12(fp)
  82fc28:	10801517 	ldw	r2,84(r2)
  82fc2c:	e0bfe815 	stw	r2,-96(fp)
  82fc30:	e0bff404 	addi	r2,fp,-48
  82fc34:	e0bfe915 	stw	r2,-92(fp)
  82fc38:	e03fea15 	stw	zero,-88(fp)
  82fc3c:	00007406 	br	82fe10 <jpeg_idct_2x4+0x224>
  82fc40:	e0bfe717 	ldw	r2,-100(fp)
  82fc44:	1080000b 	ldhu	r2,0(r2)
  82fc48:	10ffffcc 	andi	r3,r2,65535
  82fc4c:	18e0001c 	xori	r3,r3,32768
  82fc50:	18e00004 	addi	r3,r3,-32768
  82fc54:	e0bfe817 	ldw	r2,-96(fp)
  82fc58:	10800017 	ldw	r2,0(r2)
  82fc5c:	100b883a 	mov	r5,r2
  82fc60:	1809883a 	mov	r4,r3
  82fc64:	08301e80 	call	8301e8 <__mulsi3>
  82fc68:	e0bfec15 	stw	r2,-80(fp)
  82fc6c:	e0bfe717 	ldw	r2,-100(fp)
  82fc70:	10800804 	addi	r2,r2,32
  82fc74:	1080000b 	ldhu	r2,0(r2)
  82fc78:	10ffffcc 	andi	r3,r2,65535
  82fc7c:	18e0001c 	xori	r3,r3,32768
  82fc80:	18e00004 	addi	r3,r3,-32768
  82fc84:	e0bfe817 	ldw	r2,-96(fp)
  82fc88:	10801004 	addi	r2,r2,64
  82fc8c:	10800017 	ldw	r2,0(r2)
  82fc90:	100b883a 	mov	r5,r2
  82fc94:	1809883a 	mov	r4,r3
  82fc98:	08301e80 	call	8301e8 <__mulsi3>
  82fc9c:	e0bfed15 	stw	r2,-76(fp)
  82fca0:	e0ffec17 	ldw	r3,-80(fp)
  82fca4:	e0bfed17 	ldw	r2,-76(fp)
  82fca8:	1885883a 	add	r2,r3,r2
  82fcac:	1004937a 	slli	r2,r2,13
  82fcb0:	e0bfee15 	stw	r2,-72(fp)
  82fcb4:	e0ffec17 	ldw	r3,-80(fp)
  82fcb8:	e0bfed17 	ldw	r2,-76(fp)
  82fcbc:	1885c83a 	sub	r2,r3,r2
  82fcc0:	1004937a 	slli	r2,r2,13
  82fcc4:	e0bfef15 	stw	r2,-68(fp)
  82fcc8:	e0bfe717 	ldw	r2,-100(fp)
  82fccc:	10800404 	addi	r2,r2,16
  82fcd0:	1080000b 	ldhu	r2,0(r2)
  82fcd4:	10ffffcc 	andi	r3,r2,65535
  82fcd8:	18e0001c 	xori	r3,r3,32768
  82fcdc:	18e00004 	addi	r3,r3,-32768
  82fce0:	e0bfe817 	ldw	r2,-96(fp)
  82fce4:	10800804 	addi	r2,r2,32
  82fce8:	10800017 	ldw	r2,0(r2)
  82fcec:	100b883a 	mov	r5,r2
  82fcf0:	1809883a 	mov	r4,r3
  82fcf4:	08301e80 	call	8301e8 <__mulsi3>
  82fcf8:	e0bff015 	stw	r2,-64(fp)
  82fcfc:	e0bfe717 	ldw	r2,-100(fp)
  82fd00:	10800c04 	addi	r2,r2,48
  82fd04:	1080000b 	ldhu	r2,0(r2)
  82fd08:	10ffffcc 	andi	r3,r2,65535
  82fd0c:	18e0001c 	xori	r3,r3,32768
  82fd10:	18e00004 	addi	r3,r3,-32768
  82fd14:	e0bfe817 	ldw	r2,-96(fp)
  82fd18:	10801804 	addi	r2,r2,96
  82fd1c:	10800017 	ldw	r2,0(r2)
  82fd20:	100b883a 	mov	r5,r2
  82fd24:	1809883a 	mov	r4,r3
  82fd28:	08301e80 	call	8301e8 <__mulsi3>
  82fd2c:	e0bff115 	stw	r2,-60(fp)
  82fd30:	e0fff017 	ldw	r3,-64(fp)
  82fd34:	e0bff117 	ldw	r2,-60(fp)
  82fd38:	1885883a 	add	r2,r3,r2
  82fd3c:	01445444 	movi	r5,4433
  82fd40:	1009883a 	mov	r4,r2
  82fd44:	08301e80 	call	8301e8 <__mulsi3>
  82fd48:	e0bff215 	stw	r2,-56(fp)
  82fd4c:	01461f84 	movi	r5,6270
  82fd50:	e13ff017 	ldw	r4,-64(fp)
  82fd54:	08301e80 	call	8301e8 <__mulsi3>
  82fd58:	1007883a 	mov	r3,r2
  82fd5c:	e0bff217 	ldw	r2,-56(fp)
  82fd60:	1885883a 	add	r2,r3,r2
  82fd64:	e0bfec15 	stw	r2,-80(fp)
  82fd68:	017137c4 	movi	r5,-15137
  82fd6c:	e13ff117 	ldw	r4,-60(fp)
  82fd70:	08301e80 	call	8301e8 <__mulsi3>
  82fd74:	1007883a 	mov	r3,r2
  82fd78:	e0bff217 	ldw	r2,-56(fp)
  82fd7c:	1885883a 	add	r2,r3,r2
  82fd80:	e0bfed15 	stw	r2,-76(fp)
  82fd84:	e0ffee17 	ldw	r3,-72(fp)
  82fd88:	e0bfec17 	ldw	r2,-80(fp)
  82fd8c:	1887883a 	add	r3,r3,r2
  82fd90:	e0bfe917 	ldw	r2,-92(fp)
  82fd94:	10c00015 	stw	r3,0(r2)
  82fd98:	e0bfe917 	ldw	r2,-92(fp)
  82fd9c:	10800604 	addi	r2,r2,24
  82fda0:	e13fee17 	ldw	r4,-72(fp)
  82fda4:	e0ffec17 	ldw	r3,-80(fp)
  82fda8:	20c7c83a 	sub	r3,r4,r3
  82fdac:	10c00015 	stw	r3,0(r2)
  82fdb0:	e0bfe917 	ldw	r2,-92(fp)
  82fdb4:	10800204 	addi	r2,r2,8
  82fdb8:	e13fef17 	ldw	r4,-68(fp)
  82fdbc:	e0ffed17 	ldw	r3,-76(fp)
  82fdc0:	20c7883a 	add	r3,r4,r3
  82fdc4:	10c00015 	stw	r3,0(r2)
  82fdc8:	e0bfe917 	ldw	r2,-92(fp)
  82fdcc:	10800404 	addi	r2,r2,16
  82fdd0:	e13fef17 	ldw	r4,-68(fp)
  82fdd4:	e0ffed17 	ldw	r3,-76(fp)
  82fdd8:	20c7c83a 	sub	r3,r4,r3
  82fddc:	10c00015 	stw	r3,0(r2)
  82fde0:	e0bfea17 	ldw	r2,-88(fp)
  82fde4:	10800044 	addi	r2,r2,1
  82fde8:	e0bfea15 	stw	r2,-88(fp)
  82fdec:	e0bfe717 	ldw	r2,-100(fp)
  82fdf0:	10800084 	addi	r2,r2,2
  82fdf4:	e0bfe715 	stw	r2,-100(fp)
  82fdf8:	e0bfe817 	ldw	r2,-96(fp)
  82fdfc:	10800104 	addi	r2,r2,4
  82fe00:	e0bfe815 	stw	r2,-96(fp)
  82fe04:	e0bfe917 	ldw	r2,-92(fp)
  82fe08:	10800104 	addi	r2,r2,4
  82fe0c:	e0bfe915 	stw	r2,-92(fp)
  82fe10:	e0bfea17 	ldw	r2,-88(fp)
  82fe14:	10800090 	cmplti	r2,r2,2
  82fe18:	103f891e 	bne	r2,zero,82fc40 <__alt_mem_epcs_flash_controller_0+0xff826c40>
  82fe1c:	e0bff404 	addi	r2,fp,-48
  82fe20:	e0bfe915 	stw	r2,-92(fp)
  82fe24:	e03fea15 	stw	zero,-88(fp)
  82fe28:	00002e06 	br	82fee4 <jpeg_idct_2x4+0x2f8>
  82fe2c:	e0bfea17 	ldw	r2,-88(fp)
  82fe30:	1085883a 	add	r2,r2,r2
  82fe34:	1085883a 	add	r2,r2,r2
  82fe38:	1007883a 	mov	r3,r2
  82fe3c:	e0bfff17 	ldw	r2,-4(fp)
  82fe40:	10c5883a 	add	r2,r2,r3
  82fe44:	10c00017 	ldw	r3,0(r2)
  82fe48:	e0800217 	ldw	r2,8(fp)
  82fe4c:	1885883a 	add	r2,r3,r2
  82fe50:	e0bff315 	stw	r2,-52(fp)
  82fe54:	e0bfe917 	ldw	r2,-92(fp)
  82fe58:	10c00017 	ldw	r3,0(r2)
  82fe5c:	00808074 	movhi	r2,513
  82fe60:	10a00004 	addi	r2,r2,-32768
  82fe64:	1885883a 	add	r2,r3,r2
  82fe68:	e0bfee15 	stw	r2,-72(fp)
  82fe6c:	e0bfe917 	ldw	r2,-92(fp)
  82fe70:	10800117 	ldw	r2,4(r2)
  82fe74:	e0bfec15 	stw	r2,-80(fp)
  82fe78:	e0ffee17 	ldw	r3,-72(fp)
  82fe7c:	e0bfec17 	ldw	r2,-80(fp)
  82fe80:	1885883a 	add	r2,r3,r2
  82fe84:	1005d43a 	srai	r2,r2,16
  82fe88:	1080ffcc 	andi	r2,r2,1023
  82fe8c:	e0ffeb17 	ldw	r3,-84(fp)
  82fe90:	1885883a 	add	r2,r3,r2
  82fe94:	10c00003 	ldbu	r3,0(r2)
  82fe98:	e0bff317 	ldw	r2,-52(fp)
  82fe9c:	10c00005 	stb	r3,0(r2)
  82fea0:	e0bff317 	ldw	r2,-52(fp)
  82fea4:	10800044 	addi	r2,r2,1
  82fea8:	e13fee17 	ldw	r4,-72(fp)
  82feac:	e0ffec17 	ldw	r3,-80(fp)
  82feb0:	20c7c83a 	sub	r3,r4,r3
  82feb4:	1807d43a 	srai	r3,r3,16
  82feb8:	18c0ffcc 	andi	r3,r3,1023
  82febc:	e13feb17 	ldw	r4,-84(fp)
  82fec0:	20c7883a 	add	r3,r4,r3
  82fec4:	18c00003 	ldbu	r3,0(r3)
  82fec8:	10c00005 	stb	r3,0(r2)
  82fecc:	e0bfe917 	ldw	r2,-92(fp)
  82fed0:	10800204 	addi	r2,r2,8
  82fed4:	e0bfe915 	stw	r2,-92(fp)
  82fed8:	e0bfea17 	ldw	r2,-88(fp)
  82fedc:	10800044 	addi	r2,r2,1
  82fee0:	e0bfea15 	stw	r2,-88(fp)
  82fee4:	e0bfea17 	ldw	r2,-88(fp)
  82fee8:	10800110 	cmplti	r2,r2,4
  82feec:	103fcf1e 	bne	r2,zero,82fe2c <__alt_mem_epcs_flash_controller_0+0xff826e2c>
  82fef0:	0001883a 	nop
  82fef4:	e037883a 	mov	sp,fp
  82fef8:	dfc00117 	ldw	ra,4(sp)
  82fefc:	df000017 	ldw	fp,0(sp)
  82ff00:	dec00204 	addi	sp,sp,8
  82ff04:	f800283a 	ret

0082ff08 <jpeg_idct_1x2>:
  82ff08:	defff604 	addi	sp,sp,-40
  82ff0c:	dfc00915 	stw	ra,36(sp)
  82ff10:	df000815 	stw	fp,32(sp)
  82ff14:	df000804 	addi	fp,sp,32
  82ff18:	e13ffc15 	stw	r4,-16(fp)
  82ff1c:	e17ffd15 	stw	r5,-12(fp)
  82ff20:	e1bffe15 	stw	r6,-8(fp)
  82ff24:	e1ffff15 	stw	r7,-4(fp)
  82ff28:	e0bffc17 	ldw	r2,-16(fp)
  82ff2c:	10805417 	ldw	r2,336(r2)
  82ff30:	10bfa004 	addi	r2,r2,-384
  82ff34:	e0bff815 	stw	r2,-32(fp)
  82ff38:	e0bffd17 	ldw	r2,-12(fp)
  82ff3c:	10801517 	ldw	r2,84(r2)
  82ff40:	e0bff915 	stw	r2,-28(fp)
  82ff44:	e0bffe17 	ldw	r2,-8(fp)
  82ff48:	1080000b 	ldhu	r2,0(r2)
  82ff4c:	10ffffcc 	andi	r3,r2,65535
  82ff50:	18e0001c 	xori	r3,r3,32768
  82ff54:	18e00004 	addi	r3,r3,-32768
  82ff58:	e0bff917 	ldw	r2,-28(fp)
  82ff5c:	10800017 	ldw	r2,0(r2)
  82ff60:	100b883a 	mov	r5,r2
  82ff64:	1809883a 	mov	r4,r3
  82ff68:	08301e80 	call	8301e8 <__mulsi3>
  82ff6c:	e0bffa15 	stw	r2,-24(fp)
  82ff70:	e0bffa17 	ldw	r2,-24(fp)
  82ff74:	10840104 	addi	r2,r2,4100
  82ff78:	e0bffa15 	stw	r2,-24(fp)
  82ff7c:	e0bffe17 	ldw	r2,-8(fp)
  82ff80:	10800404 	addi	r2,r2,16
  82ff84:	1080000b 	ldhu	r2,0(r2)
  82ff88:	10ffffcc 	andi	r3,r2,65535
  82ff8c:	18e0001c 	xori	r3,r3,32768
  82ff90:	18e00004 	addi	r3,r3,-32768
  82ff94:	e0bff917 	ldw	r2,-28(fp)
  82ff98:	10800804 	addi	r2,r2,32
  82ff9c:	10800017 	ldw	r2,0(r2)
  82ffa0:	100b883a 	mov	r5,r2
  82ffa4:	1809883a 	mov	r4,r3
  82ffa8:	08301e80 	call	8301e8 <__mulsi3>
  82ffac:	e0bffb15 	stw	r2,-20(fp)
  82ffb0:	e0bfff17 	ldw	r2,-4(fp)
  82ffb4:	10c00017 	ldw	r3,0(r2)
  82ffb8:	e0800217 	ldw	r2,8(fp)
  82ffbc:	1885883a 	add	r2,r3,r2
  82ffc0:	e13ffa17 	ldw	r4,-24(fp)
  82ffc4:	e0fffb17 	ldw	r3,-20(fp)
  82ffc8:	20c7883a 	add	r3,r4,r3
  82ffcc:	1807d0fa 	srai	r3,r3,3
  82ffd0:	18c0ffcc 	andi	r3,r3,1023
  82ffd4:	e13ff817 	ldw	r4,-32(fp)
  82ffd8:	20c7883a 	add	r3,r4,r3
  82ffdc:	18c00003 	ldbu	r3,0(r3)
  82ffe0:	10c00005 	stb	r3,0(r2)
  82ffe4:	e0bfff17 	ldw	r2,-4(fp)
  82ffe8:	10800104 	addi	r2,r2,4
  82ffec:	10c00017 	ldw	r3,0(r2)
  82fff0:	e0800217 	ldw	r2,8(fp)
  82fff4:	1885883a 	add	r2,r3,r2
  82fff8:	e13ffa17 	ldw	r4,-24(fp)
  82fffc:	e0fffb17 	ldw	r3,-20(fp)
  830000:	20c7c83a 	sub	r3,r4,r3
  830004:	1807d0fa 	srai	r3,r3,3
  830008:	18c0ffcc 	andi	r3,r3,1023
  83000c:	e13ff817 	ldw	r4,-32(fp)
  830010:	20c7883a 	add	r3,r4,r3
  830014:	18c00003 	ldbu	r3,0(r3)
  830018:	10c00005 	stb	r3,0(r2)
  83001c:	0001883a 	nop
  830020:	e037883a 	mov	sp,fp
  830024:	dfc00117 	ldw	ra,4(sp)
  830028:	df000017 	ldw	fp,0(sp)
  83002c:	dec00204 	addi	sp,sp,8
  830030:	f800283a 	ret

00830034 <__divsi3>:
  830034:	20001b16 	blt	r4,zero,8300a4 <__divsi3+0x70>
  830038:	000f883a 	mov	r7,zero
  83003c:	28001616 	blt	r5,zero,830098 <__divsi3+0x64>
  830040:	200d883a 	mov	r6,r4
  830044:	29001a2e 	bgeu	r5,r4,8300b0 <__divsi3+0x7c>
  830048:	00800804 	movi	r2,32
  83004c:	00c00044 	movi	r3,1
  830050:	00000106 	br	830058 <__divsi3+0x24>
  830054:	10000d26 	beq	r2,zero,83008c <__divsi3+0x58>
  830058:	294b883a 	add	r5,r5,r5
  83005c:	10bfffc4 	addi	r2,r2,-1
  830060:	18c7883a 	add	r3,r3,r3
  830064:	293ffb36 	bltu	r5,r4,830054 <__alt_mem_epcs_flash_controller_0+0xff827054>
  830068:	0005883a 	mov	r2,zero
  83006c:	18000726 	beq	r3,zero,83008c <__divsi3+0x58>
  830070:	0005883a 	mov	r2,zero
  830074:	31400236 	bltu	r6,r5,830080 <__divsi3+0x4c>
  830078:	314dc83a 	sub	r6,r6,r5
  83007c:	10c4b03a 	or	r2,r2,r3
  830080:	1806d07a 	srli	r3,r3,1
  830084:	280ad07a 	srli	r5,r5,1
  830088:	183ffa1e 	bne	r3,zero,830074 <__alt_mem_epcs_flash_controller_0+0xff827074>
  83008c:	38000126 	beq	r7,zero,830094 <__divsi3+0x60>
  830090:	0085c83a 	sub	r2,zero,r2
  830094:	f800283a 	ret
  830098:	014bc83a 	sub	r5,zero,r5
  83009c:	39c0005c 	xori	r7,r7,1
  8300a0:	003fe706 	br	830040 <__alt_mem_epcs_flash_controller_0+0xff827040>
  8300a4:	0109c83a 	sub	r4,zero,r4
  8300a8:	01c00044 	movi	r7,1
  8300ac:	003fe306 	br	83003c <__alt_mem_epcs_flash_controller_0+0xff82703c>
  8300b0:	00c00044 	movi	r3,1
  8300b4:	003fee06 	br	830070 <__alt_mem_epcs_flash_controller_0+0xff827070>

008300b8 <__modsi3>:
  8300b8:	20001716 	blt	r4,zero,830118 <__modsi3+0x60>
  8300bc:	000f883a 	mov	r7,zero
  8300c0:	2005883a 	mov	r2,r4
  8300c4:	28001216 	blt	r5,zero,830110 <__modsi3+0x58>
  8300c8:	2900162e 	bgeu	r5,r4,830124 <__modsi3+0x6c>
  8300cc:	01800804 	movi	r6,32
  8300d0:	00c00044 	movi	r3,1
  8300d4:	00000106 	br	8300dc <__modsi3+0x24>
  8300d8:	30000a26 	beq	r6,zero,830104 <__modsi3+0x4c>
  8300dc:	294b883a 	add	r5,r5,r5
  8300e0:	31bfffc4 	addi	r6,r6,-1
  8300e4:	18c7883a 	add	r3,r3,r3
  8300e8:	293ffb36 	bltu	r5,r4,8300d8 <__alt_mem_epcs_flash_controller_0+0xff8270d8>
  8300ec:	18000526 	beq	r3,zero,830104 <__modsi3+0x4c>
  8300f0:	1806d07a 	srli	r3,r3,1
  8300f4:	11400136 	bltu	r2,r5,8300fc <__modsi3+0x44>
  8300f8:	1145c83a 	sub	r2,r2,r5
  8300fc:	280ad07a 	srli	r5,r5,1
  830100:	183ffb1e 	bne	r3,zero,8300f0 <__alt_mem_epcs_flash_controller_0+0xff8270f0>
  830104:	38000126 	beq	r7,zero,83010c <__modsi3+0x54>
  830108:	0085c83a 	sub	r2,zero,r2
  83010c:	f800283a 	ret
  830110:	014bc83a 	sub	r5,zero,r5
  830114:	003fec06 	br	8300c8 <__alt_mem_epcs_flash_controller_0+0xff8270c8>
  830118:	0109c83a 	sub	r4,zero,r4
  83011c:	01c00044 	movi	r7,1
  830120:	003fe706 	br	8300c0 <__alt_mem_epcs_flash_controller_0+0xff8270c0>
  830124:	00c00044 	movi	r3,1
  830128:	003ff106 	br	8300f0 <__alt_mem_epcs_flash_controller_0+0xff8270f0>

0083012c <__udivsi3>:
  83012c:	200d883a 	mov	r6,r4
  830130:	2900152e 	bgeu	r5,r4,830188 <__udivsi3+0x5c>
  830134:	28001416 	blt	r5,zero,830188 <__udivsi3+0x5c>
  830138:	00800804 	movi	r2,32
  83013c:	00c00044 	movi	r3,1
  830140:	00000206 	br	83014c <__udivsi3+0x20>
  830144:	10000e26 	beq	r2,zero,830180 <__udivsi3+0x54>
  830148:	28000516 	blt	r5,zero,830160 <__udivsi3+0x34>
  83014c:	294b883a 	add	r5,r5,r5
  830150:	10bfffc4 	addi	r2,r2,-1
  830154:	18c7883a 	add	r3,r3,r3
  830158:	293ffa36 	bltu	r5,r4,830144 <__alt_mem_epcs_flash_controller_0+0xff827144>
  83015c:	18000826 	beq	r3,zero,830180 <__udivsi3+0x54>
  830160:	0005883a 	mov	r2,zero
  830164:	31400236 	bltu	r6,r5,830170 <__udivsi3+0x44>
  830168:	314dc83a 	sub	r6,r6,r5
  83016c:	10c4b03a 	or	r2,r2,r3
  830170:	1806d07a 	srli	r3,r3,1
  830174:	280ad07a 	srli	r5,r5,1
  830178:	183ffa1e 	bne	r3,zero,830164 <__alt_mem_epcs_flash_controller_0+0xff827164>
  83017c:	f800283a 	ret
  830180:	0005883a 	mov	r2,zero
  830184:	f800283a 	ret
  830188:	00c00044 	movi	r3,1
  83018c:	003ff406 	br	830160 <__alt_mem_epcs_flash_controller_0+0xff827160>

00830190 <__umodsi3>:
  830190:	2005883a 	mov	r2,r4
  830194:	2900122e 	bgeu	r5,r4,8301e0 <__umodsi3+0x50>
  830198:	28001116 	blt	r5,zero,8301e0 <__umodsi3+0x50>
  83019c:	01800804 	movi	r6,32
  8301a0:	00c00044 	movi	r3,1
  8301a4:	00000206 	br	8301b0 <__umodsi3+0x20>
  8301a8:	30000c26 	beq	r6,zero,8301dc <__umodsi3+0x4c>
  8301ac:	28000516 	blt	r5,zero,8301c4 <__umodsi3+0x34>
  8301b0:	294b883a 	add	r5,r5,r5
  8301b4:	31bfffc4 	addi	r6,r6,-1
  8301b8:	18c7883a 	add	r3,r3,r3
  8301bc:	293ffa36 	bltu	r5,r4,8301a8 <__alt_mem_epcs_flash_controller_0+0xff8271a8>
  8301c0:	18000626 	beq	r3,zero,8301dc <__umodsi3+0x4c>
  8301c4:	1806d07a 	srli	r3,r3,1
  8301c8:	11400136 	bltu	r2,r5,8301d0 <__umodsi3+0x40>
  8301cc:	1145c83a 	sub	r2,r2,r5
  8301d0:	280ad07a 	srli	r5,r5,1
  8301d4:	183ffb1e 	bne	r3,zero,8301c4 <__alt_mem_epcs_flash_controller_0+0xff8271c4>
  8301d8:	f800283a 	ret
  8301dc:	f800283a 	ret
  8301e0:	00c00044 	movi	r3,1
  8301e4:	003ff706 	br	8301c4 <__alt_mem_epcs_flash_controller_0+0xff8271c4>

008301e8 <__mulsi3>:
  8301e8:	0005883a 	mov	r2,zero
  8301ec:	20000726 	beq	r4,zero,83020c <__mulsi3+0x24>
  8301f0:	20c0004c 	andi	r3,r4,1
  8301f4:	2008d07a 	srli	r4,r4,1
  8301f8:	18000126 	beq	r3,zero,830200 <__mulsi3+0x18>
  8301fc:	1145883a 	add	r2,r2,r5
  830200:	294b883a 	add	r5,r5,r5
  830204:	203ffa1e 	bne	r4,zero,8301f0 <__alt_mem_epcs_flash_controller_0+0xff8271f0>
  830208:	f800283a 	ret
  83020c:	f800283a 	ret

00830210 <__addsf3>:
  830210:	defffc04 	addi	sp,sp,-16
  830214:	2004d7fa 	srli	r2,r4,31
  830218:	280cd5fa 	srli	r6,r5,23
  83021c:	dc000015 	stw	r16,0(sp)
  830220:	00c02034 	movhi	r3,128
  830224:	2020d5fa 	srli	r16,r4,23
  830228:	280ed7fa 	srli	r7,r5,31
  83022c:	18ffffc4 	addi	r3,r3,-1
  830230:	dc400115 	stw	r17,4(sp)
  830234:	1908703a 	and	r4,r3,r4
  830238:	194a703a 	and	r5,r3,r5
  83023c:	dfc00315 	stw	ra,12(sp)
  830240:	dc800215 	stw	r18,8(sp)
  830244:	14403fcc 	andi	r17,r2,255
  830248:	84003fcc 	andi	r16,r16,255
  83024c:	200890fa 	slli	r4,r4,3
  830250:	31803fcc 	andi	r6,r6,255
  830254:	280a90fa 	slli	r5,r5,3
  830258:	89c05026 	beq	r17,r7,83039c <__addsf3+0x18c>
  83025c:	8185c83a 	sub	r2,r16,r6
  830260:	00807a0e 	bge	zero,r2,83044c <__addsf3+0x23c>
  830264:	30001e1e 	bne	r6,zero,8302e0 <__addsf3+0xd0>
  830268:	28006d1e 	bne	r5,zero,830420 <__addsf3+0x210>
  83026c:	208001cc 	andi	r2,r4,7
  830270:	10000426 	beq	r2,zero,830284 <__addsf3+0x74>
  830274:	208003cc 	andi	r2,r4,15
  830278:	00c00104 	movi	r3,4
  83027c:	10c00126 	beq	r2,r3,830284 <__addsf3+0x74>
  830280:	20c9883a 	add	r4,r4,r3
  830284:	2081002c 	andhi	r2,r4,1024
  830288:	10003926 	beq	r2,zero,830370 <__addsf3+0x160>
  83028c:	84000044 	addi	r16,r16,1
  830290:	00803fc4 	movi	r2,255
  830294:	80807826 	beq	r16,r2,830478 <__addsf3+0x268>
  830298:	200891ba 	slli	r4,r4,6
  83029c:	8805883a 	mov	r2,r17
  8302a0:	2008d27a 	srli	r4,r4,9
  8302a4:	84003fcc 	andi	r16,r16,255
  8302a8:	800695fa 	slli	r3,r16,23
  8302ac:	10803fcc 	andi	r2,r2,255
  8302b0:	04002034 	movhi	r16,128
  8302b4:	843fffc4 	addi	r16,r16,-1
  8302b8:	100497fa 	slli	r2,r2,31
  8302bc:	2408703a 	and	r4,r4,r16
  8302c0:	20e0b03a 	or	r16,r4,r3
  8302c4:	8084b03a 	or	r2,r16,r2
  8302c8:	dfc00317 	ldw	ra,12(sp)
  8302cc:	dc800217 	ldw	r18,8(sp)
  8302d0:	dc400117 	ldw	r17,4(sp)
  8302d4:	dc000017 	ldw	r16,0(sp)
  8302d8:	dec00404 	addi	sp,sp,16
  8302dc:	f800283a 	ret
  8302e0:	00c03fc4 	movi	r3,255
  8302e4:	80ffe126 	beq	r16,r3,83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  8302e8:	29410034 	orhi	r5,r5,1024
  8302ec:	00c006c4 	movi	r3,27
  8302f0:	18807516 	blt	r3,r2,8304c8 <__addsf3+0x2b8>
  8302f4:	00c00804 	movi	r3,32
  8302f8:	1887c83a 	sub	r3,r3,r2
  8302fc:	28c6983a 	sll	r3,r5,r3
  830300:	288ad83a 	srl	r5,r5,r2
  830304:	1804c03a 	cmpne	r2,r3,zero
  830308:	288ab03a 	or	r5,r5,r2
  83030c:	2149c83a 	sub	r4,r4,r5
  830310:	2081002c 	andhi	r2,r4,1024
  830314:	10001426 	beq	r2,zero,830368 <__addsf3+0x158>
  830318:	04810034 	movhi	r18,1024
  83031c:	94bfffc4 	addi	r18,r18,-1
  830320:	24a4703a 	and	r18,r4,r18
  830324:	9009883a 	mov	r4,r18
  830328:	0831c3c0 	call	831c3c <__clzsi2>
  83032c:	10bffec4 	addi	r2,r2,-5
  830330:	90a4983a 	sll	r18,r18,r2
  830334:	14005416 	blt	r2,r16,830488 <__addsf3+0x278>
  830338:	1405c83a 	sub	r2,r2,r16
  83033c:	11000044 	addi	r4,r2,1
  830340:	00800804 	movi	r2,32
  830344:	1105c83a 	sub	r2,r2,r4
  830348:	9084983a 	sll	r2,r18,r2
  83034c:	9124d83a 	srl	r18,r18,r4
  830350:	0021883a 	mov	r16,zero
  830354:	1008c03a 	cmpne	r4,r2,zero
  830358:	9108b03a 	or	r4,r18,r4
  83035c:	003fc306 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  830360:	1000db26 	beq	r2,zero,8306d0 <__addsf3+0x4c0>
  830364:	1009883a 	mov	r4,r2
  830368:	208001cc 	andi	r2,r4,7
  83036c:	103fc11e 	bne	r2,zero,830274 <__alt_mem_epcs_flash_controller_0+0xff827274>
  830370:	2006d0fa 	srli	r3,r4,3
  830374:	01003fc4 	movi	r4,255
  830378:	8805883a 	mov	r2,r17
  83037c:	8100241e 	bne	r16,r4,830410 <__addsf3+0x200>
  830380:	18006e26 	beq	r3,zero,83053c <__addsf3+0x32c>
  830384:	19001034 	orhi	r4,r3,64
  830388:	00c02034 	movhi	r3,128
  83038c:	18ffffc4 	addi	r3,r3,-1
  830390:	043fffc4 	movi	r16,-1
  830394:	20c8703a 	and	r4,r4,r3
  830398:	003fc206 	br	8302a4 <__alt_mem_epcs_flash_controller_0+0xff8272a4>
  83039c:	8187c83a 	sub	r3,r16,r6
  8303a0:	00c03e0e 	bge	zero,r3,83049c <__addsf3+0x28c>
  8303a4:	30002326 	beq	r6,zero,830434 <__addsf3+0x224>
  8303a8:	01803fc4 	movi	r6,255
  8303ac:	81bfaf26 	beq	r16,r6,83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  8303b0:	29410034 	orhi	r5,r5,1024
  8303b4:	018006c4 	movi	r6,27
  8303b8:	30c07416 	blt	r6,r3,83058c <__addsf3+0x37c>
  8303bc:	01800804 	movi	r6,32
  8303c0:	30cdc83a 	sub	r6,r6,r3
  8303c4:	298c983a 	sll	r6,r5,r6
  8303c8:	28cad83a 	srl	r5,r5,r3
  8303cc:	3006c03a 	cmpne	r3,r6,zero
  8303d0:	28cab03a 	or	r5,r5,r3
  8303d4:	2149883a 	add	r4,r4,r5
  8303d8:	20c1002c 	andhi	r3,r4,1024
  8303dc:	183fe226 	beq	r3,zero,830368 <__alt_mem_epcs_flash_controller_0+0xff827368>
  8303e0:	84000044 	addi	r16,r16,1
  8303e4:	00c03fc4 	movi	r3,255
  8303e8:	80c05426 	beq	r16,r3,83053c <__addsf3+0x32c>
  8303ec:	00bf0034 	movhi	r2,64512
  8303f0:	10bfffc4 	addi	r2,r2,-1
  8303f4:	20c0004c 	andi	r3,r4,1
  8303f8:	2088703a 	and	r4,r4,r2
  8303fc:	2008d07a 	srli	r4,r4,1
  830400:	20c8b03a 	or	r4,r4,r3
  830404:	003f9906 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  830408:	0007883a 	mov	r3,zero
  83040c:	0005883a 	mov	r2,zero
  830410:	01002034 	movhi	r4,128
  830414:	213fffc4 	addi	r4,r4,-1
  830418:	1908703a 	and	r4,r3,r4
  83041c:	003fa106 	br	8302a4 <__alt_mem_epcs_flash_controller_0+0xff8272a4>
  830420:	10bfffc4 	addi	r2,r2,-1
  830424:	103fb926 	beq	r2,zero,83030c <__alt_mem_epcs_flash_controller_0+0xff82730c>
  830428:	00c03fc4 	movi	r3,255
  83042c:	80ffaf1e 	bne	r16,r3,8302ec <__alt_mem_epcs_flash_controller_0+0xff8272ec>
  830430:	003f8e06 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  830434:	283f8d26 	beq	r5,zero,83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  830438:	18ffffc4 	addi	r3,r3,-1
  83043c:	183fe526 	beq	r3,zero,8303d4 <__alt_mem_epcs_flash_controller_0+0xff8273d4>
  830440:	01803fc4 	movi	r6,255
  830444:	81bfdb1e 	bne	r16,r6,8303b4 <__alt_mem_epcs_flash_controller_0+0xff8273b4>
  830448:	003f8806 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  83044c:	1000201e 	bne	r2,zero,8304d0 <__addsf3+0x2c0>
  830450:	80800044 	addi	r2,r16,1
  830454:	10803fcc 	andi	r2,r2,255
  830458:	01800044 	movi	r6,1
  83045c:	3080450e 	bge	r6,r2,830574 <__addsf3+0x364>
  830460:	2165c83a 	sub	r18,r4,r5
  830464:	90c1002c 	andhi	r3,r18,1024
  830468:	18002b26 	beq	r3,zero,830518 <__addsf3+0x308>
  83046c:	2925c83a 	sub	r18,r5,r4
  830470:	3823883a 	mov	r17,r7
  830474:	003fab06 	br	830324 <__alt_mem_epcs_flash_controller_0+0xff827324>
  830478:	8805883a 	mov	r2,r17
  83047c:	043fffc4 	movi	r16,-1
  830480:	0009883a 	mov	r4,zero
  830484:	003f8706 	br	8302a4 <__alt_mem_epcs_flash_controller_0+0xff8272a4>
  830488:	013f0034 	movhi	r4,64512
  83048c:	213fffc4 	addi	r4,r4,-1
  830490:	80a1c83a 	sub	r16,r16,r2
  830494:	9108703a 	and	r4,r18,r4
  830498:	003f7406 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  83049c:	1800411e 	bne	r3,zero,8305a4 <__addsf3+0x394>
  8304a0:	80c00044 	addi	r3,r16,1
  8304a4:	19c03fcc 	andi	r7,r3,255
  8304a8:	01800044 	movi	r6,1
  8304ac:	31c0260e 	bge	r6,r7,830548 <__addsf3+0x338>
  8304b0:	01803fc4 	movi	r6,255
  8304b4:	19802126 	beq	r3,r6,83053c <__addsf3+0x32c>
  8304b8:	2149883a 	add	r4,r4,r5
  8304bc:	2008d07a 	srli	r4,r4,1
  8304c0:	1821883a 	mov	r16,r3
  8304c4:	003f6906 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  8304c8:	01400044 	movi	r5,1
  8304cc:	003f8f06 	br	83030c <__alt_mem_epcs_flash_controller_0+0xff82730c>
  8304d0:	8000151e 	bne	r16,zero,830528 <__addsf3+0x318>
  8304d4:	20002f26 	beq	r4,zero,830594 <__addsf3+0x384>
  8304d8:	0084303a 	nor	r2,zero,r2
  8304dc:	10000a26 	beq	r2,zero,830508 <__addsf3+0x2f8>
  8304e0:	00c03fc4 	movi	r3,255
  8304e4:	30c02b26 	beq	r6,r3,830594 <__addsf3+0x384>
  8304e8:	00c006c4 	movi	r3,27
  8304ec:	18806d16 	blt	r3,r2,8306a4 <__addsf3+0x494>
  8304f0:	00c00804 	movi	r3,32
  8304f4:	1887c83a 	sub	r3,r3,r2
  8304f8:	20c6983a 	sll	r3,r4,r3
  8304fc:	2084d83a 	srl	r2,r4,r2
  830500:	1808c03a 	cmpne	r4,r3,zero
  830504:	1108b03a 	or	r4,r2,r4
  830508:	2909c83a 	sub	r4,r5,r4
  83050c:	3021883a 	mov	r16,r6
  830510:	3823883a 	mov	r17,r7
  830514:	003f7e06 	br	830310 <__alt_mem_epcs_flash_controller_0+0xff827310>
  830518:	903f821e 	bne	r18,zero,830324 <__alt_mem_epcs_flash_controller_0+0xff827324>
  83051c:	0005883a 	mov	r2,zero
  830520:	0021883a 	mov	r16,zero
  830524:	003fba06 	br	830410 <__alt_mem_epcs_flash_controller_0+0xff827410>
  830528:	00c03fc4 	movi	r3,255
  83052c:	30c01926 	beq	r6,r3,830594 <__addsf3+0x384>
  830530:	0085c83a 	sub	r2,zero,r2
  830534:	21010034 	orhi	r4,r4,1024
  830538:	003feb06 	br	8304e8 <__alt_mem_epcs_flash_controller_0+0xff8274e8>
  83053c:	043fffc4 	movi	r16,-1
  830540:	0009883a 	mov	r4,zero
  830544:	003f5706 	br	8302a4 <__alt_mem_epcs_flash_controller_0+0xff8272a4>
  830548:	80004a1e 	bne	r16,zero,830674 <__addsf3+0x464>
  83054c:	20005926 	beq	r4,zero,8306b4 <__addsf3+0x4a4>
  830550:	283f4626 	beq	r5,zero,83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  830554:	2149883a 	add	r4,r4,r5
  830558:	2081002c 	andhi	r2,r4,1024
  83055c:	103f8226 	beq	r2,zero,830368 <__alt_mem_epcs_flash_controller_0+0xff827368>
  830560:	00bf0034 	movhi	r2,64512
  830564:	10bfffc4 	addi	r2,r2,-1
  830568:	3021883a 	mov	r16,r6
  83056c:	2088703a 	and	r4,r4,r2
  830570:	003f3e06 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  830574:	8000121e 	bne	r16,zero,8305c0 <__addsf3+0x3b0>
  830578:	2000261e 	bne	r4,zero,830614 <__addsf3+0x404>
  83057c:	283fa226 	beq	r5,zero,830408 <__alt_mem_epcs_flash_controller_0+0xff827408>
  830580:	2809883a 	mov	r4,r5
  830584:	3823883a 	mov	r17,r7
  830588:	003f3806 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  83058c:	01400044 	movi	r5,1
  830590:	003f9006 	br	8303d4 <__alt_mem_epcs_flash_controller_0+0xff8273d4>
  830594:	2809883a 	mov	r4,r5
  830598:	3021883a 	mov	r16,r6
  83059c:	3823883a 	mov	r17,r7
  8305a0:	003f3206 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  8305a4:	80000c1e 	bne	r16,zero,8305d8 <__addsf3+0x3c8>
  8305a8:	20002f26 	beq	r4,zero,830668 <__addsf3+0x458>
  8305ac:	00c6303a 	nor	r3,zero,r3
  8305b0:	18002b1e 	bne	r3,zero,830660 <__addsf3+0x450>
  8305b4:	2149883a 	add	r4,r4,r5
  8305b8:	3021883a 	mov	r16,r6
  8305bc:	003f8606 	br	8303d8 <__alt_mem_epcs_flash_controller_0+0xff8273d8>
  8305c0:	20001b1e 	bne	r4,zero,830630 <__addsf3+0x420>
  8305c4:	28003926 	beq	r5,zero,8306ac <__addsf3+0x49c>
  8305c8:	2809883a 	mov	r4,r5
  8305cc:	3823883a 	mov	r17,r7
  8305d0:	04003fc4 	movi	r16,255
  8305d4:	003f2506 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  8305d8:	01c03fc4 	movi	r7,255
  8305dc:	31c02226 	beq	r6,r7,830668 <__addsf3+0x458>
  8305e0:	00c7c83a 	sub	r3,zero,r3
  8305e4:	21010034 	orhi	r4,r4,1024
  8305e8:	01c006c4 	movi	r7,27
  8305ec:	38c03616 	blt	r7,r3,8306c8 <__addsf3+0x4b8>
  8305f0:	01c00804 	movi	r7,32
  8305f4:	38cfc83a 	sub	r7,r7,r3
  8305f8:	21ce983a 	sll	r7,r4,r7
  8305fc:	20c6d83a 	srl	r3,r4,r3
  830600:	3808c03a 	cmpne	r4,r7,zero
  830604:	1906b03a 	or	r3,r3,r4
  830608:	1949883a 	add	r4,r3,r5
  83060c:	3021883a 	mov	r16,r6
  830610:	003f7106 	br	8303d8 <__alt_mem_epcs_flash_controller_0+0xff8273d8>
  830614:	283f1526 	beq	r5,zero,83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  830618:	2145c83a 	sub	r2,r4,r5
  83061c:	10c1002c 	andhi	r3,r2,1024
  830620:	183f4f26 	beq	r3,zero,830360 <__alt_mem_epcs_flash_controller_0+0xff827360>
  830624:	2909c83a 	sub	r4,r5,r4
  830628:	3823883a 	mov	r17,r7
  83062c:	003f0f06 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  830630:	28001a26 	beq	r5,zero,83069c <__addsf3+0x48c>
  830634:	2008d0fa 	srli	r4,r4,3
  830638:	2080102c 	andhi	r2,r4,64
  83063c:	10000526 	beq	r2,zero,830654 <__addsf3+0x444>
  830640:	280ad0fa 	srli	r5,r5,3
  830644:	2880102c 	andhi	r2,r5,64
  830648:	1000021e 	bne	r2,zero,830654 <__addsf3+0x444>
  83064c:	2809883a 	mov	r4,r5
  830650:	3823883a 	mov	r17,r7
  830654:	200890fa 	slli	r4,r4,3
  830658:	04003fc4 	movi	r16,255
  83065c:	003f0306 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  830660:	01c03fc4 	movi	r7,255
  830664:	31ffe01e 	bne	r6,r7,8305e8 <__alt_mem_epcs_flash_controller_0+0xff8275e8>
  830668:	2809883a 	mov	r4,r5
  83066c:	3021883a 	mov	r16,r6
  830670:	003efe06 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  830674:	20001126 	beq	r4,zero,8306bc <__addsf3+0x4ac>
  830678:	28000826 	beq	r5,zero,83069c <__addsf3+0x48c>
  83067c:	2008d0fa 	srli	r4,r4,3
  830680:	2080102c 	andhi	r2,r4,64
  830684:	103ff326 	beq	r2,zero,830654 <__alt_mem_epcs_flash_controller_0+0xff827654>
  830688:	280ad0fa 	srli	r5,r5,3
  83068c:	2880102c 	andhi	r2,r5,64
  830690:	103ff01e 	bne	r2,zero,830654 <__alt_mem_epcs_flash_controller_0+0xff827654>
  830694:	2809883a 	mov	r4,r5
  830698:	003fee06 	br	830654 <__alt_mem_epcs_flash_controller_0+0xff827654>
  83069c:	04003fc4 	movi	r16,255
  8306a0:	003ef206 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  8306a4:	01000044 	movi	r4,1
  8306a8:	003f9706 	br	830508 <__alt_mem_epcs_flash_controller_0+0xff827508>
  8306ac:	0005883a 	mov	r2,zero
  8306b0:	003f3406 	br	830384 <__alt_mem_epcs_flash_controller_0+0xff827384>
  8306b4:	2809883a 	mov	r4,r5
  8306b8:	003eec06 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  8306bc:	2809883a 	mov	r4,r5
  8306c0:	04003fc4 	movi	r16,255
  8306c4:	003ee906 	br	83026c <__alt_mem_epcs_flash_controller_0+0xff82726c>
  8306c8:	00c00044 	movi	r3,1
  8306cc:	003fce06 	br	830608 <__alt_mem_epcs_flash_controller_0+0xff827608>
  8306d0:	0005883a 	mov	r2,zero
  8306d4:	003f4e06 	br	830410 <__alt_mem_epcs_flash_controller_0+0xff827410>

008306d8 <__mulsf3>:
  8306d8:	defff504 	addi	sp,sp,-44
  8306dc:	dc000115 	stw	r16,4(sp)
  8306e0:	2020d5fa 	srli	r16,r4,23
  8306e4:	dd400615 	stw	r21,24(sp)
  8306e8:	202ad7fa 	srli	r21,r4,31
  8306ec:	dc800315 	stw	r18,12(sp)
  8306f0:	04802034 	movhi	r18,128
  8306f4:	df000915 	stw	fp,36(sp)
  8306f8:	dd000515 	stw	r20,20(sp)
  8306fc:	94bfffc4 	addi	r18,r18,-1
  830700:	dfc00a15 	stw	ra,40(sp)
  830704:	ddc00815 	stw	r23,32(sp)
  830708:	dd800715 	stw	r22,28(sp)
  83070c:	dcc00415 	stw	r19,16(sp)
  830710:	dc400215 	stw	r17,8(sp)
  830714:	84003fcc 	andi	r16,r16,255
  830718:	9124703a 	and	r18,r18,r4
  83071c:	a829883a 	mov	r20,r21
  830720:	af003fcc 	andi	fp,r21,255
  830724:	80005426 	beq	r16,zero,830878 <__mulsf3+0x1a0>
  830728:	00803fc4 	movi	r2,255
  83072c:	80802f26 	beq	r16,r2,8307ec <__mulsf3+0x114>
  830730:	91002034 	orhi	r4,r18,128
  830734:	202490fa 	slli	r18,r4,3
  830738:	843fe044 	addi	r16,r16,-127
  83073c:	0023883a 	mov	r17,zero
  830740:	002f883a 	mov	r23,zero
  830744:	2804d5fa 	srli	r2,r5,23
  830748:	282cd7fa 	srli	r22,r5,31
  83074c:	01002034 	movhi	r4,128
  830750:	213fffc4 	addi	r4,r4,-1
  830754:	10803fcc 	andi	r2,r2,255
  830758:	2166703a 	and	r19,r4,r5
  83075c:	b1803fcc 	andi	r6,r22,255
  830760:	10004c26 	beq	r2,zero,830894 <__mulsf3+0x1bc>
  830764:	00c03fc4 	movi	r3,255
  830768:	10c04726 	beq	r2,r3,830888 <__mulsf3+0x1b0>
  83076c:	99002034 	orhi	r4,r19,128
  830770:	202690fa 	slli	r19,r4,3
  830774:	10bfe044 	addi	r2,r2,-127
  830778:	0007883a 	mov	r3,zero
  83077c:	80a1883a 	add	r16,r16,r2
  830780:	010003c4 	movi	r4,15
  830784:	1c44b03a 	or	r2,r3,r17
  830788:	b56af03a 	xor	r21,r22,r21
  83078c:	81c00044 	addi	r7,r16,1
  830790:	20806b36 	bltu	r4,r2,830940 <__mulsf3+0x268>
  830794:	100490ba 	slli	r2,r2,2
  830798:	010020f4 	movhi	r4,131
  83079c:	2101eb04 	addi	r4,r4,1964
  8307a0:	1105883a 	add	r2,r2,r4
  8307a4:	10800017 	ldw	r2,0(r2)
  8307a8:	1000683a 	jmp	r2
  8307ac:	00830940 	call	83094 <OSCtxSw_SWITCH_PC+0x83054>
  8307b0:	00830800 	call	83080 <OSCtxSw_SWITCH_PC+0x83040>
  8307b4:	00830800 	call	83080 <OSCtxSw_SWITCH_PC+0x83040>
  8307b8:	008307fc 	xorhi	r2,zero,3103
  8307bc:	00830924 	muli	r2,zero,3108
  8307c0:	00830924 	muli	r2,zero,3108
  8307c4:	00830910 	cmplti	r2,zero,3108
  8307c8:	008307fc 	xorhi	r2,zero,3103
  8307cc:	00830924 	muli	r2,zero,3108
  8307d0:	00830910 	cmplti	r2,zero,3108
  8307d4:	00830924 	muli	r2,zero,3108
  8307d8:	008307fc 	xorhi	r2,zero,3103
  8307dc:	00830930 	cmpltui	r2,zero,3108
  8307e0:	00830930 	cmpltui	r2,zero,3108
  8307e4:	00830930 	cmpltui	r2,zero,3108
  8307e8:	00830a40 	call	830a4 <OSCtxSw_SWITCH_PC+0x83064>
  8307ec:	90003b1e 	bne	r18,zero,8308dc <__mulsf3+0x204>
  8307f0:	04400204 	movi	r17,8
  8307f4:	05c00084 	movi	r23,2
  8307f8:	003fd206 	br	830744 <__alt_mem_epcs_flash_controller_0+0xff827744>
  8307fc:	302b883a 	mov	r21,r6
  830800:	00800084 	movi	r2,2
  830804:	18802626 	beq	r3,r2,8308a0 <__mulsf3+0x1c8>
  830808:	008000c4 	movi	r2,3
  83080c:	1880b826 	beq	r3,r2,830af0 <__mulsf3+0x418>
  830810:	00800044 	movi	r2,1
  830814:	1880af1e 	bne	r3,r2,830ad4 <__mulsf3+0x3fc>
  830818:	a829883a 	mov	r20,r21
  83081c:	0007883a 	mov	r3,zero
  830820:	0009883a 	mov	r4,zero
  830824:	18803fcc 	andi	r2,r3,255
  830828:	100695fa 	slli	r3,r2,23
  83082c:	a0803fcc 	andi	r2,r20,255
  830830:	100a97fa 	slli	r5,r2,31
  830834:	00802034 	movhi	r2,128
  830838:	10bfffc4 	addi	r2,r2,-1
  83083c:	2084703a 	and	r2,r4,r2
  830840:	10c4b03a 	or	r2,r2,r3
  830844:	1144b03a 	or	r2,r2,r5
  830848:	dfc00a17 	ldw	ra,40(sp)
  83084c:	df000917 	ldw	fp,36(sp)
  830850:	ddc00817 	ldw	r23,32(sp)
  830854:	dd800717 	ldw	r22,28(sp)
  830858:	dd400617 	ldw	r21,24(sp)
  83085c:	dd000517 	ldw	r20,20(sp)
  830860:	dcc00417 	ldw	r19,16(sp)
  830864:	dc800317 	ldw	r18,12(sp)
  830868:	dc400217 	ldw	r17,8(sp)
  83086c:	dc000117 	ldw	r16,4(sp)
  830870:	dec00b04 	addi	sp,sp,44
  830874:	f800283a 	ret
  830878:	90000d1e 	bne	r18,zero,8308b0 <__mulsf3+0x1d8>
  83087c:	04400104 	movi	r17,4
  830880:	05c00044 	movi	r23,1
  830884:	003faf06 	br	830744 <__alt_mem_epcs_flash_controller_0+0xff827744>
  830888:	9806c03a 	cmpne	r3,r19,zero
  83088c:	18c00084 	addi	r3,r3,2
  830890:	003fba06 	br	83077c <__alt_mem_epcs_flash_controller_0+0xff82777c>
  830894:	9800141e 	bne	r19,zero,8308e8 <__mulsf3+0x210>
  830898:	00c00044 	movi	r3,1
  83089c:	003fb706 	br	83077c <__alt_mem_epcs_flash_controller_0+0xff82777c>
  8308a0:	a829883a 	mov	r20,r21
  8308a4:	00ffffc4 	movi	r3,-1
  8308a8:	0009883a 	mov	r4,zero
  8308ac:	003fdd06 	br	830824 <__alt_mem_epcs_flash_controller_0+0xff827824>
  8308b0:	9009883a 	mov	r4,r18
  8308b4:	d9400015 	stw	r5,0(sp)
  8308b8:	0831c3c0 	call	831c3c <__clzsi2>
  8308bc:	10fffec4 	addi	r3,r2,-5
  8308c0:	10801d84 	addi	r2,r2,118
  8308c4:	90e4983a 	sll	r18,r18,r3
  8308c8:	00a1c83a 	sub	r16,zero,r2
  8308cc:	0023883a 	mov	r17,zero
  8308d0:	002f883a 	mov	r23,zero
  8308d4:	d9400017 	ldw	r5,0(sp)
  8308d8:	003f9a06 	br	830744 <__alt_mem_epcs_flash_controller_0+0xff827744>
  8308dc:	04400304 	movi	r17,12
  8308e0:	05c000c4 	movi	r23,3
  8308e4:	003f9706 	br	830744 <__alt_mem_epcs_flash_controller_0+0xff827744>
  8308e8:	9809883a 	mov	r4,r19
  8308ec:	d9800015 	stw	r6,0(sp)
  8308f0:	0831c3c0 	call	831c3c <__clzsi2>
  8308f4:	10fffec4 	addi	r3,r2,-5
  8308f8:	10801d84 	addi	r2,r2,118
  8308fc:	98e6983a 	sll	r19,r19,r3
  830900:	0085c83a 	sub	r2,zero,r2
  830904:	0007883a 	mov	r3,zero
  830908:	d9800017 	ldw	r6,0(sp)
  83090c:	003f9b06 	br	83077c <__alt_mem_epcs_flash_controller_0+0xff82777c>
  830910:	01002034 	movhi	r4,128
  830914:	0029883a 	mov	r20,zero
  830918:	213fffc4 	addi	r4,r4,-1
  83091c:	00ffffc4 	movi	r3,-1
  830920:	003fc006 	br	830824 <__alt_mem_epcs_flash_controller_0+0xff827824>
  830924:	9027883a 	mov	r19,r18
  830928:	b807883a 	mov	r3,r23
  83092c:	003fb406 	br	830800 <__alt_mem_epcs_flash_controller_0+0xff827800>
  830930:	9027883a 	mov	r19,r18
  830934:	e02b883a 	mov	r21,fp
  830938:	b807883a 	mov	r3,r23
  83093c:	003fb006 	br	830800 <__alt_mem_epcs_flash_controller_0+0xff827800>
  830940:	9028d43a 	srli	r20,r18,16
  830944:	982cd43a 	srli	r22,r19,16
  830948:	94bfffcc 	andi	r18,r18,65535
  83094c:	9cffffcc 	andi	r19,r19,65535
  830950:	980b883a 	mov	r5,r19
  830954:	9009883a 	mov	r4,r18
  830958:	d9c00015 	stw	r7,0(sp)
  83095c:	08301e80 	call	8301e8 <__mulsi3>
  830960:	a00b883a 	mov	r5,r20
  830964:	9809883a 	mov	r4,r19
  830968:	1023883a 	mov	r17,r2
  83096c:	08301e80 	call	8301e8 <__mulsi3>
  830970:	a009883a 	mov	r4,r20
  830974:	b00b883a 	mov	r5,r22
  830978:	1027883a 	mov	r19,r2
  83097c:	08301e80 	call	8301e8 <__mulsi3>
  830980:	b00b883a 	mov	r5,r22
  830984:	9009883a 	mov	r4,r18
  830988:	1029883a 	mov	r20,r2
  83098c:	08301e80 	call	8301e8 <__mulsi3>
  830990:	8806d43a 	srli	r3,r17,16
  830994:	14c5883a 	add	r2,r2,r19
  830998:	d9c00017 	ldw	r7,0(sp)
  83099c:	1885883a 	add	r2,r3,r2
  8309a0:	14c0022e 	bgeu	r2,r19,8309ac <__mulsf3+0x2d4>
  8309a4:	00c00074 	movhi	r3,1
  8309a8:	a0e9883a 	add	r20,r20,r3
  8309ac:	1026943a 	slli	r19,r2,16
  8309b0:	8c7fffcc 	andi	r17,r17,65535
  8309b4:	1004d43a 	srli	r2,r2,16
  8309b8:	9c63883a 	add	r17,r19,r17
  8309bc:	882691ba 	slli	r19,r17,6
  8309c0:	1505883a 	add	r2,r2,r20
  8309c4:	8822d6ba 	srli	r17,r17,26
  8309c8:	100891ba 	slli	r4,r2,6
  8309cc:	9826c03a 	cmpne	r19,r19,zero
  8309d0:	9c62b03a 	or	r17,r19,r17
  8309d4:	8926b03a 	or	r19,r17,r4
  8309d8:	9882002c 	andhi	r2,r19,2048
  8309dc:	10000426 	beq	r2,zero,8309f0 <__mulsf3+0x318>
  8309e0:	9804d07a 	srli	r2,r19,1
  8309e4:	9900004c 	andi	r4,r19,1
  8309e8:	3821883a 	mov	r16,r7
  8309ec:	1126b03a 	or	r19,r2,r4
  8309f0:	80c01fc4 	addi	r3,r16,127
  8309f4:	00c0210e 	bge	zero,r3,830a7c <__mulsf3+0x3a4>
  8309f8:	988001cc 	andi	r2,r19,7
  8309fc:	10000426 	beq	r2,zero,830a10 <__mulsf3+0x338>
  830a00:	988003cc 	andi	r2,r19,15
  830a04:	01000104 	movi	r4,4
  830a08:	11000126 	beq	r2,r4,830a10 <__mulsf3+0x338>
  830a0c:	9927883a 	add	r19,r19,r4
  830a10:	9882002c 	andhi	r2,r19,2048
  830a14:	10000426 	beq	r2,zero,830a28 <__mulsf3+0x350>
  830a18:	00be0034 	movhi	r2,63488
  830a1c:	10bfffc4 	addi	r2,r2,-1
  830a20:	80c02004 	addi	r3,r16,128
  830a24:	98a6703a 	and	r19,r19,r2
  830a28:	00803f84 	movi	r2,254
  830a2c:	10ff9c16 	blt	r2,r3,8308a0 <__alt_mem_epcs_flash_controller_0+0xff8278a0>
  830a30:	980891ba 	slli	r4,r19,6
  830a34:	a829883a 	mov	r20,r21
  830a38:	2008d27a 	srli	r4,r4,9
  830a3c:	003f7906 	br	830824 <__alt_mem_epcs_flash_controller_0+0xff827824>
  830a40:	9080102c 	andhi	r2,r18,64
  830a44:	10000826 	beq	r2,zero,830a68 <__mulsf3+0x390>
  830a48:	9880102c 	andhi	r2,r19,64
  830a4c:	1000061e 	bne	r2,zero,830a68 <__mulsf3+0x390>
  830a50:	00802034 	movhi	r2,128
  830a54:	99001034 	orhi	r4,r19,64
  830a58:	10bfffc4 	addi	r2,r2,-1
  830a5c:	b029883a 	mov	r20,r22
  830a60:	2088703a 	and	r4,r4,r2
  830a64:	003fad06 	br	83091c <__alt_mem_epcs_flash_controller_0+0xff82791c>
  830a68:	00802034 	movhi	r2,128
  830a6c:	91001034 	orhi	r4,r18,64
  830a70:	10bfffc4 	addi	r2,r2,-1
  830a74:	2088703a 	and	r4,r4,r2
  830a78:	003fa806 	br	83091c <__alt_mem_epcs_flash_controller_0+0xff82791c>
  830a7c:	00800044 	movi	r2,1
  830a80:	10c7c83a 	sub	r3,r2,r3
  830a84:	008006c4 	movi	r2,27
  830a88:	10ff6316 	blt	r2,r3,830818 <__alt_mem_epcs_flash_controller_0+0xff827818>
  830a8c:	00800804 	movi	r2,32
  830a90:	10c5c83a 	sub	r2,r2,r3
  830a94:	9884983a 	sll	r2,r19,r2
  830a98:	98c6d83a 	srl	r3,r19,r3
  830a9c:	1004c03a 	cmpne	r2,r2,zero
  830aa0:	1884b03a 	or	r2,r3,r2
  830aa4:	10c001cc 	andi	r3,r2,7
  830aa8:	18000426 	beq	r3,zero,830abc <__mulsf3+0x3e4>
  830aac:	10c003cc 	andi	r3,r2,15
  830ab0:	01000104 	movi	r4,4
  830ab4:	19000126 	beq	r3,r4,830abc <__mulsf3+0x3e4>
  830ab8:	1105883a 	add	r2,r2,r4
  830abc:	10c1002c 	andhi	r3,r2,1024
  830ac0:	18000626 	beq	r3,zero,830adc <__mulsf3+0x404>
  830ac4:	a829883a 	mov	r20,r21
  830ac8:	00c00044 	movi	r3,1
  830acc:	0009883a 	mov	r4,zero
  830ad0:	003f5406 	br	830824 <__alt_mem_epcs_flash_controller_0+0xff827824>
  830ad4:	3821883a 	mov	r16,r7
  830ad8:	003fc506 	br	8309f0 <__alt_mem_epcs_flash_controller_0+0xff8279f0>
  830adc:	100491ba 	slli	r2,r2,6
  830ae0:	a829883a 	mov	r20,r21
  830ae4:	0007883a 	mov	r3,zero
  830ae8:	1008d27a 	srli	r4,r2,9
  830aec:	003f4d06 	br	830824 <__alt_mem_epcs_flash_controller_0+0xff827824>
  830af0:	00802034 	movhi	r2,128
  830af4:	99001034 	orhi	r4,r19,64
  830af8:	10bfffc4 	addi	r2,r2,-1
  830afc:	a829883a 	mov	r20,r21
  830b00:	2088703a 	and	r4,r4,r2
  830b04:	003f8506 	br	83091c <__alt_mem_epcs_flash_controller_0+0xff82791c>

00830b08 <__subsf3>:
  830b08:	defffc04 	addi	sp,sp,-16
  830b0c:	280cd5fa 	srli	r6,r5,23
  830b10:	dc000015 	stw	r16,0(sp)
  830b14:	01c02034 	movhi	r7,128
  830b18:	2020d5fa 	srli	r16,r4,23
  830b1c:	39ffffc4 	addi	r7,r7,-1
  830b20:	3906703a 	and	r3,r7,r4
  830b24:	dc400115 	stw	r17,4(sp)
  830b28:	394e703a 	and	r7,r7,r5
  830b2c:	2022d7fa 	srli	r17,r4,31
  830b30:	dfc00315 	stw	ra,12(sp)
  830b34:	dc800215 	stw	r18,8(sp)
  830b38:	31803fcc 	andi	r6,r6,255
  830b3c:	01003fc4 	movi	r4,255
  830b40:	84003fcc 	andi	r16,r16,255
  830b44:	180690fa 	slli	r3,r3,3
  830b48:	2804d7fa 	srli	r2,r5,31
  830b4c:	380e90fa 	slli	r7,r7,3
  830b50:	31006d26 	beq	r6,r4,830d08 <__subsf3+0x200>
  830b54:	1080005c 	xori	r2,r2,1
  830b58:	8189c83a 	sub	r4,r16,r6
  830b5c:	14404f26 	beq	r2,r17,830c9c <__subsf3+0x194>
  830b60:	0100770e 	bge	zero,r4,830d40 <__subsf3+0x238>
  830b64:	30001e1e 	bne	r6,zero,830be0 <__subsf3+0xd8>
  830b68:	38006a1e 	bne	r7,zero,830d14 <__subsf3+0x20c>
  830b6c:	188001cc 	andi	r2,r3,7
  830b70:	10000426 	beq	r2,zero,830b84 <__subsf3+0x7c>
  830b74:	188003cc 	andi	r2,r3,15
  830b78:	01000104 	movi	r4,4
  830b7c:	11000126 	beq	r2,r4,830b84 <__subsf3+0x7c>
  830b80:	1907883a 	add	r3,r3,r4
  830b84:	1881002c 	andhi	r2,r3,1024
  830b88:	10003926 	beq	r2,zero,830c70 <__subsf3+0x168>
  830b8c:	84000044 	addi	r16,r16,1
  830b90:	00803fc4 	movi	r2,255
  830b94:	80807526 	beq	r16,r2,830d6c <__subsf3+0x264>
  830b98:	180691ba 	slli	r3,r3,6
  830b9c:	8880004c 	andi	r2,r17,1
  830ba0:	180ad27a 	srli	r5,r3,9
  830ba4:	84003fcc 	andi	r16,r16,255
  830ba8:	800695fa 	slli	r3,r16,23
  830bac:	10803fcc 	andi	r2,r2,255
  830bb0:	01002034 	movhi	r4,128
  830bb4:	213fffc4 	addi	r4,r4,-1
  830bb8:	100497fa 	slli	r2,r2,31
  830bbc:	2920703a 	and	r16,r5,r4
  830bc0:	80e0b03a 	or	r16,r16,r3
  830bc4:	8084b03a 	or	r2,r16,r2
  830bc8:	dfc00317 	ldw	ra,12(sp)
  830bcc:	dc800217 	ldw	r18,8(sp)
  830bd0:	dc400117 	ldw	r17,4(sp)
  830bd4:	dc000017 	ldw	r16,0(sp)
  830bd8:	dec00404 	addi	sp,sp,16
  830bdc:	f800283a 	ret
  830be0:	00803fc4 	movi	r2,255
  830be4:	80bfe126 	beq	r16,r2,830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830be8:	39c10034 	orhi	r7,r7,1024
  830bec:	008006c4 	movi	r2,27
  830bf0:	11007416 	blt	r2,r4,830dc4 <__subsf3+0x2bc>
  830bf4:	00800804 	movi	r2,32
  830bf8:	1105c83a 	sub	r2,r2,r4
  830bfc:	3884983a 	sll	r2,r7,r2
  830c00:	390ed83a 	srl	r7,r7,r4
  830c04:	1008c03a 	cmpne	r4,r2,zero
  830c08:	390eb03a 	or	r7,r7,r4
  830c0c:	19c7c83a 	sub	r3,r3,r7
  830c10:	1881002c 	andhi	r2,r3,1024
  830c14:	10001426 	beq	r2,zero,830c68 <__subsf3+0x160>
  830c18:	04810034 	movhi	r18,1024
  830c1c:	94bfffc4 	addi	r18,r18,-1
  830c20:	1ca4703a 	and	r18,r3,r18
  830c24:	9009883a 	mov	r4,r18
  830c28:	0831c3c0 	call	831c3c <__clzsi2>
  830c2c:	10bffec4 	addi	r2,r2,-5
  830c30:	90a4983a 	sll	r18,r18,r2
  830c34:	14005116 	blt	r2,r16,830d7c <__subsf3+0x274>
  830c38:	1405c83a 	sub	r2,r2,r16
  830c3c:	10c00044 	addi	r3,r2,1
  830c40:	00800804 	movi	r2,32
  830c44:	10c5c83a 	sub	r2,r2,r3
  830c48:	9084983a 	sll	r2,r18,r2
  830c4c:	90e4d83a 	srl	r18,r18,r3
  830c50:	0021883a 	mov	r16,zero
  830c54:	1006c03a 	cmpne	r3,r2,zero
  830c58:	90c6b03a 	or	r3,r18,r3
  830c5c:	003fc306 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830c60:	2000e026 	beq	r4,zero,830fe4 <__subsf3+0x4dc>
  830c64:	2007883a 	mov	r3,r4
  830c68:	188001cc 	andi	r2,r3,7
  830c6c:	103fc11e 	bne	r2,zero,830b74 <__alt_mem_epcs_flash_controller_0+0xff827b74>
  830c70:	180ad0fa 	srli	r5,r3,3
  830c74:	00c03fc4 	movi	r3,255
  830c78:	8880004c 	andi	r2,r17,1
  830c7c:	80c0031e 	bne	r16,r3,830c8c <__subsf3+0x184>
  830c80:	28006d26 	beq	r5,zero,830e38 <__subsf3+0x330>
  830c84:	29401034 	orhi	r5,r5,64
  830c88:	043fffc4 	movi	r16,-1
  830c8c:	00c02034 	movhi	r3,128
  830c90:	18ffffc4 	addi	r3,r3,-1
  830c94:	28ca703a 	and	r5,r5,r3
  830c98:	003fc206 	br	830ba4 <__alt_mem_epcs_flash_controller_0+0xff827ba4>
  830c9c:	01003c0e 	bge	zero,r4,830d90 <__subsf3+0x288>
  830ca0:	30002126 	beq	r6,zero,830d28 <__subsf3+0x220>
  830ca4:	01403fc4 	movi	r5,255
  830ca8:	817fb026 	beq	r16,r5,830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830cac:	39c10034 	orhi	r7,r7,1024
  830cb0:	014006c4 	movi	r5,27
  830cb4:	29007416 	blt	r5,r4,830e88 <__subsf3+0x380>
  830cb8:	01400804 	movi	r5,32
  830cbc:	290bc83a 	sub	r5,r5,r4
  830cc0:	394a983a 	sll	r5,r7,r5
  830cc4:	390ed83a 	srl	r7,r7,r4
  830cc8:	2808c03a 	cmpne	r4,r5,zero
  830ccc:	390eb03a 	or	r7,r7,r4
  830cd0:	19c7883a 	add	r3,r3,r7
  830cd4:	1901002c 	andhi	r4,r3,1024
  830cd8:	20003826 	beq	r4,zero,830dbc <__subsf3+0x2b4>
  830cdc:	84000044 	addi	r16,r16,1
  830ce0:	01003fc4 	movi	r4,255
  830ce4:	81005426 	beq	r16,r4,830e38 <__subsf3+0x330>
  830ce8:	1023883a 	mov	r17,r2
  830cec:	00bf0034 	movhi	r2,64512
  830cf0:	10bfffc4 	addi	r2,r2,-1
  830cf4:	1900004c 	andi	r4,r3,1
  830cf8:	1886703a 	and	r3,r3,r2
  830cfc:	1806d07a 	srli	r3,r3,1
  830d00:	1906b03a 	or	r3,r3,r4
  830d04:	003f9906 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830d08:	383f9226 	beq	r7,zero,830b54 <__alt_mem_epcs_flash_controller_0+0xff827b54>
  830d0c:	10803fcc 	andi	r2,r2,255
  830d10:	003f9106 	br	830b58 <__alt_mem_epcs_flash_controller_0+0xff827b58>
  830d14:	213fffc4 	addi	r4,r4,-1
  830d18:	203fbc26 	beq	r4,zero,830c0c <__alt_mem_epcs_flash_controller_0+0xff827c0c>
  830d1c:	00803fc4 	movi	r2,255
  830d20:	80bfb21e 	bne	r16,r2,830bec <__alt_mem_epcs_flash_controller_0+0xff827bec>
  830d24:	003f9106 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830d28:	383f9026 	beq	r7,zero,830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830d2c:	213fffc4 	addi	r4,r4,-1
  830d30:	203fe726 	beq	r4,zero,830cd0 <__alt_mem_epcs_flash_controller_0+0xff827cd0>
  830d34:	01403fc4 	movi	r5,255
  830d38:	817fdd1e 	bne	r16,r5,830cb0 <__alt_mem_epcs_flash_controller_0+0xff827cb0>
  830d3c:	003f8b06 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830d40:	2000221e 	bne	r4,zero,830dcc <__subsf3+0x2c4>
  830d44:	81000044 	addi	r4,r16,1
  830d48:	21003fcc 	andi	r4,r4,255
  830d4c:	01400044 	movi	r5,1
  830d50:	2900470e 	bge	r5,r4,830e70 <__subsf3+0x368>
  830d54:	19e5c83a 	sub	r18,r3,r7
  830d58:	9141002c 	andhi	r5,r18,1024
  830d5c:	28002d26 	beq	r5,zero,830e14 <__subsf3+0x30c>
  830d60:	38e5c83a 	sub	r18,r7,r3
  830d64:	1023883a 	mov	r17,r2
  830d68:	003fae06 	br	830c24 <__alt_mem_epcs_flash_controller_0+0xff827c24>
  830d6c:	8880004c 	andi	r2,r17,1
  830d70:	043fffc4 	movi	r16,-1
  830d74:	000b883a 	mov	r5,zero
  830d78:	003f8a06 	br	830ba4 <__alt_mem_epcs_flash_controller_0+0xff827ba4>
  830d7c:	00ff0034 	movhi	r3,64512
  830d80:	18ffffc4 	addi	r3,r3,-1
  830d84:	80a1c83a 	sub	r16,r16,r2
  830d88:	90c6703a 	and	r3,r18,r3
  830d8c:	003f7706 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830d90:	2000431e 	bne	r4,zero,830ea0 <__subsf3+0x398>
  830d94:	81000044 	addi	r4,r16,1
  830d98:	21803fcc 	andi	r6,r4,255
  830d9c:	01400044 	movi	r5,1
  830da0:	2980280e 	bge	r5,r6,830e44 <__subsf3+0x33c>
  830da4:	01403fc4 	movi	r5,255
  830da8:	21402326 	beq	r4,r5,830e38 <__subsf3+0x330>
  830dac:	19c7883a 	add	r3,r3,r7
  830db0:	1806d07a 	srli	r3,r3,1
  830db4:	2021883a 	mov	r16,r4
  830db8:	003f6c06 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830dbc:	1023883a 	mov	r17,r2
  830dc0:	003fa906 	br	830c68 <__alt_mem_epcs_flash_controller_0+0xff827c68>
  830dc4:	01c00044 	movi	r7,1
  830dc8:	003f9006 	br	830c0c <__alt_mem_epcs_flash_controller_0+0xff827c0c>
  830dcc:	8000151e 	bne	r16,zero,830e24 <__subsf3+0x31c>
  830dd0:	18002f26 	beq	r3,zero,830e90 <__subsf3+0x388>
  830dd4:	0108303a 	nor	r4,zero,r4
  830dd8:	20000a26 	beq	r4,zero,830e04 <__subsf3+0x2fc>
  830ddc:	01403fc4 	movi	r5,255
  830de0:	31402b26 	beq	r6,r5,830e90 <__subsf3+0x388>
  830de4:	014006c4 	movi	r5,27
  830de8:	29006e16 	blt	r5,r4,830fa4 <__subsf3+0x49c>
  830dec:	01400804 	movi	r5,32
  830df0:	290bc83a 	sub	r5,r5,r4
  830df4:	194a983a 	sll	r5,r3,r5
  830df8:	1908d83a 	srl	r4,r3,r4
  830dfc:	2806c03a 	cmpne	r3,r5,zero
  830e00:	20c6b03a 	or	r3,r4,r3
  830e04:	38c7c83a 	sub	r3,r7,r3
  830e08:	3021883a 	mov	r16,r6
  830e0c:	1023883a 	mov	r17,r2
  830e10:	003f7f06 	br	830c10 <__alt_mem_epcs_flash_controller_0+0xff827c10>
  830e14:	903f831e 	bne	r18,zero,830c24 <__alt_mem_epcs_flash_controller_0+0xff827c24>
  830e18:	0005883a 	mov	r2,zero
  830e1c:	0021883a 	mov	r16,zero
  830e20:	003f9a06 	br	830c8c <__alt_mem_epcs_flash_controller_0+0xff827c8c>
  830e24:	01403fc4 	movi	r5,255
  830e28:	31401926 	beq	r6,r5,830e90 <__subsf3+0x388>
  830e2c:	0109c83a 	sub	r4,zero,r4
  830e30:	18c10034 	orhi	r3,r3,1024
  830e34:	003feb06 	br	830de4 <__alt_mem_epcs_flash_controller_0+0xff827de4>
  830e38:	043fffc4 	movi	r16,-1
  830e3c:	000b883a 	mov	r5,zero
  830e40:	003f5806 	br	830ba4 <__alt_mem_epcs_flash_controller_0+0xff827ba4>
  830e44:	8000481e 	bne	r16,zero,830f68 <__subsf3+0x460>
  830e48:	18006226 	beq	r3,zero,830fd4 <__subsf3+0x4cc>
  830e4c:	383f4726 	beq	r7,zero,830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830e50:	19c7883a 	add	r3,r3,r7
  830e54:	1881002c 	andhi	r2,r3,1024
  830e58:	103f8326 	beq	r2,zero,830c68 <__alt_mem_epcs_flash_controller_0+0xff827c68>
  830e5c:	00bf0034 	movhi	r2,64512
  830e60:	10bfffc4 	addi	r2,r2,-1
  830e64:	2821883a 	mov	r16,r5
  830e68:	1886703a 	and	r3,r3,r2
  830e6c:	003f3f06 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830e70:	80001c1e 	bne	r16,zero,830ee4 <__subsf3+0x3dc>
  830e74:	1800261e 	bne	r3,zero,830f10 <__subsf3+0x408>
  830e78:	38004c26 	beq	r7,zero,830fac <__subsf3+0x4a4>
  830e7c:	3807883a 	mov	r3,r7
  830e80:	1023883a 	mov	r17,r2
  830e84:	003f3906 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830e88:	01c00044 	movi	r7,1
  830e8c:	003f9006 	br	830cd0 <__alt_mem_epcs_flash_controller_0+0xff827cd0>
  830e90:	3807883a 	mov	r3,r7
  830e94:	3021883a 	mov	r16,r6
  830e98:	1023883a 	mov	r17,r2
  830e9c:	003f3306 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830ea0:	8000161e 	bne	r16,zero,830efc <__subsf3+0x3f4>
  830ea4:	18002d26 	beq	r3,zero,830f5c <__subsf3+0x454>
  830ea8:	0108303a 	nor	r4,zero,r4
  830eac:	20000a26 	beq	r4,zero,830ed8 <__subsf3+0x3d0>
  830eb0:	01403fc4 	movi	r5,255
  830eb4:	31402926 	beq	r6,r5,830f5c <__subsf3+0x454>
  830eb8:	014006c4 	movi	r5,27
  830ebc:	29004716 	blt	r5,r4,830fdc <__subsf3+0x4d4>
  830ec0:	01400804 	movi	r5,32
  830ec4:	290bc83a 	sub	r5,r5,r4
  830ec8:	194a983a 	sll	r5,r3,r5
  830ecc:	1908d83a 	srl	r4,r3,r4
  830ed0:	2806c03a 	cmpne	r3,r5,zero
  830ed4:	20c6b03a 	or	r3,r4,r3
  830ed8:	19c7883a 	add	r3,r3,r7
  830edc:	3021883a 	mov	r16,r6
  830ee0:	003f7c06 	br	830cd4 <__alt_mem_epcs_flash_controller_0+0xff827cd4>
  830ee4:	1800111e 	bne	r3,zero,830f2c <__subsf3+0x424>
  830ee8:	38003326 	beq	r7,zero,830fb8 <__subsf3+0x4b0>
  830eec:	3807883a 	mov	r3,r7
  830ef0:	1023883a 	mov	r17,r2
  830ef4:	04003fc4 	movi	r16,255
  830ef8:	003f1c06 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830efc:	01403fc4 	movi	r5,255
  830f00:	31401626 	beq	r6,r5,830f5c <__subsf3+0x454>
  830f04:	0109c83a 	sub	r4,zero,r4
  830f08:	18c10034 	orhi	r3,r3,1024
  830f0c:	003fea06 	br	830eb8 <__alt_mem_epcs_flash_controller_0+0xff827eb8>
  830f10:	383f1626 	beq	r7,zero,830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830f14:	19c9c83a 	sub	r4,r3,r7
  830f18:	2141002c 	andhi	r5,r4,1024
  830f1c:	283f5026 	beq	r5,zero,830c60 <__alt_mem_epcs_flash_controller_0+0xff827c60>
  830f20:	38c7c83a 	sub	r3,r7,r3
  830f24:	1023883a 	mov	r17,r2
  830f28:	003f1006 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830f2c:	38001b26 	beq	r7,zero,830f9c <__subsf3+0x494>
  830f30:	1806d0fa 	srli	r3,r3,3
  830f34:	1900102c 	andhi	r4,r3,64
  830f38:	20000526 	beq	r4,zero,830f50 <__subsf3+0x448>
  830f3c:	380ed0fa 	srli	r7,r7,3
  830f40:	3900102c 	andhi	r4,r7,64
  830f44:	2000021e 	bne	r4,zero,830f50 <__subsf3+0x448>
  830f48:	3807883a 	mov	r3,r7
  830f4c:	1023883a 	mov	r17,r2
  830f50:	180690fa 	slli	r3,r3,3
  830f54:	04003fc4 	movi	r16,255
  830f58:	003f0406 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830f5c:	3807883a 	mov	r3,r7
  830f60:	3021883a 	mov	r16,r6
  830f64:	003f0106 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830f68:	18001726 	beq	r3,zero,830fc8 <__subsf3+0x4c0>
  830f6c:	38000b26 	beq	r7,zero,830f9c <__subsf3+0x494>
  830f70:	1806d0fa 	srli	r3,r3,3
  830f74:	1900102c 	andhi	r4,r3,64
  830f78:	20000426 	beq	r4,zero,830f8c <__subsf3+0x484>
  830f7c:	380ed0fa 	srli	r7,r7,3
  830f80:	3900102c 	andhi	r4,r7,64
  830f84:	2000011e 	bne	r4,zero,830f8c <__subsf3+0x484>
  830f88:	3807883a 	mov	r3,r7
  830f8c:	180690fa 	slli	r3,r3,3
  830f90:	1023883a 	mov	r17,r2
  830f94:	04003fc4 	movi	r16,255
  830f98:	003ef406 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830f9c:	04003fc4 	movi	r16,255
  830fa0:	003ef206 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830fa4:	00c00044 	movi	r3,1
  830fa8:	003f9606 	br	830e04 <__alt_mem_epcs_flash_controller_0+0xff827e04>
  830fac:	000b883a 	mov	r5,zero
  830fb0:	0005883a 	mov	r2,zero
  830fb4:	003f3506 	br	830c8c <__alt_mem_epcs_flash_controller_0+0xff827c8c>
  830fb8:	01402034 	movhi	r5,128
  830fbc:	297fffc4 	addi	r5,r5,-1
  830fc0:	0005883a 	mov	r2,zero
  830fc4:	003f2f06 	br	830c84 <__alt_mem_epcs_flash_controller_0+0xff827c84>
  830fc8:	3807883a 	mov	r3,r7
  830fcc:	04003fc4 	movi	r16,255
  830fd0:	003ee606 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830fd4:	3807883a 	mov	r3,r7
  830fd8:	003ee406 	br	830b6c <__alt_mem_epcs_flash_controller_0+0xff827b6c>
  830fdc:	00c00044 	movi	r3,1
  830fe0:	003fbd06 	br	830ed8 <__alt_mem_epcs_flash_controller_0+0xff827ed8>
  830fe4:	0005883a 	mov	r2,zero
  830fe8:	003f2806 	br	830c8c <__alt_mem_epcs_flash_controller_0+0xff827c8c>

00830fec <__fixsfsi>:
  830fec:	200ad5fa 	srli	r5,r4,23
  830ff0:	00c02034 	movhi	r3,128
  830ff4:	18ffffc4 	addi	r3,r3,-1
  830ff8:	29403fcc 	andi	r5,r5,255
  830ffc:	00801f84 	movi	r2,126
  831000:	1906703a 	and	r3,r3,r4
  831004:	2008d7fa 	srli	r4,r4,31
  831008:	11400e0e 	bge	r2,r5,831044 <__fixsfsi+0x58>
  83100c:	00802744 	movi	r2,157
  831010:	11400816 	blt	r2,r5,831034 <__fixsfsi+0x48>
  831014:	00802544 	movi	r2,149
  831018:	18c02034 	orhi	r3,r3,128
  83101c:	11400b0e 	bge	r2,r5,83104c <__fixsfsi+0x60>
  831020:	28bfda84 	addi	r2,r5,-150
  831024:	1884983a 	sll	r2,r3,r2
  831028:	20000726 	beq	r4,zero,831048 <__fixsfsi+0x5c>
  83102c:	0085c83a 	sub	r2,zero,r2
  831030:	f800283a 	ret
  831034:	00a00034 	movhi	r2,32768
  831038:	10bfffc4 	addi	r2,r2,-1
  83103c:	2085883a 	add	r2,r4,r2
  831040:	f800283a 	ret
  831044:	0005883a 	mov	r2,zero
  831048:	f800283a 	ret
  83104c:	00802584 	movi	r2,150
  831050:	1145c83a 	sub	r2,r2,r5
  831054:	1884d83a 	srl	r2,r3,r2
  831058:	003ff306 	br	831028 <__alt_mem_epcs_flash_controller_0+0xff828028>

0083105c <__floatsisf>:
  83105c:	defffd04 	addi	sp,sp,-12
  831060:	dfc00215 	stw	ra,8(sp)
  831064:	dc400115 	stw	r17,4(sp)
  831068:	dc000015 	stw	r16,0(sp)
  83106c:	20003526 	beq	r4,zero,831144 <__floatsisf+0xe8>
  831070:	2021883a 	mov	r16,r4
  831074:	2022d7fa 	srli	r17,r4,31
  831078:	20003616 	blt	r4,zero,831154 <__floatsisf+0xf8>
  83107c:	8009883a 	mov	r4,r16
  831080:	0831c3c0 	call	831c3c <__clzsi2>
  831084:	00c02784 	movi	r3,158
  831088:	1887c83a 	sub	r3,r3,r2
  83108c:	01002584 	movi	r4,150
  831090:	20c01416 	blt	r4,r3,8310e4 <__floatsisf+0x88>
  831094:	20c9c83a 	sub	r4,r4,r3
  831098:	8120983a 	sll	r16,r16,r4
  83109c:	00802034 	movhi	r2,128
  8310a0:	10bfffc4 	addi	r2,r2,-1
  8310a4:	8809883a 	mov	r4,r17
  8310a8:	80a0703a 	and	r16,r16,r2
  8310ac:	18803fcc 	andi	r2,r3,255
  8310b0:	100695fa 	slli	r3,r2,23
  8310b4:	20803fcc 	andi	r2,r4,255
  8310b8:	100897fa 	slli	r4,r2,31
  8310bc:	00802034 	movhi	r2,128
  8310c0:	10bfffc4 	addi	r2,r2,-1
  8310c4:	8084703a 	and	r2,r16,r2
  8310c8:	10c4b03a 	or	r2,r2,r3
  8310cc:	1104b03a 	or	r2,r2,r4
  8310d0:	dfc00217 	ldw	ra,8(sp)
  8310d4:	dc400117 	ldw	r17,4(sp)
  8310d8:	dc000017 	ldw	r16,0(sp)
  8310dc:	dec00304 	addi	sp,sp,12
  8310e0:	f800283a 	ret
  8310e4:	01002644 	movi	r4,153
  8310e8:	20c01c16 	blt	r4,r3,83115c <__floatsisf+0x100>
  8310ec:	20c9c83a 	sub	r4,r4,r3
  8310f0:	8120983a 	sll	r16,r16,r4
  8310f4:	013f0034 	movhi	r4,64512
  8310f8:	213fffc4 	addi	r4,r4,-1
  8310fc:	814001cc 	andi	r5,r16,7
  831100:	8108703a 	and	r4,r16,r4
  831104:	28000426 	beq	r5,zero,831118 <__floatsisf+0xbc>
  831108:	840003cc 	andi	r16,r16,15
  83110c:	01400104 	movi	r5,4
  831110:	81400126 	beq	r16,r5,831118 <__floatsisf+0xbc>
  831114:	2149883a 	add	r4,r4,r5
  831118:	2141002c 	andhi	r5,r4,1024
  83111c:	28000526 	beq	r5,zero,831134 <__floatsisf+0xd8>
  831120:	00c027c4 	movi	r3,159
  831124:	1887c83a 	sub	r3,r3,r2
  831128:	00bf0034 	movhi	r2,64512
  83112c:	10bfffc4 	addi	r2,r2,-1
  831130:	2088703a 	and	r4,r4,r2
  831134:	202091ba 	slli	r16,r4,6
  831138:	8809883a 	mov	r4,r17
  83113c:	8020d27a 	srli	r16,r16,9
  831140:	003fda06 	br	8310ac <__alt_mem_epcs_flash_controller_0+0xff8280ac>
  831144:	0009883a 	mov	r4,zero
  831148:	0007883a 	mov	r3,zero
  83114c:	0021883a 	mov	r16,zero
  831150:	003fd606 	br	8310ac <__alt_mem_epcs_flash_controller_0+0xff8280ac>
  831154:	0121c83a 	sub	r16,zero,r4
  831158:	003fc806 	br	83107c <__alt_mem_epcs_flash_controller_0+0xff82807c>
  83115c:	01002e44 	movi	r4,185
  831160:	20c9c83a 	sub	r4,r4,r3
  831164:	01400144 	movi	r5,5
  831168:	8108983a 	sll	r4,r16,r4
  83116c:	288bc83a 	sub	r5,r5,r2
  831170:	8160d83a 	srl	r16,r16,r5
  831174:	2008c03a 	cmpne	r4,r4,zero
  831178:	8120b03a 	or	r16,r16,r4
  83117c:	003fdd06 	br	8310f4 <__alt_mem_epcs_flash_controller_0+0xff8280f4>

00831180 <__muldf3>:
  831180:	deffee04 	addi	sp,sp,-72
  831184:	dd000c15 	stw	r20,48(sp)
  831188:	2828d53a 	srli	r20,r5,20
  83118c:	ddc00f15 	stw	r23,60(sp)
  831190:	282ed7fa 	srli	r23,r5,31
  831194:	dc000815 	stw	r16,32(sp)
  831198:	04000434 	movhi	r16,16
  83119c:	dcc00b15 	stw	r19,44(sp)
  8311a0:	843fffc4 	addi	r16,r16,-1
  8311a4:	dfc01115 	stw	ra,68(sp)
  8311a8:	df001015 	stw	fp,64(sp)
  8311ac:	dd800e15 	stw	r22,56(sp)
  8311b0:	dd400d15 	stw	r21,52(sp)
  8311b4:	dc800a15 	stw	r18,40(sp)
  8311b8:	dc400915 	stw	r17,36(sp)
  8311bc:	a501ffcc 	andi	r20,r20,2047
  8311c0:	2c20703a 	and	r16,r5,r16
  8311c4:	b827883a 	mov	r19,r23
  8311c8:	ba403fcc 	andi	r9,r23,255
  8311cc:	a0006026 	beq	r20,zero,831350 <__muldf3+0x1d0>
  8311d0:	0081ffc4 	movi	r2,2047
  8311d4:	202d883a 	mov	r22,r4
  8311d8:	a0803626 	beq	r20,r2,8312b4 <__muldf3+0x134>
  8311dc:	84000434 	orhi	r16,r16,16
  8311e0:	200ad77a 	srli	r5,r4,29
  8311e4:	800490fa 	slli	r2,r16,3
  8311e8:	202c90fa 	slli	r22,r4,3
  8311ec:	a53f0044 	addi	r20,r20,-1023
  8311f0:	28a0b03a 	or	r16,r5,r2
  8311f4:	002b883a 	mov	r21,zero
  8311f8:	000b883a 	mov	r5,zero
  8311fc:	3804d53a 	srli	r2,r7,20
  831200:	3838d7fa 	srli	fp,r7,31
  831204:	04400434 	movhi	r17,16
  831208:	8c7fffc4 	addi	r17,r17,-1
  83120c:	1081ffcc 	andi	r2,r2,2047
  831210:	3025883a 	mov	r18,r6
  831214:	3c62703a 	and	r17,r7,r17
  831218:	e2803fcc 	andi	r10,fp,255
  83121c:	10006d26 	beq	r2,zero,8313d4 <__muldf3+0x254>
  831220:	00c1ffc4 	movi	r3,2047
  831224:	10c06526 	beq	r2,r3,8313bc <__muldf3+0x23c>
  831228:	8c400434 	orhi	r17,r17,16
  83122c:	300ed77a 	srli	r7,r6,29
  831230:	880690fa 	slli	r3,r17,3
  831234:	302490fa 	slli	r18,r6,3
  831238:	10bf0044 	addi	r2,r2,-1023
  83123c:	38e2b03a 	or	r17,r7,r3
  831240:	000f883a 	mov	r7,zero
  831244:	a087883a 	add	r3,r20,r2
  831248:	010003c4 	movi	r4,15
  83124c:	3d44b03a 	or	r2,r7,r21
  831250:	e5ccf03a 	xor	r6,fp,r23
  831254:	1a000044 	addi	r8,r3,1
  831258:	20809b36 	bltu	r4,r2,8314c8 <__muldf3+0x348>
  83125c:	100490ba 	slli	r2,r2,2
  831260:	010020f4 	movhi	r4,131
  831264:	21049d04 	addi	r4,r4,4724
  831268:	1105883a 	add	r2,r2,r4
  83126c:	10800017 	ldw	r2,0(r2)
  831270:	1000683a 	jmp	r2
  831274:	008314c8 	cmpgei	r2,zero,3155
  831278:	008312d4 	movui	r2,3147
  83127c:	008312d4 	movui	r2,3147
  831280:	008312d0 	cmplti	r2,zero,3147
  831284:	008314a4 	muli	r2,zero,3154
  831288:	008314a4 	muli	r2,zero,3154
  83128c:	0083148c 	andi	r2,zero,3154
  831290:	008312d0 	cmplti	r2,zero,3147
  831294:	008314a4 	muli	r2,zero,3154
  831298:	0083148c 	andi	r2,zero,3154
  83129c:	008314a4 	muli	r2,zero,3154
  8312a0:	008312d0 	cmplti	r2,zero,3147
  8312a4:	008314b4 	movhi	r2,3154
  8312a8:	008314b4 	movhi	r2,3154
  8312ac:	008314b4 	movhi	r2,3154
  8312b0:	00831814 	movui	r2,3168
  8312b4:	2404b03a 	or	r2,r4,r16
  8312b8:	1000711e 	bne	r2,zero,831480 <__muldf3+0x300>
  8312bc:	05400204 	movi	r21,8
  8312c0:	0021883a 	mov	r16,zero
  8312c4:	002d883a 	mov	r22,zero
  8312c8:	01400084 	movi	r5,2
  8312cc:	003fcb06 	br	8311fc <__alt_mem_epcs_flash_controller_0+0xff8281fc>
  8312d0:	500d883a 	mov	r6,r10
  8312d4:	00800084 	movi	r2,2
  8312d8:	38805926 	beq	r7,r2,831440 <__muldf3+0x2c0>
  8312dc:	008000c4 	movi	r2,3
  8312e0:	3881bb26 	beq	r7,r2,8319d0 <__muldf3+0x850>
  8312e4:	00800044 	movi	r2,1
  8312e8:	3881961e 	bne	r7,r2,831944 <__muldf3+0x7c4>
  8312ec:	3027883a 	mov	r19,r6
  8312f0:	0005883a 	mov	r2,zero
  8312f4:	0021883a 	mov	r16,zero
  8312f8:	002d883a 	mov	r22,zero
  8312fc:	1004953a 	slli	r2,r2,20
  831300:	98c03fcc 	andi	r3,r19,255
  831304:	04400434 	movhi	r17,16
  831308:	8c7fffc4 	addi	r17,r17,-1
  83130c:	180697fa 	slli	r3,r3,31
  831310:	8460703a 	and	r16,r16,r17
  831314:	80a0b03a 	or	r16,r16,r2
  831318:	80c6b03a 	or	r3,r16,r3
  83131c:	b005883a 	mov	r2,r22
  831320:	dfc01117 	ldw	ra,68(sp)
  831324:	df001017 	ldw	fp,64(sp)
  831328:	ddc00f17 	ldw	r23,60(sp)
  83132c:	dd800e17 	ldw	r22,56(sp)
  831330:	dd400d17 	ldw	r21,52(sp)
  831334:	dd000c17 	ldw	r20,48(sp)
  831338:	dcc00b17 	ldw	r19,44(sp)
  83133c:	dc800a17 	ldw	r18,40(sp)
  831340:	dc400917 	ldw	r17,36(sp)
  831344:	dc000817 	ldw	r16,32(sp)
  831348:	dec01204 	addi	sp,sp,72
  83134c:	f800283a 	ret
  831350:	2404b03a 	or	r2,r4,r16
  831354:	202b883a 	mov	r21,r4
  831358:	10004426 	beq	r2,zero,83146c <__muldf3+0x2ec>
  83135c:	80015126 	beq	r16,zero,8318a4 <__muldf3+0x724>
  831360:	8009883a 	mov	r4,r16
  831364:	d9800715 	stw	r6,28(sp)
  831368:	d9c00215 	stw	r7,8(sp)
  83136c:	da400415 	stw	r9,16(sp)
  831370:	0831c3c0 	call	831c3c <__clzsi2>
  831374:	d9800717 	ldw	r6,28(sp)
  831378:	d9c00217 	ldw	r7,8(sp)
  83137c:	da400417 	ldw	r9,16(sp)
  831380:	113ffd44 	addi	r4,r2,-11
  831384:	00c00704 	movi	r3,28
  831388:	19014216 	blt	r3,r4,831894 <__muldf3+0x714>
  83138c:	00c00744 	movi	r3,29
  831390:	15bffe04 	addi	r22,r2,-8
  831394:	1907c83a 	sub	r3,r3,r4
  831398:	85a0983a 	sll	r16,r16,r22
  83139c:	a8c6d83a 	srl	r3,r21,r3
  8313a0:	adac983a 	sll	r22,r21,r22
  8313a4:	1c20b03a 	or	r16,r3,r16
  8313a8:	1080fcc4 	addi	r2,r2,1011
  8313ac:	00a9c83a 	sub	r20,zero,r2
  8313b0:	002b883a 	mov	r21,zero
  8313b4:	000b883a 	mov	r5,zero
  8313b8:	003f9006 	br	8311fc <__alt_mem_epcs_flash_controller_0+0xff8281fc>
  8313bc:	3446b03a 	or	r3,r6,r17
  8313c0:	1800281e 	bne	r3,zero,831464 <__muldf3+0x2e4>
  8313c4:	0023883a 	mov	r17,zero
  8313c8:	0025883a 	mov	r18,zero
  8313cc:	01c00084 	movi	r7,2
  8313d0:	003f9c06 	br	831244 <__alt_mem_epcs_flash_controller_0+0xff828244>
  8313d4:	3446b03a 	or	r3,r6,r17
  8313d8:	18001e26 	beq	r3,zero,831454 <__muldf3+0x2d4>
  8313dc:	88012126 	beq	r17,zero,831864 <__muldf3+0x6e4>
  8313e0:	8809883a 	mov	r4,r17
  8313e4:	d9400215 	stw	r5,8(sp)
  8313e8:	d9800715 	stw	r6,28(sp)
  8313ec:	da400415 	stw	r9,16(sp)
  8313f0:	da800315 	stw	r10,12(sp)
  8313f4:	0831c3c0 	call	831c3c <__clzsi2>
  8313f8:	d9400217 	ldw	r5,8(sp)
  8313fc:	d9800717 	ldw	r6,28(sp)
  831400:	da400417 	ldw	r9,16(sp)
  831404:	da800317 	ldw	r10,12(sp)
  831408:	113ffd44 	addi	r4,r2,-11
  83140c:	00c00704 	movi	r3,28
  831410:	19011016 	blt	r3,r4,831854 <__muldf3+0x6d4>
  831414:	00c00744 	movi	r3,29
  831418:	14bffe04 	addi	r18,r2,-8
  83141c:	1907c83a 	sub	r3,r3,r4
  831420:	8ca2983a 	sll	r17,r17,r18
  831424:	30c6d83a 	srl	r3,r6,r3
  831428:	34a4983a 	sll	r18,r6,r18
  83142c:	1c62b03a 	or	r17,r3,r17
  831430:	1080fcc4 	addi	r2,r2,1011
  831434:	0085c83a 	sub	r2,zero,r2
  831438:	000f883a 	mov	r7,zero
  83143c:	003f8106 	br	831244 <__alt_mem_epcs_flash_controller_0+0xff828244>
  831440:	3027883a 	mov	r19,r6
  831444:	0081ffc4 	movi	r2,2047
  831448:	0021883a 	mov	r16,zero
  83144c:	002d883a 	mov	r22,zero
  831450:	003faa06 	br	8312fc <__alt_mem_epcs_flash_controller_0+0xff8282fc>
  831454:	0023883a 	mov	r17,zero
  831458:	0025883a 	mov	r18,zero
  83145c:	01c00044 	movi	r7,1
  831460:	003f7806 	br	831244 <__alt_mem_epcs_flash_controller_0+0xff828244>
  831464:	01c000c4 	movi	r7,3
  831468:	003f7606 	br	831244 <__alt_mem_epcs_flash_controller_0+0xff828244>
  83146c:	05400104 	movi	r21,4
  831470:	0021883a 	mov	r16,zero
  831474:	002d883a 	mov	r22,zero
  831478:	01400044 	movi	r5,1
  83147c:	003f5f06 	br	8311fc <__alt_mem_epcs_flash_controller_0+0xff8281fc>
  831480:	05400304 	movi	r21,12
  831484:	014000c4 	movi	r5,3
  831488:	003f5c06 	br	8311fc <__alt_mem_epcs_flash_controller_0+0xff8281fc>
  83148c:	04000434 	movhi	r16,16
  831490:	0027883a 	mov	r19,zero
  831494:	843fffc4 	addi	r16,r16,-1
  831498:	05bfffc4 	movi	r22,-1
  83149c:	0081ffc4 	movi	r2,2047
  8314a0:	003f9606 	br	8312fc <__alt_mem_epcs_flash_controller_0+0xff8282fc>
  8314a4:	8023883a 	mov	r17,r16
  8314a8:	b025883a 	mov	r18,r22
  8314ac:	280f883a 	mov	r7,r5
  8314b0:	003f8806 	br	8312d4 <__alt_mem_epcs_flash_controller_0+0xff8282d4>
  8314b4:	8023883a 	mov	r17,r16
  8314b8:	b025883a 	mov	r18,r22
  8314bc:	480d883a 	mov	r6,r9
  8314c0:	280f883a 	mov	r7,r5
  8314c4:	003f8306 	br	8312d4 <__alt_mem_epcs_flash_controller_0+0xff8282d4>
  8314c8:	b026d43a 	srli	r19,r22,16
  8314cc:	902ed43a 	srli	r23,r18,16
  8314d0:	b5bfffcc 	andi	r22,r22,65535
  8314d4:	94bfffcc 	andi	r18,r18,65535
  8314d8:	b00b883a 	mov	r5,r22
  8314dc:	9009883a 	mov	r4,r18
  8314e0:	d8c00515 	stw	r3,20(sp)
  8314e4:	d9800715 	stw	r6,28(sp)
  8314e8:	da000615 	stw	r8,24(sp)
  8314ec:	08301e80 	call	8301e8 <__mulsi3>
  8314f0:	980b883a 	mov	r5,r19
  8314f4:	9009883a 	mov	r4,r18
  8314f8:	1029883a 	mov	r20,r2
  8314fc:	08301e80 	call	8301e8 <__mulsi3>
  831500:	b80b883a 	mov	r5,r23
  831504:	9809883a 	mov	r4,r19
  831508:	102b883a 	mov	r21,r2
  83150c:	08301e80 	call	8301e8 <__mulsi3>
  831510:	b809883a 	mov	r4,r23
  831514:	b00b883a 	mov	r5,r22
  831518:	1039883a 	mov	fp,r2
  83151c:	08301e80 	call	8301e8 <__mulsi3>
  831520:	a008d43a 	srli	r4,r20,16
  831524:	1545883a 	add	r2,r2,r21
  831528:	d8c00517 	ldw	r3,20(sp)
  83152c:	2085883a 	add	r2,r4,r2
  831530:	d9800717 	ldw	r6,28(sp)
  831534:	da000617 	ldw	r8,24(sp)
  831538:	1540022e 	bgeu	r2,r21,831544 <__muldf3+0x3c4>
  83153c:	01000074 	movhi	r4,1
  831540:	e139883a 	add	fp,fp,r4
  831544:	100e943a 	slli	r7,r2,16
  831548:	1004d43a 	srli	r2,r2,16
  83154c:	882ad43a 	srli	r21,r17,16
  831550:	a53fffcc 	andi	r20,r20,65535
  831554:	8c7fffcc 	andi	r17,r17,65535
  831558:	3d29883a 	add	r20,r7,r20
  83155c:	b00b883a 	mov	r5,r22
  831560:	8809883a 	mov	r4,r17
  831564:	d8c00515 	stw	r3,20(sp)
  831568:	d9800715 	stw	r6,28(sp)
  83156c:	da000615 	stw	r8,24(sp)
  831570:	dd000115 	stw	r20,4(sp)
  831574:	d8800015 	stw	r2,0(sp)
  831578:	08301e80 	call	8301e8 <__mulsi3>
  83157c:	980b883a 	mov	r5,r19
  831580:	8809883a 	mov	r4,r17
  831584:	d8800215 	stw	r2,8(sp)
  831588:	08301e80 	call	8301e8 <__mulsi3>
  83158c:	9809883a 	mov	r4,r19
  831590:	a80b883a 	mov	r5,r21
  831594:	1029883a 	mov	r20,r2
  831598:	08301e80 	call	8301e8 <__mulsi3>
  83159c:	b00b883a 	mov	r5,r22
  8315a0:	a809883a 	mov	r4,r21
  8315a4:	d8800415 	stw	r2,16(sp)
  8315a8:	08301e80 	call	8301e8 <__mulsi3>
  8315ac:	d9c00217 	ldw	r7,8(sp)
  8315b0:	1505883a 	add	r2,r2,r20
  8315b4:	d8c00517 	ldw	r3,20(sp)
  8315b8:	3826d43a 	srli	r19,r7,16
  8315bc:	d9800717 	ldw	r6,28(sp)
  8315c0:	da000617 	ldw	r8,24(sp)
  8315c4:	9885883a 	add	r2,r19,r2
  8315c8:	da400417 	ldw	r9,16(sp)
  8315cc:	1500022e 	bgeu	r2,r20,8315d8 <__muldf3+0x458>
  8315d0:	01000074 	movhi	r4,1
  8315d4:	4913883a 	add	r9,r9,r4
  8315d8:	1028d43a 	srli	r20,r2,16
  8315dc:	1004943a 	slli	r2,r2,16
  8315e0:	802cd43a 	srli	r22,r16,16
  8315e4:	843fffcc 	andi	r16,r16,65535
  8315e8:	3cffffcc 	andi	r19,r7,65535
  8315ec:	9009883a 	mov	r4,r18
  8315f0:	800b883a 	mov	r5,r16
  8315f4:	a269883a 	add	r20,r20,r9
  8315f8:	d8c00515 	stw	r3,20(sp)
  8315fc:	d9800715 	stw	r6,28(sp)
  831600:	da000615 	stw	r8,24(sp)
  831604:	14e7883a 	add	r19,r2,r19
  831608:	08301e80 	call	8301e8 <__mulsi3>
  83160c:	9009883a 	mov	r4,r18
  831610:	b00b883a 	mov	r5,r22
  831614:	d8800315 	stw	r2,12(sp)
  831618:	08301e80 	call	8301e8 <__mulsi3>
  83161c:	b809883a 	mov	r4,r23
  831620:	b00b883a 	mov	r5,r22
  831624:	d8800215 	stw	r2,8(sp)
  831628:	08301e80 	call	8301e8 <__mulsi3>
  83162c:	b80b883a 	mov	r5,r23
  831630:	8009883a 	mov	r4,r16
  831634:	d8800415 	stw	r2,16(sp)
  831638:	08301e80 	call	8301e8 <__mulsi3>
  83163c:	da800317 	ldw	r10,12(sp)
  831640:	d9c00217 	ldw	r7,8(sp)
  831644:	d9000017 	ldw	r4,0(sp)
  831648:	502ed43a 	srli	r23,r10,16
  83164c:	11c5883a 	add	r2,r2,r7
  831650:	24e5883a 	add	r18,r4,r19
  831654:	b885883a 	add	r2,r23,r2
  831658:	d8c00517 	ldw	r3,20(sp)
  83165c:	d9800717 	ldw	r6,28(sp)
  831660:	da000617 	ldw	r8,24(sp)
  831664:	da400417 	ldw	r9,16(sp)
  831668:	11c0022e 	bgeu	r2,r7,831674 <__muldf3+0x4f4>
  83166c:	01000074 	movhi	r4,1
  831670:	4913883a 	add	r9,r9,r4
  831674:	100ed43a 	srli	r7,r2,16
  831678:	1004943a 	slli	r2,r2,16
  83167c:	55ffffcc 	andi	r23,r10,65535
  831680:	3a53883a 	add	r9,r7,r9
  831684:	8809883a 	mov	r4,r17
  831688:	800b883a 	mov	r5,r16
  83168c:	d8c00515 	stw	r3,20(sp)
  831690:	d9800715 	stw	r6,28(sp)
  831694:	da000615 	stw	r8,24(sp)
  831698:	da400415 	stw	r9,16(sp)
  83169c:	15ef883a 	add	r23,r2,r23
  8316a0:	08301e80 	call	8301e8 <__mulsi3>
  8316a4:	8809883a 	mov	r4,r17
  8316a8:	b00b883a 	mov	r5,r22
  8316ac:	d8800215 	stw	r2,8(sp)
  8316b0:	08301e80 	call	8301e8 <__mulsi3>
  8316b4:	b00b883a 	mov	r5,r22
  8316b8:	a809883a 	mov	r4,r21
  8316bc:	d8800315 	stw	r2,12(sp)
  8316c0:	08301e80 	call	8301e8 <__mulsi3>
  8316c4:	8009883a 	mov	r4,r16
  8316c8:	a80b883a 	mov	r5,r21
  8316cc:	1023883a 	mov	r17,r2
  8316d0:	08301e80 	call	8301e8 <__mulsi3>
  8316d4:	d9c00217 	ldw	r7,8(sp)
  8316d8:	da800317 	ldw	r10,12(sp)
  8316dc:	d8c00517 	ldw	r3,20(sp)
  8316e0:	3808d43a 	srli	r4,r7,16
  8316e4:	1285883a 	add	r2,r2,r10
  8316e8:	d9800717 	ldw	r6,28(sp)
  8316ec:	2085883a 	add	r2,r4,r2
  8316f0:	da000617 	ldw	r8,24(sp)
  8316f4:	da400417 	ldw	r9,16(sp)
  8316f8:	1280022e 	bgeu	r2,r10,831704 <__muldf3+0x584>
  8316fc:	01000074 	movhi	r4,1
  831700:	8923883a 	add	r17,r17,r4
  831704:	1008943a 	slli	r4,r2,16
  831708:	39ffffcc 	andi	r7,r7,65535
  83170c:	e4b9883a 	add	fp,fp,r18
  831710:	21cf883a 	add	r7,r4,r7
  831714:	e4e7803a 	cmpltu	r19,fp,r19
  831718:	3d0f883a 	add	r7,r7,r20
  83171c:	bf39883a 	add	fp,r23,fp
  831720:	99c9883a 	add	r4,r19,r7
  831724:	e5ef803a 	cmpltu	r23,fp,r23
  831728:	490b883a 	add	r5,r9,r4
  83172c:	1004d43a 	srli	r2,r2,16
  831730:	b965883a 	add	r18,r23,r5
  831734:	24c9803a 	cmpltu	r4,r4,r19
  831738:	3d29803a 	cmpltu	r20,r7,r20
  83173c:	a128b03a 	or	r20,r20,r4
  831740:	95ef803a 	cmpltu	r23,r18,r23
  831744:	2a53803a 	cmpltu	r9,r5,r9
  831748:	a0a9883a 	add	r20,r20,r2
  83174c:	4deeb03a 	or	r23,r9,r23
  831750:	a5ef883a 	add	r23,r20,r23
  831754:	bc63883a 	add	r17,r23,r17
  831758:	e004927a 	slli	r2,fp,9
  83175c:	d9000117 	ldw	r4,4(sp)
  831760:	882e927a 	slli	r23,r17,9
  831764:	9022d5fa 	srli	r17,r18,23
  831768:	e038d5fa 	srli	fp,fp,23
  83176c:	1104b03a 	or	r2,r2,r4
  831770:	9024927a 	slli	r18,r18,9
  831774:	1004c03a 	cmpne	r2,r2,zero
  831778:	bc62b03a 	or	r17,r23,r17
  83177c:	1738b03a 	or	fp,r2,fp
  831780:	8880402c 	andhi	r2,r17,256
  831784:	e4a4b03a 	or	r18,fp,r18
  831788:	10000726 	beq	r2,zero,8317a8 <__muldf3+0x628>
  83178c:	9006d07a 	srli	r3,r18,1
  831790:	880497fa 	slli	r2,r17,31
  831794:	9480004c 	andi	r18,r18,1
  831798:	8822d07a 	srli	r17,r17,1
  83179c:	1ca4b03a 	or	r18,r3,r18
  8317a0:	14a4b03a 	or	r18,r2,r18
  8317a4:	4007883a 	mov	r3,r8
  8317a8:	1880ffc4 	addi	r2,r3,1023
  8317ac:	0080460e 	bge	zero,r2,8318c8 <__muldf3+0x748>
  8317b0:	910001cc 	andi	r4,r18,7
  8317b4:	20000726 	beq	r4,zero,8317d4 <__muldf3+0x654>
  8317b8:	910003cc 	andi	r4,r18,15
  8317bc:	01400104 	movi	r5,4
  8317c0:	21400426 	beq	r4,r5,8317d4 <__muldf3+0x654>
  8317c4:	9149883a 	add	r4,r18,r5
  8317c8:	24a5803a 	cmpltu	r18,r4,r18
  8317cc:	8ca3883a 	add	r17,r17,r18
  8317d0:	2025883a 	mov	r18,r4
  8317d4:	8900402c 	andhi	r4,r17,256
  8317d8:	20000426 	beq	r4,zero,8317ec <__muldf3+0x66c>
  8317dc:	18810004 	addi	r2,r3,1024
  8317e0:	00ffc034 	movhi	r3,65280
  8317e4:	18ffffc4 	addi	r3,r3,-1
  8317e8:	88e2703a 	and	r17,r17,r3
  8317ec:	00c1ff84 	movi	r3,2046
  8317f0:	18bf1316 	blt	r3,r2,831440 <__alt_mem_epcs_flash_controller_0+0xff828440>
  8317f4:	882c977a 	slli	r22,r17,29
  8317f8:	9024d0fa 	srli	r18,r18,3
  8317fc:	8822927a 	slli	r17,r17,9
  831800:	1081ffcc 	andi	r2,r2,2047
  831804:	b4acb03a 	or	r22,r22,r18
  831808:	8820d33a 	srli	r16,r17,12
  83180c:	3027883a 	mov	r19,r6
  831810:	003eba06 	br	8312fc <__alt_mem_epcs_flash_controller_0+0xff8282fc>
  831814:	8080022c 	andhi	r2,r16,8
  831818:	10000926 	beq	r2,zero,831840 <__muldf3+0x6c0>
  83181c:	8880022c 	andhi	r2,r17,8
  831820:	1000071e 	bne	r2,zero,831840 <__muldf3+0x6c0>
  831824:	00800434 	movhi	r2,16
  831828:	8c000234 	orhi	r16,r17,8
  83182c:	10bfffc4 	addi	r2,r2,-1
  831830:	e027883a 	mov	r19,fp
  831834:	80a0703a 	and	r16,r16,r2
  831838:	902d883a 	mov	r22,r18
  83183c:	003f1706 	br	83149c <__alt_mem_epcs_flash_controller_0+0xff82849c>
  831840:	00800434 	movhi	r2,16
  831844:	84000234 	orhi	r16,r16,8
  831848:	10bfffc4 	addi	r2,r2,-1
  83184c:	80a0703a 	and	r16,r16,r2
  831850:	003f1206 	br	83149c <__alt_mem_epcs_flash_controller_0+0xff82849c>
  831854:	147ff604 	addi	r17,r2,-40
  831858:	3462983a 	sll	r17,r6,r17
  83185c:	0025883a 	mov	r18,zero
  831860:	003ef306 	br	831430 <__alt_mem_epcs_flash_controller_0+0xff828430>
  831864:	3009883a 	mov	r4,r6
  831868:	d9400215 	stw	r5,8(sp)
  83186c:	d9800715 	stw	r6,28(sp)
  831870:	da400415 	stw	r9,16(sp)
  831874:	da800315 	stw	r10,12(sp)
  831878:	0831c3c0 	call	831c3c <__clzsi2>
  83187c:	10800804 	addi	r2,r2,32
  831880:	da800317 	ldw	r10,12(sp)
  831884:	da400417 	ldw	r9,16(sp)
  831888:	d9800717 	ldw	r6,28(sp)
  83188c:	d9400217 	ldw	r5,8(sp)
  831890:	003edd06 	br	831408 <__alt_mem_epcs_flash_controller_0+0xff828408>
  831894:	143ff604 	addi	r16,r2,-40
  831898:	ac20983a 	sll	r16,r21,r16
  83189c:	002d883a 	mov	r22,zero
  8318a0:	003ec106 	br	8313a8 <__alt_mem_epcs_flash_controller_0+0xff8283a8>
  8318a4:	d9800715 	stw	r6,28(sp)
  8318a8:	d9c00215 	stw	r7,8(sp)
  8318ac:	da400415 	stw	r9,16(sp)
  8318b0:	0831c3c0 	call	831c3c <__clzsi2>
  8318b4:	10800804 	addi	r2,r2,32
  8318b8:	da400417 	ldw	r9,16(sp)
  8318bc:	d9c00217 	ldw	r7,8(sp)
  8318c0:	d9800717 	ldw	r6,28(sp)
  8318c4:	003eae06 	br	831380 <__alt_mem_epcs_flash_controller_0+0xff828380>
  8318c8:	00c00044 	movi	r3,1
  8318cc:	1887c83a 	sub	r3,r3,r2
  8318d0:	01000e04 	movi	r4,56
  8318d4:	20fe8516 	blt	r4,r3,8312ec <__alt_mem_epcs_flash_controller_0+0xff8282ec>
  8318d8:	010007c4 	movi	r4,31
  8318dc:	20c01b16 	blt	r4,r3,83194c <__muldf3+0x7cc>
  8318e0:	00800804 	movi	r2,32
  8318e4:	10c5c83a 	sub	r2,r2,r3
  8318e8:	888a983a 	sll	r5,r17,r2
  8318ec:	90c8d83a 	srl	r4,r18,r3
  8318f0:	9084983a 	sll	r2,r18,r2
  8318f4:	88e2d83a 	srl	r17,r17,r3
  8318f8:	2906b03a 	or	r3,r5,r4
  8318fc:	1004c03a 	cmpne	r2,r2,zero
  831900:	1886b03a 	or	r3,r3,r2
  831904:	188001cc 	andi	r2,r3,7
  831908:	10000726 	beq	r2,zero,831928 <__muldf3+0x7a8>
  83190c:	188003cc 	andi	r2,r3,15
  831910:	01000104 	movi	r4,4
  831914:	11000426 	beq	r2,r4,831928 <__muldf3+0x7a8>
  831918:	1805883a 	mov	r2,r3
  83191c:	10c00104 	addi	r3,r2,4
  831920:	1885803a 	cmpltu	r2,r3,r2
  831924:	88a3883a 	add	r17,r17,r2
  831928:	8880202c 	andhi	r2,r17,128
  83192c:	10001c26 	beq	r2,zero,8319a0 <__muldf3+0x820>
  831930:	3027883a 	mov	r19,r6
  831934:	00800044 	movi	r2,1
  831938:	0021883a 	mov	r16,zero
  83193c:	002d883a 	mov	r22,zero
  831940:	003e6e06 	br	8312fc <__alt_mem_epcs_flash_controller_0+0xff8282fc>
  831944:	4007883a 	mov	r3,r8
  831948:	003f9706 	br	8317a8 <__alt_mem_epcs_flash_controller_0+0xff8287a8>
  83194c:	017ff844 	movi	r5,-31
  831950:	2885c83a 	sub	r2,r5,r2
  831954:	888ad83a 	srl	r5,r17,r2
  831958:	00800804 	movi	r2,32
  83195c:	18801a26 	beq	r3,r2,8319c8 <__muldf3+0x848>
  831960:	01001004 	movi	r4,64
  831964:	20c7c83a 	sub	r3,r4,r3
  831968:	88e2983a 	sll	r17,r17,r3
  83196c:	8ca4b03a 	or	r18,r17,r18
  831970:	9004c03a 	cmpne	r2,r18,zero
  831974:	2884b03a 	or	r2,r5,r2
  831978:	144001cc 	andi	r17,r2,7
  83197c:	88000d1e 	bne	r17,zero,8319b4 <__muldf3+0x834>
  831980:	0021883a 	mov	r16,zero
  831984:	102cd0fa 	srli	r22,r2,3
  831988:	3027883a 	mov	r19,r6
  83198c:	0005883a 	mov	r2,zero
  831990:	b46cb03a 	or	r22,r22,r17
  831994:	003e5906 	br	8312fc <__alt_mem_epcs_flash_controller_0+0xff8282fc>
  831998:	1007883a 	mov	r3,r2
  83199c:	0023883a 	mov	r17,zero
  8319a0:	8820927a 	slli	r16,r17,9
  8319a4:	1805883a 	mov	r2,r3
  8319a8:	8822977a 	slli	r17,r17,29
  8319ac:	8020d33a 	srli	r16,r16,12
  8319b0:	003ff406 	br	831984 <__alt_mem_epcs_flash_controller_0+0xff828984>
  8319b4:	10c003cc 	andi	r3,r2,15
  8319b8:	01000104 	movi	r4,4
  8319bc:	193ff626 	beq	r3,r4,831998 <__alt_mem_epcs_flash_controller_0+0xff828998>
  8319c0:	0023883a 	mov	r17,zero
  8319c4:	003fd506 	br	83191c <__alt_mem_epcs_flash_controller_0+0xff82891c>
  8319c8:	0023883a 	mov	r17,zero
  8319cc:	003fe706 	br	83196c <__alt_mem_epcs_flash_controller_0+0xff82896c>
  8319d0:	00800434 	movhi	r2,16
  8319d4:	8c000234 	orhi	r16,r17,8
  8319d8:	10bfffc4 	addi	r2,r2,-1
  8319dc:	3027883a 	mov	r19,r6
  8319e0:	80a0703a 	and	r16,r16,r2
  8319e4:	902d883a 	mov	r22,r18
  8319e8:	003eac06 	br	83149c <__alt_mem_epcs_flash_controller_0+0xff82849c>

008319ec <__floatunsidf>:
  8319ec:	defffe04 	addi	sp,sp,-8
  8319f0:	dc000015 	stw	r16,0(sp)
  8319f4:	dfc00115 	stw	ra,4(sp)
  8319f8:	2021883a 	mov	r16,r4
  8319fc:	20002226 	beq	r4,zero,831a88 <__floatunsidf+0x9c>
  831a00:	0831c3c0 	call	831c3c <__clzsi2>
  831a04:	01010784 	movi	r4,1054
  831a08:	2089c83a 	sub	r4,r4,r2
  831a0c:	01810cc4 	movi	r6,1075
  831a10:	310dc83a 	sub	r6,r6,r4
  831a14:	00c007c4 	movi	r3,31
  831a18:	1980120e 	bge	r3,r6,831a64 <__floatunsidf+0x78>
  831a1c:	00c104c4 	movi	r3,1043
  831a20:	1907c83a 	sub	r3,r3,r4
  831a24:	80ca983a 	sll	r5,r16,r3
  831a28:	00800434 	movhi	r2,16
  831a2c:	10bfffc4 	addi	r2,r2,-1
  831a30:	2101ffcc 	andi	r4,r4,2047
  831a34:	0021883a 	mov	r16,zero
  831a38:	288a703a 	and	r5,r5,r2
  831a3c:	2008953a 	slli	r4,r4,20
  831a40:	00c00434 	movhi	r3,16
  831a44:	18ffffc4 	addi	r3,r3,-1
  831a48:	28c6703a 	and	r3,r5,r3
  831a4c:	8005883a 	mov	r2,r16
  831a50:	1906b03a 	or	r3,r3,r4
  831a54:	dfc00117 	ldw	ra,4(sp)
  831a58:	dc000017 	ldw	r16,0(sp)
  831a5c:	dec00204 	addi	sp,sp,8
  831a60:	f800283a 	ret
  831a64:	00c002c4 	movi	r3,11
  831a68:	188bc83a 	sub	r5,r3,r2
  831a6c:	814ad83a 	srl	r5,r16,r5
  831a70:	00c00434 	movhi	r3,16
  831a74:	18ffffc4 	addi	r3,r3,-1
  831a78:	81a0983a 	sll	r16,r16,r6
  831a7c:	2101ffcc 	andi	r4,r4,2047
  831a80:	28ca703a 	and	r5,r5,r3
  831a84:	003fed06 	br	831a3c <__alt_mem_epcs_flash_controller_0+0xff828a3c>
  831a88:	0009883a 	mov	r4,zero
  831a8c:	000b883a 	mov	r5,zero
  831a90:	003fea06 	br	831a3c <__alt_mem_epcs_flash_controller_0+0xff828a3c>

00831a94 <__truncdfsf2>:
  831a94:	2810d53a 	srli	r8,r5,20
  831a98:	01c00434 	movhi	r7,16
  831a9c:	39ffffc4 	addi	r7,r7,-1
  831aa0:	29ce703a 	and	r7,r5,r7
  831aa4:	4201ffcc 	andi	r8,r8,2047
  831aa8:	380e90fa 	slli	r7,r7,3
  831aac:	200cd77a 	srli	r6,r4,29
  831ab0:	42400044 	addi	r9,r8,1
  831ab4:	4a41ffcc 	andi	r9,r9,2047
  831ab8:	00c00044 	movi	r3,1
  831abc:	280ad7fa 	srli	r5,r5,31
  831ac0:	31ceb03a 	or	r7,r6,r7
  831ac4:	200490fa 	slli	r2,r4,3
  831ac8:	1a40230e 	bge	r3,r9,831b58 <__truncdfsf2+0xc4>
  831acc:	40ff2004 	addi	r3,r8,-896
  831ad0:	01803f84 	movi	r6,254
  831ad4:	30c01516 	blt	r6,r3,831b2c <__truncdfsf2+0x98>
  831ad8:	00c0380e 	bge	zero,r3,831bbc <__truncdfsf2+0x128>
  831adc:	200c91ba 	slli	r6,r4,6
  831ae0:	380e90fa 	slli	r7,r7,3
  831ae4:	1004d77a 	srli	r2,r2,29
  831ae8:	300cc03a 	cmpne	r6,r6,zero
  831aec:	31ccb03a 	or	r6,r6,r7
  831af0:	308cb03a 	or	r6,r6,r2
  831af4:	308001cc 	andi	r2,r6,7
  831af8:	10000426 	beq	r2,zero,831b0c <__truncdfsf2+0x78>
  831afc:	308003cc 	andi	r2,r6,15
  831b00:	01000104 	movi	r4,4
  831b04:	11000126 	beq	r2,r4,831b0c <__truncdfsf2+0x78>
  831b08:	31800104 	addi	r6,r6,4
  831b0c:	3081002c 	andhi	r2,r6,1024
  831b10:	10001626 	beq	r2,zero,831b6c <__truncdfsf2+0xd8>
  831b14:	18c00044 	addi	r3,r3,1
  831b18:	00803fc4 	movi	r2,255
  831b1c:	18800326 	beq	r3,r2,831b2c <__truncdfsf2+0x98>
  831b20:	300c91ba 	slli	r6,r6,6
  831b24:	300cd27a 	srli	r6,r6,9
  831b28:	00000206 	br	831b34 <__truncdfsf2+0xa0>
  831b2c:	00ffffc4 	movi	r3,-1
  831b30:	000d883a 	mov	r6,zero
  831b34:	18c03fcc 	andi	r3,r3,255
  831b38:	180895fa 	slli	r4,r3,23
  831b3c:	00c02034 	movhi	r3,128
  831b40:	280a97fa 	slli	r5,r5,31
  831b44:	18ffffc4 	addi	r3,r3,-1
  831b48:	30c6703a 	and	r3,r6,r3
  831b4c:	1906b03a 	or	r3,r3,r4
  831b50:	1944b03a 	or	r2,r3,r5
  831b54:	f800283a 	ret
  831b58:	40000b1e 	bne	r8,zero,831b88 <__truncdfsf2+0xf4>
  831b5c:	388cb03a 	or	r6,r7,r2
  831b60:	0007883a 	mov	r3,zero
  831b64:	30000426 	beq	r6,zero,831b78 <__truncdfsf2+0xe4>
  831b68:	01800144 	movi	r6,5
  831b6c:	00803fc4 	movi	r2,255
  831b70:	300cd0fa 	srli	r6,r6,3
  831b74:	18800a26 	beq	r3,r2,831ba0 <__truncdfsf2+0x10c>
  831b78:	00802034 	movhi	r2,128
  831b7c:	10bfffc4 	addi	r2,r2,-1
  831b80:	308c703a 	and	r6,r6,r2
  831b84:	003feb06 	br	831b34 <__alt_mem_epcs_flash_controller_0+0xff828b34>
  831b88:	3888b03a 	or	r4,r7,r2
  831b8c:	203fe726 	beq	r4,zero,831b2c <__alt_mem_epcs_flash_controller_0+0xff828b2c>
  831b90:	380c90fa 	slli	r6,r7,3
  831b94:	00c03fc4 	movi	r3,255
  831b98:	31808034 	orhi	r6,r6,512
  831b9c:	003fd506 	br	831af4 <__alt_mem_epcs_flash_controller_0+0xff828af4>
  831ba0:	303fe226 	beq	r6,zero,831b2c <__alt_mem_epcs_flash_controller_0+0xff828b2c>
  831ba4:	00802034 	movhi	r2,128
  831ba8:	31801034 	orhi	r6,r6,64
  831bac:	10bfffc4 	addi	r2,r2,-1
  831bb0:	00ffffc4 	movi	r3,-1
  831bb4:	308c703a 	and	r6,r6,r2
  831bb8:	003fde06 	br	831b34 <__alt_mem_epcs_flash_controller_0+0xff828b34>
  831bbc:	013ffa44 	movi	r4,-23
  831bc0:	19000e16 	blt	r3,r4,831bfc <__truncdfsf2+0x168>
  831bc4:	01000784 	movi	r4,30
  831bc8:	20c9c83a 	sub	r4,r4,r3
  831bcc:	018007c4 	movi	r6,31
  831bd0:	39c02034 	orhi	r7,r7,128
  831bd4:	31000b16 	blt	r6,r4,831c04 <__truncdfsf2+0x170>
  831bd8:	423f2084 	addi	r8,r8,-894
  831bdc:	120c983a 	sll	r6,r2,r8
  831be0:	3a0e983a 	sll	r7,r7,r8
  831be4:	1104d83a 	srl	r2,r2,r4
  831be8:	300cc03a 	cmpne	r6,r6,zero
  831bec:	31ceb03a 	or	r7,r6,r7
  831bf0:	388cb03a 	or	r6,r7,r2
  831bf4:	0007883a 	mov	r3,zero
  831bf8:	003fbe06 	br	831af4 <__alt_mem_epcs_flash_controller_0+0xff828af4>
  831bfc:	0007883a 	mov	r3,zero
  831c00:	003fd906 	br	831b68 <__alt_mem_epcs_flash_controller_0+0xff828b68>
  831c04:	01bfff84 	movi	r6,-2
  831c08:	30cdc83a 	sub	r6,r6,r3
  831c0c:	00c00804 	movi	r3,32
  831c10:	398cd83a 	srl	r6,r7,r6
  831c14:	20c00726 	beq	r4,r3,831c34 <__truncdfsf2+0x1a0>
  831c18:	423f2884 	addi	r8,r8,-862
  831c1c:	3a0e983a 	sll	r7,r7,r8
  831c20:	3884b03a 	or	r2,r7,r2
  831c24:	1004c03a 	cmpne	r2,r2,zero
  831c28:	118cb03a 	or	r6,r2,r6
  831c2c:	0007883a 	mov	r3,zero
  831c30:	003fb006 	br	831af4 <__alt_mem_epcs_flash_controller_0+0xff828af4>
  831c34:	000f883a 	mov	r7,zero
  831c38:	003ff906 	br	831c20 <__alt_mem_epcs_flash_controller_0+0xff828c20>

00831c3c <__clzsi2>:
  831c3c:	00bfffd4 	movui	r2,65535
  831c40:	11000536 	bltu	r2,r4,831c58 <__clzsi2+0x1c>
  831c44:	00803fc4 	movi	r2,255
  831c48:	11000f36 	bltu	r2,r4,831c88 <__clzsi2+0x4c>
  831c4c:	00800804 	movi	r2,32
  831c50:	0007883a 	mov	r3,zero
  831c54:	00000506 	br	831c6c <__clzsi2+0x30>
  831c58:	00804034 	movhi	r2,256
  831c5c:	10bfffc4 	addi	r2,r2,-1
  831c60:	11000c2e 	bgeu	r2,r4,831c94 <__clzsi2+0x58>
  831c64:	00800204 	movi	r2,8
  831c68:	00c00604 	movi	r3,24
  831c6c:	20c8d83a 	srl	r4,r4,r3
  831c70:	00c021b4 	movhi	r3,134
  831c74:	18e5b304 	addi	r3,r3,-26932
  831c78:	1909883a 	add	r4,r3,r4
  831c7c:	20c00003 	ldbu	r3,0(r4)
  831c80:	10c5c83a 	sub	r2,r2,r3
  831c84:	f800283a 	ret
  831c88:	00800604 	movi	r2,24
  831c8c:	00c00204 	movi	r3,8
  831c90:	003ff606 	br	831c6c <__alt_mem_epcs_flash_controller_0+0xff828c6c>
  831c94:	00800404 	movi	r2,16
  831c98:	1007883a 	mov	r3,r2
  831c9c:	003ff306 	br	831c6c <__alt_mem_epcs_flash_controller_0+0xff828c6c>

00831ca0 <clock>:
  831ca0:	008021b4 	movhi	r2,134
  831ca4:	10af7404 	addi	r2,r2,-16944
  831ca8:	11000017 	ldw	r4,0(r2)
  831cac:	defffb04 	addi	sp,sp,-20
  831cb0:	d80b883a 	mov	r5,sp
  831cb4:	dfc00415 	stw	ra,16(sp)
  831cb8:	0838fac0 	call	838fac <_times_r>
  831cbc:	00ffffc4 	movi	r3,-1
  831cc0:	10c00726 	beq	r2,r3,831ce0 <clock+0x40>
  831cc4:	d8c00017 	ldw	r3,0(sp)
  831cc8:	d8800117 	ldw	r2,4(sp)
  831ccc:	1885883a 	add	r2,r3,r2
  831cd0:	d8c00217 	ldw	r3,8(sp)
  831cd4:	10c7883a 	add	r3,r2,r3
  831cd8:	d8800317 	ldw	r2,12(sp)
  831cdc:	1885883a 	add	r2,r3,r2
  831ce0:	dfc00417 	ldw	ra,16(sp)
  831ce4:	dec00504 	addi	sp,sp,20
  831ce8:	f800283a 	ret

00831cec <exit>:
  831cec:	defffe04 	addi	sp,sp,-8
  831cf0:	000b883a 	mov	r5,zero
  831cf4:	dc000015 	stw	r16,0(sp)
  831cf8:	dfc00115 	stw	ra,4(sp)
  831cfc:	2021883a 	mov	r16,r4
  831d00:	083b6c80 	call	83b6c8 <__call_exitprocs>
  831d04:	008021b4 	movhi	r2,134
  831d08:	10af7304 	addi	r2,r2,-16948
  831d0c:	11000017 	ldw	r4,0(r2)
  831d10:	20800f17 	ldw	r2,60(r4)
  831d14:	10000126 	beq	r2,zero,831d1c <exit+0x30>
  831d18:	103ee83a 	callr	r2
  831d1c:	8009883a 	mov	r4,r16
  831d20:	08499780 	call	849978 <_exit>

00831d24 <_fclose_r>:
  831d24:	28003926 	beq	r5,zero,831e0c <_fclose_r+0xe8>
  831d28:	defffc04 	addi	sp,sp,-16
  831d2c:	dc400115 	stw	r17,4(sp)
  831d30:	dc000015 	stw	r16,0(sp)
  831d34:	dfc00315 	stw	ra,12(sp)
  831d38:	dc800215 	stw	r18,8(sp)
  831d3c:	2023883a 	mov	r17,r4
  831d40:	2821883a 	mov	r16,r5
  831d44:	20000226 	beq	r4,zero,831d50 <_fclose_r+0x2c>
  831d48:	20800e17 	ldw	r2,56(r4)
  831d4c:	10002726 	beq	r2,zero,831dec <_fclose_r+0xc8>
  831d50:	8080030f 	ldh	r2,12(r16)
  831d54:	1000071e 	bne	r2,zero,831d74 <_fclose_r+0x50>
  831d58:	0005883a 	mov	r2,zero
  831d5c:	dfc00317 	ldw	ra,12(sp)
  831d60:	dc800217 	ldw	r18,8(sp)
  831d64:	dc400117 	ldw	r17,4(sp)
  831d68:	dc000017 	ldw	r16,0(sp)
  831d6c:	dec00404 	addi	sp,sp,16
  831d70:	f800283a 	ret
  831d74:	800b883a 	mov	r5,r16
  831d78:	8809883a 	mov	r4,r17
  831d7c:	0831e280 	call	831e28 <__sflush_r>
  831d80:	1025883a 	mov	r18,r2
  831d84:	80800b17 	ldw	r2,44(r16)
  831d88:	10000426 	beq	r2,zero,831d9c <_fclose_r+0x78>
  831d8c:	81400717 	ldw	r5,28(r16)
  831d90:	8809883a 	mov	r4,r17
  831d94:	103ee83a 	callr	r2
  831d98:	10001616 	blt	r2,zero,831df4 <_fclose_r+0xd0>
  831d9c:	8080030b 	ldhu	r2,12(r16)
  831da0:	1080200c 	andi	r2,r2,128
  831da4:	1000151e 	bne	r2,zero,831dfc <_fclose_r+0xd8>
  831da8:	81400c17 	ldw	r5,48(r16)
  831dac:	28000526 	beq	r5,zero,831dc4 <_fclose_r+0xa0>
  831db0:	80801004 	addi	r2,r16,64
  831db4:	28800226 	beq	r5,r2,831dc0 <_fclose_r+0x9c>
  831db8:	8809883a 	mov	r4,r17
  831dbc:	0832d380 	call	832d38 <_free_r>
  831dc0:	80000c15 	stw	zero,48(r16)
  831dc4:	81401117 	ldw	r5,68(r16)
  831dc8:	28000326 	beq	r5,zero,831dd8 <_fclose_r+0xb4>
  831dcc:	8809883a 	mov	r4,r17
  831dd0:	0832d380 	call	832d38 <_free_r>
  831dd4:	80001115 	stw	zero,68(r16)
  831dd8:	08324400 	call	832440 <__sfp_lock_acquire>
  831ddc:	8000030d 	sth	zero,12(r16)
  831de0:	08324440 	call	832444 <__sfp_lock_release>
  831de4:	9005883a 	mov	r2,r18
  831de8:	003fdc06 	br	831d5c <__alt_mem_epcs_flash_controller_0+0xff828d5c>
  831dec:	08324300 	call	832430 <__sinit>
  831df0:	003fd706 	br	831d50 <__alt_mem_epcs_flash_controller_0+0xff828d50>
  831df4:	04bfffc4 	movi	r18,-1
  831df8:	003fe806 	br	831d9c <__alt_mem_epcs_flash_controller_0+0xff828d9c>
  831dfc:	81400417 	ldw	r5,16(r16)
  831e00:	8809883a 	mov	r4,r17
  831e04:	0832d380 	call	832d38 <_free_r>
  831e08:	003fe706 	br	831da8 <__alt_mem_epcs_flash_controller_0+0xff828da8>
  831e0c:	0005883a 	mov	r2,zero
  831e10:	f800283a 	ret

00831e14 <fclose>:
  831e14:	008021b4 	movhi	r2,134
  831e18:	10af7404 	addi	r2,r2,-16944
  831e1c:	200b883a 	mov	r5,r4
  831e20:	11000017 	ldw	r4,0(r2)
  831e24:	0831d241 	jmpi	831d24 <_fclose_r>

00831e28 <__sflush_r>:
  831e28:	2880030b 	ldhu	r2,12(r5)
  831e2c:	defffb04 	addi	sp,sp,-20
  831e30:	dcc00315 	stw	r19,12(sp)
  831e34:	dc400115 	stw	r17,4(sp)
  831e38:	dfc00415 	stw	ra,16(sp)
  831e3c:	dc800215 	stw	r18,8(sp)
  831e40:	dc000015 	stw	r16,0(sp)
  831e44:	10c0020c 	andi	r3,r2,8
  831e48:	2823883a 	mov	r17,r5
  831e4c:	2027883a 	mov	r19,r4
  831e50:	1800311e 	bne	r3,zero,831f18 <__sflush_r+0xf0>
  831e54:	28c00117 	ldw	r3,4(r5)
  831e58:	10820014 	ori	r2,r2,2048
  831e5c:	2880030d 	sth	r2,12(r5)
  831e60:	00c04b0e 	bge	zero,r3,831f90 <__sflush_r+0x168>
  831e64:	8a000a17 	ldw	r8,40(r17)
  831e68:	40002326 	beq	r8,zero,831ef8 <__sflush_r+0xd0>
  831e6c:	9c000017 	ldw	r16,0(r19)
  831e70:	10c4000c 	andi	r3,r2,4096
  831e74:	98000015 	stw	zero,0(r19)
  831e78:	18004826 	beq	r3,zero,831f9c <__sflush_r+0x174>
  831e7c:	89801417 	ldw	r6,80(r17)
  831e80:	10c0010c 	andi	r3,r2,4
  831e84:	18000626 	beq	r3,zero,831ea0 <__sflush_r+0x78>
  831e88:	88c00117 	ldw	r3,4(r17)
  831e8c:	88800c17 	ldw	r2,48(r17)
  831e90:	30cdc83a 	sub	r6,r6,r3
  831e94:	10000226 	beq	r2,zero,831ea0 <__sflush_r+0x78>
  831e98:	88800f17 	ldw	r2,60(r17)
  831e9c:	308dc83a 	sub	r6,r6,r2
  831ea0:	89400717 	ldw	r5,28(r17)
  831ea4:	000f883a 	mov	r7,zero
  831ea8:	9809883a 	mov	r4,r19
  831eac:	403ee83a 	callr	r8
  831eb0:	00ffffc4 	movi	r3,-1
  831eb4:	10c04426 	beq	r2,r3,831fc8 <__sflush_r+0x1a0>
  831eb8:	88c0030b 	ldhu	r3,12(r17)
  831ebc:	89000417 	ldw	r4,16(r17)
  831ec0:	88000115 	stw	zero,4(r17)
  831ec4:	197dffcc 	andi	r5,r3,63487
  831ec8:	8940030d 	sth	r5,12(r17)
  831ecc:	89000015 	stw	r4,0(r17)
  831ed0:	18c4000c 	andi	r3,r3,4096
  831ed4:	18002c1e 	bne	r3,zero,831f88 <__sflush_r+0x160>
  831ed8:	89400c17 	ldw	r5,48(r17)
  831edc:	9c000015 	stw	r16,0(r19)
  831ee0:	28000526 	beq	r5,zero,831ef8 <__sflush_r+0xd0>
  831ee4:	88801004 	addi	r2,r17,64
  831ee8:	28800226 	beq	r5,r2,831ef4 <__sflush_r+0xcc>
  831eec:	9809883a 	mov	r4,r19
  831ef0:	0832d380 	call	832d38 <_free_r>
  831ef4:	88000c15 	stw	zero,48(r17)
  831ef8:	0005883a 	mov	r2,zero
  831efc:	dfc00417 	ldw	ra,16(sp)
  831f00:	dcc00317 	ldw	r19,12(sp)
  831f04:	dc800217 	ldw	r18,8(sp)
  831f08:	dc400117 	ldw	r17,4(sp)
  831f0c:	dc000017 	ldw	r16,0(sp)
  831f10:	dec00504 	addi	sp,sp,20
  831f14:	f800283a 	ret
  831f18:	2c800417 	ldw	r18,16(r5)
  831f1c:	903ff626 	beq	r18,zero,831ef8 <__alt_mem_epcs_flash_controller_0+0xff828ef8>
  831f20:	2c000017 	ldw	r16,0(r5)
  831f24:	108000cc 	andi	r2,r2,3
  831f28:	2c800015 	stw	r18,0(r5)
  831f2c:	84a1c83a 	sub	r16,r16,r18
  831f30:	1000131e 	bne	r2,zero,831f80 <__sflush_r+0x158>
  831f34:	28800517 	ldw	r2,20(r5)
  831f38:	88800215 	stw	r2,8(r17)
  831f3c:	04000316 	blt	zero,r16,831f4c <__sflush_r+0x124>
  831f40:	003fed06 	br	831ef8 <__alt_mem_epcs_flash_controller_0+0xff828ef8>
  831f44:	90a5883a 	add	r18,r18,r2
  831f48:	043feb0e 	bge	zero,r16,831ef8 <__alt_mem_epcs_flash_controller_0+0xff828ef8>
  831f4c:	88800917 	ldw	r2,36(r17)
  831f50:	89400717 	ldw	r5,28(r17)
  831f54:	800f883a 	mov	r7,r16
  831f58:	900d883a 	mov	r6,r18
  831f5c:	9809883a 	mov	r4,r19
  831f60:	103ee83a 	callr	r2
  831f64:	80a1c83a 	sub	r16,r16,r2
  831f68:	00bff616 	blt	zero,r2,831f44 <__alt_mem_epcs_flash_controller_0+0xff828f44>
  831f6c:	88c0030b 	ldhu	r3,12(r17)
  831f70:	00bfffc4 	movi	r2,-1
  831f74:	18c01014 	ori	r3,r3,64
  831f78:	88c0030d 	sth	r3,12(r17)
  831f7c:	003fdf06 	br	831efc <__alt_mem_epcs_flash_controller_0+0xff828efc>
  831f80:	0005883a 	mov	r2,zero
  831f84:	003fec06 	br	831f38 <__alt_mem_epcs_flash_controller_0+0xff828f38>
  831f88:	88801415 	stw	r2,80(r17)
  831f8c:	003fd206 	br	831ed8 <__alt_mem_epcs_flash_controller_0+0xff828ed8>
  831f90:	28c00f17 	ldw	r3,60(r5)
  831f94:	00ffb316 	blt	zero,r3,831e64 <__alt_mem_epcs_flash_controller_0+0xff828e64>
  831f98:	003fd706 	br	831ef8 <__alt_mem_epcs_flash_controller_0+0xff828ef8>
  831f9c:	89400717 	ldw	r5,28(r17)
  831fa0:	000d883a 	mov	r6,zero
  831fa4:	01c00044 	movi	r7,1
  831fa8:	9809883a 	mov	r4,r19
  831fac:	403ee83a 	callr	r8
  831fb0:	100d883a 	mov	r6,r2
  831fb4:	00bfffc4 	movi	r2,-1
  831fb8:	30801426 	beq	r6,r2,83200c <__sflush_r+0x1e4>
  831fbc:	8880030b 	ldhu	r2,12(r17)
  831fc0:	8a000a17 	ldw	r8,40(r17)
  831fc4:	003fae06 	br	831e80 <__alt_mem_epcs_flash_controller_0+0xff828e80>
  831fc8:	98c00017 	ldw	r3,0(r19)
  831fcc:	183fba26 	beq	r3,zero,831eb8 <__alt_mem_epcs_flash_controller_0+0xff828eb8>
  831fd0:	01000744 	movi	r4,29
  831fd4:	19000626 	beq	r3,r4,831ff0 <__sflush_r+0x1c8>
  831fd8:	01000584 	movi	r4,22
  831fdc:	19000426 	beq	r3,r4,831ff0 <__sflush_r+0x1c8>
  831fe0:	88c0030b 	ldhu	r3,12(r17)
  831fe4:	18c01014 	ori	r3,r3,64
  831fe8:	88c0030d 	sth	r3,12(r17)
  831fec:	003fc306 	br	831efc <__alt_mem_epcs_flash_controller_0+0xff828efc>
  831ff0:	8880030b 	ldhu	r2,12(r17)
  831ff4:	88c00417 	ldw	r3,16(r17)
  831ff8:	88000115 	stw	zero,4(r17)
  831ffc:	10bdffcc 	andi	r2,r2,63487
  832000:	8880030d 	sth	r2,12(r17)
  832004:	88c00015 	stw	r3,0(r17)
  832008:	003fb306 	br	831ed8 <__alt_mem_epcs_flash_controller_0+0xff828ed8>
  83200c:	98800017 	ldw	r2,0(r19)
  832010:	103fea26 	beq	r2,zero,831fbc <__alt_mem_epcs_flash_controller_0+0xff828fbc>
  832014:	00c00744 	movi	r3,29
  832018:	10c00226 	beq	r2,r3,832024 <__sflush_r+0x1fc>
  83201c:	00c00584 	movi	r3,22
  832020:	10c0031e 	bne	r2,r3,832030 <__sflush_r+0x208>
  832024:	9c000015 	stw	r16,0(r19)
  832028:	0005883a 	mov	r2,zero
  83202c:	003fb306 	br	831efc <__alt_mem_epcs_flash_controller_0+0xff828efc>
  832030:	88c0030b 	ldhu	r3,12(r17)
  832034:	3005883a 	mov	r2,r6
  832038:	18c01014 	ori	r3,r3,64
  83203c:	88c0030d 	sth	r3,12(r17)
  832040:	003fae06 	br	831efc <__alt_mem_epcs_flash_controller_0+0xff828efc>

00832044 <_fflush_r>:
  832044:	defffd04 	addi	sp,sp,-12
  832048:	dc000115 	stw	r16,4(sp)
  83204c:	dfc00215 	stw	ra,8(sp)
  832050:	2021883a 	mov	r16,r4
  832054:	20000226 	beq	r4,zero,832060 <_fflush_r+0x1c>
  832058:	20800e17 	ldw	r2,56(r4)
  83205c:	10000c26 	beq	r2,zero,832090 <_fflush_r+0x4c>
  832060:	2880030f 	ldh	r2,12(r5)
  832064:	1000051e 	bne	r2,zero,83207c <_fflush_r+0x38>
  832068:	0005883a 	mov	r2,zero
  83206c:	dfc00217 	ldw	ra,8(sp)
  832070:	dc000117 	ldw	r16,4(sp)
  832074:	dec00304 	addi	sp,sp,12
  832078:	f800283a 	ret
  83207c:	8009883a 	mov	r4,r16
  832080:	dfc00217 	ldw	ra,8(sp)
  832084:	dc000117 	ldw	r16,4(sp)
  832088:	dec00304 	addi	sp,sp,12
  83208c:	0831e281 	jmpi	831e28 <__sflush_r>
  832090:	d9400015 	stw	r5,0(sp)
  832094:	08324300 	call	832430 <__sinit>
  832098:	d9400017 	ldw	r5,0(sp)
  83209c:	003ff006 	br	832060 <__alt_mem_epcs_flash_controller_0+0xff829060>

008320a0 <fflush>:
  8320a0:	20000526 	beq	r4,zero,8320b8 <fflush+0x18>
  8320a4:	008021b4 	movhi	r2,134
  8320a8:	10af7404 	addi	r2,r2,-16944
  8320ac:	200b883a 	mov	r5,r4
  8320b0:	11000017 	ldw	r4,0(r2)
  8320b4:	08320441 	jmpi	832044 <_fflush_r>
  8320b8:	008021b4 	movhi	r2,134
  8320bc:	10af7304 	addi	r2,r2,-16948
  8320c0:	11000017 	ldw	r4,0(r2)
  8320c4:	014020f4 	movhi	r5,131
  8320c8:	29481104 	addi	r5,r5,8260
  8320cc:	083310c1 	jmpi	83310c <_fwalk_reent>

008320d0 <__fp_unlock>:
  8320d0:	0005883a 	mov	r2,zero
  8320d4:	f800283a 	ret

008320d8 <_cleanup_r>:
  8320d8:	014020f4 	movhi	r5,131
  8320dc:	29474904 	addi	r5,r5,7460
  8320e0:	083310c1 	jmpi	83310c <_fwalk_reent>

008320e4 <__sinit.part.1>:
  8320e4:	defff704 	addi	sp,sp,-36
  8320e8:	00c020f4 	movhi	r3,131
  8320ec:	dfc00815 	stw	ra,32(sp)
  8320f0:	ddc00715 	stw	r23,28(sp)
  8320f4:	dd800615 	stw	r22,24(sp)
  8320f8:	dd400515 	stw	r21,20(sp)
  8320fc:	dd000415 	stw	r20,16(sp)
  832100:	dcc00315 	stw	r19,12(sp)
  832104:	dc800215 	stw	r18,8(sp)
  832108:	dc400115 	stw	r17,4(sp)
  83210c:	dc000015 	stw	r16,0(sp)
  832110:	18c83604 	addi	r3,r3,8408
  832114:	24000117 	ldw	r16,4(r4)
  832118:	20c00f15 	stw	r3,60(r4)
  83211c:	2080bb04 	addi	r2,r4,748
  832120:	00c000c4 	movi	r3,3
  832124:	20c0b915 	stw	r3,740(r4)
  832128:	2080ba15 	stw	r2,744(r4)
  83212c:	2000b815 	stw	zero,736(r4)
  832130:	05c00204 	movi	r23,8
  832134:	00800104 	movi	r2,4
  832138:	2025883a 	mov	r18,r4
  83213c:	b80d883a 	mov	r6,r23
  832140:	81001704 	addi	r4,r16,92
  832144:	000b883a 	mov	r5,zero
  832148:	80000015 	stw	zero,0(r16)
  83214c:	80000115 	stw	zero,4(r16)
  832150:	80000215 	stw	zero,8(r16)
  832154:	8080030d 	sth	r2,12(r16)
  832158:	80001915 	stw	zero,100(r16)
  83215c:	8000038d 	sth	zero,14(r16)
  832160:	80000415 	stw	zero,16(r16)
  832164:	80000515 	stw	zero,20(r16)
  832168:	80000615 	stw	zero,24(r16)
  83216c:	0833d940 	call	833d94 <memset>
  832170:	058020f4 	movhi	r22,131
  832174:	94400217 	ldw	r17,8(r18)
  832178:	054020f4 	movhi	r21,131
  83217c:	050020f4 	movhi	r20,131
  832180:	04c020f4 	movhi	r19,131
  832184:	b593f504 	addi	r22,r22,20436
  832188:	ad540c04 	addi	r21,r21,20528
  83218c:	a5142b04 	addi	r20,r20,20652
  832190:	9cd44204 	addi	r19,r19,20744
  832194:	85800815 	stw	r22,32(r16)
  832198:	85400915 	stw	r21,36(r16)
  83219c:	85000a15 	stw	r20,40(r16)
  8321a0:	84c00b15 	stw	r19,44(r16)
  8321a4:	84000715 	stw	r16,28(r16)
  8321a8:	00800284 	movi	r2,10
  8321ac:	8880030d 	sth	r2,12(r17)
  8321b0:	00800044 	movi	r2,1
  8321b4:	b80d883a 	mov	r6,r23
  8321b8:	89001704 	addi	r4,r17,92
  8321bc:	000b883a 	mov	r5,zero
  8321c0:	88000015 	stw	zero,0(r17)
  8321c4:	88000115 	stw	zero,4(r17)
  8321c8:	88000215 	stw	zero,8(r17)
  8321cc:	88001915 	stw	zero,100(r17)
  8321d0:	8880038d 	sth	r2,14(r17)
  8321d4:	88000415 	stw	zero,16(r17)
  8321d8:	88000515 	stw	zero,20(r17)
  8321dc:	88000615 	stw	zero,24(r17)
  8321e0:	0833d940 	call	833d94 <memset>
  8321e4:	94000317 	ldw	r16,12(r18)
  8321e8:	00800484 	movi	r2,18
  8321ec:	8c400715 	stw	r17,28(r17)
  8321f0:	8d800815 	stw	r22,32(r17)
  8321f4:	8d400915 	stw	r21,36(r17)
  8321f8:	8d000a15 	stw	r20,40(r17)
  8321fc:	8cc00b15 	stw	r19,44(r17)
  832200:	8080030d 	sth	r2,12(r16)
  832204:	00800084 	movi	r2,2
  832208:	80000015 	stw	zero,0(r16)
  83220c:	80000115 	stw	zero,4(r16)
  832210:	80000215 	stw	zero,8(r16)
  832214:	80001915 	stw	zero,100(r16)
  832218:	8080038d 	sth	r2,14(r16)
  83221c:	80000415 	stw	zero,16(r16)
  832220:	80000515 	stw	zero,20(r16)
  832224:	80000615 	stw	zero,24(r16)
  832228:	b80d883a 	mov	r6,r23
  83222c:	000b883a 	mov	r5,zero
  832230:	81001704 	addi	r4,r16,92
  832234:	0833d940 	call	833d94 <memset>
  832238:	00800044 	movi	r2,1
  83223c:	84000715 	stw	r16,28(r16)
  832240:	85800815 	stw	r22,32(r16)
  832244:	85400915 	stw	r21,36(r16)
  832248:	85000a15 	stw	r20,40(r16)
  83224c:	84c00b15 	stw	r19,44(r16)
  832250:	90800e15 	stw	r2,56(r18)
  832254:	dfc00817 	ldw	ra,32(sp)
  832258:	ddc00717 	ldw	r23,28(sp)
  83225c:	dd800617 	ldw	r22,24(sp)
  832260:	dd400517 	ldw	r21,20(sp)
  832264:	dd000417 	ldw	r20,16(sp)
  832268:	dcc00317 	ldw	r19,12(sp)
  83226c:	dc800217 	ldw	r18,8(sp)
  832270:	dc400117 	ldw	r17,4(sp)
  832274:	dc000017 	ldw	r16,0(sp)
  832278:	dec00904 	addi	sp,sp,36
  83227c:	f800283a 	ret

00832280 <__fp_lock>:
  832280:	0005883a 	mov	r2,zero
  832284:	f800283a 	ret

00832288 <__sfmoreglue>:
  832288:	defffc04 	addi	sp,sp,-16
  83228c:	dc800215 	stw	r18,8(sp)
  832290:	2825883a 	mov	r18,r5
  832294:	dc000015 	stw	r16,0(sp)
  832298:	01401a04 	movi	r5,104
  83229c:	2021883a 	mov	r16,r4
  8322a0:	913fffc4 	addi	r4,r18,-1
  8322a4:	dfc00315 	stw	ra,12(sp)
  8322a8:	dc400115 	stw	r17,4(sp)
  8322ac:	08301e80 	call	8301e8 <__mulsi3>
  8322b0:	8009883a 	mov	r4,r16
  8322b4:	11401d04 	addi	r5,r2,116
  8322b8:	1023883a 	mov	r17,r2
  8322bc:	083335c0 	call	83335c <_malloc_r>
  8322c0:	1021883a 	mov	r16,r2
  8322c4:	10000726 	beq	r2,zero,8322e4 <__sfmoreglue+0x5c>
  8322c8:	11000304 	addi	r4,r2,12
  8322cc:	10000015 	stw	zero,0(r2)
  8322d0:	14800115 	stw	r18,4(r2)
  8322d4:	11000215 	stw	r4,8(r2)
  8322d8:	89801a04 	addi	r6,r17,104
  8322dc:	000b883a 	mov	r5,zero
  8322e0:	0833d940 	call	833d94 <memset>
  8322e4:	8005883a 	mov	r2,r16
  8322e8:	dfc00317 	ldw	ra,12(sp)
  8322ec:	dc800217 	ldw	r18,8(sp)
  8322f0:	dc400117 	ldw	r17,4(sp)
  8322f4:	dc000017 	ldw	r16,0(sp)
  8322f8:	dec00404 	addi	sp,sp,16
  8322fc:	f800283a 	ret

00832300 <__sfp>:
  832300:	defffb04 	addi	sp,sp,-20
  832304:	dc000015 	stw	r16,0(sp)
  832308:	040021b4 	movhi	r16,134
  83230c:	842f7304 	addi	r16,r16,-16948
  832310:	dcc00315 	stw	r19,12(sp)
  832314:	2027883a 	mov	r19,r4
  832318:	81000017 	ldw	r4,0(r16)
  83231c:	dfc00415 	stw	ra,16(sp)
  832320:	dc800215 	stw	r18,8(sp)
  832324:	20800e17 	ldw	r2,56(r4)
  832328:	dc400115 	stw	r17,4(sp)
  83232c:	1000021e 	bne	r2,zero,832338 <__sfp+0x38>
  832330:	08320e40 	call	8320e4 <__sinit.part.1>
  832334:	81000017 	ldw	r4,0(r16)
  832338:	2480b804 	addi	r18,r4,736
  83233c:	047fffc4 	movi	r17,-1
  832340:	91000117 	ldw	r4,4(r18)
  832344:	94000217 	ldw	r16,8(r18)
  832348:	213fffc4 	addi	r4,r4,-1
  83234c:	20000a16 	blt	r4,zero,832378 <__sfp+0x78>
  832350:	8080030f 	ldh	r2,12(r16)
  832354:	10000c26 	beq	r2,zero,832388 <__sfp+0x88>
  832358:	80c01d04 	addi	r3,r16,116
  83235c:	00000206 	br	832368 <__sfp+0x68>
  832360:	18bfe60f 	ldh	r2,-104(r3)
  832364:	10000826 	beq	r2,zero,832388 <__sfp+0x88>
  832368:	213fffc4 	addi	r4,r4,-1
  83236c:	1c3ffd04 	addi	r16,r3,-12
  832370:	18c01a04 	addi	r3,r3,104
  832374:	247ffa1e 	bne	r4,r17,832360 <__alt_mem_epcs_flash_controller_0+0xff829360>
  832378:	90800017 	ldw	r2,0(r18)
  83237c:	10001d26 	beq	r2,zero,8323f4 <__sfp+0xf4>
  832380:	1025883a 	mov	r18,r2
  832384:	003fee06 	br	832340 <__alt_mem_epcs_flash_controller_0+0xff829340>
  832388:	00bfffc4 	movi	r2,-1
  83238c:	8080038d 	sth	r2,14(r16)
  832390:	00800044 	movi	r2,1
  832394:	8080030d 	sth	r2,12(r16)
  832398:	80001915 	stw	zero,100(r16)
  83239c:	80000015 	stw	zero,0(r16)
  8323a0:	80000215 	stw	zero,8(r16)
  8323a4:	80000115 	stw	zero,4(r16)
  8323a8:	80000415 	stw	zero,16(r16)
  8323ac:	80000515 	stw	zero,20(r16)
  8323b0:	80000615 	stw	zero,24(r16)
  8323b4:	01800204 	movi	r6,8
  8323b8:	000b883a 	mov	r5,zero
  8323bc:	81001704 	addi	r4,r16,92
  8323c0:	0833d940 	call	833d94 <memset>
  8323c4:	8005883a 	mov	r2,r16
  8323c8:	80000c15 	stw	zero,48(r16)
  8323cc:	80000d15 	stw	zero,52(r16)
  8323d0:	80001115 	stw	zero,68(r16)
  8323d4:	80001215 	stw	zero,72(r16)
  8323d8:	dfc00417 	ldw	ra,16(sp)
  8323dc:	dcc00317 	ldw	r19,12(sp)
  8323e0:	dc800217 	ldw	r18,8(sp)
  8323e4:	dc400117 	ldw	r17,4(sp)
  8323e8:	dc000017 	ldw	r16,0(sp)
  8323ec:	dec00504 	addi	sp,sp,20
  8323f0:	f800283a 	ret
  8323f4:	01400104 	movi	r5,4
  8323f8:	9809883a 	mov	r4,r19
  8323fc:	08322880 	call	832288 <__sfmoreglue>
  832400:	90800015 	stw	r2,0(r18)
  832404:	103fde1e 	bne	r2,zero,832380 <__alt_mem_epcs_flash_controller_0+0xff829380>
  832408:	00800304 	movi	r2,12
  83240c:	98800015 	stw	r2,0(r19)
  832410:	0005883a 	mov	r2,zero
  832414:	003ff006 	br	8323d8 <__alt_mem_epcs_flash_controller_0+0xff8293d8>

00832418 <_cleanup>:
  832418:	008021b4 	movhi	r2,134
  83241c:	10af7304 	addi	r2,r2,-16948
  832420:	11000017 	ldw	r4,0(r2)
  832424:	014020f4 	movhi	r5,131
  832428:	29474904 	addi	r5,r5,7460
  83242c:	083310c1 	jmpi	83310c <_fwalk_reent>

00832430 <__sinit>:
  832430:	20800e17 	ldw	r2,56(r4)
  832434:	10000126 	beq	r2,zero,83243c <__sinit+0xc>
  832438:	f800283a 	ret
  83243c:	08320e41 	jmpi	8320e4 <__sinit.part.1>

00832440 <__sfp_lock_acquire>:
  832440:	f800283a 	ret

00832444 <__sfp_lock_release>:
  832444:	f800283a 	ret

00832448 <__sinit_lock_acquire>:
  832448:	f800283a 	ret

0083244c <__sinit_lock_release>:
  83244c:	f800283a 	ret

00832450 <__fp_lock_all>:
  832450:	008021b4 	movhi	r2,134
  832454:	10af7404 	addi	r2,r2,-16944
  832458:	11000017 	ldw	r4,0(r2)
  83245c:	014020f4 	movhi	r5,131
  832460:	2948a004 	addi	r5,r5,8832
  832464:	08330481 	jmpi	833048 <_fwalk>

00832468 <__fp_unlock_all>:
  832468:	008021b4 	movhi	r2,134
  83246c:	10af7404 	addi	r2,r2,-16944
  832470:	11000017 	ldw	r4,0(r2)
  832474:	014020f4 	movhi	r5,131
  832478:	29483404 	addi	r5,r5,8400
  83247c:	08330481 	jmpi	833048 <_fwalk>

00832480 <fmemseeker>:
  832480:	00c00044 	movi	r3,1
  832484:	3005883a 	mov	r2,r6
  832488:	38c01f26 	beq	r7,r3,832508 <fmemseeker+0x88>
  83248c:	00c00084 	movi	r3,2
  832490:	38c01a26 	beq	r7,r3,8324fc <fmemseeker+0x7c>
  832494:	10002516 	blt	r2,zero,83252c <fmemseeker+0xac>
  832498:	28c00417 	ldw	r3,16(r5)
  83249c:	18801f36 	bltu	r3,r2,83251c <fmemseeker+0x9c>
  8324a0:	28c00547 	ldb	r3,21(r5)
  8324a4:	18001326 	beq	r3,zero,8324f4 <fmemseeker+0x74>
  8324a8:	29000217 	ldw	r4,8(r5)
  8324ac:	28c00317 	ldw	r3,12(r5)
  8324b0:	20c0182e 	bgeu	r4,r3,832514 <fmemseeker+0x94>
  8324b4:	29800117 	ldw	r6,4(r5)
  8324b8:	28c00583 	ldbu	r3,22(r5)
  8324bc:	3109883a 	add	r4,r6,r4
  8324c0:	20c00005 	stb	r3,0(r4)
  8324c4:	28c00547 	ldb	r3,21(r5)
  8324c8:	28000585 	stb	zero,22(r5)
  8324cc:	28800215 	stw	r2,8(r5)
  8324d0:	18000926 	beq	r3,zero,8324f8 <fmemseeker+0x78>
  8324d4:	28c00317 	ldw	r3,12(r5)
  8324d8:	10c0072e 	bgeu	r2,r3,8324f8 <fmemseeker+0x78>
  8324dc:	28c00117 	ldw	r3,4(r5)
  8324e0:	1887883a 	add	r3,r3,r2
  8324e4:	19000003 	ldbu	r4,0(r3)
  8324e8:	29000585 	stb	r4,22(r5)
  8324ec:	18000005 	stb	zero,0(r3)
  8324f0:	f800283a 	ret
  8324f4:	28800215 	stw	r2,8(r5)
  8324f8:	f800283a 	ret
  8324fc:	28c00317 	ldw	r3,12(r5)
  832500:	30c5883a 	add	r2,r6,r3
  832504:	003fe306 	br	832494 <__alt_mem_epcs_flash_controller_0+0xff829494>
  832508:	28c00217 	ldw	r3,8(r5)
  83250c:	30c5883a 	add	r2,r6,r3
  832510:	003fe006 	br	832494 <__alt_mem_epcs_flash_controller_0+0xff829494>
  832514:	28800215 	stw	r2,8(r5)
  832518:	003fef06 	br	8324d8 <__alt_mem_epcs_flash_controller_0+0xff8294d8>
  83251c:	00800704 	movi	r2,28
  832520:	20800015 	stw	r2,0(r4)
  832524:	00bfffc4 	movi	r2,-1
  832528:	f800283a 	ret
  83252c:	00800584 	movi	r2,22
  832530:	20800015 	stw	r2,0(r4)
  832534:	00bfffc4 	movi	r2,-1
  832538:	f800283a 	ret

0083253c <fmemcloser>:
  83253c:	29400017 	ldw	r5,0(r5)
  832540:	deffff04 	addi	sp,sp,-4
  832544:	dfc00015 	stw	ra,0(sp)
  832548:	0832d380 	call	832d38 <_free_r>
  83254c:	0005883a 	mov	r2,zero
  832550:	dfc00017 	ldw	ra,0(sp)
  832554:	dec00104 	addi	sp,sp,4
  832558:	f800283a 	ret

0083255c <fmemwriter>:
  83255c:	defffb04 	addi	sp,sp,-20
  832560:	dcc00315 	stw	r19,12(sp)
  832564:	dc800215 	stw	r18,8(sp)
  832568:	dc400115 	stw	r17,4(sp)
  83256c:	dc000015 	stw	r16,0(sp)
  832570:	dfc00415 	stw	ra,16(sp)
  832574:	28800507 	ldb	r2,20(r5)
  832578:	2821883a 	mov	r16,r5
  83257c:	2027883a 	mov	r19,r4
  832580:	3025883a 	mov	r18,r6
  832584:	3823883a 	mov	r17,r7
  832588:	10002726 	beq	r2,zero,832628 <fmemwriter+0xcc>
  83258c:	28c00317 	ldw	r3,12(r5)
  832590:	28c00215 	stw	r3,8(r5)
  832594:	1809883a 	mov	r4,r3
  832598:	81400417 	ldw	r5,16(r16)
  83259c:	81c00547 	ldb	r7,21(r16)
  8325a0:	88c5883a 	add	r2,r17,r3
  8325a4:	29cdc83a 	sub	r6,r5,r7
  8325a8:	30801d2e 	bgeu	r6,r2,832620 <fmemwriter+0xc4>
  8325ac:	380d883a 	mov	r6,r7
  8325b0:	28e3c83a 	sub	r17,r5,r3
  8325b4:	2805883a 	mov	r2,r5
  8325b8:	2080122e 	bgeu	r4,r2,832604 <fmemwriter+0xa8>
  8325bc:	80800315 	stw	r2,12(r16)
  8325c0:	1189c83a 	sub	r4,r2,r6
  8325c4:	21402336 	bltu	r4,r5,832654 <fmemwriter+0xf8>
  8325c8:	80800215 	stw	r2,8(r16)
  8325cc:	89801026 	beq	r17,r6,832610 <fmemwriter+0xb4>
  8325d0:	81000117 	ldw	r4,4(r16)
  8325d4:	898dc83a 	sub	r6,r17,r6
  8325d8:	900b883a 	mov	r5,r18
  8325dc:	20c9883a 	add	r4,r4,r3
  8325e0:	0833c4c0 	call	833c4c <memcpy>
  8325e4:	8805883a 	mov	r2,r17
  8325e8:	dfc00417 	ldw	ra,16(sp)
  8325ec:	dcc00317 	ldw	r19,12(sp)
  8325f0:	dc800217 	ldw	r18,8(sp)
  8325f4:	dc400117 	ldw	r17,4(sp)
  8325f8:	dc000017 	ldw	r16,0(sp)
  8325fc:	dec00504 	addi	sp,sp,20
  832600:	f800283a 	ret
  832604:	383ff026 	beq	r7,zero,8325c8 <__alt_mem_epcs_flash_controller_0+0xff8295c8>
  832608:	8800191e 	bne	r17,zero,832670 <fmemwriter+0x114>
  83260c:	80800215 	stw	r2,8(r16)
  832610:	00800704 	movi	r2,28
  832614:	98800015 	stw	r2,0(r19)
  832618:	00bfffc4 	movi	r2,-1
  83261c:	003ff206 	br	8325e8 <__alt_mem_epcs_flash_controller_0+0xff8295e8>
  832620:	000d883a 	mov	r6,zero
  832624:	003fe406 	br	8325b8 <__alt_mem_epcs_flash_controller_0+0xff8295b8>
  832628:	28c00217 	ldw	r3,8(r5)
  83262c:	29000317 	ldw	r4,12(r5)
  832630:	20ffd92e 	bgeu	r4,r3,832598 <__alt_mem_epcs_flash_controller_0+0xff829598>
  832634:	28800117 	ldw	r2,4(r5)
  832638:	190dc83a 	sub	r6,r3,r4
  83263c:	000b883a 	mov	r5,zero
  832640:	1109883a 	add	r4,r2,r4
  832644:	0833d940 	call	833d94 <memset>
  832648:	80c00217 	ldw	r3,8(r16)
  83264c:	81000317 	ldw	r4,12(r16)
  832650:	003fd106 	br	832598 <__alt_mem_epcs_flash_controller_0+0xff829598>
  832654:	80800117 	ldw	r2,4(r16)
  832658:	1109883a 	add	r4,r2,r4
  83265c:	20000005 	stb	zero,0(r4)
  832660:	80c00217 	ldw	r3,8(r16)
  832664:	80000585 	stb	zero,22(r16)
  832668:	88c5883a 	add	r2,r17,r3
  83266c:	003fd606 	br	8325c8 <__alt_mem_epcs_flash_controller_0+0xff8295c8>
  832670:	80c00117 	ldw	r3,4(r16)
  832674:	1185c83a 	sub	r2,r2,r6
  832678:	1885883a 	add	r2,r3,r2
  83267c:	10c00003 	ldbu	r3,0(r2)
  832680:	80c00585 	stb	r3,22(r16)
  832684:	10000005 	stb	zero,0(r2)
  832688:	80c00217 	ldw	r3,8(r16)
  83268c:	88c5883a 	add	r2,r17,r3
  832690:	003fcd06 	br	8325c8 <__alt_mem_epcs_flash_controller_0+0xff8295c8>

00832694 <fmemreader>:
  832694:	28c00217 	ldw	r3,8(r5)
  832698:	28800317 	ldw	r2,12(r5)
  83269c:	10c01b36 	bltu	r2,r3,83270c <fmemreader+0x78>
  8326a0:	defffc04 	addi	sp,sp,-16
  8326a4:	dc800215 	stw	r18,8(sp)
  8326a8:	dc400115 	stw	r17,4(sp)
  8326ac:	dc000015 	stw	r16,0(sp)
  8326b0:	dfc00315 	stw	ra,12(sp)
  8326b4:	10c5c83a 	sub	r2,r2,r3
  8326b8:	2823883a 	mov	r17,r5
  8326bc:	3009883a 	mov	r4,r6
  8326c0:	3821883a 	mov	r16,r7
  8326c4:	3825883a 	mov	r18,r7
  8326c8:	38800236 	bltu	r7,r2,8326d4 <fmemreader+0x40>
  8326cc:	1021883a 	mov	r16,r2
  8326d0:	1025883a 	mov	r18,r2
  8326d4:	89400117 	ldw	r5,4(r17)
  8326d8:	900d883a 	mov	r6,r18
  8326dc:	28cb883a 	add	r5,r5,r3
  8326e0:	0833c4c0 	call	833c4c <memcpy>
  8326e4:	88c00217 	ldw	r3,8(r17)
  8326e8:	8005883a 	mov	r2,r16
  8326ec:	1ca5883a 	add	r18,r3,r18
  8326f0:	8c800215 	stw	r18,8(r17)
  8326f4:	dfc00317 	ldw	ra,12(sp)
  8326f8:	dc800217 	ldw	r18,8(sp)
  8326fc:	dc400117 	ldw	r17,4(sp)
  832700:	dc000017 	ldw	r16,0(sp)
  832704:	dec00404 	addi	sp,sp,16
  832708:	f800283a 	ret
  83270c:	0005883a 	mov	r2,zero
  832710:	f800283a 	ret

00832714 <_fmemopen_r>:
  832714:	defff804 	addi	sp,sp,-32
  832718:	dd000515 	stw	r20,20(sp)
  83271c:	dcc00415 	stw	r19,16(sp)
  832720:	2829883a 	mov	r20,r5
  832724:	3027883a 	mov	r19,r6
  832728:	380b883a 	mov	r5,r7
  83272c:	d80d883a 	mov	r6,sp
  832730:	dd400615 	stw	r21,24(sp)
  832734:	dc000115 	stw	r16,4(sp)
  832738:	dfc00715 	stw	ra,28(sp)
  83273c:	dc800315 	stw	r18,12(sp)
  832740:	dc400215 	stw	r17,8(sp)
  832744:	382b883a 	mov	r21,r7
  832748:	2021883a 	mov	r16,r4
  83274c:	083d1100 	call	83d110 <__sflags>
  832750:	10003826 	beq	r2,zero,832834 <_fmemopen_r+0x120>
  832754:	98006d26 	beq	r19,zero,83290c <_fmemopen_r+0x1f8>
  832758:	1025883a 	mov	r18,r2
  83275c:	a0001826 	beq	r20,zero,8327c0 <_fmemopen_r+0xac>
  832760:	8009883a 	mov	r4,r16
  832764:	08323000 	call	832300 <__sfp>
  832768:	1023883a 	mov	r17,r2
  83276c:	10003126 	beq	r2,zero,832834 <_fmemopen_r+0x120>
  832770:	8009883a 	mov	r4,r16
  832774:	01400604 	movi	r5,24
  832778:	083335c0 	call	83335c <_malloc_r>
  83277c:	1021883a 	mov	r16,r2
  832780:	10002926 	beq	r2,zero,832828 <_fmemopen_r+0x114>
  832784:	9004d0fa 	srli	r2,r18,3
  832788:	84000015 	stw	r16,0(r16)
  83278c:	84c00415 	stw	r19,16(r16)
  832790:	1080004c 	andi	r2,r2,1
  832794:	80800545 	stb	r2,21(r16)
  832798:	80000585 	stb	zero,22(r16)
  83279c:	85000115 	stw	r20,4(r16)
  8327a0:	a8800007 	ldb	r2,0(r21)
  8327a4:	00c01c84 	movi	r3,114
  8327a8:	10c02c26 	beq	r2,r3,83285c <_fmemopen_r+0x148>
  8327ac:	00c01dc4 	movi	r3,119
  8327b0:	10c05126 	beq	r2,r3,8328f8 <_fmemopen_r+0x1e4>
  8327b4:	00c01844 	movi	r3,97
  8327b8:	10c04326 	beq	r2,r3,8328c8 <_fmemopen_r+0x1b4>
  8327bc:	083b8480 	call	83b848 <abort>
  8327c0:	1080040c 	andi	r2,r2,16
  8327c4:	10005126 	beq	r2,zero,83290c <_fmemopen_r+0x1f8>
  8327c8:	8009883a 	mov	r4,r16
  8327cc:	08323000 	call	832300 <__sfp>
  8327d0:	1023883a 	mov	r17,r2
  8327d4:	10001726 	beq	r2,zero,832834 <_fmemopen_r+0x120>
  8327d8:	8009883a 	mov	r4,r16
  8327dc:	99400604 	addi	r5,r19,24
  8327e0:	083335c0 	call	83335c <_malloc_r>
  8327e4:	1021883a 	mov	r16,r2
  8327e8:	10000f26 	beq	r2,zero,832828 <_fmemopen_r+0x114>
  8327ec:	9006d0fa 	srli	r3,r18,3
  8327f0:	9004d23a 	srli	r2,r18,8
  8327f4:	81000604 	addi	r4,r16,24
  8327f8:	18c0004c 	andi	r3,r3,1
  8327fc:	1080004c 	andi	r2,r2,1
  832800:	84000015 	stw	r16,0(r16)
  832804:	84c00415 	stw	r19,16(r16)
  832808:	80c00545 	stb	r3,21(r16)
  83280c:	80000585 	stb	zero,22(r16)
  832810:	81000115 	stw	r4,4(r16)
  832814:	80000605 	stb	zero,24(r16)
  832818:	80000315 	stw	zero,12(r16)
  83281c:	80000215 	stw	zero,8(r16)
  832820:	80800505 	stb	r2,20(r16)
  832824:	00001006 	br	832868 <_fmemopen_r+0x154>
  832828:	08324400 	call	832440 <__sfp_lock_acquire>
  83282c:	8800030d 	sth	zero,12(r17)
  832830:	08324440 	call	832444 <__sfp_lock_release>
  832834:	0005883a 	mov	r2,zero
  832838:	dfc00717 	ldw	ra,28(sp)
  83283c:	dd400617 	ldw	r21,24(sp)
  832840:	dd000517 	ldw	r20,20(sp)
  832844:	dcc00417 	ldw	r19,16(sp)
  832848:	dc800317 	ldw	r18,12(sp)
  83284c:	dc400217 	ldw	r17,8(sp)
  832850:	dc000117 	ldw	r16,4(sp)
  832854:	dec00804 	addi	sp,sp,32
  832858:	f800283a 	ret
  83285c:	80000505 	stb	zero,20(r16)
  832860:	80000215 	stw	zero,8(r16)
  832864:	84c00315 	stw	r19,12(r16)
  832868:	00bfffc4 	movi	r2,-1
  83286c:	8880038d 	sth	r2,14(r17)
  832870:	8c80030d 	sth	r18,12(r17)
  832874:	8c000715 	stw	r16,28(r17)
  832878:	9080050c 	andi	r2,r18,20
  83287c:	10000226 	beq	r2,zero,832888 <_fmemopen_r+0x174>
  832880:	008020f4 	movhi	r2,131
  832884:	1089a504 	addi	r2,r2,9876
  832888:	88800815 	stw	r2,32(r17)
  83288c:	9480060c 	andi	r18,r18,24
  832890:	90000a1e 	bne	r18,zero,8328bc <_fmemopen_r+0x1a8>
  832894:	0005883a 	mov	r2,zero
  832898:	88800915 	stw	r2,36(r17)
  83289c:	008020f4 	movhi	r2,131
  8328a0:	10892004 	addi	r2,r2,9344
  8328a4:	88800a15 	stw	r2,40(r17)
  8328a8:	008020f4 	movhi	r2,131
  8328ac:	10894f04 	addi	r2,r2,9532
  8328b0:	88800b15 	stw	r2,44(r17)
  8328b4:	8805883a 	mov	r2,r17
  8328b8:	003fdf06 	br	832838 <__alt_mem_epcs_flash_controller_0+0xff829838>
  8328bc:	008020f4 	movhi	r2,131
  8328c0:	10895704 	addi	r2,r2,9564
  8328c4:	003ff406 	br	832898 <__alt_mem_epcs_flash_controller_0+0xff829898>
  8328c8:	980d883a 	mov	r6,r19
  8328cc:	000b883a 	mov	r5,zero
  8328d0:	a009883a 	mov	r4,r20
  8328d4:	0833b680 	call	833b68 <memchr>
  8328d8:	10001026 	beq	r2,zero,83291c <_fmemopen_r+0x208>
  8328dc:	80c00117 	ldw	r3,4(r16)
  8328e0:	10c5c83a 	sub	r2,r2,r3
  8328e4:	80800215 	stw	r2,8(r16)
  8328e8:	80800315 	stw	r2,12(r16)
  8328ec:	00800044 	movi	r2,1
  8328f0:	80800505 	stb	r2,20(r16)
  8328f4:	003fdc06 	br	832868 <__alt_mem_epcs_flash_controller_0+0xff829868>
  8328f8:	80000315 	stw	zero,12(r16)
  8328fc:	80000505 	stb	zero,20(r16)
  832900:	80000215 	stw	zero,8(r16)
  832904:	a0000005 	stb	zero,0(r20)
  832908:	003fd706 	br	832868 <__alt_mem_epcs_flash_controller_0+0xff829868>
  83290c:	00800584 	movi	r2,22
  832910:	80800015 	stw	r2,0(r16)
  832914:	0005883a 	mov	r2,zero
  832918:	003fc706 	br	832838 <__alt_mem_epcs_flash_controller_0+0xff829838>
  83291c:	80800547 	ldb	r2,21(r16)
  832920:	84c00215 	stw	r19,8(r16)
  832924:	84c00315 	stw	r19,12(r16)
  832928:	103ff026 	beq	r2,zero,8328ec <__alt_mem_epcs_flash_controller_0+0xff8298ec>
  83292c:	80800117 	ldw	r2,4(r16)
  832930:	14e7883a 	add	r19,r2,r19
  832934:	983fffc5 	stb	zero,-1(r19)
  832938:	003fec06 	br	8328ec <__alt_mem_epcs_flash_controller_0+0xff8298ec>

0083293c <fmemopen>:
  83293c:	008021b4 	movhi	r2,134
  832940:	10af7404 	addi	r2,r2,-16944
  832944:	300f883a 	mov	r7,r6
  832948:	280d883a 	mov	r6,r5
  83294c:	200b883a 	mov	r5,r4
  832950:	11000017 	ldw	r4,0(r2)
  832954:	08327141 	jmpi	832714 <_fmemopen_r>

00832958 <_fprintf_r>:
  832958:	defffe04 	addi	sp,sp,-8
  83295c:	2809883a 	mov	r4,r5
  832960:	300b883a 	mov	r5,r6
  832964:	dfc00015 	stw	ra,0(sp)
  832968:	d9c00115 	stw	r7,4(sp)
  83296c:	d9800104 	addi	r6,sp,4
  832970:	083b2900 	call	83b290 <__vfprintf_internal>
  832974:	dfc00017 	ldw	ra,0(sp)
  832978:	dec00204 	addi	sp,sp,8
  83297c:	f800283a 	ret

00832980 <fprintf>:
  832980:	defffd04 	addi	sp,sp,-12
  832984:	dfc00015 	stw	ra,0(sp)
  832988:	d9800115 	stw	r6,4(sp)
  83298c:	d9c00215 	stw	r7,8(sp)
  832990:	d9800104 	addi	r6,sp,4
  832994:	083b2900 	call	83b290 <__vfprintf_internal>
  832998:	dfc00017 	ldw	ra,0(sp)
  83299c:	dec00304 	addi	sp,sp,12
  8329a0:	f800283a 	ret

008329a4 <_fread_r>:
  8329a4:	defff404 	addi	sp,sp,-48
  8329a8:	dd000615 	stw	r20,24(sp)
  8329ac:	dcc00515 	stw	r19,20(sp)
  8329b0:	2029883a 	mov	r20,r4
  8329b4:	2827883a 	mov	r19,r5
  8329b8:	3809883a 	mov	r4,r7
  8329bc:	300b883a 	mov	r5,r6
  8329c0:	ddc00915 	stw	r23,36(sp)
  8329c4:	dd400715 	stw	r21,28(sp)
  8329c8:	dc000215 	stw	r16,8(sp)
  8329cc:	dfc00b15 	stw	ra,44(sp)
  8329d0:	df000a15 	stw	fp,40(sp)
  8329d4:	dd800815 	stw	r22,32(sp)
  8329d8:	dc800415 	stw	r18,16(sp)
  8329dc:	dc400315 	stw	r17,12(sp)
  8329e0:	302f883a 	mov	r23,r6
  8329e4:	382b883a 	mov	r21,r7
  8329e8:	08301e80 	call	8301e8 <__mulsi3>
  8329ec:	dc000c17 	ldw	r16,48(sp)
  8329f0:	10003826 	beq	r2,zero,832ad4 <_fread_r+0x130>
  8329f4:	102d883a 	mov	r22,r2
  8329f8:	a0000226 	beq	r20,zero,832a04 <_fread_r+0x60>
  8329fc:	a0800e17 	ldw	r2,56(r20)
  832a00:	10006e26 	beq	r2,zero,832bbc <_fread_r+0x218>
  832a04:	8080030b 	ldhu	r2,12(r16)
  832a08:	10c8000c 	andi	r3,r2,8192
  832a0c:	1800061e 	bne	r3,zero,832a28 <_fread_r+0x84>
  832a10:	81001917 	ldw	r4,100(r16)
  832a14:	00f7ffc4 	movi	r3,-8193
  832a18:	10880014 	ori	r2,r2,8192
  832a1c:	20c6703a 	and	r3,r4,r3
  832a20:	8080030d 	sth	r2,12(r16)
  832a24:	80c01915 	stw	r3,100(r16)
  832a28:	84400117 	ldw	r17,4(r16)
  832a2c:	88005f16 	blt	r17,zero,832bac <_fread_r+0x208>
  832a30:	8809883a 	mov	r4,r17
  832a34:	1080008c 	andi	r2,r2,2
  832a38:	1000281e 	bne	r2,zero,832adc <_fread_r+0x138>
  832a3c:	b025883a 	mov	r18,r22
  832a40:	00000b06 	br	832a70 <_fread_r+0xcc>
  832a44:	0833c4c0 	call	833c4c <memcpy>
  832a48:	80800017 	ldw	r2,0(r16)
  832a4c:	9c67883a 	add	r19,r19,r17
  832a50:	9465c83a 	sub	r18,r18,r17
  832a54:	1463883a 	add	r17,r2,r17
  832a58:	800b883a 	mov	r5,r16
  832a5c:	a009883a 	mov	r4,r20
  832a60:	84400015 	stw	r17,0(r16)
  832a64:	0834bf40 	call	834bf4 <__srefill_r>
  832a68:	10004c1e 	bne	r2,zero,832b9c <_fread_r+0x1f8>
  832a6c:	84400117 	ldw	r17,4(r16)
  832a70:	880d883a 	mov	r6,r17
  832a74:	9809883a 	mov	r4,r19
  832a78:	81400017 	ldw	r5,0(r16)
  832a7c:	8cbff136 	bltu	r17,r18,832a44 <__alt_mem_epcs_flash_controller_0+0xff829a44>
  832a80:	900d883a 	mov	r6,r18
  832a84:	0833c4c0 	call	833c4c <memcpy>
  832a88:	80c00117 	ldw	r3,4(r16)
  832a8c:	81000017 	ldw	r4,0(r16)
  832a90:	a805883a 	mov	r2,r21
  832a94:	1c87c83a 	sub	r3,r3,r18
  832a98:	24a5883a 	add	r18,r4,r18
  832a9c:	80c00115 	stw	r3,4(r16)
  832aa0:	84800015 	stw	r18,0(r16)
  832aa4:	dfc00b17 	ldw	ra,44(sp)
  832aa8:	df000a17 	ldw	fp,40(sp)
  832aac:	ddc00917 	ldw	r23,36(sp)
  832ab0:	dd800817 	ldw	r22,32(sp)
  832ab4:	dd400717 	ldw	r21,28(sp)
  832ab8:	dd000617 	ldw	r20,24(sp)
  832abc:	dcc00517 	ldw	r19,20(sp)
  832ac0:	dc800417 	ldw	r18,16(sp)
  832ac4:	dc400317 	ldw	r17,12(sp)
  832ac8:	dc000217 	ldw	r16,8(sp)
  832acc:	dec00c04 	addi	sp,sp,48
  832ad0:	f800283a 	ret
  832ad4:	0005883a 	mov	r2,zero
  832ad8:	003ff206 	br	832aa4 <__alt_mem_epcs_flash_controller_0+0xff829aa4>
  832adc:	b007883a 	mov	r3,r22
  832ae0:	2580012e 	bgeu	r4,r22,832ae8 <_fread_r+0x144>
  832ae4:	2007883a 	mov	r3,r4
  832ae8:	81400017 	ldw	r5,0(r16)
  832aec:	180d883a 	mov	r6,r3
  832af0:	9809883a 	mov	r4,r19
  832af4:	d8c00115 	stw	r3,4(sp)
  832af8:	0833c4c0 	call	833c4c <memcpy>
  832afc:	d8c00117 	ldw	r3,4(sp)
  832b00:	84400017 	ldw	r17,0(r16)
  832b04:	80800117 	ldw	r2,4(r16)
  832b08:	81400c17 	ldw	r5,48(r16)
  832b0c:	88e3883a 	add	r17,r17,r3
  832b10:	10c5c83a 	sub	r2,r2,r3
  832b14:	84400015 	stw	r17,0(r16)
  832b18:	80800115 	stw	r2,4(r16)
  832b1c:	b0e5c83a 	sub	r18,r22,r3
  832b20:	28002c26 	beq	r5,zero,832bd4 <_fread_r+0x230>
  832b24:	90002c26 	beq	r18,zero,832bd8 <_fread_r+0x234>
  832b28:	80801004 	addi	r2,r16,64
  832b2c:	28800526 	beq	r5,r2,832b44 <_fread_r+0x1a0>
  832b30:	a009883a 	mov	r4,r20
  832b34:	d8c00115 	stw	r3,4(sp)
  832b38:	0832d380 	call	832d38 <_free_r>
  832b3c:	d8c00117 	ldw	r3,4(sp)
  832b40:	84400017 	ldw	r17,0(r16)
  832b44:	80000c15 	stw	zero,48(r16)
  832b48:	80800517 	ldw	r2,20(r16)
  832b4c:	87000417 	ldw	fp,16(r16)
  832b50:	98e7883a 	add	r19,r19,r3
  832b54:	d8800015 	stw	r2,0(sp)
  832b58:	00000106 	br	832b60 <_fread_r+0x1bc>
  832b5c:	90001e26 	beq	r18,zero,832bd8 <_fread_r+0x234>
  832b60:	84c00415 	stw	r19,16(r16)
  832b64:	84800515 	stw	r18,20(r16)
  832b68:	84c00015 	stw	r19,0(r16)
  832b6c:	a009883a 	mov	r4,r20
  832b70:	800b883a 	mov	r5,r16
  832b74:	0834bf40 	call	834bf4 <__srefill_r>
  832b78:	d9000017 	ldw	r4,0(sp)
  832b7c:	80c00117 	ldw	r3,4(r16)
  832b80:	87000415 	stw	fp,16(r16)
  832b84:	81000515 	stw	r4,20(r16)
  832b88:	84400015 	stw	r17,0(r16)
  832b8c:	80000115 	stw	zero,4(r16)
  832b90:	90e5c83a 	sub	r18,r18,r3
  832b94:	98e7883a 	add	r19,r19,r3
  832b98:	103ff026 	beq	r2,zero,832b5c <__alt_mem_epcs_flash_controller_0+0xff829b5c>
  832b9c:	b80b883a 	mov	r5,r23
  832ba0:	b489c83a 	sub	r4,r22,r18
  832ba4:	083012c0 	call	83012c <__udivsi3>
  832ba8:	003fbe06 	br	832aa4 <__alt_mem_epcs_flash_controller_0+0xff829aa4>
  832bac:	80000115 	stw	zero,4(r16)
  832bb0:	0009883a 	mov	r4,zero
  832bb4:	0023883a 	mov	r17,zero
  832bb8:	003f9e06 	br	832a34 <__alt_mem_epcs_flash_controller_0+0xff829a34>
  832bbc:	a009883a 	mov	r4,r20
  832bc0:	08324300 	call	832430 <__sinit>
  832bc4:	8080030b 	ldhu	r2,12(r16)
  832bc8:	10c8000c 	andi	r3,r2,8192
  832bcc:	183f961e 	bne	r3,zero,832a28 <__alt_mem_epcs_flash_controller_0+0xff829a28>
  832bd0:	003f8f06 	br	832a10 <__alt_mem_epcs_flash_controller_0+0xff829a10>
  832bd4:	903fdc1e 	bne	r18,zero,832b48 <__alt_mem_epcs_flash_controller_0+0xff829b48>
  832bd8:	a805883a 	mov	r2,r21
  832bdc:	003fb106 	br	832aa4 <__alt_mem_epcs_flash_controller_0+0xff829aa4>

00832be0 <fread>:
  832be0:	defffe04 	addi	sp,sp,-8
  832be4:	008021b4 	movhi	r2,134
  832be8:	d9c00015 	stw	r7,0(sp)
  832bec:	10af7404 	addi	r2,r2,-16944
  832bf0:	300f883a 	mov	r7,r6
  832bf4:	280d883a 	mov	r6,r5
  832bf8:	200b883a 	mov	r5,r4
  832bfc:	11000017 	ldw	r4,0(r2)
  832c00:	dfc00115 	stw	ra,4(sp)
  832c04:	08329a40 	call	8329a4 <_fread_r>
  832c08:	dfc00117 	ldw	ra,4(sp)
  832c0c:	dec00204 	addi	sp,sp,8
  832c10:	f800283a 	ret

00832c14 <_malloc_trim_r>:
  832c14:	defffb04 	addi	sp,sp,-20
  832c18:	dcc00315 	stw	r19,12(sp)
  832c1c:	04c021b4 	movhi	r19,134
  832c20:	dc800215 	stw	r18,8(sp)
  832c24:	dc400115 	stw	r17,4(sp)
  832c28:	dc000015 	stw	r16,0(sp)
  832c2c:	dfc00415 	stw	ra,16(sp)
  832c30:	2821883a 	mov	r16,r5
  832c34:	9ce8f404 	addi	r19,r19,-23600
  832c38:	2025883a 	mov	r18,r4
  832c3c:	084a7100 	call	84a710 <__malloc_lock>
  832c40:	98800217 	ldw	r2,8(r19)
  832c44:	14400117 	ldw	r17,4(r2)
  832c48:	00bfff04 	movi	r2,-4
  832c4c:	88a2703a 	and	r17,r17,r2
  832c50:	8c21c83a 	sub	r16,r17,r16
  832c54:	8403fbc4 	addi	r16,r16,4079
  832c58:	8020d33a 	srli	r16,r16,12
  832c5c:	0083ffc4 	movi	r2,4095
  832c60:	843fffc4 	addi	r16,r16,-1
  832c64:	8020933a 	slli	r16,r16,12
  832c68:	1400060e 	bge	r2,r16,832c84 <_malloc_trim_r+0x70>
  832c6c:	000b883a 	mov	r5,zero
  832c70:	9009883a 	mov	r4,r18
  832c74:	0834dc80 	call	834dc8 <_sbrk_r>
  832c78:	98c00217 	ldw	r3,8(r19)
  832c7c:	1c47883a 	add	r3,r3,r17
  832c80:	10c00a26 	beq	r2,r3,832cac <_malloc_trim_r+0x98>
  832c84:	9009883a 	mov	r4,r18
  832c88:	084a8300 	call	84a830 <__malloc_unlock>
  832c8c:	0005883a 	mov	r2,zero
  832c90:	dfc00417 	ldw	ra,16(sp)
  832c94:	dcc00317 	ldw	r19,12(sp)
  832c98:	dc800217 	ldw	r18,8(sp)
  832c9c:	dc400117 	ldw	r17,4(sp)
  832ca0:	dc000017 	ldw	r16,0(sp)
  832ca4:	dec00504 	addi	sp,sp,20
  832ca8:	f800283a 	ret
  832cac:	040bc83a 	sub	r5,zero,r16
  832cb0:	9009883a 	mov	r4,r18
  832cb4:	0834dc80 	call	834dc8 <_sbrk_r>
  832cb8:	00ffffc4 	movi	r3,-1
  832cbc:	10c00d26 	beq	r2,r3,832cf4 <_malloc_trim_r+0xe0>
  832cc0:	00c021b4 	movhi	r3,134
  832cc4:	18efea04 	addi	r3,r3,-16472
  832cc8:	18800017 	ldw	r2,0(r3)
  832ccc:	99000217 	ldw	r4,8(r19)
  832cd0:	8c23c83a 	sub	r17,r17,r16
  832cd4:	8c400054 	ori	r17,r17,1
  832cd8:	1421c83a 	sub	r16,r2,r16
  832cdc:	24400115 	stw	r17,4(r4)
  832ce0:	9009883a 	mov	r4,r18
  832ce4:	1c000015 	stw	r16,0(r3)
  832ce8:	084a8300 	call	84a830 <__malloc_unlock>
  832cec:	00800044 	movi	r2,1
  832cf0:	003fe706 	br	832c90 <__alt_mem_epcs_flash_controller_0+0xff829c90>
  832cf4:	000b883a 	mov	r5,zero
  832cf8:	9009883a 	mov	r4,r18
  832cfc:	0834dc80 	call	834dc8 <_sbrk_r>
  832d00:	99000217 	ldw	r4,8(r19)
  832d04:	014003c4 	movi	r5,15
  832d08:	1107c83a 	sub	r3,r2,r4
  832d0c:	28ffdd0e 	bge	r5,r3,832c84 <__alt_mem_epcs_flash_controller_0+0xff829c84>
  832d10:	014021b4 	movhi	r5,134
  832d14:	296f7504 	addi	r5,r5,-16940
  832d18:	29400017 	ldw	r5,0(r5)
  832d1c:	18c00054 	ori	r3,r3,1
  832d20:	20c00115 	stw	r3,4(r4)
  832d24:	00c021b4 	movhi	r3,134
  832d28:	1145c83a 	sub	r2,r2,r5
  832d2c:	18efea04 	addi	r3,r3,-16472
  832d30:	18800015 	stw	r2,0(r3)
  832d34:	003fd306 	br	832c84 <__alt_mem_epcs_flash_controller_0+0xff829c84>

00832d38 <_free_r>:
  832d38:	28004126 	beq	r5,zero,832e40 <_free_r+0x108>
  832d3c:	defffd04 	addi	sp,sp,-12
  832d40:	dc400115 	stw	r17,4(sp)
  832d44:	dc000015 	stw	r16,0(sp)
  832d48:	2023883a 	mov	r17,r4
  832d4c:	2821883a 	mov	r16,r5
  832d50:	dfc00215 	stw	ra,8(sp)
  832d54:	084a7100 	call	84a710 <__malloc_lock>
  832d58:	81ffff17 	ldw	r7,-4(r16)
  832d5c:	00bfff84 	movi	r2,-2
  832d60:	010021b4 	movhi	r4,134
  832d64:	81bffe04 	addi	r6,r16,-8
  832d68:	3884703a 	and	r2,r7,r2
  832d6c:	2128f404 	addi	r4,r4,-23600
  832d70:	308b883a 	add	r5,r6,r2
  832d74:	2a400117 	ldw	r9,4(r5)
  832d78:	22000217 	ldw	r8,8(r4)
  832d7c:	00ffff04 	movi	r3,-4
  832d80:	48c6703a 	and	r3,r9,r3
  832d84:	2a005726 	beq	r5,r8,832ee4 <_free_r+0x1ac>
  832d88:	28c00115 	stw	r3,4(r5)
  832d8c:	39c0004c 	andi	r7,r7,1
  832d90:	3800091e 	bne	r7,zero,832db8 <_free_r+0x80>
  832d94:	823ffe17 	ldw	r8,-8(r16)
  832d98:	22400204 	addi	r9,r4,8
  832d9c:	320dc83a 	sub	r6,r6,r8
  832da0:	31c00217 	ldw	r7,8(r6)
  832da4:	1205883a 	add	r2,r2,r8
  832da8:	3a406526 	beq	r7,r9,832f40 <_free_r+0x208>
  832dac:	32000317 	ldw	r8,12(r6)
  832db0:	3a000315 	stw	r8,12(r7)
  832db4:	41c00215 	stw	r7,8(r8)
  832db8:	28cf883a 	add	r7,r5,r3
  832dbc:	39c00117 	ldw	r7,4(r7)
  832dc0:	39c0004c 	andi	r7,r7,1
  832dc4:	38003a26 	beq	r7,zero,832eb0 <_free_r+0x178>
  832dc8:	10c00054 	ori	r3,r2,1
  832dcc:	30c00115 	stw	r3,4(r6)
  832dd0:	3087883a 	add	r3,r6,r2
  832dd4:	18800015 	stw	r2,0(r3)
  832dd8:	00c07fc4 	movi	r3,511
  832ddc:	18801936 	bltu	r3,r2,832e44 <_free_r+0x10c>
  832de0:	1004d0fa 	srli	r2,r2,3
  832de4:	01c00044 	movi	r7,1
  832de8:	21400117 	ldw	r5,4(r4)
  832dec:	10c00044 	addi	r3,r2,1
  832df0:	18c7883a 	add	r3,r3,r3
  832df4:	1005d0ba 	srai	r2,r2,2
  832df8:	18c7883a 	add	r3,r3,r3
  832dfc:	18c7883a 	add	r3,r3,r3
  832e00:	1907883a 	add	r3,r3,r4
  832e04:	3884983a 	sll	r2,r7,r2
  832e08:	19c00017 	ldw	r7,0(r3)
  832e0c:	1a3ffe04 	addi	r8,r3,-8
  832e10:	1144b03a 	or	r2,r2,r5
  832e14:	32000315 	stw	r8,12(r6)
  832e18:	31c00215 	stw	r7,8(r6)
  832e1c:	20800115 	stw	r2,4(r4)
  832e20:	19800015 	stw	r6,0(r3)
  832e24:	39800315 	stw	r6,12(r7)
  832e28:	8809883a 	mov	r4,r17
  832e2c:	dfc00217 	ldw	ra,8(sp)
  832e30:	dc400117 	ldw	r17,4(sp)
  832e34:	dc000017 	ldw	r16,0(sp)
  832e38:	dec00304 	addi	sp,sp,12
  832e3c:	084a8301 	jmpi	84a830 <__malloc_unlock>
  832e40:	f800283a 	ret
  832e44:	100ad27a 	srli	r5,r2,9
  832e48:	00c00104 	movi	r3,4
  832e4c:	19404a36 	bltu	r3,r5,832f78 <_free_r+0x240>
  832e50:	100ad1ba 	srli	r5,r2,6
  832e54:	28c00e44 	addi	r3,r5,57
  832e58:	18c7883a 	add	r3,r3,r3
  832e5c:	29400e04 	addi	r5,r5,56
  832e60:	18c7883a 	add	r3,r3,r3
  832e64:	18c7883a 	add	r3,r3,r3
  832e68:	1909883a 	add	r4,r3,r4
  832e6c:	20c00017 	ldw	r3,0(r4)
  832e70:	01c021b4 	movhi	r7,134
  832e74:	213ffe04 	addi	r4,r4,-8
  832e78:	39e8f404 	addi	r7,r7,-23600
  832e7c:	20c04426 	beq	r4,r3,832f90 <_free_r+0x258>
  832e80:	01ffff04 	movi	r7,-4
  832e84:	19400117 	ldw	r5,4(r3)
  832e88:	29ca703a 	and	r5,r5,r7
  832e8c:	1140022e 	bgeu	r2,r5,832e98 <_free_r+0x160>
  832e90:	18c00217 	ldw	r3,8(r3)
  832e94:	20fffb1e 	bne	r4,r3,832e84 <__alt_mem_epcs_flash_controller_0+0xff829e84>
  832e98:	19000317 	ldw	r4,12(r3)
  832e9c:	31000315 	stw	r4,12(r6)
  832ea0:	30c00215 	stw	r3,8(r6)
  832ea4:	21800215 	stw	r6,8(r4)
  832ea8:	19800315 	stw	r6,12(r3)
  832eac:	003fde06 	br	832e28 <__alt_mem_epcs_flash_controller_0+0xff829e28>
  832eb0:	29c00217 	ldw	r7,8(r5)
  832eb4:	10c5883a 	add	r2,r2,r3
  832eb8:	00c021b4 	movhi	r3,134
  832ebc:	18e8f604 	addi	r3,r3,-23592
  832ec0:	38c03b26 	beq	r7,r3,832fb0 <_free_r+0x278>
  832ec4:	2a000317 	ldw	r8,12(r5)
  832ec8:	11400054 	ori	r5,r2,1
  832ecc:	3087883a 	add	r3,r6,r2
  832ed0:	3a000315 	stw	r8,12(r7)
  832ed4:	41c00215 	stw	r7,8(r8)
  832ed8:	31400115 	stw	r5,4(r6)
  832edc:	18800015 	stw	r2,0(r3)
  832ee0:	003fbd06 	br	832dd8 <__alt_mem_epcs_flash_controller_0+0xff829dd8>
  832ee4:	39c0004c 	andi	r7,r7,1
  832ee8:	10c5883a 	add	r2,r2,r3
  832eec:	3800071e 	bne	r7,zero,832f0c <_free_r+0x1d4>
  832ef0:	81fffe17 	ldw	r7,-8(r16)
  832ef4:	31cdc83a 	sub	r6,r6,r7
  832ef8:	30c00317 	ldw	r3,12(r6)
  832efc:	31400217 	ldw	r5,8(r6)
  832f00:	11c5883a 	add	r2,r2,r7
  832f04:	28c00315 	stw	r3,12(r5)
  832f08:	19400215 	stw	r5,8(r3)
  832f0c:	10c00054 	ori	r3,r2,1
  832f10:	30c00115 	stw	r3,4(r6)
  832f14:	00c021b4 	movhi	r3,134
  832f18:	18ef7604 	addi	r3,r3,-16936
  832f1c:	18c00017 	ldw	r3,0(r3)
  832f20:	21800215 	stw	r6,8(r4)
  832f24:	10ffc036 	bltu	r2,r3,832e28 <__alt_mem_epcs_flash_controller_0+0xff829e28>
  832f28:	008021b4 	movhi	r2,134
  832f2c:	10afc404 	addi	r2,r2,-16624
  832f30:	11400017 	ldw	r5,0(r2)
  832f34:	8809883a 	mov	r4,r17
  832f38:	0832c140 	call	832c14 <_malloc_trim_r>
  832f3c:	003fba06 	br	832e28 <__alt_mem_epcs_flash_controller_0+0xff829e28>
  832f40:	28c9883a 	add	r4,r5,r3
  832f44:	21000117 	ldw	r4,4(r4)
  832f48:	2100004c 	andi	r4,r4,1
  832f4c:	2000391e 	bne	r4,zero,833034 <_free_r+0x2fc>
  832f50:	29c00217 	ldw	r7,8(r5)
  832f54:	29000317 	ldw	r4,12(r5)
  832f58:	1885883a 	add	r2,r3,r2
  832f5c:	10c00054 	ori	r3,r2,1
  832f60:	39000315 	stw	r4,12(r7)
  832f64:	21c00215 	stw	r7,8(r4)
  832f68:	30c00115 	stw	r3,4(r6)
  832f6c:	308d883a 	add	r6,r6,r2
  832f70:	30800015 	stw	r2,0(r6)
  832f74:	003fac06 	br	832e28 <__alt_mem_epcs_flash_controller_0+0xff829e28>
  832f78:	00c00504 	movi	r3,20
  832f7c:	19401536 	bltu	r3,r5,832fd4 <_free_r+0x29c>
  832f80:	28c01704 	addi	r3,r5,92
  832f84:	18c7883a 	add	r3,r3,r3
  832f88:	294016c4 	addi	r5,r5,91
  832f8c:	003fb406 	br	832e60 <__alt_mem_epcs_flash_controller_0+0xff829e60>
  832f90:	280bd0ba 	srai	r5,r5,2
  832f94:	00c00044 	movi	r3,1
  832f98:	38800117 	ldw	r2,4(r7)
  832f9c:	194a983a 	sll	r5,r3,r5
  832fa0:	2007883a 	mov	r3,r4
  832fa4:	2884b03a 	or	r2,r5,r2
  832fa8:	38800115 	stw	r2,4(r7)
  832fac:	003fbb06 	br	832e9c <__alt_mem_epcs_flash_controller_0+0xff829e9c>
  832fb0:	21800515 	stw	r6,20(r4)
  832fb4:	21800415 	stw	r6,16(r4)
  832fb8:	10c00054 	ori	r3,r2,1
  832fbc:	31c00315 	stw	r7,12(r6)
  832fc0:	31c00215 	stw	r7,8(r6)
  832fc4:	30c00115 	stw	r3,4(r6)
  832fc8:	308d883a 	add	r6,r6,r2
  832fcc:	30800015 	stw	r2,0(r6)
  832fd0:	003f9506 	br	832e28 <__alt_mem_epcs_flash_controller_0+0xff829e28>
  832fd4:	00c01504 	movi	r3,84
  832fd8:	19400536 	bltu	r3,r5,832ff0 <_free_r+0x2b8>
  832fdc:	100ad33a 	srli	r5,r2,12
  832fe0:	28c01bc4 	addi	r3,r5,111
  832fe4:	18c7883a 	add	r3,r3,r3
  832fe8:	29401b84 	addi	r5,r5,110
  832fec:	003f9c06 	br	832e60 <__alt_mem_epcs_flash_controller_0+0xff829e60>
  832ff0:	00c05504 	movi	r3,340
  832ff4:	19400536 	bltu	r3,r5,83300c <_free_r+0x2d4>
  832ff8:	100ad3fa 	srli	r5,r2,15
  832ffc:	28c01e04 	addi	r3,r5,120
  833000:	18c7883a 	add	r3,r3,r3
  833004:	29401dc4 	addi	r5,r5,119
  833008:	003f9506 	br	832e60 <__alt_mem_epcs_flash_controller_0+0xff829e60>
  83300c:	00c15504 	movi	r3,1364
  833010:	19400536 	bltu	r3,r5,833028 <_free_r+0x2f0>
  833014:	100ad4ba 	srli	r5,r2,18
  833018:	28c01f44 	addi	r3,r5,125
  83301c:	18c7883a 	add	r3,r3,r3
  833020:	29401f04 	addi	r5,r5,124
  833024:	003f8e06 	br	832e60 <__alt_mem_epcs_flash_controller_0+0xff829e60>
  833028:	00c03f84 	movi	r3,254
  83302c:	01401f84 	movi	r5,126
  833030:	003f8b06 	br	832e60 <__alt_mem_epcs_flash_controller_0+0xff829e60>
  833034:	10c00054 	ori	r3,r2,1
  833038:	30c00115 	stw	r3,4(r6)
  83303c:	308d883a 	add	r6,r6,r2
  833040:	30800015 	stw	r2,0(r6)
  833044:	003f7806 	br	832e28 <__alt_mem_epcs_flash_controller_0+0xff829e28>

00833048 <_fwalk>:
  833048:	defff704 	addi	sp,sp,-36
  83304c:	dd000415 	stw	r20,16(sp)
  833050:	dfc00815 	stw	ra,32(sp)
  833054:	ddc00715 	stw	r23,28(sp)
  833058:	dd800615 	stw	r22,24(sp)
  83305c:	dd400515 	stw	r21,20(sp)
  833060:	dcc00315 	stw	r19,12(sp)
  833064:	dc800215 	stw	r18,8(sp)
  833068:	dc400115 	stw	r17,4(sp)
  83306c:	dc000015 	stw	r16,0(sp)
  833070:	2500b804 	addi	r20,r4,736
  833074:	a0002326 	beq	r20,zero,833104 <_fwalk+0xbc>
  833078:	282b883a 	mov	r21,r5
  83307c:	002f883a 	mov	r23,zero
  833080:	05800044 	movi	r22,1
  833084:	04ffffc4 	movi	r19,-1
  833088:	a4400117 	ldw	r17,4(r20)
  83308c:	a4800217 	ldw	r18,8(r20)
  833090:	8c7fffc4 	addi	r17,r17,-1
  833094:	88000d16 	blt	r17,zero,8330cc <_fwalk+0x84>
  833098:	94000304 	addi	r16,r18,12
  83309c:	94800384 	addi	r18,r18,14
  8330a0:	8080000b 	ldhu	r2,0(r16)
  8330a4:	8c7fffc4 	addi	r17,r17,-1
  8330a8:	813ffd04 	addi	r4,r16,-12
  8330ac:	b080042e 	bgeu	r22,r2,8330c0 <_fwalk+0x78>
  8330b0:	9080000f 	ldh	r2,0(r18)
  8330b4:	14c00226 	beq	r2,r19,8330c0 <_fwalk+0x78>
  8330b8:	a83ee83a 	callr	r21
  8330bc:	b8aeb03a 	or	r23,r23,r2
  8330c0:	84001a04 	addi	r16,r16,104
  8330c4:	94801a04 	addi	r18,r18,104
  8330c8:	8cfff51e 	bne	r17,r19,8330a0 <__alt_mem_epcs_flash_controller_0+0xff82a0a0>
  8330cc:	a5000017 	ldw	r20,0(r20)
  8330d0:	a03fed1e 	bne	r20,zero,833088 <__alt_mem_epcs_flash_controller_0+0xff82a088>
  8330d4:	b805883a 	mov	r2,r23
  8330d8:	dfc00817 	ldw	ra,32(sp)
  8330dc:	ddc00717 	ldw	r23,28(sp)
  8330e0:	dd800617 	ldw	r22,24(sp)
  8330e4:	dd400517 	ldw	r21,20(sp)
  8330e8:	dd000417 	ldw	r20,16(sp)
  8330ec:	dcc00317 	ldw	r19,12(sp)
  8330f0:	dc800217 	ldw	r18,8(sp)
  8330f4:	dc400117 	ldw	r17,4(sp)
  8330f8:	dc000017 	ldw	r16,0(sp)
  8330fc:	dec00904 	addi	sp,sp,36
  833100:	f800283a 	ret
  833104:	002f883a 	mov	r23,zero
  833108:	003ff206 	br	8330d4 <__alt_mem_epcs_flash_controller_0+0xff82a0d4>

0083310c <_fwalk_reent>:
  83310c:	defff704 	addi	sp,sp,-36
  833110:	dd000415 	stw	r20,16(sp)
  833114:	dfc00815 	stw	ra,32(sp)
  833118:	ddc00715 	stw	r23,28(sp)
  83311c:	dd800615 	stw	r22,24(sp)
  833120:	dd400515 	stw	r21,20(sp)
  833124:	dcc00315 	stw	r19,12(sp)
  833128:	dc800215 	stw	r18,8(sp)
  83312c:	dc400115 	stw	r17,4(sp)
  833130:	dc000015 	stw	r16,0(sp)
  833134:	2500b804 	addi	r20,r4,736
  833138:	a0002326 	beq	r20,zero,8331c8 <_fwalk_reent+0xbc>
  83313c:	282b883a 	mov	r21,r5
  833140:	2027883a 	mov	r19,r4
  833144:	002f883a 	mov	r23,zero
  833148:	05800044 	movi	r22,1
  83314c:	04bfffc4 	movi	r18,-1
  833150:	a4400117 	ldw	r17,4(r20)
  833154:	a4000217 	ldw	r16,8(r20)
  833158:	8c7fffc4 	addi	r17,r17,-1
  83315c:	88000c16 	blt	r17,zero,833190 <_fwalk_reent+0x84>
  833160:	84000304 	addi	r16,r16,12
  833164:	8080000b 	ldhu	r2,0(r16)
  833168:	8c7fffc4 	addi	r17,r17,-1
  83316c:	817ffd04 	addi	r5,r16,-12
  833170:	b080052e 	bgeu	r22,r2,833188 <_fwalk_reent+0x7c>
  833174:	8080008f 	ldh	r2,2(r16)
  833178:	9809883a 	mov	r4,r19
  83317c:	14800226 	beq	r2,r18,833188 <_fwalk_reent+0x7c>
  833180:	a83ee83a 	callr	r21
  833184:	b8aeb03a 	or	r23,r23,r2
  833188:	84001a04 	addi	r16,r16,104
  83318c:	8cbff51e 	bne	r17,r18,833164 <__alt_mem_epcs_flash_controller_0+0xff82a164>
  833190:	a5000017 	ldw	r20,0(r20)
  833194:	a03fee1e 	bne	r20,zero,833150 <__alt_mem_epcs_flash_controller_0+0xff82a150>
  833198:	b805883a 	mov	r2,r23
  83319c:	dfc00817 	ldw	ra,32(sp)
  8331a0:	ddc00717 	ldw	r23,28(sp)
  8331a4:	dd800617 	ldw	r22,24(sp)
  8331a8:	dd400517 	ldw	r21,20(sp)
  8331ac:	dd000417 	ldw	r20,16(sp)
  8331b0:	dcc00317 	ldw	r19,12(sp)
  8331b4:	dc800217 	ldw	r18,8(sp)
  8331b8:	dc400117 	ldw	r17,4(sp)
  8331bc:	dc000017 	ldw	r16,0(sp)
  8331c0:	dec00904 	addi	sp,sp,36
  8331c4:	f800283a 	ret
  8331c8:	002f883a 	mov	r23,zero
  8331cc:	003ff206 	br	833198 <__alt_mem_epcs_flash_controller_0+0xff82a198>

008331d0 <_findenv>:
  8331d0:	008021b4 	movhi	r2,134
  8331d4:	10af7404 	addi	r2,r2,-16944
  8331d8:	280d883a 	mov	r6,r5
  8331dc:	200b883a 	mov	r5,r4
  8331e0:	11000017 	ldw	r4,0(r2)
  8331e4:	08332141 	jmpi	833214 <_findenv_r>

008331e8 <getenv>:
  8331e8:	008021b4 	movhi	r2,134
  8331ec:	10af7404 	addi	r2,r2,-16944
  8331f0:	200b883a 	mov	r5,r4
  8331f4:	11000017 	ldw	r4,0(r2)
  8331f8:	defffe04 	addi	sp,sp,-8
  8331fc:	d80d883a 	mov	r6,sp
  833200:	dfc00115 	stw	ra,4(sp)
  833204:	08332140 	call	833214 <_findenv_r>
  833208:	dfc00117 	ldw	ra,4(sp)
  83320c:	dec00204 	addi	sp,sp,8
  833210:	f800283a 	ret

00833214 <_findenv_r>:
  833214:	defff704 	addi	sp,sp,-36
  833218:	dd000415 	stw	r20,16(sp)
  83321c:	050021b4 	movhi	r20,134
  833220:	a52f7804 	addi	r20,r20,-16928
  833224:	dd400515 	stw	r21,20(sp)
  833228:	dcc00315 	stw	r19,12(sp)
  83322c:	dc800215 	stw	r18,8(sp)
  833230:	dc000015 	stw	r16,0(sp)
  833234:	dfc00815 	stw	ra,32(sp)
  833238:	ddc00715 	stw	r23,28(sp)
  83323c:	dd800615 	stw	r22,24(sp)
  833240:	dc400115 	stw	r17,4(sp)
  833244:	202b883a 	mov	r21,r4
  833248:	2825883a 	mov	r18,r5
  83324c:	3027883a 	mov	r19,r6
  833250:	084a5ec0 	call	84a5ec <__env_lock>
  833254:	a4000017 	ldw	r16,0(r20)
  833258:	80001726 	beq	r16,zero,8332b8 <_findenv_r+0xa4>
  83325c:	90c00007 	ldb	r3,0(r18)
  833260:	18002b26 	beq	r3,zero,833310 <_findenv_r+0xfc>
  833264:	9005883a 	mov	r2,r18
  833268:	01000f44 	movi	r4,61
  83326c:	19001226 	beq	r3,r4,8332b8 <_findenv_r+0xa4>
  833270:	10800044 	addi	r2,r2,1
  833274:	10c00007 	ldb	r3,0(r2)
  833278:	183ffc1e 	bne	r3,zero,83326c <__alt_mem_epcs_flash_controller_0+0xff82a26c>
  83327c:	14a3c83a 	sub	r17,r2,r18
  833280:	81000017 	ldw	r4,0(r16)
  833284:	20000c26 	beq	r4,zero,8332b8 <_findenv_r+0xa4>
  833288:	05c00f44 	movi	r23,61
  83328c:	880d883a 	mov	r6,r17
  833290:	900b883a 	mov	r5,r18
  833294:	08351a80 	call	8351a8 <strncmp>
  833298:	1000041e 	bne	r2,zero,8332ac <_findenv_r+0x98>
  83329c:	85800017 	ldw	r22,0(r16)
  8332a0:	b46d883a 	add	r22,r22,r17
  8332a4:	b0800007 	ldb	r2,0(r22)
  8332a8:	15c01126 	beq	r2,r23,8332f0 <_findenv_r+0xdc>
  8332ac:	84000104 	addi	r16,r16,4
  8332b0:	81000017 	ldw	r4,0(r16)
  8332b4:	203ff51e 	bne	r4,zero,83328c <__alt_mem_epcs_flash_controller_0+0xff82a28c>
  8332b8:	a809883a 	mov	r4,r21
  8332bc:	084a6b00 	call	84a6b0 <__env_unlock>
  8332c0:	0005883a 	mov	r2,zero
  8332c4:	dfc00817 	ldw	ra,32(sp)
  8332c8:	ddc00717 	ldw	r23,28(sp)
  8332cc:	dd800617 	ldw	r22,24(sp)
  8332d0:	dd400517 	ldw	r21,20(sp)
  8332d4:	dd000417 	ldw	r20,16(sp)
  8332d8:	dcc00317 	ldw	r19,12(sp)
  8332dc:	dc800217 	ldw	r18,8(sp)
  8332e0:	dc400117 	ldw	r17,4(sp)
  8332e4:	dc000017 	ldw	r16,0(sp)
  8332e8:	dec00904 	addi	sp,sp,36
  8332ec:	f800283a 	ret
  8332f0:	a0800017 	ldw	r2,0(r20)
  8332f4:	a809883a 	mov	r4,r21
  8332f8:	80a1c83a 	sub	r16,r16,r2
  8332fc:	8021d0ba 	srai	r16,r16,2
  833300:	9c000015 	stw	r16,0(r19)
  833304:	084a6b00 	call	84a6b0 <__env_unlock>
  833308:	b0800044 	addi	r2,r22,1
  83330c:	003fed06 	br	8332c4 <__alt_mem_epcs_flash_controller_0+0xff82a2c4>
  833310:	0023883a 	mov	r17,zero
  833314:	003fda06 	br	833280 <__alt_mem_epcs_flash_controller_0+0xff82a280>

00833318 <_getenv_r>:
  833318:	defffe04 	addi	sp,sp,-8
  83331c:	d80d883a 	mov	r6,sp
  833320:	dfc00115 	stw	ra,4(sp)
  833324:	08332140 	call	833214 <_findenv_r>
  833328:	dfc00117 	ldw	ra,4(sp)
  83332c:	dec00204 	addi	sp,sp,8
  833330:	f800283a 	ret

00833334 <malloc>:
  833334:	008021b4 	movhi	r2,134
  833338:	10af7404 	addi	r2,r2,-16944
  83333c:	200b883a 	mov	r5,r4
  833340:	11000017 	ldw	r4,0(r2)
  833344:	083335c1 	jmpi	83335c <_malloc_r>

00833348 <free>:
  833348:	008021b4 	movhi	r2,134
  83334c:	10af7404 	addi	r2,r2,-16944
  833350:	200b883a 	mov	r5,r4
  833354:	11000017 	ldw	r4,0(r2)
  833358:	0832d381 	jmpi	832d38 <_free_r>

0083335c <_malloc_r>:
  83335c:	defff504 	addi	sp,sp,-44
  833360:	dc800315 	stw	r18,12(sp)
  833364:	dfc00a15 	stw	ra,40(sp)
  833368:	df000915 	stw	fp,36(sp)
  83336c:	ddc00815 	stw	r23,32(sp)
  833370:	dd800715 	stw	r22,28(sp)
  833374:	dd400615 	stw	r21,24(sp)
  833378:	dd000515 	stw	r20,20(sp)
  83337c:	dcc00415 	stw	r19,16(sp)
  833380:	dc400215 	stw	r17,8(sp)
  833384:	dc000115 	stw	r16,4(sp)
  833388:	288002c4 	addi	r2,r5,11
  83338c:	00c00584 	movi	r3,22
  833390:	2025883a 	mov	r18,r4
  833394:	18807f2e 	bgeu	r3,r2,833594 <_malloc_r+0x238>
  833398:	047ffe04 	movi	r17,-8
  83339c:	1462703a 	and	r17,r2,r17
  8333a0:	8800a316 	blt	r17,zero,833630 <_malloc_r+0x2d4>
  8333a4:	8940a236 	bltu	r17,r5,833630 <_malloc_r+0x2d4>
  8333a8:	084a7100 	call	84a710 <__malloc_lock>
  8333ac:	00807dc4 	movi	r2,503
  8333b0:	1441e92e 	bgeu	r2,r17,833b58 <_malloc_r+0x7fc>
  8333b4:	8804d27a 	srli	r2,r17,9
  8333b8:	1000a126 	beq	r2,zero,833640 <_malloc_r+0x2e4>
  8333bc:	00c00104 	movi	r3,4
  8333c0:	18811e36 	bltu	r3,r2,83383c <_malloc_r+0x4e0>
  8333c4:	8804d1ba 	srli	r2,r17,6
  8333c8:	12000e44 	addi	r8,r2,57
  8333cc:	11c00e04 	addi	r7,r2,56
  8333d0:	4209883a 	add	r4,r8,r8
  8333d4:	04c021b4 	movhi	r19,134
  8333d8:	2109883a 	add	r4,r4,r4
  8333dc:	9ce8f404 	addi	r19,r19,-23600
  8333e0:	2109883a 	add	r4,r4,r4
  8333e4:	9909883a 	add	r4,r19,r4
  8333e8:	24000117 	ldw	r16,4(r4)
  8333ec:	213ffe04 	addi	r4,r4,-8
  8333f0:	24009726 	beq	r4,r16,833650 <_malloc_r+0x2f4>
  8333f4:	80800117 	ldw	r2,4(r16)
  8333f8:	01bfff04 	movi	r6,-4
  8333fc:	014003c4 	movi	r5,15
  833400:	1184703a 	and	r2,r2,r6
  833404:	1447c83a 	sub	r3,r2,r17
  833408:	28c00716 	blt	r5,r3,833428 <_malloc_r+0xcc>
  83340c:	1800920e 	bge	r3,zero,833658 <_malloc_r+0x2fc>
  833410:	84000317 	ldw	r16,12(r16)
  833414:	24008e26 	beq	r4,r16,833650 <_malloc_r+0x2f4>
  833418:	80800117 	ldw	r2,4(r16)
  83341c:	1184703a 	and	r2,r2,r6
  833420:	1447c83a 	sub	r3,r2,r17
  833424:	28fff90e 	bge	r5,r3,83340c <__alt_mem_epcs_flash_controller_0+0xff82a40c>
  833428:	3809883a 	mov	r4,r7
  83342c:	018021b4 	movhi	r6,134
  833430:	9c000417 	ldw	r16,16(r19)
  833434:	31a8f404 	addi	r6,r6,-23600
  833438:	32000204 	addi	r8,r6,8
  83343c:	82013426 	beq	r16,r8,833910 <_malloc_r+0x5b4>
  833440:	80c00117 	ldw	r3,4(r16)
  833444:	00bfff04 	movi	r2,-4
  833448:	188e703a 	and	r7,r3,r2
  83344c:	3c45c83a 	sub	r2,r7,r17
  833450:	00c003c4 	movi	r3,15
  833454:	18811f16 	blt	r3,r2,8338d4 <_malloc_r+0x578>
  833458:	32000515 	stw	r8,20(r6)
  83345c:	32000415 	stw	r8,16(r6)
  833460:	10007f0e 	bge	r2,zero,833660 <_malloc_r+0x304>
  833464:	00807fc4 	movi	r2,511
  833468:	11c0fd36 	bltu	r2,r7,833860 <_malloc_r+0x504>
  83346c:	3806d0fa 	srli	r3,r7,3
  833470:	01c00044 	movi	r7,1
  833474:	30800117 	ldw	r2,4(r6)
  833478:	19400044 	addi	r5,r3,1
  83347c:	294b883a 	add	r5,r5,r5
  833480:	1807d0ba 	srai	r3,r3,2
  833484:	294b883a 	add	r5,r5,r5
  833488:	294b883a 	add	r5,r5,r5
  83348c:	298b883a 	add	r5,r5,r6
  833490:	38c6983a 	sll	r3,r7,r3
  833494:	29c00017 	ldw	r7,0(r5)
  833498:	2a7ffe04 	addi	r9,r5,-8
  83349c:	1886b03a 	or	r3,r3,r2
  8334a0:	82400315 	stw	r9,12(r16)
  8334a4:	81c00215 	stw	r7,8(r16)
  8334a8:	30c00115 	stw	r3,4(r6)
  8334ac:	2c000015 	stw	r16,0(r5)
  8334b0:	3c000315 	stw	r16,12(r7)
  8334b4:	2005d0ba 	srai	r2,r4,2
  8334b8:	01400044 	movi	r5,1
  8334bc:	288a983a 	sll	r5,r5,r2
  8334c0:	19406f36 	bltu	r3,r5,833680 <_malloc_r+0x324>
  8334c4:	28c4703a 	and	r2,r5,r3
  8334c8:	10000a1e 	bne	r2,zero,8334f4 <_malloc_r+0x198>
  8334cc:	00bfff04 	movi	r2,-4
  8334d0:	294b883a 	add	r5,r5,r5
  8334d4:	2088703a 	and	r4,r4,r2
  8334d8:	28c4703a 	and	r2,r5,r3
  8334dc:	21000104 	addi	r4,r4,4
  8334e0:	1000041e 	bne	r2,zero,8334f4 <_malloc_r+0x198>
  8334e4:	294b883a 	add	r5,r5,r5
  8334e8:	28c4703a 	and	r2,r5,r3
  8334ec:	21000104 	addi	r4,r4,4
  8334f0:	103ffc26 	beq	r2,zero,8334e4 <__alt_mem_epcs_flash_controller_0+0xff82a4e4>
  8334f4:	02bfff04 	movi	r10,-4
  8334f8:	024003c4 	movi	r9,15
  8334fc:	21800044 	addi	r6,r4,1
  833500:	318d883a 	add	r6,r6,r6
  833504:	318d883a 	add	r6,r6,r6
  833508:	318d883a 	add	r6,r6,r6
  83350c:	998d883a 	add	r6,r19,r6
  833510:	333ffe04 	addi	r12,r6,-8
  833514:	2017883a 	mov	r11,r4
  833518:	31800104 	addi	r6,r6,4
  83351c:	34000017 	ldw	r16,0(r6)
  833520:	31fffd04 	addi	r7,r6,-12
  833524:	81c0041e 	bne	r16,r7,833538 <_malloc_r+0x1dc>
  833528:	0000fb06 	br	833918 <_malloc_r+0x5bc>
  83352c:	1801030e 	bge	r3,zero,83393c <_malloc_r+0x5e0>
  833530:	84000317 	ldw	r16,12(r16)
  833534:	81c0f826 	beq	r16,r7,833918 <_malloc_r+0x5bc>
  833538:	80800117 	ldw	r2,4(r16)
  83353c:	1284703a 	and	r2,r2,r10
  833540:	1447c83a 	sub	r3,r2,r17
  833544:	48fff90e 	bge	r9,r3,83352c <__alt_mem_epcs_flash_controller_0+0xff82a52c>
  833548:	80800317 	ldw	r2,12(r16)
  83354c:	81000217 	ldw	r4,8(r16)
  833550:	89400054 	ori	r5,r17,1
  833554:	81400115 	stw	r5,4(r16)
  833558:	20800315 	stw	r2,12(r4)
  83355c:	11000215 	stw	r4,8(r2)
  833560:	8463883a 	add	r17,r16,r17
  833564:	9c400515 	stw	r17,20(r19)
  833568:	9c400415 	stw	r17,16(r19)
  83356c:	18800054 	ori	r2,r3,1
  833570:	88800115 	stw	r2,4(r17)
  833574:	8a000315 	stw	r8,12(r17)
  833578:	8a000215 	stw	r8,8(r17)
  83357c:	88e3883a 	add	r17,r17,r3
  833580:	88c00015 	stw	r3,0(r17)
  833584:	9009883a 	mov	r4,r18
  833588:	084a8300 	call	84a830 <__malloc_unlock>
  83358c:	80800204 	addi	r2,r16,8
  833590:	00001b06 	br	833600 <_malloc_r+0x2a4>
  833594:	04400404 	movi	r17,16
  833598:	89402536 	bltu	r17,r5,833630 <_malloc_r+0x2d4>
  83359c:	084a7100 	call	84a710 <__malloc_lock>
  8335a0:	00800184 	movi	r2,6
  8335a4:	01000084 	movi	r4,2
  8335a8:	04c021b4 	movhi	r19,134
  8335ac:	1085883a 	add	r2,r2,r2
  8335b0:	9ce8f404 	addi	r19,r19,-23600
  8335b4:	1085883a 	add	r2,r2,r2
  8335b8:	9885883a 	add	r2,r19,r2
  8335bc:	14000117 	ldw	r16,4(r2)
  8335c0:	10fffe04 	addi	r3,r2,-8
  8335c4:	80c0d926 	beq	r16,r3,83392c <_malloc_r+0x5d0>
  8335c8:	80c00117 	ldw	r3,4(r16)
  8335cc:	81000317 	ldw	r4,12(r16)
  8335d0:	00bfff04 	movi	r2,-4
  8335d4:	1884703a 	and	r2,r3,r2
  8335d8:	81400217 	ldw	r5,8(r16)
  8335dc:	8085883a 	add	r2,r16,r2
  8335e0:	10c00117 	ldw	r3,4(r2)
  8335e4:	29000315 	stw	r4,12(r5)
  8335e8:	21400215 	stw	r5,8(r4)
  8335ec:	18c00054 	ori	r3,r3,1
  8335f0:	10c00115 	stw	r3,4(r2)
  8335f4:	9009883a 	mov	r4,r18
  8335f8:	084a8300 	call	84a830 <__malloc_unlock>
  8335fc:	80800204 	addi	r2,r16,8
  833600:	dfc00a17 	ldw	ra,40(sp)
  833604:	df000917 	ldw	fp,36(sp)
  833608:	ddc00817 	ldw	r23,32(sp)
  83360c:	dd800717 	ldw	r22,28(sp)
  833610:	dd400617 	ldw	r21,24(sp)
  833614:	dd000517 	ldw	r20,20(sp)
  833618:	dcc00417 	ldw	r19,16(sp)
  83361c:	dc800317 	ldw	r18,12(sp)
  833620:	dc400217 	ldw	r17,8(sp)
  833624:	dc000117 	ldw	r16,4(sp)
  833628:	dec00b04 	addi	sp,sp,44
  83362c:	f800283a 	ret
  833630:	00800304 	movi	r2,12
  833634:	90800015 	stw	r2,0(r18)
  833638:	0005883a 	mov	r2,zero
  83363c:	003ff006 	br	833600 <__alt_mem_epcs_flash_controller_0+0xff82a600>
  833640:	01002004 	movi	r4,128
  833644:	02001004 	movi	r8,64
  833648:	01c00fc4 	movi	r7,63
  83364c:	003f6106 	br	8333d4 <__alt_mem_epcs_flash_controller_0+0xff82a3d4>
  833650:	4009883a 	mov	r4,r8
  833654:	003f7506 	br	83342c <__alt_mem_epcs_flash_controller_0+0xff82a42c>
  833658:	81000317 	ldw	r4,12(r16)
  83365c:	003fde06 	br	8335d8 <__alt_mem_epcs_flash_controller_0+0xff82a5d8>
  833660:	81c5883a 	add	r2,r16,r7
  833664:	11400117 	ldw	r5,4(r2)
  833668:	9009883a 	mov	r4,r18
  83366c:	29400054 	ori	r5,r5,1
  833670:	11400115 	stw	r5,4(r2)
  833674:	084a8300 	call	84a830 <__malloc_unlock>
  833678:	80800204 	addi	r2,r16,8
  83367c:	003fe006 	br	833600 <__alt_mem_epcs_flash_controller_0+0xff82a600>
  833680:	9c000217 	ldw	r16,8(r19)
  833684:	00bfff04 	movi	r2,-4
  833688:	85800117 	ldw	r22,4(r16)
  83368c:	b0ac703a 	and	r22,r22,r2
  833690:	b4400336 	bltu	r22,r17,8336a0 <_malloc_r+0x344>
  833694:	b445c83a 	sub	r2,r22,r17
  833698:	00c003c4 	movi	r3,15
  83369c:	18805d16 	blt	r3,r2,833814 <_malloc_r+0x4b8>
  8336a0:	05c021b4 	movhi	r23,134
  8336a4:	008021b4 	movhi	r2,134
  8336a8:	10afc404 	addi	r2,r2,-16624
  8336ac:	bdef7504 	addi	r23,r23,-16940
  8336b0:	15400017 	ldw	r21,0(r2)
  8336b4:	b8c00017 	ldw	r3,0(r23)
  8336b8:	00bfffc4 	movi	r2,-1
  8336bc:	858d883a 	add	r6,r16,r22
  8336c0:	8d6b883a 	add	r21,r17,r21
  8336c4:	1880ea26 	beq	r3,r2,833a70 <_malloc_r+0x714>
  8336c8:	ad4403c4 	addi	r21,r21,4111
  8336cc:	00bc0004 	movi	r2,-4096
  8336d0:	a8aa703a 	and	r21,r21,r2
  8336d4:	a80b883a 	mov	r5,r21
  8336d8:	9009883a 	mov	r4,r18
  8336dc:	d9800015 	stw	r6,0(sp)
  8336e0:	0834dc80 	call	834dc8 <_sbrk_r>
  8336e4:	1029883a 	mov	r20,r2
  8336e8:	00bfffc4 	movi	r2,-1
  8336ec:	d9800017 	ldw	r6,0(sp)
  8336f0:	a080e826 	beq	r20,r2,833a94 <_malloc_r+0x738>
  8336f4:	a180a636 	bltu	r20,r6,833990 <_malloc_r+0x634>
  8336f8:	070021b4 	movhi	fp,134
  8336fc:	e72fea04 	addi	fp,fp,-16472
  833700:	e0800017 	ldw	r2,0(fp)
  833704:	a887883a 	add	r3,r21,r2
  833708:	e0c00015 	stw	r3,0(fp)
  83370c:	3500e626 	beq	r6,r20,833aa8 <_malloc_r+0x74c>
  833710:	b9000017 	ldw	r4,0(r23)
  833714:	00bfffc4 	movi	r2,-1
  833718:	2080ee26 	beq	r4,r2,833ad4 <_malloc_r+0x778>
  83371c:	a185c83a 	sub	r2,r20,r6
  833720:	10c5883a 	add	r2,r2,r3
  833724:	e0800015 	stw	r2,0(fp)
  833728:	a0c001cc 	andi	r3,r20,7
  83372c:	1800bc26 	beq	r3,zero,833a20 <_malloc_r+0x6c4>
  833730:	a0e9c83a 	sub	r20,r20,r3
  833734:	00840204 	movi	r2,4104
  833738:	a5000204 	addi	r20,r20,8
  83373c:	10c7c83a 	sub	r3,r2,r3
  833740:	a545883a 	add	r2,r20,r21
  833744:	1083ffcc 	andi	r2,r2,4095
  833748:	18abc83a 	sub	r21,r3,r2
  83374c:	a80b883a 	mov	r5,r21
  833750:	9009883a 	mov	r4,r18
  833754:	0834dc80 	call	834dc8 <_sbrk_r>
  833758:	00ffffc4 	movi	r3,-1
  83375c:	10c0e126 	beq	r2,r3,833ae4 <_malloc_r+0x788>
  833760:	1505c83a 	sub	r2,r2,r20
  833764:	1545883a 	add	r2,r2,r21
  833768:	10800054 	ori	r2,r2,1
  83376c:	e0c00017 	ldw	r3,0(fp)
  833770:	9d000215 	stw	r20,8(r19)
  833774:	a0800115 	stw	r2,4(r20)
  833778:	a8c7883a 	add	r3,r21,r3
  83377c:	e0c00015 	stw	r3,0(fp)
  833780:	84c00e26 	beq	r16,r19,8337bc <_malloc_r+0x460>
  833784:	018003c4 	movi	r6,15
  833788:	3580a72e 	bgeu	r6,r22,833a28 <_malloc_r+0x6cc>
  83378c:	81400117 	ldw	r5,4(r16)
  833790:	013ffe04 	movi	r4,-8
  833794:	b0bffd04 	addi	r2,r22,-12
  833798:	1104703a 	and	r2,r2,r4
  83379c:	2900004c 	andi	r4,r5,1
  8337a0:	2088b03a 	or	r4,r4,r2
  8337a4:	81000115 	stw	r4,4(r16)
  8337a8:	01400144 	movi	r5,5
  8337ac:	8089883a 	add	r4,r16,r2
  8337b0:	21400115 	stw	r5,4(r4)
  8337b4:	21400215 	stw	r5,8(r4)
  8337b8:	3080cd36 	bltu	r6,r2,833af0 <_malloc_r+0x794>
  8337bc:	008021b4 	movhi	r2,134
  8337c0:	10afc304 	addi	r2,r2,-16628
  8337c4:	11000017 	ldw	r4,0(r2)
  8337c8:	20c0012e 	bgeu	r4,r3,8337d0 <_malloc_r+0x474>
  8337cc:	10c00015 	stw	r3,0(r2)
  8337d0:	008021b4 	movhi	r2,134
  8337d4:	10afc204 	addi	r2,r2,-16632
  8337d8:	11000017 	ldw	r4,0(r2)
  8337dc:	9c000217 	ldw	r16,8(r19)
  8337e0:	20c0012e 	bgeu	r4,r3,8337e8 <_malloc_r+0x48c>
  8337e4:	10c00015 	stw	r3,0(r2)
  8337e8:	80c00117 	ldw	r3,4(r16)
  8337ec:	00bfff04 	movi	r2,-4
  8337f0:	1886703a 	and	r3,r3,r2
  8337f4:	1c45c83a 	sub	r2,r3,r17
  8337f8:	1c400236 	bltu	r3,r17,833804 <_malloc_r+0x4a8>
  8337fc:	00c003c4 	movi	r3,15
  833800:	18800416 	blt	r3,r2,833814 <_malloc_r+0x4b8>
  833804:	9009883a 	mov	r4,r18
  833808:	084a8300 	call	84a830 <__malloc_unlock>
  83380c:	0005883a 	mov	r2,zero
  833810:	003f7b06 	br	833600 <__alt_mem_epcs_flash_controller_0+0xff82a600>
  833814:	88c00054 	ori	r3,r17,1
  833818:	80c00115 	stw	r3,4(r16)
  83381c:	8463883a 	add	r17,r16,r17
  833820:	10800054 	ori	r2,r2,1
  833824:	9c400215 	stw	r17,8(r19)
  833828:	88800115 	stw	r2,4(r17)
  83382c:	9009883a 	mov	r4,r18
  833830:	084a8300 	call	84a830 <__malloc_unlock>
  833834:	80800204 	addi	r2,r16,8
  833838:	003f7106 	br	833600 <__alt_mem_epcs_flash_controller_0+0xff82a600>
  83383c:	00c00504 	movi	r3,20
  833840:	18804a2e 	bgeu	r3,r2,83396c <_malloc_r+0x610>
  833844:	00c01504 	movi	r3,84
  833848:	18806e36 	bltu	r3,r2,833a04 <_malloc_r+0x6a8>
  83384c:	8804d33a 	srli	r2,r17,12
  833850:	12001bc4 	addi	r8,r2,111
  833854:	11c01b84 	addi	r7,r2,110
  833858:	4209883a 	add	r4,r8,r8
  83385c:	003edd06 	br	8333d4 <__alt_mem_epcs_flash_controller_0+0xff82a3d4>
  833860:	3804d27a 	srli	r2,r7,9
  833864:	00c00104 	movi	r3,4
  833868:	1880442e 	bgeu	r3,r2,83397c <_malloc_r+0x620>
  83386c:	00c00504 	movi	r3,20
  833870:	18808136 	bltu	r3,r2,833a78 <_malloc_r+0x71c>
  833874:	11401704 	addi	r5,r2,92
  833878:	10c016c4 	addi	r3,r2,91
  83387c:	294b883a 	add	r5,r5,r5
  833880:	294b883a 	add	r5,r5,r5
  833884:	294b883a 	add	r5,r5,r5
  833888:	994b883a 	add	r5,r19,r5
  83388c:	28800017 	ldw	r2,0(r5)
  833890:	018021b4 	movhi	r6,134
  833894:	297ffe04 	addi	r5,r5,-8
  833898:	31a8f404 	addi	r6,r6,-23600
  83389c:	28806526 	beq	r5,r2,833a34 <_malloc_r+0x6d8>
  8338a0:	01bfff04 	movi	r6,-4
  8338a4:	10c00117 	ldw	r3,4(r2)
  8338a8:	1986703a 	and	r3,r3,r6
  8338ac:	38c0022e 	bgeu	r7,r3,8338b8 <_malloc_r+0x55c>
  8338b0:	10800217 	ldw	r2,8(r2)
  8338b4:	28bffb1e 	bne	r5,r2,8338a4 <__alt_mem_epcs_flash_controller_0+0xff82a8a4>
  8338b8:	11400317 	ldw	r5,12(r2)
  8338bc:	98c00117 	ldw	r3,4(r19)
  8338c0:	81400315 	stw	r5,12(r16)
  8338c4:	80800215 	stw	r2,8(r16)
  8338c8:	2c000215 	stw	r16,8(r5)
  8338cc:	14000315 	stw	r16,12(r2)
  8338d0:	003ef806 	br	8334b4 <__alt_mem_epcs_flash_controller_0+0xff82a4b4>
  8338d4:	88c00054 	ori	r3,r17,1
  8338d8:	80c00115 	stw	r3,4(r16)
  8338dc:	8463883a 	add	r17,r16,r17
  8338e0:	34400515 	stw	r17,20(r6)
  8338e4:	34400415 	stw	r17,16(r6)
  8338e8:	10c00054 	ori	r3,r2,1
  8338ec:	8a000315 	stw	r8,12(r17)
  8338f0:	8a000215 	stw	r8,8(r17)
  8338f4:	88c00115 	stw	r3,4(r17)
  8338f8:	88a3883a 	add	r17,r17,r2
  8338fc:	88800015 	stw	r2,0(r17)
  833900:	9009883a 	mov	r4,r18
  833904:	084a8300 	call	84a830 <__malloc_unlock>
  833908:	80800204 	addi	r2,r16,8
  83390c:	003f3c06 	br	833600 <__alt_mem_epcs_flash_controller_0+0xff82a600>
  833910:	30c00117 	ldw	r3,4(r6)
  833914:	003ee706 	br	8334b4 <__alt_mem_epcs_flash_controller_0+0xff82a4b4>
  833918:	5ac00044 	addi	r11,r11,1
  83391c:	588000cc 	andi	r2,r11,3
  833920:	31800204 	addi	r6,r6,8
  833924:	103efd1e 	bne	r2,zero,83351c <__alt_mem_epcs_flash_controller_0+0xff82a51c>
  833928:	00002406 	br	8339bc <_malloc_r+0x660>
  83392c:	14000317 	ldw	r16,12(r2)
  833930:	143f251e 	bne	r2,r16,8335c8 <__alt_mem_epcs_flash_controller_0+0xff82a5c8>
  833934:	21000084 	addi	r4,r4,2
  833938:	003ebc06 	br	83342c <__alt_mem_epcs_flash_controller_0+0xff82a42c>
  83393c:	8085883a 	add	r2,r16,r2
  833940:	10c00117 	ldw	r3,4(r2)
  833944:	81000317 	ldw	r4,12(r16)
  833948:	81400217 	ldw	r5,8(r16)
  83394c:	18c00054 	ori	r3,r3,1
  833950:	10c00115 	stw	r3,4(r2)
  833954:	29000315 	stw	r4,12(r5)
  833958:	21400215 	stw	r5,8(r4)
  83395c:	9009883a 	mov	r4,r18
  833960:	084a8300 	call	84a830 <__malloc_unlock>
  833964:	80800204 	addi	r2,r16,8
  833968:	003f2506 	br	833600 <__alt_mem_epcs_flash_controller_0+0xff82a600>
  83396c:	12001704 	addi	r8,r2,92
  833970:	11c016c4 	addi	r7,r2,91
  833974:	4209883a 	add	r4,r8,r8
  833978:	003e9606 	br	8333d4 <__alt_mem_epcs_flash_controller_0+0xff82a3d4>
  83397c:	3804d1ba 	srli	r2,r7,6
  833980:	11400e44 	addi	r5,r2,57
  833984:	10c00e04 	addi	r3,r2,56
  833988:	294b883a 	add	r5,r5,r5
  83398c:	003fbc06 	br	833880 <__alt_mem_epcs_flash_controller_0+0xff82a880>
  833990:	84ff5926 	beq	r16,r19,8336f8 <__alt_mem_epcs_flash_controller_0+0xff82a6f8>
  833994:	008021b4 	movhi	r2,134
  833998:	10a8f404 	addi	r2,r2,-23600
  83399c:	14000217 	ldw	r16,8(r2)
  8339a0:	00bfff04 	movi	r2,-4
  8339a4:	80c00117 	ldw	r3,4(r16)
  8339a8:	1886703a 	and	r3,r3,r2
  8339ac:	003f9106 	br	8337f4 <__alt_mem_epcs_flash_controller_0+0xff82a7f4>
  8339b0:	60800217 	ldw	r2,8(r12)
  8339b4:	213fffc4 	addi	r4,r4,-1
  8339b8:	1300651e 	bne	r2,r12,833b50 <_malloc_r+0x7f4>
  8339bc:	208000cc 	andi	r2,r4,3
  8339c0:	633ffe04 	addi	r12,r12,-8
  8339c4:	103ffa1e 	bne	r2,zero,8339b0 <__alt_mem_epcs_flash_controller_0+0xff82a9b0>
  8339c8:	98800117 	ldw	r2,4(r19)
  8339cc:	0146303a 	nor	r3,zero,r5
  8339d0:	1884703a 	and	r2,r3,r2
  8339d4:	98800115 	stw	r2,4(r19)
  8339d8:	294b883a 	add	r5,r5,r5
  8339dc:	117f2836 	bltu	r2,r5,833680 <__alt_mem_epcs_flash_controller_0+0xff82a680>
  8339e0:	283f2726 	beq	r5,zero,833680 <__alt_mem_epcs_flash_controller_0+0xff82a680>
  8339e4:	2886703a 	and	r3,r5,r2
  8339e8:	5809883a 	mov	r4,r11
  8339ec:	183ec31e 	bne	r3,zero,8334fc <__alt_mem_epcs_flash_controller_0+0xff82a4fc>
  8339f0:	294b883a 	add	r5,r5,r5
  8339f4:	2886703a 	and	r3,r5,r2
  8339f8:	21000104 	addi	r4,r4,4
  8339fc:	183ffc26 	beq	r3,zero,8339f0 <__alt_mem_epcs_flash_controller_0+0xff82a9f0>
  833a00:	003ebe06 	br	8334fc <__alt_mem_epcs_flash_controller_0+0xff82a4fc>
  833a04:	00c05504 	movi	r3,340
  833a08:	18801236 	bltu	r3,r2,833a54 <_malloc_r+0x6f8>
  833a0c:	8804d3fa 	srli	r2,r17,15
  833a10:	12001e04 	addi	r8,r2,120
  833a14:	11c01dc4 	addi	r7,r2,119
  833a18:	4209883a 	add	r4,r8,r8
  833a1c:	003e6d06 	br	8333d4 <__alt_mem_epcs_flash_controller_0+0xff82a3d4>
  833a20:	00c40004 	movi	r3,4096
  833a24:	003f4606 	br	833740 <__alt_mem_epcs_flash_controller_0+0xff82a740>
  833a28:	00800044 	movi	r2,1
  833a2c:	a0800115 	stw	r2,4(r20)
  833a30:	003f7406 	br	833804 <__alt_mem_epcs_flash_controller_0+0xff82a804>
  833a34:	1805d0ba 	srai	r2,r3,2
  833a38:	01c00044 	movi	r7,1
  833a3c:	30c00117 	ldw	r3,4(r6)
  833a40:	388e983a 	sll	r7,r7,r2
  833a44:	2805883a 	mov	r2,r5
  833a48:	38c6b03a 	or	r3,r7,r3
  833a4c:	30c00115 	stw	r3,4(r6)
  833a50:	003f9b06 	br	8338c0 <__alt_mem_epcs_flash_controller_0+0xff82a8c0>
  833a54:	00c15504 	movi	r3,1364
  833a58:	18801a36 	bltu	r3,r2,833ac4 <_malloc_r+0x768>
  833a5c:	8804d4ba 	srli	r2,r17,18
  833a60:	12001f44 	addi	r8,r2,125
  833a64:	11c01f04 	addi	r7,r2,124
  833a68:	4209883a 	add	r4,r8,r8
  833a6c:	003e5906 	br	8333d4 <__alt_mem_epcs_flash_controller_0+0xff82a3d4>
  833a70:	ad400404 	addi	r21,r21,16
  833a74:	003f1706 	br	8336d4 <__alt_mem_epcs_flash_controller_0+0xff82a6d4>
  833a78:	00c01504 	movi	r3,84
  833a7c:	18802336 	bltu	r3,r2,833b0c <_malloc_r+0x7b0>
  833a80:	3804d33a 	srli	r2,r7,12
  833a84:	11401bc4 	addi	r5,r2,111
  833a88:	10c01b84 	addi	r3,r2,110
  833a8c:	294b883a 	add	r5,r5,r5
  833a90:	003f7b06 	br	833880 <__alt_mem_epcs_flash_controller_0+0xff82a880>
  833a94:	9c000217 	ldw	r16,8(r19)
  833a98:	00bfff04 	movi	r2,-4
  833a9c:	80c00117 	ldw	r3,4(r16)
  833aa0:	1886703a 	and	r3,r3,r2
  833aa4:	003f5306 	br	8337f4 <__alt_mem_epcs_flash_controller_0+0xff82a7f4>
  833aa8:	3083ffcc 	andi	r2,r6,4095
  833aac:	103f181e 	bne	r2,zero,833710 <__alt_mem_epcs_flash_controller_0+0xff82a710>
  833ab0:	99000217 	ldw	r4,8(r19)
  833ab4:	b545883a 	add	r2,r22,r21
  833ab8:	10800054 	ori	r2,r2,1
  833abc:	20800115 	stw	r2,4(r4)
  833ac0:	003f3e06 	br	8337bc <__alt_mem_epcs_flash_controller_0+0xff82a7bc>
  833ac4:	01003f84 	movi	r4,254
  833ac8:	02001fc4 	movi	r8,127
  833acc:	01c01f84 	movi	r7,126
  833ad0:	003e4006 	br	8333d4 <__alt_mem_epcs_flash_controller_0+0xff82a3d4>
  833ad4:	008021b4 	movhi	r2,134
  833ad8:	10af7504 	addi	r2,r2,-16940
  833adc:	15000015 	stw	r20,0(r2)
  833ae0:	003f1106 	br	833728 <__alt_mem_epcs_flash_controller_0+0xff82a728>
  833ae4:	00800044 	movi	r2,1
  833ae8:	002b883a 	mov	r21,zero
  833aec:	003f1f06 	br	83376c <__alt_mem_epcs_flash_controller_0+0xff82a76c>
  833af0:	81400204 	addi	r5,r16,8
  833af4:	9009883a 	mov	r4,r18
  833af8:	0832d380 	call	832d38 <_free_r>
  833afc:	008021b4 	movhi	r2,134
  833b00:	10afea04 	addi	r2,r2,-16472
  833b04:	10c00017 	ldw	r3,0(r2)
  833b08:	003f2c06 	br	8337bc <__alt_mem_epcs_flash_controller_0+0xff82a7bc>
  833b0c:	00c05504 	movi	r3,340
  833b10:	18800536 	bltu	r3,r2,833b28 <_malloc_r+0x7cc>
  833b14:	3804d3fa 	srli	r2,r7,15
  833b18:	11401e04 	addi	r5,r2,120
  833b1c:	10c01dc4 	addi	r3,r2,119
  833b20:	294b883a 	add	r5,r5,r5
  833b24:	003f5606 	br	833880 <__alt_mem_epcs_flash_controller_0+0xff82a880>
  833b28:	00c15504 	movi	r3,1364
  833b2c:	18800536 	bltu	r3,r2,833b44 <_malloc_r+0x7e8>
  833b30:	3804d4ba 	srli	r2,r7,18
  833b34:	11401f44 	addi	r5,r2,125
  833b38:	10c01f04 	addi	r3,r2,124
  833b3c:	294b883a 	add	r5,r5,r5
  833b40:	003f4f06 	br	833880 <__alt_mem_epcs_flash_controller_0+0xff82a880>
  833b44:	01403f84 	movi	r5,254
  833b48:	00c01f84 	movi	r3,126
  833b4c:	003f4c06 	br	833880 <__alt_mem_epcs_flash_controller_0+0xff82a880>
  833b50:	98800117 	ldw	r2,4(r19)
  833b54:	003fa006 	br	8339d8 <__alt_mem_epcs_flash_controller_0+0xff82a9d8>
  833b58:	8808d0fa 	srli	r4,r17,3
  833b5c:	20800044 	addi	r2,r4,1
  833b60:	1085883a 	add	r2,r2,r2
  833b64:	003e9006 	br	8335a8 <__alt_mem_epcs_flash_controller_0+0xff82a5a8>

00833b68 <memchr>:
  833b68:	208000cc 	andi	r2,r4,3
  833b6c:	280f883a 	mov	r7,r5
  833b70:	10003426 	beq	r2,zero,833c44 <memchr+0xdc>
  833b74:	30bfffc4 	addi	r2,r6,-1
  833b78:	30001a26 	beq	r6,zero,833be4 <memchr+0x7c>
  833b7c:	20c00003 	ldbu	r3,0(r4)
  833b80:	29803fcc 	andi	r6,r5,255
  833b84:	30c0051e 	bne	r6,r3,833b9c <memchr+0x34>
  833b88:	00001806 	br	833bec <memchr+0x84>
  833b8c:	10001526 	beq	r2,zero,833be4 <memchr+0x7c>
  833b90:	20c00003 	ldbu	r3,0(r4)
  833b94:	10bfffc4 	addi	r2,r2,-1
  833b98:	30c01426 	beq	r6,r3,833bec <memchr+0x84>
  833b9c:	21000044 	addi	r4,r4,1
  833ba0:	20c000cc 	andi	r3,r4,3
  833ba4:	183ff91e 	bne	r3,zero,833b8c <__alt_mem_epcs_flash_controller_0+0xff82ab8c>
  833ba8:	020000c4 	movi	r8,3
  833bac:	40801136 	bltu	r8,r2,833bf4 <memchr+0x8c>
  833bb0:	10000c26 	beq	r2,zero,833be4 <memchr+0x7c>
  833bb4:	20c00003 	ldbu	r3,0(r4)
  833bb8:	29403fcc 	andi	r5,r5,255
  833bbc:	28c00b26 	beq	r5,r3,833bec <memchr+0x84>
  833bc0:	20c00044 	addi	r3,r4,1
  833bc4:	39803fcc 	andi	r6,r7,255
  833bc8:	2089883a 	add	r4,r4,r2
  833bcc:	00000306 	br	833bdc <memchr+0x74>
  833bd0:	18c00044 	addi	r3,r3,1
  833bd4:	197fffc3 	ldbu	r5,-1(r3)
  833bd8:	31400526 	beq	r6,r5,833bf0 <memchr+0x88>
  833bdc:	1805883a 	mov	r2,r3
  833be0:	20fffb1e 	bne	r4,r3,833bd0 <__alt_mem_epcs_flash_controller_0+0xff82abd0>
  833be4:	0005883a 	mov	r2,zero
  833be8:	f800283a 	ret
  833bec:	2005883a 	mov	r2,r4
  833bf0:	f800283a 	ret
  833bf4:	28c03fcc 	andi	r3,r5,255
  833bf8:	1812923a 	slli	r9,r3,8
  833bfc:	02ffbff4 	movhi	r11,65279
  833c00:	02a02074 	movhi	r10,32897
  833c04:	48d2b03a 	or	r9,r9,r3
  833c08:	4806943a 	slli	r3,r9,16
  833c0c:	5affbfc4 	addi	r11,r11,-257
  833c10:	52a02004 	addi	r10,r10,-32640
  833c14:	48d2b03a 	or	r9,r9,r3
  833c18:	20c00017 	ldw	r3,0(r4)
  833c1c:	48c6f03a 	xor	r3,r9,r3
  833c20:	1acd883a 	add	r6,r3,r11
  833c24:	00c6303a 	nor	r3,zero,r3
  833c28:	30c6703a 	and	r3,r6,r3
  833c2c:	1a86703a 	and	r3,r3,r10
  833c30:	183fe01e 	bne	r3,zero,833bb4 <__alt_mem_epcs_flash_controller_0+0xff82abb4>
  833c34:	10bfff04 	addi	r2,r2,-4
  833c38:	21000104 	addi	r4,r4,4
  833c3c:	40bff636 	bltu	r8,r2,833c18 <__alt_mem_epcs_flash_controller_0+0xff82ac18>
  833c40:	003fdb06 	br	833bb0 <__alt_mem_epcs_flash_controller_0+0xff82abb0>
  833c44:	3005883a 	mov	r2,r6
  833c48:	003fd706 	br	833ba8 <__alt_mem_epcs_flash_controller_0+0xff82aba8>

00833c4c <memcpy>:
  833c4c:	defffd04 	addi	sp,sp,-12
  833c50:	dfc00215 	stw	ra,8(sp)
  833c54:	dc400115 	stw	r17,4(sp)
  833c58:	dc000015 	stw	r16,0(sp)
  833c5c:	00c003c4 	movi	r3,15
  833c60:	2005883a 	mov	r2,r4
  833c64:	1980452e 	bgeu	r3,r6,833d7c <memcpy+0x130>
  833c68:	2906b03a 	or	r3,r5,r4
  833c6c:	18c000cc 	andi	r3,r3,3
  833c70:	1800441e 	bne	r3,zero,833d84 <memcpy+0x138>
  833c74:	347ffc04 	addi	r17,r6,-16
  833c78:	8822d13a 	srli	r17,r17,4
  833c7c:	28c00104 	addi	r3,r5,4
  833c80:	23400104 	addi	r13,r4,4
  833c84:	8820913a 	slli	r16,r17,4
  833c88:	2b000204 	addi	r12,r5,8
  833c8c:	22c00204 	addi	r11,r4,8
  833c90:	84000504 	addi	r16,r16,20
  833c94:	2a800304 	addi	r10,r5,12
  833c98:	22400304 	addi	r9,r4,12
  833c9c:	2c21883a 	add	r16,r5,r16
  833ca0:	2811883a 	mov	r8,r5
  833ca4:	200f883a 	mov	r7,r4
  833ca8:	41000017 	ldw	r4,0(r8)
  833cac:	1fc00017 	ldw	ra,0(r3)
  833cb0:	63c00017 	ldw	r15,0(r12)
  833cb4:	39000015 	stw	r4,0(r7)
  833cb8:	53800017 	ldw	r14,0(r10)
  833cbc:	6fc00015 	stw	ra,0(r13)
  833cc0:	5bc00015 	stw	r15,0(r11)
  833cc4:	4b800015 	stw	r14,0(r9)
  833cc8:	18c00404 	addi	r3,r3,16
  833ccc:	39c00404 	addi	r7,r7,16
  833cd0:	42000404 	addi	r8,r8,16
  833cd4:	6b400404 	addi	r13,r13,16
  833cd8:	63000404 	addi	r12,r12,16
  833cdc:	5ac00404 	addi	r11,r11,16
  833ce0:	52800404 	addi	r10,r10,16
  833ce4:	4a400404 	addi	r9,r9,16
  833ce8:	1c3fef1e 	bne	r3,r16,833ca8 <__alt_mem_epcs_flash_controller_0+0xff82aca8>
  833cec:	89c00044 	addi	r7,r17,1
  833cf0:	380e913a 	slli	r7,r7,4
  833cf4:	310003cc 	andi	r4,r6,15
  833cf8:	02c000c4 	movi	r11,3
  833cfc:	11c7883a 	add	r3,r2,r7
  833d00:	29cb883a 	add	r5,r5,r7
  833d04:	5900212e 	bgeu	r11,r4,833d8c <memcpy+0x140>
  833d08:	1813883a 	mov	r9,r3
  833d0c:	2811883a 	mov	r8,r5
  833d10:	200f883a 	mov	r7,r4
  833d14:	42800017 	ldw	r10,0(r8)
  833d18:	4a400104 	addi	r9,r9,4
  833d1c:	39ffff04 	addi	r7,r7,-4
  833d20:	4abfff15 	stw	r10,-4(r9)
  833d24:	42000104 	addi	r8,r8,4
  833d28:	59fffa36 	bltu	r11,r7,833d14 <__alt_mem_epcs_flash_controller_0+0xff82ad14>
  833d2c:	213fff04 	addi	r4,r4,-4
  833d30:	2008d0ba 	srli	r4,r4,2
  833d34:	318000cc 	andi	r6,r6,3
  833d38:	21000044 	addi	r4,r4,1
  833d3c:	2109883a 	add	r4,r4,r4
  833d40:	2109883a 	add	r4,r4,r4
  833d44:	1907883a 	add	r3,r3,r4
  833d48:	290b883a 	add	r5,r5,r4
  833d4c:	30000626 	beq	r6,zero,833d68 <memcpy+0x11c>
  833d50:	198d883a 	add	r6,r3,r6
  833d54:	29c00003 	ldbu	r7,0(r5)
  833d58:	18c00044 	addi	r3,r3,1
  833d5c:	29400044 	addi	r5,r5,1
  833d60:	19ffffc5 	stb	r7,-1(r3)
  833d64:	19bffb1e 	bne	r3,r6,833d54 <__alt_mem_epcs_flash_controller_0+0xff82ad54>
  833d68:	dfc00217 	ldw	ra,8(sp)
  833d6c:	dc400117 	ldw	r17,4(sp)
  833d70:	dc000017 	ldw	r16,0(sp)
  833d74:	dec00304 	addi	sp,sp,12
  833d78:	f800283a 	ret
  833d7c:	2007883a 	mov	r3,r4
  833d80:	003ff206 	br	833d4c <__alt_mem_epcs_flash_controller_0+0xff82ad4c>
  833d84:	2007883a 	mov	r3,r4
  833d88:	003ff106 	br	833d50 <__alt_mem_epcs_flash_controller_0+0xff82ad50>
  833d8c:	200d883a 	mov	r6,r4
  833d90:	003fee06 	br	833d4c <__alt_mem_epcs_flash_controller_0+0xff82ad4c>

00833d94 <memset>:
  833d94:	20c000cc 	andi	r3,r4,3
  833d98:	2005883a 	mov	r2,r4
  833d9c:	18004426 	beq	r3,zero,833eb0 <memset+0x11c>
  833da0:	31ffffc4 	addi	r7,r6,-1
  833da4:	30004026 	beq	r6,zero,833ea8 <memset+0x114>
  833da8:	2813883a 	mov	r9,r5
  833dac:	200d883a 	mov	r6,r4
  833db0:	2007883a 	mov	r3,r4
  833db4:	00000406 	br	833dc8 <memset+0x34>
  833db8:	3a3fffc4 	addi	r8,r7,-1
  833dbc:	31800044 	addi	r6,r6,1
  833dc0:	38003926 	beq	r7,zero,833ea8 <memset+0x114>
  833dc4:	400f883a 	mov	r7,r8
  833dc8:	18c00044 	addi	r3,r3,1
  833dcc:	32400005 	stb	r9,0(r6)
  833dd0:	1a0000cc 	andi	r8,r3,3
  833dd4:	403ff81e 	bne	r8,zero,833db8 <__alt_mem_epcs_flash_controller_0+0xff82adb8>
  833dd8:	010000c4 	movi	r4,3
  833ddc:	21c02d2e 	bgeu	r4,r7,833e94 <memset+0x100>
  833de0:	29003fcc 	andi	r4,r5,255
  833de4:	200c923a 	slli	r6,r4,8
  833de8:	3108b03a 	or	r4,r6,r4
  833dec:	200c943a 	slli	r6,r4,16
  833df0:	218cb03a 	or	r6,r4,r6
  833df4:	010003c4 	movi	r4,15
  833df8:	21c0182e 	bgeu	r4,r7,833e5c <memset+0xc8>
  833dfc:	3b3ffc04 	addi	r12,r7,-16
  833e00:	6018d13a 	srli	r12,r12,4
  833e04:	1a000104 	addi	r8,r3,4
  833e08:	1ac00204 	addi	r11,r3,8
  833e0c:	6008913a 	slli	r4,r12,4
  833e10:	1a800304 	addi	r10,r3,12
  833e14:	1813883a 	mov	r9,r3
  833e18:	21000504 	addi	r4,r4,20
  833e1c:	1909883a 	add	r4,r3,r4
  833e20:	49800015 	stw	r6,0(r9)
  833e24:	41800015 	stw	r6,0(r8)
  833e28:	59800015 	stw	r6,0(r11)
  833e2c:	51800015 	stw	r6,0(r10)
  833e30:	42000404 	addi	r8,r8,16
  833e34:	4a400404 	addi	r9,r9,16
  833e38:	5ac00404 	addi	r11,r11,16
  833e3c:	52800404 	addi	r10,r10,16
  833e40:	413ff71e 	bne	r8,r4,833e20 <__alt_mem_epcs_flash_controller_0+0xff82ae20>
  833e44:	63000044 	addi	r12,r12,1
  833e48:	6018913a 	slli	r12,r12,4
  833e4c:	39c003cc 	andi	r7,r7,15
  833e50:	010000c4 	movi	r4,3
  833e54:	1b07883a 	add	r3,r3,r12
  833e58:	21c00e2e 	bgeu	r4,r7,833e94 <memset+0x100>
  833e5c:	1813883a 	mov	r9,r3
  833e60:	3811883a 	mov	r8,r7
  833e64:	010000c4 	movi	r4,3
  833e68:	49800015 	stw	r6,0(r9)
  833e6c:	423fff04 	addi	r8,r8,-4
  833e70:	4a400104 	addi	r9,r9,4
  833e74:	223ffc36 	bltu	r4,r8,833e68 <__alt_mem_epcs_flash_controller_0+0xff82ae68>
  833e78:	393fff04 	addi	r4,r7,-4
  833e7c:	2008d0ba 	srli	r4,r4,2
  833e80:	39c000cc 	andi	r7,r7,3
  833e84:	21000044 	addi	r4,r4,1
  833e88:	2109883a 	add	r4,r4,r4
  833e8c:	2109883a 	add	r4,r4,r4
  833e90:	1907883a 	add	r3,r3,r4
  833e94:	38000526 	beq	r7,zero,833eac <memset+0x118>
  833e98:	19cf883a 	add	r7,r3,r7
  833e9c:	19400005 	stb	r5,0(r3)
  833ea0:	18c00044 	addi	r3,r3,1
  833ea4:	38fffd1e 	bne	r7,r3,833e9c <__alt_mem_epcs_flash_controller_0+0xff82ae9c>
  833ea8:	f800283a 	ret
  833eac:	f800283a 	ret
  833eb0:	2007883a 	mov	r3,r4
  833eb4:	300f883a 	mov	r7,r6
  833eb8:	003fc706 	br	833dd8 <__alt_mem_epcs_flash_controller_0+0xff82add8>

00833ebc <memseeker>:
  833ebc:	00c00044 	movi	r3,1
  833ec0:	3005883a 	mov	r2,r6
  833ec4:	38c02926 	beq	r7,r3,833f6c <memseeker+0xb0>
  833ec8:	00c00084 	movi	r3,2
  833ecc:	38c02426 	beq	r7,r3,833f60 <memseeker+0xa4>
  833ed0:	10003c16 	blt	r2,zero,833fc4 <memseeker+0x108>
  833ed4:	29000317 	ldw	r4,12(r5)
  833ed8:	28c00417 	ldw	r3,16(r5)
  833edc:	20c0092e 	bgeu	r4,r3,833f04 <memseeker+0x48>
  833ee0:	28c00707 	ldb	r3,28(r5)
  833ee4:	29800117 	ldw	r6,4(r5)
  833ee8:	00c0260e 	bge	zero,r3,833f84 <memseeker+0xc8>
  833eec:	31800017 	ldw	r6,0(r6)
  833ef0:	28c00617 	ldw	r3,24(r5)
  833ef4:	3109883a 	add	r4,r6,r4
  833ef8:	20c00015 	stw	r3,0(r4)
  833efc:	28c00417 	ldw	r3,16(r5)
  833f00:	28000615 	stw	zero,24(r5)
  833f04:	28800315 	stw	r2,12(r5)
  833f08:	10c00f2e 	bgeu	r2,r3,833f48 <memseeker+0x8c>
  833f0c:	28c00707 	ldb	r3,28(r5)
  833f10:	29000117 	ldw	r4,4(r5)
  833f14:	00c0200e 	bge	zero,r3,833f98 <memseeker+0xdc>
  833f18:	20c00017 	ldw	r3,0(r4)
  833f1c:	29800217 	ldw	r6,8(r5)
  833f20:	1887883a 	add	r3,r3,r2
  833f24:	18c00017 	ldw	r3,0(r3)
  833f28:	28c00615 	stw	r3,24(r5)
  833f2c:	20c00017 	ldw	r3,0(r4)
  833f30:	1887883a 	add	r3,r3,r2
  833f34:	18000015 	stw	zero,0(r3)
  833f38:	28c00317 	ldw	r3,12(r5)
  833f3c:	1806d0ba 	srli	r3,r3,2
  833f40:	30c00015 	stw	r3,0(r6)
  833f44:	f800283a 	ret
  833f48:	29000707 	ldb	r4,28(r5)
  833f4c:	01000a0e 	bge	zero,r4,833f78 <memseeker+0xbc>
  833f50:	29000217 	ldw	r4,8(r5)
  833f54:	1806d0ba 	srli	r3,r3,2
  833f58:	20c00015 	stw	r3,0(r4)
  833f5c:	f800283a 	ret
  833f60:	28c00417 	ldw	r3,16(r5)
  833f64:	30c5883a 	add	r2,r6,r3
  833f68:	003fd906 	br	833ed0 <__alt_mem_epcs_flash_controller_0+0xff82aed0>
  833f6c:	28c00317 	ldw	r3,12(r5)
  833f70:	30c5883a 	add	r2,r6,r3
  833f74:	003fd606 	br	833ed0 <__alt_mem_epcs_flash_controller_0+0xff82aed0>
  833f78:	29000217 	ldw	r4,8(r5)
  833f7c:	20c00015 	stw	r3,0(r4)
  833f80:	f800283a 	ret
  833f84:	31800017 	ldw	r6,0(r6)
  833f88:	28c00603 	ldbu	r3,24(r5)
  833f8c:	3109883a 	add	r4,r6,r4
  833f90:	20c00005 	stb	r3,0(r4)
  833f94:	003fd906 	br	833efc <__alt_mem_epcs_flash_controller_0+0xff82aefc>
  833f98:	20c00017 	ldw	r3,0(r4)
  833f9c:	1887883a 	add	r3,r3,r2
  833fa0:	18c00003 	ldbu	r3,0(r3)
  833fa4:	28c00605 	stb	r3,24(r5)
  833fa8:	20c00017 	ldw	r3,0(r4)
  833fac:	1887883a 	add	r3,r3,r2
  833fb0:	18000005 	stb	zero,0(r3)
  833fb4:	29000317 	ldw	r4,12(r5)
  833fb8:	28c00217 	ldw	r3,8(r5)
  833fbc:	19000015 	stw	r4,0(r3)
  833fc0:	f800283a 	ret
  833fc4:	00800584 	movi	r2,22
  833fc8:	20800015 	stw	r2,0(r4)
  833fcc:	00bfffc4 	movi	r2,-1
  833fd0:	f800283a 	ret

00833fd4 <internal_open_memstream_r>:
  833fd4:	defff904 	addi	sp,sp,-28
  833fd8:	dd000415 	stw	r20,16(sp)
  833fdc:	dfc00615 	stw	ra,24(sp)
  833fe0:	dd400515 	stw	r21,20(sp)
  833fe4:	dcc00315 	stw	r19,12(sp)
  833fe8:	dc800215 	stw	r18,8(sp)
  833fec:	dc400115 	stw	r17,4(sp)
  833ff0:	dc000015 	stw	r16,0(sp)
  833ff4:	2029883a 	mov	r20,r4
  833ff8:	28004f26 	beq	r5,zero,834138 <internal_open_memstream_r+0x164>
  833ffc:	30004e26 	beq	r6,zero,834138 <internal_open_memstream_r+0x164>
  834000:	3827883a 	mov	r19,r7
  834004:	3025883a 	mov	r18,r6
  834008:	282b883a 	mov	r21,r5
  83400c:	08323000 	call	832300 <__sfp>
  834010:	1021883a 	mov	r16,r2
  834014:	10004c26 	beq	r2,zero,834148 <internal_open_memstream_r+0x174>
  834018:	01400804 	movi	r5,32
  83401c:	a009883a 	mov	r4,r20
  834020:	083335c0 	call	83335c <_malloc_r>
  834024:	1023883a 	mov	r17,r2
  834028:	10004926 	beq	r2,zero,834150 <internal_open_memstream_r+0x17c>
  83402c:	00c00044 	movi	r3,1
  834030:	90800017 	ldw	r2,0(r18)
  834034:	98c03626 	beq	r19,r3,834110 <internal_open_memstream_r+0x13c>
  834038:	88800515 	stw	r2,20(r17)
  83403c:	00c00fc4 	movi	r3,63
  834040:	1880302e 	bgeu	r3,r2,834104 <internal_open_memstream_r+0x130>
  834044:	00c00074 	movhi	r3,1
  834048:	1880012e 	bgeu	r3,r2,834050 <internal_open_memstream_r+0x7c>
  83404c:	88c00515 	stw	r3,20(r17)
  834050:	90000015 	stw	zero,0(r18)
  834054:	89400517 	ldw	r5,20(r17)
  834058:	a009883a 	mov	r4,r20
  83405c:	083335c0 	call	83335c <_malloc_r>
  834060:	a8800015 	stw	r2,0(r21)
  834064:	10003f26 	beq	r2,zero,834164 <internal_open_memstream_r+0x190>
  834068:	00c00044 	movi	r3,1
  83406c:	98c02b26 	beq	r19,r3,83411c <internal_open_memstream_r+0x148>
  834070:	10000005 	stb	zero,0(r2)
  834074:	88000615 	stw	zero,24(r17)
  834078:	8cc00705 	stb	r19,28(r17)
  83407c:	8c400015 	stw	r17,0(r17)
  834080:	8d400115 	stw	r21,4(r17)
  834084:	8c800215 	stw	r18,8(r17)
  834088:	88000315 	stw	zero,12(r17)
  83408c:	88000415 	stw	zero,16(r17)
  834090:	00bfffc4 	movi	r2,-1
  834094:	8080038d 	sth	r2,14(r16)
  834098:	008020f4 	movhi	r2,131
  83409c:	10908204 	addi	r2,r2,16904
  8340a0:	80800915 	stw	r2,36(r16)
  8340a4:	008020f4 	movhi	r2,131
  8340a8:	108faf04 	addi	r2,r2,16060
  8340ac:	80800a15 	stw	r2,40(r16)
  8340b0:	008020f4 	movhi	r2,131
  8340b4:	10906104 	addi	r2,r2,16772
  8340b8:	80800b15 	stw	r2,44(r16)
  8340bc:	00880204 	movi	r2,8200
  8340c0:	8080030d 	sth	r2,12(r16)
  8340c4:	84400715 	stw	r17,28(r16)
  8340c8:	80000815 	stw	zero,32(r16)
  8340cc:	80801917 	ldw	r2,100(r16)
  8340d0:	04c0140e 	bge	zero,r19,834124 <internal_open_memstream_r+0x150>
  8340d4:	10880014 	ori	r2,r2,8192
  8340d8:	80801915 	stw	r2,100(r16)
  8340dc:	8005883a 	mov	r2,r16
  8340e0:	dfc00617 	ldw	ra,24(sp)
  8340e4:	dd400517 	ldw	r21,20(sp)
  8340e8:	dd000417 	ldw	r20,16(sp)
  8340ec:	dcc00317 	ldw	r19,12(sp)
  8340f0:	dc800217 	ldw	r18,8(sp)
  8340f4:	dc400117 	ldw	r17,4(sp)
  8340f8:	dc000017 	ldw	r16,0(sp)
  8340fc:	dec00704 	addi	sp,sp,28
  834100:	f800283a 	ret
  834104:	00801004 	movi	r2,64
  834108:	88800515 	stw	r2,20(r17)
  83410c:	003fd006 	br	834050 <__alt_mem_epcs_flash_controller_0+0xff82b050>
  834110:	1085883a 	add	r2,r2,r2
  834114:	1085883a 	add	r2,r2,r2
  834118:	003fc706 	br	834038 <__alt_mem_epcs_flash_controller_0+0xff82b038>
  83411c:	10000015 	stw	zero,0(r2)
  834120:	003fd406 	br	834074 <__alt_mem_epcs_flash_controller_0+0xff82b074>
  834124:	00f7ffc4 	movi	r3,-8193
  834128:	10c4703a 	and	r2,r2,r3
  83412c:	80801915 	stw	r2,100(r16)
  834130:	8005883a 	mov	r2,r16
  834134:	003fea06 	br	8340e0 <__alt_mem_epcs_flash_controller_0+0xff82b0e0>
  834138:	00800584 	movi	r2,22
  83413c:	a0800015 	stw	r2,0(r20)
  834140:	0005883a 	mov	r2,zero
  834144:	003fe606 	br	8340e0 <__alt_mem_epcs_flash_controller_0+0xff82b0e0>
  834148:	0005883a 	mov	r2,zero
  83414c:	003fe406 	br	8340e0 <__alt_mem_epcs_flash_controller_0+0xff82b0e0>
  834150:	08324400 	call	832440 <__sfp_lock_acquire>
  834154:	8000030d 	sth	zero,12(r16)
  834158:	08324440 	call	832444 <__sfp_lock_release>
  83415c:	0005883a 	mov	r2,zero
  834160:	003fdf06 	br	8340e0 <__alt_mem_epcs_flash_controller_0+0xff82b0e0>
  834164:	08324400 	call	832440 <__sfp_lock_acquire>
  834168:	8000030d 	sth	zero,12(r16)
  83416c:	08324440 	call	832444 <__sfp_lock_release>
  834170:	880b883a 	mov	r5,r17
  834174:	a009883a 	mov	r4,r20
  834178:	0832d380 	call	832d38 <_free_r>
  83417c:	0005883a 	mov	r2,zero
  834180:	003fd706 	br	8340e0 <__alt_mem_epcs_flash_controller_0+0xff82b0e0>

00834184 <memcloser>:
  834184:	defffd04 	addi	sp,sp,-12
  834188:	dc400115 	stw	r17,4(sp)
  83418c:	dc000015 	stw	r16,0(sp)
  834190:	dfc00215 	stw	ra,8(sp)
  834194:	28c00117 	ldw	r3,4(r5)
  834198:	28800707 	ldb	r2,28(r5)
  83419c:	2821883a 	mov	r16,r5
  8341a0:	2023883a 	mov	r17,r4
  8341a4:	19400017 	ldw	r5,0(r3)
  8341a8:	0080130e 	bge	zero,r2,8341f8 <memcloser+0x74>
  8341ac:	80800217 	ldw	r2,8(r16)
  8341b0:	11800017 	ldw	r6,0(r2)
  8341b4:	31800044 	addi	r6,r6,1
  8341b8:	318d883a 	add	r6,r6,r6
  8341bc:	318d883a 	add	r6,r6,r6
  8341c0:	8809883a 	mov	r4,r17
  8341c4:	08346740 	call	834674 <_realloc_r>
  8341c8:	10000226 	beq	r2,zero,8341d4 <memcloser+0x50>
  8341cc:	80c00117 	ldw	r3,4(r16)
  8341d0:	18800015 	stw	r2,0(r3)
  8341d4:	81400017 	ldw	r5,0(r16)
  8341d8:	8809883a 	mov	r4,r17
  8341dc:	0832d380 	call	832d38 <_free_r>
  8341e0:	0005883a 	mov	r2,zero
  8341e4:	dfc00217 	ldw	ra,8(sp)
  8341e8:	dc400117 	ldw	r17,4(sp)
  8341ec:	dc000017 	ldw	r16,0(sp)
  8341f0:	dec00304 	addi	sp,sp,12
  8341f4:	f800283a 	ret
  8341f8:	80800217 	ldw	r2,8(r16)
  8341fc:	11800017 	ldw	r6,0(r2)
  834200:	31800044 	addi	r6,r6,1
  834204:	003fee06 	br	8341c0 <__alt_mem_epcs_flash_controller_0+0xff82b1c0>

00834208 <memwriter>:
  834208:	2a000317 	ldw	r8,12(r5)
  83420c:	28800117 	ldw	r2,4(r5)
  834210:	defffa04 	addi	sp,sp,-24
  834214:	dcc00315 	stw	r19,12(sp)
  834218:	dfc00515 	stw	ra,20(sp)
  83421c:	dd000415 	stw	r20,16(sp)
  834220:	dc800215 	stw	r18,8(sp)
  834224:	dc400115 	stw	r17,4(sp)
  834228:	dc000015 	stw	r16,0(sp)
  83422c:	41d3883a 	add	r9,r8,r7
  834230:	14c00017 	ldw	r19,0(r2)
  834234:	48004516 	blt	r9,zero,83434c <memwriter+0x144>
  834238:	28c00517 	ldw	r3,20(r5)
  83423c:	3029883a 	mov	r20,r6
  834240:	3825883a 	mov	r18,r7
  834244:	2821883a 	mov	r16,r5
  834248:	48c00f36 	bltu	r9,r3,834288 <memwriter+0x80>
  83424c:	18e3883a 	add	r17,r3,r3
  834250:	88c7883a 	add	r3,r17,r3
  834254:	1822d07a 	srli	r17,r3,1
  834258:	4a400044 	addi	r9,r9,1
  83425c:	8a40012e 	bgeu	r17,r9,834264 <memwriter+0x5c>
  834260:	4823883a 	mov	r17,r9
  834264:	980b883a 	mov	r5,r19
  834268:	880d883a 	mov	r6,r17
  83426c:	08346740 	call	834674 <_realloc_r>
  834270:	1027883a 	mov	r19,r2
  834274:	10003926 	beq	r2,zero,83435c <memwriter+0x154>
  834278:	80800117 	ldw	r2,4(r16)
  83427c:	82000317 	ldw	r8,12(r16)
  834280:	14c00015 	stw	r19,0(r2)
  834284:	84400515 	stw	r17,20(r16)
  834288:	81000417 	ldw	r4,16(r16)
  83428c:	22002636 	bltu	r4,r8,834328 <memwriter+0x120>
  834290:	a00b883a 	mov	r5,r20
  834294:	900d883a 	mov	r6,r18
  834298:	9a09883a 	add	r4,r19,r8
  83429c:	0833c4c0 	call	833c4c <memcpy>
  8342a0:	81400317 	ldw	r5,12(r16)
  8342a4:	80800417 	ldw	r2,16(r16)
  8342a8:	914b883a 	add	r5,r18,r5
  8342ac:	81400315 	stw	r5,12(r16)
  8342b0:	11401536 	bltu	r2,r5,834308 <memwriter+0x100>
  8342b4:	80800707 	ldb	r2,28(r16)
  8342b8:	994b883a 	add	r5,r19,r5
  8342bc:	0080200e 	bge	zero,r2,834340 <memwriter+0x138>
  8342c0:	28800017 	ldw	r2,0(r5)
  8342c4:	80800615 	stw	r2,24(r16)
  8342c8:	28000005 	stb	zero,0(r5)
  8342cc:	80800707 	ldb	r2,28(r16)
  8342d0:	80c00217 	ldw	r3,8(r16)
  8342d4:	0080120e 	bge	zero,r2,834320 <memwriter+0x118>
  8342d8:	80800317 	ldw	r2,12(r16)
  8342dc:	1004d0ba 	srli	r2,r2,2
  8342e0:	18800015 	stw	r2,0(r3)
  8342e4:	9005883a 	mov	r2,r18
  8342e8:	dfc00517 	ldw	ra,20(sp)
  8342ec:	dd000417 	ldw	r20,16(sp)
  8342f0:	dcc00317 	ldw	r19,12(sp)
  8342f4:	dc800217 	ldw	r18,8(sp)
  8342f8:	dc400117 	ldw	r17,4(sp)
  8342fc:	dc000017 	ldw	r16,0(sp)
  834300:	dec00604 	addi	sp,sp,24
  834304:	f800283a 	ret
  834308:	81400415 	stw	r5,16(r16)
  83430c:	994b883a 	add	r5,r19,r5
  834310:	28000005 	stb	zero,0(r5)
  834314:	80800707 	ldb	r2,28(r16)
  834318:	80c00217 	ldw	r3,8(r16)
  83431c:	00bfee16 	blt	zero,r2,8342d8 <__alt_mem_epcs_flash_controller_0+0xff82b2d8>
  834320:	80800317 	ldw	r2,12(r16)
  834324:	003fee06 	br	8342e0 <__alt_mem_epcs_flash_controller_0+0xff82b2e0>
  834328:	410dc83a 	sub	r6,r8,r4
  83432c:	000b883a 	mov	r5,zero
  834330:	9909883a 	add	r4,r19,r4
  834334:	0833d940 	call	833d94 <memset>
  834338:	82000317 	ldw	r8,12(r16)
  83433c:	003fd406 	br	834290 <__alt_mem_epcs_flash_controller_0+0xff82b290>
  834340:	28800003 	ldbu	r2,0(r5)
  834344:	80800605 	stb	r2,24(r16)
  834348:	003fdf06 	br	8342c8 <__alt_mem_epcs_flash_controller_0+0xff82b2c8>
  83434c:	008006c4 	movi	r2,27
  834350:	20800015 	stw	r2,0(r4)
  834354:	00bfffc4 	movi	r2,-1
  834358:	003fe306 	br	8342e8 <__alt_mem_epcs_flash_controller_0+0xff82b2e8>
  83435c:	00bfffc4 	movi	r2,-1
  834360:	003fe106 	br	8342e8 <__alt_mem_epcs_flash_controller_0+0xff82b2e8>

00834364 <_open_memstream_r>:
  834364:	01ffffc4 	movi	r7,-1
  834368:	0833fd41 	jmpi	833fd4 <internal_open_memstream_r>

0083436c <_open_wmemstream_r>:
  83436c:	01c00044 	movi	r7,1
  834370:	0833fd41 	jmpi	833fd4 <internal_open_memstream_r>

00834374 <open_memstream>:
  834374:	008021b4 	movhi	r2,134
  834378:	10af7404 	addi	r2,r2,-16944
  83437c:	280d883a 	mov	r6,r5
  834380:	200b883a 	mov	r5,r4
  834384:	11000017 	ldw	r4,0(r2)
  834388:	01ffffc4 	movi	r7,-1
  83438c:	0833fd41 	jmpi	833fd4 <internal_open_memstream_r>

00834390 <open_wmemstream>:
  834390:	008021b4 	movhi	r2,134
  834394:	10af7404 	addi	r2,r2,-16944
  834398:	280d883a 	mov	r6,r5
  83439c:	200b883a 	mov	r5,r4
  8343a0:	11000017 	ldw	r4,0(r2)
  8343a4:	01c00044 	movi	r7,1
  8343a8:	0833fd41 	jmpi	833fd4 <internal_open_memstream_r>

008343ac <_printf_r>:
  8343ac:	defffd04 	addi	sp,sp,-12
  8343b0:	2805883a 	mov	r2,r5
  8343b4:	dfc00015 	stw	ra,0(sp)
  8343b8:	d9800115 	stw	r6,4(sp)
  8343bc:	d9c00215 	stw	r7,8(sp)
  8343c0:	21400217 	ldw	r5,8(r4)
  8343c4:	d9c00104 	addi	r7,sp,4
  8343c8:	100d883a 	mov	r6,r2
  8343cc:	0838fb40 	call	838fb4 <___vfprintf_internal_r>
  8343d0:	dfc00017 	ldw	ra,0(sp)
  8343d4:	dec00304 	addi	sp,sp,12
  8343d8:	f800283a 	ret

008343dc <printf>:
  8343dc:	defffc04 	addi	sp,sp,-16
  8343e0:	dfc00015 	stw	ra,0(sp)
  8343e4:	d9400115 	stw	r5,4(sp)
  8343e8:	d9800215 	stw	r6,8(sp)
  8343ec:	d9c00315 	stw	r7,12(sp)
  8343f0:	008021b4 	movhi	r2,134
  8343f4:	10af7404 	addi	r2,r2,-16944
  8343f8:	10800017 	ldw	r2,0(r2)
  8343fc:	200b883a 	mov	r5,r4
  834400:	d9800104 	addi	r6,sp,4
  834404:	11000217 	ldw	r4,8(r2)
  834408:	083b2900 	call	83b290 <__vfprintf_internal>
  83440c:	dfc00017 	ldw	ra,0(sp)
  834410:	dec00404 	addi	sp,sp,16
  834414:	f800283a 	ret

00834418 <_putc_r>:
  834418:	defffc04 	addi	sp,sp,-16
  83441c:	dc000215 	stw	r16,8(sp)
  834420:	dfc00315 	stw	ra,12(sp)
  834424:	2021883a 	mov	r16,r4
  834428:	20000226 	beq	r4,zero,834434 <_putc_r+0x1c>
  83442c:	20800e17 	ldw	r2,56(r4)
  834430:	10001b26 	beq	r2,zero,8344a0 <_putc_r+0x88>
  834434:	30800217 	ldw	r2,8(r6)
  834438:	10bfffc4 	addi	r2,r2,-1
  83443c:	30800215 	stw	r2,8(r6)
  834440:	10000a16 	blt	r2,zero,83446c <_putc_r+0x54>
  834444:	30800017 	ldw	r2,0(r6)
  834448:	11400005 	stb	r5,0(r2)
  83444c:	30800017 	ldw	r2,0(r6)
  834450:	10c00044 	addi	r3,r2,1
  834454:	30c00015 	stw	r3,0(r6)
  834458:	10800003 	ldbu	r2,0(r2)
  83445c:	dfc00317 	ldw	ra,12(sp)
  834460:	dc000217 	ldw	r16,8(sp)
  834464:	dec00404 	addi	sp,sp,16
  834468:	f800283a 	ret
  83446c:	30c00617 	ldw	r3,24(r6)
  834470:	10c00616 	blt	r2,r3,83448c <_putc_r+0x74>
  834474:	30800017 	ldw	r2,0(r6)
  834478:	00c00284 	movi	r3,10
  83447c:	11400005 	stb	r5,0(r2)
  834480:	30800017 	ldw	r2,0(r6)
  834484:	11400003 	ldbu	r5,0(r2)
  834488:	28fff11e 	bne	r5,r3,834450 <__alt_mem_epcs_flash_controller_0+0xff82b450>
  83448c:	8009883a 	mov	r4,r16
  834490:	dfc00317 	ldw	ra,12(sp)
  834494:	dc000217 	ldw	r16,8(sp)
  834498:	dec00404 	addi	sp,sp,16
  83449c:	083b3681 	jmpi	83b368 <__swbuf_r>
  8344a0:	d9400015 	stw	r5,0(sp)
  8344a4:	d9800115 	stw	r6,4(sp)
  8344a8:	08324300 	call	832430 <__sinit>
  8344ac:	d9800117 	ldw	r6,4(sp)
  8344b0:	d9400017 	ldw	r5,0(sp)
  8344b4:	003fdf06 	br	834434 <__alt_mem_epcs_flash_controller_0+0xff82b434>

008344b8 <putc>:
  8344b8:	008021b4 	movhi	r2,134
  8344bc:	defffc04 	addi	sp,sp,-16
  8344c0:	10af7404 	addi	r2,r2,-16944
  8344c4:	dc000115 	stw	r16,4(sp)
  8344c8:	14000017 	ldw	r16,0(r2)
  8344cc:	dc400215 	stw	r17,8(sp)
  8344d0:	dfc00315 	stw	ra,12(sp)
  8344d4:	2023883a 	mov	r17,r4
  8344d8:	80000226 	beq	r16,zero,8344e4 <putc+0x2c>
  8344dc:	80800e17 	ldw	r2,56(r16)
  8344e0:	10001a26 	beq	r2,zero,83454c <putc+0x94>
  8344e4:	28800217 	ldw	r2,8(r5)
  8344e8:	10bfffc4 	addi	r2,r2,-1
  8344ec:	28800215 	stw	r2,8(r5)
  8344f0:	10000b16 	blt	r2,zero,834520 <putc+0x68>
  8344f4:	28800017 	ldw	r2,0(r5)
  8344f8:	14400005 	stb	r17,0(r2)
  8344fc:	28800017 	ldw	r2,0(r5)
  834500:	10c00044 	addi	r3,r2,1
  834504:	28c00015 	stw	r3,0(r5)
  834508:	10800003 	ldbu	r2,0(r2)
  83450c:	dfc00317 	ldw	ra,12(sp)
  834510:	dc400217 	ldw	r17,8(sp)
  834514:	dc000117 	ldw	r16,4(sp)
  834518:	dec00404 	addi	sp,sp,16
  83451c:	f800283a 	ret
  834520:	28c00617 	ldw	r3,24(r5)
  834524:	10c00e16 	blt	r2,r3,834560 <putc+0xa8>
  834528:	28800017 	ldw	r2,0(r5)
  83452c:	01000284 	movi	r4,10
  834530:	14400005 	stb	r17,0(r2)
  834534:	28800017 	ldw	r2,0(r5)
  834538:	10c00003 	ldbu	r3,0(r2)
  83453c:	193ff01e 	bne	r3,r4,834500 <__alt_mem_epcs_flash_controller_0+0xff82b500>
  834540:	280d883a 	mov	r6,r5
  834544:	180b883a 	mov	r5,r3
  834548:	00000706 	br	834568 <putc+0xb0>
  83454c:	8009883a 	mov	r4,r16
  834550:	d9400015 	stw	r5,0(sp)
  834554:	08324300 	call	832430 <__sinit>
  834558:	d9400017 	ldw	r5,0(sp)
  83455c:	003fe106 	br	8344e4 <__alt_mem_epcs_flash_controller_0+0xff82b4e4>
  834560:	280d883a 	mov	r6,r5
  834564:	880b883a 	mov	r5,r17
  834568:	8009883a 	mov	r4,r16
  83456c:	dfc00317 	ldw	ra,12(sp)
  834570:	dc400217 	ldw	r17,8(sp)
  834574:	dc000117 	ldw	r16,4(sp)
  834578:	dec00404 	addi	sp,sp,16
  83457c:	083b3681 	jmpi	83b368 <__swbuf_r>

00834580 <_putchar_r>:
  834580:	21800217 	ldw	r6,8(r4)
  834584:	08344181 	jmpi	834418 <_putc_r>

00834588 <putchar>:
  834588:	008021b4 	movhi	r2,134
  83458c:	10af7404 	addi	r2,r2,-16944
  834590:	200b883a 	mov	r5,r4
  834594:	11000017 	ldw	r4,0(r2)
  834598:	21800217 	ldw	r6,8(r4)
  83459c:	08344181 	jmpi	834418 <_putc_r>

008345a0 <_puts_r>:
  8345a0:	defff604 	addi	sp,sp,-40
  8345a4:	dc000715 	stw	r16,28(sp)
  8345a8:	2021883a 	mov	r16,r4
  8345ac:	2809883a 	mov	r4,r5
  8345b0:	dc400815 	stw	r17,32(sp)
  8345b4:	dfc00915 	stw	ra,36(sp)
  8345b8:	2823883a 	mov	r17,r5
  8345bc:	08351100 	call	835110 <strlen>
  8345c0:	10c00044 	addi	r3,r2,1
  8345c4:	d8800115 	stw	r2,4(sp)
  8345c8:	008021b4 	movhi	r2,134
  8345cc:	10a5f404 	addi	r2,r2,-26672
  8345d0:	d8800215 	stw	r2,8(sp)
  8345d4:	00800044 	movi	r2,1
  8345d8:	d8800315 	stw	r2,12(sp)
  8345dc:	00800084 	movi	r2,2
  8345e0:	dc400015 	stw	r17,0(sp)
  8345e4:	d8c00615 	stw	r3,24(sp)
  8345e8:	dec00415 	stw	sp,16(sp)
  8345ec:	d8800515 	stw	r2,20(sp)
  8345f0:	80000226 	beq	r16,zero,8345fc <_puts_r+0x5c>
  8345f4:	80800e17 	ldw	r2,56(r16)
  8345f8:	10001426 	beq	r2,zero,83464c <_puts_r+0xac>
  8345fc:	81400217 	ldw	r5,8(r16)
  834600:	2880030b 	ldhu	r2,12(r5)
  834604:	10c8000c 	andi	r3,r2,8192
  834608:	1800061e 	bne	r3,zero,834624 <_puts_r+0x84>
  83460c:	29001917 	ldw	r4,100(r5)
  834610:	00f7ffc4 	movi	r3,-8193
  834614:	10880014 	ori	r2,r2,8192
  834618:	20c6703a 	and	r3,r4,r3
  83461c:	2880030d 	sth	r2,12(r5)
  834620:	28c01915 	stw	r3,100(r5)
  834624:	d9800404 	addi	r6,sp,16
  834628:	8009883a 	mov	r4,r16
  83462c:	083d1bc0 	call	83d1bc <__sfvwrite_r>
  834630:	1000091e 	bne	r2,zero,834658 <_puts_r+0xb8>
  834634:	00800284 	movi	r2,10
  834638:	dfc00917 	ldw	ra,36(sp)
  83463c:	dc400817 	ldw	r17,32(sp)
  834640:	dc000717 	ldw	r16,28(sp)
  834644:	dec00a04 	addi	sp,sp,40
  834648:	f800283a 	ret
  83464c:	8009883a 	mov	r4,r16
  834650:	08324300 	call	832430 <__sinit>
  834654:	003fe906 	br	8345fc <__alt_mem_epcs_flash_controller_0+0xff82b5fc>
  834658:	00bfffc4 	movi	r2,-1
  83465c:	003ff606 	br	834638 <__alt_mem_epcs_flash_controller_0+0xff82b638>

00834660 <puts>:
  834660:	008021b4 	movhi	r2,134
  834664:	10af7404 	addi	r2,r2,-16944
  834668:	200b883a 	mov	r5,r4
  83466c:	11000017 	ldw	r4,0(r2)
  834670:	08345a01 	jmpi	8345a0 <_puts_r>

00834674 <_realloc_r>:
  834674:	defff604 	addi	sp,sp,-40
  834678:	dc800215 	stw	r18,8(sp)
  83467c:	dfc00915 	stw	ra,36(sp)
  834680:	df000815 	stw	fp,32(sp)
  834684:	ddc00715 	stw	r23,28(sp)
  834688:	dd800615 	stw	r22,24(sp)
  83468c:	dd400515 	stw	r21,20(sp)
  834690:	dd000415 	stw	r20,16(sp)
  834694:	dcc00315 	stw	r19,12(sp)
  834698:	dc400115 	stw	r17,4(sp)
  83469c:	dc000015 	stw	r16,0(sp)
  8346a0:	3025883a 	mov	r18,r6
  8346a4:	2800b726 	beq	r5,zero,834984 <_realloc_r+0x310>
  8346a8:	282b883a 	mov	r21,r5
  8346ac:	2029883a 	mov	r20,r4
  8346b0:	084a7100 	call	84a710 <__malloc_lock>
  8346b4:	a8bfff17 	ldw	r2,-4(r21)
  8346b8:	043fff04 	movi	r16,-4
  8346bc:	90c002c4 	addi	r3,r18,11
  8346c0:	01000584 	movi	r4,22
  8346c4:	acfffe04 	addi	r19,r21,-8
  8346c8:	1420703a 	and	r16,r2,r16
  8346cc:	20c0332e 	bgeu	r4,r3,83479c <_realloc_r+0x128>
  8346d0:	047ffe04 	movi	r17,-8
  8346d4:	1c62703a 	and	r17,r3,r17
  8346d8:	8807883a 	mov	r3,r17
  8346dc:	88005816 	blt	r17,zero,834840 <_realloc_r+0x1cc>
  8346e0:	8c805736 	bltu	r17,r18,834840 <_realloc_r+0x1cc>
  8346e4:	80c0300e 	bge	r16,r3,8347a8 <_realloc_r+0x134>
  8346e8:	070021b4 	movhi	fp,134
  8346ec:	e728f404 	addi	fp,fp,-23600
  8346f0:	e1c00217 	ldw	r7,8(fp)
  8346f4:	9c09883a 	add	r4,r19,r16
  8346f8:	22000117 	ldw	r8,4(r4)
  8346fc:	21c06326 	beq	r4,r7,83488c <_realloc_r+0x218>
  834700:	017fff84 	movi	r5,-2
  834704:	414a703a 	and	r5,r8,r5
  834708:	214b883a 	add	r5,r4,r5
  83470c:	29800117 	ldw	r6,4(r5)
  834710:	3180004c 	andi	r6,r6,1
  834714:	30003f26 	beq	r6,zero,834814 <_realloc_r+0x1a0>
  834718:	1080004c 	andi	r2,r2,1
  83471c:	10008326 	beq	r2,zero,83492c <_realloc_r+0x2b8>
  834720:	900b883a 	mov	r5,r18
  834724:	a009883a 	mov	r4,r20
  834728:	083335c0 	call	83335c <_malloc_r>
  83472c:	1025883a 	mov	r18,r2
  834730:	10011e26 	beq	r2,zero,834bac <_realloc_r+0x538>
  834734:	a93fff17 	ldw	r4,-4(r21)
  834738:	10fffe04 	addi	r3,r2,-8
  83473c:	00bfff84 	movi	r2,-2
  834740:	2084703a 	and	r2,r4,r2
  834744:	9885883a 	add	r2,r19,r2
  834748:	1880ee26 	beq	r3,r2,834b04 <_realloc_r+0x490>
  83474c:	81bfff04 	addi	r6,r16,-4
  834750:	00800904 	movi	r2,36
  834754:	1180b836 	bltu	r2,r6,834a38 <_realloc_r+0x3c4>
  834758:	00c004c4 	movi	r3,19
  83475c:	19809636 	bltu	r3,r6,8349b8 <_realloc_r+0x344>
  834760:	9005883a 	mov	r2,r18
  834764:	a807883a 	mov	r3,r21
  834768:	19000017 	ldw	r4,0(r3)
  83476c:	11000015 	stw	r4,0(r2)
  834770:	19000117 	ldw	r4,4(r3)
  834774:	11000115 	stw	r4,4(r2)
  834778:	18c00217 	ldw	r3,8(r3)
  83477c:	10c00215 	stw	r3,8(r2)
  834780:	a80b883a 	mov	r5,r21
  834784:	a009883a 	mov	r4,r20
  834788:	0832d380 	call	832d38 <_free_r>
  83478c:	a009883a 	mov	r4,r20
  834790:	084a8300 	call	84a830 <__malloc_unlock>
  834794:	9005883a 	mov	r2,r18
  834798:	00001206 	br	8347e4 <_realloc_r+0x170>
  83479c:	00c00404 	movi	r3,16
  8347a0:	1823883a 	mov	r17,r3
  8347a4:	003fce06 	br	8346e0 <__alt_mem_epcs_flash_controller_0+0xff82b6e0>
  8347a8:	a825883a 	mov	r18,r21
  8347ac:	8445c83a 	sub	r2,r16,r17
  8347b0:	00c003c4 	movi	r3,15
  8347b4:	18802636 	bltu	r3,r2,834850 <_realloc_r+0x1dc>
  8347b8:	99800117 	ldw	r6,4(r19)
  8347bc:	9c07883a 	add	r3,r19,r16
  8347c0:	3180004c 	andi	r6,r6,1
  8347c4:	3420b03a 	or	r16,r6,r16
  8347c8:	9c000115 	stw	r16,4(r19)
  8347cc:	18800117 	ldw	r2,4(r3)
  8347d0:	10800054 	ori	r2,r2,1
  8347d4:	18800115 	stw	r2,4(r3)
  8347d8:	a009883a 	mov	r4,r20
  8347dc:	084a8300 	call	84a830 <__malloc_unlock>
  8347e0:	9005883a 	mov	r2,r18
  8347e4:	dfc00917 	ldw	ra,36(sp)
  8347e8:	df000817 	ldw	fp,32(sp)
  8347ec:	ddc00717 	ldw	r23,28(sp)
  8347f0:	dd800617 	ldw	r22,24(sp)
  8347f4:	dd400517 	ldw	r21,20(sp)
  8347f8:	dd000417 	ldw	r20,16(sp)
  8347fc:	dcc00317 	ldw	r19,12(sp)
  834800:	dc800217 	ldw	r18,8(sp)
  834804:	dc400117 	ldw	r17,4(sp)
  834808:	dc000017 	ldw	r16,0(sp)
  83480c:	dec00a04 	addi	sp,sp,40
  834810:	f800283a 	ret
  834814:	017fff04 	movi	r5,-4
  834818:	414a703a 	and	r5,r8,r5
  83481c:	814d883a 	add	r6,r16,r5
  834820:	30c01f16 	blt	r6,r3,8348a0 <_realloc_r+0x22c>
  834824:	20800317 	ldw	r2,12(r4)
  834828:	20c00217 	ldw	r3,8(r4)
  83482c:	a825883a 	mov	r18,r21
  834830:	3021883a 	mov	r16,r6
  834834:	18800315 	stw	r2,12(r3)
  834838:	10c00215 	stw	r3,8(r2)
  83483c:	003fdb06 	br	8347ac <__alt_mem_epcs_flash_controller_0+0xff82b7ac>
  834840:	00800304 	movi	r2,12
  834844:	a0800015 	stw	r2,0(r20)
  834848:	0005883a 	mov	r2,zero
  83484c:	003fe506 	br	8347e4 <__alt_mem_epcs_flash_controller_0+0xff82b7e4>
  834850:	98c00117 	ldw	r3,4(r19)
  834854:	9c4b883a 	add	r5,r19,r17
  834858:	11000054 	ori	r4,r2,1
  83485c:	18c0004c 	andi	r3,r3,1
  834860:	1c62b03a 	or	r17,r3,r17
  834864:	9c400115 	stw	r17,4(r19)
  834868:	29000115 	stw	r4,4(r5)
  83486c:	2885883a 	add	r2,r5,r2
  834870:	10c00117 	ldw	r3,4(r2)
  834874:	29400204 	addi	r5,r5,8
  834878:	a009883a 	mov	r4,r20
  83487c:	18c00054 	ori	r3,r3,1
  834880:	10c00115 	stw	r3,4(r2)
  834884:	0832d380 	call	832d38 <_free_r>
  834888:	003fd306 	br	8347d8 <__alt_mem_epcs_flash_controller_0+0xff82b7d8>
  83488c:	017fff04 	movi	r5,-4
  834890:	414a703a 	and	r5,r8,r5
  834894:	89800404 	addi	r6,r17,16
  834898:	8151883a 	add	r8,r16,r5
  83489c:	4180590e 	bge	r8,r6,834a04 <_realloc_r+0x390>
  8348a0:	1080004c 	andi	r2,r2,1
  8348a4:	103f9e1e 	bne	r2,zero,834720 <__alt_mem_epcs_flash_controller_0+0xff82b720>
  8348a8:	adbffe17 	ldw	r22,-8(r21)
  8348ac:	00bfff04 	movi	r2,-4
  8348b0:	9dadc83a 	sub	r22,r19,r22
  8348b4:	b1800117 	ldw	r6,4(r22)
  8348b8:	3084703a 	and	r2,r6,r2
  8348bc:	20002026 	beq	r4,zero,834940 <_realloc_r+0x2cc>
  8348c0:	80af883a 	add	r23,r16,r2
  8348c4:	b96f883a 	add	r23,r23,r5
  8348c8:	21c05f26 	beq	r4,r7,834a48 <_realloc_r+0x3d4>
  8348cc:	b8c01c16 	blt	r23,r3,834940 <_realloc_r+0x2cc>
  8348d0:	20800317 	ldw	r2,12(r4)
  8348d4:	20c00217 	ldw	r3,8(r4)
  8348d8:	81bfff04 	addi	r6,r16,-4
  8348dc:	01000904 	movi	r4,36
  8348e0:	18800315 	stw	r2,12(r3)
  8348e4:	10c00215 	stw	r3,8(r2)
  8348e8:	b0c00217 	ldw	r3,8(r22)
  8348ec:	b0800317 	ldw	r2,12(r22)
  8348f0:	b4800204 	addi	r18,r22,8
  8348f4:	18800315 	stw	r2,12(r3)
  8348f8:	10c00215 	stw	r3,8(r2)
  8348fc:	21801b36 	bltu	r4,r6,83496c <_realloc_r+0x2f8>
  834900:	008004c4 	movi	r2,19
  834904:	1180352e 	bgeu	r2,r6,8349dc <_realloc_r+0x368>
  834908:	a8800017 	ldw	r2,0(r21)
  83490c:	b0800215 	stw	r2,8(r22)
  834910:	a8800117 	ldw	r2,4(r21)
  834914:	b0800315 	stw	r2,12(r22)
  834918:	008006c4 	movi	r2,27
  83491c:	11807f36 	bltu	r2,r6,834b1c <_realloc_r+0x4a8>
  834920:	b0800404 	addi	r2,r22,16
  834924:	ad400204 	addi	r21,r21,8
  834928:	00002d06 	br	8349e0 <_realloc_r+0x36c>
  83492c:	adbffe17 	ldw	r22,-8(r21)
  834930:	00bfff04 	movi	r2,-4
  834934:	9dadc83a 	sub	r22,r19,r22
  834938:	b1000117 	ldw	r4,4(r22)
  83493c:	2084703a 	and	r2,r4,r2
  834940:	b03f7726 	beq	r22,zero,834720 <__alt_mem_epcs_flash_controller_0+0xff82b720>
  834944:	80af883a 	add	r23,r16,r2
  834948:	b8ff7516 	blt	r23,r3,834720 <__alt_mem_epcs_flash_controller_0+0xff82b720>
  83494c:	b0800317 	ldw	r2,12(r22)
  834950:	b0c00217 	ldw	r3,8(r22)
  834954:	81bfff04 	addi	r6,r16,-4
  834958:	01000904 	movi	r4,36
  83495c:	18800315 	stw	r2,12(r3)
  834960:	10c00215 	stw	r3,8(r2)
  834964:	b4800204 	addi	r18,r22,8
  834968:	21bfe52e 	bgeu	r4,r6,834900 <__alt_mem_epcs_flash_controller_0+0xff82b900>
  83496c:	a80b883a 	mov	r5,r21
  834970:	9009883a 	mov	r4,r18
  834974:	083dbd00 	call	83dbd0 <memmove>
  834978:	b821883a 	mov	r16,r23
  83497c:	b027883a 	mov	r19,r22
  834980:	003f8a06 	br	8347ac <__alt_mem_epcs_flash_controller_0+0xff82b7ac>
  834984:	300b883a 	mov	r5,r6
  834988:	dfc00917 	ldw	ra,36(sp)
  83498c:	df000817 	ldw	fp,32(sp)
  834990:	ddc00717 	ldw	r23,28(sp)
  834994:	dd800617 	ldw	r22,24(sp)
  834998:	dd400517 	ldw	r21,20(sp)
  83499c:	dd000417 	ldw	r20,16(sp)
  8349a0:	dcc00317 	ldw	r19,12(sp)
  8349a4:	dc800217 	ldw	r18,8(sp)
  8349a8:	dc400117 	ldw	r17,4(sp)
  8349ac:	dc000017 	ldw	r16,0(sp)
  8349b0:	dec00a04 	addi	sp,sp,40
  8349b4:	083335c1 	jmpi	83335c <_malloc_r>
  8349b8:	a8c00017 	ldw	r3,0(r21)
  8349bc:	90c00015 	stw	r3,0(r18)
  8349c0:	a8c00117 	ldw	r3,4(r21)
  8349c4:	90c00115 	stw	r3,4(r18)
  8349c8:	00c006c4 	movi	r3,27
  8349cc:	19804536 	bltu	r3,r6,834ae4 <_realloc_r+0x470>
  8349d0:	90800204 	addi	r2,r18,8
  8349d4:	a8c00204 	addi	r3,r21,8
  8349d8:	003f6306 	br	834768 <__alt_mem_epcs_flash_controller_0+0xff82b768>
  8349dc:	9005883a 	mov	r2,r18
  8349e0:	a8c00017 	ldw	r3,0(r21)
  8349e4:	b821883a 	mov	r16,r23
  8349e8:	b027883a 	mov	r19,r22
  8349ec:	10c00015 	stw	r3,0(r2)
  8349f0:	a8c00117 	ldw	r3,4(r21)
  8349f4:	10c00115 	stw	r3,4(r2)
  8349f8:	a8c00217 	ldw	r3,8(r21)
  8349fc:	10c00215 	stw	r3,8(r2)
  834a00:	003f6a06 	br	8347ac <__alt_mem_epcs_flash_controller_0+0xff82b7ac>
  834a04:	9c67883a 	add	r19,r19,r17
  834a08:	4445c83a 	sub	r2,r8,r17
  834a0c:	e4c00215 	stw	r19,8(fp)
  834a10:	10800054 	ori	r2,r2,1
  834a14:	98800115 	stw	r2,4(r19)
  834a18:	a8bfff17 	ldw	r2,-4(r21)
  834a1c:	a009883a 	mov	r4,r20
  834a20:	1080004c 	andi	r2,r2,1
  834a24:	1462b03a 	or	r17,r2,r17
  834a28:	ac7fff15 	stw	r17,-4(r21)
  834a2c:	084a8300 	call	84a830 <__malloc_unlock>
  834a30:	a805883a 	mov	r2,r21
  834a34:	003f6b06 	br	8347e4 <__alt_mem_epcs_flash_controller_0+0xff82b7e4>
  834a38:	a80b883a 	mov	r5,r21
  834a3c:	9009883a 	mov	r4,r18
  834a40:	083dbd00 	call	83dbd0 <memmove>
  834a44:	003f4e06 	br	834780 <__alt_mem_epcs_flash_controller_0+0xff82b780>
  834a48:	89000404 	addi	r4,r17,16
  834a4c:	b93fbc16 	blt	r23,r4,834940 <__alt_mem_epcs_flash_controller_0+0xff82b940>
  834a50:	b0800317 	ldw	r2,12(r22)
  834a54:	b0c00217 	ldw	r3,8(r22)
  834a58:	81bfff04 	addi	r6,r16,-4
  834a5c:	01000904 	movi	r4,36
  834a60:	18800315 	stw	r2,12(r3)
  834a64:	10c00215 	stw	r3,8(r2)
  834a68:	b4800204 	addi	r18,r22,8
  834a6c:	21804336 	bltu	r4,r6,834b7c <_realloc_r+0x508>
  834a70:	008004c4 	movi	r2,19
  834a74:	11803f2e 	bgeu	r2,r6,834b74 <_realloc_r+0x500>
  834a78:	a8800017 	ldw	r2,0(r21)
  834a7c:	b0800215 	stw	r2,8(r22)
  834a80:	a8800117 	ldw	r2,4(r21)
  834a84:	b0800315 	stw	r2,12(r22)
  834a88:	008006c4 	movi	r2,27
  834a8c:	11803f36 	bltu	r2,r6,834b8c <_realloc_r+0x518>
  834a90:	b0800404 	addi	r2,r22,16
  834a94:	ad400204 	addi	r21,r21,8
  834a98:	a8c00017 	ldw	r3,0(r21)
  834a9c:	10c00015 	stw	r3,0(r2)
  834aa0:	a8c00117 	ldw	r3,4(r21)
  834aa4:	10c00115 	stw	r3,4(r2)
  834aa8:	a8c00217 	ldw	r3,8(r21)
  834aac:	10c00215 	stw	r3,8(r2)
  834ab0:	b447883a 	add	r3,r22,r17
  834ab4:	bc45c83a 	sub	r2,r23,r17
  834ab8:	e0c00215 	stw	r3,8(fp)
  834abc:	10800054 	ori	r2,r2,1
  834ac0:	18800115 	stw	r2,4(r3)
  834ac4:	b0800117 	ldw	r2,4(r22)
  834ac8:	a009883a 	mov	r4,r20
  834acc:	1080004c 	andi	r2,r2,1
  834ad0:	1462b03a 	or	r17,r2,r17
  834ad4:	b4400115 	stw	r17,4(r22)
  834ad8:	084a8300 	call	84a830 <__malloc_unlock>
  834adc:	9005883a 	mov	r2,r18
  834ae0:	003f4006 	br	8347e4 <__alt_mem_epcs_flash_controller_0+0xff82b7e4>
  834ae4:	a8c00217 	ldw	r3,8(r21)
  834ae8:	90c00215 	stw	r3,8(r18)
  834aec:	a8c00317 	ldw	r3,12(r21)
  834af0:	90c00315 	stw	r3,12(r18)
  834af4:	30801126 	beq	r6,r2,834b3c <_realloc_r+0x4c8>
  834af8:	90800404 	addi	r2,r18,16
  834afc:	a8c00404 	addi	r3,r21,16
  834b00:	003f1906 	br	834768 <__alt_mem_epcs_flash_controller_0+0xff82b768>
  834b04:	90ffff17 	ldw	r3,-4(r18)
  834b08:	00bfff04 	movi	r2,-4
  834b0c:	a825883a 	mov	r18,r21
  834b10:	1884703a 	and	r2,r3,r2
  834b14:	80a1883a 	add	r16,r16,r2
  834b18:	003f2406 	br	8347ac <__alt_mem_epcs_flash_controller_0+0xff82b7ac>
  834b1c:	a8800217 	ldw	r2,8(r21)
  834b20:	b0800415 	stw	r2,16(r22)
  834b24:	a8800317 	ldw	r2,12(r21)
  834b28:	b0800515 	stw	r2,20(r22)
  834b2c:	31000a26 	beq	r6,r4,834b58 <_realloc_r+0x4e4>
  834b30:	b0800604 	addi	r2,r22,24
  834b34:	ad400404 	addi	r21,r21,16
  834b38:	003fa906 	br	8349e0 <__alt_mem_epcs_flash_controller_0+0xff82b9e0>
  834b3c:	a9000417 	ldw	r4,16(r21)
  834b40:	90800604 	addi	r2,r18,24
  834b44:	a8c00604 	addi	r3,r21,24
  834b48:	91000415 	stw	r4,16(r18)
  834b4c:	a9000517 	ldw	r4,20(r21)
  834b50:	91000515 	stw	r4,20(r18)
  834b54:	003f0406 	br	834768 <__alt_mem_epcs_flash_controller_0+0xff82b768>
  834b58:	a8c00417 	ldw	r3,16(r21)
  834b5c:	ad400604 	addi	r21,r21,24
  834b60:	b0800804 	addi	r2,r22,32
  834b64:	b0c00615 	stw	r3,24(r22)
  834b68:	a8ffff17 	ldw	r3,-4(r21)
  834b6c:	b0c00715 	stw	r3,28(r22)
  834b70:	003f9b06 	br	8349e0 <__alt_mem_epcs_flash_controller_0+0xff82b9e0>
  834b74:	9005883a 	mov	r2,r18
  834b78:	003fc706 	br	834a98 <__alt_mem_epcs_flash_controller_0+0xff82ba98>
  834b7c:	a80b883a 	mov	r5,r21
  834b80:	9009883a 	mov	r4,r18
  834b84:	083dbd00 	call	83dbd0 <memmove>
  834b88:	003fc906 	br	834ab0 <__alt_mem_epcs_flash_controller_0+0xff82bab0>
  834b8c:	a8800217 	ldw	r2,8(r21)
  834b90:	b0800415 	stw	r2,16(r22)
  834b94:	a8800317 	ldw	r2,12(r21)
  834b98:	b0800515 	stw	r2,20(r22)
  834b9c:	31000726 	beq	r6,r4,834bbc <_realloc_r+0x548>
  834ba0:	b0800604 	addi	r2,r22,24
  834ba4:	ad400404 	addi	r21,r21,16
  834ba8:	003fbb06 	br	834a98 <__alt_mem_epcs_flash_controller_0+0xff82ba98>
  834bac:	a009883a 	mov	r4,r20
  834bb0:	084a8300 	call	84a830 <__malloc_unlock>
  834bb4:	0005883a 	mov	r2,zero
  834bb8:	003f0a06 	br	8347e4 <__alt_mem_epcs_flash_controller_0+0xff82b7e4>
  834bbc:	a8c00417 	ldw	r3,16(r21)
  834bc0:	ad400604 	addi	r21,r21,24
  834bc4:	b0800804 	addi	r2,r22,32
  834bc8:	b0c00615 	stw	r3,24(r22)
  834bcc:	a8ffff17 	ldw	r3,-4(r21)
  834bd0:	b0c00715 	stw	r3,28(r22)
  834bd4:	003fb006 	br	834a98 <__alt_mem_epcs_flash_controller_0+0xff82ba98>

00834bd8 <lflush>:
  834bd8:	2080030b 	ldhu	r2,12(r4)
  834bdc:	00c00244 	movi	r3,9
  834be0:	1080024c 	andi	r2,r2,9
  834be4:	10c00226 	beq	r2,r3,834bf0 <lflush+0x18>
  834be8:	0005883a 	mov	r2,zero
  834bec:	f800283a 	ret
  834bf0:	08320a01 	jmpi	8320a0 <fflush>

00834bf4 <__srefill_r>:
  834bf4:	defffc04 	addi	sp,sp,-16
  834bf8:	dc400115 	stw	r17,4(sp)
  834bfc:	dc000015 	stw	r16,0(sp)
  834c00:	dfc00315 	stw	ra,12(sp)
  834c04:	dc800215 	stw	r18,8(sp)
  834c08:	2023883a 	mov	r17,r4
  834c0c:	2821883a 	mov	r16,r5
  834c10:	20000226 	beq	r4,zero,834c1c <__srefill_r+0x28>
  834c14:	20800e17 	ldw	r2,56(r4)
  834c18:	10003c26 	beq	r2,zero,834d0c <__srefill_r+0x118>
  834c1c:	80c0030b 	ldhu	r3,12(r16)
  834c20:	1908000c 	andi	r4,r3,8192
  834c24:	1805883a 	mov	r2,r3
  834c28:	2000071e 	bne	r4,zero,834c48 <__srefill_r+0x54>
  834c2c:	81001917 	ldw	r4,100(r16)
  834c30:	18880014 	ori	r2,r3,8192
  834c34:	00f7ffc4 	movi	r3,-8193
  834c38:	20c8703a 	and	r4,r4,r3
  834c3c:	8080030d 	sth	r2,12(r16)
  834c40:	1007883a 	mov	r3,r2
  834c44:	81001915 	stw	r4,100(r16)
  834c48:	80000115 	stw	zero,4(r16)
  834c4c:	1100080c 	andi	r4,r2,32
  834c50:	2000571e 	bne	r4,zero,834db0 <__srefill_r+0x1bc>
  834c54:	1100010c 	andi	r4,r2,4
  834c58:	20001f26 	beq	r4,zero,834cd8 <__srefill_r+0xe4>
  834c5c:	81400c17 	ldw	r5,48(r16)
  834c60:	28000826 	beq	r5,zero,834c84 <__srefill_r+0x90>
  834c64:	80801004 	addi	r2,r16,64
  834c68:	28800226 	beq	r5,r2,834c74 <__srefill_r+0x80>
  834c6c:	8809883a 	mov	r4,r17
  834c70:	0832d380 	call	832d38 <_free_r>
  834c74:	80800f17 	ldw	r2,60(r16)
  834c78:	80000c15 	stw	zero,48(r16)
  834c7c:	80800115 	stw	r2,4(r16)
  834c80:	1000391e 	bne	r2,zero,834d68 <__srefill_r+0x174>
  834c84:	80800417 	ldw	r2,16(r16)
  834c88:	10004b26 	beq	r2,zero,834db8 <__srefill_r+0x1c4>
  834c8c:	8480030b 	ldhu	r18,12(r16)
  834c90:	908000cc 	andi	r2,r18,3
  834c94:	10001f1e 	bne	r2,zero,834d14 <__srefill_r+0x120>
  834c98:	81800417 	ldw	r6,16(r16)
  834c9c:	80800817 	ldw	r2,32(r16)
  834ca0:	81c00517 	ldw	r7,20(r16)
  834ca4:	81400717 	ldw	r5,28(r16)
  834ca8:	81800015 	stw	r6,0(r16)
  834cac:	8809883a 	mov	r4,r17
  834cb0:	103ee83a 	callr	r2
  834cb4:	80800115 	stw	r2,4(r16)
  834cb8:	00800e0e 	bge	zero,r2,834cf4 <__srefill_r+0x100>
  834cbc:	0005883a 	mov	r2,zero
  834cc0:	dfc00317 	ldw	ra,12(sp)
  834cc4:	dc800217 	ldw	r18,8(sp)
  834cc8:	dc400117 	ldw	r17,4(sp)
  834ccc:	dc000017 	ldw	r16,0(sp)
  834cd0:	dec00404 	addi	sp,sp,16
  834cd4:	f800283a 	ret
  834cd8:	1100040c 	andi	r4,r2,16
  834cdc:	20003026 	beq	r4,zero,834da0 <__srefill_r+0x1ac>
  834ce0:	1080020c 	andi	r2,r2,8
  834ce4:	1000241e 	bne	r2,zero,834d78 <__srefill_r+0x184>
  834ce8:	18c00114 	ori	r3,r3,4
  834cec:	80c0030d 	sth	r3,12(r16)
  834cf0:	003fe406 	br	834c84 <__alt_mem_epcs_flash_controller_0+0xff82bc84>
  834cf4:	80c0030b 	ldhu	r3,12(r16)
  834cf8:	1000161e 	bne	r2,zero,834d54 <__srefill_r+0x160>
  834cfc:	18c00814 	ori	r3,r3,32
  834d00:	00bfffc4 	movi	r2,-1
  834d04:	80c0030d 	sth	r3,12(r16)
  834d08:	003fed06 	br	834cc0 <__alt_mem_epcs_flash_controller_0+0xff82bcc0>
  834d0c:	08324300 	call	832430 <__sinit>
  834d10:	003fc206 	br	834c1c <__alt_mem_epcs_flash_controller_0+0xff82bc1c>
  834d14:	008021b4 	movhi	r2,134
  834d18:	10af7304 	addi	r2,r2,-16948
  834d1c:	11000017 	ldw	r4,0(r2)
  834d20:	014020f4 	movhi	r5,131
  834d24:	00800044 	movi	r2,1
  834d28:	2952f604 	addi	r5,r5,19416
  834d2c:	8080030d 	sth	r2,12(r16)
  834d30:	08330480 	call	833048 <_fwalk>
  834d34:	00800244 	movi	r2,9
  834d38:	8480030d 	sth	r18,12(r16)
  834d3c:	9480024c 	andi	r18,r18,9
  834d40:	90bfd51e 	bne	r18,r2,834c98 <__alt_mem_epcs_flash_controller_0+0xff82bc98>
  834d44:	800b883a 	mov	r5,r16
  834d48:	8809883a 	mov	r4,r17
  834d4c:	0831e280 	call	831e28 <__sflush_r>
  834d50:	003fd106 	br	834c98 <__alt_mem_epcs_flash_controller_0+0xff82bc98>
  834d54:	18c01014 	ori	r3,r3,64
  834d58:	80000115 	stw	zero,4(r16)
  834d5c:	00bfffc4 	movi	r2,-1
  834d60:	80c0030d 	sth	r3,12(r16)
  834d64:	003fd606 	br	834cc0 <__alt_mem_epcs_flash_controller_0+0xff82bcc0>
  834d68:	80c00e17 	ldw	r3,56(r16)
  834d6c:	0005883a 	mov	r2,zero
  834d70:	80c00015 	stw	r3,0(r16)
  834d74:	003fd206 	br	834cc0 <__alt_mem_epcs_flash_controller_0+0xff82bcc0>
  834d78:	800b883a 	mov	r5,r16
  834d7c:	8809883a 	mov	r4,r17
  834d80:	08320440 	call	832044 <_fflush_r>
  834d84:	10000a1e 	bne	r2,zero,834db0 <__srefill_r+0x1bc>
  834d88:	8080030b 	ldhu	r2,12(r16)
  834d8c:	00fffdc4 	movi	r3,-9
  834d90:	80000215 	stw	zero,8(r16)
  834d94:	1886703a 	and	r3,r3,r2
  834d98:	80000615 	stw	zero,24(r16)
  834d9c:	003fd206 	br	834ce8 <__alt_mem_epcs_flash_controller_0+0xff82bce8>
  834da0:	00800244 	movi	r2,9
  834da4:	88800015 	stw	r2,0(r17)
  834da8:	18c01014 	ori	r3,r3,64
  834dac:	80c0030d 	sth	r3,12(r16)
  834db0:	00bfffc4 	movi	r2,-1
  834db4:	003fc206 	br	834cc0 <__alt_mem_epcs_flash_controller_0+0xff82bcc0>
  834db8:	800b883a 	mov	r5,r16
  834dbc:	8809883a 	mov	r4,r17
  834dc0:	083d7f00 	call	83d7f0 <__smakebuf_r>
  834dc4:	003fb106 	br	834c8c <__alt_mem_epcs_flash_controller_0+0xff82bc8c>

00834dc8 <_sbrk_r>:
  834dc8:	defffd04 	addi	sp,sp,-12
  834dcc:	dc000015 	stw	r16,0(sp)
  834dd0:	040021b4 	movhi	r16,134
  834dd4:	dc400115 	stw	r17,4(sp)
  834dd8:	842fc604 	addi	r16,r16,-16616
  834ddc:	2023883a 	mov	r17,r4
  834de0:	2809883a 	mov	r4,r5
  834de4:	dfc00215 	stw	ra,8(sp)
  834de8:	80000015 	stw	zero,0(r16)
  834dec:	084a34c0 	call	84a34c <sbrk>
  834df0:	00ffffc4 	movi	r3,-1
  834df4:	10c00526 	beq	r2,r3,834e0c <_sbrk_r+0x44>
  834df8:	dfc00217 	ldw	ra,8(sp)
  834dfc:	dc400117 	ldw	r17,4(sp)
  834e00:	dc000017 	ldw	r16,0(sp)
  834e04:	dec00304 	addi	sp,sp,12
  834e08:	f800283a 	ret
  834e0c:	80c00017 	ldw	r3,0(r16)
  834e10:	183ff926 	beq	r3,zero,834df8 <__alt_mem_epcs_flash_controller_0+0xff82bdf8>
  834e14:	88c00015 	stw	r3,0(r17)
  834e18:	003ff706 	br	834df8 <__alt_mem_epcs_flash_controller_0+0xff82bdf8>

00834e1c <_sprintf_r>:
  834e1c:	deffe404 	addi	sp,sp,-112
  834e20:	2807883a 	mov	r3,r5
  834e24:	dfc01a15 	stw	ra,104(sp)
  834e28:	d9c01b15 	stw	r7,108(sp)
  834e2c:	00a00034 	movhi	r2,32768
  834e30:	10bfffc4 	addi	r2,r2,-1
  834e34:	02008204 	movi	r8,520
  834e38:	d8800215 	stw	r2,8(sp)
  834e3c:	d8800515 	stw	r2,20(sp)
  834e40:	d9c01b04 	addi	r7,sp,108
  834e44:	d80b883a 	mov	r5,sp
  834e48:	00bfffc4 	movi	r2,-1
  834e4c:	d8c00015 	stw	r3,0(sp)
  834e50:	d8c00415 	stw	r3,16(sp)
  834e54:	da00030d 	sth	r8,12(sp)
  834e58:	d880038d 	sth	r2,14(sp)
  834e5c:	08353640 	call	835364 <___svfprintf_internal_r>
  834e60:	d8c00017 	ldw	r3,0(sp)
  834e64:	18000005 	stb	zero,0(r3)
  834e68:	dfc01a17 	ldw	ra,104(sp)
  834e6c:	dec01c04 	addi	sp,sp,112
  834e70:	f800283a 	ret

00834e74 <sprintf>:
  834e74:	deffe304 	addi	sp,sp,-116
  834e78:	2007883a 	mov	r3,r4
  834e7c:	dfc01a15 	stw	ra,104(sp)
  834e80:	d9801b15 	stw	r6,108(sp)
  834e84:	d9c01c15 	stw	r7,112(sp)
  834e88:	010021b4 	movhi	r4,134
  834e8c:	212f7404 	addi	r4,r4,-16944
  834e90:	21000017 	ldw	r4,0(r4)
  834e94:	00a00034 	movhi	r2,32768
  834e98:	10bfffc4 	addi	r2,r2,-1
  834e9c:	280d883a 	mov	r6,r5
  834ea0:	02008204 	movi	r8,520
  834ea4:	d8800215 	stw	r2,8(sp)
  834ea8:	d8800515 	stw	r2,20(sp)
  834eac:	d9c01b04 	addi	r7,sp,108
  834eb0:	d80b883a 	mov	r5,sp
  834eb4:	00bfffc4 	movi	r2,-1
  834eb8:	d8c00015 	stw	r3,0(sp)
  834ebc:	d8c00415 	stw	r3,16(sp)
  834ec0:	da00030d 	sth	r8,12(sp)
  834ec4:	d880038d 	sth	r2,14(sp)
  834ec8:	08353640 	call	835364 <___svfprintf_internal_r>
  834ecc:	d8c00017 	ldw	r3,0(sp)
  834ed0:	18000005 	stb	zero,0(r3)
  834ed4:	dfc01a17 	ldw	ra,104(sp)
  834ed8:	dec01d04 	addi	sp,sp,116
  834edc:	f800283a 	ret

00834ee0 <sscanf>:
  834ee0:	deffe204 	addi	sp,sp,-120
  834ee4:	dc001a15 	stw	r16,104(sp)
  834ee8:	2821883a 	mov	r16,r5
  834eec:	dfc01b15 	stw	ra,108(sp)
  834ef0:	d9801c15 	stw	r6,112(sp)
  834ef4:	d9c01d15 	stw	r7,116(sp)
  834ef8:	00c08104 	movi	r3,516
  834efc:	d8c0030d 	sth	r3,12(sp)
  834f00:	d9000015 	stw	r4,0(sp)
  834f04:	d9000415 	stw	r4,16(sp)
  834f08:	08351100 	call	835110 <strlen>
  834f0c:	00c021b4 	movhi	r3,134
  834f10:	18ef7404 	addi	r3,r3,-16944
  834f14:	d8800115 	stw	r2,4(sp)
  834f18:	d8800515 	stw	r2,20(sp)
  834f1c:	19000017 	ldw	r4,0(r3)
  834f20:	008020f4 	movhi	r2,131
  834f24:	10940a04 	addi	r2,r2,20520
  834f28:	d8800815 	stw	r2,32(sp)
  834f2c:	d9c01c04 	addi	r7,sp,112
  834f30:	800d883a 	mov	r6,r16
  834f34:	d80b883a 	mov	r5,sp
  834f38:	00bfffc4 	movi	r2,-1
  834f3c:	d8000c15 	stw	zero,48(sp)
  834f40:	d8001115 	stw	zero,68(sp)
  834f44:	d880038d 	sth	r2,14(sp)
  834f48:	08376200 	call	837620 <__ssvfscanf_r>
  834f4c:	dfc01b17 	ldw	ra,108(sp)
  834f50:	dc001a17 	ldw	r16,104(sp)
  834f54:	dec01e04 	addi	sp,sp,120
  834f58:	f800283a 	ret

00834f5c <_sscanf_r>:
  834f5c:	deffe204 	addi	sp,sp,-120
  834f60:	dc001b15 	stw	r16,108(sp)
  834f64:	2021883a 	mov	r16,r4
  834f68:	dfc01c15 	stw	ra,112(sp)
  834f6c:	d9c01d15 	stw	r7,116(sp)
  834f70:	00808104 	movi	r2,516
  834f74:	2809883a 	mov	r4,r5
  834f78:	d9400015 	stw	r5,0(sp)
  834f7c:	d9400415 	stw	r5,16(sp)
  834f80:	d9801a15 	stw	r6,104(sp)
  834f84:	d880030d 	sth	r2,12(sp)
  834f88:	08351100 	call	835110 <strlen>
  834f8c:	d8800115 	stw	r2,4(sp)
  834f90:	d8800515 	stw	r2,20(sp)
  834f94:	d9801a17 	ldw	r6,104(sp)
  834f98:	008020f4 	movhi	r2,131
  834f9c:	10940a04 	addi	r2,r2,20520
  834fa0:	d8800815 	stw	r2,32(sp)
  834fa4:	d9c01d04 	addi	r7,sp,116
  834fa8:	d80b883a 	mov	r5,sp
  834fac:	8009883a 	mov	r4,r16
  834fb0:	00bfffc4 	movi	r2,-1
  834fb4:	d8000c15 	stw	zero,48(sp)
  834fb8:	d8001115 	stw	zero,68(sp)
  834fbc:	d880038d 	sth	r2,14(sp)
  834fc0:	08376200 	call	837620 <__ssvfscanf_r>
  834fc4:	dfc01c17 	ldw	ra,112(sp)
  834fc8:	dc001b17 	ldw	r16,108(sp)
  834fcc:	dec01e04 	addi	sp,sp,120
  834fd0:	f800283a 	ret

00834fd4 <__sread>:
  834fd4:	defffe04 	addi	sp,sp,-8
  834fd8:	dc000015 	stw	r16,0(sp)
  834fdc:	2821883a 	mov	r16,r5
  834fe0:	2940038f 	ldh	r5,14(r5)
  834fe4:	dfc00115 	stw	ra,4(sp)
  834fe8:	083ede40 	call	83ede4 <_read_r>
  834fec:	10000716 	blt	r2,zero,83500c <__sread+0x38>
  834ff0:	80c01417 	ldw	r3,80(r16)
  834ff4:	1887883a 	add	r3,r3,r2
  834ff8:	80c01415 	stw	r3,80(r16)
  834ffc:	dfc00117 	ldw	ra,4(sp)
  835000:	dc000017 	ldw	r16,0(sp)
  835004:	dec00204 	addi	sp,sp,8
  835008:	f800283a 	ret
  83500c:	80c0030b 	ldhu	r3,12(r16)
  835010:	18fbffcc 	andi	r3,r3,61439
  835014:	80c0030d 	sth	r3,12(r16)
  835018:	dfc00117 	ldw	ra,4(sp)
  83501c:	dc000017 	ldw	r16,0(sp)
  835020:	dec00204 	addi	sp,sp,8
  835024:	f800283a 	ret

00835028 <__seofread>:
  835028:	0005883a 	mov	r2,zero
  83502c:	f800283a 	ret

00835030 <__swrite>:
  835030:	2880030b 	ldhu	r2,12(r5)
  835034:	defffb04 	addi	sp,sp,-20
  835038:	dcc00315 	stw	r19,12(sp)
  83503c:	dc800215 	stw	r18,8(sp)
  835040:	dc400115 	stw	r17,4(sp)
  835044:	dc000015 	stw	r16,0(sp)
  835048:	dfc00415 	stw	ra,16(sp)
  83504c:	10c0400c 	andi	r3,r2,256
  835050:	2821883a 	mov	r16,r5
  835054:	2023883a 	mov	r17,r4
  835058:	3025883a 	mov	r18,r6
  83505c:	3827883a 	mov	r19,r7
  835060:	18000526 	beq	r3,zero,835078 <__swrite+0x48>
  835064:	2940038f 	ldh	r5,14(r5)
  835068:	01c00084 	movi	r7,2
  83506c:	000d883a 	mov	r6,zero
  835070:	083d7900 	call	83d790 <_lseek_r>
  835074:	8080030b 	ldhu	r2,12(r16)
  835078:	8140038f 	ldh	r5,14(r16)
  83507c:	10bbffcc 	andi	r2,r2,61439
  835080:	980f883a 	mov	r7,r19
  835084:	900d883a 	mov	r6,r18
  835088:	8809883a 	mov	r4,r17
  83508c:	8080030d 	sth	r2,12(r16)
  835090:	dfc00417 	ldw	ra,16(sp)
  835094:	dcc00317 	ldw	r19,12(sp)
  835098:	dc800217 	ldw	r18,8(sp)
  83509c:	dc400117 	ldw	r17,4(sp)
  8350a0:	dc000017 	ldw	r16,0(sp)
  8350a4:	dec00504 	addi	sp,sp,20
  8350a8:	083b4c01 	jmpi	83b4c0 <_write_r>

008350ac <__sseek>:
  8350ac:	defffe04 	addi	sp,sp,-8
  8350b0:	dc000015 	stw	r16,0(sp)
  8350b4:	2821883a 	mov	r16,r5
  8350b8:	2940038f 	ldh	r5,14(r5)
  8350bc:	dfc00115 	stw	ra,4(sp)
  8350c0:	083d7900 	call	83d790 <_lseek_r>
  8350c4:	00ffffc4 	movi	r3,-1
  8350c8:	10c00826 	beq	r2,r3,8350ec <__sseek+0x40>
  8350cc:	80c0030b 	ldhu	r3,12(r16)
  8350d0:	80801415 	stw	r2,80(r16)
  8350d4:	18c40014 	ori	r3,r3,4096
  8350d8:	80c0030d 	sth	r3,12(r16)
  8350dc:	dfc00117 	ldw	ra,4(sp)
  8350e0:	dc000017 	ldw	r16,0(sp)
  8350e4:	dec00204 	addi	sp,sp,8
  8350e8:	f800283a 	ret
  8350ec:	80c0030b 	ldhu	r3,12(r16)
  8350f0:	18fbffcc 	andi	r3,r3,61439
  8350f4:	80c0030d 	sth	r3,12(r16)
  8350f8:	dfc00117 	ldw	ra,4(sp)
  8350fc:	dc000017 	ldw	r16,0(sp)
  835100:	dec00204 	addi	sp,sp,8
  835104:	f800283a 	ret

00835108 <__sclose>:
  835108:	2940038f 	ldh	r5,14(r5)
  83510c:	083b6741 	jmpi	83b674 <_close_r>

00835110 <strlen>:
  835110:	208000cc 	andi	r2,r4,3
  835114:	10002026 	beq	r2,zero,835198 <strlen+0x88>
  835118:	20800007 	ldb	r2,0(r4)
  83511c:	10002026 	beq	r2,zero,8351a0 <strlen+0x90>
  835120:	2005883a 	mov	r2,r4
  835124:	00000206 	br	835130 <strlen+0x20>
  835128:	10c00007 	ldb	r3,0(r2)
  83512c:	18001826 	beq	r3,zero,835190 <strlen+0x80>
  835130:	10800044 	addi	r2,r2,1
  835134:	10c000cc 	andi	r3,r2,3
  835138:	183ffb1e 	bne	r3,zero,835128 <__alt_mem_epcs_flash_controller_0+0xff82c128>
  83513c:	10c00017 	ldw	r3,0(r2)
  835140:	01ffbff4 	movhi	r7,65279
  835144:	39ffbfc4 	addi	r7,r7,-257
  835148:	00ca303a 	nor	r5,zero,r3
  83514c:	01a02074 	movhi	r6,32897
  835150:	19c7883a 	add	r3,r3,r7
  835154:	31a02004 	addi	r6,r6,-32640
  835158:	1946703a 	and	r3,r3,r5
  83515c:	1986703a 	and	r3,r3,r6
  835160:	1800091e 	bne	r3,zero,835188 <strlen+0x78>
  835164:	10800104 	addi	r2,r2,4
  835168:	10c00017 	ldw	r3,0(r2)
  83516c:	19cb883a 	add	r5,r3,r7
  835170:	00c6303a 	nor	r3,zero,r3
  835174:	28c6703a 	and	r3,r5,r3
  835178:	1986703a 	and	r3,r3,r6
  83517c:	183ff926 	beq	r3,zero,835164 <__alt_mem_epcs_flash_controller_0+0xff82c164>
  835180:	00000106 	br	835188 <strlen+0x78>
  835184:	10800044 	addi	r2,r2,1
  835188:	10c00007 	ldb	r3,0(r2)
  83518c:	183ffd1e 	bne	r3,zero,835184 <__alt_mem_epcs_flash_controller_0+0xff82c184>
  835190:	1105c83a 	sub	r2,r2,r4
  835194:	f800283a 	ret
  835198:	2005883a 	mov	r2,r4
  83519c:	003fe706 	br	83513c <__alt_mem_epcs_flash_controller_0+0xff82c13c>
  8351a0:	0005883a 	mov	r2,zero
  8351a4:	f800283a 	ret

008351a8 <strncmp>:
  8351a8:	30003126 	beq	r6,zero,835270 <strncmp+0xc8>
  8351ac:	2144b03a 	or	r2,r4,r5
  8351b0:	108000cc 	andi	r2,r2,3
  8351b4:	10001e1e 	bne	r2,zero,835230 <strncmp+0x88>
  8351b8:	024000c4 	movi	r9,3
  8351bc:	49801c2e 	bgeu	r9,r6,835230 <strncmp+0x88>
  8351c0:	20800017 	ldw	r2,0(r4)
  8351c4:	28c00017 	ldw	r3,0(r5)
  8351c8:	10c0191e 	bne	r2,r3,835230 <strncmp+0x88>
  8351cc:	31bfff04 	addi	r6,r6,-4
  8351d0:	30002726 	beq	r6,zero,835270 <strncmp+0xc8>
  8351d4:	02ffbff4 	movhi	r11,65279
  8351d8:	5affbfc4 	addi	r11,r11,-257
  8351dc:	0086303a 	nor	r3,zero,r2
  8351e0:	02a02074 	movhi	r10,32897
  8351e4:	12c5883a 	add	r2,r2,r11
  8351e8:	52a02004 	addi	r10,r10,-32640
  8351ec:	10c4703a 	and	r2,r2,r3
  8351f0:	1284703a 	and	r2,r2,r10
  8351f4:	10000b26 	beq	r2,zero,835224 <strncmp+0x7c>
  8351f8:	00001d06 	br	835270 <strncmp+0xc8>
  8351fc:	20c00017 	ldw	r3,0(r4)
  835200:	29c00017 	ldw	r7,0(r5)
  835204:	1ad1883a 	add	r8,r3,r11
  835208:	00c4303a 	nor	r2,zero,r3
  83520c:	4084703a 	and	r2,r8,r2
  835210:	1284703a 	and	r2,r2,r10
  835214:	19c0061e 	bne	r3,r7,835230 <strncmp+0x88>
  835218:	31bfff04 	addi	r6,r6,-4
  83521c:	30001426 	beq	r6,zero,835270 <strncmp+0xc8>
  835220:	1000131e 	bne	r2,zero,835270 <strncmp+0xc8>
  835224:	21000104 	addi	r4,r4,4
  835228:	29400104 	addi	r5,r5,4
  83522c:	49bff336 	bltu	r9,r6,8351fc <__alt_mem_epcs_flash_controller_0+0xff82c1fc>
  835230:	28800007 	ldb	r2,0(r5)
  835234:	20c00007 	ldb	r3,0(r4)
  835238:	31bfffc4 	addi	r6,r6,-1
  83523c:	10c0081e 	bne	r2,r3,835260 <strncmp+0xb8>
  835240:	30000b26 	beq	r6,zero,835270 <strncmp+0xc8>
  835244:	10000a26 	beq	r2,zero,835270 <strncmp+0xc8>
  835248:	21000044 	addi	r4,r4,1
  83524c:	29400044 	addi	r5,r5,1
  835250:	20800007 	ldb	r2,0(r4)
  835254:	28c00007 	ldb	r3,0(r5)
  835258:	31bfffc4 	addi	r6,r6,-1
  83525c:	10fff826 	beq	r2,r3,835240 <__alt_mem_epcs_flash_controller_0+0xff82c240>
  835260:	20800003 	ldbu	r2,0(r4)
  835264:	28c00003 	ldbu	r3,0(r5)
  835268:	10c5c83a 	sub	r2,r2,r3
  83526c:	f800283a 	ret
  835270:	0005883a 	mov	r2,zero
  835274:	f800283a 	ret

00835278 <strncpy>:
  835278:	2906b03a 	or	r3,r5,r4
  83527c:	18c000cc 	andi	r3,r3,3
  835280:	2005883a 	mov	r2,r4
  835284:	18002c1e 	bne	r3,zero,835338 <strncpy+0xc0>
  835288:	010000c4 	movi	r4,3
  83528c:	21802a2e 	bgeu	r4,r6,835338 <strncpy+0xc0>
  835290:	033fbff4 	movhi	r12,65279
  835294:	02e02074 	movhi	r11,32897
  835298:	633fbfc4 	addi	r12,r12,-257
  83529c:	5ae02004 	addi	r11,r11,-32640
  8352a0:	100f883a 	mov	r7,r2
  8352a4:	2a000017 	ldw	r8,0(r5)
  8352a8:	3815883a 	mov	r10,r7
  8352ac:	4313883a 	add	r9,r8,r12
  8352b0:	0206303a 	nor	r3,zero,r8
  8352b4:	48c6703a 	and	r3,r9,r3
  8352b8:	1ac6703a 	and	r3,r3,r11
  8352bc:	1800261e 	bne	r3,zero,835358 <strncpy+0xe0>
  8352c0:	39c00104 	addi	r7,r7,4
  8352c4:	52000015 	stw	r8,0(r10)
  8352c8:	31bfff04 	addi	r6,r6,-4
  8352cc:	3811883a 	mov	r8,r7
  8352d0:	29400104 	addi	r5,r5,4
  8352d4:	21bff336 	bltu	r4,r6,8352a4 <__alt_mem_epcs_flash_controller_0+0xff82c2a4>
  8352d8:	30001e26 	beq	r6,zero,835354 <strncpy+0xdc>
  8352dc:	29c00003 	ldbu	r7,0(r5)
  8352e0:	31bfffc4 	addi	r6,r6,-1
  8352e4:	40c00044 	addi	r3,r8,1
  8352e8:	41c00005 	stb	r7,0(r8)
  8352ec:	39c03fcc 	andi	r7,r7,255
  8352f0:	39c0201c 	xori	r7,r7,128
  8352f4:	39ffe004 	addi	r7,r7,-128
  8352f8:	29400044 	addi	r5,r5,1
  8352fc:	38001026 	beq	r7,zero,835340 <strncpy+0xc8>
  835300:	1811883a 	mov	r8,r3
  835304:	00000906 	br	83532c <strncpy+0xb4>
  835308:	29c00003 	ldbu	r7,0(r5)
  83530c:	31bfffc4 	addi	r6,r6,-1
  835310:	29400044 	addi	r5,r5,1
  835314:	41c00005 	stb	r7,0(r8)
  835318:	39c03fcc 	andi	r7,r7,255
  83531c:	39c0201c 	xori	r7,r7,128
  835320:	39ffe004 	addi	r7,r7,-128
  835324:	1811883a 	mov	r8,r3
  835328:	38000526 	beq	r7,zero,835340 <strncpy+0xc8>
  83532c:	18c00044 	addi	r3,r3,1
  835330:	303ff51e 	bne	r6,zero,835308 <__alt_mem_epcs_flash_controller_0+0xff82c308>
  835334:	f800283a 	ret
  835338:	1011883a 	mov	r8,r2
  83533c:	003fe606 	br	8352d8 <__alt_mem_epcs_flash_controller_0+0xff82c2d8>
  835340:	30000726 	beq	r6,zero,835360 <strncpy+0xe8>
  835344:	198d883a 	add	r6,r3,r6
  835348:	18000005 	stb	zero,0(r3)
  83534c:	18c00044 	addi	r3,r3,1
  835350:	19bffd1e 	bne	r3,r6,835348 <__alt_mem_epcs_flash_controller_0+0xff82c348>
  835354:	f800283a 	ret
  835358:	3811883a 	mov	r8,r7
  83535c:	003fdf06 	br	8352dc <__alt_mem_epcs_flash_controller_0+0xff82c2dc>
  835360:	f800283a 	ret

00835364 <___svfprintf_internal_r>:
  835364:	deffb704 	addi	sp,sp,-292
  835368:	dfc04815 	stw	ra,288(sp)
  83536c:	ddc04615 	stw	r23,280(sp)
  835370:	d9402d15 	stw	r5,180(sp)
  835374:	d9003915 	stw	r4,228(sp)
  835378:	302f883a 	mov	r23,r6
  83537c:	d9c02e15 	stw	r7,184(sp)
  835380:	df004715 	stw	fp,284(sp)
  835384:	dd804515 	stw	r22,276(sp)
  835388:	dd404415 	stw	r21,272(sp)
  83538c:	dd004315 	stw	r20,268(sp)
  835390:	dcc04215 	stw	r19,264(sp)
  835394:	dc804115 	stw	r18,260(sp)
  835398:	dc404015 	stw	r17,256(sp)
  83539c:	dc003f15 	stw	r16,252(sp)
  8353a0:	083d7600 	call	83d760 <_localeconv_r>
  8353a4:	10800017 	ldw	r2,0(r2)
  8353a8:	1009883a 	mov	r4,r2
  8353ac:	d8803415 	stw	r2,208(sp)
  8353b0:	08351100 	call	835110 <strlen>
  8353b4:	d8c02d17 	ldw	r3,180(sp)
  8353b8:	d8803815 	stw	r2,224(sp)
  8353bc:	1880030b 	ldhu	r2,12(r3)
  8353c0:	1080200c 	andi	r2,r2,128
  8353c4:	10000226 	beq	r2,zero,8353d0 <___svfprintf_internal_r+0x6c>
  8353c8:	18800417 	ldw	r2,16(r3)
  8353cc:	1006b126 	beq	r2,zero,836e94 <___svfprintf_internal_r+0x1b30>
  8353d0:	dcc03917 	ldw	r19,228(sp)
  8353d4:	d8c00404 	addi	r3,sp,16
  8353d8:	054021b4 	movhi	r21,134
  8353dc:	d9001e04 	addi	r4,sp,120
  8353e0:	ad660584 	addi	r21,r21,-26602
  8353e4:	d8c01e15 	stw	r3,120(sp)
  8353e8:	d8002015 	stw	zero,128(sp)
  8353ec:	d8001f15 	stw	zero,124(sp)
  8353f0:	d8003315 	stw	zero,204(sp)
  8353f4:	d8003615 	stw	zero,216(sp)
  8353f8:	d8003715 	stw	zero,220(sp)
  8353fc:	1811883a 	mov	r8,r3
  835400:	d8003a15 	stw	zero,232(sp)
  835404:	d8003b15 	stw	zero,236(sp)
  835408:	d8002f15 	stw	zero,188(sp)
  83540c:	d9002815 	stw	r4,160(sp)
  835410:	b8800007 	ldb	r2,0(r23)
  835414:	10027726 	beq	r2,zero,835df4 <___svfprintf_internal_r+0xa90>
  835418:	00c00944 	movi	r3,37
  83541c:	b823883a 	mov	r17,r23
  835420:	10c0021e 	bne	r2,r3,83542c <___svfprintf_internal_r+0xc8>
  835424:	00001406 	br	835478 <___svfprintf_internal_r+0x114>
  835428:	10c00326 	beq	r2,r3,835438 <___svfprintf_internal_r+0xd4>
  83542c:	8c400044 	addi	r17,r17,1
  835430:	88800007 	ldb	r2,0(r17)
  835434:	103ffc1e 	bne	r2,zero,835428 <__alt_mem_epcs_flash_controller_0+0xff82c428>
  835438:	8de1c83a 	sub	r16,r17,r23
  83543c:	80000e26 	beq	r16,zero,835478 <___svfprintf_internal_r+0x114>
  835440:	d8c02017 	ldw	r3,128(sp)
  835444:	d8801f17 	ldw	r2,124(sp)
  835448:	45c00015 	stw	r23,0(r8)
  83544c:	1c07883a 	add	r3,r3,r16
  835450:	10800044 	addi	r2,r2,1
  835454:	d8c02015 	stw	r3,128(sp)
  835458:	44000115 	stw	r16,4(r8)
  83545c:	d8801f15 	stw	r2,124(sp)
  835460:	00c001c4 	movi	r3,7
  835464:	18809916 	blt	r3,r2,8356cc <___svfprintf_internal_r+0x368>
  835468:	42000204 	addi	r8,r8,8
  83546c:	d9402f17 	ldw	r5,188(sp)
  835470:	2c0b883a 	add	r5,r5,r16
  835474:	d9402f15 	stw	r5,188(sp)
  835478:	88800007 	ldb	r2,0(r17)
  83547c:	10009a26 	beq	r2,zero,8356e8 <___svfprintf_internal_r+0x384>
  835480:	8dc00044 	addi	r23,r17,1
  835484:	8c400047 	ldb	r17,1(r17)
  835488:	0021883a 	mov	r16,zero
  83548c:	00bfffc4 	movi	r2,-1
  835490:	0025883a 	mov	r18,zero
  835494:	dc002905 	stb	r16,164(sp)
  835498:	d8002785 	stb	zero,158(sp)
  83549c:	d8002b05 	stb	zero,172(sp)
  8354a0:	d8802a15 	stw	r2,168(sp)
  8354a4:	d8003115 	stw	zero,196(sp)
  8354a8:	05001604 	movi	r20,88
  8354ac:	05800244 	movi	r22,9
  8354b0:	4039883a 	mov	fp,r8
  8354b4:	9021883a 	mov	r16,r18
  8354b8:	bdc00044 	addi	r23,r23,1
  8354bc:	88bff804 	addi	r2,r17,-32
  8354c0:	a0831e36 	bltu	r20,r2,83613c <___svfprintf_internal_r+0xdd8>
  8354c4:	100490ba 	slli	r2,r2,2
  8354c8:	00c020f4 	movhi	r3,131
  8354cc:	18d53704 	addi	r3,r3,21724
  8354d0:	10c5883a 	add	r2,r2,r3
  8354d4:	10800017 	ldw	r2,0(r2)
  8354d8:	1000683a 	jmp	r2
  8354dc:	00836084 	movi	r2,3458
  8354e0:	0083613c 	xorhi	r2,zero,3460
  8354e4:	0083613c 	xorhi	r2,zero,3460
  8354e8:	00836078 	rdprs	r2,zero,3457
  8354ec:	0083613c 	xorhi	r2,zero,3460
  8354f0:	0083613c 	xorhi	r2,zero,3460
  8354f4:	0083613c 	xorhi	r2,zero,3460
  8354f8:	0083613c 	xorhi	r2,zero,3460
  8354fc:	0083613c 	xorhi	r2,zero,3460
  835500:	0083613c 	xorhi	r2,zero,3460
  835504:	00835744 	movi	r2,3421
  835508:	00835f88 	cmpgei	r2,zero,3454
  83550c:	0083613c 	xorhi	r2,zero,3460
  835510:	00835650 	cmplti	r2,zero,3417
  835514:	00835768 	cmpgeui	r2,zero,3421
  835518:	0083613c 	xorhi	r2,zero,3460
  83551c:	008357f4 	movhi	r2,3423
  835520:	008357b8 	rdprs	r2,zero,3422
  835524:	008357b8 	rdprs	r2,zero,3422
  835528:	008357b8 	rdprs	r2,zero,3422
  83552c:	008357b8 	rdprs	r2,zero,3422
  835530:	008357b8 	rdprs	r2,zero,3422
  835534:	008357b8 	rdprs	r2,zero,3422
  835538:	008357b8 	rdprs	r2,zero,3422
  83553c:	008357b8 	rdprs	r2,zero,3422
  835540:	008357b8 	rdprs	r2,zero,3422
  835544:	0083613c 	xorhi	r2,zero,3460
  835548:	0083613c 	xorhi	r2,zero,3460
  83554c:	0083613c 	xorhi	r2,zero,3460
  835550:	0083613c 	xorhi	r2,zero,3460
  835554:	0083613c 	xorhi	r2,zero,3460
  835558:	0083613c 	xorhi	r2,zero,3460
  83555c:	0083613c 	xorhi	r2,zero,3460
  835560:	0083613c 	xorhi	r2,zero,3460
  835564:	0083613c 	xorhi	r2,zero,3460
  835568:	0083613c 	xorhi	r2,zero,3460
  83556c:	008358b8 	rdprs	r2,zero,3426
  835570:	00835800 	call	83580 <OSCtxSw_SWITCH_PC+0x83540>
  835574:	0083613c 	xorhi	r2,zero,3460
  835578:	00835800 	call	83580 <OSCtxSw_SWITCH_PC+0x83540>
  83557c:	0083613c 	xorhi	r2,zero,3460
  835580:	0083613c 	xorhi	r2,zero,3460
  835584:	0083613c 	xorhi	r2,zero,3460
  835588:	0083613c 	xorhi	r2,zero,3460
  83558c:	008358ac 	andhi	r2,zero,3426
  835590:	0083613c 	xorhi	r2,zero,3460
  835594:	0083613c 	xorhi	r2,zero,3460
  835598:	00835980 	call	83598 <OSCtxSw_SWITCH_PC+0x83558>
  83559c:	0083613c 	xorhi	r2,zero,3460
  8355a0:	0083613c 	xorhi	r2,zero,3460
  8355a4:	0083613c 	xorhi	r2,zero,3460
  8355a8:	0083613c 	xorhi	r2,zero,3460
  8355ac:	0083613c 	xorhi	r2,zero,3460
  8355b0:	00835dfc 	xorhi	r2,zero,3447
  8355b4:	0083613c 	xorhi	r2,zero,3460
  8355b8:	0083613c 	xorhi	r2,zero,3460
  8355bc:	00835e68 	cmpgeui	r2,zero,3449
  8355c0:	0083613c 	xorhi	r2,zero,3460
  8355c4:	0083613c 	xorhi	r2,zero,3460
  8355c8:	0083613c 	xorhi	r2,zero,3460
  8355cc:	0083613c 	xorhi	r2,zero,3460
  8355d0:	0083613c 	xorhi	r2,zero,3460
  8355d4:	0083613c 	xorhi	r2,zero,3460
  8355d8:	0083613c 	xorhi	r2,zero,3460
  8355dc:	0083613c 	xorhi	r2,zero,3460
  8355e0:	0083613c 	xorhi	r2,zero,3460
  8355e4:	0083613c 	xorhi	r2,zero,3460
  8355e8:	00835f24 	muli	r2,zero,3452
  8355ec:	008360a4 	muli	r2,zero,3458
  8355f0:	00835800 	call	83580 <OSCtxSw_SWITCH_PC+0x83540>
  8355f4:	00835800 	call	83580 <OSCtxSw_SWITCH_PC+0x83540>
  8355f8:	00835800 	call	83580 <OSCtxSw_SWITCH_PC+0x83540>
  8355fc:	00836118 	cmpnei	r2,zero,3460
  835600:	008360a4 	muli	r2,zero,3458
  835604:	0083613c 	xorhi	r2,zero,3460
  835608:	0083613c 	xorhi	r2,zero,3460
  83560c:	008360c4 	movi	r2,3459
  835610:	0083613c 	xorhi	r2,zero,3460
  835614:	008360d8 	cmpnei	r2,zero,3459
  835618:	00835f68 	cmpgeui	r2,zero,3453
  83561c:	0083565c 	xori	r2,zero,3417
  835620:	00835fa0 	cmpeqi	r2,zero,3454
  835624:	0083613c 	xorhi	r2,zero,3460
  835628:	00835fac 	andhi	r2,zero,3454
  83562c:	0083613c 	xorhi	r2,zero,3460
  835630:	00836010 	cmplti	r2,zero,3456
  835634:	0083613c 	xorhi	r2,zero,3460
  835638:	0083613c 	xorhi	r2,zero,3460
  83563c:	00836030 	cmpltui	r2,zero,3456
  835640:	d8c03117 	ldw	r3,196(sp)
  835644:	d8802e15 	stw	r2,184(sp)
  835648:	00c7c83a 	sub	r3,zero,r3
  83564c:	d8c03115 	stw	r3,196(sp)
  835650:	84000114 	ori	r16,r16,4
  835654:	bc400007 	ldb	r17,0(r23)
  835658:	003f9706 	br	8354b8 <__alt_mem_epcs_flash_controller_0+0xff82c4b8>
  83565c:	00800c04 	movi	r2,48
  835660:	d8802705 	stb	r2,156(sp)
  835664:	00801e04 	movi	r2,120
  835668:	d8802745 	stb	r2,157(sp)
  83566c:	d9002a17 	ldw	r4,168(sp)
  835670:	d8802e17 	ldw	r2,184(sp)
  835674:	d8002785 	stb	zero,158(sp)
  835678:	e011883a 	mov	r8,fp
  83567c:	10c00104 	addi	r3,r2,4
  835680:	15000017 	ldw	r20,0(r2)
  835684:	002d883a 	mov	r22,zero
  835688:	80800094 	ori	r2,r16,2
  83568c:	2002b616 	blt	r4,zero,836168 <___svfprintf_internal_r+0xe04>
  835690:	00bfdfc4 	movi	r2,-129
  835694:	80a4703a 	and	r18,r16,r2
  835698:	d8c02e15 	stw	r3,184(sp)
  83569c:	94800094 	ori	r18,r18,2
  8356a0:	a002a01e 	bne	r20,zero,836124 <___svfprintf_internal_r+0xdc0>
  8356a4:	014021b4 	movhi	r5,134
  8356a8:	2965fe04 	addi	r5,r5,-26632
  8356ac:	d9403a15 	stw	r5,232(sp)
  8356b0:	04401e04 	movi	r17,120
  8356b4:	d8c02a17 	ldw	r3,168(sp)
  8356b8:	0039883a 	mov	fp,zero
  8356bc:	1801e626 	beq	r3,zero,835e58 <___svfprintf_internal_r+0xaf4>
  8356c0:	0029883a 	mov	r20,zero
  8356c4:	002d883a 	mov	r22,zero
  8356c8:	00020506 	br	835ee0 <___svfprintf_internal_r+0xb7c>
  8356cc:	d9402d17 	ldw	r5,180(sp)
  8356d0:	d9801e04 	addi	r6,sp,120
  8356d4:	9809883a 	mov	r4,r19
  8356d8:	08415fc0 	call	8415fc <__ssprint_r>
  8356dc:	1000081e 	bne	r2,zero,835700 <___svfprintf_internal_r+0x39c>
  8356e0:	da000404 	addi	r8,sp,16
  8356e4:	003f6106 	br	83546c <__alt_mem_epcs_flash_controller_0+0xff82c46c>
  8356e8:	d8802017 	ldw	r2,128(sp)
  8356ec:	10000426 	beq	r2,zero,835700 <___svfprintf_internal_r+0x39c>
  8356f0:	d9402d17 	ldw	r5,180(sp)
  8356f4:	d9003917 	ldw	r4,228(sp)
  8356f8:	d9801e04 	addi	r6,sp,120
  8356fc:	08415fc0 	call	8415fc <__ssprint_r>
  835700:	d8802d17 	ldw	r2,180(sp)
  835704:	10c0030b 	ldhu	r3,12(r2)
  835708:	d8802f17 	ldw	r2,188(sp)
  83570c:	18c0100c 	andi	r3,r3,64
  835710:	1806251e 	bne	r3,zero,836fa8 <___svfprintf_internal_r+0x1c44>
  835714:	dfc04817 	ldw	ra,288(sp)
  835718:	df004717 	ldw	fp,284(sp)
  83571c:	ddc04617 	ldw	r23,280(sp)
  835720:	dd804517 	ldw	r22,276(sp)
  835724:	dd404417 	ldw	r21,272(sp)
  835728:	dd004317 	ldw	r20,268(sp)
  83572c:	dcc04217 	ldw	r19,264(sp)
  835730:	dc804117 	ldw	r18,260(sp)
  835734:	dc404017 	ldw	r17,256(sp)
  835738:	dc003f17 	ldw	r16,252(sp)
  83573c:	dec04904 	addi	sp,sp,292
  835740:	f800283a 	ret
  835744:	d9002e17 	ldw	r4,184(sp)
  835748:	d9402e17 	ldw	r5,184(sp)
  83574c:	21000017 	ldw	r4,0(r4)
  835750:	28800104 	addi	r2,r5,4
  835754:	d9003115 	stw	r4,196(sp)
  835758:	203fb916 	blt	r4,zero,835640 <__alt_mem_epcs_flash_controller_0+0xff82c640>
  83575c:	d8802e15 	stw	r2,184(sp)
  835760:	bc400007 	ldb	r17,0(r23)
  835764:	003f5406 	br	8354b8 <__alt_mem_epcs_flash_controller_0+0xff82c4b8>
  835768:	bc400007 	ldb	r17,0(r23)
  83576c:	01000a84 	movi	r4,42
  835770:	b8c00044 	addi	r3,r23,1
  835774:	89076926 	beq	r17,r4,83751c <___svfprintf_internal_r+0x21b8>
  835778:	8cbff404 	addi	r18,r17,-48
  83577c:	b486b936 	bltu	r22,r18,837264 <___svfprintf_internal_r+0x1f00>
  835780:	0009883a 	mov	r4,zero
  835784:	1823883a 	mov	r17,r3
  835788:	01400284 	movi	r5,10
  83578c:	08301e80 	call	8301e8 <__mulsi3>
  835790:	88c00007 	ldb	r3,0(r17)
  835794:	1489883a 	add	r4,r2,r18
  835798:	8dc00044 	addi	r23,r17,1
  83579c:	1cbff404 	addi	r18,r3,-48
  8357a0:	b823883a 	mov	r17,r23
  8357a4:	b4bff82e 	bgeu	r22,r18,835788 <__alt_mem_epcs_flash_controller_0+0xff82c788>
  8357a8:	1823883a 	mov	r17,r3
  8357ac:	20060416 	blt	r4,zero,836fc0 <___svfprintf_internal_r+0x1c5c>
  8357b0:	d9002a15 	stw	r4,168(sp)
  8357b4:	003f4106 	br	8354bc <__alt_mem_epcs_flash_controller_0+0xff82c4bc>
  8357b8:	8cbff404 	addi	r18,r17,-48
  8357bc:	d8003115 	stw	zero,196(sp)
  8357c0:	0009883a 	mov	r4,zero
  8357c4:	b823883a 	mov	r17,r23
  8357c8:	01400284 	movi	r5,10
  8357cc:	08301e80 	call	8301e8 <__mulsi3>
  8357d0:	88c00007 	ldb	r3,0(r17)
  8357d4:	9089883a 	add	r4,r18,r2
  8357d8:	bdc00044 	addi	r23,r23,1
  8357dc:	1cbff404 	addi	r18,r3,-48
  8357e0:	b823883a 	mov	r17,r23
  8357e4:	b4bff82e 	bgeu	r22,r18,8357c8 <__alt_mem_epcs_flash_controller_0+0xff82c7c8>
  8357e8:	1823883a 	mov	r17,r3
  8357ec:	d9003115 	stw	r4,196(sp)
  8357f0:	003f3206 	br	8354bc <__alt_mem_epcs_flash_controller_0+0xff82c4bc>
  8357f4:	84002014 	ori	r16,r16,128
  8357f8:	bc400007 	ldb	r17,0(r23)
  8357fc:	003f2e06 	br	8354b8 <__alt_mem_epcs_flash_controller_0+0xff82c4b8>
  835800:	8025883a 	mov	r18,r16
  835804:	dc002903 	ldbu	r16,164(sp)
  835808:	e011883a 	mov	r8,fp
  83580c:	84003fcc 	andi	r16,r16,255
  835810:	8007721e 	bne	r16,zero,8375dc <___svfprintf_internal_r+0x2278>
  835814:	9080020c 	andi	r2,r18,8
  835818:	1004a526 	beq	r2,zero,836ab0 <___svfprintf_internal_r+0x174c>
  83581c:	d9002e17 	ldw	r4,184(sp)
  835820:	d9402e17 	ldw	r5,184(sp)
  835824:	d8802e17 	ldw	r2,184(sp)
  835828:	21000017 	ldw	r4,0(r4)
  83582c:	29400117 	ldw	r5,4(r5)
  835830:	10800204 	addi	r2,r2,8
  835834:	d9003615 	stw	r4,216(sp)
  835838:	d9403715 	stw	r5,220(sp)
  83583c:	d8802e15 	stw	r2,184(sp)
  835840:	d9003617 	ldw	r4,216(sp)
  835844:	d9403717 	ldw	r5,220(sp)
  835848:	da003e15 	stw	r8,248(sp)
  83584c:	04000044 	movi	r16,1
  835850:	083ee440 	call	83ee44 <__fpclassifyd>
  835854:	da003e17 	ldw	r8,248(sp)
  835858:	1404731e 	bne	r2,r16,836a28 <___svfprintf_internal_r+0x16c4>
  83585c:	d9003617 	ldw	r4,216(sp)
  835860:	d9403717 	ldw	r5,220(sp)
  835864:	000d883a 	mov	r6,zero
  835868:	000f883a 	mov	r7,zero
  83586c:	0848cec0 	call	848cec <__ledf2>
  835870:	da003e17 	ldw	r8,248(sp)
  835874:	10061b16 	blt	r2,zero,8370e4 <___svfprintf_internal_r+0x1d80>
  835878:	df002783 	ldbu	fp,158(sp)
  83587c:	008011c4 	movi	r2,71
  835880:	1445810e 	bge	r2,r17,836e88 <___svfprintf_internal_r+0x1b24>
  835884:	040021b4 	movhi	r16,134
  835888:	8425f604 	addi	r16,r16,-26664
  83588c:	00c000c4 	movi	r3,3
  835890:	00bfdfc4 	movi	r2,-129
  835894:	d8c02915 	stw	r3,164(sp)
  835898:	90a4703a 	and	r18,r18,r2
  83589c:	d8c02b15 	stw	r3,172(sp)
  8358a0:	d8002a15 	stw	zero,168(sp)
  8358a4:	d8003215 	stw	zero,200(sp)
  8358a8:	00006c06 	br	835a5c <___svfprintf_internal_r+0x6f8>
  8358ac:	84000214 	ori	r16,r16,8
  8358b0:	bc400007 	ldb	r17,0(r23)
  8358b4:	003f0006 	br	8354b8 <__alt_mem_epcs_flash_controller_0+0xff82c4b8>
  8358b8:	8025883a 	mov	r18,r16
  8358bc:	dc002903 	ldbu	r16,164(sp)
  8358c0:	e011883a 	mov	r8,fp
  8358c4:	84003fcc 	andi	r16,r16,255
  8358c8:	80073f1e 	bne	r16,zero,8375c8 <___svfprintf_internal_r+0x2264>
  8358cc:	94800414 	ori	r18,r18,16
  8358d0:	9080080c 	andi	r2,r18,32
  8358d4:	1003bb26 	beq	r2,zero,8367c4 <___svfprintf_internal_r+0x1460>
  8358d8:	d9002e17 	ldw	r4,184(sp)
  8358dc:	20800117 	ldw	r2,4(r4)
  8358e0:	25000017 	ldw	r20,0(r4)
  8358e4:	21000204 	addi	r4,r4,8
  8358e8:	d9002e15 	stw	r4,184(sp)
  8358ec:	102d883a 	mov	r22,r2
  8358f0:	1003bd16 	blt	r2,zero,8367e8 <___svfprintf_internal_r+0x1484>
  8358f4:	d9002a17 	ldw	r4,168(sp)
  8358f8:	df002783 	ldbu	fp,158(sp)
  8358fc:	2003d016 	blt	r4,zero,836840 <___svfprintf_internal_r+0x14dc>
  835900:	00ffdfc4 	movi	r3,-129
  835904:	a584b03a 	or	r2,r20,r22
  835908:	90e4703a 	and	r18,r18,r3
  83590c:	10015026 	beq	r2,zero,835e50 <___svfprintf_internal_r+0xaec>
  835910:	b0037026 	beq	r22,zero,8366d4 <___svfprintf_internal_r+0x1370>
  835914:	dc402915 	stw	r17,164(sp)
  835918:	dc001e04 	addi	r16,sp,120
  83591c:	b023883a 	mov	r17,r22
  835920:	402d883a 	mov	r22,r8
  835924:	a009883a 	mov	r4,r20
  835928:	880b883a 	mov	r5,r17
  83592c:	01800284 	movi	r6,10
  835930:	000f883a 	mov	r7,zero
  835934:	084714c0 	call	84714c <__umoddi3>
  835938:	10800c04 	addi	r2,r2,48
  83593c:	843fffc4 	addi	r16,r16,-1
  835940:	a009883a 	mov	r4,r20
  835944:	880b883a 	mov	r5,r17
  835948:	80800005 	stb	r2,0(r16)
  83594c:	01800284 	movi	r6,10
  835950:	000f883a 	mov	r7,zero
  835954:	0846b500 	call	846b50 <__udivdi3>
  835958:	1029883a 	mov	r20,r2
  83595c:	10c4b03a 	or	r2,r2,r3
  835960:	1823883a 	mov	r17,r3
  835964:	103fef1e 	bne	r2,zero,835924 <__alt_mem_epcs_flash_controller_0+0xff82c924>
  835968:	d8c02817 	ldw	r3,160(sp)
  83596c:	dc402917 	ldw	r17,164(sp)
  835970:	b011883a 	mov	r8,r22
  835974:	1c07c83a 	sub	r3,r3,r16
  835978:	d8c02b15 	stw	r3,172(sp)
  83597c:	00003106 	br	835a44 <___svfprintf_internal_r+0x6e0>
  835980:	8025883a 	mov	r18,r16
  835984:	dc002903 	ldbu	r16,164(sp)
  835988:	e011883a 	mov	r8,fp
  83598c:	84003fcc 	andi	r16,r16,255
  835990:	80070a1e 	bne	r16,zero,8375bc <___svfprintf_internal_r+0x2258>
  835994:	94800414 	ori	r18,r18,16
  835998:	9080080c 	andi	r2,r18,32
  83599c:	1002f626 	beq	r2,zero,836578 <___svfprintf_internal_r+0x1214>
  8359a0:	d9002e17 	ldw	r4,184(sp)
  8359a4:	d9402a17 	ldw	r5,168(sp)
  8359a8:	d8002785 	stb	zero,158(sp)
  8359ac:	20800204 	addi	r2,r4,8
  8359b0:	25000017 	ldw	r20,0(r4)
  8359b4:	25800117 	ldw	r22,4(r4)
  8359b8:	28043716 	blt	r5,zero,836a98 <___svfprintf_internal_r+0x1734>
  8359bc:	013fdfc4 	movi	r4,-129
  8359c0:	a586b03a 	or	r3,r20,r22
  8359c4:	d8802e15 	stw	r2,184(sp)
  8359c8:	9124703a 	and	r18,r18,r4
  8359cc:	1802f71e 	bne	r3,zero,8365ac <___svfprintf_internal_r+0x1248>
  8359d0:	d9402a17 	ldw	r5,168(sp)
  8359d4:	0039883a 	mov	fp,zero
  8359d8:	2806df26 	beq	r5,zero,837558 <___svfprintf_internal_r+0x21f4>
  8359dc:	0029883a 	mov	r20,zero
  8359e0:	002d883a 	mov	r22,zero
  8359e4:	dc001e04 	addi	r16,sp,120
  8359e8:	a006d0fa 	srli	r3,r20,3
  8359ec:	b008977a 	slli	r4,r22,29
  8359f0:	b02cd0fa 	srli	r22,r22,3
  8359f4:	a50001cc 	andi	r20,r20,7
  8359f8:	a0800c04 	addi	r2,r20,48
  8359fc:	843fffc4 	addi	r16,r16,-1
  835a00:	20e8b03a 	or	r20,r4,r3
  835a04:	80800005 	stb	r2,0(r16)
  835a08:	a586b03a 	or	r3,r20,r22
  835a0c:	183ff61e 	bne	r3,zero,8359e8 <__alt_mem_epcs_flash_controller_0+0xff82c9e8>
  835a10:	90c0004c 	andi	r3,r18,1
  835a14:	18013f26 	beq	r3,zero,835f14 <___svfprintf_internal_r+0xbb0>
  835a18:	10803fcc 	andi	r2,r2,255
  835a1c:	1080201c 	xori	r2,r2,128
  835a20:	10bfe004 	addi	r2,r2,-128
  835a24:	00c00c04 	movi	r3,48
  835a28:	10c13a26 	beq	r2,r3,835f14 <___svfprintf_internal_r+0xbb0>
  835a2c:	80ffffc5 	stb	r3,-1(r16)
  835a30:	d8c02817 	ldw	r3,160(sp)
  835a34:	80bfffc4 	addi	r2,r16,-1
  835a38:	1021883a 	mov	r16,r2
  835a3c:	1887c83a 	sub	r3,r3,r2
  835a40:	d8c02b15 	stw	r3,172(sp)
  835a44:	d8802b17 	ldw	r2,172(sp)
  835a48:	d9002a17 	ldw	r4,168(sp)
  835a4c:	1100010e 	bge	r2,r4,835a54 <___svfprintf_internal_r+0x6f0>
  835a50:	2005883a 	mov	r2,r4
  835a54:	d8802915 	stw	r2,164(sp)
  835a58:	d8003215 	stw	zero,200(sp)
  835a5c:	e7003fcc 	andi	fp,fp,255
  835a60:	e700201c 	xori	fp,fp,128
  835a64:	e73fe004 	addi	fp,fp,-128
  835a68:	e0000326 	beq	fp,zero,835a78 <___svfprintf_internal_r+0x714>
  835a6c:	d8c02917 	ldw	r3,164(sp)
  835a70:	18c00044 	addi	r3,r3,1
  835a74:	d8c02915 	stw	r3,164(sp)
  835a78:	90c0008c 	andi	r3,r18,2
  835a7c:	d8c02c15 	stw	r3,176(sp)
  835a80:	18000326 	beq	r3,zero,835a90 <___svfprintf_internal_r+0x72c>
  835a84:	d8c02917 	ldw	r3,164(sp)
  835a88:	18c00084 	addi	r3,r3,2
  835a8c:	d8c02915 	stw	r3,164(sp)
  835a90:	90c0210c 	andi	r3,r18,132
  835a94:	d8c03015 	stw	r3,192(sp)
  835a98:	1801c31e 	bne	r3,zero,8361a8 <___svfprintf_internal_r+0xe44>
  835a9c:	d9003117 	ldw	r4,196(sp)
  835aa0:	d8c02917 	ldw	r3,164(sp)
  835aa4:	20e9c83a 	sub	r20,r4,r3
  835aa8:	0501bf0e 	bge	zero,r20,8361a8 <___svfprintf_internal_r+0xe44>
  835aac:	02400404 	movi	r9,16
  835ab0:	d8c02017 	ldw	r3,128(sp)
  835ab4:	d8801f17 	ldw	r2,124(sp)
  835ab8:	4d053d0e 	bge	r9,r20,836fb0 <___svfprintf_internal_r+0x1c4c>
  835abc:	014021b4 	movhi	r5,134
  835ac0:	29660984 	addi	r5,r5,-26586
  835ac4:	dc403c15 	stw	r17,240(sp)
  835ac8:	d9403515 	stw	r5,212(sp)
  835acc:	a023883a 	mov	r17,r20
  835ad0:	482d883a 	mov	r22,r9
  835ad4:	9029883a 	mov	r20,r18
  835ad8:	070001c4 	movi	fp,7
  835adc:	8025883a 	mov	r18,r16
  835ae0:	dc002d17 	ldw	r16,180(sp)
  835ae4:	00000306 	br	835af4 <___svfprintf_internal_r+0x790>
  835ae8:	8c7ffc04 	addi	r17,r17,-16
  835aec:	42000204 	addi	r8,r8,8
  835af0:	b440130e 	bge	r22,r17,835b40 <___svfprintf_internal_r+0x7dc>
  835af4:	010021b4 	movhi	r4,134
  835af8:	18c00404 	addi	r3,r3,16
  835afc:	10800044 	addi	r2,r2,1
  835b00:	21260984 	addi	r4,r4,-26586
  835b04:	41000015 	stw	r4,0(r8)
  835b08:	45800115 	stw	r22,4(r8)
  835b0c:	d8c02015 	stw	r3,128(sp)
  835b10:	d8801f15 	stw	r2,124(sp)
  835b14:	e0bff40e 	bge	fp,r2,835ae8 <__alt_mem_epcs_flash_controller_0+0xff82cae8>
  835b18:	d9801e04 	addi	r6,sp,120
  835b1c:	800b883a 	mov	r5,r16
  835b20:	9809883a 	mov	r4,r19
  835b24:	08415fc0 	call	8415fc <__ssprint_r>
  835b28:	103ef51e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  835b2c:	8c7ffc04 	addi	r17,r17,-16
  835b30:	d8c02017 	ldw	r3,128(sp)
  835b34:	d8801f17 	ldw	r2,124(sp)
  835b38:	da000404 	addi	r8,sp,16
  835b3c:	b47fed16 	blt	r22,r17,835af4 <__alt_mem_epcs_flash_controller_0+0xff82caf4>
  835b40:	9021883a 	mov	r16,r18
  835b44:	a025883a 	mov	r18,r20
  835b48:	8829883a 	mov	r20,r17
  835b4c:	dc403c17 	ldw	r17,240(sp)
  835b50:	d9403517 	ldw	r5,212(sp)
  835b54:	a0c7883a 	add	r3,r20,r3
  835b58:	10800044 	addi	r2,r2,1
  835b5c:	41400015 	stw	r5,0(r8)
  835b60:	45000115 	stw	r20,4(r8)
  835b64:	d8c02015 	stw	r3,128(sp)
  835b68:	d8801f15 	stw	r2,124(sp)
  835b6c:	010001c4 	movi	r4,7
  835b70:	2082c116 	blt	r4,r2,836678 <___svfprintf_internal_r+0x1314>
  835b74:	df002787 	ldb	fp,158(sp)
  835b78:	42000204 	addi	r8,r8,8
  835b7c:	e0000c26 	beq	fp,zero,835bb0 <___svfprintf_internal_r+0x84c>
  835b80:	d8801f17 	ldw	r2,124(sp)
  835b84:	d9002784 	addi	r4,sp,158
  835b88:	18c00044 	addi	r3,r3,1
  835b8c:	10800044 	addi	r2,r2,1
  835b90:	41000015 	stw	r4,0(r8)
  835b94:	01000044 	movi	r4,1
  835b98:	41000115 	stw	r4,4(r8)
  835b9c:	d8c02015 	stw	r3,128(sp)
  835ba0:	d8801f15 	stw	r2,124(sp)
  835ba4:	010001c4 	movi	r4,7
  835ba8:	20825a16 	blt	r4,r2,836514 <___svfprintf_internal_r+0x11b0>
  835bac:	42000204 	addi	r8,r8,8
  835bb0:	d8802c17 	ldw	r2,176(sp)
  835bb4:	10000c26 	beq	r2,zero,835be8 <___svfprintf_internal_r+0x884>
  835bb8:	d8801f17 	ldw	r2,124(sp)
  835bbc:	d9002704 	addi	r4,sp,156
  835bc0:	18c00084 	addi	r3,r3,2
  835bc4:	10800044 	addi	r2,r2,1
  835bc8:	41000015 	stw	r4,0(r8)
  835bcc:	01000084 	movi	r4,2
  835bd0:	41000115 	stw	r4,4(r8)
  835bd4:	d8c02015 	stw	r3,128(sp)
  835bd8:	d8801f15 	stw	r2,124(sp)
  835bdc:	010001c4 	movi	r4,7
  835be0:	20825416 	blt	r4,r2,836534 <___svfprintf_internal_r+0x11d0>
  835be4:	42000204 	addi	r8,r8,8
  835be8:	d9003017 	ldw	r4,192(sp)
  835bec:	00802004 	movi	r2,128
  835bf0:	2081b926 	beq	r4,r2,8362d8 <___svfprintf_internal_r+0xf74>
  835bf4:	d9402a17 	ldw	r5,168(sp)
  835bf8:	d8802b17 	ldw	r2,172(sp)
  835bfc:	28adc83a 	sub	r22,r5,r2
  835c00:	05802f0e 	bge	zero,r22,835cc0 <___svfprintf_internal_r+0x95c>
  835c04:	07000404 	movi	fp,16
  835c08:	d8801f17 	ldw	r2,124(sp)
  835c0c:	e583e20e 	bge	fp,r22,836b98 <___svfprintf_internal_r+0x1834>
  835c10:	014021b4 	movhi	r5,134
  835c14:	29660584 	addi	r5,r5,-26602
  835c18:	dc402a15 	stw	r17,168(sp)
  835c1c:	d9402c15 	stw	r5,176(sp)
  835c20:	b023883a 	mov	r17,r22
  835c24:	050001c4 	movi	r20,7
  835c28:	902d883a 	mov	r22,r18
  835c2c:	8025883a 	mov	r18,r16
  835c30:	dc002d17 	ldw	r16,180(sp)
  835c34:	00000306 	br	835c44 <___svfprintf_internal_r+0x8e0>
  835c38:	8c7ffc04 	addi	r17,r17,-16
  835c3c:	42000204 	addi	r8,r8,8
  835c40:	e440110e 	bge	fp,r17,835c88 <___svfprintf_internal_r+0x924>
  835c44:	18c00404 	addi	r3,r3,16
  835c48:	10800044 	addi	r2,r2,1
  835c4c:	45400015 	stw	r21,0(r8)
  835c50:	47000115 	stw	fp,4(r8)
  835c54:	d8c02015 	stw	r3,128(sp)
  835c58:	d8801f15 	stw	r2,124(sp)
  835c5c:	a0bff60e 	bge	r20,r2,835c38 <__alt_mem_epcs_flash_controller_0+0xff82cc38>
  835c60:	d9801e04 	addi	r6,sp,120
  835c64:	800b883a 	mov	r5,r16
  835c68:	9809883a 	mov	r4,r19
  835c6c:	08415fc0 	call	8415fc <__ssprint_r>
  835c70:	103ea31e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  835c74:	8c7ffc04 	addi	r17,r17,-16
  835c78:	d8c02017 	ldw	r3,128(sp)
  835c7c:	d8801f17 	ldw	r2,124(sp)
  835c80:	da000404 	addi	r8,sp,16
  835c84:	e47fef16 	blt	fp,r17,835c44 <__alt_mem_epcs_flash_controller_0+0xff82cc44>
  835c88:	9021883a 	mov	r16,r18
  835c8c:	b025883a 	mov	r18,r22
  835c90:	882d883a 	mov	r22,r17
  835c94:	dc402a17 	ldw	r17,168(sp)
  835c98:	d9002c17 	ldw	r4,176(sp)
  835c9c:	1d87883a 	add	r3,r3,r22
  835ca0:	10800044 	addi	r2,r2,1
  835ca4:	41000015 	stw	r4,0(r8)
  835ca8:	45800115 	stw	r22,4(r8)
  835cac:	d8c02015 	stw	r3,128(sp)
  835cb0:	d8801f15 	stw	r2,124(sp)
  835cb4:	010001c4 	movi	r4,7
  835cb8:	20820e16 	blt	r4,r2,8364f4 <___svfprintf_internal_r+0x1190>
  835cbc:	42000204 	addi	r8,r8,8
  835cc0:	9080400c 	andi	r2,r18,256
  835cc4:	10013a1e 	bne	r2,zero,8361b0 <___svfprintf_internal_r+0xe4c>
  835cc8:	d9402b17 	ldw	r5,172(sp)
  835ccc:	d8801f17 	ldw	r2,124(sp)
  835cd0:	44000015 	stw	r16,0(r8)
  835cd4:	1947883a 	add	r3,r3,r5
  835cd8:	10800044 	addi	r2,r2,1
  835cdc:	41400115 	stw	r5,4(r8)
  835ce0:	d8c02015 	stw	r3,128(sp)
  835ce4:	d8801f15 	stw	r2,124(sp)
  835ce8:	010001c4 	movi	r4,7
  835cec:	2081f316 	blt	r4,r2,8364bc <___svfprintf_internal_r+0x1158>
  835cf0:	42000204 	addi	r8,r8,8
  835cf4:	9480010c 	andi	r18,r18,4
  835cf8:	90003226 	beq	r18,zero,835dc4 <___svfprintf_internal_r+0xa60>
  835cfc:	d9403117 	ldw	r5,196(sp)
  835d00:	d8802917 	ldw	r2,164(sp)
  835d04:	28a1c83a 	sub	r16,r5,r2
  835d08:	04002e0e 	bge	zero,r16,835dc4 <___svfprintf_internal_r+0xa60>
  835d0c:	04400404 	movi	r17,16
  835d10:	d8801f17 	ldw	r2,124(sp)
  835d14:	8c04db0e 	bge	r17,r16,837084 <___svfprintf_internal_r+0x1d20>
  835d18:	014021b4 	movhi	r5,134
  835d1c:	29660984 	addi	r5,r5,-26586
  835d20:	d9403515 	stw	r5,212(sp)
  835d24:	048001c4 	movi	r18,7
  835d28:	dd002d17 	ldw	r20,180(sp)
  835d2c:	00000306 	br	835d3c <___svfprintf_internal_r+0x9d8>
  835d30:	843ffc04 	addi	r16,r16,-16
  835d34:	42000204 	addi	r8,r8,8
  835d38:	8c00130e 	bge	r17,r16,835d88 <___svfprintf_internal_r+0xa24>
  835d3c:	010021b4 	movhi	r4,134
  835d40:	18c00404 	addi	r3,r3,16
  835d44:	10800044 	addi	r2,r2,1
  835d48:	21260984 	addi	r4,r4,-26586
  835d4c:	41000015 	stw	r4,0(r8)
  835d50:	44400115 	stw	r17,4(r8)
  835d54:	d8c02015 	stw	r3,128(sp)
  835d58:	d8801f15 	stw	r2,124(sp)
  835d5c:	90bff40e 	bge	r18,r2,835d30 <__alt_mem_epcs_flash_controller_0+0xff82cd30>
  835d60:	d9801e04 	addi	r6,sp,120
  835d64:	a00b883a 	mov	r5,r20
  835d68:	9809883a 	mov	r4,r19
  835d6c:	08415fc0 	call	8415fc <__ssprint_r>
  835d70:	103e631e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  835d74:	843ffc04 	addi	r16,r16,-16
  835d78:	d8c02017 	ldw	r3,128(sp)
  835d7c:	d8801f17 	ldw	r2,124(sp)
  835d80:	da000404 	addi	r8,sp,16
  835d84:	8c3fed16 	blt	r17,r16,835d3c <__alt_mem_epcs_flash_controller_0+0xff82cd3c>
  835d88:	d9403517 	ldw	r5,212(sp)
  835d8c:	1c07883a 	add	r3,r3,r16
  835d90:	10800044 	addi	r2,r2,1
  835d94:	41400015 	stw	r5,0(r8)
  835d98:	44000115 	stw	r16,4(r8)
  835d9c:	d8c02015 	stw	r3,128(sp)
  835da0:	d8801f15 	stw	r2,124(sp)
  835da4:	010001c4 	movi	r4,7
  835da8:	2080060e 	bge	r4,r2,835dc4 <___svfprintf_internal_r+0xa60>
  835dac:	d9402d17 	ldw	r5,180(sp)
  835db0:	d9801e04 	addi	r6,sp,120
  835db4:	9809883a 	mov	r4,r19
  835db8:	08415fc0 	call	8415fc <__ssprint_r>
  835dbc:	103e501e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  835dc0:	d8c02017 	ldw	r3,128(sp)
  835dc4:	d8803117 	ldw	r2,196(sp)
  835dc8:	d9002917 	ldw	r4,164(sp)
  835dcc:	1100010e 	bge	r2,r4,835dd4 <___svfprintf_internal_r+0xa70>
  835dd0:	2005883a 	mov	r2,r4
  835dd4:	d9402f17 	ldw	r5,188(sp)
  835dd8:	288b883a 	add	r5,r5,r2
  835ddc:	d9402f15 	stw	r5,188(sp)
  835de0:	1801be1e 	bne	r3,zero,8364dc <___svfprintf_internal_r+0x1178>
  835de4:	b8800007 	ldb	r2,0(r23)
  835de8:	d8001f15 	stw	zero,124(sp)
  835dec:	da000404 	addi	r8,sp,16
  835df0:	103d891e 	bne	r2,zero,835418 <__alt_mem_epcs_flash_controller_0+0xff82c418>
  835df4:	b823883a 	mov	r17,r23
  835df8:	003d9f06 	br	835478 <__alt_mem_epcs_flash_controller_0+0xff82c478>
  835dfc:	8025883a 	mov	r18,r16
  835e00:	dc002903 	ldbu	r16,164(sp)
  835e04:	e011883a 	mov	r8,fp
  835e08:	84003fcc 	andi	r16,r16,255
  835e0c:	8005e61e 	bne	r16,zero,8375a8 <___svfprintf_internal_r+0x2244>
  835e10:	94800414 	ori	r18,r18,16
  835e14:	9080080c 	andi	r2,r18,32
  835e18:	10022026 	beq	r2,zero,83669c <___svfprintf_internal_r+0x1338>
  835e1c:	d9002e17 	ldw	r4,184(sp)
  835e20:	d9402a17 	ldw	r5,168(sp)
  835e24:	d8002785 	stb	zero,158(sp)
  835e28:	20c00204 	addi	r3,r4,8
  835e2c:	25000017 	ldw	r20,0(r4)
  835e30:	25800117 	ldw	r22,4(r4)
  835e34:	2803ad16 	blt	r5,zero,836cec <___svfprintf_internal_r+0x1988>
  835e38:	013fdfc4 	movi	r4,-129
  835e3c:	a584b03a 	or	r2,r20,r22
  835e40:	d8c02e15 	stw	r3,184(sp)
  835e44:	9124703a 	and	r18,r18,r4
  835e48:	0039883a 	mov	fp,zero
  835e4c:	103eb01e 	bne	r2,zero,835910 <__alt_mem_epcs_flash_controller_0+0xff82c910>
  835e50:	d8802a17 	ldw	r2,168(sp)
  835e54:	1002e71e 	bne	r2,zero,8369f4 <___svfprintf_internal_r+0x1690>
  835e58:	d8002a15 	stw	zero,168(sp)
  835e5c:	d8002b15 	stw	zero,172(sp)
  835e60:	dc001e04 	addi	r16,sp,120
  835e64:	003ef706 	br	835a44 <__alt_mem_epcs_flash_controller_0+0xff82ca44>
  835e68:	8025883a 	mov	r18,r16
  835e6c:	dc002903 	ldbu	r16,164(sp)
  835e70:	e011883a 	mov	r8,fp
  835e74:	84003fcc 	andi	r16,r16,255
  835e78:	8005c81e 	bne	r16,zero,83759c <___svfprintf_internal_r+0x2238>
  835e7c:	010021b4 	movhi	r4,134
  835e80:	2125f904 	addi	r4,r4,-26652
  835e84:	d9003a15 	stw	r4,232(sp)
  835e88:	9080080c 	andi	r2,r18,32
  835e8c:	10007226 	beq	r2,zero,836058 <___svfprintf_internal_r+0xcf4>
  835e90:	d9402e17 	ldw	r5,184(sp)
  835e94:	2d000017 	ldw	r20,0(r5)
  835e98:	2d800117 	ldw	r22,4(r5)
  835e9c:	29400204 	addi	r5,r5,8
  835ea0:	d9402e15 	stw	r5,184(sp)
  835ea4:	9080004c 	andi	r2,r18,1
  835ea8:	1001aa26 	beq	r2,zero,836554 <___svfprintf_internal_r+0x11f0>
  835eac:	a584b03a 	or	r2,r20,r22
  835eb0:	10032526 	beq	r2,zero,836b48 <___svfprintf_internal_r+0x17e4>
  835eb4:	d8c02a17 	ldw	r3,168(sp)
  835eb8:	00800c04 	movi	r2,48
  835ebc:	d8802705 	stb	r2,156(sp)
  835ec0:	dc402745 	stb	r17,157(sp)
  835ec4:	d8002785 	stb	zero,158(sp)
  835ec8:	90800094 	ori	r2,r18,2
  835ecc:	1804a316 	blt	r3,zero,83715c <___svfprintf_internal_r+0x1df8>
  835ed0:	00bfdfc4 	movi	r2,-129
  835ed4:	90a4703a 	and	r18,r18,r2
  835ed8:	94800094 	ori	r18,r18,2
  835edc:	0039883a 	mov	fp,zero
  835ee0:	d9003a17 	ldw	r4,232(sp)
  835ee4:	dc001e04 	addi	r16,sp,120
  835ee8:	a08003cc 	andi	r2,r20,15
  835eec:	b006973a 	slli	r3,r22,28
  835ef0:	2085883a 	add	r2,r4,r2
  835ef4:	a028d13a 	srli	r20,r20,4
  835ef8:	10800003 	ldbu	r2,0(r2)
  835efc:	b02cd13a 	srli	r22,r22,4
  835f00:	843fffc4 	addi	r16,r16,-1
  835f04:	1d28b03a 	or	r20,r3,r20
  835f08:	80800005 	stb	r2,0(r16)
  835f0c:	a584b03a 	or	r2,r20,r22
  835f10:	103ff51e 	bne	r2,zero,835ee8 <__alt_mem_epcs_flash_controller_0+0xff82cee8>
  835f14:	d8c02817 	ldw	r3,160(sp)
  835f18:	1c07c83a 	sub	r3,r3,r16
  835f1c:	d8c02b15 	stw	r3,172(sp)
  835f20:	003ec806 	br	835a44 <__alt_mem_epcs_flash_controller_0+0xff82ca44>
  835f24:	d8c02e17 	ldw	r3,184(sp)
  835f28:	d9002e17 	ldw	r4,184(sp)
  835f2c:	8025883a 	mov	r18,r16
  835f30:	18800017 	ldw	r2,0(r3)
  835f34:	21000104 	addi	r4,r4,4
  835f38:	00c00044 	movi	r3,1
  835f3c:	e011883a 	mov	r8,fp
  835f40:	d8c02915 	stw	r3,164(sp)
  835f44:	d8002785 	stb	zero,158(sp)
  835f48:	d8801405 	stb	r2,80(sp)
  835f4c:	d9002e15 	stw	r4,184(sp)
  835f50:	d8c02b15 	stw	r3,172(sp)
  835f54:	d8002a15 	stw	zero,168(sp)
  835f58:	d8003215 	stw	zero,200(sp)
  835f5c:	dc001404 	addi	r16,sp,80
  835f60:	0039883a 	mov	fp,zero
  835f64:	003ec406 	br	835a78 <__alt_mem_epcs_flash_controller_0+0xff82ca78>
  835f68:	8025883a 	mov	r18,r16
  835f6c:	dc002903 	ldbu	r16,164(sp)
  835f70:	e011883a 	mov	r8,fp
  835f74:	84003fcc 	andi	r16,r16,255
  835f78:	803e8726 	beq	r16,zero,835998 <__alt_mem_epcs_flash_controller_0+0xff82c998>
  835f7c:	d8c02b03 	ldbu	r3,172(sp)
  835f80:	d8c02785 	stb	r3,158(sp)
  835f84:	003e8406 	br	835998 <__alt_mem_epcs_flash_controller_0+0xff82c998>
  835f88:	00c00044 	movi	r3,1
  835f8c:	d8c02905 	stb	r3,164(sp)
  835f90:	00c00ac4 	movi	r3,43
  835f94:	d8c02b05 	stb	r3,172(sp)
  835f98:	bc400007 	ldb	r17,0(r23)
  835f9c:	003d4606 	br	8354b8 <__alt_mem_epcs_flash_controller_0+0xff82c4b8>
  835fa0:	84000814 	ori	r16,r16,32
  835fa4:	bc400007 	ldb	r17,0(r23)
  835fa8:	003d4306 	br	8354b8 <__alt_mem_epcs_flash_controller_0+0xff82c4b8>
  835fac:	d8802e17 	ldw	r2,184(sp)
  835fb0:	8025883a 	mov	r18,r16
  835fb4:	d8002785 	stb	zero,158(sp)
  835fb8:	14000017 	ldw	r16,0(r2)
  835fbc:	e011883a 	mov	r8,fp
  835fc0:	15000104 	addi	r20,r2,4
  835fc4:	80042126 	beq	r16,zero,83704c <___svfprintf_internal_r+0x1ce8>
  835fc8:	d8c02a17 	ldw	r3,168(sp)
  835fcc:	1803ee16 	blt	r3,zero,836f88 <___svfprintf_internal_r+0x1c24>
  835fd0:	180d883a 	mov	r6,r3
  835fd4:	000b883a 	mov	r5,zero
  835fd8:	8009883a 	mov	r4,r16
  835fdc:	df003e15 	stw	fp,248(sp)
  835fe0:	0833b680 	call	833b68 <memchr>
  835fe4:	da003e17 	ldw	r8,248(sp)
  835fe8:	10046a26 	beq	r2,zero,837194 <___svfprintf_internal_r+0x1e30>
  835fec:	1405c83a 	sub	r2,r2,r16
  835ff0:	d8802b15 	stw	r2,172(sp)
  835ff4:	1003ea16 	blt	r2,zero,836fa0 <___svfprintf_internal_r+0x1c3c>
  835ff8:	df002783 	ldbu	fp,158(sp)
  835ffc:	d8802915 	stw	r2,164(sp)
  836000:	dd002e15 	stw	r20,184(sp)
  836004:	d8002a15 	stw	zero,168(sp)
  836008:	d8003215 	stw	zero,200(sp)
  83600c:	003e9306 	br	835a5c <__alt_mem_epcs_flash_controller_0+0xff82ca5c>
  836010:	8025883a 	mov	r18,r16
  836014:	dc002903 	ldbu	r16,164(sp)
  836018:	e011883a 	mov	r8,fp
  83601c:	84003fcc 	andi	r16,r16,255
  836020:	803f7c26 	beq	r16,zero,835e14 <__alt_mem_epcs_flash_controller_0+0xff82ce14>
  836024:	d8c02b03 	ldbu	r3,172(sp)
  836028:	d8c02785 	stb	r3,158(sp)
  83602c:	003f7906 	br	835e14 <__alt_mem_epcs_flash_controller_0+0xff82ce14>
  836030:	8025883a 	mov	r18,r16
  836034:	dc002903 	ldbu	r16,164(sp)
  836038:	e011883a 	mov	r8,fp
  83603c:	84003fcc 	andi	r16,r16,255
  836040:	8005741e 	bne	r16,zero,837614 <___svfprintf_internal_r+0x22b0>
  836044:	010021b4 	movhi	r4,134
  836048:	2125fe04 	addi	r4,r4,-26632
  83604c:	d9003a15 	stw	r4,232(sp)
  836050:	9080080c 	andi	r2,r18,32
  836054:	103f8e1e 	bne	r2,zero,835e90 <__alt_mem_epcs_flash_controller_0+0xff82ce90>
  836058:	9080040c 	andi	r2,r18,16
  83605c:	1002a726 	beq	r2,zero,836afc <___svfprintf_internal_r+0x1798>
  836060:	d8802e17 	ldw	r2,184(sp)
  836064:	002d883a 	mov	r22,zero
  836068:	15000017 	ldw	r20,0(r2)
  83606c:	10800104 	addi	r2,r2,4
  836070:	d8802e15 	stw	r2,184(sp)
  836074:	003f8b06 	br	835ea4 <__alt_mem_epcs_flash_controller_0+0xff82cea4>
  836078:	84000054 	ori	r16,r16,1
  83607c:	bc400007 	ldb	r17,0(r23)
  836080:	003d0d06 	br	8354b8 <__alt_mem_epcs_flash_controller_0+0xff82c4b8>
  836084:	d8802b07 	ldb	r2,172(sp)
  836088:	1002a41e 	bne	r2,zero,836b1c <___svfprintf_internal_r+0x17b8>
  83608c:	00c00044 	movi	r3,1
  836090:	d8c02905 	stb	r3,164(sp)
  836094:	00c00804 	movi	r3,32
  836098:	d8c02b05 	stb	r3,172(sp)
  83609c:	bc400007 	ldb	r17,0(r23)
  8360a0:	003d0506 	br	8354b8 <__alt_mem_epcs_flash_controller_0+0xff82c4b8>
  8360a4:	8025883a 	mov	r18,r16
  8360a8:	dc002903 	ldbu	r16,164(sp)
  8360ac:	e011883a 	mov	r8,fp
  8360b0:	84003fcc 	andi	r16,r16,255
  8360b4:	803e0626 	beq	r16,zero,8358d0 <__alt_mem_epcs_flash_controller_0+0xff82c8d0>
  8360b8:	d8c02b03 	ldbu	r3,172(sp)
  8360bc:	d8c02785 	stb	r3,158(sp)
  8360c0:	003e0306 	br	8358d0 <__alt_mem_epcs_flash_controller_0+0xff82c8d0>
  8360c4:	bc400007 	ldb	r17,0(r23)
  8360c8:	00801b04 	movi	r2,108
  8360cc:	88830a26 	beq	r17,r2,836cf8 <___svfprintf_internal_r+0x1994>
  8360d0:	84000414 	ori	r16,r16,16
  8360d4:	003cf806 	br	8354b8 <__alt_mem_epcs_flash_controller_0+0xff82c4b8>
  8360d8:	8025883a 	mov	r18,r16
  8360dc:	dc002903 	ldbu	r16,164(sp)
  8360e0:	e011883a 	mov	r8,fp
  8360e4:	84003fcc 	andi	r16,r16,255
  8360e8:	8005471e 	bne	r16,zero,837608 <___svfprintf_internal_r+0x22a4>
  8360ec:	9080080c 	andi	r2,r18,32
  8360f0:	10028c26 	beq	r2,zero,836b24 <___svfprintf_internal_r+0x17c0>
  8360f4:	d9002e17 	ldw	r4,184(sp)
  8360f8:	d9402f17 	ldw	r5,188(sp)
  8360fc:	20800017 	ldw	r2,0(r4)
  836100:	2807d7fa 	srai	r3,r5,31
  836104:	21000104 	addi	r4,r4,4
  836108:	d9002e15 	stw	r4,184(sp)
  83610c:	11400015 	stw	r5,0(r2)
  836110:	10c00115 	stw	r3,4(r2)
  836114:	003cbe06 	br	835410 <__alt_mem_epcs_flash_controller_0+0xff82c410>
  836118:	84001014 	ori	r16,r16,64
  83611c:	bc400007 	ldb	r17,0(r23)
  836120:	003ce506 	br	8354b8 <__alt_mem_epcs_flash_controller_0+0xff82c4b8>
  836124:	010021b4 	movhi	r4,134
  836128:	2125fe04 	addi	r4,r4,-26632
  83612c:	0039883a 	mov	fp,zero
  836130:	d9003a15 	stw	r4,232(sp)
  836134:	04401e04 	movi	r17,120
  836138:	003f6906 	br	835ee0 <__alt_mem_epcs_flash_controller_0+0xff82cee0>
  83613c:	8025883a 	mov	r18,r16
  836140:	dc002903 	ldbu	r16,164(sp)
  836144:	e011883a 	mov	r8,fp
  836148:	84003fcc 	andi	r16,r16,255
  83614c:	8005261e 	bne	r16,zero,8375e8 <___svfprintf_internal_r+0x2284>
  836150:	883d6526 	beq	r17,zero,8356e8 <__alt_mem_epcs_flash_controller_0+0xff82c6e8>
  836154:	00c00044 	movi	r3,1
  836158:	d8c02915 	stw	r3,164(sp)
  83615c:	dc401405 	stb	r17,80(sp)
  836160:	d8002785 	stb	zero,158(sp)
  836164:	003f7a06 	br	835f50 <__alt_mem_epcs_flash_controller_0+0xff82cf50>
  836168:	010021b4 	movhi	r4,134
  83616c:	2125fe04 	addi	r4,r4,-26632
  836170:	d9003a15 	stw	r4,232(sp)
  836174:	d8c02e15 	stw	r3,184(sp)
  836178:	1025883a 	mov	r18,r2
  83617c:	04401e04 	movi	r17,120
  836180:	a584b03a 	or	r2,r20,r22
  836184:	1000fa1e 	bne	r2,zero,836570 <___svfprintf_internal_r+0x120c>
  836188:	0039883a 	mov	fp,zero
  83618c:	00800084 	movi	r2,2
  836190:	10803fcc 	andi	r2,r2,255
  836194:	00c00044 	movi	r3,1
  836198:	10c21626 	beq	r2,r3,8369f4 <___svfprintf_internal_r+0x1690>
  83619c:	00c00084 	movi	r3,2
  8361a0:	10fe0e1e 	bne	r2,r3,8359dc <__alt_mem_epcs_flash_controller_0+0xff82c9dc>
  8361a4:	003d4606 	br	8356c0 <__alt_mem_epcs_flash_controller_0+0xff82c6c0>
  8361a8:	d8c02017 	ldw	r3,128(sp)
  8361ac:	003e7306 	br	835b7c <__alt_mem_epcs_flash_controller_0+0xff82cb7c>
  8361b0:	00801944 	movi	r2,101
  8361b4:	14407c0e 	bge	r2,r17,8363a8 <___svfprintf_internal_r+0x1044>
  8361b8:	d9003617 	ldw	r4,216(sp)
  8361bc:	d9403717 	ldw	r5,220(sp)
  8361c0:	000d883a 	mov	r6,zero
  8361c4:	000f883a 	mov	r7,zero
  8361c8:	d8c03d15 	stw	r3,244(sp)
  8361cc:	da003e15 	stw	r8,248(sp)
  8361d0:	0848b880 	call	848b88 <__eqdf2>
  8361d4:	d8c03d17 	ldw	r3,244(sp)
  8361d8:	da003e17 	ldw	r8,248(sp)
  8361dc:	1000f51e 	bne	r2,zero,8365b4 <___svfprintf_internal_r+0x1250>
  8361e0:	d8801f17 	ldw	r2,124(sp)
  8361e4:	010021b4 	movhi	r4,134
  8361e8:	21260504 	addi	r4,r4,-26604
  8361ec:	18c00044 	addi	r3,r3,1
  8361f0:	10800044 	addi	r2,r2,1
  8361f4:	41000015 	stw	r4,0(r8)
  8361f8:	01000044 	movi	r4,1
  8361fc:	41000115 	stw	r4,4(r8)
  836200:	d8c02015 	stw	r3,128(sp)
  836204:	d8801f15 	stw	r2,124(sp)
  836208:	010001c4 	movi	r4,7
  83620c:	20826616 	blt	r4,r2,836ba8 <___svfprintf_internal_r+0x1844>
  836210:	42000204 	addi	r8,r8,8
  836214:	d8802617 	ldw	r2,152(sp)
  836218:	d9403317 	ldw	r5,204(sp)
  83621c:	11400216 	blt	r2,r5,836228 <___svfprintf_internal_r+0xec4>
  836220:	9080004c 	andi	r2,r18,1
  836224:	103eb326 	beq	r2,zero,835cf4 <__alt_mem_epcs_flash_controller_0+0xff82ccf4>
  836228:	d8803817 	ldw	r2,224(sp)
  83622c:	d9003417 	ldw	r4,208(sp)
  836230:	d9403817 	ldw	r5,224(sp)
  836234:	1887883a 	add	r3,r3,r2
  836238:	d8801f17 	ldw	r2,124(sp)
  83623c:	41000015 	stw	r4,0(r8)
  836240:	41400115 	stw	r5,4(r8)
  836244:	10800044 	addi	r2,r2,1
  836248:	d8c02015 	stw	r3,128(sp)
  83624c:	d8801f15 	stw	r2,124(sp)
  836250:	010001c4 	movi	r4,7
  836254:	2082af16 	blt	r4,r2,836d14 <___svfprintf_internal_r+0x19b0>
  836258:	42000204 	addi	r8,r8,8
  83625c:	d8803317 	ldw	r2,204(sp)
  836260:	143fffc4 	addi	r16,r2,-1
  836264:	043ea30e 	bge	zero,r16,835cf4 <__alt_mem_epcs_flash_controller_0+0xff82ccf4>
  836268:	04400404 	movi	r17,16
  83626c:	d8801f17 	ldw	r2,124(sp)
  836270:	8c00860e 	bge	r17,r16,83648c <___svfprintf_internal_r+0x1128>
  836274:	014021b4 	movhi	r5,134
  836278:	29660584 	addi	r5,r5,-26602
  83627c:	d9402c15 	stw	r5,176(sp)
  836280:	058001c4 	movi	r22,7
  836284:	dd002d17 	ldw	r20,180(sp)
  836288:	00000306 	br	836298 <___svfprintf_internal_r+0xf34>
  83628c:	42000204 	addi	r8,r8,8
  836290:	843ffc04 	addi	r16,r16,-16
  836294:	8c00800e 	bge	r17,r16,836498 <___svfprintf_internal_r+0x1134>
  836298:	18c00404 	addi	r3,r3,16
  83629c:	10800044 	addi	r2,r2,1
  8362a0:	45400015 	stw	r21,0(r8)
  8362a4:	44400115 	stw	r17,4(r8)
  8362a8:	d8c02015 	stw	r3,128(sp)
  8362ac:	d8801f15 	stw	r2,124(sp)
  8362b0:	b0bff60e 	bge	r22,r2,83628c <__alt_mem_epcs_flash_controller_0+0xff82d28c>
  8362b4:	d9801e04 	addi	r6,sp,120
  8362b8:	a00b883a 	mov	r5,r20
  8362bc:	9809883a 	mov	r4,r19
  8362c0:	08415fc0 	call	8415fc <__ssprint_r>
  8362c4:	103d0e1e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  8362c8:	d8c02017 	ldw	r3,128(sp)
  8362cc:	d8801f17 	ldw	r2,124(sp)
  8362d0:	da000404 	addi	r8,sp,16
  8362d4:	003fee06 	br	836290 <__alt_mem_epcs_flash_controller_0+0xff82d290>
  8362d8:	d9403117 	ldw	r5,196(sp)
  8362dc:	d8802917 	ldw	r2,164(sp)
  8362e0:	28adc83a 	sub	r22,r5,r2
  8362e4:	05be430e 	bge	zero,r22,835bf4 <__alt_mem_epcs_flash_controller_0+0xff82cbf4>
  8362e8:	07000404 	movi	fp,16
  8362ec:	d8801f17 	ldw	r2,124(sp)
  8362f0:	e583a20e 	bge	fp,r22,83717c <___svfprintf_internal_r+0x1e18>
  8362f4:	014021b4 	movhi	r5,134
  8362f8:	29660584 	addi	r5,r5,-26602
  8362fc:	dc403015 	stw	r17,192(sp)
  836300:	d9402c15 	stw	r5,176(sp)
  836304:	b023883a 	mov	r17,r22
  836308:	050001c4 	movi	r20,7
  83630c:	902d883a 	mov	r22,r18
  836310:	8025883a 	mov	r18,r16
  836314:	dc002d17 	ldw	r16,180(sp)
  836318:	00000306 	br	836328 <___svfprintf_internal_r+0xfc4>
  83631c:	8c7ffc04 	addi	r17,r17,-16
  836320:	42000204 	addi	r8,r8,8
  836324:	e440110e 	bge	fp,r17,83636c <___svfprintf_internal_r+0x1008>
  836328:	18c00404 	addi	r3,r3,16
  83632c:	10800044 	addi	r2,r2,1
  836330:	45400015 	stw	r21,0(r8)
  836334:	47000115 	stw	fp,4(r8)
  836338:	d8c02015 	stw	r3,128(sp)
  83633c:	d8801f15 	stw	r2,124(sp)
  836340:	a0bff60e 	bge	r20,r2,83631c <__alt_mem_epcs_flash_controller_0+0xff82d31c>
  836344:	d9801e04 	addi	r6,sp,120
  836348:	800b883a 	mov	r5,r16
  83634c:	9809883a 	mov	r4,r19
  836350:	08415fc0 	call	8415fc <__ssprint_r>
  836354:	103cea1e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  836358:	8c7ffc04 	addi	r17,r17,-16
  83635c:	d8c02017 	ldw	r3,128(sp)
  836360:	d8801f17 	ldw	r2,124(sp)
  836364:	da000404 	addi	r8,sp,16
  836368:	e47fef16 	blt	fp,r17,836328 <__alt_mem_epcs_flash_controller_0+0xff82d328>
  83636c:	9021883a 	mov	r16,r18
  836370:	b025883a 	mov	r18,r22
  836374:	882d883a 	mov	r22,r17
  836378:	dc403017 	ldw	r17,192(sp)
  83637c:	d9002c17 	ldw	r4,176(sp)
  836380:	1d87883a 	add	r3,r3,r22
  836384:	10800044 	addi	r2,r2,1
  836388:	41000015 	stw	r4,0(r8)
  83638c:	45800115 	stw	r22,4(r8)
  836390:	d8c02015 	stw	r3,128(sp)
  836394:	d8801f15 	stw	r2,124(sp)
  836398:	010001c4 	movi	r4,7
  83639c:	20819a16 	blt	r4,r2,836a08 <___svfprintf_internal_r+0x16a4>
  8363a0:	42000204 	addi	r8,r8,8
  8363a4:	003e1306 	br	835bf4 <__alt_mem_epcs_flash_controller_0+0xff82cbf4>
  8363a8:	d9403317 	ldw	r5,204(sp)
  8363ac:	00800044 	movi	r2,1
  8363b0:	18c00044 	addi	r3,r3,1
  8363b4:	1141710e 	bge	r2,r5,83697c <___svfprintf_internal_r+0x1618>
  8363b8:	dc401f17 	ldw	r17,124(sp)
  8363bc:	00800044 	movi	r2,1
  8363c0:	40800115 	stw	r2,4(r8)
  8363c4:	8c400044 	addi	r17,r17,1
  8363c8:	44000015 	stw	r16,0(r8)
  8363cc:	d8c02015 	stw	r3,128(sp)
  8363d0:	dc401f15 	stw	r17,124(sp)
  8363d4:	008001c4 	movi	r2,7
  8363d8:	14417416 	blt	r2,r17,8369ac <___svfprintf_internal_r+0x1648>
  8363dc:	42000204 	addi	r8,r8,8
  8363e0:	d8803817 	ldw	r2,224(sp)
  8363e4:	d9003417 	ldw	r4,208(sp)
  8363e8:	8c400044 	addi	r17,r17,1
  8363ec:	10c7883a 	add	r3,r2,r3
  8363f0:	40800115 	stw	r2,4(r8)
  8363f4:	41000015 	stw	r4,0(r8)
  8363f8:	d8c02015 	stw	r3,128(sp)
  8363fc:	dc401f15 	stw	r17,124(sp)
  836400:	008001c4 	movi	r2,7
  836404:	14417216 	blt	r2,r17,8369d0 <___svfprintf_internal_r+0x166c>
  836408:	45800204 	addi	r22,r8,8
  83640c:	d9003617 	ldw	r4,216(sp)
  836410:	d9403717 	ldw	r5,220(sp)
  836414:	000d883a 	mov	r6,zero
  836418:	000f883a 	mov	r7,zero
  83641c:	d8c03d15 	stw	r3,244(sp)
  836420:	0848b880 	call	848b88 <__eqdf2>
  836424:	d8c03d17 	ldw	r3,244(sp)
  836428:	1000b326 	beq	r2,zero,8366f8 <___svfprintf_internal_r+0x1394>
  83642c:	d9403317 	ldw	r5,204(sp)
  836430:	84000044 	addi	r16,r16,1
  836434:	8c400044 	addi	r17,r17,1
  836438:	28bfffc4 	addi	r2,r5,-1
  83643c:	1887883a 	add	r3,r3,r2
  836440:	b0800115 	stw	r2,4(r22)
  836444:	b4000015 	stw	r16,0(r22)
  836448:	d8c02015 	stw	r3,128(sp)
  83644c:	dc401f15 	stw	r17,124(sp)
  836450:	008001c4 	movi	r2,7
  836454:	1440d216 	blt	r2,r17,8367a0 <___svfprintf_internal_r+0x143c>
  836458:	b5800204 	addi	r22,r22,8
  83645c:	d9003b17 	ldw	r4,236(sp)
  836460:	df0022c4 	addi	fp,sp,139
  836464:	8c400044 	addi	r17,r17,1
  836468:	20c7883a 	add	r3,r4,r3
  83646c:	b7000015 	stw	fp,0(r22)
  836470:	b1000115 	stw	r4,4(r22)
  836474:	d8c02015 	stw	r3,128(sp)
  836478:	dc401f15 	stw	r17,124(sp)
  83647c:	008001c4 	movi	r2,7
  836480:	14400e16 	blt	r2,r17,8364bc <___svfprintf_internal_r+0x1158>
  836484:	b2000204 	addi	r8,r22,8
  836488:	003e1a06 	br	835cf4 <__alt_mem_epcs_flash_controller_0+0xff82ccf4>
  83648c:	010021b4 	movhi	r4,134
  836490:	21260584 	addi	r4,r4,-26602
  836494:	d9002c15 	stw	r4,176(sp)
  836498:	d9002c17 	ldw	r4,176(sp)
  83649c:	1c07883a 	add	r3,r3,r16
  8364a0:	44000115 	stw	r16,4(r8)
  8364a4:	41000015 	stw	r4,0(r8)
  8364a8:	10800044 	addi	r2,r2,1
  8364ac:	d8c02015 	stw	r3,128(sp)
  8364b0:	d8801f15 	stw	r2,124(sp)
  8364b4:	010001c4 	movi	r4,7
  8364b8:	20be0d0e 	bge	r4,r2,835cf0 <__alt_mem_epcs_flash_controller_0+0xff82ccf0>
  8364bc:	d9402d17 	ldw	r5,180(sp)
  8364c0:	d9801e04 	addi	r6,sp,120
  8364c4:	9809883a 	mov	r4,r19
  8364c8:	08415fc0 	call	8415fc <__ssprint_r>
  8364cc:	103c8c1e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  8364d0:	d8c02017 	ldw	r3,128(sp)
  8364d4:	da000404 	addi	r8,sp,16
  8364d8:	003e0606 	br	835cf4 <__alt_mem_epcs_flash_controller_0+0xff82ccf4>
  8364dc:	d9402d17 	ldw	r5,180(sp)
  8364e0:	d9801e04 	addi	r6,sp,120
  8364e4:	9809883a 	mov	r4,r19
  8364e8:	08415fc0 	call	8415fc <__ssprint_r>
  8364ec:	103e3d26 	beq	r2,zero,835de4 <__alt_mem_epcs_flash_controller_0+0xff82cde4>
  8364f0:	003c8306 	br	835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  8364f4:	d9402d17 	ldw	r5,180(sp)
  8364f8:	d9801e04 	addi	r6,sp,120
  8364fc:	9809883a 	mov	r4,r19
  836500:	08415fc0 	call	8415fc <__ssprint_r>
  836504:	103c7e1e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  836508:	d8c02017 	ldw	r3,128(sp)
  83650c:	da000404 	addi	r8,sp,16
  836510:	003deb06 	br	835cc0 <__alt_mem_epcs_flash_controller_0+0xff82ccc0>
  836514:	d9402d17 	ldw	r5,180(sp)
  836518:	d9801e04 	addi	r6,sp,120
  83651c:	9809883a 	mov	r4,r19
  836520:	08415fc0 	call	8415fc <__ssprint_r>
  836524:	103c761e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  836528:	d8c02017 	ldw	r3,128(sp)
  83652c:	da000404 	addi	r8,sp,16
  836530:	003d9f06 	br	835bb0 <__alt_mem_epcs_flash_controller_0+0xff82cbb0>
  836534:	d9402d17 	ldw	r5,180(sp)
  836538:	d9801e04 	addi	r6,sp,120
  83653c:	9809883a 	mov	r4,r19
  836540:	08415fc0 	call	8415fc <__ssprint_r>
  836544:	103c6e1e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  836548:	d8c02017 	ldw	r3,128(sp)
  83654c:	da000404 	addi	r8,sp,16
  836550:	003da506 	br	835be8 <__alt_mem_epcs_flash_controller_0+0xff82cbe8>
  836554:	d9402a17 	ldw	r5,168(sp)
  836558:	d8002785 	stb	zero,158(sp)
  83655c:	283f0816 	blt	r5,zero,836180 <__alt_mem_epcs_flash_controller_0+0xff82d180>
  836560:	00ffdfc4 	movi	r3,-129
  836564:	a584b03a 	or	r2,r20,r22
  836568:	90e4703a 	and	r18,r18,r3
  83656c:	103c5126 	beq	r2,zero,8356b4 <__alt_mem_epcs_flash_controller_0+0xff82c6b4>
  836570:	0039883a 	mov	fp,zero
  836574:	003e5a06 	br	835ee0 <__alt_mem_epcs_flash_controller_0+0xff82cee0>
  836578:	9080040c 	andi	r2,r18,16
  83657c:	10013d26 	beq	r2,zero,836a74 <___svfprintf_internal_r+0x1710>
  836580:	d8c02e17 	ldw	r3,184(sp)
  836584:	d9002a17 	ldw	r4,168(sp)
  836588:	d8002785 	stb	zero,158(sp)
  83658c:	18800104 	addi	r2,r3,4
  836590:	1d000017 	ldw	r20,0(r3)
  836594:	002d883a 	mov	r22,zero
  836598:	20013f16 	blt	r4,zero,836a98 <___svfprintf_internal_r+0x1734>
  83659c:	00ffdfc4 	movi	r3,-129
  8365a0:	d8802e15 	stw	r2,184(sp)
  8365a4:	90e4703a 	and	r18,r18,r3
  8365a8:	a03d0926 	beq	r20,zero,8359d0 <__alt_mem_epcs_flash_controller_0+0xff82c9d0>
  8365ac:	0039883a 	mov	fp,zero
  8365b0:	003d0c06 	br	8359e4 <__alt_mem_epcs_flash_controller_0+0xff82c9e4>
  8365b4:	dc402617 	ldw	r17,152(sp)
  8365b8:	0441830e 	bge	zero,r17,836bc8 <___svfprintf_internal_r+0x1864>
  8365bc:	dc403217 	ldw	r17,200(sp)
  8365c0:	d8803317 	ldw	r2,204(sp)
  8365c4:	1440010e 	bge	r2,r17,8365cc <___svfprintf_internal_r+0x1268>
  8365c8:	1023883a 	mov	r17,r2
  8365cc:	04400a0e 	bge	zero,r17,8365f8 <___svfprintf_internal_r+0x1294>
  8365d0:	d8801f17 	ldw	r2,124(sp)
  8365d4:	1c47883a 	add	r3,r3,r17
  8365d8:	44000015 	stw	r16,0(r8)
  8365dc:	10800044 	addi	r2,r2,1
  8365e0:	44400115 	stw	r17,4(r8)
  8365e4:	d8c02015 	stw	r3,128(sp)
  8365e8:	d8801f15 	stw	r2,124(sp)
  8365ec:	010001c4 	movi	r4,7
  8365f0:	20827516 	blt	r4,r2,836fc8 <___svfprintf_internal_r+0x1c64>
  8365f4:	42000204 	addi	r8,r8,8
  8365f8:	88027b16 	blt	r17,zero,836fe8 <___svfprintf_internal_r+0x1c84>
  8365fc:	d9003217 	ldw	r4,200(sp)
  836600:	2463c83a 	sub	r17,r4,r17
  836604:	0440990e 	bge	zero,r17,83686c <___svfprintf_internal_r+0x1508>
  836608:	05800404 	movi	r22,16
  83660c:	d8801f17 	ldw	r2,124(sp)
  836610:	b441530e 	bge	r22,r17,836b60 <___svfprintf_internal_r+0x17fc>
  836614:	010021b4 	movhi	r4,134
  836618:	21260584 	addi	r4,r4,-26602
  83661c:	d9002c15 	stw	r4,176(sp)
  836620:	070001c4 	movi	fp,7
  836624:	dd002d17 	ldw	r20,180(sp)
  836628:	00000306 	br	836638 <___svfprintf_internal_r+0x12d4>
  83662c:	42000204 	addi	r8,r8,8
  836630:	8c7ffc04 	addi	r17,r17,-16
  836634:	b4414d0e 	bge	r22,r17,836b6c <___svfprintf_internal_r+0x1808>
  836638:	18c00404 	addi	r3,r3,16
  83663c:	10800044 	addi	r2,r2,1
  836640:	45400015 	stw	r21,0(r8)
  836644:	45800115 	stw	r22,4(r8)
  836648:	d8c02015 	stw	r3,128(sp)
  83664c:	d8801f15 	stw	r2,124(sp)
  836650:	e0bff60e 	bge	fp,r2,83662c <__alt_mem_epcs_flash_controller_0+0xff82d62c>
  836654:	d9801e04 	addi	r6,sp,120
  836658:	a00b883a 	mov	r5,r20
  83665c:	9809883a 	mov	r4,r19
  836660:	08415fc0 	call	8415fc <__ssprint_r>
  836664:	103c261e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  836668:	d8c02017 	ldw	r3,128(sp)
  83666c:	d8801f17 	ldw	r2,124(sp)
  836670:	da000404 	addi	r8,sp,16
  836674:	003fee06 	br	836630 <__alt_mem_epcs_flash_controller_0+0xff82d630>
  836678:	d9402d17 	ldw	r5,180(sp)
  83667c:	d9801e04 	addi	r6,sp,120
  836680:	9809883a 	mov	r4,r19
  836684:	08415fc0 	call	8415fc <__ssprint_r>
  836688:	103c1d1e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  83668c:	d8c02017 	ldw	r3,128(sp)
  836690:	df002787 	ldb	fp,158(sp)
  836694:	da000404 	addi	r8,sp,16
  836698:	003d3806 	br	835b7c <__alt_mem_epcs_flash_controller_0+0xff82cb7c>
  83669c:	9080040c 	andi	r2,r18,16
  8366a0:	10005c26 	beq	r2,zero,836814 <___svfprintf_internal_r+0x14b0>
  8366a4:	d8c02e17 	ldw	r3,184(sp)
  8366a8:	d9002a17 	ldw	r4,168(sp)
  8366ac:	d8002785 	stb	zero,158(sp)
  8366b0:	18800104 	addi	r2,r3,4
  8366b4:	1d000017 	ldw	r20,0(r3)
  8366b8:	002d883a 	mov	r22,zero
  8366bc:	20005e16 	blt	r4,zero,836838 <___svfprintf_internal_r+0x14d4>
  8366c0:	00ffdfc4 	movi	r3,-129
  8366c4:	d8802e15 	stw	r2,184(sp)
  8366c8:	90e4703a 	and	r18,r18,r3
  8366cc:	0039883a 	mov	fp,zero
  8366d0:	a03ddf26 	beq	r20,zero,835e50 <__alt_mem_epcs_flash_controller_0+0xff82ce50>
  8366d4:	00800244 	movi	r2,9
  8366d8:	153c8e36 	bltu	r2,r20,835914 <__alt_mem_epcs_flash_controller_0+0xff82c914>
  8366dc:	a5000c04 	addi	r20,r20,48
  8366e0:	dc001dc4 	addi	r16,sp,119
  8366e4:	dd001dc5 	stb	r20,119(sp)
  8366e8:	d8c02817 	ldw	r3,160(sp)
  8366ec:	1c07c83a 	sub	r3,r3,r16
  8366f0:	d8c02b15 	stw	r3,172(sp)
  8366f4:	003cd306 	br	835a44 <__alt_mem_epcs_flash_controller_0+0xff82ca44>
  8366f8:	d8803317 	ldw	r2,204(sp)
  8366fc:	143fffc4 	addi	r16,r2,-1
  836700:	043f560e 	bge	zero,r16,83645c <__alt_mem_epcs_flash_controller_0+0xff82d45c>
  836704:	07000404 	movi	fp,16
  836708:	e403530e 	bge	fp,r16,837458 <___svfprintf_internal_r+0x20f4>
  83670c:	014021b4 	movhi	r5,134
  836710:	29660584 	addi	r5,r5,-26602
  836714:	d9402c15 	stw	r5,176(sp)
  836718:	01c001c4 	movi	r7,7
  83671c:	dd002d17 	ldw	r20,180(sp)
  836720:	00000306 	br	836730 <___svfprintf_internal_r+0x13cc>
  836724:	843ffc04 	addi	r16,r16,-16
  836728:	b5800204 	addi	r22,r22,8
  83672c:	e400130e 	bge	fp,r16,83677c <___svfprintf_internal_r+0x1418>
  836730:	18c00404 	addi	r3,r3,16
  836734:	8c400044 	addi	r17,r17,1
  836738:	b5400015 	stw	r21,0(r22)
  83673c:	b7000115 	stw	fp,4(r22)
  836740:	d8c02015 	stw	r3,128(sp)
  836744:	dc401f15 	stw	r17,124(sp)
  836748:	3c7ff60e 	bge	r7,r17,836724 <__alt_mem_epcs_flash_controller_0+0xff82d724>
  83674c:	d9801e04 	addi	r6,sp,120
  836750:	a00b883a 	mov	r5,r20
  836754:	9809883a 	mov	r4,r19
  836758:	d9c03d15 	stw	r7,244(sp)
  83675c:	08415fc0 	call	8415fc <__ssprint_r>
  836760:	d9c03d17 	ldw	r7,244(sp)
  836764:	103be61e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  836768:	843ffc04 	addi	r16,r16,-16
  83676c:	d8c02017 	ldw	r3,128(sp)
  836770:	dc401f17 	ldw	r17,124(sp)
  836774:	dd800404 	addi	r22,sp,16
  836778:	e43fed16 	blt	fp,r16,836730 <__alt_mem_epcs_flash_controller_0+0xff82d730>
  83677c:	d8802c17 	ldw	r2,176(sp)
  836780:	1c07883a 	add	r3,r3,r16
  836784:	8c400044 	addi	r17,r17,1
  836788:	b0800015 	stw	r2,0(r22)
  83678c:	b4000115 	stw	r16,4(r22)
  836790:	d8c02015 	stw	r3,128(sp)
  836794:	dc401f15 	stw	r17,124(sp)
  836798:	008001c4 	movi	r2,7
  83679c:	147f2e0e 	bge	r2,r17,836458 <__alt_mem_epcs_flash_controller_0+0xff82d458>
  8367a0:	d9402d17 	ldw	r5,180(sp)
  8367a4:	d9801e04 	addi	r6,sp,120
  8367a8:	9809883a 	mov	r4,r19
  8367ac:	08415fc0 	call	8415fc <__ssprint_r>
  8367b0:	103bd31e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  8367b4:	d8c02017 	ldw	r3,128(sp)
  8367b8:	dc401f17 	ldw	r17,124(sp)
  8367bc:	dd800404 	addi	r22,sp,16
  8367c0:	003f2606 	br	83645c <__alt_mem_epcs_flash_controller_0+0xff82d45c>
  8367c4:	9080040c 	andi	r2,r18,16
  8367c8:	1000c326 	beq	r2,zero,836ad8 <___svfprintf_internal_r+0x1774>
  8367cc:	d9402e17 	ldw	r5,184(sp)
  8367d0:	2d000017 	ldw	r20,0(r5)
  8367d4:	29400104 	addi	r5,r5,4
  8367d8:	d9402e15 	stw	r5,184(sp)
  8367dc:	a02dd7fa 	srai	r22,r20,31
  8367e0:	b005883a 	mov	r2,r22
  8367e4:	103c430e 	bge	r2,zero,8358f4 <__alt_mem_epcs_flash_controller_0+0xff82c8f4>
  8367e8:	d9402a17 	ldw	r5,168(sp)
  8367ec:	0529c83a 	sub	r20,zero,r20
  8367f0:	07000b44 	movi	fp,45
  8367f4:	a004c03a 	cmpne	r2,r20,zero
  8367f8:	05adc83a 	sub	r22,zero,r22
  8367fc:	df002785 	stb	fp,158(sp)
  836800:	b0adc83a 	sub	r22,r22,r2
  836804:	28022e16 	blt	r5,zero,8370c0 <___svfprintf_internal_r+0x1d5c>
  836808:	00bfdfc4 	movi	r2,-129
  83680c:	90a4703a 	and	r18,r18,r2
  836810:	003c3f06 	br	835910 <__alt_mem_epcs_flash_controller_0+0xff82c910>
  836814:	9080100c 	andi	r2,r18,64
  836818:	d8002785 	stb	zero,158(sp)
  83681c:	10012526 	beq	r2,zero,836cb4 <___svfprintf_internal_r+0x1950>
  836820:	d9402e17 	ldw	r5,184(sp)
  836824:	d8c02a17 	ldw	r3,168(sp)
  836828:	002d883a 	mov	r22,zero
  83682c:	28800104 	addi	r2,r5,4
  836830:	2d00000b 	ldhu	r20,0(r5)
  836834:	183fa20e 	bge	r3,zero,8366c0 <__alt_mem_epcs_flash_controller_0+0xff82d6c0>
  836838:	d8802e15 	stw	r2,184(sp)
  83683c:	0039883a 	mov	fp,zero
  836840:	a584b03a 	or	r2,r20,r22
  836844:	103c321e 	bne	r2,zero,835910 <__alt_mem_epcs_flash_controller_0+0xff82c910>
  836848:	00800044 	movi	r2,1
  83684c:	003e5006 	br	836190 <__alt_mem_epcs_flash_controller_0+0xff82d190>
  836850:	d9402d17 	ldw	r5,180(sp)
  836854:	d9801e04 	addi	r6,sp,120
  836858:	9809883a 	mov	r4,r19
  83685c:	08415fc0 	call	8415fc <__ssprint_r>
  836860:	103ba71e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  836864:	d8c02017 	ldw	r3,128(sp)
  836868:	da000404 	addi	r8,sp,16
  83686c:	d9003217 	ldw	r4,200(sp)
  836870:	d8802617 	ldw	r2,152(sp)
  836874:	d9403317 	ldw	r5,204(sp)
  836878:	8123883a 	add	r17,r16,r4
  83687c:	11400216 	blt	r2,r5,836888 <___svfprintf_internal_r+0x1524>
  836880:	9100004c 	andi	r4,r18,1
  836884:	20000d26 	beq	r4,zero,8368bc <___svfprintf_internal_r+0x1558>
  836888:	d9003817 	ldw	r4,224(sp)
  83688c:	d9403417 	ldw	r5,208(sp)
  836890:	1907883a 	add	r3,r3,r4
  836894:	d9001f17 	ldw	r4,124(sp)
  836898:	41400015 	stw	r5,0(r8)
  83689c:	d9403817 	ldw	r5,224(sp)
  8368a0:	21000044 	addi	r4,r4,1
  8368a4:	d8c02015 	stw	r3,128(sp)
  8368a8:	41400115 	stw	r5,4(r8)
  8368ac:	d9001f15 	stw	r4,124(sp)
  8368b0:	014001c4 	movi	r5,7
  8368b4:	2901dc16 	blt	r5,r4,837028 <___svfprintf_internal_r+0x1cc4>
  8368b8:	42000204 	addi	r8,r8,8
  8368bc:	d9003317 	ldw	r4,204(sp)
  8368c0:	8121883a 	add	r16,r16,r4
  8368c4:	2085c83a 	sub	r2,r4,r2
  8368c8:	8461c83a 	sub	r16,r16,r17
  8368cc:	1400010e 	bge	r2,r16,8368d4 <___svfprintf_internal_r+0x1570>
  8368d0:	1021883a 	mov	r16,r2
  8368d4:	04000a0e 	bge	zero,r16,836900 <___svfprintf_internal_r+0x159c>
  8368d8:	d9001f17 	ldw	r4,124(sp)
  8368dc:	1c07883a 	add	r3,r3,r16
  8368e0:	44400015 	stw	r17,0(r8)
  8368e4:	21000044 	addi	r4,r4,1
  8368e8:	44000115 	stw	r16,4(r8)
  8368ec:	d8c02015 	stw	r3,128(sp)
  8368f0:	d9001f15 	stw	r4,124(sp)
  8368f4:	014001c4 	movi	r5,7
  8368f8:	2901e616 	blt	r5,r4,837094 <___svfprintf_internal_r+0x1d30>
  8368fc:	42000204 	addi	r8,r8,8
  836900:	8001f616 	blt	r16,zero,8370dc <___svfprintf_internal_r+0x1d78>
  836904:	1421c83a 	sub	r16,r2,r16
  836908:	043cfa0e 	bge	zero,r16,835cf4 <__alt_mem_epcs_flash_controller_0+0xff82ccf4>
  83690c:	04400404 	movi	r17,16
  836910:	d8801f17 	ldw	r2,124(sp)
  836914:	8c3edd0e 	bge	r17,r16,83648c <__alt_mem_epcs_flash_controller_0+0xff82d48c>
  836918:	014021b4 	movhi	r5,134
  83691c:	29660584 	addi	r5,r5,-26602
  836920:	d9402c15 	stw	r5,176(sp)
  836924:	058001c4 	movi	r22,7
  836928:	dd002d17 	ldw	r20,180(sp)
  83692c:	00000306 	br	83693c <___svfprintf_internal_r+0x15d8>
  836930:	42000204 	addi	r8,r8,8
  836934:	843ffc04 	addi	r16,r16,-16
  836938:	8c3ed70e 	bge	r17,r16,836498 <__alt_mem_epcs_flash_controller_0+0xff82d498>
  83693c:	18c00404 	addi	r3,r3,16
  836940:	10800044 	addi	r2,r2,1
  836944:	45400015 	stw	r21,0(r8)
  836948:	44400115 	stw	r17,4(r8)
  83694c:	d8c02015 	stw	r3,128(sp)
  836950:	d8801f15 	stw	r2,124(sp)
  836954:	b0bff60e 	bge	r22,r2,836930 <__alt_mem_epcs_flash_controller_0+0xff82d930>
  836958:	d9801e04 	addi	r6,sp,120
  83695c:	a00b883a 	mov	r5,r20
  836960:	9809883a 	mov	r4,r19
  836964:	08415fc0 	call	8415fc <__ssprint_r>
  836968:	103b651e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  83696c:	d8c02017 	ldw	r3,128(sp)
  836970:	d8801f17 	ldw	r2,124(sp)
  836974:	da000404 	addi	r8,sp,16
  836978:	003fee06 	br	836934 <__alt_mem_epcs_flash_controller_0+0xff82d934>
  83697c:	9088703a 	and	r4,r18,r2
  836980:	203e8d1e 	bne	r4,zero,8363b8 <__alt_mem_epcs_flash_controller_0+0xff82d3b8>
  836984:	dc401f17 	ldw	r17,124(sp)
  836988:	40800115 	stw	r2,4(r8)
  83698c:	44000015 	stw	r16,0(r8)
  836990:	8c400044 	addi	r17,r17,1
  836994:	d8c02015 	stw	r3,128(sp)
  836998:	dc401f15 	stw	r17,124(sp)
  83699c:	008001c4 	movi	r2,7
  8369a0:	147f7f16 	blt	r2,r17,8367a0 <__alt_mem_epcs_flash_controller_0+0xff82d7a0>
  8369a4:	45800204 	addi	r22,r8,8
  8369a8:	003eac06 	br	83645c <__alt_mem_epcs_flash_controller_0+0xff82d45c>
  8369ac:	d9402d17 	ldw	r5,180(sp)
  8369b0:	d9801e04 	addi	r6,sp,120
  8369b4:	9809883a 	mov	r4,r19
  8369b8:	08415fc0 	call	8415fc <__ssprint_r>
  8369bc:	103b501e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  8369c0:	d8c02017 	ldw	r3,128(sp)
  8369c4:	dc401f17 	ldw	r17,124(sp)
  8369c8:	da000404 	addi	r8,sp,16
  8369cc:	003e8406 	br	8363e0 <__alt_mem_epcs_flash_controller_0+0xff82d3e0>
  8369d0:	d9402d17 	ldw	r5,180(sp)
  8369d4:	d9801e04 	addi	r6,sp,120
  8369d8:	9809883a 	mov	r4,r19
  8369dc:	08415fc0 	call	8415fc <__ssprint_r>
  8369e0:	103b471e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  8369e4:	d8c02017 	ldw	r3,128(sp)
  8369e8:	dc401f17 	ldw	r17,124(sp)
  8369ec:	dd800404 	addi	r22,sp,16
  8369f0:	003e8606 	br	83640c <__alt_mem_epcs_flash_controller_0+0xff82d40c>
  8369f4:	0029883a 	mov	r20,zero
  8369f8:	a5000c04 	addi	r20,r20,48
  8369fc:	dc001dc4 	addi	r16,sp,119
  836a00:	dd001dc5 	stb	r20,119(sp)
  836a04:	003f3806 	br	8366e8 <__alt_mem_epcs_flash_controller_0+0xff82d6e8>
  836a08:	d9402d17 	ldw	r5,180(sp)
  836a0c:	d9801e04 	addi	r6,sp,120
  836a10:	9809883a 	mov	r4,r19
  836a14:	08415fc0 	call	8415fc <__ssprint_r>
  836a18:	103b391e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  836a1c:	d8c02017 	ldw	r3,128(sp)
  836a20:	da000404 	addi	r8,sp,16
  836a24:	003c7306 	br	835bf4 <__alt_mem_epcs_flash_controller_0+0xff82cbf4>
  836a28:	d9003617 	ldw	r4,216(sp)
  836a2c:	d9403717 	ldw	r5,220(sp)
  836a30:	da003e15 	stw	r8,248(sp)
  836a34:	083ee440 	call	83ee44 <__fpclassifyd>
  836a38:	da003e17 	ldw	r8,248(sp)
  836a3c:	1000bd1e 	bne	r2,zero,836d34 <___svfprintf_internal_r+0x19d0>
  836a40:	008011c4 	movi	r2,71
  836a44:	14411e0e 	bge	r2,r17,836ec0 <___svfprintf_internal_r+0x1b5c>
  836a48:	040021b4 	movhi	r16,134
  836a4c:	8425f804 	addi	r16,r16,-26656
  836a50:	00c000c4 	movi	r3,3
  836a54:	00bfdfc4 	movi	r2,-129
  836a58:	d8c02915 	stw	r3,164(sp)
  836a5c:	90a4703a 	and	r18,r18,r2
  836a60:	df002783 	ldbu	fp,158(sp)
  836a64:	d8c02b15 	stw	r3,172(sp)
  836a68:	d8002a15 	stw	zero,168(sp)
  836a6c:	d8003215 	stw	zero,200(sp)
  836a70:	003bfa06 	br	835a5c <__alt_mem_epcs_flash_controller_0+0xff82ca5c>
  836a74:	9080100c 	andi	r2,r18,64
  836a78:	d8002785 	stb	zero,158(sp)
  836a7c:	10009426 	beq	r2,zero,836cd0 <___svfprintf_internal_r+0x196c>
  836a80:	d9402e17 	ldw	r5,184(sp)
  836a84:	d8c02a17 	ldw	r3,168(sp)
  836a88:	002d883a 	mov	r22,zero
  836a8c:	28800104 	addi	r2,r5,4
  836a90:	2d00000b 	ldhu	r20,0(r5)
  836a94:	183ec10e 	bge	r3,zero,83659c <__alt_mem_epcs_flash_controller_0+0xff82d59c>
  836a98:	a586b03a 	or	r3,r20,r22
  836a9c:	d8802e15 	stw	r2,184(sp)
  836aa0:	183ec21e 	bne	r3,zero,8365ac <__alt_mem_epcs_flash_controller_0+0xff82d5ac>
  836aa4:	0039883a 	mov	fp,zero
  836aa8:	0005883a 	mov	r2,zero
  836aac:	003db806 	br	836190 <__alt_mem_epcs_flash_controller_0+0xff82d190>
  836ab0:	d8c02e17 	ldw	r3,184(sp)
  836ab4:	d9002e17 	ldw	r4,184(sp)
  836ab8:	d9402e17 	ldw	r5,184(sp)
  836abc:	18c00017 	ldw	r3,0(r3)
  836ac0:	21000117 	ldw	r4,4(r4)
  836ac4:	29400204 	addi	r5,r5,8
  836ac8:	d8c03615 	stw	r3,216(sp)
  836acc:	d9003715 	stw	r4,220(sp)
  836ad0:	d9402e15 	stw	r5,184(sp)
  836ad4:	003b5a06 	br	835840 <__alt_mem_epcs_flash_controller_0+0xff82c840>
  836ad8:	9080100c 	andi	r2,r18,64
  836adc:	10010726 	beq	r2,zero,836efc <___svfprintf_internal_r+0x1b98>
  836ae0:	d8802e17 	ldw	r2,184(sp)
  836ae4:	1500000f 	ldh	r20,0(r2)
  836ae8:	10800104 	addi	r2,r2,4
  836aec:	d8802e15 	stw	r2,184(sp)
  836af0:	a02dd7fa 	srai	r22,r20,31
  836af4:	b005883a 	mov	r2,r22
  836af8:	003b7d06 	br	8358f0 <__alt_mem_epcs_flash_controller_0+0xff82c8f0>
  836afc:	9080100c 	andi	r2,r18,64
  836b00:	10010526 	beq	r2,zero,836f18 <___svfprintf_internal_r+0x1bb4>
  836b04:	d8c02e17 	ldw	r3,184(sp)
  836b08:	002d883a 	mov	r22,zero
  836b0c:	1d00000b 	ldhu	r20,0(r3)
  836b10:	18c00104 	addi	r3,r3,4
  836b14:	d8c02e15 	stw	r3,184(sp)
  836b18:	003ce206 	br	835ea4 <__alt_mem_epcs_flash_controller_0+0xff82cea4>
  836b1c:	bc400007 	ldb	r17,0(r23)
  836b20:	003a6506 	br	8354b8 <__alt_mem_epcs_flash_controller_0+0xff82c4b8>
  836b24:	9080040c 	andi	r2,r18,16
  836b28:	10010126 	beq	r2,zero,836f30 <___svfprintf_internal_r+0x1bcc>
  836b2c:	d8c02e17 	ldw	r3,184(sp)
  836b30:	d9002f17 	ldw	r4,188(sp)
  836b34:	18800017 	ldw	r2,0(r3)
  836b38:	18c00104 	addi	r3,r3,4
  836b3c:	d8c02e15 	stw	r3,184(sp)
  836b40:	11000015 	stw	r4,0(r2)
  836b44:	003a3206 	br	835410 <__alt_mem_epcs_flash_controller_0+0xff82c410>
  836b48:	d9002a17 	ldw	r4,168(sp)
  836b4c:	d8002785 	stb	zero,158(sp)
  836b50:	203d8d16 	blt	r4,zero,836188 <__alt_mem_epcs_flash_controller_0+0xff82d188>
  836b54:	00bfdfc4 	movi	r2,-129
  836b58:	90a4703a 	and	r18,r18,r2
  836b5c:	003ad506 	br	8356b4 <__alt_mem_epcs_flash_controller_0+0xff82c6b4>
  836b60:	014021b4 	movhi	r5,134
  836b64:	29660584 	addi	r5,r5,-26602
  836b68:	d9402c15 	stw	r5,176(sp)
  836b6c:	d9402c17 	ldw	r5,176(sp)
  836b70:	1c47883a 	add	r3,r3,r17
  836b74:	10800044 	addi	r2,r2,1
  836b78:	41400015 	stw	r5,0(r8)
  836b7c:	44400115 	stw	r17,4(r8)
  836b80:	d8c02015 	stw	r3,128(sp)
  836b84:	d8801f15 	stw	r2,124(sp)
  836b88:	010001c4 	movi	r4,7
  836b8c:	20bf3016 	blt	r4,r2,836850 <__alt_mem_epcs_flash_controller_0+0xff82d850>
  836b90:	42000204 	addi	r8,r8,8
  836b94:	003f3506 	br	83686c <__alt_mem_epcs_flash_controller_0+0xff82d86c>
  836b98:	010021b4 	movhi	r4,134
  836b9c:	21260584 	addi	r4,r4,-26602
  836ba0:	d9002c15 	stw	r4,176(sp)
  836ba4:	003c3c06 	br	835c98 <__alt_mem_epcs_flash_controller_0+0xff82cc98>
  836ba8:	d9402d17 	ldw	r5,180(sp)
  836bac:	d9801e04 	addi	r6,sp,120
  836bb0:	9809883a 	mov	r4,r19
  836bb4:	08415fc0 	call	8415fc <__ssprint_r>
  836bb8:	103ad11e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  836bbc:	d8c02017 	ldw	r3,128(sp)
  836bc0:	da000404 	addi	r8,sp,16
  836bc4:	003d9306 	br	836214 <__alt_mem_epcs_flash_controller_0+0xff82d214>
  836bc8:	d8801f17 	ldw	r2,124(sp)
  836bcc:	014021b4 	movhi	r5,134
  836bd0:	01000044 	movi	r4,1
  836bd4:	18c00044 	addi	r3,r3,1
  836bd8:	10800044 	addi	r2,r2,1
  836bdc:	29660504 	addi	r5,r5,-26604
  836be0:	41000115 	stw	r4,4(r8)
  836be4:	41400015 	stw	r5,0(r8)
  836be8:	d8c02015 	stw	r3,128(sp)
  836bec:	d8801f15 	stw	r2,124(sp)
  836bf0:	010001c4 	movi	r4,7
  836bf4:	2080b516 	blt	r4,r2,836ecc <___svfprintf_internal_r+0x1b68>
  836bf8:	42000204 	addi	r8,r8,8
  836bfc:	8800041e 	bne	r17,zero,836c10 <___svfprintf_internal_r+0x18ac>
  836c00:	d8803317 	ldw	r2,204(sp)
  836c04:	1000021e 	bne	r2,zero,836c10 <___svfprintf_internal_r+0x18ac>
  836c08:	9080004c 	andi	r2,r18,1
  836c0c:	103c3926 	beq	r2,zero,835cf4 <__alt_mem_epcs_flash_controller_0+0xff82ccf4>
  836c10:	d9003817 	ldw	r4,224(sp)
  836c14:	d8801f17 	ldw	r2,124(sp)
  836c18:	d9403417 	ldw	r5,208(sp)
  836c1c:	20c7883a 	add	r3,r4,r3
  836c20:	10800044 	addi	r2,r2,1
  836c24:	41000115 	stw	r4,4(r8)
  836c28:	41400015 	stw	r5,0(r8)
  836c2c:	d8c02015 	stw	r3,128(sp)
  836c30:	d8801f15 	stw	r2,124(sp)
  836c34:	010001c4 	movi	r4,7
  836c38:	20818016 	blt	r4,r2,83723c <___svfprintf_internal_r+0x1ed8>
  836c3c:	42000204 	addi	r8,r8,8
  836c40:	0463c83a 	sub	r17,zero,r17
  836c44:	0440cb0e 	bge	zero,r17,836f74 <___svfprintf_internal_r+0x1c10>
  836c48:	05800404 	movi	r22,16
  836c4c:	b440e80e 	bge	r22,r17,836ff0 <___svfprintf_internal_r+0x1c8c>
  836c50:	014021b4 	movhi	r5,134
  836c54:	29660584 	addi	r5,r5,-26602
  836c58:	d9402c15 	stw	r5,176(sp)
  836c5c:	070001c4 	movi	fp,7
  836c60:	dd002d17 	ldw	r20,180(sp)
  836c64:	00000306 	br	836c74 <___svfprintf_internal_r+0x1910>
  836c68:	42000204 	addi	r8,r8,8
  836c6c:	8c7ffc04 	addi	r17,r17,-16
  836c70:	b440e20e 	bge	r22,r17,836ffc <___svfprintf_internal_r+0x1c98>
  836c74:	18c00404 	addi	r3,r3,16
  836c78:	10800044 	addi	r2,r2,1
  836c7c:	45400015 	stw	r21,0(r8)
  836c80:	45800115 	stw	r22,4(r8)
  836c84:	d8c02015 	stw	r3,128(sp)
  836c88:	d8801f15 	stw	r2,124(sp)
  836c8c:	e0bff60e 	bge	fp,r2,836c68 <__alt_mem_epcs_flash_controller_0+0xff82dc68>
  836c90:	d9801e04 	addi	r6,sp,120
  836c94:	a00b883a 	mov	r5,r20
  836c98:	9809883a 	mov	r4,r19
  836c9c:	08415fc0 	call	8415fc <__ssprint_r>
  836ca0:	103a971e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  836ca4:	d8c02017 	ldw	r3,128(sp)
  836ca8:	d8801f17 	ldw	r2,124(sp)
  836cac:	da000404 	addi	r8,sp,16
  836cb0:	003fee06 	br	836c6c <__alt_mem_epcs_flash_controller_0+0xff82dc6c>
  836cb4:	d9002e17 	ldw	r4,184(sp)
  836cb8:	d9402a17 	ldw	r5,168(sp)
  836cbc:	002d883a 	mov	r22,zero
  836cc0:	20800104 	addi	r2,r4,4
  836cc4:	25000017 	ldw	r20,0(r4)
  836cc8:	283e7d0e 	bge	r5,zero,8366c0 <__alt_mem_epcs_flash_controller_0+0xff82d6c0>
  836ccc:	003eda06 	br	836838 <__alt_mem_epcs_flash_controller_0+0xff82d838>
  836cd0:	d9002e17 	ldw	r4,184(sp)
  836cd4:	d9402a17 	ldw	r5,168(sp)
  836cd8:	002d883a 	mov	r22,zero
  836cdc:	20800104 	addi	r2,r4,4
  836ce0:	25000017 	ldw	r20,0(r4)
  836ce4:	283e2d0e 	bge	r5,zero,83659c <__alt_mem_epcs_flash_controller_0+0xff82d59c>
  836ce8:	003f6b06 	br	836a98 <__alt_mem_epcs_flash_controller_0+0xff82da98>
  836cec:	d8c02e15 	stw	r3,184(sp)
  836cf0:	0039883a 	mov	fp,zero
  836cf4:	003ed206 	br	836840 <__alt_mem_epcs_flash_controller_0+0xff82d840>
  836cf8:	bc400043 	ldbu	r17,1(r23)
  836cfc:	84000814 	ori	r16,r16,32
  836d00:	bdc00044 	addi	r23,r23,1
  836d04:	8c403fcc 	andi	r17,r17,255
  836d08:	8c40201c 	xori	r17,r17,128
  836d0c:	8c7fe004 	addi	r17,r17,-128
  836d10:	0039e906 	br	8354b8 <__alt_mem_epcs_flash_controller_0+0xff82c4b8>
  836d14:	d9402d17 	ldw	r5,180(sp)
  836d18:	d9801e04 	addi	r6,sp,120
  836d1c:	9809883a 	mov	r4,r19
  836d20:	08415fc0 	call	8415fc <__ssprint_r>
  836d24:	103a761e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  836d28:	d8c02017 	ldw	r3,128(sp)
  836d2c:	da000404 	addi	r8,sp,16
  836d30:	003d4a06 	br	83625c <__alt_mem_epcs_flash_controller_0+0xff82d25c>
  836d34:	d9002a17 	ldw	r4,168(sp)
  836d38:	05bff7c4 	movi	r22,-33
  836d3c:	00bfffc4 	movi	r2,-1
  836d40:	8dac703a 	and	r22,r17,r22
  836d44:	20806a26 	beq	r4,r2,836ef0 <___svfprintf_internal_r+0x1b8c>
  836d48:	008011c4 	movi	r2,71
  836d4c:	b0813726 	beq	r22,r2,83722c <___svfprintf_internal_r+0x1ec8>
  836d50:	d9003717 	ldw	r4,220(sp)
  836d54:	90c04014 	ori	r3,r18,256
  836d58:	d8c02c15 	stw	r3,176(sp)
  836d5c:	20015d16 	blt	r4,zero,8372d4 <___svfprintf_internal_r+0x1f70>
  836d60:	dd003717 	ldw	r20,220(sp)
  836d64:	d8002905 	stb	zero,164(sp)
  836d68:	00801984 	movi	r2,102
  836d6c:	88814026 	beq	r17,r2,837270 <___svfprintf_internal_r+0x1f0c>
  836d70:	00801184 	movi	r2,70
  836d74:	88817126 	beq	r17,r2,83733c <___svfprintf_internal_r+0x1fd8>
  836d78:	00801144 	movi	r2,69
  836d7c:	b0816226 	beq	r22,r2,837308 <___svfprintf_internal_r+0x1fa4>
  836d80:	d8c02a17 	ldw	r3,168(sp)
  836d84:	d8802104 	addi	r2,sp,132
  836d88:	d8800315 	stw	r2,12(sp)
  836d8c:	d9403617 	ldw	r5,216(sp)
  836d90:	d8802504 	addi	r2,sp,148
  836d94:	d8800215 	stw	r2,8(sp)
  836d98:	d8802604 	addi	r2,sp,152
  836d9c:	d8c00015 	stw	r3,0(sp)
  836da0:	d8800115 	stw	r2,4(sp)
  836da4:	01c00084 	movi	r7,2
  836da8:	a00d883a 	mov	r6,r20
  836dac:	9809883a 	mov	r4,r19
  836db0:	d8c03d15 	stw	r3,244(sp)
  836db4:	da003e15 	stw	r8,248(sp)
  836db8:	083ba880 	call	83ba88 <_dtoa_r>
  836dbc:	1021883a 	mov	r16,r2
  836dc0:	008019c4 	movi	r2,103
  836dc4:	d8c03d17 	ldw	r3,244(sp)
  836dc8:	da003e17 	ldw	r8,248(sp)
  836dcc:	8880e726 	beq	r17,r2,83716c <___svfprintf_internal_r+0x1e08>
  836dd0:	008011c4 	movi	r2,71
  836dd4:	8880d426 	beq	r17,r2,837128 <___svfprintf_internal_r+0x1dc4>
  836dd8:	80f9883a 	add	fp,r16,r3
  836ddc:	d9003617 	ldw	r4,216(sp)
  836de0:	000d883a 	mov	r6,zero
  836de4:	000f883a 	mov	r7,zero
  836de8:	a00b883a 	mov	r5,r20
  836dec:	da003e15 	stw	r8,248(sp)
  836df0:	0848b880 	call	848b88 <__eqdf2>
  836df4:	da003e17 	ldw	r8,248(sp)
  836df8:	1000e426 	beq	r2,zero,83718c <___svfprintf_internal_r+0x1e28>
  836dfc:	d8802117 	ldw	r2,132(sp)
  836e00:	1700062e 	bgeu	r2,fp,836e1c <___svfprintf_internal_r+0x1ab8>
  836e04:	01000c04 	movi	r4,48
  836e08:	10c00044 	addi	r3,r2,1
  836e0c:	d8c02115 	stw	r3,132(sp)
  836e10:	11000005 	stb	r4,0(r2)
  836e14:	d8802117 	ldw	r2,132(sp)
  836e18:	173ffb36 	bltu	r2,fp,836e08 <__alt_mem_epcs_flash_controller_0+0xff82de08>
  836e1c:	1405c83a 	sub	r2,r2,r16
  836e20:	d8803315 	stw	r2,204(sp)
  836e24:	008011c4 	movi	r2,71
  836e28:	b080c526 	beq	r22,r2,837140 <___svfprintf_internal_r+0x1ddc>
  836e2c:	00801944 	movi	r2,101
  836e30:	1441d80e 	bge	r2,r17,837594 <___svfprintf_internal_r+0x2230>
  836e34:	d8c02617 	ldw	r3,152(sp)
  836e38:	00801984 	movi	r2,102
  836e3c:	d8c03215 	stw	r3,200(sp)
  836e40:	88813426 	beq	r17,r2,837314 <___svfprintf_internal_r+0x1fb0>
  836e44:	d8c03217 	ldw	r3,200(sp)
  836e48:	d9003317 	ldw	r4,204(sp)
  836e4c:	19012516 	blt	r3,r4,8372e4 <___svfprintf_internal_r+0x1f80>
  836e50:	9480004c 	andi	r18,r18,1
  836e54:	9001841e 	bne	r18,zero,837468 <___svfprintf_internal_r+0x2104>
  836e58:	1805883a 	mov	r2,r3
  836e5c:	1801cb16 	blt	r3,zero,83758c <___svfprintf_internal_r+0x2228>
  836e60:	d8c03217 	ldw	r3,200(sp)
  836e64:	044019c4 	movi	r17,103
  836e68:	d8c02b15 	stw	r3,172(sp)
  836e6c:	df002907 	ldb	fp,164(sp)
  836e70:	e000a61e 	bne	fp,zero,83710c <___svfprintf_internal_r+0x1da8>
  836e74:	df002783 	ldbu	fp,158(sp)
  836e78:	d8802915 	stw	r2,164(sp)
  836e7c:	dc802c17 	ldw	r18,176(sp)
  836e80:	d8002a15 	stw	zero,168(sp)
  836e84:	003af506 	br	835a5c <__alt_mem_epcs_flash_controller_0+0xff82ca5c>
  836e88:	040021b4 	movhi	r16,134
  836e8c:	8425f504 	addi	r16,r16,-26668
  836e90:	003a7e06 	br	83588c <__alt_mem_epcs_flash_controller_0+0xff82c88c>
  836e94:	d9003917 	ldw	r4,228(sp)
  836e98:	04001004 	movi	r16,64
  836e9c:	800b883a 	mov	r5,r16
  836ea0:	083335c0 	call	83335c <_malloc_r>
  836ea4:	d9002d17 	ldw	r4,180(sp)
  836ea8:	20800015 	stw	r2,0(r4)
  836eac:	20800415 	stw	r2,16(r4)
  836eb0:	1001d026 	beq	r2,zero,8375f4 <___svfprintf_internal_r+0x2290>
  836eb4:	d8802d17 	ldw	r2,180(sp)
  836eb8:	14000515 	stw	r16,20(r2)
  836ebc:	00394406 	br	8353d0 <__alt_mem_epcs_flash_controller_0+0xff82c3d0>
  836ec0:	040021b4 	movhi	r16,134
  836ec4:	8425f704 	addi	r16,r16,-26660
  836ec8:	003ee106 	br	836a50 <__alt_mem_epcs_flash_controller_0+0xff82da50>
  836ecc:	d9402d17 	ldw	r5,180(sp)
  836ed0:	d9801e04 	addi	r6,sp,120
  836ed4:	9809883a 	mov	r4,r19
  836ed8:	08415fc0 	call	8415fc <__ssprint_r>
  836edc:	103a081e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  836ee0:	dc402617 	ldw	r17,152(sp)
  836ee4:	d8c02017 	ldw	r3,128(sp)
  836ee8:	da000404 	addi	r8,sp,16
  836eec:	003f4306 	br	836bfc <__alt_mem_epcs_flash_controller_0+0xff82dbfc>
  836ef0:	01400184 	movi	r5,6
  836ef4:	d9402a15 	stw	r5,168(sp)
  836ef8:	003f9506 	br	836d50 <__alt_mem_epcs_flash_controller_0+0xff82dd50>
  836efc:	d8c02e17 	ldw	r3,184(sp)
  836f00:	1d000017 	ldw	r20,0(r3)
  836f04:	18c00104 	addi	r3,r3,4
  836f08:	d8c02e15 	stw	r3,184(sp)
  836f0c:	a02dd7fa 	srai	r22,r20,31
  836f10:	b005883a 	mov	r2,r22
  836f14:	003a7606 	br	8358f0 <__alt_mem_epcs_flash_controller_0+0xff82c8f0>
  836f18:	d9002e17 	ldw	r4,184(sp)
  836f1c:	002d883a 	mov	r22,zero
  836f20:	25000017 	ldw	r20,0(r4)
  836f24:	21000104 	addi	r4,r4,4
  836f28:	d9002e15 	stw	r4,184(sp)
  836f2c:	003bdd06 	br	835ea4 <__alt_mem_epcs_flash_controller_0+0xff82cea4>
  836f30:	9480100c 	andi	r18,r18,64
  836f34:	90006e26 	beq	r18,zero,8370f0 <___svfprintf_internal_r+0x1d8c>
  836f38:	d9402e17 	ldw	r5,184(sp)
  836f3c:	d8c02f17 	ldw	r3,188(sp)
  836f40:	28800017 	ldw	r2,0(r5)
  836f44:	29400104 	addi	r5,r5,4
  836f48:	d9402e15 	stw	r5,184(sp)
  836f4c:	10c0000d 	sth	r3,0(r2)
  836f50:	00392f06 	br	835410 <__alt_mem_epcs_flash_controller_0+0xff82c410>
  836f54:	d9402d17 	ldw	r5,180(sp)
  836f58:	d9801e04 	addi	r6,sp,120
  836f5c:	9809883a 	mov	r4,r19
  836f60:	08415fc0 	call	8415fc <__ssprint_r>
  836f64:	1039e61e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  836f68:	d8c02017 	ldw	r3,128(sp)
  836f6c:	d8801f17 	ldw	r2,124(sp)
  836f70:	da000404 	addi	r8,sp,16
  836f74:	d9403317 	ldw	r5,204(sp)
  836f78:	10800044 	addi	r2,r2,1
  836f7c:	44000015 	stw	r16,0(r8)
  836f80:	28c7883a 	add	r3,r5,r3
  836f84:	003b5506 	br	835cdc <__alt_mem_epcs_flash_controller_0+0xff82ccdc>
  836f88:	8009883a 	mov	r4,r16
  836f8c:	df003e15 	stw	fp,248(sp)
  836f90:	08351100 	call	835110 <strlen>
  836f94:	d8802b15 	stw	r2,172(sp)
  836f98:	da003e17 	ldw	r8,248(sp)
  836f9c:	103c160e 	bge	r2,zero,835ff8 <__alt_mem_epcs_flash_controller_0+0xff82cff8>
  836fa0:	0005883a 	mov	r2,zero
  836fa4:	003c1406 	br	835ff8 <__alt_mem_epcs_flash_controller_0+0xff82cff8>
  836fa8:	00bfffc4 	movi	r2,-1
  836fac:	0039d906 	br	835714 <__alt_mem_epcs_flash_controller_0+0xff82c714>
  836fb0:	010021b4 	movhi	r4,134
  836fb4:	21260984 	addi	r4,r4,-26586
  836fb8:	d9003515 	stw	r4,212(sp)
  836fbc:	003ae406 	br	835b50 <__alt_mem_epcs_flash_controller_0+0xff82cb50>
  836fc0:	013fffc4 	movi	r4,-1
  836fc4:	0039fa06 	br	8357b0 <__alt_mem_epcs_flash_controller_0+0xff82c7b0>
  836fc8:	d9402d17 	ldw	r5,180(sp)
  836fcc:	d9801e04 	addi	r6,sp,120
  836fd0:	9809883a 	mov	r4,r19
  836fd4:	08415fc0 	call	8415fc <__ssprint_r>
  836fd8:	1039c91e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  836fdc:	d8c02017 	ldw	r3,128(sp)
  836fe0:	da000404 	addi	r8,sp,16
  836fe4:	003d8406 	br	8365f8 <__alt_mem_epcs_flash_controller_0+0xff82d5f8>
  836fe8:	0023883a 	mov	r17,zero
  836fec:	003d8306 	br	8365fc <__alt_mem_epcs_flash_controller_0+0xff82d5fc>
  836ff0:	010021b4 	movhi	r4,134
  836ff4:	21260584 	addi	r4,r4,-26602
  836ff8:	d9002c15 	stw	r4,176(sp)
  836ffc:	d9002c17 	ldw	r4,176(sp)
  837000:	1c47883a 	add	r3,r3,r17
  837004:	10800044 	addi	r2,r2,1
  837008:	41000015 	stw	r4,0(r8)
  83700c:	44400115 	stw	r17,4(r8)
  837010:	d8c02015 	stw	r3,128(sp)
  837014:	d8801f15 	stw	r2,124(sp)
  837018:	010001c4 	movi	r4,7
  83701c:	20bfcd16 	blt	r4,r2,836f54 <__alt_mem_epcs_flash_controller_0+0xff82df54>
  837020:	42000204 	addi	r8,r8,8
  837024:	003fd306 	br	836f74 <__alt_mem_epcs_flash_controller_0+0xff82df74>
  837028:	d9402d17 	ldw	r5,180(sp)
  83702c:	d9801e04 	addi	r6,sp,120
  837030:	9809883a 	mov	r4,r19
  837034:	08415fc0 	call	8415fc <__ssprint_r>
  837038:	1039b11e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  83703c:	d8802617 	ldw	r2,152(sp)
  837040:	d8c02017 	ldw	r3,128(sp)
  837044:	da000404 	addi	r8,sp,16
  837048:	003e1c06 	br	8368bc <__alt_mem_epcs_flash_controller_0+0xff82d8bc>
  83704c:	d8802a17 	ldw	r2,168(sp)
  837050:	00c00184 	movi	r3,6
  837054:	1880012e 	bgeu	r3,r2,83705c <___svfprintf_internal_r+0x1cf8>
  837058:	1805883a 	mov	r2,r3
  83705c:	d8802b15 	stw	r2,172(sp)
  837060:	1000f316 	blt	r2,zero,837430 <___svfprintf_internal_r+0x20cc>
  837064:	040021b4 	movhi	r16,134
  837068:	d8802915 	stw	r2,164(sp)
  83706c:	dd002e15 	stw	r20,184(sp)
  837070:	d8002a15 	stw	zero,168(sp)
  837074:	d8003215 	stw	zero,200(sp)
  837078:	84260304 	addi	r16,r16,-26612
  83707c:	0039883a 	mov	fp,zero
  837080:	003a7d06 	br	835a78 <__alt_mem_epcs_flash_controller_0+0xff82ca78>
  837084:	010021b4 	movhi	r4,134
  837088:	21260984 	addi	r4,r4,-26586
  83708c:	d9003515 	stw	r4,212(sp)
  837090:	003b3d06 	br	835d88 <__alt_mem_epcs_flash_controller_0+0xff82cd88>
  837094:	d9402d17 	ldw	r5,180(sp)
  837098:	d9801e04 	addi	r6,sp,120
  83709c:	9809883a 	mov	r4,r19
  8370a0:	08415fc0 	call	8415fc <__ssprint_r>
  8370a4:	1039961e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  8370a8:	d8802617 	ldw	r2,152(sp)
  8370ac:	d9403317 	ldw	r5,204(sp)
  8370b0:	d8c02017 	ldw	r3,128(sp)
  8370b4:	da000404 	addi	r8,sp,16
  8370b8:	2885c83a 	sub	r2,r5,r2
  8370bc:	003e1006 	br	836900 <__alt_mem_epcs_flash_controller_0+0xff82d900>
  8370c0:	00800044 	movi	r2,1
  8370c4:	10803fcc 	andi	r2,r2,255
  8370c8:	00c00044 	movi	r3,1
  8370cc:	10fa1026 	beq	r2,r3,835910 <__alt_mem_epcs_flash_controller_0+0xff82c910>
  8370d0:	00c00084 	movi	r3,2
  8370d4:	10fb8226 	beq	r2,r3,835ee0 <__alt_mem_epcs_flash_controller_0+0xff82cee0>
  8370d8:	003a4206 	br	8359e4 <__alt_mem_epcs_flash_controller_0+0xff82c9e4>
  8370dc:	0021883a 	mov	r16,zero
  8370e0:	003e0806 	br	836904 <__alt_mem_epcs_flash_controller_0+0xff82d904>
  8370e4:	07000b44 	movi	fp,45
  8370e8:	df002785 	stb	fp,158(sp)
  8370ec:	0039e306 	br	83587c <__alt_mem_epcs_flash_controller_0+0xff82c87c>
  8370f0:	d9002e17 	ldw	r4,184(sp)
  8370f4:	d9402f17 	ldw	r5,188(sp)
  8370f8:	20800017 	ldw	r2,0(r4)
  8370fc:	21000104 	addi	r4,r4,4
  837100:	d9002e15 	stw	r4,184(sp)
  837104:	11400015 	stw	r5,0(r2)
  837108:	0038c106 	br	835410 <__alt_mem_epcs_flash_controller_0+0xff82c410>
  83710c:	00c00b44 	movi	r3,45
  837110:	d8c02785 	stb	r3,158(sp)
  837114:	d8802915 	stw	r2,164(sp)
  837118:	dc802c17 	ldw	r18,176(sp)
  83711c:	d8002a15 	stw	zero,168(sp)
  837120:	07000b44 	movi	fp,45
  837124:	003a5106 	br	835a6c <__alt_mem_epcs_flash_controller_0+0xff82ca6c>
  837128:	9080004c 	andi	r2,r18,1
  83712c:	1000941e 	bne	r2,zero,837380 <___svfprintf_internal_r+0x201c>
  837130:	d8802117 	ldw	r2,132(sp)
  837134:	1405c83a 	sub	r2,r2,r16
  837138:	d8803315 	stw	r2,204(sp)
  83713c:	b441151e 	bne	r22,r17,837594 <___svfprintf_internal_r+0x2230>
  837140:	dd802617 	ldw	r22,152(sp)
  837144:	00bfff44 	movi	r2,-3
  837148:	b0801a16 	blt	r22,r2,8371b4 <___svfprintf_internal_r+0x1e50>
  83714c:	d9402a17 	ldw	r5,168(sp)
  837150:	2d801816 	blt	r5,r22,8371b4 <___svfprintf_internal_r+0x1e50>
  837154:	dd803215 	stw	r22,200(sp)
  837158:	003f3a06 	br	836e44 <__alt_mem_epcs_flash_controller_0+0xff82de44>
  83715c:	1025883a 	mov	r18,r2
  837160:	0039883a 	mov	fp,zero
  837164:	00800084 	movi	r2,2
  837168:	003fd606 	br	8370c4 <__alt_mem_epcs_flash_controller_0+0xff82e0c4>
  83716c:	9080004c 	andi	r2,r18,1
  837170:	103f191e 	bne	r2,zero,836dd8 <__alt_mem_epcs_flash_controller_0+0xff82ddd8>
  837174:	d8802117 	ldw	r2,132(sp)
  837178:	003f2806 	br	836e1c <__alt_mem_epcs_flash_controller_0+0xff82de1c>
  83717c:	010021b4 	movhi	r4,134
  837180:	21260584 	addi	r4,r4,-26602
  837184:	d9002c15 	stw	r4,176(sp)
  837188:	003c7c06 	br	83637c <__alt_mem_epcs_flash_controller_0+0xff82d37c>
  83718c:	e005883a 	mov	r2,fp
  837190:	003f2206 	br	836e1c <__alt_mem_epcs_flash_controller_0+0xff82de1c>
  837194:	d9002a17 	ldw	r4,168(sp)
  837198:	df002783 	ldbu	fp,158(sp)
  83719c:	dd002e15 	stw	r20,184(sp)
  8371a0:	d9002915 	stw	r4,164(sp)
  8371a4:	d9002b15 	stw	r4,172(sp)
  8371a8:	d8002a15 	stw	zero,168(sp)
  8371ac:	d8003215 	stw	zero,200(sp)
  8371b0:	003a2a06 	br	835a5c <__alt_mem_epcs_flash_controller_0+0xff82ca5c>
  8371b4:	8c7fff84 	addi	r17,r17,-2
  8371b8:	b5bfffc4 	addi	r22,r22,-1
  8371bc:	dd802615 	stw	r22,152(sp)
  8371c0:	dc4022c5 	stb	r17,139(sp)
  8371c4:	b000c316 	blt	r22,zero,8374d4 <___svfprintf_internal_r+0x2170>
  8371c8:	00800ac4 	movi	r2,43
  8371cc:	d8802305 	stb	r2,140(sp)
  8371d0:	00800244 	movi	r2,9
  8371d4:	15806e16 	blt	r2,r22,837390 <___svfprintf_internal_r+0x202c>
  8371d8:	00800c04 	movi	r2,48
  8371dc:	b5800c04 	addi	r22,r22,48
  8371e0:	d8802345 	stb	r2,141(sp)
  8371e4:	dd802385 	stb	r22,142(sp)
  8371e8:	d88023c4 	addi	r2,sp,143
  8371ec:	df0022c4 	addi	fp,sp,139
  8371f0:	d8c03317 	ldw	r3,204(sp)
  8371f4:	1739c83a 	sub	fp,r2,fp
  8371f8:	d9003317 	ldw	r4,204(sp)
  8371fc:	e0c7883a 	add	r3,fp,r3
  837200:	df003b15 	stw	fp,236(sp)
  837204:	d8c02b15 	stw	r3,172(sp)
  837208:	00800044 	movi	r2,1
  83720c:	1100b70e 	bge	r2,r4,8374ec <___svfprintf_internal_r+0x2188>
  837210:	d8c02b17 	ldw	r3,172(sp)
  837214:	18c00044 	addi	r3,r3,1
  837218:	d8c02b15 	stw	r3,172(sp)
  83721c:	1805883a 	mov	r2,r3
  837220:	1800b016 	blt	r3,zero,8374e4 <___svfprintf_internal_r+0x2180>
  837224:	d8003215 	stw	zero,200(sp)
  837228:	003f1006 	br	836e6c <__alt_mem_epcs_flash_controller_0+0xff82de6c>
  83722c:	d8802a17 	ldw	r2,168(sp)
  837230:	103ec71e 	bne	r2,zero,836d50 <__alt_mem_epcs_flash_controller_0+0xff82dd50>
  837234:	dc002a15 	stw	r16,168(sp)
  837238:	003ec506 	br	836d50 <__alt_mem_epcs_flash_controller_0+0xff82dd50>
  83723c:	d9402d17 	ldw	r5,180(sp)
  837240:	d9801e04 	addi	r6,sp,120
  837244:	9809883a 	mov	r4,r19
  837248:	08415fc0 	call	8415fc <__ssprint_r>
  83724c:	10392c1e 	bne	r2,zero,835700 <__alt_mem_epcs_flash_controller_0+0xff82c700>
  837250:	dc402617 	ldw	r17,152(sp)
  837254:	d8c02017 	ldw	r3,128(sp)
  837258:	d8801f17 	ldw	r2,124(sp)
  83725c:	da000404 	addi	r8,sp,16
  837260:	003e7706 	br	836c40 <__alt_mem_epcs_flash_controller_0+0xff82dc40>
  837264:	182f883a 	mov	r23,r3
  837268:	d8002a15 	stw	zero,168(sp)
  83726c:	00389306 	br	8354bc <__alt_mem_epcs_flash_controller_0+0xff82c4bc>
  837270:	d8c02a17 	ldw	r3,168(sp)
  837274:	d8802104 	addi	r2,sp,132
  837278:	d8800315 	stw	r2,12(sp)
  83727c:	d9403617 	ldw	r5,216(sp)
  837280:	d8802504 	addi	r2,sp,148
  837284:	d8800215 	stw	r2,8(sp)
  837288:	d8802604 	addi	r2,sp,152
  83728c:	d8c00015 	stw	r3,0(sp)
  837290:	9809883a 	mov	r4,r19
  837294:	d8800115 	stw	r2,4(sp)
  837298:	01c000c4 	movi	r7,3
  83729c:	a00d883a 	mov	r6,r20
  8372a0:	da003e15 	stw	r8,248(sp)
  8372a4:	083ba880 	call	83ba88 <_dtoa_r>
  8372a8:	d9002a17 	ldw	r4,168(sp)
  8372ac:	da003e17 	ldw	r8,248(sp)
  8372b0:	1021883a 	mov	r16,r2
  8372b4:	1139883a 	add	fp,r2,r4
  8372b8:	2007883a 	mov	r3,r4
  8372bc:	81000007 	ldb	r4,0(r16)
  8372c0:	00800c04 	movi	r2,48
  8372c4:	20806f26 	beq	r4,r2,837484 <___svfprintf_internal_r+0x2120>
  8372c8:	d8c02617 	ldw	r3,152(sp)
  8372cc:	e0f9883a 	add	fp,fp,r3
  8372d0:	003ec206 	br	836ddc <__alt_mem_epcs_flash_controller_0+0xff82dddc>
  8372d4:	00c00b44 	movi	r3,45
  8372d8:	2520003c 	xorhi	r20,r4,32768
  8372dc:	d8c02905 	stb	r3,164(sp)
  8372e0:	003ea106 	br	836d68 <__alt_mem_epcs_flash_controller_0+0xff82dd68>
  8372e4:	d8c03217 	ldw	r3,200(sp)
  8372e8:	00c0890e 	bge	zero,r3,837510 <___svfprintf_internal_r+0x21ac>
  8372ec:	00800044 	movi	r2,1
  8372f0:	d9003317 	ldw	r4,204(sp)
  8372f4:	1105883a 	add	r2,r2,r4
  8372f8:	d8802b15 	stw	r2,172(sp)
  8372fc:	10005f16 	blt	r2,zero,83747c <___svfprintf_internal_r+0x2118>
  837300:	044019c4 	movi	r17,103
  837304:	003ed906 	br	836e6c <__alt_mem_epcs_flash_controller_0+0xff82de6c>
  837308:	d9002a17 	ldw	r4,168(sp)
  83730c:	20c00044 	addi	r3,r4,1
  837310:	003e9c06 	br	836d84 <__alt_mem_epcs_flash_controller_0+0xff82dd84>
  837314:	d9002a17 	ldw	r4,168(sp)
  837318:	00c0680e 	bge	zero,r3,8374bc <___svfprintf_internal_r+0x2158>
  83731c:	2000461e 	bne	r4,zero,837438 <___svfprintf_internal_r+0x20d4>
  837320:	9480004c 	andi	r18,r18,1
  837324:	9000441e 	bne	r18,zero,837438 <___svfprintf_internal_r+0x20d4>
  837328:	1805883a 	mov	r2,r3
  83732c:	1800a116 	blt	r3,zero,8375b4 <___svfprintf_internal_r+0x2250>
  837330:	d8c03217 	ldw	r3,200(sp)
  837334:	d8c02b15 	stw	r3,172(sp)
  837338:	003ecc06 	br	836e6c <__alt_mem_epcs_flash_controller_0+0xff82de6c>
  83733c:	d9402a17 	ldw	r5,168(sp)
  837340:	d8802104 	addi	r2,sp,132
  837344:	d8800315 	stw	r2,12(sp)
  837348:	d9400015 	stw	r5,0(sp)
  83734c:	d8802504 	addi	r2,sp,148
  837350:	d9403617 	ldw	r5,216(sp)
  837354:	d8800215 	stw	r2,8(sp)
  837358:	d8802604 	addi	r2,sp,152
  83735c:	d8800115 	stw	r2,4(sp)
  837360:	01c000c4 	movi	r7,3
  837364:	a00d883a 	mov	r6,r20
  837368:	9809883a 	mov	r4,r19
  83736c:	da003e15 	stw	r8,248(sp)
  837370:	083ba880 	call	83ba88 <_dtoa_r>
  837374:	d8c02a17 	ldw	r3,168(sp)
  837378:	da003e17 	ldw	r8,248(sp)
  83737c:	1021883a 	mov	r16,r2
  837380:	00801184 	movi	r2,70
  837384:	80f9883a 	add	fp,r16,r3
  837388:	88bfcc26 	beq	r17,r2,8372bc <__alt_mem_epcs_flash_controller_0+0xff82e2bc>
  83738c:	003e9306 	br	836ddc <__alt_mem_epcs_flash_controller_0+0xff82dddc>
  837390:	df0022c4 	addi	fp,sp,139
  837394:	dc002a15 	stw	r16,168(sp)
  837398:	9829883a 	mov	r20,r19
  83739c:	e021883a 	mov	r16,fp
  8373a0:	4027883a 	mov	r19,r8
  8373a4:	b009883a 	mov	r4,r22
  8373a8:	01400284 	movi	r5,10
  8373ac:	08300b80 	call	8300b8 <__modsi3>
  8373b0:	10800c04 	addi	r2,r2,48
  8373b4:	843fffc4 	addi	r16,r16,-1
  8373b8:	b009883a 	mov	r4,r22
  8373bc:	01400284 	movi	r5,10
  8373c0:	80800005 	stb	r2,0(r16)
  8373c4:	08300340 	call	830034 <__divsi3>
  8373c8:	102d883a 	mov	r22,r2
  8373cc:	00800244 	movi	r2,9
  8373d0:	15bff416 	blt	r2,r22,8373a4 <__alt_mem_epcs_flash_controller_0+0xff82e3a4>
  8373d4:	9811883a 	mov	r8,r19
  8373d8:	b0800c04 	addi	r2,r22,48
  8373dc:	a027883a 	mov	r19,r20
  8373e0:	8029883a 	mov	r20,r16
  8373e4:	a17fffc4 	addi	r5,r20,-1
  8373e8:	a0bfffc5 	stb	r2,-1(r20)
  8373ec:	dc002a17 	ldw	r16,168(sp)
  8373f0:	2f00782e 	bgeu	r5,fp,8375d4 <___svfprintf_internal_r+0x2270>
  8373f4:	d9c02384 	addi	r7,sp,142
  8373f8:	3d0fc83a 	sub	r7,r7,r20
  8373fc:	d9002344 	addi	r4,sp,141
  837400:	e1cf883a 	add	r7,fp,r7
  837404:	00000106 	br	83740c <___svfprintf_internal_r+0x20a8>
  837408:	28800003 	ldbu	r2,0(r5)
  83740c:	20800005 	stb	r2,0(r4)
  837410:	21000044 	addi	r4,r4,1
  837414:	29400044 	addi	r5,r5,1
  837418:	21fffb1e 	bne	r4,r7,837408 <__alt_mem_epcs_flash_controller_0+0xff82e408>
  83741c:	d8802304 	addi	r2,sp,140
  837420:	1505c83a 	sub	r2,r2,r20
  837424:	d8c02344 	addi	r3,sp,141
  837428:	1885883a 	add	r2,r3,r2
  83742c:	003f7006 	br	8371f0 <__alt_mem_epcs_flash_controller_0+0xff82e1f0>
  837430:	0005883a 	mov	r2,zero
  837434:	003f0b06 	br	837064 <__alt_mem_epcs_flash_controller_0+0xff82e064>
  837438:	d9002a17 	ldw	r4,168(sp)
  83743c:	d8c03217 	ldw	r3,200(sp)
  837440:	20800044 	addi	r2,r4,1
  837444:	1885883a 	add	r2,r3,r2
  837448:	d8802b15 	stw	r2,172(sp)
  83744c:	103e870e 	bge	r2,zero,836e6c <__alt_mem_epcs_flash_controller_0+0xff82de6c>
  837450:	0005883a 	mov	r2,zero
  837454:	003e8506 	br	836e6c <__alt_mem_epcs_flash_controller_0+0xff82de6c>
  837458:	010021b4 	movhi	r4,134
  83745c:	21260584 	addi	r4,r4,-26602
  837460:	d9002c15 	stw	r4,176(sp)
  837464:	003cc506 	br	83677c <__alt_mem_epcs_flash_controller_0+0xff82d77c>
  837468:	d8c03217 	ldw	r3,200(sp)
  83746c:	18c00044 	addi	r3,r3,1
  837470:	d8c02b15 	stw	r3,172(sp)
  837474:	1805883a 	mov	r2,r3
  837478:	183fa10e 	bge	r3,zero,837300 <__alt_mem_epcs_flash_controller_0+0xff82e300>
  83747c:	0005883a 	mov	r2,zero
  837480:	003f9f06 	br	837300 <__alt_mem_epcs_flash_controller_0+0xff82e300>
  837484:	d9003617 	ldw	r4,216(sp)
  837488:	000d883a 	mov	r6,zero
  83748c:	000f883a 	mov	r7,zero
  837490:	a00b883a 	mov	r5,r20
  837494:	d8c03d15 	stw	r3,244(sp)
  837498:	da003e15 	stw	r8,248(sp)
  83749c:	0848b880 	call	848b88 <__eqdf2>
  8374a0:	d8c03d17 	ldw	r3,244(sp)
  8374a4:	da003e17 	ldw	r8,248(sp)
  8374a8:	103f8726 	beq	r2,zero,8372c8 <__alt_mem_epcs_flash_controller_0+0xff82e2c8>
  8374ac:	00800044 	movi	r2,1
  8374b0:	10c7c83a 	sub	r3,r2,r3
  8374b4:	d8c02615 	stw	r3,152(sp)
  8374b8:	003f8406 	br	8372cc <__alt_mem_epcs_flash_controller_0+0xff82e2cc>
  8374bc:	20000e1e 	bne	r4,zero,8374f8 <___svfprintf_internal_r+0x2194>
  8374c0:	9480004c 	andi	r18,r18,1
  8374c4:	90000c1e 	bne	r18,zero,8374f8 <___svfprintf_internal_r+0x2194>
  8374c8:	00800044 	movi	r2,1
  8374cc:	d8802b15 	stw	r2,172(sp)
  8374d0:	003e6606 	br	836e6c <__alt_mem_epcs_flash_controller_0+0xff82de6c>
  8374d4:	00800b44 	movi	r2,45
  8374d8:	05adc83a 	sub	r22,zero,r22
  8374dc:	d8802305 	stb	r2,140(sp)
  8374e0:	003f3b06 	br	8371d0 <__alt_mem_epcs_flash_controller_0+0xff82e1d0>
  8374e4:	0005883a 	mov	r2,zero
  8374e8:	003f4e06 	br	837224 <__alt_mem_epcs_flash_controller_0+0xff82e224>
  8374ec:	90a4703a 	and	r18,r18,r2
  8374f0:	903f4a26 	beq	r18,zero,83721c <__alt_mem_epcs_flash_controller_0+0xff82e21c>
  8374f4:	003f4606 	br	837210 <__alt_mem_epcs_flash_controller_0+0xff82e210>
  8374f8:	d8c02a17 	ldw	r3,168(sp)
  8374fc:	18c00084 	addi	r3,r3,2
  837500:	d8c02b15 	stw	r3,172(sp)
  837504:	1805883a 	mov	r2,r3
  837508:	183e580e 	bge	r3,zero,836e6c <__alt_mem_epcs_flash_controller_0+0xff82de6c>
  83750c:	003fd006 	br	837450 <__alt_mem_epcs_flash_controller_0+0xff82e450>
  837510:	00800084 	movi	r2,2
  837514:	10c5c83a 	sub	r2,r2,r3
  837518:	003f7506 	br	8372f0 <__alt_mem_epcs_flash_controller_0+0xff82e2f0>
  83751c:	d9402e17 	ldw	r5,184(sp)
  837520:	d9002e17 	ldw	r4,184(sp)
  837524:	bc400043 	ldbu	r17,1(r23)
  837528:	29400017 	ldw	r5,0(r5)
  83752c:	20800104 	addi	r2,r4,4
  837530:	d8802e15 	stw	r2,184(sp)
  837534:	d9402a15 	stw	r5,168(sp)
  837538:	182f883a 	mov	r23,r3
  83753c:	283df10e 	bge	r5,zero,836d04 <__alt_mem_epcs_flash_controller_0+0xff82dd04>
  837540:	8c403fcc 	andi	r17,r17,255
  837544:	017fffc4 	movi	r5,-1
  837548:	8c40201c 	xori	r17,r17,128
  83754c:	d9402a15 	stw	r5,168(sp)
  837550:	8c7fe004 	addi	r17,r17,-128
  837554:	0037d806 	br	8354b8 <__alt_mem_epcs_flash_controller_0+0xff82c4b8>
  837558:	9080004c 	andi	r2,r18,1
  83755c:	0039883a 	mov	fp,zero
  837560:	10000726 	beq	r2,zero,837580 <___svfprintf_internal_r+0x221c>
  837564:	d8c02817 	ldw	r3,160(sp)
  837568:	dc001dc4 	addi	r16,sp,119
  83756c:	00800c04 	movi	r2,48
  837570:	1c07c83a 	sub	r3,r3,r16
  837574:	d8801dc5 	stb	r2,119(sp)
  837578:	d8c02b15 	stw	r3,172(sp)
  83757c:	00393106 	br	835a44 <__alt_mem_epcs_flash_controller_0+0xff82ca44>
  837580:	d8002b15 	stw	zero,172(sp)
  837584:	dc001e04 	addi	r16,sp,120
  837588:	00392e06 	br	835a44 <__alt_mem_epcs_flash_controller_0+0xff82ca44>
  83758c:	0005883a 	mov	r2,zero
  837590:	003e3306 	br	836e60 <__alt_mem_epcs_flash_controller_0+0xff82de60>
  837594:	dd802617 	ldw	r22,152(sp)
  837598:	003f0706 	br	8371b8 <__alt_mem_epcs_flash_controller_0+0xff82e1b8>
  83759c:	d8c02b03 	ldbu	r3,172(sp)
  8375a0:	d8c02785 	stb	r3,158(sp)
  8375a4:	003a3506 	br	835e7c <__alt_mem_epcs_flash_controller_0+0xff82ce7c>
  8375a8:	d8c02b03 	ldbu	r3,172(sp)
  8375ac:	d8c02785 	stb	r3,158(sp)
  8375b0:	003a1706 	br	835e10 <__alt_mem_epcs_flash_controller_0+0xff82ce10>
  8375b4:	0005883a 	mov	r2,zero
  8375b8:	003f5d06 	br	837330 <__alt_mem_epcs_flash_controller_0+0xff82e330>
  8375bc:	d8c02b03 	ldbu	r3,172(sp)
  8375c0:	d8c02785 	stb	r3,158(sp)
  8375c4:	0038f306 	br	835994 <__alt_mem_epcs_flash_controller_0+0xff82c994>
  8375c8:	d8c02b03 	ldbu	r3,172(sp)
  8375cc:	d8c02785 	stb	r3,158(sp)
  8375d0:	0038be06 	br	8358cc <__alt_mem_epcs_flash_controller_0+0xff82c8cc>
  8375d4:	d8802344 	addi	r2,sp,141
  8375d8:	003f0506 	br	8371f0 <__alt_mem_epcs_flash_controller_0+0xff82e1f0>
  8375dc:	d8c02b03 	ldbu	r3,172(sp)
  8375e0:	d8c02785 	stb	r3,158(sp)
  8375e4:	00388b06 	br	835814 <__alt_mem_epcs_flash_controller_0+0xff82c814>
  8375e8:	d8c02b03 	ldbu	r3,172(sp)
  8375ec:	d8c02785 	stb	r3,158(sp)
  8375f0:	003ad706 	br	836150 <__alt_mem_epcs_flash_controller_0+0xff82d150>
  8375f4:	d9403917 	ldw	r5,228(sp)
  8375f8:	00800304 	movi	r2,12
  8375fc:	28800015 	stw	r2,0(r5)
  837600:	00bfffc4 	movi	r2,-1
  837604:	00384306 	br	835714 <__alt_mem_epcs_flash_controller_0+0xff82c714>
  837608:	d8c02b03 	ldbu	r3,172(sp)
  83760c:	d8c02785 	stb	r3,158(sp)
  837610:	003ab606 	br	8360ec <__alt_mem_epcs_flash_controller_0+0xff82d0ec>
  837614:	d8c02b03 	ldbu	r3,172(sp)
  837618:	d8c02785 	stb	r3,158(sp)
  83761c:	003a8906 	br	836044 <__alt_mem_epcs_flash_controller_0+0xff82d044>

00837620 <__ssvfscanf_r>:
  837620:	2880030b 	ldhu	r2,12(r5)
  837624:	deff4b04 	addi	sp,sp,-724
  837628:	df00b315 	stw	fp,716(sp)
  83762c:	ddc0b215 	stw	r23,712(sp)
  837630:	dfc0b415 	stw	ra,720(sp)
  837634:	dd80b115 	stw	r22,708(sp)
  837638:	dd40b015 	stw	r21,704(sp)
  83763c:	dd00af15 	stw	r20,700(sp)
  837640:	dcc0ae15 	stw	r19,696(sp)
  837644:	dc80ad15 	stw	r18,692(sp)
  837648:	dc40ac15 	stw	r17,688(sp)
  83764c:	dc00ab15 	stw	r16,684(sp)
  837650:	10c8000c 	andi	r3,r2,8192
  837654:	d9c09c15 	stw	r7,624(sp)
  837658:	2839883a 	mov	fp,r5
  83765c:	202f883a 	mov	r23,r4
  837660:	1800061e 	bne	r3,zero,83767c <__ssvfscanf_r+0x5c>
  837664:	29001917 	ldw	r4,100(r5)
  837668:	00f7ffc4 	movi	r3,-8193
  83766c:	10880014 	ori	r2,r2,8192
  837670:	20c6703a 	and	r3,r4,r3
  837674:	2880030d 	sth	r2,12(r5)
  837678:	28c01915 	stw	r3,100(r5)
  83767c:	30800003 	ldbu	r2,0(r6)
  837680:	0021883a 	mov	r16,zero
  837684:	058021b4 	movhi	r22,134
  837688:	d800a115 	stw	zero,644(sp)
  83768c:	d8009e15 	stw	zero,632(sp)
  837690:	d800a015 	stw	zero,640(sp)
  837694:	d8809b15 	stw	r2,620(sp)
  837698:	b5af7704 	addi	r22,r22,-16932
  83769c:	8025883a 	mov	r18,r16
  8376a0:	e027883a 	mov	r19,fp
  8376a4:	35000044 	addi	r20,r6,1
  8376a8:	10001e26 	beq	r2,zero,837724 <__ssvfscanf_r+0x104>
  8376ac:	b4000017 	ldw	r16,0(r22)
  8376b0:	8087883a 	add	r3,r16,r2
  8376b4:	18c00043 	ldbu	r3,1(r3)
  8376b8:	18c0020c 	andi	r3,r3,8
  8376bc:	18001b26 	beq	r3,zero,83772c <__ssvfscanf_r+0x10c>
  8376c0:	98800117 	ldw	r2,4(r19)
  8376c4:	00800e0e 	bge	zero,r2,837700 <__ssvfscanf_r+0xe0>
  8376c8:	98c00017 	ldw	r3,0(r19)
  8376cc:	b1000017 	ldw	r4,0(r22)
  8376d0:	18800003 	ldbu	r2,0(r3)
  8376d4:	2085883a 	add	r2,r4,r2
  8376d8:	10800043 	ldbu	r2,1(r2)
  8376dc:	1080020c 	andi	r2,r2,8
  8376e0:	10000b26 	beq	r2,zero,837710 <__ssvfscanf_r+0xf0>
  8376e4:	98800117 	ldw	r2,4(r19)
  8376e8:	18c00044 	addi	r3,r3,1
  8376ec:	98c00015 	stw	r3,0(r19)
  8376f0:	10bfffc4 	addi	r2,r2,-1
  8376f4:	98800115 	stw	r2,4(r19)
  8376f8:	94800044 	addi	r18,r18,1
  8376fc:	00bff216 	blt	zero,r2,8376c8 <__alt_mem_epcs_flash_controller_0+0xff82e6c8>
  837700:	980b883a 	mov	r5,r19
  837704:	b809883a 	mov	r4,r23
  837708:	0842c740 	call	842c74 <__ssrefill_r>
  83770c:	103fee26 	beq	r2,zero,8376c8 <__alt_mem_epcs_flash_controller_0+0xff82e6c8>
  837710:	a00d883a 	mov	r6,r20
  837714:	30800003 	ldbu	r2,0(r6)
  837718:	35000044 	addi	r20,r6,1
  83771c:	d8809b15 	stw	r2,620(sp)
  837720:	103fe21e 	bne	r2,zero,8376ac <__alt_mem_epcs_flash_controller_0+0xff82e6ac>
  837724:	d880a017 	ldw	r2,640(sp)
  837728:	00009a06 	br	837994 <__ssvfscanf_r+0x374>
  83772c:	00c00944 	movi	r3,37
  837730:	10c0891e 	bne	r2,r3,837958 <__ssvfscanf_r+0x338>
  837734:	0039883a 	mov	fp,zero
  837738:	35400043 	ldbu	r21,1(r6)
  83773c:	0023883a 	mov	r17,zero
  837740:	01801e04 	movi	r6,120
  837744:	00c01b04 	movi	r3,108
  837748:	e009883a 	mov	r4,fp
  83774c:	a1c00044 	addi	r7,r20,1
  837750:	3540a236 	bltu	r6,r21,8379dc <__ssvfscanf_r+0x3bc>
  837754:	a80490ba 	slli	r2,r21,2
  837758:	014020f4 	movhi	r5,131
  83775c:	295ddb04 	addi	r5,r5,30572
  837760:	1145883a 	add	r2,r2,r5
  837764:	10800017 	ldw	r2,0(r2)
  837768:	1000683a 	jmp	r2
  83776c:	00837990 	cmplti	r2,zero,3558
  837770:	008379dc 	xori	r2,zero,3559
  837774:	008379dc 	xori	r2,zero,3559
  837778:	008379dc 	xori	r2,zero,3559
  83777c:	008379dc 	xori	r2,zero,3559
  837780:	008379dc 	xori	r2,zero,3559
  837784:	008379dc 	xori	r2,zero,3559
  837788:	008379dc 	xori	r2,zero,3559
  83778c:	008379dc 	xori	r2,zero,3559
  837790:	008379dc 	xori	r2,zero,3559
  837794:	008379dc 	xori	r2,zero,3559
  837798:	008379dc 	xori	r2,zero,3559
  83779c:	008379dc 	xori	r2,zero,3559
  8377a0:	008379dc 	xori	r2,zero,3559
  8377a4:	008379dc 	xori	r2,zero,3559
  8377a8:	008379dc 	xori	r2,zero,3559
  8377ac:	008379dc 	xori	r2,zero,3559
  8377b0:	008379dc 	xori	r2,zero,3559
  8377b4:	008379dc 	xori	r2,zero,3559
  8377b8:	008379dc 	xori	r2,zero,3559
  8377bc:	008379dc 	xori	r2,zero,3559
  8377c0:	008379dc 	xori	r2,zero,3559
  8377c4:	008379dc 	xori	r2,zero,3559
  8377c8:	008379dc 	xori	r2,zero,3559
  8377cc:	008379dc 	xori	r2,zero,3559
  8377d0:	008379dc 	xori	r2,zero,3559
  8377d4:	008379dc 	xori	r2,zero,3559
  8377d8:	008379dc 	xori	r2,zero,3559
  8377dc:	008379dc 	xori	r2,zero,3559
  8377e0:	008379dc 	xori	r2,zero,3559
  8377e4:	008379dc 	xori	r2,zero,3559
  8377e8:	008379dc 	xori	r2,zero,3559
  8377ec:	008379dc 	xori	r2,zero,3559
  8377f0:	008379dc 	xori	r2,zero,3559
  8377f4:	008379dc 	xori	r2,zero,3559
  8377f8:	008379dc 	xori	r2,zero,3559
  8377fc:	008379dc 	xori	r2,zero,3559
  837800:	00837950 	cmplti	r2,zero,3557
  837804:	008379dc 	xori	r2,zero,3559
  837808:	008379dc 	xori	r2,zero,3559
  83780c:	008379dc 	xori	r2,zero,3559
  837810:	008379dc 	xori	r2,zero,3559
  837814:	008379c4 	movi	r2,3559
  837818:	008379dc 	xori	r2,zero,3559
  83781c:	008379dc 	xori	r2,zero,3559
  837820:	008379dc 	xori	r2,zero,3559
  837824:	008379dc 	xori	r2,zero,3559
  837828:	008379dc 	xori	r2,zero,3559
  83782c:	00837b24 	muli	r2,zero,3564
  837830:	00837b24 	muli	r2,zero,3564
  837834:	00837b24 	muli	r2,zero,3564
  837838:	00837b24 	muli	r2,zero,3564
  83783c:	00837b24 	muli	r2,zero,3564
  837840:	00837b24 	muli	r2,zero,3564
  837844:	00837b24 	muli	r2,zero,3564
  837848:	00837b24 	muli	r2,zero,3564
  83784c:	00837b24 	muli	r2,zero,3564
  837850:	00837b24 	muli	r2,zero,3564
  837854:	008379dc 	xori	r2,zero,3559
  837858:	008379dc 	xori	r2,zero,3559
  83785c:	008379dc 	xori	r2,zero,3559
  837860:	008379dc 	xori	r2,zero,3559
  837864:	008379dc 	xori	r2,zero,3559
  837868:	008379dc 	xori	r2,zero,3559
  83786c:	008379dc 	xori	r2,zero,3559
  837870:	008379dc 	xori	r2,zero,3559
  837874:	008379dc 	xori	r2,zero,3559
  837878:	008379dc 	xori	r2,zero,3559
  83787c:	00837af4 	movhi	r2,3563
  837880:	00837bd0 	cmplti	r2,zero,3567
  837884:	008379dc 	xori	r2,zero,3559
  837888:	00837bd0 	cmplti	r2,zero,3567
  83788c:	008379dc 	xori	r2,zero,3559
  837890:	008379dc 	xori	r2,zero,3559
  837894:	008379dc 	xori	r2,zero,3559
  837898:	008379dc 	xori	r2,zero,3559
  83789c:	00837bbc 	xorhi	r2,zero,3566
  8378a0:	008379dc 	xori	r2,zero,3559
  8378a4:	008379dc 	xori	r2,zero,3559
  8378a8:	00837b8c 	andi	r2,zero,3566
  8378ac:	008379dc 	xori	r2,zero,3559
  8378b0:	008379dc 	xori	r2,zero,3559
  8378b4:	008379dc 	xori	r2,zero,3559
  8378b8:	008379dc 	xori	r2,zero,3559
  8378bc:	008379dc 	xori	r2,zero,3559
  8378c0:	008379dc 	xori	r2,zero,3559
  8378c4:	008379dc 	xori	r2,zero,3559
  8378c8:	008379dc 	xori	r2,zero,3559
  8378cc:	00837b5c 	xori	r2,zero,3565
  8378d0:	008379dc 	xori	r2,zero,3559
  8378d4:	008379dc 	xori	r2,zero,3559
  8378d8:	00837d18 	cmpnei	r2,zero,3572
  8378dc:	008379dc 	xori	r2,zero,3559
  8378e0:	008379dc 	xori	r2,zero,3559
  8378e4:	008379dc 	xori	r2,zero,3559
  8378e8:	008379dc 	xori	r2,zero,3559
  8378ec:	008379dc 	xori	r2,zero,3559
  8378f0:	008379dc 	xori	r2,zero,3559
  8378f4:	008379dc 	xori	r2,zero,3559
  8378f8:	00837c98 	cmpnei	r2,zero,3570
  8378fc:	00837c6c 	andhi	r2,zero,3569
  837900:	00837bd0 	cmplti	r2,zero,3567
  837904:	00837bd0 	cmplti	r2,zero,3567
  837908:	00837bd0 	cmplti	r2,zero,3567
  83790c:	00837c58 	cmpnei	r2,zero,3569
  837910:	00837da8 	cmpgeui	r2,zero,3574
  837914:	008379dc 	xori	r2,zero,3559
  837918:	008379dc 	xori	r2,zero,3559
  83791c:	00837c44 	movi	r2,3569
  837920:	008379dc 	xori	r2,zero,3559
  837924:	00837c14 	movui	r2,3568
  837928:	00837be8 	cmpgeui	r2,zero,3567
  83792c:	00837ac4 	movi	r2,3563
  837930:	008379dc 	xori	r2,zero,3559
  837934:	008379dc 	xori	r2,zero,3559
  837938:	00837aac 	andhi	r2,zero,3562
  83793c:	008379dc 	xori	r2,zero,3559
  837940:	00837a30 	cmpltui	r2,zero,3560
  837944:	008379dc 	xori	r2,zero,3559
  837948:	008379dc 	xori	r2,zero,3559
  83794c:	00837b5c 	xori	r2,zero,3565
  837950:	d9c09d15 	stw	r7,628(sp)
  837954:	3829883a 	mov	r20,r7
  837958:	98800117 	ldw	r2,4(r19)
  83795c:	0081c60e 	bge	zero,r2,838078 <__ssvfscanf_r+0xa58>
  837960:	98800017 	ldw	r2,0(r19)
  837964:	a0ffffc3 	ldbu	r3,-1(r20)
  837968:	11000003 	ldbu	r4,0(r2)
  83796c:	20ff6d1e 	bne	r4,r3,837724 <__alt_mem_epcs_flash_controller_0+0xff82e724>
  837970:	98c00117 	ldw	r3,4(r19)
  837974:	10800044 	addi	r2,r2,1
  837978:	98800015 	stw	r2,0(r19)
  83797c:	18bfffc4 	addi	r2,r3,-1
  837980:	98800115 	stw	r2,4(r19)
  837984:	94800044 	addi	r18,r18,1
  837988:	a00d883a 	mov	r6,r20
  83798c:	003f6106 	br	837714 <__alt_mem_epcs_flash_controller_0+0xff82e714>
  837990:	00bfffc4 	movi	r2,-1
  837994:	dfc0b417 	ldw	ra,720(sp)
  837998:	df00b317 	ldw	fp,716(sp)
  83799c:	ddc0b217 	ldw	r23,712(sp)
  8379a0:	dd80b117 	ldw	r22,708(sp)
  8379a4:	dd40b017 	ldw	r21,704(sp)
  8379a8:	dd00af17 	ldw	r20,700(sp)
  8379ac:	dcc0ae17 	ldw	r19,696(sp)
  8379b0:	dc80ad17 	ldw	r18,692(sp)
  8379b4:	dc40ac17 	ldw	r17,688(sp)
  8379b8:	dc00ab17 	ldw	r16,684(sp)
  8379bc:	dec0b504 	addi	sp,sp,724
  8379c0:	f800283a 	ret
  8379c4:	a1400043 	ldbu	r5,1(r20)
  8379c8:	3829883a 	mov	r20,r7
  8379cc:	8c400414 	ori	r17,r17,16
  8379d0:	2d403fcc 	andi	r21,r5,255
  8379d4:	a1c00044 	addi	r7,r20,1
  8379d8:	357f5e2e 	bgeu	r6,r21,837754 <__alt_mem_epcs_flash_controller_0+0xff82e754>
  8379dc:	856b883a 	add	r21,r16,r21
  8379e0:	a8800043 	ldbu	r2,1(r21)
  8379e4:	d9c09d15 	stw	r7,628(sp)
  8379e8:	00c00044 	movi	r3,1
  8379ec:	108000cc 	andi	r2,r2,3
  8379f0:	2039883a 	mov	fp,r4
  8379f4:	10c1a526 	beq	r2,r3,83808c <__ssvfscanf_r+0xa6c>
  8379f8:	98800117 	ldw	r2,4(r19)
  8379fc:	00804216 	blt	zero,r2,837b08 <__ssvfscanf_r+0x4e8>
  837a00:	980b883a 	mov	r5,r19
  837a04:	b809883a 	mov	r4,r23
  837a08:	0842c740 	call	842c74 <__ssrefill_r>
  837a0c:	10015e1e 	bne	r2,zero,837f88 <__ssvfscanf_r+0x968>
  837a10:	01002134 	movhi	r4,132
  837a14:	2102b404 	addi	r4,r4,2768
  837a18:	01400284 	movi	r5,10
  837a1c:	b4000017 	ldw	r16,0(r22)
  837a20:	d900a115 	stw	r4,644(sp)
  837a24:	d9409e15 	stw	r5,632(sp)
  837a28:	050000c4 	movi	r20,3
  837a2c:	00000a06 	br	837a58 <__ssvfscanf_r+0x438>
  837a30:	98800117 	ldw	r2,4(r19)
  837a34:	d9c09d15 	stw	r7,628(sp)
  837a38:	2039883a 	mov	fp,r4
  837a3c:	0081e20e 	bge	zero,r2,8381c8 <__ssvfscanf_r+0xba8>
  837a40:	00c02134 	movhi	r3,132
  837a44:	18c41204 	addi	r3,r3,4168
  837a48:	01000284 	movi	r4,10
  837a4c:	d8c0a115 	stw	r3,644(sp)
  837a50:	d9009e15 	stw	r4,632(sp)
  837a54:	050000c4 	movi	r20,3
  837a58:	98c00017 	ldw	r3,0(r19)
  837a5c:	00000206 	br	837a68 <__ssvfscanf_r+0x448>
  837a60:	18c00044 	addi	r3,r3,1
  837a64:	98c00015 	stw	r3,0(r19)
  837a68:	19000003 	ldbu	r4,0(r3)
  837a6c:	20803fcc 	andi	r2,r4,255
  837a70:	8085883a 	add	r2,r16,r2
  837a74:	10800043 	ldbu	r2,1(r2)
  837a78:	1140020c 	andi	r5,r2,8
  837a7c:	28020126 	beq	r5,zero,838284 <__ssvfscanf_r+0xc64>
  837a80:	98800117 	ldw	r2,4(r19)
  837a84:	94800044 	addi	r18,r18,1
  837a88:	10bfffc4 	addi	r2,r2,-1
  837a8c:	98800115 	stw	r2,4(r19)
  837a90:	00bff316 	blt	zero,r2,837a60 <__alt_mem_epcs_flash_controller_0+0xff82ea60>
  837a94:	980b883a 	mov	r5,r19
  837a98:	b809883a 	mov	r4,r23
  837a9c:	0842c740 	call	842c74 <__ssrefill_r>
  837aa0:	1001391e 	bne	r2,zero,837f88 <__ssvfscanf_r+0x968>
  837aa4:	b4000017 	ldw	r16,0(r22)
  837aa8:	003feb06 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  837aac:	98800117 	ldw	r2,4(r19)
  837ab0:	d9c09d15 	stw	r7,628(sp)
  837ab4:	2039883a 	mov	fp,r4
  837ab8:	0081aa0e 	bge	zero,r2,838164 <__ssvfscanf_r+0xb44>
  837abc:	05000084 	movi	r20,2
  837ac0:	003fe506 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  837ac4:	98800117 	ldw	r2,4(r19)
  837ac8:	d9c09d15 	stw	r7,628(sp)
  837acc:	2039883a 	mov	fp,r4
  837ad0:	8c408814 	ori	r17,r17,544
  837ad4:	0081df0e 	bge	zero,r2,838254 <__ssvfscanf_r+0xc34>
  837ad8:	00c02134 	movhi	r3,132
  837adc:	18c41204 	addi	r3,r3,4168
  837ae0:	01000404 	movi	r4,16
  837ae4:	d8c0a115 	stw	r3,644(sp)
  837ae8:	d9009e15 	stw	r4,632(sp)
  837aec:	050000c4 	movi	r20,3
  837af0:	003fd906 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  837af4:	98800117 	ldw	r2,4(r19)
  837af8:	d9c09d15 	stw	r7,628(sp)
  837afc:	2039883a 	mov	fp,r4
  837b00:	8c400054 	ori	r17,r17,1
  837b04:	0081850e 	bge	zero,r2,83811c <__ssvfscanf_r+0xafc>
  837b08:	00c02134 	movhi	r3,132
  837b0c:	18c2b404 	addi	r3,r3,2768
  837b10:	01000284 	movi	r4,10
  837b14:	d8c0a115 	stw	r3,644(sp)
  837b18:	d9009e15 	stw	r4,632(sp)
  837b1c:	050000c4 	movi	r20,3
  837b20:	003fcd06 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  837b24:	01400284 	movi	r5,10
  837b28:	d8c0a615 	stw	r3,664(sp)
  837b2c:	d980a915 	stw	r6,676(sp)
  837b30:	d9c0aa15 	stw	r7,680(sp)
  837b34:	08301e80 	call	8301e8 <__mulsi3>
  837b38:	a1400043 	ldbu	r5,1(r20)
  837b3c:	d9c0aa17 	ldw	r7,680(sp)
  837b40:	1545883a 	add	r2,r2,r21
  837b44:	113ff404 	addi	r4,r2,-48
  837b48:	3829883a 	mov	r20,r7
  837b4c:	2d403fcc 	andi	r21,r5,255
  837b50:	d8c0a617 	ldw	r3,664(sp)
  837b54:	d980a917 	ldw	r6,676(sp)
  837b58:	003efc06 	br	83774c <__alt_mem_epcs_flash_controller_0+0xff82e74c>
  837b5c:	98800117 	ldw	r2,4(r19)
  837b60:	d9c09d15 	stw	r7,628(sp)
  837b64:	2039883a 	mov	fp,r4
  837b68:	8c408014 	ori	r17,r17,512
  837b6c:	0081710e 	bge	zero,r2,838134 <__ssvfscanf_r+0xb14>
  837b70:	01402134 	movhi	r5,132
  837b74:	29441204 	addi	r5,r5,4168
  837b78:	00800404 	movi	r2,16
  837b7c:	d940a115 	stw	r5,644(sp)
  837b80:	d8809e15 	stw	r2,632(sp)
  837b84:	050000c4 	movi	r20,3
  837b88:	003fb306 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  837b8c:	98800117 	ldw	r2,4(r19)
  837b90:	d9c09d15 	stw	r7,628(sp)
  837b94:	2039883a 	mov	fp,r4
  837b98:	8c400054 	ori	r17,r17,1
  837b9c:	0081840e 	bge	zero,r2,8381b0 <__ssvfscanf_r+0xb90>
  837ba0:	01402134 	movhi	r5,132
  837ba4:	29441204 	addi	r5,r5,4168
  837ba8:	00800204 	movi	r2,8
  837bac:	d940a115 	stw	r5,644(sp)
  837bb0:	d8809e15 	stw	r2,632(sp)
  837bb4:	050000c4 	movi	r20,3
  837bb8:	003fa706 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  837bbc:	a1400043 	ldbu	r5,1(r20)
  837bc0:	8c400094 	ori	r17,r17,2
  837bc4:	3829883a 	mov	r20,r7
  837bc8:	2d403fcc 	andi	r21,r5,255
  837bcc:	003edf06 	br	83774c <__alt_mem_epcs_flash_controller_0+0xff82e74c>
  837bd0:	98800117 	ldw	r2,4(r19)
  837bd4:	d9c09d15 	stw	r7,628(sp)
  837bd8:	2039883a 	mov	fp,r4
  837bdc:	00816d0e 	bge	zero,r2,838194 <__ssvfscanf_r+0xb74>
  837be0:	05000104 	movi	r20,4
  837be4:	003f9c06 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  837be8:	98800117 	ldw	r2,4(r19)
  837bec:	d9c09d15 	stw	r7,628(sp)
  837bf0:	2039883a 	mov	fp,r4
  837bf4:	0081800e 	bge	zero,r2,8381f8 <__ssvfscanf_r+0xbd8>
  837bf8:	01002134 	movhi	r4,132
  837bfc:	21041204 	addi	r4,r4,4168
  837c00:	01400204 	movi	r5,8
  837c04:	d900a115 	stw	r4,644(sp)
  837c08:	d9409e15 	stw	r5,632(sp)
  837c0c:	050000c4 	movi	r20,3
  837c10:	003f9106 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  837c14:	d9c09d15 	stw	r7,628(sp)
  837c18:	8880040c 	andi	r2,r17,16
  837c1c:	1000a01e 	bne	r2,zero,837ea0 <__ssvfscanf_r+0x880>
  837c20:	8880010c 	andi	r2,r17,4
  837c24:	10012826 	beq	r2,zero,8380c8 <__ssvfscanf_r+0xaa8>
  837c28:	d9009c17 	ldw	r4,624(sp)
  837c2c:	3829883a 	mov	r20,r7
  837c30:	20800017 	ldw	r2,0(r4)
  837c34:	21000104 	addi	r4,r4,4
  837c38:	d9009c15 	stw	r4,624(sp)
  837c3c:	1480000d 	sth	r18,0(r2)
  837c40:	003eb306 	br	837710 <__alt_mem_epcs_flash_controller_0+0xff82e710>
  837c44:	a5400043 	ldbu	r21,1(r20)
  837c48:	a8c11a26 	beq	r21,r3,8380b4 <__ssvfscanf_r+0xa94>
  837c4c:	8c400054 	ori	r17,r17,1
  837c50:	3829883a 	mov	r20,r7
  837c54:	003ebd06 	br	83774c <__alt_mem_epcs_flash_controller_0+0xff82e74c>
  837c58:	a1400043 	ldbu	r5,1(r20)
  837c5c:	8c400114 	ori	r17,r17,4
  837c60:	3829883a 	mov	r20,r7
  837c64:	2d403fcc 	andi	r21,r5,255
  837c68:	003eb806 	br	83774c <__alt_mem_epcs_flash_controller_0+0xff82e74c>
  837c6c:	98800117 	ldw	r2,4(r19)
  837c70:	d9c09d15 	stw	r7,628(sp)
  837c74:	2039883a 	mov	fp,r4
  837c78:	00bf610e 	bge	zero,r2,837a00 <__alt_mem_epcs_flash_controller_0+0xff82ea00>
  837c7c:	00802134 	movhi	r2,132
  837c80:	1082b404 	addi	r2,r2,2768
  837c84:	00c00284 	movi	r3,10
  837c88:	d880a115 	stw	r2,644(sp)
  837c8c:	d8c09e15 	stw	r3,632(sp)
  837c90:	050000c4 	movi	r20,3
  837c94:	003f7006 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  837c98:	98800117 	ldw	r2,4(r19)
  837c9c:	d9c09d15 	stw	r7,628(sp)
  837ca0:	2039883a 	mov	fp,r4
  837ca4:	0080c60e 	bge	zero,r2,837fc0 <__ssvfscanf_r+0x9a0>
  837ca8:	e000011e 	bne	fp,zero,837cb0 <__ssvfscanf_r+0x690>
  837cac:	07000044 	movi	fp,1
  837cb0:	8880004c 	andi	r2,r17,1
  837cb4:	1000461e 	bne	r2,zero,837dd0 <__ssvfscanf_r+0x7b0>
  837cb8:	8c40040c 	andi	r17,r17,16
  837cbc:	8800dc26 	beq	r17,zero,838030 <__ssvfscanf_r+0xa10>
  837cc0:	0021883a 	mov	r16,zero
  837cc4:	00000806 	br	837ce8 <__ssvfscanf_r+0x6c8>
  837cc8:	1887883a 	add	r3,r3,r2
  837ccc:	980b883a 	mov	r5,r19
  837cd0:	b809883a 	mov	r4,r23
  837cd4:	98c00015 	stw	r3,0(r19)
  837cd8:	80a1883a 	add	r16,r16,r2
  837cdc:	e0b9c83a 	sub	fp,fp,r2
  837ce0:	0842c740 	call	842c74 <__ssrefill_r>
  837ce4:	1000cc1e 	bne	r2,zero,838018 <__ssvfscanf_r+0x9f8>
  837ce8:	98800117 	ldw	r2,4(r19)
  837cec:	98c00017 	ldw	r3,0(r19)
  837cf0:	173ff516 	blt	r2,fp,837cc8 <__alt_mem_epcs_flash_controller_0+0xff82ecc8>
  837cf4:	1705c83a 	sub	r2,r2,fp
  837cf8:	1f15883a 	add	r10,r3,fp
  837cfc:	8721883a 	add	r16,r16,fp
  837d00:	98800115 	stw	r2,4(r19)
  837d04:	9a800015 	stw	r10,0(r19)
  837d08:	dd009d17 	ldw	r20,628(sp)
  837d0c:	9425883a 	add	r18,r18,r16
  837d10:	a00d883a 	mov	r6,r20
  837d14:	003e7f06 	br	837714 <__alt_mem_epcs_flash_controller_0+0xff82e714>
  837d18:	2039883a 	mov	fp,r4
  837d1c:	380b883a 	mov	r5,r7
  837d20:	d9005884 	addi	r4,sp,354
  837d24:	d9c09d15 	stw	r7,628(sp)
  837d28:	083eeb80 	call	83eeb8 <__sccl>
  837d2c:	1029883a 	mov	r20,r2
  837d30:	98800117 	ldw	r2,4(r19)
  837d34:	0081120e 	bge	zero,r2,838180 <__ssvfscanf_r+0xb60>
  837d38:	99000017 	ldw	r4,0(r19)
  837d3c:	20800003 	ldbu	r2,0(r4)
  837d40:	e0005a26 	beq	fp,zero,837eac <__ssvfscanf_r+0x88c>
  837d44:	8c40040c 	andi	r17,r17,16
  837d48:	88005b26 	beq	r17,zero,837eb8 <__ssvfscanf_r+0x898>
  837d4c:	e023883a 	mov	r17,fp
  837d50:	0021883a 	mov	r16,zero
  837d54:	00000106 	br	837d5c <__ssvfscanf_r+0x73c>
  837d58:	20800003 	ldbu	r2,0(r4)
  837d5c:	10803fcc 	andi	r2,r2,255
  837d60:	d8c05884 	addi	r3,sp,354
  837d64:	1885883a 	add	r2,r3,r2
  837d68:	10800007 	ldb	r2,0(r2)
  837d6c:	1000ae26 	beq	r2,zero,838028 <__ssvfscanf_r+0xa08>
  837d70:	98800117 	ldw	r2,4(r19)
  837d74:	21000044 	addi	r4,r4,1
  837d78:	84000044 	addi	r16,r16,1
  837d7c:	10bfffc4 	addi	r2,r2,-1
  837d80:	98800115 	stw	r2,4(r19)
  837d84:	99000015 	stw	r4,0(r19)
  837d88:	8700a126 	beq	r16,fp,838010 <__ssvfscanf_r+0x9f0>
  837d8c:	00bff216 	blt	zero,r2,837d58 <__alt_mem_epcs_flash_controller_0+0xff82ed58>
  837d90:	980b883a 	mov	r5,r19
  837d94:	b809883a 	mov	r4,r23
  837d98:	0842c740 	call	842c74 <__ssrefill_r>
  837d9c:	10009b1e 	bne	r2,zero,83800c <__ssvfscanf_r+0x9ec>
  837da0:	99000017 	ldw	r4,0(r19)
  837da4:	003fec06 	br	837d58 <__alt_mem_epcs_flash_controller_0+0xff82ed58>
  837da8:	98800117 	ldw	r2,4(r19)
  837dac:	d9c09d15 	stw	r7,628(sp)
  837db0:	2039883a 	mov	fp,r4
  837db4:	00811c0e 	bge	zero,r2,838228 <__ssvfscanf_r+0xc08>
  837db8:	01402134 	movhi	r5,132
  837dbc:	2942b404 	addi	r5,r5,2768
  837dc0:	d940a115 	stw	r5,644(sp)
  837dc4:	d8009e15 	stw	zero,632(sp)
  837dc8:	050000c4 	movi	r20,3
  837dcc:	003f2206 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  837dd0:	dd409904 	addi	r21,sp,612
  837dd4:	8c40040c 	andi	r17,r17,16
  837dd8:	01800204 	movi	r6,8
  837ddc:	000b883a 	mov	r5,zero
  837de0:	a809883a 	mov	r4,r21
  837de4:	dc409f15 	stw	r17,636(sp)
  837de8:	0833d940 	call	833d94 <memset>
  837dec:	dc409f17 	ldw	r17,636(sp)
  837df0:	88006e26 	beq	r17,zero,837fac <__ssvfscanf_r+0x98c>
  837df4:	0029883a 	mov	r20,zero
  837df8:	0023883a 	mov	r17,zero
  837dfc:	083d73c0 	call	83d73c <__locale_mb_cur_max>
  837e00:	14406126 	beq	r2,r17,837f88 <__ssvfscanf_r+0x968>
  837e04:	98800017 	ldw	r2,0(r19)
  837e08:	98c00117 	ldw	r3,4(r19)
  837e0c:	d9000104 	addi	r4,sp,4
  837e10:	12000003 	ldbu	r8,0(r2)
  837e14:	18ffffc4 	addi	r3,r3,-1
  837e18:	10800044 	addi	r2,r2,1
  837e1c:	98c00115 	stw	r3,4(r19)
  837e20:	98800015 	stw	r2,0(r19)
  837e24:	8c000044 	addi	r16,r17,1
  837e28:	dd400015 	stw	r21,0(sp)
  837e2c:	2463883a 	add	r17,r4,r17
  837e30:	200d883a 	mov	r6,r4
  837e34:	a00b883a 	mov	r5,r20
  837e38:	800f883a 	mov	r7,r16
  837e3c:	b809883a 	mov	r4,r23
  837e40:	8a000005 	stb	r8,0(r17)
  837e44:	083d9ac0 	call	83d9ac <_mbrtowc_r>
  837e48:	017fffc4 	movi	r5,-1
  837e4c:	11404e26 	beq	r2,r5,837f88 <__ssvfscanf_r+0x968>
  837e50:	1000601e 	bne	r2,zero,837fd4 <__ssvfscanf_r+0x9b4>
  837e54:	d8c09f17 	ldw	r3,636(sp)
  837e58:	1800641e 	bne	r3,zero,837fec <__ssvfscanf_r+0x9cc>
  837e5c:	a0000015 	stw	zero,0(r20)
  837e60:	9425883a 	add	r18,r18,r16
  837e64:	e179883a 	add	fp,fp,r5
  837e68:	a5000104 	addi	r20,r20,4
  837e6c:	98800117 	ldw	r2,4(r19)
  837e70:	0023883a 	mov	r17,zero
  837e74:	00804b16 	blt	zero,r2,837fa4 <__ssvfscanf_r+0x984>
  837e78:	980b883a 	mov	r5,r19
  837e7c:	b809883a 	mov	r4,r23
  837e80:	0842c740 	call	842c74 <__ssrefill_r>
  837e84:	10004726 	beq	r2,zero,837fa4 <__ssvfscanf_r+0x984>
  837e88:	88003f1e 	bne	r17,zero,837f88 <__ssvfscanf_r+0x968>
  837e8c:	d8c09f17 	ldw	r3,636(sp)
  837e90:	1800031e 	bne	r3,zero,837ea0 <__ssvfscanf_r+0x880>
  837e94:	d900a017 	ldw	r4,640(sp)
  837e98:	21000044 	addi	r4,r4,1
  837e9c:	d900a015 	stw	r4,640(sp)
  837ea0:	dd009d17 	ldw	r20,628(sp)
  837ea4:	a00d883a 	mov	r6,r20
  837ea8:	003e1a06 	br	837714 <__alt_mem_epcs_flash_controller_0+0xff82e714>
  837eac:	8c40040c 	andi	r17,r17,16
  837eb0:	073fffc4 	movi	fp,-1
  837eb4:	883fa51e 	bne	r17,zero,837d4c <__alt_mem_epcs_flash_controller_0+0xff82ed4c>
  837eb8:	d9409c17 	ldw	r5,624(sp)
  837ebc:	e2bfffc4 	addi	r10,fp,-1
  837ec0:	2c000017 	ldw	r16,0(r5)
  837ec4:	2c400104 	addi	r17,r5,4
  837ec8:	8007883a 	mov	r3,r16
  837ecc:	82ab883a 	add	r21,r16,r10
  837ed0:	00000306 	br	837ee0 <__ssvfscanf_r+0x8c0>
  837ed4:	99000017 	ldw	r4,0(r19)
  837ed8:	e007883a 	mov	r3,fp
  837edc:	20800003 	ldbu	r2,0(r4)
  837ee0:	10803fcc 	andi	r2,r2,255
  837ee4:	d9405884 	addi	r5,sp,354
  837ee8:	2885883a 	add	r2,r5,r2
  837eec:	10800007 	ldb	r2,0(r2)
  837ef0:	10004b26 	beq	r2,zero,838020 <__ssvfscanf_r+0xa00>
  837ef4:	98800117 	ldw	r2,4(r19)
  837ef8:	21400044 	addi	r5,r4,1
  837efc:	99400015 	stw	r5,0(r19)
  837f00:	10bfffc4 	addi	r2,r2,-1
  837f04:	98800115 	stw	r2,4(r19)
  837f08:	20800003 	ldbu	r2,0(r4)
  837f0c:	1f000044 	addi	fp,r3,1
  837f10:	18800005 	stb	r2,0(r3)
  837f14:	1d400726 	beq	r3,r21,837f34 <__ssvfscanf_r+0x914>
  837f18:	98800117 	ldw	r2,4(r19)
  837f1c:	00bfed16 	blt	zero,r2,837ed4 <__alt_mem_epcs_flash_controller_0+0xff82eed4>
  837f20:	980b883a 	mov	r5,r19
  837f24:	b809883a 	mov	r4,r23
  837f28:	0842c740 	call	842c74 <__ssrefill_r>
  837f2c:	103fe926 	beq	r2,zero,837ed4 <__alt_mem_epcs_flash_controller_0+0xff82eed4>
  837f30:	87001526 	beq	r16,fp,837f88 <__ssvfscanf_r+0x968>
  837f34:	e421c83a 	sub	r16,fp,r16
  837f38:	803dfa26 	beq	r16,zero,837724 <__alt_mem_epcs_flash_controller_0+0xff82e724>
  837f3c:	d880a017 	ldw	r2,640(sp)
  837f40:	e0000005 	stb	zero,0(fp)
  837f44:	dc409c15 	stw	r17,624(sp)
  837f48:	10800044 	addi	r2,r2,1
  837f4c:	d880a015 	stw	r2,640(sp)
  837f50:	9425883a 	add	r18,r18,r16
  837f54:	a00d883a 	mov	r6,r20
  837f58:	003dee06 	br	837714 <__alt_mem_epcs_flash_controller_0+0xff82e714>
  837f5c:	013fff84 	movi	r4,-2
  837f60:	1103ed1e 	bne	r2,r4,838f18 <__ssvfscanf_r+0x18f8>
  837f64:	8821883a 	mov	r16,r17
  837f68:	98800117 	ldw	r2,4(r19)
  837f6c:	00834116 	blt	zero,r2,838c74 <__ssvfscanf_r+0x1654>
  837f70:	980b883a 	mov	r5,r19
  837f74:	b809883a 	mov	r4,r23
  837f78:	0842c740 	call	842c74 <__ssrefill_r>
  837f7c:	10033d26 	beq	r2,zero,838c74 <__ssvfscanf_r+0x1654>
  837f80:	dc409f17 	ldw	r17,636(sp)
  837f84:	80034426 	beq	r16,zero,838c98 <__ssvfscanf_r+0x1678>
  837f88:	d900a017 	ldw	r4,640(sp)
  837f8c:	203e8026 	beq	r4,zero,837990 <__alt_mem_epcs_flash_controller_0+0xff82e990>
  837f90:	9880030b 	ldhu	r2,12(r19)
  837f94:	1080100c 	andi	r2,r2,64
  837f98:	103e7d1e 	bne	r2,zero,837990 <__alt_mem_epcs_flash_controller_0+0xff82e990>
  837f9c:	2005883a 	mov	r2,r4
  837fa0:	003e7c06 	br	837994 <__alt_mem_epcs_flash_controller_0+0xff82e994>
  837fa4:	e03f951e 	bne	fp,zero,837dfc <__alt_mem_epcs_flash_controller_0+0xff82edfc>
  837fa8:	003fb806 	br	837e8c <__alt_mem_epcs_flash_controller_0+0xff82ee8c>
  837fac:	d8809c17 	ldw	r2,624(sp)
  837fb0:	15000017 	ldw	r20,0(r2)
  837fb4:	10800104 	addi	r2,r2,4
  837fb8:	d8809c15 	stw	r2,624(sp)
  837fbc:	003f8e06 	br	837df8 <__alt_mem_epcs_flash_controller_0+0xff82edf8>
  837fc0:	980b883a 	mov	r5,r19
  837fc4:	b809883a 	mov	r4,r23
  837fc8:	0842c740 	call	842c74 <__ssrefill_r>
  837fcc:	103f3626 	beq	r2,zero,837ca8 <__alt_mem_epcs_flash_controller_0+0xff82eca8>
  837fd0:	003fed06 	br	837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  837fd4:	013fff84 	movi	r4,-2
  837fd8:	1100071e 	bne	r2,r4,837ff8 <__ssvfscanf_r+0x9d8>
  837fdc:	98800117 	ldw	r2,4(r19)
  837fe0:	8023883a 	mov	r17,r16
  837fe4:	00bf8516 	blt	zero,r2,837dfc <__alt_mem_epcs_flash_controller_0+0xff82edfc>
  837fe8:	003fa306 	br	837e78 <__alt_mem_epcs_flash_controller_0+0xff82ee78>
  837fec:	9425883a 	add	r18,r18,r16
  837ff0:	e73fffc4 	addi	fp,fp,-1
  837ff4:	003f9d06 	br	837e6c <__alt_mem_epcs_flash_controller_0+0xff82ee6c>
  837ff8:	d8c09f17 	ldw	r3,636(sp)
  837ffc:	9425883a 	add	r18,r18,r16
  838000:	e73fffc4 	addi	fp,fp,-1
  838004:	183f9826 	beq	r3,zero,837e68 <__alt_mem_epcs_flash_controller_0+0xff82ee68>
  838008:	003f9806 	br	837e6c <__alt_mem_epcs_flash_controller_0+0xff82ee6c>
  83800c:	8023883a 	mov	r17,r16
  838010:	8821883a 	mov	r16,r17
  838014:	003fce06 	br	837f50 <__alt_mem_epcs_flash_controller_0+0xff82ef50>
  838018:	803f3b1e 	bne	r16,zero,837d08 <__alt_mem_epcs_flash_controller_0+0xff82ed08>
  83801c:	003fda06 	br	837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  838020:	1839883a 	mov	fp,r3
  838024:	003fc306 	br	837f34 <__alt_mem_epcs_flash_controller_0+0xff82ef34>
  838028:	803fc91e 	bne	r16,zero,837f50 <__alt_mem_epcs_flash_controller_0+0xff82ef50>
  83802c:	003dbd06 	br	837724 <__alt_mem_epcs_flash_controller_0+0xff82e724>
  838030:	d8809c17 	ldw	r2,624(sp)
  838034:	dcc00015 	stw	r19,0(sp)
  838038:	b809883a 	mov	r4,r23
  83803c:	11400017 	ldw	r5,0(r2)
  838040:	e00f883a 	mov	r7,fp
  838044:	01800044 	movi	r6,1
  838048:	0842ce40 	call	842ce4 <_sfread_r>
  83804c:	d9009c17 	ldw	r4,624(sp)
  838050:	20c00104 	addi	r3,r4,4
  838054:	103fcc26 	beq	r2,zero,837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  838058:	d940a017 	ldw	r5,640(sp)
  83805c:	dd009d17 	ldw	r20,628(sp)
  838060:	90a5883a 	add	r18,r18,r2
  838064:	29400044 	addi	r5,r5,1
  838068:	d940a015 	stw	r5,640(sp)
  83806c:	d8c09c15 	stw	r3,624(sp)
  838070:	a00d883a 	mov	r6,r20
  838074:	003da706 	br	837714 <__alt_mem_epcs_flash_controller_0+0xff82e714>
  838078:	980b883a 	mov	r5,r19
  83807c:	b809883a 	mov	r4,r23
  838080:	0842c740 	call	842c74 <__ssrefill_r>
  838084:	103e3626 	beq	r2,zero,837960 <__alt_mem_epcs_flash_controller_0+0xff82e960>
  838088:	003fbf06 	br	837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  83808c:	98800117 	ldw	r2,4(r19)
  838090:	88e2b03a 	or	r17,r17,r3
  838094:	0080210e 	bge	zero,r2,83811c <__ssvfscanf_r+0xafc>
  838098:	01402134 	movhi	r5,132
  83809c:	2942b404 	addi	r5,r5,2768
  8380a0:	00800284 	movi	r2,10
  8380a4:	d940a115 	stw	r5,644(sp)
  8380a8:	d8809e15 	stw	r2,632(sp)
  8380ac:	050000c4 	movi	r20,3
  8380b0:	003e6906 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  8380b4:	a1400083 	ldbu	r5,2(r20)
  8380b8:	8c400094 	ori	r17,r17,2
  8380bc:	a5000084 	addi	r20,r20,2
  8380c0:	2d403fcc 	andi	r21,r5,255
  8380c4:	003da106 	br	83774c <__alt_mem_epcs_flash_controller_0+0xff82e74c>
  8380c8:	8880004c 	andi	r2,r17,1
  8380cc:	10000c1e 	bne	r2,zero,838100 <__ssvfscanf_r+0xae0>
  8380d0:	8c40008c 	andi	r17,r17,2
  8380d4:	88000a26 	beq	r17,zero,838100 <__ssvfscanf_r+0xae0>
  8380d8:	d8c09c17 	ldw	r3,624(sp)
  8380dc:	d9009c17 	ldw	r4,624(sp)
  8380e0:	dd009d17 	ldw	r20,628(sp)
  8380e4:	18800017 	ldw	r2,0(r3)
  8380e8:	9007d7fa 	srai	r3,r18,31
  8380ec:	21000104 	addi	r4,r4,4
  8380f0:	14800015 	stw	r18,0(r2)
  8380f4:	10c00115 	stw	r3,4(r2)
  8380f8:	d9009c15 	stw	r4,624(sp)
  8380fc:	003d8406 	br	837710 <__alt_mem_epcs_flash_controller_0+0xff82e710>
  838100:	d9409c17 	ldw	r5,624(sp)
  838104:	dd009d17 	ldw	r20,628(sp)
  838108:	28800017 	ldw	r2,0(r5)
  83810c:	29400104 	addi	r5,r5,4
  838110:	d9409c15 	stw	r5,624(sp)
  838114:	14800015 	stw	r18,0(r2)
  838118:	003d7d06 	br	837710 <__alt_mem_epcs_flash_controller_0+0xff82e710>
  83811c:	980b883a 	mov	r5,r19
  838120:	b809883a 	mov	r4,r23
  838124:	0842c740 	call	842c74 <__ssrefill_r>
  838128:	103f971e 	bne	r2,zero,837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  83812c:	b4000017 	ldw	r16,0(r22)
  838130:	003ed206 	br	837c7c <__alt_mem_epcs_flash_controller_0+0xff82ec7c>
  838134:	980b883a 	mov	r5,r19
  838138:	b809883a 	mov	r4,r23
  83813c:	0842c740 	call	842c74 <__ssrefill_r>
  838140:	103f911e 	bne	r2,zero,837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  838144:	01002134 	movhi	r4,132
  838148:	21041204 	addi	r4,r4,4168
  83814c:	01400404 	movi	r5,16
  838150:	b4000017 	ldw	r16,0(r22)
  838154:	d900a115 	stw	r4,644(sp)
  838158:	d9409e15 	stw	r5,632(sp)
  83815c:	050000c4 	movi	r20,3
  838160:	003e3d06 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  838164:	980b883a 	mov	r5,r19
  838168:	b809883a 	mov	r4,r23
  83816c:	0842c740 	call	842c74 <__ssrefill_r>
  838170:	103f851e 	bne	r2,zero,837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  838174:	b4000017 	ldw	r16,0(r22)
  838178:	05000084 	movi	r20,2
  83817c:	003e3606 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  838180:	980b883a 	mov	r5,r19
  838184:	b809883a 	mov	r4,r23
  838188:	0842c740 	call	842c74 <__ssrefill_r>
  83818c:	103eea26 	beq	r2,zero,837d38 <__alt_mem_epcs_flash_controller_0+0xff82ed38>
  838190:	003f7d06 	br	837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  838194:	980b883a 	mov	r5,r19
  838198:	b809883a 	mov	r4,r23
  83819c:	0842c740 	call	842c74 <__ssrefill_r>
  8381a0:	103f791e 	bne	r2,zero,837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  8381a4:	b4000017 	ldw	r16,0(r22)
  8381a8:	05000104 	movi	r20,4
  8381ac:	003e2a06 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  8381b0:	980b883a 	mov	r5,r19
  8381b4:	b809883a 	mov	r4,r23
  8381b8:	0842c740 	call	842c74 <__ssrefill_r>
  8381bc:	103f721e 	bne	r2,zero,837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  8381c0:	b4000017 	ldw	r16,0(r22)
  8381c4:	003e8c06 	br	837bf8 <__alt_mem_epcs_flash_controller_0+0xff82ebf8>
  8381c8:	980b883a 	mov	r5,r19
  8381cc:	b809883a 	mov	r4,r23
  8381d0:	0842c740 	call	842c74 <__ssrefill_r>
  8381d4:	103f6c1e 	bne	r2,zero,837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  8381d8:	00802134 	movhi	r2,132
  8381dc:	10841204 	addi	r2,r2,4168
  8381e0:	00c00284 	movi	r3,10
  8381e4:	b4000017 	ldw	r16,0(r22)
  8381e8:	d880a115 	stw	r2,644(sp)
  8381ec:	d8c09e15 	stw	r3,632(sp)
  8381f0:	050000c4 	movi	r20,3
  8381f4:	003e1806 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  8381f8:	980b883a 	mov	r5,r19
  8381fc:	b809883a 	mov	r4,r23
  838200:	0842c740 	call	842c74 <__ssrefill_r>
  838204:	103f601e 	bne	r2,zero,837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  838208:	00802134 	movhi	r2,132
  83820c:	10841204 	addi	r2,r2,4168
  838210:	00c00204 	movi	r3,8
  838214:	b4000017 	ldw	r16,0(r22)
  838218:	d880a115 	stw	r2,644(sp)
  83821c:	d8c09e15 	stw	r3,632(sp)
  838220:	050000c4 	movi	r20,3
  838224:	003e0c06 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  838228:	980b883a 	mov	r5,r19
  83822c:	b809883a 	mov	r4,r23
  838230:	0842c740 	call	842c74 <__ssrefill_r>
  838234:	103f541e 	bne	r2,zero,837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  838238:	00802134 	movhi	r2,132
  83823c:	1082b404 	addi	r2,r2,2768
  838240:	b4000017 	ldw	r16,0(r22)
  838244:	d880a115 	stw	r2,644(sp)
  838248:	d8009e15 	stw	zero,632(sp)
  83824c:	050000c4 	movi	r20,3
  838250:	003e0106 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  838254:	980b883a 	mov	r5,r19
  838258:	b809883a 	mov	r4,r23
  83825c:	0842c740 	call	842c74 <__ssrefill_r>
  838260:	103f491e 	bne	r2,zero,837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  838264:	00802134 	movhi	r2,132
  838268:	10841204 	addi	r2,r2,4168
  83826c:	00c00404 	movi	r3,16
  838270:	b4000017 	ldw	r16,0(r22)
  838274:	d880a115 	stw	r2,644(sp)
  838278:	d8c09e15 	stw	r3,632(sp)
  83827c:	050000c4 	movi	r20,3
  838280:	003df506 	br	837a58 <__alt_mem_epcs_flash_controller_0+0xff82ea58>
  838284:	014000c4 	movi	r5,3
  838288:	a1416726 	beq	r20,r5,838828 <__ssvfscanf_r+0x1208>
  83828c:	01000104 	movi	r4,4
  838290:	a101491e 	bne	r20,r4,8387b8 <__ssvfscanf_r+0x1198>
  838294:	b809883a 	mov	r4,r23
  838298:	083d7600 	call	83d760 <_localeconv_r>
  83829c:	10800017 	ldw	r2,0(r2)
  8382a0:	e0ffffc4 	addi	r3,fp,-1
  8382a4:	d880a315 	stw	r2,652(sp)
  8382a8:	00805704 	movi	r2,348
  8382ac:	10c21e2e 	bgeu	r2,r3,838b28 <__ssvfscanf_r+0x1508>
  8382b0:	e73fa8c4 	addi	fp,fp,-349
  8382b4:	df00a215 	stw	fp,648(sp)
  8382b8:	07005744 	movi	fp,349
  8382bc:	8d01e014 	ori	r20,r17,1920
  8382c0:	0023883a 	mov	r17,zero
  8382c4:	dc000104 	addi	r16,sp,4
  8382c8:	002b883a 	mov	r21,zero
  8382cc:	8805883a 	mov	r2,r17
  8382d0:	0007883a 	mov	r3,zero
  8382d4:	8023883a 	mov	r17,r16
  8382d8:	b80d883a 	mov	r6,r23
  8382dc:	e021883a 	mov	r16,fp
  8382e0:	a82f883a 	mov	r23,r21
  8382e4:	d800a515 	stw	zero,660(sp)
  8382e8:	d800a415 	stw	zero,656(sp)
  8382ec:	d8009f15 	stw	zero,636(sp)
  8382f0:	01c01384 	movi	r7,78
  8382f4:	182b883a 	mov	r21,r3
  8382f8:	1039883a 	mov	fp,r2
  8382fc:	99000017 	ldw	r4,0(r19)
  838300:	21400003 	ldbu	r5,0(r4)
  838304:	28bff544 	addi	r2,r5,-43
  838308:	10803fcc 	andi	r2,r2,255
  83830c:	38810e36 	bltu	r7,r2,838748 <__ssvfscanf_r+0x1128>
  838310:	100490ba 	slli	r2,r2,2
  838314:	00c02134 	movhi	r3,132
  838318:	18e0ca04 	addi	r3,r3,-31960
  83831c:	10c5883a 	add	r2,r2,r3
  838320:	10800017 	ldw	r2,0(r2)
  838324:	1000683a 	jmp	r2
  838328:	0083861c 	xori	r2,zero,3608
  83832c:	00838748 	cmpgei	r2,zero,3613
  838330:	0083861c 	xori	r2,zero,3608
  838334:	00838748 	cmpgei	r2,zero,3613
  838338:	00838748 	cmpgei	r2,zero,3613
  83833c:	008385f0 	cmpltui	r2,zero,3607
  838340:	00838464 	muli	r2,zero,3601
  838344:	00838464 	muli	r2,zero,3601
  838348:	00838464 	muli	r2,zero,3601
  83834c:	00838464 	muli	r2,zero,3601
  838350:	00838464 	muli	r2,zero,3601
  838354:	00838464 	muli	r2,zero,3601
  838358:	00838464 	muli	r2,zero,3601
  83835c:	00838464 	muli	r2,zero,3601
  838360:	00838464 	muli	r2,zero,3601
  838364:	00838748 	cmpgei	r2,zero,3613
  838368:	00838748 	cmpgei	r2,zero,3613
  83836c:	00838748 	cmpgei	r2,zero,3613
  838370:	00838748 	cmpgei	r2,zero,3613
  838374:	00838748 	cmpgei	r2,zero,3613
  838378:	00838748 	cmpgei	r2,zero,3613
  83837c:	00838748 	cmpgei	r2,zero,3613
  838380:	00838738 	rdprs	r2,zero,3612
  838384:	00838748 	cmpgei	r2,zero,3613
  838388:	00838748 	cmpgei	r2,zero,3613
  83838c:	00838748 	cmpgei	r2,zero,3613
  838390:	008386f4 	movhi	r2,3611
  838394:	008386d8 	cmpnei	r2,zero,3611
  838398:	00838748 	cmpgei	r2,zero,3613
  83839c:	00838748 	cmpgei	r2,zero,3613
  8383a0:	008386a0 	cmpeqi	r2,zero,3610
  8383a4:	00838748 	cmpgei	r2,zero,3613
  8383a8:	00838748 	cmpgei	r2,zero,3613
  8383ac:	00838748 	cmpgei	r2,zero,3613
  8383b0:	00838748 	cmpgei	r2,zero,3613
  8383b4:	00838668 	cmpgeui	r2,zero,3609
  8383b8:	00838748 	cmpgei	r2,zero,3613
  8383bc:	00838748 	cmpgei	r2,zero,3613
  8383c0:	00838748 	cmpgei	r2,zero,3613
  8383c4:	00838748 	cmpgei	r2,zero,3613
  8383c8:	00838748 	cmpgei	r2,zero,3613
  8383cc:	0083864c 	andi	r2,zero,3609
  8383d0:	00838748 	cmpgei	r2,zero,3613
  8383d4:	00838748 	cmpgei	r2,zero,3613
  8383d8:	00838748 	cmpgei	r2,zero,3613
  8383dc:	00838748 	cmpgei	r2,zero,3613
  8383e0:	00838630 	cmpltui	r2,zero,3608
  8383e4:	00838748 	cmpgei	r2,zero,3613
  8383e8:	00838748 	cmpgei	r2,zero,3613
  8383ec:	00838748 	cmpgei	r2,zero,3613
  8383f0:	00838748 	cmpgei	r2,zero,3613
  8383f4:	00838748 	cmpgei	r2,zero,3613
  8383f8:	00838748 	cmpgei	r2,zero,3613
  8383fc:	00838748 	cmpgei	r2,zero,3613
  838400:	00838738 	rdprs	r2,zero,3612
  838404:	00838748 	cmpgei	r2,zero,3613
  838408:	00838748 	cmpgei	r2,zero,3613
  83840c:	00838748 	cmpgei	r2,zero,3613
  838410:	008386f4 	movhi	r2,3611
  838414:	008386d8 	cmpnei	r2,zero,3611
  838418:	00838748 	cmpgei	r2,zero,3613
  83841c:	00838748 	cmpgei	r2,zero,3613
  838420:	008386a0 	cmpeqi	r2,zero,3610
  838424:	00838748 	cmpgei	r2,zero,3613
  838428:	00838748 	cmpgei	r2,zero,3613
  83842c:	00838748 	cmpgei	r2,zero,3613
  838430:	00838748 	cmpgei	r2,zero,3613
  838434:	00838668 	cmpgeui	r2,zero,3609
  838438:	00838748 	cmpgei	r2,zero,3613
  83843c:	00838748 	cmpgei	r2,zero,3613
  838440:	00838748 	cmpgei	r2,zero,3613
  838444:	00838748 	cmpgei	r2,zero,3613
  838448:	00838748 	cmpgei	r2,zero,3613
  83844c:	0083864c 	andi	r2,zero,3609
  838450:	00838748 	cmpgei	r2,zero,3613
  838454:	00838748 	cmpgei	r2,zero,3613
  838458:	00838748 	cmpgei	r2,zero,3613
  83845c:	00838748 	cmpgei	r2,zero,3613
  838460:	00838630 	cmpltui	r2,zero,3608
  838464:	a8803fcc 	andi	r2,r21,255
  838468:	1080201c 	xori	r2,r2,128
  83846c:	10bfe004 	addi	r2,r2,-128
  838470:	b885883a 	add	r2,r23,r2
  838474:	10000d1e 	bne	r2,zero,8384ac <__ssvfscanf_r+0xe8c>
  838478:	00bf9fc4 	movi	r2,-385
  83847c:	a0a8703a 	and	r20,r20,r2
  838480:	89400005 	stb	r5,0(r17)
  838484:	8c400044 	addi	r17,r17,1
  838488:	98800117 	ldw	r2,4(r19)
  83848c:	843fffc4 	addi	r16,r16,-1
  838490:	94800044 	addi	r18,r18,1
  838494:	10bfffc4 	addi	r2,r2,-1
  838498:	98800115 	stw	r2,4(r19)
  83849c:	0080b40e 	bge	zero,r2,838770 <__ssvfscanf_r+0x1150>
  8384a0:	21000044 	addi	r4,r4,1
  8384a4:	99000015 	stw	r4,0(r19)
  8384a8:	803f941e 	bne	r16,zero,8382fc <__alt_mem_epcs_flash_controller_0+0xff82f2fc>
  8384ac:	8821883a 	mov	r16,r17
  8384b0:	a807883a 	mov	r3,r21
  8384b4:	e023883a 	mov	r17,fp
  8384b8:	b82b883a 	mov	r21,r23
  8384bc:	302f883a 	mov	r23,r6
  8384c0:	e001961e 	bne	fp,zero,838b1c <__ssvfscanf_r+0x14fc>
  8384c4:	ab3fffc4 	addi	r12,r21,-1
  8384c8:	00800044 	movi	r2,1
  8384cc:	1302a22e 	bgeu	r2,r12,838f58 <__ssvfscanf_r+0x1938>
  8384d0:	18803fcc 	andi	r2,r3,255
  8384d4:	1080201c 	xori	r2,r2,128
  8384d8:	10bfe004 	addi	r2,r2,-128
  8384dc:	113fffc4 	addi	r4,r2,-1
  8384e0:	01400184 	movi	r5,6
  8384e4:	29001136 	bltu	r5,r4,83852c <__ssvfscanf_r+0xf0c>
  8384e8:	01000084 	movi	r4,2
  8384ec:	2082770e 	bge	r4,r2,838ecc <__ssvfscanf_r+0x18ac>
  8384f0:	054000c4 	movi	r21,3
  8384f4:	1839883a 	mov	fp,r3
  8384f8:	15400c26 	beq	r2,r21,83852c <__ssvfscanf_r+0xf0c>
  8384fc:	9425c83a 	sub	r18,r18,r16
  838500:	843fffc4 	addi	r16,r16,-1
  838504:	81400007 	ldb	r5,0(r16)
  838508:	980d883a 	mov	r6,r19
  83850c:	b809883a 	mov	r4,r23
  838510:	0842b6c0 	call	842b6c <_sungetc_r>
  838514:	e0bfffc4 	addi	r2,fp,-1
  838518:	10c03fcc 	andi	r3,r2,255
  83851c:	8493883a 	add	r9,r16,r18
  838520:	1039883a 	mov	fp,r2
  838524:	a8fff636 	bltu	r21,r3,838500 <__alt_mem_epcs_flash_controller_0+0xff82f500>
  838528:	4825883a 	mov	r18,r9
  83852c:	a080400c 	andi	r2,r20,256
  838530:	10001426 	beq	r2,zero,838584 <__ssvfscanf_r+0xf64>
  838534:	a081000c 	andi	r2,r20,1024
  838538:	10027b1e 	bne	r2,zero,838f28 <__ssvfscanf_r+0x1908>
  83853c:	817fffc7 	ldb	r5,-1(r16)
  838540:	00801944 	movi	r2,101
  838544:	873fffc4 	addi	fp,r16,-1
  838548:	957fffc4 	addi	r21,r18,-1
  83854c:	28800826 	beq	r5,r2,838570 <__ssvfscanf_r+0xf50>
  838550:	00801144 	movi	r2,69
  838554:	28800626 	beq	r5,r2,838570 <__ssvfscanf_r+0xf50>
  838558:	980d883a 	mov	r6,r19
  83855c:	b809883a 	mov	r4,r23
  838560:	0842b6c0 	call	842b6c <_sungetc_r>
  838564:	817fff87 	ldb	r5,-2(r16)
  838568:	873fff84 	addi	fp,r16,-2
  83856c:	957fff84 	addi	r21,r18,-2
  838570:	980d883a 	mov	r6,r19
  838574:	b809883a 	mov	r4,r23
  838578:	0842b6c0 	call	842b6c <_sungetc_r>
  83857c:	a825883a 	mov	r18,r21
  838580:	e021883a 	mov	r16,fp
  838584:	a080040c 	andi	r2,r20,16
  838588:	103e451e 	bne	r2,zero,837ea0 <__alt_mem_epcs_flash_controller_0+0xff82eea0>
  83858c:	80000005 	stb	zero,0(r16)
  838590:	a081800c 	andi	r2,r20,1536
  838594:	01010004 	movi	r4,1024
  838598:	1101ea26 	beq	r2,r4,838d44 <__ssvfscanf_r+0x1724>
  83859c:	d8c0a417 	ldw	r3,656(sp)
  8385a0:	1801f41e 	bne	r3,zero,838d74 <__ssvfscanf_r+0x1754>
  8385a4:	000d883a 	mov	r6,zero
  8385a8:	d9400104 	addi	r5,sp,4
  8385ac:	b809883a 	mov	r4,r23
  8385b0:	083f3d40 	call	83f3d4 <_strtod_r>
  8385b4:	1021883a 	mov	r16,r2
  8385b8:	a080004c 	andi	r2,r20,1
  8385bc:	1001b926 	beq	r2,zero,838ca4 <__ssvfscanf_r+0x1684>
  8385c0:	d9009c17 	ldw	r4,624(sp)
  8385c4:	20800017 	ldw	r2,0(r4)
  8385c8:	21000104 	addi	r4,r4,4
  8385cc:	d9009c15 	stw	r4,624(sp)
  8385d0:	14000015 	stw	r16,0(r2)
  8385d4:	10c00115 	stw	r3,4(r2)
  8385d8:	d8c0a017 	ldw	r3,640(sp)
  8385dc:	dd009d17 	ldw	r20,628(sp)
  8385e0:	18c00044 	addi	r3,r3,1
  8385e4:	d8c0a015 	stw	r3,640(sp)
  8385e8:	a00d883a 	mov	r6,r20
  8385ec:	003c4906 	br	837714 <__alt_mem_epcs_flash_controller_0+0xff82e714>
  8385f0:	a080400c 	andi	r2,r20,256
  8385f4:	103f9b26 	beq	r2,zero,838464 <__alt_mem_epcs_flash_controller_0+0xff82f464>
  8385f8:	d8c0a217 	ldw	r3,648(sp)
  8385fc:	00bfdfc4 	movi	r2,-129
  838600:	a0a8703a 	and	r20,r20,r2
  838604:	e7000044 	addi	fp,fp,1
  838608:	183f9f26 	beq	r3,zero,838488 <__alt_mem_epcs_flash_controller_0+0xff82f488>
  83860c:	18ffffc4 	addi	r3,r3,-1
  838610:	d8c0a215 	stw	r3,648(sp)
  838614:	84000044 	addi	r16,r16,1
  838618:	003f9b06 	br	838488 <__alt_mem_epcs_flash_controller_0+0xff82f488>
  83861c:	a080200c 	andi	r2,r20,128
  838620:	103fa226 	beq	r2,zero,8384ac <__alt_mem_epcs_flash_controller_0+0xff82f4ac>
  838624:	00bfdfc4 	movi	r2,-129
  838628:	a0a8703a 	and	r20,r20,r2
  83862c:	003f9406 	br	838480 <__alt_mem_epcs_flash_controller_0+0xff82f480>
  838630:	a8803fcc 	andi	r2,r21,255
  838634:	1080201c 	xori	r2,r2,128
  838638:	10bfe004 	addi	r2,r2,-128
  83863c:	00c001c4 	movi	r3,7
  838640:	10ff9a1e 	bne	r2,r3,8384ac <__alt_mem_epcs_flash_controller_0+0xff82f4ac>
  838644:	05400204 	movi	r21,8
  838648:	003f8d06 	br	838480 <__alt_mem_epcs_flash_controller_0+0xff82f480>
  83864c:	a8803fcc 	andi	r2,r21,255
  838650:	1080201c 	xori	r2,r2,128
  838654:	10bfe004 	addi	r2,r2,-128
  838658:	02000184 	movi	r8,6
  83865c:	123f931e 	bne	r2,r8,8384ac <__alt_mem_epcs_flash_controller_0+0xff82f4ac>
  838660:	054001c4 	movi	r21,7
  838664:	003f8606 	br	838480 <__alt_mem_epcs_flash_controller_0+0xff82f480>
  838668:	b8004f1e 	bne	r23,zero,8387a8 <__ssvfscanf_r+0x1188>
  83866c:	e000031e 	bne	fp,zero,83867c <__ssvfscanf_r+0x105c>
  838670:	a081c00c 	andi	r2,r20,1792
  838674:	0201c004 	movi	r8,1792
  838678:	1201a226 	beq	r2,r8,838d04 <__ssvfscanf_r+0x16e4>
  83867c:	a8803fcc 	andi	r2,r21,255
  838680:	1080201c 	xori	r2,r2,128
  838684:	10bfe004 	addi	r2,r2,-128
  838688:	02000044 	movi	r8,1
  83868c:	12000226 	beq	r2,r8,838698 <__ssvfscanf_r+0x1078>
  838690:	02000104 	movi	r8,4
  838694:	123f851e 	bne	r2,r8,8384ac <__alt_mem_epcs_flash_controller_0+0xff82f4ac>
  838698:	ad400044 	addi	r21,r21,1
  83869c:	003f7806 	br	838480 <__alt_mem_epcs_flash_controller_0+0xff82f480>
  8386a0:	a8803fcc 	andi	r2,r21,255
  8386a4:	1080201c 	xori	r2,r2,128
  8386a8:	10bfe004 	addi	r2,r2,-128
  8386ac:	1000391e 	bne	r2,zero,838794 <__ssvfscanf_r+0x1174>
  8386b0:	e001151e 	bne	fp,zero,838b08 <__ssvfscanf_r+0x14e8>
  8386b4:	a081c00c 	andi	r2,r20,1792
  8386b8:	0201c004 	movi	r8,1792
  8386bc:	12019b26 	beq	r2,r8,838d2c <__ssvfscanf_r+0x170c>
  8386c0:	8821883a 	mov	r16,r17
  8386c4:	a807883a 	mov	r3,r21
  8386c8:	e023883a 	mov	r17,fp
  8386cc:	b82b883a 	mov	r21,r23
  8386d0:	302f883a 	mov	r23,r6
  8386d4:	003f7b06 	br	8384c4 <__alt_mem_epcs_flash_controller_0+0xff82f4c4>
  8386d8:	a8803fcc 	andi	r2,r21,255
  8386dc:	1080201c 	xori	r2,r2,128
  8386e0:	10bfe004 	addi	r2,r2,-128
  8386e4:	02000084 	movi	r8,2
  8386e8:	123f701e 	bne	r2,r8,8384ac <__alt_mem_epcs_flash_controller_0+0xff82f4ac>
  8386ec:	054000c4 	movi	r21,3
  8386f0:	003f6306 	br	838480 <__alt_mem_epcs_flash_controller_0+0xff82f480>
  8386f4:	a081400c 	andi	r2,r20,1280
  8386f8:	00c10004 	movi	r3,1024
  8386fc:	10c00326 	beq	r2,r3,83870c <__ssvfscanf_r+0x10ec>
  838700:	a0c4703a 	and	r2,r20,r3
  838704:	103f6926 	beq	r2,zero,8384ac <__alt_mem_epcs_flash_controller_0+0xff82f4ac>
  838708:	e03fed26 	beq	fp,zero,8386c0 <__alt_mem_epcs_flash_controller_0+0xff82f6c0>
  83870c:	a080800c 	andi	r2,r20,512
  838710:	1000041e 	bne	r2,zero,838724 <__ssvfscanf_r+0x1104>
  838714:	d8c09f17 	ldw	r3,636(sp)
  838718:	dc40a515 	stw	r17,660(sp)
  83871c:	e0f9c83a 	sub	fp,fp,r3
  838720:	df00a415 	stw	fp,656(sp)
  838724:	00be1fc4 	movi	r2,-1921
  838728:	a0a8703a 	and	r20,r20,r2
  83872c:	a5006014 	ori	r20,r20,384
  838730:	0039883a 	mov	fp,zero
  838734:	003f5206 	br	838480 <__alt_mem_epcs_flash_controller_0+0xff82f480>
  838738:	00800044 	movi	r2,1
  83873c:	b8bf5b1e 	bne	r23,r2,8384ac <__alt_mem_epcs_flash_controller_0+0xff82f4ac>
  838740:	05c00084 	movi	r23,2
  838744:	003f4e06 	br	838480 <__alt_mem_epcs_flash_controller_0+0xff82f480>
  838748:	d8c0a317 	ldw	r3,652(sp)
  83874c:	2a003fcc 	andi	r8,r5,255
  838750:	18800003 	ldbu	r2,0(r3)
  838754:	40bf551e 	bne	r8,r2,8384ac <__alt_mem_epcs_flash_controller_0+0xff82f4ac>
  838758:	a080800c 	andi	r2,r20,512
  83875c:	103f5326 	beq	r2,zero,8384ac <__alt_mem_epcs_flash_controller_0+0xff82f4ac>
  838760:	00bf5fc4 	movi	r2,-641
  838764:	a0a8703a 	and	r20,r20,r2
  838768:	df009f15 	stw	fp,636(sp)
  83876c:	003f4406 	br	838480 <__alt_mem_epcs_flash_controller_0+0xff82f480>
  838770:	3009883a 	mov	r4,r6
  838774:	980b883a 	mov	r5,r19
  838778:	d980a915 	stw	r6,676(sp)
  83877c:	d9c0aa15 	stw	r7,680(sp)
  838780:	0842c740 	call	842c74 <__ssrefill_r>
  838784:	d980a917 	ldw	r6,676(sp)
  838788:	d9c0aa17 	ldw	r7,680(sp)
  83878c:	103f4626 	beq	r2,zero,8384a8 <__alt_mem_epcs_flash_controller_0+0xff82f4a8>
  838790:	003f4606 	br	8384ac <__alt_mem_epcs_flash_controller_0+0xff82f4ac>
  838794:	020000c4 	movi	r8,3
  838798:	123fbf26 	beq	r2,r8,838698 <__alt_mem_epcs_flash_controller_0+0xff82f698>
  83879c:	02000144 	movi	r8,5
  8387a0:	123fbd26 	beq	r2,r8,838698 <__alt_mem_epcs_flash_controller_0+0xff82f698>
  8387a4:	003f4106 	br	8384ac <__alt_mem_epcs_flash_controller_0+0xff82f4ac>
  8387a8:	00800084 	movi	r2,2
  8387ac:	b8bfb31e 	bne	r23,r2,83867c <__alt_mem_epcs_flash_controller_0+0xff82f67c>
  8387b0:	05c000c4 	movi	r23,3
  8387b4:	003f3206 	br	838480 <__alt_mem_epcs_flash_controller_0+0xff82f480>
  8387b8:	e000011e 	bne	fp,zero,8387c0 <__ssvfscanf_r+0x11a0>
  8387bc:	073fffc4 	movi	fp,-1
  8387c0:	8900004c 	andi	r4,r17,1
  8387c4:	20011d1e 	bne	r4,zero,838c3c <__ssvfscanf_r+0x161c>
  8387c8:	8c40040c 	andi	r17,r17,16
  8387cc:	8800da26 	beq	r17,zero,838b38 <__ssvfscanf_r+0x1518>
  8387d0:	0023883a 	mov	r17,zero
  8387d4:	00000306 	br	8387e4 <__ssvfscanf_r+0x11c4>
  8387d8:	18800003 	ldbu	r2,0(r3)
  8387dc:	8085883a 	add	r2,r16,r2
  8387e0:	10800043 	ldbu	r2,1(r2)
  8387e4:	1080020c 	andi	r2,r2,8
  8387e8:	1000fc1e 	bne	r2,zero,838bdc <__ssvfscanf_r+0x15bc>
  8387ec:	98800117 	ldw	r2,4(r19)
  8387f0:	18c00044 	addi	r3,r3,1
  8387f4:	8c400044 	addi	r17,r17,1
  8387f8:	10bfffc4 	addi	r2,r2,-1
  8387fc:	98800115 	stw	r2,4(r19)
  838800:	98c00015 	stw	r3,0(r19)
  838804:	8f00f526 	beq	r17,fp,838bdc <__ssvfscanf_r+0x15bc>
  838808:	00bff316 	blt	zero,r2,8387d8 <__alt_mem_epcs_flash_controller_0+0xff82f7d8>
  83880c:	980b883a 	mov	r5,r19
  838810:	b809883a 	mov	r4,r23
  838814:	0842c740 	call	842c74 <__ssrefill_r>
  838818:	1000f01e 	bne	r2,zero,838bdc <__ssvfscanf_r+0x15bc>
  83881c:	b4000017 	ldw	r16,0(r22)
  838820:	98c00017 	ldw	r3,0(r19)
  838824:	003fec06 	br	8387d8 <__alt_mem_epcs_flash_controller_0+0xff82f7d8>
  838828:	e0bfffc4 	addi	r2,fp,-1
  83882c:	01405704 	movi	r5,348
  838830:	2880bf2e 	bgeu	r5,r2,838b30 <__ssvfscanf_r+0x1510>
  838834:	e1ffa8c4 	addi	r7,fp,-349
  838838:	07005744 	movi	fp,349
  83883c:	8c436014 	ori	r17,r17,3456
  838840:	9013883a 	mov	r9,r18
  838844:	8825883a 	mov	r18,r17
  838848:	dc409e17 	ldw	r17,632(sp)
  83884c:	0029883a 	mov	r20,zero
  838850:	dc000104 	addi	r16,sp,4
  838854:	05401344 	movi	r21,77
  838858:	02c08004 	movi	r11,512
  83885c:	01bf7fc4 	movi	r6,-513
  838860:	023fdfc4 	movi	r8,-129
  838864:	20bff544 	addi	r2,r4,-43
  838868:	10803fcc 	andi	r2,r2,255
  83886c:	a8807236 	bltu	r21,r2,838a38 <__ssvfscanf_r+0x1418>
  838870:	100490ba 	slli	r2,r2,2
  838874:	01402134 	movhi	r5,132
  838878:	29622204 	addi	r5,r5,-30584
  83887c:	1145883a 	add	r2,r2,r5
  838880:	10800017 	ldw	r2,0(r2)
  838884:	1000683a 	jmp	r2
  838888:	00838abc 	xorhi	r2,zero,3626
  83888c:	00838a38 	rdprs	r2,zero,3624
  838890:	00838abc 	xorhi	r2,zero,3626
  838894:	00838a38 	rdprs	r2,zero,3624
  838898:	00838a38 	rdprs	r2,zero,3624
  83889c:	00838a94 	movui	r2,3626
  8388a0:	00838a74 	movhi	r2,3625
  8388a4:	00838a74 	movhi	r2,3625
  8388a8:	00838a74 	movhi	r2,3625
  8388ac:	00838a74 	movhi	r2,3625
  8388b0:	00838a74 	movhi	r2,3625
  8388b4:	00838a74 	movhi	r2,3625
  8388b8:	00838a74 	movhi	r2,3625
  8388bc:	00838a1c 	xori	r2,zero,3624
  8388c0:	00838a1c 	xori	r2,zero,3624
  8388c4:	00838a38 	rdprs	r2,zero,3624
  8388c8:	00838a38 	rdprs	r2,zero,3624
  8388cc:	00838a38 	rdprs	r2,zero,3624
  8388d0:	00838a38 	rdprs	r2,zero,3624
  8388d4:	00838a38 	rdprs	r2,zero,3624
  8388d8:	00838a38 	rdprs	r2,zero,3624
  8388dc:	00838a38 	rdprs	r2,zero,3624
  8388e0:	00838a08 	cmpgei	r2,zero,3624
  8388e4:	00838a08 	cmpgei	r2,zero,3624
  8388e8:	00838a08 	cmpgei	r2,zero,3624
  8388ec:	00838a08 	cmpgei	r2,zero,3624
  8388f0:	00838a08 	cmpgei	r2,zero,3624
  8388f4:	00838a08 	cmpgei	r2,zero,3624
  8388f8:	00838a38 	rdprs	r2,zero,3624
  8388fc:	00838a38 	rdprs	r2,zero,3624
  838900:	00838a38 	rdprs	r2,zero,3624
  838904:	00838a38 	rdprs	r2,zero,3624
  838908:	00838a38 	rdprs	r2,zero,3624
  83890c:	00838a38 	rdprs	r2,zero,3624
  838910:	00838a38 	rdprs	r2,zero,3624
  838914:	00838a38 	rdprs	r2,zero,3624
  838918:	00838a38 	rdprs	r2,zero,3624
  83891c:	00838a38 	rdprs	r2,zero,3624
  838920:	00838a38 	rdprs	r2,zero,3624
  838924:	00838a38 	rdprs	r2,zero,3624
  838928:	00838a38 	rdprs	r2,zero,3624
  83892c:	00838a38 	rdprs	r2,zero,3624
  838930:	00838a38 	rdprs	r2,zero,3624
  838934:	00838a38 	rdprs	r2,zero,3624
  838938:	00838a38 	rdprs	r2,zero,3624
  83893c:	008389c0 	call	8389c <OSCtxSw_SWITCH_PC+0x8385c>
  838940:	00838a38 	rdprs	r2,zero,3624
  838944:	00838a38 	rdprs	r2,zero,3624
  838948:	00838a38 	rdprs	r2,zero,3624
  83894c:	00838a38 	rdprs	r2,zero,3624
  838950:	00838a38 	rdprs	r2,zero,3624
  838954:	00838a38 	rdprs	r2,zero,3624
  838958:	00838a38 	rdprs	r2,zero,3624
  83895c:	00838a38 	rdprs	r2,zero,3624
  838960:	00838a08 	cmpgei	r2,zero,3624
  838964:	00838a08 	cmpgei	r2,zero,3624
  838968:	00838a08 	cmpgei	r2,zero,3624
  83896c:	00838a08 	cmpgei	r2,zero,3624
  838970:	00838a08 	cmpgei	r2,zero,3624
  838974:	00838a08 	cmpgei	r2,zero,3624
  838978:	00838a38 	rdprs	r2,zero,3624
  83897c:	00838a38 	rdprs	r2,zero,3624
  838980:	00838a38 	rdprs	r2,zero,3624
  838984:	00838a38 	rdprs	r2,zero,3624
  838988:	00838a38 	rdprs	r2,zero,3624
  83898c:	00838a38 	rdprs	r2,zero,3624
  838990:	00838a38 	rdprs	r2,zero,3624
  838994:	00838a38 	rdprs	r2,zero,3624
  838998:	00838a38 	rdprs	r2,zero,3624
  83899c:	00838a38 	rdprs	r2,zero,3624
  8389a0:	00838a38 	rdprs	r2,zero,3624
  8389a4:	00838a38 	rdprs	r2,zero,3624
  8389a8:	00838a38 	rdprs	r2,zero,3624
  8389ac:	00838a38 	rdprs	r2,zero,3624
  8389b0:	00838a38 	rdprs	r2,zero,3624
  8389b4:	00838a38 	rdprs	r2,zero,3624
  8389b8:	00838a38 	rdprs	r2,zero,3624
  8389bc:	008389c0 	call	8389c <OSCtxSw_SWITCH_PC+0x8385c>
  8389c0:	9081800c 	andi	r2,r18,1536
  8389c4:	12c01c1e 	bne	r2,r11,838a38 <__ssvfscanf_r+0x1418>
  8389c8:	91a4703a 	and	r18,r18,r6
  8389cc:	94814014 	ori	r18,r18,1280
  8389d0:	04400404 	movi	r17,16
  8389d4:	81000005 	stb	r4,0(r16)
  8389d8:	84000044 	addi	r16,r16,1
  8389dc:	98800117 	ldw	r2,4(r19)
  8389e0:	10bfffc4 	addi	r2,r2,-1
  8389e4:	98800115 	stw	r2,4(r19)
  8389e8:	0080380e 	bge	zero,r2,838acc <__ssvfscanf_r+0x14ac>
  8389ec:	18c00044 	addi	r3,r3,1
  8389f0:	98c00015 	stw	r3,0(r19)
  8389f4:	e73fffc4 	addi	fp,fp,-1
  8389f8:	e0000f26 	beq	fp,zero,838a38 <__ssvfscanf_r+0x1418>
  8389fc:	98c00017 	ldw	r3,0(r19)
  838a00:	19000003 	ldbu	r4,0(r3)
  838a04:	003f9706 	br	838864 <__alt_mem_epcs_flash_controller_0+0xff82f864>
  838a08:	00800284 	movi	r2,10
  838a0c:	14400a0e 	bge	r2,r17,838a38 <__ssvfscanf_r+0x1418>
  838a10:	00bd1fc4 	movi	r2,-2945
  838a14:	90a4703a 	and	r18,r18,r2
  838a18:	003fee06 	br	8389d4 <__alt_mem_epcs_flash_controller_0+0xff82f9d4>
  838a1c:	014021b4 	movhi	r5,134
  838a20:	8c63883a 	add	r17,r17,r17
  838a24:	29660f84 	addi	r5,r5,-26562
  838a28:	2c45883a 	add	r2,r5,r17
  838a2c:	1440000f 	ldh	r17,0(r2)
  838a30:	00800204 	movi	r2,8
  838a34:	147ff616 	blt	r2,r17,838a10 <__alt_mem_epcs_flash_controller_0+0xff82fa10>
  838a38:	dc409e15 	stw	r17,632(sp)
  838a3c:	9023883a 	mov	r17,r18
  838a40:	8880400c 	andi	r2,r17,256
  838a44:	4825883a 	mov	r18,r9
  838a48:	10000426 	beq	r2,zero,838a5c <__ssvfscanf_r+0x143c>
  838a4c:	d8800104 	addi	r2,sp,4
  838a50:	1400b036 	bltu	r2,r16,838d14 <__ssvfscanf_r+0x16f4>
  838a54:	d8c00104 	addi	r3,sp,4
  838a58:	1c3b3226 	beq	r3,r16,837724 <__alt_mem_epcs_flash_controller_0+0xff82e724>
  838a5c:	8880040c 	andi	r2,r17,16
  838a60:	10006226 	beq	r2,zero,838bec <__ssvfscanf_r+0x15cc>
  838a64:	d8800104 	addi	r2,sp,4
  838a68:	80a1c83a 	sub	r16,r16,r2
  838a6c:	8521883a 	add	r16,r16,r20
  838a70:	003ca506 	br	837d08 <__alt_mem_epcs_flash_controller_0+0xff82ed08>
  838a74:	014021b4 	movhi	r5,134
  838a78:	8c63883a 	add	r17,r17,r17
  838a7c:	29660f84 	addi	r5,r5,-26562
  838a80:	2c45883a 	add	r2,r5,r17
  838a84:	1440000f 	ldh	r17,0(r2)
  838a88:	00bd1fc4 	movi	r2,-2945
  838a8c:	90a4703a 	and	r18,r18,r2
  838a90:	003fd006 	br	8389d4 <__alt_mem_epcs_flash_controller_0+0xff82f9d4>
  838a94:	9082000c 	andi	r2,r18,2048
  838a98:	103fce26 	beq	r2,zero,8389d4 <__alt_mem_epcs_flash_controller_0+0xff82f9d4>
  838a9c:	8800021e 	bne	r17,zero,838aa8 <__ssvfscanf_r+0x1488>
  838aa0:	94808014 	ori	r18,r18,512
  838aa4:	04400204 	movi	r17,8
  838aa8:	9081000c 	andi	r2,r18,1024
  838aac:	10008626 	beq	r2,zero,838cc8 <__ssvfscanf_r+0x16a8>
  838ab0:	00be9fc4 	movi	r2,-1409
  838ab4:	90a4703a 	and	r18,r18,r2
  838ab8:	003fc606 	br	8389d4 <__alt_mem_epcs_flash_controller_0+0xff82f9d4>
  838abc:	9080200c 	andi	r2,r18,128
  838ac0:	103fdd26 	beq	r2,zero,838a38 <__alt_mem_epcs_flash_controller_0+0xff82fa38>
  838ac4:	9224703a 	and	r18,r18,r8
  838ac8:	003fc206 	br	8389d4 <__alt_mem_epcs_flash_controller_0+0xff82f9d4>
  838acc:	980b883a 	mov	r5,r19
  838ad0:	b809883a 	mov	r4,r23
  838ad4:	d980a915 	stw	r6,676(sp)
  838ad8:	d9c0aa15 	stw	r7,680(sp)
  838adc:	da00a715 	stw	r8,668(sp)
  838ae0:	da40a815 	stw	r9,672(sp)
  838ae4:	dac0a615 	stw	r11,664(sp)
  838ae8:	0842c740 	call	842c74 <__ssrefill_r>
  838aec:	d980a917 	ldw	r6,676(sp)
  838af0:	d9c0aa17 	ldw	r7,680(sp)
  838af4:	da00a717 	ldw	r8,668(sp)
  838af8:	da40a817 	ldw	r9,672(sp)
  838afc:	dac0a617 	ldw	r11,664(sp)
  838b00:	103fbc26 	beq	r2,zero,8389f4 <__alt_mem_epcs_flash_controller_0+0xff82f9f4>
  838b04:	003fcc06 	br	838a38 <__alt_mem_epcs_flash_controller_0+0xff82fa38>
  838b08:	8821883a 	mov	r16,r17
  838b0c:	a807883a 	mov	r3,r21
  838b10:	e023883a 	mov	r17,fp
  838b14:	b82b883a 	mov	r21,r23
  838b18:	302f883a 	mov	r23,r6
  838b1c:	00bfbfc4 	movi	r2,-257
  838b20:	a0a8703a 	and	r20,r20,r2
  838b24:	003e6706 	br	8384c4 <__alt_mem_epcs_flash_controller_0+0xff82f4c4>
  838b28:	d800a215 	stw	zero,648(sp)
  838b2c:	003de306 	br	8382bc <__alt_mem_epcs_flash_controller_0+0xff82f2bc>
  838b30:	000f883a 	mov	r7,zero
  838b34:	003f4106 	br	83883c <__alt_mem_epcs_flash_controller_0+0xff82f83c>
  838b38:	d9409c17 	ldw	r5,624(sp)
  838b3c:	e2bfffc4 	addi	r10,fp,-1
  838b40:	2c400017 	ldw	r17,0(r5)
  838b44:	2c000104 	addi	r16,r5,4
  838b48:	8aa9883a 	add	r20,r17,r10
  838b4c:	880b883a 	mov	r5,r17
  838b50:	00000606 	br	838b6c <__ssvfscanf_r+0x154c>
  838b54:	98c00017 	ldw	r3,0(r19)
  838b58:	b1000017 	ldw	r4,0(r22)
  838b5c:	a80b883a 	mov	r5,r21
  838b60:	18800003 	ldbu	r2,0(r3)
  838b64:	2085883a 	add	r2,r4,r2
  838b68:	10800043 	ldbu	r2,1(r2)
  838b6c:	1080020c 	andi	r2,r2,8
  838b70:	1000621e 	bne	r2,zero,838cfc <__ssvfscanf_r+0x16dc>
  838b74:	98800117 	ldw	r2,4(r19)
  838b78:	19000044 	addi	r4,r3,1
  838b7c:	99000015 	stw	r4,0(r19)
  838b80:	10bfffc4 	addi	r2,r2,-1
  838b84:	98800115 	stw	r2,4(r19)
  838b88:	18800003 	ldbu	r2,0(r3)
  838b8c:	2d400044 	addi	r21,r5,1
  838b90:	a839883a 	mov	fp,r21
  838b94:	28800005 	stb	r2,0(r5)
  838b98:	2d000626 	beq	r5,r20,838bb4 <__ssvfscanf_r+0x1594>
  838b9c:	98800117 	ldw	r2,4(r19)
  838ba0:	00bfec16 	blt	zero,r2,838b54 <__alt_mem_epcs_flash_controller_0+0xff82fb54>
  838ba4:	980b883a 	mov	r5,r19
  838ba8:	b809883a 	mov	r4,r23
  838bac:	0842c740 	call	842c74 <__ssrefill_r>
  838bb0:	103fe826 	beq	r2,zero,838b54 <__alt_mem_epcs_flash_controller_0+0xff82fb54>
  838bb4:	d880a017 	ldw	r2,640(sp)
  838bb8:	dd009d17 	ldw	r20,628(sp)
  838bbc:	e463c83a 	sub	r17,fp,r17
  838bc0:	10800044 	addi	r2,r2,1
  838bc4:	e0000005 	stb	zero,0(fp)
  838bc8:	9465883a 	add	r18,r18,r17
  838bcc:	d880a015 	stw	r2,640(sp)
  838bd0:	dc009c15 	stw	r16,624(sp)
  838bd4:	a00d883a 	mov	r6,r20
  838bd8:	003ace06 	br	837714 <__alt_mem_epcs_flash_controller_0+0xff82e714>
  838bdc:	dd009d17 	ldw	r20,628(sp)
  838be0:	9465883a 	add	r18,r18,r17
  838be4:	a00d883a 	mov	r6,r20
  838be8:	003aca06 	br	837714 <__alt_mem_epcs_flash_controller_0+0xff82e714>
  838bec:	d8c0a117 	ldw	r3,644(sp)
  838bf0:	d9c09e17 	ldw	r7,632(sp)
  838bf4:	000d883a 	mov	r6,zero
  838bf8:	d9400104 	addi	r5,sp,4
  838bfc:	b809883a 	mov	r4,r23
  838c00:	80000005 	stb	zero,0(r16)
  838c04:	183ee83a 	callr	r3
  838c08:	88c0080c 	andi	r3,r17,32
  838c0c:	1800351e 	bne	r3,zero,838ce4 <__ssvfscanf_r+0x16c4>
  838c10:	88c0010c 	andi	r3,r17,4
  838c14:	18007026 	beq	r3,zero,838dd8 <__ssvfscanf_r+0x17b8>
  838c18:	d9409c17 	ldw	r5,624(sp)
  838c1c:	28c00017 	ldw	r3,0(r5)
  838c20:	29400104 	addi	r5,r5,4
  838c24:	d9409c15 	stw	r5,624(sp)
  838c28:	1880000d 	sth	r2,0(r3)
  838c2c:	d940a017 	ldw	r5,640(sp)
  838c30:	29400044 	addi	r5,r5,1
  838c34:	d940a015 	stw	r5,640(sp)
  838c38:	003f8a06 	br	838a64 <__alt_mem_epcs_flash_controller_0+0xff82fa64>
  838c3c:	dd409904 	addi	r21,sp,612
  838c40:	8c40040c 	andi	r17,r17,16
  838c44:	01800204 	movi	r6,8
  838c48:	000b883a 	mov	r5,zero
  838c4c:	a809883a 	mov	r4,r21
  838c50:	0833d940 	call	833d94 <memset>
  838c54:	8800391e 	bne	r17,zero,838d3c <__ssvfscanf_r+0x171c>
  838c58:	d8c09c17 	ldw	r3,624(sp)
  838c5c:	1d000017 	ldw	r20,0(r3)
  838c60:	18c00104 	addi	r3,r3,4
  838c64:	d8c09c15 	stw	r3,624(sp)
  838c68:	000d883a 	mov	r6,zero
  838c6c:	3021883a 	mov	r16,r6
  838c70:	dc409f15 	stw	r17,636(sp)
  838c74:	98800017 	ldw	r2,0(r19)
  838c78:	b0c00017 	ldw	r3,0(r22)
  838c7c:	10800003 	ldbu	r2,0(r2)
  838c80:	1885883a 	add	r2,r3,r2
  838c84:	10800043 	ldbu	r2,1(r2)
  838c88:	1080020c 	andi	r2,r2,8
  838c8c:	1000011e 	bne	r2,zero,838c94 <__ssvfscanf_r+0x1674>
  838c90:	e000651e 	bne	fp,zero,838e28 <__ssvfscanf_r+0x1808>
  838c94:	dc409f17 	ldw	r17,636(sp)
  838c98:	883c811e 	bne	r17,zero,837ea0 <__alt_mem_epcs_flash_controller_0+0xff82eea0>
  838c9c:	a0000015 	stw	zero,0(r20)
  838ca0:	003c7c06 	br	837e94 <__alt_mem_epcs_flash_controller_0+0xff82ee94>
  838ca4:	a2c0008c 	andi	r11,r20,2
  838ca8:	58003c26 	beq	r11,zero,838d9c <__ssvfscanf_r+0x177c>
  838cac:	d9409c17 	ldw	r5,624(sp)
  838cb0:	28800017 	ldw	r2,0(r5)
  838cb4:	29400104 	addi	r5,r5,4
  838cb8:	d9409c15 	stw	r5,624(sp)
  838cbc:	14000015 	stw	r16,0(r2)
  838cc0:	10c00115 	stw	r3,4(r2)
  838cc4:	003e4406 	br	8385d8 <__alt_mem_epcs_flash_controller_0+0xff82f5d8>
  838cc8:	00bf1fc4 	movi	r2,-897
  838ccc:	90a4703a 	and	r18,r18,r2
  838cd0:	38000226 	beq	r7,zero,838cdc <__ssvfscanf_r+0x16bc>
  838cd4:	39ffffc4 	addi	r7,r7,-1
  838cd8:	e7000044 	addi	fp,fp,1
  838cdc:	a5000044 	addi	r20,r20,1
  838ce0:	003f3e06 	br	8389dc <__alt_mem_epcs_flash_controller_0+0xff82f9dc>
  838ce4:	d9009c17 	ldw	r4,624(sp)
  838ce8:	20c00017 	ldw	r3,0(r4)
  838cec:	21000104 	addi	r4,r4,4
  838cf0:	d9009c15 	stw	r4,624(sp)
  838cf4:	18800015 	stw	r2,0(r3)
  838cf8:	003fcc06 	br	838c2c <__alt_mem_epcs_flash_controller_0+0xff82fc2c>
  838cfc:	2839883a 	mov	fp,r5
  838d00:	003fac06 	br	838bb4 <__alt_mem_epcs_flash_controller_0+0xff82fbb4>
  838d04:	00be1fc4 	movi	r2,-1921
  838d08:	a0a8703a 	and	r20,r20,r2
  838d0c:	05c00044 	movi	r23,1
  838d10:	003ddb06 	br	838480 <__alt_mem_epcs_flash_controller_0+0xff82f480>
  838d14:	817fffc7 	ldb	r5,-1(r16)
  838d18:	980d883a 	mov	r6,r19
  838d1c:	b809883a 	mov	r4,r23
  838d20:	843fffc4 	addi	r16,r16,-1
  838d24:	0842b6c0 	call	842b6c <_sungetc_r>
  838d28:	003f4a06 	br	838a54 <__alt_mem_epcs_flash_controller_0+0xff82fa54>
  838d2c:	00fe1fc4 	movi	r3,-1921
  838d30:	a0e8703a 	and	r20,r20,r3
  838d34:	05400044 	movi	r21,1
  838d38:	003dd106 	br	838480 <__alt_mem_epcs_flash_controller_0+0xff82f480>
  838d3c:	dd009b04 	addi	r20,sp,620
  838d40:	003fc906 	br	838c68 <__alt_mem_epcs_flash_controller_0+0xff82fc68>
  838d44:	d8c09f17 	ldw	r3,636(sp)
  838d48:	88e3c83a 	sub	r17,r17,r3
  838d4c:	044dc83a 	sub	r6,zero,r17
  838d50:	883e1426 	beq	r17,zero,8385a4 <__alt_mem_epcs_flash_controller_0+0xff82f5a4>
  838d54:	d88055c4 	addi	r2,sp,343
  838d58:	80800136 	bltu	r16,r2,838d60 <__ssvfscanf_r+0x1740>
  838d5c:	dc005584 	addi	r16,sp,342
  838d60:	014021b4 	movhi	r5,134
  838d64:	29660e04 	addi	r5,r5,-26568
  838d68:	8009883a 	mov	r4,r16
  838d6c:	0834e740 	call	834e74 <sprintf>
  838d70:	003e0c06 	br	8385a4 <__alt_mem_epcs_flash_controller_0+0xff82f5a4>
  838d74:	d8c0a517 	ldw	r3,660(sp)
  838d78:	000d883a 	mov	r6,zero
  838d7c:	01c00284 	movi	r7,10
  838d80:	19400044 	addi	r5,r3,1
  838d84:	b809883a 	mov	r4,r23
  838d88:	0840ad00 	call	840ad0 <_strtol_r>
  838d8c:	d8c0a417 	ldw	r3,656(sp)
  838d90:	dc00a517 	ldw	r16,660(sp)
  838d94:	10cdc83a 	sub	r6,r2,r3
  838d98:	003fee06 	br	838d54 <__alt_mem_epcs_flash_controller_0+0xff82fd54>
  838d9c:	d8809c17 	ldw	r2,624(sp)
  838da0:	180b883a 	mov	r5,r3
  838da4:	8009883a 	mov	r4,r16
  838da8:	15000017 	ldw	r20,0(r2)
  838dac:	14400104 	addi	r17,r2,4
  838db0:	d8c0a615 	stw	r3,664(sp)
  838db4:	083ee440 	call	83ee44 <__fpclassifyd>
  838db8:	d8c0a617 	ldw	r3,664(sp)
  838dbc:	10007226 	beq	r2,zero,838f88 <__ssvfscanf_r+0x1968>
  838dc0:	8009883a 	mov	r4,r16
  838dc4:	180b883a 	mov	r5,r3
  838dc8:	0831a940 	call	831a94 <__truncdfsf2>
  838dcc:	a0800015 	stw	r2,0(r20)
  838dd0:	dc409c15 	stw	r17,624(sp)
  838dd4:	003e0006 	br	8385d8 <__alt_mem_epcs_flash_controller_0+0xff82f5d8>
  838dd8:	88c0004c 	andi	r3,r17,1
  838ddc:	183fc11e 	bne	r3,zero,838ce4 <__alt_mem_epcs_flash_controller_0+0xff82fce4>
  838de0:	8c40008c 	andi	r17,r17,2
  838de4:	883fbf26 	beq	r17,zero,838ce4 <__alt_mem_epcs_flash_controller_0+0xff82fce4>
  838de8:	d940a117 	ldw	r5,644(sp)
  838dec:	00802134 	movhi	r2,132
  838df0:	10841204 	addi	r2,r2,4168
  838df4:	d9c09e17 	ldw	r7,632(sp)
  838df8:	000d883a 	mov	r6,zero
  838dfc:	28806726 	beq	r5,r2,838f9c <__ssvfscanf_r+0x197c>
  838e00:	d9400104 	addi	r5,sp,4
  838e04:	b809883a 	mov	r4,r23
  838e08:	0840d440 	call	840d44 <_strtoll_r>
  838e0c:	d9409c17 	ldw	r5,624(sp)
  838e10:	29000017 	ldw	r4,0(r5)
  838e14:	29400104 	addi	r5,r5,4
  838e18:	d9409c15 	stw	r5,624(sp)
  838e1c:	20800015 	stw	r2,0(r4)
  838e20:	20c00115 	stw	r3,4(r4)
  838e24:	003f8106 	br	838c2c <__alt_mem_epcs_flash_controller_0+0xff82fc2c>
  838e28:	083d73c0 	call	83d73c <__locale_mb_cur_max>
  838e2c:	80bc5626 	beq	r16,r2,837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  838e30:	98800017 	ldw	r2,0(r19)
  838e34:	99000117 	ldw	r4,4(r19)
  838e38:	d9400104 	addi	r5,sp,4
  838e3c:	12000003 	ldbu	r8,0(r2)
  838e40:	213fffc4 	addi	r4,r4,-1
  838e44:	10800044 	addi	r2,r2,1
  838e48:	99000115 	stw	r4,4(r19)
  838e4c:	98800015 	stw	r2,0(r19)
  838e50:	84400044 	addi	r17,r16,1
  838e54:	dd400015 	stw	r21,0(sp)
  838e58:	2c21883a 	add	r16,r5,r16
  838e5c:	280d883a 	mov	r6,r5
  838e60:	880f883a 	mov	r7,r17
  838e64:	a00b883a 	mov	r5,r20
  838e68:	b809883a 	mov	r4,r23
  838e6c:	82000005 	stb	r8,0(r16)
  838e70:	083d9ac0 	call	83d9ac <_mbrtowc_r>
  838e74:	00ffffc4 	movi	r3,-1
  838e78:	10fc4326 	beq	r2,r3,837f88 <__alt_mem_epcs_flash_controller_0+0xff82ef88>
  838e7c:	103c371e 	bne	r2,zero,837f5c <__alt_mem_epcs_flash_controller_0+0xff82ef5c>
  838e80:	a0000015 	stw	zero,0(r20)
  838e84:	0009883a 	mov	r4,zero
  838e88:	083d6840 	call	83d684 <iswspace>
  838e8c:	10001b26 	beq	r2,zero,838efc <__ssvfscanf_r+0x18dc>
  838e90:	8821883a 	mov	r16,r17
  838e94:	dc409f17 	ldw	r17,636(sp)
  838e98:	803f7f26 	beq	r16,zero,838c98 <__alt_mem_epcs_flash_controller_0+0xff82fc98>
  838e9c:	843fffc4 	addi	r16,r16,-1
  838ea0:	d9400104 	addi	r5,sp,4
  838ea4:	2c2b883a 	add	r21,r5,r16
  838ea8:	00000106 	br	838eb0 <__ssvfscanf_r+0x1890>
  838eac:	843fffc4 	addi	r16,r16,-1
  838eb0:	a9400003 	ldbu	r5,0(r21)
  838eb4:	980d883a 	mov	r6,r19
  838eb8:	b809883a 	mov	r4,r23
  838ebc:	0842b6c0 	call	842b6c <_sungetc_r>
  838ec0:	ad7fffc4 	addi	r21,r21,-1
  838ec4:	803ff91e 	bne	r16,zero,838eac <__alt_mem_epcs_flash_controller_0+0xff82feac>
  838ec8:	003f7306 	br	838c98 <__alt_mem_epcs_flash_controller_0+0xff82fc98>
  838ecc:	d9400104 	addi	r5,sp,4
  838ed0:	802b883a 	mov	r21,r16
  838ed4:	9839883a 	mov	fp,r19
  838ed8:	2c3a122e 	bgeu	r5,r16,837724 <__alt_mem_epcs_flash_controller_0+0xff82e724>
  838edc:	ad7fffc4 	addi	r21,r21,-1
  838ee0:	a9400007 	ldb	r5,0(r21)
  838ee4:	e00d883a 	mov	r6,fp
  838ee8:	b809883a 	mov	r4,r23
  838eec:	0842b6c0 	call	842b6c <_sungetc_r>
  838ef0:	d8800104 	addi	r2,sp,4
  838ef4:	157ff91e 	bne	r2,r21,838edc <__alt_mem_epcs_flash_controller_0+0xff82fedc>
  838ef8:	003a0a06 	br	837724 <__alt_mem_epcs_flash_controller_0+0xff82e724>
  838efc:	d8c09f17 	ldw	r3,636(sp)
  838f00:	9465883a 	add	r18,r18,r17
  838f04:	e73fffc4 	addi	fp,fp,-1
  838f08:	1800051e 	bne	r3,zero,838f20 <__ssvfscanf_r+0x1900>
  838f0c:	a5000104 	addi	r20,r20,4
  838f10:	0021883a 	mov	r16,zero
  838f14:	003c1406 	br	837f68 <__alt_mem_epcs_flash_controller_0+0xff82ef68>
  838f18:	a1000017 	ldw	r4,0(r20)
  838f1c:	003fda06 	br	838e88 <__alt_mem_epcs_flash_controller_0+0xff82fe88>
  838f20:	0021883a 	mov	r16,zero
  838f24:	003c1006 	br	837f68 <__alt_mem_epcs_flash_controller_0+0xff82ef68>
  838f28:	d8c00104 	addi	r3,sp,4
  838f2c:	802b883a 	mov	r21,r16
  838f30:	9839883a 	mov	fp,r19
  838f34:	1c39fb2e 	bgeu	r3,r16,837724 <__alt_mem_epcs_flash_controller_0+0xff82e724>
  838f38:	ad7fffc4 	addi	r21,r21,-1
  838f3c:	a9400007 	ldb	r5,0(r21)
  838f40:	b809883a 	mov	r4,r23
  838f44:	e00d883a 	mov	r6,fp
  838f48:	0842b6c0 	call	842b6c <_sungetc_r>
  838f4c:	d9000104 	addi	r4,sp,4
  838f50:	257ff91e 	bne	r4,r21,838f38 <__alt_mem_epcs_flash_controller_0+0xff82ff38>
  838f54:	0039f306 	br	837724 <__alt_mem_epcs_flash_controller_0+0xff82e724>
  838f58:	d8c00104 	addi	r3,sp,4
  838f5c:	802b883a 	mov	r21,r16
  838f60:	9839883a 	mov	fp,r19
  838f64:	1c39ef2e 	bgeu	r3,r16,837724 <__alt_mem_epcs_flash_controller_0+0xff82e724>
  838f68:	ad7fffc4 	addi	r21,r21,-1
  838f6c:	a9400007 	ldb	r5,0(r21)
  838f70:	b809883a 	mov	r4,r23
  838f74:	e00d883a 	mov	r6,fp
  838f78:	0842b6c0 	call	842b6c <_sungetc_r>
  838f7c:	d9000104 	addi	r4,sp,4
  838f80:	257ff91e 	bne	r4,r21,838f68 <__alt_mem_epcs_flash_controller_0+0xff82ff68>
  838f84:	0039e706 	br	837724 <__alt_mem_epcs_flash_controller_0+0xff82e724>
  838f88:	0009883a 	mov	r4,zero
  838f8c:	083ef880 	call	83ef88 <nanf>
  838f90:	a0800015 	stw	r2,0(r20)
  838f94:	dc409c15 	stw	r17,624(sp)
  838f98:	003d8f06 	br	8385d8 <__alt_mem_epcs_flash_controller_0+0xff82f5d8>
  838f9c:	d9400104 	addi	r5,sp,4
  838fa0:	b809883a 	mov	r4,r23
  838fa4:	08412dc0 	call	8412dc <_strtoull_r>
  838fa8:	003f9806 	br	838e0c <__alt_mem_epcs_flash_controller_0+0xff82fe0c>

00838fac <_times_r>:
  838fac:	2809883a 	mov	r4,r5
  838fb0:	084a4381 	jmpi	84a438 <times>

00838fb4 <___vfprintf_internal_r>:
  838fb4:	deffb804 	addi	sp,sp,-288
  838fb8:	dfc04715 	stw	ra,284(sp)
  838fbc:	ddc04515 	stw	r23,276(sp)
  838fc0:	dd404315 	stw	r21,268(sp)
  838fc4:	d9002d15 	stw	r4,180(sp)
  838fc8:	282f883a 	mov	r23,r5
  838fcc:	302b883a 	mov	r21,r6
  838fd0:	d9c02e15 	stw	r7,184(sp)
  838fd4:	df004615 	stw	fp,280(sp)
  838fd8:	dd804415 	stw	r22,272(sp)
  838fdc:	dd004215 	stw	r20,264(sp)
  838fe0:	dcc04115 	stw	r19,260(sp)
  838fe4:	dc804015 	stw	r18,256(sp)
  838fe8:	dc403f15 	stw	r17,252(sp)
  838fec:	dc003e15 	stw	r16,248(sp)
  838ff0:	083d7600 	call	83d760 <_localeconv_r>
  838ff4:	10800017 	ldw	r2,0(r2)
  838ff8:	1009883a 	mov	r4,r2
  838ffc:	d8803415 	stw	r2,208(sp)
  839000:	08351100 	call	835110 <strlen>
  839004:	d8803715 	stw	r2,220(sp)
  839008:	d8802d17 	ldw	r2,180(sp)
  83900c:	10000226 	beq	r2,zero,839018 <___vfprintf_internal_r+0x64>
  839010:	10800e17 	ldw	r2,56(r2)
  839014:	1000fb26 	beq	r2,zero,839404 <___vfprintf_internal_r+0x450>
  839018:	b880030b 	ldhu	r2,12(r23)
  83901c:	10c8000c 	andi	r3,r2,8192
  839020:	1800061e 	bne	r3,zero,83903c <___vfprintf_internal_r+0x88>
  839024:	b9001917 	ldw	r4,100(r23)
  839028:	00f7ffc4 	movi	r3,-8193
  83902c:	10880014 	ori	r2,r2,8192
  839030:	20c6703a 	and	r3,r4,r3
  839034:	b880030d 	sth	r2,12(r23)
  839038:	b8c01915 	stw	r3,100(r23)
  83903c:	10c0020c 	andi	r3,r2,8
  839040:	1800c326 	beq	r3,zero,839350 <___vfprintf_internal_r+0x39c>
  839044:	b8c00417 	ldw	r3,16(r23)
  839048:	1800c126 	beq	r3,zero,839350 <___vfprintf_internal_r+0x39c>
  83904c:	1080068c 	andi	r2,r2,26
  839050:	00c00284 	movi	r3,10
  839054:	10c0c626 	beq	r2,r3,839370 <___vfprintf_internal_r+0x3bc>
  839058:	d8c00404 	addi	r3,sp,16
  83905c:	050021b4 	movhi	r20,134
  839060:	d9001e04 	addi	r4,sp,120
  839064:	a5261804 	addi	r20,r20,-26528
  839068:	d8c01e15 	stw	r3,120(sp)
  83906c:	d8002015 	stw	zero,128(sp)
  839070:	d8001f15 	stw	zero,124(sp)
  839074:	d8003315 	stw	zero,204(sp)
  839078:	d8003615 	stw	zero,216(sp)
  83907c:	d8003815 	stw	zero,224(sp)
  839080:	1811883a 	mov	r8,r3
  839084:	d8003915 	stw	zero,228(sp)
  839088:	d8003a15 	stw	zero,232(sp)
  83908c:	d8002f15 	stw	zero,188(sp)
  839090:	d9002815 	stw	r4,160(sp)
  839094:	a8800007 	ldb	r2,0(r21)
  839098:	10028b26 	beq	r2,zero,839ac8 <___vfprintf_internal_r+0xb14>
  83909c:	00c00944 	movi	r3,37
  8390a0:	a823883a 	mov	r17,r21
  8390a4:	10c0021e 	bne	r2,r3,8390b0 <___vfprintf_internal_r+0xfc>
  8390a8:	00001406 	br	8390fc <___vfprintf_internal_r+0x148>
  8390ac:	10c00326 	beq	r2,r3,8390bc <___vfprintf_internal_r+0x108>
  8390b0:	8c400044 	addi	r17,r17,1
  8390b4:	88800007 	ldb	r2,0(r17)
  8390b8:	103ffc1e 	bne	r2,zero,8390ac <__alt_mem_epcs_flash_controller_0+0xff8300ac>
  8390bc:	8d61c83a 	sub	r16,r17,r21
  8390c0:	80000e26 	beq	r16,zero,8390fc <___vfprintf_internal_r+0x148>
  8390c4:	d8c02017 	ldw	r3,128(sp)
  8390c8:	d8801f17 	ldw	r2,124(sp)
  8390cc:	45400015 	stw	r21,0(r8)
  8390d0:	1c07883a 	add	r3,r3,r16
  8390d4:	10800044 	addi	r2,r2,1
  8390d8:	d8c02015 	stw	r3,128(sp)
  8390dc:	44000115 	stw	r16,4(r8)
  8390e0:	d8801f15 	stw	r2,124(sp)
  8390e4:	00c001c4 	movi	r3,7
  8390e8:	1880a916 	blt	r3,r2,839390 <___vfprintf_internal_r+0x3dc>
  8390ec:	42000204 	addi	r8,r8,8
  8390f0:	d9402f17 	ldw	r5,188(sp)
  8390f4:	2c0b883a 	add	r5,r5,r16
  8390f8:	d9402f15 	stw	r5,188(sp)
  8390fc:	88800007 	ldb	r2,0(r17)
  839100:	1000aa26 	beq	r2,zero,8393ac <___vfprintf_internal_r+0x3f8>
  839104:	8d400044 	addi	r21,r17,1
  839108:	8c400047 	ldb	r17,1(r17)
  83910c:	0021883a 	mov	r16,zero
  839110:	00bfffc4 	movi	r2,-1
  839114:	0025883a 	mov	r18,zero
  839118:	dc002905 	stb	r16,164(sp)
  83911c:	d8002785 	stb	zero,158(sp)
  839120:	d8002b05 	stb	zero,172(sp)
  839124:	d8802a15 	stw	r2,168(sp)
  839128:	d8003115 	stw	zero,196(sp)
  83912c:	04c01604 	movi	r19,88
  839130:	05800244 	movi	r22,9
  839134:	9021883a 	mov	r16,r18
  839138:	4039883a 	mov	fp,r8
  83913c:	ad400044 	addi	r21,r21,1
  839140:	88bff804 	addi	r2,r17,-32
  839144:	98833236 	bltu	r19,r2,839e10 <___vfprintf_internal_r+0xe5c>
  839148:	100490ba 	slli	r2,r2,2
  83914c:	00c02134 	movhi	r3,132
  839150:	18e45804 	addi	r3,r3,-28320
  839154:	10c5883a 	add	r2,r2,r3
  839158:	10800017 	ldw	r2,0(r2)
  83915c:	1000683a 	jmp	r2
  839160:	00839d08 	cmpgei	r2,zero,3700
  839164:	00839e10 	cmplti	r2,zero,3704
  839168:	00839e10 	cmplti	r2,zero,3704
  83916c:	00839d28 	cmpgeui	r2,zero,3700
  839170:	00839e10 	cmplti	r2,zero,3704
  839174:	00839e10 	cmplti	r2,zero,3704
  839178:	00839e10 	cmplti	r2,zero,3704
  83917c:	00839e10 	cmplti	r2,zero,3704
  839180:	00839e10 	cmplti	r2,zero,3704
  839184:	00839e10 	cmplti	r2,zero,3704
  839188:	00839410 	cmplti	r2,zero,3664
  83918c:	00839c18 	cmpnei	r2,zero,3696
  839190:	00839e10 	cmplti	r2,zero,3704
  839194:	008392d4 	movui	r2,3659
  839198:	00839434 	movhi	r2,3664
  83919c:	00839e10 	cmplti	r2,zero,3704
  8391a0:	00839484 	movi	r2,3666
  8391a4:	00839490 	cmplti	r2,zero,3666
  8391a8:	00839490 	cmplti	r2,zero,3666
  8391ac:	00839490 	cmplti	r2,zero,3666
  8391b0:	00839490 	cmplti	r2,zero,3666
  8391b4:	00839490 	cmplti	r2,zero,3666
  8391b8:	00839490 	cmplti	r2,zero,3666
  8391bc:	00839490 	cmplti	r2,zero,3666
  8391c0:	00839490 	cmplti	r2,zero,3666
  8391c4:	00839490 	cmplti	r2,zero,3666
  8391c8:	00839e10 	cmplti	r2,zero,3704
  8391cc:	00839e10 	cmplti	r2,zero,3704
  8391d0:	00839e10 	cmplti	r2,zero,3704
  8391d4:	00839e10 	cmplti	r2,zero,3704
  8391d8:	00839e10 	cmplti	r2,zero,3704
  8391dc:	00839e10 	cmplti	r2,zero,3704
  8391e0:	00839e10 	cmplti	r2,zero,3704
  8391e4:	00839e10 	cmplti	r2,zero,3704
  8391e8:	00839e10 	cmplti	r2,zero,3704
  8391ec:	00839e10 	cmplti	r2,zero,3704
  8391f0:	008394cc 	andi	r2,zero,3667
  8391f4:	00839594 	movui	r2,3670
  8391f8:	00839e10 	cmplti	r2,zero,3704
  8391fc:	00839594 	movui	r2,3670
  839200:	00839e10 	cmplti	r2,zero,3704
  839204:	00839e10 	cmplti	r2,zero,3704
  839208:	00839e10 	cmplti	r2,zero,3704
  83920c:	00839e10 	cmplti	r2,zero,3704
  839210:	00839640 	call	83964 <OSCtxSw_SWITCH_PC+0x83924>
  839214:	00839e10 	cmplti	r2,zero,3704
  839218:	00839e10 	cmplti	r2,zero,3704
  83921c:	0083964c 	andi	r2,zero,3673
  839220:	00839e10 	cmplti	r2,zero,3704
  839224:	00839e10 	cmplti	r2,zero,3704
  839228:	00839e10 	cmplti	r2,zero,3704
  83922c:	00839e10 	cmplti	r2,zero,3704
  839230:	00839e10 	cmplti	r2,zero,3704
  839234:	00839ad0 	cmplti	r2,zero,3691
  839238:	00839e10 	cmplti	r2,zero,3704
  83923c:	00839e10 	cmplti	r2,zero,3704
  839240:	00839b3c 	xorhi	r2,zero,3692
  839244:	00839e10 	cmplti	r2,zero,3704
  839248:	00839e10 	cmplti	r2,zero,3704
  83924c:	00839e10 	cmplti	r2,zero,3704
  839250:	00839e10 	cmplti	r2,zero,3704
  839254:	00839e10 	cmplti	r2,zero,3704
  839258:	00839e10 	cmplti	r2,zero,3704
  83925c:	00839e10 	cmplti	r2,zero,3704
  839260:	00839e10 	cmplti	r2,zero,3704
  839264:	00839e10 	cmplti	r2,zero,3704
  839268:	00839e10 	cmplti	r2,zero,3704
  83926c:	00839db4 	movhi	r2,3702
  839270:	00839d34 	movhi	r2,3700
  839274:	00839594 	movui	r2,3670
  839278:	00839594 	movui	r2,3670
  83927c:	00839594 	movui	r2,3670
  839280:	00839d54 	movui	r2,3701
  839284:	00839d34 	movhi	r2,3700
  839288:	00839e10 	cmplti	r2,zero,3704
  83928c:	00839e10 	cmplti	r2,zero,3704
  839290:	00839d60 	cmpeqi	r2,zero,3701
  839294:	00839e10 	cmplti	r2,zero,3704
  839298:	00839d74 	movhi	r2,3701
  83929c:	00839bf8 	rdprs	r2,zero,3695
  8392a0:	008392e0 	cmpeqi	r2,zero,3659
  8392a4:	00839c30 	cmpltui	r2,zero,3696
  8392a8:	00839e10 	cmplti	r2,zero,3704
  8392ac:	00839c3c 	xorhi	r2,zero,3696
  8392b0:	00839e10 	cmplti	r2,zero,3704
  8392b4:	00839ca0 	cmpeqi	r2,zero,3698
  8392b8:	00839e10 	cmplti	r2,zero,3704
  8392bc:	00839e10 	cmplti	r2,zero,3704
  8392c0:	00839cc0 	call	839cc <OSCtxSw_SWITCH_PC+0x8398c>
  8392c4:	d8c03117 	ldw	r3,196(sp)
  8392c8:	d8802e15 	stw	r2,184(sp)
  8392cc:	00c7c83a 	sub	r3,zero,r3
  8392d0:	d8c03115 	stw	r3,196(sp)
  8392d4:	84000114 	ori	r16,r16,4
  8392d8:	ac400007 	ldb	r17,0(r21)
  8392dc:	003f9706 	br	83913c <__alt_mem_epcs_flash_controller_0+0xff83013c>
  8392e0:	00800c04 	movi	r2,48
  8392e4:	d8802705 	stb	r2,156(sp)
  8392e8:	00801e04 	movi	r2,120
  8392ec:	d8802745 	stb	r2,157(sp)
  8392f0:	d9002a17 	ldw	r4,168(sp)
  8392f4:	d8802e17 	ldw	r2,184(sp)
  8392f8:	d8002785 	stb	zero,158(sp)
  8392fc:	e011883a 	mov	r8,fp
  839300:	10c00104 	addi	r3,r2,4
  839304:	14c00017 	ldw	r19,0(r2)
  839308:	002d883a 	mov	r22,zero
  83930c:	80800094 	ori	r2,r16,2
  839310:	2002ca16 	blt	r4,zero,839e3c <___vfprintf_internal_r+0xe88>
  839314:	00bfdfc4 	movi	r2,-129
  839318:	80a4703a 	and	r18,r16,r2
  83931c:	d8c02e15 	stw	r3,184(sp)
  839320:	94800094 	ori	r18,r18,2
  839324:	9802b41e 	bne	r19,zero,839df8 <___vfprintf_internal_r+0xe44>
  839328:	014021b4 	movhi	r5,134
  83932c:	2965fe04 	addi	r5,r5,-26632
  839330:	d9403915 	stw	r5,228(sp)
  839334:	04401e04 	movi	r17,120
  839338:	d8802a17 	ldw	r2,168(sp)
  83933c:	0039883a 	mov	fp,zero
  839340:	1001fa26 	beq	r2,zero,839b2c <___vfprintf_internal_r+0xb78>
  839344:	0027883a 	mov	r19,zero
  839348:	002d883a 	mov	r22,zero
  83934c:	00021906 	br	839bb4 <___vfprintf_internal_r+0xc00>
  839350:	d9002d17 	ldw	r4,180(sp)
  839354:	b80b883a 	mov	r5,r23
  839358:	083b5200 	call	83b520 <__swsetup_r>
  83935c:	1005dc1e 	bne	r2,zero,83aad0 <___vfprintf_internal_r+0x1b1c>
  839360:	b880030b 	ldhu	r2,12(r23)
  839364:	00c00284 	movi	r3,10
  839368:	1080068c 	andi	r2,r2,26
  83936c:	10ff3a1e 	bne	r2,r3,839058 <__alt_mem_epcs_flash_controller_0+0xff830058>
  839370:	b880038f 	ldh	r2,14(r23)
  839374:	103f3816 	blt	r2,zero,839058 <__alt_mem_epcs_flash_controller_0+0xff830058>
  839378:	d9c02e17 	ldw	r7,184(sp)
  83937c:	d9002d17 	ldw	r4,180(sp)
  839380:	a80d883a 	mov	r6,r21
  839384:	b80b883a 	mov	r5,r23
  839388:	083b2ac0 	call	83b2ac <__sbprintf>
  83938c:	00001106 	br	8393d4 <___vfprintf_internal_r+0x420>
  839390:	d9002d17 	ldw	r4,180(sp)
  839394:	d9801e04 	addi	r6,sp,120
  839398:	b80b883a 	mov	r5,r23
  83939c:	08442ac0 	call	8442ac <__sprint_r>
  8393a0:	1000081e 	bne	r2,zero,8393c4 <___vfprintf_internal_r+0x410>
  8393a4:	da000404 	addi	r8,sp,16
  8393a8:	003f5106 	br	8390f0 <__alt_mem_epcs_flash_controller_0+0xff8300f0>
  8393ac:	d8802017 	ldw	r2,128(sp)
  8393b0:	10000426 	beq	r2,zero,8393c4 <___vfprintf_internal_r+0x410>
  8393b4:	d9002d17 	ldw	r4,180(sp)
  8393b8:	d9801e04 	addi	r6,sp,120
  8393bc:	b80b883a 	mov	r5,r23
  8393c0:	08442ac0 	call	8442ac <__sprint_r>
  8393c4:	b880030b 	ldhu	r2,12(r23)
  8393c8:	1080100c 	andi	r2,r2,64
  8393cc:	1005c01e 	bne	r2,zero,83aad0 <___vfprintf_internal_r+0x1b1c>
  8393d0:	d8802f17 	ldw	r2,188(sp)
  8393d4:	dfc04717 	ldw	ra,284(sp)
  8393d8:	df004617 	ldw	fp,280(sp)
  8393dc:	ddc04517 	ldw	r23,276(sp)
  8393e0:	dd804417 	ldw	r22,272(sp)
  8393e4:	dd404317 	ldw	r21,268(sp)
  8393e8:	dd004217 	ldw	r20,264(sp)
  8393ec:	dcc04117 	ldw	r19,260(sp)
  8393f0:	dc804017 	ldw	r18,256(sp)
  8393f4:	dc403f17 	ldw	r17,252(sp)
  8393f8:	dc003e17 	ldw	r16,248(sp)
  8393fc:	dec04804 	addi	sp,sp,288
  839400:	f800283a 	ret
  839404:	d9002d17 	ldw	r4,180(sp)
  839408:	08324300 	call	832430 <__sinit>
  83940c:	003f0206 	br	839018 <__alt_mem_epcs_flash_controller_0+0xff830018>
  839410:	d9002e17 	ldw	r4,184(sp)
  839414:	d9402e17 	ldw	r5,184(sp)
  839418:	21000017 	ldw	r4,0(r4)
  83941c:	28800104 	addi	r2,r5,4
  839420:	d9003115 	stw	r4,196(sp)
  839424:	203fa716 	blt	r4,zero,8392c4 <__alt_mem_epcs_flash_controller_0+0xff8302c4>
  839428:	d8802e15 	stw	r2,184(sp)
  83942c:	ac400007 	ldb	r17,0(r21)
  839430:	003f4206 	br	83913c <__alt_mem_epcs_flash_controller_0+0xff83013c>
  839434:	ac400007 	ldb	r17,0(r21)
  839438:	01000a84 	movi	r4,42
  83943c:	a8c00044 	addi	r3,r21,1
  839440:	89075826 	beq	r17,r4,83b1a4 <___vfprintf_internal_r+0x21f0>
  839444:	8cbff404 	addi	r18,r17,-48
  839448:	b486ae36 	bltu	r22,r18,83af04 <___vfprintf_internal_r+0x1f50>
  83944c:	0009883a 	mov	r4,zero
  839450:	1823883a 	mov	r17,r3
  839454:	01400284 	movi	r5,10
  839458:	08301e80 	call	8301e8 <__mulsi3>
  83945c:	88c00007 	ldb	r3,0(r17)
  839460:	1489883a 	add	r4,r2,r18
  839464:	8d400044 	addi	r21,r17,1
  839468:	1cbff404 	addi	r18,r3,-48
  83946c:	a823883a 	mov	r17,r21
  839470:	b4bff82e 	bgeu	r22,r18,839454 <__alt_mem_epcs_flash_controller_0+0xff830454>
  839474:	1823883a 	mov	r17,r3
  839478:	2005f616 	blt	r4,zero,83ac54 <___vfprintf_internal_r+0x1ca0>
  83947c:	d9002a15 	stw	r4,168(sp)
  839480:	003f2f06 	br	839140 <__alt_mem_epcs_flash_controller_0+0xff830140>
  839484:	84002014 	ori	r16,r16,128
  839488:	ac400007 	ldb	r17,0(r21)
  83948c:	003f2b06 	br	83913c <__alt_mem_epcs_flash_controller_0+0xff83013c>
  839490:	8cbff404 	addi	r18,r17,-48
  839494:	d8003115 	stw	zero,196(sp)
  839498:	0009883a 	mov	r4,zero
  83949c:	a823883a 	mov	r17,r21
  8394a0:	01400284 	movi	r5,10
  8394a4:	08301e80 	call	8301e8 <__mulsi3>
  8394a8:	88c00007 	ldb	r3,0(r17)
  8394ac:	9089883a 	add	r4,r18,r2
  8394b0:	ad400044 	addi	r21,r21,1
  8394b4:	1cbff404 	addi	r18,r3,-48
  8394b8:	a823883a 	mov	r17,r21
  8394bc:	b4bff82e 	bgeu	r22,r18,8394a0 <__alt_mem_epcs_flash_controller_0+0xff8304a0>
  8394c0:	1823883a 	mov	r17,r3
  8394c4:	d9003115 	stw	r4,196(sp)
  8394c8:	003f1d06 	br	839140 <__alt_mem_epcs_flash_controller_0+0xff830140>
  8394cc:	8025883a 	mov	r18,r16
  8394d0:	dc002903 	ldbu	r16,164(sp)
  8394d4:	e011883a 	mov	r8,fp
  8394d8:	84003fcc 	andi	r16,r16,255
  8394dc:	8007531e 	bne	r16,zero,83b22c <___vfprintf_internal_r+0x2278>
  8394e0:	94800414 	ori	r18,r18,16
  8394e4:	9080080c 	andi	r2,r18,32
  8394e8:	1003a326 	beq	r2,zero,83a378 <___vfprintf_internal_r+0x13c4>
  8394ec:	d9002e17 	ldw	r4,184(sp)
  8394f0:	20800117 	ldw	r2,4(r4)
  8394f4:	24c00017 	ldw	r19,0(r4)
  8394f8:	21000204 	addi	r4,r4,8
  8394fc:	d9002e15 	stw	r4,184(sp)
  839500:	102d883a 	mov	r22,r2
  839504:	10047316 	blt	r2,zero,83a6d4 <___vfprintf_internal_r+0x1720>
  839508:	d9002a17 	ldw	r4,168(sp)
  83950c:	df002783 	ldbu	fp,158(sp)
  839510:	2003e416 	blt	r4,zero,83a4a4 <___vfprintf_internal_r+0x14f0>
  839514:	00ffdfc4 	movi	r3,-129
  839518:	9d84b03a 	or	r2,r19,r22
  83951c:	90e4703a 	and	r18,r18,r3
  839520:	10018026 	beq	r2,zero,839b24 <___vfprintf_internal_r+0xb70>
  839524:	b003ab26 	beq	r22,zero,83a3d4 <___vfprintf_internal_r+0x1420>
  839528:	dc402915 	stw	r17,164(sp)
  83952c:	dc001e04 	addi	r16,sp,120
  839530:	b023883a 	mov	r17,r22
  839534:	402d883a 	mov	r22,r8
  839538:	9809883a 	mov	r4,r19
  83953c:	880b883a 	mov	r5,r17
  839540:	01800284 	movi	r6,10
  839544:	000f883a 	mov	r7,zero
  839548:	084714c0 	call	84714c <__umoddi3>
  83954c:	10800c04 	addi	r2,r2,48
  839550:	843fffc4 	addi	r16,r16,-1
  839554:	9809883a 	mov	r4,r19
  839558:	880b883a 	mov	r5,r17
  83955c:	80800005 	stb	r2,0(r16)
  839560:	01800284 	movi	r6,10
  839564:	000f883a 	mov	r7,zero
  839568:	0846b500 	call	846b50 <__udivdi3>
  83956c:	1027883a 	mov	r19,r2
  839570:	10c4b03a 	or	r2,r2,r3
  839574:	1823883a 	mov	r17,r3
  839578:	103fef1e 	bne	r2,zero,839538 <__alt_mem_epcs_flash_controller_0+0xff830538>
  83957c:	d8c02817 	ldw	r3,160(sp)
  839580:	dc402917 	ldw	r17,164(sp)
  839584:	b011883a 	mov	r8,r22
  839588:	1c07c83a 	sub	r3,r3,r16
  83958c:	d8c02b15 	stw	r3,172(sp)
  839590:	00005f06 	br	839710 <___vfprintf_internal_r+0x75c>
  839594:	8025883a 	mov	r18,r16
  839598:	dc002903 	ldbu	r16,164(sp)
  83959c:	e011883a 	mov	r8,fp
  8395a0:	84003fcc 	andi	r16,r16,255
  8395a4:	80071e1e 	bne	r16,zero,83b220 <___vfprintf_internal_r+0x226c>
  8395a8:	9080020c 	andi	r2,r18,8
  8395ac:	1004af26 	beq	r2,zero,83a86c <___vfprintf_internal_r+0x18b8>
  8395b0:	d9002e17 	ldw	r4,184(sp)
  8395b4:	d9402e17 	ldw	r5,184(sp)
  8395b8:	d8802e17 	ldw	r2,184(sp)
  8395bc:	21000017 	ldw	r4,0(r4)
  8395c0:	29400117 	ldw	r5,4(r5)
  8395c4:	10800204 	addi	r2,r2,8
  8395c8:	d9003615 	stw	r4,216(sp)
  8395cc:	d9403815 	stw	r5,224(sp)
  8395d0:	d8802e15 	stw	r2,184(sp)
  8395d4:	d9003617 	ldw	r4,216(sp)
  8395d8:	d9403817 	ldw	r5,224(sp)
  8395dc:	da003d15 	stw	r8,244(sp)
  8395e0:	04000044 	movi	r16,1
  8395e4:	083ee440 	call	83ee44 <__fpclassifyd>
  8395e8:	da003d17 	ldw	r8,244(sp)
  8395ec:	1404441e 	bne	r2,r16,83a700 <___vfprintf_internal_r+0x174c>
  8395f0:	d9003617 	ldw	r4,216(sp)
  8395f4:	d9403817 	ldw	r5,224(sp)
  8395f8:	000d883a 	mov	r6,zero
  8395fc:	000f883a 	mov	r7,zero
  839600:	0848cec0 	call	848cec <__ledf2>
  839604:	da003d17 	ldw	r8,244(sp)
  839608:	1005e316 	blt	r2,zero,83ad98 <___vfprintf_internal_r+0x1de4>
  83960c:	df002783 	ldbu	fp,158(sp)
  839610:	008011c4 	movi	r2,71
  839614:	1445580e 	bge	r2,r17,83ab78 <___vfprintf_internal_r+0x1bc4>
  839618:	040021b4 	movhi	r16,134
  83961c:	8425f604 	addi	r16,r16,-26664
  839620:	00c000c4 	movi	r3,3
  839624:	00bfdfc4 	movi	r2,-129
  839628:	d8c02915 	stw	r3,164(sp)
  83962c:	90a4703a 	and	r18,r18,r2
  839630:	d8c02b15 	stw	r3,172(sp)
  839634:	d8002a15 	stw	zero,168(sp)
  839638:	d8003215 	stw	zero,200(sp)
  83963c:	00003a06 	br	839728 <___vfprintf_internal_r+0x774>
  839640:	84000214 	ori	r16,r16,8
  839644:	ac400007 	ldb	r17,0(r21)
  839648:	003ebc06 	br	83913c <__alt_mem_epcs_flash_controller_0+0xff83013c>
  83964c:	8025883a 	mov	r18,r16
  839650:	dc002903 	ldbu	r16,164(sp)
  839654:	e011883a 	mov	r8,fp
  839658:	84003fcc 	andi	r16,r16,255
  83965c:	8007001e 	bne	r16,zero,83b260 <___vfprintf_internal_r+0x22ac>
  839660:	94800414 	ori	r18,r18,16
  839664:	9080080c 	andi	r2,r18,32
  839668:	1002fa26 	beq	r2,zero,83a254 <___vfprintf_internal_r+0x12a0>
  83966c:	d9002e17 	ldw	r4,184(sp)
  839670:	d9402a17 	ldw	r5,168(sp)
  839674:	d8002785 	stb	zero,158(sp)
  839678:	20800204 	addi	r2,r4,8
  83967c:	24c00017 	ldw	r19,0(r4)
  839680:	25800117 	ldw	r22,4(r4)
  839684:	2804b116 	blt	r5,zero,83a94c <___vfprintf_internal_r+0x1998>
  839688:	013fdfc4 	movi	r4,-129
  83968c:	9d86b03a 	or	r3,r19,r22
  839690:	d8802e15 	stw	r2,184(sp)
  839694:	9124703a 	and	r18,r18,r4
  839698:	1802fb1e 	bne	r3,zero,83a288 <___vfprintf_internal_r+0x12d4>
  83969c:	d8c02a17 	ldw	r3,168(sp)
  8396a0:	0039883a 	mov	fp,zero
  8396a4:	1805e526 	beq	r3,zero,83ae3c <___vfprintf_internal_r+0x1e88>
  8396a8:	0027883a 	mov	r19,zero
  8396ac:	002d883a 	mov	r22,zero
  8396b0:	dc001e04 	addi	r16,sp,120
  8396b4:	9806d0fa 	srli	r3,r19,3
  8396b8:	b008977a 	slli	r4,r22,29
  8396bc:	b02cd0fa 	srli	r22,r22,3
  8396c0:	9cc001cc 	andi	r19,r19,7
  8396c4:	98800c04 	addi	r2,r19,48
  8396c8:	843fffc4 	addi	r16,r16,-1
  8396cc:	20e6b03a 	or	r19,r4,r3
  8396d0:	80800005 	stb	r2,0(r16)
  8396d4:	9d86b03a 	or	r3,r19,r22
  8396d8:	183ff61e 	bne	r3,zero,8396b4 <__alt_mem_epcs_flash_controller_0+0xff8306b4>
  8396dc:	90c0004c 	andi	r3,r18,1
  8396e0:	18014126 	beq	r3,zero,839be8 <___vfprintf_internal_r+0xc34>
  8396e4:	10803fcc 	andi	r2,r2,255
  8396e8:	1080201c 	xori	r2,r2,128
  8396ec:	10bfe004 	addi	r2,r2,-128
  8396f0:	00c00c04 	movi	r3,48
  8396f4:	10c13c26 	beq	r2,r3,839be8 <___vfprintf_internal_r+0xc34>
  8396f8:	80ffffc5 	stb	r3,-1(r16)
  8396fc:	d8c02817 	ldw	r3,160(sp)
  839700:	80bfffc4 	addi	r2,r16,-1
  839704:	1021883a 	mov	r16,r2
  839708:	1887c83a 	sub	r3,r3,r2
  83970c:	d8c02b15 	stw	r3,172(sp)
  839710:	d8802b17 	ldw	r2,172(sp)
  839714:	d9002a17 	ldw	r4,168(sp)
  839718:	1100010e 	bge	r2,r4,839720 <___vfprintf_internal_r+0x76c>
  83971c:	2005883a 	mov	r2,r4
  839720:	d8802915 	stw	r2,164(sp)
  839724:	d8003215 	stw	zero,200(sp)
  839728:	e7003fcc 	andi	fp,fp,255
  83972c:	e700201c 	xori	fp,fp,128
  839730:	e73fe004 	addi	fp,fp,-128
  839734:	e0000326 	beq	fp,zero,839744 <___vfprintf_internal_r+0x790>
  839738:	d8c02917 	ldw	r3,164(sp)
  83973c:	18c00044 	addi	r3,r3,1
  839740:	d8c02915 	stw	r3,164(sp)
  839744:	90c0008c 	andi	r3,r18,2
  839748:	d8c02c15 	stw	r3,176(sp)
  83974c:	18000326 	beq	r3,zero,83975c <___vfprintf_internal_r+0x7a8>
  839750:	d8c02917 	ldw	r3,164(sp)
  839754:	18c00084 	addi	r3,r3,2
  839758:	d8c02915 	stw	r3,164(sp)
  83975c:	90c0210c 	andi	r3,r18,132
  839760:	d8c03015 	stw	r3,192(sp)
  839764:	1801c51e 	bne	r3,zero,839e7c <___vfprintf_internal_r+0xec8>
  839768:	d9003117 	ldw	r4,196(sp)
  83976c:	d8c02917 	ldw	r3,164(sp)
  839770:	20e7c83a 	sub	r19,r4,r3
  839774:	04c1c10e 	bge	zero,r19,839e7c <___vfprintf_internal_r+0xec8>
  839778:	02400404 	movi	r9,16
  83977c:	d8c02017 	ldw	r3,128(sp)
  839780:	d8801f17 	ldw	r2,124(sp)
  839784:	4cc52f0e 	bge	r9,r19,83ac44 <___vfprintf_internal_r+0x1c90>
  839788:	014021b4 	movhi	r5,134
  83978c:	29661c04 	addi	r5,r5,-26512
  839790:	dc403b15 	stw	r17,236(sp)
  839794:	d9403515 	stw	r5,212(sp)
  839798:	9823883a 	mov	r17,r19
  83979c:	482d883a 	mov	r22,r9
  8397a0:	9027883a 	mov	r19,r18
  8397a4:	070001c4 	movi	fp,7
  8397a8:	8025883a 	mov	r18,r16
  8397ac:	dc002d17 	ldw	r16,180(sp)
  8397b0:	00000306 	br	8397c0 <___vfprintf_internal_r+0x80c>
  8397b4:	8c7ffc04 	addi	r17,r17,-16
  8397b8:	42000204 	addi	r8,r8,8
  8397bc:	b440130e 	bge	r22,r17,83980c <___vfprintf_internal_r+0x858>
  8397c0:	010021b4 	movhi	r4,134
  8397c4:	18c00404 	addi	r3,r3,16
  8397c8:	10800044 	addi	r2,r2,1
  8397cc:	21261c04 	addi	r4,r4,-26512
  8397d0:	41000015 	stw	r4,0(r8)
  8397d4:	45800115 	stw	r22,4(r8)
  8397d8:	d8c02015 	stw	r3,128(sp)
  8397dc:	d8801f15 	stw	r2,124(sp)
  8397e0:	e0bff40e 	bge	fp,r2,8397b4 <__alt_mem_epcs_flash_controller_0+0xff8307b4>
  8397e4:	d9801e04 	addi	r6,sp,120
  8397e8:	b80b883a 	mov	r5,r23
  8397ec:	8009883a 	mov	r4,r16
  8397f0:	08442ac0 	call	8442ac <__sprint_r>
  8397f4:	103ef31e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  8397f8:	8c7ffc04 	addi	r17,r17,-16
  8397fc:	d8c02017 	ldw	r3,128(sp)
  839800:	d8801f17 	ldw	r2,124(sp)
  839804:	da000404 	addi	r8,sp,16
  839808:	b47fed16 	blt	r22,r17,8397c0 <__alt_mem_epcs_flash_controller_0+0xff8307c0>
  83980c:	9021883a 	mov	r16,r18
  839810:	9825883a 	mov	r18,r19
  839814:	8827883a 	mov	r19,r17
  839818:	dc403b17 	ldw	r17,236(sp)
  83981c:	d9403517 	ldw	r5,212(sp)
  839820:	98c7883a 	add	r3,r19,r3
  839824:	10800044 	addi	r2,r2,1
  839828:	41400015 	stw	r5,0(r8)
  83982c:	44c00115 	stw	r19,4(r8)
  839830:	d8c02015 	stw	r3,128(sp)
  839834:	d8801f15 	stw	r2,124(sp)
  839838:	010001c4 	movi	r4,7
  83983c:	2082c516 	blt	r4,r2,83a354 <___vfprintf_internal_r+0x13a0>
  839840:	df002787 	ldb	fp,158(sp)
  839844:	42000204 	addi	r8,r8,8
  839848:	e0000c26 	beq	fp,zero,83987c <___vfprintf_internal_r+0x8c8>
  83984c:	d8801f17 	ldw	r2,124(sp)
  839850:	d9002784 	addi	r4,sp,158
  839854:	18c00044 	addi	r3,r3,1
  839858:	10800044 	addi	r2,r2,1
  83985c:	41000015 	stw	r4,0(r8)
  839860:	01000044 	movi	r4,1
  839864:	41000115 	stw	r4,4(r8)
  839868:	d8c02015 	stw	r3,128(sp)
  83986c:	d8801f15 	stw	r2,124(sp)
  839870:	010001c4 	movi	r4,7
  839874:	20825e16 	blt	r4,r2,83a1f0 <___vfprintf_internal_r+0x123c>
  839878:	42000204 	addi	r8,r8,8
  83987c:	d8802c17 	ldw	r2,176(sp)
  839880:	10000c26 	beq	r2,zero,8398b4 <___vfprintf_internal_r+0x900>
  839884:	d8801f17 	ldw	r2,124(sp)
  839888:	d9002704 	addi	r4,sp,156
  83988c:	18c00084 	addi	r3,r3,2
  839890:	10800044 	addi	r2,r2,1
  839894:	41000015 	stw	r4,0(r8)
  839898:	01000084 	movi	r4,2
  83989c:	41000115 	stw	r4,4(r8)
  8398a0:	d8c02015 	stw	r3,128(sp)
  8398a4:	d8801f15 	stw	r2,124(sp)
  8398a8:	010001c4 	movi	r4,7
  8398ac:	20825816 	blt	r4,r2,83a210 <___vfprintf_internal_r+0x125c>
  8398b0:	42000204 	addi	r8,r8,8
  8398b4:	d9003017 	ldw	r4,192(sp)
  8398b8:	00802004 	movi	r2,128
  8398bc:	2081bb26 	beq	r4,r2,839fac <___vfprintf_internal_r+0xff8>
  8398c0:	d9402a17 	ldw	r5,168(sp)
  8398c4:	d8802b17 	ldw	r2,172(sp)
  8398c8:	28adc83a 	sub	r22,r5,r2
  8398cc:	0580310e 	bge	zero,r22,839994 <___vfprintf_internal_r+0x9e0>
  8398d0:	07000404 	movi	fp,16
  8398d4:	d8801f17 	ldw	r2,124(sp)
  8398d8:	e584360e 	bge	fp,r22,83a9b4 <___vfprintf_internal_r+0x1a00>
  8398dc:	014021b4 	movhi	r5,134
  8398e0:	29661804 	addi	r5,r5,-26528
  8398e4:	dc402a15 	stw	r17,168(sp)
  8398e8:	d9402c15 	stw	r5,176(sp)
  8398ec:	b023883a 	mov	r17,r22
  8398f0:	04c001c4 	movi	r19,7
  8398f4:	a82d883a 	mov	r22,r21
  8398f8:	902b883a 	mov	r21,r18
  8398fc:	8025883a 	mov	r18,r16
  839900:	dc002d17 	ldw	r16,180(sp)
  839904:	00000306 	br	839914 <___vfprintf_internal_r+0x960>
  839908:	8c7ffc04 	addi	r17,r17,-16
  83990c:	42000204 	addi	r8,r8,8
  839910:	e440110e 	bge	fp,r17,839958 <___vfprintf_internal_r+0x9a4>
  839914:	18c00404 	addi	r3,r3,16
  839918:	10800044 	addi	r2,r2,1
  83991c:	45000015 	stw	r20,0(r8)
  839920:	47000115 	stw	fp,4(r8)
  839924:	d8c02015 	stw	r3,128(sp)
  839928:	d8801f15 	stw	r2,124(sp)
  83992c:	98bff60e 	bge	r19,r2,839908 <__alt_mem_epcs_flash_controller_0+0xff830908>
  839930:	d9801e04 	addi	r6,sp,120
  839934:	b80b883a 	mov	r5,r23
  839938:	8009883a 	mov	r4,r16
  83993c:	08442ac0 	call	8442ac <__sprint_r>
  839940:	103ea01e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  839944:	8c7ffc04 	addi	r17,r17,-16
  839948:	d8c02017 	ldw	r3,128(sp)
  83994c:	d8801f17 	ldw	r2,124(sp)
  839950:	da000404 	addi	r8,sp,16
  839954:	e47fef16 	blt	fp,r17,839914 <__alt_mem_epcs_flash_controller_0+0xff830914>
  839958:	9021883a 	mov	r16,r18
  83995c:	a825883a 	mov	r18,r21
  839960:	b02b883a 	mov	r21,r22
  839964:	882d883a 	mov	r22,r17
  839968:	dc402a17 	ldw	r17,168(sp)
  83996c:	d9002c17 	ldw	r4,176(sp)
  839970:	1d87883a 	add	r3,r3,r22
  839974:	10800044 	addi	r2,r2,1
  839978:	41000015 	stw	r4,0(r8)
  83997c:	45800115 	stw	r22,4(r8)
  839980:	d8c02015 	stw	r3,128(sp)
  839984:	d8801f15 	stw	r2,124(sp)
  839988:	010001c4 	movi	r4,7
  83998c:	20821016 	blt	r4,r2,83a1d0 <___vfprintf_internal_r+0x121c>
  839990:	42000204 	addi	r8,r8,8
  839994:	9080400c 	andi	r2,r18,256
  839998:	10013a1e 	bne	r2,zero,839e84 <___vfprintf_internal_r+0xed0>
  83999c:	d9402b17 	ldw	r5,172(sp)
  8399a0:	d8801f17 	ldw	r2,124(sp)
  8399a4:	44000015 	stw	r16,0(r8)
  8399a8:	1947883a 	add	r3,r3,r5
  8399ac:	10800044 	addi	r2,r2,1
  8399b0:	41400115 	stw	r5,4(r8)
  8399b4:	d8c02015 	stw	r3,128(sp)
  8399b8:	d8801f15 	stw	r2,124(sp)
  8399bc:	010001c4 	movi	r4,7
  8399c0:	2081f516 	blt	r4,r2,83a198 <___vfprintf_internal_r+0x11e4>
  8399c4:	42000204 	addi	r8,r8,8
  8399c8:	9480010c 	andi	r18,r18,4
  8399cc:	90003226 	beq	r18,zero,839a98 <___vfprintf_internal_r+0xae4>
  8399d0:	d9403117 	ldw	r5,196(sp)
  8399d4:	d8802917 	ldw	r2,164(sp)
  8399d8:	28a1c83a 	sub	r16,r5,r2
  8399dc:	04002e0e 	bge	zero,r16,839a98 <___vfprintf_internal_r+0xae4>
  8399e0:	04400404 	movi	r17,16
  8399e4:	d8801f17 	ldw	r2,124(sp)
  8399e8:	8c04c40e 	bge	r17,r16,83acfc <___vfprintf_internal_r+0x1d48>
  8399ec:	014021b4 	movhi	r5,134
  8399f0:	29661c04 	addi	r5,r5,-26512
  8399f4:	d9403515 	stw	r5,212(sp)
  8399f8:	048001c4 	movi	r18,7
  8399fc:	dcc02d17 	ldw	r19,180(sp)
  839a00:	00000306 	br	839a10 <___vfprintf_internal_r+0xa5c>
  839a04:	843ffc04 	addi	r16,r16,-16
  839a08:	42000204 	addi	r8,r8,8
  839a0c:	8c00130e 	bge	r17,r16,839a5c <___vfprintf_internal_r+0xaa8>
  839a10:	010021b4 	movhi	r4,134
  839a14:	18c00404 	addi	r3,r3,16
  839a18:	10800044 	addi	r2,r2,1
  839a1c:	21261c04 	addi	r4,r4,-26512
  839a20:	41000015 	stw	r4,0(r8)
  839a24:	44400115 	stw	r17,4(r8)
  839a28:	d8c02015 	stw	r3,128(sp)
  839a2c:	d8801f15 	stw	r2,124(sp)
  839a30:	90bff40e 	bge	r18,r2,839a04 <__alt_mem_epcs_flash_controller_0+0xff830a04>
  839a34:	d9801e04 	addi	r6,sp,120
  839a38:	b80b883a 	mov	r5,r23
  839a3c:	9809883a 	mov	r4,r19
  839a40:	08442ac0 	call	8442ac <__sprint_r>
  839a44:	103e5f1e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  839a48:	843ffc04 	addi	r16,r16,-16
  839a4c:	d8c02017 	ldw	r3,128(sp)
  839a50:	d8801f17 	ldw	r2,124(sp)
  839a54:	da000404 	addi	r8,sp,16
  839a58:	8c3fed16 	blt	r17,r16,839a10 <__alt_mem_epcs_flash_controller_0+0xff830a10>
  839a5c:	d9403517 	ldw	r5,212(sp)
  839a60:	1c07883a 	add	r3,r3,r16
  839a64:	10800044 	addi	r2,r2,1
  839a68:	41400015 	stw	r5,0(r8)
  839a6c:	44000115 	stw	r16,4(r8)
  839a70:	d8c02015 	stw	r3,128(sp)
  839a74:	d8801f15 	stw	r2,124(sp)
  839a78:	010001c4 	movi	r4,7
  839a7c:	2080060e 	bge	r4,r2,839a98 <___vfprintf_internal_r+0xae4>
  839a80:	d9002d17 	ldw	r4,180(sp)
  839a84:	d9801e04 	addi	r6,sp,120
  839a88:	b80b883a 	mov	r5,r23
  839a8c:	08442ac0 	call	8442ac <__sprint_r>
  839a90:	103e4c1e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  839a94:	d8c02017 	ldw	r3,128(sp)
  839a98:	d8803117 	ldw	r2,196(sp)
  839a9c:	d9002917 	ldw	r4,164(sp)
  839aa0:	1100010e 	bge	r2,r4,839aa8 <___vfprintf_internal_r+0xaf4>
  839aa4:	2005883a 	mov	r2,r4
  839aa8:	d9402f17 	ldw	r5,188(sp)
  839aac:	288b883a 	add	r5,r5,r2
  839ab0:	d9402f15 	stw	r5,188(sp)
  839ab4:	1801c01e 	bne	r3,zero,83a1b8 <___vfprintf_internal_r+0x1204>
  839ab8:	a8800007 	ldb	r2,0(r21)
  839abc:	d8001f15 	stw	zero,124(sp)
  839ac0:	da000404 	addi	r8,sp,16
  839ac4:	103d751e 	bne	r2,zero,83909c <__alt_mem_epcs_flash_controller_0+0xff83009c>
  839ac8:	a823883a 	mov	r17,r21
  839acc:	003d8b06 	br	8390fc <__alt_mem_epcs_flash_controller_0+0xff8300fc>
  839ad0:	8025883a 	mov	r18,r16
  839ad4:	dc002903 	ldbu	r16,164(sp)
  839ad8:	e011883a 	mov	r8,fp
  839adc:	84003fcc 	andi	r16,r16,255
  839ae0:	8005e51e 	bne	r16,zero,83b278 <___vfprintf_internal_r+0x22c4>
  839ae4:	94800414 	ori	r18,r18,16
  839ae8:	9080080c 	andi	r2,r18,32
  839aec:	10022b26 	beq	r2,zero,83a39c <___vfprintf_internal_r+0x13e8>
  839af0:	d9002e17 	ldw	r4,184(sp)
  839af4:	d9402a17 	ldw	r5,168(sp)
  839af8:	d8002785 	stb	zero,158(sp)
  839afc:	20c00204 	addi	r3,r4,8
  839b00:	24c00017 	ldw	r19,0(r4)
  839b04:	25800117 	ldw	r22,4(r4)
  839b08:	28042e16 	blt	r5,zero,83abc4 <___vfprintf_internal_r+0x1c10>
  839b0c:	013fdfc4 	movi	r4,-129
  839b10:	9d84b03a 	or	r2,r19,r22
  839b14:	d8c02e15 	stw	r3,184(sp)
  839b18:	9124703a 	and	r18,r18,r4
  839b1c:	0039883a 	mov	fp,zero
  839b20:	103e801e 	bne	r2,zero,839524 <__alt_mem_epcs_flash_controller_0+0xff830524>
  839b24:	d9002a17 	ldw	r4,168(sp)
  839b28:	2002e01e 	bne	r4,zero,83a6ac <___vfprintf_internal_r+0x16f8>
  839b2c:	d8002a15 	stw	zero,168(sp)
  839b30:	d8002b15 	stw	zero,172(sp)
  839b34:	dc001e04 	addi	r16,sp,120
  839b38:	003ef506 	br	839710 <__alt_mem_epcs_flash_controller_0+0xff830710>
  839b3c:	8025883a 	mov	r18,r16
  839b40:	dc002903 	ldbu	r16,164(sp)
  839b44:	e011883a 	mov	r8,fp
  839b48:	84003fcc 	andi	r16,r16,255
  839b4c:	8005ba1e 	bne	r16,zero,83b238 <___vfprintf_internal_r+0x2284>
  839b50:	010021b4 	movhi	r4,134
  839b54:	2125f904 	addi	r4,r4,-26652
  839b58:	d9003915 	stw	r4,228(sp)
  839b5c:	9080080c 	andi	r2,r18,32
  839b60:	10006126 	beq	r2,zero,839ce8 <___vfprintf_internal_r+0xd34>
  839b64:	d9402e17 	ldw	r5,184(sp)
  839b68:	2cc00017 	ldw	r19,0(r5)
  839b6c:	2d800117 	ldw	r22,4(r5)
  839b70:	29400204 	addi	r5,r5,8
  839b74:	d9402e15 	stw	r5,184(sp)
  839b78:	9080004c 	andi	r2,r18,1
  839b7c:	1001ac26 	beq	r2,zero,83a230 <___vfprintf_internal_r+0x127c>
  839b80:	9d84b03a 	or	r2,r19,r22
  839b84:	10038526 	beq	r2,zero,83a99c <___vfprintf_internal_r+0x19e8>
  839b88:	d8c02a17 	ldw	r3,168(sp)
  839b8c:	00800c04 	movi	r2,48
  839b90:	d8802705 	stb	r2,156(sp)
  839b94:	dc402745 	stb	r17,157(sp)
  839b98:	d8002785 	stb	zero,158(sp)
  839b9c:	90800094 	ori	r2,r18,2
  839ba0:	18047916 	blt	r3,zero,83ad88 <___vfprintf_internal_r+0x1dd4>
  839ba4:	00bfdfc4 	movi	r2,-129
  839ba8:	90a4703a 	and	r18,r18,r2
  839bac:	94800094 	ori	r18,r18,2
  839bb0:	0039883a 	mov	fp,zero
  839bb4:	d9003917 	ldw	r4,228(sp)
  839bb8:	dc001e04 	addi	r16,sp,120
  839bbc:	988003cc 	andi	r2,r19,15
  839bc0:	b006973a 	slli	r3,r22,28
  839bc4:	2085883a 	add	r2,r4,r2
  839bc8:	9826d13a 	srli	r19,r19,4
  839bcc:	10800003 	ldbu	r2,0(r2)
  839bd0:	b02cd13a 	srli	r22,r22,4
  839bd4:	843fffc4 	addi	r16,r16,-1
  839bd8:	1ce6b03a 	or	r19,r3,r19
  839bdc:	80800005 	stb	r2,0(r16)
  839be0:	9d84b03a 	or	r2,r19,r22
  839be4:	103ff51e 	bne	r2,zero,839bbc <__alt_mem_epcs_flash_controller_0+0xff830bbc>
  839be8:	d8c02817 	ldw	r3,160(sp)
  839bec:	1c07c83a 	sub	r3,r3,r16
  839bf0:	d8c02b15 	stw	r3,172(sp)
  839bf4:	003ec606 	br	839710 <__alt_mem_epcs_flash_controller_0+0xff830710>
  839bf8:	8025883a 	mov	r18,r16
  839bfc:	dc002903 	ldbu	r16,164(sp)
  839c00:	e011883a 	mov	r8,fp
  839c04:	84003fcc 	andi	r16,r16,255
  839c08:	803e9626 	beq	r16,zero,839664 <__alt_mem_epcs_flash_controller_0+0xff830664>
  839c0c:	d8c02b03 	ldbu	r3,172(sp)
  839c10:	d8c02785 	stb	r3,158(sp)
  839c14:	003e9306 	br	839664 <__alt_mem_epcs_flash_controller_0+0xff830664>
  839c18:	00c00044 	movi	r3,1
  839c1c:	d8c02905 	stb	r3,164(sp)
  839c20:	00c00ac4 	movi	r3,43
  839c24:	d8c02b05 	stb	r3,172(sp)
  839c28:	ac400007 	ldb	r17,0(r21)
  839c2c:	003d4306 	br	83913c <__alt_mem_epcs_flash_controller_0+0xff83013c>
  839c30:	84000814 	ori	r16,r16,32
  839c34:	ac400007 	ldb	r17,0(r21)
  839c38:	003d4006 	br	83913c <__alt_mem_epcs_flash_controller_0+0xff83013c>
  839c3c:	d8802e17 	ldw	r2,184(sp)
  839c40:	8025883a 	mov	r18,r16
  839c44:	d8002785 	stb	zero,158(sp)
  839c48:	14000017 	ldw	r16,0(r2)
  839c4c:	e011883a 	mov	r8,fp
  839c50:	14c00104 	addi	r19,r2,4
  839c54:	80042d26 	beq	r16,zero,83ad0c <___vfprintf_internal_r+0x1d58>
  839c58:	d8c02a17 	ldw	r3,168(sp)
  839c5c:	1803e416 	blt	r3,zero,83abf0 <___vfprintf_internal_r+0x1c3c>
  839c60:	180d883a 	mov	r6,r3
  839c64:	000b883a 	mov	r5,zero
  839c68:	8009883a 	mov	r4,r16
  839c6c:	df003d15 	stw	fp,244(sp)
  839c70:	0833b680 	call	833b68 <memchr>
  839c74:	da003d17 	ldw	r8,244(sp)
  839c78:	10046826 	beq	r2,zero,83ae1c <___vfprintf_internal_r+0x1e68>
  839c7c:	1405c83a 	sub	r2,r2,r16
  839c80:	d8802b15 	stw	r2,172(sp)
  839c84:	1003e016 	blt	r2,zero,83ac08 <___vfprintf_internal_r+0x1c54>
  839c88:	df002783 	ldbu	fp,158(sp)
  839c8c:	d8802915 	stw	r2,164(sp)
  839c90:	dcc02e15 	stw	r19,184(sp)
  839c94:	d8002a15 	stw	zero,168(sp)
  839c98:	d8003215 	stw	zero,200(sp)
  839c9c:	003ea206 	br	839728 <__alt_mem_epcs_flash_controller_0+0xff830728>
  839ca0:	8025883a 	mov	r18,r16
  839ca4:	dc002903 	ldbu	r16,164(sp)
  839ca8:	e011883a 	mov	r8,fp
  839cac:	84003fcc 	andi	r16,r16,255
  839cb0:	803f8d26 	beq	r16,zero,839ae8 <__alt_mem_epcs_flash_controller_0+0xff830ae8>
  839cb4:	d8c02b03 	ldbu	r3,172(sp)
  839cb8:	d8c02785 	stb	r3,158(sp)
  839cbc:	003f8a06 	br	839ae8 <__alt_mem_epcs_flash_controller_0+0xff830ae8>
  839cc0:	8025883a 	mov	r18,r16
  839cc4:	dc002903 	ldbu	r16,164(sp)
  839cc8:	e011883a 	mov	r8,fp
  839ccc:	84003fcc 	andi	r16,r16,255
  839cd0:	8005661e 	bne	r16,zero,83b26c <___vfprintf_internal_r+0x22b8>
  839cd4:	010021b4 	movhi	r4,134
  839cd8:	2125fe04 	addi	r4,r4,-26632
  839cdc:	d9003915 	stw	r4,228(sp)
  839ce0:	9080080c 	andi	r2,r18,32
  839ce4:	103f9f1e 	bne	r2,zero,839b64 <__alt_mem_epcs_flash_controller_0+0xff830b64>
  839ce8:	9080040c 	andi	r2,r18,16
  839cec:	1002eb26 	beq	r2,zero,83a89c <___vfprintf_internal_r+0x18e8>
  839cf0:	d8802e17 	ldw	r2,184(sp)
  839cf4:	002d883a 	mov	r22,zero
  839cf8:	14c00017 	ldw	r19,0(r2)
  839cfc:	10800104 	addi	r2,r2,4
  839d00:	d8802e15 	stw	r2,184(sp)
  839d04:	003f9c06 	br	839b78 <__alt_mem_epcs_flash_controller_0+0xff830b78>
  839d08:	d8802b07 	ldb	r2,172(sp)
  839d0c:	1002e11e 	bne	r2,zero,83a894 <___vfprintf_internal_r+0x18e0>
  839d10:	00c00044 	movi	r3,1
  839d14:	d8c02905 	stb	r3,164(sp)
  839d18:	00c00804 	movi	r3,32
  839d1c:	d8c02b05 	stb	r3,172(sp)
  839d20:	ac400007 	ldb	r17,0(r21)
  839d24:	003d0506 	br	83913c <__alt_mem_epcs_flash_controller_0+0xff83013c>
  839d28:	84000054 	ori	r16,r16,1
  839d2c:	ac400007 	ldb	r17,0(r21)
  839d30:	003d0206 	br	83913c <__alt_mem_epcs_flash_controller_0+0xff83013c>
  839d34:	8025883a 	mov	r18,r16
  839d38:	dc002903 	ldbu	r16,164(sp)
  839d3c:	e011883a 	mov	r8,fp
  839d40:	84003fcc 	andi	r16,r16,255
  839d44:	803de726 	beq	r16,zero,8394e4 <__alt_mem_epcs_flash_controller_0+0xff8304e4>
  839d48:	d8c02b03 	ldbu	r3,172(sp)
  839d4c:	d8c02785 	stb	r3,158(sp)
  839d50:	003de406 	br	8394e4 <__alt_mem_epcs_flash_controller_0+0xff8304e4>
  839d54:	84001014 	ori	r16,r16,64
  839d58:	ac400007 	ldb	r17,0(r21)
  839d5c:	003cf706 	br	83913c <__alt_mem_epcs_flash_controller_0+0xff83013c>
  839d60:	ac400007 	ldb	r17,0(r21)
  839d64:	00801b04 	movi	r2,108
  839d68:	88838f26 	beq	r17,r2,83aba8 <___vfprintf_internal_r+0x1bf4>
  839d6c:	84000414 	ori	r16,r16,16
  839d70:	003cf206 	br	83913c <__alt_mem_epcs_flash_controller_0+0xff83013c>
  839d74:	8025883a 	mov	r18,r16
  839d78:	dc002903 	ldbu	r16,164(sp)
  839d7c:	e011883a 	mov	r8,fp
  839d80:	84003fcc 	andi	r16,r16,255
  839d84:	80053f1e 	bne	r16,zero,83b284 <___vfprintf_internal_r+0x22d0>
  839d88:	9080080c 	andi	r2,r18,32
  839d8c:	1002d226 	beq	r2,zero,83a8d8 <___vfprintf_internal_r+0x1924>
  839d90:	d9002e17 	ldw	r4,184(sp)
  839d94:	d9402f17 	ldw	r5,188(sp)
  839d98:	20800017 	ldw	r2,0(r4)
  839d9c:	2807d7fa 	srai	r3,r5,31
  839da0:	21000104 	addi	r4,r4,4
  839da4:	d9002e15 	stw	r4,184(sp)
  839da8:	11400015 	stw	r5,0(r2)
  839dac:	10c00115 	stw	r3,4(r2)
  839db0:	003cb806 	br	839094 <__alt_mem_epcs_flash_controller_0+0xff830094>
  839db4:	d8c02e17 	ldw	r3,184(sp)
  839db8:	d9002e17 	ldw	r4,184(sp)
  839dbc:	8025883a 	mov	r18,r16
  839dc0:	18800017 	ldw	r2,0(r3)
  839dc4:	21000104 	addi	r4,r4,4
  839dc8:	00c00044 	movi	r3,1
  839dcc:	e011883a 	mov	r8,fp
  839dd0:	d8c02915 	stw	r3,164(sp)
  839dd4:	d8002785 	stb	zero,158(sp)
  839dd8:	d8801405 	stb	r2,80(sp)
  839ddc:	d9002e15 	stw	r4,184(sp)
  839de0:	d8c02b15 	stw	r3,172(sp)
  839de4:	d8002a15 	stw	zero,168(sp)
  839de8:	d8003215 	stw	zero,200(sp)
  839dec:	dc001404 	addi	r16,sp,80
  839df0:	0039883a 	mov	fp,zero
  839df4:	003e5306 	br	839744 <__alt_mem_epcs_flash_controller_0+0xff830744>
  839df8:	010021b4 	movhi	r4,134
  839dfc:	2125fe04 	addi	r4,r4,-26632
  839e00:	0039883a 	mov	fp,zero
  839e04:	d9003915 	stw	r4,228(sp)
  839e08:	04401e04 	movi	r17,120
  839e0c:	003f6906 	br	839bb4 <__alt_mem_epcs_flash_controller_0+0xff830bb4>
  839e10:	8025883a 	mov	r18,r16
  839e14:	dc002903 	ldbu	r16,164(sp)
  839e18:	e011883a 	mov	r8,fp
  839e1c:	84003fcc 	andi	r16,r16,255
  839e20:	8005081e 	bne	r16,zero,83b244 <___vfprintf_internal_r+0x2290>
  839e24:	883d6126 	beq	r17,zero,8393ac <__alt_mem_epcs_flash_controller_0+0xff8303ac>
  839e28:	00c00044 	movi	r3,1
  839e2c:	d8c02915 	stw	r3,164(sp)
  839e30:	dc401405 	stb	r17,80(sp)
  839e34:	d8002785 	stb	zero,158(sp)
  839e38:	003fe906 	br	839de0 <__alt_mem_epcs_flash_controller_0+0xff830de0>
  839e3c:	014021b4 	movhi	r5,134
  839e40:	2965fe04 	addi	r5,r5,-26632
  839e44:	d9403915 	stw	r5,228(sp)
  839e48:	d8c02e15 	stw	r3,184(sp)
  839e4c:	1025883a 	mov	r18,r2
  839e50:	04401e04 	movi	r17,120
  839e54:	9d84b03a 	or	r2,r19,r22
  839e58:	1000fc1e 	bne	r2,zero,83a24c <___vfprintf_internal_r+0x1298>
  839e5c:	0039883a 	mov	fp,zero
  839e60:	00800084 	movi	r2,2
  839e64:	10803fcc 	andi	r2,r2,255
  839e68:	00c00044 	movi	r3,1
  839e6c:	10c20f26 	beq	r2,r3,83a6ac <___vfprintf_internal_r+0x16f8>
  839e70:	00c00084 	movi	r3,2
  839e74:	10fd3326 	beq	r2,r3,839344 <__alt_mem_epcs_flash_controller_0+0xff830344>
  839e78:	003e0b06 	br	8396a8 <__alt_mem_epcs_flash_controller_0+0xff8306a8>
  839e7c:	d8c02017 	ldw	r3,128(sp)
  839e80:	003e7106 	br	839848 <__alt_mem_epcs_flash_controller_0+0xff830848>
  839e84:	00801944 	movi	r2,101
  839e88:	14407e0e 	bge	r2,r17,83a084 <___vfprintf_internal_r+0x10d0>
  839e8c:	d9003617 	ldw	r4,216(sp)
  839e90:	d9403817 	ldw	r5,224(sp)
  839e94:	000d883a 	mov	r6,zero
  839e98:	000f883a 	mov	r7,zero
  839e9c:	d8c03c15 	stw	r3,240(sp)
  839ea0:	da003d15 	stw	r8,244(sp)
  839ea4:	0848b880 	call	848b88 <__eqdf2>
  839ea8:	d8c03c17 	ldw	r3,240(sp)
  839eac:	da003d17 	ldw	r8,244(sp)
  839eb0:	1000f71e 	bne	r2,zero,83a290 <___vfprintf_internal_r+0x12dc>
  839eb4:	d8801f17 	ldw	r2,124(sp)
  839eb8:	010021b4 	movhi	r4,134
  839ebc:	21260504 	addi	r4,r4,-26604
  839ec0:	18c00044 	addi	r3,r3,1
  839ec4:	10800044 	addi	r2,r2,1
  839ec8:	41000015 	stw	r4,0(r8)
  839ecc:	01000044 	movi	r4,1
  839ed0:	41000115 	stw	r4,4(r8)
  839ed4:	d8c02015 	stw	r3,128(sp)
  839ed8:	d8801f15 	stw	r2,124(sp)
  839edc:	010001c4 	movi	r4,7
  839ee0:	2082b816 	blt	r4,r2,83a9c4 <___vfprintf_internal_r+0x1a10>
  839ee4:	42000204 	addi	r8,r8,8
  839ee8:	d8802617 	ldw	r2,152(sp)
  839eec:	d9403317 	ldw	r5,204(sp)
  839ef0:	11400216 	blt	r2,r5,839efc <___vfprintf_internal_r+0xf48>
  839ef4:	9080004c 	andi	r2,r18,1
  839ef8:	103eb326 	beq	r2,zero,8399c8 <__alt_mem_epcs_flash_controller_0+0xff8309c8>
  839efc:	d8803717 	ldw	r2,220(sp)
  839f00:	d9003417 	ldw	r4,208(sp)
  839f04:	d9403717 	ldw	r5,220(sp)
  839f08:	1887883a 	add	r3,r3,r2
  839f0c:	d8801f17 	ldw	r2,124(sp)
  839f10:	41000015 	stw	r4,0(r8)
  839f14:	41400115 	stw	r5,4(r8)
  839f18:	10800044 	addi	r2,r2,1
  839f1c:	d8c02015 	stw	r3,128(sp)
  839f20:	d8801f15 	stw	r2,124(sp)
  839f24:	010001c4 	movi	r4,7
  839f28:	20832916 	blt	r4,r2,83abd0 <___vfprintf_internal_r+0x1c1c>
  839f2c:	42000204 	addi	r8,r8,8
  839f30:	d8803317 	ldw	r2,204(sp)
  839f34:	143fffc4 	addi	r16,r2,-1
  839f38:	043ea30e 	bge	zero,r16,8399c8 <__alt_mem_epcs_flash_controller_0+0xff8309c8>
  839f3c:	04400404 	movi	r17,16
  839f40:	d8801f17 	ldw	r2,124(sp)
  839f44:	8c00880e 	bge	r17,r16,83a168 <___vfprintf_internal_r+0x11b4>
  839f48:	014021b4 	movhi	r5,134
  839f4c:	29661804 	addi	r5,r5,-26528
  839f50:	d9402c15 	stw	r5,176(sp)
  839f54:	058001c4 	movi	r22,7
  839f58:	dcc02d17 	ldw	r19,180(sp)
  839f5c:	00000306 	br	839f6c <___vfprintf_internal_r+0xfb8>
  839f60:	42000204 	addi	r8,r8,8
  839f64:	843ffc04 	addi	r16,r16,-16
  839f68:	8c00820e 	bge	r17,r16,83a174 <___vfprintf_internal_r+0x11c0>
  839f6c:	18c00404 	addi	r3,r3,16
  839f70:	10800044 	addi	r2,r2,1
  839f74:	45000015 	stw	r20,0(r8)
  839f78:	44400115 	stw	r17,4(r8)
  839f7c:	d8c02015 	stw	r3,128(sp)
  839f80:	d8801f15 	stw	r2,124(sp)
  839f84:	b0bff60e 	bge	r22,r2,839f60 <__alt_mem_epcs_flash_controller_0+0xff830f60>
  839f88:	d9801e04 	addi	r6,sp,120
  839f8c:	b80b883a 	mov	r5,r23
  839f90:	9809883a 	mov	r4,r19
  839f94:	08442ac0 	call	8442ac <__sprint_r>
  839f98:	103d0a1e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  839f9c:	d8c02017 	ldw	r3,128(sp)
  839fa0:	d8801f17 	ldw	r2,124(sp)
  839fa4:	da000404 	addi	r8,sp,16
  839fa8:	003fee06 	br	839f64 <__alt_mem_epcs_flash_controller_0+0xff830f64>
  839fac:	d9403117 	ldw	r5,196(sp)
  839fb0:	d8802917 	ldw	r2,164(sp)
  839fb4:	28adc83a 	sub	r22,r5,r2
  839fb8:	05be410e 	bge	zero,r22,8398c0 <__alt_mem_epcs_flash_controller_0+0xff8308c0>
  839fbc:	07000404 	movi	fp,16
  839fc0:	d8801f17 	ldw	r2,124(sp)
  839fc4:	e5838f0e 	bge	fp,r22,83ae04 <___vfprintf_internal_r+0x1e50>
  839fc8:	014021b4 	movhi	r5,134
  839fcc:	29661804 	addi	r5,r5,-26528
  839fd0:	dc403015 	stw	r17,192(sp)
  839fd4:	d9402c15 	stw	r5,176(sp)
  839fd8:	b023883a 	mov	r17,r22
  839fdc:	04c001c4 	movi	r19,7
  839fe0:	a82d883a 	mov	r22,r21
  839fe4:	902b883a 	mov	r21,r18
  839fe8:	8025883a 	mov	r18,r16
  839fec:	dc002d17 	ldw	r16,180(sp)
  839ff0:	00000306 	br	83a000 <___vfprintf_internal_r+0x104c>
  839ff4:	8c7ffc04 	addi	r17,r17,-16
  839ff8:	42000204 	addi	r8,r8,8
  839ffc:	e440110e 	bge	fp,r17,83a044 <___vfprintf_internal_r+0x1090>
  83a000:	18c00404 	addi	r3,r3,16
  83a004:	10800044 	addi	r2,r2,1
  83a008:	45000015 	stw	r20,0(r8)
  83a00c:	47000115 	stw	fp,4(r8)
  83a010:	d8c02015 	stw	r3,128(sp)
  83a014:	d8801f15 	stw	r2,124(sp)
  83a018:	98bff60e 	bge	r19,r2,839ff4 <__alt_mem_epcs_flash_controller_0+0xff830ff4>
  83a01c:	d9801e04 	addi	r6,sp,120
  83a020:	b80b883a 	mov	r5,r23
  83a024:	8009883a 	mov	r4,r16
  83a028:	08442ac0 	call	8442ac <__sprint_r>
  83a02c:	103ce51e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a030:	8c7ffc04 	addi	r17,r17,-16
  83a034:	d8c02017 	ldw	r3,128(sp)
  83a038:	d8801f17 	ldw	r2,124(sp)
  83a03c:	da000404 	addi	r8,sp,16
  83a040:	e47fef16 	blt	fp,r17,83a000 <__alt_mem_epcs_flash_controller_0+0xff831000>
  83a044:	9021883a 	mov	r16,r18
  83a048:	a825883a 	mov	r18,r21
  83a04c:	b02b883a 	mov	r21,r22
  83a050:	882d883a 	mov	r22,r17
  83a054:	dc403017 	ldw	r17,192(sp)
  83a058:	d9002c17 	ldw	r4,176(sp)
  83a05c:	1d87883a 	add	r3,r3,r22
  83a060:	10800044 	addi	r2,r2,1
  83a064:	41000015 	stw	r4,0(r8)
  83a068:	45800115 	stw	r22,4(r8)
  83a06c:	d8c02015 	stw	r3,128(sp)
  83a070:	d8801f15 	stw	r2,124(sp)
  83a074:	010001c4 	movi	r4,7
  83a078:	20818e16 	blt	r4,r2,83a6b4 <___vfprintf_internal_r+0x1700>
  83a07c:	42000204 	addi	r8,r8,8
  83a080:	003e0f06 	br	8398c0 <__alt_mem_epcs_flash_controller_0+0xff8308c0>
  83a084:	d9403317 	ldw	r5,204(sp)
  83a088:	00800044 	movi	r2,1
  83a08c:	18c00044 	addi	r3,r3,1
  83a090:	1141530e 	bge	r2,r5,83a5e0 <___vfprintf_internal_r+0x162c>
  83a094:	dc401f17 	ldw	r17,124(sp)
  83a098:	00800044 	movi	r2,1
  83a09c:	40800115 	stw	r2,4(r8)
  83a0a0:	8c400044 	addi	r17,r17,1
  83a0a4:	44000015 	stw	r16,0(r8)
  83a0a8:	d8c02015 	stw	r3,128(sp)
  83a0ac:	dc401f15 	stw	r17,124(sp)
  83a0b0:	008001c4 	movi	r2,7
  83a0b4:	14416b16 	blt	r2,r17,83a664 <___vfprintf_internal_r+0x16b0>
  83a0b8:	42000204 	addi	r8,r8,8
  83a0bc:	d8803717 	ldw	r2,220(sp)
  83a0c0:	d9003417 	ldw	r4,208(sp)
  83a0c4:	8c400044 	addi	r17,r17,1
  83a0c8:	10c7883a 	add	r3,r2,r3
  83a0cc:	40800115 	stw	r2,4(r8)
  83a0d0:	41000015 	stw	r4,0(r8)
  83a0d4:	d8c02015 	stw	r3,128(sp)
  83a0d8:	dc401f15 	stw	r17,124(sp)
  83a0dc:	008001c4 	movi	r2,7
  83a0e0:	14416916 	blt	r2,r17,83a688 <___vfprintf_internal_r+0x16d4>
  83a0e4:	45800204 	addi	r22,r8,8
  83a0e8:	d9003617 	ldw	r4,216(sp)
  83a0ec:	d9403817 	ldw	r5,224(sp)
  83a0f0:	000d883a 	mov	r6,zero
  83a0f4:	000f883a 	mov	r7,zero
  83a0f8:	d8c03c15 	stw	r3,240(sp)
  83a0fc:	0848b880 	call	848b88 <__eqdf2>
  83a100:	d8c03c17 	ldw	r3,240(sp)
  83a104:	1000bc26 	beq	r2,zero,83a3f8 <___vfprintf_internal_r+0x1444>
  83a108:	d9403317 	ldw	r5,204(sp)
  83a10c:	84000044 	addi	r16,r16,1
  83a110:	8c400044 	addi	r17,r17,1
  83a114:	28bfffc4 	addi	r2,r5,-1
  83a118:	1887883a 	add	r3,r3,r2
  83a11c:	b0800115 	stw	r2,4(r22)
  83a120:	b4000015 	stw	r16,0(r22)
  83a124:	d8c02015 	stw	r3,128(sp)
  83a128:	dc401f15 	stw	r17,124(sp)
  83a12c:	008001c4 	movi	r2,7
  83a130:	14414316 	blt	r2,r17,83a640 <___vfprintf_internal_r+0x168c>
  83a134:	b5800204 	addi	r22,r22,8
  83a138:	d9003a17 	ldw	r4,232(sp)
  83a13c:	df0022c4 	addi	fp,sp,139
  83a140:	8c400044 	addi	r17,r17,1
  83a144:	20c7883a 	add	r3,r4,r3
  83a148:	b7000015 	stw	fp,0(r22)
  83a14c:	b1000115 	stw	r4,4(r22)
  83a150:	d8c02015 	stw	r3,128(sp)
  83a154:	dc401f15 	stw	r17,124(sp)
  83a158:	008001c4 	movi	r2,7
  83a15c:	14400e16 	blt	r2,r17,83a198 <___vfprintf_internal_r+0x11e4>
  83a160:	b2000204 	addi	r8,r22,8
  83a164:	003e1806 	br	8399c8 <__alt_mem_epcs_flash_controller_0+0xff8309c8>
  83a168:	010021b4 	movhi	r4,134
  83a16c:	21261804 	addi	r4,r4,-26528
  83a170:	d9002c15 	stw	r4,176(sp)
  83a174:	d9002c17 	ldw	r4,176(sp)
  83a178:	1c07883a 	add	r3,r3,r16
  83a17c:	44000115 	stw	r16,4(r8)
  83a180:	41000015 	stw	r4,0(r8)
  83a184:	10800044 	addi	r2,r2,1
  83a188:	d8c02015 	stw	r3,128(sp)
  83a18c:	d8801f15 	stw	r2,124(sp)
  83a190:	010001c4 	movi	r4,7
  83a194:	20be0b0e 	bge	r4,r2,8399c4 <__alt_mem_epcs_flash_controller_0+0xff8309c4>
  83a198:	d9002d17 	ldw	r4,180(sp)
  83a19c:	d9801e04 	addi	r6,sp,120
  83a1a0:	b80b883a 	mov	r5,r23
  83a1a4:	08442ac0 	call	8442ac <__sprint_r>
  83a1a8:	103c861e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a1ac:	d8c02017 	ldw	r3,128(sp)
  83a1b0:	da000404 	addi	r8,sp,16
  83a1b4:	003e0406 	br	8399c8 <__alt_mem_epcs_flash_controller_0+0xff8309c8>
  83a1b8:	d9002d17 	ldw	r4,180(sp)
  83a1bc:	d9801e04 	addi	r6,sp,120
  83a1c0:	b80b883a 	mov	r5,r23
  83a1c4:	08442ac0 	call	8442ac <__sprint_r>
  83a1c8:	103e3b26 	beq	r2,zero,839ab8 <__alt_mem_epcs_flash_controller_0+0xff830ab8>
  83a1cc:	003c7d06 	br	8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a1d0:	d9002d17 	ldw	r4,180(sp)
  83a1d4:	d9801e04 	addi	r6,sp,120
  83a1d8:	b80b883a 	mov	r5,r23
  83a1dc:	08442ac0 	call	8442ac <__sprint_r>
  83a1e0:	103c781e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a1e4:	d8c02017 	ldw	r3,128(sp)
  83a1e8:	da000404 	addi	r8,sp,16
  83a1ec:	003de906 	br	839994 <__alt_mem_epcs_flash_controller_0+0xff830994>
  83a1f0:	d9002d17 	ldw	r4,180(sp)
  83a1f4:	d9801e04 	addi	r6,sp,120
  83a1f8:	b80b883a 	mov	r5,r23
  83a1fc:	08442ac0 	call	8442ac <__sprint_r>
  83a200:	103c701e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a204:	d8c02017 	ldw	r3,128(sp)
  83a208:	da000404 	addi	r8,sp,16
  83a20c:	003d9b06 	br	83987c <__alt_mem_epcs_flash_controller_0+0xff83087c>
  83a210:	d9002d17 	ldw	r4,180(sp)
  83a214:	d9801e04 	addi	r6,sp,120
  83a218:	b80b883a 	mov	r5,r23
  83a21c:	08442ac0 	call	8442ac <__sprint_r>
  83a220:	103c681e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a224:	d8c02017 	ldw	r3,128(sp)
  83a228:	da000404 	addi	r8,sp,16
  83a22c:	003da106 	br	8398b4 <__alt_mem_epcs_flash_controller_0+0xff8308b4>
  83a230:	d9402a17 	ldw	r5,168(sp)
  83a234:	d8002785 	stb	zero,158(sp)
  83a238:	283f0616 	blt	r5,zero,839e54 <__alt_mem_epcs_flash_controller_0+0xff830e54>
  83a23c:	00ffdfc4 	movi	r3,-129
  83a240:	9d84b03a 	or	r2,r19,r22
  83a244:	90e4703a 	and	r18,r18,r3
  83a248:	103c3b26 	beq	r2,zero,839338 <__alt_mem_epcs_flash_controller_0+0xff830338>
  83a24c:	0039883a 	mov	fp,zero
  83a250:	003e5806 	br	839bb4 <__alt_mem_epcs_flash_controller_0+0xff830bb4>
  83a254:	9080040c 	andi	r2,r18,16
  83a258:	1001b326 	beq	r2,zero,83a928 <___vfprintf_internal_r+0x1974>
  83a25c:	d8c02e17 	ldw	r3,184(sp)
  83a260:	d9002a17 	ldw	r4,168(sp)
  83a264:	d8002785 	stb	zero,158(sp)
  83a268:	18800104 	addi	r2,r3,4
  83a26c:	1cc00017 	ldw	r19,0(r3)
  83a270:	002d883a 	mov	r22,zero
  83a274:	2001b516 	blt	r4,zero,83a94c <___vfprintf_internal_r+0x1998>
  83a278:	00ffdfc4 	movi	r3,-129
  83a27c:	d8802e15 	stw	r2,184(sp)
  83a280:	90e4703a 	and	r18,r18,r3
  83a284:	983d0526 	beq	r19,zero,83969c <__alt_mem_epcs_flash_controller_0+0xff83069c>
  83a288:	0039883a 	mov	fp,zero
  83a28c:	003d0806 	br	8396b0 <__alt_mem_epcs_flash_controller_0+0xff8306b0>
  83a290:	dc402617 	ldw	r17,152(sp)
  83a294:	0441d30e 	bge	zero,r17,83a9e4 <___vfprintf_internal_r+0x1a30>
  83a298:	dc403217 	ldw	r17,200(sp)
  83a29c:	d8803317 	ldw	r2,204(sp)
  83a2a0:	1440010e 	bge	r2,r17,83a2a8 <___vfprintf_internal_r+0x12f4>
  83a2a4:	1023883a 	mov	r17,r2
  83a2a8:	04400a0e 	bge	zero,r17,83a2d4 <___vfprintf_internal_r+0x1320>
  83a2ac:	d8801f17 	ldw	r2,124(sp)
  83a2b0:	1c47883a 	add	r3,r3,r17
  83a2b4:	44000015 	stw	r16,0(r8)
  83a2b8:	10800044 	addi	r2,r2,1
  83a2bc:	44400115 	stw	r17,4(r8)
  83a2c0:	d8c02015 	stw	r3,128(sp)
  83a2c4:	d8801f15 	stw	r2,124(sp)
  83a2c8:	010001c4 	movi	r4,7
  83a2cc:	20826516 	blt	r4,r2,83ac64 <___vfprintf_internal_r+0x1cb0>
  83a2d0:	42000204 	addi	r8,r8,8
  83a2d4:	88026116 	blt	r17,zero,83ac5c <___vfprintf_internal_r+0x1ca8>
  83a2d8:	d9003217 	ldw	r4,200(sp)
  83a2dc:	2463c83a 	sub	r17,r4,r17
  83a2e0:	04407b0e 	bge	zero,r17,83a4d0 <___vfprintf_internal_r+0x151c>
  83a2e4:	05800404 	movi	r22,16
  83a2e8:	d8801f17 	ldw	r2,124(sp)
  83a2ec:	b4419d0e 	bge	r22,r17,83a964 <___vfprintf_internal_r+0x19b0>
  83a2f0:	010021b4 	movhi	r4,134
  83a2f4:	21261804 	addi	r4,r4,-26528
  83a2f8:	d9002c15 	stw	r4,176(sp)
  83a2fc:	070001c4 	movi	fp,7
  83a300:	dcc02d17 	ldw	r19,180(sp)
  83a304:	00000306 	br	83a314 <___vfprintf_internal_r+0x1360>
  83a308:	42000204 	addi	r8,r8,8
  83a30c:	8c7ffc04 	addi	r17,r17,-16
  83a310:	b441970e 	bge	r22,r17,83a970 <___vfprintf_internal_r+0x19bc>
  83a314:	18c00404 	addi	r3,r3,16
  83a318:	10800044 	addi	r2,r2,1
  83a31c:	45000015 	stw	r20,0(r8)
  83a320:	45800115 	stw	r22,4(r8)
  83a324:	d8c02015 	stw	r3,128(sp)
  83a328:	d8801f15 	stw	r2,124(sp)
  83a32c:	e0bff60e 	bge	fp,r2,83a308 <__alt_mem_epcs_flash_controller_0+0xff831308>
  83a330:	d9801e04 	addi	r6,sp,120
  83a334:	b80b883a 	mov	r5,r23
  83a338:	9809883a 	mov	r4,r19
  83a33c:	08442ac0 	call	8442ac <__sprint_r>
  83a340:	103c201e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a344:	d8c02017 	ldw	r3,128(sp)
  83a348:	d8801f17 	ldw	r2,124(sp)
  83a34c:	da000404 	addi	r8,sp,16
  83a350:	003fee06 	br	83a30c <__alt_mem_epcs_flash_controller_0+0xff83130c>
  83a354:	d9002d17 	ldw	r4,180(sp)
  83a358:	d9801e04 	addi	r6,sp,120
  83a35c:	b80b883a 	mov	r5,r23
  83a360:	08442ac0 	call	8442ac <__sprint_r>
  83a364:	103c171e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a368:	d8c02017 	ldw	r3,128(sp)
  83a36c:	df002787 	ldb	fp,158(sp)
  83a370:	da000404 	addi	r8,sp,16
  83a374:	003d3406 	br	839848 <__alt_mem_epcs_flash_controller_0+0xff830848>
  83a378:	9080040c 	andi	r2,r18,16
  83a37c:	10016126 	beq	r2,zero,83a904 <___vfprintf_internal_r+0x1950>
  83a380:	d9402e17 	ldw	r5,184(sp)
  83a384:	2cc00017 	ldw	r19,0(r5)
  83a388:	29400104 	addi	r5,r5,4
  83a38c:	d9402e15 	stw	r5,184(sp)
  83a390:	982dd7fa 	srai	r22,r19,31
  83a394:	b005883a 	mov	r2,r22
  83a398:	003c5a06 	br	839504 <__alt_mem_epcs_flash_controller_0+0xff830504>
  83a39c:	9080040c 	andi	r2,r18,16
  83a3a0:	10003526 	beq	r2,zero,83a478 <___vfprintf_internal_r+0x14c4>
  83a3a4:	d8c02e17 	ldw	r3,184(sp)
  83a3a8:	d9002a17 	ldw	r4,168(sp)
  83a3ac:	d8002785 	stb	zero,158(sp)
  83a3b0:	18800104 	addi	r2,r3,4
  83a3b4:	1cc00017 	ldw	r19,0(r3)
  83a3b8:	002d883a 	mov	r22,zero
  83a3bc:	20003716 	blt	r4,zero,83a49c <___vfprintf_internal_r+0x14e8>
  83a3c0:	00ffdfc4 	movi	r3,-129
  83a3c4:	d8802e15 	stw	r2,184(sp)
  83a3c8:	90e4703a 	and	r18,r18,r3
  83a3cc:	0039883a 	mov	fp,zero
  83a3d0:	983dd426 	beq	r19,zero,839b24 <__alt_mem_epcs_flash_controller_0+0xff830b24>
  83a3d4:	00800244 	movi	r2,9
  83a3d8:	14fc5336 	bltu	r2,r19,839528 <__alt_mem_epcs_flash_controller_0+0xff830528>
  83a3dc:	d8c02817 	ldw	r3,160(sp)
  83a3e0:	dc001dc4 	addi	r16,sp,119
  83a3e4:	9cc00c04 	addi	r19,r19,48
  83a3e8:	1c07c83a 	sub	r3,r3,r16
  83a3ec:	dcc01dc5 	stb	r19,119(sp)
  83a3f0:	d8c02b15 	stw	r3,172(sp)
  83a3f4:	003cc606 	br	839710 <__alt_mem_epcs_flash_controller_0+0xff830710>
  83a3f8:	d8803317 	ldw	r2,204(sp)
  83a3fc:	143fffc4 	addi	r16,r2,-1
  83a400:	043f4d0e 	bge	zero,r16,83a138 <__alt_mem_epcs_flash_controller_0+0xff831138>
  83a404:	07000404 	movi	fp,16
  83a408:	e400810e 	bge	fp,r16,83a610 <___vfprintf_internal_r+0x165c>
  83a40c:	014021b4 	movhi	r5,134
  83a410:	29661804 	addi	r5,r5,-26528
  83a414:	d9402c15 	stw	r5,176(sp)
  83a418:	01c001c4 	movi	r7,7
  83a41c:	dcc02d17 	ldw	r19,180(sp)
  83a420:	00000306 	br	83a430 <___vfprintf_internal_r+0x147c>
  83a424:	b5800204 	addi	r22,r22,8
  83a428:	843ffc04 	addi	r16,r16,-16
  83a42c:	e4007b0e 	bge	fp,r16,83a61c <___vfprintf_internal_r+0x1668>
  83a430:	18c00404 	addi	r3,r3,16
  83a434:	8c400044 	addi	r17,r17,1
  83a438:	b5000015 	stw	r20,0(r22)
  83a43c:	b7000115 	stw	fp,4(r22)
  83a440:	d8c02015 	stw	r3,128(sp)
  83a444:	dc401f15 	stw	r17,124(sp)
  83a448:	3c7ff60e 	bge	r7,r17,83a424 <__alt_mem_epcs_flash_controller_0+0xff831424>
  83a44c:	d9801e04 	addi	r6,sp,120
  83a450:	b80b883a 	mov	r5,r23
  83a454:	9809883a 	mov	r4,r19
  83a458:	d9c03c15 	stw	r7,240(sp)
  83a45c:	08442ac0 	call	8442ac <__sprint_r>
  83a460:	d9c03c17 	ldw	r7,240(sp)
  83a464:	103bd71e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a468:	d8c02017 	ldw	r3,128(sp)
  83a46c:	dc401f17 	ldw	r17,124(sp)
  83a470:	dd800404 	addi	r22,sp,16
  83a474:	003fec06 	br	83a428 <__alt_mem_epcs_flash_controller_0+0xff831428>
  83a478:	9080100c 	andi	r2,r18,64
  83a47c:	d8002785 	stb	zero,158(sp)
  83a480:	10010e26 	beq	r2,zero,83a8bc <___vfprintf_internal_r+0x1908>
  83a484:	d9402e17 	ldw	r5,184(sp)
  83a488:	d8c02a17 	ldw	r3,168(sp)
  83a48c:	002d883a 	mov	r22,zero
  83a490:	28800104 	addi	r2,r5,4
  83a494:	2cc0000b 	ldhu	r19,0(r5)
  83a498:	183fc90e 	bge	r3,zero,83a3c0 <__alt_mem_epcs_flash_controller_0+0xff8313c0>
  83a49c:	d8802e15 	stw	r2,184(sp)
  83a4a0:	0039883a 	mov	fp,zero
  83a4a4:	9d84b03a 	or	r2,r19,r22
  83a4a8:	103c1e1e 	bne	r2,zero,839524 <__alt_mem_epcs_flash_controller_0+0xff830524>
  83a4ac:	00800044 	movi	r2,1
  83a4b0:	003e6c06 	br	839e64 <__alt_mem_epcs_flash_controller_0+0xff830e64>
  83a4b4:	d9002d17 	ldw	r4,180(sp)
  83a4b8:	d9801e04 	addi	r6,sp,120
  83a4bc:	b80b883a 	mov	r5,r23
  83a4c0:	08442ac0 	call	8442ac <__sprint_r>
  83a4c4:	103bbf1e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a4c8:	d8c02017 	ldw	r3,128(sp)
  83a4cc:	da000404 	addi	r8,sp,16
  83a4d0:	d9003217 	ldw	r4,200(sp)
  83a4d4:	d8802617 	ldw	r2,152(sp)
  83a4d8:	d9403317 	ldw	r5,204(sp)
  83a4dc:	8123883a 	add	r17,r16,r4
  83a4e0:	11400216 	blt	r2,r5,83a4ec <___vfprintf_internal_r+0x1538>
  83a4e4:	9100004c 	andi	r4,r18,1
  83a4e8:	20000d26 	beq	r4,zero,83a520 <___vfprintf_internal_r+0x156c>
  83a4ec:	d9003717 	ldw	r4,220(sp)
  83a4f0:	d9403417 	ldw	r5,208(sp)
  83a4f4:	1907883a 	add	r3,r3,r4
  83a4f8:	d9001f17 	ldw	r4,124(sp)
  83a4fc:	41400015 	stw	r5,0(r8)
  83a500:	d9403717 	ldw	r5,220(sp)
  83a504:	21000044 	addi	r4,r4,1
  83a508:	d8c02015 	stw	r3,128(sp)
  83a50c:	41400115 	stw	r5,4(r8)
  83a510:	d9001f15 	stw	r4,124(sp)
  83a514:	014001c4 	movi	r5,7
  83a518:	2901e816 	blt	r5,r4,83acbc <___vfprintf_internal_r+0x1d08>
  83a51c:	42000204 	addi	r8,r8,8
  83a520:	d9003317 	ldw	r4,204(sp)
  83a524:	8121883a 	add	r16,r16,r4
  83a528:	2085c83a 	sub	r2,r4,r2
  83a52c:	8461c83a 	sub	r16,r16,r17
  83a530:	1400010e 	bge	r2,r16,83a538 <___vfprintf_internal_r+0x1584>
  83a534:	1021883a 	mov	r16,r2
  83a538:	04000a0e 	bge	zero,r16,83a564 <___vfprintf_internal_r+0x15b0>
  83a53c:	d9001f17 	ldw	r4,124(sp)
  83a540:	1c07883a 	add	r3,r3,r16
  83a544:	44400015 	stw	r17,0(r8)
  83a548:	21000044 	addi	r4,r4,1
  83a54c:	44000115 	stw	r16,4(r8)
  83a550:	d8c02015 	stw	r3,128(sp)
  83a554:	d9001f15 	stw	r4,124(sp)
  83a558:	014001c4 	movi	r5,7
  83a55c:	2901fb16 	blt	r5,r4,83ad4c <___vfprintf_internal_r+0x1d98>
  83a560:	42000204 	addi	r8,r8,8
  83a564:	8001f716 	blt	r16,zero,83ad44 <___vfprintf_internal_r+0x1d90>
  83a568:	1421c83a 	sub	r16,r2,r16
  83a56c:	043d160e 	bge	zero,r16,8399c8 <__alt_mem_epcs_flash_controller_0+0xff8309c8>
  83a570:	04400404 	movi	r17,16
  83a574:	d8801f17 	ldw	r2,124(sp)
  83a578:	8c3efb0e 	bge	r17,r16,83a168 <__alt_mem_epcs_flash_controller_0+0xff831168>
  83a57c:	014021b4 	movhi	r5,134
  83a580:	29661804 	addi	r5,r5,-26528
  83a584:	d9402c15 	stw	r5,176(sp)
  83a588:	058001c4 	movi	r22,7
  83a58c:	dcc02d17 	ldw	r19,180(sp)
  83a590:	00000306 	br	83a5a0 <___vfprintf_internal_r+0x15ec>
  83a594:	42000204 	addi	r8,r8,8
  83a598:	843ffc04 	addi	r16,r16,-16
  83a59c:	8c3ef50e 	bge	r17,r16,83a174 <__alt_mem_epcs_flash_controller_0+0xff831174>
  83a5a0:	18c00404 	addi	r3,r3,16
  83a5a4:	10800044 	addi	r2,r2,1
  83a5a8:	45000015 	stw	r20,0(r8)
  83a5ac:	44400115 	stw	r17,4(r8)
  83a5b0:	d8c02015 	stw	r3,128(sp)
  83a5b4:	d8801f15 	stw	r2,124(sp)
  83a5b8:	b0bff60e 	bge	r22,r2,83a594 <__alt_mem_epcs_flash_controller_0+0xff831594>
  83a5bc:	d9801e04 	addi	r6,sp,120
  83a5c0:	b80b883a 	mov	r5,r23
  83a5c4:	9809883a 	mov	r4,r19
  83a5c8:	08442ac0 	call	8442ac <__sprint_r>
  83a5cc:	103b7d1e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a5d0:	d8c02017 	ldw	r3,128(sp)
  83a5d4:	d8801f17 	ldw	r2,124(sp)
  83a5d8:	da000404 	addi	r8,sp,16
  83a5dc:	003fee06 	br	83a598 <__alt_mem_epcs_flash_controller_0+0xff831598>
  83a5e0:	9088703a 	and	r4,r18,r2
  83a5e4:	203eab1e 	bne	r4,zero,83a094 <__alt_mem_epcs_flash_controller_0+0xff831094>
  83a5e8:	dc401f17 	ldw	r17,124(sp)
  83a5ec:	40800115 	stw	r2,4(r8)
  83a5f0:	44000015 	stw	r16,0(r8)
  83a5f4:	8c400044 	addi	r17,r17,1
  83a5f8:	d8c02015 	stw	r3,128(sp)
  83a5fc:	dc401f15 	stw	r17,124(sp)
  83a600:	008001c4 	movi	r2,7
  83a604:	14400e16 	blt	r2,r17,83a640 <___vfprintf_internal_r+0x168c>
  83a608:	45800204 	addi	r22,r8,8
  83a60c:	003eca06 	br	83a138 <__alt_mem_epcs_flash_controller_0+0xff831138>
  83a610:	010021b4 	movhi	r4,134
  83a614:	21261804 	addi	r4,r4,-26528
  83a618:	d9002c15 	stw	r4,176(sp)
  83a61c:	d8802c17 	ldw	r2,176(sp)
  83a620:	1c07883a 	add	r3,r3,r16
  83a624:	8c400044 	addi	r17,r17,1
  83a628:	b0800015 	stw	r2,0(r22)
  83a62c:	b4000115 	stw	r16,4(r22)
  83a630:	d8c02015 	stw	r3,128(sp)
  83a634:	dc401f15 	stw	r17,124(sp)
  83a638:	008001c4 	movi	r2,7
  83a63c:	147ebd0e 	bge	r2,r17,83a134 <__alt_mem_epcs_flash_controller_0+0xff831134>
  83a640:	d9002d17 	ldw	r4,180(sp)
  83a644:	d9801e04 	addi	r6,sp,120
  83a648:	b80b883a 	mov	r5,r23
  83a64c:	08442ac0 	call	8442ac <__sprint_r>
  83a650:	103b5c1e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a654:	d8c02017 	ldw	r3,128(sp)
  83a658:	dc401f17 	ldw	r17,124(sp)
  83a65c:	dd800404 	addi	r22,sp,16
  83a660:	003eb506 	br	83a138 <__alt_mem_epcs_flash_controller_0+0xff831138>
  83a664:	d9002d17 	ldw	r4,180(sp)
  83a668:	d9801e04 	addi	r6,sp,120
  83a66c:	b80b883a 	mov	r5,r23
  83a670:	08442ac0 	call	8442ac <__sprint_r>
  83a674:	103b531e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a678:	d8c02017 	ldw	r3,128(sp)
  83a67c:	dc401f17 	ldw	r17,124(sp)
  83a680:	da000404 	addi	r8,sp,16
  83a684:	003e8d06 	br	83a0bc <__alt_mem_epcs_flash_controller_0+0xff8310bc>
  83a688:	d9002d17 	ldw	r4,180(sp)
  83a68c:	d9801e04 	addi	r6,sp,120
  83a690:	b80b883a 	mov	r5,r23
  83a694:	08442ac0 	call	8442ac <__sprint_r>
  83a698:	103b4a1e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a69c:	d8c02017 	ldw	r3,128(sp)
  83a6a0:	dc401f17 	ldw	r17,124(sp)
  83a6a4:	dd800404 	addi	r22,sp,16
  83a6a8:	003e8f06 	br	83a0e8 <__alt_mem_epcs_flash_controller_0+0xff8310e8>
  83a6ac:	0027883a 	mov	r19,zero
  83a6b0:	003f4a06 	br	83a3dc <__alt_mem_epcs_flash_controller_0+0xff8313dc>
  83a6b4:	d9002d17 	ldw	r4,180(sp)
  83a6b8:	d9801e04 	addi	r6,sp,120
  83a6bc:	b80b883a 	mov	r5,r23
  83a6c0:	08442ac0 	call	8442ac <__sprint_r>
  83a6c4:	103b3f1e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a6c8:	d8c02017 	ldw	r3,128(sp)
  83a6cc:	da000404 	addi	r8,sp,16
  83a6d0:	003c7b06 	br	8398c0 <__alt_mem_epcs_flash_controller_0+0xff8308c0>
  83a6d4:	d9402a17 	ldw	r5,168(sp)
  83a6d8:	04e7c83a 	sub	r19,zero,r19
  83a6dc:	07000b44 	movi	fp,45
  83a6e0:	9804c03a 	cmpne	r2,r19,zero
  83a6e4:	05adc83a 	sub	r22,zero,r22
  83a6e8:	df002785 	stb	fp,158(sp)
  83a6ec:	b0adc83a 	sub	r22,r22,r2
  83a6f0:	28017b16 	blt	r5,zero,83ace0 <___vfprintf_internal_r+0x1d2c>
  83a6f4:	00bfdfc4 	movi	r2,-129
  83a6f8:	90a4703a 	and	r18,r18,r2
  83a6fc:	003b8906 	br	839524 <__alt_mem_epcs_flash_controller_0+0xff830524>
  83a700:	d9003617 	ldw	r4,216(sp)
  83a704:	d9403817 	ldw	r5,224(sp)
  83a708:	da003d15 	stw	r8,244(sp)
  83a70c:	083ee440 	call	83ee44 <__fpclassifyd>
  83a710:	da003d17 	ldw	r8,244(sp)
  83a714:	1000f026 	beq	r2,zero,83aad8 <___vfprintf_internal_r+0x1b24>
  83a718:	d9002a17 	ldw	r4,168(sp)
  83a71c:	05bff7c4 	movi	r22,-33
  83a720:	00bfffc4 	movi	r2,-1
  83a724:	8dac703a 	and	r22,r17,r22
  83a728:	20820026 	beq	r4,r2,83af2c <___vfprintf_internal_r+0x1f78>
  83a72c:	008011c4 	movi	r2,71
  83a730:	b081f726 	beq	r22,r2,83af10 <___vfprintf_internal_r+0x1f5c>
  83a734:	d9003817 	ldw	r4,224(sp)
  83a738:	90c04014 	ori	r3,r18,256
  83a73c:	d8c02c15 	stw	r3,176(sp)
  83a740:	20021516 	blt	r4,zero,83af98 <___vfprintf_internal_r+0x1fe4>
  83a744:	dcc03817 	ldw	r19,224(sp)
  83a748:	d8002905 	stb	zero,164(sp)
  83a74c:	00801984 	movi	r2,102
  83a750:	8881f926 	beq	r17,r2,83af38 <___vfprintf_internal_r+0x1f84>
  83a754:	00801184 	movi	r2,70
  83a758:	88821c26 	beq	r17,r2,83afcc <___vfprintf_internal_r+0x2018>
  83a75c:	00801144 	movi	r2,69
  83a760:	b081ef26 	beq	r22,r2,83af20 <___vfprintf_internal_r+0x1f6c>
  83a764:	d8c02a17 	ldw	r3,168(sp)
  83a768:	d8802104 	addi	r2,sp,132
  83a76c:	d8800315 	stw	r2,12(sp)
  83a770:	d9403617 	ldw	r5,216(sp)
  83a774:	d8802504 	addi	r2,sp,148
  83a778:	d9002d17 	ldw	r4,180(sp)
  83a77c:	d8800215 	stw	r2,8(sp)
  83a780:	d8802604 	addi	r2,sp,152
  83a784:	d8c00015 	stw	r3,0(sp)
  83a788:	d8800115 	stw	r2,4(sp)
  83a78c:	01c00084 	movi	r7,2
  83a790:	980d883a 	mov	r6,r19
  83a794:	d8c03c15 	stw	r3,240(sp)
  83a798:	da003d15 	stw	r8,244(sp)
  83a79c:	083ba880 	call	83ba88 <_dtoa_r>
  83a7a0:	1021883a 	mov	r16,r2
  83a7a4:	008019c4 	movi	r2,103
  83a7a8:	d8c03c17 	ldw	r3,240(sp)
  83a7ac:	da003d17 	ldw	r8,244(sp)
  83a7b0:	88817126 	beq	r17,r2,83ad78 <___vfprintf_internal_r+0x1dc4>
  83a7b4:	008011c4 	movi	r2,71
  83a7b8:	88829126 	beq	r17,r2,83b200 <___vfprintf_internal_r+0x224c>
  83a7bc:	80f9883a 	add	fp,r16,r3
  83a7c0:	d9003617 	ldw	r4,216(sp)
  83a7c4:	000d883a 	mov	r6,zero
  83a7c8:	000f883a 	mov	r7,zero
  83a7cc:	980b883a 	mov	r5,r19
  83a7d0:	da003d15 	stw	r8,244(sp)
  83a7d4:	0848b880 	call	848b88 <__eqdf2>
  83a7d8:	da003d17 	ldw	r8,244(sp)
  83a7dc:	10018d26 	beq	r2,zero,83ae14 <___vfprintf_internal_r+0x1e60>
  83a7e0:	d8802117 	ldw	r2,132(sp)
  83a7e4:	1700062e 	bgeu	r2,fp,83a800 <___vfprintf_internal_r+0x184c>
  83a7e8:	01000c04 	movi	r4,48
  83a7ec:	10c00044 	addi	r3,r2,1
  83a7f0:	d8c02115 	stw	r3,132(sp)
  83a7f4:	11000005 	stb	r4,0(r2)
  83a7f8:	d8802117 	ldw	r2,132(sp)
  83a7fc:	173ffb36 	bltu	r2,fp,83a7ec <__alt_mem_epcs_flash_controller_0+0xff8317ec>
  83a800:	1405c83a 	sub	r2,r2,r16
  83a804:	d8803315 	stw	r2,204(sp)
  83a808:	008011c4 	movi	r2,71
  83a80c:	b0817626 	beq	r22,r2,83ade8 <___vfprintf_internal_r+0x1e34>
  83a810:	00801944 	movi	r2,101
  83a814:	1442800e 	bge	r2,r17,83b218 <___vfprintf_internal_r+0x2264>
  83a818:	d8c02617 	ldw	r3,152(sp)
  83a81c:	00801984 	movi	r2,102
  83a820:	d8c03215 	stw	r3,200(sp)
  83a824:	8881fe26 	beq	r17,r2,83b020 <___vfprintf_internal_r+0x206c>
  83a828:	d8c03217 	ldw	r3,200(sp)
  83a82c:	d9003317 	ldw	r4,204(sp)
  83a830:	1901dd16 	blt	r3,r4,83afa8 <___vfprintf_internal_r+0x1ff4>
  83a834:	9480004c 	andi	r18,r18,1
  83a838:	90022b1e 	bne	r18,zero,83b0e8 <___vfprintf_internal_r+0x2134>
  83a83c:	1805883a 	mov	r2,r3
  83a840:	18028316 	blt	r3,zero,83b250 <___vfprintf_internal_r+0x229c>
  83a844:	d8c03217 	ldw	r3,200(sp)
  83a848:	044019c4 	movi	r17,103
  83a84c:	d8c02b15 	stw	r3,172(sp)
  83a850:	df002907 	ldb	fp,164(sp)
  83a854:	e001531e 	bne	fp,zero,83ada4 <___vfprintf_internal_r+0x1df0>
  83a858:	df002783 	ldbu	fp,158(sp)
  83a85c:	d8802915 	stw	r2,164(sp)
  83a860:	dc802c17 	ldw	r18,176(sp)
  83a864:	d8002a15 	stw	zero,168(sp)
  83a868:	003baf06 	br	839728 <__alt_mem_epcs_flash_controller_0+0xff830728>
  83a86c:	d8c02e17 	ldw	r3,184(sp)
  83a870:	d9002e17 	ldw	r4,184(sp)
  83a874:	d9402e17 	ldw	r5,184(sp)
  83a878:	18c00017 	ldw	r3,0(r3)
  83a87c:	21000117 	ldw	r4,4(r4)
  83a880:	29400204 	addi	r5,r5,8
  83a884:	d8c03615 	stw	r3,216(sp)
  83a888:	d9003815 	stw	r4,224(sp)
  83a88c:	d9402e15 	stw	r5,184(sp)
  83a890:	003b5006 	br	8395d4 <__alt_mem_epcs_flash_controller_0+0xff8305d4>
  83a894:	ac400007 	ldb	r17,0(r21)
  83a898:	003a2806 	br	83913c <__alt_mem_epcs_flash_controller_0+0xff83013c>
  83a89c:	9080100c 	andi	r2,r18,64
  83a8a0:	1000a826 	beq	r2,zero,83ab44 <___vfprintf_internal_r+0x1b90>
  83a8a4:	d8c02e17 	ldw	r3,184(sp)
  83a8a8:	002d883a 	mov	r22,zero
  83a8ac:	1cc0000b 	ldhu	r19,0(r3)
  83a8b0:	18c00104 	addi	r3,r3,4
  83a8b4:	d8c02e15 	stw	r3,184(sp)
  83a8b8:	003caf06 	br	839b78 <__alt_mem_epcs_flash_controller_0+0xff830b78>
  83a8bc:	d9002e17 	ldw	r4,184(sp)
  83a8c0:	d9402a17 	ldw	r5,168(sp)
  83a8c4:	002d883a 	mov	r22,zero
  83a8c8:	20800104 	addi	r2,r4,4
  83a8cc:	24c00017 	ldw	r19,0(r4)
  83a8d0:	283ebb0e 	bge	r5,zero,83a3c0 <__alt_mem_epcs_flash_controller_0+0xff8313c0>
  83a8d4:	003ef106 	br	83a49c <__alt_mem_epcs_flash_controller_0+0xff83149c>
  83a8d8:	9080040c 	andi	r2,r18,16
  83a8dc:	1000921e 	bne	r2,zero,83ab28 <___vfprintf_internal_r+0x1b74>
  83a8e0:	9480100c 	andi	r18,r18,64
  83a8e4:	90013926 	beq	r18,zero,83adcc <___vfprintf_internal_r+0x1e18>
  83a8e8:	d9402e17 	ldw	r5,184(sp)
  83a8ec:	d8c02f17 	ldw	r3,188(sp)
  83a8f0:	28800017 	ldw	r2,0(r5)
  83a8f4:	29400104 	addi	r5,r5,4
  83a8f8:	d9402e15 	stw	r5,184(sp)
  83a8fc:	10c0000d 	sth	r3,0(r2)
  83a900:	0039e406 	br	839094 <__alt_mem_epcs_flash_controller_0+0xff830094>
  83a904:	9080100c 	andi	r2,r18,64
  83a908:	10008026 	beq	r2,zero,83ab0c <___vfprintf_internal_r+0x1b58>
  83a90c:	d8802e17 	ldw	r2,184(sp)
  83a910:	14c0000f 	ldh	r19,0(r2)
  83a914:	10800104 	addi	r2,r2,4
  83a918:	d8802e15 	stw	r2,184(sp)
  83a91c:	982dd7fa 	srai	r22,r19,31
  83a920:	b005883a 	mov	r2,r22
  83a924:	003af706 	br	839504 <__alt_mem_epcs_flash_controller_0+0xff830504>
  83a928:	9080100c 	andi	r2,r18,64
  83a92c:	d8002785 	stb	zero,158(sp)
  83a930:	10008a1e 	bne	r2,zero,83ab5c <___vfprintf_internal_r+0x1ba8>
  83a934:	d9002e17 	ldw	r4,184(sp)
  83a938:	d9402a17 	ldw	r5,168(sp)
  83a93c:	002d883a 	mov	r22,zero
  83a940:	20800104 	addi	r2,r4,4
  83a944:	24c00017 	ldw	r19,0(r4)
  83a948:	283e4b0e 	bge	r5,zero,83a278 <__alt_mem_epcs_flash_controller_0+0xff831278>
  83a94c:	9d86b03a 	or	r3,r19,r22
  83a950:	d8802e15 	stw	r2,184(sp)
  83a954:	183e4c1e 	bne	r3,zero,83a288 <__alt_mem_epcs_flash_controller_0+0xff831288>
  83a958:	0039883a 	mov	fp,zero
  83a95c:	0005883a 	mov	r2,zero
  83a960:	003d4006 	br	839e64 <__alt_mem_epcs_flash_controller_0+0xff830e64>
  83a964:	014021b4 	movhi	r5,134
  83a968:	29661804 	addi	r5,r5,-26528
  83a96c:	d9402c15 	stw	r5,176(sp)
  83a970:	d9402c17 	ldw	r5,176(sp)
  83a974:	1c47883a 	add	r3,r3,r17
  83a978:	10800044 	addi	r2,r2,1
  83a97c:	41400015 	stw	r5,0(r8)
  83a980:	44400115 	stw	r17,4(r8)
  83a984:	d8c02015 	stw	r3,128(sp)
  83a988:	d8801f15 	stw	r2,124(sp)
  83a98c:	010001c4 	movi	r4,7
  83a990:	20bec816 	blt	r4,r2,83a4b4 <__alt_mem_epcs_flash_controller_0+0xff8314b4>
  83a994:	42000204 	addi	r8,r8,8
  83a998:	003ecd06 	br	83a4d0 <__alt_mem_epcs_flash_controller_0+0xff8314d0>
  83a99c:	d9002a17 	ldw	r4,168(sp)
  83a9a0:	d8002785 	stb	zero,158(sp)
  83a9a4:	203d2d16 	blt	r4,zero,839e5c <__alt_mem_epcs_flash_controller_0+0xff830e5c>
  83a9a8:	00bfdfc4 	movi	r2,-129
  83a9ac:	90a4703a 	and	r18,r18,r2
  83a9b0:	003a6106 	br	839338 <__alt_mem_epcs_flash_controller_0+0xff830338>
  83a9b4:	010021b4 	movhi	r4,134
  83a9b8:	21261804 	addi	r4,r4,-26528
  83a9bc:	d9002c15 	stw	r4,176(sp)
  83a9c0:	003bea06 	br	83996c <__alt_mem_epcs_flash_controller_0+0xff83096c>
  83a9c4:	d9002d17 	ldw	r4,180(sp)
  83a9c8:	d9801e04 	addi	r6,sp,120
  83a9cc:	b80b883a 	mov	r5,r23
  83a9d0:	08442ac0 	call	8442ac <__sprint_r>
  83a9d4:	103a7b1e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83a9d8:	d8c02017 	ldw	r3,128(sp)
  83a9dc:	da000404 	addi	r8,sp,16
  83a9e0:	003d4106 	br	839ee8 <__alt_mem_epcs_flash_controller_0+0xff830ee8>
  83a9e4:	d8801f17 	ldw	r2,124(sp)
  83a9e8:	014021b4 	movhi	r5,134
  83a9ec:	01000044 	movi	r4,1
  83a9f0:	18c00044 	addi	r3,r3,1
  83a9f4:	10800044 	addi	r2,r2,1
  83a9f8:	29660504 	addi	r5,r5,-26604
  83a9fc:	41000115 	stw	r4,4(r8)
  83aa00:	41400015 	stw	r5,0(r8)
  83aa04:	d8c02015 	stw	r3,128(sp)
  83aa08:	d8801f15 	stw	r2,124(sp)
  83aa0c:	010001c4 	movi	r4,7
  83aa10:	20805c16 	blt	r4,r2,83ab84 <___vfprintf_internal_r+0x1bd0>
  83aa14:	42000204 	addi	r8,r8,8
  83aa18:	8800041e 	bne	r17,zero,83aa2c <___vfprintf_internal_r+0x1a78>
  83aa1c:	d8803317 	ldw	r2,204(sp)
  83aa20:	1000021e 	bne	r2,zero,83aa2c <___vfprintf_internal_r+0x1a78>
  83aa24:	9080004c 	andi	r2,r18,1
  83aa28:	103be726 	beq	r2,zero,8399c8 <__alt_mem_epcs_flash_controller_0+0xff8309c8>
  83aa2c:	d9003717 	ldw	r4,220(sp)
  83aa30:	d8801f17 	ldw	r2,124(sp)
  83aa34:	d9403417 	ldw	r5,208(sp)
  83aa38:	20c7883a 	add	r3,r4,r3
  83aa3c:	10800044 	addi	r2,r2,1
  83aa40:	41000115 	stw	r4,4(r8)
  83aa44:	41400015 	stw	r5,0(r8)
  83aa48:	d8c02015 	stw	r3,128(sp)
  83aa4c:	d8801f15 	stw	r2,124(sp)
  83aa50:	010001c4 	movi	r4,7
  83aa54:	20812116 	blt	r4,r2,83aedc <___vfprintf_internal_r+0x1f28>
  83aa58:	42000204 	addi	r8,r8,8
  83aa5c:	0463c83a 	sub	r17,zero,r17
  83aa60:	0440730e 	bge	zero,r17,83ac30 <___vfprintf_internal_r+0x1c7c>
  83aa64:	05800404 	movi	r22,16
  83aa68:	b440860e 	bge	r22,r17,83ac84 <___vfprintf_internal_r+0x1cd0>
  83aa6c:	014021b4 	movhi	r5,134
  83aa70:	29661804 	addi	r5,r5,-26528
  83aa74:	d9402c15 	stw	r5,176(sp)
  83aa78:	070001c4 	movi	fp,7
  83aa7c:	dcc02d17 	ldw	r19,180(sp)
  83aa80:	00000306 	br	83aa90 <___vfprintf_internal_r+0x1adc>
  83aa84:	42000204 	addi	r8,r8,8
  83aa88:	8c7ffc04 	addi	r17,r17,-16
  83aa8c:	b440800e 	bge	r22,r17,83ac90 <___vfprintf_internal_r+0x1cdc>
  83aa90:	18c00404 	addi	r3,r3,16
  83aa94:	10800044 	addi	r2,r2,1
  83aa98:	45000015 	stw	r20,0(r8)
  83aa9c:	45800115 	stw	r22,4(r8)
  83aaa0:	d8c02015 	stw	r3,128(sp)
  83aaa4:	d8801f15 	stw	r2,124(sp)
  83aaa8:	e0bff60e 	bge	fp,r2,83aa84 <__alt_mem_epcs_flash_controller_0+0xff831a84>
  83aaac:	d9801e04 	addi	r6,sp,120
  83aab0:	b80b883a 	mov	r5,r23
  83aab4:	9809883a 	mov	r4,r19
  83aab8:	08442ac0 	call	8442ac <__sprint_r>
  83aabc:	103a411e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83aac0:	d8c02017 	ldw	r3,128(sp)
  83aac4:	d8801f17 	ldw	r2,124(sp)
  83aac8:	da000404 	addi	r8,sp,16
  83aacc:	003fee06 	br	83aa88 <__alt_mem_epcs_flash_controller_0+0xff831a88>
  83aad0:	00bfffc4 	movi	r2,-1
  83aad4:	003a3f06 	br	8393d4 <__alt_mem_epcs_flash_controller_0+0xff8303d4>
  83aad8:	008011c4 	movi	r2,71
  83aadc:	1440b816 	blt	r2,r17,83adc0 <___vfprintf_internal_r+0x1e0c>
  83aae0:	040021b4 	movhi	r16,134
  83aae4:	8425f704 	addi	r16,r16,-26660
  83aae8:	00c000c4 	movi	r3,3
  83aaec:	00bfdfc4 	movi	r2,-129
  83aaf0:	d8c02915 	stw	r3,164(sp)
  83aaf4:	90a4703a 	and	r18,r18,r2
  83aaf8:	df002783 	ldbu	fp,158(sp)
  83aafc:	d8c02b15 	stw	r3,172(sp)
  83ab00:	d8002a15 	stw	zero,168(sp)
  83ab04:	d8003215 	stw	zero,200(sp)
  83ab08:	003b0706 	br	839728 <__alt_mem_epcs_flash_controller_0+0xff830728>
  83ab0c:	d8c02e17 	ldw	r3,184(sp)
  83ab10:	1cc00017 	ldw	r19,0(r3)
  83ab14:	18c00104 	addi	r3,r3,4
  83ab18:	d8c02e15 	stw	r3,184(sp)
  83ab1c:	982dd7fa 	srai	r22,r19,31
  83ab20:	b005883a 	mov	r2,r22
  83ab24:	003a7706 	br	839504 <__alt_mem_epcs_flash_controller_0+0xff830504>
  83ab28:	d8c02e17 	ldw	r3,184(sp)
  83ab2c:	d9002f17 	ldw	r4,188(sp)
  83ab30:	18800017 	ldw	r2,0(r3)
  83ab34:	18c00104 	addi	r3,r3,4
  83ab38:	d8c02e15 	stw	r3,184(sp)
  83ab3c:	11000015 	stw	r4,0(r2)
  83ab40:	00395406 	br	839094 <__alt_mem_epcs_flash_controller_0+0xff830094>
  83ab44:	d9002e17 	ldw	r4,184(sp)
  83ab48:	002d883a 	mov	r22,zero
  83ab4c:	24c00017 	ldw	r19,0(r4)
  83ab50:	21000104 	addi	r4,r4,4
  83ab54:	d9002e15 	stw	r4,184(sp)
  83ab58:	003c0706 	br	839b78 <__alt_mem_epcs_flash_controller_0+0xff830b78>
  83ab5c:	d9402e17 	ldw	r5,184(sp)
  83ab60:	d8c02a17 	ldw	r3,168(sp)
  83ab64:	002d883a 	mov	r22,zero
  83ab68:	28800104 	addi	r2,r5,4
  83ab6c:	2cc0000b 	ldhu	r19,0(r5)
  83ab70:	183dc10e 	bge	r3,zero,83a278 <__alt_mem_epcs_flash_controller_0+0xff831278>
  83ab74:	003f7506 	br	83a94c <__alt_mem_epcs_flash_controller_0+0xff83194c>
  83ab78:	040021b4 	movhi	r16,134
  83ab7c:	8425f504 	addi	r16,r16,-26668
  83ab80:	003aa706 	br	839620 <__alt_mem_epcs_flash_controller_0+0xff830620>
  83ab84:	d9002d17 	ldw	r4,180(sp)
  83ab88:	d9801e04 	addi	r6,sp,120
  83ab8c:	b80b883a 	mov	r5,r23
  83ab90:	08442ac0 	call	8442ac <__sprint_r>
  83ab94:	103a0b1e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83ab98:	dc402617 	ldw	r17,152(sp)
  83ab9c:	d8c02017 	ldw	r3,128(sp)
  83aba0:	da000404 	addi	r8,sp,16
  83aba4:	003f9c06 	br	83aa18 <__alt_mem_epcs_flash_controller_0+0xff831a18>
  83aba8:	ac400043 	ldbu	r17,1(r21)
  83abac:	84000814 	ori	r16,r16,32
  83abb0:	ad400044 	addi	r21,r21,1
  83abb4:	8c403fcc 	andi	r17,r17,255
  83abb8:	8c40201c 	xori	r17,r17,128
  83abbc:	8c7fe004 	addi	r17,r17,-128
  83abc0:	00395e06 	br	83913c <__alt_mem_epcs_flash_controller_0+0xff83013c>
  83abc4:	d8c02e15 	stw	r3,184(sp)
  83abc8:	0039883a 	mov	fp,zero
  83abcc:	003e3506 	br	83a4a4 <__alt_mem_epcs_flash_controller_0+0xff8314a4>
  83abd0:	d9002d17 	ldw	r4,180(sp)
  83abd4:	d9801e04 	addi	r6,sp,120
  83abd8:	b80b883a 	mov	r5,r23
  83abdc:	08442ac0 	call	8442ac <__sprint_r>
  83abe0:	1039f81e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83abe4:	d8c02017 	ldw	r3,128(sp)
  83abe8:	da000404 	addi	r8,sp,16
  83abec:	003cd006 	br	839f30 <__alt_mem_epcs_flash_controller_0+0xff830f30>
  83abf0:	8009883a 	mov	r4,r16
  83abf4:	df003d15 	stw	fp,244(sp)
  83abf8:	08351100 	call	835110 <strlen>
  83abfc:	d8802b15 	stw	r2,172(sp)
  83ac00:	da003d17 	ldw	r8,244(sp)
  83ac04:	103c200e 	bge	r2,zero,839c88 <__alt_mem_epcs_flash_controller_0+0xff830c88>
  83ac08:	0005883a 	mov	r2,zero
  83ac0c:	003c1e06 	br	839c88 <__alt_mem_epcs_flash_controller_0+0xff830c88>
  83ac10:	d9002d17 	ldw	r4,180(sp)
  83ac14:	d9801e04 	addi	r6,sp,120
  83ac18:	b80b883a 	mov	r5,r23
  83ac1c:	08442ac0 	call	8442ac <__sprint_r>
  83ac20:	1039e81e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83ac24:	d8c02017 	ldw	r3,128(sp)
  83ac28:	d8801f17 	ldw	r2,124(sp)
  83ac2c:	da000404 	addi	r8,sp,16
  83ac30:	d9403317 	ldw	r5,204(sp)
  83ac34:	10800044 	addi	r2,r2,1
  83ac38:	44000015 	stw	r16,0(r8)
  83ac3c:	28c7883a 	add	r3,r5,r3
  83ac40:	003b5b06 	br	8399b0 <__alt_mem_epcs_flash_controller_0+0xff8309b0>
  83ac44:	010021b4 	movhi	r4,134
  83ac48:	21261c04 	addi	r4,r4,-26512
  83ac4c:	d9003515 	stw	r4,212(sp)
  83ac50:	003af206 	br	83981c <__alt_mem_epcs_flash_controller_0+0xff83081c>
  83ac54:	013fffc4 	movi	r4,-1
  83ac58:	003a0806 	br	83947c <__alt_mem_epcs_flash_controller_0+0xff83047c>
  83ac5c:	0023883a 	mov	r17,zero
  83ac60:	003d9d06 	br	83a2d8 <__alt_mem_epcs_flash_controller_0+0xff8312d8>
  83ac64:	d9002d17 	ldw	r4,180(sp)
  83ac68:	d9801e04 	addi	r6,sp,120
  83ac6c:	b80b883a 	mov	r5,r23
  83ac70:	08442ac0 	call	8442ac <__sprint_r>
  83ac74:	1039d31e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83ac78:	d8c02017 	ldw	r3,128(sp)
  83ac7c:	da000404 	addi	r8,sp,16
  83ac80:	003d9406 	br	83a2d4 <__alt_mem_epcs_flash_controller_0+0xff8312d4>
  83ac84:	010021b4 	movhi	r4,134
  83ac88:	21261804 	addi	r4,r4,-26528
  83ac8c:	d9002c15 	stw	r4,176(sp)
  83ac90:	d9002c17 	ldw	r4,176(sp)
  83ac94:	1c47883a 	add	r3,r3,r17
  83ac98:	10800044 	addi	r2,r2,1
  83ac9c:	41000015 	stw	r4,0(r8)
  83aca0:	44400115 	stw	r17,4(r8)
  83aca4:	d8c02015 	stw	r3,128(sp)
  83aca8:	d8801f15 	stw	r2,124(sp)
  83acac:	010001c4 	movi	r4,7
  83acb0:	20bfd716 	blt	r4,r2,83ac10 <__alt_mem_epcs_flash_controller_0+0xff831c10>
  83acb4:	42000204 	addi	r8,r8,8
  83acb8:	003fdd06 	br	83ac30 <__alt_mem_epcs_flash_controller_0+0xff831c30>
  83acbc:	d9002d17 	ldw	r4,180(sp)
  83acc0:	d9801e04 	addi	r6,sp,120
  83acc4:	b80b883a 	mov	r5,r23
  83acc8:	08442ac0 	call	8442ac <__sprint_r>
  83accc:	1039bd1e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83acd0:	d8802617 	ldw	r2,152(sp)
  83acd4:	d8c02017 	ldw	r3,128(sp)
  83acd8:	da000404 	addi	r8,sp,16
  83acdc:	003e1006 	br	83a520 <__alt_mem_epcs_flash_controller_0+0xff831520>
  83ace0:	00800044 	movi	r2,1
  83ace4:	10803fcc 	andi	r2,r2,255
  83ace8:	00c00044 	movi	r3,1
  83acec:	10fa0d26 	beq	r2,r3,839524 <__alt_mem_epcs_flash_controller_0+0xff830524>
  83acf0:	00c00084 	movi	r3,2
  83acf4:	10fbaf26 	beq	r2,r3,839bb4 <__alt_mem_epcs_flash_controller_0+0xff830bb4>
  83acf8:	003a6d06 	br	8396b0 <__alt_mem_epcs_flash_controller_0+0xff8306b0>
  83acfc:	010021b4 	movhi	r4,134
  83ad00:	21261c04 	addi	r4,r4,-26512
  83ad04:	d9003515 	stw	r4,212(sp)
  83ad08:	003b5406 	br	839a5c <__alt_mem_epcs_flash_controller_0+0xff830a5c>
  83ad0c:	d8802a17 	ldw	r2,168(sp)
  83ad10:	00c00184 	movi	r3,6
  83ad14:	1880012e 	bgeu	r3,r2,83ad1c <___vfprintf_internal_r+0x1d68>
  83ad18:	1805883a 	mov	r2,r3
  83ad1c:	d8802b15 	stw	r2,172(sp)
  83ad20:	1000ef16 	blt	r2,zero,83b0e0 <___vfprintf_internal_r+0x212c>
  83ad24:	040021b4 	movhi	r16,134
  83ad28:	d8802915 	stw	r2,164(sp)
  83ad2c:	dcc02e15 	stw	r19,184(sp)
  83ad30:	d8002a15 	stw	zero,168(sp)
  83ad34:	d8003215 	stw	zero,200(sp)
  83ad38:	84260304 	addi	r16,r16,-26612
  83ad3c:	0039883a 	mov	fp,zero
  83ad40:	003a8006 	br	839744 <__alt_mem_epcs_flash_controller_0+0xff830744>
  83ad44:	0021883a 	mov	r16,zero
  83ad48:	003e0706 	br	83a568 <__alt_mem_epcs_flash_controller_0+0xff831568>
  83ad4c:	d9002d17 	ldw	r4,180(sp)
  83ad50:	d9801e04 	addi	r6,sp,120
  83ad54:	b80b883a 	mov	r5,r23
  83ad58:	08442ac0 	call	8442ac <__sprint_r>
  83ad5c:	1039991e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83ad60:	d8802617 	ldw	r2,152(sp)
  83ad64:	d9403317 	ldw	r5,204(sp)
  83ad68:	d8c02017 	ldw	r3,128(sp)
  83ad6c:	da000404 	addi	r8,sp,16
  83ad70:	2885c83a 	sub	r2,r5,r2
  83ad74:	003dfb06 	br	83a564 <__alt_mem_epcs_flash_controller_0+0xff831564>
  83ad78:	9080004c 	andi	r2,r18,1
  83ad7c:	103e8f1e 	bne	r2,zero,83a7bc <__alt_mem_epcs_flash_controller_0+0xff8317bc>
  83ad80:	d8802117 	ldw	r2,132(sp)
  83ad84:	003e9e06 	br	83a800 <__alt_mem_epcs_flash_controller_0+0xff831800>
  83ad88:	1025883a 	mov	r18,r2
  83ad8c:	0039883a 	mov	fp,zero
  83ad90:	00800084 	movi	r2,2
  83ad94:	003fd306 	br	83ace4 <__alt_mem_epcs_flash_controller_0+0xff831ce4>
  83ad98:	07000b44 	movi	fp,45
  83ad9c:	df002785 	stb	fp,158(sp)
  83ada0:	003a1b06 	br	839610 <__alt_mem_epcs_flash_controller_0+0xff830610>
  83ada4:	00c00b44 	movi	r3,45
  83ada8:	d8c02785 	stb	r3,158(sp)
  83adac:	d8802915 	stw	r2,164(sp)
  83adb0:	dc802c17 	ldw	r18,176(sp)
  83adb4:	d8002a15 	stw	zero,168(sp)
  83adb8:	07000b44 	movi	fp,45
  83adbc:	003a5e06 	br	839738 <__alt_mem_epcs_flash_controller_0+0xff830738>
  83adc0:	040021b4 	movhi	r16,134
  83adc4:	8425f804 	addi	r16,r16,-26656
  83adc8:	003f4706 	br	83aae8 <__alt_mem_epcs_flash_controller_0+0xff831ae8>
  83adcc:	d9002e17 	ldw	r4,184(sp)
  83add0:	d9402f17 	ldw	r5,188(sp)
  83add4:	20800017 	ldw	r2,0(r4)
  83add8:	21000104 	addi	r4,r4,4
  83addc:	d9002e15 	stw	r4,184(sp)
  83ade0:	11400015 	stw	r5,0(r2)
  83ade4:	0038ab06 	br	839094 <__alt_mem_epcs_flash_controller_0+0xff830094>
  83ade8:	dd802617 	ldw	r22,152(sp)
  83adec:	00bfff44 	movi	r2,-3
  83adf0:	b0801c16 	blt	r22,r2,83ae64 <___vfprintf_internal_r+0x1eb0>
  83adf4:	d9402a17 	ldw	r5,168(sp)
  83adf8:	2d801a16 	blt	r5,r22,83ae64 <___vfprintf_internal_r+0x1eb0>
  83adfc:	dd803215 	stw	r22,200(sp)
  83ae00:	003e8906 	br	83a828 <__alt_mem_epcs_flash_controller_0+0xff831828>
  83ae04:	010021b4 	movhi	r4,134
  83ae08:	21261804 	addi	r4,r4,-26528
  83ae0c:	d9002c15 	stw	r4,176(sp)
  83ae10:	003c9106 	br	83a058 <__alt_mem_epcs_flash_controller_0+0xff831058>
  83ae14:	e005883a 	mov	r2,fp
  83ae18:	003e7906 	br	83a800 <__alt_mem_epcs_flash_controller_0+0xff831800>
  83ae1c:	d9002a17 	ldw	r4,168(sp)
  83ae20:	df002783 	ldbu	fp,158(sp)
  83ae24:	dcc02e15 	stw	r19,184(sp)
  83ae28:	d9002915 	stw	r4,164(sp)
  83ae2c:	d9002b15 	stw	r4,172(sp)
  83ae30:	d8002a15 	stw	zero,168(sp)
  83ae34:	d8003215 	stw	zero,200(sp)
  83ae38:	003a3b06 	br	839728 <__alt_mem_epcs_flash_controller_0+0xff830728>
  83ae3c:	9080004c 	andi	r2,r18,1
  83ae40:	0039883a 	mov	fp,zero
  83ae44:	10000426 	beq	r2,zero,83ae58 <___vfprintf_internal_r+0x1ea4>
  83ae48:	00800c04 	movi	r2,48
  83ae4c:	dc001dc4 	addi	r16,sp,119
  83ae50:	d8801dc5 	stb	r2,119(sp)
  83ae54:	003b6406 	br	839be8 <__alt_mem_epcs_flash_controller_0+0xff830be8>
  83ae58:	d8002b15 	stw	zero,172(sp)
  83ae5c:	dc001e04 	addi	r16,sp,120
  83ae60:	003a2b06 	br	839710 <__alt_mem_epcs_flash_controller_0+0xff830710>
  83ae64:	8c7fff84 	addi	r17,r17,-2
  83ae68:	b5bfffc4 	addi	r22,r22,-1
  83ae6c:	dd802615 	stw	r22,152(sp)
  83ae70:	dc4022c5 	stb	r17,139(sp)
  83ae74:	b000bf16 	blt	r22,zero,83b174 <___vfprintf_internal_r+0x21c0>
  83ae78:	00800ac4 	movi	r2,43
  83ae7c:	d8802305 	stb	r2,140(sp)
  83ae80:	00800244 	movi	r2,9
  83ae84:	15807016 	blt	r2,r22,83b048 <___vfprintf_internal_r+0x2094>
  83ae88:	00800c04 	movi	r2,48
  83ae8c:	b5800c04 	addi	r22,r22,48
  83ae90:	d8802345 	stb	r2,141(sp)
  83ae94:	dd802385 	stb	r22,142(sp)
  83ae98:	d88023c4 	addi	r2,sp,143
  83ae9c:	df0022c4 	addi	fp,sp,139
  83aea0:	d8c03317 	ldw	r3,204(sp)
  83aea4:	1739c83a 	sub	fp,r2,fp
  83aea8:	d9003317 	ldw	r4,204(sp)
  83aeac:	e0c7883a 	add	r3,fp,r3
  83aeb0:	df003a15 	stw	fp,232(sp)
  83aeb4:	d8c02b15 	stw	r3,172(sp)
  83aeb8:	00800044 	movi	r2,1
  83aebc:	1100b30e 	bge	r2,r4,83b18c <___vfprintf_internal_r+0x21d8>
  83aec0:	d8c02b17 	ldw	r3,172(sp)
  83aec4:	18c00044 	addi	r3,r3,1
  83aec8:	d8c02b15 	stw	r3,172(sp)
  83aecc:	1805883a 	mov	r2,r3
  83aed0:	1800ac16 	blt	r3,zero,83b184 <___vfprintf_internal_r+0x21d0>
  83aed4:	d8003215 	stw	zero,200(sp)
  83aed8:	003e5d06 	br	83a850 <__alt_mem_epcs_flash_controller_0+0xff831850>
  83aedc:	d9002d17 	ldw	r4,180(sp)
  83aee0:	d9801e04 	addi	r6,sp,120
  83aee4:	b80b883a 	mov	r5,r23
  83aee8:	08442ac0 	call	8442ac <__sprint_r>
  83aeec:	1039351e 	bne	r2,zero,8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  83aef0:	dc402617 	ldw	r17,152(sp)
  83aef4:	d8c02017 	ldw	r3,128(sp)
  83aef8:	d8801f17 	ldw	r2,124(sp)
  83aefc:	da000404 	addi	r8,sp,16
  83af00:	003ed606 	br	83aa5c <__alt_mem_epcs_flash_controller_0+0xff831a5c>
  83af04:	182b883a 	mov	r21,r3
  83af08:	d8002a15 	stw	zero,168(sp)
  83af0c:	00388c06 	br	839140 <__alt_mem_epcs_flash_controller_0+0xff830140>
  83af10:	d8802a17 	ldw	r2,168(sp)
  83af14:	103e071e 	bne	r2,zero,83a734 <__alt_mem_epcs_flash_controller_0+0xff831734>
  83af18:	dc002a15 	stw	r16,168(sp)
  83af1c:	003e0506 	br	83a734 <__alt_mem_epcs_flash_controller_0+0xff831734>
  83af20:	d9002a17 	ldw	r4,168(sp)
  83af24:	20c00044 	addi	r3,r4,1
  83af28:	003e0f06 	br	83a768 <__alt_mem_epcs_flash_controller_0+0xff831768>
  83af2c:	01400184 	movi	r5,6
  83af30:	d9402a15 	stw	r5,168(sp)
  83af34:	003dff06 	br	83a734 <__alt_mem_epcs_flash_controller_0+0xff831734>
  83af38:	d8802104 	addi	r2,sp,132
  83af3c:	d8800315 	stw	r2,12(sp)
  83af40:	d8802504 	addi	r2,sp,148
  83af44:	d8800215 	stw	r2,8(sp)
  83af48:	d8802604 	addi	r2,sp,152
  83af4c:	d8800115 	stw	r2,4(sp)
  83af50:	d8802a17 	ldw	r2,168(sp)
  83af54:	d9403617 	ldw	r5,216(sp)
  83af58:	d9002d17 	ldw	r4,180(sp)
  83af5c:	d8800015 	stw	r2,0(sp)
  83af60:	01c000c4 	movi	r7,3
  83af64:	980d883a 	mov	r6,r19
  83af68:	da003d15 	stw	r8,244(sp)
  83af6c:	083ba880 	call	83ba88 <_dtoa_r>
  83af70:	d8c02a17 	ldw	r3,168(sp)
  83af74:	da003d17 	ldw	r8,244(sp)
  83af78:	1021883a 	mov	r16,r2
  83af7c:	10f9883a 	add	fp,r2,r3
  83af80:	81000007 	ldb	r4,0(r16)
  83af84:	00800c04 	movi	r2,48
  83af88:	20805e26 	beq	r4,r2,83b104 <___vfprintf_internal_r+0x2150>
  83af8c:	d8c02617 	ldw	r3,152(sp)
  83af90:	e0f9883a 	add	fp,fp,r3
  83af94:	003e0a06 	br	83a7c0 <__alt_mem_epcs_flash_controller_0+0xff8317c0>
  83af98:	00c00b44 	movi	r3,45
  83af9c:	24e0003c 	xorhi	r19,r4,32768
  83afa0:	d8c02905 	stb	r3,164(sp)
  83afa4:	003de906 	br	83a74c <__alt_mem_epcs_flash_controller_0+0xff83174c>
  83afa8:	d8c03217 	ldw	r3,200(sp)
  83afac:	00c07a0e 	bge	zero,r3,83b198 <___vfprintf_internal_r+0x21e4>
  83afb0:	00800044 	movi	r2,1
  83afb4:	d9003317 	ldw	r4,204(sp)
  83afb8:	1105883a 	add	r2,r2,r4
  83afbc:	d8802b15 	stw	r2,172(sp)
  83afc0:	10004e16 	blt	r2,zero,83b0fc <___vfprintf_internal_r+0x2148>
  83afc4:	044019c4 	movi	r17,103
  83afc8:	003e2106 	br	83a850 <__alt_mem_epcs_flash_controller_0+0xff831850>
  83afcc:	d9002a17 	ldw	r4,168(sp)
  83afd0:	d8802104 	addi	r2,sp,132
  83afd4:	d8800315 	stw	r2,12(sp)
  83afd8:	d9000015 	stw	r4,0(sp)
  83afdc:	d8802504 	addi	r2,sp,148
  83afe0:	d9403617 	ldw	r5,216(sp)
  83afe4:	d9002d17 	ldw	r4,180(sp)
  83afe8:	d8800215 	stw	r2,8(sp)
  83afec:	d8802604 	addi	r2,sp,152
  83aff0:	d8800115 	stw	r2,4(sp)
  83aff4:	01c000c4 	movi	r7,3
  83aff8:	980d883a 	mov	r6,r19
  83affc:	da003d15 	stw	r8,244(sp)
  83b000:	083ba880 	call	83ba88 <_dtoa_r>
  83b004:	d8c02a17 	ldw	r3,168(sp)
  83b008:	da003d17 	ldw	r8,244(sp)
  83b00c:	1021883a 	mov	r16,r2
  83b010:	00801184 	movi	r2,70
  83b014:	80f9883a 	add	fp,r16,r3
  83b018:	88bfd926 	beq	r17,r2,83af80 <__alt_mem_epcs_flash_controller_0+0xff831f80>
  83b01c:	003de806 	br	83a7c0 <__alt_mem_epcs_flash_controller_0+0xff8317c0>
  83b020:	d9002a17 	ldw	r4,168(sp)
  83b024:	00c04d0e 	bge	zero,r3,83b15c <___vfprintf_internal_r+0x21a8>
  83b028:	2000441e 	bne	r4,zero,83b13c <___vfprintf_internal_r+0x2188>
  83b02c:	9480004c 	andi	r18,r18,1
  83b030:	9000421e 	bne	r18,zero,83b13c <___vfprintf_internal_r+0x2188>
  83b034:	1805883a 	mov	r2,r3
  83b038:	18006f16 	blt	r3,zero,83b1f8 <___vfprintf_internal_r+0x2244>
  83b03c:	d8c03217 	ldw	r3,200(sp)
  83b040:	d8c02b15 	stw	r3,172(sp)
  83b044:	003e0206 	br	83a850 <__alt_mem_epcs_flash_controller_0+0xff831850>
  83b048:	df0022c4 	addi	fp,sp,139
  83b04c:	dc002a15 	stw	r16,168(sp)
  83b050:	4027883a 	mov	r19,r8
  83b054:	e021883a 	mov	r16,fp
  83b058:	b009883a 	mov	r4,r22
  83b05c:	01400284 	movi	r5,10
  83b060:	08300b80 	call	8300b8 <__modsi3>
  83b064:	10800c04 	addi	r2,r2,48
  83b068:	843fffc4 	addi	r16,r16,-1
  83b06c:	b009883a 	mov	r4,r22
  83b070:	01400284 	movi	r5,10
  83b074:	80800005 	stb	r2,0(r16)
  83b078:	08300340 	call	830034 <__divsi3>
  83b07c:	102d883a 	mov	r22,r2
  83b080:	00800244 	movi	r2,9
  83b084:	15bff416 	blt	r2,r22,83b058 <__alt_mem_epcs_flash_controller_0+0xff832058>
  83b088:	9811883a 	mov	r8,r19
  83b08c:	b0800c04 	addi	r2,r22,48
  83b090:	8027883a 	mov	r19,r16
  83b094:	997fffc4 	addi	r5,r19,-1
  83b098:	98bfffc5 	stb	r2,-1(r19)
  83b09c:	dc002a17 	ldw	r16,168(sp)
  83b0a0:	2f006d2e 	bgeu	r5,fp,83b258 <___vfprintf_internal_r+0x22a4>
  83b0a4:	d9c02384 	addi	r7,sp,142
  83b0a8:	3ccfc83a 	sub	r7,r7,r19
  83b0ac:	d9002344 	addi	r4,sp,141
  83b0b0:	e1cf883a 	add	r7,fp,r7
  83b0b4:	00000106 	br	83b0bc <___vfprintf_internal_r+0x2108>
  83b0b8:	28800003 	ldbu	r2,0(r5)
  83b0bc:	20800005 	stb	r2,0(r4)
  83b0c0:	21000044 	addi	r4,r4,1
  83b0c4:	29400044 	addi	r5,r5,1
  83b0c8:	393ffb1e 	bne	r7,r4,83b0b8 <__alt_mem_epcs_flash_controller_0+0xff8320b8>
  83b0cc:	d8802304 	addi	r2,sp,140
  83b0d0:	14c5c83a 	sub	r2,r2,r19
  83b0d4:	d8c02344 	addi	r3,sp,141
  83b0d8:	1885883a 	add	r2,r3,r2
  83b0dc:	003f7006 	br	83aea0 <__alt_mem_epcs_flash_controller_0+0xff831ea0>
  83b0e0:	0005883a 	mov	r2,zero
  83b0e4:	003f0f06 	br	83ad24 <__alt_mem_epcs_flash_controller_0+0xff831d24>
  83b0e8:	d8c03217 	ldw	r3,200(sp)
  83b0ec:	18c00044 	addi	r3,r3,1
  83b0f0:	d8c02b15 	stw	r3,172(sp)
  83b0f4:	1805883a 	mov	r2,r3
  83b0f8:	183fb20e 	bge	r3,zero,83afc4 <__alt_mem_epcs_flash_controller_0+0xff831fc4>
  83b0fc:	0005883a 	mov	r2,zero
  83b100:	003fb006 	br	83afc4 <__alt_mem_epcs_flash_controller_0+0xff831fc4>
  83b104:	d9003617 	ldw	r4,216(sp)
  83b108:	000d883a 	mov	r6,zero
  83b10c:	000f883a 	mov	r7,zero
  83b110:	980b883a 	mov	r5,r19
  83b114:	d8c03c15 	stw	r3,240(sp)
  83b118:	da003d15 	stw	r8,244(sp)
  83b11c:	0848b880 	call	848b88 <__eqdf2>
  83b120:	d8c03c17 	ldw	r3,240(sp)
  83b124:	da003d17 	ldw	r8,244(sp)
  83b128:	103f9826 	beq	r2,zero,83af8c <__alt_mem_epcs_flash_controller_0+0xff831f8c>
  83b12c:	00800044 	movi	r2,1
  83b130:	10c7c83a 	sub	r3,r2,r3
  83b134:	d8c02615 	stw	r3,152(sp)
  83b138:	003f9506 	br	83af90 <__alt_mem_epcs_flash_controller_0+0xff831f90>
  83b13c:	d9002a17 	ldw	r4,168(sp)
  83b140:	d8c03217 	ldw	r3,200(sp)
  83b144:	20800044 	addi	r2,r4,1
  83b148:	1885883a 	add	r2,r3,r2
  83b14c:	d8802b15 	stw	r2,172(sp)
  83b150:	103dbf0e 	bge	r2,zero,83a850 <__alt_mem_epcs_flash_controller_0+0xff831850>
  83b154:	0005883a 	mov	r2,zero
  83b158:	003dbd06 	br	83a850 <__alt_mem_epcs_flash_controller_0+0xff831850>
  83b15c:	2000201e 	bne	r4,zero,83b1e0 <___vfprintf_internal_r+0x222c>
  83b160:	9480004c 	andi	r18,r18,1
  83b164:	90001e1e 	bne	r18,zero,83b1e0 <___vfprintf_internal_r+0x222c>
  83b168:	00800044 	movi	r2,1
  83b16c:	d8802b15 	stw	r2,172(sp)
  83b170:	003db706 	br	83a850 <__alt_mem_epcs_flash_controller_0+0xff831850>
  83b174:	00800b44 	movi	r2,45
  83b178:	05adc83a 	sub	r22,zero,r22
  83b17c:	d8802305 	stb	r2,140(sp)
  83b180:	003f3f06 	br	83ae80 <__alt_mem_epcs_flash_controller_0+0xff831e80>
  83b184:	0005883a 	mov	r2,zero
  83b188:	003f5206 	br	83aed4 <__alt_mem_epcs_flash_controller_0+0xff831ed4>
  83b18c:	90a4703a 	and	r18,r18,r2
  83b190:	903f4e26 	beq	r18,zero,83aecc <__alt_mem_epcs_flash_controller_0+0xff831ecc>
  83b194:	003f4a06 	br	83aec0 <__alt_mem_epcs_flash_controller_0+0xff831ec0>
  83b198:	00800084 	movi	r2,2
  83b19c:	10c5c83a 	sub	r2,r2,r3
  83b1a0:	003f8406 	br	83afb4 <__alt_mem_epcs_flash_controller_0+0xff831fb4>
  83b1a4:	d9402e17 	ldw	r5,184(sp)
  83b1a8:	d9002e17 	ldw	r4,184(sp)
  83b1ac:	ac400043 	ldbu	r17,1(r21)
  83b1b0:	29400017 	ldw	r5,0(r5)
  83b1b4:	20800104 	addi	r2,r4,4
  83b1b8:	d8802e15 	stw	r2,184(sp)
  83b1bc:	d9402a15 	stw	r5,168(sp)
  83b1c0:	182b883a 	mov	r21,r3
  83b1c4:	283e7b0e 	bge	r5,zero,83abb4 <__alt_mem_epcs_flash_controller_0+0xff831bb4>
  83b1c8:	8c403fcc 	andi	r17,r17,255
  83b1cc:	017fffc4 	movi	r5,-1
  83b1d0:	8c40201c 	xori	r17,r17,128
  83b1d4:	d9402a15 	stw	r5,168(sp)
  83b1d8:	8c7fe004 	addi	r17,r17,-128
  83b1dc:	0037d706 	br	83913c <__alt_mem_epcs_flash_controller_0+0xff83013c>
  83b1e0:	d8c02a17 	ldw	r3,168(sp)
  83b1e4:	18c00084 	addi	r3,r3,2
  83b1e8:	d8c02b15 	stw	r3,172(sp)
  83b1ec:	1805883a 	mov	r2,r3
  83b1f0:	183d970e 	bge	r3,zero,83a850 <__alt_mem_epcs_flash_controller_0+0xff831850>
  83b1f4:	003fd706 	br	83b154 <__alt_mem_epcs_flash_controller_0+0xff832154>
  83b1f8:	0005883a 	mov	r2,zero
  83b1fc:	003f8f06 	br	83b03c <__alt_mem_epcs_flash_controller_0+0xff83203c>
  83b200:	9080004c 	andi	r2,r18,1
  83b204:	103f821e 	bne	r2,zero,83b010 <__alt_mem_epcs_flash_controller_0+0xff832010>
  83b208:	d8802117 	ldw	r2,132(sp)
  83b20c:	1405c83a 	sub	r2,r2,r16
  83b210:	d8803315 	stw	r2,204(sp)
  83b214:	b47ef426 	beq	r22,r17,83ade8 <__alt_mem_epcs_flash_controller_0+0xff831de8>
  83b218:	dd802617 	ldw	r22,152(sp)
  83b21c:	003f1206 	br	83ae68 <__alt_mem_epcs_flash_controller_0+0xff831e68>
  83b220:	d8c02b03 	ldbu	r3,172(sp)
  83b224:	d8c02785 	stb	r3,158(sp)
  83b228:	0038df06 	br	8395a8 <__alt_mem_epcs_flash_controller_0+0xff8305a8>
  83b22c:	d8c02b03 	ldbu	r3,172(sp)
  83b230:	d8c02785 	stb	r3,158(sp)
  83b234:	0038aa06 	br	8394e0 <__alt_mem_epcs_flash_controller_0+0xff8304e0>
  83b238:	d8c02b03 	ldbu	r3,172(sp)
  83b23c:	d8c02785 	stb	r3,158(sp)
  83b240:	003a4306 	br	839b50 <__alt_mem_epcs_flash_controller_0+0xff830b50>
  83b244:	d8c02b03 	ldbu	r3,172(sp)
  83b248:	d8c02785 	stb	r3,158(sp)
  83b24c:	003af506 	br	839e24 <__alt_mem_epcs_flash_controller_0+0xff830e24>
  83b250:	0005883a 	mov	r2,zero
  83b254:	003d7b06 	br	83a844 <__alt_mem_epcs_flash_controller_0+0xff831844>
  83b258:	d8802344 	addi	r2,sp,141
  83b25c:	003f1006 	br	83aea0 <__alt_mem_epcs_flash_controller_0+0xff831ea0>
  83b260:	d8c02b03 	ldbu	r3,172(sp)
  83b264:	d8c02785 	stb	r3,158(sp)
  83b268:	0038fd06 	br	839660 <__alt_mem_epcs_flash_controller_0+0xff830660>
  83b26c:	d8c02b03 	ldbu	r3,172(sp)
  83b270:	d8c02785 	stb	r3,158(sp)
  83b274:	003a9706 	br	839cd4 <__alt_mem_epcs_flash_controller_0+0xff830cd4>
  83b278:	d8c02b03 	ldbu	r3,172(sp)
  83b27c:	d8c02785 	stb	r3,158(sp)
  83b280:	003a1806 	br	839ae4 <__alt_mem_epcs_flash_controller_0+0xff830ae4>
  83b284:	d8c02b03 	ldbu	r3,172(sp)
  83b288:	d8c02785 	stb	r3,158(sp)
  83b28c:	003abe06 	br	839d88 <__alt_mem_epcs_flash_controller_0+0xff830d88>

0083b290 <__vfprintf_internal>:
  83b290:	008021b4 	movhi	r2,134
  83b294:	10af7404 	addi	r2,r2,-16944
  83b298:	300f883a 	mov	r7,r6
  83b29c:	280d883a 	mov	r6,r5
  83b2a0:	200b883a 	mov	r5,r4
  83b2a4:	11000017 	ldw	r4,0(r2)
  83b2a8:	0838fb41 	jmpi	838fb4 <___vfprintf_internal_r>

0083b2ac <__sbprintf>:
  83b2ac:	2880030b 	ldhu	r2,12(r5)
  83b2b0:	2ac01917 	ldw	r11,100(r5)
  83b2b4:	2a80038b 	ldhu	r10,14(r5)
  83b2b8:	2a400717 	ldw	r9,28(r5)
  83b2bc:	2a000917 	ldw	r8,36(r5)
  83b2c0:	defee204 	addi	sp,sp,-1144
  83b2c4:	00c10004 	movi	r3,1024
  83b2c8:	dc011a15 	stw	r16,1128(sp)
  83b2cc:	10bfff4c 	andi	r2,r2,65533
  83b2d0:	2821883a 	mov	r16,r5
  83b2d4:	d8cb883a 	add	r5,sp,r3
  83b2d8:	dc811c15 	stw	r18,1136(sp)
  83b2dc:	dc411b15 	stw	r17,1132(sp)
  83b2e0:	dfc11d15 	stw	ra,1140(sp)
  83b2e4:	2025883a 	mov	r18,r4
  83b2e8:	d881030d 	sth	r2,1036(sp)
  83b2ec:	dac11915 	stw	r11,1124(sp)
  83b2f0:	da81038d 	sth	r10,1038(sp)
  83b2f4:	da410715 	stw	r9,1052(sp)
  83b2f8:	da010915 	stw	r8,1060(sp)
  83b2fc:	dec10015 	stw	sp,1024(sp)
  83b300:	dec10415 	stw	sp,1040(sp)
  83b304:	d8c10215 	stw	r3,1032(sp)
  83b308:	d8c10515 	stw	r3,1044(sp)
  83b30c:	d8010615 	stw	zero,1048(sp)
  83b310:	0838fb40 	call	838fb4 <___vfprintf_internal_r>
  83b314:	1023883a 	mov	r17,r2
  83b318:	10000416 	blt	r2,zero,83b32c <__sbprintf+0x80>
  83b31c:	d9410004 	addi	r5,sp,1024
  83b320:	9009883a 	mov	r4,r18
  83b324:	08320440 	call	832044 <_fflush_r>
  83b328:	10000d1e 	bne	r2,zero,83b360 <__sbprintf+0xb4>
  83b32c:	d881030b 	ldhu	r2,1036(sp)
  83b330:	1080100c 	andi	r2,r2,64
  83b334:	10000326 	beq	r2,zero,83b344 <__sbprintf+0x98>
  83b338:	8080030b 	ldhu	r2,12(r16)
  83b33c:	10801014 	ori	r2,r2,64
  83b340:	8080030d 	sth	r2,12(r16)
  83b344:	8805883a 	mov	r2,r17
  83b348:	dfc11d17 	ldw	ra,1140(sp)
  83b34c:	dc811c17 	ldw	r18,1136(sp)
  83b350:	dc411b17 	ldw	r17,1132(sp)
  83b354:	dc011a17 	ldw	r16,1128(sp)
  83b358:	dec11e04 	addi	sp,sp,1144
  83b35c:	f800283a 	ret
  83b360:	047fffc4 	movi	r17,-1
  83b364:	003ff106 	br	83b32c <__alt_mem_epcs_flash_controller_0+0xff83232c>

0083b368 <__swbuf_r>:
  83b368:	defffb04 	addi	sp,sp,-20
  83b36c:	dcc00315 	stw	r19,12(sp)
  83b370:	dc800215 	stw	r18,8(sp)
  83b374:	dc000015 	stw	r16,0(sp)
  83b378:	dfc00415 	stw	ra,16(sp)
  83b37c:	dc400115 	stw	r17,4(sp)
  83b380:	2025883a 	mov	r18,r4
  83b384:	2827883a 	mov	r19,r5
  83b388:	3021883a 	mov	r16,r6
  83b38c:	20000226 	beq	r4,zero,83b398 <__swbuf_r+0x30>
  83b390:	20800e17 	ldw	r2,56(r4)
  83b394:	10004226 	beq	r2,zero,83b4a0 <__swbuf_r+0x138>
  83b398:	80800617 	ldw	r2,24(r16)
  83b39c:	8100030b 	ldhu	r4,12(r16)
  83b3a0:	80800215 	stw	r2,8(r16)
  83b3a4:	2080020c 	andi	r2,r4,8
  83b3a8:	10003626 	beq	r2,zero,83b484 <__swbuf_r+0x11c>
  83b3ac:	80c00417 	ldw	r3,16(r16)
  83b3b0:	18003426 	beq	r3,zero,83b484 <__swbuf_r+0x11c>
  83b3b4:	2088000c 	andi	r2,r4,8192
  83b3b8:	9c403fcc 	andi	r17,r19,255
  83b3bc:	10001a26 	beq	r2,zero,83b428 <__swbuf_r+0xc0>
  83b3c0:	80800017 	ldw	r2,0(r16)
  83b3c4:	81000517 	ldw	r4,20(r16)
  83b3c8:	10c7c83a 	sub	r3,r2,r3
  83b3cc:	1900200e 	bge	r3,r4,83b450 <__swbuf_r+0xe8>
  83b3d0:	18c00044 	addi	r3,r3,1
  83b3d4:	81000217 	ldw	r4,8(r16)
  83b3d8:	11400044 	addi	r5,r2,1
  83b3dc:	81400015 	stw	r5,0(r16)
  83b3e0:	213fffc4 	addi	r4,r4,-1
  83b3e4:	81000215 	stw	r4,8(r16)
  83b3e8:	14c00005 	stb	r19,0(r2)
  83b3ec:	80800517 	ldw	r2,20(r16)
  83b3f0:	10c01e26 	beq	r2,r3,83b46c <__swbuf_r+0x104>
  83b3f4:	8080030b 	ldhu	r2,12(r16)
  83b3f8:	1080004c 	andi	r2,r2,1
  83b3fc:	10000226 	beq	r2,zero,83b408 <__swbuf_r+0xa0>
  83b400:	00800284 	movi	r2,10
  83b404:	88801926 	beq	r17,r2,83b46c <__swbuf_r+0x104>
  83b408:	8805883a 	mov	r2,r17
  83b40c:	dfc00417 	ldw	ra,16(sp)
  83b410:	dcc00317 	ldw	r19,12(sp)
  83b414:	dc800217 	ldw	r18,8(sp)
  83b418:	dc400117 	ldw	r17,4(sp)
  83b41c:	dc000017 	ldw	r16,0(sp)
  83b420:	dec00504 	addi	sp,sp,20
  83b424:	f800283a 	ret
  83b428:	81401917 	ldw	r5,100(r16)
  83b42c:	00b7ffc4 	movi	r2,-8193
  83b430:	21080014 	ori	r4,r4,8192
  83b434:	2884703a 	and	r2,r5,r2
  83b438:	80801915 	stw	r2,100(r16)
  83b43c:	80800017 	ldw	r2,0(r16)
  83b440:	8100030d 	sth	r4,12(r16)
  83b444:	81000517 	ldw	r4,20(r16)
  83b448:	10c7c83a 	sub	r3,r2,r3
  83b44c:	193fe016 	blt	r3,r4,83b3d0 <__alt_mem_epcs_flash_controller_0+0xff8323d0>
  83b450:	800b883a 	mov	r5,r16
  83b454:	9009883a 	mov	r4,r18
  83b458:	08320440 	call	832044 <_fflush_r>
  83b45c:	1000071e 	bne	r2,zero,83b47c <__swbuf_r+0x114>
  83b460:	80800017 	ldw	r2,0(r16)
  83b464:	00c00044 	movi	r3,1
  83b468:	003fda06 	br	83b3d4 <__alt_mem_epcs_flash_controller_0+0xff8323d4>
  83b46c:	800b883a 	mov	r5,r16
  83b470:	9009883a 	mov	r4,r18
  83b474:	08320440 	call	832044 <_fflush_r>
  83b478:	103fe326 	beq	r2,zero,83b408 <__alt_mem_epcs_flash_controller_0+0xff832408>
  83b47c:	00bfffc4 	movi	r2,-1
  83b480:	003fe206 	br	83b40c <__alt_mem_epcs_flash_controller_0+0xff83240c>
  83b484:	800b883a 	mov	r5,r16
  83b488:	9009883a 	mov	r4,r18
  83b48c:	083b5200 	call	83b520 <__swsetup_r>
  83b490:	103ffa1e 	bne	r2,zero,83b47c <__alt_mem_epcs_flash_controller_0+0xff83247c>
  83b494:	8100030b 	ldhu	r4,12(r16)
  83b498:	80c00417 	ldw	r3,16(r16)
  83b49c:	003fc506 	br	83b3b4 <__alt_mem_epcs_flash_controller_0+0xff8323b4>
  83b4a0:	08324300 	call	832430 <__sinit>
  83b4a4:	003fbc06 	br	83b398 <__alt_mem_epcs_flash_controller_0+0xff832398>

0083b4a8 <__swbuf>:
  83b4a8:	008021b4 	movhi	r2,134
  83b4ac:	10af7404 	addi	r2,r2,-16944
  83b4b0:	280d883a 	mov	r6,r5
  83b4b4:	200b883a 	mov	r5,r4
  83b4b8:	11000017 	ldw	r4,0(r2)
  83b4bc:	083b3681 	jmpi	83b368 <__swbuf_r>

0083b4c0 <_write_r>:
  83b4c0:	defffd04 	addi	sp,sp,-12
  83b4c4:	2805883a 	mov	r2,r5
  83b4c8:	dc000015 	stw	r16,0(sp)
  83b4cc:	040021b4 	movhi	r16,134
  83b4d0:	dc400115 	stw	r17,4(sp)
  83b4d4:	300b883a 	mov	r5,r6
  83b4d8:	842fc604 	addi	r16,r16,-16616
  83b4dc:	2023883a 	mov	r17,r4
  83b4e0:	380d883a 	mov	r6,r7
  83b4e4:	1009883a 	mov	r4,r2
  83b4e8:	dfc00215 	stw	ra,8(sp)
  83b4ec:	80000015 	stw	zero,0(r16)
  83b4f0:	084a4ec0 	call	84a4ec <write>
  83b4f4:	00ffffc4 	movi	r3,-1
  83b4f8:	10c00526 	beq	r2,r3,83b510 <_write_r+0x50>
  83b4fc:	dfc00217 	ldw	ra,8(sp)
  83b500:	dc400117 	ldw	r17,4(sp)
  83b504:	dc000017 	ldw	r16,0(sp)
  83b508:	dec00304 	addi	sp,sp,12
  83b50c:	f800283a 	ret
  83b510:	80c00017 	ldw	r3,0(r16)
  83b514:	183ff926 	beq	r3,zero,83b4fc <__alt_mem_epcs_flash_controller_0+0xff8324fc>
  83b518:	88c00015 	stw	r3,0(r17)
  83b51c:	003ff706 	br	83b4fc <__alt_mem_epcs_flash_controller_0+0xff8324fc>

0083b520 <__swsetup_r>:
  83b520:	008021b4 	movhi	r2,134
  83b524:	defffd04 	addi	sp,sp,-12
  83b528:	10af7404 	addi	r2,r2,-16944
  83b52c:	dc400115 	stw	r17,4(sp)
  83b530:	2023883a 	mov	r17,r4
  83b534:	11000017 	ldw	r4,0(r2)
  83b538:	dc000015 	stw	r16,0(sp)
  83b53c:	dfc00215 	stw	ra,8(sp)
  83b540:	2821883a 	mov	r16,r5
  83b544:	20000226 	beq	r4,zero,83b550 <__swsetup_r+0x30>
  83b548:	20800e17 	ldw	r2,56(r4)
  83b54c:	10003126 	beq	r2,zero,83b614 <__swsetup_r+0xf4>
  83b550:	8080030b 	ldhu	r2,12(r16)
  83b554:	10c0020c 	andi	r3,r2,8
  83b558:	1009883a 	mov	r4,r2
  83b55c:	18000f26 	beq	r3,zero,83b59c <__swsetup_r+0x7c>
  83b560:	80c00417 	ldw	r3,16(r16)
  83b564:	18001526 	beq	r3,zero,83b5bc <__swsetup_r+0x9c>
  83b568:	1100004c 	andi	r4,r2,1
  83b56c:	20001c1e 	bne	r4,zero,83b5e0 <__swsetup_r+0xc0>
  83b570:	1080008c 	andi	r2,r2,2
  83b574:	1000291e 	bne	r2,zero,83b61c <__swsetup_r+0xfc>
  83b578:	80800517 	ldw	r2,20(r16)
  83b57c:	80800215 	stw	r2,8(r16)
  83b580:	18001c26 	beq	r3,zero,83b5f4 <__swsetup_r+0xd4>
  83b584:	0005883a 	mov	r2,zero
  83b588:	dfc00217 	ldw	ra,8(sp)
  83b58c:	dc400117 	ldw	r17,4(sp)
  83b590:	dc000017 	ldw	r16,0(sp)
  83b594:	dec00304 	addi	sp,sp,12
  83b598:	f800283a 	ret
  83b59c:	2080040c 	andi	r2,r4,16
  83b5a0:	10002e26 	beq	r2,zero,83b65c <__swsetup_r+0x13c>
  83b5a4:	2080010c 	andi	r2,r4,4
  83b5a8:	10001e1e 	bne	r2,zero,83b624 <__swsetup_r+0x104>
  83b5ac:	80c00417 	ldw	r3,16(r16)
  83b5b0:	20800214 	ori	r2,r4,8
  83b5b4:	8080030d 	sth	r2,12(r16)
  83b5b8:	183feb1e 	bne	r3,zero,83b568 <__alt_mem_epcs_flash_controller_0+0xff832568>
  83b5bc:	1100a00c 	andi	r4,r2,640
  83b5c0:	01408004 	movi	r5,512
  83b5c4:	217fe826 	beq	r4,r5,83b568 <__alt_mem_epcs_flash_controller_0+0xff832568>
  83b5c8:	800b883a 	mov	r5,r16
  83b5cc:	8809883a 	mov	r4,r17
  83b5d0:	083d7f00 	call	83d7f0 <__smakebuf_r>
  83b5d4:	8080030b 	ldhu	r2,12(r16)
  83b5d8:	80c00417 	ldw	r3,16(r16)
  83b5dc:	003fe206 	br	83b568 <__alt_mem_epcs_flash_controller_0+0xff832568>
  83b5e0:	80800517 	ldw	r2,20(r16)
  83b5e4:	80000215 	stw	zero,8(r16)
  83b5e8:	0085c83a 	sub	r2,zero,r2
  83b5ec:	80800615 	stw	r2,24(r16)
  83b5f0:	183fe41e 	bne	r3,zero,83b584 <__alt_mem_epcs_flash_controller_0+0xff832584>
  83b5f4:	80c0030b 	ldhu	r3,12(r16)
  83b5f8:	0005883a 	mov	r2,zero
  83b5fc:	1900200c 	andi	r4,r3,128
  83b600:	203fe126 	beq	r4,zero,83b588 <__alt_mem_epcs_flash_controller_0+0xff832588>
  83b604:	18c01014 	ori	r3,r3,64
  83b608:	80c0030d 	sth	r3,12(r16)
  83b60c:	00bfffc4 	movi	r2,-1
  83b610:	003fdd06 	br	83b588 <__alt_mem_epcs_flash_controller_0+0xff832588>
  83b614:	08324300 	call	832430 <__sinit>
  83b618:	003fcd06 	br	83b550 <__alt_mem_epcs_flash_controller_0+0xff832550>
  83b61c:	0005883a 	mov	r2,zero
  83b620:	003fd606 	br	83b57c <__alt_mem_epcs_flash_controller_0+0xff83257c>
  83b624:	81400c17 	ldw	r5,48(r16)
  83b628:	28000626 	beq	r5,zero,83b644 <__swsetup_r+0x124>
  83b62c:	80801004 	addi	r2,r16,64
  83b630:	28800326 	beq	r5,r2,83b640 <__swsetup_r+0x120>
  83b634:	8809883a 	mov	r4,r17
  83b638:	0832d380 	call	832d38 <_free_r>
  83b63c:	8100030b 	ldhu	r4,12(r16)
  83b640:	80000c15 	stw	zero,48(r16)
  83b644:	80c00417 	ldw	r3,16(r16)
  83b648:	00bff6c4 	movi	r2,-37
  83b64c:	1108703a 	and	r4,r2,r4
  83b650:	80000115 	stw	zero,4(r16)
  83b654:	80c00015 	stw	r3,0(r16)
  83b658:	003fd506 	br	83b5b0 <__alt_mem_epcs_flash_controller_0+0xff8325b0>
  83b65c:	00800244 	movi	r2,9
  83b660:	88800015 	stw	r2,0(r17)
  83b664:	20801014 	ori	r2,r4,64
  83b668:	8080030d 	sth	r2,12(r16)
  83b66c:	00bfffc4 	movi	r2,-1
  83b670:	003fc506 	br	83b588 <__alt_mem_epcs_flash_controller_0+0xff832588>

0083b674 <_close_r>:
  83b674:	defffd04 	addi	sp,sp,-12
  83b678:	dc000015 	stw	r16,0(sp)
  83b67c:	040021b4 	movhi	r16,134
  83b680:	dc400115 	stw	r17,4(sp)
  83b684:	842fc604 	addi	r16,r16,-16616
  83b688:	2023883a 	mov	r17,r4
  83b68c:	2809883a 	mov	r4,r5
  83b690:	dfc00215 	stw	ra,8(sp)
  83b694:	80000015 	stw	zero,0(r16)
  83b698:	08498740 	call	849874 <close>
  83b69c:	00ffffc4 	movi	r3,-1
  83b6a0:	10c00526 	beq	r2,r3,83b6b8 <_close_r+0x44>
  83b6a4:	dfc00217 	ldw	ra,8(sp)
  83b6a8:	dc400117 	ldw	r17,4(sp)
  83b6ac:	dc000017 	ldw	r16,0(sp)
  83b6b0:	dec00304 	addi	sp,sp,12
  83b6b4:	f800283a 	ret
  83b6b8:	80c00017 	ldw	r3,0(r16)
  83b6bc:	183ff926 	beq	r3,zero,83b6a4 <__alt_mem_epcs_flash_controller_0+0xff8326a4>
  83b6c0:	88c00015 	stw	r3,0(r17)
  83b6c4:	003ff706 	br	83b6a4 <__alt_mem_epcs_flash_controller_0+0xff8326a4>

0083b6c8 <__call_exitprocs>:
  83b6c8:	defff504 	addi	sp,sp,-44
  83b6cc:	df000915 	stw	fp,36(sp)
  83b6d0:	dd400615 	stw	r21,24(sp)
  83b6d4:	dc800315 	stw	r18,12(sp)
  83b6d8:	dfc00a15 	stw	ra,40(sp)
  83b6dc:	ddc00815 	stw	r23,32(sp)
  83b6e0:	dd800715 	stw	r22,28(sp)
  83b6e4:	dd000515 	stw	r20,20(sp)
  83b6e8:	dcc00415 	stw	r19,16(sp)
  83b6ec:	dc400215 	stw	r17,8(sp)
  83b6f0:	dc000115 	stw	r16,4(sp)
  83b6f4:	d9000015 	stw	r4,0(sp)
  83b6f8:	2839883a 	mov	fp,r5
  83b6fc:	04800044 	movi	r18,1
  83b700:	057fffc4 	movi	r21,-1
  83b704:	008021b4 	movhi	r2,134
  83b708:	10af7304 	addi	r2,r2,-16948
  83b70c:	12000017 	ldw	r8,0(r2)
  83b710:	45005217 	ldw	r20,328(r8)
  83b714:	44c05204 	addi	r19,r8,328
  83b718:	a0001c26 	beq	r20,zero,83b78c <__call_exitprocs+0xc4>
  83b71c:	a0800117 	ldw	r2,4(r20)
  83b720:	15ffffc4 	addi	r23,r2,-1
  83b724:	b8000d16 	blt	r23,zero,83b75c <__call_exitprocs+0x94>
  83b728:	14000044 	addi	r16,r2,1
  83b72c:	8421883a 	add	r16,r16,r16
  83b730:	8421883a 	add	r16,r16,r16
  83b734:	84402004 	addi	r17,r16,128
  83b738:	a463883a 	add	r17,r20,r17
  83b73c:	a421883a 	add	r16,r20,r16
  83b740:	e0001e26 	beq	fp,zero,83b7bc <__call_exitprocs+0xf4>
  83b744:	80804017 	ldw	r2,256(r16)
  83b748:	e0801c26 	beq	fp,r2,83b7bc <__call_exitprocs+0xf4>
  83b74c:	bdffffc4 	addi	r23,r23,-1
  83b750:	843fff04 	addi	r16,r16,-4
  83b754:	8c7fff04 	addi	r17,r17,-4
  83b758:	bd7ff91e 	bne	r23,r21,83b740 <__alt_mem_epcs_flash_controller_0+0xff832740>
  83b75c:	008020f4 	movhi	r2,131
  83b760:	108cd204 	addi	r2,r2,13128
  83b764:	10000926 	beq	r2,zero,83b78c <__call_exitprocs+0xc4>
  83b768:	a0800117 	ldw	r2,4(r20)
  83b76c:	1000301e 	bne	r2,zero,83b830 <__call_exitprocs+0x168>
  83b770:	a0800017 	ldw	r2,0(r20)
  83b774:	10003226 	beq	r2,zero,83b840 <__call_exitprocs+0x178>
  83b778:	a009883a 	mov	r4,r20
  83b77c:	98800015 	stw	r2,0(r19)
  83b780:	08333480 	call	833348 <free>
  83b784:	9d000017 	ldw	r20,0(r19)
  83b788:	a03fe41e 	bne	r20,zero,83b71c <__alt_mem_epcs_flash_controller_0+0xff83271c>
  83b78c:	dfc00a17 	ldw	ra,40(sp)
  83b790:	df000917 	ldw	fp,36(sp)
  83b794:	ddc00817 	ldw	r23,32(sp)
  83b798:	dd800717 	ldw	r22,28(sp)
  83b79c:	dd400617 	ldw	r21,24(sp)
  83b7a0:	dd000517 	ldw	r20,20(sp)
  83b7a4:	dcc00417 	ldw	r19,16(sp)
  83b7a8:	dc800317 	ldw	r18,12(sp)
  83b7ac:	dc400217 	ldw	r17,8(sp)
  83b7b0:	dc000117 	ldw	r16,4(sp)
  83b7b4:	dec00b04 	addi	sp,sp,44
  83b7b8:	f800283a 	ret
  83b7bc:	a0800117 	ldw	r2,4(r20)
  83b7c0:	80c00017 	ldw	r3,0(r16)
  83b7c4:	10bfffc4 	addi	r2,r2,-1
  83b7c8:	15c01426 	beq	r2,r23,83b81c <__call_exitprocs+0x154>
  83b7cc:	80000015 	stw	zero,0(r16)
  83b7d0:	183fde26 	beq	r3,zero,83b74c <__alt_mem_epcs_flash_controller_0+0xff83274c>
  83b7d4:	95c8983a 	sll	r4,r18,r23
  83b7d8:	a0806217 	ldw	r2,392(r20)
  83b7dc:	a5800117 	ldw	r22,4(r20)
  83b7e0:	2084703a 	and	r2,r4,r2
  83b7e4:	10000b26 	beq	r2,zero,83b814 <__call_exitprocs+0x14c>
  83b7e8:	a0806317 	ldw	r2,396(r20)
  83b7ec:	2088703a 	and	r4,r4,r2
  83b7f0:	20000c1e 	bne	r4,zero,83b824 <__call_exitprocs+0x15c>
  83b7f4:	89400017 	ldw	r5,0(r17)
  83b7f8:	d9000017 	ldw	r4,0(sp)
  83b7fc:	183ee83a 	callr	r3
  83b800:	a0800117 	ldw	r2,4(r20)
  83b804:	15bfbf1e 	bne	r2,r22,83b704 <__alt_mem_epcs_flash_controller_0+0xff832704>
  83b808:	98800017 	ldw	r2,0(r19)
  83b80c:	153fcf26 	beq	r2,r20,83b74c <__alt_mem_epcs_flash_controller_0+0xff83274c>
  83b810:	003fbc06 	br	83b704 <__alt_mem_epcs_flash_controller_0+0xff832704>
  83b814:	183ee83a 	callr	r3
  83b818:	003ff906 	br	83b800 <__alt_mem_epcs_flash_controller_0+0xff832800>
  83b81c:	a5c00115 	stw	r23,4(r20)
  83b820:	003feb06 	br	83b7d0 <__alt_mem_epcs_flash_controller_0+0xff8327d0>
  83b824:	89000017 	ldw	r4,0(r17)
  83b828:	183ee83a 	callr	r3
  83b82c:	003ff406 	br	83b800 <__alt_mem_epcs_flash_controller_0+0xff832800>
  83b830:	a0800017 	ldw	r2,0(r20)
  83b834:	a027883a 	mov	r19,r20
  83b838:	1029883a 	mov	r20,r2
  83b83c:	003fb606 	br	83b718 <__alt_mem_epcs_flash_controller_0+0xff832718>
  83b840:	0005883a 	mov	r2,zero
  83b844:	003ffb06 	br	83b834 <__alt_mem_epcs_flash_controller_0+0xff832834>

0083b848 <abort>:
  83b848:	deffff04 	addi	sp,sp,-4
  83b84c:	01000184 	movi	r4,6
  83b850:	dfc00015 	stw	ra,0(sp)
  83b854:	083f1e40 	call	83f1e4 <raise>
  83b858:	01000044 	movi	r4,1
  83b85c:	08499780 	call	849978 <_exit>

0083b860 <quorem>:
  83b860:	defff204 	addi	sp,sp,-56
  83b864:	ddc00b15 	stw	r23,44(sp)
  83b868:	20800417 	ldw	r2,16(r4)
  83b86c:	2dc00417 	ldw	r23,16(r5)
  83b870:	dfc00d15 	stw	ra,52(sp)
  83b874:	df000c15 	stw	fp,48(sp)
  83b878:	dd800a15 	stw	r22,40(sp)
  83b87c:	dd400915 	stw	r21,36(sp)
  83b880:	dd000815 	stw	r20,32(sp)
  83b884:	dcc00715 	stw	r19,28(sp)
  83b888:	dc800615 	stw	r18,24(sp)
  83b88c:	dc400515 	stw	r17,20(sp)
  83b890:	dc000415 	stw	r16,16(sp)
  83b894:	15c07a16 	blt	r2,r23,83ba80 <quorem+0x220>
  83b898:	bdffffc4 	addi	r23,r23,-1
  83b89c:	bde9883a 	add	r20,r23,r23
  83b8a0:	28c00504 	addi	r3,r5,20
  83b8a4:	a529883a 	add	r20,r20,r20
  83b8a8:	1d39883a 	add	fp,r3,r20
  83b8ac:	24c00504 	addi	r19,r4,20
  83b8b0:	d9400215 	stw	r5,8(sp)
  83b8b4:	9d29883a 	add	r20,r19,r20
  83b8b8:	e1400017 	ldw	r5,0(fp)
  83b8bc:	d9000015 	stw	r4,0(sp)
  83b8c0:	a1000017 	ldw	r4,0(r20)
  83b8c4:	29400044 	addi	r5,r5,1
  83b8c8:	d8c00115 	stw	r3,4(sp)
  83b8cc:	dd000315 	stw	r20,12(sp)
  83b8d0:	083012c0 	call	83012c <__udivsi3>
  83b8d4:	1025883a 	mov	r18,r2
  83b8d8:	10003026 	beq	r2,zero,83b99c <quorem+0x13c>
  83b8dc:	dc400117 	ldw	r17,4(sp)
  83b8e0:	9829883a 	mov	r20,r19
  83b8e4:	002d883a 	mov	r22,zero
  83b8e8:	0021883a 	mov	r16,zero
  83b8ec:	8d400017 	ldw	r21,0(r17)
  83b8f0:	900b883a 	mov	r5,r18
  83b8f4:	8c400104 	addi	r17,r17,4
  83b8f8:	a93fffcc 	andi	r4,r21,65535
  83b8fc:	08301e80 	call	8301e8 <__mulsi3>
  83b900:	a808d43a 	srli	r4,r21,16
  83b904:	900b883a 	mov	r5,r18
  83b908:	15ad883a 	add	r22,r2,r22
  83b90c:	08301e80 	call	8301e8 <__mulsi3>
  83b910:	a1000017 	ldw	r4,0(r20)
  83b914:	b00cd43a 	srli	r6,r22,16
  83b918:	b0ffffcc 	andi	r3,r22,65535
  83b91c:	217fffcc 	andi	r5,r4,65535
  83b920:	2c21883a 	add	r16,r5,r16
  83b924:	80c7c83a 	sub	r3,r16,r3
  83b928:	2008d43a 	srli	r4,r4,16
  83b92c:	1185883a 	add	r2,r2,r6
  83b930:	1821d43a 	srai	r16,r3,16
  83b934:	117fffcc 	andi	r5,r2,65535
  83b938:	2149c83a 	sub	r4,r4,r5
  83b93c:	2421883a 	add	r16,r4,r16
  83b940:	8008943a 	slli	r4,r16,16
  83b944:	18ffffcc 	andi	r3,r3,65535
  83b948:	102cd43a 	srli	r22,r2,16
  83b94c:	20c8b03a 	or	r4,r4,r3
  83b950:	a1000015 	stw	r4,0(r20)
  83b954:	8021d43a 	srai	r16,r16,16
  83b958:	a5000104 	addi	r20,r20,4
  83b95c:	e47fe32e 	bgeu	fp,r17,83b8ec <__alt_mem_epcs_flash_controller_0+0xff8328ec>
  83b960:	d8c00317 	ldw	r3,12(sp)
  83b964:	18800017 	ldw	r2,0(r3)
  83b968:	10000c1e 	bne	r2,zero,83b99c <quorem+0x13c>
  83b96c:	18bfff04 	addi	r2,r3,-4
  83b970:	9880082e 	bgeu	r19,r2,83b994 <quorem+0x134>
  83b974:	18ffff17 	ldw	r3,-4(r3)
  83b978:	18000326 	beq	r3,zero,83b988 <quorem+0x128>
  83b97c:	00000506 	br	83b994 <quorem+0x134>
  83b980:	10c00017 	ldw	r3,0(r2)
  83b984:	1800031e 	bne	r3,zero,83b994 <quorem+0x134>
  83b988:	10bfff04 	addi	r2,r2,-4
  83b98c:	bdffffc4 	addi	r23,r23,-1
  83b990:	98bffb36 	bltu	r19,r2,83b980 <__alt_mem_epcs_flash_controller_0+0xff832980>
  83b994:	d8c00017 	ldw	r3,0(sp)
  83b998:	1dc00415 	stw	r23,16(r3)
  83b99c:	d9400217 	ldw	r5,8(sp)
  83b9a0:	d9000017 	ldw	r4,0(sp)
  83b9a4:	083e6b00 	call	83e6b0 <__mcmp>
  83b9a8:	10002816 	blt	r2,zero,83ba4c <quorem+0x1ec>
  83b9ac:	dc400117 	ldw	r17,4(sp)
  83b9b0:	94800044 	addi	r18,r18,1
  83b9b4:	980d883a 	mov	r6,r19
  83b9b8:	0007883a 	mov	r3,zero
  83b9bc:	31000017 	ldw	r4,0(r6)
  83b9c0:	89400017 	ldw	r5,0(r17)
  83b9c4:	31800104 	addi	r6,r6,4
  83b9c8:	20bfffcc 	andi	r2,r4,65535
  83b9cc:	10c7883a 	add	r3,r2,r3
  83b9d0:	28bfffcc 	andi	r2,r5,65535
  83b9d4:	1885c83a 	sub	r2,r3,r2
  83b9d8:	280ad43a 	srli	r5,r5,16
  83b9dc:	2008d43a 	srli	r4,r4,16
  83b9e0:	1007d43a 	srai	r3,r2,16
  83b9e4:	10bfffcc 	andi	r2,r2,65535
  83b9e8:	2149c83a 	sub	r4,r4,r5
  83b9ec:	20c9883a 	add	r4,r4,r3
  83b9f0:	200a943a 	slli	r5,r4,16
  83b9f4:	8c400104 	addi	r17,r17,4
  83b9f8:	2007d43a 	srai	r3,r4,16
  83b9fc:	2884b03a 	or	r2,r5,r2
  83ba00:	30bfff15 	stw	r2,-4(r6)
  83ba04:	e47fed2e 	bgeu	fp,r17,83b9bc <__alt_mem_epcs_flash_controller_0+0xff8329bc>
  83ba08:	bdc5883a 	add	r2,r23,r23
  83ba0c:	1085883a 	add	r2,r2,r2
  83ba10:	9887883a 	add	r3,r19,r2
  83ba14:	18800017 	ldw	r2,0(r3)
  83ba18:	10000c1e 	bne	r2,zero,83ba4c <quorem+0x1ec>
  83ba1c:	18bfff04 	addi	r2,r3,-4
  83ba20:	9880082e 	bgeu	r19,r2,83ba44 <quorem+0x1e4>
  83ba24:	18ffff17 	ldw	r3,-4(r3)
  83ba28:	18000326 	beq	r3,zero,83ba38 <quorem+0x1d8>
  83ba2c:	00000506 	br	83ba44 <quorem+0x1e4>
  83ba30:	10c00017 	ldw	r3,0(r2)
  83ba34:	1800031e 	bne	r3,zero,83ba44 <quorem+0x1e4>
  83ba38:	10bfff04 	addi	r2,r2,-4
  83ba3c:	bdffffc4 	addi	r23,r23,-1
  83ba40:	98bffb36 	bltu	r19,r2,83ba30 <__alt_mem_epcs_flash_controller_0+0xff832a30>
  83ba44:	d8c00017 	ldw	r3,0(sp)
  83ba48:	1dc00415 	stw	r23,16(r3)
  83ba4c:	9005883a 	mov	r2,r18
  83ba50:	dfc00d17 	ldw	ra,52(sp)
  83ba54:	df000c17 	ldw	fp,48(sp)
  83ba58:	ddc00b17 	ldw	r23,44(sp)
  83ba5c:	dd800a17 	ldw	r22,40(sp)
  83ba60:	dd400917 	ldw	r21,36(sp)
  83ba64:	dd000817 	ldw	r20,32(sp)
  83ba68:	dcc00717 	ldw	r19,28(sp)
  83ba6c:	dc800617 	ldw	r18,24(sp)
  83ba70:	dc400517 	ldw	r17,20(sp)
  83ba74:	dc000417 	ldw	r16,16(sp)
  83ba78:	dec00e04 	addi	sp,sp,56
  83ba7c:	f800283a 	ret
  83ba80:	0005883a 	mov	r2,zero
  83ba84:	003ff206 	br	83ba50 <__alt_mem_epcs_flash_controller_0+0xff832a50>

0083ba88 <_dtoa_r>:
  83ba88:	20801017 	ldw	r2,64(r4)
  83ba8c:	deffde04 	addi	sp,sp,-136
  83ba90:	df002015 	stw	fp,128(sp)
  83ba94:	dcc01b15 	stw	r19,108(sp)
  83ba98:	dc801a15 	stw	r18,104(sp)
  83ba9c:	dc401915 	stw	r17,100(sp)
  83baa0:	dc001815 	stw	r16,96(sp)
  83baa4:	dfc02115 	stw	ra,132(sp)
  83baa8:	ddc01f15 	stw	r23,124(sp)
  83baac:	dd801e15 	stw	r22,120(sp)
  83bab0:	dd401d15 	stw	r21,116(sp)
  83bab4:	dd001c15 	stw	r20,112(sp)
  83bab8:	d9c00315 	stw	r7,12(sp)
  83babc:	2039883a 	mov	fp,r4
  83bac0:	3023883a 	mov	r17,r6
  83bac4:	2825883a 	mov	r18,r5
  83bac8:	dc002417 	ldw	r16,144(sp)
  83bacc:	3027883a 	mov	r19,r6
  83bad0:	10000826 	beq	r2,zero,83baf4 <_dtoa_r+0x6c>
  83bad4:	21801117 	ldw	r6,68(r4)
  83bad8:	00c00044 	movi	r3,1
  83badc:	100b883a 	mov	r5,r2
  83bae0:	1986983a 	sll	r3,r3,r6
  83bae4:	11800115 	stw	r6,4(r2)
  83bae8:	10c00215 	stw	r3,8(r2)
  83baec:	083ddd40 	call	83ddd4 <_Bfree>
  83baf0:	e0001015 	stw	zero,64(fp)
  83baf4:	88002e16 	blt	r17,zero,83bbb0 <_dtoa_r+0x128>
  83baf8:	80000015 	stw	zero,0(r16)
  83bafc:	889ffc2c 	andhi	r2,r17,32752
  83bb00:	00dffc34 	movhi	r3,32752
  83bb04:	10c01c26 	beq	r2,r3,83bb78 <_dtoa_r+0xf0>
  83bb08:	000d883a 	mov	r6,zero
  83bb0c:	000f883a 	mov	r7,zero
  83bb10:	9009883a 	mov	r4,r18
  83bb14:	980b883a 	mov	r5,r19
  83bb18:	0848b880 	call	848b88 <__eqdf2>
  83bb1c:	10002b1e 	bne	r2,zero,83bbcc <_dtoa_r+0x144>
  83bb20:	d9c02317 	ldw	r7,140(sp)
  83bb24:	00800044 	movi	r2,1
  83bb28:	38800015 	stw	r2,0(r7)
  83bb2c:	d8802517 	ldw	r2,148(sp)
  83bb30:	10019e26 	beq	r2,zero,83c1ac <_dtoa_r+0x724>
  83bb34:	d8c02517 	ldw	r3,148(sp)
  83bb38:	008021b4 	movhi	r2,134
  83bb3c:	10a60544 	addi	r2,r2,-26603
  83bb40:	18800015 	stw	r2,0(r3)
  83bb44:	10bfffc4 	addi	r2,r2,-1
  83bb48:	dfc02117 	ldw	ra,132(sp)
  83bb4c:	df002017 	ldw	fp,128(sp)
  83bb50:	ddc01f17 	ldw	r23,124(sp)
  83bb54:	dd801e17 	ldw	r22,120(sp)
  83bb58:	dd401d17 	ldw	r21,116(sp)
  83bb5c:	dd001c17 	ldw	r20,112(sp)
  83bb60:	dcc01b17 	ldw	r19,108(sp)
  83bb64:	dc801a17 	ldw	r18,104(sp)
  83bb68:	dc401917 	ldw	r17,100(sp)
  83bb6c:	dc001817 	ldw	r16,96(sp)
  83bb70:	dec02204 	addi	sp,sp,136
  83bb74:	f800283a 	ret
  83bb78:	d8c02317 	ldw	r3,140(sp)
  83bb7c:	0089c3c4 	movi	r2,9999
  83bb80:	18800015 	stw	r2,0(r3)
  83bb84:	90017726 	beq	r18,zero,83c164 <_dtoa_r+0x6dc>
  83bb88:	008021b4 	movhi	r2,134
  83bb8c:	10a6c404 	addi	r2,r2,-25840
  83bb90:	d9002517 	ldw	r4,148(sp)
  83bb94:	203fec26 	beq	r4,zero,83bb48 <__alt_mem_epcs_flash_controller_0+0xff832b48>
  83bb98:	10c000c7 	ldb	r3,3(r2)
  83bb9c:	1801781e 	bne	r3,zero,83c180 <_dtoa_r+0x6f8>
  83bba0:	10c000c4 	addi	r3,r2,3
  83bba4:	d9802517 	ldw	r6,148(sp)
  83bba8:	30c00015 	stw	r3,0(r6)
  83bbac:	003fe606 	br	83bb48 <__alt_mem_epcs_flash_controller_0+0xff832b48>
  83bbb0:	04e00034 	movhi	r19,32768
  83bbb4:	9cffffc4 	addi	r19,r19,-1
  83bbb8:	00800044 	movi	r2,1
  83bbbc:	8ce6703a 	and	r19,r17,r19
  83bbc0:	80800015 	stw	r2,0(r16)
  83bbc4:	9823883a 	mov	r17,r19
  83bbc8:	003fcc06 	br	83bafc <__alt_mem_epcs_flash_controller_0+0xff832afc>
  83bbcc:	d8800204 	addi	r2,sp,8
  83bbd0:	d8800015 	stw	r2,0(sp)
  83bbd4:	d9c00104 	addi	r7,sp,4
  83bbd8:	900b883a 	mov	r5,r18
  83bbdc:	980d883a 	mov	r6,r19
  83bbe0:	e009883a 	mov	r4,fp
  83bbe4:	8820d53a 	srli	r16,r17,20
  83bbe8:	083ea7c0 	call	83ea7c <__d2b>
  83bbec:	d8800915 	stw	r2,36(sp)
  83bbf0:	8001651e 	bne	r16,zero,83c188 <_dtoa_r+0x700>
  83bbf4:	dd800217 	ldw	r22,8(sp)
  83bbf8:	dc000117 	ldw	r16,4(sp)
  83bbfc:	00800804 	movi	r2,32
  83bc00:	b421883a 	add	r16,r22,r16
  83bc04:	80c10c84 	addi	r3,r16,1074
  83bc08:	10c2d10e 	bge	r2,r3,83c750 <_dtoa_r+0xcc8>
  83bc0c:	00801004 	movi	r2,64
  83bc10:	81010484 	addi	r4,r16,1042
  83bc14:	10c7c83a 	sub	r3,r2,r3
  83bc18:	9108d83a 	srl	r4,r18,r4
  83bc1c:	88e2983a 	sll	r17,r17,r3
  83bc20:	2448b03a 	or	r4,r4,r17
  83bc24:	08319ec0 	call	8319ec <__floatunsidf>
  83bc28:	017f8434 	movhi	r5,65040
  83bc2c:	01800044 	movi	r6,1
  83bc30:	1009883a 	mov	r4,r2
  83bc34:	194b883a 	add	r5,r3,r5
  83bc38:	843fffc4 	addi	r16,r16,-1
  83bc3c:	d9801115 	stw	r6,68(sp)
  83bc40:	000d883a 	mov	r6,zero
  83bc44:	01cffe34 	movhi	r7,16376
  83bc48:	0848de00 	call	848de0 <__subdf3>
  83bc4c:	0198dbf4 	movhi	r6,25455
  83bc50:	01cff4f4 	movhi	r7,16339
  83bc54:	3190d844 	addi	r6,r6,17249
  83bc58:	39e1e9c4 	addi	r7,r7,-30809
  83bc5c:	1009883a 	mov	r4,r2
  83bc60:	180b883a 	mov	r5,r3
  83bc64:	08311800 	call	831180 <__muldf3>
  83bc68:	01a2d874 	movhi	r6,35681
  83bc6c:	01cff1f4 	movhi	r7,16327
  83bc70:	31b22cc4 	addi	r6,r6,-14157
  83bc74:	39e28a04 	addi	r7,r7,-30168
  83bc78:	180b883a 	mov	r5,r3
  83bc7c:	1009883a 	mov	r4,r2
  83bc80:	084790c0 	call	84790c <__adddf3>
  83bc84:	8009883a 	mov	r4,r16
  83bc88:	1029883a 	mov	r20,r2
  83bc8c:	1823883a 	mov	r17,r3
  83bc90:	084975c0 	call	84975c <__floatsidf>
  83bc94:	019427f4 	movhi	r6,20639
  83bc98:	01cff4f4 	movhi	r7,16339
  83bc9c:	319e7ec4 	addi	r6,r6,31227
  83bca0:	39d104c4 	addi	r7,r7,17427
  83bca4:	1009883a 	mov	r4,r2
  83bca8:	180b883a 	mov	r5,r3
  83bcac:	08311800 	call	831180 <__muldf3>
  83bcb0:	100d883a 	mov	r6,r2
  83bcb4:	180f883a 	mov	r7,r3
  83bcb8:	a009883a 	mov	r4,r20
  83bcbc:	880b883a 	mov	r5,r17
  83bcc0:	084790c0 	call	84790c <__adddf3>
  83bcc4:	1009883a 	mov	r4,r2
  83bcc8:	180b883a 	mov	r5,r3
  83bccc:	1029883a 	mov	r20,r2
  83bcd0:	1823883a 	mov	r17,r3
  83bcd4:	08496dc0 	call	8496dc <__fixdfsi>
  83bcd8:	000d883a 	mov	r6,zero
  83bcdc:	000f883a 	mov	r7,zero
  83bce0:	a009883a 	mov	r4,r20
  83bce4:	880b883a 	mov	r5,r17
  83bce8:	d8800515 	stw	r2,20(sp)
  83bcec:	0848cec0 	call	848cec <__ledf2>
  83bcf0:	10028716 	blt	r2,zero,83c710 <_dtoa_r+0xc88>
  83bcf4:	d8c00517 	ldw	r3,20(sp)
  83bcf8:	00800584 	movi	r2,22
  83bcfc:	10c27536 	bltu	r2,r3,83c6d4 <_dtoa_r+0xc4c>
  83bd00:	180490fa 	slli	r2,r3,3
  83bd04:	00c021b4 	movhi	r3,134
  83bd08:	18e6df04 	addi	r3,r3,-25732
  83bd0c:	1885883a 	add	r2,r3,r2
  83bd10:	11000017 	ldw	r4,0(r2)
  83bd14:	11400117 	ldw	r5,4(r2)
  83bd18:	900d883a 	mov	r6,r18
  83bd1c:	980f883a 	mov	r7,r19
  83bd20:	0848c100 	call	848c10 <__gedf2>
  83bd24:	00828d0e 	bge	zero,r2,83c75c <_dtoa_r+0xcd4>
  83bd28:	d9000517 	ldw	r4,20(sp)
  83bd2c:	d8000e15 	stw	zero,56(sp)
  83bd30:	213fffc4 	addi	r4,r4,-1
  83bd34:	d9000515 	stw	r4,20(sp)
  83bd38:	b42dc83a 	sub	r22,r22,r16
  83bd3c:	b5bfffc4 	addi	r22,r22,-1
  83bd40:	b0026f16 	blt	r22,zero,83c700 <_dtoa_r+0xc78>
  83bd44:	d8000815 	stw	zero,32(sp)
  83bd48:	d9c00517 	ldw	r7,20(sp)
  83bd4c:	38026416 	blt	r7,zero,83c6e0 <_dtoa_r+0xc58>
  83bd50:	b1ed883a 	add	r22,r22,r7
  83bd54:	d9c00d15 	stw	r7,52(sp)
  83bd58:	d8000a15 	stw	zero,40(sp)
  83bd5c:	d9800317 	ldw	r6,12(sp)
  83bd60:	00800244 	movi	r2,9
  83bd64:	11811436 	bltu	r2,r6,83c1b8 <_dtoa_r+0x730>
  83bd68:	00800144 	movi	r2,5
  83bd6c:	1184e10e 	bge	r2,r6,83d0f4 <_dtoa_r+0x166c>
  83bd70:	31bfff04 	addi	r6,r6,-4
  83bd74:	d9800315 	stw	r6,12(sp)
  83bd78:	0023883a 	mov	r17,zero
  83bd7c:	d9800317 	ldw	r6,12(sp)
  83bd80:	008000c4 	movi	r2,3
  83bd84:	30836726 	beq	r6,r2,83cb24 <_dtoa_r+0x109c>
  83bd88:	1183410e 	bge	r2,r6,83ca90 <_dtoa_r+0x1008>
  83bd8c:	d9c00317 	ldw	r7,12(sp)
  83bd90:	00800104 	movi	r2,4
  83bd94:	38827c26 	beq	r7,r2,83c788 <_dtoa_r+0xd00>
  83bd98:	00800144 	movi	r2,5
  83bd9c:	3884c41e 	bne	r7,r2,83d0b0 <_dtoa_r+0x1628>
  83bda0:	00800044 	movi	r2,1
  83bda4:	d8800b15 	stw	r2,44(sp)
  83bda8:	d8c00517 	ldw	r3,20(sp)
  83bdac:	d9002217 	ldw	r4,136(sp)
  83bdb0:	1907883a 	add	r3,r3,r4
  83bdb4:	19800044 	addi	r6,r3,1
  83bdb8:	d8c00c15 	stw	r3,48(sp)
  83bdbc:	d9800615 	stw	r6,24(sp)
  83bdc0:	0183a40e 	bge	zero,r6,83cc54 <_dtoa_r+0x11cc>
  83bdc4:	d9800617 	ldw	r6,24(sp)
  83bdc8:	3021883a 	mov	r16,r6
  83bdcc:	e0001115 	stw	zero,68(fp)
  83bdd0:	008005c4 	movi	r2,23
  83bdd4:	1184c92e 	bgeu	r2,r6,83d0fc <_dtoa_r+0x1674>
  83bdd8:	00c00044 	movi	r3,1
  83bddc:	00800104 	movi	r2,4
  83bde0:	1085883a 	add	r2,r2,r2
  83bde4:	11000504 	addi	r4,r2,20
  83bde8:	180b883a 	mov	r5,r3
  83bdec:	18c00044 	addi	r3,r3,1
  83bdf0:	313ffb2e 	bgeu	r6,r4,83bde0 <__alt_mem_epcs_flash_controller_0+0xff832de0>
  83bdf4:	e1401115 	stw	r5,68(fp)
  83bdf8:	e009883a 	mov	r4,fp
  83bdfc:	083dd2c0 	call	83dd2c <_Balloc>
  83be00:	d8800715 	stw	r2,28(sp)
  83be04:	e0801015 	stw	r2,64(fp)
  83be08:	00800384 	movi	r2,14
  83be0c:	1400f736 	bltu	r2,r16,83c1ec <_dtoa_r+0x764>
  83be10:	8800f626 	beq	r17,zero,83c1ec <_dtoa_r+0x764>
  83be14:	d9c00517 	ldw	r7,20(sp)
  83be18:	01c39a0e 	bge	zero,r7,83cc84 <_dtoa_r+0x11fc>
  83be1c:	388003cc 	andi	r2,r7,15
  83be20:	100490fa 	slli	r2,r2,3
  83be24:	382bd13a 	srai	r21,r7,4
  83be28:	00c021b4 	movhi	r3,134
  83be2c:	18e6df04 	addi	r3,r3,-25732
  83be30:	1885883a 	add	r2,r3,r2
  83be34:	a8c0040c 	andi	r3,r21,16
  83be38:	12400017 	ldw	r9,0(r2)
  83be3c:	12000117 	ldw	r8,4(r2)
  83be40:	18037926 	beq	r3,zero,83cc28 <_dtoa_r+0x11a0>
  83be44:	008021b4 	movhi	r2,134
  83be48:	10a6d504 	addi	r2,r2,-25772
  83be4c:	11800817 	ldw	r6,32(r2)
  83be50:	11c00917 	ldw	r7,36(r2)
  83be54:	9009883a 	mov	r4,r18
  83be58:	980b883a 	mov	r5,r19
  83be5c:	da001715 	stw	r8,92(sp)
  83be60:	da401615 	stw	r9,88(sp)
  83be64:	08481b80 	call	8481b8 <__divdf3>
  83be68:	da001717 	ldw	r8,92(sp)
  83be6c:	da401617 	ldw	r9,88(sp)
  83be70:	ad4003cc 	andi	r21,r21,15
  83be74:	040000c4 	movi	r16,3
  83be78:	1023883a 	mov	r17,r2
  83be7c:	1829883a 	mov	r20,r3
  83be80:	a8001126 	beq	r21,zero,83bec8 <_dtoa_r+0x440>
  83be84:	05c021b4 	movhi	r23,134
  83be88:	bde6d504 	addi	r23,r23,-25772
  83be8c:	4805883a 	mov	r2,r9
  83be90:	4007883a 	mov	r3,r8
  83be94:	a980004c 	andi	r6,r21,1
  83be98:	1009883a 	mov	r4,r2
  83be9c:	a82bd07a 	srai	r21,r21,1
  83bea0:	180b883a 	mov	r5,r3
  83bea4:	30000426 	beq	r6,zero,83beb8 <_dtoa_r+0x430>
  83bea8:	b9800017 	ldw	r6,0(r23)
  83beac:	b9c00117 	ldw	r7,4(r23)
  83beb0:	84000044 	addi	r16,r16,1
  83beb4:	08311800 	call	831180 <__muldf3>
  83beb8:	bdc00204 	addi	r23,r23,8
  83bebc:	a83ff51e 	bne	r21,zero,83be94 <__alt_mem_epcs_flash_controller_0+0xff832e94>
  83bec0:	1013883a 	mov	r9,r2
  83bec4:	1811883a 	mov	r8,r3
  83bec8:	480d883a 	mov	r6,r9
  83becc:	400f883a 	mov	r7,r8
  83bed0:	8809883a 	mov	r4,r17
  83bed4:	a00b883a 	mov	r5,r20
  83bed8:	08481b80 	call	8481b8 <__divdf3>
  83bedc:	d8800f15 	stw	r2,60(sp)
  83bee0:	d8c01015 	stw	r3,64(sp)
  83bee4:	d8c00e17 	ldw	r3,56(sp)
  83bee8:	18000626 	beq	r3,zero,83bf04 <_dtoa_r+0x47c>
  83beec:	d9000f17 	ldw	r4,60(sp)
  83bef0:	d9401017 	ldw	r5,64(sp)
  83bef4:	000d883a 	mov	r6,zero
  83bef8:	01cffc34 	movhi	r7,16368
  83befc:	0848cec0 	call	848cec <__ledf2>
  83bf00:	10040b16 	blt	r2,zero,83cf30 <_dtoa_r+0x14a8>
  83bf04:	8009883a 	mov	r4,r16
  83bf08:	084975c0 	call	84975c <__floatsidf>
  83bf0c:	d9800f17 	ldw	r6,60(sp)
  83bf10:	d9c01017 	ldw	r7,64(sp)
  83bf14:	1009883a 	mov	r4,r2
  83bf18:	180b883a 	mov	r5,r3
  83bf1c:	08311800 	call	831180 <__muldf3>
  83bf20:	000d883a 	mov	r6,zero
  83bf24:	01d00734 	movhi	r7,16412
  83bf28:	1009883a 	mov	r4,r2
  83bf2c:	180b883a 	mov	r5,r3
  83bf30:	084790c0 	call	84790c <__adddf3>
  83bf34:	1021883a 	mov	r16,r2
  83bf38:	d8800617 	ldw	r2,24(sp)
  83bf3c:	047f3034 	movhi	r17,64704
  83bf40:	1c63883a 	add	r17,r3,r17
  83bf44:	10031826 	beq	r2,zero,83cba8 <_dtoa_r+0x1120>
  83bf48:	d8c00517 	ldw	r3,20(sp)
  83bf4c:	db000617 	ldw	r12,24(sp)
  83bf50:	d8c01315 	stw	r3,76(sp)
  83bf54:	d9000b17 	ldw	r4,44(sp)
  83bf58:	20038f26 	beq	r4,zero,83cd98 <_dtoa_r+0x1310>
  83bf5c:	60bfffc4 	addi	r2,r12,-1
  83bf60:	100490fa 	slli	r2,r2,3
  83bf64:	00c021b4 	movhi	r3,134
  83bf68:	18e6df04 	addi	r3,r3,-25732
  83bf6c:	1885883a 	add	r2,r3,r2
  83bf70:	11800017 	ldw	r6,0(r2)
  83bf74:	11c00117 	ldw	r7,4(r2)
  83bf78:	d8800717 	ldw	r2,28(sp)
  83bf7c:	0009883a 	mov	r4,zero
  83bf80:	014ff834 	movhi	r5,16352
  83bf84:	db001615 	stw	r12,88(sp)
  83bf88:	15c00044 	addi	r23,r2,1
  83bf8c:	08481b80 	call	8481b8 <__divdf3>
  83bf90:	800d883a 	mov	r6,r16
  83bf94:	880f883a 	mov	r7,r17
  83bf98:	1009883a 	mov	r4,r2
  83bf9c:	180b883a 	mov	r5,r3
  83bfa0:	0848de00 	call	848de0 <__subdf3>
  83bfa4:	d9401017 	ldw	r5,64(sp)
  83bfa8:	d9000f17 	ldw	r4,60(sp)
  83bfac:	102b883a 	mov	r21,r2
  83bfb0:	d8c01215 	stw	r3,72(sp)
  83bfb4:	08496dc0 	call	8496dc <__fixdfsi>
  83bfb8:	1009883a 	mov	r4,r2
  83bfbc:	1029883a 	mov	r20,r2
  83bfc0:	084975c0 	call	84975c <__floatsidf>
  83bfc4:	d9000f17 	ldw	r4,60(sp)
  83bfc8:	d9401017 	ldw	r5,64(sp)
  83bfcc:	100d883a 	mov	r6,r2
  83bfd0:	180f883a 	mov	r7,r3
  83bfd4:	0848de00 	call	848de0 <__subdf3>
  83bfd8:	1823883a 	mov	r17,r3
  83bfdc:	d8c00717 	ldw	r3,28(sp)
  83bfe0:	d9401217 	ldw	r5,72(sp)
  83bfe4:	a2000c04 	addi	r8,r20,48
  83bfe8:	1021883a 	mov	r16,r2
  83bfec:	1a000005 	stb	r8,0(r3)
  83bff0:	800d883a 	mov	r6,r16
  83bff4:	880f883a 	mov	r7,r17
  83bff8:	a809883a 	mov	r4,r21
  83bffc:	4029883a 	mov	r20,r8
  83c000:	0848c100 	call	848c10 <__gedf2>
  83c004:	00841d16 	blt	zero,r2,83d07c <_dtoa_r+0x15f4>
  83c008:	800d883a 	mov	r6,r16
  83c00c:	880f883a 	mov	r7,r17
  83c010:	0009883a 	mov	r4,zero
  83c014:	014ffc34 	movhi	r5,16368
  83c018:	0848de00 	call	848de0 <__subdf3>
  83c01c:	d9401217 	ldw	r5,72(sp)
  83c020:	100d883a 	mov	r6,r2
  83c024:	180f883a 	mov	r7,r3
  83c028:	a809883a 	mov	r4,r21
  83c02c:	0848c100 	call	848c10 <__gedf2>
  83c030:	db001617 	ldw	r12,88(sp)
  83c034:	00840e16 	blt	zero,r2,83d070 <_dtoa_r+0x15e8>
  83c038:	00800044 	movi	r2,1
  83c03c:	13006b0e 	bge	r2,r12,83c1ec <_dtoa_r+0x764>
  83c040:	d9000717 	ldw	r4,28(sp)
  83c044:	dd800f15 	stw	r22,60(sp)
  83c048:	dcc01015 	stw	r19,64(sp)
  83c04c:	2319883a 	add	r12,r4,r12
  83c050:	dcc01217 	ldw	r19,72(sp)
  83c054:	602d883a 	mov	r22,r12
  83c058:	dc801215 	stw	r18,72(sp)
  83c05c:	b825883a 	mov	r18,r23
  83c060:	00000906 	br	83c088 <_dtoa_r+0x600>
  83c064:	0848de00 	call	848de0 <__subdf3>
  83c068:	a80d883a 	mov	r6,r21
  83c06c:	980f883a 	mov	r7,r19
  83c070:	1009883a 	mov	r4,r2
  83c074:	180b883a 	mov	r5,r3
  83c078:	0848cec0 	call	848cec <__ledf2>
  83c07c:	1003e816 	blt	r2,zero,83d020 <_dtoa_r+0x1598>
  83c080:	b825883a 	mov	r18,r23
  83c084:	bd83e926 	beq	r23,r22,83d02c <_dtoa_r+0x15a4>
  83c088:	a809883a 	mov	r4,r21
  83c08c:	980b883a 	mov	r5,r19
  83c090:	000d883a 	mov	r6,zero
  83c094:	01d00934 	movhi	r7,16420
  83c098:	08311800 	call	831180 <__muldf3>
  83c09c:	000d883a 	mov	r6,zero
  83c0a0:	01d00934 	movhi	r7,16420
  83c0a4:	8009883a 	mov	r4,r16
  83c0a8:	880b883a 	mov	r5,r17
  83c0ac:	102b883a 	mov	r21,r2
  83c0b0:	1827883a 	mov	r19,r3
  83c0b4:	08311800 	call	831180 <__muldf3>
  83c0b8:	180b883a 	mov	r5,r3
  83c0bc:	1009883a 	mov	r4,r2
  83c0c0:	1821883a 	mov	r16,r3
  83c0c4:	1023883a 	mov	r17,r2
  83c0c8:	08496dc0 	call	8496dc <__fixdfsi>
  83c0cc:	1009883a 	mov	r4,r2
  83c0d0:	1029883a 	mov	r20,r2
  83c0d4:	084975c0 	call	84975c <__floatsidf>
  83c0d8:	8809883a 	mov	r4,r17
  83c0dc:	800b883a 	mov	r5,r16
  83c0e0:	100d883a 	mov	r6,r2
  83c0e4:	180f883a 	mov	r7,r3
  83c0e8:	0848de00 	call	848de0 <__subdf3>
  83c0ec:	a5000c04 	addi	r20,r20,48
  83c0f0:	a80d883a 	mov	r6,r21
  83c0f4:	980f883a 	mov	r7,r19
  83c0f8:	1009883a 	mov	r4,r2
  83c0fc:	180b883a 	mov	r5,r3
  83c100:	95000005 	stb	r20,0(r18)
  83c104:	1021883a 	mov	r16,r2
  83c108:	1823883a 	mov	r17,r3
  83c10c:	0848cec0 	call	848cec <__ledf2>
  83c110:	bdc00044 	addi	r23,r23,1
  83c114:	800d883a 	mov	r6,r16
  83c118:	880f883a 	mov	r7,r17
  83c11c:	0009883a 	mov	r4,zero
  83c120:	014ffc34 	movhi	r5,16368
  83c124:	103fcf0e 	bge	r2,zero,83c064 <__alt_mem_epcs_flash_controller_0+0xff833064>
  83c128:	d8c01317 	ldw	r3,76(sp)
  83c12c:	d8c00515 	stw	r3,20(sp)
  83c130:	d9400917 	ldw	r5,36(sp)
  83c134:	e009883a 	mov	r4,fp
  83c138:	083ddd40 	call	83ddd4 <_Bfree>
  83c13c:	d9000517 	ldw	r4,20(sp)
  83c140:	d9802317 	ldw	r6,140(sp)
  83c144:	d9c02517 	ldw	r7,148(sp)
  83c148:	b8000005 	stb	zero,0(r23)
  83c14c:	20800044 	addi	r2,r4,1
  83c150:	30800015 	stw	r2,0(r6)
  83c154:	3802aa26 	beq	r7,zero,83cc00 <_dtoa_r+0x1178>
  83c158:	3dc00015 	stw	r23,0(r7)
  83c15c:	d8800717 	ldw	r2,28(sp)
  83c160:	003e7906 	br	83bb48 <__alt_mem_epcs_flash_controller_0+0xff832b48>
  83c164:	00800434 	movhi	r2,16
  83c168:	10bfffc4 	addi	r2,r2,-1
  83c16c:	88a2703a 	and	r17,r17,r2
  83c170:	883e851e 	bne	r17,zero,83bb88 <__alt_mem_epcs_flash_controller_0+0xff832b88>
  83c174:	008021b4 	movhi	r2,134
  83c178:	10a6c104 	addi	r2,r2,-25852
  83c17c:	003e8406 	br	83bb90 <__alt_mem_epcs_flash_controller_0+0xff832b90>
  83c180:	10c00204 	addi	r3,r2,8
  83c184:	003e8706 	br	83bba4 <__alt_mem_epcs_flash_controller_0+0xff832ba4>
  83c188:	01400434 	movhi	r5,16
  83c18c:	297fffc4 	addi	r5,r5,-1
  83c190:	994a703a 	and	r5,r19,r5
  83c194:	9009883a 	mov	r4,r18
  83c198:	843f0044 	addi	r16,r16,-1023
  83c19c:	294ffc34 	orhi	r5,r5,16368
  83c1a0:	dd800217 	ldw	r22,8(sp)
  83c1a4:	d8001115 	stw	zero,68(sp)
  83c1a8:	003ea506 	br	83bc40 <__alt_mem_epcs_flash_controller_0+0xff832c40>
  83c1ac:	008021b4 	movhi	r2,134
  83c1b0:	10a60504 	addi	r2,r2,-26604
  83c1b4:	003e6406 	br	83bb48 <__alt_mem_epcs_flash_controller_0+0xff832b48>
  83c1b8:	e0001115 	stw	zero,68(fp)
  83c1bc:	000b883a 	mov	r5,zero
  83c1c0:	e009883a 	mov	r4,fp
  83c1c4:	083dd2c0 	call	83dd2c <_Balloc>
  83c1c8:	01bfffc4 	movi	r6,-1
  83c1cc:	01c00044 	movi	r7,1
  83c1d0:	d8800715 	stw	r2,28(sp)
  83c1d4:	d9800c15 	stw	r6,48(sp)
  83c1d8:	e0801015 	stw	r2,64(fp)
  83c1dc:	d8000315 	stw	zero,12(sp)
  83c1e0:	d9c00b15 	stw	r7,44(sp)
  83c1e4:	d9800615 	stw	r6,24(sp)
  83c1e8:	d8002215 	stw	zero,136(sp)
  83c1ec:	d8800117 	ldw	r2,4(sp)
  83c1f0:	10008916 	blt	r2,zero,83c418 <_dtoa_r+0x990>
  83c1f4:	d9000517 	ldw	r4,20(sp)
  83c1f8:	00c00384 	movi	r3,14
  83c1fc:	19008616 	blt	r3,r4,83c418 <_dtoa_r+0x990>
  83c200:	200490fa 	slli	r2,r4,3
  83c204:	00c021b4 	movhi	r3,134
  83c208:	d9802217 	ldw	r6,136(sp)
  83c20c:	18e6df04 	addi	r3,r3,-25732
  83c210:	1885883a 	add	r2,r3,r2
  83c214:	14000017 	ldw	r16,0(r2)
  83c218:	14400117 	ldw	r17,4(r2)
  83c21c:	30016316 	blt	r6,zero,83c7ac <_dtoa_r+0xd24>
  83c220:	800d883a 	mov	r6,r16
  83c224:	880f883a 	mov	r7,r17
  83c228:	9009883a 	mov	r4,r18
  83c22c:	980b883a 	mov	r5,r19
  83c230:	08481b80 	call	8481b8 <__divdf3>
  83c234:	180b883a 	mov	r5,r3
  83c238:	1009883a 	mov	r4,r2
  83c23c:	08496dc0 	call	8496dc <__fixdfsi>
  83c240:	1009883a 	mov	r4,r2
  83c244:	102b883a 	mov	r21,r2
  83c248:	084975c0 	call	84975c <__floatsidf>
  83c24c:	800d883a 	mov	r6,r16
  83c250:	880f883a 	mov	r7,r17
  83c254:	1009883a 	mov	r4,r2
  83c258:	180b883a 	mov	r5,r3
  83c25c:	08311800 	call	831180 <__muldf3>
  83c260:	100d883a 	mov	r6,r2
  83c264:	180f883a 	mov	r7,r3
  83c268:	9009883a 	mov	r4,r18
  83c26c:	980b883a 	mov	r5,r19
  83c270:	0848de00 	call	848de0 <__subdf3>
  83c274:	d9c00717 	ldw	r7,28(sp)
  83c278:	1009883a 	mov	r4,r2
  83c27c:	a8800c04 	addi	r2,r21,48
  83c280:	38800005 	stb	r2,0(r7)
  83c284:	3dc00044 	addi	r23,r7,1
  83c288:	d9c00617 	ldw	r7,24(sp)
  83c28c:	01800044 	movi	r6,1
  83c290:	180b883a 	mov	r5,r3
  83c294:	2005883a 	mov	r2,r4
  83c298:	39803826 	beq	r7,r6,83c37c <_dtoa_r+0x8f4>
  83c29c:	000d883a 	mov	r6,zero
  83c2a0:	01d00934 	movhi	r7,16420
  83c2a4:	08311800 	call	831180 <__muldf3>
  83c2a8:	000d883a 	mov	r6,zero
  83c2ac:	000f883a 	mov	r7,zero
  83c2b0:	1009883a 	mov	r4,r2
  83c2b4:	180b883a 	mov	r5,r3
  83c2b8:	1025883a 	mov	r18,r2
  83c2bc:	1827883a 	mov	r19,r3
  83c2c0:	0848b880 	call	848b88 <__eqdf2>
  83c2c4:	103f9a26 	beq	r2,zero,83c130 <__alt_mem_epcs_flash_controller_0+0xff833130>
  83c2c8:	d9c00617 	ldw	r7,24(sp)
  83c2cc:	d8c00717 	ldw	r3,28(sp)
  83c2d0:	b829883a 	mov	r20,r23
  83c2d4:	38bfffc4 	addi	r2,r7,-1
  83c2d8:	18ad883a 	add	r22,r3,r2
  83c2dc:	00000a06 	br	83c308 <_dtoa_r+0x880>
  83c2e0:	08311800 	call	831180 <__muldf3>
  83c2e4:	000d883a 	mov	r6,zero
  83c2e8:	000f883a 	mov	r7,zero
  83c2ec:	1009883a 	mov	r4,r2
  83c2f0:	180b883a 	mov	r5,r3
  83c2f4:	1025883a 	mov	r18,r2
  83c2f8:	1827883a 	mov	r19,r3
  83c2fc:	b829883a 	mov	r20,r23
  83c300:	0848b880 	call	848b88 <__eqdf2>
  83c304:	103f8a26 	beq	r2,zero,83c130 <__alt_mem_epcs_flash_controller_0+0xff833130>
  83c308:	800d883a 	mov	r6,r16
  83c30c:	880f883a 	mov	r7,r17
  83c310:	9009883a 	mov	r4,r18
  83c314:	980b883a 	mov	r5,r19
  83c318:	08481b80 	call	8481b8 <__divdf3>
  83c31c:	180b883a 	mov	r5,r3
  83c320:	1009883a 	mov	r4,r2
  83c324:	08496dc0 	call	8496dc <__fixdfsi>
  83c328:	1009883a 	mov	r4,r2
  83c32c:	102b883a 	mov	r21,r2
  83c330:	084975c0 	call	84975c <__floatsidf>
  83c334:	800d883a 	mov	r6,r16
  83c338:	880f883a 	mov	r7,r17
  83c33c:	1009883a 	mov	r4,r2
  83c340:	180b883a 	mov	r5,r3
  83c344:	08311800 	call	831180 <__muldf3>
  83c348:	100d883a 	mov	r6,r2
  83c34c:	180f883a 	mov	r7,r3
  83c350:	9009883a 	mov	r4,r18
  83c354:	980b883a 	mov	r5,r19
  83c358:	0848de00 	call	848de0 <__subdf3>
  83c35c:	aa000c04 	addi	r8,r21,48
  83c360:	a2000005 	stb	r8,0(r20)
  83c364:	000d883a 	mov	r6,zero
  83c368:	01d00934 	movhi	r7,16420
  83c36c:	1009883a 	mov	r4,r2
  83c370:	180b883a 	mov	r5,r3
  83c374:	a5c00044 	addi	r23,r20,1
  83c378:	b53fd91e 	bne	r22,r20,83c2e0 <__alt_mem_epcs_flash_controller_0+0xff8332e0>
  83c37c:	100d883a 	mov	r6,r2
  83c380:	180f883a 	mov	r7,r3
  83c384:	1009883a 	mov	r4,r2
  83c388:	180b883a 	mov	r5,r3
  83c38c:	084790c0 	call	84790c <__adddf3>
  83c390:	100d883a 	mov	r6,r2
  83c394:	180f883a 	mov	r7,r3
  83c398:	8009883a 	mov	r4,r16
  83c39c:	880b883a 	mov	r5,r17
  83c3a0:	1027883a 	mov	r19,r2
  83c3a4:	1825883a 	mov	r18,r3
  83c3a8:	0848cec0 	call	848cec <__ledf2>
  83c3ac:	10000816 	blt	r2,zero,83c3d0 <_dtoa_r+0x948>
  83c3b0:	980d883a 	mov	r6,r19
  83c3b4:	900f883a 	mov	r7,r18
  83c3b8:	8009883a 	mov	r4,r16
  83c3bc:	880b883a 	mov	r5,r17
  83c3c0:	0848b880 	call	848b88 <__eqdf2>
  83c3c4:	103f5a1e 	bne	r2,zero,83c130 <__alt_mem_epcs_flash_controller_0+0xff833130>
  83c3c8:	ad40004c 	andi	r21,r21,1
  83c3cc:	a83f5826 	beq	r21,zero,83c130 <__alt_mem_epcs_flash_controller_0+0xff833130>
  83c3d0:	bd3fffc3 	ldbu	r20,-1(r23)
  83c3d4:	b8bfffc4 	addi	r2,r23,-1
  83c3d8:	1007883a 	mov	r3,r2
  83c3dc:	01400e44 	movi	r5,57
  83c3e0:	d9800717 	ldw	r6,28(sp)
  83c3e4:	00000506 	br	83c3fc <_dtoa_r+0x974>
  83c3e8:	18ffffc4 	addi	r3,r3,-1
  83c3ec:	11824726 	beq	r2,r6,83cd0c <_dtoa_r+0x1284>
  83c3f0:	1d000003 	ldbu	r20,0(r3)
  83c3f4:	102f883a 	mov	r23,r2
  83c3f8:	10bfffc4 	addi	r2,r2,-1
  83c3fc:	a1003fcc 	andi	r4,r20,255
  83c400:	2100201c 	xori	r4,r4,128
  83c404:	213fe004 	addi	r4,r4,-128
  83c408:	217ff726 	beq	r4,r5,83c3e8 <__alt_mem_epcs_flash_controller_0+0xff8333e8>
  83c40c:	a2000044 	addi	r8,r20,1
  83c410:	12000005 	stb	r8,0(r2)
  83c414:	003f4606 	br	83c130 <__alt_mem_epcs_flash_controller_0+0xff833130>
  83c418:	d9000b17 	ldw	r4,44(sp)
  83c41c:	2000c826 	beq	r4,zero,83c740 <_dtoa_r+0xcb8>
  83c420:	d9800317 	ldw	r6,12(sp)
  83c424:	00c00044 	movi	r3,1
  83c428:	1980f90e 	bge	r3,r6,83c810 <_dtoa_r+0xd88>
  83c42c:	d8800617 	ldw	r2,24(sp)
  83c430:	d8c00a17 	ldw	r3,40(sp)
  83c434:	157fffc4 	addi	r21,r2,-1
  83c438:	1d41f316 	blt	r3,r21,83cc08 <_dtoa_r+0x1180>
  83c43c:	1d6bc83a 	sub	r21,r3,r21
  83c440:	d9c00617 	ldw	r7,24(sp)
  83c444:	3802aa16 	blt	r7,zero,83cef0 <_dtoa_r+0x1468>
  83c448:	dd000817 	ldw	r20,32(sp)
  83c44c:	d8800617 	ldw	r2,24(sp)
  83c450:	d8c00817 	ldw	r3,32(sp)
  83c454:	01400044 	movi	r5,1
  83c458:	e009883a 	mov	r4,fp
  83c45c:	1887883a 	add	r3,r3,r2
  83c460:	d8c00815 	stw	r3,32(sp)
  83c464:	b0ad883a 	add	r22,r22,r2
  83c468:	083e1600 	call	83e160 <__i2b>
  83c46c:	1023883a 	mov	r17,r2
  83c470:	a0000826 	beq	r20,zero,83c494 <_dtoa_r+0xa0c>
  83c474:	0580070e 	bge	zero,r22,83c494 <_dtoa_r+0xa0c>
  83c478:	a005883a 	mov	r2,r20
  83c47c:	b500b916 	blt	r22,r20,83c764 <_dtoa_r+0xcdc>
  83c480:	d9000817 	ldw	r4,32(sp)
  83c484:	a0a9c83a 	sub	r20,r20,r2
  83c488:	b0adc83a 	sub	r22,r22,r2
  83c48c:	2089c83a 	sub	r4,r4,r2
  83c490:	d9000815 	stw	r4,32(sp)
  83c494:	d9800a17 	ldw	r6,40(sp)
  83c498:	0181810e 	bge	zero,r6,83caa0 <_dtoa_r+0x1018>
  83c49c:	d9c00b17 	ldw	r7,44(sp)
  83c4a0:	3800b326 	beq	r7,zero,83c770 <_dtoa_r+0xce8>
  83c4a4:	a800b226 	beq	r21,zero,83c770 <_dtoa_r+0xce8>
  83c4a8:	880b883a 	mov	r5,r17
  83c4ac:	a80d883a 	mov	r6,r21
  83c4b0:	e009883a 	mov	r4,fp
  83c4b4:	083e4280 	call	83e428 <__pow5mult>
  83c4b8:	d9800917 	ldw	r6,36(sp)
  83c4bc:	100b883a 	mov	r5,r2
  83c4c0:	e009883a 	mov	r4,fp
  83c4c4:	1023883a 	mov	r17,r2
  83c4c8:	083e19c0 	call	83e19c <__multiply>
  83c4cc:	1021883a 	mov	r16,r2
  83c4d0:	d8800a17 	ldw	r2,40(sp)
  83c4d4:	d9400917 	ldw	r5,36(sp)
  83c4d8:	e009883a 	mov	r4,fp
  83c4dc:	1545c83a 	sub	r2,r2,r21
  83c4e0:	d8800a15 	stw	r2,40(sp)
  83c4e4:	083ddd40 	call	83ddd4 <_Bfree>
  83c4e8:	d8c00a17 	ldw	r3,40(sp)
  83c4ec:	18009f1e 	bne	r3,zero,83c76c <_dtoa_r+0xce4>
  83c4f0:	05c00044 	movi	r23,1
  83c4f4:	e009883a 	mov	r4,fp
  83c4f8:	b80b883a 	mov	r5,r23
  83c4fc:	083e1600 	call	83e160 <__i2b>
  83c500:	d9000d17 	ldw	r4,52(sp)
  83c504:	102b883a 	mov	r21,r2
  83c508:	2000ce26 	beq	r4,zero,83c844 <_dtoa_r+0xdbc>
  83c50c:	200d883a 	mov	r6,r4
  83c510:	100b883a 	mov	r5,r2
  83c514:	e009883a 	mov	r4,fp
  83c518:	083e4280 	call	83e428 <__pow5mult>
  83c51c:	d9800317 	ldw	r6,12(sp)
  83c520:	102b883a 	mov	r21,r2
  83c524:	b981810e 	bge	r23,r6,83cb2c <_dtoa_r+0x10a4>
  83c528:	0027883a 	mov	r19,zero
  83c52c:	a8800417 	ldw	r2,16(r21)
  83c530:	05c00804 	movi	r23,32
  83c534:	10800104 	addi	r2,r2,4
  83c538:	1085883a 	add	r2,r2,r2
  83c53c:	1085883a 	add	r2,r2,r2
  83c540:	a885883a 	add	r2,r21,r2
  83c544:	11000017 	ldw	r4,0(r2)
  83c548:	083e0480 	call	83e048 <__hi0bits>
  83c54c:	b885c83a 	sub	r2,r23,r2
  83c550:	1585883a 	add	r2,r2,r22
  83c554:	108007cc 	andi	r2,r2,31
  83c558:	1000b326 	beq	r2,zero,83c828 <_dtoa_r+0xda0>
  83c55c:	00c00804 	movi	r3,32
  83c560:	1887c83a 	sub	r3,r3,r2
  83c564:	01000104 	movi	r4,4
  83c568:	20c2cd0e 	bge	r4,r3,83d0a0 <_dtoa_r+0x1618>
  83c56c:	00c00704 	movi	r3,28
  83c570:	1885c83a 	sub	r2,r3,r2
  83c574:	d8c00817 	ldw	r3,32(sp)
  83c578:	a0a9883a 	add	r20,r20,r2
  83c57c:	b0ad883a 	add	r22,r22,r2
  83c580:	1887883a 	add	r3,r3,r2
  83c584:	d8c00815 	stw	r3,32(sp)
  83c588:	d9800817 	ldw	r6,32(sp)
  83c58c:	0180040e 	bge	zero,r6,83c5a0 <_dtoa_r+0xb18>
  83c590:	800b883a 	mov	r5,r16
  83c594:	e009883a 	mov	r4,fp
  83c598:	083e5680 	call	83e568 <__lshift>
  83c59c:	1021883a 	mov	r16,r2
  83c5a0:	0580050e 	bge	zero,r22,83c5b8 <_dtoa_r+0xb30>
  83c5a4:	a80b883a 	mov	r5,r21
  83c5a8:	b00d883a 	mov	r6,r22
  83c5ac:	e009883a 	mov	r4,fp
  83c5b0:	083e5680 	call	83e568 <__lshift>
  83c5b4:	102b883a 	mov	r21,r2
  83c5b8:	d9c00e17 	ldw	r7,56(sp)
  83c5bc:	3801211e 	bne	r7,zero,83ca44 <_dtoa_r+0xfbc>
  83c5c0:	d9800617 	ldw	r6,24(sp)
  83c5c4:	0181380e 	bge	zero,r6,83caa8 <_dtoa_r+0x1020>
  83c5c8:	d8c00b17 	ldw	r3,44(sp)
  83c5cc:	1800ab1e 	bne	r3,zero,83c87c <_dtoa_r+0xdf4>
  83c5d0:	dc800717 	ldw	r18,28(sp)
  83c5d4:	dcc00617 	ldw	r19,24(sp)
  83c5d8:	9029883a 	mov	r20,r18
  83c5dc:	00000206 	br	83c5e8 <_dtoa_r+0xb60>
  83c5e0:	083ddfc0 	call	83ddfc <__multadd>
  83c5e4:	1021883a 	mov	r16,r2
  83c5e8:	a80b883a 	mov	r5,r21
  83c5ec:	8009883a 	mov	r4,r16
  83c5f0:	083b8600 	call	83b860 <quorem>
  83c5f4:	10800c04 	addi	r2,r2,48
  83c5f8:	90800005 	stb	r2,0(r18)
  83c5fc:	94800044 	addi	r18,r18,1
  83c600:	9507c83a 	sub	r3,r18,r20
  83c604:	000f883a 	mov	r7,zero
  83c608:	01800284 	movi	r6,10
  83c60c:	800b883a 	mov	r5,r16
  83c610:	e009883a 	mov	r4,fp
  83c614:	1cfff216 	blt	r3,r19,83c5e0 <__alt_mem_epcs_flash_controller_0+0xff8335e0>
  83c618:	1011883a 	mov	r8,r2
  83c61c:	d8800617 	ldw	r2,24(sp)
  83c620:	0082370e 	bge	zero,r2,83cf00 <_dtoa_r+0x1478>
  83c624:	d9000717 	ldw	r4,28(sp)
  83c628:	0025883a 	mov	r18,zero
  83c62c:	20af883a 	add	r23,r4,r2
  83c630:	01800044 	movi	r6,1
  83c634:	800b883a 	mov	r5,r16
  83c638:	e009883a 	mov	r4,fp
  83c63c:	da001715 	stw	r8,92(sp)
  83c640:	083e5680 	call	83e568 <__lshift>
  83c644:	a80b883a 	mov	r5,r21
  83c648:	1009883a 	mov	r4,r2
  83c64c:	d8800915 	stw	r2,36(sp)
  83c650:	083e6b00 	call	83e6b0 <__mcmp>
  83c654:	da001717 	ldw	r8,92(sp)
  83c658:	0081800e 	bge	zero,r2,83cc5c <_dtoa_r+0x11d4>
  83c65c:	b93fffc3 	ldbu	r4,-1(r23)
  83c660:	b8bfffc4 	addi	r2,r23,-1
  83c664:	1007883a 	mov	r3,r2
  83c668:	01800e44 	movi	r6,57
  83c66c:	d9c00717 	ldw	r7,28(sp)
  83c670:	00000506 	br	83c688 <_dtoa_r+0xc00>
  83c674:	18ffffc4 	addi	r3,r3,-1
  83c678:	11c12326 	beq	r2,r7,83cb08 <_dtoa_r+0x1080>
  83c67c:	19000003 	ldbu	r4,0(r3)
  83c680:	102f883a 	mov	r23,r2
  83c684:	10bfffc4 	addi	r2,r2,-1
  83c688:	21403fcc 	andi	r5,r4,255
  83c68c:	2940201c 	xori	r5,r5,128
  83c690:	297fe004 	addi	r5,r5,-128
  83c694:	29bff726 	beq	r5,r6,83c674 <__alt_mem_epcs_flash_controller_0+0xff833674>
  83c698:	21000044 	addi	r4,r4,1
  83c69c:	11000005 	stb	r4,0(r2)
  83c6a0:	a80b883a 	mov	r5,r21
  83c6a4:	e009883a 	mov	r4,fp
  83c6a8:	083ddd40 	call	83ddd4 <_Bfree>
  83c6ac:	883ea026 	beq	r17,zero,83c130 <__alt_mem_epcs_flash_controller_0+0xff833130>
  83c6b0:	90000426 	beq	r18,zero,83c6c4 <_dtoa_r+0xc3c>
  83c6b4:	94400326 	beq	r18,r17,83c6c4 <_dtoa_r+0xc3c>
  83c6b8:	900b883a 	mov	r5,r18
  83c6bc:	e009883a 	mov	r4,fp
  83c6c0:	083ddd40 	call	83ddd4 <_Bfree>
  83c6c4:	880b883a 	mov	r5,r17
  83c6c8:	e009883a 	mov	r4,fp
  83c6cc:	083ddd40 	call	83ddd4 <_Bfree>
  83c6d0:	003e9706 	br	83c130 <__alt_mem_epcs_flash_controller_0+0xff833130>
  83c6d4:	01800044 	movi	r6,1
  83c6d8:	d9800e15 	stw	r6,56(sp)
  83c6dc:	003d9606 	br	83bd38 <__alt_mem_epcs_flash_controller_0+0xff832d38>
  83c6e0:	d8800817 	ldw	r2,32(sp)
  83c6e4:	d8c00517 	ldw	r3,20(sp)
  83c6e8:	d8000d15 	stw	zero,52(sp)
  83c6ec:	10c5c83a 	sub	r2,r2,r3
  83c6f0:	00c9c83a 	sub	r4,zero,r3
  83c6f4:	d8800815 	stw	r2,32(sp)
  83c6f8:	d9000a15 	stw	r4,40(sp)
  83c6fc:	003d9706 	br	83bd5c <__alt_mem_epcs_flash_controller_0+0xff832d5c>
  83c700:	05adc83a 	sub	r22,zero,r22
  83c704:	dd800815 	stw	r22,32(sp)
  83c708:	002d883a 	mov	r22,zero
  83c70c:	003d8e06 	br	83bd48 <__alt_mem_epcs_flash_controller_0+0xff832d48>
  83c710:	d9000517 	ldw	r4,20(sp)
  83c714:	084975c0 	call	84975c <__floatsidf>
  83c718:	100d883a 	mov	r6,r2
  83c71c:	180f883a 	mov	r7,r3
  83c720:	a009883a 	mov	r4,r20
  83c724:	880b883a 	mov	r5,r17
  83c728:	0848b880 	call	848b88 <__eqdf2>
  83c72c:	103d7126 	beq	r2,zero,83bcf4 <__alt_mem_epcs_flash_controller_0+0xff832cf4>
  83c730:	d9c00517 	ldw	r7,20(sp)
  83c734:	39ffffc4 	addi	r7,r7,-1
  83c738:	d9c00515 	stw	r7,20(sp)
  83c73c:	003d6d06 	br	83bcf4 <__alt_mem_epcs_flash_controller_0+0xff832cf4>
  83c740:	dd400a17 	ldw	r21,40(sp)
  83c744:	dd000817 	ldw	r20,32(sp)
  83c748:	0023883a 	mov	r17,zero
  83c74c:	003f4806 	br	83c470 <__alt_mem_epcs_flash_controller_0+0xff833470>
  83c750:	10e3c83a 	sub	r17,r2,r3
  83c754:	9448983a 	sll	r4,r18,r17
  83c758:	003d3206 	br	83bc24 <__alt_mem_epcs_flash_controller_0+0xff832c24>
  83c75c:	d8000e15 	stw	zero,56(sp)
  83c760:	003d7506 	br	83bd38 <__alt_mem_epcs_flash_controller_0+0xff832d38>
  83c764:	b005883a 	mov	r2,r22
  83c768:	003f4506 	br	83c480 <__alt_mem_epcs_flash_controller_0+0xff833480>
  83c76c:	dc000915 	stw	r16,36(sp)
  83c770:	d9800a17 	ldw	r6,40(sp)
  83c774:	d9400917 	ldw	r5,36(sp)
  83c778:	e009883a 	mov	r4,fp
  83c77c:	083e4280 	call	83e428 <__pow5mult>
  83c780:	1021883a 	mov	r16,r2
  83c784:	003f5a06 	br	83c4f0 <__alt_mem_epcs_flash_controller_0+0xff8334f0>
  83c788:	01c00044 	movi	r7,1
  83c78c:	d9c00b15 	stw	r7,44(sp)
  83c790:	d8802217 	ldw	r2,136(sp)
  83c794:	0081280e 	bge	zero,r2,83cc38 <_dtoa_r+0x11b0>
  83c798:	100d883a 	mov	r6,r2
  83c79c:	1021883a 	mov	r16,r2
  83c7a0:	d8800c15 	stw	r2,48(sp)
  83c7a4:	d8800615 	stw	r2,24(sp)
  83c7a8:	003d8806 	br	83bdcc <__alt_mem_epcs_flash_controller_0+0xff832dcc>
  83c7ac:	d8800617 	ldw	r2,24(sp)
  83c7b0:	00be9b16 	blt	zero,r2,83c220 <__alt_mem_epcs_flash_controller_0+0xff833220>
  83c7b4:	10010f1e 	bne	r2,zero,83cbf4 <_dtoa_r+0x116c>
  83c7b8:	880b883a 	mov	r5,r17
  83c7bc:	000d883a 	mov	r6,zero
  83c7c0:	01d00534 	movhi	r7,16404
  83c7c4:	8009883a 	mov	r4,r16
  83c7c8:	08311800 	call	831180 <__muldf3>
  83c7cc:	900d883a 	mov	r6,r18
  83c7d0:	980f883a 	mov	r7,r19
  83c7d4:	1009883a 	mov	r4,r2
  83c7d8:	180b883a 	mov	r5,r3
  83c7dc:	0848c100 	call	848c10 <__gedf2>
  83c7e0:	002b883a 	mov	r21,zero
  83c7e4:	0023883a 	mov	r17,zero
  83c7e8:	1000bf16 	blt	r2,zero,83cae8 <_dtoa_r+0x1060>
  83c7ec:	d9802217 	ldw	r6,136(sp)
  83c7f0:	ddc00717 	ldw	r23,28(sp)
  83c7f4:	018c303a 	nor	r6,zero,r6
  83c7f8:	d9800515 	stw	r6,20(sp)
  83c7fc:	a80b883a 	mov	r5,r21
  83c800:	e009883a 	mov	r4,fp
  83c804:	083ddd40 	call	83ddd4 <_Bfree>
  83c808:	883e4926 	beq	r17,zero,83c130 <__alt_mem_epcs_flash_controller_0+0xff833130>
  83c80c:	003fad06 	br	83c6c4 <__alt_mem_epcs_flash_controller_0+0xff8336c4>
  83c810:	d9c01117 	ldw	r7,68(sp)
  83c814:	3801bc26 	beq	r7,zero,83cf08 <_dtoa_r+0x1480>
  83c818:	10810cc4 	addi	r2,r2,1075
  83c81c:	dd400a17 	ldw	r21,40(sp)
  83c820:	dd000817 	ldw	r20,32(sp)
  83c824:	003f0a06 	br	83c450 <__alt_mem_epcs_flash_controller_0+0xff833450>
  83c828:	00800704 	movi	r2,28
  83c82c:	d9000817 	ldw	r4,32(sp)
  83c830:	a0a9883a 	add	r20,r20,r2
  83c834:	b0ad883a 	add	r22,r22,r2
  83c838:	2089883a 	add	r4,r4,r2
  83c83c:	d9000815 	stw	r4,32(sp)
  83c840:	003f5106 	br	83c588 <__alt_mem_epcs_flash_controller_0+0xff833588>
  83c844:	d8c00317 	ldw	r3,12(sp)
  83c848:	b8c1fc0e 	bge	r23,r3,83d03c <_dtoa_r+0x15b4>
  83c84c:	0027883a 	mov	r19,zero
  83c850:	b805883a 	mov	r2,r23
  83c854:	003f3e06 	br	83c550 <__alt_mem_epcs_flash_controller_0+0xff833550>
  83c858:	880b883a 	mov	r5,r17
  83c85c:	e009883a 	mov	r4,fp
  83c860:	000f883a 	mov	r7,zero
  83c864:	01800284 	movi	r6,10
  83c868:	083ddfc0 	call	83ddfc <__multadd>
  83c86c:	d9000c17 	ldw	r4,48(sp)
  83c870:	1023883a 	mov	r17,r2
  83c874:	0102040e 	bge	zero,r4,83d088 <_dtoa_r+0x1600>
  83c878:	d9000615 	stw	r4,24(sp)
  83c87c:	0500050e 	bge	zero,r20,83c894 <_dtoa_r+0xe0c>
  83c880:	880b883a 	mov	r5,r17
  83c884:	a00d883a 	mov	r6,r20
  83c888:	e009883a 	mov	r4,fp
  83c88c:	083e5680 	call	83e568 <__lshift>
  83c890:	1023883a 	mov	r17,r2
  83c894:	9801241e 	bne	r19,zero,83cd28 <_dtoa_r+0x12a0>
  83c898:	8829883a 	mov	r20,r17
  83c89c:	d9000617 	ldw	r4,24(sp)
  83c8a0:	dcc00717 	ldw	r19,28(sp)
  83c8a4:	9480004c 	andi	r18,r18,1
  83c8a8:	20bfffc4 	addi	r2,r4,-1
  83c8ac:	9885883a 	add	r2,r19,r2
  83c8b0:	d8800415 	stw	r2,16(sp)
  83c8b4:	dc800615 	stw	r18,24(sp)
  83c8b8:	a80b883a 	mov	r5,r21
  83c8bc:	8009883a 	mov	r4,r16
  83c8c0:	083b8600 	call	83b860 <quorem>
  83c8c4:	880b883a 	mov	r5,r17
  83c8c8:	8009883a 	mov	r4,r16
  83c8cc:	102f883a 	mov	r23,r2
  83c8d0:	083e6b00 	call	83e6b0 <__mcmp>
  83c8d4:	a80b883a 	mov	r5,r21
  83c8d8:	a00d883a 	mov	r6,r20
  83c8dc:	e009883a 	mov	r4,fp
  83c8e0:	102d883a 	mov	r22,r2
  83c8e4:	083e7100 	call	83e710 <__mdiff>
  83c8e8:	1007883a 	mov	r3,r2
  83c8ec:	10800317 	ldw	r2,12(r2)
  83c8f0:	bc800c04 	addi	r18,r23,48
  83c8f4:	180b883a 	mov	r5,r3
  83c8f8:	10004e1e 	bne	r2,zero,83ca34 <_dtoa_r+0xfac>
  83c8fc:	8009883a 	mov	r4,r16
  83c900:	d8c01615 	stw	r3,88(sp)
  83c904:	083e6b00 	call	83e6b0 <__mcmp>
  83c908:	d8c01617 	ldw	r3,88(sp)
  83c90c:	e009883a 	mov	r4,fp
  83c910:	d8801615 	stw	r2,88(sp)
  83c914:	180b883a 	mov	r5,r3
  83c918:	083ddd40 	call	83ddd4 <_Bfree>
  83c91c:	d8801617 	ldw	r2,88(sp)
  83c920:	1000041e 	bne	r2,zero,83c934 <_dtoa_r+0xeac>
  83c924:	d9800317 	ldw	r6,12(sp)
  83c928:	3000021e 	bne	r6,zero,83c934 <_dtoa_r+0xeac>
  83c92c:	d8c00617 	ldw	r3,24(sp)
  83c930:	18003726 	beq	r3,zero,83ca10 <_dtoa_r+0xf88>
  83c934:	b0002016 	blt	r22,zero,83c9b8 <_dtoa_r+0xf30>
  83c938:	b000041e 	bne	r22,zero,83c94c <_dtoa_r+0xec4>
  83c93c:	d9000317 	ldw	r4,12(sp)
  83c940:	2000021e 	bne	r4,zero,83c94c <_dtoa_r+0xec4>
  83c944:	d8c00617 	ldw	r3,24(sp)
  83c948:	18001b26 	beq	r3,zero,83c9b8 <_dtoa_r+0xf30>
  83c94c:	00810716 	blt	zero,r2,83cd6c <_dtoa_r+0x12e4>
  83c950:	d8c00417 	ldw	r3,16(sp)
  83c954:	9d800044 	addi	r22,r19,1
  83c958:	9c800005 	stb	r18,0(r19)
  83c95c:	b02f883a 	mov	r23,r22
  83c960:	98c10626 	beq	r19,r3,83cd7c <_dtoa_r+0x12f4>
  83c964:	800b883a 	mov	r5,r16
  83c968:	000f883a 	mov	r7,zero
  83c96c:	01800284 	movi	r6,10
  83c970:	e009883a 	mov	r4,fp
  83c974:	083ddfc0 	call	83ddfc <__multadd>
  83c978:	1021883a 	mov	r16,r2
  83c97c:	000f883a 	mov	r7,zero
  83c980:	01800284 	movi	r6,10
  83c984:	880b883a 	mov	r5,r17
  83c988:	e009883a 	mov	r4,fp
  83c98c:	8d002526 	beq	r17,r20,83ca24 <_dtoa_r+0xf9c>
  83c990:	083ddfc0 	call	83ddfc <__multadd>
  83c994:	a00b883a 	mov	r5,r20
  83c998:	000f883a 	mov	r7,zero
  83c99c:	01800284 	movi	r6,10
  83c9a0:	e009883a 	mov	r4,fp
  83c9a4:	1023883a 	mov	r17,r2
  83c9a8:	083ddfc0 	call	83ddfc <__multadd>
  83c9ac:	1029883a 	mov	r20,r2
  83c9b0:	b027883a 	mov	r19,r22
  83c9b4:	003fc006 	br	83c8b8 <__alt_mem_epcs_flash_controller_0+0xff8338b8>
  83c9b8:	9011883a 	mov	r8,r18
  83c9bc:	00800e0e 	bge	zero,r2,83c9f8 <_dtoa_r+0xf70>
  83c9c0:	800b883a 	mov	r5,r16
  83c9c4:	01800044 	movi	r6,1
  83c9c8:	e009883a 	mov	r4,fp
  83c9cc:	da001715 	stw	r8,92(sp)
  83c9d0:	083e5680 	call	83e568 <__lshift>
  83c9d4:	a80b883a 	mov	r5,r21
  83c9d8:	1009883a 	mov	r4,r2
  83c9dc:	1021883a 	mov	r16,r2
  83c9e0:	083e6b00 	call	83e6b0 <__mcmp>
  83c9e4:	da001717 	ldw	r8,92(sp)
  83c9e8:	0081960e 	bge	zero,r2,83d044 <_dtoa_r+0x15bc>
  83c9ec:	00800e44 	movi	r2,57
  83c9f0:	40817026 	beq	r8,r2,83cfb4 <_dtoa_r+0x152c>
  83c9f4:	ba000c44 	addi	r8,r23,49
  83c9f8:	8825883a 	mov	r18,r17
  83c9fc:	9dc00044 	addi	r23,r19,1
  83ca00:	9a000005 	stb	r8,0(r19)
  83ca04:	a023883a 	mov	r17,r20
  83ca08:	dc000915 	stw	r16,36(sp)
  83ca0c:	003f2406 	br	83c6a0 <__alt_mem_epcs_flash_controller_0+0xff8336a0>
  83ca10:	00800e44 	movi	r2,57
  83ca14:	9011883a 	mov	r8,r18
  83ca18:	90816626 	beq	r18,r2,83cfb4 <_dtoa_r+0x152c>
  83ca1c:	05bff516 	blt	zero,r22,83c9f4 <__alt_mem_epcs_flash_controller_0+0xff8339f4>
  83ca20:	003ff506 	br	83c9f8 <__alt_mem_epcs_flash_controller_0+0xff8339f8>
  83ca24:	083ddfc0 	call	83ddfc <__multadd>
  83ca28:	1023883a 	mov	r17,r2
  83ca2c:	1029883a 	mov	r20,r2
  83ca30:	003fdf06 	br	83c9b0 <__alt_mem_epcs_flash_controller_0+0xff8339b0>
  83ca34:	e009883a 	mov	r4,fp
  83ca38:	083ddd40 	call	83ddd4 <_Bfree>
  83ca3c:	00800044 	movi	r2,1
  83ca40:	003fbc06 	br	83c934 <__alt_mem_epcs_flash_controller_0+0xff833934>
  83ca44:	a80b883a 	mov	r5,r21
  83ca48:	8009883a 	mov	r4,r16
  83ca4c:	083e6b00 	call	83e6b0 <__mcmp>
  83ca50:	103edb0e 	bge	r2,zero,83c5c0 <__alt_mem_epcs_flash_controller_0+0xff8335c0>
  83ca54:	800b883a 	mov	r5,r16
  83ca58:	000f883a 	mov	r7,zero
  83ca5c:	01800284 	movi	r6,10
  83ca60:	e009883a 	mov	r4,fp
  83ca64:	083ddfc0 	call	83ddfc <__multadd>
  83ca68:	1021883a 	mov	r16,r2
  83ca6c:	d8800517 	ldw	r2,20(sp)
  83ca70:	d8c00b17 	ldw	r3,44(sp)
  83ca74:	10bfffc4 	addi	r2,r2,-1
  83ca78:	d8800515 	stw	r2,20(sp)
  83ca7c:	183f761e 	bne	r3,zero,83c858 <__alt_mem_epcs_flash_controller_0+0xff833858>
  83ca80:	d9000c17 	ldw	r4,48(sp)
  83ca84:	0101730e 	bge	zero,r4,83d054 <_dtoa_r+0x15cc>
  83ca88:	d9000615 	stw	r4,24(sp)
  83ca8c:	003ed006 	br	83c5d0 <__alt_mem_epcs_flash_controller_0+0xff8335d0>
  83ca90:	00800084 	movi	r2,2
  83ca94:	3081861e 	bne	r6,r2,83d0b0 <_dtoa_r+0x1628>
  83ca98:	d8000b15 	stw	zero,44(sp)
  83ca9c:	003f3c06 	br	83c790 <__alt_mem_epcs_flash_controller_0+0xff833790>
  83caa0:	dc000917 	ldw	r16,36(sp)
  83caa4:	003e9206 	br	83c4f0 <__alt_mem_epcs_flash_controller_0+0xff8334f0>
  83caa8:	d9c00317 	ldw	r7,12(sp)
  83caac:	00800084 	movi	r2,2
  83cab0:	11fec50e 	bge	r2,r7,83c5c8 <__alt_mem_epcs_flash_controller_0+0xff8335c8>
  83cab4:	d9000617 	ldw	r4,24(sp)
  83cab8:	20013c1e 	bne	r4,zero,83cfac <_dtoa_r+0x1524>
  83cabc:	a80b883a 	mov	r5,r21
  83cac0:	000f883a 	mov	r7,zero
  83cac4:	01800144 	movi	r6,5
  83cac8:	e009883a 	mov	r4,fp
  83cacc:	083ddfc0 	call	83ddfc <__multadd>
  83cad0:	100b883a 	mov	r5,r2
  83cad4:	8009883a 	mov	r4,r16
  83cad8:	102b883a 	mov	r21,r2
  83cadc:	083e6b00 	call	83e6b0 <__mcmp>
  83cae0:	dc000915 	stw	r16,36(sp)
  83cae4:	00bf410e 	bge	zero,r2,83c7ec <__alt_mem_epcs_flash_controller_0+0xff8337ec>
  83cae8:	d9c00717 	ldw	r7,28(sp)
  83caec:	00800c44 	movi	r2,49
  83caf0:	38800005 	stb	r2,0(r7)
  83caf4:	d8800517 	ldw	r2,20(sp)
  83caf8:	3dc00044 	addi	r23,r7,1
  83cafc:	10800044 	addi	r2,r2,1
  83cb00:	d8800515 	stw	r2,20(sp)
  83cb04:	003f3d06 	br	83c7fc <__alt_mem_epcs_flash_controller_0+0xff8337fc>
  83cb08:	d9800517 	ldw	r6,20(sp)
  83cb0c:	d9c00717 	ldw	r7,28(sp)
  83cb10:	00800c44 	movi	r2,49
  83cb14:	31800044 	addi	r6,r6,1
  83cb18:	d9800515 	stw	r6,20(sp)
  83cb1c:	38800005 	stb	r2,0(r7)
  83cb20:	003edf06 	br	83c6a0 <__alt_mem_epcs_flash_controller_0+0xff8336a0>
  83cb24:	d8000b15 	stw	zero,44(sp)
  83cb28:	003c9f06 	br	83bda8 <__alt_mem_epcs_flash_controller_0+0xff832da8>
  83cb2c:	903e7e1e 	bne	r18,zero,83c528 <__alt_mem_epcs_flash_controller_0+0xff833528>
  83cb30:	00800434 	movhi	r2,16
  83cb34:	10bfffc4 	addi	r2,r2,-1
  83cb38:	9884703a 	and	r2,r19,r2
  83cb3c:	1000ea1e 	bne	r2,zero,83cee8 <_dtoa_r+0x1460>
  83cb40:	9cdffc2c 	andhi	r19,r19,32752
  83cb44:	9800e826 	beq	r19,zero,83cee8 <_dtoa_r+0x1460>
  83cb48:	d9c00817 	ldw	r7,32(sp)
  83cb4c:	b5800044 	addi	r22,r22,1
  83cb50:	04c00044 	movi	r19,1
  83cb54:	39c00044 	addi	r7,r7,1
  83cb58:	d9c00815 	stw	r7,32(sp)
  83cb5c:	d8800d17 	ldw	r2,52(sp)
  83cb60:	103e721e 	bne	r2,zero,83c52c <__alt_mem_epcs_flash_controller_0+0xff83352c>
  83cb64:	00800044 	movi	r2,1
  83cb68:	003e7906 	br	83c550 <__alt_mem_epcs_flash_controller_0+0xff833550>
  83cb6c:	8009883a 	mov	r4,r16
  83cb70:	084975c0 	call	84975c <__floatsidf>
  83cb74:	d9800f17 	ldw	r6,60(sp)
  83cb78:	d9c01017 	ldw	r7,64(sp)
  83cb7c:	1009883a 	mov	r4,r2
  83cb80:	180b883a 	mov	r5,r3
  83cb84:	08311800 	call	831180 <__muldf3>
  83cb88:	000d883a 	mov	r6,zero
  83cb8c:	01d00734 	movhi	r7,16412
  83cb90:	1009883a 	mov	r4,r2
  83cb94:	180b883a 	mov	r5,r3
  83cb98:	084790c0 	call	84790c <__adddf3>
  83cb9c:	047f3034 	movhi	r17,64704
  83cba0:	1021883a 	mov	r16,r2
  83cba4:	1c63883a 	add	r17,r3,r17
  83cba8:	d9000f17 	ldw	r4,60(sp)
  83cbac:	d9401017 	ldw	r5,64(sp)
  83cbb0:	000d883a 	mov	r6,zero
  83cbb4:	01d00534 	movhi	r7,16404
  83cbb8:	0848de00 	call	848de0 <__subdf3>
  83cbbc:	800d883a 	mov	r6,r16
  83cbc0:	880f883a 	mov	r7,r17
  83cbc4:	1009883a 	mov	r4,r2
  83cbc8:	180b883a 	mov	r5,r3
  83cbcc:	102b883a 	mov	r21,r2
  83cbd0:	1829883a 	mov	r20,r3
  83cbd4:	0848c100 	call	848c10 <__gedf2>
  83cbd8:	00806c16 	blt	zero,r2,83cd8c <_dtoa_r+0x1304>
  83cbdc:	89e0003c 	xorhi	r7,r17,32768
  83cbe0:	800d883a 	mov	r6,r16
  83cbe4:	a809883a 	mov	r4,r21
  83cbe8:	a00b883a 	mov	r5,r20
  83cbec:	0848cec0 	call	848cec <__ledf2>
  83cbf0:	103d7e0e 	bge	r2,zero,83c1ec <__alt_mem_epcs_flash_controller_0+0xff8331ec>
  83cbf4:	002b883a 	mov	r21,zero
  83cbf8:	0023883a 	mov	r17,zero
  83cbfc:	003efb06 	br	83c7ec <__alt_mem_epcs_flash_controller_0+0xff8337ec>
  83cc00:	d8800717 	ldw	r2,28(sp)
  83cc04:	003bd006 	br	83bb48 <__alt_mem_epcs_flash_controller_0+0xff832b48>
  83cc08:	d9000a17 	ldw	r4,40(sp)
  83cc0c:	d9800d17 	ldw	r6,52(sp)
  83cc10:	dd400a15 	stw	r21,40(sp)
  83cc14:	a905c83a 	sub	r2,r21,r4
  83cc18:	308d883a 	add	r6,r6,r2
  83cc1c:	d9800d15 	stw	r6,52(sp)
  83cc20:	002b883a 	mov	r21,zero
  83cc24:	003e0606 	br	83c440 <__alt_mem_epcs_flash_controller_0+0xff833440>
  83cc28:	9023883a 	mov	r17,r18
  83cc2c:	9829883a 	mov	r20,r19
  83cc30:	04000084 	movi	r16,2
  83cc34:	003c9206 	br	83be80 <__alt_mem_epcs_flash_controller_0+0xff832e80>
  83cc38:	04000044 	movi	r16,1
  83cc3c:	dc000c15 	stw	r16,48(sp)
  83cc40:	dc000615 	stw	r16,24(sp)
  83cc44:	dc002215 	stw	r16,136(sp)
  83cc48:	e0001115 	stw	zero,68(fp)
  83cc4c:	000b883a 	mov	r5,zero
  83cc50:	003c6906 	br	83bdf8 <__alt_mem_epcs_flash_controller_0+0xff832df8>
  83cc54:	3021883a 	mov	r16,r6
  83cc58:	003ffb06 	br	83cc48 <__alt_mem_epcs_flash_controller_0+0xff833c48>
  83cc5c:	1000021e 	bne	r2,zero,83cc68 <_dtoa_r+0x11e0>
  83cc60:	4200004c 	andi	r8,r8,1
  83cc64:	403e7d1e 	bne	r8,zero,83c65c <__alt_mem_epcs_flash_controller_0+0xff83365c>
  83cc68:	01000c04 	movi	r4,48
  83cc6c:	00000106 	br	83cc74 <_dtoa_r+0x11ec>
  83cc70:	102f883a 	mov	r23,r2
  83cc74:	b8bfffc4 	addi	r2,r23,-1
  83cc78:	10c00007 	ldb	r3,0(r2)
  83cc7c:	193ffc26 	beq	r3,r4,83cc70 <__alt_mem_epcs_flash_controller_0+0xff833c70>
  83cc80:	003e8706 	br	83c6a0 <__alt_mem_epcs_flash_controller_0+0xff8336a0>
  83cc84:	d8800517 	ldw	r2,20(sp)
  83cc88:	00a3c83a 	sub	r17,zero,r2
  83cc8c:	8800a426 	beq	r17,zero,83cf20 <_dtoa_r+0x1498>
  83cc90:	888003cc 	andi	r2,r17,15
  83cc94:	100490fa 	slli	r2,r2,3
  83cc98:	00c021b4 	movhi	r3,134
  83cc9c:	18e6df04 	addi	r3,r3,-25732
  83cca0:	1885883a 	add	r2,r3,r2
  83cca4:	11800017 	ldw	r6,0(r2)
  83cca8:	11c00117 	ldw	r7,4(r2)
  83ccac:	9009883a 	mov	r4,r18
  83ccb0:	980b883a 	mov	r5,r19
  83ccb4:	8823d13a 	srai	r17,r17,4
  83ccb8:	08311800 	call	831180 <__muldf3>
  83ccbc:	d8800f15 	stw	r2,60(sp)
  83ccc0:	d8c01015 	stw	r3,64(sp)
  83ccc4:	8800e826 	beq	r17,zero,83d068 <_dtoa_r+0x15e0>
  83ccc8:	050021b4 	movhi	r20,134
  83cccc:	a526d504 	addi	r20,r20,-25772
  83ccd0:	04000084 	movi	r16,2
  83ccd4:	8980004c 	andi	r6,r17,1
  83ccd8:	1009883a 	mov	r4,r2
  83ccdc:	8823d07a 	srai	r17,r17,1
  83cce0:	180b883a 	mov	r5,r3
  83cce4:	30000426 	beq	r6,zero,83ccf8 <_dtoa_r+0x1270>
  83cce8:	a1800017 	ldw	r6,0(r20)
  83ccec:	a1c00117 	ldw	r7,4(r20)
  83ccf0:	84000044 	addi	r16,r16,1
  83ccf4:	08311800 	call	831180 <__muldf3>
  83ccf8:	a5000204 	addi	r20,r20,8
  83ccfc:	883ff51e 	bne	r17,zero,83ccd4 <__alt_mem_epcs_flash_controller_0+0xff833cd4>
  83cd00:	d8800f15 	stw	r2,60(sp)
  83cd04:	d8c01015 	stw	r3,64(sp)
  83cd08:	003c7606 	br	83bee4 <__alt_mem_epcs_flash_controller_0+0xff832ee4>
  83cd0c:	00c00c04 	movi	r3,48
  83cd10:	10c00005 	stb	r3,0(r2)
  83cd14:	d8c00517 	ldw	r3,20(sp)
  83cd18:	bd3fffc3 	ldbu	r20,-1(r23)
  83cd1c:	18c00044 	addi	r3,r3,1
  83cd20:	d8c00515 	stw	r3,20(sp)
  83cd24:	003db906 	br	83c40c <__alt_mem_epcs_flash_controller_0+0xff83340c>
  83cd28:	89400117 	ldw	r5,4(r17)
  83cd2c:	e009883a 	mov	r4,fp
  83cd30:	083dd2c0 	call	83dd2c <_Balloc>
  83cd34:	89800417 	ldw	r6,16(r17)
  83cd38:	89400304 	addi	r5,r17,12
  83cd3c:	11000304 	addi	r4,r2,12
  83cd40:	31800084 	addi	r6,r6,2
  83cd44:	318d883a 	add	r6,r6,r6
  83cd48:	318d883a 	add	r6,r6,r6
  83cd4c:	1027883a 	mov	r19,r2
  83cd50:	0833c4c0 	call	833c4c <memcpy>
  83cd54:	01800044 	movi	r6,1
  83cd58:	980b883a 	mov	r5,r19
  83cd5c:	e009883a 	mov	r4,fp
  83cd60:	083e5680 	call	83e568 <__lshift>
  83cd64:	1029883a 	mov	r20,r2
  83cd68:	003ecc06 	br	83c89c <__alt_mem_epcs_flash_controller_0+0xff83389c>
  83cd6c:	00800e44 	movi	r2,57
  83cd70:	90809026 	beq	r18,r2,83cfb4 <_dtoa_r+0x152c>
  83cd74:	92000044 	addi	r8,r18,1
  83cd78:	003f1f06 	br	83c9f8 <__alt_mem_epcs_flash_controller_0+0xff8339f8>
  83cd7c:	9011883a 	mov	r8,r18
  83cd80:	8825883a 	mov	r18,r17
  83cd84:	a023883a 	mov	r17,r20
  83cd88:	003e2906 	br	83c630 <__alt_mem_epcs_flash_controller_0+0xff833630>
  83cd8c:	002b883a 	mov	r21,zero
  83cd90:	0023883a 	mov	r17,zero
  83cd94:	003f5406 	br	83cae8 <__alt_mem_epcs_flash_controller_0+0xff833ae8>
  83cd98:	61bfffc4 	addi	r6,r12,-1
  83cd9c:	300490fa 	slli	r2,r6,3
  83cda0:	00c021b4 	movhi	r3,134
  83cda4:	18e6df04 	addi	r3,r3,-25732
  83cda8:	1885883a 	add	r2,r3,r2
  83cdac:	11000017 	ldw	r4,0(r2)
  83cdb0:	11400117 	ldw	r5,4(r2)
  83cdb4:	d8800717 	ldw	r2,28(sp)
  83cdb8:	880f883a 	mov	r7,r17
  83cdbc:	d9801215 	stw	r6,72(sp)
  83cdc0:	800d883a 	mov	r6,r16
  83cdc4:	db001615 	stw	r12,88(sp)
  83cdc8:	15c00044 	addi	r23,r2,1
  83cdcc:	08311800 	call	831180 <__muldf3>
  83cdd0:	d9401017 	ldw	r5,64(sp)
  83cdd4:	d9000f17 	ldw	r4,60(sp)
  83cdd8:	d8c01515 	stw	r3,84(sp)
  83cddc:	d8801415 	stw	r2,80(sp)
  83cde0:	08496dc0 	call	8496dc <__fixdfsi>
  83cde4:	1009883a 	mov	r4,r2
  83cde8:	1021883a 	mov	r16,r2
  83cdec:	084975c0 	call	84975c <__floatsidf>
  83cdf0:	d9000f17 	ldw	r4,60(sp)
  83cdf4:	d9401017 	ldw	r5,64(sp)
  83cdf8:	100d883a 	mov	r6,r2
  83cdfc:	180f883a 	mov	r7,r3
  83ce00:	0848de00 	call	848de0 <__subdf3>
  83ce04:	1829883a 	mov	r20,r3
  83ce08:	d8c00717 	ldw	r3,28(sp)
  83ce0c:	84000c04 	addi	r16,r16,48
  83ce10:	1023883a 	mov	r17,r2
  83ce14:	1c000005 	stb	r16,0(r3)
  83ce18:	db001617 	ldw	r12,88(sp)
  83ce1c:	00800044 	movi	r2,1
  83ce20:	60802226 	beq	r12,r2,83ceac <_dtoa_r+0x1424>
  83ce24:	d9c00717 	ldw	r7,28(sp)
  83ce28:	8805883a 	mov	r2,r17
  83ce2c:	b82b883a 	mov	r21,r23
  83ce30:	3b19883a 	add	r12,r7,r12
  83ce34:	6023883a 	mov	r17,r12
  83ce38:	a007883a 	mov	r3,r20
  83ce3c:	dc800f15 	stw	r18,60(sp)
  83ce40:	000d883a 	mov	r6,zero
  83ce44:	01d00934 	movhi	r7,16420
  83ce48:	1009883a 	mov	r4,r2
  83ce4c:	180b883a 	mov	r5,r3
  83ce50:	08311800 	call	831180 <__muldf3>
  83ce54:	180b883a 	mov	r5,r3
  83ce58:	1009883a 	mov	r4,r2
  83ce5c:	1829883a 	mov	r20,r3
  83ce60:	1025883a 	mov	r18,r2
  83ce64:	08496dc0 	call	8496dc <__fixdfsi>
  83ce68:	1009883a 	mov	r4,r2
  83ce6c:	1021883a 	mov	r16,r2
  83ce70:	084975c0 	call	84975c <__floatsidf>
  83ce74:	100d883a 	mov	r6,r2
  83ce78:	180f883a 	mov	r7,r3
  83ce7c:	9009883a 	mov	r4,r18
  83ce80:	a00b883a 	mov	r5,r20
  83ce84:	84000c04 	addi	r16,r16,48
  83ce88:	0848de00 	call	848de0 <__subdf3>
  83ce8c:	ad400044 	addi	r21,r21,1
  83ce90:	ac3fffc5 	stb	r16,-1(r21)
  83ce94:	ac7fea1e 	bne	r21,r17,83ce40 <__alt_mem_epcs_flash_controller_0+0xff833e40>
  83ce98:	1023883a 	mov	r17,r2
  83ce9c:	d8801217 	ldw	r2,72(sp)
  83cea0:	dc800f17 	ldw	r18,60(sp)
  83cea4:	1829883a 	mov	r20,r3
  83cea8:	b8af883a 	add	r23,r23,r2
  83ceac:	d9001417 	ldw	r4,80(sp)
  83ceb0:	d9401517 	ldw	r5,84(sp)
  83ceb4:	000d883a 	mov	r6,zero
  83ceb8:	01cff834 	movhi	r7,16352
  83cebc:	084790c0 	call	84790c <__adddf3>
  83cec0:	880d883a 	mov	r6,r17
  83cec4:	a00f883a 	mov	r7,r20
  83cec8:	1009883a 	mov	r4,r2
  83cecc:	180b883a 	mov	r5,r3
  83ced0:	0848cec0 	call	848cec <__ledf2>
  83ced4:	10003e0e 	bge	r2,zero,83cfd0 <_dtoa_r+0x1548>
  83ced8:	d9001317 	ldw	r4,76(sp)
  83cedc:	bd3fffc3 	ldbu	r20,-1(r23)
  83cee0:	d9000515 	stw	r4,20(sp)
  83cee4:	003d3b06 	br	83c3d4 <__alt_mem_epcs_flash_controller_0+0xff8333d4>
  83cee8:	0027883a 	mov	r19,zero
  83ceec:	003f1b06 	br	83cb5c <__alt_mem_epcs_flash_controller_0+0xff833b5c>
  83cef0:	d8800817 	ldw	r2,32(sp)
  83cef4:	11e9c83a 	sub	r20,r2,r7
  83cef8:	0005883a 	mov	r2,zero
  83cefc:	003d5406 	br	83c450 <__alt_mem_epcs_flash_controller_0+0xff833450>
  83cf00:	00800044 	movi	r2,1
  83cf04:	003dc706 	br	83c624 <__alt_mem_epcs_flash_controller_0+0xff833624>
  83cf08:	d8c00217 	ldw	r3,8(sp)
  83cf0c:	00800d84 	movi	r2,54
  83cf10:	dd400a17 	ldw	r21,40(sp)
  83cf14:	10c5c83a 	sub	r2,r2,r3
  83cf18:	dd000817 	ldw	r20,32(sp)
  83cf1c:	003d4c06 	br	83c450 <__alt_mem_epcs_flash_controller_0+0xff833450>
  83cf20:	dc800f15 	stw	r18,60(sp)
  83cf24:	dcc01015 	stw	r19,64(sp)
  83cf28:	04000084 	movi	r16,2
  83cf2c:	003bed06 	br	83bee4 <__alt_mem_epcs_flash_controller_0+0xff832ee4>
  83cf30:	d9000617 	ldw	r4,24(sp)
  83cf34:	203f0d26 	beq	r4,zero,83cb6c <__alt_mem_epcs_flash_controller_0+0xff833b6c>
  83cf38:	d9800c17 	ldw	r6,48(sp)
  83cf3c:	01bcab0e 	bge	zero,r6,83c1ec <__alt_mem_epcs_flash_controller_0+0xff8331ec>
  83cf40:	d9401017 	ldw	r5,64(sp)
  83cf44:	d9000f17 	ldw	r4,60(sp)
  83cf48:	000d883a 	mov	r6,zero
  83cf4c:	01d00934 	movhi	r7,16420
  83cf50:	08311800 	call	831180 <__muldf3>
  83cf54:	81000044 	addi	r4,r16,1
  83cf58:	d8800f15 	stw	r2,60(sp)
  83cf5c:	d8c01015 	stw	r3,64(sp)
  83cf60:	084975c0 	call	84975c <__floatsidf>
  83cf64:	d9800f17 	ldw	r6,60(sp)
  83cf68:	d9c01017 	ldw	r7,64(sp)
  83cf6c:	1009883a 	mov	r4,r2
  83cf70:	180b883a 	mov	r5,r3
  83cf74:	08311800 	call	831180 <__muldf3>
  83cf78:	01d00734 	movhi	r7,16412
  83cf7c:	000d883a 	mov	r6,zero
  83cf80:	1009883a 	mov	r4,r2
  83cf84:	180b883a 	mov	r5,r3
  83cf88:	084790c0 	call	84790c <__adddf3>
  83cf8c:	d9c00517 	ldw	r7,20(sp)
  83cf90:	047f3034 	movhi	r17,64704
  83cf94:	1021883a 	mov	r16,r2
  83cf98:	39ffffc4 	addi	r7,r7,-1
  83cf9c:	d9c01315 	stw	r7,76(sp)
  83cfa0:	1c63883a 	add	r17,r3,r17
  83cfa4:	db000c17 	ldw	r12,48(sp)
  83cfa8:	003bea06 	br	83bf54 <__alt_mem_epcs_flash_controller_0+0xff832f54>
  83cfac:	dc000915 	stw	r16,36(sp)
  83cfb0:	003e0e06 	br	83c7ec <__alt_mem_epcs_flash_controller_0+0xff8337ec>
  83cfb4:	01000e44 	movi	r4,57
  83cfb8:	8825883a 	mov	r18,r17
  83cfbc:	9dc00044 	addi	r23,r19,1
  83cfc0:	99000005 	stb	r4,0(r19)
  83cfc4:	a023883a 	mov	r17,r20
  83cfc8:	dc000915 	stw	r16,36(sp)
  83cfcc:	003da406 	br	83c660 <__alt_mem_epcs_flash_controller_0+0xff833660>
  83cfd0:	d9801417 	ldw	r6,80(sp)
  83cfd4:	d9c01517 	ldw	r7,84(sp)
  83cfd8:	0009883a 	mov	r4,zero
  83cfdc:	014ff834 	movhi	r5,16352
  83cfe0:	0848de00 	call	848de0 <__subdf3>
  83cfe4:	880d883a 	mov	r6,r17
  83cfe8:	a00f883a 	mov	r7,r20
  83cfec:	1009883a 	mov	r4,r2
  83cff0:	180b883a 	mov	r5,r3
  83cff4:	0848c100 	call	848c10 <__gedf2>
  83cff8:	00bc7c0e 	bge	zero,r2,83c1ec <__alt_mem_epcs_flash_controller_0+0xff8331ec>
  83cffc:	01000c04 	movi	r4,48
  83d000:	00000106 	br	83d008 <_dtoa_r+0x1580>
  83d004:	102f883a 	mov	r23,r2
  83d008:	b8bfffc4 	addi	r2,r23,-1
  83d00c:	10c00007 	ldb	r3,0(r2)
  83d010:	193ffc26 	beq	r3,r4,83d004 <__alt_mem_epcs_flash_controller_0+0xff834004>
  83d014:	d9801317 	ldw	r6,76(sp)
  83d018:	d9800515 	stw	r6,20(sp)
  83d01c:	003c4406 	br	83c130 <__alt_mem_epcs_flash_controller_0+0xff833130>
  83d020:	d9801317 	ldw	r6,76(sp)
  83d024:	d9800515 	stw	r6,20(sp)
  83d028:	003cea06 	br	83c3d4 <__alt_mem_epcs_flash_controller_0+0xff8333d4>
  83d02c:	dd800f17 	ldw	r22,60(sp)
  83d030:	dcc01017 	ldw	r19,64(sp)
  83d034:	dc801217 	ldw	r18,72(sp)
  83d038:	003c6c06 	br	83c1ec <__alt_mem_epcs_flash_controller_0+0xff8331ec>
  83d03c:	903e031e 	bne	r18,zero,83c84c <__alt_mem_epcs_flash_controller_0+0xff83384c>
  83d040:	003ebb06 	br	83cb30 <__alt_mem_epcs_flash_controller_0+0xff833b30>
  83d044:	103e6c1e 	bne	r2,zero,83c9f8 <__alt_mem_epcs_flash_controller_0+0xff8339f8>
  83d048:	4080004c 	andi	r2,r8,1
  83d04c:	103e6a26 	beq	r2,zero,83c9f8 <__alt_mem_epcs_flash_controller_0+0xff8339f8>
  83d050:	003e6606 	br	83c9ec <__alt_mem_epcs_flash_controller_0+0xff8339ec>
  83d054:	d8c00317 	ldw	r3,12(sp)
  83d058:	00800084 	movi	r2,2
  83d05c:	10c02916 	blt	r2,r3,83d104 <_dtoa_r+0x167c>
  83d060:	d9000c17 	ldw	r4,48(sp)
  83d064:	003e8806 	br	83ca88 <__alt_mem_epcs_flash_controller_0+0xff833a88>
  83d068:	04000084 	movi	r16,2
  83d06c:	003b9d06 	br	83bee4 <__alt_mem_epcs_flash_controller_0+0xff832ee4>
  83d070:	d9001317 	ldw	r4,76(sp)
  83d074:	d9000515 	stw	r4,20(sp)
  83d078:	003cd606 	br	83c3d4 <__alt_mem_epcs_flash_controller_0+0xff8333d4>
  83d07c:	d8801317 	ldw	r2,76(sp)
  83d080:	d8800515 	stw	r2,20(sp)
  83d084:	003c2a06 	br	83c130 <__alt_mem_epcs_flash_controller_0+0xff833130>
  83d088:	d9800317 	ldw	r6,12(sp)
  83d08c:	00800084 	movi	r2,2
  83d090:	11801516 	blt	r2,r6,83d0e8 <_dtoa_r+0x1660>
  83d094:	d9c00c17 	ldw	r7,48(sp)
  83d098:	d9c00615 	stw	r7,24(sp)
  83d09c:	003df706 	br	83c87c <__alt_mem_epcs_flash_controller_0+0xff83387c>
  83d0a0:	193d3926 	beq	r3,r4,83c588 <__alt_mem_epcs_flash_controller_0+0xff833588>
  83d0a4:	00c00f04 	movi	r3,60
  83d0a8:	1885c83a 	sub	r2,r3,r2
  83d0ac:	003ddf06 	br	83c82c <__alt_mem_epcs_flash_controller_0+0xff83382c>
  83d0b0:	e009883a 	mov	r4,fp
  83d0b4:	e0001115 	stw	zero,68(fp)
  83d0b8:	000b883a 	mov	r5,zero
  83d0bc:	083dd2c0 	call	83dd2c <_Balloc>
  83d0c0:	d8800715 	stw	r2,28(sp)
  83d0c4:	d8c00717 	ldw	r3,28(sp)
  83d0c8:	00bfffc4 	movi	r2,-1
  83d0cc:	01000044 	movi	r4,1
  83d0d0:	d8800c15 	stw	r2,48(sp)
  83d0d4:	e0c01015 	stw	r3,64(fp)
  83d0d8:	d9000b15 	stw	r4,44(sp)
  83d0dc:	d8800615 	stw	r2,24(sp)
  83d0e0:	d8002215 	stw	zero,136(sp)
  83d0e4:	003c4106 	br	83c1ec <__alt_mem_epcs_flash_controller_0+0xff8331ec>
  83d0e8:	d8c00c17 	ldw	r3,48(sp)
  83d0ec:	d8c00615 	stw	r3,24(sp)
  83d0f0:	003e7006 	br	83cab4 <__alt_mem_epcs_flash_controller_0+0xff833ab4>
  83d0f4:	04400044 	movi	r17,1
  83d0f8:	003b2006 	br	83bd7c <__alt_mem_epcs_flash_controller_0+0xff832d7c>
  83d0fc:	000b883a 	mov	r5,zero
  83d100:	003b3d06 	br	83bdf8 <__alt_mem_epcs_flash_controller_0+0xff832df8>
  83d104:	d8800c17 	ldw	r2,48(sp)
  83d108:	d8800615 	stw	r2,24(sp)
  83d10c:	003e6906 	br	83cab4 <__alt_mem_epcs_flash_controller_0+0xff833ab4>

0083d110 <__sflags>:
  83d110:	28800007 	ldb	r2,0(r5)
  83d114:	00c01c84 	movi	r3,114
  83d118:	10c02426 	beq	r2,r3,83d1ac <__sflags+0x9c>
  83d11c:	00c01dc4 	movi	r3,119
  83d120:	10c01e26 	beq	r2,r3,83d19c <__sflags+0x8c>
  83d124:	00c01844 	movi	r3,97
  83d128:	10c00426 	beq	r2,r3,83d13c <__sflags+0x2c>
  83d12c:	00800584 	movi	r2,22
  83d130:	20800015 	stw	r2,0(r4)
  83d134:	0005883a 	mov	r2,zero
  83d138:	f800283a 	ret
  83d13c:	02c08204 	movi	r11,520
  83d140:	01000044 	movi	r4,1
  83d144:	00804204 	movi	r2,264
  83d148:	01c00ac4 	movi	r7,43
  83d14c:	02bff8c4 	movi	r10,-29
  83d150:	027fff04 	movi	r9,-4
  83d154:	02001e04 	movi	r8,120
  83d158:	29400044 	addi	r5,r5,1
  83d15c:	28c00007 	ldb	r3,0(r5)
  83d160:	18000626 	beq	r3,zero,83d17c <__sflags+0x6c>
  83d164:	19c00826 	beq	r3,r7,83d188 <__sflags+0x78>
  83d168:	1a3ffb1e 	bne	r3,r8,83d158 <__alt_mem_epcs_flash_controller_0+0xff834158>
  83d16c:	29400044 	addi	r5,r5,1
  83d170:	28c00007 	ldb	r3,0(r5)
  83d174:	21020014 	ori	r4,r4,2048
  83d178:	183ffa1e 	bne	r3,zero,83d164 <__alt_mem_epcs_flash_controller_0+0xff834164>
  83d17c:	22c8b03a 	or	r4,r4,r11
  83d180:	31000015 	stw	r4,0(r6)
  83d184:	f800283a 	ret
  83d188:	1284703a 	and	r2,r2,r10
  83d18c:	2248703a 	and	r4,r4,r9
  83d190:	10800414 	ori	r2,r2,16
  83d194:	21000094 	ori	r4,r4,2
  83d198:	003fef06 	br	83d158 <__alt_mem_epcs_flash_controller_0+0xff834158>
  83d19c:	02c18004 	movi	r11,1536
  83d1a0:	01000044 	movi	r4,1
  83d1a4:	00800204 	movi	r2,8
  83d1a8:	003fe706 	br	83d148 <__alt_mem_epcs_flash_controller_0+0xff834148>
  83d1ac:	0017883a 	mov	r11,zero
  83d1b0:	0009883a 	mov	r4,zero
  83d1b4:	00800104 	movi	r2,4
  83d1b8:	003fe306 	br	83d148 <__alt_mem_epcs_flash_controller_0+0xff834148>

0083d1bc <__sfvwrite_r>:
  83d1bc:	30800217 	ldw	r2,8(r6)
  83d1c0:	10006726 	beq	r2,zero,83d360 <__sfvwrite_r+0x1a4>
  83d1c4:	28c0030b 	ldhu	r3,12(r5)
  83d1c8:	defff404 	addi	sp,sp,-48
  83d1cc:	dd400715 	stw	r21,28(sp)
  83d1d0:	dd000615 	stw	r20,24(sp)
  83d1d4:	dc000215 	stw	r16,8(sp)
  83d1d8:	dfc00b15 	stw	ra,44(sp)
  83d1dc:	df000a15 	stw	fp,40(sp)
  83d1e0:	ddc00915 	stw	r23,36(sp)
  83d1e4:	dd800815 	stw	r22,32(sp)
  83d1e8:	dcc00515 	stw	r19,20(sp)
  83d1ec:	dc800415 	stw	r18,16(sp)
  83d1f0:	dc400315 	stw	r17,12(sp)
  83d1f4:	1880020c 	andi	r2,r3,8
  83d1f8:	2821883a 	mov	r16,r5
  83d1fc:	202b883a 	mov	r21,r4
  83d200:	3029883a 	mov	r20,r6
  83d204:	10002726 	beq	r2,zero,83d2a4 <__sfvwrite_r+0xe8>
  83d208:	28800417 	ldw	r2,16(r5)
  83d20c:	10002526 	beq	r2,zero,83d2a4 <__sfvwrite_r+0xe8>
  83d210:	1880008c 	andi	r2,r3,2
  83d214:	a4400017 	ldw	r17,0(r20)
  83d218:	10002a26 	beq	r2,zero,83d2c4 <__sfvwrite_r+0x108>
  83d21c:	05a00034 	movhi	r22,32768
  83d220:	0027883a 	mov	r19,zero
  83d224:	0025883a 	mov	r18,zero
  83d228:	b5bf0004 	addi	r22,r22,-1024
  83d22c:	980d883a 	mov	r6,r19
  83d230:	a809883a 	mov	r4,r21
  83d234:	90004626 	beq	r18,zero,83d350 <__sfvwrite_r+0x194>
  83d238:	900f883a 	mov	r7,r18
  83d23c:	b480022e 	bgeu	r22,r18,83d248 <__sfvwrite_r+0x8c>
  83d240:	01e00034 	movhi	r7,32768
  83d244:	39ff0004 	addi	r7,r7,-1024
  83d248:	80800917 	ldw	r2,36(r16)
  83d24c:	81400717 	ldw	r5,28(r16)
  83d250:	103ee83a 	callr	r2
  83d254:	00805a0e 	bge	zero,r2,83d3c0 <__sfvwrite_r+0x204>
  83d258:	a0c00217 	ldw	r3,8(r20)
  83d25c:	98a7883a 	add	r19,r19,r2
  83d260:	90a5c83a 	sub	r18,r18,r2
  83d264:	1885c83a 	sub	r2,r3,r2
  83d268:	a0800215 	stw	r2,8(r20)
  83d26c:	103fef1e 	bne	r2,zero,83d22c <__alt_mem_epcs_flash_controller_0+0xff83422c>
  83d270:	0005883a 	mov	r2,zero
  83d274:	dfc00b17 	ldw	ra,44(sp)
  83d278:	df000a17 	ldw	fp,40(sp)
  83d27c:	ddc00917 	ldw	r23,36(sp)
  83d280:	dd800817 	ldw	r22,32(sp)
  83d284:	dd400717 	ldw	r21,28(sp)
  83d288:	dd000617 	ldw	r20,24(sp)
  83d28c:	dcc00517 	ldw	r19,20(sp)
  83d290:	dc800417 	ldw	r18,16(sp)
  83d294:	dc400317 	ldw	r17,12(sp)
  83d298:	dc000217 	ldw	r16,8(sp)
  83d29c:	dec00c04 	addi	sp,sp,48
  83d2a0:	f800283a 	ret
  83d2a4:	800b883a 	mov	r5,r16
  83d2a8:	a809883a 	mov	r4,r21
  83d2ac:	083b5200 	call	83b520 <__swsetup_r>
  83d2b0:	1000ee1e 	bne	r2,zero,83d66c <__sfvwrite_r+0x4b0>
  83d2b4:	80c0030b 	ldhu	r3,12(r16)
  83d2b8:	a4400017 	ldw	r17,0(r20)
  83d2bc:	1880008c 	andi	r2,r3,2
  83d2c0:	103fd61e 	bne	r2,zero,83d21c <__alt_mem_epcs_flash_controller_0+0xff83421c>
  83d2c4:	1880004c 	andi	r2,r3,1
  83d2c8:	1000421e 	bne	r2,zero,83d3d4 <__sfvwrite_r+0x218>
  83d2cc:	0039883a 	mov	fp,zero
  83d2d0:	0025883a 	mov	r18,zero
  83d2d4:	90001a26 	beq	r18,zero,83d340 <__sfvwrite_r+0x184>
  83d2d8:	1880800c 	andi	r2,r3,512
  83d2dc:	84c00217 	ldw	r19,8(r16)
  83d2e0:	10002126 	beq	r2,zero,83d368 <__sfvwrite_r+0x1ac>
  83d2e4:	982f883a 	mov	r23,r19
  83d2e8:	94c09636 	bltu	r18,r19,83d544 <__sfvwrite_r+0x388>
  83d2ec:	1881200c 	andi	r2,r3,1152
  83d2f0:	1000a11e 	bne	r2,zero,83d578 <__sfvwrite_r+0x3bc>
  83d2f4:	81000017 	ldw	r4,0(r16)
  83d2f8:	b80d883a 	mov	r6,r23
  83d2fc:	e00b883a 	mov	r5,fp
  83d300:	083dbd00 	call	83dbd0 <memmove>
  83d304:	80c00217 	ldw	r3,8(r16)
  83d308:	81000017 	ldw	r4,0(r16)
  83d30c:	9005883a 	mov	r2,r18
  83d310:	1ce7c83a 	sub	r19,r3,r19
  83d314:	25cf883a 	add	r7,r4,r23
  83d318:	84c00215 	stw	r19,8(r16)
  83d31c:	81c00015 	stw	r7,0(r16)
  83d320:	a0c00217 	ldw	r3,8(r20)
  83d324:	e0b9883a 	add	fp,fp,r2
  83d328:	90a5c83a 	sub	r18,r18,r2
  83d32c:	18a7c83a 	sub	r19,r3,r2
  83d330:	a4c00215 	stw	r19,8(r20)
  83d334:	983fce26 	beq	r19,zero,83d270 <__alt_mem_epcs_flash_controller_0+0xff834270>
  83d338:	80c0030b 	ldhu	r3,12(r16)
  83d33c:	903fe61e 	bne	r18,zero,83d2d8 <__alt_mem_epcs_flash_controller_0+0xff8342d8>
  83d340:	8f000017 	ldw	fp,0(r17)
  83d344:	8c800117 	ldw	r18,4(r17)
  83d348:	8c400204 	addi	r17,r17,8
  83d34c:	003fe106 	br	83d2d4 <__alt_mem_epcs_flash_controller_0+0xff8342d4>
  83d350:	8cc00017 	ldw	r19,0(r17)
  83d354:	8c800117 	ldw	r18,4(r17)
  83d358:	8c400204 	addi	r17,r17,8
  83d35c:	003fb306 	br	83d22c <__alt_mem_epcs_flash_controller_0+0xff83422c>
  83d360:	0005883a 	mov	r2,zero
  83d364:	f800283a 	ret
  83d368:	81000017 	ldw	r4,0(r16)
  83d36c:	80800417 	ldw	r2,16(r16)
  83d370:	11005a36 	bltu	r2,r4,83d4dc <__sfvwrite_r+0x320>
  83d374:	85c00517 	ldw	r23,20(r16)
  83d378:	95c05836 	bltu	r18,r23,83d4dc <__sfvwrite_r+0x320>
  83d37c:	00a00034 	movhi	r2,32768
  83d380:	10bfffc4 	addi	r2,r2,-1
  83d384:	9009883a 	mov	r4,r18
  83d388:	1480012e 	bgeu	r2,r18,83d390 <__sfvwrite_r+0x1d4>
  83d38c:	1009883a 	mov	r4,r2
  83d390:	b80b883a 	mov	r5,r23
  83d394:	08300340 	call	830034 <__divsi3>
  83d398:	b80b883a 	mov	r5,r23
  83d39c:	1009883a 	mov	r4,r2
  83d3a0:	08301e80 	call	8301e8 <__mulsi3>
  83d3a4:	81400717 	ldw	r5,28(r16)
  83d3a8:	80c00917 	ldw	r3,36(r16)
  83d3ac:	100f883a 	mov	r7,r2
  83d3b0:	e00d883a 	mov	r6,fp
  83d3b4:	a809883a 	mov	r4,r21
  83d3b8:	183ee83a 	callr	r3
  83d3bc:	00bfd816 	blt	zero,r2,83d320 <__alt_mem_epcs_flash_controller_0+0xff834320>
  83d3c0:	8080030b 	ldhu	r2,12(r16)
  83d3c4:	10801014 	ori	r2,r2,64
  83d3c8:	8080030d 	sth	r2,12(r16)
  83d3cc:	00bfffc4 	movi	r2,-1
  83d3d0:	003fa806 	br	83d274 <__alt_mem_epcs_flash_controller_0+0xff834274>
  83d3d4:	0027883a 	mov	r19,zero
  83d3d8:	0011883a 	mov	r8,zero
  83d3dc:	0039883a 	mov	fp,zero
  83d3e0:	0025883a 	mov	r18,zero
  83d3e4:	90001f26 	beq	r18,zero,83d464 <__sfvwrite_r+0x2a8>
  83d3e8:	40005a26 	beq	r8,zero,83d554 <__sfvwrite_r+0x398>
  83d3ec:	982d883a 	mov	r22,r19
  83d3f0:	94c0012e 	bgeu	r18,r19,83d3f8 <__sfvwrite_r+0x23c>
  83d3f4:	902d883a 	mov	r22,r18
  83d3f8:	81000017 	ldw	r4,0(r16)
  83d3fc:	80800417 	ldw	r2,16(r16)
  83d400:	b02f883a 	mov	r23,r22
  83d404:	81c00517 	ldw	r7,20(r16)
  83d408:	1100032e 	bgeu	r2,r4,83d418 <__sfvwrite_r+0x25c>
  83d40c:	80c00217 	ldw	r3,8(r16)
  83d410:	38c7883a 	add	r3,r7,r3
  83d414:	1d801816 	blt	r3,r22,83d478 <__sfvwrite_r+0x2bc>
  83d418:	b1c03e16 	blt	r22,r7,83d514 <__sfvwrite_r+0x358>
  83d41c:	80800917 	ldw	r2,36(r16)
  83d420:	81400717 	ldw	r5,28(r16)
  83d424:	e00d883a 	mov	r6,fp
  83d428:	da000115 	stw	r8,4(sp)
  83d42c:	a809883a 	mov	r4,r21
  83d430:	103ee83a 	callr	r2
  83d434:	102f883a 	mov	r23,r2
  83d438:	da000117 	ldw	r8,4(sp)
  83d43c:	00bfe00e 	bge	zero,r2,83d3c0 <__alt_mem_epcs_flash_controller_0+0xff8343c0>
  83d440:	9de7c83a 	sub	r19,r19,r23
  83d444:	98001f26 	beq	r19,zero,83d4c4 <__sfvwrite_r+0x308>
  83d448:	a0800217 	ldw	r2,8(r20)
  83d44c:	e5f9883a 	add	fp,fp,r23
  83d450:	95e5c83a 	sub	r18,r18,r23
  83d454:	15efc83a 	sub	r23,r2,r23
  83d458:	a5c00215 	stw	r23,8(r20)
  83d45c:	b83f8426 	beq	r23,zero,83d270 <__alt_mem_epcs_flash_controller_0+0xff834270>
  83d460:	903fe11e 	bne	r18,zero,83d3e8 <__alt_mem_epcs_flash_controller_0+0xff8343e8>
  83d464:	8f000017 	ldw	fp,0(r17)
  83d468:	8c800117 	ldw	r18,4(r17)
  83d46c:	0011883a 	mov	r8,zero
  83d470:	8c400204 	addi	r17,r17,8
  83d474:	003fdb06 	br	83d3e4 <__alt_mem_epcs_flash_controller_0+0xff8343e4>
  83d478:	180d883a 	mov	r6,r3
  83d47c:	e00b883a 	mov	r5,fp
  83d480:	da000115 	stw	r8,4(sp)
  83d484:	d8c00015 	stw	r3,0(sp)
  83d488:	083dbd00 	call	83dbd0 <memmove>
  83d48c:	d8c00017 	ldw	r3,0(sp)
  83d490:	80800017 	ldw	r2,0(r16)
  83d494:	800b883a 	mov	r5,r16
  83d498:	a809883a 	mov	r4,r21
  83d49c:	10c5883a 	add	r2,r2,r3
  83d4a0:	80800015 	stw	r2,0(r16)
  83d4a4:	d8c00015 	stw	r3,0(sp)
  83d4a8:	08320440 	call	832044 <_fflush_r>
  83d4ac:	d8c00017 	ldw	r3,0(sp)
  83d4b0:	da000117 	ldw	r8,4(sp)
  83d4b4:	103fc21e 	bne	r2,zero,83d3c0 <__alt_mem_epcs_flash_controller_0+0xff8343c0>
  83d4b8:	182f883a 	mov	r23,r3
  83d4bc:	9de7c83a 	sub	r19,r19,r23
  83d4c0:	983fe11e 	bne	r19,zero,83d448 <__alt_mem_epcs_flash_controller_0+0xff834448>
  83d4c4:	800b883a 	mov	r5,r16
  83d4c8:	a809883a 	mov	r4,r21
  83d4cc:	08320440 	call	832044 <_fflush_r>
  83d4d0:	103fbb1e 	bne	r2,zero,83d3c0 <__alt_mem_epcs_flash_controller_0+0xff8343c0>
  83d4d4:	0011883a 	mov	r8,zero
  83d4d8:	003fdb06 	br	83d448 <__alt_mem_epcs_flash_controller_0+0xff834448>
  83d4dc:	94c0012e 	bgeu	r18,r19,83d4e4 <__sfvwrite_r+0x328>
  83d4e0:	9027883a 	mov	r19,r18
  83d4e4:	980d883a 	mov	r6,r19
  83d4e8:	e00b883a 	mov	r5,fp
  83d4ec:	083dbd00 	call	83dbd0 <memmove>
  83d4f0:	80800217 	ldw	r2,8(r16)
  83d4f4:	80c00017 	ldw	r3,0(r16)
  83d4f8:	14c5c83a 	sub	r2,r2,r19
  83d4fc:	1cc7883a 	add	r3,r3,r19
  83d500:	80800215 	stw	r2,8(r16)
  83d504:	80c00015 	stw	r3,0(r16)
  83d508:	10004326 	beq	r2,zero,83d618 <__sfvwrite_r+0x45c>
  83d50c:	9805883a 	mov	r2,r19
  83d510:	003f8306 	br	83d320 <__alt_mem_epcs_flash_controller_0+0xff834320>
  83d514:	b00d883a 	mov	r6,r22
  83d518:	e00b883a 	mov	r5,fp
  83d51c:	da000115 	stw	r8,4(sp)
  83d520:	083dbd00 	call	83dbd0 <memmove>
  83d524:	80800217 	ldw	r2,8(r16)
  83d528:	80c00017 	ldw	r3,0(r16)
  83d52c:	da000117 	ldw	r8,4(sp)
  83d530:	1585c83a 	sub	r2,r2,r22
  83d534:	1dad883a 	add	r22,r3,r22
  83d538:	80800215 	stw	r2,8(r16)
  83d53c:	85800015 	stw	r22,0(r16)
  83d540:	003fbf06 	br	83d440 <__alt_mem_epcs_flash_controller_0+0xff834440>
  83d544:	81000017 	ldw	r4,0(r16)
  83d548:	9027883a 	mov	r19,r18
  83d54c:	902f883a 	mov	r23,r18
  83d550:	003f6906 	br	83d2f8 <__alt_mem_epcs_flash_controller_0+0xff8342f8>
  83d554:	900d883a 	mov	r6,r18
  83d558:	01400284 	movi	r5,10
  83d55c:	e009883a 	mov	r4,fp
  83d560:	0833b680 	call	833b68 <memchr>
  83d564:	10003e26 	beq	r2,zero,83d660 <__sfvwrite_r+0x4a4>
  83d568:	10800044 	addi	r2,r2,1
  83d56c:	1727c83a 	sub	r19,r2,fp
  83d570:	02000044 	movi	r8,1
  83d574:	003f9d06 	br	83d3ec <__alt_mem_epcs_flash_controller_0+0xff8343ec>
  83d578:	80800517 	ldw	r2,20(r16)
  83d57c:	81400417 	ldw	r5,16(r16)
  83d580:	81c00017 	ldw	r7,0(r16)
  83d584:	10a7883a 	add	r19,r2,r2
  83d588:	9885883a 	add	r2,r19,r2
  83d58c:	1026d7fa 	srli	r19,r2,31
  83d590:	396dc83a 	sub	r22,r7,r5
  83d594:	b1000044 	addi	r4,r22,1
  83d598:	9885883a 	add	r2,r19,r2
  83d59c:	1027d07a 	srai	r19,r2,1
  83d5a0:	2485883a 	add	r2,r4,r18
  83d5a4:	980d883a 	mov	r6,r19
  83d5a8:	9880022e 	bgeu	r19,r2,83d5b4 <__sfvwrite_r+0x3f8>
  83d5ac:	1027883a 	mov	r19,r2
  83d5b0:	100d883a 	mov	r6,r2
  83d5b4:	18c1000c 	andi	r3,r3,1024
  83d5b8:	18001c26 	beq	r3,zero,83d62c <__sfvwrite_r+0x470>
  83d5bc:	300b883a 	mov	r5,r6
  83d5c0:	a809883a 	mov	r4,r21
  83d5c4:	083335c0 	call	83335c <_malloc_r>
  83d5c8:	102f883a 	mov	r23,r2
  83d5cc:	10002926 	beq	r2,zero,83d674 <__sfvwrite_r+0x4b8>
  83d5d0:	81400417 	ldw	r5,16(r16)
  83d5d4:	b00d883a 	mov	r6,r22
  83d5d8:	1009883a 	mov	r4,r2
  83d5dc:	0833c4c0 	call	833c4c <memcpy>
  83d5e0:	8080030b 	ldhu	r2,12(r16)
  83d5e4:	00fedfc4 	movi	r3,-1153
  83d5e8:	10c4703a 	and	r2,r2,r3
  83d5ec:	10802014 	ori	r2,r2,128
  83d5f0:	8080030d 	sth	r2,12(r16)
  83d5f4:	bd89883a 	add	r4,r23,r22
  83d5f8:	9d8fc83a 	sub	r7,r19,r22
  83d5fc:	85c00415 	stw	r23,16(r16)
  83d600:	84c00515 	stw	r19,20(r16)
  83d604:	81000015 	stw	r4,0(r16)
  83d608:	9027883a 	mov	r19,r18
  83d60c:	81c00215 	stw	r7,8(r16)
  83d610:	902f883a 	mov	r23,r18
  83d614:	003f3806 	br	83d2f8 <__alt_mem_epcs_flash_controller_0+0xff8342f8>
  83d618:	800b883a 	mov	r5,r16
  83d61c:	a809883a 	mov	r4,r21
  83d620:	08320440 	call	832044 <_fflush_r>
  83d624:	103fb926 	beq	r2,zero,83d50c <__alt_mem_epcs_flash_controller_0+0xff83450c>
  83d628:	003f6506 	br	83d3c0 <__alt_mem_epcs_flash_controller_0+0xff8343c0>
  83d62c:	a809883a 	mov	r4,r21
  83d630:	08346740 	call	834674 <_realloc_r>
  83d634:	102f883a 	mov	r23,r2
  83d638:	103fee1e 	bne	r2,zero,83d5f4 <__alt_mem_epcs_flash_controller_0+0xff8345f4>
  83d63c:	81400417 	ldw	r5,16(r16)
  83d640:	a809883a 	mov	r4,r21
  83d644:	0832d380 	call	832d38 <_free_r>
  83d648:	8080030b 	ldhu	r2,12(r16)
  83d64c:	00ffdfc4 	movi	r3,-129
  83d650:	1884703a 	and	r2,r3,r2
  83d654:	00c00304 	movi	r3,12
  83d658:	a8c00015 	stw	r3,0(r21)
  83d65c:	003f5906 	br	83d3c4 <__alt_mem_epcs_flash_controller_0+0xff8343c4>
  83d660:	94c00044 	addi	r19,r18,1
  83d664:	02000044 	movi	r8,1
  83d668:	003f6006 	br	83d3ec <__alt_mem_epcs_flash_controller_0+0xff8343ec>
  83d66c:	00bfffc4 	movi	r2,-1
  83d670:	003f0006 	br	83d274 <__alt_mem_epcs_flash_controller_0+0xff834274>
  83d674:	00800304 	movi	r2,12
  83d678:	a8800015 	stw	r2,0(r21)
  83d67c:	8080030b 	ldhu	r2,12(r16)
  83d680:	003f5006 	br	83d3c4 <__alt_mem_epcs_flash_controller_0+0xff8343c4>

0083d684 <iswspace>:
  83d684:	00803fc4 	movi	r2,255
  83d688:	11000836 	bltu	r2,r4,83d6ac <iswspace+0x28>
  83d68c:	008021b4 	movhi	r2,134
  83d690:	10af7704 	addi	r2,r2,-16932
  83d694:	10800017 	ldw	r2,0(r2)
  83d698:	1109883a 	add	r4,r2,r4
  83d69c:	20800043 	ldbu	r2,1(r4)
  83d6a0:	1080020c 	andi	r2,r2,8
  83d6a4:	10803fcc 	andi	r2,r2,255
  83d6a8:	f800283a 	ret
  83d6ac:	0005883a 	mov	r2,zero
  83d6b0:	f800283a 	ret

0083d6b4 <_setlocale_r>:
  83d6b4:	30001b26 	beq	r6,zero,83d724 <_setlocale_r+0x70>
  83d6b8:	014021b4 	movhi	r5,134
  83d6bc:	defffe04 	addi	sp,sp,-8
  83d6c0:	2966c504 	addi	r5,r5,-25836
  83d6c4:	3009883a 	mov	r4,r6
  83d6c8:	dc000015 	stw	r16,0(sp)
  83d6cc:	dfc00115 	stw	ra,4(sp)
  83d6d0:	3021883a 	mov	r16,r6
  83d6d4:	083f2940 	call	83f294 <strcmp>
  83d6d8:	1000061e 	bne	r2,zero,83d6f4 <_setlocale_r+0x40>
  83d6dc:	008021b4 	movhi	r2,134
  83d6e0:	10a5f304 	addi	r2,r2,-26676
  83d6e4:	dfc00117 	ldw	ra,4(sp)
  83d6e8:	dc000017 	ldw	r16,0(sp)
  83d6ec:	dec00204 	addi	sp,sp,8
  83d6f0:	f800283a 	ret
  83d6f4:	014021b4 	movhi	r5,134
  83d6f8:	2965f304 	addi	r5,r5,-26676
  83d6fc:	8009883a 	mov	r4,r16
  83d700:	083f2940 	call	83f294 <strcmp>
  83d704:	103ff526 	beq	r2,zero,83d6dc <__alt_mem_epcs_flash_controller_0+0xff8346dc>
  83d708:	014021b4 	movhi	r5,134
  83d70c:	2965fd04 	addi	r5,r5,-26636
  83d710:	8009883a 	mov	r4,r16
  83d714:	083f2940 	call	83f294 <strcmp>
  83d718:	103ff026 	beq	r2,zero,83d6dc <__alt_mem_epcs_flash_controller_0+0xff8346dc>
  83d71c:	0005883a 	mov	r2,zero
  83d720:	003ff006 	br	83d6e4 <__alt_mem_epcs_flash_controller_0+0xff8346e4>
  83d724:	008021b4 	movhi	r2,134
  83d728:	10a5f304 	addi	r2,r2,-26676
  83d72c:	f800283a 	ret

0083d730 <__locale_charset>:
  83d730:	008021b4 	movhi	r2,134
  83d734:	10a9fe04 	addi	r2,r2,-22536
  83d738:	f800283a 	ret

0083d73c <__locale_mb_cur_max>:
  83d73c:	008021b4 	movhi	r2,134
  83d740:	10af7904 	addi	r2,r2,-16924
  83d744:	10800017 	ldw	r2,0(r2)
  83d748:	f800283a 	ret

0083d74c <__locale_msgcharset>:
  83d74c:	008021b4 	movhi	r2,134
  83d750:	10a9f604 	addi	r2,r2,-22568
  83d754:	f800283a 	ret

0083d758 <__locale_cjk_lang>:
  83d758:	0005883a 	mov	r2,zero
  83d75c:	f800283a 	ret

0083d760 <_localeconv_r>:
  83d760:	008021b4 	movhi	r2,134
  83d764:	10aa0604 	addi	r2,r2,-22504
  83d768:	f800283a 	ret

0083d76c <setlocale>:
  83d76c:	008021b4 	movhi	r2,134
  83d770:	10af7404 	addi	r2,r2,-16944
  83d774:	280d883a 	mov	r6,r5
  83d778:	200b883a 	mov	r5,r4
  83d77c:	11000017 	ldw	r4,0(r2)
  83d780:	083d6b41 	jmpi	83d6b4 <_setlocale_r>

0083d784 <localeconv>:
  83d784:	008021b4 	movhi	r2,134
  83d788:	10aa0604 	addi	r2,r2,-22504
  83d78c:	f800283a 	ret

0083d790 <_lseek_r>:
  83d790:	defffd04 	addi	sp,sp,-12
  83d794:	2805883a 	mov	r2,r5
  83d798:	dc000015 	stw	r16,0(sp)
  83d79c:	040021b4 	movhi	r16,134
  83d7a0:	dc400115 	stw	r17,4(sp)
  83d7a4:	300b883a 	mov	r5,r6
  83d7a8:	842fc604 	addi	r16,r16,-16616
  83d7ac:	2023883a 	mov	r17,r4
  83d7b0:	380d883a 	mov	r6,r7
  83d7b4:	1009883a 	mov	r4,r2
  83d7b8:	dfc00215 	stw	ra,8(sp)
  83d7bc:	80000015 	stw	zero,0(r16)
  83d7c0:	0849ff00 	call	849ff0 <lseek>
  83d7c4:	00ffffc4 	movi	r3,-1
  83d7c8:	10c00526 	beq	r2,r3,83d7e0 <_lseek_r+0x50>
  83d7cc:	dfc00217 	ldw	ra,8(sp)
  83d7d0:	dc400117 	ldw	r17,4(sp)
  83d7d4:	dc000017 	ldw	r16,0(sp)
  83d7d8:	dec00304 	addi	sp,sp,12
  83d7dc:	f800283a 	ret
  83d7e0:	80c00017 	ldw	r3,0(r16)
  83d7e4:	183ff926 	beq	r3,zero,83d7cc <__alt_mem_epcs_flash_controller_0+0xff8347cc>
  83d7e8:	88c00015 	stw	r3,0(r17)
  83d7ec:	003ff706 	br	83d7cc <__alt_mem_epcs_flash_controller_0+0xff8347cc>

0083d7f0 <__smakebuf_r>:
  83d7f0:	2880030b 	ldhu	r2,12(r5)
  83d7f4:	10c0008c 	andi	r3,r2,2
  83d7f8:	1800411e 	bne	r3,zero,83d900 <__smakebuf_r+0x110>
  83d7fc:	deffec04 	addi	sp,sp,-80
  83d800:	dc000f15 	stw	r16,60(sp)
  83d804:	2821883a 	mov	r16,r5
  83d808:	2940038f 	ldh	r5,14(r5)
  83d80c:	dc401015 	stw	r17,64(sp)
  83d810:	dfc01315 	stw	ra,76(sp)
  83d814:	dcc01215 	stw	r19,72(sp)
  83d818:	dc801115 	stw	r18,68(sp)
  83d81c:	2023883a 	mov	r17,r4
  83d820:	28001c16 	blt	r5,zero,83d894 <__smakebuf_r+0xa4>
  83d824:	d80d883a 	mov	r6,sp
  83d828:	0845b8c0 	call	845b8c <_fstat_r>
  83d82c:	10001816 	blt	r2,zero,83d890 <__smakebuf_r+0xa0>
  83d830:	d8800117 	ldw	r2,4(sp)
  83d834:	00e00014 	movui	r3,32768
  83d838:	10bc000c 	andi	r2,r2,61440
  83d83c:	14c80020 	cmpeqi	r19,r2,8192
  83d840:	10c03726 	beq	r2,r3,83d920 <__smakebuf_r+0x130>
  83d844:	80c0030b 	ldhu	r3,12(r16)
  83d848:	18c20014 	ori	r3,r3,2048
  83d84c:	80c0030d 	sth	r3,12(r16)
  83d850:	00c80004 	movi	r3,8192
  83d854:	10c0521e 	bne	r2,r3,83d9a0 <__smakebuf_r+0x1b0>
  83d858:	8140038f 	ldh	r5,14(r16)
  83d85c:	8809883a 	mov	r4,r17
  83d860:	08467940 	call	846794 <_isatty_r>
  83d864:	10004c26 	beq	r2,zero,83d998 <__smakebuf_r+0x1a8>
  83d868:	8080030b 	ldhu	r2,12(r16)
  83d86c:	80c010c4 	addi	r3,r16,67
  83d870:	80c00015 	stw	r3,0(r16)
  83d874:	10800054 	ori	r2,r2,1
  83d878:	8080030d 	sth	r2,12(r16)
  83d87c:	00800044 	movi	r2,1
  83d880:	80c00415 	stw	r3,16(r16)
  83d884:	80800515 	stw	r2,20(r16)
  83d888:	04810004 	movi	r18,1024
  83d88c:	00000706 	br	83d8ac <__smakebuf_r+0xbc>
  83d890:	8080030b 	ldhu	r2,12(r16)
  83d894:	10c0200c 	andi	r3,r2,128
  83d898:	18001f1e 	bne	r3,zero,83d918 <__smakebuf_r+0x128>
  83d89c:	04810004 	movi	r18,1024
  83d8a0:	10820014 	ori	r2,r2,2048
  83d8a4:	8080030d 	sth	r2,12(r16)
  83d8a8:	0027883a 	mov	r19,zero
  83d8ac:	900b883a 	mov	r5,r18
  83d8b0:	8809883a 	mov	r4,r17
  83d8b4:	083335c0 	call	83335c <_malloc_r>
  83d8b8:	10002c26 	beq	r2,zero,83d96c <__smakebuf_r+0x17c>
  83d8bc:	80c0030b 	ldhu	r3,12(r16)
  83d8c0:	010020f4 	movhi	r4,131
  83d8c4:	21083604 	addi	r4,r4,8408
  83d8c8:	89000f15 	stw	r4,60(r17)
  83d8cc:	18c02014 	ori	r3,r3,128
  83d8d0:	80c0030d 	sth	r3,12(r16)
  83d8d4:	80800015 	stw	r2,0(r16)
  83d8d8:	80800415 	stw	r2,16(r16)
  83d8dc:	84800515 	stw	r18,20(r16)
  83d8e0:	98001a1e 	bne	r19,zero,83d94c <__smakebuf_r+0x15c>
  83d8e4:	dfc01317 	ldw	ra,76(sp)
  83d8e8:	dcc01217 	ldw	r19,72(sp)
  83d8ec:	dc801117 	ldw	r18,68(sp)
  83d8f0:	dc401017 	ldw	r17,64(sp)
  83d8f4:	dc000f17 	ldw	r16,60(sp)
  83d8f8:	dec01404 	addi	sp,sp,80
  83d8fc:	f800283a 	ret
  83d900:	288010c4 	addi	r2,r5,67
  83d904:	28800015 	stw	r2,0(r5)
  83d908:	28800415 	stw	r2,16(r5)
  83d90c:	00800044 	movi	r2,1
  83d910:	28800515 	stw	r2,20(r5)
  83d914:	f800283a 	ret
  83d918:	04801004 	movi	r18,64
  83d91c:	003fe006 	br	83d8a0 <__alt_mem_epcs_flash_controller_0+0xff8348a0>
  83d920:	81000a17 	ldw	r4,40(r16)
  83d924:	00c020f4 	movhi	r3,131
  83d928:	18d42b04 	addi	r3,r3,20652
  83d92c:	20ffc51e 	bne	r4,r3,83d844 <__alt_mem_epcs_flash_controller_0+0xff834844>
  83d930:	8080030b 	ldhu	r2,12(r16)
  83d934:	04810004 	movi	r18,1024
  83d938:	84801315 	stw	r18,76(r16)
  83d93c:	1484b03a 	or	r2,r2,r18
  83d940:	8080030d 	sth	r2,12(r16)
  83d944:	0027883a 	mov	r19,zero
  83d948:	003fd806 	br	83d8ac <__alt_mem_epcs_flash_controller_0+0xff8348ac>
  83d94c:	8140038f 	ldh	r5,14(r16)
  83d950:	8809883a 	mov	r4,r17
  83d954:	08467940 	call	846794 <_isatty_r>
  83d958:	103fe226 	beq	r2,zero,83d8e4 <__alt_mem_epcs_flash_controller_0+0xff8348e4>
  83d95c:	8080030b 	ldhu	r2,12(r16)
  83d960:	10800054 	ori	r2,r2,1
  83d964:	8080030d 	sth	r2,12(r16)
  83d968:	003fde06 	br	83d8e4 <__alt_mem_epcs_flash_controller_0+0xff8348e4>
  83d96c:	8080030b 	ldhu	r2,12(r16)
  83d970:	10c0800c 	andi	r3,r2,512
  83d974:	183fdb1e 	bne	r3,zero,83d8e4 <__alt_mem_epcs_flash_controller_0+0xff8348e4>
  83d978:	10800094 	ori	r2,r2,2
  83d97c:	80c010c4 	addi	r3,r16,67
  83d980:	8080030d 	sth	r2,12(r16)
  83d984:	00800044 	movi	r2,1
  83d988:	80c00015 	stw	r3,0(r16)
  83d98c:	80c00415 	stw	r3,16(r16)
  83d990:	80800515 	stw	r2,20(r16)
  83d994:	003fd306 	br	83d8e4 <__alt_mem_epcs_flash_controller_0+0xff8348e4>
  83d998:	04810004 	movi	r18,1024
  83d99c:	003fc306 	br	83d8ac <__alt_mem_epcs_flash_controller_0+0xff8348ac>
  83d9a0:	0027883a 	mov	r19,zero
  83d9a4:	04810004 	movi	r18,1024
  83d9a8:	003fc006 	br	83d8ac <__alt_mem_epcs_flash_controller_0+0xff8348ac>

0083d9ac <_mbrtowc_r>:
  83d9ac:	defff704 	addi	sp,sp,-36
  83d9b0:	008021b4 	movhi	r2,134
  83d9b4:	dc800715 	stw	r18,28(sp)
  83d9b8:	dc400615 	stw	r17,24(sp)
  83d9bc:	dc000515 	stw	r16,20(sp)
  83d9c0:	10af7a04 	addi	r2,r2,-16920
  83d9c4:	dfc00815 	stw	ra,32(sp)
  83d9c8:	2021883a 	mov	r16,r4
  83d9cc:	dc400917 	ldw	r17,36(sp)
  83d9d0:	14800017 	ldw	r18,0(r2)
  83d9d4:	30001626 	beq	r6,zero,83da30 <_mbrtowc_r+0x84>
  83d9d8:	d9400215 	stw	r5,8(sp)
  83d9dc:	d9800315 	stw	r6,12(sp)
  83d9e0:	d9c00415 	stw	r7,16(sp)
  83d9e4:	083d7300 	call	83d730 <__locale_charset>
  83d9e8:	d9c00417 	ldw	r7,16(sp)
  83d9ec:	d9800317 	ldw	r6,12(sp)
  83d9f0:	d9400217 	ldw	r5,8(sp)
  83d9f4:	d8800015 	stw	r2,0(sp)
  83d9f8:	dc400115 	stw	r17,4(sp)
  83d9fc:	8009883a 	mov	r4,r16
  83da00:	903ee83a 	callr	r18
  83da04:	00ffffc4 	movi	r3,-1
  83da08:	10c0031e 	bne	r2,r3,83da18 <_mbrtowc_r+0x6c>
  83da0c:	88000015 	stw	zero,0(r17)
  83da10:	00c02284 	movi	r3,138
  83da14:	80c00015 	stw	r3,0(r16)
  83da18:	dfc00817 	ldw	ra,32(sp)
  83da1c:	dc800717 	ldw	r18,28(sp)
  83da20:	dc400617 	ldw	r17,24(sp)
  83da24:	dc000517 	ldw	r16,20(sp)
  83da28:	dec00904 	addi	sp,sp,36
  83da2c:	f800283a 	ret
  83da30:	083d7300 	call	83d730 <__locale_charset>
  83da34:	018021b4 	movhi	r6,134
  83da38:	31a5fd04 	addi	r6,r6,-26636
  83da3c:	dc400115 	stw	r17,4(sp)
  83da40:	d8800015 	stw	r2,0(sp)
  83da44:	01c00044 	movi	r7,1
  83da48:	000b883a 	mov	r5,zero
  83da4c:	8009883a 	mov	r4,r16
  83da50:	903ee83a 	callr	r18
  83da54:	003feb06 	br	83da04 <__alt_mem_epcs_flash_controller_0+0xff834a04>

0083da58 <mbrtowc>:
  83da58:	defff704 	addi	sp,sp,-36
  83da5c:	008021b4 	movhi	r2,134
  83da60:	dc800415 	stw	r18,16(sp)
  83da64:	dc400315 	stw	r17,12(sp)
  83da68:	10af7404 	addi	r2,r2,-16944
  83da6c:	dfc00815 	stw	ra,32(sp)
  83da70:	dd400715 	stw	r21,28(sp)
  83da74:	dd000615 	stw	r20,24(sp)
  83da78:	dcc00515 	stw	r19,20(sp)
  83da7c:	dc000215 	stw	r16,8(sp)
  83da80:	3825883a 	mov	r18,r7
  83da84:	14400017 	ldw	r17,0(r2)
  83da88:	28001c26 	beq	r5,zero,83dafc <mbrtowc+0xa4>
  83da8c:	008021b4 	movhi	r2,134
  83da90:	10af7a04 	addi	r2,r2,-16920
  83da94:	15400017 	ldw	r21,0(r2)
  83da98:	2821883a 	mov	r16,r5
  83da9c:	2027883a 	mov	r19,r4
  83daa0:	3029883a 	mov	r20,r6
  83daa4:	083d7300 	call	83d730 <__locale_charset>
  83daa8:	d8800015 	stw	r2,0(sp)
  83daac:	dc800115 	stw	r18,4(sp)
  83dab0:	a00f883a 	mov	r7,r20
  83dab4:	800d883a 	mov	r6,r16
  83dab8:	980b883a 	mov	r5,r19
  83dabc:	8809883a 	mov	r4,r17
  83dac0:	a83ee83a 	callr	r21
  83dac4:	00ffffc4 	movi	r3,-1
  83dac8:	10c0031e 	bne	r2,r3,83dad8 <mbrtowc+0x80>
  83dacc:	90000015 	stw	zero,0(r18)
  83dad0:	00c02284 	movi	r3,138
  83dad4:	88c00015 	stw	r3,0(r17)
  83dad8:	dfc00817 	ldw	ra,32(sp)
  83dadc:	dd400717 	ldw	r21,28(sp)
  83dae0:	dd000617 	ldw	r20,24(sp)
  83dae4:	dcc00517 	ldw	r19,20(sp)
  83dae8:	dc800417 	ldw	r18,16(sp)
  83daec:	dc400317 	ldw	r17,12(sp)
  83daf0:	dc000217 	ldw	r16,8(sp)
  83daf4:	dec00904 	addi	sp,sp,36
  83daf8:	f800283a 	ret
  83dafc:	008021b4 	movhi	r2,134
  83db00:	10af7a04 	addi	r2,r2,-16920
  83db04:	14000017 	ldw	r16,0(r2)
  83db08:	083d7300 	call	83d730 <__locale_charset>
  83db0c:	018021b4 	movhi	r6,134
  83db10:	31a5fd04 	addi	r6,r6,-26636
  83db14:	dc800115 	stw	r18,4(sp)
  83db18:	d8800015 	stw	r2,0(sp)
  83db1c:	01c00044 	movi	r7,1
  83db20:	000b883a 	mov	r5,zero
  83db24:	8809883a 	mov	r4,r17
  83db28:	803ee83a 	callr	r16
  83db2c:	003fe506 	br	83dac4 <__alt_mem_epcs_flash_controller_0+0xff834ac4>

0083db30 <__ascii_mbtowc>:
  83db30:	deffff04 	addi	sp,sp,-4
  83db34:	28000826 	beq	r5,zero,83db58 <__ascii_mbtowc+0x28>
  83db38:	30000926 	beq	r6,zero,83db60 <__ascii_mbtowc+0x30>
  83db3c:	38000b26 	beq	r7,zero,83db6c <__ascii_mbtowc+0x3c>
  83db40:	30800003 	ldbu	r2,0(r6)
  83db44:	28800015 	stw	r2,0(r5)
  83db48:	30800003 	ldbu	r2,0(r6)
  83db4c:	1004c03a 	cmpne	r2,r2,zero
  83db50:	dec00104 	addi	sp,sp,4
  83db54:	f800283a 	ret
  83db58:	d80b883a 	mov	r5,sp
  83db5c:	303ff71e 	bne	r6,zero,83db3c <__alt_mem_epcs_flash_controller_0+0xff834b3c>
  83db60:	0005883a 	mov	r2,zero
  83db64:	dec00104 	addi	sp,sp,4
  83db68:	f800283a 	ret
  83db6c:	00bfff84 	movi	r2,-2
  83db70:	003ff706 	br	83db50 <__alt_mem_epcs_flash_controller_0+0xff834b50>

0083db74 <_mbtowc_r>:
  83db74:	008021b4 	movhi	r2,134
  83db78:	defff804 	addi	sp,sp,-32
  83db7c:	10af7a04 	addi	r2,r2,-16920
  83db80:	dfc00715 	stw	ra,28(sp)
  83db84:	dc000615 	stw	r16,24(sp)
  83db88:	14000017 	ldw	r16,0(r2)
  83db8c:	d9000215 	stw	r4,8(sp)
  83db90:	d9400315 	stw	r5,12(sp)
  83db94:	d9800415 	stw	r6,16(sp)
  83db98:	d9c00515 	stw	r7,20(sp)
  83db9c:	083d7300 	call	83d730 <__locale_charset>
  83dba0:	d8800015 	stw	r2,0(sp)
  83dba4:	d8800817 	ldw	r2,32(sp)
  83dba8:	d9c00517 	ldw	r7,20(sp)
  83dbac:	d9800417 	ldw	r6,16(sp)
  83dbb0:	d9400317 	ldw	r5,12(sp)
  83dbb4:	d9000217 	ldw	r4,8(sp)
  83dbb8:	d8800115 	stw	r2,4(sp)
  83dbbc:	803ee83a 	callr	r16
  83dbc0:	dfc00717 	ldw	ra,28(sp)
  83dbc4:	dc000617 	ldw	r16,24(sp)
  83dbc8:	dec00804 	addi	sp,sp,32
  83dbcc:	f800283a 	ret

0083dbd0 <memmove>:
  83dbd0:	2005883a 	mov	r2,r4
  83dbd4:	29000b2e 	bgeu	r5,r4,83dc04 <memmove+0x34>
  83dbd8:	298f883a 	add	r7,r5,r6
  83dbdc:	21c0092e 	bgeu	r4,r7,83dc04 <memmove+0x34>
  83dbe0:	2187883a 	add	r3,r4,r6
  83dbe4:	198bc83a 	sub	r5,r3,r6
  83dbe8:	30004826 	beq	r6,zero,83dd0c <memmove+0x13c>
  83dbec:	39ffffc4 	addi	r7,r7,-1
  83dbf0:	39000003 	ldbu	r4,0(r7)
  83dbf4:	18ffffc4 	addi	r3,r3,-1
  83dbf8:	19000005 	stb	r4,0(r3)
  83dbfc:	28fffb1e 	bne	r5,r3,83dbec <__alt_mem_epcs_flash_controller_0+0xff834bec>
  83dc00:	f800283a 	ret
  83dc04:	00c003c4 	movi	r3,15
  83dc08:	1980412e 	bgeu	r3,r6,83dd10 <memmove+0x140>
  83dc0c:	2886b03a 	or	r3,r5,r2
  83dc10:	18c000cc 	andi	r3,r3,3
  83dc14:	1800401e 	bne	r3,zero,83dd18 <memmove+0x148>
  83dc18:	33fffc04 	addi	r15,r6,-16
  83dc1c:	781ed13a 	srli	r15,r15,4
  83dc20:	28c00104 	addi	r3,r5,4
  83dc24:	13400104 	addi	r13,r2,4
  83dc28:	781c913a 	slli	r14,r15,4
  83dc2c:	2b000204 	addi	r12,r5,8
  83dc30:	12c00204 	addi	r11,r2,8
  83dc34:	73800504 	addi	r14,r14,20
  83dc38:	2a800304 	addi	r10,r5,12
  83dc3c:	12400304 	addi	r9,r2,12
  83dc40:	2b9d883a 	add	r14,r5,r14
  83dc44:	2811883a 	mov	r8,r5
  83dc48:	100f883a 	mov	r7,r2
  83dc4c:	41000017 	ldw	r4,0(r8)
  83dc50:	39c00404 	addi	r7,r7,16
  83dc54:	18c00404 	addi	r3,r3,16
  83dc58:	393ffc15 	stw	r4,-16(r7)
  83dc5c:	193ffc17 	ldw	r4,-16(r3)
  83dc60:	6b400404 	addi	r13,r13,16
  83dc64:	5ac00404 	addi	r11,r11,16
  83dc68:	693ffc15 	stw	r4,-16(r13)
  83dc6c:	61000017 	ldw	r4,0(r12)
  83dc70:	4a400404 	addi	r9,r9,16
  83dc74:	42000404 	addi	r8,r8,16
  83dc78:	593ffc15 	stw	r4,-16(r11)
  83dc7c:	51000017 	ldw	r4,0(r10)
  83dc80:	63000404 	addi	r12,r12,16
  83dc84:	52800404 	addi	r10,r10,16
  83dc88:	493ffc15 	stw	r4,-16(r9)
  83dc8c:	1bbfef1e 	bne	r3,r14,83dc4c <__alt_mem_epcs_flash_controller_0+0xff834c4c>
  83dc90:	79000044 	addi	r4,r15,1
  83dc94:	2008913a 	slli	r4,r4,4
  83dc98:	328003cc 	andi	r10,r6,15
  83dc9c:	02c000c4 	movi	r11,3
  83dca0:	1107883a 	add	r3,r2,r4
  83dca4:	290b883a 	add	r5,r5,r4
  83dca8:	5a801e2e 	bgeu	r11,r10,83dd24 <memmove+0x154>
  83dcac:	1813883a 	mov	r9,r3
  83dcb0:	2811883a 	mov	r8,r5
  83dcb4:	500f883a 	mov	r7,r10
  83dcb8:	41000017 	ldw	r4,0(r8)
  83dcbc:	4a400104 	addi	r9,r9,4
  83dcc0:	39ffff04 	addi	r7,r7,-4
  83dcc4:	493fff15 	stw	r4,-4(r9)
  83dcc8:	42000104 	addi	r8,r8,4
  83dccc:	59fffa36 	bltu	r11,r7,83dcb8 <__alt_mem_epcs_flash_controller_0+0xff834cb8>
  83dcd0:	513fff04 	addi	r4,r10,-4
  83dcd4:	2008d0ba 	srli	r4,r4,2
  83dcd8:	318000cc 	andi	r6,r6,3
  83dcdc:	21000044 	addi	r4,r4,1
  83dce0:	2109883a 	add	r4,r4,r4
  83dce4:	2109883a 	add	r4,r4,r4
  83dce8:	1907883a 	add	r3,r3,r4
  83dcec:	290b883a 	add	r5,r5,r4
  83dcf0:	30000b26 	beq	r6,zero,83dd20 <memmove+0x150>
  83dcf4:	198d883a 	add	r6,r3,r6
  83dcf8:	29c00003 	ldbu	r7,0(r5)
  83dcfc:	18c00044 	addi	r3,r3,1
  83dd00:	29400044 	addi	r5,r5,1
  83dd04:	19ffffc5 	stb	r7,-1(r3)
  83dd08:	19bffb1e 	bne	r3,r6,83dcf8 <__alt_mem_epcs_flash_controller_0+0xff834cf8>
  83dd0c:	f800283a 	ret
  83dd10:	1007883a 	mov	r3,r2
  83dd14:	003ff606 	br	83dcf0 <__alt_mem_epcs_flash_controller_0+0xff834cf0>
  83dd18:	1007883a 	mov	r3,r2
  83dd1c:	003ff506 	br	83dcf4 <__alt_mem_epcs_flash_controller_0+0xff834cf4>
  83dd20:	f800283a 	ret
  83dd24:	500d883a 	mov	r6,r10
  83dd28:	003ff106 	br	83dcf0 <__alt_mem_epcs_flash_controller_0+0xff834cf0>

0083dd2c <_Balloc>:
  83dd2c:	20801317 	ldw	r2,76(r4)
  83dd30:	defffc04 	addi	sp,sp,-16
  83dd34:	dc400115 	stw	r17,4(sp)
  83dd38:	dc000015 	stw	r16,0(sp)
  83dd3c:	dfc00315 	stw	ra,12(sp)
  83dd40:	dc800215 	stw	r18,8(sp)
  83dd44:	2023883a 	mov	r17,r4
  83dd48:	2821883a 	mov	r16,r5
  83dd4c:	10000f26 	beq	r2,zero,83dd8c <_Balloc+0x60>
  83dd50:	8407883a 	add	r3,r16,r16
  83dd54:	18c7883a 	add	r3,r3,r3
  83dd58:	10c7883a 	add	r3,r2,r3
  83dd5c:	18800017 	ldw	r2,0(r3)
  83dd60:	10001126 	beq	r2,zero,83dda8 <_Balloc+0x7c>
  83dd64:	11000017 	ldw	r4,0(r2)
  83dd68:	19000015 	stw	r4,0(r3)
  83dd6c:	10000415 	stw	zero,16(r2)
  83dd70:	10000315 	stw	zero,12(r2)
  83dd74:	dfc00317 	ldw	ra,12(sp)
  83dd78:	dc800217 	ldw	r18,8(sp)
  83dd7c:	dc400117 	ldw	r17,4(sp)
  83dd80:	dc000017 	ldw	r16,0(sp)
  83dd84:	dec00404 	addi	sp,sp,16
  83dd88:	f800283a 	ret
  83dd8c:	01800844 	movi	r6,33
  83dd90:	01400104 	movi	r5,4
  83dd94:	08458a80 	call	8458a8 <_calloc_r>
  83dd98:	88801315 	stw	r2,76(r17)
  83dd9c:	103fec1e 	bne	r2,zero,83dd50 <__alt_mem_epcs_flash_controller_0+0xff834d50>
  83dda0:	0005883a 	mov	r2,zero
  83dda4:	003ff306 	br	83dd74 <__alt_mem_epcs_flash_controller_0+0xff834d74>
  83dda8:	01400044 	movi	r5,1
  83ddac:	2c24983a 	sll	r18,r5,r16
  83ddb0:	8809883a 	mov	r4,r17
  83ddb4:	91800144 	addi	r6,r18,5
  83ddb8:	318d883a 	add	r6,r6,r6
  83ddbc:	318d883a 	add	r6,r6,r6
  83ddc0:	08458a80 	call	8458a8 <_calloc_r>
  83ddc4:	103ff626 	beq	r2,zero,83dda0 <__alt_mem_epcs_flash_controller_0+0xff834da0>
  83ddc8:	14000115 	stw	r16,4(r2)
  83ddcc:	14800215 	stw	r18,8(r2)
  83ddd0:	003fe606 	br	83dd6c <__alt_mem_epcs_flash_controller_0+0xff834d6c>

0083ddd4 <_Bfree>:
  83ddd4:	28000826 	beq	r5,zero,83ddf8 <_Bfree+0x24>
  83ddd8:	28c00117 	ldw	r3,4(r5)
  83dddc:	20801317 	ldw	r2,76(r4)
  83dde0:	18c7883a 	add	r3,r3,r3
  83dde4:	18c7883a 	add	r3,r3,r3
  83dde8:	10c5883a 	add	r2,r2,r3
  83ddec:	10c00017 	ldw	r3,0(r2)
  83ddf0:	28c00015 	stw	r3,0(r5)
  83ddf4:	11400015 	stw	r5,0(r2)
  83ddf8:	f800283a 	ret

0083ddfc <__multadd>:
  83ddfc:	defff704 	addi	sp,sp,-36
  83de00:	dc800215 	stw	r18,8(sp)
  83de04:	2c800417 	ldw	r18,16(r5)
  83de08:	dd800615 	stw	r22,24(sp)
  83de0c:	dd400515 	stw	r21,20(sp)
  83de10:	dd000415 	stw	r20,16(sp)
  83de14:	dcc00315 	stw	r19,12(sp)
  83de18:	dc400115 	stw	r17,4(sp)
  83de1c:	dc000015 	stw	r16,0(sp)
  83de20:	dfc00815 	stw	ra,32(sp)
  83de24:	ddc00715 	stw	r23,28(sp)
  83de28:	2827883a 	mov	r19,r5
  83de2c:	2029883a 	mov	r20,r4
  83de30:	3023883a 	mov	r17,r6
  83de34:	3821883a 	mov	r16,r7
  83de38:	2d400504 	addi	r21,r5,20
  83de3c:	002d883a 	mov	r22,zero
  83de40:	adc00017 	ldw	r23,0(r21)
  83de44:	880b883a 	mov	r5,r17
  83de48:	ad400104 	addi	r21,r21,4
  83de4c:	b93fffcc 	andi	r4,r23,65535
  83de50:	08301e80 	call	8301e8 <__mulsi3>
  83de54:	b808d43a 	srli	r4,r23,16
  83de58:	880b883a 	mov	r5,r17
  83de5c:	1421883a 	add	r16,r2,r16
  83de60:	08301e80 	call	8301e8 <__mulsi3>
  83de64:	800ed43a 	srli	r7,r16,16
  83de68:	80ffffcc 	andi	r3,r16,65535
  83de6c:	b5800044 	addi	r22,r22,1
  83de70:	11c5883a 	add	r2,r2,r7
  83de74:	100e943a 	slli	r7,r2,16
  83de78:	1020d43a 	srli	r16,r2,16
  83de7c:	38c7883a 	add	r3,r7,r3
  83de80:	a8ffff15 	stw	r3,-4(r21)
  83de84:	b4bfee16 	blt	r22,r18,83de40 <__alt_mem_epcs_flash_controller_0+0xff834e40>
  83de88:	80000926 	beq	r16,zero,83deb0 <__multadd+0xb4>
  83de8c:	98800217 	ldw	r2,8(r19)
  83de90:	9080130e 	bge	r18,r2,83dee0 <__multadd+0xe4>
  83de94:	90800144 	addi	r2,r18,5
  83de98:	1085883a 	add	r2,r2,r2
  83de9c:	1085883a 	add	r2,r2,r2
  83dea0:	9885883a 	add	r2,r19,r2
  83dea4:	14000015 	stw	r16,0(r2)
  83dea8:	94800044 	addi	r18,r18,1
  83deac:	9c800415 	stw	r18,16(r19)
  83deb0:	9805883a 	mov	r2,r19
  83deb4:	dfc00817 	ldw	ra,32(sp)
  83deb8:	ddc00717 	ldw	r23,28(sp)
  83debc:	dd800617 	ldw	r22,24(sp)
  83dec0:	dd400517 	ldw	r21,20(sp)
  83dec4:	dd000417 	ldw	r20,16(sp)
  83dec8:	dcc00317 	ldw	r19,12(sp)
  83decc:	dc800217 	ldw	r18,8(sp)
  83ded0:	dc400117 	ldw	r17,4(sp)
  83ded4:	dc000017 	ldw	r16,0(sp)
  83ded8:	dec00904 	addi	sp,sp,36
  83dedc:	f800283a 	ret
  83dee0:	99400117 	ldw	r5,4(r19)
  83dee4:	a009883a 	mov	r4,r20
  83dee8:	29400044 	addi	r5,r5,1
  83deec:	083dd2c0 	call	83dd2c <_Balloc>
  83def0:	99800417 	ldw	r6,16(r19)
  83def4:	99400304 	addi	r5,r19,12
  83def8:	11000304 	addi	r4,r2,12
  83defc:	31800084 	addi	r6,r6,2
  83df00:	318d883a 	add	r6,r6,r6
  83df04:	318d883a 	add	r6,r6,r6
  83df08:	1023883a 	mov	r17,r2
  83df0c:	0833c4c0 	call	833c4c <memcpy>
  83df10:	98000a26 	beq	r19,zero,83df3c <__multadd+0x140>
  83df14:	98c00117 	ldw	r3,4(r19)
  83df18:	a0801317 	ldw	r2,76(r20)
  83df1c:	18c7883a 	add	r3,r3,r3
  83df20:	18c7883a 	add	r3,r3,r3
  83df24:	10c5883a 	add	r2,r2,r3
  83df28:	10c00017 	ldw	r3,0(r2)
  83df2c:	98c00015 	stw	r3,0(r19)
  83df30:	14c00015 	stw	r19,0(r2)
  83df34:	8827883a 	mov	r19,r17
  83df38:	003fd606 	br	83de94 <__alt_mem_epcs_flash_controller_0+0xff834e94>
  83df3c:	8827883a 	mov	r19,r17
  83df40:	003fd406 	br	83de94 <__alt_mem_epcs_flash_controller_0+0xff834e94>

0083df44 <__s2b>:
  83df44:	defff904 	addi	sp,sp,-28
  83df48:	dc400115 	stw	r17,4(sp)
  83df4c:	dc000015 	stw	r16,0(sp)
  83df50:	2023883a 	mov	r17,r4
  83df54:	2821883a 	mov	r16,r5
  83df58:	39000204 	addi	r4,r7,8
  83df5c:	01400244 	movi	r5,9
  83df60:	dcc00315 	stw	r19,12(sp)
  83df64:	dc800215 	stw	r18,8(sp)
  83df68:	dfc00615 	stw	ra,24(sp)
  83df6c:	dd400515 	stw	r21,20(sp)
  83df70:	dd000415 	stw	r20,16(sp)
  83df74:	3825883a 	mov	r18,r7
  83df78:	3027883a 	mov	r19,r6
  83df7c:	08300340 	call	830034 <__divsi3>
  83df80:	00c00044 	movi	r3,1
  83df84:	000b883a 	mov	r5,zero
  83df88:	1880030e 	bge	r3,r2,83df98 <__s2b+0x54>
  83df8c:	18c7883a 	add	r3,r3,r3
  83df90:	29400044 	addi	r5,r5,1
  83df94:	18bffd16 	blt	r3,r2,83df8c <__alt_mem_epcs_flash_controller_0+0xff834f8c>
  83df98:	8809883a 	mov	r4,r17
  83df9c:	083dd2c0 	call	83dd2c <_Balloc>
  83dfa0:	d8c00717 	ldw	r3,28(sp)
  83dfa4:	10c00515 	stw	r3,20(r2)
  83dfa8:	00c00044 	movi	r3,1
  83dfac:	10c00415 	stw	r3,16(r2)
  83dfb0:	00c00244 	movi	r3,9
  83dfb4:	1cc0210e 	bge	r3,r19,83e03c <__s2b+0xf8>
  83dfb8:	80eb883a 	add	r21,r16,r3
  83dfbc:	a829883a 	mov	r20,r21
  83dfc0:	84e1883a 	add	r16,r16,r19
  83dfc4:	a1c00007 	ldb	r7,0(r20)
  83dfc8:	01800284 	movi	r6,10
  83dfcc:	a5000044 	addi	r20,r20,1
  83dfd0:	100b883a 	mov	r5,r2
  83dfd4:	39fff404 	addi	r7,r7,-48
  83dfd8:	8809883a 	mov	r4,r17
  83dfdc:	083ddfc0 	call	83ddfc <__multadd>
  83dfe0:	a43ff81e 	bne	r20,r16,83dfc4 <__alt_mem_epcs_flash_controller_0+0xff834fc4>
  83dfe4:	ace1883a 	add	r16,r21,r19
  83dfe8:	843ffe04 	addi	r16,r16,-8
  83dfec:	9c800a0e 	bge	r19,r18,83e018 <__s2b+0xd4>
  83dff0:	94e5c83a 	sub	r18,r18,r19
  83dff4:	84a5883a 	add	r18,r16,r18
  83dff8:	81c00007 	ldb	r7,0(r16)
  83dffc:	01800284 	movi	r6,10
  83e000:	84000044 	addi	r16,r16,1
  83e004:	100b883a 	mov	r5,r2
  83e008:	39fff404 	addi	r7,r7,-48
  83e00c:	8809883a 	mov	r4,r17
  83e010:	083ddfc0 	call	83ddfc <__multadd>
  83e014:	84bff81e 	bne	r16,r18,83dff8 <__alt_mem_epcs_flash_controller_0+0xff834ff8>
  83e018:	dfc00617 	ldw	ra,24(sp)
  83e01c:	dd400517 	ldw	r21,20(sp)
  83e020:	dd000417 	ldw	r20,16(sp)
  83e024:	dcc00317 	ldw	r19,12(sp)
  83e028:	dc800217 	ldw	r18,8(sp)
  83e02c:	dc400117 	ldw	r17,4(sp)
  83e030:	dc000017 	ldw	r16,0(sp)
  83e034:	dec00704 	addi	sp,sp,28
  83e038:	f800283a 	ret
  83e03c:	84000284 	addi	r16,r16,10
  83e040:	1827883a 	mov	r19,r3
  83e044:	003fe906 	br	83dfec <__alt_mem_epcs_flash_controller_0+0xff834fec>

0083e048 <__hi0bits>:
  83e048:	20bfffec 	andhi	r2,r4,65535
  83e04c:	1000141e 	bne	r2,zero,83e0a0 <__hi0bits+0x58>
  83e050:	2008943a 	slli	r4,r4,16
  83e054:	00800404 	movi	r2,16
  83e058:	20ffc02c 	andhi	r3,r4,65280
  83e05c:	1800021e 	bne	r3,zero,83e068 <__hi0bits+0x20>
  83e060:	2008923a 	slli	r4,r4,8
  83e064:	10800204 	addi	r2,r2,8
  83e068:	20fc002c 	andhi	r3,r4,61440
  83e06c:	1800021e 	bne	r3,zero,83e078 <__hi0bits+0x30>
  83e070:	2008913a 	slli	r4,r4,4
  83e074:	10800104 	addi	r2,r2,4
  83e078:	20f0002c 	andhi	r3,r4,49152
  83e07c:	1800031e 	bne	r3,zero,83e08c <__hi0bits+0x44>
  83e080:	2109883a 	add	r4,r4,r4
  83e084:	10800084 	addi	r2,r2,2
  83e088:	2109883a 	add	r4,r4,r4
  83e08c:	20000316 	blt	r4,zero,83e09c <__hi0bits+0x54>
  83e090:	2110002c 	andhi	r4,r4,16384
  83e094:	2000041e 	bne	r4,zero,83e0a8 <__hi0bits+0x60>
  83e098:	00800804 	movi	r2,32
  83e09c:	f800283a 	ret
  83e0a0:	0005883a 	mov	r2,zero
  83e0a4:	003fec06 	br	83e058 <__alt_mem_epcs_flash_controller_0+0xff835058>
  83e0a8:	10800044 	addi	r2,r2,1
  83e0ac:	f800283a 	ret

0083e0b0 <__lo0bits>:
  83e0b0:	20c00017 	ldw	r3,0(r4)
  83e0b4:	188001cc 	andi	r2,r3,7
  83e0b8:	10000826 	beq	r2,zero,83e0dc <__lo0bits+0x2c>
  83e0bc:	1880004c 	andi	r2,r3,1
  83e0c0:	1000211e 	bne	r2,zero,83e148 <__lo0bits+0x98>
  83e0c4:	1880008c 	andi	r2,r3,2
  83e0c8:	1000211e 	bne	r2,zero,83e150 <__lo0bits+0xa0>
  83e0cc:	1806d0ba 	srli	r3,r3,2
  83e0d0:	00800084 	movi	r2,2
  83e0d4:	20c00015 	stw	r3,0(r4)
  83e0d8:	f800283a 	ret
  83e0dc:	18bfffcc 	andi	r2,r3,65535
  83e0e0:	10001326 	beq	r2,zero,83e130 <__lo0bits+0x80>
  83e0e4:	0005883a 	mov	r2,zero
  83e0e8:	19403fcc 	andi	r5,r3,255
  83e0ec:	2800021e 	bne	r5,zero,83e0f8 <__lo0bits+0x48>
  83e0f0:	1806d23a 	srli	r3,r3,8
  83e0f4:	10800204 	addi	r2,r2,8
  83e0f8:	194003cc 	andi	r5,r3,15
  83e0fc:	2800021e 	bne	r5,zero,83e108 <__lo0bits+0x58>
  83e100:	1806d13a 	srli	r3,r3,4
  83e104:	10800104 	addi	r2,r2,4
  83e108:	194000cc 	andi	r5,r3,3
  83e10c:	2800021e 	bne	r5,zero,83e118 <__lo0bits+0x68>
  83e110:	1806d0ba 	srli	r3,r3,2
  83e114:	10800084 	addi	r2,r2,2
  83e118:	1940004c 	andi	r5,r3,1
  83e11c:	2800081e 	bne	r5,zero,83e140 <__lo0bits+0x90>
  83e120:	1806d07a 	srli	r3,r3,1
  83e124:	1800051e 	bne	r3,zero,83e13c <__lo0bits+0x8c>
  83e128:	00800804 	movi	r2,32
  83e12c:	f800283a 	ret
  83e130:	1806d43a 	srli	r3,r3,16
  83e134:	00800404 	movi	r2,16
  83e138:	003feb06 	br	83e0e8 <__alt_mem_epcs_flash_controller_0+0xff8350e8>
  83e13c:	10800044 	addi	r2,r2,1
  83e140:	20c00015 	stw	r3,0(r4)
  83e144:	f800283a 	ret
  83e148:	0005883a 	mov	r2,zero
  83e14c:	f800283a 	ret
  83e150:	1806d07a 	srli	r3,r3,1
  83e154:	00800044 	movi	r2,1
  83e158:	20c00015 	stw	r3,0(r4)
  83e15c:	f800283a 	ret

0083e160 <__i2b>:
  83e160:	defffd04 	addi	sp,sp,-12
  83e164:	dc000015 	stw	r16,0(sp)
  83e168:	04000044 	movi	r16,1
  83e16c:	dc400115 	stw	r17,4(sp)
  83e170:	2823883a 	mov	r17,r5
  83e174:	800b883a 	mov	r5,r16
  83e178:	dfc00215 	stw	ra,8(sp)
  83e17c:	083dd2c0 	call	83dd2c <_Balloc>
  83e180:	14400515 	stw	r17,20(r2)
  83e184:	14000415 	stw	r16,16(r2)
  83e188:	dfc00217 	ldw	ra,8(sp)
  83e18c:	dc400117 	ldw	r17,4(sp)
  83e190:	dc000017 	ldw	r16,0(sp)
  83e194:	dec00304 	addi	sp,sp,12
  83e198:	f800283a 	ret

0083e19c <__multiply>:
  83e19c:	deffef04 	addi	sp,sp,-68
  83e1a0:	dc400815 	stw	r17,32(sp)
  83e1a4:	dc000715 	stw	r16,28(sp)
  83e1a8:	34400417 	ldw	r17,16(r6)
  83e1ac:	2c000417 	ldw	r16,16(r5)
  83e1b0:	dd800d15 	stw	r22,52(sp)
  83e1b4:	dc800915 	stw	r18,36(sp)
  83e1b8:	dfc01015 	stw	ra,64(sp)
  83e1bc:	df000f15 	stw	fp,60(sp)
  83e1c0:	ddc00e15 	stw	r23,56(sp)
  83e1c4:	dd400c15 	stw	r21,48(sp)
  83e1c8:	dd000b15 	stw	r20,44(sp)
  83e1cc:	dcc00a15 	stw	r19,40(sp)
  83e1d0:	2825883a 	mov	r18,r5
  83e1d4:	302d883a 	mov	r22,r6
  83e1d8:	8440050e 	bge	r16,r17,83e1f0 <__multiply+0x54>
  83e1dc:	8007883a 	mov	r3,r16
  83e1e0:	3025883a 	mov	r18,r6
  83e1e4:	8821883a 	mov	r16,r17
  83e1e8:	282d883a 	mov	r22,r5
  83e1ec:	1823883a 	mov	r17,r3
  83e1f0:	90800217 	ldw	r2,8(r18)
  83e1f4:	8447883a 	add	r3,r16,r17
  83e1f8:	d8c00215 	stw	r3,8(sp)
  83e1fc:	91400117 	ldw	r5,4(r18)
  83e200:	10c0010e 	bge	r2,r3,83e208 <__multiply+0x6c>
  83e204:	29400044 	addi	r5,r5,1
  83e208:	083dd2c0 	call	83dd2c <_Balloc>
  83e20c:	d8c00217 	ldw	r3,8(sp)
  83e210:	d8800615 	stw	r2,24(sp)
  83e214:	18eb883a 	add	r21,r3,r3
  83e218:	ad6b883a 	add	r21,r21,r21
  83e21c:	10c00504 	addi	r3,r2,20
  83e220:	1d6b883a 	add	r21,r3,r21
  83e224:	d8c00115 	stw	r3,4(sp)
  83e228:	dd400315 	stw	r21,12(sp)
  83e22c:	1805883a 	mov	r2,r3
  83e230:	1d40042e 	bgeu	r3,r21,83e244 <__multiply+0xa8>
  83e234:	d8c00317 	ldw	r3,12(sp)
  83e238:	10000015 	stw	zero,0(r2)
  83e23c:	10800104 	addi	r2,r2,4
  83e240:	10fffc36 	bltu	r2,r3,83e234 <__alt_mem_epcs_flash_controller_0+0xff835234>
  83e244:	8c63883a 	add	r17,r17,r17
  83e248:	b5800504 	addi	r22,r22,20
  83e24c:	8c63883a 	add	r17,r17,r17
  83e250:	94800504 	addi	r18,r18,20
  83e254:	8421883a 	add	r16,r16,r16
  83e258:	b463883a 	add	r17,r22,r17
  83e25c:	8421883a 	add	r16,r16,r16
  83e260:	dd800015 	stw	r22,0(sp)
  83e264:	dc800415 	stw	r18,16(sp)
  83e268:	dc400515 	stw	r17,20(sp)
  83e26c:	9429883a 	add	r20,r18,r16
  83e270:	b4404f2e 	bgeu	r22,r17,83e3b0 <__multiply+0x214>
  83e274:	d8c00017 	ldw	r3,0(sp)
  83e278:	1c800017 	ldw	r18,0(r3)
  83e27c:	947fffcc 	andi	r17,r18,65535
  83e280:	88001e26 	beq	r17,zero,83e2fc <__multiply+0x160>
  83e284:	dd800117 	ldw	r22,4(sp)
  83e288:	dd400417 	ldw	r21,16(sp)
  83e28c:	0027883a 	mov	r19,zero
  83e290:	ac800017 	ldw	r18,0(r21)
  83e294:	b4000017 	ldw	r16,0(r22)
  83e298:	880b883a 	mov	r5,r17
  83e29c:	913fffcc 	andi	r4,r18,65535
  83e2a0:	08301e80 	call	8301e8 <__mulsi3>
  83e2a4:	9008d43a 	srli	r4,r18,16
  83e2a8:	84bfffcc 	andi	r18,r16,65535
  83e2ac:	1485883a 	add	r2,r2,r18
  83e2b0:	14e5883a 	add	r18,r2,r19
  83e2b4:	8020d43a 	srli	r16,r16,16
  83e2b8:	9026d43a 	srli	r19,r18,16
  83e2bc:	880b883a 	mov	r5,r17
  83e2c0:	08301e80 	call	8301e8 <__mulsi3>
  83e2c4:	1405883a 	add	r2,r2,r16
  83e2c8:	14e1883a 	add	r16,r2,r19
  83e2cc:	90ffffcc 	andi	r3,r18,65535
  83e2d0:	8024943a 	slli	r18,r16,16
  83e2d4:	ad400104 	addi	r21,r21,4
  83e2d8:	b005883a 	mov	r2,r22
  83e2dc:	90c6b03a 	or	r3,r18,r3
  83e2e0:	b0c00015 	stw	r3,0(r22)
  83e2e4:	8026d43a 	srli	r19,r16,16
  83e2e8:	b5800104 	addi	r22,r22,4
  83e2ec:	ad3fe836 	bltu	r21,r20,83e290 <__alt_mem_epcs_flash_controller_0+0xff835290>
  83e2f0:	d8c00017 	ldw	r3,0(sp)
  83e2f4:	14c00115 	stw	r19,4(r2)
  83e2f8:	1c800017 	ldw	r18,0(r3)
  83e2fc:	9024d43a 	srli	r18,r18,16
  83e300:	90002226 	beq	r18,zero,83e38c <__multiply+0x1f0>
  83e304:	d8c00117 	ldw	r3,4(sp)
  83e308:	dd800417 	ldw	r22,16(sp)
  83e30c:	002f883a 	mov	r23,zero
  83e310:	1f000017 	ldw	fp,0(r3)
  83e314:	1823883a 	mov	r17,r3
  83e318:	182b883a 	mov	r21,r3
  83e31c:	e021883a 	mov	r16,fp
  83e320:	00000106 	br	83e328 <__multiply+0x18c>
  83e324:	982b883a 	mov	r21,r19
  83e328:	b100000b 	ldhu	r4,0(r22)
  83e32c:	8020d43a 	srli	r16,r16,16
  83e330:	900b883a 	mov	r5,r18
  83e334:	08301e80 	call	8301e8 <__mulsi3>
  83e338:	1405883a 	add	r2,r2,r16
  83e33c:	15ef883a 	add	r23,r2,r23
  83e340:	b804943a 	slli	r2,r23,16
  83e344:	e0ffffcc 	andi	r3,fp,65535
  83e348:	8c400104 	addi	r17,r17,4
  83e34c:	10c6b03a 	or	r3,r2,r3
  83e350:	88ffff15 	stw	r3,-4(r17)
  83e354:	b5800104 	addi	r22,r22,4
  83e358:	b13fff17 	ldw	r4,-4(r22)
  83e35c:	acc00104 	addi	r19,r21,4
  83e360:	900b883a 	mov	r5,r18
  83e364:	2008d43a 	srli	r4,r4,16
  83e368:	9c000017 	ldw	r16,0(r19)
  83e36c:	08301e80 	call	8301e8 <__mulsi3>
  83e370:	b806d43a 	srli	r3,r23,16
  83e374:	813fffcc 	andi	r4,r16,65535
  83e378:	1105883a 	add	r2,r2,r4
  83e37c:	10f9883a 	add	fp,r2,r3
  83e380:	e02ed43a 	srli	r23,fp,16
  83e384:	b53fe736 	bltu	r22,r20,83e324 <__alt_mem_epcs_flash_controller_0+0xff835324>
  83e388:	af000115 	stw	fp,4(r21)
  83e38c:	d8c00017 	ldw	r3,0(sp)
  83e390:	d9000517 	ldw	r4,20(sp)
  83e394:	18c00104 	addi	r3,r3,4
  83e398:	d8c00015 	stw	r3,0(sp)
  83e39c:	d8c00117 	ldw	r3,4(sp)
  83e3a0:	18c00104 	addi	r3,r3,4
  83e3a4:	d8c00115 	stw	r3,4(sp)
  83e3a8:	d8c00017 	ldw	r3,0(sp)
  83e3ac:	193fb136 	bltu	r3,r4,83e274 <__alt_mem_epcs_flash_controller_0+0xff835274>
  83e3b0:	d8c00217 	ldw	r3,8(sp)
  83e3b4:	00c00c0e 	bge	zero,r3,83e3e8 <__multiply+0x24c>
  83e3b8:	d8c00317 	ldw	r3,12(sp)
  83e3bc:	18bfff17 	ldw	r2,-4(r3)
  83e3c0:	1d7fff04 	addi	r21,r3,-4
  83e3c4:	10000326 	beq	r2,zero,83e3d4 <__multiply+0x238>
  83e3c8:	00000706 	br	83e3e8 <__multiply+0x24c>
  83e3cc:	a8800017 	ldw	r2,0(r21)
  83e3d0:	1000051e 	bne	r2,zero,83e3e8 <__multiply+0x24c>
  83e3d4:	d8c00217 	ldw	r3,8(sp)
  83e3d8:	ad7fff04 	addi	r21,r21,-4
  83e3dc:	18ffffc4 	addi	r3,r3,-1
  83e3e0:	d8c00215 	stw	r3,8(sp)
  83e3e4:	183ff91e 	bne	r3,zero,83e3cc <__alt_mem_epcs_flash_controller_0+0xff8353cc>
  83e3e8:	d8c00617 	ldw	r3,24(sp)
  83e3ec:	d9000217 	ldw	r4,8(sp)
  83e3f0:	1805883a 	mov	r2,r3
  83e3f4:	19000415 	stw	r4,16(r3)
  83e3f8:	dfc01017 	ldw	ra,64(sp)
  83e3fc:	df000f17 	ldw	fp,60(sp)
  83e400:	ddc00e17 	ldw	r23,56(sp)
  83e404:	dd800d17 	ldw	r22,52(sp)
  83e408:	dd400c17 	ldw	r21,48(sp)
  83e40c:	dd000b17 	ldw	r20,44(sp)
  83e410:	dcc00a17 	ldw	r19,40(sp)
  83e414:	dc800917 	ldw	r18,36(sp)
  83e418:	dc400817 	ldw	r17,32(sp)
  83e41c:	dc000717 	ldw	r16,28(sp)
  83e420:	dec01104 	addi	sp,sp,68
  83e424:	f800283a 	ret

0083e428 <__pow5mult>:
  83e428:	defffa04 	addi	sp,sp,-24
  83e42c:	dcc00315 	stw	r19,12(sp)
  83e430:	dc000015 	stw	r16,0(sp)
  83e434:	dfc00515 	stw	ra,20(sp)
  83e438:	dd000415 	stw	r20,16(sp)
  83e43c:	dc800215 	stw	r18,8(sp)
  83e440:	dc400115 	stw	r17,4(sp)
  83e444:	308000cc 	andi	r2,r6,3
  83e448:	3021883a 	mov	r16,r6
  83e44c:	2027883a 	mov	r19,r4
  83e450:	10002f1e 	bne	r2,zero,83e510 <__pow5mult+0xe8>
  83e454:	2825883a 	mov	r18,r5
  83e458:	8021d0ba 	srai	r16,r16,2
  83e45c:	80001a26 	beq	r16,zero,83e4c8 <__pow5mult+0xa0>
  83e460:	9c401217 	ldw	r17,72(r19)
  83e464:	8800061e 	bne	r17,zero,83e480 <__pow5mult+0x58>
  83e468:	00003406 	br	83e53c <__pow5mult+0x114>
  83e46c:	8021d07a 	srai	r16,r16,1
  83e470:	80001526 	beq	r16,zero,83e4c8 <__pow5mult+0xa0>
  83e474:	88800017 	ldw	r2,0(r17)
  83e478:	10001c26 	beq	r2,zero,83e4ec <__pow5mult+0xc4>
  83e47c:	1023883a 	mov	r17,r2
  83e480:	8080004c 	andi	r2,r16,1
  83e484:	103ff926 	beq	r2,zero,83e46c <__alt_mem_epcs_flash_controller_0+0xff83546c>
  83e488:	880d883a 	mov	r6,r17
  83e48c:	900b883a 	mov	r5,r18
  83e490:	9809883a 	mov	r4,r19
  83e494:	083e19c0 	call	83e19c <__multiply>
  83e498:	90001b26 	beq	r18,zero,83e508 <__pow5mult+0xe0>
  83e49c:	91000117 	ldw	r4,4(r18)
  83e4a0:	98c01317 	ldw	r3,76(r19)
  83e4a4:	8021d07a 	srai	r16,r16,1
  83e4a8:	2109883a 	add	r4,r4,r4
  83e4ac:	2109883a 	add	r4,r4,r4
  83e4b0:	1907883a 	add	r3,r3,r4
  83e4b4:	19000017 	ldw	r4,0(r3)
  83e4b8:	91000015 	stw	r4,0(r18)
  83e4bc:	1c800015 	stw	r18,0(r3)
  83e4c0:	1025883a 	mov	r18,r2
  83e4c4:	803feb1e 	bne	r16,zero,83e474 <__alt_mem_epcs_flash_controller_0+0xff835474>
  83e4c8:	9005883a 	mov	r2,r18
  83e4cc:	dfc00517 	ldw	ra,20(sp)
  83e4d0:	dd000417 	ldw	r20,16(sp)
  83e4d4:	dcc00317 	ldw	r19,12(sp)
  83e4d8:	dc800217 	ldw	r18,8(sp)
  83e4dc:	dc400117 	ldw	r17,4(sp)
  83e4e0:	dc000017 	ldw	r16,0(sp)
  83e4e4:	dec00604 	addi	sp,sp,24
  83e4e8:	f800283a 	ret
  83e4ec:	880d883a 	mov	r6,r17
  83e4f0:	880b883a 	mov	r5,r17
  83e4f4:	9809883a 	mov	r4,r19
  83e4f8:	083e19c0 	call	83e19c <__multiply>
  83e4fc:	88800015 	stw	r2,0(r17)
  83e500:	10000015 	stw	zero,0(r2)
  83e504:	003fdd06 	br	83e47c <__alt_mem_epcs_flash_controller_0+0xff83547c>
  83e508:	1025883a 	mov	r18,r2
  83e50c:	003fd706 	br	83e46c <__alt_mem_epcs_flash_controller_0+0xff83546c>
  83e510:	10bfffc4 	addi	r2,r2,-1
  83e514:	1085883a 	add	r2,r2,r2
  83e518:	00c021b4 	movhi	r3,134
  83e51c:	18e6c804 	addi	r3,r3,-25824
  83e520:	1085883a 	add	r2,r2,r2
  83e524:	1885883a 	add	r2,r3,r2
  83e528:	11800017 	ldw	r6,0(r2)
  83e52c:	000f883a 	mov	r7,zero
  83e530:	083ddfc0 	call	83ddfc <__multadd>
  83e534:	1025883a 	mov	r18,r2
  83e538:	003fc706 	br	83e458 <__alt_mem_epcs_flash_controller_0+0xff835458>
  83e53c:	05000044 	movi	r20,1
  83e540:	a00b883a 	mov	r5,r20
  83e544:	9809883a 	mov	r4,r19
  83e548:	083dd2c0 	call	83dd2c <_Balloc>
  83e54c:	1023883a 	mov	r17,r2
  83e550:	00809c44 	movi	r2,625
  83e554:	88800515 	stw	r2,20(r17)
  83e558:	8d000415 	stw	r20,16(r17)
  83e55c:	9c401215 	stw	r17,72(r19)
  83e560:	88000015 	stw	zero,0(r17)
  83e564:	003fc606 	br	83e480 <__alt_mem_epcs_flash_controller_0+0xff835480>

0083e568 <__lshift>:
  83e568:	defff904 	addi	sp,sp,-28
  83e56c:	dd400515 	stw	r21,20(sp)
  83e570:	dcc00315 	stw	r19,12(sp)
  83e574:	302bd17a 	srai	r21,r6,5
  83e578:	2cc00417 	ldw	r19,16(r5)
  83e57c:	28800217 	ldw	r2,8(r5)
  83e580:	dd000415 	stw	r20,16(sp)
  83e584:	ace7883a 	add	r19,r21,r19
  83e588:	dc800215 	stw	r18,8(sp)
  83e58c:	dc400115 	stw	r17,4(sp)
  83e590:	dc000015 	stw	r16,0(sp)
  83e594:	dfc00615 	stw	ra,24(sp)
  83e598:	9c000044 	addi	r16,r19,1
  83e59c:	2823883a 	mov	r17,r5
  83e5a0:	3029883a 	mov	r20,r6
  83e5a4:	2025883a 	mov	r18,r4
  83e5a8:	29400117 	ldw	r5,4(r5)
  83e5ac:	1400030e 	bge	r2,r16,83e5bc <__lshift+0x54>
  83e5b0:	1085883a 	add	r2,r2,r2
  83e5b4:	29400044 	addi	r5,r5,1
  83e5b8:	143ffd16 	blt	r2,r16,83e5b0 <__alt_mem_epcs_flash_controller_0+0xff8355b0>
  83e5bc:	9009883a 	mov	r4,r18
  83e5c0:	083dd2c0 	call	83dd2c <_Balloc>
  83e5c4:	10c00504 	addi	r3,r2,20
  83e5c8:	0540070e 	bge	zero,r21,83e5e8 <__lshift+0x80>
  83e5cc:	ad6b883a 	add	r21,r21,r21
  83e5d0:	ad6b883a 	add	r21,r21,r21
  83e5d4:	1809883a 	mov	r4,r3
  83e5d8:	1d47883a 	add	r3,r3,r21
  83e5dc:	20000015 	stw	zero,0(r4)
  83e5e0:	21000104 	addi	r4,r4,4
  83e5e4:	193ffd1e 	bne	r3,r4,83e5dc <__alt_mem_epcs_flash_controller_0+0xff8355dc>
  83e5e8:	8a000417 	ldw	r8,16(r17)
  83e5ec:	89000504 	addi	r4,r17,20
  83e5f0:	a18007cc 	andi	r6,r20,31
  83e5f4:	4211883a 	add	r8,r8,r8
  83e5f8:	4211883a 	add	r8,r8,r8
  83e5fc:	2211883a 	add	r8,r4,r8
  83e600:	30002326 	beq	r6,zero,83e690 <__lshift+0x128>
  83e604:	02400804 	movi	r9,32
  83e608:	4993c83a 	sub	r9,r9,r6
  83e60c:	000b883a 	mov	r5,zero
  83e610:	21c00017 	ldw	r7,0(r4)
  83e614:	1815883a 	mov	r10,r3
  83e618:	18c00104 	addi	r3,r3,4
  83e61c:	398e983a 	sll	r7,r7,r6
  83e620:	21000104 	addi	r4,r4,4
  83e624:	394ab03a 	or	r5,r7,r5
  83e628:	197fff15 	stw	r5,-4(r3)
  83e62c:	217fff17 	ldw	r5,-4(r4)
  83e630:	2a4ad83a 	srl	r5,r5,r9
  83e634:	223ff636 	bltu	r4,r8,83e610 <__alt_mem_epcs_flash_controller_0+0xff835610>
  83e638:	51400115 	stw	r5,4(r10)
  83e63c:	28001a1e 	bne	r5,zero,83e6a8 <__lshift+0x140>
  83e640:	843fffc4 	addi	r16,r16,-1
  83e644:	14000415 	stw	r16,16(r2)
  83e648:	88000826 	beq	r17,zero,83e66c <__lshift+0x104>
  83e64c:	89000117 	ldw	r4,4(r17)
  83e650:	90c01317 	ldw	r3,76(r18)
  83e654:	2109883a 	add	r4,r4,r4
  83e658:	2109883a 	add	r4,r4,r4
  83e65c:	1907883a 	add	r3,r3,r4
  83e660:	19000017 	ldw	r4,0(r3)
  83e664:	89000015 	stw	r4,0(r17)
  83e668:	1c400015 	stw	r17,0(r3)
  83e66c:	dfc00617 	ldw	ra,24(sp)
  83e670:	dd400517 	ldw	r21,20(sp)
  83e674:	dd000417 	ldw	r20,16(sp)
  83e678:	dcc00317 	ldw	r19,12(sp)
  83e67c:	dc800217 	ldw	r18,8(sp)
  83e680:	dc400117 	ldw	r17,4(sp)
  83e684:	dc000017 	ldw	r16,0(sp)
  83e688:	dec00704 	addi	sp,sp,28
  83e68c:	f800283a 	ret
  83e690:	21400017 	ldw	r5,0(r4)
  83e694:	18c00104 	addi	r3,r3,4
  83e698:	21000104 	addi	r4,r4,4
  83e69c:	197fff15 	stw	r5,-4(r3)
  83e6a0:	223ffb36 	bltu	r4,r8,83e690 <__alt_mem_epcs_flash_controller_0+0xff835690>
  83e6a4:	003fe606 	br	83e640 <__alt_mem_epcs_flash_controller_0+0xff835640>
  83e6a8:	9c000084 	addi	r16,r19,2
  83e6ac:	003fe406 	br	83e640 <__alt_mem_epcs_flash_controller_0+0xff835640>

0083e6b0 <__mcmp>:
  83e6b0:	20800417 	ldw	r2,16(r4)
  83e6b4:	28c00417 	ldw	r3,16(r5)
  83e6b8:	10c5c83a 	sub	r2,r2,r3
  83e6bc:	1000111e 	bne	r2,zero,83e704 <__mcmp+0x54>
  83e6c0:	18c7883a 	add	r3,r3,r3
  83e6c4:	18c7883a 	add	r3,r3,r3
  83e6c8:	21000504 	addi	r4,r4,20
  83e6cc:	29400504 	addi	r5,r5,20
  83e6d0:	20c5883a 	add	r2,r4,r3
  83e6d4:	28cb883a 	add	r5,r5,r3
  83e6d8:	00000106 	br	83e6e0 <__mcmp+0x30>
  83e6dc:	20800a2e 	bgeu	r4,r2,83e708 <__mcmp+0x58>
  83e6e0:	10bfff04 	addi	r2,r2,-4
  83e6e4:	297fff04 	addi	r5,r5,-4
  83e6e8:	11800017 	ldw	r6,0(r2)
  83e6ec:	28c00017 	ldw	r3,0(r5)
  83e6f0:	30fffa26 	beq	r6,r3,83e6dc <__alt_mem_epcs_flash_controller_0+0xff8356dc>
  83e6f4:	30c00236 	bltu	r6,r3,83e700 <__mcmp+0x50>
  83e6f8:	00800044 	movi	r2,1
  83e6fc:	f800283a 	ret
  83e700:	00bfffc4 	movi	r2,-1
  83e704:	f800283a 	ret
  83e708:	0005883a 	mov	r2,zero
  83e70c:	f800283a 	ret

0083e710 <__mdiff>:
  83e710:	28c00417 	ldw	r3,16(r5)
  83e714:	30800417 	ldw	r2,16(r6)
  83e718:	defffa04 	addi	sp,sp,-24
  83e71c:	dcc00315 	stw	r19,12(sp)
  83e720:	dc800215 	stw	r18,8(sp)
  83e724:	dfc00515 	stw	ra,20(sp)
  83e728:	dd000415 	stw	r20,16(sp)
  83e72c:	dc400115 	stw	r17,4(sp)
  83e730:	dc000015 	stw	r16,0(sp)
  83e734:	1887c83a 	sub	r3,r3,r2
  83e738:	2825883a 	mov	r18,r5
  83e73c:	3027883a 	mov	r19,r6
  83e740:	1800141e 	bne	r3,zero,83e794 <__mdiff+0x84>
  83e744:	1085883a 	add	r2,r2,r2
  83e748:	1085883a 	add	r2,r2,r2
  83e74c:	2a000504 	addi	r8,r5,20
  83e750:	34000504 	addi	r16,r6,20
  83e754:	4087883a 	add	r3,r8,r2
  83e758:	8085883a 	add	r2,r16,r2
  83e75c:	00000106 	br	83e764 <__mdiff+0x54>
  83e760:	40c0592e 	bgeu	r8,r3,83e8c8 <__mdiff+0x1b8>
  83e764:	18ffff04 	addi	r3,r3,-4
  83e768:	10bfff04 	addi	r2,r2,-4
  83e76c:	19c00017 	ldw	r7,0(r3)
  83e770:	11400017 	ldw	r5,0(r2)
  83e774:	397ffa26 	beq	r7,r5,83e760 <__alt_mem_epcs_flash_controller_0+0xff835760>
  83e778:	3940592e 	bgeu	r7,r5,83e8e0 <__mdiff+0x1d0>
  83e77c:	9005883a 	mov	r2,r18
  83e780:	4023883a 	mov	r17,r8
  83e784:	9825883a 	mov	r18,r19
  83e788:	05000044 	movi	r20,1
  83e78c:	1027883a 	mov	r19,r2
  83e790:	00000406 	br	83e7a4 <__mdiff+0x94>
  83e794:	18005616 	blt	r3,zero,83e8f0 <__mdiff+0x1e0>
  83e798:	34400504 	addi	r17,r6,20
  83e79c:	2c000504 	addi	r16,r5,20
  83e7a0:	0029883a 	mov	r20,zero
  83e7a4:	91400117 	ldw	r5,4(r18)
  83e7a8:	083dd2c0 	call	83dd2c <_Balloc>
  83e7ac:	92400417 	ldw	r9,16(r18)
  83e7b0:	9b000417 	ldw	r12,16(r19)
  83e7b4:	12c00504 	addi	r11,r2,20
  83e7b8:	4a51883a 	add	r8,r9,r9
  83e7bc:	6319883a 	add	r12,r12,r12
  83e7c0:	4211883a 	add	r8,r8,r8
  83e7c4:	6319883a 	add	r12,r12,r12
  83e7c8:	15000315 	stw	r20,12(r2)
  83e7cc:	8211883a 	add	r8,r16,r8
  83e7d0:	8b19883a 	add	r12,r17,r12
  83e7d4:	0007883a 	mov	r3,zero
  83e7d8:	81400017 	ldw	r5,0(r16)
  83e7dc:	89c00017 	ldw	r7,0(r17)
  83e7e0:	59800104 	addi	r6,r11,4
  83e7e4:	293fffcc 	andi	r4,r5,65535
  83e7e8:	20c7883a 	add	r3,r4,r3
  83e7ec:	393fffcc 	andi	r4,r7,65535
  83e7f0:	1909c83a 	sub	r4,r3,r4
  83e7f4:	280ad43a 	srli	r5,r5,16
  83e7f8:	380ed43a 	srli	r7,r7,16
  83e7fc:	2007d43a 	srai	r3,r4,16
  83e800:	213fffcc 	andi	r4,r4,65535
  83e804:	29cbc83a 	sub	r5,r5,r7
  83e808:	28c7883a 	add	r3,r5,r3
  83e80c:	180a943a 	slli	r5,r3,16
  83e810:	8c400104 	addi	r17,r17,4
  83e814:	84000104 	addi	r16,r16,4
  83e818:	2908b03a 	or	r4,r5,r4
  83e81c:	59000015 	stw	r4,0(r11)
  83e820:	1807d43a 	srai	r3,r3,16
  83e824:	3015883a 	mov	r10,r6
  83e828:	3017883a 	mov	r11,r6
  83e82c:	8b3fea36 	bltu	r17,r12,83e7d8 <__alt_mem_epcs_flash_controller_0+0xff8357d8>
  83e830:	8200162e 	bgeu	r16,r8,83e88c <__mdiff+0x17c>
  83e834:	8017883a 	mov	r11,r16
  83e838:	59400017 	ldw	r5,0(r11)
  83e83c:	31800104 	addi	r6,r6,4
  83e840:	5ac00104 	addi	r11,r11,4
  83e844:	293fffcc 	andi	r4,r5,65535
  83e848:	20c7883a 	add	r3,r4,r3
  83e84c:	280ed43a 	srli	r7,r5,16
  83e850:	180bd43a 	srai	r5,r3,16
  83e854:	193fffcc 	andi	r4,r3,65535
  83e858:	3947883a 	add	r3,r7,r5
  83e85c:	180a943a 	slli	r5,r3,16
  83e860:	1807d43a 	srai	r3,r3,16
  83e864:	2908b03a 	or	r4,r5,r4
  83e868:	313fff15 	stw	r4,-4(r6)
  83e86c:	5a3ff236 	bltu	r11,r8,83e838 <__alt_mem_epcs_flash_controller_0+0xff835838>
  83e870:	0406303a 	nor	r3,zero,r16
  83e874:	1a07883a 	add	r3,r3,r8
  83e878:	1806d0ba 	srli	r3,r3,2
  83e87c:	18c00044 	addi	r3,r3,1
  83e880:	18c7883a 	add	r3,r3,r3
  83e884:	18c7883a 	add	r3,r3,r3
  83e888:	50d5883a 	add	r10,r10,r3
  83e88c:	50ffff04 	addi	r3,r10,-4
  83e890:	2000041e 	bne	r4,zero,83e8a4 <__mdiff+0x194>
  83e894:	18ffff04 	addi	r3,r3,-4
  83e898:	19000017 	ldw	r4,0(r3)
  83e89c:	4a7fffc4 	addi	r9,r9,-1
  83e8a0:	203ffc26 	beq	r4,zero,83e894 <__alt_mem_epcs_flash_controller_0+0xff835894>
  83e8a4:	12400415 	stw	r9,16(r2)
  83e8a8:	dfc00517 	ldw	ra,20(sp)
  83e8ac:	dd000417 	ldw	r20,16(sp)
  83e8b0:	dcc00317 	ldw	r19,12(sp)
  83e8b4:	dc800217 	ldw	r18,8(sp)
  83e8b8:	dc400117 	ldw	r17,4(sp)
  83e8bc:	dc000017 	ldw	r16,0(sp)
  83e8c0:	dec00604 	addi	sp,sp,24
  83e8c4:	f800283a 	ret
  83e8c8:	000b883a 	mov	r5,zero
  83e8cc:	083dd2c0 	call	83dd2c <_Balloc>
  83e8d0:	00c00044 	movi	r3,1
  83e8d4:	10c00415 	stw	r3,16(r2)
  83e8d8:	10000515 	stw	zero,20(r2)
  83e8dc:	003ff206 	br	83e8a8 <__alt_mem_epcs_flash_controller_0+0xff8358a8>
  83e8e0:	8023883a 	mov	r17,r16
  83e8e4:	0029883a 	mov	r20,zero
  83e8e8:	4021883a 	mov	r16,r8
  83e8ec:	003fad06 	br	83e7a4 <__alt_mem_epcs_flash_controller_0+0xff8357a4>
  83e8f0:	9005883a 	mov	r2,r18
  83e8f4:	94400504 	addi	r17,r18,20
  83e8f8:	9c000504 	addi	r16,r19,20
  83e8fc:	9825883a 	mov	r18,r19
  83e900:	05000044 	movi	r20,1
  83e904:	1027883a 	mov	r19,r2
  83e908:	003fa606 	br	83e7a4 <__alt_mem_epcs_flash_controller_0+0xff8357a4>

0083e90c <__ulp>:
  83e90c:	295ffc2c 	andhi	r5,r5,32752
  83e910:	00bf3034 	movhi	r2,64704
  83e914:	2887883a 	add	r3,r5,r2
  83e918:	00c0020e 	bge	zero,r3,83e924 <__ulp+0x18>
  83e91c:	0005883a 	mov	r2,zero
  83e920:	f800283a 	ret
  83e924:	00c7c83a 	sub	r3,zero,r3
  83e928:	1807d53a 	srai	r3,r3,20
  83e92c:	008004c4 	movi	r2,19
  83e930:	10c00b0e 	bge	r2,r3,83e960 <__ulp+0x54>
  83e934:	18bffb04 	addi	r2,r3,-20
  83e938:	01000784 	movi	r4,30
  83e93c:	0007883a 	mov	r3,zero
  83e940:	20800516 	blt	r4,r2,83e958 <__ulp+0x4c>
  83e944:	010007c4 	movi	r4,31
  83e948:	2089c83a 	sub	r4,r4,r2
  83e94c:	00800044 	movi	r2,1
  83e950:	1104983a 	sll	r2,r2,r4
  83e954:	f800283a 	ret
  83e958:	00800044 	movi	r2,1
  83e95c:	f800283a 	ret
  83e960:	01400234 	movhi	r5,8
  83e964:	28c7d83a 	sra	r3,r5,r3
  83e968:	0005883a 	mov	r2,zero
  83e96c:	f800283a 	ret

0083e970 <__b2d>:
  83e970:	defffa04 	addi	sp,sp,-24
  83e974:	dc000015 	stw	r16,0(sp)
  83e978:	24000417 	ldw	r16,16(r4)
  83e97c:	dc400115 	stw	r17,4(sp)
  83e980:	24400504 	addi	r17,r4,20
  83e984:	8421883a 	add	r16,r16,r16
  83e988:	8421883a 	add	r16,r16,r16
  83e98c:	8c21883a 	add	r16,r17,r16
  83e990:	dc800215 	stw	r18,8(sp)
  83e994:	84bfff17 	ldw	r18,-4(r16)
  83e998:	dd000415 	stw	r20,16(sp)
  83e99c:	dcc00315 	stw	r19,12(sp)
  83e9a0:	9009883a 	mov	r4,r18
  83e9a4:	2829883a 	mov	r20,r5
  83e9a8:	dfc00515 	stw	ra,20(sp)
  83e9ac:	083e0480 	call	83e048 <__hi0bits>
  83e9b0:	00c00804 	movi	r3,32
  83e9b4:	1889c83a 	sub	r4,r3,r2
  83e9b8:	a1000015 	stw	r4,0(r20)
  83e9bc:	01000284 	movi	r4,10
  83e9c0:	84ffff04 	addi	r19,r16,-4
  83e9c4:	20801216 	blt	r4,r2,83ea10 <__b2d+0xa0>
  83e9c8:	018002c4 	movi	r6,11
  83e9cc:	308dc83a 	sub	r6,r6,r2
  83e9d0:	9186d83a 	srl	r3,r18,r6
  83e9d4:	18cffc34 	orhi	r3,r3,16368
  83e9d8:	8cc0212e 	bgeu	r17,r19,83ea60 <__b2d+0xf0>
  83e9dc:	813ffe17 	ldw	r4,-8(r16)
  83e9e0:	218cd83a 	srl	r6,r4,r6
  83e9e4:	10800544 	addi	r2,r2,21
  83e9e8:	9084983a 	sll	r2,r18,r2
  83e9ec:	1184b03a 	or	r2,r2,r6
  83e9f0:	dfc00517 	ldw	ra,20(sp)
  83e9f4:	dd000417 	ldw	r20,16(sp)
  83e9f8:	dcc00317 	ldw	r19,12(sp)
  83e9fc:	dc800217 	ldw	r18,8(sp)
  83ea00:	dc400117 	ldw	r17,4(sp)
  83ea04:	dc000017 	ldw	r16,0(sp)
  83ea08:	dec00604 	addi	sp,sp,24
  83ea0c:	f800283a 	ret
  83ea10:	8cc00f2e 	bgeu	r17,r19,83ea50 <__b2d+0xe0>
  83ea14:	117ffd44 	addi	r5,r2,-11
  83ea18:	80bffe17 	ldw	r2,-8(r16)
  83ea1c:	28000e26 	beq	r5,zero,83ea58 <__b2d+0xe8>
  83ea20:	1949c83a 	sub	r4,r3,r5
  83ea24:	9164983a 	sll	r18,r18,r5
  83ea28:	1106d83a 	srl	r3,r2,r4
  83ea2c:	81bffe04 	addi	r6,r16,-8
  83ea30:	948ffc34 	orhi	r18,r18,16368
  83ea34:	90c6b03a 	or	r3,r18,r3
  83ea38:	89800e2e 	bgeu	r17,r6,83ea74 <__b2d+0x104>
  83ea3c:	81bffd17 	ldw	r6,-12(r16)
  83ea40:	1144983a 	sll	r2,r2,r5
  83ea44:	310ad83a 	srl	r5,r6,r4
  83ea48:	2884b03a 	or	r2,r5,r2
  83ea4c:	003fe806 	br	83e9f0 <__alt_mem_epcs_flash_controller_0+0xff8359f0>
  83ea50:	10bffd44 	addi	r2,r2,-11
  83ea54:	1000041e 	bne	r2,zero,83ea68 <__b2d+0xf8>
  83ea58:	90cffc34 	orhi	r3,r18,16368
  83ea5c:	003fe406 	br	83e9f0 <__alt_mem_epcs_flash_controller_0+0xff8359f0>
  83ea60:	000d883a 	mov	r6,zero
  83ea64:	003fdf06 	br	83e9e4 <__alt_mem_epcs_flash_controller_0+0xff8359e4>
  83ea68:	90a4983a 	sll	r18,r18,r2
  83ea6c:	0005883a 	mov	r2,zero
  83ea70:	003ff906 	br	83ea58 <__alt_mem_epcs_flash_controller_0+0xff835a58>
  83ea74:	1144983a 	sll	r2,r2,r5
  83ea78:	003fdd06 	br	83e9f0 <__alt_mem_epcs_flash_controller_0+0xff8359f0>

0083ea7c <__d2b>:
  83ea7c:	defff804 	addi	sp,sp,-32
  83ea80:	dc000215 	stw	r16,8(sp)
  83ea84:	3021883a 	mov	r16,r6
  83ea88:	dc400315 	stw	r17,12(sp)
  83ea8c:	8022907a 	slli	r17,r16,1
  83ea90:	dd000615 	stw	r20,24(sp)
  83ea94:	2829883a 	mov	r20,r5
  83ea98:	01400044 	movi	r5,1
  83ea9c:	dcc00515 	stw	r19,20(sp)
  83eaa0:	dc800415 	stw	r18,16(sp)
  83eaa4:	dfc00715 	stw	ra,28(sp)
  83eaa8:	3825883a 	mov	r18,r7
  83eaac:	8822d57a 	srli	r17,r17,21
  83eab0:	083dd2c0 	call	83dd2c <_Balloc>
  83eab4:	1027883a 	mov	r19,r2
  83eab8:	00800434 	movhi	r2,16
  83eabc:	10bfffc4 	addi	r2,r2,-1
  83eac0:	808c703a 	and	r6,r16,r2
  83eac4:	88000126 	beq	r17,zero,83eacc <__d2b+0x50>
  83eac8:	31800434 	orhi	r6,r6,16
  83eacc:	d9800015 	stw	r6,0(sp)
  83ead0:	a0002426 	beq	r20,zero,83eb64 <__d2b+0xe8>
  83ead4:	d9000104 	addi	r4,sp,4
  83ead8:	dd000115 	stw	r20,4(sp)
  83eadc:	083e0b00 	call	83e0b0 <__lo0bits>
  83eae0:	d8c00017 	ldw	r3,0(sp)
  83eae4:	10002f1e 	bne	r2,zero,83eba4 <__d2b+0x128>
  83eae8:	d9000117 	ldw	r4,4(sp)
  83eaec:	99000515 	stw	r4,20(r19)
  83eaf0:	1821003a 	cmpeq	r16,r3,zero
  83eaf4:	01000084 	movi	r4,2
  83eaf8:	2421c83a 	sub	r16,r4,r16
  83eafc:	98c00615 	stw	r3,24(r19)
  83eb00:	9c000415 	stw	r16,16(r19)
  83eb04:	88001f1e 	bne	r17,zero,83eb84 <__d2b+0x108>
  83eb08:	10bef384 	addi	r2,r2,-1074
  83eb0c:	90800015 	stw	r2,0(r18)
  83eb10:	00900034 	movhi	r2,16384
  83eb14:	10bfffc4 	addi	r2,r2,-1
  83eb18:	8085883a 	add	r2,r16,r2
  83eb1c:	1085883a 	add	r2,r2,r2
  83eb20:	1085883a 	add	r2,r2,r2
  83eb24:	9885883a 	add	r2,r19,r2
  83eb28:	11000517 	ldw	r4,20(r2)
  83eb2c:	8020917a 	slli	r16,r16,5
  83eb30:	083e0480 	call	83e048 <__hi0bits>
  83eb34:	d8c00817 	ldw	r3,32(sp)
  83eb38:	8085c83a 	sub	r2,r16,r2
  83eb3c:	18800015 	stw	r2,0(r3)
  83eb40:	9805883a 	mov	r2,r19
  83eb44:	dfc00717 	ldw	ra,28(sp)
  83eb48:	dd000617 	ldw	r20,24(sp)
  83eb4c:	dcc00517 	ldw	r19,20(sp)
  83eb50:	dc800417 	ldw	r18,16(sp)
  83eb54:	dc400317 	ldw	r17,12(sp)
  83eb58:	dc000217 	ldw	r16,8(sp)
  83eb5c:	dec00804 	addi	sp,sp,32
  83eb60:	f800283a 	ret
  83eb64:	d809883a 	mov	r4,sp
  83eb68:	083e0b00 	call	83e0b0 <__lo0bits>
  83eb6c:	d8c00017 	ldw	r3,0(sp)
  83eb70:	04000044 	movi	r16,1
  83eb74:	9c000415 	stw	r16,16(r19)
  83eb78:	98c00515 	stw	r3,20(r19)
  83eb7c:	10800804 	addi	r2,r2,32
  83eb80:	883fe126 	beq	r17,zero,83eb08 <__alt_mem_epcs_flash_controller_0+0xff835b08>
  83eb84:	00c00d44 	movi	r3,53
  83eb88:	8c7ef344 	addi	r17,r17,-1075
  83eb8c:	88a3883a 	add	r17,r17,r2
  83eb90:	1885c83a 	sub	r2,r3,r2
  83eb94:	d8c00817 	ldw	r3,32(sp)
  83eb98:	94400015 	stw	r17,0(r18)
  83eb9c:	18800015 	stw	r2,0(r3)
  83eba0:	003fe706 	br	83eb40 <__alt_mem_epcs_flash_controller_0+0xff835b40>
  83eba4:	01000804 	movi	r4,32
  83eba8:	2089c83a 	sub	r4,r4,r2
  83ebac:	1908983a 	sll	r4,r3,r4
  83ebb0:	d9400117 	ldw	r5,4(sp)
  83ebb4:	1886d83a 	srl	r3,r3,r2
  83ebb8:	2148b03a 	or	r4,r4,r5
  83ebbc:	99000515 	stw	r4,20(r19)
  83ebc0:	d8c00015 	stw	r3,0(sp)
  83ebc4:	003fca06 	br	83eaf0 <__alt_mem_epcs_flash_controller_0+0xff835af0>

0083ebc8 <__ratio>:
  83ebc8:	defff904 	addi	sp,sp,-28
  83ebcc:	dc400315 	stw	r17,12(sp)
  83ebd0:	2823883a 	mov	r17,r5
  83ebd4:	d9400104 	addi	r5,sp,4
  83ebd8:	dfc00615 	stw	ra,24(sp)
  83ebdc:	dcc00515 	stw	r19,20(sp)
  83ebe0:	dc800415 	stw	r18,16(sp)
  83ebe4:	2027883a 	mov	r19,r4
  83ebe8:	dc000215 	stw	r16,8(sp)
  83ebec:	083e9700 	call	83e970 <__b2d>
  83ebf0:	d80b883a 	mov	r5,sp
  83ebf4:	8809883a 	mov	r4,r17
  83ebf8:	1025883a 	mov	r18,r2
  83ebfc:	1821883a 	mov	r16,r3
  83ec00:	083e9700 	call	83e970 <__b2d>
  83ec04:	8a000417 	ldw	r8,16(r17)
  83ec08:	99000417 	ldw	r4,16(r19)
  83ec0c:	d9400117 	ldw	r5,4(sp)
  83ec10:	2209c83a 	sub	r4,r4,r8
  83ec14:	2010917a 	slli	r8,r4,5
  83ec18:	d9000017 	ldw	r4,0(sp)
  83ec1c:	2909c83a 	sub	r4,r5,r4
  83ec20:	4109883a 	add	r4,r8,r4
  83ec24:	01000e0e 	bge	zero,r4,83ec60 <__ratio+0x98>
  83ec28:	2008953a 	slli	r4,r4,20
  83ec2c:	2421883a 	add	r16,r4,r16
  83ec30:	100d883a 	mov	r6,r2
  83ec34:	180f883a 	mov	r7,r3
  83ec38:	9009883a 	mov	r4,r18
  83ec3c:	800b883a 	mov	r5,r16
  83ec40:	08481b80 	call	8481b8 <__divdf3>
  83ec44:	dfc00617 	ldw	ra,24(sp)
  83ec48:	dcc00517 	ldw	r19,20(sp)
  83ec4c:	dc800417 	ldw	r18,16(sp)
  83ec50:	dc400317 	ldw	r17,12(sp)
  83ec54:	dc000217 	ldw	r16,8(sp)
  83ec58:	dec00704 	addi	sp,sp,28
  83ec5c:	f800283a 	ret
  83ec60:	2008953a 	slli	r4,r4,20
  83ec64:	1907c83a 	sub	r3,r3,r4
  83ec68:	003ff106 	br	83ec30 <__alt_mem_epcs_flash_controller_0+0xff835c30>

0083ec6c <_mprec_log10>:
  83ec6c:	defffe04 	addi	sp,sp,-8
  83ec70:	dc000015 	stw	r16,0(sp)
  83ec74:	dfc00115 	stw	ra,4(sp)
  83ec78:	008005c4 	movi	r2,23
  83ec7c:	2021883a 	mov	r16,r4
  83ec80:	11000d0e 	bge	r2,r4,83ecb8 <_mprec_log10+0x4c>
  83ec84:	0005883a 	mov	r2,zero
  83ec88:	00cffc34 	movhi	r3,16368
  83ec8c:	843fffc4 	addi	r16,r16,-1
  83ec90:	000d883a 	mov	r6,zero
  83ec94:	01d00934 	movhi	r7,16420
  83ec98:	1009883a 	mov	r4,r2
  83ec9c:	180b883a 	mov	r5,r3
  83eca0:	08311800 	call	831180 <__muldf3>
  83eca4:	803ff91e 	bne	r16,zero,83ec8c <__alt_mem_epcs_flash_controller_0+0xff835c8c>
  83eca8:	dfc00117 	ldw	ra,4(sp)
  83ecac:	dc000017 	ldw	r16,0(sp)
  83ecb0:	dec00204 	addi	sp,sp,8
  83ecb4:	f800283a 	ret
  83ecb8:	202090fa 	slli	r16,r4,3
  83ecbc:	008021b4 	movhi	r2,134
  83ecc0:	10a6df04 	addi	r2,r2,-25732
  83ecc4:	1421883a 	add	r16,r2,r16
  83ecc8:	80800017 	ldw	r2,0(r16)
  83eccc:	80c00117 	ldw	r3,4(r16)
  83ecd0:	dfc00117 	ldw	ra,4(sp)
  83ecd4:	dc000017 	ldw	r16,0(sp)
  83ecd8:	dec00204 	addi	sp,sp,8
  83ecdc:	f800283a 	ret

0083ece0 <__copybits>:
  83ece0:	297fffc4 	addi	r5,r5,-1
  83ece4:	280fd17a 	srai	r7,r5,5
  83ece8:	30c00417 	ldw	r3,16(r6)
  83ecec:	30800504 	addi	r2,r6,20
  83ecf0:	39c00044 	addi	r7,r7,1
  83ecf4:	18c7883a 	add	r3,r3,r3
  83ecf8:	39cf883a 	add	r7,r7,r7
  83ecfc:	18c7883a 	add	r3,r3,r3
  83ed00:	39cf883a 	add	r7,r7,r7
  83ed04:	10c7883a 	add	r3,r2,r3
  83ed08:	21cf883a 	add	r7,r4,r7
  83ed0c:	10c00d2e 	bgeu	r2,r3,83ed44 <__copybits+0x64>
  83ed10:	200b883a 	mov	r5,r4
  83ed14:	12000017 	ldw	r8,0(r2)
  83ed18:	29400104 	addi	r5,r5,4
  83ed1c:	10800104 	addi	r2,r2,4
  83ed20:	2a3fff15 	stw	r8,-4(r5)
  83ed24:	10fffb36 	bltu	r2,r3,83ed14 <__alt_mem_epcs_flash_controller_0+0xff835d14>
  83ed28:	1985c83a 	sub	r2,r3,r6
  83ed2c:	10bffac4 	addi	r2,r2,-21
  83ed30:	1004d0ba 	srli	r2,r2,2
  83ed34:	10800044 	addi	r2,r2,1
  83ed38:	1085883a 	add	r2,r2,r2
  83ed3c:	1085883a 	add	r2,r2,r2
  83ed40:	2089883a 	add	r4,r4,r2
  83ed44:	21c0032e 	bgeu	r4,r7,83ed54 <__copybits+0x74>
  83ed48:	20000015 	stw	zero,0(r4)
  83ed4c:	21000104 	addi	r4,r4,4
  83ed50:	21fffd36 	bltu	r4,r7,83ed48 <__alt_mem_epcs_flash_controller_0+0xff835d48>
  83ed54:	f800283a 	ret

0083ed58 <__any_on>:
  83ed58:	20c00417 	ldw	r3,16(r4)
  83ed5c:	2805d17a 	srai	r2,r5,5
  83ed60:	21000504 	addi	r4,r4,20
  83ed64:	18800d0e 	bge	r3,r2,83ed9c <__any_on+0x44>
  83ed68:	18c7883a 	add	r3,r3,r3
  83ed6c:	18c7883a 	add	r3,r3,r3
  83ed70:	20c7883a 	add	r3,r4,r3
  83ed74:	20c0192e 	bgeu	r4,r3,83eddc <__any_on+0x84>
  83ed78:	18bfff17 	ldw	r2,-4(r3)
  83ed7c:	18ffff04 	addi	r3,r3,-4
  83ed80:	1000041e 	bne	r2,zero,83ed94 <__any_on+0x3c>
  83ed84:	20c0142e 	bgeu	r4,r3,83edd8 <__any_on+0x80>
  83ed88:	18ffff04 	addi	r3,r3,-4
  83ed8c:	19400017 	ldw	r5,0(r3)
  83ed90:	283ffc26 	beq	r5,zero,83ed84 <__alt_mem_epcs_flash_controller_0+0xff835d84>
  83ed94:	00800044 	movi	r2,1
  83ed98:	f800283a 	ret
  83ed9c:	10c00a0e 	bge	r2,r3,83edc8 <__any_on+0x70>
  83eda0:	1085883a 	add	r2,r2,r2
  83eda4:	1085883a 	add	r2,r2,r2
  83eda8:	294007cc 	andi	r5,r5,31
  83edac:	2087883a 	add	r3,r4,r2
  83edb0:	283ff026 	beq	r5,zero,83ed74 <__alt_mem_epcs_flash_controller_0+0xff835d74>
  83edb4:	19800017 	ldw	r6,0(r3)
  83edb8:	3144d83a 	srl	r2,r6,r5
  83edbc:	114a983a 	sll	r5,r2,r5
  83edc0:	317ff41e 	bne	r6,r5,83ed94 <__alt_mem_epcs_flash_controller_0+0xff835d94>
  83edc4:	003feb06 	br	83ed74 <__alt_mem_epcs_flash_controller_0+0xff835d74>
  83edc8:	1085883a 	add	r2,r2,r2
  83edcc:	1085883a 	add	r2,r2,r2
  83edd0:	2087883a 	add	r3,r4,r2
  83edd4:	003fe706 	br	83ed74 <__alt_mem_epcs_flash_controller_0+0xff835d74>
  83edd8:	f800283a 	ret
  83eddc:	0005883a 	mov	r2,zero
  83ede0:	f800283a 	ret

0083ede4 <_read_r>:
  83ede4:	defffd04 	addi	sp,sp,-12
  83ede8:	2805883a 	mov	r2,r5
  83edec:	dc000015 	stw	r16,0(sp)
  83edf0:	040021b4 	movhi	r16,134
  83edf4:	dc400115 	stw	r17,4(sp)
  83edf8:	300b883a 	mov	r5,r6
  83edfc:	842fc604 	addi	r16,r16,-16616
  83ee00:	2023883a 	mov	r17,r4
  83ee04:	380d883a 	mov	r6,r7
  83ee08:	1009883a 	mov	r4,r2
  83ee0c:	dfc00215 	stw	ra,8(sp)
  83ee10:	80000015 	stw	zero,0(r16)
  83ee14:	084a1c40 	call	84a1c4 <read>
  83ee18:	00ffffc4 	movi	r3,-1
  83ee1c:	10c00526 	beq	r2,r3,83ee34 <_read_r+0x50>
  83ee20:	dfc00217 	ldw	ra,8(sp)
  83ee24:	dc400117 	ldw	r17,4(sp)
  83ee28:	dc000017 	ldw	r16,0(sp)
  83ee2c:	dec00304 	addi	sp,sp,12
  83ee30:	f800283a 	ret
  83ee34:	80c00017 	ldw	r3,0(r16)
  83ee38:	183ff926 	beq	r3,zero,83ee20 <__alt_mem_epcs_flash_controller_0+0xff835e20>
  83ee3c:	88c00015 	stw	r3,0(r17)
  83ee40:	003ff706 	br	83ee20 <__alt_mem_epcs_flash_controller_0+0xff835e20>

0083ee44 <__fpclassifyd>:
  83ee44:	00a00034 	movhi	r2,32768
  83ee48:	10bfffc4 	addi	r2,r2,-1
  83ee4c:	2884703a 	and	r2,r5,r2
  83ee50:	10000726 	beq	r2,zero,83ee70 <__fpclassifyd+0x2c>
  83ee54:	00fffc34 	movhi	r3,65520
  83ee58:	019ff834 	movhi	r6,32736
  83ee5c:	28c7883a 	add	r3,r5,r3
  83ee60:	31bfffc4 	addi	r6,r6,-1
  83ee64:	30c00536 	bltu	r6,r3,83ee7c <__fpclassifyd+0x38>
  83ee68:	00800104 	movi	r2,4
  83ee6c:	f800283a 	ret
  83ee70:	2000021e 	bne	r4,zero,83ee7c <__fpclassifyd+0x38>
  83ee74:	00800084 	movi	r2,2
  83ee78:	f800283a 	ret
  83ee7c:	00dffc34 	movhi	r3,32752
  83ee80:	019ff834 	movhi	r6,32736
  83ee84:	28cb883a 	add	r5,r5,r3
  83ee88:	31bfffc4 	addi	r6,r6,-1
  83ee8c:	317ff62e 	bgeu	r6,r5,83ee68 <__alt_mem_epcs_flash_controller_0+0xff835e68>
  83ee90:	01400434 	movhi	r5,16
  83ee94:	297fffc4 	addi	r5,r5,-1
  83ee98:	28800236 	bltu	r5,r2,83eea4 <__fpclassifyd+0x60>
  83ee9c:	008000c4 	movi	r2,3
  83eea0:	f800283a 	ret
  83eea4:	10c00226 	beq	r2,r3,83eeb0 <__fpclassifyd+0x6c>
  83eea8:	0005883a 	mov	r2,zero
  83eeac:	f800283a 	ret
  83eeb0:	2005003a 	cmpeq	r2,r4,zero
  83eeb4:	f800283a 	ret

0083eeb8 <__sccl>:
  83eeb8:	2a000003 	ldbu	r8,0(r5)
  83eebc:	00801784 	movi	r2,94
  83eec0:	40802a26 	beq	r8,r2,83ef6c <__sccl+0xb4>
  83eec4:	29400044 	addi	r5,r5,1
  83eec8:	000f883a 	mov	r7,zero
  83eecc:	0013883a 	mov	r9,zero
  83eed0:	2007883a 	mov	r3,r4
  83eed4:	21804004 	addi	r6,r4,256
  83eed8:	19c00005 	stb	r7,0(r3)
  83eedc:	18c00044 	addi	r3,r3,1
  83eee0:	19bffd1e 	bne	r3,r6,83eed8 <__alt_mem_epcs_flash_controller_0+0xff835ed8>
  83eee4:	40001126 	beq	r8,zero,83ef2c <__sccl+0x74>
  83eee8:	00800044 	movi	r2,1
  83eeec:	124fc83a 	sub	r7,r2,r9
  83eef0:	02800b44 	movi	r10,45
  83eef4:	02c01744 	movi	r11,93
  83eef8:	2205883a 	add	r2,r4,r8
  83eefc:	11c00005 	stb	r7,0(r2)
  83ef00:	28800044 	addi	r2,r5,1
  83ef04:	28c00003 	ldbu	r3,0(r5)
  83ef08:	1a800a26 	beq	r3,r10,83ef34 <__sccl+0x7c>
  83ef0c:	1ac00426 	beq	r3,r11,83ef20 <__sccl+0x68>
  83ef10:	18000426 	beq	r3,zero,83ef24 <__sccl+0x6c>
  83ef14:	1811883a 	mov	r8,r3
  83ef18:	100b883a 	mov	r5,r2
  83ef1c:	003ff606 	br	83eef8 <__alt_mem_epcs_flash_controller_0+0xff835ef8>
  83ef20:	f800283a 	ret
  83ef24:	2805883a 	mov	r2,r5
  83ef28:	f800283a 	ret
  83ef2c:	28bfffc4 	addi	r2,r5,-1
  83ef30:	f800283a 	ret
  83ef34:	12400003 	ldbu	r9,0(r2)
  83ef38:	4ac01126 	beq	r9,r11,83ef80 <__sccl+0xc8>
  83ef3c:	4a001016 	blt	r9,r8,83ef80 <__sccl+0xc8>
  83ef40:	41800044 	addi	r6,r8,1
  83ef44:	29400084 	addi	r5,r5,2
  83ef48:	2187883a 	add	r3,r4,r6
  83ef4c:	00000106 	br	83ef54 <__sccl+0x9c>
  83ef50:	31800044 	addi	r6,r6,1
  83ef54:	19c00005 	stb	r7,0(r3)
  83ef58:	3011883a 	mov	r8,r6
  83ef5c:	18c00044 	addi	r3,r3,1
  83ef60:	327ffb16 	blt	r6,r9,83ef50 <__alt_mem_epcs_flash_controller_0+0xff835f50>
  83ef64:	10800084 	addi	r2,r2,2
  83ef68:	003fe606 	br	83ef04 <__alt_mem_epcs_flash_controller_0+0xff835f04>
  83ef6c:	2a000043 	ldbu	r8,1(r5)
  83ef70:	01c00044 	movi	r7,1
  83ef74:	29400084 	addi	r5,r5,2
  83ef78:	02400044 	movi	r9,1
  83ef7c:	003fd406 	br	83eed0 <__alt_mem_epcs_flash_controller_0+0xff835ed0>
  83ef80:	5011883a 	mov	r8,r10
  83ef84:	003fe406 	br	83ef18 <__alt_mem_epcs_flash_controller_0+0xff835f18>

0083ef88 <nanf>:
  83ef88:	009ff034 	movhi	r2,32704
  83ef8c:	f800283a 	ret

0083ef90 <_init_signal_r>:
  83ef90:	2080b717 	ldw	r2,732(r4)
  83ef94:	10000226 	beq	r2,zero,83efa0 <_init_signal_r+0x10>
  83ef98:	0005883a 	mov	r2,zero
  83ef9c:	f800283a 	ret
  83efa0:	defffe04 	addi	sp,sp,-8
  83efa4:	01402004 	movi	r5,128
  83efa8:	dc000015 	stw	r16,0(sp)
  83efac:	dfc00115 	stw	ra,4(sp)
  83efb0:	2021883a 	mov	r16,r4
  83efb4:	083335c0 	call	83335c <_malloc_r>
  83efb8:	8080b715 	stw	r2,732(r16)
  83efbc:	10000d26 	beq	r2,zero,83eff4 <_init_signal_r+0x64>
  83efc0:	0007883a 	mov	r3,zero
  83efc4:	01002004 	movi	r4,128
  83efc8:	00000106 	br	83efd0 <_init_signal_r+0x40>
  83efcc:	8080b717 	ldw	r2,732(r16)
  83efd0:	10c5883a 	add	r2,r2,r3
  83efd4:	10000015 	stw	zero,0(r2)
  83efd8:	18c00104 	addi	r3,r3,4
  83efdc:	193ffb1e 	bne	r3,r4,83efcc <__alt_mem_epcs_flash_controller_0+0xff835fcc>
  83efe0:	0005883a 	mov	r2,zero
  83efe4:	dfc00117 	ldw	ra,4(sp)
  83efe8:	dc000017 	ldw	r16,0(sp)
  83efec:	dec00204 	addi	sp,sp,8
  83eff0:	f800283a 	ret
  83eff4:	00bfffc4 	movi	r2,-1
  83eff8:	003ffa06 	br	83efe4 <__alt_mem_epcs_flash_controller_0+0xff835fe4>

0083effc <_signal_r>:
  83effc:	00c007c4 	movi	r3,31
  83f000:	19401536 	bltu	r3,r5,83f058 <_signal_r+0x5c>
  83f004:	2080b717 	ldw	r2,732(r4)
  83f008:	defffc04 	addi	sp,sp,-16
  83f00c:	dc800215 	stw	r18,8(sp)
  83f010:	dc400115 	stw	r17,4(sp)
  83f014:	dc000015 	stw	r16,0(sp)
  83f018:	dfc00315 	stw	ra,12(sp)
  83f01c:	3023883a 	mov	r17,r6
  83f020:	2021883a 	mov	r16,r4
  83f024:	2825883a 	mov	r18,r5
  83f028:	10000f26 	beq	r2,zero,83f068 <_signal_r+0x6c>
  83f02c:	948b883a 	add	r5,r18,r18
  83f030:	294b883a 	add	r5,r5,r5
  83f034:	114b883a 	add	r5,r2,r5
  83f038:	28800017 	ldw	r2,0(r5)
  83f03c:	2c400015 	stw	r17,0(r5)
  83f040:	dfc00317 	ldw	ra,12(sp)
  83f044:	dc800217 	ldw	r18,8(sp)
  83f048:	dc400117 	ldw	r17,4(sp)
  83f04c:	dc000017 	ldw	r16,0(sp)
  83f050:	dec00404 	addi	sp,sp,16
  83f054:	f800283a 	ret
  83f058:	00c00584 	movi	r3,22
  83f05c:	20c00015 	stw	r3,0(r4)
  83f060:	00bfffc4 	movi	r2,-1
  83f064:	f800283a 	ret
  83f068:	083ef900 	call	83ef90 <_init_signal_r>
  83f06c:	1000021e 	bne	r2,zero,83f078 <_signal_r+0x7c>
  83f070:	8080b717 	ldw	r2,732(r16)
  83f074:	003fed06 	br	83f02c <__alt_mem_epcs_flash_controller_0+0xff83602c>
  83f078:	00bfffc4 	movi	r2,-1
  83f07c:	003ff006 	br	83f040 <__alt_mem_epcs_flash_controller_0+0xff836040>

0083f080 <_raise_r>:
  83f080:	008007c4 	movi	r2,31
  83f084:	11402936 	bltu	r2,r5,83f12c <_raise_r+0xac>
  83f088:	20c0b717 	ldw	r3,732(r4)
  83f08c:	defffd04 	addi	sp,sp,-12
  83f090:	dc400115 	stw	r17,4(sp)
  83f094:	dc000015 	stw	r16,0(sp)
  83f098:	dfc00215 	stw	ra,8(sp)
  83f09c:	2021883a 	mov	r16,r4
  83f0a0:	2823883a 	mov	r17,r5
  83f0a4:	18001726 	beq	r3,zero,83f104 <_raise_r+0x84>
  83f0a8:	2945883a 	add	r2,r5,r5
  83f0ac:	1085883a 	add	r2,r2,r2
  83f0b0:	1887883a 	add	r3,r3,r2
  83f0b4:	19800017 	ldw	r6,0(r3)
  83f0b8:	30001226 	beq	r6,zero,83f104 <_raise_r+0x84>
  83f0bc:	00800044 	movi	r2,1
  83f0c0:	30800e26 	beq	r6,r2,83f0fc <_raise_r+0x7c>
  83f0c4:	013fffc4 	movi	r4,-1
  83f0c8:	31000926 	beq	r6,r4,83f0f0 <_raise_r+0x70>
  83f0cc:	18000015 	stw	zero,0(r3)
  83f0d0:	2809883a 	mov	r4,r5
  83f0d4:	303ee83a 	callr	r6
  83f0d8:	0005883a 	mov	r2,zero
  83f0dc:	dfc00217 	ldw	ra,8(sp)
  83f0e0:	dc400117 	ldw	r17,4(sp)
  83f0e4:	dc000017 	ldw	r16,0(sp)
  83f0e8:	dec00304 	addi	sp,sp,12
  83f0ec:	f800283a 	ret
  83f0f0:	00c00584 	movi	r3,22
  83f0f4:	80c00015 	stw	r3,0(r16)
  83f0f8:	003ff806 	br	83f0dc <__alt_mem_epcs_flash_controller_0+0xff8360dc>
  83f0fc:	0005883a 	mov	r2,zero
  83f100:	003ff606 	br	83f0dc <__alt_mem_epcs_flash_controller_0+0xff8360dc>
  83f104:	8009883a 	mov	r4,r16
  83f108:	083f2900 	call	83f290 <_getpid_r>
  83f10c:	880d883a 	mov	r6,r17
  83f110:	100b883a 	mov	r5,r2
  83f114:	8009883a 	mov	r4,r16
  83f118:	dfc00217 	ldw	ra,8(sp)
  83f11c:	dc400117 	ldw	r17,4(sp)
  83f120:	dc000017 	ldw	r16,0(sp)
  83f124:	dec00304 	addi	sp,sp,12
  83f128:	083f2341 	jmpi	83f234 <_kill_r>
  83f12c:	00800584 	movi	r2,22
  83f130:	20800015 	stw	r2,0(r4)
  83f134:	00bfffc4 	movi	r2,-1
  83f138:	f800283a 	ret

0083f13c <__sigtramp_r>:
  83f13c:	008007c4 	movi	r2,31
  83f140:	11402436 	bltu	r2,r5,83f1d4 <__sigtramp_r+0x98>
  83f144:	20c0b717 	ldw	r3,732(r4)
  83f148:	defffd04 	addi	sp,sp,-12
  83f14c:	dc400115 	stw	r17,4(sp)
  83f150:	dc000015 	stw	r16,0(sp)
  83f154:	dfc00215 	stw	ra,8(sp)
  83f158:	2021883a 	mov	r16,r4
  83f15c:	2823883a 	mov	r17,r5
  83f160:	18001826 	beq	r3,zero,83f1c4 <__sigtramp_r+0x88>
  83f164:	8c45883a 	add	r2,r17,r17
  83f168:	1085883a 	add	r2,r2,r2
  83f16c:	1885883a 	add	r2,r3,r2
  83f170:	10c00017 	ldw	r3,0(r2)
  83f174:	18001126 	beq	r3,zero,83f1bc <__sigtramp_r+0x80>
  83f178:	013fffc4 	movi	r4,-1
  83f17c:	19000d26 	beq	r3,r4,83f1b4 <__sigtramp_r+0x78>
  83f180:	01000044 	movi	r4,1
  83f184:	19000926 	beq	r3,r4,83f1ac <__sigtramp_r+0x70>
  83f188:	10000015 	stw	zero,0(r2)
  83f18c:	8809883a 	mov	r4,r17
  83f190:	183ee83a 	callr	r3
  83f194:	0005883a 	mov	r2,zero
  83f198:	dfc00217 	ldw	ra,8(sp)
  83f19c:	dc400117 	ldw	r17,4(sp)
  83f1a0:	dc000017 	ldw	r16,0(sp)
  83f1a4:	dec00304 	addi	sp,sp,12
  83f1a8:	f800283a 	ret
  83f1ac:	008000c4 	movi	r2,3
  83f1b0:	003ff906 	br	83f198 <__alt_mem_epcs_flash_controller_0+0xff836198>
  83f1b4:	00800084 	movi	r2,2
  83f1b8:	003ff706 	br	83f198 <__alt_mem_epcs_flash_controller_0+0xff836198>
  83f1bc:	00800044 	movi	r2,1
  83f1c0:	003ff506 	br	83f198 <__alt_mem_epcs_flash_controller_0+0xff836198>
  83f1c4:	083ef900 	call	83ef90 <_init_signal_r>
  83f1c8:	1000041e 	bne	r2,zero,83f1dc <__sigtramp_r+0xa0>
  83f1cc:	80c0b717 	ldw	r3,732(r16)
  83f1d0:	003fe406 	br	83f164 <__alt_mem_epcs_flash_controller_0+0xff836164>
  83f1d4:	00bfffc4 	movi	r2,-1
  83f1d8:	f800283a 	ret
  83f1dc:	00bfffc4 	movi	r2,-1
  83f1e0:	003fed06 	br	83f198 <__alt_mem_epcs_flash_controller_0+0xff836198>

0083f1e4 <raise>:
  83f1e4:	008021b4 	movhi	r2,134
  83f1e8:	10af7404 	addi	r2,r2,-16944
  83f1ec:	200b883a 	mov	r5,r4
  83f1f0:	11000017 	ldw	r4,0(r2)
  83f1f4:	083f0801 	jmpi	83f080 <_raise_r>

0083f1f8 <signal>:
  83f1f8:	008021b4 	movhi	r2,134
  83f1fc:	10af7404 	addi	r2,r2,-16944
  83f200:	280d883a 	mov	r6,r5
  83f204:	200b883a 	mov	r5,r4
  83f208:	11000017 	ldw	r4,0(r2)
  83f20c:	083effc1 	jmpi	83effc <_signal_r>

0083f210 <_init_signal>:
  83f210:	008021b4 	movhi	r2,134
  83f214:	10af7404 	addi	r2,r2,-16944
  83f218:	11000017 	ldw	r4,0(r2)
  83f21c:	083ef901 	jmpi	83ef90 <_init_signal_r>

0083f220 <__sigtramp>:
  83f220:	008021b4 	movhi	r2,134
  83f224:	10af7404 	addi	r2,r2,-16944
  83f228:	200b883a 	mov	r5,r4
  83f22c:	11000017 	ldw	r4,0(r2)
  83f230:	083f13c1 	jmpi	83f13c <__sigtramp_r>

0083f234 <_kill_r>:
  83f234:	defffd04 	addi	sp,sp,-12
  83f238:	2805883a 	mov	r2,r5
  83f23c:	dc000015 	stw	r16,0(sp)
  83f240:	040021b4 	movhi	r16,134
  83f244:	dc400115 	stw	r17,4(sp)
  83f248:	842fc604 	addi	r16,r16,-16616
  83f24c:	2023883a 	mov	r17,r4
  83f250:	300b883a 	mov	r5,r6
  83f254:	1009883a 	mov	r4,r2
  83f258:	dfc00215 	stw	ra,8(sp)
  83f25c:	80000015 	stw	zero,0(r16)
  83f260:	0849e840 	call	849e84 <kill>
  83f264:	00ffffc4 	movi	r3,-1
  83f268:	10c00526 	beq	r2,r3,83f280 <_kill_r+0x4c>
  83f26c:	dfc00217 	ldw	ra,8(sp)
  83f270:	dc400117 	ldw	r17,4(sp)
  83f274:	dc000017 	ldw	r16,0(sp)
  83f278:	dec00304 	addi	sp,sp,12
  83f27c:	f800283a 	ret
  83f280:	80c00017 	ldw	r3,0(r16)
  83f284:	183ff926 	beq	r3,zero,83f26c <__alt_mem_epcs_flash_controller_0+0xff83626c>
  83f288:	88c00015 	stw	r3,0(r17)
  83f28c:	003ff706 	br	83f26c <__alt_mem_epcs_flash_controller_0+0xff83626c>

0083f290 <_getpid_r>:
  83f290:	0849aa01 	jmpi	849aa0 <getpid>

0083f294 <strcmp>:
  83f294:	2144b03a 	or	r2,r4,r5
  83f298:	108000cc 	andi	r2,r2,3
  83f29c:	1000171e 	bne	r2,zero,83f2fc <strcmp+0x68>
  83f2a0:	20800017 	ldw	r2,0(r4)
  83f2a4:	28c00017 	ldw	r3,0(r5)
  83f2a8:	10c0141e 	bne	r2,r3,83f2fc <strcmp+0x68>
  83f2ac:	027fbff4 	movhi	r9,65279
  83f2b0:	4a7fbfc4 	addi	r9,r9,-257
  83f2b4:	0086303a 	nor	r3,zero,r2
  83f2b8:	02202074 	movhi	r8,32897
  83f2bc:	1245883a 	add	r2,r2,r9
  83f2c0:	42202004 	addi	r8,r8,-32640
  83f2c4:	10c4703a 	and	r2,r2,r3
  83f2c8:	1204703a 	and	r2,r2,r8
  83f2cc:	10000226 	beq	r2,zero,83f2d8 <strcmp+0x44>
  83f2d0:	00002306 	br	83f360 <strcmp+0xcc>
  83f2d4:	1000221e 	bne	r2,zero,83f360 <strcmp+0xcc>
  83f2d8:	21000104 	addi	r4,r4,4
  83f2dc:	20c00017 	ldw	r3,0(r4)
  83f2e0:	29400104 	addi	r5,r5,4
  83f2e4:	29800017 	ldw	r6,0(r5)
  83f2e8:	1a4f883a 	add	r7,r3,r9
  83f2ec:	00c4303a 	nor	r2,zero,r3
  83f2f0:	3884703a 	and	r2,r7,r2
  83f2f4:	1204703a 	and	r2,r2,r8
  83f2f8:	19bff626 	beq	r3,r6,83f2d4 <__alt_mem_epcs_flash_controller_0+0xff8362d4>
  83f2fc:	20800003 	ldbu	r2,0(r4)
  83f300:	10c03fcc 	andi	r3,r2,255
  83f304:	18c0201c 	xori	r3,r3,128
  83f308:	18ffe004 	addi	r3,r3,-128
  83f30c:	18000c26 	beq	r3,zero,83f340 <strcmp+0xac>
  83f310:	29800007 	ldb	r6,0(r5)
  83f314:	19800326 	beq	r3,r6,83f324 <strcmp+0x90>
  83f318:	00001306 	br	83f368 <strcmp+0xd4>
  83f31c:	29800007 	ldb	r6,0(r5)
  83f320:	11800b1e 	bne	r2,r6,83f350 <strcmp+0xbc>
  83f324:	21000044 	addi	r4,r4,1
  83f328:	20c00003 	ldbu	r3,0(r4)
  83f32c:	29400044 	addi	r5,r5,1
  83f330:	18803fcc 	andi	r2,r3,255
  83f334:	1080201c 	xori	r2,r2,128
  83f338:	10bfe004 	addi	r2,r2,-128
  83f33c:	103ff71e 	bne	r2,zero,83f31c <__alt_mem_epcs_flash_controller_0+0xff83631c>
  83f340:	0007883a 	mov	r3,zero
  83f344:	28800003 	ldbu	r2,0(r5)
  83f348:	1885c83a 	sub	r2,r3,r2
  83f34c:	f800283a 	ret
  83f350:	28800003 	ldbu	r2,0(r5)
  83f354:	18c03fcc 	andi	r3,r3,255
  83f358:	1885c83a 	sub	r2,r3,r2
  83f35c:	f800283a 	ret
  83f360:	0005883a 	mov	r2,zero
  83f364:	f800283a 	ret
  83f368:	10c03fcc 	andi	r3,r2,255
  83f36c:	003ff506 	br	83f344 <__alt_mem_epcs_flash_controller_0+0xff836344>

0083f370 <sulp>:
  83f370:	defffd04 	addi	sp,sp,-12
  83f374:	dc400115 	stw	r17,4(sp)
  83f378:	3023883a 	mov	r17,r6
  83f37c:	dc000015 	stw	r16,0(sp)
  83f380:	dfc00215 	stw	ra,8(sp)
  83f384:	2821883a 	mov	r16,r5
  83f388:	083e90c0 	call	83e90c <__ulp>
  83f38c:	88000c26 	beq	r17,zero,83f3c0 <sulp+0x50>
  83f390:	841ffc2c 	andhi	r16,r16,32752
  83f394:	8020d53a 	srli	r16,r16,20
  83f398:	01c01ac4 	movi	r7,107
  83f39c:	3c21c83a 	sub	r16,r7,r16
  83f3a0:	0400070e 	bge	zero,r16,83f3c0 <sulp+0x50>
  83f3a4:	8020953a 	slli	r16,r16,20
  83f3a8:	01cffc34 	movhi	r7,16368
  83f3ac:	000d883a 	mov	r6,zero
  83f3b0:	81cf883a 	add	r7,r16,r7
  83f3b4:	1009883a 	mov	r4,r2
  83f3b8:	180b883a 	mov	r5,r3
  83f3bc:	08311800 	call	831180 <__muldf3>
  83f3c0:	dfc00217 	ldw	ra,8(sp)
  83f3c4:	dc400117 	ldw	r17,4(sp)
  83f3c8:	dc000017 	ldw	r16,0(sp)
  83f3cc:	dec00304 	addi	sp,sp,12
  83f3d0:	f800283a 	ret

0083f3d4 <_strtod_r>:
  83f3d4:	deffe204 	addi	sp,sp,-120
  83f3d8:	ddc01b15 	stw	r23,108(sp)
  83f3dc:	dd801a15 	stw	r22,104(sp)
  83f3e0:	dc401515 	stw	r17,84(sp)
  83f3e4:	dfc01d15 	stw	ra,116(sp)
  83f3e8:	df001c15 	stw	fp,112(sp)
  83f3ec:	dd401915 	stw	r21,100(sp)
  83f3f0:	dd001815 	stw	r20,96(sp)
  83f3f4:	dcc01715 	stw	r19,92(sp)
  83f3f8:	dc801615 	stw	r18,88(sp)
  83f3fc:	dc001415 	stw	r16,80(sp)
  83f400:	d8000515 	stw	zero,20(sp)
  83f404:	d9400615 	stw	r5,24(sp)
  83f408:	2807883a 	mov	r3,r5
  83f40c:	1f000003 	ldbu	fp,0(r3)
  83f410:	01c02134 	movhi	r7,132
  83f414:	2023883a 	mov	r17,r4
  83f418:	d9400715 	stw	r5,28(sp)
  83f41c:	d9800915 	stw	r6,36(sp)
  83f420:	01000b44 	movi	r4,45
  83f424:	e0803fcc 	andi	r2,fp,255
  83f428:	39fd1204 	addi	r7,r7,-3000
  83f42c:	002f883a 	mov	r23,zero
  83f430:	002d883a 	mov	r22,zero
  83f434:	20809c36 	bltu	r4,r2,83f6a8 <_strtod_r+0x2d4>
  83f438:	100490ba 	slli	r2,r2,2
  83f43c:	11c5883a 	add	r2,r2,r7
  83f440:	10800017 	ldw	r2,0(r2)
  83f444:	1000683a 	jmp	r2
  83f448:	0083f508 	cmpgei	r2,zero,4052
  83f44c:	0083f6a8 	cmpgeui	r2,zero,4058
  83f450:	0083f6a8 	cmpgeui	r2,zero,4058
  83f454:	0083f6a8 	cmpgeui	r2,zero,4058
  83f458:	0083f6a8 	cmpgeui	r2,zero,4058
  83f45c:	0083f6a8 	cmpgeui	r2,zero,4058
  83f460:	0083f6a8 	cmpgeui	r2,zero,4058
  83f464:	0083f6a8 	cmpgeui	r2,zero,4058
  83f468:	0083f6a8 	cmpgeui	r2,zero,4058
  83f46c:	0083f694 	movui	r2,4058
  83f470:	0083f694 	movui	r2,4058
  83f474:	0083f694 	movui	r2,4058
  83f478:	0083f694 	movui	r2,4058
  83f47c:	0083f694 	movui	r2,4058
  83f480:	0083f6a8 	cmpgeui	r2,zero,4058
  83f484:	0083f6a8 	cmpgeui	r2,zero,4058
  83f488:	0083f6a8 	cmpgeui	r2,zero,4058
  83f48c:	0083f6a8 	cmpgeui	r2,zero,4058
  83f490:	0083f6a8 	cmpgeui	r2,zero,4058
  83f494:	0083f6a8 	cmpgeui	r2,zero,4058
  83f498:	0083f6a8 	cmpgeui	r2,zero,4058
  83f49c:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4a0:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4a4:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4a8:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4ac:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4b0:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4b4:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4b8:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4bc:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4c0:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4c4:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4c8:	0083f694 	movui	r2,4058
  83f4cc:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4d0:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4d4:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4d8:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4dc:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4e0:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4e4:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4e8:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4ec:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4f0:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4f4:	0083f56c 	andhi	r2,zero,4053
  83f4f8:	0083f6a8 	cmpgeui	r2,zero,4058
  83f4fc:	0083f688 	cmpgei	r2,zero,4058
  83f500:	00801244 	movi	r2,73
  83f504:	b8844726 	beq	r23,r2,840624 <_strtod_r+0x1250>
  83f508:	d9000917 	ldw	r4,36(sp)
  83f50c:	d8000815 	stw	zero,32(sp)
  83f510:	0039883a 	mov	fp,zero
  83f514:	20000726 	beq	r4,zero,83f534 <_strtod_r+0x160>
  83f518:	dc800717 	ldw	r18,28(sp)
  83f51c:	d8000a15 	stw	zero,40(sp)
  83f520:	d9400917 	ldw	r5,36(sp)
  83f524:	2c800015 	stw	r18,0(r5)
  83f528:	d8800a17 	ldw	r2,40(sp)
  83f52c:	10000126 	beq	r2,zero,83f534 <_strtod_r+0x160>
  83f530:	e720003c 	xorhi	fp,fp,32768
  83f534:	d8800817 	ldw	r2,32(sp)
  83f538:	e007883a 	mov	r3,fp
  83f53c:	dfc01d17 	ldw	ra,116(sp)
  83f540:	df001c17 	ldw	fp,112(sp)
  83f544:	ddc01b17 	ldw	r23,108(sp)
  83f548:	dd801a17 	ldw	r22,104(sp)
  83f54c:	dd401917 	ldw	r21,100(sp)
  83f550:	dd001817 	ldw	r20,96(sp)
  83f554:	dcc01717 	ldw	r19,92(sp)
  83f558:	dc801617 	ldw	r18,88(sp)
  83f55c:	dc401517 	ldw	r17,84(sp)
  83f560:	dc001417 	ldw	r16,80(sp)
  83f564:	dec01e04 	addi	sp,sp,120
  83f568:	f800283a 	ret
  83f56c:	d8000a15 	stw	zero,40(sp)
  83f570:	1c000044 	addi	r16,r3,1
  83f574:	dc000615 	stw	r16,24(sp)
  83f578:	1f000043 	ldbu	fp,1(r3)
  83f57c:	e0803fcc 	andi	r2,fp,255
  83f580:	1080201c 	xori	r2,r2,128
  83f584:	10bfe004 	addi	r2,r2,-128
  83f588:	103fdf26 	beq	r2,zero,83f508 <__alt_mem_epcs_flash_controller_0+0xff836508>
  83f58c:	e1003fcc 	andi	r4,fp,255
  83f590:	2100201c 	xori	r4,r4,128
  83f594:	213fe004 	addi	r4,r4,-128
  83f598:	00800c04 	movi	r2,48
  83f59c:	2080d426 	beq	r4,r2,83f8f0 <_strtod_r+0x51c>
  83f5a0:	dc000815 	stw	r16,32(sp)
  83f5a4:	d8000c15 	stw	zero,48(sp)
  83f5a8:	e0bff404 	addi	r2,fp,-48
  83f5ac:	10803fcc 	andi	r2,r2,255
  83f5b0:	05400244 	movi	r21,9
  83f5b4:	a8837836 	bltu	r21,r2,840398 <_strtod_r+0xfc4>
  83f5b8:	dc800817 	ldw	r18,32(sp)
  83f5bc:	0029883a 	mov	r20,zero
  83f5c0:	0027883a 	mov	r19,zero
  83f5c4:	0021883a 	mov	r16,zero
  83f5c8:	05800204 	movi	r22,8
  83f5cc:	b4003916 	blt	r22,r16,83f6b4 <_strtod_r+0x2e0>
  83f5d0:	e7003fcc 	andi	fp,fp,255
  83f5d4:	9809883a 	mov	r4,r19
  83f5d8:	01400284 	movi	r5,10
  83f5dc:	e700201c 	xori	fp,fp,128
  83f5e0:	08301e80 	call	8301e8 <__mulsi3>
  83f5e4:	e73fe004 	addi	fp,fp,-128
  83f5e8:	1705883a 	add	r2,r2,fp
  83f5ec:	14fff404 	addi	r19,r2,-48
  83f5f0:	94800044 	addi	r18,r18,1
  83f5f4:	dc800615 	stw	r18,24(sp)
  83f5f8:	97000003 	ldbu	fp,0(r18)
  83f5fc:	84000044 	addi	r16,r16,1
  83f600:	e0bff404 	addi	r2,fp,-48
  83f604:	10803fcc 	andi	r2,r2,255
  83f608:	a8bff02e 	bgeu	r21,r2,83f5cc <__alt_mem_epcs_flash_controller_0+0xff8365cc>
  83f60c:	e5c03fcc 	andi	r23,fp,255
  83f610:	bdc0201c 	xori	r23,r23,128
  83f614:	bdffe004 	addi	r23,r23,-128
  83f618:	8809883a 	mov	r4,r17
  83f61c:	083d7600 	call	83d760 <_localeconv_r>
  83f620:	8809883a 	mov	r4,r17
  83f624:	15400017 	ldw	r21,0(r2)
  83f628:	083d7600 	call	83d760 <_localeconv_r>
  83f62c:	11000017 	ldw	r4,0(r2)
  83f630:	08351100 	call	835110 <strlen>
  83f634:	100d883a 	mov	r6,r2
  83f638:	a80b883a 	mov	r5,r21
  83f63c:	9009883a 	mov	r4,r18
  83f640:	08351a80 	call	8351a8 <strncmp>
  83f644:	1000bd26 	beq	r2,zero,83f93c <_strtod_r+0x568>
  83f648:	8039883a 	mov	fp,r16
  83f64c:	002d883a 	mov	r22,zero
  83f650:	d8000b15 	stw	zero,44(sp)
  83f654:	0025883a 	mov	r18,zero
  83f658:	00801944 	movi	r2,101
  83f65c:	b8806026 	beq	r23,r2,83f7e0 <_strtod_r+0x40c>
  83f660:	00801144 	movi	r2,69
  83f664:	b8805e26 	beq	r23,r2,83f7e0 <_strtod_r+0x40c>
  83f668:	0009883a 	mov	r4,zero
  83f66c:	e0001a1e 	bne	fp,zero,83f6d8 <_strtod_r+0x304>
  83f670:	b000cd26 	beq	r22,zero,83f9a8 <_strtod_r+0x5d4>
  83f674:	d8000815 	stw	zero,32(sp)
  83f678:	d9000917 	ldw	r4,36(sp)
  83f67c:	203faa26 	beq	r4,zero,83f528 <__alt_mem_epcs_flash_controller_0+0xff836528>
  83f680:	dc800617 	ldw	r18,24(sp)
  83f684:	003fa606 	br	83f520 <__alt_mem_epcs_flash_controller_0+0xff836520>
  83f688:	00800044 	movi	r2,1
  83f68c:	d8800a15 	stw	r2,40(sp)
  83f690:	003fb706 	br	83f570 <__alt_mem_epcs_flash_controller_0+0xff836570>
  83f694:	18c00044 	addi	r3,r3,1
  83f698:	d8c00615 	stw	r3,24(sp)
  83f69c:	1f000003 	ldbu	fp,0(r3)
  83f6a0:	e0803fcc 	andi	r2,fp,255
  83f6a4:	20bf642e 	bgeu	r4,r2,83f438 <__alt_mem_epcs_flash_controller_0+0xff836438>
  83f6a8:	1821883a 	mov	r16,r3
  83f6ac:	d8000a15 	stw	zero,40(sp)
  83f6b0:	003fb606 	br	83f58c <__alt_mem_epcs_flash_controller_0+0xff83658c>
  83f6b4:	e7003fcc 	andi	fp,fp,255
  83f6b8:	a009883a 	mov	r4,r20
  83f6bc:	01400284 	movi	r5,10
  83f6c0:	e700201c 	xori	fp,fp,128
  83f6c4:	08301e80 	call	8301e8 <__mulsi3>
  83f6c8:	e73fe004 	addi	fp,fp,-128
  83f6cc:	1705883a 	add	r2,r2,fp
  83f6d0:	153ff404 	addi	r20,r2,-48
  83f6d4:	003fc606 	br	83f5f0 <__alt_mem_epcs_flash_controller_0+0xff8365f0>
  83f6d8:	d8c00b17 	ldw	r3,44(sp)
  83f6dc:	20ebc83a 	sub	r21,r4,r3
  83f6e0:	8000011e 	bne	r16,zero,83f6e8 <_strtod_r+0x314>
  83f6e4:	e021883a 	mov	r16,fp
  83f6e8:	00800404 	movi	r2,16
  83f6ec:	e025883a 	mov	r18,fp
  83f6f0:	1700010e 	bge	r2,fp,83f6f8 <_strtod_r+0x324>
  83f6f4:	1025883a 	mov	r18,r2
  83f6f8:	9809883a 	mov	r4,r19
  83f6fc:	08319ec0 	call	8319ec <__floatunsidf>
  83f700:	102f883a 	mov	r23,r2
  83f704:	00800244 	movi	r2,9
  83f708:	182d883a 	mov	r22,r3
  83f70c:	1480150e 	bge	r2,r18,83f764 <_strtod_r+0x390>
  83f710:	90bffdc4 	addi	r2,r18,-9
  83f714:	100490fa 	slli	r2,r2,3
  83f718:	180b883a 	mov	r5,r3
  83f71c:	00c021b4 	movhi	r3,134
  83f720:	18e6df04 	addi	r3,r3,-25732
  83f724:	1885883a 	add	r2,r3,r2
  83f728:	11800017 	ldw	r6,0(r2)
  83f72c:	11c00117 	ldw	r7,4(r2)
  83f730:	b809883a 	mov	r4,r23
  83f734:	08311800 	call	831180 <__muldf3>
  83f738:	a009883a 	mov	r4,r20
  83f73c:	102f883a 	mov	r23,r2
  83f740:	182d883a 	mov	r22,r3
  83f744:	08319ec0 	call	8319ec <__floatunsidf>
  83f748:	b809883a 	mov	r4,r23
  83f74c:	b00b883a 	mov	r5,r22
  83f750:	100d883a 	mov	r6,r2
  83f754:	180f883a 	mov	r7,r3
  83f758:	084790c0 	call	84790c <__adddf3>
  83f75c:	102f883a 	mov	r23,r2
  83f760:	182d883a 	mov	r22,r3
  83f764:	008003c4 	movi	r2,15
  83f768:	17009416 	blt	r2,fp,83f9bc <_strtod_r+0x5e8>
  83f76c:	a8001926 	beq	r21,zero,83f7d4 <_strtod_r+0x400>
  83f770:	05439c0e 	bge	zero,r21,8405e4 <_strtod_r+0x1210>
  83f774:	00c00584 	movi	r3,22
  83f778:	1d430f16 	blt	r3,r21,8403b8 <_strtod_r+0xfe4>
  83f77c:	a82a90fa 	slli	r21,r21,3
  83f780:	008021b4 	movhi	r2,134
  83f784:	10a6df04 	addi	r2,r2,-25732
  83f788:	1545883a 	add	r2,r2,r21
  83f78c:	11000017 	ldw	r4,0(r2)
  83f790:	11400117 	ldw	r5,4(r2)
  83f794:	b80d883a 	mov	r6,r23
  83f798:	b00f883a 	mov	r7,r22
  83f79c:	08311800 	call	831180 <__muldf3>
  83f7a0:	d8800815 	stw	r2,32(sp)
  83f7a4:	1839883a 	mov	fp,r3
  83f7a8:	003fb306 	br	83f678 <__alt_mem_epcs_flash_controller_0+0xff836678>
  83f7ac:	014021b4 	movhi	r5,134
  83f7b0:	29671504 	addi	r5,r5,-25516
  83f7b4:	d9800204 	addi	r6,sp,8
  83f7b8:	d9000604 	addi	r4,sp,24
  83f7bc:	08465380 	call	846538 <__hexnan>
  83f7c0:	00c00144 	movi	r3,5
  83f7c4:	10c2161e 	bne	r2,r3,840020 <_strtod_r+0xc4c>
  83f7c8:	dd800317 	ldw	r22,12(sp)
  83f7cc:	ddc00217 	ldw	r23,8(sp)
  83f7d0:	b59ffc34 	orhi	r22,r22,32752
  83f7d4:	ddc00815 	stw	r23,32(sp)
  83f7d8:	b039883a 	mov	fp,r22
  83f7dc:	003fa606 	br	83f678 <__alt_mem_epcs_flash_controller_0+0xff836678>
  83f7e0:	e001a926 	beq	fp,zero,83fe88 <_strtod_r+0xab4>
  83f7e4:	d8c00617 	ldw	r3,24(sp)
  83f7e8:	18800044 	addi	r2,r3,1
  83f7ec:	d8800615 	stw	r2,24(sp)
  83f7f0:	d8c00715 	stw	r3,28(sp)
  83f7f4:	18c00047 	ldb	r3,1(r3)
  83f7f8:	00800ac4 	movi	r2,43
  83f7fc:	1881e526 	beq	r3,r2,83ff94 <_strtod_r+0xbc0>
  83f800:	00800b44 	movi	r2,45
  83f804:	1881dc26 	beq	r3,r2,83ff78 <_strtod_r+0xba4>
  83f808:	182f883a 	mov	r23,r3
  83f80c:	d8000e15 	stw	zero,56(sp)
  83f810:	b8bff404 	addi	r2,r23,-48
  83f814:	01000244 	movi	r4,9
  83f818:	2081ab36 	bltu	r4,r2,83fec8 <_strtod_r+0xaf4>
  83f81c:	00800c04 	movi	r2,48
  83f820:	b880071e 	bne	r23,r2,83f840 <_strtod_r+0x46c>
  83f824:	d8800617 	ldw	r2,24(sp)
  83f828:	b809883a 	mov	r4,r23
  83f82c:	10800044 	addi	r2,r2,1
  83f830:	d8800615 	stw	r2,24(sp)
  83f834:	15c00007 	ldb	r23,0(r2)
  83f838:	10800044 	addi	r2,r2,1
  83f83c:	b93ffc26 	beq	r23,r4,83f830 <__alt_mem_epcs_flash_controller_0+0xff836830>
  83f840:	b8bff3c4 	addi	r2,r23,-49
  83f844:	01000204 	movi	r4,8
  83f848:	20bf8736 	bltu	r4,r2,83f668 <__alt_mem_epcs_flash_controller_0+0xff836668>
  83f84c:	d8c00617 	ldw	r3,24(sp)
  83f850:	b93ff404 	addi	r4,r23,-48
  83f854:	01400244 	movi	r5,9
  83f858:	1ac00044 	addi	r11,r3,1
  83f85c:	dac00615 	stw	r11,24(sp)
  83f860:	d8c00d15 	stw	r3,52(sp)
  83f864:	18c00043 	ldbu	r3,1(r3)
  83f868:	18bff404 	addi	r2,r3,-48
  83f86c:	1dc03fcc 	andi	r23,r3,255
  83f870:	bdc0201c 	xori	r23,r23,128
  83f874:	10803fcc 	andi	r2,r2,255
  83f878:	bdffe004 	addi	r23,r23,-128
  83f87c:	28801136 	bltu	r5,r2,83f8c4 <_strtod_r+0x4f0>
  83f880:	d8c00d17 	ldw	r3,52(sp)
  83f884:	1d400084 	addi	r21,r3,2
  83f888:	01400284 	movi	r5,10
  83f88c:	08301e80 	call	8301e8 <__mulsi3>
  83f890:	dd400615 	stw	r21,24(sp)
  83f894:	a9400003 	ldbu	r5,0(r21)
  83f898:	15c5883a 	add	r2,r2,r23
  83f89c:	a817883a 	mov	r11,r21
  83f8a0:	28fff404 	addi	r3,r5,-48
  83f8a4:	2dc03fcc 	andi	r23,r5,255
  83f8a8:	bdc0201c 	xori	r23,r23,128
  83f8ac:	18c03fcc 	andi	r3,r3,255
  83f8b0:	01400244 	movi	r5,9
  83f8b4:	113ff404 	addi	r4,r2,-48
  83f8b8:	bdffe004 	addi	r23,r23,-128
  83f8bc:	ad400044 	addi	r21,r21,1
  83f8c0:	28fff12e 	bgeu	r5,r3,83f888 <__alt_mem_epcs_flash_controller_0+0xff836888>
  83f8c4:	d8c00d17 	ldw	r3,52(sp)
  83f8c8:	00800204 	movi	r2,8
  83f8cc:	58d7c83a 	sub	r11,r11,r3
  83f8d0:	12c2ab16 	blt	r2,r11,840380 <_strtod_r+0xfac>
  83f8d4:	009387c4 	movi	r2,19999
  83f8d8:	1100010e 	bge	r2,r4,83f8e0 <_strtod_r+0x50c>
  83f8dc:	1009883a 	mov	r4,r2
  83f8e0:	d8c00e17 	ldw	r3,56(sp)
  83f8e4:	183f6126 	beq	r3,zero,83f66c <__alt_mem_epcs_flash_controller_0+0xff83666c>
  83f8e8:	0109c83a 	sub	r4,zero,r4
  83f8ec:	003f5f06 	br	83f66c <__alt_mem_epcs_flash_controller_0+0xff83666c>
  83f8f0:	80800047 	ldb	r2,1(r16)
  83f8f4:	00c01604 	movi	r3,88
  83f8f8:	10c20026 	beq	r2,r3,8400fc <_strtod_r+0xd28>
  83f8fc:	00c01e04 	movi	r3,120
  83f900:	10c1fe26 	beq	r2,r3,8400fc <_strtod_r+0xd28>
  83f904:	80800044 	addi	r2,r16,1
  83f908:	1021883a 	mov	r16,r2
  83f90c:	d8800615 	stw	r2,24(sp)
  83f910:	10800044 	addi	r2,r2,1
  83f914:	173fffc3 	ldbu	fp,-1(r2)
  83f918:	e0c03fcc 	andi	r3,fp,255
  83f91c:	18c0201c 	xori	r3,r3,128
  83f920:	18ffe004 	addi	r3,r3,-128
  83f924:	193ff826 	beq	r3,r4,83f908 <__alt_mem_epcs_flash_controller_0+0xff836908>
  83f928:	18002126 	beq	r3,zero,83f9b0 <_strtod_r+0x5dc>
  83f92c:	00c00044 	movi	r3,1
  83f930:	dc000815 	stw	r16,32(sp)
  83f934:	d8c00c15 	stw	r3,48(sp)
  83f938:	003f1b06 	br	83f5a8 <__alt_mem_epcs_flash_controller_0+0xff8365a8>
  83f93c:	8809883a 	mov	r4,r17
  83f940:	083d7600 	call	83d760 <_localeconv_r>
  83f944:	11000017 	ldw	r4,0(r2)
  83f948:	08351100 	call	835110 <strlen>
  83f94c:	d8c00617 	ldw	r3,24(sp)
  83f950:	1885883a 	add	r2,r3,r2
  83f954:	d8800615 	stw	r2,24(sp)
  83f958:	15c00007 	ldb	r23,0(r2)
  83f95c:	8001771e 	bne	r16,zero,83ff3c <_strtod_r+0xb68>
  83f960:	01000c04 	movi	r4,48
  83f964:	b903581e 	bne	r23,r4,8406c8 <_strtod_r+0x12f4>
  83f968:	11000044 	addi	r4,r2,1
  83f96c:	b80b883a 	mov	r5,r23
  83f970:	d9000615 	stw	r4,24(sp)
  83f974:	25c00007 	ldb	r23,0(r4)
  83f978:	20adc83a 	sub	r22,r4,r2
  83f97c:	21000044 	addi	r4,r4,1
  83f980:	b97ffb26 	beq	r23,r5,83f970 <__alt_mem_epcs_flash_controller_0+0xff836970>
  83f984:	b8bff3c4 	addi	r2,r23,-49
  83f988:	01000204 	movi	r4,8
  83f98c:	2083002e 	bgeu	r4,r2,840590 <_strtod_r+0x11bc>
  83f990:	00801944 	movi	r2,101
  83f994:	b8813a26 	beq	r23,r2,83fe80 <_strtod_r+0xaac>
  83f998:	0039883a 	mov	fp,zero
  83f99c:	d8000b15 	stw	zero,44(sp)
  83f9a0:	04800044 	movi	r18,1
  83f9a4:	003f2e06 	br	83f660 <__alt_mem_epcs_flash_controller_0+0xff836660>
  83f9a8:	d8c00c17 	ldw	r3,48(sp)
  83f9ac:	18017d26 	beq	r3,zero,83ffa4 <_strtod_r+0xbd0>
  83f9b0:	d8000815 	stw	zero,32(sp)
  83f9b4:	0039883a 	mov	fp,zero
  83f9b8:	003f2f06 	br	83f678 <__alt_mem_epcs_flash_controller_0+0xff836678>
  83f9bc:	e4a5c83a 	sub	r18,fp,r18
  83f9c0:	9565883a 	add	r18,r18,r21
  83f9c4:	0482370e 	bge	zero,r18,8402a4 <_strtod_r+0xed0>
  83f9c8:	908003cc 	andi	r2,r18,15
  83f9cc:	10000b26 	beq	r2,zero,83f9fc <_strtod_r+0x628>
  83f9d0:	100490fa 	slli	r2,r2,3
  83f9d4:	00c021b4 	movhi	r3,134
  83f9d8:	18e6df04 	addi	r3,r3,-25732
  83f9dc:	1885883a 	add	r2,r3,r2
  83f9e0:	11000017 	ldw	r4,0(r2)
  83f9e4:	11400117 	ldw	r5,4(r2)
  83f9e8:	b80d883a 	mov	r6,r23
  83f9ec:	b00f883a 	mov	r7,r22
  83f9f0:	08311800 	call	831180 <__muldf3>
  83f9f4:	102f883a 	mov	r23,r2
  83f9f8:	182d883a 	mov	r22,r3
  83f9fc:	053ffc04 	movi	r20,-16
  83fa00:	9524703a 	and	r18,r18,r20
  83fa04:	90003826 	beq	r18,zero,83fae8 <_strtod_r+0x714>
  83fa08:	00804d04 	movi	r2,308
  83fa0c:	1481eb16 	blt	r2,r18,8401bc <_strtod_r+0xde8>
  83fa10:	9029d13a 	srai	r20,r18,4
  83fa14:	02c00044 	movi	r11,1
  83fa18:	5d03900e 	bge	r11,r20,84085c <_strtod_r+0x1488>
  83fa1c:	010021b4 	movhi	r4,134
  83fa20:	2126d504 	addi	r4,r4,-25772
  83fa24:	2011883a 	mov	r8,r4
  83fa28:	0025883a 	mov	r18,zero
  83fa2c:	880b883a 	mov	r5,r17
  83fa30:	d9000715 	stw	r4,28(sp)
  83fa34:	dc000b15 	stw	r16,44(sp)
  83fa38:	9023883a 	mov	r17,r18
  83fa3c:	b805883a 	mov	r2,r23
  83fa40:	b007883a 	mov	r3,r22
  83fa44:	0009883a 	mov	r4,zero
  83fa48:	4021883a 	mov	r16,r8
  83fa4c:	2825883a 	mov	r18,r5
  83fa50:	a180004c 	andi	r6,r20,1
  83fa54:	30000826 	beq	r6,zero,83fa78 <_strtod_r+0x6a4>
  83fa58:	81800017 	ldw	r6,0(r16)
  83fa5c:	81c00117 	ldw	r7,4(r16)
  83fa60:	1009883a 	mov	r4,r2
  83fa64:	180b883a 	mov	r5,r3
  83fa68:	dac01315 	stw	r11,76(sp)
  83fa6c:	08311800 	call	831180 <__muldf3>
  83fa70:	dac01317 	ldw	r11,76(sp)
  83fa74:	01000044 	movi	r4,1
  83fa78:	a029d07a 	srai	r20,r20,1
  83fa7c:	8c400044 	addi	r17,r17,1
  83fa80:	84000204 	addi	r16,r16,8
  83fa84:	a2fff21e 	bne	r20,r11,83fa50 <__alt_mem_epcs_flash_controller_0+0xff836a50>
  83fa88:	900b883a 	mov	r5,r18
  83fa8c:	21003fcc 	andi	r4,r4,255
  83fa90:	8825883a 	mov	r18,r17
  83fa94:	dc000b17 	ldw	r16,44(sp)
  83fa98:	2823883a 	mov	r17,r5
  83fa9c:	2003c01e 	bne	r4,zero,8409a0 <_strtod_r+0x15cc>
  83faa0:	901490fa 	slli	r10,r18,3
  83faa4:	d8800717 	ldw	r2,28(sp)
  83faa8:	01ff2c34 	movhi	r7,64688
  83faac:	b80d883a 	mov	r6,r23
  83fab0:	12a5883a 	add	r18,r2,r10
  83fab4:	91000017 	ldw	r4,0(r18)
  83fab8:	91400117 	ldw	r5,4(r18)
  83fabc:	b1cf883a 	add	r7,r22,r7
  83fac0:	08311800 	call	831180 <__muldf3>
  83fac4:	102f883a 	mov	r23,r2
  83fac8:	011f2834 	movhi	r4,31904
  83facc:	189ffc2c 	andhi	r2,r3,32752
  83fad0:	2081ba36 	bltu	r4,r2,8401bc <_strtod_r+0xde8>
  83fad4:	011f2434 	movhi	r4,31888
  83fad8:	20834a2e 	bgeu	r4,r2,840804 <_strtod_r+0x1430>
  83fadc:	059ffc34 	movhi	r22,32752
  83fae0:	b5bfffc4 	addi	r22,r22,-1
  83fae4:	05ffffc4 	movi	r23,-1
  83fae8:	d8000715 	stw	zero,28(sp)
  83faec:	d9400817 	ldw	r5,32(sp)
  83faf0:	dcc00015 	stw	r19,0(sp)
  83faf4:	e00f883a 	mov	r7,fp
  83faf8:	800d883a 	mov	r6,r16
  83fafc:	8809883a 	mov	r4,r17
  83fb00:	083df440 	call	83df44 <__s2b>
  83fb04:	d8800b15 	stw	r2,44(sp)
  83fb08:	1001ac26 	beq	r2,zero,8401bc <_strtod_r+0xde8>
  83fb0c:	a807d7fa 	srai	r3,r21,31
  83fb10:	0545c83a 	sub	r2,zero,r21
  83fb14:	dd400c15 	stw	r21,48(sp)
  83fb18:	1886703a 	and	r3,r3,r2
  83fb1c:	d8c00e15 	stw	r3,56(sp)
  83fb20:	a8015916 	blt	r21,zero,840088 <_strtod_r+0xcb4>
  83fb24:	d9400b17 	ldw	r5,44(sp)
  83fb28:	0011883a 	mov	r8,zero
  83fb2c:	0021883a 	mov	r16,zero
  83fb30:	29400304 	addi	r5,r5,12
  83fb34:	d9401115 	stw	r5,68(sp)
  83fb38:	4025883a 	mov	r18,r8
  83fb3c:	d8800b17 	ldw	r2,44(sp)
  83fb40:	8809883a 	mov	r4,r17
  83fb44:	11400117 	ldw	r5,4(r2)
  83fb48:	083dd2c0 	call	83dd2c <_Balloc>
  83fb4c:	1027883a 	mov	r19,r2
  83fb50:	10015226 	beq	r2,zero,84009c <_strtod_r+0xcc8>
  83fb54:	d8c00b17 	ldw	r3,44(sp)
  83fb58:	d9401117 	ldw	r5,68(sp)
  83fb5c:	11000304 	addi	r4,r2,12
  83fb60:	19800417 	ldw	r6,16(r3)
  83fb64:	31800084 	addi	r6,r6,2
  83fb68:	318d883a 	add	r6,r6,r6
  83fb6c:	318d883a 	add	r6,r6,r6
  83fb70:	0833c4c0 	call	833c4c <memcpy>
  83fb74:	d9000204 	addi	r4,sp,8
  83fb78:	d9000015 	stw	r4,0(sp)
  83fb7c:	d9c00404 	addi	r7,sp,16
  83fb80:	b80b883a 	mov	r5,r23
  83fb84:	b00d883a 	mov	r6,r22
  83fb88:	8809883a 	mov	r4,r17
  83fb8c:	083ea7c0 	call	83ea7c <__d2b>
  83fb90:	d8800515 	stw	r2,20(sp)
  83fb94:	ddc00815 	stw	r23,32(sp)
  83fb98:	dd801215 	stw	r22,72(sp)
  83fb9c:	10029f26 	beq	r2,zero,84061c <_strtod_r+0x1248>
  83fba0:	01400044 	movi	r5,1
  83fba4:	8809883a 	mov	r4,r17
  83fba8:	083e1600 	call	83e160 <__i2b>
  83fbac:	1021883a 	mov	r16,r2
  83fbb0:	10013a26 	beq	r2,zero,84009c <_strtod_r+0xcc8>
  83fbb4:	d8800417 	ldw	r2,16(sp)
  83fbb8:	1000b816 	blt	r2,zero,83fe9c <_strtod_r+0xac8>
  83fbbc:	d9400e17 	ldw	r5,56(sp)
  83fbc0:	d9000c17 	ldw	r4,48(sp)
  83fbc4:	28a9883a 	add	r20,r5,r2
  83fbc8:	d9400717 	ldw	r5,28(sp)
  83fbcc:	dd400217 	ldw	r21,8(sp)
  83fbd0:	073f0084 	movi	fp,-1022
  83fbd4:	1147c83a 	sub	r3,r2,r5
  83fbd8:	1d47883a 	add	r3,r3,r21
  83fbdc:	00800d84 	movi	r2,54
  83fbe0:	18ffffc4 	addi	r3,r3,-1
  83fbe4:	156bc83a 	sub	r21,r2,r21
  83fbe8:	1f00950e 	bge	r3,fp,83fe40 <_strtod_r+0xa6c>
  83fbec:	e0f9c83a 	sub	fp,fp,r3
  83fbf0:	008007c4 	movi	r2,31
  83fbf4:	af2bc83a 	sub	r21,r21,fp
  83fbf8:	1700ac16 	blt	r2,fp,83feac <_strtod_r+0xad8>
  83fbfc:	00800044 	movi	r2,1
  83fc00:	1704983a 	sll	r2,r2,fp
  83fc04:	d8000d15 	stw	zero,52(sp)
  83fc08:	d8800f15 	stw	r2,60(sp)
  83fc0c:	2547883a 	add	r3,r4,r21
  83fc10:	d9000717 	ldw	r4,28(sp)
  83fc14:	a56b883a 	add	r21,r20,r21
  83fc18:	20f9883a 	add	fp,r4,r3
  83fc1c:	a009883a 	mov	r4,r20
  83fc20:	ad00010e 	bge	r21,r20,83fc28 <_strtod_r+0x854>
  83fc24:	a809883a 	mov	r4,r21
  83fc28:	e005883a 	mov	r2,fp
  83fc2c:	2700010e 	bge	r4,fp,83fc34 <_strtod_r+0x860>
  83fc30:	2005883a 	mov	r2,r4
  83fc34:	0080030e 	bge	zero,r2,83fc44 <_strtod_r+0x870>
  83fc38:	a8abc83a 	sub	r21,r21,r2
  83fc3c:	e0b9c83a 	sub	fp,fp,r2
  83fc40:	a0a9c83a 	sub	r20,r20,r2
  83fc44:	d9400e17 	ldw	r5,56(sp)
  83fc48:	28001126 	beq	r5,zero,83fc90 <_strtod_r+0x8bc>
  83fc4c:	280d883a 	mov	r6,r5
  83fc50:	8809883a 	mov	r4,r17
  83fc54:	800b883a 	mov	r5,r16
  83fc58:	083e4280 	call	83e428 <__pow5mult>
  83fc5c:	1021883a 	mov	r16,r2
  83fc60:	10010e26 	beq	r2,zero,84009c <_strtod_r+0xcc8>
  83fc64:	d9800517 	ldw	r6,20(sp)
  83fc68:	100b883a 	mov	r5,r2
  83fc6c:	8809883a 	mov	r4,r17
  83fc70:	083e19c0 	call	83e19c <__multiply>
  83fc74:	10010926 	beq	r2,zero,84009c <_strtod_r+0xcc8>
  83fc78:	d9400517 	ldw	r5,20(sp)
  83fc7c:	8809883a 	mov	r4,r17
  83fc80:	d8801315 	stw	r2,76(sp)
  83fc84:	083ddd40 	call	83ddd4 <_Bfree>
  83fc88:	d8801317 	ldw	r2,76(sp)
  83fc8c:	d8800515 	stw	r2,20(sp)
  83fc90:	0540060e 	bge	zero,r21,83fcac <_strtod_r+0x8d8>
  83fc94:	d9400517 	ldw	r5,20(sp)
  83fc98:	a80d883a 	mov	r6,r21
  83fc9c:	8809883a 	mov	r4,r17
  83fca0:	083e5680 	call	83e568 <__lshift>
  83fca4:	d8800515 	stw	r2,20(sp)
  83fca8:	10025c26 	beq	r2,zero,84061c <_strtod_r+0x1248>
  83fcac:	d8800c17 	ldw	r2,48(sp)
  83fcb0:	10000626 	beq	r2,zero,83fccc <_strtod_r+0x8f8>
  83fcb4:	d9800c17 	ldw	r6,48(sp)
  83fcb8:	980b883a 	mov	r5,r19
  83fcbc:	8809883a 	mov	r4,r17
  83fcc0:	083e4280 	call	83e428 <__pow5mult>
  83fcc4:	1027883a 	mov	r19,r2
  83fcc8:	1000f426 	beq	r2,zero,84009c <_strtod_r+0xcc8>
  83fccc:	0700060e 	bge	zero,fp,83fce8 <_strtod_r+0x914>
  83fcd0:	980b883a 	mov	r5,r19
  83fcd4:	e00d883a 	mov	r6,fp
  83fcd8:	8809883a 	mov	r4,r17
  83fcdc:	083e5680 	call	83e568 <__lshift>
  83fce0:	1027883a 	mov	r19,r2
  83fce4:	1000ed26 	beq	r2,zero,84009c <_strtod_r+0xcc8>
  83fce8:	0500060e 	bge	zero,r20,83fd04 <_strtod_r+0x930>
  83fcec:	800b883a 	mov	r5,r16
  83fcf0:	a00d883a 	mov	r6,r20
  83fcf4:	8809883a 	mov	r4,r17
  83fcf8:	083e5680 	call	83e568 <__lshift>
  83fcfc:	1021883a 	mov	r16,r2
  83fd00:	1000e626 	beq	r2,zero,84009c <_strtod_r+0xcc8>
  83fd04:	d9400517 	ldw	r5,20(sp)
  83fd08:	980d883a 	mov	r6,r19
  83fd0c:	8809883a 	mov	r4,r17
  83fd10:	083e7100 	call	83e710 <__mdiff>
  83fd14:	1025883a 	mov	r18,r2
  83fd18:	1000e026 	beq	r2,zero,84009c <_strtod_r+0xcc8>
  83fd1c:	15400317 	ldw	r21,12(r2)
  83fd20:	800b883a 	mov	r5,r16
  83fd24:	10000315 	stw	zero,12(r2)
  83fd28:	1009883a 	mov	r4,r2
  83fd2c:	083e6b00 	call	83e6b0 <__mcmp>
  83fd30:	10026716 	blt	r2,zero,8406d0 <_strtod_r+0x12fc>
  83fd34:	10029626 	beq	r2,zero,840790 <_strtod_r+0x13bc>
  83fd38:	800b883a 	mov	r5,r16
  83fd3c:	9009883a 	mov	r4,r18
  83fd40:	083ebc80 	call	83ebc8 <__ratio>
  83fd44:	000d883a 	mov	r6,zero
  83fd48:	01d00034 	movhi	r7,16384
  83fd4c:	1009883a 	mov	r4,r2
  83fd50:	180b883a 	mov	r5,r3
  83fd54:	1039883a 	mov	fp,r2
  83fd58:	1829883a 	mov	r20,r3
  83fd5c:	0848cec0 	call	848cec <__ledf2>
  83fd60:	00803b16 	blt	zero,r2,83fe50 <_strtod_r+0xa7c>
  83fd64:	a8005e26 	beq	r21,zero,83fee0 <_strtod_r+0xb0c>
  83fd68:	050ffc34 	movhi	r20,16368
  83fd6c:	d8000f15 	stw	zero,60(sp)
  83fd70:	d8001015 	stw	zero,64(sp)
  83fd74:	dd000d15 	stw	r20,52(sp)
  83fd78:	b71ffc2c 	andhi	fp,r22,32752
  83fd7c:	009ff834 	movhi	r2,32736
  83fd80:	e080f226 	beq	fp,r2,84014c <_strtod_r+0xd78>
  83fd84:	d9000717 	ldw	r4,28(sp)
  83fd88:	20000c26 	beq	r4,zero,83fdbc <_strtod_r+0x9e8>
  83fd8c:	0081a834 	movhi	r2,1696
  83fd90:	17000a36 	bltu	r2,fp,83fdbc <_strtod_r+0x9e8>
  83fd94:	d9001017 	ldw	r4,64(sp)
  83fd98:	d9400d17 	ldw	r5,52(sp)
  83fd9c:	01d07834 	movhi	r7,16864
  83fda0:	39ffffc4 	addi	r7,r7,-1
  83fda4:	01bff034 	movhi	r6,65472
  83fda8:	0848cec0 	call	848cec <__ledf2>
  83fdac:	0080a70e 	bge	zero,r2,84004c <_strtod_r+0xc78>
  83fdb0:	0081ac34 	movhi	r2,1712
  83fdb4:	a091883a 	add	r8,r20,r2
  83fdb8:	4729c83a 	sub	r20,r8,fp
  83fdbc:	b809883a 	mov	r4,r23
  83fdc0:	b00b883a 	mov	r5,r22
  83fdc4:	083e90c0 	call	83e90c <__ulp>
  83fdc8:	d9000f17 	ldw	r4,60(sp)
  83fdcc:	a00b883a 	mov	r5,r20
  83fdd0:	100d883a 	mov	r6,r2
  83fdd4:	180f883a 	mov	r7,r3
  83fdd8:	08311800 	call	831180 <__muldf3>
  83fddc:	b80d883a 	mov	r6,r23
  83fde0:	b00f883a 	mov	r7,r22
  83fde4:	1009883a 	mov	r4,r2
  83fde8:	180b883a 	mov	r5,r3
  83fdec:	084790c0 	call	84790c <__adddf3>
  83fdf0:	102f883a 	mov	r23,r2
  83fdf4:	182d883a 	mov	r22,r3
  83fdf8:	1829883a 	mov	r20,r3
  83fdfc:	d9000717 	ldw	r4,28(sp)
  83fe00:	2000021e 	bne	r4,zero,83fe0c <_strtod_r+0xa38>
  83fe04:	a09ffc2c 	andhi	r2,r20,32752
  83fe08:	e080f126 	beq	fp,r2,8401d0 <_strtod_r+0xdfc>
  83fe0c:	d9400517 	ldw	r5,20(sp)
  83fe10:	8809883a 	mov	r4,r17
  83fe14:	083ddd40 	call	83ddd4 <_Bfree>
  83fe18:	980b883a 	mov	r5,r19
  83fe1c:	8809883a 	mov	r4,r17
  83fe20:	083ddd40 	call	83ddd4 <_Bfree>
  83fe24:	800b883a 	mov	r5,r16
  83fe28:	8809883a 	mov	r4,r17
  83fe2c:	083ddd40 	call	83ddd4 <_Bfree>
  83fe30:	900b883a 	mov	r5,r18
  83fe34:	8809883a 	mov	r4,r17
  83fe38:	083ddd40 	call	83ddd4 <_Bfree>
  83fe3c:	003f3f06 	br	83fb3c <__alt_mem_epcs_flash_controller_0+0xff836b3c>
  83fe40:	00c00044 	movi	r3,1
  83fe44:	d8000d15 	stw	zero,52(sp)
  83fe48:	d8c00f15 	stw	r3,60(sp)
  83fe4c:	003f6f06 	br	83fc0c <__alt_mem_epcs_flash_controller_0+0xff836c0c>
  83fe50:	000d883a 	mov	r6,zero
  83fe54:	01cff834 	movhi	r7,16352
  83fe58:	e009883a 	mov	r4,fp
  83fe5c:	a00b883a 	mov	r5,r20
  83fe60:	08311800 	call	831180 <__muldf3>
  83fe64:	d8801015 	stw	r2,64(sp)
  83fe68:	d8c00d15 	stw	r3,52(sp)
  83fe6c:	a8001a1e 	bne	r21,zero,83fed8 <_strtod_r+0xb04>
  83fe70:	1a20003c 	xorhi	r8,r3,32768
  83fe74:	d8800f15 	stw	r2,60(sp)
  83fe78:	4029883a 	mov	r20,r8
  83fe7c:	003fbe06 	br	83fd78 <__alt_mem_epcs_flash_controller_0+0xff836d78>
  83fe80:	d8000b15 	stw	zero,44(sp)
  83fe84:	04800044 	movi	r18,1
  83fe88:	b000021e 	bne	r22,zero,83fe94 <_strtod_r+0xac0>
  83fe8c:	d8c00c17 	ldw	r3,48(sp)
  83fe90:	183d9d26 	beq	r3,zero,83f508 <__alt_mem_epcs_flash_controller_0+0xff836508>
  83fe94:	0039883a 	mov	fp,zero
  83fe98:	003e5206 	br	83f7e4 <__alt_mem_epcs_flash_controller_0+0xff8367e4>
  83fe9c:	d8c00c17 	ldw	r3,48(sp)
  83fea0:	dd000e17 	ldw	r20,56(sp)
  83fea4:	1889c83a 	sub	r4,r3,r2
  83fea8:	003f4706 	br	83fbc8 <__alt_mem_epcs_flash_controller_0+0xff836bc8>
  83feac:	00bef884 	movi	r2,-1054
  83feb0:	07000044 	movi	fp,1
  83feb4:	10c5c83a 	sub	r2,r2,r3
  83feb8:	e084983a 	sll	r2,fp,r2
  83febc:	df000f15 	stw	fp,60(sp)
  83fec0:	d8800d15 	stw	r2,52(sp)
  83fec4:	003f5106 	br	83fc0c <__alt_mem_epcs_flash_controller_0+0xff836c0c>
  83fec8:	d8c00717 	ldw	r3,28(sp)
  83fecc:	0009883a 	mov	r4,zero
  83fed0:	d8c00615 	stw	r3,24(sp)
  83fed4:	003de506 	br	83f66c <__alt_mem_epcs_flash_controller_0+0xff83666c>
  83fed8:	da000d17 	ldw	r8,52(sp)
  83fedc:	003fe506 	br	83fe74 <__alt_mem_epcs_flash_controller_0+0xff836e74>
  83fee0:	b800521e 	bne	r23,zero,84002c <_strtod_r+0xc58>
  83fee4:	01000434 	movhi	r4,16
  83fee8:	213fffc4 	addi	r4,r4,-1
  83feec:	b104703a 	and	r2,r22,r4
  83fef0:	1000501e 	bne	r2,zero,840034 <_strtod_r+0xc60>
  83fef4:	000d883a 	mov	r6,zero
  83fef8:	01cffc34 	movhi	r7,16368
  83fefc:	e009883a 	mov	r4,fp
  83ff00:	a00b883a 	mov	r5,r20
  83ff04:	0848cec0 	call	848cec <__ledf2>
  83ff08:	10024216 	blt	r2,zero,840814 <_strtod_r+0x1440>
  83ff0c:	a00b883a 	mov	r5,r20
  83ff10:	000d883a 	mov	r6,zero
  83ff14:	01cff834 	movhi	r7,16352
  83ff18:	e009883a 	mov	r4,fp
  83ff1c:	08311800 	call	831180 <__muldf3>
  83ff20:	d8801015 	stw	r2,64(sp)
  83ff24:	d8c00d15 	stw	r3,52(sp)
  83ff28:	1029883a 	mov	r20,r2
  83ff2c:	1a20003c 	xorhi	r8,r3,32768
  83ff30:	dd000f15 	stw	r20,60(sp)
  83ff34:	4029883a 	mov	r20,r8
  83ff38:	003f8f06 	br	83fd78 <__alt_mem_epcs_flash_controller_0+0xff836d78>
  83ff3c:	8039883a 	mov	fp,r16
  83ff40:	002d883a 	mov	r22,zero
  83ff44:	d8000b15 	stw	zero,44(sp)
  83ff48:	bd7ff404 	addi	r21,r23,-48
  83ff4c:	00800244 	movi	r2,9
  83ff50:	15401236 	bltu	r2,r21,83ff9c <_strtod_r+0xbc8>
  83ff54:	dd400e15 	stw	r21,56(sp)
  83ff58:	b0800044 	addi	r2,r22,1
  83ff5c:	a801701e 	bne	r21,zero,840520 <_strtod_r+0x114c>
  83ff60:	ddc00617 	ldw	r23,24(sp)
  83ff64:	102d883a 	mov	r22,r2
  83ff68:	b8800044 	addi	r2,r23,1
  83ff6c:	d8800615 	stw	r2,24(sp)
  83ff70:	bdc00047 	ldb	r23,1(r23)
  83ff74:	003ff406 	br	83ff48 <__alt_mem_epcs_flash_controller_0+0xff836f48>
  83ff78:	00c00044 	movi	r3,1
  83ff7c:	d8c00e15 	stw	r3,56(sp)
  83ff80:	d8c00717 	ldw	r3,28(sp)
  83ff84:	18800084 	addi	r2,r3,2
  83ff88:	d8800615 	stw	r2,24(sp)
  83ff8c:	1dc00087 	ldb	r23,2(r3)
  83ff90:	003e1f06 	br	83f810 <__alt_mem_epcs_flash_controller_0+0xff836810>
  83ff94:	d8000e15 	stw	zero,56(sp)
  83ff98:	003ff906 	br	83ff80 <__alt_mem_epcs_flash_controller_0+0xff836f80>
  83ff9c:	04800044 	movi	r18,1
  83ffa0:	003dad06 	br	83f658 <__alt_mem_epcs_flash_controller_0+0xff836658>
  83ffa4:	903d581e 	bne	r18,zero,83f508 <__alt_mem_epcs_flash_controller_0+0xff836508>
  83ffa8:	00801384 	movi	r2,78
  83ffac:	b8800526 	beq	r23,r2,83ffc4 <_strtod_r+0xbf0>
  83ffb0:	15fd530e 	bge	r2,r23,83f500 <__alt_mem_epcs_flash_controller_0+0xff836500>
  83ffb4:	00801a44 	movi	r2,105
  83ffb8:	b8819a26 	beq	r23,r2,840624 <_strtod_r+0x1250>
  83ffbc:	00801b84 	movi	r2,110
  83ffc0:	b8bd511e 	bne	r23,r2,83f508 <__alt_mem_epcs_flash_controller_0+0xff836508>
  83ffc4:	014021b4 	movhi	r5,134
  83ffc8:	d9000617 	ldw	r4,24(sp)
  83ffcc:	29671404 	addi	r5,r5,-25520
  83ffd0:	01c00644 	movi	r7,25
  83ffd4:	00000b06 	br	840004 <_strtod_r+0xc30>
  83ffd8:	21000044 	addi	r4,r4,1
  83ffdc:	20800003 	ldbu	r2,0(r4)
  83ffe0:	10ffefc4 	addi	r3,r2,-65
  83ffe4:	10803fcc 	andi	r2,r2,255
  83ffe8:	1080201c 	xori	r2,r2,128
  83ffec:	18c03fcc 	andi	r3,r3,255
  83fff0:	10bfe004 	addi	r2,r2,-128
  83fff4:	38c00136 	bltu	r7,r3,83fffc <_strtod_r+0xc28>
  83fff8:	10800804 	addi	r2,r2,32
  83fffc:	29400044 	addi	r5,r5,1
  840000:	11bd411e 	bne	r2,r6,83f508 <__alt_mem_epcs_flash_controller_0+0xff836508>
  840004:	29800007 	ldb	r6,0(r5)
  840008:	303ff31e 	bne	r6,zero,83ffd8 <__alt_mem_epcs_flash_controller_0+0xff836fd8>
  84000c:	20800044 	addi	r2,r4,1
  840010:	d8800615 	stw	r2,24(sp)
  840014:	20c00047 	ldb	r3,1(r4)
  840018:	00800a04 	movi	r2,40
  84001c:	18bde326 	beq	r3,r2,83f7ac <__alt_mem_epcs_flash_controller_0+0xff8367ac>
  840020:	05bffe34 	movhi	r22,65528
  840024:	002f883a 	mov	r23,zero
  840028:	003dea06 	br	83f7d4 <__alt_mem_epcs_flash_controller_0+0xff8367d4>
  84002c:	00800044 	movi	r2,1
  840030:	b880ff26 	beq	r23,r2,840430 <_strtod_r+0x105c>
  840034:	014ffc34 	movhi	r5,16368
  840038:	d8000f15 	stw	zero,60(sp)
  84003c:	052ffc34 	movhi	r20,49136
  840040:	d8001015 	stw	zero,64(sp)
  840044:	d9400d15 	stw	r5,52(sp)
  840048:	003f4b06 	br	83fd78 <__alt_mem_epcs_flash_controller_0+0xff836d78>
  84004c:	d9001017 	ldw	r4,64(sp)
  840050:	d9400d17 	ldw	r5,52(sp)
  840054:	0846adc0 	call	846adc <__fixunsdfsi>
  840058:	1000f126 	beq	r2,zero,840420 <_strtod_r+0x104c>
  84005c:	1009883a 	mov	r4,r2
  840060:	08319ec0 	call	8319ec <__floatunsidf>
  840064:	d8801015 	stw	r2,64(sp)
  840068:	d8c00d15 	stw	r3,52(sp)
  84006c:	a800ea1e 	bne	r21,zero,840418 <_strtod_r+0x1044>
  840070:	d8800d17 	ldw	r2,52(sp)
  840074:	1220003c 	xorhi	r8,r2,32768
  840078:	d8c01017 	ldw	r3,64(sp)
  84007c:	4029883a 	mov	r20,r8
  840080:	d8c00f15 	stw	r3,60(sp)
  840084:	003f4a06 	br	83fdb0 <__alt_mem_epcs_flash_controller_0+0xff836db0>
  840088:	d8000c15 	stw	zero,48(sp)
  84008c:	003ea506 	br	83fb24 <__alt_mem_epcs_flash_controller_0+0xff836b24>
  840090:	d8c00817 	ldw	r3,32(sp)
  840094:	00bfffc4 	movi	r2,-1
  840098:	1880441e 	bne	r3,r2,8401ac <_strtod_r+0xdd8>
  84009c:	9011883a 	mov	r8,r18
  8400a0:	d8800517 	ldw	r2,20(sp)
  8400a4:	00c00884 	movi	r3,34
  8400a8:	88c00015 	stw	r3,0(r17)
  8400ac:	d8000815 	stw	zero,32(sp)
  8400b0:	071ffc34 	movhi	fp,32752
  8400b4:	100b883a 	mov	r5,r2
  8400b8:	8809883a 	mov	r4,r17
  8400bc:	da001315 	stw	r8,76(sp)
  8400c0:	083ddd40 	call	83ddd4 <_Bfree>
  8400c4:	980b883a 	mov	r5,r19
  8400c8:	8809883a 	mov	r4,r17
  8400cc:	083ddd40 	call	83ddd4 <_Bfree>
  8400d0:	800b883a 	mov	r5,r16
  8400d4:	8809883a 	mov	r4,r17
  8400d8:	083ddd40 	call	83ddd4 <_Bfree>
  8400dc:	d9400b17 	ldw	r5,44(sp)
  8400e0:	8809883a 	mov	r4,r17
  8400e4:	083ddd40 	call	83ddd4 <_Bfree>
  8400e8:	da001317 	ldw	r8,76(sp)
  8400ec:	8809883a 	mov	r4,r17
  8400f0:	400b883a 	mov	r5,r8
  8400f4:	083ddd40 	call	83ddd4 <_Bfree>
  8400f8:	003d5f06 	br	83f678 <__alt_mem_epcs_flash_controller_0+0xff836678>
  8400fc:	d8c00a17 	ldw	r3,40(sp)
  840100:	d8800504 	addi	r2,sp,20
  840104:	018021b4 	movhi	r6,134
  840108:	31a71a04 	addi	r6,r6,-25496
  84010c:	d8c00115 	stw	r3,4(sp)
  840110:	d8800015 	stw	r2,0(sp)
  840114:	d9c00404 	addi	r7,sp,16
  840118:	d9400604 	addi	r5,sp,24
  84011c:	8809883a 	mov	r4,r17
  840120:	0845ce80 	call	845ce8 <__gethex>
  840124:	148001cc 	andi	r18,r2,7
  840128:	903e2126 	beq	r18,zero,83f9b0 <__alt_mem_epcs_flash_controller_0+0xff8369b0>
  84012c:	00c00184 	movi	r3,6
  840130:	90c0c71e 	bne	r18,r3,840450 <_strtod_r+0x107c>
  840134:	84000044 	addi	r16,r16,1
  840138:	dc000615 	stw	r16,24(sp)
  84013c:	d8000815 	stw	zero,32(sp)
  840140:	0039883a 	mov	fp,zero
  840144:	d8000a15 	stw	zero,40(sp)
  840148:	003d4b06 	br	83f678 <__alt_mem_epcs_flash_controller_0+0xff836678>
  84014c:	00bf2c34 	movhi	r2,64688
  840150:	b0ad883a 	add	r22,r22,r2
  840154:	b809883a 	mov	r4,r23
  840158:	b00b883a 	mov	r5,r22
  84015c:	083e90c0 	call	83e90c <__ulp>
  840160:	d9000f17 	ldw	r4,60(sp)
  840164:	100d883a 	mov	r6,r2
  840168:	180f883a 	mov	r7,r3
  84016c:	a00b883a 	mov	r5,r20
  840170:	08311800 	call	831180 <__muldf3>
  840174:	b80d883a 	mov	r6,r23
  840178:	1009883a 	mov	r4,r2
  84017c:	b00f883a 	mov	r7,r22
  840180:	180b883a 	mov	r5,r3
  840184:	084790c0 	call	84790c <__adddf3>
  840188:	011f2834 	movhi	r4,31904
  84018c:	102f883a 	mov	r23,r2
  840190:	213fffc4 	addi	r4,r4,-1
  840194:	189ffc2c 	andhi	r2,r3,32752
  840198:	20807b2e 	bgeu	r4,r2,840388 <_strtod_r+0xfb4>
  84019c:	d9401217 	ldw	r5,72(sp)
  8401a0:	009ffc34 	movhi	r2,32752
  8401a4:	10bfffc4 	addi	r2,r2,-1
  8401a8:	28bfb926 	beq	r5,r2,840090 <__alt_mem_epcs_flash_controller_0+0xff837090>
  8401ac:	059ffc34 	movhi	r22,32752
  8401b0:	b5bfffc4 	addi	r22,r22,-1
  8401b4:	05ffffc4 	movi	r23,-1
  8401b8:	003f1406 	br	83fe0c <__alt_mem_epcs_flash_controller_0+0xff836e0c>
  8401bc:	00800884 	movi	r2,34
  8401c0:	88800015 	stw	r2,0(r17)
  8401c4:	d8000815 	stw	zero,32(sp)
  8401c8:	071ffc34 	movhi	fp,32752
  8401cc:	003d2a06 	br	83f678 <__alt_mem_epcs_flash_controller_0+0xff836678>
  8401d0:	d9400d17 	ldw	r5,52(sp)
  8401d4:	d9001017 	ldw	r4,64(sp)
  8401d8:	08496dc0 	call	8496dc <__fixdfsi>
  8401dc:	1009883a 	mov	r4,r2
  8401e0:	084975c0 	call	84975c <__floatsidf>
  8401e4:	d9001017 	ldw	r4,64(sp)
  8401e8:	d9400d17 	ldw	r5,52(sp)
  8401ec:	100d883a 	mov	r6,r2
  8401f0:	180f883a 	mov	r7,r3
  8401f4:	0848de00 	call	848de0 <__subdf3>
  8401f8:	1011883a 	mov	r8,r2
  8401fc:	1839883a 	mov	fp,r3
  840200:	a800121e 	bne	r21,zero,84024c <_strtod_r+0xe78>
  840204:	b800111e 	bne	r23,zero,84024c <_strtod_r+0xe78>
  840208:	01400434 	movhi	r5,16
  84020c:	297fffc4 	addi	r5,r5,-1
  840210:	a168703a 	and	r20,r20,r5
  840214:	a0000d1e 	bne	r20,zero,84024c <_strtod_r+0xe78>
  840218:	01a52834 	movhi	r6,38048
  84021c:	01cff434 	movhi	r7,16336
  840220:	318d6544 	addi	r6,r6,13717
  840224:	39ffffc4 	addi	r7,r7,-1
  840228:	1009883a 	mov	r4,r2
  84022c:	180b883a 	mov	r5,r3
  840230:	0848cec0 	call	848cec <__ledf2>
  840234:	103ef50e 	bge	r2,zero,83fe0c <__alt_mem_epcs_flash_controller_0+0xff836e0c>
  840238:	9011883a 	mov	r8,r18
  84023c:	d8800517 	ldw	r2,20(sp)
  840240:	d8000815 	stw	zero,32(sp)
  840244:	b039883a 	mov	fp,r22
  840248:	003f9a06 	br	8400b4 <__alt_mem_epcs_flash_controller_0+0xff8370b4>
  84024c:	01a52834 	movhi	r6,38048
  840250:	01cff834 	movhi	r7,16352
  840254:	4009883a 	mov	r4,r8
  840258:	318d6544 	addi	r6,r6,13717
  84025c:	39ffffc4 	addi	r7,r7,-1
  840260:	e00b883a 	mov	r5,fp
  840264:	da001315 	stw	r8,76(sp)
  840268:	0848cec0 	call	848cec <__ledf2>
  84026c:	da001317 	ldw	r8,76(sp)
  840270:	10000716 	blt	r2,zero,840290 <_strtod_r+0xebc>
  840274:	018d6c34 	movhi	r6,13744
  840278:	31b94d44 	addi	r6,r6,-6859
  84027c:	01cff834 	movhi	r7,16352
  840280:	4009883a 	mov	r4,r8
  840284:	e00b883a 	mov	r5,fp
  840288:	0848c100 	call	848c10 <__gedf2>
  84028c:	00bedf0e 	bge	zero,r2,83fe0c <__alt_mem_epcs_flash_controller_0+0xff836e0c>
  840290:	9011883a 	mov	r8,r18
  840294:	d8800517 	ldw	r2,20(sp)
  840298:	ddc00815 	stw	r23,32(sp)
  84029c:	b039883a 	mov	fp,r22
  8402a0:	003f8406 	br	8400b4 <__alt_mem_epcs_flash_controller_0+0xff8370b4>
  8402a4:	903e1026 	beq	r18,zero,83fae8 <__alt_mem_epcs_flash_controller_0+0xff836ae8>
  8402a8:	04a5c83a 	sub	r18,zero,r18
  8402ac:	908003cc 	andi	r2,r18,15
  8402b0:	10000b26 	beq	r2,zero,8402e0 <_strtod_r+0xf0c>
  8402b4:	100490fa 	slli	r2,r2,3
  8402b8:	00c021b4 	movhi	r3,134
  8402bc:	18e6df04 	addi	r3,r3,-25732
  8402c0:	1885883a 	add	r2,r3,r2
  8402c4:	11800017 	ldw	r6,0(r2)
  8402c8:	11c00117 	ldw	r7,4(r2)
  8402cc:	b809883a 	mov	r4,r23
  8402d0:	b00b883a 	mov	r5,r22
  8402d4:	08481b80 	call	8481b8 <__divdf3>
  8402d8:	102f883a 	mov	r23,r2
  8402dc:	182d883a 	mov	r22,r3
  8402e0:	9025d13a 	srai	r18,r18,4
  8402e4:	903e0026 	beq	r18,zero,83fae8 <__alt_mem_epcs_flash_controller_0+0xff836ae8>
  8402e8:	008007c4 	movi	r2,31
  8402ec:	14801f16 	blt	r2,r18,84036c <_strtod_r+0xf98>
  8402f0:	9080040c 	andi	r2,r18,16
  8402f4:	10018d26 	beq	r2,zero,84092c <_strtod_r+0x1558>
  8402f8:	00c01a84 	movi	r3,106
  8402fc:	d8c00715 	stw	r3,28(sp)
  840300:	04817e0e 	bge	zero,r18,8408fc <_strtod_r+0x1528>
  840304:	050021b4 	movhi	r20,134
  840308:	a5271f04 	addi	r20,r20,-25476
  84030c:	b805883a 	mov	r2,r23
  840310:	b007883a 	mov	r3,r22
  840314:	0009883a 	mov	r4,zero
  840318:	9180004c 	andi	r6,r18,1
  84031c:	30000626 	beq	r6,zero,840338 <_strtod_r+0xf64>
  840320:	a1800017 	ldw	r6,0(r20)
  840324:	a1c00117 	ldw	r7,4(r20)
  840328:	1009883a 	mov	r4,r2
  84032c:	180b883a 	mov	r5,r3
  840330:	08311800 	call	831180 <__muldf3>
  840334:	01000044 	movi	r4,1
  840338:	9025d07a 	srai	r18,r18,1
  84033c:	a5000204 	addi	r20,r20,8
  840340:	903ff51e 	bne	r18,zero,840318 <__alt_mem_epcs_flash_controller_0+0xff837318>
  840344:	21003fcc 	andi	r4,r4,255
  840348:	2001891e 	bne	r4,zero,840970 <_strtod_r+0x159c>
  84034c:	d9000717 	ldw	r4,28(sp)
  840350:	20016a1e 	bne	r4,zero,8408fc <_strtod_r+0x1528>
  840354:	000d883a 	mov	r6,zero
  840358:	000f883a 	mov	r7,zero
  84035c:	b809883a 	mov	r4,r23
  840360:	b00b883a 	mov	r5,r22
  840364:	0848b880 	call	848b88 <__eqdf2>
  840368:	103de01e 	bne	r2,zero,83faec <__alt_mem_epcs_flash_controller_0+0xff836aec>
  84036c:	00800884 	movi	r2,34
  840370:	88800015 	stw	r2,0(r17)
  840374:	d8000815 	stw	zero,32(sp)
  840378:	0039883a 	mov	fp,zero
  84037c:	003cbe06 	br	83f678 <__alt_mem_epcs_flash_controller_0+0xff836678>
  840380:	011387c4 	movi	r4,19999
  840384:	003d5606 	br	83f8e0 <__alt_mem_epcs_flash_controller_0+0xff8368e0>
  840388:	0580d434 	movhi	r22,848
  84038c:	1dad883a 	add	r22,r3,r22
  840390:	b029883a 	mov	r20,r22
  840394:	003e9906 	br	83fdfc <__alt_mem_epcs_flash_controller_0+0xff836dfc>
  840398:	e5c03fcc 	andi	r23,fp,255
  84039c:	bdc0201c 	xori	r23,r23,128
  8403a0:	bdffe004 	addi	r23,r23,-128
  8403a4:	dc800817 	ldw	r18,32(sp)
  8403a8:	0029883a 	mov	r20,zero
  8403ac:	0027883a 	mov	r19,zero
  8403b0:	0021883a 	mov	r16,zero
  8403b4:	003c9806 	br	83f618 <__alt_mem_epcs_flash_controller_0+0xff836618>
  8403b8:	00c00944 	movi	r3,37
  8403bc:	1f07c83a 	sub	r3,r3,fp
  8403c0:	1d7d7e16 	blt	r3,r21,83f9bc <__alt_mem_epcs_flash_controller_0+0xff8369bc>
  8403c4:	1721c83a 	sub	r16,r2,fp
  8403c8:	800490fa 	slli	r2,r16,3
  8403cc:	044021b4 	movhi	r17,134
  8403d0:	8c66df04 	addi	r17,r17,-25732
  8403d4:	8885883a 	add	r2,r17,r2
  8403d8:	11000017 	ldw	r4,0(r2)
  8403dc:	11400117 	ldw	r5,4(r2)
  8403e0:	b80d883a 	mov	r6,r23
  8403e4:	b00f883a 	mov	r7,r22
  8403e8:	08311800 	call	831180 <__muldf3>
  8403ec:	ac2bc83a 	sub	r21,r21,r16
  8403f0:	a80c90fa 	slli	r6,r21,3
  8403f4:	1009883a 	mov	r4,r2
  8403f8:	180b883a 	mov	r5,r3
  8403fc:	8985883a 	add	r2,r17,r6
  840400:	11800017 	ldw	r6,0(r2)
  840404:	11c00117 	ldw	r7,4(r2)
  840408:	08311800 	call	831180 <__muldf3>
  84040c:	d8800815 	stw	r2,32(sp)
  840410:	1839883a 	mov	fp,r3
  840414:	003c9806 	br	83f678 <__alt_mem_epcs_flash_controller_0+0xff836678>
  840418:	da000d17 	ldw	r8,52(sp)
  84041c:	003f1606 	br	840078 <__alt_mem_epcs_flash_controller_0+0xff837078>
  840420:	014ffc34 	movhi	r5,16368
  840424:	d8001015 	stw	zero,64(sp)
  840428:	d9400d15 	stw	r5,52(sp)
  84042c:	003f0f06 	br	84006c <__alt_mem_epcs_flash_controller_0+0xff83706c>
  840430:	b03f001e 	bne	r22,zero,840034 <__alt_mem_epcs_flash_controller_0+0xff837034>
  840434:	9011883a 	mov	r8,r18
  840438:	00800884 	movi	r2,34
  84043c:	88800015 	stw	r2,0(r17)
  840440:	d8000815 	stw	zero,32(sp)
  840444:	d8800517 	ldw	r2,20(sp)
  840448:	0039883a 	mov	fp,zero
  84044c:	003f1906 	br	8400b4 <__alt_mem_epcs_flash_controller_0+0xff8370b4>
  840450:	d9800517 	ldw	r6,20(sp)
  840454:	30000826 	beq	r6,zero,840478 <_strtod_r+0x10a4>
  840458:	01400d44 	movi	r5,53
  84045c:	d9000204 	addi	r4,sp,8
  840460:	d8801315 	stw	r2,76(sp)
  840464:	083ece00 	call	83ece0 <__copybits>
  840468:	d9400517 	ldw	r5,20(sp)
  84046c:	8809883a 	mov	r4,r17
  840470:	083ddd40 	call	83ddd4 <_Bfree>
  840474:	d8801317 	ldw	r2,76(sp)
  840478:	00c00184 	movi	r3,6
  84047c:	1c800f36 	bltu	r3,r18,8404bc <_strtod_r+0x10e8>
  840480:	902490ba 	slli	r18,r18,2
  840484:	00c02134 	movhi	r3,132
  840488:	18c12604 	addi	r3,r3,1176
  84048c:	90e5883a 	add	r18,r18,r3
  840490:	90c00017 	ldw	r3,0(r18)
  840494:	1800683a 	jmp	r3
  840498:	00840514 	movui	r2,4116
  84049c:	008404ec 	andhi	r2,zero,4115
  8404a0:	008404d0 	cmplti	r2,zero,4115
  8404a4:	008404b4 	movhi	r2,4114
  8404a8:	008404dc 	xori	r2,zero,4115
  8404ac:	008404ec 	andhi	r2,zero,4115
  8404b0:	00840514 	movui	r2,4116
  8404b4:	059ffc34 	movhi	r22,32752
  8404b8:	002f883a 	mov	r23,zero
  8404bc:	1080020c 	andi	r2,r2,8
  8404c0:	ddc00815 	stw	r23,32(sp)
  8404c4:	103cc426 	beq	r2,zero,83f7d8 <__alt_mem_epcs_flash_controller_0+0xff8367d8>
  8404c8:	b7200034 	orhi	fp,r22,32768
  8404cc:	003c6a06 	br	83f678 <__alt_mem_epcs_flash_controller_0+0xff836678>
  8404d0:	ddc00217 	ldw	r23,8(sp)
  8404d4:	dd800317 	ldw	r22,12(sp)
  8404d8:	003ff806 	br	8404bc <__alt_mem_epcs_flash_controller_0+0xff8374bc>
  8404dc:	05a00034 	movhi	r22,32768
  8404e0:	b5bfffc4 	addi	r22,r22,-1
  8404e4:	05ffffc4 	movi	r23,-1
  8404e8:	003ff406 	br	8404bc <__alt_mem_epcs_flash_controller_0+0xff8374bc>
  8404ec:	d8c00417 	ldw	r3,16(sp)
  8404f0:	dd800317 	ldw	r22,12(sp)
  8404f4:	013ffc34 	movhi	r4,65520
  8404f8:	18c10cc4 	addi	r3,r3,1075
  8404fc:	1806953a 	slli	r3,r3,20
  840500:	213fffc4 	addi	r4,r4,-1
  840504:	b12c703a 	and	r22,r22,r4
  840508:	ddc00217 	ldw	r23,8(sp)
  84050c:	b0ecb03a 	or	r22,r22,r3
  840510:	003fea06 	br	8404bc <__alt_mem_epcs_flash_controller_0+0xff8374bc>
  840514:	002d883a 	mov	r22,zero
  840518:	002f883a 	mov	r23,zero
  84051c:	003fe706 	br	8404bc <__alt_mem_epcs_flash_controller_0+0xff8374bc>
  840520:	d8c00b17 	ldw	r3,44(sp)
  840524:	b72d883a 	add	r22,r22,fp
  840528:	1887883a 	add	r3,r3,r2
  84052c:	d8c00b15 	stw	r3,44(sp)
  840530:	00c00044 	movi	r3,1
  840534:	10c11126 	beq	r2,r3,84097c <_strtod_r+0x15a8>
  840538:	05c00204 	movi	r23,8
  84053c:	04800404 	movi	r18,16
  840540:	e7000044 	addi	fp,fp,1
  840544:	e0bfffc4 	addi	r2,fp,-1
  840548:	b8802016 	blt	r23,r2,8405cc <_strtod_r+0x11f8>
  84054c:	9809883a 	mov	r4,r19
  840550:	01400284 	movi	r5,10
  840554:	08301e80 	call	8301e8 <__mulsi3>
  840558:	1027883a 	mov	r19,r2
  84055c:	e5bff81e 	bne	fp,r22,840540 <__alt_mem_epcs_flash_controller_0+0xff837540>
  840560:	ddc00617 	ldw	r23,24(sp)
  840564:	e7000044 	addi	fp,fp,1
  840568:	00800204 	movi	r2,8
  84056c:	1580100e 	bge	r2,r22,8405b0 <_strtod_r+0x11dc>
  840570:	00800404 	movi	r2,16
  840574:	002d883a 	mov	r22,zero
  840578:	173e7b16 	blt	r2,fp,83ff68 <__alt_mem_epcs_flash_controller_0+0xff836f68>
  84057c:	a009883a 	mov	r4,r20
  840580:	01400284 	movi	r5,10
  840584:	08301e80 	call	8301e8 <__mulsi3>
  840588:	a8a9883a 	add	r20,r21,r2
  84058c:	003e7606 	br	83ff68 <__alt_mem_epcs_flash_controller_0+0xff836f68>
  840590:	d9000617 	ldw	r4,24(sp)
  840594:	bdfff404 	addi	r23,r23,-48
  840598:	b5800044 	addi	r22,r22,1
  84059c:	ddc00e15 	stw	r23,56(sp)
  8405a0:	d9000815 	stw	r4,32(sp)
  8405a4:	dd800b15 	stw	r22,44(sp)
  8405a8:	202f883a 	mov	r23,r4
  8405ac:	07000044 	movi	fp,1
  8405b0:	9809883a 	mov	r4,r19
  8405b4:	01400284 	movi	r5,10
  8405b8:	08301e80 	call	8301e8 <__mulsi3>
  8405bc:	d8c00e17 	ldw	r3,56(sp)
  8405c0:	002d883a 	mov	r22,zero
  8405c4:	18a7883a 	add	r19,r3,r2
  8405c8:	003e6706 	br	83ff68 <__alt_mem_epcs_flash_controller_0+0xff836f68>
  8405cc:	973fe316 	blt	r18,fp,84055c <__alt_mem_epcs_flash_controller_0+0xff83755c>
  8405d0:	a009883a 	mov	r4,r20
  8405d4:	01400284 	movi	r5,10
  8405d8:	08301e80 	call	8301e8 <__mulsi3>
  8405dc:	1029883a 	mov	r20,r2
  8405e0:	003fde06 	br	84055c <__alt_mem_epcs_flash_controller_0+0xff83755c>
  8405e4:	00bffa84 	movi	r2,-22
  8405e8:	a8bcf416 	blt	r21,r2,83f9bc <__alt_mem_epcs_flash_controller_0+0xff8369bc>
  8405ec:	a82a90fa 	slli	r21,r21,3
  8405f0:	008021b4 	movhi	r2,134
  8405f4:	10a6df04 	addi	r2,r2,-25732
  8405f8:	1545c83a 	sub	r2,r2,r21
  8405fc:	11800017 	ldw	r6,0(r2)
  840600:	11c00117 	ldw	r7,4(r2)
  840604:	b809883a 	mov	r4,r23
  840608:	b00b883a 	mov	r5,r22
  84060c:	08481b80 	call	8481b8 <__divdf3>
  840610:	d8800815 	stw	r2,32(sp)
  840614:	1839883a 	mov	fp,r3
  840618:	003c1706 	br	83f678 <__alt_mem_epcs_flash_controller_0+0xff836678>
  84061c:	9011883a 	mov	r8,r18
  840620:	003ea006 	br	8400a4 <__alt_mem_epcs_flash_controller_0+0xff8370a4>
  840624:	014021b4 	movhi	r5,134
  840628:	d9000617 	ldw	r4,24(sp)
  84062c:	29671104 	addi	r5,r5,-25532
  840630:	01c00644 	movi	r7,25
  840634:	00000b06 	br	840664 <_strtod_r+0x1290>
  840638:	21000044 	addi	r4,r4,1
  84063c:	20800003 	ldbu	r2,0(r4)
  840640:	10ffefc4 	addi	r3,r2,-65
  840644:	10803fcc 	andi	r2,r2,255
  840648:	1080201c 	xori	r2,r2,128
  84064c:	18c03fcc 	andi	r3,r3,255
  840650:	10bfe004 	addi	r2,r2,-128
  840654:	38c00136 	bltu	r7,r3,84065c <_strtod_r+0x1288>
  840658:	10800804 	addi	r2,r2,32
  84065c:	29400044 	addi	r5,r5,1
  840660:	11bba91e 	bne	r2,r6,83f508 <__alt_mem_epcs_flash_controller_0+0xff836508>
  840664:	29800007 	ldb	r6,0(r5)
  840668:	303ff31e 	bne	r6,zero,840638 <__alt_mem_epcs_flash_controller_0+0xff837638>
  84066c:	018021b4 	movhi	r6,134
  840670:	d9000615 	stw	r4,24(sp)
  840674:	31a71204 	addi	r6,r6,-25528
  840678:	200b883a 	mov	r5,r4
  84067c:	02000644 	movi	r8,25
  840680:	00000a06 	br	8406ac <_strtod_r+0x12d8>
  840684:	28800003 	ldbu	r2,0(r5)
  840688:	10ffefc4 	addi	r3,r2,-65
  84068c:	10803fcc 	andi	r2,r2,255
  840690:	1080201c 	xori	r2,r2,128
  840694:	18c03fcc 	andi	r3,r3,255
  840698:	10bfe004 	addi	r2,r2,-128
  84069c:	40c00136 	bltu	r8,r3,8406a4 <_strtod_r+0x12d0>
  8406a0:	10800804 	addi	r2,r2,32
  8406a4:	31800044 	addi	r6,r6,1
  8406a8:	11c0691e 	bne	r2,r7,840850 <_strtod_r+0x147c>
  8406ac:	31c00007 	ldb	r7,0(r6)
  8406b0:	29400044 	addi	r5,r5,1
  8406b4:	383ff31e 	bne	r7,zero,840684 <__alt_mem_epcs_flash_controller_0+0xff837684>
  8406b8:	d9400615 	stw	r5,24(sp)
  8406bc:	059ffc34 	movhi	r22,32752
  8406c0:	002f883a 	mov	r23,zero
  8406c4:	003c4306 	br	83f7d4 <__alt_mem_epcs_flash_controller_0+0xff8367d4>
  8406c8:	002d883a 	mov	r22,zero
  8406cc:	003cad06 	br	83f984 <__alt_mem_epcs_flash_controller_0+0xff836984>
  8406d0:	9011883a 	mov	r8,r18
  8406d4:	df001217 	ldw	fp,72(sp)
  8406d8:	a800461e 	bne	r21,zero,8407f4 <_strtod_r+0x1420>
  8406dc:	b800451e 	bne	r23,zero,8407f4 <_strtod_r+0x1420>
  8406e0:	00800434 	movhi	r2,16
  8406e4:	10bfffc4 	addi	r2,r2,-1
  8406e8:	b084703a 	and	r2,r22,r2
  8406ec:	1000411e 	bne	r2,zero,8407f4 <_strtod_r+0x1420>
  8406f0:	b49ffc2c 	andhi	r18,r22,32752
  8406f4:	0081ac34 	movhi	r2,1712
  8406f8:	14803e2e 	bgeu	r2,r18,8407f4 <_strtod_r+0x1420>
  8406fc:	40800517 	ldw	r2,20(r8)
  840700:	1000031e 	bne	r2,zero,840710 <_strtod_r+0x133c>
  840704:	40800417 	ldw	r2,16(r8)
  840708:	00c00044 	movi	r3,1
  84070c:	1880390e 	bge	r3,r2,8407f4 <_strtod_r+0x1420>
  840710:	400b883a 	mov	r5,r8
  840714:	01800044 	movi	r6,1
  840718:	8809883a 	mov	r4,r17
  84071c:	083e5680 	call	83e568 <__lshift>
  840720:	800b883a 	mov	r5,r16
  840724:	1009883a 	mov	r4,r2
  840728:	d8801315 	stw	r2,76(sp)
  84072c:	083e6b00 	call	83e6b0 <__mcmp>
  840730:	da001317 	ldw	r8,76(sp)
  840734:	00802f0e 	bge	zero,r2,8407f4 <_strtod_r+0x1420>
  840738:	d9000717 	ldw	r4,28(sp)
  84073c:	20008026 	beq	r4,zero,840940 <_strtod_r+0x156c>
  840740:	0081ac34 	movhi	r2,1712
  840744:	14807e16 	blt	r2,r18,840940 <_strtod_r+0x156c>
  840748:	0080dc34 	movhi	r2,880
  84074c:	14bf3a0e 	bge	r2,r18,840438 <__alt_mem_epcs_flash_controller_0+0xff837438>
  840750:	d9000817 	ldw	r4,32(sp)
  840754:	e00b883a 	mov	r5,fp
  840758:	000d883a 	mov	r6,zero
  84075c:	01ce5434 	movhi	r7,14672
  840760:	da001315 	stw	r8,76(sp)
  840764:	08311800 	call	831180 <__muldf3>
  840768:	d8800815 	stw	r2,32(sp)
  84076c:	1839883a 	mov	fp,r3
  840770:	da001317 	ldw	r8,76(sp)
  840774:	1800211e 	bne	r3,zero,8407fc <_strtod_r+0x1428>
  840778:	d8c00817 	ldw	r3,32(sp)
  84077c:	d8800517 	ldw	r2,20(sp)
  840780:	183e4c1e 	bne	r3,zero,8400b4 <__alt_mem_epcs_flash_controller_0+0xff8370b4>
  840784:	00c00884 	movi	r3,34
  840788:	88c00015 	stw	r3,0(r17)
  84078c:	003e4906 	br	8400b4 <__alt_mem_epcs_flash_controller_0+0xff8370b4>
  840790:	00800434 	movhi	r2,16
  840794:	9011883a 	mov	r8,r18
  840798:	df001217 	ldw	fp,72(sp)
  84079c:	10bfffc4 	addi	r2,r2,-1
  8407a0:	a8002226 	beq	r21,zero,84082c <_strtod_r+0x1458>
  8407a4:	b086703a 	and	r3,r22,r2
  8407a8:	18804126 	beq	r3,r2,8408b0 <_strtod_r+0x14dc>
  8407ac:	d8c00d17 	ldw	r3,52(sp)
  8407b0:	18002326 	beq	r3,zero,840840 <_strtod_r+0x146c>
  8407b4:	1da4703a 	and	r18,r3,r22
  8407b8:	90000e26 	beq	r18,zero,8407f4 <_strtod_r+0x1420>
  8407bc:	da001315 	stw	r8,76(sp)
  8407c0:	d9800717 	ldw	r6,28(sp)
  8407c4:	b809883a 	mov	r4,r23
  8407c8:	b00b883a 	mov	r5,r22
  8407cc:	a8002826 	beq	r21,zero,840870 <_strtod_r+0x149c>
  8407d0:	083f3700 	call	83f370 <sulp>
  8407d4:	100d883a 	mov	r6,r2
  8407d8:	180f883a 	mov	r7,r3
  8407dc:	b809883a 	mov	r4,r23
  8407e0:	b00b883a 	mov	r5,r22
  8407e4:	084790c0 	call	84790c <__adddf3>
  8407e8:	da001317 	ldw	r8,76(sp)
  8407ec:	d8800815 	stw	r2,32(sp)
  8407f0:	1839883a 	mov	fp,r3
  8407f4:	d8800717 	ldw	r2,28(sp)
  8407f8:	103fd51e 	bne	r2,zero,840750 <__alt_mem_epcs_flash_controller_0+0xff837750>
  8407fc:	d8800517 	ldw	r2,20(sp)
  840800:	003e2c06 	br	8400b4 <__alt_mem_epcs_flash_controller_0+0xff8370b4>
  840804:	0580d434 	movhi	r22,848
  840808:	1dad883a 	add	r22,r3,r22
  84080c:	d8000715 	stw	zero,28(sp)
  840810:	003cb606 	br	83faec <__alt_mem_epcs_flash_controller_0+0xff836aec>
  840814:	008ff834 	movhi	r2,16352
  840818:	0029883a 	mov	r20,zero
  84081c:	022ff834 	movhi	r8,49120
  840820:	d8001015 	stw	zero,64(sp)
  840824:	d8800d15 	stw	r2,52(sp)
  840828:	003dc106 	br	83ff30 <__alt_mem_epcs_flash_controller_0+0xff836f30>
  84082c:	b084703a 	and	r2,r22,r2
  840830:	103fde1e 	bne	r2,zero,8407ac <__alt_mem_epcs_flash_controller_0+0xff8377ac>
  840834:	b83fdd1e 	bne	r23,zero,8407ac <__alt_mem_epcs_flash_controller_0+0xff8377ac>
  840838:	b49ffc2c 	andhi	r18,r22,32752
  84083c:	003fbe06 	br	840738 <__alt_mem_epcs_flash_controller_0+0xff837738>
  840840:	d8c00f17 	ldw	r3,60(sp)
  840844:	1de8703a 	and	r20,r3,r23
  840848:	a03fea26 	beq	r20,zero,8407f4 <__alt_mem_epcs_flash_controller_0+0xff8377f4>
  84084c:	003fdb06 	br	8407bc <__alt_mem_epcs_flash_controller_0+0xff8377bc>
  840850:	21000044 	addi	r4,r4,1
  840854:	d9000615 	stw	r4,24(sp)
  840858:	003f9806 	br	8406bc <__alt_mem_epcs_flash_controller_0+0xff8376bc>
  84085c:	014021b4 	movhi	r5,134
  840860:	2966d504 	addi	r5,r5,-25772
  840864:	d9400715 	stw	r5,28(sp)
  840868:	0025883a 	mov	r18,zero
  84086c:	003c8c06 	br	83faa0 <__alt_mem_epcs_flash_controller_0+0xff836aa0>
  840870:	083f3700 	call	83f370 <sulp>
  840874:	100d883a 	mov	r6,r2
  840878:	180f883a 	mov	r7,r3
  84087c:	b809883a 	mov	r4,r23
  840880:	b00b883a 	mov	r5,r22
  840884:	0848de00 	call	848de0 <__subdf3>
  840888:	000d883a 	mov	r6,zero
  84088c:	000f883a 	mov	r7,zero
  840890:	1009883a 	mov	r4,r2
  840894:	180b883a 	mov	r5,r3
  840898:	d8800815 	stw	r2,32(sp)
  84089c:	1839883a 	mov	fp,r3
  8408a0:	0848b880 	call	848b88 <__eqdf2>
  8408a4:	da001317 	ldw	r8,76(sp)
  8408a8:	103ee326 	beq	r2,zero,840438 <__alt_mem_epcs_flash_controller_0+0xff837438>
  8408ac:	003fd106 	br	8407f4 <__alt_mem_epcs_flash_controller_0+0xff8377f4>
  8408b0:	d8c00717 	ldw	r3,28(sp)
  8408b4:	18002026 	beq	r3,zero,840938 <_strtod_r+0x1564>
  8408b8:	b09ffc2c 	andhi	r2,r22,32752
  8408bc:	00c1a834 	movhi	r3,1696
  8408c0:	18801d36 	bltu	r3,r2,840938 <_strtod_r+0x1564>
  8408c4:	1004d53a 	srli	r2,r2,20
  8408c8:	00c01ac4 	movi	r3,107
  8408cc:	1887c83a 	sub	r3,r3,r2
  8408d0:	00bfffc4 	movi	r2,-1
  8408d4:	10c4983a 	sll	r2,r2,r3
  8408d8:	15ffb41e 	bne	r2,r23,8407ac <__alt_mem_epcs_flash_controller_0+0xff8377ac>
  8408dc:	00dffc34 	movhi	r3,32752
  8408e0:	18ffffc4 	addi	r3,r3,-1
  8408e4:	b0c03126 	beq	r22,r3,8409ac <_strtod_r+0x15d8>
  8408e8:	b59ffc2c 	andhi	r22,r22,32752
  8408ec:	00800434 	movhi	r2,16
  8408f0:	d8000815 	stw	zero,32(sp)
  8408f4:	b0b9883a 	add	fp,r22,r2
  8408f8:	003fbe06 	br	8407f4 <__alt_mem_epcs_flash_controller_0+0xff8377f4>
  8408fc:	b49ffc2c 	andhi	r18,r22,32752
  840900:	9024d53a 	srli	r18,r18,20
  840904:	00801ac4 	movi	r2,107
  840908:	14a5c83a 	sub	r18,r2,r18
  84090c:	04be910e 	bge	zero,r18,840354 <__alt_mem_epcs_flash_controller_0+0xff837354>
  840910:	008007c4 	movi	r2,31
  840914:	1480120e 	bge	r2,r18,840960 <_strtod_r+0x158c>
  840918:	00800d04 	movi	r2,52
  84091c:	002f883a 	mov	r23,zero
  840920:	14801a0e 	bge	r2,r18,84098c <_strtod_r+0x15b8>
  840924:	0580dc34 	movhi	r22,880
  840928:	003e8a06 	br	840354 <__alt_mem_epcs_flash_controller_0+0xff837354>
  84092c:	d8000715 	stw	zero,28(sp)
  840930:	04be7416 	blt	zero,r18,840304 <__alt_mem_epcs_flash_controller_0+0xff837304>
  840934:	003e8706 	br	840354 <__alt_mem_epcs_flash_controller_0+0xff837354>
  840938:	00bfffc4 	movi	r2,-1
  84093c:	003fe606 	br	8408d8 <__alt_mem_epcs_flash_controller_0+0xff8378d8>
  840940:	073ffc34 	movhi	fp,65520
  840944:	9725883a 	add	r18,r18,fp
  840948:	017fffc4 	movi	r5,-1
  84094c:	07000434 	movhi	fp,16
  840950:	e179883a 	add	fp,fp,r5
  840954:	d9400815 	stw	r5,32(sp)
  840958:	9738b03a 	or	fp,r18,fp
  84095c:	003fa506 	br	8407f4 <__alt_mem_epcs_flash_controller_0+0xff8377f4>
  840960:	00bfffc4 	movi	r2,-1
  840964:	14a4983a 	sll	r18,r2,r18
  840968:	95ee703a 	and	r23,r18,r23
  84096c:	003e7906 	br	840354 <__alt_mem_epcs_flash_controller_0+0xff837354>
  840970:	102f883a 	mov	r23,r2
  840974:	182d883a 	mov	r22,r3
  840978:	003e7406 	br	84034c <__alt_mem_epcs_flash_controller_0+0xff83734c>
  84097c:	e02d883a 	mov	r22,fp
  840980:	ddc00617 	ldw	r23,24(sp)
  840984:	e0f9883a 	add	fp,fp,r3
  840988:	003ef706 	br	840568 <__alt_mem_epcs_flash_controller_0+0xff837568>
  84098c:	94bff804 	addi	r18,r18,-32
  840990:	00bfffc4 	movi	r2,-1
  840994:	14a4983a 	sll	r18,r2,r18
  840998:	95ac703a 	and	r22,r18,r22
  84099c:	003e6d06 	br	840354 <__alt_mem_epcs_flash_controller_0+0xff837354>
  8409a0:	102f883a 	mov	r23,r2
  8409a4:	182d883a 	mov	r22,r3
  8409a8:	003c3d06 	br	83faa0 <__alt_mem_epcs_flash_controller_0+0xff836aa0>
  8409ac:	00ffffc4 	movi	r3,-1
  8409b0:	10ffcd1e 	bne	r2,r3,8408e8 <__alt_mem_epcs_flash_controller_0+0xff8378e8>
  8409b4:	003dba06 	br	8400a0 <__alt_mem_epcs_flash_controller_0+0xff8370a0>

008409b8 <strtod>:
  8409b8:	008021b4 	movhi	r2,134
  8409bc:	10af7404 	addi	r2,r2,-16944
  8409c0:	280d883a 	mov	r6,r5
  8409c4:	200b883a 	mov	r5,r4
  8409c8:	11000017 	ldw	r4,0(r2)
  8409cc:	083f3d41 	jmpi	83f3d4 <_strtod_r>

008409d0 <strtof>:
  8409d0:	defffb04 	addi	sp,sp,-20
  8409d4:	dcc00315 	stw	r19,12(sp)
  8409d8:	04c021b4 	movhi	r19,134
  8409dc:	9cef7404 	addi	r19,r19,-16944
  8409e0:	280d883a 	mov	r6,r5
  8409e4:	200b883a 	mov	r5,r4
  8409e8:	99000017 	ldw	r4,0(r19)
  8409ec:	dfc00415 	stw	ra,16(sp)
  8409f0:	dc800215 	stw	r18,8(sp)
  8409f4:	dc400115 	stw	r17,4(sp)
  8409f8:	dc000015 	stw	r16,0(sp)
  8409fc:	083f3d40 	call	83f3d4 <_strtod_r>
  840a00:	1009883a 	mov	r4,r2
  840a04:	180b883a 	mov	r5,r3
  840a08:	1025883a 	mov	r18,r2
  840a0c:	1823883a 	mov	r17,r3
  840a10:	0831a940 	call	831a94 <__truncdfsf2>
  840a14:	000b883a 	mov	r5,zero
  840a18:	1009883a 	mov	r4,r2
  840a1c:	1021883a 	mov	r16,r2
  840a20:	08477100 	call	847710 <__eqsf2>
  840a24:	1000111e 	bne	r2,zero,840a6c <strtof+0x9c>
  840a28:	000d883a 	mov	r6,zero
  840a2c:	000f883a 	mov	r7,zero
  840a30:	9009883a 	mov	r4,r18
  840a34:	880b883a 	mov	r5,r17
  840a38:	0848b880 	call	848b88 <__eqdf2>
  840a3c:	10000b26 	beq	r2,zero,840a6c <strtof+0x9c>
  840a40:	98800017 	ldw	r2,0(r19)
  840a44:	00c00884 	movi	r3,34
  840a48:	10c00015 	stw	r3,0(r2)
  840a4c:	8005883a 	mov	r2,r16
  840a50:	dfc00417 	ldw	ra,16(sp)
  840a54:	dcc00317 	ldw	r19,12(sp)
  840a58:	dc800217 	ldw	r18,8(sp)
  840a5c:	dc400117 	ldw	r17,4(sp)
  840a60:	dc000017 	ldw	r16,0(sp)
  840a64:	dec00504 	addi	sp,sp,20
  840a68:	f800283a 	ret
  840a6c:	015fe034 	movhi	r5,32640
  840a70:	297fffc4 	addi	r5,r5,-1
  840a74:	8009883a 	mov	r4,r16
  840a78:	08477880 	call	847788 <__gesf2>
  840a7c:	0080070e 	bge	zero,r2,840a9c <strtof+0xcc>
  840a80:	01dffc34 	movhi	r7,32752
  840a84:	39ffffc4 	addi	r7,r7,-1
  840a88:	01bfffc4 	movi	r6,-1
  840a8c:	9009883a 	mov	r4,r18
  840a90:	880b883a 	mov	r5,r17
  840a94:	0848c100 	call	848c10 <__gedf2>
  840a98:	00bfe90e 	bge	zero,r2,840a40 <__alt_mem_epcs_flash_controller_0+0xff837a40>
  840a9c:	017fe034 	movhi	r5,65408
  840aa0:	297fffc4 	addi	r5,r5,-1
  840aa4:	8009883a 	mov	r4,r16
  840aa8:	08478440 	call	847844 <__lesf2>
  840aac:	103fe70e 	bge	r2,zero,840a4c <__alt_mem_epcs_flash_controller_0+0xff837a4c>
  840ab0:	01fffc34 	movhi	r7,65520
  840ab4:	39ffffc4 	addi	r7,r7,-1
  840ab8:	01bfffc4 	movi	r6,-1
  840abc:	9009883a 	mov	r4,r18
  840ac0:	880b883a 	mov	r5,r17
  840ac4:	0848cec0 	call	848cec <__ledf2>
  840ac8:	103fdd0e 	bge	r2,zero,840a40 <__alt_mem_epcs_flash_controller_0+0xff837a40>
  840acc:	003fdf06 	br	840a4c <__alt_mem_epcs_flash_controller_0+0xff837a4c>

00840ad0 <_strtol_r>:
  840ad0:	008021b4 	movhi	r2,134
  840ad4:	defff204 	addi	sp,sp,-56
  840ad8:	10af7704 	addi	r2,r2,-16932
  840adc:	dd800a15 	stw	r22,40(sp)
  840ae0:	15800017 	ldw	r22,0(r2)
  840ae4:	df000c15 	stw	fp,48(sp)
  840ae8:	d9000315 	stw	r4,12(sp)
  840aec:	dfc00d15 	stw	ra,52(sp)
  840af0:	ddc00b15 	stw	r23,44(sp)
  840af4:	dd400915 	stw	r21,36(sp)
  840af8:	dd000815 	stw	r20,32(sp)
  840afc:	dcc00715 	stw	r19,28(sp)
  840b00:	dc800615 	stw	r18,24(sp)
  840b04:	dc400515 	stw	r17,20(sp)
  840b08:	dc000415 	stw	r16,16(sp)
  840b0c:	d9400215 	stw	r5,8(sp)
  840b10:	d9800015 	stw	r6,0(sp)
  840b14:	3839883a 	mov	fp,r7
  840b18:	2809883a 	mov	r4,r5
  840b1c:	24000003 	ldbu	r16,0(r4)
  840b20:	24400044 	addi	r17,r4,1
  840b24:	2007883a 	mov	r3,r4
  840b28:	b405883a 	add	r2,r22,r16
  840b2c:	10800043 	ldbu	r2,1(r2)
  840b30:	8809883a 	mov	r4,r17
  840b34:	1080020c 	andi	r2,r2,8
  840b38:	103ff81e 	bne	r2,zero,840b1c <__alt_mem_epcs_flash_controller_0+0xff837b1c>
  840b3c:	00800b44 	movi	r2,45
  840b40:	80805526 	beq	r16,r2,840c98 <_strtol_r+0x1c8>
  840b44:	00800ac4 	movi	r2,43
  840b48:	80806026 	beq	r16,r2,840ccc <_strtol_r+0x1fc>
  840b4c:	0029883a 	mov	r20,zero
  840b50:	e0004726 	beq	fp,zero,840c70 <_strtol_r+0x1a0>
  840b54:	00800404 	movi	r2,16
  840b58:	e0806626 	beq	fp,r2,840cf4 <_strtol_r+0x224>
  840b5c:	e027883a 	mov	r19,fp
  840b60:	00a00034 	movhi	r2,32768
  840b64:	a025003a 	cmpeq	r18,r20,zero
  840b68:	14a5c83a 	sub	r18,r2,r18
  840b6c:	9009883a 	mov	r4,r18
  840b70:	980b883a 	mov	r5,r19
  840b74:	08301900 	call	830190 <__umodsi3>
  840b78:	9009883a 	mov	r4,r18
  840b7c:	980b883a 	mov	r5,r19
  840b80:	d8800115 	stw	r2,4(sp)
  840b84:	083012c0 	call	83012c <__udivsi3>
  840b88:	b407883a 	add	r3,r22,r16
  840b8c:	18c00043 	ldbu	r3,1(r3)
  840b90:	102b883a 	mov	r21,r2
  840b94:	0009883a 	mov	r4,zero
  840b98:	1940010c 	andi	r5,r3,4
  840b9c:	0005883a 	mov	r2,zero
  840ba0:	04800044 	movi	r18,1
  840ba4:	05ffffc4 	movi	r23,-1
  840ba8:	28000f26 	beq	r5,zero,840be8 <_strtol_r+0x118>
  840bac:	843ff404 	addi	r16,r16,-48
  840bb0:	8700130e 	bge	r16,fp,840c00 <_strtol_r+0x130>
  840bb4:	15c00626 	beq	r2,r23,840bd0 <_strtol_r+0x100>
  840bb8:	a9002936 	bltu	r21,r4,840c60 <_strtol_r+0x190>
  840bbc:	25402626 	beq	r4,r21,840c58 <_strtol_r+0x188>
  840bc0:	980b883a 	mov	r5,r19
  840bc4:	08301e80 	call	8301e8 <__mulsi3>
  840bc8:	8089883a 	add	r4,r16,r2
  840bcc:	00800044 	movi	r2,1
  840bd0:	8c000003 	ldbu	r16,0(r17)
  840bd4:	8c400044 	addi	r17,r17,1
  840bd8:	b407883a 	add	r3,r22,r16
  840bdc:	18c00043 	ldbu	r3,1(r3)
  840be0:	1940010c 	andi	r5,r3,4
  840be4:	283ff11e 	bne	r5,zero,840bac <__alt_mem_epcs_flash_controller_0+0xff837bac>
  840be8:	18c000cc 	andi	r3,r3,3
  840bec:	18000426 	beq	r3,zero,840c00 <_strtol_r+0x130>
  840bf0:	1c801d26 	beq	r3,r18,840c68 <_strtol_r+0x198>
  840bf4:	00c015c4 	movi	r3,87
  840bf8:	80e1c83a 	sub	r16,r16,r3
  840bfc:	873fed16 	blt	r16,fp,840bb4 <__alt_mem_epcs_flash_controller_0+0xff837bb4>
  840c00:	00ffffc4 	movi	r3,-1
  840c04:	10c02826 	beq	r2,r3,840ca8 <_strtol_r+0x1d8>
  840c08:	a0001e1e 	bne	r20,zero,840c84 <_strtol_r+0x1b4>
  840c0c:	d8c00017 	ldw	r3,0(sp)
  840c10:	18004326 	beq	r3,zero,840d20 <_strtol_r+0x250>
  840c14:	10001d1e 	bne	r2,zero,840c8c <_strtol_r+0x1bc>
  840c18:	dd800217 	ldw	r22,8(sp)
  840c1c:	2005883a 	mov	r2,r4
  840c20:	d8c00017 	ldw	r3,0(sp)
  840c24:	1d800015 	stw	r22,0(r3)
  840c28:	dfc00d17 	ldw	ra,52(sp)
  840c2c:	df000c17 	ldw	fp,48(sp)
  840c30:	ddc00b17 	ldw	r23,44(sp)
  840c34:	dd800a17 	ldw	r22,40(sp)
  840c38:	dd400917 	ldw	r21,36(sp)
  840c3c:	dd000817 	ldw	r20,32(sp)
  840c40:	dcc00717 	ldw	r19,28(sp)
  840c44:	dc800617 	ldw	r18,24(sp)
  840c48:	dc400517 	ldw	r17,20(sp)
  840c4c:	dc000417 	ldw	r16,16(sp)
  840c50:	dec00e04 	addi	sp,sp,56
  840c54:	f800283a 	ret
  840c58:	d8c00117 	ldw	r3,4(sp)
  840c5c:	1c3fd80e 	bge	r3,r16,840bc0 <__alt_mem_epcs_flash_controller_0+0xff837bc0>
  840c60:	00bfffc4 	movi	r2,-1
  840c64:	003fda06 	br	840bd0 <__alt_mem_epcs_flash_controller_0+0xff837bd0>
  840c68:	00c00dc4 	movi	r3,55
  840c6c:	003fe206 	br	840bf8 <__alt_mem_epcs_flash_controller_0+0xff837bf8>
  840c70:	00800c04 	movi	r2,48
  840c74:	80801926 	beq	r16,r2,840cdc <_strtol_r+0x20c>
  840c78:	07000284 	movi	fp,10
  840c7c:	e027883a 	mov	r19,fp
  840c80:	003fb706 	br	840b60 <__alt_mem_epcs_flash_controller_0+0xff837b60>
  840c84:	0109c83a 	sub	r4,zero,r4
  840c88:	003fe006 	br	840c0c <__alt_mem_epcs_flash_controller_0+0xff837c0c>
  840c8c:	2005883a 	mov	r2,r4
  840c90:	8dbfffc4 	addi	r22,r17,-1
  840c94:	003fe206 	br	840c20 <__alt_mem_epcs_flash_controller_0+0xff837c20>
  840c98:	1c400084 	addi	r17,r3,2
  840c9c:	1c000043 	ldbu	r16,1(r3)
  840ca0:	05000044 	movi	r20,1
  840ca4:	003faa06 	br	840b50 <__alt_mem_epcs_flash_controller_0+0xff837b50>
  840ca8:	d9000317 	ldw	r4,12(sp)
  840cac:	00c00884 	movi	r3,34
  840cb0:	a005003a 	cmpeq	r2,r20,zero
  840cb4:	20c00015 	stw	r3,0(r4)
  840cb8:	00e00034 	movhi	r3,32768
  840cbc:	1885c83a 	sub	r2,r3,r2
  840cc0:	d8c00017 	ldw	r3,0(sp)
  840cc4:	183ff21e 	bne	r3,zero,840c90 <__alt_mem_epcs_flash_controller_0+0xff837c90>
  840cc8:	003fd706 	br	840c28 <__alt_mem_epcs_flash_controller_0+0xff837c28>
  840ccc:	1c400084 	addi	r17,r3,2
  840cd0:	1c000043 	ldbu	r16,1(r3)
  840cd4:	0029883a 	mov	r20,zero
  840cd8:	003f9d06 	br	840b50 <__alt_mem_epcs_flash_controller_0+0xff837b50>
  840cdc:	88800003 	ldbu	r2,0(r17)
  840ce0:	00c01604 	movi	r3,88
  840ce4:	108037cc 	andi	r2,r2,223
  840ce8:	10c00826 	beq	r2,r3,840d0c <_strtol_r+0x23c>
  840cec:	07000204 	movi	fp,8
  840cf0:	003f9a06 	br	840b5c <__alt_mem_epcs_flash_controller_0+0xff837b5c>
  840cf4:	00800c04 	movi	r2,48
  840cf8:	80bf981e 	bne	r16,r2,840b5c <__alt_mem_epcs_flash_controller_0+0xff837b5c>
  840cfc:	88800003 	ldbu	r2,0(r17)
  840d00:	00c01604 	movi	r3,88
  840d04:	108037cc 	andi	r2,r2,223
  840d08:	10ff941e 	bne	r2,r3,840b5c <__alt_mem_epcs_flash_controller_0+0xff837b5c>
  840d0c:	04c00404 	movi	r19,16
  840d10:	8c000043 	ldbu	r16,1(r17)
  840d14:	9839883a 	mov	fp,r19
  840d18:	8c400084 	addi	r17,r17,2
  840d1c:	003f9006 	br	840b60 <__alt_mem_epcs_flash_controller_0+0xff837b60>
  840d20:	2005883a 	mov	r2,r4
  840d24:	003fc006 	br	840c28 <__alt_mem_epcs_flash_controller_0+0xff837c28>

00840d28 <strtol>:
  840d28:	008021b4 	movhi	r2,134
  840d2c:	10af7404 	addi	r2,r2,-16944
  840d30:	300f883a 	mov	r7,r6
  840d34:	280d883a 	mov	r6,r5
  840d38:	200b883a 	mov	r5,r4
  840d3c:	11000017 	ldw	r4,0(r2)
  840d40:	0840ad01 	jmpi	840ad0 <_strtol_r>

00840d44 <_strtoll_r>:
  840d44:	008021b4 	movhi	r2,134
  840d48:	deffef04 	addi	sp,sp,-68
  840d4c:	10af7704 	addi	r2,r2,-16932
  840d50:	dd800d15 	stw	r22,52(sp)
  840d54:	15800017 	ldw	r22,0(r2)
  840d58:	df000f15 	stw	fp,60(sp)
  840d5c:	d9000515 	stw	r4,20(sp)
  840d60:	dfc01015 	stw	ra,64(sp)
  840d64:	ddc00e15 	stw	r23,56(sp)
  840d68:	dd400c15 	stw	r21,48(sp)
  840d6c:	dd000b15 	stw	r20,44(sp)
  840d70:	dcc00a15 	stw	r19,40(sp)
  840d74:	dc800915 	stw	r18,36(sp)
  840d78:	dc400815 	stw	r17,32(sp)
  840d7c:	dc000715 	stw	r16,28(sp)
  840d80:	d9400415 	stw	r5,16(sp)
  840d84:	d9800215 	stw	r6,8(sp)
  840d88:	3839883a 	mov	fp,r7
  840d8c:	2809883a 	mov	r4,r5
  840d90:	22000003 	ldbu	r8,0(r4)
  840d94:	24400044 	addi	r17,r4,1
  840d98:	2007883a 	mov	r3,r4
  840d9c:	b205883a 	add	r2,r22,r8
  840da0:	10800043 	ldbu	r2,1(r2)
  840da4:	8809883a 	mov	r4,r17
  840da8:	1080020c 	andi	r2,r2,8
  840dac:	103ff81e 	bne	r2,zero,840d90 <__alt_mem_epcs_flash_controller_0+0xff837d90>
  840db0:	00800b44 	movi	r2,45
  840db4:	40807e26 	beq	r8,r2,840fb0 <_strtoll_r+0x26c>
  840db8:	00800ac4 	movi	r2,43
  840dbc:	40808126 	beq	r8,r2,840fc4 <_strtoll_r+0x280>
  840dc0:	d8000115 	stw	zero,4(sp)
  840dc4:	e0000b26 	beq	fp,zero,840df4 <_strtoll_r+0xb0>
  840dc8:	00800404 	movi	r2,16
  840dcc:	e0808926 	beq	fp,r2,840ff4 <_strtoll_r+0x2b0>
  840dd0:	e00bd7fa 	srai	r5,fp,31
  840dd4:	d9000117 	ldw	r4,4(sp)
  840dd8:	e025883a 	mov	r18,fp
  840ddc:	d9400015 	stw	r5,0(sp)
  840de0:	20000b1e 	bne	r4,zero,840e10 <_strtoll_r+0xcc>
  840de4:	04200034 	movhi	r16,32768
  840de8:	843fffc4 	addi	r16,r16,-1
  840dec:	053fffc4 	movi	r20,-1
  840df0:	00000906 	br	840e18 <_strtoll_r+0xd4>
  840df4:	00800c04 	movi	r2,48
  840df8:	40807626 	beq	r8,r2,840fd4 <_strtoll_r+0x290>
  840dfc:	04800284 	movi	r18,10
  840e00:	d8000015 	stw	zero,0(sp)
  840e04:	9039883a 	mov	fp,r18
  840e08:	d9000117 	ldw	r4,4(sp)
  840e0c:	203ff526 	beq	r4,zero,840de4 <__alt_mem_epcs_flash_controller_0+0xff837de4>
  840e10:	0029883a 	mov	r20,zero
  840e14:	04200034 	movhi	r16,32768
  840e18:	d9c00017 	ldw	r7,0(sp)
  840e1c:	a009883a 	mov	r4,r20
  840e20:	800b883a 	mov	r5,r16
  840e24:	900d883a 	mov	r6,r18
  840e28:	da000615 	stw	r8,24(sp)
  840e2c:	084714c0 	call	84714c <__umoddi3>
  840e30:	d9c00017 	ldw	r7,0(sp)
  840e34:	a009883a 	mov	r4,r20
  840e38:	800b883a 	mov	r5,r16
  840e3c:	900d883a 	mov	r6,r18
  840e40:	d8800315 	stw	r2,12(sp)
  840e44:	0846b500 	call	846b50 <__udivdi3>
  840e48:	da000617 	ldw	r8,24(sp)
  840e4c:	1829883a 	mov	r20,r3
  840e50:	882f883a 	mov	r23,r17
  840e54:	b207883a 	add	r3,r22,r8
  840e58:	19800043 	ldbu	r6,1(r3)
  840e5c:	1021883a 	mov	r16,r2
  840e60:	000f883a 	mov	r7,zero
  840e64:	30c0010c 	andi	r3,r6,4
  840e68:	0009883a 	mov	r4,zero
  840e6c:	000b883a 	mov	r5,zero
  840e70:	04400044 	movi	r17,1
  840e74:	057fffc4 	movi	r21,-1
  840e78:	18000d26 	beq	r3,zero,840eb0 <_strtoll_r+0x16c>
  840e7c:	44fff404 	addi	r19,r8,-48
  840e80:	9f00110e 	bge	r19,fp,840ec8 <_strtoll_r+0x184>
  840e84:	3d400426 	beq	r7,r21,840e98 <_strtoll_r+0x154>
  840e88:	a1400236 	bltu	r20,r5,840e94 <_strtoll_r+0x150>
  840e8c:	2d002a1e 	bne	r5,r20,840f38 <_strtoll_r+0x1f4>
  840e90:	8100292e 	bgeu	r16,r4,840f38 <_strtoll_r+0x1f4>
  840e94:	01ffffc4 	movi	r7,-1
  840e98:	ba000003 	ldbu	r8,0(r23)
  840e9c:	bdc00044 	addi	r23,r23,1
  840ea0:	b207883a 	add	r3,r22,r8
  840ea4:	19800043 	ldbu	r6,1(r3)
  840ea8:	30c0010c 	andi	r3,r6,4
  840eac:	183ff31e 	bne	r3,zero,840e7c <__alt_mem_epcs_flash_controller_0+0xff837e7c>
  840eb0:	318000cc 	andi	r6,r6,3
  840eb4:	30000426 	beq	r6,zero,840ec8 <_strtoll_r+0x184>
  840eb8:	34402b26 	beq	r6,r17,840f68 <_strtoll_r+0x224>
  840ebc:	00c015c4 	movi	r3,87
  840ec0:	40e7c83a 	sub	r19,r8,r3
  840ec4:	9f3fef16 	blt	r19,fp,840e84 <__alt_mem_epcs_flash_controller_0+0xff837e84>
  840ec8:	00bfffc4 	movi	r2,-1
  840ecc:	38802c26 	beq	r7,r2,840f80 <_strtoll_r+0x23c>
  840ed0:	d8800117 	ldw	r2,4(sp)
  840ed4:	10000426 	beq	r2,zero,840ee8 <_strtoll_r+0x1a4>
  840ed8:	0109c83a 	sub	r4,zero,r4
  840edc:	2004c03a 	cmpne	r2,r4,zero
  840ee0:	0151c83a 	sub	r8,zero,r5
  840ee4:	408bc83a 	sub	r5,r8,r2
  840ee8:	d8800217 	ldw	r2,8(sp)
  840eec:	10005026 	beq	r2,zero,841030 <_strtoll_r+0x2ec>
  840ef0:	2005883a 	mov	r2,r4
  840ef4:	2807883a 	mov	r3,r5
  840ef8:	38002b1e 	bne	r7,zero,840fa8 <_strtoll_r+0x264>
  840efc:	dd800417 	ldw	r22,16(sp)
  840f00:	d9000217 	ldw	r4,8(sp)
  840f04:	25800015 	stw	r22,0(r4)
  840f08:	dfc01017 	ldw	ra,64(sp)
  840f0c:	df000f17 	ldw	fp,60(sp)
  840f10:	ddc00e17 	ldw	r23,56(sp)
  840f14:	dd800d17 	ldw	r22,52(sp)
  840f18:	dd400c17 	ldw	r21,48(sp)
  840f1c:	dd000b17 	ldw	r20,44(sp)
  840f20:	dcc00a17 	ldw	r19,40(sp)
  840f24:	dc800917 	ldw	r18,36(sp)
  840f28:	dc400817 	ldw	r17,32(sp)
  840f2c:	dc000717 	ldw	r16,28(sp)
  840f30:	dec01104 	addi	sp,sp,68
  840f34:	f800283a 	ret
  840f38:	24000d26 	beq	r4,r16,840f70 <_strtoll_r+0x22c>
  840f3c:	d9c00017 	ldw	r7,0(sp)
  840f40:	900d883a 	mov	r6,r18
  840f44:	08469d00 	call	8469d0 <__muldi3>
  840f48:	980bd7fa 	srai	r5,r19,31
  840f4c:	9885883a 	add	r2,r19,r2
  840f50:	14d1803a 	cmpltu	r8,r2,r19
  840f54:	28c7883a 	add	r3,r5,r3
  840f58:	1009883a 	mov	r4,r2
  840f5c:	40cb883a 	add	r5,r8,r3
  840f60:	01c00044 	movi	r7,1
  840f64:	003fcc06 	br	840e98 <__alt_mem_epcs_flash_controller_0+0xff837e98>
  840f68:	00c00dc4 	movi	r3,55
  840f6c:	003fd406 	br	840ec0 <__alt_mem_epcs_flash_controller_0+0xff837ec0>
  840f70:	2d3ff21e 	bne	r5,r20,840f3c <__alt_mem_epcs_flash_controller_0+0xff837f3c>
  840f74:	d8800317 	ldw	r2,12(sp)
  840f78:	14ffc616 	blt	r2,r19,840e94 <__alt_mem_epcs_flash_controller_0+0xff837e94>
  840f7c:	003fef06 	br	840f3c <__alt_mem_epcs_flash_controller_0+0xff837f3c>
  840f80:	d9000117 	ldw	r4,4(sp)
  840f84:	2000271e 	bne	r4,zero,841024 <_strtoll_r+0x2e0>
  840f88:	00e00034 	movhi	r3,32768
  840f8c:	18ffffc4 	addi	r3,r3,-1
  840f90:	3805883a 	mov	r2,r7
  840f94:	d9400517 	ldw	r5,20(sp)
  840f98:	01000884 	movi	r4,34
  840f9c:	29000015 	stw	r4,0(r5)
  840fa0:	d9000217 	ldw	r4,8(sp)
  840fa4:	203fd826 	beq	r4,zero,840f08 <__alt_mem_epcs_flash_controller_0+0xff837f08>
  840fa8:	bdbfffc4 	addi	r22,r23,-1
  840fac:	003fd406 	br	840f00 <__alt_mem_epcs_flash_controller_0+0xff837f00>
  840fb0:	00800044 	movi	r2,1
  840fb4:	1c400084 	addi	r17,r3,2
  840fb8:	1a000043 	ldbu	r8,1(r3)
  840fbc:	d8800115 	stw	r2,4(sp)
  840fc0:	003f8006 	br	840dc4 <__alt_mem_epcs_flash_controller_0+0xff837dc4>
  840fc4:	1c400084 	addi	r17,r3,2
  840fc8:	1a000043 	ldbu	r8,1(r3)
  840fcc:	d8000115 	stw	zero,4(sp)
  840fd0:	003f7c06 	br	840dc4 <__alt_mem_epcs_flash_controller_0+0xff837dc4>
  840fd4:	88800003 	ldbu	r2,0(r17)
  840fd8:	00c01604 	movi	r3,88
  840fdc:	108037cc 	andi	r2,r2,223
  840fe0:	10c00a26 	beq	r2,r3,84100c <_strtoll_r+0x2c8>
  840fe4:	04800204 	movi	r18,8
  840fe8:	d8000015 	stw	zero,0(sp)
  840fec:	9039883a 	mov	fp,r18
  840ff0:	003f8506 	br	840e08 <__alt_mem_epcs_flash_controller_0+0xff837e08>
  840ff4:	00800c04 	movi	r2,48
  840ff8:	4080101e 	bne	r8,r2,84103c <_strtoll_r+0x2f8>
  840ffc:	88800003 	ldbu	r2,0(r17)
  841000:	00c01604 	movi	r3,88
  841004:	108037cc 	andi	r2,r2,223
  841008:	10c00c1e 	bne	r2,r3,84103c <_strtoll_r+0x2f8>
  84100c:	04800404 	movi	r18,16
  841010:	8a000043 	ldbu	r8,1(r17)
  841014:	d8000015 	stw	zero,0(sp)
  841018:	8c400084 	addi	r17,r17,2
  84101c:	9039883a 	mov	fp,r18
  841020:	003f7906 	br	840e08 <__alt_mem_epcs_flash_controller_0+0xff837e08>
  841024:	0005883a 	mov	r2,zero
  841028:	00e00034 	movhi	r3,32768
  84102c:	003fd906 	br	840f94 <__alt_mem_epcs_flash_controller_0+0xff837f94>
  841030:	2005883a 	mov	r2,r4
  841034:	2807883a 	mov	r3,r5
  841038:	003fb306 	br	840f08 <__alt_mem_epcs_flash_controller_0+0xff837f08>
  84103c:	e025883a 	mov	r18,fp
  841040:	d8000015 	stw	zero,0(sp)
  841044:	003f7006 	br	840e08 <__alt_mem_epcs_flash_controller_0+0xff837e08>

00841048 <_strtoul_r>:
  841048:	008021b4 	movhi	r2,134
  84104c:	defff204 	addi	sp,sp,-56
  841050:	10af7704 	addi	r2,r2,-16932
  841054:	dd800a15 	stw	r22,40(sp)
  841058:	15800017 	ldw	r22,0(r2)
  84105c:	df000c15 	stw	fp,48(sp)
  841060:	dd400915 	stw	r21,36(sp)
  841064:	d9000315 	stw	r4,12(sp)
  841068:	dfc00d15 	stw	ra,52(sp)
  84106c:	ddc00b15 	stw	r23,44(sp)
  841070:	dd000815 	stw	r20,32(sp)
  841074:	dcc00715 	stw	r19,28(sp)
  841078:	dc800615 	stw	r18,24(sp)
  84107c:	dc400515 	stw	r17,20(sp)
  841080:	dc000415 	stw	r16,16(sp)
  841084:	d9400015 	stw	r5,0(sp)
  841088:	302b883a 	mov	r21,r6
  84108c:	3839883a 	mov	fp,r7
  841090:	2809883a 	mov	r4,r5
  841094:	24000003 	ldbu	r16,0(r4)
  841098:	24400044 	addi	r17,r4,1
  84109c:	2007883a 	mov	r3,r4
  8410a0:	b405883a 	add	r2,r22,r16
  8410a4:	10800043 	ldbu	r2,1(r2)
  8410a8:	8809883a 	mov	r4,r17
  8410ac:	1080020c 	andi	r2,r2,8
  8410b0:	103ff81e 	bne	r2,zero,841094 <__alt_mem_epcs_flash_controller_0+0xff838094>
  8410b4:	00800b44 	movi	r2,45
  8410b8:	80805826 	beq	r16,r2,84121c <_strtoul_r+0x1d4>
  8410bc:	00800ac4 	movi	r2,43
  8410c0:	80805b26 	beq	r16,r2,841230 <_strtoul_r+0x1e8>
  8410c4:	d8000215 	stw	zero,8(sp)
  8410c8:	e0000d26 	beq	fp,zero,841100 <_strtoul_r+0xb8>
  8410cc:	00800404 	movi	r2,16
  8410d0:	e0806626 	beq	fp,r2,84126c <_strtoul_r+0x224>
  8410d4:	013fffc4 	movi	r4,-1
  8410d8:	e00b883a 	mov	r5,fp
  8410dc:	083012c0 	call	83012c <__udivsi3>
  8410e0:	e00b883a 	mov	r5,fp
  8410e4:	013fffc4 	movi	r4,-1
  8410e8:	1025883a 	mov	r18,r2
  8410ec:	08301900 	call	830190 <__umodsi3>
  8410f0:	d8800115 	stw	r2,4(sp)
  8410f4:	e027883a 	mov	r19,fp
  8410f8:	902f883a 	mov	r23,r18
  8410fc:	00000806 	br	841120 <_strtoul_r+0xd8>
  841100:	00800c04 	movi	r2,48
  841104:	80804e26 	beq	r16,r2,841240 <_strtoul_r+0x1f8>
  841108:	07000284 	movi	fp,10
  84110c:	00c00144 	movi	r3,5
  841110:	05c666b4 	movhi	r23,6554
  841114:	d8c00115 	stw	r3,4(sp)
  841118:	bde66644 	addi	r23,r23,-26215
  84111c:	e027883a 	mov	r19,fp
  841120:	b407883a 	add	r3,r22,r16
  841124:	18c00043 	ldbu	r3,1(r3)
  841128:	0005883a 	mov	r2,zero
  84112c:	0009883a 	mov	r4,zero
  841130:	1940010c 	andi	r5,r3,4
  841134:	04800044 	movi	r18,1
  841138:	053fffc4 	movi	r20,-1
  84113c:	28000f26 	beq	r5,zero,84117c <_strtoul_r+0x134>
  841140:	843ff404 	addi	r16,r16,-48
  841144:	8700130e 	bge	r16,fp,841194 <_strtoul_r+0x14c>
  841148:	15000626 	beq	r2,r20,841164 <_strtoul_r+0x11c>
  84114c:	b9002836 	bltu	r23,r4,8411f0 <_strtoul_r+0x1a8>
  841150:	25c02526 	beq	r4,r23,8411e8 <_strtoul_r+0x1a0>
  841154:	980b883a 	mov	r5,r19
  841158:	08301e80 	call	8301e8 <__mulsi3>
  84115c:	8089883a 	add	r4,r16,r2
  841160:	00800044 	movi	r2,1
  841164:	8c000003 	ldbu	r16,0(r17)
  841168:	8c400044 	addi	r17,r17,1
  84116c:	b407883a 	add	r3,r22,r16
  841170:	18c00043 	ldbu	r3,1(r3)
  841174:	1940010c 	andi	r5,r3,4
  841178:	283ff11e 	bne	r5,zero,841140 <__alt_mem_epcs_flash_controller_0+0xff838140>
  84117c:	18c000cc 	andi	r3,r3,3
  841180:	18000426 	beq	r3,zero,841194 <_strtoul_r+0x14c>
  841184:	1c801c26 	beq	r3,r18,8411f8 <_strtoul_r+0x1b0>
  841188:	00c015c4 	movi	r3,87
  84118c:	80e1c83a 	sub	r16,r16,r3
  841190:	873fed16 	blt	r16,fp,841148 <__alt_mem_epcs_flash_controller_0+0xff838148>
  841194:	10001a16 	blt	r2,zero,841200 <_strtoul_r+0x1b8>
  841198:	d8c00217 	ldw	r3,8(sp)
  84119c:	18000126 	beq	r3,zero,8411a4 <_strtoul_r+0x15c>
  8411a0:	0109c83a 	sub	r4,zero,r4
  8411a4:	a8000326 	beq	r21,zero,8411b4 <_strtoul_r+0x16c>
  8411a8:	dd000017 	ldw	r20,0(sp)
  8411ac:	1000191e 	bne	r2,zero,841214 <_strtoul_r+0x1cc>
  8411b0:	ad000015 	stw	r20,0(r21)
  8411b4:	2005883a 	mov	r2,r4
  8411b8:	dfc00d17 	ldw	ra,52(sp)
  8411bc:	df000c17 	ldw	fp,48(sp)
  8411c0:	ddc00b17 	ldw	r23,44(sp)
  8411c4:	dd800a17 	ldw	r22,40(sp)
  8411c8:	dd400917 	ldw	r21,36(sp)
  8411cc:	dd000817 	ldw	r20,32(sp)
  8411d0:	dcc00717 	ldw	r19,28(sp)
  8411d4:	dc800617 	ldw	r18,24(sp)
  8411d8:	dc400517 	ldw	r17,20(sp)
  8411dc:	dc000417 	ldw	r16,16(sp)
  8411e0:	dec00e04 	addi	sp,sp,56
  8411e4:	f800283a 	ret
  8411e8:	d8c00117 	ldw	r3,4(sp)
  8411ec:	1c3fd90e 	bge	r3,r16,841154 <__alt_mem_epcs_flash_controller_0+0xff838154>
  8411f0:	00bfffc4 	movi	r2,-1
  8411f4:	003fdb06 	br	841164 <__alt_mem_epcs_flash_controller_0+0xff838164>
  8411f8:	00c00dc4 	movi	r3,55
  8411fc:	003fe306 	br	84118c <__alt_mem_epcs_flash_controller_0+0xff83818c>
  841200:	d8c00317 	ldw	r3,12(sp)
  841204:	00800884 	movi	r2,34
  841208:	013fffc4 	movi	r4,-1
  84120c:	18800015 	stw	r2,0(r3)
  841210:	a83fe826 	beq	r21,zero,8411b4 <__alt_mem_epcs_flash_controller_0+0xff8381b4>
  841214:	8d3fffc4 	addi	r20,r17,-1
  841218:	003fe506 	br	8411b0 <__alt_mem_epcs_flash_controller_0+0xff8381b0>
  84121c:	1c400084 	addi	r17,r3,2
  841220:	1c000043 	ldbu	r16,1(r3)
  841224:	00c00044 	movi	r3,1
  841228:	d8c00215 	stw	r3,8(sp)
  84122c:	003fa606 	br	8410c8 <__alt_mem_epcs_flash_controller_0+0xff8380c8>
  841230:	1c400084 	addi	r17,r3,2
  841234:	1c000043 	ldbu	r16,1(r3)
  841238:	d8000215 	stw	zero,8(sp)
  84123c:	003fa206 	br	8410c8 <__alt_mem_epcs_flash_controller_0+0xff8380c8>
  841240:	88800003 	ldbu	r2,0(r17)
  841244:	00c01604 	movi	r3,88
  841248:	108037cc 	andi	r2,r2,223
  84124c:	10c00d26 	beq	r2,r3,841284 <_strtoul_r+0x23c>
  841250:	07000204 	movi	fp,8
  841254:	00c001c4 	movi	r3,7
  841258:	05c80034 	movhi	r23,8192
  84125c:	d8c00115 	stw	r3,4(sp)
  841260:	bdffffc4 	addi	r23,r23,-1
  841264:	e027883a 	mov	r19,fp
  841268:	003fad06 	br	841120 <__alt_mem_epcs_flash_controller_0+0xff838120>
  84126c:	00800c04 	movi	r2,48
  841270:	80800d1e 	bne	r16,r2,8412a8 <_strtoul_r+0x260>
  841274:	88800003 	ldbu	r2,0(r17)
  841278:	00c01604 	movi	r3,88
  84127c:	108037cc 	andi	r2,r2,223
  841280:	10c0091e 	bne	r2,r3,8412a8 <_strtoul_r+0x260>
  841284:	04c00404 	movi	r19,16
  841288:	00c003c4 	movi	r3,15
  84128c:	04840034 	movhi	r18,4096
  841290:	8c000043 	ldbu	r16,1(r17)
  841294:	d8c00115 	stw	r3,4(sp)
  841298:	8c400084 	addi	r17,r17,2
  84129c:	94bfffc4 	addi	r18,r18,-1
  8412a0:	9839883a 	mov	fp,r19
  8412a4:	003f9406 	br	8410f8 <__alt_mem_epcs_flash_controller_0+0xff8380f8>
  8412a8:	00c003c4 	movi	r3,15
  8412ac:	05c40034 	movhi	r23,4096
  8412b0:	d8c00115 	stw	r3,4(sp)
  8412b4:	bdffffc4 	addi	r23,r23,-1
  8412b8:	e027883a 	mov	r19,fp
  8412bc:	003f9806 	br	841120 <__alt_mem_epcs_flash_controller_0+0xff838120>

008412c0 <strtoul>:
  8412c0:	008021b4 	movhi	r2,134
  8412c4:	10af7404 	addi	r2,r2,-16944
  8412c8:	300f883a 	mov	r7,r6
  8412cc:	280d883a 	mov	r6,r5
  8412d0:	200b883a 	mov	r5,r4
  8412d4:	11000017 	ldw	r4,0(r2)
  8412d8:	08410481 	jmpi	841048 <_strtoul_r>

008412dc <_strtoull_r>:
  8412dc:	008021b4 	movhi	r2,134
  8412e0:	deffef04 	addi	sp,sp,-68
  8412e4:	10af7704 	addi	r2,r2,-16932
  8412e8:	dd800d15 	stw	r22,52(sp)
  8412ec:	15800017 	ldw	r22,0(r2)
  8412f0:	df000f15 	stw	fp,60(sp)
  8412f4:	d9000515 	stw	r4,20(sp)
  8412f8:	dfc01015 	stw	ra,64(sp)
  8412fc:	ddc00e15 	stw	r23,56(sp)
  841300:	dd400c15 	stw	r21,48(sp)
  841304:	dd000b15 	stw	r20,44(sp)
  841308:	dcc00a15 	stw	r19,40(sp)
  84130c:	dc800915 	stw	r18,36(sp)
  841310:	dc400815 	stw	r17,32(sp)
  841314:	dc000715 	stw	r16,28(sp)
  841318:	d9400215 	stw	r5,8(sp)
  84131c:	d9800115 	stw	r6,4(sp)
  841320:	3839883a 	mov	fp,r7
  841324:	2809883a 	mov	r4,r5
  841328:	22000003 	ldbu	r8,0(r4)
  84132c:	24400044 	addi	r17,r4,1
  841330:	2007883a 	mov	r3,r4
  841334:	b205883a 	add	r2,r22,r8
  841338:	10800043 	ldbu	r2,1(r2)
  84133c:	8809883a 	mov	r4,r17
  841340:	1080020c 	andi	r2,r2,8
  841344:	103ff81e 	bne	r2,zero,841328 <__alt_mem_epcs_flash_controller_0+0xff838328>
  841348:	00800b44 	movi	r2,45
  84134c:	40807726 	beq	r8,r2,84152c <_strtoull_r+0x250>
  841350:	00800ac4 	movi	r2,43
  841354:	40807a26 	beq	r8,r2,841540 <_strtoull_r+0x264>
  841358:	d8000415 	stw	zero,16(sp)
  84135c:	e0001426 	beq	fp,zero,8413b0 <_strtoull_r+0xd4>
  841360:	00800404 	movi	r2,16
  841364:	e0808826 	beq	fp,r2,841588 <_strtoull_r+0x2ac>
  841368:	e025d7fa 	srai	r18,fp,31
  84136c:	013fffc4 	movi	r4,-1
  841370:	200b883a 	mov	r5,r4
  841374:	e00d883a 	mov	r6,fp
  841378:	900f883a 	mov	r7,r18
  84137c:	da000615 	stw	r8,24(sp)
  841380:	0846b500 	call	846b50 <__udivdi3>
  841384:	013fffc4 	movi	r4,-1
  841388:	e00d883a 	mov	r6,fp
  84138c:	900f883a 	mov	r7,r18
  841390:	200b883a 	mov	r5,r4
  841394:	1021883a 	mov	r16,r2
  841398:	182f883a 	mov	r23,r3
  84139c:	084714c0 	call	84714c <__umoddi3>
  8413a0:	d8800315 	stw	r2,12(sp)
  8413a4:	df000015 	stw	fp,0(sp)
  8413a8:	da000617 	ldw	r8,24(sp)
  8413ac:	00000c06 	br	8413e0 <_strtoull_r+0x104>
  8413b0:	00800c04 	movi	r2,48
  8413b4:	40806626 	beq	r8,r2,841550 <_strtoull_r+0x274>
  8413b8:	00800284 	movi	r2,10
  8413bc:	00c00144 	movi	r3,5
  8413c0:	042666b4 	movhi	r16,39322
  8413c4:	05c666b4 	movhi	r23,6554
  8413c8:	d8800015 	stw	r2,0(sp)
  8413cc:	d8c00315 	stw	r3,12(sp)
  8413d0:	84266644 	addi	r16,r16,-26215
  8413d4:	bde66644 	addi	r23,r23,-26215
  8413d8:	0025883a 	mov	r18,zero
  8413dc:	1039883a 	mov	fp,r2
  8413e0:	b205883a 	add	r2,r22,r8
  8413e4:	11800043 	ldbu	r6,1(r2)
  8413e8:	882b883a 	mov	r21,r17
  8413ec:	000f883a 	mov	r7,zero
  8413f0:	3080010c 	andi	r2,r6,4
  8413f4:	0009883a 	mov	r4,zero
  8413f8:	000b883a 	mov	r5,zero
  8413fc:	04400044 	movi	r17,1
  841400:	053fffc4 	movi	r20,-1
  841404:	10000d26 	beq	r2,zero,84143c <_strtoull_r+0x160>
  841408:	44fff404 	addi	r19,r8,-48
  84140c:	9f00110e 	bge	r19,fp,841454 <_strtoull_r+0x178>
  841410:	3d000426 	beq	r7,r20,841424 <_strtoull_r+0x148>
  841414:	b9400236 	bltu	r23,r5,841420 <_strtoull_r+0x144>
  841418:	2dc0291e 	bne	r5,r23,8414c0 <_strtoull_r+0x1e4>
  84141c:	8100282e 	bgeu	r16,r4,8414c0 <_strtoull_r+0x1e4>
  841420:	01ffffc4 	movi	r7,-1
  841424:	aa000003 	ldbu	r8,0(r21)
  841428:	ad400044 	addi	r21,r21,1
  84142c:	b205883a 	add	r2,r22,r8
  841430:	11800043 	ldbu	r6,1(r2)
  841434:	3080010c 	andi	r2,r6,4
  841438:	103ff31e 	bne	r2,zero,841408 <__alt_mem_epcs_flash_controller_0+0xff838408>
  84143c:	318000cc 	andi	r6,r6,3
  841440:	30000426 	beq	r6,zero,841454 <_strtoull_r+0x178>
  841444:	34402a26 	beq	r6,r17,8414f0 <_strtoull_r+0x214>
  841448:	00c015c4 	movi	r3,87
  84144c:	40e7c83a 	sub	r19,r8,r3
  841450:	9f3fef16 	blt	r19,fp,841410 <__alt_mem_epcs_flash_controller_0+0xff838410>
  841454:	38002c16 	blt	r7,zero,841508 <_strtoull_r+0x22c>
  841458:	d8c00417 	ldw	r3,16(sp)
  84145c:	18000426 	beq	r3,zero,841470 <_strtoull_r+0x194>
  841460:	0109c83a 	sub	r4,zero,r4
  841464:	2004c03a 	cmpne	r2,r4,zero
  841468:	0151c83a 	sub	r8,zero,r5
  84146c:	408bc83a 	sub	r5,r8,r2
  841470:	d8800117 	ldw	r2,4(sp)
  841474:	10000426 	beq	r2,zero,841488 <_strtoull_r+0x1ac>
  841478:	dd000217 	ldw	r20,8(sp)
  84147c:	3800291e 	bne	r7,zero,841524 <_strtoull_r+0x248>
  841480:	d8c00117 	ldw	r3,4(sp)
  841484:	1d000015 	stw	r20,0(r3)
  841488:	2005883a 	mov	r2,r4
  84148c:	2807883a 	mov	r3,r5
  841490:	dfc01017 	ldw	ra,64(sp)
  841494:	df000f17 	ldw	fp,60(sp)
  841498:	ddc00e17 	ldw	r23,56(sp)
  84149c:	dd800d17 	ldw	r22,52(sp)
  8414a0:	dd400c17 	ldw	r21,48(sp)
  8414a4:	dd000b17 	ldw	r20,44(sp)
  8414a8:	dcc00a17 	ldw	r19,40(sp)
  8414ac:	dc800917 	ldw	r18,36(sp)
  8414b0:	dc400817 	ldw	r17,32(sp)
  8414b4:	dc000717 	ldw	r16,28(sp)
  8414b8:	dec01104 	addi	sp,sp,68
  8414bc:	f800283a 	ret
  8414c0:	24000d26 	beq	r4,r16,8414f8 <_strtoull_r+0x21c>
  8414c4:	d9800017 	ldw	r6,0(sp)
  8414c8:	900f883a 	mov	r7,r18
  8414cc:	08469d00 	call	8469d0 <__muldi3>
  8414d0:	980bd7fa 	srai	r5,r19,31
  8414d4:	9885883a 	add	r2,r19,r2
  8414d8:	14d1803a 	cmpltu	r8,r2,r19
  8414dc:	28c7883a 	add	r3,r5,r3
  8414e0:	1009883a 	mov	r4,r2
  8414e4:	40cb883a 	add	r5,r8,r3
  8414e8:	01c00044 	movi	r7,1
  8414ec:	003fcd06 	br	841424 <__alt_mem_epcs_flash_controller_0+0xff838424>
  8414f0:	00c00dc4 	movi	r3,55
  8414f4:	003fd506 	br	84144c <__alt_mem_epcs_flash_controller_0+0xff83844c>
  8414f8:	2dfff21e 	bne	r5,r23,8414c4 <__alt_mem_epcs_flash_controller_0+0xff8384c4>
  8414fc:	d8c00317 	ldw	r3,12(sp)
  841500:	1cffc716 	blt	r3,r19,841420 <__alt_mem_epcs_flash_controller_0+0xff838420>
  841504:	003fef06 	br	8414c4 <__alt_mem_epcs_flash_controller_0+0xff8384c4>
  841508:	d8c00517 	ldw	r3,20(sp)
  84150c:	00800884 	movi	r2,34
  841510:	013fffc4 	movi	r4,-1
  841514:	18800015 	stw	r2,0(r3)
  841518:	d8800117 	ldw	r2,4(sp)
  84151c:	200b883a 	mov	r5,r4
  841520:	103fd926 	beq	r2,zero,841488 <__alt_mem_epcs_flash_controller_0+0xff838488>
  841524:	ad3fffc4 	addi	r20,r21,-1
  841528:	003fd506 	br	841480 <__alt_mem_epcs_flash_controller_0+0xff838480>
  84152c:	00800044 	movi	r2,1
  841530:	1c400084 	addi	r17,r3,2
  841534:	1a000043 	ldbu	r8,1(r3)
  841538:	d8800415 	stw	r2,16(sp)
  84153c:	003f8706 	br	84135c <__alt_mem_epcs_flash_controller_0+0xff83835c>
  841540:	1c400084 	addi	r17,r3,2
  841544:	1a000043 	ldbu	r8,1(r3)
  841548:	d8000415 	stw	zero,16(sp)
  84154c:	003f8306 	br	84135c <__alt_mem_epcs_flash_controller_0+0xff83835c>
  841550:	88800003 	ldbu	r2,0(r17)
  841554:	00c01604 	movi	r3,88
  841558:	108037cc 	andi	r2,r2,223
  84155c:	10c01026 	beq	r2,r3,8415a0 <_strtoull_r+0x2c4>
  841560:	00c00204 	movi	r3,8
  841564:	008001c4 	movi	r2,7
  841568:	043fffc4 	movi	r16,-1
  84156c:	05c80034 	movhi	r23,8192
  841570:	d8c00015 	stw	r3,0(sp)
  841574:	d8800315 	stw	r2,12(sp)
  841578:	bc2f883a 	add	r23,r23,r16
  84157c:	0025883a 	mov	r18,zero
  841580:	1839883a 	mov	fp,r3
  841584:	003f9606 	br	8413e0 <__alt_mem_epcs_flash_controller_0+0xff8383e0>
  841588:	00800c04 	movi	r2,48
  84158c:	4080101e 	bne	r8,r2,8415d0 <_strtoull_r+0x2f4>
  841590:	88800003 	ldbu	r2,0(r17)
  841594:	00c01604 	movi	r3,88
  841598:	108037cc 	andi	r2,r2,223
  84159c:	10c0141e 	bne	r2,r3,8415f0 <_strtoull_r+0x314>
  8415a0:	00c00404 	movi	r3,16
  8415a4:	008003c4 	movi	r2,15
  8415a8:	043fffc4 	movi	r16,-1
  8415ac:	05c40034 	movhi	r23,4096
  8415b0:	8a000043 	ldbu	r8,1(r17)
  8415b4:	d8c00015 	stw	r3,0(sp)
  8415b8:	d8800315 	stw	r2,12(sp)
  8415bc:	8c400084 	addi	r17,r17,2
  8415c0:	bc2f883a 	add	r23,r23,r16
  8415c4:	0025883a 	mov	r18,zero
  8415c8:	1839883a 	mov	fp,r3
  8415cc:	003f8406 	br	8413e0 <__alt_mem_epcs_flash_controller_0+0xff8383e0>
  8415d0:	008003c4 	movi	r2,15
  8415d4:	d8800315 	stw	r2,12(sp)
  8415d8:	043fffc4 	movi	r16,-1
  8415dc:	05c40034 	movhi	r23,4096
  8415e0:	bc2f883a 	add	r23,r23,r16
  8415e4:	df000015 	stw	fp,0(sp)
  8415e8:	0025883a 	mov	r18,zero
  8415ec:	003f7c06 	br	8413e0 <__alt_mem_epcs_flash_controller_0+0xff8383e0>
  8415f0:	00c003c4 	movi	r3,15
  8415f4:	d8c00315 	stw	r3,12(sp)
  8415f8:	003ff706 	br	8415d8 <__alt_mem_epcs_flash_controller_0+0xff8385d8>

008415fc <__ssprint_r>:
  8415fc:	30800217 	ldw	r2,8(r6)
  841600:	defff604 	addi	sp,sp,-40
  841604:	dc800215 	stw	r18,8(sp)
  841608:	dfc00915 	stw	ra,36(sp)
  84160c:	df000815 	stw	fp,32(sp)
  841610:	ddc00715 	stw	r23,28(sp)
  841614:	dd800615 	stw	r22,24(sp)
  841618:	dd400515 	stw	r21,20(sp)
  84161c:	dd000415 	stw	r20,16(sp)
  841620:	dcc00315 	stw	r19,12(sp)
  841624:	dc400115 	stw	r17,4(sp)
  841628:	dc000015 	stw	r16,0(sp)
  84162c:	3025883a 	mov	r18,r6
  841630:	10005826 	beq	r2,zero,841794 <__ssprint_r+0x198>
  841634:	2027883a 	mov	r19,r4
  841638:	35c00017 	ldw	r23,0(r6)
  84163c:	29000017 	ldw	r4,0(r5)
  841640:	28800217 	ldw	r2,8(r5)
  841644:	2823883a 	mov	r17,r5
  841648:	0039883a 	mov	fp,zero
  84164c:	0021883a 	mov	r16,zero
  841650:	80003926 	beq	r16,zero,841738 <__ssprint_r+0x13c>
  841654:	102b883a 	mov	r21,r2
  841658:	102d883a 	mov	r22,r2
  84165c:	80803a36 	bltu	r16,r2,841748 <__ssprint_r+0x14c>
  841660:	88c0030b 	ldhu	r3,12(r17)
  841664:	1881200c 	andi	r2,r3,1152
  841668:	10002626 	beq	r2,zero,841704 <__ssprint_r+0x108>
  84166c:	88800517 	ldw	r2,20(r17)
  841670:	89400417 	ldw	r5,16(r17)
  841674:	81800044 	addi	r6,r16,1
  841678:	108f883a 	add	r7,r2,r2
  84167c:	3885883a 	add	r2,r7,r2
  841680:	100ed7fa 	srli	r7,r2,31
  841684:	216dc83a 	sub	r22,r4,r5
  841688:	3589883a 	add	r4,r6,r22
  84168c:	3885883a 	add	r2,r7,r2
  841690:	102bd07a 	srai	r21,r2,1
  841694:	a80d883a 	mov	r6,r21
  841698:	a900022e 	bgeu	r21,r4,8416a4 <__ssprint_r+0xa8>
  84169c:	202b883a 	mov	r21,r4
  8416a0:	200d883a 	mov	r6,r4
  8416a4:	18c1000c 	andi	r3,r3,1024
  8416a8:	18002a26 	beq	r3,zero,841754 <__ssprint_r+0x158>
  8416ac:	300b883a 	mov	r5,r6
  8416b0:	9809883a 	mov	r4,r19
  8416b4:	083335c0 	call	83335c <_malloc_r>
  8416b8:	1029883a 	mov	r20,r2
  8416bc:	10002c26 	beq	r2,zero,841770 <__ssprint_r+0x174>
  8416c0:	89400417 	ldw	r5,16(r17)
  8416c4:	b00d883a 	mov	r6,r22
  8416c8:	1009883a 	mov	r4,r2
  8416cc:	0833c4c0 	call	833c4c <memcpy>
  8416d0:	8880030b 	ldhu	r2,12(r17)
  8416d4:	00fedfc4 	movi	r3,-1153
  8416d8:	10c4703a 	and	r2,r2,r3
  8416dc:	10802014 	ori	r2,r2,128
  8416e0:	8880030d 	sth	r2,12(r17)
  8416e4:	a589883a 	add	r4,r20,r22
  8416e8:	adadc83a 	sub	r22,r21,r22
  8416ec:	8d400515 	stw	r21,20(r17)
  8416f0:	8d800215 	stw	r22,8(r17)
  8416f4:	8d000415 	stw	r20,16(r17)
  8416f8:	89000015 	stw	r4,0(r17)
  8416fc:	802b883a 	mov	r21,r16
  841700:	802d883a 	mov	r22,r16
  841704:	b00d883a 	mov	r6,r22
  841708:	e00b883a 	mov	r5,fp
  84170c:	083dbd00 	call	83dbd0 <memmove>
  841710:	88800217 	ldw	r2,8(r17)
  841714:	89000017 	ldw	r4,0(r17)
  841718:	90c00217 	ldw	r3,8(r18)
  84171c:	1545c83a 	sub	r2,r2,r21
  841720:	2589883a 	add	r4,r4,r22
  841724:	88800215 	stw	r2,8(r17)
  841728:	89000015 	stw	r4,0(r17)
  84172c:	1c21c83a 	sub	r16,r3,r16
  841730:	94000215 	stw	r16,8(r18)
  841734:	80001726 	beq	r16,zero,841794 <__ssprint_r+0x198>
  841738:	bf000017 	ldw	fp,0(r23)
  84173c:	bc000117 	ldw	r16,4(r23)
  841740:	bdc00204 	addi	r23,r23,8
  841744:	003fc206 	br	841650 <__alt_mem_epcs_flash_controller_0+0xff838650>
  841748:	802b883a 	mov	r21,r16
  84174c:	802d883a 	mov	r22,r16
  841750:	003fec06 	br	841704 <__alt_mem_epcs_flash_controller_0+0xff838704>
  841754:	9809883a 	mov	r4,r19
  841758:	08346740 	call	834674 <_realloc_r>
  84175c:	1029883a 	mov	r20,r2
  841760:	103fe01e 	bne	r2,zero,8416e4 <__alt_mem_epcs_flash_controller_0+0xff8386e4>
  841764:	89400417 	ldw	r5,16(r17)
  841768:	9809883a 	mov	r4,r19
  84176c:	0832d380 	call	832d38 <_free_r>
  841770:	88c0030b 	ldhu	r3,12(r17)
  841774:	00800304 	movi	r2,12
  841778:	98800015 	stw	r2,0(r19)
  84177c:	18c01014 	ori	r3,r3,64
  841780:	88c0030d 	sth	r3,12(r17)
  841784:	00bfffc4 	movi	r2,-1
  841788:	90000215 	stw	zero,8(r18)
  84178c:	90000115 	stw	zero,4(r18)
  841790:	00000206 	br	84179c <__ssprint_r+0x1a0>
  841794:	90000115 	stw	zero,4(r18)
  841798:	0005883a 	mov	r2,zero
  84179c:	dfc00917 	ldw	ra,36(sp)
  8417a0:	df000817 	ldw	fp,32(sp)
  8417a4:	ddc00717 	ldw	r23,28(sp)
  8417a8:	dd800617 	ldw	r22,24(sp)
  8417ac:	dd400517 	ldw	r21,20(sp)
  8417b0:	dd000417 	ldw	r20,16(sp)
  8417b4:	dcc00317 	ldw	r19,12(sp)
  8417b8:	dc800217 	ldw	r18,8(sp)
  8417bc:	dc400117 	ldw	r17,4(sp)
  8417c0:	dc000017 	ldw	r16,0(sp)
  8417c4:	dec00a04 	addi	sp,sp,40
  8417c8:	f800283a 	ret

008417cc <___svfiprintf_internal_r>:
  8417cc:	2880030b 	ldhu	r2,12(r5)
  8417d0:	deffc804 	addi	sp,sp,-224
  8417d4:	dcc03115 	stw	r19,196(sp)
  8417d8:	dfc03715 	stw	ra,220(sp)
  8417dc:	df003615 	stw	fp,216(sp)
  8417e0:	ddc03515 	stw	r23,212(sp)
  8417e4:	dd803415 	stw	r22,208(sp)
  8417e8:	dd403315 	stw	r21,204(sp)
  8417ec:	dd003215 	stw	r20,200(sp)
  8417f0:	dc803015 	stw	r18,192(sp)
  8417f4:	dc402f15 	stw	r17,188(sp)
  8417f8:	dc002e15 	stw	r16,184(sp)
  8417fc:	d9402315 	stw	r5,140(sp)
  841800:	d9002715 	stw	r4,156(sp)
  841804:	1080200c 	andi	r2,r2,128
  841808:	d9c02415 	stw	r7,144(sp)
  84180c:	3027883a 	mov	r19,r6
  841810:	10000226 	beq	r2,zero,84181c <___svfiprintf_internal_r+0x50>
  841814:	28800417 	ldw	r2,16(r5)
  841818:	10046d26 	beq	r2,zero,8429d0 <___svfiprintf_internal_r+0x1204>
  84181c:	d8801a04 	addi	r2,sp,104
  841820:	d8c019c4 	addi	r3,sp,103
  841824:	058021b4 	movhi	r22,134
  841828:	10c9c83a 	sub	r4,r2,r3
  84182c:	b5a72904 	addi	r22,r22,-25436
  841830:	d8801e15 	stw	r2,120(sp)
  841834:	d8c01f15 	stw	r3,124(sp)
  841838:	dec01a15 	stw	sp,104(sp)
  84183c:	d8001c15 	stw	zero,112(sp)
  841840:	d8001b15 	stw	zero,108(sp)
  841844:	d811883a 	mov	r8,sp
  841848:	d8002915 	stw	zero,164(sp)
  84184c:	d8002615 	stw	zero,152(sp)
  841850:	d9002c15 	stw	r4,176(sp)
  841854:	98800007 	ldb	r2,0(r19)
  841858:	10031426 	beq	r2,zero,8424ac <___svfiprintf_internal_r+0xce0>
  84185c:	00c00944 	movi	r3,37
  841860:	9825883a 	mov	r18,r19
  841864:	10c0021e 	bne	r2,r3,841870 <___svfiprintf_internal_r+0xa4>
  841868:	00001406 	br	8418bc <___svfiprintf_internal_r+0xf0>
  84186c:	10c00326 	beq	r2,r3,84187c <___svfiprintf_internal_r+0xb0>
  841870:	94800044 	addi	r18,r18,1
  841874:	90800007 	ldb	r2,0(r18)
  841878:	103ffc1e 	bne	r2,zero,84186c <__alt_mem_epcs_flash_controller_0+0xff83886c>
  84187c:	94e1c83a 	sub	r16,r18,r19
  841880:	80000e26 	beq	r16,zero,8418bc <___svfiprintf_internal_r+0xf0>
  841884:	d8c01c17 	ldw	r3,112(sp)
  841888:	d8801b17 	ldw	r2,108(sp)
  84188c:	44c00015 	stw	r19,0(r8)
  841890:	1c07883a 	add	r3,r3,r16
  841894:	10800044 	addi	r2,r2,1
  841898:	d8c01c15 	stw	r3,112(sp)
  84189c:	44000115 	stw	r16,4(r8)
  8418a0:	d8801b15 	stw	r2,108(sp)
  8418a4:	00c001c4 	movi	r3,7
  8418a8:	18835c16 	blt	r3,r2,84261c <___svfiprintf_internal_r+0xe50>
  8418ac:	42000204 	addi	r8,r8,8
  8418b0:	d9402617 	ldw	r5,152(sp)
  8418b4:	2c0b883a 	add	r5,r5,r16
  8418b8:	d9402615 	stw	r5,152(sp)
  8418bc:	90800007 	ldb	r2,0(r18)
  8418c0:	1002fc26 	beq	r2,zero,8424b4 <___svfiprintf_internal_r+0xce8>
  8418c4:	0023883a 	mov	r17,zero
  8418c8:	00bfffc4 	movi	r2,-1
  8418cc:	0021883a 	mov	r16,zero
  8418d0:	94c00044 	addi	r19,r18,1
  8418d4:	90c00047 	ldb	r3,1(r18)
  8418d8:	dc402105 	stb	r17,132(sp)
  8418dc:	d8001d85 	stb	zero,118(sp)
  8418e0:	002b883a 	mov	r21,zero
  8418e4:	d8802015 	stw	r2,128(sp)
  8418e8:	d8002515 	stw	zero,148(sp)
  8418ec:	04801604 	movi	r18,88
  8418f0:	05000244 	movi	r20,9
  8418f4:	402f883a 	mov	r23,r8
  8418f8:	8023883a 	mov	r17,r16
  8418fc:	9cc00044 	addi	r19,r19,1
  841900:	18bff804 	addi	r2,r3,-32
  841904:	9081fb36 	bltu	r18,r2,8420f4 <___svfiprintf_internal_r+0x928>
  841908:	100490ba 	slli	r2,r2,2
  84190c:	01002134 	movhi	r4,132
  841910:	21064804 	addi	r4,r4,6432
  841914:	1105883a 	add	r2,r2,r4
  841918:	10800017 	ldw	r2,0(r2)
  84191c:	1000683a 	jmp	r2
  841920:	00841b20 	cmpeqi	r2,zero,4204
  841924:	008420f4 	movhi	r2,4227
  841928:	008420f4 	movhi	r2,4227
  84192c:	00841b14 	movui	r2,4204
  841930:	008420f4 	movhi	r2,4227
  841934:	008420f4 	movhi	r2,4227
  841938:	008420f4 	movhi	r2,4227
  84193c:	008420f4 	movhi	r2,4227
  841940:	008420f4 	movhi	r2,4227
  841944:	008420f4 	movhi	r2,4227
  841948:	00841a84 	movi	r2,4202
  84194c:	00841c80 	call	841c8 <OSCtxSw_SWITCH_PC+0x84188>
  841950:	008420f4 	movhi	r2,4227
  841954:	00841aac 	andhi	r2,zero,4202
  841958:	00842130 	cmpltui	r2,zero,4228
  84195c:	008420f4 	movhi	r2,4227
  841960:	00842124 	muli	r2,zero,4228
  841964:	008420b8 	rdprs	r2,zero,4226
  841968:	008420b8 	rdprs	r2,zero,4226
  84196c:	008420b8 	rdprs	r2,zero,4226
  841970:	008420b8 	rdprs	r2,zero,4226
  841974:	008420b8 	rdprs	r2,zero,4226
  841978:	008420b8 	rdprs	r2,zero,4226
  84197c:	008420b8 	rdprs	r2,zero,4226
  841980:	008420b8 	rdprs	r2,zero,4226
  841984:	008420b8 	rdprs	r2,zero,4226
  841988:	008420f4 	movhi	r2,4227
  84198c:	008420f4 	movhi	r2,4227
  841990:	008420f4 	movhi	r2,4227
  841994:	008420f4 	movhi	r2,4227
  841998:	008420f4 	movhi	r2,4227
  84199c:	008420f4 	movhi	r2,4227
  8419a0:	008420f4 	movhi	r2,4227
  8419a4:	008420f4 	movhi	r2,4227
  8419a8:	008420f4 	movhi	r2,4227
  8419ac:	008420f4 	movhi	r2,4227
  8419b0:	0084203c 	xorhi	r2,zero,4224
  8419b4:	008420f4 	movhi	r2,4227
  8419b8:	008420f4 	movhi	r2,4227
  8419bc:	008420f4 	movhi	r2,4227
  8419c0:	008420f4 	movhi	r2,4227
  8419c4:	008420f4 	movhi	r2,4227
  8419c8:	008420f4 	movhi	r2,4227
  8419cc:	008420f4 	movhi	r2,4227
  8419d0:	008420f4 	movhi	r2,4227
  8419d4:	008420f4 	movhi	r2,4227
  8419d8:	008420f4 	movhi	r2,4227
  8419dc:	008421ec 	andhi	r2,zero,4231
  8419e0:	008420f4 	movhi	r2,4227
  8419e4:	008420f4 	movhi	r2,4227
  8419e8:	008420f4 	movhi	r2,4227
  8419ec:	008420f4 	movhi	r2,4227
  8419f0:	008420f4 	movhi	r2,4227
  8419f4:	00842178 	rdprs	r2,zero,4229
  8419f8:	008420f4 	movhi	r2,4227
  8419fc:	008420f4 	movhi	r2,4227
  841a00:	00841e78 	rdprs	r2,zero,4217
  841a04:	008420f4 	movhi	r2,4227
  841a08:	008420f4 	movhi	r2,4227
  841a0c:	008420f4 	movhi	r2,4227
  841a10:	008420f4 	movhi	r2,4227
  841a14:	008420f4 	movhi	r2,4227
  841a18:	008420f4 	movhi	r2,4227
  841a1c:	008420f4 	movhi	r2,4227
  841a20:	008420f4 	movhi	r2,4227
  841a24:	008420f4 	movhi	r2,4227
  841a28:	008420f4 	movhi	r2,4227
  841a2c:	00841d44 	movi	r2,4213
  841a30:	00841f28 	cmpgeui	r2,zero,4220
  841a34:	008420f4 	movhi	r2,4227
  841a38:	008420f4 	movhi	r2,4227
  841a3c:	008420f4 	movhi	r2,4227
  841a40:	00841f1c 	xori	r2,zero,4220
  841a44:	00841f28 	cmpgeui	r2,zero,4220
  841a48:	008420f4 	movhi	r2,4227
  841a4c:	008420f4 	movhi	r2,4227
  841a50:	00841f08 	cmpgei	r2,zero,4220
  841a54:	008420f4 	movhi	r2,4227
  841a58:	00841ec8 	cmpgei	r2,zero,4219
  841a5c:	00841c94 	movui	r2,4210
  841a60:	00841ab8 	rdprs	r2,zero,4202
  841a64:	00842030 	cmpltui	r2,zero,4224
  841a68:	008420f4 	movhi	r2,4227
  841a6c:	00841fdc 	xori	r2,zero,4223
  841a70:	008420f4 	movhi	r2,4227
  841a74:	00841bf8 	rdprs	r2,zero,4207
  841a78:	008420f4 	movhi	r2,4227
  841a7c:	008420f4 	movhi	r2,4227
  841a80:	00841b44 	movi	r2,4205
  841a84:	d9002417 	ldw	r4,144(sp)
  841a88:	d9402417 	ldw	r5,144(sp)
  841a8c:	21000017 	ldw	r4,0(r4)
  841a90:	28800104 	addi	r2,r5,4
  841a94:	d9002515 	stw	r4,148(sp)
  841a98:	20032b0e 	bge	r4,zero,842748 <___svfiprintf_internal_r+0xf7c>
  841a9c:	d8c02517 	ldw	r3,148(sp)
  841aa0:	d8802415 	stw	r2,144(sp)
  841aa4:	00c7c83a 	sub	r3,zero,r3
  841aa8:	d8c02515 	stw	r3,148(sp)
  841aac:	8c400114 	ori	r17,r17,4
  841ab0:	98c00007 	ldb	r3,0(r19)
  841ab4:	003f9106 	br	8418fc <__alt_mem_epcs_flash_controller_0+0xff8388fc>
  841ab8:	00800c04 	movi	r2,48
  841abc:	d9402417 	ldw	r5,144(sp)
  841ac0:	d9002017 	ldw	r4,128(sp)
  841ac4:	d8801d05 	stb	r2,116(sp)
  841ac8:	00801e04 	movi	r2,120
  841acc:	d8801d45 	stb	r2,117(sp)
  841ad0:	d8001d85 	stb	zero,118(sp)
  841ad4:	b811883a 	mov	r8,r23
  841ad8:	28c00104 	addi	r3,r5,4
  841adc:	2c800017 	ldw	r18,0(r5)
  841ae0:	0029883a 	mov	r20,zero
  841ae4:	88800094 	ori	r2,r17,2
  841ae8:	20036316 	blt	r4,zero,842878 <___svfiprintf_internal_r+0x10ac>
  841aec:	00bfdfc4 	movi	r2,-129
  841af0:	88a0703a 	and	r16,r17,r2
  841af4:	d8c02415 	stw	r3,144(sp)
  841af8:	84000094 	ori	r16,r16,2
  841afc:	90031c26 	beq	r18,zero,842770 <___svfiprintf_internal_r+0xfa4>
  841b00:	014021b4 	movhi	r5,134
  841b04:	2965fe04 	addi	r5,r5,-26632
  841b08:	002b883a 	mov	r21,zero
  841b0c:	d9402915 	stw	r5,164(sp)
  841b10:	00002906 	br	841bb8 <___svfiprintf_internal_r+0x3ec>
  841b14:	8c400054 	ori	r17,r17,1
  841b18:	98c00007 	ldb	r3,0(r19)
  841b1c:	003f7706 	br	8418fc <__alt_mem_epcs_flash_controller_0+0xff8388fc>
  841b20:	a8803fcc 	andi	r2,r21,255
  841b24:	1080201c 	xori	r2,r2,128
  841b28:	10bfe004 	addi	r2,r2,-128
  841b2c:	10032a1e 	bne	r2,zero,8427d8 <___svfiprintf_internal_r+0x100c>
  841b30:	00c00044 	movi	r3,1
  841b34:	d8c02105 	stb	r3,132(sp)
  841b38:	05400804 	movi	r21,32
  841b3c:	98c00007 	ldb	r3,0(r19)
  841b40:	003f6e06 	br	8418fc <__alt_mem_epcs_flash_controller_0+0xff8388fc>
  841b44:	8821883a 	mov	r16,r17
  841b48:	dc402103 	ldbu	r17,132(sp)
  841b4c:	b811883a 	mov	r8,r23
  841b50:	8c403fcc 	andi	r17,r17,255
  841b54:	8803f01e 	bne	r17,zero,842b18 <___svfiprintf_internal_r+0x134c>
  841b58:	008021b4 	movhi	r2,134
  841b5c:	10a5fe04 	addi	r2,r2,-26632
  841b60:	d8802915 	stw	r2,164(sp)
  841b64:	8080080c 	andi	r2,r16,32
  841b68:	1000cd26 	beq	r2,zero,841ea0 <___svfiprintf_internal_r+0x6d4>
  841b6c:	d9002417 	ldw	r4,144(sp)
  841b70:	24800017 	ldw	r18,0(r4)
  841b74:	25000117 	ldw	r20,4(r4)
  841b78:	21000204 	addi	r4,r4,8
  841b7c:	d9002415 	stw	r4,144(sp)
  841b80:	8080004c 	andi	r2,r16,1
  841b84:	1002c726 	beq	r2,zero,8426a4 <___svfiprintf_internal_r+0xed8>
  841b88:	9504b03a 	or	r2,r18,r20
  841b8c:	1003061e 	bne	r2,zero,8427a8 <___svfiprintf_internal_r+0xfdc>
  841b90:	d9002017 	ldw	r4,128(sp)
  841b94:	d8001d85 	stb	zero,118(sp)
  841b98:	20033e16 	blt	r4,zero,842894 <___svfiprintf_internal_r+0x10c8>
  841b9c:	00bfdfc4 	movi	r2,-129
  841ba0:	80a0703a 	and	r16,r16,r2
  841ba4:	d9402017 	ldw	r5,128(sp)
  841ba8:	002b883a 	mov	r21,zero
  841bac:	28002826 	beq	r5,zero,841c50 <___svfiprintf_internal_r+0x484>
  841bb0:	0025883a 	mov	r18,zero
  841bb4:	0029883a 	mov	r20,zero
  841bb8:	d9002917 	ldw	r4,164(sp)
  841bbc:	dc401a04 	addi	r17,sp,104
  841bc0:	908003cc 	andi	r2,r18,15
  841bc4:	a006973a 	slli	r3,r20,28
  841bc8:	2085883a 	add	r2,r4,r2
  841bcc:	9024d13a 	srli	r18,r18,4
  841bd0:	10800003 	ldbu	r2,0(r2)
  841bd4:	a028d13a 	srli	r20,r20,4
  841bd8:	8c7fffc4 	addi	r17,r17,-1
  841bdc:	1ca4b03a 	or	r18,r3,r18
  841be0:	88800005 	stb	r2,0(r17)
  841be4:	9504b03a 	or	r2,r18,r20
  841be8:	103ff51e 	bne	r2,zero,841bc0 <__alt_mem_epcs_flash_controller_0+0xff838bc0>
  841bec:	d8801e17 	ldw	r2,120(sp)
  841bf0:	1469c83a 	sub	r20,r2,r17
  841bf4:	00001906 	br	841c5c <___svfiprintf_internal_r+0x490>
  841bf8:	8821883a 	mov	r16,r17
  841bfc:	dc402103 	ldbu	r17,132(sp)
  841c00:	b811883a 	mov	r8,r23
  841c04:	8c403fcc 	andi	r17,r17,255
  841c08:	8803d01e 	bne	r17,zero,842b4c <___svfiprintf_internal_r+0x1380>
  841c0c:	8080080c 	andi	r2,r16,32
  841c10:	10016126 	beq	r2,zero,842198 <___svfiprintf_internal_r+0x9cc>
  841c14:	d9002417 	ldw	r4,144(sp)
  841c18:	d9402017 	ldw	r5,128(sp)
  841c1c:	d8001d85 	stb	zero,118(sp)
  841c20:	20c00204 	addi	r3,r4,8
  841c24:	24800017 	ldw	r18,0(r4)
  841c28:	25000117 	ldw	r20,4(r4)
  841c2c:	28030f16 	blt	r5,zero,84286c <___svfiprintf_internal_r+0x10a0>
  841c30:	013fdfc4 	movi	r4,-129
  841c34:	9504b03a 	or	r2,r18,r20
  841c38:	d8c02415 	stw	r3,144(sp)
  841c3c:	8120703a 	and	r16,r16,r4
  841c40:	002b883a 	mov	r21,zero
  841c44:	1000cd1e 	bne	r2,zero,841f7c <___svfiprintf_internal_r+0x7b0>
  841c48:	d8c02017 	ldw	r3,128(sp)
  841c4c:	1803141e 	bne	r3,zero,8428a0 <___svfiprintf_internal_r+0x10d4>
  841c50:	d8002015 	stw	zero,128(sp)
  841c54:	0029883a 	mov	r20,zero
  841c58:	dc401a04 	addi	r17,sp,104
  841c5c:	dc802017 	ldw	r18,128(sp)
  841c60:	9500010e 	bge	r18,r20,841c68 <___svfiprintf_internal_r+0x49c>
  841c64:	a025883a 	mov	r18,r20
  841c68:	ad403fcc 	andi	r21,r21,255
  841c6c:	ad40201c 	xori	r21,r21,128
  841c70:	ad7fe004 	addi	r21,r21,-128
  841c74:	a8003f26 	beq	r21,zero,841d74 <___svfiprintf_internal_r+0x5a8>
  841c78:	94800044 	addi	r18,r18,1
  841c7c:	00003d06 	br	841d74 <___svfiprintf_internal_r+0x5a8>
  841c80:	00c00044 	movi	r3,1
  841c84:	d8c02105 	stb	r3,132(sp)
  841c88:	05400ac4 	movi	r21,43
  841c8c:	98c00007 	ldb	r3,0(r19)
  841c90:	003f1a06 	br	8418fc <__alt_mem_epcs_flash_controller_0+0xff8388fc>
  841c94:	8821883a 	mov	r16,r17
  841c98:	dc402103 	ldbu	r17,132(sp)
  841c9c:	b811883a 	mov	r8,r23
  841ca0:	8c403fcc 	andi	r17,r17,255
  841ca4:	8803a71e 	bne	r17,zero,842b44 <___svfiprintf_internal_r+0x1378>
  841ca8:	8080080c 	andi	r2,r16,32
  841cac:	10015726 	beq	r2,zero,84220c <___svfiprintf_internal_r+0xa40>
  841cb0:	d8c02417 	ldw	r3,144(sp)
  841cb4:	d9002017 	ldw	r4,128(sp)
  841cb8:	d8001d85 	stb	zero,118(sp)
  841cbc:	18800204 	addi	r2,r3,8
  841cc0:	1c800017 	ldw	r18,0(r3)
  841cc4:	1d000117 	ldw	r20,4(r3)
  841cc8:	2002db16 	blt	r4,zero,842838 <___svfiprintf_internal_r+0x106c>
  841ccc:	013fdfc4 	movi	r4,-129
  841cd0:	9506b03a 	or	r3,r18,r20
  841cd4:	d8802415 	stw	r2,144(sp)
  841cd8:	8120703a 	and	r16,r16,r4
  841cdc:	18015826 	beq	r3,zero,842240 <___svfiprintf_internal_r+0xa74>
  841ce0:	002b883a 	mov	r21,zero
  841ce4:	dc401a04 	addi	r17,sp,104
  841ce8:	9006d0fa 	srli	r3,r18,3
  841cec:	a008977a 	slli	r4,r20,29
  841cf0:	a028d0fa 	srli	r20,r20,3
  841cf4:	948001cc 	andi	r18,r18,7
  841cf8:	90800c04 	addi	r2,r18,48
  841cfc:	8c7fffc4 	addi	r17,r17,-1
  841d00:	20e4b03a 	or	r18,r4,r3
  841d04:	88800005 	stb	r2,0(r17)
  841d08:	9506b03a 	or	r3,r18,r20
  841d0c:	183ff61e 	bne	r3,zero,841ce8 <__alt_mem_epcs_flash_controller_0+0xff838ce8>
  841d10:	80c0004c 	andi	r3,r16,1
  841d14:	18028926 	beq	r3,zero,84273c <___svfiprintf_internal_r+0xf70>
  841d18:	10803fcc 	andi	r2,r2,255
  841d1c:	1080201c 	xori	r2,r2,128
  841d20:	10bfe004 	addi	r2,r2,-128
  841d24:	00c00c04 	movi	r3,48
  841d28:	10ffb026 	beq	r2,r3,841bec <__alt_mem_epcs_flash_controller_0+0xff838bec>
  841d2c:	88ffffc5 	stb	r3,-1(r17)
  841d30:	d8c01e17 	ldw	r3,120(sp)
  841d34:	88bfffc4 	addi	r2,r17,-1
  841d38:	1023883a 	mov	r17,r2
  841d3c:	18a9c83a 	sub	r20,r3,r2
  841d40:	003fc606 	br	841c5c <__alt_mem_epcs_flash_controller_0+0xff838c5c>
  841d44:	d8c02417 	ldw	r3,144(sp)
  841d48:	04800044 	movi	r18,1
  841d4c:	8821883a 	mov	r16,r17
  841d50:	18800017 	ldw	r2,0(r3)
  841d54:	18c00104 	addi	r3,r3,4
  841d58:	b811883a 	mov	r8,r23
  841d5c:	d8001d85 	stb	zero,118(sp)
  841d60:	d8801005 	stb	r2,64(sp)
  841d64:	d8c02415 	stw	r3,144(sp)
  841d68:	9029883a 	mov	r20,r18
  841d6c:	dc401004 	addi	r17,sp,64
  841d70:	d8002015 	stw	zero,128(sp)
  841d74:	80c0008c 	andi	r3,r16,2
  841d78:	d8c02115 	stw	r3,132(sp)
  841d7c:	18000126 	beq	r3,zero,841d84 <___svfiprintf_internal_r+0x5b8>
  841d80:	94800084 	addi	r18,r18,2
  841d84:	80c0210c 	andi	r3,r16,132
  841d88:	d8c02215 	stw	r3,136(sp)
  841d8c:	1801321e 	bne	r3,zero,842258 <___svfiprintf_internal_r+0xa8c>
  841d90:	d9002517 	ldw	r4,148(sp)
  841d94:	24b9c83a 	sub	fp,r4,r18
  841d98:	07012f0e 	bge	zero,fp,842258 <___svfiprintf_internal_r+0xa8c>
  841d9c:	02400404 	movi	r9,16
  841da0:	d8c01c17 	ldw	r3,112(sp)
  841da4:	d8801b17 	ldw	r2,108(sp)
  841da8:	4f03250e 	bge	r9,fp,842a40 <___svfiprintf_internal_r+0x1274>
  841dac:	010021b4 	movhi	r4,134
  841db0:	21272d04 	addi	r4,r4,-25420
  841db4:	dc002a15 	stw	r16,168(sp)
  841db8:	dc402b15 	stw	r17,172(sp)
  841dbc:	d9002815 	stw	r4,160(sp)
  841dc0:	e023883a 	mov	r17,fp
  841dc4:	482f883a 	mov	r23,r9
  841dc8:	9839883a 	mov	fp,r19
  841dcc:	054001c4 	movi	r21,7
  841dd0:	9027883a 	mov	r19,r18
  841dd4:	dc002717 	ldw	r16,156(sp)
  841dd8:	dc802317 	ldw	r18,140(sp)
  841ddc:	00000306 	br	841dec <___svfiprintf_internal_r+0x620>
  841de0:	8c7ffc04 	addi	r17,r17,-16
  841de4:	42000204 	addi	r8,r8,8
  841de8:	bc40130e 	bge	r23,r17,841e38 <___svfiprintf_internal_r+0x66c>
  841dec:	014021b4 	movhi	r5,134
  841df0:	18c00404 	addi	r3,r3,16
  841df4:	10800044 	addi	r2,r2,1
  841df8:	29672d04 	addi	r5,r5,-25420
  841dfc:	41400015 	stw	r5,0(r8)
  841e00:	45c00115 	stw	r23,4(r8)
  841e04:	d8c01c15 	stw	r3,112(sp)
  841e08:	d8801b15 	stw	r2,108(sp)
  841e0c:	a8bff40e 	bge	r21,r2,841de0 <__alt_mem_epcs_flash_controller_0+0xff838de0>
  841e10:	d9801a04 	addi	r6,sp,104
  841e14:	900b883a 	mov	r5,r18
  841e18:	8009883a 	mov	r4,r16
  841e1c:	08415fc0 	call	8415fc <__ssprint_r>
  841e20:	1001aa1e 	bne	r2,zero,8424cc <___svfiprintf_internal_r+0xd00>
  841e24:	8c7ffc04 	addi	r17,r17,-16
  841e28:	d8c01c17 	ldw	r3,112(sp)
  841e2c:	d8801b17 	ldw	r2,108(sp)
  841e30:	d811883a 	mov	r8,sp
  841e34:	bc7fed16 	blt	r23,r17,841dec <__alt_mem_epcs_flash_controller_0+0xff838dec>
  841e38:	9825883a 	mov	r18,r19
  841e3c:	dc002a17 	ldw	r16,168(sp)
  841e40:	e027883a 	mov	r19,fp
  841e44:	8839883a 	mov	fp,r17
  841e48:	dc402b17 	ldw	r17,172(sp)
  841e4c:	d9002817 	ldw	r4,160(sp)
  841e50:	e0c7883a 	add	r3,fp,r3
  841e54:	10800044 	addi	r2,r2,1
  841e58:	41000015 	stw	r4,0(r8)
  841e5c:	47000115 	stw	fp,4(r8)
  841e60:	d8c01c15 	stw	r3,112(sp)
  841e64:	d8801b15 	stw	r2,108(sp)
  841e68:	010001c4 	movi	r4,7
  841e6c:	20821616 	blt	r4,r2,8426c8 <___svfiprintf_internal_r+0xefc>
  841e70:	42000204 	addi	r8,r8,8
  841e74:	0000fa06 	br	842260 <___svfiprintf_internal_r+0xa94>
  841e78:	8821883a 	mov	r16,r17
  841e7c:	dc402103 	ldbu	r17,132(sp)
  841e80:	b811883a 	mov	r8,r23
  841e84:	8c403fcc 	andi	r17,r17,255
  841e88:	8803361e 	bne	r17,zero,842b64 <___svfiprintf_internal_r+0x1398>
  841e8c:	014021b4 	movhi	r5,134
  841e90:	2965f904 	addi	r5,r5,-26652
  841e94:	d9402915 	stw	r5,164(sp)
  841e98:	8080080c 	andi	r2,r16,32
  841e9c:	103f331e 	bne	r2,zero,841b6c <__alt_mem_epcs_flash_controller_0+0xff838b6c>
  841ea0:	8080040c 	andi	r2,r16,16
  841ea4:	1002551e 	bne	r2,zero,8427fc <___svfiprintf_internal_r+0x1030>
  841ea8:	8080100c 	andi	r2,r16,64
  841eac:	1002a626 	beq	r2,zero,842948 <___svfiprintf_internal_r+0x117c>
  841eb0:	d8802417 	ldw	r2,144(sp)
  841eb4:	0029883a 	mov	r20,zero
  841eb8:	1480000b 	ldhu	r18,0(r2)
  841ebc:	10800104 	addi	r2,r2,4
  841ec0:	d8802415 	stw	r2,144(sp)
  841ec4:	003f2e06 	br	841b80 <__alt_mem_epcs_flash_controller_0+0xff838b80>
  841ec8:	8821883a 	mov	r16,r17
  841ecc:	dc402103 	ldbu	r17,132(sp)
  841ed0:	b811883a 	mov	r8,r23
  841ed4:	8c403fcc 	andi	r17,r17,255
  841ed8:	88030b1e 	bne	r17,zero,842b08 <___svfiprintf_internal_r+0x133c>
  841edc:	8080080c 	andi	r2,r16,32
  841ee0:	1002271e 	bne	r2,zero,842780 <___svfiprintf_internal_r+0xfb4>
  841ee4:	8080040c 	andi	r2,r16,16
  841ee8:	10028e26 	beq	r2,zero,842924 <___svfiprintf_internal_r+0x1158>
  841eec:	d8c02417 	ldw	r3,144(sp)
  841ef0:	d9002617 	ldw	r4,152(sp)
  841ef4:	18800017 	ldw	r2,0(r3)
  841ef8:	18c00104 	addi	r3,r3,4
  841efc:	d8c02415 	stw	r3,144(sp)
  841f00:	11000015 	stw	r4,0(r2)
  841f04:	003e5306 	br	841854 <__alt_mem_epcs_flash_controller_0+0xff838854>
  841f08:	98c00007 	ldb	r3,0(r19)
  841f0c:	01401b04 	movi	r5,108
  841f10:	19424f26 	beq	r3,r5,842850 <___svfiprintf_internal_r+0x1084>
  841f14:	8c400414 	ori	r17,r17,16
  841f18:	003e7806 	br	8418fc <__alt_mem_epcs_flash_controller_0+0xff8388fc>
  841f1c:	8c401014 	ori	r17,r17,64
  841f20:	98c00007 	ldb	r3,0(r19)
  841f24:	003e7506 	br	8418fc <__alt_mem_epcs_flash_controller_0+0xff8388fc>
  841f28:	8821883a 	mov	r16,r17
  841f2c:	dc402103 	ldbu	r17,132(sp)
  841f30:	b811883a 	mov	r8,r23
  841f34:	8c403fcc 	andi	r17,r17,255
  841f38:	8802fe1e 	bne	r17,zero,842b34 <___svfiprintf_internal_r+0x1368>
  841f3c:	8080080c 	andi	r2,r16,32
  841f40:	10004626 	beq	r2,zero,84205c <___svfiprintf_internal_r+0x890>
  841f44:	d9002417 	ldw	r4,144(sp)
  841f48:	20800117 	ldw	r2,4(r4)
  841f4c:	24800017 	ldw	r18,0(r4)
  841f50:	21000204 	addi	r4,r4,8
  841f54:	d9002415 	stw	r4,144(sp)
  841f58:	1029883a 	mov	r20,r2
  841f5c:	10004a16 	blt	r2,zero,842088 <___svfiprintf_internal_r+0x8bc>
  841f60:	d9002017 	ldw	r4,128(sp)
  841f64:	dd401d83 	ldbu	r21,118(sp)
  841f68:	2001eb16 	blt	r4,zero,842718 <___svfiprintf_internal_r+0xf4c>
  841f6c:	00ffdfc4 	movi	r3,-129
  841f70:	9504b03a 	or	r2,r18,r20
  841f74:	80e0703a 	and	r16,r16,r3
  841f78:	103f3326 	beq	r2,zero,841c48 <__alt_mem_epcs_flash_controller_0+0xff838c48>
  841f7c:	a0009426 	beq	r20,zero,8421d0 <___svfiprintf_internal_r+0xa04>
  841f80:	dc401a04 	addi	r17,sp,104
  841f84:	402f883a 	mov	r23,r8
  841f88:	9009883a 	mov	r4,r18
  841f8c:	a00b883a 	mov	r5,r20
  841f90:	01800284 	movi	r6,10
  841f94:	000f883a 	mov	r7,zero
  841f98:	084714c0 	call	84714c <__umoddi3>
  841f9c:	10800c04 	addi	r2,r2,48
  841fa0:	8c7fffc4 	addi	r17,r17,-1
  841fa4:	9009883a 	mov	r4,r18
  841fa8:	a00b883a 	mov	r5,r20
  841fac:	88800005 	stb	r2,0(r17)
  841fb0:	01800284 	movi	r6,10
  841fb4:	000f883a 	mov	r7,zero
  841fb8:	0846b500 	call	846b50 <__udivdi3>
  841fbc:	1025883a 	mov	r18,r2
  841fc0:	10c4b03a 	or	r2,r2,r3
  841fc4:	1829883a 	mov	r20,r3
  841fc8:	103fef1e 	bne	r2,zero,841f88 <__alt_mem_epcs_flash_controller_0+0xff838f88>
  841fcc:	d9001e17 	ldw	r4,120(sp)
  841fd0:	b811883a 	mov	r8,r23
  841fd4:	2469c83a 	sub	r20,r4,r17
  841fd8:	003f2006 	br	841c5c <__alt_mem_epcs_flash_controller_0+0xff838c5c>
  841fdc:	d8802417 	ldw	r2,144(sp)
  841fe0:	8821883a 	mov	r16,r17
  841fe4:	d8001d85 	stb	zero,118(sp)
  841fe8:	14400017 	ldw	r17,0(r2)
  841fec:	b811883a 	mov	r8,r23
  841ff0:	15c00104 	addi	r23,r2,4
  841ff4:	88026c26 	beq	r17,zero,8429a8 <___svfiprintf_internal_r+0x11dc>
  841ff8:	d8c02017 	ldw	r3,128(sp)
  841ffc:	18025f16 	blt	r3,zero,84297c <___svfiprintf_internal_r+0x11b0>
  842000:	180d883a 	mov	r6,r3
  842004:	000b883a 	mov	r5,zero
  842008:	8809883a 	mov	r4,r17
  84200c:	da002d15 	stw	r8,180(sp)
  842010:	0833b680 	call	833b68 <memchr>
  842014:	da002d17 	ldw	r8,180(sp)
  842018:	1002a526 	beq	r2,zero,842ab0 <___svfiprintf_internal_r+0x12e4>
  84201c:	1469c83a 	sub	r20,r2,r17
  842020:	dd401d83 	ldbu	r21,118(sp)
  842024:	ddc02415 	stw	r23,144(sp)
  842028:	d8002015 	stw	zero,128(sp)
  84202c:	003f0b06 	br	841c5c <__alt_mem_epcs_flash_controller_0+0xff838c5c>
  842030:	8c400814 	ori	r17,r17,32
  842034:	98c00007 	ldb	r3,0(r19)
  842038:	003e3006 	br	8418fc <__alt_mem_epcs_flash_controller_0+0xff8388fc>
  84203c:	8821883a 	mov	r16,r17
  842040:	dc402103 	ldbu	r17,132(sp)
  842044:	b811883a 	mov	r8,r23
  842048:	8c403fcc 	andi	r17,r17,255
  84204c:	8802b01e 	bne	r17,zero,842b10 <___svfiprintf_internal_r+0x1344>
  842050:	84000414 	ori	r16,r16,16
  842054:	8080080c 	andi	r2,r16,32
  842058:	103fba1e 	bne	r2,zero,841f44 <__alt_mem_epcs_flash_controller_0+0xff838f44>
  84205c:	8080040c 	andi	r2,r16,16
  842060:	1001df1e 	bne	r2,zero,8427e0 <___svfiprintf_internal_r+0x1014>
  842064:	8080100c 	andi	r2,r16,64
  842068:	10023d26 	beq	r2,zero,842960 <___svfiprintf_internal_r+0x1194>
  84206c:	d8802417 	ldw	r2,144(sp)
  842070:	1480000f 	ldh	r18,0(r2)
  842074:	10800104 	addi	r2,r2,4
  842078:	d8802415 	stw	r2,144(sp)
  84207c:	9029d7fa 	srai	r20,r18,31
  842080:	a005883a 	mov	r2,r20
  842084:	103fb60e 	bge	r2,zero,841f60 <__alt_mem_epcs_flash_controller_0+0xff838f60>
  842088:	d9402017 	ldw	r5,128(sp)
  84208c:	04a5c83a 	sub	r18,zero,r18
  842090:	05400b44 	movi	r21,45
  842094:	9004c03a 	cmpne	r2,r18,zero
  842098:	0529c83a 	sub	r20,zero,r20
  84209c:	dd401d85 	stb	r21,118(sp)
  8420a0:	a0a9c83a 	sub	r20,r20,r2
  8420a4:	28026c16 	blt	r5,zero,842a58 <___svfiprintf_internal_r+0x128c>
  8420a8:	00bfdfc4 	movi	r2,-129
  8420ac:	80a0703a 	and	r16,r16,r2
  8420b0:	a03fb31e 	bne	r20,zero,841f80 <__alt_mem_epcs_flash_controller_0+0xff838f80>
  8420b4:	00004606 	br	8421d0 <___svfiprintf_internal_r+0xa04>
  8420b8:	9839883a 	mov	fp,r19
  8420bc:	d8002515 	stw	zero,148(sp)
  8420c0:	1c3ff404 	addi	r16,r3,-48
  8420c4:	0009883a 	mov	r4,zero
  8420c8:	01400284 	movi	r5,10
  8420cc:	08301e80 	call	8301e8 <__mulsi3>
  8420d0:	e0c00007 	ldb	r3,0(fp)
  8420d4:	8089883a 	add	r4,r16,r2
  8420d8:	9cc00044 	addi	r19,r19,1
  8420dc:	1c3ff404 	addi	r16,r3,-48
  8420e0:	9839883a 	mov	fp,r19
  8420e4:	a43ff82e 	bgeu	r20,r16,8420c8 <__alt_mem_epcs_flash_controller_0+0xff8390c8>
  8420e8:	d9002515 	stw	r4,148(sp)
  8420ec:	18bff804 	addi	r2,r3,-32
  8420f0:	90be052e 	bgeu	r18,r2,841908 <__alt_mem_epcs_flash_controller_0+0xff838908>
  8420f4:	8821883a 	mov	r16,r17
  8420f8:	dc402103 	ldbu	r17,132(sp)
  8420fc:	b811883a 	mov	r8,r23
  842100:	8c403fcc 	andi	r17,r17,255
  842104:	88028d1e 	bne	r17,zero,842b3c <___svfiprintf_internal_r+0x1370>
  842108:	1800ea26 	beq	r3,zero,8424b4 <___svfiprintf_internal_r+0xce8>
  84210c:	04800044 	movi	r18,1
  842110:	d8c01005 	stb	r3,64(sp)
  842114:	d8001d85 	stb	zero,118(sp)
  842118:	9029883a 	mov	r20,r18
  84211c:	dc401004 	addi	r17,sp,64
  842120:	003f1306 	br	841d70 <__alt_mem_epcs_flash_controller_0+0xff838d70>
  842124:	8c402014 	ori	r17,r17,128
  842128:	98c00007 	ldb	r3,0(r19)
  84212c:	003df306 	br	8418fc <__alt_mem_epcs_flash_controller_0+0xff8388fc>
  842130:	98c00007 	ldb	r3,0(r19)
  842134:	01000a84 	movi	r4,42
  842138:	9f000044 	addi	fp,r19,1
  84213c:	19026326 	beq	r3,r4,842acc <___svfiprintf_internal_r+0x1300>
  842140:	1c3ff404 	addi	r16,r3,-48
  842144:	0009883a 	mov	r4,zero
  842148:	a4025636 	bltu	r20,r16,842aa4 <___svfiprintf_internal_r+0x12d8>
  84214c:	01400284 	movi	r5,10
  842150:	08301e80 	call	8301e8 <__mulsi3>
  842154:	e0c00007 	ldb	r3,0(fp)
  842158:	1409883a 	add	r4,r2,r16
  84215c:	e4c00044 	addi	r19,fp,1
  842160:	1c3ff404 	addi	r16,r3,-48
  842164:	9839883a 	mov	fp,r19
  842168:	a43ff82e 	bgeu	r20,r16,84214c <__alt_mem_epcs_flash_controller_0+0xff83914c>
  84216c:	20020c16 	blt	r4,zero,8429a0 <___svfiprintf_internal_r+0x11d4>
  842170:	d9002015 	stw	r4,128(sp)
  842174:	003de206 	br	841900 <__alt_mem_epcs_flash_controller_0+0xff838900>
  842178:	8821883a 	mov	r16,r17
  84217c:	dc402103 	ldbu	r17,132(sp)
  842180:	b811883a 	mov	r8,r23
  842184:	8c403fcc 	andi	r17,r17,255
  842188:	8802721e 	bne	r17,zero,842b54 <___svfiprintf_internal_r+0x1388>
  84218c:	84000414 	ori	r16,r16,16
  842190:	8080080c 	andi	r2,r16,32
  842194:	103e9f1e 	bne	r2,zero,841c14 <__alt_mem_epcs_flash_controller_0+0xff838c14>
  842198:	8080040c 	andi	r2,r16,16
  84219c:	10015326 	beq	r2,zero,8426ec <___svfiprintf_internal_r+0xf20>
  8421a0:	d8c02417 	ldw	r3,144(sp)
  8421a4:	d9002017 	ldw	r4,128(sp)
  8421a8:	d8001d85 	stb	zero,118(sp)
  8421ac:	18800104 	addi	r2,r3,4
  8421b0:	1c800017 	ldw	r18,0(r3)
  8421b4:	0029883a 	mov	r20,zero
  8421b8:	20015516 	blt	r4,zero,842710 <___svfiprintf_internal_r+0xf44>
  8421bc:	00ffdfc4 	movi	r3,-129
  8421c0:	d8802415 	stw	r2,144(sp)
  8421c4:	80e0703a 	and	r16,r16,r3
  8421c8:	002b883a 	mov	r21,zero
  8421cc:	903e9e26 	beq	r18,zero,841c48 <__alt_mem_epcs_flash_controller_0+0xff838c48>
  8421d0:	00800244 	movi	r2,9
  8421d4:	14bf6a36 	bltu	r2,r18,841f80 <__alt_mem_epcs_flash_controller_0+0xff838f80>
  8421d8:	94800c04 	addi	r18,r18,48
  8421dc:	dc8019c5 	stb	r18,103(sp)
  8421e0:	dd002c17 	ldw	r20,176(sp)
  8421e4:	dc4019c4 	addi	r17,sp,103
  8421e8:	003e9c06 	br	841c5c <__alt_mem_epcs_flash_controller_0+0xff838c5c>
  8421ec:	8821883a 	mov	r16,r17
  8421f0:	dc402103 	ldbu	r17,132(sp)
  8421f4:	b811883a 	mov	r8,r23
  8421f8:	8c403fcc 	andi	r17,r17,255
  8421fc:	8802571e 	bne	r17,zero,842b5c <___svfiprintf_internal_r+0x1390>
  842200:	84000414 	ori	r16,r16,16
  842204:	8080080c 	andi	r2,r16,32
  842208:	103ea91e 	bne	r2,zero,841cb0 <__alt_mem_epcs_flash_controller_0+0xff838cb0>
  84220c:	8080040c 	andi	r2,r16,16
  842210:	10018026 	beq	r2,zero,842814 <___svfiprintf_internal_r+0x1048>
  842214:	d9402417 	ldw	r5,144(sp)
  842218:	d8c02017 	ldw	r3,128(sp)
  84221c:	d8001d85 	stb	zero,118(sp)
  842220:	28800104 	addi	r2,r5,4
  842224:	2c800017 	ldw	r18,0(r5)
  842228:	0029883a 	mov	r20,zero
  84222c:	18018216 	blt	r3,zero,842838 <___svfiprintf_internal_r+0x106c>
  842230:	00ffdfc4 	movi	r3,-129
  842234:	d8802415 	stw	r2,144(sp)
  842238:	80e0703a 	and	r16,r16,r3
  84223c:	903ea81e 	bne	r18,zero,841ce0 <__alt_mem_epcs_flash_controller_0+0xff838ce0>
  842240:	d8802017 	ldw	r2,128(sp)
  842244:	002b883a 	mov	r21,zero
  842248:	1001f226 	beq	r2,zero,842a14 <___svfiprintf_internal_r+0x1248>
  84224c:	0025883a 	mov	r18,zero
  842250:	0029883a 	mov	r20,zero
  842254:	003ea306 	br	841ce4 <__alt_mem_epcs_flash_controller_0+0xff838ce4>
  842258:	d8c01c17 	ldw	r3,112(sp)
  84225c:	d8801b17 	ldw	r2,108(sp)
  842260:	d9001d87 	ldb	r4,118(sp)
  842264:	20000b26 	beq	r4,zero,842294 <___svfiprintf_internal_r+0xac8>
  842268:	d9001d84 	addi	r4,sp,118
  84226c:	18c00044 	addi	r3,r3,1
  842270:	10800044 	addi	r2,r2,1
  842274:	41000015 	stw	r4,0(r8)
  842278:	01000044 	movi	r4,1
  84227c:	41000115 	stw	r4,4(r8)
  842280:	d8c01c15 	stw	r3,112(sp)
  842284:	d8801b15 	stw	r2,108(sp)
  842288:	010001c4 	movi	r4,7
  84228c:	2080f316 	blt	r4,r2,84265c <___svfiprintf_internal_r+0xe90>
  842290:	42000204 	addi	r8,r8,8
  842294:	d9402117 	ldw	r5,132(sp)
  842298:	28000b26 	beq	r5,zero,8422c8 <___svfiprintf_internal_r+0xafc>
  84229c:	d9001d04 	addi	r4,sp,116
  8422a0:	18c00084 	addi	r3,r3,2
  8422a4:	10800044 	addi	r2,r2,1
  8422a8:	41000015 	stw	r4,0(r8)
  8422ac:	01000084 	movi	r4,2
  8422b0:	41000115 	stw	r4,4(r8)
  8422b4:	d8c01c15 	stw	r3,112(sp)
  8422b8:	d8801b15 	stw	r2,108(sp)
  8422bc:	010001c4 	movi	r4,7
  8422c0:	2080ef16 	blt	r4,r2,842680 <___svfiprintf_internal_r+0xeb4>
  8422c4:	42000204 	addi	r8,r8,8
  8422c8:	d9402217 	ldw	r5,136(sp)
  8422cc:	01002004 	movi	r4,128
  8422d0:	29008f26 	beq	r5,r4,842510 <___svfiprintf_internal_r+0xd44>
  8422d4:	d9002017 	ldw	r4,128(sp)
  8422d8:	252fc83a 	sub	r23,r4,r20
  8422dc:	05c0310e 	bge	zero,r23,8423a4 <___svfiprintf_internal_r+0xbd8>
  8422e0:	07000404 	movi	fp,16
  8422e4:	e5c17d0e 	bge	fp,r23,8428dc <___svfiprintf_internal_r+0x1110>
  8422e8:	010021b4 	movhi	r4,134
  8422ec:	21272904 	addi	r4,r4,-25436
  8422f0:	dc002015 	stw	r16,128(sp)
  8422f4:	dc402215 	stw	r17,136(sp)
  8422f8:	d9002115 	stw	r4,132(sp)
  8422fc:	b823883a 	mov	r17,r23
  842300:	054001c4 	movi	r21,7
  842304:	982f883a 	mov	r23,r19
  842308:	dc002717 	ldw	r16,156(sp)
  84230c:	9027883a 	mov	r19,r18
  842310:	dc802317 	ldw	r18,140(sp)
  842314:	00000306 	br	842324 <___svfiprintf_internal_r+0xb58>
  842318:	8c7ffc04 	addi	r17,r17,-16
  84231c:	42000204 	addi	r8,r8,8
  842320:	e440110e 	bge	fp,r17,842368 <___svfiprintf_internal_r+0xb9c>
  842324:	18c00404 	addi	r3,r3,16
  842328:	10800044 	addi	r2,r2,1
  84232c:	45800015 	stw	r22,0(r8)
  842330:	47000115 	stw	fp,4(r8)
  842334:	d8c01c15 	stw	r3,112(sp)
  842338:	d8801b15 	stw	r2,108(sp)
  84233c:	a8bff60e 	bge	r21,r2,842318 <__alt_mem_epcs_flash_controller_0+0xff839318>
  842340:	d9801a04 	addi	r6,sp,104
  842344:	900b883a 	mov	r5,r18
  842348:	8009883a 	mov	r4,r16
  84234c:	08415fc0 	call	8415fc <__ssprint_r>
  842350:	10005e1e 	bne	r2,zero,8424cc <___svfiprintf_internal_r+0xd00>
  842354:	8c7ffc04 	addi	r17,r17,-16
  842358:	d8c01c17 	ldw	r3,112(sp)
  84235c:	d8801b17 	ldw	r2,108(sp)
  842360:	d811883a 	mov	r8,sp
  842364:	e47fef16 	blt	fp,r17,842324 <__alt_mem_epcs_flash_controller_0+0xff839324>
  842368:	9825883a 	mov	r18,r19
  84236c:	dc002017 	ldw	r16,128(sp)
  842370:	b827883a 	mov	r19,r23
  842374:	882f883a 	mov	r23,r17
  842378:	dc402217 	ldw	r17,136(sp)
  84237c:	d9402117 	ldw	r5,132(sp)
  842380:	1dc7883a 	add	r3,r3,r23
  842384:	10800044 	addi	r2,r2,1
  842388:	41400015 	stw	r5,0(r8)
  84238c:	45c00115 	stw	r23,4(r8)
  842390:	d8c01c15 	stw	r3,112(sp)
  842394:	d8801b15 	stw	r2,108(sp)
  842398:	010001c4 	movi	r4,7
  84239c:	2080a616 	blt	r4,r2,842638 <___svfiprintf_internal_r+0xe6c>
  8423a0:	42000204 	addi	r8,r8,8
  8423a4:	a0c7883a 	add	r3,r20,r3
  8423a8:	10800044 	addi	r2,r2,1
  8423ac:	44400015 	stw	r17,0(r8)
  8423b0:	45000115 	stw	r20,4(r8)
  8423b4:	d8c01c15 	stw	r3,112(sp)
  8423b8:	d8801b15 	stw	r2,108(sp)
  8423bc:	010001c4 	movi	r4,7
  8423c0:	20808816 	blt	r4,r2,8425e4 <___svfiprintf_internal_r+0xe18>
  8423c4:	42000204 	addi	r8,r8,8
  8423c8:	8400010c 	andi	r16,r16,4
  8423cc:	80002c26 	beq	r16,zero,842480 <___svfiprintf_internal_r+0xcb4>
  8423d0:	d8802517 	ldw	r2,148(sp)
  8423d4:	14a1c83a 	sub	r16,r2,r18
  8423d8:	0400290e 	bge	zero,r16,842480 <___svfiprintf_internal_r+0xcb4>
  8423dc:	04400404 	movi	r17,16
  8423e0:	d8801b17 	ldw	r2,108(sp)
  8423e4:	8c01a70e 	bge	r17,r16,842a84 <___svfiprintf_internal_r+0x12b8>
  8423e8:	014021b4 	movhi	r5,134
  8423ec:	29672d04 	addi	r5,r5,-25420
  8423f0:	d9402815 	stw	r5,160(sp)
  8423f4:	050001c4 	movi	r20,7
  8423f8:	dd402717 	ldw	r21,156(sp)
  8423fc:	ddc02317 	ldw	r23,140(sp)
  842400:	00000306 	br	842410 <___svfiprintf_internal_r+0xc44>
  842404:	843ffc04 	addi	r16,r16,-16
  842408:	42000204 	addi	r8,r8,8
  84240c:	8c00130e 	bge	r17,r16,84245c <___svfiprintf_internal_r+0xc90>
  842410:	010021b4 	movhi	r4,134
  842414:	18c00404 	addi	r3,r3,16
  842418:	10800044 	addi	r2,r2,1
  84241c:	21272d04 	addi	r4,r4,-25420
  842420:	41000015 	stw	r4,0(r8)
  842424:	44400115 	stw	r17,4(r8)
  842428:	d8c01c15 	stw	r3,112(sp)
  84242c:	d8801b15 	stw	r2,108(sp)
  842430:	a0bff40e 	bge	r20,r2,842404 <__alt_mem_epcs_flash_controller_0+0xff839404>
  842434:	d9801a04 	addi	r6,sp,104
  842438:	b80b883a 	mov	r5,r23
  84243c:	a809883a 	mov	r4,r21
  842440:	08415fc0 	call	8415fc <__ssprint_r>
  842444:	1000211e 	bne	r2,zero,8424cc <___svfiprintf_internal_r+0xd00>
  842448:	843ffc04 	addi	r16,r16,-16
  84244c:	d8c01c17 	ldw	r3,112(sp)
  842450:	d8801b17 	ldw	r2,108(sp)
  842454:	d811883a 	mov	r8,sp
  842458:	8c3fed16 	blt	r17,r16,842410 <__alt_mem_epcs_flash_controller_0+0xff839410>
  84245c:	d9402817 	ldw	r5,160(sp)
  842460:	1c07883a 	add	r3,r3,r16
  842464:	10800044 	addi	r2,r2,1
  842468:	41400015 	stw	r5,0(r8)
  84246c:	44000115 	stw	r16,4(r8)
  842470:	d8c01c15 	stw	r3,112(sp)
  842474:	d8801b15 	stw	r2,108(sp)
  842478:	010001c4 	movi	r4,7
  84247c:	2080b516 	blt	r4,r2,842754 <___svfiprintf_internal_r+0xf88>
  842480:	d8802517 	ldw	r2,148(sp)
  842484:	1480010e 	bge	r2,r18,84248c <___svfiprintf_internal_r+0xcc0>
  842488:	9005883a 	mov	r2,r18
  84248c:	d9002617 	ldw	r4,152(sp)
  842490:	2089883a 	add	r4,r4,r2
  842494:	d9002615 	stw	r4,152(sp)
  842498:	18005a1e 	bne	r3,zero,842604 <___svfiprintf_internal_r+0xe38>
  84249c:	98800007 	ldb	r2,0(r19)
  8424a0:	d8001b15 	stw	zero,108(sp)
  8424a4:	d811883a 	mov	r8,sp
  8424a8:	103cec1e 	bne	r2,zero,84185c <__alt_mem_epcs_flash_controller_0+0xff83885c>
  8424ac:	9825883a 	mov	r18,r19
  8424b0:	003d0206 	br	8418bc <__alt_mem_epcs_flash_controller_0+0xff8388bc>
  8424b4:	d8801c17 	ldw	r2,112(sp)
  8424b8:	10000426 	beq	r2,zero,8424cc <___svfiprintf_internal_r+0xd00>
  8424bc:	d9402317 	ldw	r5,140(sp)
  8424c0:	d9002717 	ldw	r4,156(sp)
  8424c4:	d9801a04 	addi	r6,sp,104
  8424c8:	08415fc0 	call	8415fc <__ssprint_r>
  8424cc:	d9402317 	ldw	r5,140(sp)
  8424d0:	d8802617 	ldw	r2,152(sp)
  8424d4:	28c0030b 	ldhu	r3,12(r5)
  8424d8:	18c0100c 	andi	r3,r3,64
  8424dc:	18015c1e 	bne	r3,zero,842a50 <___svfiprintf_internal_r+0x1284>
  8424e0:	dfc03717 	ldw	ra,220(sp)
  8424e4:	df003617 	ldw	fp,216(sp)
  8424e8:	ddc03517 	ldw	r23,212(sp)
  8424ec:	dd803417 	ldw	r22,208(sp)
  8424f0:	dd403317 	ldw	r21,204(sp)
  8424f4:	dd003217 	ldw	r20,200(sp)
  8424f8:	dcc03117 	ldw	r19,196(sp)
  8424fc:	dc803017 	ldw	r18,192(sp)
  842500:	dc402f17 	ldw	r17,188(sp)
  842504:	dc002e17 	ldw	r16,184(sp)
  842508:	dec03804 	addi	sp,sp,224
  84250c:	f800283a 	ret
  842510:	d9002517 	ldw	r4,148(sp)
  842514:	24afc83a 	sub	r23,r4,r18
  842518:	05ff6e0e 	bge	zero,r23,8422d4 <__alt_mem_epcs_flash_controller_0+0xff8392d4>
  84251c:	07000404 	movi	fp,16
  842520:	e5c15c0e 	bge	fp,r23,842a94 <___svfiprintf_internal_r+0x12c8>
  842524:	010021b4 	movhi	r4,134
  842528:	21272904 	addi	r4,r4,-25436
  84252c:	dc002215 	stw	r16,136(sp)
  842530:	dc402815 	stw	r17,160(sp)
  842534:	d9002115 	stw	r4,132(sp)
  842538:	b823883a 	mov	r17,r23
  84253c:	054001c4 	movi	r21,7
  842540:	982f883a 	mov	r23,r19
  842544:	dc002717 	ldw	r16,156(sp)
  842548:	9027883a 	mov	r19,r18
  84254c:	dc802317 	ldw	r18,140(sp)
  842550:	00000306 	br	842560 <___svfiprintf_internal_r+0xd94>
  842554:	8c7ffc04 	addi	r17,r17,-16
  842558:	42000204 	addi	r8,r8,8
  84255c:	e440110e 	bge	fp,r17,8425a4 <___svfiprintf_internal_r+0xdd8>
  842560:	18c00404 	addi	r3,r3,16
  842564:	10800044 	addi	r2,r2,1
  842568:	45800015 	stw	r22,0(r8)
  84256c:	47000115 	stw	fp,4(r8)
  842570:	d8c01c15 	stw	r3,112(sp)
  842574:	d8801b15 	stw	r2,108(sp)
  842578:	a8bff60e 	bge	r21,r2,842554 <__alt_mem_epcs_flash_controller_0+0xff839554>
  84257c:	d9801a04 	addi	r6,sp,104
  842580:	900b883a 	mov	r5,r18
  842584:	8009883a 	mov	r4,r16
  842588:	08415fc0 	call	8415fc <__ssprint_r>
  84258c:	103fcf1e 	bne	r2,zero,8424cc <__alt_mem_epcs_flash_controller_0+0xff8394cc>
  842590:	8c7ffc04 	addi	r17,r17,-16
  842594:	d8c01c17 	ldw	r3,112(sp)
  842598:	d8801b17 	ldw	r2,108(sp)
  84259c:	d811883a 	mov	r8,sp
  8425a0:	e47fef16 	blt	fp,r17,842560 <__alt_mem_epcs_flash_controller_0+0xff839560>
  8425a4:	9825883a 	mov	r18,r19
  8425a8:	dc002217 	ldw	r16,136(sp)
  8425ac:	b827883a 	mov	r19,r23
  8425b0:	882f883a 	mov	r23,r17
  8425b4:	dc402817 	ldw	r17,160(sp)
  8425b8:	d9402117 	ldw	r5,132(sp)
  8425bc:	1dc7883a 	add	r3,r3,r23
  8425c0:	10800044 	addi	r2,r2,1
  8425c4:	41400015 	stw	r5,0(r8)
  8425c8:	45c00115 	stw	r23,4(r8)
  8425cc:	d8c01c15 	stw	r3,112(sp)
  8425d0:	d8801b15 	stw	r2,108(sp)
  8425d4:	010001c4 	movi	r4,7
  8425d8:	2080b716 	blt	r4,r2,8428b8 <___svfiprintf_internal_r+0x10ec>
  8425dc:	42000204 	addi	r8,r8,8
  8425e0:	003f3c06 	br	8422d4 <__alt_mem_epcs_flash_controller_0+0xff8392d4>
  8425e4:	d9402317 	ldw	r5,140(sp)
  8425e8:	d9002717 	ldw	r4,156(sp)
  8425ec:	d9801a04 	addi	r6,sp,104
  8425f0:	08415fc0 	call	8415fc <__ssprint_r>
  8425f4:	103fb51e 	bne	r2,zero,8424cc <__alt_mem_epcs_flash_controller_0+0xff8394cc>
  8425f8:	d8c01c17 	ldw	r3,112(sp)
  8425fc:	d811883a 	mov	r8,sp
  842600:	003f7106 	br	8423c8 <__alt_mem_epcs_flash_controller_0+0xff8393c8>
  842604:	d9402317 	ldw	r5,140(sp)
  842608:	d9002717 	ldw	r4,156(sp)
  84260c:	d9801a04 	addi	r6,sp,104
  842610:	08415fc0 	call	8415fc <__ssprint_r>
  842614:	103fa126 	beq	r2,zero,84249c <__alt_mem_epcs_flash_controller_0+0xff83949c>
  842618:	003fac06 	br	8424cc <__alt_mem_epcs_flash_controller_0+0xff8394cc>
  84261c:	d9402317 	ldw	r5,140(sp)
  842620:	d9002717 	ldw	r4,156(sp)
  842624:	d9801a04 	addi	r6,sp,104
  842628:	08415fc0 	call	8415fc <__ssprint_r>
  84262c:	103fa71e 	bne	r2,zero,8424cc <__alt_mem_epcs_flash_controller_0+0xff8394cc>
  842630:	d811883a 	mov	r8,sp
  842634:	003c9e06 	br	8418b0 <__alt_mem_epcs_flash_controller_0+0xff8388b0>
  842638:	d9402317 	ldw	r5,140(sp)
  84263c:	d9002717 	ldw	r4,156(sp)
  842640:	d9801a04 	addi	r6,sp,104
  842644:	08415fc0 	call	8415fc <__ssprint_r>
  842648:	103fa01e 	bne	r2,zero,8424cc <__alt_mem_epcs_flash_controller_0+0xff8394cc>
  84264c:	d8c01c17 	ldw	r3,112(sp)
  842650:	d8801b17 	ldw	r2,108(sp)
  842654:	d811883a 	mov	r8,sp
  842658:	003f5206 	br	8423a4 <__alt_mem_epcs_flash_controller_0+0xff8393a4>
  84265c:	d9402317 	ldw	r5,140(sp)
  842660:	d9002717 	ldw	r4,156(sp)
  842664:	d9801a04 	addi	r6,sp,104
  842668:	08415fc0 	call	8415fc <__ssprint_r>
  84266c:	103f971e 	bne	r2,zero,8424cc <__alt_mem_epcs_flash_controller_0+0xff8394cc>
  842670:	d8c01c17 	ldw	r3,112(sp)
  842674:	d8801b17 	ldw	r2,108(sp)
  842678:	d811883a 	mov	r8,sp
  84267c:	003f0506 	br	842294 <__alt_mem_epcs_flash_controller_0+0xff839294>
  842680:	d9402317 	ldw	r5,140(sp)
  842684:	d9002717 	ldw	r4,156(sp)
  842688:	d9801a04 	addi	r6,sp,104
  84268c:	08415fc0 	call	8415fc <__ssprint_r>
  842690:	103f8e1e 	bne	r2,zero,8424cc <__alt_mem_epcs_flash_controller_0+0xff8394cc>
  842694:	d8c01c17 	ldw	r3,112(sp)
  842698:	d8801b17 	ldw	r2,108(sp)
  84269c:	d811883a 	mov	r8,sp
  8426a0:	003f0906 	br	8422c8 <__alt_mem_epcs_flash_controller_0+0xff8392c8>
  8426a4:	d9402017 	ldw	r5,128(sp)
  8426a8:	d8001d85 	stb	zero,118(sp)
  8426ac:	28007716 	blt	r5,zero,84288c <___svfiprintf_internal_r+0x10c0>
  8426b0:	00ffdfc4 	movi	r3,-129
  8426b4:	9504b03a 	or	r2,r18,r20
  8426b8:	80e0703a 	and	r16,r16,r3
  8426bc:	103d3926 	beq	r2,zero,841ba4 <__alt_mem_epcs_flash_controller_0+0xff838ba4>
  8426c0:	002b883a 	mov	r21,zero
  8426c4:	003d3c06 	br	841bb8 <__alt_mem_epcs_flash_controller_0+0xff838bb8>
  8426c8:	d9402317 	ldw	r5,140(sp)
  8426cc:	d9002717 	ldw	r4,156(sp)
  8426d0:	d9801a04 	addi	r6,sp,104
  8426d4:	08415fc0 	call	8415fc <__ssprint_r>
  8426d8:	103f7c1e 	bne	r2,zero,8424cc <__alt_mem_epcs_flash_controller_0+0xff8394cc>
  8426dc:	d8c01c17 	ldw	r3,112(sp)
  8426e0:	d8801b17 	ldw	r2,108(sp)
  8426e4:	d811883a 	mov	r8,sp
  8426e8:	003edd06 	br	842260 <__alt_mem_epcs_flash_controller_0+0xff839260>
  8426ec:	8080100c 	andi	r2,r16,64
  8426f0:	d8001d85 	stb	zero,118(sp)
  8426f4:	10008426 	beq	r2,zero,842908 <___svfiprintf_internal_r+0x113c>
  8426f8:	d9402417 	ldw	r5,144(sp)
  8426fc:	d8c02017 	ldw	r3,128(sp)
  842700:	0029883a 	mov	r20,zero
  842704:	28800104 	addi	r2,r5,4
  842708:	2c80000b 	ldhu	r18,0(r5)
  84270c:	183eab0e 	bge	r3,zero,8421bc <__alt_mem_epcs_flash_controller_0+0xff8391bc>
  842710:	d8802415 	stw	r2,144(sp)
  842714:	002b883a 	mov	r21,zero
  842718:	9504b03a 	or	r2,r18,r20
  84271c:	103e171e 	bne	r2,zero,841f7c <__alt_mem_epcs_flash_controller_0+0xff838f7c>
  842720:	00800044 	movi	r2,1
  842724:	10803fcc 	andi	r2,r2,255
  842728:	00c00044 	movi	r3,1
  84272c:	10c05c26 	beq	r2,r3,8428a0 <___svfiprintf_internal_r+0x10d4>
  842730:	00c00084 	movi	r3,2
  842734:	10fd1e26 	beq	r2,r3,841bb0 <__alt_mem_epcs_flash_controller_0+0xff838bb0>
  842738:	003ec406 	br	84224c <__alt_mem_epcs_flash_controller_0+0xff83924c>
  84273c:	d9401e17 	ldw	r5,120(sp)
  842740:	2c69c83a 	sub	r20,r5,r17
  842744:	003d4506 	br	841c5c <__alt_mem_epcs_flash_controller_0+0xff838c5c>
  842748:	d8802415 	stw	r2,144(sp)
  84274c:	98c00007 	ldb	r3,0(r19)
  842750:	003c6a06 	br	8418fc <__alt_mem_epcs_flash_controller_0+0xff8388fc>
  842754:	d9402317 	ldw	r5,140(sp)
  842758:	d9002717 	ldw	r4,156(sp)
  84275c:	d9801a04 	addi	r6,sp,104
  842760:	08415fc0 	call	8415fc <__ssprint_r>
  842764:	103f591e 	bne	r2,zero,8424cc <__alt_mem_epcs_flash_controller_0+0xff8394cc>
  842768:	d8c01c17 	ldw	r3,112(sp)
  84276c:	003f4406 	br	842480 <__alt_mem_epcs_flash_controller_0+0xff839480>
  842770:	014021b4 	movhi	r5,134
  842774:	2965fe04 	addi	r5,r5,-26632
  842778:	d9402915 	stw	r5,164(sp)
  84277c:	003d0906 	br	841ba4 <__alt_mem_epcs_flash_controller_0+0xff838ba4>
  842780:	d8c02417 	ldw	r3,144(sp)
  842784:	d9002617 	ldw	r4,152(sp)
  842788:	d9402417 	ldw	r5,144(sp)
  84278c:	18800017 	ldw	r2,0(r3)
  842790:	2007d7fa 	srai	r3,r4,31
  842794:	29400104 	addi	r5,r5,4
  842798:	d9402415 	stw	r5,144(sp)
  84279c:	11000015 	stw	r4,0(r2)
  8427a0:	10c00115 	stw	r3,4(r2)
  8427a4:	003c2b06 	br	841854 <__alt_mem_epcs_flash_controller_0+0xff838854>
  8427a8:	d8c01d45 	stb	r3,117(sp)
  8427ac:	d8c02017 	ldw	r3,128(sp)
  8427b0:	00800c04 	movi	r2,48
  8427b4:	d8801d05 	stb	r2,116(sp)
  8427b8:	d8001d85 	stb	zero,118(sp)
  8427bc:	80800094 	ori	r2,r16,2
  8427c0:	1800ac16 	blt	r3,zero,842a74 <___svfiprintf_internal_r+0x12a8>
  8427c4:	00bfdfc4 	movi	r2,-129
  8427c8:	80a0703a 	and	r16,r16,r2
  8427cc:	84000094 	ori	r16,r16,2
  8427d0:	002b883a 	mov	r21,zero
  8427d4:	003cf806 	br	841bb8 <__alt_mem_epcs_flash_controller_0+0xff838bb8>
  8427d8:	98c00007 	ldb	r3,0(r19)
  8427dc:	003c4706 	br	8418fc <__alt_mem_epcs_flash_controller_0+0xff8388fc>
  8427e0:	d9402417 	ldw	r5,144(sp)
  8427e4:	2c800017 	ldw	r18,0(r5)
  8427e8:	29400104 	addi	r5,r5,4
  8427ec:	d9402415 	stw	r5,144(sp)
  8427f0:	9029d7fa 	srai	r20,r18,31
  8427f4:	a005883a 	mov	r2,r20
  8427f8:	003dd806 	br	841f5c <__alt_mem_epcs_flash_controller_0+0xff838f5c>
  8427fc:	d9402417 	ldw	r5,144(sp)
  842800:	0029883a 	mov	r20,zero
  842804:	2c800017 	ldw	r18,0(r5)
  842808:	29400104 	addi	r5,r5,4
  84280c:	d9402415 	stw	r5,144(sp)
  842810:	003cdb06 	br	841b80 <__alt_mem_epcs_flash_controller_0+0xff838b80>
  842814:	8080100c 	andi	r2,r16,64
  842818:	d8001d85 	stb	zero,118(sp)
  84281c:	10003326 	beq	r2,zero,8428ec <___svfiprintf_internal_r+0x1120>
  842820:	d9002417 	ldw	r4,144(sp)
  842824:	d9402017 	ldw	r5,128(sp)
  842828:	0029883a 	mov	r20,zero
  84282c:	20800104 	addi	r2,r4,4
  842830:	2480000b 	ldhu	r18,0(r4)
  842834:	283e7e0e 	bge	r5,zero,842230 <__alt_mem_epcs_flash_controller_0+0xff839230>
  842838:	9506b03a 	or	r3,r18,r20
  84283c:	d8802415 	stw	r2,144(sp)
  842840:	183d271e 	bne	r3,zero,841ce0 <__alt_mem_epcs_flash_controller_0+0xff838ce0>
  842844:	002b883a 	mov	r21,zero
  842848:	0005883a 	mov	r2,zero
  84284c:	003fb506 	br	842724 <__alt_mem_epcs_flash_controller_0+0xff839724>
  842850:	98c00043 	ldbu	r3,1(r19)
  842854:	8c400814 	ori	r17,r17,32
  842858:	9cc00044 	addi	r19,r19,1
  84285c:	18c03fcc 	andi	r3,r3,255
  842860:	18c0201c 	xori	r3,r3,128
  842864:	18ffe004 	addi	r3,r3,-128
  842868:	003c2406 	br	8418fc <__alt_mem_epcs_flash_controller_0+0xff8388fc>
  84286c:	d8c02415 	stw	r3,144(sp)
  842870:	002b883a 	mov	r21,zero
  842874:	003fa806 	br	842718 <__alt_mem_epcs_flash_controller_0+0xff839718>
  842878:	010021b4 	movhi	r4,134
  84287c:	2125fe04 	addi	r4,r4,-26632
  842880:	d9002915 	stw	r4,164(sp)
  842884:	d8c02415 	stw	r3,144(sp)
  842888:	1021883a 	mov	r16,r2
  84288c:	9504b03a 	or	r2,r18,r20
  842890:	103f8b1e 	bne	r2,zero,8426c0 <__alt_mem_epcs_flash_controller_0+0xff8396c0>
  842894:	002b883a 	mov	r21,zero
  842898:	00800084 	movi	r2,2
  84289c:	003fa106 	br	842724 <__alt_mem_epcs_flash_controller_0+0xff839724>
  8428a0:	0025883a 	mov	r18,zero
  8428a4:	94800c04 	addi	r18,r18,48
  8428a8:	dc8019c5 	stb	r18,103(sp)
  8428ac:	dd002c17 	ldw	r20,176(sp)
  8428b0:	dc4019c4 	addi	r17,sp,103
  8428b4:	003ce906 	br	841c5c <__alt_mem_epcs_flash_controller_0+0xff838c5c>
  8428b8:	d9402317 	ldw	r5,140(sp)
  8428bc:	d9002717 	ldw	r4,156(sp)
  8428c0:	d9801a04 	addi	r6,sp,104
  8428c4:	08415fc0 	call	8415fc <__ssprint_r>
  8428c8:	103f001e 	bne	r2,zero,8424cc <__alt_mem_epcs_flash_controller_0+0xff8394cc>
  8428cc:	d8c01c17 	ldw	r3,112(sp)
  8428d0:	d8801b17 	ldw	r2,108(sp)
  8428d4:	d811883a 	mov	r8,sp
  8428d8:	003e7e06 	br	8422d4 <__alt_mem_epcs_flash_controller_0+0xff8392d4>
  8428dc:	014021b4 	movhi	r5,134
  8428e0:	29672904 	addi	r5,r5,-25436
  8428e4:	d9402115 	stw	r5,132(sp)
  8428e8:	003ea406 	br	84237c <__alt_mem_epcs_flash_controller_0+0xff83937c>
  8428ec:	d8c02417 	ldw	r3,144(sp)
  8428f0:	d9002017 	ldw	r4,128(sp)
  8428f4:	0029883a 	mov	r20,zero
  8428f8:	18800104 	addi	r2,r3,4
  8428fc:	1c800017 	ldw	r18,0(r3)
  842900:	203e4b0e 	bge	r4,zero,842230 <__alt_mem_epcs_flash_controller_0+0xff839230>
  842904:	003fcc06 	br	842838 <__alt_mem_epcs_flash_controller_0+0xff839838>
  842908:	d9002417 	ldw	r4,144(sp)
  84290c:	d9402017 	ldw	r5,128(sp)
  842910:	0029883a 	mov	r20,zero
  842914:	20800104 	addi	r2,r4,4
  842918:	24800017 	ldw	r18,0(r4)
  84291c:	283e270e 	bge	r5,zero,8421bc <__alt_mem_epcs_flash_controller_0+0xff8391bc>
  842920:	003f7b06 	br	842710 <__alt_mem_epcs_flash_controller_0+0xff839710>
  842924:	8400100c 	andi	r16,r16,64
  842928:	80003326 	beq	r16,zero,8429f8 <___svfiprintf_internal_r+0x122c>
  84292c:	d9402417 	ldw	r5,144(sp)
  842930:	d8c02617 	ldw	r3,152(sp)
  842934:	28800017 	ldw	r2,0(r5)
  842938:	29400104 	addi	r5,r5,4
  84293c:	d9402415 	stw	r5,144(sp)
  842940:	10c0000d 	sth	r3,0(r2)
  842944:	003bc306 	br	841854 <__alt_mem_epcs_flash_controller_0+0xff838854>
  842948:	d9002417 	ldw	r4,144(sp)
  84294c:	0029883a 	mov	r20,zero
  842950:	24800017 	ldw	r18,0(r4)
  842954:	21000104 	addi	r4,r4,4
  842958:	d9002415 	stw	r4,144(sp)
  84295c:	003c8806 	br	841b80 <__alt_mem_epcs_flash_controller_0+0xff838b80>
  842960:	d8c02417 	ldw	r3,144(sp)
  842964:	1c800017 	ldw	r18,0(r3)
  842968:	18c00104 	addi	r3,r3,4
  84296c:	d8c02415 	stw	r3,144(sp)
  842970:	9029d7fa 	srai	r20,r18,31
  842974:	a005883a 	mov	r2,r20
  842978:	003d7806 	br	841f5c <__alt_mem_epcs_flash_controller_0+0xff838f5c>
  84297c:	8809883a 	mov	r4,r17
  842980:	da002d15 	stw	r8,180(sp)
  842984:	08351100 	call	835110 <strlen>
  842988:	1029883a 	mov	r20,r2
  84298c:	dd401d83 	ldbu	r21,118(sp)
  842990:	ddc02415 	stw	r23,144(sp)
  842994:	d8002015 	stw	zero,128(sp)
  842998:	da002d17 	ldw	r8,180(sp)
  84299c:	003caf06 	br	841c5c <__alt_mem_epcs_flash_controller_0+0xff838c5c>
  8429a0:	013fffc4 	movi	r4,-1
  8429a4:	003df206 	br	842170 <__alt_mem_epcs_flash_controller_0+0xff839170>
  8429a8:	dd002017 	ldw	r20,128(sp)
  8429ac:	00800184 	movi	r2,6
  8429b0:	1500012e 	bgeu	r2,r20,8429b8 <___svfiprintf_internal_r+0x11ec>
  8429b4:	1029883a 	mov	r20,r2
  8429b8:	a025883a 	mov	r18,r20
  8429bc:	a0004116 	blt	r20,zero,842ac4 <___svfiprintf_internal_r+0x12f8>
  8429c0:	044021b4 	movhi	r17,134
  8429c4:	ddc02415 	stw	r23,144(sp)
  8429c8:	8c660304 	addi	r17,r17,-26612
  8429cc:	003ce806 	br	841d70 <__alt_mem_epcs_flash_controller_0+0xff838d70>
  8429d0:	04001004 	movi	r16,64
  8429d4:	800b883a 	mov	r5,r16
  8429d8:	083335c0 	call	83335c <_malloc_r>
  8429dc:	d8c02317 	ldw	r3,140(sp)
  8429e0:	18800015 	stw	r2,0(r3)
  8429e4:	18800415 	stw	r2,16(r3)
  8429e8:	10004d26 	beq	r2,zero,842b20 <___svfiprintf_internal_r+0x1354>
  8429ec:	d9402317 	ldw	r5,140(sp)
  8429f0:	2c000515 	stw	r16,20(r5)
  8429f4:	003b8906 	br	84181c <__alt_mem_epcs_flash_controller_0+0xff83881c>
  8429f8:	d9002417 	ldw	r4,144(sp)
  8429fc:	d9402617 	ldw	r5,152(sp)
  842a00:	20800017 	ldw	r2,0(r4)
  842a04:	21000104 	addi	r4,r4,4
  842a08:	d9002415 	stw	r4,144(sp)
  842a0c:	11400015 	stw	r5,0(r2)
  842a10:	003b9006 	br	841854 <__alt_mem_epcs_flash_controller_0+0xff838854>
  842a14:	8080004c 	andi	r2,r16,1
  842a18:	002b883a 	mov	r21,zero
  842a1c:	10000526 	beq	r2,zero,842a34 <___svfiprintf_internal_r+0x1268>
  842a20:	00800c04 	movi	r2,48
  842a24:	d88019c5 	stb	r2,103(sp)
  842a28:	dd002c17 	ldw	r20,176(sp)
  842a2c:	dc4019c4 	addi	r17,sp,103
  842a30:	003c8a06 	br	841c5c <__alt_mem_epcs_flash_controller_0+0xff838c5c>
  842a34:	0029883a 	mov	r20,zero
  842a38:	dc401a04 	addi	r17,sp,104
  842a3c:	003c8706 	br	841c5c <__alt_mem_epcs_flash_controller_0+0xff838c5c>
  842a40:	014021b4 	movhi	r5,134
  842a44:	29672d04 	addi	r5,r5,-25420
  842a48:	d9402815 	stw	r5,160(sp)
  842a4c:	003cff06 	br	841e4c <__alt_mem_epcs_flash_controller_0+0xff838e4c>
  842a50:	00bfffc4 	movi	r2,-1
  842a54:	003ea206 	br	8424e0 <__alt_mem_epcs_flash_controller_0+0xff8394e0>
  842a58:	00800044 	movi	r2,1
  842a5c:	10803fcc 	andi	r2,r2,255
  842a60:	00c00044 	movi	r3,1
  842a64:	10fd4526 	beq	r2,r3,841f7c <__alt_mem_epcs_flash_controller_0+0xff838f7c>
  842a68:	00c00084 	movi	r3,2
  842a6c:	10fc5226 	beq	r2,r3,841bb8 <__alt_mem_epcs_flash_controller_0+0xff838bb8>
  842a70:	003c9c06 	br	841ce4 <__alt_mem_epcs_flash_controller_0+0xff838ce4>
  842a74:	1021883a 	mov	r16,r2
  842a78:	002b883a 	mov	r21,zero
  842a7c:	00800084 	movi	r2,2
  842a80:	003ff606 	br	842a5c <__alt_mem_epcs_flash_controller_0+0xff839a5c>
  842a84:	010021b4 	movhi	r4,134
  842a88:	21272d04 	addi	r4,r4,-25420
  842a8c:	d9002815 	stw	r4,160(sp)
  842a90:	003e7206 	br	84245c <__alt_mem_epcs_flash_controller_0+0xff83945c>
  842a94:	014021b4 	movhi	r5,134
  842a98:	29672904 	addi	r5,r5,-25436
  842a9c:	d9402115 	stw	r5,132(sp)
  842aa0:	003ec506 	br	8425b8 <__alt_mem_epcs_flash_controller_0+0xff8395b8>
  842aa4:	e027883a 	mov	r19,fp
  842aa8:	d8002015 	stw	zero,128(sp)
  842aac:	003b9406 	br	841900 <__alt_mem_epcs_flash_controller_0+0xff838900>
  842ab0:	dd002017 	ldw	r20,128(sp)
  842ab4:	dd401d83 	ldbu	r21,118(sp)
  842ab8:	ddc02415 	stw	r23,144(sp)
  842abc:	d8002015 	stw	zero,128(sp)
  842ac0:	003c6606 	br	841c5c <__alt_mem_epcs_flash_controller_0+0xff838c5c>
  842ac4:	0025883a 	mov	r18,zero
  842ac8:	003fbd06 	br	8429c0 <__alt_mem_epcs_flash_controller_0+0xff8399c0>
  842acc:	d9402417 	ldw	r5,144(sp)
  842ad0:	d8c02417 	ldw	r3,144(sp)
  842ad4:	29400017 	ldw	r5,0(r5)
  842ad8:	19000104 	addi	r4,r3,4
  842adc:	d9002415 	stw	r4,144(sp)
  842ae0:	d9402015 	stw	r5,128(sp)
  842ae4:	98c00043 	ldbu	r3,1(r19)
  842ae8:	e027883a 	mov	r19,fp
  842aec:	283f5b0e 	bge	r5,zero,84285c <__alt_mem_epcs_flash_controller_0+0xff83985c>
  842af0:	18c03fcc 	andi	r3,r3,255
  842af4:	013fffc4 	movi	r4,-1
  842af8:	18c0201c 	xori	r3,r3,128
  842afc:	d9002015 	stw	r4,128(sp)
  842b00:	18ffe004 	addi	r3,r3,-128
  842b04:	003b7d06 	br	8418fc <__alt_mem_epcs_flash_controller_0+0xff8388fc>
  842b08:	dd401d85 	stb	r21,118(sp)
  842b0c:	003cf306 	br	841edc <__alt_mem_epcs_flash_controller_0+0xff838edc>
  842b10:	dd401d85 	stb	r21,118(sp)
  842b14:	003d4e06 	br	842050 <__alt_mem_epcs_flash_controller_0+0xff839050>
  842b18:	dd401d85 	stb	r21,118(sp)
  842b1c:	003c0e06 	br	841b58 <__alt_mem_epcs_flash_controller_0+0xff838b58>
  842b20:	d9002717 	ldw	r4,156(sp)
  842b24:	00800304 	movi	r2,12
  842b28:	20800015 	stw	r2,0(r4)
  842b2c:	00bfffc4 	movi	r2,-1
  842b30:	003e6b06 	br	8424e0 <__alt_mem_epcs_flash_controller_0+0xff8394e0>
  842b34:	dd401d85 	stb	r21,118(sp)
  842b38:	003d0006 	br	841f3c <__alt_mem_epcs_flash_controller_0+0xff838f3c>
  842b3c:	dd401d85 	stb	r21,118(sp)
  842b40:	003d7106 	br	842108 <__alt_mem_epcs_flash_controller_0+0xff839108>
  842b44:	dd401d85 	stb	r21,118(sp)
  842b48:	003c5706 	br	841ca8 <__alt_mem_epcs_flash_controller_0+0xff838ca8>
  842b4c:	dd401d85 	stb	r21,118(sp)
  842b50:	003c2e06 	br	841c0c <__alt_mem_epcs_flash_controller_0+0xff838c0c>
  842b54:	dd401d85 	stb	r21,118(sp)
  842b58:	003d8c06 	br	84218c <__alt_mem_epcs_flash_controller_0+0xff83918c>
  842b5c:	dd401d85 	stb	r21,118(sp)
  842b60:	003da706 	br	842200 <__alt_mem_epcs_flash_controller_0+0xff839200>
  842b64:	dd401d85 	stb	r21,118(sp)
  842b68:	003cc806 	br	841e8c <__alt_mem_epcs_flash_controller_0+0xff838e8c>

00842b6c <_sungetc_r>:
  842b6c:	00bfffc4 	movi	r2,-1
  842b70:	28803726 	beq	r5,r2,842c50 <_sungetc_r+0xe4>
  842b74:	3080030b 	ldhu	r2,12(r6)
  842b78:	30c00c17 	ldw	r3,48(r6)
  842b7c:	defffc04 	addi	sp,sp,-16
  842b80:	10bff7cc 	andi	r2,r2,65503
  842b84:	dc800215 	stw	r18,8(sp)
  842b88:	dfc00315 	stw	ra,12(sp)
  842b8c:	dc400115 	stw	r17,4(sp)
  842b90:	dc000015 	stw	r16,0(sp)
  842b94:	3080030d 	sth	r2,12(r6)
  842b98:	2c803fcc 	andi	r18,r5,255
  842b9c:	18001826 	beq	r3,zero,842c00 <_sungetc_r+0x94>
  842ba0:	30c00117 	ldw	r3,4(r6)
  842ba4:	30800d17 	ldw	r2,52(r6)
  842ba8:	3021883a 	mov	r16,r6
  842bac:	2823883a 	mov	r17,r5
  842bb0:	18800e0e 	bge	r3,r2,842bec <_sungetc_r+0x80>
  842bb4:	80c00017 	ldw	r3,0(r16)
  842bb8:	9005883a 	mov	r2,r18
  842bbc:	193fffc4 	addi	r4,r3,-1
  842bc0:	81000015 	stw	r4,0(r16)
  842bc4:	1c7fffc5 	stb	r17,-1(r3)
  842bc8:	80c00117 	ldw	r3,4(r16)
  842bcc:	18c00044 	addi	r3,r3,1
  842bd0:	80c00115 	stw	r3,4(r16)
  842bd4:	dfc00317 	ldw	ra,12(sp)
  842bd8:	dc800217 	ldw	r18,8(sp)
  842bdc:	dc400117 	ldw	r17,4(sp)
  842be0:	dc000017 	ldw	r16,0(sp)
  842be4:	dec00404 	addi	sp,sp,16
  842be8:	f800283a 	ret
  842bec:	300b883a 	mov	r5,r6
  842bf0:	0843f300 	call	843f30 <__submore>
  842bf4:	103fef26 	beq	r2,zero,842bb4 <__alt_mem_epcs_flash_controller_0+0xff839bb4>
  842bf8:	00bfffc4 	movi	r2,-1
  842bfc:	003ff506 	br	842bd4 <__alt_mem_epcs_flash_controller_0+0xff839bd4>
  842c00:	30c00417 	ldw	r3,16(r6)
  842c04:	30800017 	ldw	r2,0(r6)
  842c08:	18000326 	beq	r3,zero,842c18 <_sungetc_r+0xac>
  842c0c:	1880022e 	bgeu	r3,r2,842c18 <_sungetc_r+0xac>
  842c10:	10ffffc3 	ldbu	r3,-1(r2)
  842c14:	90c01026 	beq	r18,r3,842c58 <_sungetc_r+0xec>
  842c18:	31c00117 	ldw	r7,4(r6)
  842c1c:	30800e15 	stw	r2,56(r6)
  842c20:	008000c4 	movi	r2,3
  842c24:	31001004 	addi	r4,r6,64
  842c28:	30c01084 	addi	r3,r6,66
  842c2c:	30800d15 	stw	r2,52(r6)
  842c30:	00800044 	movi	r2,1
  842c34:	30800115 	stw	r2,4(r6)
  842c38:	31c00f15 	stw	r7,60(r6)
  842c3c:	31000c15 	stw	r4,48(r6)
  842c40:	31401085 	stb	r5,66(r6)
  842c44:	30c00015 	stw	r3,0(r6)
  842c48:	9005883a 	mov	r2,r18
  842c4c:	003fe106 	br	842bd4 <__alt_mem_epcs_flash_controller_0+0xff839bd4>
  842c50:	00bfffc4 	movi	r2,-1
  842c54:	f800283a 	ret
  842c58:	30c00117 	ldw	r3,4(r6)
  842c5c:	10bfffc4 	addi	r2,r2,-1
  842c60:	30800015 	stw	r2,0(r6)
  842c64:	18800044 	addi	r2,r3,1
  842c68:	30800115 	stw	r2,4(r6)
  842c6c:	9005883a 	mov	r2,r18
  842c70:	003fd806 	br	842bd4 <__alt_mem_epcs_flash_controller_0+0xff839bd4>

00842c74 <__ssrefill_r>:
  842c74:	defffe04 	addi	sp,sp,-8
  842c78:	dc000015 	stw	r16,0(sp)
  842c7c:	2821883a 	mov	r16,r5
  842c80:	29400c17 	ldw	r5,48(r5)
  842c84:	dfc00115 	stw	ra,4(sp)
  842c88:	28000e26 	beq	r5,zero,842cc4 <__ssrefill_r+0x50>
  842c8c:	80801004 	addi	r2,r16,64
  842c90:	28800126 	beq	r5,r2,842c98 <__ssrefill_r+0x24>
  842c94:	0832d380 	call	832d38 <_free_r>
  842c98:	80800f17 	ldw	r2,60(r16)
  842c9c:	80000c15 	stw	zero,48(r16)
  842ca0:	80800115 	stw	r2,4(r16)
  842ca4:	10000726 	beq	r2,zero,842cc4 <__ssrefill_r+0x50>
  842ca8:	80c00e17 	ldw	r3,56(r16)
  842cac:	0005883a 	mov	r2,zero
  842cb0:	80c00015 	stw	r3,0(r16)
  842cb4:	dfc00117 	ldw	ra,4(sp)
  842cb8:	dc000017 	ldw	r16,0(sp)
  842cbc:	dec00204 	addi	sp,sp,8
  842cc0:	f800283a 	ret
  842cc4:	8080030b 	ldhu	r2,12(r16)
  842cc8:	80c00417 	ldw	r3,16(r16)
  842ccc:	80000115 	stw	zero,4(r16)
  842cd0:	10800814 	ori	r2,r2,32
  842cd4:	8080030d 	sth	r2,12(r16)
  842cd8:	80c00015 	stw	r3,0(r16)
  842cdc:	00bfffc4 	movi	r2,-1
  842ce0:	003ff406 	br	842cb4 <__alt_mem_epcs_flash_controller_0+0xff839cb4>

00842ce4 <_sfread_r>:
  842ce4:	defff704 	addi	sp,sp,-36
  842ce8:	dd000415 	stw	r20,16(sp)
  842cec:	dcc00315 	stw	r19,12(sp)
  842cf0:	2029883a 	mov	r20,r4
  842cf4:	2827883a 	mov	r19,r5
  842cf8:	3809883a 	mov	r4,r7
  842cfc:	300b883a 	mov	r5,r6
  842d00:	ddc00715 	stw	r23,28(sp)
  842d04:	dd400515 	stw	r21,20(sp)
  842d08:	dc400115 	stw	r17,4(sp)
  842d0c:	dfc00815 	stw	ra,32(sp)
  842d10:	dd800615 	stw	r22,24(sp)
  842d14:	dc800215 	stw	r18,8(sp)
  842d18:	dc000015 	stw	r16,0(sp)
  842d1c:	302f883a 	mov	r23,r6
  842d20:	382b883a 	mov	r21,r7
  842d24:	08301e80 	call	8301e8 <__mulsi3>
  842d28:	dc400917 	ldw	r17,36(sp)
  842d2c:	10002726 	beq	r2,zero,842dcc <_sfread_r+0xe8>
  842d30:	102d883a 	mov	r22,r2
  842d34:	1025883a 	mov	r18,r2
  842d38:	00000b06 	br	842d68 <_sfread_r+0x84>
  842d3c:	0833c4c0 	call	833c4c <memcpy>
  842d40:	88800017 	ldw	r2,0(r17)
  842d44:	9c27883a 	add	r19,r19,r16
  842d48:	9425c83a 	sub	r18,r18,r16
  842d4c:	1421883a 	add	r16,r2,r16
  842d50:	88000115 	stw	zero,4(r17)
  842d54:	880b883a 	mov	r5,r17
  842d58:	8c000015 	stw	r16,0(r17)
  842d5c:	a009883a 	mov	r4,r20
  842d60:	0842c740 	call	842c74 <__ssrefill_r>
  842d64:	10001b1e 	bne	r2,zero,842dd4 <_sfread_r+0xf0>
  842d68:	8c000117 	ldw	r16,4(r17)
  842d6c:	9809883a 	mov	r4,r19
  842d70:	89400017 	ldw	r5,0(r17)
  842d74:	800d883a 	mov	r6,r16
  842d78:	84bff036 	bltu	r16,r18,842d3c <__alt_mem_epcs_flash_controller_0+0xff839d3c>
  842d7c:	900d883a 	mov	r6,r18
  842d80:	0833c4c0 	call	833c4c <memcpy>
  842d84:	88c00117 	ldw	r3,4(r17)
  842d88:	89000017 	ldw	r4,0(r17)
  842d8c:	a805883a 	mov	r2,r21
  842d90:	1c87c83a 	sub	r3,r3,r18
  842d94:	24a5883a 	add	r18,r4,r18
  842d98:	88c00115 	stw	r3,4(r17)
  842d9c:	8c800015 	stw	r18,0(r17)
  842da0:	dfc00817 	ldw	ra,32(sp)
  842da4:	ddc00717 	ldw	r23,28(sp)
  842da8:	dd800617 	ldw	r22,24(sp)
  842dac:	dd400517 	ldw	r21,20(sp)
  842db0:	dd000417 	ldw	r20,16(sp)
  842db4:	dcc00317 	ldw	r19,12(sp)
  842db8:	dc800217 	ldw	r18,8(sp)
  842dbc:	dc400117 	ldw	r17,4(sp)
  842dc0:	dc000017 	ldw	r16,0(sp)
  842dc4:	dec00904 	addi	sp,sp,36
  842dc8:	f800283a 	ret
  842dcc:	0005883a 	mov	r2,zero
  842dd0:	003ff306 	br	842da0 <__alt_mem_epcs_flash_controller_0+0xff839da0>
  842dd4:	b80b883a 	mov	r5,r23
  842dd8:	b489c83a 	sub	r4,r22,r18
  842ddc:	083012c0 	call	83012c <__udivsi3>
  842de0:	003fef06 	br	842da0 <__alt_mem_epcs_flash_controller_0+0xff839da0>

00842de4 <__ssvfiscanf_r>:
  842de4:	2880030b 	ldhu	r2,12(r5)
  842de8:	deff9b04 	addi	sp,sp,-404
  842dec:	dd005f15 	stw	r20,380(sp)
  842df0:	dc405c15 	stw	r17,368(sp)
  842df4:	dfc06415 	stw	ra,400(sp)
  842df8:	df006315 	stw	fp,396(sp)
  842dfc:	ddc06215 	stw	r23,392(sp)
  842e00:	dd806115 	stw	r22,388(sp)
  842e04:	dd406015 	stw	r21,384(sp)
  842e08:	dcc05e15 	stw	r19,376(sp)
  842e0c:	dc805d15 	stw	r18,372(sp)
  842e10:	dc005b15 	stw	r16,364(sp)
  842e14:	10c8000c 	andi	r3,r2,8192
  842e18:	d9c04f15 	stw	r7,316(sp)
  842e1c:	2829883a 	mov	r20,r5
  842e20:	2023883a 	mov	r17,r4
  842e24:	1800061e 	bne	r3,zero,842e40 <__ssvfiscanf_r+0x5c>
  842e28:	29001917 	ldw	r4,100(r5)
  842e2c:	00f7ffc4 	movi	r3,-8193
  842e30:	10880014 	ori	r2,r2,8192
  842e34:	20c6703a 	and	r3,r4,r3
  842e38:	2880030d 	sth	r2,12(r5)
  842e3c:	28c01915 	stw	r3,100(r5)
  842e40:	30800003 	ldbu	r2,0(r6)
  842e44:	dac04104 	addi	r11,sp,260
  842e48:	0039883a 	mov	fp,zero
  842e4c:	048021b4 	movhi	r18,134
  842e50:	d8005215 	stw	zero,328(sp)
  842e54:	d8005015 	stw	zero,320(sp)
  842e58:	d8005115 	stw	zero,324(sp)
  842e5c:	dac04e15 	stw	r11,312(sp)
  842e60:	d8804d15 	stw	r2,308(sp)
  842e64:	e027883a 	mov	r19,fp
  842e68:	94af7704 	addi	r18,r18,-16932
  842e6c:	a039883a 	mov	fp,r20
  842e70:	35000044 	addi	r20,r6,1
  842e74:	10001e26 	beq	r2,zero,842ef0 <__ssvfiscanf_r+0x10c>
  842e78:	95800017 	ldw	r22,0(r18)
  842e7c:	b087883a 	add	r3,r22,r2
  842e80:	18c00043 	ldbu	r3,1(r3)
  842e84:	18c0020c 	andi	r3,r3,8
  842e88:	18001b26 	beq	r3,zero,842ef8 <__ssvfiscanf_r+0x114>
  842e8c:	e0800117 	ldw	r2,4(fp)
  842e90:	00800e0e 	bge	zero,r2,842ecc <__ssvfiscanf_r+0xe8>
  842e94:	e0c00017 	ldw	r3,0(fp)
  842e98:	91000017 	ldw	r4,0(r18)
  842e9c:	18800003 	ldbu	r2,0(r3)
  842ea0:	2085883a 	add	r2,r4,r2
  842ea4:	10800043 	ldbu	r2,1(r2)
  842ea8:	1080020c 	andi	r2,r2,8
  842eac:	10000b26 	beq	r2,zero,842edc <__ssvfiscanf_r+0xf8>
  842eb0:	e0800117 	ldw	r2,4(fp)
  842eb4:	18c00044 	addi	r3,r3,1
  842eb8:	e0c00015 	stw	r3,0(fp)
  842ebc:	10bfffc4 	addi	r2,r2,-1
  842ec0:	e0800115 	stw	r2,4(fp)
  842ec4:	9cc00044 	addi	r19,r19,1
  842ec8:	00bff216 	blt	zero,r2,842e94 <__alt_mem_epcs_flash_controller_0+0xff839e94>
  842ecc:	e00b883a 	mov	r5,fp
  842ed0:	8809883a 	mov	r4,r17
  842ed4:	0842c740 	call	842c74 <__ssrefill_r>
  842ed8:	103fee26 	beq	r2,zero,842e94 <__alt_mem_epcs_flash_controller_0+0xff839e94>
  842edc:	a00d883a 	mov	r6,r20
  842ee0:	30800003 	ldbu	r2,0(r6)
  842ee4:	35000044 	addi	r20,r6,1
  842ee8:	d8804d15 	stw	r2,308(sp)
  842eec:	103fe21e 	bne	r2,zero,842e78 <__alt_mem_epcs_flash_controller_0+0xff839e78>
  842ef0:	d8805117 	ldw	r2,324(sp)
  842ef4:	00009a06 	br	843160 <__ssvfiscanf_r+0x37c>
  842ef8:	00c00944 	movi	r3,37
  842efc:	10c0891e 	bne	r2,r3,843124 <__ssvfiscanf_r+0x340>
  842f00:	31800043 	ldbu	r6,1(r6)
  842f04:	002f883a 	mov	r23,zero
  842f08:	b809883a 	mov	r4,r23
  842f0c:	0021883a 	mov	r16,zero
  842f10:	01c01e04 	movi	r7,120
  842f14:	00c01b04 	movi	r3,108
  842f18:	302f883a 	mov	r23,r6
  842f1c:	a5400044 	addi	r21,r20,1
  842f20:	3dc0e436 	bltu	r7,r23,8432b4 <__ssvfiscanf_r+0x4d0>
  842f24:	b80490ba 	slli	r2,r23,2
  842f28:	01402134 	movhi	r5,132
  842f2c:	294bcf04 	addi	r5,r5,12092
  842f30:	1145883a 	add	r2,r2,r5
  842f34:	10800017 	ldw	r2,0(r2)
  842f38:	1000683a 	jmp	r2
  842f3c:	0084315c 	xori	r2,zero,4293
  842f40:	008432b4 	movhi	r2,4298
  842f44:	008432b4 	movhi	r2,4298
  842f48:	008432b4 	movhi	r2,4298
  842f4c:	008432b4 	movhi	r2,4298
  842f50:	008432b4 	movhi	r2,4298
  842f54:	008432b4 	movhi	r2,4298
  842f58:	008432b4 	movhi	r2,4298
  842f5c:	008432b4 	movhi	r2,4298
  842f60:	008432b4 	movhi	r2,4298
  842f64:	008432b4 	movhi	r2,4298
  842f68:	008432b4 	movhi	r2,4298
  842f6c:	008432b4 	movhi	r2,4298
  842f70:	008432b4 	movhi	r2,4298
  842f74:	008432b4 	movhi	r2,4298
  842f78:	008432b4 	movhi	r2,4298
  842f7c:	008432b4 	movhi	r2,4298
  842f80:	008432b4 	movhi	r2,4298
  842f84:	008432b4 	movhi	r2,4298
  842f88:	008432b4 	movhi	r2,4298
  842f8c:	008432b4 	movhi	r2,4298
  842f90:	008432b4 	movhi	r2,4298
  842f94:	008432b4 	movhi	r2,4298
  842f98:	008432b4 	movhi	r2,4298
  842f9c:	008432b4 	movhi	r2,4298
  842fa0:	008432b4 	movhi	r2,4298
  842fa4:	008432b4 	movhi	r2,4298
  842fa8:	008432b4 	movhi	r2,4298
  842fac:	008432b4 	movhi	r2,4298
  842fb0:	008432b4 	movhi	r2,4298
  842fb4:	008432b4 	movhi	r2,4298
  842fb8:	008432b4 	movhi	r2,4298
  842fbc:	008432b4 	movhi	r2,4298
  842fc0:	008432b4 	movhi	r2,4298
  842fc4:	008432b4 	movhi	r2,4298
  842fc8:	008432b4 	movhi	r2,4298
  842fcc:	008432b4 	movhi	r2,4298
  842fd0:	00843120 	cmpeqi	r2,zero,4292
  842fd4:	008432b4 	movhi	r2,4298
  842fd8:	008432b4 	movhi	r2,4298
  842fdc:	008432b4 	movhi	r2,4298
  842fe0:	008432b4 	movhi	r2,4298
  842fe4:	008434f8 	rdprs	r2,zero,4307
  842fe8:	008432b4 	movhi	r2,4298
  842fec:	008432b4 	movhi	r2,4298
  842ff0:	008432b4 	movhi	r2,4298
  842ff4:	008432b4 	movhi	r2,4298
  842ff8:	008432b4 	movhi	r2,4298
  842ffc:	00843464 	muli	r2,zero,4305
  843000:	00843464 	muli	r2,zero,4305
  843004:	00843464 	muli	r2,zero,4305
  843008:	00843464 	muli	r2,zero,4305
  84300c:	00843464 	muli	r2,zero,4305
  843010:	00843464 	muli	r2,zero,4305
  843014:	00843464 	muli	r2,zero,4305
  843018:	00843464 	muli	r2,zero,4305
  84301c:	00843464 	muli	r2,zero,4305
  843020:	00843464 	muli	r2,zero,4305
  843024:	008432b4 	movhi	r2,4298
  843028:	008432b4 	movhi	r2,4298
  84302c:	008432b4 	movhi	r2,4298
  843030:	008432b4 	movhi	r2,4298
  843034:	008432b4 	movhi	r2,4298
  843038:	008432b4 	movhi	r2,4298
  84303c:	008432b4 	movhi	r2,4298
  843040:	008432b4 	movhi	r2,4298
  843044:	008432b4 	movhi	r2,4298
  843048:	008432b4 	movhi	r2,4298
  84304c:	00843438 	rdprs	r2,zero,4304
  843050:	008432b4 	movhi	r2,4298
  843054:	008432b4 	movhi	r2,4298
  843058:	008432b4 	movhi	r2,4298
  84305c:	008432b4 	movhi	r2,4298
  843060:	008432b4 	movhi	r2,4298
  843064:	008432b4 	movhi	r2,4298
  843068:	008432b4 	movhi	r2,4298
  84306c:	008434bc 	xorhi	r2,zero,4306
  843070:	008432b4 	movhi	r2,4298
  843074:	008432b4 	movhi	r2,4298
  843078:	00843494 	movui	r2,4306
  84307c:	008432b4 	movhi	r2,4298
  843080:	008432b4 	movhi	r2,4298
  843084:	008432b4 	movhi	r2,4298
  843088:	008432b4 	movhi	r2,4298
  84308c:	008432b4 	movhi	r2,4298
  843090:	008432b4 	movhi	r2,4298
  843094:	008432b4 	movhi	r2,4298
  843098:	008432b4 	movhi	r2,4298
  84309c:	008434d0 	cmplti	r2,zero,4307
  8430a0:	008432b4 	movhi	r2,4298
  8430a4:	008432b4 	movhi	r2,4298
  8430a8:	008433ac 	andhi	r2,zero,4302
  8430ac:	008432b4 	movhi	r2,4298
  8430b0:	008432b4 	movhi	r2,4298
  8430b4:	008432b4 	movhi	r2,4298
  8430b8:	008432b4 	movhi	r2,4298
  8430bc:	008432b4 	movhi	r2,4298
  8430c0:	008432b4 	movhi	r2,4298
  8430c4:	008432b4 	movhi	r2,4298
  8430c8:	00843330 	cmpltui	r2,zero,4300
  8430cc:	00843308 	cmpgei	r2,zero,4300
  8430d0:	008432b4 	movhi	r2,4298
  8430d4:	008432b4 	movhi	r2,4298
  8430d8:	008432b4 	movhi	r2,4298
  8430dc:	008432f4 	movhi	r2,4299
  8430e0:	0084350c 	andi	r2,zero,4308
  8430e4:	008432b4 	movhi	r2,4298
  8430e8:	008432b4 	movhi	r2,4298
  8430ec:	0084329c 	xori	r2,zero,4298
  8430f0:	008432b4 	movhi	r2,4298
  8430f4:	00843270 	cmpltui	r2,zero,4297
  8430f8:	00843248 	cmpgei	r2,zero,4297
  8430fc:	0084321c 	xori	r2,zero,4296
  843100:	008432b4 	movhi	r2,4298
  843104:	008432b4 	movhi	r2,4298
  843108:	00843208 	cmpgei	r2,zero,4296
  84310c:	008432b4 	movhi	r2,4298
  843110:	00843190 	cmplti	r2,zero,4294
  843114:	008432b4 	movhi	r2,4298
  843118:	008432b4 	movhi	r2,4298
  84311c:	008434d0 	cmplti	r2,zero,4307
  843120:	a829883a 	mov	r20,r21
  843124:	e0800117 	ldw	r2,4(fp)
  843128:	0081e40e 	bge	zero,r2,8438bc <__ssvfiscanf_r+0xad8>
  84312c:	e0800017 	ldw	r2,0(fp)
  843130:	a0ffffc3 	ldbu	r3,-1(r20)
  843134:	11000003 	ldbu	r4,0(r2)
  843138:	20ff6d1e 	bne	r4,r3,842ef0 <__alt_mem_epcs_flash_controller_0+0xff839ef0>
  84313c:	e0c00117 	ldw	r3,4(fp)
  843140:	10800044 	addi	r2,r2,1
  843144:	e0800015 	stw	r2,0(fp)
  843148:	18bfffc4 	addi	r2,r3,-1
  84314c:	e0800115 	stw	r2,4(fp)
  843150:	9cc00044 	addi	r19,r19,1
  843154:	a00d883a 	mov	r6,r20
  843158:	003f6106 	br	842ee0 <__alt_mem_epcs_flash_controller_0+0xff839ee0>
  84315c:	00bfffc4 	movi	r2,-1
  843160:	dfc06417 	ldw	ra,400(sp)
  843164:	df006317 	ldw	fp,396(sp)
  843168:	ddc06217 	ldw	r23,392(sp)
  84316c:	dd806117 	ldw	r22,388(sp)
  843170:	dd406017 	ldw	r21,384(sp)
  843174:	dd005f17 	ldw	r20,380(sp)
  843178:	dcc05e17 	ldw	r19,376(sp)
  84317c:	dc805d17 	ldw	r18,372(sp)
  843180:	dc405c17 	ldw	r17,368(sp)
  843184:	dc005b17 	ldw	r16,364(sp)
  843188:	dec06504 	addi	sp,sp,404
  84318c:	f800283a 	ret
  843190:	e0800117 	ldw	r2,4(fp)
  843194:	202f883a 	mov	r23,r4
  843198:	0081f20e 	bge	zero,r2,843964 <__ssvfiscanf_r+0xb80>
  84319c:	00802134 	movhi	r2,132
  8431a0:	10841204 	addi	r2,r2,4168
  8431a4:	02c00284 	movi	r11,10
  8431a8:	d8805215 	stw	r2,328(sp)
  8431ac:	dac05015 	stw	r11,320(sp)
  8431b0:	050000c4 	movi	r20,3
  8431b4:	e0800017 	ldw	r2,0(fp)
  8431b8:	00000206 	br	8431c4 <__ssvfiscanf_r+0x3e0>
  8431bc:	10800044 	addi	r2,r2,1
  8431c0:	e0800015 	stw	r2,0(fp)
  8431c4:	11000003 	ldbu	r4,0(r2)
  8431c8:	20c03fcc 	andi	r3,r4,255
  8431cc:	b0c7883a 	add	r3,r22,r3
  8431d0:	18c00043 	ldbu	r3,1(r3)
  8431d4:	1940020c 	andi	r5,r3,8
  8431d8:	2801ee26 	beq	r5,zero,843994 <__ssvfiscanf_r+0xbb0>
  8431dc:	e0c00117 	ldw	r3,4(fp)
  8431e0:	9cc00044 	addi	r19,r19,1
  8431e4:	18ffffc4 	addi	r3,r3,-1
  8431e8:	e0c00115 	stw	r3,4(fp)
  8431ec:	00fff316 	blt	zero,r3,8431bc <__alt_mem_epcs_flash_controller_0+0xff83a1bc>
  8431f0:	e00b883a 	mov	r5,fp
  8431f4:	8809883a 	mov	r4,r17
  8431f8:	0842c740 	call	842c74 <__ssrefill_r>
  8431fc:	10016a1e 	bne	r2,zero,8437a8 <__ssvfiscanf_r+0x9c4>
  843200:	95800017 	ldw	r22,0(r18)
  843204:	003feb06 	br	8431b4 <__alt_mem_epcs_flash_controller_0+0xff83a1b4>
  843208:	e0800117 	ldw	r2,4(fp)
  84320c:	202f883a 	mov	r23,r4
  843210:	0081c80e 	bge	zero,r2,843934 <__ssvfiscanf_r+0xb50>
  843214:	05000084 	movi	r20,2
  843218:	003fe606 	br	8431b4 <__alt_mem_epcs_flash_controller_0+0xff83a1b4>
  84321c:	e0800117 	ldw	r2,4(fp)
  843220:	202f883a 	mov	r23,r4
  843224:	84008814 	ori	r16,r16,544
  843228:	0080ad0e 	bge	zero,r2,8434e0 <__ssvfiscanf_r+0x6fc>
  84322c:	00802134 	movhi	r2,132
  843230:	10841204 	addi	r2,r2,4168
  843234:	02c00404 	movi	r11,16
  843238:	d8805215 	stw	r2,328(sp)
  84323c:	dac05015 	stw	r11,320(sp)
  843240:	050000c4 	movi	r20,3
  843244:	003fdb06 	br	8431b4 <__alt_mem_epcs_flash_controller_0+0xff83a1b4>
  843248:	e0800117 	ldw	r2,4(fp)
  84324c:	202f883a 	mov	r23,r4
  843250:	0080940e 	bge	zero,r2,8434a4 <__ssvfiscanf_r+0x6c0>
  843254:	00802134 	movhi	r2,132
  843258:	10841204 	addi	r2,r2,4168
  84325c:	02c00204 	movi	r11,8
  843260:	d8805215 	stw	r2,328(sp)
  843264:	dac05015 	stw	r11,320(sp)
  843268:	050000c4 	movi	r20,3
  84326c:	003fd106 	br	8431b4 <__alt_mem_epcs_flash_controller_0+0xff83a1b4>
  843270:	8080040c 	andi	r2,r16,16
  843274:	1000e41e 	bne	r2,zero,843608 <__ssvfiscanf_r+0x824>
  843278:	8080010c 	andi	r2,r16,4
  84327c:	10019926 	beq	r2,zero,8438e4 <__ssvfiscanf_r+0xb00>
  843280:	dac04f17 	ldw	r11,316(sp)
  843284:	a829883a 	mov	r20,r21
  843288:	58800017 	ldw	r2,0(r11)
  84328c:	5ac00104 	addi	r11,r11,4
  843290:	dac04f15 	stw	r11,316(sp)
  843294:	14c0000d 	sth	r19,0(r2)
  843298:	003f1006 	br	842edc <__alt_mem_epcs_flash_controller_0+0xff839edc>
  84329c:	a5c00043 	ldbu	r23,1(r20)
  8432a0:	b8c18b26 	beq	r23,r3,8438d0 <__ssvfiscanf_r+0xaec>
  8432a4:	a829883a 	mov	r20,r21
  8432a8:	84000054 	ori	r16,r16,1
  8432ac:	a5400044 	addi	r21,r20,1
  8432b0:	3dff1c2e 	bgeu	r7,r23,842f24 <__alt_mem_epcs_flash_controller_0+0xff839f24>
  8432b4:	b80d883a 	mov	r6,r23
  8432b8:	b185883a 	add	r2,r22,r6
  8432bc:	10800043 	ldbu	r2,1(r2)
  8432c0:	00c00044 	movi	r3,1
  8432c4:	202f883a 	mov	r23,r4
  8432c8:	108000cc 	andi	r2,r2,3
  8432cc:	10c17226 	beq	r2,r3,843898 <__ssvfiscanf_r+0xab4>
  8432d0:	e0800117 	ldw	r2,4(fp)
  8432d4:	0081730e 	bge	zero,r2,8438a4 <__ssvfiscanf_r+0xac0>
  8432d8:	00802134 	movhi	r2,132
  8432dc:	1082b404 	addi	r2,r2,2768
  8432e0:	02c00284 	movi	r11,10
  8432e4:	d8805215 	stw	r2,328(sp)
  8432e8:	dac05015 	stw	r11,320(sp)
  8432ec:	050000c4 	movi	r20,3
  8432f0:	003fb006 	br	8431b4 <__alt_mem_epcs_flash_controller_0+0xff83a1b4>
  8432f4:	a1400043 	ldbu	r5,1(r20)
  8432f8:	84000114 	ori	r16,r16,4
  8432fc:	a829883a 	mov	r20,r21
  843300:	2dc03fcc 	andi	r23,r5,255
  843304:	003f0506 	br	842f1c <__alt_mem_epcs_flash_controller_0+0xff839f1c>
  843308:	e0800117 	ldw	r2,4(fp)
  84330c:	202f883a 	mov	r23,r4
  843310:	0081640e 	bge	zero,r2,8438a4 <__ssvfiscanf_r+0xac0>
  843314:	02c02134 	movhi	r11,132
  843318:	5ac2b404 	addi	r11,r11,2768
  84331c:	dac05215 	stw	r11,328(sp)
  843320:	02c00284 	movi	r11,10
  843324:	dac05015 	stw	r11,320(sp)
  843328:	050000c4 	movi	r20,3
  84332c:	003fa106 	br	8431b4 <__alt_mem_epcs_flash_controller_0+0xff83a1b4>
  843330:	e0800117 	ldw	r2,4(fp)
  843334:	202f883a 	mov	r23,r4
  843338:	00812c0e 	bge	zero,r2,8437ec <__ssvfiscanf_r+0xa08>
  84333c:	b800011e 	bne	r23,zero,843344 <__ssvfiscanf_r+0x560>
  843340:	05c00044 	movi	r23,1
  843344:	8080004c 	andi	r2,r16,1
  843348:	1000791e 	bne	r2,zero,843530 <__ssvfiscanf_r+0x74c>
  84334c:	8400040c 	andi	r16,r16,16
  843350:	80013f26 	beq	r16,zero,843850 <__ssvfiscanf_r+0xa6c>
  843354:	0021883a 	mov	r16,zero
  843358:	00000806 	br	84337c <__ssvfiscanf_r+0x598>
  84335c:	1887883a 	add	r3,r3,r2
  843360:	e00b883a 	mov	r5,fp
  843364:	8809883a 	mov	r4,r17
  843368:	e0c00015 	stw	r3,0(fp)
  84336c:	80a1883a 	add	r16,r16,r2
  843370:	b8afc83a 	sub	r23,r23,r2
  843374:	0842c740 	call	842c74 <__ssrefill_r>
  843378:	1001331e 	bne	r2,zero,843848 <__ssvfiscanf_r+0xa64>
  84337c:	e0800117 	ldw	r2,4(fp)
  843380:	e0c00017 	ldw	r3,0(fp)
  843384:	15fff516 	blt	r2,r23,84335c <__alt_mem_epcs_flash_controller_0+0xff83a35c>
  843388:	15c5c83a 	sub	r2,r2,r23
  84338c:	1dd5883a 	add	r10,r3,r23
  843390:	85e1883a 	add	r16,r16,r23
  843394:	e0800115 	stw	r2,4(fp)
  843398:	e2800015 	stw	r10,0(fp)
  84339c:	a829883a 	mov	r20,r21
  8433a0:	9c27883a 	add	r19,r19,r16
  8433a4:	a00d883a 	mov	r6,r20
  8433a8:	003ecd06 	br	842ee0 <__alt_mem_epcs_flash_controller_0+0xff839ee0>
  8433ac:	202f883a 	mov	r23,r4
  8433b0:	a80b883a 	mov	r5,r21
  8433b4:	d9000104 	addi	r4,sp,4
  8433b8:	083eeb80 	call	83eeb8 <__sccl>
  8433bc:	1029883a 	mov	r20,r2
  8433c0:	e0800117 	ldw	r2,4(fp)
  8433c4:	0081620e 	bge	zero,r2,843950 <__ssvfiscanf_r+0xb6c>
  8433c8:	e1000017 	ldw	r4,0(fp)
  8433cc:	20800003 	ldbu	r2,0(r4)
  8433d0:	b8009026 	beq	r23,zero,843614 <__ssvfiscanf_r+0x830>
  8433d4:	8400040c 	andi	r16,r16,16
  8433d8:	80009126 	beq	r16,zero,843620 <__ssvfiscanf_r+0x83c>
  8433dc:	b821883a 	mov	r16,r23
  8433e0:	002b883a 	mov	r21,zero
  8433e4:	00000106 	br	8433ec <__ssvfiscanf_r+0x608>
  8433e8:	20800003 	ldbu	r2,0(r4)
  8433ec:	10803fcc 	andi	r2,r2,255
  8433f0:	d8c00104 	addi	r3,sp,4
  8433f4:	1885883a 	add	r2,r3,r2
  8433f8:	10800007 	ldb	r2,0(r2)
  8433fc:	10011026 	beq	r2,zero,843840 <__ssvfiscanf_r+0xa5c>
  843400:	e0800117 	ldw	r2,4(fp)
  843404:	21000044 	addi	r4,r4,1
  843408:	ad400044 	addi	r21,r21,1
  84340c:	10bfffc4 	addi	r2,r2,-1
  843410:	e0800115 	stw	r2,4(fp)
  843414:	e1000015 	stw	r4,0(fp)
  843418:	adc0eb26 	beq	r21,r23,8437c8 <__ssvfiscanf_r+0x9e4>
  84341c:	00bff216 	blt	zero,r2,8433e8 <__alt_mem_epcs_flash_controller_0+0xff83a3e8>
  843420:	e00b883a 	mov	r5,fp
  843424:	8809883a 	mov	r4,r17
  843428:	0842c740 	call	842c74 <__ssrefill_r>
  84342c:	1000e51e 	bne	r2,zero,8437c4 <__ssvfiscanf_r+0x9e0>
  843430:	e1000017 	ldw	r4,0(fp)
  843434:	003fec06 	br	8433e8 <__alt_mem_epcs_flash_controller_0+0xff83a3e8>
  843438:	e0800117 	ldw	r2,4(fp)
  84343c:	202f883a 	mov	r23,r4
  843440:	84000054 	ori	r16,r16,1
  843444:	0081170e 	bge	zero,r2,8438a4 <__ssvfiscanf_r+0xac0>
  843448:	00c02134 	movhi	r3,132
  84344c:	18c2b404 	addi	r3,r3,2768
  843450:	02c00284 	movi	r11,10
  843454:	d8c05215 	stw	r3,328(sp)
  843458:	dac05015 	stw	r11,320(sp)
  84345c:	050000c4 	movi	r20,3
  843460:	003f5406 	br	8431b4 <__alt_mem_epcs_flash_controller_0+0xff83a1b4>
  843464:	01400284 	movi	r5,10
  843468:	d8c05a15 	stw	r3,360(sp)
  84346c:	d9c05915 	stw	r7,356(sp)
  843470:	08301e80 	call	8301e8 <__mulsi3>
  843474:	a1400043 	ldbu	r5,1(r20)
  843478:	15c5883a 	add	r2,r2,r23
  84347c:	113ff404 	addi	r4,r2,-48
  843480:	a829883a 	mov	r20,r21
  843484:	2dc03fcc 	andi	r23,r5,255
  843488:	d8c05a17 	ldw	r3,360(sp)
  84348c:	d9c05917 	ldw	r7,356(sp)
  843490:	003ea206 	br	842f1c <__alt_mem_epcs_flash_controller_0+0xff839f1c>
  843494:	e0800117 	ldw	r2,4(fp)
  843498:	202f883a 	mov	r23,r4
  84349c:	84000054 	ori	r16,r16,1
  8434a0:	00bf6c16 	blt	zero,r2,843254 <__alt_mem_epcs_flash_controller_0+0xff83a254>
  8434a4:	e00b883a 	mov	r5,fp
  8434a8:	8809883a 	mov	r4,r17
  8434ac:	0842c740 	call	842c74 <__ssrefill_r>
  8434b0:	1000bd1e 	bne	r2,zero,8437a8 <__ssvfiscanf_r+0x9c4>
  8434b4:	95800017 	ldw	r22,0(r18)
  8434b8:	003f6606 	br	843254 <__alt_mem_epcs_flash_controller_0+0xff83a254>
  8434bc:	a1400043 	ldbu	r5,1(r20)
  8434c0:	84000094 	ori	r16,r16,2
  8434c4:	a829883a 	mov	r20,r21
  8434c8:	2dc03fcc 	andi	r23,r5,255
  8434cc:	003e9306 	br	842f1c <__alt_mem_epcs_flash_controller_0+0xff839f1c>
  8434d0:	e0800117 	ldw	r2,4(fp)
  8434d4:	202f883a 	mov	r23,r4
  8434d8:	84008014 	ori	r16,r16,512
  8434dc:	00bf5316 	blt	zero,r2,84322c <__alt_mem_epcs_flash_controller_0+0xff83a22c>
  8434e0:	e00b883a 	mov	r5,fp
  8434e4:	8809883a 	mov	r4,r17
  8434e8:	0842c740 	call	842c74 <__ssrefill_r>
  8434ec:	1000ae1e 	bne	r2,zero,8437a8 <__ssvfiscanf_r+0x9c4>
  8434f0:	95800017 	ldw	r22,0(r18)
  8434f4:	003f4d06 	br	84322c <__alt_mem_epcs_flash_controller_0+0xff83a22c>
  8434f8:	a1400043 	ldbu	r5,1(r20)
  8434fc:	84000414 	ori	r16,r16,16
  843500:	a829883a 	mov	r20,r21
  843504:	2dc03fcc 	andi	r23,r5,255
  843508:	003e8406 	br	842f1c <__alt_mem_epcs_flash_controller_0+0xff839f1c>
  84350c:	e0800117 	ldw	r2,4(fp)
  843510:	202f883a 	mov	r23,r4
  843514:	0081190e 	bge	zero,r2,84397c <__ssvfiscanf_r+0xb98>
  843518:	00802134 	movhi	r2,132
  84351c:	1082b404 	addi	r2,r2,2768
  843520:	d8805215 	stw	r2,328(sp)
  843524:	d8005015 	stw	zero,320(sp)
  843528:	050000c4 	movi	r20,3
  84352c:	003f2106 	br	8431b4 <__alt_mem_epcs_flash_controller_0+0xff83a1b4>
  843530:	d8c04b04 	addi	r3,sp,300
  843534:	8400040c 	andi	r16,r16,16
  843538:	01800204 	movi	r6,8
  84353c:	000b883a 	mov	r5,zero
  843540:	1809883a 	mov	r4,r3
  843544:	dc005415 	stw	r16,336(sp)
  843548:	d8c05315 	stw	r3,332(sp)
  84354c:	0833d940 	call	833d94 <memset>
  843550:	dc005417 	ldw	r16,336(sp)
  843554:	8000a026 	beq	r16,zero,8437d8 <__ssvfiscanf_r+0x9f4>
  843558:	002d883a 	mov	r22,zero
  84355c:	0021883a 	mov	r16,zero
  843560:	083d73c0 	call	83d73c <__locale_mb_cur_max>
  843564:	14009026 	beq	r2,r16,8437a8 <__ssvfiscanf_r+0x9c4>
  843568:	e0800017 	ldw	r2,0(fp)
  84356c:	e0c00117 	ldw	r3,4(fp)
  843570:	dac05317 	ldw	r11,332(sp)
  843574:	12000003 	ldbu	r8,0(r2)
  843578:	18ffffc4 	addi	r3,r3,-1
  84357c:	10800044 	addi	r2,r2,1
  843580:	d9004104 	addi	r4,sp,260
  843584:	e0c00115 	stw	r3,4(fp)
  843588:	e0800015 	stw	r2,0(fp)
  84358c:	85000044 	addi	r20,r16,1
  843590:	dac00015 	stw	r11,0(sp)
  843594:	2421883a 	add	r16,r4,r16
  843598:	200d883a 	mov	r6,r4
  84359c:	a00f883a 	mov	r7,r20
  8435a0:	b00b883a 	mov	r5,r22
  8435a4:	8809883a 	mov	r4,r17
  8435a8:	82000005 	stb	r8,0(r16)
  8435ac:	083d9ac0 	call	83d9ac <_mbrtowc_r>
  8435b0:	00ffffc4 	movi	r3,-1
  8435b4:	10c07c26 	beq	r2,r3,8437a8 <__ssvfiscanf_r+0x9c4>
  8435b8:	1000911e 	bne	r2,zero,843800 <__ssvfiscanf_r+0xa1c>
  8435bc:	dac05417 	ldw	r11,336(sp)
  8435c0:	5800951e 	bne	r11,zero,843818 <__ssvfiscanf_r+0xa34>
  8435c4:	b0000015 	stw	zero,0(r22)
  8435c8:	9d27883a 	add	r19,r19,r20
  8435cc:	b8ef883a 	add	r23,r23,r3
  8435d0:	b5800104 	addi	r22,r22,4
  8435d4:	e0800117 	ldw	r2,4(fp)
  8435d8:	0021883a 	mov	r16,zero
  8435dc:	00807c16 	blt	zero,r2,8437d0 <__ssvfiscanf_r+0x9ec>
  8435e0:	e00b883a 	mov	r5,fp
  8435e4:	8809883a 	mov	r4,r17
  8435e8:	0842c740 	call	842c74 <__ssrefill_r>
  8435ec:	10007826 	beq	r2,zero,8437d0 <__ssvfiscanf_r+0x9ec>
  8435f0:	80006d1e 	bne	r16,zero,8437a8 <__ssvfiscanf_r+0x9c4>
  8435f4:	d8c05417 	ldw	r3,336(sp)
  8435f8:	1800031e 	bne	r3,zero,843608 <__ssvfiscanf_r+0x824>
  8435fc:	dac05117 	ldw	r11,324(sp)
  843600:	5ac00044 	addi	r11,r11,1
  843604:	dac05115 	stw	r11,324(sp)
  843608:	a829883a 	mov	r20,r21
  84360c:	a00d883a 	mov	r6,r20
  843610:	003e3306 	br	842ee0 <__alt_mem_epcs_flash_controller_0+0xff839ee0>
  843614:	8400040c 	andi	r16,r16,16
  843618:	05ffffc4 	movi	r23,-1
  84361c:	803f6f1e 	bne	r16,zero,8433dc <__alt_mem_epcs_flash_controller_0+0xff83a3dc>
  843620:	dac04f17 	ldw	r11,316(sp)
  843624:	babfffc4 	addi	r10,r23,-1
  843628:	5d400017 	ldw	r21,0(r11)
  84362c:	5c000104 	addi	r16,r11,4
  843630:	a807883a 	mov	r3,r21
  843634:	aaaf883a 	add	r23,r21,r10
  843638:	00000306 	br	843648 <__ssvfiscanf_r+0x864>
  84363c:	e1000017 	ldw	r4,0(fp)
  843640:	b007883a 	mov	r3,r22
  843644:	20800003 	ldbu	r2,0(r4)
  843648:	10803fcc 	andi	r2,r2,255
  84364c:	d9400104 	addi	r5,sp,4
  843650:	2885883a 	add	r2,r5,r2
  843654:	10800007 	ldb	r2,0(r2)
  843658:	10007726 	beq	r2,zero,843838 <__ssvfiscanf_r+0xa54>
  84365c:	e0800117 	ldw	r2,4(fp)
  843660:	21400044 	addi	r5,r4,1
  843664:	e1400015 	stw	r5,0(fp)
  843668:	10bfffc4 	addi	r2,r2,-1
  84366c:	e0800115 	stw	r2,4(fp)
  843670:	20800003 	ldbu	r2,0(r4)
  843674:	1d800044 	addi	r22,r3,1
  843678:	18800005 	stb	r2,0(r3)
  84367c:	1dc00726 	beq	r3,r23,84369c <__ssvfiscanf_r+0x8b8>
  843680:	e0800117 	ldw	r2,4(fp)
  843684:	00bfed16 	blt	zero,r2,84363c <__alt_mem_epcs_flash_controller_0+0xff83a63c>
  843688:	e00b883a 	mov	r5,fp
  84368c:	8809883a 	mov	r4,r17
  843690:	0842c740 	call	842c74 <__ssrefill_r>
  843694:	103fe926 	beq	r2,zero,84363c <__alt_mem_epcs_flash_controller_0+0xff83a63c>
  843698:	ad804326 	beq	r21,r22,8437a8 <__ssvfiscanf_r+0x9c4>
  84369c:	b56bc83a 	sub	r21,r22,r21
  8436a0:	a83e1326 	beq	r21,zero,842ef0 <__alt_mem_epcs_flash_controller_0+0xff839ef0>
  8436a4:	dac05117 	ldw	r11,324(sp)
  8436a8:	b0000005 	stb	zero,0(r22)
  8436ac:	dc004f15 	stw	r16,316(sp)
  8436b0:	5ac00044 	addi	r11,r11,1
  8436b4:	dac05115 	stw	r11,324(sp)
  8436b8:	9d67883a 	add	r19,r19,r21
  8436bc:	a00d883a 	mov	r6,r20
  8436c0:	003e0706 	br	842ee0 <__alt_mem_epcs_flash_controller_0+0xff839ee0>
  8436c4:	d8c04b04 	addi	r3,sp,300
  8436c8:	8400040c 	andi	r16,r16,16
  8436cc:	01800204 	movi	r6,8
  8436d0:	000b883a 	mov	r5,zero
  8436d4:	1809883a 	mov	r4,r3
  8436d8:	d8c05315 	stw	r3,332(sp)
  8436dc:	0833d940 	call	833d94 <memset>
  8436e0:	8001eb1e 	bne	r16,zero,843e90 <__ssvfiscanf_r+0x10ac>
  8436e4:	dac04f17 	ldw	r11,316(sp)
  8436e8:	5d800017 	ldw	r22,0(r11)
  8436ec:	5ac00104 	addi	r11,r11,4
  8436f0:	dac04f15 	stw	r11,316(sp)
  8436f4:	000d883a 	mov	r6,zero
  8436f8:	3029883a 	mov	r20,r6
  8436fc:	e0800017 	ldw	r2,0(fp)
  843700:	90c00017 	ldw	r3,0(r18)
  843704:	10800003 	ldbu	r2,0(r2)
  843708:	1885883a 	add	r2,r3,r2
  84370c:	10800043 	ldbu	r2,1(r2)
  843710:	1080020c 	andi	r2,r2,8
  843714:	1001ce1e 	bne	r2,zero,843e50 <__ssvfiscanf_r+0x106c>
  843718:	b801cd26 	beq	r23,zero,843e50 <__ssvfiscanf_r+0x106c>
  84371c:	083d73c0 	call	83d73c <__locale_mb_cur_max>
  843720:	a0802126 	beq	r20,r2,8437a8 <__ssvfiscanf_r+0x9c4>
  843724:	e0800017 	ldw	r2,0(fp)
  843728:	e1000117 	ldw	r4,4(fp)
  84372c:	dac05317 	ldw	r11,332(sp)
  843730:	12000003 	ldbu	r8,0(r2)
  843734:	213fffc4 	addi	r4,r4,-1
  843738:	10800044 	addi	r2,r2,1
  84373c:	e1000115 	stw	r4,4(fp)
  843740:	d9404104 	addi	r5,sp,260
  843744:	e0800015 	stw	r2,0(fp)
  843748:	a0c00044 	addi	r3,r20,1
  84374c:	dac00015 	stw	r11,0(sp)
  843750:	2d29883a 	add	r20,r5,r20
  843754:	180f883a 	mov	r7,r3
  843758:	280d883a 	mov	r6,r5
  84375c:	8809883a 	mov	r4,r17
  843760:	a2000005 	stb	r8,0(r20)
  843764:	b00b883a 	mov	r5,r22
  843768:	d8c05a15 	stw	r3,360(sp)
  84376c:	083d9ac0 	call	83d9ac <_mbrtowc_r>
  843770:	013fffc4 	movi	r4,-1
  843774:	d8c05a17 	ldw	r3,360(sp)
  843778:	11000b26 	beq	r2,r4,8437a8 <__ssvfiscanf_r+0x9c4>
  84377c:	1001a226 	beq	r2,zero,843e08 <__ssvfiscanf_r+0x1024>
  843780:	017fff84 	movi	r5,-2
  843784:	1829883a 	mov	r20,r3
  843788:	1141e51e 	bne	r2,r5,843f20 <__ssvfiscanf_r+0x113c>
  84378c:	e0800117 	ldw	r2,4(fp)
  843790:	00bfda16 	blt	zero,r2,8436fc <__alt_mem_epcs_flash_controller_0+0xff83a6fc>
  843794:	e00b883a 	mov	r5,fp
  843798:	8809883a 	mov	r4,r17
  84379c:	0842c740 	call	842c74 <__ssrefill_r>
  8437a0:	103fd626 	beq	r2,zero,8436fc <__alt_mem_epcs_flash_controller_0+0xff83a6fc>
  8437a4:	a001aa26 	beq	r20,zero,843e50 <__ssvfiscanf_r+0x106c>
  8437a8:	dac05117 	ldw	r11,324(sp)
  8437ac:	583e6b26 	beq	r11,zero,84315c <__alt_mem_epcs_flash_controller_0+0xff83a15c>
  8437b0:	e080030b 	ldhu	r2,12(fp)
  8437b4:	1080100c 	andi	r2,r2,64
  8437b8:	103e681e 	bne	r2,zero,84315c <__alt_mem_epcs_flash_controller_0+0xff83a15c>
  8437bc:	5805883a 	mov	r2,r11
  8437c0:	003e6706 	br	843160 <__alt_mem_epcs_flash_controller_0+0xff83a160>
  8437c4:	a821883a 	mov	r16,r21
  8437c8:	802b883a 	mov	r21,r16
  8437cc:	003fba06 	br	8436b8 <__alt_mem_epcs_flash_controller_0+0xff83a6b8>
  8437d0:	b83f631e 	bne	r23,zero,843560 <__alt_mem_epcs_flash_controller_0+0xff83a560>
  8437d4:	003f8706 	br	8435f4 <__alt_mem_epcs_flash_controller_0+0xff83a5f4>
  8437d8:	dac04f17 	ldw	r11,316(sp)
  8437dc:	5d800017 	ldw	r22,0(r11)
  8437e0:	5ac00104 	addi	r11,r11,4
  8437e4:	dac04f15 	stw	r11,316(sp)
  8437e8:	003f5c06 	br	84355c <__alt_mem_epcs_flash_controller_0+0xff83a55c>
  8437ec:	e00b883a 	mov	r5,fp
  8437f0:	8809883a 	mov	r4,r17
  8437f4:	0842c740 	call	842c74 <__ssrefill_r>
  8437f8:	103ed026 	beq	r2,zero,84333c <__alt_mem_epcs_flash_controller_0+0xff83a33c>
  8437fc:	003fea06 	br	8437a8 <__alt_mem_epcs_flash_controller_0+0xff83a7a8>
  843800:	00ffff84 	movi	r3,-2
  843804:	10c0071e 	bne	r2,r3,843824 <__ssvfiscanf_r+0xa40>
  843808:	e0800117 	ldw	r2,4(fp)
  84380c:	a021883a 	mov	r16,r20
  843810:	00bf5316 	blt	zero,r2,843560 <__alt_mem_epcs_flash_controller_0+0xff83a560>
  843814:	003f7206 	br	8435e0 <__alt_mem_epcs_flash_controller_0+0xff83a5e0>
  843818:	9d27883a 	add	r19,r19,r20
  84381c:	bdffffc4 	addi	r23,r23,-1
  843820:	003f6c06 	br	8435d4 <__alt_mem_epcs_flash_controller_0+0xff83a5d4>
  843824:	dac05417 	ldw	r11,336(sp)
  843828:	9d27883a 	add	r19,r19,r20
  84382c:	bdffffc4 	addi	r23,r23,-1
  843830:	583f6726 	beq	r11,zero,8435d0 <__alt_mem_epcs_flash_controller_0+0xff83a5d0>
  843834:	003f6706 	br	8435d4 <__alt_mem_epcs_flash_controller_0+0xff83a5d4>
  843838:	182d883a 	mov	r22,r3
  84383c:	003f9706 	br	84369c <__alt_mem_epcs_flash_controller_0+0xff83a69c>
  843840:	a83f9d1e 	bne	r21,zero,8436b8 <__alt_mem_epcs_flash_controller_0+0xff83a6b8>
  843844:	003daa06 	br	842ef0 <__alt_mem_epcs_flash_controller_0+0xff839ef0>
  843848:	803ed41e 	bne	r16,zero,84339c <__alt_mem_epcs_flash_controller_0+0xff83a39c>
  84384c:	003fd606 	br	8437a8 <__alt_mem_epcs_flash_controller_0+0xff83a7a8>
  843850:	dac04f17 	ldw	r11,316(sp)
  843854:	df000015 	stw	fp,0(sp)
  843858:	b80f883a 	mov	r7,r23
  84385c:	59400017 	ldw	r5,0(r11)
  843860:	01800044 	movi	r6,1
  843864:	8809883a 	mov	r4,r17
  843868:	0842ce40 	call	842ce4 <_sfread_r>
  84386c:	dac04f17 	ldw	r11,316(sp)
  843870:	58c00104 	addi	r3,r11,4
  843874:	103fcc26 	beq	r2,zero,8437a8 <__alt_mem_epcs_flash_controller_0+0xff83a7a8>
  843878:	dac05117 	ldw	r11,324(sp)
  84387c:	a829883a 	mov	r20,r21
  843880:	98a7883a 	add	r19,r19,r2
  843884:	5ac00044 	addi	r11,r11,1
  843888:	dac05115 	stw	r11,324(sp)
  84388c:	d8c04f15 	stw	r3,316(sp)
  843890:	a00d883a 	mov	r6,r20
  843894:	003d9206 	br	842ee0 <__alt_mem_epcs_flash_controller_0+0xff839ee0>
  843898:	e0800117 	ldw	r2,4(fp)
  84389c:	80e0b03a 	or	r16,r16,r3
  8438a0:	00be8d16 	blt	zero,r2,8432d8 <__alt_mem_epcs_flash_controller_0+0xff83a2d8>
  8438a4:	e00b883a 	mov	r5,fp
  8438a8:	8809883a 	mov	r4,r17
  8438ac:	0842c740 	call	842c74 <__ssrefill_r>
  8438b0:	103fbd1e 	bne	r2,zero,8437a8 <__alt_mem_epcs_flash_controller_0+0xff83a7a8>
  8438b4:	95800017 	ldw	r22,0(r18)
  8438b8:	003e8706 	br	8432d8 <__alt_mem_epcs_flash_controller_0+0xff83a2d8>
  8438bc:	e00b883a 	mov	r5,fp
  8438c0:	8809883a 	mov	r4,r17
  8438c4:	0842c740 	call	842c74 <__ssrefill_r>
  8438c8:	103e1826 	beq	r2,zero,84312c <__alt_mem_epcs_flash_controller_0+0xff83a12c>
  8438cc:	003fb606 	br	8437a8 <__alt_mem_epcs_flash_controller_0+0xff83a7a8>
  8438d0:	a1400083 	ldbu	r5,2(r20)
  8438d4:	84000094 	ori	r16,r16,2
  8438d8:	a5000084 	addi	r20,r20,2
  8438dc:	2dc03fcc 	andi	r23,r5,255
  8438e0:	003d8e06 	br	842f1c <__alt_mem_epcs_flash_controller_0+0xff839f1c>
  8438e4:	8080004c 	andi	r2,r16,1
  8438e8:	10000b1e 	bne	r2,zero,843918 <__ssvfiscanf_r+0xb34>
  8438ec:	8400008c 	andi	r16,r16,2
  8438f0:	80000926 	beq	r16,zero,843918 <__ssvfiscanf_r+0xb34>
  8438f4:	dac04f17 	ldw	r11,316(sp)
  8438f8:	9807d7fa 	srai	r3,r19,31
  8438fc:	a829883a 	mov	r20,r21
  843900:	58800017 	ldw	r2,0(r11)
  843904:	5ac00104 	addi	r11,r11,4
  843908:	dac04f15 	stw	r11,316(sp)
  84390c:	14c00015 	stw	r19,0(r2)
  843910:	10c00115 	stw	r3,4(r2)
  843914:	003d7106 	br	842edc <__alt_mem_epcs_flash_controller_0+0xff839edc>
  843918:	dac04f17 	ldw	r11,316(sp)
  84391c:	a829883a 	mov	r20,r21
  843920:	58800017 	ldw	r2,0(r11)
  843924:	5ac00104 	addi	r11,r11,4
  843928:	dac04f15 	stw	r11,316(sp)
  84392c:	14c00015 	stw	r19,0(r2)
  843930:	003d6a06 	br	842edc <__alt_mem_epcs_flash_controller_0+0xff839edc>
  843934:	e00b883a 	mov	r5,fp
  843938:	8809883a 	mov	r4,r17
  84393c:	0842c740 	call	842c74 <__ssrefill_r>
  843940:	103f991e 	bne	r2,zero,8437a8 <__alt_mem_epcs_flash_controller_0+0xff83a7a8>
  843944:	95800017 	ldw	r22,0(r18)
  843948:	05000084 	movi	r20,2
  84394c:	003e1906 	br	8431b4 <__alt_mem_epcs_flash_controller_0+0xff83a1b4>
  843950:	e00b883a 	mov	r5,fp
  843954:	8809883a 	mov	r4,r17
  843958:	0842c740 	call	842c74 <__ssrefill_r>
  84395c:	103e9a26 	beq	r2,zero,8433c8 <__alt_mem_epcs_flash_controller_0+0xff83a3c8>
  843960:	003f9106 	br	8437a8 <__alt_mem_epcs_flash_controller_0+0xff83a7a8>
  843964:	e00b883a 	mov	r5,fp
  843968:	8809883a 	mov	r4,r17
  84396c:	0842c740 	call	842c74 <__ssrefill_r>
  843970:	103f8d1e 	bne	r2,zero,8437a8 <__alt_mem_epcs_flash_controller_0+0xff83a7a8>
  843974:	95800017 	ldw	r22,0(r18)
  843978:	003e0806 	br	84319c <__alt_mem_epcs_flash_controller_0+0xff83a19c>
  84397c:	e00b883a 	mov	r5,fp
  843980:	8809883a 	mov	r4,r17
  843984:	0842c740 	call	842c74 <__ssrefill_r>
  843988:	103f871e 	bne	r2,zero,8437a8 <__alt_mem_epcs_flash_controller_0+0xff83a7a8>
  84398c:	95800017 	ldw	r22,0(r18)
  843990:	003ee106 	br	843518 <__alt_mem_epcs_flash_controller_0+0xff83a518>
  843994:	014000c4 	movi	r5,3
  843998:	a140ae1e 	bne	r20,r5,843c54 <__ssvfiscanf_r+0xe70>
  84399c:	b8ffffc4 	addi	r3,r23,-1
  8439a0:	01400984 	movi	r5,38
  8439a4:	28c0d82e 	bgeu	r5,r3,843d08 <__ssvfiscanf_r+0xf24>
  8439a8:	b9bff644 	addi	r6,r23,-39
  8439ac:	05c009c4 	movi	r23,39
  8439b0:	85836014 	ori	r22,r16,3456
  8439b4:	0021883a 	mov	r16,zero
  8439b8:	a815883a 	mov	r10,r21
  8439bc:	982b883a 	mov	r21,r19
  8439c0:	8027883a 	mov	r19,r16
  8439c4:	dc005017 	ldw	r16,320(sp)
  8439c8:	dd004104 	addi	r20,sp,260
  8439cc:	02401344 	movi	r9,77
  8439d0:	01c08004 	movi	r7,512
  8439d4:	00ff7fc4 	movi	r3,-513
  8439d8:	023fdfc4 	movi	r8,-129
  8439dc:	217ff544 	addi	r5,r4,-43
  8439e0:	29403fcc 	andi	r5,r5,255
  8439e4:	49408836 	bltu	r9,r5,843c08 <__ssvfiscanf_r+0xe24>
  8439e8:	280a90ba 	slli	r5,r5,2
  8439ec:	02c02134 	movhi	r11,132
  8439f0:	5ace8004 	addi	r11,r11,14848
  8439f4:	2acb883a 	add	r5,r5,r11
  8439f8:	29400017 	ldw	r5,0(r5)
  8439fc:	2800683a 	jmp	r5
  843a00:	00843b94 	movui	r2,4334
  843a04:	00843c08 	cmpgei	r2,zero,4336
  843a08:	00843b94 	movui	r2,4334
  843a0c:	00843c08 	cmpgei	r2,zero,4336
  843a10:	00843c08 	cmpgei	r2,zero,4336
  843a14:	00843bc4 	movi	r2,4335
  843a18:	00843ba4 	muli	r2,zero,4334
  843a1c:	00843ba4 	muli	r2,zero,4334
  843a20:	00843ba4 	muli	r2,zero,4334
  843a24:	00843ba4 	muli	r2,zero,4334
  843a28:	00843ba4 	muli	r2,zero,4334
  843a2c:	00843ba4 	muli	r2,zero,4334
  843a30:	00843ba4 	muli	r2,zero,4334
  843a34:	00843bec 	andhi	r2,zero,4335
  843a38:	00843bec 	andhi	r2,zero,4335
  843a3c:	00843c08 	cmpgei	r2,zero,4336
  843a40:	00843c08 	cmpgei	r2,zero,4336
  843a44:	00843c08 	cmpgei	r2,zero,4336
  843a48:	00843c08 	cmpgei	r2,zero,4336
  843a4c:	00843c08 	cmpgei	r2,zero,4336
  843a50:	00843c08 	cmpgei	r2,zero,4336
  843a54:	00843c08 	cmpgei	r2,zero,4336
  843a58:	00843b80 	call	843b8 <OSCtxSw_SWITCH_PC+0x84378>
  843a5c:	00843b80 	call	843b8 <OSCtxSw_SWITCH_PC+0x84378>
  843a60:	00843b80 	call	843b8 <OSCtxSw_SWITCH_PC+0x84378>
  843a64:	00843b80 	call	843b8 <OSCtxSw_SWITCH_PC+0x84378>
  843a68:	00843b80 	call	843b8 <OSCtxSw_SWITCH_PC+0x84378>
  843a6c:	00843b80 	call	843b8 <OSCtxSw_SWITCH_PC+0x84378>
  843a70:	00843c08 	cmpgei	r2,zero,4336
  843a74:	00843c08 	cmpgei	r2,zero,4336
  843a78:	00843c08 	cmpgei	r2,zero,4336
  843a7c:	00843c08 	cmpgei	r2,zero,4336
  843a80:	00843c08 	cmpgei	r2,zero,4336
  843a84:	00843c08 	cmpgei	r2,zero,4336
  843a88:	00843c08 	cmpgei	r2,zero,4336
  843a8c:	00843c08 	cmpgei	r2,zero,4336
  843a90:	00843c08 	cmpgei	r2,zero,4336
  843a94:	00843c08 	cmpgei	r2,zero,4336
  843a98:	00843c08 	cmpgei	r2,zero,4336
  843a9c:	00843c08 	cmpgei	r2,zero,4336
  843aa0:	00843c08 	cmpgei	r2,zero,4336
  843aa4:	00843c08 	cmpgei	r2,zero,4336
  843aa8:	00843c08 	cmpgei	r2,zero,4336
  843aac:	00843c08 	cmpgei	r2,zero,4336
  843ab0:	00843c08 	cmpgei	r2,zero,4336
  843ab4:	00843b38 	rdprs	r2,zero,4332
  843ab8:	00843c08 	cmpgei	r2,zero,4336
  843abc:	00843c08 	cmpgei	r2,zero,4336
  843ac0:	00843c08 	cmpgei	r2,zero,4336
  843ac4:	00843c08 	cmpgei	r2,zero,4336
  843ac8:	00843c08 	cmpgei	r2,zero,4336
  843acc:	00843c08 	cmpgei	r2,zero,4336
  843ad0:	00843c08 	cmpgei	r2,zero,4336
  843ad4:	00843c08 	cmpgei	r2,zero,4336
  843ad8:	00843b80 	call	843b8 <OSCtxSw_SWITCH_PC+0x84378>
  843adc:	00843b80 	call	843b8 <OSCtxSw_SWITCH_PC+0x84378>
  843ae0:	00843b80 	call	843b8 <OSCtxSw_SWITCH_PC+0x84378>
  843ae4:	00843b80 	call	843b8 <OSCtxSw_SWITCH_PC+0x84378>
  843ae8:	00843b80 	call	843b8 <OSCtxSw_SWITCH_PC+0x84378>
  843aec:	00843b80 	call	843b8 <OSCtxSw_SWITCH_PC+0x84378>
  843af0:	00843c08 	cmpgei	r2,zero,4336
  843af4:	00843c08 	cmpgei	r2,zero,4336
  843af8:	00843c08 	cmpgei	r2,zero,4336
  843afc:	00843c08 	cmpgei	r2,zero,4336
  843b00:	00843c08 	cmpgei	r2,zero,4336
  843b04:	00843c08 	cmpgei	r2,zero,4336
  843b08:	00843c08 	cmpgei	r2,zero,4336
  843b0c:	00843c08 	cmpgei	r2,zero,4336
  843b10:	00843c08 	cmpgei	r2,zero,4336
  843b14:	00843c08 	cmpgei	r2,zero,4336
  843b18:	00843c08 	cmpgei	r2,zero,4336
  843b1c:	00843c08 	cmpgei	r2,zero,4336
  843b20:	00843c08 	cmpgei	r2,zero,4336
  843b24:	00843c08 	cmpgei	r2,zero,4336
  843b28:	00843c08 	cmpgei	r2,zero,4336
  843b2c:	00843c08 	cmpgei	r2,zero,4336
  843b30:	00843c08 	cmpgei	r2,zero,4336
  843b34:	00843b38 	rdprs	r2,zero,4332
  843b38:	b141800c 	andi	r5,r22,1536
  843b3c:	29c0321e 	bne	r5,r7,843c08 <__ssvfiscanf_r+0xe24>
  843b40:	b0ec703a 	and	r22,r22,r3
  843b44:	b5814014 	ori	r22,r22,1280
  843b48:	04000404 	movi	r16,16
  843b4c:	a1000005 	stb	r4,0(r20)
  843b50:	a5000044 	addi	r20,r20,1
  843b54:	e1000117 	ldw	r4,4(fp)
  843b58:	213fffc4 	addi	r4,r4,-1
  843b5c:	e1000115 	stw	r4,4(fp)
  843b60:	0100580e 	bge	zero,r4,843cc4 <__ssvfiscanf_r+0xee0>
  843b64:	10800044 	addi	r2,r2,1
  843b68:	e0800015 	stw	r2,0(fp)
  843b6c:	bdffffc4 	addi	r23,r23,-1
  843b70:	b8002526 	beq	r23,zero,843c08 <__ssvfiscanf_r+0xe24>
  843b74:	e0800017 	ldw	r2,0(fp)
  843b78:	11000003 	ldbu	r4,0(r2)
  843b7c:	003f9706 	br	8439dc <__alt_mem_epcs_flash_controller_0+0xff83a9dc>
  843b80:	01400284 	movi	r5,10
  843b84:	2c00200e 	bge	r5,r16,843c08 <__ssvfiscanf_r+0xe24>
  843b88:	017d1fc4 	movi	r5,-2945
  843b8c:	b16c703a 	and	r22,r22,r5
  843b90:	003fee06 	br	843b4c <__alt_mem_epcs_flash_controller_0+0xff83ab4c>
  843b94:	b140200c 	andi	r5,r22,128
  843b98:	28001b26 	beq	r5,zero,843c08 <__ssvfiscanf_r+0xe24>
  843b9c:	b22c703a 	and	r22,r22,r8
  843ba0:	003fea06 	br	843b4c <__alt_mem_epcs_flash_controller_0+0xff83ab4c>
  843ba4:	02c021b4 	movhi	r11,134
  843ba8:	8421883a 	add	r16,r16,r16
  843bac:	5ae73104 	addi	r11,r11,-25404
  843bb0:	5c0b883a 	add	r5,r11,r16
  843bb4:	2c00000f 	ldh	r16,0(r5)
  843bb8:	017d1fc4 	movi	r5,-2945
  843bbc:	b16c703a 	and	r22,r22,r5
  843bc0:	003fe206 	br	843b4c <__alt_mem_epcs_flash_controller_0+0xff83ab4c>
  843bc4:	b142000c 	andi	r5,r22,2048
  843bc8:	283fe026 	beq	r5,zero,843b4c <__alt_mem_epcs_flash_controller_0+0xff83ab4c>
  843bcc:	8000021e 	bne	r16,zero,843bd8 <__ssvfiscanf_r+0xdf4>
  843bd0:	b5808014 	ori	r22,r22,512
  843bd4:	04000204 	movi	r16,8
  843bd8:	b141000c 	andi	r5,r22,1024
  843bdc:	28009f26 	beq	r5,zero,843e5c <__ssvfiscanf_r+0x1078>
  843be0:	017e9fc4 	movi	r5,-1409
  843be4:	b16c703a 	and	r22,r22,r5
  843be8:	003fd806 	br	843b4c <__alt_mem_epcs_flash_controller_0+0xff83ab4c>
  843bec:	02c021b4 	movhi	r11,134
  843bf0:	8421883a 	add	r16,r16,r16
  843bf4:	5ae73104 	addi	r11,r11,-25404
  843bf8:	5c0b883a 	add	r5,r11,r16
  843bfc:	2c00000f 	ldh	r16,0(r5)
  843c00:	01400204 	movi	r5,8
  843c04:	2c3fe016 	blt	r5,r16,843b88 <__alt_mem_epcs_flash_controller_0+0xff83ab88>
  843c08:	dc005015 	stw	r16,320(sp)
  843c0c:	b080400c 	andi	r2,r22,256
  843c10:	9821883a 	mov	r16,r19
  843c14:	a827883a 	mov	r19,r21
  843c18:	502b883a 	mov	r21,r10
  843c1c:	10000426 	beq	r2,zero,843c30 <__ssvfiscanf_r+0xe4c>
  843c20:	dac04e17 	ldw	r11,312(sp)
  843c24:	5d009c36 	bltu	r11,r20,843e98 <__ssvfiscanf_r+0x10b4>
  843c28:	dac04e17 	ldw	r11,312(sp)
  843c2c:	a2fcb026 	beq	r20,r11,842ef0 <__alt_mem_epcs_flash_controller_0+0xff839ef0>
  843c30:	b080040c 	andi	r2,r22,16
  843c34:	10006026 	beq	r2,zero,843db8 <__ssvfiscanf_r+0xfd4>
  843c38:	dac04e17 	ldw	r11,312(sp)
  843c3c:	a2e9c83a 	sub	r20,r20,r11
  843c40:	a429883a 	add	r20,r20,r16
  843c44:	9d27883a 	add	r19,r19,r20
  843c48:	a829883a 	mov	r20,r21
  843c4c:	a00d883a 	mov	r6,r20
  843c50:	003ca306 	br	842ee0 <__alt_mem_epcs_flash_controller_0+0xff839ee0>
  843c54:	b800011e 	bne	r23,zero,843c5c <__ssvfiscanf_r+0xe78>
  843c58:	05ffffc4 	movi	r23,-1
  843c5c:	8100004c 	andi	r4,r16,1
  843c60:	203e981e 	bne	r4,zero,8436c4 <__alt_mem_epcs_flash_controller_0+0xff83a6c4>
  843c64:	8400040c 	andi	r16,r16,16
  843c68:	80002926 	beq	r16,zero,843d10 <__ssvfiscanf_r+0xf2c>
  843c6c:	0021883a 	mov	r16,zero
  843c70:	00000306 	br	843c80 <__ssvfiscanf_r+0xe9c>
  843c74:	10c00003 	ldbu	r3,0(r2)
  843c78:	b0c7883a 	add	r3,r22,r3
  843c7c:	18c00043 	ldbu	r3,1(r3)
  843c80:	18c0020c 	andi	r3,r3,8
  843c84:	183dc51e 	bne	r3,zero,84339c <__alt_mem_epcs_flash_controller_0+0xff83a39c>
  843c88:	e0c00117 	ldw	r3,4(fp)
  843c8c:	10800044 	addi	r2,r2,1
  843c90:	84000044 	addi	r16,r16,1
  843c94:	18ffffc4 	addi	r3,r3,-1
  843c98:	e0c00115 	stw	r3,4(fp)
  843c9c:	e0800015 	stw	r2,0(fp)
  843ca0:	85fdbe26 	beq	r16,r23,84339c <__alt_mem_epcs_flash_controller_0+0xff83a39c>
  843ca4:	00fff316 	blt	zero,r3,843c74 <__alt_mem_epcs_flash_controller_0+0xff83ac74>
  843ca8:	e00b883a 	mov	r5,fp
  843cac:	8809883a 	mov	r4,r17
  843cb0:	0842c740 	call	842c74 <__ssrefill_r>
  843cb4:	103db91e 	bne	r2,zero,84339c <__alt_mem_epcs_flash_controller_0+0xff83a39c>
  843cb8:	95800017 	ldw	r22,0(r18)
  843cbc:	e0800017 	ldw	r2,0(fp)
  843cc0:	003fec06 	br	843c74 <__alt_mem_epcs_flash_controller_0+0xff83ac74>
  843cc4:	e00b883a 	mov	r5,fp
  843cc8:	8809883a 	mov	r4,r17
  843ccc:	d8c05a15 	stw	r3,360(sp)
  843cd0:	d9805715 	stw	r6,348(sp)
  843cd4:	d9c05915 	stw	r7,356(sp)
  843cd8:	da005615 	stw	r8,344(sp)
  843cdc:	da405515 	stw	r9,340(sp)
  843ce0:	da805815 	stw	r10,352(sp)
  843ce4:	0842c740 	call	842c74 <__ssrefill_r>
  843ce8:	d8c05a17 	ldw	r3,360(sp)
  843cec:	d9805717 	ldw	r6,348(sp)
  843cf0:	d9c05917 	ldw	r7,356(sp)
  843cf4:	da005617 	ldw	r8,344(sp)
  843cf8:	da405517 	ldw	r9,340(sp)
  843cfc:	da805817 	ldw	r10,352(sp)
  843d00:	103f9a26 	beq	r2,zero,843b6c <__alt_mem_epcs_flash_controller_0+0xff83ab6c>
  843d04:	003fc006 	br	843c08 <__alt_mem_epcs_flash_controller_0+0xff83ac08>
  843d08:	000d883a 	mov	r6,zero
  843d0c:	003f2806 	br	8439b0 <__alt_mem_epcs_flash_controller_0+0xff83a9b0>
  843d10:	dac04f17 	ldw	r11,316(sp)
  843d14:	babfffc4 	addi	r10,r23,-1
  843d18:	5d000017 	ldw	r20,0(r11)
  843d1c:	5c000104 	addi	r16,r11,4
  843d20:	a00b883a 	mov	r5,r20
  843d24:	a2ad883a 	add	r22,r20,r10
  843d28:	00000606 	br	843d44 <__ssvfiscanf_r+0xf60>
  843d2c:	e0800017 	ldw	r2,0(fp)
  843d30:	91000017 	ldw	r4,0(r18)
  843d34:	b80b883a 	mov	r5,r23
  843d38:	10c00003 	ldbu	r3,0(r2)
  843d3c:	20c7883a 	add	r3,r4,r3
  843d40:	18c00043 	ldbu	r3,1(r3)
  843d44:	18c0020c 	andi	r3,r3,8
  843d48:	2809883a 	mov	r4,r5
  843d4c:	1800101e 	bne	r3,zero,843d90 <__ssvfiscanf_r+0xfac>
  843d50:	e0c00117 	ldw	r3,4(fp)
  843d54:	11800044 	addi	r6,r2,1
  843d58:	e1800015 	stw	r6,0(fp)
  843d5c:	18ffffc4 	addi	r3,r3,-1
  843d60:	e0c00115 	stw	r3,4(fp)
  843d64:	10800003 	ldbu	r2,0(r2)
  843d68:	25c00044 	addi	r23,r4,1
  843d6c:	28800005 	stb	r2,0(r5)
  843d70:	25800626 	beq	r4,r22,843d8c <__ssvfiscanf_r+0xfa8>
  843d74:	e0800117 	ldw	r2,4(fp)
  843d78:	00bfec16 	blt	zero,r2,843d2c <__alt_mem_epcs_flash_controller_0+0xff83ad2c>
  843d7c:	e00b883a 	mov	r5,fp
  843d80:	8809883a 	mov	r4,r17
  843d84:	0842c740 	call	842c74 <__ssrefill_r>
  843d88:	103fe826 	beq	r2,zero,843d2c <__alt_mem_epcs_flash_controller_0+0xff83ad2c>
  843d8c:	b809883a 	mov	r4,r23
  843d90:	dac05117 	ldw	r11,324(sp)
  843d94:	2529c83a 	sub	r20,r4,r20
  843d98:	9d27883a 	add	r19,r19,r20
  843d9c:	5ac00044 	addi	r11,r11,1
  843da0:	a829883a 	mov	r20,r21
  843da4:	20000005 	stb	zero,0(r4)
  843da8:	dac05115 	stw	r11,324(sp)
  843dac:	dc004f15 	stw	r16,316(sp)
  843db0:	a00d883a 	mov	r6,r20
  843db4:	003c4a06 	br	842ee0 <__alt_mem_epcs_flash_controller_0+0xff839ee0>
  843db8:	d9c05017 	ldw	r7,320(sp)
  843dbc:	dac05217 	ldw	r11,328(sp)
  843dc0:	000d883a 	mov	r6,zero
  843dc4:	d9404104 	addi	r5,sp,260
  843dc8:	8809883a 	mov	r4,r17
  843dcc:	a0000005 	stb	zero,0(r20)
  843dd0:	583ee83a 	callr	r11
  843dd4:	b0c0080c 	andi	r3,r22,32
  843dd8:	1800271e 	bne	r3,zero,843e78 <__ssvfiscanf_r+0x1094>
  843ddc:	b0c0010c 	andi	r3,r22,4
  843de0:	18003326 	beq	r3,zero,843eb0 <__ssvfiscanf_r+0x10cc>
  843de4:	dac04f17 	ldw	r11,316(sp)
  843de8:	58c00017 	ldw	r3,0(r11)
  843dec:	5ac00104 	addi	r11,r11,4
  843df0:	dac04f15 	stw	r11,316(sp)
  843df4:	1880000d 	sth	r2,0(r3)
  843df8:	dac05117 	ldw	r11,324(sp)
  843dfc:	5ac00044 	addi	r11,r11,1
  843e00:	dac05115 	stw	r11,324(sp)
  843e04:	003f8c06 	br	843c38 <__alt_mem_epcs_flash_controller_0+0xff83ac38>
  843e08:	b0000015 	stw	zero,0(r22)
  843e0c:	0009883a 	mov	r4,zero
  843e10:	d8c05a15 	stw	r3,360(sp)
  843e14:	083d6840 	call	83d684 <iswspace>
  843e18:	d8c05a17 	ldw	r3,360(sp)
  843e1c:	10003826 	beq	r2,zero,843f00 <__ssvfiscanf_r+0x111c>
  843e20:	18000b26 	beq	r3,zero,843e50 <__ssvfiscanf_r+0x106c>
  843e24:	1d3fffc4 	addi	r20,r3,-1
  843e28:	dac04104 	addi	r11,sp,260
  843e2c:	5d2f883a 	add	r23,r11,r20
  843e30:	00000106 	br	843e38 <__ssvfiscanf_r+0x1054>
  843e34:	a53fffc4 	addi	r20,r20,-1
  843e38:	b9400003 	ldbu	r5,0(r23)
  843e3c:	e00d883a 	mov	r6,fp
  843e40:	8809883a 	mov	r4,r17
  843e44:	0842b6c0 	call	842b6c <_sungetc_r>
  843e48:	bdffffc4 	addi	r23,r23,-1
  843e4c:	a03ff91e 	bne	r20,zero,843e34 <__alt_mem_epcs_flash_controller_0+0xff83ae34>
  843e50:	803ded1e 	bne	r16,zero,843608 <__alt_mem_epcs_flash_controller_0+0xff83a608>
  843e54:	b0000015 	stw	zero,0(r22)
  843e58:	003de806 	br	8435fc <__alt_mem_epcs_flash_controller_0+0xff83a5fc>
  843e5c:	013f1fc4 	movi	r4,-897
  843e60:	b12c703a 	and	r22,r22,r4
  843e64:	30000226 	beq	r6,zero,843e70 <__ssvfiscanf_r+0x108c>
  843e68:	31bfffc4 	addi	r6,r6,-1
  843e6c:	bdc00044 	addi	r23,r23,1
  843e70:	9cc00044 	addi	r19,r19,1
  843e74:	003f3706 	br	843b54 <__alt_mem_epcs_flash_controller_0+0xff83ab54>
  843e78:	dac04f17 	ldw	r11,316(sp)
  843e7c:	58c00017 	ldw	r3,0(r11)
  843e80:	5ac00104 	addi	r11,r11,4
  843e84:	dac04f15 	stw	r11,316(sp)
  843e88:	18800015 	stw	r2,0(r3)
  843e8c:	003fda06 	br	843df8 <__alt_mem_epcs_flash_controller_0+0xff83adf8>
  843e90:	dd804d04 	addi	r22,sp,308
  843e94:	003e1706 	br	8436f4 <__alt_mem_epcs_flash_controller_0+0xff83a6f4>
  843e98:	a17fffc7 	ldb	r5,-1(r20)
  843e9c:	e00d883a 	mov	r6,fp
  843ea0:	8809883a 	mov	r4,r17
  843ea4:	a53fffc4 	addi	r20,r20,-1
  843ea8:	0842b6c0 	call	842b6c <_sungetc_r>
  843eac:	003f5e06 	br	843c28 <__alt_mem_epcs_flash_controller_0+0xff83ac28>
  843eb0:	b0c0004c 	andi	r3,r22,1
  843eb4:	183ff01e 	bne	r3,zero,843e78 <__alt_mem_epcs_flash_controller_0+0xff83ae78>
  843eb8:	b580008c 	andi	r22,r22,2
  843ebc:	b03fee26 	beq	r22,zero,843e78 <__alt_mem_epcs_flash_controller_0+0xff83ae78>
  843ec0:	dac05217 	ldw	r11,328(sp)
  843ec4:	00802134 	movhi	r2,132
  843ec8:	10841204 	addi	r2,r2,4168
  843ecc:	d9c05017 	ldw	r7,320(sp)
  843ed0:	000d883a 	mov	r6,zero
  843ed4:	d9404104 	addi	r5,sp,260
  843ed8:	8809883a 	mov	r4,r17
  843edc:	58801226 	beq	r11,r2,843f28 <__ssvfiscanf_r+0x1144>
  843ee0:	0840d440 	call	840d44 <_strtoll_r>
  843ee4:	dac04f17 	ldw	r11,316(sp)
  843ee8:	59000017 	ldw	r4,0(r11)
  843eec:	5ac00104 	addi	r11,r11,4
  843ef0:	dac04f15 	stw	r11,316(sp)
  843ef4:	20800015 	stw	r2,0(r4)
  843ef8:	20c00115 	stw	r3,4(r4)
  843efc:	003fbe06 	br	843df8 <__alt_mem_epcs_flash_controller_0+0xff83adf8>
  843f00:	98e7883a 	add	r19,r19,r3
  843f04:	bdffffc4 	addi	r23,r23,-1
  843f08:	8000031e 	bne	r16,zero,843f18 <__ssvfiscanf_r+0x1134>
  843f0c:	b5800104 	addi	r22,r22,4
  843f10:	0029883a 	mov	r20,zero
  843f14:	003e1d06 	br	84378c <__alt_mem_epcs_flash_controller_0+0xff83a78c>
  843f18:	0029883a 	mov	r20,zero
  843f1c:	003e1b06 	br	84378c <__alt_mem_epcs_flash_controller_0+0xff83a78c>
  843f20:	b1000017 	ldw	r4,0(r22)
  843f24:	003fba06 	br	843e10 <__alt_mem_epcs_flash_controller_0+0xff83ae10>
  843f28:	08412dc0 	call	8412dc <_strtoull_r>
  843f2c:	003fed06 	br	843ee4 <__alt_mem_epcs_flash_controller_0+0xff83aee4>

00843f30 <__submore>:
  843f30:	defffa04 	addi	sp,sp,-24
  843f34:	dc000015 	stw	r16,0(sp)
  843f38:	2821883a 	mov	r16,r5
  843f3c:	29400c17 	ldw	r5,48(r5)
  843f40:	dfc00515 	stw	ra,20(sp)
  843f44:	dd000415 	stw	r20,16(sp)
  843f48:	dcc00315 	stw	r19,12(sp)
  843f4c:	dc800215 	stw	r18,8(sp)
  843f50:	dc400115 	stw	r17,4(sp)
  843f54:	80801004 	addi	r2,r16,64
  843f58:	28801726 	beq	r5,r2,843fb8 <__submore+0x88>
  843f5c:	84400d17 	ldw	r17,52(r16)
  843f60:	8c67883a 	add	r19,r17,r17
  843f64:	980d883a 	mov	r6,r19
  843f68:	08346740 	call	834674 <_realloc_r>
  843f6c:	1025883a 	mov	r18,r2
  843f70:	10002226 	beq	r2,zero,843ffc <__submore+0xcc>
  843f74:	1469883a 	add	r20,r2,r17
  843f78:	880d883a 	mov	r6,r17
  843f7c:	100b883a 	mov	r5,r2
  843f80:	a009883a 	mov	r4,r20
  843f84:	0833c4c0 	call	833c4c <memcpy>
  843f88:	0005883a 	mov	r2,zero
  843f8c:	85000015 	stw	r20,0(r16)
  843f90:	84800c15 	stw	r18,48(r16)
  843f94:	84c00d15 	stw	r19,52(r16)
  843f98:	dfc00517 	ldw	ra,20(sp)
  843f9c:	dd000417 	ldw	r20,16(sp)
  843fa0:	dcc00317 	ldw	r19,12(sp)
  843fa4:	dc800217 	ldw	r18,8(sp)
  843fa8:	dc400117 	ldw	r17,4(sp)
  843fac:	dc000017 	ldw	r16,0(sp)
  843fb0:	dec00604 	addi	sp,sp,24
  843fb4:	f800283a 	ret
  843fb8:	04410004 	movi	r17,1024
  843fbc:	880b883a 	mov	r5,r17
  843fc0:	083335c0 	call	83335c <_malloc_r>
  843fc4:	1007883a 	mov	r3,r2
  843fc8:	10000c26 	beq	r2,zero,843ffc <__submore+0xcc>
  843fcc:	80801083 	ldbu	r2,66(r16)
  843fd0:	80c00c15 	stw	r3,48(r16)
  843fd4:	84400d15 	stw	r17,52(r16)
  843fd8:	1880ffc5 	stb	r2,1023(r3)
  843fdc:	81401043 	ldbu	r5,65(r16)
  843fe0:	1900ff44 	addi	r4,r3,1021
  843fe4:	0005883a 	mov	r2,zero
  843fe8:	1940ff85 	stb	r5,1022(r3)
  843fec:	81401003 	ldbu	r5,64(r16)
  843ff0:	1940ff45 	stb	r5,1021(r3)
  843ff4:	81000015 	stw	r4,0(r16)
  843ff8:	003fe706 	br	843f98 <__alt_mem_epcs_flash_controller_0+0xff83af98>
  843ffc:	00bfffc4 	movi	r2,-1
  844000:	003fe506 	br	843f98 <__alt_mem_epcs_flash_controller_0+0xff83af98>

00844004 <_ungetc_r>:
  844004:	00bfffc4 	movi	r2,-1
  844008:	28806126 	beq	r5,r2,844190 <_ungetc_r+0x18c>
  84400c:	defffb04 	addi	sp,sp,-20
  844010:	dcc00315 	stw	r19,12(sp)
  844014:	dc400115 	stw	r17,4(sp)
  844018:	dc000015 	stw	r16,0(sp)
  84401c:	dfc00415 	stw	ra,16(sp)
  844020:	dc800215 	stw	r18,8(sp)
  844024:	2023883a 	mov	r17,r4
  844028:	3021883a 	mov	r16,r6
  84402c:	2827883a 	mov	r19,r5
  844030:	20000226 	beq	r4,zero,84403c <_ungetc_r+0x38>
  844034:	20800e17 	ldw	r2,56(r4)
  844038:	10002e26 	beq	r2,zero,8440f4 <_ungetc_r+0xf0>
  84403c:	80c0030b 	ldhu	r3,12(r16)
  844040:	1888000c 	andi	r2,r3,8192
  844044:	1000051e 	bne	r2,zero,84405c <_ungetc_r+0x58>
  844048:	81001917 	ldw	r4,100(r16)
  84404c:	00b7ffc4 	movi	r2,-8193
  844050:	18c80014 	ori	r3,r3,8192
  844054:	2084703a 	and	r2,r4,r2
  844058:	80801915 	stw	r2,100(r16)
  84405c:	00bff7c4 	movi	r2,-33
  844060:	1884703a 	and	r2,r3,r2
  844064:	8080030d 	sth	r2,12(r16)
  844068:	1900010c 	andi	r4,r3,4
  84406c:	2000061e 	bne	r4,zero,844088 <_ungetc_r+0x84>
  844070:	1900040c 	andi	r4,r3,16
  844074:	20001d26 	beq	r4,zero,8440ec <_ungetc_r+0xe8>
  844078:	18c0020c 	andi	r3,r3,8
  84407c:	1800331e 	bne	r3,zero,84414c <_ungetc_r+0x148>
  844080:	10800114 	ori	r2,r2,4
  844084:	8080030d 	sth	r2,12(r16)
  844088:	80800c17 	ldw	r2,48(r16)
  84408c:	9c803fcc 	andi	r18,r19,255
  844090:	10001a26 	beq	r2,zero,8440fc <_ungetc_r+0xf8>
  844094:	80c00117 	ldw	r3,4(r16)
  844098:	80800d17 	ldw	r2,52(r16)
  84409c:	18800f0e 	bge	r3,r2,8440dc <_ungetc_r+0xd8>
  8440a0:	80c00017 	ldw	r3,0(r16)
  8440a4:	9005883a 	mov	r2,r18
  8440a8:	193fffc4 	addi	r4,r3,-1
  8440ac:	81000015 	stw	r4,0(r16)
  8440b0:	1cffffc5 	stb	r19,-1(r3)
  8440b4:	80c00117 	ldw	r3,4(r16)
  8440b8:	18c00044 	addi	r3,r3,1
  8440bc:	80c00115 	stw	r3,4(r16)
  8440c0:	dfc00417 	ldw	ra,16(sp)
  8440c4:	dcc00317 	ldw	r19,12(sp)
  8440c8:	dc800217 	ldw	r18,8(sp)
  8440cc:	dc400117 	ldw	r17,4(sp)
  8440d0:	dc000017 	ldw	r16,0(sp)
  8440d4:	dec00504 	addi	sp,sp,20
  8440d8:	f800283a 	ret
  8440dc:	800b883a 	mov	r5,r16
  8440e0:	8809883a 	mov	r4,r17
  8440e4:	0843f300 	call	843f30 <__submore>
  8440e8:	103fed26 	beq	r2,zero,8440a0 <__alt_mem_epcs_flash_controller_0+0xff83b0a0>
  8440ec:	00bfffc4 	movi	r2,-1
  8440f0:	003ff306 	br	8440c0 <__alt_mem_epcs_flash_controller_0+0xff83b0c0>
  8440f4:	08324300 	call	832430 <__sinit>
  8440f8:	003fd006 	br	84403c <__alt_mem_epcs_flash_controller_0+0xff83b03c>
  8440fc:	80c00417 	ldw	r3,16(r16)
  844100:	80800017 	ldw	r2,0(r16)
  844104:	18000326 	beq	r3,zero,844114 <_ungetc_r+0x110>
  844108:	1880022e 	bgeu	r3,r2,844114 <_ungetc_r+0x110>
  84410c:	10ffffc3 	ldbu	r3,-1(r2)
  844110:	90c01826 	beq	r18,r3,844174 <_ungetc_r+0x170>
  844114:	81400117 	ldw	r5,4(r16)
  844118:	80800e15 	stw	r2,56(r16)
  84411c:	008000c4 	movi	r2,3
  844120:	81001004 	addi	r4,r16,64
  844124:	80c01084 	addi	r3,r16,66
  844128:	80800d15 	stw	r2,52(r16)
  84412c:	00800044 	movi	r2,1
  844130:	80800115 	stw	r2,4(r16)
  844134:	81400f15 	stw	r5,60(r16)
  844138:	81000c15 	stw	r4,48(r16)
  84413c:	84c01085 	stb	r19,66(r16)
  844140:	80c00015 	stw	r3,0(r16)
  844144:	9005883a 	mov	r2,r18
  844148:	003fdd06 	br	8440c0 <__alt_mem_epcs_flash_controller_0+0xff83b0c0>
  84414c:	800b883a 	mov	r5,r16
  844150:	8809883a 	mov	r4,r17
  844154:	08320440 	call	832044 <_fflush_r>
  844158:	103fe41e 	bne	r2,zero,8440ec <__alt_mem_epcs_flash_controller_0+0xff83b0ec>
  84415c:	8080030b 	ldhu	r2,12(r16)
  844160:	00fffdc4 	movi	r3,-9
  844164:	80000215 	stw	zero,8(r16)
  844168:	1884703a 	and	r2,r3,r2
  84416c:	80000615 	stw	zero,24(r16)
  844170:	003fc306 	br	844080 <__alt_mem_epcs_flash_controller_0+0xff83b080>
  844174:	80c00117 	ldw	r3,4(r16)
  844178:	10bfffc4 	addi	r2,r2,-1
  84417c:	80800015 	stw	r2,0(r16)
  844180:	18800044 	addi	r2,r3,1
  844184:	80800115 	stw	r2,4(r16)
  844188:	9005883a 	mov	r2,r18
  84418c:	003fcc06 	br	8440c0 <__alt_mem_epcs_flash_controller_0+0xff83b0c0>
  844190:	00bfffc4 	movi	r2,-1
  844194:	f800283a 	ret

00844198 <ungetc>:
  844198:	008021b4 	movhi	r2,134
  84419c:	10af7404 	addi	r2,r2,-16944
  8441a0:	280d883a 	mov	r6,r5
  8441a4:	200b883a 	mov	r5,r4
  8441a8:	11000017 	ldw	r4,0(r2)
  8441ac:	08440041 	jmpi	844004 <_ungetc_r>

008441b0 <__sprint_r.part.0>:
  8441b0:	28801917 	ldw	r2,100(r5)
  8441b4:	defff604 	addi	sp,sp,-40
  8441b8:	dd400515 	stw	r21,20(sp)
  8441bc:	dfc00915 	stw	ra,36(sp)
  8441c0:	df000815 	stw	fp,32(sp)
  8441c4:	ddc00715 	stw	r23,28(sp)
  8441c8:	dd800615 	stw	r22,24(sp)
  8441cc:	dd000415 	stw	r20,16(sp)
  8441d0:	dcc00315 	stw	r19,12(sp)
  8441d4:	dc800215 	stw	r18,8(sp)
  8441d8:	dc400115 	stw	r17,4(sp)
  8441dc:	dc000015 	stw	r16,0(sp)
  8441e0:	1088000c 	andi	r2,r2,8192
  8441e4:	302b883a 	mov	r21,r6
  8441e8:	10002e26 	beq	r2,zero,8442a4 <__sprint_r.part.0+0xf4>
  8441ec:	30800217 	ldw	r2,8(r6)
  8441f0:	35800017 	ldw	r22,0(r6)
  8441f4:	10002926 	beq	r2,zero,84429c <__sprint_r.part.0+0xec>
  8441f8:	2827883a 	mov	r19,r5
  8441fc:	2029883a 	mov	r20,r4
  844200:	b5c00104 	addi	r23,r22,4
  844204:	04bfffc4 	movi	r18,-1
  844208:	bc400017 	ldw	r17,0(r23)
  84420c:	b4000017 	ldw	r16,0(r22)
  844210:	0039883a 	mov	fp,zero
  844214:	8822d0ba 	srli	r17,r17,2
  844218:	8800031e 	bne	r17,zero,844228 <__sprint_r.part.0+0x78>
  84421c:	00001806 	br	844280 <__sprint_r.part.0+0xd0>
  844220:	84000104 	addi	r16,r16,4
  844224:	8f001526 	beq	r17,fp,84427c <__sprint_r.part.0+0xcc>
  844228:	81400017 	ldw	r5,0(r16)
  84422c:	980d883a 	mov	r6,r19
  844230:	a009883a 	mov	r4,r20
  844234:	0845ae80 	call	845ae8 <_fputwc_r>
  844238:	e7000044 	addi	fp,fp,1
  84423c:	14bff81e 	bne	r2,r18,844220 <__alt_mem_epcs_flash_controller_0+0xff83b220>
  844240:	9005883a 	mov	r2,r18
  844244:	a8000215 	stw	zero,8(r21)
  844248:	a8000115 	stw	zero,4(r21)
  84424c:	dfc00917 	ldw	ra,36(sp)
  844250:	df000817 	ldw	fp,32(sp)
  844254:	ddc00717 	ldw	r23,28(sp)
  844258:	dd800617 	ldw	r22,24(sp)
  84425c:	dd400517 	ldw	r21,20(sp)
  844260:	dd000417 	ldw	r20,16(sp)
  844264:	dcc00317 	ldw	r19,12(sp)
  844268:	dc800217 	ldw	r18,8(sp)
  84426c:	dc400117 	ldw	r17,4(sp)
  844270:	dc000017 	ldw	r16,0(sp)
  844274:	dec00a04 	addi	sp,sp,40
  844278:	f800283a 	ret
  84427c:	a8800217 	ldw	r2,8(r21)
  844280:	8c63883a 	add	r17,r17,r17
  844284:	8c63883a 	add	r17,r17,r17
  844288:	1445c83a 	sub	r2,r2,r17
  84428c:	a8800215 	stw	r2,8(r21)
  844290:	b5800204 	addi	r22,r22,8
  844294:	bdc00204 	addi	r23,r23,8
  844298:	103fdb1e 	bne	r2,zero,844208 <__alt_mem_epcs_flash_controller_0+0xff83b208>
  84429c:	0005883a 	mov	r2,zero
  8442a0:	003fe806 	br	844244 <__alt_mem_epcs_flash_controller_0+0xff83b244>
  8442a4:	083d1bc0 	call	83d1bc <__sfvwrite_r>
  8442a8:	003fe606 	br	844244 <__alt_mem_epcs_flash_controller_0+0xff83b244>

008442ac <__sprint_r>:
  8442ac:	30c00217 	ldw	r3,8(r6)
  8442b0:	18000126 	beq	r3,zero,8442b8 <__sprint_r+0xc>
  8442b4:	08441b01 	jmpi	8441b0 <__sprint_r.part.0>
  8442b8:	30000115 	stw	zero,4(r6)
  8442bc:	0005883a 	mov	r2,zero
  8442c0:	f800283a 	ret

008442c4 <___vfiprintf_internal_r>:
  8442c4:	deffca04 	addi	sp,sp,-216
  8442c8:	dd403115 	stw	r21,196(sp)
  8442cc:	dfc03515 	stw	ra,212(sp)
  8442d0:	df003415 	stw	fp,208(sp)
  8442d4:	ddc03315 	stw	r23,204(sp)
  8442d8:	dd803215 	stw	r22,200(sp)
  8442dc:	dd003015 	stw	r20,192(sp)
  8442e0:	dcc02f15 	stw	r19,188(sp)
  8442e4:	dc802e15 	stw	r18,184(sp)
  8442e8:	dc402d15 	stw	r17,180(sp)
  8442ec:	dc002c15 	stw	r16,176(sp)
  8442f0:	d9002115 	stw	r4,132(sp)
  8442f4:	d9402015 	stw	r5,128(sp)
  8442f8:	d9c02215 	stw	r7,136(sp)
  8442fc:	302b883a 	mov	r21,r6
  844300:	20000226 	beq	r4,zero,84430c <___vfiprintf_internal_r+0x48>
  844304:	20800e17 	ldw	r2,56(r4)
  844308:	1000cf26 	beq	r2,zero,844648 <___vfiprintf_internal_r+0x384>
  84430c:	d8c02017 	ldw	r3,128(sp)
  844310:	1880030b 	ldhu	r2,12(r3)
  844314:	10c8000c 	andi	r3,r2,8192
  844318:	1800071e 	bne	r3,zero,844338 <___vfiprintf_internal_r+0x74>
  84431c:	d9402017 	ldw	r5,128(sp)
  844320:	00f7ffc4 	movi	r3,-8193
  844324:	10880014 	ori	r2,r2,8192
  844328:	29001917 	ldw	r4,100(r5)
  84432c:	2880030d 	sth	r2,12(r5)
  844330:	20c6703a 	and	r3,r4,r3
  844334:	28c01915 	stw	r3,100(r5)
  844338:	10c0020c 	andi	r3,r2,8
  84433c:	1800a526 	beq	r3,zero,8445d4 <___vfiprintf_internal_r+0x310>
  844340:	d9002017 	ldw	r4,128(sp)
  844344:	20c00417 	ldw	r3,16(r4)
  844348:	1800a226 	beq	r3,zero,8445d4 <___vfiprintf_internal_r+0x310>
  84434c:	1080068c 	andi	r2,r2,26
  844350:	00c00284 	movi	r3,10
  844354:	10c0a826 	beq	r2,r3,8445f8 <___vfiprintf_internal_r+0x334>
  844358:	d9001a04 	addi	r4,sp,104
  84435c:	d94019c4 	addi	r5,sp,103
  844360:	048021b4 	movhi	r18,134
  844364:	2145c83a 	sub	r2,r4,r5
  844368:	94a73984 	addi	r18,r18,-25370
  84436c:	d9001e15 	stw	r4,120(sp)
  844370:	d9401f15 	stw	r5,124(sp)
  844374:	dec01a15 	stw	sp,104(sp)
  844378:	d8001c15 	stw	zero,112(sp)
  84437c:	d8001b15 	stw	zero,108(sp)
  844380:	d811883a 	mov	r8,sp
  844384:	d8002615 	stw	zero,152(sp)
  844388:	d8002415 	stw	zero,144(sp)
  84438c:	d8802815 	stw	r2,160(sp)
  844390:	a82d883a 	mov	r22,r21
  844394:	b0800007 	ldb	r2,0(r22)
  844398:	10040d26 	beq	r2,zero,8453d0 <___vfiprintf_internal_r+0x110c>
  84439c:	00c00944 	movi	r3,37
  8443a0:	b029883a 	mov	r20,r22
  8443a4:	10c0021e 	bne	r2,r3,8443b0 <___vfiprintf_internal_r+0xec>
  8443a8:	00001606 	br	844404 <___vfiprintf_internal_r+0x140>
  8443ac:	10c00326 	beq	r2,r3,8443bc <___vfiprintf_internal_r+0xf8>
  8443b0:	a5000044 	addi	r20,r20,1
  8443b4:	a0800007 	ldb	r2,0(r20)
  8443b8:	103ffc1e 	bne	r2,zero,8443ac <__alt_mem_epcs_flash_controller_0+0xff83b3ac>
  8443bc:	a5a1c83a 	sub	r16,r20,r22
  8443c0:	80001026 	beq	r16,zero,844404 <___vfiprintf_internal_r+0x140>
  8443c4:	d8c01c17 	ldw	r3,112(sp)
  8443c8:	d8801b17 	ldw	r2,108(sp)
  8443cc:	45800015 	stw	r22,0(r8)
  8443d0:	80c7883a 	add	r3,r16,r3
  8443d4:	10800044 	addi	r2,r2,1
  8443d8:	44000115 	stw	r16,4(r8)
  8443dc:	d8c01c15 	stw	r3,112(sp)
  8443e0:	d8801b15 	stw	r2,108(sp)
  8443e4:	010001c4 	movi	r4,7
  8443e8:	2080750e 	bge	r4,r2,8445c0 <___vfiprintf_internal_r+0x2fc>
  8443ec:	1803951e 	bne	r3,zero,845244 <___vfiprintf_internal_r+0xf80>
  8443f0:	d8c02417 	ldw	r3,144(sp)
  8443f4:	d8001b15 	stw	zero,108(sp)
  8443f8:	d811883a 	mov	r8,sp
  8443fc:	1c07883a 	add	r3,r3,r16
  844400:	d8c02415 	stw	r3,144(sp)
  844404:	a0800007 	ldb	r2,0(r20)
  844408:	1002e026 	beq	r2,zero,844f8c <___vfiprintf_internal_r+0xcc8>
  84440c:	a5800044 	addi	r22,r20,1
  844410:	a0c00047 	ldb	r3,1(r20)
  844414:	d8001d85 	stb	zero,118(sp)
  844418:	0027883a 	mov	r19,zero
  84441c:	d8002305 	stb	zero,140(sp)
  844420:	043fffc4 	movi	r16,-1
  844424:	d8002515 	stw	zero,148(sp)
  844428:	0023883a 	mov	r17,zero
  84442c:	05001604 	movi	r20,88
  844430:	05400244 	movi	r21,9
  844434:	402f883a 	mov	r23,r8
  844438:	b5800044 	addi	r22,r22,1
  84443c:	18bff804 	addi	r2,r3,-32
  844440:	a0827736 	bltu	r20,r2,844e20 <___vfiprintf_internal_r+0xb5c>
  844444:	100490ba 	slli	r2,r2,2
  844448:	01002134 	movhi	r4,132
  84444c:	21111704 	addi	r4,r4,17500
  844450:	1105883a 	add	r2,r2,r4
  844454:	10800017 	ldw	r2,0(r2)
  844458:	1000683a 	jmp	r2
  84445c:	00844b20 	cmpeqi	r2,zero,4396
  844460:	00844e20 	cmpeqi	r2,zero,4408
  844464:	00844e20 	cmpeqi	r2,zero,4408
  844468:	00844b3c 	xorhi	r2,zero,4396
  84446c:	00844e20 	cmpeqi	r2,zero,4408
  844470:	00844e20 	cmpeqi	r2,zero,4408
  844474:	00844e20 	cmpeqi	r2,zero,4408
  844478:	00844e20 	cmpeqi	r2,zero,4408
  84447c:	00844e20 	cmpeqi	r2,zero,4408
  844480:	00844e20 	cmpeqi	r2,zero,4408
  844484:	00844d44 	movi	r2,4405
  844488:	00844d68 	cmpgeui	r2,zero,4405
  84448c:	00844e20 	cmpeqi	r2,zero,4408
  844490:	00844660 	cmpeqi	r2,zero,4377
  844494:	00844d7c 	xorhi	r2,zero,4405
  844498:	00844e20 	cmpeqi	r2,zero,4408
  84449c:	00844b48 	cmpgei	r2,zero,4397
  8444a0:	00844b54 	movui	r2,4397
  8444a4:	00844b54 	movui	r2,4397
  8444a8:	00844b54 	movui	r2,4397
  8444ac:	00844b54 	movui	r2,4397
  8444b0:	00844b54 	movui	r2,4397
  8444b4:	00844b54 	movui	r2,4397
  8444b8:	00844b54 	movui	r2,4397
  8444bc:	00844b54 	movui	r2,4397
  8444c0:	00844b54 	movui	r2,4397
  8444c4:	00844e20 	cmpeqi	r2,zero,4408
  8444c8:	00844e20 	cmpeqi	r2,zero,4408
  8444cc:	00844e20 	cmpeqi	r2,zero,4408
  8444d0:	00844e20 	cmpeqi	r2,zero,4408
  8444d4:	00844e20 	cmpeqi	r2,zero,4408
  8444d8:	00844e20 	cmpeqi	r2,zero,4408
  8444dc:	00844e20 	cmpeqi	r2,zero,4408
  8444e0:	00844e20 	cmpeqi	r2,zero,4408
  8444e4:	00844e20 	cmpeqi	r2,zero,4408
  8444e8:	00844e20 	cmpeqi	r2,zero,4408
  8444ec:	00844b94 	movui	r2,4398
  8444f0:	00844e20 	cmpeqi	r2,zero,4408
  8444f4:	00844e20 	cmpeqi	r2,zero,4408
  8444f8:	00844e20 	cmpeqi	r2,zero,4408
  8444fc:	00844e20 	cmpeqi	r2,zero,4408
  844500:	00844e20 	cmpeqi	r2,zero,4408
  844504:	00844e20 	cmpeqi	r2,zero,4408
  844508:	00844e20 	cmpeqi	r2,zero,4408
  84450c:	00844e20 	cmpeqi	r2,zero,4408
  844510:	00844e20 	cmpeqi	r2,zero,4408
  844514:	00844e20 	cmpeqi	r2,zero,4408
  844518:	00844bd0 	cmplti	r2,zero,4399
  84451c:	00844e20 	cmpeqi	r2,zero,4408
  844520:	00844e20 	cmpeqi	r2,zero,4408
  844524:	00844e20 	cmpeqi	r2,zero,4408
  844528:	00844e20 	cmpeqi	r2,zero,4408
  84452c:	00844e20 	cmpeqi	r2,zero,4408
  844530:	00844c2c 	andhi	r2,zero,4400
  844534:	00844e20 	cmpeqi	r2,zero,4408
  844538:	00844e20 	cmpeqi	r2,zero,4408
  84453c:	00844ca0 	cmpeqi	r2,zero,4402
  844540:	00844e20 	cmpeqi	r2,zero,4408
  844544:	00844e20 	cmpeqi	r2,zero,4408
  844548:	00844e20 	cmpeqi	r2,zero,4408
  84454c:	00844e20 	cmpeqi	r2,zero,4408
  844550:	00844e20 	cmpeqi	r2,zero,4408
  844554:	00844e20 	cmpeqi	r2,zero,4408
  844558:	00844e20 	cmpeqi	r2,zero,4408
  84455c:	00844e20 	cmpeqi	r2,zero,4408
  844560:	00844e20 	cmpeqi	r2,zero,4408
  844564:	00844e20 	cmpeqi	r2,zero,4408
  844568:	00844a48 	cmpgei	r2,zero,4393
  84456c:	00844a78 	rdprs	r2,zero,4393
  844570:	00844e20 	cmpeqi	r2,zero,4408
  844574:	00844e20 	cmpeqi	r2,zero,4408
  844578:	00844e20 	cmpeqi	r2,zero,4408
  84457c:	00844dc8 	cmpgei	r2,zero,4407
  844580:	00844a78 	rdprs	r2,zero,4393
  844584:	00844e20 	cmpeqi	r2,zero,4408
  844588:	00844e20 	cmpeqi	r2,zero,4408
  84458c:	00844920 	cmpeqi	r2,zero,4388
  844590:	00844e20 	cmpeqi	r2,zero,4408
  844594:	00844934 	movhi	r2,4388
  844598:	0084496c 	andhi	r2,zero,4389
  84459c:	0084466c 	andhi	r2,zero,4377
  8445a0:	00844914 	movui	r2,4388
  8445a4:	00844e20 	cmpeqi	r2,zero,4408
  8445a8:	00844ce0 	cmpeqi	r2,zero,4403
  8445ac:	00844e20 	cmpeqi	r2,zero,4408
  8445b0:	00844d2c 	andhi	r2,zero,4404
  8445b4:	00844e20 	cmpeqi	r2,zero,4408
  8445b8:	00844e20 	cmpeqi	r2,zero,4408
  8445bc:	008449f0 	cmpltui	r2,zero,4391
  8445c0:	42000204 	addi	r8,r8,8
  8445c4:	d8c02417 	ldw	r3,144(sp)
  8445c8:	1c07883a 	add	r3,r3,r16
  8445cc:	d8c02415 	stw	r3,144(sp)
  8445d0:	003f8c06 	br	844404 <__alt_mem_epcs_flash_controller_0+0xff83b404>
  8445d4:	d9402017 	ldw	r5,128(sp)
  8445d8:	d9002117 	ldw	r4,132(sp)
  8445dc:	083b5200 	call	83b520 <__swsetup_r>
  8445e0:	1003c11e 	bne	r2,zero,8454e8 <___vfiprintf_internal_r+0x1224>
  8445e4:	d9402017 	ldw	r5,128(sp)
  8445e8:	00c00284 	movi	r3,10
  8445ec:	2880030b 	ldhu	r2,12(r5)
  8445f0:	1080068c 	andi	r2,r2,26
  8445f4:	10ff581e 	bne	r2,r3,844358 <__alt_mem_epcs_flash_controller_0+0xff83b358>
  8445f8:	d8c02017 	ldw	r3,128(sp)
  8445fc:	1880038f 	ldh	r2,14(r3)
  844600:	103f5516 	blt	r2,zero,844358 <__alt_mem_epcs_flash_controller_0+0xff83b358>
  844604:	d9c02217 	ldw	r7,136(sp)
  844608:	d9002117 	ldw	r4,132(sp)
  84460c:	a80d883a 	mov	r6,r21
  844610:	180b883a 	mov	r5,r3
  844614:	08457ec0 	call	8457ec <__sbprintf>
  844618:	dfc03517 	ldw	ra,212(sp)
  84461c:	df003417 	ldw	fp,208(sp)
  844620:	ddc03317 	ldw	r23,204(sp)
  844624:	dd803217 	ldw	r22,200(sp)
  844628:	dd403117 	ldw	r21,196(sp)
  84462c:	dd003017 	ldw	r20,192(sp)
  844630:	dcc02f17 	ldw	r19,188(sp)
  844634:	dc802e17 	ldw	r18,184(sp)
  844638:	dc402d17 	ldw	r17,180(sp)
  84463c:	dc002c17 	ldw	r16,176(sp)
  844640:	dec03604 	addi	sp,sp,216
  844644:	f800283a 	ret
  844648:	08324300 	call	832430 <__sinit>
  84464c:	003f2f06 	br	84430c <__alt_mem_epcs_flash_controller_0+0xff83b30c>
  844650:	d8c02517 	ldw	r3,148(sp)
  844654:	d8802215 	stw	r2,136(sp)
  844658:	00c7c83a 	sub	r3,zero,r3
  84465c:	d8c02515 	stw	r3,148(sp)
  844660:	8c400114 	ori	r17,r17,4
  844664:	b0c00007 	ldb	r3,0(r22)
  844668:	003f7306 	br	844438 <__alt_mem_epcs_flash_controller_0+0xff83b438>
  84466c:	00800c04 	movi	r2,48
  844670:	d9402217 	ldw	r5,136(sp)
  844674:	d8801d05 	stb	r2,116(sp)
  844678:	00801e04 	movi	r2,120
  84467c:	d8801d45 	stb	r2,117(sp)
  844680:	d8001d85 	stb	zero,118(sp)
  844684:	b811883a 	mov	r8,r23
  844688:	28c00104 	addi	r3,r5,4
  84468c:	2cc00017 	ldw	r19,0(r5)
  844690:	0029883a 	mov	r20,zero
  844694:	88800094 	ori	r2,r17,2
  844698:	80032516 	blt	r16,zero,845330 <___vfiprintf_internal_r+0x106c>
  84469c:	00bfdfc4 	movi	r2,-129
  8446a0:	88a2703a 	and	r17,r17,r2
  8446a4:	d8c02215 	stw	r3,136(sp)
  8446a8:	8c400094 	ori	r17,r17,2
  8446ac:	98032a1e 	bne	r19,zero,845358 <___vfiprintf_internal_r+0x1094>
  8446b0:	008021b4 	movhi	r2,134
  8446b4:	10a5fe04 	addi	r2,r2,-26632
  8446b8:	d8802615 	stw	r2,152(sp)
  8446bc:	002b883a 	mov	r21,zero
  8446c0:	8001741e 	bne	r16,zero,844c94 <___vfiprintf_internal_r+0x9d0>
  8446c4:	0021883a 	mov	r16,zero
  8446c8:	0029883a 	mov	r20,zero
  8446cc:	ddc01a04 	addi	r23,sp,104
  8446d0:	8027883a 	mov	r19,r16
  8446d4:	8500010e 	bge	r16,r20,8446dc <___vfiprintf_internal_r+0x418>
  8446d8:	a027883a 	mov	r19,r20
  8446dc:	ad403fcc 	andi	r21,r21,255
  8446e0:	ad40201c 	xori	r21,r21,128
  8446e4:	ad7fe004 	addi	r21,r21,-128
  8446e8:	a8000126 	beq	r21,zero,8446f0 <___vfiprintf_internal_r+0x42c>
  8446ec:	9cc00044 	addi	r19,r19,1
  8446f0:	89c0008c 	andi	r7,r17,2
  8446f4:	38000126 	beq	r7,zero,8446fc <___vfiprintf_internal_r+0x438>
  8446f8:	9cc00084 	addi	r19,r19,2
  8446fc:	88c0210c 	andi	r3,r17,132
  844700:	1801dd1e 	bne	r3,zero,844e78 <___vfiprintf_internal_r+0xbb4>
  844704:	d9402517 	ldw	r5,148(sp)
  844708:	2cebc83a 	sub	r21,r5,r19
  84470c:	0541da0e 	bge	zero,r21,844e78 <___vfiprintf_internal_r+0xbb4>
  844710:	07000404 	movi	fp,16
  844714:	d8801c17 	ldw	r2,112(sp)
  844718:	e543be0e 	bge	fp,r21,845614 <___vfiprintf_internal_r+0x1350>
  84471c:	014021b4 	movhi	r5,134
  844720:	29673d84 	addi	r5,r5,-25354
  844724:	dc002715 	stw	r16,156(sp)
  844728:	d9801b17 	ldw	r6,108(sp)
  84472c:	a821883a 	mov	r16,r21
  844730:	d9402315 	stw	r5,140(sp)
  844734:	028001c4 	movi	r10,7
  844738:	d9c02915 	stw	r7,164(sp)
  84473c:	182b883a 	mov	r21,r3
  844740:	00000506 	br	844758 <___vfiprintf_internal_r+0x494>
  844744:	31000084 	addi	r4,r6,2
  844748:	42000204 	addi	r8,r8,8
  84474c:	180d883a 	mov	r6,r3
  844750:	843ffc04 	addi	r16,r16,-16
  844754:	e4000f0e 	bge	fp,r16,844794 <___vfiprintf_internal_r+0x4d0>
  844758:	010021b4 	movhi	r4,134
  84475c:	10800404 	addi	r2,r2,16
  844760:	30c00044 	addi	r3,r6,1
  844764:	21273d84 	addi	r4,r4,-25354
  844768:	41000015 	stw	r4,0(r8)
  84476c:	47000115 	stw	fp,4(r8)
  844770:	d8801c15 	stw	r2,112(sp)
  844774:	d8c01b15 	stw	r3,108(sp)
  844778:	50fff20e 	bge	r10,r3,844744 <__alt_mem_epcs_flash_controller_0+0xff83b744>
  84477c:	1001b21e 	bne	r2,zero,844e48 <___vfiprintf_internal_r+0xb84>
  844780:	843ffc04 	addi	r16,r16,-16
  844784:	000d883a 	mov	r6,zero
  844788:	01000044 	movi	r4,1
  84478c:	d811883a 	mov	r8,sp
  844790:	e43ff116 	blt	fp,r16,844758 <__alt_mem_epcs_flash_controller_0+0xff83b758>
  844794:	a807883a 	mov	r3,r21
  844798:	d9c02917 	ldw	r7,164(sp)
  84479c:	802b883a 	mov	r21,r16
  8447a0:	dc002717 	ldw	r16,156(sp)
  8447a4:	d9402317 	ldw	r5,140(sp)
  8447a8:	a885883a 	add	r2,r21,r2
  8447ac:	45400115 	stw	r21,4(r8)
  8447b0:	41400015 	stw	r5,0(r8)
  8447b4:	d8801c15 	stw	r2,112(sp)
  8447b8:	d9001b15 	stw	r4,108(sp)
  8447bc:	014001c4 	movi	r5,7
  8447c0:	29026216 	blt	r5,r4,84514c <___vfiprintf_internal_r+0xe88>
  8447c4:	d9801d87 	ldb	r6,118(sp)
  8447c8:	42000204 	addi	r8,r8,8
  8447cc:	21400044 	addi	r5,r4,1
  8447d0:	3001ae1e 	bne	r6,zero,844e8c <___vfiprintf_internal_r+0xbc8>
  8447d4:	3801bb26 	beq	r7,zero,844ec4 <___vfiprintf_internal_r+0xc00>
  8447d8:	d9001d04 	addi	r4,sp,116
  8447dc:	10800084 	addi	r2,r2,2
  8447e0:	41000015 	stw	r4,0(r8)
  8447e4:	01000084 	movi	r4,2
  8447e8:	41000115 	stw	r4,4(r8)
  8447ec:	d8801c15 	stw	r2,112(sp)
  8447f0:	d9401b15 	stw	r5,108(sp)
  8447f4:	010001c4 	movi	r4,7
  8447f8:	2142680e 	bge	r4,r5,84519c <___vfiprintf_internal_r+0xed8>
  8447fc:	1002b11e 	bne	r2,zero,8452c4 <___vfiprintf_internal_r+0x1000>
  844800:	01802004 	movi	r6,128
  844804:	01400044 	movi	r5,1
  844808:	0009883a 	mov	r4,zero
  84480c:	d811883a 	mov	r8,sp
  844810:	1981ae1e 	bne	r3,r6,844ecc <___vfiprintf_internal_r+0xc08>
  844814:	d8c02517 	ldw	r3,148(sp)
  844818:	1cf9c83a 	sub	fp,r3,r19
  84481c:	0701ab0e 	bge	zero,fp,844ecc <___vfiprintf_internal_r+0xc08>
  844820:	05400404 	movi	r21,16
  844824:	af03a90e 	bge	r21,fp,8456cc <___vfiprintf_internal_r+0x1408>
  844828:	014021b4 	movhi	r5,134
  84482c:	29673984 	addi	r5,r5,-25370
  844830:	d9402315 	stw	r5,140(sp)
  844834:	01c001c4 	movi	r7,7
  844838:	00000506 	br	844850 <___vfiprintf_internal_r+0x58c>
  84483c:	21800084 	addi	r6,r4,2
  844840:	42000204 	addi	r8,r8,8
  844844:	1809883a 	mov	r4,r3
  844848:	e73ffc04 	addi	fp,fp,-16
  84484c:	af000d0e 	bge	r21,fp,844884 <___vfiprintf_internal_r+0x5c0>
  844850:	10800404 	addi	r2,r2,16
  844854:	20c00044 	addi	r3,r4,1
  844858:	44800015 	stw	r18,0(r8)
  84485c:	45400115 	stw	r21,4(r8)
  844860:	d8801c15 	stw	r2,112(sp)
  844864:	d8c01b15 	stw	r3,108(sp)
  844868:	38fff40e 	bge	r7,r3,84483c <__alt_mem_epcs_flash_controller_0+0xff83b83c>
  84486c:	10022b1e 	bne	r2,zero,84511c <___vfiprintf_internal_r+0xe58>
  844870:	e73ffc04 	addi	fp,fp,-16
  844874:	01800044 	movi	r6,1
  844878:	0009883a 	mov	r4,zero
  84487c:	d811883a 	mov	r8,sp
  844880:	af3ff316 	blt	r21,fp,844850 <__alt_mem_epcs_flash_controller_0+0xff83b850>
  844884:	d8c02317 	ldw	r3,140(sp)
  844888:	1705883a 	add	r2,r2,fp
  84488c:	47000115 	stw	fp,4(r8)
  844890:	40c00015 	stw	r3,0(r8)
  844894:	d8801c15 	stw	r2,112(sp)
  844898:	d9801b15 	stw	r6,108(sp)
  84489c:	00c001c4 	movi	r3,7
  8448a0:	19829416 	blt	r3,r6,8452f4 <___vfiprintf_internal_r+0x1030>
  8448a4:	8521c83a 	sub	r16,r16,r20
  8448a8:	42000204 	addi	r8,r8,8
  8448ac:	31400044 	addi	r5,r6,1
  8448b0:	3009883a 	mov	r4,r6
  8448b4:	04018716 	blt	zero,r16,844ed4 <___vfiprintf_internal_r+0xc10>
  8448b8:	a085883a 	add	r2,r20,r2
  8448bc:	45c00015 	stw	r23,0(r8)
  8448c0:	45000115 	stw	r20,4(r8)
  8448c4:	d8801c15 	stw	r2,112(sp)
  8448c8:	d9401b15 	stw	r5,108(sp)
  8448cc:	00c001c4 	movi	r3,7
  8448d0:	1941c20e 	bge	r3,r5,844fdc <___vfiprintf_internal_r+0xd18>
  8448d4:	1002531e 	bne	r2,zero,845224 <___vfiprintf_internal_r+0xf60>
  8448d8:	d8001b15 	stw	zero,108(sp)
  8448dc:	8c40010c 	andi	r17,r17,4
  8448e0:	88023226 	beq	r17,zero,8451ac <___vfiprintf_internal_r+0xee8>
  8448e4:	d9002517 	ldw	r4,148(sp)
  8448e8:	24e3c83a 	sub	r17,r4,r19
  8448ec:	04432916 	blt	zero,r17,845594 <___vfiprintf_internal_r+0x12d0>
  8448f0:	d8802517 	ldw	r2,148(sp)
  8448f4:	14c0010e 	bge	r2,r19,8448fc <___vfiprintf_internal_r+0x638>
  8448f8:	9805883a 	mov	r2,r19
  8448fc:	d8c02417 	ldw	r3,144(sp)
  844900:	1887883a 	add	r3,r3,r2
  844904:	d8c02415 	stw	r3,144(sp)
  844908:	d8001b15 	stw	zero,108(sp)
  84490c:	d811883a 	mov	r8,sp
  844910:	003ea006 	br	844394 <__alt_mem_epcs_flash_controller_0+0xff83b394>
  844914:	8c400814 	ori	r17,r17,32
  844918:	b0c00007 	ldb	r3,0(r22)
  84491c:	003ec606 	br	844438 <__alt_mem_epcs_flash_controller_0+0xff83b438>
  844920:	b0c00007 	ldb	r3,0(r22)
  844924:	00801b04 	movi	r2,108
  844928:	18832026 	beq	r3,r2,8455ac <___vfiprintf_internal_r+0x12e8>
  84492c:	8c400414 	ori	r17,r17,16
  844930:	003ec106 	br	844438 <__alt_mem_epcs_flash_controller_0+0xff83b438>
  844934:	9cc03fcc 	andi	r19,r19,255
  844938:	b811883a 	mov	r8,r23
  84493c:	9803981e 	bne	r19,zero,8457a0 <___vfiprintf_internal_r+0x14dc>
  844940:	8880080c 	andi	r2,r17,32
  844944:	1002be26 	beq	r2,zero,845440 <___vfiprintf_internal_r+0x117c>
  844948:	d9002217 	ldw	r4,136(sp)
  84494c:	d9402417 	ldw	r5,144(sp)
  844950:	20800017 	ldw	r2,0(r4)
  844954:	2807d7fa 	srai	r3,r5,31
  844958:	21000104 	addi	r4,r4,4
  84495c:	d9002215 	stw	r4,136(sp)
  844960:	11400015 	stw	r5,0(r2)
  844964:	10c00115 	stw	r3,4(r2)
  844968:	003e8a06 	br	844394 <__alt_mem_epcs_flash_controller_0+0xff83b394>
  84496c:	9cc03fcc 	andi	r19,r19,255
  844970:	b811883a 	mov	r8,r23
  844974:	9803871e 	bne	r19,zero,845794 <___vfiprintf_internal_r+0x14d0>
  844978:	8880080c 	andi	r2,r17,32
  84497c:	10009a26 	beq	r2,zero,844be8 <___vfiprintf_internal_r+0x924>
  844980:	d9002217 	ldw	r4,136(sp)
  844984:	d8001d85 	stb	zero,118(sp)
  844988:	20800204 	addi	r2,r4,8
  84498c:	24c00017 	ldw	r19,0(r4)
  844990:	25000117 	ldw	r20,4(r4)
  844994:	8002a416 	blt	r16,zero,845428 <___vfiprintf_internal_r+0x1164>
  844998:	013fdfc4 	movi	r4,-129
  84499c:	9d06b03a 	or	r3,r19,r20
  8449a0:	d8802215 	stw	r2,136(sp)
  8449a4:	8922703a 	and	r17,r17,r4
  8449a8:	18009b26 	beq	r3,zero,844c18 <___vfiprintf_internal_r+0x954>
  8449ac:	002b883a 	mov	r21,zero
  8449b0:	ddc01a04 	addi	r23,sp,104
  8449b4:	9806d0fa 	srli	r3,r19,3
  8449b8:	a008977a 	slli	r4,r20,29
  8449bc:	a028d0fa 	srli	r20,r20,3
  8449c0:	9cc001cc 	andi	r19,r19,7
  8449c4:	98800c04 	addi	r2,r19,48
  8449c8:	bdffffc4 	addi	r23,r23,-1
  8449cc:	20e6b03a 	or	r19,r4,r3
  8449d0:	b8800005 	stb	r2,0(r23)
  8449d4:	9d06b03a 	or	r3,r19,r20
  8449d8:	183ff61e 	bne	r3,zero,8449b4 <__alt_mem_epcs_flash_controller_0+0xff83b9b4>
  8449dc:	88c0004c 	andi	r3,r17,1
  8449e0:	18021f1e 	bne	r3,zero,845260 <___vfiprintf_internal_r+0xf9c>
  8449e4:	d9401e17 	ldw	r5,120(sp)
  8449e8:	2de9c83a 	sub	r20,r5,r23
  8449ec:	003f3806 	br	8446d0 <__alt_mem_epcs_flash_controller_0+0xff83b6d0>
  8449f0:	9cc03fcc 	andi	r19,r19,255
  8449f4:	b811883a 	mov	r8,r23
  8449f8:	98034f1e 	bne	r19,zero,845738 <___vfiprintf_internal_r+0x1474>
  8449fc:	008021b4 	movhi	r2,134
  844a00:	10a5fe04 	addi	r2,r2,-26632
  844a04:	d8802615 	stw	r2,152(sp)
  844a08:	8880080c 	andi	r2,r17,32
  844a0c:	1000ac26 	beq	r2,zero,844cc0 <___vfiprintf_internal_r+0x9fc>
  844a10:	d9002217 	ldw	r4,136(sp)
  844a14:	24c00017 	ldw	r19,0(r4)
  844a18:	25000117 	ldw	r20,4(r4)
  844a1c:	21000204 	addi	r4,r4,8
  844a20:	d9002215 	stw	r4,136(sp)
  844a24:	8880004c 	andi	r2,r17,1
  844a28:	1001e726 	beq	r2,zero,8451c8 <___vfiprintf_internal_r+0xf04>
  844a2c:	9d04b03a 	or	r2,r19,r20
  844a30:	10025c1e 	bne	r2,zero,8453a4 <___vfiprintf_internal_r+0x10e0>
  844a34:	d8001d85 	stb	zero,118(sp)
  844a38:	80024416 	blt	r16,zero,84534c <___vfiprintf_internal_r+0x1088>
  844a3c:	00bfdfc4 	movi	r2,-129
  844a40:	88a2703a 	and	r17,r17,r2
  844a44:	003f1d06 	br	8446bc <__alt_mem_epcs_flash_controller_0+0xff83b6bc>
  844a48:	d8c02217 	ldw	r3,136(sp)
  844a4c:	04c00044 	movi	r19,1
  844a50:	b811883a 	mov	r8,r23
  844a54:	18800017 	ldw	r2,0(r3)
  844a58:	18c00104 	addi	r3,r3,4
  844a5c:	d8001d85 	stb	zero,118(sp)
  844a60:	d8801005 	stb	r2,64(sp)
  844a64:	d8c02215 	stw	r3,136(sp)
  844a68:	9829883a 	mov	r20,r19
  844a6c:	ddc01004 	addi	r23,sp,64
  844a70:	0021883a 	mov	r16,zero
  844a74:	003f1e06 	br	8446f0 <__alt_mem_epcs_flash_controller_0+0xff83b6f0>
  844a78:	9cc03fcc 	andi	r19,r19,255
  844a7c:	b811883a 	mov	r8,r23
  844a80:	9803331e 	bne	r19,zero,845750 <___vfiprintf_internal_r+0x148c>
  844a84:	8880080c 	andi	r2,r17,32
  844a88:	10004826 	beq	r2,zero,844bac <___vfiprintf_internal_r+0x8e8>
  844a8c:	d9002217 	ldw	r4,136(sp)
  844a90:	20800117 	ldw	r2,4(r4)
  844a94:	24c00017 	ldw	r19,0(r4)
  844a98:	21000204 	addi	r4,r4,8
  844a9c:	d9002215 	stw	r4,136(sp)
  844aa0:	1029883a 	mov	r20,r2
  844aa4:	10024c16 	blt	r2,zero,8453d8 <___vfiprintf_internal_r+0x1114>
  844aa8:	dd401d83 	ldbu	r21,118(sp)
  844aac:	80007116 	blt	r16,zero,844c74 <___vfiprintf_internal_r+0x9b0>
  844ab0:	00ffdfc4 	movi	r3,-129
  844ab4:	9d04b03a 	or	r2,r19,r20
  844ab8:	88e2703a 	and	r17,r17,r3
  844abc:	1000d126 	beq	r2,zero,844e04 <___vfiprintf_internal_r+0xb40>
  844ac0:	a0023526 	beq	r20,zero,845398 <___vfiprintf_internal_r+0x10d4>
  844ac4:	ddc01a04 	addi	r23,sp,104
  844ac8:	4039883a 	mov	fp,r8
  844acc:	9809883a 	mov	r4,r19
  844ad0:	a00b883a 	mov	r5,r20
  844ad4:	01800284 	movi	r6,10
  844ad8:	000f883a 	mov	r7,zero
  844adc:	084714c0 	call	84714c <__umoddi3>
  844ae0:	10800c04 	addi	r2,r2,48
  844ae4:	bdffffc4 	addi	r23,r23,-1
  844ae8:	9809883a 	mov	r4,r19
  844aec:	a00b883a 	mov	r5,r20
  844af0:	b8800005 	stb	r2,0(r23)
  844af4:	01800284 	movi	r6,10
  844af8:	000f883a 	mov	r7,zero
  844afc:	0846b500 	call	846b50 <__udivdi3>
  844b00:	1027883a 	mov	r19,r2
  844b04:	10c4b03a 	or	r2,r2,r3
  844b08:	1829883a 	mov	r20,r3
  844b0c:	103fef1e 	bne	r2,zero,844acc <__alt_mem_epcs_flash_controller_0+0xff83bacc>
  844b10:	d9001e17 	ldw	r4,120(sp)
  844b14:	e011883a 	mov	r8,fp
  844b18:	25e9c83a 	sub	r20,r4,r23
  844b1c:	003eec06 	br	8446d0 <__alt_mem_epcs_flash_controller_0+0xff83b6d0>
  844b20:	d8802307 	ldb	r2,140(sp)
  844b24:	1002361e 	bne	r2,zero,845400 <___vfiprintf_internal_r+0x113c>
  844b28:	00c00804 	movi	r3,32
  844b2c:	d8c02305 	stb	r3,140(sp)
  844b30:	04c00044 	movi	r19,1
  844b34:	b0c00007 	ldb	r3,0(r22)
  844b38:	003e3f06 	br	844438 <__alt_mem_epcs_flash_controller_0+0xff83b438>
  844b3c:	8c400054 	ori	r17,r17,1
  844b40:	b0c00007 	ldb	r3,0(r22)
  844b44:	003e3c06 	br	844438 <__alt_mem_epcs_flash_controller_0+0xff83b438>
  844b48:	8c402014 	ori	r17,r17,128
  844b4c:	b0c00007 	ldb	r3,0(r22)
  844b50:	003e3906 	br	844438 <__alt_mem_epcs_flash_controller_0+0xff83b438>
  844b54:	dc002715 	stw	r16,156(sp)
  844b58:	d8002515 	stw	zero,148(sp)
  844b5c:	1f3ff404 	addi	fp,r3,-48
  844b60:	0009883a 	mov	r4,zero
  844b64:	b021883a 	mov	r16,r22
  844b68:	01400284 	movi	r5,10
  844b6c:	08301e80 	call	8301e8 <__mulsi3>
  844b70:	80c00007 	ldb	r3,0(r16)
  844b74:	e089883a 	add	r4,fp,r2
  844b78:	b5800044 	addi	r22,r22,1
  844b7c:	1f3ff404 	addi	fp,r3,-48
  844b80:	b021883a 	mov	r16,r22
  844b84:	af3ff82e 	bgeu	r21,fp,844b68 <__alt_mem_epcs_flash_controller_0+0xff83bb68>
  844b88:	d9002515 	stw	r4,148(sp)
  844b8c:	dc002717 	ldw	r16,156(sp)
  844b90:	003e2a06 	br	84443c <__alt_mem_epcs_flash_controller_0+0xff83b43c>
  844b94:	9cc03fcc 	andi	r19,r19,255
  844b98:	b811883a 	mov	r8,r23
  844b9c:	9802e91e 	bne	r19,zero,845744 <___vfiprintf_internal_r+0x1480>
  844ba0:	8c400414 	ori	r17,r17,16
  844ba4:	8880080c 	andi	r2,r17,32
  844ba8:	103fb81e 	bne	r2,zero,844a8c <__alt_mem_epcs_flash_controller_0+0xff83ba8c>
  844bac:	8880040c 	andi	r2,r17,16
  844bb0:	10022e26 	beq	r2,zero,84546c <___vfiprintf_internal_r+0x11a8>
  844bb4:	d9402217 	ldw	r5,136(sp)
  844bb8:	2cc00017 	ldw	r19,0(r5)
  844bbc:	29400104 	addi	r5,r5,4
  844bc0:	d9402215 	stw	r5,136(sp)
  844bc4:	9829d7fa 	srai	r20,r19,31
  844bc8:	a005883a 	mov	r2,r20
  844bcc:	003fb506 	br	844aa4 <__alt_mem_epcs_flash_controller_0+0xff83baa4>
  844bd0:	9cc03fcc 	andi	r19,r19,255
  844bd4:	b811883a 	mov	r8,r23
  844bd8:	9802fa1e 	bne	r19,zero,8457c4 <___vfiprintf_internal_r+0x1500>
  844bdc:	8c400414 	ori	r17,r17,16
  844be0:	8880080c 	andi	r2,r17,32
  844be4:	103f661e 	bne	r2,zero,844980 <__alt_mem_epcs_flash_controller_0+0xff83b980>
  844be8:	8880040c 	andi	r2,r17,16
  844bec:	10020626 	beq	r2,zero,845408 <___vfiprintf_internal_r+0x1144>
  844bf0:	d9402217 	ldw	r5,136(sp)
  844bf4:	d8001d85 	stb	zero,118(sp)
  844bf8:	0029883a 	mov	r20,zero
  844bfc:	28800104 	addi	r2,r5,4
  844c00:	2cc00017 	ldw	r19,0(r5)
  844c04:	80020816 	blt	r16,zero,845428 <___vfiprintf_internal_r+0x1164>
  844c08:	00ffdfc4 	movi	r3,-129
  844c0c:	d8802215 	stw	r2,136(sp)
  844c10:	88e2703a 	and	r17,r17,r3
  844c14:	983f651e 	bne	r19,zero,8449ac <__alt_mem_epcs_flash_controller_0+0xff83b9ac>
  844c18:	002b883a 	mov	r21,zero
  844c1c:	8002cf26 	beq	r16,zero,84575c <___vfiprintf_internal_r+0x1498>
  844c20:	0027883a 	mov	r19,zero
  844c24:	0029883a 	mov	r20,zero
  844c28:	003f6106 	br	8449b0 <__alt_mem_epcs_flash_controller_0+0xff83b9b0>
  844c2c:	9cc03fcc 	andi	r19,r19,255
  844c30:	b811883a 	mov	r8,r23
  844c34:	9802e01e 	bne	r19,zero,8457b8 <___vfiprintf_internal_r+0x14f4>
  844c38:	8c400414 	ori	r17,r17,16
  844c3c:	8880080c 	andi	r2,r17,32
  844c40:	1000641e 	bne	r2,zero,844dd4 <___vfiprintf_internal_r+0xb10>
  844c44:	8880040c 	andi	r2,r17,16
  844c48:	1001c81e 	bne	r2,zero,84536c <___vfiprintf_internal_r+0x10a8>
  844c4c:	8880100c 	andi	r2,r17,64
  844c50:	d8001d85 	stb	zero,118(sp)
  844c54:	1002281e 	bne	r2,zero,8454f8 <___vfiprintf_internal_r+0x1234>
  844c58:	d9002217 	ldw	r4,136(sp)
  844c5c:	0029883a 	mov	r20,zero
  844c60:	20800104 	addi	r2,r4,4
  844c64:	24c00017 	ldw	r19,0(r4)
  844c68:	8001c60e 	bge	r16,zero,845384 <___vfiprintf_internal_r+0x10c0>
  844c6c:	d8802215 	stw	r2,136(sp)
  844c70:	002b883a 	mov	r21,zero
  844c74:	9d04b03a 	or	r2,r19,r20
  844c78:	103f911e 	bne	r2,zero,844ac0 <__alt_mem_epcs_flash_controller_0+0xff83bac0>
  844c7c:	00800044 	movi	r2,1
  844c80:	10803fcc 	andi	r2,r2,255
  844c84:	00c00044 	movi	r3,1
  844c88:	10c05f26 	beq	r2,r3,844e08 <___vfiprintf_internal_r+0xb44>
  844c8c:	00c00084 	movi	r3,2
  844c90:	10ffe31e 	bne	r2,r3,844c20 <__alt_mem_epcs_flash_controller_0+0xff83bc20>
  844c94:	0027883a 	mov	r19,zero
  844c98:	0029883a 	mov	r20,zero
  844c9c:	00015106 	br	8451e4 <___vfiprintf_internal_r+0xf20>
  844ca0:	9cc03fcc 	andi	r19,r19,255
  844ca4:	b811883a 	mov	r8,r23
  844ca8:	9802c01e 	bne	r19,zero,8457ac <___vfiprintf_internal_r+0x14e8>
  844cac:	014021b4 	movhi	r5,134
  844cb0:	2965f904 	addi	r5,r5,-26652
  844cb4:	d9402615 	stw	r5,152(sp)
  844cb8:	8880080c 	andi	r2,r17,32
  844cbc:	103f541e 	bne	r2,zero,844a10 <__alt_mem_epcs_flash_controller_0+0xff83ba10>
  844cc0:	8880040c 	andi	r2,r17,16
  844cc4:	1001f226 	beq	r2,zero,845490 <___vfiprintf_internal_r+0x11cc>
  844cc8:	d9402217 	ldw	r5,136(sp)
  844ccc:	0029883a 	mov	r20,zero
  844cd0:	2cc00017 	ldw	r19,0(r5)
  844cd4:	29400104 	addi	r5,r5,4
  844cd8:	d9402215 	stw	r5,136(sp)
  844cdc:	003f5106 	br	844a24 <__alt_mem_epcs_flash_controller_0+0xff83ba24>
  844ce0:	d8c02217 	ldw	r3,136(sp)
  844ce4:	b811883a 	mov	r8,r23
  844ce8:	d8001d85 	stb	zero,118(sp)
  844cec:	1dc00017 	ldw	r23,0(r3)
  844cf0:	1f000104 	addi	fp,r3,4
  844cf4:	b8025926 	beq	r23,zero,84565c <___vfiprintf_internal_r+0x1398>
  844cf8:	80023316 	blt	r16,zero,8455c8 <___vfiprintf_internal_r+0x1304>
  844cfc:	800d883a 	mov	r6,r16
  844d00:	000b883a 	mov	r5,zero
  844d04:	b809883a 	mov	r4,r23
  844d08:	da002a15 	stw	r8,168(sp)
  844d0c:	0833b680 	call	833b68 <memchr>
  844d10:	da002a17 	ldw	r8,168(sp)
  844d14:	10026826 	beq	r2,zero,8456b8 <___vfiprintf_internal_r+0x13f4>
  844d18:	15e9c83a 	sub	r20,r2,r23
  844d1c:	dd401d83 	ldbu	r21,118(sp)
  844d20:	df002215 	stw	fp,136(sp)
  844d24:	0021883a 	mov	r16,zero
  844d28:	003e6906 	br	8446d0 <__alt_mem_epcs_flash_controller_0+0xff83b6d0>
  844d2c:	9cc03fcc 	andi	r19,r19,255
  844d30:	b811883a 	mov	r8,r23
  844d34:	983fc126 	beq	r19,zero,844c3c <__alt_mem_epcs_flash_controller_0+0xff83bc3c>
  844d38:	d8c02303 	ldbu	r3,140(sp)
  844d3c:	d8c01d85 	stb	r3,118(sp)
  844d40:	003fbe06 	br	844c3c <__alt_mem_epcs_flash_controller_0+0xff83bc3c>
  844d44:	d9002217 	ldw	r4,136(sp)
  844d48:	d9402217 	ldw	r5,136(sp)
  844d4c:	21000017 	ldw	r4,0(r4)
  844d50:	28800104 	addi	r2,r5,4
  844d54:	d9002515 	stw	r4,148(sp)
  844d58:	203e3d16 	blt	r4,zero,844650 <__alt_mem_epcs_flash_controller_0+0xff83b650>
  844d5c:	d8802215 	stw	r2,136(sp)
  844d60:	b0c00007 	ldb	r3,0(r22)
  844d64:	003db406 	br	844438 <__alt_mem_epcs_flash_controller_0+0xff83b438>
  844d68:	00c00ac4 	movi	r3,43
  844d6c:	d8c02305 	stb	r3,140(sp)
  844d70:	04c00044 	movi	r19,1
  844d74:	b0c00007 	ldb	r3,0(r22)
  844d78:	003daf06 	br	844438 <__alt_mem_epcs_flash_controller_0+0xff83b438>
  844d7c:	b0c00007 	ldb	r3,0(r22)
  844d80:	01000a84 	movi	r4,42
  844d84:	b4000044 	addi	r16,r22,1
  844d88:	19025e26 	beq	r3,r4,845704 <___vfiprintf_internal_r+0x1440>
  844d8c:	1f3ff404 	addi	fp,r3,-48
  844d90:	0009883a 	mov	r4,zero
  844d94:	af025236 	bltu	r21,fp,8456e0 <___vfiprintf_internal_r+0x141c>
  844d98:	01400284 	movi	r5,10
  844d9c:	08301e80 	call	8301e8 <__mulsi3>
  844da0:	80c00007 	ldb	r3,0(r16)
  844da4:	1709883a 	add	r4,r2,fp
  844da8:	85800044 	addi	r22,r16,1
  844dac:	1f3ff404 	addi	fp,r3,-48
  844db0:	b021883a 	mov	r16,r22
  844db4:	af3ff82e 	bgeu	r21,fp,844d98 <__alt_mem_epcs_flash_controller_0+0xff83bd98>
  844db8:	2021883a 	mov	r16,r4
  844dbc:	203d9f0e 	bge	r4,zero,84443c <__alt_mem_epcs_flash_controller_0+0xff83b43c>
  844dc0:	043fffc4 	movi	r16,-1
  844dc4:	003d9d06 	br	84443c <__alt_mem_epcs_flash_controller_0+0xff83b43c>
  844dc8:	8c401014 	ori	r17,r17,64
  844dcc:	b0c00007 	ldb	r3,0(r22)
  844dd0:	003d9906 	br	844438 <__alt_mem_epcs_flash_controller_0+0xff83b438>
  844dd4:	d9002217 	ldw	r4,136(sp)
  844dd8:	d8001d85 	stb	zero,118(sp)
  844ddc:	20c00204 	addi	r3,r4,8
  844de0:	24c00017 	ldw	r19,0(r4)
  844de4:	25000117 	ldw	r20,4(r4)
  844de8:	8001e716 	blt	r16,zero,845588 <___vfiprintf_internal_r+0x12c4>
  844dec:	013fdfc4 	movi	r4,-129
  844df0:	9d04b03a 	or	r2,r19,r20
  844df4:	d8c02215 	stw	r3,136(sp)
  844df8:	8922703a 	and	r17,r17,r4
  844dfc:	002b883a 	mov	r21,zero
  844e00:	103f2f1e 	bne	r2,zero,844ac0 <__alt_mem_epcs_flash_controller_0+0xff83bac0>
  844e04:	803e2f26 	beq	r16,zero,8446c4 <__alt_mem_epcs_flash_controller_0+0xff83b6c4>
  844e08:	0027883a 	mov	r19,zero
  844e0c:	9cc00c04 	addi	r19,r19,48
  844e10:	dcc019c5 	stb	r19,103(sp)
  844e14:	dd002817 	ldw	r20,160(sp)
  844e18:	ddc019c4 	addi	r23,sp,103
  844e1c:	003e2c06 	br	8446d0 <__alt_mem_epcs_flash_controller_0+0xff83b6d0>
  844e20:	9cc03fcc 	andi	r19,r19,255
  844e24:	b811883a 	mov	r8,r23
  844e28:	9802571e 	bne	r19,zero,845788 <___vfiprintf_internal_r+0x14c4>
  844e2c:	18005726 	beq	r3,zero,844f8c <___vfiprintf_internal_r+0xcc8>
  844e30:	04c00044 	movi	r19,1
  844e34:	d8c01005 	stb	r3,64(sp)
  844e38:	d8001d85 	stb	zero,118(sp)
  844e3c:	9829883a 	mov	r20,r19
  844e40:	ddc01004 	addi	r23,sp,64
  844e44:	003f0a06 	br	844a70 <__alt_mem_epcs_flash_controller_0+0xff83ba70>
  844e48:	d9402017 	ldw	r5,128(sp)
  844e4c:	d9002117 	ldw	r4,132(sp)
  844e50:	d9801a04 	addi	r6,sp,104
  844e54:	da802a15 	stw	r10,168(sp)
  844e58:	08441b00 	call	8441b0 <__sprint_r.part.0>
  844e5c:	da802a17 	ldw	r10,168(sp)
  844e60:	1000501e 	bne	r2,zero,844fa4 <___vfiprintf_internal_r+0xce0>
  844e64:	d9801b17 	ldw	r6,108(sp)
  844e68:	d8801c17 	ldw	r2,112(sp)
  844e6c:	d811883a 	mov	r8,sp
  844e70:	31000044 	addi	r4,r6,1
  844e74:	003e3606 	br	844750 <__alt_mem_epcs_flash_controller_0+0xff83b750>
  844e78:	d9001b17 	ldw	r4,108(sp)
  844e7c:	d8801c17 	ldw	r2,112(sp)
  844e80:	21400044 	addi	r5,r4,1
  844e84:	d9801d87 	ldb	r6,118(sp)
  844e88:	303e5226 	beq	r6,zero,8447d4 <__alt_mem_epcs_flash_controller_0+0xff83b7d4>
  844e8c:	01800044 	movi	r6,1
  844e90:	d9001d84 	addi	r4,sp,118
  844e94:	1185883a 	add	r2,r2,r6
  844e98:	41000015 	stw	r4,0(r8)
  844e9c:	41800115 	stw	r6,4(r8)
  844ea0:	d8801c15 	stw	r2,112(sp)
  844ea4:	d9401b15 	stw	r5,108(sp)
  844ea8:	010001c4 	movi	r4,7
  844eac:	2140b00e 	bge	r4,r5,845170 <___vfiprintf_internal_r+0xeac>
  844eb0:	1000f61e 	bne	r2,zero,84528c <___vfiprintf_internal_r+0xfc8>
  844eb4:	3800b31e 	bne	r7,zero,845184 <___vfiprintf_internal_r+0xec0>
  844eb8:	0009883a 	mov	r4,zero
  844ebc:	300b883a 	mov	r5,r6
  844ec0:	d811883a 	mov	r8,sp
  844ec4:	01802004 	movi	r6,128
  844ec8:	19be5226 	beq	r3,r6,844814 <__alt_mem_epcs_flash_controller_0+0xff83b814>
  844ecc:	8521c83a 	sub	r16,r16,r20
  844ed0:	043e790e 	bge	zero,r16,8448b8 <__alt_mem_epcs_flash_controller_0+0xff83b8b8>
  844ed4:	05400404 	movi	r21,16
  844ed8:	ac01b00e 	bge	r21,r16,84559c <___vfiprintf_internal_r+0x12d8>
  844edc:	014021b4 	movhi	r5,134
  844ee0:	29673984 	addi	r5,r5,-25370
  844ee4:	d9402315 	stw	r5,140(sp)
  844ee8:	070001c4 	movi	fp,7
  844eec:	00000506 	br	844f04 <___vfiprintf_internal_r+0xc40>
  844ef0:	21400084 	addi	r5,r4,2
  844ef4:	42000204 	addi	r8,r8,8
  844ef8:	1809883a 	mov	r4,r3
  844efc:	843ffc04 	addi	r16,r16,-16
  844f00:	ac000d0e 	bge	r21,r16,844f38 <___vfiprintf_internal_r+0xc74>
  844f04:	10800404 	addi	r2,r2,16
  844f08:	20c00044 	addi	r3,r4,1
  844f0c:	44800015 	stw	r18,0(r8)
  844f10:	45400115 	stw	r21,4(r8)
  844f14:	d8801c15 	stw	r2,112(sp)
  844f18:	d8c01b15 	stw	r3,108(sp)
  844f1c:	e0fff40e 	bge	fp,r3,844ef0 <__alt_mem_epcs_flash_controller_0+0xff83bef0>
  844f20:	1000101e 	bne	r2,zero,844f64 <___vfiprintf_internal_r+0xca0>
  844f24:	843ffc04 	addi	r16,r16,-16
  844f28:	01400044 	movi	r5,1
  844f2c:	0009883a 	mov	r4,zero
  844f30:	d811883a 	mov	r8,sp
  844f34:	ac3ff316 	blt	r21,r16,844f04 <__alt_mem_epcs_flash_controller_0+0xff83bf04>
  844f38:	d8c02317 	ldw	r3,140(sp)
  844f3c:	1405883a 	add	r2,r2,r16
  844f40:	44000115 	stw	r16,4(r8)
  844f44:	40c00015 	stw	r3,0(r8)
  844f48:	d8801c15 	stw	r2,112(sp)
  844f4c:	d9401b15 	stw	r5,108(sp)
  844f50:	00c001c4 	movi	r3,7
  844f54:	19401916 	blt	r3,r5,844fbc <___vfiprintf_internal_r+0xcf8>
  844f58:	42000204 	addi	r8,r8,8
  844f5c:	29400044 	addi	r5,r5,1
  844f60:	003e5506 	br	8448b8 <__alt_mem_epcs_flash_controller_0+0xff83b8b8>
  844f64:	d9402017 	ldw	r5,128(sp)
  844f68:	d9002117 	ldw	r4,132(sp)
  844f6c:	d9801a04 	addi	r6,sp,104
  844f70:	08441b00 	call	8441b0 <__sprint_r.part.0>
  844f74:	10000b1e 	bne	r2,zero,844fa4 <___vfiprintf_internal_r+0xce0>
  844f78:	d9001b17 	ldw	r4,108(sp)
  844f7c:	d8801c17 	ldw	r2,112(sp)
  844f80:	d811883a 	mov	r8,sp
  844f84:	21400044 	addi	r5,r4,1
  844f88:	003fdc06 	br	844efc <__alt_mem_epcs_flash_controller_0+0xff83befc>
  844f8c:	d8801c17 	ldw	r2,112(sp)
  844f90:	10000426 	beq	r2,zero,844fa4 <___vfiprintf_internal_r+0xce0>
  844f94:	d9402017 	ldw	r5,128(sp)
  844f98:	d9002117 	ldw	r4,132(sp)
  844f9c:	d9801a04 	addi	r6,sp,104
  844fa0:	08441b00 	call	8441b0 <__sprint_r.part.0>
  844fa4:	d9402017 	ldw	r5,128(sp)
  844fa8:	2880030b 	ldhu	r2,12(r5)
  844fac:	1080100c 	andi	r2,r2,64
  844fb0:	10014d1e 	bne	r2,zero,8454e8 <___vfiprintf_internal_r+0x1224>
  844fb4:	d8802417 	ldw	r2,144(sp)
  844fb8:	003d9706 	br	844618 <__alt_mem_epcs_flash_controller_0+0xff83b618>
  844fbc:	1000d21e 	bne	r2,zero,845308 <___vfiprintf_internal_r+0x1044>
  844fc0:	00c00044 	movi	r3,1
  844fc4:	a005883a 	mov	r2,r20
  844fc8:	ddc00015 	stw	r23,0(sp)
  844fcc:	dd000115 	stw	r20,4(sp)
  844fd0:	dd001c15 	stw	r20,112(sp)
  844fd4:	d8c01b15 	stw	r3,108(sp)
  844fd8:	d811883a 	mov	r8,sp
  844fdc:	42000204 	addi	r8,r8,8
  844fe0:	8c40010c 	andi	r17,r17,4
  844fe4:	88004026 	beq	r17,zero,8450e8 <___vfiprintf_internal_r+0xe24>
  844fe8:	d9002517 	ldw	r4,148(sp)
  844fec:	24e3c83a 	sub	r17,r4,r19
  844ff0:	04403d0e 	bge	zero,r17,8450e8 <___vfiprintf_internal_r+0xe24>
  844ff4:	04000404 	movi	r16,16
  844ff8:	8441a90e 	bge	r16,r17,8456a0 <___vfiprintf_internal_r+0x13dc>
  844ffc:	00c021b4 	movhi	r3,134
  845000:	18e73d84 	addi	r3,r3,-25354
  845004:	d9001b17 	ldw	r4,108(sp)
  845008:	d8c02315 	stw	r3,140(sp)
  84500c:	050001c4 	movi	r20,7
  845010:	dd402117 	ldw	r21,132(sp)
  845014:	ddc02017 	ldw	r23,128(sp)
  845018:	00000506 	br	845030 <___vfiprintf_internal_r+0xd6c>
  84501c:	21400084 	addi	r5,r4,2
  845020:	42000204 	addi	r8,r8,8
  845024:	1809883a 	mov	r4,r3
  845028:	8c7ffc04 	addi	r17,r17,-16
  84502c:	84400f0e 	bge	r16,r17,84506c <___vfiprintf_internal_r+0xda8>
  845030:	014021b4 	movhi	r5,134
  845034:	10800404 	addi	r2,r2,16
  845038:	20c00044 	addi	r3,r4,1
  84503c:	29673d84 	addi	r5,r5,-25354
  845040:	41400015 	stw	r5,0(r8)
  845044:	44000115 	stw	r16,4(r8)
  845048:	d8801c15 	stw	r2,112(sp)
  84504c:	d8c01b15 	stw	r3,108(sp)
  845050:	a0fff20e 	bge	r20,r3,84501c <__alt_mem_epcs_flash_controller_0+0xff83c01c>
  845054:	1000141e 	bne	r2,zero,8450a8 <___vfiprintf_internal_r+0xde4>
  845058:	8c7ffc04 	addi	r17,r17,-16
  84505c:	01400044 	movi	r5,1
  845060:	0009883a 	mov	r4,zero
  845064:	d811883a 	mov	r8,sp
  845068:	847ff116 	blt	r16,r17,845030 <__alt_mem_epcs_flash_controller_0+0xff83c030>
  84506c:	d8c02317 	ldw	r3,140(sp)
  845070:	1445883a 	add	r2,r2,r17
  845074:	44400115 	stw	r17,4(r8)
  845078:	40c00015 	stw	r3,0(r8)
  84507c:	d8801c15 	stw	r2,112(sp)
  845080:	d9401b15 	stw	r5,108(sp)
  845084:	00c001c4 	movi	r3,7
  845088:	1940170e 	bge	r3,r5,8450e8 <___vfiprintf_internal_r+0xe24>
  84508c:	1000101e 	bne	r2,zero,8450d0 <___vfiprintf_internal_r+0xe0c>
  845090:	d8802517 	ldw	r2,148(sp)
  845094:	14c11616 	blt	r2,r19,8454f0 <___vfiprintf_internal_r+0x122c>
  845098:	d9002417 	ldw	r4,144(sp)
  84509c:	2089883a 	add	r4,r4,r2
  8450a0:	d9002415 	stw	r4,144(sp)
  8450a4:	003e1806 	br	844908 <__alt_mem_epcs_flash_controller_0+0xff83b908>
  8450a8:	d9801a04 	addi	r6,sp,104
  8450ac:	b80b883a 	mov	r5,r23
  8450b0:	a809883a 	mov	r4,r21
  8450b4:	08441b00 	call	8441b0 <__sprint_r.part.0>
  8450b8:	103fba1e 	bne	r2,zero,844fa4 <__alt_mem_epcs_flash_controller_0+0xff83bfa4>
  8450bc:	d9001b17 	ldw	r4,108(sp)
  8450c0:	d8801c17 	ldw	r2,112(sp)
  8450c4:	d811883a 	mov	r8,sp
  8450c8:	21400044 	addi	r5,r4,1
  8450cc:	003fd606 	br	845028 <__alt_mem_epcs_flash_controller_0+0xff83c028>
  8450d0:	d9402017 	ldw	r5,128(sp)
  8450d4:	d9002117 	ldw	r4,132(sp)
  8450d8:	d9801a04 	addi	r6,sp,104
  8450dc:	08441b00 	call	8441b0 <__sprint_r.part.0>
  8450e0:	103fb01e 	bne	r2,zero,844fa4 <__alt_mem_epcs_flash_controller_0+0xff83bfa4>
  8450e4:	d8801c17 	ldw	r2,112(sp)
  8450e8:	d8c02517 	ldw	r3,148(sp)
  8450ec:	1cc0010e 	bge	r3,r19,8450f4 <___vfiprintf_internal_r+0xe30>
  8450f0:	9807883a 	mov	r3,r19
  8450f4:	d9002417 	ldw	r4,144(sp)
  8450f8:	20c9883a 	add	r4,r4,r3
  8450fc:	d9002415 	stw	r4,144(sp)
  845100:	103e0126 	beq	r2,zero,844908 <__alt_mem_epcs_flash_controller_0+0xff83b908>
  845104:	d9402017 	ldw	r5,128(sp)
  845108:	d9002117 	ldw	r4,132(sp)
  84510c:	d9801a04 	addi	r6,sp,104
  845110:	08441b00 	call	8441b0 <__sprint_r.part.0>
  845114:	103dfc26 	beq	r2,zero,844908 <__alt_mem_epcs_flash_controller_0+0xff83b908>
  845118:	003fa206 	br	844fa4 <__alt_mem_epcs_flash_controller_0+0xff83bfa4>
  84511c:	d9402017 	ldw	r5,128(sp)
  845120:	d9002117 	ldw	r4,132(sp)
  845124:	d9801a04 	addi	r6,sp,104
  845128:	d9c02b15 	stw	r7,172(sp)
  84512c:	08441b00 	call	8441b0 <__sprint_r.part.0>
  845130:	d9c02b17 	ldw	r7,172(sp)
  845134:	103f9b1e 	bne	r2,zero,844fa4 <__alt_mem_epcs_flash_controller_0+0xff83bfa4>
  845138:	d9001b17 	ldw	r4,108(sp)
  84513c:	d8801c17 	ldw	r2,112(sp)
  845140:	d811883a 	mov	r8,sp
  845144:	21800044 	addi	r6,r4,1
  845148:	003dbf06 	br	844848 <__alt_mem_epcs_flash_controller_0+0xff83b848>
  84514c:	1000d81e 	bne	r2,zero,8454b0 <___vfiprintf_internal_r+0x11ec>
  845150:	d9001d87 	ldb	r4,118(sp)
  845154:	20000a26 	beq	r4,zero,845180 <___vfiprintf_internal_r+0xebc>
  845158:	00800044 	movi	r2,1
  84515c:	d9001d84 	addi	r4,sp,118
  845160:	100b883a 	mov	r5,r2
  845164:	d9000015 	stw	r4,0(sp)
  845168:	d8800115 	stw	r2,4(sp)
  84516c:	d811883a 	mov	r8,sp
  845170:	2809883a 	mov	r4,r5
  845174:	42000204 	addi	r8,r8,8
  845178:	29400044 	addi	r5,r5,1
  84517c:	003d9506 	br	8447d4 <__alt_mem_epcs_flash_controller_0+0xff83b7d4>
  845180:	3800fd26 	beq	r7,zero,845578 <___vfiprintf_internal_r+0x12b4>
  845184:	00800084 	movi	r2,2
  845188:	d9001d04 	addi	r4,sp,116
  84518c:	d9000015 	stw	r4,0(sp)
  845190:	d8800115 	stw	r2,4(sp)
  845194:	01400044 	movi	r5,1
  845198:	d811883a 	mov	r8,sp
  84519c:	2809883a 	mov	r4,r5
  8451a0:	42000204 	addi	r8,r8,8
  8451a4:	29400044 	addi	r5,r5,1
  8451a8:	003f4606 	br	844ec4 <__alt_mem_epcs_flash_controller_0+0xff83bec4>
  8451ac:	d8802517 	ldw	r2,148(sp)
  8451b0:	14c0010e 	bge	r2,r19,8451b8 <___vfiprintf_internal_r+0xef4>
  8451b4:	9805883a 	mov	r2,r19
  8451b8:	d9402417 	ldw	r5,144(sp)
  8451bc:	288b883a 	add	r5,r5,r2
  8451c0:	d9402415 	stw	r5,144(sp)
  8451c4:	003dd006 	br	844908 <__alt_mem_epcs_flash_controller_0+0xff83b908>
  8451c8:	d8001d85 	stb	zero,118(sp)
  8451cc:	80005d16 	blt	r16,zero,845344 <___vfiprintf_internal_r+0x1080>
  8451d0:	00ffdfc4 	movi	r3,-129
  8451d4:	9d04b03a 	or	r2,r19,r20
  8451d8:	88e2703a 	and	r17,r17,r3
  8451dc:	103d3726 	beq	r2,zero,8446bc <__alt_mem_epcs_flash_controller_0+0xff83b6bc>
  8451e0:	002b883a 	mov	r21,zero
  8451e4:	d9002617 	ldw	r4,152(sp)
  8451e8:	ddc01a04 	addi	r23,sp,104
  8451ec:	988003cc 	andi	r2,r19,15
  8451f0:	a006973a 	slli	r3,r20,28
  8451f4:	2085883a 	add	r2,r4,r2
  8451f8:	9826d13a 	srli	r19,r19,4
  8451fc:	10800003 	ldbu	r2,0(r2)
  845200:	a028d13a 	srli	r20,r20,4
  845204:	bdffffc4 	addi	r23,r23,-1
  845208:	1ce6b03a 	or	r19,r3,r19
  84520c:	b8800005 	stb	r2,0(r23)
  845210:	9d04b03a 	or	r2,r19,r20
  845214:	103ff51e 	bne	r2,zero,8451ec <__alt_mem_epcs_flash_controller_0+0xff83c1ec>
  845218:	d8801e17 	ldw	r2,120(sp)
  84521c:	15e9c83a 	sub	r20,r2,r23
  845220:	003d2b06 	br	8446d0 <__alt_mem_epcs_flash_controller_0+0xff83b6d0>
  845224:	d9402017 	ldw	r5,128(sp)
  845228:	d9002117 	ldw	r4,132(sp)
  84522c:	d9801a04 	addi	r6,sp,104
  845230:	08441b00 	call	8441b0 <__sprint_r.part.0>
  845234:	103f5b1e 	bne	r2,zero,844fa4 <__alt_mem_epcs_flash_controller_0+0xff83bfa4>
  845238:	d8801c17 	ldw	r2,112(sp)
  84523c:	d811883a 	mov	r8,sp
  845240:	003f6706 	br	844fe0 <__alt_mem_epcs_flash_controller_0+0xff83bfe0>
  845244:	d9402017 	ldw	r5,128(sp)
  845248:	d9002117 	ldw	r4,132(sp)
  84524c:	d9801a04 	addi	r6,sp,104
  845250:	08441b00 	call	8441b0 <__sprint_r.part.0>
  845254:	103f531e 	bne	r2,zero,844fa4 <__alt_mem_epcs_flash_controller_0+0xff83bfa4>
  845258:	d811883a 	mov	r8,sp
  84525c:	003cd906 	br	8445c4 <__alt_mem_epcs_flash_controller_0+0xff83b5c4>
  845260:	10803fcc 	andi	r2,r2,255
  845264:	1080201c 	xori	r2,r2,128
  845268:	10bfe004 	addi	r2,r2,-128
  84526c:	00c00c04 	movi	r3,48
  845270:	10ffe926 	beq	r2,r3,845218 <__alt_mem_epcs_flash_controller_0+0xff83c218>
  845274:	b8ffffc5 	stb	r3,-1(r23)
  845278:	d8c01e17 	ldw	r3,120(sp)
  84527c:	b8bfffc4 	addi	r2,r23,-1
  845280:	102f883a 	mov	r23,r2
  845284:	18a9c83a 	sub	r20,r3,r2
  845288:	003d1106 	br	8446d0 <__alt_mem_epcs_flash_controller_0+0xff83b6d0>
  84528c:	d9402017 	ldw	r5,128(sp)
  845290:	d9002117 	ldw	r4,132(sp)
  845294:	d9801a04 	addi	r6,sp,104
  845298:	d8c02a15 	stw	r3,168(sp)
  84529c:	d9c02b15 	stw	r7,172(sp)
  8452a0:	08441b00 	call	8441b0 <__sprint_r.part.0>
  8452a4:	d8c02a17 	ldw	r3,168(sp)
  8452a8:	d9c02b17 	ldw	r7,172(sp)
  8452ac:	103f3d1e 	bne	r2,zero,844fa4 <__alt_mem_epcs_flash_controller_0+0xff83bfa4>
  8452b0:	d9001b17 	ldw	r4,108(sp)
  8452b4:	d8801c17 	ldw	r2,112(sp)
  8452b8:	d811883a 	mov	r8,sp
  8452bc:	21400044 	addi	r5,r4,1
  8452c0:	003d4406 	br	8447d4 <__alt_mem_epcs_flash_controller_0+0xff83b7d4>
  8452c4:	d9402017 	ldw	r5,128(sp)
  8452c8:	d9002117 	ldw	r4,132(sp)
  8452cc:	d9801a04 	addi	r6,sp,104
  8452d0:	d8c02a15 	stw	r3,168(sp)
  8452d4:	08441b00 	call	8441b0 <__sprint_r.part.0>
  8452d8:	d8c02a17 	ldw	r3,168(sp)
  8452dc:	103f311e 	bne	r2,zero,844fa4 <__alt_mem_epcs_flash_controller_0+0xff83bfa4>
  8452e0:	d9001b17 	ldw	r4,108(sp)
  8452e4:	d8801c17 	ldw	r2,112(sp)
  8452e8:	d811883a 	mov	r8,sp
  8452ec:	21400044 	addi	r5,r4,1
  8452f0:	003ef406 	br	844ec4 <__alt_mem_epcs_flash_controller_0+0xff83bec4>
  8452f4:	1000bd1e 	bne	r2,zero,8455ec <___vfiprintf_internal_r+0x1328>
  8452f8:	01400044 	movi	r5,1
  8452fc:	0009883a 	mov	r4,zero
  845300:	d811883a 	mov	r8,sp
  845304:	003ef106 	br	844ecc <__alt_mem_epcs_flash_controller_0+0xff83becc>
  845308:	d9402017 	ldw	r5,128(sp)
  84530c:	d9002117 	ldw	r4,132(sp)
  845310:	d9801a04 	addi	r6,sp,104
  845314:	08441b00 	call	8441b0 <__sprint_r.part.0>
  845318:	103f221e 	bne	r2,zero,844fa4 <__alt_mem_epcs_flash_controller_0+0xff83bfa4>
  84531c:	d9401b17 	ldw	r5,108(sp)
  845320:	d8801c17 	ldw	r2,112(sp)
  845324:	d811883a 	mov	r8,sp
  845328:	29400044 	addi	r5,r5,1
  84532c:	003d6206 	br	8448b8 <__alt_mem_epcs_flash_controller_0+0xff83b8b8>
  845330:	014021b4 	movhi	r5,134
  845334:	2965fe04 	addi	r5,r5,-26632
  845338:	d9402615 	stw	r5,152(sp)
  84533c:	d8c02215 	stw	r3,136(sp)
  845340:	1023883a 	mov	r17,r2
  845344:	9d04b03a 	or	r2,r19,r20
  845348:	103fa51e 	bne	r2,zero,8451e0 <__alt_mem_epcs_flash_controller_0+0xff83c1e0>
  84534c:	002b883a 	mov	r21,zero
  845350:	00800084 	movi	r2,2
  845354:	003e4a06 	br	844c80 <__alt_mem_epcs_flash_controller_0+0xff83bc80>
  845358:	014021b4 	movhi	r5,134
  84535c:	2965fe04 	addi	r5,r5,-26632
  845360:	002b883a 	mov	r21,zero
  845364:	d9402615 	stw	r5,152(sp)
  845368:	003f9e06 	br	8451e4 <__alt_mem_epcs_flash_controller_0+0xff83c1e4>
  84536c:	d9402217 	ldw	r5,136(sp)
  845370:	d8001d85 	stb	zero,118(sp)
  845374:	0029883a 	mov	r20,zero
  845378:	28800104 	addi	r2,r5,4
  84537c:	2cc00017 	ldw	r19,0(r5)
  845380:	803e3a16 	blt	r16,zero,844c6c <__alt_mem_epcs_flash_controller_0+0xff83bc6c>
  845384:	00ffdfc4 	movi	r3,-129
  845388:	d8802215 	stw	r2,136(sp)
  84538c:	88e2703a 	and	r17,r17,r3
  845390:	002b883a 	mov	r21,zero
  845394:	983e9b26 	beq	r19,zero,844e04 <__alt_mem_epcs_flash_controller_0+0xff83be04>
  845398:	00800244 	movi	r2,9
  84539c:	14fdc936 	bltu	r2,r19,844ac4 <__alt_mem_epcs_flash_controller_0+0xff83bac4>
  8453a0:	003e9a06 	br	844e0c <__alt_mem_epcs_flash_controller_0+0xff83be0c>
  8453a4:	00800c04 	movi	r2,48
  8453a8:	d8c01d45 	stb	r3,117(sp)
  8453ac:	d8801d05 	stb	r2,116(sp)
  8453b0:	d8001d85 	stb	zero,118(sp)
  8453b4:	88c00094 	ori	r3,r17,2
  8453b8:	80009c16 	blt	r16,zero,84562c <___vfiprintf_internal_r+0x1368>
  8453bc:	00bfdfc4 	movi	r2,-129
  8453c0:	88a2703a 	and	r17,r17,r2
  8453c4:	8c400094 	ori	r17,r17,2
  8453c8:	002b883a 	mov	r21,zero
  8453cc:	003f8506 	br	8451e4 <__alt_mem_epcs_flash_controller_0+0xff83c1e4>
  8453d0:	b029883a 	mov	r20,r22
  8453d4:	003c0b06 	br	844404 <__alt_mem_epcs_flash_controller_0+0xff83b404>
  8453d8:	04e7c83a 	sub	r19,zero,r19
  8453dc:	05400b44 	movi	r21,45
  8453e0:	9804c03a 	cmpne	r2,r19,zero
  8453e4:	0529c83a 	sub	r20,zero,r20
  8453e8:	dd401d85 	stb	r21,118(sp)
  8453ec:	a0a9c83a 	sub	r20,r20,r2
  8453f0:	80009716 	blt	r16,zero,845650 <___vfiprintf_internal_r+0x138c>
  8453f4:	00bfdfc4 	movi	r2,-129
  8453f8:	88a2703a 	and	r17,r17,r2
  8453fc:	003db006 	br	844ac0 <__alt_mem_epcs_flash_controller_0+0xff83bac0>
  845400:	b0c00007 	ldb	r3,0(r22)
  845404:	003c0c06 	br	844438 <__alt_mem_epcs_flash_controller_0+0xff83b438>
  845408:	8880100c 	andi	r2,r17,64
  84540c:	d8001d85 	stb	zero,118(sp)
  845410:	1000461e 	bne	r2,zero,84552c <___vfiprintf_internal_r+0x1268>
  845414:	d9002217 	ldw	r4,136(sp)
  845418:	0029883a 	mov	r20,zero
  84541c:	20800104 	addi	r2,r4,4
  845420:	24c00017 	ldw	r19,0(r4)
  845424:	803df80e 	bge	r16,zero,844c08 <__alt_mem_epcs_flash_controller_0+0xff83bc08>
  845428:	9d06b03a 	or	r3,r19,r20
  84542c:	d8802215 	stw	r2,136(sp)
  845430:	183d5e1e 	bne	r3,zero,8449ac <__alt_mem_epcs_flash_controller_0+0xff83b9ac>
  845434:	002b883a 	mov	r21,zero
  845438:	0005883a 	mov	r2,zero
  84543c:	003e1006 	br	844c80 <__alt_mem_epcs_flash_controller_0+0xff83bc80>
  845440:	8880040c 	andi	r2,r17,16
  845444:	1000321e 	bne	r2,zero,845510 <___vfiprintf_internal_r+0x124c>
  845448:	8c40100c 	andi	r17,r17,64
  84544c:	88008d26 	beq	r17,zero,845684 <___vfiprintf_internal_r+0x13c0>
  845450:	d9402217 	ldw	r5,136(sp)
  845454:	d8c02417 	ldw	r3,144(sp)
  845458:	28800017 	ldw	r2,0(r5)
  84545c:	29400104 	addi	r5,r5,4
  845460:	d9402215 	stw	r5,136(sp)
  845464:	10c0000d 	sth	r3,0(r2)
  845468:	003bca06 	br	844394 <__alt_mem_epcs_flash_controller_0+0xff83b394>
  84546c:	8880100c 	andi	r2,r17,64
  845470:	10003a26 	beq	r2,zero,84555c <___vfiprintf_internal_r+0x1298>
  845474:	d8802217 	ldw	r2,136(sp)
  845478:	14c0000f 	ldh	r19,0(r2)
  84547c:	10800104 	addi	r2,r2,4
  845480:	d8802215 	stw	r2,136(sp)
  845484:	9829d7fa 	srai	r20,r19,31
  845488:	a005883a 	mov	r2,r20
  84548c:	003d8506 	br	844aa4 <__alt_mem_epcs_flash_controller_0+0xff83baa4>
  845490:	8880100c 	andi	r2,r17,64
  845494:	10002b26 	beq	r2,zero,845544 <___vfiprintf_internal_r+0x1280>
  845498:	d8802217 	ldw	r2,136(sp)
  84549c:	0029883a 	mov	r20,zero
  8454a0:	14c0000b 	ldhu	r19,0(r2)
  8454a4:	10800104 	addi	r2,r2,4
  8454a8:	d8802215 	stw	r2,136(sp)
  8454ac:	003d5d06 	br	844a24 <__alt_mem_epcs_flash_controller_0+0xff83ba24>
  8454b0:	d9402017 	ldw	r5,128(sp)
  8454b4:	d9002117 	ldw	r4,132(sp)
  8454b8:	d9801a04 	addi	r6,sp,104
  8454bc:	d8c02a15 	stw	r3,168(sp)
  8454c0:	d9c02b15 	stw	r7,172(sp)
  8454c4:	08441b00 	call	8441b0 <__sprint_r.part.0>
  8454c8:	d8c02a17 	ldw	r3,168(sp)
  8454cc:	d9c02b17 	ldw	r7,172(sp)
  8454d0:	103eb41e 	bne	r2,zero,844fa4 <__alt_mem_epcs_flash_controller_0+0xff83bfa4>
  8454d4:	d9001b17 	ldw	r4,108(sp)
  8454d8:	d8801c17 	ldw	r2,112(sp)
  8454dc:	d811883a 	mov	r8,sp
  8454e0:	21400044 	addi	r5,r4,1
  8454e4:	003e6706 	br	844e84 <__alt_mem_epcs_flash_controller_0+0xff83be84>
  8454e8:	00bfffc4 	movi	r2,-1
  8454ec:	003c4a06 	br	844618 <__alt_mem_epcs_flash_controller_0+0xff83b618>
  8454f0:	9805883a 	mov	r2,r19
  8454f4:	003ee806 	br	845098 <__alt_mem_epcs_flash_controller_0+0xff83c098>
  8454f8:	d8c02217 	ldw	r3,136(sp)
  8454fc:	0029883a 	mov	r20,zero
  845500:	18800104 	addi	r2,r3,4
  845504:	1cc0000b 	ldhu	r19,0(r3)
  845508:	803f9e0e 	bge	r16,zero,845384 <__alt_mem_epcs_flash_controller_0+0xff83c384>
  84550c:	003dd706 	br	844c6c <__alt_mem_epcs_flash_controller_0+0xff83bc6c>
  845510:	d8c02217 	ldw	r3,136(sp)
  845514:	d9002417 	ldw	r4,144(sp)
  845518:	18800017 	ldw	r2,0(r3)
  84551c:	18c00104 	addi	r3,r3,4
  845520:	d8c02215 	stw	r3,136(sp)
  845524:	11000015 	stw	r4,0(r2)
  845528:	003b9a06 	br	844394 <__alt_mem_epcs_flash_controller_0+0xff83b394>
  84552c:	d8c02217 	ldw	r3,136(sp)
  845530:	0029883a 	mov	r20,zero
  845534:	18800104 	addi	r2,r3,4
  845538:	1cc0000b 	ldhu	r19,0(r3)
  84553c:	803db20e 	bge	r16,zero,844c08 <__alt_mem_epcs_flash_controller_0+0xff83bc08>
  845540:	003fb906 	br	845428 <__alt_mem_epcs_flash_controller_0+0xff83c428>
  845544:	d9002217 	ldw	r4,136(sp)
  845548:	0029883a 	mov	r20,zero
  84554c:	24c00017 	ldw	r19,0(r4)
  845550:	21000104 	addi	r4,r4,4
  845554:	d9002215 	stw	r4,136(sp)
  845558:	003d3206 	br	844a24 <__alt_mem_epcs_flash_controller_0+0xff83ba24>
  84555c:	d8c02217 	ldw	r3,136(sp)
  845560:	1cc00017 	ldw	r19,0(r3)
  845564:	18c00104 	addi	r3,r3,4
  845568:	d8c02215 	stw	r3,136(sp)
  84556c:	9829d7fa 	srai	r20,r19,31
  845570:	a005883a 	mov	r2,r20
  845574:	003d4b06 	br	844aa4 <__alt_mem_epcs_flash_controller_0+0xff83baa4>
  845578:	0009883a 	mov	r4,zero
  84557c:	01400044 	movi	r5,1
  845580:	d811883a 	mov	r8,sp
  845584:	003e4f06 	br	844ec4 <__alt_mem_epcs_flash_controller_0+0xff83bec4>
  845588:	d8c02215 	stw	r3,136(sp)
  84558c:	002b883a 	mov	r21,zero
  845590:	003db806 	br	844c74 <__alt_mem_epcs_flash_controller_0+0xff83bc74>
  845594:	d811883a 	mov	r8,sp
  845598:	003e9606 	br	844ff4 <__alt_mem_epcs_flash_controller_0+0xff83bff4>
  84559c:	010021b4 	movhi	r4,134
  8455a0:	21273984 	addi	r4,r4,-25370
  8455a4:	d9002315 	stw	r4,140(sp)
  8455a8:	003e6306 	br	844f38 <__alt_mem_epcs_flash_controller_0+0xff83bf38>
  8455ac:	b0c00043 	ldbu	r3,1(r22)
  8455b0:	8c400814 	ori	r17,r17,32
  8455b4:	b5800044 	addi	r22,r22,1
  8455b8:	18c03fcc 	andi	r3,r3,255
  8455bc:	18c0201c 	xori	r3,r3,128
  8455c0:	18ffe004 	addi	r3,r3,-128
  8455c4:	003b9c06 	br	844438 <__alt_mem_epcs_flash_controller_0+0xff83b438>
  8455c8:	b809883a 	mov	r4,r23
  8455cc:	da002a15 	stw	r8,168(sp)
  8455d0:	08351100 	call	835110 <strlen>
  8455d4:	1029883a 	mov	r20,r2
  8455d8:	dd401d83 	ldbu	r21,118(sp)
  8455dc:	df002215 	stw	fp,136(sp)
  8455e0:	0021883a 	mov	r16,zero
  8455e4:	da002a17 	ldw	r8,168(sp)
  8455e8:	003c3906 	br	8446d0 <__alt_mem_epcs_flash_controller_0+0xff83b6d0>
  8455ec:	d9402017 	ldw	r5,128(sp)
  8455f0:	d9002117 	ldw	r4,132(sp)
  8455f4:	d9801a04 	addi	r6,sp,104
  8455f8:	08441b00 	call	8441b0 <__sprint_r.part.0>
  8455fc:	103e691e 	bne	r2,zero,844fa4 <__alt_mem_epcs_flash_controller_0+0xff83bfa4>
  845600:	d9001b17 	ldw	r4,108(sp)
  845604:	d8801c17 	ldw	r2,112(sp)
  845608:	d811883a 	mov	r8,sp
  84560c:	21400044 	addi	r5,r4,1
  845610:	003e2e06 	br	844ecc <__alt_mem_epcs_flash_controller_0+0xff83becc>
  845614:	010021b4 	movhi	r4,134
  845618:	21273d84 	addi	r4,r4,-25354
  84561c:	d9002315 	stw	r4,140(sp)
  845620:	d9001b17 	ldw	r4,108(sp)
  845624:	21000044 	addi	r4,r4,1
  845628:	003c5e06 	br	8447a4 <__alt_mem_epcs_flash_controller_0+0xff83b7a4>
  84562c:	002b883a 	mov	r21,zero
  845630:	00800084 	movi	r2,2
  845634:	10803fcc 	andi	r2,r2,255
  845638:	01000044 	movi	r4,1
  84563c:	11002b26 	beq	r2,r4,8456ec <___vfiprintf_internal_r+0x1428>
  845640:	01000084 	movi	r4,2
  845644:	11002b1e 	bne	r2,r4,8456f4 <___vfiprintf_internal_r+0x1430>
  845648:	1823883a 	mov	r17,r3
  84564c:	003ee506 	br	8451e4 <__alt_mem_epcs_flash_controller_0+0xff83c1e4>
  845650:	8807883a 	mov	r3,r17
  845654:	00800044 	movi	r2,1
  845658:	003ff606 	br	845634 <__alt_mem_epcs_flash_controller_0+0xff83c634>
  84565c:	00800184 	movi	r2,6
  845660:	1400012e 	bgeu	r2,r16,845668 <___vfiprintf_internal_r+0x13a4>
  845664:	1021883a 	mov	r16,r2
  845668:	8029883a 	mov	r20,r16
  84566c:	8027883a 	mov	r19,r16
  845670:	80002216 	blt	r16,zero,8456fc <___vfiprintf_internal_r+0x1438>
  845674:	05c021b4 	movhi	r23,134
  845678:	df002215 	stw	fp,136(sp)
  84567c:	bde60304 	addi	r23,r23,-26612
  845680:	003cfb06 	br	844a70 <__alt_mem_epcs_flash_controller_0+0xff83ba70>
  845684:	d9002217 	ldw	r4,136(sp)
  845688:	d9402417 	ldw	r5,144(sp)
  84568c:	20800017 	ldw	r2,0(r4)
  845690:	21000104 	addi	r4,r4,4
  845694:	d9002215 	stw	r4,136(sp)
  845698:	11400015 	stw	r5,0(r2)
  84569c:	003b3d06 	br	844394 <__alt_mem_epcs_flash_controller_0+0xff83b394>
  8456a0:	014021b4 	movhi	r5,134
  8456a4:	29673d84 	addi	r5,r5,-25354
  8456a8:	d9402315 	stw	r5,140(sp)
  8456ac:	d9401b17 	ldw	r5,108(sp)
  8456b0:	29400044 	addi	r5,r5,1
  8456b4:	003e6d06 	br	84506c <__alt_mem_epcs_flash_controller_0+0xff83c06c>
  8456b8:	8029883a 	mov	r20,r16
  8456bc:	dd401d83 	ldbu	r21,118(sp)
  8456c0:	df002215 	stw	fp,136(sp)
  8456c4:	0021883a 	mov	r16,zero
  8456c8:	003c0106 	br	8446d0 <__alt_mem_epcs_flash_controller_0+0xff83b6d0>
  8456cc:	00c021b4 	movhi	r3,134
  8456d0:	18e73984 	addi	r3,r3,-25370
  8456d4:	d8c02315 	stw	r3,140(sp)
  8456d8:	280d883a 	mov	r6,r5
  8456dc:	003c6906 	br	844884 <__alt_mem_epcs_flash_controller_0+0xff83b884>
  8456e0:	802d883a 	mov	r22,r16
  8456e4:	0021883a 	mov	r16,zero
  8456e8:	003b5406 	br	84443c <__alt_mem_epcs_flash_controller_0+0xff83b43c>
  8456ec:	1823883a 	mov	r17,r3
  8456f0:	003cf306 	br	844ac0 <__alt_mem_epcs_flash_controller_0+0xff83bac0>
  8456f4:	1823883a 	mov	r17,r3
  8456f8:	003cad06 	br	8449b0 <__alt_mem_epcs_flash_controller_0+0xff83b9b0>
  8456fc:	0027883a 	mov	r19,zero
  845700:	003fdc06 	br	845674 <__alt_mem_epcs_flash_controller_0+0xff83c674>
  845704:	d9402217 	ldw	r5,136(sp)
  845708:	8005883a 	mov	r2,r16
  84570c:	b0c00043 	ldbu	r3,1(r22)
  845710:	2c000017 	ldw	r16,0(r5)
  845714:	29000104 	addi	r4,r5,4
  845718:	d9002215 	stw	r4,136(sp)
  84571c:	102d883a 	mov	r22,r2
  845720:	803fa50e 	bge	r16,zero,8455b8 <__alt_mem_epcs_flash_controller_0+0xff83c5b8>
  845724:	18c03fcc 	andi	r3,r3,255
  845728:	18c0201c 	xori	r3,r3,128
  84572c:	043fffc4 	movi	r16,-1
  845730:	18ffe004 	addi	r3,r3,-128
  845734:	003b4006 	br	844438 <__alt_mem_epcs_flash_controller_0+0xff83b438>
  845738:	d9402303 	ldbu	r5,140(sp)
  84573c:	d9401d85 	stb	r5,118(sp)
  845740:	003cae06 	br	8449fc <__alt_mem_epcs_flash_controller_0+0xff83b9fc>
  845744:	d8c02303 	ldbu	r3,140(sp)
  845748:	d8c01d85 	stb	r3,118(sp)
  84574c:	003d1406 	br	844ba0 <__alt_mem_epcs_flash_controller_0+0xff83bba0>
  845750:	d8c02303 	ldbu	r3,140(sp)
  845754:	d8c01d85 	stb	r3,118(sp)
  845758:	003cca06 	br	844a84 <__alt_mem_epcs_flash_controller_0+0xff83ba84>
  84575c:	8880004c 	andi	r2,r17,1
  845760:	002b883a 	mov	r21,zero
  845764:	10000526 	beq	r2,zero,84577c <___vfiprintf_internal_r+0x14b8>
  845768:	00800c04 	movi	r2,48
  84576c:	d88019c5 	stb	r2,103(sp)
  845770:	dd002817 	ldw	r20,160(sp)
  845774:	ddc019c4 	addi	r23,sp,103
  845778:	003bd506 	br	8446d0 <__alt_mem_epcs_flash_controller_0+0xff83b6d0>
  84577c:	0029883a 	mov	r20,zero
  845780:	ddc01a04 	addi	r23,sp,104
  845784:	003bd206 	br	8446d0 <__alt_mem_epcs_flash_controller_0+0xff83b6d0>
  845788:	d9002303 	ldbu	r4,140(sp)
  84578c:	d9001d85 	stb	r4,118(sp)
  845790:	003da606 	br	844e2c <__alt_mem_epcs_flash_controller_0+0xff83be2c>
  845794:	d8c02303 	ldbu	r3,140(sp)
  845798:	d8c01d85 	stb	r3,118(sp)
  84579c:	003c7606 	br	844978 <__alt_mem_epcs_flash_controller_0+0xff83b978>
  8457a0:	d8c02303 	ldbu	r3,140(sp)
  8457a4:	d8c01d85 	stb	r3,118(sp)
  8457a8:	003c6506 	br	844940 <__alt_mem_epcs_flash_controller_0+0xff83b940>
  8457ac:	d9002303 	ldbu	r4,140(sp)
  8457b0:	d9001d85 	stb	r4,118(sp)
  8457b4:	003d3d06 	br	844cac <__alt_mem_epcs_flash_controller_0+0xff83bcac>
  8457b8:	d8c02303 	ldbu	r3,140(sp)
  8457bc:	d8c01d85 	stb	r3,118(sp)
  8457c0:	003d1d06 	br	844c38 <__alt_mem_epcs_flash_controller_0+0xff83bc38>
  8457c4:	d8c02303 	ldbu	r3,140(sp)
  8457c8:	d8c01d85 	stb	r3,118(sp)
  8457cc:	003d0306 	br	844bdc <__alt_mem_epcs_flash_controller_0+0xff83bbdc>

008457d0 <__vfiprintf_internal>:
  8457d0:	008021b4 	movhi	r2,134
  8457d4:	10af7404 	addi	r2,r2,-16944
  8457d8:	300f883a 	mov	r7,r6
  8457dc:	280d883a 	mov	r6,r5
  8457e0:	200b883a 	mov	r5,r4
  8457e4:	11000017 	ldw	r4,0(r2)
  8457e8:	08442c41 	jmpi	8442c4 <___vfiprintf_internal_r>

008457ec <__sbprintf>:
  8457ec:	2880030b 	ldhu	r2,12(r5)
  8457f0:	2ac01917 	ldw	r11,100(r5)
  8457f4:	2a80038b 	ldhu	r10,14(r5)
  8457f8:	2a400717 	ldw	r9,28(r5)
  8457fc:	2a000917 	ldw	r8,36(r5)
  845800:	defee204 	addi	sp,sp,-1144
  845804:	00c10004 	movi	r3,1024
  845808:	dc011a15 	stw	r16,1128(sp)
  84580c:	10bfff4c 	andi	r2,r2,65533
  845810:	2821883a 	mov	r16,r5
  845814:	d8cb883a 	add	r5,sp,r3
  845818:	dc811c15 	stw	r18,1136(sp)
  84581c:	dc411b15 	stw	r17,1132(sp)
  845820:	dfc11d15 	stw	ra,1140(sp)
  845824:	2025883a 	mov	r18,r4
  845828:	d881030d 	sth	r2,1036(sp)
  84582c:	dac11915 	stw	r11,1124(sp)
  845830:	da81038d 	sth	r10,1038(sp)
  845834:	da410715 	stw	r9,1052(sp)
  845838:	da010915 	stw	r8,1060(sp)
  84583c:	dec10015 	stw	sp,1024(sp)
  845840:	dec10415 	stw	sp,1040(sp)
  845844:	d8c10215 	stw	r3,1032(sp)
  845848:	d8c10515 	stw	r3,1044(sp)
  84584c:	d8010615 	stw	zero,1048(sp)
  845850:	08442c40 	call	8442c4 <___vfiprintf_internal_r>
  845854:	1023883a 	mov	r17,r2
  845858:	10000416 	blt	r2,zero,84586c <__sbprintf+0x80>
  84585c:	d9410004 	addi	r5,sp,1024
  845860:	9009883a 	mov	r4,r18
  845864:	08320440 	call	832044 <_fflush_r>
  845868:	10000d1e 	bne	r2,zero,8458a0 <__sbprintf+0xb4>
  84586c:	d881030b 	ldhu	r2,1036(sp)
  845870:	1080100c 	andi	r2,r2,64
  845874:	10000326 	beq	r2,zero,845884 <__sbprintf+0x98>
  845878:	8080030b 	ldhu	r2,12(r16)
  84587c:	10801014 	ori	r2,r2,64
  845880:	8080030d 	sth	r2,12(r16)
  845884:	8805883a 	mov	r2,r17
  845888:	dfc11d17 	ldw	ra,1140(sp)
  84588c:	dc811c17 	ldw	r18,1136(sp)
  845890:	dc411b17 	ldw	r17,1132(sp)
  845894:	dc011a17 	ldw	r16,1128(sp)
  845898:	dec11e04 	addi	sp,sp,1144
  84589c:	f800283a 	ret
  8458a0:	047fffc4 	movi	r17,-1
  8458a4:	003ff106 	br	84586c <__alt_mem_epcs_flash_controller_0+0xff83c86c>

008458a8 <_calloc_r>:
  8458a8:	defffe04 	addi	sp,sp,-8
  8458ac:	2805883a 	mov	r2,r5
  8458b0:	dc000015 	stw	r16,0(sp)
  8458b4:	300b883a 	mov	r5,r6
  8458b8:	2021883a 	mov	r16,r4
  8458bc:	1009883a 	mov	r4,r2
  8458c0:	dfc00115 	stw	ra,4(sp)
  8458c4:	08301e80 	call	8301e8 <__mulsi3>
  8458c8:	100b883a 	mov	r5,r2
  8458cc:	8009883a 	mov	r4,r16
  8458d0:	083335c0 	call	83335c <_malloc_r>
  8458d4:	10002926 	beq	r2,zero,84597c <_calloc_r+0xd4>
  8458d8:	11bfff17 	ldw	r6,-4(r2)
  8458dc:	1021883a 	mov	r16,r2
  8458e0:	00bfff04 	movi	r2,-4
  8458e4:	308c703a 	and	r6,r6,r2
  8458e8:	00c00904 	movi	r3,36
  8458ec:	308d883a 	add	r6,r6,r2
  8458f0:	19801636 	bltu	r3,r6,84594c <_calloc_r+0xa4>
  8458f4:	008004c4 	movi	r2,19
  8458f8:	11800b2e 	bgeu	r2,r6,845928 <_calloc_r+0x80>
  8458fc:	80000015 	stw	zero,0(r16)
  845900:	80000115 	stw	zero,4(r16)
  845904:	008006c4 	movi	r2,27
  845908:	11801a2e 	bgeu	r2,r6,845974 <_calloc_r+0xcc>
  84590c:	80000215 	stw	zero,8(r16)
  845910:	80000315 	stw	zero,12(r16)
  845914:	30c0151e 	bne	r6,r3,84596c <_calloc_r+0xc4>
  845918:	80000415 	stw	zero,16(r16)
  84591c:	80800604 	addi	r2,r16,24
  845920:	80000515 	stw	zero,20(r16)
  845924:	00000106 	br	84592c <_calloc_r+0x84>
  845928:	8005883a 	mov	r2,r16
  84592c:	10000015 	stw	zero,0(r2)
  845930:	10000115 	stw	zero,4(r2)
  845934:	10000215 	stw	zero,8(r2)
  845938:	8005883a 	mov	r2,r16
  84593c:	dfc00117 	ldw	ra,4(sp)
  845940:	dc000017 	ldw	r16,0(sp)
  845944:	dec00204 	addi	sp,sp,8
  845948:	f800283a 	ret
  84594c:	000b883a 	mov	r5,zero
  845950:	8009883a 	mov	r4,r16
  845954:	0833d940 	call	833d94 <memset>
  845958:	8005883a 	mov	r2,r16
  84595c:	dfc00117 	ldw	ra,4(sp)
  845960:	dc000017 	ldw	r16,0(sp)
  845964:	dec00204 	addi	sp,sp,8
  845968:	f800283a 	ret
  84596c:	80800404 	addi	r2,r16,16
  845970:	003fee06 	br	84592c <__alt_mem_epcs_flash_controller_0+0xff83c92c>
  845974:	80800204 	addi	r2,r16,8
  845978:	003fec06 	br	84592c <__alt_mem_epcs_flash_controller_0+0xff83c92c>
  84597c:	0005883a 	mov	r2,zero
  845980:	003fee06 	br	84593c <__alt_mem_epcs_flash_controller_0+0xff83c93c>

00845984 <__fputwc>:
  845984:	defff804 	addi	sp,sp,-32
  845988:	dcc00415 	stw	r19,16(sp)
  84598c:	dc800315 	stw	r18,12(sp)
  845990:	dc000115 	stw	r16,4(sp)
  845994:	dfc00715 	stw	ra,28(sp)
  845998:	dd400615 	stw	r21,24(sp)
  84599c:	dd000515 	stw	r20,20(sp)
  8459a0:	dc400215 	stw	r17,8(sp)
  8459a4:	2027883a 	mov	r19,r4
  8459a8:	2825883a 	mov	r18,r5
  8459ac:	3021883a 	mov	r16,r6
  8459b0:	083d73c0 	call	83d73c <__locale_mb_cur_max>
  8459b4:	00c00044 	movi	r3,1
  8459b8:	10c03e26 	beq	r2,r3,845ab4 <__fputwc+0x130>
  8459bc:	81c01704 	addi	r7,r16,92
  8459c0:	900d883a 	mov	r6,r18
  8459c4:	d80b883a 	mov	r5,sp
  8459c8:	9809883a 	mov	r4,r19
  8459cc:	08467e80 	call	8467e8 <_wcrtomb_r>
  8459d0:	1029883a 	mov	r20,r2
  8459d4:	00bfffc4 	movi	r2,-1
  8459d8:	a0802026 	beq	r20,r2,845a5c <__fputwc+0xd8>
  8459dc:	d9400003 	ldbu	r5,0(sp)
  8459e0:	a0001c26 	beq	r20,zero,845a54 <__fputwc+0xd0>
  8459e4:	0023883a 	mov	r17,zero
  8459e8:	05400284 	movi	r21,10
  8459ec:	00000906 	br	845a14 <__fputwc+0x90>
  8459f0:	80800017 	ldw	r2,0(r16)
  8459f4:	11400005 	stb	r5,0(r2)
  8459f8:	80c00017 	ldw	r3,0(r16)
  8459fc:	18c00044 	addi	r3,r3,1
  845a00:	80c00015 	stw	r3,0(r16)
  845a04:	8c400044 	addi	r17,r17,1
  845a08:	dc45883a 	add	r2,sp,r17
  845a0c:	8d00112e 	bgeu	r17,r20,845a54 <__fputwc+0xd0>
  845a10:	11400003 	ldbu	r5,0(r2)
  845a14:	80c00217 	ldw	r3,8(r16)
  845a18:	18ffffc4 	addi	r3,r3,-1
  845a1c:	80c00215 	stw	r3,8(r16)
  845a20:	183ff30e 	bge	r3,zero,8459f0 <__alt_mem_epcs_flash_controller_0+0xff83c9f0>
  845a24:	80800617 	ldw	r2,24(r16)
  845a28:	18801916 	blt	r3,r2,845a90 <__fputwc+0x10c>
  845a2c:	80800017 	ldw	r2,0(r16)
  845a30:	11400005 	stb	r5,0(r2)
  845a34:	80800017 	ldw	r2,0(r16)
  845a38:	10c00003 	ldbu	r3,0(r2)
  845a3c:	10800044 	addi	r2,r2,1
  845a40:	1d402326 	beq	r3,r21,845ad0 <__fputwc+0x14c>
  845a44:	80800015 	stw	r2,0(r16)
  845a48:	8c400044 	addi	r17,r17,1
  845a4c:	dc45883a 	add	r2,sp,r17
  845a50:	8d3fef36 	bltu	r17,r20,845a10 <__alt_mem_epcs_flash_controller_0+0xff83ca10>
  845a54:	9005883a 	mov	r2,r18
  845a58:	00000406 	br	845a6c <__fputwc+0xe8>
  845a5c:	80c0030b 	ldhu	r3,12(r16)
  845a60:	a005883a 	mov	r2,r20
  845a64:	18c01014 	ori	r3,r3,64
  845a68:	80c0030d 	sth	r3,12(r16)
  845a6c:	dfc00717 	ldw	ra,28(sp)
  845a70:	dd400617 	ldw	r21,24(sp)
  845a74:	dd000517 	ldw	r20,20(sp)
  845a78:	dcc00417 	ldw	r19,16(sp)
  845a7c:	dc800317 	ldw	r18,12(sp)
  845a80:	dc400217 	ldw	r17,8(sp)
  845a84:	dc000117 	ldw	r16,4(sp)
  845a88:	dec00804 	addi	sp,sp,32
  845a8c:	f800283a 	ret
  845a90:	800d883a 	mov	r6,r16
  845a94:	29403fcc 	andi	r5,r5,255
  845a98:	9809883a 	mov	r4,r19
  845a9c:	083b3680 	call	83b368 <__swbuf_r>
  845aa0:	10bfffe0 	cmpeqi	r2,r2,-1
  845aa4:	10803fcc 	andi	r2,r2,255
  845aa8:	103fd626 	beq	r2,zero,845a04 <__alt_mem_epcs_flash_controller_0+0xff83ca04>
  845aac:	00bfffc4 	movi	r2,-1
  845ab0:	003fee06 	br	845a6c <__alt_mem_epcs_flash_controller_0+0xff83ca6c>
  845ab4:	90ffffc4 	addi	r3,r18,-1
  845ab8:	01003f84 	movi	r4,254
  845abc:	20ffbf36 	bltu	r4,r3,8459bc <__alt_mem_epcs_flash_controller_0+0xff83c9bc>
  845ac0:	900b883a 	mov	r5,r18
  845ac4:	dc800005 	stb	r18,0(sp)
  845ac8:	1029883a 	mov	r20,r2
  845acc:	003fc506 	br	8459e4 <__alt_mem_epcs_flash_controller_0+0xff83c9e4>
  845ad0:	800d883a 	mov	r6,r16
  845ad4:	a80b883a 	mov	r5,r21
  845ad8:	9809883a 	mov	r4,r19
  845adc:	083b3680 	call	83b368 <__swbuf_r>
  845ae0:	10bfffe0 	cmpeqi	r2,r2,-1
  845ae4:	003fef06 	br	845aa4 <__alt_mem_epcs_flash_controller_0+0xff83caa4>

00845ae8 <_fputwc_r>:
  845ae8:	3080030b 	ldhu	r2,12(r6)
  845aec:	10c8000c 	andi	r3,r2,8192
  845af0:	1800051e 	bne	r3,zero,845b08 <_fputwc_r+0x20>
  845af4:	30c01917 	ldw	r3,100(r6)
  845af8:	10880014 	ori	r2,r2,8192
  845afc:	3080030d 	sth	r2,12(r6)
  845b00:	18880014 	ori	r2,r3,8192
  845b04:	30801915 	stw	r2,100(r6)
  845b08:	08459841 	jmpi	845984 <__fputwc>

00845b0c <fputwc>:
  845b0c:	008021b4 	movhi	r2,134
  845b10:	defffc04 	addi	sp,sp,-16
  845b14:	10af7404 	addi	r2,r2,-16944
  845b18:	dc000115 	stw	r16,4(sp)
  845b1c:	14000017 	ldw	r16,0(r2)
  845b20:	dc400215 	stw	r17,8(sp)
  845b24:	dfc00315 	stw	ra,12(sp)
  845b28:	2023883a 	mov	r17,r4
  845b2c:	80000226 	beq	r16,zero,845b38 <fputwc+0x2c>
  845b30:	80800e17 	ldw	r2,56(r16)
  845b34:	10001026 	beq	r2,zero,845b78 <fputwc+0x6c>
  845b38:	2880030b 	ldhu	r2,12(r5)
  845b3c:	10c8000c 	andi	r3,r2,8192
  845b40:	1800051e 	bne	r3,zero,845b58 <fputwc+0x4c>
  845b44:	28c01917 	ldw	r3,100(r5)
  845b48:	10880014 	ori	r2,r2,8192
  845b4c:	2880030d 	sth	r2,12(r5)
  845b50:	18880014 	ori	r2,r3,8192
  845b54:	28801915 	stw	r2,100(r5)
  845b58:	280d883a 	mov	r6,r5
  845b5c:	8009883a 	mov	r4,r16
  845b60:	880b883a 	mov	r5,r17
  845b64:	dfc00317 	ldw	ra,12(sp)
  845b68:	dc400217 	ldw	r17,8(sp)
  845b6c:	dc000117 	ldw	r16,4(sp)
  845b70:	dec00404 	addi	sp,sp,16
  845b74:	08459841 	jmpi	845984 <__fputwc>
  845b78:	8009883a 	mov	r4,r16
  845b7c:	d9400015 	stw	r5,0(sp)
  845b80:	08324300 	call	832430 <__sinit>
  845b84:	d9400017 	ldw	r5,0(sp)
  845b88:	003feb06 	br	845b38 <__alt_mem_epcs_flash_controller_0+0xff83cb38>

00845b8c <_fstat_r>:
  845b8c:	defffd04 	addi	sp,sp,-12
  845b90:	2805883a 	mov	r2,r5
  845b94:	dc000015 	stw	r16,0(sp)
  845b98:	040021b4 	movhi	r16,134
  845b9c:	dc400115 	stw	r17,4(sp)
  845ba0:	842fc604 	addi	r16,r16,-16616
  845ba4:	2023883a 	mov	r17,r4
  845ba8:	300b883a 	mov	r5,r6
  845bac:	1009883a 	mov	r4,r2
  845bb0:	dfc00215 	stw	ra,8(sp)
  845bb4:	80000015 	stw	zero,0(r16)
  845bb8:	08499e80 	call	8499e8 <fstat>
  845bbc:	00ffffc4 	movi	r3,-1
  845bc0:	10c00526 	beq	r2,r3,845bd8 <_fstat_r+0x4c>
  845bc4:	dfc00217 	ldw	ra,8(sp)
  845bc8:	dc400117 	ldw	r17,4(sp)
  845bcc:	dc000017 	ldw	r16,0(sp)
  845bd0:	dec00304 	addi	sp,sp,12
  845bd4:	f800283a 	ret
  845bd8:	80c00017 	ldw	r3,0(r16)
  845bdc:	183ff926 	beq	r3,zero,845bc4 <__alt_mem_epcs_flash_controller_0+0xff83cbc4>
  845be0:	88c00015 	stw	r3,0(r17)
  845be4:	003ff706 	br	845bc4 <__alt_mem_epcs_flash_controller_0+0xff83cbc4>

00845be8 <rshift>:
  845be8:	2807d17a 	srai	r3,r5,5
  845bec:	20800417 	ldw	r2,16(r4)
  845bf0:	22000504 	addi	r8,r4,20
  845bf4:	1880250e 	bge	r3,r2,845c8c <rshift+0xa4>
  845bf8:	1085883a 	add	r2,r2,r2
  845bfc:	18c7883a 	add	r3,r3,r3
  845c00:	1085883a 	add	r2,r2,r2
  845c04:	18c7883a 	add	r3,r3,r3
  845c08:	294007cc 	andi	r5,r5,31
  845c0c:	4085883a 	add	r2,r8,r2
  845c10:	40c7883a 	add	r3,r8,r3
  845c14:	28002026 	beq	r5,zero,845c98 <rshift+0xb0>
  845c18:	19800017 	ldw	r6,0(r3)
  845c1c:	02c00804 	movi	r11,32
  845c20:	19c00104 	addi	r7,r3,4
  845c24:	5957c83a 	sub	r11,r11,r5
  845c28:	314cd83a 	srl	r6,r6,r5
  845c2c:	38802c2e 	bgeu	r7,r2,845ce0 <rshift+0xf8>
  845c30:	4015883a 	mov	r10,r8
  845c34:	3a400017 	ldw	r9,0(r7)
  845c38:	52800104 	addi	r10,r10,4
  845c3c:	39c00104 	addi	r7,r7,4
  845c40:	4ad2983a 	sll	r9,r9,r11
  845c44:	498cb03a 	or	r6,r9,r6
  845c48:	51bfff15 	stw	r6,-4(r10)
  845c4c:	39bfff17 	ldw	r6,-4(r7)
  845c50:	314cd83a 	srl	r6,r6,r5
  845c54:	38bff736 	bltu	r7,r2,845c34 <__alt_mem_epcs_flash_controller_0+0xff83cc34>
  845c58:	10c7c83a 	sub	r3,r2,r3
  845c5c:	18fffec4 	addi	r3,r3,-5
  845c60:	1806d0ba 	srli	r3,r3,2
  845c64:	18c00044 	addi	r3,r3,1
  845c68:	18c7883a 	add	r3,r3,r3
  845c6c:	18c7883a 	add	r3,r3,r3
  845c70:	40c7883a 	add	r3,r8,r3
  845c74:	19800015 	stw	r6,0(r3)
  845c78:	30000126 	beq	r6,zero,845c80 <rshift+0x98>
  845c7c:	18c00104 	addi	r3,r3,4
  845c80:	1a05c83a 	sub	r2,r3,r8
  845c84:	1005d0ba 	srai	r2,r2,2
  845c88:	00001206 	br	845cd4 <rshift+0xec>
  845c8c:	20000415 	stw	zero,16(r4)
  845c90:	20000515 	stw	zero,20(r4)
  845c94:	f800283a 	ret
  845c98:	18bffc2e 	bgeu	r3,r2,845c8c <__alt_mem_epcs_flash_controller_0+0xff83cc8c>
  845c9c:	180d883a 	mov	r6,r3
  845ca0:	400b883a 	mov	r5,r8
  845ca4:	31c00017 	ldw	r7,0(r6)
  845ca8:	29400104 	addi	r5,r5,4
  845cac:	31800104 	addi	r6,r6,4
  845cb0:	29ffff15 	stw	r7,-4(r5)
  845cb4:	30bffb36 	bltu	r6,r2,845ca4 <__alt_mem_epcs_flash_controller_0+0xff83cca4>
  845cb8:	00c6303a 	nor	r3,zero,r3
  845cbc:	1885883a 	add	r2,r3,r2
  845cc0:	1004d0ba 	srli	r2,r2,2
  845cc4:	10800044 	addi	r2,r2,1
  845cc8:	1085883a 	add	r2,r2,r2
  845ccc:	1085883a 	add	r2,r2,r2
  845cd0:	1005d0ba 	srai	r2,r2,2
  845cd4:	20800415 	stw	r2,16(r4)
  845cd8:	103fed26 	beq	r2,zero,845c90 <__alt_mem_epcs_flash_controller_0+0xff83cc90>
  845cdc:	f800283a 	ret
  845ce0:	4007883a 	mov	r3,r8
  845ce4:	003fe306 	br	845c74 <__alt_mem_epcs_flash_controller_0+0xff83cc74>

00845ce8 <__gethex>:
  845ce8:	deffea04 	addi	sp,sp,-88
  845cec:	d9c00415 	stw	r7,16(sp)
  845cf0:	dfc01515 	stw	ra,84(sp)
  845cf4:	dd001015 	stw	r20,64(sp)
  845cf8:	dcc00f15 	stw	r19,60(sp)
  845cfc:	2829883a 	mov	r20,r5
  845d00:	dc800e15 	stw	r18,56(sp)
  845d04:	d9000215 	stw	r4,8(sp)
  845d08:	d9800115 	stw	r6,4(sp)
  845d0c:	df001415 	stw	fp,80(sp)
  845d10:	ddc01315 	stw	r23,76(sp)
  845d14:	dd801215 	stw	r22,72(sp)
  845d18:	dd401115 	stw	r21,68(sp)
  845d1c:	dc400d15 	stw	r17,52(sp)
  845d20:	dc000c15 	stw	r16,48(sp)
  845d24:	083d7600 	call	83d760 <_localeconv_r>
  845d28:	14800017 	ldw	r18,0(r2)
  845d2c:	9009883a 	mov	r4,r18
  845d30:	08351100 	call	835110 <strlen>
  845d34:	a1c00017 	ldw	r7,0(r20)
  845d38:	1027883a 	mov	r19,r2
  845d3c:	9085883a 	add	r2,r18,r2
  845d40:	10bfffc3 	ldbu	r2,-1(r2)
  845d44:	38c00083 	ldbu	r3,2(r7)
  845d48:	d8800305 	stb	r2,12(sp)
  845d4c:	00800c04 	movi	r2,48
  845d50:	18815a1e 	bne	r3,r2,8462bc <__gethex+0x5d4>
  845d54:	013fff84 	movi	r4,-2
  845d58:	388000c4 	addi	r2,r7,3
  845d5c:	21c9c83a 	sub	r4,r4,r7
  845d60:	180b883a 	mov	r5,r3
  845d64:	20b9883a 	add	fp,r4,r2
  845d68:	102f883a 	mov	r23,r2
  845d6c:	10800044 	addi	r2,r2,1
  845d70:	10ffffc3 	ldbu	r3,-1(r2)
  845d74:	197ffb26 	beq	r3,r5,845d64 <__alt_mem_epcs_flash_controller_0+0xff83cd64>
  845d78:	058021b4 	movhi	r22,134
  845d7c:	b5a74184 	addi	r22,r22,-25338
  845d80:	b0c7883a 	add	r3,r22,r3
  845d84:	18800003 	ldbu	r2,0(r3)
  845d88:	10008726 	beq	r2,zero,845fa8 <__gethex+0x2c0>
  845d8c:	b8800003 	ldbu	r2,0(r23)
  845d90:	d8000015 	stw	zero,0(sp)
  845d94:	0021883a 	mov	r16,zero
  845d98:	b085883a 	add	r2,r22,r2
  845d9c:	10800003 	ldbu	r2,0(r2)
  845da0:	b823883a 	mov	r17,r23
  845da4:	10000526 	beq	r2,zero,845dbc <__gethex+0xd4>
  845da8:	8c400044 	addi	r17,r17,1
  845dac:	88800003 	ldbu	r2,0(r17)
  845db0:	b085883a 	add	r2,r22,r2
  845db4:	10800003 	ldbu	r2,0(r2)
  845db8:	103ffb1e 	bne	r2,zero,845da8 <__alt_mem_epcs_flash_controller_0+0xff83cda8>
  845dbc:	980d883a 	mov	r6,r19
  845dc0:	900b883a 	mov	r5,r18
  845dc4:	8809883a 	mov	r4,r17
  845dc8:	08351a80 	call	8351a8 <strncmp>
  845dcc:	1000031e 	bne	r2,zero,845ddc <__gethex+0xf4>
  845dd0:	80015c26 	beq	r16,zero,846344 <__gethex+0x65c>
  845dd4:	88800003 	ldbu	r2,0(r17)
  845dd8:	00000206 	br	845de4 <__gethex+0xfc>
  845ddc:	88800003 	ldbu	r2,0(r17)
  845de0:	80012926 	beq	r16,zero,846288 <__gethex+0x5a0>
  845de4:	8c21c83a 	sub	r16,r17,r16
  845de8:	8421883a 	add	r16,r16,r16
  845dec:	8421883a 	add	r16,r16,r16
  845df0:	0421c83a 	sub	r16,zero,r16
  845df4:	10803fcc 	andi	r2,r2,255
  845df8:	01001404 	movi	r4,80
  845dfc:	11008826 	beq	r2,r4,846020 <__gethex+0x338>
  845e00:	01001c04 	movi	r4,112
  845e04:	11008626 	beq	r2,r4,846020 <__gethex+0x338>
  845e08:	882b883a 	mov	r21,r17
  845e0c:	d8c00017 	ldw	r3,0(sp)
  845e10:	a4400015 	stw	r17,0(r20)
  845e14:	1800711e 	bne	r3,zero,845fdc <__gethex+0x2f4>
  845e18:	adc5c83a 	sub	r2,r21,r23
  845e1c:	10bfffc4 	addi	r2,r2,-1
  845e20:	00c001c4 	movi	r3,7
  845e24:	000b883a 	mov	r5,zero
  845e28:	1880030e 	bge	r3,r2,845e38 <__gethex+0x150>
  845e2c:	1005d07a 	srai	r2,r2,1
  845e30:	29400044 	addi	r5,r5,1
  845e34:	18bffd16 	blt	r3,r2,845e2c <__alt_mem_epcs_flash_controller_0+0xff83ce2c>
  845e38:	d9000217 	ldw	r4,8(sp)
  845e3c:	083dd2c0 	call	83dd2c <_Balloc>
  845e40:	10c00504 	addi	r3,r2,20
  845e44:	d8c00015 	stw	r3,0(sp)
  845e48:	1029883a 	mov	r20,r2
  845e4c:	bd417c2e 	bgeu	r23,r21,846440 <__gethex+0x758>
  845e50:	dc400303 	ldbu	r17,12(sp)
  845e54:	03000044 	movi	r12,1
  845e58:	1813883a 	mov	r9,r3
  845e5c:	0039883a 	mov	fp,zero
  845e60:	0007883a 	mov	r3,zero
  845e64:	64d9c83a 	sub	r12,r12,r19
  845e68:	02800804 	movi	r10,32
  845e6c:	a8bfffc3 	ldbu	r2,-1(r21)
  845e70:	ab7fffc4 	addi	r13,r21,-1
  845e74:	88803026 	beq	r17,r2,845f38 <__gethex+0x250>
  845e78:	e2804526 	beq	fp,r10,845f90 <__gethex+0x2a8>
  845e7c:	e00b883a 	mov	r5,fp
  845e80:	e7000104 	addi	fp,fp,4
  845e84:	a93fffc3 	ldbu	r4,-1(r21)
  845e88:	682b883a 	mov	r21,r13
  845e8c:	b109883a 	add	r4,r22,r4
  845e90:	20800003 	ldbu	r2,0(r4)
  845e94:	108003cc 	andi	r2,r2,15
  845e98:	1144983a 	sll	r2,r2,r5
  845e9c:	1886b03a 	or	r3,r3,r2
  845ea0:	bd7ff236 	bltu	r23,r21,845e6c <__alt_mem_epcs_flash_controller_0+0xff83ce6c>
  845ea4:	d9000017 	ldw	r4,0(sp)
  845ea8:	48800104 	addi	r2,r9,4
  845eac:	48c00015 	stw	r3,0(r9)
  845eb0:	1105c83a 	sub	r2,r2,r4
  845eb4:	1005d0ba 	srai	r2,r2,2
  845eb8:	1809883a 	mov	r4,r3
  845ebc:	a0800415 	stw	r2,16(r20)
  845ec0:	1022917a 	slli	r17,r2,5
  845ec4:	083e0480 	call	83e048 <__hi0bits>
  845ec8:	d8c00117 	ldw	r3,4(sp)
  845ecc:	8885c83a 	sub	r2,r17,r2
  845ed0:	1c800017 	ldw	r18,0(r3)
  845ed4:	9080d016 	blt	r18,r2,846218 <__gethex+0x530>
  845ed8:	1480ed16 	blt	r2,r18,846290 <__gethex+0x5a8>
  845edc:	0027883a 	mov	r19,zero
  845ee0:	d8c00117 	ldw	r3,4(sp)
  845ee4:	18800217 	ldw	r2,8(r3)
  845ee8:	14009416 	blt	r2,r16,84613c <__gethex+0x454>
  845eec:	d8c00117 	ldw	r3,4(sp)
  845ef0:	18800117 	ldw	r2,4(r3)
  845ef4:	8080b30e 	bge	r16,r2,8461c4 <__gethex+0x4dc>
  845ef8:	1421c83a 	sub	r16,r2,r16
  845efc:	8480f616 	blt	r16,r18,8462d8 <__gethex+0x5f0>
  845f00:	18c00317 	ldw	r3,12(r3)
  845f04:	01000084 	movi	r4,2
  845f08:	19015226 	beq	r3,r4,846454 <__gethex+0x76c>
  845f0c:	010000c4 	movi	r4,3
  845f10:	19013726 	beq	r3,r4,8463f0 <__gethex+0x708>
  845f14:	01000044 	movi	r4,1
  845f18:	19015126 	beq	r3,r4,846460 <__gethex+0x778>
  845f1c:	d9000217 	ldw	r4,8(sp)
  845f20:	a00b883a 	mov	r5,r20
  845f24:	083ddd40 	call	83ddd4 <_Bfree>
  845f28:	d8801617 	ldw	r2,88(sp)
  845f2c:	10000015 	stw	zero,0(r2)
  845f30:	00801404 	movi	r2,80
  845f34:	00002b06 	br	845fe4 <__gethex+0x2fc>
  845f38:	6b1d883a 	add	r14,r13,r12
  845f3c:	75ffce36 	bltu	r14,r23,845e78 <__alt_mem_epcs_flash_controller_0+0xff83ce78>
  845f40:	7009883a 	mov	r4,r14
  845f44:	980d883a 	mov	r6,r19
  845f48:	900b883a 	mov	r5,r18
  845f4c:	d8c00715 	stw	r3,28(sp)
  845f50:	da400615 	stw	r9,24(sp)
  845f54:	da800b15 	stw	r10,44(sp)
  845f58:	db000a15 	stw	r12,40(sp)
  845f5c:	db400815 	stw	r13,32(sp)
  845f60:	db800915 	stw	r14,36(sp)
  845f64:	08351a80 	call	8351a8 <strncmp>
  845f68:	d8c00717 	ldw	r3,28(sp)
  845f6c:	da400617 	ldw	r9,24(sp)
  845f70:	da800b17 	ldw	r10,44(sp)
  845f74:	db000a17 	ldw	r12,40(sp)
  845f78:	db400817 	ldw	r13,32(sp)
  845f7c:	db800917 	ldw	r14,36(sp)
  845f80:	103fbd1e 	bne	r2,zero,845e78 <__alt_mem_epcs_flash_controller_0+0xff83ce78>
  845f84:	702b883a 	mov	r21,r14
  845f88:	bd7fb836 	bltu	r23,r21,845e6c <__alt_mem_epcs_flash_controller_0+0xff83ce6c>
  845f8c:	003fc506 	br	845ea4 <__alt_mem_epcs_flash_controller_0+0xff83cea4>
  845f90:	07000104 	movi	fp,4
  845f94:	48c00015 	stw	r3,0(r9)
  845f98:	000b883a 	mov	r5,zero
  845f9c:	4f13883a 	add	r9,r9,fp
  845fa0:	0007883a 	mov	r3,zero
  845fa4:	003fb706 	br	845e84 <__alt_mem_epcs_flash_controller_0+0xff83ce84>
  845fa8:	980d883a 	mov	r6,r19
  845fac:	900b883a 	mov	r5,r18
  845fb0:	b809883a 	mov	r4,r23
  845fb4:	08351a80 	call	8351a8 <strncmp>
  845fb8:	10006c26 	beq	r2,zero,84616c <__gethex+0x484>
  845fbc:	b8800003 	ldbu	r2,0(r23)
  845fc0:	b823883a 	mov	r17,r23
  845fc4:	10803fcc 	andi	r2,r2,255
  845fc8:	01001404 	movi	r4,80
  845fcc:	11001126 	beq	r2,r4,846014 <__gethex+0x32c>
  845fd0:	01001c04 	movi	r4,112
  845fd4:	11000f26 	beq	r2,r4,846014 <__gethex+0x32c>
  845fd8:	a4400015 	stw	r17,0(r20)
  845fdc:	e0008c1e 	bne	fp,zero,846210 <__gethex+0x528>
  845fe0:	00800184 	movi	r2,6
  845fe4:	dfc01517 	ldw	ra,84(sp)
  845fe8:	df001417 	ldw	fp,80(sp)
  845fec:	ddc01317 	ldw	r23,76(sp)
  845ff0:	dd801217 	ldw	r22,72(sp)
  845ff4:	dd401117 	ldw	r21,68(sp)
  845ff8:	dd001017 	ldw	r20,64(sp)
  845ffc:	dcc00f17 	ldw	r19,60(sp)
  846000:	dc800e17 	ldw	r18,56(sp)
  846004:	dc400d17 	ldw	r17,52(sp)
  846008:	dc000c17 	ldw	r16,48(sp)
  84600c:	dec01604 	addi	sp,sp,88
  846010:	f800283a 	ret
  846014:	00c00044 	movi	r3,1
  846018:	0021883a 	mov	r16,zero
  84601c:	d8c00015 	stw	r3,0(sp)
  846020:	88800043 	ldbu	r2,1(r17)
  846024:	01400ac4 	movi	r5,43
  846028:	11003fcc 	andi	r4,r2,255
  84602c:	21407626 	beq	r4,r5,846208 <__gethex+0x520>
  846030:	01400b44 	movi	r5,45
  846034:	21404826 	beq	r4,r5,846158 <__gethex+0x470>
  846038:	8ac00044 	addi	r11,r17,1
  84603c:	d8000515 	stw	zero,20(sp)
  846040:	10803fcc 	andi	r2,r2,255
  846044:	b085883a 	add	r2,r22,r2
  846048:	11000003 	ldbu	r4,0(r2)
  84604c:	05400604 	movi	r21,24
  846050:	20bfffc4 	addi	r2,r4,-1
  846054:	10803fcc 	andi	r2,r2,255
  846058:	a8bf6b36 	bltu	r21,r2,845e08 <__alt_mem_epcs_flash_controller_0+0xff83ce08>
  84605c:	58800043 	ldbu	r2,1(r11)
  846060:	014021b4 	movhi	r5,134
  846064:	29674184 	addi	r5,r5,-25338
  846068:	2885883a 	add	r2,r5,r2
  84606c:	12800003 	ldbu	r10,0(r2)
  846070:	21003fcc 	andi	r4,r4,255
  846074:	213ffc04 	addi	r4,r4,-16
  846078:	50bfffc4 	addi	r2,r10,-1
  84607c:	10803fcc 	andi	r2,r2,255
  846080:	5ac00044 	addi	r11,r11,1
  846084:	51803fcc 	andi	r6,r10,255
  846088:	a8801036 	bltu	r21,r2,8460cc <__gethex+0x3e4>
  84608c:	5ac00044 	addi	r11,r11,1
  846090:	01400284 	movi	r5,10
  846094:	d9800715 	stw	r6,28(sp)
  846098:	dac00615 	stw	r11,24(sp)
  84609c:	08301e80 	call	8301e8 <__mulsi3>
  8460a0:	dac00617 	ldw	r11,24(sp)
  8460a4:	d9800717 	ldw	r6,28(sp)
  8460a8:	5a800003 	ldbu	r10,0(r11)
  8460ac:	1185883a 	add	r2,r2,r6
  8460b0:	113ffc04 	addi	r4,r2,-16
  8460b4:	b295883a 	add	r10,r22,r10
  8460b8:	51400003 	ldbu	r5,0(r10)
  8460bc:	2abfffc4 	addi	r10,r5,-1
  8460c0:	52803fcc 	andi	r10,r10,255
  8460c4:	29803fcc 	andi	r6,r5,255
  8460c8:	aabff02e 	bgeu	r21,r10,84608c <__alt_mem_epcs_flash_controller_0+0xff83d08c>
  8460cc:	d8c00517 	ldw	r3,20(sp)
  8460d0:	18000126 	beq	r3,zero,8460d8 <__gethex+0x3f0>
  8460d4:	0109c83a 	sub	r4,zero,r4
  8460d8:	882b883a 	mov	r21,r17
  8460dc:	8121883a 	add	r16,r16,r4
  8460e0:	5823883a 	mov	r17,r11
  8460e4:	003f4906 	br	845e0c <__alt_mem_epcs_flash_controller_0+0xff83ce0c>
  8460e8:	a0800217 	ldw	r2,8(r20)
  8460ec:	a880f20e 	bge	r21,r2,8464b8 <__gethex+0x7d0>
  8460f0:	a807883a 	mov	r3,r21
  8460f4:	18800144 	addi	r2,r3,5
  8460f8:	1085883a 	add	r2,r2,r2
  8460fc:	18c00044 	addi	r3,r3,1
  846100:	1085883a 	add	r2,r2,r2
  846104:	a085883a 	add	r2,r20,r2
  846108:	a0c00415 	stw	r3,16(r20)
  84610c:	01000044 	movi	r4,1
  846110:	11000015 	stw	r4,0(r2)
  846114:	00800084 	movi	r2,2
  846118:	8880da26 	beq	r17,r2,846484 <__gethex+0x79c>
  84611c:	a8c0ae0e 	bge	r21,r3,8463d8 <__gethex+0x6f0>
  846120:	01400044 	movi	r5,1
  846124:	a009883a 	mov	r4,r20
  846128:	0845be80 	call	845be8 <rshift>
  84612c:	d8c00117 	ldw	r3,4(sp)
  846130:	84000044 	addi	r16,r16,1
  846134:	18800217 	ldw	r2,8(r3)
  846138:	1400a90e 	bge	r2,r16,8463e0 <__gethex+0x6f8>
  84613c:	d9000217 	ldw	r4,8(sp)
  846140:	a00b883a 	mov	r5,r20
  846144:	083ddd40 	call	83ddd4 <_Bfree>
  846148:	d9001617 	ldw	r4,88(sp)
  84614c:	008028c4 	movi	r2,163
  846150:	20000015 	stw	zero,0(r4)
  846154:	003fa306 	br	845fe4 <__alt_mem_epcs_flash_controller_0+0xff83cfe4>
  846158:	00c00044 	movi	r3,1
  84615c:	d8c00515 	stw	r3,20(sp)
  846160:	88800083 	ldbu	r2,2(r17)
  846164:	8ac00084 	addi	r11,r17,2
  846168:	003fb506 	br	846040 <__alt_mem_epcs_flash_controller_0+0xff83d040>
  84616c:	bce3883a 	add	r17,r23,r19
  846170:	89000003 	ldbu	r4,0(r17)
  846174:	21403fcc 	andi	r5,r4,255
  846178:	b145883a 	add	r2,r22,r5
  84617c:	10800003 	ldbu	r2,0(r2)
  846180:	11803fcc 	andi	r6,r2,255
  846184:	30005026 	beq	r6,zero,8462c8 <__gethex+0x5e0>
  846188:	01000c04 	movi	r4,48
  84618c:	882f883a 	mov	r23,r17
  846190:	2900061e 	bne	r5,r4,8461ac <__gethex+0x4c4>
  846194:	2809883a 	mov	r4,r5
  846198:	bdc00044 	addi	r23,r23,1
  84619c:	b8800003 	ldbu	r2,0(r23)
  8461a0:	113ffd26 	beq	r2,r4,846198 <__alt_mem_epcs_flash_controller_0+0xff83d198>
  8461a4:	b085883a 	add	r2,r22,r2
  8461a8:	10800003 	ldbu	r2,0(r2)
  8461ac:	10803fcc 	andi	r2,r2,255
  8461b0:	1007003a 	cmpeq	r3,r2,zero
  8461b4:	d8c00015 	stw	r3,0(sp)
  8461b8:	8821883a 	mov	r16,r17
  8461bc:	07000044 	movi	fp,1
  8461c0:	003ef706 	br	845da0 <__alt_mem_epcs_flash_controller_0+0xff83cda0>
  8461c4:	04400044 	movi	r17,1
  8461c8:	98000926 	beq	r19,zero,8461f0 <__gethex+0x508>
  8461cc:	d8c00117 	ldw	r3,4(sp)
  8461d0:	18800317 	ldw	r2,12(r3)
  8461d4:	00c00084 	movi	r3,2
  8461d8:	10c06826 	beq	r2,r3,84637c <__gethex+0x694>
  8461dc:	00c000c4 	movi	r3,3
  8461e0:	10c06a26 	beq	r2,r3,84638c <__gethex+0x6a4>
  8461e4:	00c00044 	movi	r3,1
  8461e8:	10c08d26 	beq	r2,r3,846420 <__gethex+0x738>
  8461ec:	8c400414 	ori	r17,r17,16
  8461f0:	d9001617 	ldw	r4,88(sp)
  8461f4:	d8c00417 	ldw	r3,16(sp)
  8461f8:	8805883a 	mov	r2,r17
  8461fc:	25000015 	stw	r20,0(r4)
  846200:	1c000015 	stw	r16,0(r3)
  846204:	003f7706 	br	845fe4 <__alt_mem_epcs_flash_controller_0+0xff83cfe4>
  846208:	d8000515 	stw	zero,20(sp)
  84620c:	003fd406 	br	846160 <__alt_mem_epcs_flash_controller_0+0xff83d160>
  846210:	0005883a 	mov	r2,zero
  846214:	003f7306 	br	845fe4 <__alt_mem_epcs_flash_controller_0+0xff83cfe4>
  846218:	14a3c83a 	sub	r17,r2,r18
  84621c:	880b883a 	mov	r5,r17
  846220:	a009883a 	mov	r4,r20
  846224:	083ed580 	call	83ed58 <__any_on>
  846228:	10002926 	beq	r2,zero,8462d0 <__gethex+0x5e8>
  84622c:	897fffc4 	addi	r5,r17,-1
  846230:	2807d17a 	srai	r3,r5,5
  846234:	d8800017 	ldw	r2,0(sp)
  846238:	290007cc 	andi	r4,r5,31
  84623c:	18c7883a 	add	r3,r3,r3
  846240:	18c7883a 	add	r3,r3,r3
  846244:	04c00044 	movi	r19,1
  846248:	10c7883a 	add	r3,r2,r3
  84624c:	9908983a 	sll	r4,r19,r4
  846250:	18c00017 	ldw	r3,0(r3)
  846254:	20c6703a 	and	r3,r4,r3
  846258:	18000626 	beq	r3,zero,846274 <__gethex+0x58c>
  84625c:	99407b0e 	bge	r19,r5,84644c <__gethex+0x764>
  846260:	897fff84 	addi	r5,r17,-2
  846264:	a009883a 	mov	r4,r20
  846268:	083ed580 	call	83ed58 <__any_on>
  84626c:	10007726 	beq	r2,zero,84644c <__gethex+0x764>
  846270:	04c000c4 	movi	r19,3
  846274:	880b883a 	mov	r5,r17
  846278:	a009883a 	mov	r4,r20
  84627c:	0845be80 	call	845be8 <rshift>
  846280:	8461883a 	add	r16,r16,r17
  846284:	003f1606 	br	845ee0 <__alt_mem_epcs_flash_controller_0+0xff83cee0>
  846288:	0021883a 	mov	r16,zero
  84628c:	003ed906 	br	845df4 <__alt_mem_epcs_flash_controller_0+0xff83cdf4>
  846290:	d9000217 	ldw	r4,8(sp)
  846294:	90a3c83a 	sub	r17,r18,r2
  846298:	a00b883a 	mov	r5,r20
  84629c:	880d883a 	mov	r6,r17
  8462a0:	083e5680 	call	83e568 <__lshift>
  8462a4:	10c00504 	addi	r3,r2,20
  8462a8:	1029883a 	mov	r20,r2
  8462ac:	8461c83a 	sub	r16,r16,r17
  8462b0:	d8c00015 	stw	r3,0(sp)
  8462b4:	0027883a 	mov	r19,zero
  8462b8:	003f0906 	br	845ee0 <__alt_mem_epcs_flash_controller_0+0xff83cee0>
  8462bc:	3dc00084 	addi	r23,r7,2
  8462c0:	0039883a 	mov	fp,zero
  8462c4:	003eac06 	br	845d78 <__alt_mem_epcs_flash_controller_0+0xff83cd78>
  8462c8:	2005883a 	mov	r2,r4
  8462cc:	003f3d06 	br	845fc4 <__alt_mem_epcs_flash_controller_0+0xff83cfc4>
  8462d0:	0027883a 	mov	r19,zero
  8462d4:	003fe706 	br	846274 <__alt_mem_epcs_flash_controller_0+0xff83d274>
  8462d8:	847fffc4 	addi	r17,r16,-1
  8462dc:	9800421e 	bne	r19,zero,8463e8 <__gethex+0x700>
  8462e0:	88000426 	beq	r17,zero,8462f4 <__gethex+0x60c>
  8462e4:	880b883a 	mov	r5,r17
  8462e8:	a009883a 	mov	r4,r20
  8462ec:	083ed580 	call	83ed58 <__any_on>
  8462f0:	1027883a 	mov	r19,r2
  8462f4:	8805d17a 	srai	r2,r17,5
  8462f8:	d8c00017 	ldw	r3,0(sp)
  8462fc:	8c4007cc 	andi	r17,r17,31
  846300:	1085883a 	add	r2,r2,r2
  846304:	1085883a 	add	r2,r2,r2
  846308:	1885883a 	add	r2,r3,r2
  84630c:	00c00044 	movi	r3,1
  846310:	1c62983a 	sll	r17,r3,r17
  846314:	10800017 	ldw	r2,0(r2)
  846318:	8884703a 	and	r2,r17,r2
  84631c:	10000126 	beq	r2,zero,846324 <__gethex+0x63c>
  846320:	9cc00094 	ori	r19,r19,2
  846324:	800b883a 	mov	r5,r16
  846328:	a009883a 	mov	r4,r20
  84632c:	0845be80 	call	845be8 <rshift>
  846330:	d8c00117 	ldw	r3,4(sp)
  846334:	9425c83a 	sub	r18,r18,r16
  846338:	04400084 	movi	r17,2
  84633c:	1c000117 	ldw	r16,4(r3)
  846340:	003fa106 	br	8461c8 <__alt_mem_epcs_flash_controller_0+0xff83d1c8>
  846344:	8ce1883a 	add	r16,r17,r19
  846348:	80800003 	ldbu	r2,0(r16)
  84634c:	8023883a 	mov	r17,r16
  846350:	10c03fcc 	andi	r3,r2,255
  846354:	b0c7883a 	add	r3,r22,r3
  846358:	18c00003 	ldbu	r3,0(r3)
  84635c:	183ea026 	beq	r3,zero,845de0 <__alt_mem_epcs_flash_controller_0+0xff83cde0>
  846360:	8c400044 	addi	r17,r17,1
  846364:	88800003 	ldbu	r2,0(r17)
  846368:	11003fcc 	andi	r4,r2,255
  84636c:	b109883a 	add	r4,r22,r4
  846370:	21000003 	ldbu	r4,0(r4)
  846374:	203ffa1e 	bne	r4,zero,846360 <__alt_mem_epcs_flash_controller_0+0xff83d360>
  846378:	003e9906 	br	845de0 <__alt_mem_epcs_flash_controller_0+0xff83cde0>
  84637c:	d9001717 	ldw	r4,92(sp)
  846380:	00800044 	movi	r2,1
  846384:	1109c83a 	sub	r4,r2,r4
  846388:	d9001715 	stw	r4,92(sp)
  84638c:	d8801717 	ldw	r2,92(sp)
  846390:	103f9626 	beq	r2,zero,8461ec <__alt_mem_epcs_flash_controller_0+0xff83d1ec>
  846394:	a5400417 	ldw	r21,16(r20)
  846398:	d9800017 	ldw	r6,0(sp)
  84639c:	013fffc4 	movi	r4,-1
  8463a0:	ad67883a 	add	r19,r21,r21
  8463a4:	9ce7883a 	add	r19,r19,r19
  8463a8:	3005883a 	mov	r2,r6
  8463ac:	34cb883a 	add	r5,r6,r19
  8463b0:	00000306 	br	8463c0 <__gethex+0x6d8>
  8463b4:	10000015 	stw	zero,0(r2)
  8463b8:	10800104 	addi	r2,r2,4
  8463bc:	117f4a2e 	bgeu	r2,r5,8460e8 <__alt_mem_epcs_flash_controller_0+0xff83d0e8>
  8463c0:	10c00017 	ldw	r3,0(r2)
  8463c4:	193ffb26 	beq	r3,r4,8463b4 <__alt_mem_epcs_flash_controller_0+0xff83d3b4>
  8463c8:	18c00044 	addi	r3,r3,1
  8463cc:	10c00015 	stw	r3,0(r2)
  8463d0:	00800084 	movi	r2,2
  8463d4:	88802b26 	beq	r17,r2,846484 <__gethex+0x79c>
  8463d8:	948007cc 	andi	r18,r18,31
  8463dc:	90002f1e 	bne	r18,zero,84649c <__gethex+0x7b4>
  8463e0:	04400844 	movi	r17,33
  8463e4:	003f8206 	br	8461f0 <__alt_mem_epcs_flash_controller_0+0xff83d1f0>
  8463e8:	04c00044 	movi	r19,1
  8463ec:	003fc106 	br	8462f4 <__alt_mem_epcs_flash_controller_0+0xff83d2f4>
  8463f0:	d8c01717 	ldw	r3,92(sp)
  8463f4:	183ec926 	beq	r3,zero,845f1c <__alt_mem_epcs_flash_controller_0+0xff83cf1c>
  8463f8:	d8c00417 	ldw	r3,16(sp)
  8463fc:	d9001617 	ldw	r4,88(sp)
  846400:	18800015 	stw	r2,0(r3)
  846404:	d8c00017 	ldw	r3,0(sp)
  846408:	00800044 	movi	r2,1
  84640c:	a0800415 	stw	r2,16(r20)
  846410:	18800015 	stw	r2,0(r3)
  846414:	25000015 	stw	r20,0(r4)
  846418:	00801884 	movi	r2,98
  84641c:	003ef106 	br	845fe4 <__alt_mem_epcs_flash_controller_0+0xff83cfe4>
  846420:	9880008c 	andi	r2,r19,2
  846424:	103f7126 	beq	r2,zero,8461ec <__alt_mem_epcs_flash_controller_0+0xff83d1ec>
  846428:	d8c00017 	ldw	r3,0(sp)
  84642c:	18800017 	ldw	r2,0(r3)
  846430:	9884b03a 	or	r2,r19,r2
  846434:	1080004c 	andi	r2,r2,1
  846438:	103fd61e 	bne	r2,zero,846394 <__alt_mem_epcs_flash_controller_0+0xff83d394>
  84643c:	003f6b06 	br	8461ec <__alt_mem_epcs_flash_controller_0+0xff83d1ec>
  846440:	da400017 	ldw	r9,0(sp)
  846444:	0007883a 	mov	r3,zero
  846448:	003e9606 	br	845ea4 <__alt_mem_epcs_flash_controller_0+0xff83cea4>
  84644c:	04c00084 	movi	r19,2
  846450:	003f8806 	br	846274 <__alt_mem_epcs_flash_controller_0+0xff83d274>
  846454:	d9001717 	ldw	r4,92(sp)
  846458:	203fe726 	beq	r4,zero,8463f8 <__alt_mem_epcs_flash_controller_0+0xff83d3f8>
  84645c:	003eaf06 	br	845f1c <__alt_mem_epcs_flash_controller_0+0xff83cf1c>
  846460:	943eae1e 	bne	r18,r16,845f1c <__alt_mem_epcs_flash_controller_0+0xff83cf1c>
  846464:	1cbfe40e 	bge	r3,r18,8463f8 <__alt_mem_epcs_flash_controller_0+0xff83d3f8>
  846468:	917fffc4 	addi	r5,r18,-1
  84646c:	a009883a 	mov	r4,r20
  846470:	083ed580 	call	83ed58 <__any_on>
  846474:	103ea926 	beq	r2,zero,845f1c <__alt_mem_epcs_flash_controller_0+0xff83cf1c>
  846478:	d8c00117 	ldw	r3,4(sp)
  84647c:	18800117 	ldw	r2,4(r3)
  846480:	003fdd06 	br	8463f8 <__alt_mem_epcs_flash_controller_0+0xff83d3f8>
  846484:	d8c00117 	ldw	r3,4(sp)
  846488:	18800017 	ldw	r2,0(r3)
  84648c:	10bfffc4 	addi	r2,r2,-1
  846490:	90801c26 	beq	r18,r2,846504 <__gethex+0x81c>
  846494:	04400884 	movi	r17,34
  846498:	003f5506 	br	8461f0 <__alt_mem_epcs_flash_controller_0+0xff83d1f0>
  84649c:	34c5883a 	add	r2,r6,r19
  8464a0:	113fff17 	ldw	r4,-4(r2)
  8464a4:	083e0480 	call	83e048 <__hi0bits>
  8464a8:	00c00804 	movi	r3,32
  8464ac:	1ca5c83a 	sub	r18,r3,r18
  8464b0:	14bfcb0e 	bge	r2,r18,8463e0 <__alt_mem_epcs_flash_controller_0+0xff83d3e0>
  8464b4:	003f1a06 	br	846120 <__alt_mem_epcs_flash_controller_0+0xff83d120>
  8464b8:	a1400117 	ldw	r5,4(r20)
  8464bc:	d9000217 	ldw	r4,8(sp)
  8464c0:	29400044 	addi	r5,r5,1
  8464c4:	083dd2c0 	call	83dd2c <_Balloc>
  8464c8:	a1800417 	ldw	r6,16(r20)
  8464cc:	a1400304 	addi	r5,r20,12
  8464d0:	11000304 	addi	r4,r2,12
  8464d4:	31800084 	addi	r6,r6,2
  8464d8:	318d883a 	add	r6,r6,r6
  8464dc:	318d883a 	add	r6,r6,r6
  8464e0:	102d883a 	mov	r22,r2
  8464e4:	0833c4c0 	call	833c4c <memcpy>
  8464e8:	d9000217 	ldw	r4,8(sp)
  8464ec:	a00b883a 	mov	r5,r20
  8464f0:	b029883a 	mov	r20,r22
  8464f4:	083ddd40 	call	83ddd4 <_Bfree>
  8464f8:	b0c00417 	ldw	r3,16(r22)
  8464fc:	b1800504 	addi	r6,r22,20
  846500:	003efc06 	br	8460f4 <__alt_mem_epcs_flash_controller_0+0xff83d0f4>
  846504:	9005d17a 	srai	r2,r18,5
  846508:	944007cc 	andi	r17,r18,31
  84650c:	1085883a 	add	r2,r2,r2
  846510:	1085883a 	add	r2,r2,r2
  846514:	3087883a 	add	r3,r6,r2
  846518:	00800044 	movi	r2,1
  84651c:	1462983a 	sll	r17,r2,r17
  846520:	18800017 	ldw	r2,0(r3)
  846524:	8884703a 	and	r2,r17,r2
  846528:	1022c03a 	cmpne	r17,r2,zero
  84652c:	00800884 	movi	r2,34
  846530:	1463c83a 	sub	r17,r2,r17
  846534:	003f2e06 	br	8461f0 <__alt_mem_epcs_flash_controller_0+0xff83d1f0>

00846538 <__hexnan>:
  846538:	defff904 	addi	sp,sp,-28
  84653c:	dc800215 	stw	r18,8(sp)
  846540:	2c800017 	ldw	r18,0(r5)
  846544:	dfc00615 	stw	ra,24(sp)
  846548:	dd400515 	stw	r21,20(sp)
  84654c:	901fd17a 	srai	r15,r18,5
  846550:	dd000415 	stw	r20,16(sp)
  846554:	dcc00315 	stw	r19,12(sp)
  846558:	7bdf883a 	add	r15,r15,r15
  84655c:	7bdf883a 	add	r15,r15,r15
  846560:	dc400115 	stw	r17,4(sp)
  846564:	dc000015 	stw	r16,0(sp)
  846568:	948007cc 	andi	r18,r18,31
  84656c:	33df883a 	add	r15,r6,r15
  846570:	90000126 	beq	r18,zero,846578 <__hexnan+0x40>
  846574:	7bc00104 	addi	r15,r15,4
  846578:	22000017 	ldw	r8,0(r4)
  84657c:	7affff04 	addi	r11,r15,-4
  846580:	038021b4 	movhi	r14,134
  846584:	783fff15 	stw	zero,-4(r15)
  846588:	581b883a 	mov	r13,r11
  84658c:	580b883a 	mov	r5,r11
  846590:	000f883a 	mov	r7,zero
  846594:	003f883a 	mov	ra,zero
  846598:	0019883a 	mov	r12,zero
  84659c:	73a74184 	addi	r14,r14,-25338
  8465a0:	04400204 	movi	r17,8
  8465a4:	04000804 	movi	r16,32
  8465a8:	04c001c4 	movi	r19,7
  8465ac:	42000044 	addi	r8,r8,1
  8465b0:	40c00003 	ldbu	r3,0(r8)
  8465b4:	18001d26 	beq	r3,zero,84662c <__hexnan+0xf4>
  8465b8:	70c5883a 	add	r2,r14,r3
  8465bc:	10800003 	ldbu	r2,0(r2)
  8465c0:	12403fcc 	andi	r9,r2,255
  8465c4:	4800301e 	bne	r9,zero,846688 <__hexnan+0x150>
  8465c8:	80c04236 	bltu	r16,r3,8466d4 <__hexnan+0x19c>
  8465cc:	fb3ff70e 	bge	ra,r12,8465ac <__alt_mem_epcs_flash_controller_0+0xff83d5ac>
  8465d0:	2b40112e 	bgeu	r5,r13,846618 <__hexnan+0xe0>
  8465d4:	99c01016 	blt	r19,r7,846618 <__hexnan+0xe0>
  8465d8:	89e9c83a 	sub	r20,r17,r7
  8465dc:	a529883a 	add	r20,r20,r20
  8465e0:	2a800017 	ldw	r10,0(r5)
  8465e4:	a529883a 	add	r20,r20,r20
  8465e8:	852bc83a 	sub	r21,r16,r20
  8465ec:	28c00104 	addi	r3,r5,4
  8465f0:	2805883a 	mov	r2,r5
  8465f4:	19c00017 	ldw	r7,0(r3)
  8465f8:	10800104 	addi	r2,r2,4
  8465fc:	18c00104 	addi	r3,r3,4
  846600:	3d52983a 	sll	r9,r7,r21
  846604:	4a92b03a 	or	r9,r9,r10
  846608:	3d14d83a 	srl	r10,r7,r20
  84660c:	127fff15 	stw	r9,-4(r2)
  846610:	1abfff15 	stw	r10,-4(r3)
  846614:	137ff736 	bltu	r2,r13,8465f4 <__alt_mem_epcs_flash_controller_0+0xff83d5f4>
  846618:	31402836 	bltu	r6,r5,8466bc <__hexnan+0x184>
  84661c:	42000044 	addi	r8,r8,1
  846620:	40c00003 	ldbu	r3,0(r8)
  846624:	01c00204 	movi	r7,8
  846628:	183fe31e 	bne	r3,zero,8465b8 <__alt_mem_epcs_flash_controller_0+0xff83d5b8>
  84662c:	60002b26 	beq	r12,zero,8466dc <__hexnan+0x1a4>
  846630:	2b40022e 	bgeu	r5,r13,84663c <__hexnan+0x104>
  846634:	008001c4 	movi	r2,7
  846638:	11c0430e 	bge	r2,r7,846748 <__hexnan+0x210>
  84663c:	3140312e 	bgeu	r6,r5,846704 <__hexnan+0x1cc>
  846640:	3007883a 	mov	r3,r6
  846644:	29000017 	ldw	r4,0(r5)
  846648:	18800104 	addi	r2,r3,4
  84664c:	29400104 	addi	r5,r5,4
  846650:	19000015 	stw	r4,0(r3)
  846654:	1007883a 	mov	r3,r2
  846658:	597ffa2e 	bgeu	r11,r5,846644 <__alt_mem_epcs_flash_controller_0+0xff83d644>
  84665c:	10000015 	stw	zero,0(r2)
  846660:	10800104 	addi	r2,r2,4
  846664:	58bffd2e 	bgeu	r11,r2,84665c <__alt_mem_epcs_flash_controller_0+0xff83d65c>
  846668:	78bfff17 	ldw	r2,-4(r15)
  84666c:	1000041e 	bne	r2,zero,846680 <__hexnan+0x148>
  846670:	32c02d26 	beq	r6,r11,846728 <__hexnan+0x1f0>
  846674:	5affff04 	addi	r11,r11,-4
  846678:	58800017 	ldw	r2,0(r11)
  84667c:	103ffc26 	beq	r2,zero,846670 <__alt_mem_epcs_flash_controller_0+0xff83d670>
  846680:	00800144 	movi	r2,5
  846684:	00001606 	br	8466e0 <__hexnan+0x1a8>
  846688:	39c00044 	addi	r7,r7,1
  84668c:	63000044 	addi	r12,r12,1
  846690:	89c0040e 	bge	r17,r7,8466a4 <__hexnan+0x16c>
  846694:	317fc52e 	bgeu	r6,r5,8465ac <__alt_mem_epcs_flash_controller_0+0xff83d5ac>
  846698:	283fff15 	stw	zero,-4(r5)
  84669c:	01c00044 	movi	r7,1
  8466a0:	297fff04 	addi	r5,r5,-4
  8466a4:	28c00017 	ldw	r3,0(r5)
  8466a8:	108003cc 	andi	r2,r2,15
  8466ac:	1806913a 	slli	r3,r3,4
  8466b0:	1884b03a 	or	r2,r3,r2
  8466b4:	28800015 	stw	r2,0(r5)
  8466b8:	003fbc06 	br	8465ac <__alt_mem_epcs_flash_controller_0+0xff83d5ac>
  8466bc:	2b7fff04 	addi	r13,r5,-4
  8466c0:	283fff15 	stw	zero,-4(r5)
  8466c4:	603f883a 	mov	ra,r12
  8466c8:	680b883a 	mov	r5,r13
  8466cc:	000f883a 	mov	r7,zero
  8466d0:	003fb606 	br	8465ac <__alt_mem_epcs_flash_controller_0+0xff83d5ac>
  8466d4:	00800a44 	movi	r2,41
  8466d8:	18801726 	beq	r3,r2,846738 <__hexnan+0x200>
  8466dc:	00800104 	movi	r2,4
  8466e0:	dfc00617 	ldw	ra,24(sp)
  8466e4:	dd400517 	ldw	r21,20(sp)
  8466e8:	dd000417 	ldw	r20,16(sp)
  8466ec:	dcc00317 	ldw	r19,12(sp)
  8466f0:	dc800217 	ldw	r18,8(sp)
  8466f4:	dc400117 	ldw	r17,4(sp)
  8466f8:	dc000017 	ldw	r16,0(sp)
  8466fc:	dec00704 	addi	sp,sp,28
  846700:	f800283a 	ret
  846704:	903fd826 	beq	r18,zero,846668 <__alt_mem_epcs_flash_controller_0+0xff83d668>
  846708:	00c00804 	movi	r3,32
  84670c:	1ca5c83a 	sub	r18,r3,r18
  846710:	00ffffc4 	movi	r3,-1
  846714:	78bfff17 	ldw	r2,-4(r15)
  846718:	1c86d83a 	srl	r3,r3,r18
  84671c:	1884703a 	and	r2,r3,r2
  846720:	78bfff15 	stw	r2,-4(r15)
  846724:	003fd106 	br	84666c <__alt_mem_epcs_flash_controller_0+0xff83d66c>
  846728:	00800044 	movi	r2,1
  84672c:	58800015 	stw	r2,0(r11)
  846730:	00800144 	movi	r2,5
  846734:	003fea06 	br	8466e0 <__alt_mem_epcs_flash_controller_0+0xff83d6e0>
  846738:	42000044 	addi	r8,r8,1
  84673c:	22000015 	stw	r8,0(r4)
  846740:	603fbb1e 	bne	r12,zero,846630 <__alt_mem_epcs_flash_controller_0+0xff83d630>
  846744:	003fe506 	br	8466dc <__alt_mem_epcs_flash_controller_0+0xff83d6dc>
  846748:	02400204 	movi	r9,8
  84674c:	49d3c83a 	sub	r9,r9,r7
  846750:	4a53883a 	add	r9,r9,r9
  846754:	2a000017 	ldw	r8,0(r5)
  846758:	4a53883a 	add	r9,r9,r9
  84675c:	02800804 	movi	r10,32
  846760:	5255c83a 	sub	r10,r10,r9
  846764:	28c00104 	addi	r3,r5,4
  846768:	2805883a 	mov	r2,r5
  84676c:	19c00017 	ldw	r7,0(r3)
  846770:	10800104 	addi	r2,r2,4
  846774:	18c00104 	addi	r3,r3,4
  846778:	3a88983a 	sll	r4,r7,r10
  84677c:	2208b03a 	or	r4,r4,r8
  846780:	3a50d83a 	srl	r8,r7,r9
  846784:	113fff15 	stw	r4,-4(r2)
  846788:	1a3fff15 	stw	r8,-4(r3)
  84678c:	137ff736 	bltu	r2,r13,84676c <__alt_mem_epcs_flash_controller_0+0xff83d76c>
  846790:	003faa06 	br	84663c <__alt_mem_epcs_flash_controller_0+0xff83d63c>

00846794 <_isatty_r>:
  846794:	defffd04 	addi	sp,sp,-12
  846798:	dc000015 	stw	r16,0(sp)
  84679c:	040021b4 	movhi	r16,134
  8467a0:	dc400115 	stw	r17,4(sp)
  8467a4:	842fc604 	addi	r16,r16,-16616
  8467a8:	2023883a 	mov	r17,r4
  8467ac:	2809883a 	mov	r4,r5
  8467b0:	dfc00215 	stw	ra,8(sp)
  8467b4:	80000015 	stw	zero,0(r16)
  8467b8:	0849d9c0 	call	849d9c <isatty>
  8467bc:	00ffffc4 	movi	r3,-1
  8467c0:	10c00526 	beq	r2,r3,8467d8 <_isatty_r+0x44>
  8467c4:	dfc00217 	ldw	ra,8(sp)
  8467c8:	dc400117 	ldw	r17,4(sp)
  8467cc:	dc000017 	ldw	r16,0(sp)
  8467d0:	dec00304 	addi	sp,sp,12
  8467d4:	f800283a 	ret
  8467d8:	80c00017 	ldw	r3,0(r16)
  8467dc:	183ff926 	beq	r3,zero,8467c4 <__alt_mem_epcs_flash_controller_0+0xff83d7c4>
  8467e0:	88c00015 	stw	r3,0(r17)
  8467e4:	003ff706 	br	8467c4 <__alt_mem_epcs_flash_controller_0+0xff83d7c4>

008467e8 <_wcrtomb_r>:
  8467e8:	defff604 	addi	sp,sp,-40
  8467ec:	008021b4 	movhi	r2,134
  8467f0:	dc800815 	stw	r18,32(sp)
  8467f4:	dc400715 	stw	r17,28(sp)
  8467f8:	dc000615 	stw	r16,24(sp)
  8467fc:	10af7b04 	addi	r2,r2,-16916
  846800:	dfc00915 	stw	ra,36(sp)
  846804:	2021883a 	mov	r16,r4
  846808:	3823883a 	mov	r17,r7
  84680c:	14800017 	ldw	r18,0(r2)
  846810:	28001426 	beq	r5,zero,846864 <_wcrtomb_r+0x7c>
  846814:	d9400415 	stw	r5,16(sp)
  846818:	d9800515 	stw	r6,20(sp)
  84681c:	083d7300 	call	83d730 <__locale_charset>
  846820:	d9800517 	ldw	r6,20(sp)
  846824:	d9400417 	ldw	r5,16(sp)
  846828:	100f883a 	mov	r7,r2
  84682c:	dc400015 	stw	r17,0(sp)
  846830:	8009883a 	mov	r4,r16
  846834:	903ee83a 	callr	r18
  846838:	00ffffc4 	movi	r3,-1
  84683c:	10c0031e 	bne	r2,r3,84684c <_wcrtomb_r+0x64>
  846840:	88000015 	stw	zero,0(r17)
  846844:	00c02284 	movi	r3,138
  846848:	80c00015 	stw	r3,0(r16)
  84684c:	dfc00917 	ldw	ra,36(sp)
  846850:	dc800817 	ldw	r18,32(sp)
  846854:	dc400717 	ldw	r17,28(sp)
  846858:	dc000617 	ldw	r16,24(sp)
  84685c:	dec00a04 	addi	sp,sp,40
  846860:	f800283a 	ret
  846864:	083d7300 	call	83d730 <__locale_charset>
  846868:	100f883a 	mov	r7,r2
  84686c:	dc400015 	stw	r17,0(sp)
  846870:	000d883a 	mov	r6,zero
  846874:	d9400104 	addi	r5,sp,4
  846878:	8009883a 	mov	r4,r16
  84687c:	903ee83a 	callr	r18
  846880:	003fed06 	br	846838 <__alt_mem_epcs_flash_controller_0+0xff83d838>

00846884 <wcrtomb>:
  846884:	defff604 	addi	sp,sp,-40
  846888:	008021b4 	movhi	r2,134
  84688c:	dc800615 	stw	r18,24(sp)
  846890:	dc400515 	stw	r17,20(sp)
  846894:	10af7404 	addi	r2,r2,-16944
  846898:	dfc00915 	stw	ra,36(sp)
  84689c:	dd000815 	stw	r20,32(sp)
  8468a0:	dcc00715 	stw	r19,28(sp)
  8468a4:	dc000415 	stw	r16,16(sp)
  8468a8:	3025883a 	mov	r18,r6
  8468ac:	14400017 	ldw	r17,0(r2)
  8468b0:	20001926 	beq	r4,zero,846918 <wcrtomb+0x94>
  8468b4:	008021b4 	movhi	r2,134
  8468b8:	10af7b04 	addi	r2,r2,-16916
  8468bc:	15000017 	ldw	r20,0(r2)
  8468c0:	2021883a 	mov	r16,r4
  8468c4:	2827883a 	mov	r19,r5
  8468c8:	083d7300 	call	83d730 <__locale_charset>
  8468cc:	100f883a 	mov	r7,r2
  8468d0:	dc800015 	stw	r18,0(sp)
  8468d4:	980d883a 	mov	r6,r19
  8468d8:	800b883a 	mov	r5,r16
  8468dc:	8809883a 	mov	r4,r17
  8468e0:	a03ee83a 	callr	r20
  8468e4:	00ffffc4 	movi	r3,-1
  8468e8:	10c0031e 	bne	r2,r3,8468f8 <wcrtomb+0x74>
  8468ec:	90000015 	stw	zero,0(r18)
  8468f0:	00c02284 	movi	r3,138
  8468f4:	88c00015 	stw	r3,0(r17)
  8468f8:	dfc00917 	ldw	ra,36(sp)
  8468fc:	dd000817 	ldw	r20,32(sp)
  846900:	dcc00717 	ldw	r19,28(sp)
  846904:	dc800617 	ldw	r18,24(sp)
  846908:	dc400517 	ldw	r17,20(sp)
  84690c:	dc000417 	ldw	r16,16(sp)
  846910:	dec00a04 	addi	sp,sp,40
  846914:	f800283a 	ret
  846918:	008021b4 	movhi	r2,134
  84691c:	10af7b04 	addi	r2,r2,-16916
  846920:	14000017 	ldw	r16,0(r2)
  846924:	083d7300 	call	83d730 <__locale_charset>
  846928:	100f883a 	mov	r7,r2
  84692c:	dc800015 	stw	r18,0(sp)
  846930:	000d883a 	mov	r6,zero
  846934:	d9400104 	addi	r5,sp,4
  846938:	8809883a 	mov	r4,r17
  84693c:	803ee83a 	callr	r16
  846940:	003fe806 	br	8468e4 <__alt_mem_epcs_flash_controller_0+0xff83d8e4>

00846944 <__ascii_wctomb>:
  846944:	28000526 	beq	r5,zero,84695c <__ascii_wctomb+0x18>
  846948:	00803fc4 	movi	r2,255
  84694c:	11800536 	bltu	r2,r6,846964 <__ascii_wctomb+0x20>
  846950:	29800005 	stb	r6,0(r5)
  846954:	00800044 	movi	r2,1
  846958:	f800283a 	ret
  84695c:	0005883a 	mov	r2,zero
  846960:	f800283a 	ret
  846964:	00802284 	movi	r2,138
  846968:	20800015 	stw	r2,0(r4)
  84696c:	00bfffc4 	movi	r2,-1
  846970:	f800283a 	ret

00846974 <_wctomb_r>:
  846974:	008021b4 	movhi	r2,134
  846978:	defff904 	addi	sp,sp,-28
  84697c:	10af7b04 	addi	r2,r2,-16916
  846980:	dfc00615 	stw	ra,24(sp)
  846984:	dc400515 	stw	r17,20(sp)
  846988:	dc000415 	stw	r16,16(sp)
  84698c:	3823883a 	mov	r17,r7
  846990:	14000017 	ldw	r16,0(r2)
  846994:	d9000115 	stw	r4,4(sp)
  846998:	d9400215 	stw	r5,8(sp)
  84699c:	d9800315 	stw	r6,12(sp)
  8469a0:	083d7300 	call	83d730 <__locale_charset>
  8469a4:	d9800317 	ldw	r6,12(sp)
  8469a8:	d9400217 	ldw	r5,8(sp)
  8469ac:	d9000117 	ldw	r4,4(sp)
  8469b0:	100f883a 	mov	r7,r2
  8469b4:	dc400015 	stw	r17,0(sp)
  8469b8:	803ee83a 	callr	r16
  8469bc:	dfc00617 	ldw	ra,24(sp)
  8469c0:	dc400517 	ldw	r17,20(sp)
  8469c4:	dc000417 	ldw	r16,16(sp)
  8469c8:	dec00704 	addi	sp,sp,28
  8469cc:	f800283a 	ret

008469d0 <__muldi3>:
  8469d0:	defff604 	addi	sp,sp,-40
  8469d4:	dd800615 	stw	r22,24(sp)
  8469d8:	dd400515 	stw	r21,20(sp)
  8469dc:	dc400115 	stw	r17,4(sp)
  8469e0:	357fffcc 	andi	r21,r6,65535
  8469e4:	2022d43a 	srli	r17,r4,16
  8469e8:	25bfffcc 	andi	r22,r4,65535
  8469ec:	dcc00315 	stw	r19,12(sp)
  8469f0:	dc800215 	stw	r18,8(sp)
  8469f4:	2027883a 	mov	r19,r4
  8469f8:	2825883a 	mov	r18,r5
  8469fc:	b009883a 	mov	r4,r22
  846a00:	a80b883a 	mov	r5,r21
  846a04:	dfc00915 	stw	ra,36(sp)
  846a08:	df000815 	stw	fp,32(sp)
  846a0c:	ddc00715 	stw	r23,28(sp)
  846a10:	3839883a 	mov	fp,r7
  846a14:	302ed43a 	srli	r23,r6,16
  846a18:	dd000415 	stw	r20,16(sp)
  846a1c:	dc000015 	stw	r16,0(sp)
  846a20:	3029883a 	mov	r20,r6
  846a24:	08301e80 	call	8301e8 <__mulsi3>
  846a28:	a80b883a 	mov	r5,r21
  846a2c:	8809883a 	mov	r4,r17
  846a30:	1021883a 	mov	r16,r2
  846a34:	08301e80 	call	8301e8 <__mulsi3>
  846a38:	8809883a 	mov	r4,r17
  846a3c:	b80b883a 	mov	r5,r23
  846a40:	102b883a 	mov	r21,r2
  846a44:	08301e80 	call	8301e8 <__mulsi3>
  846a48:	b80b883a 	mov	r5,r23
  846a4c:	b009883a 	mov	r4,r22
  846a50:	1023883a 	mov	r17,r2
  846a54:	08301e80 	call	8301e8 <__mulsi3>
  846a58:	8006d43a 	srli	r3,r16,16
  846a5c:	1545883a 	add	r2,r2,r21
  846a60:	1885883a 	add	r2,r3,r2
  846a64:	1540022e 	bgeu	r2,r21,846a70 <__muldi3+0xa0>
  846a68:	00c00074 	movhi	r3,1
  846a6c:	88e3883a 	add	r17,r17,r3
  846a70:	1006d43a 	srli	r3,r2,16
  846a74:	1004943a 	slli	r2,r2,16
  846a78:	e00b883a 	mov	r5,fp
  846a7c:	9809883a 	mov	r4,r19
  846a80:	843fffcc 	andi	r16,r16,65535
  846a84:	1c63883a 	add	r17,r3,r17
  846a88:	1421883a 	add	r16,r2,r16
  846a8c:	08301e80 	call	8301e8 <__mulsi3>
  846a90:	900b883a 	mov	r5,r18
  846a94:	a009883a 	mov	r4,r20
  846a98:	1027883a 	mov	r19,r2
  846a9c:	08301e80 	call	8301e8 <__mulsi3>
  846aa0:	9885883a 	add	r2,r19,r2
  846aa4:	1447883a 	add	r3,r2,r17
  846aa8:	8005883a 	mov	r2,r16
  846aac:	dfc00917 	ldw	ra,36(sp)
  846ab0:	df000817 	ldw	fp,32(sp)
  846ab4:	ddc00717 	ldw	r23,28(sp)
  846ab8:	dd800617 	ldw	r22,24(sp)
  846abc:	dd400517 	ldw	r21,20(sp)
  846ac0:	dd000417 	ldw	r20,16(sp)
  846ac4:	dcc00317 	ldw	r19,12(sp)
  846ac8:	dc800217 	ldw	r18,8(sp)
  846acc:	dc400117 	ldw	r17,4(sp)
  846ad0:	dc000017 	ldw	r16,0(sp)
  846ad4:	dec00a04 	addi	sp,sp,40
  846ad8:	f800283a 	ret

00846adc <__fixunsdfsi>:
  846adc:	defffd04 	addi	sp,sp,-12
  846ae0:	000d883a 	mov	r6,zero
  846ae4:	01d07834 	movhi	r7,16864
  846ae8:	dc400115 	stw	r17,4(sp)
  846aec:	dc000015 	stw	r16,0(sp)
  846af0:	dfc00215 	stw	ra,8(sp)
  846af4:	2023883a 	mov	r17,r4
  846af8:	2821883a 	mov	r16,r5
  846afc:	0848c100 	call	848c10 <__gedf2>
  846b00:	1000080e 	bge	r2,zero,846b24 <__fixunsdfsi+0x48>
  846b04:	8809883a 	mov	r4,r17
  846b08:	800b883a 	mov	r5,r16
  846b0c:	08496dc0 	call	8496dc <__fixdfsi>
  846b10:	dfc00217 	ldw	ra,8(sp)
  846b14:	dc400117 	ldw	r17,4(sp)
  846b18:	dc000017 	ldw	r16,0(sp)
  846b1c:	dec00304 	addi	sp,sp,12
  846b20:	f800283a 	ret
  846b24:	000d883a 	mov	r6,zero
  846b28:	01d07834 	movhi	r7,16864
  846b2c:	8809883a 	mov	r4,r17
  846b30:	800b883a 	mov	r5,r16
  846b34:	0848de00 	call	848de0 <__subdf3>
  846b38:	180b883a 	mov	r5,r3
  846b3c:	1009883a 	mov	r4,r2
  846b40:	08496dc0 	call	8496dc <__fixdfsi>
  846b44:	00e00034 	movhi	r3,32768
  846b48:	10c5883a 	add	r2,r2,r3
  846b4c:	003ff006 	br	846b10 <__alt_mem_epcs_flash_controller_0+0xff83db10>

00846b50 <__udivdi3>:
  846b50:	defff404 	addi	sp,sp,-48
  846b54:	dcc00515 	stw	r19,20(sp)
  846b58:	dc000215 	stw	r16,8(sp)
  846b5c:	dfc00b15 	stw	ra,44(sp)
  846b60:	df000a15 	stw	fp,40(sp)
  846b64:	ddc00915 	stw	r23,36(sp)
  846b68:	dd800815 	stw	r22,32(sp)
  846b6c:	dd400715 	stw	r21,28(sp)
  846b70:	dd000615 	stw	r20,24(sp)
  846b74:	dc800415 	stw	r18,16(sp)
  846b78:	dc400315 	stw	r17,12(sp)
  846b7c:	2027883a 	mov	r19,r4
  846b80:	2821883a 	mov	r16,r5
  846b84:	3800461e 	bne	r7,zero,846ca0 <__udivdi3+0x150>
  846b88:	3023883a 	mov	r17,r6
  846b8c:	2025883a 	mov	r18,r4
  846b90:	2980572e 	bgeu	r5,r6,846cf0 <__udivdi3+0x1a0>
  846b94:	00bfffd4 	movui	r2,65535
  846b98:	282d883a 	mov	r22,r5
  846b9c:	1180b236 	bltu	r2,r6,846e68 <__udivdi3+0x318>
  846ba0:	00803fc4 	movi	r2,255
  846ba4:	1185803a 	cmpltu	r2,r2,r6
  846ba8:	100490fa 	slli	r2,r2,3
  846bac:	3086d83a 	srl	r3,r6,r2
  846bb0:	010021b4 	movhi	r4,134
  846bb4:	2125b304 	addi	r4,r4,-26932
  846bb8:	20c7883a 	add	r3,r4,r3
  846bbc:	18c00003 	ldbu	r3,0(r3)
  846bc0:	1885883a 	add	r2,r3,r2
  846bc4:	00c00804 	movi	r3,32
  846bc8:	1887c83a 	sub	r3,r3,r2
  846bcc:	18000526 	beq	r3,zero,846be4 <__udivdi3+0x94>
  846bd0:	80e0983a 	sll	r16,r16,r3
  846bd4:	9884d83a 	srl	r2,r19,r2
  846bd8:	30e2983a 	sll	r17,r6,r3
  846bdc:	98e4983a 	sll	r18,r19,r3
  846be0:	142cb03a 	or	r22,r2,r16
  846be4:	882ad43a 	srli	r21,r17,16
  846be8:	b009883a 	mov	r4,r22
  846bec:	8d3fffcc 	andi	r20,r17,65535
  846bf0:	a80b883a 	mov	r5,r21
  846bf4:	08301900 	call	830190 <__umodsi3>
  846bf8:	b009883a 	mov	r4,r22
  846bfc:	a80b883a 	mov	r5,r21
  846c00:	1027883a 	mov	r19,r2
  846c04:	083012c0 	call	83012c <__udivsi3>
  846c08:	100b883a 	mov	r5,r2
  846c0c:	a009883a 	mov	r4,r20
  846c10:	102d883a 	mov	r22,r2
  846c14:	08301e80 	call	8301e8 <__mulsi3>
  846c18:	9826943a 	slli	r19,r19,16
  846c1c:	9006d43a 	srli	r3,r18,16
  846c20:	1cc6b03a 	or	r3,r3,r19
  846c24:	1880052e 	bgeu	r3,r2,846c3c <__udivdi3+0xec>
  846c28:	1c47883a 	add	r3,r3,r17
  846c2c:	b13fffc4 	addi	r4,r22,-1
  846c30:	1c400136 	bltu	r3,r17,846c38 <__udivdi3+0xe8>
  846c34:	18814236 	bltu	r3,r2,847140 <__udivdi3+0x5f0>
  846c38:	202d883a 	mov	r22,r4
  846c3c:	18a1c83a 	sub	r16,r3,r2
  846c40:	8009883a 	mov	r4,r16
  846c44:	a80b883a 	mov	r5,r21
  846c48:	08301900 	call	830190 <__umodsi3>
  846c4c:	1027883a 	mov	r19,r2
  846c50:	8009883a 	mov	r4,r16
  846c54:	a80b883a 	mov	r5,r21
  846c58:	9826943a 	slli	r19,r19,16
  846c5c:	083012c0 	call	83012c <__udivsi3>
  846c60:	100b883a 	mov	r5,r2
  846c64:	a009883a 	mov	r4,r20
  846c68:	94bfffcc 	andi	r18,r18,65535
  846c6c:	1021883a 	mov	r16,r2
  846c70:	94e4b03a 	or	r18,r18,r19
  846c74:	08301e80 	call	8301e8 <__mulsi3>
  846c78:	9080052e 	bgeu	r18,r2,846c90 <__udivdi3+0x140>
  846c7c:	8ca5883a 	add	r18,r17,r18
  846c80:	80ffffc4 	addi	r3,r16,-1
  846c84:	94410c36 	bltu	r18,r17,8470b8 <__udivdi3+0x568>
  846c88:	90810b2e 	bgeu	r18,r2,8470b8 <__udivdi3+0x568>
  846c8c:	843fff84 	addi	r16,r16,-2
  846c90:	b004943a 	slli	r2,r22,16
  846c94:	0007883a 	mov	r3,zero
  846c98:	1404b03a 	or	r2,r2,r16
  846c9c:	00005e06 	br	846e18 <__udivdi3+0x2c8>
  846ca0:	29c05b36 	bltu	r5,r7,846e10 <__udivdi3+0x2c0>
  846ca4:	00bfffd4 	movui	r2,65535
  846ca8:	11c0672e 	bgeu	r2,r7,846e48 <__udivdi3+0x2f8>
  846cac:	00804034 	movhi	r2,256
  846cb0:	10bfffc4 	addi	r2,r2,-1
  846cb4:	11c10a36 	bltu	r2,r7,8470e0 <__udivdi3+0x590>
  846cb8:	00800404 	movi	r2,16
  846cbc:	3886d83a 	srl	r3,r7,r2
  846cc0:	010021b4 	movhi	r4,134
  846cc4:	2125b304 	addi	r4,r4,-26932
  846cc8:	20c7883a 	add	r3,r4,r3
  846ccc:	18c00003 	ldbu	r3,0(r3)
  846cd0:	05c00804 	movi	r23,32
  846cd4:	1885883a 	add	r2,r3,r2
  846cd8:	b8afc83a 	sub	r23,r23,r2
  846cdc:	b800671e 	bne	r23,zero,846e7c <__udivdi3+0x32c>
  846ce0:	3c010536 	bltu	r7,r16,8470f8 <__udivdi3+0x5a8>
  846ce4:	9985403a 	cmpgeu	r2,r19,r6
  846ce8:	0007883a 	mov	r3,zero
  846cec:	00004a06 	br	846e18 <__udivdi3+0x2c8>
  846cf0:	3000041e 	bne	r6,zero,846d04 <__udivdi3+0x1b4>
  846cf4:	000b883a 	mov	r5,zero
  846cf8:	01000044 	movi	r4,1
  846cfc:	083012c0 	call	83012c <__udivsi3>
  846d00:	1023883a 	mov	r17,r2
  846d04:	00bfffd4 	movui	r2,65535
  846d08:	1440532e 	bgeu	r2,r17,846e58 <__udivdi3+0x308>
  846d0c:	00804034 	movhi	r2,256
  846d10:	10bfffc4 	addi	r2,r2,-1
  846d14:	1440f436 	bltu	r2,r17,8470e8 <__udivdi3+0x598>
  846d18:	00800404 	movi	r2,16
  846d1c:	8886d83a 	srl	r3,r17,r2
  846d20:	010021b4 	movhi	r4,134
  846d24:	2125b304 	addi	r4,r4,-26932
  846d28:	20c7883a 	add	r3,r4,r3
  846d2c:	18c00003 	ldbu	r3,0(r3)
  846d30:	1885883a 	add	r2,r3,r2
  846d34:	00c00804 	movi	r3,32
  846d38:	1887c83a 	sub	r3,r3,r2
  846d3c:	1800a51e 	bne	r3,zero,846fd4 <__udivdi3+0x484>
  846d40:	882ad43a 	srli	r21,r17,16
  846d44:	8461c83a 	sub	r16,r16,r17
  846d48:	8d3fffcc 	andi	r20,r17,65535
  846d4c:	00c00044 	movi	r3,1
  846d50:	a80b883a 	mov	r5,r21
  846d54:	8009883a 	mov	r4,r16
  846d58:	d8c00115 	stw	r3,4(sp)
  846d5c:	08301900 	call	830190 <__umodsi3>
  846d60:	a80b883a 	mov	r5,r21
  846d64:	8009883a 	mov	r4,r16
  846d68:	1027883a 	mov	r19,r2
  846d6c:	083012c0 	call	83012c <__udivsi3>
  846d70:	a00b883a 	mov	r5,r20
  846d74:	1009883a 	mov	r4,r2
  846d78:	102d883a 	mov	r22,r2
  846d7c:	08301e80 	call	8301e8 <__mulsi3>
  846d80:	9826943a 	slli	r19,r19,16
  846d84:	900ed43a 	srli	r7,r18,16
  846d88:	d8c00117 	ldw	r3,4(sp)
  846d8c:	3cceb03a 	or	r7,r7,r19
  846d90:	3880052e 	bgeu	r7,r2,846da8 <__udivdi3+0x258>
  846d94:	3c4f883a 	add	r7,r7,r17
  846d98:	b13fffc4 	addi	r4,r22,-1
  846d9c:	3c400136 	bltu	r7,r17,846da4 <__udivdi3+0x254>
  846da0:	3880e436 	bltu	r7,r2,847134 <__udivdi3+0x5e4>
  846da4:	202d883a 	mov	r22,r4
  846da8:	38a1c83a 	sub	r16,r7,r2
  846dac:	8009883a 	mov	r4,r16
  846db0:	a80b883a 	mov	r5,r21
  846db4:	d8c00115 	stw	r3,4(sp)
  846db8:	08301900 	call	830190 <__umodsi3>
  846dbc:	1027883a 	mov	r19,r2
  846dc0:	8009883a 	mov	r4,r16
  846dc4:	a80b883a 	mov	r5,r21
  846dc8:	9826943a 	slli	r19,r19,16
  846dcc:	083012c0 	call	83012c <__udivsi3>
  846dd0:	a00b883a 	mov	r5,r20
  846dd4:	1009883a 	mov	r4,r2
  846dd8:	94bfffcc 	andi	r18,r18,65535
  846ddc:	1021883a 	mov	r16,r2
  846de0:	94e4b03a 	or	r18,r18,r19
  846de4:	08301e80 	call	8301e8 <__mulsi3>
  846de8:	d8c00117 	ldw	r3,4(sp)
  846dec:	9080052e 	bgeu	r18,r2,846e04 <__udivdi3+0x2b4>
  846df0:	8ca5883a 	add	r18,r17,r18
  846df4:	813fffc4 	addi	r4,r16,-1
  846df8:	9440ad36 	bltu	r18,r17,8470b0 <__udivdi3+0x560>
  846dfc:	9080ac2e 	bgeu	r18,r2,8470b0 <__udivdi3+0x560>
  846e00:	843fff84 	addi	r16,r16,-2
  846e04:	b004943a 	slli	r2,r22,16
  846e08:	1404b03a 	or	r2,r2,r16
  846e0c:	00000206 	br	846e18 <__udivdi3+0x2c8>
  846e10:	0007883a 	mov	r3,zero
  846e14:	0005883a 	mov	r2,zero
  846e18:	dfc00b17 	ldw	ra,44(sp)
  846e1c:	df000a17 	ldw	fp,40(sp)
  846e20:	ddc00917 	ldw	r23,36(sp)
  846e24:	dd800817 	ldw	r22,32(sp)
  846e28:	dd400717 	ldw	r21,28(sp)
  846e2c:	dd000617 	ldw	r20,24(sp)
  846e30:	dcc00517 	ldw	r19,20(sp)
  846e34:	dc800417 	ldw	r18,16(sp)
  846e38:	dc400317 	ldw	r17,12(sp)
  846e3c:	dc000217 	ldw	r16,8(sp)
  846e40:	dec00c04 	addi	sp,sp,48
  846e44:	f800283a 	ret
  846e48:	00803fc4 	movi	r2,255
  846e4c:	11c5803a 	cmpltu	r2,r2,r7
  846e50:	100490fa 	slli	r2,r2,3
  846e54:	003f9906 	br	846cbc <__alt_mem_epcs_flash_controller_0+0xff83dcbc>
  846e58:	00803fc4 	movi	r2,255
  846e5c:	1445803a 	cmpltu	r2,r2,r17
  846e60:	100490fa 	slli	r2,r2,3
  846e64:	003fad06 	br	846d1c <__alt_mem_epcs_flash_controller_0+0xff83dd1c>
  846e68:	00804034 	movhi	r2,256
  846e6c:	10bfffc4 	addi	r2,r2,-1
  846e70:	11809f36 	bltu	r2,r6,8470f0 <__udivdi3+0x5a0>
  846e74:	00800404 	movi	r2,16
  846e78:	003f4c06 	br	846bac <__alt_mem_epcs_flash_controller_0+0xff83dbac>
  846e7c:	3dce983a 	sll	r7,r7,r23
  846e80:	30b8d83a 	srl	fp,r6,r2
  846e84:	80a2d83a 	srl	r17,r16,r2
  846e88:	35cc983a 	sll	r6,r6,r23
  846e8c:	3f38b03a 	or	fp,r7,fp
  846e90:	e024d43a 	srli	r18,fp,16
  846e94:	9884d83a 	srl	r2,r19,r2
  846e98:	85e0983a 	sll	r16,r16,r23
  846e9c:	8809883a 	mov	r4,r17
  846ea0:	900b883a 	mov	r5,r18
  846ea4:	d9800015 	stw	r6,0(sp)
  846ea8:	1420b03a 	or	r16,r2,r16
  846eac:	08301900 	call	830190 <__umodsi3>
  846eb0:	900b883a 	mov	r5,r18
  846eb4:	8809883a 	mov	r4,r17
  846eb8:	1029883a 	mov	r20,r2
  846ebc:	e5bfffcc 	andi	r22,fp,65535
  846ec0:	083012c0 	call	83012c <__udivsi3>
  846ec4:	100b883a 	mov	r5,r2
  846ec8:	b009883a 	mov	r4,r22
  846ecc:	102b883a 	mov	r21,r2
  846ed0:	08301e80 	call	8301e8 <__mulsi3>
  846ed4:	a028943a 	slli	r20,r20,16
  846ed8:	8006d43a 	srli	r3,r16,16
  846edc:	1d06b03a 	or	r3,r3,r20
  846ee0:	1880042e 	bgeu	r3,r2,846ef4 <__udivdi3+0x3a4>
  846ee4:	1f07883a 	add	r3,r3,fp
  846ee8:	a93fffc4 	addi	r4,r21,-1
  846eec:	1f00892e 	bgeu	r3,fp,847114 <__udivdi3+0x5c4>
  846ef0:	202b883a 	mov	r21,r4
  846ef4:	18a3c83a 	sub	r17,r3,r2
  846ef8:	8809883a 	mov	r4,r17
  846efc:	900b883a 	mov	r5,r18
  846f00:	08301900 	call	830190 <__umodsi3>
  846f04:	1029883a 	mov	r20,r2
  846f08:	8809883a 	mov	r4,r17
  846f0c:	900b883a 	mov	r5,r18
  846f10:	a028943a 	slli	r20,r20,16
  846f14:	083012c0 	call	83012c <__udivsi3>
  846f18:	100b883a 	mov	r5,r2
  846f1c:	b009883a 	mov	r4,r22
  846f20:	843fffcc 	andi	r16,r16,65535
  846f24:	1023883a 	mov	r17,r2
  846f28:	8520b03a 	or	r16,r16,r20
  846f2c:	08301e80 	call	8301e8 <__mulsi3>
  846f30:	8080042e 	bgeu	r16,r2,846f44 <__udivdi3+0x3f4>
  846f34:	8721883a 	add	r16,r16,fp
  846f38:	88ffffc4 	addi	r3,r17,-1
  846f3c:	8700712e 	bgeu	r16,fp,847104 <__udivdi3+0x5b4>
  846f40:	1823883a 	mov	r17,r3
  846f44:	a80e943a 	slli	r7,r21,16
  846f48:	d8c00017 	ldw	r3,0(sp)
  846f4c:	80a1c83a 	sub	r16,r16,r2
  846f50:	3c64b03a 	or	r18,r7,r17
  846f54:	1d3fffcc 	andi	r20,r3,65535
  846f58:	9022d43a 	srli	r17,r18,16
  846f5c:	95bfffcc 	andi	r22,r18,65535
  846f60:	a00b883a 	mov	r5,r20
  846f64:	b009883a 	mov	r4,r22
  846f68:	182ad43a 	srli	r21,r3,16
  846f6c:	08301e80 	call	8301e8 <__mulsi3>
  846f70:	a00b883a 	mov	r5,r20
  846f74:	8809883a 	mov	r4,r17
  846f78:	1039883a 	mov	fp,r2
  846f7c:	08301e80 	call	8301e8 <__mulsi3>
  846f80:	8809883a 	mov	r4,r17
  846f84:	a80b883a 	mov	r5,r21
  846f88:	1029883a 	mov	r20,r2
  846f8c:	08301e80 	call	8301e8 <__mulsi3>
  846f90:	a80b883a 	mov	r5,r21
  846f94:	b009883a 	mov	r4,r22
  846f98:	1023883a 	mov	r17,r2
  846f9c:	08301e80 	call	8301e8 <__mulsi3>
  846fa0:	e006d43a 	srli	r3,fp,16
  846fa4:	1505883a 	add	r2,r2,r20
  846fa8:	1887883a 	add	r3,r3,r2
  846fac:	1d00022e 	bgeu	r3,r20,846fb8 <__udivdi3+0x468>
  846fb0:	00800074 	movhi	r2,1
  846fb4:	88a3883a 	add	r17,r17,r2
  846fb8:	1804d43a 	srli	r2,r3,16
  846fbc:	1463883a 	add	r17,r2,r17
  846fc0:	84404436 	bltu	r16,r17,8470d4 <__udivdi3+0x584>
  846fc4:	84403e26 	beq	r16,r17,8470c0 <__udivdi3+0x570>
  846fc8:	9005883a 	mov	r2,r18
  846fcc:	0007883a 	mov	r3,zero
  846fd0:	003f9106 	br	846e18 <__alt_mem_epcs_flash_controller_0+0xff83de18>
  846fd4:	88e2983a 	sll	r17,r17,r3
  846fd8:	80aed83a 	srl	r23,r16,r2
  846fdc:	80e0983a 	sll	r16,r16,r3
  846fe0:	882ad43a 	srli	r21,r17,16
  846fe4:	9884d83a 	srl	r2,r19,r2
  846fe8:	b809883a 	mov	r4,r23
  846fec:	a80b883a 	mov	r5,r21
  846ff0:	98e4983a 	sll	r18,r19,r3
  846ff4:	142cb03a 	or	r22,r2,r16
  846ff8:	08301900 	call	830190 <__umodsi3>
  846ffc:	b809883a 	mov	r4,r23
  847000:	a80b883a 	mov	r5,r21
  847004:	1027883a 	mov	r19,r2
  847008:	8d3fffcc 	andi	r20,r17,65535
  84700c:	083012c0 	call	83012c <__udivsi3>
  847010:	a009883a 	mov	r4,r20
  847014:	100b883a 	mov	r5,r2
  847018:	102f883a 	mov	r23,r2
  84701c:	08301e80 	call	8301e8 <__mulsi3>
  847020:	9826943a 	slli	r19,r19,16
  847024:	b008d43a 	srli	r4,r22,16
  847028:	24c8b03a 	or	r4,r4,r19
  84702c:	2080062e 	bgeu	r4,r2,847048 <__udivdi3+0x4f8>
  847030:	2449883a 	add	r4,r4,r17
  847034:	b8ffffc4 	addi	r3,r23,-1
  847038:	24403c36 	bltu	r4,r17,84712c <__udivdi3+0x5dc>
  84703c:	20803b2e 	bgeu	r4,r2,84712c <__udivdi3+0x5dc>
  847040:	bdffff84 	addi	r23,r23,-2
  847044:	2449883a 	add	r4,r4,r17
  847048:	20a1c83a 	sub	r16,r4,r2
  84704c:	a80b883a 	mov	r5,r21
  847050:	8009883a 	mov	r4,r16
  847054:	08301900 	call	830190 <__umodsi3>
  847058:	a80b883a 	mov	r5,r21
  84705c:	8009883a 	mov	r4,r16
  847060:	1027883a 	mov	r19,r2
  847064:	083012c0 	call	83012c <__udivsi3>
  847068:	a009883a 	mov	r4,r20
  84706c:	100b883a 	mov	r5,r2
  847070:	9826943a 	slli	r19,r19,16
  847074:	1039883a 	mov	fp,r2
  847078:	08301e80 	call	8301e8 <__mulsi3>
  84707c:	b13fffcc 	andi	r4,r22,65535
  847080:	24c8b03a 	or	r4,r4,r19
  847084:	2080062e 	bgeu	r4,r2,8470a0 <__udivdi3+0x550>
  847088:	2449883a 	add	r4,r4,r17
  84708c:	e0ffffc4 	addi	r3,fp,-1
  847090:	24402436 	bltu	r4,r17,847124 <__udivdi3+0x5d4>
  847094:	2080232e 	bgeu	r4,r2,847124 <__udivdi3+0x5d4>
  847098:	e73fff84 	addi	fp,fp,-2
  84709c:	2449883a 	add	r4,r4,r17
  8470a0:	b82e943a 	slli	r23,r23,16
  8470a4:	20a1c83a 	sub	r16,r4,r2
  8470a8:	bf06b03a 	or	r3,r23,fp
  8470ac:	003f2806 	br	846d50 <__alt_mem_epcs_flash_controller_0+0xff83dd50>
  8470b0:	2021883a 	mov	r16,r4
  8470b4:	003f5306 	br	846e04 <__alt_mem_epcs_flash_controller_0+0xff83de04>
  8470b8:	1821883a 	mov	r16,r3
  8470bc:	003ef406 	br	846c90 <__alt_mem_epcs_flash_controller_0+0xff83dc90>
  8470c0:	1806943a 	slli	r3,r3,16
  8470c4:	9de6983a 	sll	r19,r19,r23
  8470c8:	e73fffcc 	andi	fp,fp,65535
  8470cc:	1f07883a 	add	r3,r3,fp
  8470d0:	98ffbd2e 	bgeu	r19,r3,846fc8 <__alt_mem_epcs_flash_controller_0+0xff83dfc8>
  8470d4:	90bfffc4 	addi	r2,r18,-1
  8470d8:	0007883a 	mov	r3,zero
  8470dc:	003f4e06 	br	846e18 <__alt_mem_epcs_flash_controller_0+0xff83de18>
  8470e0:	00800604 	movi	r2,24
  8470e4:	003ef506 	br	846cbc <__alt_mem_epcs_flash_controller_0+0xff83dcbc>
  8470e8:	00800604 	movi	r2,24
  8470ec:	003f0b06 	br	846d1c <__alt_mem_epcs_flash_controller_0+0xff83dd1c>
  8470f0:	00800604 	movi	r2,24
  8470f4:	003ead06 	br	846bac <__alt_mem_epcs_flash_controller_0+0xff83dbac>
  8470f8:	0007883a 	mov	r3,zero
  8470fc:	00800044 	movi	r2,1
  847100:	003f4506 	br	846e18 <__alt_mem_epcs_flash_controller_0+0xff83de18>
  847104:	80bf8e2e 	bgeu	r16,r2,846f40 <__alt_mem_epcs_flash_controller_0+0xff83df40>
  847108:	8c7fff84 	addi	r17,r17,-2
  84710c:	8721883a 	add	r16,r16,fp
  847110:	003f8c06 	br	846f44 <__alt_mem_epcs_flash_controller_0+0xff83df44>
  847114:	18bf762e 	bgeu	r3,r2,846ef0 <__alt_mem_epcs_flash_controller_0+0xff83def0>
  847118:	ad7fff84 	addi	r21,r21,-2
  84711c:	1f07883a 	add	r3,r3,fp
  847120:	003f7406 	br	846ef4 <__alt_mem_epcs_flash_controller_0+0xff83def4>
  847124:	1839883a 	mov	fp,r3
  847128:	003fdd06 	br	8470a0 <__alt_mem_epcs_flash_controller_0+0xff83e0a0>
  84712c:	182f883a 	mov	r23,r3
  847130:	003fc506 	br	847048 <__alt_mem_epcs_flash_controller_0+0xff83e048>
  847134:	b5bfff84 	addi	r22,r22,-2
  847138:	3c4f883a 	add	r7,r7,r17
  84713c:	003f1a06 	br	846da8 <__alt_mem_epcs_flash_controller_0+0xff83dda8>
  847140:	b5bfff84 	addi	r22,r22,-2
  847144:	1c47883a 	add	r3,r3,r17
  847148:	003ebc06 	br	846c3c <__alt_mem_epcs_flash_controller_0+0xff83dc3c>

0084714c <__umoddi3>:
  84714c:	defff304 	addi	sp,sp,-52
  847150:	df000b15 	stw	fp,44(sp)
  847154:	dc400415 	stw	r17,16(sp)
  847158:	dc000315 	stw	r16,12(sp)
  84715c:	dfc00c15 	stw	ra,48(sp)
  847160:	ddc00a15 	stw	r23,40(sp)
  847164:	dd800915 	stw	r22,36(sp)
  847168:	dd400815 	stw	r21,32(sp)
  84716c:	dd000715 	stw	r20,28(sp)
  847170:	dcc00615 	stw	r19,24(sp)
  847174:	dc800515 	stw	r18,20(sp)
  847178:	2021883a 	mov	r16,r4
  84717c:	2823883a 	mov	r17,r5
  847180:	2839883a 	mov	fp,r5
  847184:	3800401e 	bne	r7,zero,847288 <__umoddi3+0x13c>
  847188:	3027883a 	mov	r19,r6
  84718c:	2029883a 	mov	r20,r4
  847190:	2980552e 	bgeu	r5,r6,8472e8 <__umoddi3+0x19c>
  847194:	00bfffd4 	movui	r2,65535
  847198:	1180a236 	bltu	r2,r6,847424 <__umoddi3+0x2d8>
  84719c:	01003fc4 	movi	r4,255
  8471a0:	2189803a 	cmpltu	r4,r4,r6
  8471a4:	200890fa 	slli	r4,r4,3
  8471a8:	3104d83a 	srl	r2,r6,r4
  8471ac:	00c021b4 	movhi	r3,134
  8471b0:	18e5b304 	addi	r3,r3,-26932
  8471b4:	1885883a 	add	r2,r3,r2
  8471b8:	10c00003 	ldbu	r3,0(r2)
  8471bc:	00800804 	movi	r2,32
  8471c0:	1909883a 	add	r4,r3,r4
  8471c4:	1125c83a 	sub	r18,r2,r4
  8471c8:	90000526 	beq	r18,zero,8471e0 <__umoddi3+0x94>
  8471cc:	8ca2983a 	sll	r17,r17,r18
  8471d0:	8108d83a 	srl	r4,r16,r4
  8471d4:	34a6983a 	sll	r19,r6,r18
  8471d8:	84a8983a 	sll	r20,r16,r18
  8471dc:	2478b03a 	or	fp,r4,r17
  8471e0:	982cd43a 	srli	r22,r19,16
  8471e4:	e009883a 	mov	r4,fp
  8471e8:	9dffffcc 	andi	r23,r19,65535
  8471ec:	b00b883a 	mov	r5,r22
  8471f0:	08301900 	call	830190 <__umodsi3>
  8471f4:	b00b883a 	mov	r5,r22
  8471f8:	e009883a 	mov	r4,fp
  8471fc:	102b883a 	mov	r21,r2
  847200:	083012c0 	call	83012c <__udivsi3>
  847204:	100b883a 	mov	r5,r2
  847208:	b809883a 	mov	r4,r23
  84720c:	08301e80 	call	8301e8 <__mulsi3>
  847210:	a82a943a 	slli	r21,r21,16
  847214:	a006d43a 	srli	r3,r20,16
  847218:	1d46b03a 	or	r3,r3,r21
  84721c:	1880032e 	bgeu	r3,r2,84722c <__umoddi3+0xe0>
  847220:	1cc7883a 	add	r3,r3,r19
  847224:	1cc00136 	bltu	r3,r19,84722c <__umoddi3+0xe0>
  847228:	18813136 	bltu	r3,r2,8476f0 <__umoddi3+0x5a4>
  84722c:	18a1c83a 	sub	r16,r3,r2
  847230:	b00b883a 	mov	r5,r22
  847234:	8009883a 	mov	r4,r16
  847238:	08301900 	call	830190 <__umodsi3>
  84723c:	b00b883a 	mov	r5,r22
  847240:	8009883a 	mov	r4,r16
  847244:	1023883a 	mov	r17,r2
  847248:	083012c0 	call	83012c <__udivsi3>
  84724c:	100b883a 	mov	r5,r2
  847250:	b809883a 	mov	r4,r23
  847254:	8822943a 	slli	r17,r17,16
  847258:	08301e80 	call	8301e8 <__mulsi3>
  84725c:	a0ffffcc 	andi	r3,r20,65535
  847260:	1c46b03a 	or	r3,r3,r17
  847264:	1880042e 	bgeu	r3,r2,847278 <__umoddi3+0x12c>
  847268:	1cc7883a 	add	r3,r3,r19
  84726c:	1cc00236 	bltu	r3,r19,847278 <__umoddi3+0x12c>
  847270:	1880012e 	bgeu	r3,r2,847278 <__umoddi3+0x12c>
  847274:	1cc7883a 	add	r3,r3,r19
  847278:	1885c83a 	sub	r2,r3,r2
  84727c:	1484d83a 	srl	r2,r2,r18
  847280:	0007883a 	mov	r3,zero
  847284:	00005306 	br	8473d4 <__umoddi3+0x288>
  847288:	29c05036 	bltu	r5,r7,8473cc <__umoddi3+0x280>
  84728c:	00bfffd4 	movui	r2,65535
  847290:	11c05c2e 	bgeu	r2,r7,847404 <__umoddi3+0x2b8>
  847294:	00804034 	movhi	r2,256
  847298:	10bfffc4 	addi	r2,r2,-1
  84729c:	11c10636 	bltu	r2,r7,8476b8 <__umoddi3+0x56c>
  8472a0:	01000404 	movi	r4,16
  8472a4:	3904d83a 	srl	r2,r7,r4
  8472a8:	00c021b4 	movhi	r3,134
  8472ac:	18e5b304 	addi	r3,r3,-26932
  8472b0:	1885883a 	add	r2,r3,r2
  8472b4:	14c00003 	ldbu	r19,0(r2)
  8472b8:	00c00804 	movi	r3,32
  8472bc:	9927883a 	add	r19,r19,r4
  8472c0:	1ce9c83a 	sub	r20,r3,r19
  8472c4:	a0005c1e 	bne	r20,zero,847438 <__umoddi3+0x2ec>
  8472c8:	3c400136 	bltu	r7,r17,8472d0 <__umoddi3+0x184>
  8472cc:	81810a36 	bltu	r16,r6,8476f8 <__umoddi3+0x5ac>
  8472d0:	8185c83a 	sub	r2,r16,r6
  8472d4:	89e3c83a 	sub	r17,r17,r7
  8472d8:	8089803a 	cmpltu	r4,r16,r2
  8472dc:	8939c83a 	sub	fp,r17,r4
  8472e0:	e007883a 	mov	r3,fp
  8472e4:	00003b06 	br	8473d4 <__umoddi3+0x288>
  8472e8:	3000041e 	bne	r6,zero,8472fc <__umoddi3+0x1b0>
  8472ec:	000b883a 	mov	r5,zero
  8472f0:	01000044 	movi	r4,1
  8472f4:	083012c0 	call	83012c <__udivsi3>
  8472f8:	1027883a 	mov	r19,r2
  8472fc:	00bfffd4 	movui	r2,65535
  847300:	14c0442e 	bgeu	r2,r19,847414 <__umoddi3+0x2c8>
  847304:	00804034 	movhi	r2,256
  847308:	10bfffc4 	addi	r2,r2,-1
  84730c:	14c0ec36 	bltu	r2,r19,8476c0 <__umoddi3+0x574>
  847310:	00800404 	movi	r2,16
  847314:	9886d83a 	srl	r3,r19,r2
  847318:	010021b4 	movhi	r4,134
  84731c:	2125b304 	addi	r4,r4,-26932
  847320:	20c7883a 	add	r3,r4,r3
  847324:	18c00003 	ldbu	r3,0(r3)
  847328:	1887883a 	add	r3,r3,r2
  84732c:	00800804 	movi	r2,32
  847330:	10e5c83a 	sub	r18,r2,r3
  847334:	9000ab1e 	bne	r18,zero,8475e4 <__umoddi3+0x498>
  847338:	982cd43a 	srli	r22,r19,16
  84733c:	8ce3c83a 	sub	r17,r17,r19
  847340:	9dffffcc 	andi	r23,r19,65535
  847344:	b00b883a 	mov	r5,r22
  847348:	8809883a 	mov	r4,r17
  84734c:	08301900 	call	830190 <__umodsi3>
  847350:	b00b883a 	mov	r5,r22
  847354:	8809883a 	mov	r4,r17
  847358:	102b883a 	mov	r21,r2
  84735c:	083012c0 	call	83012c <__udivsi3>
  847360:	b80b883a 	mov	r5,r23
  847364:	1009883a 	mov	r4,r2
  847368:	08301e80 	call	8301e8 <__mulsi3>
  84736c:	a82a943a 	slli	r21,r21,16
  847370:	a006d43a 	srli	r3,r20,16
  847374:	1d46b03a 	or	r3,r3,r21
  847378:	1880042e 	bgeu	r3,r2,84738c <__umoddi3+0x240>
  84737c:	1cc7883a 	add	r3,r3,r19
  847380:	1cc00236 	bltu	r3,r19,84738c <__umoddi3+0x240>
  847384:	1880012e 	bgeu	r3,r2,84738c <__umoddi3+0x240>
  847388:	1cc7883a 	add	r3,r3,r19
  84738c:	18a1c83a 	sub	r16,r3,r2
  847390:	b00b883a 	mov	r5,r22
  847394:	8009883a 	mov	r4,r16
  847398:	08301900 	call	830190 <__umodsi3>
  84739c:	1023883a 	mov	r17,r2
  8473a0:	b00b883a 	mov	r5,r22
  8473a4:	8009883a 	mov	r4,r16
  8473a8:	083012c0 	call	83012c <__udivsi3>
  8473ac:	8822943a 	slli	r17,r17,16
  8473b0:	b80b883a 	mov	r5,r23
  8473b4:	1009883a 	mov	r4,r2
  8473b8:	08301e80 	call	8301e8 <__mulsi3>
  8473bc:	a53fffcc 	andi	r20,r20,65535
  8473c0:	a446b03a 	or	r3,r20,r17
  8473c4:	18bfac2e 	bgeu	r3,r2,847278 <__alt_mem_epcs_flash_controller_0+0xff83e278>
  8473c8:	003fa706 	br	847268 <__alt_mem_epcs_flash_controller_0+0xff83e268>
  8473cc:	2005883a 	mov	r2,r4
  8473d0:	2807883a 	mov	r3,r5
  8473d4:	dfc00c17 	ldw	ra,48(sp)
  8473d8:	df000b17 	ldw	fp,44(sp)
  8473dc:	ddc00a17 	ldw	r23,40(sp)
  8473e0:	dd800917 	ldw	r22,36(sp)
  8473e4:	dd400817 	ldw	r21,32(sp)
  8473e8:	dd000717 	ldw	r20,28(sp)
  8473ec:	dcc00617 	ldw	r19,24(sp)
  8473f0:	dc800517 	ldw	r18,20(sp)
  8473f4:	dc400417 	ldw	r17,16(sp)
  8473f8:	dc000317 	ldw	r16,12(sp)
  8473fc:	dec00d04 	addi	sp,sp,52
  847400:	f800283a 	ret
  847404:	04c03fc4 	movi	r19,255
  847408:	99c9803a 	cmpltu	r4,r19,r7
  84740c:	200890fa 	slli	r4,r4,3
  847410:	003fa406 	br	8472a4 <__alt_mem_epcs_flash_controller_0+0xff83e2a4>
  847414:	00803fc4 	movi	r2,255
  847418:	14c5803a 	cmpltu	r2,r2,r19
  84741c:	100490fa 	slli	r2,r2,3
  847420:	003fbc06 	br	847314 <__alt_mem_epcs_flash_controller_0+0xff83e314>
  847424:	00804034 	movhi	r2,256
  847428:	10bfffc4 	addi	r2,r2,-1
  84742c:	1180a636 	bltu	r2,r6,8476c8 <__umoddi3+0x57c>
  847430:	01000404 	movi	r4,16
  847434:	003f5c06 	br	8471a8 <__alt_mem_epcs_flash_controller_0+0xff83e1a8>
  847438:	3d0e983a 	sll	r7,r7,r20
  84743c:	34ead83a 	srl	r21,r6,r19
  847440:	8cc6d83a 	srl	r3,r17,r19
  847444:	8d10983a 	sll	r8,r17,r20
  847448:	3d6ab03a 	or	r21,r7,r21
  84744c:	a82cd43a 	srli	r22,r21,16
  847450:	84e2d83a 	srl	r17,r16,r19
  847454:	1809883a 	mov	r4,r3
  847458:	b00b883a 	mov	r5,r22
  84745c:	8a22b03a 	or	r17,r17,r8
  847460:	3524983a 	sll	r18,r6,r20
  847464:	dc400015 	stw	r17,0(sp)
  847468:	d8c00115 	stw	r3,4(sp)
  84746c:	08301900 	call	830190 <__umodsi3>
  847470:	d8c00117 	ldw	r3,4(sp)
  847474:	b00b883a 	mov	r5,r22
  847478:	1039883a 	mov	fp,r2
  84747c:	1809883a 	mov	r4,r3
  847480:	083012c0 	call	83012c <__udivsi3>
  847484:	adffffcc 	andi	r23,r21,65535
  847488:	100b883a 	mov	r5,r2
  84748c:	b809883a 	mov	r4,r23
  847490:	1023883a 	mov	r17,r2
  847494:	08301e80 	call	8301e8 <__mulsi3>
  847498:	d9400017 	ldw	r5,0(sp)
  84749c:	e008943a 	slli	r4,fp,16
  8474a0:	8520983a 	sll	r16,r16,r20
  8474a4:	2806d43a 	srli	r3,r5,16
  8474a8:	1906b03a 	or	r3,r3,r4
  8474ac:	1880042e 	bgeu	r3,r2,8474c0 <__umoddi3+0x374>
  8474b0:	1d47883a 	add	r3,r3,r21
  8474b4:	893fffc4 	addi	r4,r17,-1
  8474b8:	1d40892e 	bgeu	r3,r21,8476e0 <__umoddi3+0x594>
  8474bc:	2023883a 	mov	r17,r4
  8474c0:	18b9c83a 	sub	fp,r3,r2
  8474c4:	b00b883a 	mov	r5,r22
  8474c8:	e009883a 	mov	r4,fp
  8474cc:	08301900 	call	830190 <__umodsi3>
  8474d0:	b00b883a 	mov	r5,r22
  8474d4:	e009883a 	mov	r4,fp
  8474d8:	d8800215 	stw	r2,8(sp)
  8474dc:	083012c0 	call	83012c <__udivsi3>
  8474e0:	100b883a 	mov	r5,r2
  8474e4:	b809883a 	mov	r4,r23
  8474e8:	102d883a 	mov	r22,r2
  8474ec:	08301e80 	call	8301e8 <__mulsi3>
  8474f0:	d9800217 	ldw	r6,8(sp)
  8474f4:	d8c00017 	ldw	r3,0(sp)
  8474f8:	300c943a 	slli	r6,r6,16
  8474fc:	1a3fffcc 	andi	r8,r3,65535
  847500:	4190b03a 	or	r8,r8,r6
  847504:	4080042e 	bgeu	r8,r2,847518 <__umoddi3+0x3cc>
  847508:	4551883a 	add	r8,r8,r21
  84750c:	b0ffffc4 	addi	r3,r22,-1
  847510:	45406f2e 	bgeu	r8,r21,8476d0 <__umoddi3+0x584>
  847514:	182d883a 	mov	r22,r3
  847518:	880e943a 	slli	r7,r17,16
  84751c:	9006d43a 	srli	r3,r18,16
  847520:	91bfffcc 	andi	r6,r18,65535
  847524:	3dacb03a 	or	r22,r7,r22
  847528:	b02ed43a 	srli	r23,r22,16
  84752c:	b5bfffcc 	andi	r22,r22,65535
  847530:	300b883a 	mov	r5,r6
  847534:	b009883a 	mov	r4,r22
  847538:	40a3c83a 	sub	r17,r8,r2
  84753c:	d8c00115 	stw	r3,4(sp)
  847540:	d9800215 	stw	r6,8(sp)
  847544:	08301e80 	call	8301e8 <__mulsi3>
  847548:	d9800217 	ldw	r6,8(sp)
  84754c:	b809883a 	mov	r4,r23
  847550:	1039883a 	mov	fp,r2
  847554:	300b883a 	mov	r5,r6
  847558:	08301e80 	call	8301e8 <__mulsi3>
  84755c:	d8c00117 	ldw	r3,4(sp)
  847560:	b809883a 	mov	r4,r23
  847564:	d8800215 	stw	r2,8(sp)
  847568:	180b883a 	mov	r5,r3
  84756c:	08301e80 	call	8301e8 <__mulsi3>
  847570:	d8c00117 	ldw	r3,4(sp)
  847574:	b009883a 	mov	r4,r22
  847578:	102f883a 	mov	r23,r2
  84757c:	180b883a 	mov	r5,r3
  847580:	08301e80 	call	8301e8 <__mulsi3>
  847584:	d9800217 	ldw	r6,8(sp)
  847588:	e006d43a 	srli	r3,fp,16
  84758c:	1185883a 	add	r2,r2,r6
  847590:	1885883a 	add	r2,r3,r2
  847594:	1180022e 	bgeu	r2,r6,8475a0 <__umoddi3+0x454>
  847598:	00c00074 	movhi	r3,1
  84759c:	b8ef883a 	add	r23,r23,r3
  8475a0:	1006d43a 	srli	r3,r2,16
  8475a4:	1004943a 	slli	r2,r2,16
  8475a8:	e73fffcc 	andi	fp,fp,65535
  8475ac:	1dc7883a 	add	r3,r3,r23
  8475b0:	1739883a 	add	fp,r2,fp
  8475b4:	88c03a36 	bltu	r17,r3,8476a0 <__umoddi3+0x554>
  8475b8:	88c05126 	beq	r17,r3,847700 <__umoddi3+0x5b4>
  8475bc:	88c9c83a 	sub	r4,r17,r3
  8475c0:	e00f883a 	mov	r7,fp
  8475c4:	81cfc83a 	sub	r7,r16,r7
  8475c8:	81c7803a 	cmpltu	r3,r16,r7
  8475cc:	20c7c83a 	sub	r3,r4,r3
  8475d0:	1cc4983a 	sll	r2,r3,r19
  8475d4:	3d0ed83a 	srl	r7,r7,r20
  8475d8:	1d06d83a 	srl	r3,r3,r20
  8475dc:	11c4b03a 	or	r2,r2,r7
  8475e0:	003f7c06 	br	8473d4 <__alt_mem_epcs_flash_controller_0+0xff83e3d4>
  8475e4:	9ca6983a 	sll	r19,r19,r18
  8475e8:	88f8d83a 	srl	fp,r17,r3
  8475ec:	80c4d83a 	srl	r2,r16,r3
  8475f0:	982cd43a 	srli	r22,r19,16
  8475f4:	8ca2983a 	sll	r17,r17,r18
  8475f8:	e009883a 	mov	r4,fp
  8475fc:	b00b883a 	mov	r5,r22
  847600:	146ab03a 	or	r21,r2,r17
  847604:	08301900 	call	830190 <__umodsi3>
  847608:	b00b883a 	mov	r5,r22
  84760c:	e009883a 	mov	r4,fp
  847610:	1029883a 	mov	r20,r2
  847614:	9dffffcc 	andi	r23,r19,65535
  847618:	083012c0 	call	83012c <__udivsi3>
  84761c:	b809883a 	mov	r4,r23
  847620:	100b883a 	mov	r5,r2
  847624:	08301e80 	call	8301e8 <__mulsi3>
  847628:	a008943a 	slli	r4,r20,16
  84762c:	a806d43a 	srli	r3,r21,16
  847630:	84a8983a 	sll	r20,r16,r18
  847634:	1906b03a 	or	r3,r3,r4
  847638:	1880042e 	bgeu	r3,r2,84764c <__umoddi3+0x500>
  84763c:	1cc7883a 	add	r3,r3,r19
  847640:	1cc00236 	bltu	r3,r19,84764c <__umoddi3+0x500>
  847644:	1880012e 	bgeu	r3,r2,84764c <__umoddi3+0x500>
  847648:	1cc7883a 	add	r3,r3,r19
  84764c:	18a3c83a 	sub	r17,r3,r2
  847650:	b00b883a 	mov	r5,r22
  847654:	8809883a 	mov	r4,r17
  847658:	08301900 	call	830190 <__umodsi3>
  84765c:	b00b883a 	mov	r5,r22
  847660:	8809883a 	mov	r4,r17
  847664:	1021883a 	mov	r16,r2
  847668:	083012c0 	call	83012c <__udivsi3>
  84766c:	100b883a 	mov	r5,r2
  847670:	b809883a 	mov	r4,r23
  847674:	8020943a 	slli	r16,r16,16
  847678:	08301e80 	call	8301e8 <__mulsi3>
  84767c:	a8ffffcc 	andi	r3,r21,65535
  847680:	1c06b03a 	or	r3,r3,r16
  847684:	1880042e 	bgeu	r3,r2,847698 <__umoddi3+0x54c>
  847688:	1cc7883a 	add	r3,r3,r19
  84768c:	1cc00236 	bltu	r3,r19,847698 <__umoddi3+0x54c>
  847690:	1880012e 	bgeu	r3,r2,847698 <__umoddi3+0x54c>
  847694:	1cc7883a 	add	r3,r3,r19
  847698:	18a3c83a 	sub	r17,r3,r2
  84769c:	003f2906 	br	847344 <__alt_mem_epcs_flash_controller_0+0xff83e344>
  8476a0:	e48fc83a 	sub	r7,fp,r18
  8476a4:	1d49c83a 	sub	r4,r3,r21
  8476a8:	e1f9803a 	cmpltu	fp,fp,r7
  8476ac:	2739c83a 	sub	fp,r4,fp
  8476b0:	8f09c83a 	sub	r4,r17,fp
  8476b4:	003fc306 	br	8475c4 <__alt_mem_epcs_flash_controller_0+0xff83e5c4>
  8476b8:	01000604 	movi	r4,24
  8476bc:	003ef906 	br	8472a4 <__alt_mem_epcs_flash_controller_0+0xff83e2a4>
  8476c0:	00800604 	movi	r2,24
  8476c4:	003f1306 	br	847314 <__alt_mem_epcs_flash_controller_0+0xff83e314>
  8476c8:	01000604 	movi	r4,24
  8476cc:	003eb606 	br	8471a8 <__alt_mem_epcs_flash_controller_0+0xff83e1a8>
  8476d0:	40bf902e 	bgeu	r8,r2,847514 <__alt_mem_epcs_flash_controller_0+0xff83e514>
  8476d4:	b5bfff84 	addi	r22,r22,-2
  8476d8:	4551883a 	add	r8,r8,r21
  8476dc:	003f8e06 	br	847518 <__alt_mem_epcs_flash_controller_0+0xff83e518>
  8476e0:	18bf762e 	bgeu	r3,r2,8474bc <__alt_mem_epcs_flash_controller_0+0xff83e4bc>
  8476e4:	8c7fff84 	addi	r17,r17,-2
  8476e8:	1d47883a 	add	r3,r3,r21
  8476ec:	003f7406 	br	8474c0 <__alt_mem_epcs_flash_controller_0+0xff83e4c0>
  8476f0:	1cc7883a 	add	r3,r3,r19
  8476f4:	003ecd06 	br	84722c <__alt_mem_epcs_flash_controller_0+0xff83e22c>
  8476f8:	8005883a 	mov	r2,r16
  8476fc:	003ef806 	br	8472e0 <__alt_mem_epcs_flash_controller_0+0xff83e2e0>
  847700:	873fe736 	bltu	r16,fp,8476a0 <__alt_mem_epcs_flash_controller_0+0xff83e6a0>
  847704:	e00f883a 	mov	r7,fp
  847708:	0009883a 	mov	r4,zero
  84770c:	003fad06 	br	8475c4 <__alt_mem_epcs_flash_controller_0+0xff83e5c4>

00847710 <__eqsf2>:
  847710:	2006d5fa 	srli	r3,r4,23
  847714:	280cd5fa 	srli	r6,r5,23
  847718:	01c02034 	movhi	r7,128
  84771c:	39ffffc4 	addi	r7,r7,-1
  847720:	18c03fcc 	andi	r3,r3,255
  847724:	02003fc4 	movi	r8,255
  847728:	3904703a 	and	r2,r7,r4
  84772c:	31803fcc 	andi	r6,r6,255
  847730:	394e703a 	and	r7,r7,r5
  847734:	2008d7fa 	srli	r4,r4,31
  847738:	280ad7fa 	srli	r5,r5,31
  84773c:	1a000d26 	beq	r3,r8,847774 <__eqsf2+0x64>
  847740:	02003fc4 	movi	r8,255
  847744:	32000826 	beq	r6,r8,847768 <__eqsf2+0x58>
  847748:	19800226 	beq	r3,r6,847754 <__eqsf2+0x44>
  84774c:	00800044 	movi	r2,1
  847750:	f800283a 	ret
  847754:	11fffd1e 	bne	r2,r7,84774c <__alt_mem_epcs_flash_controller_0+0xff83e74c>
  847758:	21400926 	beq	r4,r5,847780 <__eqsf2+0x70>
  84775c:	183ffb1e 	bne	r3,zero,84774c <__alt_mem_epcs_flash_controller_0+0xff83e74c>
  847760:	1004c03a 	cmpne	r2,r2,zero
  847764:	f800283a 	ret
  847768:	383ff726 	beq	r7,zero,847748 <__alt_mem_epcs_flash_controller_0+0xff83e748>
  84776c:	00800044 	movi	r2,1
  847770:	f800283a 	ret
  847774:	103ff226 	beq	r2,zero,847740 <__alt_mem_epcs_flash_controller_0+0xff83e740>
  847778:	00800044 	movi	r2,1
  84777c:	f800283a 	ret
  847780:	0005883a 	mov	r2,zero
  847784:	f800283a 	ret

00847788 <__gesf2>:
  847788:	2004d5fa 	srli	r2,r4,23
  84778c:	2806d5fa 	srli	r3,r5,23
  847790:	01802034 	movhi	r6,128
  847794:	31bfffc4 	addi	r6,r6,-1
  847798:	10803fcc 	andi	r2,r2,255
  84779c:	01c03fc4 	movi	r7,255
  8477a0:	3110703a 	and	r8,r6,r4
  8477a4:	18c03fcc 	andi	r3,r3,255
  8477a8:	314c703a 	and	r6,r6,r5
  8477ac:	2008d7fa 	srli	r4,r4,31
  8477b0:	280ad7fa 	srli	r5,r5,31
  8477b4:	11c01926 	beq	r2,r7,84781c <__gesf2+0x94>
  8477b8:	01c03fc4 	movi	r7,255
  8477bc:	19c00f26 	beq	r3,r7,8477fc <__gesf2+0x74>
  8477c0:	1000061e 	bne	r2,zero,8477dc <__gesf2+0x54>
  8477c4:	400f003a 	cmpeq	r7,r8,zero
  8477c8:	1800071e 	bne	r3,zero,8477e8 <__gesf2+0x60>
  8477cc:	3000061e 	bne	r6,zero,8477e8 <__gesf2+0x60>
  8477d0:	0005883a 	mov	r2,zero
  8477d4:	40000e1e 	bne	r8,zero,847810 <__gesf2+0x88>
  8477d8:	f800283a 	ret
  8477dc:	18000a1e 	bne	r3,zero,847808 <__gesf2+0x80>
  8477e0:	30000b26 	beq	r6,zero,847810 <__gesf2+0x88>
  8477e4:	000f883a 	mov	r7,zero
  8477e8:	29403fcc 	andi	r5,r5,255
  8477ec:	38000726 	beq	r7,zero,84780c <__gesf2+0x84>
  8477f0:	28000826 	beq	r5,zero,847814 <__gesf2+0x8c>
  8477f4:	00800044 	movi	r2,1
  8477f8:	f800283a 	ret
  8477fc:	303ff026 	beq	r6,zero,8477c0 <__alt_mem_epcs_flash_controller_0+0xff83e7c0>
  847800:	00bfff84 	movi	r2,-2
  847804:	f800283a 	ret
  847808:	29403fcc 	andi	r5,r5,255
  84780c:	21400526 	beq	r4,r5,847824 <__gesf2+0x9c>
  847810:	203ff826 	beq	r4,zero,8477f4 <__alt_mem_epcs_flash_controller_0+0xff83e7f4>
  847814:	00bfffc4 	movi	r2,-1
  847818:	f800283a 	ret
  84781c:	403fe626 	beq	r8,zero,8477b8 <__alt_mem_epcs_flash_controller_0+0xff83e7b8>
  847820:	003ff706 	br	847800 <__alt_mem_epcs_flash_controller_0+0xff83e800>
  847824:	18bffa16 	blt	r3,r2,847810 <__alt_mem_epcs_flash_controller_0+0xff83e810>
  847828:	10c00216 	blt	r2,r3,847834 <__gesf2+0xac>
  84782c:	323ff836 	bltu	r6,r8,847810 <__alt_mem_epcs_flash_controller_0+0xff83e810>
  847830:	4180022e 	bgeu	r8,r6,84783c <__gesf2+0xb4>
  847834:	203fef1e 	bne	r4,zero,8477f4 <__alt_mem_epcs_flash_controller_0+0xff83e7f4>
  847838:	003ff606 	br	847814 <__alt_mem_epcs_flash_controller_0+0xff83e814>
  84783c:	0005883a 	mov	r2,zero
  847840:	f800283a 	ret

00847844 <__lesf2>:
  847844:	2004d5fa 	srli	r2,r4,23
  847848:	280cd5fa 	srli	r6,r5,23
  84784c:	00c02034 	movhi	r3,128
  847850:	18ffffc4 	addi	r3,r3,-1
  847854:	10803fcc 	andi	r2,r2,255
  847858:	01c03fc4 	movi	r7,255
  84785c:	1910703a 	and	r8,r3,r4
  847860:	31803fcc 	andi	r6,r6,255
  847864:	1946703a 	and	r3,r3,r5
  847868:	2008d7fa 	srli	r4,r4,31
  84786c:	280ad7fa 	srli	r5,r5,31
  847870:	11c01b26 	beq	r2,r7,8478e0 <__lesf2+0x9c>
  847874:	01c03fc4 	movi	r7,255
  847878:	31c01126 	beq	r6,r7,8478c0 <__lesf2+0x7c>
  84787c:	1000071e 	bne	r2,zero,84789c <__lesf2+0x58>
  847880:	400f003a 	cmpeq	r7,r8,zero
  847884:	21003fcc 	andi	r4,r4,255
  847888:	3000081e 	bne	r6,zero,8478ac <__lesf2+0x68>
  84788c:	1800071e 	bne	r3,zero,8478ac <__lesf2+0x68>
  847890:	0005883a 	mov	r2,zero
  847894:	40000f1e 	bne	r8,zero,8478d4 <__lesf2+0x90>
  847898:	f800283a 	ret
  84789c:	21003fcc 	andi	r4,r4,255
  8478a0:	30000a1e 	bne	r6,zero,8478cc <__lesf2+0x88>
  8478a4:	18000b26 	beq	r3,zero,8478d4 <__lesf2+0x90>
  8478a8:	000f883a 	mov	r7,zero
  8478ac:	29403fcc 	andi	r5,r5,255
  8478b0:	38000726 	beq	r7,zero,8478d0 <__lesf2+0x8c>
  8478b4:	28000826 	beq	r5,zero,8478d8 <__lesf2+0x94>
  8478b8:	00800044 	movi	r2,1
  8478bc:	f800283a 	ret
  8478c0:	183fee26 	beq	r3,zero,84787c <__alt_mem_epcs_flash_controller_0+0xff83e87c>
  8478c4:	00800084 	movi	r2,2
  8478c8:	f800283a 	ret
  8478cc:	29403fcc 	andi	r5,r5,255
  8478d0:	21400626 	beq	r4,r5,8478ec <__lesf2+0xa8>
  8478d4:	203ff826 	beq	r4,zero,8478b8 <__alt_mem_epcs_flash_controller_0+0xff83e8b8>
  8478d8:	00bfffc4 	movi	r2,-1
  8478dc:	f800283a 	ret
  8478e0:	403fe426 	beq	r8,zero,847874 <__alt_mem_epcs_flash_controller_0+0xff83e874>
  8478e4:	00800084 	movi	r2,2
  8478e8:	f800283a 	ret
  8478ec:	30bff916 	blt	r6,r2,8478d4 <__alt_mem_epcs_flash_controller_0+0xff83e8d4>
  8478f0:	11800216 	blt	r2,r6,8478fc <__lesf2+0xb8>
  8478f4:	1a3ff736 	bltu	r3,r8,8478d4 <__alt_mem_epcs_flash_controller_0+0xff83e8d4>
  8478f8:	40c0022e 	bgeu	r8,r3,847904 <__lesf2+0xc0>
  8478fc:	203fee1e 	bne	r4,zero,8478b8 <__alt_mem_epcs_flash_controller_0+0xff83e8b8>
  847900:	003ff506 	br	8478d8 <__alt_mem_epcs_flash_controller_0+0xff83e8d8>
  847904:	0005883a 	mov	r2,zero
  847908:	f800283a 	ret

0084790c <__adddf3>:
  84790c:	02c00434 	movhi	r11,16
  847910:	5affffc4 	addi	r11,r11,-1
  847914:	2806d7fa 	srli	r3,r5,31
  847918:	2ad4703a 	and	r10,r5,r11
  84791c:	3ad2703a 	and	r9,r7,r11
  847920:	3804d53a 	srli	r2,r7,20
  847924:	3018d77a 	srli	r12,r6,29
  847928:	280ad53a 	srli	r5,r5,20
  84792c:	501490fa 	slli	r10,r10,3
  847930:	2010d77a 	srli	r8,r4,29
  847934:	481290fa 	slli	r9,r9,3
  847938:	380ed7fa 	srli	r7,r7,31
  84793c:	defffb04 	addi	sp,sp,-20
  847940:	dc800215 	stw	r18,8(sp)
  847944:	dc400115 	stw	r17,4(sp)
  847948:	dc000015 	stw	r16,0(sp)
  84794c:	dfc00415 	stw	ra,16(sp)
  847950:	dcc00315 	stw	r19,12(sp)
  847954:	1c803fcc 	andi	r18,r3,255
  847958:	2c01ffcc 	andi	r16,r5,2047
  84795c:	5210b03a 	or	r8,r10,r8
  847960:	202290fa 	slli	r17,r4,3
  847964:	1081ffcc 	andi	r2,r2,2047
  847968:	4b12b03a 	or	r9,r9,r12
  84796c:	300c90fa 	slli	r6,r6,3
  847970:	91c07526 	beq	r18,r7,847b48 <__adddf3+0x23c>
  847974:	8087c83a 	sub	r3,r16,r2
  847978:	00c0ab0e 	bge	zero,r3,847c28 <__adddf3+0x31c>
  84797c:	10002a1e 	bne	r2,zero,847a28 <__adddf3+0x11c>
  847980:	4984b03a 	or	r2,r9,r6
  847984:	1000961e 	bne	r2,zero,847be0 <__adddf3+0x2d4>
  847988:	888001cc 	andi	r2,r17,7
  84798c:	10000726 	beq	r2,zero,8479ac <__adddf3+0xa0>
  847990:	888003cc 	andi	r2,r17,15
  847994:	00c00104 	movi	r3,4
  847998:	10c00426 	beq	r2,r3,8479ac <__adddf3+0xa0>
  84799c:	88c7883a 	add	r3,r17,r3
  8479a0:	1c63803a 	cmpltu	r17,r3,r17
  8479a4:	4451883a 	add	r8,r8,r17
  8479a8:	1823883a 	mov	r17,r3
  8479ac:	4080202c 	andhi	r2,r8,128
  8479b0:	10005926 	beq	r2,zero,847b18 <__adddf3+0x20c>
  8479b4:	84000044 	addi	r16,r16,1
  8479b8:	0081ffc4 	movi	r2,2047
  8479bc:	8080ba26 	beq	r16,r2,847ca8 <__adddf3+0x39c>
  8479c0:	00bfe034 	movhi	r2,65408
  8479c4:	10bfffc4 	addi	r2,r2,-1
  8479c8:	4090703a 	and	r8,r8,r2
  8479cc:	4004977a 	slli	r2,r8,29
  8479d0:	4010927a 	slli	r8,r8,9
  8479d4:	8822d0fa 	srli	r17,r17,3
  8479d8:	8401ffcc 	andi	r16,r16,2047
  8479dc:	4010d33a 	srli	r8,r8,12
  8479e0:	9007883a 	mov	r3,r18
  8479e4:	1444b03a 	or	r2,r2,r17
  8479e8:	8401ffcc 	andi	r16,r16,2047
  8479ec:	8020953a 	slli	r16,r16,20
  8479f0:	18c03fcc 	andi	r3,r3,255
  8479f4:	01000434 	movhi	r4,16
  8479f8:	213fffc4 	addi	r4,r4,-1
  8479fc:	180697fa 	slli	r3,r3,31
  847a00:	4110703a 	and	r8,r8,r4
  847a04:	4410b03a 	or	r8,r8,r16
  847a08:	40c6b03a 	or	r3,r8,r3
  847a0c:	dfc00417 	ldw	ra,16(sp)
  847a10:	dcc00317 	ldw	r19,12(sp)
  847a14:	dc800217 	ldw	r18,8(sp)
  847a18:	dc400117 	ldw	r17,4(sp)
  847a1c:	dc000017 	ldw	r16,0(sp)
  847a20:	dec00504 	addi	sp,sp,20
  847a24:	f800283a 	ret
  847a28:	0081ffc4 	movi	r2,2047
  847a2c:	80bfd626 	beq	r16,r2,847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  847a30:	4a402034 	orhi	r9,r9,128
  847a34:	00800e04 	movi	r2,56
  847a38:	10c09f16 	blt	r2,r3,847cb8 <__adddf3+0x3ac>
  847a3c:	008007c4 	movi	r2,31
  847a40:	10c0c216 	blt	r2,r3,847d4c <__adddf3+0x440>
  847a44:	00800804 	movi	r2,32
  847a48:	10c5c83a 	sub	r2,r2,r3
  847a4c:	488a983a 	sll	r5,r9,r2
  847a50:	30c8d83a 	srl	r4,r6,r3
  847a54:	3084983a 	sll	r2,r6,r2
  847a58:	48c6d83a 	srl	r3,r9,r3
  847a5c:	290cb03a 	or	r6,r5,r4
  847a60:	1004c03a 	cmpne	r2,r2,zero
  847a64:	308cb03a 	or	r6,r6,r2
  847a68:	898dc83a 	sub	r6,r17,r6
  847a6c:	89a3803a 	cmpltu	r17,r17,r6
  847a70:	40d1c83a 	sub	r8,r8,r3
  847a74:	4451c83a 	sub	r8,r8,r17
  847a78:	3023883a 	mov	r17,r6
  847a7c:	4080202c 	andhi	r2,r8,128
  847a80:	10002326 	beq	r2,zero,847b10 <__adddf3+0x204>
  847a84:	04c02034 	movhi	r19,128
  847a88:	9cffffc4 	addi	r19,r19,-1
  847a8c:	44e6703a 	and	r19,r8,r19
  847a90:	98007626 	beq	r19,zero,847c6c <__adddf3+0x360>
  847a94:	9809883a 	mov	r4,r19
  847a98:	0831c3c0 	call	831c3c <__clzsi2>
  847a9c:	10fffe04 	addi	r3,r2,-8
  847aa0:	010007c4 	movi	r4,31
  847aa4:	20c07716 	blt	r4,r3,847c84 <__adddf3+0x378>
  847aa8:	00800804 	movi	r2,32
  847aac:	10c5c83a 	sub	r2,r2,r3
  847ab0:	8884d83a 	srl	r2,r17,r2
  847ab4:	98d0983a 	sll	r8,r19,r3
  847ab8:	88e2983a 	sll	r17,r17,r3
  847abc:	1204b03a 	or	r2,r2,r8
  847ac0:	1c007416 	blt	r3,r16,847c94 <__adddf3+0x388>
  847ac4:	1c21c83a 	sub	r16,r3,r16
  847ac8:	82000044 	addi	r8,r16,1
  847acc:	00c007c4 	movi	r3,31
  847ad0:	1a009116 	blt	r3,r8,847d18 <__adddf3+0x40c>
  847ad4:	00c00804 	movi	r3,32
  847ad8:	1a07c83a 	sub	r3,r3,r8
  847adc:	8a08d83a 	srl	r4,r17,r8
  847ae0:	88e2983a 	sll	r17,r17,r3
  847ae4:	10c6983a 	sll	r3,r2,r3
  847ae8:	1210d83a 	srl	r8,r2,r8
  847aec:	8804c03a 	cmpne	r2,r17,zero
  847af0:	1906b03a 	or	r3,r3,r4
  847af4:	18a2b03a 	or	r17,r3,r2
  847af8:	0021883a 	mov	r16,zero
  847afc:	003fa206 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  847b00:	1890b03a 	or	r8,r3,r2
  847b04:	40017d26 	beq	r8,zero,8480fc <__adddf3+0x7f0>
  847b08:	1011883a 	mov	r8,r2
  847b0c:	1823883a 	mov	r17,r3
  847b10:	888001cc 	andi	r2,r17,7
  847b14:	103f9e1e 	bne	r2,zero,847990 <__alt_mem_epcs_flash_controller_0+0xff83e990>
  847b18:	4004977a 	slli	r2,r8,29
  847b1c:	8822d0fa 	srli	r17,r17,3
  847b20:	4010d0fa 	srli	r8,r8,3
  847b24:	9007883a 	mov	r3,r18
  847b28:	1444b03a 	or	r2,r2,r17
  847b2c:	0101ffc4 	movi	r4,2047
  847b30:	81002426 	beq	r16,r4,847bc4 <__adddf3+0x2b8>
  847b34:	8120703a 	and	r16,r16,r4
  847b38:	01000434 	movhi	r4,16
  847b3c:	213fffc4 	addi	r4,r4,-1
  847b40:	4110703a 	and	r8,r8,r4
  847b44:	003fa806 	br	8479e8 <__alt_mem_epcs_flash_controller_0+0xff83e9e8>
  847b48:	8089c83a 	sub	r4,r16,r2
  847b4c:	01005e0e 	bge	zero,r4,847cc8 <__adddf3+0x3bc>
  847b50:	10002b26 	beq	r2,zero,847c00 <__adddf3+0x2f4>
  847b54:	0081ffc4 	movi	r2,2047
  847b58:	80bf8b26 	beq	r16,r2,847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  847b5c:	4a402034 	orhi	r9,r9,128
  847b60:	00800e04 	movi	r2,56
  847b64:	1100a40e 	bge	r2,r4,847df8 <__adddf3+0x4ec>
  847b68:	498cb03a 	or	r6,r9,r6
  847b6c:	300ac03a 	cmpne	r5,r6,zero
  847b70:	0013883a 	mov	r9,zero
  847b74:	2c4b883a 	add	r5,r5,r17
  847b78:	2c63803a 	cmpltu	r17,r5,r17
  847b7c:	4a11883a 	add	r8,r9,r8
  847b80:	8a11883a 	add	r8,r17,r8
  847b84:	2823883a 	mov	r17,r5
  847b88:	4080202c 	andhi	r2,r8,128
  847b8c:	103fe026 	beq	r2,zero,847b10 <__alt_mem_epcs_flash_controller_0+0xff83eb10>
  847b90:	84000044 	addi	r16,r16,1
  847b94:	0081ffc4 	movi	r2,2047
  847b98:	8080d226 	beq	r16,r2,847ee4 <__adddf3+0x5d8>
  847b9c:	00bfe034 	movhi	r2,65408
  847ba0:	10bfffc4 	addi	r2,r2,-1
  847ba4:	4090703a 	and	r8,r8,r2
  847ba8:	880ad07a 	srli	r5,r17,1
  847bac:	400897fa 	slli	r4,r8,31
  847bb0:	88c0004c 	andi	r3,r17,1
  847bb4:	28e2b03a 	or	r17,r5,r3
  847bb8:	4010d07a 	srli	r8,r8,1
  847bbc:	2462b03a 	or	r17,r4,r17
  847bc0:	003f7106 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  847bc4:	4088b03a 	or	r4,r8,r2
  847bc8:	20014526 	beq	r4,zero,8480e0 <__adddf3+0x7d4>
  847bcc:	01000434 	movhi	r4,16
  847bd0:	42000234 	orhi	r8,r8,8
  847bd4:	213fffc4 	addi	r4,r4,-1
  847bd8:	4110703a 	and	r8,r8,r4
  847bdc:	003f8206 	br	8479e8 <__alt_mem_epcs_flash_controller_0+0xff83e9e8>
  847be0:	18ffffc4 	addi	r3,r3,-1
  847be4:	1800491e 	bne	r3,zero,847d0c <__adddf3+0x400>
  847be8:	898bc83a 	sub	r5,r17,r6
  847bec:	8963803a 	cmpltu	r17,r17,r5
  847bf0:	4251c83a 	sub	r8,r8,r9
  847bf4:	4451c83a 	sub	r8,r8,r17
  847bf8:	2823883a 	mov	r17,r5
  847bfc:	003f9f06 	br	847a7c <__alt_mem_epcs_flash_controller_0+0xff83ea7c>
  847c00:	4984b03a 	or	r2,r9,r6
  847c04:	103f6026 	beq	r2,zero,847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  847c08:	213fffc4 	addi	r4,r4,-1
  847c0c:	2000931e 	bne	r4,zero,847e5c <__adddf3+0x550>
  847c10:	898d883a 	add	r6,r17,r6
  847c14:	3463803a 	cmpltu	r17,r6,r17
  847c18:	4251883a 	add	r8,r8,r9
  847c1c:	8a11883a 	add	r8,r17,r8
  847c20:	3023883a 	mov	r17,r6
  847c24:	003fd806 	br	847b88 <__alt_mem_epcs_flash_controller_0+0xff83eb88>
  847c28:	1800541e 	bne	r3,zero,847d7c <__adddf3+0x470>
  847c2c:	80800044 	addi	r2,r16,1
  847c30:	1081ffcc 	andi	r2,r2,2047
  847c34:	00c00044 	movi	r3,1
  847c38:	1880a00e 	bge	r3,r2,847ebc <__adddf3+0x5b0>
  847c3c:	8989c83a 	sub	r4,r17,r6
  847c40:	8905803a 	cmpltu	r2,r17,r4
  847c44:	4267c83a 	sub	r19,r8,r9
  847c48:	98a7c83a 	sub	r19,r19,r2
  847c4c:	9880202c 	andhi	r2,r19,128
  847c50:	10006326 	beq	r2,zero,847de0 <__adddf3+0x4d4>
  847c54:	3463c83a 	sub	r17,r6,r17
  847c58:	4a07c83a 	sub	r3,r9,r8
  847c5c:	344d803a 	cmpltu	r6,r6,r17
  847c60:	19a7c83a 	sub	r19,r3,r6
  847c64:	3825883a 	mov	r18,r7
  847c68:	983f8a1e 	bne	r19,zero,847a94 <__alt_mem_epcs_flash_controller_0+0xff83ea94>
  847c6c:	8809883a 	mov	r4,r17
  847c70:	0831c3c0 	call	831c3c <__clzsi2>
  847c74:	10800804 	addi	r2,r2,32
  847c78:	10fffe04 	addi	r3,r2,-8
  847c7c:	010007c4 	movi	r4,31
  847c80:	20ff890e 	bge	r4,r3,847aa8 <__alt_mem_epcs_flash_controller_0+0xff83eaa8>
  847c84:	10bff604 	addi	r2,r2,-40
  847c88:	8884983a 	sll	r2,r17,r2
  847c8c:	0023883a 	mov	r17,zero
  847c90:	1c3f8c0e 	bge	r3,r16,847ac4 <__alt_mem_epcs_flash_controller_0+0xff83eac4>
  847c94:	023fe034 	movhi	r8,65408
  847c98:	423fffc4 	addi	r8,r8,-1
  847c9c:	80e1c83a 	sub	r16,r16,r3
  847ca0:	1210703a 	and	r8,r2,r8
  847ca4:	003f3806 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  847ca8:	9007883a 	mov	r3,r18
  847cac:	0011883a 	mov	r8,zero
  847cb0:	0005883a 	mov	r2,zero
  847cb4:	003f4c06 	br	8479e8 <__alt_mem_epcs_flash_controller_0+0xff83e9e8>
  847cb8:	498cb03a 	or	r6,r9,r6
  847cbc:	300cc03a 	cmpne	r6,r6,zero
  847cc0:	0007883a 	mov	r3,zero
  847cc4:	003f6806 	br	847a68 <__alt_mem_epcs_flash_controller_0+0xff83ea68>
  847cc8:	20009c1e 	bne	r4,zero,847f3c <__adddf3+0x630>
  847ccc:	80800044 	addi	r2,r16,1
  847cd0:	1141ffcc 	andi	r5,r2,2047
  847cd4:	01000044 	movi	r4,1
  847cd8:	2140670e 	bge	r4,r5,847e78 <__adddf3+0x56c>
  847cdc:	0101ffc4 	movi	r4,2047
  847ce0:	11007f26 	beq	r2,r4,847ee0 <__adddf3+0x5d4>
  847ce4:	898d883a 	add	r6,r17,r6
  847ce8:	4247883a 	add	r3,r8,r9
  847cec:	3451803a 	cmpltu	r8,r6,r17
  847cf0:	40d1883a 	add	r8,r8,r3
  847cf4:	402297fa 	slli	r17,r8,31
  847cf8:	300cd07a 	srli	r6,r6,1
  847cfc:	4010d07a 	srli	r8,r8,1
  847d00:	1021883a 	mov	r16,r2
  847d04:	89a2b03a 	or	r17,r17,r6
  847d08:	003f1f06 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  847d0c:	0081ffc4 	movi	r2,2047
  847d10:	80bf481e 	bne	r16,r2,847a34 <__alt_mem_epcs_flash_controller_0+0xff83ea34>
  847d14:	003f1c06 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  847d18:	843ff844 	addi	r16,r16,-31
  847d1c:	01000804 	movi	r4,32
  847d20:	1406d83a 	srl	r3,r2,r16
  847d24:	41005026 	beq	r8,r4,847e68 <__adddf3+0x55c>
  847d28:	01001004 	movi	r4,64
  847d2c:	2211c83a 	sub	r8,r4,r8
  847d30:	1204983a 	sll	r2,r2,r8
  847d34:	88a2b03a 	or	r17,r17,r2
  847d38:	8822c03a 	cmpne	r17,r17,zero
  847d3c:	1c62b03a 	or	r17,r3,r17
  847d40:	0011883a 	mov	r8,zero
  847d44:	0021883a 	mov	r16,zero
  847d48:	003f7106 	br	847b10 <__alt_mem_epcs_flash_controller_0+0xff83eb10>
  847d4c:	193ff804 	addi	r4,r3,-32
  847d50:	00800804 	movi	r2,32
  847d54:	4908d83a 	srl	r4,r9,r4
  847d58:	18804526 	beq	r3,r2,847e70 <__adddf3+0x564>
  847d5c:	00801004 	movi	r2,64
  847d60:	10c5c83a 	sub	r2,r2,r3
  847d64:	4886983a 	sll	r3,r9,r2
  847d68:	198cb03a 	or	r6,r3,r6
  847d6c:	300cc03a 	cmpne	r6,r6,zero
  847d70:	218cb03a 	or	r6,r4,r6
  847d74:	0007883a 	mov	r3,zero
  847d78:	003f3b06 	br	847a68 <__alt_mem_epcs_flash_controller_0+0xff83ea68>
  847d7c:	80002a26 	beq	r16,zero,847e28 <__adddf3+0x51c>
  847d80:	0101ffc4 	movi	r4,2047
  847d84:	11006826 	beq	r2,r4,847f28 <__adddf3+0x61c>
  847d88:	00c7c83a 	sub	r3,zero,r3
  847d8c:	42002034 	orhi	r8,r8,128
  847d90:	01000e04 	movi	r4,56
  847d94:	20c07c16 	blt	r4,r3,847f88 <__adddf3+0x67c>
  847d98:	010007c4 	movi	r4,31
  847d9c:	20c0da16 	blt	r4,r3,848108 <__adddf3+0x7fc>
  847da0:	01000804 	movi	r4,32
  847da4:	20c9c83a 	sub	r4,r4,r3
  847da8:	4114983a 	sll	r10,r8,r4
  847dac:	88cad83a 	srl	r5,r17,r3
  847db0:	8908983a 	sll	r4,r17,r4
  847db4:	40c6d83a 	srl	r3,r8,r3
  847db8:	5162b03a 	or	r17,r10,r5
  847dbc:	2008c03a 	cmpne	r4,r4,zero
  847dc0:	8922b03a 	or	r17,r17,r4
  847dc4:	3463c83a 	sub	r17,r6,r17
  847dc8:	48c7c83a 	sub	r3,r9,r3
  847dcc:	344d803a 	cmpltu	r6,r6,r17
  847dd0:	1991c83a 	sub	r8,r3,r6
  847dd4:	1021883a 	mov	r16,r2
  847dd8:	3825883a 	mov	r18,r7
  847ddc:	003f2706 	br	847a7c <__alt_mem_epcs_flash_controller_0+0xff83ea7c>
  847de0:	24d0b03a 	or	r8,r4,r19
  847de4:	40001b1e 	bne	r8,zero,847e54 <__adddf3+0x548>
  847de8:	0005883a 	mov	r2,zero
  847dec:	0007883a 	mov	r3,zero
  847df0:	0021883a 	mov	r16,zero
  847df4:	003f4d06 	br	847b2c <__alt_mem_epcs_flash_controller_0+0xff83eb2c>
  847df8:	008007c4 	movi	r2,31
  847dfc:	11003c16 	blt	r2,r4,847ef0 <__adddf3+0x5e4>
  847e00:	00800804 	movi	r2,32
  847e04:	1105c83a 	sub	r2,r2,r4
  847e08:	488e983a 	sll	r7,r9,r2
  847e0c:	310ad83a 	srl	r5,r6,r4
  847e10:	3084983a 	sll	r2,r6,r2
  847e14:	4912d83a 	srl	r9,r9,r4
  847e18:	394ab03a 	or	r5,r7,r5
  847e1c:	1004c03a 	cmpne	r2,r2,zero
  847e20:	288ab03a 	or	r5,r5,r2
  847e24:	003f5306 	br	847b74 <__alt_mem_epcs_flash_controller_0+0xff83eb74>
  847e28:	4448b03a 	or	r4,r8,r17
  847e2c:	20003e26 	beq	r4,zero,847f28 <__adddf3+0x61c>
  847e30:	00c6303a 	nor	r3,zero,r3
  847e34:	18003a1e 	bne	r3,zero,847f20 <__adddf3+0x614>
  847e38:	3463c83a 	sub	r17,r6,r17
  847e3c:	4a07c83a 	sub	r3,r9,r8
  847e40:	344d803a 	cmpltu	r6,r6,r17
  847e44:	1991c83a 	sub	r8,r3,r6
  847e48:	1021883a 	mov	r16,r2
  847e4c:	3825883a 	mov	r18,r7
  847e50:	003f0a06 	br	847a7c <__alt_mem_epcs_flash_controller_0+0xff83ea7c>
  847e54:	2023883a 	mov	r17,r4
  847e58:	003f0d06 	br	847a90 <__alt_mem_epcs_flash_controller_0+0xff83ea90>
  847e5c:	0081ffc4 	movi	r2,2047
  847e60:	80bf3f1e 	bne	r16,r2,847b60 <__alt_mem_epcs_flash_controller_0+0xff83eb60>
  847e64:	003ec806 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  847e68:	0005883a 	mov	r2,zero
  847e6c:	003fb106 	br	847d34 <__alt_mem_epcs_flash_controller_0+0xff83ed34>
  847e70:	0007883a 	mov	r3,zero
  847e74:	003fbc06 	br	847d68 <__alt_mem_epcs_flash_controller_0+0xff83ed68>
  847e78:	4444b03a 	or	r2,r8,r17
  847e7c:	8000871e 	bne	r16,zero,84809c <__adddf3+0x790>
  847e80:	1000ba26 	beq	r2,zero,84816c <__adddf3+0x860>
  847e84:	4984b03a 	or	r2,r9,r6
  847e88:	103ebf26 	beq	r2,zero,847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  847e8c:	8985883a 	add	r2,r17,r6
  847e90:	4247883a 	add	r3,r8,r9
  847e94:	1451803a 	cmpltu	r8,r2,r17
  847e98:	40d1883a 	add	r8,r8,r3
  847e9c:	40c0202c 	andhi	r3,r8,128
  847ea0:	1023883a 	mov	r17,r2
  847ea4:	183f1a26 	beq	r3,zero,847b10 <__alt_mem_epcs_flash_controller_0+0xff83eb10>
  847ea8:	00bfe034 	movhi	r2,65408
  847eac:	10bfffc4 	addi	r2,r2,-1
  847eb0:	2021883a 	mov	r16,r4
  847eb4:	4090703a 	and	r8,r8,r2
  847eb8:	003eb306 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  847ebc:	4444b03a 	or	r2,r8,r17
  847ec0:	8000291e 	bne	r16,zero,847f68 <__adddf3+0x65c>
  847ec4:	10004b1e 	bne	r2,zero,847ff4 <__adddf3+0x6e8>
  847ec8:	4990b03a 	or	r8,r9,r6
  847ecc:	40008b26 	beq	r8,zero,8480fc <__adddf3+0x7f0>
  847ed0:	4811883a 	mov	r8,r9
  847ed4:	3023883a 	mov	r17,r6
  847ed8:	3825883a 	mov	r18,r7
  847edc:	003eaa06 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  847ee0:	1021883a 	mov	r16,r2
  847ee4:	0011883a 	mov	r8,zero
  847ee8:	0005883a 	mov	r2,zero
  847eec:	003f0f06 	br	847b2c <__alt_mem_epcs_flash_controller_0+0xff83eb2c>
  847ef0:	217ff804 	addi	r5,r4,-32
  847ef4:	00800804 	movi	r2,32
  847ef8:	494ad83a 	srl	r5,r9,r5
  847efc:	20807d26 	beq	r4,r2,8480f4 <__adddf3+0x7e8>
  847f00:	00801004 	movi	r2,64
  847f04:	1109c83a 	sub	r4,r2,r4
  847f08:	4912983a 	sll	r9,r9,r4
  847f0c:	498cb03a 	or	r6,r9,r6
  847f10:	300cc03a 	cmpne	r6,r6,zero
  847f14:	298ab03a 	or	r5,r5,r6
  847f18:	0013883a 	mov	r9,zero
  847f1c:	003f1506 	br	847b74 <__alt_mem_epcs_flash_controller_0+0xff83eb74>
  847f20:	0101ffc4 	movi	r4,2047
  847f24:	113f9a1e 	bne	r2,r4,847d90 <__alt_mem_epcs_flash_controller_0+0xff83ed90>
  847f28:	4811883a 	mov	r8,r9
  847f2c:	3023883a 	mov	r17,r6
  847f30:	1021883a 	mov	r16,r2
  847f34:	3825883a 	mov	r18,r7
  847f38:	003e9306 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  847f3c:	8000161e 	bne	r16,zero,847f98 <__adddf3+0x68c>
  847f40:	444ab03a 	or	r5,r8,r17
  847f44:	28005126 	beq	r5,zero,84808c <__adddf3+0x780>
  847f48:	0108303a 	nor	r4,zero,r4
  847f4c:	20004d1e 	bne	r4,zero,848084 <__adddf3+0x778>
  847f50:	89a3883a 	add	r17,r17,r6
  847f54:	4253883a 	add	r9,r8,r9
  847f58:	898d803a 	cmpltu	r6,r17,r6
  847f5c:	3251883a 	add	r8,r6,r9
  847f60:	1021883a 	mov	r16,r2
  847f64:	003f0806 	br	847b88 <__alt_mem_epcs_flash_controller_0+0xff83eb88>
  847f68:	1000301e 	bne	r2,zero,84802c <__adddf3+0x720>
  847f6c:	4984b03a 	or	r2,r9,r6
  847f70:	10007126 	beq	r2,zero,848138 <__adddf3+0x82c>
  847f74:	4811883a 	mov	r8,r9
  847f78:	3023883a 	mov	r17,r6
  847f7c:	3825883a 	mov	r18,r7
  847f80:	0401ffc4 	movi	r16,2047
  847f84:	003e8006 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  847f88:	4462b03a 	or	r17,r8,r17
  847f8c:	8822c03a 	cmpne	r17,r17,zero
  847f90:	0007883a 	mov	r3,zero
  847f94:	003f8b06 	br	847dc4 <__alt_mem_epcs_flash_controller_0+0xff83edc4>
  847f98:	0141ffc4 	movi	r5,2047
  847f9c:	11403b26 	beq	r2,r5,84808c <__adddf3+0x780>
  847fa0:	0109c83a 	sub	r4,zero,r4
  847fa4:	42002034 	orhi	r8,r8,128
  847fa8:	01400e04 	movi	r5,56
  847fac:	29006716 	blt	r5,r4,84814c <__adddf3+0x840>
  847fb0:	014007c4 	movi	r5,31
  847fb4:	29007016 	blt	r5,r4,848178 <__adddf3+0x86c>
  847fb8:	01400804 	movi	r5,32
  847fbc:	290bc83a 	sub	r5,r5,r4
  847fc0:	4154983a 	sll	r10,r8,r5
  847fc4:	890ed83a 	srl	r7,r17,r4
  847fc8:	894a983a 	sll	r5,r17,r5
  847fcc:	4108d83a 	srl	r4,r8,r4
  847fd0:	51e2b03a 	or	r17,r10,r7
  847fd4:	280ac03a 	cmpne	r5,r5,zero
  847fd8:	8962b03a 	or	r17,r17,r5
  847fdc:	89a3883a 	add	r17,r17,r6
  847fe0:	2253883a 	add	r9,r4,r9
  847fe4:	898d803a 	cmpltu	r6,r17,r6
  847fe8:	3251883a 	add	r8,r6,r9
  847fec:	1021883a 	mov	r16,r2
  847ff0:	003ee506 	br	847b88 <__alt_mem_epcs_flash_controller_0+0xff83eb88>
  847ff4:	4984b03a 	or	r2,r9,r6
  847ff8:	103e6326 	beq	r2,zero,847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  847ffc:	8987c83a 	sub	r3,r17,r6
  848000:	88c9803a 	cmpltu	r4,r17,r3
  848004:	4245c83a 	sub	r2,r8,r9
  848008:	1105c83a 	sub	r2,r2,r4
  84800c:	1100202c 	andhi	r4,r2,128
  848010:	203ebb26 	beq	r4,zero,847b00 <__alt_mem_epcs_flash_controller_0+0xff83eb00>
  848014:	3463c83a 	sub	r17,r6,r17
  848018:	4a07c83a 	sub	r3,r9,r8
  84801c:	344d803a 	cmpltu	r6,r6,r17
  848020:	1991c83a 	sub	r8,r3,r6
  848024:	3825883a 	mov	r18,r7
  848028:	003e5706 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  84802c:	4984b03a 	or	r2,r9,r6
  848030:	10002e26 	beq	r2,zero,8480ec <__adddf3+0x7e0>
  848034:	4004d0fa 	srli	r2,r8,3
  848038:	8822d0fa 	srli	r17,r17,3
  84803c:	4010977a 	slli	r8,r8,29
  848040:	10c0022c 	andhi	r3,r2,8
  848044:	4462b03a 	or	r17,r8,r17
  848048:	18000826 	beq	r3,zero,84806c <__adddf3+0x760>
  84804c:	4808d0fa 	srli	r4,r9,3
  848050:	20c0022c 	andhi	r3,r4,8
  848054:	1800051e 	bne	r3,zero,84806c <__adddf3+0x760>
  848058:	300cd0fa 	srli	r6,r6,3
  84805c:	4806977a 	slli	r3,r9,29
  848060:	2005883a 	mov	r2,r4
  848064:	3825883a 	mov	r18,r7
  848068:	19a2b03a 	or	r17,r3,r6
  84806c:	8810d77a 	srli	r8,r17,29
  848070:	100490fa 	slli	r2,r2,3
  848074:	882290fa 	slli	r17,r17,3
  848078:	0401ffc4 	movi	r16,2047
  84807c:	4090b03a 	or	r8,r8,r2
  848080:	003e4106 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  848084:	0141ffc4 	movi	r5,2047
  848088:	117fc71e 	bne	r2,r5,847fa8 <__alt_mem_epcs_flash_controller_0+0xff83efa8>
  84808c:	4811883a 	mov	r8,r9
  848090:	3023883a 	mov	r17,r6
  848094:	1021883a 	mov	r16,r2
  848098:	003e3b06 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  84809c:	10002f26 	beq	r2,zero,84815c <__adddf3+0x850>
  8480a0:	4984b03a 	or	r2,r9,r6
  8480a4:	10001126 	beq	r2,zero,8480ec <__adddf3+0x7e0>
  8480a8:	4004d0fa 	srli	r2,r8,3
  8480ac:	8822d0fa 	srli	r17,r17,3
  8480b0:	4010977a 	slli	r8,r8,29
  8480b4:	10c0022c 	andhi	r3,r2,8
  8480b8:	4462b03a 	or	r17,r8,r17
  8480bc:	183feb26 	beq	r3,zero,84806c <__alt_mem_epcs_flash_controller_0+0xff83f06c>
  8480c0:	4808d0fa 	srli	r4,r9,3
  8480c4:	20c0022c 	andhi	r3,r4,8
  8480c8:	183fe81e 	bne	r3,zero,84806c <__alt_mem_epcs_flash_controller_0+0xff83f06c>
  8480cc:	300cd0fa 	srli	r6,r6,3
  8480d0:	4806977a 	slli	r3,r9,29
  8480d4:	2005883a 	mov	r2,r4
  8480d8:	19a2b03a 	or	r17,r3,r6
  8480dc:	003fe306 	br	84806c <__alt_mem_epcs_flash_controller_0+0xff83f06c>
  8480e0:	0011883a 	mov	r8,zero
  8480e4:	0005883a 	mov	r2,zero
  8480e8:	003e3f06 	br	8479e8 <__alt_mem_epcs_flash_controller_0+0xff83e9e8>
  8480ec:	0401ffc4 	movi	r16,2047
  8480f0:	003e2506 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  8480f4:	0013883a 	mov	r9,zero
  8480f8:	003f8406 	br	847f0c <__alt_mem_epcs_flash_controller_0+0xff83ef0c>
  8480fc:	0005883a 	mov	r2,zero
  848100:	0007883a 	mov	r3,zero
  848104:	003e8906 	br	847b2c <__alt_mem_epcs_flash_controller_0+0xff83eb2c>
  848108:	197ff804 	addi	r5,r3,-32
  84810c:	01000804 	movi	r4,32
  848110:	414ad83a 	srl	r5,r8,r5
  848114:	19002426 	beq	r3,r4,8481a8 <__adddf3+0x89c>
  848118:	01001004 	movi	r4,64
  84811c:	20c7c83a 	sub	r3,r4,r3
  848120:	40c6983a 	sll	r3,r8,r3
  848124:	1c46b03a 	or	r3,r3,r17
  848128:	1806c03a 	cmpne	r3,r3,zero
  84812c:	28e2b03a 	or	r17,r5,r3
  848130:	0007883a 	mov	r3,zero
  848134:	003f2306 	br	847dc4 <__alt_mem_epcs_flash_controller_0+0xff83edc4>
  848138:	0007883a 	mov	r3,zero
  84813c:	5811883a 	mov	r8,r11
  848140:	00bfffc4 	movi	r2,-1
  848144:	0401ffc4 	movi	r16,2047
  848148:	003e7806 	br	847b2c <__alt_mem_epcs_flash_controller_0+0xff83eb2c>
  84814c:	4462b03a 	or	r17,r8,r17
  848150:	8822c03a 	cmpne	r17,r17,zero
  848154:	0009883a 	mov	r4,zero
  848158:	003fa006 	br	847fdc <__alt_mem_epcs_flash_controller_0+0xff83efdc>
  84815c:	4811883a 	mov	r8,r9
  848160:	3023883a 	mov	r17,r6
  848164:	0401ffc4 	movi	r16,2047
  848168:	003e0706 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  84816c:	4811883a 	mov	r8,r9
  848170:	3023883a 	mov	r17,r6
  848174:	003e0406 	br	847988 <__alt_mem_epcs_flash_controller_0+0xff83e988>
  848178:	21fff804 	addi	r7,r4,-32
  84817c:	01400804 	movi	r5,32
  848180:	41ced83a 	srl	r7,r8,r7
  848184:	21400a26 	beq	r4,r5,8481b0 <__adddf3+0x8a4>
  848188:	01401004 	movi	r5,64
  84818c:	2909c83a 	sub	r4,r5,r4
  848190:	4108983a 	sll	r4,r8,r4
  848194:	2448b03a 	or	r4,r4,r17
  848198:	2008c03a 	cmpne	r4,r4,zero
  84819c:	3922b03a 	or	r17,r7,r4
  8481a0:	0009883a 	mov	r4,zero
  8481a4:	003f8d06 	br	847fdc <__alt_mem_epcs_flash_controller_0+0xff83efdc>
  8481a8:	0007883a 	mov	r3,zero
  8481ac:	003fdd06 	br	848124 <__alt_mem_epcs_flash_controller_0+0xff83f124>
  8481b0:	0009883a 	mov	r4,zero
  8481b4:	003ff706 	br	848194 <__alt_mem_epcs_flash_controller_0+0xff83f194>

008481b8 <__divdf3>:
  8481b8:	defff004 	addi	sp,sp,-64
  8481bc:	dc800815 	stw	r18,32(sp)
  8481c0:	2824d53a 	srli	r18,r5,20
  8481c4:	dd800c15 	stw	r22,48(sp)
  8481c8:	282cd7fa 	srli	r22,r5,31
  8481cc:	dc000615 	stw	r16,24(sp)
  8481d0:	04000434 	movhi	r16,16
  8481d4:	843fffc4 	addi	r16,r16,-1
  8481d8:	dfc00f15 	stw	ra,60(sp)
  8481dc:	df000e15 	stw	fp,56(sp)
  8481e0:	ddc00d15 	stw	r23,52(sp)
  8481e4:	dd400b15 	stw	r21,44(sp)
  8481e8:	dd000a15 	stw	r20,40(sp)
  8481ec:	dcc00915 	stw	r19,36(sp)
  8481f0:	dc400715 	stw	r17,28(sp)
  8481f4:	9481ffcc 	andi	r18,r18,2047
  8481f8:	2c20703a 	and	r16,r5,r16
  8481fc:	b2003fcc 	andi	r8,r22,255
  848200:	90006126 	beq	r18,zero,848388 <__divdf3+0x1d0>
  848204:	0081ffc4 	movi	r2,2047
  848208:	202b883a 	mov	r21,r4
  84820c:	90803726 	beq	r18,r2,8482ec <__divdf3+0x134>
  848210:	80800434 	orhi	r2,r16,16
  848214:	100490fa 	slli	r2,r2,3
  848218:	2020d77a 	srli	r16,r4,29
  84821c:	202a90fa 	slli	r21,r4,3
  848220:	94bf0044 	addi	r18,r18,-1023
  848224:	80a0b03a 	or	r16,r16,r2
  848228:	0013883a 	mov	r9,zero
  84822c:	000b883a 	mov	r5,zero
  848230:	3806d53a 	srli	r3,r7,20
  848234:	382ed7fa 	srli	r23,r7,31
  848238:	04400434 	movhi	r17,16
  84823c:	8c7fffc4 	addi	r17,r17,-1
  848240:	18c1ffcc 	andi	r3,r3,2047
  848244:	3029883a 	mov	r20,r6
  848248:	3c62703a 	and	r17,r7,r17
  84824c:	bf003fcc 	andi	fp,r23,255
  848250:	18006e26 	beq	r3,zero,84840c <__divdf3+0x254>
  848254:	0081ffc4 	movi	r2,2047
  848258:	18806626 	beq	r3,r2,8483f4 <__divdf3+0x23c>
  84825c:	88800434 	orhi	r2,r17,16
  848260:	100490fa 	slli	r2,r2,3
  848264:	3022d77a 	srli	r17,r6,29
  848268:	302890fa 	slli	r20,r6,3
  84826c:	18ff0044 	addi	r3,r3,-1023
  848270:	88a2b03a 	or	r17,r17,r2
  848274:	000f883a 	mov	r7,zero
  848278:	b5e6f03a 	xor	r19,r22,r23
  84827c:	3a4cb03a 	or	r6,r7,r9
  848280:	008003c4 	movi	r2,15
  848284:	9809883a 	mov	r4,r19
  848288:	90c7c83a 	sub	r3,r18,r3
  84828c:	9cc03fcc 	andi	r19,r19,255
  848290:	11809636 	bltu	r2,r6,8484ec <__divdf3+0x334>
  848294:	300c90ba 	slli	r6,r6,2
  848298:	00802174 	movhi	r2,133
  84829c:	10a0ab04 	addi	r2,r2,-32084
  8482a0:	308d883a 	add	r6,r6,r2
  8482a4:	30800017 	ldw	r2,0(r6)
  8482a8:	1000683a 	jmp	r2
  8482ac:	008484ec 	andhi	r2,zero,4627
  8482b0:	00848324 	muli	r2,zero,4620
  8482b4:	008484dc 	xori	r2,zero,4627
  8482b8:	00848318 	cmpnei	r2,zero,4620
  8482bc:	008484dc 	xori	r2,zero,4627
  8482c0:	008484b0 	cmpltui	r2,zero,4626
  8482c4:	008484dc 	xori	r2,zero,4627
  8482c8:	00848318 	cmpnei	r2,zero,4620
  8482cc:	00848324 	muli	r2,zero,4620
  8482d0:	00848324 	muli	r2,zero,4620
  8482d4:	008484b0 	cmpltui	r2,zero,4626
  8482d8:	00848318 	cmpnei	r2,zero,4620
  8482dc:	00848308 	cmpgei	r2,zero,4620
  8482e0:	00848308 	cmpgei	r2,zero,4620
  8482e4:	00848308 	cmpgei	r2,zero,4620
  8482e8:	00848874 	movhi	r2,4641
  8482ec:	2404b03a 	or	r2,r4,r16
  8482f0:	10006c1e 	bne	r2,zero,8484a4 <__divdf3+0x2ec>
  8482f4:	02400204 	movi	r9,8
  8482f8:	0021883a 	mov	r16,zero
  8482fc:	002b883a 	mov	r21,zero
  848300:	01400084 	movi	r5,2
  848304:	003fca06 	br	848230 <__alt_mem_epcs_flash_controller_0+0xff83f230>
  848308:	8023883a 	mov	r17,r16
  84830c:	a829883a 	mov	r20,r21
  848310:	4039883a 	mov	fp,r8
  848314:	280f883a 	mov	r7,r5
  848318:	00800084 	movi	r2,2
  84831c:	3881601e 	bne	r7,r2,8488a0 <__divdf3+0x6e8>
  848320:	e027883a 	mov	r19,fp
  848324:	9900004c 	andi	r4,r19,1
  848328:	0081ffc4 	movi	r2,2047
  84832c:	0021883a 	mov	r16,zero
  848330:	002b883a 	mov	r21,zero
  848334:	1004953a 	slli	r2,r2,20
  848338:	20c03fcc 	andi	r3,r4,255
  84833c:	01400434 	movhi	r5,16
  848340:	297fffc4 	addi	r5,r5,-1
  848344:	180697fa 	slli	r3,r3,31
  848348:	8160703a 	and	r16,r16,r5
  84834c:	80a0b03a 	or	r16,r16,r2
  848350:	80c6b03a 	or	r3,r16,r3
  848354:	a805883a 	mov	r2,r21
  848358:	dfc00f17 	ldw	ra,60(sp)
  84835c:	df000e17 	ldw	fp,56(sp)
  848360:	ddc00d17 	ldw	r23,52(sp)
  848364:	dd800c17 	ldw	r22,48(sp)
  848368:	dd400b17 	ldw	r21,44(sp)
  84836c:	dd000a17 	ldw	r20,40(sp)
  848370:	dcc00917 	ldw	r19,36(sp)
  848374:	dc800817 	ldw	r18,32(sp)
  848378:	dc400717 	ldw	r17,28(sp)
  84837c:	dc000617 	ldw	r16,24(sp)
  848380:	dec01004 	addi	sp,sp,64
  848384:	f800283a 	ret
  848388:	2404b03a 	or	r2,r4,r16
  84838c:	2023883a 	mov	r17,r4
  848390:	10003f26 	beq	r2,zero,848490 <__divdf3+0x2d8>
  848394:	80015e26 	beq	r16,zero,848910 <__divdf3+0x758>
  848398:	8009883a 	mov	r4,r16
  84839c:	d9800215 	stw	r6,8(sp)
  8483a0:	d9c00515 	stw	r7,20(sp)
  8483a4:	da000415 	stw	r8,16(sp)
  8483a8:	0831c3c0 	call	831c3c <__clzsi2>
  8483ac:	d9800217 	ldw	r6,8(sp)
  8483b0:	d9c00517 	ldw	r7,20(sp)
  8483b4:	da000417 	ldw	r8,16(sp)
  8483b8:	113ffd44 	addi	r4,r2,-11
  8483bc:	00c00704 	movi	r3,28
  8483c0:	19014f16 	blt	r3,r4,848900 <__divdf3+0x748>
  8483c4:	00c00744 	movi	r3,29
  8483c8:	157ffe04 	addi	r21,r2,-8
  8483cc:	1907c83a 	sub	r3,r3,r4
  8483d0:	8560983a 	sll	r16,r16,r21
  8483d4:	88c6d83a 	srl	r3,r17,r3
  8483d8:	8d6a983a 	sll	r21,r17,r21
  8483dc:	1c20b03a 	or	r16,r3,r16
  8483e0:	1080fcc4 	addi	r2,r2,1011
  8483e4:	00a5c83a 	sub	r18,zero,r2
  8483e8:	0013883a 	mov	r9,zero
  8483ec:	000b883a 	mov	r5,zero
  8483f0:	003f8f06 	br	848230 <__alt_mem_epcs_flash_controller_0+0xff83f230>
  8483f4:	3444b03a 	or	r2,r6,r17
  8483f8:	1000231e 	bne	r2,zero,848488 <__divdf3+0x2d0>
  8483fc:	0023883a 	mov	r17,zero
  848400:	0029883a 	mov	r20,zero
  848404:	01c00084 	movi	r7,2
  848408:	003f9b06 	br	848278 <__alt_mem_epcs_flash_controller_0+0xff83f278>
  84840c:	3444b03a 	or	r2,r6,r17
  848410:	10001926 	beq	r2,zero,848478 <__divdf3+0x2c0>
  848414:	88014b26 	beq	r17,zero,848944 <__divdf3+0x78c>
  848418:	8809883a 	mov	r4,r17
  84841c:	d9400115 	stw	r5,4(sp)
  848420:	d9800215 	stw	r6,8(sp)
  848424:	da000415 	stw	r8,16(sp)
  848428:	da400315 	stw	r9,12(sp)
  84842c:	0831c3c0 	call	831c3c <__clzsi2>
  848430:	d9400117 	ldw	r5,4(sp)
  848434:	d9800217 	ldw	r6,8(sp)
  848438:	da000417 	ldw	r8,16(sp)
  84843c:	da400317 	ldw	r9,12(sp)
  848440:	113ffd44 	addi	r4,r2,-11
  848444:	00c00704 	movi	r3,28
  848448:	19013a16 	blt	r3,r4,848934 <__divdf3+0x77c>
  84844c:	00c00744 	movi	r3,29
  848450:	153ffe04 	addi	r20,r2,-8
  848454:	1907c83a 	sub	r3,r3,r4
  848458:	8d22983a 	sll	r17,r17,r20
  84845c:	30c6d83a 	srl	r3,r6,r3
  848460:	3528983a 	sll	r20,r6,r20
  848464:	1c62b03a 	or	r17,r3,r17
  848468:	1080fcc4 	addi	r2,r2,1011
  84846c:	0087c83a 	sub	r3,zero,r2
  848470:	000f883a 	mov	r7,zero
  848474:	003f8006 	br	848278 <__alt_mem_epcs_flash_controller_0+0xff83f278>
  848478:	0023883a 	mov	r17,zero
  84847c:	0029883a 	mov	r20,zero
  848480:	01c00044 	movi	r7,1
  848484:	003f7c06 	br	848278 <__alt_mem_epcs_flash_controller_0+0xff83f278>
  848488:	01c000c4 	movi	r7,3
  84848c:	003f7a06 	br	848278 <__alt_mem_epcs_flash_controller_0+0xff83f278>
  848490:	02400104 	movi	r9,4
  848494:	0021883a 	mov	r16,zero
  848498:	002b883a 	mov	r21,zero
  84849c:	01400044 	movi	r5,1
  8484a0:	003f6306 	br	848230 <__alt_mem_epcs_flash_controller_0+0xff83f230>
  8484a4:	02400304 	movi	r9,12
  8484a8:	014000c4 	movi	r5,3
  8484ac:	003f6006 	br	848230 <__alt_mem_epcs_flash_controller_0+0xff83f230>
  8484b0:	04000434 	movhi	r16,16
  8484b4:	0009883a 	mov	r4,zero
  8484b8:	843fffc4 	addi	r16,r16,-1
  8484bc:	057fffc4 	movi	r21,-1
  8484c0:	0081ffc4 	movi	r2,2047
  8484c4:	003f9b06 	br	848334 <__alt_mem_epcs_flash_controller_0+0xff83f334>
  8484c8:	00c00044 	movi	r3,1
  8484cc:	1887c83a 	sub	r3,r3,r2
  8484d0:	01000e04 	movi	r4,56
  8484d4:	20c1530e 	bge	r4,r3,848a24 <__divdf3+0x86c>
  8484d8:	9900004c 	andi	r4,r19,1
  8484dc:	0005883a 	mov	r2,zero
  8484e0:	0021883a 	mov	r16,zero
  8484e4:	002b883a 	mov	r21,zero
  8484e8:	003f9206 	br	848334 <__alt_mem_epcs_flash_controller_0+0xff83f334>
  8484ec:	8c012e36 	bltu	r17,r16,8489a8 <__divdf3+0x7f0>
  8484f0:	84412c26 	beq	r16,r17,8489a4 <__divdf3+0x7ec>
  8484f4:	a82f883a 	mov	r23,r21
  8484f8:	18ffffc4 	addi	r3,r3,-1
  8484fc:	002b883a 	mov	r21,zero
  848500:	a004d63a 	srli	r2,r20,24
  848504:	8822923a 	slli	r17,r17,8
  848508:	a028923a 	slli	r20,r20,8
  84850c:	8009883a 	mov	r4,r16
  848510:	88acb03a 	or	r22,r17,r2
  848514:	dd000015 	stw	r20,0(sp)
  848518:	b028d43a 	srli	r20,r22,16
  84851c:	d8c00215 	stw	r3,8(sp)
  848520:	b4bfffcc 	andi	r18,r22,65535
  848524:	a00b883a 	mov	r5,r20
  848528:	083012c0 	call	83012c <__udivsi3>
  84852c:	100b883a 	mov	r5,r2
  848530:	9009883a 	mov	r4,r18
  848534:	1023883a 	mov	r17,r2
  848538:	08301e80 	call	8301e8 <__mulsi3>
  84853c:	8009883a 	mov	r4,r16
  848540:	a00b883a 	mov	r5,r20
  848544:	1039883a 	mov	fp,r2
  848548:	08301900 	call	830190 <__umodsi3>
  84854c:	1004943a 	slli	r2,r2,16
  848550:	b808d43a 	srli	r4,r23,16
  848554:	d8c00217 	ldw	r3,8(sp)
  848558:	2084b03a 	or	r2,r4,r2
  84855c:	1700062e 	bgeu	r2,fp,848578 <__divdf3+0x3c0>
  848560:	1585883a 	add	r2,r2,r22
  848564:	893fffc4 	addi	r4,r17,-1
  848568:	15811d36 	bltu	r2,r22,8489e0 <__divdf3+0x828>
  84856c:	17011c2e 	bgeu	r2,fp,8489e0 <__divdf3+0x828>
  848570:	8c7fff84 	addi	r17,r17,-2
  848574:	1585883a 	add	r2,r2,r22
  848578:	1739c83a 	sub	fp,r2,fp
  84857c:	a00b883a 	mov	r5,r20
  848580:	e009883a 	mov	r4,fp
  848584:	d8c00215 	stw	r3,8(sp)
  848588:	083012c0 	call	83012c <__udivsi3>
  84858c:	100b883a 	mov	r5,r2
  848590:	9009883a 	mov	r4,r18
  848594:	1021883a 	mov	r16,r2
  848598:	08301e80 	call	8301e8 <__mulsi3>
  84859c:	a00b883a 	mov	r5,r20
  8485a0:	e009883a 	mov	r4,fp
  8485a4:	d8800415 	stw	r2,16(sp)
  8485a8:	08301900 	call	830190 <__umodsi3>
  8485ac:	1004943a 	slli	r2,r2,16
  8485b0:	da000417 	ldw	r8,16(sp)
  8485b4:	bdffffcc 	andi	r23,r23,65535
  8485b8:	b884b03a 	or	r2,r23,r2
  8485bc:	d8c00217 	ldw	r3,8(sp)
  8485c0:	1200062e 	bgeu	r2,r8,8485dc <__divdf3+0x424>
  8485c4:	1585883a 	add	r2,r2,r22
  8485c8:	813fffc4 	addi	r4,r16,-1
  8485cc:	15810236 	bltu	r2,r22,8489d8 <__divdf3+0x820>
  8485d0:	1201012e 	bgeu	r2,r8,8489d8 <__divdf3+0x820>
  8485d4:	843fff84 	addi	r16,r16,-2
  8485d8:	1585883a 	add	r2,r2,r22
  8485dc:	8822943a 	slli	r17,r17,16
  8485e0:	d9800017 	ldw	r6,0(sp)
  8485e4:	1211c83a 	sub	r8,r2,r8
  8485e8:	8c22b03a 	or	r17,r17,r16
  8485ec:	373fffcc 	andi	fp,r6,65535
  8485f0:	8abfffcc 	andi	r10,r17,65535
  8485f4:	8820d43a 	srli	r16,r17,16
  8485f8:	5009883a 	mov	r4,r10
  8485fc:	e00b883a 	mov	r5,fp
  848600:	302ed43a 	srli	r23,r6,16
  848604:	d8c00215 	stw	r3,8(sp)
  848608:	da000415 	stw	r8,16(sp)
  84860c:	da800115 	stw	r10,4(sp)
  848610:	08301e80 	call	8301e8 <__mulsi3>
  848614:	800b883a 	mov	r5,r16
  848618:	e009883a 	mov	r4,fp
  84861c:	d8800515 	stw	r2,20(sp)
  848620:	08301e80 	call	8301e8 <__mulsi3>
  848624:	8009883a 	mov	r4,r16
  848628:	b80b883a 	mov	r5,r23
  84862c:	d8800315 	stw	r2,12(sp)
  848630:	08301e80 	call	8301e8 <__mulsi3>
  848634:	da800117 	ldw	r10,4(sp)
  848638:	b80b883a 	mov	r5,r23
  84863c:	1021883a 	mov	r16,r2
  848640:	5009883a 	mov	r4,r10
  848644:	08301e80 	call	8301e8 <__mulsi3>
  848648:	d9c00517 	ldw	r7,20(sp)
  84864c:	da400317 	ldw	r9,12(sp)
  848650:	d8c00217 	ldw	r3,8(sp)
  848654:	3808d43a 	srli	r4,r7,16
  848658:	1245883a 	add	r2,r2,r9
  84865c:	da000417 	ldw	r8,16(sp)
  848660:	2085883a 	add	r2,r4,r2
  848664:	1240022e 	bgeu	r2,r9,848670 <__divdf3+0x4b8>
  848668:	01000074 	movhi	r4,1
  84866c:	8121883a 	add	r16,r16,r4
  848670:	1008d43a 	srli	r4,r2,16
  848674:	1004943a 	slli	r2,r2,16
  848678:	39ffffcc 	andi	r7,r7,65535
  84867c:	2409883a 	add	r4,r4,r16
  848680:	11c5883a 	add	r2,r2,r7
  848684:	4100bb36 	bltu	r8,r4,848974 <__divdf3+0x7bc>
  848688:	4100d726 	beq	r8,r4,8489e8 <__divdf3+0x830>
  84868c:	4109c83a 	sub	r4,r8,r4
  848690:	a8a1c83a 	sub	r16,r21,r2
  848694:	ac2b803a 	cmpltu	r21,r21,r16
  848698:	256bc83a 	sub	r21,r4,r21
  84869c:	b540d926 	beq	r22,r21,848a04 <__divdf3+0x84c>
  8486a0:	a00b883a 	mov	r5,r20
  8486a4:	a809883a 	mov	r4,r21
  8486a8:	d8c00215 	stw	r3,8(sp)
  8486ac:	083012c0 	call	83012c <__udivsi3>
  8486b0:	100b883a 	mov	r5,r2
  8486b4:	9009883a 	mov	r4,r18
  8486b8:	d8800515 	stw	r2,20(sp)
  8486bc:	08301e80 	call	8301e8 <__mulsi3>
  8486c0:	a809883a 	mov	r4,r21
  8486c4:	a00b883a 	mov	r5,r20
  8486c8:	d8800415 	stw	r2,16(sp)
  8486cc:	08301900 	call	830190 <__umodsi3>
  8486d0:	1004943a 	slli	r2,r2,16
  8486d4:	8008d43a 	srli	r4,r16,16
  8486d8:	da000417 	ldw	r8,16(sp)
  8486dc:	d8c00217 	ldw	r3,8(sp)
  8486e0:	2084b03a 	or	r2,r4,r2
  8486e4:	d9c00517 	ldw	r7,20(sp)
  8486e8:	1200062e 	bgeu	r2,r8,848704 <__divdf3+0x54c>
  8486ec:	1585883a 	add	r2,r2,r22
  8486f0:	393fffc4 	addi	r4,r7,-1
  8486f4:	1580c536 	bltu	r2,r22,848a0c <__divdf3+0x854>
  8486f8:	1200c42e 	bgeu	r2,r8,848a0c <__divdf3+0x854>
  8486fc:	39ffff84 	addi	r7,r7,-2
  848700:	1585883a 	add	r2,r2,r22
  848704:	122bc83a 	sub	r21,r2,r8
  848708:	a00b883a 	mov	r5,r20
  84870c:	a809883a 	mov	r4,r21
  848710:	d8c00215 	stw	r3,8(sp)
  848714:	d9c00515 	stw	r7,20(sp)
  848718:	083012c0 	call	83012c <__udivsi3>
  84871c:	9009883a 	mov	r4,r18
  848720:	100b883a 	mov	r5,r2
  848724:	d8800415 	stw	r2,16(sp)
  848728:	08301e80 	call	8301e8 <__mulsi3>
  84872c:	a809883a 	mov	r4,r21
  848730:	a00b883a 	mov	r5,r20
  848734:	1025883a 	mov	r18,r2
  848738:	08301900 	call	830190 <__umodsi3>
  84873c:	1004943a 	slli	r2,r2,16
  848740:	813fffcc 	andi	r4,r16,65535
  848744:	d8c00217 	ldw	r3,8(sp)
  848748:	20a0b03a 	or	r16,r4,r2
  84874c:	d9c00517 	ldw	r7,20(sp)
  848750:	da000417 	ldw	r8,16(sp)
  848754:	8480062e 	bgeu	r16,r18,848770 <__divdf3+0x5b8>
  848758:	85a1883a 	add	r16,r16,r22
  84875c:	40bfffc4 	addi	r2,r8,-1
  848760:	8580ac36 	bltu	r16,r22,848a14 <__divdf3+0x85c>
  848764:	8480ab2e 	bgeu	r16,r18,848a14 <__divdf3+0x85c>
  848768:	423fff84 	addi	r8,r8,-2
  84876c:	85a1883a 	add	r16,r16,r22
  848770:	3804943a 	slli	r2,r7,16
  848774:	84a1c83a 	sub	r16,r16,r18
  848778:	e009883a 	mov	r4,fp
  84877c:	1228b03a 	or	r20,r2,r8
  848780:	a1ffffcc 	andi	r7,r20,65535
  848784:	a024d43a 	srli	r18,r20,16
  848788:	380b883a 	mov	r5,r7
  84878c:	d8c00215 	stw	r3,8(sp)
  848790:	d9c00515 	stw	r7,20(sp)
  848794:	08301e80 	call	8301e8 <__mulsi3>
  848798:	900b883a 	mov	r5,r18
  84879c:	e009883a 	mov	r4,fp
  8487a0:	102b883a 	mov	r21,r2
  8487a4:	08301e80 	call	8301e8 <__mulsi3>
  8487a8:	900b883a 	mov	r5,r18
  8487ac:	b809883a 	mov	r4,r23
  8487b0:	1039883a 	mov	fp,r2
  8487b4:	08301e80 	call	8301e8 <__mulsi3>
  8487b8:	d9c00517 	ldw	r7,20(sp)
  8487bc:	b80b883a 	mov	r5,r23
  8487c0:	1025883a 	mov	r18,r2
  8487c4:	3809883a 	mov	r4,r7
  8487c8:	08301e80 	call	8301e8 <__mulsi3>
  8487cc:	a808d43a 	srli	r4,r21,16
  8487d0:	1705883a 	add	r2,r2,fp
  8487d4:	d8c00217 	ldw	r3,8(sp)
  8487d8:	2085883a 	add	r2,r4,r2
  8487dc:	1700022e 	bgeu	r2,fp,8487e8 <__divdf3+0x630>
  8487e0:	01000074 	movhi	r4,1
  8487e4:	9125883a 	add	r18,r18,r4
  8487e8:	1008d43a 	srli	r4,r2,16
  8487ec:	1004943a 	slli	r2,r2,16
  8487f0:	ad7fffcc 	andi	r21,r21,65535
  8487f4:	2489883a 	add	r4,r4,r18
  8487f8:	1545883a 	add	r2,r2,r21
  8487fc:	81003836 	bltu	r16,r4,8488e0 <__divdf3+0x728>
  848800:	81003626 	beq	r16,r4,8488dc <__divdf3+0x724>
  848804:	a5000054 	ori	r20,r20,1
  848808:	1880ffc4 	addi	r2,r3,1023
  84880c:	00bf2e0e 	bge	zero,r2,8484c8 <__alt_mem_epcs_flash_controller_0+0xff83f4c8>
  848810:	a10001cc 	andi	r4,r20,7
  848814:	20000726 	beq	r4,zero,848834 <__divdf3+0x67c>
  848818:	a10003cc 	andi	r4,r20,15
  84881c:	01400104 	movi	r5,4
  848820:	21400426 	beq	r4,r5,848834 <__divdf3+0x67c>
  848824:	a149883a 	add	r4,r20,r5
  848828:	2529803a 	cmpltu	r20,r4,r20
  84882c:	8d23883a 	add	r17,r17,r20
  848830:	2029883a 	mov	r20,r4
  848834:	8900402c 	andhi	r4,r17,256
  848838:	20000426 	beq	r4,zero,84884c <__divdf3+0x694>
  84883c:	18810004 	addi	r2,r3,1024
  848840:	00ffc034 	movhi	r3,65280
  848844:	18ffffc4 	addi	r3,r3,-1
  848848:	88e2703a 	and	r17,r17,r3
  84884c:	00c1ff84 	movi	r3,2046
  848850:	18beb416 	blt	r3,r2,848324 <__alt_mem_epcs_flash_controller_0+0xff83f324>
  848854:	a028d0fa 	srli	r20,r20,3
  848858:	882a977a 	slli	r21,r17,29
  84885c:	8820927a 	slli	r16,r17,9
  848860:	1081ffcc 	andi	r2,r2,2047
  848864:	ad2ab03a 	or	r21,r21,r20
  848868:	8020d33a 	srli	r16,r16,12
  84886c:	9900004c 	andi	r4,r19,1
  848870:	003eb006 	br	848334 <__alt_mem_epcs_flash_controller_0+0xff83f334>
  848874:	8080022c 	andhi	r2,r16,8
  848878:	10001226 	beq	r2,zero,8488c4 <__divdf3+0x70c>
  84887c:	8880022c 	andhi	r2,r17,8
  848880:	1000101e 	bne	r2,zero,8488c4 <__divdf3+0x70c>
  848884:	00800434 	movhi	r2,16
  848888:	8c000234 	orhi	r16,r17,8
  84888c:	10bfffc4 	addi	r2,r2,-1
  848890:	b809883a 	mov	r4,r23
  848894:	80a0703a 	and	r16,r16,r2
  848898:	a02b883a 	mov	r21,r20
  84889c:	003f0806 	br	8484c0 <__alt_mem_epcs_flash_controller_0+0xff83f4c0>
  8488a0:	008000c4 	movi	r2,3
  8488a4:	3880b126 	beq	r7,r2,848b6c <__divdf3+0x9b4>
  8488a8:	00800044 	movi	r2,1
  8488ac:	38805b1e 	bne	r7,r2,848a1c <__divdf3+0x864>
  8488b0:	e009883a 	mov	r4,fp
  8488b4:	0005883a 	mov	r2,zero
  8488b8:	0021883a 	mov	r16,zero
  8488bc:	002b883a 	mov	r21,zero
  8488c0:	003e9c06 	br	848334 <__alt_mem_epcs_flash_controller_0+0xff83f334>
  8488c4:	00800434 	movhi	r2,16
  8488c8:	84000234 	orhi	r16,r16,8
  8488cc:	10bfffc4 	addi	r2,r2,-1
  8488d0:	b009883a 	mov	r4,r22
  8488d4:	80a0703a 	and	r16,r16,r2
  8488d8:	003ef906 	br	8484c0 <__alt_mem_epcs_flash_controller_0+0xff83f4c0>
  8488dc:	103fca26 	beq	r2,zero,848808 <__alt_mem_epcs_flash_controller_0+0xff83f808>
  8488e0:	b421883a 	add	r16,r22,r16
  8488e4:	a17fffc4 	addi	r5,r20,-1
  8488e8:	8580422e 	bgeu	r16,r22,8489f4 <__divdf3+0x83c>
  8488ec:	2829883a 	mov	r20,r5
  8488f0:	813fc41e 	bne	r16,r4,848804 <__alt_mem_epcs_flash_controller_0+0xff83f804>
  8488f4:	d9800017 	ldw	r6,0(sp)
  8488f8:	30bfc21e 	bne	r6,r2,848804 <__alt_mem_epcs_flash_controller_0+0xff83f804>
  8488fc:	003fc206 	br	848808 <__alt_mem_epcs_flash_controller_0+0xff83f808>
  848900:	143ff604 	addi	r16,r2,-40
  848904:	8c20983a 	sll	r16,r17,r16
  848908:	002b883a 	mov	r21,zero
  84890c:	003eb406 	br	8483e0 <__alt_mem_epcs_flash_controller_0+0xff83f3e0>
  848910:	d9800215 	stw	r6,8(sp)
  848914:	d9c00515 	stw	r7,20(sp)
  848918:	da000415 	stw	r8,16(sp)
  84891c:	0831c3c0 	call	831c3c <__clzsi2>
  848920:	10800804 	addi	r2,r2,32
  848924:	da000417 	ldw	r8,16(sp)
  848928:	d9c00517 	ldw	r7,20(sp)
  84892c:	d9800217 	ldw	r6,8(sp)
  848930:	003ea106 	br	8483b8 <__alt_mem_epcs_flash_controller_0+0xff83f3b8>
  848934:	147ff604 	addi	r17,r2,-40
  848938:	3462983a 	sll	r17,r6,r17
  84893c:	0029883a 	mov	r20,zero
  848940:	003ec906 	br	848468 <__alt_mem_epcs_flash_controller_0+0xff83f468>
  848944:	3009883a 	mov	r4,r6
  848948:	d9400115 	stw	r5,4(sp)
  84894c:	d9800215 	stw	r6,8(sp)
  848950:	da000415 	stw	r8,16(sp)
  848954:	da400315 	stw	r9,12(sp)
  848958:	0831c3c0 	call	831c3c <__clzsi2>
  84895c:	10800804 	addi	r2,r2,32
  848960:	da400317 	ldw	r9,12(sp)
  848964:	da000417 	ldw	r8,16(sp)
  848968:	d9800217 	ldw	r6,8(sp)
  84896c:	d9400117 	ldw	r5,4(sp)
  848970:	003eb306 	br	848440 <__alt_mem_epcs_flash_controller_0+0xff83f440>
  848974:	d9800017 	ldw	r6,0(sp)
  848978:	a9ab883a 	add	r21,r21,r6
  84897c:	a98b803a 	cmpltu	r5,r21,r6
  848980:	2d8b883a 	add	r5,r5,r22
  848984:	2a11883a 	add	r8,r5,r8
  848988:	897fffc4 	addi	r5,r17,-1
  84898c:	b2000c2e 	bgeu	r22,r8,8489c0 <__divdf3+0x808>
  848990:	41003f36 	bltu	r8,r4,848a90 <__divdf3+0x8d8>
  848994:	22006c26 	beq	r4,r8,848b48 <__divdf3+0x990>
  848998:	4109c83a 	sub	r4,r8,r4
  84899c:	2823883a 	mov	r17,r5
  8489a0:	003f3b06 	br	848690 <__alt_mem_epcs_flash_controller_0+0xff83f690>
  8489a4:	ad3ed336 	bltu	r21,r20,8484f4 <__alt_mem_epcs_flash_controller_0+0xff83f4f4>
  8489a8:	a804d07a 	srli	r2,r21,1
  8489ac:	802e97fa 	slli	r23,r16,31
  8489b0:	a82a97fa 	slli	r21,r21,31
  8489b4:	8020d07a 	srli	r16,r16,1
  8489b8:	b8aeb03a 	or	r23,r23,r2
  8489bc:	003ed006 	br	848500 <__alt_mem_epcs_flash_controller_0+0xff83f500>
  8489c0:	b23ff51e 	bne	r22,r8,848998 <__alt_mem_epcs_flash_controller_0+0xff83f998>
  8489c4:	d9800017 	ldw	r6,0(sp)
  8489c8:	a9bff12e 	bgeu	r21,r6,848990 <__alt_mem_epcs_flash_controller_0+0xff83f990>
  8489cc:	b109c83a 	sub	r4,r22,r4
  8489d0:	2823883a 	mov	r17,r5
  8489d4:	003f2e06 	br	848690 <__alt_mem_epcs_flash_controller_0+0xff83f690>
  8489d8:	2021883a 	mov	r16,r4
  8489dc:	003eff06 	br	8485dc <__alt_mem_epcs_flash_controller_0+0xff83f5dc>
  8489e0:	2023883a 	mov	r17,r4
  8489e4:	003ee406 	br	848578 <__alt_mem_epcs_flash_controller_0+0xff83f578>
  8489e8:	a8bfe236 	bltu	r21,r2,848974 <__alt_mem_epcs_flash_controller_0+0xff83f974>
  8489ec:	0009883a 	mov	r4,zero
  8489f0:	003f2706 	br	848690 <__alt_mem_epcs_flash_controller_0+0xff83f690>
  8489f4:	81002d36 	bltu	r16,r4,848aac <__divdf3+0x8f4>
  8489f8:	24005626 	beq	r4,r16,848b54 <__divdf3+0x99c>
  8489fc:	2829883a 	mov	r20,r5
  848a00:	003f8006 	br	848804 <__alt_mem_epcs_flash_controller_0+0xff83f804>
  848a04:	053fffc4 	movi	r20,-1
  848a08:	003f7f06 	br	848808 <__alt_mem_epcs_flash_controller_0+0xff83f808>
  848a0c:	200f883a 	mov	r7,r4
  848a10:	003f3c06 	br	848704 <__alt_mem_epcs_flash_controller_0+0xff83f704>
  848a14:	1011883a 	mov	r8,r2
  848a18:	003f5506 	br	848770 <__alt_mem_epcs_flash_controller_0+0xff83f770>
  848a1c:	e027883a 	mov	r19,fp
  848a20:	003f7906 	br	848808 <__alt_mem_epcs_flash_controller_0+0xff83f808>
  848a24:	010007c4 	movi	r4,31
  848a28:	20c02816 	blt	r4,r3,848acc <__divdf3+0x914>
  848a2c:	00800804 	movi	r2,32
  848a30:	10c5c83a 	sub	r2,r2,r3
  848a34:	888a983a 	sll	r5,r17,r2
  848a38:	a0c8d83a 	srl	r4,r20,r3
  848a3c:	a084983a 	sll	r2,r20,r2
  848a40:	88e2d83a 	srl	r17,r17,r3
  848a44:	2906b03a 	or	r3,r5,r4
  848a48:	1004c03a 	cmpne	r2,r2,zero
  848a4c:	1886b03a 	or	r3,r3,r2
  848a50:	188001cc 	andi	r2,r3,7
  848a54:	10000726 	beq	r2,zero,848a74 <__divdf3+0x8bc>
  848a58:	188003cc 	andi	r2,r3,15
  848a5c:	01000104 	movi	r4,4
  848a60:	11000426 	beq	r2,r4,848a74 <__divdf3+0x8bc>
  848a64:	1805883a 	mov	r2,r3
  848a68:	10c00104 	addi	r3,r2,4
  848a6c:	1885803a 	cmpltu	r2,r3,r2
  848a70:	88a3883a 	add	r17,r17,r2
  848a74:	8880202c 	andhi	r2,r17,128
  848a78:	10002926 	beq	r2,zero,848b20 <__divdf3+0x968>
  848a7c:	9900004c 	andi	r4,r19,1
  848a80:	00800044 	movi	r2,1
  848a84:	0021883a 	mov	r16,zero
  848a88:	002b883a 	mov	r21,zero
  848a8c:	003e2906 	br	848334 <__alt_mem_epcs_flash_controller_0+0xff83f334>
  848a90:	d9800017 	ldw	r6,0(sp)
  848a94:	8c7fff84 	addi	r17,r17,-2
  848a98:	a9ab883a 	add	r21,r21,r6
  848a9c:	a98b803a 	cmpltu	r5,r21,r6
  848aa0:	2d8b883a 	add	r5,r5,r22
  848aa4:	2a11883a 	add	r8,r5,r8
  848aa8:	003ef806 	br	84868c <__alt_mem_epcs_flash_controller_0+0xff83f68c>
  848aac:	d9800017 	ldw	r6,0(sp)
  848ab0:	318f883a 	add	r7,r6,r6
  848ab4:	398b803a 	cmpltu	r5,r7,r6
  848ab8:	2d8d883a 	add	r6,r5,r22
  848abc:	81a1883a 	add	r16,r16,r6
  848ac0:	a17fff84 	addi	r5,r20,-2
  848ac4:	d9c00015 	stw	r7,0(sp)
  848ac8:	003f8806 	br	8488ec <__alt_mem_epcs_flash_controller_0+0xff83f8ec>
  848acc:	013ff844 	movi	r4,-31
  848ad0:	2085c83a 	sub	r2,r4,r2
  848ad4:	8888d83a 	srl	r4,r17,r2
  848ad8:	00800804 	movi	r2,32
  848adc:	18802126 	beq	r3,r2,848b64 <__divdf3+0x9ac>
  848ae0:	04001004 	movi	r16,64
  848ae4:	80c7c83a 	sub	r3,r16,r3
  848ae8:	88e0983a 	sll	r16,r17,r3
  848aec:	8504b03a 	or	r2,r16,r20
  848af0:	1004c03a 	cmpne	r2,r2,zero
  848af4:	2084b03a 	or	r2,r4,r2
  848af8:	144001cc 	andi	r17,r2,7
  848afc:	88000d1e 	bne	r17,zero,848b34 <__divdf3+0x97c>
  848b00:	0021883a 	mov	r16,zero
  848b04:	102ad0fa 	srli	r21,r2,3
  848b08:	9900004c 	andi	r4,r19,1
  848b0c:	0005883a 	mov	r2,zero
  848b10:	ac6ab03a 	or	r21,r21,r17
  848b14:	003e0706 	br	848334 <__alt_mem_epcs_flash_controller_0+0xff83f334>
  848b18:	1007883a 	mov	r3,r2
  848b1c:	0023883a 	mov	r17,zero
  848b20:	8820927a 	slli	r16,r17,9
  848b24:	1805883a 	mov	r2,r3
  848b28:	8822977a 	slli	r17,r17,29
  848b2c:	8020d33a 	srli	r16,r16,12
  848b30:	003ff406 	br	848b04 <__alt_mem_epcs_flash_controller_0+0xff83fb04>
  848b34:	10c003cc 	andi	r3,r2,15
  848b38:	01000104 	movi	r4,4
  848b3c:	193ff626 	beq	r3,r4,848b18 <__alt_mem_epcs_flash_controller_0+0xff83fb18>
  848b40:	0023883a 	mov	r17,zero
  848b44:	003fc806 	br	848a68 <__alt_mem_epcs_flash_controller_0+0xff83fa68>
  848b48:	a8bfd136 	bltu	r21,r2,848a90 <__alt_mem_epcs_flash_controller_0+0xff83fa90>
  848b4c:	2823883a 	mov	r17,r5
  848b50:	003fa606 	br	8489ec <__alt_mem_epcs_flash_controller_0+0xff83f9ec>
  848b54:	d9800017 	ldw	r6,0(sp)
  848b58:	30bfd436 	bltu	r6,r2,848aac <__alt_mem_epcs_flash_controller_0+0xff83faac>
  848b5c:	2829883a 	mov	r20,r5
  848b60:	003f6406 	br	8488f4 <__alt_mem_epcs_flash_controller_0+0xff83f8f4>
  848b64:	0021883a 	mov	r16,zero
  848b68:	003fe006 	br	848aec <__alt_mem_epcs_flash_controller_0+0xff83faec>
  848b6c:	00800434 	movhi	r2,16
  848b70:	8c000234 	orhi	r16,r17,8
  848b74:	10bfffc4 	addi	r2,r2,-1
  848b78:	e009883a 	mov	r4,fp
  848b7c:	80a0703a 	and	r16,r16,r2
  848b80:	a02b883a 	mov	r21,r20
  848b84:	003e4e06 	br	8484c0 <__alt_mem_epcs_flash_controller_0+0xff83f4c0>

00848b88 <__eqdf2>:
  848b88:	2804d53a 	srli	r2,r5,20
  848b8c:	3806d53a 	srli	r3,r7,20
  848b90:	02000434 	movhi	r8,16
  848b94:	423fffc4 	addi	r8,r8,-1
  848b98:	1081ffcc 	andi	r2,r2,2047
  848b9c:	0281ffc4 	movi	r10,2047
  848ba0:	2a12703a 	and	r9,r5,r8
  848ba4:	18c1ffcc 	andi	r3,r3,2047
  848ba8:	3a10703a 	and	r8,r7,r8
  848bac:	280ad7fa 	srli	r5,r5,31
  848bb0:	380ed7fa 	srli	r7,r7,31
  848bb4:	12801026 	beq	r2,r10,848bf8 <__eqdf2+0x70>
  848bb8:	0281ffc4 	movi	r10,2047
  848bbc:	1a800a26 	beq	r3,r10,848be8 <__eqdf2+0x60>
  848bc0:	10c00226 	beq	r2,r3,848bcc <__eqdf2+0x44>
  848bc4:	00800044 	movi	r2,1
  848bc8:	f800283a 	ret
  848bcc:	4a3ffd1e 	bne	r9,r8,848bc4 <__alt_mem_epcs_flash_controller_0+0xff83fbc4>
  848bd0:	21bffc1e 	bne	r4,r6,848bc4 <__alt_mem_epcs_flash_controller_0+0xff83fbc4>
  848bd4:	29c00c26 	beq	r5,r7,848c08 <__eqdf2+0x80>
  848bd8:	103ffa1e 	bne	r2,zero,848bc4 <__alt_mem_epcs_flash_controller_0+0xff83fbc4>
  848bdc:	2244b03a 	or	r2,r4,r9
  848be0:	1004c03a 	cmpne	r2,r2,zero
  848be4:	f800283a 	ret
  848be8:	3214b03a 	or	r10,r6,r8
  848bec:	503ff426 	beq	r10,zero,848bc0 <__alt_mem_epcs_flash_controller_0+0xff83fbc0>
  848bf0:	00800044 	movi	r2,1
  848bf4:	f800283a 	ret
  848bf8:	2254b03a 	or	r10,r4,r9
  848bfc:	503fee26 	beq	r10,zero,848bb8 <__alt_mem_epcs_flash_controller_0+0xff83fbb8>
  848c00:	00800044 	movi	r2,1
  848c04:	f800283a 	ret
  848c08:	0005883a 	mov	r2,zero
  848c0c:	f800283a 	ret

00848c10 <__gedf2>:
  848c10:	2804d53a 	srli	r2,r5,20
  848c14:	3806d53a 	srli	r3,r7,20
  848c18:	02000434 	movhi	r8,16
  848c1c:	423fffc4 	addi	r8,r8,-1
  848c20:	1081ffcc 	andi	r2,r2,2047
  848c24:	0241ffc4 	movi	r9,2047
  848c28:	2a14703a 	and	r10,r5,r8
  848c2c:	18c1ffcc 	andi	r3,r3,2047
  848c30:	3a10703a 	and	r8,r7,r8
  848c34:	280ad7fa 	srli	r5,r5,31
  848c38:	380ed7fa 	srli	r7,r7,31
  848c3c:	12401d26 	beq	r2,r9,848cb4 <__gedf2+0xa4>
  848c40:	0241ffc4 	movi	r9,2047
  848c44:	1a401226 	beq	r3,r9,848c90 <__gedf2+0x80>
  848c48:	1000081e 	bne	r2,zero,848c6c <__gedf2+0x5c>
  848c4c:	2296b03a 	or	r11,r4,r10
  848c50:	5813003a 	cmpeq	r9,r11,zero
  848c54:	1800091e 	bne	r3,zero,848c7c <__gedf2+0x6c>
  848c58:	3218b03a 	or	r12,r6,r8
  848c5c:	6000071e 	bne	r12,zero,848c7c <__gedf2+0x6c>
  848c60:	0005883a 	mov	r2,zero
  848c64:	5800101e 	bne	r11,zero,848ca8 <__gedf2+0x98>
  848c68:	f800283a 	ret
  848c6c:	18000c1e 	bne	r3,zero,848ca0 <__gedf2+0x90>
  848c70:	3212b03a 	or	r9,r6,r8
  848c74:	48000c26 	beq	r9,zero,848ca8 <__gedf2+0x98>
  848c78:	0013883a 	mov	r9,zero
  848c7c:	39c03fcc 	andi	r7,r7,255
  848c80:	48000826 	beq	r9,zero,848ca4 <__gedf2+0x94>
  848c84:	38000926 	beq	r7,zero,848cac <__gedf2+0x9c>
  848c88:	00800044 	movi	r2,1
  848c8c:	f800283a 	ret
  848c90:	3212b03a 	or	r9,r6,r8
  848c94:	483fec26 	beq	r9,zero,848c48 <__alt_mem_epcs_flash_controller_0+0xff83fc48>
  848c98:	00bfff84 	movi	r2,-2
  848c9c:	f800283a 	ret
  848ca0:	39c03fcc 	andi	r7,r7,255
  848ca4:	29c00626 	beq	r5,r7,848cc0 <__gedf2+0xb0>
  848ca8:	283ff726 	beq	r5,zero,848c88 <__alt_mem_epcs_flash_controller_0+0xff83fc88>
  848cac:	00bfffc4 	movi	r2,-1
  848cb0:	f800283a 	ret
  848cb4:	2292b03a 	or	r9,r4,r10
  848cb8:	483fe126 	beq	r9,zero,848c40 <__alt_mem_epcs_flash_controller_0+0xff83fc40>
  848cbc:	003ff606 	br	848c98 <__alt_mem_epcs_flash_controller_0+0xff83fc98>
  848cc0:	18bff916 	blt	r3,r2,848ca8 <__alt_mem_epcs_flash_controller_0+0xff83fca8>
  848cc4:	10c00316 	blt	r2,r3,848cd4 <__gedf2+0xc4>
  848cc8:	42bff736 	bltu	r8,r10,848ca8 <__alt_mem_epcs_flash_controller_0+0xff83fca8>
  848ccc:	52000326 	beq	r10,r8,848cdc <__gedf2+0xcc>
  848cd0:	5200042e 	bgeu	r10,r8,848ce4 <__gedf2+0xd4>
  848cd4:	283fec1e 	bne	r5,zero,848c88 <__alt_mem_epcs_flash_controller_0+0xff83fc88>
  848cd8:	003ff406 	br	848cac <__alt_mem_epcs_flash_controller_0+0xff83fcac>
  848cdc:	313ff236 	bltu	r6,r4,848ca8 <__alt_mem_epcs_flash_controller_0+0xff83fca8>
  848ce0:	21bffc36 	bltu	r4,r6,848cd4 <__alt_mem_epcs_flash_controller_0+0xff83fcd4>
  848ce4:	0005883a 	mov	r2,zero
  848ce8:	f800283a 	ret

00848cec <__ledf2>:
  848cec:	2804d53a 	srli	r2,r5,20
  848cf0:	3810d53a 	srli	r8,r7,20
  848cf4:	00c00434 	movhi	r3,16
  848cf8:	18ffffc4 	addi	r3,r3,-1
  848cfc:	1081ffcc 	andi	r2,r2,2047
  848d00:	0241ffc4 	movi	r9,2047
  848d04:	28d4703a 	and	r10,r5,r3
  848d08:	4201ffcc 	andi	r8,r8,2047
  848d0c:	38c6703a 	and	r3,r7,r3
  848d10:	280ad7fa 	srli	r5,r5,31
  848d14:	380ed7fa 	srli	r7,r7,31
  848d18:	12401f26 	beq	r2,r9,848d98 <__ledf2+0xac>
  848d1c:	0241ffc4 	movi	r9,2047
  848d20:	42401426 	beq	r8,r9,848d74 <__ledf2+0x88>
  848d24:	1000091e 	bne	r2,zero,848d4c <__ledf2+0x60>
  848d28:	2296b03a 	or	r11,r4,r10
  848d2c:	5813003a 	cmpeq	r9,r11,zero
  848d30:	29403fcc 	andi	r5,r5,255
  848d34:	40000a1e 	bne	r8,zero,848d60 <__ledf2+0x74>
  848d38:	30d8b03a 	or	r12,r6,r3
  848d3c:	6000081e 	bne	r12,zero,848d60 <__ledf2+0x74>
  848d40:	0005883a 	mov	r2,zero
  848d44:	5800111e 	bne	r11,zero,848d8c <__ledf2+0xa0>
  848d48:	f800283a 	ret
  848d4c:	29403fcc 	andi	r5,r5,255
  848d50:	40000c1e 	bne	r8,zero,848d84 <__ledf2+0x98>
  848d54:	30d2b03a 	or	r9,r6,r3
  848d58:	48000c26 	beq	r9,zero,848d8c <__ledf2+0xa0>
  848d5c:	0013883a 	mov	r9,zero
  848d60:	39c03fcc 	andi	r7,r7,255
  848d64:	48000826 	beq	r9,zero,848d88 <__ledf2+0x9c>
  848d68:	38001126 	beq	r7,zero,848db0 <__ledf2+0xc4>
  848d6c:	00800044 	movi	r2,1
  848d70:	f800283a 	ret
  848d74:	30d2b03a 	or	r9,r6,r3
  848d78:	483fea26 	beq	r9,zero,848d24 <__alt_mem_epcs_flash_controller_0+0xff83fd24>
  848d7c:	00800084 	movi	r2,2
  848d80:	f800283a 	ret
  848d84:	39c03fcc 	andi	r7,r7,255
  848d88:	39400726 	beq	r7,r5,848da8 <__ledf2+0xbc>
  848d8c:	2800081e 	bne	r5,zero,848db0 <__ledf2+0xc4>
  848d90:	00800044 	movi	r2,1
  848d94:	f800283a 	ret
  848d98:	2292b03a 	or	r9,r4,r10
  848d9c:	483fdf26 	beq	r9,zero,848d1c <__alt_mem_epcs_flash_controller_0+0xff83fd1c>
  848da0:	00800084 	movi	r2,2
  848da4:	f800283a 	ret
  848da8:	4080030e 	bge	r8,r2,848db8 <__ledf2+0xcc>
  848dac:	383fef26 	beq	r7,zero,848d6c <__alt_mem_epcs_flash_controller_0+0xff83fd6c>
  848db0:	00bfffc4 	movi	r2,-1
  848db4:	f800283a 	ret
  848db8:	123feb16 	blt	r2,r8,848d68 <__alt_mem_epcs_flash_controller_0+0xff83fd68>
  848dbc:	1abff336 	bltu	r3,r10,848d8c <__alt_mem_epcs_flash_controller_0+0xff83fd8c>
  848dc0:	50c00326 	beq	r10,r3,848dd0 <__ledf2+0xe4>
  848dc4:	50c0042e 	bgeu	r10,r3,848dd8 <__ledf2+0xec>
  848dc8:	283fe81e 	bne	r5,zero,848d6c <__alt_mem_epcs_flash_controller_0+0xff83fd6c>
  848dcc:	003ff806 	br	848db0 <__alt_mem_epcs_flash_controller_0+0xff83fdb0>
  848dd0:	313fee36 	bltu	r6,r4,848d8c <__alt_mem_epcs_flash_controller_0+0xff83fd8c>
  848dd4:	21bffc36 	bltu	r4,r6,848dc8 <__alt_mem_epcs_flash_controller_0+0xff83fdc8>
  848dd8:	0005883a 	mov	r2,zero
  848ddc:	f800283a 	ret

00848de0 <__subdf3>:
  848de0:	02000434 	movhi	r8,16
  848de4:	423fffc4 	addi	r8,r8,-1
  848de8:	defffb04 	addi	sp,sp,-20
  848dec:	2a14703a 	and	r10,r5,r8
  848df0:	3812d53a 	srli	r9,r7,20
  848df4:	3a10703a 	and	r8,r7,r8
  848df8:	2006d77a 	srli	r3,r4,29
  848dfc:	3004d77a 	srli	r2,r6,29
  848e00:	dc000015 	stw	r16,0(sp)
  848e04:	501490fa 	slli	r10,r10,3
  848e08:	2820d53a 	srli	r16,r5,20
  848e0c:	401090fa 	slli	r8,r8,3
  848e10:	dc800215 	stw	r18,8(sp)
  848e14:	dc400115 	stw	r17,4(sp)
  848e18:	dfc00415 	stw	ra,16(sp)
  848e1c:	202290fa 	slli	r17,r4,3
  848e20:	dcc00315 	stw	r19,12(sp)
  848e24:	4a41ffcc 	andi	r9,r9,2047
  848e28:	0101ffc4 	movi	r4,2047
  848e2c:	2824d7fa 	srli	r18,r5,31
  848e30:	8401ffcc 	andi	r16,r16,2047
  848e34:	50c6b03a 	or	r3,r10,r3
  848e38:	380ed7fa 	srli	r7,r7,31
  848e3c:	408ab03a 	or	r5,r8,r2
  848e40:	300c90fa 	slli	r6,r6,3
  848e44:	49009626 	beq	r9,r4,8490a0 <__subdf3+0x2c0>
  848e48:	39c0005c 	xori	r7,r7,1
  848e4c:	8245c83a 	sub	r2,r16,r9
  848e50:	3c807426 	beq	r7,r18,849024 <__subdf3+0x244>
  848e54:	0080af0e 	bge	zero,r2,849114 <__subdf3+0x334>
  848e58:	48002a1e 	bne	r9,zero,848f04 <__subdf3+0x124>
  848e5c:	2988b03a 	or	r4,r5,r6
  848e60:	20009a1e 	bne	r4,zero,8490cc <__subdf3+0x2ec>
  848e64:	888001cc 	andi	r2,r17,7
  848e68:	10000726 	beq	r2,zero,848e88 <__subdf3+0xa8>
  848e6c:	888003cc 	andi	r2,r17,15
  848e70:	01000104 	movi	r4,4
  848e74:	11000426 	beq	r2,r4,848e88 <__subdf3+0xa8>
  848e78:	890b883a 	add	r5,r17,r4
  848e7c:	2c63803a 	cmpltu	r17,r5,r17
  848e80:	1c47883a 	add	r3,r3,r17
  848e84:	2823883a 	mov	r17,r5
  848e88:	1880202c 	andhi	r2,r3,128
  848e8c:	10005926 	beq	r2,zero,848ff4 <__subdf3+0x214>
  848e90:	84000044 	addi	r16,r16,1
  848e94:	0081ffc4 	movi	r2,2047
  848e98:	8080be26 	beq	r16,r2,849194 <__subdf3+0x3b4>
  848e9c:	017fe034 	movhi	r5,65408
  848ea0:	297fffc4 	addi	r5,r5,-1
  848ea4:	1946703a 	and	r3,r3,r5
  848ea8:	1804977a 	slli	r2,r3,29
  848eac:	1806927a 	slli	r3,r3,9
  848eb0:	8822d0fa 	srli	r17,r17,3
  848eb4:	8401ffcc 	andi	r16,r16,2047
  848eb8:	180ad33a 	srli	r5,r3,12
  848ebc:	9100004c 	andi	r4,r18,1
  848ec0:	1444b03a 	or	r2,r2,r17
  848ec4:	80c1ffcc 	andi	r3,r16,2047
  848ec8:	1820953a 	slli	r16,r3,20
  848ecc:	20c03fcc 	andi	r3,r4,255
  848ed0:	180897fa 	slli	r4,r3,31
  848ed4:	00c00434 	movhi	r3,16
  848ed8:	18ffffc4 	addi	r3,r3,-1
  848edc:	28c6703a 	and	r3,r5,r3
  848ee0:	1c06b03a 	or	r3,r3,r16
  848ee4:	1906b03a 	or	r3,r3,r4
  848ee8:	dfc00417 	ldw	ra,16(sp)
  848eec:	dcc00317 	ldw	r19,12(sp)
  848ef0:	dc800217 	ldw	r18,8(sp)
  848ef4:	dc400117 	ldw	r17,4(sp)
  848ef8:	dc000017 	ldw	r16,0(sp)
  848efc:	dec00504 	addi	sp,sp,20
  848f00:	f800283a 	ret
  848f04:	0101ffc4 	movi	r4,2047
  848f08:	813fd626 	beq	r16,r4,848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  848f0c:	29402034 	orhi	r5,r5,128
  848f10:	01000e04 	movi	r4,56
  848f14:	2080a316 	blt	r4,r2,8491a4 <__subdf3+0x3c4>
  848f18:	010007c4 	movi	r4,31
  848f1c:	2080c616 	blt	r4,r2,849238 <__subdf3+0x458>
  848f20:	01000804 	movi	r4,32
  848f24:	2089c83a 	sub	r4,r4,r2
  848f28:	2910983a 	sll	r8,r5,r4
  848f2c:	308ed83a 	srl	r7,r6,r2
  848f30:	3108983a 	sll	r4,r6,r4
  848f34:	2884d83a 	srl	r2,r5,r2
  848f38:	41ccb03a 	or	r6,r8,r7
  848f3c:	2008c03a 	cmpne	r4,r4,zero
  848f40:	310cb03a 	or	r6,r6,r4
  848f44:	898dc83a 	sub	r6,r17,r6
  848f48:	89a3803a 	cmpltu	r17,r17,r6
  848f4c:	1887c83a 	sub	r3,r3,r2
  848f50:	1c47c83a 	sub	r3,r3,r17
  848f54:	3023883a 	mov	r17,r6
  848f58:	1880202c 	andhi	r2,r3,128
  848f5c:	10002326 	beq	r2,zero,848fec <__subdf3+0x20c>
  848f60:	04c02034 	movhi	r19,128
  848f64:	9cffffc4 	addi	r19,r19,-1
  848f68:	1ce6703a 	and	r19,r3,r19
  848f6c:	98007a26 	beq	r19,zero,849158 <__subdf3+0x378>
  848f70:	9809883a 	mov	r4,r19
  848f74:	0831c3c0 	call	831c3c <__clzsi2>
  848f78:	113ffe04 	addi	r4,r2,-8
  848f7c:	00c007c4 	movi	r3,31
  848f80:	19007b16 	blt	r3,r4,849170 <__subdf3+0x390>
  848f84:	00800804 	movi	r2,32
  848f88:	1105c83a 	sub	r2,r2,r4
  848f8c:	8884d83a 	srl	r2,r17,r2
  848f90:	9906983a 	sll	r3,r19,r4
  848f94:	8922983a 	sll	r17,r17,r4
  848f98:	10c4b03a 	or	r2,r2,r3
  848f9c:	24007816 	blt	r4,r16,849180 <__subdf3+0x3a0>
  848fa0:	2421c83a 	sub	r16,r4,r16
  848fa4:	80c00044 	addi	r3,r16,1
  848fa8:	010007c4 	movi	r4,31
  848fac:	20c09516 	blt	r4,r3,849204 <__subdf3+0x424>
  848fb0:	01400804 	movi	r5,32
  848fb4:	28cbc83a 	sub	r5,r5,r3
  848fb8:	88c8d83a 	srl	r4,r17,r3
  848fbc:	8962983a 	sll	r17,r17,r5
  848fc0:	114a983a 	sll	r5,r2,r5
  848fc4:	10c6d83a 	srl	r3,r2,r3
  848fc8:	8804c03a 	cmpne	r2,r17,zero
  848fcc:	290ab03a 	or	r5,r5,r4
  848fd0:	28a2b03a 	or	r17,r5,r2
  848fd4:	0021883a 	mov	r16,zero
  848fd8:	003fa206 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  848fdc:	2090b03a 	or	r8,r4,r2
  848fe0:	40018e26 	beq	r8,zero,84961c <__subdf3+0x83c>
  848fe4:	1007883a 	mov	r3,r2
  848fe8:	2023883a 	mov	r17,r4
  848fec:	888001cc 	andi	r2,r17,7
  848ff0:	103f9e1e 	bne	r2,zero,848e6c <__alt_mem_epcs_flash_controller_0+0xff83fe6c>
  848ff4:	1804977a 	slli	r2,r3,29
  848ff8:	8822d0fa 	srli	r17,r17,3
  848ffc:	1810d0fa 	srli	r8,r3,3
  849000:	9100004c 	andi	r4,r18,1
  849004:	1444b03a 	or	r2,r2,r17
  849008:	00c1ffc4 	movi	r3,2047
  84900c:	80c02826 	beq	r16,r3,8490b0 <__subdf3+0x2d0>
  849010:	01400434 	movhi	r5,16
  849014:	297fffc4 	addi	r5,r5,-1
  849018:	80e0703a 	and	r16,r16,r3
  84901c:	414a703a 	and	r5,r8,r5
  849020:	003fa806 	br	848ec4 <__alt_mem_epcs_flash_controller_0+0xff83fec4>
  849024:	0080630e 	bge	zero,r2,8491b4 <__subdf3+0x3d4>
  849028:	48003026 	beq	r9,zero,8490ec <__subdf3+0x30c>
  84902c:	0101ffc4 	movi	r4,2047
  849030:	813f8c26 	beq	r16,r4,848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  849034:	29402034 	orhi	r5,r5,128
  849038:	01000e04 	movi	r4,56
  84903c:	2080a90e 	bge	r4,r2,8492e4 <__subdf3+0x504>
  849040:	298cb03a 	or	r6,r5,r6
  849044:	3012c03a 	cmpne	r9,r6,zero
  849048:	0005883a 	mov	r2,zero
  84904c:	4c53883a 	add	r9,r9,r17
  849050:	4c63803a 	cmpltu	r17,r9,r17
  849054:	10c7883a 	add	r3,r2,r3
  849058:	88c7883a 	add	r3,r17,r3
  84905c:	4823883a 	mov	r17,r9
  849060:	1880202c 	andhi	r2,r3,128
  849064:	1000d026 	beq	r2,zero,8493a8 <__subdf3+0x5c8>
  849068:	84000044 	addi	r16,r16,1
  84906c:	0081ffc4 	movi	r2,2047
  849070:	8080fe26 	beq	r16,r2,84946c <__subdf3+0x68c>
  849074:	00bfe034 	movhi	r2,65408
  849078:	10bfffc4 	addi	r2,r2,-1
  84907c:	1886703a 	and	r3,r3,r2
  849080:	880ad07a 	srli	r5,r17,1
  849084:	180497fa 	slli	r2,r3,31
  849088:	8900004c 	andi	r4,r17,1
  84908c:	2922b03a 	or	r17,r5,r4
  849090:	1806d07a 	srli	r3,r3,1
  849094:	1462b03a 	or	r17,r2,r17
  849098:	3825883a 	mov	r18,r7
  84909c:	003f7106 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  8490a0:	2984b03a 	or	r2,r5,r6
  8490a4:	103f6826 	beq	r2,zero,848e48 <__alt_mem_epcs_flash_controller_0+0xff83fe48>
  8490a8:	39c03fcc 	andi	r7,r7,255
  8490ac:	003f6706 	br	848e4c <__alt_mem_epcs_flash_controller_0+0xff83fe4c>
  8490b0:	4086b03a 	or	r3,r8,r2
  8490b4:	18015226 	beq	r3,zero,849600 <__subdf3+0x820>
  8490b8:	00c00434 	movhi	r3,16
  8490bc:	41400234 	orhi	r5,r8,8
  8490c0:	18ffffc4 	addi	r3,r3,-1
  8490c4:	28ca703a 	and	r5,r5,r3
  8490c8:	003f7e06 	br	848ec4 <__alt_mem_epcs_flash_controller_0+0xff83fec4>
  8490cc:	10bfffc4 	addi	r2,r2,-1
  8490d0:	1000491e 	bne	r2,zero,8491f8 <__subdf3+0x418>
  8490d4:	898fc83a 	sub	r7,r17,r6
  8490d8:	89e3803a 	cmpltu	r17,r17,r7
  8490dc:	1947c83a 	sub	r3,r3,r5
  8490e0:	1c47c83a 	sub	r3,r3,r17
  8490e4:	3823883a 	mov	r17,r7
  8490e8:	003f9b06 	br	848f58 <__alt_mem_epcs_flash_controller_0+0xff83ff58>
  8490ec:	2988b03a 	or	r4,r5,r6
  8490f0:	203f5c26 	beq	r4,zero,848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  8490f4:	10bfffc4 	addi	r2,r2,-1
  8490f8:	1000931e 	bne	r2,zero,849348 <__subdf3+0x568>
  8490fc:	898d883a 	add	r6,r17,r6
  849100:	3463803a 	cmpltu	r17,r6,r17
  849104:	1947883a 	add	r3,r3,r5
  849108:	88c7883a 	add	r3,r17,r3
  84910c:	3023883a 	mov	r17,r6
  849110:	003fd306 	br	849060 <__alt_mem_epcs_flash_controller_0+0xff840060>
  849114:	1000541e 	bne	r2,zero,849268 <__subdf3+0x488>
  849118:	80800044 	addi	r2,r16,1
  84911c:	1081ffcc 	andi	r2,r2,2047
  849120:	01000044 	movi	r4,1
  849124:	2080a20e 	bge	r4,r2,8493b0 <__subdf3+0x5d0>
  849128:	8989c83a 	sub	r4,r17,r6
  84912c:	8905803a 	cmpltu	r2,r17,r4
  849130:	1967c83a 	sub	r19,r3,r5
  849134:	98a7c83a 	sub	r19,r19,r2
  849138:	9880202c 	andhi	r2,r19,128
  84913c:	10006326 	beq	r2,zero,8492cc <__subdf3+0x4ec>
  849140:	3463c83a 	sub	r17,r6,r17
  849144:	28c7c83a 	sub	r3,r5,r3
  849148:	344d803a 	cmpltu	r6,r6,r17
  84914c:	19a7c83a 	sub	r19,r3,r6
  849150:	3825883a 	mov	r18,r7
  849154:	983f861e 	bne	r19,zero,848f70 <__alt_mem_epcs_flash_controller_0+0xff83ff70>
  849158:	8809883a 	mov	r4,r17
  84915c:	0831c3c0 	call	831c3c <__clzsi2>
  849160:	10800804 	addi	r2,r2,32
  849164:	113ffe04 	addi	r4,r2,-8
  849168:	00c007c4 	movi	r3,31
  84916c:	193f850e 	bge	r3,r4,848f84 <__alt_mem_epcs_flash_controller_0+0xff83ff84>
  849170:	10bff604 	addi	r2,r2,-40
  849174:	8884983a 	sll	r2,r17,r2
  849178:	0023883a 	mov	r17,zero
  84917c:	243f880e 	bge	r4,r16,848fa0 <__alt_mem_epcs_flash_controller_0+0xff83ffa0>
  849180:	00ffe034 	movhi	r3,65408
  849184:	18ffffc4 	addi	r3,r3,-1
  849188:	8121c83a 	sub	r16,r16,r4
  84918c:	10c6703a 	and	r3,r2,r3
  849190:	003f3406 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  849194:	9100004c 	andi	r4,r18,1
  849198:	000b883a 	mov	r5,zero
  84919c:	0005883a 	mov	r2,zero
  8491a0:	003f4806 	br	848ec4 <__alt_mem_epcs_flash_controller_0+0xff83fec4>
  8491a4:	298cb03a 	or	r6,r5,r6
  8491a8:	300cc03a 	cmpne	r6,r6,zero
  8491ac:	0005883a 	mov	r2,zero
  8491b0:	003f6406 	br	848f44 <__alt_mem_epcs_flash_controller_0+0xff83ff44>
  8491b4:	10009a1e 	bne	r2,zero,849420 <__subdf3+0x640>
  8491b8:	82400044 	addi	r9,r16,1
  8491bc:	4881ffcc 	andi	r2,r9,2047
  8491c0:	02800044 	movi	r10,1
  8491c4:	5080670e 	bge	r10,r2,849364 <__subdf3+0x584>
  8491c8:	0081ffc4 	movi	r2,2047
  8491cc:	4880af26 	beq	r9,r2,84948c <__subdf3+0x6ac>
  8491d0:	898d883a 	add	r6,r17,r6
  8491d4:	1945883a 	add	r2,r3,r5
  8491d8:	3447803a 	cmpltu	r3,r6,r17
  8491dc:	1887883a 	add	r3,r3,r2
  8491e0:	182297fa 	slli	r17,r3,31
  8491e4:	300cd07a 	srli	r6,r6,1
  8491e8:	1806d07a 	srli	r3,r3,1
  8491ec:	4821883a 	mov	r16,r9
  8491f0:	89a2b03a 	or	r17,r17,r6
  8491f4:	003f1b06 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  8491f8:	0101ffc4 	movi	r4,2047
  8491fc:	813f441e 	bne	r16,r4,848f10 <__alt_mem_epcs_flash_controller_0+0xff83ff10>
  849200:	003f1806 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  849204:	843ff844 	addi	r16,r16,-31
  849208:	01400804 	movi	r5,32
  84920c:	1408d83a 	srl	r4,r2,r16
  849210:	19405026 	beq	r3,r5,849354 <__subdf3+0x574>
  849214:	01401004 	movi	r5,64
  849218:	28c7c83a 	sub	r3,r5,r3
  84921c:	10c4983a 	sll	r2,r2,r3
  849220:	88a2b03a 	or	r17,r17,r2
  849224:	8822c03a 	cmpne	r17,r17,zero
  849228:	2462b03a 	or	r17,r4,r17
  84922c:	0007883a 	mov	r3,zero
  849230:	0021883a 	mov	r16,zero
  849234:	003f6d06 	br	848fec <__alt_mem_epcs_flash_controller_0+0xff83ffec>
  849238:	11fff804 	addi	r7,r2,-32
  84923c:	01000804 	movi	r4,32
  849240:	29ced83a 	srl	r7,r5,r7
  849244:	11004526 	beq	r2,r4,84935c <__subdf3+0x57c>
  849248:	01001004 	movi	r4,64
  84924c:	2089c83a 	sub	r4,r4,r2
  849250:	2904983a 	sll	r2,r5,r4
  849254:	118cb03a 	or	r6,r2,r6
  849258:	300cc03a 	cmpne	r6,r6,zero
  84925c:	398cb03a 	or	r6,r7,r6
  849260:	0005883a 	mov	r2,zero
  849264:	003f3706 	br	848f44 <__alt_mem_epcs_flash_controller_0+0xff83ff44>
  849268:	80002a26 	beq	r16,zero,849314 <__subdf3+0x534>
  84926c:	0101ffc4 	movi	r4,2047
  849270:	49006626 	beq	r9,r4,84940c <__subdf3+0x62c>
  849274:	0085c83a 	sub	r2,zero,r2
  849278:	18c02034 	orhi	r3,r3,128
  84927c:	01000e04 	movi	r4,56
  849280:	20807e16 	blt	r4,r2,84947c <__subdf3+0x69c>
  849284:	010007c4 	movi	r4,31
  849288:	2080e716 	blt	r4,r2,849628 <__subdf3+0x848>
  84928c:	01000804 	movi	r4,32
  849290:	2089c83a 	sub	r4,r4,r2
  849294:	1914983a 	sll	r10,r3,r4
  849298:	8890d83a 	srl	r8,r17,r2
  84929c:	8908983a 	sll	r4,r17,r4
  8492a0:	1884d83a 	srl	r2,r3,r2
  8492a4:	5222b03a 	or	r17,r10,r8
  8492a8:	2006c03a 	cmpne	r3,r4,zero
  8492ac:	88e2b03a 	or	r17,r17,r3
  8492b0:	3463c83a 	sub	r17,r6,r17
  8492b4:	2885c83a 	sub	r2,r5,r2
  8492b8:	344d803a 	cmpltu	r6,r6,r17
  8492bc:	1187c83a 	sub	r3,r2,r6
  8492c0:	4821883a 	mov	r16,r9
  8492c4:	3825883a 	mov	r18,r7
  8492c8:	003f2306 	br	848f58 <__alt_mem_epcs_flash_controller_0+0xff83ff58>
  8492cc:	24d0b03a 	or	r8,r4,r19
  8492d0:	40001b1e 	bne	r8,zero,849340 <__subdf3+0x560>
  8492d4:	0005883a 	mov	r2,zero
  8492d8:	0009883a 	mov	r4,zero
  8492dc:	0021883a 	mov	r16,zero
  8492e0:	003f4906 	br	849008 <__alt_mem_epcs_flash_controller_0+0xff840008>
  8492e4:	010007c4 	movi	r4,31
  8492e8:	20803a16 	blt	r4,r2,8493d4 <__subdf3+0x5f4>
  8492ec:	01000804 	movi	r4,32
  8492f0:	2089c83a 	sub	r4,r4,r2
  8492f4:	2912983a 	sll	r9,r5,r4
  8492f8:	3090d83a 	srl	r8,r6,r2
  8492fc:	3108983a 	sll	r4,r6,r4
  849300:	2884d83a 	srl	r2,r5,r2
  849304:	4a12b03a 	or	r9,r9,r8
  849308:	2008c03a 	cmpne	r4,r4,zero
  84930c:	4912b03a 	or	r9,r9,r4
  849310:	003f4e06 	br	84904c <__alt_mem_epcs_flash_controller_0+0xff84004c>
  849314:	1c48b03a 	or	r4,r3,r17
  849318:	20003c26 	beq	r4,zero,84940c <__subdf3+0x62c>
  84931c:	0084303a 	nor	r2,zero,r2
  849320:	1000381e 	bne	r2,zero,849404 <__subdf3+0x624>
  849324:	3463c83a 	sub	r17,r6,r17
  849328:	28c5c83a 	sub	r2,r5,r3
  84932c:	344d803a 	cmpltu	r6,r6,r17
  849330:	1187c83a 	sub	r3,r2,r6
  849334:	4821883a 	mov	r16,r9
  849338:	3825883a 	mov	r18,r7
  84933c:	003f0606 	br	848f58 <__alt_mem_epcs_flash_controller_0+0xff83ff58>
  849340:	2023883a 	mov	r17,r4
  849344:	003f0906 	br	848f6c <__alt_mem_epcs_flash_controller_0+0xff83ff6c>
  849348:	0101ffc4 	movi	r4,2047
  84934c:	813f3a1e 	bne	r16,r4,849038 <__alt_mem_epcs_flash_controller_0+0xff840038>
  849350:	003ec406 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  849354:	0005883a 	mov	r2,zero
  849358:	003fb106 	br	849220 <__alt_mem_epcs_flash_controller_0+0xff840220>
  84935c:	0005883a 	mov	r2,zero
  849360:	003fbc06 	br	849254 <__alt_mem_epcs_flash_controller_0+0xff840254>
  849364:	1c44b03a 	or	r2,r3,r17
  849368:	80008e1e 	bne	r16,zero,8495a4 <__subdf3+0x7c4>
  84936c:	1000c826 	beq	r2,zero,849690 <__subdf3+0x8b0>
  849370:	2984b03a 	or	r2,r5,r6
  849374:	103ebb26 	beq	r2,zero,848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  849378:	8989883a 	add	r4,r17,r6
  84937c:	1945883a 	add	r2,r3,r5
  849380:	2447803a 	cmpltu	r3,r4,r17
  849384:	1887883a 	add	r3,r3,r2
  849388:	1880202c 	andhi	r2,r3,128
  84938c:	2023883a 	mov	r17,r4
  849390:	103f1626 	beq	r2,zero,848fec <__alt_mem_epcs_flash_controller_0+0xff83ffec>
  849394:	00bfe034 	movhi	r2,65408
  849398:	10bfffc4 	addi	r2,r2,-1
  84939c:	5021883a 	mov	r16,r10
  8493a0:	1886703a 	and	r3,r3,r2
  8493a4:	003eaf06 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  8493a8:	3825883a 	mov	r18,r7
  8493ac:	003f0f06 	br	848fec <__alt_mem_epcs_flash_controller_0+0xff83ffec>
  8493b0:	1c44b03a 	or	r2,r3,r17
  8493b4:	8000251e 	bne	r16,zero,84944c <__subdf3+0x66c>
  8493b8:	1000661e 	bne	r2,zero,849554 <__subdf3+0x774>
  8493bc:	2990b03a 	or	r8,r5,r6
  8493c0:	40009626 	beq	r8,zero,84961c <__subdf3+0x83c>
  8493c4:	2807883a 	mov	r3,r5
  8493c8:	3023883a 	mov	r17,r6
  8493cc:	3825883a 	mov	r18,r7
  8493d0:	003ea406 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  8493d4:	127ff804 	addi	r9,r2,-32
  8493d8:	01000804 	movi	r4,32
  8493dc:	2a52d83a 	srl	r9,r5,r9
  8493e0:	11008c26 	beq	r2,r4,849614 <__subdf3+0x834>
  8493e4:	01001004 	movi	r4,64
  8493e8:	2085c83a 	sub	r2,r4,r2
  8493ec:	2884983a 	sll	r2,r5,r2
  8493f0:	118cb03a 	or	r6,r2,r6
  8493f4:	300cc03a 	cmpne	r6,r6,zero
  8493f8:	4992b03a 	or	r9,r9,r6
  8493fc:	0005883a 	mov	r2,zero
  849400:	003f1206 	br	84904c <__alt_mem_epcs_flash_controller_0+0xff84004c>
  849404:	0101ffc4 	movi	r4,2047
  849408:	493f9c1e 	bne	r9,r4,84927c <__alt_mem_epcs_flash_controller_0+0xff84027c>
  84940c:	2807883a 	mov	r3,r5
  849410:	3023883a 	mov	r17,r6
  849414:	4821883a 	mov	r16,r9
  849418:	3825883a 	mov	r18,r7
  84941c:	003e9106 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  849420:	80001f1e 	bne	r16,zero,8494a0 <__subdf3+0x6c0>
  849424:	1c48b03a 	or	r4,r3,r17
  849428:	20005a26 	beq	r4,zero,849594 <__subdf3+0x7b4>
  84942c:	0084303a 	nor	r2,zero,r2
  849430:	1000561e 	bne	r2,zero,84958c <__subdf3+0x7ac>
  849434:	89a3883a 	add	r17,r17,r6
  849438:	1945883a 	add	r2,r3,r5
  84943c:	898d803a 	cmpltu	r6,r17,r6
  849440:	3087883a 	add	r3,r6,r2
  849444:	4821883a 	mov	r16,r9
  849448:	003f0506 	br	849060 <__alt_mem_epcs_flash_controller_0+0xff840060>
  84944c:	10002b1e 	bne	r2,zero,8494fc <__subdf3+0x71c>
  849450:	2984b03a 	or	r2,r5,r6
  849454:	10008026 	beq	r2,zero,849658 <__subdf3+0x878>
  849458:	2807883a 	mov	r3,r5
  84945c:	3023883a 	mov	r17,r6
  849460:	3825883a 	mov	r18,r7
  849464:	0401ffc4 	movi	r16,2047
  849468:	003e7e06 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  84946c:	3809883a 	mov	r4,r7
  849470:	0011883a 	mov	r8,zero
  849474:	0005883a 	mov	r2,zero
  849478:	003ee306 	br	849008 <__alt_mem_epcs_flash_controller_0+0xff840008>
  84947c:	1c62b03a 	or	r17,r3,r17
  849480:	8822c03a 	cmpne	r17,r17,zero
  849484:	0005883a 	mov	r2,zero
  849488:	003f8906 	br	8492b0 <__alt_mem_epcs_flash_controller_0+0xff8402b0>
  84948c:	3809883a 	mov	r4,r7
  849490:	4821883a 	mov	r16,r9
  849494:	0011883a 	mov	r8,zero
  849498:	0005883a 	mov	r2,zero
  84949c:	003eda06 	br	849008 <__alt_mem_epcs_flash_controller_0+0xff840008>
  8494a0:	0101ffc4 	movi	r4,2047
  8494a4:	49003b26 	beq	r9,r4,849594 <__subdf3+0x7b4>
  8494a8:	0085c83a 	sub	r2,zero,r2
  8494ac:	18c02034 	orhi	r3,r3,128
  8494b0:	01000e04 	movi	r4,56
  8494b4:	20806e16 	blt	r4,r2,849670 <__subdf3+0x890>
  8494b8:	010007c4 	movi	r4,31
  8494bc:	20807716 	blt	r4,r2,84969c <__subdf3+0x8bc>
  8494c0:	01000804 	movi	r4,32
  8494c4:	2089c83a 	sub	r4,r4,r2
  8494c8:	1914983a 	sll	r10,r3,r4
  8494cc:	8890d83a 	srl	r8,r17,r2
  8494d0:	8908983a 	sll	r4,r17,r4
  8494d4:	1884d83a 	srl	r2,r3,r2
  8494d8:	5222b03a 	or	r17,r10,r8
  8494dc:	2006c03a 	cmpne	r3,r4,zero
  8494e0:	88e2b03a 	or	r17,r17,r3
  8494e4:	89a3883a 	add	r17,r17,r6
  8494e8:	1145883a 	add	r2,r2,r5
  8494ec:	898d803a 	cmpltu	r6,r17,r6
  8494f0:	3087883a 	add	r3,r6,r2
  8494f4:	4821883a 	mov	r16,r9
  8494f8:	003ed906 	br	849060 <__alt_mem_epcs_flash_controller_0+0xff840060>
  8494fc:	2984b03a 	or	r2,r5,r6
  849500:	10004226 	beq	r2,zero,84960c <__subdf3+0x82c>
  849504:	1808d0fa 	srli	r4,r3,3
  849508:	8822d0fa 	srli	r17,r17,3
  84950c:	1806977a 	slli	r3,r3,29
  849510:	2080022c 	andhi	r2,r4,8
  849514:	1c62b03a 	or	r17,r3,r17
  849518:	10000826 	beq	r2,zero,84953c <__subdf3+0x75c>
  84951c:	2812d0fa 	srli	r9,r5,3
  849520:	4880022c 	andhi	r2,r9,8
  849524:	1000051e 	bne	r2,zero,84953c <__subdf3+0x75c>
  849528:	300cd0fa 	srli	r6,r6,3
  84952c:	2804977a 	slli	r2,r5,29
  849530:	4809883a 	mov	r4,r9
  849534:	3825883a 	mov	r18,r7
  849538:	11a2b03a 	or	r17,r2,r6
  84953c:	8806d77a 	srli	r3,r17,29
  849540:	200890fa 	slli	r4,r4,3
  849544:	882290fa 	slli	r17,r17,3
  849548:	0401ffc4 	movi	r16,2047
  84954c:	1906b03a 	or	r3,r3,r4
  849550:	003e4406 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  849554:	2984b03a 	or	r2,r5,r6
  849558:	103e4226 	beq	r2,zero,848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  84955c:	8989c83a 	sub	r4,r17,r6
  849560:	8911803a 	cmpltu	r8,r17,r4
  849564:	1945c83a 	sub	r2,r3,r5
  849568:	1205c83a 	sub	r2,r2,r8
  84956c:	1200202c 	andhi	r8,r2,128
  849570:	403e9a26 	beq	r8,zero,848fdc <__alt_mem_epcs_flash_controller_0+0xff83ffdc>
  849574:	3463c83a 	sub	r17,r6,r17
  849578:	28c5c83a 	sub	r2,r5,r3
  84957c:	344d803a 	cmpltu	r6,r6,r17
  849580:	1187c83a 	sub	r3,r2,r6
  849584:	3825883a 	mov	r18,r7
  849588:	003e3606 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  84958c:	0101ffc4 	movi	r4,2047
  849590:	493fc71e 	bne	r9,r4,8494b0 <__alt_mem_epcs_flash_controller_0+0xff8404b0>
  849594:	2807883a 	mov	r3,r5
  849598:	3023883a 	mov	r17,r6
  84959c:	4821883a 	mov	r16,r9
  8495a0:	003e3006 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  8495a4:	10003626 	beq	r2,zero,849680 <__subdf3+0x8a0>
  8495a8:	2984b03a 	or	r2,r5,r6
  8495ac:	10001726 	beq	r2,zero,84960c <__subdf3+0x82c>
  8495b0:	1808d0fa 	srli	r4,r3,3
  8495b4:	8822d0fa 	srli	r17,r17,3
  8495b8:	1806977a 	slli	r3,r3,29
  8495bc:	2080022c 	andhi	r2,r4,8
  8495c0:	1c62b03a 	or	r17,r3,r17
  8495c4:	10000726 	beq	r2,zero,8495e4 <__subdf3+0x804>
  8495c8:	2812d0fa 	srli	r9,r5,3
  8495cc:	4880022c 	andhi	r2,r9,8
  8495d0:	1000041e 	bne	r2,zero,8495e4 <__subdf3+0x804>
  8495d4:	300cd0fa 	srli	r6,r6,3
  8495d8:	2804977a 	slli	r2,r5,29
  8495dc:	4809883a 	mov	r4,r9
  8495e0:	11a2b03a 	or	r17,r2,r6
  8495e4:	8806d77a 	srli	r3,r17,29
  8495e8:	200890fa 	slli	r4,r4,3
  8495ec:	882290fa 	slli	r17,r17,3
  8495f0:	3825883a 	mov	r18,r7
  8495f4:	1906b03a 	or	r3,r3,r4
  8495f8:	0401ffc4 	movi	r16,2047
  8495fc:	003e1906 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  849600:	000b883a 	mov	r5,zero
  849604:	0005883a 	mov	r2,zero
  849608:	003e2e06 	br	848ec4 <__alt_mem_epcs_flash_controller_0+0xff83fec4>
  84960c:	0401ffc4 	movi	r16,2047
  849610:	003e1406 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  849614:	0005883a 	mov	r2,zero
  849618:	003f7506 	br	8493f0 <__alt_mem_epcs_flash_controller_0+0xff8403f0>
  84961c:	0005883a 	mov	r2,zero
  849620:	0009883a 	mov	r4,zero
  849624:	003e7806 	br	849008 <__alt_mem_epcs_flash_controller_0+0xff840008>
  849628:	123ff804 	addi	r8,r2,-32
  84962c:	01000804 	movi	r4,32
  849630:	1a10d83a 	srl	r8,r3,r8
  849634:	11002526 	beq	r2,r4,8496cc <__subdf3+0x8ec>
  849638:	01001004 	movi	r4,64
  84963c:	2085c83a 	sub	r2,r4,r2
  849640:	1884983a 	sll	r2,r3,r2
  849644:	1444b03a 	or	r2,r2,r17
  849648:	1004c03a 	cmpne	r2,r2,zero
  84964c:	40a2b03a 	or	r17,r8,r2
  849650:	0005883a 	mov	r2,zero
  849654:	003f1606 	br	8492b0 <__alt_mem_epcs_flash_controller_0+0xff8402b0>
  849658:	02000434 	movhi	r8,16
  84965c:	0009883a 	mov	r4,zero
  849660:	423fffc4 	addi	r8,r8,-1
  849664:	00bfffc4 	movi	r2,-1
  849668:	0401ffc4 	movi	r16,2047
  84966c:	003e6606 	br	849008 <__alt_mem_epcs_flash_controller_0+0xff840008>
  849670:	1c62b03a 	or	r17,r3,r17
  849674:	8822c03a 	cmpne	r17,r17,zero
  849678:	0005883a 	mov	r2,zero
  84967c:	003f9906 	br	8494e4 <__alt_mem_epcs_flash_controller_0+0xff8404e4>
  849680:	2807883a 	mov	r3,r5
  849684:	3023883a 	mov	r17,r6
  849688:	0401ffc4 	movi	r16,2047
  84968c:	003df506 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  849690:	2807883a 	mov	r3,r5
  849694:	3023883a 	mov	r17,r6
  849698:	003df206 	br	848e64 <__alt_mem_epcs_flash_controller_0+0xff83fe64>
  84969c:	123ff804 	addi	r8,r2,-32
  8496a0:	01000804 	movi	r4,32
  8496a4:	1a10d83a 	srl	r8,r3,r8
  8496a8:	11000a26 	beq	r2,r4,8496d4 <__subdf3+0x8f4>
  8496ac:	01001004 	movi	r4,64
  8496b0:	2085c83a 	sub	r2,r4,r2
  8496b4:	1884983a 	sll	r2,r3,r2
  8496b8:	1444b03a 	or	r2,r2,r17
  8496bc:	1004c03a 	cmpne	r2,r2,zero
  8496c0:	40a2b03a 	or	r17,r8,r2
  8496c4:	0005883a 	mov	r2,zero
  8496c8:	003f8606 	br	8494e4 <__alt_mem_epcs_flash_controller_0+0xff8404e4>
  8496cc:	0005883a 	mov	r2,zero
  8496d0:	003fdc06 	br	849644 <__alt_mem_epcs_flash_controller_0+0xff840644>
  8496d4:	0005883a 	mov	r2,zero
  8496d8:	003ff706 	br	8496b8 <__alt_mem_epcs_flash_controller_0+0xff8406b8>

008496dc <__fixdfsi>:
  8496dc:	280cd53a 	srli	r6,r5,20
  8496e0:	00c00434 	movhi	r3,16
  8496e4:	18ffffc4 	addi	r3,r3,-1
  8496e8:	3181ffcc 	andi	r6,r6,2047
  8496ec:	01c0ff84 	movi	r7,1022
  8496f0:	28c6703a 	and	r3,r5,r3
  8496f4:	280ad7fa 	srli	r5,r5,31
  8496f8:	3980120e 	bge	r7,r6,849744 <__fixdfsi+0x68>
  8496fc:	00810744 	movi	r2,1053
  849700:	11800c16 	blt	r2,r6,849734 <__fixdfsi+0x58>
  849704:	00810cc4 	movi	r2,1075
  849708:	1185c83a 	sub	r2,r2,r6
  84970c:	01c007c4 	movi	r7,31
  849710:	18c00434 	orhi	r3,r3,16
  849714:	38800d16 	blt	r7,r2,84974c <__fixdfsi+0x70>
  849718:	31befb44 	addi	r6,r6,-1043
  84971c:	2084d83a 	srl	r2,r4,r2
  849720:	1986983a 	sll	r3,r3,r6
  849724:	1884b03a 	or	r2,r3,r2
  849728:	28000726 	beq	r5,zero,849748 <__fixdfsi+0x6c>
  84972c:	0085c83a 	sub	r2,zero,r2
  849730:	f800283a 	ret
  849734:	00a00034 	movhi	r2,32768
  849738:	10bfffc4 	addi	r2,r2,-1
  84973c:	2885883a 	add	r2,r5,r2
  849740:	f800283a 	ret
  849744:	0005883a 	mov	r2,zero
  849748:	f800283a 	ret
  84974c:	008104c4 	movi	r2,1043
  849750:	1185c83a 	sub	r2,r2,r6
  849754:	1884d83a 	srl	r2,r3,r2
  849758:	003ff306 	br	849728 <__alt_mem_epcs_flash_controller_0+0xff840728>

0084975c <__floatsidf>:
  84975c:	defffd04 	addi	sp,sp,-12
  849760:	dfc00215 	stw	ra,8(sp)
  849764:	dc400115 	stw	r17,4(sp)
  849768:	dc000015 	stw	r16,0(sp)
  84976c:	20002b26 	beq	r4,zero,84981c <__floatsidf+0xc0>
  849770:	2023883a 	mov	r17,r4
  849774:	2020d7fa 	srli	r16,r4,31
  849778:	20002d16 	blt	r4,zero,849830 <__floatsidf+0xd4>
  84977c:	8809883a 	mov	r4,r17
  849780:	0831c3c0 	call	831c3c <__clzsi2>
  849784:	01410784 	movi	r5,1054
  849788:	288bc83a 	sub	r5,r5,r2
  84978c:	01010cc4 	movi	r4,1075
  849790:	2149c83a 	sub	r4,r4,r5
  849794:	00c007c4 	movi	r3,31
  849798:	1900160e 	bge	r3,r4,8497f4 <__floatsidf+0x98>
  84979c:	00c104c4 	movi	r3,1043
  8497a0:	1947c83a 	sub	r3,r3,r5
  8497a4:	88c6983a 	sll	r3,r17,r3
  8497a8:	00800434 	movhi	r2,16
  8497ac:	10bfffc4 	addi	r2,r2,-1
  8497b0:	1886703a 	and	r3,r3,r2
  8497b4:	2941ffcc 	andi	r5,r5,2047
  8497b8:	800d883a 	mov	r6,r16
  8497bc:	0005883a 	mov	r2,zero
  8497c0:	280a953a 	slli	r5,r5,20
  8497c4:	31803fcc 	andi	r6,r6,255
  8497c8:	01000434 	movhi	r4,16
  8497cc:	300c97fa 	slli	r6,r6,31
  8497d0:	213fffc4 	addi	r4,r4,-1
  8497d4:	1906703a 	and	r3,r3,r4
  8497d8:	1946b03a 	or	r3,r3,r5
  8497dc:	1986b03a 	or	r3,r3,r6
  8497e0:	dfc00217 	ldw	ra,8(sp)
  8497e4:	dc400117 	ldw	r17,4(sp)
  8497e8:	dc000017 	ldw	r16,0(sp)
  8497ec:	dec00304 	addi	sp,sp,12
  8497f0:	f800283a 	ret
  8497f4:	00c002c4 	movi	r3,11
  8497f8:	1887c83a 	sub	r3,r3,r2
  8497fc:	88c6d83a 	srl	r3,r17,r3
  849800:	8904983a 	sll	r2,r17,r4
  849804:	01000434 	movhi	r4,16
  849808:	213fffc4 	addi	r4,r4,-1
  84980c:	2941ffcc 	andi	r5,r5,2047
  849810:	1906703a 	and	r3,r3,r4
  849814:	800d883a 	mov	r6,r16
  849818:	003fe906 	br	8497c0 <__alt_mem_epcs_flash_controller_0+0xff8407c0>
  84981c:	000d883a 	mov	r6,zero
  849820:	000b883a 	mov	r5,zero
  849824:	0007883a 	mov	r3,zero
  849828:	0005883a 	mov	r2,zero
  84982c:	003fe406 	br	8497c0 <__alt_mem_epcs_flash_controller_0+0xff8407c0>
  849830:	0123c83a 	sub	r17,zero,r4
  849834:	003fd106 	br	84977c <__alt_mem_epcs_flash_controller_0+0xff84077c>

00849838 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  849838:	defffe04 	addi	sp,sp,-8
  84983c:	dfc00115 	stw	ra,4(sp)
  849840:	df000015 	stw	fp,0(sp)
  849844:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  849848:	d0a04317 	ldw	r2,-32500(gp)
  84984c:	10000326 	beq	r2,zero,84985c <alt_get_errno+0x24>
  849850:	d0a04317 	ldw	r2,-32500(gp)
  849854:	103ee83a 	callr	r2
  849858:	00000106 	br	849860 <alt_get_errno+0x28>
  84985c:	d0a08804 	addi	r2,gp,-32224
}
  849860:	e037883a 	mov	sp,fp
  849864:	dfc00117 	ldw	ra,4(sp)
  849868:	df000017 	ldw	fp,0(sp)
  84986c:	dec00204 	addi	sp,sp,8
  849870:	f800283a 	ret

00849874 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  849874:	defffb04 	addi	sp,sp,-20
  849878:	dfc00415 	stw	ra,16(sp)
  84987c:	df000315 	stw	fp,12(sp)
  849880:	df000304 	addi	fp,sp,12
  849884:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  849888:	e0bfff17 	ldw	r2,-4(fp)
  84988c:	10000816 	blt	r2,zero,8498b0 <close+0x3c>
  849890:	01400304 	movi	r5,12
  849894:	e13fff17 	ldw	r4,-4(fp)
  849898:	08301e80 	call	8301e8 <__mulsi3>
  84989c:	1007883a 	mov	r3,r2
  8498a0:	008021b4 	movhi	r2,134
  8498a4:	10aa1e04 	addi	r2,r2,-22408
  8498a8:	1885883a 	add	r2,r3,r2
  8498ac:	00000106 	br	8498b4 <close+0x40>
  8498b0:	0005883a 	mov	r2,zero
  8498b4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  8498b8:	e0bffd17 	ldw	r2,-12(fp)
  8498bc:	10001926 	beq	r2,zero,849924 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  8498c0:	e0bffd17 	ldw	r2,-12(fp)
  8498c4:	10800017 	ldw	r2,0(r2)
  8498c8:	10800417 	ldw	r2,16(r2)
  8498cc:	10000626 	beq	r2,zero,8498e8 <close+0x74>
  8498d0:	e0bffd17 	ldw	r2,-12(fp)
  8498d4:	10800017 	ldw	r2,0(r2)
  8498d8:	10800417 	ldw	r2,16(r2)
  8498dc:	e13ffd17 	ldw	r4,-12(fp)
  8498e0:	103ee83a 	callr	r2
  8498e4:	00000106 	br	8498ec <close+0x78>
  8498e8:	0005883a 	mov	r2,zero
  8498ec:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  8498f0:	e13fff17 	ldw	r4,-4(fp)
  8498f4:	084a2c80 	call	84a2c8 <alt_release_fd>
    if (rval < 0)
  8498f8:	e0bffe17 	ldw	r2,-8(fp)
  8498fc:	1000070e 	bge	r2,zero,84991c <close+0xa8>
    {
      ALT_ERRNO = -rval;
  849900:	08498380 	call	849838 <alt_get_errno>
  849904:	1007883a 	mov	r3,r2
  849908:	e0bffe17 	ldw	r2,-8(fp)
  84990c:	0085c83a 	sub	r2,zero,r2
  849910:	18800015 	stw	r2,0(r3)
      return -1;
  849914:	00bfffc4 	movi	r2,-1
  849918:	00000706 	br	849938 <close+0xc4>
    }
    return 0;
  84991c:	0005883a 	mov	r2,zero
  849920:	00000506 	br	849938 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  849924:	08498380 	call	849838 <alt_get_errno>
  849928:	1007883a 	mov	r3,r2
  84992c:	00801444 	movi	r2,81
  849930:	18800015 	stw	r2,0(r3)
    return -1;
  849934:	00bfffc4 	movi	r2,-1
  }
}
  849938:	e037883a 	mov	sp,fp
  84993c:	dfc00117 	ldw	ra,4(sp)
  849940:	df000017 	ldw	fp,0(sp)
  849944:	dec00204 	addi	sp,sp,8
  849948:	f800283a 	ret

0084994c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  84994c:	defffc04 	addi	sp,sp,-16
  849950:	df000315 	stw	fp,12(sp)
  849954:	df000304 	addi	fp,sp,12
  849958:	e13ffd15 	stw	r4,-12(fp)
  84995c:	e17ffe15 	stw	r5,-8(fp)
  849960:	e1bfff15 	stw	r6,-4(fp)
  return len;
  849964:	e0bfff17 	ldw	r2,-4(fp)
}
  849968:	e037883a 	mov	sp,fp
  84996c:	df000017 	ldw	fp,0(sp)
  849970:	dec00104 	addi	sp,sp,4
  849974:	f800283a 	ret

00849978 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  849978:	defffd04 	addi	sp,sp,-12
  84997c:	df000215 	stw	fp,8(sp)
  849980:	df000204 	addi	fp,sp,8
  849984:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  849988:	d0209545 	stb	zero,-32171(gp)
  84998c:	e0bfff17 	ldw	r2,-4(fp)
  849990:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  849994:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  849998:	10000226 	beq	r2,zero,8499a4 <_exit+0x2c>
    ALT_SIM_FAIL();
  84999c:	002af070 	cmpltui	zero,zero,43969
  8499a0:	00000106 	br	8499a8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  8499a4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  8499a8:	003fff06 	br	8499a8 <__alt_mem_epcs_flash_controller_0+0xff8409a8>

008499ac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8499ac:	defffe04 	addi	sp,sp,-8
  8499b0:	dfc00115 	stw	ra,4(sp)
  8499b4:	df000015 	stw	fp,0(sp)
  8499b8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8499bc:	d0a04317 	ldw	r2,-32500(gp)
  8499c0:	10000326 	beq	r2,zero,8499d0 <alt_get_errno+0x24>
  8499c4:	d0a04317 	ldw	r2,-32500(gp)
  8499c8:	103ee83a 	callr	r2
  8499cc:	00000106 	br	8499d4 <alt_get_errno+0x28>
  8499d0:	d0a08804 	addi	r2,gp,-32224
}
  8499d4:	e037883a 	mov	sp,fp
  8499d8:	dfc00117 	ldw	ra,4(sp)
  8499dc:	df000017 	ldw	fp,0(sp)
  8499e0:	dec00204 	addi	sp,sp,8
  8499e4:	f800283a 	ret

008499e8 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  8499e8:	defffb04 	addi	sp,sp,-20
  8499ec:	dfc00415 	stw	ra,16(sp)
  8499f0:	df000315 	stw	fp,12(sp)
  8499f4:	df000304 	addi	fp,sp,12
  8499f8:	e13ffe15 	stw	r4,-8(fp)
  8499fc:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  849a00:	e0bffe17 	ldw	r2,-8(fp)
  849a04:	10000816 	blt	r2,zero,849a28 <fstat+0x40>
  849a08:	01400304 	movi	r5,12
  849a0c:	e13ffe17 	ldw	r4,-8(fp)
  849a10:	08301e80 	call	8301e8 <__mulsi3>
  849a14:	1007883a 	mov	r3,r2
  849a18:	008021b4 	movhi	r2,134
  849a1c:	10aa1e04 	addi	r2,r2,-22408
  849a20:	1885883a 	add	r2,r3,r2
  849a24:	00000106 	br	849a2c <fstat+0x44>
  849a28:	0005883a 	mov	r2,zero
  849a2c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  849a30:	e0bffd17 	ldw	r2,-12(fp)
  849a34:	10001026 	beq	r2,zero,849a78 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  849a38:	e0bffd17 	ldw	r2,-12(fp)
  849a3c:	10800017 	ldw	r2,0(r2)
  849a40:	10800817 	ldw	r2,32(r2)
  849a44:	10000726 	beq	r2,zero,849a64 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
  849a48:	e0bffd17 	ldw	r2,-12(fp)
  849a4c:	10800017 	ldw	r2,0(r2)
  849a50:	10800817 	ldw	r2,32(r2)
  849a54:	e17fff17 	ldw	r5,-4(fp)
  849a58:	e13ffd17 	ldw	r4,-12(fp)
  849a5c:	103ee83a 	callr	r2
  849a60:	00000a06 	br	849a8c <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  849a64:	e0bfff17 	ldw	r2,-4(fp)
  849a68:	00c80004 	movi	r3,8192
  849a6c:	10c00115 	stw	r3,4(r2)
      return 0;
  849a70:	0005883a 	mov	r2,zero
  849a74:	00000506 	br	849a8c <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  849a78:	08499ac0 	call	8499ac <alt_get_errno>
  849a7c:	1007883a 	mov	r3,r2
  849a80:	00801444 	movi	r2,81
  849a84:	18800015 	stw	r2,0(r3)
    return -1;
  849a88:	00bfffc4 	movi	r2,-1
  }
}
  849a8c:	e037883a 	mov	sp,fp
  849a90:	dfc00117 	ldw	ra,4(sp)
  849a94:	df000017 	ldw	fp,0(sp)
  849a98:	dec00204 	addi	sp,sp,8
  849a9c:	f800283a 	ret

00849aa0 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
  849aa0:	deffff04 	addi	sp,sp,-4
  849aa4:	df000015 	stw	fp,0(sp)
  849aa8:	d839883a 	mov	fp,sp
  return 0;
  849aac:	0005883a 	mov	r2,zero
}
  849ab0:	e037883a 	mov	sp,fp
  849ab4:	df000017 	ldw	fp,0(sp)
  849ab8:	dec00104 	addi	sp,sp,4
  849abc:	f800283a 	ret

00849ac0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  849ac0:	defff904 	addi	sp,sp,-28
  849ac4:	dfc00615 	stw	ra,24(sp)
  849ac8:	df000515 	stw	fp,20(sp)
  849acc:	df000504 	addi	fp,sp,20
  849ad0:	e13ffc15 	stw	r4,-16(fp)
  849ad4:	e17ffd15 	stw	r5,-12(fp)
  849ad8:	e1bffe15 	stw	r6,-8(fp)
  849adc:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  849ae0:	e0800217 	ldw	r2,8(fp)
  849ae4:	d8800015 	stw	r2,0(sp)
  849ae8:	e1ffff17 	ldw	r7,-4(fp)
  849aec:	e1bffe17 	ldw	r6,-8(fp)
  849af0:	e17ffd17 	ldw	r5,-12(fp)
  849af4:	e13ffc17 	ldw	r4,-16(fp)
  849af8:	0849c700 	call	849c70 <alt_iic_isr_register>
}  
  849afc:	e037883a 	mov	sp,fp
  849b00:	dfc00117 	ldw	ra,4(sp)
  849b04:	df000017 	ldw	fp,0(sp)
  849b08:	dec00204 	addi	sp,sp,8
  849b0c:	f800283a 	ret

00849b10 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  849b10:	defff904 	addi	sp,sp,-28
  849b14:	df000615 	stw	fp,24(sp)
  849b18:	df000604 	addi	fp,sp,24
  849b1c:	e13ffe15 	stw	r4,-8(fp)
  849b20:	e17fff15 	stw	r5,-4(fp)
  849b24:	e0bfff17 	ldw	r2,-4(fp)
  849b28:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  849b2c:	0005303a 	rdctl	r2,status
  849b30:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  849b34:	e0fffb17 	ldw	r3,-20(fp)
  849b38:	00bfff84 	movi	r2,-2
  849b3c:	1884703a 	and	r2,r3,r2
  849b40:	1001703a 	wrctl	status,r2
  
  return context;
  849b44:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  849b48:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  849b4c:	00c00044 	movi	r3,1
  849b50:	e0bffa17 	ldw	r2,-24(fp)
  849b54:	1884983a 	sll	r2,r3,r2
  849b58:	1007883a 	mov	r3,r2
  849b5c:	d0a08d17 	ldw	r2,-32204(gp)
  849b60:	1884b03a 	or	r2,r3,r2
  849b64:	d0a08d15 	stw	r2,-32204(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  849b68:	d0a08d17 	ldw	r2,-32204(gp)
  849b6c:	100170fa 	wrctl	ienable,r2
  849b70:	e0bffc17 	ldw	r2,-16(fp)
  849b74:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  849b78:	e0bffd17 	ldw	r2,-12(fp)
  849b7c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  849b80:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  849b84:	0001883a 	nop
}
  849b88:	e037883a 	mov	sp,fp
  849b8c:	df000017 	ldw	fp,0(sp)
  849b90:	dec00104 	addi	sp,sp,4
  849b94:	f800283a 	ret

00849b98 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  849b98:	defff904 	addi	sp,sp,-28
  849b9c:	df000615 	stw	fp,24(sp)
  849ba0:	df000604 	addi	fp,sp,24
  849ba4:	e13ffe15 	stw	r4,-8(fp)
  849ba8:	e17fff15 	stw	r5,-4(fp)
  849bac:	e0bfff17 	ldw	r2,-4(fp)
  849bb0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  849bb4:	0005303a 	rdctl	r2,status
  849bb8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  849bbc:	e0fffb17 	ldw	r3,-20(fp)
  849bc0:	00bfff84 	movi	r2,-2
  849bc4:	1884703a 	and	r2,r3,r2
  849bc8:	1001703a 	wrctl	status,r2
  
  return context;
  849bcc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  849bd0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  849bd4:	00c00044 	movi	r3,1
  849bd8:	e0bffa17 	ldw	r2,-24(fp)
  849bdc:	1884983a 	sll	r2,r3,r2
  849be0:	0084303a 	nor	r2,zero,r2
  849be4:	1007883a 	mov	r3,r2
  849be8:	d0a08d17 	ldw	r2,-32204(gp)
  849bec:	1884703a 	and	r2,r3,r2
  849bf0:	d0a08d15 	stw	r2,-32204(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  849bf4:	d0a08d17 	ldw	r2,-32204(gp)
  849bf8:	100170fa 	wrctl	ienable,r2
  849bfc:	e0bffc17 	ldw	r2,-16(fp)
  849c00:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  849c04:	e0bffd17 	ldw	r2,-12(fp)
  849c08:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  849c0c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  849c10:	0001883a 	nop
}
  849c14:	e037883a 	mov	sp,fp
  849c18:	df000017 	ldw	fp,0(sp)
  849c1c:	dec00104 	addi	sp,sp,4
  849c20:	f800283a 	ret

00849c24 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  849c24:	defffc04 	addi	sp,sp,-16
  849c28:	df000315 	stw	fp,12(sp)
  849c2c:	df000304 	addi	fp,sp,12
  849c30:	e13ffe15 	stw	r4,-8(fp)
  849c34:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  849c38:	000530fa 	rdctl	r2,ienable
  849c3c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  849c40:	00c00044 	movi	r3,1
  849c44:	e0bfff17 	ldw	r2,-4(fp)
  849c48:	1884983a 	sll	r2,r3,r2
  849c4c:	1007883a 	mov	r3,r2
  849c50:	e0bffd17 	ldw	r2,-12(fp)
  849c54:	1884703a 	and	r2,r3,r2
  849c58:	1004c03a 	cmpne	r2,r2,zero
  849c5c:	10803fcc 	andi	r2,r2,255
}
  849c60:	e037883a 	mov	sp,fp
  849c64:	df000017 	ldw	fp,0(sp)
  849c68:	dec00104 	addi	sp,sp,4
  849c6c:	f800283a 	ret

00849c70 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  849c70:	defff504 	addi	sp,sp,-44
  849c74:	dfc00a15 	stw	ra,40(sp)
  849c78:	df000915 	stw	fp,36(sp)
  849c7c:	df000904 	addi	fp,sp,36
  849c80:	e13ffc15 	stw	r4,-16(fp)
  849c84:	e17ffd15 	stw	r5,-12(fp)
  849c88:	e1bffe15 	stw	r6,-8(fp)
  849c8c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  849c90:	00bffa84 	movi	r2,-22
  849c94:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  849c98:	e0bffd17 	ldw	r2,-12(fp)
  849c9c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  849ca0:	e0bff817 	ldw	r2,-32(fp)
  849ca4:	10800808 	cmpgei	r2,r2,32
  849ca8:	1000271e 	bne	r2,zero,849d48 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  849cac:	0005303a 	rdctl	r2,status
  849cb0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  849cb4:	e0fffb17 	ldw	r3,-20(fp)
  849cb8:	00bfff84 	movi	r2,-2
  849cbc:	1884703a 	and	r2,r3,r2
  849cc0:	1001703a 	wrctl	status,r2
  
  return context;
  849cc4:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  849cc8:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  849ccc:	008021b4 	movhi	r2,134
  849cd0:	108c0504 	addi	r2,r2,12308
  849cd4:	e0fff817 	ldw	r3,-32(fp)
  849cd8:	180690fa 	slli	r3,r3,3
  849cdc:	10c5883a 	add	r2,r2,r3
  849ce0:	e0fffe17 	ldw	r3,-8(fp)
  849ce4:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  849ce8:	008021b4 	movhi	r2,134
  849cec:	108c0504 	addi	r2,r2,12308
  849cf0:	e0fff817 	ldw	r3,-32(fp)
  849cf4:	180690fa 	slli	r3,r3,3
  849cf8:	10c5883a 	add	r2,r2,r3
  849cfc:	10800104 	addi	r2,r2,4
  849d00:	e0ffff17 	ldw	r3,-4(fp)
  849d04:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  849d08:	e0bffe17 	ldw	r2,-8(fp)
  849d0c:	10000526 	beq	r2,zero,849d24 <alt_iic_isr_register+0xb4>
  849d10:	e0bff817 	ldw	r2,-32(fp)
  849d14:	100b883a 	mov	r5,r2
  849d18:	e13ffc17 	ldw	r4,-16(fp)
  849d1c:	0849b100 	call	849b10 <alt_ic_irq_enable>
  849d20:	00000406 	br	849d34 <alt_iic_isr_register+0xc4>
  849d24:	e0bff817 	ldw	r2,-32(fp)
  849d28:	100b883a 	mov	r5,r2
  849d2c:	e13ffc17 	ldw	r4,-16(fp)
  849d30:	0849b980 	call	849b98 <alt_ic_irq_disable>
  849d34:	e0bff715 	stw	r2,-36(fp)
  849d38:	e0bffa17 	ldw	r2,-24(fp)
  849d3c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  849d40:	e0bff917 	ldw	r2,-28(fp)
  849d44:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  849d48:	e0bff717 	ldw	r2,-36(fp)
}
  849d4c:	e037883a 	mov	sp,fp
  849d50:	dfc00117 	ldw	ra,4(sp)
  849d54:	df000017 	ldw	fp,0(sp)
  849d58:	dec00204 	addi	sp,sp,8
  849d5c:	f800283a 	ret

00849d60 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  849d60:	defffe04 	addi	sp,sp,-8
  849d64:	dfc00115 	stw	ra,4(sp)
  849d68:	df000015 	stw	fp,0(sp)
  849d6c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  849d70:	d0a04317 	ldw	r2,-32500(gp)
  849d74:	10000326 	beq	r2,zero,849d84 <alt_get_errno+0x24>
  849d78:	d0a04317 	ldw	r2,-32500(gp)
  849d7c:	103ee83a 	callr	r2
  849d80:	00000106 	br	849d88 <alt_get_errno+0x28>
  849d84:	d0a08804 	addi	r2,gp,-32224
}
  849d88:	e037883a 	mov	sp,fp
  849d8c:	dfc00117 	ldw	ra,4(sp)
  849d90:	df000017 	ldw	fp,0(sp)
  849d94:	dec00204 	addi	sp,sp,8
  849d98:	f800283a 	ret

00849d9c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  849d9c:	deffed04 	addi	sp,sp,-76
  849da0:	dfc01215 	stw	ra,72(sp)
  849da4:	df001115 	stw	fp,68(sp)
  849da8:	df001104 	addi	fp,sp,68
  849dac:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  849db0:	e0bfff17 	ldw	r2,-4(fp)
  849db4:	10000816 	blt	r2,zero,849dd8 <isatty+0x3c>
  849db8:	01400304 	movi	r5,12
  849dbc:	e13fff17 	ldw	r4,-4(fp)
  849dc0:	08301e80 	call	8301e8 <__mulsi3>
  849dc4:	1007883a 	mov	r3,r2
  849dc8:	008021b4 	movhi	r2,134
  849dcc:	10aa1e04 	addi	r2,r2,-22408
  849dd0:	1885883a 	add	r2,r3,r2
  849dd4:	00000106 	br	849ddc <isatty+0x40>
  849dd8:	0005883a 	mov	r2,zero
  849ddc:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  849de0:	e0bfef17 	ldw	r2,-68(fp)
  849de4:	10000e26 	beq	r2,zero,849e20 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  849de8:	e0bfef17 	ldw	r2,-68(fp)
  849dec:	10800017 	ldw	r2,0(r2)
  849df0:	10800817 	ldw	r2,32(r2)
  849df4:	1000021e 	bne	r2,zero,849e00 <isatty+0x64>
    {
      return 1;
  849df8:	00800044 	movi	r2,1
  849dfc:	00000d06 	br	849e34 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  849e00:	e0bff004 	addi	r2,fp,-64
  849e04:	100b883a 	mov	r5,r2
  849e08:	e13fff17 	ldw	r4,-4(fp)
  849e0c:	08499e80 	call	8499e8 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  849e10:	e0bff117 	ldw	r2,-60(fp)
  849e14:	10880020 	cmpeqi	r2,r2,8192
  849e18:	10803fcc 	andi	r2,r2,255
  849e1c:	00000506 	br	849e34 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  849e20:	0849d600 	call	849d60 <alt_get_errno>
  849e24:	1007883a 	mov	r3,r2
  849e28:	00801444 	movi	r2,81
  849e2c:	18800015 	stw	r2,0(r3)
    return 0;
  849e30:	0005883a 	mov	r2,zero
  }
}
  849e34:	e037883a 	mov	sp,fp
  849e38:	dfc00117 	ldw	ra,4(sp)
  849e3c:	df000017 	ldw	fp,0(sp)
  849e40:	dec00204 	addi	sp,sp,8
  849e44:	f800283a 	ret

00849e48 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  849e48:	defffe04 	addi	sp,sp,-8
  849e4c:	dfc00115 	stw	ra,4(sp)
  849e50:	df000015 	stw	fp,0(sp)
  849e54:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  849e58:	d0a04317 	ldw	r2,-32500(gp)
  849e5c:	10000326 	beq	r2,zero,849e6c <alt_get_errno+0x24>
  849e60:	d0a04317 	ldw	r2,-32500(gp)
  849e64:	103ee83a 	callr	r2
  849e68:	00000106 	br	849e70 <alt_get_errno+0x28>
  849e6c:	d0a08804 	addi	r2,gp,-32224
}
  849e70:	e037883a 	mov	sp,fp
  849e74:	dfc00117 	ldw	ra,4(sp)
  849e78:	df000017 	ldw	fp,0(sp)
  849e7c:	dec00204 	addi	sp,sp,8
  849e80:	f800283a 	ret

00849e84 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
  849e84:	defffb04 	addi	sp,sp,-20
  849e88:	dfc00415 	stw	ra,16(sp)
  849e8c:	df000315 	stw	fp,12(sp)
  849e90:	df000304 	addi	fp,sp,12
  849e94:	e13ffe15 	stw	r4,-8(fp)
  849e98:	e17fff15 	stw	r5,-4(fp)
  int status = 0;
  849e9c:	e03ffd15 	stw	zero,-12(fp)

  if (pid <= 0)
  849ea0:	e0bffe17 	ldw	r2,-8(fp)
  849ea4:	00802f16 	blt	zero,r2,849f64 <kill+0xe0>
  {
    switch (sig)
  849ea8:	e0bfff17 	ldw	r2,-4(fp)
  849eac:	10800828 	cmpgeui	r2,r2,32
  849eb0:	1000291e 	bne	r2,zero,849f58 <kill+0xd4>
  849eb4:	e0bfff17 	ldw	r2,-4(fp)
  849eb8:	100690ba 	slli	r3,r2,2
  849ebc:	00802174 	movhi	r2,133
  849ec0:	10a7b404 	addi	r2,r2,-24880
  849ec4:	1885883a 	add	r2,r3,r2
  849ec8:	10800017 	ldw	r2,0(r2)
  849ecc:	1000683a 	jmp	r2
  849ed0:	00849f78 	rdprs	r2,zero,4733
  849ed4:	00849f58 	cmpnei	r2,zero,4733
  849ed8:	00849f58 	cmpnei	r2,zero,4733
  849edc:	00849f50 	cmplti	r2,zero,4733
  849ee0:	00849f50 	cmplti	r2,zero,4733
  849ee4:	00849f50 	cmplti	r2,zero,4733
  849ee8:	00849f50 	cmplti	r2,zero,4733
  849eec:	00849f58 	cmpnei	r2,zero,4733
  849ef0:	00849f50 	cmplti	r2,zero,4733
  849ef4:	00849f50 	cmplti	r2,zero,4733
  849ef8:	00849f50 	cmplti	r2,zero,4733
  849efc:	00849f50 	cmplti	r2,zero,4733
  849f00:	00849f50 	cmplti	r2,zero,4733
  849f04:	00849f50 	cmplti	r2,zero,4733
  849f08:	00849f50 	cmplti	r2,zero,4733
  849f0c:	00849f50 	cmplti	r2,zero,4733
  849f10:	00849f78 	rdprs	r2,zero,4733
  849f14:	00849f58 	cmpnei	r2,zero,4733
  849f18:	00849f58 	cmpnei	r2,zero,4733
  849f1c:	00849f58 	cmpnei	r2,zero,4733
  849f20:	00849f78 	rdprs	r2,zero,4733
  849f24:	00849f58 	cmpnei	r2,zero,4733
  849f28:	00849f58 	cmpnei	r2,zero,4733
  849f2c:	00849f50 	cmplti	r2,zero,4733
  849f30:	00849f50 	cmplti	r2,zero,4733
  849f34:	00849f50 	cmplti	r2,zero,4733
  849f38:	00849f50 	cmplti	r2,zero,4733
  849f3c:	00849f50 	cmplti	r2,zero,4733
  849f40:	00849f58 	cmpnei	r2,zero,4733
  849f44:	00849f58 	cmpnei	r2,zero,4733
  849f48:	00849f50 	cmplti	r2,zero,4733
  849f4c:	00849f50 	cmplti	r2,zero,4733
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
  849f50:	0009883a 	mov	r4,zero
  849f54:	08499780 	call	849978 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
  849f58:	00800584 	movi	r2,22
  849f5c:	e0bffd15 	stw	r2,-12(fp)
  849f60:	00000606 	br	849f7c <kill+0xf8>
    }
  }

  else if (pid > 0)
  849f64:	e0bffe17 	ldw	r2,-8(fp)
  849f68:	0080040e 	bge	zero,r2,849f7c <kill+0xf8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  849f6c:	008000c4 	movi	r2,3
  849f70:	e0bffd15 	stw	r2,-12(fp)
  849f74:	00000106 	br	849f7c <kill+0xf8>
    {
    case 0:

      /* The null signal is used to check that a pid is valid. */

      break;
  849f78:	0001883a 	nop
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  }

  if (status)
  849f7c:	e0bffd17 	ldw	r2,-12(fp)
  849f80:	10000626 	beq	r2,zero,849f9c <kill+0x118>
  {
    ALT_ERRNO = status;
  849f84:	0849e480 	call	849e48 <alt_get_errno>
  849f88:	1007883a 	mov	r3,r2
  849f8c:	e0bffd17 	ldw	r2,-12(fp)
  849f90:	18800015 	stw	r2,0(r3)
    return -1;
  849f94:	00bfffc4 	movi	r2,-1
  849f98:	00000106 	br	849fa0 <kill+0x11c>
  }

  return 0;
  849f9c:	0005883a 	mov	r2,zero
}
  849fa0:	e037883a 	mov	sp,fp
  849fa4:	dfc00117 	ldw	ra,4(sp)
  849fa8:	df000017 	ldw	fp,0(sp)
  849fac:	dec00204 	addi	sp,sp,8
  849fb0:	f800283a 	ret

00849fb4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  849fb4:	defffe04 	addi	sp,sp,-8
  849fb8:	dfc00115 	stw	ra,4(sp)
  849fbc:	df000015 	stw	fp,0(sp)
  849fc0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  849fc4:	d0a04317 	ldw	r2,-32500(gp)
  849fc8:	10000326 	beq	r2,zero,849fd8 <alt_get_errno+0x24>
  849fcc:	d0a04317 	ldw	r2,-32500(gp)
  849fd0:	103ee83a 	callr	r2
  849fd4:	00000106 	br	849fdc <alt_get_errno+0x28>
  849fd8:	d0a08804 	addi	r2,gp,-32224
}
  849fdc:	e037883a 	mov	sp,fp
  849fe0:	dfc00117 	ldw	ra,4(sp)
  849fe4:	df000017 	ldw	fp,0(sp)
  849fe8:	dec00204 	addi	sp,sp,8
  849fec:	f800283a 	ret

00849ff0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  849ff0:	defff904 	addi	sp,sp,-28
  849ff4:	dfc00615 	stw	ra,24(sp)
  849ff8:	df000515 	stw	fp,20(sp)
  849ffc:	df000504 	addi	fp,sp,20
  84a000:	e13ffd15 	stw	r4,-12(fp)
  84a004:	e17ffe15 	stw	r5,-8(fp)
  84a008:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  84a00c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  84a010:	e0bffd17 	ldw	r2,-12(fp)
  84a014:	10000816 	blt	r2,zero,84a038 <lseek+0x48>
  84a018:	01400304 	movi	r5,12
  84a01c:	e13ffd17 	ldw	r4,-12(fp)
  84a020:	08301e80 	call	8301e8 <__mulsi3>
  84a024:	1007883a 	mov	r3,r2
  84a028:	008021b4 	movhi	r2,134
  84a02c:	10aa1e04 	addi	r2,r2,-22408
  84a030:	1885883a 	add	r2,r3,r2
  84a034:	00000106 	br	84a03c <lseek+0x4c>
  84a038:	0005883a 	mov	r2,zero
  84a03c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  84a040:	e0bffc17 	ldw	r2,-16(fp)
  84a044:	10001026 	beq	r2,zero,84a088 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  84a048:	e0bffc17 	ldw	r2,-16(fp)
  84a04c:	10800017 	ldw	r2,0(r2)
  84a050:	10800717 	ldw	r2,28(r2)
  84a054:	10000926 	beq	r2,zero,84a07c <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  84a058:	e0bffc17 	ldw	r2,-16(fp)
  84a05c:	10800017 	ldw	r2,0(r2)
  84a060:	10800717 	ldw	r2,28(r2)
  84a064:	e1bfff17 	ldw	r6,-4(fp)
  84a068:	e17ffe17 	ldw	r5,-8(fp)
  84a06c:	e13ffc17 	ldw	r4,-16(fp)
  84a070:	103ee83a 	callr	r2
  84a074:	e0bffb15 	stw	r2,-20(fp)
  84a078:	00000506 	br	84a090 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  84a07c:	00bfde84 	movi	r2,-134
  84a080:	e0bffb15 	stw	r2,-20(fp)
  84a084:	00000206 	br	84a090 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
  84a088:	00bfebc4 	movi	r2,-81
  84a08c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  84a090:	e0bffb17 	ldw	r2,-20(fp)
  84a094:	1000070e 	bge	r2,zero,84a0b4 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
  84a098:	0849fb40 	call	849fb4 <alt_get_errno>
  84a09c:	1007883a 	mov	r3,r2
  84a0a0:	e0bffb17 	ldw	r2,-20(fp)
  84a0a4:	0085c83a 	sub	r2,zero,r2
  84a0a8:	18800015 	stw	r2,0(r3)
    rc = -1;
  84a0ac:	00bfffc4 	movi	r2,-1
  84a0b0:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  84a0b4:	e0bffb17 	ldw	r2,-20(fp)
}
  84a0b8:	e037883a 	mov	sp,fp
  84a0bc:	dfc00117 	ldw	ra,4(sp)
  84a0c0:	df000017 	ldw	fp,0(sp)
  84a0c4:	dec00204 	addi	sp,sp,8
  84a0c8:	f800283a 	ret

0084a0cc <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  84a0cc:	defff904 	addi	sp,sp,-28
  84a0d0:	dfc00615 	stw	ra,24(sp)
  84a0d4:	df000515 	stw	fp,20(sp)
  84a0d8:	df000504 	addi	fp,sp,20
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  84a0dc:	0009883a 	mov	r4,zero
  84a0e0:	08521280 	call	852128 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  84a0e4:	084b16c0 	call	84b16c <OSInit>
  84a0e8:	01000044 	movi	r4,1
  84a0ec:	084fac80 	call	84fac8 <OSSemCreate>
  84a0f0:	d0a09215 	stw	r2,-32184(gp)
  84a0f4:	01000044 	movi	r4,1
  84a0f8:	084fac80 	call	84fac8 <OSSemCreate>
  84a0fc:	d0a09415 	stw	r2,-32176(gp)
  84a100:	d0a08c04 	addi	r2,gp,-32208
  84a104:	e0bffc15 	stw	r2,-16(fp)
  84a108:	00800044 	movi	r2,1
  84a10c:	e0bffd0d 	sth	r2,-12(fp)
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_create (OS_EVENT** sem, 
              INT16U value)
{
  *sem = OSSemCreate (value);
  84a110:	e0bffd0b 	ldhu	r2,-12(fp)
  84a114:	1009883a 	mov	r4,r2
  84a118:	084fac80 	call	84fac8 <OSSemCreate>
  84a11c:	1007883a 	mov	r3,r2
  84a120:	e0bffc17 	ldw	r2,-16(fp)
  84a124:	10c00015 	stw	r3,0(r2)
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  84a128:	08521600 	call	852160 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  84a12c:	018021b4 	movhi	r6,134
  84a130:	31a78504 	addi	r6,r6,-25068
  84a134:	014021b4 	movhi	r5,134
  84a138:	29678504 	addi	r5,r5,-25068
  84a13c:	010021b4 	movhi	r4,134
  84a140:	21278504 	addi	r4,r4,-25068
  84a144:	08562cc0 	call	8562cc <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  84a148:	0855f500 	call	855f50 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  84a14c:	01002174 	movhi	r4,133
  84a150:	2117ec04 	addi	r4,r4,24496
  84a154:	0856f740 	call	856f74 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  84a158:	d0a08e17 	ldw	r2,-32200(gp)
  84a15c:	d0e08f17 	ldw	r3,-32196(gp)
  84a160:	d1209017 	ldw	r4,-32192(gp)
  84a164:	200d883a 	mov	r6,r4
  84a168:	180b883a 	mov	r5,r3
  84a16c:	1009883a 	mov	r4,r2
  84a170:	08014640 	call	801464 <main>
  84a174:	e0bffb15 	stw	r2,-20(fp)
  close(STDOUT_FILENO);
  84a178:	01000044 	movi	r4,1
  84a17c:	08498740 	call	849874 <close>
  exit (result);
  84a180:	e13ffb17 	ldw	r4,-20(fp)
  84a184:	0831cec0 	call	831cec <exit>

0084a188 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  84a188:	defffe04 	addi	sp,sp,-8
  84a18c:	dfc00115 	stw	ra,4(sp)
  84a190:	df000015 	stw	fp,0(sp)
  84a194:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  84a198:	d0a04317 	ldw	r2,-32500(gp)
  84a19c:	10000326 	beq	r2,zero,84a1ac <alt_get_errno+0x24>
  84a1a0:	d0a04317 	ldw	r2,-32500(gp)
  84a1a4:	103ee83a 	callr	r2
  84a1a8:	00000106 	br	84a1b0 <alt_get_errno+0x28>
  84a1ac:	d0a08804 	addi	r2,gp,-32224
}
  84a1b0:	e037883a 	mov	sp,fp
  84a1b4:	dfc00117 	ldw	ra,4(sp)
  84a1b8:	df000017 	ldw	fp,0(sp)
  84a1bc:	dec00204 	addi	sp,sp,8
  84a1c0:	f800283a 	ret

0084a1c4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  84a1c4:	defff904 	addi	sp,sp,-28
  84a1c8:	dfc00615 	stw	ra,24(sp)
  84a1cc:	df000515 	stw	fp,20(sp)
  84a1d0:	df000504 	addi	fp,sp,20
  84a1d4:	e13ffd15 	stw	r4,-12(fp)
  84a1d8:	e17ffe15 	stw	r5,-8(fp)
  84a1dc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  84a1e0:	e0bffd17 	ldw	r2,-12(fp)
  84a1e4:	10000816 	blt	r2,zero,84a208 <read+0x44>
  84a1e8:	01400304 	movi	r5,12
  84a1ec:	e13ffd17 	ldw	r4,-12(fp)
  84a1f0:	08301e80 	call	8301e8 <__mulsi3>
  84a1f4:	1007883a 	mov	r3,r2
  84a1f8:	008021b4 	movhi	r2,134
  84a1fc:	10aa1e04 	addi	r2,r2,-22408
  84a200:	1885883a 	add	r2,r3,r2
  84a204:	00000106 	br	84a20c <read+0x48>
  84a208:	0005883a 	mov	r2,zero
  84a20c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  84a210:	e0bffb17 	ldw	r2,-20(fp)
  84a214:	10002226 	beq	r2,zero,84a2a0 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  84a218:	e0bffb17 	ldw	r2,-20(fp)
  84a21c:	10800217 	ldw	r2,8(r2)
  84a220:	108000cc 	andi	r2,r2,3
  84a224:	10800060 	cmpeqi	r2,r2,1
  84a228:	1000181e 	bne	r2,zero,84a28c <read+0xc8>
        (fd->dev->read))
  84a22c:	e0bffb17 	ldw	r2,-20(fp)
  84a230:	10800017 	ldw	r2,0(r2)
  84a234:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  84a238:	10001426 	beq	r2,zero,84a28c <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  84a23c:	e0bffb17 	ldw	r2,-20(fp)
  84a240:	10800017 	ldw	r2,0(r2)
  84a244:	10800517 	ldw	r2,20(r2)
  84a248:	e0ffff17 	ldw	r3,-4(fp)
  84a24c:	180d883a 	mov	r6,r3
  84a250:	e17ffe17 	ldw	r5,-8(fp)
  84a254:	e13ffb17 	ldw	r4,-20(fp)
  84a258:	103ee83a 	callr	r2
  84a25c:	e0bffc15 	stw	r2,-16(fp)
  84a260:	e0bffc17 	ldw	r2,-16(fp)
  84a264:	1000070e 	bge	r2,zero,84a284 <read+0xc0>
        {
          ALT_ERRNO = -rval;
  84a268:	084a1880 	call	84a188 <alt_get_errno>
  84a26c:	1007883a 	mov	r3,r2
  84a270:	e0bffc17 	ldw	r2,-16(fp)
  84a274:	0085c83a 	sub	r2,zero,r2
  84a278:	18800015 	stw	r2,0(r3)
          return -1;
  84a27c:	00bfffc4 	movi	r2,-1
  84a280:	00000c06 	br	84a2b4 <read+0xf0>
        }
        return rval;
  84a284:	e0bffc17 	ldw	r2,-16(fp)
  84a288:	00000a06 	br	84a2b4 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
  84a28c:	084a1880 	call	84a188 <alt_get_errno>
  84a290:	1007883a 	mov	r3,r2
  84a294:	00800344 	movi	r2,13
  84a298:	18800015 	stw	r2,0(r3)
  84a29c:	00000406 	br	84a2b0 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  84a2a0:	084a1880 	call	84a188 <alt_get_errno>
  84a2a4:	1007883a 	mov	r3,r2
  84a2a8:	00801444 	movi	r2,81
  84a2ac:	18800015 	stw	r2,0(r3)
  }
  return -1;
  84a2b0:	00bfffc4 	movi	r2,-1
}
  84a2b4:	e037883a 	mov	sp,fp
  84a2b8:	dfc00117 	ldw	ra,4(sp)
  84a2bc:	df000017 	ldw	fp,0(sp)
  84a2c0:	dec00204 	addi	sp,sp,8
  84a2c4:	f800283a 	ret

0084a2c8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  84a2c8:	defffc04 	addi	sp,sp,-16
  84a2cc:	dfc00315 	stw	ra,12(sp)
  84a2d0:	df000215 	stw	fp,8(sp)
  84a2d4:	dc000115 	stw	r16,4(sp)
  84a2d8:	df000204 	addi	fp,sp,8
  84a2dc:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
  84a2e0:	e0bffe17 	ldw	r2,-8(fp)
  84a2e4:	108000d0 	cmplti	r2,r2,3
  84a2e8:	1000111e 	bne	r2,zero,84a330 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
  84a2ec:	040021b4 	movhi	r16,134
  84a2f0:	842a1e04 	addi	r16,r16,-22408
  84a2f4:	e0bffe17 	ldw	r2,-8(fp)
  84a2f8:	01400304 	movi	r5,12
  84a2fc:	1009883a 	mov	r4,r2
  84a300:	08301e80 	call	8301e8 <__mulsi3>
  84a304:	8085883a 	add	r2,r16,r2
  84a308:	10800204 	addi	r2,r2,8
  84a30c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  84a310:	040021b4 	movhi	r16,134
  84a314:	842a1e04 	addi	r16,r16,-22408
  84a318:	e0bffe17 	ldw	r2,-8(fp)
  84a31c:	01400304 	movi	r5,12
  84a320:	1009883a 	mov	r4,r2
  84a324:	08301e80 	call	8301e8 <__mulsi3>
  84a328:	8085883a 	add	r2,r16,r2
  84a32c:	10000015 	stw	zero,0(r2)
  }
}
  84a330:	0001883a 	nop
  84a334:	e6ffff04 	addi	sp,fp,-4
  84a338:	dfc00217 	ldw	ra,8(sp)
  84a33c:	df000117 	ldw	fp,4(sp)
  84a340:	dc000017 	ldw	r16,0(sp)
  84a344:	dec00304 	addi	sp,sp,12
  84a348:	f800283a 	ret

0084a34c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  84a34c:	defff904 	addi	sp,sp,-28
  84a350:	df000615 	stw	fp,24(sp)
  84a354:	df000604 	addi	fp,sp,24
  84a358:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84a35c:	0005303a 	rdctl	r2,status
  84a360:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84a364:	e0fffe17 	ldw	r3,-8(fp)
  84a368:	00bfff84 	movi	r2,-2
  84a36c:	1884703a 	and	r2,r3,r2
  84a370:	1001703a 	wrctl	status,r2
  
  return context;
  84a374:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  84a378:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  84a37c:	d0a04517 	ldw	r2,-32492(gp)
  84a380:	10c000c4 	addi	r3,r2,3
  84a384:	00bfff04 	movi	r2,-4
  84a388:	1884703a 	and	r2,r3,r2
  84a38c:	d0a04515 	stw	r2,-32492(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  84a390:	d0e04517 	ldw	r3,-32492(gp)
  84a394:	e0bfff17 	ldw	r2,-4(fp)
  84a398:	1887883a 	add	r3,r3,r2
  84a39c:	00804034 	movhi	r2,256
  84a3a0:	10800004 	addi	r2,r2,0
  84a3a4:	10c0062e 	bgeu	r2,r3,84a3c0 <sbrk+0x74>
  84a3a8:	e0bffb17 	ldw	r2,-20(fp)
  84a3ac:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84a3b0:	e0bffa17 	ldw	r2,-24(fp)
  84a3b4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  84a3b8:	00bfffc4 	movi	r2,-1
  84a3bc:	00000b06 	br	84a3ec <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  84a3c0:	d0a04517 	ldw	r2,-32492(gp)
  84a3c4:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  84a3c8:	d0e04517 	ldw	r3,-32492(gp)
  84a3cc:	e0bfff17 	ldw	r2,-4(fp)
  84a3d0:	1885883a 	add	r2,r3,r2
  84a3d4:	d0a04515 	stw	r2,-32492(gp)
  84a3d8:	e0bffb17 	ldw	r2,-20(fp)
  84a3dc:	e0bffc15 	stw	r2,-16(fp)
  84a3e0:	e0bffc17 	ldw	r2,-16(fp)
  84a3e4:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  84a3e8:	e0bffd17 	ldw	r2,-12(fp)
} 
  84a3ec:	e037883a 	mov	sp,fp
  84a3f0:	df000017 	ldw	fp,0(sp)
  84a3f4:	dec00104 	addi	sp,sp,4
  84a3f8:	f800283a 	ret

0084a3fc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  84a3fc:	defffe04 	addi	sp,sp,-8
  84a400:	dfc00115 	stw	ra,4(sp)
  84a404:	df000015 	stw	fp,0(sp)
  84a408:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  84a40c:	d0a04317 	ldw	r2,-32500(gp)
  84a410:	10000326 	beq	r2,zero,84a420 <alt_get_errno+0x24>
  84a414:	d0a04317 	ldw	r2,-32500(gp)
  84a418:	103ee83a 	callr	r2
  84a41c:	00000106 	br	84a424 <alt_get_errno+0x28>
  84a420:	d0a08804 	addi	r2,gp,-32224
}
  84a424:	e037883a 	mov	sp,fp
  84a428:	dfc00117 	ldw	ra,4(sp)
  84a42c:	df000017 	ldw	fp,0(sp)
  84a430:	dec00204 	addi	sp,sp,8
  84a434:	f800283a 	ret

0084a438 <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  84a438:	defffc04 	addi	sp,sp,-16
  84a43c:	dfc00315 	stw	ra,12(sp)
  84a440:	df000215 	stw	fp,8(sp)
  84a444:	df000204 	addi	fp,sp,8
  84a448:	e13fff15 	stw	r4,-4(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  84a44c:	d0a0ab17 	ldw	r2,-32084(gp)
  clock_t ticks = alt_nticks(); 
  84a450:	e0bffe15 	stw	r2,-8(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  84a454:	d0a0aa17 	ldw	r2,-32088(gp)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  84a458:	1000061e 	bne	r2,zero,84a474 <times+0x3c>
  {
    ALT_ERRNO = ENOSYS;
  84a45c:	084a3fc0 	call	84a3fc <alt_get_errno>
  84a460:	1007883a 	mov	r3,r2
  84a464:	00801604 	movi	r2,88
  84a468:	18800015 	stw	r2,0(r3)
    return 0;
  84a46c:	0005883a 	mov	r2,zero
  84a470:	00000a06 	br	84a49c <times+0x64>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  84a474:	e0bfff17 	ldw	r2,-4(fp)
  84a478:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  84a47c:	e0bfff17 	ldw	r2,-4(fp)
  84a480:	e0fffe17 	ldw	r3,-8(fp)
  84a484:	10c00115 	stw	r3,4(r2)
  buf->tms_cutime = 0;
  84a488:	e0bfff17 	ldw	r2,-4(fp)
  84a48c:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  84a490:	e0bfff17 	ldw	r2,-4(fp)
  84a494:	10000315 	stw	zero,12(r2)

  return ticks;
  84a498:	e0bffe17 	ldw	r2,-8(fp)
}
  84a49c:	e037883a 	mov	sp,fp
  84a4a0:	dfc00117 	ldw	ra,4(sp)
  84a4a4:	df000017 	ldw	fp,0(sp)
  84a4a8:	dec00204 	addi	sp,sp,8
  84a4ac:	f800283a 	ret

0084a4b0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  84a4b0:	defffe04 	addi	sp,sp,-8
  84a4b4:	dfc00115 	stw	ra,4(sp)
  84a4b8:	df000015 	stw	fp,0(sp)
  84a4bc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  84a4c0:	d0a04317 	ldw	r2,-32500(gp)
  84a4c4:	10000326 	beq	r2,zero,84a4d4 <alt_get_errno+0x24>
  84a4c8:	d0a04317 	ldw	r2,-32500(gp)
  84a4cc:	103ee83a 	callr	r2
  84a4d0:	00000106 	br	84a4d8 <alt_get_errno+0x28>
  84a4d4:	d0a08804 	addi	r2,gp,-32224
}
  84a4d8:	e037883a 	mov	sp,fp
  84a4dc:	dfc00117 	ldw	ra,4(sp)
  84a4e0:	df000017 	ldw	fp,0(sp)
  84a4e4:	dec00204 	addi	sp,sp,8
  84a4e8:	f800283a 	ret

0084a4ec <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  84a4ec:	defff904 	addi	sp,sp,-28
  84a4f0:	dfc00615 	stw	ra,24(sp)
  84a4f4:	df000515 	stw	fp,20(sp)
  84a4f8:	df000504 	addi	fp,sp,20
  84a4fc:	e13ffd15 	stw	r4,-12(fp)
  84a500:	e17ffe15 	stw	r5,-8(fp)
  84a504:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  84a508:	e0bffd17 	ldw	r2,-12(fp)
  84a50c:	10000816 	blt	r2,zero,84a530 <write+0x44>
  84a510:	01400304 	movi	r5,12
  84a514:	e13ffd17 	ldw	r4,-12(fp)
  84a518:	08301e80 	call	8301e8 <__mulsi3>
  84a51c:	1007883a 	mov	r3,r2
  84a520:	008021b4 	movhi	r2,134
  84a524:	10aa1e04 	addi	r2,r2,-22408
  84a528:	1885883a 	add	r2,r3,r2
  84a52c:	00000106 	br	84a534 <write+0x48>
  84a530:	0005883a 	mov	r2,zero
  84a534:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  84a538:	e0bffb17 	ldw	r2,-20(fp)
  84a53c:	10002126 	beq	r2,zero,84a5c4 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  84a540:	e0bffb17 	ldw	r2,-20(fp)
  84a544:	10800217 	ldw	r2,8(r2)
  84a548:	108000cc 	andi	r2,r2,3
  84a54c:	10001826 	beq	r2,zero,84a5b0 <write+0xc4>
  84a550:	e0bffb17 	ldw	r2,-20(fp)
  84a554:	10800017 	ldw	r2,0(r2)
  84a558:	10800617 	ldw	r2,24(r2)
  84a55c:	10001426 	beq	r2,zero,84a5b0 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  84a560:	e0bffb17 	ldw	r2,-20(fp)
  84a564:	10800017 	ldw	r2,0(r2)
  84a568:	10800617 	ldw	r2,24(r2)
  84a56c:	e0ffff17 	ldw	r3,-4(fp)
  84a570:	180d883a 	mov	r6,r3
  84a574:	e17ffe17 	ldw	r5,-8(fp)
  84a578:	e13ffb17 	ldw	r4,-20(fp)
  84a57c:	103ee83a 	callr	r2
  84a580:	e0bffc15 	stw	r2,-16(fp)
  84a584:	e0bffc17 	ldw	r2,-16(fp)
  84a588:	1000070e 	bge	r2,zero,84a5a8 <write+0xbc>
      {
        ALT_ERRNO = -rval;
  84a58c:	084a4b00 	call	84a4b0 <alt_get_errno>
  84a590:	1007883a 	mov	r3,r2
  84a594:	e0bffc17 	ldw	r2,-16(fp)
  84a598:	0085c83a 	sub	r2,zero,r2
  84a59c:	18800015 	stw	r2,0(r3)
        return -1;
  84a5a0:	00bfffc4 	movi	r2,-1
  84a5a4:	00000c06 	br	84a5d8 <write+0xec>
      }
      return rval;
  84a5a8:	e0bffc17 	ldw	r2,-16(fp)
  84a5ac:	00000a06 	br	84a5d8 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
  84a5b0:	084a4b00 	call	84a4b0 <alt_get_errno>
  84a5b4:	1007883a 	mov	r3,r2
  84a5b8:	00800344 	movi	r2,13
  84a5bc:	18800015 	stw	r2,0(r3)
  84a5c0:	00000406 	br	84a5d4 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  84a5c4:	084a4b00 	call	84a4b0 <alt_get_errno>
  84a5c8:	1007883a 	mov	r3,r2
  84a5cc:	00801444 	movi	r2,81
  84a5d0:	18800015 	stw	r2,0(r3)
  }
  return -1;
  84a5d4:	00bfffc4 	movi	r2,-1
}
  84a5d8:	e037883a 	mov	sp,fp
  84a5dc:	dfc00117 	ldw	ra,4(sp)
  84a5e0:	df000017 	ldw	fp,0(sp)
  84a5e4:	dec00204 	addi	sp,sp,8
  84a5e8:	f800283a 	ret

0084a5ec <__env_lock>:
/*
 *
 */

void __env_lock ( struct _reent *_r )
{
  84a5ec:	deffdf04 	addi	sp,sp,-132
  84a5f0:	dfc02015 	stw	ra,128(sp)
  84a5f4:	df001f15 	stw	fp,124(sp)
  84a5f8:	df001f04 	addi	fp,sp,124
  84a5fc:	e13fff15 	stw	r4,-4(fp)
  INT8U err;
  int id;

  /* use our priority as a task id */

  err = OSTaskQuery( OS_PRIO_SELF, &tcb );
  84a600:	e0bfe204 	addi	r2,fp,-120
  84a604:	100b883a 	mov	r5,r2
  84a608:	01003fc4 	movi	r4,255
  84a60c:	0851a500 	call	851a50 <OSTaskQuery>
  84a610:	e0bffe85 	stb	r2,-6(fp)
  if (err != OS_NO_ERR)
  84a614:	e0bffe83 	ldbu	r2,-6(fp)
  84a618:	10803fcc 	andi	r2,r2,255
  84a61c:	10001e1e 	bne	r2,zero,84a698 <__env_lock+0xac>
    return;

  id = tcb.OSTCBPrio;
  84a620:	e0bfee83 	ldbu	r2,-70(fp)
  84a624:	10803fcc 	andi	r2,r2,255
  84a628:	e0bfe115 	stw	r2,-124(fp)
   
  /* see if we own the environment already */

  OSSemQuery( alt_envsem, &semdata );
  84a62c:	d0a09217 	ldw	r2,-32184(gp)
  84a630:	e0fffd04 	addi	r3,fp,-12
  84a634:	180b883a 	mov	r5,r3
  84a638:	1009883a 	mov	r4,r2
  84a63c:	08502680 	call	850268 <OSSemQuery>
  if( semdata.OSEventGrp && id == lockid ) 
  84a640:	e0bffe43 	ldbu	r2,-7(fp)
  84a644:	10803fcc 	andi	r2,r2,255
  84a648:	10000726 	beq	r2,zero,84a668 <__env_lock+0x7c>
  84a64c:	d0a04617 	ldw	r2,-32488(gp)
  84a650:	e0ffe117 	ldw	r3,-124(fp)
  84a654:	1880041e 	bne	r3,r2,84a668 <__env_lock+0x7c>
  {
    /* we do; just count the recursion */

    locks++;
  84a658:	d0a09117 	ldw	r2,-32188(gp)
  84a65c:	10800044 	addi	r2,r2,1
  84a660:	d0a09115 	stw	r2,-32188(gp)
  84a664:	00000a06 	br	84a690 <__env_lock+0xa4>
  }
  else 
  {
    /* wait on the other task to yield, then claim ownership */

    OSSemPend( alt_envsem, 0, &err );
  84a668:	d0a09217 	ldw	r2,-32184(gp)
  84a66c:	e0fffe84 	addi	r3,fp,-6
  84a670:	180d883a 	mov	r6,r3
  84a674:	000b883a 	mov	r5,zero
  84a678:	1009883a 	mov	r4,r2
  84a67c:	084fde00 	call	84fde0 <OSSemPend>
    locks  = 1;
  84a680:	00800044 	movi	r2,1
  84a684:	d0a09115 	stw	r2,-32188(gp)
    lockid = id;
  84a688:	e0bfe117 	ldw	r2,-124(fp)
  84a68c:	d0a04615 	stw	r2,-32488(gp)
  }

#endif /* OS_THREAD_SAFE_NEWLIB */
  return;
  84a690:	0001883a 	nop
  84a694:	00000106 	br	84a69c <__env_lock+0xb0>

  /* use our priority as a task id */

  err = OSTaskQuery( OS_PRIO_SELF, &tcb );
  if (err != OS_NO_ERR)
    return;
  84a698:	0001883a 	nop
    lockid = id;
  }

#endif /* OS_THREAD_SAFE_NEWLIB */
  return;
}
  84a69c:	e037883a 	mov	sp,fp
  84a6a0:	dfc00117 	ldw	ra,4(sp)
  84a6a4:	df000017 	ldw	fp,0(sp)
  84a6a8:	dec00204 	addi	sp,sp,8
  84a6ac:	f800283a 	ret

0084a6b0 <__env_unlock>:
/*
 *
 */

void __env_unlock ( struct _reent *_r )
{
  84a6b0:	defffd04 	addi	sp,sp,-12
  84a6b4:	dfc00215 	stw	ra,8(sp)
  84a6b8:	df000115 	stw	fp,4(sp)
  84a6bc:	df000104 	addi	fp,sp,4
  84a6c0:	e13fff15 	stw	r4,-4(fp)
#if OS_THREAD_SAFE_NEWLIB
  if (locks == 0)
  84a6c4:	d0a09117 	ldw	r2,-32188(gp)
  84a6c8:	10000b26 	beq	r2,zero,84a6f8 <__env_unlock+0x48>
   /* 
    * release the environment once the number of locks == the number 
    * of unlocks 
    */

  if( (--locks) == 0 ) 
  84a6cc:	d0a09117 	ldw	r2,-32188(gp)
  84a6d0:	10bfffc4 	addi	r2,r2,-1
  84a6d4:	d0a09115 	stw	r2,-32188(gp)
  84a6d8:	d0a09117 	ldw	r2,-32188(gp)
  84a6dc:	1000071e 	bne	r2,zero,84a6fc <__env_unlock+0x4c>
  {
    lockid = -1;
  84a6e0:	00bfffc4 	movi	r2,-1
  84a6e4:	d0a04615 	stw	r2,-32488(gp)
    OSSemPost( alt_envsem );
  84a6e8:	d0a09217 	ldw	r2,-32184(gp)
  84a6ec:	1009883a 	mov	r4,r2
  84a6f0:	08501580 	call	850158 <OSSemPost>
  84a6f4:	00000106 	br	84a6fc <__env_unlock+0x4c>

void __env_unlock ( struct _reent *_r )
{
#if OS_THREAD_SAFE_NEWLIB
  if (locks == 0)
    return;
  84a6f8:	0001883a 	nop
  {
    lockid = -1;
    OSSemPost( alt_envsem );
  }
#endif /* OS_THREAD_SAFE_NEWLIB */
}
  84a6fc:	e037883a 	mov	sp,fp
  84a700:	dfc00117 	ldw	ra,4(sp)
  84a704:	df000017 	ldw	fp,0(sp)
  84a708:	dec00204 	addi	sp,sp,8
  84a70c:	f800283a 	ret

0084a710 <__malloc_lock>:
/*
 *
 */

void __malloc_lock ( struct _reent *_r )
{
  84a710:	deffdb04 	addi	sp,sp,-148
  84a714:	dfc02415 	stw	ra,144(sp)
  84a718:	df002315 	stw	fp,140(sp)
  84a71c:	df002304 	addi	fp,sp,140
  84a720:	e13fff15 	stw	r4,-4(fp)
  OS_TCB tcb;
  OS_SEM_DATA semdata;
  INT8U err;
  int id;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84a724:	e03fdd15 	stw	zero,-140(fp)
#endif  
  
  if (OSRunning != OS_TRUE)
  84a728:	d0a09543 	ldbu	r2,-32171(gp)
  84a72c:	10803fcc 	andi	r2,r2,255
  84a730:	10800060 	cmpeqi	r2,r2,1
  84a734:	10003626 	beq	r2,zero,84a810 <__malloc_lock+0x100>
      return;

  /* use our priority as a task id */

  err = OSTaskQuery( OS_PRIO_SELF, &tcb );
  84a738:	e0bfe204 	addi	r2,fp,-120
  84a73c:	100b883a 	mov	r5,r2
  84a740:	01003fc4 	movi	r4,255
  84a744:	0851a500 	call	851a50 <OSTaskQuery>
  84a748:	e0bffe85 	stb	r2,-6(fp)
  if (err != OS_NO_ERR)
  84a74c:	e0bffe83 	ldbu	r2,-6(fp)
  84a750:	10803fcc 	andi	r2,r2,255
  84a754:	1000301e 	bne	r2,zero,84a818 <__malloc_lock+0x108>
    return;

  id = tcb.OSTCBPrio;
  84a758:	e0bfee83 	ldbu	r2,-70(fp)
  84a75c:	10803fcc 	andi	r2,r2,255
  84a760:	e0bfde15 	stw	r2,-136(fp)
   
  /* see if we own the heap already */

  OSSemQuery( alt_heapsem, &semdata );
  84a764:	d0a09417 	ldw	r2,-32176(gp)
  84a768:	e0fffd04 	addi	r3,fp,-12
  84a76c:	180b883a 	mov	r5,r3
  84a770:	1009883a 	mov	r4,r2
  84a774:	08502680 	call	850268 <OSSemQuery>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84a778:	0005303a 	rdctl	r2,status
  84a77c:	e0bfe115 	stw	r2,-124(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84a780:	e0ffe117 	ldw	r3,-124(fp)
  84a784:	00bfff84 	movi	r2,-2
  84a788:	1884703a 	and	r2,r3,r2
  84a78c:	1001703a 	wrctl	status,r2
  
  return context;
  84a790:	e0bfe117 	ldw	r2,-124(fp)
  
  OS_ENTER_CRITICAL();
  84a794:	e0bfdd15 	stw	r2,-140(fp)

  if( !semdata.OSCnt && id == lockid ) 
  84a798:	e0bffd0b 	ldhu	r2,-12(fp)
  84a79c:	10bfffcc 	andi	r2,r2,65535
  84a7a0:	10000b1e 	bne	r2,zero,84a7d0 <__malloc_lock+0xc0>
  84a7a4:	d0a04717 	ldw	r2,-32484(gp)
  84a7a8:	e0ffde17 	ldw	r3,-136(fp)
  84a7ac:	1880081e 	bne	r3,r2,84a7d0 <__malloc_lock+0xc0>
  {
    /* we do; just count the recursion */
    locks++;
  84a7b0:	d0a09317 	ldw	r2,-32180(gp)
  84a7b4:	10800044 	addi	r2,r2,1
  84a7b8:	d0a09315 	stw	r2,-32180(gp)
  84a7bc:	e0bfdd17 	ldw	r2,-140(fp)
  84a7c0:	e0bfdf15 	stw	r2,-132(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84a7c4:	e0bfdf17 	ldw	r2,-132(fp)
  84a7c8:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
  84a7cc:	00000e06 	br	84a808 <__malloc_lock+0xf8>
  84a7d0:	e0bfdd17 	ldw	r2,-140(fp)
  84a7d4:	e0bfe015 	stw	r2,-128(fp)
  84a7d8:	e0bfe017 	ldw	r2,-128(fp)
  84a7dc:	1001703a 	wrctl	status,r2
  else 
  {
    /* wait on the other task to yield the heap, then claim ownership of it */
    OS_EXIT_CRITICAL();

    OSSemPend( alt_heapsem, 0, &err );
  84a7e0:	d0a09417 	ldw	r2,-32176(gp)
  84a7e4:	e0fffe84 	addi	r3,fp,-6
  84a7e8:	180d883a 	mov	r6,r3
  84a7ec:	000b883a 	mov	r5,zero
  84a7f0:	1009883a 	mov	r4,r2
  84a7f4:	084fde00 	call	84fde0 <OSSemPend>
    locks  = 1;
  84a7f8:	00800044 	movi	r2,1
  84a7fc:	d0a09315 	stw	r2,-32180(gp)
    lockid = id;
  84a800:	e0bfde17 	ldw	r2,-136(fp)
  84a804:	d0a04715 	stw	r2,-32484(gp)
  }

#endif /* OS_THREAD_SAFE_NEWLIB */
  return;
  84a808:	0001883a 	nop
  84a80c:	00000306 	br	84a81c <__malloc_lock+0x10c>
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
#endif  
  
  if (OSRunning != OS_TRUE)
      return;
  84a810:	0001883a 	nop
  84a814:	00000106 	br	84a81c <__malloc_lock+0x10c>

  /* use our priority as a task id */

  err = OSTaskQuery( OS_PRIO_SELF, &tcb );
  if (err != OS_NO_ERR)
    return;
  84a818:	0001883a 	nop
    lockid = id;
  }

#endif /* OS_THREAD_SAFE_NEWLIB */
  return;
}
  84a81c:	e037883a 	mov	sp,fp
  84a820:	dfc00117 	ldw	ra,4(sp)
  84a824:	df000017 	ldw	fp,0(sp)
  84a828:	dec00204 	addi	sp,sp,8
  84a82c:	f800283a 	ret

0084a830 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  84a830:	defff804 	addi	sp,sp,-32
  84a834:	dfc00715 	stw	ra,28(sp)
  84a838:	df000615 	stw	fp,24(sp)
  84a83c:	df000604 	addi	fp,sp,24
  84a840:	e13fff15 	stw	r4,-4(fp)
#if OS_THREAD_SAFE_NEWLIB

#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84a844:	e03ffa15 	stw	zero,-24(fp)
#endif 

  if (OSRunning != OS_TRUE)
  84a848:	d0a09543 	ldbu	r2,-32171(gp)
  84a84c:	10803fcc 	andi	r2,r2,255
  84a850:	10800060 	cmpeqi	r2,r2,1
  84a854:	10002326 	beq	r2,zero,84a8e4 <__malloc_unlock+0xb4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84a858:	0005303a 	rdctl	r2,status
  84a85c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84a860:	e0fffe17 	ldw	r3,-8(fp)
  84a864:	00bfff84 	movi	r2,-2
  84a868:	1884703a 	and	r2,r3,r2
  84a86c:	1001703a 	wrctl	status,r2
  
  return context;
  84a870:	e0bffe17 	ldw	r2,-8(fp)
      return;

  OS_ENTER_CRITICAL();
  84a874:	e0bffa15 	stw	r2,-24(fp)
  if (locks == 0)
  84a878:	d0a09317 	ldw	r2,-32180(gp)
  84a87c:	1000051e 	bne	r2,zero,84a894 <__malloc_unlock+0x64>
  84a880:	e0bffa17 	ldw	r2,-24(fp)
  84a884:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84a888:	e0bffb17 	ldw	r2,-20(fp)
  84a88c:	1001703a 	wrctl	status,r2
  {
      OS_EXIT_CRITICAL();
      return;
  84a890:	00001506 	br	84a8e8 <__malloc_unlock+0xb8>
  }

  /* release the heap once the number of locks == the number of unlocks */
  if( (--locks) == 0 ) 
  84a894:	d0a09317 	ldw	r2,-32180(gp)
  84a898:	10bfffc4 	addi	r2,r2,-1
  84a89c:	d0a09315 	stw	r2,-32180(gp)
  84a8a0:	d0a09317 	ldw	r2,-32180(gp)
  84a8a4:	10000a1e 	bne	r2,zero,84a8d0 <__malloc_unlock+0xa0>
  {
    lockid = -1;
  84a8a8:	00bfffc4 	movi	r2,-1
  84a8ac:	d0a04715 	stw	r2,-32484(gp)
  84a8b0:	e0bffa17 	ldw	r2,-24(fp)
  84a8b4:	e0bffc15 	stw	r2,-16(fp)
  84a8b8:	e0bffc17 	ldw	r2,-16(fp)
  84a8bc:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    OSSemPost( alt_heapsem );
  84a8c0:	d0a09417 	ldw	r2,-32176(gp)
  84a8c4:	1009883a 	mov	r4,r2
  84a8c8:	08501580 	call	850158 <OSSemPost>
  84a8cc:	00000606 	br	84a8e8 <__malloc_unlock+0xb8>
  84a8d0:	e0bffa17 	ldw	r2,-24(fp)
  84a8d4:	e0bffd15 	stw	r2,-12(fp)
  84a8d8:	e0bffd17 	ldw	r2,-12(fp)
  84a8dc:	1001703a 	wrctl	status,r2
  84a8e0:	00000106 	br	84a8e8 <__malloc_unlock+0xb8>
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
#endif 

  if (OSRunning != OS_TRUE)
      return;
  84a8e4:	0001883a 	nop
  {
      OS_EXIT_CRITICAL();
  }
  
#endif /* OS_THREAD_SAFE_NEWLIB */
}
  84a8e8:	e037883a 	mov	sp,fp
  84a8ec:	dfc00117 	ldw	ra,4(sp)
  84a8f0:	df000017 	ldw	fp,0(sp)
  84a8f4:	dec00204 	addi	sp,sp,8
  84a8f8:	f800283a 	ret

0084a8fc <OSEventNameGet>:
*********************************************************************************************************
*/

#if (OS_EVENT_EN) && (OS_EVENT_NAME_SIZE > 1)
INT8U  OSEventNameGet (OS_EVENT *pevent, INT8U *pname, INT8U *perr)
{
  84a8fc:	defff704 	addi	sp,sp,-36
  84a900:	dfc00815 	stw	ra,32(sp)
  84a904:	df000715 	stw	fp,28(sp)
  84a908:	df000704 	addi	fp,sp,28
  84a90c:	e13ffd15 	stw	r4,-12(fp)
  84a910:	e17ffe15 	stw	r5,-8(fp)
  84a914:	e1bfff15 	stw	r6,-4(fp)
    INT8U      len;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84a918:	e03ff915 	stw	zero,-28(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84a91c:	e0bfff17 	ldw	r2,-4(fp)
  84a920:	1000021e 	bne	r2,zero,84a92c <OSEventNameGet+0x30>
        return (0);
  84a924:	0005883a 	mov	r2,zero
  84a928:	00003706 	br	84aa08 <OSEventNameGet+0x10c>
    }
    if (pevent == (OS_EVENT *)0) {               /* Is 'pevent' a NULL pointer?                        */
  84a92c:	e0bffd17 	ldw	r2,-12(fp)
  84a930:	1000051e 	bne	r2,zero,84a948 <OSEventNameGet+0x4c>
        *perr = OS_ERR_PEVENT_NULL;
  84a934:	e0bfff17 	ldw	r2,-4(fp)
  84a938:	00c00104 	movi	r3,4
  84a93c:	10c00005 	stb	r3,0(r2)
        return (0);
  84a940:	0005883a 	mov	r2,zero
  84a944:	00003006 	br	84aa08 <OSEventNameGet+0x10c>
    }
    if (pname == (INT8U *)0) {                   /* Is 'pname' a NULL pointer?                         */
  84a948:	e0bffe17 	ldw	r2,-8(fp)
  84a94c:	1000051e 	bne	r2,zero,84a964 <OSEventNameGet+0x68>
        *perr = OS_ERR_PNAME_NULL;
  84a950:	e0bfff17 	ldw	r2,-4(fp)
  84a954:	00c00304 	movi	r3,12
  84a958:	10c00005 	stb	r3,0(r2)
        return (0);
  84a95c:	0005883a 	mov	r2,zero
  84a960:	00002906 	br	84aa08 <OSEventNameGet+0x10c>
    }
#endif
    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  84a964:	d0a0a303 	ldbu	r2,-32116(gp)
  84a968:	10803fcc 	andi	r2,r2,255
  84a96c:	10000526 	beq	r2,zero,84a984 <OSEventNameGet+0x88>
        *perr  = OS_ERR_NAME_GET_ISR;
  84a970:	e0bfff17 	ldw	r2,-4(fp)
  84a974:	00c00444 	movi	r3,17
  84a978:	10c00005 	stb	r3,0(r2)
        return (0);
  84a97c:	0005883a 	mov	r2,zero
  84a980:	00002106 	br	84aa08 <OSEventNameGet+0x10c>
    }
    switch (pevent->OSEventType) {
  84a984:	e0bffd17 	ldw	r2,-12(fp)
  84a988:	10800003 	ldbu	r2,0(r2)
  84a98c:	10803fcc 	andi	r2,r2,255
  84a990:	10bfffc4 	addi	r2,r2,-1
  84a994:	10800128 	cmpgeui	r2,r2,4
  84a998:	10000526 	beq	r2,zero,84a9b0 <OSEventNameGet+0xb4>
        case OS_EVENT_TYPE_MBOX:
        case OS_EVENT_TYPE_Q:
             break;

        default:
             *perr = OS_ERR_EVENT_TYPE;
  84a99c:	e0bfff17 	ldw	r2,-4(fp)
  84a9a0:	00c00044 	movi	r3,1
  84a9a4:	10c00005 	stb	r3,0(r2)
             return (0);
  84a9a8:	0005883a 	mov	r2,zero
  84a9ac:	00001606 	br	84aa08 <OSEventNameGet+0x10c>
    switch (pevent->OSEventType) {
        case OS_EVENT_TYPE_SEM:
        case OS_EVENT_TYPE_MUTEX:
        case OS_EVENT_TYPE_MBOX:
        case OS_EVENT_TYPE_Q:
             break;
  84a9b0:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84a9b4:	0005303a 	rdctl	r2,status
  84a9b8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84a9bc:	e0fffb17 	ldw	r3,-20(fp)
  84a9c0:	00bfff84 	movi	r2,-2
  84a9c4:	1884703a 	and	r2,r3,r2
  84a9c8:	1001703a 	wrctl	status,r2
  
  return context;
  84a9cc:	e0bffb17 	ldw	r2,-20(fp)

        default:
             *perr = OS_ERR_EVENT_TYPE;
             return (0);
    }
    OS_ENTER_CRITICAL();
  84a9d0:	e0bff915 	stw	r2,-28(fp)
    len   = OS_StrCopy(pname, pevent->OSEventName);   /* Copy name from OS_EVENT                       */
  84a9d4:	e0bffd17 	ldw	r2,-12(fp)
  84a9d8:	10800384 	addi	r2,r2,14
  84a9dc:	100b883a 	mov	r5,r2
  84a9e0:	e13ffe17 	ldw	r4,-8(fp)
  84a9e4:	084c3800 	call	84c380 <OS_StrCopy>
  84a9e8:	e0bffa05 	stb	r2,-24(fp)
  84a9ec:	e0bff917 	ldw	r2,-28(fp)
  84a9f0:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84a9f4:	e0bffc17 	ldw	r2,-16(fp)
  84a9f8:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84a9fc:	e0bfff17 	ldw	r2,-4(fp)
  84aa00:	10000005 	stb	zero,0(r2)
    return (len);
  84aa04:	e0bffa03 	ldbu	r2,-24(fp)
}
  84aa08:	e037883a 	mov	sp,fp
  84aa0c:	dfc00117 	ldw	ra,4(sp)
  84aa10:	df000017 	ldw	fp,0(sp)
  84aa14:	dec00204 	addi	sp,sp,8
  84aa18:	f800283a 	ret

0084aa1c <OSEventNameSet>:
*********************************************************************************************************
*/

#if (OS_EVENT_EN) && (OS_EVENT_NAME_SIZE > 1)
void  OSEventNameSet (OS_EVENT *pevent, INT8U *pname, INT8U *perr)
{
  84aa1c:	defff604 	addi	sp,sp,-40
  84aa20:	dfc00915 	stw	ra,36(sp)
  84aa24:	df000815 	stw	fp,32(sp)
  84aa28:	df000804 	addi	fp,sp,32
  84aa2c:	e13ffd15 	stw	r4,-12(fp)
  84aa30:	e17ffe15 	stw	r5,-8(fp)
  84aa34:	e1bfff15 	stw	r6,-4(fp)
    INT8U      len;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84aa38:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84aa3c:	e0bfff17 	ldw	r2,-4(fp)
  84aa40:	10004026 	beq	r2,zero,84ab44 <OSEventNameSet+0x128>
        return;
    }
    if (pevent == (OS_EVENT *)0) {               /* Is 'pevent' a NULL pointer?                        */
  84aa44:	e0bffd17 	ldw	r2,-12(fp)
  84aa48:	1000041e 	bne	r2,zero,84aa5c <OSEventNameSet+0x40>
        *perr = OS_ERR_PEVENT_NULL;
  84aa4c:	e0bfff17 	ldw	r2,-4(fp)
  84aa50:	00c00104 	movi	r3,4
  84aa54:	10c00005 	stb	r3,0(r2)
        return;
  84aa58:	00003b06 	br	84ab48 <OSEventNameSet+0x12c>
    }
    if (pname == (INT8U *)0) {                   /* Is 'pname' a NULL pointer?                         */
  84aa5c:	e0bffe17 	ldw	r2,-8(fp)
  84aa60:	1000041e 	bne	r2,zero,84aa74 <OSEventNameSet+0x58>
        *perr = OS_ERR_PNAME_NULL;
  84aa64:	e0bfff17 	ldw	r2,-4(fp)
  84aa68:	00c00304 	movi	r3,12
  84aa6c:	10c00005 	stb	r3,0(r2)
        return;
  84aa70:	00003506 	br	84ab48 <OSEventNameSet+0x12c>
    }
#endif
    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  84aa74:	d0a0a303 	ldbu	r2,-32116(gp)
  84aa78:	10803fcc 	andi	r2,r2,255
  84aa7c:	10000426 	beq	r2,zero,84aa90 <OSEventNameSet+0x74>
        *perr = OS_ERR_NAME_SET_ISR;
  84aa80:	e0bfff17 	ldw	r2,-4(fp)
  84aa84:	00c00484 	movi	r3,18
  84aa88:	10c00005 	stb	r3,0(r2)
        return;
  84aa8c:	00002e06 	br	84ab48 <OSEventNameSet+0x12c>
    }
    switch (pevent->OSEventType) {
  84aa90:	e0bffd17 	ldw	r2,-12(fp)
  84aa94:	10800003 	ldbu	r2,0(r2)
  84aa98:	10803fcc 	andi	r2,r2,255
  84aa9c:	10bfffc4 	addi	r2,r2,-1
  84aaa0:	10800128 	cmpgeui	r2,r2,4
  84aaa4:	10000426 	beq	r2,zero,84aab8 <OSEventNameSet+0x9c>
        case OS_EVENT_TYPE_MBOX:
        case OS_EVENT_TYPE_Q:
             break;

        default:
             *perr = OS_ERR_EVENT_TYPE;
  84aaa8:	e0bfff17 	ldw	r2,-4(fp)
  84aaac:	00c00044 	movi	r3,1
  84aab0:	10c00005 	stb	r3,0(r2)
             return;
  84aab4:	00002406 	br	84ab48 <OSEventNameSet+0x12c>
    switch (pevent->OSEventType) {
        case OS_EVENT_TYPE_SEM:
        case OS_EVENT_TYPE_MUTEX:
        case OS_EVENT_TYPE_MBOX:
        case OS_EVENT_TYPE_Q:
             break;
  84aab8:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84aabc:	0005303a 	rdctl	r2,status
  84aac0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84aac4:	e0fffc17 	ldw	r3,-16(fp)
  84aac8:	00bfff84 	movi	r2,-2
  84aacc:	1884703a 	and	r2,r3,r2
  84aad0:	1001703a 	wrctl	status,r2
  
  return context;
  84aad4:	e0bffc17 	ldw	r2,-16(fp)

        default:
             *perr = OS_ERR_EVENT_TYPE;
             return;
    }
    OS_ENTER_CRITICAL();
  84aad8:	e0bff815 	stw	r2,-32(fp)
    len = OS_StrLen(pname);                           /* Can we fit the string in the storage area?    */
  84aadc:	e13ffe17 	ldw	r4,-8(fp)
  84aae0:	084c3f40 	call	84c3f4 <OS_StrLen>
  84aae4:	e0bffa05 	stb	r2,-24(fp)
    if (len > (OS_EVENT_NAME_SIZE - 1)) {             /* No                                            */
  84aae8:	e0bffa03 	ldbu	r2,-24(fp)
  84aaec:	10800830 	cmpltui	r2,r2,32
  84aaf0:	1000081e 	bne	r2,zero,84ab14 <OSEventNameSet+0xf8>
  84aaf4:	e0bff817 	ldw	r2,-32(fp)
  84aaf8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84aafc:	e0bff917 	ldw	r2,-28(fp)
  84ab00:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_EVENT_NAME_TOO_LONG;
  84ab04:	e0bfff17 	ldw	r2,-4(fp)
  84ab08:	00c002c4 	movi	r3,11
  84ab0c:	10c00005 	stb	r3,0(r2)
        return;
  84ab10:	00000d06 	br	84ab48 <OSEventNameSet+0x12c>
    }
    (void)OS_StrCopy(pevent->OSEventName, pname);     /* Yes, copy name to the event control block     */
  84ab14:	e0bffd17 	ldw	r2,-12(fp)
  84ab18:	10800384 	addi	r2,r2,14
  84ab1c:	e17ffe17 	ldw	r5,-8(fp)
  84ab20:	1009883a 	mov	r4,r2
  84ab24:	084c3800 	call	84c380 <OS_StrCopy>
  84ab28:	e0bff817 	ldw	r2,-32(fp)
  84ab2c:	e0bffb15 	stw	r2,-20(fp)
  84ab30:	e0bffb17 	ldw	r2,-20(fp)
  84ab34:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84ab38:	e0bfff17 	ldw	r2,-4(fp)
  84ab3c:	10000005 	stb	zero,0(r2)
  84ab40:	00000106 	br	84ab48 <OSEventNameSet+0x12c>



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
        return;
  84ab44:	0001883a 	nop
        return;
    }
    (void)OS_StrCopy(pevent->OSEventName, pname);     /* Yes, copy name to the event control block     */
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
}
  84ab48:	e037883a 	mov	sp,fp
  84ab4c:	dfc00117 	ldw	ra,4(sp)
  84ab50:	df000017 	ldw	fp,0(sp)
  84ab54:	dec00204 	addi	sp,sp,8
  84ab58:	f800283a 	ret

0084ab5c <OSEventPendMulti>:
*********************************************************************************************************
*/
/*$PAGE*/
#if ((OS_EVENT_EN) && (OS_EVENT_MULTI_EN > 0))
INT16U  OSEventPendMulti (OS_EVENT **pevents_pend, OS_EVENT **pevents_rdy, void **pmsgs_rdy, INT16U timeout, INT8U *perr)
{
  84ab5c:	deffed04 	addi	sp,sp,-76
  84ab60:	dfc01215 	stw	ra,72(sp)
  84ab64:	df001115 	stw	fp,68(sp)
  84ab68:	df001104 	addi	fp,sp,68
  84ab6c:	e13ffc15 	stw	r4,-16(fp)
  84ab70:	e17ffd15 	stw	r5,-12(fp)
  84ab74:	e1bffe15 	stw	r6,-8(fp)
  84ab78:	3805883a 	mov	r2,r7
  84ab7c:	e0bfff0d 	sth	r2,-4(fp)
#endif
    BOOLEAN     events_rdy;
    INT16U      events_rdy_nbr;
    INT8U       events_stat;
#if (OS_CRITICAL_METHOD == 3)                           /* Allocate storage for CPU status register    */
    OS_CPU_SR   cpu_sr = 0;
  84ab80:	e03ff315 	stw	zero,-52(fp)
#endif



#if (OS_ARG_CHK_EN > 0)
    if (perr == (INT8U *)0) {                           /* Validate 'perr'                             */
  84ab84:	e0800217 	ldw	r2,8(fp)
  84ab88:	1000021e 	bne	r2,zero,84ab94 <OSEventPendMulti+0x38>
        return (0);
  84ab8c:	0005883a 	mov	r2,zero
  84ab90:	00017106 	br	84b158 <OSEventPendMulti+0x5fc>
    }
    if (pevents_pend == (OS_EVENT **)0) {               /* Validate 'pevents_pend'                     */
  84ab94:	e0bffc17 	ldw	r2,-16(fp)
  84ab98:	1000051e 	bne	r2,zero,84abb0 <OSEventPendMulti+0x54>
       *perr =  OS_ERR_PEVENT_NULL;
  84ab9c:	e0800217 	ldw	r2,8(fp)
  84aba0:	00c00104 	movi	r3,4
  84aba4:	10c00005 	stb	r3,0(r2)
        return (0);
  84aba8:	0005883a 	mov	r2,zero
  84abac:	00016a06 	br	84b158 <OSEventPendMulti+0x5fc>
    }
    if (pevents_rdy  == (OS_EVENT **)0) {               /* Validate 'pevents_rdy'                      */
  84abb0:	e0bffd17 	ldw	r2,-12(fp)
  84abb4:	1000051e 	bne	r2,zero,84abcc <OSEventPendMulti+0x70>
       *perr =  OS_ERR_PEVENT_NULL;
  84abb8:	e0800217 	ldw	r2,8(fp)
  84abbc:	00c00104 	movi	r3,4
  84abc0:	10c00005 	stb	r3,0(r2)
        return (0);
  84abc4:	0005883a 	mov	r2,zero
  84abc8:	00016306 	br	84b158 <OSEventPendMulti+0x5fc>
    }
    if (pmsgs_rdy == (void **)0) {                      /* Validate 'pmsgs_rdy'                        */
  84abcc:	e0bffe17 	ldw	r2,-8(fp)
  84abd0:	1000051e 	bne	r2,zero,84abe8 <OSEventPendMulti+0x8c>
       *perr =  OS_ERR_PEVENT_NULL;
  84abd4:	e0800217 	ldw	r2,8(fp)
  84abd8:	00c00104 	movi	r3,4
  84abdc:	10c00005 	stb	r3,0(r2)
        return (0);
  84abe0:	0005883a 	mov	r2,zero
  84abe4:	00015c06 	br	84b158 <OSEventPendMulti+0x5fc>
    }
#endif

   *pevents_rdy = (OS_EVENT *)0;                        /* Init array to NULL in case of errors        */
  84abe8:	e0bffd17 	ldw	r2,-12(fp)
  84abec:	10000015 	stw	zero,0(r2)

    pevents     =  pevents_pend;
  84abf0:	e0bffc17 	ldw	r2,-16(fp)
  84abf4:	e0bfef15 	stw	r2,-68(fp)
    pevent      = *pevents;
  84abf8:	e0bfef17 	ldw	r2,-68(fp)
  84abfc:	10800017 	ldw	r2,0(r2)
  84ac00:	e0bff015 	stw	r2,-64(fp)
    while  (pevent != (OS_EVENT *)0) {
  84ac04:	00001906 	br	84ac6c <OSEventPendMulti+0x110>
        switch (pevent->OSEventType) {                  /* Validate event block types                  */
  84ac08:	e0bff017 	ldw	r2,-64(fp)
  84ac0c:	10800003 	ldbu	r2,0(r2)
  84ac10:	10803fcc 	andi	r2,r2,255
  84ac14:	10c000a0 	cmpeqi	r3,r2,2
  84ac18:	1800091e 	bne	r3,zero,84ac40 <OSEventPendMulti+0xe4>
  84ac1c:	10c000e0 	cmpeqi	r3,r2,3
  84ac20:	1800091e 	bne	r3,zero,84ac48 <OSEventPendMulti+0xec>
  84ac24:	10800060 	cmpeqi	r2,r2,1
  84ac28:	1000091e 	bne	r2,zero,84ac50 <OSEventPendMulti+0xf4>
#endif

            case OS_EVENT_TYPE_MUTEX:                                            
            case OS_EVENT_TYPE_FLAG:
            default:           
                *perr = OS_ERR_EVENT_TYPE;
  84ac2c:	e0800217 	ldw	r2,8(fp)
  84ac30:	00c00044 	movi	r3,1
  84ac34:	10c00005 	stb	r3,0(r2)
                 return (0);
  84ac38:	0005883a 	mov	r2,zero
  84ac3c:	00014606 	br	84b158 <OSEventPendMulti+0x5fc>
            case OS_EVENT_TYPE_MBOX:
                 break;
#endif
#if ((OS_Q_EN   > 0) && (OS_MAX_QS > 0))
            case OS_EVENT_TYPE_Q:
                 break;
  84ac40:	0001883a 	nop
  84ac44:	00000306 	br	84ac54 <OSEventPendMulti+0xf8>
    pevent      = *pevents;
    while  (pevent != (OS_EVENT *)0) {
        switch (pevent->OSEventType) {                  /* Validate event block types                  */
#if (OS_SEM_EN  > 0)
            case OS_EVENT_TYPE_SEM:
                 break;
  84ac48:	0001883a 	nop
  84ac4c:	00000106 	br	84ac54 <OSEventPendMulti+0xf8>
#endif
#if (OS_MBOX_EN > 0)
            case OS_EVENT_TYPE_MBOX:
                 break;
  84ac50:	0001883a 	nop
            case OS_EVENT_TYPE_FLAG:
            default:           
                *perr = OS_ERR_EVENT_TYPE;
                 return (0);
        }
        pevents++;
  84ac54:	e0bfef17 	ldw	r2,-68(fp)
  84ac58:	10800104 	addi	r2,r2,4
  84ac5c:	e0bfef15 	stw	r2,-68(fp)
        pevent = *pevents;
  84ac60:	e0bfef17 	ldw	r2,-68(fp)
  84ac64:	10800017 	ldw	r2,0(r2)
  84ac68:	e0bff015 	stw	r2,-64(fp)

   *pevents_rdy = (OS_EVENT *)0;                        /* Init array to NULL in case of errors        */

    pevents     =  pevents_pend;
    pevent      = *pevents;
    while  (pevent != (OS_EVENT *)0) {
  84ac6c:	e0bff017 	ldw	r2,-64(fp)
  84ac70:	103fe51e 	bne	r2,zero,84ac08 <__alt_mem_epcs_flash_controller_0+0xff841c08>
        }
        pevents++;
        pevent = *pevents;
    }

    if (OSIntNesting  > 0) {                            /* See if called from ISR ...                  */
  84ac74:	d0a0a303 	ldbu	r2,-32116(gp)
  84ac78:	10803fcc 	andi	r2,r2,255
  84ac7c:	10000526 	beq	r2,zero,84ac94 <OSEventPendMulti+0x138>
       *perr =  OS_ERR_PEND_ISR;                        /* ... can't PEND from an ISR                  */
  84ac80:	e0800217 	ldw	r2,8(fp)
  84ac84:	00c00084 	movi	r3,2
  84ac88:	10c00005 	stb	r3,0(r2)
        return (0);
  84ac8c:	0005883a 	mov	r2,zero
  84ac90:	00013106 	br	84b158 <OSEventPendMulti+0x5fc>
    }
    if (OSLockNesting > 0) {                            /* See if called with scheduler locked ...     */
  84ac94:	d0a09503 	ldbu	r2,-32172(gp)
  84ac98:	10803fcc 	andi	r2,r2,255
  84ac9c:	10000526 	beq	r2,zero,84acb4 <OSEventPendMulti+0x158>
       *perr =  OS_ERR_PEND_LOCKED;                     /* ... can't PEND when locked                  */
  84aca0:	e0800217 	ldw	r2,8(fp)
  84aca4:	00c00344 	movi	r3,13
  84aca8:	10c00005 	stb	r3,0(r2)
        return (0);
  84acac:	0005883a 	mov	r2,zero
  84acb0:	00012906 	br	84b158 <OSEventPendMulti+0x5fc>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84acb4:	0005303a 	rdctl	r2,status
  84acb8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84acbc:	e0fffb17 	ldw	r3,-20(fp)
  84acc0:	00bfff84 	movi	r2,-2
  84acc4:	1884703a 	and	r2,r3,r2
  84acc8:	1001703a 	wrctl	status,r2
  
  return context;
  84accc:	e0bffb17 	ldw	r2,-20(fp)
    }

/*$PAGE*/
    OS_ENTER_CRITICAL();
  84acd0:	e0bff315 	stw	r2,-52(fp)
    events_rdy     =  OS_FALSE;
  84acd4:	e03ff105 	stb	zero,-60(fp)
    events_rdy_nbr =  0;
  84acd8:	e03ff18d 	sth	zero,-58(fp)
    events_stat    =  OS_STAT_RDY;
  84acdc:	e03ff205 	stb	zero,-56(fp)
    pevents        =  pevents_pend;
  84ace0:	e0bffc17 	ldw	r2,-16(fp)
  84ace4:	e0bfef15 	stw	r2,-68(fp)
    pevent         = *pevents;
  84ace8:	e0bfef17 	ldw	r2,-68(fp)
  84acec:	10800017 	ldw	r2,0(r2)
  84acf0:	e0bff015 	stw	r2,-64(fp)
    while (pevent != (OS_EVENT *)0) {                   /* See if any events already available         */
  84acf4:	00008106 	br	84aefc <OSEventPendMulti+0x3a0>
        switch (pevent->OSEventType) {
  84acf8:	e0bff017 	ldw	r2,-64(fp)
  84acfc:	10800003 	ldbu	r2,0(r2)
  84ad00:	10803fcc 	andi	r2,r2,255
  84ad04:	10c000a0 	cmpeqi	r3,r2,2
  84ad08:	18003c1e 	bne	r3,zero,84adfc <OSEventPendMulti+0x2a0>
  84ad0c:	10c000e0 	cmpeqi	r3,r2,3
  84ad10:	1800031e 	bne	r3,zero,84ad20 <OSEventPendMulti+0x1c4>
  84ad14:	10800060 	cmpeqi	r2,r2,1
  84ad18:	10001e1e 	bne	r2,zero,84ad94 <OSEventPendMulti+0x238>
  84ad1c:	00006606 	br	84aeb8 <OSEventPendMulti+0x35c>
#if (OS_SEM_EN > 0)
            case OS_EVENT_TYPE_SEM:
                 if (pevent->OSEventCnt > 0) {          /* If semaphore count > 0, resource available; */
  84ad20:	e0bff017 	ldw	r2,-64(fp)
  84ad24:	1080020b 	ldhu	r2,8(r2)
  84ad28:	10bfffcc 	andi	r2,r2,65535
  84ad2c:	10001526 	beq	r2,zero,84ad84 <OSEventPendMulti+0x228>
                     pevent->OSEventCnt--;              /* ... decrement semaphore,                ... */
  84ad30:	e0bff017 	ldw	r2,-64(fp)
  84ad34:	1080020b 	ldhu	r2,8(r2)
  84ad38:	10bfffc4 	addi	r2,r2,-1
  84ad3c:	1007883a 	mov	r3,r2
  84ad40:	e0bff017 	ldw	r2,-64(fp)
  84ad44:	10c0020d 	sth	r3,8(r2)
                    *pevents_rdy++ =  pevent;           /* ... and return available semaphore event    */
  84ad48:	e0bffd17 	ldw	r2,-12(fp)
  84ad4c:	10c00104 	addi	r3,r2,4
  84ad50:	e0fffd15 	stw	r3,-12(fp)
  84ad54:	e0fff017 	ldw	r3,-64(fp)
  84ad58:	10c00015 	stw	r3,0(r2)
                      events_rdy   =  OS_TRUE;
  84ad5c:	00800044 	movi	r2,1
  84ad60:	e0bff105 	stb	r2,-60(fp)
                    *pmsgs_rdy++   = (void *)0;         /* NO message returned  for semaphores         */
  84ad64:	e0bffe17 	ldw	r2,-8(fp)
  84ad68:	10c00104 	addi	r3,r2,4
  84ad6c:	e0fffe15 	stw	r3,-8(fp)
  84ad70:	10000015 	stw	zero,0(r2)
                      events_rdy_nbr++;
  84ad74:	e0bff18b 	ldhu	r2,-58(fp)
  84ad78:	10800044 	addi	r2,r2,1
  84ad7c:	e0bff18d 	sth	r2,-58(fp)

                 } else {
                      events_stat |=  OS_STAT_SEM;      /* Configure multi-pend for semaphore events   */
                 }
                 break;
  84ad80:	00005806 	br	84aee4 <OSEventPendMulti+0x388>
                      events_rdy   =  OS_TRUE;
                    *pmsgs_rdy++   = (void *)0;         /* NO message returned  for semaphores         */
                      events_rdy_nbr++;

                 } else {
                      events_stat |=  OS_STAT_SEM;      /* Configure multi-pend for semaphore events   */
  84ad84:	e0bff203 	ldbu	r2,-56(fp)
  84ad88:	10800054 	ori	r2,r2,1
  84ad8c:	e0bff205 	stb	r2,-56(fp)
                 }
                 break;
  84ad90:	00005406 	br	84aee4 <OSEventPendMulti+0x388>
#endif

#if (OS_MBOX_EN > 0)
            case OS_EVENT_TYPE_MBOX:
                 if (pevent->OSEventPtr != (void *)0) { /* If mailbox NOT empty;                   ... */
  84ad94:	e0bff017 	ldw	r2,-64(fp)
  84ad98:	10800117 	ldw	r2,4(r2)
  84ad9c:	10001326 	beq	r2,zero,84adec <OSEventPendMulti+0x290>
                                                        /* ... return available message,           ... */
                    *pmsgs_rdy++         = (void *)pevent->OSEventPtr;
  84ada0:	e0bffe17 	ldw	r2,-8(fp)
  84ada4:	10c00104 	addi	r3,r2,4
  84ada8:	e0fffe15 	stw	r3,-8(fp)
  84adac:	e0fff017 	ldw	r3,-64(fp)
  84adb0:	18c00117 	ldw	r3,4(r3)
  84adb4:	10c00015 	stw	r3,0(r2)
                     pevent->OSEventPtr  = (void *)0;
  84adb8:	e0bff017 	ldw	r2,-64(fp)
  84adbc:	10000115 	stw	zero,4(r2)
                    *pevents_rdy++       =  pevent;     /* ... and return available mailbox event      */
  84adc0:	e0bffd17 	ldw	r2,-12(fp)
  84adc4:	10c00104 	addi	r3,r2,4
  84adc8:	e0fffd15 	stw	r3,-12(fp)
  84adcc:	e0fff017 	ldw	r3,-64(fp)
  84add0:	10c00015 	stw	r3,0(r2)
                      events_rdy         =  OS_TRUE;
  84add4:	00800044 	movi	r2,1
  84add8:	e0bff105 	stb	r2,-60(fp)
                      events_rdy_nbr++;
  84addc:	e0bff18b 	ldhu	r2,-58(fp)
  84ade0:	10800044 	addi	r2,r2,1
  84ade4:	e0bff18d 	sth	r2,-58(fp)

                 } else {
                      events_stat |= OS_STAT_MBOX;      /* Configure multi-pend for mailbox events     */
                 }
                 break;
  84ade8:	00003e06 	br	84aee4 <OSEventPendMulti+0x388>
                    *pevents_rdy++       =  pevent;     /* ... and return available mailbox event      */
                      events_rdy         =  OS_TRUE;
                      events_rdy_nbr++;

                 } else {
                      events_stat |= OS_STAT_MBOX;      /* Configure multi-pend for mailbox events     */
  84adec:	e0bff203 	ldbu	r2,-56(fp)
  84adf0:	10800094 	ori	r2,r2,2
  84adf4:	e0bff205 	stb	r2,-56(fp)
                 }
                 break;
  84adf8:	00003a06 	br	84aee4 <OSEventPendMulti+0x388>
#endif

#if ((OS_Q_EN > 0) && (OS_MAX_QS > 0))
            case OS_EVENT_TYPE_Q:
                 pq = (OS_Q *)pevent->OSEventPtr;
  84adfc:	e0bff017 	ldw	r2,-64(fp)
  84ae00:	10800117 	ldw	r2,4(r2)
  84ae04:	e0bff515 	stw	r2,-44(fp)
                 if (pq->OSQEntries > 0) {              /* If queue NOT empty;                     ... */
  84ae08:	e0bff517 	ldw	r2,-44(fp)
  84ae0c:	1080058b 	ldhu	r2,22(r2)
  84ae10:	10bfffcc 	andi	r2,r2,65535
  84ae14:	10002426 	beq	r2,zero,84aea8 <OSEventPendMulti+0x34c>
                                                        /* ... return available message,           ... */
                    *pmsgs_rdy++ = (void *)*pq->OSQOut++;
  84ae18:	e0bffe17 	ldw	r2,-8(fp)
  84ae1c:	10c00104 	addi	r3,r2,4
  84ae20:	e0fffe15 	stw	r3,-8(fp)
  84ae24:	e0fff517 	ldw	r3,-44(fp)
  84ae28:	18c00417 	ldw	r3,16(r3)
  84ae2c:	19400104 	addi	r5,r3,4
  84ae30:	e13ff517 	ldw	r4,-44(fp)
  84ae34:	21400415 	stw	r5,16(r4)
  84ae38:	18c00017 	ldw	r3,0(r3)
  84ae3c:	10c00015 	stw	r3,0(r2)
                     if (pq->OSQOut == pq->OSQEnd) {    /* If OUT ptr at queue end, ...                */
  84ae40:	e0bff517 	ldw	r2,-44(fp)
  84ae44:	10c00417 	ldw	r3,16(r2)
  84ae48:	e0bff517 	ldw	r2,-44(fp)
  84ae4c:	10800217 	ldw	r2,8(r2)
  84ae50:	1880041e 	bne	r3,r2,84ae64 <OSEventPendMulti+0x308>
                         pq->OSQOut  = pq->OSQStart;    /* ... wrap   to queue start                   */
  84ae54:	e0bff517 	ldw	r2,-44(fp)
  84ae58:	10c00117 	ldw	r3,4(r2)
  84ae5c:	e0bff517 	ldw	r2,-44(fp)
  84ae60:	10c00415 	stw	r3,16(r2)
                     }
                     pq->OSQEntries--;                  /* Update number of queue entries              */
  84ae64:	e0bff517 	ldw	r2,-44(fp)
  84ae68:	1080058b 	ldhu	r2,22(r2)
  84ae6c:	10bfffc4 	addi	r2,r2,-1
  84ae70:	1007883a 	mov	r3,r2
  84ae74:	e0bff517 	ldw	r2,-44(fp)
  84ae78:	10c0058d 	sth	r3,22(r2)
                    *pevents_rdy++ = pevent;            /* ... and return available queue event        */
  84ae7c:	e0bffd17 	ldw	r2,-12(fp)
  84ae80:	10c00104 	addi	r3,r2,4
  84ae84:	e0fffd15 	stw	r3,-12(fp)
  84ae88:	e0fff017 	ldw	r3,-64(fp)
  84ae8c:	10c00015 	stw	r3,0(r2)
                      events_rdy   = OS_TRUE;
  84ae90:	00800044 	movi	r2,1
  84ae94:	e0bff105 	stb	r2,-60(fp)
                      events_rdy_nbr++;
  84ae98:	e0bff18b 	ldhu	r2,-58(fp)
  84ae9c:	10800044 	addi	r2,r2,1
  84aea0:	e0bff18d 	sth	r2,-58(fp)

                 } else {
                      events_stat |= OS_STAT_Q;         /* Configure multi-pend for queue events       */
                 }
                 break;
  84aea4:	00000f06 	br	84aee4 <OSEventPendMulti+0x388>
                    *pevents_rdy++ = pevent;            /* ... and return available queue event        */
                      events_rdy   = OS_TRUE;
                      events_rdy_nbr++;

                 } else {
                      events_stat |= OS_STAT_Q;         /* Configure multi-pend for queue events       */
  84aea8:	e0bff203 	ldbu	r2,-56(fp)
  84aeac:	10800114 	ori	r2,r2,4
  84aeb0:	e0bff205 	stb	r2,-56(fp)
                 }
                 break;
  84aeb4:	00000b06 	br	84aee4 <OSEventPendMulti+0x388>
  84aeb8:	e0bff317 	ldw	r2,-52(fp)
  84aebc:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84aec0:	e0bff417 	ldw	r2,-48(fp)
  84aec4:	1001703a 	wrctl	status,r2

            case OS_EVENT_TYPE_MUTEX:                                            
            case OS_EVENT_TYPE_FLAG:
            default:           
                 OS_EXIT_CRITICAL();
                *pevents_rdy = (OS_EVENT *)0;           /* NULL terminate return event array           */
  84aec8:	e0bffd17 	ldw	r2,-12(fp)
  84aecc:	10000015 	stw	zero,0(r2)
                *perr        =  OS_ERR_EVENT_TYPE;
  84aed0:	e0800217 	ldw	r2,8(fp)
  84aed4:	00c00044 	movi	r3,1
  84aed8:	10c00005 	stb	r3,0(r2)
                 return (events_rdy_nbr);
  84aedc:	e0bff18b 	ldhu	r2,-58(fp)
  84aee0:	00009d06 	br	84b158 <OSEventPendMulti+0x5fc>
        }
        pevents++;
  84aee4:	e0bfef17 	ldw	r2,-68(fp)
  84aee8:	10800104 	addi	r2,r2,4
  84aeec:	e0bfef15 	stw	r2,-68(fp)
        pevent = *pevents;
  84aef0:	e0bfef17 	ldw	r2,-68(fp)
  84aef4:	10800017 	ldw	r2,0(r2)
  84aef8:	e0bff015 	stw	r2,-64(fp)
    events_rdy     =  OS_FALSE;
    events_rdy_nbr =  0;
    events_stat    =  OS_STAT_RDY;
    pevents        =  pevents_pend;
    pevent         = *pevents;
    while (pevent != (OS_EVENT *)0) {                   /* See if any events already available         */
  84aefc:	e0bff017 	ldw	r2,-64(fp)
  84af00:	103f7d1e 	bne	r2,zero,84acf8 <__alt_mem_epcs_flash_controller_0+0xff841cf8>
        }
        pevents++;
        pevent = *pevents;
    }

    if ( events_rdy == OS_TRUE) {                       /* Return any events already available         */
  84af04:	e0bff103 	ldbu	r2,-60(fp)
  84af08:	10800058 	cmpnei	r2,r2,1
  84af0c:	10000a1e 	bne	r2,zero,84af38 <OSEventPendMulti+0x3dc>
       *pevents_rdy = (OS_EVENT *)0;                    /* NULL terminate return event array           */
  84af10:	e0bffd17 	ldw	r2,-12(fp)
  84af14:	10000015 	stw	zero,0(r2)
  84af18:	e0bff317 	ldw	r2,-52(fp)
  84af1c:	e0bff615 	stw	r2,-40(fp)
  84af20:	e0bff617 	ldw	r2,-40(fp)
  84af24:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
       *perr        =  OS_ERR_NONE;
  84af28:	e0800217 	ldw	r2,8(fp)
  84af2c:	10000005 	stb	zero,0(r2)
        return (events_rdy_nbr);
  84af30:	e0bff18b 	ldhu	r2,-58(fp)
  84af34:	00008806 	br	84b158 <OSEventPendMulti+0x5fc>
    }
/*$PAGE*/
                                                        /* Otherwise, must wait until any event occurs */
    OSTCBCur->OSTCBStat     |= events_stat  |           /* Resource not available, ...                 */
  84af38:	d0a0a417 	ldw	r2,-32112(gp)
  84af3c:	d0e0a417 	ldw	r3,-32112(gp)
  84af40:	19000c03 	ldbu	r4,48(r3)
  84af44:	e0fff203 	ldbu	r3,-56(fp)
  84af48:	20c6b03a 	or	r3,r4,r3
  84af4c:	1809883a 	mov	r4,r3
  84af50:	00ffe004 	movi	r3,-128
  84af54:	20c6b03a 	or	r3,r4,r3
  84af58:	10c00c05 	stb	r3,48(r2)
                               OS_STAT_MULTI;           /* ... pend on multiple events                 */
    OSTCBCur->OSTCBStatPend  = OS_STAT_PEND_OK;
  84af5c:	d0a0a417 	ldw	r2,-32112(gp)
  84af60:	10000c45 	stb	zero,49(r2)
    OSTCBCur->OSTCBDly       = timeout;                 /* Store pend timeout in TCB                   */
  84af64:	d0a0a417 	ldw	r2,-32112(gp)
  84af68:	e0ffff0b 	ldhu	r3,-4(fp)
  84af6c:	10c00b8d 	sth	r3,46(r2)
    OS_EventTaskWaitMulti(pevents_pend);                /* Suspend task until events or timeout occurs */
  84af70:	e13ffc17 	ldw	r4,-16(fp)
  84af74:	084ba980 	call	84ba98 <OS_EventTaskWaitMulti>
  84af78:	e0bff317 	ldw	r2,-52(fp)
  84af7c:	e0bff915 	stw	r2,-28(fp)
  84af80:	e0bff917 	ldw	r2,-28(fp)
  84af84:	1001703a 	wrctl	status,r2

    OS_EXIT_CRITICAL();
    OS_Sched();                                         /* Find next highest priority task ready       */
  84af88:	084c23c0 	call	84c23c <OS_Sched>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84af8c:	0005303a 	rdctl	r2,status
  84af90:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84af94:	e0fff717 	ldw	r3,-36(fp)
  84af98:	00bfff84 	movi	r2,-2
  84af9c:	1884703a 	and	r2,r3,r2
  84afa0:	1001703a 	wrctl	status,r2
  
  return context;
  84afa4:	e0bff717 	ldw	r2,-36(fp)
    OS_ENTER_CRITICAL();
  84afa8:	e0bff315 	stw	r2,-52(fp)

    switch (OSTCBCur->OSTCBStatPend) {                  /* Handle event posted, aborted, or timed-out  */
  84afac:	d0a0a417 	ldw	r2,-32112(gp)
  84afb0:	10800c43 	ldbu	r2,49(r2)
  84afb4:	10803fcc 	andi	r2,r2,255
  84afb8:	10000226 	beq	r2,zero,84afc4 <OSEventPendMulti+0x468>
  84afbc:	108000a0 	cmpeqi	r2,r2,2
  84afc0:	10001826 	beq	r2,zero,84b024 <OSEventPendMulti+0x4c8>
        case OS_STAT_PEND_OK:
        case OS_STAT_PEND_ABORT:
             pevent = OSTCBCur->OSTCBEventPtr;
  84afc4:	d0a0a417 	ldw	r2,-32112(gp)
  84afc8:	10800717 	ldw	r2,28(r2)
  84afcc:	e0bff015 	stw	r2,-64(fp)
             if (pevent != (OS_EVENT *)0) {             /* If task event ptr != NULL, ...              */
  84afd0:	e0bff017 	ldw	r2,-64(fp)
  84afd4:	10000b26 	beq	r2,zero,84b004 <OSEventPendMulti+0x4a8>
                *pevents_rdy++ =  pevent;               /* ... return available event ...              */
  84afd8:	e0bffd17 	ldw	r2,-12(fp)
  84afdc:	10c00104 	addi	r3,r2,4
  84afe0:	e0fffd15 	stw	r3,-12(fp)
  84afe4:	e0fff017 	ldw	r3,-64(fp)
  84afe8:	10c00015 	stw	r3,0(r2)
                *pevents_rdy   = (OS_EVENT *)0;         /* ... & NULL terminate return event array     */
  84afec:	e0bffd17 	ldw	r2,-12(fp)
  84aff0:	10000015 	stw	zero,0(r2)
                  events_rdy_nbr++;
  84aff4:	e0bff18b 	ldhu	r2,-58(fp)
  84aff8:	10800044 	addi	r2,r2,1
  84affc:	e0bff18d 	sth	r2,-58(fp)

             } else {                                   /* Else NO event available, handle as timeout  */
                 OSTCBCur->OSTCBStatPend = OS_STAT_PEND_TO;
                 OS_EventTaskRemoveMulti(OSTCBCur, pevents_pend);
             }
			 break;
  84b000:	00000d06 	br	84b038 <OSEventPendMulti+0x4dc>
                *pevents_rdy++ =  pevent;               /* ... return available event ...              */
                *pevents_rdy   = (OS_EVENT *)0;         /* ... & NULL terminate return event array     */
                  events_rdy_nbr++;

             } else {                                   /* Else NO event available, handle as timeout  */
                 OSTCBCur->OSTCBStatPend = OS_STAT_PEND_TO;
  84b004:	d0a0a417 	ldw	r2,-32112(gp)
  84b008:	00c00044 	movi	r3,1
  84b00c:	10c00c45 	stb	r3,49(r2)
                 OS_EventTaskRemoveMulti(OSTCBCur, pevents_pend);
  84b010:	d0a0a417 	ldw	r2,-32112(gp)
  84b014:	e17ffc17 	ldw	r5,-16(fp)
  84b018:	1009883a 	mov	r4,r2
  84b01c:	084bca00 	call	84bca0 <OS_EventTaskRemoveMulti>
             }
			 break;
  84b020:	00000506 	br	84b038 <OSEventPendMulti+0x4dc>

        case OS_STAT_PEND_TO:
        default:                                        /* ... remove task from events' wait lists     */
             OS_EventTaskRemoveMulti(OSTCBCur, pevents_pend);
  84b024:	d0a0a417 	ldw	r2,-32112(gp)
  84b028:	e17ffc17 	ldw	r5,-16(fp)
  84b02c:	1009883a 	mov	r4,r2
  84b030:	084bca00 	call	84bca0 <OS_EventTaskRemoveMulti>
             break;
  84b034:	0001883a 	nop
    }

    switch (OSTCBCur->OSTCBStatPend) {
  84b038:	d0a0a417 	ldw	r2,-32112(gp)
  84b03c:	10800c43 	ldbu	r2,49(r2)
  84b040:	10803fcc 	andi	r2,r2,255
  84b044:	10000326 	beq	r2,zero,84b054 <OSEventPendMulti+0x4f8>
  84b048:	108000a0 	cmpeqi	r2,r2,2
  84b04c:	1000231e 	bne	r2,zero,84b0dc <OSEventPendMulti+0x580>
  84b050:	00002a06 	br	84b0fc <OSEventPendMulti+0x5a0>
        case OS_STAT_PEND_OK:
             switch (pevent->OSEventType) {             /* Return event's message                      */
  84b054:	e0bff017 	ldw	r2,-64(fp)
  84b058:	10800003 	ldbu	r2,0(r2)
  84b05c:	10803fcc 	andi	r2,r2,255
  84b060:	0080100e 	bge	zero,r2,84b0a4 <OSEventPendMulti+0x548>
  84b064:	10c000d0 	cmplti	r3,r2,3
  84b068:	1800071e 	bne	r3,zero,84b088 <OSEventPendMulti+0x52c>
  84b06c:	108000e0 	cmpeqi	r2,r2,3
  84b070:	10000c26 	beq	r2,zero,84b0a4 <OSEventPendMulti+0x548>
#if (OS_SEM_EN > 0)
                 case OS_EVENT_TYPE_SEM:
                     *pmsgs_rdy++ = (void *)0;          /* NO message returned for semaphores          */
  84b074:	e0bffe17 	ldw	r2,-8(fp)
  84b078:	10c00104 	addi	r3,r2,4
  84b07c:	e0fffe15 	stw	r3,-8(fp)
  84b080:	10000015 	stw	zero,0(r2)
                      break;
  84b084:	00001206 	br	84b0d0 <OSEventPendMulti+0x574>

#if ((OS_MBOX_EN > 0) ||                 \
    ((OS_Q_EN    > 0) && (OS_MAX_QS > 0)))
                 case OS_EVENT_TYPE_MBOX:
                 case OS_EVENT_TYPE_Q:
                     *pmsgs_rdy++ = (void *)OSTCBCur->OSTCBMsg;     /* Return received message         */
  84b088:	e0bffe17 	ldw	r2,-8(fp)
  84b08c:	10c00104 	addi	r3,r2,4
  84b090:	e0fffe15 	stw	r3,-8(fp)
  84b094:	d0e0a417 	ldw	r3,-32112(gp)
  84b098:	18c00917 	ldw	r3,36(r3)
  84b09c:	10c00015 	stw	r3,0(r2)
                      break;
  84b0a0:	00000b06 	br	84b0d0 <OSEventPendMulti+0x574>
  84b0a4:	e0bff317 	ldw	r2,-52(fp)
  84b0a8:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84b0ac:	e0bff817 	ldw	r2,-32(fp)
  84b0b0:	1001703a 	wrctl	status,r2

                 case OS_EVENT_TYPE_MUTEX:                                       
                 case OS_EVENT_TYPE_FLAG:
                 default:           
                      OS_EXIT_CRITICAL();
                     *pevents_rdy = (OS_EVENT *)0;      /* NULL terminate return event array           */
  84b0b4:	e0bffd17 	ldw	r2,-12(fp)
  84b0b8:	10000015 	stw	zero,0(r2)
                     *perr        =  OS_ERR_EVENT_TYPE;
  84b0bc:	e0800217 	ldw	r2,8(fp)
  84b0c0:	00c00044 	movi	r3,1
  84b0c4:	10c00005 	stb	r3,0(r2)
                      return (events_rdy_nbr);
  84b0c8:	e0bff18b 	ldhu	r2,-58(fp)
  84b0cc:	00002206 	br	84b158 <OSEventPendMulti+0x5fc>
             }
            *perr = OS_ERR_NONE;
  84b0d0:	e0800217 	ldw	r2,8(fp)
  84b0d4:	10000005 	stb	zero,0(r2)
             break;
  84b0d8:	00001006 	br	84b11c <OSEventPendMulti+0x5c0>

        case OS_STAT_PEND_ABORT:
            *pmsgs_rdy++ = (void *)0;                   /* NO message returned for abort               */
  84b0dc:	e0bffe17 	ldw	r2,-8(fp)
  84b0e0:	10c00104 	addi	r3,r2,4
  84b0e4:	e0fffe15 	stw	r3,-8(fp)
  84b0e8:	10000015 	stw	zero,0(r2)
            *perr        =  OS_ERR_PEND_ABORT;          /* Indicate that event  aborted                */
  84b0ec:	e0800217 	ldw	r2,8(fp)
  84b0f0:	00c00384 	movi	r3,14
  84b0f4:	10c00005 	stb	r3,0(r2)
             break;
  84b0f8:	00000806 	br	84b11c <OSEventPendMulti+0x5c0>
                                                        
        case OS_STAT_PEND_TO:                                                
        default:        
            *pmsgs_rdy++ = (void *)0;                   /* NO message returned for timeout             */
  84b0fc:	e0bffe17 	ldw	r2,-8(fp)
  84b100:	10c00104 	addi	r3,r2,4
  84b104:	e0fffe15 	stw	r3,-8(fp)
  84b108:	10000015 	stw	zero,0(r2)
            *perr        =  OS_ERR_TIMEOUT;             /* Indicate that events timed out              */
  84b10c:	e0800217 	ldw	r2,8(fp)
  84b110:	00c00284 	movi	r3,10
  84b114:	10c00005 	stb	r3,0(r2)
             break;
  84b118:	0001883a 	nop
    }

    OSTCBCur->OSTCBStat          =  OS_STAT_RDY;        /* Set   task  status to ready                 */
  84b11c:	d0a0a417 	ldw	r2,-32112(gp)
  84b120:	10000c05 	stb	zero,48(r2)
    OSTCBCur->OSTCBStatPend      =  OS_STAT_PEND_OK;    /* Clear pend  status                          */
  84b124:	d0a0a417 	ldw	r2,-32112(gp)
  84b128:	10000c45 	stb	zero,49(r2)
    OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;      /* Clear event pointers                        */
  84b12c:	d0a0a417 	ldw	r2,-32112(gp)
  84b130:	10000715 	stw	zero,28(r2)
    OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)0;
  84b134:	d0a0a417 	ldw	r2,-32112(gp)
  84b138:	10000815 	stw	zero,32(r2)
    OSTCBCur->OSTCBMsg           = (void      *)0;      /* Clear task  message                         */
  84b13c:	d0a0a417 	ldw	r2,-32112(gp)
  84b140:	10000915 	stw	zero,36(r2)
  84b144:	e0bff317 	ldw	r2,-52(fp)
  84b148:	e0bffa15 	stw	r2,-24(fp)
  84b14c:	e0bffa17 	ldw	r2,-24(fp)
  84b150:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();

    return (events_rdy_nbr);
  84b154:	e0bff18b 	ldhu	r2,-58(fp)
}
  84b158:	e037883a 	mov	sp,fp
  84b15c:	dfc00117 	ldw	ra,4(sp)
  84b160:	df000017 	ldw	fp,0(sp)
  84b164:	dec00204 	addi	sp,sp,8
  84b168:	f800283a 	ret

0084b16c <OSInit>:
* Returns    : none
*********************************************************************************************************
*/

void  OSInit (void)
{
  84b16c:	defffe04 	addi	sp,sp,-8
  84b170:	dfc00115 	stw	ra,4(sp)
  84b174:	df000015 	stw	fp,0(sp)
  84b178:	d839883a 	mov	fp,sp
    OSInitHookBegin();                                           /* Call port specific initialization code   */
  84b17c:	0856a680 	call	856a68 <OSInitHookBegin>

    OS_InitMisc();                                               /* Initialize miscellaneous variables       */
  84b180:	084bee80 	call	84bee8 <OS_InitMisc>

    OS_InitRdyList();                                            /* Initialize the Ready List                */
  84b184:	084bf300 	call	84bf30 <OS_InitRdyList>

    OS_InitTCBList();                                            /* Initialize the free list of OS_TCBs      */
  84b188:	084c09c0 	call	84c09c <OS_InitTCBList>

    OS_InitEventList();                                          /* Initialize the free list of OS_EVENTs    */
  84b18c:	084be080 	call	84be08 <OS_InitEventList>

#if (OS_FLAG_EN > 0) && (OS_MAX_FLAGS > 0)
    OS_FlagInit();                                               /* Initialize the event flag structures     */
  84b190:	084df3c0 	call	84df3c <OS_FlagInit>
#endif

#if (OS_MEM_EN > 0) && (OS_MAX_MEM_PART > 0)
    OS_MemInit();                                                /* Initialize the memory manager            */
  84b194:	084e83c0 	call	84e83c <OS_MemInit>
#endif

#if (OS_Q_EN > 0) && (OS_MAX_QS > 0)
    OS_QInit();                                                  /* Initialize the message queue structures  */
  84b198:	084f9700 	call	84f970 <OS_QInit>
#endif

    OS_InitTaskIdle();                                           /* Create the Idle Task                     */
  84b19c:	084bf9c0 	call	84bf9c <OS_InitTaskIdle>
#if OS_TASK_STAT_EN > 0
    OS_InitTaskStat();                                           /* Create the Statistic Task                */
  84b1a0:	084c01c0 	call	84c01c <OS_InitTaskStat>

#if OS_TMR_EN > 0
    OSTmr_Init();                                                /* Initialize the Timer Manager             */
#endif

    OSInitHookEnd();                                             /* Call port specific init. code            */
  84b1a4:	0856a880 	call	856a88 <OSInitHookEnd>

#if OS_DEBUG_EN > 0
    OSDebugInit();
  84b1a8:	084c9100 	call	84c910 <OSDebugInit>
#endif
}
  84b1ac:	0001883a 	nop
  84b1b0:	e037883a 	mov	sp,fp
  84b1b4:	dfc00117 	ldw	ra,4(sp)
  84b1b8:	df000017 	ldw	fp,0(sp)
  84b1bc:	dec00204 	addi	sp,sp,8
  84b1c0:	f800283a 	ret

0084b1c4 <OSIntEnter>:
*              5) You are allowed to nest interrupts up to 255 levels deep.
*********************************************************************************************************
*/

void  OSIntEnter (void)
{
  84b1c4:	deffff04 	addi	sp,sp,-4
  84b1c8:	df000015 	stw	fp,0(sp)
  84b1cc:	d839883a 	mov	fp,sp
    if (OSRunning == OS_TRUE) {
  84b1d0:	d0a09543 	ldbu	r2,-32171(gp)
  84b1d4:	10803fcc 	andi	r2,r2,255
  84b1d8:	10800058 	cmpnei	r2,r2,1
  84b1dc:	1000071e 	bne	r2,zero,84b1fc <OSIntEnter+0x38>
        if (OSIntNesting < 255u) {
  84b1e0:	d0a0a303 	ldbu	r2,-32116(gp)
  84b1e4:	10803fcc 	andi	r2,r2,255
  84b1e8:	10803fe0 	cmpeqi	r2,r2,255
  84b1ec:	1000031e 	bne	r2,zero,84b1fc <OSIntEnter+0x38>
            OSIntNesting++;                      /* Increment ISR nesting level                        */
  84b1f0:	d0a0a303 	ldbu	r2,-32116(gp)
  84b1f4:	10800044 	addi	r2,r2,1
  84b1f8:	d0a0a305 	stb	r2,-32116(gp)
        }
    }
}
  84b1fc:	0001883a 	nop
  84b200:	e037883a 	mov	sp,fp
  84b204:	df000017 	ldw	fp,0(sp)
  84b208:	dec00104 	addi	sp,sp,4
  84b20c:	f800283a 	ret

0084b210 <OSIntExit>:
*              2) Rescheduling is prevented when the scheduler is locked (see OS_SchedLock())
*********************************************************************************************************
*/

void  OSIntExit (void)
{
  84b210:	defffb04 	addi	sp,sp,-20
  84b214:	dfc00415 	stw	ra,16(sp)
  84b218:	df000315 	stw	fp,12(sp)
  84b21c:	df000304 	addi	fp,sp,12
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  84b220:	e03ffd15 	stw	zero,-12(fp)
#endif



    if (OSRunning == OS_TRUE) {
  84b224:	d0a09543 	ldbu	r2,-32171(gp)
  84b228:	10803fcc 	andi	r2,r2,255
  84b22c:	10800058 	cmpnei	r2,r2,1
  84b230:	10002f1e 	bne	r2,zero,84b2f0 <OSIntExit+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84b234:	0005303a 	rdctl	r2,status
  84b238:	e0bfff15 	stw	r2,-4(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84b23c:	e0ffff17 	ldw	r3,-4(fp)
  84b240:	00bfff84 	movi	r2,-2
  84b244:	1884703a 	and	r2,r3,r2
  84b248:	1001703a 	wrctl	status,r2
  
  return context;
  84b24c:	e0bfff17 	ldw	r2,-4(fp)
        OS_ENTER_CRITICAL();
  84b250:	e0bffd15 	stw	r2,-12(fp)
        if (OSIntNesting > 0) {                            /* Prevent OSIntNesting from wrapping       */
  84b254:	d0a0a303 	ldbu	r2,-32116(gp)
  84b258:	10803fcc 	andi	r2,r2,255
  84b25c:	10000326 	beq	r2,zero,84b26c <OSIntExit+0x5c>
            OSIntNesting--;
  84b260:	d0a0a303 	ldbu	r2,-32116(gp)
  84b264:	10bfffc4 	addi	r2,r2,-1
  84b268:	d0a0a305 	stb	r2,-32116(gp)
        }
        if (OSIntNesting == 0) {                           /* Reschedule only if all ISRs complete ... */
  84b26c:	d0a0a303 	ldbu	r2,-32116(gp)
  84b270:	10803fcc 	andi	r2,r2,255
  84b274:	10001a1e 	bne	r2,zero,84b2e0 <OSIntExit+0xd0>
            if (OSLockNesting == 0) {                      /* ... and not locked.                      */
  84b278:	d0a09503 	ldbu	r2,-32172(gp)
  84b27c:	10803fcc 	andi	r2,r2,255
  84b280:	1000171e 	bne	r2,zero,84b2e0 <OSIntExit+0xd0>
                OS_SchedNew();
  84b284:	084c30c0 	call	84c30c <OS_SchedNew>
                if (OSPrioHighRdy != OSPrioCur) {          /* No Ctx Sw if current task is highest rdy */
  84b288:	d0e09703 	ldbu	r3,-32164(gp)
  84b28c:	d0a09743 	ldbu	r2,-32163(gp)
  84b290:	18c03fcc 	andi	r3,r3,255
  84b294:	10803fcc 	andi	r2,r2,255
  84b298:	18801126 	beq	r3,r2,84b2e0 <OSIntExit+0xd0>
                    OSTCBHighRdy  = OSTCBPrioTbl[OSPrioHighRdy];
  84b29c:	d0a09703 	ldbu	r2,-32164(gp)
  84b2a0:	10c03fcc 	andi	r3,r2,255
  84b2a4:	008021b4 	movhi	r2,134
  84b2a8:	1098b904 	addi	r2,r2,25316
  84b2ac:	18c7883a 	add	r3,r3,r3
  84b2b0:	18c7883a 	add	r3,r3,r3
  84b2b4:	10c5883a 	add	r2,r2,r3
  84b2b8:	10800017 	ldw	r2,0(r2)
  84b2bc:	d0a09f15 	stw	r2,-32132(gp)
#if OS_TASK_PROFILE_EN > 0
                    OSTCBHighRdy->OSTCBCtxSwCtr++;         /* Inc. # of context switches to this task  */
  84b2c0:	d0a09f17 	ldw	r2,-32132(gp)
  84b2c4:	10c00e17 	ldw	r3,56(r2)
  84b2c8:	18c00044 	addi	r3,r3,1
  84b2cc:	10c00e15 	stw	r3,56(r2)
#endif
                    OSCtxSwCtr++;                          /* Keep track of the number of ctx switches */
  84b2d0:	d0a09a17 	ldw	r2,-32152(gp)
  84b2d4:	10800044 	addi	r2,r2,1
  84b2d8:	d0a09a15 	stw	r2,-32152(gp)
                    OSIntCtxSw();                          /* Perform interrupt level ctx switch       */
  84b2dc:	08567940 	call	856794 <OSCtxSw>
  84b2e0:	e0bffd17 	ldw	r2,-12(fp)
  84b2e4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84b2e8:	e0bffe17 	ldw	r2,-8(fp)
  84b2ec:	1001703a 	wrctl	status,r2
                }
            }
        }
        OS_EXIT_CRITICAL();
    }
}
  84b2f0:	0001883a 	nop
  84b2f4:	e037883a 	mov	sp,fp
  84b2f8:	dfc00117 	ldw	ra,4(sp)
  84b2fc:	df000017 	ldw	fp,0(sp)
  84b300:	dec00204 	addi	sp,sp,8
  84b304:	f800283a 	ret

0084b308 <OSSchedLock>:
*********************************************************************************************************
*/

#if OS_SCHED_LOCK_EN > 0
void  OSSchedLock (void)
{
  84b308:	defffc04 	addi	sp,sp,-16
  84b30c:	df000315 	stw	fp,12(sp)
  84b310:	df000304 	addi	fp,sp,12
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84b314:	e03ffd15 	stw	zero,-12(fp)
#endif



    if (OSRunning == OS_TRUE) {                  /* Make sure multitasking is running                  */
  84b318:	d0a09543 	ldbu	r2,-32171(gp)
  84b31c:	10803fcc 	andi	r2,r2,255
  84b320:	10800058 	cmpnei	r2,r2,1
  84b324:	1000161e 	bne	r2,zero,84b380 <OSSchedLock+0x78>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84b328:	0005303a 	rdctl	r2,status
  84b32c:	e0bfff15 	stw	r2,-4(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84b330:	e0ffff17 	ldw	r3,-4(fp)
  84b334:	00bfff84 	movi	r2,-2
  84b338:	1884703a 	and	r2,r3,r2
  84b33c:	1001703a 	wrctl	status,r2
  
  return context;
  84b340:	e0bfff17 	ldw	r2,-4(fp)
        OS_ENTER_CRITICAL();
  84b344:	e0bffd15 	stw	r2,-12(fp)
        if (OSIntNesting == 0) {                 /* Can't call from an ISR                             */
  84b348:	d0a0a303 	ldbu	r2,-32116(gp)
  84b34c:	10803fcc 	andi	r2,r2,255
  84b350:	1000071e 	bne	r2,zero,84b370 <OSSchedLock+0x68>
            if (OSLockNesting < 255u) {          /* Prevent OSLockNesting from wrapping back to 0      */
  84b354:	d0a09503 	ldbu	r2,-32172(gp)
  84b358:	10803fcc 	andi	r2,r2,255
  84b35c:	10803fe0 	cmpeqi	r2,r2,255
  84b360:	1000031e 	bne	r2,zero,84b370 <OSSchedLock+0x68>
                OSLockNesting++;                 /* Increment lock nesting level                       */
  84b364:	d0a09503 	ldbu	r2,-32172(gp)
  84b368:	10800044 	addi	r2,r2,1
  84b36c:	d0a09505 	stb	r2,-32172(gp)
  84b370:	e0bffd17 	ldw	r2,-12(fp)
  84b374:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84b378:	e0bffe17 	ldw	r2,-8(fp)
  84b37c:	1001703a 	wrctl	status,r2
            }
        }
        OS_EXIT_CRITICAL();
    }
}
  84b380:	0001883a 	nop
  84b384:	e037883a 	mov	sp,fp
  84b388:	df000017 	ldw	fp,0(sp)
  84b38c:	dec00104 	addi	sp,sp,4
  84b390:	f800283a 	ret

0084b394 <OSSchedUnlock>:
*********************************************************************************************************
*/

#if OS_SCHED_LOCK_EN > 0
void  OSSchedUnlock (void)
{
  84b394:	defff804 	addi	sp,sp,-32
  84b398:	dfc00715 	stw	ra,28(sp)
  84b39c:	df000615 	stw	fp,24(sp)
  84b3a0:	df000604 	addi	fp,sp,24
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  84b3a4:	e03ffa15 	stw	zero,-24(fp)
#endif



    if (OSRunning == OS_TRUE) {                            /* Make sure multitasking is running        */
  84b3a8:	d0a09543 	ldbu	r2,-32171(gp)
  84b3ac:	10803fcc 	andi	r2,r2,255
  84b3b0:	10800058 	cmpnei	r2,r2,1
  84b3b4:	1000281e 	bne	r2,zero,84b458 <OSSchedUnlock+0xc4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84b3b8:	0005303a 	rdctl	r2,status
  84b3bc:	e0bfff15 	stw	r2,-4(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84b3c0:	e0ffff17 	ldw	r3,-4(fp)
  84b3c4:	00bfff84 	movi	r2,-2
  84b3c8:	1884703a 	and	r2,r3,r2
  84b3cc:	1001703a 	wrctl	status,r2
  
  return context;
  84b3d0:	e0bfff17 	ldw	r2,-4(fp)
        OS_ENTER_CRITICAL();
  84b3d4:	e0bffa15 	stw	r2,-24(fp)
        if (OSLockNesting > 0) {                           /* Do not decrement if already 0            */
  84b3d8:	d0a09503 	ldbu	r2,-32172(gp)
  84b3dc:	10803fcc 	andi	r2,r2,255
  84b3e0:	10001926 	beq	r2,zero,84b448 <OSSchedUnlock+0xb4>
            OSLockNesting--;                               /* Decrement lock nesting level             */
  84b3e4:	d0a09503 	ldbu	r2,-32172(gp)
  84b3e8:	10bfffc4 	addi	r2,r2,-1
  84b3ec:	d0a09505 	stb	r2,-32172(gp)
            if (OSLockNesting == 0) {                      /* See if scheduler is enabled and ...      */
  84b3f0:	d0a09503 	ldbu	r2,-32172(gp)
  84b3f4:	10803fcc 	andi	r2,r2,255
  84b3f8:	10000e1e 	bne	r2,zero,84b434 <OSSchedUnlock+0xa0>
                if (OSIntNesting == 0) {                   /* ... not in an ISR                        */
  84b3fc:	d0a0a303 	ldbu	r2,-32116(gp)
  84b400:	10803fcc 	andi	r2,r2,255
  84b404:	1000061e 	bne	r2,zero,84b420 <OSSchedUnlock+0x8c>
  84b408:	e0bffa17 	ldw	r2,-24(fp)
  84b40c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84b410:	e0bffb17 	ldw	r2,-20(fp)
  84b414:	1001703a 	wrctl	status,r2
                    OS_EXIT_CRITICAL();
                    OS_Sched();                            /* See if a HPT is ready                    */
  84b418:	084c23c0 	call	84c23c <OS_Sched>
            }
        } else {
            OS_EXIT_CRITICAL();
        }
    }
}
  84b41c:	00000e06 	br	84b458 <OSSchedUnlock+0xc4>
  84b420:	e0bffa17 	ldw	r2,-24(fp)
  84b424:	e0bffc15 	stw	r2,-16(fp)
  84b428:	e0bffc17 	ldw	r2,-16(fp)
  84b42c:	1001703a 	wrctl	status,r2
  84b430:	00000906 	br	84b458 <OSSchedUnlock+0xc4>
  84b434:	e0bffa17 	ldw	r2,-24(fp)
  84b438:	e0bffd15 	stw	r2,-12(fp)
  84b43c:	e0bffd17 	ldw	r2,-12(fp)
  84b440:	1001703a 	wrctl	status,r2
  84b444:	00000406 	br	84b458 <OSSchedUnlock+0xc4>
  84b448:	e0bffa17 	ldw	r2,-24(fp)
  84b44c:	e0bffe15 	stw	r2,-8(fp)
  84b450:	e0bffe17 	ldw	r2,-8(fp)
  84b454:	1001703a 	wrctl	status,r2
  84b458:	0001883a 	nop
  84b45c:	e037883a 	mov	sp,fp
  84b460:	dfc00117 	ldw	ra,4(sp)
  84b464:	df000017 	ldw	fp,0(sp)
  84b468:	dec00204 	addi	sp,sp,8
  84b46c:	f800283a 	ret

0084b470 <OSStart>:
*                 d_ Execute the task.
*********************************************************************************************************
*/

void  OSStart (void)
{
  84b470:	defffe04 	addi	sp,sp,-8
  84b474:	dfc00115 	stw	ra,4(sp)
  84b478:	df000015 	stw	fp,0(sp)
  84b47c:	d839883a 	mov	fp,sp
    if (OSRunning == OS_FALSE) {
  84b480:	d0a09543 	ldbu	r2,-32171(gp)
  84b484:	10803fcc 	andi	r2,r2,255
  84b488:	10000f1e 	bne	r2,zero,84b4c8 <OSStart+0x58>
        OS_SchedNew();                               /* Find highest priority's task priority number   */
  84b48c:	084c30c0 	call	84c30c <OS_SchedNew>
        OSPrioCur     = OSPrioHighRdy;
  84b490:	d0a09703 	ldbu	r2,-32164(gp)
  84b494:	d0a09745 	stb	r2,-32163(gp)
        OSTCBHighRdy  = OSTCBPrioTbl[OSPrioHighRdy]; /* Point to highest priority task ready to run    */
  84b498:	d0a09703 	ldbu	r2,-32164(gp)
  84b49c:	10c03fcc 	andi	r3,r2,255
  84b4a0:	008021b4 	movhi	r2,134
  84b4a4:	1098b904 	addi	r2,r2,25316
  84b4a8:	18c7883a 	add	r3,r3,r3
  84b4ac:	18c7883a 	add	r3,r3,r3
  84b4b0:	10c5883a 	add	r2,r2,r3
  84b4b4:	10800017 	ldw	r2,0(r2)
  84b4b8:	d0a09f15 	stw	r2,-32132(gp)
        OSTCBCur      = OSTCBHighRdy;
  84b4bc:	d0a09f17 	ldw	r2,-32132(gp)
  84b4c0:	d0a0a415 	stw	r2,-32112(gp)
        OSStartHighRdy();                            /* Execute target specific code to start task     */
  84b4c4:	08568200 	call	856820 <OSStartHighRdy>
    }
}
  84b4c8:	0001883a 	nop
  84b4cc:	e037883a 	mov	sp,fp
  84b4d0:	dfc00117 	ldw	ra,4(sp)
  84b4d4:	df000017 	ldw	fp,0(sp)
  84b4d8:	dec00204 	addi	sp,sp,8
  84b4dc:	f800283a 	ret

0084b4e0 <OSStatInit>:
*********************************************************************************************************
*/

#if OS_TASK_STAT_EN > 0
void  OSStatInit (void)
{
  84b4e0:	defff904 	addi	sp,sp,-28
  84b4e4:	dfc00615 	stw	ra,24(sp)
  84b4e8:	df000515 	stw	fp,20(sp)
  84b4ec:	df000504 	addi	fp,sp,20
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84b4f0:	e03ffb15 	stw	zero,-20(fp)
#endif



    OSTimeDly(2);                                /* Synchronize with clock tick                        */
  84b4f4:	01000084 	movi	r4,2
  84b4f8:	0851be40 	call	851be4 <OSTimeDly>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84b4fc:	0005303a 	rdctl	r2,status
  84b500:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84b504:	e0fffc17 	ldw	r3,-16(fp)
  84b508:	00bfff84 	movi	r2,-2
  84b50c:	1884703a 	and	r2,r3,r2
  84b510:	1001703a 	wrctl	status,r2
  
  return context;
  84b514:	e0bffc17 	ldw	r2,-16(fp)
    OS_ENTER_CRITICAL();
  84b518:	e0bffb15 	stw	r2,-20(fp)
    OSIdleCtr    = 0L;                           /* Clear idle counter                                 */
  84b51c:	d0209615 	stw	zero,-32168(gp)
  84b520:	e0bffb17 	ldw	r2,-20(fp)
  84b524:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84b528:	e0bffd17 	ldw	r2,-12(fp)
  84b52c:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    OSTimeDly(OS_TICKS_PER_SEC / 10);            /* Determine MAX. idle counter value for 1/10 second  */
  84b530:	01001904 	movi	r4,100
  84b534:	0851be40 	call	851be4 <OSTimeDly>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84b538:	0005303a 	rdctl	r2,status
  84b53c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84b540:	e0fffe17 	ldw	r3,-8(fp)
  84b544:	00bfff84 	movi	r2,-2
  84b548:	1884703a 	and	r2,r3,r2
  84b54c:	1001703a 	wrctl	status,r2
  
  return context;
  84b550:	e0bffe17 	ldw	r2,-8(fp)
    OS_ENTER_CRITICAL();
  84b554:	e0bffb15 	stw	r2,-20(fp)
    OSIdleCtrMax = OSIdleCtr;                    /* Store maximum idle counter count in 1/10 second    */
  84b558:	d0a09617 	ldw	r2,-32168(gp)
  84b55c:	d0a09b15 	stw	r2,-32148(gp)
    OSStatRdy    = OS_TRUE;
  84b560:	00800044 	movi	r2,1
  84b564:	d0a0a705 	stb	r2,-32100(gp)
  84b568:	e0bffb17 	ldw	r2,-20(fp)
  84b56c:	e0bfff15 	stw	r2,-4(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84b570:	e0bfff17 	ldw	r2,-4(fp)
  84b574:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
}
  84b578:	0001883a 	nop
  84b57c:	e037883a 	mov	sp,fp
  84b580:	dfc00117 	ldw	ra,4(sp)
  84b584:	df000017 	ldw	fp,0(sp)
  84b588:	dec00204 	addi	sp,sp,8
  84b58c:	f800283a 	ret

0084b590 <OSTimeTick>:
* Returns    : none
*********************************************************************************************************
*/

void  OSTimeTick (void)
{
  84b590:	defff704 	addi	sp,sp,-36
  84b594:	dfc00815 	stw	ra,32(sp)
  84b598:	df000715 	stw	fp,28(sp)
  84b59c:	df000704 	addi	fp,sp,28
    OS_TCB    *ptcb;
#if OS_TICK_STEP_EN > 0
    BOOLEAN    step;
#endif
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register     */
    OS_CPU_SR  cpu_sr = 0;
  84b5a0:	e03ffb15 	stw	zero,-20(fp)
#endif



#if OS_TIME_TICK_HOOK_EN > 0
    OSTimeTickHook();                                      /* Call user definable hook                     */
  84b5a4:	0856a480 	call	856a48 <OSTimeTickHook>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84b5a8:	0005303a 	rdctl	r2,status
  84b5ac:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84b5b0:	e0fffd17 	ldw	r3,-12(fp)
  84b5b4:	00bfff84 	movi	r2,-2
  84b5b8:	1884703a 	and	r2,r3,r2
  84b5bc:	1001703a 	wrctl	status,r2
  
  return context;
  84b5c0:	e0bffd17 	ldw	r2,-12(fp)
#endif
#if OS_TIME_GET_SET_EN > 0
    OS_ENTER_CRITICAL();                                   /* Update the 32-bit tick counter               */
  84b5c4:	e0bffb15 	stw	r2,-20(fp)
    OSTime++;
  84b5c8:	d0a0a517 	ldw	r2,-32108(gp)
  84b5cc:	10800044 	addi	r2,r2,1
  84b5d0:	d0a0a515 	stw	r2,-32108(gp)
  84b5d4:	e0bffb17 	ldw	r2,-20(fp)
  84b5d8:	e0bfff15 	stw	r2,-4(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84b5dc:	e0bfff17 	ldw	r2,-4(fp)
  84b5e0:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
#endif
    if (OSRunning == OS_TRUE) {
  84b5e4:	d0a09543 	ldbu	r2,-32171(gp)
  84b5e8:	10803fcc 	andi	r2,r2,255
  84b5ec:	10800058 	cmpnei	r2,r2,1
  84b5f0:	10006a1e 	bne	r2,zero,84b79c <OSTimeTick+0x20c>
#if OS_TICK_STEP_EN > 0
        switch (OSTickStepState) {                         /* Determine whether we need to process a tick  */
  84b5f4:	d0a09903 	ldbu	r2,-32156(gp)
  84b5f8:	10803fcc 	andi	r2,r2,255
  84b5fc:	10c00060 	cmpeqi	r3,r2,1
  84b600:	1800061e 	bne	r3,zero,84b61c <OSTimeTick+0x8c>
  84b604:	10c000a0 	cmpeqi	r3,r2,2
  84b608:	1800061e 	bne	r3,zero,84b624 <OSTimeTick+0x94>
  84b60c:	10000a1e 	bne	r2,zero,84b638 <OSTimeTick+0xa8>
            case OS_TICK_STEP_DIS:                         /* Yes, stepping is disabled                    */
                 step = OS_TRUE;
  84b610:	00800044 	movi	r2,1
  84b614:	e0bffa05 	stb	r2,-24(fp)
                 break;
  84b618:	00000b06 	br	84b648 <OSTimeTick+0xb8>

            case OS_TICK_STEP_WAIT:                        /* No,  waiting for uC/OS-View to set ...       */
                 step = OS_FALSE;                          /*      .. OSTickStepState to OS_TICK_STEP_ONCE */
  84b61c:	e03ffa05 	stb	zero,-24(fp)
                 break;
  84b620:	00000906 	br	84b648 <OSTimeTick+0xb8>

            case OS_TICK_STEP_ONCE:                        /* Yes, process tick once and wait for next ... */
                 step            = OS_TRUE;                /*      ... step command from uC/OS-View        */
  84b624:	00800044 	movi	r2,1
  84b628:	e0bffa05 	stb	r2,-24(fp)
                 OSTickStepState = OS_TICK_STEP_WAIT;
  84b62c:	00800044 	movi	r2,1
  84b630:	d0a09905 	stb	r2,-32156(gp)
                 break;
  84b634:	00000406 	br	84b648 <OSTimeTick+0xb8>

            default:                                       /* Invalid case, correct situation              */
                 step            = OS_TRUE;
  84b638:	00800044 	movi	r2,1
  84b63c:	e0bffa05 	stb	r2,-24(fp)
                 OSTickStepState = OS_TICK_STEP_DIS;
  84b640:	d0209905 	stb	zero,-32156(gp)
                 break;
  84b644:	0001883a 	nop
        }
        if (step == OS_FALSE) {                            /* Return if waiting for step command           */
  84b648:	e0bffa03 	ldbu	r2,-24(fp)
  84b64c:	10005226 	beq	r2,zero,84b798 <OSTimeTick+0x208>
            return;
        }
#endif
        ptcb = OSTCBList;                                  /* Point at first TCB in TCB list               */
  84b650:	d0a09817 	ldw	r2,-32160(gp)
  84b654:	e0bff915 	stw	r2,-28(fp)
        while (ptcb->OSTCBPrio != OS_TASK_IDLE_PRIO) {     /* Go through all TCBs in TCB list              */
  84b658:	00004906 	br	84b780 <OSTimeTick+0x1f0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84b65c:	0005303a 	rdctl	r2,status
  84b660:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84b664:	e0fffc17 	ldw	r3,-16(fp)
  84b668:	00bfff84 	movi	r2,-2
  84b66c:	1884703a 	and	r2,r3,r2
  84b670:	1001703a 	wrctl	status,r2
  
  return context;
  84b674:	e0bffc17 	ldw	r2,-16(fp)
            OS_ENTER_CRITICAL();
  84b678:	e0bffb15 	stw	r2,-20(fp)
            if (ptcb->OSTCBDly != 0) {                     /* No, Delayed or waiting for event with TO     */
  84b67c:	e0bff917 	ldw	r2,-28(fp)
  84b680:	10800b8b 	ldhu	r2,46(r2)
  84b684:	10bfffcc 	andi	r2,r2,65535
  84b688:	10003626 	beq	r2,zero,84b764 <OSTimeTick+0x1d4>
                if (--ptcb->OSTCBDly == 0) {               /* Decrement nbr of ticks to end of delay       */
  84b68c:	e0bff917 	ldw	r2,-28(fp)
  84b690:	10800b8b 	ldhu	r2,46(r2)
  84b694:	10bfffc4 	addi	r2,r2,-1
  84b698:	1007883a 	mov	r3,r2
  84b69c:	e0bff917 	ldw	r2,-28(fp)
  84b6a0:	10c00b8d 	sth	r3,46(r2)
  84b6a4:	e0bff917 	ldw	r2,-28(fp)
  84b6a8:	10800b8b 	ldhu	r2,46(r2)
  84b6ac:	10bfffcc 	andi	r2,r2,65535
  84b6b0:	10002c1e 	bne	r2,zero,84b764 <OSTimeTick+0x1d4>
                                                           /* Check for timeout                            */
                    if ((ptcb->OSTCBStat & OS_STAT_PEND_ANY) != OS_STAT_RDY) {
  84b6b4:	e0bff917 	ldw	r2,-28(fp)
  84b6b8:	10800c03 	ldbu	r2,48(r2)
  84b6bc:	10803fcc 	andi	r2,r2,255
  84b6c0:	10800dcc 	andi	r2,r2,55
  84b6c4:	10000b26 	beq	r2,zero,84b6f4 <OSTimeTick+0x164>
                        ptcb->OSTCBStat  &= ~(INT8U)OS_STAT_PEND_ANY;          /* Yes, Clear status flag   */
  84b6c8:	e0bff917 	ldw	r2,-28(fp)
  84b6cc:	10c00c03 	ldbu	r3,48(r2)
  84b6d0:	00bff204 	movi	r2,-56
  84b6d4:	1884703a 	and	r2,r3,r2
  84b6d8:	1007883a 	mov	r3,r2
  84b6dc:	e0bff917 	ldw	r2,-28(fp)
  84b6e0:	10c00c05 	stb	r3,48(r2)
                        ptcb->OSTCBStatPend = OS_STAT_PEND_TO;                 /* Indicate PEND timeout    */
  84b6e4:	e0bff917 	ldw	r2,-28(fp)
  84b6e8:	00c00044 	movi	r3,1
  84b6ec:	10c00c45 	stb	r3,49(r2)
  84b6f0:	00000206 	br	84b6fc <OSTimeTick+0x16c>
                    } else {
                        ptcb->OSTCBStatPend = OS_STAT_PEND_OK;
  84b6f4:	e0bff917 	ldw	r2,-28(fp)
  84b6f8:	10000c45 	stb	zero,49(r2)
                    }

                    if ((ptcb->OSTCBStat & OS_STAT_SUSPEND) == OS_STAT_RDY) {  /* Is task suspended?       */
  84b6fc:	e0bff917 	ldw	r2,-28(fp)
  84b700:	10800c03 	ldbu	r2,48(r2)
  84b704:	10803fcc 	andi	r2,r2,255
  84b708:	1080020c 	andi	r2,r2,8
  84b70c:	1000151e 	bne	r2,zero,84b764 <OSTimeTick+0x1d4>
                        OSRdyGrp               |= ptcb->OSTCBBitY;             /* No,  Make ready          */
  84b710:	e0bff917 	ldw	r2,-28(fp)
  84b714:	10c00d83 	ldbu	r3,54(r2)
  84b718:	d0a0a103 	ldbu	r2,-32124(gp)
  84b71c:	1884b03a 	or	r2,r3,r2
  84b720:	d0a0a105 	stb	r2,-32124(gp)
                        OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
  84b724:	e0bff917 	ldw	r2,-28(fp)
  84b728:	10800d03 	ldbu	r2,52(r2)
  84b72c:	10c03fcc 	andi	r3,r2,255
  84b730:	e0bff917 	ldw	r2,-28(fp)
  84b734:	10800d03 	ldbu	r2,52(r2)
  84b738:	11003fcc 	andi	r4,r2,255
  84b73c:	d0a0a144 	addi	r2,gp,-32123
  84b740:	2085883a 	add	r2,r4,r2
  84b744:	11000003 	ldbu	r4,0(r2)
  84b748:	e0bff917 	ldw	r2,-28(fp)
  84b74c:	10800d43 	ldbu	r2,53(r2)
  84b750:	2084b03a 	or	r2,r4,r2
  84b754:	1009883a 	mov	r4,r2
  84b758:	d0a0a144 	addi	r2,gp,-32123
  84b75c:	1885883a 	add	r2,r3,r2
  84b760:	11000005 	stb	r4,0(r2)
                    }
                }
            }
            ptcb = ptcb->OSTCBNext;                        /* Point at next TCB in TCB list                */
  84b764:	e0bff917 	ldw	r2,-28(fp)
  84b768:	10800517 	ldw	r2,20(r2)
  84b76c:	e0bff915 	stw	r2,-28(fp)
  84b770:	e0bffb17 	ldw	r2,-20(fp)
  84b774:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84b778:	e0bffe17 	ldw	r2,-8(fp)
  84b77c:	1001703a 	wrctl	status,r2
        if (step == OS_FALSE) {                            /* Return if waiting for step command           */
            return;
        }
#endif
        ptcb = OSTCBList;                                  /* Point at first TCB in TCB list               */
        while (ptcb->OSTCBPrio != OS_TASK_IDLE_PRIO) {     /* Go through all TCBs in TCB list              */
  84b780:	e0bff917 	ldw	r2,-28(fp)
  84b784:	10800c83 	ldbu	r2,50(r2)
  84b788:	10803fcc 	andi	r2,r2,255
  84b78c:	10800518 	cmpnei	r2,r2,20
  84b790:	103fb21e 	bne	r2,zero,84b65c <__alt_mem_epcs_flash_controller_0+0xff84265c>
  84b794:	00000106 	br	84b79c <OSTimeTick+0x20c>
                 step            = OS_TRUE;
                 OSTickStepState = OS_TICK_STEP_DIS;
                 break;
        }
        if (step == OS_FALSE) {                            /* Return if waiting for step command           */
            return;
  84b798:	0001883a 	nop
            }
            ptcb = ptcb->OSTCBNext;                        /* Point at next TCB in TCB list                */
            OS_EXIT_CRITICAL();
        }
    }
}
  84b79c:	e037883a 	mov	sp,fp
  84b7a0:	dfc00117 	ldw	ra,4(sp)
  84b7a4:	df000017 	ldw	fp,0(sp)
  84b7a8:	dec00204 	addi	sp,sp,8
  84b7ac:	f800283a 	ret

0084b7b0 <OSVersion>:
* Returns    : the version number of uC/OS-II multiplied by 100.
*********************************************************************************************************
*/

INT16U  OSVersion (void)
{
  84b7b0:	deffff04 	addi	sp,sp,-4
  84b7b4:	df000015 	stw	fp,0(sp)
  84b7b8:	d839883a 	mov	fp,sp
    return (OS_VERSION);
  84b7bc:	00804784 	movi	r2,286
}
  84b7c0:	e037883a 	mov	sp,fp
  84b7c4:	df000017 	ldw	fp,0(sp)
  84b7c8:	dec00104 	addi	sp,sp,4
  84b7cc:	f800283a 	ret

0084b7d0 <OS_Dummy>:
*********************************************************************************************************
*/

#if OS_TASK_DEL_EN > 0
void  OS_Dummy (void)
{
  84b7d0:	deffff04 	addi	sp,sp,-4
  84b7d4:	df000015 	stw	fp,0(sp)
  84b7d8:	d839883a 	mov	fp,sp
}
  84b7dc:	0001883a 	nop
  84b7e0:	e037883a 	mov	sp,fp
  84b7e4:	df000017 	ldw	fp,0(sp)
  84b7e8:	dec00104 	addi	sp,sp,4
  84b7ec:	f800283a 	ret

0084b7f0 <OS_EventTaskRdy>:
* Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/
#if (OS_EVENT_EN)
INT8U  OS_EventTaskRdy (OS_EVENT *pevent, void *pmsg, INT8U msk, INT8U pend_stat)
{
  84b7f0:	defff804 	addi	sp,sp,-32
  84b7f4:	dfc00715 	stw	ra,28(sp)
  84b7f8:	df000615 	stw	fp,24(sp)
  84b7fc:	df000604 	addi	fp,sp,24
  84b800:	e13ffc15 	stw	r4,-16(fp)
  84b804:	e17ffd15 	stw	r5,-12(fp)
  84b808:	3007883a 	mov	r3,r6
  84b80c:	3805883a 	mov	r2,r7
  84b810:	e0fffe05 	stb	r3,-8(fp)
  84b814:	e0bfff05 	stb	r2,-4(fp)
    INT16U  *ptbl;
#endif


#if OS_LOWEST_PRIO <= 63
    y    = OSUnMapTbl[pevent->OSEventGrp];              /* Find HPT waiting for message                */
  84b818:	e0bffc17 	ldw	r2,-16(fp)
  84b81c:	10800283 	ldbu	r2,10(r2)
  84b820:	10c03fcc 	andi	r3,r2,255
  84b824:	008021b4 	movhi	r2,134
  84b828:	10a78a04 	addi	r2,r2,-25048
  84b82c:	10c5883a 	add	r2,r2,r3
  84b830:	10800003 	ldbu	r2,0(r2)
  84b834:	e0bffa05 	stb	r2,-24(fp)
    x    = OSUnMapTbl[pevent->OSEventTbl[y]];
  84b838:	e0bffa03 	ldbu	r2,-24(fp)
  84b83c:	e0fffc17 	ldw	r3,-16(fp)
  84b840:	1885883a 	add	r2,r3,r2
  84b844:	108002c4 	addi	r2,r2,11
  84b848:	10800003 	ldbu	r2,0(r2)
  84b84c:	10c03fcc 	andi	r3,r2,255
  84b850:	008021b4 	movhi	r2,134
  84b854:	10a78a04 	addi	r2,r2,-25048
  84b858:	10c5883a 	add	r2,r2,r3
  84b85c:	10800003 	ldbu	r2,0(r2)
  84b860:	e0bffa45 	stb	r2,-23(fp)
    prio = (INT8U)((y << 3) + x);                       /* Find priority of task getting the msg       */
  84b864:	e0bffa03 	ldbu	r2,-24(fp)
  84b868:	100490fa 	slli	r2,r2,3
  84b86c:	1007883a 	mov	r3,r2
  84b870:	e0bffa43 	ldbu	r2,-23(fp)
  84b874:	1885883a 	add	r2,r3,r2
  84b878:	e0bffa85 	stb	r2,-22(fp)
        x = OSUnMapTbl[(*ptbl >> 8) & 0xFF] + 8;
    }
    prio = (INT8U)((y << 4) + x);                       /* Find priority of task getting the msg       */
#endif

    ptcb                  =  OSTCBPrioTbl[prio];        /* Point to this task's OS_TCB                 */
  84b87c:	e0fffa83 	ldbu	r3,-22(fp)
  84b880:	008021b4 	movhi	r2,134
  84b884:	1098b904 	addi	r2,r2,25316
  84b888:	18c7883a 	add	r3,r3,r3
  84b88c:	18c7883a 	add	r3,r3,r3
  84b890:	10c5883a 	add	r2,r2,r3
  84b894:	10800017 	ldw	r2,0(r2)
  84b898:	e0bffb15 	stw	r2,-20(fp)
    ptcb->OSTCBDly        =  0;                         /* Prevent OSTimeTick() from readying task     */
  84b89c:	e0bffb17 	ldw	r2,-20(fp)
  84b8a0:	10000b8d 	sth	zero,46(r2)
#if ((OS_Q_EN > 0) && (OS_MAX_QS > 0)) || (OS_MBOX_EN > 0)
    ptcb->OSTCBMsg        =  pmsg;                      /* Send message directly to waiting task       */
  84b8a4:	e0bffb17 	ldw	r2,-20(fp)
  84b8a8:	e0fffd17 	ldw	r3,-12(fp)
  84b8ac:	10c00915 	stw	r3,36(r2)
#else
    pmsg                  =  pmsg;                      /* Prevent compiler warning if not used        */
#endif
    ptcb->OSTCBStat      &= ~msk;                       /* Clear bit associated with event type        */
  84b8b0:	e0bffb17 	ldw	r2,-20(fp)
  84b8b4:	10800c03 	ldbu	r2,48(r2)
  84b8b8:	1007883a 	mov	r3,r2
  84b8bc:	e0bffe03 	ldbu	r2,-8(fp)
  84b8c0:	0084303a 	nor	r2,zero,r2
  84b8c4:	1884703a 	and	r2,r3,r2
  84b8c8:	1007883a 	mov	r3,r2
  84b8cc:	e0bffb17 	ldw	r2,-20(fp)
  84b8d0:	10c00c05 	stb	r3,48(r2)
    ptcb->OSTCBStatPend   =  pend_stat;                 /* Set pend status of post or abort            */
  84b8d4:	e0bffb17 	ldw	r2,-20(fp)
  84b8d8:	e0ffff03 	ldbu	r3,-4(fp)
  84b8dc:	10c00c45 	stb	r3,49(r2)
                                                        /* See if task is ready (could be susp'd)      */
    if ((ptcb->OSTCBStat &   OS_STAT_SUSPEND) == OS_STAT_RDY) {
  84b8e0:	e0bffb17 	ldw	r2,-20(fp)
  84b8e4:	10800c03 	ldbu	r2,48(r2)
  84b8e8:	10803fcc 	andi	r2,r2,255
  84b8ec:	1080020c 	andi	r2,r2,8
  84b8f0:	1000111e 	bne	r2,zero,84b938 <OS_EventTaskRdy+0x148>
        OSRdyGrp         |=  ptcb->OSTCBBitY;           /* Put task in the ready to run list           */
  84b8f4:	e0bffb17 	ldw	r2,-20(fp)
  84b8f8:	10c00d83 	ldbu	r3,54(r2)
  84b8fc:	d0a0a103 	ldbu	r2,-32124(gp)
  84b900:	1884b03a 	or	r2,r3,r2
  84b904:	d0a0a105 	stb	r2,-32124(gp)
        OSRdyTbl[y]      |=  ptcb->OSTCBBitX;
  84b908:	e0fffa03 	ldbu	r3,-24(fp)
  84b90c:	e13ffa03 	ldbu	r4,-24(fp)
  84b910:	d0a0a144 	addi	r2,gp,-32123
  84b914:	2085883a 	add	r2,r4,r2
  84b918:	11000003 	ldbu	r4,0(r2)
  84b91c:	e0bffb17 	ldw	r2,-20(fp)
  84b920:	10800d43 	ldbu	r2,53(r2)
  84b924:	2084b03a 	or	r2,r4,r2
  84b928:	1009883a 	mov	r4,r2
  84b92c:	d0a0a144 	addi	r2,gp,-32123
  84b930:	1885883a 	add	r2,r3,r2
  84b934:	11000005 	stb	r4,0(r2)
    }

    OS_EventTaskRemove(ptcb, pevent);                   /* Remove this task from event   wait list     */
  84b938:	e17ffc17 	ldw	r5,-16(fp)
  84b93c:	e13ffb17 	ldw	r4,-20(fp)
  84b940:	084bbe80 	call	84bbe8 <OS_EventTaskRemove>
#if (OS_EVENT_MULTI_EN > 0)
    if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {   /* Remove this task from events' wait lists    */
  84b944:	e0bffb17 	ldw	r2,-20(fp)
  84b948:	10800817 	ldw	r2,32(r2)
  84b94c:	10000826 	beq	r2,zero,84b970 <OS_EventTaskRdy+0x180>
        OS_EventTaskRemoveMulti(ptcb, ptcb->OSTCBEventMultiPtr);
  84b950:	e0bffb17 	ldw	r2,-20(fp)
  84b954:	10800817 	ldw	r2,32(r2)
  84b958:	100b883a 	mov	r5,r2
  84b95c:	e13ffb17 	ldw	r4,-20(fp)
  84b960:	084bca00 	call	84bca0 <OS_EventTaskRemoveMulti>
        ptcb->OSTCBEventPtr       = (OS_EVENT  *)pevent;/* Return event as first multi-pend event ready*/
  84b964:	e0bffb17 	ldw	r2,-20(fp)
  84b968:	e0fffc17 	ldw	r3,-16(fp)
  84b96c:	10c00715 	stw	r3,28(r2)
    }
#endif

    return (prio);
  84b970:	e0bffa83 	ldbu	r2,-22(fp)
}
  84b974:	e037883a 	mov	sp,fp
  84b978:	dfc00117 	ldw	ra,4(sp)
  84b97c:	df000017 	ldw	fp,0(sp)
  84b980:	dec00204 	addi	sp,sp,8
  84b984:	f800283a 	ret

0084b988 <OS_EventTaskWait>:
* Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/
#if (OS_EVENT_EN)
void  OS_EventTaskWait (OS_EVENT *pevent)
{
  84b988:	defffd04 	addi	sp,sp,-12
  84b98c:	df000215 	stw	fp,8(sp)
  84b990:	df000204 	addi	fp,sp,8
  84b994:	e13fff15 	stw	r4,-4(fp)
    INT8U  y;


    OSTCBCur->OSTCBEventPtr               = pevent;                 /* Store ptr to ECB in TCB         */
  84b998:	d0a0a417 	ldw	r2,-32112(gp)
  84b99c:	e0ffff17 	ldw	r3,-4(fp)
  84b9a0:	10c00715 	stw	r3,28(r2)

    pevent->OSEventTbl[OSTCBCur->OSTCBY] |= OSTCBCur->OSTCBBitX;    /* Put task in waiting list        */
  84b9a4:	d0a0a417 	ldw	r2,-32112(gp)
  84b9a8:	10800d03 	ldbu	r2,52(r2)
  84b9ac:	10803fcc 	andi	r2,r2,255
  84b9b0:	d0e0a417 	ldw	r3,-32112(gp)
  84b9b4:	18c00d03 	ldbu	r3,52(r3)
  84b9b8:	18c03fcc 	andi	r3,r3,255
  84b9bc:	e13fff17 	ldw	r4,-4(fp)
  84b9c0:	20c7883a 	add	r3,r4,r3
  84b9c4:	18c002c4 	addi	r3,r3,11
  84b9c8:	19000003 	ldbu	r4,0(r3)
  84b9cc:	d0e0a417 	ldw	r3,-32112(gp)
  84b9d0:	18c00d43 	ldbu	r3,53(r3)
  84b9d4:	20c6b03a 	or	r3,r4,r3
  84b9d8:	1809883a 	mov	r4,r3
  84b9dc:	e0ffff17 	ldw	r3,-4(fp)
  84b9e0:	1885883a 	add	r2,r3,r2
  84b9e4:	108002c4 	addi	r2,r2,11
  84b9e8:	11000005 	stb	r4,0(r2)
    pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
  84b9ec:	e0bfff17 	ldw	r2,-4(fp)
  84b9f0:	10c00283 	ldbu	r3,10(r2)
  84b9f4:	d0a0a417 	ldw	r2,-32112(gp)
  84b9f8:	10800d83 	ldbu	r2,54(r2)
  84b9fc:	1884b03a 	or	r2,r3,r2
  84ba00:	1007883a 	mov	r3,r2
  84ba04:	e0bfff17 	ldw	r2,-4(fp)
  84ba08:	10c00285 	stb	r3,10(r2)

    y             =  OSTCBCur->OSTCBY;            /* Task no longer ready                              */
  84ba0c:	d0a0a417 	ldw	r2,-32112(gp)
  84ba10:	10800d03 	ldbu	r2,52(r2)
  84ba14:	e0bffe05 	stb	r2,-8(fp)
    OSRdyTbl[y]  &= ~OSTCBCur->OSTCBBitX;
  84ba18:	e0fffe03 	ldbu	r3,-8(fp)
  84ba1c:	e13ffe03 	ldbu	r4,-8(fp)
  84ba20:	d0a0a144 	addi	r2,gp,-32123
  84ba24:	2085883a 	add	r2,r4,r2
  84ba28:	10800003 	ldbu	r2,0(r2)
  84ba2c:	1009883a 	mov	r4,r2
  84ba30:	d0a0a417 	ldw	r2,-32112(gp)
  84ba34:	10800d43 	ldbu	r2,53(r2)
  84ba38:	0084303a 	nor	r2,zero,r2
  84ba3c:	2084703a 	and	r2,r4,r2
  84ba40:	1009883a 	mov	r4,r2
  84ba44:	d0a0a144 	addi	r2,gp,-32123
  84ba48:	1885883a 	add	r2,r3,r2
  84ba4c:	11000005 	stb	r4,0(r2)
    if (OSRdyTbl[y] == 0) {
  84ba50:	e0fffe03 	ldbu	r3,-8(fp)
  84ba54:	d0a0a144 	addi	r2,gp,-32123
  84ba58:	1885883a 	add	r2,r3,r2
  84ba5c:	10800003 	ldbu	r2,0(r2)
  84ba60:	10803fcc 	andi	r2,r2,255
  84ba64:	1000071e 	bne	r2,zero,84ba84 <OS_EventTaskWait+0xfc>
        OSRdyGrp &= ~OSTCBCur->OSTCBBitY;         /* Clear event grp bit if this was only task pending */
  84ba68:	d0a0a417 	ldw	r2,-32112(gp)
  84ba6c:	10800d83 	ldbu	r2,54(r2)
  84ba70:	0084303a 	nor	r2,zero,r2
  84ba74:	1007883a 	mov	r3,r2
  84ba78:	d0a0a103 	ldbu	r2,-32124(gp)
  84ba7c:	1884703a 	and	r2,r3,r2
  84ba80:	d0a0a105 	stb	r2,-32124(gp)
    }
}
  84ba84:	0001883a 	nop
  84ba88:	e037883a 	mov	sp,fp
  84ba8c:	df000017 	ldw	fp,0(sp)
  84ba90:	dec00104 	addi	sp,sp,4
  84ba94:	f800283a 	ret

0084ba98 <OS_EventTaskWaitMulti>:
* Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/
#if ((OS_EVENT_EN) && (OS_EVENT_MULTI_EN > 0))
void  OS_EventTaskWaitMulti (OS_EVENT **pevents_wait)
{
  84ba98:	defffb04 	addi	sp,sp,-20
  84ba9c:	df000415 	stw	fp,16(sp)
  84baa0:	df000404 	addi	fp,sp,16
  84baa4:	e13fff15 	stw	r4,-4(fp)
    OS_EVENT **pevents;
    OS_EVENT  *pevent;
    INT8U      y;


    OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;
  84baa8:	d0a0a417 	ldw	r2,-32112(gp)
  84baac:	10000715 	stw	zero,28(r2)
    OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)pevents_wait;       /* Store ptr to ECBs in TCB        */
  84bab0:	d0a0a417 	ldw	r2,-32112(gp)
  84bab4:	e0ffff17 	ldw	r3,-4(fp)
  84bab8:	10c00815 	stw	r3,32(r2)

    pevents =  pevents_wait;
  84babc:	e0bfff17 	ldw	r2,-4(fp)
  84bac0:	e0bffc15 	stw	r2,-16(fp)
    pevent  = *pevents;
  84bac4:	e0bffc17 	ldw	r2,-16(fp)
  84bac8:	10800017 	ldw	r2,0(r2)
  84bacc:	e0bffd15 	stw	r2,-12(fp)
    while (pevent != (OS_EVENT *)0) {                               /* Put task in waiting lists       */
  84bad0:	00002006 	br	84bb54 <OS_EventTaskWaitMulti+0xbc>
        pevent->OSEventTbl[OSTCBCur->OSTCBY] |= OSTCBCur->OSTCBBitX;
  84bad4:	d0a0a417 	ldw	r2,-32112(gp)
  84bad8:	10800d03 	ldbu	r2,52(r2)
  84badc:	10803fcc 	andi	r2,r2,255
  84bae0:	d0e0a417 	ldw	r3,-32112(gp)
  84bae4:	18c00d03 	ldbu	r3,52(r3)
  84bae8:	18c03fcc 	andi	r3,r3,255
  84baec:	e13ffd17 	ldw	r4,-12(fp)
  84baf0:	20c7883a 	add	r3,r4,r3
  84baf4:	18c002c4 	addi	r3,r3,11
  84baf8:	19000003 	ldbu	r4,0(r3)
  84bafc:	d0e0a417 	ldw	r3,-32112(gp)
  84bb00:	18c00d43 	ldbu	r3,53(r3)
  84bb04:	20c6b03a 	or	r3,r4,r3
  84bb08:	1809883a 	mov	r4,r3
  84bb0c:	e0fffd17 	ldw	r3,-12(fp)
  84bb10:	1885883a 	add	r2,r3,r2
  84bb14:	108002c4 	addi	r2,r2,11
  84bb18:	11000005 	stb	r4,0(r2)
        pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
  84bb1c:	e0bffd17 	ldw	r2,-12(fp)
  84bb20:	10c00283 	ldbu	r3,10(r2)
  84bb24:	d0a0a417 	ldw	r2,-32112(gp)
  84bb28:	10800d83 	ldbu	r2,54(r2)
  84bb2c:	1884b03a 	or	r2,r3,r2
  84bb30:	1007883a 	mov	r3,r2
  84bb34:	e0bffd17 	ldw	r2,-12(fp)
  84bb38:	10c00285 	stb	r3,10(r2)
        pevents++;
  84bb3c:	e0bffc17 	ldw	r2,-16(fp)
  84bb40:	10800104 	addi	r2,r2,4
  84bb44:	e0bffc15 	stw	r2,-16(fp)
        pevent = *pevents;
  84bb48:	e0bffc17 	ldw	r2,-16(fp)
  84bb4c:	10800017 	ldw	r2,0(r2)
  84bb50:	e0bffd15 	stw	r2,-12(fp)
    OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;
    OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)pevents_wait;       /* Store ptr to ECBs in TCB        */

    pevents =  pevents_wait;
    pevent  = *pevents;
    while (pevent != (OS_EVENT *)0) {                               /* Put task in waiting lists       */
  84bb54:	e0bffd17 	ldw	r2,-12(fp)
  84bb58:	103fde1e 	bne	r2,zero,84bad4 <__alt_mem_epcs_flash_controller_0+0xff842ad4>
        pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
        pevents++;
        pevent = *pevents;
    }

    y             =  OSTCBCur->OSTCBY;            /* Task no longer ready                              */
  84bb5c:	d0a0a417 	ldw	r2,-32112(gp)
  84bb60:	10800d03 	ldbu	r2,52(r2)
  84bb64:	e0bffe05 	stb	r2,-8(fp)
    OSRdyTbl[y]  &= ~OSTCBCur->OSTCBBitX;
  84bb68:	e0fffe03 	ldbu	r3,-8(fp)
  84bb6c:	e13ffe03 	ldbu	r4,-8(fp)
  84bb70:	d0a0a144 	addi	r2,gp,-32123
  84bb74:	2085883a 	add	r2,r4,r2
  84bb78:	10800003 	ldbu	r2,0(r2)
  84bb7c:	1009883a 	mov	r4,r2
  84bb80:	d0a0a417 	ldw	r2,-32112(gp)
  84bb84:	10800d43 	ldbu	r2,53(r2)
  84bb88:	0084303a 	nor	r2,zero,r2
  84bb8c:	2084703a 	and	r2,r4,r2
  84bb90:	1009883a 	mov	r4,r2
  84bb94:	d0a0a144 	addi	r2,gp,-32123
  84bb98:	1885883a 	add	r2,r3,r2
  84bb9c:	11000005 	stb	r4,0(r2)
    if (OSRdyTbl[y] == 0) {
  84bba0:	e0fffe03 	ldbu	r3,-8(fp)
  84bba4:	d0a0a144 	addi	r2,gp,-32123
  84bba8:	1885883a 	add	r2,r3,r2
  84bbac:	10800003 	ldbu	r2,0(r2)
  84bbb0:	10803fcc 	andi	r2,r2,255
  84bbb4:	1000071e 	bne	r2,zero,84bbd4 <OS_EventTaskWaitMulti+0x13c>
        OSRdyGrp &= ~OSTCBCur->OSTCBBitY;         /* Clear event grp bit if this was only task pending */
  84bbb8:	d0a0a417 	ldw	r2,-32112(gp)
  84bbbc:	10800d83 	ldbu	r2,54(r2)
  84bbc0:	0084303a 	nor	r2,zero,r2
  84bbc4:	1007883a 	mov	r3,r2
  84bbc8:	d0a0a103 	ldbu	r2,-32124(gp)
  84bbcc:	1884703a 	and	r2,r3,r2
  84bbd0:	d0a0a105 	stb	r2,-32124(gp)
    }
}
  84bbd4:	0001883a 	nop
  84bbd8:	e037883a 	mov	sp,fp
  84bbdc:	df000017 	ldw	fp,0(sp)
  84bbe0:	dec00104 	addi	sp,sp,4
  84bbe4:	f800283a 	ret

0084bbe8 <OS_EventTaskRemove>:
*********************************************************************************************************
*/
#if (OS_EVENT_EN)
void  OS_EventTaskRemove (OS_TCB   *ptcb,
                          OS_EVENT *pevent)
{
  84bbe8:	defffc04 	addi	sp,sp,-16
  84bbec:	df000315 	stw	fp,12(sp)
  84bbf0:	df000304 	addi	fp,sp,12
  84bbf4:	e13ffe15 	stw	r4,-8(fp)
  84bbf8:	e17fff15 	stw	r5,-4(fp)
    INT8U  y;


    y                       =  ptcb->OSTCBY;
  84bbfc:	e0bffe17 	ldw	r2,-8(fp)
  84bc00:	10800d03 	ldbu	r2,52(r2)
  84bc04:	e0bffd05 	stb	r2,-12(fp)
    pevent->OSEventTbl[y]  &= ~ptcb->OSTCBBitX;         /* Remove task from wait list                  */
  84bc08:	e0bffd03 	ldbu	r2,-12(fp)
  84bc0c:	e0fffd03 	ldbu	r3,-12(fp)
  84bc10:	e13fff17 	ldw	r4,-4(fp)
  84bc14:	20c7883a 	add	r3,r4,r3
  84bc18:	18c002c4 	addi	r3,r3,11
  84bc1c:	18c00003 	ldbu	r3,0(r3)
  84bc20:	1809883a 	mov	r4,r3
  84bc24:	e0fffe17 	ldw	r3,-8(fp)
  84bc28:	18c00d43 	ldbu	r3,53(r3)
  84bc2c:	00c6303a 	nor	r3,zero,r3
  84bc30:	20c6703a 	and	r3,r4,r3
  84bc34:	1809883a 	mov	r4,r3
  84bc38:	e0ffff17 	ldw	r3,-4(fp)
  84bc3c:	1885883a 	add	r2,r3,r2
  84bc40:	108002c4 	addi	r2,r2,11
  84bc44:	11000005 	stb	r4,0(r2)
    if (pevent->OSEventTbl[y] == 0) {
  84bc48:	e0bffd03 	ldbu	r2,-12(fp)
  84bc4c:	e0ffff17 	ldw	r3,-4(fp)
  84bc50:	1885883a 	add	r2,r3,r2
  84bc54:	108002c4 	addi	r2,r2,11
  84bc58:	10800003 	ldbu	r2,0(r2)
  84bc5c:	10803fcc 	andi	r2,r2,255
  84bc60:	10000a1e 	bne	r2,zero,84bc8c <OS_EventTaskRemove+0xa4>
        pevent->OSEventGrp &= ~ptcb->OSTCBBitY;
  84bc64:	e0bfff17 	ldw	r2,-4(fp)
  84bc68:	10800283 	ldbu	r2,10(r2)
  84bc6c:	1007883a 	mov	r3,r2
  84bc70:	e0bffe17 	ldw	r2,-8(fp)
  84bc74:	10800d83 	ldbu	r2,54(r2)
  84bc78:	0084303a 	nor	r2,zero,r2
  84bc7c:	1884703a 	and	r2,r3,r2
  84bc80:	1007883a 	mov	r3,r2
  84bc84:	e0bfff17 	ldw	r2,-4(fp)
  84bc88:	10c00285 	stb	r3,10(r2)
    }
}
  84bc8c:	0001883a 	nop
  84bc90:	e037883a 	mov	sp,fp
  84bc94:	df000017 	ldw	fp,0(sp)
  84bc98:	dec00104 	addi	sp,sp,4
  84bc9c:	f800283a 	ret

0084bca0 <OS_EventTaskRemoveMulti>:
*********************************************************************************************************
*/
#if ((OS_EVENT_EN) && (OS_EVENT_MULTI_EN > 0))
void  OS_EventTaskRemoveMulti (OS_TCB    *ptcb,
                               OS_EVENT **pevents_multi)
{
  84bca0:	defffa04 	addi	sp,sp,-24
  84bca4:	df000515 	stw	fp,20(sp)
  84bca8:	df000504 	addi	fp,sp,20
  84bcac:	e13ffe15 	stw	r4,-8(fp)
  84bcb0:	e17fff15 	stw	r5,-4(fp)
    INT16U     bity;
    INT16U     bitx;
#endif


    y       =  ptcb->OSTCBY;
  84bcb4:	e0bffe17 	ldw	r2,-8(fp)
  84bcb8:	10800d03 	ldbu	r2,52(r2)
  84bcbc:	e0bffd05 	stb	r2,-12(fp)
    bity    =  ptcb->OSTCBBitY;
  84bcc0:	e0bffe17 	ldw	r2,-8(fp)
  84bcc4:	10800d83 	ldbu	r2,54(r2)
  84bcc8:	e0bffd45 	stb	r2,-11(fp)
    bitx    =  ptcb->OSTCBBitX;
  84bccc:	e0bffe17 	ldw	r2,-8(fp)
  84bcd0:	10800d43 	ldbu	r2,53(r2)
  84bcd4:	e0bffd85 	stb	r2,-10(fp)
    pevents =  pevents_multi;
  84bcd8:	e0bfff17 	ldw	r2,-4(fp)
  84bcdc:	e0bffb15 	stw	r2,-20(fp)
    pevent  = *pevents;
  84bce0:	e0bffb17 	ldw	r2,-20(fp)
  84bce4:	10800017 	ldw	r2,0(r2)
  84bce8:	e0bffc15 	stw	r2,-16(fp)
    while (pevent != (OS_EVENT *)0) {                   /* Remove task from all events' wait lists     */
  84bcec:	00002506 	br	84bd84 <OS_EventTaskRemoveMulti+0xe4>
        pevent->OSEventTbl[y]  &= ~bitx;
  84bcf0:	e0bffd03 	ldbu	r2,-12(fp)
  84bcf4:	e0fffd03 	ldbu	r3,-12(fp)
  84bcf8:	e13ffc17 	ldw	r4,-16(fp)
  84bcfc:	20c7883a 	add	r3,r4,r3
  84bd00:	18c002c4 	addi	r3,r3,11
  84bd04:	18c00003 	ldbu	r3,0(r3)
  84bd08:	1809883a 	mov	r4,r3
  84bd0c:	e0fffd83 	ldbu	r3,-10(fp)
  84bd10:	00c6303a 	nor	r3,zero,r3
  84bd14:	20c6703a 	and	r3,r4,r3
  84bd18:	1809883a 	mov	r4,r3
  84bd1c:	e0fffc17 	ldw	r3,-16(fp)
  84bd20:	1885883a 	add	r2,r3,r2
  84bd24:	108002c4 	addi	r2,r2,11
  84bd28:	11000005 	stb	r4,0(r2)
        if (pevent->OSEventTbl[y] == 0) {
  84bd2c:	e0bffd03 	ldbu	r2,-12(fp)
  84bd30:	e0fffc17 	ldw	r3,-16(fp)
  84bd34:	1885883a 	add	r2,r3,r2
  84bd38:	108002c4 	addi	r2,r2,11
  84bd3c:	10800003 	ldbu	r2,0(r2)
  84bd40:	10803fcc 	andi	r2,r2,255
  84bd44:	1000091e 	bne	r2,zero,84bd6c <OS_EventTaskRemoveMulti+0xcc>
            pevent->OSEventGrp &= ~bity;
  84bd48:	e0bffc17 	ldw	r2,-16(fp)
  84bd4c:	10800283 	ldbu	r2,10(r2)
  84bd50:	1007883a 	mov	r3,r2
  84bd54:	e0bffd43 	ldbu	r2,-11(fp)
  84bd58:	0084303a 	nor	r2,zero,r2
  84bd5c:	1884703a 	and	r2,r3,r2
  84bd60:	1007883a 	mov	r3,r2
  84bd64:	e0bffc17 	ldw	r2,-16(fp)
  84bd68:	10c00285 	stb	r3,10(r2)
        }
        pevents++;
  84bd6c:	e0bffb17 	ldw	r2,-20(fp)
  84bd70:	10800104 	addi	r2,r2,4
  84bd74:	e0bffb15 	stw	r2,-20(fp)
        pevent = *pevents;
  84bd78:	e0bffb17 	ldw	r2,-20(fp)
  84bd7c:	10800017 	ldw	r2,0(r2)
  84bd80:	e0bffc15 	stw	r2,-16(fp)
    y       =  ptcb->OSTCBY;
    bity    =  ptcb->OSTCBBitY;
    bitx    =  ptcb->OSTCBBitX;
    pevents =  pevents_multi;
    pevent  = *pevents;
    while (pevent != (OS_EVENT *)0) {                   /* Remove task from all events' wait lists     */
  84bd84:	e0bffc17 	ldw	r2,-16(fp)
  84bd88:	103fd91e 	bne	r2,zero,84bcf0 <__alt_mem_epcs_flash_controller_0+0xff842cf0>
            pevent->OSEventGrp &= ~bity;
        }
        pevents++;
        pevent = *pevents;
    }
}
  84bd8c:	0001883a 	nop
  84bd90:	e037883a 	mov	sp,fp
  84bd94:	df000017 	ldw	fp,0(sp)
  84bd98:	dec00104 	addi	sp,sp,4
  84bd9c:	f800283a 	ret

0084bda0 <OS_EventWaitListInit>:
* Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/
#if (OS_EVENT_EN)
void  OS_EventWaitListInit (OS_EVENT *pevent)
{
  84bda0:	defffc04 	addi	sp,sp,-16
  84bda4:	df000315 	stw	fp,12(sp)
  84bda8:	df000304 	addi	fp,sp,12
  84bdac:	e13fff15 	stw	r4,-4(fp)
    INT16U *ptbl;
#endif
    INT8U   i;


    pevent->OSEventGrp = 0;                      /* No task waiting on event                           */
  84bdb0:	e0bfff17 	ldw	r2,-4(fp)
  84bdb4:	10000285 	stb	zero,10(r2)
    ptbl               = &pevent->OSEventTbl[0];
  84bdb8:	e0bfff17 	ldw	r2,-4(fp)
  84bdbc:	108002c4 	addi	r2,r2,11
  84bdc0:	e0bffd15 	stw	r2,-12(fp)

    for (i = 0; i < OS_EVENT_TBL_SIZE; i++) {
  84bdc4:	e03ffe05 	stb	zero,-8(fp)
  84bdc8:	00000706 	br	84bde8 <OS_EventWaitListInit+0x48>
        *ptbl++ = 0;
  84bdcc:	e0bffd17 	ldw	r2,-12(fp)
  84bdd0:	10c00044 	addi	r3,r2,1
  84bdd4:	e0fffd15 	stw	r3,-12(fp)
  84bdd8:	10000005 	stb	zero,0(r2)


    pevent->OSEventGrp = 0;                      /* No task waiting on event                           */
    ptbl               = &pevent->OSEventTbl[0];

    for (i = 0; i < OS_EVENT_TBL_SIZE; i++) {
  84bddc:	e0bffe03 	ldbu	r2,-8(fp)
  84bde0:	10800044 	addi	r2,r2,1
  84bde4:	e0bffe05 	stb	r2,-8(fp)
  84bde8:	e0bffe03 	ldbu	r2,-8(fp)
  84bdec:	108000f0 	cmpltui	r2,r2,3
  84bdf0:	103ff61e 	bne	r2,zero,84bdcc <__alt_mem_epcs_flash_controller_0+0xff842dcc>
        *ptbl++ = 0;
    }
}
  84bdf4:	0001883a 	nop
  84bdf8:	e037883a 	mov	sp,fp
  84bdfc:	df000017 	ldw	fp,0(sp)
  84be00:	dec00104 	addi	sp,sp,4
  84be04:	f800283a 	ret

0084be08 <OS_InitEventList>:
* Returns    : none
*********************************************************************************************************
*/

static  void  OS_InitEventList (void)
{
  84be08:	defffb04 	addi	sp,sp,-20
  84be0c:	dfc00415 	stw	ra,16(sp)
  84be10:	df000315 	stw	fp,12(sp)
  84be14:	df000304 	addi	fp,sp,12
    INT16U     i;
    OS_EVENT  *pevent1;
    OS_EVENT  *pevent2;


    OS_MemClr((INT8U *)&OSEventTbl[0], sizeof(OSEventTbl)); /* Clear the event table                   */
  84be18:	0142d004 	movi	r5,2880
  84be1c:	010021b4 	movhi	r4,134
  84be20:	2114a504 	addi	r4,r4,21140
  84be24:	084c1800 	call	84c180 <OS_MemClr>
    pevent1 = &OSEventTbl[0];
  84be28:	008021b4 	movhi	r2,134
  84be2c:	1094a504 	addi	r2,r2,21140
  84be30:	e0bffe15 	stw	r2,-8(fp)
    pevent2 = &OSEventTbl[1];
  84be34:	008021b4 	movhi	r2,134
  84be38:	1094b104 	addi	r2,r2,21188
  84be3c:	e0bfff15 	stw	r2,-4(fp)
    for (i = 0; i < (OS_MAX_EVENTS - 1); i++) {             /* Init. list of free EVENT control blocks */
  84be40:	e03ffd0d 	sth	zero,-12(fp)
  84be44:	00001306 	br	84be94 <OS_InitEventList+0x8c>
        pevent1->OSEventType    = OS_EVENT_TYPE_UNUSED;
  84be48:	e0bffe17 	ldw	r2,-8(fp)
  84be4c:	10000005 	stb	zero,0(r2)
        pevent1->OSEventPtr     = pevent2;
  84be50:	e0bffe17 	ldw	r2,-8(fp)
  84be54:	e0ffff17 	ldw	r3,-4(fp)
  84be58:	10c00115 	stw	r3,4(r2)
#if OS_EVENT_NAME_SIZE > 1
        pevent1->OSEventName[0] = '?';                      /* Unknown name                            */
  84be5c:	e0bffe17 	ldw	r2,-8(fp)
  84be60:	00c00fc4 	movi	r3,63
  84be64:	10c00385 	stb	r3,14(r2)
        pevent1->OSEventName[1] = OS_ASCII_NUL;
  84be68:	e0bffe17 	ldw	r2,-8(fp)
  84be6c:	100003c5 	stb	zero,15(r2)
#endif
        pevent1++;
  84be70:	e0bffe17 	ldw	r2,-8(fp)
  84be74:	10800c04 	addi	r2,r2,48
  84be78:	e0bffe15 	stw	r2,-8(fp)
        pevent2++;
  84be7c:	e0bfff17 	ldw	r2,-4(fp)
  84be80:	10800c04 	addi	r2,r2,48
  84be84:	e0bfff15 	stw	r2,-4(fp)


    OS_MemClr((INT8U *)&OSEventTbl[0], sizeof(OSEventTbl)); /* Clear the event table                   */
    pevent1 = &OSEventTbl[0];
    pevent2 = &OSEventTbl[1];
    for (i = 0; i < (OS_MAX_EVENTS - 1); i++) {             /* Init. list of free EVENT control blocks */
  84be88:	e0bffd0b 	ldhu	r2,-12(fp)
  84be8c:	10800044 	addi	r2,r2,1
  84be90:	e0bffd0d 	sth	r2,-12(fp)
  84be94:	e0bffd0b 	ldhu	r2,-12(fp)
  84be98:	10800ef0 	cmpltui	r2,r2,59
  84be9c:	103fea1e 	bne	r2,zero,84be48 <__alt_mem_epcs_flash_controller_0+0xff842e48>
        pevent1->OSEventName[1] = OS_ASCII_NUL;
#endif
        pevent1++;
        pevent2++;
    }
    pevent1->OSEventType            = OS_EVENT_TYPE_UNUSED;
  84bea0:	e0bffe17 	ldw	r2,-8(fp)
  84bea4:	10000005 	stb	zero,0(r2)
    pevent1->OSEventPtr             = (OS_EVENT *)0;
  84bea8:	e0bffe17 	ldw	r2,-8(fp)
  84beac:	10000115 	stw	zero,4(r2)
#if OS_EVENT_NAME_SIZE > 1
    pevent1->OSEventName[0]         = '?';
  84beb0:	e0bffe17 	ldw	r2,-8(fp)
  84beb4:	00c00fc4 	movi	r3,63
  84beb8:	10c00385 	stb	r3,14(r2)
    pevent1->OSEventName[1]         = OS_ASCII_NUL;
  84bebc:	e0bffe17 	ldw	r2,-8(fp)
  84bec0:	100003c5 	stb	zero,15(r2)
#endif
    OSEventFreeList                 = &OSEventTbl[0];
  84bec4:	008021b4 	movhi	r2,134
  84bec8:	1094a504 	addi	r2,r2,21140
  84becc:	d0a0a215 	stw	r2,-32120(gp)
    OSEventFreeList->OSEventName[0] = '?';                  /* Unknown name                            */
    OSEventFreeList->OSEventName[1] = OS_ASCII_NUL;
#endif
#endif
#endif
}
  84bed0:	0001883a 	nop
  84bed4:	e037883a 	mov	sp,fp
  84bed8:	dfc00117 	ldw	ra,4(sp)
  84bedc:	df000017 	ldw	fp,0(sp)
  84bee0:	dec00204 	addi	sp,sp,8
  84bee4:	f800283a 	ret

0084bee8 <OS_InitMisc>:
* Returns    : none
*********************************************************************************************************
*/

static  void  OS_InitMisc (void)
{
  84bee8:	deffff04 	addi	sp,sp,-4
  84beec:	df000015 	stw	fp,0(sp)
  84bef0:	d839883a 	mov	fp,sp
#if OS_TIME_GET_SET_EN > 0
    OSTime        = 0L;                                    /* Clear the 32-bit system clock            */
  84bef4:	d020a515 	stw	zero,-32108(gp)
#endif

    OSIntNesting  = 0;                                     /* Clear the interrupt nesting counter      */
  84bef8:	d020a305 	stb	zero,-32116(gp)
    OSLockNesting = 0;                                     /* Clear the scheduling lock counter        */
  84befc:	d0209505 	stb	zero,-32172(gp)

    OSTaskCtr     = 0;                                     /* Clear the number of tasks                */
  84bf00:	d0209d45 	stb	zero,-32139(gp)

    OSRunning     = OS_FALSE;                              /* Indicate that multitasking not started   */
  84bf04:	d0209545 	stb	zero,-32171(gp)

    OSCtxSwCtr    = 0;                                     /* Clear the context switch counter         */
  84bf08:	d0209a15 	stw	zero,-32152(gp)
    OSIdleCtr     = 0L;                                    /* Clear the 32-bit idle counter            */
  84bf0c:	d0209615 	stw	zero,-32168(gp)

#if OS_TASK_STAT_EN > 0
    OSIdleCtrRun  = 0L;
  84bf10:	d020a815 	stw	zero,-32096(gp)
    OSIdleCtrMax  = 0L;
  84bf14:	d0209b15 	stw	zero,-32148(gp)
    OSStatRdy     = OS_FALSE;                              /* Statistic task is not ready              */
  84bf18:	d020a705 	stb	zero,-32100(gp)
#endif
}
  84bf1c:	0001883a 	nop
  84bf20:	e037883a 	mov	sp,fp
  84bf24:	df000017 	ldw	fp,0(sp)
  84bf28:	dec00104 	addi	sp,sp,4
  84bf2c:	f800283a 	ret

0084bf30 <OS_InitRdyList>:
* Returns    : none
*********************************************************************************************************
*/

static  void  OS_InitRdyList (void)
{
  84bf30:	defffd04 	addi	sp,sp,-12
  84bf34:	df000215 	stw	fp,8(sp)
  84bf38:	df000204 	addi	fp,sp,8
#else
    INT16U  *prdytbl;
#endif


    OSRdyGrp      = 0;                                     /* Clear the ready list                     */
  84bf3c:	d020a105 	stb	zero,-32124(gp)
    prdytbl       = &OSRdyTbl[0];
  84bf40:	d0a0a144 	addi	r2,gp,-32123
  84bf44:	e0bfff15 	stw	r2,-4(fp)
    for (i = 0; i < OS_RDY_TBL_SIZE; i++) {
  84bf48:	e03ffe05 	stb	zero,-8(fp)
  84bf4c:	00000706 	br	84bf6c <OS_InitRdyList+0x3c>
        *prdytbl++ = 0;
  84bf50:	e0bfff17 	ldw	r2,-4(fp)
  84bf54:	10c00044 	addi	r3,r2,1
  84bf58:	e0ffff15 	stw	r3,-4(fp)
  84bf5c:	10000005 	stb	zero,0(r2)
#endif


    OSRdyGrp      = 0;                                     /* Clear the ready list                     */
    prdytbl       = &OSRdyTbl[0];
    for (i = 0; i < OS_RDY_TBL_SIZE; i++) {
  84bf60:	e0bffe03 	ldbu	r2,-8(fp)
  84bf64:	10800044 	addi	r2,r2,1
  84bf68:	e0bffe05 	stb	r2,-8(fp)
  84bf6c:	e0bffe03 	ldbu	r2,-8(fp)
  84bf70:	108000f0 	cmpltui	r2,r2,3
  84bf74:	103ff61e 	bne	r2,zero,84bf50 <__alt_mem_epcs_flash_controller_0+0xff842f50>
        *prdytbl++ = 0;
    }

    OSPrioCur     = 0;
  84bf78:	d0209745 	stb	zero,-32163(gp)
    OSPrioHighRdy = 0;
  84bf7c:	d0209705 	stb	zero,-32164(gp)

    OSTCBHighRdy  = (OS_TCB *)0;
  84bf80:	d0209f15 	stw	zero,-32132(gp)
    OSTCBCur      = (OS_TCB *)0;
  84bf84:	d020a415 	stw	zero,-32112(gp)
}
  84bf88:	0001883a 	nop
  84bf8c:	e037883a 	mov	sp,fp
  84bf90:	df000017 	ldw	fp,0(sp)
  84bf94:	dec00104 	addi	sp,sp,4
  84bf98:	f800283a 	ret

0084bf9c <OS_InitTaskIdle>:
* Returns    : none
*********************************************************************************************************
*/

static  void  OS_InitTaskIdle (void)
{
  84bf9c:	defff804 	addi	sp,sp,-32
  84bfa0:	dfc00715 	stw	ra,28(sp)
  84bfa4:	df000615 	stw	fp,24(sp)
  84bfa8:	df000604 	addi	fp,sp,24
#endif


#if OS_TASK_CREATE_EXT_EN > 0
    #if OS_STK_GROWTH == 1
    (void)OSTaskCreateExt(OS_TaskIdle,
  84bfac:	008000c4 	movi	r2,3
  84bfb0:	d8800415 	stw	r2,16(sp)
  84bfb4:	d8000315 	stw	zero,12(sp)
  84bfb8:	00808004 	movi	r2,512
  84bfbc:	d8800215 	stw	r2,8(sp)
  84bfc0:	008021b4 	movhi	r2,134
  84bfc4:	1092a504 	addi	r2,r2,19092
  84bfc8:	d8800115 	stw	r2,4(sp)
  84bfcc:	00bfffd4 	movui	r2,65535
  84bfd0:	d8800015 	stw	r2,0(sp)
  84bfd4:	01c00504 	movi	r7,20
  84bfd8:	018021b4 	movhi	r6,134
  84bfdc:	3194a404 	addi	r6,r6,21136
  84bfe0:	000b883a 	mov	r5,zero
  84bfe4:	01002174 	movhi	r4,133
  84bfe8:	21311204 	addi	r4,r4,-15288
  84bfec:	0850b140 	call	850b14 <OSTaskCreateExt>
                       OS_TASK_IDLE_PRIO);
    #endif
#endif

#if OS_TASK_NAME_SIZE > 14
    OSTaskNameSet(OS_TASK_IDLE_PRIO, (INT8U *)"uC/OS-II Idle", &err);
  84bff0:	e1bfff04 	addi	r6,fp,-4
  84bff4:	014021b4 	movhi	r5,134
  84bff8:	2967ca04 	addi	r5,r5,-24792
  84bffc:	01000504 	movi	r4,20
  84c000:	08513240 	call	851324 <OSTaskNameSet>
#else
#if OS_TASK_NAME_SIZE > 7
    OSTaskNameSet(OS_TASK_IDLE_PRIO, (INT8U *)"OS-Idle", &err);
#endif
#endif
}
  84c004:	0001883a 	nop
  84c008:	e037883a 	mov	sp,fp
  84c00c:	dfc00117 	ldw	ra,4(sp)
  84c010:	df000017 	ldw	fp,0(sp)
  84c014:	dec00204 	addi	sp,sp,8
  84c018:	f800283a 	ret

0084c01c <OS_InitTaskStat>:
*********************************************************************************************************
*/

#if OS_TASK_STAT_EN > 0
static  void  OS_InitTaskStat (void)
{
  84c01c:	defff804 	addi	sp,sp,-32
  84c020:	dfc00715 	stw	ra,28(sp)
  84c024:	df000615 	stw	fp,24(sp)
  84c028:	df000604 	addi	fp,sp,24
#endif


#if OS_TASK_CREATE_EXT_EN > 0
    #if OS_STK_GROWTH == 1
    (void)OSTaskCreateExt(OS_TaskStat,
  84c02c:	008000c4 	movi	r2,3
  84c030:	d8800415 	stw	r2,16(sp)
  84c034:	d8000315 	stw	zero,12(sp)
  84c038:	00808004 	movi	r2,512
  84c03c:	d8800215 	stw	r2,8(sp)
  84c040:	008021b4 	movhi	r2,134
  84c044:	10902d04 	addi	r2,r2,16564
  84c048:	d8800115 	stw	r2,4(sp)
  84c04c:	00bfff94 	movui	r2,65534
  84c050:	d8800015 	stw	r2,0(sp)
  84c054:	01c004c4 	movi	r7,19
  84c058:	018021b4 	movhi	r6,134
  84c05c:	31922c04 	addi	r6,r6,18608
  84c060:	000b883a 	mov	r5,zero
  84c064:	01002174 	movhi	r4,133
  84c068:	21312904 	addi	r4,r4,-15196
  84c06c:	0850b140 	call	850b14 <OSTaskCreateExt>
                       OS_TASK_STAT_PRIO);                             /* One higher than the idle task  */
    #endif
#endif

#if OS_TASK_NAME_SIZE > 14
    OSTaskNameSet(OS_TASK_STAT_PRIO, (INT8U *)"uC/OS-II Stat", &err);
  84c070:	e1bfff04 	addi	r6,fp,-4
  84c074:	014021b4 	movhi	r5,134
  84c078:	2967ce04 	addi	r5,r5,-24776
  84c07c:	010004c4 	movi	r4,19
  84c080:	08513240 	call	851324 <OSTaskNameSet>
#else
#if OS_TASK_NAME_SIZE > 7
    OSTaskNameSet(OS_TASK_STAT_PRIO, (INT8U *)"OS-Stat", &err);
#endif
#endif
}
  84c084:	0001883a 	nop
  84c088:	e037883a 	mov	sp,fp
  84c08c:	dfc00117 	ldw	ra,4(sp)
  84c090:	df000017 	ldw	fp,0(sp)
  84c094:	dec00204 	addi	sp,sp,8
  84c098:	f800283a 	ret

0084c09c <OS_InitTCBList>:
* Returns    : none
*********************************************************************************************************
*/

static  void  OS_InitTCBList (void)
{
  84c09c:	defffb04 	addi	sp,sp,-20
  84c0a0:	dfc00415 	stw	ra,16(sp)
  84c0a4:	df000315 	stw	fp,12(sp)
  84c0a8:	df000304 	addi	fp,sp,12
    INT8U    i;
    OS_TCB  *ptcb1;
    OS_TCB  *ptcb2;


    OS_MemClr((INT8U *)&OSTCBTbl[0],     sizeof(OSTCBTbl));      /* Clear all the TCBs                 */
  84c0ac:	01414404 	movi	r5,1296
  84c0b0:	010021b4 	movhi	r4,134
  84c0b4:	21177504 	addi	r4,r4,24020
  84c0b8:	084c1800 	call	84c180 <OS_MemClr>
    OS_MemClr((INT8U *)&OSTCBPrioTbl[0], sizeof(OSTCBPrioTbl));  /* Clear the priority table           */
  84c0bc:	01401504 	movi	r5,84
  84c0c0:	010021b4 	movhi	r4,134
  84c0c4:	2118b904 	addi	r4,r4,25316
  84c0c8:	084c1800 	call	84c180 <OS_MemClr>
    ptcb1 = &OSTCBTbl[0];
  84c0cc:	008021b4 	movhi	r2,134
  84c0d0:	10977504 	addi	r2,r2,24020
  84c0d4:	e0bffe15 	stw	r2,-8(fp)
    ptcb2 = &OSTCBTbl[1];
  84c0d8:	008021b4 	movhi	r2,134
  84c0dc:	10979004 	addi	r2,r2,24128
  84c0e0:	e0bfff15 	stw	r2,-4(fp)
    for (i = 0; i < (OS_MAX_TASKS + OS_N_SYS_TASKS - 1); i++) {  /* Init. list of free TCBs            */
  84c0e4:	e03ffd05 	stb	zero,-12(fp)
  84c0e8:	00001106 	br	84c130 <OS_InitTCBList+0x94>
        ptcb1->OSTCBNext = ptcb2;
  84c0ec:	e0bffe17 	ldw	r2,-8(fp)
  84c0f0:	e0ffff17 	ldw	r3,-4(fp)
  84c0f4:	10c00515 	stw	r3,20(r2)
#if OS_TASK_NAME_SIZE > 1
        ptcb1->OSTCBTaskName[0] = '?';                           /* Unknown name                       */
  84c0f8:	e0bffe17 	ldw	r2,-8(fp)
  84c0fc:	00c00fc4 	movi	r3,63
  84c100:	10c01305 	stb	r3,76(r2)
        ptcb1->OSTCBTaskName[1] = OS_ASCII_NUL;
  84c104:	e0bffe17 	ldw	r2,-8(fp)
  84c108:	10001345 	stb	zero,77(r2)
#endif
        ptcb1++;
  84c10c:	e0bffe17 	ldw	r2,-8(fp)
  84c110:	10801b04 	addi	r2,r2,108
  84c114:	e0bffe15 	stw	r2,-8(fp)
        ptcb2++;
  84c118:	e0bfff17 	ldw	r2,-4(fp)
  84c11c:	10801b04 	addi	r2,r2,108
  84c120:	e0bfff15 	stw	r2,-4(fp)

    OS_MemClr((INT8U *)&OSTCBTbl[0],     sizeof(OSTCBTbl));      /* Clear all the TCBs                 */
    OS_MemClr((INT8U *)&OSTCBPrioTbl[0], sizeof(OSTCBPrioTbl));  /* Clear the priority table           */
    ptcb1 = &OSTCBTbl[0];
    ptcb2 = &OSTCBTbl[1];
    for (i = 0; i < (OS_MAX_TASKS + OS_N_SYS_TASKS - 1); i++) {  /* Init. list of free TCBs            */
  84c124:	e0bffd03 	ldbu	r2,-12(fp)
  84c128:	10800044 	addi	r2,r2,1
  84c12c:	e0bffd05 	stb	r2,-12(fp)
  84c130:	e0bffd03 	ldbu	r2,-12(fp)
  84c134:	108002f0 	cmpltui	r2,r2,11
  84c138:	103fec1e 	bne	r2,zero,84c0ec <__alt_mem_epcs_flash_controller_0+0xff8430ec>
        ptcb1->OSTCBTaskName[1] = OS_ASCII_NUL;
#endif
        ptcb1++;
        ptcb2++;
    }
    ptcb1->OSTCBNext = (OS_TCB *)0;                              /* Last OS_TCB                        */
  84c13c:	e0bffe17 	ldw	r2,-8(fp)
  84c140:	10000515 	stw	zero,20(r2)
#if OS_TASK_NAME_SIZE > 1
    ptcb1->OSTCBTaskName[0] = '?';                               /* Unknown name                       */
  84c144:	e0bffe17 	ldw	r2,-8(fp)
  84c148:	00c00fc4 	movi	r3,63
  84c14c:	10c01305 	stb	r3,76(r2)
    ptcb1->OSTCBTaskName[1] = OS_ASCII_NUL;
  84c150:	e0bffe17 	ldw	r2,-8(fp)
  84c154:	10001345 	stb	zero,77(r2)
#endif
    OSTCBList               = (OS_TCB *)0;                       /* TCB lists initializations          */
  84c158:	d0209815 	stw	zero,-32160(gp)
    OSTCBFreeList           = &OSTCBTbl[0];
  84c15c:	008021b4 	movhi	r2,134
  84c160:	10977504 	addi	r2,r2,24020
  84c164:	d0a09c15 	stw	r2,-32144(gp)
}
  84c168:	0001883a 	nop
  84c16c:	e037883a 	mov	sp,fp
  84c170:	dfc00117 	ldw	ra,4(sp)
  84c174:	df000017 	ldw	fp,0(sp)
  84c178:	dec00204 	addi	sp,sp,8
  84c17c:	f800283a 	ret

0084c180 <OS_MemClr>:
*                 of the alignment of the destination.
*********************************************************************************************************
*/

void  OS_MemClr (INT8U *pdest, INT16U size)
{
  84c180:	defffd04 	addi	sp,sp,-12
  84c184:	df000215 	stw	fp,8(sp)
  84c188:	df000204 	addi	fp,sp,8
  84c18c:	e13ffe15 	stw	r4,-8(fp)
  84c190:	2805883a 	mov	r2,r5
  84c194:	e0bfff0d 	sth	r2,-4(fp)
    while (size > 0) {
  84c198:	00000706 	br	84c1b8 <OS_MemClr+0x38>
        *pdest++ = (INT8U)0;
  84c19c:	e0bffe17 	ldw	r2,-8(fp)
  84c1a0:	10c00044 	addi	r3,r2,1
  84c1a4:	e0fffe15 	stw	r3,-8(fp)
  84c1a8:	10000005 	stb	zero,0(r2)
        size--;
  84c1ac:	e0bfff0b 	ldhu	r2,-4(fp)
  84c1b0:	10bfffc4 	addi	r2,r2,-1
  84c1b4:	e0bfff0d 	sth	r2,-4(fp)
*********************************************************************************************************
*/

void  OS_MemClr (INT8U *pdest, INT16U size)
{
    while (size > 0) {
  84c1b8:	e0bfff0b 	ldhu	r2,-4(fp)
  84c1bc:	103ff71e 	bne	r2,zero,84c19c <__alt_mem_epcs_flash_controller_0+0xff84319c>
        *pdest++ = (INT8U)0;
        size--;
    }
}
  84c1c0:	0001883a 	nop
  84c1c4:	e037883a 	mov	sp,fp
  84c1c8:	df000017 	ldw	fp,0(sp)
  84c1cc:	dec00104 	addi	sp,sp,4
  84c1d0:	f800283a 	ret

0084c1d4 <OS_MemCopy>:
*                 of the alignment of the source and destination.
*********************************************************************************************************
*/

void  OS_MemCopy (INT8U *pdest, INT8U *psrc, INT16U size)
{
  84c1d4:	defffc04 	addi	sp,sp,-16
  84c1d8:	df000315 	stw	fp,12(sp)
  84c1dc:	df000304 	addi	fp,sp,12
  84c1e0:	e13ffd15 	stw	r4,-12(fp)
  84c1e4:	e17ffe15 	stw	r5,-8(fp)
  84c1e8:	3005883a 	mov	r2,r6
  84c1ec:	e0bfff0d 	sth	r2,-4(fp)
    while (size > 0) {
  84c1f0:	00000b06 	br	84c220 <OS_MemCopy+0x4c>
        *pdest++ = *psrc++;
  84c1f4:	e0bffd17 	ldw	r2,-12(fp)
  84c1f8:	10c00044 	addi	r3,r2,1
  84c1fc:	e0fffd15 	stw	r3,-12(fp)
  84c200:	e0fffe17 	ldw	r3,-8(fp)
  84c204:	19000044 	addi	r4,r3,1
  84c208:	e13ffe15 	stw	r4,-8(fp)
  84c20c:	18c00003 	ldbu	r3,0(r3)
  84c210:	10c00005 	stb	r3,0(r2)
        size--;
  84c214:	e0bfff0b 	ldhu	r2,-4(fp)
  84c218:	10bfffc4 	addi	r2,r2,-1
  84c21c:	e0bfff0d 	sth	r2,-4(fp)
*********************************************************************************************************
*/

void  OS_MemCopy (INT8U *pdest, INT8U *psrc, INT16U size)
{
    while (size > 0) {
  84c220:	e0bfff0b 	ldhu	r2,-4(fp)
  84c224:	103ff31e 	bne	r2,zero,84c1f4 <__alt_mem_epcs_flash_controller_0+0xff8431f4>
        *pdest++ = *psrc++;
        size--;
    }
}
  84c228:	0001883a 	nop
  84c22c:	e037883a 	mov	sp,fp
  84c230:	df000017 	ldw	fp,0(sp)
  84c234:	dec00104 	addi	sp,sp,4
  84c238:	f800283a 	ret

0084c23c <OS_Sched>:
*              2) Rescheduling is prevented when the scheduler is locked (see OS_SchedLock())
*********************************************************************************************************
*/

void  OS_Sched (void)
{
  84c23c:	defffb04 	addi	sp,sp,-20
  84c240:	dfc00415 	stw	ra,16(sp)
  84c244:	df000315 	stw	fp,12(sp)
  84c248:	df000304 	addi	fp,sp,12
#if OS_CRITICAL_METHOD == 3                            /* Allocate storage for CPU status register     */
    OS_CPU_SR  cpu_sr = 0;
  84c24c:	e03ffd15 	stw	zero,-12(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84c250:	0005303a 	rdctl	r2,status
  84c254:	e0bfff15 	stw	r2,-4(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84c258:	e0ffff17 	ldw	r3,-4(fp)
  84c25c:	00bfff84 	movi	r2,-2
  84c260:	1884703a 	and	r2,r3,r2
  84c264:	1001703a 	wrctl	status,r2
  
  return context;
  84c268:	e0bfff17 	ldw	r2,-4(fp)
#endif



    OS_ENTER_CRITICAL();
  84c26c:	e0bffd15 	stw	r2,-12(fp)
    if (OSIntNesting == 0) {                           /* Schedule only if all ISRs done and ...       */
  84c270:	d0a0a303 	ldbu	r2,-32116(gp)
  84c274:	10803fcc 	andi	r2,r2,255
  84c278:	10001a1e 	bne	r2,zero,84c2e4 <OS_Sched+0xa8>
        if (OSLockNesting == 0) {                      /* ... scheduler is not locked                  */
  84c27c:	d0a09503 	ldbu	r2,-32172(gp)
  84c280:	10803fcc 	andi	r2,r2,255
  84c284:	1000171e 	bne	r2,zero,84c2e4 <OS_Sched+0xa8>
            OS_SchedNew();
  84c288:	084c30c0 	call	84c30c <OS_SchedNew>
            if (OSPrioHighRdy != OSPrioCur) {          /* No Ctx Sw if current task is highest rdy     */
  84c28c:	d0e09703 	ldbu	r3,-32164(gp)
  84c290:	d0a09743 	ldbu	r2,-32163(gp)
  84c294:	18c03fcc 	andi	r3,r3,255
  84c298:	10803fcc 	andi	r2,r2,255
  84c29c:	18801126 	beq	r3,r2,84c2e4 <OS_Sched+0xa8>
                OSTCBHighRdy = OSTCBPrioTbl[OSPrioHighRdy];
  84c2a0:	d0a09703 	ldbu	r2,-32164(gp)
  84c2a4:	10c03fcc 	andi	r3,r2,255
  84c2a8:	008021b4 	movhi	r2,134
  84c2ac:	1098b904 	addi	r2,r2,25316
  84c2b0:	18c7883a 	add	r3,r3,r3
  84c2b4:	18c7883a 	add	r3,r3,r3
  84c2b8:	10c5883a 	add	r2,r2,r3
  84c2bc:	10800017 	ldw	r2,0(r2)
  84c2c0:	d0a09f15 	stw	r2,-32132(gp)
#if OS_TASK_PROFILE_EN > 0
                OSTCBHighRdy->OSTCBCtxSwCtr++;         /* Inc. # of context switches to this task      */
  84c2c4:	d0a09f17 	ldw	r2,-32132(gp)
  84c2c8:	10c00e17 	ldw	r3,56(r2)
  84c2cc:	18c00044 	addi	r3,r3,1
  84c2d0:	10c00e15 	stw	r3,56(r2)
#endif
                OSCtxSwCtr++;                          /* Increment context switch counter             */
  84c2d4:	d0a09a17 	ldw	r2,-32152(gp)
  84c2d8:	10800044 	addi	r2,r2,1
  84c2dc:	d0a09a15 	stw	r2,-32152(gp)
                OS_TASK_SW();                          /* Perform a context switch                     */
  84c2e0:	08567940 	call	856794 <OSCtxSw>
  84c2e4:	e0bffd17 	ldw	r2,-12(fp)
  84c2e8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84c2ec:	e0bffe17 	ldw	r2,-8(fp)
  84c2f0:	1001703a 	wrctl	status,r2
            }
        }
    }
    OS_EXIT_CRITICAL();
}
  84c2f4:	0001883a 	nop
  84c2f8:	e037883a 	mov	sp,fp
  84c2fc:	dfc00117 	ldw	ra,4(sp)
  84c300:	df000017 	ldw	fp,0(sp)
  84c304:	dec00204 	addi	sp,sp,8
  84c308:	f800283a 	ret

0084c30c <OS_SchedNew>:
*              2) Interrupts are assumed to be disabled when this function is called.
*********************************************************************************************************
*/

static  void  OS_SchedNew (void)
{
  84c30c:	defffe04 	addi	sp,sp,-8
  84c310:	df000115 	stw	fp,4(sp)
  84c314:	df000104 	addi	fp,sp,4
#if OS_LOWEST_PRIO <= 63                         /* See if we support up to 64 tasks                   */
    INT8U   y;


    y             = OSUnMapTbl[OSRdyGrp];
  84c318:	d0a0a103 	ldbu	r2,-32124(gp)
  84c31c:	10c03fcc 	andi	r3,r2,255
  84c320:	008021b4 	movhi	r2,134
  84c324:	10a78a04 	addi	r2,r2,-25048
  84c328:	10c5883a 	add	r2,r2,r3
  84c32c:	10800003 	ldbu	r2,0(r2)
  84c330:	e0bfff05 	stb	r2,-4(fp)
    OSPrioHighRdy = (INT8U)((y << 3) + OSUnMapTbl[OSRdyTbl[y]]);
  84c334:	e0bfff03 	ldbu	r2,-4(fp)
  84c338:	100490fa 	slli	r2,r2,3
  84c33c:	1009883a 	mov	r4,r2
  84c340:	e0ffff03 	ldbu	r3,-4(fp)
  84c344:	d0a0a144 	addi	r2,gp,-32123
  84c348:	1885883a 	add	r2,r3,r2
  84c34c:	10800003 	ldbu	r2,0(r2)
  84c350:	10c03fcc 	andi	r3,r2,255
  84c354:	008021b4 	movhi	r2,134
  84c358:	10a78a04 	addi	r2,r2,-25048
  84c35c:	10c5883a 	add	r2,r2,r3
  84c360:	10800003 	ldbu	r2,0(r2)
  84c364:	2085883a 	add	r2,r4,r2
  84c368:	d0a09705 	stb	r2,-32164(gp)
        OSPrioHighRdy = (INT8U)((y << 4) + OSUnMapTbl[(*ptbl & 0xFF)]);
    } else {
        OSPrioHighRdy = (INT8U)((y << 4) + OSUnMapTbl[(*ptbl >> 8) & 0xFF] + 8);
    }
#endif
}
  84c36c:	0001883a 	nop
  84c370:	e037883a 	mov	sp,fp
  84c374:	df000017 	ldw	fp,0(sp)
  84c378:	dec00104 	addi	sp,sp,4
  84c37c:	f800283a 	ret

0084c380 <OS_StrCopy>:
*********************************************************************************************************
*/

#if (OS_EVENT_NAME_SIZE > 1) || (OS_FLAG_NAME_SIZE > 1) || (OS_MEM_NAME_SIZE > 1) || (OS_TASK_NAME_SIZE > 1) || (OS_TMR_CFG_NAME_SIZE > 1)
INT8U  OS_StrCopy (INT8U *pdest, INT8U *psrc)
{
  84c380:	defffc04 	addi	sp,sp,-16
  84c384:	df000315 	stw	fp,12(sp)
  84c388:	df000304 	addi	fp,sp,12
  84c38c:	e13ffe15 	stw	r4,-8(fp)
  84c390:	e17fff15 	stw	r5,-4(fp)
    INT8U  len;


    len = 0;
  84c394:	e03ffd05 	stb	zero,-12(fp)
    while (*psrc != OS_ASCII_NUL) {
  84c398:	00000b06 	br	84c3c8 <OS_StrCopy+0x48>
        *pdest++ = *psrc++;
  84c39c:	e0bffe17 	ldw	r2,-8(fp)
  84c3a0:	10c00044 	addi	r3,r2,1
  84c3a4:	e0fffe15 	stw	r3,-8(fp)
  84c3a8:	e0ffff17 	ldw	r3,-4(fp)
  84c3ac:	19000044 	addi	r4,r3,1
  84c3b0:	e13fff15 	stw	r4,-4(fp)
  84c3b4:	18c00003 	ldbu	r3,0(r3)
  84c3b8:	10c00005 	stb	r3,0(r2)
        len++;
  84c3bc:	e0bffd03 	ldbu	r2,-12(fp)
  84c3c0:	10800044 	addi	r2,r2,1
  84c3c4:	e0bffd05 	stb	r2,-12(fp)
{
    INT8U  len;


    len = 0;
    while (*psrc != OS_ASCII_NUL) {
  84c3c8:	e0bfff17 	ldw	r2,-4(fp)
  84c3cc:	10800003 	ldbu	r2,0(r2)
  84c3d0:	10803fcc 	andi	r2,r2,255
  84c3d4:	103ff11e 	bne	r2,zero,84c39c <__alt_mem_epcs_flash_controller_0+0xff84339c>
        *pdest++ = *psrc++;
        len++;
    }
    *pdest = OS_ASCII_NUL;
  84c3d8:	e0bffe17 	ldw	r2,-8(fp)
  84c3dc:	10000005 	stb	zero,0(r2)
    return (len);
  84c3e0:	e0bffd03 	ldbu	r2,-12(fp)
}
  84c3e4:	e037883a 	mov	sp,fp
  84c3e8:	df000017 	ldw	fp,0(sp)
  84c3ec:	dec00104 	addi	sp,sp,4
  84c3f0:	f800283a 	ret

0084c3f4 <OS_StrLen>:
*********************************************************************************************************
*/

#if (OS_EVENT_NAME_SIZE > 1) || (OS_FLAG_NAME_SIZE > 1) || (OS_MEM_NAME_SIZE > 1) || (OS_TASK_NAME_SIZE > 1) || (OS_TMR_CFG_NAME_SIZE > 1)
INT8U  OS_StrLen (INT8U *psrc)
{
  84c3f4:	defffd04 	addi	sp,sp,-12
  84c3f8:	df000215 	stw	fp,8(sp)
  84c3fc:	df000204 	addi	fp,sp,8
  84c400:	e13fff15 	stw	r4,-4(fp)
    INT8U  len;


    len = 0;
  84c404:	e03ffe05 	stb	zero,-8(fp)
    while (*psrc != OS_ASCII_NUL) {
  84c408:	00000606 	br	84c424 <OS_StrLen+0x30>
        psrc++;
  84c40c:	e0bfff17 	ldw	r2,-4(fp)
  84c410:	10800044 	addi	r2,r2,1
  84c414:	e0bfff15 	stw	r2,-4(fp)
        len++;
  84c418:	e0bffe03 	ldbu	r2,-8(fp)
  84c41c:	10800044 	addi	r2,r2,1
  84c420:	e0bffe05 	stb	r2,-8(fp)
{
    INT8U  len;


    len = 0;
    while (*psrc != OS_ASCII_NUL) {
  84c424:	e0bfff17 	ldw	r2,-4(fp)
  84c428:	10800003 	ldbu	r2,0(r2)
  84c42c:	10803fcc 	andi	r2,r2,255
  84c430:	103ff61e 	bne	r2,zero,84c40c <__alt_mem_epcs_flash_controller_0+0xff84340c>
        psrc++;
        len++;
    }
    return (len);
  84c434:	e0bffe03 	ldbu	r2,-8(fp)
}
  84c438:	e037883a 	mov	sp,fp
  84c43c:	df000017 	ldw	fp,0(sp)
  84c440:	dec00104 	addi	sp,sp,4
  84c444:	f800283a 	ret

0084c448 <OS_TaskIdle>:
*                 power.
*********************************************************************************************************
*/

void  OS_TaskIdle (void *p_arg)
{
  84c448:	defffa04 	addi	sp,sp,-24
  84c44c:	dfc00515 	stw	ra,20(sp)
  84c450:	df000415 	stw	fp,16(sp)
  84c454:	df000404 	addi	fp,sp,16
  84c458:	e13fff15 	stw	r4,-4(fp)
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84c45c:	e03ffc15 	stw	zero,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84c460:	0005303a 	rdctl	r2,status
  84c464:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84c468:	e0fffd17 	ldw	r3,-12(fp)
  84c46c:	00bfff84 	movi	r2,-2
  84c470:	1884703a 	and	r2,r3,r2
  84c474:	1001703a 	wrctl	status,r2
  
  return context;
  84c478:	e0bffd17 	ldw	r2,-12(fp)



    (void)p_arg;                                 /* Prevent compiler warning for not using 'p_arg'     */
    for (;;) {
        OS_ENTER_CRITICAL();
  84c47c:	e0bffc15 	stw	r2,-16(fp)
        OSIdleCtr++;
  84c480:	d0a09617 	ldw	r2,-32168(gp)
  84c484:	10800044 	addi	r2,r2,1
  84c488:	d0a09615 	stw	r2,-32168(gp)
  84c48c:	e0bffc17 	ldw	r2,-16(fp)
  84c490:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84c494:	e0bffe17 	ldw	r2,-8(fp)
  84c498:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        OSTaskIdleHook();                        /* Call user definable HOOK                           */
  84c49c:	0856aa80 	call	856aa8 <OSTaskIdleHook>
    }
  84c4a0:	003fef06 	br	84c460 <__alt_mem_epcs_flash_controller_0+0xff843460>

0084c4a4 <OS_TaskStat>:
*********************************************************************************************************
*/

#if OS_TASK_STAT_EN > 0
void  OS_TaskStat (void *p_arg)
{
  84c4a4:	defffa04 	addi	sp,sp,-24
  84c4a8:	dfc00515 	stw	ra,20(sp)
  84c4ac:	df000415 	stw	fp,16(sp)
  84c4b0:	df000404 	addi	fp,sp,16
  84c4b4:	e13fff15 	stw	r4,-4(fp)
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84c4b8:	e03ffc15 	stw	zero,-16(fp)
#endif



    (void)p_arg;                                 /* Prevent compiler warning for not using 'p_arg'     */
    while (OSStatRdy == OS_FALSE) {
  84c4bc:	00000206 	br	84c4c8 <OS_TaskStat+0x24>
        OSTimeDly(2 * OS_TICKS_PER_SEC / 10);    /* Wait until statistic task is ready                 */
  84c4c0:	01003204 	movi	r4,200
  84c4c4:	0851be40 	call	851be4 <OSTimeDly>
#endif



    (void)p_arg;                                 /* Prevent compiler warning for not using 'p_arg'     */
    while (OSStatRdy == OS_FALSE) {
  84c4c8:	d0a0a703 	ldbu	r2,-32100(gp)
  84c4cc:	10803fcc 	andi	r2,r2,255
  84c4d0:	103ffb26 	beq	r2,zero,84c4c0 <__alt_mem_epcs_flash_controller_0+0xff8434c0>
        OSTimeDly(2 * OS_TICKS_PER_SEC / 10);    /* Wait until statistic task is ready                 */
    }
    OSIdleCtrMax /= 100L;
  84c4d4:	d0a09b17 	ldw	r2,-32148(gp)
  84c4d8:	01401904 	movi	r5,100
  84c4dc:	1009883a 	mov	r4,r2
  84c4e0:	083012c0 	call	83012c <__udivsi3>
  84c4e4:	d0a09b15 	stw	r2,-32148(gp)
    if (OSIdleCtrMax == 0L) {
  84c4e8:	d0a09b17 	ldw	r2,-32148(gp)
  84c4ec:	1000031e 	bne	r2,zero,84c4fc <OS_TaskStat+0x58>
        OSCPUUsage = 0;
  84c4f0:	d0209d05 	stb	zero,-32140(gp)
        (void)OSTaskSuspend(OS_PRIO_SELF);
  84c4f4:	01003fc4 	movi	r4,255
  84c4f8:	085186c0 	call	85186c <OSTaskSuspend>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84c4fc:	0005303a 	rdctl	r2,status
  84c500:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84c504:	e0fffd17 	ldw	r3,-12(fp)
  84c508:	00bfff84 	movi	r2,-2
  84c50c:	1884703a 	and	r2,r3,r2
  84c510:	1001703a 	wrctl	status,r2
  
  return context;
  84c514:	e0bffd17 	ldw	r2,-12(fp)
    }
    for (;;) {
        OS_ENTER_CRITICAL();
  84c518:	e0bffc15 	stw	r2,-16(fp)
        OSIdleCtrRun = OSIdleCtr;                /* Obtain the of the idle counter for the past second */
  84c51c:	d0a09617 	ldw	r2,-32168(gp)
  84c520:	d0a0a815 	stw	r2,-32096(gp)
        OSIdleCtr    = 0L;                       /* Reset the idle counter for the next second         */
  84c524:	d0209615 	stw	zero,-32168(gp)
  84c528:	e0bffc17 	ldw	r2,-16(fp)
  84c52c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84c530:	e0bffe17 	ldw	r2,-8(fp)
  84c534:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        OSCPUUsage   = (INT8U)(100L - OSIdleCtrRun / OSIdleCtrMax);
  84c538:	d0a0a817 	ldw	r2,-32096(gp)
  84c53c:	d0e09b17 	ldw	r3,-32148(gp)
  84c540:	180b883a 	mov	r5,r3
  84c544:	1009883a 	mov	r4,r2
  84c548:	083012c0 	call	83012c <__udivsi3>
  84c54c:	1007883a 	mov	r3,r2
  84c550:	00801904 	movi	r2,100
  84c554:	10c5c83a 	sub	r2,r2,r3
  84c558:	d0a09d05 	stb	r2,-32140(gp)
        OSTaskStatHook();                        /* Invoke user definable hook                         */
  84c55c:	0856a280 	call	856a28 <OSTaskStatHook>
#if (OS_TASK_STAT_STK_CHK_EN > 0) && (OS_TASK_CREATE_EXT_EN > 0)
        OS_TaskStatStkChk();                     /* Check the stacks for each task                     */
  84c560:	084c5700 	call	84c570 <OS_TaskStatStkChk>
#endif
        OSTimeDly(OS_TICKS_PER_SEC / 10);        /* Accumulate OSIdleCtr for the next 1/10 second      */
  84c564:	01001904 	movi	r4,100
  84c568:	0851be40 	call	851be4 <OSTimeDly>
    }
  84c56c:	003fe306 	br	84c4fc <__alt_mem_epcs_flash_controller_0+0xff8434fc>

0084c570 <OS_TaskStatStkChk>:
*********************************************************************************************************
*/

#if (OS_TASK_STAT_STK_CHK_EN > 0) && (OS_TASK_CREATE_EXT_EN > 0)
void  OS_TaskStatStkChk (void)
{
  84c570:	defffa04 	addi	sp,sp,-24
  84c574:	dfc00515 	stw	ra,20(sp)
  84c578:	df000415 	stw	fp,16(sp)
  84c57c:	df000404 	addi	fp,sp,16
    OS_STK_DATA  stk_data;
    INT8U        err;
    INT8U        prio;


    for (prio = 0; prio <= OS_TASK_IDLE_PRIO; prio++) {
  84c580:	e03ffc05 	stb	zero,-16(fp)
  84c584:	00002406 	br	84c618 <OS_TaskStatStkChk+0xa8>
        err = OSTaskStkChk(prio, &stk_data);
  84c588:	e0bffc03 	ldbu	r2,-16(fp)
  84c58c:	e0fffe04 	addi	r3,fp,-8
  84c590:	180b883a 	mov	r5,r3
  84c594:	1009883a 	mov	r4,r2
  84c598:	08516ac0 	call	8516ac <OSTaskStkChk>
  84c59c:	e0bffc45 	stb	r2,-15(fp)
        if (err == OS_ERR_NONE) {
  84c5a0:	e0bffc43 	ldbu	r2,-15(fp)
  84c5a4:	1000191e 	bne	r2,zero,84c60c <OS_TaskStatStkChk+0x9c>
            ptcb = OSTCBPrioTbl[prio];
  84c5a8:	e0fffc03 	ldbu	r3,-16(fp)
  84c5ac:	008021b4 	movhi	r2,134
  84c5b0:	1098b904 	addi	r2,r2,25316
  84c5b4:	18c7883a 	add	r3,r3,r3
  84c5b8:	18c7883a 	add	r3,r3,r3
  84c5bc:	10c5883a 	add	r2,r2,r3
  84c5c0:	10800017 	ldw	r2,0(r2)
  84c5c4:	e0bffd15 	stw	r2,-12(fp)
            if (ptcb != (OS_TCB *)0) {                               /* Make sure task 'ptcb' is ...   */
  84c5c8:	e0bffd17 	ldw	r2,-12(fp)
  84c5cc:	10000f26 	beq	r2,zero,84c60c <OS_TaskStatStkChk+0x9c>
                if (ptcb != OS_TCB_RESERVED) {                       /* ... still valid.               */
  84c5d0:	e0bffd17 	ldw	r2,-12(fp)
  84c5d4:	10800060 	cmpeqi	r2,r2,1
  84c5d8:	10000c1e 	bne	r2,zero,84c60c <OS_TaskStatStkChk+0x9c>
#if OS_TASK_PROFILE_EN > 0
                    #if OS_STK_GROWTH == 1
                    ptcb->OSTCBStkBase = ptcb->OSTCBStkBottom + ptcb->OSTCBStkSize;
  84c5dc:	e0bffd17 	ldw	r2,-12(fp)
  84c5e0:	10c00217 	ldw	r3,8(r2)
  84c5e4:	e0bffd17 	ldw	r2,-12(fp)
  84c5e8:	10800317 	ldw	r2,12(r2)
  84c5ec:	1085883a 	add	r2,r2,r2
  84c5f0:	1085883a 	add	r2,r2,r2
  84c5f4:	1887883a 	add	r3,r3,r2
  84c5f8:	e0bffd17 	ldw	r2,-12(fp)
  84c5fc:	10c01115 	stw	r3,68(r2)
                    #else
                    ptcb->OSTCBStkBase = ptcb->OSTCBStkBottom - ptcb->OSTCBStkSize;
                    #endif
                    ptcb->OSTCBStkUsed = stk_data.OSUsed;            /* Store the number of bytes used */
  84c600:	e0ffff17 	ldw	r3,-4(fp)
  84c604:	e0bffd17 	ldw	r2,-12(fp)
  84c608:	10c01215 	stw	r3,72(r2)
    OS_STK_DATA  stk_data;
    INT8U        err;
    INT8U        prio;


    for (prio = 0; prio <= OS_TASK_IDLE_PRIO; prio++) {
  84c60c:	e0bffc03 	ldbu	r2,-16(fp)
  84c610:	10800044 	addi	r2,r2,1
  84c614:	e0bffc05 	stb	r2,-16(fp)
  84c618:	e0bffc03 	ldbu	r2,-16(fp)
  84c61c:	10800570 	cmpltui	r2,r2,21
  84c620:	103fd91e 	bne	r2,zero,84c588 <__alt_mem_epcs_flash_controller_0+0xff843588>
#endif
                }
            }
        }
    }
}
  84c624:	0001883a 	nop
  84c628:	e037883a 	mov	sp,fp
  84c62c:	dfc00117 	ldw	ra,4(sp)
  84c630:	df000017 	ldw	fp,0(sp)
  84c634:	dec00204 	addi	sp,sp,8
  84c638:	f800283a 	ret

0084c63c <OS_TCBInit>:
* Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/

INT8U  OS_TCBInit (INT8U prio, OS_STK *ptos, OS_STK *pbos, INT16U id, INT32U stk_size, void *pext, INT16U opt)
{
  84c63c:	defff204 	addi	sp,sp,-56
  84c640:	dfc00d15 	stw	ra,52(sp)
  84c644:	df000c15 	stw	fp,48(sp)
  84c648:	df000c04 	addi	fp,sp,48
  84c64c:	e17ffc15 	stw	r5,-16(fp)
  84c650:	e1bffd15 	stw	r6,-12(fp)
  84c654:	3807883a 	mov	r3,r7
  84c658:	e0800417 	ldw	r2,16(fp)
  84c65c:	e13ffb05 	stb	r4,-20(fp)
  84c660:	e0fffe0d 	sth	r3,-8(fp)
  84c664:	e0bfff0d 	sth	r2,-4(fp)
    OS_TCB    *ptcb;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  84c668:	e03ff415 	stw	zero,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84c66c:	0005303a 	rdctl	r2,status
  84c670:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84c674:	e0fffa17 	ldw	r3,-24(fp)
  84c678:	00bfff84 	movi	r2,-2
  84c67c:	1884703a 	and	r2,r3,r2
  84c680:	1001703a 	wrctl	status,r2
  
  return context;
  84c684:	e0bffa17 	ldw	r2,-24(fp)
#endif



    OS_ENTER_CRITICAL();
  84c688:	e0bff415 	stw	r2,-48(fp)
    ptcb = OSTCBFreeList;                                  /* Get a free TCB from the free TCB list    */
  84c68c:	d0a09c17 	ldw	r2,-32144(gp)
  84c690:	e0bff615 	stw	r2,-40(fp)
    if (ptcb != (OS_TCB *)0) {
  84c694:	e0bff617 	ldw	r2,-40(fp)
  84c698:	10009326 	beq	r2,zero,84c8e8 <OS_TCBInit+0x2ac>
        OSTCBFreeList            = ptcb->OSTCBNext;        /* Update pointer to free TCB list          */
  84c69c:	e0bff617 	ldw	r2,-40(fp)
  84c6a0:	10800517 	ldw	r2,20(r2)
  84c6a4:	d0a09c15 	stw	r2,-32144(gp)
  84c6a8:	e0bff417 	ldw	r2,-48(fp)
  84c6ac:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84c6b0:	e0bff817 	ldw	r2,-32(fp)
  84c6b4:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        ptcb->OSTCBStkPtr        = ptos;                   /* Load Stack pointer in TCB                */
  84c6b8:	e0bff617 	ldw	r2,-40(fp)
  84c6bc:	e0fffc17 	ldw	r3,-16(fp)
  84c6c0:	10c00015 	stw	r3,0(r2)
        ptcb->OSTCBPrio          = prio;                   /* Load task priority into TCB              */
  84c6c4:	e0bff617 	ldw	r2,-40(fp)
  84c6c8:	e0fffb03 	ldbu	r3,-20(fp)
  84c6cc:	10c00c85 	stb	r3,50(r2)
        ptcb->OSTCBStat          = OS_STAT_RDY;            /* Task is ready to run                     */
  84c6d0:	e0bff617 	ldw	r2,-40(fp)
  84c6d4:	10000c05 	stb	zero,48(r2)
        ptcb->OSTCBStatPend      = OS_STAT_PEND_OK;        /* Clear pend status                        */
  84c6d8:	e0bff617 	ldw	r2,-40(fp)
  84c6dc:	10000c45 	stb	zero,49(r2)
        ptcb->OSTCBDly           = 0;                      /* Task is not delayed                      */
  84c6e0:	e0bff617 	ldw	r2,-40(fp)
  84c6e4:	10000b8d 	sth	zero,46(r2)

#if OS_TASK_CREATE_EXT_EN > 0
        ptcb->OSTCBExtPtr        = pext;                   /* Store pointer to TCB extension           */
  84c6e8:	e0bff617 	ldw	r2,-40(fp)
  84c6ec:	e0c00317 	ldw	r3,12(fp)
  84c6f0:	10c00115 	stw	r3,4(r2)
        ptcb->OSTCBStkSize       = stk_size;               /* Store stack size                         */
  84c6f4:	e0bff617 	ldw	r2,-40(fp)
  84c6f8:	e0c00217 	ldw	r3,8(fp)
  84c6fc:	10c00315 	stw	r3,12(r2)
        ptcb->OSTCBStkBottom     = pbos;                   /* Store pointer to bottom of stack         */
  84c700:	e0bff617 	ldw	r2,-40(fp)
  84c704:	e0fffd17 	ldw	r3,-12(fp)
  84c708:	10c00215 	stw	r3,8(r2)
        ptcb->OSTCBOpt           = opt;                    /* Store task options                       */
  84c70c:	e0bff617 	ldw	r2,-40(fp)
  84c710:	e0ffff0b 	ldhu	r3,-4(fp)
  84c714:	10c0040d 	sth	r3,16(r2)
        ptcb->OSTCBId            = id;                     /* Store task ID                            */
  84c718:	e0bff617 	ldw	r2,-40(fp)
  84c71c:	e0fffe0b 	ldhu	r3,-8(fp)
  84c720:	10c0048d 	sth	r3,18(r2)
        opt                      = opt;
        id                       = id;
#endif

#if OS_TASK_DEL_EN > 0
        ptcb->OSTCBDelReq        = OS_ERR_NONE;
  84c724:	e0bff617 	ldw	r2,-40(fp)
  84c728:	10000dc5 	stb	zero,55(r2)
#endif

#if OS_LOWEST_PRIO <= 63
        ptcb->OSTCBY             = (INT8U)(prio >> 3);          /* Pre-compute X, Y, BitX and BitY     */
  84c72c:	e0bffb03 	ldbu	r2,-20(fp)
  84c730:	1004d0fa 	srli	r2,r2,3
  84c734:	1007883a 	mov	r3,r2
  84c738:	e0bff617 	ldw	r2,-40(fp)
  84c73c:	10c00d05 	stb	r3,52(r2)
        ptcb->OSTCBX             = (INT8U)(prio & 0x07);
  84c740:	e0bffb03 	ldbu	r2,-20(fp)
  84c744:	108001cc 	andi	r2,r2,7
  84c748:	1007883a 	mov	r3,r2
  84c74c:	e0bff617 	ldw	r2,-40(fp)
  84c750:	10c00cc5 	stb	r3,51(r2)
        ptcb->OSTCBBitY          = (INT8U)(1 << ptcb->OSTCBY);
  84c754:	e0bff617 	ldw	r2,-40(fp)
  84c758:	10800d03 	ldbu	r2,52(r2)
  84c75c:	10803fcc 	andi	r2,r2,255
  84c760:	00c00044 	movi	r3,1
  84c764:	1884983a 	sll	r2,r3,r2
  84c768:	1007883a 	mov	r3,r2
  84c76c:	e0bff617 	ldw	r2,-40(fp)
  84c770:	10c00d85 	stb	r3,54(r2)
        ptcb->OSTCBBitX          = (INT8U)(1 << ptcb->OSTCBX);
  84c774:	e0bff617 	ldw	r2,-40(fp)
  84c778:	10800cc3 	ldbu	r2,51(r2)
  84c77c:	10803fcc 	andi	r2,r2,255
  84c780:	00c00044 	movi	r3,1
  84c784:	1884983a 	sll	r2,r3,r2
  84c788:	1007883a 	mov	r3,r2
  84c78c:	e0bff617 	ldw	r2,-40(fp)
  84c790:	10c00d45 	stb	r3,53(r2)
        ptcb->OSTCBBitY          = (INT16U)(1 << ptcb->OSTCBY);
        ptcb->OSTCBBitX          = (INT16U)(1 << ptcb->OSTCBX);
#endif

#if (OS_EVENT_EN)
        ptcb->OSTCBEventPtr      = (OS_EVENT  *)0;         /* Task is not pending on an  event         */
  84c794:	e0bff617 	ldw	r2,-40(fp)
  84c798:	10000715 	stw	zero,28(r2)
#if (OS_EVENT_MULTI_EN > 0)
        ptcb->OSTCBEventMultiPtr = (OS_EVENT **)0;         /* Task is not pending on any events        */
  84c79c:	e0bff617 	ldw	r2,-40(fp)
  84c7a0:	10000815 	stw	zero,32(r2)
#endif
#endif

#if (OS_FLAG_EN > 0) && (OS_MAX_FLAGS > 0) && (OS_TASK_DEL_EN > 0)
        ptcb->OSTCBFlagNode  = (OS_FLAG_NODE *)0;          /* Task is not pending on an event flag     */
  84c7a4:	e0bff617 	ldw	r2,-40(fp)
  84c7a8:	10000a15 	stw	zero,40(r2)
#endif

#if (OS_MBOX_EN > 0) || ((OS_Q_EN > 0) && (OS_MAX_QS > 0))
        ptcb->OSTCBMsg       = (void *)0;                  /* No message received                      */
  84c7ac:	e0bff617 	ldw	r2,-40(fp)
  84c7b0:	10000915 	stw	zero,36(r2)
#endif

#if OS_TASK_PROFILE_EN > 0
        ptcb->OSTCBCtxSwCtr    = 0L;                       /* Initialize profiling variables           */
  84c7b4:	e0bff617 	ldw	r2,-40(fp)
  84c7b8:	10000e15 	stw	zero,56(r2)
        ptcb->OSTCBCyclesStart = 0L;
  84c7bc:	e0bff617 	ldw	r2,-40(fp)
  84c7c0:	10001015 	stw	zero,64(r2)
        ptcb->OSTCBCyclesTot   = 0L;
  84c7c4:	e0bff617 	ldw	r2,-40(fp)
  84c7c8:	10000f15 	stw	zero,60(r2)
        ptcb->OSTCBStkBase     = (OS_STK *)0;
  84c7cc:	e0bff617 	ldw	r2,-40(fp)
  84c7d0:	10001115 	stw	zero,68(r2)
        ptcb->OSTCBStkUsed     = 0L;
  84c7d4:	e0bff617 	ldw	r2,-40(fp)
  84c7d8:	10001215 	stw	zero,72(r2)
#endif

#if OS_TASK_NAME_SIZE > 1
        ptcb->OSTCBTaskName[0] = '?';                      /* Unknown name at task creation            */
  84c7dc:	e0bff617 	ldw	r2,-40(fp)
  84c7e0:	00c00fc4 	movi	r3,63
  84c7e4:	10c01305 	stb	r3,76(r2)
        ptcb->OSTCBTaskName[1] = OS_ASCII_NUL;
  84c7e8:	e0bff617 	ldw	r2,-40(fp)
  84c7ec:	10001345 	stb	zero,77(r2)
#endif

        OSTCBInitHook(ptcb);
  84c7f0:	e13ff617 	ldw	r4,-40(fp)
  84c7f4:	0856ac80 	call	856ac8 <OSTCBInitHook>

        OSTaskCreateHook(ptcb);                            /* Call user defined hook                   */
  84c7f8:	e13ff617 	ldw	r4,-40(fp)
  84c7fc:	08569c00 	call	8569c0 <OSTaskCreateHook>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84c800:	0005303a 	rdctl	r2,status
  84c804:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84c808:	e0fff517 	ldw	r3,-44(fp)
  84c80c:	00bfff84 	movi	r2,-2
  84c810:	1884703a 	and	r2,r3,r2
  84c814:	1001703a 	wrctl	status,r2
  
  return context;
  84c818:	e0bff517 	ldw	r2,-44(fp)

        OS_ENTER_CRITICAL();
  84c81c:	e0bff415 	stw	r2,-48(fp)
        OSTCBPrioTbl[prio] = ptcb;
  84c820:	e0fffb03 	ldbu	r3,-20(fp)
  84c824:	008021b4 	movhi	r2,134
  84c828:	1098b904 	addi	r2,r2,25316
  84c82c:	18c7883a 	add	r3,r3,r3
  84c830:	18c7883a 	add	r3,r3,r3
  84c834:	10c5883a 	add	r2,r2,r3
  84c838:	e0fff617 	ldw	r3,-40(fp)
  84c83c:	10c00015 	stw	r3,0(r2)
        ptcb->OSTCBNext    = OSTCBList;                    /* Link into TCB chain                      */
  84c840:	d0e09817 	ldw	r3,-32160(gp)
  84c844:	e0bff617 	ldw	r2,-40(fp)
  84c848:	10c00515 	stw	r3,20(r2)
        ptcb->OSTCBPrev    = (OS_TCB *)0;
  84c84c:	e0bff617 	ldw	r2,-40(fp)
  84c850:	10000615 	stw	zero,24(r2)
        if (OSTCBList != (OS_TCB *)0) {
  84c854:	d0a09817 	ldw	r2,-32160(gp)
  84c858:	10000326 	beq	r2,zero,84c868 <OS_TCBInit+0x22c>
            OSTCBList->OSTCBPrev = ptcb;
  84c85c:	d0a09817 	ldw	r2,-32160(gp)
  84c860:	e0fff617 	ldw	r3,-40(fp)
  84c864:	10c00615 	stw	r3,24(r2)
        }
        OSTCBList               = ptcb;
  84c868:	e0bff617 	ldw	r2,-40(fp)
  84c86c:	d0a09815 	stw	r2,-32160(gp)
        OSRdyGrp               |= ptcb->OSTCBBitY;         /* Make task ready to run                   */
  84c870:	e0bff617 	ldw	r2,-40(fp)
  84c874:	10c00d83 	ldbu	r3,54(r2)
  84c878:	d0a0a103 	ldbu	r2,-32124(gp)
  84c87c:	1884b03a 	or	r2,r3,r2
  84c880:	d0a0a105 	stb	r2,-32124(gp)
        OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
  84c884:	e0bff617 	ldw	r2,-40(fp)
  84c888:	10800d03 	ldbu	r2,52(r2)
  84c88c:	10c03fcc 	andi	r3,r2,255
  84c890:	e0bff617 	ldw	r2,-40(fp)
  84c894:	10800d03 	ldbu	r2,52(r2)
  84c898:	11003fcc 	andi	r4,r2,255
  84c89c:	d0a0a144 	addi	r2,gp,-32123
  84c8a0:	2085883a 	add	r2,r4,r2
  84c8a4:	11000003 	ldbu	r4,0(r2)
  84c8a8:	e0bff617 	ldw	r2,-40(fp)
  84c8ac:	10800d43 	ldbu	r2,53(r2)
  84c8b0:	2084b03a 	or	r2,r4,r2
  84c8b4:	1009883a 	mov	r4,r2
  84c8b8:	d0a0a144 	addi	r2,gp,-32123
  84c8bc:	1885883a 	add	r2,r3,r2
  84c8c0:	11000005 	stb	r4,0(r2)
        OSTaskCtr++;                                       /* Increment the #tasks counter             */
  84c8c4:	d0a09d43 	ldbu	r2,-32139(gp)
  84c8c8:	10800044 	addi	r2,r2,1
  84c8cc:	d0a09d45 	stb	r2,-32139(gp)
  84c8d0:	e0bff417 	ldw	r2,-48(fp)
  84c8d4:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84c8d8:	e0bff717 	ldw	r2,-36(fp)
  84c8dc:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_NONE);
  84c8e0:	0005883a 	mov	r2,zero
  84c8e4:	00000506 	br	84c8fc <OS_TCBInit+0x2c0>
  84c8e8:	e0bff417 	ldw	r2,-48(fp)
  84c8ec:	e0bff915 	stw	r2,-28(fp)
  84c8f0:	e0bff917 	ldw	r2,-28(fp)
  84c8f4:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    return (OS_ERR_TASK_NO_MORE_TCB);
  84c8f8:	00801084 	movi	r2,66
}
  84c8fc:	e037883a 	mov	sp,fp
  84c900:	dfc00117 	ldw	ra,4(sp)
  84c904:	df000017 	ldw	fp,0(sp)
  84c908:	dec00204 	addi	sp,sp,8
  84c90c:	f800283a 	ret

0084c910 <OSDebugInit>:
*********************************************************************************************************
*/

#if OS_DEBUG_EN > 0
void  OSDebugInit (void)
{
  84c910:	defffe04 	addi	sp,sp,-8
  84c914:	df000115 	stw	fp,4(sp)
  84c918:	df000104 	addi	fp,sp,4
    void  *ptemp;

    
    ptemp = (void *)&OSDebugEn;
  84c91c:	d0a04804 	addi	r2,gp,-32480
  84c920:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSEndiannessTest;
  84c924:	d0a04904 	addi	r2,gp,-32476
  84c928:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSEventMax;
  84c92c:	d0a04a84 	addi	r2,gp,-32470
  84c930:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSEventNameSize;
  84c934:	d0a04b04 	addi	r2,gp,-32468
  84c938:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSEventEn;
  84c93c:	d0a04a04 	addi	r2,gp,-32472
  84c940:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSEventSize;
  84c944:	d0a04b84 	addi	r2,gp,-32466
  84c948:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSEventTblSize;
  84c94c:	d0a04c04 	addi	r2,gp,-32464
  84c950:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSEventMultiEn;
  84c954:	d0a04c84 	addi	r2,gp,-32462
  84c958:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSFlagEn;
  84c95c:	d0a04d04 	addi	r2,gp,-32460
  84c960:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSFlagGrpSize;
  84c964:	d0a04d84 	addi	r2,gp,-32458
  84c968:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSFlagNodeSize;
  84c96c:	d0a04e04 	addi	r2,gp,-32456
  84c970:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSFlagWidth;
  84c974:	d0a04e84 	addi	r2,gp,-32454
  84c978:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSFlagMax;
  84c97c:	d0a04f04 	addi	r2,gp,-32452
  84c980:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSFlagNameSize;
  84c984:	d0a04f84 	addi	r2,gp,-32450
  84c988:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSLowestPrio;
  84c98c:	d0a05004 	addi	r2,gp,-32448
  84c990:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSMboxEn;
  84c994:	d0a05084 	addi	r2,gp,-32446
  84c998:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSMemEn;
  84c99c:	d0a05104 	addi	r2,gp,-32444
  84c9a0:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSMemMax;
  84c9a4:	d0a05184 	addi	r2,gp,-32442
  84c9a8:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSMemNameSize;
  84c9ac:	d0a05204 	addi	r2,gp,-32440
  84c9b0:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSMemSize;
  84c9b4:	d0a05284 	addi	r2,gp,-32438
  84c9b8:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSMemTblSize;
  84c9bc:	d0a05304 	addi	r2,gp,-32436
  84c9c0:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSMutexEn;
  84c9c4:	d0a05384 	addi	r2,gp,-32434
  84c9c8:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSPtrSize;
  84c9cc:	d0a05404 	addi	r2,gp,-32432
  84c9d0:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSQEn;
  84c9d4:	d0a05484 	addi	r2,gp,-32430
  84c9d8:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSQMax;
  84c9dc:	d0a05504 	addi	r2,gp,-32428
  84c9e0:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSQSize;
  84c9e4:	d0a05584 	addi	r2,gp,-32426
  84c9e8:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSRdyTblSize;
  84c9ec:	d0a05604 	addi	r2,gp,-32424
  84c9f0:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSSemEn;
  84c9f4:	d0a05684 	addi	r2,gp,-32422
  84c9f8:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSStkWidth;
  84c9fc:	d0a05704 	addi	r2,gp,-32420
  84ca00:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSTaskCreateEn;
  84ca04:	d0a05784 	addi	r2,gp,-32418
  84ca08:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskCreateExtEn;
  84ca0c:	d0a05804 	addi	r2,gp,-32416
  84ca10:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskDelEn;
  84ca14:	d0a05884 	addi	r2,gp,-32414
  84ca18:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskIdleStkSize;
  84ca1c:	d0a05904 	addi	r2,gp,-32412
  84ca20:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskProfileEn;
  84ca24:	d0a05984 	addi	r2,gp,-32410
  84ca28:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskMax;
  84ca2c:	d0a05a04 	addi	r2,gp,-32408
  84ca30:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskNameSize;
  84ca34:	d0a05a84 	addi	r2,gp,-32406
  84ca38:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskStatEn;
  84ca3c:	d0a05b04 	addi	r2,gp,-32404
  84ca40:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskStatStkSize;
  84ca44:	d0a05b84 	addi	r2,gp,-32402
  84ca48:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskStatStkChkEn;
  84ca4c:	d0a05c04 	addi	r2,gp,-32400
  84ca50:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskSwHookEn;
  84ca54:	d0a05c84 	addi	r2,gp,-32398
  84ca58:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSTCBPrioTblMax;
  84ca5c:	d0a05d04 	addi	r2,gp,-32396
  84ca60:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTCBSize;
  84ca64:	d0a05d84 	addi	r2,gp,-32394
  84ca68:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSTicksPerSec;
  84ca6c:	d0a05e04 	addi	r2,gp,-32392
  84ca70:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTimeTickHookEn;
  84ca74:	d0a05e84 	addi	r2,gp,-32390
  84ca78:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSTmrWheelSize;
    ptemp = (void *)&OSTmrWheelTblSize;
#endif

    ptemp = (void *)&OSVersionNbr;
  84ca7c:	d0a05f04 	addi	r2,gp,-32388
  84ca80:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSDataSize;
  84ca84:	d0a06404 	addi	r2,gp,-32368
  84ca88:	e0bfff15 	stw	r2,-4(fp)

    ptemp = ptemp;                             /* Prevent compiler warning for 'ptemp' not being used! */
}
  84ca8c:	0001883a 	nop
  84ca90:	e037883a 	mov	sp,fp
  84ca94:	df000017 	ldw	fp,0(sp)
  84ca98:	dec00104 	addi	sp,sp,4
  84ca9c:	f800283a 	ret

0084caa0 <OSFlagAccept>:
*********************************************************************************************************
*/

#if OS_FLAG_ACCEPT_EN > 0
OS_FLAGS  OSFlagAccept (OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT8U *perr)
{
  84caa0:	defff204 	addi	sp,sp,-56
  84caa4:	df000d15 	stw	fp,52(sp)
  84caa8:	df000d04 	addi	fp,sp,52
  84caac:	e13ffc15 	stw	r4,-16(fp)
  84cab0:	2807883a 	mov	r3,r5
  84cab4:	3005883a 	mov	r2,r6
  84cab8:	e1ffff15 	stw	r7,-4(fp)
  84cabc:	e0fffd0d 	sth	r3,-12(fp)
  84cac0:	e0bffe05 	stb	r2,-8(fp)
    OS_FLAGS      flags_rdy;
    INT8U         result;
    BOOLEAN       consume;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR     cpu_sr = 0;
  84cac4:	e03ff415 	stw	zero,-48(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                              /* Validate 'perr'                          */
  84cac8:	e0bfff17 	ldw	r2,-4(fp)
  84cacc:	1000021e 	bne	r2,zero,84cad8 <OSFlagAccept+0x38>
        return ((OS_FLAGS)0);
  84cad0:	0005883a 	mov	r2,zero
  84cad4:	0000b006 	br	84cd98 <OSFlagAccept+0x2f8>
    }
    if (pgrp == (OS_FLAG_GRP *)0) {                        /* Validate 'pgrp'                          */
  84cad8:	e0bffc17 	ldw	r2,-16(fp)
  84cadc:	1000051e 	bne	r2,zero,84caf4 <OSFlagAccept+0x54>
        *perr = OS_ERR_FLAG_INVALID_PGRP;
  84cae0:	e0bfff17 	ldw	r2,-4(fp)
  84cae4:	00c01b84 	movi	r3,110
  84cae8:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84caec:	0005883a 	mov	r2,zero
  84caf0:	0000a906 	br	84cd98 <OSFlagAccept+0x2f8>
    }
#endif
    if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {          /* Validate event block type                */
  84caf4:	e0bffc17 	ldw	r2,-16(fp)
  84caf8:	10800003 	ldbu	r2,0(r2)
  84cafc:	10803fcc 	andi	r2,r2,255
  84cb00:	10800160 	cmpeqi	r2,r2,5
  84cb04:	1000051e 	bne	r2,zero,84cb1c <OSFlagAccept+0x7c>
        *perr = OS_ERR_EVENT_TYPE;
  84cb08:	e0bfff17 	ldw	r2,-4(fp)
  84cb0c:	00c00044 	movi	r3,1
  84cb10:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84cb14:	0005883a 	mov	r2,zero
  84cb18:	00009f06 	br	84cd98 <OSFlagAccept+0x2f8>
    }
    result = (INT8U)(wait_type & OS_FLAG_CONSUME);
  84cb1c:	e0fffe03 	ldbu	r3,-8(fp)
  84cb20:	00bfe004 	movi	r2,-128
  84cb24:	1884703a 	and	r2,r3,r2
  84cb28:	e0bff505 	stb	r2,-44(fp)
    if (result != (INT8U)0) {                              /* See if we need to consume the flags      */
  84cb2c:	e0bff503 	ldbu	r2,-44(fp)
  84cb30:	10000626 	beq	r2,zero,84cb4c <OSFlagAccept+0xac>
        wait_type &= ~OS_FLAG_CONSUME;
  84cb34:	e0bffe03 	ldbu	r2,-8(fp)
  84cb38:	10801fcc 	andi	r2,r2,127
  84cb3c:	e0bffe05 	stb	r2,-8(fp)
        consume    = OS_TRUE;
  84cb40:	00800044 	movi	r2,1
  84cb44:	e0bff385 	stb	r2,-50(fp)
  84cb48:	00000106 	br	84cb50 <OSFlagAccept+0xb0>
    } else {
        consume    = OS_FALSE;
  84cb4c:	e03ff385 	stb	zero,-50(fp)
    }
/*$PAGE*/
    *perr = OS_ERR_NONE;                                   /* Assume NO error until proven otherwise.  */
  84cb50:	e0bfff17 	ldw	r2,-4(fp)
  84cb54:	10000005 	stb	zero,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84cb58:	0005303a 	rdctl	r2,status
  84cb5c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84cb60:	e0fffb17 	ldw	r3,-20(fp)
  84cb64:	00bfff84 	movi	r2,-2
  84cb68:	1884703a 	and	r2,r3,r2
  84cb6c:	1001703a 	wrctl	status,r2
  
  return context;
  84cb70:	e0bffb17 	ldw	r2,-20(fp)
    OS_ENTER_CRITICAL();
  84cb74:	e0bff415 	stw	r2,-48(fp)
    switch (wait_type) {
  84cb78:	e0bffe03 	ldbu	r2,-8(fp)
  84cb7c:	10c00060 	cmpeqi	r3,r2,1
  84cb80:	18005f1e 	bne	r3,zero,84cd00 <OSFlagAccept+0x260>
  84cb84:	10c00088 	cmpgei	r3,r2,2
  84cb88:	1800021e 	bne	r3,zero,84cb94 <OSFlagAccept+0xf4>
  84cb8c:	10003f26 	beq	r2,zero,84cc8c <OSFlagAccept+0x1ec>
  84cb90:	00007706 	br	84cd70 <OSFlagAccept+0x2d0>
  84cb94:	10c000a0 	cmpeqi	r3,r2,2
  84cb98:	1800031e 	bne	r3,zero,84cba8 <OSFlagAccept+0x108>
  84cb9c:	108000e0 	cmpeqi	r2,r2,3
  84cba0:	10001e1e 	bne	r2,zero,84cc1c <OSFlagAccept+0x17c>
  84cba4:	00007206 	br	84cd70 <OSFlagAccept+0x2d0>
        case OS_FLAG_WAIT_SET_ALL:                         /* See if all required flags are set        */
             flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & flags);     /* Extract only the bits we want   */
  84cba8:	e0bffc17 	ldw	r2,-16(fp)
  84cbac:	10c0020b 	ldhu	r3,8(r2)
  84cbb0:	e0bffd0b 	ldhu	r2,-12(fp)
  84cbb4:	1884703a 	and	r2,r3,r2
  84cbb8:	e0bff30d 	sth	r2,-52(fp)
             if (flags_rdy == flags) {                     /* Must match ALL the bits that we want     */
  84cbbc:	e0fff30b 	ldhu	r3,-52(fp)
  84cbc0:	e0bffd0b 	ldhu	r2,-12(fp)
  84cbc4:	18800d1e 	bne	r3,r2,84cbfc <OSFlagAccept+0x15c>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84cbc8:	e0bff383 	ldbu	r2,-50(fp)
  84cbcc:	10800058 	cmpnei	r2,r2,1
  84cbd0:	10000d1e 	bne	r2,zero,84cc08 <OSFlagAccept+0x168>
                     pgrp->OSFlagFlags &= ~flags_rdy;      /* Clear ONLY the flags that we wanted      */
  84cbd4:	e0bffc17 	ldw	r2,-16(fp)
  84cbd8:	1080020b 	ldhu	r2,8(r2)
  84cbdc:	1007883a 	mov	r3,r2
  84cbe0:	e0bff30b 	ldhu	r2,-52(fp)
  84cbe4:	0084303a 	nor	r2,zero,r2
  84cbe8:	1884703a 	and	r2,r3,r2
  84cbec:	1007883a 	mov	r3,r2
  84cbf0:	e0bffc17 	ldw	r2,-16(fp)
  84cbf4:	10c0020d 	sth	r3,8(r2)
  84cbf8:	00000306 	br	84cc08 <OSFlagAccept+0x168>
                 }
             } else {
                 *perr = OS_ERR_FLAG_NOT_RDY;
  84cbfc:	e0bfff17 	ldw	r2,-4(fp)
  84cc00:	00c01c04 	movi	r3,112
  84cc04:	10c00005 	stb	r3,0(r2)
  84cc08:	e0bff417 	ldw	r2,-48(fp)
  84cc0c:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84cc10:	e0bff617 	ldw	r2,-40(fp)
  84cc14:	1001703a 	wrctl	status,r2
             }
             OS_EXIT_CRITICAL();
             break;
  84cc18:	00005e06 	br	84cd94 <OSFlagAccept+0x2f4>

        case OS_FLAG_WAIT_SET_ANY:
             flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & flags);     /* Extract only the bits we want   */
  84cc1c:	e0bffc17 	ldw	r2,-16(fp)
  84cc20:	10c0020b 	ldhu	r3,8(r2)
  84cc24:	e0bffd0b 	ldhu	r2,-12(fp)
  84cc28:	1884703a 	and	r2,r3,r2
  84cc2c:	e0bff30d 	sth	r2,-52(fp)
             if (flags_rdy != (OS_FLAGS)0) {               /* See if any flag set                      */
  84cc30:	e0bff30b 	ldhu	r2,-52(fp)
  84cc34:	10000d26 	beq	r2,zero,84cc6c <OSFlagAccept+0x1cc>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84cc38:	e0bff383 	ldbu	r2,-50(fp)
  84cc3c:	10800058 	cmpnei	r2,r2,1
  84cc40:	10000d1e 	bne	r2,zero,84cc78 <OSFlagAccept+0x1d8>
                     pgrp->OSFlagFlags &= ~flags_rdy;      /* Clear ONLY the flags that we got         */
  84cc44:	e0bffc17 	ldw	r2,-16(fp)
  84cc48:	1080020b 	ldhu	r2,8(r2)
  84cc4c:	1007883a 	mov	r3,r2
  84cc50:	e0bff30b 	ldhu	r2,-52(fp)
  84cc54:	0084303a 	nor	r2,zero,r2
  84cc58:	1884703a 	and	r2,r3,r2
  84cc5c:	1007883a 	mov	r3,r2
  84cc60:	e0bffc17 	ldw	r2,-16(fp)
  84cc64:	10c0020d 	sth	r3,8(r2)
  84cc68:	00000306 	br	84cc78 <OSFlagAccept+0x1d8>
                 }
             } else {
                 *perr = OS_ERR_FLAG_NOT_RDY;
  84cc6c:	e0bfff17 	ldw	r2,-4(fp)
  84cc70:	00c01c04 	movi	r3,112
  84cc74:	10c00005 	stb	r3,0(r2)
  84cc78:	e0bff417 	ldw	r2,-48(fp)
  84cc7c:	e0bff715 	stw	r2,-36(fp)
  84cc80:	e0bff717 	ldw	r2,-36(fp)
  84cc84:	1001703a 	wrctl	status,r2
             }
             OS_EXIT_CRITICAL();
             break;
  84cc88:	00004206 	br	84cd94 <OSFlagAccept+0x2f4>

#if OS_FLAG_WAIT_CLR_EN > 0
        case OS_FLAG_WAIT_CLR_ALL:                         /* See if all required flags are cleared    */
             flags_rdy = (OS_FLAGS)(~pgrp->OSFlagFlags & flags);  /* Extract only the bits we want     */
  84cc8c:	e0bffc17 	ldw	r2,-16(fp)
  84cc90:	1080020b 	ldhu	r2,8(r2)
  84cc94:	0084303a 	nor	r2,zero,r2
  84cc98:	1007883a 	mov	r3,r2
  84cc9c:	e0bffd0b 	ldhu	r2,-12(fp)
  84cca0:	1884703a 	and	r2,r3,r2
  84cca4:	e0bff30d 	sth	r2,-52(fp)
             if (flags_rdy == flags) {                     /* Must match ALL the bits that we want     */
  84cca8:	e0fff30b 	ldhu	r3,-52(fp)
  84ccac:	e0bffd0b 	ldhu	r2,-12(fp)
  84ccb0:	18800b1e 	bne	r3,r2,84cce0 <OSFlagAccept+0x240>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84ccb4:	e0bff383 	ldbu	r2,-50(fp)
  84ccb8:	10800058 	cmpnei	r2,r2,1
  84ccbc:	10000b1e 	bne	r2,zero,84ccec <OSFlagAccept+0x24c>
                     pgrp->OSFlagFlags |= flags_rdy;       /* Set ONLY the flags that we wanted        */
  84ccc0:	e0bffc17 	ldw	r2,-16(fp)
  84ccc4:	10c0020b 	ldhu	r3,8(r2)
  84ccc8:	e0bff30b 	ldhu	r2,-52(fp)
  84cccc:	1884b03a 	or	r2,r3,r2
  84ccd0:	1007883a 	mov	r3,r2
  84ccd4:	e0bffc17 	ldw	r2,-16(fp)
  84ccd8:	10c0020d 	sth	r3,8(r2)
  84ccdc:	00000306 	br	84ccec <OSFlagAccept+0x24c>
                 }
             } else {
                 *perr = OS_ERR_FLAG_NOT_RDY;
  84cce0:	e0bfff17 	ldw	r2,-4(fp)
  84cce4:	00c01c04 	movi	r3,112
  84cce8:	10c00005 	stb	r3,0(r2)
  84ccec:	e0bff417 	ldw	r2,-48(fp)
  84ccf0:	e0bff815 	stw	r2,-32(fp)
  84ccf4:	e0bff817 	ldw	r2,-32(fp)
  84ccf8:	1001703a 	wrctl	status,r2
             }
             OS_EXIT_CRITICAL();
             break;
  84ccfc:	00002506 	br	84cd94 <OSFlagAccept+0x2f4>

        case OS_FLAG_WAIT_CLR_ANY:
             flags_rdy = (OS_FLAGS)(~pgrp->OSFlagFlags & flags); /* Extract only the bits we want      */
  84cd00:	e0bffc17 	ldw	r2,-16(fp)
  84cd04:	1080020b 	ldhu	r2,8(r2)
  84cd08:	0084303a 	nor	r2,zero,r2
  84cd0c:	1007883a 	mov	r3,r2
  84cd10:	e0bffd0b 	ldhu	r2,-12(fp)
  84cd14:	1884703a 	and	r2,r3,r2
  84cd18:	e0bff30d 	sth	r2,-52(fp)
             if (flags_rdy != (OS_FLAGS)0) {               /* See if any flag cleared                  */
  84cd1c:	e0bff30b 	ldhu	r2,-52(fp)
  84cd20:	10000b26 	beq	r2,zero,84cd50 <OSFlagAccept+0x2b0>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84cd24:	e0bff383 	ldbu	r2,-50(fp)
  84cd28:	10800058 	cmpnei	r2,r2,1
  84cd2c:	10000b1e 	bne	r2,zero,84cd5c <OSFlagAccept+0x2bc>
                     pgrp->OSFlagFlags |= flags_rdy;       /* Set ONLY the flags that we got           */
  84cd30:	e0bffc17 	ldw	r2,-16(fp)
  84cd34:	10c0020b 	ldhu	r3,8(r2)
  84cd38:	e0bff30b 	ldhu	r2,-52(fp)
  84cd3c:	1884b03a 	or	r2,r3,r2
  84cd40:	1007883a 	mov	r3,r2
  84cd44:	e0bffc17 	ldw	r2,-16(fp)
  84cd48:	10c0020d 	sth	r3,8(r2)
  84cd4c:	00000306 	br	84cd5c <OSFlagAccept+0x2bc>
                 }
             } else {
                 *perr = OS_ERR_FLAG_NOT_RDY;
  84cd50:	e0bfff17 	ldw	r2,-4(fp)
  84cd54:	00c01c04 	movi	r3,112
  84cd58:	10c00005 	stb	r3,0(r2)
  84cd5c:	e0bff417 	ldw	r2,-48(fp)
  84cd60:	e0bff915 	stw	r2,-28(fp)
  84cd64:	e0bff917 	ldw	r2,-28(fp)
  84cd68:	1001703a 	wrctl	status,r2
             }
             OS_EXIT_CRITICAL();
             break;
  84cd6c:	00000906 	br	84cd94 <OSFlagAccept+0x2f4>
  84cd70:	e0bff417 	ldw	r2,-48(fp)
  84cd74:	e0bffa15 	stw	r2,-24(fp)
  84cd78:	e0bffa17 	ldw	r2,-24(fp)
  84cd7c:	1001703a 	wrctl	status,r2
#endif

        default:
             OS_EXIT_CRITICAL();
             flags_rdy = (OS_FLAGS)0;
  84cd80:	e03ff30d 	sth	zero,-52(fp)
             *perr     = OS_ERR_FLAG_WAIT_TYPE;
  84cd84:	e0bfff17 	ldw	r2,-4(fp)
  84cd88:	00c01bc4 	movi	r3,111
  84cd8c:	10c00005 	stb	r3,0(r2)
             break;
  84cd90:	0001883a 	nop
    }
    return (flags_rdy);
  84cd94:	e0bff30b 	ldhu	r2,-52(fp)
}
  84cd98:	e037883a 	mov	sp,fp
  84cd9c:	df000017 	ldw	fp,0(sp)
  84cda0:	dec00104 	addi	sp,sp,4
  84cda4:	f800283a 	ret

0084cda8 <OSFlagCreate>:
* Called from: Task ONLY
*********************************************************************************************************
*/

OS_FLAG_GRP  *OSFlagCreate (OS_FLAGS flags, INT8U *perr)
{
  84cda8:	defff804 	addi	sp,sp,-32
  84cdac:	df000715 	stw	fp,28(sp)
  84cdb0:	df000704 	addi	fp,sp,28
  84cdb4:	2005883a 	mov	r2,r4
  84cdb8:	e17fff15 	stw	r5,-4(fp)
  84cdbc:	e0bffe0d 	sth	r2,-8(fp)
    OS_FLAG_GRP *pgrp;
#if OS_CRITICAL_METHOD == 3                         /* Allocate storage for CPU status register        */
    OS_CPU_SR    cpu_sr = 0;
  84cdc0:	e03ff915 	stw	zero,-28(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                       /* Validate 'perr'                                 */
  84cdc4:	e0bfff17 	ldw	r2,-4(fp)
  84cdc8:	1000021e 	bne	r2,zero,84cdd4 <OSFlagCreate+0x2c>
        return ((OS_FLAG_GRP *)0);
  84cdcc:	0005883a 	mov	r2,zero
  84cdd0:	00003306 	br	84cea0 <OSFlagCreate+0xf8>
    }
#endif
    if (OSIntNesting > 0) {                         /* See if called from ISR ...                      */
  84cdd4:	d0a0a303 	ldbu	r2,-32116(gp)
  84cdd8:	10803fcc 	andi	r2,r2,255
  84cddc:	10000526 	beq	r2,zero,84cdf4 <OSFlagCreate+0x4c>
        *perr = OS_ERR_CREATE_ISR;                  /* ... can't CREATE from an ISR                    */
  84cde0:	e0bfff17 	ldw	r2,-4(fp)
  84cde4:	00c00404 	movi	r3,16
  84cde8:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAG_GRP *)0);
  84cdec:	0005883a 	mov	r2,zero
  84cdf0:	00002b06 	br	84cea0 <OSFlagCreate+0xf8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84cdf4:	0005303a 	rdctl	r2,status
  84cdf8:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84cdfc:	e0fffd17 	ldw	r3,-12(fp)
  84ce00:	00bfff84 	movi	r2,-2
  84ce04:	1884703a 	and	r2,r3,r2
  84ce08:	1001703a 	wrctl	status,r2
  
  return context;
  84ce0c:	e0bffd17 	ldw	r2,-12(fp)
    }
    OS_ENTER_CRITICAL();
  84ce10:	e0bff915 	stw	r2,-28(fp)
    pgrp = OSFlagFreeList;                          /* Get next free event flag                        */
  84ce14:	d0a0a617 	ldw	r2,-32104(gp)
  84ce18:	e0bffb15 	stw	r2,-20(fp)
    if (pgrp != (OS_FLAG_GRP *)0) {                 /* See if we have event flag groups available      */
  84ce1c:	e0bffb17 	ldw	r2,-20(fp)
  84ce20:	10001726 	beq	r2,zero,84ce80 <OSFlagCreate+0xd8>
                                                    /* Adjust free list                                */
        OSFlagFreeList       = (OS_FLAG_GRP *)OSFlagFreeList->OSFlagWaitList;
  84ce24:	d0a0a617 	ldw	r2,-32104(gp)
  84ce28:	10800117 	ldw	r2,4(r2)
  84ce2c:	d0a0a615 	stw	r2,-32104(gp)
        pgrp->OSFlagType     = OS_EVENT_TYPE_FLAG;  /* Set to event flag group type                    */
  84ce30:	e0bffb17 	ldw	r2,-20(fp)
  84ce34:	00c00144 	movi	r3,5
  84ce38:	10c00005 	stb	r3,0(r2)
        pgrp->OSFlagFlags    = flags;               /* Set to desired initial value                    */
  84ce3c:	e0bffb17 	ldw	r2,-20(fp)
  84ce40:	e0fffe0b 	ldhu	r3,-8(fp)
  84ce44:	10c0020d 	sth	r3,8(r2)
        pgrp->OSFlagWaitList = (void *)0;           /* Clear list of tasks waiting on flags            */
  84ce48:	e0bffb17 	ldw	r2,-20(fp)
  84ce4c:	10000115 	stw	zero,4(r2)
#if OS_FLAG_NAME_SIZE > 1
        pgrp->OSFlagName[0]  = '?';
  84ce50:	e0bffb17 	ldw	r2,-20(fp)
  84ce54:	00c00fc4 	movi	r3,63
  84ce58:	10c00285 	stb	r3,10(r2)
        pgrp->OSFlagName[1]  = OS_ASCII_NUL;
  84ce5c:	e0bffb17 	ldw	r2,-20(fp)
  84ce60:	100002c5 	stb	zero,11(r2)
  84ce64:	e0bff917 	ldw	r2,-28(fp)
  84ce68:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84ce6c:	e0bffa17 	ldw	r2,-24(fp)
  84ce70:	1001703a 	wrctl	status,r2
#endif
        OS_EXIT_CRITICAL();
        *perr                = OS_ERR_NONE;
  84ce74:	e0bfff17 	ldw	r2,-4(fp)
  84ce78:	10000005 	stb	zero,0(r2)
  84ce7c:	00000706 	br	84ce9c <OSFlagCreate+0xf4>
  84ce80:	e0bff917 	ldw	r2,-28(fp)
  84ce84:	e0bffc15 	stw	r2,-16(fp)
  84ce88:	e0bffc17 	ldw	r2,-16(fp)
  84ce8c:	1001703a 	wrctl	status,r2
    } else {
        OS_EXIT_CRITICAL();
        *perr                = OS_ERR_FLAG_GRP_DEPLETED;
  84ce90:	e0bfff17 	ldw	r2,-4(fp)
  84ce94:	00c01c84 	movi	r3,114
  84ce98:	10c00005 	stb	r3,0(r2)
    }
    return (pgrp);                                  /* Return pointer to event flag group              */
  84ce9c:	e0bffb17 	ldw	r2,-20(fp)
}
  84cea0:	e037883a 	mov	sp,fp
  84cea4:	df000017 	ldw	fp,0(sp)
  84cea8:	dec00104 	addi	sp,sp,4
  84ceac:	f800283a 	ret

0084ceb0 <OSFlagDel>:
*********************************************************************************************************
*/

#if OS_FLAG_DEL_EN > 0
OS_FLAG_GRP  *OSFlagDel (OS_FLAG_GRP *pgrp, INT8U opt, INT8U *perr)
{
  84ceb0:	defff204 	addi	sp,sp,-56
  84ceb4:	dfc00d15 	stw	ra,52(sp)
  84ceb8:	df000c15 	stw	fp,48(sp)
  84cebc:	df000c04 	addi	fp,sp,48
  84cec0:	e13ffd15 	stw	r4,-12(fp)
  84cec4:	2805883a 	mov	r2,r5
  84cec8:	e1bfff15 	stw	r6,-4(fp)
  84cecc:	e0bffe05 	stb	r2,-8(fp)
    BOOLEAN       tasks_waiting;
    OS_FLAG_NODE *pnode;
    OS_FLAG_GRP  *pgrp_return;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR     cpu_sr = 0;
  84ced0:	e03ff715 	stw	zero,-36(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                              /* Validate 'perr'                          */
  84ced4:	e0bfff17 	ldw	r2,-4(fp)
  84ced8:	1000021e 	bne	r2,zero,84cee4 <OSFlagDel+0x34>
        return (pgrp);
  84cedc:	e0bffd17 	ldw	r2,-12(fp)
  84cee0:	00008006 	br	84d0e4 <OSFlagDel+0x234>
    }
    if (pgrp == (OS_FLAG_GRP *)0) {                        /* Validate 'pgrp'                          */
  84cee4:	e0bffd17 	ldw	r2,-12(fp)
  84cee8:	1000051e 	bne	r2,zero,84cf00 <OSFlagDel+0x50>
        *perr = OS_ERR_FLAG_INVALID_PGRP;
  84ceec:	e0bfff17 	ldw	r2,-4(fp)
  84cef0:	00c01b84 	movi	r3,110
  84cef4:	10c00005 	stb	r3,0(r2)
        return (pgrp);
  84cef8:	e0bffd17 	ldw	r2,-12(fp)
  84cefc:	00007906 	br	84d0e4 <OSFlagDel+0x234>
    }
#endif
    if (OSIntNesting > 0) {                                /* See if called from ISR ...               */
  84cf00:	d0a0a303 	ldbu	r2,-32116(gp)
  84cf04:	10803fcc 	andi	r2,r2,255
  84cf08:	10000526 	beq	r2,zero,84cf20 <OSFlagDel+0x70>
        *perr = OS_ERR_DEL_ISR;                            /* ... can't DELETE from an ISR             */
  84cf0c:	e0bfff17 	ldw	r2,-4(fp)
  84cf10:	00c003c4 	movi	r3,15
  84cf14:	10c00005 	stb	r3,0(r2)
        return (pgrp);
  84cf18:	e0bffd17 	ldw	r2,-12(fp)
  84cf1c:	00007106 	br	84d0e4 <OSFlagDel+0x234>
    }
    if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {          /* Validate event group type                */
  84cf20:	e0bffd17 	ldw	r2,-12(fp)
  84cf24:	10800003 	ldbu	r2,0(r2)
  84cf28:	10803fcc 	andi	r2,r2,255
  84cf2c:	10800160 	cmpeqi	r2,r2,5
  84cf30:	1000051e 	bne	r2,zero,84cf48 <OSFlagDel+0x98>
        *perr = OS_ERR_EVENT_TYPE;
  84cf34:	e0bfff17 	ldw	r2,-4(fp)
  84cf38:	00c00044 	movi	r3,1
  84cf3c:	10c00005 	stb	r3,0(r2)
        return (pgrp);
  84cf40:	e0bffd17 	ldw	r2,-12(fp)
  84cf44:	00006706 	br	84d0e4 <OSFlagDel+0x234>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84cf48:	0005303a 	rdctl	r2,status
  84cf4c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84cf50:	e0fffc17 	ldw	r3,-16(fp)
  84cf54:	00bfff84 	movi	r2,-2
  84cf58:	1884703a 	and	r2,r3,r2
  84cf5c:	1001703a 	wrctl	status,r2
  
  return context;
  84cf60:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84cf64:	e0bff715 	stw	r2,-36(fp)
    if (pgrp->OSFlagWaitList != (void *)0) {               /* See if any tasks waiting on event flags  */
  84cf68:	e0bffd17 	ldw	r2,-12(fp)
  84cf6c:	10800117 	ldw	r2,4(r2)
  84cf70:	10000326 	beq	r2,zero,84cf80 <OSFlagDel+0xd0>
        tasks_waiting = OS_TRUE;                           /* Yes                                      */
  84cf74:	00800044 	movi	r2,1
  84cf78:	e0bff405 	stb	r2,-48(fp)
  84cf7c:	00000106 	br	84cf84 <OSFlagDel+0xd4>
    } else {
        tasks_waiting = OS_FALSE;                          /* No                                       */
  84cf80:	e03ff405 	stb	zero,-48(fp)
    }
    switch (opt) {
  84cf84:	e0bffe03 	ldbu	r2,-8(fp)
  84cf88:	10000326 	beq	r2,zero,84cf98 <OSFlagDel+0xe8>
  84cf8c:	10800060 	cmpeqi	r2,r2,1
  84cf90:	1000231e 	bne	r2,zero,84d020 <OSFlagDel+0x170>
  84cf94:	00004806 	br	84d0b8 <OSFlagDel+0x208>
        case OS_DEL_NO_PEND:                               /* Delete group if no task waiting          */
             if (tasks_waiting == OS_FALSE) {
  84cf98:	e0bff403 	ldbu	r2,-48(fp)
  84cf9c:	1000161e 	bne	r2,zero,84cff8 <OSFlagDel+0x148>
#if OS_FLAG_NAME_SIZE > 1
                 pgrp->OSFlagName[0]  = '?';               /* Unknown name                             */
  84cfa0:	e0bffd17 	ldw	r2,-12(fp)
  84cfa4:	00c00fc4 	movi	r3,63
  84cfa8:	10c00285 	stb	r3,10(r2)
                 pgrp->OSFlagName[1]  = OS_ASCII_NUL;
  84cfac:	e0bffd17 	ldw	r2,-12(fp)
  84cfb0:	100002c5 	stb	zero,11(r2)
#endif
                 pgrp->OSFlagType     = OS_EVENT_TYPE_UNUSED;
  84cfb4:	e0bffd17 	ldw	r2,-12(fp)
  84cfb8:	10000005 	stb	zero,0(r2)
                 pgrp->OSFlagWaitList = (void *)OSFlagFreeList; /* Return group to free list           */
  84cfbc:	d0e0a617 	ldw	r3,-32104(gp)
  84cfc0:	e0bffd17 	ldw	r2,-12(fp)
  84cfc4:	10c00115 	stw	r3,4(r2)
                 pgrp->OSFlagFlags    = (OS_FLAGS)0;
  84cfc8:	e0bffd17 	ldw	r2,-12(fp)
  84cfcc:	1000020d 	sth	zero,8(r2)
                 OSFlagFreeList       = pgrp;
  84cfd0:	e0bffd17 	ldw	r2,-12(fp)
  84cfd4:	d0a0a615 	stw	r2,-32104(gp)
  84cfd8:	e0bff717 	ldw	r2,-36(fp)
  84cfdc:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84cfe0:	e0bff817 	ldw	r2,-32(fp)
  84cfe4:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
                 *perr                = OS_ERR_NONE;
  84cfe8:	e0bfff17 	ldw	r2,-4(fp)
  84cfec:	10000005 	stb	zero,0(r2)
                 pgrp_return          = (OS_FLAG_GRP *)0;  /* Event Flag Group has been deleted        */
  84cff0:	e03ff615 	stw	zero,-40(fp)
             } else {
                 OS_EXIT_CRITICAL();
                 *perr                = OS_ERR_TASK_WAITING;
                 pgrp_return          = pgrp;
             }
             break;
  84cff4:	00003a06 	br	84d0e0 <OSFlagDel+0x230>
  84cff8:	e0bff717 	ldw	r2,-36(fp)
  84cffc:	e0bff915 	stw	r2,-28(fp)
  84d000:	e0bff917 	ldw	r2,-28(fp)
  84d004:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
                 *perr                = OS_ERR_NONE;
                 pgrp_return          = (OS_FLAG_GRP *)0;  /* Event Flag Group has been deleted        */
             } else {
                 OS_EXIT_CRITICAL();
                 *perr                = OS_ERR_TASK_WAITING;
  84d008:	e0bfff17 	ldw	r2,-4(fp)
  84d00c:	00c01244 	movi	r3,73
  84d010:	10c00005 	stb	r3,0(r2)
                 pgrp_return          = pgrp;
  84d014:	e0bffd17 	ldw	r2,-12(fp)
  84d018:	e0bff615 	stw	r2,-40(fp)
             }
             break;
  84d01c:	00003006 	br	84d0e0 <OSFlagDel+0x230>

        case OS_DEL_ALWAYS:                                /* Always delete the event flag group       */
             pnode = (OS_FLAG_NODE *)pgrp->OSFlagWaitList;
  84d020:	e0bffd17 	ldw	r2,-12(fp)
  84d024:	10800117 	ldw	r2,4(r2)
  84d028:	e0bff515 	stw	r2,-44(fp)
             while (pnode != (OS_FLAG_NODE *)0) {          /* Ready ALL tasks waiting for flags        */
  84d02c:	00000606 	br	84d048 <OSFlagDel+0x198>
                 (void)OS_FlagTaskRdy(pnode, (OS_FLAGS)0);
  84d030:	000b883a 	mov	r5,zero
  84d034:	e13ff517 	ldw	r4,-44(fp)
  84d038:	084e01c0 	call	84e01c <OS_FlagTaskRdy>
                 pnode = (OS_FLAG_NODE *)pnode->OSFlagNodeNext;
  84d03c:	e0bff517 	ldw	r2,-44(fp)
  84d040:	10800017 	ldw	r2,0(r2)
  84d044:	e0bff515 	stw	r2,-44(fp)
             }
             break;

        case OS_DEL_ALWAYS:                                /* Always delete the event flag group       */
             pnode = (OS_FLAG_NODE *)pgrp->OSFlagWaitList;
             while (pnode != (OS_FLAG_NODE *)0) {          /* Ready ALL tasks waiting for flags        */
  84d048:	e0bff517 	ldw	r2,-44(fp)
  84d04c:	103ff81e 	bne	r2,zero,84d030 <__alt_mem_epcs_flash_controller_0+0xff844030>
                 (void)OS_FlagTaskRdy(pnode, (OS_FLAGS)0);
                 pnode = (OS_FLAG_NODE *)pnode->OSFlagNodeNext;
             }
#if OS_FLAG_NAME_SIZE > 1
             pgrp->OSFlagName[0]  = '?';                   /* Unknown name                             */
  84d050:	e0bffd17 	ldw	r2,-12(fp)
  84d054:	00c00fc4 	movi	r3,63
  84d058:	10c00285 	stb	r3,10(r2)
             pgrp->OSFlagName[1]  = OS_ASCII_NUL;
  84d05c:	e0bffd17 	ldw	r2,-12(fp)
  84d060:	100002c5 	stb	zero,11(r2)
#endif
             pgrp->OSFlagType     = OS_EVENT_TYPE_UNUSED;
  84d064:	e0bffd17 	ldw	r2,-12(fp)
  84d068:	10000005 	stb	zero,0(r2)
             pgrp->OSFlagWaitList = (void *)OSFlagFreeList;/* Return group to free list                */
  84d06c:	d0e0a617 	ldw	r3,-32104(gp)
  84d070:	e0bffd17 	ldw	r2,-12(fp)
  84d074:	10c00115 	stw	r3,4(r2)
             pgrp->OSFlagFlags    = (OS_FLAGS)0;
  84d078:	e0bffd17 	ldw	r2,-12(fp)
  84d07c:	1000020d 	sth	zero,8(r2)
             OSFlagFreeList       = pgrp;
  84d080:	e0bffd17 	ldw	r2,-12(fp)
  84d084:	d0a0a615 	stw	r2,-32104(gp)
  84d088:	e0bff717 	ldw	r2,-36(fp)
  84d08c:	e0bffa15 	stw	r2,-24(fp)
  84d090:	e0bffa17 	ldw	r2,-24(fp)
  84d094:	1001703a 	wrctl	status,r2
             OS_EXIT_CRITICAL();
             if (tasks_waiting == OS_TRUE) {               /* Reschedule only if task(s) were waiting  */
  84d098:	e0bff403 	ldbu	r2,-48(fp)
  84d09c:	10800058 	cmpnei	r2,r2,1
  84d0a0:	1000011e 	bne	r2,zero,84d0a8 <OSFlagDel+0x1f8>
                 OS_Sched();                               /* Find highest priority task ready to run  */
  84d0a4:	084c23c0 	call	84c23c <OS_Sched>
             }
             *perr = OS_ERR_NONE;
  84d0a8:	e0bfff17 	ldw	r2,-4(fp)
  84d0ac:	10000005 	stb	zero,0(r2)
             pgrp_return          = (OS_FLAG_GRP *)0;      /* Event Flag Group has been deleted        */
  84d0b0:	e03ff615 	stw	zero,-40(fp)
             break;
  84d0b4:	00000a06 	br	84d0e0 <OSFlagDel+0x230>
  84d0b8:	e0bff717 	ldw	r2,-36(fp)
  84d0bc:	e0bffb15 	stw	r2,-20(fp)
  84d0c0:	e0bffb17 	ldw	r2,-20(fp)
  84d0c4:	1001703a 	wrctl	status,r2

        default:
             OS_EXIT_CRITICAL();
             *perr                = OS_ERR_INVALID_OPT;
  84d0c8:	e0bfff17 	ldw	r2,-4(fp)
  84d0cc:	00c001c4 	movi	r3,7
  84d0d0:	10c00005 	stb	r3,0(r2)
             pgrp_return          = pgrp;
  84d0d4:	e0bffd17 	ldw	r2,-12(fp)
  84d0d8:	e0bff615 	stw	r2,-40(fp)
             break;
  84d0dc:	0001883a 	nop
    }
    return (pgrp_return);
  84d0e0:	e0bff617 	ldw	r2,-40(fp)
}
  84d0e4:	e037883a 	mov	sp,fp
  84d0e8:	dfc00117 	ldw	ra,4(sp)
  84d0ec:	df000017 	ldw	fp,0(sp)
  84d0f0:	dec00204 	addi	sp,sp,8
  84d0f4:	f800283a 	ret

0084d0f8 <OSFlagNameGet>:
*********************************************************************************************************
*/

#if OS_FLAG_NAME_SIZE > 1
INT8U  OSFlagNameGet (OS_FLAG_GRP *pgrp, INT8U *pname, INT8U *perr)
{
  84d0f8:	defff604 	addi	sp,sp,-40
  84d0fc:	dfc00915 	stw	ra,36(sp)
  84d100:	df000815 	stw	fp,32(sp)
  84d104:	df000804 	addi	fp,sp,32
  84d108:	e13ffd15 	stw	r4,-12(fp)
  84d10c:	e17ffe15 	stw	r5,-8(fp)
  84d110:	e1bfff15 	stw	r6,-4(fp)
    INT8U      len;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84d114:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84d118:	e0bfff17 	ldw	r2,-4(fp)
  84d11c:	1000021e 	bne	r2,zero,84d128 <OSFlagNameGet+0x30>
        return (0);
  84d120:	0005883a 	mov	r2,zero
  84d124:	00003906 	br	84d20c <OSFlagNameGet+0x114>
    }
    if (pgrp == (OS_FLAG_GRP *)0) {              /* Is 'pgrp' a NULL pointer?                          */
  84d128:	e0bffd17 	ldw	r2,-12(fp)
  84d12c:	1000051e 	bne	r2,zero,84d144 <OSFlagNameGet+0x4c>
        *perr = OS_ERR_FLAG_INVALID_PGRP;
  84d130:	e0bfff17 	ldw	r2,-4(fp)
  84d134:	00c01b84 	movi	r3,110
  84d138:	10c00005 	stb	r3,0(r2)
        return (0);
  84d13c:	0005883a 	mov	r2,zero
  84d140:	00003206 	br	84d20c <OSFlagNameGet+0x114>
    }
    if (pname == (INT8U *)0) {                   /* Is 'pname' a NULL pointer?                         */
  84d144:	e0bffe17 	ldw	r2,-8(fp)
  84d148:	1000051e 	bne	r2,zero,84d160 <OSFlagNameGet+0x68>
        *perr = OS_ERR_PNAME_NULL;
  84d14c:	e0bfff17 	ldw	r2,-4(fp)
  84d150:	00c00304 	movi	r3,12
  84d154:	10c00005 	stb	r3,0(r2)
        return (0);
  84d158:	0005883a 	mov	r2,zero
  84d15c:	00002b06 	br	84d20c <OSFlagNameGet+0x114>
    }
#endif
    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  84d160:	d0a0a303 	ldbu	r2,-32116(gp)
  84d164:	10803fcc 	andi	r2,r2,255
  84d168:	10000526 	beq	r2,zero,84d180 <OSFlagNameGet+0x88>
        *perr = OS_ERR_NAME_GET_ISR;
  84d16c:	e0bfff17 	ldw	r2,-4(fp)
  84d170:	00c00444 	movi	r3,17
  84d174:	10c00005 	stb	r3,0(r2)
        return (0);
  84d178:	0005883a 	mov	r2,zero
  84d17c:	00002306 	br	84d20c <OSFlagNameGet+0x114>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84d180:	0005303a 	rdctl	r2,status
  84d184:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84d188:	e0fffc17 	ldw	r3,-16(fp)
  84d18c:	00bfff84 	movi	r2,-2
  84d190:	1884703a 	and	r2,r3,r2
  84d194:	1001703a 	wrctl	status,r2
  
  return context;
  84d198:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84d19c:	e0bff815 	stw	r2,-32(fp)
    if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {
  84d1a0:	e0bffd17 	ldw	r2,-12(fp)
  84d1a4:	10800003 	ldbu	r2,0(r2)
  84d1a8:	10803fcc 	andi	r2,r2,255
  84d1ac:	10800160 	cmpeqi	r2,r2,5
  84d1b0:	1000091e 	bne	r2,zero,84d1d8 <OSFlagNameGet+0xe0>
  84d1b4:	e0bff817 	ldw	r2,-32(fp)
  84d1b8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84d1bc:	e0bff917 	ldw	r2,-28(fp)
  84d1c0:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_EVENT_TYPE;
  84d1c4:	e0bfff17 	ldw	r2,-4(fp)
  84d1c8:	00c00044 	movi	r3,1
  84d1cc:	10c00005 	stb	r3,0(r2)
        return (0);
  84d1d0:	0005883a 	mov	r2,zero
  84d1d4:	00000d06 	br	84d20c <OSFlagNameGet+0x114>
    }
    len   = OS_StrCopy(pname, pgrp->OSFlagName); /* Copy name from OS_FLAG_GRP                         */
  84d1d8:	e0bffd17 	ldw	r2,-12(fp)
  84d1dc:	10800284 	addi	r2,r2,10
  84d1e0:	100b883a 	mov	r5,r2
  84d1e4:	e13ffe17 	ldw	r4,-8(fp)
  84d1e8:	084c3800 	call	84c380 <OS_StrCopy>
  84d1ec:	e0bffb05 	stb	r2,-20(fp)
  84d1f0:	e0bff817 	ldw	r2,-32(fp)
  84d1f4:	e0bffa15 	stw	r2,-24(fp)
  84d1f8:	e0bffa17 	ldw	r2,-24(fp)
  84d1fc:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84d200:	e0bfff17 	ldw	r2,-4(fp)
  84d204:	10000005 	stb	zero,0(r2)
    return (len);
  84d208:	e0bffb03 	ldbu	r2,-20(fp)
}
  84d20c:	e037883a 	mov	sp,fp
  84d210:	dfc00117 	ldw	ra,4(sp)
  84d214:	df000017 	ldw	fp,0(sp)
  84d218:	dec00204 	addi	sp,sp,8
  84d21c:	f800283a 	ret

0084d220 <OSFlagNameSet>:
*********************************************************************************************************
*/

#if OS_FLAG_NAME_SIZE > 1
void  OSFlagNameSet (OS_FLAG_GRP *pgrp, INT8U *pname, INT8U *perr)
{
  84d220:	defff504 	addi	sp,sp,-44
  84d224:	dfc00a15 	stw	ra,40(sp)
  84d228:	df000915 	stw	fp,36(sp)
  84d22c:	df000904 	addi	fp,sp,36
  84d230:	e13ffd15 	stw	r4,-12(fp)
  84d234:	e17ffe15 	stw	r5,-8(fp)
  84d238:	e1bfff15 	stw	r6,-4(fp)
    INT8U      len;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84d23c:	e03ff715 	stw	zero,-36(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84d240:	e0bfff17 	ldw	r2,-4(fp)
  84d244:	10004326 	beq	r2,zero,84d354 <OSFlagNameSet+0x134>
        return;
    }
    if (pgrp == (OS_FLAG_GRP *)0) {              /* Is 'pgrp' a NULL pointer?                          */
  84d248:	e0bffd17 	ldw	r2,-12(fp)
  84d24c:	1000041e 	bne	r2,zero,84d260 <OSFlagNameSet+0x40>
        *perr = OS_ERR_FLAG_INVALID_PGRP;
  84d250:	e0bfff17 	ldw	r2,-4(fp)
  84d254:	00c01b84 	movi	r3,110
  84d258:	10c00005 	stb	r3,0(r2)
        return;
  84d25c:	00003e06 	br	84d358 <OSFlagNameSet+0x138>
    }
    if (pname == (INT8U *)0) {                   /* Is 'pname' a NULL pointer?                         */
  84d260:	e0bffe17 	ldw	r2,-8(fp)
  84d264:	1000041e 	bne	r2,zero,84d278 <OSFlagNameSet+0x58>
        *perr = OS_ERR_PNAME_NULL;
  84d268:	e0bfff17 	ldw	r2,-4(fp)
  84d26c:	00c00304 	movi	r3,12
  84d270:	10c00005 	stb	r3,0(r2)
        return;
  84d274:	00003806 	br	84d358 <OSFlagNameSet+0x138>
    }
#endif
    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  84d278:	d0a0a303 	ldbu	r2,-32116(gp)
  84d27c:	10803fcc 	andi	r2,r2,255
  84d280:	10000426 	beq	r2,zero,84d294 <OSFlagNameSet+0x74>
        *perr = OS_ERR_NAME_SET_ISR;
  84d284:	e0bfff17 	ldw	r2,-4(fp)
  84d288:	00c00484 	movi	r3,18
  84d28c:	10c00005 	stb	r3,0(r2)
        return;
  84d290:	00003106 	br	84d358 <OSFlagNameSet+0x138>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84d294:	0005303a 	rdctl	r2,status
  84d298:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84d29c:	e0fffc17 	ldw	r3,-16(fp)
  84d2a0:	00bfff84 	movi	r2,-2
  84d2a4:	1884703a 	and	r2,r3,r2
  84d2a8:	1001703a 	wrctl	status,r2
  
  return context;
  84d2ac:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84d2b0:	e0bff715 	stw	r2,-36(fp)
    if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {
  84d2b4:	e0bffd17 	ldw	r2,-12(fp)
  84d2b8:	10800003 	ldbu	r2,0(r2)
  84d2bc:	10803fcc 	andi	r2,r2,255
  84d2c0:	10800160 	cmpeqi	r2,r2,5
  84d2c4:	1000081e 	bne	r2,zero,84d2e8 <OSFlagNameSet+0xc8>
  84d2c8:	e0bff717 	ldw	r2,-36(fp)
  84d2cc:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84d2d0:	e0bff817 	ldw	r2,-32(fp)
  84d2d4:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_EVENT_TYPE;
  84d2d8:	e0bfff17 	ldw	r2,-4(fp)
  84d2dc:	00c00044 	movi	r3,1
  84d2e0:	10c00005 	stb	r3,0(r2)
        return;
  84d2e4:	00001c06 	br	84d358 <OSFlagNameSet+0x138>
    }
    len = OS_StrLen(pname);                      /* Can we fit the string in the storage area?         */
  84d2e8:	e13ffe17 	ldw	r4,-8(fp)
  84d2ec:	084c3f40 	call	84c3f4 <OS_StrLen>
  84d2f0:	e0bffa05 	stb	r2,-24(fp)
    if (len > (OS_FLAG_NAME_SIZE - 1)) {         /* No                                                 */
  84d2f4:	e0bffa03 	ldbu	r2,-24(fp)
  84d2f8:	10800830 	cmpltui	r2,r2,32
  84d2fc:	1000081e 	bne	r2,zero,84d320 <OSFlagNameSet+0x100>
  84d300:	e0bff717 	ldw	r2,-36(fp)
  84d304:	e0bff915 	stw	r2,-28(fp)
  84d308:	e0bff917 	ldw	r2,-28(fp)
  84d30c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_FLAG_NAME_TOO_LONG;
  84d310:	e0bfff17 	ldw	r2,-4(fp)
  84d314:	00c01cc4 	movi	r3,115
  84d318:	10c00005 	stb	r3,0(r2)
        return;
  84d31c:	00000e06 	br	84d358 <OSFlagNameSet+0x138>
    }
    (void)OS_StrCopy(pgrp->OSFlagName, pname);   /* Yes, copy name from OS_FLAG_GRP                    */
  84d320:	e0bffd17 	ldw	r2,-12(fp)
  84d324:	10800284 	addi	r2,r2,10
  84d328:	e17ffe17 	ldw	r5,-8(fp)
  84d32c:	1009883a 	mov	r4,r2
  84d330:	084c3800 	call	84c380 <OS_StrCopy>
  84d334:	e0bff717 	ldw	r2,-36(fp)
  84d338:	e0bffb15 	stw	r2,-20(fp)
  84d33c:	e0bffb17 	ldw	r2,-20(fp)
  84d340:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84d344:	e0bfff17 	ldw	r2,-4(fp)
  84d348:	10000005 	stb	zero,0(r2)
    return;
  84d34c:	0001883a 	nop
  84d350:	00000106 	br	84d358 <OSFlagNameSet+0x138>



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
        return;
  84d354:	0001883a 	nop
    }
    (void)OS_StrCopy(pgrp->OSFlagName, pname);   /* Yes, copy name from OS_FLAG_GRP                    */
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
    return;
}
  84d358:	e037883a 	mov	sp,fp
  84d35c:	dfc00117 	ldw	ra,4(sp)
  84d360:	df000017 	ldw	fp,0(sp)
  84d364:	dec00204 	addi	sp,sp,8
  84d368:	f800283a 	ret

0084d36c <OSFlagPend>:
*                 event flags.
*********************************************************************************************************
*/

OS_FLAGS  OSFlagPend (OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT16U timeout, INT8U *perr)
{
  84d36c:	deffe104 	addi	sp,sp,-124
  84d370:	dfc01e15 	stw	ra,120(sp)
  84d374:	df001d15 	stw	fp,116(sp)
  84d378:	df001d04 	addi	fp,sp,116
  84d37c:	e13ffc15 	stw	r4,-16(fp)
  84d380:	2809883a 	mov	r4,r5
  84d384:	3007883a 	mov	r3,r6
  84d388:	3805883a 	mov	r2,r7
  84d38c:	e13ffd0d 	sth	r4,-12(fp)
  84d390:	e0fffe05 	stb	r3,-8(fp)
  84d394:	e0bfff0d 	sth	r2,-4(fp)
    OS_FLAGS      flags_rdy;
    INT8U         result;
    INT8U         pend_stat;
    BOOLEAN       consume;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR     cpu_sr = 0;
  84d398:	e03fe515 	stw	zero,-108(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                              /* Validate 'perr'                          */
  84d39c:	e0800217 	ldw	r2,8(fp)
  84d3a0:	1000021e 	bne	r2,zero,84d3ac <OSFlagPend+0x40>
        return ((OS_FLAGS)0);
  84d3a4:	0005883a 	mov	r2,zero
  84d3a8:	00015906 	br	84d910 <OSFlagPend+0x5a4>
    }
    if (pgrp == (OS_FLAG_GRP *)0) {                        /* Validate 'pgrp'                          */
  84d3ac:	e0bffc17 	ldw	r2,-16(fp)
  84d3b0:	1000051e 	bne	r2,zero,84d3c8 <OSFlagPend+0x5c>
        *perr = OS_ERR_FLAG_INVALID_PGRP;
  84d3b4:	e0800217 	ldw	r2,8(fp)
  84d3b8:	00c01b84 	movi	r3,110
  84d3bc:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84d3c0:	0005883a 	mov	r2,zero
  84d3c4:	00015206 	br	84d910 <OSFlagPend+0x5a4>
    }
#endif
    if (OSIntNesting > 0) {                                /* See if called from ISR ...               */
  84d3c8:	d0a0a303 	ldbu	r2,-32116(gp)
  84d3cc:	10803fcc 	andi	r2,r2,255
  84d3d0:	10000526 	beq	r2,zero,84d3e8 <OSFlagPend+0x7c>
        *perr = OS_ERR_PEND_ISR;                           /* ... can't PEND from an ISR               */
  84d3d4:	e0800217 	ldw	r2,8(fp)
  84d3d8:	00c00084 	movi	r3,2
  84d3dc:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84d3e0:	0005883a 	mov	r2,zero
  84d3e4:	00014a06 	br	84d910 <OSFlagPend+0x5a4>
    }
    if (OSLockNesting > 0) {                               /* See if called with scheduler locked ...  */
  84d3e8:	d0a09503 	ldbu	r2,-32172(gp)
  84d3ec:	10803fcc 	andi	r2,r2,255
  84d3f0:	10000526 	beq	r2,zero,84d408 <OSFlagPend+0x9c>
        *perr = OS_ERR_PEND_LOCKED;                        /* ... can't PEND when locked               */
  84d3f4:	e0800217 	ldw	r2,8(fp)
  84d3f8:	00c00344 	movi	r3,13
  84d3fc:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84d400:	0005883a 	mov	r2,zero
  84d404:	00014206 	br	84d910 <OSFlagPend+0x5a4>
    }
    if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {          /* Validate event block type                */
  84d408:	e0bffc17 	ldw	r2,-16(fp)
  84d40c:	10800003 	ldbu	r2,0(r2)
  84d410:	10803fcc 	andi	r2,r2,255
  84d414:	10800160 	cmpeqi	r2,r2,5
  84d418:	1000051e 	bne	r2,zero,84d430 <OSFlagPend+0xc4>
        *perr = OS_ERR_EVENT_TYPE;
  84d41c:	e0800217 	ldw	r2,8(fp)
  84d420:	00c00044 	movi	r3,1
  84d424:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84d428:	0005883a 	mov	r2,zero
  84d42c:	00013806 	br	84d910 <OSFlagPend+0x5a4>
    }
    result = (INT8U)(wait_type & OS_FLAG_CONSUME);
  84d430:	e0fffe03 	ldbu	r3,-8(fp)
  84d434:	00bfe004 	movi	r2,-128
  84d438:	1884703a 	and	r2,r3,r2
  84d43c:	e0bfe605 	stb	r2,-104(fp)
    if (result != (INT8U)0) {                             /* See if we need to consume the flags      */
  84d440:	e0bfe603 	ldbu	r2,-104(fp)
  84d444:	10000626 	beq	r2,zero,84d460 <OSFlagPend+0xf4>
        wait_type &= ~(INT8U)OS_FLAG_CONSUME;
  84d448:	e0bffe03 	ldbu	r2,-8(fp)
  84d44c:	10801fcc 	andi	r2,r2,127
  84d450:	e0bffe05 	stb	r2,-8(fp)
        consume    = OS_TRUE;
  84d454:	00800044 	movi	r2,1
  84d458:	e0bfe405 	stb	r2,-112(fp)
  84d45c:	00000106 	br	84d464 <OSFlagPend+0xf8>
    } else {
        consume    = OS_FALSE;
  84d460:	e03fe405 	stb	zero,-112(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84d464:	0005303a 	rdctl	r2,status
  84d468:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84d46c:	e0fff617 	ldw	r3,-40(fp)
  84d470:	00bfff84 	movi	r2,-2
  84d474:	1884703a 	and	r2,r3,r2
  84d478:	1001703a 	wrctl	status,r2
  
  return context;
  84d47c:	e0bff617 	ldw	r2,-40(fp)
    }
/*$PAGE*/
    OS_ENTER_CRITICAL();
  84d480:	e0bfe515 	stw	r2,-108(fp)
    switch (wait_type) {
  84d484:	e0bffe03 	ldbu	r2,-8(fp)
  84d488:	10c00060 	cmpeqi	r3,r2,1
  84d48c:	1800921e 	bne	r3,zero,84d6d8 <OSFlagPend+0x36c>
  84d490:	10c00088 	cmpgei	r3,r2,2
  84d494:	1800021e 	bne	r3,zero,84d4a0 <OSFlagPend+0x134>
  84d498:	10006126 	beq	r2,zero,84d620 <OSFlagPend+0x2b4>
  84d49c:	0000bb06 	br	84d78c <OSFlagPend+0x420>
  84d4a0:	10c000a0 	cmpeqi	r3,r2,2
  84d4a4:	1800031e 	bne	r3,zero,84d4b4 <OSFlagPend+0x148>
  84d4a8:	108000e0 	cmpeqi	r2,r2,3
  84d4ac:	10002f1e 	bne	r2,zero,84d56c <OSFlagPend+0x200>
  84d4b0:	0000b606 	br	84d78c <OSFlagPend+0x420>
        case OS_FLAG_WAIT_SET_ALL:                         /* See if all required flags are set        */
             flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & flags);   /* Extract only the bits we want     */
  84d4b4:	e0bffc17 	ldw	r2,-16(fp)
  84d4b8:	10c0020b 	ldhu	r3,8(r2)
  84d4bc:	e0bffd0b 	ldhu	r2,-12(fp)
  84d4c0:	1884703a 	and	r2,r3,r2
  84d4c4:	e0bfe80d 	sth	r2,-96(fp)
             if (flags_rdy == flags) {                     /* Must match ALL the bits that we want     */
  84d4c8:	e0ffe80b 	ldhu	r3,-96(fp)
  84d4cc:	e0bffd0b 	ldhu	r2,-12(fp)
  84d4d0:	1880171e 	bne	r3,r2,84d530 <OSFlagPend+0x1c4>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84d4d4:	e0bfe403 	ldbu	r2,-112(fp)
  84d4d8:	10800058 	cmpnei	r2,r2,1
  84d4dc:	1000091e 	bne	r2,zero,84d504 <OSFlagPend+0x198>
                     pgrp->OSFlagFlags &= ~flags_rdy;      /* Clear ONLY the flags that we wanted      */
  84d4e0:	e0bffc17 	ldw	r2,-16(fp)
  84d4e4:	1080020b 	ldhu	r2,8(r2)
  84d4e8:	1007883a 	mov	r3,r2
  84d4ec:	e0bfe80b 	ldhu	r2,-96(fp)
  84d4f0:	0084303a 	nor	r2,zero,r2
  84d4f4:	1884703a 	and	r2,r3,r2
  84d4f8:	1007883a 	mov	r3,r2
  84d4fc:	e0bffc17 	ldw	r2,-16(fp)
  84d500:	10c0020d 	sth	r3,8(r2)
                 }
                 OSTCBCur->OSTCBFlagsRdy = flags_rdy;      /* Save flags that were ready               */
  84d504:	d0a0a417 	ldw	r2,-32112(gp)
  84d508:	e0ffe80b 	ldhu	r3,-96(fp)
  84d50c:	10c00b0d 	sth	r3,44(r2)
  84d510:	e0bfe517 	ldw	r2,-108(fp)
  84d514:	e0bfe715 	stw	r2,-100(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84d518:	e0bfe717 	ldw	r2,-100(fp)
  84d51c:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();                       /* Yes, condition met, return to caller     */
                 *perr                   = OS_ERR_NONE;
  84d520:	e0800217 	ldw	r2,8(fp)
  84d524:	10000005 	stb	zero,0(r2)
                 return (flags_rdy);
  84d528:	e0bfe80b 	ldhu	r2,-96(fp)
  84d52c:	0000f806 	br	84d910 <OSFlagPend+0x5a4>
             } else {                                      /* Block task until events occur or timeout */
                 OS_FlagBlock(pgrp, &node, flags, wait_type, timeout);
  84d530:	e13ffd0b 	ldhu	r4,-12(fp)
  84d534:	e17ffe03 	ldbu	r5,-8(fp)
  84d538:	e0bfff0b 	ldhu	r2,-4(fp)
  84d53c:	e0fff704 	addi	r3,fp,-36
  84d540:	d8800015 	stw	r2,0(sp)
  84d544:	280f883a 	mov	r7,r5
  84d548:	200d883a 	mov	r6,r4
  84d54c:	180b883a 	mov	r5,r3
  84d550:	e13ffc17 	ldw	r4,-16(fp)
  84d554:	084dddc0 	call	84dddc <OS_FlagBlock>
  84d558:	e0bfe517 	ldw	r2,-108(fp)
  84d55c:	e0bfe915 	stw	r2,-92(fp)
  84d560:	e0bfe917 	ldw	r2,-92(fp)
  84d564:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
             }
             break;
  84d568:	00009206 	br	84d7b4 <OSFlagPend+0x448>

        case OS_FLAG_WAIT_SET_ANY:
             flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & flags);    /* Extract only the bits we want    */
  84d56c:	e0bffc17 	ldw	r2,-16(fp)
  84d570:	10c0020b 	ldhu	r3,8(r2)
  84d574:	e0bffd0b 	ldhu	r2,-12(fp)
  84d578:	1884703a 	and	r2,r3,r2
  84d57c:	e0bfe80d 	sth	r2,-96(fp)
             if (flags_rdy != (OS_FLAGS)0) {               /* See if any flag set                      */
  84d580:	e0bfe80b 	ldhu	r2,-96(fp)
  84d584:	10001726 	beq	r2,zero,84d5e4 <OSFlagPend+0x278>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84d588:	e0bfe403 	ldbu	r2,-112(fp)
  84d58c:	10800058 	cmpnei	r2,r2,1
  84d590:	1000091e 	bne	r2,zero,84d5b8 <OSFlagPend+0x24c>
                     pgrp->OSFlagFlags &= ~flags_rdy;      /* Clear ONLY the flags that we got         */
  84d594:	e0bffc17 	ldw	r2,-16(fp)
  84d598:	1080020b 	ldhu	r2,8(r2)
  84d59c:	1007883a 	mov	r3,r2
  84d5a0:	e0bfe80b 	ldhu	r2,-96(fp)
  84d5a4:	0084303a 	nor	r2,zero,r2
  84d5a8:	1884703a 	and	r2,r3,r2
  84d5ac:	1007883a 	mov	r3,r2
  84d5b0:	e0bffc17 	ldw	r2,-16(fp)
  84d5b4:	10c0020d 	sth	r3,8(r2)
                 }
                 OSTCBCur->OSTCBFlagsRdy = flags_rdy;      /* Save flags that were ready               */
  84d5b8:	d0a0a417 	ldw	r2,-32112(gp)
  84d5bc:	e0ffe80b 	ldhu	r3,-96(fp)
  84d5c0:	10c00b0d 	sth	r3,44(r2)
  84d5c4:	e0bfe517 	ldw	r2,-108(fp)
  84d5c8:	e0bfea15 	stw	r2,-88(fp)
  84d5cc:	e0bfea17 	ldw	r2,-88(fp)
  84d5d0:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();                       /* Yes, condition met, return to caller     */
                 *perr                   = OS_ERR_NONE;
  84d5d4:	e0800217 	ldw	r2,8(fp)
  84d5d8:	10000005 	stb	zero,0(r2)
                 return (flags_rdy);
  84d5dc:	e0bfe80b 	ldhu	r2,-96(fp)
  84d5e0:	0000cb06 	br	84d910 <OSFlagPend+0x5a4>
             } else {                                      /* Block task until events occur or timeout */
                 OS_FlagBlock(pgrp, &node, flags, wait_type, timeout);
  84d5e4:	e13ffd0b 	ldhu	r4,-12(fp)
  84d5e8:	e17ffe03 	ldbu	r5,-8(fp)
  84d5ec:	e0bfff0b 	ldhu	r2,-4(fp)
  84d5f0:	e0fff704 	addi	r3,fp,-36
  84d5f4:	d8800015 	stw	r2,0(sp)
  84d5f8:	280f883a 	mov	r7,r5
  84d5fc:	200d883a 	mov	r6,r4
  84d600:	180b883a 	mov	r5,r3
  84d604:	e13ffc17 	ldw	r4,-16(fp)
  84d608:	084dddc0 	call	84dddc <OS_FlagBlock>
  84d60c:	e0bfe517 	ldw	r2,-108(fp)
  84d610:	e0bfeb15 	stw	r2,-84(fp)
  84d614:	e0bfeb17 	ldw	r2,-84(fp)
  84d618:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
             }
             break;
  84d61c:	00006506 	br	84d7b4 <OSFlagPend+0x448>

#if OS_FLAG_WAIT_CLR_EN > 0
        case OS_FLAG_WAIT_CLR_ALL:                         /* See if all required flags are cleared    */
             flags_rdy = (OS_FLAGS)(~pgrp->OSFlagFlags & flags);  /* Extract only the bits we want     */
  84d620:	e0bffc17 	ldw	r2,-16(fp)
  84d624:	1080020b 	ldhu	r2,8(r2)
  84d628:	0084303a 	nor	r2,zero,r2
  84d62c:	1007883a 	mov	r3,r2
  84d630:	e0bffd0b 	ldhu	r2,-12(fp)
  84d634:	1884703a 	and	r2,r3,r2
  84d638:	e0bfe80d 	sth	r2,-96(fp)
             if (flags_rdy == flags) {                     /* Must match ALL the bits that we want     */
  84d63c:	e0ffe80b 	ldhu	r3,-96(fp)
  84d640:	e0bffd0b 	ldhu	r2,-12(fp)
  84d644:	1880151e 	bne	r3,r2,84d69c <OSFlagPend+0x330>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84d648:	e0bfe403 	ldbu	r2,-112(fp)
  84d64c:	10800058 	cmpnei	r2,r2,1
  84d650:	1000071e 	bne	r2,zero,84d670 <OSFlagPend+0x304>
                     pgrp->OSFlagFlags |= flags_rdy;       /* Set ONLY the flags that we wanted        */
  84d654:	e0bffc17 	ldw	r2,-16(fp)
  84d658:	10c0020b 	ldhu	r3,8(r2)
  84d65c:	e0bfe80b 	ldhu	r2,-96(fp)
  84d660:	1884b03a 	or	r2,r3,r2
  84d664:	1007883a 	mov	r3,r2
  84d668:	e0bffc17 	ldw	r2,-16(fp)
  84d66c:	10c0020d 	sth	r3,8(r2)
                 }
                 OSTCBCur->OSTCBFlagsRdy = flags_rdy;      /* Save flags that were ready               */
  84d670:	d0a0a417 	ldw	r2,-32112(gp)
  84d674:	e0ffe80b 	ldhu	r3,-96(fp)
  84d678:	10c00b0d 	sth	r3,44(r2)
  84d67c:	e0bfe517 	ldw	r2,-108(fp)
  84d680:	e0bfec15 	stw	r2,-80(fp)
  84d684:	e0bfec17 	ldw	r2,-80(fp)
  84d688:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();                       /* Yes, condition met, return to caller     */
                 *perr                   = OS_ERR_NONE;
  84d68c:	e0800217 	ldw	r2,8(fp)
  84d690:	10000005 	stb	zero,0(r2)
                 return (flags_rdy);
  84d694:	e0bfe80b 	ldhu	r2,-96(fp)
  84d698:	00009d06 	br	84d910 <OSFlagPend+0x5a4>
             } else {                                      /* Block task until events occur or timeout */
                 OS_FlagBlock(pgrp, &node, flags, wait_type, timeout);
  84d69c:	e13ffd0b 	ldhu	r4,-12(fp)
  84d6a0:	e17ffe03 	ldbu	r5,-8(fp)
  84d6a4:	e0bfff0b 	ldhu	r2,-4(fp)
  84d6a8:	e0fff704 	addi	r3,fp,-36
  84d6ac:	d8800015 	stw	r2,0(sp)
  84d6b0:	280f883a 	mov	r7,r5
  84d6b4:	200d883a 	mov	r6,r4
  84d6b8:	180b883a 	mov	r5,r3
  84d6bc:	e13ffc17 	ldw	r4,-16(fp)
  84d6c0:	084dddc0 	call	84dddc <OS_FlagBlock>
  84d6c4:	e0bfe517 	ldw	r2,-108(fp)
  84d6c8:	e0bfed15 	stw	r2,-76(fp)
  84d6cc:	e0bfed17 	ldw	r2,-76(fp)
  84d6d0:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
             }
             break;
  84d6d4:	00003706 	br	84d7b4 <OSFlagPend+0x448>

        case OS_FLAG_WAIT_CLR_ANY:
             flags_rdy = (OS_FLAGS)(~pgrp->OSFlagFlags & flags); /* Extract only the bits we want      */
  84d6d8:	e0bffc17 	ldw	r2,-16(fp)
  84d6dc:	1080020b 	ldhu	r2,8(r2)
  84d6e0:	0084303a 	nor	r2,zero,r2
  84d6e4:	1007883a 	mov	r3,r2
  84d6e8:	e0bffd0b 	ldhu	r2,-12(fp)
  84d6ec:	1884703a 	and	r2,r3,r2
  84d6f0:	e0bfe80d 	sth	r2,-96(fp)
             if (flags_rdy != (OS_FLAGS)0) {               /* See if any flag cleared                  */
  84d6f4:	e0bfe80b 	ldhu	r2,-96(fp)
  84d6f8:	10001526 	beq	r2,zero,84d750 <OSFlagPend+0x3e4>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84d6fc:	e0bfe403 	ldbu	r2,-112(fp)
  84d700:	10800058 	cmpnei	r2,r2,1
  84d704:	1000071e 	bne	r2,zero,84d724 <OSFlagPend+0x3b8>
                     pgrp->OSFlagFlags |= flags_rdy;       /* Set ONLY the flags that we got           */
  84d708:	e0bffc17 	ldw	r2,-16(fp)
  84d70c:	10c0020b 	ldhu	r3,8(r2)
  84d710:	e0bfe80b 	ldhu	r2,-96(fp)
  84d714:	1884b03a 	or	r2,r3,r2
  84d718:	1007883a 	mov	r3,r2
  84d71c:	e0bffc17 	ldw	r2,-16(fp)
  84d720:	10c0020d 	sth	r3,8(r2)
                 }
                 OSTCBCur->OSTCBFlagsRdy = flags_rdy;      /* Save flags that were ready               */
  84d724:	d0a0a417 	ldw	r2,-32112(gp)
  84d728:	e0ffe80b 	ldhu	r3,-96(fp)
  84d72c:	10c00b0d 	sth	r3,44(r2)
  84d730:	e0bfe517 	ldw	r2,-108(fp)
  84d734:	e0bfee15 	stw	r2,-72(fp)
  84d738:	e0bfee17 	ldw	r2,-72(fp)
  84d73c:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();                       /* Yes, condition met, return to caller     */
                 *perr                   = OS_ERR_NONE;
  84d740:	e0800217 	ldw	r2,8(fp)
  84d744:	10000005 	stb	zero,0(r2)
                 return (flags_rdy);
  84d748:	e0bfe80b 	ldhu	r2,-96(fp)
  84d74c:	00007006 	br	84d910 <OSFlagPend+0x5a4>
             } else {                                      /* Block task until events occur or timeout */
                 OS_FlagBlock(pgrp, &node, flags, wait_type, timeout);
  84d750:	e13ffd0b 	ldhu	r4,-12(fp)
  84d754:	e17ffe03 	ldbu	r5,-8(fp)
  84d758:	e0bfff0b 	ldhu	r2,-4(fp)
  84d75c:	e0fff704 	addi	r3,fp,-36
  84d760:	d8800015 	stw	r2,0(sp)
  84d764:	280f883a 	mov	r7,r5
  84d768:	200d883a 	mov	r6,r4
  84d76c:	180b883a 	mov	r5,r3
  84d770:	e13ffc17 	ldw	r4,-16(fp)
  84d774:	084dddc0 	call	84dddc <OS_FlagBlock>
  84d778:	e0bfe517 	ldw	r2,-108(fp)
  84d77c:	e0bfef15 	stw	r2,-68(fp)
  84d780:	e0bfef17 	ldw	r2,-68(fp)
  84d784:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
             }
             break;
  84d788:	00000a06 	br	84d7b4 <OSFlagPend+0x448>
  84d78c:	e0bfe517 	ldw	r2,-108(fp)
  84d790:	e0bff015 	stw	r2,-64(fp)
  84d794:	e0bff017 	ldw	r2,-64(fp)
  84d798:	1001703a 	wrctl	status,r2
#endif

        default:
             OS_EXIT_CRITICAL();
             flags_rdy = (OS_FLAGS)0;
  84d79c:	e03fe80d 	sth	zero,-96(fp)
             *perr      = OS_ERR_FLAG_WAIT_TYPE;
  84d7a0:	e0800217 	ldw	r2,8(fp)
  84d7a4:	00c01bc4 	movi	r3,111
  84d7a8:	10c00005 	stb	r3,0(r2)
             return (flags_rdy);
  84d7ac:	e0bfe80b 	ldhu	r2,-96(fp)
  84d7b0:	00005706 	br	84d910 <OSFlagPend+0x5a4>
    }
/*$PAGE*/
    OS_Sched();                                            /* Find next HPT ready to run               */
  84d7b4:	084c23c0 	call	84c23c <OS_Sched>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84d7b8:	0005303a 	rdctl	r2,status
  84d7bc:	e0bff115 	stw	r2,-60(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84d7c0:	e0fff117 	ldw	r3,-60(fp)
  84d7c4:	00bfff84 	movi	r2,-2
  84d7c8:	1884703a 	and	r2,r3,r2
  84d7cc:	1001703a 	wrctl	status,r2
  
  return context;
  84d7d0:	e0bff117 	ldw	r2,-60(fp)
    OS_ENTER_CRITICAL();
  84d7d4:	e0bfe515 	stw	r2,-108(fp)
    if (OSTCBCur->OSTCBStatPend != OS_STAT_PEND_OK) {      /* Have we timed-out or aborted?            */
  84d7d8:	d0a0a417 	ldw	r2,-32112(gp)
  84d7dc:	10800c43 	ldbu	r2,49(r2)
  84d7e0:	10803fcc 	andi	r2,r2,255
  84d7e4:	10001c26 	beq	r2,zero,84d858 <OSFlagPend+0x4ec>
        pend_stat                = OSTCBCur->OSTCBStatPend;
  84d7e8:	d0a0a417 	ldw	r2,-32112(gp)
  84d7ec:	10800c43 	ldbu	r2,49(r2)
  84d7f0:	e0bff305 	stb	r2,-52(fp)
        OSTCBCur->OSTCBStatPend  = OS_STAT_PEND_OK;
  84d7f4:	d0a0a417 	ldw	r2,-32112(gp)
  84d7f8:	10000c45 	stb	zero,49(r2)
        OS_FlagUnlink(&node);
  84d7fc:	e0bff704 	addi	r2,fp,-36
  84d800:	1009883a 	mov	r4,r2
  84d804:	084e1100 	call	84e110 <OS_FlagUnlink>
        OSTCBCur->OSTCBStat      = OS_STAT_RDY;            /* Yes, make task ready-to-run              */
  84d808:	d0a0a417 	ldw	r2,-32112(gp)
  84d80c:	10000c05 	stb	zero,48(r2)
  84d810:	e0bfe517 	ldw	r2,-108(fp)
  84d814:	e0bff215 	stw	r2,-56(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84d818:	e0bff217 	ldw	r2,-56(fp)
  84d81c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        flags_rdy                = (OS_FLAGS)0;
  84d820:	e03fe80d 	sth	zero,-96(fp)
        switch (pend_stat) {
  84d824:	e0bff303 	ldbu	r2,-52(fp)
  84d828:	108000a0 	cmpeqi	r2,r2,2
  84d82c:	10000426 	beq	r2,zero,84d840 <OSFlagPend+0x4d4>
            case OS_STAT_PEND_ABORT:
                 *perr = OS_ERR_PEND_ABORT;                 /* Indicate that we aborted   waiting       */
  84d830:	e0800217 	ldw	r2,8(fp)
  84d834:	00c00384 	movi	r3,14
  84d838:	10c00005 	stb	r3,0(r2)
                 break;
  84d83c:	00000406 	br	84d850 <OSFlagPend+0x4e4>

            case OS_STAT_PEND_TO:
            default:
                 *perr = OS_ERR_TIMEOUT;                    /* Indicate that we timed-out waiting       */
  84d840:	e0800217 	ldw	r2,8(fp)
  84d844:	00c00284 	movi	r3,10
  84d848:	10c00005 	stb	r3,0(r2)
                 break;
  84d84c:	0001883a 	nop
        }
        return (flags_rdy);
  84d850:	e0bfe80b 	ldhu	r2,-96(fp)
  84d854:	00002e06 	br	84d910 <OSFlagPend+0x5a4>
    }
    flags_rdy = OSTCBCur->OSTCBFlagsRdy;
  84d858:	d0a0a417 	ldw	r2,-32112(gp)
  84d85c:	10800b0b 	ldhu	r2,44(r2)
  84d860:	e0bfe80d 	sth	r2,-96(fp)
    if (consume == OS_TRUE) {                              /* See if we need to consume the flags      */
  84d864:	e0bfe403 	ldbu	r2,-112(fp)
  84d868:	10800058 	cmpnei	r2,r2,1
  84d86c:	1000211e 	bne	r2,zero,84d8f4 <OSFlagPend+0x588>
        switch (wait_type) {
  84d870:	e0bffe03 	ldbu	r2,-8(fp)
  84d874:	10001616 	blt	r2,zero,84d8d0 <OSFlagPend+0x564>
  84d878:	10c00090 	cmplti	r3,r2,2
  84d87c:	18000c1e 	bne	r3,zero,84d8b0 <OSFlagPend+0x544>
  84d880:	10800108 	cmpgei	r2,r2,4
  84d884:	1000121e 	bne	r2,zero,84d8d0 <OSFlagPend+0x564>
            case OS_FLAG_WAIT_SET_ALL:
            case OS_FLAG_WAIT_SET_ANY:                     /* Clear ONLY the flags we got              */
                 pgrp->OSFlagFlags &= ~flags_rdy;
  84d888:	e0bffc17 	ldw	r2,-16(fp)
  84d88c:	1080020b 	ldhu	r2,8(r2)
  84d890:	1007883a 	mov	r3,r2
  84d894:	e0bfe80b 	ldhu	r2,-96(fp)
  84d898:	0084303a 	nor	r2,zero,r2
  84d89c:	1884703a 	and	r2,r3,r2
  84d8a0:	1007883a 	mov	r3,r2
  84d8a4:	e0bffc17 	ldw	r2,-16(fp)
  84d8a8:	10c0020d 	sth	r3,8(r2)
                 break;
  84d8ac:	00001106 	br	84d8f4 <OSFlagPend+0x588>

#if OS_FLAG_WAIT_CLR_EN > 0
            case OS_FLAG_WAIT_CLR_ALL:
            case OS_FLAG_WAIT_CLR_ANY:                     /* Set   ONLY the flags we got              */
                 pgrp->OSFlagFlags |=  flags_rdy;
  84d8b0:	e0bffc17 	ldw	r2,-16(fp)
  84d8b4:	10c0020b 	ldhu	r3,8(r2)
  84d8b8:	e0bfe80b 	ldhu	r2,-96(fp)
  84d8bc:	1884b03a 	or	r2,r3,r2
  84d8c0:	1007883a 	mov	r3,r2
  84d8c4:	e0bffc17 	ldw	r2,-16(fp)
  84d8c8:	10c0020d 	sth	r3,8(r2)
                 break;
  84d8cc:	00000906 	br	84d8f4 <OSFlagPend+0x588>
  84d8d0:	e0bfe517 	ldw	r2,-108(fp)
  84d8d4:	e0bff415 	stw	r2,-48(fp)
  84d8d8:	e0bff417 	ldw	r2,-48(fp)
  84d8dc:	1001703a 	wrctl	status,r2
#endif
            default:
                 OS_EXIT_CRITICAL();
                 *perr = OS_ERR_FLAG_WAIT_TYPE;
  84d8e0:	e0800217 	ldw	r2,8(fp)
  84d8e4:	00c01bc4 	movi	r3,111
  84d8e8:	10c00005 	stb	r3,0(r2)
                 return ((OS_FLAGS)0);
  84d8ec:	0005883a 	mov	r2,zero
  84d8f0:	00000706 	br	84d910 <OSFlagPend+0x5a4>
  84d8f4:	e0bfe517 	ldw	r2,-108(fp)
  84d8f8:	e0bff515 	stw	r2,-44(fp)
  84d8fc:	e0bff517 	ldw	r2,-44(fp)
  84d900:	1001703a 	wrctl	status,r2
        }
    }
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;                                   /* Event(s) must have occurred              */
  84d904:	e0800217 	ldw	r2,8(fp)
  84d908:	10000005 	stb	zero,0(r2)
    return (flags_rdy);
  84d90c:	e0bfe80b 	ldhu	r2,-96(fp)
}
  84d910:	e037883a 	mov	sp,fp
  84d914:	dfc00117 	ldw	ra,4(sp)
  84d918:	df000017 	ldw	fp,0(sp)
  84d91c:	dec00204 	addi	sp,sp,8
  84d920:	f800283a 	ret

0084d924 <OSFlagPendGetFlagsRdy>:
* Called from: Task ONLY
*********************************************************************************************************
*/

OS_FLAGS  OSFlagPendGetFlagsRdy (void)
{
  84d924:	defffb04 	addi	sp,sp,-20
  84d928:	df000415 	stw	fp,16(sp)
  84d92c:	df000404 	addi	fp,sp,16
    OS_FLAGS      flags;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR     cpu_sr = 0;
  84d930:	e03ffc15 	stw	zero,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84d934:	0005303a 	rdctl	r2,status
  84d938:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84d93c:	e0fffe17 	ldw	r3,-8(fp)
  84d940:	00bfff84 	movi	r2,-2
  84d944:	1884703a 	and	r2,r3,r2
  84d948:	1001703a 	wrctl	status,r2
  
  return context;
  84d94c:	e0bffe17 	ldw	r2,-8(fp)
#endif



    OS_ENTER_CRITICAL();
  84d950:	e0bffc15 	stw	r2,-16(fp)
    flags = OSTCBCur->OSTCBFlagsRdy;
  84d954:	d0a0a417 	ldw	r2,-32112(gp)
  84d958:	10800b0b 	ldhu	r2,44(r2)
  84d95c:	e0bffd0d 	sth	r2,-12(fp)
  84d960:	e0bffc17 	ldw	r2,-16(fp)
  84d964:	e0bfff15 	stw	r2,-4(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84d968:	e0bfff17 	ldw	r2,-4(fp)
  84d96c:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (flags);
  84d970:	e0bffd0b 	ldhu	r2,-12(fp)
}
  84d974:	e037883a 	mov	sp,fp
  84d978:	df000017 	ldw	fp,0(sp)
  84d97c:	dec00104 	addi	sp,sp,4
  84d980:	f800283a 	ret

0084d984 <OSFlagPost>:
*              2) The amount of time interrupts are DISABLED depends on the number of tasks waiting on
*                 the event flag group.
*********************************************************************************************************
*/
OS_FLAGS  OSFlagPost (OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U opt, INT8U *perr)
{
  84d984:	deffef04 	addi	sp,sp,-68
  84d988:	dfc01015 	stw	ra,64(sp)
  84d98c:	df000f15 	stw	fp,60(sp)
  84d990:	df000f04 	addi	fp,sp,60
  84d994:	e13ffc15 	stw	r4,-16(fp)
  84d998:	2807883a 	mov	r3,r5
  84d99c:	3005883a 	mov	r2,r6
  84d9a0:	e1ffff15 	stw	r7,-4(fp)
  84d9a4:	e0fffd0d 	sth	r3,-12(fp)
  84d9a8:	e0bffe05 	stb	r2,-8(fp)
    BOOLEAN       sched;
    OS_FLAGS      flags_cur;
    OS_FLAGS      flags_rdy;
    BOOLEAN       rdy;
#if OS_CRITICAL_METHOD == 3                          /* Allocate storage for CPU status register       */
    OS_CPU_SR     cpu_sr = 0;
  84d9ac:	e03ff315 	stw	zero,-52(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                        /* Validate 'perr'                                */
  84d9b0:	e0bfff17 	ldw	r2,-4(fp)
  84d9b4:	1000021e 	bne	r2,zero,84d9c0 <OSFlagPost+0x3c>
        return ((OS_FLAGS)0);
  84d9b8:	0005883a 	mov	r2,zero
  84d9bc:	0000d106 	br	84dd04 <OSFlagPost+0x380>
    }
    if (pgrp == (OS_FLAG_GRP *)0) {                  /* Validate 'pgrp'                                */
  84d9c0:	e0bffc17 	ldw	r2,-16(fp)
  84d9c4:	1000051e 	bne	r2,zero,84d9dc <OSFlagPost+0x58>
        *perr = OS_ERR_FLAG_INVALID_PGRP;
  84d9c8:	e0bfff17 	ldw	r2,-4(fp)
  84d9cc:	00c01b84 	movi	r3,110
  84d9d0:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84d9d4:	0005883a 	mov	r2,zero
  84d9d8:	0000ca06 	br	84dd04 <OSFlagPost+0x380>
    }
#endif
    if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {    /* Make sure we are pointing to an event flag grp */
  84d9dc:	e0bffc17 	ldw	r2,-16(fp)
  84d9e0:	10800003 	ldbu	r2,0(r2)
  84d9e4:	10803fcc 	andi	r2,r2,255
  84d9e8:	10800160 	cmpeqi	r2,r2,5
  84d9ec:	1000051e 	bne	r2,zero,84da04 <OSFlagPost+0x80>
        *perr = OS_ERR_EVENT_TYPE;
  84d9f0:	e0bfff17 	ldw	r2,-4(fp)
  84d9f4:	00c00044 	movi	r3,1
  84d9f8:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84d9fc:	0005883a 	mov	r2,zero
  84da00:	0000c006 	br	84dd04 <OSFlagPost+0x380>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84da04:	0005303a 	rdctl	r2,status
  84da08:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84da0c:	e0fffb17 	ldw	r3,-20(fp)
  84da10:	00bfff84 	movi	r2,-2
  84da14:	1884703a 	and	r2,r3,r2
  84da18:	1001703a 	wrctl	status,r2
  
  return context;
  84da1c:	e0bffb17 	ldw	r2,-20(fp)
    }
/*$PAGE*/
    OS_ENTER_CRITICAL();
  84da20:	e0bff315 	stw	r2,-52(fp)
    switch (opt) {
  84da24:	e0bffe03 	ldbu	r2,-8(fp)
  84da28:	10000326 	beq	r2,zero,84da38 <OSFlagPost+0xb4>
  84da2c:	10800060 	cmpeqi	r2,r2,1
  84da30:	10000b1e 	bne	r2,zero,84da60 <OSFlagPost+0xdc>
  84da34:	00001206 	br	84da80 <OSFlagPost+0xfc>
        case OS_FLAG_CLR:
             pgrp->OSFlagFlags &= ~flags;            /* Clear the flags specified in the group         */
  84da38:	e0bffc17 	ldw	r2,-16(fp)
  84da3c:	1080020b 	ldhu	r2,8(r2)
  84da40:	1007883a 	mov	r3,r2
  84da44:	e0bffd0b 	ldhu	r2,-12(fp)
  84da48:	0084303a 	nor	r2,zero,r2
  84da4c:	1884703a 	and	r2,r3,r2
  84da50:	1007883a 	mov	r3,r2
  84da54:	e0bffc17 	ldw	r2,-16(fp)
  84da58:	10c0020d 	sth	r3,8(r2)
             break;
  84da5c:	00001106 	br	84daa4 <OSFlagPost+0x120>

        case OS_FLAG_SET:
             pgrp->OSFlagFlags |=  flags;            /* Set   the flags specified in the group         */
  84da60:	e0bffc17 	ldw	r2,-16(fp)
  84da64:	10c0020b 	ldhu	r3,8(r2)
  84da68:	e0bffd0b 	ldhu	r2,-12(fp)
  84da6c:	1884b03a 	or	r2,r3,r2
  84da70:	1007883a 	mov	r3,r2
  84da74:	e0bffc17 	ldw	r2,-16(fp)
  84da78:	10c0020d 	sth	r3,8(r2)
             break;
  84da7c:	00000906 	br	84daa4 <OSFlagPost+0x120>
  84da80:	e0bff317 	ldw	r2,-52(fp)
  84da84:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84da88:	e0bff417 	ldw	r2,-48(fp)
  84da8c:	1001703a 	wrctl	status,r2

        default:
             OS_EXIT_CRITICAL();                     /* INVALID option                                 */
             *perr = OS_ERR_FLAG_INVALID_OPT;
  84da90:	e0bfff17 	ldw	r2,-4(fp)
  84da94:	00c01c44 	movi	r3,113
  84da98:	10c00005 	stb	r3,0(r2)
             return ((OS_FLAGS)0);
  84da9c:	0005883a 	mov	r2,zero
  84daa0:	00009806 	br	84dd04 <OSFlagPost+0x380>
    }
    sched = OS_FALSE;                                /* Indicate that we don't need rescheduling       */
  84daa4:	e03ff205 	stb	zero,-56(fp)
    pnode = (OS_FLAG_NODE *)pgrp->OSFlagWaitList;
  84daa8:	e0bffc17 	ldw	r2,-16(fp)
  84daac:	10800117 	ldw	r2,4(r2)
  84dab0:	e0bff115 	stw	r2,-60(fp)
    while (pnode != (OS_FLAG_NODE *)0) {             /* Go through all tasks waiting on event flag(s)  */
  84dab4:	00007706 	br	84dc94 <OSFlagPost+0x310>
        switch (pnode->OSFlagNodeWaitType) {
  84dab8:	e0bff117 	ldw	r2,-60(fp)
  84dabc:	10800483 	ldbu	r2,18(r2)
  84dac0:	10803fcc 	andi	r2,r2,255
  84dac4:	10c00060 	cmpeqi	r3,r2,1
  84dac8:	18004a1e 	bne	r3,zero,84dbf4 <OSFlagPost+0x270>
  84dacc:	10c00088 	cmpgei	r3,r2,2
  84dad0:	1800021e 	bne	r3,zero,84dadc <OSFlagPost+0x158>
  84dad4:	10002f26 	beq	r2,zero,84db94 <OSFlagPost+0x210>
  84dad8:	00005b06 	br	84dc48 <OSFlagPost+0x2c4>
  84dadc:	10c000a0 	cmpeqi	r3,r2,2
  84dae0:	1800031e 	bne	r3,zero,84daf0 <OSFlagPost+0x16c>
  84dae4:	108000e0 	cmpeqi	r2,r2,3
  84dae8:	1000171e 	bne	r2,zero,84db48 <OSFlagPost+0x1c4>
  84daec:	00005606 	br	84dc48 <OSFlagPost+0x2c4>
            case OS_FLAG_WAIT_SET_ALL:               /* See if all req. flags are set for current node */
                 flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & pnode->OSFlagNodeFlags);
  84daf0:	e0bffc17 	ldw	r2,-16(fp)
  84daf4:	10c0020b 	ldhu	r3,8(r2)
  84daf8:	e0bff117 	ldw	r2,-60(fp)
  84dafc:	1080040b 	ldhu	r2,16(r2)
  84db00:	1884703a 	and	r2,r3,r2
  84db04:	e0bff60d 	sth	r2,-40(fp)
                 if (flags_rdy == pnode->OSFlagNodeFlags) {
  84db08:	e0bff117 	ldw	r2,-60(fp)
  84db0c:	1080040b 	ldhu	r2,16(r2)
  84db10:	10ffffcc 	andi	r3,r2,65535
  84db14:	e0bff60b 	ldhu	r2,-40(fp)
  84db18:	1880541e 	bne	r3,r2,84dc6c <OSFlagPost+0x2e8>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
  84db1c:	e0bff60b 	ldhu	r2,-40(fp)
  84db20:	100b883a 	mov	r5,r2
  84db24:	e13ff117 	ldw	r4,-60(fp)
  84db28:	084e01c0 	call	84e01c <OS_FlagTaskRdy>
  84db2c:	e0bff685 	stb	r2,-38(fp)
                     if (rdy == OS_TRUE) {
  84db30:	e0bff683 	ldbu	r2,-38(fp)
  84db34:	10800058 	cmpnei	r2,r2,1
  84db38:	10004c1e 	bne	r2,zero,84dc6c <OSFlagPost+0x2e8>
                         sched = OS_TRUE;                     /* When done we will reschedule          */
  84db3c:	00800044 	movi	r2,1
  84db40:	e0bff205 	stb	r2,-56(fp)
                     }
                 }
                 break;
  84db44:	00004906 	br	84dc6c <OSFlagPost+0x2e8>

            case OS_FLAG_WAIT_SET_ANY:               /* See if any flag set                            */
                 flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & pnode->OSFlagNodeFlags);
  84db48:	e0bffc17 	ldw	r2,-16(fp)
  84db4c:	10c0020b 	ldhu	r3,8(r2)
  84db50:	e0bff117 	ldw	r2,-60(fp)
  84db54:	1080040b 	ldhu	r2,16(r2)
  84db58:	1884703a 	and	r2,r3,r2
  84db5c:	e0bff60d 	sth	r2,-40(fp)
                 if (flags_rdy != (OS_FLAGS)0) {
  84db60:	e0bff60b 	ldhu	r2,-40(fp)
  84db64:	10004326 	beq	r2,zero,84dc74 <OSFlagPost+0x2f0>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
  84db68:	e0bff60b 	ldhu	r2,-40(fp)
  84db6c:	100b883a 	mov	r5,r2
  84db70:	e13ff117 	ldw	r4,-60(fp)
  84db74:	084e01c0 	call	84e01c <OS_FlagTaskRdy>
  84db78:	e0bff685 	stb	r2,-38(fp)
                     if (rdy == OS_TRUE) {
  84db7c:	e0bff683 	ldbu	r2,-38(fp)
  84db80:	10800058 	cmpnei	r2,r2,1
  84db84:	10003b1e 	bne	r2,zero,84dc74 <OSFlagPost+0x2f0>
                         sched = OS_TRUE;                     /* When done we will reschedule          */
  84db88:	00800044 	movi	r2,1
  84db8c:	e0bff205 	stb	r2,-56(fp)
                     }
                 }
                 break;
  84db90:	00003806 	br	84dc74 <OSFlagPost+0x2f0>

#if OS_FLAG_WAIT_CLR_EN > 0
            case OS_FLAG_WAIT_CLR_ALL:               /* See if all req. flags are set for current node */
                 flags_rdy = (OS_FLAGS)(~pgrp->OSFlagFlags & pnode->OSFlagNodeFlags);
  84db94:	e0bffc17 	ldw	r2,-16(fp)
  84db98:	1080020b 	ldhu	r2,8(r2)
  84db9c:	0084303a 	nor	r2,zero,r2
  84dba0:	1007883a 	mov	r3,r2
  84dba4:	e0bff117 	ldw	r2,-60(fp)
  84dba8:	1080040b 	ldhu	r2,16(r2)
  84dbac:	1884703a 	and	r2,r3,r2
  84dbb0:	e0bff60d 	sth	r2,-40(fp)
                 if (flags_rdy == pnode->OSFlagNodeFlags) {
  84dbb4:	e0bff117 	ldw	r2,-60(fp)
  84dbb8:	1080040b 	ldhu	r2,16(r2)
  84dbbc:	10ffffcc 	andi	r3,r2,65535
  84dbc0:	e0bff60b 	ldhu	r2,-40(fp)
  84dbc4:	18802d1e 	bne	r3,r2,84dc7c <OSFlagPost+0x2f8>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
  84dbc8:	e0bff60b 	ldhu	r2,-40(fp)
  84dbcc:	100b883a 	mov	r5,r2
  84dbd0:	e13ff117 	ldw	r4,-60(fp)
  84dbd4:	084e01c0 	call	84e01c <OS_FlagTaskRdy>
  84dbd8:	e0bff685 	stb	r2,-38(fp)
                     if (rdy == OS_TRUE) {
  84dbdc:	e0bff683 	ldbu	r2,-38(fp)
  84dbe0:	10800058 	cmpnei	r2,r2,1
  84dbe4:	1000251e 	bne	r2,zero,84dc7c <OSFlagPost+0x2f8>
                         sched = OS_TRUE;                     /* When done we will reschedule          */
  84dbe8:	00800044 	movi	r2,1
  84dbec:	e0bff205 	stb	r2,-56(fp)
                     }
                 }
                 break;
  84dbf0:	00002206 	br	84dc7c <OSFlagPost+0x2f8>

            case OS_FLAG_WAIT_CLR_ANY:               /* See if any flag set                            */
                 flags_rdy = (OS_FLAGS)(~pgrp->OSFlagFlags & pnode->OSFlagNodeFlags);
  84dbf4:	e0bffc17 	ldw	r2,-16(fp)
  84dbf8:	1080020b 	ldhu	r2,8(r2)
  84dbfc:	0084303a 	nor	r2,zero,r2
  84dc00:	1007883a 	mov	r3,r2
  84dc04:	e0bff117 	ldw	r2,-60(fp)
  84dc08:	1080040b 	ldhu	r2,16(r2)
  84dc0c:	1884703a 	and	r2,r3,r2
  84dc10:	e0bff60d 	sth	r2,-40(fp)
                 if (flags_rdy != (OS_FLAGS)0) {
  84dc14:	e0bff60b 	ldhu	r2,-40(fp)
  84dc18:	10001a26 	beq	r2,zero,84dc84 <OSFlagPost+0x300>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
  84dc1c:	e0bff60b 	ldhu	r2,-40(fp)
  84dc20:	100b883a 	mov	r5,r2
  84dc24:	e13ff117 	ldw	r4,-60(fp)
  84dc28:	084e01c0 	call	84e01c <OS_FlagTaskRdy>
  84dc2c:	e0bff685 	stb	r2,-38(fp)
                     if (rdy == OS_TRUE) {
  84dc30:	e0bff683 	ldbu	r2,-38(fp)
  84dc34:	10800058 	cmpnei	r2,r2,1
  84dc38:	1000121e 	bne	r2,zero,84dc84 <OSFlagPost+0x300>
                         sched = OS_TRUE;                     /* When done we will reschedule          */
  84dc3c:	00800044 	movi	r2,1
  84dc40:	e0bff205 	stb	r2,-56(fp)
                     }
                 }
                 break;
  84dc44:	00000f06 	br	84dc84 <OSFlagPost+0x300>
  84dc48:	e0bff317 	ldw	r2,-52(fp)
  84dc4c:	e0bff515 	stw	r2,-44(fp)
  84dc50:	e0bff517 	ldw	r2,-44(fp)
  84dc54:	1001703a 	wrctl	status,r2
#endif
            default:
                 OS_EXIT_CRITICAL();
                 *perr = OS_ERR_FLAG_WAIT_TYPE;
  84dc58:	e0bfff17 	ldw	r2,-4(fp)
  84dc5c:	00c01bc4 	movi	r3,111
  84dc60:	10c00005 	stb	r3,0(r2)
                 return ((OS_FLAGS)0);
  84dc64:	0005883a 	mov	r2,zero
  84dc68:	00002606 	br	84dd04 <OSFlagPost+0x380>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
                     if (rdy == OS_TRUE) {
                         sched = OS_TRUE;                     /* When done we will reschedule          */
                     }
                 }
                 break;
  84dc6c:	0001883a 	nop
  84dc70:	00000506 	br	84dc88 <OSFlagPost+0x304>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
                     if (rdy == OS_TRUE) {
                         sched = OS_TRUE;                     /* When done we will reschedule          */
                     }
                 }
                 break;
  84dc74:	0001883a 	nop
  84dc78:	00000306 	br	84dc88 <OSFlagPost+0x304>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
                     if (rdy == OS_TRUE) {
                         sched = OS_TRUE;                     /* When done we will reschedule          */
                     }
                 }
                 break;
  84dc7c:	0001883a 	nop
  84dc80:	00000106 	br	84dc88 <OSFlagPost+0x304>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
                     if (rdy == OS_TRUE) {
                         sched = OS_TRUE;                     /* When done we will reschedule          */
                     }
                 }
                 break;
  84dc84:	0001883a 	nop
            default:
                 OS_EXIT_CRITICAL();
                 *perr = OS_ERR_FLAG_WAIT_TYPE;
                 return ((OS_FLAGS)0);
        }
        pnode = (OS_FLAG_NODE *)pnode->OSFlagNodeNext; /* Point to next task waiting for event flag(s) */
  84dc88:	e0bff117 	ldw	r2,-60(fp)
  84dc8c:	10800017 	ldw	r2,0(r2)
  84dc90:	e0bff115 	stw	r2,-60(fp)
             *perr = OS_ERR_FLAG_INVALID_OPT;
             return ((OS_FLAGS)0);
    }
    sched = OS_FALSE;                                /* Indicate that we don't need rescheduling       */
    pnode = (OS_FLAG_NODE *)pgrp->OSFlagWaitList;
    while (pnode != (OS_FLAG_NODE *)0) {             /* Go through all tasks waiting on event flag(s)  */
  84dc94:	e0bff117 	ldw	r2,-60(fp)
  84dc98:	103f871e 	bne	r2,zero,84dab8 <__alt_mem_epcs_flash_controller_0+0xff844ab8>
  84dc9c:	e0bff317 	ldw	r2,-52(fp)
  84dca0:	e0bff715 	stw	r2,-36(fp)
  84dca4:	e0bff717 	ldw	r2,-36(fp)
  84dca8:	1001703a 	wrctl	status,r2
                 return ((OS_FLAGS)0);
        }
        pnode = (OS_FLAG_NODE *)pnode->OSFlagNodeNext; /* Point to next task waiting for event flag(s) */
    }
    OS_EXIT_CRITICAL();
    if (sched == OS_TRUE) {
  84dcac:	e0bff203 	ldbu	r2,-56(fp)
  84dcb0:	10800058 	cmpnei	r2,r2,1
  84dcb4:	1000011e 	bne	r2,zero,84dcbc <OSFlagPost+0x338>
        OS_Sched();
  84dcb8:	084c23c0 	call	84c23c <OS_Sched>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84dcbc:	0005303a 	rdctl	r2,status
  84dcc0:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84dcc4:	e0fffa17 	ldw	r3,-24(fp)
  84dcc8:	00bfff84 	movi	r2,-2
  84dccc:	1884703a 	and	r2,r3,r2
  84dcd0:	1001703a 	wrctl	status,r2
  
  return context;
  84dcd4:	e0bffa17 	ldw	r2,-24(fp)
    }
    OS_ENTER_CRITICAL();
  84dcd8:	e0bff315 	stw	r2,-52(fp)
    flags_cur = pgrp->OSFlagFlags;
  84dcdc:	e0bffc17 	ldw	r2,-16(fp)
  84dce0:	1080020b 	ldhu	r2,8(r2)
  84dce4:	e0bff90d 	sth	r2,-28(fp)
  84dce8:	e0bff317 	ldw	r2,-52(fp)
  84dcec:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84dcf0:	e0bff817 	ldw	r2,-32(fp)
  84dcf4:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr     = OS_ERR_NONE;
  84dcf8:	e0bfff17 	ldw	r2,-4(fp)
  84dcfc:	10000005 	stb	zero,0(r2)
    return (flags_cur);
  84dd00:	e0bff90b 	ldhu	r2,-28(fp)
}
  84dd04:	e037883a 	mov	sp,fp
  84dd08:	dfc00117 	ldw	ra,4(sp)
  84dd0c:	df000017 	ldw	fp,0(sp)
  84dd10:	dec00204 	addi	sp,sp,8
  84dd14:	f800283a 	ret

0084dd18 <OSFlagQuery>:
*********************************************************************************************************
*/

#if OS_FLAG_QUERY_EN > 0
OS_FLAGS  OSFlagQuery (OS_FLAG_GRP *pgrp, INT8U *perr)
{
  84dd18:	defff904 	addi	sp,sp,-28
  84dd1c:	df000615 	stw	fp,24(sp)
  84dd20:	df000604 	addi	fp,sp,24
  84dd24:	e13ffe15 	stw	r4,-8(fp)
  84dd28:	e17fff15 	stw	r5,-4(fp)
    OS_FLAGS   flags;
#if OS_CRITICAL_METHOD == 3                       /* Allocate storage for CPU status register          */
    OS_CPU_SR  cpu_sr = 0;
  84dd2c:	e03ffa15 	stw	zero,-24(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                     /* Validate 'perr'                                   */
  84dd30:	e0bfff17 	ldw	r2,-4(fp)
  84dd34:	1000021e 	bne	r2,zero,84dd40 <OSFlagQuery+0x28>
        return ((OS_FLAGS)0);
  84dd38:	0005883a 	mov	r2,zero
  84dd3c:	00002306 	br	84ddcc <OSFlagQuery+0xb4>
    }
    if (pgrp == (OS_FLAG_GRP *)0) {               /* Validate 'pgrp'                                   */
  84dd40:	e0bffe17 	ldw	r2,-8(fp)
  84dd44:	1000051e 	bne	r2,zero,84dd5c <OSFlagQuery+0x44>
        *perr = OS_ERR_FLAG_INVALID_PGRP;
  84dd48:	e0bfff17 	ldw	r2,-4(fp)
  84dd4c:	00c01b84 	movi	r3,110
  84dd50:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84dd54:	0005883a 	mov	r2,zero
  84dd58:	00001c06 	br	84ddcc <OSFlagQuery+0xb4>
    }
#endif
    if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) { /* Validate event block type                         */
  84dd5c:	e0bffe17 	ldw	r2,-8(fp)
  84dd60:	10800003 	ldbu	r2,0(r2)
  84dd64:	10803fcc 	andi	r2,r2,255
  84dd68:	10800160 	cmpeqi	r2,r2,5
  84dd6c:	1000051e 	bne	r2,zero,84dd84 <OSFlagQuery+0x6c>
        *perr = OS_ERR_EVENT_TYPE;
  84dd70:	e0bfff17 	ldw	r2,-4(fp)
  84dd74:	00c00044 	movi	r3,1
  84dd78:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84dd7c:	0005883a 	mov	r2,zero
  84dd80:	00001206 	br	84ddcc <OSFlagQuery+0xb4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84dd84:	0005303a 	rdctl	r2,status
  84dd88:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84dd8c:	e0fffc17 	ldw	r3,-16(fp)
  84dd90:	00bfff84 	movi	r2,-2
  84dd94:	1884703a 	and	r2,r3,r2
  84dd98:	1001703a 	wrctl	status,r2
  
  return context;
  84dd9c:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84dda0:	e0bffa15 	stw	r2,-24(fp)
    flags = pgrp->OSFlagFlags;
  84dda4:	e0bffe17 	ldw	r2,-8(fp)
  84dda8:	1080020b 	ldhu	r2,8(r2)
  84ddac:	e0bffb0d 	sth	r2,-20(fp)
  84ddb0:	e0bffa17 	ldw	r2,-24(fp)
  84ddb4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84ddb8:	e0bffd17 	ldw	r2,-12(fp)
  84ddbc:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84ddc0:	e0bfff17 	ldw	r2,-4(fp)
  84ddc4:	10000005 	stb	zero,0(r2)
    return (flags);                               /* Return the current value of the event flags       */
  84ddc8:	e0bffb0b 	ldhu	r2,-20(fp)
}
  84ddcc:	e037883a 	mov	sp,fp
  84ddd0:	df000017 	ldw	fp,0(sp)
  84ddd4:	dec00104 	addi	sp,sp,4
  84ddd8:	f800283a 	ret

0084dddc <OS_FlagBlock>:
* Note(s)    : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/

static  void  OS_FlagBlock (OS_FLAG_GRP *pgrp, OS_FLAG_NODE *pnode, OS_FLAGS flags, INT8U wait_type, INT16U timeout)
{
  84dddc:	defff804 	addi	sp,sp,-32
  84dde0:	df000715 	stw	fp,28(sp)
  84dde4:	df000704 	addi	fp,sp,28
  84dde8:	e13ffb15 	stw	r4,-20(fp)
  84ddec:	e17ffc15 	stw	r5,-16(fp)
  84ddf0:	3009883a 	mov	r4,r6
  84ddf4:	3807883a 	mov	r3,r7
  84ddf8:	e0800117 	ldw	r2,4(fp)
  84ddfc:	e13ffd0d 	sth	r4,-12(fp)
  84de00:	e0fffe05 	stb	r3,-8(fp)
  84de04:	e0bfff0d 	sth	r2,-4(fp)
    OS_FLAG_NODE  *pnode_next;
    INT8U          y;


    OSTCBCur->OSTCBStat      |= OS_STAT_FLAG;
  84de08:	d0a0a417 	ldw	r2,-32112(gp)
  84de0c:	d0e0a417 	ldw	r3,-32112(gp)
  84de10:	18c00c03 	ldbu	r3,48(r3)
  84de14:	18c00814 	ori	r3,r3,32
  84de18:	10c00c05 	stb	r3,48(r2)
    OSTCBCur->OSTCBStatPend   = OS_STAT_PEND_OK;
  84de1c:	d0a0a417 	ldw	r2,-32112(gp)
  84de20:	10000c45 	stb	zero,49(r2)
    OSTCBCur->OSTCBDly        = timeout;              /* Store timeout in task's TCB                   */
  84de24:	d0a0a417 	ldw	r2,-32112(gp)
  84de28:	e0ffff0b 	ldhu	r3,-4(fp)
  84de2c:	10c00b8d 	sth	r3,46(r2)
#if OS_TASK_DEL_EN > 0
    OSTCBCur->OSTCBFlagNode   = pnode;                /* TCB to link to node                           */
  84de30:	d0a0a417 	ldw	r2,-32112(gp)
  84de34:	e0fffc17 	ldw	r3,-16(fp)
  84de38:	10c00a15 	stw	r3,40(r2)
#endif
    pnode->OSFlagNodeFlags    = flags;                /* Save the flags that we need to wait for       */
  84de3c:	e0bffc17 	ldw	r2,-16(fp)
  84de40:	e0fffd0b 	ldhu	r3,-12(fp)
  84de44:	10c0040d 	sth	r3,16(r2)
    pnode->OSFlagNodeWaitType = wait_type;            /* Save the type of wait we are doing            */
  84de48:	e0bffc17 	ldw	r2,-16(fp)
  84de4c:	e0fffe03 	ldbu	r3,-8(fp)
  84de50:	10c00485 	stb	r3,18(r2)
    pnode->OSFlagNodeTCB      = (void *)OSTCBCur;     /* Link to task's TCB                            */
  84de54:	d0e0a417 	ldw	r3,-32112(gp)
  84de58:	e0bffc17 	ldw	r2,-16(fp)
  84de5c:	10c00215 	stw	r3,8(r2)
    pnode->OSFlagNodeNext     = pgrp->OSFlagWaitList; /* Add node at beginning of event flag wait list */
  84de60:	e0bffb17 	ldw	r2,-20(fp)
  84de64:	10c00117 	ldw	r3,4(r2)
  84de68:	e0bffc17 	ldw	r2,-16(fp)
  84de6c:	10c00015 	stw	r3,0(r2)
    pnode->OSFlagNodePrev     = (void *)0;
  84de70:	e0bffc17 	ldw	r2,-16(fp)
  84de74:	10000115 	stw	zero,4(r2)
    pnode->OSFlagNodeFlagGrp  = (void *)pgrp;         /* Link to Event Flag Group                      */
  84de78:	e0bffc17 	ldw	r2,-16(fp)
  84de7c:	e0fffb17 	ldw	r3,-20(fp)
  84de80:	10c00315 	stw	r3,12(r2)
    pnode_next                = (OS_FLAG_NODE *)pgrp->OSFlagWaitList;
  84de84:	e0bffb17 	ldw	r2,-20(fp)
  84de88:	10800117 	ldw	r2,4(r2)
  84de8c:	e0bff915 	stw	r2,-28(fp)
    if (pnode_next != (void *)0) {                    /* Is this the first NODE to insert?             */
  84de90:	e0bff917 	ldw	r2,-28(fp)
  84de94:	10000326 	beq	r2,zero,84dea4 <OS_FlagBlock+0xc8>
        pnode_next->OSFlagNodePrev = pnode;           /* No, link in doubly linked list                */
  84de98:	e0bff917 	ldw	r2,-28(fp)
  84de9c:	e0fffc17 	ldw	r3,-16(fp)
  84dea0:	10c00115 	stw	r3,4(r2)
    }
    pgrp->OSFlagWaitList = (void *)pnode;
  84dea4:	e0bffb17 	ldw	r2,-20(fp)
  84dea8:	e0fffc17 	ldw	r3,-16(fp)
  84deac:	10c00115 	stw	r3,4(r2)

    y            =  OSTCBCur->OSTCBY;                 /* Suspend current task until flag(s) received   */
  84deb0:	d0a0a417 	ldw	r2,-32112(gp)
  84deb4:	10800d03 	ldbu	r2,52(r2)
  84deb8:	e0bffa05 	stb	r2,-24(fp)
    OSRdyTbl[y] &= ~OSTCBCur->OSTCBBitX;
  84debc:	e0fffa03 	ldbu	r3,-24(fp)
  84dec0:	e13ffa03 	ldbu	r4,-24(fp)
  84dec4:	d0a0a144 	addi	r2,gp,-32123
  84dec8:	2085883a 	add	r2,r4,r2
  84decc:	10800003 	ldbu	r2,0(r2)
  84ded0:	1009883a 	mov	r4,r2
  84ded4:	d0a0a417 	ldw	r2,-32112(gp)
  84ded8:	10800d43 	ldbu	r2,53(r2)
  84dedc:	0084303a 	nor	r2,zero,r2
  84dee0:	2084703a 	and	r2,r4,r2
  84dee4:	1009883a 	mov	r4,r2
  84dee8:	d0a0a144 	addi	r2,gp,-32123
  84deec:	1885883a 	add	r2,r3,r2
  84def0:	11000005 	stb	r4,0(r2)
    if (OSRdyTbl[y] == 0x00) {
  84def4:	e0fffa03 	ldbu	r3,-24(fp)
  84def8:	d0a0a144 	addi	r2,gp,-32123
  84defc:	1885883a 	add	r2,r3,r2
  84df00:	10800003 	ldbu	r2,0(r2)
  84df04:	10803fcc 	andi	r2,r2,255
  84df08:	1000071e 	bne	r2,zero,84df28 <OS_FlagBlock+0x14c>
        OSRdyGrp &= ~OSTCBCur->OSTCBBitY;
  84df0c:	d0a0a417 	ldw	r2,-32112(gp)
  84df10:	10800d83 	ldbu	r2,54(r2)
  84df14:	0084303a 	nor	r2,zero,r2
  84df18:	1007883a 	mov	r3,r2
  84df1c:	d0a0a103 	ldbu	r2,-32124(gp)
  84df20:	1884703a 	and	r2,r3,r2
  84df24:	d0a0a105 	stb	r2,-32124(gp)
    }
}
  84df28:	0001883a 	nop
  84df2c:	e037883a 	mov	sp,fp
  84df30:	df000017 	ldw	fp,0(sp)
  84df34:	dec00104 	addi	sp,sp,4
  84df38:	f800283a 	ret

0084df3c <OS_FlagInit>:
* WARNING    : You MUST NOT call this function from your code.  This is an INTERNAL function to uC/OS-II.
*********************************************************************************************************
*/

void  OS_FlagInit (void)
{
  84df3c:	defffb04 	addi	sp,sp,-20
  84df40:	dfc00415 	stw	ra,16(sp)
  84df44:	df000315 	stw	fp,12(sp)
  84df48:	df000304 	addi	fp,sp,12
    INT16U       i;
    OS_FLAG_GRP *pgrp1;
    OS_FLAG_GRP *pgrp2;


    OS_MemClr((INT8U *)&OSFlagTbl[0], sizeof(OSFlagTbl));           /* Clear the flag group table      */
  84df4c:	0140dc04 	movi	r5,880
  84df50:	010021b4 	movhi	r4,134
  84df54:	210c4504 	addi	r4,r4,12564
  84df58:	084c1800 	call	84c180 <OS_MemClr>
    pgrp1 = &OSFlagTbl[0];
  84df5c:	008021b4 	movhi	r2,134
  84df60:	108c4504 	addi	r2,r2,12564
  84df64:	e0bffe15 	stw	r2,-8(fp)
    pgrp2 = &OSFlagTbl[1];
  84df68:	008021b4 	movhi	r2,134
  84df6c:	108c5004 	addi	r2,r2,12608
  84df70:	e0bfff15 	stw	r2,-4(fp)
    for (i = 0; i < (OS_MAX_FLAGS - 1); i++) {                      /* Init. list of free EVENT FLAGS  */
  84df74:	e03ffd0d 	sth	zero,-12(fp)
  84df78:	00001306 	br	84dfc8 <OS_FlagInit+0x8c>
        pgrp1->OSFlagType     = OS_EVENT_TYPE_UNUSED;
  84df7c:	e0bffe17 	ldw	r2,-8(fp)
  84df80:	10000005 	stb	zero,0(r2)
        pgrp1->OSFlagWaitList = (void *)pgrp2;
  84df84:	e0bffe17 	ldw	r2,-8(fp)
  84df88:	e0ffff17 	ldw	r3,-4(fp)
  84df8c:	10c00115 	stw	r3,4(r2)
#if OS_FLAG_NAME_SIZE > 1
        pgrp1->OSFlagName[0]  = '?';                                /* Unknown name                    */
  84df90:	e0bffe17 	ldw	r2,-8(fp)
  84df94:	00c00fc4 	movi	r3,63
  84df98:	10c00285 	stb	r3,10(r2)
        pgrp1->OSFlagName[1]  = OS_ASCII_NUL;
  84df9c:	e0bffe17 	ldw	r2,-8(fp)
  84dfa0:	100002c5 	stb	zero,11(r2)
#endif
        pgrp1++;
  84dfa4:	e0bffe17 	ldw	r2,-8(fp)
  84dfa8:	10800b04 	addi	r2,r2,44
  84dfac:	e0bffe15 	stw	r2,-8(fp)
        pgrp2++;
  84dfb0:	e0bfff17 	ldw	r2,-4(fp)
  84dfb4:	10800b04 	addi	r2,r2,44
  84dfb8:	e0bfff15 	stw	r2,-4(fp)


    OS_MemClr((INT8U *)&OSFlagTbl[0], sizeof(OSFlagTbl));           /* Clear the flag group table      */
    pgrp1 = &OSFlagTbl[0];
    pgrp2 = &OSFlagTbl[1];
    for (i = 0; i < (OS_MAX_FLAGS - 1); i++) {                      /* Init. list of free EVENT FLAGS  */
  84dfbc:	e0bffd0b 	ldhu	r2,-12(fp)
  84dfc0:	10800044 	addi	r2,r2,1
  84dfc4:	e0bffd0d 	sth	r2,-12(fp)
  84dfc8:	e0bffd0b 	ldhu	r2,-12(fp)
  84dfcc:	108004f0 	cmpltui	r2,r2,19
  84dfd0:	103fea1e 	bne	r2,zero,84df7c <__alt_mem_epcs_flash_controller_0+0xff844f7c>
        pgrp1->OSFlagName[1]  = OS_ASCII_NUL;
#endif
        pgrp1++;
        pgrp2++;
    }
    pgrp1->OSFlagType     = OS_EVENT_TYPE_UNUSED;
  84dfd4:	e0bffe17 	ldw	r2,-8(fp)
  84dfd8:	10000005 	stb	zero,0(r2)
    pgrp1->OSFlagWaitList = (void *)0;
  84dfdc:	e0bffe17 	ldw	r2,-8(fp)
  84dfe0:	10000115 	stw	zero,4(r2)
#if OS_FLAG_NAME_SIZE > 1
    pgrp1->OSFlagName[0]  = '?';                                    /* Unknown name                    */
  84dfe4:	e0bffe17 	ldw	r2,-8(fp)
  84dfe8:	00c00fc4 	movi	r3,63
  84dfec:	10c00285 	stb	r3,10(r2)
    pgrp1->OSFlagName[1]  = OS_ASCII_NUL;
  84dff0:	e0bffe17 	ldw	r2,-8(fp)
  84dff4:	100002c5 	stb	zero,11(r2)
#endif
    OSFlagFreeList        = &OSFlagTbl[0];
  84dff8:	008021b4 	movhi	r2,134
  84dffc:	108c4504 	addi	r2,r2,12564
  84e000:	d0a0a615 	stw	r2,-32104(gp)
#endif
}
  84e004:	0001883a 	nop
  84e008:	e037883a 	mov	sp,fp
  84e00c:	dfc00117 	ldw	ra,4(sp)
  84e010:	df000017 	ldw	fp,0(sp)
  84e014:	dec00204 	addi	sp,sp,8
  84e018:	f800283a 	ret

0084e01c <OS_FlagTaskRdy>:
*              2) This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/

static  BOOLEAN  OS_FlagTaskRdy (OS_FLAG_NODE *pnode, OS_FLAGS flags_rdy)
{
  84e01c:	defffa04 	addi	sp,sp,-24
  84e020:	dfc00515 	stw	ra,20(sp)
  84e024:	df000415 	stw	fp,16(sp)
  84e028:	df000404 	addi	fp,sp,16
  84e02c:	e13ffe15 	stw	r4,-8(fp)
  84e030:	2805883a 	mov	r2,r5
  84e034:	e0bfff0d 	sth	r2,-4(fp)
    OS_TCB   *ptcb;
    BOOLEAN   sched;


    ptcb                 = (OS_TCB *)pnode->OSFlagNodeTCB; /* Point to TCB of waiting task             */
  84e038:	e0bffe17 	ldw	r2,-8(fp)
  84e03c:	10800217 	ldw	r2,8(r2)
  84e040:	e0bffd15 	stw	r2,-12(fp)
    ptcb->OSTCBDly       = 0;
  84e044:	e0bffd17 	ldw	r2,-12(fp)
  84e048:	10000b8d 	sth	zero,46(r2)
    ptcb->OSTCBFlagsRdy  = flags_rdy;
  84e04c:	e0bffd17 	ldw	r2,-12(fp)
  84e050:	e0ffff0b 	ldhu	r3,-4(fp)
  84e054:	10c00b0d 	sth	r3,44(r2)
    ptcb->OSTCBStat     &= ~(INT8U)OS_STAT_FLAG;
  84e058:	e0bffd17 	ldw	r2,-12(fp)
  84e05c:	10c00c03 	ldbu	r3,48(r2)
  84e060:	00bff7c4 	movi	r2,-33
  84e064:	1884703a 	and	r2,r3,r2
  84e068:	1007883a 	mov	r3,r2
  84e06c:	e0bffd17 	ldw	r2,-12(fp)
  84e070:	10c00c05 	stb	r3,48(r2)
    ptcb->OSTCBStatPend  = OS_STAT_PEND_OK;
  84e074:	e0bffd17 	ldw	r2,-12(fp)
  84e078:	10000c45 	stb	zero,49(r2)
    if (ptcb->OSTCBStat == OS_STAT_RDY) {                  /* Task now ready?                          */
  84e07c:	e0bffd17 	ldw	r2,-12(fp)
  84e080:	10800c03 	ldbu	r2,48(r2)
  84e084:	10803fcc 	andi	r2,r2,255
  84e088:	1000181e 	bne	r2,zero,84e0ec <OS_FlagTaskRdy+0xd0>
        OSRdyGrp               |= ptcb->OSTCBBitY;         /* Put task into ready list                 */
  84e08c:	e0bffd17 	ldw	r2,-12(fp)
  84e090:	10c00d83 	ldbu	r3,54(r2)
  84e094:	d0a0a103 	ldbu	r2,-32124(gp)
  84e098:	1884b03a 	or	r2,r3,r2
  84e09c:	d0a0a105 	stb	r2,-32124(gp)
        OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
  84e0a0:	e0bffd17 	ldw	r2,-12(fp)
  84e0a4:	10800d03 	ldbu	r2,52(r2)
  84e0a8:	10c03fcc 	andi	r3,r2,255
  84e0ac:	e0bffd17 	ldw	r2,-12(fp)
  84e0b0:	10800d03 	ldbu	r2,52(r2)
  84e0b4:	11003fcc 	andi	r4,r2,255
  84e0b8:	d0a0a144 	addi	r2,gp,-32123
  84e0bc:	2085883a 	add	r2,r4,r2
  84e0c0:	11000003 	ldbu	r4,0(r2)
  84e0c4:	e0bffd17 	ldw	r2,-12(fp)
  84e0c8:	10800d43 	ldbu	r2,53(r2)
  84e0cc:	2084b03a 	or	r2,r4,r2
  84e0d0:	1009883a 	mov	r4,r2
  84e0d4:	d0a0a144 	addi	r2,gp,-32123
  84e0d8:	1885883a 	add	r2,r3,r2
  84e0dc:	11000005 	stb	r4,0(r2)
        sched                   = OS_TRUE;
  84e0e0:	00800044 	movi	r2,1
  84e0e4:	e0bffc05 	stb	r2,-16(fp)
  84e0e8:	00000106 	br	84e0f0 <OS_FlagTaskRdy+0xd4>
    } else {
        sched                   = OS_FALSE;
  84e0ec:	e03ffc05 	stb	zero,-16(fp)
    }
    OS_FlagUnlink(pnode);
  84e0f0:	e13ffe17 	ldw	r4,-8(fp)
  84e0f4:	084e1100 	call	84e110 <OS_FlagUnlink>
    return (sched);
  84e0f8:	e0bffc03 	ldbu	r2,-16(fp)
}
  84e0fc:	e037883a 	mov	sp,fp
  84e100:	dfc00117 	ldw	ra,4(sp)
  84e104:	df000017 	ldw	fp,0(sp)
  84e108:	dec00204 	addi	sp,sp,8
  84e10c:	f800283a 	ret

0084e110 <OS_FlagUnlink>:
*              2) This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/

void  OS_FlagUnlink (OS_FLAG_NODE *pnode)
{
  84e110:	defffa04 	addi	sp,sp,-24
  84e114:	df000515 	stw	fp,20(sp)
  84e118:	df000504 	addi	fp,sp,20
  84e11c:	e13fff15 	stw	r4,-4(fp)
    OS_FLAG_GRP  *pgrp;
    OS_FLAG_NODE *pnode_prev;
    OS_FLAG_NODE *pnode_next;


    pnode_prev = (OS_FLAG_NODE *)pnode->OSFlagNodePrev;
  84e120:	e0bfff17 	ldw	r2,-4(fp)
  84e124:	10800117 	ldw	r2,4(r2)
  84e128:	e0bffb15 	stw	r2,-20(fp)
    pnode_next = (OS_FLAG_NODE *)pnode->OSFlagNodeNext;
  84e12c:	e0bfff17 	ldw	r2,-4(fp)
  84e130:	10800017 	ldw	r2,0(r2)
  84e134:	e0bffc15 	stw	r2,-16(fp)
    if (pnode_prev == (OS_FLAG_NODE *)0) {                      /* Is it first node in wait list?      */
  84e138:	e0bffb17 	ldw	r2,-20(fp)
  84e13c:	10000b1e 	bne	r2,zero,84e16c <OS_FlagUnlink+0x5c>
        pgrp                 = (OS_FLAG_GRP *)pnode->OSFlagNodeFlagGrp;
  84e140:	e0bfff17 	ldw	r2,-4(fp)
  84e144:	10800317 	ldw	r2,12(r2)
  84e148:	e0bffd15 	stw	r2,-12(fp)
        pgrp->OSFlagWaitList = (void *)pnode_next;              /*      Update list for new 1st node   */
  84e14c:	e0bffd17 	ldw	r2,-12(fp)
  84e150:	e0fffc17 	ldw	r3,-16(fp)
  84e154:	10c00115 	stw	r3,4(r2)
        if (pnode_next != (OS_FLAG_NODE *)0) {
  84e158:	e0bffc17 	ldw	r2,-16(fp)
  84e15c:	10000b26 	beq	r2,zero,84e18c <OS_FlagUnlink+0x7c>
            pnode_next->OSFlagNodePrev = (OS_FLAG_NODE *)0;     /*      Link new 1st node PREV to NULL */
  84e160:	e0bffc17 	ldw	r2,-16(fp)
  84e164:	10000115 	stw	zero,4(r2)
  84e168:	00000806 	br	84e18c <OS_FlagUnlink+0x7c>
        }
    } else {                                                    /* No,  A node somewhere in the list   */
        pnode_prev->OSFlagNodeNext = pnode_next;                /*      Link around the node to unlink */
  84e16c:	e0bffb17 	ldw	r2,-20(fp)
  84e170:	e0fffc17 	ldw	r3,-16(fp)
  84e174:	10c00015 	stw	r3,0(r2)
        if (pnode_next != (OS_FLAG_NODE *)0) {                  /*      Was this the LAST node?        */
  84e178:	e0bffc17 	ldw	r2,-16(fp)
  84e17c:	10000326 	beq	r2,zero,84e18c <OS_FlagUnlink+0x7c>
            pnode_next->OSFlagNodePrev = pnode_prev;            /*      No, Link around current node   */
  84e180:	e0bffc17 	ldw	r2,-16(fp)
  84e184:	e0fffb17 	ldw	r3,-20(fp)
  84e188:	10c00115 	stw	r3,4(r2)
        }
    }
#if OS_TASK_DEL_EN > 0
    ptcb                = (OS_TCB *)pnode->OSFlagNodeTCB;
  84e18c:	e0bfff17 	ldw	r2,-4(fp)
  84e190:	10800217 	ldw	r2,8(r2)
  84e194:	e0bffe15 	stw	r2,-8(fp)
    ptcb->OSTCBFlagNode = (OS_FLAG_NODE *)0;
  84e198:	e0bffe17 	ldw	r2,-8(fp)
  84e19c:	10000a15 	stw	zero,40(r2)
#endif
}
  84e1a0:	0001883a 	nop
  84e1a4:	e037883a 	mov	sp,fp
  84e1a8:	df000017 	ldw	fp,0(sp)
  84e1ac:	dec00104 	addi	sp,sp,4
  84e1b0:	f800283a 	ret

0084e1b4 <OSMemCreate>:
*                              free partition is available.
*********************************************************************************************************
*/

OS_MEM  *OSMemCreate (void *addr, INT32U nblks, INT32U blksize, INT8U *perr)
{
  84e1b4:	defff404 	addi	sp,sp,-48
  84e1b8:	df000b15 	stw	fp,44(sp)
  84e1bc:	df000b04 	addi	fp,sp,44
  84e1c0:	e13ffc15 	stw	r4,-16(fp)
  84e1c4:	e17ffd15 	stw	r5,-12(fp)
  84e1c8:	e1bffe15 	stw	r6,-8(fp)
  84e1cc:	e1ffff15 	stw	r7,-4(fp)
    OS_MEM    *pmem;
    INT8U     *pblk;
    void     **plink;
    INT32U     i;
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84e1d0:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0              
    if (perr == (INT8U *)0) {                         /* Validate 'perr'                               */
  84e1d4:	e0bfff17 	ldw	r2,-4(fp)
  84e1d8:	1000021e 	bne	r2,zero,84e1e4 <OSMemCreate+0x30>
        return ((OS_MEM *)0);
  84e1dc:	0005883a 	mov	r2,zero
  84e1e0:	00006506 	br	84e378 <OSMemCreate+0x1c4>
    }
    if (addr == (void *)0) {                          /* Must pass a valid address for the memory part.*/
  84e1e4:	e0bffc17 	ldw	r2,-16(fp)
  84e1e8:	1000051e 	bne	r2,zero,84e200 <OSMemCreate+0x4c>
        *perr = OS_ERR_MEM_INVALID_ADDR;
  84e1ec:	e0bfff17 	ldw	r2,-4(fp)
  84e1f0:	00c01884 	movi	r3,98
  84e1f4:	10c00005 	stb	r3,0(r2)
        return ((OS_MEM *)0);
  84e1f8:	0005883a 	mov	r2,zero
  84e1fc:	00005e06 	br	84e378 <OSMemCreate+0x1c4>
    }
    if (((INT32U)addr & (sizeof(void *) - 1)) != 0){  /* Must be pointer size aligned                  */
  84e200:	e0bffc17 	ldw	r2,-16(fp)
  84e204:	108000cc 	andi	r2,r2,3
  84e208:	10000526 	beq	r2,zero,84e220 <OSMemCreate+0x6c>
        *perr = OS_ERR_MEM_INVALID_ADDR;
  84e20c:	e0bfff17 	ldw	r2,-4(fp)
  84e210:	00c01884 	movi	r3,98
  84e214:	10c00005 	stb	r3,0(r2)
        return ((OS_MEM *)0);
  84e218:	0005883a 	mov	r2,zero
  84e21c:	00005606 	br	84e378 <OSMemCreate+0x1c4>
    }
    if (nblks < 2) {                                  /* Must have at least 2 blocks per partition     */
  84e220:	e0bffd17 	ldw	r2,-12(fp)
  84e224:	108000a8 	cmpgeui	r2,r2,2
  84e228:	1000051e 	bne	r2,zero,84e240 <OSMemCreate+0x8c>
        *perr = OS_ERR_MEM_INVALID_BLKS;
  84e22c:	e0bfff17 	ldw	r2,-4(fp)
  84e230:	00c016c4 	movi	r3,91
  84e234:	10c00005 	stb	r3,0(r2)
        return ((OS_MEM *)0);
  84e238:	0005883a 	mov	r2,zero
  84e23c:	00004e06 	br	84e378 <OSMemCreate+0x1c4>
    }
    if (blksize < sizeof(void *)) {                   /* Must contain space for at least a pointer     */
  84e240:	e0bffe17 	ldw	r2,-8(fp)
  84e244:	10800128 	cmpgeui	r2,r2,4
  84e248:	1000051e 	bne	r2,zero,84e260 <OSMemCreate+0xac>
        *perr = OS_ERR_MEM_INVALID_SIZE;
  84e24c:	e0bfff17 	ldw	r2,-4(fp)
  84e250:	00c01704 	movi	r3,92
  84e254:	10c00005 	stb	r3,0(r2)
        return ((OS_MEM *)0);
  84e258:	0005883a 	mov	r2,zero
  84e25c:	00004606 	br	84e378 <OSMemCreate+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e260:	0005303a 	rdctl	r2,status
  84e264:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e268:	e0fffb17 	ldw	r3,-20(fp)
  84e26c:	00bfff84 	movi	r2,-2
  84e270:	1884703a 	and	r2,r3,r2
  84e274:	1001703a 	wrctl	status,r2
  
  return context;
  84e278:	e0bffb17 	ldw	r2,-20(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  84e27c:	e0bff815 	stw	r2,-32(fp)
    pmem = OSMemFreeList;                             /* Get next free memory partition                */
  84e280:	d0a09e17 	ldw	r2,-32136(gp)
  84e284:	e0bffa15 	stw	r2,-24(fp)
    if (OSMemFreeList != (OS_MEM *)0) {               /* See if pool of free partitions was empty      */
  84e288:	d0a09e17 	ldw	r2,-32136(gp)
  84e28c:	10000326 	beq	r2,zero,84e29c <OSMemCreate+0xe8>
        OSMemFreeList = (OS_MEM *)OSMemFreeList->OSMemFreeList;
  84e290:	d0a09e17 	ldw	r2,-32136(gp)
  84e294:	10800117 	ldw	r2,4(r2)
  84e298:	d0a09e15 	stw	r2,-32136(gp)
  84e29c:	e0bff817 	ldw	r2,-32(fp)
  84e2a0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84e2a4:	e0bff917 	ldw	r2,-28(fp)
  84e2a8:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    if (pmem == (OS_MEM *)0) {                        /* See if we have a memory partition             */
  84e2ac:	e0bffa17 	ldw	r2,-24(fp)
  84e2b0:	1000051e 	bne	r2,zero,84e2c8 <OSMemCreate+0x114>
        *perr = OS_ERR_MEM_INVALID_PART;
  84e2b4:	e0bfff17 	ldw	r2,-4(fp)
  84e2b8:	00c01684 	movi	r3,90
  84e2bc:	10c00005 	stb	r3,0(r2)
        return ((OS_MEM *)0);
  84e2c0:	0005883a 	mov	r2,zero
  84e2c4:	00002c06 	br	84e378 <OSMemCreate+0x1c4>
    }
    plink = (void **)addr;                            /* Create linked list of free memory blocks      */
  84e2c8:	e0bffc17 	ldw	r2,-16(fp)
  84e2cc:	e0bff615 	stw	r2,-40(fp)
    pblk  = (INT8U *)((INT32U)addr + blksize);
  84e2d0:	e0fffc17 	ldw	r3,-16(fp)
  84e2d4:	e0bffe17 	ldw	r2,-8(fp)
  84e2d8:	1885883a 	add	r2,r3,r2
  84e2dc:	e0bff515 	stw	r2,-44(fp)
    for (i = 0; i < (nblks - 1); i++) {
  84e2e0:	e03ff715 	stw	zero,-36(fp)
  84e2e4:	00000c06 	br	84e318 <OSMemCreate+0x164>
       *plink = (void *)pblk;                         /* Save pointer to NEXT block in CURRENT block   */
  84e2e8:	e0bff617 	ldw	r2,-40(fp)
  84e2ec:	e0fff517 	ldw	r3,-44(fp)
  84e2f0:	10c00015 	stw	r3,0(r2)
        plink = (void **)pblk;                        /* Position to  NEXT      block                  */
  84e2f4:	e0bff517 	ldw	r2,-44(fp)
  84e2f8:	e0bff615 	stw	r2,-40(fp)
        pblk  = (INT8U *)((INT32U)pblk + blksize);    /* Point to the FOLLOWING block                  */
  84e2fc:	e0fff517 	ldw	r3,-44(fp)
  84e300:	e0bffe17 	ldw	r2,-8(fp)
  84e304:	1885883a 	add	r2,r3,r2
  84e308:	e0bff515 	stw	r2,-44(fp)
        *perr = OS_ERR_MEM_INVALID_PART;
        return ((OS_MEM *)0);
    }
    plink = (void **)addr;                            /* Create linked list of free memory blocks      */
    pblk  = (INT8U *)((INT32U)addr + blksize);
    for (i = 0; i < (nblks - 1); i++) {
  84e30c:	e0bff717 	ldw	r2,-36(fp)
  84e310:	10800044 	addi	r2,r2,1
  84e314:	e0bff715 	stw	r2,-36(fp)
  84e318:	e0bffd17 	ldw	r2,-12(fp)
  84e31c:	10bfffc4 	addi	r2,r2,-1
  84e320:	e0fff717 	ldw	r3,-36(fp)
  84e324:	18bff036 	bltu	r3,r2,84e2e8 <__alt_mem_epcs_flash_controller_0+0xff8452e8>
       *plink = (void *)pblk;                         /* Save pointer to NEXT block in CURRENT block   */
        plink = (void **)pblk;                        /* Position to  NEXT      block                  */
        pblk  = (INT8U *)((INT32U)pblk + blksize);    /* Point to the FOLLOWING block                  */
    }
    *plink              = (void *)0;                  /* Last memory block points to NULL              */
  84e328:	e0bff617 	ldw	r2,-40(fp)
  84e32c:	10000015 	stw	zero,0(r2)
    pmem->OSMemAddr     = addr;                       /* Store start address of memory partition       */
  84e330:	e0bffa17 	ldw	r2,-24(fp)
  84e334:	e0fffc17 	ldw	r3,-16(fp)
  84e338:	10c00015 	stw	r3,0(r2)
    pmem->OSMemFreeList = addr;                       /* Initialize pointer to pool of free blocks     */
  84e33c:	e0bffa17 	ldw	r2,-24(fp)
  84e340:	e0fffc17 	ldw	r3,-16(fp)
  84e344:	10c00115 	stw	r3,4(r2)
    pmem->OSMemNFree    = nblks;                      /* Store number of free blocks in MCB            */
  84e348:	e0bffa17 	ldw	r2,-24(fp)
  84e34c:	e0fffd17 	ldw	r3,-12(fp)
  84e350:	10c00415 	stw	r3,16(r2)
    pmem->OSMemNBlks    = nblks;
  84e354:	e0bffa17 	ldw	r2,-24(fp)
  84e358:	e0fffd17 	ldw	r3,-12(fp)
  84e35c:	10c00315 	stw	r3,12(r2)
    pmem->OSMemBlkSize  = blksize;                    /* Store block size of each memory blocks        */
  84e360:	e0bffa17 	ldw	r2,-24(fp)
  84e364:	e0fffe17 	ldw	r3,-8(fp)
  84e368:	10c00215 	stw	r3,8(r2)
    *perr               = OS_ERR_NONE;
  84e36c:	e0bfff17 	ldw	r2,-4(fp)
  84e370:	10000005 	stb	zero,0(r2)
    return (pmem);
  84e374:	e0bffa17 	ldw	r2,-24(fp)
}
  84e378:	e037883a 	mov	sp,fp
  84e37c:	df000017 	ldw	fp,0(sp)
  84e380:	dec00104 	addi	sp,sp,4
  84e384:	f800283a 	ret

0084e388 <OSMemGet>:
*               A pointer to NULL if an error is detected
*********************************************************************************************************
*/

void  *OSMemGet (OS_MEM *pmem, INT8U *perr)
{
  84e388:	defff804 	addi	sp,sp,-32
  84e38c:	df000715 	stw	fp,28(sp)
  84e390:	df000704 	addi	fp,sp,28
  84e394:	e13ffe15 	stw	r4,-8(fp)
  84e398:	e17fff15 	stw	r5,-4(fp)
    void      *pblk;
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84e39c:	e03ff915 	stw	zero,-28(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                         /* Validate 'perr'                               */
  84e3a0:	e0bfff17 	ldw	r2,-4(fp)
  84e3a4:	1000021e 	bne	r2,zero,84e3b0 <OSMemGet+0x28>
        return ((void *)0);
  84e3a8:	0005883a 	mov	r2,zero
  84e3ac:	00002e06 	br	84e468 <OSMemGet+0xe0>
    }
    if (pmem == (OS_MEM *)0) {                        /* Must point to a valid memory partition        */
  84e3b0:	e0bffe17 	ldw	r2,-8(fp)
  84e3b4:	1000051e 	bne	r2,zero,84e3cc <OSMemGet+0x44>
        *perr = OS_ERR_MEM_INVALID_PMEM;
  84e3b8:	e0bfff17 	ldw	r2,-4(fp)
  84e3bc:	00c01804 	movi	r3,96
  84e3c0:	10c00005 	stb	r3,0(r2)
        return ((void *)0);
  84e3c4:	0005883a 	mov	r2,zero
  84e3c8:	00002706 	br	84e468 <OSMemGet+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e3cc:	0005303a 	rdctl	r2,status
  84e3d0:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e3d4:	e0fffd17 	ldw	r3,-12(fp)
  84e3d8:	00bfff84 	movi	r2,-2
  84e3dc:	1884703a 	and	r2,r3,r2
  84e3e0:	1001703a 	wrctl	status,r2
  
  return context;
  84e3e4:	e0bffd17 	ldw	r2,-12(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  84e3e8:	e0bff915 	stw	r2,-28(fp)
    if (pmem->OSMemNFree > 0) {                       /* See if there are any free memory blocks       */
  84e3ec:	e0bffe17 	ldw	r2,-8(fp)
  84e3f0:	10800417 	ldw	r2,16(r2)
  84e3f4:	10001426 	beq	r2,zero,84e448 <OSMemGet+0xc0>
        pblk                = pmem->OSMemFreeList;    /* Yes, point to next free memory block          */
  84e3f8:	e0bffe17 	ldw	r2,-8(fp)
  84e3fc:	10800117 	ldw	r2,4(r2)
  84e400:	e0bffb15 	stw	r2,-20(fp)
        pmem->OSMemFreeList = *(void **)pblk;         /*      Adjust pointer to new free list          */
  84e404:	e0bffb17 	ldw	r2,-20(fp)
  84e408:	10c00017 	ldw	r3,0(r2)
  84e40c:	e0bffe17 	ldw	r2,-8(fp)
  84e410:	10c00115 	stw	r3,4(r2)
        pmem->OSMemNFree--;                           /*      One less memory block in this partition  */
  84e414:	e0bffe17 	ldw	r2,-8(fp)
  84e418:	10800417 	ldw	r2,16(r2)
  84e41c:	10ffffc4 	addi	r3,r2,-1
  84e420:	e0bffe17 	ldw	r2,-8(fp)
  84e424:	10c00415 	stw	r3,16(r2)
  84e428:	e0bff917 	ldw	r2,-28(fp)
  84e42c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84e430:	e0bffa17 	ldw	r2,-24(fp)
  84e434:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_NONE;                          /*      No error                                 */
  84e438:	e0bfff17 	ldw	r2,-4(fp)
  84e43c:	10000005 	stb	zero,0(r2)
        return (pblk);                                /*      Return memory block to caller            */
  84e440:	e0bffb17 	ldw	r2,-20(fp)
  84e444:	00000806 	br	84e468 <OSMemGet+0xe0>
  84e448:	e0bff917 	ldw	r2,-28(fp)
  84e44c:	e0bffc15 	stw	r2,-16(fp)
  84e450:	e0bffc17 	ldw	r2,-16(fp)
  84e454:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_MEM_NO_FREE_BLKS;                  /* No,  Notify caller of empty memory partition  */
  84e458:	e0bfff17 	ldw	r2,-4(fp)
  84e45c:	00c01744 	movi	r3,93
  84e460:	10c00005 	stb	r3,0(r2)
    return ((void *)0);                               /*      Return NULL pointer to caller            */
  84e464:	0005883a 	mov	r2,zero
}
  84e468:	e037883a 	mov	sp,fp
  84e46c:	df000017 	ldw	fp,0(sp)
  84e470:	dec00104 	addi	sp,sp,4
  84e474:	f800283a 	ret

0084e478 <OSMemNameGet>:
*********************************************************************************************************
*/

#if OS_MEM_NAME_SIZE > 1
INT8U  OSMemNameGet (OS_MEM *pmem, INT8U *pname, INT8U *perr)
{
  84e478:	defff704 	addi	sp,sp,-36
  84e47c:	dfc00815 	stw	ra,32(sp)
  84e480:	df000715 	stw	fp,28(sp)
  84e484:	df000704 	addi	fp,sp,28
  84e488:	e13ffd15 	stw	r4,-12(fp)
  84e48c:	e17ffe15 	stw	r5,-8(fp)
  84e490:	e1bfff15 	stw	r6,-4(fp)
    INT8U      len;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84e494:	e03ff915 	stw	zero,-28(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84e498:	e0bfff17 	ldw	r2,-4(fp)
  84e49c:	1000021e 	bne	r2,zero,84e4a8 <OSMemNameGet+0x30>
        return (0);
  84e4a0:	0005883a 	mov	r2,zero
  84e4a4:	00002b06 	br	84e554 <OSMemNameGet+0xdc>
    }
    if (pmem == (OS_MEM *)0) {                   /* Is 'pmem' a NULL pointer?                          */
  84e4a8:	e0bffd17 	ldw	r2,-12(fp)
  84e4ac:	1000051e 	bne	r2,zero,84e4c4 <OSMemNameGet+0x4c>
        *perr = OS_ERR_MEM_INVALID_PMEM;
  84e4b0:	e0bfff17 	ldw	r2,-4(fp)
  84e4b4:	00c01804 	movi	r3,96
  84e4b8:	10c00005 	stb	r3,0(r2)
        return (0);
  84e4bc:	0005883a 	mov	r2,zero
  84e4c0:	00002406 	br	84e554 <OSMemNameGet+0xdc>
    }
    if (pname == (INT8U *)0) {                   /* Is 'pname' a NULL pointer?                         */
  84e4c4:	e0bffe17 	ldw	r2,-8(fp)
  84e4c8:	1000051e 	bne	r2,zero,84e4e0 <OSMemNameGet+0x68>
        *perr = OS_ERR_PNAME_NULL;
  84e4cc:	e0bfff17 	ldw	r2,-4(fp)
  84e4d0:	00c00304 	movi	r3,12
  84e4d4:	10c00005 	stb	r3,0(r2)
        return (0);
  84e4d8:	0005883a 	mov	r2,zero
  84e4dc:	00001d06 	br	84e554 <OSMemNameGet+0xdc>
    }
#endif
    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  84e4e0:	d0a0a303 	ldbu	r2,-32116(gp)
  84e4e4:	10803fcc 	andi	r2,r2,255
  84e4e8:	10000526 	beq	r2,zero,84e500 <OSMemNameGet+0x88>
        *perr = OS_ERR_NAME_GET_ISR;
  84e4ec:	e0bfff17 	ldw	r2,-4(fp)
  84e4f0:	00c00444 	movi	r3,17
  84e4f4:	10c00005 	stb	r3,0(r2)
        return (0);
  84e4f8:	0005883a 	mov	r2,zero
  84e4fc:	00001506 	br	84e554 <OSMemNameGet+0xdc>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e500:	0005303a 	rdctl	r2,status
  84e504:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e508:	e0fffb17 	ldw	r3,-20(fp)
  84e50c:	00bfff84 	movi	r2,-2
  84e510:	1884703a 	and	r2,r3,r2
  84e514:	1001703a 	wrctl	status,r2
  
  return context;
  84e518:	e0bffb17 	ldw	r2,-20(fp)
    }
    OS_ENTER_CRITICAL();
  84e51c:	e0bff915 	stw	r2,-28(fp)
    len   = OS_StrCopy(pname, pmem->OSMemName);  /* Copy name from OS_MEM                              */
  84e520:	e0bffd17 	ldw	r2,-12(fp)
  84e524:	10800504 	addi	r2,r2,20
  84e528:	100b883a 	mov	r5,r2
  84e52c:	e13ffe17 	ldw	r4,-8(fp)
  84e530:	084c3800 	call	84c380 <OS_StrCopy>
  84e534:	e0bffa05 	stb	r2,-24(fp)
  84e538:	e0bff917 	ldw	r2,-28(fp)
  84e53c:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84e540:	e0bffc17 	ldw	r2,-16(fp)
  84e544:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84e548:	e0bfff17 	ldw	r2,-4(fp)
  84e54c:	10000005 	stb	zero,0(r2)
    return (len);
  84e550:	e0bffa03 	ldbu	r2,-24(fp)
}
  84e554:	e037883a 	mov	sp,fp
  84e558:	dfc00117 	ldw	ra,4(sp)
  84e55c:	df000017 	ldw	fp,0(sp)
  84e560:	dec00204 	addi	sp,sp,8
  84e564:	f800283a 	ret

0084e568 <OSMemNameSet>:
*********************************************************************************************************
*/

#if OS_MEM_NAME_SIZE > 1
void  OSMemNameSet (OS_MEM *pmem, INT8U *pname, INT8U *perr)
{
  84e568:	defff604 	addi	sp,sp,-40
  84e56c:	dfc00915 	stw	ra,36(sp)
  84e570:	df000815 	stw	fp,32(sp)
  84e574:	df000804 	addi	fp,sp,32
  84e578:	e13ffd15 	stw	r4,-12(fp)
  84e57c:	e17ffe15 	stw	r5,-8(fp)
  84e580:	e1bfff15 	stw	r6,-4(fp)
    INT8U      len;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84e584:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84e588:	e0bfff17 	ldw	r2,-4(fp)
  84e58c:	10003526 	beq	r2,zero,84e664 <OSMemNameSet+0xfc>
        return;
    }
    if (pmem == (OS_MEM *)0) {                   /* Is 'pmem' a NULL pointer?                          */
  84e590:	e0bffd17 	ldw	r2,-12(fp)
  84e594:	1000041e 	bne	r2,zero,84e5a8 <OSMemNameSet+0x40>
        *perr = OS_ERR_MEM_INVALID_PMEM;
  84e598:	e0bfff17 	ldw	r2,-4(fp)
  84e59c:	00c01804 	movi	r3,96
  84e5a0:	10c00005 	stb	r3,0(r2)
        return;
  84e5a4:	00003006 	br	84e668 <OSMemNameSet+0x100>
    }
    if (pname == (INT8U *)0) {                   /* Is 'pname' a NULL pointer?                         */
  84e5a8:	e0bffe17 	ldw	r2,-8(fp)
  84e5ac:	1000041e 	bne	r2,zero,84e5c0 <OSMemNameSet+0x58>
        *perr = OS_ERR_PNAME_NULL;
  84e5b0:	e0bfff17 	ldw	r2,-4(fp)
  84e5b4:	00c00304 	movi	r3,12
  84e5b8:	10c00005 	stb	r3,0(r2)
        return;
  84e5bc:	00002a06 	br	84e668 <OSMemNameSet+0x100>
    }
#endif
    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  84e5c0:	d0a0a303 	ldbu	r2,-32116(gp)
  84e5c4:	10803fcc 	andi	r2,r2,255
  84e5c8:	10000426 	beq	r2,zero,84e5dc <OSMemNameSet+0x74>
        *perr = OS_ERR_NAME_SET_ISR;
  84e5cc:	e0bfff17 	ldw	r2,-4(fp)
  84e5d0:	00c00484 	movi	r3,18
  84e5d4:	10c00005 	stb	r3,0(r2)
        return;
  84e5d8:	00002306 	br	84e668 <OSMemNameSet+0x100>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e5dc:	0005303a 	rdctl	r2,status
  84e5e0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e5e4:	e0fffc17 	ldw	r3,-16(fp)
  84e5e8:	00bfff84 	movi	r2,-2
  84e5ec:	1884703a 	and	r2,r3,r2
  84e5f0:	1001703a 	wrctl	status,r2
  
  return context;
  84e5f4:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84e5f8:	e0bff815 	stw	r2,-32(fp)
    len = OS_StrLen(pname);                      /* Can we fit the string in the storage area?         */
  84e5fc:	e13ffe17 	ldw	r4,-8(fp)
  84e600:	084c3f40 	call	84c3f4 <OS_StrLen>
  84e604:	e0bffa05 	stb	r2,-24(fp)
    if (len > (OS_MEM_NAME_SIZE - 1)) {          /* No                                                 */
  84e608:	e0bffa03 	ldbu	r2,-24(fp)
  84e60c:	10800830 	cmpltui	r2,r2,32
  84e610:	1000081e 	bne	r2,zero,84e634 <OSMemNameSet+0xcc>
  84e614:	e0bff817 	ldw	r2,-32(fp)
  84e618:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84e61c:	e0bff917 	ldw	r2,-28(fp)
  84e620:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_MEM_NAME_TOO_LONG;
  84e624:	e0bfff17 	ldw	r2,-4(fp)
  84e628:	00c018c4 	movi	r3,99
  84e62c:	10c00005 	stb	r3,0(r2)
        return;
  84e630:	00000d06 	br	84e668 <OSMemNameSet+0x100>
    }
    (void)OS_StrCopy(pmem->OSMemName, pname);    /* Yes, copy name to the memory partition header      */
  84e634:	e0bffd17 	ldw	r2,-12(fp)
  84e638:	10800504 	addi	r2,r2,20
  84e63c:	e17ffe17 	ldw	r5,-8(fp)
  84e640:	1009883a 	mov	r4,r2
  84e644:	084c3800 	call	84c380 <OS_StrCopy>
  84e648:	e0bff817 	ldw	r2,-32(fp)
  84e64c:	e0bffb15 	stw	r2,-20(fp)
  84e650:	e0bffb17 	ldw	r2,-20(fp)
  84e654:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84e658:	e0bfff17 	ldw	r2,-4(fp)
  84e65c:	10000005 	stb	zero,0(r2)
  84e660:	00000106 	br	84e668 <OSMemNameSet+0x100>



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
        return;
  84e664:	0001883a 	nop
        return;
    }
    (void)OS_StrCopy(pmem->OSMemName, pname);    /* Yes, copy name to the memory partition header      */
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
}
  84e668:	e037883a 	mov	sp,fp
  84e66c:	dfc00117 	ldw	ra,4(sp)
  84e670:	df000017 	ldw	fp,0(sp)
  84e674:	dec00204 	addi	sp,sp,8
  84e678:	f800283a 	ret

0084e67c <OSMemPut>:
*               OS_ERR_MEM_INVALID_PBLK  if you passed a NULL pointer for the block to release.
*********************************************************************************************************
*/

INT8U  OSMemPut (OS_MEM *pmem, void *pblk)
{
  84e67c:	defff904 	addi	sp,sp,-28
  84e680:	df000615 	stw	fp,24(sp)
  84e684:	df000604 	addi	fp,sp,24
  84e688:	e13ffe15 	stw	r4,-8(fp)
  84e68c:	e17fff15 	stw	r5,-4(fp)
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84e690:	e03ffa15 	stw	zero,-24(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pmem == (OS_MEM *)0) {                   /* Must point to a valid memory partition             */
  84e694:	e0bffe17 	ldw	r2,-8(fp)
  84e698:	1000021e 	bne	r2,zero,84e6a4 <OSMemPut+0x28>
        return (OS_ERR_MEM_INVALID_PMEM);
  84e69c:	00801804 	movi	r2,96
  84e6a0:	00002806 	br	84e744 <OSMemPut+0xc8>
    }
    if (pblk == (void *)0) {                     /* Must release a valid block                         */
  84e6a4:	e0bfff17 	ldw	r2,-4(fp)
  84e6a8:	1000021e 	bne	r2,zero,84e6b4 <OSMemPut+0x38>
        return (OS_ERR_MEM_INVALID_PBLK);
  84e6ac:	008017c4 	movi	r2,95
  84e6b0:	00002406 	br	84e744 <OSMemPut+0xc8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e6b4:	0005303a 	rdctl	r2,status
  84e6b8:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e6bc:	e0fffd17 	ldw	r3,-12(fp)
  84e6c0:	00bfff84 	movi	r2,-2
  84e6c4:	1884703a 	and	r2,r3,r2
  84e6c8:	1001703a 	wrctl	status,r2
  
  return context;
  84e6cc:	e0bffd17 	ldw	r2,-12(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  84e6d0:	e0bffa15 	stw	r2,-24(fp)
    if (pmem->OSMemNFree >= pmem->OSMemNBlks) {  /* Make sure all blocks not already returned          */
  84e6d4:	e0bffe17 	ldw	r2,-8(fp)
  84e6d8:	10c00417 	ldw	r3,16(r2)
  84e6dc:	e0bffe17 	ldw	r2,-8(fp)
  84e6e0:	10800317 	ldw	r2,12(r2)
  84e6e4:	18800636 	bltu	r3,r2,84e700 <OSMemPut+0x84>
  84e6e8:	e0bffa17 	ldw	r2,-24(fp)
  84e6ec:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84e6f0:	e0bffb17 	ldw	r2,-20(fp)
  84e6f4:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_MEM_FULL);
  84e6f8:	00801784 	movi	r2,94
  84e6fc:	00001106 	br	84e744 <OSMemPut+0xc8>
    }
    *(void **)pblk      = pmem->OSMemFreeList;   /* Insert released block into free block list         */
  84e700:	e0bffe17 	ldw	r2,-8(fp)
  84e704:	10c00117 	ldw	r3,4(r2)
  84e708:	e0bfff17 	ldw	r2,-4(fp)
  84e70c:	10c00015 	stw	r3,0(r2)
    pmem->OSMemFreeList = pblk;
  84e710:	e0bffe17 	ldw	r2,-8(fp)
  84e714:	e0ffff17 	ldw	r3,-4(fp)
  84e718:	10c00115 	stw	r3,4(r2)
    pmem->OSMemNFree++;                          /* One more memory block in this partition            */
  84e71c:	e0bffe17 	ldw	r2,-8(fp)
  84e720:	10800417 	ldw	r2,16(r2)
  84e724:	10c00044 	addi	r3,r2,1
  84e728:	e0bffe17 	ldw	r2,-8(fp)
  84e72c:	10c00415 	stw	r3,16(r2)
  84e730:	e0bffa17 	ldw	r2,-24(fp)
  84e734:	e0bffc15 	stw	r2,-16(fp)
  84e738:	e0bffc17 	ldw	r2,-16(fp)
  84e73c:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);                        /* Notify caller that memory block was released       */
  84e740:	0005883a 	mov	r2,zero
}
  84e744:	e037883a 	mov	sp,fp
  84e748:	df000017 	ldw	fp,0(sp)
  84e74c:	dec00104 	addi	sp,sp,4
  84e750:	f800283a 	ret

0084e754 <OSMemQuery>:
*********************************************************************************************************
*/

#if OS_MEM_QUERY_EN > 0
INT8U  OSMemQuery (OS_MEM *pmem, OS_MEM_DATA *p_mem_data)
{
  84e754:	defffa04 	addi	sp,sp,-24
  84e758:	df000515 	stw	fp,20(sp)
  84e75c:	df000504 	addi	fp,sp,20
  84e760:	e13ffe15 	stw	r4,-8(fp)
  84e764:	e17fff15 	stw	r5,-4(fp)
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84e768:	e03ffb15 	stw	zero,-20(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pmem == (OS_MEM *)0) {                   /* Must point to a valid memory partition             */
  84e76c:	e0bffe17 	ldw	r2,-8(fp)
  84e770:	1000021e 	bne	r2,zero,84e77c <OSMemQuery+0x28>
        return (OS_ERR_MEM_INVALID_PMEM);
  84e774:	00801804 	movi	r2,96
  84e778:	00002c06 	br	84e82c <OSMemQuery+0xd8>
    }
    if (p_mem_data == (OS_MEM_DATA *)0) {        /* Must release a valid storage area for the data     */
  84e77c:	e0bfff17 	ldw	r2,-4(fp)
  84e780:	1000021e 	bne	r2,zero,84e78c <OSMemQuery+0x38>
        return (OS_ERR_MEM_INVALID_PDATA);
  84e784:	00801844 	movi	r2,97
  84e788:	00002806 	br	84e82c <OSMemQuery+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e78c:	0005303a 	rdctl	r2,status
  84e790:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e794:	e0fffc17 	ldw	r3,-16(fp)
  84e798:	00bfff84 	movi	r2,-2
  84e79c:	1884703a 	and	r2,r3,r2
  84e7a0:	1001703a 	wrctl	status,r2
  
  return context;
  84e7a4:	e0bffc17 	ldw	r2,-16(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  84e7a8:	e0bffb15 	stw	r2,-20(fp)
    p_mem_data->OSAddr     = pmem->OSMemAddr;
  84e7ac:	e0bffe17 	ldw	r2,-8(fp)
  84e7b0:	10c00017 	ldw	r3,0(r2)
  84e7b4:	e0bfff17 	ldw	r2,-4(fp)
  84e7b8:	10c00015 	stw	r3,0(r2)
    p_mem_data->OSFreeList = pmem->OSMemFreeList;
  84e7bc:	e0bffe17 	ldw	r2,-8(fp)
  84e7c0:	10c00117 	ldw	r3,4(r2)
  84e7c4:	e0bfff17 	ldw	r2,-4(fp)
  84e7c8:	10c00115 	stw	r3,4(r2)
    p_mem_data->OSBlkSize  = pmem->OSMemBlkSize;
  84e7cc:	e0bffe17 	ldw	r2,-8(fp)
  84e7d0:	10c00217 	ldw	r3,8(r2)
  84e7d4:	e0bfff17 	ldw	r2,-4(fp)
  84e7d8:	10c00215 	stw	r3,8(r2)
    p_mem_data->OSNBlks    = pmem->OSMemNBlks;
  84e7dc:	e0bffe17 	ldw	r2,-8(fp)
  84e7e0:	10c00317 	ldw	r3,12(r2)
  84e7e4:	e0bfff17 	ldw	r2,-4(fp)
  84e7e8:	10c00315 	stw	r3,12(r2)
    p_mem_data->OSNFree    = pmem->OSMemNFree;
  84e7ec:	e0bffe17 	ldw	r2,-8(fp)
  84e7f0:	10c00417 	ldw	r3,16(r2)
  84e7f4:	e0bfff17 	ldw	r2,-4(fp)
  84e7f8:	10c00415 	stw	r3,16(r2)
  84e7fc:	e0bffb17 	ldw	r2,-20(fp)
  84e800:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84e804:	e0bffd17 	ldw	r2,-12(fp)
  84e808:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    p_mem_data->OSNUsed    = p_mem_data->OSNBlks - p_mem_data->OSNFree;
  84e80c:	e0bfff17 	ldw	r2,-4(fp)
  84e810:	10c00317 	ldw	r3,12(r2)
  84e814:	e0bfff17 	ldw	r2,-4(fp)
  84e818:	10800417 	ldw	r2,16(r2)
  84e81c:	1887c83a 	sub	r3,r3,r2
  84e820:	e0bfff17 	ldw	r2,-4(fp)
  84e824:	10c00515 	stw	r3,20(r2)
    return (OS_ERR_NONE);
  84e828:	0005883a 	mov	r2,zero
}
  84e82c:	e037883a 	mov	sp,fp
  84e830:	df000017 	ldw	fp,0(sp)
  84e834:	dec00104 	addi	sp,sp,4
  84e838:	f800283a 	ret

0084e83c <OS_MemInit>:
* Note(s)    : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/

void  OS_MemInit (void)
{
  84e83c:	defffc04 	addi	sp,sp,-16
  84e840:	dfc00315 	stw	ra,12(sp)
  84e844:	df000215 	stw	fp,8(sp)
  84e848:	df000204 	addi	fp,sp,8
#if OS_MAX_MEM_PART >= 2
    OS_MEM  *pmem;
    INT16U   i;


    OS_MemClr((INT8U *)&OSMemTbl[0], sizeof(OSMemTbl));   /* Clear the memory partition table          */
  84e84c:	01430c04 	movi	r5,3120
  84e850:	010021b4 	movhi	r4,134
  84e854:	210d2104 	addi	r4,r4,13444
  84e858:	084c1800 	call	84c180 <OS_MemClr>
    pmem = &OSMemTbl[0];                                  /* Point to memory control block (MCB)       */
  84e85c:	008021b4 	movhi	r2,134
  84e860:	108d2104 	addi	r2,r2,13444
  84e864:	e0bffe15 	stw	r2,-8(fp)
    for (i = 0; i < (OS_MAX_MEM_PART - 1); i++) {         /* Init. list of free memory partitions      */
  84e868:	e03fff0d 	sth	zero,-4(fp)
  84e86c:	00001606 	br	84e8c8 <OS_MemInit+0x8c>
        pmem->OSMemFreeList = (void *)&OSMemTbl[i+1];     /* Chain list of free partitions             */
  84e870:	e0bfff0b 	ldhu	r2,-4(fp)
  84e874:	10800044 	addi	r2,r2,1
  84e878:	01400d04 	movi	r5,52
  84e87c:	1009883a 	mov	r4,r2
  84e880:	08301e80 	call	8301e8 <__mulsi3>
  84e884:	1007883a 	mov	r3,r2
  84e888:	008021b4 	movhi	r2,134
  84e88c:	108d2104 	addi	r2,r2,13444
  84e890:	1887883a 	add	r3,r3,r2
  84e894:	e0bffe17 	ldw	r2,-8(fp)
  84e898:	10c00115 	stw	r3,4(r2)
#if OS_MEM_NAME_SIZE > 1
        pmem->OSMemName[0]  = '?';                        /* Unknown name                              */
  84e89c:	e0bffe17 	ldw	r2,-8(fp)
  84e8a0:	00c00fc4 	movi	r3,63
  84e8a4:	10c00505 	stb	r3,20(r2)
        pmem->OSMemName[1]  = OS_ASCII_NUL;
  84e8a8:	e0bffe17 	ldw	r2,-8(fp)
  84e8ac:	10000545 	stb	zero,21(r2)
#endif
        pmem++;
  84e8b0:	e0bffe17 	ldw	r2,-8(fp)
  84e8b4:	10800d04 	addi	r2,r2,52
  84e8b8:	e0bffe15 	stw	r2,-8(fp)
    INT16U   i;


    OS_MemClr((INT8U *)&OSMemTbl[0], sizeof(OSMemTbl));   /* Clear the memory partition table          */
    pmem = &OSMemTbl[0];                                  /* Point to memory control block (MCB)       */
    for (i = 0; i < (OS_MAX_MEM_PART - 1); i++) {         /* Init. list of free memory partitions      */
  84e8bc:	e0bfff0b 	ldhu	r2,-4(fp)
  84e8c0:	10800044 	addi	r2,r2,1
  84e8c4:	e0bfff0d 	sth	r2,-4(fp)
  84e8c8:	e0bfff0b 	ldhu	r2,-4(fp)
  84e8cc:	10800ef0 	cmpltui	r2,r2,59
  84e8d0:	103fe71e 	bne	r2,zero,84e870 <__alt_mem_epcs_flash_controller_0+0xff845870>
        pmem->OSMemName[0]  = '?';                        /* Unknown name                              */
        pmem->OSMemName[1]  = OS_ASCII_NUL;
#endif
        pmem++;
    }
    pmem->OSMemFreeList = (void *)0;                      /* Initialize last node                      */
  84e8d4:	e0bffe17 	ldw	r2,-8(fp)
  84e8d8:	10000115 	stw	zero,4(r2)
#if OS_MEM_NAME_SIZE > 1
    pmem->OSMemName[0]  = '?';                            /* Unknown name                              */
  84e8dc:	e0bffe17 	ldw	r2,-8(fp)
  84e8e0:	00c00fc4 	movi	r3,63
  84e8e4:	10c00505 	stb	r3,20(r2)
    pmem->OSMemName[1]  = OS_ASCII_NUL;
  84e8e8:	e0bffe17 	ldw	r2,-8(fp)
  84e8ec:	10000545 	stb	zero,21(r2)
#endif

    OSMemFreeList       = &OSMemTbl[0];                   /* Point to beginning of free list           */
  84e8f0:	008021b4 	movhi	r2,134
  84e8f4:	108d2104 	addi	r2,r2,13444
  84e8f8:	d0a09e15 	stw	r2,-32136(gp)
#endif
}
  84e8fc:	0001883a 	nop
  84e900:	e037883a 	mov	sp,fp
  84e904:	dfc00117 	ldw	ra,4(sp)
  84e908:	df000017 	ldw	fp,0(sp)
  84e90c:	dec00204 	addi	sp,sp,8
  84e910:	f800283a 	ret

0084e914 <OSQAccept>:
*********************************************************************************************************
*/

#if OS_Q_ACCEPT_EN > 0
void  *OSQAccept (OS_EVENT *pevent, INT8U *perr)
{
  84e914:	defff804 	addi	sp,sp,-32
  84e918:	df000715 	stw	fp,28(sp)
  84e91c:	df000704 	addi	fp,sp,28
  84e920:	e13ffe15 	stw	r4,-8(fp)
  84e924:	e17fff15 	stw	r5,-4(fp)
    void      *pmsg;
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84e928:	e03ffa15 	stw	zero,-24(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84e92c:	e0bfff17 	ldw	r2,-4(fp)
  84e930:	1000021e 	bne	r2,zero,84e93c <OSQAccept+0x28>
        return ((void *)0);
  84e934:	0005883a 	mov	r2,zero
  84e938:	00004206 	br	84ea44 <OSQAccept+0x130>
    }
    if (pevent == (OS_EVENT *)0) {               /* Validate 'pevent'                                  */
  84e93c:	e0bffe17 	ldw	r2,-8(fp)
  84e940:	1000051e 	bne	r2,zero,84e958 <OSQAccept+0x44>
        *perr = OS_ERR_PEVENT_NULL;
  84e944:	e0bfff17 	ldw	r2,-4(fp)
  84e948:	00c00104 	movi	r3,4
  84e94c:	10c00005 	stb	r3,0(r2)
        return ((void *)0);
  84e950:	0005883a 	mov	r2,zero
  84e954:	00003b06 	br	84ea44 <OSQAccept+0x130>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {/* Validate event block type                          */
  84e958:	e0bffe17 	ldw	r2,-8(fp)
  84e95c:	10800003 	ldbu	r2,0(r2)
  84e960:	10803fcc 	andi	r2,r2,255
  84e964:	108000a0 	cmpeqi	r2,r2,2
  84e968:	1000051e 	bne	r2,zero,84e980 <OSQAccept+0x6c>
        *perr = OS_ERR_EVENT_TYPE;
  84e96c:	e0bfff17 	ldw	r2,-4(fp)
  84e970:	00c00044 	movi	r3,1
  84e974:	10c00005 	stb	r3,0(r2)
        return ((void *)0);
  84e978:	0005883a 	mov	r2,zero
  84e97c:	00003106 	br	84ea44 <OSQAccept+0x130>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e980:	0005303a 	rdctl	r2,status
  84e984:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e988:	e0fffd17 	ldw	r3,-12(fp)
  84e98c:	00bfff84 	movi	r2,-2
  84e990:	1884703a 	and	r2,r3,r2
  84e994:	1001703a 	wrctl	status,r2
  
  return context;
  84e998:	e0bffd17 	ldw	r2,-12(fp)
    }
    OS_ENTER_CRITICAL();
  84e99c:	e0bffa15 	stw	r2,-24(fp)
    pq = (OS_Q *)pevent->OSEventPtr;             /* Point at queue control block                       */
  84e9a0:	e0bffe17 	ldw	r2,-8(fp)
  84e9a4:	10800117 	ldw	r2,4(r2)
  84e9a8:	e0bffc15 	stw	r2,-16(fp)
    if (pq->OSQEntries > 0) {                    /* See if any messages in the queue                   */
  84e9ac:	e0bffc17 	ldw	r2,-16(fp)
  84e9b0:	1080058b 	ldhu	r2,22(r2)
  84e9b4:	10bfffcc 	andi	r2,r2,65535
  84e9b8:	10001926 	beq	r2,zero,84ea20 <OSQAccept+0x10c>
        pmsg = *pq->OSQOut++;                    /* Yes, extract oldest message from the queue         */
  84e9bc:	e0bffc17 	ldw	r2,-16(fp)
  84e9c0:	10800417 	ldw	r2,16(r2)
  84e9c4:	11000104 	addi	r4,r2,4
  84e9c8:	e0fffc17 	ldw	r3,-16(fp)
  84e9cc:	19000415 	stw	r4,16(r3)
  84e9d0:	10800017 	ldw	r2,0(r2)
  84e9d4:	e0bff915 	stw	r2,-28(fp)
        pq->OSQEntries--;                        /* Update the number of entries in the queue          */
  84e9d8:	e0bffc17 	ldw	r2,-16(fp)
  84e9dc:	1080058b 	ldhu	r2,22(r2)
  84e9e0:	10bfffc4 	addi	r2,r2,-1
  84e9e4:	1007883a 	mov	r3,r2
  84e9e8:	e0bffc17 	ldw	r2,-16(fp)
  84e9ec:	10c0058d 	sth	r3,22(r2)
        if (pq->OSQOut == pq->OSQEnd) {          /* Wrap OUT pointer if we are at the end of the queue */
  84e9f0:	e0bffc17 	ldw	r2,-16(fp)
  84e9f4:	10c00417 	ldw	r3,16(r2)
  84e9f8:	e0bffc17 	ldw	r2,-16(fp)
  84e9fc:	10800217 	ldw	r2,8(r2)
  84ea00:	1880041e 	bne	r3,r2,84ea14 <OSQAccept+0x100>
            pq->OSQOut = pq->OSQStart;
  84ea04:	e0bffc17 	ldw	r2,-16(fp)
  84ea08:	10c00117 	ldw	r3,4(r2)
  84ea0c:	e0bffc17 	ldw	r2,-16(fp)
  84ea10:	10c00415 	stw	r3,16(r2)
        }
        *perr = OS_ERR_NONE;
  84ea14:	e0bfff17 	ldw	r2,-4(fp)
  84ea18:	10000005 	stb	zero,0(r2)
  84ea1c:	00000406 	br	84ea30 <OSQAccept+0x11c>
    } else {
        *perr = OS_ERR_Q_EMPTY;
  84ea20:	e0bfff17 	ldw	r2,-4(fp)
  84ea24:	00c007c4 	movi	r3,31
  84ea28:	10c00005 	stb	r3,0(r2)
        pmsg  = (void *)0;                       /* Queue is empty                                     */
  84ea2c:	e03ff915 	stw	zero,-28(fp)
  84ea30:	e0bffa17 	ldw	r2,-24(fp)
  84ea34:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84ea38:	e0bffb17 	ldw	r2,-20(fp)
  84ea3c:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    return (pmsg);                               /* Return message received (or NULL)                  */
  84ea40:	e0bff917 	ldw	r2,-28(fp)
}
  84ea44:	e037883a 	mov	sp,fp
  84ea48:	df000017 	ldw	fp,0(sp)
  84ea4c:	dec00104 	addi	sp,sp,4
  84ea50:	f800283a 	ret

0084ea54 <OSQCreate>:
*              == (OS_EVENT *)0  if no event control blocks were available or an error was detected
*********************************************************************************************************
*/

OS_EVENT  *OSQCreate (void **start, INT16U size)
{
  84ea54:	defff404 	addi	sp,sp,-48
  84ea58:	dfc00b15 	stw	ra,44(sp)
  84ea5c:	df000a15 	stw	fp,40(sp)
  84ea60:	df000a04 	addi	fp,sp,40
  84ea64:	e13ffe15 	stw	r4,-8(fp)
  84ea68:	2805883a 	mov	r2,r5
  84ea6c:	e0bfff0d 	sth	r2,-4(fp)
    OS_EVENT  *pevent;
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84ea70:	e03ff715 	stw	zero,-36(fp)
#endif



    if (OSIntNesting > 0) {                      /* See if called from ISR ...                         */
  84ea74:	d0a0a303 	ldbu	r2,-32116(gp)
  84ea78:	10803fcc 	andi	r2,r2,255
  84ea7c:	10000226 	beq	r2,zero,84ea88 <OSQCreate+0x34>
        return ((OS_EVENT *)0);                  /* ... can't CREATE from an ISR                       */
  84ea80:	0005883a 	mov	r2,zero
  84ea84:	00005906 	br	84ebec <OSQCreate+0x198>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84ea88:	0005303a 	rdctl	r2,status
  84ea8c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84ea90:	e0fffd17 	ldw	r3,-12(fp)
  84ea94:	00bfff84 	movi	r2,-2
  84ea98:	1884703a 	and	r2,r3,r2
  84ea9c:	1001703a 	wrctl	status,r2
  
  return context;
  84eaa0:	e0bffd17 	ldw	r2,-12(fp)
    }
    OS_ENTER_CRITICAL();
  84eaa4:	e0bff715 	stw	r2,-36(fp)
    pevent = OSEventFreeList;                    /* Get next free event control block                  */
  84eaa8:	d0a0a217 	ldw	r2,-32120(gp)
  84eaac:	e0bff615 	stw	r2,-40(fp)
    if (OSEventFreeList != (OS_EVENT *)0) {      /* See if pool of free ECB pool was empty             */
  84eab0:	d0a0a217 	ldw	r2,-32120(gp)
  84eab4:	10000326 	beq	r2,zero,84eac4 <OSQCreate+0x70>
        OSEventFreeList = (OS_EVENT *)OSEventFreeList->OSEventPtr;
  84eab8:	d0a0a217 	ldw	r2,-32120(gp)
  84eabc:	10800117 	ldw	r2,4(r2)
  84eac0:	d0a0a215 	stw	r2,-32120(gp)
  84eac4:	e0bff717 	ldw	r2,-36(fp)
  84eac8:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84eacc:	e0bff817 	ldw	r2,-32(fp)
  84ead0:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    if (pevent != (OS_EVENT *)0) {               /* See if we have an event control block              */
  84ead4:	e0bff617 	ldw	r2,-40(fp)
  84ead8:	10004326 	beq	r2,zero,84ebe8 <OSQCreate+0x194>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84eadc:	0005303a 	rdctl	r2,status
  84eae0:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84eae4:	e0fff917 	ldw	r3,-28(fp)
  84eae8:	00bfff84 	movi	r2,-2
  84eaec:	1884703a 	and	r2,r3,r2
  84eaf0:	1001703a 	wrctl	status,r2
  
  return context;
  84eaf4:	e0bff917 	ldw	r2,-28(fp)
        OS_ENTER_CRITICAL();
  84eaf8:	e0bff715 	stw	r2,-36(fp)
        pq = OSQFreeList;                        /* Get a free queue control block                     */
  84eafc:	d0a0a017 	ldw	r2,-32128(gp)
  84eb00:	e0bffb15 	stw	r2,-20(fp)
        if (pq != (OS_Q *)0) {                   /* Were we able to get a queue control block ?        */
  84eb04:	e0bffb17 	ldw	r2,-20(fp)
  84eb08:	10002d26 	beq	r2,zero,84ebc0 <OSQCreate+0x16c>
            OSQFreeList            = OSQFreeList->OSQPtr; /* Yes, Adjust free list pointer to next free*/
  84eb0c:	d0a0a017 	ldw	r2,-32128(gp)
  84eb10:	10800017 	ldw	r2,0(r2)
  84eb14:	d0a0a015 	stw	r2,-32128(gp)
  84eb18:	e0bff717 	ldw	r2,-36(fp)
  84eb1c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84eb20:	e0bffa17 	ldw	r2,-24(fp)
  84eb24:	1001703a 	wrctl	status,r2
            OS_EXIT_CRITICAL();
            pq->OSQStart           = start;               /*      Initialize the queue                 */
  84eb28:	e0bffb17 	ldw	r2,-20(fp)
  84eb2c:	e0fffe17 	ldw	r3,-8(fp)
  84eb30:	10c00115 	stw	r3,4(r2)
            pq->OSQEnd             = &start[size];
  84eb34:	e0bfff0b 	ldhu	r2,-4(fp)
  84eb38:	1085883a 	add	r2,r2,r2
  84eb3c:	1085883a 	add	r2,r2,r2
  84eb40:	1007883a 	mov	r3,r2
  84eb44:	e0bffe17 	ldw	r2,-8(fp)
  84eb48:	10c7883a 	add	r3,r2,r3
  84eb4c:	e0bffb17 	ldw	r2,-20(fp)
  84eb50:	10c00215 	stw	r3,8(r2)
            pq->OSQIn              = start;
  84eb54:	e0bffb17 	ldw	r2,-20(fp)
  84eb58:	e0fffe17 	ldw	r3,-8(fp)
  84eb5c:	10c00315 	stw	r3,12(r2)
            pq->OSQOut             = start;
  84eb60:	e0bffb17 	ldw	r2,-20(fp)
  84eb64:	e0fffe17 	ldw	r3,-8(fp)
  84eb68:	10c00415 	stw	r3,16(r2)
            pq->OSQSize            = size;
  84eb6c:	e0bffb17 	ldw	r2,-20(fp)
  84eb70:	e0ffff0b 	ldhu	r3,-4(fp)
  84eb74:	10c0050d 	sth	r3,20(r2)
            pq->OSQEntries         = 0;
  84eb78:	e0bffb17 	ldw	r2,-20(fp)
  84eb7c:	1000058d 	sth	zero,22(r2)
            pevent->OSEventType    = OS_EVENT_TYPE_Q;
  84eb80:	e0bff617 	ldw	r2,-40(fp)
  84eb84:	00c00084 	movi	r3,2
  84eb88:	10c00005 	stb	r3,0(r2)
            pevent->OSEventCnt     = 0;
  84eb8c:	e0bff617 	ldw	r2,-40(fp)
  84eb90:	1000020d 	sth	zero,8(r2)
            pevent->OSEventPtr     = pq;
  84eb94:	e0bff617 	ldw	r2,-40(fp)
  84eb98:	e0fffb17 	ldw	r3,-20(fp)
  84eb9c:	10c00115 	stw	r3,4(r2)
#if OS_EVENT_NAME_SIZE > 1
            pevent->OSEventName[0] = '?';                  /* Unknown name                             */
  84eba0:	e0bff617 	ldw	r2,-40(fp)
  84eba4:	00c00fc4 	movi	r3,63
  84eba8:	10c00385 	stb	r3,14(r2)
            pevent->OSEventName[1] = OS_ASCII_NUL;
  84ebac:	e0bff617 	ldw	r2,-40(fp)
  84ebb0:	100003c5 	stb	zero,15(r2)
#endif
            OS_EventWaitListInit(pevent);                 /*      Initalize the wait list              */
  84ebb4:	e13ff617 	ldw	r4,-40(fp)
  84ebb8:	084bda00 	call	84bda0 <OS_EventWaitListInit>
  84ebbc:	00000a06 	br	84ebe8 <OSQCreate+0x194>
        } else {
            pevent->OSEventPtr = (void *)OSEventFreeList; /* No,  Return event control block on error  */
  84ebc0:	d0e0a217 	ldw	r3,-32120(gp)
  84ebc4:	e0bff617 	ldw	r2,-40(fp)
  84ebc8:	10c00115 	stw	r3,4(r2)
            OSEventFreeList    = pevent;
  84ebcc:	e0bff617 	ldw	r2,-40(fp)
  84ebd0:	d0a0a215 	stw	r2,-32120(gp)
  84ebd4:	e0bff717 	ldw	r2,-36(fp)
  84ebd8:	e0bffc15 	stw	r2,-16(fp)
  84ebdc:	e0bffc17 	ldw	r2,-16(fp)
  84ebe0:	1001703a 	wrctl	status,r2
            OS_EXIT_CRITICAL();
            pevent = (OS_EVENT *)0;
  84ebe4:	e03ff615 	stw	zero,-40(fp)
        }
    }
    return (pevent);
  84ebe8:	e0bff617 	ldw	r2,-40(fp)
}
  84ebec:	e037883a 	mov	sp,fp
  84ebf0:	dfc00117 	ldw	ra,4(sp)
  84ebf4:	df000017 	ldw	fp,0(sp)
  84ebf8:	dec00204 	addi	sp,sp,8
  84ebfc:	f800283a 	ret

0084ec00 <OSQDel>:
*********************************************************************************************************
*/

#if OS_Q_DEL_EN > 0
OS_EVENT  *OSQDel (OS_EVENT *pevent, INT8U opt, INT8U *perr)
{
  84ec00:	defff204 	addi	sp,sp,-56
  84ec04:	dfc00d15 	stw	ra,52(sp)
  84ec08:	df000c15 	stw	fp,48(sp)
  84ec0c:	df000c04 	addi	fp,sp,48
  84ec10:	e13ffd15 	stw	r4,-12(fp)
  84ec14:	2805883a 	mov	r2,r5
  84ec18:	e1bfff15 	stw	r6,-4(fp)
  84ec1c:	e0bffe05 	stb	r2,-8(fp)
    BOOLEAN    tasks_waiting;
    OS_EVENT  *pevent_return;
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  84ec20:	e03ff615 	stw	zero,-40(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                              /* Validate 'perr'                          */
  84ec24:	e0bfff17 	ldw	r2,-4(fp)
  84ec28:	1000021e 	bne	r2,zero,84ec34 <OSQDel+0x34>
        return (pevent);
  84ec2c:	e0bffd17 	ldw	r2,-12(fp)
  84ec30:	00008e06 	br	84ee6c <OSQDel+0x26c>
    }
    if (pevent == (OS_EVENT *)0) {                         /* Validate 'pevent'                        */
  84ec34:	e0bffd17 	ldw	r2,-12(fp)
  84ec38:	1000051e 	bne	r2,zero,84ec50 <OSQDel+0x50>
        *perr = OS_ERR_PEVENT_NULL;
  84ec3c:	e0bfff17 	ldw	r2,-4(fp)
  84ec40:	00c00104 	movi	r3,4
  84ec44:	10c00005 	stb	r3,0(r2)
        return (pevent);
  84ec48:	e0bffd17 	ldw	r2,-12(fp)
  84ec4c:	00008706 	br	84ee6c <OSQDel+0x26c>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {          /* Validate event block type                */
  84ec50:	e0bffd17 	ldw	r2,-12(fp)
  84ec54:	10800003 	ldbu	r2,0(r2)
  84ec58:	10803fcc 	andi	r2,r2,255
  84ec5c:	108000a0 	cmpeqi	r2,r2,2
  84ec60:	1000051e 	bne	r2,zero,84ec78 <OSQDel+0x78>
        *perr = OS_ERR_EVENT_TYPE;
  84ec64:	e0bfff17 	ldw	r2,-4(fp)
  84ec68:	00c00044 	movi	r3,1
  84ec6c:	10c00005 	stb	r3,0(r2)
        return (pevent);
  84ec70:	e0bffd17 	ldw	r2,-12(fp)
  84ec74:	00007d06 	br	84ee6c <OSQDel+0x26c>
    }
    if (OSIntNesting > 0) {                                /* See if called from ISR ...               */
  84ec78:	d0a0a303 	ldbu	r2,-32116(gp)
  84ec7c:	10803fcc 	andi	r2,r2,255
  84ec80:	10000526 	beq	r2,zero,84ec98 <OSQDel+0x98>
        *perr = OS_ERR_DEL_ISR;                            /* ... can't DELETE from an ISR             */
  84ec84:	e0bfff17 	ldw	r2,-4(fp)
  84ec88:	00c003c4 	movi	r3,15
  84ec8c:	10c00005 	stb	r3,0(r2)
        return (pevent);
  84ec90:	e0bffd17 	ldw	r2,-12(fp)
  84ec94:	00007506 	br	84ee6c <OSQDel+0x26c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84ec98:	0005303a 	rdctl	r2,status
  84ec9c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84eca0:	e0fffc17 	ldw	r3,-16(fp)
  84eca4:	00bfff84 	movi	r2,-2
  84eca8:	1884703a 	and	r2,r3,r2
  84ecac:	1001703a 	wrctl	status,r2
  
  return context;
  84ecb0:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84ecb4:	e0bff615 	stw	r2,-40(fp)
    if (pevent->OSEventGrp != 0) {                         /* See if any tasks waiting on queue        */
  84ecb8:	e0bffd17 	ldw	r2,-12(fp)
  84ecbc:	10800283 	ldbu	r2,10(r2)
  84ecc0:	10803fcc 	andi	r2,r2,255
  84ecc4:	10000326 	beq	r2,zero,84ecd4 <OSQDel+0xd4>
        tasks_waiting = OS_TRUE;                           /* Yes                                      */
  84ecc8:	00800044 	movi	r2,1
  84eccc:	e0bff405 	stb	r2,-48(fp)
  84ecd0:	00000106 	br	84ecd8 <OSQDel+0xd8>
    } else {
        tasks_waiting = OS_FALSE;                          /* No                                       */
  84ecd4:	e03ff405 	stb	zero,-48(fp)
    }
    switch (opt) {
  84ecd8:	e0bffe03 	ldbu	r2,-8(fp)
  84ecdc:	10000326 	beq	r2,zero,84ecec <OSQDel+0xec>
  84ece0:	10800060 	cmpeqi	r2,r2,1
  84ece4:	1000301e 	bne	r2,zero,84eda8 <OSQDel+0x1a8>
  84ece8:	00005506 	br	84ee40 <OSQDel+0x240>
        case OS_DEL_NO_PEND:                               /* Delete queue only if no task waiting     */
             if (tasks_waiting == OS_FALSE) {
  84ecec:	e0bff403 	ldbu	r2,-48(fp)
  84ecf0:	10001e1e 	bne	r2,zero,84ed6c <OSQDel+0x16c>
#if OS_EVENT_NAME_SIZE > 1
                 pevent->OSEventName[0] = '?';             /* Unknown name                             */
  84ecf4:	e0bffd17 	ldw	r2,-12(fp)
  84ecf8:	00c00fc4 	movi	r3,63
  84ecfc:	10c00385 	stb	r3,14(r2)
                 pevent->OSEventName[1] = OS_ASCII_NUL;
  84ed00:	e0bffd17 	ldw	r2,-12(fp)
  84ed04:	100003c5 	stb	zero,15(r2)
#endif
                 pq                     = (OS_Q *)pevent->OSEventPtr;  /* Return OS_Q to free list     */
  84ed08:	e0bffd17 	ldw	r2,-12(fp)
  84ed0c:	10800117 	ldw	r2,4(r2)
  84ed10:	e0bff815 	stw	r2,-32(fp)
                 pq->OSQPtr             = OSQFreeList;
  84ed14:	d0e0a017 	ldw	r3,-32128(gp)
  84ed18:	e0bff817 	ldw	r2,-32(fp)
  84ed1c:	10c00015 	stw	r3,0(r2)
                 OSQFreeList            = pq;
  84ed20:	e0bff817 	ldw	r2,-32(fp)
  84ed24:	d0a0a015 	stw	r2,-32128(gp)
                 pevent->OSEventType    = OS_EVENT_TYPE_UNUSED;
  84ed28:	e0bffd17 	ldw	r2,-12(fp)
  84ed2c:	10000005 	stb	zero,0(r2)
                 pevent->OSEventPtr     = OSEventFreeList; /* Return Event Control Block to free list  */
  84ed30:	d0e0a217 	ldw	r3,-32120(gp)
  84ed34:	e0bffd17 	ldw	r2,-12(fp)
  84ed38:	10c00115 	stw	r3,4(r2)
                 pevent->OSEventCnt     = 0;
  84ed3c:	e0bffd17 	ldw	r2,-12(fp)
  84ed40:	1000020d 	sth	zero,8(r2)
                 OSEventFreeList        = pevent;          /* Get next free event control block        */
  84ed44:	e0bffd17 	ldw	r2,-12(fp)
  84ed48:	d0a0a215 	stw	r2,-32120(gp)
  84ed4c:	e0bff617 	ldw	r2,-40(fp)
  84ed50:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84ed54:	e0bff717 	ldw	r2,-36(fp)
  84ed58:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_NONE;
  84ed5c:	e0bfff17 	ldw	r2,-4(fp)
  84ed60:	10000005 	stb	zero,0(r2)
                 pevent_return          = (OS_EVENT *)0;   /* Queue has been deleted                   */
  84ed64:	e03ff515 	stw	zero,-44(fp)
             } else {
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_TASK_WAITING;
                 pevent_return          = pevent;
             }
             break;
  84ed68:	00003f06 	br	84ee68 <OSQDel+0x268>
  84ed6c:	e0bff617 	ldw	r2,-40(fp)
  84ed70:	e0bff915 	stw	r2,-28(fp)
  84ed74:	e0bff917 	ldw	r2,-28(fp)
  84ed78:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_NONE;
                 pevent_return          = (OS_EVENT *)0;   /* Queue has been deleted                   */
             } else {
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_TASK_WAITING;
  84ed7c:	e0bfff17 	ldw	r2,-4(fp)
  84ed80:	00c01244 	movi	r3,73
  84ed84:	10c00005 	stb	r3,0(r2)
                 pevent_return          = pevent;
  84ed88:	e0bffd17 	ldw	r2,-12(fp)
  84ed8c:	e0bff515 	stw	r2,-44(fp)
             }
             break;
  84ed90:	00003506 	br	84ee68 <OSQDel+0x268>

        case OS_DEL_ALWAYS:                                /* Always delete the queue                  */
             while (pevent->OSEventGrp != 0) {             /* Ready ALL tasks waiting for queue        */
                 (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_Q, OS_STAT_PEND_OK);
  84ed94:	000f883a 	mov	r7,zero
  84ed98:	01800104 	movi	r6,4
  84ed9c:	000b883a 	mov	r5,zero
  84eda0:	e13ffd17 	ldw	r4,-12(fp)
  84eda4:	084b7f00 	call	84b7f0 <OS_EventTaskRdy>
                 pevent_return          = pevent;
             }
             break;

        case OS_DEL_ALWAYS:                                /* Always delete the queue                  */
             while (pevent->OSEventGrp != 0) {             /* Ready ALL tasks waiting for queue        */
  84eda8:	e0bffd17 	ldw	r2,-12(fp)
  84edac:	10800283 	ldbu	r2,10(r2)
  84edb0:	10803fcc 	andi	r2,r2,255
  84edb4:	103ff71e 	bne	r2,zero,84ed94 <__alt_mem_epcs_flash_controller_0+0xff845d94>
                 (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_Q, OS_STAT_PEND_OK);
             }
#if OS_EVENT_NAME_SIZE > 1
             pevent->OSEventName[0] = '?';                 /* Unknown name                             */
  84edb8:	e0bffd17 	ldw	r2,-12(fp)
  84edbc:	00c00fc4 	movi	r3,63
  84edc0:	10c00385 	stb	r3,14(r2)
             pevent->OSEventName[1] = OS_ASCII_NUL;
  84edc4:	e0bffd17 	ldw	r2,-12(fp)
  84edc8:	100003c5 	stb	zero,15(r2)
#endif
             pq                     = (OS_Q *)pevent->OSEventPtr;   /* Return OS_Q to free list        */
  84edcc:	e0bffd17 	ldw	r2,-12(fp)
  84edd0:	10800117 	ldw	r2,4(r2)
  84edd4:	e0bff815 	stw	r2,-32(fp)
             pq->OSQPtr             = OSQFreeList;
  84edd8:	d0e0a017 	ldw	r3,-32128(gp)
  84eddc:	e0bff817 	ldw	r2,-32(fp)
  84ede0:	10c00015 	stw	r3,0(r2)
             OSQFreeList            = pq;
  84ede4:	e0bff817 	ldw	r2,-32(fp)
  84ede8:	d0a0a015 	stw	r2,-32128(gp)
             pevent->OSEventType    = OS_EVENT_TYPE_UNUSED;
  84edec:	e0bffd17 	ldw	r2,-12(fp)
  84edf0:	10000005 	stb	zero,0(r2)
             pevent->OSEventPtr     = OSEventFreeList;     /* Return Event Control Block to free list  */
  84edf4:	d0e0a217 	ldw	r3,-32120(gp)
  84edf8:	e0bffd17 	ldw	r2,-12(fp)
  84edfc:	10c00115 	stw	r3,4(r2)
             pevent->OSEventCnt     = 0;
  84ee00:	e0bffd17 	ldw	r2,-12(fp)
  84ee04:	1000020d 	sth	zero,8(r2)
             OSEventFreeList        = pevent;              /* Get next free event control block        */
  84ee08:	e0bffd17 	ldw	r2,-12(fp)
  84ee0c:	d0a0a215 	stw	r2,-32120(gp)
  84ee10:	e0bff617 	ldw	r2,-40(fp)
  84ee14:	e0bffa15 	stw	r2,-24(fp)
  84ee18:	e0bffa17 	ldw	r2,-24(fp)
  84ee1c:	1001703a 	wrctl	status,r2
             OS_EXIT_CRITICAL();
             if (tasks_waiting == OS_TRUE) {               /* Reschedule only if task(s) were waiting  */
  84ee20:	e0bff403 	ldbu	r2,-48(fp)
  84ee24:	10800058 	cmpnei	r2,r2,1
  84ee28:	1000011e 	bne	r2,zero,84ee30 <OSQDel+0x230>
                 OS_Sched();                               /* Find highest priority task ready to run  */
  84ee2c:	084c23c0 	call	84c23c <OS_Sched>
             }
             *perr                  = OS_ERR_NONE;
  84ee30:	e0bfff17 	ldw	r2,-4(fp)
  84ee34:	10000005 	stb	zero,0(r2)
             pevent_return          = (OS_EVENT *)0;       /* Queue has been deleted                   */
  84ee38:	e03ff515 	stw	zero,-44(fp)
             break;
  84ee3c:	00000a06 	br	84ee68 <OSQDel+0x268>
  84ee40:	e0bff617 	ldw	r2,-40(fp)
  84ee44:	e0bffb15 	stw	r2,-20(fp)
  84ee48:	e0bffb17 	ldw	r2,-20(fp)
  84ee4c:	1001703a 	wrctl	status,r2

        default:
             OS_EXIT_CRITICAL();
             *perr                  = OS_ERR_INVALID_OPT;
  84ee50:	e0bfff17 	ldw	r2,-4(fp)
  84ee54:	00c001c4 	movi	r3,7
  84ee58:	10c00005 	stb	r3,0(r2)
             pevent_return          = pevent;
  84ee5c:	e0bffd17 	ldw	r2,-12(fp)
  84ee60:	e0bff515 	stw	r2,-44(fp)
             break;
  84ee64:	0001883a 	nop
    }
    return (pevent_return);
  84ee68:	e0bff517 	ldw	r2,-44(fp)
}
  84ee6c:	e037883a 	mov	sp,fp
  84ee70:	dfc00117 	ldw	ra,4(sp)
  84ee74:	df000017 	ldw	fp,0(sp)
  84ee78:	dec00204 	addi	sp,sp,8
  84ee7c:	f800283a 	ret

0084ee80 <OSQFlush>:
*********************************************************************************************************
*/

#if OS_Q_FLUSH_EN > 0
INT8U  OSQFlush (OS_EVENT *pevent)
{
  84ee80:	defffa04 	addi	sp,sp,-24
  84ee84:	df000515 	stw	fp,20(sp)
  84ee88:	df000504 	addi	fp,sp,20
  84ee8c:	e13fff15 	stw	r4,-4(fp)
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84ee90:	e03ffb15 	stw	zero,-20(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  84ee94:	e0bfff17 	ldw	r2,-4(fp)
  84ee98:	1000021e 	bne	r2,zero,84eea4 <OSQFlush+0x24>
        return (OS_ERR_PEVENT_NULL);
  84ee9c:	00800104 	movi	r2,4
  84eea0:	00002106 	br	84ef28 <OSQFlush+0xa8>
    }
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {     /* Validate event block type                     */
  84eea4:	e0bfff17 	ldw	r2,-4(fp)
  84eea8:	10800003 	ldbu	r2,0(r2)
  84eeac:	10803fcc 	andi	r2,r2,255
  84eeb0:	108000a0 	cmpeqi	r2,r2,2
  84eeb4:	1000021e 	bne	r2,zero,84eec0 <OSQFlush+0x40>
        return (OS_ERR_EVENT_TYPE);
  84eeb8:	00800044 	movi	r2,1
  84eebc:	00001a06 	br	84ef28 <OSQFlush+0xa8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84eec0:	0005303a 	rdctl	r2,status
  84eec4:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84eec8:	e0fffd17 	ldw	r3,-12(fp)
  84eecc:	00bfff84 	movi	r2,-2
  84eed0:	1884703a 	and	r2,r3,r2
  84eed4:	1001703a 	wrctl	status,r2
  
  return context;
  84eed8:	e0bffd17 	ldw	r2,-12(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  84eedc:	e0bffb15 	stw	r2,-20(fp)
    pq             = (OS_Q *)pevent->OSEventPtr;      /* Point to queue storage structure              */
  84eee0:	e0bfff17 	ldw	r2,-4(fp)
  84eee4:	10800117 	ldw	r2,4(r2)
  84eee8:	e0bffc15 	stw	r2,-16(fp)
    pq->OSQIn      = pq->OSQStart;
  84eeec:	e0bffc17 	ldw	r2,-16(fp)
  84eef0:	10c00117 	ldw	r3,4(r2)
  84eef4:	e0bffc17 	ldw	r2,-16(fp)
  84eef8:	10c00315 	stw	r3,12(r2)
    pq->OSQOut     = pq->OSQStart;
  84eefc:	e0bffc17 	ldw	r2,-16(fp)
  84ef00:	10c00117 	ldw	r3,4(r2)
  84ef04:	e0bffc17 	ldw	r2,-16(fp)
  84ef08:	10c00415 	stw	r3,16(r2)
    pq->OSQEntries = 0;
  84ef0c:	e0bffc17 	ldw	r2,-16(fp)
  84ef10:	1000058d 	sth	zero,22(r2)
  84ef14:	e0bffb17 	ldw	r2,-20(fp)
  84ef18:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84ef1c:	e0bffe17 	ldw	r2,-8(fp)
  84ef20:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  84ef24:	0005883a 	mov	r2,zero
}
  84ef28:	e037883a 	mov	sp,fp
  84ef2c:	df000017 	ldw	fp,0(sp)
  84ef30:	dec00104 	addi	sp,sp,4
  84ef34:	f800283a 	ret

0084ef38 <OSQPend>:
* Note(s)    : As of V2.60, this function allows you to receive NULL pointer messages.
*********************************************************************************************************
*/

void  *OSQPend (OS_EVENT *pevent, INT16U timeout, INT8U *perr)
{
  84ef38:	defff304 	addi	sp,sp,-52
  84ef3c:	dfc00c15 	stw	ra,48(sp)
  84ef40:	df000b15 	stw	fp,44(sp)
  84ef44:	df000b04 	addi	fp,sp,44
  84ef48:	e13ffd15 	stw	r4,-12(fp)
  84ef4c:	2805883a 	mov	r2,r5
  84ef50:	e1bfff15 	stw	r6,-4(fp)
  84ef54:	e0bffe0d 	sth	r2,-8(fp)
    void      *pmsg;
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84ef58:	e03ff615 	stw	zero,-40(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84ef5c:	e0bfff17 	ldw	r2,-4(fp)
  84ef60:	1000021e 	bne	r2,zero,84ef6c <OSQPend+0x34>
        return ((void *)0);
  84ef64:	0005883a 	mov	r2,zero
  84ef68:	00009106 	br	84f1b0 <OSQPend+0x278>
    }
    if (pevent == (OS_EVENT *)0) {               /* Validate 'pevent'                                  */
  84ef6c:	e0bffd17 	ldw	r2,-12(fp)
  84ef70:	1000051e 	bne	r2,zero,84ef88 <OSQPend+0x50>
        *perr = OS_ERR_PEVENT_NULL;
  84ef74:	e0bfff17 	ldw	r2,-4(fp)
  84ef78:	00c00104 	movi	r3,4
  84ef7c:	10c00005 	stb	r3,0(r2)
        return ((void *)0);
  84ef80:	0005883a 	mov	r2,zero
  84ef84:	00008a06 	br	84f1b0 <OSQPend+0x278>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {/* Validate event block type                          */
  84ef88:	e0bffd17 	ldw	r2,-12(fp)
  84ef8c:	10800003 	ldbu	r2,0(r2)
  84ef90:	10803fcc 	andi	r2,r2,255
  84ef94:	108000a0 	cmpeqi	r2,r2,2
  84ef98:	1000051e 	bne	r2,zero,84efb0 <OSQPend+0x78>
        *perr = OS_ERR_EVENT_TYPE;
  84ef9c:	e0bfff17 	ldw	r2,-4(fp)
  84efa0:	00c00044 	movi	r3,1
  84efa4:	10c00005 	stb	r3,0(r2)
        return ((void *)0);
  84efa8:	0005883a 	mov	r2,zero
  84efac:	00008006 	br	84f1b0 <OSQPend+0x278>
    }
    if (OSIntNesting > 0) {                      /* See if called from ISR ...                         */
  84efb0:	d0a0a303 	ldbu	r2,-32116(gp)
  84efb4:	10803fcc 	andi	r2,r2,255
  84efb8:	10000526 	beq	r2,zero,84efd0 <OSQPend+0x98>
        *perr = OS_ERR_PEND_ISR;                 /* ... can't PEND from an ISR                         */
  84efbc:	e0bfff17 	ldw	r2,-4(fp)
  84efc0:	00c00084 	movi	r3,2
  84efc4:	10c00005 	stb	r3,0(r2)
        return ((void *)0);
  84efc8:	0005883a 	mov	r2,zero
  84efcc:	00007806 	br	84f1b0 <OSQPend+0x278>
    }
    if (OSLockNesting > 0) {                     /* See if called with scheduler locked ...            */
  84efd0:	d0a09503 	ldbu	r2,-32172(gp)
  84efd4:	10803fcc 	andi	r2,r2,255
  84efd8:	10000526 	beq	r2,zero,84eff0 <OSQPend+0xb8>
        *perr = OS_ERR_PEND_LOCKED;              /* ... can't PEND when locked                         */
  84efdc:	e0bfff17 	ldw	r2,-4(fp)
  84efe0:	00c00344 	movi	r3,13
  84efe4:	10c00005 	stb	r3,0(r2)
        return ((void *)0);
  84efe8:	0005883a 	mov	r2,zero
  84efec:	00007006 	br	84f1b0 <OSQPend+0x278>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84eff0:	0005303a 	rdctl	r2,status
  84eff4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84eff8:	e0fffc17 	ldw	r3,-16(fp)
  84effc:	00bfff84 	movi	r2,-2
  84f000:	1884703a 	and	r2,r3,r2
  84f004:	1001703a 	wrctl	status,r2
  
  return context;
  84f008:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84f00c:	e0bff615 	stw	r2,-40(fp)
    pq = (OS_Q *)pevent->OSEventPtr;             /* Point at queue control block                       */
  84f010:	e0bffd17 	ldw	r2,-12(fp)
  84f014:	10800117 	ldw	r2,4(r2)
  84f018:	e0bff815 	stw	r2,-32(fp)
    if (pq->OSQEntries > 0) {                    /* See if any messages in the queue                   */
  84f01c:	e0bff817 	ldw	r2,-32(fp)
  84f020:	1080058b 	ldhu	r2,22(r2)
  84f024:	10bfffcc 	andi	r2,r2,65535
  84f028:	10001e26 	beq	r2,zero,84f0a4 <OSQPend+0x16c>
        pmsg = *pq->OSQOut++;                    /* Yes, extract oldest message from the queue         */
  84f02c:	e0bff817 	ldw	r2,-32(fp)
  84f030:	10800417 	ldw	r2,16(r2)
  84f034:	11000104 	addi	r4,r2,4
  84f038:	e0fff817 	ldw	r3,-32(fp)
  84f03c:	19000415 	stw	r4,16(r3)
  84f040:	10800017 	ldw	r2,0(r2)
  84f044:	e0bff515 	stw	r2,-44(fp)
        pq->OSQEntries--;                        /* Update the number of entries in the queue          */
  84f048:	e0bff817 	ldw	r2,-32(fp)
  84f04c:	1080058b 	ldhu	r2,22(r2)
  84f050:	10bfffc4 	addi	r2,r2,-1
  84f054:	1007883a 	mov	r3,r2
  84f058:	e0bff817 	ldw	r2,-32(fp)
  84f05c:	10c0058d 	sth	r3,22(r2)
        if (pq->OSQOut == pq->OSQEnd) {          /* Wrap OUT pointer if we are at the end of the queue */
  84f060:	e0bff817 	ldw	r2,-32(fp)
  84f064:	10c00417 	ldw	r3,16(r2)
  84f068:	e0bff817 	ldw	r2,-32(fp)
  84f06c:	10800217 	ldw	r2,8(r2)
  84f070:	1880041e 	bne	r3,r2,84f084 <OSQPend+0x14c>
            pq->OSQOut = pq->OSQStart;
  84f074:	e0bff817 	ldw	r2,-32(fp)
  84f078:	10c00117 	ldw	r3,4(r2)
  84f07c:	e0bff817 	ldw	r2,-32(fp)
  84f080:	10c00415 	stw	r3,16(r2)
  84f084:	e0bff617 	ldw	r2,-40(fp)
  84f088:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84f08c:	e0bff717 	ldw	r2,-36(fp)
  84f090:	1001703a 	wrctl	status,r2
        }
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_NONE;
  84f094:	e0bfff17 	ldw	r2,-4(fp)
  84f098:	10000005 	stb	zero,0(r2)
        return (pmsg);                           /* Return message received                            */
  84f09c:	e0bff517 	ldw	r2,-44(fp)
  84f0a0:	00004306 	br	84f1b0 <OSQPend+0x278>
    }
    OSTCBCur->OSTCBStat     |= OS_STAT_Q;        /* Task will have to pend for a message to be posted  */
  84f0a4:	d0a0a417 	ldw	r2,-32112(gp)
  84f0a8:	d0e0a417 	ldw	r3,-32112(gp)
  84f0ac:	18c00c03 	ldbu	r3,48(r3)
  84f0b0:	18c00114 	ori	r3,r3,4
  84f0b4:	10c00c05 	stb	r3,48(r2)
    OSTCBCur->OSTCBStatPend  = OS_STAT_PEND_OK;
  84f0b8:	d0a0a417 	ldw	r2,-32112(gp)
  84f0bc:	10000c45 	stb	zero,49(r2)
    OSTCBCur->OSTCBDly       = timeout;          /* Load timeout into TCB                              */
  84f0c0:	d0a0a417 	ldw	r2,-32112(gp)
  84f0c4:	e0fffe0b 	ldhu	r3,-8(fp)
  84f0c8:	10c00b8d 	sth	r3,46(r2)
    OS_EventTaskWait(pevent);                    /* Suspend task until event or timeout occurs         */
  84f0cc:	e13ffd17 	ldw	r4,-12(fp)
  84f0d0:	084b9880 	call	84b988 <OS_EventTaskWait>
  84f0d4:	e0bff617 	ldw	r2,-40(fp)
  84f0d8:	e0bffb15 	stw	r2,-20(fp)
  84f0dc:	e0bffb17 	ldw	r2,-20(fp)
  84f0e0:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    OS_Sched();                                  /* Find next highest priority task ready to run       */
  84f0e4:	084c23c0 	call	84c23c <OS_Sched>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84f0e8:	0005303a 	rdctl	r2,status
  84f0ec:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84f0f0:	e0fff917 	ldw	r3,-28(fp)
  84f0f4:	00bfff84 	movi	r2,-2
  84f0f8:	1884703a 	and	r2,r3,r2
  84f0fc:	1001703a 	wrctl	status,r2
  
  return context;
  84f100:	e0bff917 	ldw	r2,-28(fp)
    OS_ENTER_CRITICAL();
  84f104:	e0bff615 	stw	r2,-40(fp)
    switch (OSTCBCur->OSTCBStatPend) {                /* See if we timed-out or aborted                */
  84f108:	d0a0a417 	ldw	r2,-32112(gp)
  84f10c:	10800c43 	ldbu	r2,49(r2)
  84f110:	10803fcc 	andi	r2,r2,255
  84f114:	10000326 	beq	r2,zero,84f124 <OSQPend+0x1ec>
  84f118:	108000a0 	cmpeqi	r2,r2,2
  84f11c:	1000071e 	bne	r2,zero,84f13c <OSQPend+0x204>
  84f120:	00000b06 	br	84f150 <OSQPend+0x218>
        case OS_STAT_PEND_OK:                         /* Extract message from TCB (Put there by QPost) */
             pmsg =  OSTCBCur->OSTCBMsg;
  84f124:	d0a0a417 	ldw	r2,-32112(gp)
  84f128:	10800917 	ldw	r2,36(r2)
  84f12c:	e0bff515 	stw	r2,-44(fp)
            *perr =  OS_ERR_NONE;
  84f130:	e0bfff17 	ldw	r2,-4(fp)
  84f134:	10000005 	stb	zero,0(r2)
             break;
  84f138:	00000e06 	br	84f174 <OSQPend+0x23c>

        case OS_STAT_PEND_ABORT:
             pmsg = (void *)0;
  84f13c:	e03ff515 	stw	zero,-44(fp)
            *perr =  OS_ERR_PEND_ABORT;               /* Indicate that we aborted                      */
  84f140:	e0bfff17 	ldw	r2,-4(fp)
  84f144:	00c00384 	movi	r3,14
  84f148:	10c00005 	stb	r3,0(r2)
             break;
  84f14c:	00000906 	br	84f174 <OSQPend+0x23c>

        case OS_STAT_PEND_TO:
        default:
             OS_EventTaskRemove(OSTCBCur, pevent);
  84f150:	d0a0a417 	ldw	r2,-32112(gp)
  84f154:	e17ffd17 	ldw	r5,-12(fp)
  84f158:	1009883a 	mov	r4,r2
  84f15c:	084bbe80 	call	84bbe8 <OS_EventTaskRemove>
             pmsg = (void *)0;
  84f160:	e03ff515 	stw	zero,-44(fp)
            *perr =  OS_ERR_TIMEOUT;                  /* Indicate that we didn't get event within TO   */
  84f164:	e0bfff17 	ldw	r2,-4(fp)
  84f168:	00c00284 	movi	r3,10
  84f16c:	10c00005 	stb	r3,0(r2)
             break;
  84f170:	0001883a 	nop
    }
    OSTCBCur->OSTCBStat          =  OS_STAT_RDY;      /* Set   task  status to ready                   */
  84f174:	d0a0a417 	ldw	r2,-32112(gp)
  84f178:	10000c05 	stb	zero,48(r2)
    OSTCBCur->OSTCBStatPend      =  OS_STAT_PEND_OK;  /* Clear pend  status                            */
  84f17c:	d0a0a417 	ldw	r2,-32112(gp)
  84f180:	10000c45 	stb	zero,49(r2)
    OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;    /* Clear event pointers                          */
  84f184:	d0a0a417 	ldw	r2,-32112(gp)
  84f188:	10000715 	stw	zero,28(r2)
#if (OS_EVENT_MULTI_EN > 0)
    OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)0;
  84f18c:	d0a0a417 	ldw	r2,-32112(gp)
  84f190:	10000815 	stw	zero,32(r2)
#endif
    OSTCBCur->OSTCBMsg           = (void      *)0;    /* Clear  received message                       */
  84f194:	d0a0a417 	ldw	r2,-32112(gp)
  84f198:	10000915 	stw	zero,36(r2)
  84f19c:	e0bff617 	ldw	r2,-40(fp)
  84f1a0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84f1a4:	e0bffa17 	ldw	r2,-24(fp)
  84f1a8:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (pmsg);                                    /* Return received message                       */
  84f1ac:	e0bff517 	ldw	r2,-44(fp)
}
  84f1b0:	e037883a 	mov	sp,fp
  84f1b4:	dfc00117 	ldw	ra,4(sp)
  84f1b8:	df000017 	ldw	fp,0(sp)
  84f1bc:	dec00204 	addi	sp,sp,8
  84f1c0:	f800283a 	ret

0084f1c4 <OSQPendAbort>:
*********************************************************************************************************
*/

#if OS_Q_PEND_ABORT_EN > 0
INT8U  OSQPendAbort (OS_EVENT *pevent, INT8U opt, INT8U *perr)
{
  84f1c4:	defff604 	addi	sp,sp,-40
  84f1c8:	dfc00915 	stw	ra,36(sp)
  84f1cc:	df000815 	stw	fp,32(sp)
  84f1d0:	df000804 	addi	fp,sp,32
  84f1d4:	e13ffd15 	stw	r4,-12(fp)
  84f1d8:	2805883a 	mov	r2,r5
  84f1dc:	e1bfff15 	stw	r6,-4(fp)
  84f1e0:	e0bffe05 	stb	r2,-8(fp)
    INT8U      nbr_tasks;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  84f1e4:	e03ff915 	stw	zero,-28(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                              /* Validate 'perr'                          */
  84f1e8:	e0bfff17 	ldw	r2,-4(fp)
  84f1ec:	1000021e 	bne	r2,zero,84f1f8 <OSQPendAbort+0x34>
        return (0);
  84f1f0:	0005883a 	mov	r2,zero
  84f1f4:	00004906 	br	84f31c <OSQPendAbort+0x158>
    }
    if (pevent == (OS_EVENT *)0) {                         /* Validate 'pevent'                        */
  84f1f8:	e0bffd17 	ldw	r2,-12(fp)
  84f1fc:	1000051e 	bne	r2,zero,84f214 <OSQPendAbort+0x50>
        *perr = OS_ERR_PEVENT_NULL;
  84f200:	e0bfff17 	ldw	r2,-4(fp)
  84f204:	00c00104 	movi	r3,4
  84f208:	10c00005 	stb	r3,0(r2)
        return (0);
  84f20c:	0005883a 	mov	r2,zero
  84f210:	00004206 	br	84f31c <OSQPendAbort+0x158>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {          /* Validate event block type                */
  84f214:	e0bffd17 	ldw	r2,-12(fp)
  84f218:	10800003 	ldbu	r2,0(r2)
  84f21c:	10803fcc 	andi	r2,r2,255
  84f220:	108000a0 	cmpeqi	r2,r2,2
  84f224:	1000051e 	bne	r2,zero,84f23c <OSQPendAbort+0x78>
        *perr = OS_ERR_EVENT_TYPE;
  84f228:	e0bfff17 	ldw	r2,-4(fp)
  84f22c:	00c00044 	movi	r3,1
  84f230:	10c00005 	stb	r3,0(r2)
        return (0);
  84f234:	0005883a 	mov	r2,zero
  84f238:	00003806 	br	84f31c <OSQPendAbort+0x158>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84f23c:	0005303a 	rdctl	r2,status
  84f240:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84f244:	e0fffc17 	ldw	r3,-16(fp)
  84f248:	00bfff84 	movi	r2,-2
  84f24c:	1884703a 	and	r2,r3,r2
  84f250:	1001703a 	wrctl	status,r2
  
  return context;
  84f254:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84f258:	e0bff915 	stw	r2,-28(fp)
    if (pevent->OSEventGrp != 0) {                         /* See if any task waiting on queue?        */
  84f25c:	e0bffd17 	ldw	r2,-12(fp)
  84f260:	10800283 	ldbu	r2,10(r2)
  84f264:	10803fcc 	andi	r2,r2,255
  84f268:	10002526 	beq	r2,zero,84f300 <OSQPendAbort+0x13c>
        nbr_tasks = 0;
  84f26c:	e03ff805 	stb	zero,-32(fp)
        switch (opt) {
  84f270:	e0bffe03 	ldbu	r2,-8(fp)
  84f274:	10800060 	cmpeqi	r2,r2,1
  84f278:	10000e26 	beq	r2,zero,84f2b4 <OSQPendAbort+0xf0>
            case OS_PEND_OPT_BROADCAST:                    /* Do we need to abort ALL waiting tasks?   */
                 while (pevent->OSEventGrp != 0) {         /* Yes, ready ALL tasks waiting on queue    */
  84f27c:	00000806 	br	84f2a0 <OSQPendAbort+0xdc>
                     (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_Q, OS_STAT_PEND_ABORT);
  84f280:	01c00084 	movi	r7,2
  84f284:	01800104 	movi	r6,4
  84f288:	000b883a 	mov	r5,zero
  84f28c:	e13ffd17 	ldw	r4,-12(fp)
  84f290:	084b7f00 	call	84b7f0 <OS_EventTaskRdy>
                     nbr_tasks++;
  84f294:	e0bff803 	ldbu	r2,-32(fp)
  84f298:	10800044 	addi	r2,r2,1
  84f29c:	e0bff805 	stb	r2,-32(fp)
    OS_ENTER_CRITICAL();
    if (pevent->OSEventGrp != 0) {                         /* See if any task waiting on queue?        */
        nbr_tasks = 0;
        switch (opt) {
            case OS_PEND_OPT_BROADCAST:                    /* Do we need to abort ALL waiting tasks?   */
                 while (pevent->OSEventGrp != 0) {         /* Yes, ready ALL tasks waiting on queue    */
  84f2a0:	e0bffd17 	ldw	r2,-12(fp)
  84f2a4:	10800283 	ldbu	r2,10(r2)
  84f2a8:	10803fcc 	andi	r2,r2,255
  84f2ac:	103ff41e 	bne	r2,zero,84f280 <__alt_mem_epcs_flash_controller_0+0xff846280>
                     (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_Q, OS_STAT_PEND_ABORT);
                     nbr_tasks++;
                 }
                 break;
  84f2b0:	00000906 	br	84f2d8 <OSQPendAbort+0x114>
               
            case OS_PEND_OPT_NONE:
            default:                                       /* No,  ready HPT       waiting on queue    */
                 (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_Q, OS_STAT_PEND_ABORT);
  84f2b4:	01c00084 	movi	r7,2
  84f2b8:	01800104 	movi	r6,4
  84f2bc:	000b883a 	mov	r5,zero
  84f2c0:	e13ffd17 	ldw	r4,-12(fp)
  84f2c4:	084b7f00 	call	84b7f0 <OS_EventTaskRdy>
                 nbr_tasks++;
  84f2c8:	e0bff803 	ldbu	r2,-32(fp)
  84f2cc:	10800044 	addi	r2,r2,1
  84f2d0:	e0bff805 	stb	r2,-32(fp)
                 break;
  84f2d4:	0001883a 	nop
  84f2d8:	e0bff917 	ldw	r2,-28(fp)
  84f2dc:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84f2e0:	e0bffa17 	ldw	r2,-24(fp)
  84f2e4:	1001703a 	wrctl	status,r2
        }
        OS_EXIT_CRITICAL();
        OS_Sched();                                        /* Find HPT ready to run                    */
  84f2e8:	084c23c0 	call	84c23c <OS_Sched>
        *perr = OS_ERR_PEND_ABORT;
  84f2ec:	e0bfff17 	ldw	r2,-4(fp)
  84f2f0:	00c00384 	movi	r3,14
  84f2f4:	10c00005 	stb	r3,0(r2)
        return (nbr_tasks);
  84f2f8:	e0bff803 	ldbu	r2,-32(fp)
  84f2fc:	00000706 	br	84f31c <OSQPendAbort+0x158>
  84f300:	e0bff917 	ldw	r2,-28(fp)
  84f304:	e0bffb15 	stw	r2,-20(fp)
  84f308:	e0bffb17 	ldw	r2,-20(fp)
  84f30c:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84f310:	e0bfff17 	ldw	r2,-4(fp)
  84f314:	10000005 	stb	zero,0(r2)
    return (0);                                            /* No tasks waiting on queue                */
  84f318:	0005883a 	mov	r2,zero
}
  84f31c:	e037883a 	mov	sp,fp
  84f320:	dfc00117 	ldw	ra,4(sp)
  84f324:	df000017 	ldw	fp,0(sp)
  84f328:	dec00204 	addi	sp,sp,8
  84f32c:	f800283a 	ret

0084f330 <OSQPost>:
*********************************************************************************************************
*/

#if OS_Q_POST_EN > 0
INT8U  OSQPost (OS_EVENT *pevent, void *pmsg)
{
  84f330:	defff604 	addi	sp,sp,-40
  84f334:	dfc00915 	stw	ra,36(sp)
  84f338:	df000815 	stw	fp,32(sp)
  84f33c:	df000804 	addi	fp,sp,32
  84f340:	e13ffe15 	stw	r4,-8(fp)
  84f344:	e17fff15 	stw	r5,-4(fp)
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                            /* Allocate storage for CPU status register     */
    OS_CPU_SR  cpu_sr = 0;
  84f348:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                     /* Validate 'pevent'                            */
  84f34c:	e0bffe17 	ldw	r2,-8(fp)
  84f350:	1000021e 	bne	r2,zero,84f35c <OSQPost+0x2c>
        return (OS_ERR_PEVENT_NULL);
  84f354:	00800104 	movi	r2,4
  84f358:	00004a06 	br	84f484 <OSQPost+0x154>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {      /* Validate event block type                    */
  84f35c:	e0bffe17 	ldw	r2,-8(fp)
  84f360:	10800003 	ldbu	r2,0(r2)
  84f364:	10803fcc 	andi	r2,r2,255
  84f368:	108000a0 	cmpeqi	r2,r2,2
  84f36c:	1000021e 	bne	r2,zero,84f378 <OSQPost+0x48>
        return (OS_ERR_EVENT_TYPE);
  84f370:	00800044 	movi	r2,1
  84f374:	00004306 	br	84f484 <OSQPost+0x154>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84f378:	0005303a 	rdctl	r2,status
  84f37c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84f380:	e0fffd17 	ldw	r3,-12(fp)
  84f384:	00bfff84 	movi	r2,-2
  84f388:	1884703a 	and	r2,r3,r2
  84f38c:	1001703a 	wrctl	status,r2
  
  return context;
  84f390:	e0bffd17 	ldw	r2,-12(fp)
    }
    OS_ENTER_CRITICAL();
  84f394:	e0bff815 	stw	r2,-32(fp)
    if (pevent->OSEventGrp != 0) {                     /* See if any task pending on queue             */
  84f398:	e0bffe17 	ldw	r2,-8(fp)
  84f39c:	10800283 	ldbu	r2,10(r2)
  84f3a0:	10803fcc 	andi	r2,r2,255
  84f3a4:	10000c26 	beq	r2,zero,84f3d8 <OSQPost+0xa8>
                                                       /* Ready highest priority task waiting on event */
        (void)OS_EventTaskRdy(pevent, pmsg, OS_STAT_Q, OS_STAT_PEND_OK);
  84f3a8:	000f883a 	mov	r7,zero
  84f3ac:	01800104 	movi	r6,4
  84f3b0:	e17fff17 	ldw	r5,-4(fp)
  84f3b4:	e13ffe17 	ldw	r4,-8(fp)
  84f3b8:	084b7f00 	call	84b7f0 <OS_EventTaskRdy>
  84f3bc:	e0bff817 	ldw	r2,-32(fp)
  84f3c0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84f3c4:	e0bff917 	ldw	r2,-28(fp)
  84f3c8:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        OS_Sched();                                    /* Find highest priority task ready to run      */
  84f3cc:	084c23c0 	call	84c23c <OS_Sched>
        return (OS_ERR_NONE);
  84f3d0:	0005883a 	mov	r2,zero
  84f3d4:	00002b06 	br	84f484 <OSQPost+0x154>
    }
    pq = (OS_Q *)pevent->OSEventPtr;                   /* Point to queue control block                 */
  84f3d8:	e0bffe17 	ldw	r2,-8(fp)
  84f3dc:	10800117 	ldw	r2,4(r2)
  84f3e0:	e0bffb15 	stw	r2,-20(fp)
    if (pq->OSQEntries >= pq->OSQSize) {               /* Make sure queue is not full                  */
  84f3e4:	e0bffb17 	ldw	r2,-20(fp)
  84f3e8:	10c0058b 	ldhu	r3,22(r2)
  84f3ec:	e0bffb17 	ldw	r2,-20(fp)
  84f3f0:	1080050b 	ldhu	r2,20(r2)
  84f3f4:	18ffffcc 	andi	r3,r3,65535
  84f3f8:	10bfffcc 	andi	r2,r2,65535
  84f3fc:	18800636 	bltu	r3,r2,84f418 <OSQPost+0xe8>
  84f400:	e0bff817 	ldw	r2,-32(fp)
  84f404:	e0bffa15 	stw	r2,-24(fp)
  84f408:	e0bffa17 	ldw	r2,-24(fp)
  84f40c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_Q_FULL);
  84f410:	00800784 	movi	r2,30
  84f414:	00001b06 	br	84f484 <OSQPost+0x154>
    }
    *pq->OSQIn++ = pmsg;                               /* Insert message into queue                    */
  84f418:	e0bffb17 	ldw	r2,-20(fp)
  84f41c:	10800317 	ldw	r2,12(r2)
  84f420:	11000104 	addi	r4,r2,4
  84f424:	e0fffb17 	ldw	r3,-20(fp)
  84f428:	19000315 	stw	r4,12(r3)
  84f42c:	e0ffff17 	ldw	r3,-4(fp)
  84f430:	10c00015 	stw	r3,0(r2)
    pq->OSQEntries++;                                  /* Update the nbr of entries in the queue       */
  84f434:	e0bffb17 	ldw	r2,-20(fp)
  84f438:	1080058b 	ldhu	r2,22(r2)
  84f43c:	10800044 	addi	r2,r2,1
  84f440:	1007883a 	mov	r3,r2
  84f444:	e0bffb17 	ldw	r2,-20(fp)
  84f448:	10c0058d 	sth	r3,22(r2)
    if (pq->OSQIn == pq->OSQEnd) {                     /* Wrap IN ptr if we are at end of queue        */
  84f44c:	e0bffb17 	ldw	r2,-20(fp)
  84f450:	10c00317 	ldw	r3,12(r2)
  84f454:	e0bffb17 	ldw	r2,-20(fp)
  84f458:	10800217 	ldw	r2,8(r2)
  84f45c:	1880041e 	bne	r3,r2,84f470 <OSQPost+0x140>
        pq->OSQIn = pq->OSQStart;
  84f460:	e0bffb17 	ldw	r2,-20(fp)
  84f464:	10c00117 	ldw	r3,4(r2)
  84f468:	e0bffb17 	ldw	r2,-20(fp)
  84f46c:	10c00315 	stw	r3,12(r2)
  84f470:	e0bff817 	ldw	r2,-32(fp)
  84f474:	e0bffc15 	stw	r2,-16(fp)
  84f478:	e0bffc17 	ldw	r2,-16(fp)
  84f47c:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  84f480:	0005883a 	mov	r2,zero
}
  84f484:	e037883a 	mov	sp,fp
  84f488:	dfc00117 	ldw	ra,4(sp)
  84f48c:	df000017 	ldw	fp,0(sp)
  84f490:	dec00204 	addi	sp,sp,8
  84f494:	f800283a 	ret

0084f498 <OSQPostFront>:
*********************************************************************************************************
*/

#if OS_Q_POST_FRONT_EN > 0
INT8U  OSQPostFront (OS_EVENT *pevent, void *pmsg)
{
  84f498:	defff604 	addi	sp,sp,-40
  84f49c:	dfc00915 	stw	ra,36(sp)
  84f4a0:	df000815 	stw	fp,32(sp)
  84f4a4:	df000804 	addi	fp,sp,32
  84f4a8:	e13ffe15 	stw	r4,-8(fp)
  84f4ac:	e17fff15 	stw	r5,-4(fp)
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84f4b0:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  84f4b4:	e0bffe17 	ldw	r2,-8(fp)
  84f4b8:	1000021e 	bne	r2,zero,84f4c4 <OSQPostFront+0x2c>
        return (OS_ERR_PEVENT_NULL);
  84f4bc:	00800104 	movi	r2,4
  84f4c0:	00004c06 	br	84f5f4 <OSQPostFront+0x15c>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {     /* Validate event block type                     */
  84f4c4:	e0bffe17 	ldw	r2,-8(fp)
  84f4c8:	10800003 	ldbu	r2,0(r2)
  84f4cc:	10803fcc 	andi	r2,r2,255
  84f4d0:	108000a0 	cmpeqi	r2,r2,2
  84f4d4:	1000021e 	bne	r2,zero,84f4e0 <OSQPostFront+0x48>
        return (OS_ERR_EVENT_TYPE);
  84f4d8:	00800044 	movi	r2,1
  84f4dc:	00004506 	br	84f5f4 <OSQPostFront+0x15c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84f4e0:	0005303a 	rdctl	r2,status
  84f4e4:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84f4e8:	e0fffd17 	ldw	r3,-12(fp)
  84f4ec:	00bfff84 	movi	r2,-2
  84f4f0:	1884703a 	and	r2,r3,r2
  84f4f4:	1001703a 	wrctl	status,r2
  
  return context;
  84f4f8:	e0bffd17 	ldw	r2,-12(fp)
    }
    OS_ENTER_CRITICAL();
  84f4fc:	e0bff815 	stw	r2,-32(fp)
    if (pevent->OSEventGrp != 0) {                    /* See if any task pending on queue              */
  84f500:	e0bffe17 	ldw	r2,-8(fp)
  84f504:	10800283 	ldbu	r2,10(r2)
  84f508:	10803fcc 	andi	r2,r2,255
  84f50c:	10000c26 	beq	r2,zero,84f540 <OSQPostFront+0xa8>
                                                      /* Ready highest priority task waiting on event  */
        (void)OS_EventTaskRdy(pevent, pmsg, OS_STAT_Q, OS_STAT_PEND_OK);
  84f510:	000f883a 	mov	r7,zero
  84f514:	01800104 	movi	r6,4
  84f518:	e17fff17 	ldw	r5,-4(fp)
  84f51c:	e13ffe17 	ldw	r4,-8(fp)
  84f520:	084b7f00 	call	84b7f0 <OS_EventTaskRdy>
  84f524:	e0bff817 	ldw	r2,-32(fp)
  84f528:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84f52c:	e0bff917 	ldw	r2,-28(fp)
  84f530:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        OS_Sched();                                   /* Find highest priority task ready to run       */
  84f534:	084c23c0 	call	84c23c <OS_Sched>
        return (OS_ERR_NONE);
  84f538:	0005883a 	mov	r2,zero
  84f53c:	00002d06 	br	84f5f4 <OSQPostFront+0x15c>
    }
    pq = (OS_Q *)pevent->OSEventPtr;                  /* Point to queue control block                  */
  84f540:	e0bffe17 	ldw	r2,-8(fp)
  84f544:	10800117 	ldw	r2,4(r2)
  84f548:	e0bffb15 	stw	r2,-20(fp)
    if (pq->OSQEntries >= pq->OSQSize) {              /* Make sure queue is not full                   */
  84f54c:	e0bffb17 	ldw	r2,-20(fp)
  84f550:	10c0058b 	ldhu	r3,22(r2)
  84f554:	e0bffb17 	ldw	r2,-20(fp)
  84f558:	1080050b 	ldhu	r2,20(r2)
  84f55c:	18ffffcc 	andi	r3,r3,65535
  84f560:	10bfffcc 	andi	r2,r2,65535
  84f564:	18800636 	bltu	r3,r2,84f580 <OSQPostFront+0xe8>
  84f568:	e0bff817 	ldw	r2,-32(fp)
  84f56c:	e0bffa15 	stw	r2,-24(fp)
  84f570:	e0bffa17 	ldw	r2,-24(fp)
  84f574:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_Q_FULL);
  84f578:	00800784 	movi	r2,30
  84f57c:	00001d06 	br	84f5f4 <OSQPostFront+0x15c>
    }
    if (pq->OSQOut == pq->OSQStart) {                 /* Wrap OUT ptr if we are at the 1st queue entry */
  84f580:	e0bffb17 	ldw	r2,-20(fp)
  84f584:	10c00417 	ldw	r3,16(r2)
  84f588:	e0bffb17 	ldw	r2,-20(fp)
  84f58c:	10800117 	ldw	r2,4(r2)
  84f590:	1880041e 	bne	r3,r2,84f5a4 <OSQPostFront+0x10c>
        pq->OSQOut = pq->OSQEnd;
  84f594:	e0bffb17 	ldw	r2,-20(fp)
  84f598:	10c00217 	ldw	r3,8(r2)
  84f59c:	e0bffb17 	ldw	r2,-20(fp)
  84f5a0:	10c00415 	stw	r3,16(r2)
    }
    pq->OSQOut--;
  84f5a4:	e0bffb17 	ldw	r2,-20(fp)
  84f5a8:	10800417 	ldw	r2,16(r2)
  84f5ac:	10ffff04 	addi	r3,r2,-4
  84f5b0:	e0bffb17 	ldw	r2,-20(fp)
  84f5b4:	10c00415 	stw	r3,16(r2)
    *pq->OSQOut = pmsg;                               /* Insert message into queue                     */
  84f5b8:	e0bffb17 	ldw	r2,-20(fp)
  84f5bc:	10800417 	ldw	r2,16(r2)
  84f5c0:	e0ffff17 	ldw	r3,-4(fp)
  84f5c4:	10c00015 	stw	r3,0(r2)
    pq->OSQEntries++;                                 /* Update the nbr of entries in the queue        */
  84f5c8:	e0bffb17 	ldw	r2,-20(fp)
  84f5cc:	1080058b 	ldhu	r2,22(r2)
  84f5d0:	10800044 	addi	r2,r2,1
  84f5d4:	1007883a 	mov	r3,r2
  84f5d8:	e0bffb17 	ldw	r2,-20(fp)
  84f5dc:	10c0058d 	sth	r3,22(r2)
  84f5e0:	e0bff817 	ldw	r2,-32(fp)
  84f5e4:	e0bffc15 	stw	r2,-16(fp)
  84f5e8:	e0bffc17 	ldw	r2,-16(fp)
  84f5ec:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  84f5f0:	0005883a 	mov	r2,zero
}
  84f5f4:	e037883a 	mov	sp,fp
  84f5f8:	dfc00117 	ldw	ra,4(sp)
  84f5fc:	df000017 	ldw	fp,0(sp)
  84f600:	dec00204 	addi	sp,sp,8
  84f604:	f800283a 	ret

0084f608 <OSQPostOpt>:
*********************************************************************************************************
*/

#if OS_Q_POST_OPT_EN > 0
INT8U  OSQPostOpt (OS_EVENT *pevent, void *pmsg, INT8U opt)
{
  84f608:	defff504 	addi	sp,sp,-44
  84f60c:	dfc00a15 	stw	ra,40(sp)
  84f610:	df000915 	stw	fp,36(sp)
  84f614:	df000904 	addi	fp,sp,36
  84f618:	e13ffd15 	stw	r4,-12(fp)
  84f61c:	e17ffe15 	stw	r5,-8(fp)
  84f620:	3005883a 	mov	r2,r6
  84f624:	e0bfff05 	stb	r2,-4(fp)
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84f628:	e03ff715 	stw	zero,-36(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  84f62c:	e0bffd17 	ldw	r2,-12(fp)
  84f630:	1000021e 	bne	r2,zero,84f63c <OSQPostOpt+0x34>
        return (OS_ERR_PEVENT_NULL);
  84f634:	00800104 	movi	r2,4
  84f638:	00007106 	br	84f800 <OSQPostOpt+0x1f8>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {     /* Validate event block type                     */
  84f63c:	e0bffd17 	ldw	r2,-12(fp)
  84f640:	10800003 	ldbu	r2,0(r2)
  84f644:	10803fcc 	andi	r2,r2,255
  84f648:	108000a0 	cmpeqi	r2,r2,2
  84f64c:	1000021e 	bne	r2,zero,84f658 <OSQPostOpt+0x50>
        return (OS_ERR_EVENT_TYPE);
  84f650:	00800044 	movi	r2,1
  84f654:	00006a06 	br	84f800 <OSQPostOpt+0x1f8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84f658:	0005303a 	rdctl	r2,status
  84f65c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84f660:	e0fffc17 	ldw	r3,-16(fp)
  84f664:	00bfff84 	movi	r2,-2
  84f668:	1884703a 	and	r2,r3,r2
  84f66c:	1001703a 	wrctl	status,r2
  
  return context;
  84f670:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84f674:	e0bff715 	stw	r2,-36(fp)
    if (pevent->OSEventGrp != 0x00) {                 /* See if any task pending on queue              */
  84f678:	e0bffd17 	ldw	r2,-12(fp)
  84f67c:	10800283 	ldbu	r2,10(r2)
  84f680:	10803fcc 	andi	r2,r2,255
  84f684:	10001d26 	beq	r2,zero,84f6fc <OSQPostOpt+0xf4>
        if ((opt & OS_POST_OPT_BROADCAST) != 0x00) {  /* Do we need to post msg to ALL waiting tasks ? */
  84f688:	e0bfff03 	ldbu	r2,-4(fp)
  84f68c:	1080004c 	andi	r2,r2,1
  84f690:	10000b26 	beq	r2,zero,84f6c0 <OSQPostOpt+0xb8>
            while (pevent->OSEventGrp != 0) {         /* Yes, Post to ALL tasks waiting on queue       */
  84f694:	00000506 	br	84f6ac <OSQPostOpt+0xa4>
                (void)OS_EventTaskRdy(pevent, pmsg, OS_STAT_Q, OS_STAT_PEND_OK);
  84f698:	000f883a 	mov	r7,zero
  84f69c:	01800104 	movi	r6,4
  84f6a0:	e17ffe17 	ldw	r5,-8(fp)
  84f6a4:	e13ffd17 	ldw	r4,-12(fp)
  84f6a8:	084b7f00 	call	84b7f0 <OS_EventTaskRdy>
        return (OS_ERR_EVENT_TYPE);
    }
    OS_ENTER_CRITICAL();
    if (pevent->OSEventGrp != 0x00) {                 /* See if any task pending on queue              */
        if ((opt & OS_POST_OPT_BROADCAST) != 0x00) {  /* Do we need to post msg to ALL waiting tasks ? */
            while (pevent->OSEventGrp != 0) {         /* Yes, Post to ALL tasks waiting on queue       */
  84f6ac:	e0bffd17 	ldw	r2,-12(fp)
  84f6b0:	10800283 	ldbu	r2,10(r2)
  84f6b4:	10803fcc 	andi	r2,r2,255
  84f6b8:	103ff71e 	bne	r2,zero,84f698 <__alt_mem_epcs_flash_controller_0+0xff846698>
  84f6bc:	00000506 	br	84f6d4 <OSQPostOpt+0xcc>
                (void)OS_EventTaskRdy(pevent, pmsg, OS_STAT_Q, OS_STAT_PEND_OK);
            }
        } else {                                      /* No,  Post to HPT waiting on queue             */
            (void)OS_EventTaskRdy(pevent, pmsg, OS_STAT_Q, OS_STAT_PEND_OK);
  84f6c0:	000f883a 	mov	r7,zero
  84f6c4:	01800104 	movi	r6,4
  84f6c8:	e17ffe17 	ldw	r5,-8(fp)
  84f6cc:	e13ffd17 	ldw	r4,-12(fp)
  84f6d0:	084b7f00 	call	84b7f0 <OS_EventTaskRdy>
  84f6d4:	e0bff717 	ldw	r2,-36(fp)
  84f6d8:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84f6dc:	e0bff817 	ldw	r2,-32(fp)
  84f6e0:	1001703a 	wrctl	status,r2
        }
        OS_EXIT_CRITICAL();
        if ((opt & OS_POST_OPT_NO_SCHED) == 0) {	  /* See if scheduler needs to be invoked          */
  84f6e4:	e0bfff03 	ldbu	r2,-4(fp)
  84f6e8:	1080010c 	andi	r2,r2,4
  84f6ec:	1000011e 	bne	r2,zero,84f6f4 <OSQPostOpt+0xec>
            OS_Sched();                               /* Find highest priority task ready to run       */
  84f6f0:	084c23c0 	call	84c23c <OS_Sched>
        }
        return (OS_ERR_NONE);
  84f6f4:	0005883a 	mov	r2,zero
  84f6f8:	00004106 	br	84f800 <OSQPostOpt+0x1f8>
    }
    pq = (OS_Q *)pevent->OSEventPtr;                  /* Point to queue control block                  */
  84f6fc:	e0bffd17 	ldw	r2,-12(fp)
  84f700:	10800117 	ldw	r2,4(r2)
  84f704:	e0bffa15 	stw	r2,-24(fp)
    if (pq->OSQEntries >= pq->OSQSize) {              /* Make sure queue is not full                   */
  84f708:	e0bffa17 	ldw	r2,-24(fp)
  84f70c:	10c0058b 	ldhu	r3,22(r2)
  84f710:	e0bffa17 	ldw	r2,-24(fp)
  84f714:	1080050b 	ldhu	r2,20(r2)
  84f718:	18ffffcc 	andi	r3,r3,65535
  84f71c:	10bfffcc 	andi	r2,r2,65535
  84f720:	18800636 	bltu	r3,r2,84f73c <OSQPostOpt+0x134>
  84f724:	e0bff717 	ldw	r2,-36(fp)
  84f728:	e0bff915 	stw	r2,-28(fp)
  84f72c:	e0bff917 	ldw	r2,-28(fp)
  84f730:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_Q_FULL);
  84f734:	00800784 	movi	r2,30
  84f738:	00003106 	br	84f800 <OSQPostOpt+0x1f8>
    }
    if ((opt & OS_POST_OPT_FRONT) != 0x00) {          /* Do we post to the FRONT of the queue?         */
  84f73c:	e0bfff03 	ldbu	r2,-4(fp)
  84f740:	1080008c 	andi	r2,r2,2
  84f744:	10001326 	beq	r2,zero,84f794 <OSQPostOpt+0x18c>
        if (pq->OSQOut == pq->OSQStart) {             /* Yes, Post as LIFO, Wrap OUT pointer if we ... */
  84f748:	e0bffa17 	ldw	r2,-24(fp)
  84f74c:	10c00417 	ldw	r3,16(r2)
  84f750:	e0bffa17 	ldw	r2,-24(fp)
  84f754:	10800117 	ldw	r2,4(r2)
  84f758:	1880041e 	bne	r3,r2,84f76c <OSQPostOpt+0x164>
            pq->OSQOut = pq->OSQEnd;                  /*      ... are at the 1st queue entry           */
  84f75c:	e0bffa17 	ldw	r2,-24(fp)
  84f760:	10c00217 	ldw	r3,8(r2)
  84f764:	e0bffa17 	ldw	r2,-24(fp)
  84f768:	10c00415 	stw	r3,16(r2)
        }
        pq->OSQOut--;
  84f76c:	e0bffa17 	ldw	r2,-24(fp)
  84f770:	10800417 	ldw	r2,16(r2)
  84f774:	10ffff04 	addi	r3,r2,-4
  84f778:	e0bffa17 	ldw	r2,-24(fp)
  84f77c:	10c00415 	stw	r3,16(r2)
        *pq->OSQOut = pmsg;                           /*      Insert message into queue                */
  84f780:	e0bffa17 	ldw	r2,-24(fp)
  84f784:	10800417 	ldw	r2,16(r2)
  84f788:	e0fffe17 	ldw	r3,-8(fp)
  84f78c:	10c00015 	stw	r3,0(r2)
  84f790:	00001006 	br	84f7d4 <OSQPostOpt+0x1cc>
    } else {                                          /* No,  Post as FIFO                             */
        *pq->OSQIn++ = pmsg;                          /*      Insert message into queue                */
  84f794:	e0bffa17 	ldw	r2,-24(fp)
  84f798:	10800317 	ldw	r2,12(r2)
  84f79c:	11000104 	addi	r4,r2,4
  84f7a0:	e0fffa17 	ldw	r3,-24(fp)
  84f7a4:	19000315 	stw	r4,12(r3)
  84f7a8:	e0fffe17 	ldw	r3,-8(fp)
  84f7ac:	10c00015 	stw	r3,0(r2)
        if (pq->OSQIn == pq->OSQEnd) {                /*      Wrap IN ptr if we are at end of queue    */
  84f7b0:	e0bffa17 	ldw	r2,-24(fp)
  84f7b4:	10c00317 	ldw	r3,12(r2)
  84f7b8:	e0bffa17 	ldw	r2,-24(fp)
  84f7bc:	10800217 	ldw	r2,8(r2)
  84f7c0:	1880041e 	bne	r3,r2,84f7d4 <OSQPostOpt+0x1cc>
            pq->OSQIn = pq->OSQStart;
  84f7c4:	e0bffa17 	ldw	r2,-24(fp)
  84f7c8:	10c00117 	ldw	r3,4(r2)
  84f7cc:	e0bffa17 	ldw	r2,-24(fp)
  84f7d0:	10c00315 	stw	r3,12(r2)
        }
    }
    pq->OSQEntries++;                                 /* Update the nbr of entries in the queue        */
  84f7d4:	e0bffa17 	ldw	r2,-24(fp)
  84f7d8:	1080058b 	ldhu	r2,22(r2)
  84f7dc:	10800044 	addi	r2,r2,1
  84f7e0:	1007883a 	mov	r3,r2
  84f7e4:	e0bffa17 	ldw	r2,-24(fp)
  84f7e8:	10c0058d 	sth	r3,22(r2)
  84f7ec:	e0bff717 	ldw	r2,-36(fp)
  84f7f0:	e0bffb15 	stw	r2,-20(fp)
  84f7f4:	e0bffb17 	ldw	r2,-20(fp)
  84f7f8:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  84f7fc:	0005883a 	mov	r2,zero
}
  84f800:	e037883a 	mov	sp,fp
  84f804:	dfc00117 	ldw	ra,4(sp)
  84f808:	df000017 	ldw	fp,0(sp)
  84f80c:	dec00204 	addi	sp,sp,8
  84f810:	f800283a 	ret

0084f814 <OSQQuery>:
*********************************************************************************************************
*/

#if OS_Q_QUERY_EN > 0
INT8U  OSQQuery (OS_EVENT *pevent, OS_Q_DATA *p_q_data)
{
  84f814:	defff604 	addi	sp,sp,-40
  84f818:	df000915 	stw	fp,36(sp)
  84f81c:	df000904 	addi	fp,sp,36
  84f820:	e13ffe15 	stw	r4,-8(fp)
  84f824:	e17fff15 	stw	r5,-4(fp)
#else
    INT16U    *psrc;
    INT16U    *pdest;
#endif
#if OS_CRITICAL_METHOD == 3                            /* Allocate storage for CPU status register     */
    OS_CPU_SR  cpu_sr = 0;
  84f828:	e03ffa15 	stw	zero,-24(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                     /* Validate 'pevent'                            */
  84f82c:	e0bffe17 	ldw	r2,-8(fp)
  84f830:	1000021e 	bne	r2,zero,84f83c <OSQQuery+0x28>
        return (OS_ERR_PEVENT_NULL);
  84f834:	00800104 	movi	r2,4
  84f838:	00004906 	br	84f960 <OSQQuery+0x14c>
    }
    if (p_q_data == (OS_Q_DATA *)0) {                  /* Validate 'p_q_data'                          */
  84f83c:	e0bfff17 	ldw	r2,-4(fp)
  84f840:	1000021e 	bne	r2,zero,84f84c <OSQQuery+0x38>
        return (OS_ERR_PDATA_NULL);
  84f844:	00800244 	movi	r2,9
  84f848:	00004506 	br	84f960 <OSQQuery+0x14c>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {      /* Validate event block type                    */
  84f84c:	e0bffe17 	ldw	r2,-8(fp)
  84f850:	10800003 	ldbu	r2,0(r2)
  84f854:	10803fcc 	andi	r2,r2,255
  84f858:	108000a0 	cmpeqi	r2,r2,2
  84f85c:	1000021e 	bne	r2,zero,84f868 <OSQQuery+0x54>
        return (OS_ERR_EVENT_TYPE);
  84f860:	00800044 	movi	r2,1
  84f864:	00003e06 	br	84f960 <OSQQuery+0x14c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84f868:	0005303a 	rdctl	r2,status
  84f86c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84f870:	e0fffd17 	ldw	r3,-12(fp)
  84f874:	00bfff84 	movi	r2,-2
  84f878:	1884703a 	and	r2,r3,r2
  84f87c:	1001703a 	wrctl	status,r2
  
  return context;
  84f880:	e0bffd17 	ldw	r2,-12(fp)
    }
    OS_ENTER_CRITICAL();
  84f884:	e0bffa15 	stw	r2,-24(fp)
    p_q_data->OSEventGrp = pevent->OSEventGrp;         /* Copy message queue wait list                 */
  84f888:	e0bffe17 	ldw	r2,-8(fp)
  84f88c:	10c00283 	ldbu	r3,10(r2)
  84f890:	e0bfff17 	ldw	r2,-4(fp)
  84f894:	10c002c5 	stb	r3,11(r2)
    psrc                 = &pevent->OSEventTbl[0];
  84f898:	e0bffe17 	ldw	r2,-8(fp)
  84f89c:	108002c4 	addi	r2,r2,11
  84f8a0:	e0bff815 	stw	r2,-32(fp)
    pdest                = &p_q_data->OSEventTbl[0];
  84f8a4:	e0bfff17 	ldw	r2,-4(fp)
  84f8a8:	10800204 	addi	r2,r2,8
  84f8ac:	e0bff915 	stw	r2,-28(fp)
    for (i = 0; i < OS_EVENT_TBL_SIZE; i++) {
  84f8b0:	e03ff705 	stb	zero,-36(fp)
  84f8b4:	00000b06 	br	84f8e4 <OSQQuery+0xd0>
        *pdest++ = *psrc++;
  84f8b8:	e0bff917 	ldw	r2,-28(fp)
  84f8bc:	10c00044 	addi	r3,r2,1
  84f8c0:	e0fff915 	stw	r3,-28(fp)
  84f8c4:	e0fff817 	ldw	r3,-32(fp)
  84f8c8:	19000044 	addi	r4,r3,1
  84f8cc:	e13ff815 	stw	r4,-32(fp)
  84f8d0:	18c00003 	ldbu	r3,0(r3)
  84f8d4:	10c00005 	stb	r3,0(r2)
    }
    OS_ENTER_CRITICAL();
    p_q_data->OSEventGrp = pevent->OSEventGrp;         /* Copy message queue wait list                 */
    psrc                 = &pevent->OSEventTbl[0];
    pdest                = &p_q_data->OSEventTbl[0];
    for (i = 0; i < OS_EVENT_TBL_SIZE; i++) {
  84f8d8:	e0bff703 	ldbu	r2,-36(fp)
  84f8dc:	10800044 	addi	r2,r2,1
  84f8e0:	e0bff705 	stb	r2,-36(fp)
  84f8e4:	e0bff703 	ldbu	r2,-36(fp)
  84f8e8:	108000f0 	cmpltui	r2,r2,3
  84f8ec:	103ff21e 	bne	r2,zero,84f8b8 <__alt_mem_epcs_flash_controller_0+0xff8468b8>
        *pdest++ = *psrc++;
    }
    pq = (OS_Q *)pevent->OSEventPtr;
  84f8f0:	e0bffe17 	ldw	r2,-8(fp)
  84f8f4:	10800117 	ldw	r2,4(r2)
  84f8f8:	e0bffc15 	stw	r2,-16(fp)
    if (pq->OSQEntries > 0) {
  84f8fc:	e0bffc17 	ldw	r2,-16(fp)
  84f900:	1080058b 	ldhu	r2,22(r2)
  84f904:	10bfffcc 	andi	r2,r2,65535
  84f908:	10000626 	beq	r2,zero,84f924 <OSQQuery+0x110>
        p_q_data->OSMsg = *pq->OSQOut;                 /* Get next message to return if available      */
  84f90c:	e0bffc17 	ldw	r2,-16(fp)
  84f910:	10800417 	ldw	r2,16(r2)
  84f914:	10c00017 	ldw	r3,0(r2)
  84f918:	e0bfff17 	ldw	r2,-4(fp)
  84f91c:	10c00015 	stw	r3,0(r2)
  84f920:	00000206 	br	84f92c <OSQQuery+0x118>
    } else {
        p_q_data->OSMsg = (void *)0;
  84f924:	e0bfff17 	ldw	r2,-4(fp)
  84f928:	10000015 	stw	zero,0(r2)
    }
    p_q_data->OSNMsgs = pq->OSQEntries;
  84f92c:	e0bffc17 	ldw	r2,-16(fp)
  84f930:	10c0058b 	ldhu	r3,22(r2)
  84f934:	e0bfff17 	ldw	r2,-4(fp)
  84f938:	10c0010d 	sth	r3,4(r2)
    p_q_data->OSQSize = pq->OSQSize;
  84f93c:	e0bffc17 	ldw	r2,-16(fp)
  84f940:	10c0050b 	ldhu	r3,20(r2)
  84f944:	e0bfff17 	ldw	r2,-4(fp)
  84f948:	10c0018d 	sth	r3,6(r2)
  84f94c:	e0bffa17 	ldw	r2,-24(fp)
  84f950:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84f954:	e0bffb17 	ldw	r2,-20(fp)
  84f958:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  84f95c:	0005883a 	mov	r2,zero
}
  84f960:	e037883a 	mov	sp,fp
  84f964:	df000017 	ldw	fp,0(sp)
  84f968:	dec00104 	addi	sp,sp,4
  84f96c:	f800283a 	ret

0084f970 <OS_QInit>:
* Note(s)    : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/

void  OS_QInit (void)
{
  84f970:	defffb04 	addi	sp,sp,-20
  84f974:	dfc00415 	stw	ra,16(sp)
  84f978:	df000315 	stw	fp,12(sp)
  84f97c:	df000304 	addi	fp,sp,12
    OS_Q   *pq1;
    OS_Q   *pq2;



    OS_MemClr((INT8U *)&OSQTbl[0], sizeof(OSQTbl));  /* Clear the queue table                          */
  84f980:	01407804 	movi	r5,480
  84f984:	010021b4 	movhi	r4,134
  84f988:	21122d04 	addi	r4,r4,18612
  84f98c:	084c1800 	call	84c180 <OS_MemClr>
    pq1 = &OSQTbl[0];
  84f990:	008021b4 	movhi	r2,134
  84f994:	10922d04 	addi	r2,r2,18612
  84f998:	e0bffe15 	stw	r2,-8(fp)
    pq2 = &OSQTbl[1];
  84f99c:	008021b4 	movhi	r2,134
  84f9a0:	10923304 	addi	r2,r2,18636
  84f9a4:	e0bfff15 	stw	r2,-4(fp)
    for (i = 0; i < (OS_MAX_QS - 1); i++) {          /* Init. list of free QUEUE control blocks        */
  84f9a8:	e03ffd0d 	sth	zero,-12(fp)
  84f9ac:	00000c06 	br	84f9e0 <OS_QInit+0x70>
        pq1->OSQPtr = pq2;
  84f9b0:	e0bffe17 	ldw	r2,-8(fp)
  84f9b4:	e0ffff17 	ldw	r3,-4(fp)
  84f9b8:	10c00015 	stw	r3,0(r2)
        pq1++;
  84f9bc:	e0bffe17 	ldw	r2,-8(fp)
  84f9c0:	10800604 	addi	r2,r2,24
  84f9c4:	e0bffe15 	stw	r2,-8(fp)
        pq2++;
  84f9c8:	e0bfff17 	ldw	r2,-4(fp)
  84f9cc:	10800604 	addi	r2,r2,24
  84f9d0:	e0bfff15 	stw	r2,-4(fp)


    OS_MemClr((INT8U *)&OSQTbl[0], sizeof(OSQTbl));  /* Clear the queue table                          */
    pq1 = &OSQTbl[0];
    pq2 = &OSQTbl[1];
    for (i = 0; i < (OS_MAX_QS - 1); i++) {          /* Init. list of free QUEUE control blocks        */
  84f9d4:	e0bffd0b 	ldhu	r2,-12(fp)
  84f9d8:	10800044 	addi	r2,r2,1
  84f9dc:	e0bffd0d 	sth	r2,-12(fp)
  84f9e0:	e0bffd0b 	ldhu	r2,-12(fp)
  84f9e4:	108004f0 	cmpltui	r2,r2,19
  84f9e8:	103ff11e 	bne	r2,zero,84f9b0 <__alt_mem_epcs_flash_controller_0+0xff8469b0>
        pq1->OSQPtr = pq2;
        pq1++;
        pq2++;
    }
    pq1->OSQPtr = (OS_Q *)0;
  84f9ec:	e0bffe17 	ldw	r2,-8(fp)
  84f9f0:	10000015 	stw	zero,0(r2)
    OSQFreeList = &OSQTbl[0];
  84f9f4:	008021b4 	movhi	r2,134
  84f9f8:	10922d04 	addi	r2,r2,18612
  84f9fc:	d0a0a015 	stw	r2,-32128(gp)
#endif
}
  84fa00:	0001883a 	nop
  84fa04:	e037883a 	mov	sp,fp
  84fa08:	dfc00117 	ldw	ra,4(sp)
  84fa0c:	df000017 	ldw	fp,0(sp)
  84fa10:	dec00204 	addi	sp,sp,8
  84fa14:	f800283a 	ret

0084fa18 <OSSemAccept>:
*********************************************************************************************************
*/

#if OS_SEM_ACCEPT_EN > 0
INT16U  OSSemAccept (OS_EVENT *pevent)
{
  84fa18:	defffa04 	addi	sp,sp,-24
  84fa1c:	df000515 	stw	fp,20(sp)
  84fa20:	df000504 	addi	fp,sp,20
  84fa24:	e13fff15 	stw	r4,-4(fp)
    INT16U     cnt;
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84fa28:	e03ffb15 	stw	zero,-20(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  84fa2c:	e0bfff17 	ldw	r2,-4(fp)
  84fa30:	1000021e 	bne	r2,zero,84fa3c <OSSemAccept+0x24>
        return (0);
  84fa34:	0005883a 	mov	r2,zero
  84fa38:	00001f06 	br	84fab8 <OSSemAccept+0xa0>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_SEM) {   /* Validate event block type                     */
  84fa3c:	e0bfff17 	ldw	r2,-4(fp)
  84fa40:	10800003 	ldbu	r2,0(r2)
  84fa44:	10803fcc 	andi	r2,r2,255
  84fa48:	108000e0 	cmpeqi	r2,r2,3
  84fa4c:	1000021e 	bne	r2,zero,84fa58 <OSSemAccept+0x40>
        return (0);
  84fa50:	0005883a 	mov	r2,zero
  84fa54:	00001806 	br	84fab8 <OSSemAccept+0xa0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84fa58:	0005303a 	rdctl	r2,status
  84fa5c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84fa60:	e0fffe17 	ldw	r3,-8(fp)
  84fa64:	00bfff84 	movi	r2,-2
  84fa68:	1884703a 	and	r2,r3,r2
  84fa6c:	1001703a 	wrctl	status,r2
  
  return context;
  84fa70:	e0bffe17 	ldw	r2,-8(fp)
    }
    OS_ENTER_CRITICAL();
  84fa74:	e0bffb15 	stw	r2,-20(fp)
    cnt = pevent->OSEventCnt;
  84fa78:	e0bfff17 	ldw	r2,-4(fp)
  84fa7c:	1080020b 	ldhu	r2,8(r2)
  84fa80:	e0bffd0d 	sth	r2,-12(fp)
    if (cnt > 0) {                                    /* See if resource is available                  */
  84fa84:	e0bffd0b 	ldhu	r2,-12(fp)
  84fa88:	10000626 	beq	r2,zero,84faa4 <OSSemAccept+0x8c>
        pevent->OSEventCnt--;                         /* Yes, decrement semaphore and notify caller    */
  84fa8c:	e0bfff17 	ldw	r2,-4(fp)
  84fa90:	1080020b 	ldhu	r2,8(r2)
  84fa94:	10bfffc4 	addi	r2,r2,-1
  84fa98:	1007883a 	mov	r3,r2
  84fa9c:	e0bfff17 	ldw	r2,-4(fp)
  84faa0:	10c0020d 	sth	r3,8(r2)
  84faa4:	e0bffb17 	ldw	r2,-20(fp)
  84faa8:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84faac:	e0bffc17 	ldw	r2,-16(fp)
  84fab0:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    return (cnt);                                     /* Return semaphore count                        */
  84fab4:	e0bffd0b 	ldhu	r2,-12(fp)
}
  84fab8:	e037883a 	mov	sp,fp
  84fabc:	df000017 	ldw	fp,0(sp)
  84fac0:	dec00104 	addi	sp,sp,4
  84fac4:	f800283a 	ret

0084fac8 <OSSemCreate>:
*              == (void *)0  if no event control blocks were available
*********************************************************************************************************
*/

OS_EVENT  *OSSemCreate (INT16U cnt)
{
  84fac8:	defff904 	addi	sp,sp,-28
  84facc:	dfc00615 	stw	ra,24(sp)
  84fad0:	df000515 	stw	fp,20(sp)
  84fad4:	df000504 	addi	fp,sp,20
  84fad8:	2005883a 	mov	r2,r4
  84fadc:	e0bfff0d 	sth	r2,-4(fp)
    OS_EVENT  *pevent;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  84fae0:	e03ffb15 	stw	zero,-20(fp)
#endif



    if (OSIntNesting > 0) {                                /* See if called from ISR ...               */
  84fae4:	d0a0a303 	ldbu	r2,-32116(gp)
  84fae8:	10803fcc 	andi	r2,r2,255
  84faec:	10000226 	beq	r2,zero,84faf8 <OSSemCreate+0x30>
        return ((OS_EVENT *)0);                            /* ... can't CREATE from an ISR             */
  84faf0:	0005883a 	mov	r2,zero
  84faf4:	00002506 	br	84fb8c <OSSemCreate+0xc4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84faf8:	0005303a 	rdctl	r2,status
  84fafc:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84fb00:	e0fffe17 	ldw	r3,-8(fp)
  84fb04:	00bfff84 	movi	r2,-2
  84fb08:	1884703a 	and	r2,r3,r2
  84fb0c:	1001703a 	wrctl	status,r2
  
  return context;
  84fb10:	e0bffe17 	ldw	r2,-8(fp)
    }
    OS_ENTER_CRITICAL();
  84fb14:	e0bffb15 	stw	r2,-20(fp)
    pevent = OSEventFreeList;                              /* Get next free event control block        */
  84fb18:	d0a0a217 	ldw	r2,-32120(gp)
  84fb1c:	e0bffd15 	stw	r2,-12(fp)
    if (OSEventFreeList != (OS_EVENT *)0) {                /* See if pool of free ECB pool was empty   */
  84fb20:	d0a0a217 	ldw	r2,-32120(gp)
  84fb24:	10000326 	beq	r2,zero,84fb34 <OSSemCreate+0x6c>
        OSEventFreeList = (OS_EVENT *)OSEventFreeList->OSEventPtr;
  84fb28:	d0a0a217 	ldw	r2,-32120(gp)
  84fb2c:	10800117 	ldw	r2,4(r2)
  84fb30:	d0a0a215 	stw	r2,-32120(gp)
  84fb34:	e0bffb17 	ldw	r2,-20(fp)
  84fb38:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84fb3c:	e0bffc17 	ldw	r2,-16(fp)
  84fb40:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    if (pevent != (OS_EVENT *)0) {                         /* Get an event control block               */
  84fb44:	e0bffd17 	ldw	r2,-12(fp)
  84fb48:	10000f26 	beq	r2,zero,84fb88 <OSSemCreate+0xc0>
        pevent->OSEventType    = OS_EVENT_TYPE_SEM;
  84fb4c:	e0bffd17 	ldw	r2,-12(fp)
  84fb50:	00c000c4 	movi	r3,3
  84fb54:	10c00005 	stb	r3,0(r2)
        pevent->OSEventCnt     = cnt;                      /* Set semaphore value                      */
  84fb58:	e0bffd17 	ldw	r2,-12(fp)
  84fb5c:	e0ffff0b 	ldhu	r3,-4(fp)
  84fb60:	10c0020d 	sth	r3,8(r2)
        pevent->OSEventPtr     = (void *)0;                /* Unlink from ECB free list                */
  84fb64:	e0bffd17 	ldw	r2,-12(fp)
  84fb68:	10000115 	stw	zero,4(r2)
#if OS_EVENT_NAME_SIZE > 1
        pevent->OSEventName[0] = '?';                      /* Unknown name                             */
  84fb6c:	e0bffd17 	ldw	r2,-12(fp)
  84fb70:	00c00fc4 	movi	r3,63
  84fb74:	10c00385 	stb	r3,14(r2)
        pevent->OSEventName[1] = OS_ASCII_NUL;
  84fb78:	e0bffd17 	ldw	r2,-12(fp)
  84fb7c:	100003c5 	stb	zero,15(r2)
#endif
        OS_EventWaitListInit(pevent);                      /* Initialize to 'nobody waiting' on sem.   */
  84fb80:	e13ffd17 	ldw	r4,-12(fp)
  84fb84:	084bda00 	call	84bda0 <OS_EventWaitListInit>
    }
    return (pevent);
  84fb88:	e0bffd17 	ldw	r2,-12(fp)
}
  84fb8c:	e037883a 	mov	sp,fp
  84fb90:	dfc00117 	ldw	ra,4(sp)
  84fb94:	df000017 	ldw	fp,0(sp)
  84fb98:	dec00204 	addi	sp,sp,8
  84fb9c:	f800283a 	ret

0084fba0 <OSSemDel>:
*********************************************************************************************************
*/

#if OS_SEM_DEL_EN > 0
OS_EVENT  *OSSemDel (OS_EVENT *pevent, INT8U opt, INT8U *perr)
{
  84fba0:	defff304 	addi	sp,sp,-52
  84fba4:	dfc00c15 	stw	ra,48(sp)
  84fba8:	df000b15 	stw	fp,44(sp)
  84fbac:	df000b04 	addi	fp,sp,44
  84fbb0:	e13ffd15 	stw	r4,-12(fp)
  84fbb4:	2805883a 	mov	r2,r5
  84fbb8:	e1bfff15 	stw	r6,-4(fp)
  84fbbc:	e0bffe05 	stb	r2,-8(fp)
    BOOLEAN    tasks_waiting;
    OS_EVENT  *pevent_return;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  84fbc0:	e03ff715 	stw	zero,-36(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                              /* Validate 'perr'                          */
  84fbc4:	e0bfff17 	ldw	r2,-4(fp)
  84fbc8:	1000021e 	bne	r2,zero,84fbd4 <OSSemDel+0x34>
        return (pevent);
  84fbcc:	e0bffd17 	ldw	r2,-12(fp)
  84fbd0:	00007e06 	br	84fdcc <OSSemDel+0x22c>
    }
    if (pevent == (OS_EVENT *)0) {                         /* Validate 'pevent'                        */
  84fbd4:	e0bffd17 	ldw	r2,-12(fp)
  84fbd8:	1000051e 	bne	r2,zero,84fbf0 <OSSemDel+0x50>
        *perr = OS_ERR_PEVENT_NULL;
  84fbdc:	e0bfff17 	ldw	r2,-4(fp)
  84fbe0:	00c00104 	movi	r3,4
  84fbe4:	10c00005 	stb	r3,0(r2)
        return (pevent);
  84fbe8:	e0bffd17 	ldw	r2,-12(fp)
  84fbec:	00007706 	br	84fdcc <OSSemDel+0x22c>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_SEM) {        /* Validate event block type                */
  84fbf0:	e0bffd17 	ldw	r2,-12(fp)
  84fbf4:	10800003 	ldbu	r2,0(r2)
  84fbf8:	10803fcc 	andi	r2,r2,255
  84fbfc:	108000e0 	cmpeqi	r2,r2,3
  84fc00:	1000051e 	bne	r2,zero,84fc18 <OSSemDel+0x78>
        *perr = OS_ERR_EVENT_TYPE;
  84fc04:	e0bfff17 	ldw	r2,-4(fp)
  84fc08:	00c00044 	movi	r3,1
  84fc0c:	10c00005 	stb	r3,0(r2)
        return (pevent);
  84fc10:	e0bffd17 	ldw	r2,-12(fp)
  84fc14:	00006d06 	br	84fdcc <OSSemDel+0x22c>
    }
    if (OSIntNesting > 0) {                                /* See if called from ISR ...               */
  84fc18:	d0a0a303 	ldbu	r2,-32116(gp)
  84fc1c:	10803fcc 	andi	r2,r2,255
  84fc20:	10000526 	beq	r2,zero,84fc38 <OSSemDel+0x98>
        *perr = OS_ERR_DEL_ISR;                             /* ... can't DELETE from an ISR             */
  84fc24:	e0bfff17 	ldw	r2,-4(fp)
  84fc28:	00c003c4 	movi	r3,15
  84fc2c:	10c00005 	stb	r3,0(r2)
        return (pevent);
  84fc30:	e0bffd17 	ldw	r2,-12(fp)
  84fc34:	00006506 	br	84fdcc <OSSemDel+0x22c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84fc38:	0005303a 	rdctl	r2,status
  84fc3c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84fc40:	e0fffc17 	ldw	r3,-16(fp)
  84fc44:	00bfff84 	movi	r2,-2
  84fc48:	1884703a 	and	r2,r3,r2
  84fc4c:	1001703a 	wrctl	status,r2
  
  return context;
  84fc50:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84fc54:	e0bff715 	stw	r2,-36(fp)
    if (pevent->OSEventGrp != 0) {                         /* See if any tasks waiting on semaphore    */
  84fc58:	e0bffd17 	ldw	r2,-12(fp)
  84fc5c:	10800283 	ldbu	r2,10(r2)
  84fc60:	10803fcc 	andi	r2,r2,255
  84fc64:	10000326 	beq	r2,zero,84fc74 <OSSemDel+0xd4>
        tasks_waiting = OS_TRUE;                           /* Yes                                      */
  84fc68:	00800044 	movi	r2,1
  84fc6c:	e0bff505 	stb	r2,-44(fp)
  84fc70:	00000106 	br	84fc78 <OSSemDel+0xd8>
    } else {
        tasks_waiting = OS_FALSE;                          /* No                                       */
  84fc74:	e03ff505 	stb	zero,-44(fp)
    }
    switch (opt) {
  84fc78:	e0bffe03 	ldbu	r2,-8(fp)
  84fc7c:	10000326 	beq	r2,zero,84fc8c <OSSemDel+0xec>
  84fc80:	10800060 	cmpeqi	r2,r2,1
  84fc84:	1000281e 	bne	r2,zero,84fd28 <OSSemDel+0x188>
  84fc88:	00004506 	br	84fda0 <OSSemDel+0x200>
        case OS_DEL_NO_PEND:                               /* Delete semaphore only if no task waiting */
             if (tasks_waiting == OS_FALSE) {
  84fc8c:	e0bff503 	ldbu	r2,-44(fp)
  84fc90:	1000161e 	bne	r2,zero,84fcec <OSSemDel+0x14c>
#if OS_EVENT_NAME_SIZE > 1
                 pevent->OSEventName[0] = '?';             /* Unknown name                             */
  84fc94:	e0bffd17 	ldw	r2,-12(fp)
  84fc98:	00c00fc4 	movi	r3,63
  84fc9c:	10c00385 	stb	r3,14(r2)
                 pevent->OSEventName[1] = OS_ASCII_NUL;
  84fca0:	e0bffd17 	ldw	r2,-12(fp)
  84fca4:	100003c5 	stb	zero,15(r2)
#endif
                 pevent->OSEventType    = OS_EVENT_TYPE_UNUSED;
  84fca8:	e0bffd17 	ldw	r2,-12(fp)
  84fcac:	10000005 	stb	zero,0(r2)
                 pevent->OSEventPtr     = OSEventFreeList; /* Return Event Control Block to free list  */
  84fcb0:	d0e0a217 	ldw	r3,-32120(gp)
  84fcb4:	e0bffd17 	ldw	r2,-12(fp)
  84fcb8:	10c00115 	stw	r3,4(r2)
                 pevent->OSEventCnt     = 0;
  84fcbc:	e0bffd17 	ldw	r2,-12(fp)
  84fcc0:	1000020d 	sth	zero,8(r2)
                 OSEventFreeList        = pevent;          /* Get next free event control block        */
  84fcc4:	e0bffd17 	ldw	r2,-12(fp)
  84fcc8:	d0a0a215 	stw	r2,-32120(gp)
  84fccc:	e0bff717 	ldw	r2,-36(fp)
  84fcd0:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84fcd4:	e0bff817 	ldw	r2,-32(fp)
  84fcd8:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_NONE;
  84fcdc:	e0bfff17 	ldw	r2,-4(fp)
  84fce0:	10000005 	stb	zero,0(r2)
                 pevent_return          = (OS_EVENT *)0;   /* Semaphore has been deleted               */
  84fce4:	e03ff615 	stw	zero,-40(fp)
             } else {
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_TASK_WAITING;
                 pevent_return          = pevent;
             }
             break;
  84fce8:	00003706 	br	84fdc8 <OSSemDel+0x228>
  84fcec:	e0bff717 	ldw	r2,-36(fp)
  84fcf0:	e0bff915 	stw	r2,-28(fp)
  84fcf4:	e0bff917 	ldw	r2,-28(fp)
  84fcf8:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_NONE;
                 pevent_return          = (OS_EVENT *)0;   /* Semaphore has been deleted               */
             } else {
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_TASK_WAITING;
  84fcfc:	e0bfff17 	ldw	r2,-4(fp)
  84fd00:	00c01244 	movi	r3,73
  84fd04:	10c00005 	stb	r3,0(r2)
                 pevent_return          = pevent;
  84fd08:	e0bffd17 	ldw	r2,-12(fp)
  84fd0c:	e0bff615 	stw	r2,-40(fp)
             }
             break;
  84fd10:	00002d06 	br	84fdc8 <OSSemDel+0x228>

        case OS_DEL_ALWAYS:                                /* Always delete the semaphore              */
             while (pevent->OSEventGrp != 0) {             /* Ready ALL tasks waiting for semaphore    */
                 (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_SEM, OS_STAT_PEND_OK);
  84fd14:	000f883a 	mov	r7,zero
  84fd18:	01800044 	movi	r6,1
  84fd1c:	000b883a 	mov	r5,zero
  84fd20:	e13ffd17 	ldw	r4,-12(fp)
  84fd24:	084b7f00 	call	84b7f0 <OS_EventTaskRdy>
                 pevent_return          = pevent;
             }
             break;

        case OS_DEL_ALWAYS:                                /* Always delete the semaphore              */
             while (pevent->OSEventGrp != 0) {             /* Ready ALL tasks waiting for semaphore    */
  84fd28:	e0bffd17 	ldw	r2,-12(fp)
  84fd2c:	10800283 	ldbu	r2,10(r2)
  84fd30:	10803fcc 	andi	r2,r2,255
  84fd34:	103ff71e 	bne	r2,zero,84fd14 <__alt_mem_epcs_flash_controller_0+0xff846d14>
                 (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_SEM, OS_STAT_PEND_OK);
             }
#if OS_EVENT_NAME_SIZE > 1
             pevent->OSEventName[0] = '?';                 /* Unknown name                             */
  84fd38:	e0bffd17 	ldw	r2,-12(fp)
  84fd3c:	00c00fc4 	movi	r3,63
  84fd40:	10c00385 	stb	r3,14(r2)
             pevent->OSEventName[1] = OS_ASCII_NUL;
  84fd44:	e0bffd17 	ldw	r2,-12(fp)
  84fd48:	100003c5 	stb	zero,15(r2)
#endif
             pevent->OSEventType    = OS_EVENT_TYPE_UNUSED;
  84fd4c:	e0bffd17 	ldw	r2,-12(fp)
  84fd50:	10000005 	stb	zero,0(r2)
             pevent->OSEventPtr     = OSEventFreeList;     /* Return Event Control Block to free list  */
  84fd54:	d0e0a217 	ldw	r3,-32120(gp)
  84fd58:	e0bffd17 	ldw	r2,-12(fp)
  84fd5c:	10c00115 	stw	r3,4(r2)
             pevent->OSEventCnt     = 0;
  84fd60:	e0bffd17 	ldw	r2,-12(fp)
  84fd64:	1000020d 	sth	zero,8(r2)
             OSEventFreeList        = pevent;              /* Get next free event control block        */
  84fd68:	e0bffd17 	ldw	r2,-12(fp)
  84fd6c:	d0a0a215 	stw	r2,-32120(gp)
  84fd70:	e0bff717 	ldw	r2,-36(fp)
  84fd74:	e0bffa15 	stw	r2,-24(fp)
  84fd78:	e0bffa17 	ldw	r2,-24(fp)
  84fd7c:	1001703a 	wrctl	status,r2
             OS_EXIT_CRITICAL();
             if (tasks_waiting == OS_TRUE) {               /* Reschedule only if task(s) were waiting  */
  84fd80:	e0bff503 	ldbu	r2,-44(fp)
  84fd84:	10800058 	cmpnei	r2,r2,1
  84fd88:	1000011e 	bne	r2,zero,84fd90 <OSSemDel+0x1f0>
                 OS_Sched();                               /* Find highest priority task ready to run  */
  84fd8c:	084c23c0 	call	84c23c <OS_Sched>
             }
             *perr                  = OS_ERR_NONE;
  84fd90:	e0bfff17 	ldw	r2,-4(fp)
  84fd94:	10000005 	stb	zero,0(r2)
             pevent_return          = (OS_EVENT *)0;       /* Semaphore has been deleted               */
  84fd98:	e03ff615 	stw	zero,-40(fp)
             break;
  84fd9c:	00000a06 	br	84fdc8 <OSSemDel+0x228>
  84fda0:	e0bff717 	ldw	r2,-36(fp)
  84fda4:	e0bffb15 	stw	r2,-20(fp)
  84fda8:	e0bffb17 	ldw	r2,-20(fp)
  84fdac:	1001703a 	wrctl	status,r2

        default:
             OS_EXIT_CRITICAL();
             *perr                  = OS_ERR_INVALID_OPT;
  84fdb0:	e0bfff17 	ldw	r2,-4(fp)
  84fdb4:	00c001c4 	movi	r3,7
  84fdb8:	10c00005 	stb	r3,0(r2)
             pevent_return          = pevent;
  84fdbc:	e0bffd17 	ldw	r2,-12(fp)
  84fdc0:	e0bff615 	stw	r2,-40(fp)
             break;
  84fdc4:	0001883a 	nop
    }
    return (pevent_return);
  84fdc8:	e0bff617 	ldw	r2,-40(fp)
}
  84fdcc:	e037883a 	mov	sp,fp
  84fdd0:	dfc00117 	ldw	ra,4(sp)
  84fdd4:	df000017 	ldw	fp,0(sp)
  84fdd8:	dec00204 	addi	sp,sp,8
  84fddc:	f800283a 	ret

0084fde0 <OSSemPend>:
* Returns    : none
*********************************************************************************************************
*/
/*$PAGE*/
void  OSSemPend (OS_EVENT *pevent, INT16U timeout, INT8U *perr)
{
  84fde0:	defff504 	addi	sp,sp,-44
  84fde4:	dfc00a15 	stw	ra,40(sp)
  84fde8:	df000915 	stw	fp,36(sp)
  84fdec:	df000904 	addi	fp,sp,36
  84fdf0:	e13ffd15 	stw	r4,-12(fp)
  84fdf4:	2805883a 	mov	r2,r5
  84fdf8:	e1bfff15 	stw	r6,-4(fp)
  84fdfc:	e0bffe0d 	sth	r2,-8(fp)
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84fe00:	e03ff715 	stw	zero,-36(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                         /* Validate 'perr'                               */
  84fe04:	e0bfff17 	ldw	r2,-4(fp)
  84fe08:	10007226 	beq	r2,zero,84ffd4 <OSSemPend+0x1f4>
        return;
    }
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  84fe0c:	e0bffd17 	ldw	r2,-12(fp)
  84fe10:	1000041e 	bne	r2,zero,84fe24 <OSSemPend+0x44>
        *perr = OS_ERR_PEVENT_NULL;
  84fe14:	e0bfff17 	ldw	r2,-4(fp)
  84fe18:	00c00104 	movi	r3,4
  84fe1c:	10c00005 	stb	r3,0(r2)
        return;
  84fe20:	00006d06 	br	84ffd8 <OSSemPend+0x1f8>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_SEM) {   /* Validate event block type                     */
  84fe24:	e0bffd17 	ldw	r2,-12(fp)
  84fe28:	10800003 	ldbu	r2,0(r2)
  84fe2c:	10803fcc 	andi	r2,r2,255
  84fe30:	108000e0 	cmpeqi	r2,r2,3
  84fe34:	1000041e 	bne	r2,zero,84fe48 <OSSemPend+0x68>
        *perr = OS_ERR_EVENT_TYPE;
  84fe38:	e0bfff17 	ldw	r2,-4(fp)
  84fe3c:	00c00044 	movi	r3,1
  84fe40:	10c00005 	stb	r3,0(r2)
        return;
  84fe44:	00006406 	br	84ffd8 <OSSemPend+0x1f8>
    }
    if (OSIntNesting > 0) {                           /* See if called from ISR ...                    */
  84fe48:	d0a0a303 	ldbu	r2,-32116(gp)
  84fe4c:	10803fcc 	andi	r2,r2,255
  84fe50:	10000426 	beq	r2,zero,84fe64 <OSSemPend+0x84>
        *perr = OS_ERR_PEND_ISR;                      /* ... can't PEND from an ISR                    */
  84fe54:	e0bfff17 	ldw	r2,-4(fp)
  84fe58:	00c00084 	movi	r3,2
  84fe5c:	10c00005 	stb	r3,0(r2)
        return;
  84fe60:	00005d06 	br	84ffd8 <OSSemPend+0x1f8>
    }
    if (OSLockNesting > 0) {                          /* See if called with scheduler locked ...       */
  84fe64:	d0a09503 	ldbu	r2,-32172(gp)
  84fe68:	10803fcc 	andi	r2,r2,255
  84fe6c:	10000426 	beq	r2,zero,84fe80 <OSSemPend+0xa0>
        *perr = OS_ERR_PEND_LOCKED;                   /* ... can't PEND when locked                    */
  84fe70:	e0bfff17 	ldw	r2,-4(fp)
  84fe74:	00c00344 	movi	r3,13
  84fe78:	10c00005 	stb	r3,0(r2)
        return;
  84fe7c:	00005606 	br	84ffd8 <OSSemPend+0x1f8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84fe80:	0005303a 	rdctl	r2,status
  84fe84:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84fe88:	e0fffc17 	ldw	r3,-16(fp)
  84fe8c:	00bfff84 	movi	r2,-2
  84fe90:	1884703a 	and	r2,r3,r2
  84fe94:	1001703a 	wrctl	status,r2
  
  return context;
  84fe98:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84fe9c:	e0bff715 	stw	r2,-36(fp)
    if (pevent->OSEventCnt > 0) {                     /* If sem. is positive, resource available ...   */
  84fea0:	e0bffd17 	ldw	r2,-12(fp)
  84fea4:	1080020b 	ldhu	r2,8(r2)
  84fea8:	10bfffcc 	andi	r2,r2,65535
  84feac:	10000d26 	beq	r2,zero,84fee4 <OSSemPend+0x104>
        pevent->OSEventCnt--;                         /* ... decrement semaphore only if positive.     */
  84feb0:	e0bffd17 	ldw	r2,-12(fp)
  84feb4:	1080020b 	ldhu	r2,8(r2)
  84feb8:	10bfffc4 	addi	r2,r2,-1
  84febc:	1007883a 	mov	r3,r2
  84fec0:	e0bffd17 	ldw	r2,-12(fp)
  84fec4:	10c0020d 	sth	r3,8(r2)
  84fec8:	e0bff717 	ldw	r2,-36(fp)
  84fecc:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84fed0:	e0bff817 	ldw	r2,-32(fp)
  84fed4:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_NONE;
  84fed8:	e0bfff17 	ldw	r2,-4(fp)
  84fedc:	10000005 	stb	zero,0(r2)
        return;
  84fee0:	00003d06 	br	84ffd8 <OSSemPend+0x1f8>
    }
                                                      /* Otherwise, must wait until event occurs       */
    OSTCBCur->OSTCBStat     |= OS_STAT_SEM;           /* Resource not available, pend on semaphore     */
  84fee4:	d0a0a417 	ldw	r2,-32112(gp)
  84fee8:	d0e0a417 	ldw	r3,-32112(gp)
  84feec:	18c00c03 	ldbu	r3,48(r3)
  84fef0:	18c00054 	ori	r3,r3,1
  84fef4:	10c00c05 	stb	r3,48(r2)
    OSTCBCur->OSTCBStatPend  = OS_STAT_PEND_OK;
  84fef8:	d0a0a417 	ldw	r2,-32112(gp)
  84fefc:	10000c45 	stb	zero,49(r2)
    OSTCBCur->OSTCBDly       = timeout;               /* Store pend timeout in TCB                     */
  84ff00:	d0a0a417 	ldw	r2,-32112(gp)
  84ff04:	e0fffe0b 	ldhu	r3,-8(fp)
  84ff08:	10c00b8d 	sth	r3,46(r2)
    OS_EventTaskWait(pevent);                         /* Suspend task until event or timeout occurs    */
  84ff0c:	e13ffd17 	ldw	r4,-12(fp)
  84ff10:	084b9880 	call	84b988 <OS_EventTaskWait>
  84ff14:	e0bff717 	ldw	r2,-36(fp)
  84ff18:	e0bffb15 	stw	r2,-20(fp)
  84ff1c:	e0bffb17 	ldw	r2,-20(fp)
  84ff20:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    OS_Sched();                                       /* Find next highest priority task ready         */
  84ff24:	084c23c0 	call	84c23c <OS_Sched>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84ff28:	0005303a 	rdctl	r2,status
  84ff2c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84ff30:	e0fff917 	ldw	r3,-28(fp)
  84ff34:	00bfff84 	movi	r2,-2
  84ff38:	1884703a 	and	r2,r3,r2
  84ff3c:	1001703a 	wrctl	status,r2
  
  return context;
  84ff40:	e0bff917 	ldw	r2,-28(fp)
    OS_ENTER_CRITICAL();
  84ff44:	e0bff715 	stw	r2,-36(fp)
    switch (OSTCBCur->OSTCBStatPend) {                /* See if we timed-out or aborted                */
  84ff48:	d0a0a417 	ldw	r2,-32112(gp)
  84ff4c:	10800c43 	ldbu	r2,49(r2)
  84ff50:	10803fcc 	andi	r2,r2,255
  84ff54:	10000326 	beq	r2,zero,84ff64 <OSSemPend+0x184>
  84ff58:	108000a0 	cmpeqi	r2,r2,2
  84ff5c:	1000041e 	bne	r2,zero,84ff70 <OSSemPend+0x190>
  84ff60:	00000706 	br	84ff80 <OSSemPend+0x1a0>
        case OS_STAT_PEND_OK:
             *perr = OS_ERR_NONE;
  84ff64:	e0bfff17 	ldw	r2,-4(fp)
  84ff68:	10000005 	stb	zero,0(r2)
             break;
  84ff6c:	00000c06 	br	84ffa0 <OSSemPend+0x1c0>

        case OS_STAT_PEND_ABORT:
             *perr = OS_ERR_PEND_ABORT;               /* Indicate that we aborted                      */
  84ff70:	e0bfff17 	ldw	r2,-4(fp)
  84ff74:	00c00384 	movi	r3,14
  84ff78:	10c00005 	stb	r3,0(r2)
             break;
  84ff7c:	00000806 	br	84ffa0 <OSSemPend+0x1c0>

        case OS_STAT_PEND_TO:
        default:        
             OS_EventTaskRemove(OSTCBCur, pevent);
  84ff80:	d0a0a417 	ldw	r2,-32112(gp)
  84ff84:	e17ffd17 	ldw	r5,-12(fp)
  84ff88:	1009883a 	mov	r4,r2
  84ff8c:	084bbe80 	call	84bbe8 <OS_EventTaskRemove>
             *perr = OS_ERR_TIMEOUT;                  /* Indicate that we didn't get event within TO   */
  84ff90:	e0bfff17 	ldw	r2,-4(fp)
  84ff94:	00c00284 	movi	r3,10
  84ff98:	10c00005 	stb	r3,0(r2)
             break;
  84ff9c:	0001883a 	nop
    }
    OSTCBCur->OSTCBStat          =  OS_STAT_RDY;      /* Set   task  status to ready                   */
  84ffa0:	d0a0a417 	ldw	r2,-32112(gp)
  84ffa4:	10000c05 	stb	zero,48(r2)
    OSTCBCur->OSTCBStatPend      =  OS_STAT_PEND_OK;  /* Clear pend  status                            */
  84ffa8:	d0a0a417 	ldw	r2,-32112(gp)
  84ffac:	10000c45 	stb	zero,49(r2)
    OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;    /* Clear event pointers                          */
  84ffb0:	d0a0a417 	ldw	r2,-32112(gp)
  84ffb4:	10000715 	stw	zero,28(r2)
#if (OS_EVENT_MULTI_EN > 0)
    OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)0;
  84ffb8:	d0a0a417 	ldw	r2,-32112(gp)
  84ffbc:	10000815 	stw	zero,32(r2)
  84ffc0:	e0bff717 	ldw	r2,-36(fp)
  84ffc4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84ffc8:	e0bffa17 	ldw	r2,-24(fp)
  84ffcc:	1001703a 	wrctl	status,r2
  84ffd0:	00000106 	br	84ffd8 <OSSemPend+0x1f8>



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                         /* Validate 'perr'                               */
        return;
  84ffd4:	0001883a 	nop
    OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;    /* Clear event pointers                          */
#if (OS_EVENT_MULTI_EN > 0)
    OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)0;
#endif
    OS_EXIT_CRITICAL();
}
  84ffd8:	e037883a 	mov	sp,fp
  84ffdc:	dfc00117 	ldw	ra,4(sp)
  84ffe0:	df000017 	ldw	fp,0(sp)
  84ffe4:	dec00204 	addi	sp,sp,8
  84ffe8:	f800283a 	ret

0084ffec <OSSemPendAbort>:
*********************************************************************************************************
*/

#if OS_SEM_PEND_ABORT_EN > 0
INT8U  OSSemPendAbort (OS_EVENT *pevent, INT8U opt, INT8U *perr)
{
  84ffec:	defff604 	addi	sp,sp,-40
  84fff0:	dfc00915 	stw	ra,36(sp)
  84fff4:	df000815 	stw	fp,32(sp)
  84fff8:	df000804 	addi	fp,sp,32
  84fffc:	e13ffd15 	stw	r4,-12(fp)
  850000:	2805883a 	mov	r2,r5
  850004:	e1bfff15 	stw	r6,-4(fp)
  850008:	e0bffe05 	stb	r2,-8(fp)
    INT8U      nbr_tasks;
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  85000c:	e03ff915 	stw	zero,-28(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                         /* Validate 'perr'                               */
  850010:	e0bfff17 	ldw	r2,-4(fp)
  850014:	1000021e 	bne	r2,zero,850020 <OSSemPendAbort+0x34>
        return (0);
  850018:	0005883a 	mov	r2,zero
  85001c:	00004906 	br	850144 <OSSemPendAbort+0x158>
    }
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  850020:	e0bffd17 	ldw	r2,-12(fp)
  850024:	1000051e 	bne	r2,zero,85003c <OSSemPendAbort+0x50>
        *perr = OS_ERR_PEVENT_NULL;
  850028:	e0bfff17 	ldw	r2,-4(fp)
  85002c:	00c00104 	movi	r3,4
  850030:	10c00005 	stb	r3,0(r2)
        return (0);
  850034:	0005883a 	mov	r2,zero
  850038:	00004206 	br	850144 <OSSemPendAbort+0x158>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_SEM) {   /* Validate event block type                     */
  85003c:	e0bffd17 	ldw	r2,-12(fp)
  850040:	10800003 	ldbu	r2,0(r2)
  850044:	10803fcc 	andi	r2,r2,255
  850048:	108000e0 	cmpeqi	r2,r2,3
  85004c:	1000051e 	bne	r2,zero,850064 <OSSemPendAbort+0x78>
        *perr = OS_ERR_EVENT_TYPE;
  850050:	e0bfff17 	ldw	r2,-4(fp)
  850054:	00c00044 	movi	r3,1
  850058:	10c00005 	stb	r3,0(r2)
        return (0);
  85005c:	0005883a 	mov	r2,zero
  850060:	00003806 	br	850144 <OSSemPendAbort+0x158>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  850064:	0005303a 	rdctl	r2,status
  850068:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  85006c:	e0fffc17 	ldw	r3,-16(fp)
  850070:	00bfff84 	movi	r2,-2
  850074:	1884703a 	and	r2,r3,r2
  850078:	1001703a 	wrctl	status,r2
  
  return context;
  85007c:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  850080:	e0bff915 	stw	r2,-28(fp)
    if (pevent->OSEventGrp != 0) {                    /* See if any task waiting on semaphore?         */
  850084:	e0bffd17 	ldw	r2,-12(fp)
  850088:	10800283 	ldbu	r2,10(r2)
  85008c:	10803fcc 	andi	r2,r2,255
  850090:	10002526 	beq	r2,zero,850128 <OSSemPendAbort+0x13c>
        nbr_tasks = 0;
  850094:	e03ff805 	stb	zero,-32(fp)
        switch (opt) {
  850098:	e0bffe03 	ldbu	r2,-8(fp)
  85009c:	10800060 	cmpeqi	r2,r2,1
  8500a0:	10000e26 	beq	r2,zero,8500dc <OSSemPendAbort+0xf0>
            case OS_PEND_OPT_BROADCAST:               /* Do we need to abort ALL waiting tasks?        */
                 while (pevent->OSEventGrp != 0) {    /* Yes, ready ALL tasks waiting on semaphore     */
  8500a4:	00000806 	br	8500c8 <OSSemPendAbort+0xdc>
                     (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_SEM, OS_STAT_PEND_ABORT);
  8500a8:	01c00084 	movi	r7,2
  8500ac:	01800044 	movi	r6,1
  8500b0:	000b883a 	mov	r5,zero
  8500b4:	e13ffd17 	ldw	r4,-12(fp)
  8500b8:	084b7f00 	call	84b7f0 <OS_EventTaskRdy>
                     nbr_tasks++;
  8500bc:	e0bff803 	ldbu	r2,-32(fp)
  8500c0:	10800044 	addi	r2,r2,1
  8500c4:	e0bff805 	stb	r2,-32(fp)
    OS_ENTER_CRITICAL();
    if (pevent->OSEventGrp != 0) {                    /* See if any task waiting on semaphore?         */
        nbr_tasks = 0;
        switch (opt) {
            case OS_PEND_OPT_BROADCAST:               /* Do we need to abort ALL waiting tasks?        */
                 while (pevent->OSEventGrp != 0) {    /* Yes, ready ALL tasks waiting on semaphore     */
  8500c8:	e0bffd17 	ldw	r2,-12(fp)
  8500cc:	10800283 	ldbu	r2,10(r2)
  8500d0:	10803fcc 	andi	r2,r2,255
  8500d4:	103ff41e 	bne	r2,zero,8500a8 <__alt_mem_epcs_flash_controller_0+0xff8470a8>
                     (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_SEM, OS_STAT_PEND_ABORT);
                     nbr_tasks++;
                 }
                 break;
  8500d8:	00000906 	br	850100 <OSSemPendAbort+0x114>
                 
            case OS_PEND_OPT_NONE:
            default:                                  /* No,  ready HPT       waiting on semaphore     */
                 (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_SEM, OS_STAT_PEND_ABORT);
  8500dc:	01c00084 	movi	r7,2
  8500e0:	01800044 	movi	r6,1
  8500e4:	000b883a 	mov	r5,zero
  8500e8:	e13ffd17 	ldw	r4,-12(fp)
  8500ec:	084b7f00 	call	84b7f0 <OS_EventTaskRdy>
                 nbr_tasks++;
  8500f0:	e0bff803 	ldbu	r2,-32(fp)
  8500f4:	10800044 	addi	r2,r2,1
  8500f8:	e0bff805 	stb	r2,-32(fp)
                 break;
  8500fc:	0001883a 	nop
  850100:	e0bff917 	ldw	r2,-28(fp)
  850104:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  850108:	e0bffa17 	ldw	r2,-24(fp)
  85010c:	1001703a 	wrctl	status,r2
        }
        OS_EXIT_CRITICAL();
        OS_Sched();                                   /* Find HPT ready to run                         */
  850110:	084c23c0 	call	84c23c <OS_Sched>
        *perr = OS_ERR_PEND_ABORT;
  850114:	e0bfff17 	ldw	r2,-4(fp)
  850118:	00c00384 	movi	r3,14
  85011c:	10c00005 	stb	r3,0(r2)
        return (nbr_tasks);
  850120:	e0bff803 	ldbu	r2,-32(fp)
  850124:	00000706 	br	850144 <OSSemPendAbort+0x158>
  850128:	e0bff917 	ldw	r2,-28(fp)
  85012c:	e0bffb15 	stw	r2,-20(fp)
  850130:	e0bffb17 	ldw	r2,-20(fp)
  850134:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  850138:	e0bfff17 	ldw	r2,-4(fp)
  85013c:	10000005 	stb	zero,0(r2)
    return (0);                                       /* No tasks waiting on semaphore                 */
  850140:	0005883a 	mov	r2,zero
}
  850144:	e037883a 	mov	sp,fp
  850148:	dfc00117 	ldw	ra,4(sp)
  85014c:	df000017 	ldw	fp,0(sp)
  850150:	dec00204 	addi	sp,sp,8
  850154:	f800283a 	ret

00850158 <OSSemPost>:
*              OS_ERR_PEVENT_NULL  If 'pevent' is a NULL pointer.
*********************************************************************************************************
*/

INT8U  OSSemPost (OS_EVENT *pevent)
{
  850158:	defff804 	addi	sp,sp,-32
  85015c:	dfc00715 	stw	ra,28(sp)
  850160:	df000615 	stw	fp,24(sp)
  850164:	df000604 	addi	fp,sp,24
  850168:	e13fff15 	stw	r4,-4(fp)
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  85016c:	e03ffa15 	stw	zero,-24(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  850170:	e0bfff17 	ldw	r2,-4(fp)
  850174:	1000021e 	bne	r2,zero,850180 <OSSemPost+0x28>
        return (OS_ERR_PEVENT_NULL);
  850178:	00800104 	movi	r2,4
  85017c:	00003506 	br	850254 <OSSemPost+0xfc>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_SEM) {   /* Validate event block type                     */
  850180:	e0bfff17 	ldw	r2,-4(fp)
  850184:	10800003 	ldbu	r2,0(r2)
  850188:	10803fcc 	andi	r2,r2,255
  85018c:	108000e0 	cmpeqi	r2,r2,3
  850190:	1000021e 	bne	r2,zero,85019c <OSSemPost+0x44>
        return (OS_ERR_EVENT_TYPE);
  850194:	00800044 	movi	r2,1
  850198:	00002e06 	br	850254 <OSSemPost+0xfc>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  85019c:	0005303a 	rdctl	r2,status
  8501a0:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8501a4:	e0fffe17 	ldw	r3,-8(fp)
  8501a8:	00bfff84 	movi	r2,-2
  8501ac:	1884703a 	and	r2,r3,r2
  8501b0:	1001703a 	wrctl	status,r2
  
  return context;
  8501b4:	e0bffe17 	ldw	r2,-8(fp)
    }
    OS_ENTER_CRITICAL();
  8501b8:	e0bffa15 	stw	r2,-24(fp)
    if (pevent->OSEventGrp != 0) {                    /* See if any task waiting for semaphore         */
  8501bc:	e0bfff17 	ldw	r2,-4(fp)
  8501c0:	10800283 	ldbu	r2,10(r2)
  8501c4:	10803fcc 	andi	r2,r2,255
  8501c8:	10000c26 	beq	r2,zero,8501fc <OSSemPost+0xa4>
                                                      /* Ready HPT waiting on event                    */
        (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_SEM, OS_STAT_PEND_OK);
  8501cc:	000f883a 	mov	r7,zero
  8501d0:	01800044 	movi	r6,1
  8501d4:	000b883a 	mov	r5,zero
  8501d8:	e13fff17 	ldw	r4,-4(fp)
  8501dc:	084b7f00 	call	84b7f0 <OS_EventTaskRdy>
  8501e0:	e0bffa17 	ldw	r2,-24(fp)
  8501e4:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8501e8:	e0bffb17 	ldw	r2,-20(fp)
  8501ec:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        OS_Sched();                                   /* Find HPT ready to run                         */
  8501f0:	084c23c0 	call	84c23c <OS_Sched>
        return (OS_ERR_NONE);
  8501f4:	0005883a 	mov	r2,zero
  8501f8:	00001606 	br	850254 <OSSemPost+0xfc>
    }
    if (pevent->OSEventCnt < 65535u) {                /* Make sure semaphore will not overflow         */
  8501fc:	e0bfff17 	ldw	r2,-4(fp)
  850200:	1080020b 	ldhu	r2,8(r2)
  850204:	10ffffcc 	andi	r3,r2,65535
  850208:	00bfffd4 	movui	r2,65535
  85020c:	18800c26 	beq	r3,r2,850240 <OSSemPost+0xe8>
        pevent->OSEventCnt++;                         /* Increment semaphore count to register event   */
  850210:	e0bfff17 	ldw	r2,-4(fp)
  850214:	1080020b 	ldhu	r2,8(r2)
  850218:	10800044 	addi	r2,r2,1
  85021c:	1007883a 	mov	r3,r2
  850220:	e0bfff17 	ldw	r2,-4(fp)
  850224:	10c0020d 	sth	r3,8(r2)
  850228:	e0bffa17 	ldw	r2,-24(fp)
  85022c:	e0bffc15 	stw	r2,-16(fp)
  850230:	e0bffc17 	ldw	r2,-16(fp)
  850234:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_NONE);
  850238:	0005883a 	mov	r2,zero
  85023c:	00000506 	br	850254 <OSSemPost+0xfc>
  850240:	e0bffa17 	ldw	r2,-24(fp)
  850244:	e0bffd15 	stw	r2,-12(fp)
  850248:	e0bffd17 	ldw	r2,-12(fp)
  85024c:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();                               /* Semaphore value has reached its maximum       */
    return (OS_ERR_SEM_OVF);
  850250:	00800c84 	movi	r2,50
}
  850254:	e037883a 	mov	sp,fp
  850258:	dfc00117 	ldw	ra,4(sp)
  85025c:	df000017 	ldw	fp,0(sp)
  850260:	dec00204 	addi	sp,sp,8
  850264:	f800283a 	ret

00850268 <OSSemQuery>:
*********************************************************************************************************
*/

#if OS_SEM_QUERY_EN > 0
INT8U  OSSemQuery (OS_EVENT *pevent, OS_SEM_DATA *p_sem_data)
{
  850268:	defff704 	addi	sp,sp,-36
  85026c:	df000815 	stw	fp,32(sp)
  850270:	df000804 	addi	fp,sp,32
  850274:	e13ffe15 	stw	r4,-8(fp)
  850278:	e17fff15 	stw	r5,-4(fp)
    INT16U    *psrc;
    INT16U    *pdest;
#endif
    INT8U      i;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  85027c:	e03ffb15 	stw	zero,-20(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                         /* Validate 'pevent'                        */
  850280:	e0bffe17 	ldw	r2,-8(fp)
  850284:	1000021e 	bne	r2,zero,850290 <OSSemQuery+0x28>
        return (OS_ERR_PEVENT_NULL);
  850288:	00800104 	movi	r2,4
  85028c:	00003606 	br	850368 <OSSemQuery+0x100>
    }
    if (p_sem_data == (OS_SEM_DATA *)0) {                  /* Validate 'p_sem_data'                    */
  850290:	e0bfff17 	ldw	r2,-4(fp)
  850294:	1000021e 	bne	r2,zero,8502a0 <OSSemQuery+0x38>
        return (OS_ERR_PDATA_NULL);
  850298:	00800244 	movi	r2,9
  85029c:	00003206 	br	850368 <OSSemQuery+0x100>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_SEM) {        /* Validate event block type                */
  8502a0:	e0bffe17 	ldw	r2,-8(fp)
  8502a4:	10800003 	ldbu	r2,0(r2)
  8502a8:	10803fcc 	andi	r2,r2,255
  8502ac:	108000e0 	cmpeqi	r2,r2,3
  8502b0:	1000021e 	bne	r2,zero,8502bc <OSSemQuery+0x54>
        return (OS_ERR_EVENT_TYPE);
  8502b4:	00800044 	movi	r2,1
  8502b8:	00002b06 	br	850368 <OSSemQuery+0x100>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8502bc:	0005303a 	rdctl	r2,status
  8502c0:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8502c4:	e0fffd17 	ldw	r3,-12(fp)
  8502c8:	00bfff84 	movi	r2,-2
  8502cc:	1884703a 	and	r2,r3,r2
  8502d0:	1001703a 	wrctl	status,r2
  
  return context;
  8502d4:	e0bffd17 	ldw	r2,-12(fp)
    }
    OS_ENTER_CRITICAL();
  8502d8:	e0bffb15 	stw	r2,-20(fp)
    p_sem_data->OSEventGrp = pevent->OSEventGrp;           /* Copy message mailbox wait list           */
  8502dc:	e0bffe17 	ldw	r2,-8(fp)
  8502e0:	10c00283 	ldbu	r3,10(r2)
  8502e4:	e0bfff17 	ldw	r2,-4(fp)
  8502e8:	10c00145 	stb	r3,5(r2)
    psrc                   = &pevent->OSEventTbl[0];
  8502ec:	e0bffe17 	ldw	r2,-8(fp)
  8502f0:	108002c4 	addi	r2,r2,11
  8502f4:	e0bff815 	stw	r2,-32(fp)
    pdest                  = &p_sem_data->OSEventTbl[0];
  8502f8:	e0bfff17 	ldw	r2,-4(fp)
  8502fc:	10800084 	addi	r2,r2,2
  850300:	e0bff915 	stw	r2,-28(fp)
    for (i = 0; i < OS_EVENT_TBL_SIZE; i++) {
  850304:	e03ffa05 	stb	zero,-24(fp)
  850308:	00000b06 	br	850338 <OSSemQuery+0xd0>
        *pdest++ = *psrc++;
  85030c:	e0bff917 	ldw	r2,-28(fp)
  850310:	10c00044 	addi	r3,r2,1
  850314:	e0fff915 	stw	r3,-28(fp)
  850318:	e0fff817 	ldw	r3,-32(fp)
  85031c:	19000044 	addi	r4,r3,1
  850320:	e13ff815 	stw	r4,-32(fp)
  850324:	18c00003 	ldbu	r3,0(r3)
  850328:	10c00005 	stb	r3,0(r2)
    }
    OS_ENTER_CRITICAL();
    p_sem_data->OSEventGrp = pevent->OSEventGrp;           /* Copy message mailbox wait list           */
    psrc                   = &pevent->OSEventTbl[0];
    pdest                  = &p_sem_data->OSEventTbl[0];
    for (i = 0; i < OS_EVENT_TBL_SIZE; i++) {
  85032c:	e0bffa03 	ldbu	r2,-24(fp)
  850330:	10800044 	addi	r2,r2,1
  850334:	e0bffa05 	stb	r2,-24(fp)
  850338:	e0bffa03 	ldbu	r2,-24(fp)
  85033c:	108000f0 	cmpltui	r2,r2,3
  850340:	103ff21e 	bne	r2,zero,85030c <__alt_mem_epcs_flash_controller_0+0xff84730c>
        *pdest++ = *psrc++;
    }
    p_sem_data->OSCnt = pevent->OSEventCnt;                /* Get semaphore count                      */
  850344:	e0bffe17 	ldw	r2,-8(fp)
  850348:	10c0020b 	ldhu	r3,8(r2)
  85034c:	e0bfff17 	ldw	r2,-4(fp)
  850350:	10c0000d 	sth	r3,0(r2)
  850354:	e0bffb17 	ldw	r2,-20(fp)
  850358:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  85035c:	e0bffc17 	ldw	r2,-16(fp)
  850360:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  850364:	0005883a 	mov	r2,zero
}
  850368:	e037883a 	mov	sp,fp
  85036c:	df000017 	ldw	fp,0(sp)
  850370:	dec00104 	addi	sp,sp,4
  850374:	f800283a 	ret

00850378 <OSSemSet>:
*********************************************************************************************************
*/

#if OS_SEM_SET_EN > 0
void  OSSemSet (OS_EVENT *pevent, INT16U cnt, INT8U *perr)
{
  850378:	defff904 	addi	sp,sp,-28
  85037c:	df000615 	stw	fp,24(sp)
  850380:	df000604 	addi	fp,sp,24
  850384:	e13ffd15 	stw	r4,-12(fp)
  850388:	2805883a 	mov	r2,r5
  85038c:	e1bfff15 	stw	r6,-4(fp)
  850390:	e0bffe0d 	sth	r2,-8(fp)
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  850394:	e03ffa15 	stw	zero,-24(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                         /* Validate 'perr'                               */
  850398:	e0bfff17 	ldw	r2,-4(fp)
  85039c:	10003126 	beq	r2,zero,850464 <OSSemSet+0xec>
        return;
    }
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  8503a0:	e0bffd17 	ldw	r2,-12(fp)
  8503a4:	1000041e 	bne	r2,zero,8503b8 <OSSemSet+0x40>
        *perr = OS_ERR_PEVENT_NULL;
  8503a8:	e0bfff17 	ldw	r2,-4(fp)
  8503ac:	00c00104 	movi	r3,4
  8503b0:	10c00005 	stb	r3,0(r2)
        return;
  8503b4:	00002c06 	br	850468 <OSSemSet+0xf0>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_SEM) {   /* Validate event block type                     */
  8503b8:	e0bffd17 	ldw	r2,-12(fp)
  8503bc:	10800003 	ldbu	r2,0(r2)
  8503c0:	10803fcc 	andi	r2,r2,255
  8503c4:	108000e0 	cmpeqi	r2,r2,3
  8503c8:	1000041e 	bne	r2,zero,8503dc <OSSemSet+0x64>
        *perr = OS_ERR_EVENT_TYPE;
  8503cc:	e0bfff17 	ldw	r2,-4(fp)
  8503d0:	00c00044 	movi	r3,1
  8503d4:	10c00005 	stb	r3,0(r2)
        return;
  8503d8:	00002306 	br	850468 <OSSemSet+0xf0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8503dc:	0005303a 	rdctl	r2,status
  8503e0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8503e4:	e0fffc17 	ldw	r3,-16(fp)
  8503e8:	00bfff84 	movi	r2,-2
  8503ec:	1884703a 	and	r2,r3,r2
  8503f0:	1001703a 	wrctl	status,r2
  
  return context;
  8503f4:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  8503f8:	e0bffa15 	stw	r2,-24(fp)
    *perr = OS_ERR_NONE;
  8503fc:	e0bfff17 	ldw	r2,-4(fp)
  850400:	10000005 	stb	zero,0(r2)
    if (pevent->OSEventCnt > 0) {                     /* See if semaphore already has a count          */
  850404:	e0bffd17 	ldw	r2,-12(fp)
  850408:	1080020b 	ldhu	r2,8(r2)
  85040c:	10bfffcc 	andi	r2,r2,65535
  850410:	10000426 	beq	r2,zero,850424 <OSSemSet+0xac>
        pevent->OSEventCnt = cnt;                     /* Yes, set it to the new value specified.       */
  850414:	e0bffd17 	ldw	r2,-12(fp)
  850418:	e0fffe0b 	ldhu	r3,-8(fp)
  85041c:	10c0020d 	sth	r3,8(r2)
  850420:	00000b06 	br	850450 <OSSemSet+0xd8>
    } else {                                          /* No                                            */
        if (pevent->OSEventGrp == 0) {                /*      See if task(s) waiting?                  */
  850424:	e0bffd17 	ldw	r2,-12(fp)
  850428:	10800283 	ldbu	r2,10(r2)
  85042c:	10803fcc 	andi	r2,r2,255
  850430:	1000041e 	bne	r2,zero,850444 <OSSemSet+0xcc>
            pevent->OSEventCnt = cnt;                 /*      No, OK to set the value                  */
  850434:	e0bffd17 	ldw	r2,-12(fp)
  850438:	e0fffe0b 	ldhu	r3,-8(fp)
  85043c:	10c0020d 	sth	r3,8(r2)
  850440:	00000306 	br	850450 <OSSemSet+0xd8>
        } else {
            *perr              = OS_ERR_TASK_WAITING;
  850444:	e0bfff17 	ldw	r2,-4(fp)
  850448:	00c01244 	movi	r3,73
  85044c:	10c00005 	stb	r3,0(r2)
  850450:	e0bffa17 	ldw	r2,-24(fp)
  850454:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  850458:	e0bffb17 	ldw	r2,-20(fp)
  85045c:	1001703a 	wrctl	status,r2
  850460:	00000106 	br	850468 <OSSemSet+0xf0>



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                         /* Validate 'perr'                               */
        return;
  850464:	0001883a 	nop
        } else {
            *perr              = OS_ERR_TASK_WAITING;
        }
    }
    OS_EXIT_CRITICAL();
}
  850468:	e037883a 	mov	sp,fp
  85046c:	df000017 	ldw	fp,0(sp)
  850470:	dec00104 	addi	sp,sp,4
  850474:	f800283a 	ret

00850478 <OSTaskChangePrio>:
*********************************************************************************************************
*/

#if OS_TASK_CHANGE_PRIO_EN > 0
INT8U  OSTaskChangePrio (INT8U oldprio, INT8U newprio)
{
  850478:	defff104 	addi	sp,sp,-60
  85047c:	dfc00e15 	stw	ra,56(sp)
  850480:	df000d15 	stw	fp,52(sp)
  850484:	df000d04 	addi	fp,sp,52
  850488:	2007883a 	mov	r3,r4
  85048c:	2805883a 	mov	r2,r5
  850490:	e0fffe05 	stb	r3,-8(fp)
  850494:	e0bfff05 	stb	r2,-4(fp)
    INT16U     bitx_new;
    INT16U     bity_old;
    INT16U     bitx_old;
#endif
#if OS_CRITICAL_METHOD == 3
    OS_CPU_SR  cpu_sr = 0;                                  /* Storage for CPU status register         */
  850498:	e03ff515 	stw	zero,-44(fp)
#endif


/*$PAGE*/
#if OS_ARG_CHK_EN > 0
    if (oldprio >= OS_LOWEST_PRIO) {
  85049c:	e0bffe03 	ldbu	r2,-8(fp)
  8504a0:	10800530 	cmpltui	r2,r2,20
  8504a4:	1000051e 	bne	r2,zero,8504bc <OSTaskChangePrio+0x44>
        if (oldprio != OS_PRIO_SELF) {
  8504a8:	e0bffe03 	ldbu	r2,-8(fp)
  8504ac:	10803fe0 	cmpeqi	r2,r2,255
  8504b0:	1000021e 	bne	r2,zero,8504bc <OSTaskChangePrio+0x44>
            return (OS_ERR_PRIO_INVALID);
  8504b4:	00800a84 	movi	r2,42
  8504b8:	00012606 	br	850954 <OSTaskChangePrio+0x4dc>
        }
    }
    if (newprio >= OS_LOWEST_PRIO) {
  8504bc:	e0bfff03 	ldbu	r2,-4(fp)
  8504c0:	10800530 	cmpltui	r2,r2,20
  8504c4:	1000021e 	bne	r2,zero,8504d0 <OSTaskChangePrio+0x58>
        return (OS_ERR_PRIO_INVALID);
  8504c8:	00800a84 	movi	r2,42
  8504cc:	00012106 	br	850954 <OSTaskChangePrio+0x4dc>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8504d0:	0005303a 	rdctl	r2,status
  8504d4:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8504d8:	e0fffd17 	ldw	r3,-12(fp)
  8504dc:	00bfff84 	movi	r2,-2
  8504e0:	1884703a 	and	r2,r3,r2
  8504e4:	1001703a 	wrctl	status,r2
  
  return context;
  8504e8:	e0bffd17 	ldw	r2,-12(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  8504ec:	e0bff515 	stw	r2,-44(fp)
    if (OSTCBPrioTbl[newprio] != (OS_TCB *)0) {             /* New priority must not already exist     */
  8504f0:	e0ffff03 	ldbu	r3,-4(fp)
  8504f4:	008021b4 	movhi	r2,134
  8504f8:	1098b904 	addi	r2,r2,25316
  8504fc:	18c7883a 	add	r3,r3,r3
  850500:	18c7883a 	add	r3,r3,r3
  850504:	10c5883a 	add	r2,r2,r3
  850508:	10800017 	ldw	r2,0(r2)
  85050c:	10000626 	beq	r2,zero,850528 <OSTaskChangePrio+0xb0>
  850510:	e0bff517 	ldw	r2,-44(fp)
  850514:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  850518:	e0bff617 	ldw	r2,-40(fp)
  85051c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_PRIO_EXIST);
  850520:	00800a04 	movi	r2,40
  850524:	00010b06 	br	850954 <OSTaskChangePrio+0x4dc>
    }
    if (oldprio == OS_PRIO_SELF) {                          /* See if changing self                    */
  850528:	e0bffe03 	ldbu	r2,-8(fp)
  85052c:	10803fd8 	cmpnei	r2,r2,255
  850530:	1000031e 	bne	r2,zero,850540 <OSTaskChangePrio+0xc8>
        oldprio = OSTCBCur->OSTCBPrio;                      /* Yes, get priority                       */
  850534:	d0a0a417 	ldw	r2,-32112(gp)
  850538:	10800c83 	ldbu	r2,50(r2)
  85053c:	e0bffe05 	stb	r2,-8(fp)
    }
    ptcb = OSTCBPrioTbl[oldprio];
  850540:	e0fffe03 	ldbu	r3,-8(fp)
  850544:	008021b4 	movhi	r2,134
  850548:	1098b904 	addi	r2,r2,25316
  85054c:	18c7883a 	add	r3,r3,r3
  850550:	18c7883a 	add	r3,r3,r3
  850554:	10c5883a 	add	r2,r2,r3
  850558:	10800017 	ldw	r2,0(r2)
  85055c:	e0bff815 	stw	r2,-32(fp)
    if (ptcb == (OS_TCB *)0) {                              /* Does task to change exist?              */
  850560:	e0bff817 	ldw	r2,-32(fp)
  850564:	1000061e 	bne	r2,zero,850580 <OSTaskChangePrio+0x108>
  850568:	e0bff517 	ldw	r2,-44(fp)
  85056c:	e0bff715 	stw	r2,-36(fp)
  850570:	e0bff717 	ldw	r2,-36(fp)
  850574:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();                                 /* No, can't change its priority!          */
        return (OS_ERR_PRIO);
  850578:	00800a44 	movi	r2,41
  85057c:	0000f506 	br	850954 <OSTaskChangePrio+0x4dc>
    }
    if (ptcb == OS_TCB_RESERVED) {                          /* Is task assigned to Mutex               */
  850580:	e0bff817 	ldw	r2,-32(fp)
  850584:	10800058 	cmpnei	r2,r2,1
  850588:	1000061e 	bne	r2,zero,8505a4 <OSTaskChangePrio+0x12c>
  85058c:	e0bff517 	ldw	r2,-44(fp)
  850590:	e0bff915 	stw	r2,-28(fp)
  850594:	e0bff917 	ldw	r2,-28(fp)
  850598:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();                                 /* No, can't change its priority!          */
        return (OS_ERR_TASK_NOT_EXIST);
  85059c:	008010c4 	movi	r2,67
  8505a0:	0000ec06 	br	850954 <OSTaskChangePrio+0x4dc>
    }
#if OS_LOWEST_PRIO <= 63
    y_new                 = (INT8U)(newprio >> 3);          /* Yes, compute new TCB fields             */
  8505a4:	e0bfff03 	ldbu	r2,-4(fp)
  8505a8:	1004d0fa 	srli	r2,r2,3
  8505ac:	e0bffb05 	stb	r2,-20(fp)
    x_new                 = (INT8U)(newprio & 0x07);
  8505b0:	e0bfff03 	ldbu	r2,-4(fp)
  8505b4:	108001cc 	andi	r2,r2,7
  8505b8:	e0bffb45 	stb	r2,-19(fp)
    bity_new              = (INT8U)(1 << y_new);
  8505bc:	e0bffb03 	ldbu	r2,-20(fp)
  8505c0:	00c00044 	movi	r3,1
  8505c4:	1884983a 	sll	r2,r3,r2
  8505c8:	e0bffb85 	stb	r2,-18(fp)
    bitx_new              = (INT8U)(1 << x_new);
  8505cc:	e0bffb43 	ldbu	r2,-19(fp)
  8505d0:	00c00044 	movi	r3,1
  8505d4:	1884983a 	sll	r2,r3,r2
  8505d8:	e0bffbc5 	stb	r2,-17(fp)
    x_new                 = (INT8U)( newprio & 0x0F);
    bity_new              = (INT16U)(1 << y_new);
    bitx_new              = (INT16U)(1 << x_new);
#endif

    OSTCBPrioTbl[oldprio] = (OS_TCB *)0;                    /* Remove TCB from old priority            */
  8505dc:	e0fffe03 	ldbu	r3,-8(fp)
  8505e0:	008021b4 	movhi	r2,134
  8505e4:	1098b904 	addi	r2,r2,25316
  8505e8:	18c7883a 	add	r3,r3,r3
  8505ec:	18c7883a 	add	r3,r3,r3
  8505f0:	10c5883a 	add	r2,r2,r3
  8505f4:	10000015 	stw	zero,0(r2)
    OSTCBPrioTbl[newprio] =  ptcb;                          /* Place pointer to TCB @ new priority     */
  8505f8:	e0ffff03 	ldbu	r3,-4(fp)
  8505fc:	008021b4 	movhi	r2,134
  850600:	1098b904 	addi	r2,r2,25316
  850604:	18c7883a 	add	r3,r3,r3
  850608:	18c7883a 	add	r3,r3,r3
  85060c:	10c5883a 	add	r2,r2,r3
  850610:	e0fff817 	ldw	r3,-32(fp)
  850614:	10c00015 	stw	r3,0(r2)
    y_old                 =  ptcb->OSTCBY;
  850618:	e0bff817 	ldw	r2,-32(fp)
  85061c:	10800d03 	ldbu	r2,52(r2)
  850620:	e0bffc05 	stb	r2,-16(fp)
    bity_old              =  ptcb->OSTCBBitY;
  850624:	e0bff817 	ldw	r2,-32(fp)
  850628:	10800d83 	ldbu	r2,54(r2)
  85062c:	e0bffc45 	stb	r2,-15(fp)
    bitx_old              =  ptcb->OSTCBBitX;
  850630:	e0bff817 	ldw	r2,-32(fp)
  850634:	10800d43 	ldbu	r2,53(r2)
  850638:	e0bffc85 	stb	r2,-14(fp)
    if ((OSRdyTbl[y_old] &   bitx_old) != 0) {              /* If task is ready make it not            */
  85063c:	e0fffc03 	ldbu	r3,-16(fp)
  850640:	d0a0a144 	addi	r2,gp,-32123
  850644:	1885883a 	add	r2,r3,r2
  850648:	10c00003 	ldbu	r3,0(r2)
  85064c:	e0bffc83 	ldbu	r2,-14(fp)
  850650:	1884703a 	and	r2,r3,r2
  850654:	10803fcc 	andi	r2,r2,255
  850658:	10002826 	beq	r2,zero,8506fc <OSTaskChangePrio+0x284>
         OSRdyTbl[y_old] &= ~bitx_old;
  85065c:	e0fffc03 	ldbu	r3,-16(fp)
  850660:	e13ffc03 	ldbu	r4,-16(fp)
  850664:	d0a0a144 	addi	r2,gp,-32123
  850668:	2085883a 	add	r2,r4,r2
  85066c:	10800003 	ldbu	r2,0(r2)
  850670:	1009883a 	mov	r4,r2
  850674:	e0bffc83 	ldbu	r2,-14(fp)
  850678:	0084303a 	nor	r2,zero,r2
  85067c:	2084703a 	and	r2,r4,r2
  850680:	1009883a 	mov	r4,r2
  850684:	d0a0a144 	addi	r2,gp,-32123
  850688:	1885883a 	add	r2,r3,r2
  85068c:	11000005 	stb	r4,0(r2)
         if (OSRdyTbl[y_old] == 0) {
  850690:	e0fffc03 	ldbu	r3,-16(fp)
  850694:	d0a0a144 	addi	r2,gp,-32123
  850698:	1885883a 	add	r2,r3,r2
  85069c:	10800003 	ldbu	r2,0(r2)
  8506a0:	10803fcc 	andi	r2,r2,255
  8506a4:	1000061e 	bne	r2,zero,8506c0 <OSTaskChangePrio+0x248>
             OSRdyGrp &= ~bity_old;
  8506a8:	e0bffc43 	ldbu	r2,-15(fp)
  8506ac:	0084303a 	nor	r2,zero,r2
  8506b0:	1007883a 	mov	r3,r2
  8506b4:	d0a0a103 	ldbu	r2,-32124(gp)
  8506b8:	1884703a 	and	r2,r3,r2
  8506bc:	d0a0a105 	stb	r2,-32124(gp)
         }
         OSRdyGrp        |= bity_new;                       /* Make new priority ready to run          */
  8506c0:	d0e0a103 	ldbu	r3,-32124(gp)
  8506c4:	e0bffb83 	ldbu	r2,-18(fp)
  8506c8:	1884b03a 	or	r2,r3,r2
  8506cc:	d0a0a105 	stb	r2,-32124(gp)
         OSRdyTbl[y_new] |= bitx_new;
  8506d0:	e0fffb03 	ldbu	r3,-20(fp)
  8506d4:	e13ffb03 	ldbu	r4,-20(fp)
  8506d8:	d0a0a144 	addi	r2,gp,-32123
  8506dc:	2085883a 	add	r2,r4,r2
  8506e0:	11000003 	ldbu	r4,0(r2)
  8506e4:	e0bffbc3 	ldbu	r2,-17(fp)
  8506e8:	2084b03a 	or	r2,r4,r2
  8506ec:	1009883a 	mov	r4,r2
  8506f0:	d0a0a144 	addi	r2,gp,-32123
  8506f4:	1885883a 	add	r2,r3,r2
  8506f8:	11000005 	stb	r4,0(r2)
    }

#if (OS_EVENT_EN)
    pevent = ptcb->OSTCBEventPtr;
  8506fc:	e0bff817 	ldw	r2,-32(fp)
  850700:	10800717 	ldw	r2,28(r2)
  850704:	e0bff315 	stw	r2,-52(fp)
    if (pevent != (OS_EVENT *)0) {
  850708:	e0bff317 	ldw	r2,-52(fp)
  85070c:	10003326 	beq	r2,zero,8507dc <OSTaskChangePrio+0x364>
        pevent->OSEventTbl[y_old] &= ~bitx_old;             /* Remove old task prio from wait list     */
  850710:	e0bffc03 	ldbu	r2,-16(fp)
  850714:	e0fffc03 	ldbu	r3,-16(fp)
  850718:	e13ff317 	ldw	r4,-52(fp)
  85071c:	20c7883a 	add	r3,r4,r3
  850720:	18c002c4 	addi	r3,r3,11
  850724:	18c00003 	ldbu	r3,0(r3)
  850728:	1809883a 	mov	r4,r3
  85072c:	e0fffc83 	ldbu	r3,-14(fp)
  850730:	00c6303a 	nor	r3,zero,r3
  850734:	20c6703a 	and	r3,r4,r3
  850738:	1809883a 	mov	r4,r3
  85073c:	e0fff317 	ldw	r3,-52(fp)
  850740:	1885883a 	add	r2,r3,r2
  850744:	108002c4 	addi	r2,r2,11
  850748:	11000005 	stb	r4,0(r2)
        if (pevent->OSEventTbl[y_old] == 0) {
  85074c:	e0bffc03 	ldbu	r2,-16(fp)
  850750:	e0fff317 	ldw	r3,-52(fp)
  850754:	1885883a 	add	r2,r3,r2
  850758:	108002c4 	addi	r2,r2,11
  85075c:	10800003 	ldbu	r2,0(r2)
  850760:	10803fcc 	andi	r2,r2,255
  850764:	1000091e 	bne	r2,zero,85078c <OSTaskChangePrio+0x314>
            pevent->OSEventGrp    &= ~bity_old;
  850768:	e0bff317 	ldw	r2,-52(fp)
  85076c:	10800283 	ldbu	r2,10(r2)
  850770:	1007883a 	mov	r3,r2
  850774:	e0bffc43 	ldbu	r2,-15(fp)
  850778:	0084303a 	nor	r2,zero,r2
  85077c:	1884703a 	and	r2,r3,r2
  850780:	1007883a 	mov	r3,r2
  850784:	e0bff317 	ldw	r2,-52(fp)
  850788:	10c00285 	stb	r3,10(r2)
        }
        pevent->OSEventGrp        |= bity_new;              /* Add    new task prio to   wait list     */
  85078c:	e0bff317 	ldw	r2,-52(fp)
  850790:	10c00283 	ldbu	r3,10(r2)
  850794:	e0bffb83 	ldbu	r2,-18(fp)
  850798:	1884b03a 	or	r2,r3,r2
  85079c:	1007883a 	mov	r3,r2
  8507a0:	e0bff317 	ldw	r2,-52(fp)
  8507a4:	10c00285 	stb	r3,10(r2)
        pevent->OSEventTbl[y_new] |= bitx_new;
  8507a8:	e0bffb03 	ldbu	r2,-20(fp)
  8507ac:	e0fffb03 	ldbu	r3,-20(fp)
  8507b0:	e13ff317 	ldw	r4,-52(fp)
  8507b4:	20c7883a 	add	r3,r4,r3
  8507b8:	18c002c4 	addi	r3,r3,11
  8507bc:	19000003 	ldbu	r4,0(r3)
  8507c0:	e0fffbc3 	ldbu	r3,-17(fp)
  8507c4:	20c6b03a 	or	r3,r4,r3
  8507c8:	1809883a 	mov	r4,r3
  8507cc:	e0fff317 	ldw	r3,-52(fp)
  8507d0:	1885883a 	add	r2,r3,r2
  8507d4:	108002c4 	addi	r2,r2,11
  8507d8:	11000005 	stb	r4,0(r2)
    }
#if (OS_EVENT_MULTI_EN > 0)
    if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {
  8507dc:	e0bff817 	ldw	r2,-32(fp)
  8507e0:	10800817 	ldw	r2,32(r2)
  8507e4:	10004226 	beq	r2,zero,8508f0 <OSTaskChangePrio+0x478>
        pevents =  ptcb->OSTCBEventMultiPtr;
  8507e8:	e0bff817 	ldw	r2,-32(fp)
  8507ec:	10800817 	ldw	r2,32(r2)
  8507f0:	e0bff415 	stw	r2,-48(fp)
        pevent  = *pevents;
  8507f4:	e0bff417 	ldw	r2,-48(fp)
  8507f8:	10800017 	ldw	r2,0(r2)
  8507fc:	e0bff315 	stw	r2,-52(fp)
        while (pevent != (OS_EVENT *)0) {
  850800:	00003906 	br	8508e8 <OSTaskChangePrio+0x470>
            pevent->OSEventTbl[y_old] &= ~bitx_old;         /* Remove old task prio from wait lists    */
  850804:	e0bffc03 	ldbu	r2,-16(fp)
  850808:	e0fffc03 	ldbu	r3,-16(fp)
  85080c:	e13ff317 	ldw	r4,-52(fp)
  850810:	20c7883a 	add	r3,r4,r3
  850814:	18c002c4 	addi	r3,r3,11
  850818:	18c00003 	ldbu	r3,0(r3)
  85081c:	1809883a 	mov	r4,r3
  850820:	e0fffc83 	ldbu	r3,-14(fp)
  850824:	00c6303a 	nor	r3,zero,r3
  850828:	20c6703a 	and	r3,r4,r3
  85082c:	1809883a 	mov	r4,r3
  850830:	e0fff317 	ldw	r3,-52(fp)
  850834:	1885883a 	add	r2,r3,r2
  850838:	108002c4 	addi	r2,r2,11
  85083c:	11000005 	stb	r4,0(r2)
            if (pevent->OSEventTbl[y_old] == 0) {
  850840:	e0bffc03 	ldbu	r2,-16(fp)
  850844:	e0fff317 	ldw	r3,-52(fp)
  850848:	1885883a 	add	r2,r3,r2
  85084c:	108002c4 	addi	r2,r2,11
  850850:	10800003 	ldbu	r2,0(r2)
  850854:	10803fcc 	andi	r2,r2,255
  850858:	1000091e 	bne	r2,zero,850880 <OSTaskChangePrio+0x408>
                pevent->OSEventGrp    &= ~bity_old;
  85085c:	e0bff317 	ldw	r2,-52(fp)
  850860:	10800283 	ldbu	r2,10(r2)
  850864:	1007883a 	mov	r3,r2
  850868:	e0bffc43 	ldbu	r2,-15(fp)
  85086c:	0084303a 	nor	r2,zero,r2
  850870:	1884703a 	and	r2,r3,r2
  850874:	1007883a 	mov	r3,r2
  850878:	e0bff317 	ldw	r2,-52(fp)
  85087c:	10c00285 	stb	r3,10(r2)
            }
            pevent->OSEventGrp        |= bity_new;          /* Add    new task prio to   wait lists    */
  850880:	e0bff317 	ldw	r2,-52(fp)
  850884:	10c00283 	ldbu	r3,10(r2)
  850888:	e0bffb83 	ldbu	r2,-18(fp)
  85088c:	1884b03a 	or	r2,r3,r2
  850890:	1007883a 	mov	r3,r2
  850894:	e0bff317 	ldw	r2,-52(fp)
  850898:	10c00285 	stb	r3,10(r2)
            pevent->OSEventTbl[y_new] |= bitx_new;
  85089c:	e0bffb03 	ldbu	r2,-20(fp)
  8508a0:	e0fffb03 	ldbu	r3,-20(fp)
  8508a4:	e13ff317 	ldw	r4,-52(fp)
  8508a8:	20c7883a 	add	r3,r4,r3
  8508ac:	18c002c4 	addi	r3,r3,11
  8508b0:	19000003 	ldbu	r4,0(r3)
  8508b4:	e0fffbc3 	ldbu	r3,-17(fp)
  8508b8:	20c6b03a 	or	r3,r4,r3
  8508bc:	1809883a 	mov	r4,r3
  8508c0:	e0fff317 	ldw	r3,-52(fp)
  8508c4:	1885883a 	add	r2,r3,r2
  8508c8:	108002c4 	addi	r2,r2,11
  8508cc:	11000005 	stb	r4,0(r2)
            pevents++;
  8508d0:	e0bff417 	ldw	r2,-48(fp)
  8508d4:	10800104 	addi	r2,r2,4
  8508d8:	e0bff415 	stw	r2,-48(fp)
            pevent                     = *pevents;
  8508dc:	e0bff417 	ldw	r2,-48(fp)
  8508e0:	10800017 	ldw	r2,0(r2)
  8508e4:	e0bff315 	stw	r2,-52(fp)
    }
#if (OS_EVENT_MULTI_EN > 0)
    if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {
        pevents =  ptcb->OSTCBEventMultiPtr;
        pevent  = *pevents;
        while (pevent != (OS_EVENT *)0) {
  8508e8:	e0bff317 	ldw	r2,-52(fp)
  8508ec:	103fc51e 	bne	r2,zero,850804 <__alt_mem_epcs_flash_controller_0+0xff847804>
        }
    }
#endif
#endif

    ptcb->OSTCBPrio = newprio;                              /* Set new task priority                   */
  8508f0:	e0bff817 	ldw	r2,-32(fp)
  8508f4:	e0ffff03 	ldbu	r3,-4(fp)
  8508f8:	10c00c85 	stb	r3,50(r2)
    ptcb->OSTCBY    = y_new;
  8508fc:	e0bff817 	ldw	r2,-32(fp)
  850900:	e0fffb03 	ldbu	r3,-20(fp)
  850904:	10c00d05 	stb	r3,52(r2)
    ptcb->OSTCBX    = x_new;
  850908:	e0bff817 	ldw	r2,-32(fp)
  85090c:	e0fffb43 	ldbu	r3,-19(fp)
  850910:	10c00cc5 	stb	r3,51(r2)
    ptcb->OSTCBBitY = bity_new;
  850914:	e0bff817 	ldw	r2,-32(fp)
  850918:	e0fffb83 	ldbu	r3,-18(fp)
  85091c:	10c00d85 	stb	r3,54(r2)
    ptcb->OSTCBBitX = bitx_new;
  850920:	e0bff817 	ldw	r2,-32(fp)
  850924:	e0fffbc3 	ldbu	r3,-17(fp)
  850928:	10c00d45 	stb	r3,53(r2)
  85092c:	e0bff517 	ldw	r2,-44(fp)
  850930:	e0bffa15 	stw	r2,-24(fp)
  850934:	e0bffa17 	ldw	r2,-24(fp)
  850938:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    if (OSRunning == OS_TRUE) {
  85093c:	d0a09543 	ldbu	r2,-32171(gp)
  850940:	10803fcc 	andi	r2,r2,255
  850944:	10800058 	cmpnei	r2,r2,1
  850948:	1000011e 	bne	r2,zero,850950 <OSTaskChangePrio+0x4d8>
        OS_Sched();                                         /* Find new highest priority task          */
  85094c:	084c23c0 	call	84c23c <OS_Sched>
    }
    return (OS_ERR_NONE);
  850950:	0005883a 	mov	r2,zero
}
  850954:	e037883a 	mov	sp,fp
  850958:	dfc00117 	ldw	ra,4(sp)
  85095c:	df000017 	ldw	fp,0(sp)
  850960:	dec00204 	addi	sp,sp,8
  850964:	f800283a 	ret

00850968 <OSTaskCreate>:
*********************************************************************************************************
*/

#if OS_TASK_CREATE_EN > 0
INT8U  OSTaskCreate (void (*task)(void *p_arg), void *p_arg, OS_STK *ptos, INT8U prio)
{
  850968:	deffee04 	addi	sp,sp,-72
  85096c:	dfc01115 	stw	ra,68(sp)
  850970:	df001015 	stw	fp,64(sp)
  850974:	df001004 	addi	fp,sp,64
  850978:	e13ffc15 	stw	r4,-16(fp)
  85097c:	e17ffd15 	stw	r5,-12(fp)
  850980:	e1bffe15 	stw	r6,-8(fp)
  850984:	3805883a 	mov	r2,r7
  850988:	e0bfff05 	stb	r2,-4(fp)
    OS_STK    *psp;
    INT8U      err;
#if OS_CRITICAL_METHOD == 3                  /* Allocate storage for CPU status register               */
    OS_CPU_SR  cpu_sr = 0;
  85098c:	e03ff315 	stw	zero,-52(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (prio > OS_LOWEST_PRIO) {             /* Make sure priority is within allowable range           */
  850990:	e0bfff03 	ldbu	r2,-4(fp)
  850994:	10800570 	cmpltui	r2,r2,21
  850998:	1000021e 	bne	r2,zero,8509a4 <OSTaskCreate+0x3c>
        return (OS_ERR_PRIO_INVALID);
  85099c:	00800a84 	movi	r2,42
  8509a0:	00005706 	br	850b00 <OSTaskCreate+0x198>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8509a4:	0005303a 	rdctl	r2,status
  8509a8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8509ac:	e0fffb17 	ldw	r3,-20(fp)
  8509b0:	00bfff84 	movi	r2,-2
  8509b4:	1884703a 	and	r2,r3,r2
  8509b8:	1001703a 	wrctl	status,r2
  
  return context;
  8509bc:	e0bffb17 	ldw	r2,-20(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  8509c0:	e0bff315 	stw	r2,-52(fp)
    if (OSIntNesting > 0) {                  /* Make sure we don't create the task from within an ISR  */
  8509c4:	d0a0a303 	ldbu	r2,-32116(gp)
  8509c8:	10803fcc 	andi	r2,r2,255
  8509cc:	10000626 	beq	r2,zero,8509e8 <OSTaskCreate+0x80>
  8509d0:	e0bff317 	ldw	r2,-52(fp)
  8509d4:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8509d8:	e0bff417 	ldw	r2,-48(fp)
  8509dc:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_CREATE_ISR);
  8509e0:	00800f04 	movi	r2,60
  8509e4:	00004606 	br	850b00 <OSTaskCreate+0x198>
    }
    if (OSTCBPrioTbl[prio] == (OS_TCB *)0) { /* Make sure task doesn't already exist at this priority  */
  8509e8:	e0ffff03 	ldbu	r3,-4(fp)
  8509ec:	008021b4 	movhi	r2,134
  8509f0:	1098b904 	addi	r2,r2,25316
  8509f4:	18c7883a 	add	r3,r3,r3
  8509f8:	18c7883a 	add	r3,r3,r3
  8509fc:	10c5883a 	add	r2,r2,r3
  850a00:	10800017 	ldw	r2,0(r2)
  850a04:	1000391e 	bne	r2,zero,850aec <OSTaskCreate+0x184>
        OSTCBPrioTbl[prio] = OS_TCB_RESERVED;/* Reserve the priority to prevent others from doing ...  */
  850a08:	e0ffff03 	ldbu	r3,-4(fp)
  850a0c:	008021b4 	movhi	r2,134
  850a10:	1098b904 	addi	r2,r2,25316
  850a14:	18c7883a 	add	r3,r3,r3
  850a18:	18c7883a 	add	r3,r3,r3
  850a1c:	10c5883a 	add	r2,r2,r3
  850a20:	00c00044 	movi	r3,1
  850a24:	10c00015 	stw	r3,0(r2)
  850a28:	e0bff317 	ldw	r2,-52(fp)
  850a2c:	e0bff515 	stw	r2,-44(fp)
  850a30:	e0bff517 	ldw	r2,-44(fp)
  850a34:	1001703a 	wrctl	status,r2
                                             /* ... the same thing until task is created.              */
        OS_EXIT_CRITICAL();
        psp = OSTaskStkInit(task, p_arg, ptos, 0);              /* Initialize the task's stack         */
  850a38:	000f883a 	mov	r7,zero
  850a3c:	e1bffe17 	ldw	r6,-8(fp)
  850a40:	e17ffd17 	ldw	r5,-12(fp)
  850a44:	e13ffc17 	ldw	r4,-16(fp)
  850a48:	08568640 	call	856864 <OSTaskStkInit>
  850a4c:	e0bff715 	stw	r2,-36(fp)
        err = OS_TCBInit(prio, psp, (OS_STK *)0, 0, 0, (void *)0, 0);
  850a50:	e0bfff03 	ldbu	r2,-4(fp)
  850a54:	d8000215 	stw	zero,8(sp)
  850a58:	d8000115 	stw	zero,4(sp)
  850a5c:	d8000015 	stw	zero,0(sp)
  850a60:	000f883a 	mov	r7,zero
  850a64:	000d883a 	mov	r6,zero
  850a68:	e17ff717 	ldw	r5,-36(fp)
  850a6c:	1009883a 	mov	r4,r2
  850a70:	084c63c0 	call	84c63c <OS_TCBInit>
  850a74:	e0bff805 	stb	r2,-32(fp)
        if (err == OS_ERR_NONE) {
  850a78:	e0bff803 	ldbu	r2,-32(fp)
  850a7c:	1000061e 	bne	r2,zero,850a98 <OSTaskCreate+0x130>
            if (OSRunning == OS_TRUE) {      /* Find highest priority task if multitasking has started */
  850a80:	d0a09543 	ldbu	r2,-32171(gp)
  850a84:	10803fcc 	andi	r2,r2,255
  850a88:	10800058 	cmpnei	r2,r2,1
  850a8c:	1000151e 	bne	r2,zero,850ae4 <OSTaskCreate+0x17c>
                OS_Sched();
  850a90:	084c23c0 	call	84c23c <OS_Sched>
  850a94:	00001306 	br	850ae4 <OSTaskCreate+0x17c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  850a98:	0005303a 	rdctl	r2,status
  850a9c:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  850aa0:	e0fffa17 	ldw	r3,-24(fp)
  850aa4:	00bfff84 	movi	r2,-2
  850aa8:	1884703a 	and	r2,r3,r2
  850aac:	1001703a 	wrctl	status,r2
  
  return context;
  850ab0:	e0bffa17 	ldw	r2,-24(fp)
            }
        } else {
            OS_ENTER_CRITICAL();
  850ab4:	e0bff315 	stw	r2,-52(fp)
            OSTCBPrioTbl[prio] = (OS_TCB *)0;/* Make this priority available to others                 */
  850ab8:	e0ffff03 	ldbu	r3,-4(fp)
  850abc:	008021b4 	movhi	r2,134
  850ac0:	1098b904 	addi	r2,r2,25316
  850ac4:	18c7883a 	add	r3,r3,r3
  850ac8:	18c7883a 	add	r3,r3,r3
  850acc:	10c5883a 	add	r2,r2,r3
  850ad0:	10000015 	stw	zero,0(r2)
  850ad4:	e0bff317 	ldw	r2,-52(fp)
  850ad8:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  850adc:	e0bff617 	ldw	r2,-40(fp)
  850ae0:	1001703a 	wrctl	status,r2
            OS_EXIT_CRITICAL();
        }
        return (err);
  850ae4:	e0bff803 	ldbu	r2,-32(fp)
  850ae8:	00000506 	br	850b00 <OSTaskCreate+0x198>
  850aec:	e0bff317 	ldw	r2,-52(fp)
  850af0:	e0bff915 	stw	r2,-28(fp)
  850af4:	e0bff917 	ldw	r2,-28(fp)
  850af8:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    return (OS_ERR_PRIO_EXIST);
  850afc:	00800a04 	movi	r2,40
}
  850b00:	e037883a 	mov	sp,fp
  850b04:	dfc00117 	ldw	ra,4(sp)
  850b08:	df000017 	ldw	fp,0(sp)
  850b0c:	dec00204 	addi	sp,sp,8
  850b10:	f800283a 	ret

00850b14 <OSTaskCreateExt>:
                        INT16U   id,
                        OS_STK  *pbos,
                        INT32U   stk_size,
                        void    *pext,
                        INT16U   opt)
{
  850b14:	deffec04 	addi	sp,sp,-80
  850b18:	dfc01315 	stw	ra,76(sp)
  850b1c:	df001215 	stw	fp,72(sp)
  850b20:	df001204 	addi	fp,sp,72
  850b24:	e13ffa15 	stw	r4,-24(fp)
  850b28:	e17ffb15 	stw	r5,-20(fp)
  850b2c:	e1bffc15 	stw	r6,-16(fp)
  850b30:	3809883a 	mov	r4,r7
  850b34:	e0c00217 	ldw	r3,8(fp)
  850b38:	e0800617 	ldw	r2,24(fp)
  850b3c:	e13ffd05 	stb	r4,-12(fp)
  850b40:	e0fffe0d 	sth	r3,-8(fp)
  850b44:	e0bfff0d 	sth	r2,-4(fp)
    OS_STK    *psp;
    INT8U      err;
#if OS_CRITICAL_METHOD == 3                  /* Allocate storage for CPU status register               */
    OS_CPU_SR  cpu_sr = 0;
  850b48:	e03ff115 	stw	zero,-60(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (prio > OS_LOWEST_PRIO) {             /* Make sure priority is within allowable range           */
  850b4c:	e0bffd03 	ldbu	r2,-12(fp)
  850b50:	10800570 	cmpltui	r2,r2,21
  850b54:	1000021e 	bne	r2,zero,850b60 <OSTaskCreateExt+0x4c>
        return (OS_ERR_PRIO_INVALID);
  850b58:	00800a84 	movi	r2,42
  850b5c:	00006106 	br	850ce4 <OSTaskCreateExt+0x1d0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  850b60:	0005303a 	rdctl	r2,status
  850b64:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  850b68:	e0fff917 	ldw	r3,-28(fp)
  850b6c:	00bfff84 	movi	r2,-2
  850b70:	1884703a 	and	r2,r3,r2
  850b74:	1001703a 	wrctl	status,r2
  
  return context;
  850b78:	e0bff917 	ldw	r2,-28(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  850b7c:	e0bff115 	stw	r2,-60(fp)
    if (OSIntNesting > 0) {                  /* Make sure we don't create the task from within an ISR  */
  850b80:	d0a0a303 	ldbu	r2,-32116(gp)
  850b84:	10803fcc 	andi	r2,r2,255
  850b88:	10000626 	beq	r2,zero,850ba4 <OSTaskCreateExt+0x90>
  850b8c:	e0bff117 	ldw	r2,-60(fp)
  850b90:	e0bff215 	stw	r2,-56(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  850b94:	e0bff217 	ldw	r2,-56(fp)
  850b98:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_CREATE_ISR);
  850b9c:	00800f04 	movi	r2,60
  850ba0:	00005006 	br	850ce4 <OSTaskCreateExt+0x1d0>
    }
    if (OSTCBPrioTbl[prio] == (OS_TCB *)0) { /* Make sure task doesn't already exist at this priority  */
  850ba4:	e0fffd03 	ldbu	r3,-12(fp)
  850ba8:	008021b4 	movhi	r2,134
  850bac:	1098b904 	addi	r2,r2,25316
  850bb0:	18c7883a 	add	r3,r3,r3
  850bb4:	18c7883a 	add	r3,r3,r3
  850bb8:	10c5883a 	add	r2,r2,r3
  850bbc:	10800017 	ldw	r2,0(r2)
  850bc0:	1000431e 	bne	r2,zero,850cd0 <OSTaskCreateExt+0x1bc>
        OSTCBPrioTbl[prio] = OS_TCB_RESERVED;/* Reserve the priority to prevent others from doing ...  */
  850bc4:	e0fffd03 	ldbu	r3,-12(fp)
  850bc8:	008021b4 	movhi	r2,134
  850bcc:	1098b904 	addi	r2,r2,25316
  850bd0:	18c7883a 	add	r3,r3,r3
  850bd4:	18c7883a 	add	r3,r3,r3
  850bd8:	10c5883a 	add	r2,r2,r3
  850bdc:	00c00044 	movi	r3,1
  850be0:	10c00015 	stw	r3,0(r2)
  850be4:	e0bff117 	ldw	r2,-60(fp)
  850be8:	e0bff315 	stw	r2,-52(fp)
  850bec:	e0bff317 	ldw	r2,-52(fp)
  850bf0:	1001703a 	wrctl	status,r2
                                             /* ... the same thing until task is created.              */
        OS_EXIT_CRITICAL();

#if (OS_TASK_STAT_STK_CHK_EN > 0)
        OS_TaskStkClr(pbos, stk_size, opt);                    /* Clear the task stack (if needed)     */
  850bf4:	e0bfff0b 	ldhu	r2,-4(fp)
  850bf8:	100d883a 	mov	r6,r2
  850bfc:	e1400417 	ldw	r5,16(fp)
  850c00:	e1000317 	ldw	r4,12(fp)
  850c04:	0851b740 	call	851b74 <OS_TaskStkClr>
#endif

        psp = OSTaskStkInit(task, p_arg, ptos, opt);           /* Initialize the task's stack          */
  850c08:	e0bfff0b 	ldhu	r2,-4(fp)
  850c0c:	100f883a 	mov	r7,r2
  850c10:	e1bffc17 	ldw	r6,-16(fp)
  850c14:	e17ffb17 	ldw	r5,-20(fp)
  850c18:	e13ffa17 	ldw	r4,-24(fp)
  850c1c:	08568640 	call	856864 <OSTaskStkInit>
  850c20:	e0bff515 	stw	r2,-44(fp)
        err = OS_TCBInit(prio, psp, pbos, id, stk_size, pext, opt);
  850c24:	e0fffd03 	ldbu	r3,-12(fp)
  850c28:	e13ffe0b 	ldhu	r4,-8(fp)
  850c2c:	e0bfff0b 	ldhu	r2,-4(fp)
  850c30:	d8800215 	stw	r2,8(sp)
  850c34:	e0800517 	ldw	r2,20(fp)
  850c38:	d8800115 	stw	r2,4(sp)
  850c3c:	e0800417 	ldw	r2,16(fp)
  850c40:	d8800015 	stw	r2,0(sp)
  850c44:	200f883a 	mov	r7,r4
  850c48:	e1800317 	ldw	r6,12(fp)
  850c4c:	e17ff517 	ldw	r5,-44(fp)
  850c50:	1809883a 	mov	r4,r3
  850c54:	084c63c0 	call	84c63c <OS_TCBInit>
  850c58:	e0bff605 	stb	r2,-40(fp)
        if (err == OS_ERR_NONE) {
  850c5c:	e0bff603 	ldbu	r2,-40(fp)
  850c60:	1000061e 	bne	r2,zero,850c7c <OSTaskCreateExt+0x168>
            if (OSRunning == OS_TRUE) {                        /* Find HPT if multitasking has started */
  850c64:	d0a09543 	ldbu	r2,-32171(gp)
  850c68:	10803fcc 	andi	r2,r2,255
  850c6c:	10800058 	cmpnei	r2,r2,1
  850c70:	1000151e 	bne	r2,zero,850cc8 <OSTaskCreateExt+0x1b4>
                OS_Sched();
  850c74:	084c23c0 	call	84c23c <OS_Sched>
  850c78:	00001306 	br	850cc8 <OSTaskCreateExt+0x1b4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  850c7c:	0005303a 	rdctl	r2,status
  850c80:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  850c84:	e0fff817 	ldw	r3,-32(fp)
  850c88:	00bfff84 	movi	r2,-2
  850c8c:	1884703a 	and	r2,r3,r2
  850c90:	1001703a 	wrctl	status,r2
  
  return context;
  850c94:	e0bff817 	ldw	r2,-32(fp)
            }
        } else {
            OS_ENTER_CRITICAL();
  850c98:	e0bff115 	stw	r2,-60(fp)
            OSTCBPrioTbl[prio] = (OS_TCB *)0;                  /* Make this priority avail. to others  */
  850c9c:	e0fffd03 	ldbu	r3,-12(fp)
  850ca0:	008021b4 	movhi	r2,134
  850ca4:	1098b904 	addi	r2,r2,25316
  850ca8:	18c7883a 	add	r3,r3,r3
  850cac:	18c7883a 	add	r3,r3,r3
  850cb0:	10c5883a 	add	r2,r2,r3
  850cb4:	10000015 	stw	zero,0(r2)
  850cb8:	e0bff117 	ldw	r2,-60(fp)
  850cbc:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  850cc0:	e0bff417 	ldw	r2,-48(fp)
  850cc4:	1001703a 	wrctl	status,r2
            OS_EXIT_CRITICAL();
        }
        return (err);
  850cc8:	e0bff603 	ldbu	r2,-40(fp)
  850ccc:	00000506 	br	850ce4 <OSTaskCreateExt+0x1d0>
  850cd0:	e0bff117 	ldw	r2,-60(fp)
  850cd4:	e0bff715 	stw	r2,-36(fp)
  850cd8:	e0bff717 	ldw	r2,-36(fp)
  850cdc:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    return (OS_ERR_PRIO_EXIST);
  850ce0:	00800a04 	movi	r2,40
}
  850ce4:	e037883a 	mov	sp,fp
  850ce8:	dfc00117 	ldw	ra,4(sp)
  850cec:	df000017 	ldw	fp,0(sp)
  850cf0:	dec00204 	addi	sp,sp,8
  850cf4:	f800283a 	ret

00850cf8 <OSTaskDel>:
*********************************************************************************************************
*/

#if OS_TASK_DEL_EN > 0
INT8U  OSTaskDel (INT8U prio)
{
  850cf8:	defff404 	addi	sp,sp,-48
  850cfc:	dfc00b15 	stw	ra,44(sp)
  850d00:	df000a15 	stw	fp,40(sp)
  850d04:	df000a04 	addi	fp,sp,40
  850d08:	2005883a 	mov	r2,r4
  850d0c:	e0bfff05 	stb	r2,-4(fp)
#if (OS_FLAG_EN > 0) && (OS_MAX_FLAGS > 0)
    OS_FLAG_NODE *pnode;
#endif
    OS_TCB       *ptcb;
#if OS_CRITICAL_METHOD == 3                             /* Allocate storage for CPU status register    */
    OS_CPU_SR     cpu_sr = 0;
  850d10:	e03ff615 	stw	zero,-40(fp)
#endif



    if (OSIntNesting > 0) {                             /* See if trying to delete from ISR            */
  850d14:	d0a0a303 	ldbu	r2,-32116(gp)
  850d18:	10803fcc 	andi	r2,r2,255
  850d1c:	10000226 	beq	r2,zero,850d28 <OSTaskDel+0x30>
        return (OS_ERR_TASK_DEL_ISR);
  850d20:	00801004 	movi	r2,64
  850d24:	0000c006 	br	851028 <OSTaskDel+0x330>
    }
    if (prio == OS_TASK_IDLE_PRIO) {                    /* Not allowed to delete idle task             */
  850d28:	e0bfff03 	ldbu	r2,-4(fp)
  850d2c:	10800518 	cmpnei	r2,r2,20
  850d30:	1000021e 	bne	r2,zero,850d3c <OSTaskDel+0x44>
        return (OS_ERR_TASK_DEL_IDLE);
  850d34:	00800f84 	movi	r2,62
  850d38:	0000bb06 	br	851028 <OSTaskDel+0x330>
    }
#if OS_ARG_CHK_EN > 0
    if (prio >= OS_LOWEST_PRIO) {                       /* Task priority valid ?                       */
  850d3c:	e0bfff03 	ldbu	r2,-4(fp)
  850d40:	10800530 	cmpltui	r2,r2,20
  850d44:	1000051e 	bne	r2,zero,850d5c <OSTaskDel+0x64>
        if (prio != OS_PRIO_SELF) {
  850d48:	e0bfff03 	ldbu	r2,-4(fp)
  850d4c:	10803fe0 	cmpeqi	r2,r2,255
  850d50:	1000021e 	bne	r2,zero,850d5c <OSTaskDel+0x64>
            return (OS_ERR_PRIO_INVALID);
  850d54:	00800a84 	movi	r2,42
  850d58:	0000b306 	br	851028 <OSTaskDel+0x330>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  850d5c:	0005303a 	rdctl	r2,status
  850d60:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  850d64:	e0fffe17 	ldw	r3,-8(fp)
  850d68:	00bfff84 	movi	r2,-2
  850d6c:	1884703a 	and	r2,r3,r2
  850d70:	1001703a 	wrctl	status,r2
  
  return context;
  850d74:	e0bffe17 	ldw	r2,-8(fp)
        }
    }
#endif

/*$PAGE*/
    OS_ENTER_CRITICAL();
  850d78:	e0bff615 	stw	r2,-40(fp)
    if (prio == OS_PRIO_SELF) {                         /* See if requesting to delete self            */
  850d7c:	e0bfff03 	ldbu	r2,-4(fp)
  850d80:	10803fd8 	cmpnei	r2,r2,255
  850d84:	1000031e 	bne	r2,zero,850d94 <OSTaskDel+0x9c>
        prio = OSTCBCur->OSTCBPrio;                     /* Set priority to delete to current           */
  850d88:	d0a0a417 	ldw	r2,-32112(gp)
  850d8c:	10800c83 	ldbu	r2,50(r2)
  850d90:	e0bfff05 	stb	r2,-4(fp)
    }
    ptcb = OSTCBPrioTbl[prio];
  850d94:	e0ffff03 	ldbu	r3,-4(fp)
  850d98:	008021b4 	movhi	r2,134
  850d9c:	1098b904 	addi	r2,r2,25316
  850da0:	18c7883a 	add	r3,r3,r3
  850da4:	18c7883a 	add	r3,r3,r3
  850da8:	10c5883a 	add	r2,r2,r3
  850dac:	10800017 	ldw	r2,0(r2)
  850db0:	e0bff815 	stw	r2,-32(fp)
    if (ptcb == (OS_TCB *)0) {                          /* Task to delete must exist                   */
  850db4:	e0bff817 	ldw	r2,-32(fp)
  850db8:	1000061e 	bne	r2,zero,850dd4 <OSTaskDel+0xdc>
  850dbc:	e0bff617 	ldw	r2,-40(fp)
  850dc0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  850dc4:	e0bff717 	ldw	r2,-36(fp)
  850dc8:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);
  850dcc:	008010c4 	movi	r2,67
  850dd0:	00009506 	br	851028 <OSTaskDel+0x330>
    }
    if (ptcb == OS_TCB_RESERVED) {                      /* Must not be assigned to Mutex               */
  850dd4:	e0bff817 	ldw	r2,-32(fp)
  850dd8:	10800058 	cmpnei	r2,r2,1
  850ddc:	1000061e 	bne	r2,zero,850df8 <OSTaskDel+0x100>
  850de0:	e0bff617 	ldw	r2,-40(fp)
  850de4:	e0bff915 	stw	r2,-28(fp)
  850de8:	e0bff917 	ldw	r2,-28(fp)
  850dec:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_DEL);
  850df0:	00800f44 	movi	r2,61
  850df4:	00008c06 	br	851028 <OSTaskDel+0x330>
    }

    OSRdyTbl[ptcb->OSTCBY] &= ~ptcb->OSTCBBitX;
  850df8:	e0bff817 	ldw	r2,-32(fp)
  850dfc:	10800d03 	ldbu	r2,52(r2)
  850e00:	10c03fcc 	andi	r3,r2,255
  850e04:	e0bff817 	ldw	r2,-32(fp)
  850e08:	10800d03 	ldbu	r2,52(r2)
  850e0c:	11003fcc 	andi	r4,r2,255
  850e10:	d0a0a144 	addi	r2,gp,-32123
  850e14:	2085883a 	add	r2,r4,r2
  850e18:	10800003 	ldbu	r2,0(r2)
  850e1c:	1009883a 	mov	r4,r2
  850e20:	e0bff817 	ldw	r2,-32(fp)
  850e24:	10800d43 	ldbu	r2,53(r2)
  850e28:	0084303a 	nor	r2,zero,r2
  850e2c:	2084703a 	and	r2,r4,r2
  850e30:	1009883a 	mov	r4,r2
  850e34:	d0a0a144 	addi	r2,gp,-32123
  850e38:	1885883a 	add	r2,r3,r2
  850e3c:	11000005 	stb	r4,0(r2)
    if (OSRdyTbl[ptcb->OSTCBY] == 0) {                  /* Make task not ready                         */
  850e40:	e0bff817 	ldw	r2,-32(fp)
  850e44:	10800d03 	ldbu	r2,52(r2)
  850e48:	10c03fcc 	andi	r3,r2,255
  850e4c:	d0a0a144 	addi	r2,gp,-32123
  850e50:	1885883a 	add	r2,r3,r2
  850e54:	10800003 	ldbu	r2,0(r2)
  850e58:	10803fcc 	andi	r2,r2,255
  850e5c:	1000071e 	bne	r2,zero,850e7c <OSTaskDel+0x184>
        OSRdyGrp           &= ~ptcb->OSTCBBitY;
  850e60:	e0bff817 	ldw	r2,-32(fp)
  850e64:	10800d83 	ldbu	r2,54(r2)
  850e68:	0084303a 	nor	r2,zero,r2
  850e6c:	1007883a 	mov	r3,r2
  850e70:	d0a0a103 	ldbu	r2,-32124(gp)
  850e74:	1884703a 	and	r2,r3,r2
  850e78:	d0a0a105 	stb	r2,-32124(gp)
    }
    
#if (OS_EVENT_EN)
    if (ptcb->OSTCBEventPtr != (OS_EVENT *)0) {
  850e7c:	e0bff817 	ldw	r2,-32(fp)
  850e80:	10800717 	ldw	r2,28(r2)
  850e84:	10000526 	beq	r2,zero,850e9c <OSTaskDel+0x1a4>
        OS_EventTaskRemove(ptcb, ptcb->OSTCBEventPtr);  /* Remove this task from any event   wait list */
  850e88:	e0bff817 	ldw	r2,-32(fp)
  850e8c:	10800717 	ldw	r2,28(r2)
  850e90:	100b883a 	mov	r5,r2
  850e94:	e13ff817 	ldw	r4,-32(fp)
  850e98:	084bbe80 	call	84bbe8 <OS_EventTaskRemove>
    }
#if (OS_EVENT_MULTI_EN > 0)
    if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {   /* Remove this task from any events' wait lists*/
  850e9c:	e0bff817 	ldw	r2,-32(fp)
  850ea0:	10800817 	ldw	r2,32(r2)
  850ea4:	10000526 	beq	r2,zero,850ebc <OSTaskDel+0x1c4>
        OS_EventTaskRemoveMulti(ptcb, ptcb->OSTCBEventMultiPtr);
  850ea8:	e0bff817 	ldw	r2,-32(fp)
  850eac:	10800817 	ldw	r2,32(r2)
  850eb0:	100b883a 	mov	r5,r2
  850eb4:	e13ff817 	ldw	r4,-32(fp)
  850eb8:	084bca00 	call	84bca0 <OS_EventTaskRemoveMulti>
    }
#endif
#endif

#if (OS_FLAG_EN > 0) && (OS_MAX_FLAGS > 0)
    pnode = ptcb->OSTCBFlagNode;
  850ebc:	e0bff817 	ldw	r2,-32(fp)
  850ec0:	10800a17 	ldw	r2,40(r2)
  850ec4:	e0bffb15 	stw	r2,-20(fp)
    if (pnode != (OS_FLAG_NODE *)0) {                   /* If task is waiting on event flag            */
  850ec8:	e0bffb17 	ldw	r2,-20(fp)
  850ecc:	10000226 	beq	r2,zero,850ed8 <OSTaskDel+0x1e0>
        OS_FlagUnlink(pnode);                           /* Remove from wait list                       */
  850ed0:	e13ffb17 	ldw	r4,-20(fp)
  850ed4:	084e1100 	call	84e110 <OS_FlagUnlink>
    }
#endif

    ptcb->OSTCBDly      = 0;                            /* Prevent OSTimeTick() from updating          */
  850ed8:	e0bff817 	ldw	r2,-32(fp)
  850edc:	10000b8d 	sth	zero,46(r2)
    ptcb->OSTCBStat     = OS_STAT_RDY;                  /* Prevent task from being resumed             */
  850ee0:	e0bff817 	ldw	r2,-32(fp)
  850ee4:	10000c05 	stb	zero,48(r2)
    ptcb->OSTCBStatPend = OS_STAT_PEND_OK;
  850ee8:	e0bff817 	ldw	r2,-32(fp)
  850eec:	10000c45 	stb	zero,49(r2)
    if (OSLockNesting < 255u) {                         /* Make sure we don't context switch           */
  850ef0:	d0a09503 	ldbu	r2,-32172(gp)
  850ef4:	10803fcc 	andi	r2,r2,255
  850ef8:	10803fe0 	cmpeqi	r2,r2,255
  850efc:	1000031e 	bne	r2,zero,850f0c <OSTaskDel+0x214>
        OSLockNesting++;
  850f00:	d0a09503 	ldbu	r2,-32172(gp)
  850f04:	10800044 	addi	r2,r2,1
  850f08:	d0a09505 	stb	r2,-32172(gp)
  850f0c:	e0bff617 	ldw	r2,-40(fp)
  850f10:	e0bffd15 	stw	r2,-12(fp)
  850f14:	e0bffd17 	ldw	r2,-12(fp)
  850f18:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();                                 /* Enabling INT. ignores next instruc.         */
    OS_Dummy();                                         /* ... Dummy ensures that INTs will be         */
  850f1c:	084b7d00 	call	84b7d0 <OS_Dummy>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  850f20:	0005303a 	rdctl	r2,status
  850f24:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  850f28:	e0fffa17 	ldw	r3,-24(fp)
  850f2c:	00bfff84 	movi	r2,-2
  850f30:	1884703a 	and	r2,r3,r2
  850f34:	1001703a 	wrctl	status,r2
  
  return context;
  850f38:	e0bffa17 	ldw	r2,-24(fp)
    OS_ENTER_CRITICAL();                                /* ... disabled HERE!                          */
  850f3c:	e0bff615 	stw	r2,-40(fp)
    if (OSLockNesting > 0) {                            /* Remove context switch lock                  */
  850f40:	d0a09503 	ldbu	r2,-32172(gp)
  850f44:	10803fcc 	andi	r2,r2,255
  850f48:	10000326 	beq	r2,zero,850f58 <OSTaskDel+0x260>
        OSLockNesting--;
  850f4c:	d0a09503 	ldbu	r2,-32172(gp)
  850f50:	10bfffc4 	addi	r2,r2,-1
  850f54:	d0a09505 	stb	r2,-32172(gp)
    }
    OSTaskDelHook(ptcb);                                /* Call user defined hook                      */
  850f58:	e13ff817 	ldw	r4,-32(fp)
  850f5c:	08569e40 	call	8569e4 <OSTaskDelHook>
    OSTaskCtr--;                                        /* One less task being managed                 */
  850f60:	d0a09d43 	ldbu	r2,-32139(gp)
  850f64:	10bfffc4 	addi	r2,r2,-1
  850f68:	d0a09d45 	stb	r2,-32139(gp)
    OSTCBPrioTbl[prio] = (OS_TCB *)0;                   /* Clear old priority entry                    */
  850f6c:	e0ffff03 	ldbu	r3,-4(fp)
  850f70:	008021b4 	movhi	r2,134
  850f74:	1098b904 	addi	r2,r2,25316
  850f78:	18c7883a 	add	r3,r3,r3
  850f7c:	18c7883a 	add	r3,r3,r3
  850f80:	10c5883a 	add	r2,r2,r3
  850f84:	10000015 	stw	zero,0(r2)
    if (ptcb->OSTCBPrev == (OS_TCB *)0) {               /* Remove from TCB chain                       */
  850f88:	e0bff817 	ldw	r2,-32(fp)
  850f8c:	10800617 	ldw	r2,24(r2)
  850f90:	1000071e 	bne	r2,zero,850fb0 <OSTaskDel+0x2b8>
        ptcb->OSTCBNext->OSTCBPrev = (OS_TCB *)0;
  850f94:	e0bff817 	ldw	r2,-32(fp)
  850f98:	10800517 	ldw	r2,20(r2)
  850f9c:	10000615 	stw	zero,24(r2)
        OSTCBList                  = ptcb->OSTCBNext;
  850fa0:	e0bff817 	ldw	r2,-32(fp)
  850fa4:	10800517 	ldw	r2,20(r2)
  850fa8:	d0a09815 	stw	r2,-32160(gp)
  850fac:	00000a06 	br	850fd8 <OSTaskDel+0x2e0>
    } else {
        ptcb->OSTCBPrev->OSTCBNext = ptcb->OSTCBNext;
  850fb0:	e0bff817 	ldw	r2,-32(fp)
  850fb4:	10800617 	ldw	r2,24(r2)
  850fb8:	e0fff817 	ldw	r3,-32(fp)
  850fbc:	18c00517 	ldw	r3,20(r3)
  850fc0:	10c00515 	stw	r3,20(r2)
        ptcb->OSTCBNext->OSTCBPrev = ptcb->OSTCBPrev;
  850fc4:	e0bff817 	ldw	r2,-32(fp)
  850fc8:	10800517 	ldw	r2,20(r2)
  850fcc:	e0fff817 	ldw	r3,-32(fp)
  850fd0:	18c00617 	ldw	r3,24(r3)
  850fd4:	10c00615 	stw	r3,24(r2)
    }
    ptcb->OSTCBNext   = OSTCBFreeList;                  /* Return TCB to free TCB list                 */
  850fd8:	d0e09c17 	ldw	r3,-32144(gp)
  850fdc:	e0bff817 	ldw	r2,-32(fp)
  850fe0:	10c00515 	stw	r3,20(r2)
    OSTCBFreeList     = ptcb;
  850fe4:	e0bff817 	ldw	r2,-32(fp)
  850fe8:	d0a09c15 	stw	r2,-32144(gp)
#if OS_TASK_NAME_SIZE > 1
    ptcb->OSTCBTaskName[0] = '?';                       /* Unknown name                                */
  850fec:	e0bff817 	ldw	r2,-32(fp)
  850ff0:	00c00fc4 	movi	r3,63
  850ff4:	10c01305 	stb	r3,76(r2)
    ptcb->OSTCBTaskName[1] = OS_ASCII_NUL;
  850ff8:	e0bff817 	ldw	r2,-32(fp)
  850ffc:	10001345 	stb	zero,77(r2)
  851000:	e0bff617 	ldw	r2,-40(fp)
  851004:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851008:	e0bffc17 	ldw	r2,-16(fp)
  85100c:	1001703a 	wrctl	status,r2
#endif
    OS_EXIT_CRITICAL();
    if (OSRunning == OS_TRUE) {
  851010:	d0a09543 	ldbu	r2,-32171(gp)
  851014:	10803fcc 	andi	r2,r2,255
  851018:	10800058 	cmpnei	r2,r2,1
  85101c:	1000011e 	bne	r2,zero,851024 <OSTaskDel+0x32c>
        OS_Sched();                                     /* Find new highest priority task              */
  851020:	084c23c0 	call	84c23c <OS_Sched>
    }
    return (OS_ERR_NONE);
  851024:	0005883a 	mov	r2,zero
}
  851028:	e037883a 	mov	sp,fp
  85102c:	dfc00117 	ldw	ra,4(sp)
  851030:	df000017 	ldw	fp,0(sp)
  851034:	dec00204 	addi	sp,sp,8
  851038:	f800283a 	ret

0085103c <OSTaskDelReq>:
*********************************************************************************************************
*/
/*$PAGE*/
#if OS_TASK_DEL_EN > 0
INT8U  OSTaskDelReq (INT8U prio)
{
  85103c:	defff504 	addi	sp,sp,-44
  851040:	df000a15 	stw	fp,40(sp)
  851044:	df000a04 	addi	fp,sp,40
  851048:	2005883a 	mov	r2,r4
  85104c:	e0bfff05 	stb	r2,-4(fp)
    INT8U      stat;
    OS_TCB    *ptcb;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  851050:	e03ff615 	stw	zero,-40(fp)
#endif



    if (prio == OS_TASK_IDLE_PRIO) {                            /* Not allowed to delete idle task     */
  851054:	e0bfff03 	ldbu	r2,-4(fp)
  851058:	10800518 	cmpnei	r2,r2,20
  85105c:	1000021e 	bne	r2,zero,851068 <OSTaskDelReq+0x2c>
        return (OS_ERR_TASK_DEL_IDLE);
  851060:	00800f84 	movi	r2,62
  851064:	00004506 	br	85117c <OSTaskDelReq+0x140>
    }
#if OS_ARG_CHK_EN > 0
    if (prio >= OS_LOWEST_PRIO) {                               /* Task priority valid ?               */
  851068:	e0bfff03 	ldbu	r2,-4(fp)
  85106c:	10800530 	cmpltui	r2,r2,20
  851070:	1000051e 	bne	r2,zero,851088 <OSTaskDelReq+0x4c>
        if (prio != OS_PRIO_SELF) {
  851074:	e0bfff03 	ldbu	r2,-4(fp)
  851078:	10803fe0 	cmpeqi	r2,r2,255
  85107c:	1000021e 	bne	r2,zero,851088 <OSTaskDelReq+0x4c>
            return (OS_ERR_PRIO_INVALID);
  851080:	00800a84 	movi	r2,42
  851084:	00003d06 	br	85117c <OSTaskDelReq+0x140>
        }
    }
#endif
    if (prio == OS_PRIO_SELF) {                                 /* See if a task is requesting to ...  */
  851088:	e0bfff03 	ldbu	r2,-4(fp)
  85108c:	10803fd8 	cmpnei	r2,r2,255
  851090:	1000111e 	bne	r2,zero,8510d8 <OSTaskDelReq+0x9c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  851094:	0005303a 	rdctl	r2,status
  851098:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  85109c:	e0fff917 	ldw	r3,-28(fp)
  8510a0:	00bfff84 	movi	r2,-2
  8510a4:	1884703a 	and	r2,r3,r2
  8510a8:	1001703a 	wrctl	status,r2
  
  return context;
  8510ac:	e0bff917 	ldw	r2,-28(fp)
        OS_ENTER_CRITICAL();                                    /* ... this task to delete itself      */
  8510b0:	e0bff615 	stw	r2,-40(fp)
        stat = OSTCBCur->OSTCBDelReq;                           /* Return request status to caller     */
  8510b4:	d0a0a417 	ldw	r2,-32112(gp)
  8510b8:	10800dc3 	ldbu	r2,55(r2)
  8510bc:	e0bff805 	stb	r2,-32(fp)
  8510c0:	e0bff617 	ldw	r2,-40(fp)
  8510c4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8510c8:	e0bffe17 	ldw	r2,-8(fp)
  8510cc:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (stat);
  8510d0:	e0bff803 	ldbu	r2,-32(fp)
  8510d4:	00002906 	br	85117c <OSTaskDelReq+0x140>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8510d8:	0005303a 	rdctl	r2,status
  8510dc:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8510e0:	e0fff717 	ldw	r3,-36(fp)
  8510e4:	00bfff84 	movi	r2,-2
  8510e8:	1884703a 	and	r2,r3,r2
  8510ec:	1001703a 	wrctl	status,r2
  
  return context;
  8510f0:	e0bff717 	ldw	r2,-36(fp)
    }
    OS_ENTER_CRITICAL();
  8510f4:	e0bff615 	stw	r2,-40(fp)
    ptcb = OSTCBPrioTbl[prio];
  8510f8:	e0ffff03 	ldbu	r3,-4(fp)
  8510fc:	008021b4 	movhi	r2,134
  851100:	1098b904 	addi	r2,r2,25316
  851104:	18c7883a 	add	r3,r3,r3
  851108:	18c7883a 	add	r3,r3,r3
  85110c:	10c5883a 	add	r2,r2,r3
  851110:	10800017 	ldw	r2,0(r2)
  851114:	e0bffb15 	stw	r2,-20(fp)
    if (ptcb == (OS_TCB *)0) {                                  /* Task to delete must exist           */
  851118:	e0bffb17 	ldw	r2,-20(fp)
  85111c:	1000061e 	bne	r2,zero,851138 <OSTaskDelReq+0xfc>
  851120:	e0bff617 	ldw	r2,-40(fp)
  851124:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851128:	e0bffa17 	ldw	r2,-24(fp)
  85112c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);                         /* Task must already be deleted        */
  851130:	008010c4 	movi	r2,67
  851134:	00001106 	br	85117c <OSTaskDelReq+0x140>
    }
    if (ptcb == OS_TCB_RESERVED) {                              /* Must NOT be assigned to a Mutex     */
  851138:	e0bffb17 	ldw	r2,-20(fp)
  85113c:	10800058 	cmpnei	r2,r2,1
  851140:	1000061e 	bne	r2,zero,85115c <OSTaskDelReq+0x120>
  851144:	e0bff617 	ldw	r2,-40(fp)
  851148:	e0bffc15 	stw	r2,-16(fp)
  85114c:	e0bffc17 	ldw	r2,-16(fp)
  851150:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_DEL);
  851154:	00800f44 	movi	r2,61
  851158:	00000806 	br	85117c <OSTaskDelReq+0x140>
    }
    ptcb->OSTCBDelReq = OS_ERR_TASK_DEL_REQ;                    /* Set flag indicating task to be DEL. */
  85115c:	e0bffb17 	ldw	r2,-20(fp)
  851160:	00c00fc4 	movi	r3,63
  851164:	10c00dc5 	stb	r3,55(r2)
  851168:	e0bff617 	ldw	r2,-40(fp)
  85116c:	e0bffd15 	stw	r2,-12(fp)
  851170:	e0bffd17 	ldw	r2,-12(fp)
  851174:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  851178:	0005883a 	mov	r2,zero
}
  85117c:	e037883a 	mov	sp,fp
  851180:	df000017 	ldw	fp,0(sp)
  851184:	dec00104 	addi	sp,sp,4
  851188:	f800283a 	ret

0085118c <OSTaskNameGet>:
*********************************************************************************************************
*/

#if OS_TASK_NAME_SIZE > 1
INT8U  OSTaskNameGet (INT8U prio, INT8U *pname, INT8U *perr)
{
  85118c:	defff404 	addi	sp,sp,-48
  851190:	dfc00b15 	stw	ra,44(sp)
  851194:	df000a15 	stw	fp,40(sp)
  851198:	df000a04 	addi	fp,sp,40
  85119c:	2005883a 	mov	r2,r4
  8511a0:	e17ffe15 	stw	r5,-8(fp)
  8511a4:	e1bfff15 	stw	r6,-4(fp)
  8511a8:	e0bffd05 	stb	r2,-12(fp)
    OS_TCB    *ptcb;
    INT8U      len;
#if OS_CRITICAL_METHOD == 3                              /* Allocate storage for CPU status register   */
    OS_CPU_SR  cpu_sr = 0;
  8511ac:	e03ff615 	stw	zero,-40(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                            /* Validate 'perr'                            */
  8511b0:	e0bfff17 	ldw	r2,-4(fp)
  8511b4:	1000021e 	bne	r2,zero,8511c0 <OSTaskNameGet+0x34>
        return (0);
  8511b8:	0005883a 	mov	r2,zero
  8511bc:	00005406 	br	851310 <OSTaskNameGet+0x184>
    }
    if (prio > OS_LOWEST_PRIO) {                         /* Task priority valid ?                      */
  8511c0:	e0bffd03 	ldbu	r2,-12(fp)
  8511c4:	10800570 	cmpltui	r2,r2,21
  8511c8:	1000081e 	bne	r2,zero,8511ec <OSTaskNameGet+0x60>
        if (prio != OS_PRIO_SELF) {
  8511cc:	e0bffd03 	ldbu	r2,-12(fp)
  8511d0:	10803fe0 	cmpeqi	r2,r2,255
  8511d4:	1000051e 	bne	r2,zero,8511ec <OSTaskNameGet+0x60>
            *perr = OS_ERR_PRIO_INVALID;                 /* No                                         */
  8511d8:	e0bfff17 	ldw	r2,-4(fp)
  8511dc:	00c00a84 	movi	r3,42
  8511e0:	10c00005 	stb	r3,0(r2)
            return (0);
  8511e4:	0005883a 	mov	r2,zero
  8511e8:	00004906 	br	851310 <OSTaskNameGet+0x184>
        }
    }
    if (pname == (INT8U *)0) {                           /* Is 'pname' a NULL pointer?                 */
  8511ec:	e0bffe17 	ldw	r2,-8(fp)
  8511f0:	1000051e 	bne	r2,zero,851208 <OSTaskNameGet+0x7c>
        *perr = OS_ERR_PNAME_NULL;                       /* Yes                                        */
  8511f4:	e0bfff17 	ldw	r2,-4(fp)
  8511f8:	00c00304 	movi	r3,12
  8511fc:	10c00005 	stb	r3,0(r2)
        return (0);
  851200:	0005883a 	mov	r2,zero
  851204:	00004206 	br	851310 <OSTaskNameGet+0x184>
    }
#endif
    if (OSIntNesting > 0) {                              /* See if trying to call from an ISR          */
  851208:	d0a0a303 	ldbu	r2,-32116(gp)
  85120c:	10803fcc 	andi	r2,r2,255
  851210:	10000526 	beq	r2,zero,851228 <OSTaskNameGet+0x9c>
        *perr = OS_ERR_NAME_GET_ISR;
  851214:	e0bfff17 	ldw	r2,-4(fp)
  851218:	00c00444 	movi	r3,17
  85121c:	10c00005 	stb	r3,0(r2)
        return (0);
  851220:	0005883a 	mov	r2,zero
  851224:	00003a06 	br	851310 <OSTaskNameGet+0x184>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  851228:	0005303a 	rdctl	r2,status
  85122c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  851230:	e0fffc17 	ldw	r3,-16(fp)
  851234:	00bfff84 	movi	r2,-2
  851238:	1884703a 	and	r2,r3,r2
  85123c:	1001703a 	wrctl	status,r2
  
  return context;
  851240:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  851244:	e0bff615 	stw	r2,-40(fp)
    if (prio == OS_PRIO_SELF) {                          /* See if caller desires it's own name        */
  851248:	e0bffd03 	ldbu	r2,-12(fp)
  85124c:	10803fd8 	cmpnei	r2,r2,255
  851250:	1000031e 	bne	r2,zero,851260 <OSTaskNameGet+0xd4>
        prio = OSTCBCur->OSTCBPrio;
  851254:	d0a0a417 	ldw	r2,-32112(gp)
  851258:	10800c83 	ldbu	r2,50(r2)
  85125c:	e0bffd05 	stb	r2,-12(fp)
    }
    ptcb = OSTCBPrioTbl[prio];
  851260:	e0fffd03 	ldbu	r3,-12(fp)
  851264:	008021b4 	movhi	r2,134
  851268:	1098b904 	addi	r2,r2,25316
  85126c:	18c7883a 	add	r3,r3,r3
  851270:	18c7883a 	add	r3,r3,r3
  851274:	10c5883a 	add	r2,r2,r3
  851278:	10800017 	ldw	r2,0(r2)
  85127c:	e0bff815 	stw	r2,-32(fp)
    if (ptcb == (OS_TCB *)0) {                           /* Does task exist?                           */
  851280:	e0bff817 	ldw	r2,-32(fp)
  851284:	1000091e 	bne	r2,zero,8512ac <OSTaskNameGet+0x120>
  851288:	e0bff617 	ldw	r2,-40(fp)
  85128c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851290:	e0bff717 	ldw	r2,-36(fp)
  851294:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();                              /* No                                         */
        *perr = OS_ERR_TASK_NOT_EXIST;
  851298:	e0bfff17 	ldw	r2,-4(fp)
  85129c:	00c010c4 	movi	r3,67
  8512a0:	10c00005 	stb	r3,0(r2)
        return (0);
  8512a4:	0005883a 	mov	r2,zero
  8512a8:	00001906 	br	851310 <OSTaskNameGet+0x184>
    }
    if (ptcb == OS_TCB_RESERVED) {                       /* Task assigned to a Mutex?                  */
  8512ac:	e0bff817 	ldw	r2,-32(fp)
  8512b0:	10800058 	cmpnei	r2,r2,1
  8512b4:	1000091e 	bne	r2,zero,8512dc <OSTaskNameGet+0x150>
  8512b8:	e0bff617 	ldw	r2,-40(fp)
  8512bc:	e0bff915 	stw	r2,-28(fp)
  8512c0:	e0bff917 	ldw	r2,-28(fp)
  8512c4:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();                              /* Yes                                        */
        *perr = OS_ERR_TASK_NOT_EXIST;
  8512c8:	e0bfff17 	ldw	r2,-4(fp)
  8512cc:	00c010c4 	movi	r3,67
  8512d0:	10c00005 	stb	r3,0(r2)
        return (0);
  8512d4:	0005883a 	mov	r2,zero
  8512d8:	00000d06 	br	851310 <OSTaskNameGet+0x184>
    }
    len   = OS_StrCopy(pname, ptcb->OSTCBTaskName);      /* Yes, copy name from TCB                    */
  8512dc:	e0bff817 	ldw	r2,-32(fp)
  8512e0:	10801304 	addi	r2,r2,76
  8512e4:	100b883a 	mov	r5,r2
  8512e8:	e13ffe17 	ldw	r4,-8(fp)
  8512ec:	084c3800 	call	84c380 <OS_StrCopy>
  8512f0:	e0bffb05 	stb	r2,-20(fp)
  8512f4:	e0bff617 	ldw	r2,-40(fp)
  8512f8:	e0bffa15 	stw	r2,-24(fp)
  8512fc:	e0bffa17 	ldw	r2,-24(fp)
  851300:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  851304:	e0bfff17 	ldw	r2,-4(fp)
  851308:	10000005 	stb	zero,0(r2)
    return (len);
  85130c:	e0bffb03 	ldbu	r2,-20(fp)
}
  851310:	e037883a 	mov	sp,fp
  851314:	dfc00117 	ldw	ra,4(sp)
  851318:	df000017 	ldw	fp,0(sp)
  85131c:	dec00204 	addi	sp,sp,8
  851320:	f800283a 	ret

00851324 <OSTaskNameSet>:
* Returns    : None
*********************************************************************************************************
*/
#if OS_TASK_NAME_SIZE > 1
void  OSTaskNameSet (INT8U prio, INT8U *pname, INT8U *perr)
{
  851324:	defff304 	addi	sp,sp,-52
  851328:	dfc00c15 	stw	ra,48(sp)
  85132c:	df000b15 	stw	fp,44(sp)
  851330:	df000b04 	addi	fp,sp,44
  851334:	2005883a 	mov	r2,r4
  851338:	e17ffe15 	stw	r5,-8(fp)
  85133c:	e1bfff15 	stw	r6,-4(fp)
  851340:	e0bffd05 	stb	r2,-12(fp)
    INT8U      len;
    OS_TCB    *ptcb;
#if OS_CRITICAL_METHOD == 3                          /* Allocate storage for CPU status register       */
    OS_CPU_SR  cpu_sr = 0;
  851344:	e03ff515 	stw	zero,-44(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                        /* Validate 'perr'                                */
  851348:	e0bfff17 	ldw	r2,-4(fp)
  85134c:	10005c26 	beq	r2,zero,8514c0 <OSTaskNameSet+0x19c>
        return;
    }
    if (prio > OS_LOWEST_PRIO) {                     /* Task priority valid ?                          */
  851350:	e0bffd03 	ldbu	r2,-12(fp)
  851354:	10800570 	cmpltui	r2,r2,21
  851358:	1000071e 	bne	r2,zero,851378 <OSTaskNameSet+0x54>
        if (prio != OS_PRIO_SELF) {
  85135c:	e0bffd03 	ldbu	r2,-12(fp)
  851360:	10803fe0 	cmpeqi	r2,r2,255
  851364:	1000041e 	bne	r2,zero,851378 <OSTaskNameSet+0x54>
            *perr = OS_ERR_PRIO_INVALID;             /* No                                             */
  851368:	e0bfff17 	ldw	r2,-4(fp)
  85136c:	00c00a84 	movi	r3,42
  851370:	10c00005 	stb	r3,0(r2)
            return;
  851374:	00005306 	br	8514c4 <OSTaskNameSet+0x1a0>
        }
    }
    if (pname == (INT8U *)0) {                       /* Is 'pname' a NULL pointer?                     */
  851378:	e0bffe17 	ldw	r2,-8(fp)
  85137c:	1000041e 	bne	r2,zero,851390 <OSTaskNameSet+0x6c>
        *perr = OS_ERR_PNAME_NULL;                   /* Yes                                            */
  851380:	e0bfff17 	ldw	r2,-4(fp)
  851384:	00c00304 	movi	r3,12
  851388:	10c00005 	stb	r3,0(r2)
        return;
  85138c:	00004d06 	br	8514c4 <OSTaskNameSet+0x1a0>
    }
#endif
    if (OSIntNesting > 0) {                          /* See if trying to call from an ISR              */
  851390:	d0a0a303 	ldbu	r2,-32116(gp)
  851394:	10803fcc 	andi	r2,r2,255
  851398:	10000426 	beq	r2,zero,8513ac <OSTaskNameSet+0x88>
        *perr = OS_ERR_NAME_SET_ISR;
  85139c:	e0bfff17 	ldw	r2,-4(fp)
  8513a0:	00c00484 	movi	r3,18
  8513a4:	10c00005 	stb	r3,0(r2)
        return;
  8513a8:	00004606 	br	8514c4 <OSTaskNameSet+0x1a0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8513ac:	0005303a 	rdctl	r2,status
  8513b0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8513b4:	e0fffc17 	ldw	r3,-16(fp)
  8513b8:	00bfff84 	movi	r2,-2
  8513bc:	1884703a 	and	r2,r3,r2
  8513c0:	1001703a 	wrctl	status,r2
  
  return context;
  8513c4:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  8513c8:	e0bff515 	stw	r2,-44(fp)
    if (prio == OS_PRIO_SELF) {                      /* See if caller desires to set it's own name     */
  8513cc:	e0bffd03 	ldbu	r2,-12(fp)
  8513d0:	10803fd8 	cmpnei	r2,r2,255
  8513d4:	1000031e 	bne	r2,zero,8513e4 <OSTaskNameSet+0xc0>
        prio = OSTCBCur->OSTCBPrio;
  8513d8:	d0a0a417 	ldw	r2,-32112(gp)
  8513dc:	10800c83 	ldbu	r2,50(r2)
  8513e0:	e0bffd05 	stb	r2,-12(fp)
    }
    ptcb = OSTCBPrioTbl[prio];
  8513e4:	e0fffd03 	ldbu	r3,-12(fp)
  8513e8:	008021b4 	movhi	r2,134
  8513ec:	1098b904 	addi	r2,r2,25316
  8513f0:	18c7883a 	add	r3,r3,r3
  8513f4:	18c7883a 	add	r3,r3,r3
  8513f8:	10c5883a 	add	r2,r2,r3
  8513fc:	10800017 	ldw	r2,0(r2)
  851400:	e0bff715 	stw	r2,-36(fp)
    if (ptcb == (OS_TCB *)0) {                       /* Does task exist?                               */
  851404:	e0bff717 	ldw	r2,-36(fp)
  851408:	1000081e 	bne	r2,zero,85142c <OSTaskNameSet+0x108>
  85140c:	e0bff517 	ldw	r2,-44(fp)
  851410:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851414:	e0bff617 	ldw	r2,-40(fp)
  851418:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();                          /* No                                             */
        *perr = OS_ERR_TASK_NOT_EXIST;
  85141c:	e0bfff17 	ldw	r2,-4(fp)
  851420:	00c010c4 	movi	r3,67
  851424:	10c00005 	stb	r3,0(r2)
        return;
  851428:	00002606 	br	8514c4 <OSTaskNameSet+0x1a0>
    }
    if (ptcb == OS_TCB_RESERVED) {                   /* Task assigned to a Mutex?                      */
  85142c:	e0bff717 	ldw	r2,-36(fp)
  851430:	10800058 	cmpnei	r2,r2,1
  851434:	1000081e 	bne	r2,zero,851458 <OSTaskNameSet+0x134>
  851438:	e0bff517 	ldw	r2,-44(fp)
  85143c:	e0bff815 	stw	r2,-32(fp)
  851440:	e0bff817 	ldw	r2,-32(fp)
  851444:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();                          /* Yes                                            */
        *perr = OS_ERR_TASK_NOT_EXIST;
  851448:	e0bfff17 	ldw	r2,-4(fp)
  85144c:	00c010c4 	movi	r3,67
  851450:	10c00005 	stb	r3,0(r2)
        return;
  851454:	00001b06 	br	8514c4 <OSTaskNameSet+0x1a0>
    }
    len = OS_StrLen(pname);                          /* Yes, Can we fit the string in the TCB?         */
  851458:	e13ffe17 	ldw	r4,-8(fp)
  85145c:	084c3f40 	call	84c3f4 <OS_StrLen>
  851460:	e0bffa05 	stb	r2,-24(fp)
    if (len > (OS_TASK_NAME_SIZE - 1)) {             /*      No                                        */
  851464:	e0bffa03 	ldbu	r2,-24(fp)
  851468:	10800830 	cmpltui	r2,r2,32
  85146c:	1000081e 	bne	r2,zero,851490 <OSTaskNameSet+0x16c>
  851470:	e0bff517 	ldw	r2,-44(fp)
  851474:	e0bff915 	stw	r2,-28(fp)
  851478:	e0bff917 	ldw	r2,-28(fp)
  85147c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_TASK_NAME_TOO_LONG;
  851480:	e0bfff17 	ldw	r2,-4(fp)
  851484:	00c01044 	movi	r3,65
  851488:	10c00005 	stb	r3,0(r2)
        return;
  85148c:	00000d06 	br	8514c4 <OSTaskNameSet+0x1a0>
    }
    (void)OS_StrCopy(ptcb->OSTCBTaskName, pname);    /*      Yes, copy to TCB                          */
  851490:	e0bff717 	ldw	r2,-36(fp)
  851494:	10801304 	addi	r2,r2,76
  851498:	e17ffe17 	ldw	r5,-8(fp)
  85149c:	1009883a 	mov	r4,r2
  8514a0:	084c3800 	call	84c380 <OS_StrCopy>
  8514a4:	e0bff517 	ldw	r2,-44(fp)
  8514a8:	e0bffb15 	stw	r2,-20(fp)
  8514ac:	e0bffb17 	ldw	r2,-20(fp)
  8514b0:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  8514b4:	e0bfff17 	ldw	r2,-4(fp)
  8514b8:	10000005 	stb	zero,0(r2)
  8514bc:	00000106 	br	8514c4 <OSTaskNameSet+0x1a0>



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                        /* Validate 'perr'                                */
        return;
  8514c0:	0001883a 	nop
        return;
    }
    (void)OS_StrCopy(ptcb->OSTCBTaskName, pname);    /*      Yes, copy to TCB                          */
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
}
  8514c4:	e037883a 	mov	sp,fp
  8514c8:	dfc00117 	ldw	ra,4(sp)
  8514cc:	df000017 	ldw	fp,0(sp)
  8514d0:	dec00204 	addi	sp,sp,8
  8514d4:	f800283a 	ret

008514d8 <OSTaskResume>:
*********************************************************************************************************
*/

#if OS_TASK_SUSPEND_EN > 0
INT8U  OSTaskResume (INT8U prio)
{
  8514d8:	defff404 	addi	sp,sp,-48
  8514dc:	dfc00b15 	stw	ra,44(sp)
  8514e0:	df000a15 	stw	fp,40(sp)
  8514e4:	df000a04 	addi	fp,sp,40
  8514e8:	2005883a 	mov	r2,r4
  8514ec:	e0bfff05 	stb	r2,-4(fp)
    OS_TCB    *ptcb;
#if OS_CRITICAL_METHOD == 3                                   /* Storage for CPU status register       */
    OS_CPU_SR  cpu_sr = 0;
  8514f0:	e03ff615 	stw	zero,-40(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (prio >= OS_LOWEST_PRIO) {                             /* Make sure task priority is valid      */
  8514f4:	e0bfff03 	ldbu	r2,-4(fp)
  8514f8:	10800530 	cmpltui	r2,r2,20
  8514fc:	1000021e 	bne	r2,zero,851508 <OSTaskResume+0x30>
        return (OS_ERR_PRIO_INVALID);
  851500:	00800a84 	movi	r2,42
  851504:	00006406 	br	851698 <OSTaskResume+0x1c0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  851508:	0005303a 	rdctl	r2,status
  85150c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  851510:	e0fffe17 	ldw	r3,-8(fp)
  851514:	00bfff84 	movi	r2,-2
  851518:	1884703a 	and	r2,r3,r2
  85151c:	1001703a 	wrctl	status,r2
  
  return context;
  851520:	e0bffe17 	ldw	r2,-8(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  851524:	e0bff615 	stw	r2,-40(fp)
    ptcb = OSTCBPrioTbl[prio];
  851528:	e0ffff03 	ldbu	r3,-4(fp)
  85152c:	008021b4 	movhi	r2,134
  851530:	1098b904 	addi	r2,r2,25316
  851534:	18c7883a 	add	r3,r3,r3
  851538:	18c7883a 	add	r3,r3,r3
  85153c:	10c5883a 	add	r2,r2,r3
  851540:	10800017 	ldw	r2,0(r2)
  851544:	e0bff815 	stw	r2,-32(fp)
    if (ptcb == (OS_TCB *)0) {                                /* Task to suspend must exist            */
  851548:	e0bff817 	ldw	r2,-32(fp)
  85154c:	1000061e 	bne	r2,zero,851568 <OSTaskResume+0x90>
  851550:	e0bff617 	ldw	r2,-40(fp)
  851554:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851558:	e0bff717 	ldw	r2,-36(fp)
  85155c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_RESUME_PRIO);
  851560:	00801184 	movi	r2,70
  851564:	00004c06 	br	851698 <OSTaskResume+0x1c0>
    }
    if (ptcb == OS_TCB_RESERVED) {                            /* See if assigned to Mutex              */
  851568:	e0bff817 	ldw	r2,-32(fp)
  85156c:	10800058 	cmpnei	r2,r2,1
  851570:	1000061e 	bne	r2,zero,85158c <OSTaskResume+0xb4>
  851574:	e0bff617 	ldw	r2,-40(fp)
  851578:	e0bff915 	stw	r2,-28(fp)
  85157c:	e0bff917 	ldw	r2,-28(fp)
  851580:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);
  851584:	008010c4 	movi	r2,67
  851588:	00004306 	br	851698 <OSTaskResume+0x1c0>
    }
    if ((ptcb->OSTCBStat & OS_STAT_SUSPEND) != OS_STAT_RDY) { /* Task must be suspended                */
  85158c:	e0bff817 	ldw	r2,-32(fp)
  851590:	10800c03 	ldbu	r2,48(r2)
  851594:	10803fcc 	andi	r2,r2,255
  851598:	1080020c 	andi	r2,r2,8
  85159c:	10003926 	beq	r2,zero,851684 <OSTaskResume+0x1ac>
        ptcb->OSTCBStat &= ~(INT8U)OS_STAT_SUSPEND;           /* Remove suspension                     */
  8515a0:	e0bff817 	ldw	r2,-32(fp)
  8515a4:	10c00c03 	ldbu	r3,48(r2)
  8515a8:	00bffdc4 	movi	r2,-9
  8515ac:	1884703a 	and	r2,r3,r2
  8515b0:	1007883a 	mov	r3,r2
  8515b4:	e0bff817 	ldw	r2,-32(fp)
  8515b8:	10c00c05 	stb	r3,48(r2)
        if (ptcb->OSTCBStat == OS_STAT_RDY) {                 /* See if task is now ready              */
  8515bc:	e0bff817 	ldw	r2,-32(fp)
  8515c0:	10800c03 	ldbu	r2,48(r2)
  8515c4:	10803fcc 	andi	r2,r2,255
  8515c8:	1000281e 	bne	r2,zero,85166c <OSTaskResume+0x194>
            if (ptcb->OSTCBDly == 0) {
  8515cc:	e0bff817 	ldw	r2,-32(fp)
  8515d0:	10800b8b 	ldhu	r2,46(r2)
  8515d4:	10bfffcc 	andi	r2,r2,65535
  8515d8:	10001f1e 	bne	r2,zero,851658 <OSTaskResume+0x180>
                OSRdyGrp               |= ptcb->OSTCBBitY;    /* Yes, Make task ready to run           */
  8515dc:	e0bff817 	ldw	r2,-32(fp)
  8515e0:	10c00d83 	ldbu	r3,54(r2)
  8515e4:	d0a0a103 	ldbu	r2,-32124(gp)
  8515e8:	1884b03a 	or	r2,r3,r2
  8515ec:	d0a0a105 	stb	r2,-32124(gp)
                OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
  8515f0:	e0bff817 	ldw	r2,-32(fp)
  8515f4:	10800d03 	ldbu	r2,52(r2)
  8515f8:	10c03fcc 	andi	r3,r2,255
  8515fc:	e0bff817 	ldw	r2,-32(fp)
  851600:	10800d03 	ldbu	r2,52(r2)
  851604:	11003fcc 	andi	r4,r2,255
  851608:	d0a0a144 	addi	r2,gp,-32123
  85160c:	2085883a 	add	r2,r4,r2
  851610:	11000003 	ldbu	r4,0(r2)
  851614:	e0bff817 	ldw	r2,-32(fp)
  851618:	10800d43 	ldbu	r2,53(r2)
  85161c:	2084b03a 	or	r2,r4,r2
  851620:	1009883a 	mov	r4,r2
  851624:	d0a0a144 	addi	r2,gp,-32123
  851628:	1885883a 	add	r2,r3,r2
  85162c:	11000005 	stb	r4,0(r2)
  851630:	e0bff617 	ldw	r2,-40(fp)
  851634:	e0bffa15 	stw	r2,-24(fp)
  851638:	e0bffa17 	ldw	r2,-24(fp)
  85163c:	1001703a 	wrctl	status,r2
                OS_EXIT_CRITICAL();
                if (OSRunning == OS_TRUE) {
  851640:	d0a09543 	ldbu	r2,-32171(gp)
  851644:	10803fcc 	andi	r2,r2,255
  851648:	10800058 	cmpnei	r2,r2,1
  85164c:	10000b1e 	bne	r2,zero,85167c <OSTaskResume+0x1a4>
                    OS_Sched();                               /* Find new highest priority task        */
  851650:	084c23c0 	call	84c23c <OS_Sched>
  851654:	00000906 	br	85167c <OSTaskResume+0x1a4>
  851658:	e0bff617 	ldw	r2,-40(fp)
  85165c:	e0bffb15 	stw	r2,-20(fp)
  851660:	e0bffb17 	ldw	r2,-20(fp)
  851664:	1001703a 	wrctl	status,r2
  851668:	00000406 	br	85167c <OSTaskResume+0x1a4>
  85166c:	e0bff617 	ldw	r2,-40(fp)
  851670:	e0bffc15 	stw	r2,-16(fp)
  851674:	e0bffc17 	ldw	r2,-16(fp)
  851678:	1001703a 	wrctl	status,r2
                OS_EXIT_CRITICAL();
            }
        } else {                                              /* Must be pending on event              */
            OS_EXIT_CRITICAL();
        }
        return (OS_ERR_NONE);
  85167c:	0005883a 	mov	r2,zero
  851680:	00000506 	br	851698 <OSTaskResume+0x1c0>
  851684:	e0bff617 	ldw	r2,-40(fp)
  851688:	e0bffd15 	stw	r2,-12(fp)
  85168c:	e0bffd17 	ldw	r2,-12(fp)
  851690:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    return (OS_ERR_TASK_NOT_SUSPENDED);
  851694:	00801104 	movi	r2,68
}
  851698:	e037883a 	mov	sp,fp
  85169c:	dfc00117 	ldw	ra,4(sp)
  8516a0:	df000017 	ldw	fp,0(sp)
  8516a4:	dec00204 	addi	sp,sp,8
  8516a8:	f800283a 	ret

008516ac <OSTaskStkChk>:
*              OS_ERR_PDATA_NULL      if 'p_stk_data' is a NULL pointer
*********************************************************************************************************
*/
#if (OS_TASK_STAT_STK_CHK_EN > 0) && (OS_TASK_CREATE_EXT_EN > 0)
INT8U  OSTaskStkChk (INT8U prio, OS_STK_DATA *p_stk_data)
{
  8516ac:	defff304 	addi	sp,sp,-52
  8516b0:	df000c15 	stw	fp,48(sp)
  8516b4:	df000c04 	addi	fp,sp,48
  8516b8:	2005883a 	mov	r2,r4
  8516bc:	e17fff15 	stw	r5,-4(fp)
  8516c0:	e0bffe05 	stb	r2,-8(fp)
    OS_TCB    *ptcb;
    OS_STK    *pchk;
    INT32U     nfree;
    INT32U     size;
#if OS_CRITICAL_METHOD == 3                            /* Allocate storage for CPU status register     */
    OS_CPU_SR  cpu_sr = 0;
  8516c4:	e03ff615 	stw	zero,-40(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (prio > OS_LOWEST_PRIO) {                       /* Make sure task priority is valid             */
  8516c8:	e0bffe03 	ldbu	r2,-8(fp)
  8516cc:	10800570 	cmpltui	r2,r2,21
  8516d0:	1000051e 	bne	r2,zero,8516e8 <OSTaskStkChk+0x3c>
        if (prio != OS_PRIO_SELF) {
  8516d4:	e0bffe03 	ldbu	r2,-8(fp)
  8516d8:	10803fe0 	cmpeqi	r2,r2,255
  8516dc:	1000021e 	bne	r2,zero,8516e8 <OSTaskStkChk+0x3c>
            return (OS_ERR_PRIO_INVALID);
  8516e0:	00800a84 	movi	r2,42
  8516e4:	00005d06 	br	85185c <OSTaskStkChk+0x1b0>
        }
    }
    if (p_stk_data == (OS_STK_DATA *)0) {              /* Validate 'p_stk_data'                        */
  8516e8:	e0bfff17 	ldw	r2,-4(fp)
  8516ec:	1000021e 	bne	r2,zero,8516f8 <OSTaskStkChk+0x4c>
        return (OS_ERR_PDATA_NULL);
  8516f0:	00800244 	movi	r2,9
  8516f4:	00005906 	br	85185c <OSTaskStkChk+0x1b0>
    }
#endif
    p_stk_data->OSFree = 0;                            /* Assume failure, set to 0 size                */
  8516f8:	e0bfff17 	ldw	r2,-4(fp)
  8516fc:	10000015 	stw	zero,0(r2)
    p_stk_data->OSUsed = 0;
  851700:	e0bfff17 	ldw	r2,-4(fp)
  851704:	10000115 	stw	zero,4(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  851708:	0005303a 	rdctl	r2,status
  85170c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  851710:	e0fffd17 	ldw	r3,-12(fp)
  851714:	00bfff84 	movi	r2,-2
  851718:	1884703a 	and	r2,r3,r2
  85171c:	1001703a 	wrctl	status,r2
  
  return context;
  851720:	e0bffd17 	ldw	r2,-12(fp)
    OS_ENTER_CRITICAL();
  851724:	e0bff615 	stw	r2,-40(fp)
    if (prio == OS_PRIO_SELF) {                        /* See if check for SELF                        */
  851728:	e0bffe03 	ldbu	r2,-8(fp)
  85172c:	10803fd8 	cmpnei	r2,r2,255
  851730:	1000031e 	bne	r2,zero,851740 <OSTaskStkChk+0x94>
        prio = OSTCBCur->OSTCBPrio;
  851734:	d0a0a417 	ldw	r2,-32112(gp)
  851738:	10800c83 	ldbu	r2,50(r2)
  85173c:	e0bffe05 	stb	r2,-8(fp)
    }
    ptcb = OSTCBPrioTbl[prio];
  851740:	e0fffe03 	ldbu	r3,-8(fp)
  851744:	008021b4 	movhi	r2,134
  851748:	1098b904 	addi	r2,r2,25316
  85174c:	18c7883a 	add	r3,r3,r3
  851750:	18c7883a 	add	r3,r3,r3
  851754:	10c5883a 	add	r2,r2,r3
  851758:	10800017 	ldw	r2,0(r2)
  85175c:	e0bff815 	stw	r2,-32(fp)
    if (ptcb == (OS_TCB *)0) {                         /* Make sure task exist                         */
  851760:	e0bff817 	ldw	r2,-32(fp)
  851764:	1000061e 	bne	r2,zero,851780 <OSTaskStkChk+0xd4>
  851768:	e0bff617 	ldw	r2,-40(fp)
  85176c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851770:	e0bff717 	ldw	r2,-36(fp)
  851774:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);
  851778:	008010c4 	movi	r2,67
  85177c:	00003706 	br	85185c <OSTaskStkChk+0x1b0>
    }
    if (ptcb == OS_TCB_RESERVED) {
  851780:	e0bff817 	ldw	r2,-32(fp)
  851784:	10800058 	cmpnei	r2,r2,1
  851788:	1000061e 	bne	r2,zero,8517a4 <OSTaskStkChk+0xf8>
  85178c:	e0bff617 	ldw	r2,-40(fp)
  851790:	e0bff915 	stw	r2,-28(fp)
  851794:	e0bff917 	ldw	r2,-28(fp)
  851798:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);
  85179c:	008010c4 	movi	r2,67
  8517a0:	00002e06 	br	85185c <OSTaskStkChk+0x1b0>
    }
    if ((ptcb->OSTCBOpt & OS_TASK_OPT_STK_CHK) == 0) { /* Make sure stack checking option is set       */
  8517a4:	e0bff817 	ldw	r2,-32(fp)
  8517a8:	1080040b 	ldhu	r2,16(r2)
  8517ac:	10bfffcc 	andi	r2,r2,65535
  8517b0:	1080004c 	andi	r2,r2,1
  8517b4:	1000061e 	bne	r2,zero,8517d0 <OSTaskStkChk+0x124>
  8517b8:	e0bff617 	ldw	r2,-40(fp)
  8517bc:	e0bffa15 	stw	r2,-24(fp)
  8517c0:	e0bffa17 	ldw	r2,-24(fp)
  8517c4:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_OPT);
  8517c8:	00801144 	movi	r2,69
  8517cc:	00002306 	br	85185c <OSTaskStkChk+0x1b0>
    }
    nfree = 0;
  8517d0:	e03ff515 	stw	zero,-44(fp)
    size  = ptcb->OSTCBStkSize;
  8517d4:	e0bff817 	ldw	r2,-32(fp)
  8517d8:	10800317 	ldw	r2,12(r2)
  8517dc:	e0bffc15 	stw	r2,-16(fp)
    pchk  = ptcb->OSTCBStkBottom;
  8517e0:	e0bff817 	ldw	r2,-32(fp)
  8517e4:	10800217 	ldw	r2,8(r2)
  8517e8:	e0bff415 	stw	r2,-48(fp)
  8517ec:	e0bff617 	ldw	r2,-40(fp)
  8517f0:	e0bffb15 	stw	r2,-20(fp)
  8517f4:	e0bffb17 	ldw	r2,-20(fp)
  8517f8:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
#if OS_STK_GROWTH == 1
    while (*pchk++ == (OS_STK)0) {                    /* Compute the number of zero entries on the stk */
  8517fc:	00000306 	br	85180c <OSTaskStkChk+0x160>
        nfree++;
  851800:	e0bff517 	ldw	r2,-44(fp)
  851804:	10800044 	addi	r2,r2,1
  851808:	e0bff515 	stw	r2,-44(fp)
    nfree = 0;
    size  = ptcb->OSTCBStkSize;
    pchk  = ptcb->OSTCBStkBottom;
    OS_EXIT_CRITICAL();
#if OS_STK_GROWTH == 1
    while (*pchk++ == (OS_STK)0) {                    /* Compute the number of zero entries on the stk */
  85180c:	e0bff417 	ldw	r2,-48(fp)
  851810:	10c00104 	addi	r3,r2,4
  851814:	e0fff415 	stw	r3,-48(fp)
  851818:	10800017 	ldw	r2,0(r2)
  85181c:	103ff826 	beq	r2,zero,851800 <__alt_mem_epcs_flash_controller_0+0xff848800>
#else
    while (*pchk-- == (OS_STK)0) {
        nfree++;
    }
#endif
    p_stk_data->OSFree = nfree * sizeof(OS_STK);          /* Compute number of free bytes on the stack */
  851820:	e0bff517 	ldw	r2,-44(fp)
  851824:	1085883a 	add	r2,r2,r2
  851828:	1085883a 	add	r2,r2,r2
  85182c:	1007883a 	mov	r3,r2
  851830:	e0bfff17 	ldw	r2,-4(fp)
  851834:	10c00015 	stw	r3,0(r2)
    p_stk_data->OSUsed = (size - nfree) * sizeof(OS_STK); /* Compute number of bytes used on the stack */
  851838:	e0fffc17 	ldw	r3,-16(fp)
  85183c:	e0bff517 	ldw	r2,-44(fp)
  851840:	1885c83a 	sub	r2,r3,r2
  851844:	1085883a 	add	r2,r2,r2
  851848:	1085883a 	add	r2,r2,r2
  85184c:	1007883a 	mov	r3,r2
  851850:	e0bfff17 	ldw	r2,-4(fp)
  851854:	10c00115 	stw	r3,4(r2)
    return (OS_ERR_NONE);
  851858:	0005883a 	mov	r2,zero
}
  85185c:	e037883a 	mov	sp,fp
  851860:	df000017 	ldw	fp,0(sp)
  851864:	dec00104 	addi	sp,sp,4
  851868:	f800283a 	ret

0085186c <OSTaskSuspend>:
*********************************************************************************************************
*/

#if OS_TASK_SUSPEND_EN > 0
INT8U  OSTaskSuspend (INT8U prio)
{
  85186c:	defff504 	addi	sp,sp,-44
  851870:	dfc00a15 	stw	ra,40(sp)
  851874:	df000915 	stw	fp,36(sp)
  851878:	df000904 	addi	fp,sp,36
  85187c:	2005883a 	mov	r2,r4
  851880:	e0bfff05 	stb	r2,-4(fp)
    BOOLEAN    self;
    OS_TCB    *ptcb;
    INT8U      y;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  851884:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (prio == OS_TASK_IDLE_PRIO) {                            /* Not allowed to suspend idle task    */
  851888:	e0bfff03 	ldbu	r2,-4(fp)
  85188c:	10800518 	cmpnei	r2,r2,20
  851890:	1000021e 	bne	r2,zero,85189c <OSTaskSuspend+0x30>
        return (OS_ERR_TASK_SUSPEND_IDLE);
  851894:	008011c4 	movi	r2,71
  851898:	00006806 	br	851a3c <OSTaskSuspend+0x1d0>
    }
    if (prio >= OS_LOWEST_PRIO) {                               /* Task priority valid ?               */
  85189c:	e0bfff03 	ldbu	r2,-4(fp)
  8518a0:	10800530 	cmpltui	r2,r2,20
  8518a4:	1000051e 	bne	r2,zero,8518bc <OSTaskSuspend+0x50>
        if (prio != OS_PRIO_SELF) {
  8518a8:	e0bfff03 	ldbu	r2,-4(fp)
  8518ac:	10803fe0 	cmpeqi	r2,r2,255
  8518b0:	1000021e 	bne	r2,zero,8518bc <OSTaskSuspend+0x50>
            return (OS_ERR_PRIO_INVALID);
  8518b4:	00800a84 	movi	r2,42
  8518b8:	00006006 	br	851a3c <OSTaskSuspend+0x1d0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8518bc:	0005303a 	rdctl	r2,status
  8518c0:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8518c4:	e0fffe17 	ldw	r3,-8(fp)
  8518c8:	00bfff84 	movi	r2,-2
  8518cc:	1884703a 	and	r2,r3,r2
  8518d0:	1001703a 	wrctl	status,r2
  
  return context;
  8518d4:	e0bffe17 	ldw	r2,-8(fp)
        }
    }
#endif
    OS_ENTER_CRITICAL();
  8518d8:	e0bff815 	stw	r2,-32(fp)
    if (prio == OS_PRIO_SELF) {                                 /* See if suspend SELF                 */
  8518dc:	e0bfff03 	ldbu	r2,-4(fp)
  8518e0:	10803fd8 	cmpnei	r2,r2,255
  8518e4:	1000061e 	bne	r2,zero,851900 <OSTaskSuspend+0x94>
        prio = OSTCBCur->OSTCBPrio;
  8518e8:	d0a0a417 	ldw	r2,-32112(gp)
  8518ec:	10800c83 	ldbu	r2,50(r2)
  8518f0:	e0bfff05 	stb	r2,-4(fp)
        self = OS_TRUE;
  8518f4:	00800044 	movi	r2,1
  8518f8:	e0bff705 	stb	r2,-36(fp)
  8518fc:	00000906 	br	851924 <OSTaskSuspend+0xb8>
    } else if (prio == OSTCBCur->OSTCBPrio) {                   /* See if suspending self              */
  851900:	d0a0a417 	ldw	r2,-32112(gp)
  851904:	10800c83 	ldbu	r2,50(r2)
  851908:	10c03fcc 	andi	r3,r2,255
  85190c:	e0bfff03 	ldbu	r2,-4(fp)
  851910:	1880031e 	bne	r3,r2,851920 <OSTaskSuspend+0xb4>
        self = OS_TRUE;
  851914:	00800044 	movi	r2,1
  851918:	e0bff705 	stb	r2,-36(fp)
  85191c:	00000106 	br	851924 <OSTaskSuspend+0xb8>
    } else {
        self = OS_FALSE;                                        /* No suspending another task          */
  851920:	e03ff705 	stb	zero,-36(fp)
    }
    ptcb = OSTCBPrioTbl[prio];
  851924:	e0ffff03 	ldbu	r3,-4(fp)
  851928:	008021b4 	movhi	r2,134
  85192c:	1098b904 	addi	r2,r2,25316
  851930:	18c7883a 	add	r3,r3,r3
  851934:	18c7883a 	add	r3,r3,r3
  851938:	10c5883a 	add	r2,r2,r3
  85193c:	10800017 	ldw	r2,0(r2)
  851940:	e0bffa15 	stw	r2,-24(fp)
    if (ptcb == (OS_TCB *)0) {                                  /* Task to suspend must exist          */
  851944:	e0bffa17 	ldw	r2,-24(fp)
  851948:	1000061e 	bne	r2,zero,851964 <OSTaskSuspend+0xf8>
  85194c:	e0bff817 	ldw	r2,-32(fp)
  851950:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851954:	e0bff917 	ldw	r2,-28(fp)
  851958:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_SUSPEND_PRIO);
  85195c:	00801204 	movi	r2,72
  851960:	00003606 	br	851a3c <OSTaskSuspend+0x1d0>
    }
    if (ptcb == OS_TCB_RESERVED) {                              /* See if assigned to Mutex            */
  851964:	e0bffa17 	ldw	r2,-24(fp)
  851968:	10800058 	cmpnei	r2,r2,1
  85196c:	1000061e 	bne	r2,zero,851988 <OSTaskSuspend+0x11c>
  851970:	e0bff817 	ldw	r2,-32(fp)
  851974:	e0bffb15 	stw	r2,-20(fp)
  851978:	e0bffb17 	ldw	r2,-20(fp)
  85197c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);
  851980:	008010c4 	movi	r2,67
  851984:	00002d06 	br	851a3c <OSTaskSuspend+0x1d0>
    }
    y            = ptcb->OSTCBY;
  851988:	e0bffa17 	ldw	r2,-24(fp)
  85198c:	10800d03 	ldbu	r2,52(r2)
  851990:	e0bffd05 	stb	r2,-12(fp)
    OSRdyTbl[y] &= ~ptcb->OSTCBBitX;                            /* Make task not ready                 */
  851994:	e0fffd03 	ldbu	r3,-12(fp)
  851998:	e13ffd03 	ldbu	r4,-12(fp)
  85199c:	d0a0a144 	addi	r2,gp,-32123
  8519a0:	2085883a 	add	r2,r4,r2
  8519a4:	10800003 	ldbu	r2,0(r2)
  8519a8:	1009883a 	mov	r4,r2
  8519ac:	e0bffa17 	ldw	r2,-24(fp)
  8519b0:	10800d43 	ldbu	r2,53(r2)
  8519b4:	0084303a 	nor	r2,zero,r2
  8519b8:	2084703a 	and	r2,r4,r2
  8519bc:	1009883a 	mov	r4,r2
  8519c0:	d0a0a144 	addi	r2,gp,-32123
  8519c4:	1885883a 	add	r2,r3,r2
  8519c8:	11000005 	stb	r4,0(r2)
    if (OSRdyTbl[y] == 0) {
  8519cc:	e0fffd03 	ldbu	r3,-12(fp)
  8519d0:	d0a0a144 	addi	r2,gp,-32123
  8519d4:	1885883a 	add	r2,r3,r2
  8519d8:	10800003 	ldbu	r2,0(r2)
  8519dc:	10803fcc 	andi	r2,r2,255
  8519e0:	1000071e 	bne	r2,zero,851a00 <OSTaskSuspend+0x194>
        OSRdyGrp &= ~ptcb->OSTCBBitY;
  8519e4:	e0bffa17 	ldw	r2,-24(fp)
  8519e8:	10800d83 	ldbu	r2,54(r2)
  8519ec:	0084303a 	nor	r2,zero,r2
  8519f0:	1007883a 	mov	r3,r2
  8519f4:	d0a0a103 	ldbu	r2,-32124(gp)
  8519f8:	1884703a 	and	r2,r3,r2
  8519fc:	d0a0a105 	stb	r2,-32124(gp)
    }
    ptcb->OSTCBStat |= OS_STAT_SUSPEND;                         /* Status of task is 'SUSPENDED'       */
  851a00:	e0bffa17 	ldw	r2,-24(fp)
  851a04:	10800c03 	ldbu	r2,48(r2)
  851a08:	10800214 	ori	r2,r2,8
  851a0c:	1007883a 	mov	r3,r2
  851a10:	e0bffa17 	ldw	r2,-24(fp)
  851a14:	10c00c05 	stb	r3,48(r2)
  851a18:	e0bff817 	ldw	r2,-32(fp)
  851a1c:	e0bffc15 	stw	r2,-16(fp)
  851a20:	e0bffc17 	ldw	r2,-16(fp)
  851a24:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    if (self == OS_TRUE) {                                      /* Context switch only if SELF         */
  851a28:	e0bff703 	ldbu	r2,-36(fp)
  851a2c:	10800058 	cmpnei	r2,r2,1
  851a30:	1000011e 	bne	r2,zero,851a38 <OSTaskSuspend+0x1cc>
        OS_Sched();                                             /* Find new highest priority task      */
  851a34:	084c23c0 	call	84c23c <OS_Sched>
    }
    return (OS_ERR_NONE);
  851a38:	0005883a 	mov	r2,zero
}
  851a3c:	e037883a 	mov	sp,fp
  851a40:	dfc00117 	ldw	ra,4(sp)
  851a44:	df000017 	ldw	fp,0(sp)
  851a48:	dec00204 	addi	sp,sp,8
  851a4c:	f800283a 	ret

00851a50 <OSTaskQuery>:
*********************************************************************************************************
*/

#if OS_TASK_QUERY_EN > 0
INT8U  OSTaskQuery (INT8U prio, OS_TCB *p_task_data)
{
  851a50:	defff604 	addi	sp,sp,-40
  851a54:	dfc00915 	stw	ra,36(sp)
  851a58:	df000815 	stw	fp,32(sp)
  851a5c:	df000804 	addi	fp,sp,32
  851a60:	2005883a 	mov	r2,r4
  851a64:	e17fff15 	stw	r5,-4(fp)
  851a68:	e0bffe05 	stb	r2,-8(fp)
    OS_TCB    *ptcb;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  851a6c:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (prio > OS_LOWEST_PRIO) {                 /* Task priority valid ?                              */
  851a70:	e0bffe03 	ldbu	r2,-8(fp)
  851a74:	10800570 	cmpltui	r2,r2,21
  851a78:	1000051e 	bne	r2,zero,851a90 <OSTaskQuery+0x40>
        if (prio != OS_PRIO_SELF) {
  851a7c:	e0bffe03 	ldbu	r2,-8(fp)
  851a80:	10803fe0 	cmpeqi	r2,r2,255
  851a84:	1000021e 	bne	r2,zero,851a90 <OSTaskQuery+0x40>
            return (OS_ERR_PRIO_INVALID);
  851a88:	00800a84 	movi	r2,42
  851a8c:	00003406 	br	851b60 <OSTaskQuery+0x110>
        }
    }
    if (p_task_data == (OS_TCB *)0) {            /* Validate 'p_task_data'                             */
  851a90:	e0bfff17 	ldw	r2,-4(fp)
  851a94:	1000021e 	bne	r2,zero,851aa0 <OSTaskQuery+0x50>
        return (OS_ERR_PDATA_NULL);
  851a98:	00800244 	movi	r2,9
  851a9c:	00003006 	br	851b60 <OSTaskQuery+0x110>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  851aa0:	0005303a 	rdctl	r2,status
  851aa4:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  851aa8:	e0fffd17 	ldw	r3,-12(fp)
  851aac:	00bfff84 	movi	r2,-2
  851ab0:	1884703a 	and	r2,r3,r2
  851ab4:	1001703a 	wrctl	status,r2
  
  return context;
  851ab8:	e0bffd17 	ldw	r2,-12(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  851abc:	e0bff815 	stw	r2,-32(fp)
    if (prio == OS_PRIO_SELF) {                  /* See if suspend SELF                                */
  851ac0:	e0bffe03 	ldbu	r2,-8(fp)
  851ac4:	10803fd8 	cmpnei	r2,r2,255
  851ac8:	1000031e 	bne	r2,zero,851ad8 <OSTaskQuery+0x88>
        prio = OSTCBCur->OSTCBPrio;
  851acc:	d0a0a417 	ldw	r2,-32112(gp)
  851ad0:	10800c83 	ldbu	r2,50(r2)
  851ad4:	e0bffe05 	stb	r2,-8(fp)
    }
    ptcb = OSTCBPrioTbl[prio];
  851ad8:	e0fffe03 	ldbu	r3,-8(fp)
  851adc:	008021b4 	movhi	r2,134
  851ae0:	1098b904 	addi	r2,r2,25316
  851ae4:	18c7883a 	add	r3,r3,r3
  851ae8:	18c7883a 	add	r3,r3,r3
  851aec:	10c5883a 	add	r2,r2,r3
  851af0:	10800017 	ldw	r2,0(r2)
  851af4:	e0bffa15 	stw	r2,-24(fp)
    if (ptcb == (OS_TCB *)0) {                   /* Task to query must exist                           */
  851af8:	e0bffa17 	ldw	r2,-24(fp)
  851afc:	1000061e 	bne	r2,zero,851b18 <OSTaskQuery+0xc8>
  851b00:	e0bff817 	ldw	r2,-32(fp)
  851b04:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851b08:	e0bff917 	ldw	r2,-28(fp)
  851b0c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_PRIO);
  851b10:	00800a44 	movi	r2,41
  851b14:	00001206 	br	851b60 <OSTaskQuery+0x110>
    }
    if (ptcb == OS_TCB_RESERVED) {               /* Task to query must not be assigned to a Mutex      */
  851b18:	e0bffa17 	ldw	r2,-24(fp)
  851b1c:	10800058 	cmpnei	r2,r2,1
  851b20:	1000061e 	bne	r2,zero,851b3c <OSTaskQuery+0xec>
  851b24:	e0bff817 	ldw	r2,-32(fp)
  851b28:	e0bffb15 	stw	r2,-20(fp)
  851b2c:	e0bffb17 	ldw	r2,-20(fp)
  851b30:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);
  851b34:	008010c4 	movi	r2,67
  851b38:	00000906 	br	851b60 <OSTaskQuery+0x110>
    }
                                                 /* Copy TCB into user storage area                    */
    OS_MemCopy((INT8U *)p_task_data, (INT8U *)ptcb, sizeof(OS_TCB));
  851b3c:	01801b04 	movi	r6,108
  851b40:	e17ffa17 	ldw	r5,-24(fp)
  851b44:	e13fff17 	ldw	r4,-4(fp)
  851b48:	084c1d40 	call	84c1d4 <OS_MemCopy>
  851b4c:	e0bff817 	ldw	r2,-32(fp)
  851b50:	e0bffc15 	stw	r2,-16(fp)
  851b54:	e0bffc17 	ldw	r2,-16(fp)
  851b58:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  851b5c:	0005883a 	mov	r2,zero
}
  851b60:	e037883a 	mov	sp,fp
  851b64:	dfc00117 	ldw	ra,4(sp)
  851b68:	df000017 	ldw	fp,0(sp)
  851b6c:	dec00204 	addi	sp,sp,8
  851b70:	f800283a 	ret

00851b74 <OS_TaskStkClr>:
* Returns    : none
*********************************************************************************************************
*/
#if (OS_TASK_STAT_STK_CHK_EN > 0) && (OS_TASK_CREATE_EXT_EN > 0)
void  OS_TaskStkClr (OS_STK *pbos, INT32U size, INT16U opt)
{
  851b74:	defffc04 	addi	sp,sp,-16
  851b78:	df000315 	stw	fp,12(sp)
  851b7c:	df000304 	addi	fp,sp,12
  851b80:	e13ffd15 	stw	r4,-12(fp)
  851b84:	e17ffe15 	stw	r5,-8(fp)
  851b88:	3005883a 	mov	r2,r6
  851b8c:	e0bfff0d 	sth	r2,-4(fp)
    if ((opt & OS_TASK_OPT_STK_CHK) != 0x0000) {       /* See if stack checking has been enabled       */
  851b90:	e0bfff0b 	ldhu	r2,-4(fp)
  851b94:	1080004c 	andi	r2,r2,1
  851b98:	10000d26 	beq	r2,zero,851bd0 <OS_TaskStkClr+0x5c>
        if ((opt & OS_TASK_OPT_STK_CLR) != 0x0000) {   /* See if stack needs to be cleared             */
  851b9c:	e0bfff0b 	ldhu	r2,-4(fp)
  851ba0:	1080008c 	andi	r2,r2,2
  851ba4:	10000a26 	beq	r2,zero,851bd0 <OS_TaskStkClr+0x5c>
#if OS_STK_GROWTH == 1
            while (size > 0) {                         /* Stack grows from HIGH to LOW memory          */
  851ba8:	00000706 	br	851bc8 <OS_TaskStkClr+0x54>
                size--;
  851bac:	e0bffe17 	ldw	r2,-8(fp)
  851bb0:	10bfffc4 	addi	r2,r2,-1
  851bb4:	e0bffe15 	stw	r2,-8(fp)
                *pbos++ = (OS_STK)0;                   /* Clear from bottom of stack and up!           */
  851bb8:	e0bffd17 	ldw	r2,-12(fp)
  851bbc:	10c00104 	addi	r3,r2,4
  851bc0:	e0fffd15 	stw	r3,-12(fp)
  851bc4:	10000015 	stw	zero,0(r2)
void  OS_TaskStkClr (OS_STK *pbos, INT32U size, INT16U opt)
{
    if ((opt & OS_TASK_OPT_STK_CHK) != 0x0000) {       /* See if stack checking has been enabled       */
        if ((opt & OS_TASK_OPT_STK_CLR) != 0x0000) {   /* See if stack needs to be cleared             */
#if OS_STK_GROWTH == 1
            while (size > 0) {                         /* Stack grows from HIGH to LOW memory          */
  851bc8:	e0bffe17 	ldw	r2,-8(fp)
  851bcc:	103ff71e 	bne	r2,zero,851bac <__alt_mem_epcs_flash_controller_0+0xff848bac>
                *pbos-- = (OS_STK)0;                   /* Clear from bottom of stack and down          */
            }
#endif
        }
    }
}
  851bd0:	0001883a 	nop
  851bd4:	e037883a 	mov	sp,fp
  851bd8:	df000017 	ldw	fp,0(sp)
  851bdc:	dec00104 	addi	sp,sp,4
  851be0:	f800283a 	ret

00851be4 <OSTimeDly>:
* Returns    : none
*********************************************************************************************************
*/

void  OSTimeDly (INT16U ticks)
{
  851be4:	defff904 	addi	sp,sp,-28
  851be8:	dfc00615 	stw	ra,24(sp)
  851bec:	df000515 	stw	fp,20(sp)
  851bf0:	df000504 	addi	fp,sp,20
  851bf4:	2005883a 	mov	r2,r4
  851bf8:	e0bfff0d 	sth	r2,-4(fp)
    INT8U      y;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  851bfc:	e03ffb15 	stw	zero,-20(fp)
#endif



    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  851c00:	d0a0a303 	ldbu	r2,-32116(gp)
  851c04:	10803fcc 	andi	r2,r2,255
  851c08:	1000311e 	bne	r2,zero,851cd0 <OSTimeDly+0xec>
        return;
    }
    if (ticks > 0) {                             /* 0 means no delay!                                  */
  851c0c:	e0bfff0b 	ldhu	r2,-4(fp)
  851c10:	10003026 	beq	r2,zero,851cd4 <OSTimeDly+0xf0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  851c14:	0005303a 	rdctl	r2,status
  851c18:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  851c1c:	e0fffe17 	ldw	r3,-8(fp)
  851c20:	00bfff84 	movi	r2,-2
  851c24:	1884703a 	and	r2,r3,r2
  851c28:	1001703a 	wrctl	status,r2
  
  return context;
  851c2c:	e0bffe17 	ldw	r2,-8(fp)
        OS_ENTER_CRITICAL();
  851c30:	e0bffb15 	stw	r2,-20(fp)
        y            =  OSTCBCur->OSTCBY;        /* Delay current task                                 */
  851c34:	d0a0a417 	ldw	r2,-32112(gp)
  851c38:	10800d03 	ldbu	r2,52(r2)
  851c3c:	e0bffd05 	stb	r2,-12(fp)
        OSRdyTbl[y] &= ~OSTCBCur->OSTCBBitX;
  851c40:	e0fffd03 	ldbu	r3,-12(fp)
  851c44:	e13ffd03 	ldbu	r4,-12(fp)
  851c48:	d0a0a144 	addi	r2,gp,-32123
  851c4c:	2085883a 	add	r2,r4,r2
  851c50:	10800003 	ldbu	r2,0(r2)
  851c54:	1009883a 	mov	r4,r2
  851c58:	d0a0a417 	ldw	r2,-32112(gp)
  851c5c:	10800d43 	ldbu	r2,53(r2)
  851c60:	0084303a 	nor	r2,zero,r2
  851c64:	2084703a 	and	r2,r4,r2
  851c68:	1009883a 	mov	r4,r2
  851c6c:	d0a0a144 	addi	r2,gp,-32123
  851c70:	1885883a 	add	r2,r3,r2
  851c74:	11000005 	stb	r4,0(r2)
        if (OSRdyTbl[y] == 0) {
  851c78:	e0fffd03 	ldbu	r3,-12(fp)
  851c7c:	d0a0a144 	addi	r2,gp,-32123
  851c80:	1885883a 	add	r2,r3,r2
  851c84:	10800003 	ldbu	r2,0(r2)
  851c88:	10803fcc 	andi	r2,r2,255
  851c8c:	1000071e 	bne	r2,zero,851cac <OSTimeDly+0xc8>
            OSRdyGrp &= ~OSTCBCur->OSTCBBitY;
  851c90:	d0a0a417 	ldw	r2,-32112(gp)
  851c94:	10800d83 	ldbu	r2,54(r2)
  851c98:	0084303a 	nor	r2,zero,r2
  851c9c:	1007883a 	mov	r3,r2
  851ca0:	d0a0a103 	ldbu	r2,-32124(gp)
  851ca4:	1884703a 	and	r2,r3,r2
  851ca8:	d0a0a105 	stb	r2,-32124(gp)
        }
        OSTCBCur->OSTCBDly = ticks;              /* Load ticks in TCB                                  */
  851cac:	d0a0a417 	ldw	r2,-32112(gp)
  851cb0:	e0ffff0b 	ldhu	r3,-4(fp)
  851cb4:	10c00b8d 	sth	r3,46(r2)
  851cb8:	e0bffb17 	ldw	r2,-20(fp)
  851cbc:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851cc0:	e0bffc17 	ldw	r2,-16(fp)
  851cc4:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        OS_Sched();                              /* Find next task to run!                             */
  851cc8:	084c23c0 	call	84c23c <OS_Sched>
  851ccc:	00000106 	br	851cd4 <OSTimeDly+0xf0>
#endif



    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
        return;
  851cd0:	0001883a 	nop
        }
        OSTCBCur->OSTCBDly = ticks;              /* Load ticks in TCB                                  */
        OS_EXIT_CRITICAL();
        OS_Sched();                              /* Find next task to run!                             */
    }
}
  851cd4:	e037883a 	mov	sp,fp
  851cd8:	dfc00117 	ldw	ra,4(sp)
  851cdc:	df000017 	ldw	fp,0(sp)
  851ce0:	dec00204 	addi	sp,sp,8
  851ce4:	f800283a 	ret

00851ce8 <OSTimeDlyHMSM>:
*********************************************************************************************************
*/

#if OS_TIME_DLY_HMSM_EN > 0
INT8U  OSTimeDlyHMSM (INT8U hours, INT8U minutes, INT8U seconds, INT16U ms)
{
  851ce8:	defff704 	addi	sp,sp,-36
  851cec:	dfc00815 	stw	ra,32(sp)
  851cf0:	df000715 	stw	fp,28(sp)
  851cf4:	dc000615 	stw	r16,24(sp)
  851cf8:	df000704 	addi	fp,sp,28
  851cfc:	2011883a 	mov	r8,r4
  851d00:	2809883a 	mov	r4,r5
  851d04:	3007883a 	mov	r3,r6
  851d08:	3805883a 	mov	r2,r7
  851d0c:	e23ffb05 	stb	r8,-20(fp)
  851d10:	e13ffc05 	stb	r4,-16(fp)
  851d14:	e0fffd05 	stb	r3,-12(fp)
  851d18:	e0bffe0d 	sth	r2,-8(fp)
    INT32U ticks;
    INT16U loops;


    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  851d1c:	d0a0a303 	ldbu	r2,-32116(gp)
  851d20:	10803fcc 	andi	r2,r2,255
  851d24:	10000226 	beq	r2,zero,851d30 <OSTimeDlyHMSM+0x48>
        return (OS_ERR_TIME_DLY_ISR);
  851d28:	00801544 	movi	r2,85
  851d2c:	00004706 	br	851e4c <OSTimeDlyHMSM+0x164>
    }
#if OS_ARG_CHK_EN > 0
    if (hours == 0) {
  851d30:	e0bffb03 	ldbu	r2,-20(fp)
  851d34:	1000081e 	bne	r2,zero,851d58 <OSTimeDlyHMSM+0x70>
        if (minutes == 0) {
  851d38:	e0bffc03 	ldbu	r2,-16(fp)
  851d3c:	1000061e 	bne	r2,zero,851d58 <OSTimeDlyHMSM+0x70>
            if (seconds == 0) {
  851d40:	e0bffd03 	ldbu	r2,-12(fp)
  851d44:	1000041e 	bne	r2,zero,851d58 <OSTimeDlyHMSM+0x70>
                if (ms == 0) {
  851d48:	e0bffe0b 	ldhu	r2,-8(fp)
  851d4c:	1000021e 	bne	r2,zero,851d58 <OSTimeDlyHMSM+0x70>
                    return (OS_ERR_TIME_ZERO_DLY);
  851d50:	00801504 	movi	r2,84
  851d54:	00003d06 	br	851e4c <OSTimeDlyHMSM+0x164>
                }
            }
        }
    }
    if (minutes > 59) {
  851d58:	e0bffc03 	ldbu	r2,-16(fp)
  851d5c:	10800f30 	cmpltui	r2,r2,60
  851d60:	1000021e 	bne	r2,zero,851d6c <OSTimeDlyHMSM+0x84>
        return (OS_ERR_TIME_INVALID_MINUTES);    /* Validate arguments to be within range              */
  851d64:	00801444 	movi	r2,81
  851d68:	00003806 	br	851e4c <OSTimeDlyHMSM+0x164>
    }
    if (seconds > 59) {
  851d6c:	e0bffd03 	ldbu	r2,-12(fp)
  851d70:	10800f30 	cmpltui	r2,r2,60
  851d74:	1000021e 	bne	r2,zero,851d80 <OSTimeDlyHMSM+0x98>
        return (OS_ERR_TIME_INVALID_SECONDS);
  851d78:	00801484 	movi	r2,82
  851d7c:	00003306 	br	851e4c <OSTimeDlyHMSM+0x164>
    }
    if (ms > 999) {
  851d80:	e0bffe0b 	ldhu	r2,-8(fp)
  851d84:	1080fa30 	cmpltui	r2,r2,1000
  851d88:	1000021e 	bne	r2,zero,851d94 <OSTimeDlyHMSM+0xac>
        return (OS_ERR_TIME_INVALID_MS);
  851d8c:	008014c4 	movi	r2,83
  851d90:	00002e06 	br	851e4c <OSTimeDlyHMSM+0x164>
    }
#endif
                                                 /* Compute the total number of clock ticks required.. */
                                                 /* .. (rounded to the nearest tick)                   */
    ticks = ((INT32U)hours * 3600L + (INT32U)minutes * 60L + (INT32U)seconds) * OS_TICKS_PER_SEC
  851d94:	e0bffb03 	ldbu	r2,-20(fp)
  851d98:	01438404 	movi	r5,3600
  851d9c:	1009883a 	mov	r4,r2
  851da0:	08301e80 	call	8301e8 <__mulsi3>
  851da4:	1021883a 	mov	r16,r2
  851da8:	e0bffc03 	ldbu	r2,-16(fp)
  851dac:	01400f04 	movi	r5,60
  851db0:	1009883a 	mov	r4,r2
  851db4:	08301e80 	call	8301e8 <__mulsi3>
  851db8:	8087883a 	add	r3,r16,r2
  851dbc:	e0bffd03 	ldbu	r2,-12(fp)
  851dc0:	1885883a 	add	r2,r3,r2
  851dc4:	0140fa04 	movi	r5,1000
  851dc8:	1009883a 	mov	r4,r2
  851dcc:	08301e80 	call	8301e8 <__mulsi3>
  851dd0:	1021883a 	mov	r16,r2
          + OS_TICKS_PER_SEC * ((INT32U)ms + 500L / OS_TICKS_PER_SEC) / 1000L;
  851dd4:	e0bffe0b 	ldhu	r2,-8(fp)
  851dd8:	0140fa04 	movi	r5,1000
  851ddc:	1009883a 	mov	r4,r2
  851de0:	08301e80 	call	8301e8 <__mulsi3>
  851de4:	0140fa04 	movi	r5,1000
  851de8:	1009883a 	mov	r4,r2
  851dec:	083012c0 	call	83012c <__udivsi3>
        return (OS_ERR_TIME_INVALID_MS);
    }
#endif
                                                 /* Compute the total number of clock ticks required.. */
                                                 /* .. (rounded to the nearest tick)                   */
    ticks = ((INT32U)hours * 3600L + (INT32U)minutes * 60L + (INT32U)seconds) * OS_TICKS_PER_SEC
  851df0:	8085883a 	add	r2,r16,r2
  851df4:	e0bffa15 	stw	r2,-24(fp)
          + OS_TICKS_PER_SEC * ((INT32U)ms + 500L / OS_TICKS_PER_SEC) / 1000L;
    loops = (INT16U)(ticks >> 16);               /* Compute the integral number of 65536 tick delays   */
  851df8:	e0bffa17 	ldw	r2,-24(fp)
  851dfc:	1004d43a 	srli	r2,r2,16
  851e00:	e0bff90d 	sth	r2,-28(fp)
    ticks = ticks & 0xFFFFL;                     /* Obtain  the fractional number of ticks             */
  851e04:	e0bffa17 	ldw	r2,-24(fp)
  851e08:	10bfffcc 	andi	r2,r2,65535
  851e0c:	e0bffa15 	stw	r2,-24(fp)
    OSTimeDly((INT16U)ticks);
  851e10:	e0bffa17 	ldw	r2,-24(fp)
  851e14:	10bfffcc 	andi	r2,r2,65535
  851e18:	1009883a 	mov	r4,r2
  851e1c:	0851be40 	call	851be4 <OSTimeDly>
    while (loops > 0) {
  851e20:	00000706 	br	851e40 <OSTimeDlyHMSM+0x158>
        OSTimeDly((INT16U)32768u);
  851e24:	01200014 	movui	r4,32768
  851e28:	0851be40 	call	851be4 <OSTimeDly>
        OSTimeDly((INT16U)32768u);
  851e2c:	01200014 	movui	r4,32768
  851e30:	0851be40 	call	851be4 <OSTimeDly>
        loops--;
  851e34:	e0bff90b 	ldhu	r2,-28(fp)
  851e38:	10bfffc4 	addi	r2,r2,-1
  851e3c:	e0bff90d 	sth	r2,-28(fp)
    ticks = ((INT32U)hours * 3600L + (INT32U)minutes * 60L + (INT32U)seconds) * OS_TICKS_PER_SEC
          + OS_TICKS_PER_SEC * ((INT32U)ms + 500L / OS_TICKS_PER_SEC) / 1000L;
    loops = (INT16U)(ticks >> 16);               /* Compute the integral number of 65536 tick delays   */
    ticks = ticks & 0xFFFFL;                     /* Obtain  the fractional number of ticks             */
    OSTimeDly((INT16U)ticks);
    while (loops > 0) {
  851e40:	e0bff90b 	ldhu	r2,-28(fp)
  851e44:	103ff71e 	bne	r2,zero,851e24 <__alt_mem_epcs_flash_controller_0+0xff848e24>
        OSTimeDly((INT16U)32768u);
        OSTimeDly((INT16U)32768u);
        loops--;
    }
    return (OS_ERR_NONE);
  851e48:	0005883a 	mov	r2,zero
}
  851e4c:	e6ffff04 	addi	sp,fp,-4
  851e50:	dfc00217 	ldw	ra,8(sp)
  851e54:	df000117 	ldw	fp,4(sp)
  851e58:	dc000017 	ldw	r16,0(sp)
  851e5c:	dec00304 	addi	sp,sp,12
  851e60:	f800283a 	ret

00851e64 <OSTimeDlyResume>:
*********************************************************************************************************
*/

#if OS_TIME_DLY_RESUME_EN > 0
INT8U  OSTimeDlyResume (INT8U prio)
{
  851e64:	defff504 	addi	sp,sp,-44
  851e68:	dfc00a15 	stw	ra,40(sp)
  851e6c:	df000915 	stw	fp,36(sp)
  851e70:	df000904 	addi	fp,sp,36
  851e74:	2005883a 	mov	r2,r4
  851e78:	e0bfff05 	stb	r2,-4(fp)
    OS_TCB    *ptcb;
#if OS_CRITICAL_METHOD == 3                                    /* Storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  851e7c:	e03ff715 	stw	zero,-36(fp)
#endif



    if (prio >= OS_LOWEST_PRIO) {
  851e80:	e0bfff03 	ldbu	r2,-4(fp)
  851e84:	10800530 	cmpltui	r2,r2,20
  851e88:	1000021e 	bne	r2,zero,851e94 <OSTimeDlyResume+0x30>
        return (OS_ERR_PRIO_INVALID);
  851e8c:	00800a84 	movi	r2,42
  851e90:	00006406 	br	852024 <OSTimeDlyResume+0x1c0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  851e94:	0005303a 	rdctl	r2,status
  851e98:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  851e9c:	e0fffe17 	ldw	r3,-8(fp)
  851ea0:	00bfff84 	movi	r2,-2
  851ea4:	1884703a 	and	r2,r3,r2
  851ea8:	1001703a 	wrctl	status,r2
  
  return context;
  851eac:	e0bffe17 	ldw	r2,-8(fp)
    }
    OS_ENTER_CRITICAL();
  851eb0:	e0bff715 	stw	r2,-36(fp)
    ptcb = OSTCBPrioTbl[prio];                                 /* Make sure that task exist            */
  851eb4:	e0ffff03 	ldbu	r3,-4(fp)
  851eb8:	008021b4 	movhi	r2,134
  851ebc:	1098b904 	addi	r2,r2,25316
  851ec0:	18c7883a 	add	r3,r3,r3
  851ec4:	18c7883a 	add	r3,r3,r3
  851ec8:	10c5883a 	add	r2,r2,r3
  851ecc:	10800017 	ldw	r2,0(r2)
  851ed0:	e0bff915 	stw	r2,-28(fp)
    if (ptcb == (OS_TCB *)0) {
  851ed4:	e0bff917 	ldw	r2,-28(fp)
  851ed8:	1000061e 	bne	r2,zero,851ef4 <OSTimeDlyResume+0x90>
  851edc:	e0bff717 	ldw	r2,-36(fp)
  851ee0:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851ee4:	e0bff817 	ldw	r2,-32(fp)
  851ee8:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);                        /* The task does not exist              */
  851eec:	008010c4 	movi	r2,67
  851ef0:	00004c06 	br	852024 <OSTimeDlyResume+0x1c0>
    }
    if (ptcb == OS_TCB_RESERVED) {
  851ef4:	e0bff917 	ldw	r2,-28(fp)
  851ef8:	10800058 	cmpnei	r2,r2,1
  851efc:	1000061e 	bne	r2,zero,851f18 <OSTimeDlyResume+0xb4>
  851f00:	e0bff717 	ldw	r2,-36(fp)
  851f04:	e0bffa15 	stw	r2,-24(fp)
  851f08:	e0bffa17 	ldw	r2,-24(fp)
  851f0c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);                        /* The task does not exist              */
  851f10:	008010c4 	movi	r2,67
  851f14:	00004306 	br	852024 <OSTimeDlyResume+0x1c0>
    }
    if (ptcb->OSTCBDly == 0) {                                 /* See if task is delayed               */
  851f18:	e0bff917 	ldw	r2,-28(fp)
  851f1c:	10800b8b 	ldhu	r2,46(r2)
  851f20:	10bfffcc 	andi	r2,r2,65535
  851f24:	1000061e 	bne	r2,zero,851f40 <OSTimeDlyResume+0xdc>
  851f28:	e0bff717 	ldw	r2,-36(fp)
  851f2c:	e0bffb15 	stw	r2,-20(fp)
  851f30:	e0bffb17 	ldw	r2,-20(fp)
  851f34:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TIME_NOT_DLY);                          /* Indicate that task was not delayed   */
  851f38:	00801404 	movi	r2,80
  851f3c:	00003906 	br	852024 <OSTimeDlyResume+0x1c0>
    }

    ptcb->OSTCBDly = 0;                                        /* Clear the time delay                 */
  851f40:	e0bff917 	ldw	r2,-28(fp)
  851f44:	10000b8d 	sth	zero,46(r2)
    if ((ptcb->OSTCBStat & OS_STAT_PEND_ANY) != OS_STAT_RDY) {
  851f48:	e0bff917 	ldw	r2,-28(fp)
  851f4c:	10800c03 	ldbu	r2,48(r2)
  851f50:	10803fcc 	andi	r2,r2,255
  851f54:	10800dcc 	andi	r2,r2,55
  851f58:	10000b26 	beq	r2,zero,851f88 <OSTimeDlyResume+0x124>
        ptcb->OSTCBStat     &= ~OS_STAT_PEND_ANY;              /* Yes, Clear status flag               */
  851f5c:	e0bff917 	ldw	r2,-28(fp)
  851f60:	10c00c03 	ldbu	r3,48(r2)
  851f64:	00bff204 	movi	r2,-56
  851f68:	1884703a 	and	r2,r3,r2
  851f6c:	1007883a 	mov	r3,r2
  851f70:	e0bff917 	ldw	r2,-28(fp)
  851f74:	10c00c05 	stb	r3,48(r2)
        ptcb->OSTCBStatPend  =  OS_STAT_PEND_TO;               /* Indicate PEND timeout                */
  851f78:	e0bff917 	ldw	r2,-28(fp)
  851f7c:	00c00044 	movi	r3,1
  851f80:	10c00c45 	stb	r3,49(r2)
  851f84:	00000206 	br	851f90 <OSTimeDlyResume+0x12c>
    } else {
        ptcb->OSTCBStatPend  =  OS_STAT_PEND_OK;
  851f88:	e0bff917 	ldw	r2,-28(fp)
  851f8c:	10000c45 	stb	zero,49(r2)
    }
    if ((ptcb->OSTCBStat & OS_STAT_SUSPEND) == OS_STAT_RDY) {  /* Is task suspended?                   */
  851f90:	e0bff917 	ldw	r2,-28(fp)
  851f94:	10800c03 	ldbu	r2,48(r2)
  851f98:	10803fcc 	andi	r2,r2,255
  851f9c:	1080020c 	andi	r2,r2,8
  851fa0:	10001b1e 	bne	r2,zero,852010 <OSTimeDlyResume+0x1ac>
        OSRdyGrp               |= ptcb->OSTCBBitY;             /* No,  Make ready                      */
  851fa4:	e0bff917 	ldw	r2,-28(fp)
  851fa8:	10c00d83 	ldbu	r3,54(r2)
  851fac:	d0a0a103 	ldbu	r2,-32124(gp)
  851fb0:	1884b03a 	or	r2,r3,r2
  851fb4:	d0a0a105 	stb	r2,-32124(gp)
        OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
  851fb8:	e0bff917 	ldw	r2,-28(fp)
  851fbc:	10800d03 	ldbu	r2,52(r2)
  851fc0:	10c03fcc 	andi	r3,r2,255
  851fc4:	e0bff917 	ldw	r2,-28(fp)
  851fc8:	10800d03 	ldbu	r2,52(r2)
  851fcc:	11003fcc 	andi	r4,r2,255
  851fd0:	d0a0a144 	addi	r2,gp,-32123
  851fd4:	2085883a 	add	r2,r4,r2
  851fd8:	11000003 	ldbu	r4,0(r2)
  851fdc:	e0bff917 	ldw	r2,-28(fp)
  851fe0:	10800d43 	ldbu	r2,53(r2)
  851fe4:	2084b03a 	or	r2,r4,r2
  851fe8:	1009883a 	mov	r4,r2
  851fec:	d0a0a144 	addi	r2,gp,-32123
  851ff0:	1885883a 	add	r2,r3,r2
  851ff4:	11000005 	stb	r4,0(r2)
  851ff8:	e0bff717 	ldw	r2,-36(fp)
  851ffc:	e0bffc15 	stw	r2,-16(fp)
  852000:	e0bffc17 	ldw	r2,-16(fp)
  852004:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        OS_Sched();                                            /* See if this is new highest priority  */
  852008:	084c23c0 	call	84c23c <OS_Sched>
  85200c:	00000406 	br	852020 <OSTimeDlyResume+0x1bc>
  852010:	e0bff717 	ldw	r2,-36(fp)
  852014:	e0bffd15 	stw	r2,-12(fp)
  852018:	e0bffd17 	ldw	r2,-12(fp)
  85201c:	1001703a 	wrctl	status,r2
    } else {
        OS_EXIT_CRITICAL();                                    /* Task may be suspended                */
    }
    return (OS_ERR_NONE);
  852020:	0005883a 	mov	r2,zero
}
  852024:	e037883a 	mov	sp,fp
  852028:	dfc00117 	ldw	ra,4(sp)
  85202c:	df000017 	ldw	fp,0(sp)
  852030:	dec00204 	addi	sp,sp,8
  852034:	f800283a 	ret

00852038 <OSTimeGet>:
*********************************************************************************************************
*/

#if OS_TIME_GET_SET_EN > 0
INT32U  OSTimeGet (void)
{
  852038:	defffb04 	addi	sp,sp,-20
  85203c:	df000415 	stw	fp,16(sp)
  852040:	df000404 	addi	fp,sp,16
    INT32U     ticks;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  852044:	e03ffc15 	stw	zero,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  852048:	0005303a 	rdctl	r2,status
  85204c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  852050:	e0fffe17 	ldw	r3,-8(fp)
  852054:	00bfff84 	movi	r2,-2
  852058:	1884703a 	and	r2,r3,r2
  85205c:	1001703a 	wrctl	status,r2
  
  return context;
  852060:	e0bffe17 	ldw	r2,-8(fp)
#endif



    OS_ENTER_CRITICAL();
  852064:	e0bffc15 	stw	r2,-16(fp)
    ticks = OSTime;
  852068:	d0a0a517 	ldw	r2,-32108(gp)
  85206c:	e0bffd15 	stw	r2,-12(fp)
  852070:	e0bffc17 	ldw	r2,-16(fp)
  852074:	e0bfff15 	stw	r2,-4(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  852078:	e0bfff17 	ldw	r2,-4(fp)
  85207c:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (ticks);
  852080:	e0bffd17 	ldw	r2,-12(fp)
}
  852084:	e037883a 	mov	sp,fp
  852088:	df000017 	ldw	fp,0(sp)
  85208c:	dec00104 	addi	sp,sp,4
  852090:	f800283a 	ret

00852094 <OSTimeSet>:
*********************************************************************************************************
*/

#if OS_TIME_GET_SET_EN > 0
void  OSTimeSet (INT32U ticks)
{
  852094:	defffb04 	addi	sp,sp,-20
  852098:	df000415 	stw	fp,16(sp)
  85209c:	df000404 	addi	fp,sp,16
  8520a0:	e13fff15 	stw	r4,-4(fp)
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  8520a4:	e03ffc15 	stw	zero,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8520a8:	0005303a 	rdctl	r2,status
  8520ac:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8520b0:	e0fffd17 	ldw	r3,-12(fp)
  8520b4:	00bfff84 	movi	r2,-2
  8520b8:	1884703a 	and	r2,r3,r2
  8520bc:	1001703a 	wrctl	status,r2
  
  return context;
  8520c0:	e0bffd17 	ldw	r2,-12(fp)
#endif



    OS_ENTER_CRITICAL();
  8520c4:	e0bffc15 	stw	r2,-16(fp)
    OSTime = ticks;
  8520c8:	e0bfff17 	ldw	r2,-4(fp)
  8520cc:	d0a0a515 	stw	r2,-32108(gp)
  8520d0:	e0bffc17 	ldw	r2,-16(fp)
  8520d4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8520d8:	e0bffe17 	ldw	r2,-8(fp)
  8520dc:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
}
  8520e0:	0001883a 	nop
  8520e4:	e037883a 	mov	sp,fp
  8520e8:	df000017 	ldw	fp,0(sp)
  8520ec:	dec00104 	addi	sp,sp,4
  8520f0:	f800283a 	ret

008520f4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  8520f4:	defffd04 	addi	sp,sp,-12
  8520f8:	dfc00215 	stw	ra,8(sp)
  8520fc:	df000115 	stw	fp,4(sp)
  852100:	df000104 	addi	fp,sp,4
  852104:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  852108:	d1604004 	addi	r5,gp,-32512
  85210c:	e13fff17 	ldw	r4,-4(fp)
  852110:	0855eac0 	call	855eac <alt_dev_llist_insert>
}
  852114:	e037883a 	mov	sp,fp
  852118:	dfc00117 	ldw	ra,4(sp)
  85211c:	df000017 	ldw	fp,0(sp)
  852120:	dec00204 	addi	sp,sp,8
  852124:	f800283a 	ret

00852128 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  852128:	defffd04 	addi	sp,sp,-12
  85212c:	dfc00215 	stw	ra,8(sp)
  852130:	df000115 	stw	fp,4(sp)
  852134:	df000104 	addi	fp,sp,4
  852138:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
  85213c:	08567700 	call	856770 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  852140:	00800044 	movi	r2,1
  852144:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  852148:	0001883a 	nop
  85214c:	e037883a 	mov	sp,fp
  852150:	dfc00117 	ldw	ra,4(sp)
  852154:	df000017 	ldw	fp,0(sp)
  852158:	dec00204 	addi	sp,sp,8
  85215c:	f800283a 	ret

00852160 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  852160:	defffe04 	addi	sp,sp,-8
  852164:	dfc00115 	stw	ra,4(sp)
  852168:	df000015 	stw	fp,0(sp)
  85216c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
  852170:	01c0fa04 	movi	r7,1000
  852174:	01800104 	movi	r6,4
  852178:	000b883a 	mov	r5,zero
  85217c:	01004074 	movhi	r4,257
  852180:	21281004 	addi	r4,r4,-24512
  852184:	0853abc0 	call	853abc <alt_avalon_timer_sc_init>
    ALTERA_AVALON_EPCS_FLASH_CONTROLLER_INIT ( EPCS_FLASH_CONTROLLER_0, epcs_flash_controller_0);
  852188:	010021b4 	movhi	r4,134
  85218c:	212a7e04 	addi	r4,r4,-22024
  852190:	08522500 	call	852250 <alt_epcs_flash_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
  852194:	000d883a 	mov	r6,zero
  852198:	000b883a 	mov	r5,zero
  85219c:	010021b4 	movhi	r4,134
  8521a0:	212abb04 	addi	r4,r4,-21780
  8521a4:	0852e7c0 	call	852e7c <altera_avalon_jtag_uart_init>
  8521a8:	010021b4 	movhi	r4,134
  8521ac:	212ab104 	addi	r4,r4,-21820
  8521b0:	08520f40 	call	8520f4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
  8521b4:	0001883a 	nop
    ALTERA_AVALON_UART_INIT ( WIFI_UART, wifi_uart);
  8521b8:	01800044 	movi	r6,1
  8521bc:	000b883a 	mov	r5,zero
  8521c0:	010021b4 	movhi	r4,134
  8521c4:	212ed604 	addi	r4,r4,-17576
  8521c8:	0853c480 	call	853c48 <altera_avalon_uart_init>
  8521cc:	010021b4 	movhi	r4,134
  8521d0:	212ecc04 	addi	r4,r4,-17616
  8521d4:	08520f40 	call	8520f4 <alt_dev_reg>
    ALTERA_HOSTFS_INIT ( ALTERA_HOSTFS, altera_hostfs);
  8521d8:	010021b4 	movhi	r4,134
  8521dc:	212f0004 	addi	r4,r4,-17408
  8521e0:	08560cc0 	call	8560cc <alt_fs_reg>
    FIFOED_AVALON_UART_INIT ( CAM_UART, cam_uart);
  8521e4:	018001c4 	movi	r6,7
  8521e8:	000b883a 	mov	r5,zero
  8521ec:	010021b4 	movhi	r4,134
  8521f0:	212f1404 	addi	r4,r4,-17328
  8521f4:	08559d40 	call	8559d4 <fifoed_avalon_uart_init>
  8521f8:	010021b4 	movhi	r4,134
  8521fc:	212f0a04 	addi	r4,r4,-17368
  852200:	08520f40 	call	8520f4 <alt_dev_reg>
}
  852204:	0001883a 	nop
  852208:	e037883a 	mov	sp,fp
  85220c:	dfc00117 	ldw	ra,4(sp)
  852210:	df000017 	ldw	fp,0(sp)
  852214:	dec00204 	addi	sp,sp,8
  852218:	f800283a 	ret

0085221c <alt_flash_device_register>:

typedef struct alt_flash_dev alt_flash_dev; 
typedef alt_flash_dev alt_flash_fd;

static ALT_INLINE int alt_flash_device_register( alt_flash_fd* fd)
{
  85221c:	defffd04 	addi	sp,sp,-12
  852220:	dfc00215 	stw	ra,8(sp)
  852224:	df000115 	stw	fp,4(sp)
  852228:	df000104 	addi	fp,sp,4
  85222c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_flash_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) fd, &alt_flash_dev_list);
  852230:	d1607704 	addi	r5,gp,-32292
  852234:	e13fff17 	ldw	r4,-4(fp)
  852238:	0855eac0 	call	855eac <alt_dev_llist_insert>
}
  85223c:	e037883a 	mov	sp,fp
  852240:	dfc00117 	ldw	ra,4(sp)
  852244:	df000017 	ldw	fp,0(sp)
  852248:	dec00204 	addi	sp,sp,8
  85224c:	f800283a 	ret

00852250 <alt_epcs_flash_init>:
/*
 * alt_epcs_flash_init
 *
 */
int alt_epcs_flash_init(alt_flash_epcs_dev* flash)
{
  852250:	defffc04 	addi	sp,sp,-16
  852254:	dfc00315 	stw	ra,12(sp)
  852258:	df000215 	stw	fp,8(sp)
  85225c:	df000204 	addi	fp,sp,8
  852260:	e13fff15 	stw	r4,-4(fp)
  int ret_code = 0;
  852264:	e03ffe15 	stw	zero,-8(fp)

  /* Set up function pointers and/or data structures as needed. */
  ret_code = alt_epcs_flash_query(flash);
  852268:	e13fff17 	ldw	r4,-4(fp)
  85226c:	08522a40 	call	8522a4 <alt_epcs_flash_query>
  852270:	e0bffe15 	stw	r2,-8(fp)
  */

  /*
  *  Register this device as a valid flash device type
  */
  if (!ret_code)
  852274:	e0bffe17 	ldw	r2,-8(fp)
  852278:	1000041e 	bne	r2,zero,85228c <alt_epcs_flash_init+0x3c>
    ret_code = alt_flash_device_register(&(flash->dev));
  85227c:	e0bfff17 	ldw	r2,-4(fp)
  852280:	1009883a 	mov	r4,r2
  852284:	085221c0 	call	85221c <alt_flash_device_register>
  852288:	e0bffe15 	stw	r2,-8(fp)

  return ret_code;
  85228c:	e0bffe17 	ldw	r2,-8(fp)
}
  852290:	e037883a 	mov	sp,fp
  852294:	dfc00117 	ldw	ra,4(sp)
  852298:	df000017 	ldw	fp,0(sp)
  85229c:	dec00204 	addi	sp,sp,8
  8522a0:	f800283a 	ret

008522a4 <alt_epcs_flash_query>:


static int alt_epcs_flash_query(alt_flash_epcs_dev* flash)
{
  8522a4:	defffc04 	addi	sp,sp,-16
  8522a8:	dfc00315 	stw	ra,12(sp)
  8522ac:	df000215 	stw	fp,8(sp)
  8522b0:	df000204 	addi	fp,sp,8
  8522b4:	e13fff15 	stw	r4,-4(fp)
  int ret_code = 0;
  8522b8:	e03ffe15 	stw	zero,-8(fp)
   * reset the device, or whatever, to ensure that
   * it's in a known working state.
  */
  
  /* Disable 4-bytes address mode. */
  flash->four_bytes_mode = 0;
  8522bc:	e0bfff17 	ldw	r2,-4(fp)
  8522c0:	10003215 	stw	zero,200(r2)
  
  /* Send the RES command sequence */
  flash->silicon_id =
    epcs_read_electronic_signature(flash->register_base);
  8522c4:	e0bfff17 	ldw	r2,-4(fp)
  8522c8:	10802e17 	ldw	r2,184(r2)
  8522cc:	1009883a 	mov	r4,r2
  8522d0:	0854fac0 	call	854fac <epcs_read_electronic_signature>
  
  /* Disable 4-bytes address mode. */
  flash->four_bytes_mode = 0;
  
  /* Send the RES command sequence */
  flash->silicon_id =
  8522d4:	10c03fcc 	andi	r3,r2,255
  8522d8:	e0bfff17 	ldw	r2,-4(fp)
  8522dc:	10c03015 	stw	r3,192(r2)
    epcs_read_electronic_signature(flash->register_base);

  /* Fill in all device-specific parameters. */
  if (flash->silicon_id == 0x16) /* EPCS64 */
  8522e0:	e0bfff17 	ldw	r2,-4(fp)
  8522e4:	10803017 	ldw	r2,192(r2)
  8522e8:	10800598 	cmpnei	r2,r2,22
  8522ec:	10000a1e 	bne	r2,zero,852318 <alt_epcs_flash_query+0x74>
  {
    flash->dev.region_info[0].region_size = 64 * 1024 * 1024 / 8;
  8522f0:	e0bfff17 	ldw	r2,-4(fp)
  8522f4:	00c02034 	movhi	r3,128
  8522f8:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 128;
  8522fc:	e0bfff17 	ldw	r2,-4(fp)
  852300:	00c02004 	movi	r3,128
  852304:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
  852308:	e0bfff17 	ldw	r2,-4(fp)
  85230c:	00c00074 	movhi	r3,1
  852310:	10c01015 	stw	r3,64(r2)
  852314:	0000ce06 	br	852650 <alt_epcs_flash_query+0x3ac>
  }
  else if (flash->silicon_id == 0x14) /* EPCS16 */
  852318:	e0bfff17 	ldw	r2,-4(fp)
  85231c:	10803017 	ldw	r2,192(r2)
  852320:	10800518 	cmpnei	r2,r2,20
  852324:	10000a1e 	bne	r2,zero,852350 <alt_epcs_flash_query+0xac>
  {
    flash->dev.region_info[0].region_size = 16 * 1024 * 1024 / 8;
  852328:	e0bfff17 	ldw	r2,-4(fp)
  85232c:	00c00834 	movhi	r3,32
  852330:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 32;
  852334:	e0bfff17 	ldw	r2,-4(fp)
  852338:	00c00804 	movi	r3,32
  85233c:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
  852340:	e0bfff17 	ldw	r2,-4(fp)
  852344:	00c00074 	movhi	r3,1
  852348:	10c01015 	stw	r3,64(r2)
  85234c:	0000c006 	br	852650 <alt_epcs_flash_query+0x3ac>
  }
  else if (flash->silicon_id == 0x13) /* EPCS8 */
  852350:	e0bfff17 	ldw	r2,-4(fp)
  852354:	10803017 	ldw	r2,192(r2)
  852358:	108004d8 	cmpnei	r2,r2,19
  85235c:	10000a1e 	bne	r2,zero,852388 <alt_epcs_flash_query+0xe4>
  {
    flash->dev.region_info[0].region_size = 8 * 1024 * 1024 / 8;
  852360:	e0bfff17 	ldw	r2,-4(fp)
  852364:	00c00434 	movhi	r3,16
  852368:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 16;
  85236c:	e0bfff17 	ldw	r2,-4(fp)
  852370:	00c00404 	movi	r3,16
  852374:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
  852378:	e0bfff17 	ldw	r2,-4(fp)
  85237c:	00c00074 	movhi	r3,1
  852380:	10c01015 	stw	r3,64(r2)
  852384:	0000b206 	br	852650 <alt_epcs_flash_query+0x3ac>
  }
  else if (flash->silicon_id == 0x12) /* EPCS4 */
  852388:	e0bfff17 	ldw	r2,-4(fp)
  85238c:	10803017 	ldw	r2,192(r2)
  852390:	10800498 	cmpnei	r2,r2,18
  852394:	10000a1e 	bne	r2,zero,8523c0 <alt_epcs_flash_query+0x11c>
  {
    flash->dev.region_info[0].region_size = 4 * 1024 * 1024 / 8;
  852398:	e0bfff17 	ldw	r2,-4(fp)
  85239c:	00c00234 	movhi	r3,8
  8523a0:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 8;
  8523a4:	e0bfff17 	ldw	r2,-4(fp)
  8523a8:	00c00204 	movi	r3,8
  8523ac:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
  8523b0:	e0bfff17 	ldw	r2,-4(fp)
  8523b4:	00c00074 	movhi	r3,1
  8523b8:	10c01015 	stw	r3,64(r2)
  8523bc:	0000a406 	br	852650 <alt_epcs_flash_query+0x3ac>
  }
  else if (flash->silicon_id == 0x10) /* EPCS1 */
  8523c0:	e0bfff17 	ldw	r2,-4(fp)
  8523c4:	10803017 	ldw	r2,192(r2)
  8523c8:	10800418 	cmpnei	r2,r2,16
  8523cc:	10000a1e 	bne	r2,zero,8523f8 <alt_epcs_flash_query+0x154>
  {
    flash->dev.region_info[0].region_size = 1 * 1024 * 1024 / 8;
  8523d0:	e0bfff17 	ldw	r2,-4(fp)
  8523d4:	00c000b4 	movhi	r3,2
  8523d8:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 4;
  8523dc:	e0bfff17 	ldw	r2,-4(fp)
  8523e0:	00c00104 	movi	r3,4
  8523e4:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 32768;
  8523e8:	e0bfff17 	ldw	r2,-4(fp)
  8523ec:	00e00014 	movui	r3,32768
  8523f0:	10c01015 	stw	r3,64(r2)
  8523f4:	00009606 	br	852650 <alt_epcs_flash_query+0x3ac>
  {
    /* 
     * Read electronic signature doesn't work for newer devices; try 
     * the "Read Device ID" command" before giving up.
     */
    flash->silicon_id = epcs_read_device_id(flash->register_base);
  8523f8:	e0bfff17 	ldw	r2,-4(fp)
  8523fc:	10802e17 	ldw	r2,184(r2)
  852400:	1009883a 	mov	r4,r2
  852404:	08550140 	call	855014 <epcs_read_device_id>
  852408:	1007883a 	mov	r3,r2
  85240c:	e0bfff17 	ldw	r2,-4(fp)
  852410:	10c03015 	stw	r3,192(r2)
    /*
     * Last byte is the density ID. Note the difference between
     * EPCS128 and EPCQ128 -- arranged differently, though the 
     * least significant byte of each is '0x18'.
     */
    if((flash->silicon_id & 0xFFFFFF) == 0x20BA15) /* EPCQ16 */
  852414:	e0bfff17 	ldw	r2,-4(fp)
  852418:	10c03017 	ldw	r3,192(r2)
  85241c:	00804034 	movhi	r2,256
  852420:	10bfffc4 	addi	r2,r2,-1
  852424:	1886703a 	and	r3,r3,r2
  852428:	00800874 	movhi	r2,33
  85242c:	10ae8544 	addi	r2,r2,-17899
  852430:	18800a1e 	bne	r3,r2,85245c <alt_epcs_flash_query+0x1b8>
    {
      flash->dev.region_info[0].region_size = 16 * 1024 * 1024 / 8;
  852434:	e0bfff17 	ldw	r2,-4(fp)
  852438:	00c00834 	movhi	r3,32
  85243c:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 32; /* number of sectors */
  852440:	e0bfff17 	ldw	r2,-4(fp)
  852444:	00c00804 	movi	r3,32
  852448:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
  85244c:	e0bfff17 	ldw	r2,-4(fp)
  852450:	00c00074 	movhi	r3,1
  852454:	10c01015 	stw	r3,64(r2)
  852458:	00007d06 	br	852650 <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFFFFFF) == 0x20BA16) /* EPCQ32 */
  85245c:	e0bfff17 	ldw	r2,-4(fp)
  852460:	10c03017 	ldw	r3,192(r2)
  852464:	00804034 	movhi	r2,256
  852468:	10bfffc4 	addi	r2,r2,-1
  85246c:	1886703a 	and	r3,r3,r2
  852470:	00800874 	movhi	r2,33
  852474:	10ae8584 	addi	r2,r2,-17898
  852478:	18800a1e 	bne	r3,r2,8524a4 <alt_epcs_flash_query+0x200>
    {
      flash->dev.region_info[0].region_size = 32 * 1024 * 1024 / 8;
  85247c:	e0bfff17 	ldw	r2,-4(fp)
  852480:	00c01034 	movhi	r3,64
  852484:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 64; /* number of sectors */
  852488:	e0bfff17 	ldw	r2,-4(fp)
  85248c:	00c01004 	movi	r3,64
  852490:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
  852494:	e0bfff17 	ldw	r2,-4(fp)
  852498:	00c00074 	movhi	r3,1
  85249c:	10c01015 	stw	r3,64(r2)
  8524a0:	00006b06 	br	852650 <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFFFFFF) == 0x20BA17) /* EPCQ64 */
  8524a4:	e0bfff17 	ldw	r2,-4(fp)
  8524a8:	10c03017 	ldw	r3,192(r2)
  8524ac:	00804034 	movhi	r2,256
  8524b0:	10bfffc4 	addi	r2,r2,-1
  8524b4:	1886703a 	and	r3,r3,r2
  8524b8:	00800874 	movhi	r2,33
  8524bc:	10ae85c4 	addi	r2,r2,-17897
  8524c0:	18800a1e 	bne	r3,r2,8524ec <alt_epcs_flash_query+0x248>
    {
      flash->dev.region_info[0].region_size = 64 * 1024 * 1024 / 8;
  8524c4:	e0bfff17 	ldw	r2,-4(fp)
  8524c8:	00c02034 	movhi	r3,128
  8524cc:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 128; /* number of sectors */
  8524d0:	e0bfff17 	ldw	r2,-4(fp)
  8524d4:	00c02004 	movi	r3,128
  8524d8:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
  8524dc:	e0bfff17 	ldw	r2,-4(fp)
  8524e0:	00c00074 	movhi	r3,1
  8524e4:	10c01015 	stw	r3,64(r2)
  8524e8:	00005906 	br	852650 <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFFFFFF) == 0x20BA18) /* EPCQ128 */
  8524ec:	e0bfff17 	ldw	r2,-4(fp)
  8524f0:	10c03017 	ldw	r3,192(r2)
  8524f4:	00804034 	movhi	r2,256
  8524f8:	10bfffc4 	addi	r2,r2,-1
  8524fc:	1886703a 	and	r3,r3,r2
  852500:	00800874 	movhi	r2,33
  852504:	10ae8604 	addi	r2,r2,-17896
  852508:	18800a1e 	bne	r3,r2,852534 <alt_epcs_flash_query+0x290>
    {
      flash->dev.region_info[0].region_size = 128 * 1024 * 1024 / 8;
  85250c:	e0bfff17 	ldw	r2,-4(fp)
  852510:	00c04034 	movhi	r3,256
  852514:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 256; /* number of sectors */
  852518:	e0bfff17 	ldw	r2,-4(fp)
  85251c:	00c04004 	movi	r3,256
  852520:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
  852524:	e0bfff17 	ldw	r2,-4(fp)
  852528:	00c00074 	movhi	r3,1
  85252c:	10c01015 	stw	r3,64(r2)
  852530:	00004706 	br	852650 <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFF) == 0x18) /* EPCS128 */
  852534:	e0bfff17 	ldw	r2,-4(fp)
  852538:	10803017 	ldw	r2,192(r2)
  85253c:	10803fcc 	andi	r2,r2,255
  852540:	10800618 	cmpnei	r2,r2,24
  852544:	10000a1e 	bne	r2,zero,852570 <alt_epcs_flash_query+0x2cc>
    {
      flash->dev.region_info[0].region_size = 128 * 1024 * 1024 / 8;
  852548:	e0bfff17 	ldw	r2,-4(fp)
  85254c:	00c04034 	movhi	r3,256
  852550:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 64;
  852554:	e0bfff17 	ldw	r2,-4(fp)
  852558:	00c01004 	movi	r3,64
  85255c:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 262144;
  852560:	e0bfff17 	ldw	r2,-4(fp)
  852564:	00c00134 	movhi	r3,4
  852568:	10c01015 	stw	r3,64(r2)
  85256c:	00003806 	br	852650 <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFF ) == 0x19) /* EPCQ256 */
  852570:	e0bfff17 	ldw	r2,-4(fp)
  852574:	10803017 	ldw	r2,192(r2)
  852578:	10803fcc 	andi	r2,r2,255
  85257c:	10800658 	cmpnei	r2,r2,25
  852580:	10000d1e 	bne	r2,zero,8525b8 <alt_epcs_flash_query+0x314>
    {
      flash->dev.region_info[0].region_size = 256 * 1024 * 1024 / 8;
  852584:	e0bfff17 	ldw	r2,-4(fp)
  852588:	00c08034 	movhi	r3,512
  85258c:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 512; /* number of sectors */
  852590:	e0bfff17 	ldw	r2,-4(fp)
  852594:	00c08004 	movi	r3,512
  852598:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
  85259c:	e0bfff17 	ldw	r2,-4(fp)
  8525a0:	00c00074 	movhi	r3,1
  8525a4:	10c01015 	stw	r3,64(r2)
       * must first be programmed into the device, though. To complicate things, 
       * other Altera IP expects the chip to be in 3 byte address mode when they 
       * start using it. To be nice, we'll place the device into 4-byte address mode
       * when we need to, and take it back out when we're done.
       */
      flash->four_bytes_mode = 1;
  8525a8:	e0bfff17 	ldw	r2,-4(fp)
  8525ac:	00c00044 	movi	r3,1
  8525b0:	10c03215 	stw	r3,200(r2)
  8525b4:	00002606 	br	852650 <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFF ) == 0x20) /* EPCQ512 */
  8525b8:	e0bfff17 	ldw	r2,-4(fp)
  8525bc:	10803017 	ldw	r2,192(r2)
  8525c0:	10803fcc 	andi	r2,r2,255
  8525c4:	10800818 	cmpnei	r2,r2,32
  8525c8:	10000d1e 	bne	r2,zero,852600 <alt_epcs_flash_query+0x35c>
    {
      flash->dev.region_info[0].region_size = 512 * 1024 * 1024 / 8;
  8525cc:	e0bfff17 	ldw	r2,-4(fp)
  8525d0:	00c10034 	movhi	r3,1024
  8525d4:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 1024; /* number of sectors */
  8525d8:	e0bfff17 	ldw	r2,-4(fp)
  8525dc:	00c10004 	movi	r3,1024
  8525e0:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
  8525e4:	e0bfff17 	ldw	r2,-4(fp)
  8525e8:	00c00074 	movhi	r3,1
  8525ec:	10c01015 	stw	r3,64(r2)

      /* Enable 4-bytes address mode if the device density is greater than 256Mbit. */
      flash->four_bytes_mode = 1;
  8525f0:	e0bfff17 	ldw	r2,-4(fp)
  8525f4:	00c00044 	movi	r3,1
  8525f8:	10c03215 	stw	r3,200(r2)
  8525fc:	00001406 	br	852650 <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFF ) == 0x21) /* EPCQ1024 */
  852600:	e0bfff17 	ldw	r2,-4(fp)
  852604:	10803017 	ldw	r2,192(r2)
  852608:	10803fcc 	andi	r2,r2,255
  85260c:	10800858 	cmpnei	r2,r2,33
  852610:	10000d1e 	bne	r2,zero,852648 <alt_epcs_flash_query+0x3a4>
    {
      flash->dev.region_info[0].region_size = 1024 * 1024 * 1024 / 8;
  852614:	e0bfff17 	ldw	r2,-4(fp)
  852618:	00c20034 	movhi	r3,2048
  85261c:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 2048; /* number of sectors */
  852620:	e0bfff17 	ldw	r2,-4(fp)
  852624:	00c20004 	movi	r3,2048
  852628:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
  85262c:	e0bfff17 	ldw	r2,-4(fp)
  852630:	00c00074 	movhi	r3,1
  852634:	10c01015 	stw	r3,64(r2)

      /* Enable 4-bytes address mode if the device density is greater than 256Mbit. */
      flash->four_bytes_mode = 1;
  852638:	e0bfff17 	ldw	r2,-4(fp)
  85263c:	00c00044 	movi	r3,1
  852640:	10c03215 	stw	r3,200(r2)
  852644:	00000206 	br	852650 <alt_epcs_flash_query+0x3ac>
    }
    else 
    {
      ret_code = -ENODEV; /* No known device found! */
  852648:	00bffb44 	movi	r2,-19
  85264c:	e0bffe15 	stw	r2,-8(fp)
    }
  }
  
  flash->size_in_bytes = flash->dev.region_info[0].region_size;
  852650:	e0bfff17 	ldw	r2,-4(fp)
  852654:	10800e17 	ldw	r2,56(r2)
  852658:	1007883a 	mov	r3,r2
  85265c:	e0bfff17 	ldw	r2,-4(fp)
  852660:	10c02f15 	stw	r3,188(r2)
  flash->dev.number_of_regions = 1;
  852664:	e0bfff17 	ldw	r2,-4(fp)
  852668:	00c00044 	movi	r3,1
  85266c:	10c00c15 	stw	r3,48(r2)
  flash->dev.region_info[0].offset = 0;
  852670:	e0bfff17 	ldw	r2,-4(fp)
  852674:	10000d15 	stw	zero,52(r2)
  flash->page_size = 256;
  852678:	e0bfff17 	ldw	r2,-4(fp)
  85267c:	00c04004 	movi	r3,256
  852680:	10c03115 	stw	r3,196(r2)

  /* Consider clearing all BP bits here. */
  return ret_code;
  852684:	e0bffe17 	ldw	r2,-8(fp)
}
  852688:	e037883a 	mov	sp,fp
  85268c:	dfc00117 	ldw	ra,4(sp)
  852690:	df000017 	ldw	fp,0(sp)
  852694:	dec00204 	addi	sp,sp,8
  852698:	f800283a 	ret

0085269c <alt_epcs_flash_memcmp>:
  alt_flash_dev* flash_info,
  const void* src_buffer,
  int offset,
  size_t n
)
{
  85269c:	deffee04 	addi	sp,sp,-72
  8526a0:	dfc01115 	stw	ra,68(sp)
  8526a4:	df001015 	stw	fp,64(sp)
  8526a8:	df001004 	addi	fp,sp,64
  8526ac:	e13ffc15 	stw	r4,-16(fp)
  8526b0:	e17ffd15 	stw	r5,-12(fp)
  8526b4:	e1bffe15 	stw	r6,-8(fp)
  8526b8:	e1ffff15 	stw	r7,-4(fp)
  /*
   * Compare chunks of memory at a time, for better serial-flash
   * read efficiency.
   */
  alt_u8 chunk_buffer[32];
  const int chunk_size = sizeof(chunk_buffer) / sizeof(*chunk_buffer);
  8526bc:	00800804 	movi	r2,32
  8526c0:	e0bff115 	stw	r2,-60(fp)
  int current_offset = 0;
  8526c4:	e03ff015 	stw	zero,-64(fp)

  while (n > 0)
  8526c8:	00002706 	br	852768 <alt_epcs_flash_memcmp+0xcc>
  {
    int this_chunk_size = n > chunk_size ? chunk_size : n;
  8526cc:	e0fff117 	ldw	r3,-60(fp)
  8526d0:	e0bfff17 	ldw	r2,-4(fp)
  8526d4:	1880012e 	bgeu	r3,r2,8526dc <alt_epcs_flash_memcmp+0x40>
  8526d8:	1805883a 	mov	r2,r3
  8526dc:	e0bff215 	stw	r2,-56(fp)
    int this_chunk_cmp;

    if (
      alt_epcs_flash_read(
  8526e0:	e0fffe17 	ldw	r3,-8(fp)
  8526e4:	e0bff017 	ldw	r2,-64(fp)
  8526e8:	1885883a 	add	r2,r3,r2
  8526ec:	e0fff404 	addi	r3,fp,-48
  8526f0:	e1fff217 	ldw	r7,-56(fp)
  8526f4:	180d883a 	mov	r6,r3
  8526f8:	100b883a 	mov	r5,r2
  8526fc:	e13ffc17 	ldw	r4,-16(fp)
  852700:	0852c800 	call	852c80 <alt_epcs_flash_read>
  while (n > 0)
  {
    int this_chunk_size = n > chunk_size ? chunk_size : n;
    int this_chunk_cmp;

    if (
  852704:	1000020e 	bge	r2,zero,852710 <alt_epcs_flash_memcmp+0x74>
    {
      /*
      * If the read fails, I'm not sure what the appropriate action is.
      * Compare success seems wrong, so make it compare fail.
      */
      return -1;
  852708:	00bfffc4 	movi	r2,-1
  85270c:	00001906 	br	852774 <alt_epcs_flash_memcmp+0xd8>
    }

    /* Compare this chunk against the source memory buffer. */
    this_chunk_cmp = memcmp(&((unsigned char*)(src_buffer))[current_offset], chunk_buffer, this_chunk_size);
  852710:	e0bff017 	ldw	r2,-64(fp)
  852714:	e0fffd17 	ldw	r3,-12(fp)
  852718:	1885883a 	add	r2,r3,r2
  85271c:	e13ff217 	ldw	r4,-56(fp)
  852720:	e0fff404 	addi	r3,fp,-48
  852724:	200d883a 	mov	r6,r4
  852728:	180b883a 	mov	r5,r3
  85272c:	1009883a 	mov	r4,r2
  852730:	0856f880 	call	856f88 <memcmp>
  852734:	e0bff315 	stw	r2,-52(fp)
    if (this_chunk_cmp)
  852738:	e0bff317 	ldw	r2,-52(fp)
  85273c:	10000226 	beq	r2,zero,852748 <alt_epcs_flash_memcmp+0xac>
    {
      return this_chunk_cmp;
  852740:	e0bff317 	ldw	r2,-52(fp)
  852744:	00000b06 	br	852774 <alt_epcs_flash_memcmp+0xd8>
    }

    n -= this_chunk_size;
  852748:	e0bff217 	ldw	r2,-56(fp)
  85274c:	e0ffff17 	ldw	r3,-4(fp)
  852750:	1885c83a 	sub	r2,r3,r2
  852754:	e0bfff15 	stw	r2,-4(fp)
    current_offset += this_chunk_size;
  852758:	e0fff017 	ldw	r3,-64(fp)
  85275c:	e0bff217 	ldw	r2,-56(fp)
  852760:	1885883a 	add	r2,r3,r2
  852764:	e0bff015 	stw	r2,-64(fp)
   */
  alt_u8 chunk_buffer[32];
  const int chunk_size = sizeof(chunk_buffer) / sizeof(*chunk_buffer);
  int current_offset = 0;

  while (n > 0)
  852768:	e0bfff17 	ldw	r2,-4(fp)
  85276c:	103fd71e 	bne	r2,zero,8526cc <__alt_mem_epcs_flash_controller_0+0xff8496cc>
  }

  /*
   * If execution made it to this point, compare is successful.
   */
  return 0;
  852770:	0005883a 	mov	r2,zero
}
  852774:	e037883a 	mov	sp,fp
  852778:	dfc00117 	ldw	ra,4(sp)
  85277c:	df000017 	ldw	fp,0(sp)
  852780:	dec00204 	addi	sp,sp,8
  852784:	f800283a 	ret

00852788 <alt_epcs_flash_write>:
 * large buffer to tie up in our programming library, when not all users will
 * want that functionality.
 */
int alt_epcs_flash_write(alt_flash_dev* flash_info, int offset,
                          const void* src_addr, int length)
{
  852788:	defff404 	addi	sp,sp,-48
  85278c:	dfc00b15 	stw	ra,44(sp)
  852790:	df000a15 	stw	fp,40(sp)
  852794:	df000a04 	addi	fp,sp,40
  852798:	e13ffc15 	stw	r4,-16(fp)
  85279c:	e17ffd15 	stw	r5,-12(fp)
  8527a0:	e1bffe15 	stw	r6,-8(fp)
  8527a4:	e1ffff15 	stw	r7,-4(fp)
  int         ret_code = 0;
  8527a8:	e03ff715 	stw	zero,-36(fp)
  int         current_offset;

  /*
   * First and foremost which sectors are affected?
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
  8527ac:	e03ff815 	stw	zero,-32(fp)
  8527b0:	00008306 	br	8529c0 <alt_epcs_flash_write+0x238>
  {
    /* Is it in this erase block region?*/
    if((offset >= flash_info->region_info[i].offset) &&
  8527b4:	e0fffc17 	ldw	r3,-16(fp)
  8527b8:	e0bff817 	ldw	r2,-32(fp)
  8527bc:	1004913a 	slli	r2,r2,4
  8527c0:	1885883a 	add	r2,r3,r2
  8527c4:	10800d04 	addi	r2,r2,52
  8527c8:	10800017 	ldw	r2,0(r2)
  8527cc:	e0fffd17 	ldw	r3,-12(fp)
  8527d0:	18807816 	blt	r3,r2,8529b4 <alt_epcs_flash_write+0x22c>
      (offset < (flash_info->region_info[i].offset +
  8527d4:	e0fffc17 	ldw	r3,-16(fp)
  8527d8:	e0bff817 	ldw	r2,-32(fp)
  8527dc:	1004913a 	slli	r2,r2,4
  8527e0:	1885883a 	add	r2,r3,r2
  8527e4:	10800d04 	addi	r2,r2,52
  8527e8:	10c00017 	ldw	r3,0(r2)
      flash_info->region_info[i].region_size)))
  8527ec:	e13ffc17 	ldw	r4,-16(fp)
  8527f0:	e0bff817 	ldw	r2,-32(fp)
  8527f4:	1004913a 	slli	r2,r2,4
  8527f8:	2085883a 	add	r2,r4,r2
  8527fc:	10800e04 	addi	r2,r2,56
  852800:	10800017 	ldw	r2,0(r2)
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
  {
    /* Is it in this erase block region?*/
    if((offset >= flash_info->region_info[i].offset) &&
      (offset < (flash_info->region_info[i].offset +
  852804:	1885883a 	add	r2,r3,r2
   * First and foremost which sectors are affected?
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
  {
    /* Is it in this erase block region?*/
    if((offset >= flash_info->region_info[i].offset) &&
  852808:	e0fffd17 	ldw	r3,-12(fp)
  85280c:	1880690e 	bge	r3,r2,8529b4 <alt_epcs_flash_write+0x22c>
      (offset < (flash_info->region_info[i].offset +
      flash_info->region_info[i].region_size)))
    {
      current_offset = flash_info->region_info[i].offset;
  852810:	e0fffc17 	ldw	r3,-16(fp)
  852814:	e0bff817 	ldw	r2,-32(fp)
  852818:	1004913a 	slli	r2,r2,4
  85281c:	1885883a 	add	r2,r3,r2
  852820:	10800d04 	addi	r2,r2,52
  852824:	10800017 	ldw	r2,0(r2)
  852828:	e0bffa15 	stw	r2,-24(fp)

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
  85282c:	e03ff915 	stw	zero,-28(fp)
  852830:	00005806 	br	852994 <alt_epcs_flash_write+0x20c>
      {
        if ((offset >= current_offset ) &&
  852834:	e0fffd17 	ldw	r3,-12(fp)
  852838:	e0bffa17 	ldw	r2,-24(fp)
  85283c:	18804916 	blt	r3,r2,852964 <alt_epcs_flash_write+0x1dc>
            (offset < (current_offset +
            flash_info->region_info[i].block_size)))
  852840:	e0fffc17 	ldw	r3,-16(fp)
  852844:	e0bff817 	ldw	r2,-32(fp)
  852848:	10800104 	addi	r2,r2,4
  85284c:	1004913a 	slli	r2,r2,4
  852850:	1885883a 	add	r2,r3,r2
  852854:	10c00017 	ldw	r3,0(r2)
      current_offset = flash_info->region_info[i].offset;

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
      {
        if ((offset >= current_offset ) &&
            (offset < (current_offset +
  852858:	e0bffa17 	ldw	r2,-24(fp)
  85285c:	1885883a 	add	r2,r3,r2
    {
      current_offset = flash_info->region_info[i].offset;

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
      {
        if ((offset >= current_offset ) &&
  852860:	e0fffd17 	ldw	r3,-12(fp)
  852864:	18803f0e 	bge	r3,r2,852964 <alt_epcs_flash_write+0x1dc>
        {
          /*
           * Check if the contents of the block are different
           * from the data we wish to put there
           */
          data_to_write = ( current_offset + flash_info->region_info[i].block_size
  852868:	e0fffc17 	ldw	r3,-16(fp)
  85286c:	e0bff817 	ldw	r2,-32(fp)
  852870:	10800104 	addi	r2,r2,4
  852874:	1004913a 	slli	r2,r2,4
  852878:	1885883a 	add	r2,r3,r2
  85287c:	10c00017 	ldw	r3,0(r2)
  852880:	e0bffa17 	ldw	r2,-24(fp)
  852884:	1887883a 	add	r3,r3,r2
  852888:	e0bffd17 	ldw	r2,-12(fp)
  85288c:	1885c83a 	sub	r2,r3,r2
  852890:	e0bffb15 	stw	r2,-20(fp)
                            - offset);
          data_to_write = MIN(data_to_write, length);
  852894:	e0fffb17 	ldw	r3,-20(fp)
  852898:	e0bfff17 	ldw	r2,-4(fp)
  85289c:	1880010e 	bge	r3,r2,8528a4 <alt_epcs_flash_write+0x11c>
  8528a0:	1805883a 	mov	r2,r3
  8528a4:	e0bffb15 	stw	r2,-20(fp)

          if(alt_epcs_flash_memcmp(flash_info, src_addr, offset, data_to_write))
  8528a8:	e0bffb17 	ldw	r2,-20(fp)
  8528ac:	100f883a 	mov	r7,r2
  8528b0:	e1bffd17 	ldw	r6,-12(fp)
  8528b4:	e17ffe17 	ldw	r5,-8(fp)
  8528b8:	e13ffc17 	ldw	r4,-16(fp)
  8528bc:	085269c0 	call	85269c <alt_epcs_flash_memcmp>
  8528c0:	10001226 	beq	r2,zero,85290c <alt_epcs_flash_write+0x184>
          {
            ret_code = (*flash_info->erase_block)(flash_info, current_offset);
  8528c4:	e0bffc17 	ldw	r2,-16(fp)
  8528c8:	10800817 	ldw	r2,32(r2)
  8528cc:	e17ffa17 	ldw	r5,-24(fp)
  8528d0:	e13ffc17 	ldw	r4,-16(fp)
  8528d4:	103ee83a 	callr	r2
  8528d8:	e0bff715 	stw	r2,-36(fp)

            if (!ret_code)
  8528dc:	e0bff717 	ldw	r2,-36(fp)
  8528e0:	10000a1e 	bne	r2,zero,85290c <alt_epcs_flash_write+0x184>
            {
              ret_code = (*flash_info->write_block)(
  8528e4:	e0bffc17 	ldw	r2,-16(fp)
  8528e8:	10800917 	ldw	r2,36(r2)
  8528ec:	e0fffb17 	ldw	r3,-20(fp)
  8528f0:	d8c00015 	stw	r3,0(sp)
  8528f4:	e1fffe17 	ldw	r7,-8(fp)
  8528f8:	e1bffd17 	ldw	r6,-12(fp)
  8528fc:	e17ffa17 	ldw	r5,-24(fp)
  852900:	e13ffc17 	ldw	r4,-16(fp)
  852904:	103ee83a 	callr	r2
  852908:	e0bff715 	stw	r2,-36(fp)
                                                  data_to_write);
            }
          }

          /* Was this the last block? */
          if ((length == data_to_write) || ret_code)
  85290c:	e0ffff17 	ldw	r3,-4(fp)
  852910:	e0bffb17 	ldw	r2,-20(fp)
  852914:	18802e26 	beq	r3,r2,8529d0 <alt_epcs_flash_write+0x248>
  852918:	e0bff717 	ldw	r2,-36(fp)
  85291c:	10002c1e 	bne	r2,zero,8529d0 <alt_epcs_flash_write+0x248>
          {
            goto finished;
          }

          length -= data_to_write;
  852920:	e0ffff17 	ldw	r3,-4(fp)
  852924:	e0bffb17 	ldw	r2,-20(fp)
  852928:	1885c83a 	sub	r2,r3,r2
  85292c:	e0bfff15 	stw	r2,-4(fp)
          offset = current_offset + flash_info->region_info[i].block_size;
  852930:	e0fffc17 	ldw	r3,-16(fp)
  852934:	e0bff817 	ldw	r2,-32(fp)
  852938:	10800104 	addi	r2,r2,4
  85293c:	1004913a 	slli	r2,r2,4
  852940:	1885883a 	add	r2,r3,r2
  852944:	10c00017 	ldw	r3,0(r2)
  852948:	e0bffa17 	ldw	r2,-24(fp)
  85294c:	1885883a 	add	r2,r3,r2
  852950:	e0bffd15 	stw	r2,-12(fp)
          src_addr = (alt_u8*)src_addr + data_to_write;
  852954:	e0bffb17 	ldw	r2,-20(fp)
  852958:	e0fffe17 	ldw	r3,-8(fp)
  85295c:	1885883a 	add	r2,r3,r2
  852960:	e0bffe15 	stw	r2,-8(fp)
        }
        current_offset += flash_info->region_info[i].block_size;
  852964:	e0fffc17 	ldw	r3,-16(fp)
  852968:	e0bff817 	ldw	r2,-32(fp)
  85296c:	10800104 	addi	r2,r2,4
  852970:	1004913a 	slli	r2,r2,4
  852974:	1885883a 	add	r2,r3,r2
  852978:	10800017 	ldw	r2,0(r2)
  85297c:	e0fffa17 	ldw	r3,-24(fp)
  852980:	1885883a 	add	r2,r3,r2
  852984:	e0bffa15 	stw	r2,-24(fp)
      (offset < (flash_info->region_info[i].offset +
      flash_info->region_info[i].region_size)))
    {
      current_offset = flash_info->region_info[i].offset;

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
  852988:	e0bff917 	ldw	r2,-28(fp)
  85298c:	10800044 	addi	r2,r2,1
  852990:	e0bff915 	stw	r2,-28(fp)
  852994:	e0fffc17 	ldw	r3,-16(fp)
  852998:	e0bff817 	ldw	r2,-32(fp)
  85299c:	1004913a 	slli	r2,r2,4
  8529a0:	1885883a 	add	r2,r3,r2
  8529a4:	10800f04 	addi	r2,r2,60
  8529a8:	10800017 	ldw	r2,0(r2)
  8529ac:	e0fff917 	ldw	r3,-28(fp)
  8529b0:	18bfa016 	blt	r3,r2,852834 <__alt_mem_epcs_flash_controller_0+0xff849834>
  int         current_offset;

  /*
   * First and foremost which sectors are affected?
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
  8529b4:	e0bff817 	ldw	r2,-32(fp)
  8529b8:	10800044 	addi	r2,r2,1
  8529bc:	e0bff815 	stw	r2,-32(fp)
  8529c0:	e0bffc17 	ldw	r2,-16(fp)
  8529c4:	10800c17 	ldw	r2,48(r2)
  8529c8:	e0fff817 	ldw	r3,-32(fp)
  8529cc:	18bf7916 	blt	r3,r2,8527b4 <__alt_mem_epcs_flash_controller_0+0xff8497b4>
      }
    }
  }

finished:
  return ret_code;
  8529d0:	e0bff717 	ldw	r2,-36(fp)
}
  8529d4:	e037883a 	mov	sp,fp
  8529d8:	dfc00117 	ldw	ra,4(sp)
  8529dc:	df000017 	ldw	fp,0(sp)
  8529e0:	dec00204 	addi	sp,sp,8
  8529e4:	f800283a 	ret

008529e8 <alt_epcs_flash_get_info>:
 *
 *  Pass the table of erase blocks to the user
 */
int alt_epcs_flash_get_info(alt_flash_fd* fd, flash_region** info,
                            int* number_of_regions)
{
  8529e8:	defffa04 	addi	sp,sp,-24
  8529ec:	df000515 	stw	fp,20(sp)
  8529f0:	df000504 	addi	fp,sp,20
  8529f4:	e13ffd15 	stw	r4,-12(fp)
  8529f8:	e17ffe15 	stw	r5,-8(fp)
  8529fc:	e1bfff15 	stw	r6,-4(fp)
  int ret_code = 0;
  852a00:	e03ffb15 	stw	zero,-20(fp)

  alt_flash_dev* flash = (alt_flash_dev*)fd;
  852a04:	e0bffd17 	ldw	r2,-12(fp)
  852a08:	e0bffc15 	stw	r2,-16(fp)

  *number_of_regions = flash->number_of_regions;
  852a0c:	e0bffc17 	ldw	r2,-16(fp)
  852a10:	10c00c17 	ldw	r3,48(r2)
  852a14:	e0bfff17 	ldw	r2,-4(fp)
  852a18:	10c00015 	stw	r3,0(r2)

  if (!flash->number_of_regions)
  852a1c:	e0bffc17 	ldw	r2,-16(fp)
  852a20:	10800c17 	ldw	r2,48(r2)
  852a24:	1000031e 	bne	r2,zero,852a34 <alt_epcs_flash_get_info+0x4c>
  {
    ret_code = -EIO;
  852a28:	00bffec4 	movi	r2,-5
  852a2c:	e0bffb15 	stw	r2,-20(fp)
  852a30:	00000b06 	br	852a60 <alt_epcs_flash_get_info+0x78>
  }
  else if (flash->number_of_regions > ALT_MAX_NUMBER_OF_FLASH_REGIONS)
  852a34:	e0bffc17 	ldw	r2,-16(fp)
  852a38:	10800c17 	ldw	r2,48(r2)
  852a3c:	10800250 	cmplti	r2,r2,9
  852a40:	1000031e 	bne	r2,zero,852a50 <alt_epcs_flash_get_info+0x68>
  {
    ret_code = -ENOMEM;
  852a44:	00bffd04 	movi	r2,-12
  852a48:	e0bffb15 	stw	r2,-20(fp)
  852a4c:	00000406 	br	852a60 <alt_epcs_flash_get_info+0x78>
  }
  else
  {
    *info = &flash->region_info[0];
  852a50:	e0bffc17 	ldw	r2,-16(fp)
  852a54:	10c00d04 	addi	r3,r2,52
  852a58:	e0bffe17 	ldw	r2,-8(fp)
  852a5c:	10c00015 	stw	r3,0(r2)
  }

  return ret_code;
  852a60:	e0bffb17 	ldw	r2,-20(fp)
}
  852a64:	e037883a 	mov	sp,fp
  852a68:	df000017 	ldw	fp,0(sp)
  852a6c:	dec00104 	addi	sp,sp,4
  852a70:	f800283a 	ret

00852a74 <alt_epcs_test_address>:


/* This might be a candidate for optimization.  Precompute the last-address? */
static ALT_INLINE int alt_epcs_test_address(alt_flash_dev* flash_info, int offset)
{
  852a74:	defff904 	addi	sp,sp,-28
  852a78:	df000615 	stw	fp,24(sp)
  852a7c:	df000604 	addi	fp,sp,24
  852a80:	e13ffe15 	stw	r4,-8(fp)
  852a84:	e17fff15 	stw	r5,-4(fp)
  int ret_code = 0;
  852a88:	e03ffa15 	stw	zero,-24(fp)
  /* Error checking:
   * if the block offset is outside of the memory, return -EIO.
   */
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
  852a8c:	e0bffe17 	ldw	r2,-8(fp)
  852a90:	e0bffb15 	stw	r2,-20(fp)

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
  852a94:	e0bffb17 	ldw	r2,-20(fp)
  852a98:	10800c17 	ldw	r2,48(r2)
  852a9c:	10bfffc4 	addi	r2,r2,-1
  852aa0:	e0bffc15 	stw	r2,-16(fp)
  alt_u32 last_device_address =
    -1 +
    f->dev.region_info[last_region_index].offset +
  852aa4:	e0fffb17 	ldw	r3,-20(fp)
  852aa8:	e0bffc17 	ldw	r2,-16(fp)
  852aac:	1004913a 	slli	r2,r2,4
  852ab0:	1885883a 	add	r2,r3,r2
  852ab4:	10800d04 	addi	r2,r2,52
  852ab8:	10800017 	ldw	r2,0(r2)
   */
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
  alt_u32 last_device_address =
    -1 +
  852abc:	10ffffc4 	addi	r3,r2,-1
    f->dev.region_info[last_region_index].offset +
    f->dev.region_info[last_region_index].region_size;
  852ac0:	e13ffb17 	ldw	r4,-20(fp)
  852ac4:	e0bffc17 	ldw	r2,-16(fp)
  852ac8:	1004913a 	slli	r2,r2,4
  852acc:	2085883a 	add	r2,r4,r2
  852ad0:	10800e04 	addi	r2,r2,56
  852ad4:	10800017 	ldw	r2,0(r2)
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
  alt_u32 last_device_address =
    -1 +
    f->dev.region_info[last_region_index].offset +
  852ad8:	1885883a 	add	r2,r3,r2
   * if the block offset is outside of the memory, return -EIO.
   */
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
  alt_u32 last_device_address =
  852adc:	e0bffd15 	stw	r2,-12(fp)
    -1 +
    f->dev.region_info[last_region_index].offset +
    f->dev.region_info[last_region_index].region_size;

  if (offset > last_device_address)
  852ae0:	e0bfff17 	ldw	r2,-4(fp)
  852ae4:	e0fffd17 	ldw	r3,-12(fp)
  852ae8:	1880022e 	bgeu	r3,r2,852af4 <alt_epcs_test_address+0x80>
  {
    /* Someone tried to erase a block outside of this device's range. */
    ret_code = -EIO;
  852aec:	00bffec4 	movi	r2,-5
  852af0:	e0bffa15 	stw	r2,-24(fp)
  }
  return ret_code;
  852af4:	e0bffa17 	ldw	r2,-24(fp)
}
  852af8:	e037883a 	mov	sp,fp
  852afc:	df000017 	ldw	fp,0(sp)
  852b00:	dec00104 	addi	sp,sp,4
  852b04:	f800283a 	ret

00852b08 <alt_epcs_flash_erase_block>:
 *
 * Erase the selected erase block ("sector erase", from the POV
 * of the EPCS data sheet).
 */
int alt_epcs_flash_erase_block(alt_flash_dev* flash_info, int block_offset)
{
  852b08:	defffa04 	addi	sp,sp,-24
  852b0c:	dfc00515 	stw	ra,20(sp)
  852b10:	df000415 	stw	fp,16(sp)
  852b14:	df000404 	addi	fp,sp,16
  852b18:	e13ffe15 	stw	r4,-8(fp)
  852b1c:	e17fff15 	stw	r5,-4(fp)
  int ret_code = 0;
  852b20:	e03ffc15 	stw	zero,-16(fp)
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
  852b24:	e0bffe17 	ldw	r2,-8(fp)
  852b28:	e0bffd15 	stw	r2,-12(fp)

  ret_code = alt_epcs_test_address(flash_info, block_offset);
  852b2c:	e17fff17 	ldw	r5,-4(fp)
  852b30:	e13ffe17 	ldw	r4,-8(fp)
  852b34:	0852a740 	call	852a74 <alt_epcs_test_address>
  852b38:	e0bffc15 	stw	r2,-16(fp)

  if (ret_code >= 0)
  852b3c:	e0bffc17 	ldw	r2,-16(fp)
  852b40:	10000916 	blt	r2,zero,852b68 <alt_epcs_flash_erase_block+0x60>
  {
    /* Send the Sector Erase command, whose 3 address bytes are anywhere
     * within the chosen sector.
     */
    epcs_sector_erase(f->register_base, block_offset, f->four_bytes_mode);
  852b44:	e0bffd17 	ldw	r2,-12(fp)
  852b48:	10c02e17 	ldw	r3,184(r2)
  852b4c:	e13fff17 	ldw	r4,-4(fp)
  852b50:	e0bffd17 	ldw	r2,-12(fp)
  852b54:	10803217 	ldw	r2,200(r2)
  852b58:	100d883a 	mov	r6,r2
  852b5c:	200b883a 	mov	r5,r4
  852b60:	1809883a 	mov	r4,r3
  852b64:	0854be00 	call	854be0 <epcs_sector_erase>
  }
  return ret_code;
  852b68:	e0bffc17 	ldw	r2,-16(fp)
}
  852b6c:	e037883a 	mov	sp,fp
  852b70:	dfc00117 	ldw	ra,4(sp)
  852b74:	df000017 	ldw	fp,0(sp)
  852b78:	dec00204 	addi	sp,sp,8
  852b7c:	f800283a 	ret

00852b80 <alt_epcs_flash_write_block>:
 * function type compatibility.
 */
int alt_epcs_flash_write_block(alt_flash_dev* flash_info, int block_offset,
                                      int data_offset, const void* data,
                                      int length)
{
  852b80:	defff404 	addi	sp,sp,-48
  852b84:	dfc00b15 	stw	ra,44(sp)
  852b88:	df000a15 	stw	fp,40(sp)
  852b8c:	df000a04 	addi	fp,sp,40
  852b90:	e13ffc15 	stw	r4,-16(fp)
  852b94:	e17ffd15 	stw	r5,-12(fp)
  852b98:	e1bffe15 	stw	r6,-8(fp)
  852b9c:	e1ffff15 	stw	r7,-4(fp)
  int ret_code;
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
  852ba0:	e0bffc17 	ldw	r2,-16(fp)
  852ba4:	e0bff815 	stw	r2,-32(fp)

  int buffer_offset = 0;
  852ba8:	e03ff715 	stw	zero,-36(fp)
  int length_of_current_write;
  ret_code = alt_epcs_test_address(flash_info, data_offset);
  852bac:	e17ffe17 	ldw	r5,-8(fp)
  852bb0:	e13ffc17 	ldw	r4,-16(fp)
  852bb4:	0852a740 	call	852a74 <alt_epcs_test_address>
  852bb8:	e0bff915 	stw	r2,-28(fp)

  if (ret_code >= 0)
  852bbc:	e0bff917 	ldw	r2,-28(fp)
  852bc0:	10002916 	blt	r2,zero,852c68 <alt_epcs_flash_write_block+0xe8>
  {

    /* "Block" writes must be broken up into the page writes that
     * the device understands.  Partial page writes are allowed.
     */
    while (length)
  852bc4:	00002606 	br	852c60 <alt_epcs_flash_write_block+0xe0>
    {
      int next_page_start = (data_offset + f->page_size) & ~(f->page_size - 1);
  852bc8:	e0bff817 	ldw	r2,-32(fp)
  852bcc:	10c03117 	ldw	r3,196(r2)
  852bd0:	e0bffe17 	ldw	r2,-8(fp)
  852bd4:	1887883a 	add	r3,r3,r2
  852bd8:	e0bff817 	ldw	r2,-32(fp)
  852bdc:	10803117 	ldw	r2,196(r2)
  852be0:	0085c83a 	sub	r2,zero,r2
  852be4:	1884703a 	and	r2,r3,r2
  852be8:	e0bffa15 	stw	r2,-24(fp)
      length_of_current_write = MIN(length, next_page_start - data_offset);
  852bec:	e0fffa17 	ldw	r3,-24(fp)
  852bf0:	e0bffe17 	ldw	r2,-8(fp)
  852bf4:	1885c83a 	sub	r2,r3,r2
  852bf8:	e0c00217 	ldw	r3,8(fp)
  852bfc:	1880010e 	bge	r3,r2,852c04 <alt_epcs_flash_write_block+0x84>
  852c00:	1805883a 	mov	r2,r3
  852c04:	e0bffb15 	stw	r2,-20(fp)

      epcs_write_buffer(f->register_base, data_offset, &((const alt_u8*)data)[buffer_offset], length_of_current_write,
  852c08:	e0bff817 	ldw	r2,-32(fp)
  852c0c:	11002e17 	ldw	r4,184(r2)
  852c10:	e0bff717 	ldw	r2,-36(fp)
  852c14:	e0ffff17 	ldw	r3,-4(fp)
  852c18:	1887883a 	add	r3,r3,r2
  852c1c:	e0bff817 	ldw	r2,-32(fp)
  852c20:	10803217 	ldw	r2,200(r2)
  852c24:	d8800015 	stw	r2,0(sp)
  852c28:	e1fffb17 	ldw	r7,-20(fp)
  852c2c:	180d883a 	mov	r6,r3
  852c30:	e17ffe17 	ldw	r5,-8(fp)
  852c34:	0854e900 	call	854e90 <epcs_write_buffer>
          f->four_bytes_mode);

      length -= length_of_current_write;
  852c38:	e0c00217 	ldw	r3,8(fp)
  852c3c:	e0bffb17 	ldw	r2,-20(fp)
  852c40:	1885c83a 	sub	r2,r3,r2
  852c44:	e0800215 	stw	r2,8(fp)
      buffer_offset += length_of_current_write;
  852c48:	e0fff717 	ldw	r3,-36(fp)
  852c4c:	e0bffb17 	ldw	r2,-20(fp)
  852c50:	1885883a 	add	r2,r3,r2
  852c54:	e0bff715 	stw	r2,-36(fp)
      data_offset = next_page_start;
  852c58:	e0bffa17 	ldw	r2,-24(fp)
  852c5c:	e0bffe15 	stw	r2,-8(fp)
  {

    /* "Block" writes must be broken up into the page writes that
     * the device understands.  Partial page writes are allowed.
     */
    while (length)
  852c60:	e0800217 	ldw	r2,8(fp)
  852c64:	103fd81e 	bne	r2,zero,852bc8 <__alt_mem_epcs_flash_controller_0+0xff849bc8>
      length -= length_of_current_write;
      buffer_offset += length_of_current_write;
      data_offset = next_page_start;
    }
  }
  return ret_code;
  852c68:	e0bff917 	ldw	r2,-28(fp)
}
  852c6c:	e037883a 	mov	sp,fp
  852c70:	dfc00117 	ldw	ra,4(sp)
  852c74:	df000017 	ldw	fp,0(sp)
  852c78:	dec00204 	addi	sp,sp,8
  852c7c:	f800283a 	ret

00852c80 <alt_epcs_flash_read>:
 *  to the beginning.  Reads that start beyond the end of the memory are
 *  flagged as errors with EIO (is there a better error code?).
 */
int alt_epcs_flash_read(alt_flash_dev* flash_info, int offset,
                        void* dest_addr, int length)
{
  852c80:	defff704 	addi	sp,sp,-36
  852c84:	dfc00815 	stw	ra,32(sp)
  852c88:	df000715 	stw	fp,28(sp)
  852c8c:	df000704 	addi	fp,sp,28
  852c90:	e13ffc15 	stw	r4,-16(fp)
  852c94:	e17ffd15 	stw	r5,-12(fp)
  852c98:	e1bffe15 	stw	r6,-8(fp)
  852c9c:	e1ffff15 	stw	r7,-4(fp)
  int ret_code = 0;
  852ca0:	e03ffa15 	stw	zero,-24(fp)

  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
  852ca4:	e0bffc17 	ldw	r2,-16(fp)
  852ca8:	e0bffb15 	stw	r2,-20(fp)

  ret_code = alt_epcs_test_address(flash_info, offset);
  852cac:	e17ffd17 	ldw	r5,-12(fp)
  852cb0:	e13ffc17 	ldw	r4,-16(fp)
  852cb4:	0852a740 	call	852a74 <alt_epcs_test_address>
  852cb8:	e0bffa15 	stw	r2,-24(fp)

  if (ret_code >= 0)
  852cbc:	e0bffa17 	ldw	r2,-24(fp)
  852cc0:	10000f16 	blt	r2,zero,852d00 <alt_epcs_flash_read+0x80>
  {
    ret_code = epcs_read_buffer(f->register_base, offset, dest_addr, length,
  852cc4:	e0bffb17 	ldw	r2,-20(fp)
  852cc8:	10c02e17 	ldw	r3,184(r2)
  852ccc:	e0bffb17 	ldw	r2,-20(fp)
  852cd0:	10803217 	ldw	r2,200(r2)
  852cd4:	d8800015 	stw	r2,0(sp)
  852cd8:	e1ffff17 	ldw	r7,-4(fp)
  852cdc:	e1bffe17 	ldw	r6,-8(fp)
  852ce0:	e17ffd17 	ldw	r5,-12(fp)
  852ce4:	1809883a 	mov	r4,r3
  852ce8:	0854cdc0 	call	854cdc <epcs_read_buffer>
  852cec:	e0bffa15 	stw	r2,-24(fp)
                                f->four_bytes_mode);

    /* epcs_read_buffer returns the number of buffers read, but
     * alt_epcs_flash_read returns 0 on success, <0 on failure.
     */
    if (ret_code == length)
  852cf0:	e0fffa17 	ldw	r3,-24(fp)
  852cf4:	e0bfff17 	ldw	r2,-4(fp)
  852cf8:	1880011e 	bne	r3,r2,852d00 <alt_epcs_flash_read+0x80>
    {
      ret_code = 0;
  852cfc:	e03ffa15 	stw	zero,-24(fp)
    }
  }
  return ret_code;
  852d00:	e0bffa17 	ldw	r2,-24(fp)
}
  852d04:	e037883a 	mov	sp,fp
  852d08:	dfc00117 	ldw	ra,4(sp)
  852d0c:	df000017 	ldw	fp,0(sp)
  852d10:	dec00204 	addi	sp,sp,8
  852d14:	f800283a 	ret

00852d18 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  852d18:	defffa04 	addi	sp,sp,-24
  852d1c:	dfc00515 	stw	ra,20(sp)
  852d20:	df000415 	stw	fp,16(sp)
  852d24:	df000404 	addi	fp,sp,16
  852d28:	e13ffd15 	stw	r4,-12(fp)
  852d2c:	e17ffe15 	stw	r5,-8(fp)
  852d30:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  852d34:	e0bffd17 	ldw	r2,-12(fp)
  852d38:	10800017 	ldw	r2,0(r2)
  852d3c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  852d40:	e0bffc17 	ldw	r2,-16(fp)
  852d44:	10c00a04 	addi	r3,r2,40
  852d48:	e0bffd17 	ldw	r2,-12(fp)
  852d4c:	10800217 	ldw	r2,8(r2)
  852d50:	100f883a 	mov	r7,r2
  852d54:	e1bfff17 	ldw	r6,-4(fp)
  852d58:	e17ffe17 	ldw	r5,-8(fp)
  852d5c:	1809883a 	mov	r4,r3
  852d60:	08534c40 	call	8534c4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  852d64:	e037883a 	mov	sp,fp
  852d68:	dfc00117 	ldw	ra,4(sp)
  852d6c:	df000017 	ldw	fp,0(sp)
  852d70:	dec00204 	addi	sp,sp,8
  852d74:	f800283a 	ret

00852d78 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  852d78:	defffa04 	addi	sp,sp,-24
  852d7c:	dfc00515 	stw	ra,20(sp)
  852d80:	df000415 	stw	fp,16(sp)
  852d84:	df000404 	addi	fp,sp,16
  852d88:	e13ffd15 	stw	r4,-12(fp)
  852d8c:	e17ffe15 	stw	r5,-8(fp)
  852d90:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  852d94:	e0bffd17 	ldw	r2,-12(fp)
  852d98:	10800017 	ldw	r2,0(r2)
  852d9c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  852da0:	e0bffc17 	ldw	r2,-16(fp)
  852da4:	10c00a04 	addi	r3,r2,40
  852da8:	e0bffd17 	ldw	r2,-12(fp)
  852dac:	10800217 	ldw	r2,8(r2)
  852db0:	100f883a 	mov	r7,r2
  852db4:	e1bfff17 	ldw	r6,-4(fp)
  852db8:	e17ffe17 	ldw	r5,-8(fp)
  852dbc:	1809883a 	mov	r4,r3
  852dc0:	08537800 	call	853780 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  852dc4:	e037883a 	mov	sp,fp
  852dc8:	dfc00117 	ldw	ra,4(sp)
  852dcc:	df000017 	ldw	fp,0(sp)
  852dd0:	dec00204 	addi	sp,sp,8
  852dd4:	f800283a 	ret

00852dd8 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  852dd8:	defffc04 	addi	sp,sp,-16
  852ddc:	dfc00315 	stw	ra,12(sp)
  852de0:	df000215 	stw	fp,8(sp)
  852de4:	df000204 	addi	fp,sp,8
  852de8:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  852dec:	e0bfff17 	ldw	r2,-4(fp)
  852df0:	10800017 	ldw	r2,0(r2)
  852df4:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  852df8:	e0bffe17 	ldw	r2,-8(fp)
  852dfc:	10c00a04 	addi	r3,r2,40
  852e00:	e0bfff17 	ldw	r2,-4(fp)
  852e04:	10800217 	ldw	r2,8(r2)
  852e08:	100b883a 	mov	r5,r2
  852e0c:	1809883a 	mov	r4,r3
  852e10:	085336c0 	call	85336c <altera_avalon_jtag_uart_close>
}
  852e14:	e037883a 	mov	sp,fp
  852e18:	dfc00117 	ldw	ra,4(sp)
  852e1c:	df000017 	ldw	fp,0(sp)
  852e20:	dec00204 	addi	sp,sp,8
  852e24:	f800283a 	ret

00852e28 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  852e28:	defffa04 	addi	sp,sp,-24
  852e2c:	dfc00515 	stw	ra,20(sp)
  852e30:	df000415 	stw	fp,16(sp)
  852e34:	df000404 	addi	fp,sp,16
  852e38:	e13ffd15 	stw	r4,-12(fp)
  852e3c:	e17ffe15 	stw	r5,-8(fp)
  852e40:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  852e44:	e0bffd17 	ldw	r2,-12(fp)
  852e48:	10800017 	ldw	r2,0(r2)
  852e4c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  852e50:	e0bffc17 	ldw	r2,-16(fp)
  852e54:	10800a04 	addi	r2,r2,40
  852e58:	e1bfff17 	ldw	r6,-4(fp)
  852e5c:	e17ffe17 	ldw	r5,-8(fp)
  852e60:	1009883a 	mov	r4,r2
  852e64:	08533d40 	call	8533d4 <altera_avalon_jtag_uart_ioctl>
}
  852e68:	e037883a 	mov	sp,fp
  852e6c:	dfc00117 	ldw	ra,4(sp)
  852e70:	df000017 	ldw	fp,0(sp)
  852e74:	dec00204 	addi	sp,sp,8
  852e78:	f800283a 	ret

00852e7c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  852e7c:	defff104 	addi	sp,sp,-60
  852e80:	dfc00e15 	stw	ra,56(sp)
  852e84:	df000d15 	stw	fp,52(sp)
  852e88:	df000d04 	addi	fp,sp,52
  852e8c:	e13ff915 	stw	r4,-28(fp)
  852e90:	e17ffa15 	stw	r5,-24(fp)
  852e94:	e1bffb15 	stw	r6,-20(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  852e98:	e0bff917 	ldw	r2,-28(fp)
  852e9c:	10800c04 	addi	r2,r2,48
  852ea0:	e0bff415 	stw	r2,-48(fp)
  852ea4:	e03ff80d 	sth	zero,-32(fp)

static ALT_INLINE int ALT_ALWAYS_INLINE alt_flag_create (OS_FLAG_GRP** pgroup, 
               OS_FLAGS flags)
{
  INT8U err;
  *pgroup = OSFlagCreate (flags, &err);
  852ea8:	e0bff80b 	ldhu	r2,-32(fp)
  852eac:	e0fff884 	addi	r3,fp,-30
  852eb0:	180b883a 	mov	r5,r3
  852eb4:	1009883a 	mov	r4,r2
  852eb8:	084cda80 	call	84cda8 <OSFlagCreate>
  852ebc:	1007883a 	mov	r3,r2
  852ec0:	e0bff417 	ldw	r2,-48(fp)
  852ec4:	10c00015 	stw	r3,0(r2)
  ALT_SEM_CREATE(&sp->read_lock, 1);
  852ec8:	e0bff917 	ldw	r2,-28(fp)
  852ecc:	10800a04 	addi	r2,r2,40
  852ed0:	e0bff515 	stw	r2,-44(fp)
  852ed4:	00800044 	movi	r2,1
  852ed8:	e0bff78d 	sth	r2,-34(fp)
  852edc:	e0bff78b 	ldhu	r2,-34(fp)
  852ee0:	1009883a 	mov	r4,r2
  852ee4:	084fac80 	call	84fac8 <OSSemCreate>
  852ee8:	1007883a 	mov	r3,r2
  852eec:	e0bff517 	ldw	r2,-44(fp)
  852ef0:	10c00015 	stw	r3,0(r2)
  ALT_SEM_CREATE(&sp->write_lock, 1);
  852ef4:	e0bff917 	ldw	r2,-28(fp)
  852ef8:	10800b04 	addi	r2,r2,44
  852efc:	e0bff615 	stw	r2,-40(fp)
  852f00:	00800044 	movi	r2,1
  852f04:	e0bff70d 	sth	r2,-36(fp)
  852f08:	e0bff70b 	ldhu	r2,-36(fp)
  852f0c:	1009883a 	mov	r4,r2
  852f10:	084fac80 	call	84fac8 <OSSemCreate>
  852f14:	1007883a 	mov	r3,r2
  852f18:	e0bff617 	ldw	r2,-40(fp)
  852f1c:	10c00015 	stw	r3,0(r2)

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  852f20:	e0bff917 	ldw	r2,-28(fp)
  852f24:	00c00044 	movi	r3,1
  852f28:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  852f2c:	e0bff917 	ldw	r2,-28(fp)
  852f30:	10800017 	ldw	r2,0(r2)
  852f34:	10800104 	addi	r2,r2,4
  852f38:	1007883a 	mov	r3,r2
  852f3c:	e0bff917 	ldw	r2,-28(fp)
  852f40:	10800817 	ldw	r2,32(r2)
  852f44:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  852f48:	e0bffa17 	ldw	r2,-24(fp)
  852f4c:	e0fffb17 	ldw	r3,-20(fp)
  852f50:	d8000015 	stw	zero,0(sp)
  852f54:	e1fff917 	ldw	r7,-28(fp)
  852f58:	01802174 	movhi	r6,133
  852f5c:	318bf104 	addi	r6,r6,12228
  852f60:	180b883a 	mov	r5,r3
  852f64:	1009883a 	mov	r4,r2
  852f68:	0849ac00 	call	849ac0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  852f6c:	e0bff917 	ldw	r2,-28(fp)
  852f70:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  852f74:	e0bff917 	ldw	r2,-28(fp)
  852f78:	10800204 	addi	r2,r2,8
  852f7c:	d0e0aa17 	ldw	r3,-32088(gp)
  852f80:	e1fff917 	ldw	r7,-28(fp)
  852f84:	01802174 	movhi	r6,133
  852f88:	318c9a04 	addi	r6,r6,12904
  852f8c:	180b883a 	mov	r5,r3
  852f90:	1009883a 	mov	r4,r2
  852f94:	0855d440 	call	855d44 <alt_alarm_start>
  852f98:	1000040e 	bge	r2,zero,852fac <altera_avalon_jtag_uart_init+0x130>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  852f9c:	e0fff917 	ldw	r3,-28(fp)
  852fa0:	00a00034 	movhi	r2,32768
  852fa4:	10bfffc4 	addi	r2,r2,-1
  852fa8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  852fac:	0001883a 	nop
  852fb0:	e037883a 	mov	sp,fp
  852fb4:	dfc00117 	ldw	ra,4(sp)
  852fb8:	df000017 	ldw	fp,0(sp)
  852fbc:	dec00204 	addi	sp,sp,8
  852fc0:	f800283a 	ret

00852fc4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  852fc4:	defff204 	addi	sp,sp,-56
  852fc8:	dfc00d15 	stw	ra,52(sp)
  852fcc:	df000c15 	stw	fp,48(sp)
  852fd0:	df000c04 	addi	fp,sp,48
  852fd4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  852fd8:	e0bfff17 	ldw	r2,-4(fp)
  852fdc:	e0bff615 	stw	r2,-40(fp)
  unsigned int base = sp->base;
  852fe0:	e0bff617 	ldw	r2,-40(fp)
  852fe4:	10800017 	ldw	r2,0(r2)
  852fe8:	e0bff715 	stw	r2,-36(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  852fec:	e0bff717 	ldw	r2,-36(fp)
  852ff0:	10800104 	addi	r2,r2,4
  852ff4:	10800037 	ldwio	r2,0(r2)
  852ff8:	e0bff815 	stw	r2,-32(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  852ffc:	e0bff817 	ldw	r2,-32(fp)
  853000:	1080c00c 	andi	r2,r2,768
  853004:	10009126 	beq	r2,zero,85324c <altera_avalon_jtag_uart_irq+0x288>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  853008:	e0bff817 	ldw	r2,-32(fp)
  85300c:	1080400c 	andi	r2,r2,256
  853010:	10004726 	beq	r2,zero,853130 <altera_avalon_jtag_uart_irq+0x16c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  853014:	00800074 	movhi	r2,1
  853018:	e0bff415 	stw	r2,-48(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  85301c:	e0bff617 	ldw	r2,-40(fp)
  853020:	10800d17 	ldw	r2,52(r2)
  853024:	10800044 	addi	r2,r2,1
  853028:	1081ffcc 	andi	r2,r2,2047
  85302c:	e0bff915 	stw	r2,-28(fp)
        if (next == sp->rx_out)
  853030:	e0bff617 	ldw	r2,-40(fp)
  853034:	10c00e17 	ldw	r3,56(r2)
  853038:	e0bff917 	ldw	r2,-28(fp)
  85303c:	18802726 	beq	r3,r2,8530dc <altera_avalon_jtag_uart_irq+0x118>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  853040:	e0bff717 	ldw	r2,-36(fp)
  853044:	10800037 	ldwio	r2,0(r2)
  853048:	e0bff415 	stw	r2,-48(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  85304c:	e0bff417 	ldw	r2,-48(fp)
  853050:	10a0000c 	andi	r2,r2,32768
  853054:	10002326 	beq	r2,zero,8530e4 <altera_avalon_jtag_uart_irq+0x120>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  853058:	e0bff617 	ldw	r2,-40(fp)
  85305c:	10800d17 	ldw	r2,52(r2)
  853060:	e0fff417 	ldw	r3,-48(fp)
  853064:	1809883a 	mov	r4,r3
  853068:	e0fff617 	ldw	r3,-40(fp)
  85306c:	1885883a 	add	r2,r3,r2
  853070:	10801104 	addi	r2,r2,68
  853074:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  853078:	e0bff617 	ldw	r2,-40(fp)
  85307c:	10800d17 	ldw	r2,52(r2)
  853080:	10800044 	addi	r2,r2,1
  853084:	10c1ffcc 	andi	r3,r2,2047
  853088:	e0bff617 	ldw	r2,-40(fp)
  85308c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
  853090:	e0bff617 	ldw	r2,-40(fp)
  853094:	10800c17 	ldw	r2,48(r2)
  853098:	e0bffb15 	stw	r2,-20(fp)
  85309c:	00800044 	movi	r2,1
  8530a0:	e0bffc0d 	sth	r2,-16(fp)
  8530a4:	00800044 	movi	r2,1
  8530a8:	e0bffc85 	stb	r2,-14(fp)
                   OS_FLAGS     flags, 
                   INT8U        opt)
{
  INT8U err;

  if (OSRunning)
  8530ac:	d0a09543 	ldbu	r2,-32171(gp)
  8530b0:	10803fcc 	andi	r2,r2,255
  8530b4:	103fd926 	beq	r2,zero,85301c <__alt_mem_epcs_flash_controller_0+0xff84a01c>
  {
    OSFlagPost (group, flags, opt, &err);
  8530b8:	e0bffc0b 	ldhu	r2,-16(fp)
  8530bc:	e0fffc83 	ldbu	r3,-14(fp)
  8530c0:	e13ffdc4 	addi	r4,fp,-9
  8530c4:	200f883a 	mov	r7,r4
  8530c8:	180d883a 	mov	r6,r3
  8530cc:	100b883a 	mov	r5,r2
  8530d0:	e13ffb17 	ldw	r4,-20(fp)
  8530d4:	084d9840 	call	84d984 <OSFlagPost>
      }
  8530d8:	003fd006 	br	85301c <__alt_mem_epcs_flash_controller_0+0xff84a01c>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  8530dc:	0001883a 	nop
  8530e0:	00000106 	br	8530e8 <altera_avalon_jtag_uart_irq+0x124>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  8530e4:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  8530e8:	e0bff417 	ldw	r2,-48(fp)
  8530ec:	10bfffec 	andhi	r2,r2,65535
  8530f0:	10000f26 	beq	r2,zero,853130 <altera_avalon_jtag_uart_irq+0x16c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  8530f4:	e0bff617 	ldw	r2,-40(fp)
  8530f8:	10c00817 	ldw	r3,32(r2)
  8530fc:	00bfff84 	movi	r2,-2
  853100:	1886703a 	and	r3,r3,r2
  853104:	e0bff617 	ldw	r2,-40(fp)
  853108:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  85310c:	e0bff717 	ldw	r2,-36(fp)
  853110:	10800104 	addi	r2,r2,4
  853114:	1007883a 	mov	r3,r2
  853118:	e0bff617 	ldw	r2,-40(fp)
  85311c:	10800817 	ldw	r2,32(r2)
  853120:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  853124:	e0bff717 	ldw	r2,-36(fp)
  853128:	10800104 	addi	r2,r2,4
  85312c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  853130:	e0bff817 	ldw	r2,-32(fp)
  853134:	1080800c 	andi	r2,r2,512
  853138:	103fac26 	beq	r2,zero,852fec <__alt_mem_epcs_flash_controller_0+0xff849fec>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  85313c:	e0bff817 	ldw	r2,-32(fp)
  853140:	1004d43a 	srli	r2,r2,16
  853144:	e0bff515 	stw	r2,-44(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  853148:	00002606 	br	8531e4 <altera_avalon_jtag_uart_irq+0x220>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  85314c:	e0bff717 	ldw	r2,-36(fp)
  853150:	e0fff617 	ldw	r3,-40(fp)
  853154:	18c01017 	ldw	r3,64(r3)
  853158:	e13ff617 	ldw	r4,-40(fp)
  85315c:	20c7883a 	add	r3,r4,r3
  853160:	18c21104 	addi	r3,r3,2116
  853164:	18c00003 	ldbu	r3,0(r3)
  853168:	18c03fcc 	andi	r3,r3,255
  85316c:	18c0201c 	xori	r3,r3,128
  853170:	18ffe004 	addi	r3,r3,-128
  853174:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  853178:	e0bff617 	ldw	r2,-40(fp)
  85317c:	10801017 	ldw	r2,64(r2)
  853180:	10800044 	addi	r2,r2,1
  853184:	10c1ffcc 	andi	r3,r2,2047
  853188:	e0bff617 	ldw	r2,-40(fp)
  85318c:	10c01015 	stw	r3,64(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);
  853190:	e0bff617 	ldw	r2,-40(fp)
  853194:	10800c17 	ldw	r2,48(r2)
  853198:	e0bffa15 	stw	r2,-24(fp)
  85319c:	00800084 	movi	r2,2
  8531a0:	e0bffd0d 	sth	r2,-12(fp)
  8531a4:	00800044 	movi	r2,1
  8531a8:	e0bffd85 	stb	r2,-10(fp)
                   OS_FLAGS     flags, 
                   INT8U        opt)
{
  INT8U err;

  if (OSRunning)
  8531ac:	d0a09543 	ldbu	r2,-32171(gp)
  8531b0:	10803fcc 	andi	r2,r2,255
  8531b4:	10000826 	beq	r2,zero,8531d8 <altera_avalon_jtag_uart_irq+0x214>
  {
    OSFlagPost (group, flags, opt, &err);
  8531b8:	e0bffd0b 	ldhu	r2,-12(fp)
  8531bc:	e0fffd83 	ldbu	r3,-10(fp)
  8531c0:	e13ffe04 	addi	r4,fp,-8
  8531c4:	200f883a 	mov	r7,r4
  8531c8:	180d883a 	mov	r6,r3
  8531cc:	100b883a 	mov	r5,r2
  8531d0:	e13ffa17 	ldw	r4,-24(fp)
  8531d4:	084d9840 	call	84d984 <OSFlagPost>

        space--;
  8531d8:	e0bff517 	ldw	r2,-44(fp)
  8531dc:	10bfffc4 	addi	r2,r2,-1
  8531e0:	e0bff515 	stw	r2,-44(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  8531e4:	e0bff517 	ldw	r2,-44(fp)
  8531e8:	10000526 	beq	r2,zero,853200 <altera_avalon_jtag_uart_irq+0x23c>
  8531ec:	e0bff617 	ldw	r2,-40(fp)
  8531f0:	10c01017 	ldw	r3,64(r2)
  8531f4:	e0bff617 	ldw	r2,-40(fp)
  8531f8:	10800f17 	ldw	r2,60(r2)
  8531fc:	18bfd31e 	bne	r3,r2,85314c <__alt_mem_epcs_flash_controller_0+0xff84a14c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  853200:	e0bff517 	ldw	r2,-44(fp)
  853204:	103f7926 	beq	r2,zero,852fec <__alt_mem_epcs_flash_controller_0+0xff849fec>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  853208:	e0bff617 	ldw	r2,-40(fp)
  85320c:	10c00817 	ldw	r3,32(r2)
  853210:	00bfff44 	movi	r2,-3
  853214:	1886703a 	and	r3,r3,r2
  853218:	e0bff617 	ldw	r2,-40(fp)
  85321c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  853220:	e0bff617 	ldw	r2,-40(fp)
  853224:	10800017 	ldw	r2,0(r2)
  853228:	10800104 	addi	r2,r2,4
  85322c:	1007883a 	mov	r3,r2
  853230:	e0bff617 	ldw	r2,-40(fp)
  853234:	10800817 	ldw	r2,32(r2)
  853238:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  85323c:	e0bff717 	ldw	r2,-36(fp)
  853240:	10800104 	addi	r2,r2,4
  853244:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  853248:	003f6806 	br	852fec <__alt_mem_epcs_flash_controller_0+0xff849fec>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  85324c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  853250:	0001883a 	nop
  853254:	e037883a 	mov	sp,fp
  853258:	dfc00117 	ldw	ra,4(sp)
  85325c:	df000017 	ldw	fp,0(sp)
  853260:	dec00204 	addi	sp,sp,8
  853264:	f800283a 	ret

00853268 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  853268:	defff904 	addi	sp,sp,-28
  85326c:	dfc00615 	stw	ra,24(sp)
  853270:	df000515 	stw	fp,20(sp)
  853274:	df000504 	addi	fp,sp,20
  853278:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  85327c:	e0bfff17 	ldw	r2,-4(fp)
  853280:	e0bffb15 	stw	r2,-20(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  853284:	e0bffb17 	ldw	r2,-20(fp)
  853288:	10800017 	ldw	r2,0(r2)
  85328c:	10800104 	addi	r2,r2,4
  853290:	10800037 	ldwio	r2,0(r2)
  853294:	e0bffc15 	stw	r2,-16(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  853298:	e0bffc17 	ldw	r2,-16(fp)
  85329c:	1081000c 	andi	r2,r2,1024
  8532a0:	10000b26 	beq	r2,zero,8532d0 <altera_avalon_jtag_uart_timeout+0x68>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  8532a4:	e0bffb17 	ldw	r2,-20(fp)
  8532a8:	10800017 	ldw	r2,0(r2)
  8532ac:	10800104 	addi	r2,r2,4
  8532b0:	1007883a 	mov	r3,r2
  8532b4:	e0bffb17 	ldw	r2,-20(fp)
  8532b8:	10800817 	ldw	r2,32(r2)
  8532bc:	10810014 	ori	r2,r2,1024
  8532c0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  8532c4:	e0bffb17 	ldw	r2,-20(fp)
  8532c8:	10000915 	stw	zero,36(r2)
  8532cc:	00002106 	br	853354 <altera_avalon_jtag_uart_timeout+0xec>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  8532d0:	e0bffb17 	ldw	r2,-20(fp)
  8532d4:	10c00917 	ldw	r3,36(r2)
  8532d8:	00a00034 	movhi	r2,32768
  8532dc:	10bfff04 	addi	r2,r2,-4
  8532e0:	10c01c36 	bltu	r2,r3,853354 <altera_avalon_jtag_uart_timeout+0xec>
    sp->host_inactive++;
  8532e4:	e0bffb17 	ldw	r2,-20(fp)
  8532e8:	10800917 	ldw	r2,36(r2)
  8532ec:	10c00044 	addi	r3,r2,1
  8532f0:	e0bffb17 	ldw	r2,-20(fp)
  8532f4:	10c00915 	stw	r3,36(r2)
    
    if (sp->host_inactive >= sp->timeout) {
  8532f8:	e0bffb17 	ldw	r2,-20(fp)
  8532fc:	10c00917 	ldw	r3,36(r2)
  853300:	e0bffb17 	ldw	r2,-20(fp)
  853304:	10800117 	ldw	r2,4(r2)
  853308:	18801236 	bltu	r3,r2,853354 <altera_avalon_jtag_uart_timeout+0xec>
      /* Post an event to indicate host is inactive (for jtag_uart_read */
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
  85330c:	e0bffb17 	ldw	r2,-20(fp)
  853310:	10800c17 	ldw	r2,48(r2)
  853314:	e0bffd15 	stw	r2,-12(fp)
  853318:	00800104 	movi	r2,4
  85331c:	e0bffe0d 	sth	r2,-8(fp)
  853320:	00800044 	movi	r2,1
  853324:	e0bffe85 	stb	r2,-6(fp)
                   OS_FLAGS     flags, 
                   INT8U        opt)
{
  INT8U err;

  if (OSRunning)
  853328:	d0a09543 	ldbu	r2,-32171(gp)
  85332c:	10803fcc 	andi	r2,r2,255
  853330:	10000826 	beq	r2,zero,853354 <altera_avalon_jtag_uart_timeout+0xec>
  {
    OSFlagPost (group, flags, opt, &err);
  853334:	e0bffe0b 	ldhu	r2,-8(fp)
  853338:	e0fffe83 	ldbu	r3,-6(fp)
  85333c:	e13ffec4 	addi	r4,fp,-5
  853340:	200f883a 	mov	r7,r4
  853344:	180d883a 	mov	r6,r3
  853348:	100b883a 	mov	r5,r2
  85334c:	e13ffd17 	ldw	r4,-12(fp)
  853350:	084d9840 	call	84d984 <OSFlagPost>
  853354:	d0a0aa17 	ldw	r2,-32088(gp)
    }
  }

  return alt_ticks_per_second();
}
  853358:	e037883a 	mov	sp,fp
  85335c:	dfc00117 	ldw	ra,4(sp)
  853360:	df000017 	ldw	fp,0(sp)
  853364:	dec00204 	addi	sp,sp,8
  853368:	f800283a 	ret

0085336c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  85336c:	defffd04 	addi	sp,sp,-12
  853370:	df000215 	stw	fp,8(sp)
  853374:	df000204 	addi	fp,sp,8
  853378:	e13ffe15 	stw	r4,-8(fp)
  85337c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  853380:	00000506 	br	853398 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  853384:	e0bfff17 	ldw	r2,-4(fp)
  853388:	1090000c 	andi	r2,r2,16384
  85338c:	10000226 	beq	r2,zero,853398 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  853390:	00bffd44 	movi	r2,-11
  853394:	00000b06 	br	8533c4 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  853398:	e0bffe17 	ldw	r2,-8(fp)
  85339c:	10c01017 	ldw	r3,64(r2)
  8533a0:	e0bffe17 	ldw	r2,-8(fp)
  8533a4:	10800f17 	ldw	r2,60(r2)
  8533a8:	18800526 	beq	r3,r2,8533c0 <altera_avalon_jtag_uart_close+0x54>
  8533ac:	e0bffe17 	ldw	r2,-8(fp)
  8533b0:	10c00917 	ldw	r3,36(r2)
  8533b4:	e0bffe17 	ldw	r2,-8(fp)
  8533b8:	10800117 	ldw	r2,4(r2)
  8533bc:	18bff136 	bltu	r3,r2,853384 <__alt_mem_epcs_flash_controller_0+0xff84a384>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  8533c0:	0005883a 	mov	r2,zero
}
  8533c4:	e037883a 	mov	sp,fp
  8533c8:	df000017 	ldw	fp,0(sp)
  8533cc:	dec00104 	addi	sp,sp,4
  8533d0:	f800283a 	ret

008533d4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  8533d4:	defffa04 	addi	sp,sp,-24
  8533d8:	df000515 	stw	fp,20(sp)
  8533dc:	df000504 	addi	fp,sp,20
  8533e0:	e13ffd15 	stw	r4,-12(fp)
  8533e4:	e17ffe15 	stw	r5,-8(fp)
  8533e8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  8533ec:	00bff9c4 	movi	r2,-25
  8533f0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  8533f4:	e0bffe17 	ldw	r2,-8(fp)
  8533f8:	10da8060 	cmpeqi	r3,r2,27137
  8533fc:	1800031e 	bne	r3,zero,85340c <altera_avalon_jtag_uart_ioctl+0x38>
  853400:	109a80a0 	cmpeqi	r2,r2,27138
  853404:	1000181e 	bne	r2,zero,853468 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  853408:	00002906 	br	8534b0 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  85340c:	e0bffd17 	ldw	r2,-12(fp)
  853410:	10c00117 	ldw	r3,4(r2)
  853414:	00a00034 	movhi	r2,32768
  853418:	10bfffc4 	addi	r2,r2,-1
  85341c:	18802126 	beq	r3,r2,8534a4 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  853420:	e0bfff17 	ldw	r2,-4(fp)
  853424:	10800017 	ldw	r2,0(r2)
  853428:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  85342c:	e0bffc17 	ldw	r2,-16(fp)
  853430:	10800090 	cmplti	r2,r2,2
  853434:	1000061e 	bne	r2,zero,853450 <altera_avalon_jtag_uart_ioctl+0x7c>
  853438:	e0fffc17 	ldw	r3,-16(fp)
  85343c:	00a00034 	movhi	r2,32768
  853440:	10bfffc4 	addi	r2,r2,-1
  853444:	18800226 	beq	r3,r2,853450 <altera_avalon_jtag_uart_ioctl+0x7c>
  853448:	e0bffc17 	ldw	r2,-16(fp)
  85344c:	00000206 	br	853458 <altera_avalon_jtag_uart_ioctl+0x84>
  853450:	00a00034 	movhi	r2,32768
  853454:	10bfff84 	addi	r2,r2,-2
  853458:	e0fffd17 	ldw	r3,-12(fp)
  85345c:	18800115 	stw	r2,4(r3)
      rc = 0;
  853460:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  853464:	00000f06 	br	8534a4 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  853468:	e0bffd17 	ldw	r2,-12(fp)
  85346c:	10c00117 	ldw	r3,4(r2)
  853470:	00a00034 	movhi	r2,32768
  853474:	10bfffc4 	addi	r2,r2,-1
  853478:	18800c26 	beq	r3,r2,8534ac <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  85347c:	e0bffd17 	ldw	r2,-12(fp)
  853480:	10c00917 	ldw	r3,36(r2)
  853484:	e0bffd17 	ldw	r2,-12(fp)
  853488:	10800117 	ldw	r2,4(r2)
  85348c:	1885803a 	cmpltu	r2,r3,r2
  853490:	10c03fcc 	andi	r3,r2,255
  853494:	e0bfff17 	ldw	r2,-4(fp)
  853498:	10c00015 	stw	r3,0(r2)
      rc = 0;
  85349c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  8534a0:	00000206 	br	8534ac <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  8534a4:	0001883a 	nop
  8534a8:	00000106 	br	8534b0 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  8534ac:	0001883a 	nop

  default:
    break;
  }

  return rc;
  8534b0:	e0bffb17 	ldw	r2,-20(fp)
}
  8534b4:	e037883a 	mov	sp,fp
  8534b8:	df000017 	ldw	fp,0(sp)
  8534bc:	dec00104 	addi	sp,sp,4
  8534c0:	f800283a 	ret

008534c4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  8534c4:	deffed04 	addi	sp,sp,-76
  8534c8:	dfc01215 	stw	ra,72(sp)
  8534cc:	df001115 	stw	fp,68(sp)
  8534d0:	df001104 	addi	fp,sp,68
  8534d4:	e13ffc15 	stw	r4,-16(fp)
  8534d8:	e17ffd15 	stw	r5,-12(fp)
  8534dc:	e1bffe15 	stw	r6,-8(fp)
  8534e0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  8534e4:	e0bffd17 	ldw	r2,-12(fp)
  8534e8:	e0bff015 	stw	r2,-64(fp)

  /*
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);
  8534ec:	e0bffc17 	ldw	r2,-16(fp)
  8534f0:	10800a17 	ldw	r2,40(r2)
  8534f4:	e0bff815 	stw	r2,-32(fp)
  8534f8:	e03ff90d 	sth	zero,-28(fp)

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_pend (OS_EVENT* sem, 
                  INT16U timeout)
{
  INT8U err;
  OSSemPend (sem, timeout, &err);
  8534fc:	e0bff90b 	ldhu	r2,-28(fp)
  853500:	e0fffb04 	addi	r3,fp,-20
  853504:	180d883a 	mov	r6,r3
  853508:	100b883a 	mov	r5,r2
  85350c:	e13ff817 	ldw	r4,-32(fp)
  853510:	084fde00 	call	84fde0 <OSSemPend>

  while (space > 0)
  853514:	00006106 	br	85369c <altera_avalon_jtag_uart_read+0x1d8>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  853518:	e0bffc17 	ldw	r2,-16(fp)
  85351c:	10800d17 	ldw	r2,52(r2)
  853520:	e0bff315 	stw	r2,-52(fp)
      out = sp->rx_out;
  853524:	e0bffc17 	ldw	r2,-16(fp)
  853528:	10800e17 	ldw	r2,56(r2)
  85352c:	e0bff415 	stw	r2,-48(fp)

      if (in >= out)
  853530:	e0fff317 	ldw	r3,-52(fp)
  853534:	e0bff417 	ldw	r2,-48(fp)
  853538:	18800536 	bltu	r3,r2,853550 <altera_avalon_jtag_uart_read+0x8c>
        n = in - out;
  85353c:	e0fff317 	ldw	r3,-52(fp)
  853540:	e0bff417 	ldw	r2,-48(fp)
  853544:	1885c83a 	sub	r2,r3,r2
  853548:	e0bff115 	stw	r2,-60(fp)
  85354c:	00000406 	br	853560 <altera_avalon_jtag_uart_read+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  853550:	00c20004 	movi	r3,2048
  853554:	e0bff417 	ldw	r2,-48(fp)
  853558:	1885c83a 	sub	r2,r3,r2
  85355c:	e0bff115 	stw	r2,-60(fp)

      if (n == 0)
  853560:	e0bff117 	ldw	r2,-60(fp)
  853564:	10001e26 	beq	r2,zero,8535e0 <altera_avalon_jtag_uart_read+0x11c>
        break; /* No more data available */

      if (n > space)
  853568:	e0fffe17 	ldw	r3,-8(fp)
  85356c:	e0bff117 	ldw	r2,-60(fp)
  853570:	1880022e 	bgeu	r3,r2,85357c <altera_avalon_jtag_uart_read+0xb8>
        n = space;
  853574:	e0bffe17 	ldw	r2,-8(fp)
  853578:	e0bff115 	stw	r2,-60(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  85357c:	e0bffc17 	ldw	r2,-16(fp)
  853580:	10c01104 	addi	r3,r2,68
  853584:	e0bff417 	ldw	r2,-48(fp)
  853588:	1885883a 	add	r2,r3,r2
  85358c:	e1bff117 	ldw	r6,-60(fp)
  853590:	100b883a 	mov	r5,r2
  853594:	e13ff017 	ldw	r4,-64(fp)
  853598:	0833c4c0 	call	833c4c <memcpy>
      ptr   += n;
  85359c:	e0fff017 	ldw	r3,-64(fp)
  8535a0:	e0bff117 	ldw	r2,-60(fp)
  8535a4:	1885883a 	add	r2,r3,r2
  8535a8:	e0bff015 	stw	r2,-64(fp)
      space -= n;
  8535ac:	e0fffe17 	ldw	r3,-8(fp)
  8535b0:	e0bff117 	ldw	r2,-60(fp)
  8535b4:	1885c83a 	sub	r2,r3,r2
  8535b8:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8535bc:	e0fff417 	ldw	r3,-48(fp)
  8535c0:	e0bff117 	ldw	r2,-60(fp)
  8535c4:	1885883a 	add	r2,r3,r2
  8535c8:	10c1ffcc 	andi	r3,r2,2047
  8535cc:	e0bffc17 	ldw	r2,-16(fp)
  8535d0:	10c00e15 	stw	r3,56(r2)
    }
    while (space > 0);
  8535d4:	e0bffe17 	ldw	r2,-8(fp)
  8535d8:	00bfcf16 	blt	zero,r2,853518 <__alt_mem_epcs_flash_controller_0+0xff84a518>
  8535dc:	00000106 	br	8535e4 <altera_avalon_jtag_uart_read+0x120>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  8535e0:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  8535e4:	e0fff017 	ldw	r3,-64(fp)
  8535e8:	e0bffd17 	ldw	r2,-12(fp)
  8535ec:	18802e1e 	bne	r3,r2,8536a8 <altera_avalon_jtag_uart_read+0x1e4>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  8535f0:	e0bfff17 	ldw	r2,-4(fp)
  8535f4:	1090000c 	andi	r2,r2,16384
  8535f8:	10002d1e 	bne	r2,zero,8536b0 <altera_avalon_jtag_uart_read+0x1ec>
      break;

#ifdef __ucosii__
    /* OS Present: Pend on a flag if the OS is running, otherwise spin */
    if(OSRunning == OS_TRUE) {
  8535fc:	d0a09543 	ldbu	r2,-32171(gp)
  853600:	10803fcc 	andi	r2,r2,255
  853604:	10800058 	cmpnei	r2,r2,1
  853608:	1000161e 	bne	r2,zero,853664 <altera_avalon_jtag_uart_read+0x1a0>
       * When running in a multi-threaded mode, we pend on the read event
       * flag set and timeout event flag set in the isr. This avoids wasting CPU
       * cycles waiting in this thread, when we could be doing something more
       * profitable elsewhere.
       */
      ALT_FLAG_PEND (sp->events,
  85360c:	e0bffc17 	ldw	r2,-16(fp)
  853610:	10800c17 	ldw	r2,48(r2)
  853614:	e0bff215 	stw	r2,-56(fp)
  853618:	00800144 	movi	r2,5
  85361c:	e0bff98d 	sth	r2,-26(fp)
  853620:	00bfe0c4 	movi	r2,-125
  853624:	e0bffa05 	stb	r2,-24(fp)
  853628:	e03ffa8d 	sth	zero,-22(fp)
                   OS_FLAGS flags, 
                   INT8U wait_type, 
                   INT16U timeout)
{
  INT8U err;
  if (OSRunning)
  85362c:	d0a09543 	ldbu	r2,-32171(gp)
  853630:	10803fcc 	andi	r2,r2,255
  853634:	10001526 	beq	r2,zero,85368c <altera_avalon_jtag_uart_read+0x1c8>
  {
    OSFlagPend (group, flags, wait_type, timeout, &err);
  853638:	e0fff98b 	ldhu	r3,-26(fp)
  85363c:	e13ffa03 	ldbu	r4,-24(fp)
  853640:	e17ffa8b 	ldhu	r5,-22(fp)
  853644:	e0bffb44 	addi	r2,fp,-19
  853648:	d8800015 	stw	r2,0(sp)
  85364c:	280f883a 	mov	r7,r5
  853650:	200d883a 	mov	r6,r4
  853654:	180b883a 	mov	r5,r3
  853658:	e13ff217 	ldw	r4,-56(fp)
  85365c:	084d36c0 	call	84d36c <OSFlagPend>
  853660:	00000a06 	br	85368c <altera_avalon_jtag_uart_read+0x1c8>
                     OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                     0);
    }
    else {
      /* Spin until more data arrives or until host disconnects */
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  853664:	0001883a 	nop
  853668:	e0bffc17 	ldw	r2,-16(fp)
  85366c:	10c00d17 	ldw	r3,52(r2)
  853670:	e0bff317 	ldw	r2,-52(fp)
  853674:	1880051e 	bne	r3,r2,85368c <altera_avalon_jtag_uart_read+0x1c8>
  853678:	e0bffc17 	ldw	r2,-16(fp)
  85367c:	10c00917 	ldw	r3,36(r2)
  853680:	e0bffc17 	ldw	r2,-16(fp)
  853684:	10800117 	ldw	r2,4(r2)
  853688:	18bff736 	bltu	r3,r2,853668 <__alt_mem_epcs_flash_controller_0+0xff84a668>
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  85368c:	e0bffc17 	ldw	r2,-16(fp)
  853690:	10c00d17 	ldw	r3,52(r2)
  853694:	e0bff317 	ldw	r2,-52(fp)
  853698:	18800726 	beq	r3,r2,8536b8 <altera_avalon_jtag_uart_read+0x1f4>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  85369c:	e0bffe17 	ldw	r2,-8(fp)
  8536a0:	00bf9d16 	blt	zero,r2,853518 <__alt_mem_epcs_flash_controller_0+0xff84a518>
  8536a4:	00000506 	br	8536bc <altera_avalon_jtag_uart_read+0x1f8>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  8536a8:	0001883a 	nop
  8536ac:	00000306 	br	8536bc <altera_avalon_jtag_uart_read+0x1f8>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  8536b0:	0001883a 	nop
  8536b4:	00000106 	br	8536bc <altera_avalon_jtag_uart_read+0x1f8>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  8536b8:	0001883a 	nop
  /*
   * Now that access to the circular buffer is complete, release the read
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);
  8536bc:	e0bffc17 	ldw	r2,-16(fp)
  8536c0:	10800a17 	ldw	r2,40(r2)
  8536c4:	1009883a 	mov	r4,r2
  8536c8:	08501580 	call	850158 <OSSemPost>

  if (ptr != buffer)
  8536cc:	e0fff017 	ldw	r3,-64(fp)
  8536d0:	e0bffd17 	ldw	r2,-12(fp)
  8536d4:	18801826 	beq	r3,r2,853738 <altera_avalon_jtag_uart_read+0x274>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8536d8:	0005303a 	rdctl	r2,status
  8536dc:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8536e0:	e0fff717 	ldw	r3,-36(fp)
  8536e4:	00bfff84 	movi	r2,-2
  8536e8:	1884703a 	and	r2,r3,r2
  8536ec:	1001703a 	wrctl	status,r2
  
  return context;
  8536f0:	e0bff717 	ldw	r2,-36(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  8536f4:	e0bff615 	stw	r2,-40(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  8536f8:	e0bffc17 	ldw	r2,-16(fp)
  8536fc:	10800817 	ldw	r2,32(r2)
  853700:	10c00054 	ori	r3,r2,1
  853704:	e0bffc17 	ldw	r2,-16(fp)
  853708:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  85370c:	e0bffc17 	ldw	r2,-16(fp)
  853710:	10800017 	ldw	r2,0(r2)
  853714:	10800104 	addi	r2,r2,4
  853718:	1007883a 	mov	r3,r2
  85371c:	e0bffc17 	ldw	r2,-16(fp)
  853720:	10800817 	ldw	r2,32(r2)
  853724:	18800035 	stwio	r2,0(r3)
  853728:	e0bff617 	ldw	r2,-40(fp)
  85372c:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  853730:	e0bff517 	ldw	r2,-44(fp)
  853734:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  853738:	e0fff017 	ldw	r3,-64(fp)
  85373c:	e0bffd17 	ldw	r2,-12(fp)
  853740:	18800426 	beq	r3,r2,853754 <altera_avalon_jtag_uart_read+0x290>
    return ptr - buffer;
  853744:	e0fff017 	ldw	r3,-64(fp)
  853748:	e0bffd17 	ldw	r2,-12(fp)
  85374c:	1885c83a 	sub	r2,r3,r2
  853750:	00000606 	br	85376c <altera_avalon_jtag_uart_read+0x2a8>
  else if (flags & O_NONBLOCK)
  853754:	e0bfff17 	ldw	r2,-4(fp)
  853758:	1090000c 	andi	r2,r2,16384
  85375c:	10000226 	beq	r2,zero,853768 <altera_avalon_jtag_uart_read+0x2a4>
    return -EWOULDBLOCK;
  853760:	00bffd44 	movi	r2,-11
  853764:	00000106 	br	85376c <altera_avalon_jtag_uart_read+0x2a8>
  else
    return -EIO;
  853768:	00bffec4 	movi	r2,-5
}
  85376c:	e037883a 	mov	sp,fp
  853770:	dfc00117 	ldw	ra,4(sp)
  853774:	df000017 	ldw	fp,0(sp)
  853778:	dec00204 	addi	sp,sp,8
  85377c:	f800283a 	ret

00853780 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  853780:	deffed04 	addi	sp,sp,-76
  853784:	dfc01215 	stw	ra,72(sp)
  853788:	df001115 	stw	fp,68(sp)
  85378c:	df001104 	addi	fp,sp,68
  853790:	e13ffc15 	stw	r4,-16(fp)
  853794:	e17ffd15 	stw	r5,-12(fp)
  853798:	e1bffe15 	stw	r6,-8(fp)
  85379c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  8537a0:	e03ff015 	stw	zero,-64(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  8537a4:	e0bffd17 	ldw	r2,-12(fp)
  8537a8:	e0bff215 	stw	r2,-56(fp)

  /*
   * When running in a multi threaded environment, obtain the "write_lock"
   * semaphore. This ensures that writing to the device is thread-safe.
   */
  ALT_SEM_PEND (sp->write_lock, 0);
  8537ac:	e0bffc17 	ldw	r2,-16(fp)
  8537b0:	10800b17 	ldw	r2,44(r2)
  8537b4:	e0bff815 	stw	r2,-32(fp)
  8537b8:	e03ff90d 	sth	zero,-28(fp)
  8537bc:	e0bff90b 	ldhu	r2,-28(fp)
  8537c0:	e0fffb44 	addi	r3,fp,-19
  8537c4:	180d883a 	mov	r6,r3
  8537c8:	100b883a 	mov	r5,r2
  8537cc:	e13ff817 	ldw	r4,-32(fp)
  8537d0:	084fde00 	call	84fde0 <OSSemPend>

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  8537d4:	00003706 	br	8538b4 <altera_avalon_jtag_uart_write+0x134>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  8537d8:	e0bffc17 	ldw	r2,-16(fp)
  8537dc:	10800f17 	ldw	r2,60(r2)
  8537e0:	e0bff415 	stw	r2,-48(fp)
      out = sp->tx_out;
  8537e4:	e0bffc17 	ldw	r2,-16(fp)
  8537e8:	10801017 	ldw	r2,64(r2)
  8537ec:	e0bff015 	stw	r2,-64(fp)

      if (in < out)
  8537f0:	e0fff417 	ldw	r3,-48(fp)
  8537f4:	e0bff017 	ldw	r2,-64(fp)
  8537f8:	1880062e 	bgeu	r3,r2,853814 <altera_avalon_jtag_uart_write+0x94>
        n = out - 1 - in;
  8537fc:	e0fff017 	ldw	r3,-64(fp)
  853800:	e0bff417 	ldw	r2,-48(fp)
  853804:	1885c83a 	sub	r2,r3,r2
  853808:	10bfffc4 	addi	r2,r2,-1
  85380c:	e0bff115 	stw	r2,-60(fp)
  853810:	00000b06 	br	853840 <altera_avalon_jtag_uart_write+0xc0>
      else if (out > 0)
  853814:	e0bff017 	ldw	r2,-64(fp)
  853818:	10000526 	beq	r2,zero,853830 <altera_avalon_jtag_uart_write+0xb0>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  85381c:	00c20004 	movi	r3,2048
  853820:	e0bff417 	ldw	r2,-48(fp)
  853824:	1885c83a 	sub	r2,r3,r2
  853828:	e0bff115 	stw	r2,-60(fp)
  85382c:	00000406 	br	853840 <altera_avalon_jtag_uart_write+0xc0>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  853830:	00c1ffc4 	movi	r3,2047
  853834:	e0bff417 	ldw	r2,-48(fp)
  853838:	1885c83a 	sub	r2,r3,r2
  85383c:	e0bff115 	stw	r2,-60(fp)

      if (n == 0)
  853840:	e0bff117 	ldw	r2,-60(fp)
  853844:	10001e26 	beq	r2,zero,8538c0 <altera_avalon_jtag_uart_write+0x140>
        break;

      if (n > count)
  853848:	e0fffe17 	ldw	r3,-8(fp)
  85384c:	e0bff117 	ldw	r2,-60(fp)
  853850:	1880022e 	bgeu	r3,r2,85385c <altera_avalon_jtag_uart_write+0xdc>
        n = count;
  853854:	e0bffe17 	ldw	r2,-8(fp)
  853858:	e0bff115 	stw	r2,-60(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  85385c:	e0bffc17 	ldw	r2,-16(fp)
  853860:	10c21104 	addi	r3,r2,2116
  853864:	e0bff417 	ldw	r2,-48(fp)
  853868:	1885883a 	add	r2,r3,r2
  85386c:	e1bff117 	ldw	r6,-60(fp)
  853870:	e17ffd17 	ldw	r5,-12(fp)
  853874:	1009883a 	mov	r4,r2
  853878:	0833c4c0 	call	833c4c <memcpy>
      ptr   += n;
  85387c:	e0fffd17 	ldw	r3,-12(fp)
  853880:	e0bff117 	ldw	r2,-60(fp)
  853884:	1885883a 	add	r2,r3,r2
  853888:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  85388c:	e0fffe17 	ldw	r3,-8(fp)
  853890:	e0bff117 	ldw	r2,-60(fp)
  853894:	1885c83a 	sub	r2,r3,r2
  853898:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  85389c:	e0fff417 	ldw	r3,-48(fp)
  8538a0:	e0bff117 	ldw	r2,-60(fp)
  8538a4:	1885883a 	add	r2,r3,r2
  8538a8:	10c1ffcc 	andi	r3,r2,2047
  8538ac:	e0bffc17 	ldw	r2,-16(fp)
  8538b0:	10c00f15 	stw	r3,60(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  8538b4:	e0bffe17 	ldw	r2,-8(fp)
  8538b8:	00bfc716 	blt	zero,r2,8537d8 <__alt_mem_epcs_flash_controller_0+0xff84a7d8>
  8538bc:	00000106 	br	8538c4 <altera_avalon_jtag_uart_write+0x144>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  8538c0:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8538c4:	0005303a 	rdctl	r2,status
  8538c8:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8538cc:	e0fff717 	ldw	r3,-36(fp)
  8538d0:	00bfff84 	movi	r2,-2
  8538d4:	1884703a 	and	r2,r3,r2
  8538d8:	1001703a 	wrctl	status,r2
  
  return context;
  8538dc:	e0bff717 	ldw	r2,-36(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  8538e0:	e0bff615 	stw	r2,-40(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  8538e4:	e0bffc17 	ldw	r2,-16(fp)
  8538e8:	10800817 	ldw	r2,32(r2)
  8538ec:	10c00094 	ori	r3,r2,2
  8538f0:	e0bffc17 	ldw	r2,-16(fp)
  8538f4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  8538f8:	e0bffc17 	ldw	r2,-16(fp)
  8538fc:	10800017 	ldw	r2,0(r2)
  853900:	10800104 	addi	r2,r2,4
  853904:	1007883a 	mov	r3,r2
  853908:	e0bffc17 	ldw	r2,-16(fp)
  85390c:	10800817 	ldw	r2,32(r2)
  853910:	18800035 	stwio	r2,0(r3)
  853914:	e0bff617 	ldw	r2,-40(fp)
  853918:	e0bff315 	stw	r2,-52(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  85391c:	e0bff317 	ldw	r2,-52(fp)
  853920:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  853924:	e0bffe17 	ldw	r2,-8(fp)
  853928:	00802a0e 	bge	zero,r2,8539d4 <altera_avalon_jtag_uart_write+0x254>
    {
      if (flags & O_NONBLOCK)
  85392c:	e0bfff17 	ldw	r2,-4(fp)
  853930:	1090000c 	andi	r2,r2,16384
  853934:	10002a1e 	bne	r2,zero,8539e0 <altera_avalon_jtag_uart_write+0x260>
        break;

#ifdef __ucosii__
      /* OS Present: Pend on a flag if the OS is running, otherwise spin */
      if(OSRunning == OS_TRUE) {
  853938:	d0a09543 	ldbu	r2,-32171(gp)
  85393c:	10803fcc 	andi	r2,r2,255
  853940:	10800058 	cmpnei	r2,r2,1
  853944:	1000161e 	bne	r2,zero,8539a0 <altera_avalon_jtag_uart_write+0x220>
         * more profitable elsewhere.
         */
#ifdef ALTERA_AVALON_JTAG_UART_IGNORE_FIFO_FULL_ERROR
        if(!sp->host_inactive)
#endif
        ALT_FLAG_PEND (sp->events,
  853948:	e0bffc17 	ldw	r2,-16(fp)
  85394c:	10800c17 	ldw	r2,48(r2)
  853950:	e0bff515 	stw	r2,-44(fp)
  853954:	00800184 	movi	r2,6
  853958:	e0bff98d 	sth	r2,-26(fp)
  85395c:	00bfe0c4 	movi	r2,-125
  853960:	e0bffa05 	stb	r2,-24(fp)
  853964:	e03ffa8d 	sth	zero,-22(fp)
                   OS_FLAGS flags, 
                   INT8U wait_type, 
                   INT16U timeout)
{
  INT8U err;
  if (OSRunning)
  853968:	d0a09543 	ldbu	r2,-32171(gp)
  85396c:	10803fcc 	andi	r2,r2,255
  853970:	10001526 	beq	r2,zero,8539c8 <altera_avalon_jtag_uart_write+0x248>
  {
    OSFlagPend (group, flags, wait_type, timeout, &err);
  853974:	e0fff98b 	ldhu	r3,-26(fp)
  853978:	e13ffa03 	ldbu	r4,-24(fp)
  85397c:	e17ffa8b 	ldhu	r5,-22(fp)
  853980:	e0bffb04 	addi	r2,fp,-20
  853984:	d8800015 	stw	r2,0(sp)
  853988:	280f883a 	mov	r7,r5
  85398c:	200d883a 	mov	r6,r4
  853990:	180b883a 	mov	r5,r3
  853994:	e13ff517 	ldw	r4,-44(fp)
  853998:	084d36c0 	call	84d36c <OSFlagPend>
  85399c:	00000a06 	br	8539c8 <altera_avalon_jtag_uart_write+0x248>
        /*
         * OS not running: Wait for data to be removed from buffer.
         * Once the interrupt routine has removed some data then we
         * will be able to insert some more.
         */
        while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  8539a0:	0001883a 	nop
  8539a4:	e0bffc17 	ldw	r2,-16(fp)
  8539a8:	10c01017 	ldw	r3,64(r2)
  8539ac:	e0bff017 	ldw	r2,-64(fp)
  8539b0:	1880051e 	bne	r3,r2,8539c8 <altera_avalon_jtag_uart_write+0x248>
  8539b4:	e0bffc17 	ldw	r2,-16(fp)
  8539b8:	10c00917 	ldw	r3,36(r2)
  8539bc:	e0bffc17 	ldw	r2,-16(fp)
  8539c0:	10800117 	ldw	r2,4(r2)
  8539c4:	18bff736 	bltu	r3,r2,8539a4 <__alt_mem_epcs_flash_controller_0+0xff84a9a4>
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  8539c8:	e0bffc17 	ldw	r2,-16(fp)
  8539cc:	10800917 	ldw	r2,36(r2)
  8539d0:	1000051e 	bne	r2,zero,8539e8 <altera_avalon_jtag_uart_write+0x268>
         break;
    }
  }
  while (count > 0);
  8539d4:	e0bffe17 	ldw	r2,-8(fp)
  8539d8:	00bfb616 	blt	zero,r2,8538b4 <__alt_mem_epcs_flash_controller_0+0xff84a8b4>
  8539dc:	00000306 	br	8539ec <altera_avalon_jtag_uart_write+0x26c>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  8539e0:	0001883a 	nop
  8539e4:	00000106 	br	8539ec <altera_avalon_jtag_uart_write+0x26c>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  8539e8:	0001883a 	nop

  /*
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);
  8539ec:	e0bffc17 	ldw	r2,-16(fp)
  8539f0:	10800b17 	ldw	r2,44(r2)
  8539f4:	1009883a 	mov	r4,r2
  8539f8:	08501580 	call	850158 <OSSemPost>

  if (ptr != start)
  8539fc:	e0fffd17 	ldw	r3,-12(fp)
  853a00:	e0bff217 	ldw	r2,-56(fp)
  853a04:	18800426 	beq	r3,r2,853a18 <altera_avalon_jtag_uart_write+0x298>
    return ptr - start;
  853a08:	e0fffd17 	ldw	r3,-12(fp)
  853a0c:	e0bff217 	ldw	r2,-56(fp)
  853a10:	1885c83a 	sub	r2,r3,r2
  853a14:	00000606 	br	853a30 <altera_avalon_jtag_uart_write+0x2b0>
  else if (flags & O_NONBLOCK)
  853a18:	e0bfff17 	ldw	r2,-4(fp)
  853a1c:	1090000c 	andi	r2,r2,16384
  853a20:	10000226 	beq	r2,zero,853a2c <altera_avalon_jtag_uart_write+0x2ac>
    return -EWOULDBLOCK;
  853a24:	00bffd44 	movi	r2,-11
  853a28:	00000106 	br	853a30 <altera_avalon_jtag_uart_write+0x2b0>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  853a2c:	00bffec4 	movi	r2,-5
}
  853a30:	e037883a 	mov	sp,fp
  853a34:	dfc00117 	ldw	ra,4(sp)
  853a38:	df000017 	ldw	fp,0(sp)
  853a3c:	dec00204 	addi	sp,sp,8
  853a40:	f800283a 	ret

00853a44 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  853a44:	defffa04 	addi	sp,sp,-24
  853a48:	dfc00515 	stw	ra,20(sp)
  853a4c:	df000415 	stw	fp,16(sp)
  853a50:	df000404 	addi	fp,sp,16
  853a54:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  853a58:	0007883a 	mov	r3,zero
  853a5c:	e0bfff17 	ldw	r2,-4(fp)
  853a60:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  853a64:	e0bfff17 	ldw	r2,-4(fp)
  853a68:	10800104 	addi	r2,r2,4
  853a6c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  853a70:	0005303a 	rdctl	r2,status
  853a74:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  853a78:	e0fffd17 	ldw	r3,-12(fp)
  853a7c:	00bfff84 	movi	r2,-2
  853a80:	1884703a 	and	r2,r3,r2
  853a84:	1001703a 	wrctl	status,r2
  
  return context;
  853a88:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  853a8c:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  853a90:	08566680 	call	856668 <alt_tick>
  853a94:	e0bffc17 	ldw	r2,-16(fp)
  853a98:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  853a9c:	e0bffe17 	ldw	r2,-8(fp)
  853aa0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  853aa4:	0001883a 	nop
  853aa8:	e037883a 	mov	sp,fp
  853aac:	dfc00117 	ldw	ra,4(sp)
  853ab0:	df000017 	ldw	fp,0(sp)
  853ab4:	dec00204 	addi	sp,sp,8
  853ab8:	f800283a 	ret

00853abc <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  853abc:	defff804 	addi	sp,sp,-32
  853ac0:	dfc00715 	stw	ra,28(sp)
  853ac4:	df000615 	stw	fp,24(sp)
  853ac8:	df000604 	addi	fp,sp,24
  853acc:	e13ffc15 	stw	r4,-16(fp)
  853ad0:	e17ffd15 	stw	r5,-12(fp)
  853ad4:	e1bffe15 	stw	r6,-8(fp)
  853ad8:	e1ffff15 	stw	r7,-4(fp)
  853adc:	e0bfff17 	ldw	r2,-4(fp)
  853ae0:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  853ae4:	d0a0aa17 	ldw	r2,-32088(gp)
  853ae8:	1000021e 	bne	r2,zero,853af4 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
  853aec:	e0bffb17 	ldw	r2,-20(fp)
  853af0:	d0a0aa15 	stw	r2,-32088(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  853af4:	e0bffc17 	ldw	r2,-16(fp)
  853af8:	10800104 	addi	r2,r2,4
  853afc:	00c001c4 	movi	r3,7
  853b00:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  853b04:	d8000015 	stw	zero,0(sp)
  853b08:	e1fffc17 	ldw	r7,-16(fp)
  853b0c:	01802174 	movhi	r6,133
  853b10:	318e9104 	addi	r6,r6,14916
  853b14:	e17ffe17 	ldw	r5,-8(fp)
  853b18:	e13ffd17 	ldw	r4,-12(fp)
  853b1c:	0849ac00 	call	849ac0 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  853b20:	0001883a 	nop
  853b24:	e037883a 	mov	sp,fp
  853b28:	dfc00117 	ldw	ra,4(sp)
  853b2c:	df000017 	ldw	fp,0(sp)
  853b30:	dec00204 	addi	sp,sp,8
  853b34:	f800283a 	ret

00853b38 <altera_avalon_uart_read_fd>:
 *
 */

int 
altera_avalon_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  853b38:	defffa04 	addi	sp,sp,-24
  853b3c:	dfc00515 	stw	ra,20(sp)
  853b40:	df000415 	stw	fp,16(sp)
  853b44:	df000404 	addi	fp,sp,16
  853b48:	e13ffd15 	stw	r4,-12(fp)
  853b4c:	e17ffe15 	stw	r5,-8(fp)
  853b50:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  853b54:	e0bffd17 	ldw	r2,-12(fp)
  853b58:	10800017 	ldw	r2,0(r2)
  853b5c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_read(&dev->state, buffer, space,
  853b60:	e0bffc17 	ldw	r2,-16(fp)
  853b64:	10c00a04 	addi	r3,r2,40
  853b68:	e0bffd17 	ldw	r2,-12(fp)
  853b6c:	10800217 	ldw	r2,8(r2)
  853b70:	100f883a 	mov	r7,r2
  853b74:	e1bfff17 	ldw	r6,-4(fp)
  853b78:	e17ffe17 	ldw	r5,-8(fp)
  853b7c:	1809883a 	mov	r4,r3
  853b80:	08541b00 	call	8541b0 <altera_avalon_uart_read>
      fd->fd_flags);
}
  853b84:	e037883a 	mov	sp,fp
  853b88:	dfc00117 	ldw	ra,4(sp)
  853b8c:	df000017 	ldw	fp,0(sp)
  853b90:	dec00204 	addi	sp,sp,8
  853b94:	f800283a 	ret

00853b98 <altera_avalon_uart_write_fd>:

int 
altera_avalon_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  853b98:	defffa04 	addi	sp,sp,-24
  853b9c:	dfc00515 	stw	ra,20(sp)
  853ba0:	df000415 	stw	fp,16(sp)
  853ba4:	df000404 	addi	fp,sp,16
  853ba8:	e13ffd15 	stw	r4,-12(fp)
  853bac:	e17ffe15 	stw	r5,-8(fp)
  853bb0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  853bb4:	e0bffd17 	ldw	r2,-12(fp)
  853bb8:	10800017 	ldw	r2,0(r2)
  853bbc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_write(&dev->state, buffer, space,
  853bc0:	e0bffc17 	ldw	r2,-16(fp)
  853bc4:	10c00a04 	addi	r3,r2,40
  853bc8:	e0bffd17 	ldw	r2,-12(fp)
  853bcc:	10800217 	ldw	r2,8(r2)
  853bd0:	100f883a 	mov	r7,r2
  853bd4:	e1bfff17 	ldw	r6,-4(fp)
  853bd8:	e17ffe17 	ldw	r5,-8(fp)
  853bdc:	1809883a 	mov	r4,r3
  853be0:	08544540 	call	854454 <altera_avalon_uart_write>
      fd->fd_flags);
}
  853be4:	e037883a 	mov	sp,fp
  853be8:	dfc00117 	ldw	ra,4(sp)
  853bec:	df000017 	ldw	fp,0(sp)
  853bf0:	dec00204 	addi	sp,sp,8
  853bf4:	f800283a 	ret

00853bf8 <altera_avalon_uart_close_fd>:

#endif /* ALTERA_AVALON_UART_USE_IOCTL */

int 
altera_avalon_uart_close_fd(alt_fd* fd)
{
  853bf8:	defffc04 	addi	sp,sp,-16
  853bfc:	dfc00315 	stw	ra,12(sp)
  853c00:	df000215 	stw	fp,8(sp)
  853c04:	df000204 	addi	fp,sp,8
  853c08:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  853c0c:	e0bfff17 	ldw	r2,-4(fp)
  853c10:	10800017 	ldw	r2,0(r2)
  853c14:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_uart_close(&dev->state, fd->fd_flags);
  853c18:	e0bffe17 	ldw	r2,-8(fp)
  853c1c:	10c00a04 	addi	r3,r2,40
  853c20:	e0bfff17 	ldw	r2,-4(fp)
  853c24:	10800217 	ldw	r2,8(r2)
  853c28:	100b883a 	mov	r5,r2
  853c2c:	1809883a 	mov	r4,r3
  853c30:	08541200 	call	854120 <altera_avalon_uart_close>
}
  853c34:	e037883a 	mov	sp,fp
  853c38:	dfc00117 	ldw	ra,4(sp)
  853c3c:	df000017 	ldw	fp,0(sp)
  853c40:	dec00204 	addi	sp,sp,8
  853c44:	f800283a 	ret

00853c48 <altera_avalon_uart_init>:
  alt_u32 status);

void 
altera_avalon_uart_init(altera_avalon_uart_state* sp, 
  alt_u32 irq_controller_id,  alt_u32 irq)
{
  853c48:	defff304 	addi	sp,sp,-52
  853c4c:	dfc00c15 	stw	ra,48(sp)
  853c50:	df000b15 	stw	fp,44(sp)
  853c54:	df000b04 	addi	fp,sp,44
  853c58:	e13ffd15 	stw	r4,-12(fp)
  853c5c:	e17ffe15 	stw	r5,-8(fp)
  853c60:	e1bfff15 	stw	r6,-4(fp)
  void* base = sp->base;
  853c64:	e0bffd17 	ldw	r2,-12(fp)
  853c68:	10800017 	ldw	r2,0(r2)
  853c6c:	e0bff615 	stw	r2,-40(fp)
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  853c70:	e0bffd17 	ldw	r2,-12(fp)
  853c74:	10800704 	addi	r2,r2,28
  853c78:	e0bffa15 	stw	r2,-24(fp)
  853c7c:	e03ffb0d 	sth	zero,-20(fp)

static ALT_INLINE int ALT_ALWAYS_INLINE alt_flag_create (OS_FLAG_GRP** pgroup, 
               OS_FLAGS flags)
{
  INT8U err;
  *pgroup = OSFlagCreate (flags, &err);
  853c80:	e0bffb0b 	ldhu	r2,-20(fp)
  853c84:	e0fffc84 	addi	r3,fp,-14
  853c88:	180b883a 	mov	r5,r3
  853c8c:	1009883a 	mov	r4,r2
  853c90:	084cda80 	call	84cda8 <OSFlagCreate>
  853c94:	1007883a 	mov	r3,r2
  853c98:	e0bffa17 	ldw	r2,-24(fp)
  853c9c:	10c00015 	stw	r3,0(r2)
  return err;
  853ca0:	e0bffc83 	ldbu	r2,-14(fp)
  853ca4:	10803fcc 	andi	r2,r2,255
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  853ca8:	1000241e 	bne	r2,zero,853d3c <altera_avalon_uart_init+0xf4>
  853cac:	e0bffd17 	ldw	r2,-12(fp)
  853cb0:	10800804 	addi	r2,r2,32
  853cb4:	e0bff715 	stw	r2,-36(fp)
  853cb8:	00800044 	movi	r2,1
  853cbc:	e0bffb8d 	sth	r2,-18(fp)
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_create (OS_EVENT** sem, 
              INT16U value)
{
  *sem = OSSemCreate (value);
  853cc0:	e0bffb8b 	ldhu	r2,-18(fp)
  853cc4:	1009883a 	mov	r4,r2
  853cc8:	084fac80 	call	84fac8 <OSSemCreate>
  853ccc:	1007883a 	mov	r3,r2
  853cd0:	e0bff717 	ldw	r2,-36(fp)
  853cd4:	10c00015 	stw	r3,0(r2)
  return *sem ? 0 : -1;
  853cd8:	e0bff717 	ldw	r2,-36(fp)
  853cdc:	10800017 	ldw	r2,0(r2)
  853ce0:	10000226 	beq	r2,zero,853cec <altera_avalon_uart_init+0xa4>
  853ce4:	0005883a 	mov	r2,zero
  853ce8:	00000106 	br	853cf0 <altera_avalon_uart_init+0xa8>
  853cec:	00bfffc4 	movi	r2,-1
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  853cf0:	1000121e 	bne	r2,zero,853d3c <altera_avalon_uart_init+0xf4>
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
          ALT_SEM_CREATE (&sp->write_lock, 1);
  853cf4:	e0bffd17 	ldw	r2,-12(fp)
  853cf8:	10800904 	addi	r2,r2,36
  853cfc:	e0bff815 	stw	r2,-32(fp)
  853d00:	00800044 	movi	r2,1
  853d04:	e0bffc0d 	sth	r2,-16(fp)
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_create (OS_EVENT** sem, 
              INT16U value)
{
  *sem = OSSemCreate (value);
  853d08:	e0bffc0b 	ldhu	r2,-16(fp)
  853d0c:	1009883a 	mov	r4,r2
  853d10:	084fac80 	call	84fac8 <OSSemCreate>
  853d14:	1007883a 	mov	r3,r2
  853d18:	e0bff817 	ldw	r2,-32(fp)
  853d1c:	10c00015 	stw	r3,0(r2)
  return *sem ? 0 : -1;
  853d20:	e0bff817 	ldw	r2,-32(fp)
  853d24:	10800017 	ldw	r2,0(r2)
  853d28:	10000226 	beq	r2,zero,853d34 <altera_avalon_uart_init+0xec>
  853d2c:	0005883a 	mov	r2,zero
  853d30:	00000106 	br	853d38 <altera_avalon_uart_init+0xf0>
  853d34:	00bfffc4 	movi	r2,-1
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  853d38:	10000226 	beq	r2,zero,853d44 <altera_avalon_uart_init+0xfc>
  853d3c:	00800044 	movi	r2,1
  853d40:	00000106 	br	853d48 <altera_avalon_uart_init+0x100>
  853d44:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  853d48:	e0bff915 	stw	r2,-28(fp)
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
          ALT_SEM_CREATE (&sp->write_lock, 1);

  if (!error)
  853d4c:	e0bff917 	ldw	r2,-28(fp)
  853d50:	10000f1e 	bne	r2,zero,853d90 <altera_avalon_uart_init+0x148>
  {
    /* enable interrupts at the device */
    sp->ctrl = ALTERA_AVALON_UART_CONTROL_RTS_MSK  |
  853d54:	e0bffd17 	ldw	r2,-12(fp)
  853d58:	00c32004 	movi	r3,3200
  853d5c:	10c00115 	stw	r3,4(r2)
                ALTERA_AVALON_UART_CONTROL_RRDY_MSK |
                ALTERA_AVALON_UART_CONTROL_DCTS_MSK;

    IOWR_ALTERA_AVALON_UART_CONTROL(base, sp->ctrl); 
  853d60:	e0bff617 	ldw	r2,-40(fp)
  853d64:	10800304 	addi	r2,r2,12
  853d68:	e0fffd17 	ldw	r3,-12(fp)
  853d6c:	18c00117 	ldw	r3,4(r3)
  853d70:	10c00035 	stwio	r3,0(r2)
  
    /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
    alt_ic_isr_register(irq_controller_id, irq, altera_avalon_uart_irq, sp, 
  853d74:	d8000015 	stw	zero,0(sp)
  853d78:	e1fffd17 	ldw	r7,-12(fp)
  853d7c:	01802174 	movhi	r6,133
  853d80:	318f6a04 	addi	r6,r6,15784
  853d84:	e17fff17 	ldw	r5,-4(fp)
  853d88:	e13ffe17 	ldw	r4,-8(fp)
  853d8c:	0849ac00 	call	849ac0 <alt_ic_isr_register>
      0x0);
#else
    alt_irq_register (irq, sp, altera_avalon_uart_irq);
#endif  
  }
}
  853d90:	0001883a 	nop
  853d94:	e037883a 	mov	sp,fp
  853d98:	dfc00117 	ldw	ra,4(sp)
  853d9c:	df000017 	ldw	fp,0(sp)
  853da0:	dec00204 	addi	sp,sp,8
  853da4:	f800283a 	ret

00853da8 <altera_avalon_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_uart_irq(void* context)
#else
static void altera_avalon_uart_irq(void* context, alt_u32 id)
#endif
{
  853da8:	defffa04 	addi	sp,sp,-24
  853dac:	dfc00515 	stw	ra,20(sp)
  853db0:	df000415 	stw	fp,16(sp)
  853db4:	df000404 	addi	fp,sp,16
  853db8:	e13fff15 	stw	r4,-4(fp)
  alt_u32 status;

  altera_avalon_uart_state* sp = (altera_avalon_uart_state*) context;
  853dbc:	e0bfff17 	ldw	r2,-4(fp)
  853dc0:	e0bffc15 	stw	r2,-16(fp)
  void* base               = sp->base;
  853dc4:	e0bffc17 	ldw	r2,-16(fp)
  853dc8:	10800017 	ldw	r2,0(r2)
  853dcc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Read the status register in order to determine the cause of the
   * interrupt.
   */

  status = IORD_ALTERA_AVALON_UART_STATUS(base);
  853dd0:	e0bffd17 	ldw	r2,-12(fp)
  853dd4:	10800204 	addi	r2,r2,8
  853dd8:	10800037 	ldwio	r2,0(r2)
  853ddc:	e0bffe15 	stw	r2,-8(fp)

  /* Clear any error flags set at the device */
  IOWR_ALTERA_AVALON_UART_STATUS(base, 0);
  853de0:	e0bffd17 	ldw	r2,-12(fp)
  853de4:	10800204 	addi	r2,r2,8
  853de8:	0007883a 	mov	r3,zero
  853dec:	10c00035 	stwio	r3,0(r2)

  /* Dummy read to ensure IRQ is negated before ISR returns */
  IORD_ALTERA_AVALON_UART_STATUS(base);
  853df0:	e0bffd17 	ldw	r2,-12(fp)
  853df4:	10800204 	addi	r2,r2,8
  853df8:	10800037 	ldwio	r2,0(r2)
  
  /* process a read irq */
  if (status & ALTERA_AVALON_UART_STATUS_RRDY_MSK)
  853dfc:	e0bffe17 	ldw	r2,-8(fp)
  853e00:	1080200c 	andi	r2,r2,128
  853e04:	10000326 	beq	r2,zero,853e14 <altera_avalon_uart_irq+0x6c>
  {
    altera_avalon_uart_rxirq(sp, status);
  853e08:	e17ffe17 	ldw	r5,-8(fp)
  853e0c:	e13ffc17 	ldw	r4,-16(fp)
  853e10:	0853e440 	call	853e44 <altera_avalon_uart_rxirq>
  }

  /* process a write irq */
  if (status & (ALTERA_AVALON_UART_STATUS_TRDY_MSK | 
  853e14:	e0bffe17 	ldw	r2,-8(fp)
  853e18:	1081100c 	andi	r2,r2,1088
  853e1c:	10000326 	beq	r2,zero,853e2c <altera_avalon_uart_irq+0x84>
                  ALTERA_AVALON_UART_STATUS_DCTS_MSK))
  {
    altera_avalon_uart_txirq(sp, status);
  853e20:	e17ffe17 	ldw	r5,-8(fp)
  853e24:	e13ffc17 	ldw	r4,-16(fp)
  853e28:	0853f7c0 	call	853f7c <altera_avalon_uart_txirq>
  }
  

}
  853e2c:	0001883a 	nop
  853e30:	e037883a 	mov	sp,fp
  853e34:	dfc00117 	ldw	ra,4(sp)
  853e38:	df000017 	ldw	fp,0(sp)
  853e3c:	dec00204 	addi	sp,sp,8
  853e40:	f800283a 	ret

00853e44 <altera_avalon_uart_rxirq>:
 * the receive circular buffer, and sets the apropriate flags to indicate 
 * that there is data ready to be processed.
 */
static void 
altera_avalon_uart_rxirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  853e44:	defff904 	addi	sp,sp,-28
  853e48:	dfc00615 	stw	ra,24(sp)
  853e4c:	df000515 	stw	fp,20(sp)
  853e50:	df000504 	addi	fp,sp,20
  853e54:	e13ffe15 	stw	r4,-8(fp)
  853e58:	e17fff15 	stw	r5,-4(fp)
  alt_u32 next;
  
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
  853e5c:	e0bfff17 	ldw	r2,-4(fp)
  853e60:	108000cc 	andi	r2,r2,3
  853e64:	10003f1e 	bne	r2,zero,853f64 <altera_avalon_uart_rxirq+0x120>
   * In a multi-threaded environment, set the read event flag to indicate
   * that there is data ready. This is only done if the circular buffer was
   * previously empty.
   */

  if (sp->rx_end == sp->rx_start)
  853e68:	e0bffe17 	ldw	r2,-8(fp)
  853e6c:	10c00317 	ldw	r3,12(r2)
  853e70:	e0bffe17 	ldw	r2,-8(fp)
  853e74:	10800217 	ldw	r2,8(r2)
  853e78:	1880121e 	bne	r3,r2,853ec4 <altera_avalon_uart_rxirq+0x80>
  {
    ALT_FLAG_POST (sp->events, ALT_UART_READ_RDY, OS_FLAG_SET);
  853e7c:	e0bffe17 	ldw	r2,-8(fp)
  853e80:	10800717 	ldw	r2,28(r2)
  853e84:	e0bffc15 	stw	r2,-16(fp)
  853e88:	00800044 	movi	r2,1
  853e8c:	e0bffd0d 	sth	r2,-12(fp)
  853e90:	00800044 	movi	r2,1
  853e94:	e0bffd85 	stb	r2,-10(fp)
                   OS_FLAGS     flags, 
                   INT8U        opt)
{
  INT8U err;

  if (OSRunning)
  853e98:	d0a09543 	ldbu	r2,-32171(gp)
  853e9c:	10803fcc 	andi	r2,r2,255
  853ea0:	10000826 	beq	r2,zero,853ec4 <altera_avalon_uart_rxirq+0x80>
  {
    OSFlagPost (group, flags, opt, &err);
  853ea4:	e0bffd0b 	ldhu	r2,-12(fp)
  853ea8:	e0fffd83 	ldbu	r3,-10(fp)
  853eac:	e13ffdc4 	addi	r4,fp,-9
  853eb0:	200f883a 	mov	r7,r4
  853eb4:	180d883a 	mov	r6,r3
  853eb8:	100b883a 	mov	r5,r2
  853ebc:	e13ffc17 	ldw	r4,-16(fp)
  853ec0:	084d9840 	call	84d984 <OSFlagPost>
  }

  /* Determine which slot to use next in the circular buffer */

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  853ec4:	e0bffe17 	ldw	r2,-8(fp)
  853ec8:	10800317 	ldw	r2,12(r2)
  853ecc:	10800044 	addi	r2,r2,1
  853ed0:	10800fcc 	andi	r2,r2,63
  853ed4:	e0bffb15 	stw	r2,-20(fp)

  /* Transfer data from the device to the circular buffer */

  sp->rx_buf[sp->rx_end] = IORD_ALTERA_AVALON_UART_RXDATA(sp->base);
  853ed8:	e0bffe17 	ldw	r2,-8(fp)
  853edc:	10800317 	ldw	r2,12(r2)
  853ee0:	e0fffe17 	ldw	r3,-8(fp)
  853ee4:	18c00017 	ldw	r3,0(r3)
  853ee8:	18c00037 	ldwio	r3,0(r3)
  853eec:	1809883a 	mov	r4,r3
  853ef0:	e0fffe17 	ldw	r3,-8(fp)
  853ef4:	1885883a 	add	r2,r3,r2
  853ef8:	10800a04 	addi	r2,r2,40
  853efc:	11000005 	stb	r4,0(r2)

  sp->rx_end = next;
  853f00:	e0bffe17 	ldw	r2,-8(fp)
  853f04:	e0fffb17 	ldw	r3,-20(fp)
  853f08:	10c00315 	stw	r3,12(r2)

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  853f0c:	e0bffe17 	ldw	r2,-8(fp)
  853f10:	10800317 	ldw	r2,12(r2)
  853f14:	10800044 	addi	r2,r2,1
  853f18:	10800fcc 	andi	r2,r2,63
  853f1c:	e0bffb15 	stw	r2,-20(fp)
  /*
   * If the cicular buffer was full, disable interrupts. Interrupts will be
   * re-enabled when data is removed from the buffer.
   */

  if (next == sp->rx_start)
  853f20:	e0bffe17 	ldw	r2,-8(fp)
  853f24:	10c00217 	ldw	r3,8(r2)
  853f28:	e0bffb17 	ldw	r2,-20(fp)
  853f2c:	18800e1e 	bne	r3,r2,853f68 <altera_avalon_uart_rxirq+0x124>
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  853f30:	e0bffe17 	ldw	r2,-8(fp)
  853f34:	10c00117 	ldw	r3,4(r2)
  853f38:	00bfdfc4 	movi	r2,-129
  853f3c:	1886703a 	and	r3,r3,r2
  853f40:	e0bffe17 	ldw	r2,-8(fp)
  853f44:	10c00115 	stw	r3,4(r2)
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
  853f48:	e0bffe17 	ldw	r2,-8(fp)
  853f4c:	10800017 	ldw	r2,0(r2)
  853f50:	10800304 	addi	r2,r2,12
  853f54:	e0fffe17 	ldw	r3,-8(fp)
  853f58:	18c00117 	ldw	r3,4(r3)
  853f5c:	10c00035 	stwio	r3,0(r2)
  853f60:	00000106 	br	853f68 <altera_avalon_uart_rxirq+0x124>
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
                  ALTERA_AVALON_UART_STATUS_FE_MSK))
  {
    return;
  853f64:	0001883a 	nop
  if (next == sp->rx_start)
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
  }   
}
  853f68:	e037883a 	mov	sp,fp
  853f6c:	dfc00117 	ldw	ra,4(sp)
  853f70:	df000017 	ldw	fp,0(sp)
  853f74:	dec00204 	addi	sp,sp,8
  853f78:	f800283a 	ret

00853f7c <altera_avalon_uart_txirq>:
 * buffer to the device, and sets the apropriate flags to indicate that 
 * there is data ready to be processed.
 */
static void 
altera_avalon_uart_txirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  853f7c:	defffa04 	addi	sp,sp,-24
  853f80:	dfc00515 	stw	ra,20(sp)
  853f84:	df000415 	stw	fp,16(sp)
  853f88:	df000404 	addi	fp,sp,16
  853f8c:	e13ffe15 	stw	r4,-8(fp)
  853f90:	e17fff15 	stw	r5,-4(fp)
  /* Transfer data if there is some ready to be transfered */

  if (sp->tx_start != sp->tx_end)
  853f94:	e0bffe17 	ldw	r2,-8(fp)
  853f98:	10c00417 	ldw	r3,16(r2)
  853f9c:	e0bffe17 	ldw	r2,-8(fp)
  853fa0:	10800517 	ldw	r2,20(r2)
  853fa4:	18804726 	beq	r3,r2,8540c4 <altera_avalon_uart_txirq+0x148>
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  853fa8:	e0bffe17 	ldw	r2,-8(fp)
  853fac:	10800617 	ldw	r2,24(r2)
  853fb0:	1080008c 	andi	r2,r2,2
  853fb4:	10000326 	beq	r2,zero,853fc4 <altera_avalon_uart_txirq+0x48>
      (status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  853fb8:	e0bfff17 	ldw	r2,-4(fp)
  853fbc:	1082000c 	andi	r2,r2,2048
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  853fc0:	10003226 	beq	r2,zero,85408c <altera_avalon_uart_txirq+0x110>
       * In a multi-threaded environment, set the write event flag to indicate
       * that there is space in the circular buffer. This is only done if the
       * buffer was previously empty.
       */

      if (sp->tx_start == ((sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK))
  853fc4:	e0bffe17 	ldw	r2,-8(fp)
  853fc8:	10c00417 	ldw	r3,16(r2)
  853fcc:	e0bffe17 	ldw	r2,-8(fp)
  853fd0:	10800517 	ldw	r2,20(r2)
  853fd4:	10800044 	addi	r2,r2,1
  853fd8:	10800fcc 	andi	r2,r2,63
  853fdc:	1880121e 	bne	r3,r2,854028 <altera_avalon_uart_txirq+0xac>
      { 
        ALT_FLAG_POST (sp->events, 
  853fe0:	e0bffe17 	ldw	r2,-8(fp)
  853fe4:	10800717 	ldw	r2,28(r2)
  853fe8:	e0bffc15 	stw	r2,-16(fp)
  853fec:	00800084 	movi	r2,2
  853ff0:	e0bffd0d 	sth	r2,-12(fp)
  853ff4:	00800044 	movi	r2,1
  853ff8:	e0bffd85 	stb	r2,-10(fp)
                   OS_FLAGS     flags, 
                   INT8U        opt)
{
  INT8U err;

  if (OSRunning)
  853ffc:	d0a09543 	ldbu	r2,-32171(gp)
  854000:	10803fcc 	andi	r2,r2,255
  854004:	10000826 	beq	r2,zero,854028 <altera_avalon_uart_txirq+0xac>
  {
    OSFlagPost (group, flags, opt, &err);
  854008:	e0bffd0b 	ldhu	r2,-12(fp)
  85400c:	e0fffd83 	ldbu	r3,-10(fp)
  854010:	e13ffdc4 	addi	r4,fp,-9
  854014:	200f883a 	mov	r7,r4
  854018:	180d883a 	mov	r6,r3
  85401c:	100b883a 	mov	r5,r2
  854020:	e13ffc17 	ldw	r4,-16(fp)
  854024:	084d9840 	call	84d984 <OSFlagPost>
                       OS_FLAG_SET);
      }

      /* Write the data to the device */

      IOWR_ALTERA_AVALON_UART_TXDATA(sp->base, sp->tx_buf[sp->tx_start]);
  854028:	e0bffe17 	ldw	r2,-8(fp)
  85402c:	10800017 	ldw	r2,0(r2)
  854030:	10800104 	addi	r2,r2,4
  854034:	e0fffe17 	ldw	r3,-8(fp)
  854038:	18c00417 	ldw	r3,16(r3)
  85403c:	e13ffe17 	ldw	r4,-8(fp)
  854040:	20c7883a 	add	r3,r4,r3
  854044:	18c01a04 	addi	r3,r3,104
  854048:	18c00003 	ldbu	r3,0(r3)
  85404c:	18c03fcc 	andi	r3,r3,255
  854050:	10c00035 	stwio	r3,0(r2)

      sp->tx_start = (++sp->tx_start) & ALT_AVALON_UART_BUF_MSK;
  854054:	e0bffe17 	ldw	r2,-8(fp)
  854058:	10800417 	ldw	r2,16(r2)
  85405c:	10800044 	addi	r2,r2,1
  854060:	e0fffe17 	ldw	r3,-8(fp)
  854064:	18800415 	stw	r2,16(r3)
  854068:	10c00fcc 	andi	r3,r2,63
  85406c:	e0bffe17 	ldw	r2,-8(fp)
  854070:	10c00415 	stw	r3,16(r2)
      /*
       * In case the tranmit interrupt had previously been disabled by 
       * detecting a low value on CTS, it is reenabled here.
       */ 

      sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  854074:	e0bffe17 	ldw	r2,-8(fp)
  854078:	10800117 	ldw	r2,4(r2)
  85407c:	10c01014 	ori	r3,r2,64
  854080:	e0bffe17 	ldw	r2,-8(fp)
  854084:	10c00115 	stw	r3,4(r2)
  854088:	00000e06 	br	8540c4 <altera_avalon_uart_txirq+0x148>
       * the last write to the status register. To avoid this resulting in
       * deadlock, it's necessary to re-check the status register here
       * before throttling.
       */
 
      status = IORD_ALTERA_AVALON_UART_STATUS(sp->base); 
  85408c:	e0bffe17 	ldw	r2,-8(fp)
  854090:	10800017 	ldw	r2,0(r2)
  854094:	10800204 	addi	r2,r2,8
  854098:	10800037 	ldwio	r2,0(r2)
  85409c:	e0bfff15 	stw	r2,-4(fp)

      if (!(status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  8540a0:	e0bfff17 	ldw	r2,-4(fp)
  8540a4:	1082000c 	andi	r2,r2,2048
  8540a8:	1000061e 	bne	r2,zero,8540c4 <altera_avalon_uart_txirq+0x148>
      {
        sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  8540ac:	e0bffe17 	ldw	r2,-8(fp)
  8540b0:	10c00117 	ldw	r3,4(r2)
  8540b4:	00bfefc4 	movi	r2,-65
  8540b8:	1886703a 	and	r3,r3,r2
  8540bc:	e0bffe17 	ldw	r2,-8(fp)
  8540c0:	10c00115 	stw	r3,4(r2)
  /*
   * If the circular buffer is empty, disable the interrupt. This will be
   * re-enabled when new data is placed in the buffer.
   */

  if (sp->tx_start == sp->tx_end)
  8540c4:	e0bffe17 	ldw	r2,-8(fp)
  8540c8:	10c00417 	ldw	r3,16(r2)
  8540cc:	e0bffe17 	ldw	r2,-8(fp)
  8540d0:	10800517 	ldw	r2,20(r2)
  8540d4:	1880061e 	bne	r3,r2,8540f0 <altera_avalon_uart_txirq+0x174>
  {
    sp->ctrl &= ~(ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  8540d8:	e0bffe17 	ldw	r2,-8(fp)
  8540dc:	10c00117 	ldw	r3,4(r2)
  8540e0:	00beefc4 	movi	r2,-1089
  8540e4:	1886703a 	and	r3,r3,r2
  8540e8:	e0bffe17 	ldw	r2,-8(fp)
  8540ec:	10c00115 	stw	r3,4(r2)
                    ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
  }

  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  8540f0:	e0bffe17 	ldw	r2,-8(fp)
  8540f4:	10800017 	ldw	r2,0(r2)
  8540f8:	10800304 	addi	r2,r2,12
  8540fc:	e0fffe17 	ldw	r3,-8(fp)
  854100:	18c00117 	ldw	r3,4(r3)
  854104:	10c00035 	stwio	r3,0(r2)
}
  854108:	0001883a 	nop
  85410c:	e037883a 	mov	sp,fp
  854110:	dfc00117 	ldw	ra,4(sp)
  854114:	df000017 	ldw	fp,0(sp)
  854118:	dec00204 	addi	sp,sp,8
  85411c:	f800283a 	ret

00854120 <altera_avalon_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  854120:	defffd04 	addi	sp,sp,-12
  854124:	df000215 	stw	fp,8(sp)
  854128:	df000204 	addi	fp,sp,8
  85412c:	e13ffe15 	stw	r4,-8(fp)
  854130:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  854134:	00000506 	br	85414c <altera_avalon_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  854138:	e0bfff17 	ldw	r2,-4(fp)
  85413c:	1090000c 	andi	r2,r2,16384
  854140:	10000226 	beq	r2,zero,85414c <altera_avalon_uart_close+0x2c>
      return -EWOULDBLOCK; 
  854144:	00bffd44 	movi	r2,-11
  854148:	00000606 	br	854164 <altera_avalon_uart_close+0x44>
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  85414c:	e0bffe17 	ldw	r2,-8(fp)
  854150:	10c00417 	ldw	r3,16(r2)
  854154:	e0bffe17 	ldw	r2,-8(fp)
  854158:	10800517 	ldw	r2,20(r2)
  85415c:	18bff61e 	bne	r3,r2,854138 <__alt_mem_epcs_flash_controller_0+0xff84b138>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  854160:	0005883a 	mov	r2,zero
}
  854164:	e037883a 	mov	sp,fp
  854168:	df000017 	ldw	fp,0(sp)
  85416c:	dec00104 	addi	sp,sp,4
  854170:	f800283a 	ret

00854174 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  854174:	defffe04 	addi	sp,sp,-8
  854178:	dfc00115 	stw	ra,4(sp)
  85417c:	df000015 	stw	fp,0(sp)
  854180:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  854184:	d0a04317 	ldw	r2,-32500(gp)
  854188:	10000326 	beq	r2,zero,854198 <alt_get_errno+0x24>
  85418c:	d0a04317 	ldw	r2,-32500(gp)
  854190:	103ee83a 	callr	r2
  854194:	00000106 	br	85419c <alt_get_errno+0x28>
  854198:	d0a08804 	addi	r2,gp,-32224
}
  85419c:	e037883a 	mov	sp,fp
  8541a0:	dfc00117 	ldw	ra,4(sp)
  8541a4:	df000017 	ldw	fp,0(sp)
  8541a8:	dec00204 	addi	sp,sp,8
  8541ac:	f800283a 	ret

008541b0 <altera_avalon_uart_read>:
 */

int 
altera_avalon_uart_read(altera_avalon_uart_state* sp, char* ptr, int len,
  int flags)
{
  8541b0:	deffec04 	addi	sp,sp,-80
  8541b4:	dfc01315 	stw	ra,76(sp)
  8541b8:	df001215 	stw	fp,72(sp)
  8541bc:	df001204 	addi	fp,sp,72
  8541c0:	e13ffc15 	stw	r4,-16(fp)
  8541c4:	e17ffd15 	stw	r5,-12(fp)
  8541c8:	e1bffe15 	stw	r6,-8(fp)
  8541cc:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             block;
  alt_u8          read_would_block = 0;
  8541d0:	e03fef05 	stb	zero,-68(fp)
  int             count = 0;
  8541d4:	e03ff015 	stw	zero,-64(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  block = !(flags & O_NONBLOCK);
  8541d8:	e0bfff17 	ldw	r2,-4(fp)
  8541dc:	1090000c 	andi	r2,r2,16384
  8541e0:	1005003a 	cmpeq	r2,r2,zero
  8541e4:	10803fcc 	andi	r2,r2,255
  8541e8:	e0bff115 	stw	r2,-60(fp)
  /*
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */

  ALT_SEM_PEND (sp->read_lock, 0);
  8541ec:	e0bffc17 	ldw	r2,-16(fp)
  8541f0:	10800817 	ldw	r2,32(r2)
  8541f4:	e0bff815 	stw	r2,-32(fp)
  8541f8:	e03ff90d 	sth	zero,-28(fp)

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_pend (OS_EVENT* sem, 
                  INT16U timeout)
{
  INT8U err;
  OSSemPend (sem, timeout, &err);
  8541fc:	e0bff90b 	ldhu	r2,-28(fp)
  854200:	e0fffb44 	addi	r3,fp,-19
  854204:	180d883a 	mov	r6,r3
  854208:	100b883a 	mov	r5,r2
  85420c:	e13ff817 	ldw	r4,-32(fp)
  854210:	084fde00 	call	84fde0 <OSSemPend>
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  854214:	00001306 	br	854264 <altera_avalon_uart_read+0xb4>
    {
      count++;
  854218:	e0bff017 	ldw	r2,-64(fp)
  85421c:	10800044 	addi	r2,r2,1
  854220:	e0bff015 	stw	r2,-64(fp)
      *ptr++ = sp->rx_buf[sp->rx_start];
  854224:	e0bffd17 	ldw	r2,-12(fp)
  854228:	10c00044 	addi	r3,r2,1
  85422c:	e0fffd15 	stw	r3,-12(fp)
  854230:	e0fffc17 	ldw	r3,-16(fp)
  854234:	18c00217 	ldw	r3,8(r3)
  854238:	e13ffc17 	ldw	r4,-16(fp)
  85423c:	20c7883a 	add	r3,r4,r3
  854240:	18c00a04 	addi	r3,r3,40
  854244:	18c00003 	ldbu	r3,0(r3)
  854248:	10c00005 	stb	r3,0(r2)
      
      sp->rx_start = (sp->rx_start+1) & ALT_AVALON_UART_BUF_MSK;
  85424c:	e0bffc17 	ldw	r2,-16(fp)
  854250:	10800217 	ldw	r2,8(r2)
  854254:	10800044 	addi	r2,r2,1
  854258:	10c00fcc 	andi	r3,r2,63
  85425c:	e0bffc17 	ldw	r2,-16(fp)
  854260:	10c00215 	stw	r3,8(r2)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  854264:	e0fff017 	ldw	r3,-64(fp)
  854268:	e0bffe17 	ldw	r2,-8(fp)
  85426c:	1880050e 	bge	r3,r2,854284 <altera_avalon_uart_read+0xd4>
  854270:	e0bffc17 	ldw	r2,-16(fp)
  854274:	10c00217 	ldw	r3,8(r2)
  854278:	e0bffc17 	ldw	r2,-16(fp)
  85427c:	10800317 	ldw	r2,12(r2)
  854280:	18bfe51e 	bne	r3,r2,854218 <__alt_mem_epcs_flash_controller_0+0xff84b218>
    /*
     * If no data has been transferred, the circular buffer is empty, and
     * this is not a non-blocking access, block waiting for data to arrive.
     */

    if (!count && (sp->rx_start == sp->rx_end))
  854284:	e0bff017 	ldw	r2,-64(fp)
  854288:	10003a1e 	bne	r2,zero,854374 <altera_avalon_uart_read+0x1c4>
  85428c:	e0bffc17 	ldw	r2,-16(fp)
  854290:	10c00217 	ldw	r3,8(r2)
  854294:	e0bffc17 	ldw	r2,-16(fp)
  854298:	10800317 	ldw	r2,12(r2)
  85429c:	1880351e 	bne	r3,r2,854374 <altera_avalon_uart_read+0x1c4>
    {
      if (!block)
  8542a0:	e0bff117 	ldw	r2,-60(fp)
  8542a4:	1000071e 	bne	r2,zero,8542c4 <altera_avalon_uart_read+0x114>
      {
        /* Set errno to indicate the reason we're not returning any data */

        ALT_ERRNO = EWOULDBLOCK;
  8542a8:	08541740 	call	854174 <alt_get_errno>
  8542ac:	1007883a 	mov	r3,r2
  8542b0:	008002c4 	movi	r2,11
  8542b4:	18800015 	stw	r2,0(r3)
        read_would_block = 1;
  8542b8:	00800044 	movi	r2,1
  8542bc:	e0bfef05 	stb	r2,-68(fp)
        break;
  8542c0:	00003006 	br	854384 <altera_avalon_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8542c4:	0005303a 	rdctl	r2,status
  8542c8:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8542cc:	e0fff517 	ldw	r3,-44(fp)
  8542d0:	00bfff84 	movi	r2,-2
  8542d4:	1884703a 	and	r2,r3,r2
  8542d8:	1001703a 	wrctl	status,r2
  
  return context;
  8542dc:	e0bff517 	ldw	r2,-44(fp)
      {
       /* Block waiting for some data to arrive */

       /* First, ensure read interrupts are enabled to avoid deadlock */

       context = alt_irq_disable_all ();
  8542e0:	e0bff415 	stw	r2,-48(fp)
       sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  8542e4:	e0bffc17 	ldw	r2,-16(fp)
  8542e8:	10800117 	ldw	r2,4(r2)
  8542ec:	10c02014 	ori	r3,r2,128
  8542f0:	e0bffc17 	ldw	r2,-16(fp)
  8542f4:	10c00115 	stw	r3,4(r2)
       IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  8542f8:	e0bffc17 	ldw	r2,-16(fp)
  8542fc:	10800017 	ldw	r2,0(r2)
  854300:	10800304 	addi	r2,r2,12
  854304:	e0fffc17 	ldw	r3,-16(fp)
  854308:	18c00117 	ldw	r3,4(r3)
  85430c:	10c00035 	stwio	r3,0(r2)
  854310:	e0bff417 	ldw	r2,-48(fp)
  854314:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  854318:	e0bff617 	ldw	r2,-40(fp)
  85431c:	1001703a 	wrctl	status,r2
        * flag set in the interrupt service routine. This avoids wasting CPU
        * cycles waiting in this thread, when we could be doing something more 
        * profitable elsewhere.
        */

       ALT_FLAG_PEND (sp->events, 
  854320:	e0bffc17 	ldw	r2,-16(fp)
  854324:	10800717 	ldw	r2,28(r2)
  854328:	e0bff215 	stw	r2,-56(fp)
  85432c:	00800044 	movi	r2,1
  854330:	e0bff98d 	sth	r2,-26(fp)
  854334:	00bfe0c4 	movi	r2,-125
  854338:	e0bffa05 	stb	r2,-24(fp)
  85433c:	e03ffa8d 	sth	zero,-22(fp)
                   OS_FLAGS flags, 
                   INT8U wait_type, 
                   INT16U timeout)
{
  INT8U err;
  if (OSRunning)
  854340:	d0a09543 	ldbu	r2,-32171(gp)
  854344:	10803fcc 	andi	r2,r2,255
  854348:	10000a26 	beq	r2,zero,854374 <altera_avalon_uart_read+0x1c4>
  {
    OSFlagPend (group, flags, wait_type, timeout, &err);
  85434c:	e0fff98b 	ldhu	r3,-26(fp)
  854350:	e13ffa03 	ldbu	r4,-24(fp)
  854354:	e17ffa8b 	ldhu	r5,-22(fp)
  854358:	e0bffb04 	addi	r2,fp,-20
  85435c:	d8800015 	stw	r2,0(sp)
  854360:	280f883a 	mov	r7,r5
  854364:	200d883a 	mov	r6,r4
  854368:	180b883a 	mov	r5,r3
  85436c:	e13ff217 	ldw	r4,-56(fp)
  854370:	084d36c0 	call	84d36c <OSFlagPend>
                      OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                      0);
      }
    }
  }
  while (!count && len);
  854374:	e0bff017 	ldw	r2,-64(fp)
  854378:	1000021e 	bne	r2,zero,854384 <altera_avalon_uart_read+0x1d4>
  85437c:	e0bffe17 	ldw	r2,-8(fp)
  854380:	103fb81e 	bne	r2,zero,854264 <__alt_mem_epcs_flash_controller_0+0xff84b264>
  /*
   * Now that access to the circular buffer is complete, release the read
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);
  854384:	e0bffc17 	ldw	r2,-16(fp)
  854388:	10800817 	ldw	r2,32(r2)
  85438c:	1009883a 	mov	r4,r2
  854390:	08501580 	call	850158 <OSSemPost>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  854394:	0005303a 	rdctl	r2,status
  854398:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  85439c:	e0fff717 	ldw	r3,-36(fp)
  8543a0:	00bfff84 	movi	r2,-2
  8543a4:	1884703a 	and	r2,r3,r2
  8543a8:	1001703a 	wrctl	status,r2
  
  return context;
  8543ac:	e0bff717 	ldw	r2,-36(fp)
  /*
   * Ensure that interrupts are enabled, so that the circular buffer can
   * re-fill.
   */

  context = alt_irq_disable_all ();
  8543b0:	e0bff415 	stw	r2,-48(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  8543b4:	e0bffc17 	ldw	r2,-16(fp)
  8543b8:	10800117 	ldw	r2,4(r2)
  8543bc:	10c02014 	ori	r3,r2,128
  8543c0:	e0bffc17 	ldw	r2,-16(fp)
  8543c4:	10c00115 	stw	r3,4(r2)
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  8543c8:	e0bffc17 	ldw	r2,-16(fp)
  8543cc:	10800017 	ldw	r2,0(r2)
  8543d0:	10800304 	addi	r2,r2,12
  8543d4:	e0fffc17 	ldw	r3,-16(fp)
  8543d8:	18c00117 	ldw	r3,4(r3)
  8543dc:	10c00035 	stwio	r3,0(r2)
  8543e0:	e0bff417 	ldw	r2,-48(fp)
  8543e4:	e0bff315 	stw	r2,-52(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8543e8:	e0bff317 	ldw	r2,-52(fp)
  8543ec:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* Return the number of bytes read */
  if(read_would_block) {
  8543f0:	e0bfef03 	ldbu	r2,-68(fp)
  8543f4:	10000226 	beq	r2,zero,854400 <altera_avalon_uart_read+0x250>
    return -EWOULDBLOCK;
  8543f8:	00bffd44 	movi	r2,-11
  8543fc:	00000106 	br	854404 <altera_avalon_uart_read+0x254>
  }
  else {
    return count;
  854400:	e0bff017 	ldw	r2,-64(fp)
  }
}
  854404:	e037883a 	mov	sp,fp
  854408:	dfc00117 	ldw	ra,4(sp)
  85440c:	df000017 	ldw	fp,0(sp)
  854410:	dec00204 	addi	sp,sp,8
  854414:	f800283a 	ret

00854418 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  854418:	defffe04 	addi	sp,sp,-8
  85441c:	dfc00115 	stw	ra,4(sp)
  854420:	df000015 	stw	fp,0(sp)
  854424:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  854428:	d0a04317 	ldw	r2,-32500(gp)
  85442c:	10000326 	beq	r2,zero,85443c <alt_get_errno+0x24>
  854430:	d0a04317 	ldw	r2,-32500(gp)
  854434:	103ee83a 	callr	r2
  854438:	00000106 	br	854440 <alt_get_errno+0x28>
  85443c:	d0a08804 	addi	r2,gp,-32224
}
  854440:	e037883a 	mov	sp,fp
  854444:	dfc00117 	ldw	ra,4(sp)
  854448:	df000017 	ldw	fp,0(sp)
  85444c:	dec00204 	addi	sp,sp,8
  854450:	f800283a 	ret

00854454 <altera_avalon_uart_write>:
 */

int
altera_avalon_uart_write(altera_avalon_uart_state* sp, const char* ptr, int len,
  int flags)
{
  854454:	deffec04 	addi	sp,sp,-80
  854458:	dfc01315 	stw	ra,76(sp)
  85445c:	df001215 	stw	fp,72(sp)
  854460:	df001204 	addi	fp,sp,72
  854464:	e13ffc15 	stw	r4,-16(fp)
  854468:	e17ffd15 	stw	r5,-12(fp)
  85446c:	e1bffe15 	stw	r6,-8(fp)
  854470:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             no_block;
  alt_u32         next;
  int             count = len;
  854474:	e0bffe17 	ldw	r2,-8(fp)
  854478:	e0bfef15 	stw	r2,-68(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  no_block = (flags & O_NONBLOCK);
  85447c:	e0bfff17 	ldw	r2,-4(fp)
  854480:	1090000c 	andi	r2,r2,16384
  854484:	e0bff015 	stw	r2,-64(fp)
  /*
   * When running in a multi threaded environment, obtain the "write_lock"
   * semaphore. This ensures that writing to the device is thread-safe.
   */

  ALT_SEM_PEND (sp->write_lock, 0);
  854488:	e0bffc17 	ldw	r2,-16(fp)
  85448c:	10800917 	ldw	r2,36(r2)
  854490:	e0bff815 	stw	r2,-32(fp)
  854494:	e03ff90d 	sth	zero,-28(fp)
  854498:	e0bff90b 	ldhu	r2,-28(fp)
  85449c:	e0fffb44 	addi	r3,fp,-19
  8544a0:	180d883a 	mov	r6,r3
  8544a4:	100b883a 	mov	r5,r2
  8544a8:	e13ff817 	ldw	r4,-32(fp)
  8544ac:	084fde00 	call	84fde0 <OSSemPend>
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  8544b0:	00005106 	br	8545f8 <altera_avalon_uart_write+0x1a4>
  {
    /* Determine the next slot in the buffer to access */

    next = (sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  8544b4:	e0bffc17 	ldw	r2,-16(fp)
  8544b8:	10800517 	ldw	r2,20(r2)
  8544bc:	10800044 	addi	r2,r2,1
  8544c0:	10800fcc 	andi	r2,r2,63
  8544c4:	e0bff215 	stw	r2,-56(fp)

    /* block waiting for space if necessary */

    if (next == sp->tx_start)
  8544c8:	e0bffc17 	ldw	r2,-16(fp)
  8544cc:	10c00417 	ldw	r3,16(r2)
  8544d0:	e0bff217 	ldw	r2,-56(fp)
  8544d4:	1880371e 	bne	r3,r2,8545b4 <altera_avalon_uart_write+0x160>
    {
      if (no_block)
  8544d8:	e0bff017 	ldw	r2,-64(fp)
  8544dc:	10000526 	beq	r2,zero,8544f4 <altera_avalon_uart_write+0xa0>
      {
        /* Set errno to indicate why this function returned early */
 
        ALT_ERRNO = EWOULDBLOCK;
  8544e0:	08544180 	call	854418 <alt_get_errno>
  8544e4:	1007883a 	mov	r3,r2
  8544e8:	008002c4 	movi	r2,11
  8544ec:	18800015 	stw	r2,0(r3)
        break;
  8544f0:	00004306 	br	854600 <altera_avalon_uart_write+0x1ac>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8544f4:	0005303a 	rdctl	r2,status
  8544f8:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8544fc:	e0fff517 	ldw	r3,-44(fp)
  854500:	00bfff84 	movi	r2,-2
  854504:	1884703a 	and	r2,r3,r2
  854508:	1001703a 	wrctl	status,r2
  
  return context;
  85450c:	e0bff517 	ldw	r2,-44(fp)
      {
        /* Block waiting for space in the circular buffer */

        /* First, ensure transmit interrupts are enabled to avoid deadlock */

        context = alt_irq_disable_all ();
  854510:	e0bff415 	stw	r2,-48(fp)
        sp->ctrl |= (ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  854514:	e0bffc17 	ldw	r2,-16(fp)
  854518:	10800117 	ldw	r2,4(r2)
  85451c:	10c11014 	ori	r3,r2,1088
  854520:	e0bffc17 	ldw	r2,-16(fp)
  854524:	10c00115 	stw	r3,4(r2)
                        ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
        IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  854528:	e0bffc17 	ldw	r2,-16(fp)
  85452c:	10800017 	ldw	r2,0(r2)
  854530:	10800304 	addi	r2,r2,12
  854534:	e0fffc17 	ldw	r3,-16(fp)
  854538:	18c00117 	ldw	r3,4(r3)
  85453c:	10c00035 	stwio	r3,0(r2)
  854540:	e0bff417 	ldw	r2,-48(fp)
  854544:	e0bff115 	stw	r2,-60(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  854548:	e0bff117 	ldw	r2,-60(fp)
  85454c:	1001703a 	wrctl	status,r2
           * flag set in the interrupt service routine. This avoids wasting CPU
           * cycles waiting in this thread, when we could be doing something
           * more profitable elsewhere.
           */

          ALT_FLAG_PEND (sp->events, 
  854550:	e0bffc17 	ldw	r2,-16(fp)
  854554:	10800717 	ldw	r2,28(r2)
  854558:	e0bff315 	stw	r2,-52(fp)
  85455c:	00800084 	movi	r2,2
  854560:	e0bff98d 	sth	r2,-26(fp)
  854564:	00bfe0c4 	movi	r2,-125
  854568:	e0bffa05 	stb	r2,-24(fp)
  85456c:	e03ffa8d 	sth	zero,-22(fp)
                   OS_FLAGS flags, 
                   INT8U wait_type, 
                   INT16U timeout)
{
  INT8U err;
  if (OSRunning)
  854570:	d0a09543 	ldbu	r2,-32171(gp)
  854574:	10803fcc 	andi	r2,r2,255
  854578:	10000a26 	beq	r2,zero,8545a4 <altera_avalon_uart_write+0x150>
  {
    OSFlagPend (group, flags, wait_type, timeout, &err);
  85457c:	e0fff98b 	ldhu	r3,-26(fp)
  854580:	e13ffa03 	ldbu	r4,-24(fp)
  854584:	e17ffa8b 	ldhu	r5,-22(fp)
  854588:	e0bffb04 	addi	r2,fp,-20
  85458c:	d8800015 	stw	r2,0(sp)
  854590:	280f883a 	mov	r7,r5
  854594:	200d883a 	mov	r6,r4
  854598:	180b883a 	mov	r5,r3
  85459c:	e13ff317 	ldw	r4,-52(fp)
  8545a0:	084d36c0 	call	84d36c <OSFlagPend>
                         ALT_UART_WRITE_RDY,
                         OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                         0);
        }
        while ((next == sp->tx_start));
  8545a4:	e0bffc17 	ldw	r2,-16(fp)
  8545a8:	10c00417 	ldw	r3,16(r2)
  8545ac:	e0bff217 	ldw	r2,-56(fp)
  8545b0:	18bfe726 	beq	r3,r2,854550 <__alt_mem_epcs_flash_controller_0+0xff84b550>
      }
    }

    count--;
  8545b4:	e0bfef17 	ldw	r2,-68(fp)
  8545b8:	10bfffc4 	addi	r2,r2,-1
  8545bc:	e0bfef15 	stw	r2,-68(fp)

    /* Add the next character to the transmit buffer */

    sp->tx_buf[sp->tx_end] = *ptr++;
  8545c0:	e0bffc17 	ldw	r2,-16(fp)
  8545c4:	10c00517 	ldw	r3,20(r2)
  8545c8:	e0bffd17 	ldw	r2,-12(fp)
  8545cc:	11000044 	addi	r4,r2,1
  8545d0:	e13ffd15 	stw	r4,-12(fp)
  8545d4:	10800003 	ldbu	r2,0(r2)
  8545d8:	1009883a 	mov	r4,r2
  8545dc:	e0bffc17 	ldw	r2,-16(fp)
  8545e0:	10c5883a 	add	r2,r2,r3
  8545e4:	10801a04 	addi	r2,r2,104
  8545e8:	11000005 	stb	r4,0(r2)
    sp->tx_end = next;
  8545ec:	e0bffc17 	ldw	r2,-16(fp)
  8545f0:	e0fff217 	ldw	r3,-56(fp)
  8545f4:	10c00515 	stw	r3,20(r2)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  8545f8:	e0bfef17 	ldw	r2,-68(fp)
  8545fc:	103fad1e 	bne	r2,zero,8544b4 <__alt_mem_epcs_flash_controller_0+0xff84b4b4>
  /*
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->write_lock);
  854600:	e0bffc17 	ldw	r2,-16(fp)
  854604:	10800917 	ldw	r2,36(r2)
  854608:	1009883a 	mov	r4,r2
  85460c:	08501580 	call	850158 <OSSemPost>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  854610:	0005303a 	rdctl	r2,status
  854614:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  854618:	e0fff717 	ldw	r3,-36(fp)
  85461c:	00bfff84 	movi	r2,-2
  854620:	1884703a 	and	r2,r3,r2
  854624:	1001703a 	wrctl	status,r2
  
  return context;
  854628:	e0bff717 	ldw	r2,-36(fp)
  /* 
   * Ensure that interrupts are enabled, so that the circular buffer can 
   * drain.
   */

  context = alt_irq_disable_all ();
  85462c:	e0bff415 	stw	r2,-48(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  854630:	e0bffc17 	ldw	r2,-16(fp)
  854634:	10800117 	ldw	r2,4(r2)
  854638:	10c11014 	ori	r3,r2,1088
  85463c:	e0bffc17 	ldw	r2,-16(fp)
  854640:	10c00115 	stw	r3,4(r2)
                 ALTERA_AVALON_UART_CONTROL_DCTS_MSK;
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  854644:	e0bffc17 	ldw	r2,-16(fp)
  854648:	10800017 	ldw	r2,0(r2)
  85464c:	10800304 	addi	r2,r2,12
  854650:	e0fffc17 	ldw	r3,-16(fp)
  854654:	18c00117 	ldw	r3,4(r3)
  854658:	10c00035 	stwio	r3,0(r2)
  85465c:	e0bff417 	ldw	r2,-48(fp)
  854660:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  854664:	e0bff617 	ldw	r2,-40(fp)
  854668:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* return the number of bytes written */

  return (len - count);
  85466c:	e0fffe17 	ldw	r3,-8(fp)
  854670:	e0bfef17 	ldw	r2,-68(fp)
  854674:	1885c83a 	sub	r2,r3,r2
}
  854678:	e037883a 	mov	sp,fp
  85467c:	dfc00117 	ldw	ra,4(sp)
  854680:	df000017 	ldw	fp,0(sp)
  854684:	dec00204 	addi	sp,sp,8
  854688:	f800283a 	ret

0085468c <alt_hostfs_open>:
* alt_hostfs_open
*
* If we can't find anything return -1
*/
int alt_hostfs_open(alt_fd* fd, const char * name, int flags, int mode)
{
  85468c:	defff404 	addi	sp,sp,-48
  854690:	df000b15 	stw	fp,44(sp)
  854694:	df000b04 	addi	fp,sp,44
  854698:	e13ffc15 	stw	r4,-16(fp)
  85469c:	e17ffd15 	stw	r5,-12(fp)
  8546a0:	e1bffe15 	stw	r6,-8(fp)
  8546a4:	e1ffff15 	stw	r7,-4(fp)
  static const struct HOSTCALL_INFO hcinfo = { 0x0103, "open" };

  alt_hostfs_dev* dev= (alt_hostfs_dev*)fd->dev;
  8546a8:	e0bffc17 	ldw	r2,-16(fp)
  8546ac:	10800017 	ldw	r2,0(r2)
  8546b0:	e0bff515 	stw	r2,-44(fp)
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
  8546b4:	e0bff517 	ldw	r2,-44(fp)
  8546b8:	10800217 	ldw	r2,8(r2)
  8546bc:	e0bff615 	stw	r2,-40(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
  8546c0:	e0bff617 	ldw	r2,-40(fp)
  8546c4:	10bfffc4 	addi	r2,r2,-1
  8546c8:	e0bffb15 	stw	r2,-20(fp)

  while (*++ptr != 0)
  8546cc:	e0bffb17 	ldw	r2,-20(fp)
  8546d0:	10800044 	addi	r2,r2,1
  8546d4:	e0bffb15 	stw	r2,-20(fp)
  8546d8:	e0bffb17 	ldw	r2,-20(fp)
  8546dc:	10800003 	ldbu	r2,0(r2)
  8546e0:	10803fcc 	andi	r2,r2,255
  8546e4:	1080201c 	xori	r2,r2,128
  8546e8:	10bfe004 	addi	r2,r2,-128
  8546ec:	103ff71e 	bne	r2,zero,8546cc <__alt_mem_epcs_flash_controller_0+0xff84b6cc>
    ;

  return ptr - string;
  8546f0:	e0fffb17 	ldw	r3,-20(fp)
  8546f4:	e0bff617 	ldw	r2,-40(fp)
  8546f8:	1885c83a 	sub	r2,r3,r2
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
  8546fc:	10800044 	addi	r2,r2,1
  854700:	1007883a 	mov	r3,r2
  854704:	e0bffd17 	ldw	r2,-12(fp)
  854708:	10c5883a 	add	r2,r2,r3
  85470c:	e0bffd15 	stw	r2,-12(fp)

  r3 = (int)&hcinfo;
  854710:	d0a06504 	addi	r2,gp,-32364
  854714:	1007883a 	mov	r3,r2
  r4 = (int)name;
  854718:	e0bffd17 	ldw	r2,-12(fp)
  85471c:	1009883a 	mov	r4,r2
  r5 = flags;
  854720:	e17ffe17 	ldw	r5,-8(fp)
  r6 = mode;
  854724:	e1bfff17 	ldw	r6,-4(fp)
  854728:	e0bffd17 	ldw	r2,-12(fp)
  85472c:	e0bff915 	stw	r2,-28(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
  854730:	e0bff917 	ldw	r2,-28(fp)
  854734:	10bfffc4 	addi	r2,r2,-1
  854738:	e0bffa15 	stw	r2,-24(fp)

  while (*++ptr != 0)
  85473c:	e0bffa17 	ldw	r2,-24(fp)
  854740:	10800044 	addi	r2,r2,1
  854744:	e0bffa15 	stw	r2,-24(fp)
  854748:	e0bffa17 	ldw	r2,-24(fp)
  85474c:	10800003 	ldbu	r2,0(r2)
  854750:	10803fcc 	andi	r2,r2,255
  854754:	1080201c 	xori	r2,r2,128
  854758:	10bfe004 	addi	r2,r2,-128
  85475c:	103ff71e 	bne	r2,zero,85473c <__alt_mem_epcs_flash_controller_0+0xff84b73c>
    ;

  return ptr - string;
  854760:	e1fffa17 	ldw	r7,-24(fp)
  854764:	e0bff917 	ldw	r2,-28(fp)
  854768:	3885c83a 	sub	r2,r7,r2

  r3 = (int)&hcinfo;
  r4 = (int)name;
  r5 = flags;
  r6 = mode;
  r7 = inline_strlen(name);
  85476c:	100f883a 	mov	r7,r2

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6), "r" (r7) : "memory" );
  854770:	003da07a 	break	1

  handle = (void *)r2;
  854774:	e0bff715 	stw	r2,-36(fp)
  error = r3;
  854778:	e0fff815 	stw	r3,-32(fp)

  if (error == 0)
  85477c:	e0bff817 	ldw	r2,-32(fp)
  854780:	1000031e 	bne	r2,zero,854790 <alt_hostfs_open+0x104>
    fd->priv = handle;
  854784:	e0bffc17 	ldw	r2,-16(fp)
  854788:	e0fff717 	ldw	r3,-36(fp)
  85478c:	10c00115 	stw	r3,4(r2)

  return -error;
  854790:	e0bff817 	ldw	r2,-32(fp)
  854794:	0085c83a 	sub	r2,zero,r2
}
  854798:	e037883a 	mov	sp,fp
  85479c:	df000017 	ldw	fp,0(sp)
  8547a0:	dec00104 	addi	sp,sp,4
  8547a4:	f800283a 	ret

008547a8 <alt_hostfs_close>:
* alt_hostfs_close
*
* Read the file
*/
int alt_hostfs_close(alt_fd* fd)
{
  8547a8:	defffd04 	addi	sp,sp,-12
  8547ac:	df000215 	stw	fp,8(sp)
  8547b0:	df000204 	addi	fp,sp,8
  8547b4:	e13fff15 	stw	r4,-4(fp)

  /* Input and output parameters for the hostcall */
  register int r3 asm ("r3");
  register int r4 asm ("r4");

  r3 = (int)&hcinfo;
  8547b8:	d0a06804 	addi	r2,gp,-32352
  8547bc:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
  8547c0:	e0bfff17 	ldw	r2,-4(fp)
  8547c4:	10800117 	ldw	r2,4(r2)
  8547c8:	1009883a 	mov	r4,r2

  __asm__ volatile("break 1" : "+r" (r3) : "r" (r4) );
  8547cc:	003da07a 	break	1

  error = r3;
  8547d0:	e0fffe15 	stw	r3,-8(fp)

  return -error;
  8547d4:	e0bffe17 	ldw	r2,-8(fp)
  8547d8:	0085c83a 	sub	r2,zero,r2
}
  8547dc:	e037883a 	mov	sp,fp
  8547e0:	df000017 	ldw	fp,0(sp)
  8547e4:	dec00104 	addi	sp,sp,4
  8547e8:	f800283a 	ret

008547ec <alt_hostfs_read>:
* alt_hostfs_read
*
* Read the file
*/
int alt_hostfs_read(alt_fd* fd, char * ptr, int len)
{
  8547ec:	defffa04 	addi	sp,sp,-24
  8547f0:	df000515 	stw	fp,20(sp)
  8547f4:	df000504 	addi	fp,sp,20
  8547f8:	e13ffd15 	stw	r4,-12(fp)
  8547fc:	e17ffe15 	stw	r5,-8(fp)
  854800:	e1bfff15 	stw	r6,-4(fp)
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");


  r3 = (int)&hcinfo;
  854804:	d0a06b04 	addi	r2,gp,-32340
  854808:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
  85480c:	e0bffd17 	ldw	r2,-12(fp)
  854810:	10800117 	ldw	r2,4(r2)
  854814:	1009883a 	mov	r4,r2
  r5 = (int)ptr;
  854818:	e0bffe17 	ldw	r2,-8(fp)
  85481c:	100b883a 	mov	r5,r2
  r6 = len;
  854820:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
  854824:	003da07a 	break	1

  rc = r2;
  854828:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
  85482c:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
  854830:	e0bffc17 	ldw	r2,-16(fp)
  854834:	10000326 	beq	r2,zero,854844 <alt_hostfs_read+0x58>
  854838:	e0bffc17 	ldw	r2,-16(fp)
  85483c:	0085c83a 	sub	r2,zero,r2
  854840:	00000106 	br	854848 <alt_hostfs_read+0x5c>
  854844:	e0bffb17 	ldw	r2,-20(fp)
}
  854848:	e037883a 	mov	sp,fp
  85484c:	df000017 	ldw	fp,0(sp)
  854850:	dec00104 	addi	sp,sp,4
  854854:	f800283a 	ret

00854858 <alt_hostfs_write>:
* alt_hostfs_write
*
* Read the file
*/
int alt_hostfs_write(alt_fd* fd, const char * ptr, int len)
{
  854858:	defffa04 	addi	sp,sp,-24
  85485c:	df000515 	stw	fp,20(sp)
  854860:	df000504 	addi	fp,sp,20
  854864:	e13ffd15 	stw	r4,-12(fp)
  854868:	e17ffe15 	stw	r5,-8(fp)
  85486c:	e1bfff15 	stw	r6,-4(fp)
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");

  r3 = (int)&hcinfo;
  854870:	d0a06e04 	addi	r2,gp,-32328
  854874:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
  854878:	e0bffd17 	ldw	r2,-12(fp)
  85487c:	10800117 	ldw	r2,4(r2)
  854880:	1009883a 	mov	r4,r2
  r5 = (int)ptr;
  854884:	e0bffe17 	ldw	r2,-8(fp)
  854888:	100b883a 	mov	r5,r2
  r6 = len;
  85488c:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
  854890:	003da07a 	break	1

  rc = r2;
  854894:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
  854898:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
  85489c:	e0bffc17 	ldw	r2,-16(fp)
  8548a0:	10000326 	beq	r2,zero,8548b0 <alt_hostfs_write+0x58>
  8548a4:	e0bffc17 	ldw	r2,-16(fp)
  8548a8:	0085c83a 	sub	r2,zero,r2
  8548ac:	00000106 	br	8548b4 <alt_hostfs_write+0x5c>
  8548b0:	e0bffb17 	ldw	r2,-20(fp)
}
  8548b4:	e037883a 	mov	sp,fp
  8548b8:	df000017 	ldw	fp,0(sp)
  8548bc:	dec00104 	addi	sp,sp,4
  8548c0:	f800283a 	ret

008548c4 <alt_hostfs_seek>:
* Move around within a file
*
* returns -errno for an error or the offset within the file
*/
int alt_hostfs_seek(alt_fd* fd, int ptr, int dir)
{
  8548c4:	defffa04 	addi	sp,sp,-24
  8548c8:	df000515 	stw	fp,20(sp)
  8548cc:	df000504 	addi	fp,sp,20
  8548d0:	e13ffd15 	stw	r4,-12(fp)
  8548d4:	e17ffe15 	stw	r5,-8(fp)
  8548d8:	e1bfff15 	stw	r6,-4(fp)
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");

  r3 = (int)&hcinfo;
  8548dc:	d0a07104 	addi	r2,gp,-32316
  8548e0:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
  8548e4:	e0bffd17 	ldw	r2,-12(fp)
  8548e8:	10800117 	ldw	r2,4(r2)
  8548ec:	1009883a 	mov	r4,r2
  r5 = ptr;
  8548f0:	e17ffe17 	ldw	r5,-8(fp)
  r6 = dir;
  8548f4:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
  8548f8:	003da07a 	break	1

  rc = r2;
  8548fc:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
  854900:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
  854904:	e0bffc17 	ldw	r2,-16(fp)
  854908:	10000326 	beq	r2,zero,854918 <alt_hostfs_seek+0x54>
  85490c:	e0bffc17 	ldw	r2,-16(fp)
  854910:	0085c83a 	sub	r2,zero,r2
  854914:	00000106 	br	85491c <alt_hostfs_seek+0x58>
  854918:	e0bffb17 	ldw	r2,-20(fp)
}
  85491c:	e037883a 	mov	sp,fp
  854920:	df000017 	ldw	fp,0(sp)
  854924:	dec00104 	addi	sp,sp,4
  854928:	f800283a 	ret

0085492c <alt_hostfs_fstat>:
* at the lower address.
* We need to copy the structure and byte swap it to make it match our local
* layout of struct stat.
*/
int alt_hostfs_fstat(alt_fd* fd, struct stat* st)
{
  85492c:	deffe904 	addi	sp,sp,-92
  854930:	df001615 	stw	fp,88(sp)
  854934:	df001604 	addi	fp,sp,88
  854938:	e13ffe15 	stw	r4,-8(fp)
  85493c:	e17fff15 	stw	r5,-4(fp)
  register int r2 asm ("r2");
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");

  r3 = (int)&hcinfo;
  854940:	d0a07404 	addi	r2,gp,-32304
  854944:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
  854948:	e0bffe17 	ldw	r2,-8(fp)
  85494c:	10800117 	ldw	r2,4(r2)
  854950:	1009883a 	mov	r4,r2
  r5 = (int)&hoststat;
  854954:	e0bfee04 	addi	r2,fp,-72
  854958:	100b883a 	mov	r5,r2

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5) : "memory" );
  85495c:	003da07a 	break	1

  rc = r2;
  854960:	e0bfeb15 	stw	r2,-84(fp)
  error = r3;
  854964:	e0ffec15 	stw	r3,-80(fp)

  if (error == 0)
  854968:	e0bfec17 	ldw	r2,-80(fp)
  85496c:	1000621e 	bne	r2,zero,854af8 <alt_hostfs_fstat+0x1cc>
     * no change is required.  On a little-endian processor we need to swap
     * the bytes in each word.
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
  854970:	e0bfee04 	addi	r2,fp,-72
  854974:	e0bfea15 	stw	r2,-88(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
  854978:	e0bfea17 	ldw	r2,-88(fp)
  85497c:	10801004 	addi	r2,r2,64
  854980:	e0bfed15 	stw	r2,-76(fp)
    for ( ; ptr < end ; ptr++)
  854984:	00001606 	br	8549e0 <alt_hostfs_fstat+0xb4>
      *ptr = ((*ptr & 0xFF000000) >> 24) |
  854988:	e0bfea17 	ldw	r2,-88(fp)
  85498c:	10800017 	ldw	r2,0(r2)
  854990:	1006d63a 	srli	r3,r2,24
             ((*ptr & 0x00FF0000) >> 8)  |
  854994:	e0bfea17 	ldw	r2,-88(fp)
  854998:	10800017 	ldw	r2,0(r2)
  85499c:	10803fec 	andhi	r2,r2,255
  8549a0:	1004d23a 	srli	r2,r2,8

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
  8549a4:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
  8549a8:	e0bfea17 	ldw	r2,-88(fp)
  8549ac:	10800017 	ldw	r2,0(r2)
  8549b0:	10bfc00c 	andi	r2,r2,65280
  8549b4:	1004923a 	slli	r2,r2,8
#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
  8549b8:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
  8549bc:	e0bfea17 	ldw	r2,-88(fp)
  8549c0:	10800017 	ldw	r2,0(r2)
  8549c4:	1004963a 	slli	r2,r2,24
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
  8549c8:	1886b03a 	or	r3,r3,r2

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
  8549cc:	e0bfea17 	ldw	r2,-88(fp)
  8549d0:	10c00015 	stw	r3,0(r2)
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
  8549d4:	e0bfea17 	ldw	r2,-88(fp)
  8549d8:	10800104 	addi	r2,r2,4
  8549dc:	e0bfea15 	stw	r2,-88(fp)
  8549e0:	e0ffea17 	ldw	r3,-88(fp)
  8549e4:	e0bfed17 	ldw	r2,-76(fp)
  8549e8:	18bfe736 	bltu	r3,r2,854988 <__alt_mem_epcs_flash_controller_0+0xff84b988>
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
  8549ec:	e0bfff17 	ldw	r2,-4(fp)
  8549f0:	e0bfea15 	stw	r2,-88(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
  8549f4:	e0bfea17 	ldw	r2,-88(fp)
  8549f8:	10800f04 	addi	r2,r2,60
  8549fc:	e0bfed15 	stw	r2,-76(fp)
    for ( ; ptr < end ; ptr++)
  854a00:	00000506 	br	854a18 <alt_hostfs_fstat+0xec>
      *ptr = 0;
  854a04:	e0bfea17 	ldw	r2,-88(fp)
  854a08:	10000015 	stw	zero,0(r2)
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
    for ( ; ptr < end ; ptr++)
  854a0c:	e0bfea17 	ldw	r2,-88(fp)
  854a10:	10800104 	addi	r2,r2,4
  854a14:	e0bfea15 	stw	r2,-88(fp)
  854a18:	e0ffea17 	ldw	r3,-88(fp)
  854a1c:	e0bfed17 	ldw	r2,-76(fp)
  854a20:	18bff836 	bltu	r3,r2,854a04 <__alt_mem_epcs_flash_controller_0+0xff84ba04>

    /* Copy the data provided by the host into our local copy, for data which
     * is provided as 64bit values by the host we just use the least
     * significant word.
     */
    st->st_dev     = hoststat.fst_dev;
  854a24:	e0bfee17 	ldw	r2,-72(fp)
  854a28:	1007883a 	mov	r3,r2
  854a2c:	e0bfff17 	ldw	r2,-4(fp)
  854a30:	10c0000d 	sth	r3,0(r2)
    st->st_ino     = hoststat.fst_ino;
  854a34:	e0bfef17 	ldw	r2,-68(fp)
  854a38:	1007883a 	mov	r3,r2
  854a3c:	e0bfff17 	ldw	r2,-4(fp)
  854a40:	10c0008d 	sth	r3,2(r2)
    st->st_mode    = hoststat.fst_mode;
  854a44:	e0fff017 	ldw	r3,-64(fp)
  854a48:	e0bfff17 	ldw	r2,-4(fp)
  854a4c:	10c00115 	stw	r3,4(r2)
    st->st_nlink   = hoststat.fst_nlink;
  854a50:	e0bff117 	ldw	r2,-60(fp)
  854a54:	1007883a 	mov	r3,r2
  854a58:	e0bfff17 	ldw	r2,-4(fp)
  854a5c:	10c0020d 	sth	r3,8(r2)
    st->st_uid     = hoststat.fst_uid;
  854a60:	e0bff217 	ldw	r2,-56(fp)
  854a64:	1007883a 	mov	r3,r2
  854a68:	e0bfff17 	ldw	r2,-4(fp)
  854a6c:	10c0028d 	sth	r3,10(r2)
    st->st_gid     = hoststat.fst_gid;
  854a70:	e0bff317 	ldw	r2,-52(fp)
  854a74:	1007883a 	mov	r3,r2
  854a78:	e0bfff17 	ldw	r2,-4(fp)
  854a7c:	10c0030d 	sth	r3,12(r2)
    st->st_rdev    = hoststat.fst_rdev;
  854a80:	e0bff417 	ldw	r2,-48(fp)
  854a84:	1007883a 	mov	r3,r2
  854a88:	e0bfff17 	ldw	r2,-4(fp)
  854a8c:	10c0038d 	sth	r3,14(r2)
    st->st_size    = hoststat.fst_size[1];
  854a90:	e0bff617 	ldw	r2,-40(fp)
  854a94:	1007883a 	mov	r3,r2
  854a98:	e0bfff17 	ldw	r2,-4(fp)
  854a9c:	10c00415 	stw	r3,16(r2)

    st->st_atime   = hoststat.fst_atime;
  854aa0:	e0bffb17 	ldw	r2,-20(fp)
  854aa4:	1007883a 	mov	r3,r2
  854aa8:	e0bfff17 	ldw	r2,-4(fp)
  854aac:	10c00515 	stw	r3,20(r2)
    st->st_mtime   = hoststat.fst_mtime;
  854ab0:	e0bffc17 	ldw	r2,-16(fp)
  854ab4:	1007883a 	mov	r3,r2
  854ab8:	e0bfff17 	ldw	r2,-4(fp)
  854abc:	10c00715 	stw	r3,28(r2)
    st->st_ctime   = hoststat.fst_ctime;
  854ac0:	e0bffd17 	ldw	r2,-12(fp)
  854ac4:	1007883a 	mov	r3,r2
  854ac8:	e0bfff17 	ldw	r2,-4(fp)
  854acc:	10c00915 	stw	r3,36(r2)

    st->st_blksize = hoststat.fst_blksize[1];
  854ad0:	e0bff817 	ldw	r2,-32(fp)
  854ad4:	1007883a 	mov	r3,r2
  854ad8:	e0bfff17 	ldw	r2,-4(fp)
  854adc:	10c00b15 	stw	r3,44(r2)
    st->st_blocks  = hoststat.fst_blocks[1];
  854ae0:	e0bffa17 	ldw	r2,-24(fp)
  854ae4:	1007883a 	mov	r3,r2
  854ae8:	e0bfff17 	ldw	r2,-4(fp)
  854aec:	10c00c15 	stw	r3,48(r2)

    return rc;
  854af0:	e0bfeb17 	ldw	r2,-84(fp)
  854af4:	00000206 	br	854b00 <alt_hostfs_fstat+0x1d4>
  }
  else
    return -error;
  854af8:	e0bfec17 	ldw	r2,-80(fp)
  854afc:	0085c83a 	sub	r2,zero,r2
}
  854b00:	e037883a 	mov	sp,fp
  854b04:	df000017 	ldw	fp,0(sp)
  854b08:	dec00104 	addi	sp,sp,4
  854b0c:	f800283a 	ret

00854b10 <epcs_read_status_register>:
#include "alt_types.h"
#include "epcs_commands.h"
#include "altera_avalon_spi.h"

alt_u8 epcs_read_status_register(alt_u32 base)
{
  854b10:	defff904 	addi	sp,sp,-28
  854b14:	dfc00615 	stw	ra,24(sp)
  854b18:	df000515 	stw	fp,20(sp)
  854b1c:	df000504 	addi	fp,sp,20
  854b20:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 rdsr = epcs_rdsr;
  854b24:	00800144 	movi	r2,5
  854b28:	e0bffe05 	stb	r2,-8(fp)
  alt_u8 status;
  alt_avalon_spi_command(
  854b2c:	d8000215 	stw	zero,8(sp)
  854b30:	e0bffe44 	addi	r2,fp,-7
  854b34:	d8800115 	stw	r2,4(sp)
  854b38:	00800044 	movi	r2,1
  854b3c:	d8800015 	stw	r2,0(sp)
  854b40:	e1fffe04 	addi	r7,fp,-8
  854b44:	01800044 	movi	r6,1
  854b48:	000b883a 	mov	r5,zero
  854b4c:	e13fff17 	ldw	r4,-4(fp)
  854b50:	0856aec0 	call	856aec <alt_avalon_spi_command>
    1,
    &status,
    0
  );

  return status;
  854b54:	e0bffe43 	ldbu	r2,-7(fp)
}
  854b58:	e037883a 	mov	sp,fp
  854b5c:	dfc00117 	ldw	ra,4(sp)
  854b60:	df000017 	ldw	fp,0(sp)
  854b64:	dec00204 	addi	sp,sp,8
  854b68:	f800283a 	ret

00854b6c <epcs_test_wip>:

static ALT_INLINE int epcs_test_wip(alt_u32 base)
{
  854b6c:	defffd04 	addi	sp,sp,-12
  854b70:	dfc00215 	stw	ra,8(sp)
  854b74:	df000115 	stw	fp,4(sp)
  854b78:	df000104 	addi	fp,sp,4
  854b7c:	e13fff15 	stw	r4,-4(fp)
  return epcs_read_status_register(base) & 1;
  854b80:	e13fff17 	ldw	r4,-4(fp)
  854b84:	0854b100 	call	854b10 <epcs_read_status_register>
  854b88:	10803fcc 	andi	r2,r2,255
  854b8c:	1080004c 	andi	r2,r2,1
}
  854b90:	e037883a 	mov	sp,fp
  854b94:	dfc00117 	ldw	ra,4(sp)
  854b98:	df000017 	ldw	fp,0(sp)
  854b9c:	dec00204 	addi	sp,sp,8
  854ba0:	f800283a 	ret

00854ba4 <epcs_await_wip_released>:

static ALT_INLINE void epcs_await_wip_released(alt_u32 base)
{
  854ba4:	defffd04 	addi	sp,sp,-12
  854ba8:	dfc00215 	stw	ra,8(sp)
  854bac:	df000115 	stw	fp,4(sp)
  854bb0:	df000104 	addi	fp,sp,4
  854bb4:	e13fff15 	stw	r4,-4(fp)
  /* Wait until the WIP bit goes low. */
  while (epcs_test_wip(base))
  854bb8:	0001883a 	nop
  854bbc:	e13fff17 	ldw	r4,-4(fp)
  854bc0:	0854b6c0 	call	854b6c <epcs_test_wip>
  854bc4:	103ffd1e 	bne	r2,zero,854bbc <__alt_mem_epcs_flash_controller_0+0xff84bbbc>
  {
  }
}
  854bc8:	0001883a 	nop
  854bcc:	e037883a 	mov	sp,fp
  854bd0:	dfc00117 	ldw	ra,4(sp)
  854bd4:	df000017 	ldw	fp,0(sp)
  854bd8:	dec00204 	addi	sp,sp,8
  854bdc:	f800283a 	ret

00854be0 <epcs_sector_erase>:

void epcs_sector_erase(alt_u32 base, alt_u32 offset, alt_u32 four_bytes_mode)
{
  854be0:	defff604 	addi	sp,sp,-40
  854be4:	dfc00915 	stw	ra,36(sp)
  854be8:	df000815 	stw	fp,32(sp)
  854bec:	df000804 	addi	fp,sp,32
  854bf0:	e13ffd15 	stw	r4,-12(fp)
  854bf4:	e17ffe15 	stw	r5,-8(fp)
  854bf8:	e1bfff15 	stw	r6,-4(fp)
  alt_u8 se[5];
  alt_u8 len;
  
  if(four_bytes_mode)
  854bfc:	e0bfff17 	ldw	r2,-4(fp)
  854c00:	10001226 	beq	r2,zero,854c4c <epcs_sector_erase+0x6c>
  {
      se[0] = epcs_se;  /* Note: Use epcs_se for Micron EPCS256 */
  854c04:	00bff604 	movi	r2,-40
  854c08:	e0bffb45 	stb	r2,-19(fp)
      se[1] = (offset >> 24) & 0xFF;
  854c0c:	e0bffe17 	ldw	r2,-8(fp)
  854c10:	1004d63a 	srli	r2,r2,24
  854c14:	e0bffb85 	stb	r2,-18(fp)
      se[2] = (offset >> 16) & 0xFF;
  854c18:	e0bffe17 	ldw	r2,-8(fp)
  854c1c:	1004d43a 	srli	r2,r2,16
  854c20:	e0bffbc5 	stb	r2,-17(fp)
      se[3] = (offset >> 8) & 0xFF;
  854c24:	e0bffe17 	ldw	r2,-8(fp)
  854c28:	1004d23a 	srli	r2,r2,8
  854c2c:	e0bffc05 	stb	r2,-16(fp)
      se[4] = offset & 0xFF;
  854c30:	e0bffe17 	ldw	r2,-8(fp)
  854c34:	e0bffc45 	stb	r2,-15(fp)
      len   = 5;
  854c38:	00800144 	movi	r2,5
  854c3c:	e0bffb05 	stb	r2,-20(fp)
      epcs_enter_4_bytes_mode(base);
  854c40:	e13ffd17 	ldw	r4,-12(fp)
  854c44:	08550940 	call	855094 <epcs_enter_4_bytes_mode>
  854c48:	00000c06 	br	854c7c <epcs_sector_erase+0x9c>
  }
  else
  {
      se[0] = epcs_se;
  854c4c:	00bff604 	movi	r2,-40
  854c50:	e0bffb45 	stb	r2,-19(fp)
      se[1] = (offset >> 16) & 0xFF;
  854c54:	e0bffe17 	ldw	r2,-8(fp)
  854c58:	1004d43a 	srli	r2,r2,16
  854c5c:	e0bffb85 	stb	r2,-18(fp)
      se[2] = (offset >> 8) & 0xFF;
  854c60:	e0bffe17 	ldw	r2,-8(fp)
  854c64:	1004d23a 	srli	r2,r2,8
  854c68:	e0bffbc5 	stb	r2,-17(fp)
      se[3] = offset & 0xFF;
  854c6c:	e0bffe17 	ldw	r2,-8(fp)
  854c70:	e0bffc05 	stb	r2,-16(fp)
      len   = 4;
  854c74:	00800104 	movi	r2,4
  854c78:	e0bffb05 	stb	r2,-20(fp)
  }

  /* Execute a WREN instruction */
  epcs_write_enable(base);
  854c7c:	e13ffd17 	ldw	r4,-12(fp)
  854c80:	0854dd00 	call	854dd0 <epcs_write_enable>

  alt_avalon_spi_command(
  854c84:	e0bffb03 	ldbu	r2,-20(fp)
  854c88:	e0fffb44 	addi	r3,fp,-19
  854c8c:	d8000215 	stw	zero,8(sp)
  854c90:	d8000115 	stw	zero,4(sp)
  854c94:	d8000015 	stw	zero,0(sp)
  854c98:	180f883a 	mov	r7,r3
  854c9c:	100d883a 	mov	r6,r2
  854ca0:	000b883a 	mov	r5,zero
  854ca4:	e13ffd17 	ldw	r4,-12(fp)
  854ca8:	0856aec0 	call	856aec <alt_avalon_spi_command>
    0,
    (alt_u8*)0,
    0
  );

  epcs_await_wip_released(base);
  854cac:	e13ffd17 	ldw	r4,-12(fp)
  854cb0:	0854ba40 	call	854ba4 <epcs_await_wip_released>

  if(four_bytes_mode)
  854cb4:	e0bfff17 	ldw	r2,-4(fp)
  854cb8:	10000226 	beq	r2,zero,854cc4 <epcs_sector_erase+0xe4>
  {
    epcs_exit_4_bytes_mode(base);
  854cbc:	e13ffd17 	ldw	r4,-12(fp)
  854cc0:	08550f00 	call	8550f0 <epcs_exit_4_bytes_mode>
  }
}
  854cc4:	0001883a 	nop
  854cc8:	e037883a 	mov	sp,fp
  854ccc:	dfc00117 	ldw	ra,4(sp)
  854cd0:	df000017 	ldw	fp,0(sp)
  854cd4:	dec00204 	addi	sp,sp,8
  854cd8:	f800283a 	ret

00854cdc <epcs_read_buffer>:

alt_32 epcs_read_buffer(alt_u32 base, int offset, alt_u8 *dest_addr, int length,
                        alt_u32 four_bytes_mode)
{
  854cdc:	defff404 	addi	sp,sp,-48
  854ce0:	dfc00b15 	stw	ra,44(sp)
  854ce4:	df000a15 	stw	fp,40(sp)
  854ce8:	df000a04 	addi	fp,sp,40
  854cec:	e13ffc15 	stw	r4,-16(fp)
  854cf0:	e17ffd15 	stw	r5,-12(fp)
  854cf4:	e1bffe15 	stw	r6,-8(fp)
  854cf8:	e1ffff15 	stw	r7,-4(fp)
  alt_u8 read_command[5];
  alt_u32 cmd_len;

  read_command[0] = epcs_read;
  854cfc:	008000c4 	movi	r2,3
  854d00:	e0bffa05 	stb	r2,-24(fp)
  
  if(four_bytes_mode)
  854d04:	e0800217 	ldw	r2,8(fp)
  854d08:	10001026 	beq	r2,zero,854d4c <epcs_read_buffer+0x70>
  {
        read_command[1] = (offset >> 24) & 0xFF;
  854d0c:	e0bffd17 	ldw	r2,-12(fp)
  854d10:	1004d63a 	srli	r2,r2,24
  854d14:	e0bffa45 	stb	r2,-23(fp)
        read_command[2] = (offset >> 16) & 0xFF;
  854d18:	e0bffd17 	ldw	r2,-12(fp)
  854d1c:	1005d43a 	srai	r2,r2,16
  854d20:	e0bffa85 	stb	r2,-22(fp)
        read_command[3] = (offset >> 8) & 0xFF;
  854d24:	e0bffd17 	ldw	r2,-12(fp)
  854d28:	1005d23a 	srai	r2,r2,8
  854d2c:	e0bffac5 	stb	r2,-21(fp)
        read_command[4] = offset & 0xFF;
  854d30:	e0bffd17 	ldw	r2,-12(fp)
  854d34:	e0bffb05 	stb	r2,-20(fp)
        cmd_len = 5;
  854d38:	00800144 	movi	r2,5
  854d3c:	e0bff915 	stw	r2,-28(fp)
        epcs_enter_4_bytes_mode(base);
  854d40:	e13ffc17 	ldw	r4,-16(fp)
  854d44:	08550940 	call	855094 <epcs_enter_4_bytes_mode>
  854d48:	00000a06 	br	854d74 <epcs_read_buffer+0x98>
  }
  else
  {
        read_command[1] = (offset >> 16) & 0xFF;
  854d4c:	e0bffd17 	ldw	r2,-12(fp)
  854d50:	1005d43a 	srai	r2,r2,16
  854d54:	e0bffa45 	stb	r2,-23(fp)
        read_command[2] = (offset >> 8) & 0xFF;
  854d58:	e0bffd17 	ldw	r2,-12(fp)
  854d5c:	1005d23a 	srai	r2,r2,8
  854d60:	e0bffa85 	stb	r2,-22(fp)
        read_command[3] = offset & 0xFF;
  854d64:	e0bffd17 	ldw	r2,-12(fp)
  854d68:	e0bffac5 	stb	r2,-21(fp)
        cmd_len = 4;
  854d6c:	00800104 	movi	r2,4
  854d70:	e0bff915 	stw	r2,-28(fp)
  }

  epcs_await_wip_released(base);
  854d74:	e13ffc17 	ldw	r4,-16(fp)
  854d78:	0854ba40 	call	854ba4 <epcs_await_wip_released>

  alt_avalon_spi_command(
  854d7c:	e0bfff17 	ldw	r2,-4(fp)
  854d80:	e13ffa04 	addi	r4,fp,-24
  854d84:	d8000215 	stw	zero,8(sp)
  854d88:	e0fffe17 	ldw	r3,-8(fp)
  854d8c:	d8c00115 	stw	r3,4(sp)
  854d90:	d8800015 	stw	r2,0(sp)
  854d94:	200f883a 	mov	r7,r4
  854d98:	e1bff917 	ldw	r6,-28(fp)
  854d9c:	000b883a 	mov	r5,zero
  854da0:	e13ffc17 	ldw	r4,-16(fp)
  854da4:	0856aec0 	call	856aec <alt_avalon_spi_command>
    length,
    (alt_u8*)dest_addr,
    0
  );

  if(four_bytes_mode)
  854da8:	e0800217 	ldw	r2,8(fp)
  854dac:	10000226 	beq	r2,zero,854db8 <epcs_read_buffer+0xdc>
  {
    epcs_exit_4_bytes_mode(base);
  854db0:	e13ffc17 	ldw	r4,-16(fp)
  854db4:	08550f00 	call	8550f0 <epcs_exit_4_bytes_mode>
  }

  return length;
  854db8:	e0bfff17 	ldw	r2,-4(fp)
}
  854dbc:	e037883a 	mov	sp,fp
  854dc0:	dfc00117 	ldw	ra,4(sp)
  854dc4:	df000017 	ldw	fp,0(sp)
  854dc8:	dec00204 	addi	sp,sp,8
  854dcc:	f800283a 	ret

00854dd0 <epcs_write_enable>:

void epcs_write_enable(alt_u32 base)
{
  854dd0:	defff904 	addi	sp,sp,-28
  854dd4:	dfc00615 	stw	ra,24(sp)
  854dd8:	df000515 	stw	fp,20(sp)
  854ddc:	df000504 	addi	fp,sp,20
  854de0:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 wren = epcs_wren;
  854de4:	00800184 	movi	r2,6
  854de8:	e0bffe05 	stb	r2,-8(fp)
  alt_avalon_spi_command(
  854dec:	d8000215 	stw	zero,8(sp)
  854df0:	d8000115 	stw	zero,4(sp)
  854df4:	d8000015 	stw	zero,0(sp)
  854df8:	e1fffe04 	addi	r7,fp,-8
  854dfc:	01800044 	movi	r6,1
  854e00:	000b883a 	mov	r5,zero
  854e04:	e13fff17 	ldw	r4,-4(fp)
  854e08:	0856aec0 	call	856aec <alt_avalon_spi_command>
    &wren,
    0,
    (alt_u8*)0,
    0
  );
}
  854e0c:	0001883a 	nop
  854e10:	e037883a 	mov	sp,fp
  854e14:	dfc00117 	ldw	ra,4(sp)
  854e18:	df000017 	ldw	fp,0(sp)
  854e1c:	dec00204 	addi	sp,sp,8
  854e20:	f800283a 	ret

00854e24 <epcs_write_status_register>:

void epcs_write_status_register(alt_u32 base, alt_u8 value)
{
  854e24:	defff804 	addi	sp,sp,-32
  854e28:	dfc00715 	stw	ra,28(sp)
  854e2c:	df000615 	stw	fp,24(sp)
  854e30:	df000604 	addi	fp,sp,24
  854e34:	e13ffe15 	stw	r4,-8(fp)
  854e38:	2805883a 	mov	r2,r5
  854e3c:	e0bfff05 	stb	r2,-4(fp)
  alt_u8 wrsr[2];
  
  wrsr[0] = epcs_wrsr;
  854e40:	00800044 	movi	r2,1
  854e44:	e0bffd05 	stb	r2,-12(fp)
  wrsr[1] = value;
  854e48:	e0bfff03 	ldbu	r2,-4(fp)
  854e4c:	e0bffd45 	stb	r2,-11(fp)

  alt_avalon_spi_command(
  854e50:	d8000215 	stw	zero,8(sp)
  854e54:	d8000115 	stw	zero,4(sp)
  854e58:	d8000015 	stw	zero,0(sp)
  854e5c:	e1fffd04 	addi	r7,fp,-12
  854e60:	01800084 	movi	r6,2
  854e64:	000b883a 	mov	r5,zero
  854e68:	e13ffe17 	ldw	r4,-8(fp)
  854e6c:	0856aec0 	call	856aec <alt_avalon_spi_command>
    0,
    (alt_u8*)0,
    0
  );

  epcs_await_wip_released(base);
  854e70:	e13ffe17 	ldw	r4,-8(fp)
  854e74:	0854ba40 	call	854ba4 <epcs_await_wip_released>
}
  854e78:	0001883a 	nop
  854e7c:	e037883a 	mov	sp,fp
  854e80:	dfc00117 	ldw	ra,4(sp)
  854e84:	df000017 	ldw	fp,0(sp)
  854e88:	dec00204 	addi	sp,sp,8
  854e8c:	f800283a 	ret

00854e90 <epcs_write_buffer>:

/* Write a partial or full page, assuming that page has been erased */
alt_32 epcs_write_buffer(alt_u32 base, int offset, const alt_u8* src_addr, 
                         int length, alt_u32 four_bytes_mode)
{
  854e90:	defff404 	addi	sp,sp,-48
  854e94:	dfc00b15 	stw	ra,44(sp)
  854e98:	df000a15 	stw	fp,40(sp)
  854e9c:	df000a04 	addi	fp,sp,40
  854ea0:	e13ffc15 	stw	r4,-16(fp)
  854ea4:	e17ffd15 	stw	r5,-12(fp)
  854ea8:	e1bffe15 	stw	r6,-8(fp)
  854eac:	e1ffff15 	stw	r7,-4(fp)
  alt_u8 pp[5];
  alt_u32 cmd_len;
  
  pp[0] = epcs_pp;
  854eb0:	00800084 	movi	r2,2
  854eb4:	e0bffa05 	stb	r2,-24(fp)
  
  if(four_bytes_mode)
  854eb8:	e0800217 	ldw	r2,8(fp)
  854ebc:	10001026 	beq	r2,zero,854f00 <epcs_write_buffer+0x70>
  {
      pp[1] = (offset >> 24) & 0xFF;
  854ec0:	e0bffd17 	ldw	r2,-12(fp)
  854ec4:	1004d63a 	srli	r2,r2,24
  854ec8:	e0bffa45 	stb	r2,-23(fp)
      pp[2] = (offset >> 16) & 0xFF;
  854ecc:	e0bffd17 	ldw	r2,-12(fp)
  854ed0:	1005d43a 	srai	r2,r2,16
  854ed4:	e0bffa85 	stb	r2,-22(fp)
      pp[3] = (offset >> 8) & 0xFF;
  854ed8:	e0bffd17 	ldw	r2,-12(fp)
  854edc:	1005d23a 	srai	r2,r2,8
  854ee0:	e0bffac5 	stb	r2,-21(fp)
      pp[4] = offset & 0xFF;
  854ee4:	e0bffd17 	ldw	r2,-12(fp)
  854ee8:	e0bffb05 	stb	r2,-20(fp)
      cmd_len = 5;
  854eec:	00800144 	movi	r2,5
  854ef0:	e0bff915 	stw	r2,-28(fp)
      epcs_enter_4_bytes_mode(base);
  854ef4:	e13ffc17 	ldw	r4,-16(fp)
  854ef8:	08550940 	call	855094 <epcs_enter_4_bytes_mode>
  854efc:	00000a06 	br	854f28 <epcs_write_buffer+0x98>
  }
  else
  {
      pp[1] = (offset >> 16) & 0xFF;
  854f00:	e0bffd17 	ldw	r2,-12(fp)
  854f04:	1005d43a 	srai	r2,r2,16
  854f08:	e0bffa45 	stb	r2,-23(fp)
      pp[2] = (offset >> 8) & 0xFF;
  854f0c:	e0bffd17 	ldw	r2,-12(fp)
  854f10:	1005d23a 	srai	r2,r2,8
  854f14:	e0bffa85 	stb	r2,-22(fp)
      pp[3] = offset & 0xFF;
  854f18:	e0bffd17 	ldw	r2,-12(fp)
  854f1c:	e0bffac5 	stb	r2,-21(fp)
      cmd_len = 4;
  854f20:	00800104 	movi	r2,4
  854f24:	e0bff915 	stw	r2,-28(fp)
  }

  /* First, WREN */
  epcs_write_enable(base);
  854f28:	e13ffc17 	ldw	r4,-16(fp)
  854f2c:	0854dd00 	call	854dd0 <epcs_write_enable>

  /* Send the PP command */
  alt_avalon_spi_command(
  854f30:	e0fffa04 	addi	r3,fp,-24
  854f34:	00800044 	movi	r2,1
  854f38:	d8800215 	stw	r2,8(sp)
  854f3c:	d8000115 	stw	zero,4(sp)
  854f40:	d8000015 	stw	zero,0(sp)
  854f44:	180f883a 	mov	r7,r3
  854f48:	e1bff917 	ldw	r6,-28(fp)
  854f4c:	000b883a 	mov	r5,zero
  854f50:	e13ffc17 	ldw	r4,-16(fp)
  854f54:	0856aec0 	call	856aec <alt_avalon_spi_command>
    (alt_u8*)0,
    ALT_AVALON_SPI_COMMAND_MERGE
  );

  /* Send the user's buffer */
  alt_avalon_spi_command(
  854f58:	e0bfff17 	ldw	r2,-4(fp)
  854f5c:	d8000215 	stw	zero,8(sp)
  854f60:	d8000115 	stw	zero,4(sp)
  854f64:	d8000015 	stw	zero,0(sp)
  854f68:	e1fffe17 	ldw	r7,-8(fp)
  854f6c:	100d883a 	mov	r6,r2
  854f70:	000b883a 	mov	r5,zero
  854f74:	e13ffc17 	ldw	r4,-16(fp)
  854f78:	0856aec0 	call	856aec <alt_avalon_spi_command>
   * if the user's going to go off and ignore the flash for
   * a while, its writes could occur in parallel with user code
   * execution.  Unfortunately, I have to guard all reads/writes
   * with wip-tests, to make that happen.
   */
  epcs_await_wip_released(base);
  854f7c:	e13ffc17 	ldw	r4,-16(fp)
  854f80:	0854ba40 	call	854ba4 <epcs_await_wip_released>

  if(four_bytes_mode)
  854f84:	e0800217 	ldw	r2,8(fp)
  854f88:	10000226 	beq	r2,zero,854f94 <epcs_write_buffer+0x104>
  {
    epcs_exit_4_bytes_mode(base);
  854f8c:	e13ffc17 	ldw	r4,-16(fp)
  854f90:	08550f00 	call	8550f0 <epcs_exit_4_bytes_mode>
  }

  return length;
  854f94:	e0bfff17 	ldw	r2,-4(fp)
}
  854f98:	e037883a 	mov	sp,fp
  854f9c:	dfc00117 	ldw	ra,4(sp)
  854fa0:	df000017 	ldw	fp,0(sp)
  854fa4:	dec00204 	addi	sp,sp,8
  854fa8:	f800283a 	ret

00854fac <epcs_read_electronic_signature>:


alt_u8 epcs_read_electronic_signature(alt_u32 base)
{
  854fac:	defff804 	addi	sp,sp,-32
  854fb0:	dfc00715 	stw	ra,28(sp)
  854fb4:	df000615 	stw	fp,24(sp)
  854fb8:	df000604 	addi	fp,sp,24
  854fbc:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 res_cmd[] = {epcs_res, 0, 0, 0};
  854fc0:	00bfeac4 	movi	r2,-85
  854fc4:	e0bffd05 	stb	r2,-12(fp)
  854fc8:	e03ffd45 	stb	zero,-11(fp)
  854fcc:	e03ffd85 	stb	zero,-10(fp)
  854fd0:	e03ffdc5 	stb	zero,-9(fp)
  alt_u8 res;

  alt_avalon_spi_command(
  854fd4:	d8000215 	stw	zero,8(sp)
  854fd8:	e0bffe04 	addi	r2,fp,-8
  854fdc:	d8800115 	stw	r2,4(sp)
  854fe0:	00800044 	movi	r2,1
  854fe4:	d8800015 	stw	r2,0(sp)
  854fe8:	e1fffd04 	addi	r7,fp,-12
  854fec:	01800104 	movi	r6,4
  854ff0:	000b883a 	mov	r5,zero
  854ff4:	e13fff17 	ldw	r4,-4(fp)
  854ff8:	0856aec0 	call	856aec <alt_avalon_spi_command>
    1,
    &res,
    0
  );

  return res;
  854ffc:	e0bffe03 	ldbu	r2,-8(fp)
}
  855000:	e037883a 	mov	sp,fp
  855004:	dfc00117 	ldw	ra,4(sp)
  855008:	df000017 	ldw	fp,0(sp)
  85500c:	dec00204 	addi	sp,sp,8
  855010:	f800283a 	ret

00855014 <epcs_read_device_id>:

alt_u32 epcs_read_device_id(alt_u32 base)
{
  855014:	defff904 	addi	sp,sp,-28
  855018:	dfc00615 	stw	ra,24(sp)
  85501c:	df000515 	stw	fp,20(sp)
  855020:	df000504 	addi	fp,sp,20
  855024:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 rd_id_cmd[] = {epcs_rdid};
  855028:	00bfe7c4 	movi	r2,-97
  85502c:	e0bffe05 	stb	r2,-8(fp)
  alt_u8 id[3];

  alt_avalon_spi_command(
  855030:	d8000215 	stw	zero,8(sp)
  855034:	e0bffe44 	addi	r2,fp,-7
  855038:	d8800115 	stw	r2,4(sp)
  85503c:	008000c4 	movi	r2,3
  855040:	d8800015 	stw	r2,0(sp)
  855044:	e1fffe04 	addi	r7,fp,-8
  855048:	01800044 	movi	r6,1
  85504c:	000b883a 	mov	r5,zero
  855050:	e13fff17 	ldw	r4,-4(fp)
  855054:	0856aec0 	call	856aec <alt_avalon_spi_command>
    3,
    id,
    0
  );

  return (alt_u32) ((id[0] << 16) | (id[1] << 8) | id[2]);
  855058:	e0bffe43 	ldbu	r2,-7(fp)
  85505c:	10803fcc 	andi	r2,r2,255
  855060:	1006943a 	slli	r3,r2,16
  855064:	e0bffe83 	ldbu	r2,-6(fp)
  855068:	10803fcc 	andi	r2,r2,255
  85506c:	1004923a 	slli	r2,r2,8
  855070:	1886b03a 	or	r3,r3,r2
  855074:	e0bffec3 	ldbu	r2,-5(fp)
  855078:	10803fcc 	andi	r2,r2,255
  85507c:	1884b03a 	or	r2,r3,r2
}
  855080:	e037883a 	mov	sp,fp
  855084:	dfc00117 	ldw	ra,4(sp)
  855088:	df000017 	ldw	fp,0(sp)
  85508c:	dec00204 	addi	sp,sp,8
  855090:	f800283a 	ret

00855094 <epcs_enter_4_bytes_mode>:

void epcs_enter_4_bytes_mode(alt_u32 base)
{
  855094:	defff904 	addi	sp,sp,-28
  855098:	dfc00615 	stw	ra,24(sp)
  85509c:	df000515 	stw	fp,20(sp)
  8550a0:	df000504 	addi	fp,sp,20
  8550a4:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 en4b_cmd = epcs_en4b;
  8550a8:	00bfedc4 	movi	r2,-73
  8550ac:	e0bffe05 	stb	r2,-8(fp)

  /* First, WREN */
  epcs_write_enable(base);
  8550b0:	e13fff17 	ldw	r4,-4(fp)
  8550b4:	0854dd00 	call	854dd0 <epcs_write_enable>

  alt_avalon_spi_command(
  8550b8:	d8000215 	stw	zero,8(sp)
  8550bc:	d8000115 	stw	zero,4(sp)
  8550c0:	d8000015 	stw	zero,0(sp)
  8550c4:	e1fffe04 	addi	r7,fp,-8
  8550c8:	01800044 	movi	r6,1
  8550cc:	000b883a 	mov	r5,zero
  8550d0:	e13fff17 	ldw	r4,-4(fp)
  8550d4:	0856aec0 	call	856aec <alt_avalon_spi_command>
    0,
    (alt_u8*)0,
    0
  );

  return;
  8550d8:	0001883a 	nop
}
  8550dc:	e037883a 	mov	sp,fp
  8550e0:	dfc00117 	ldw	ra,4(sp)
  8550e4:	df000017 	ldw	fp,0(sp)
  8550e8:	dec00204 	addi	sp,sp,8
  8550ec:	f800283a 	ret

008550f0 <epcs_exit_4_bytes_mode>:

void epcs_exit_4_bytes_mode(alt_u32 base)
{
  8550f0:	defff904 	addi	sp,sp,-28
  8550f4:	dfc00615 	stw	ra,24(sp)
  8550f8:	df000515 	stw	fp,20(sp)
  8550fc:	df000504 	addi	fp,sp,20
  855100:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 exit4b_cmd = epcs_dis4b;
  855104:	00bffa44 	movi	r2,-23
  855108:	e0bffe05 	stb	r2,-8(fp)

  /* First, WREN */
  epcs_write_enable(base);
  85510c:	e13fff17 	ldw	r4,-4(fp)
  855110:	0854dd00 	call	854dd0 <epcs_write_enable>

  alt_avalon_spi_command(
  855114:	d8000215 	stw	zero,8(sp)
  855118:	d8000115 	stw	zero,4(sp)
  85511c:	d8000015 	stw	zero,0(sp)
  855120:	e1fffe04 	addi	r7,fp,-8
  855124:	01800044 	movi	r6,1
  855128:	000b883a 	mov	r5,zero
  85512c:	e13fff17 	ldw	r4,-4(fp)
  855130:	0856aec0 	call	856aec <alt_avalon_spi_command>
    0,
    (alt_u8*)0,
    0
  );

  return;
  855134:	0001883a 	nop
}
  855138:	e037883a 	mov	sp,fp
  85513c:	dfc00117 	ldw	ra,4(sp)
  855140:	df000017 	ldw	fp,0(sp)
  855144:	dec00204 	addi	sp,sp,8
  855148:	f800283a 	ret

0085514c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  85514c:	defffe04 	addi	sp,sp,-8
  855150:	dfc00115 	stw	ra,4(sp)
  855154:	df000015 	stw	fp,0(sp)
  855158:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  85515c:	d0a04317 	ldw	r2,-32500(gp)
  855160:	10000326 	beq	r2,zero,855170 <alt_get_errno+0x24>
  855164:	d0a04317 	ldw	r2,-32500(gp)
  855168:	103ee83a 	callr	r2
  85516c:	00000106 	br	855174 <alt_get_errno+0x28>
  855170:	d0a08804 	addi	r2,gp,-32224
}
  855174:	e037883a 	mov	sp,fp
  855178:	dfc00117 	ldw	ra,4(sp)
  85517c:	df000017 	ldw	fp,0(sp)
  855180:	dec00204 	addi	sp,sp,8
  855184:	f800283a 	ret

00855188 <fifoed_avalon_uart_read>:
 * transfered from a circular buffer. The interrupt handler is then responsible
 * for copying data from the device into this buffer.
 */

int fifoed_avalon_uart_read (fifoed_avalon_uart_state* sp, char* ptr, int len, int flags)
{
  855188:	deffed04 	addi	sp,sp,-76
  85518c:	dfc01215 	stw	ra,72(sp)
  855190:	df001115 	stw	fp,68(sp)
  855194:	df001104 	addi	fp,sp,68
  855198:	e13ffc15 	stw	r4,-16(fp)
  85519c:	e17ffd15 	stw	r5,-12(fp)
  8551a0:	e1bffe15 	stw	r6,-8(fp)
  8551a4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             block;
 // alt_u32         next; //9.3.1 patch

  int count                = 0;
  8551a8:	e03ff015 	stw	zero,-64(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  block = !(flags & O_NONBLOCK);
  8551ac:	e0bfff17 	ldw	r2,-4(fp)
  8551b0:	1090000c 	andi	r2,r2,16384
  8551b4:	1005003a 	cmpeq	r2,r2,zero
  8551b8:	10803fcc 	andi	r2,r2,255
  8551bc:	e0bff115 	stw	r2,-60(fp)
  /*
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */

  ALT_SEM_PEND (sp->read_lock, 0);
  8551c0:	e0bffc17 	ldw	r2,-16(fp)
  8551c4:	10800817 	ldw	r2,32(r2)
  8551c8:	e0bff815 	stw	r2,-32(fp)
  8551cc:	e03ff90d 	sth	zero,-28(fp)
  8551d0:	e0bff90b 	ldhu	r2,-28(fp)
  8551d4:	e0fffb44 	addi	r3,fp,-19
  8551d8:	180d883a 	mov	r6,r3
  8551dc:	100b883a 	mov	r5,r2
  8551e0:	e13ff817 	ldw	r4,-32(fp)
  8551e4:	084fde00 	call	84fde0 <OSSemPend>
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  8551e8:	00001706 	br	855248 <fifoed_avalon_uart_read+0xc0>
    {
      count++;
  8551ec:	e0bff017 	ldw	r2,-64(fp)
  8551f0:	10800044 	addi	r2,r2,1
  8551f4:	e0bff015 	stw	r2,-64(fp)
      *ptr++ = sp->rx_buf[sp->rx_start];
  8551f8:	e0bffd17 	ldw	r2,-12(fp)
  8551fc:	10c00044 	addi	r3,r2,1
  855200:	e0fffd15 	stw	r3,-12(fp)
  855204:	e0fffc17 	ldw	r3,-16(fp)
  855208:	18c00217 	ldw	r3,8(r3)
  85520c:	e13ffc17 	ldw	r4,-16(fp)
  855210:	20c7883a 	add	r3,r4,r3
  855214:	18c00a04 	addi	r3,r3,40
  855218:	18c00003 	ldbu	r3,0(r3)
  85521c:	10c00005 	stb	r3,0(r2)
      
  //  9.3.1 patch  sp->rx_start = (++sp->rx_start) & FIFOED_AVALON_UART_BUF_MSK;
      ++sp->rx_start;
  855220:	e0bffc17 	ldw	r2,-16(fp)
  855224:	10800217 	ldw	r2,8(r2)
  855228:	10c00044 	addi	r3,r2,1
  85522c:	e0bffc17 	ldw	r2,-16(fp)
  855230:	10c00215 	stw	r3,8(r2)
      sp->rx_start = sp->rx_start & FIFOED_AVALON_UART_BUF_MSK; 
  855234:	e0bffc17 	ldw	r2,-16(fp)
  855238:	10800217 	ldw	r2,8(r2)
  85523c:	10c00fcc 	andi	r3,r2,63
  855240:	e0bffc17 	ldw	r2,-16(fp)
  855244:	10c00215 	stw	r3,8(r2)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  855248:	e0fff017 	ldw	r3,-64(fp)
  85524c:	e0bffe17 	ldw	r2,-8(fp)
  855250:	1880050e 	bge	r3,r2,855268 <fifoed_avalon_uart_read+0xe0>
  855254:	e0bffc17 	ldw	r2,-16(fp)
  855258:	10c00217 	ldw	r3,8(r2)
  85525c:	e0bffc17 	ldw	r2,-16(fp)
  855260:	10800317 	ldw	r2,12(r2)
  855264:	18bfe11e 	bne	r3,r2,8551ec <__alt_mem_epcs_flash_controller_0+0xff84c1ec>
    /*
     * If no data has been transferred, the circular buffer is empty, and
     * this is not a non-blocking access, block waiting for data to arrive.
     */

    if (!count && (sp->rx_start == sp->rx_end))
  855268:	e0bff017 	ldw	r2,-64(fp)
  85526c:	1000381e 	bne	r2,zero,855350 <fifoed_avalon_uart_read+0x1c8>
  855270:	e0bffc17 	ldw	r2,-16(fp)
  855274:	10c00217 	ldw	r3,8(r2)
  855278:	e0bffc17 	ldw	r2,-16(fp)
  85527c:	10800317 	ldw	r2,12(r2)
  855280:	1880331e 	bne	r3,r2,855350 <fifoed_avalon_uart_read+0x1c8>
    {
      if (!block)
  855284:	e0bff117 	ldw	r2,-60(fp)
  855288:	1000051e 	bne	r2,zero,8552a0 <fifoed_avalon_uart_read+0x118>
      {
        /* Set errno to indicate the reason we're not returning any data */

        ALT_ERRNO = EWOULDBLOCK;
  85528c:	085514c0 	call	85514c <alt_get_errno>
  855290:	1007883a 	mov	r3,r2
  855294:	008002c4 	movi	r2,11
  855298:	18800015 	stw	r2,0(r3)
        break;
  85529c:	00003006 	br	855360 <fifoed_avalon_uart_read+0x1d8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8552a0:	0005303a 	rdctl	r2,status
  8552a4:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8552a8:	e0fff517 	ldw	r3,-44(fp)
  8552ac:	00bfff84 	movi	r2,-2
  8552b0:	1884703a 	and	r2,r3,r2
  8552b4:	1001703a 	wrctl	status,r2
  
  return context;
  8552b8:	e0bff517 	ldw	r2,-44(fp)
      {
       /* Block waiting for some data to arrive */

       /* First, ensure read interrupts are enabled to avoid deadlock */

       context = alt_irq_disable_all ();
  8552bc:	e0bff415 	stw	r2,-48(fp)
       sp->ctrl |= FIFOED_AVALON_UART_CONTROL_RRDY_MSK;
  8552c0:	e0bffc17 	ldw	r2,-16(fp)
  8552c4:	10800117 	ldw	r2,4(r2)
  8552c8:	10c02014 	ori	r3,r2,128
  8552cc:	e0bffc17 	ldw	r2,-16(fp)
  8552d0:	10c00115 	stw	r3,4(r2)
       IOWR_FIFOED_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  8552d4:	e0bffc17 	ldw	r2,-16(fp)
  8552d8:	10800017 	ldw	r2,0(r2)
  8552dc:	10800304 	addi	r2,r2,12
  8552e0:	e0fffc17 	ldw	r3,-16(fp)
  8552e4:	18c00117 	ldw	r3,4(r3)
  8552e8:	10c00035 	stwio	r3,0(r2)
  8552ec:	e0bff417 	ldw	r2,-48(fp)
  8552f0:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8552f4:	e0bff617 	ldw	r2,-40(fp)
  8552f8:	1001703a 	wrctl	status,r2
        * flag set in the interrupt service routine. This avoids wasting CPU
        * cycles waiting in this thread, when we could be doing something more 
        * profitable elsewhere.
        */

       ALT_FLAG_PEND (sp->events,
  8552fc:	e0bffc17 	ldw	r2,-16(fp)
  855300:	10800717 	ldw	r2,28(r2)
  855304:	e0bff215 	stw	r2,-56(fp)
  855308:	00800044 	movi	r2,1
  85530c:	e0bff98d 	sth	r2,-26(fp)
  855310:	00bfe0c4 	movi	r2,-125
  855314:	e0bffa05 	stb	r2,-24(fp)
  855318:	e03ffa8d 	sth	zero,-22(fp)
                   OS_FLAGS flags, 
                   INT8U wait_type, 
                   INT16U timeout)
{
  INT8U err;
  if (OSRunning)
  85531c:	d0a09543 	ldbu	r2,-32171(gp)
  855320:	10803fcc 	andi	r2,r2,255
  855324:	10000a26 	beq	r2,zero,855350 <fifoed_avalon_uart_read+0x1c8>
  {
    OSFlagPend (group, flags, wait_type, timeout, &err);
  855328:	e0fff98b 	ldhu	r3,-26(fp)
  85532c:	e13ffa03 	ldbu	r4,-24(fp)
  855330:	e17ffa8b 	ldhu	r5,-22(fp)
  855334:	e0bffb04 	addi	r2,fp,-20
  855338:	d8800015 	stw	r2,0(sp)
  85533c:	280f883a 	mov	r7,r5
  855340:	200d883a 	mov	r6,r4
  855344:	180b883a 	mov	r5,r3
  855348:	e13ff217 	ldw	r4,-56(fp)
  85534c:	084d36c0 	call	84d36c <OSFlagPend>
                      OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                      0);
      }
    }
  }
  while (!count && len);
  855350:	e0bff017 	ldw	r2,-64(fp)
  855354:	1000021e 	bne	r2,zero,855360 <fifoed_avalon_uart_read+0x1d8>
  855358:	e0bffe17 	ldw	r2,-8(fp)
  85535c:	103fba1e 	bne	r2,zero,855248 <__alt_mem_epcs_flash_controller_0+0xff84c248>
  /*
   * Now that access to the circular buffer is complete, release the read
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);
  855360:	e0bffc17 	ldw	r2,-16(fp)
  855364:	10800817 	ldw	r2,32(r2)
  855368:	1009883a 	mov	r4,r2
  85536c:	08501580 	call	850158 <OSSemPost>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  855370:	0005303a 	rdctl	r2,status
  855374:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  855378:	e0fff717 	ldw	r3,-36(fp)
  85537c:	00bfff84 	movi	r2,-2
  855380:	1884703a 	and	r2,r3,r2
  855384:	1001703a 	wrctl	status,r2
  
  return context;
  855388:	e0bff717 	ldw	r2,-36(fp)
  /*
   * Ensure that interrupts are enabled, so that the circular buffer can
   * re-fill.
   */

  context = alt_irq_disable_all ();
  85538c:	e0bff415 	stw	r2,-48(fp)
  sp->ctrl |= FIFOED_AVALON_UART_CONTROL_RRDY_MSK;
  855390:	e0bffc17 	ldw	r2,-16(fp)
  855394:	10800117 	ldw	r2,4(r2)
  855398:	10c02014 	ori	r3,r2,128
  85539c:	e0bffc17 	ldw	r2,-16(fp)
  8553a0:	10c00115 	stw	r3,4(r2)
  IOWR_FIFOED_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  8553a4:	e0bffc17 	ldw	r2,-16(fp)
  8553a8:	10800017 	ldw	r2,0(r2)
  8553ac:	10800304 	addi	r2,r2,12
  8553b0:	e0fffc17 	ldw	r3,-16(fp)
  8553b4:	18c00117 	ldw	r3,4(r3)
  8553b8:	10c00035 	stwio	r3,0(r2)
  8553bc:	e0bff417 	ldw	r2,-48(fp)
  8553c0:	e0bff315 	stw	r2,-52(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8553c4:	e0bff317 	ldw	r2,-52(fp)
  8553c8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* Return the number of bytes read */

  return count;
  8553cc:	e0bff017 	ldw	r2,-64(fp)
}
  8553d0:	e037883a 	mov	sp,fp
  8553d4:	dfc00117 	ldw	ra,4(sp)
  8553d8:	df000017 	ldw	fp,0(sp)
  8553dc:	dec00204 	addi	sp,sp,8
  8553e0:	f800283a 	ret

008553e4 <fifoed_avalon_uart_write>:
 * transfered to a circular buffer. The interrupt handler is then responsible
 * for copying data from this buffer into the device.
 */

int fifoed_avalon_uart_write (fifoed_avalon_uart_state* sp, const char* ptr, int len, int flags)
{
  8553e4:	deffec04 	addi	sp,sp,-80
  8553e8:	dfc01315 	stw	ra,76(sp)
  8553ec:	df001215 	stw	fp,72(sp)
  8553f0:	df001204 	addi	fp,sp,72
  8553f4:	e13ffc15 	stw	r4,-16(fp)
  8553f8:	e17ffd15 	stw	r5,-12(fp)
  8553fc:	e1bffe15 	stw	r6,-8(fp)
  855400:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             no_block;
  alt_u32         next;
  int count                = len;
  855404:	e0bffe17 	ldw	r2,-8(fp)
  855408:	e0bfef15 	stw	r2,-68(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  no_block = (flags & O_NONBLOCK);
  85540c:	e0bfff17 	ldw	r2,-4(fp)
  855410:	1090000c 	andi	r2,r2,16384
  855414:	e0bff015 	stw	r2,-64(fp)
  /*
   * When running in a multi threaded environment, obtain the "write_lock"
   * semaphore. This ensures that writing to the device is thread-safe.
   */

  ALT_SEM_PEND (sp->write_lock, 0);
  855418:	e0bffc17 	ldw	r2,-16(fp)
  85541c:	10800917 	ldw	r2,36(r2)
  855420:	e0bff815 	stw	r2,-32(fp)
  855424:	e03ff90d 	sth	zero,-28(fp)
  855428:	e0bff90b 	ldhu	r2,-28(fp)
  85542c:	e0fffb44 	addi	r3,fp,-19
  855430:	180d883a 	mov	r6,r3
  855434:	100b883a 	mov	r5,r2
  855438:	e13ff817 	ldw	r4,-32(fp)
  85543c:	084fde00 	call	84fde0 <OSSemPend>
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  855440:	00005106 	br	855588 <fifoed_avalon_uart_write+0x1a4>
  {
    /* Determine the next slot in the buffer to access */

    next = (sp->tx_end + 1) & FIFOED_AVALON_UART_BUF_MSK;
  855444:	e0bffc17 	ldw	r2,-16(fp)
  855448:	10800517 	ldw	r2,20(r2)
  85544c:	10800044 	addi	r2,r2,1
  855450:	10800fcc 	andi	r2,r2,63
  855454:	e0bff215 	stw	r2,-56(fp)

    /* block waiting for space if necessary */

    if (next == sp->tx_start)
  855458:	e0bffc17 	ldw	r2,-16(fp)
  85545c:	10c00417 	ldw	r3,16(r2)
  855460:	e0bff217 	ldw	r2,-56(fp)
  855464:	1880371e 	bne	r3,r2,855544 <fifoed_avalon_uart_write+0x160>
    {
      if (no_block)
  855468:	e0bff017 	ldw	r2,-64(fp)
  85546c:	10000526 	beq	r2,zero,855484 <fifoed_avalon_uart_write+0xa0>
      {
        /* Set errno to indicate why this function returned early */
 
        ALT_ERRNO = EWOULDBLOCK;
  855470:	085514c0 	call	85514c <alt_get_errno>
  855474:	1007883a 	mov	r3,r2
  855478:	008002c4 	movi	r2,11
  85547c:	18800015 	stw	r2,0(r3)
        break;
  855480:	00004306 	br	855590 <fifoed_avalon_uart_write+0x1ac>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  855484:	0005303a 	rdctl	r2,status
  855488:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  85548c:	e0fff517 	ldw	r3,-44(fp)
  855490:	00bfff84 	movi	r2,-2
  855494:	1884703a 	and	r2,r3,r2
  855498:	1001703a 	wrctl	status,r2
  
  return context;
  85549c:	e0bff517 	ldw	r2,-44(fp)
      {
        /* Block waiting for space in the circular buffer */

        /* First, ensure transmit interrupts are enabled to avoid deadlock */

        context = alt_irq_disable_all ();
  8554a0:	e0bff415 	stw	r2,-48(fp)
        sp->ctrl |= (FIFOED_AVALON_UART_CONTROL_TRDY_MSK |
  8554a4:	e0bffc17 	ldw	r2,-16(fp)
  8554a8:	10800117 	ldw	r2,4(r2)
  8554ac:	10c11014 	ori	r3,r2,1088
  8554b0:	e0bffc17 	ldw	r2,-16(fp)
  8554b4:	10c00115 	stw	r3,4(r2)
                        FIFOED_AVALON_UART_CONTROL_DCTS_MSK);
        IOWR_FIFOED_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  8554b8:	e0bffc17 	ldw	r2,-16(fp)
  8554bc:	10800017 	ldw	r2,0(r2)
  8554c0:	10800304 	addi	r2,r2,12
  8554c4:	e0fffc17 	ldw	r3,-16(fp)
  8554c8:	18c00117 	ldw	r3,4(r3)
  8554cc:	10c00035 	stwio	r3,0(r2)
  8554d0:	e0bff417 	ldw	r2,-48(fp)
  8554d4:	e0bff115 	stw	r2,-60(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8554d8:	e0bff117 	ldw	r2,-60(fp)
  8554dc:	1001703a 	wrctl	status,r2
           * flag set in the interrupt service routine. This avoids wasting CPU
           * cycles waiting in this thread, when we could be doing something
           * more profitable elsewhere.
           */

          ALT_FLAG_PEND (sp->events,
  8554e0:	e0bffc17 	ldw	r2,-16(fp)
  8554e4:	10800717 	ldw	r2,28(r2)
  8554e8:	e0bff315 	stw	r2,-52(fp)
  8554ec:	00800084 	movi	r2,2
  8554f0:	e0bff98d 	sth	r2,-26(fp)
  8554f4:	00bfe0c4 	movi	r2,-125
  8554f8:	e0bffa05 	stb	r2,-24(fp)
  8554fc:	e03ffa8d 	sth	zero,-22(fp)
                   OS_FLAGS flags, 
                   INT8U wait_type, 
                   INT16U timeout)
{
  INT8U err;
  if (OSRunning)
  855500:	d0a09543 	ldbu	r2,-32171(gp)
  855504:	10803fcc 	andi	r2,r2,255
  855508:	10000a26 	beq	r2,zero,855534 <fifoed_avalon_uart_write+0x150>
  {
    OSFlagPend (group, flags, wait_type, timeout, &err);
  85550c:	e0fff98b 	ldhu	r3,-26(fp)
  855510:	e13ffa03 	ldbu	r4,-24(fp)
  855514:	e17ffa8b 	ldhu	r5,-22(fp)
  855518:	e0bffb04 	addi	r2,fp,-20
  85551c:	d8800015 	stw	r2,0(sp)
  855520:	280f883a 	mov	r7,r5
  855524:	200d883a 	mov	r6,r4
  855528:	180b883a 	mov	r5,r3
  85552c:	e13ff317 	ldw	r4,-52(fp)
  855530:	084d36c0 	call	84d36c <OSFlagPend>
                         ALT_UART_WRITE_RDY,
                         OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                         0);
        }
        while ((next == sp->tx_start));
  855534:	e0bffc17 	ldw	r2,-16(fp)
  855538:	10c00417 	ldw	r3,16(r2)
  85553c:	e0bff217 	ldw	r2,-56(fp)
  855540:	18bfe726 	beq	r3,r2,8554e0 <__alt_mem_epcs_flash_controller_0+0xff84c4e0>
      }
    }

    count--;
  855544:	e0bfef17 	ldw	r2,-68(fp)
  855548:	10bfffc4 	addi	r2,r2,-1
  85554c:	e0bfef15 	stw	r2,-68(fp)

    /* Add the next character to the transmit buffer */

    sp->tx_buf[sp->tx_end] = *ptr++;
  855550:	e0bffc17 	ldw	r2,-16(fp)
  855554:	10c00517 	ldw	r3,20(r2)
  855558:	e0bffd17 	ldw	r2,-12(fp)
  85555c:	11000044 	addi	r4,r2,1
  855560:	e13ffd15 	stw	r4,-12(fp)
  855564:	10800003 	ldbu	r2,0(r2)
  855568:	1009883a 	mov	r4,r2
  85556c:	e0bffc17 	ldw	r2,-16(fp)
  855570:	10c5883a 	add	r2,r2,r3
  855574:	10801a04 	addi	r2,r2,104
  855578:	11000005 	stb	r4,0(r2)
    sp->tx_end = next;
  85557c:	e0bffc17 	ldw	r2,-16(fp)
  855580:	e0fff217 	ldw	r3,-56(fp)
  855584:	10c00515 	stw	r3,20(r2)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  855588:	e0bfef17 	ldw	r2,-68(fp)
  85558c:	103fad1e 	bne	r2,zero,855444 <__alt_mem_epcs_flash_controller_0+0xff84c444>
  /*
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->write_lock);
  855590:	e0bffc17 	ldw	r2,-16(fp)
  855594:	10800917 	ldw	r2,36(r2)
  855598:	1009883a 	mov	r4,r2
  85559c:	08501580 	call	850158 <OSSemPost>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8555a0:	0005303a 	rdctl	r2,status
  8555a4:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8555a8:	e0fff717 	ldw	r3,-36(fp)
  8555ac:	00bfff84 	movi	r2,-2
  8555b0:	1884703a 	and	r2,r3,r2
  8555b4:	1001703a 	wrctl	status,r2
  
  return context;
  8555b8:	e0bff717 	ldw	r2,-36(fp)
  /* 
   * Ensure that interrupts are enabled, so that the circular buffer can 
   * drain.
   */

  context = alt_irq_disable_all ();
  8555bc:	e0bff415 	stw	r2,-48(fp)
  sp->ctrl |= FIFOED_AVALON_UART_CONTROL_TRDY_MSK |
  8555c0:	e0bffc17 	ldw	r2,-16(fp)
  8555c4:	10800117 	ldw	r2,4(r2)
  8555c8:	10c11014 	ori	r3,r2,1088
  8555cc:	e0bffc17 	ldw	r2,-16(fp)
  8555d0:	10c00115 	stw	r3,4(r2)
                 FIFOED_AVALON_UART_CONTROL_DCTS_MSK;
  IOWR_FIFOED_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  8555d4:	e0bffc17 	ldw	r2,-16(fp)
  8555d8:	10800017 	ldw	r2,0(r2)
  8555dc:	10800304 	addi	r2,r2,12
  8555e0:	e0fffc17 	ldw	r3,-16(fp)
  8555e4:	18c00117 	ldw	r3,4(r3)
  8555e8:	10c00035 	stwio	r3,0(r2)
  8555ec:	e0bff417 	ldw	r2,-48(fp)
  8555f0:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8555f4:	e0bff617 	ldw	r2,-40(fp)
  8555f8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* return the number of bytes written */

  return (len - count);
  8555fc:	e0fffe17 	ldw	r3,-8(fp)
  855600:	e0bfef17 	ldw	r2,-68(fp)
  855604:	1885c83a 	sub	r2,r3,r2
}
  855608:	e037883a 	mov	sp,fp
  85560c:	dfc00117 	ldw	ra,4(sp)
  855610:	df000017 	ldw	fp,0(sp)
  855614:	dec00204 	addi	sp,sp,8
  855618:	f800283a 	ret

0085561c <fifoed_avalon_uart_rxirq>:
 * dat ready to be processed.
 */

static void fifoed_avalon_uart_rxirq (fifoed_avalon_uart_state* sp,
                                   alt_u32              status)
{
  85561c:	defff904 	addi	sp,sp,-28
  855620:	dfc00615 	stw	ra,24(sp)
  855624:	df000515 	stw	fp,20(sp)
  855628:	df000504 	addi	fp,sp,20
  85562c:	e13ffe15 	stw	r4,-8(fp)
  855630:	e17fff15 	stw	r5,-4(fp)
   * previously empty.
   */
// allow to read as many as it can.
// (KN) fix the erronous status check (should be bit-wise AND rather than logical AND)
// while ( IORD_FIFOED_AVALON_UART_STATUS(sp->base) && FIFOED_AVALON_UART_STATUS_RRDY_MSK){
while ( IORD_FIFOED_AVALON_UART_STATUS(sp->base) & FIFOED_AVALON_UART_STATUS_RRDY_MSK){
  855634:	00004106 	br	85573c <fifoed_avalon_uart_rxirq+0x120>
  if (sp->rx_end == sp->rx_start)
  855638:	e0bffe17 	ldw	r2,-8(fp)
  85563c:	10c00317 	ldw	r3,12(r2)
  855640:	e0bffe17 	ldw	r2,-8(fp)
  855644:	10800217 	ldw	r2,8(r2)
  855648:	1880121e 	bne	r3,r2,855694 <fifoed_avalon_uart_rxirq+0x78>
  {
    ALT_FLAG_POST (sp->events, ALT_UART_READ_RDY, OS_FLAG_SET);
  85564c:	e0bffe17 	ldw	r2,-8(fp)
  855650:	10800717 	ldw	r2,28(r2)
  855654:	e0bffc15 	stw	r2,-16(fp)
  855658:	00800044 	movi	r2,1
  85565c:	e0bffd0d 	sth	r2,-12(fp)
  855660:	00800044 	movi	r2,1
  855664:	e0bffd85 	stb	r2,-10(fp)
                   OS_FLAGS     flags, 
                   INT8U        opt)
{
  INT8U err;

  if (OSRunning)
  855668:	d0a09543 	ldbu	r2,-32171(gp)
  85566c:	10803fcc 	andi	r2,r2,255
  855670:	10000826 	beq	r2,zero,855694 <fifoed_avalon_uart_rxirq+0x78>
  {
    OSFlagPost (group, flags, opt, &err);
  855674:	e0bffd0b 	ldhu	r2,-12(fp)
  855678:	e0fffd83 	ldbu	r3,-10(fp)
  85567c:	e13ffdc4 	addi	r4,fp,-9
  855680:	200f883a 	mov	r7,r4
  855684:	180d883a 	mov	r6,r3
  855688:	100b883a 	mov	r5,r2
  85568c:	e13ffc17 	ldw	r4,-16(fp)
  855690:	084d9840 	call	84d984 <OSFlagPost>
  }

  /* Determine which slot to use next in the circular buffer */

  next = (sp->rx_end + 1) & FIFOED_AVALON_UART_BUF_MSK;
  855694:	e0bffe17 	ldw	r2,-8(fp)
  855698:	10800317 	ldw	r2,12(r2)
  85569c:	10800044 	addi	r2,r2,1
  8556a0:	10800fcc 	andi	r2,r2,63
  8556a4:	e0bffb15 	stw	r2,-20(fp)

  /* Transfer data from the device to the circular buffer */

  sp->rx_buf[sp->rx_end] = IORD_FIFOED_AVALON_UART_RXDATA(sp->base);
  8556a8:	e0bffe17 	ldw	r2,-8(fp)
  8556ac:	10800317 	ldw	r2,12(r2)
  8556b0:	e0fffe17 	ldw	r3,-8(fp)
  8556b4:	18c00017 	ldw	r3,0(r3)
  8556b8:	18c00037 	ldwio	r3,0(r3)
  8556bc:	1809883a 	mov	r4,r3
  8556c0:	e0fffe17 	ldw	r3,-8(fp)
  8556c4:	1885883a 	add	r2,r3,r2
  8556c8:	10800a04 	addi	r2,r2,40
  8556cc:	11000005 	stb	r4,0(r2)
  /* If there was an error, discard the data */

// i have left this in tack but it is not necissarily right.
// next version of the fifo will track the errors in the fifo. 

  if (status & (FIFOED_AVALON_UART_STATUS_PE_MSK | 
  8556d0:	e0bfff17 	ldw	r2,-4(fp)
  8556d4:	108000cc 	andi	r2,r2,3
  8556d8:	10001f1e 	bne	r2,zero,855758 <fifoed_avalon_uart_rxirq+0x13c>
                  FIFOED_AVALON_UART_STATUS_FE_MSK))
  {
    return;
  }

  sp->rx_end = next;
  8556dc:	e0bffe17 	ldw	r2,-8(fp)
  8556e0:	e0fffb17 	ldw	r3,-20(fp)
  8556e4:	10c00315 	stw	r3,12(r2)

  next = (sp->rx_end + 1) & FIFOED_AVALON_UART_BUF_MSK;
  8556e8:	e0bffe17 	ldw	r2,-8(fp)
  8556ec:	10800317 	ldw	r2,12(r2)
  8556f0:	10800044 	addi	r2,r2,1
  8556f4:	10800fcc 	andi	r2,r2,63
  8556f8:	e0bffb15 	stw	r2,-20(fp)
  /*
   * If the cicular buffer was full, disable interrupts. Interrupts will be
   * re-enabled when data is removed from the buffer.
   */

  if (next == sp->rx_start)
  8556fc:	e0bffe17 	ldw	r2,-8(fp)
  855700:	10c00217 	ldw	r3,8(r2)
  855704:	e0bffb17 	ldw	r2,-20(fp)
  855708:	18800c1e 	bne	r3,r2,85573c <fifoed_avalon_uart_rxirq+0x120>
  {
    sp->ctrl &= ~FIFOED_AVALON_UART_CONTROL_RRDY_MSK;
  85570c:	e0bffe17 	ldw	r2,-8(fp)
  855710:	10c00117 	ldw	r3,4(r2)
  855714:	00bfdfc4 	movi	r2,-129
  855718:	1886703a 	and	r3,r3,r2
  85571c:	e0bffe17 	ldw	r2,-8(fp)
  855720:	10c00115 	stw	r3,4(r2)
    IOWR_FIFOED_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  855724:	e0bffe17 	ldw	r2,-8(fp)
  855728:	10800017 	ldw	r2,0(r2)
  85572c:	10800304 	addi	r2,r2,12
  855730:	e0fffe17 	ldw	r3,-8(fp)
  855734:	18c00117 	ldw	r3,4(r3)
  855738:	10c00035 	stwio	r3,0(r2)
   * previously empty.
   */
// allow to read as many as it can.
// (KN) fix the erronous status check (should be bit-wise AND rather than logical AND)
// while ( IORD_FIFOED_AVALON_UART_STATUS(sp->base) && FIFOED_AVALON_UART_STATUS_RRDY_MSK){
while ( IORD_FIFOED_AVALON_UART_STATUS(sp->base) & FIFOED_AVALON_UART_STATUS_RRDY_MSK){
  85573c:	e0bffe17 	ldw	r2,-8(fp)
  855740:	10800017 	ldw	r2,0(r2)
  855744:	10800204 	addi	r2,r2,8
  855748:	10800037 	ldwio	r2,0(r2)
  85574c:	1080200c 	andi	r2,r2,128
  855750:	103fb91e 	bne	r2,zero,855638 <__alt_mem_epcs_flash_controller_0+0xff84c638>
  855754:	00000106 	br	85575c <fifoed_avalon_uart_rxirq+0x140>
// next version of the fifo will track the errors in the fifo. 

  if (status & (FIFOED_AVALON_UART_STATUS_PE_MSK | 
                  FIFOED_AVALON_UART_STATUS_FE_MSK))
  {
    return;
  855758:	0001883a 	nop
  {
    sp->ctrl &= ~FIFOED_AVALON_UART_CONTROL_RRDY_MSK;
    IOWR_FIFOED_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  }   
}
}
  85575c:	e037883a 	mov	sp,fp
  855760:	dfc00117 	ldw	ra,4(sp)
  855764:	df000017 	ldw	fp,0(sp)
  855768:	dec00204 	addi	sp,sp,8
  85576c:	f800283a 	ret

00855770 <fifoed_avalon_uart_txirq>:
 * data ready to be processed.
 */

static void fifoed_avalon_uart_txirq (fifoed_avalon_uart_state* sp,
                                   alt_u32              status)
{
  855770:	defffa04 	addi	sp,sp,-24
  855774:	dfc00515 	stw	ra,20(sp)
  855778:	df000415 	stw	fp,16(sp)
  85577c:	df000404 	addi	fp,sp,16
  855780:	e13ffe15 	stw	r4,-8(fp)
  855784:	e17fff15 	stw	r5,-4(fp)
  /* Transfer data if there is some ready to be transfered */

  if (sp->tx_start != sp->tx_end)
  855788:	e0bffe17 	ldw	r2,-8(fp)
  85578c:	10c00417 	ldw	r3,16(r2)
  855790:	e0bffe17 	ldw	r2,-8(fp)
  855794:	10800517 	ldw	r2,20(r2)
  855798:	18805326 	beq	r3,r2,8558e8 <fifoed_avalon_uart_txirq+0x178>
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & FIFOED_AVALON_UART_FC) ||
  85579c:	e0bffe17 	ldw	r2,-8(fp)
  8557a0:	10800617 	ldw	r2,24(r2)
  8557a4:	1080008c 	andi	r2,r2,2
  8557a8:	10000326 	beq	r2,zero,8557b8 <fifoed_avalon_uart_txirq+0x48>
      (status & FIFOED_AVALON_UART_STATUS_CTS_MSK))
  8557ac:	e0bfff17 	ldw	r2,-4(fp)
  8557b0:	1082000c 	andi	r2,r2,2048
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & FIFOED_AVALON_UART_FC) ||
  8557b4:	10003e26 	beq	r2,zero,8558b0 <fifoed_avalon_uart_txirq+0x140>
       * In a multi-threaded environment, set the write event flag to indicate
       * that there is space in the circular buffer. This is only done if the
       * buffer was previously empty.
       */

      if (sp->tx_start == ((sp->tx_end + 1) & FIFOED_AVALON_UART_BUF_MSK))
  8557b8:	e0bffe17 	ldw	r2,-8(fp)
  8557bc:	10c00417 	ldw	r3,16(r2)
  8557c0:	e0bffe17 	ldw	r2,-8(fp)
  8557c4:	10800517 	ldw	r2,20(r2)
  8557c8:	10800044 	addi	r2,r2,1
  8557cc:	10800fcc 	andi	r2,r2,63
  8557d0:	1880261e 	bne	r3,r2,85586c <fifoed_avalon_uart_txirq+0xfc>
      { 
        ALT_FLAG_POST (sp->events,
  8557d4:	e0bffe17 	ldw	r2,-8(fp)
  8557d8:	10800717 	ldw	r2,28(r2)
  8557dc:	e0bffc15 	stw	r2,-16(fp)
  8557e0:	00800084 	movi	r2,2
  8557e4:	e0bffd0d 	sth	r2,-12(fp)
  8557e8:	00800044 	movi	r2,1
  8557ec:	e0bffd85 	stb	r2,-10(fp)
                   OS_FLAGS     flags, 
                   INT8U        opt)
{
  INT8U err;

  if (OSRunning)
  8557f0:	d0a09543 	ldbu	r2,-32171(gp)
  8557f4:	10803fcc 	andi	r2,r2,255
  8557f8:	10001c26 	beq	r2,zero,85586c <fifoed_avalon_uart_txirq+0xfc>
  {
    OSFlagPost (group, flags, opt, &err);
  8557fc:	e0bffd0b 	ldhu	r2,-12(fp)
  855800:	e0fffd83 	ldbu	r3,-10(fp)
  855804:	e13ffdc4 	addi	r4,fp,-9
  855808:	200f883a 	mov	r7,r4
  85580c:	180d883a 	mov	r6,r3
  855810:	100b883a 	mov	r5,r2
  855814:	e13ffc17 	ldw	r4,-16(fp)
  855818:	084d9840 	call	84d984 <OSFlagPost>
                       OS_FLAG_SET);
      }

      /* Write the data to the device */
      // updated to allow mutiple writes here if the fifos are enabled.
       while ((sp->tx_start != sp->tx_end) &&
  85581c:	00001306 	br	85586c <fifoed_avalon_uart_txirq+0xfc>
          (IORD_FIFOED_AVALON_UART_STATUS(sp->base) & FIFOED_AVALON_UART_STATUS_TRDY_MSK))
          {
              IOWR_FIFOED_AVALON_UART_TXDATA(sp->base, sp->tx_buf[sp->tx_start]);
  855820:	e0bffe17 	ldw	r2,-8(fp)
  855824:	10800017 	ldw	r2,0(r2)
  855828:	10800104 	addi	r2,r2,4
  85582c:	e0fffe17 	ldw	r3,-8(fp)
  855830:	18c00417 	ldw	r3,16(r3)
  855834:	e13ffe17 	ldw	r4,-8(fp)
  855838:	20c7883a 	add	r3,r4,r3
  85583c:	18c01a04 	addi	r3,r3,104
  855840:	18c00003 	ldbu	r3,0(r3)
  855844:	18c03fcc 	andi	r3,r3,255
  855848:	10c00035 	stwio	r3,0(r2)

              sp->tx_start = (++sp->tx_start) & FIFOED_AVALON_UART_BUF_MSK;
  85584c:	e0bffe17 	ldw	r2,-8(fp)
  855850:	10800417 	ldw	r2,16(r2)
  855854:	10800044 	addi	r2,r2,1
  855858:	e0fffe17 	ldw	r3,-8(fp)
  85585c:	18800415 	stw	r2,16(r3)
  855860:	10c00fcc 	andi	r3,r2,63
  855864:	e0bffe17 	ldw	r2,-8(fp)
  855868:	10c00415 	stw	r3,16(r2)
                       OS_FLAG_SET);
      }

      /* Write the data to the device */
      // updated to allow mutiple writes here if the fifos are enabled.
       while ((sp->tx_start != sp->tx_end) &&
  85586c:	e0bffe17 	ldw	r2,-8(fp)
  855870:	10c00417 	ldw	r3,16(r2)
  855874:	e0bffe17 	ldw	r2,-8(fp)
  855878:	10800517 	ldw	r2,20(r2)
  85587c:	18800626 	beq	r3,r2,855898 <fifoed_avalon_uart_txirq+0x128>
          (IORD_FIFOED_AVALON_UART_STATUS(sp->base) & FIFOED_AVALON_UART_STATUS_TRDY_MSK))
  855880:	e0bffe17 	ldw	r2,-8(fp)
  855884:	10800017 	ldw	r2,0(r2)
  855888:	10800204 	addi	r2,r2,8
  85588c:	10800037 	ldwio	r2,0(r2)
  855890:	1080100c 	andi	r2,r2,64
                       OS_FLAG_SET);
      }

      /* Write the data to the device */
      // updated to allow mutiple writes here if the fifos are enabled.
       while ((sp->tx_start != sp->tx_end) &&
  855894:	103fe21e 	bne	r2,zero,855820 <__alt_mem_epcs_flash_controller_0+0xff84c820>
      /*
       * In case the tranmit interrupt had previously been disabled by 
       * detecting a low value on CTS, it is reenabled here.
       */ 

      sp->ctrl |= FIFOED_AVALON_UART_CONTROL_TRDY_MSK;
  855898:	e0bffe17 	ldw	r2,-8(fp)
  85589c:	10800117 	ldw	r2,4(r2)
  8558a0:	10c01014 	ori	r3,r2,64
  8558a4:	e0bffe17 	ldw	r2,-8(fp)
  8558a8:	10c00115 	stw	r3,4(r2)
  8558ac:	00000e06 	br	8558e8 <fifoed_avalon_uart_txirq+0x178>
       * the last write to the status register. To avoid this resulting in
       * deadlock, it's necessary to re-check the status register here
       * before throttling.
       */
 
      status = IORD_FIFOED_AVALON_UART_STATUS(sp->base);
  8558b0:	e0bffe17 	ldw	r2,-8(fp)
  8558b4:	10800017 	ldw	r2,0(r2)
  8558b8:	10800204 	addi	r2,r2,8
  8558bc:	10800037 	ldwio	r2,0(r2)
  8558c0:	e0bfff15 	stw	r2,-4(fp)

      if (!(status & FIFOED_AVALON_UART_STATUS_CTS_MSK))
  8558c4:	e0bfff17 	ldw	r2,-4(fp)
  8558c8:	1082000c 	andi	r2,r2,2048
  8558cc:	1000061e 	bne	r2,zero,8558e8 <fifoed_avalon_uart_txirq+0x178>
      {
        sp->ctrl &= ~FIFOED_AVALON_UART_CONTROL_TRDY_MSK;
  8558d0:	e0bffe17 	ldw	r2,-8(fp)
  8558d4:	10c00117 	ldw	r3,4(r2)
  8558d8:	00bfefc4 	movi	r2,-65
  8558dc:	1886703a 	and	r3,r3,r2
  8558e0:	e0bffe17 	ldw	r2,-8(fp)
  8558e4:	10c00115 	stw	r3,4(r2)
  /*
   * If the circular buffer is empty, disable the interrupt. This will be
   * re-enabled when new data is placed in the buffer.
   */

  if (sp->tx_start == sp->tx_end)
  8558e8:	e0bffe17 	ldw	r2,-8(fp)
  8558ec:	10c00417 	ldw	r3,16(r2)
  8558f0:	e0bffe17 	ldw	r2,-8(fp)
  8558f4:	10800517 	ldw	r2,20(r2)
  8558f8:	1880061e 	bne	r3,r2,855914 <fifoed_avalon_uart_txirq+0x1a4>
  {
    sp->ctrl &= ~(FIFOED_AVALON_UART_CONTROL_TRDY_MSK |
  8558fc:	e0bffe17 	ldw	r2,-8(fp)
  855900:	10c00117 	ldw	r3,4(r2)
  855904:	00beefc4 	movi	r2,-1089
  855908:	1886703a 	and	r3,r3,r2
  85590c:	e0bffe17 	ldw	r2,-8(fp)
  855910:	10c00115 	stw	r3,4(r2)
                    FIFOED_AVALON_UART_CONTROL_DCTS_MSK);
  }

  IOWR_FIFOED_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  855914:	e0bffe17 	ldw	r2,-8(fp)
  855918:	10800017 	ldw	r2,0(r2)
  85591c:	10800304 	addi	r2,r2,12
  855920:	e0fffe17 	ldw	r3,-8(fp)
  855924:	18c00117 	ldw	r3,4(r3)
  855928:	10c00035 	stwio	r3,0(r2)
}
  85592c:	0001883a 	nop
  855930:	e037883a 	mov	sp,fp
  855934:	dfc00117 	ldw	ra,4(sp)
  855938:	df000017 	ldw	fp,0(sp)
  85593c:	dec00204 	addi	sp,sp,8
  855940:	f800283a 	ret

00855944 <fifoed_avalon_uart_irq>:
 #ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void fifoed_avalon_uart_irq(void* context)
#else
static void fifoed_avalon_uart_irq(void* context, alt_u32 id)
#endif
{
  855944:	defffa04 	addi	sp,sp,-24
  855948:	dfc00515 	stw	ra,20(sp)
  85594c:	df000415 	stw	fp,16(sp)
  855950:	df000404 	addi	fp,sp,16
  855954:	e13fff15 	stw	r4,-4(fp)
  alt_u32 status;

  fifoed_avalon_uart_state* sp = (fifoed_avalon_uart_state*) context;
  855958:	e0bfff17 	ldw	r2,-4(fp)
  85595c:	e0bffc15 	stw	r2,-16(fp)
  void* base               = sp->base;
  855960:	e0bffc17 	ldw	r2,-16(fp)
  855964:	10800017 	ldw	r2,0(r2)
  855968:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Read the status register in order to determine the cause of the
   * interrupt.
   */

  status = IORD_FIFOED_AVALON_UART_STATUS(base);
  85596c:	e0bffd17 	ldw	r2,-12(fp)
  855970:	10800204 	addi	r2,r2,8
  855974:	10800037 	ldwio	r2,0(r2)
  855978:	e0bffe15 	stw	r2,-8(fp)

  /* Clear any error flags set at the device */

  IOWR_FIFOED_AVALON_UART_STATUS(base, 0);
  85597c:	e0bffd17 	ldw	r2,-12(fp)
  855980:	10800204 	addi	r2,r2,8
  855984:	0007883a 	mov	r3,zero
  855988:	10c00035 	stwio	r3,0(r2)

  /* process a read irq */
 
  if (status & FIFOED_AVALON_UART_STATUS_RRDY_MSK)
  85598c:	e0bffe17 	ldw	r2,-8(fp)
  855990:	1080200c 	andi	r2,r2,128
  855994:	10000326 	beq	r2,zero,8559a4 <fifoed_avalon_uart_irq+0x60>
  {
    fifoed_avalon_uart_rxirq (sp, status);
  855998:	e17ffe17 	ldw	r5,-8(fp)
  85599c:	e13ffc17 	ldw	r4,-16(fp)
  8559a0:	085561c0 	call	85561c <fifoed_avalon_uart_rxirq>
  }

  /* process a write irq */

  if (status & (FIFOED_AVALON_UART_STATUS_TRDY_MSK | 
  8559a4:	e0bffe17 	ldw	r2,-8(fp)
  8559a8:	1081100c 	andi	r2,r2,1088
  8559ac:	10000326 	beq	r2,zero,8559bc <fifoed_avalon_uart_irq+0x78>
                  FIFOED_AVALON_UART_STATUS_DCTS_MSK))
  {
    fifoed_avalon_uart_txirq (sp, status);
  8559b0:	e17ffe17 	ldw	r5,-8(fp)
  8559b4:	e13ffc17 	ldw	r4,-16(fp)
  8559b8:	08557700 	call	855770 <fifoed_avalon_uart_txirq>
  }
}
  8559bc:	0001883a 	nop
  8559c0:	e037883a 	mov	sp,fp
  8559c4:	dfc00117 	ldw	ra,4(sp)
  8559c8:	df000017 	ldw	fp,0(sp)
  8559cc:	dec00204 	addi	sp,sp,8
  8559d0:	f800283a 	ret

008559d4 <fifoed_avalon_uart_init>:
 * through a call to alt_dev_reg().
 */

void fifoed_avalon_uart_init (fifoed_avalon_uart_state* sp,alt_u32 irq_controller_id,
      alt_u32 irq)
{
  8559d4:	defff304 	addi	sp,sp,-52
  8559d8:	dfc00c15 	stw	ra,48(sp)
  8559dc:	df000b15 	stw	fp,44(sp)
  8559e0:	df000b04 	addi	fp,sp,44
  8559e4:	e13ffd15 	stw	r4,-12(fp)
  8559e8:	e17ffe15 	stw	r5,-8(fp)
  8559ec:	e1bfff15 	stw	r6,-4(fp)
  void* base = sp->base;
  8559f0:	e0bffd17 	ldw	r2,-12(fp)
  8559f4:	10800017 	ldw	r2,0(r2)
  8559f8:	e0bff615 	stw	r2,-40(fp)
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */

  error = ALT_FLAG_CREATE (&sp->events, 0)    ||
  8559fc:	e0bffd17 	ldw	r2,-12(fp)
  855a00:	10800704 	addi	r2,r2,28
  855a04:	e0bffa15 	stw	r2,-24(fp)
  855a08:	e03ffb0d 	sth	zero,-20(fp)

static ALT_INLINE int ALT_ALWAYS_INLINE alt_flag_create (OS_FLAG_GRP** pgroup, 
               OS_FLAGS flags)
{
  INT8U err;
  *pgroup = OSFlagCreate (flags, &err);
  855a0c:	e0bffb0b 	ldhu	r2,-20(fp)
  855a10:	e0fffc84 	addi	r3,fp,-14
  855a14:	180b883a 	mov	r5,r3
  855a18:	1009883a 	mov	r4,r2
  855a1c:	084cda80 	call	84cda8 <OSFlagCreate>
  855a20:	1007883a 	mov	r3,r2
  855a24:	e0bffa17 	ldw	r2,-24(fp)
  855a28:	10c00015 	stw	r3,0(r2)
  return err;
  855a2c:	e0bffc83 	ldbu	r2,-14(fp)
  855a30:	10803fcc 	andi	r2,r2,255
          ALT_SEM_CREATE (&sp->read_lock, 1)   ||
  855a34:	1000241e 	bne	r2,zero,855ac8 <fifoed_avalon_uart_init+0xf4>
  855a38:	e0bffd17 	ldw	r2,-12(fp)
  855a3c:	10800804 	addi	r2,r2,32
  855a40:	e0bff715 	stw	r2,-36(fp)
  855a44:	00800044 	movi	r2,1
  855a48:	e0bffb8d 	sth	r2,-18(fp)
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_create (OS_EVENT** sem, 
              INT16U value)
{
  *sem = OSSemCreate (value);
  855a4c:	e0bffb8b 	ldhu	r2,-18(fp)
  855a50:	1009883a 	mov	r4,r2
  855a54:	084fac80 	call	84fac8 <OSSemCreate>
  855a58:	1007883a 	mov	r3,r2
  855a5c:	e0bff717 	ldw	r2,-36(fp)
  855a60:	10c00015 	stw	r3,0(r2)
  return *sem ? 0 : -1;
  855a64:	e0bff717 	ldw	r2,-36(fp)
  855a68:	10800017 	ldw	r2,0(r2)
  855a6c:	10000226 	beq	r2,zero,855a78 <fifoed_avalon_uart_init+0xa4>
  855a70:	0005883a 	mov	r2,zero
  855a74:	00000106 	br	855a7c <fifoed_avalon_uart_init+0xa8>
  855a78:	00bfffc4 	movi	r2,-1
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */

  error = ALT_FLAG_CREATE (&sp->events, 0)    ||
  855a7c:	1000121e 	bne	r2,zero,855ac8 <fifoed_avalon_uart_init+0xf4>
          ALT_SEM_CREATE (&sp->read_lock, 1)   ||
          ALT_SEM_CREATE (&sp->write_lock, 1);
  855a80:	e0bffd17 	ldw	r2,-12(fp)
  855a84:	10800904 	addi	r2,r2,36
  855a88:	e0bff815 	stw	r2,-32(fp)
  855a8c:	00800044 	movi	r2,1
  855a90:	e0bffc0d 	sth	r2,-16(fp)
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_create (OS_EVENT** sem, 
              INT16U value)
{
  *sem = OSSemCreate (value);
  855a94:	e0bffc0b 	ldhu	r2,-16(fp)
  855a98:	1009883a 	mov	r4,r2
  855a9c:	084fac80 	call	84fac8 <OSSemCreate>
  855aa0:	1007883a 	mov	r3,r2
  855aa4:	e0bff817 	ldw	r2,-32(fp)
  855aa8:	10c00015 	stw	r3,0(r2)
  return *sem ? 0 : -1;
  855aac:	e0bff817 	ldw	r2,-32(fp)
  855ab0:	10800017 	ldw	r2,0(r2)
  855ab4:	10000226 	beq	r2,zero,855ac0 <fifoed_avalon_uart_init+0xec>
  855ab8:	0005883a 	mov	r2,zero
  855abc:	00000106 	br	855ac4 <fifoed_avalon_uart_init+0xf0>
  855ac0:	00bfffc4 	movi	r2,-1
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */

  error = ALT_FLAG_CREATE (&sp->events, 0)    ||
          ALT_SEM_CREATE (&sp->read_lock, 1)   ||
  855ac4:	10000226 	beq	r2,zero,855ad0 <fifoed_avalon_uart_init+0xfc>
  855ac8:	00800044 	movi	r2,1
  855acc:	00000106 	br	855ad4 <fifoed_avalon_uart_init+0x100>
  855ad0:	0005883a 	mov	r2,zero
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */

  error = ALT_FLAG_CREATE (&sp->events, 0)    ||
  855ad4:	e0bff915 	stw	r2,-28(fp)
          ALT_SEM_CREATE (&sp->read_lock, 1)   ||
          ALT_SEM_CREATE (&sp->write_lock, 1);

  if (!error)
  855ad8:	e0bff917 	ldw	r2,-28(fp)
  855adc:	10000f1e 	bne	r2,zero,855b1c <fifoed_avalon_uart_init+0x148>
  {
    /* enable interrupts at the device */

    sp->ctrl = FIFOED_AVALON_UART_CONTROL_RTS_MSK  |
  855ae0:	e0bffd17 	ldw	r2,-12(fp)
  855ae4:	00c32004 	movi	r3,3200
  855ae8:	10c00115 	stw	r3,4(r2)
                FIFOED_AVALON_UART_CONTROL_RRDY_MSK |
                FIFOED_AVALON_UART_CONTROL_DCTS_MSK;

    IOWR_FIFOED_AVALON_UART_CONTROL(base, sp->ctrl);
  855aec:	e0bff617 	ldw	r2,-40(fp)
  855af0:	10800304 	addi	r2,r2,12
  855af4:	e0fffd17 	ldw	r3,-12(fp)
  855af8:	18c00117 	ldw	r3,4(r3)
  855afc:	10c00035 	stwio	r3,0(r2)

    /* register the interrupt handler */

//    alt_irq_register (irq, sp, fifoed_avalon_uart_irq);
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
    alt_ic_isr_register(irq_controller_id, irq, fifoed_avalon_uart_irq, sp,
  855b00:	d8000015 	stw	zero,0(sp)
  855b04:	e1fffd17 	ldw	r7,-12(fp)
  855b08:	01802174 	movhi	r6,133
  855b0c:	31965104 	addi	r6,r6,22852
  855b10:	e17fff17 	ldw	r5,-4(fp)
  855b14:	e13ffe17 	ldw	r4,-8(fp)
  855b18:	0849ac00 	call	849ac0 <alt_ic_isr_register>
      0x0);
#else
    alt_irq_register (irq, sp, fifoed_avalon_uart_irq);
#endif
  }
}
  855b1c:	0001883a 	nop
  855b20:	e037883a 	mov	sp,fp
  855b24:	dfc00117 	ldw	ra,4(sp)
  855b28:	df000017 	ldw	fp,0(sp)
  855b2c:	dec00204 	addi	sp,sp,8
  855b30:	f800283a 	ret

00855b34 <fifoed_avalon_uart_classic_read>:
extern int fifoed_avalon_uart_ioctl(fifoed_avalon_uart_state* sp,
  int req, void* arg);

int fifoed_avalon_uart_classic_read(fifoed_avalon_uart_state* sp,
  char* buffer, int space, int flags)
  {
  855b34:	defffa04 	addi	sp,sp,-24
  855b38:	dfc00515 	stw	ra,20(sp)
  855b3c:	df000415 	stw	fp,16(sp)
  855b40:	df000404 	addi	fp,sp,16
  855b44:	e13ffc15 	stw	r4,-16(fp)
  855b48:	e17ffd15 	stw	r5,-12(fp)
  855b4c:	e1bffe15 	stw	r6,-8(fp)
  855b50:	e1ffff15 	stw	r7,-4(fp)
     return fifoed_avalon_uart_read( sp,
  855b54:	e1ffff17 	ldw	r7,-4(fp)
  855b58:	e1bffe17 	ldw	r6,-8(fp)
  855b5c:	e17ffd17 	ldw	r5,-12(fp)
  855b60:	e13ffc17 	ldw	r4,-16(fp)
  855b64:	08551880 	call	855188 <fifoed_avalon_uart_read>
  buffer, space,  flags);
  }
  855b68:	e037883a 	mov	sp,fp
  855b6c:	dfc00117 	ldw	ra,4(sp)
  855b70:	df000017 	ldw	fp,0(sp)
  855b74:	dec00204 	addi	sp,sp,8
  855b78:	f800283a 	ret

00855b7c <fifoed_avalon_uart_classic_write>:

  int fifoed_avalon_uart_classic_write(fifoed_avalon_uart_state* sp,
  const char* ptr, int count, int flags)
  {
  855b7c:	defffa04 	addi	sp,sp,-24
  855b80:	dfc00515 	stw	ra,20(sp)
  855b84:	df000415 	stw	fp,16(sp)
  855b88:	df000404 	addi	fp,sp,16
  855b8c:	e13ffc15 	stw	r4,-16(fp)
  855b90:	e17ffd15 	stw	r5,-12(fp)
  855b94:	e1bffe15 	stw	r6,-8(fp)
  855b98:	e1ffff15 	stw	r7,-4(fp)
     return fifoed_avalon_uart_write( sp,
  855b9c:	e1ffff17 	ldw	r7,-4(fp)
  855ba0:	e1bffe17 	ldw	r6,-8(fp)
  855ba4:	e17ffd17 	ldw	r5,-12(fp)
  855ba8:	e13ffc17 	ldw	r4,-16(fp)
  855bac:	08553e40 	call	8553e4 <fifoed_avalon_uart_write>
  ptr, count,  flags);
  }
  855bb0:	e037883a 	mov	sp,fp
  855bb4:	dfc00117 	ldw	ra,4(sp)
  855bb8:	df000017 	ldw	fp,0(sp)
  855bbc:	dec00204 	addi	sp,sp,8
  855bc0:	f800283a 	ret

00855bc4 <fifoed_avalon_uart_read_fd>:
 *
 */

int
fifoed_avalon_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  855bc4:	defffa04 	addi	sp,sp,-24
  855bc8:	dfc00515 	stw	ra,20(sp)
  855bcc:	df000415 	stw	fp,16(sp)
  855bd0:	df000404 	addi	fp,sp,16
  855bd4:	e13ffd15 	stw	r4,-12(fp)
  855bd8:	e17ffe15 	stw	r5,-8(fp)
  855bdc:	e1bfff15 	stw	r6,-4(fp)
    fifoed_avalon_uart_dev* dev = (fifoed_avalon_uart_dev*) fd->dev;
  855be0:	e0bffd17 	ldw	r2,-12(fp)
  855be4:	10800017 	ldw	r2,0(r2)
  855be8:	e0bffc15 	stw	r2,-16(fp)

    return fifoed_avalon_uart_read(&dev->state, buffer, space,
  855bec:	e0bffc17 	ldw	r2,-16(fp)
  855bf0:	10c00a04 	addi	r3,r2,40
  855bf4:	e0bffd17 	ldw	r2,-12(fp)
  855bf8:	10800217 	ldw	r2,8(r2)
  855bfc:	100f883a 	mov	r7,r2
  855c00:	e1bfff17 	ldw	r6,-4(fp)
  855c04:	e17ffe17 	ldw	r5,-8(fp)
  855c08:	1809883a 	mov	r4,r3
  855c0c:	08551880 	call	855188 <fifoed_avalon_uart_read>
      fd->fd_flags);
}
  855c10:	e037883a 	mov	sp,fp
  855c14:	dfc00117 	ldw	ra,4(sp)
  855c18:	df000017 	ldw	fp,0(sp)
  855c1c:	dec00204 	addi	sp,sp,8
  855c20:	f800283a 	ret

00855c24 <fifoed_avalon_uart_write_fd>:

int
fifoed_avalon_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  855c24:	defffa04 	addi	sp,sp,-24
  855c28:	dfc00515 	stw	ra,20(sp)
  855c2c:	df000415 	stw	fp,16(sp)
  855c30:	df000404 	addi	fp,sp,16
  855c34:	e13ffd15 	stw	r4,-12(fp)
  855c38:	e17ffe15 	stw	r5,-8(fp)
  855c3c:	e1bfff15 	stw	r6,-4(fp)
    fifoed_avalon_uart_dev* dev = (fifoed_avalon_uart_dev*) fd->dev;
  855c40:	e0bffd17 	ldw	r2,-12(fp)
  855c44:	10800017 	ldw	r2,0(r2)
  855c48:	e0bffc15 	stw	r2,-16(fp)

    return fifoed_avalon_uart_write(&dev->state, buffer, space,
  855c4c:	e0bffc17 	ldw	r2,-16(fp)
  855c50:	10c00a04 	addi	r3,r2,40
  855c54:	e0bffd17 	ldw	r2,-12(fp)
  855c58:	10800217 	ldw	r2,8(r2)
  855c5c:	100f883a 	mov	r7,r2
  855c60:	e1bfff17 	ldw	r6,-4(fp)
  855c64:	e17ffe17 	ldw	r5,-8(fp)
  855c68:	1809883a 	mov	r4,r3
  855c6c:	08553e40 	call	8553e4 <fifoed_avalon_uart_write>
      fd->fd_flags);
}
  855c70:	e037883a 	mov	sp,fp
  855c74:	dfc00117 	ldw	ra,4(sp)
  855c78:	df000017 	ldw	fp,0(sp)
  855c7c:	dec00204 	addi	sp,sp,8
  855c80:	f800283a 	ret

00855c84 <fifoed_avalon_uart_classic_read_fd>:
int
 fifoed_avalon_uart_classic_read_fd(alt_fd* fd, char* buffer, int space)
{
  855c84:	defffa04 	addi	sp,sp,-24
  855c88:	dfc00515 	stw	ra,20(sp)
  855c8c:	df000415 	stw	fp,16(sp)
  855c90:	df000404 	addi	fp,sp,16
  855c94:	e13ffd15 	stw	r4,-12(fp)
  855c98:	e17ffe15 	stw	r5,-8(fp)
  855c9c:	e1bfff15 	stw	r6,-4(fp)
    fifoed_avalon_uart_dev* dev = (fifoed_avalon_uart_dev*) fd->dev;
  855ca0:	e0bffd17 	ldw	r2,-12(fp)
  855ca4:	10800017 	ldw	r2,0(r2)
  855ca8:	e0bffc15 	stw	r2,-16(fp)

    return fifoed_avalon_uart_read(&dev->state, buffer, space,
  855cac:	e0bffc17 	ldw	r2,-16(fp)
  855cb0:	10c00a04 	addi	r3,r2,40
  855cb4:	e0bffd17 	ldw	r2,-12(fp)
  855cb8:	10800217 	ldw	r2,8(r2)
  855cbc:	100f883a 	mov	r7,r2
  855cc0:	e1bfff17 	ldw	r6,-4(fp)
  855cc4:	e17ffe17 	ldw	r5,-8(fp)
  855cc8:	1809883a 	mov	r4,r3
  855ccc:	08551880 	call	855188 <fifoed_avalon_uart_read>
      fd->fd_flags);
}
  855cd0:	e037883a 	mov	sp,fp
  855cd4:	dfc00117 	ldw	ra,4(sp)
  855cd8:	df000017 	ldw	fp,0(sp)
  855cdc:	dec00204 	addi	sp,sp,8
  855ce0:	f800283a 	ret

00855ce4 <fifoed_avalon_uart_classic_write_fd>:

int
fifoed_avalon_uart_classic_write_fd(alt_fd* fd, const char* buffer, int space)
{
  855ce4:	defffa04 	addi	sp,sp,-24
  855ce8:	dfc00515 	stw	ra,20(sp)
  855cec:	df000415 	stw	fp,16(sp)
  855cf0:	df000404 	addi	fp,sp,16
  855cf4:	e13ffd15 	stw	r4,-12(fp)
  855cf8:	e17ffe15 	stw	r5,-8(fp)
  855cfc:	e1bfff15 	stw	r6,-4(fp)
    fifoed_avalon_uart_dev* dev = (fifoed_avalon_uart_dev*) fd->dev;
  855d00:	e0bffd17 	ldw	r2,-12(fp)
  855d04:	10800017 	ldw	r2,0(r2)
  855d08:	e0bffc15 	stw	r2,-16(fp)

    return fifoed_avalon_uart_write(&dev->state, buffer, space,
  855d0c:	e0bffc17 	ldw	r2,-16(fp)
  855d10:	10c00a04 	addi	r3,r2,40
  855d14:	e0bffd17 	ldw	r2,-12(fp)
  855d18:	10800217 	ldw	r2,8(r2)
  855d1c:	100f883a 	mov	r7,r2
  855d20:	e1bfff17 	ldw	r6,-4(fp)
  855d24:	e17ffe17 	ldw	r5,-8(fp)
  855d28:	1809883a 	mov	r4,r3
  855d2c:	08553e40 	call	8553e4 <fifoed_avalon_uart_write>
      fd->fd_flags);
}
  855d30:	e037883a 	mov	sp,fp
  855d34:	dfc00117 	ldw	ra,4(sp)
  855d38:	df000017 	ldw	fp,0(sp)
  855d3c:	dec00204 	addi	sp,sp,8
  855d40:	f800283a 	ret

00855d44 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  855d44:	defff504 	addi	sp,sp,-44
  855d48:	df000a15 	stw	fp,40(sp)
  855d4c:	df000a04 	addi	fp,sp,40
  855d50:	e13ffc15 	stw	r4,-16(fp)
  855d54:	e17ffd15 	stw	r5,-12(fp)
  855d58:	e1bffe15 	stw	r6,-8(fp)
  855d5c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  855d60:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  855d64:	d0a0aa17 	ldw	r2,-32088(gp)
  
  if (alt_ticks_per_second ())
  855d68:	10003c26 	beq	r2,zero,855e5c <alt_alarm_start+0x118>
  {
    if (alarm)
  855d6c:	e0bffc17 	ldw	r2,-16(fp)
  855d70:	10003826 	beq	r2,zero,855e54 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  855d74:	e0bffc17 	ldw	r2,-16(fp)
  855d78:	e0fffe17 	ldw	r3,-8(fp)
  855d7c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  855d80:	e0bffc17 	ldw	r2,-16(fp)
  855d84:	e0ffff17 	ldw	r3,-4(fp)
  855d88:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  855d8c:	0005303a 	rdctl	r2,status
  855d90:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  855d94:	e0fff917 	ldw	r3,-28(fp)
  855d98:	00bfff84 	movi	r2,-2
  855d9c:	1884703a 	and	r2,r3,r2
  855da0:	1001703a 	wrctl	status,r2
  
  return context;
  855da4:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  855da8:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  855dac:	d0a0ab17 	ldw	r2,-32084(gp)
      
      current_nticks = alt_nticks();
  855db0:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  855db4:	e0fffd17 	ldw	r3,-12(fp)
  855db8:	e0bff617 	ldw	r2,-40(fp)
  855dbc:	1885883a 	add	r2,r3,r2
  855dc0:	10c00044 	addi	r3,r2,1
  855dc4:	e0bffc17 	ldw	r2,-16(fp)
  855dc8:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  855dcc:	e0bffc17 	ldw	r2,-16(fp)
  855dd0:	10c00217 	ldw	r3,8(r2)
  855dd4:	e0bff617 	ldw	r2,-40(fp)
  855dd8:	1880042e 	bgeu	r3,r2,855dec <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  855ddc:	e0bffc17 	ldw	r2,-16(fp)
  855de0:	00c00044 	movi	r3,1
  855de4:	10c00405 	stb	r3,16(r2)
  855de8:	00000206 	br	855df4 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  855dec:	e0bffc17 	ldw	r2,-16(fp)
  855df0:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  855df4:	e0bffc17 	ldw	r2,-16(fp)
  855df8:	d0e07904 	addi	r3,gp,-32284
  855dfc:	e0fffa15 	stw	r3,-24(fp)
  855e00:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  855e04:	e0bffb17 	ldw	r2,-20(fp)
  855e08:	e0fffa17 	ldw	r3,-24(fp)
  855e0c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  855e10:	e0bffa17 	ldw	r2,-24(fp)
  855e14:	10c00017 	ldw	r3,0(r2)
  855e18:	e0bffb17 	ldw	r2,-20(fp)
  855e1c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  855e20:	e0bffa17 	ldw	r2,-24(fp)
  855e24:	10800017 	ldw	r2,0(r2)
  855e28:	e0fffb17 	ldw	r3,-20(fp)
  855e2c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  855e30:	e0bffa17 	ldw	r2,-24(fp)
  855e34:	e0fffb17 	ldw	r3,-20(fp)
  855e38:	10c00015 	stw	r3,0(r2)
  855e3c:	e0bff817 	ldw	r2,-32(fp)
  855e40:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  855e44:	e0bff717 	ldw	r2,-36(fp)
  855e48:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  855e4c:	0005883a 	mov	r2,zero
  855e50:	00000306 	br	855e60 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  855e54:	00bffa84 	movi	r2,-22
  855e58:	00000106 	br	855e60 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  855e5c:	00bfde84 	movi	r2,-134
  }
}
  855e60:	e037883a 	mov	sp,fp
  855e64:	df000017 	ldw	fp,0(sp)
  855e68:	dec00104 	addi	sp,sp,4
  855e6c:	f800283a 	ret

00855e70 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  855e70:	defffe04 	addi	sp,sp,-8
  855e74:	dfc00115 	stw	ra,4(sp)
  855e78:	df000015 	stw	fp,0(sp)
  855e7c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  855e80:	d0a04317 	ldw	r2,-32500(gp)
  855e84:	10000326 	beq	r2,zero,855e94 <alt_get_errno+0x24>
  855e88:	d0a04317 	ldw	r2,-32500(gp)
  855e8c:	103ee83a 	callr	r2
  855e90:	00000106 	br	855e98 <alt_get_errno+0x28>
  855e94:	d0a08804 	addi	r2,gp,-32224
}
  855e98:	e037883a 	mov	sp,fp
  855e9c:	dfc00117 	ldw	ra,4(sp)
  855ea0:	df000017 	ldw	fp,0(sp)
  855ea4:	dec00204 	addi	sp,sp,8
  855ea8:	f800283a 	ret

00855eac <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  855eac:	defffa04 	addi	sp,sp,-24
  855eb0:	dfc00515 	stw	ra,20(sp)
  855eb4:	df000415 	stw	fp,16(sp)
  855eb8:	df000404 	addi	fp,sp,16
  855ebc:	e13ffe15 	stw	r4,-8(fp)
  855ec0:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  855ec4:	e0bffe17 	ldw	r2,-8(fp)
  855ec8:	10000326 	beq	r2,zero,855ed8 <alt_dev_llist_insert+0x2c>
  855ecc:	e0bffe17 	ldw	r2,-8(fp)
  855ed0:	10800217 	ldw	r2,8(r2)
  855ed4:	1000061e 	bne	r2,zero,855ef0 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  855ed8:	0855e700 	call	855e70 <alt_get_errno>
  855edc:	1007883a 	mov	r3,r2
  855ee0:	00800584 	movi	r2,22
  855ee4:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  855ee8:	00bffa84 	movi	r2,-22
  855eec:	00001306 	br	855f3c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  855ef0:	e0bffe17 	ldw	r2,-8(fp)
  855ef4:	e0ffff17 	ldw	r3,-4(fp)
  855ef8:	e0fffc15 	stw	r3,-16(fp)
  855efc:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  855f00:	e0bffd17 	ldw	r2,-12(fp)
  855f04:	e0fffc17 	ldw	r3,-16(fp)
  855f08:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  855f0c:	e0bffc17 	ldw	r2,-16(fp)
  855f10:	10c00017 	ldw	r3,0(r2)
  855f14:	e0bffd17 	ldw	r2,-12(fp)
  855f18:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  855f1c:	e0bffc17 	ldw	r2,-16(fp)
  855f20:	10800017 	ldw	r2,0(r2)
  855f24:	e0fffd17 	ldw	r3,-12(fp)
  855f28:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  855f2c:	e0bffc17 	ldw	r2,-16(fp)
  855f30:	e0fffd17 	ldw	r3,-12(fp)
  855f34:	10c00015 	stw	r3,0(r2)

  return 0;  
  855f38:	0005883a 	mov	r2,zero
}
  855f3c:	e037883a 	mov	sp,fp
  855f40:	dfc00117 	ldw	ra,4(sp)
  855f44:	df000017 	ldw	fp,0(sp)
  855f48:	dec00204 	addi	sp,sp,8
  855f4c:	f800283a 	ret

00855f50 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  855f50:	defffd04 	addi	sp,sp,-12
  855f54:	dfc00215 	stw	ra,8(sp)
  855f58:	df000115 	stw	fp,4(sp)
  855f5c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  855f60:	00802174 	movhi	r2,133
  855f64:	109c4604 	addi	r2,r2,28952
  855f68:	e0bfff15 	stw	r2,-4(fp)
  855f6c:	00000606 	br	855f88 <_do_ctors+0x38>
        (*ctor) (); 
  855f70:	e0bfff17 	ldw	r2,-4(fp)
  855f74:	10800017 	ldw	r2,0(r2)
  855f78:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  855f7c:	e0bfff17 	ldw	r2,-4(fp)
  855f80:	10bfff04 	addi	r2,r2,-4
  855f84:	e0bfff15 	stw	r2,-4(fp)
  855f88:	e0ffff17 	ldw	r3,-4(fp)
  855f8c:	00802174 	movhi	r2,133
  855f90:	109c4704 	addi	r2,r2,28956
  855f94:	18bff62e 	bgeu	r3,r2,855f70 <__alt_mem_epcs_flash_controller_0+0xff84cf70>
        (*ctor) (); 
}
  855f98:	0001883a 	nop
  855f9c:	e037883a 	mov	sp,fp
  855fa0:	dfc00117 	ldw	ra,4(sp)
  855fa4:	df000017 	ldw	fp,0(sp)
  855fa8:	dec00204 	addi	sp,sp,8
  855fac:	f800283a 	ret

00855fb0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  855fb0:	defffd04 	addi	sp,sp,-12
  855fb4:	dfc00215 	stw	ra,8(sp)
  855fb8:	df000115 	stw	fp,4(sp)
  855fbc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  855fc0:	00802174 	movhi	r2,133
  855fc4:	109c4604 	addi	r2,r2,28952
  855fc8:	e0bfff15 	stw	r2,-4(fp)
  855fcc:	00000606 	br	855fe8 <_do_dtors+0x38>
        (*dtor) (); 
  855fd0:	e0bfff17 	ldw	r2,-4(fp)
  855fd4:	10800017 	ldw	r2,0(r2)
  855fd8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  855fdc:	e0bfff17 	ldw	r2,-4(fp)
  855fe0:	10bfff04 	addi	r2,r2,-4
  855fe4:	e0bfff15 	stw	r2,-4(fp)
  855fe8:	e0ffff17 	ldw	r3,-4(fp)
  855fec:	00802174 	movhi	r2,133
  855ff0:	109c4704 	addi	r2,r2,28956
  855ff4:	18bff62e 	bgeu	r3,r2,855fd0 <__alt_mem_epcs_flash_controller_0+0xff84cfd0>
        (*dtor) (); 
}
  855ff8:	0001883a 	nop
  855ffc:	e037883a 	mov	sp,fp
  856000:	dfc00117 	ldw	ra,4(sp)
  856004:	df000017 	ldw	fp,0(sp)
  856008:	dec00204 	addi	sp,sp,8
  85600c:	f800283a 	ret

00856010 <alt_flash_open_dev>:
#include "priv/alt_file.h"

ALT_LLIST_HEAD(alt_flash_dev_list);

alt_flash_fd* alt_flash_open_dev(const char* name)
{
  856010:	defffc04 	addi	sp,sp,-16
  856014:	dfc00315 	stw	ra,12(sp)
  856018:	df000215 	stw	fp,8(sp)
  85601c:	df000204 	addi	fp,sp,8
  856020:	e13fff15 	stw	r4,-4(fp)
  alt_flash_dev* dev = (alt_flash_dev*)alt_find_dev(name, &alt_flash_dev_list);
  856024:	d1607704 	addi	r5,gp,-32292
  856028:	e13fff17 	ldw	r4,-4(fp)
  85602c:	0856ce80 	call	856ce8 <alt_find_dev>
  856030:	e0bffe15 	stw	r2,-8(fp)

  if ((dev) && dev->open)
  856034:	e0bffe17 	ldw	r2,-8(fp)
  856038:	10000926 	beq	r2,zero,856060 <alt_flash_open_dev+0x50>
  85603c:	e0bffe17 	ldw	r2,-8(fp)
  856040:	10800317 	ldw	r2,12(r2)
  856044:	10000626 	beq	r2,zero,856060 <alt_flash_open_dev+0x50>
  {
    return dev->open(dev, name);
  856048:	e0bffe17 	ldw	r2,-8(fp)
  85604c:	10800317 	ldw	r2,12(r2)
  856050:	e17fff17 	ldw	r5,-4(fp)
  856054:	e13ffe17 	ldw	r4,-8(fp)
  856058:	103ee83a 	callr	r2
  85605c:	00000106 	br	856064 <alt_flash_open_dev+0x54>
  }

  return dev;
  856060:	e0bffe17 	ldw	r2,-8(fp)
}
  856064:	e037883a 	mov	sp,fp
  856068:	dfc00117 	ldw	ra,4(sp)
  85606c:	df000017 	ldw	fp,0(sp)
  856070:	dec00204 	addi	sp,sp,8
  856074:	f800283a 	ret

00856078 <alt_flash_close_dev>:

void alt_flash_close_dev(alt_flash_fd* fd)
{
  856078:	defffd04 	addi	sp,sp,-12
  85607c:	dfc00215 	stw	ra,8(sp)
  856080:	df000115 	stw	fp,4(sp)
  856084:	df000104 	addi	fp,sp,4
  856088:	e13fff15 	stw	r4,-4(fp)
  if (fd && fd->close)
  85608c:	e0bfff17 	ldw	r2,-4(fp)
  856090:	10000826 	beq	r2,zero,8560b4 <alt_flash_close_dev+0x3c>
  856094:	e0bfff17 	ldw	r2,-4(fp)
  856098:	10800417 	ldw	r2,16(r2)
  85609c:	10000526 	beq	r2,zero,8560b4 <alt_flash_close_dev+0x3c>
  {
    fd->close(fd);
  8560a0:	e0bfff17 	ldw	r2,-4(fp)
  8560a4:	10800417 	ldw	r2,16(r2)
  8560a8:	e13fff17 	ldw	r4,-4(fp)
  8560ac:	103ee83a 	callr	r2
  }
  return;
  8560b0:	0001883a 	nop
  8560b4:	0001883a 	nop
}
  8560b8:	e037883a 	mov	sp,fp
  8560bc:	dfc00117 	ldw	ra,4(sp)
  8560c0:	df000017 	ldw	fp,0(sp)
  8560c4:	dec00204 	addi	sp,sp,8
  8560c8:	f800283a 	ret

008560cc <alt_fs_reg>:
 * A return value of zero indicates success. A negative return value indicates
 * failure. 
 */
 
int alt_fs_reg (alt_dev* dev)
{
  8560cc:	defffc04 	addi	sp,sp,-16
  8560d0:	df000315 	stw	fp,12(sp)
  8560d4:	df000304 	addi	fp,sp,12
  8560d8:	e13fff15 	stw	r4,-4(fp)
  /*
   * check that the device has a name.
   */

  if (!dev->name)
  8560dc:	e0bfff17 	ldw	r2,-4(fp)
  8560e0:	10800217 	ldw	r2,8(r2)
  8560e4:	1000021e 	bne	r2,zero,8560f0 <alt_fs_reg+0x24>
  {
    return -ENODEV;
  8560e8:	00bffb44 	movi	r2,-19
  8560ec:	00001306 	br	85613c <alt_fs_reg+0x70>
  
  /*
   * register the file system.
   */

  alt_llist_insert(&alt_fs_list, &dev->llist);
  8560f0:	e0bfff17 	ldw	r2,-4(fp)
  8560f4:	d0e03e04 	addi	r3,gp,-32520
  8560f8:	e0fffd15 	stw	r3,-12(fp)
  8560fc:	e0bffe15 	stw	r2,-8(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  856100:	e0bffe17 	ldw	r2,-8(fp)
  856104:	e0fffd17 	ldw	r3,-12(fp)
  856108:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  85610c:	e0bffd17 	ldw	r2,-12(fp)
  856110:	10c00017 	ldw	r3,0(r2)
  856114:	e0bffe17 	ldw	r2,-8(fp)
  856118:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  85611c:	e0bffd17 	ldw	r2,-12(fp)
  856120:	10800017 	ldw	r2,0(r2)
  856124:	e0fffe17 	ldw	r3,-8(fp)
  856128:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  85612c:	e0bffd17 	ldw	r2,-12(fp)
  856130:	e0fffe17 	ldw	r3,-8(fp)
  856134:	10c00015 	stw	r3,0(r2)

  return 0;
  856138:	0005883a 	mov	r2,zero
} 
  85613c:	e037883a 	mov	sp,fp
  856140:	df000017 	ldw	fp,0(sp)
  856144:	dec00104 	addi	sp,sp,4
  856148:	f800283a 	ret

0085614c <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  85614c:	defffe04 	addi	sp,sp,-8
  856150:	df000115 	stw	fp,4(sp)
  856154:	df000104 	addi	fp,sp,4
  856158:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  85615c:	e0bfff17 	ldw	r2,-4(fp)
  856160:	10bffe84 	addi	r2,r2,-6
  856164:	10c00428 	cmpgeui	r3,r2,16
  856168:	18001a1e 	bne	r3,zero,8561d4 <alt_exception_cause_generated_bad_addr+0x88>
  85616c:	100690ba 	slli	r3,r2,2
  856170:	00802174 	movhi	r2,133
  856174:	10986104 	addi	r2,r2,24964
  856178:	1885883a 	add	r2,r3,r2
  85617c:	10800017 	ldw	r2,0(r2)
  856180:	1000683a 	jmp	r2
  856184:	008561c4 	movi	r2,5511
  856188:	008561c4 	movi	r2,5511
  85618c:	008561d4 	movui	r2,5511
  856190:	008561d4 	movui	r2,5511
  856194:	008561d4 	movui	r2,5511
  856198:	008561c4 	movi	r2,5511
  85619c:	008561cc 	andi	r2,zero,5511
  8561a0:	008561d4 	movui	r2,5511
  8561a4:	008561c4 	movi	r2,5511
  8561a8:	008561c4 	movi	r2,5511
  8561ac:	008561d4 	movui	r2,5511
  8561b0:	008561c4 	movi	r2,5511
  8561b4:	008561cc 	andi	r2,zero,5511
  8561b8:	008561d4 	movui	r2,5511
  8561bc:	008561d4 	movui	r2,5511
  8561c0:	008561c4 	movi	r2,5511
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  8561c4:	00800044 	movi	r2,1
  8561c8:	00000306 	br	8561d8 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  8561cc:	0005883a 	mov	r2,zero
  8561d0:	00000106 	br	8561d8 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  8561d4:	0005883a 	mov	r2,zero
  }
}
  8561d8:	e037883a 	mov	sp,fp
  8561dc:	df000017 	ldw	fp,0(sp)
  8561e0:	dec00104 	addi	sp,sp,4
  8561e4:	f800283a 	ret

008561e8 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  8561e8:	defff804 	addi	sp,sp,-32
  8561ec:	dfc00715 	stw	ra,28(sp)
  8561f0:	df000615 	stw	fp,24(sp)
  8561f4:	dc000515 	stw	r16,20(sp)
  8561f8:	df000604 	addi	fp,sp,24
  8561fc:	e13ffb15 	stw	r4,-20(fp)
  856200:	e17ffc15 	stw	r5,-16(fp)
  856204:	e1bffd15 	stw	r6,-12(fp)
  856208:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
  85620c:	e1bffe17 	ldw	r6,-8(fp)
  856210:	e17ffd17 	ldw	r5,-12(fp)
  856214:	e13ffc17 	ldw	r4,-16(fp)
  856218:	08564700 	call	856470 <open>
  85621c:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
  856220:	e0bffa17 	ldw	r2,-24(fp)
  856224:	10002216 	blt	r2,zero,8562b0 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
  856228:	040021b4 	movhi	r16,134
  85622c:	842a1e04 	addi	r16,r16,-22408
  856230:	e0bffa17 	ldw	r2,-24(fp)
  856234:	01400304 	movi	r5,12
  856238:	1009883a 	mov	r4,r2
  85623c:	08301e80 	call	8301e8 <__mulsi3>
  856240:	8085883a 	add	r2,r16,r2
  856244:	10c00017 	ldw	r3,0(r2)
  856248:	e0bffb17 	ldw	r2,-20(fp)
  85624c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  856250:	040021b4 	movhi	r16,134
  856254:	842a1e04 	addi	r16,r16,-22408
  856258:	e0bffa17 	ldw	r2,-24(fp)
  85625c:	01400304 	movi	r5,12
  856260:	1009883a 	mov	r4,r2
  856264:	08301e80 	call	8301e8 <__mulsi3>
  856268:	8085883a 	add	r2,r16,r2
  85626c:	10800104 	addi	r2,r2,4
  856270:	10c00017 	ldw	r3,0(r2)
  856274:	e0bffb17 	ldw	r2,-20(fp)
  856278:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  85627c:	040021b4 	movhi	r16,134
  856280:	842a1e04 	addi	r16,r16,-22408
  856284:	e0bffa17 	ldw	r2,-24(fp)
  856288:	01400304 	movi	r5,12
  85628c:	1009883a 	mov	r4,r2
  856290:	08301e80 	call	8301e8 <__mulsi3>
  856294:	8085883a 	add	r2,r16,r2
  856298:	10800204 	addi	r2,r2,8
  85629c:	10c00017 	ldw	r3,0(r2)
  8562a0:	e0bffb17 	ldw	r2,-20(fp)
  8562a4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  8562a8:	e13ffa17 	ldw	r4,-24(fp)
  8562ac:	084a2c80 	call	84a2c8 <alt_release_fd>
  }
} 
  8562b0:	0001883a 	nop
  8562b4:	e6ffff04 	addi	sp,fp,-4
  8562b8:	dfc00217 	ldw	ra,8(sp)
  8562bc:	df000117 	ldw	fp,4(sp)
  8562c0:	dc000017 	ldw	r16,0(sp)
  8562c4:	dec00304 	addi	sp,sp,12
  8562c8:	f800283a 	ret

008562cc <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  8562cc:	defffb04 	addi	sp,sp,-20
  8562d0:	dfc00415 	stw	ra,16(sp)
  8562d4:	df000315 	stw	fp,12(sp)
  8562d8:	df000304 	addi	fp,sp,12
  8562dc:	e13ffd15 	stw	r4,-12(fp)
  8562e0:	e17ffe15 	stw	r5,-8(fp)
  8562e4:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  8562e8:	01c07fc4 	movi	r7,511
  8562ec:	01800044 	movi	r6,1
  8562f0:	e17ffd17 	ldw	r5,-12(fp)
  8562f4:	010021b4 	movhi	r4,134
  8562f8:	212a2104 	addi	r4,r4,-22396
  8562fc:	08561e80 	call	8561e8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  856300:	01c07fc4 	movi	r7,511
  856304:	000d883a 	mov	r6,zero
  856308:	e17ffe17 	ldw	r5,-8(fp)
  85630c:	010021b4 	movhi	r4,134
  856310:	212a1e04 	addi	r4,r4,-22408
  856314:	08561e80 	call	8561e8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  856318:	01c07fc4 	movi	r7,511
  85631c:	01800044 	movi	r6,1
  856320:	e17fff17 	ldw	r5,-4(fp)
  856324:	010021b4 	movhi	r4,134
  856328:	212a2404 	addi	r4,r4,-22384
  85632c:	08561e80 	call	8561e8 <alt_open_fd>
}  
  856330:	0001883a 	nop
  856334:	e037883a 	mov	sp,fp
  856338:	dfc00117 	ldw	ra,4(sp)
  85633c:	df000017 	ldw	fp,0(sp)
  856340:	dec00204 	addi	sp,sp,8
  856344:	f800283a 	ret

00856348 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  856348:	defffe04 	addi	sp,sp,-8
  85634c:	dfc00115 	stw	ra,4(sp)
  856350:	df000015 	stw	fp,0(sp)
  856354:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  856358:	d0a04317 	ldw	r2,-32500(gp)
  85635c:	10000326 	beq	r2,zero,85636c <alt_get_errno+0x24>
  856360:	d0a04317 	ldw	r2,-32500(gp)
  856364:	103ee83a 	callr	r2
  856368:	00000106 	br	856370 <alt_get_errno+0x28>
  85636c:	d0a08804 	addi	r2,gp,-32224
}
  856370:	e037883a 	mov	sp,fp
  856374:	dfc00117 	ldw	ra,4(sp)
  856378:	df000017 	ldw	fp,0(sp)
  85637c:	dec00204 	addi	sp,sp,8
  856380:	f800283a 	ret

00856384 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  856384:	defffb04 	addi	sp,sp,-20
  856388:	dfc00415 	stw	ra,16(sp)
  85638c:	df000315 	stw	fp,12(sp)
  856390:	dc000215 	stw	r16,8(sp)
  856394:	df000304 	addi	fp,sp,12
  856398:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  85639c:	e0bffe17 	ldw	r2,-8(fp)
  8563a0:	10800217 	ldw	r2,8(r2)
  8563a4:	10d00034 	orhi	r3,r2,16384
  8563a8:	e0bffe17 	ldw	r2,-8(fp)
  8563ac:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  8563b0:	e03ffd15 	stw	zero,-12(fp)
  8563b4:	00002306 	br	856444 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  8563b8:	040021b4 	movhi	r16,134
  8563bc:	842a1e04 	addi	r16,r16,-22408
  8563c0:	e0bffd17 	ldw	r2,-12(fp)
  8563c4:	01400304 	movi	r5,12
  8563c8:	1009883a 	mov	r4,r2
  8563cc:	08301e80 	call	8301e8 <__mulsi3>
  8563d0:	8085883a 	add	r2,r16,r2
  8563d4:	10c00017 	ldw	r3,0(r2)
  8563d8:	e0bffe17 	ldw	r2,-8(fp)
  8563dc:	10800017 	ldw	r2,0(r2)
  8563e0:	1880151e 	bne	r3,r2,856438 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  8563e4:	040021b4 	movhi	r16,134
  8563e8:	842a1e04 	addi	r16,r16,-22408
  8563ec:	e0bffd17 	ldw	r2,-12(fp)
  8563f0:	01400304 	movi	r5,12
  8563f4:	1009883a 	mov	r4,r2
  8563f8:	08301e80 	call	8301e8 <__mulsi3>
  8563fc:	8085883a 	add	r2,r16,r2
  856400:	10800204 	addi	r2,r2,8
  856404:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  856408:	10000b0e 	bge	r2,zero,856438 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  85640c:	01400304 	movi	r5,12
  856410:	e13ffd17 	ldw	r4,-12(fp)
  856414:	08301e80 	call	8301e8 <__mulsi3>
  856418:	1007883a 	mov	r3,r2
  85641c:	008021b4 	movhi	r2,134
  856420:	10aa1e04 	addi	r2,r2,-22408
  856424:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  856428:	e0bffe17 	ldw	r2,-8(fp)
  85642c:	18800226 	beq	r3,r2,856438 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  856430:	00bffcc4 	movi	r2,-13
  856434:	00000806 	br	856458 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  856438:	e0bffd17 	ldw	r2,-12(fp)
  85643c:	10800044 	addi	r2,r2,1
  856440:	e0bffd15 	stw	r2,-12(fp)
  856444:	d0a04217 	ldw	r2,-32504(gp)
  856448:	1007883a 	mov	r3,r2
  85644c:	e0bffd17 	ldw	r2,-12(fp)
  856450:	18bfd92e 	bgeu	r3,r2,8563b8 <__alt_mem_epcs_flash_controller_0+0xff84d3b8>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  856454:	0005883a 	mov	r2,zero
}
  856458:	e6ffff04 	addi	sp,fp,-4
  85645c:	dfc00217 	ldw	ra,8(sp)
  856460:	df000117 	ldw	fp,4(sp)
  856464:	dc000017 	ldw	r16,0(sp)
  856468:	dec00304 	addi	sp,sp,12
  85646c:	f800283a 	ret

00856470 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  856470:	defff604 	addi	sp,sp,-40
  856474:	dfc00915 	stw	ra,36(sp)
  856478:	df000815 	stw	fp,32(sp)
  85647c:	df000804 	addi	fp,sp,32
  856480:	e13ffd15 	stw	r4,-12(fp)
  856484:	e17ffe15 	stw	r5,-8(fp)
  856488:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  85648c:	00bfffc4 	movi	r2,-1
  856490:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  856494:	00bffb44 	movi	r2,-19
  856498:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  85649c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  8564a0:	d1604004 	addi	r5,gp,-32512
  8564a4:	e13ffd17 	ldw	r4,-12(fp)
  8564a8:	0856ce80 	call	856ce8 <alt_find_dev>
  8564ac:	e0bff815 	stw	r2,-32(fp)
  8564b0:	e0bff817 	ldw	r2,-32(fp)
  8564b4:	1000051e 	bne	r2,zero,8564cc <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  8564b8:	e13ffd17 	ldw	r4,-12(fp)
  8564bc:	0856d780 	call	856d78 <alt_find_file>
  8564c0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  8564c4:	00800044 	movi	r2,1
  8564c8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  8564cc:	e0bff817 	ldw	r2,-32(fp)
  8564d0:	10002b26 	beq	r2,zero,856580 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
  8564d4:	e13ff817 	ldw	r4,-32(fp)
  8564d8:	0856e800 	call	856e80 <alt_get_fd>
  8564dc:	e0bff915 	stw	r2,-28(fp)
  8564e0:	e0bff917 	ldw	r2,-28(fp)
  8564e4:	1000030e 	bge	r2,zero,8564f4 <open+0x84>
    {
      status = index;
  8564e8:	e0bff917 	ldw	r2,-28(fp)
  8564ec:	e0bffa15 	stw	r2,-24(fp)
  8564f0:	00002506 	br	856588 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
  8564f4:	01400304 	movi	r5,12
  8564f8:	e13ff917 	ldw	r4,-28(fp)
  8564fc:	08301e80 	call	8301e8 <__mulsi3>
  856500:	1007883a 	mov	r3,r2
  856504:	008021b4 	movhi	r2,134
  856508:	10aa1e04 	addi	r2,r2,-22408
  85650c:	1885883a 	add	r2,r3,r2
  856510:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  856514:	e0fffe17 	ldw	r3,-8(fp)
  856518:	00900034 	movhi	r2,16384
  85651c:	10bfffc4 	addi	r2,r2,-1
  856520:	1886703a 	and	r3,r3,r2
  856524:	e0bffc17 	ldw	r2,-16(fp)
  856528:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  85652c:	e0bffb17 	ldw	r2,-20(fp)
  856530:	1000051e 	bne	r2,zero,856548 <open+0xd8>
  856534:	e13ffc17 	ldw	r4,-16(fp)
  856538:	08563840 	call	856384 <alt_file_locked>
  85653c:	e0bffa15 	stw	r2,-24(fp)
  856540:	e0bffa17 	ldw	r2,-24(fp)
  856544:	10001016 	blt	r2,zero,856588 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  856548:	e0bff817 	ldw	r2,-32(fp)
  85654c:	10800317 	ldw	r2,12(r2)
  856550:	10000826 	beq	r2,zero,856574 <open+0x104>
  856554:	e0bff817 	ldw	r2,-32(fp)
  856558:	10800317 	ldw	r2,12(r2)
  85655c:	e1ffff17 	ldw	r7,-4(fp)
  856560:	e1bffe17 	ldw	r6,-8(fp)
  856564:	e17ffd17 	ldw	r5,-12(fp)
  856568:	e13ffc17 	ldw	r4,-16(fp)
  85656c:	103ee83a 	callr	r2
  856570:	00000106 	br	856578 <open+0x108>
  856574:	0005883a 	mov	r2,zero
  856578:	e0bffa15 	stw	r2,-24(fp)
  85657c:	00000206 	br	856588 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
  856580:	00bffb44 	movi	r2,-19
  856584:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  856588:	e0bffa17 	ldw	r2,-24(fp)
  85658c:	1000090e 	bge	r2,zero,8565b4 <open+0x144>
  {
    alt_release_fd (index);  
  856590:	e13ff917 	ldw	r4,-28(fp)
  856594:	084a2c80 	call	84a2c8 <alt_release_fd>
    ALT_ERRNO = -status;
  856598:	08563480 	call	856348 <alt_get_errno>
  85659c:	1007883a 	mov	r3,r2
  8565a0:	e0bffa17 	ldw	r2,-24(fp)
  8565a4:	0085c83a 	sub	r2,zero,r2
  8565a8:	18800015 	stw	r2,0(r3)
    return -1;
  8565ac:	00bfffc4 	movi	r2,-1
  8565b0:	00000106 	br	8565b8 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
  8565b4:	e0bff917 	ldw	r2,-28(fp)
}
  8565b8:	e037883a 	mov	sp,fp
  8565bc:	dfc00117 	ldw	ra,4(sp)
  8565c0:	df000017 	ldw	fp,0(sp)
  8565c4:	dec00204 	addi	sp,sp,8
  8565c8:	f800283a 	ret

008565cc <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  8565cc:	defffa04 	addi	sp,sp,-24
  8565d0:	df000515 	stw	fp,20(sp)
  8565d4:	df000504 	addi	fp,sp,20
  8565d8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8565dc:	0005303a 	rdctl	r2,status
  8565e0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8565e4:	e0fffc17 	ldw	r3,-16(fp)
  8565e8:	00bfff84 	movi	r2,-2
  8565ec:	1884703a 	and	r2,r3,r2
  8565f0:	1001703a 	wrctl	status,r2
  
  return context;
  8565f4:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  8565f8:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  8565fc:	e0bfff17 	ldw	r2,-4(fp)
  856600:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  856604:	e0bffd17 	ldw	r2,-12(fp)
  856608:	10800017 	ldw	r2,0(r2)
  85660c:	e0fffd17 	ldw	r3,-12(fp)
  856610:	18c00117 	ldw	r3,4(r3)
  856614:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  856618:	e0bffd17 	ldw	r2,-12(fp)
  85661c:	10800117 	ldw	r2,4(r2)
  856620:	e0fffd17 	ldw	r3,-12(fp)
  856624:	18c00017 	ldw	r3,0(r3)
  856628:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  85662c:	e0bffd17 	ldw	r2,-12(fp)
  856630:	e0fffd17 	ldw	r3,-12(fp)
  856634:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  856638:	e0bffd17 	ldw	r2,-12(fp)
  85663c:	e0fffd17 	ldw	r3,-12(fp)
  856640:	10c00015 	stw	r3,0(r2)
  856644:	e0bffb17 	ldw	r2,-20(fp)
  856648:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  85664c:	e0bffe17 	ldw	r2,-8(fp)
  856650:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  856654:	0001883a 	nop
  856658:	e037883a 	mov	sp,fp
  85665c:	df000017 	ldw	fp,0(sp)
  856660:	dec00104 	addi	sp,sp,4
  856664:	f800283a 	ret

00856668 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  856668:	defffb04 	addi	sp,sp,-20
  85666c:	dfc00415 	stw	ra,16(sp)
  856670:	df000315 	stw	fp,12(sp)
  856674:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  856678:	d0a07917 	ldw	r2,-32284(gp)
  85667c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  856680:	d0a0ab17 	ldw	r2,-32084(gp)
  856684:	10800044 	addi	r2,r2,1
  856688:	d0a0ab15 	stw	r2,-32084(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  85668c:	00002e06 	br	856748 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  856690:	e0bffd17 	ldw	r2,-12(fp)
  856694:	10800017 	ldw	r2,0(r2)
  856698:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  85669c:	e0bffd17 	ldw	r2,-12(fp)
  8566a0:	10800403 	ldbu	r2,16(r2)
  8566a4:	10803fcc 	andi	r2,r2,255
  8566a8:	10000426 	beq	r2,zero,8566bc <alt_tick+0x54>
  8566ac:	d0a0ab17 	ldw	r2,-32084(gp)
  8566b0:	1000021e 	bne	r2,zero,8566bc <alt_tick+0x54>
    {
      alarm->rollover = 0;
  8566b4:	e0bffd17 	ldw	r2,-12(fp)
  8566b8:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  8566bc:	e0bffd17 	ldw	r2,-12(fp)
  8566c0:	10800217 	ldw	r2,8(r2)
  8566c4:	d0e0ab17 	ldw	r3,-32084(gp)
  8566c8:	18801d36 	bltu	r3,r2,856740 <alt_tick+0xd8>
  8566cc:	e0bffd17 	ldw	r2,-12(fp)
  8566d0:	10800403 	ldbu	r2,16(r2)
  8566d4:	10803fcc 	andi	r2,r2,255
  8566d8:	1000191e 	bne	r2,zero,856740 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  8566dc:	e0bffd17 	ldw	r2,-12(fp)
  8566e0:	10800317 	ldw	r2,12(r2)
  8566e4:	e0fffd17 	ldw	r3,-12(fp)
  8566e8:	18c00517 	ldw	r3,20(r3)
  8566ec:	1809883a 	mov	r4,r3
  8566f0:	103ee83a 	callr	r2
  8566f4:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  8566f8:	e0bfff17 	ldw	r2,-4(fp)
  8566fc:	1000031e 	bne	r2,zero,85670c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  856700:	e13ffd17 	ldw	r4,-12(fp)
  856704:	08565cc0 	call	8565cc <alt_alarm_stop>
  856708:	00000d06 	br	856740 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  85670c:	e0bffd17 	ldw	r2,-12(fp)
  856710:	10c00217 	ldw	r3,8(r2)
  856714:	e0bfff17 	ldw	r2,-4(fp)
  856718:	1887883a 	add	r3,r3,r2
  85671c:	e0bffd17 	ldw	r2,-12(fp)
  856720:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  856724:	e0bffd17 	ldw	r2,-12(fp)
  856728:	10c00217 	ldw	r3,8(r2)
  85672c:	d0a0ab17 	ldw	r2,-32084(gp)
  856730:	1880032e 	bgeu	r3,r2,856740 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  856734:	e0bffd17 	ldw	r2,-12(fp)
  856738:	00c00044 	movi	r3,1
  85673c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  856740:	e0bffe17 	ldw	r2,-8(fp)
  856744:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  856748:	e0fffd17 	ldw	r3,-12(fp)
  85674c:	d0a07904 	addi	r2,gp,-32284
  856750:	18bfcf1e 	bne	r3,r2,856690 <__alt_mem_epcs_flash_controller_0+0xff84d690>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  856754:	084b5900 	call	84b590 <OSTimeTick>
}
  856758:	0001883a 	nop
  85675c:	e037883a 	mov	sp,fp
  856760:	dfc00117 	ldw	ra,4(sp)
  856764:	df000017 	ldw	fp,0(sp)
  856768:	dec00204 	addi	sp,sp,8
  85676c:	f800283a 	ret

00856770 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  856770:	deffff04 	addi	sp,sp,-4
  856774:	df000015 	stw	fp,0(sp)
  856778:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  85677c:	000170fa 	wrctl	ienable,zero
}
  856780:	0001883a 	nop
  856784:	e037883a 	mov	sp,fp
  856788:	df000017 	ldw	fp,0(sp)
  85678c:	dec00104 	addi	sp,sp,4
  856790:	f800283a 	ret

00856794 <OSCtxSw>:

      /* 
       * Save the remaining registers to the stack. 
       */

      addi sp, sp, -44
  856794:	defff504 	addi	sp,sp,-44
      bltu  sp, et, .Lstack_overflow

#endif

#if OS_THREAD_SAFE_NEWLIB
      ldw r3, %gprel(_impure_ptr)(gp)   /* load the pointer */
  856798:	d0e03617 	ldw	r3,-32552(gp)
#endif /* OS_THREAD_SAFE_NEWLIB */

      ldw r4, %gprel(OSTCBCur)(gp)
  85679c:	d120a417 	ldw	r4,-32112(gp)

      stw ra,  0(sp)
  8567a0:	dfc00015 	stw	ra,0(sp)
      stw fp,  4(sp)
  8567a4:	df000115 	stw	fp,4(sp)
      stw r23, 8(sp)
  8567a8:	ddc00215 	stw	r23,8(sp)
      stw r22, 12(sp)
  8567ac:	dd800315 	stw	r22,12(sp)
      stw r21, 16(sp)
  8567b0:	dd400415 	stw	r21,16(sp)
      stw r20, 20(sp)
  8567b4:	dd000515 	stw	r20,20(sp)
      stw r19, 24(sp)
  8567b8:	dcc00615 	stw	r19,24(sp)
      stw r18, 28(sp)
  8567bc:	dc800715 	stw	r18,28(sp)
      stw r17, 32(sp)
  8567c0:	dc400815 	stw	r17,32(sp)
      stw r16, 36(sp)
  8567c4:	dc000915 	stw	r16,36(sp)
       * store the current value of _impure_ptr so it can be restored
       * later; _impure_ptr is asigned on a per task basis. It is used
       * by Newlib to achieve reentrancy.	
       */

      stw r3, 40(sp)                  /* save the impure pointer */
  8567c8:	d8c00a15 	stw	r3,40(sp)
      /* 
       * Save the current tasks stack pointer into the current tasks OS_TCB.
       * i.e. OSTCBCur->OSTCBStkPtr = sp;
       */

      stw sp, (r4)                  /* save the stack pointer (OSTCBStkPtr */
  8567cc:	26c00015 	stw	sp,0(r4)

      /*
       * Call the user definable OSTaskSWHook()
       */

      call OSTaskSwHook
  8567d0:	0856a080 	call	856a08 <OSTaskSwHook>
      /*
       * OSTCBCur = OSTCBHighRdy; 
       * OSPrioCur = OSPrioHighRdy; 
       */

      ldw r4, %gprel(OSTCBHighRdy)(gp)
  8567d4:	d1209f17 	ldw	r4,-32132(gp)
      ldb r5, %gprel(OSPrioHighRdy)(gp)
  8567d8:	d1609707 	ldb	r5,-32164(gp)

      stw r4, %gprel(OSTCBCur)(gp)     /* set the current task to be the new task */
  8567dc:	d120a415 	stw	r4,-32112(gp)
      stb r5, %gprel(OSPrioCur)(gp)    /* store the new task's priority as the current */
  8567e0:	d1609745 	stb	r5,-32163(gp)

      /*
       * Set the stack pointer to point to the new task's stack
       */

      ldw sp, (r4) /* the stack pointer is the first entry in the OS_TCB structure */
  8567e4:	26c00017 	ldw	sp,0(r4)
      /*
       * restore the value of _impure_ptr ; _impure_ptr is asigned on a 
       * per task basis. It is used by Newlib to achieve reentrancy.	
       */

      ldw r3, 40(sp)                  /* load the new impure pointer */
  8567e8:	d8c00a17 	ldw	r3,40(sp)

      /*
       * Restore the saved registers for the new task.
       */

      ldw ra,  0(sp)
  8567ec:	dfc00017 	ldw	ra,0(sp)
      ldw fp,  4(sp)
  8567f0:	df000117 	ldw	fp,4(sp)
      ldw r23, 8(sp)
  8567f4:	ddc00217 	ldw	r23,8(sp)
      ldw r22, 12(sp)
  8567f8:	dd800317 	ldw	r22,12(sp)
      ldw r21, 16(sp)
  8567fc:	dd400417 	ldw	r21,16(sp)
      ldw r20, 20(sp)
  856800:	dd000517 	ldw	r20,20(sp)
      ldw r19, 24(sp)
  856804:	dcc00617 	ldw	r19,24(sp)
      ldw r18, 28(sp)
  856808:	dc800717 	ldw	r18,28(sp)
      ldw r17, 32(sp)
  85680c:	dc400817 	ldw	r17,32(sp)
      ldw r16, 36(sp)
  856810:	dc000917 	ldw	r16,36(sp)

#if OS_THREAD_SAFE_NEWLIB

      stw r3, %gprel(_impure_ptr)(gp) /* update _impure_ptr */
  856814:	d0e03615 	stw	r3,-32552(gp)

      stw et, %gprel(alt_stack_limit_value)(gp)

#endif

      addi sp, sp, 44
  856818:	dec00b04 	addi	sp,sp,44

      /*
       * resume execution of the new task.
       */

      ret
  85681c:	f800283a 	ret

00856820 <OSStartHighRdy>:

      /*
       * disable interrupts so that the scheduler doesn't run while
       * we're initialising this task.
       */  
      rdctl r18, status
  856820:	0025303a 	rdctl	r18,status
      subi  r17, zero, 2   /* r17 = 0xfffffffe */
  856824:	047fff84 	movi	r17,-2
      and   r18, r18, r17
  856828:	9464703a 	and	r18,r18,r17
      wrctl status, r18
  85682c:	9001703a 	wrctl	status,r18

      /*
       * Call the user definable OSTaskSWHook()
       */

      call OSTaskSwHook
  856830:	0856a080 	call	856a08 <OSTaskSwHook>

      /* 
       * set OSRunning = TRUE.
       */

      movi r18, 1                    /* set r18 to the value 'TRUE' */
  856834:	04800044 	movi	r18,1
      stb r18, %gprel(OSRunning)(gp) /* save this to OSRunning */
  856838:	d4a09545 	stb	r18,-32171(gp)

      /*
       * start execution of the new task.
       */

      br 9b
  85683c:	003fe506 	br	8567d4 <__alt_mem_epcs_flash_controller_0+0xff84d7d4>

00856840 <OSStartTsk>:

OSStartTsk:
      /* This instruction is never executed.  Its here to make the
       * backtrace work right 
       */
      movi sp, 0
  856840:	06c00004 	movi	sp,0

      /* Enable interrupts */
      rdctl r2, status
  856844:	0005303a 	rdctl	r2,status
      ori   r2, r2, 0x1
  856848:	10800054 	ori	r2,r2,1
      wrctl status, r2
  85684c:	1001703a 	wrctl	status,r2

      ldw r2, 4(sp)
  856850:	d8800117 	ldw	r2,4(sp)
      ldw r4, 0(sp)
  856854:	d9000017 	ldw	r4,0(sp)

      addi sp, sp, 8
  856858:	dec00204 	addi	sp,sp,8

      callr r2
  85685c:	103ee83a 	callr	r2

      nop
  856860:	0001883a 	nop

00856864 <OSTaskStkInit>:
 *              been placed on the stack in the proper order.
 *
 ***********************************************************************************************/

OS_STK *OSTaskStkInit(void (*task)(void *pd), void *pdata, OS_STK *pstk, INT16U opt)
{
  856864:	defff704 	addi	sp,sp,-36
  856868:	dfc00815 	stw	ra,32(sp)
  85686c:	df000715 	stw	fp,28(sp)
  856870:	df000704 	addi	fp,sp,28
  856874:	e13ffc15 	stw	r4,-16(fp)
  856878:	e17ffd15 	stw	r5,-12(fp)
  85687c:	e1bffe15 	stw	r6,-8(fp)
  856880:	3805883a 	mov	r2,r7
  856884:	e0bfff0d 	sth	r2,-4(fp)
    * create and initialise the impure pointer used for Newlib thread local storage.
    * This is only done if the C library is being used in a thread safe mode. Otherwise
    * a single reent structure is used for all threads, which saves memory.
    */

   local_impure_ptr = (struct _reent*)((((INT32U)(pstk)) & ~0x3) - sizeof(struct _reent));
  856888:	e0fffe17 	ldw	r3,-8(fp)
  85688c:	00bfff04 	movi	r2,-4
  856890:	1884703a 	and	r2,r3,r2
  856894:	10bef704 	addi	r2,r2,-1060
  856898:	e0bff915 	stw	r2,-28(fp)

   _REENT_INIT_PTR (local_impure_ptr);
  85689c:	01810904 	movi	r6,1060
  8568a0:	000b883a 	mov	r5,zero
  8568a4:	e13ff917 	ldw	r4,-28(fp)
  8568a8:	0833d940 	call	833d94 <memset>
  8568ac:	e0bff917 	ldw	r2,-28(fp)
  8568b0:	10c0bb04 	addi	r3,r2,748
  8568b4:	e0bff917 	ldw	r2,-28(fp)
  8568b8:	10c00115 	stw	r3,4(r2)
  8568bc:	e0bff917 	ldw	r2,-28(fp)
  8568c0:	10c0d504 	addi	r3,r2,852
  8568c4:	e0bff917 	ldw	r2,-28(fp)
  8568c8:	10c00215 	stw	r3,8(r2)
  8568cc:	e0bff917 	ldw	r2,-28(fp)
  8568d0:	10c0ef04 	addi	r3,r2,956
  8568d4:	e0bff917 	ldw	r2,-28(fp)
  8568d8:	10c00315 	stw	r3,12(r2)
  8568dc:	e0fff917 	ldw	r3,-28(fp)
  8568e0:	008021b4 	movhi	r2,134
  8568e4:	10a7ea04 	addi	r2,r2,-24664
  8568e8:	18800d15 	stw	r2,52(r3)
  8568ec:	e0bff917 	ldw	r2,-28(fp)
  8568f0:	00c00044 	movi	r3,1
  8568f4:	10c02915 	stw	r3,164(r2)
  8568f8:	10002a15 	stw	zero,168(r2)
  8568fc:	e0bff917 	ldw	r2,-28(fp)
  856900:	00ccc384 	movi	r3,13070
  856904:	10c02b0d 	sth	r3,172(r2)
  856908:	e0bff917 	ldw	r2,-28(fp)
  85690c:	00eaf344 	movi	r3,-21555
  856910:	10c02b8d 	sth	r3,174(r2)
  856914:	e0bff917 	ldw	r2,-28(fp)
  856918:	00c48d04 	movi	r3,4660
  85691c:	10c02c0d 	sth	r3,176(r2)
  856920:	e0bff917 	ldw	r2,-28(fp)
  856924:	00f99b44 	movi	r3,-6547
  856928:	10c02c8d 	sth	r3,178(r2)
  85692c:	e0bff917 	ldw	r2,-28(fp)
  856930:	00f7bb04 	movi	r3,-8468
  856934:	10c02d0d 	sth	r3,180(r2)
  856938:	e0bff917 	ldw	r2,-28(fp)
  85693c:	00c00144 	movi	r3,5
  856940:	10c02d8d 	sth	r3,182(r2)
  856944:	e0bff917 	ldw	r2,-28(fp)
  856948:	00c002c4 	movi	r3,11
  85694c:	10c02e0d 	sth	r3,184(r2)
   /* 
    * create a stack frame at the top of the stack (leaving space for the 
    * reentrant data structure).
    */

   frame_pointer = (INT32U*) local_impure_ptr;
  856950:	e0bff917 	ldw	r2,-28(fp)
  856954:	e0bffa15 	stw	r2,-24(fp)
#else
   frame_pointer =   (INT32U*) (((INT32U)(pstk)) & ~0x3);
#endif /* OS_THREAD_SAFE_NEWLIB */
   stk = frame_pointer - 13;
  856958:	e0bffa17 	ldw	r2,-24(fp)
  85695c:	10bff304 	addi	r2,r2,-52
  856960:	e0bffb15 	stw	r2,-20(fp)

   /* Now fill the stack frame. */

   stk[12] = (INT32U)task;            /* task address (ra) */
  856964:	e0bffb17 	ldw	r2,-20(fp)
  856968:	10800c04 	addi	r2,r2,48
  85696c:	e0fffc17 	ldw	r3,-16(fp)
  856970:	10c00015 	stw	r3,0(r2)
   stk[11] = (INT32U) pdata;          /* first register argument (r4) */
  856974:	e0bffb17 	ldw	r2,-20(fp)
  856978:	10800b04 	addi	r2,r2,44
  85697c:	e0fffd17 	ldw	r3,-12(fp)
  856980:	10c00015 	stw	r3,0(r2)

#if OS_THREAD_SAFE_NEWLIB
   stk[10] = (INT32U) local_impure_ptr; /* value of _impure_ptr for this thread */
  856984:	e0bffb17 	ldw	r2,-20(fp)
  856988:	10800a04 	addi	r2,r2,40
  85698c:	e0fff917 	ldw	r3,-28(fp)
  856990:	10c00015 	stw	r3,0(r2)
#endif /* OS_THREAD_SAFE_NEWLIB */
   stk[0]  = ((INT32U)&OSStartTsk) + 4;/* exception return address (ea) */  
  856994:	00802174 	movhi	r2,133
  856998:	109a1004 	addi	r2,r2,26688
  85699c:	10c00104 	addi	r3,r2,4
  8569a0:	e0bffb17 	ldw	r2,-20(fp)
  8569a4:	10c00015 	stw	r3,0(r2)
    */
   __asm__ (".set OSTCBNext_OFFSET,%0" :: "i" (offsetof(OS_TCB, OSTCBNext)));
   __asm__ (".set OSTCBPrio_OFFSET,%0" :: "i" (offsetof(OS_TCB, OSTCBPrio)));
   __asm__ (".set OSTCBStkPtr_OFFSET,%0" :: "i" (offsetof(OS_TCB, OSTCBStkPtr)));
  
   return((OS_STK *)stk);
  8569a8:	e0bffb17 	ldw	r2,-20(fp)
}
  8569ac:	e037883a 	mov	sp,fp
  8569b0:	dfc00117 	ldw	ra,4(sp)
  8569b4:	df000017 	ldw	fp,0(sp)
  8569b8:	dec00204 	addi	sp,sp,8
  8569bc:	f800283a 	ret

008569c0 <OSTaskCreateHook>:
*
* Note(s)    : 1) Interrupts are disabled during this call.
*********************************************************************************************************
*/
void OSTaskCreateHook (OS_TCB *ptcb)
{
  8569c0:	defffe04 	addi	sp,sp,-8
  8569c4:	df000115 	stw	fp,4(sp)
  8569c8:	df000104 	addi	fp,sp,4
  8569cc:	e13fff15 	stw	r4,-4(fp)
    ptcb = ptcb;                       /* Prevent compiler warning */
}
  8569d0:	0001883a 	nop
  8569d4:	e037883a 	mov	sp,fp
  8569d8:	df000017 	ldw	fp,0(sp)
  8569dc:	dec00104 	addi	sp,sp,4
  8569e0:	f800283a 	ret

008569e4 <OSTaskDelHook>:
*
* Note(s)    : 1) Interrupts are disabled during this call.
*********************************************************************************************************
*/
void OSTaskDelHook (OS_TCB *ptcb)
{
  8569e4:	defffe04 	addi	sp,sp,-8
  8569e8:	df000115 	stw	fp,4(sp)
  8569ec:	df000104 	addi	fp,sp,4
  8569f0:	e13fff15 	stw	r4,-4(fp)
    ptcb = ptcb;                       /* Prevent compiler warning                                     */
}
  8569f4:	0001883a 	nop
  8569f8:	e037883a 	mov	sp,fp
  8569fc:	df000017 	ldw	fp,0(sp)
  856a00:	dec00104 	addi	sp,sp,4
  856a04:	f800283a 	ret

00856a08 <OSTaskSwHook>:
*                 will be 'switched in' (i.e. the highest priority task) and, 'OSTCBCur' points to the
*                 task being switched out (i.e. the preempted task).
*********************************************************************************************************
*/
void OSTaskSwHook (void)
{
  856a08:	deffff04 	addi	sp,sp,-4
  856a0c:	df000015 	stw	fp,0(sp)
  856a10:	d839883a 	mov	fp,sp
}
  856a14:	0001883a 	nop
  856a18:	e037883a 	mov	sp,fp
  856a1c:	df000017 	ldw	fp,0(sp)
  856a20:	dec00104 	addi	sp,sp,4
  856a24:	f800283a 	ret

00856a28 <OSTaskStatHook>:
*
* Arguments  : none
*********************************************************************************************************
*/
void OSTaskStatHook (void)
{
  856a28:	deffff04 	addi	sp,sp,-4
  856a2c:	df000015 	stw	fp,0(sp)
  856a30:	d839883a 	mov	fp,sp
}
  856a34:	0001883a 	nop
  856a38:	e037883a 	mov	sp,fp
  856a3c:	df000017 	ldw	fp,0(sp)
  856a40:	dec00104 	addi	sp,sp,4
  856a44:	f800283a 	ret

00856a48 <OSTimeTickHook>:
#ifdef ALT_INICHE
void cticks_hook(void);
#endif

void OSTimeTickHook (void)
{
  856a48:	deffff04 	addi	sp,sp,-4
  856a4c:	df000015 	stw	fp,0(sp)
  856a50:	d839883a 	mov	fp,sp
    
#ifdef ALT_INICHE
    /* Service the Interniche timer */
    cticks_hook();
#endif
}
  856a54:	0001883a 	nop
  856a58:	e037883a 	mov	sp,fp
  856a5c:	df000017 	ldw	fp,0(sp)
  856a60:	dec00104 	addi	sp,sp,4
  856a64:	f800283a 	ret

00856a68 <OSInitHookBegin>:

void OSInitHookBegin(void)
{
  856a68:	deffff04 	addi	sp,sp,-4
  856a6c:	df000015 	stw	fp,0(sp)
  856a70:	d839883a 	mov	fp,sp
#if OS_TMR_EN > 0
    OSTmrCtr = 0;
#endif
}
  856a74:	0001883a 	nop
  856a78:	e037883a 	mov	sp,fp
  856a7c:	df000017 	ldw	fp,0(sp)
  856a80:	dec00104 	addi	sp,sp,4
  856a84:	f800283a 	ret

00856a88 <OSInitHookEnd>:

void OSInitHookEnd(void)
{
  856a88:	deffff04 	addi	sp,sp,-4
  856a8c:	df000015 	stw	fp,0(sp)
  856a90:	d839883a 	mov	fp,sp
}
  856a94:	0001883a 	nop
  856a98:	e037883a 	mov	sp,fp
  856a9c:	df000017 	ldw	fp,0(sp)
  856aa0:	dec00104 	addi	sp,sp,4
  856aa4:	f800283a 	ret

00856aa8 <OSTaskIdleHook>:

void OSTaskIdleHook(void)
{
  856aa8:	deffff04 	addi	sp,sp,-4
  856aac:	df000015 	stw	fp,0(sp)
  856ab0:	d839883a 	mov	fp,sp
}
  856ab4:	0001883a 	nop
  856ab8:	e037883a 	mov	sp,fp
  856abc:	df000017 	ldw	fp,0(sp)
  856ac0:	dec00104 	addi	sp,sp,4
  856ac4:	f800283a 	ret

00856ac8 <OSTCBInitHook>:

void OSTCBInitHook(OS_TCB *ptcb)
{
  856ac8:	defffe04 	addi	sp,sp,-8
  856acc:	df000115 	stw	fp,4(sp)
  856ad0:	df000104 	addi	fp,sp,4
  856ad4:	e13fff15 	stw	r4,-4(fp)
}
  856ad8:	0001883a 	nop
  856adc:	e037883a 	mov	sp,fp
  856ae0:	df000017 	ldw	fp,0(sp)
  856ae4:	dec00104 	addi	sp,sp,4
  856ae8:	f800283a 	ret

00856aec <alt_avalon_spi_command>:

int alt_avalon_spi_command(alt_u32 base, alt_u32 slave,
                           alt_u32 write_length, const alt_u8 * write_data,
                           alt_u32 read_length, alt_u8 * read_data,
                           alt_u32 flags)
{
  856aec:	defff404 	addi	sp,sp,-48
  856af0:	df000b15 	stw	fp,44(sp)
  856af4:	df000b04 	addi	fp,sp,44
  856af8:	e13ffc15 	stw	r4,-16(fp)
  856afc:	e17ffd15 	stw	r5,-12(fp)
  856b00:	e1bffe15 	stw	r6,-8(fp)
  856b04:	e1ffff15 	stw	r7,-4(fp)
  const alt_u8 * write_end = write_data + write_length;
  856b08:	e0ffff17 	ldw	r3,-4(fp)
  856b0c:	e0bffe17 	ldw	r2,-8(fp)
  856b10:	1885883a 	add	r2,r3,r2
  856b14:	e0bff815 	stw	r2,-32(fp)
  alt_u8 * read_end = read_data + read_length;
  856b18:	e0c00217 	ldw	r3,8(fp)
  856b1c:	e0800117 	ldw	r2,4(fp)
  856b20:	1885883a 	add	r2,r3,r2
  856b24:	e0bff915 	stw	r2,-28(fp)

  alt_u32 write_zeros = read_length;
  856b28:	e0800117 	ldw	r2,4(fp)
  856b2c:	e0bff515 	stw	r2,-44(fp)
  alt_u32 read_ignore = write_length;
  856b30:	e0bffe17 	ldw	r2,-8(fp)
  856b34:	e0bff615 	stw	r2,-40(fp)

  /* We must not send more than two bytes to the target before it has
   * returned any as otherwise it will overflow. */
  /* Unfortunately the hardware does not seem to work with credits > 1,
   * leave it at 1 for now. */
  alt_32 credits = 1;
  856b38:	00800044 	movi	r2,1
  856b3c:	e0bff715 	stw	r2,-36(fp)
  /* Warning: this function is not currently safe if called in a multi-threaded
   * environment, something above must perform locking to make it safe if more
   * than one thread intends to use it.
   */

  IOWR_ALTERA_AVALON_SPI_SLAVE_SEL(base, 1 << slave);
  856b40:	e0bffc17 	ldw	r2,-16(fp)
  856b44:	10800504 	addi	r2,r2,20
  856b48:	1009883a 	mov	r4,r2
  856b4c:	00c00044 	movi	r3,1
  856b50:	e0bffd17 	ldw	r2,-12(fp)
  856b54:	1884983a 	sll	r2,r3,r2
  856b58:	20800035 	stwio	r2,0(r4)
  
  /* Set the SSO bit (force chipselect) only if the toggle flag is not set */
  if ((flags & ALT_AVALON_SPI_COMMAND_TOGGLE_SS_N) == 0) {
  856b5c:	e0800317 	ldw	r2,12(fp)
  856b60:	1080008c 	andi	r2,r2,2
  856b64:	1000051e 	bne	r2,zero,856b7c <alt_avalon_spi_command+0x90>
    IOWR_ALTERA_AVALON_SPI_CONTROL(base, ALTERA_AVALON_SPI_CONTROL_SSO_MSK);
  856b68:	e0bffc17 	ldw	r2,-16(fp)
  856b6c:	10800304 	addi	r2,r2,12
  856b70:	1007883a 	mov	r3,r2
  856b74:	00810004 	movi	r2,1024
  856b78:	18800035 	stwio	r2,0(r3)
  /*
   * Discard any stale data present in the RXDATA register, in case
   * previous communication was interrupted and stale data was left
   * behind.
   */
  IORD_ALTERA_AVALON_SPI_RXDATA(base);
  856b7c:	e0bffc17 	ldw	r2,-16(fp)
  856b80:	10800037 	ldwio	r2,0(r2)
  for ( ; ; )
  {
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
  856b84:	e0bffc17 	ldw	r2,-16(fp)
  856b88:	10800204 	addi	r2,r2,8
  856b8c:	10800037 	ldwio	r2,0(r2)
  856b90:	e0bffa15 	stw	r2,-24(fp)
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
  856b94:	e0bffa17 	ldw	r2,-24(fp)
  856b98:	1080100c 	andi	r2,r2,64
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);
  856b9c:	10000226 	beq	r2,zero,856ba8 <alt_avalon_spi_command+0xbc>
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
  856ba0:	e0bff717 	ldw	r2,-36(fp)
  856ba4:	1000031e 	bne	r2,zero,856bb4 <alt_avalon_spi_command+0xc8>
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);
  856ba8:	e0bffa17 	ldw	r2,-24(fp)
  856bac:	1080200c 	andi	r2,r2,128
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
  856bb0:	103ff426 	beq	r2,zero,856b84 <__alt_mem_epcs_flash_controller_0+0xff84db84>
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);

    if ((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) != 0 && credits > 0)
  856bb4:	e0bffa17 	ldw	r2,-24(fp)
  856bb8:	1080100c 	andi	r2,r2,64
  856bbc:	10001e26 	beq	r2,zero,856c38 <alt_avalon_spi_command+0x14c>
  856bc0:	e0bff717 	ldw	r2,-36(fp)
  856bc4:	00801c0e 	bge	zero,r2,856c38 <alt_avalon_spi_command+0x14c>
    {
      credits--;
  856bc8:	e0bff717 	ldw	r2,-36(fp)
  856bcc:	10bfffc4 	addi	r2,r2,-1
  856bd0:	e0bff715 	stw	r2,-36(fp)

      if (write_data < write_end)
  856bd4:	e0ffff17 	ldw	r3,-4(fp)
  856bd8:	e0bff817 	ldw	r2,-32(fp)
  856bdc:	18800a2e 	bgeu	r3,r2,856c08 <alt_avalon_spi_command+0x11c>
        IOWR_ALTERA_AVALON_SPI_TXDATA(base, *write_data++);
  856be0:	e0bffc17 	ldw	r2,-16(fp)
  856be4:	10800104 	addi	r2,r2,4
  856be8:	1009883a 	mov	r4,r2
  856bec:	e0bfff17 	ldw	r2,-4(fp)
  856bf0:	10c00044 	addi	r3,r2,1
  856bf4:	e0ffff15 	stw	r3,-4(fp)
  856bf8:	10800003 	ldbu	r2,0(r2)
  856bfc:	10803fcc 	andi	r2,r2,255
  856c00:	20800035 	stwio	r2,0(r4)
  856c04:	00000c06 	br	856c38 <alt_avalon_spi_command+0x14c>
      else if (write_zeros > 0)
  856c08:	e0bff517 	ldw	r2,-44(fp)
  856c0c:	10000826 	beq	r2,zero,856c30 <alt_avalon_spi_command+0x144>
      {
        write_zeros--;
  856c10:	e0bff517 	ldw	r2,-44(fp)
  856c14:	10bfffc4 	addi	r2,r2,-1
  856c18:	e0bff515 	stw	r2,-44(fp)
        IOWR_ALTERA_AVALON_SPI_TXDATA(base, 0);
  856c1c:	e0bffc17 	ldw	r2,-16(fp)
  856c20:	10800104 	addi	r2,r2,4
  856c24:	0007883a 	mov	r3,zero
  856c28:	10c00035 	stwio	r3,0(r2)
  856c2c:	00000206 	br	856c38 <alt_avalon_spi_command+0x14c>
      }
      else
        credits = -1024;
  856c30:	00bf0004 	movi	r2,-1024
  856c34:	e0bff715 	stw	r2,-36(fp)
    };

    if ((status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) != 0)
  856c38:	e0bffa17 	ldw	r2,-24(fp)
  856c3c:	1080200c 	andi	r2,r2,128
  856c40:	103fd026 	beq	r2,zero,856b84 <__alt_mem_epcs_flash_controller_0+0xff84db84>
    {
      alt_u32 rxdata = IORD_ALTERA_AVALON_SPI_RXDATA(base);
  856c44:	e0bffc17 	ldw	r2,-16(fp)
  856c48:	10800037 	ldwio	r2,0(r2)
  856c4c:	e0bffb15 	stw	r2,-20(fp)

      if (read_ignore > 0)
  856c50:	e0bff617 	ldw	r2,-40(fp)
  856c54:	10000426 	beq	r2,zero,856c68 <alt_avalon_spi_command+0x17c>
        read_ignore--;
  856c58:	e0bff617 	ldw	r2,-40(fp)
  856c5c:	10bfffc4 	addi	r2,r2,-1
  856c60:	e0bff615 	stw	r2,-40(fp)
  856c64:	00000506 	br	856c7c <alt_avalon_spi_command+0x190>
      else
        *read_data++ = (alt_u8)rxdata;
  856c68:	e0800217 	ldw	r2,8(fp)
  856c6c:	10c00044 	addi	r3,r2,1
  856c70:	e0c00215 	stw	r3,8(fp)
  856c74:	e0fffb17 	ldw	r3,-20(fp)
  856c78:	10c00005 	stb	r3,0(r2)
      credits++;
  856c7c:	e0bff717 	ldw	r2,-36(fp)
  856c80:	10800044 	addi	r2,r2,1
  856c84:	e0bff715 	stw	r2,-36(fp)

      if (read_ignore == 0 && read_data == read_end)
  856c88:	e0bff617 	ldw	r2,-40(fp)
  856c8c:	103fbd1e 	bne	r2,zero,856b84 <__alt_mem_epcs_flash_controller_0+0xff84db84>
  856c90:	e0c00217 	ldw	r3,8(fp)
  856c94:	e0bff917 	ldw	r2,-28(fp)
  856c98:	18bfba1e 	bne	r3,r2,856b84 <__alt_mem_epcs_flash_controller_0+0xff84db84>
  }

  /* Wait until the interface has finished transmitting */
  do
  {
    status = IORD_ALTERA_AVALON_SPI_STATUS(base);
  856c9c:	e0bffc17 	ldw	r2,-16(fp)
  856ca0:	10800204 	addi	r2,r2,8
  856ca4:	10800037 	ldwio	r2,0(r2)
  856ca8:	e0bffa15 	stw	r2,-24(fp)
  }
  while ((status & ALTERA_AVALON_SPI_STATUS_TMT_MSK) == 0);
  856cac:	e0bffa17 	ldw	r2,-24(fp)
  856cb0:	1080080c 	andi	r2,r2,32
  856cb4:	103ff926 	beq	r2,zero,856c9c <__alt_mem_epcs_flash_controller_0+0xff84dc9c>

  /* Clear SSO (release chipselect) unless the caller is going to
   * keep using this chip
   */
  if ((flags & ALT_AVALON_SPI_COMMAND_MERGE) == 0)
  856cb8:	e0800317 	ldw	r2,12(fp)
  856cbc:	1080004c 	andi	r2,r2,1
  856cc0:	1000041e 	bne	r2,zero,856cd4 <alt_avalon_spi_command+0x1e8>
    IOWR_ALTERA_AVALON_SPI_CONTROL(base, 0);
  856cc4:	e0bffc17 	ldw	r2,-16(fp)
  856cc8:	10800304 	addi	r2,r2,12
  856ccc:	0007883a 	mov	r3,zero
  856cd0:	10c00035 	stwio	r3,0(r2)

  return read_length;
  856cd4:	e0800117 	ldw	r2,4(fp)
}
  856cd8:	e037883a 	mov	sp,fp
  856cdc:	df000017 	ldw	fp,0(sp)
  856ce0:	dec00104 	addi	sp,sp,4
  856ce4:	f800283a 	ret

00856ce8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  856ce8:	defffa04 	addi	sp,sp,-24
  856cec:	dfc00515 	stw	ra,20(sp)
  856cf0:	df000415 	stw	fp,16(sp)
  856cf4:	df000404 	addi	fp,sp,16
  856cf8:	e13ffe15 	stw	r4,-8(fp)
  856cfc:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  856d00:	e0bfff17 	ldw	r2,-4(fp)
  856d04:	10800017 	ldw	r2,0(r2)
  856d08:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  856d0c:	e13ffe17 	ldw	r4,-8(fp)
  856d10:	08351100 	call	835110 <strlen>
  856d14:	10800044 	addi	r2,r2,1
  856d18:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  856d1c:	00000d06 	br	856d54 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  856d20:	e0bffc17 	ldw	r2,-16(fp)
  856d24:	10800217 	ldw	r2,8(r2)
  856d28:	e0fffd17 	ldw	r3,-12(fp)
  856d2c:	180d883a 	mov	r6,r3
  856d30:	e17ffe17 	ldw	r5,-8(fp)
  856d34:	1009883a 	mov	r4,r2
  856d38:	0856f880 	call	856f88 <memcmp>
  856d3c:	1000021e 	bne	r2,zero,856d48 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  856d40:	e0bffc17 	ldw	r2,-16(fp)
  856d44:	00000706 	br	856d64 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  856d48:	e0bffc17 	ldw	r2,-16(fp)
  856d4c:	10800017 	ldw	r2,0(r2)
  856d50:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  856d54:	e0fffc17 	ldw	r3,-16(fp)
  856d58:	e0bfff17 	ldw	r2,-4(fp)
  856d5c:	18bff01e 	bne	r3,r2,856d20 <__alt_mem_epcs_flash_controller_0+0xff84dd20>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  856d60:	0005883a 	mov	r2,zero
}
  856d64:	e037883a 	mov	sp,fp
  856d68:	dfc00117 	ldw	ra,4(sp)
  856d6c:	df000017 	ldw	fp,0(sp)
  856d70:	dec00204 	addi	sp,sp,8
  856d74:	f800283a 	ret

00856d78 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  856d78:	defffb04 	addi	sp,sp,-20
  856d7c:	dfc00415 	stw	ra,16(sp)
  856d80:	df000315 	stw	fp,12(sp)
  856d84:	df000304 	addi	fp,sp,12
  856d88:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  856d8c:	d0a03e17 	ldw	r2,-32520(gp)
  856d90:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  856d94:	00003106 	br	856e5c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  856d98:	e0bffd17 	ldw	r2,-12(fp)
  856d9c:	10800217 	ldw	r2,8(r2)
  856da0:	1009883a 	mov	r4,r2
  856da4:	08351100 	call	835110 <strlen>
  856da8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  856dac:	e0bffd17 	ldw	r2,-12(fp)
  856db0:	10c00217 	ldw	r3,8(r2)
  856db4:	e0bffe17 	ldw	r2,-8(fp)
  856db8:	10bfffc4 	addi	r2,r2,-1
  856dbc:	1885883a 	add	r2,r3,r2
  856dc0:	10800003 	ldbu	r2,0(r2)
  856dc4:	10803fcc 	andi	r2,r2,255
  856dc8:	1080201c 	xori	r2,r2,128
  856dcc:	10bfe004 	addi	r2,r2,-128
  856dd0:	10800bd8 	cmpnei	r2,r2,47
  856dd4:	1000031e 	bne	r2,zero,856de4 <alt_find_file+0x6c>
    {
      len -= 1;
  856dd8:	e0bffe17 	ldw	r2,-8(fp)
  856ddc:	10bfffc4 	addi	r2,r2,-1
  856de0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  856de4:	e0bffe17 	ldw	r2,-8(fp)
  856de8:	e0ffff17 	ldw	r3,-4(fp)
  856dec:	1885883a 	add	r2,r3,r2
  856df0:	10800003 	ldbu	r2,0(r2)
  856df4:	10803fcc 	andi	r2,r2,255
  856df8:	1080201c 	xori	r2,r2,128
  856dfc:	10bfe004 	addi	r2,r2,-128
  856e00:	10800be0 	cmpeqi	r2,r2,47
  856e04:	1000081e 	bne	r2,zero,856e28 <alt_find_file+0xb0>
  856e08:	e0bffe17 	ldw	r2,-8(fp)
  856e0c:	e0ffff17 	ldw	r3,-4(fp)
  856e10:	1885883a 	add	r2,r3,r2
  856e14:	10800003 	ldbu	r2,0(r2)
  856e18:	10803fcc 	andi	r2,r2,255
  856e1c:	1080201c 	xori	r2,r2,128
  856e20:	10bfe004 	addi	r2,r2,-128
  856e24:	10000a1e 	bne	r2,zero,856e50 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  856e28:	e0bffd17 	ldw	r2,-12(fp)
  856e2c:	10800217 	ldw	r2,8(r2)
  856e30:	e0fffe17 	ldw	r3,-8(fp)
  856e34:	180d883a 	mov	r6,r3
  856e38:	e17fff17 	ldw	r5,-4(fp)
  856e3c:	1009883a 	mov	r4,r2
  856e40:	0856f880 	call	856f88 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  856e44:	1000021e 	bne	r2,zero,856e50 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  856e48:	e0bffd17 	ldw	r2,-12(fp)
  856e4c:	00000706 	br	856e6c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  856e50:	e0bffd17 	ldw	r2,-12(fp)
  856e54:	10800017 	ldw	r2,0(r2)
  856e58:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  856e5c:	e0fffd17 	ldw	r3,-12(fp)
  856e60:	d0a03e04 	addi	r2,gp,-32520
  856e64:	18bfcc1e 	bne	r3,r2,856d98 <__alt_mem_epcs_flash_controller_0+0xff84dd98>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  856e68:	0005883a 	mov	r2,zero
}
  856e6c:	e037883a 	mov	sp,fp
  856e70:	dfc00117 	ldw	ra,4(sp)
  856e74:	df000017 	ldw	fp,0(sp)
  856e78:	dec00204 	addi	sp,sp,8
  856e7c:	f800283a 	ret

00856e80 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  856e80:	defff804 	addi	sp,sp,-32
  856e84:	dfc00715 	stw	ra,28(sp)
  856e88:	df000615 	stw	fp,24(sp)
  856e8c:	dc000515 	stw	r16,20(sp)
  856e90:	df000604 	addi	fp,sp,24
  856e94:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
  856e98:	00bffa04 	movi	r2,-24
  856e9c:	e0bffb15 	stw	r2,-20(fp)
  /* 
   * Take the alt_fd_list_lock semaphore in order to avoid races when 
   * accessing the file descriptor pool.
   */
  
  ALT_SEM_PEND(alt_fd_list_lock, 0);
  856ea0:	d0a08c17 	ldw	r2,-32208(gp)
  856ea4:	e0bffc15 	stw	r2,-16(fp)
  856ea8:	e03ffd0d 	sth	zero,-12(fp)

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_pend (OS_EVENT* sem, 
                  INT16U timeout)
{
  INT8U err;
  OSSemPend (sem, timeout, &err);
  856eac:	e0bffd0b 	ldhu	r2,-12(fp)
  856eb0:	e0fffd84 	addi	r3,fp,-10
  856eb4:	180d883a 	mov	r6,r3
  856eb8:	100b883a 	mov	r5,r2
  856ebc:	e13ffc17 	ldw	r4,-16(fp)
  856ec0:	084fde00 	call	84fde0 <OSSemPend>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  856ec4:	e03ffa15 	stw	zero,-24(fp)
  856ec8:	00001d06 	br	856f40 <alt_get_fd+0xc0>
  {
    if (!alt_fd_list[i].dev)
  856ecc:	040021b4 	movhi	r16,134
  856ed0:	842a1e04 	addi	r16,r16,-22408
  856ed4:	e0bffa17 	ldw	r2,-24(fp)
  856ed8:	01400304 	movi	r5,12
  856edc:	1009883a 	mov	r4,r2
  856ee0:	08301e80 	call	8301e8 <__mulsi3>
  856ee4:	8085883a 	add	r2,r16,r2
  856ee8:	10800017 	ldw	r2,0(r2)
  856eec:	1000111e 	bne	r2,zero,856f34 <alt_get_fd+0xb4>
    {
      alt_fd_list[i].dev = dev;
  856ef0:	040021b4 	movhi	r16,134
  856ef4:	842a1e04 	addi	r16,r16,-22408
  856ef8:	e0bffa17 	ldw	r2,-24(fp)
  856efc:	01400304 	movi	r5,12
  856f00:	1009883a 	mov	r4,r2
  856f04:	08301e80 	call	8301e8 <__mulsi3>
  856f08:	8085883a 	add	r2,r16,r2
  856f0c:	e0fffe17 	ldw	r3,-8(fp)
  856f10:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  856f14:	d0e04217 	ldw	r3,-32504(gp)
  856f18:	e0bffa17 	ldw	r2,-24(fp)
  856f1c:	1880020e 	bge	r3,r2,856f28 <alt_get_fd+0xa8>
      {
        alt_max_fd = i;
  856f20:	e0bffa17 	ldw	r2,-24(fp)
  856f24:	d0a04215 	stw	r2,-32504(gp)
      }
      rc = i;
  856f28:	e0bffa17 	ldw	r2,-24(fp)
  856f2c:	e0bffb15 	stw	r2,-20(fp)
      goto alt_get_fd_exit;
  856f30:	00000606 	br	856f4c <alt_get_fd+0xcc>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  856f34:	e0bffa17 	ldw	r2,-24(fp)
  856f38:	10800044 	addi	r2,r2,1
  856f3c:	e0bffa15 	stw	r2,-24(fp)
  856f40:	e0bffa17 	ldw	r2,-24(fp)
  856f44:	10800810 	cmplti	r2,r2,32
  856f48:	103fe01e 	bne	r2,zero,856ecc <__alt_mem_epcs_flash_controller_0+0xff84decc>
  /*
   * Release the alt_fd_list_lock semaphore now that we are done with the
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);
  856f4c:	d0a08c17 	ldw	r2,-32208(gp)
  856f50:	1009883a 	mov	r4,r2
  856f54:	08501580 	call	850158 <OSSemPost>

  return rc;
  856f58:	e0bffb17 	ldw	r2,-20(fp)
}
  856f5c:	e6ffff04 	addi	sp,fp,-4
  856f60:	dfc00217 	ldw	ra,8(sp)
  856f64:	df000117 	ldw	fp,4(sp)
  856f68:	dc000017 	ldw	r16,0(sp)
  856f6c:	dec00304 	addi	sp,sp,12
  856f70:	f800283a 	ret

00856f74 <atexit>:
  856f74:	200b883a 	mov	r5,r4
  856f78:	000f883a 	mov	r7,zero
  856f7c:	000d883a 	mov	r6,zero
  856f80:	0009883a 	mov	r4,zero
  856f84:	08570041 	jmpi	857004 <__register_exitproc>

00856f88 <memcmp>:
  856f88:	01c000c4 	movi	r7,3
  856f8c:	3980192e 	bgeu	r7,r6,856ff4 <memcmp+0x6c>
  856f90:	2144b03a 	or	r2,r4,r5
  856f94:	11c4703a 	and	r2,r2,r7
  856f98:	10000f26 	beq	r2,zero,856fd8 <memcmp+0x50>
  856f9c:	20800003 	ldbu	r2,0(r4)
  856fa0:	28c00003 	ldbu	r3,0(r5)
  856fa4:	10c0151e 	bne	r2,r3,856ffc <memcmp+0x74>
  856fa8:	31bfff84 	addi	r6,r6,-2
  856fac:	01ffffc4 	movi	r7,-1
  856fb0:	00000406 	br	856fc4 <memcmp+0x3c>
  856fb4:	20800003 	ldbu	r2,0(r4)
  856fb8:	28c00003 	ldbu	r3,0(r5)
  856fbc:	31bfffc4 	addi	r6,r6,-1
  856fc0:	10c00e1e 	bne	r2,r3,856ffc <memcmp+0x74>
  856fc4:	21000044 	addi	r4,r4,1
  856fc8:	29400044 	addi	r5,r5,1
  856fcc:	31fff91e 	bne	r6,r7,856fb4 <__alt_mem_epcs_flash_controller_0+0xff84dfb4>
  856fd0:	0005883a 	mov	r2,zero
  856fd4:	f800283a 	ret
  856fd8:	20c00017 	ldw	r3,0(r4)
  856fdc:	28800017 	ldw	r2,0(r5)
  856fe0:	18bfee1e 	bne	r3,r2,856f9c <__alt_mem_epcs_flash_controller_0+0xff84df9c>
  856fe4:	31bfff04 	addi	r6,r6,-4
  856fe8:	21000104 	addi	r4,r4,4
  856fec:	29400104 	addi	r5,r5,4
  856ff0:	39bff936 	bltu	r7,r6,856fd8 <__alt_mem_epcs_flash_controller_0+0xff84dfd8>
  856ff4:	303fe91e 	bne	r6,zero,856f9c <__alt_mem_epcs_flash_controller_0+0xff84df9c>
  856ff8:	003ff506 	br	856fd0 <__alt_mem_epcs_flash_controller_0+0xff84dfd0>
  856ffc:	10c5c83a 	sub	r2,r2,r3
  857000:	f800283a 	ret

00857004 <__register_exitproc>:
  857004:	defffa04 	addi	sp,sp,-24
  857008:	dc000315 	stw	r16,12(sp)
  85700c:	040021b4 	movhi	r16,134
  857010:	842f7304 	addi	r16,r16,-16948
  857014:	80c00017 	ldw	r3,0(r16)
  857018:	dc400415 	stw	r17,16(sp)
  85701c:	dfc00515 	stw	ra,20(sp)
  857020:	18805217 	ldw	r2,328(r3)
  857024:	2023883a 	mov	r17,r4
  857028:	10003726 	beq	r2,zero,857108 <__register_exitproc+0x104>
  85702c:	10c00117 	ldw	r3,4(r2)
  857030:	010007c4 	movi	r4,31
  857034:	20c00e16 	blt	r4,r3,857070 <__register_exitproc+0x6c>
  857038:	1a000044 	addi	r8,r3,1
  85703c:	8800221e 	bne	r17,zero,8570c8 <__register_exitproc+0xc4>
  857040:	18c00084 	addi	r3,r3,2
  857044:	18c7883a 	add	r3,r3,r3
  857048:	18c7883a 	add	r3,r3,r3
  85704c:	12000115 	stw	r8,4(r2)
  857050:	10c7883a 	add	r3,r2,r3
  857054:	19400015 	stw	r5,0(r3)
  857058:	0005883a 	mov	r2,zero
  85705c:	dfc00517 	ldw	ra,20(sp)
  857060:	dc400417 	ldw	r17,16(sp)
  857064:	dc000317 	ldw	r16,12(sp)
  857068:	dec00604 	addi	sp,sp,24
  85706c:	f800283a 	ret
  857070:	008020f4 	movhi	r2,131
  857074:	108ccd04 	addi	r2,r2,13108
  857078:	10002626 	beq	r2,zero,857114 <__register_exitproc+0x110>
  85707c:	01006404 	movi	r4,400
  857080:	d9400015 	stw	r5,0(sp)
  857084:	d9800115 	stw	r6,4(sp)
  857088:	d9c00215 	stw	r7,8(sp)
  85708c:	08333340 	call	833334 <malloc>
  857090:	d9400017 	ldw	r5,0(sp)
  857094:	d9800117 	ldw	r6,4(sp)
  857098:	d9c00217 	ldw	r7,8(sp)
  85709c:	10001d26 	beq	r2,zero,857114 <__register_exitproc+0x110>
  8570a0:	81000017 	ldw	r4,0(r16)
  8570a4:	10000115 	stw	zero,4(r2)
  8570a8:	02000044 	movi	r8,1
  8570ac:	22405217 	ldw	r9,328(r4)
  8570b0:	0007883a 	mov	r3,zero
  8570b4:	12400015 	stw	r9,0(r2)
  8570b8:	20805215 	stw	r2,328(r4)
  8570bc:	10006215 	stw	zero,392(r2)
  8570c0:	10006315 	stw	zero,396(r2)
  8570c4:	883fde26 	beq	r17,zero,857040 <__alt_mem_epcs_flash_controller_0+0xff84e040>
  8570c8:	18c9883a 	add	r4,r3,r3
  8570cc:	2109883a 	add	r4,r4,r4
  8570d0:	1109883a 	add	r4,r2,r4
  8570d4:	21802215 	stw	r6,136(r4)
  8570d8:	01800044 	movi	r6,1
  8570dc:	12406217 	ldw	r9,392(r2)
  8570e0:	30cc983a 	sll	r6,r6,r3
  8570e4:	4992b03a 	or	r9,r9,r6
  8570e8:	12406215 	stw	r9,392(r2)
  8570ec:	21c04215 	stw	r7,264(r4)
  8570f0:	01000084 	movi	r4,2
  8570f4:	893fd21e 	bne	r17,r4,857040 <__alt_mem_epcs_flash_controller_0+0xff84e040>
  8570f8:	11006317 	ldw	r4,396(r2)
  8570fc:	218cb03a 	or	r6,r4,r6
  857100:	11806315 	stw	r6,396(r2)
  857104:	003fce06 	br	857040 <__alt_mem_epcs_flash_controller_0+0xff84e040>
  857108:	18805304 	addi	r2,r3,332
  85710c:	18805215 	stw	r2,328(r3)
  857110:	003fc606 	br	85702c <__alt_mem_epcs_flash_controller_0+0xff84e02c>
  857114:	00bfffc4 	movi	r2,-1
  857118:	003fd006 	br	85705c <__alt_mem_epcs_flash_controller_0+0xff84e05c>
