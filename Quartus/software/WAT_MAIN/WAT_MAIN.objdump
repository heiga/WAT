
WAT_MAIN.elf:     file format elf32-littlenios2
WAT_MAIN.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800000

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x0005b7ec memsz 0x00065460 flags rwx
    LOAD off    0x0005d020 vaddr 0x01004020 paddr 0x01004020 align 2**12
         filesz 0x00000210 memsz 0x00000210 flags r-x
    LOAD off    0x0005e000 vaddr 0x01009000 paddr 0x01009000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags r-x

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000000  01009000  01009000  0005e000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  01004020  01004020  0005d020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00056bb4  00800000  00800000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00002ce8  00856bb4  00856bb4  00057bb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001f50  0085989c  0085989c  0005a89c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00009c74  0085b7ec  0085b7ec  0005c7ec  2**2
                  ALLOC, SMALL_DATA
  6 .sdram_controller_0 00000000  00865460  00865460  0005e000  2**0
                  CONTENTS
  7 .onchip_memory2_0 00000000  01004230  01004230  0005e000  2**0
                  CONTENTS
  8 .epcs_flash_controller_0 00000000  01009020  01009020  0005e000  2**0
                  CONTENTS
  9 .comment      00000023  00000000  00000000  0005e000  2**0
                  CONTENTS, READONLY
 10 .debug_aranges 00001c10  00000000  00000000  0005e028  2**3
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_info   00078190  00000000  00000000  0005fc38  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 00015463  00000000  00000000  000d7dc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00020c08  00000000  00000000  000ed22b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00007718  00000000  00000000  0010de34  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0000a494  00000000  00000000  0011554c  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_loc    00028e85  00000000  00000000  0011f9e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_alt_sim_info 00000010  00000000  00000000  00148868  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_ranges 00002760  00000000  00000000  00148878  2**3
                  CONTENTS, READONLY, DEBUGGING
 19 .thread_model 00000006  00000000  00000000  00153e9a  2**0
                  CONTENTS, READONLY
 20 .cpu          0000000c  00000000  00000000  00153ea0  2**0
                  CONTENTS, READONLY
 21 .qsys         00000001  00000000  00000000  00153eac  2**0
                  CONTENTS, READONLY
 22 .simulation_enabled 00000001  00000000  00000000  00153ead  2**0
                  CONTENTS, READONLY
 23 .sysid_hash   00000004  00000000  00000000  00153eae  2**0
                  CONTENTS, READONLY
 24 .sysid_base   00000004  00000000  00000000  00153eb2  2**0
                  CONTENTS, READONLY
 25 .sysid_time   00000004  00000000  00000000  00153eb6  2**0
                  CONTENTS, READONLY
 26 .stderr_dev   0000000b  00000000  00000000  00153eba  2**0
                  CONTENTS, READONLY
 27 .stdin_dev    0000000b  00000000  00000000  00153ec5  2**0
                  CONTENTS, READONLY
 28 .stdout_dev   0000000b  00000000  00000000  00153ed0  2**0
                  CONTENTS, READONLY
 29 .sopc_system_name 0000000e  00000000  00000000  00153edb  2**0
                  CONTENTS, READONLY
 30 .quartus_project_dir 0000000e  00000000  00000000  00153ee9  2**0
                  CONTENTS, READONLY
 31 .jdi          0000448f  00000000  00000000  00153ef7  2**0
                  CONTENTS, READONLY
 32 .sopcinfo     0009c13a  00000000  00000000  00158386  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
01009000 l    d  .entry	00000000 .entry
01004020 l    d  .exceptions	00000000 .exceptions
00800000 l    d  .text	00000000 .text
00856bb4 l    d  .rodata	00000000 .rodata
0085989c l    d  .rwdata	00000000 .rwdata
0085b7ec l    d  .bss	00000000 .bss
00865460 l    d  .sdram_controller_0	00000000 .sdram_controller_0
01004230 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
01009020 l    d  .epcs_flash_controller_0	00000000 .epcs_flash_controller_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../WAT_TEST_bsp//obj/HAL/src/crt0.o
00800034 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 camera.c
0085b5e8 l     O .rwdata	00000004 CAM_PICTURE_OUTPUT
0085b5ec l     O .rwdata	00000006 CAM_SYNC
0085b5f2 l     O .rwdata	00000006 CAM_REST
0085b5f8 l     O .rwdata	00000006 CAM_INIT
0085b5fe l     O .rwdata	00000006 CAM_SIZE
0085b604 l     O .rwdata	00000006 CAM_LUMI
0085b60a l     O .rwdata	00000006 CAM_SNAP
0085b610 l     O .rwdata	00000006 CAM_GRAB
0085b616 l     O .rwdata	00000006 CAM_DATA
0085b61c l     O .rwdata	00000006 CAM_ACK_SYNC
0085b622 l     O .rwdata	00000006 CAM_ACK_INIT
0085b628 l     O .rwdata	00000006 CAM_ACK_SIZE
0085b62e l     O .rwdata	00000006 CAM_ACK_LUMI
0085b634 l     O .rwdata	00000006 CAM_ACK_SNAP
0085b63a l     O .rwdata	00000006 CAM_ACK_GRAB
0085b640 l     O .rwdata	00000006 CAM_ACK_DATA
0085b646 l     O .rwdata	00000006 CAM_ACK_DEND
0085b64c l     O .rwdata	00000006 CAM_NAK_DATA
00000000 l    df *ABS*	00000000 imagepro.c
00000000 l    df *ABS*	00000000 interrupt_peripherals.c
00000000 l    df *ABS*	00000000 motor.c
00000000 l    df *ABS*	00000000 wat_main.c
0085b654 l     O .rwdata	00000004 CAM_PICTURE_OUTPUT
0085b658 l     O .rwdata	00000006 CAM_SYNC
0085b65e l     O .rwdata	00000006 CAM_REST
0085b664 l     O .rwdata	00000006 CAM_INIT
0085b66a l     O .rwdata	00000006 CAM_SIZE
0085b670 l     O .rwdata	00000006 CAM_LUMI
0085b676 l     O .rwdata	00000006 CAM_SNAP
0085b67c l     O .rwdata	00000006 CAM_GRAB
0085b682 l     O .rwdata	00000006 CAM_DATA
0085b688 l     O .rwdata	00000006 CAM_ACK_SYNC
0085b68e l     O .rwdata	00000006 CAM_ACK_INIT
0085b694 l     O .rwdata	00000006 CAM_ACK_SIZE
0085b69a l     O .rwdata	00000006 CAM_ACK_LUMI
0085b6a0 l     O .rwdata	00000006 CAM_ACK_SNAP
0085b6a6 l     O .rwdata	00000006 CAM_ACK_GRAB
0085b6ac l     O .rwdata	00000006 CAM_ACK_DATA
0085b6b2 l     O .rwdata	00000006 CAM_ACK_DEND
0085b6b8 l     O .rwdata	00000006 CAM_NAK_DATA
00000000 l    df *ABS*	00000000 wifi.c
00000000 l    df *ABS*	00000000 jdapimin.c
00801e24 l     F .text	00000428 default_decompress_parms
00000000 l    df *ABS*	00000000 jdapistd.c
008028e4 l     F .text	00000170 output_pass_setup
00000000 l    df *ABS*	00000000 jdatasrc.c
00802f18 l     F .text	0000003c init_source
00802f54 l     F .text	00000024 init_mem_source
00802f78 l     F .text	00000110 fill_input_buffer
00803088 l     F .text	00000074 fill_mem_input_buffer
0085b6be l     O .rwdata	00000004 mybuffer.3831
008030fc l     F .text	000000b4 skip_input_data
008031b0 l     F .text	00000024 term_source
00000000 l    df *ABS*	00000000 jdinput.c
00804008 l     F .text	000008dc initial_setup
008048e4 l     F .text	000003b4 per_scan_setup
00804c98 l     F .text	00000150 latch_quant_tables
00804de8 l     F .text	0000007c start_input_pass
00804e64 l     F .text	00000054 finish_input_pass
00804eb8 l     F .text	000001a8 consume_markers
00805060 l     F .text	00000094 reset_input_controller
00000000 l    df *ABS*	00000000 jdmarker.c
008051a8 l     F .text	0000016c get_soi
00805314 l     F .text	00000858 get_sof
00805b6c l     F .text	00000774 get_sos
008062e0 l     F .text	000003ac get_dac
0080668c l     F .text	00000664 get_dht
00806cf0 l     F .text	00000854 get_dqt
00807544 l     F .text	00000274 get_dri
008077b8 l     F .text	00000bf0 get_lse
008083a8 l     F .text	00000598 examine_app0
00808940 l     F .text	00000224 examine_app14
00808b64 l     F .text	000002b8 get_interesting_appn
00808e1c l     F .text	000004a8 save_marker
008092c4 l     F .text	000001ac skip_variable
00809470 l     F .text	0000028c next_marker
008096fc l     F .text	00000190 first_marker
0080988c l     F .text	000007a4 read_markers
0080a030 l     F .text	00000104 read_restart_marker
0080a31c l     F .text	00000068 reset_marker_reader
00000000 l    df *ABS*	00000000 jdmaster.c
0080a730 l     F .text	000001d4 use_merged_upsample
0080ad60 l     F .text	000000d8 prepare_range_limit_table
0080ae38 l     F .text	0000045c master_selection
0080b294 l     F .text	000002a8 prepare_for_output_pass
0080b53c l     F .text	0000006c finish_output_pass
00000000 l    df *ABS*	00000000 jdmerge.c
0080b728 l     F .text	000001ec build_ycc_rgb_table
0080b914 l     F .text	000001f0 build_bg_ycc_rgb_table
0080bb04 l     F .text	00000048 start_pass_merged_upsample
0080bb4c l     F .text	000001e8 merged_2v_upsample
0080bd34 l     F .text	000000ac merged_1v_upsample
0080bde0 l     F .text	00000370 h2v1_merged_upsample
0080c150 l     F .text	00000480 h2v2_merged_upsample
00000000 l    df *ABS*	00000000 jdpostct.c
0080c718 l     F .text	000001a8 start_pass_dpost
0080c8c0 l     F .text	00000114 post_process_1pass
0080c9d4 l     F .text	0000019c post_process_prepass
0080cb70 l     F .text	000001c8 post_process_2pass
00000000 l    df *ABS*	00000000 jdsample.c
0080cec4 l     F .text	00000050 start_pass_upsample
0080cf14 l     F .text	00000270 sep_upsample
0080d184 l     F .text	0000003c fullsize_upsample
0080d1c0 l     F .text	00000038 noop_upsample
0080d1f8 l     F .text	000001a8 int_upsample
0080d3a0 l     F .text	000000f0 h2v1_upsample
0080d490 l     F .text	0000013c h2v2_upsample
00000000 l    df *ABS*	00000000 jerror.c
0080d99c l     F .text	00000038 error_exit
0080d9d4 l     F .text	00000060 output_message
0080da34 l     F .text	000000a8 emit_message
0080dadc l     F .text	000001fc format_message
0080dcd8 l     F .text	0000003c reset_error_mgr
00000000 l    df *ABS*	00000000 jmemmgr.c
0080ddd4 l     F .text	00000064 out_of_memory
0085b6c4 l     O .rwdata	00000008 first_pool_slop
0085b6cc l     O .rwdata	00000008 extra_pool_slop
0080de38 l     F .text	000002d0 alloc_small
0080e108 l     F .text	00000178 alloc_large
0080e280 l     F .text	00000178 alloc_sarray
0080e3f8 l     F .text	00000188 alloc_barray
0080e580 l     F .text	000000f4 request_virt_sarray
0080e674 l     F .text	000000f4 request_virt_barray
0080e768 l     F .text	0000044c realize_virt_arrays
0080ebb4 l     F .text	000001e0 do_sarray_io
0080ed94 l     F .text	000001e4 do_barray_io
0080ef78 l     F .text	000002d8 access_virt_sarray
0080f250 l     F .text	000002dc access_virt_barray
0080f52c l     F .text	00000298 free_pool
0080f7c4 l     F .text	00000080 self_destruct
00000000 l    df *ABS*	00000000 jmemnobs.c
00000000 l    df *ABS*	00000000 jquant1.c
008583d0 l     O .rodata	00000100 base_dither_matrix
0080fcb4 l     F .text	00000250 select_ncolors
008584d0 l     O .rodata	0000000c RGB_order.4116
0080ff04 l     F .text	00000064 output_value
0080ff68 l     F .text	00000060 largest_input_value
0080ffc8 l     F .text	0000028c create_colormap
00810254 l     F .text	00000288 create_colorindex
008104dc l     F .text	00000140 make_odither_array
0081061c l     F .text	00000120 create_odither_tables
0081073c l     F .text	0000015c color_quantize
00810898 l     F .text	00000180 color_quantize3
00810a18 l     F .text	00000210 quantize_ord_dither
00810c28 l     F .text	00000270 quantize3_ord_dither
00810e98 l     F .text	00000358 quantize_fs_dither
008111f0 l     F .text	000000ac alloc_fs_workspace
0081129c l     F .text	000001dc start_pass_1_quant
00811478 l     F .text	00000024 finish_pass_1_quant
0081149c l     F .text	00000050 new_color_map_1_quant
00000000 l    df *ABS*	00000000 jquant2.c
00811634 l     F .text	00000144 prescan_quantize
00811778 l     F .text	0000007c find_biggest_color_pop
008117f4 l     F .text	00000074 find_biggest_volume
00811868 l     F .text	00000748 update_box
00811fb0 l     F .text	00000244 median_cut
008121f4 l     F .text	000002a0 compute_color
00812494 l     F .text	00000144 select_colors
008125d8 l     F .text	00000598 find_nearby_colors
00812b70 l     F .text	000002c4 find_best_colors
00812e34 l     F .text	000001f4 fill_inverse_cmap
00813028 l     F .text	000001b0 pass2_no_dither
008131d8 l     F .text	00000544 pass2_fs_dither
0081371c l     F .text	000001cc init_error_limit
008138e8 l     F .text	00000068 finish_pass1
00813950 l     F .text	00000024 finish_pass2
00813974 l     F .text	00000258 start_pass_2_quant
00813bcc l     F .text	0000003c new_color_map_2_quant
00000000 l    df *ABS*	00000000 jutils.c
00000000 l    df *ABS*	00000000 jcomapi.c
00000000 l    df *ABS*	00000000 jdarith.c
00814214 l     F .text	000000a8 get_byte
008142bc l     F .text	00000254 arith_decode
00814510 l     F .text	000001d0 process_restart
008146e0 l     F .text	00000420 decode_mcu_DC_first
00814b00 l     F .text	00000364 decode_mcu_AC_first
00814e64 l     F .text	0000010c decode_mcu_DC_refine
00814f70 l     F .text	00000334 decode_mcu_AC_refine
008152a4 l     F .text	000006e4 decode_mcu
00815988 l     F .text	00000684 start_pass
0081600c l     F .text	00000024 finish_pass
00000000 l    df *ABS*	00000000 jdcoefct.c
008161b0 l     F .text	000000a4 start_iMCU_row
00816254 l     F .text	0000003c start_input_pass
00816290 l     F .text	00000088 start_output_pass
00816d24 l     F .text	00000234 smoothing_ok
00816f58 l     F .text	00000c1c decompress_smooth_data
00816a18 l     F .text	0000030c decompress_data
00816318 l     F .text	000003ac decompress_onepass
008166c4 l     F .text	00000024 dummy_consume_data
008166e8 l     F .text	00000330 consume_data
00000000 l    df *ABS*	00000000 jdcolor.c
00817df0 l     F .text	000001ec build_ycc_rgb_table
00817fdc l     F .text	000001f0 build_bg_ycc_rgb_table
008181cc l     F .text	0000022c ycc_rgb_convert
008183f8 l     F .text	00000118 build_rgb_y_table
00818510 l     F .text	000001b4 rgb_gray_convert
008186c4 l     F .text	00000180 rgb1_rgb_convert
00818844 l     F .text	000001d0 rgb1_gray_convert
00818a14 l     F .text	00000138 rgb_convert
00818b4c l     F .text	0000011c null_convert
00818c68 l     F .text	0000006c grayscale_convert
00818cd4 l     F .text	000000dc gray_rgb_convert
00818db0 l     F .text	0000027c ycck_cmyk_convert
0081902c l     F .text	00000024 start_pass_dcolor
00000000 l    df *ABS*	00000000 jddctmgr.c
008196a4 l     F .text	00000870 start_pass
008589c8 l     O .rodata	00000080 aanscales.4505
00858a48 l     O .rodata	00000040 aanscalefactor.4513
00000000 l    df *ABS*	00000000 jdhuff.c
00858a88 l     O .rodata	00000100 jpeg_zigzag_order
00858b88 l     O .rodata	000000c4 jpeg_zigzag_order7
00858c4c l     O .rodata	00000090 jpeg_zigzag_order6
00858cdc l     O .rodata	00000064 jpeg_zigzag_order5
00858d40 l     O .rodata	00000040 jpeg_zigzag_order4
00858d80 l     O .rodata	00000024 jpeg_zigzag_order3
00858da4 l     O .rodata	00000010 jpeg_zigzag_order2
0081a018 l     F .text	000005c4 jpeg_make_d_derived_tbl
0081a5dc l     F .text	000001ec jpeg_fill_bit_buffer
00858db4 l     O .rodata	00000040 bmask
0081a7c8 l     F .text	0000019c jpeg_huff_decode
0081a964 l     F .text	00000068 finish_pass_huff
0081a9cc l     F .text	000000cc process_restart
0081aa98 l     F .text	000003d8 decode_mcu_DC_first
0081ae70 l     F .text	000003e0 decode_mcu_AC_first
0081b250 l     F .text	000001b8 decode_mcu_DC_refine
0081b408 l     F .text	00000680 decode_mcu_AC_refine
0081ba88 l     F .text	00000740 decode_mcu_sub
0081c1c8 l     F .text	00000724 decode_mcu
0081c8ec l     F .text	00000c54 start_pass_huff_decoder
00000000 l    df *ABS*	00000000 jdmainct.c
0081d710 l     F .text	000001d8 alloc_funny_pointers
0081d8e8 l     F .text	000002f0 make_funny_pointers
0081dbd8 l     F .text	00000280 set_wraparound_pointers
0081de58 l     F .text	000001b0 set_bottom_pointers
0081e008 l     F .text	000000f4 start_pass_main
0081e1f4 l     F .text	000002b0 process_data_context_main
0081e0fc l     F .text	000000f8 process_data_simple_main
0081e4a4 l     F .text	00000070 process_data_crank_post
00000000 l    df *ABS*	00000000 jidctflt.c
00000000 l    df *ABS*	00000000 jidctfst.c
00000000 l    df *ABS*	00000000 jidctint.c
00000000 l    df *ABS*	00000000 jaricom.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
008323ec l     F .text	00000008 __fp_unlock
00832400 l     F .text	0000019c __sinit.part.1
0083259c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
00000000 l    df *ABS*	00000000 impure.c
0085989c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
008346e8 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 sscanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 vfprintf.c
00859106 l     O .rodata	00000010 zeroes.4389
00859116 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 vfscanf.c
0085912e l     O .rodata	00000022 basefix.4340
00000000 l    df *ABS*	00000000 timesr.c
00000000 l    df *ABS*	00000000 vfprintf.c
00859150 l     O .rodata	00000010 zeroes.4404
0083adbc l     F .text	000000bc __sbprintf
00859160 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 ctype_.c
00859271 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
0083b358 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 environ.c
0085b840 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
0085a0e8 l     O .rwdata	00000020 lc_ctype_charset
0085a0c8 l     O .rwdata	00000020 lc_message_charset
0085a108 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
00859410 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
0083f044 l     F .text	00000064 sulp
00859544 l     O .rodata	00000014 fpinan.2773
00859558 l     O .rodata	00000014 fpi.2737
0085956c l     O .rodata	00000028 tinytens
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 vfprintf.c
00859594 l     O .rodata	00000010 zeroes.4333
008595a4 l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 vfscanf.c
008595b4 l     O .rodata	00000022 basefix.3791
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 vfprintf.c
00843e84 l     F .text	000000fc __sprint_r.part.0
008595d6 l     O .rodata	00000010 zeroes.4349
008454c0 l     F .text	000000bc __sbprintf
008595e6 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00845860 l     F .text	00000100 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0084945c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
00849570 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
008495d0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00849964 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_lseek.c
00849a4c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_open.c
00849c20 l     F .text	0000003c alt_get_errno
00849c5c l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
00849ea4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0085b714 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
0084a118 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
0084a1cc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_env_lock.c
0085b718 l     O .rwdata	00000004 lockid
0085b864 l     O .bss	00000004 locks
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
0085b71c l     O .rwdata	00000004 lockid
0085b86c l     O .bss	00000004 locks
00000000 l    df *ABS*	00000000 os_core.c
0084bc04 l     F .text	00000048 OS_InitMisc
0084bc4c l     F .text	0000006c OS_InitRdyList
0084bdb8 l     F .text	000000e4 OS_InitTCBList
0084bb24 l     F .text	000000e0 OS_InitEventList
0084bcb8 l     F .text	00000080 OS_InitTaskIdle
0084bd38 l     F .text	00000080 OS_InitTaskStat
0084c028 l     F .text	00000074 OS_SchedNew
00000000 l    df *ABS*	00000000 os_dbg.c
00000000 l    df *ABS*	00000000 os_flag.c
0084dd38 l     F .text	000000f4 OS_FlagTaskRdy
0084daf8 l     F .text	00000160 OS_FlagBlock
00000000 l    df *ABS*	00000000 os_mem.c
00000000 l    df *ABS*	00000000 os_q.c
00000000 l    df *ABS*	00000000 os_sem.c
00000000 l    df *ABS*	00000000 os_task.c
00000000 l    df *ABS*	00000000 os_time.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
00851e10 l     F .text	00000034 alt_dev_reg
0085a2e8 l     O .rwdata	000000cc epcs_flash_controller_0
0085a3b4 l     O .rwdata	0000106c jtag_uart_0
0085b420 l     O .rwdata	000000d0 wifi_uart
0085b4f0 l     O .rwdata	00000028 altera_hostfs
00000000 l    df *ABS*	00000000 altera_avalon_epcs_flash_controller.c
00851f38 l     F .text	00000034 alt_flash_device_register
00851fc0 l     F .text	000003f8 alt_epcs_flash_query
008523b8 l     F .text	000000ec alt_epcs_flash_memcmp
00852790 l     F .text	00000094 alt_epcs_test_address
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00852ce0 l     F .text	000002a4 altera_avalon_jtag_uart_irq
00852f84 l     F .text	00000104 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00853760 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_init.c
00853ac4 l     F .text	0000009c altera_avalon_uart_irq
00853b60 l     F .text	00000138 altera_avalon_uart_rxirq
00853c98 l     F .text	000001a4 altera_avalon_uart_txirq
00000000 l    df *ABS*	00000000 altera_avalon_uart_read.c
00853e90 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 altera_avalon_uart_write.c
00854134 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 altera_hostfs.c
0085b794 l     O .rwdata	00000009 hcinfo.2538
0085b7a0 l     O .rwdata	0000000a hcinfo.2551
0085b7ac l     O .rwdata	00000009 hcinfo.2560
0085b7b8 l     O .rwdata	0000000a hcinfo.2573
0085b7c4 l     O .rwdata	0000000a hcinfo.2586
0085b7d0 l     O .rwdata	0000000a hcinfo.2612
00000000 l    df *ABS*	00000000 epcs_commands.c
00854888 l     F .text	00000038 epcs_test_wip
008548c0 l     F .text	0000003c epcs_await_wip_released
00000000 l    df *ABS*	00000000 fifoed_avalon_uart.c
00854e68 l     F .text	0000003c alt_get_errno
00855338 l     F .text	00000154 fifoed_avalon_uart_rxirq
0085548c l     F .text	000001d4 fifoed_avalon_uart_txirq
00855660 l     F .text	00000090 fifoed_avalon_uart_irq
00000000 l    df *ABS*	00000000 fifoed_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00855b8c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_flash_dev.c
00000000 l    df *ABS*	00000000 alt_fs_reg.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00856190 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 os_cpu_a.o
00000040 l       *ABS*	00000000 OSCtxSw_SWITCH_PC
00000000 l    df *ABS*	00000000 os_cpu_c.c
00000014 l       *ABS*	00000000 OSTCBNext_OFFSET
00000032 l       *ABS*	00000000 OSTCBPrio_OFFSET
00000000 l       *ABS*	00000000 OSTCBStkPtr_OFFSET
00000000 l    df *ABS*	00000000 altera_avalon_spi.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
0085b8c4 g     O .bss	00000004 alt_instruction_exception_handler
00858720 g     O .rodata	000000d0 jpeg_natural_order6
008345fc g     F .text	00000018 putchar
0083e6e0 g     F .text	00000074 _mprec_log10
0085b76a g     O .rwdata	00000002 OSTaskNameSize
00852704 g     F .text	0000008c alt_epcs_flash_get_info
0083e7cc g     F .text	0000008c __any_on
0083d17c g     F .text	00000054 _isatty_r
0085941c g     O .rodata	00000028 __mprec_tinytens
00801594 g     F .text	00000054 motorReverse
00849b64 g     F .text	000000bc alt_main
00834614 g     F .text	000000c0 _puts_r
0086213c g     O .bss	00000100 alt_irq
008254e0 g     F .text	00000e38 jpeg_idct_13x13
0083d2dc g     F .text	00000060 _lseek_r
0084e558 g     F .text	000000d8 OS_MemInit
00851db0 g     F .text	00000060 OSTimeSet
0083cc08 g     F .text	000000ac __sflags
008487ac g     F .text	00000088 .hidden __eqdf2
00800db8 g     F .text	00000578 find_region
008017b8 g     F .text	000000dc rcControl
0084a878 g     F .text	00000610 OSEventPendMulti
0082fa44 g     F .text	000004c4 jpeg_idct_3x6
00865460 g       *ABS*	00000000 __alt_heap_start
008566e4 g     F .text	00000024 OSTaskCreateHook
00834450 g     F .text	0000003c printf
0085b742 g     O .rwdata	00000002 OSMboxEn
0084aee0 g     F .text	0000004c OSIntEnter
0084640c g     F .text	0000009c _wcrtomb_r
0085b7ec g     O .bss	00000004 wifiPackageBuffer
00834bbc g     F .text	0000005c __sseek
0083274c g     F .text	00000010 __sinit
0083ae78 g     F .text	00000140 __swbuf_r
0085b752 g     O .rwdata	00000002 OSQEn
0083d200 g     F .text	0000007c _setlocale_r
008050f4 g     F .text	000000b4 jinit_input_controller
008325a4 g     F .text	00000078 __sfmoreglue
00843e6c g     F .text	00000018 ungetc
0084a54c g     F .text	000000cc __malloc_unlock
0085674c g     F .text	00000020 OSTaskStatHook
008543a8 g     F .text	0000011c alt_hostfs_open
0085b874 g     O .bss	00000001 OSLockNesting
00802a54 g     F .text	00000144 jpeg_read_scanlines
0083f0a8 g     F .text	000015e4 _strtod_r
0080fb04 g     F .text	00000034 jpeg_get_small
0081e708 g     F .text	00000c5c jpeg_idct_float
0085b790 g     O .rwdata	00000002 OSDataSize
0085b875 g     O .bss	00000001 OSRunning
008429b8 g     F .text	00000100 _sfread_r
0082e9a8 g     F .text	000007f4 jpeg_idct_5x10
0083d644 g     F .text	0000015c memmove
0085678c g     F .text	00000020 OSInitHookBegin
0085b788 g     O .rwdata	00000002 OSTmrSize
00832734 g     F .text	00000018 _cleanup
0083d7a0 g     F .text	000000a8 _Balloc
00831308 g     F .text	00000070 .hidden __fixsfsi
0085b518 g     O .rwdata	000000d0 cam_uart
0085b878 g     O .bss	00000004 OSIdleCtr
008587f0 g     O .rodata	000000a4 jpeg_natural_order5
0085b8f8 g     O .bss	00000800 camPackageBuffer
00848834 g     F .text	000000dc .hidden __gtdf2
00856494 g     F .text	00000024 altera_nios2_gen2_irq_init
00856564 g       .text	00000000 OSStartTsk
00822858 g     F .text	000000b8 jpeg_idct_1x1
0084c358 g     F .text	000002d4 OS_TCBInit
008548fc g     F .text	000000fc epcs_sector_erase
00855a00 g     F .text	00000060 fifoed_avalon_uart_classic_write_fd
01009000 g     F .entry	00000000 __reset
0084a154 g     F .text	00000078 times
00833614 g     F .text	0000002c getenv
0085b78e g     O .rwdata	00000002 OSTmrWheelTblSize
0085b72e g     O .rwdata	00000002 OSEventSize
0081fe64 g     F .text	00000c44 jpeg_idct_islow
0085b87c g     O .bss	00000001 OSPrioHighRdy
00833418 g     F .text	0000005c _fstat_r
0085c0f8 g     O .bss	00000030 camCommandBuffer
00856708 g     F .text	00000024 OSTaskDelHook
0085b830 g     O .bss	00000004 errno
00834b38 g     F .text	00000008 __seofread
00856544 g       .text	00000000 OSStartHighRdy
00850830 g     F .text	000001e4 OSTaskCreateExt
0080b6a0 g     F .text	00000088 jinit_master_decompress
008414a0 g     F .text	000013a0 ___svfiprintf_internal_r
00801894 g     F .text	00000044 motorEStop
0084d640 g     F .text	00000060 OSFlagPendGetFlagsRdy
0085b76e g     O .rwdata	00000002 OSTaskStatStkSize
00823cb8 g     F .text	00000c70 jpeg_idct_11x11
0084c7bc g     F .text	00000308 OSFlagAccept
0084eb9c g     F .text	000000b8 OSQFlush
0084e630 g     F .text	00000140 OSQAccept
0085b85c g     O .bss	00000004 alt_argv
008635e8 g       *ABS*	00000000 _gp
0085b7f0 g     O .bss	00000004 wifiPackageQueue
00830e24 g     F .text	000004e4 .hidden __subsf3
00850684 g     F .text	000001ac OSTaskCreate
008558e0 g     F .text	00000060 fifoed_avalon_uart_read_fd
00850194 g     F .text	000004f0 OSTaskChangePrio
0085b870 g     O .bss	00000004 alt_heapsem
008270a8 g     F .text	00000e20 jpeg_idct_15x15
0080a904 g     F .text	0000045c jpeg_calc_output_dimensions
0084c62c g     F .text	00000190 OSDebugInit
00850a14 g     F .text	00000344 OSTaskDel
0082c934 g     F .text	00000cac jpeg_idct_8x16
0085a168 g     O .rwdata	00000180 alt_fd_list
0086223c g     O .bss	00000370 OSFlagTbl
00801b30 g     F .text	0000006c wifi_uart_interrupt
0085b828 g     O .bss	00000004 MOTORMOVING
00829df0 g     F .text	00000b30 jpeg_idct_14x7
008545e0 g     F .text	00000068 alt_hostfs_seek
008345f4 g     F .text	00000008 _putchar_r
0084b904 g     F .text	000000b8 OS_EventTaskRemove
00854b40 g     F .text	0000006c epcs_write_status_register
00855d2c g     F .text	00000090 alt_find_dev
00838abc g     F .text	00000008 _times_r
00834150 g     F .text	00000148 memcpy
008461b0 g     F .text	0000025c __hexnan
0085b758 g     O .rwdata	00000002 OSRdyTblSize
00828f18 g     F .text	00000ed8 jpeg_idct_16x8
008323f4 g     F .text	0000000c _cleanup_r
00813ef0 g     F .text	0000005c jround_up
00849380 g     F .text	000000dc .hidden __floatsidf
00855f80 g     F .text	00000080 alt_fs_reg
00856274 g     F .text	0000007c alt_io_redirect
00848910 g     F .text	000000f4 .hidden __ltdf2
008559a0 g     F .text	00000060 fifoed_avalon_uart_classic_read_fd
00856bb4 g       *ABS*	00000000 __DTOR_END__
008346d4 g     F .text	00000014 puts
008560f4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0084a618 g     F .text	00000120 OSEventNameGet
0085b73c g     O .rwdata	00000002 OSFlagMax
0083d3e8 g     F .text	000000d8 mbrtowc
0085289c g     F .text	00000100 alt_epcs_flash_write_block
0083ee1c g     F .text	00000074 __fpclassifyd
0082f19c g     F .text	000008a8 jpeg_idct_4x8
0083e63c g     F .text	000000a4 __ratio
0084af2c g     F .text	000000f8 OSIntExit
00858894 g     O .rodata	00000080 jpeg_natural_order4
008454a4 g     F .text	0000001c __vfiprintf_internal
0085b776 g     O .rwdata	00000002 OSTCBSize
0085b87d g     O .bss	00000001 OSPrioCur
008531e0 g     F .text	000002bc altera_avalon_jtag_uart_read
0080fc6c g     F .text	00000024 jpeg_mem_init
0083391c g     F .text	00000014 malloc
00834420 g     F .text	00000030 _printf_r
00813ea8 g     F .text	00000048 jdiv_round_up
01004000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
00830448 g     F .text	00000064 .hidden __udivsi3
008499a0 g     F .text	000000ac isatty
0085b75c g     O .rwdata	00000002 OSStkWidth
0083d1d0 g     F .text	00000030 iswspace
0085946c g     O .rodata	000000c8 __mprec_tens
0085b750 g     O .rwdata	00000002 OSPtrSize
008032e4 g     F .text	00000110 jpeg_mem_src
0083d27c g     F .text	0000000c __locale_charset
00847468 g     F .text	000000c8 .hidden __lesf2
0085b730 g     O .rwdata	00000002 OSEventTblSize
00846700 g     F .text	00000074 .hidden __fixunsdfsi
008564b8 g       .text	00000000 OSCtxSw
0085b83c g     O .bss	00000004 __malloc_top_pad
008033f4 g     F .text	00000c14 jpeg_core_output_dimensions
00842948 g     F .text	00000070 __ssrefill_r
0085b880 g     O .bss	00000004 OSTCBList
0085c13c g     O .bss	00002000 camera_stk
0085b850 g     O .bss	00000004 alt_fd_list_lock
0082e0cc g     F .text	000008dc jpeg_idct_6x12
0082c520 g     F .text	000002ec jpeg_idct_4x2
00840f94 g     F .text	0000001c strtoul
0085b6ec g     O .rwdata	00000004 __mb_cur_max
0083d2ac g     F .text	0000000c _localeconv_r
00840fb0 g     F .text	00000320 _strtoull_r
0085b7f4 g     O .bss	00000004 findCommandBuffer
0083dbd4 g     F .text	0000003c __i2b
0083ccb4 g     F .text	000004c8 __sfvwrite_r
008625ac g     O .bss	00000c30 OSMemTbl
0085b884 g     O .bss	00000001 OSTickStepState
008348d8 g     F .text	00000054 _sbrk_r
00826318 g     F .text	00000d90 jpeg_idct_14x14
00854508 g     F .text	0000006c alt_hostfs_read
00801acc g     F .text	00000064 wifi_task
0080fc14 g     F .text	00000058 jpeg_open_backing_store
0085b754 g     O .rwdata	00000002 OSQMax
008222e0 g     F .text	0000033c jpeg_idct_3x3
008631dc g     O .bss	00000800 OSTaskStatStk
0080163c g     F .text	00000054 motorRight
0084e194 g     F .text	000000f0 OSMemNameGet
0085b734 g     O .rwdata	00000002 OSFlagEn
0083e858 g     F .text	00000060 _read_r
0085b77a g     O .rwdata	00000002 OSTimeTickHookEn
0084de2c g     F .text	000000a4 OS_FlagUnlink
0084f04c g     F .text	00000168 OSQPost
0085b708 g     O .rwdata	00000004 alt_max_fd
0084bef0 g     F .text	00000068 OS_MemCopy
0084bf58 g     F .text	000000d0 OS_Sched
00832040 g     F .text	000000f0 _fclose_r
0084e0a4 g     F .text	000000f0 OSMemGet
00851040 g     F .text	000001b4 OSTaskNameSet
008323bc g     F .text	00000030 fflush
0085b838 g     O .bss	00000004 __malloc_max_sbrked_mem
0085b888 g     O .bss	00000004 OSCtxSwCtr
0085676c g     F .text	00000020 OSTimeTickHook
0085b73e g     O .rwdata	00000002 OSFlagNameSize
00837130 g     F .text	0000198c __ssvfscanf_r
00801df0 g     F .text	00000034 jpeg_abort_decompress
0084b9bc g     F .text	00000100 OS_EventTaskRemoveMulti
00847530 g     F .text	000008ac .hidden __adddf3
00847334 g     F .text	00000078 .hidden __nesf2
00802728 g     F .text	000001bc jpeg_start_decompress
0084b7b4 g     F .text	00000150 OS_EventTaskWaitMulti
00852824 g     F .text	00000078 alt_epcs_flash_erase_block
0083e3e4 g     F .text	0000010c __b2d
0085b756 g     O .rwdata	00000002 OSQSize
00846d70 g     F .text	000005c4 .hidden __umoddi3
00849a88 g     F .text	000000dc lseek
0084fafc g     F .text	0000020c OSSemPend
00800000 g       *ABS*	00000000 __alt_mem_sdram_controller_0
0085b6d4 g     O .rwdata	00000004 _global_impure_ptr
00814110 g     F .text	0000005c jpeg_destroy
00854e0c g     F .text	0000005c epcs_exit_4_bytes_mode
00858df4 g     O .rodata	000001c8 jpeg_aritab
0083e8b8 g     F .text	00000564 _realloc_r
0085b740 g     O .rwdata	00000002 OSLowestPrio
00865460 g       *ABS*	00000000 __bss_end
00849874 g     F .text	000000f0 alt_iic_isr_register
008567ec g     F .text	00000024 OSTCBInitHook
00813f4c g     F .text	000000d4 jcopy_sample_rows
0085b786 g     O .rwdata	00000002 OSTmrCfgTicksPerSec
0085638c g     F .text	00000108 alt_tick
008595f6 g     O .rodata	00000100 __hexdig
00846774 g     F .text	000005fc .hidden __udivdi3
0080b5a8 g     F .text	000000f8 jpeg_new_colormap
008457bc g     F .text	00000024 _fputwc_r
0085b728 g     O .rwdata	00000002 OSEventEn
00859444 g     O .rodata	00000028 __mprec_bigtens
0083d9b8 g     F .text	00000104 __s2b
0085b782 g     O .rwdata	00000002 OSTmrCfgNameSize
00821334 g     F .text	00000610 jpeg_idct_6x6
00831d08 g     F .text	000000a8 .hidden __floatunsidf
00855898 g     F .text	00000048 fifoed_avalon_uart_classic_write
0083e124 g     F .text	00000060 __mcmp
00853964 g     F .text	00000160 altera_avalon_uart_init
008141c0 g     F .text	00000054 jpeg_alloc_huff_table
00819050 g     F .text	00000654 jinit_color_deconverter
0083276c g     F .text	00000018 __fp_lock_all
00849828 g     F .text	0000004c alt_ic_irq_enabled
0085b7f8 g     O .bss	00000001 useData
0084dc58 g     F .text	000000e0 OS_FlagInit
008562f0 g     F .text	0000009c alt_alarm_stop
008409fc g     F .text	0000001c strtol
0085b764 g     O .rwdata	00000002 OSTaskIdleStkSize
0085b854 g     O .bss	00000004 alt_irq_active
0084f734 g     F .text	000000b0 OSSemAccept
00832fb8 g     F .text	00000444 _fseeko_r
0084e398 g     F .text	000000d8 OSMemPut
0084ded0 g     F .text	000001d4 OSMemCreate
0085b88c g     O .bss	00000004 OSIdleCtrMax
008544c4 g     F .text	00000044 alt_hostfs_close
010040fc g     F .exceptions	000000d4 alt_irq_handler
0085a140 g     O .rwdata	00000028 alt_dev_null
008581bc g     O .rodata	00000200 jpeg_std_message_table
0085b778 g     O .rwdata	00000002 OSTicksPerSec
008564b8 g       .text	00000000 OSIntCtxSw
0082ff08 g     F .text	0000031c jpeg_idct_2x4
0083dabc g     F .text	00000068 __hi0bits
00849300 g     F .text	00000080 .hidden __fixdfsi
00827ec8 g     F .text	00001050 jpeg_idct_16x16
0084068c g     F .text	00000018 strtod
00813c08 g     F .text	000002a0 jinit_2pass_quantizer
0085b890 g     O .bss	00000004 OSTCBFreeList
0084fd08 g     F .text	0000016c OSSemPendAbort
0085b700 g     O .rwdata	00000008 alt_dev_list
0080c5d0 g     F .text	00000148 jinit_merged_upsampler
0084a208 g     F .text	00000100 write
0083448c g     F .text	000000a0 _putc_r
0085b77c g     O .rwdata	00000002 OSVersionNbr
008473ac g     F .text	000000bc .hidden __gtsf2
0085b6e8 g     O .rwdata	00000004 environ
00801b9c g     F .text	00000028 parseLog
0084960c g     F .text	000000b8 fstat
008328d0 g     F .text	00000024 fprintf
00848910 g     F .text	000000f4 .hidden __ledf2
0085b724 g     O .rwdata	00000004 OSEndiannessTest
0083de9c g     F .text	00000140 __pow5mult
00843f98 g     F .text	0000150c ___vfiprintf_internal_r
0085b84c g     O .bss	00000004 __nlocale_changed
008304ac g     F .text	00000058 .hidden __umodsi3
00801dbc g     F .text	00000034 jpeg_destroy_decompress
00854cc8 g     F .text	00000068 epcs_read_electronic_signature
0080dd14 g     F .text	000000c0 jpeg_std_error
0085b736 g     O .rwdata	00000002 OSFlagGrpSize
00801bc4 g     F .text	000001f8 jpeg_CreateDecompress
0085b7fc g     O .bss	00000004 initCommandBuffer
00865460 g       *ABS*	00000000 end
0085b800 g     O .bss	00000004 camQueueStatus
008333fc g     F .text	0000001c fseeko
008584dc g     O .rodata	00000140 jpeg_natural_order
00854170 g     F .text	00000238 altera_avalon_uart_write
00832f9c g     F .text	0000001c fseek
0080fc90 g     F .text	00000024 jpeg_mem_term
00852b98 g     F .text	00000148 altera_avalon_jtag_uart_init
0084c1c0 g     F .text	000000cc OS_TaskStat
010041d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0081e514 g     F .text	000001f4 jinit_d_main_controller
00824928 g     F .text	00000bb8 jpeg_idct_12x12
00856bb4 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
008537d8 g     F .text	0000007c alt_avalon_timer_sc_init
008538b4 g     F .text	00000060 altera_avalon_uart_write_fd
00831f58 g     F .text	00000064 .hidden __clzsi2
0080cd38 g     F .text	0000018c jinit_d_post_controller
00853914 g     F .text	00000050 altera_avalon_uart_close_fd
0085349c g     F .text	000002c4 altera_avalon_jtag_uart_write
00800038 g     F .text	00000b2c camera_task
0083275c g     F .text	00000004 __sfp_lock_acquire
0083d560 g     F .text	000000e4 memchr
0084be9c g     F .text	00000054 OS_MemClr
00838ac4 g     F .text	000022dc ___vfprintf_internal_r
00856588 g     F .text	0000015c OSTaskStkInit
0083492c g     F .text	00000058 _sprintf_r
0085b804 g     O .bss	00000004 initCommandQueue
00832c88 g     F .text	00000310 _free_r
0083d288 g     F .text	00000010 __locale_mb_cur_max
0084b50c g     F .text	00000198 OS_EventTaskRdy
00821944 g     F .text	00000574 jpeg_idct_5x5
0083b1d8 g     F .text	00000180 __call_exitprocs
0085b894 g     O .bss	00000001 OSCPUUsage
008114ec g     F .text	00000148 jinit_1pass_quantizer
0080f844 g     F .text	000002c0 jinit_memory_mgr
00801690 g     F .text	00000128 motorControl
00802530 g     F .text	0000008c jpeg_has_multiple_scans
00842840 g     F .text	00000108 _sungetc_r
0085b848 g     O .bss	00000004 __mlocale_changed
0085b6dc g     O .rwdata	00000004 __malloc_sbrk_base
00800000 g     F .text	00000038 _start
0085b8c8 g     O .bss	00000004 _alt_tick_rate
0084ec54 g     F .text	0000028c OSQPend
00840a18 g     F .text	00000304 _strtoll_r
00851900 g     F .text	00000104 OSTimeDly
0083dfdc g     F .text	00000148 __lshift
00856810 g     F .text	000001fc alt_avalon_spi_command
0085b8cc g     O .bss	00000004 _alt_nticks
00849ee0 g     F .text	00000104 read
0081f364 g     F .text	00000b00 jpeg_idct_ifast
00851e7c g     F .text	000000bc alt_sys_init
00831378 g     F .text	00000124 .hidden __floatsisf
008412d0 g     F .text	000001d0 __ssprint_r
008343c0 g     F .text	00000060 _open_r
00823260 g     F .text	00000a58 jpeg_idct_10x10
00856a9c g     F .text	00000118 __register_exitproc
0085b895 g     O .bss	00000001 OSTaskCtr
0080fbe4 g     F .text	00000030 jpeg_mem_available
00834cb8 g     F .text	000000d0 strncmp
00851a04 g     F .text	0000017c OSTimeDlyHMSM
00819f14 g     F .text	00000104 jinit_inverse_dct
0083dc10 g     F .text	0000028c __multiply
00853088 g     F .text	00000068 altera_avalon_jtag_uart_close
00830504 g     F .text	00000028 .hidden __mulsi3
00834d88 g     F .text	000000ec strncpy
0085b8d0 g     O .bss	00000028 __malloc_current_mallinfo
0085b72a g     O .rwdata	00000002 OSEventMax
00847334 g     F .text	00000078 .hidden __eqsf2
0083e4f0 g     F .text	0000014c __d2b
0084fe74 g     F .text	00000110 OSSemPost
0085482c g     F .text	0000005c epcs_read_status_register
00802344 g     F .text	00000160 jpeg_consume_input
0084b0b0 g     F .text	000000dc OSSchedUnlock
0085b808 g     O .bss	00000004 camCommandQueue
00855850 g     F .text	00000048 fifoed_avalon_uart_classic_read
00852a34 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00840d1c g     F .text	00000278 _strtoul_r
00856000 g     F .text	000000f4 alt_get_fd
0085b898 g     O .bss	00000004 OSMemFreeList
0084b1fc g     F .text	000000b0 OSStatInit
0082261c g     F .text	0000023c jpeg_idct_2x2
0084da34 g     F .text	000000c4 OSFlagQuery
008024a4 g     F .text	0000008c jpeg_input_complete
00854ea4 g     F .text	0000025c fifoed_avalon_uart_read
0085b760 g     O .rwdata	00000002 OSTaskCreateExtEn
0083b184 g     F .text	00000054 _close_r
00854d30 g     F .text	00000080 epcs_read_device_id
00817b74 g     F .text	0000027c jinit_d_coef_controller
00856a20 g     F .text	0000007c memcmp
0084b4ec g     F .text	00000020 OS_Dummy
00852af4 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00865460 g       *ABS*	00000000 __alt_stack_base
00852b44 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
01009000 g       *ABS*	00000000 __alt_mem_epcs_flash_controller_0
008349f0 g     F .text	0000007c sscanf
0083b030 g     F .text	00000154 __swsetup_r
008639dc g     O .bss	000001e0 OSQTbl
00847ddc g     F .text	000009d0 .hidden __divdf3
0083261c g     F .text	00000118 __sfp
0083e754 g     F .text	00000078 __copybits
00859cc0 g     O .rwdata	00000408 __malloc_av_
00832768 g     F .text	00000004 __sinit_lock_release
0085b89c g     O .bss	00000004 OSTCBHighRdy
0083149c g     F .text	0000086c .hidden __muldf3
00834ae4 g     F .text	00000054 __sread
00832b30 g     F .text	00000034 fread
0085b8a0 g     O .bss	00000004 OSQFreeList
00855dbc g     F .text	00000108 alt_find_file
0081d540 g     F .text	000001d0 jinit_huff_decoder
00855bc8 g     F .text	000000a4 alt_dev_llist_insert
0085b80c g     O .bss	00000004 findCommandQueue
0084a42c g     F .text	00000120 __malloc_lock
008328a8 g     F .text	00000028 _fprintf_r
0084a068 g     F .text	000000b0 sbrk
00834e74 g     F .text	000022bc ___svfprintf_internal_r
0084a738 g     F .text	00000140 OSEventNameSet
00832360 g     F .text	0000005c _fflush_r
0084557c g     F .text	000000dc _calloc_r
0085b8a4 g     O .bss	00000001 OSRdyGrp
0085b7dc g     O .rwdata	00000008 alt_flash_dev_list
00832890 g     F .text	00000018 fopen
0085b7ec g       *ABS*	00000000 __bss_start
00834298 g     F .text	00000128 memset
008018d8 g     F .text	000001f4 main
0080a660 g     F .text	000000d0 jpeg_set_marker_processor
0081406c g     F .text	000000a4 jpeg_abort
0085b860 g     O .bss	00000004 alt_envp
0085b834 g     O .bss	00000004 __malloc_max_total_mem
00852a94 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0083afb8 g     F .text	00000018 __swbuf
00859718 g     O .rodata	00000100 OSUnMapTbl
00847468 g     F .text	000000c8 .hidden __ltsf2
008328f4 g     F .text	0000023c _fread_r
0080224c g     F .text	000000f8 jpeg_read_header
0085b75a g     O .rwdata	00000002 OSSemEn
0084d6a0 g     F .text	00000394 OSFlagPost
00834c18 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
00832130 g     F .text	00000014 fclose
0084b6a4 g     F .text	00000110 OS_EventTaskWait
0081416c g     F .text	00000054 jpeg_alloc_quant_table
008407a4 g     F .text	00000258 _strtol_r
00831db0 g     F .text	000001a8 .hidden __truncdfsf2
00855100 g     F .text	00000238 fifoed_avalon_uart_write
00833640 g     F .text	00000104 _findenv_r
0084c28c g     F .text	000000cc OS_TaskStatStkChk
00850d58 g     F .text	00000150 OSTaskDelReq
0083b580 g     F .text	00001688 _dtoa_r
00833944 g     F .text	0000080c _malloc_r
00846568 g     F .text	00000030 __ascii_wctomb
0085b70c g     O .rwdata	00000004 alt_errno
0084b18c g     F .text	00000070 OSStart
00801380 g     F .text	0000018c motor_task
0080fb74 g     F .text	00000034 jpeg_get_large
00843c04 g     F .text	000000d4 __submore
0082a920 g     F .text	000008f4 jpeg_idct_12x6
0084a3cc g     F .text	00000060 __env_unlock
008335fc g     F .text	00000018 _findenv
00833474 g     F .text	000000c4 _fwalk
008511f4 g     F .text	000001d4 OSTaskResume
0084e470 g     F .text	000000e8 OSMemQuery
0085b76c g     O .rwdata	00000002 OSTaskStatEn
0083d504 g     F .text	0000005c _mbtowc_r
0085b746 g     O .rwdata	00000002 OSMemMax
0084f1b4 g     F .text	00000170 OSQPostFront
0083452c g     F .text	000000c8 putc
00830350 g     F .text	00000084 .hidden __divsi3
0085b8a5 g     O .bss	00000003 OSRdyTbl
0085b720 g     O .rwdata	00000002 OSDebugEn
008025bc g     F .text	0000016c jpeg_finish_decompress
00832b64 g     F .text	00000124 _malloc_trim_r
00856bb4 g       *ABS*	00000000 __CTOR_END__
0080a134 g     F .text	000001e8 jpeg_resync_to_restart
008309f4 g     F .text	00000430 .hidden __mulsf3
0085b738 g     O .rwdata	00000002 OSFlagNodeSize
008031d4 g     F .text	00000110 jpeg_stdio_src
0085b780 g     O .rwdata	00000002 OSTmrCfgMax
008524a4 g     F .text	00000260 alt_epcs_flash_write
0083ef68 g     F .text	000000dc strcmp
0084e770 g     F .text	000001ac OSQCreate
00850ea8 g     F .text	00000198 OSTaskNameGet
0084f324 g     F .text	0000020c OSQPostOpt
0084b2ac g     F .text	00000220 OSTimeTick
0085b810 g     O .bss	00000004 camPackageQueue
0085b768 g     O .rwdata	00000002 OSTaskMax
00856bb4 g       *ABS*	00000000 __DTOR_LIST__
0084f7e4 g     F .text	000000d8 OSSemCreate
0085b78c g     O .rwdata	00000002 OSTmrWheelSize
00855940 g     F .text	00000060 fifoed_avalon_uart_write_fd
008487ac g     F .text	00000088 .hidden __nedf2
0085b762 g     O .rwdata	00000002 OSTaskDelEn
0084ff84 g     F .text	00000110 OSSemQuery
0084e91c g     F .text	00000280 OSQDel
0084eee0 g     F .text	0000016c OSQPendAbort
00851e44 g     F .text	00000038 alt_irq_init
00849fe4 g     F .text	00000084 alt_release_fd
00834984 g     F .text	0000006c sprintf
00858fbc g     O .rodata	00000100 .hidden __clz_tab
0085b844 g     O .bss	00000004 _PathLocale
0085b814 g     O .bss	00000004 foundCommandBuffer
008406a4 g     F .text	00000100 strtof
00856a0c g     F .text	00000014 atexit
0080fba8 g     F .text	0000003c jpeg_free_large
008473ac g     F .text	000000bc .hidden __gesf2
0083afd0 g     F .text	00000060 _write_r
0080154c g     F .text	00000048 motorForward
00858914 g     O .rodata	00000064 jpeg_natural_order3
0084b024 g     F .text	0000008c OSSchedLock
0083d2b8 g     F .text	00000018 setlocale
00801330 g     F .text	00000050 sensor_interrupt
0084cac4 g     F .text	00000108 OSFlagCreate
0083ef60 g     F .text	00000008 nanf
0085b6d8 g     O .rwdata	00000004 _impure_ptr
0080150c g     F .text	00000040 motorStop
0085b858 g     O .bss	00000004 alt_argc
00832144 g     F .text	0000021c __sflush_r
0083d33c g     F .text	000000ac _mbrtowc_r
00855ccc g     F .text	00000060 _do_dtors
0083d2a4 g     F .text	00000008 __locale_cjk_lang
0085b732 g     O .rwdata	00000002 OSEventMultiEn
00832f98 g     F .text	00000004 _fseek_r
0082d5e0 g     F .text	00000aec jpeg_idct_7x14
0085b82c g     O .bss	00000004 MOVINGFORWARD
00834704 g     F .text	000001d4 __srefill_r
0084cbcc g     F .text	00000248 OSFlagDel
0085b8a8 g     O .bss	00000004 OSEventFreeList
01004020 g       .exceptions	00000000 alt_irq_entry
0083d4c0 g     F .text	00000044 __ascii_mbtowc
0083e380 g     F .text	00000064 __ulp
0084d088 g     F .text	000005b8 OSFlagPend
0085b77e g     O .rwdata	00000002 OSTmrEn
00832784 g     F .text	00000018 __fp_unlock_all
0082c098 g     F .text	00000488 jpeg_idct_6x3
0085b6f8 g     O .rwdata	00000008 alt_fs_list
00820aa8 g     F .text	0000088c jpeg_idct_7x7
0084c09c g     F .text	00000074 OS_StrCopy
0085861c g     O .rodata	00000104 jpeg_natural_order7
00854574 g     F .text	0000006c alt_hostfs_write
0080a384 g     F .text	00000128 jinit_marker_reader
0085b748 g     O .rwdata	00000002 OSMemNameSize
0085c128 g     O .bss	00000012 color_region
008567ac g     F .text	00000020 OSInitHookEnd
00842ab8 g     F .text	0000114c __ssvfiscanf_r
0085b774 g     O .rwdata	00000002 OSTCBPrioTblMax
0083d2d0 g     F .text	0000000c localeconv
008549f8 g     F .text	000000f4 epcs_read_buffer
0085b770 g     O .rwdata	00000002 OSTaskStatStkChkEn
00830224 g     F .text	0000012c jpeg_idct_1x2
00851f6c g     F .text	00000054 alt_epcs_flash_init
008496c4 g     F .text	00000050 alt_ic_isr_register
0085b744 g     O .rwdata	00000002 OSMemEn
00802b98 g     F .text	00000194 jpeg_read_raw_data
00834a6c g     F .text	00000078 _sscanf_r
0085b74e g     O .rwdata	00000002 OSMutexEn
0085b7ec g       *ABS*	00000000 _edata
00816030 g     F .text	00000180 jinit_arith_decoder
00853854 g     F .text	00000060 altera_avalon_uart_read_fd
0082b9ec g     F .text	000006ac jpeg_idct_8x4
00865460 g       *ABS*	00000000 _end
0082c80c g     F .text	00000128 jpeg_idct_2x1
00855ec4 g     F .text	00000068 alt_flash_open_dev
0085b8ac g     O .bss	00000001 OSIntNesting
00845658 g     F .text	00000164 __fputwc
008530f0 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
00851b80 g     F .text	000001d4 OSTimeDlyResume
0084cf3c g     F .text	0000014c OSFlagNameSet
008513c8 g     F .text	000001c0 OSTaskStkChk
0084979c g     F .text	0000008c alt_ic_irq_disable
00854db0 g     F .text	0000005c epcs_enter_4_bytes_mode
0085b74a g     O .rwdata	00000002 OSMemSize
00834b40 g     F .text	0000007c __swrite
0085b6e0 g     O .rwdata	00000004 __malloc_trim_threshold
0083d298 g     F .text	0000000c __locale_msgcharset
00821eb8 g     F .text	00000428 jpeg_idct_4x4
0085b8b0 g     O .bss	00000004 OSTCBCur
00832008 g     F .text	00000038 exit
0085b74c g     O .rwdata	00000002 OSMemTblSize
00833538 g     F .text	000000c4 _fwalk_reent
0083e184 g     F .text	000001fc __mdiff
00855f2c g     F .text	00000054 alt_flash_close_dev
008303d4 g     F .text	00000074 .hidden __modsi3
0085b6e4 g     O .rwdata	00000004 __ctype_ptr__
0085b818 g     O .bss	00000004 moveCommandBuffer
01000000 g       *ABS*	00000000 __alt_data_end
01004020 g     F .exceptions	00000000 alt_exception
00832760 g     F .text	00000004 __sfp_lock_release
0085b81c g     O .bss	00000004 BUTTON_SEM
0084ae88 g     F .text	00000058 OSInit
0085176c g     F .text	00000124 OSTaskQuery
0084f68c g     F .text	000000a8 OS_QInit
0083ee90 g     F .text	000000d0 __sccl
0084c110 g     F .text	00000054 OS_StrLen
0084e284 g     F .text	00000114 OSMemNameSet
00859170 g     O .rodata	00000101 _ctype_
0085b766 g     O .rwdata	00000002 OSTaskProfileEn
0085b8b4 g     O .bss	00000004 OSTime
0085b6f0 g     O .rwdata	00000004 __mbtowc
00853e3c g     F .text	00000054 altera_avalon_uart_close
00863bbc g     O .bss	00000800 OSTaskIdleStk
0080a4ac g     F .text	000001b4 jpeg_save_markers
0083279c g     F .text	000000f4 _fopen_r
0084959c g     F .text	00000034 _exit
0085e13c g     O .bss	00002000 motor_stk
00855a60 g     F .text	0000012c alt_alarm_start
0084ce14 g     F .text	00000128 OSFlagNameGet
00851d54 g     F .text	0000005c OSTimeGet
008465f4 g     F .text	0000010c .hidden __muldi3
00833760 g     F .text	000001bc __smakebuf_r
00834c20 g     F .text	00000098 strlen
00854aec g     F .text	00000054 epcs_write_enable
0085672c g     F .text	00000020 OSTaskSwHook
00849d48 g     F .text	0000015c open
00800b64 g     F .text	000001c4 cam_send_command
008643bc g     O .bss	00000b40 OSEventTbl
00848834 g     F .text	000000dc .hidden __gedf2
00864efc g     O .bss	00000510 OSTCBTbl
00845960 g     F .text	00000850 __gethex
00850094 g     F .text	00000100 OSSemSet
00831fbc g     F .text	0000004c clock
00814020 g     F .text	0000004c jcopy_block_row
0085b6f4 g     O .rwdata	00000004 __wctomb
00843f80 g     F .text	00000018 __sprint_r
0085b710 g     O .rwdata	00000004 alt_priority_mask
0084f8bc g     F .text	00000240 OSSemDel
0085b8b8 g     O .bss	00000004 OSFlagFreeList
00849714 g     F .text	00000088 alt_ic_irq_enable
0085b72c g     O .rwdata	00000002 OSEventNameSize
0080fb38 g     F .text	0000003c jpeg_free_small
0083ada0 g     F .text	0000001c __vfprintf_internal
0085b8bc g     O .bss	00000001 OSStatRdy
00802e00 g     F .text	00000118 jpeg_finish_output
0086540c g     O .bss	00000054 OSTCBPrioTbl
00853ecc g     F .text	00000268 altera_avalon_uart_read
00846598 g     F .text	0000005c _wctomb_r
0084a308 g     F .text	000000c4 __env_lock
0085b772 g     O .rwdata	00000002 OSTaskSwHookEn
0085b820 g     O .bss	00000004 moveCommandQueue
00848a04 g     F .text	000008fc .hidden __subdf3
00802d2c g     F .text	000000d4 jpeg_start_output
0085299c g     F .text	00000098 alt_epcs_flash_read
0086013c g     O .bss	00002000 wifi_stk
0083db24 g     F .text	000000b0 __lo0bits
0085b824 g     O .bss	00000004 foundCommandQueue
0085b7e4 g     O .rwdata	00000008 alt_alarm_list
00843cd8 g     F .text	00000194 _ungetc_r
0085b73a g     O .rwdata	00000002 OSFlagWidth
00855c6c g     F .text	00000060 _do_ctors
008464a8 g     F .text	000000c0 wcrtomb
008015e8 g     F .text	00000054 motorLeft
00849498 g     F .text	000000d8 close
00800d28 g     F .text	00000090 cam_uart_interrupt
0083052c g     F .text	000004c8 .hidden __addsf3
0082b214 g     F .text	000007d8 jpeg_idct_10x5
0085b868 g     O .bss	00000004 alt_envsem
00858978 g     O .rodata	00000050 jpeg_natural_order2
0085b8c0 g     O .bss	00000004 OSIdleCtrRun
0084b4cc g     F .text	00000020 OSVersion
0085b784 g     O .rwdata	00000002 OSTmrCfgWheelSize
00851890 g     F .text	00000070 OS_TaskStkClr
0085b75e g     O .rwdata	00000002 OSTaskCreateEn
008556f0 g     F .text	00000160 fifoed_avalon_uart_init
00822910 g     F .text	00000950 jpeg_idct_9x9
0084babc g     F .text	00000068 OS_EventWaitListInit
008457e0 g     F .text	00000080 fputwc
008567cc g     F .text	00000020 OSTaskIdleHook
0080d5cc g     F .text	000003d0 jinit_upsampler
00833930 g     F .text	00000014 free
00832764 g     F .text	00000004 __sinit_lock_acquire
00854bac g     F .text	0000011c epcs_write_buffer
0083d870 g     F .text	00000148 __multadd
00851588 g     F .text	000001e4 OSTaskSuspend
0083d848 g     F .text	00000028 _Bfree
00833744 g     F .text	0000001c _getenv_r
00854648 g     F .text	000001e4 alt_hostfs_fstat
0084c164 g     F .text	0000005c OS_TaskIdle
0085b78a g     O .rwdata	00000002 OSTmrTblSize
0084f530 g     F .text	0000015c OSQQuery



Disassembly of section .exceptions:

01004020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 1004020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 1004024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 1004028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 100402c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 1004030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 1004034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 1004038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 100403c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 1004040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 1004044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 1004048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 100404c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 1004050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 1004054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 1004058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 100405c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 1004060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 1004064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 1004068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 100406c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 1004070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 1004074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 1004078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 100407c:	10000326 	beq	r2,zero,100408c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 1004080:	20000226 	beq	r4,zero,100408c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 1004084:	10040fc0 	call	10040fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 1004088:	00000706 	br	10040a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 100408c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 1004090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 1004094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 1004098:	10041d00 	call	10041d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 100409c:	1000021e 	bne	r2,zero,10040a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 10040a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 10040a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 10040a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 10040ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 10040b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 10040b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 10040b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 10040bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 10040c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 10040c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 10040c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 10040cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 10040d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 10040d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 10040d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 10040dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 10040e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 10040e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 10040e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 10040ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 10040f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 10040f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 10040f8:	ef80083a 	eret

010040fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 10040fc:	defff904 	addi	sp,sp,-28
 1004100:	dfc00615 	stw	ra,24(sp)
 1004104:	df000515 	stw	fp,20(sp)
 1004108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 100410c:	084aee00 	call	84aee0 <OSIntEnter>
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 1004110:	0005313a 	rdctl	r2,ipending
 1004114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 1004118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 100411c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 1004120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 1004124:	00800044 	movi	r2,1
 1004128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 100412c:	e0fffb17 	ldw	r3,-20(fp)
 1004130:	e0bffc17 	ldw	r2,-16(fp)
 1004134:	1884703a 	and	r2,r3,r2
 1004138:	10001426 	beq	r2,zero,100418c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 100413c:	008021b4 	movhi	r2,134
 1004140:	10884f04 	addi	r2,r2,8508
 1004144:	e0fffd17 	ldw	r3,-12(fp)
 1004148:	180690fa 	slli	r3,r3,3
 100414c:	10c5883a 	add	r2,r2,r3
 1004150:	10c00017 	ldw	r3,0(r2)
 1004154:	008021b4 	movhi	r2,134
 1004158:	10884f04 	addi	r2,r2,8508
 100415c:	e13ffd17 	ldw	r4,-12(fp)
 1004160:	200890fa 	slli	r4,r4,3
 1004164:	1105883a 	add	r2,r2,r4
 1004168:	10800104 	addi	r2,r2,4
 100416c:	10800017 	ldw	r2,0(r2)
 1004170:	1009883a 	mov	r4,r2
 1004174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 1004178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 100417c:	0005313a 	rdctl	r2,ipending
 1004180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 1004184:	e0bfff17 	ldw	r2,-4(fp)
 1004188:	00000706 	br	10041a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 100418c:	e0bffc17 	ldw	r2,-16(fp)
 1004190:	1085883a 	add	r2,r2,r2
 1004194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 1004198:	e0bffd17 	ldw	r2,-12(fp)
 100419c:	10800044 	addi	r2,r2,1
 10041a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 10041a4:	003fe106 	br	100412c <__alt_mem_epcs_flash_controller_0+0xffffb12c>

    active = alt_irq_pending ();
 10041a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 10041ac:	e0bffb17 	ldw	r2,-20(fp)
 10041b0:	103fdb1e 	bne	r2,zero,1004120 <__alt_mem_epcs_flash_controller_0+0xffffb120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 10041b4:	084af2c0 	call	84af2c <OSIntExit>
}
 10041b8:	0001883a 	nop
 10041bc:	e037883a 	mov	sp,fp
 10041c0:	dfc00117 	ldw	ra,4(sp)
 10041c4:	df000017 	ldw	fp,0(sp)
 10041c8:	dec00204 	addi	sp,sp,8
 10041cc:	f800283a 	ret

010041d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 10041d0:	defffb04 	addi	sp,sp,-20
 10041d4:	dfc00415 	stw	ra,16(sp)
 10041d8:	df000315 	stw	fp,12(sp)
 10041dc:	df000304 	addi	fp,sp,12
 10041e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 10041e4:	00bfffc4 	movi	r2,-1
 10041e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 10041ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 10041f0:	d0a0b717 	ldw	r2,-32036(gp)
 10041f4:	10000726 	beq	r2,zero,1004214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 10041f8:	d0a0b717 	ldw	r2,-32036(gp)
 10041fc:	e0fffd17 	ldw	r3,-12(fp)
 1004200:	e1bffe17 	ldw	r6,-8(fp)
 1004204:	e17fff17 	ldw	r5,-4(fp)
 1004208:	1809883a 	mov	r4,r3
 100420c:	103ee83a 	callr	r2
 1004210:	00000206 	br	100421c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 1004214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 1004218:	0005883a 	mov	r2,zero
}
 100421c:	e037883a 	mov	sp,fp
 1004220:	dfc00117 	ldw	ra,4(sp)
 1004224:	df000017 	ldw	fp,0(sp)
 1004228:	dec00204 	addi	sp,sp,8
 100422c:	f800283a 	ret

Disassembly of section .text:

00800000 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800000:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  800004:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  800008:	068021b4 	movhi	gp,134
    ori gp, gp, %lo(_gp)
  80000c:	d68d7a14 	ori	gp,gp,13800
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800010:	00802174 	movhi	r2,133
    ori r2, r2, %lo(__bss_start)
  800014:	10adfb14 	ori	r2,r2,47084

    movhi r3, %hi(__bss_end)
  800018:	00c021b4 	movhi	r3,134
    ori r3, r3, %lo(__bss_end)
  80001c:	18d51814 	ori	r3,r3,21600

    beq r2, r3, 1f
  800020:	10c00326 	beq	r2,r3,800030 <_start+0x30>

0:
    stw zero, (r2)
  800024:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  800028:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  80002c:	10fffd36 	bltu	r2,r3,800024 <__alt_mem_epcs_flash_controller_0+0xff7f7024>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800030:	0849b640 	call	849b64 <alt_main>

00800034 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  800034:	003fff06 	br	800034 <__alt_mem_epcs_flash_controller_0+0xff7f7034>

00800038 <camera_task>:
 *      Author: Randy Baron
 */

#include "camera.h"

void camera_task(void* pdata){
  800038:	defff004 	addi	sp,sp,-64
  80003c:	dfc00f15 	stw	ra,60(sp)
  800040:	df000e15 	stw	fp,56(sp)
  800044:	df000e04 	addi	fp,sp,56
  800048:	e13fff15 	stw	r4,-4(fp)
	uint8_t leds = 0;
  80004c:	e03ff205 	stb	zero,-56(fp)

	uint16_t q = 0;
  800050:	e03ff28d 	sth	zero,-54(fp)
	uint16_t z = 0;
  800054:	e03ff30d 	sth	zero,-52(fp)
	uint8_t err;

	uint8_t colour = 0;
  800058:	e03ff905 	stb	zero,-28(fp)
	uint16_t motor_reply = 0;
  80005c:	e03ff98d 	sth	zero,-26(fp)

	uint8_t cam_reply = 0;
  800060:	e03ff385 	stb	zero,-50(fp)
	uint16_t bit_count = 0;
  800064:	e03ffa0d 	sth	zero,-24(fp)
	uint16_t packet_count = 0;
  800068:	e03ff40d 	sth	zero,-48(fp)
	uint16_t last_packet_byte_count = 0;
  80006c:	e03ff48d 	sth	zero,-46(fp)

	bool isGoodPacket = FALSE;
  800070:	e03ff505 	stb	zero,-44(fp)
	uint32_t checksum = 0;
  800074:	e03ff615 	stw	zero,-40(fp)
	uint32_t tempsum = 0;
  800078:	e03ff715 	stw	zero,-36(fp)
	uint16_t data_length = 0;
  80007c:	e03ff80d 	sth	zero,-32(fp)
	uint8_t cam_data_ack[CAM_COMMAND_LENGTH];

	uint8_t sync_delay = CAM_INIT_SYNC_DELAY;
  800080:	00800144 	movi	r2,5
  800084:	e0bff885 	stb	r2,-30(fp)
	bool synced = FALSE;
  800088:	e03ff8c5 	stb	zero,-29(fp)
	char* pic_location;
	size_t pic_size;
//	static FILE* picture;
	FILE* picture;

	uint32_t startTime = clock();
  80008c:	0831fbc0 	call	831fbc <clock>
  800090:	e0bffb15 	stw	r2,-20(fp)
	uint32_t endTime;

	while(1){
		leds++;
  800094:	e0bff203 	ldbu	r2,-56(fp)
  800098:	10800044 	addi	r2,r2,1
  80009c:	e0bff205 	stb	r2,-56(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(GREEN_LEDS_BASE, leds);
  8000a0:	e0fff203 	ldbu	r3,-56(fp)
  8000a4:	00804074 	movhi	r2,257
  8000a8:	10a83004 	addi	r2,r2,-24384
  8000ac:	10c00035 	stwio	r3,0(r2)
		//Wait for command from motor and then start camera sequence
		colour = (uint8_t)OSQPend(findCommandQueue, 0, &err);
  8000b0:	d0a08917 	ldw	r2,-32220(gp)
  8000b4:	e0fffd04 	addi	r3,fp,-12
  8000b8:	180d883a 	mov	r6,r3
  8000bc:	000b883a 	mov	r5,zero
  8000c0:	1009883a 	mov	r4,r2
  8000c4:	084ec540 	call	84ec54 <OSQPend>
  8000c8:	e0bff905 	stb	r2,-28(fp)
		leds++;
  8000cc:	e0bff203 	ldbu	r2,-56(fp)
  8000d0:	10800044 	addi	r2,r2,1
  8000d4:	e0bff205 	stb	r2,-56(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(GREEN_LEDS_BASE, leds);
  8000d8:	e0fff203 	ldbu	r3,-56(fp)
  8000dc:	00804074 	movhi	r2,257
  8000e0:	10a83004 	addi	r2,r2,-24384
  8000e4:	10c00035 	stwio	r3,0(r2)

		//Assign a memory address to a FILE pointer to store the picture
//		picture = open_memstream(&pic_location, &pic_size);
		printf("Starting to open...");
  8000e8:	01002174 	movhi	r4,133
  8000ec:	211af304 	addi	r4,r4,27596
  8000f0:	08344500 	call	834450 <printf>
		picture = fopen(CAM_PICTURE_OUTPUT, "w");
  8000f4:	d0a00017 	ldw	r2,-32768(gp)
  8000f8:	01402174 	movhi	r5,133
  8000fc:	295af804 	addi	r5,r5,27616
  800100:	1009883a 	mov	r4,r2
  800104:	08328900 	call	832890 <fopen>
  800108:	e0bffc15 	stw	r2,-16(fp)
		printf(" and done\n");
  80010c:	01002174 	movhi	r4,133
  800110:	211af904 	addi	r4,r4,27620
  800114:	08346d40 	call	8346d4 <puts>
		leds++;
  800118:	e0bff203 	ldbu	r2,-56(fp)
  80011c:	10800044 	addi	r2,r2,1
  800120:	e0bff205 	stb	r2,-56(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(GREEN_LEDS_BASE, leds);
  800124:	e0fff203 	ldbu	r3,-56(fp)
  800128:	00804074 	movhi	r2,257
  80012c:	10a83004 	addi	r2,r2,-24384
  800130:	10c00035 	stwio	r3,0(r2)

		//Reset to deal with any junk transmissions
		for (z = 0; z < CAM_COMMAND_LENGTH; z++){
  800134:	e03ff30d 	sth	zero,-52(fp)
  800138:	00001106 	br	800180 <camera_task+0x148>
			while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
  80013c:	0001883a 	nop
  800140:	00804074 	movhi	r2,257
  800144:	10a80204 	addi	r2,r2,-24568
  800148:	10800037 	ldwio	r2,0(r2)
  80014c:	1080100c 	andi	r2,r2,64
  800150:	103ffb26 	beq	r2,zero,800140 <__alt_mem_epcs_flash_controller_0+0xff7f7140>
			IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, CAM_REST[z]);
  800154:	e0fff30b 	ldhu	r3,-52(fp)
  800158:	d0a00284 	addi	r2,gp,-32758
  80015c:	1885883a 	add	r2,r3,r2
  800160:	10800003 	ldbu	r2,0(r2)
  800164:	10c03fcc 	andi	r3,r2,255
  800168:	00804074 	movhi	r2,257
  80016c:	10a80104 	addi	r2,r2,-24572
  800170:	10c00035 	stwio	r3,0(r2)
		printf(" and done\n");
		leds++;
		IOWR_ALTERA_AVALON_PIO_DATA(GREEN_LEDS_BASE, leds);

		//Reset to deal with any junk transmissions
		for (z = 0; z < CAM_COMMAND_LENGTH; z++){
  800174:	e0bff30b 	ldhu	r2,-52(fp)
  800178:	10800044 	addi	r2,r2,1
  80017c:	e0bff30d 	sth	r2,-52(fp)
  800180:	e0bff30b 	ldhu	r2,-52(fp)
  800184:	108001b0 	cmpltui	r2,r2,6
  800188:	103fec1e 	bne	r2,zero,80013c <__alt_mem_epcs_flash_controller_0+0xff7f713c>
			while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
			IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, CAM_REST[z]);
		}
		leds++;
  80018c:	e0bff203 	ldbu	r2,-56(fp)
  800190:	10800044 	addi	r2,r2,1
  800194:	e0bff205 	stb	r2,-56(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(GREEN_LEDS_BASE, leds);
  800198:	e0fff203 	ldbu	r3,-56(fp)
  80019c:	00804074 	movhi	r2,257
  8001a0:	10a83004 	addi	r2,r2,-24384
  8001a4:	10c00035 	stwio	r3,0(r2)
		* Documentation mentions this will take 25-60 attempts
		* Recommends an increasing delay between attempts
		* with an initial time of 5ms
		*/

		useData = FALSE;
  8001a8:	d0208405 	stb	zero,-32240(gp)
		for (q=0; q < CAM_MAX_ATTEMPTS; q++){
  8001ac:	e03ff28d 	sth	zero,-54(fp)
  8001b0:	00006b06 	br	800360 <camera_task+0x328>
			//Assume false until proven otherwise
			synced = FALSE;
  8001b4:	e03ff8c5 	stb	zero,-29(fp)

			//Send the sync command
			for (z=0; z < CAM_COMMAND_LENGTH; z++){
  8001b8:	e03ff30d 	sth	zero,-52(fp)
  8001bc:	00001106 	br	800204 <camera_task+0x1cc>
				while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
  8001c0:	0001883a 	nop
  8001c4:	00804074 	movhi	r2,257
  8001c8:	10a80204 	addi	r2,r2,-24568
  8001cc:	10800037 	ldwio	r2,0(r2)
  8001d0:	1080100c 	andi	r2,r2,64
  8001d4:	103ffb26 	beq	r2,zero,8001c4 <__alt_mem_epcs_flash_controller_0+0xff7f71c4>
				IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, CAM_SYNC[z]);
  8001d8:	e0fff30b 	ldhu	r3,-52(fp)
  8001dc:	d0a00104 	addi	r2,gp,-32764
  8001e0:	1885883a 	add	r2,r3,r2
  8001e4:	10800003 	ldbu	r2,0(r2)
  8001e8:	10c03fcc 	andi	r3,r2,255
  8001ec:	00804074 	movhi	r2,257
  8001f0:	10a80104 	addi	r2,r2,-24572
  8001f4:	10c00035 	stwio	r3,0(r2)
		for (q=0; q < CAM_MAX_ATTEMPTS; q++){
			//Assume false until proven otherwise
			synced = FALSE;

			//Send the sync command
			for (z=0; z < CAM_COMMAND_LENGTH; z++){
  8001f8:	e0bff30b 	ldhu	r2,-52(fp)
  8001fc:	10800044 	addi	r2,r2,1
  800200:	e0bff30d 	sth	r2,-52(fp)
  800204:	e0bff30b 	ldhu	r2,-52(fp)
  800208:	108001b0 	cmpltui	r2,r2,6
  80020c:	103fec1e 	bne	r2,zero,8001c0 <__alt_mem_epcs_flash_controller_0+0xff7f71c0>
				while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
				IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, CAM_SYNC[z]);
			}

			//Wait the recommended sync time as per doc
			OSTimeDlyHMSM(0, 0, 0, sync_delay);
  800210:	e0bff883 	ldbu	r2,-30(fp)
  800214:	100f883a 	mov	r7,r2
  800218:	000d883a 	mov	r6,zero
  80021c:	000b883a 	mov	r5,zero
  800220:	0009883a 	mov	r4,zero
  800224:	0851a040 	call	851a04 <OSTimeDlyHMSM>
			leds++;
  800228:	e0bff203 	ldbu	r2,-56(fp)
  80022c:	10800044 	addi	r2,r2,1
  800230:	e0bff205 	stb	r2,-56(fp)
			IOWR_ALTERA_AVALON_PIO_DATA(GREEN_LEDS_BASE, leds);
  800234:	e0fff203 	ldbu	r3,-56(fp)
  800238:	00804074 	movhi	r2,257
  80023c:	10a83004 	addi	r2,r2,-24384
  800240:	10c00035 	stwio	r3,0(r2)

			cam_reply = (uint8_t)OSQAccept(camCommandQueue, &err);
  800244:	d0a08817 	ldw	r2,-32224(gp)
  800248:	e0fffd04 	addi	r3,fp,-12
  80024c:	180b883a 	mov	r5,r3
  800250:	1009883a 	mov	r4,r2
  800254:	084e6300 	call	84e630 <OSQAccept>
  800258:	e0bff385 	stb	r2,-50(fp)
			if (cam_reply == CAM_ACK_SYNC[0]){
  80025c:	00bfea84 	movi	r2,-86
  800260:	10c03fcc 	andi	r3,r2,255
  800264:	e0bff383 	ldbu	r2,-50(fp)
  800268:	1880351e 	bne	r3,r2,800340 <camera_task+0x308>
				synced = TRUE;
  80026c:	00800044 	movi	r2,1
  800270:	e0bff8c5 	stb	r2,-29(fp)
				printf("Receiving %x", cam_reply);
  800274:	e0bff383 	ldbu	r2,-50(fp)
  800278:	100b883a 	mov	r5,r2
  80027c:	01002174 	movhi	r4,133
  800280:	211afc04 	addi	r4,r4,27632
  800284:	08344500 	call	834450 <printf>
				for (z=1; z < CAM_COMMAND_LENGTH; z++){
  800288:	00800044 	movi	r2,1
  80028c:	e0bff30d 	sth	r2,-52(fp)
  800290:	00002606 	br	80032c <camera_task+0x2f4>
					cam_reply = (uint8_t)OSQPend(camCommandQueue, 0, &err);
  800294:	d0a08817 	ldw	r2,-32224(gp)
  800298:	e0fffd04 	addi	r3,fp,-12
  80029c:	180d883a 	mov	r6,r3
  8002a0:	000b883a 	mov	r5,zero
  8002a4:	1009883a 	mov	r4,r2
  8002a8:	084ec540 	call	84ec54 <OSQPend>
  8002ac:	e0bff385 	stb	r2,-50(fp)
					if ((cam_reply != CAM_ACK_SYNC[z]) && (z != CAM_ACK_IGNORE)){
  8002b0:	e0fff30b 	ldhu	r3,-52(fp)
  8002b4:	d0a00d04 	addi	r2,gp,-32716
  8002b8:	1885883a 	add	r2,r3,r2
  8002bc:	10800003 	ldbu	r2,0(r2)
  8002c0:	10c03fcc 	andi	r3,r2,255
  8002c4:	e0bff383 	ldbu	r2,-50(fp)
  8002c8:	18801026 	beq	r3,r2,80030c <camera_task+0x2d4>
  8002cc:	e0bff30b 	ldhu	r2,-52(fp)
  8002d0:	108000e0 	cmpeqi	r2,r2,3
  8002d4:	10000d1e 	bne	r2,zero,80030c <camera_task+0x2d4>
						printf("Got %x expected %x\n", cam_reply, CAM_ACK_SYNC[z]);
  8002d8:	e13ff383 	ldbu	r4,-50(fp)
  8002dc:	e0fff30b 	ldhu	r3,-52(fp)
  8002e0:	d0a00d04 	addi	r2,gp,-32716
  8002e4:	1885883a 	add	r2,r3,r2
  8002e8:	10800003 	ldbu	r2,0(r2)
  8002ec:	10803fcc 	andi	r2,r2,255
  8002f0:	100d883a 	mov	r6,r2
  8002f4:	200b883a 	mov	r5,r4
  8002f8:	01002174 	movhi	r4,133
  8002fc:	211b0004 	addi	r4,r4,27648
  800300:	08344500 	call	834450 <printf>
						synced = FALSE;
  800304:	e03ff8c5 	stb	zero,-29(fp)
						break;
  800308:	00000b06 	br	800338 <camera_task+0x300>
					}else{
						printf(" %x", cam_reply);
  80030c:	e0bff383 	ldbu	r2,-50(fp)
  800310:	100b883a 	mov	r5,r2
  800314:	01002174 	movhi	r4,133
  800318:	211b0504 	addi	r4,r4,27668
  80031c:	08344500 	call	834450 <printf>

			cam_reply = (uint8_t)OSQAccept(camCommandQueue, &err);
			if (cam_reply == CAM_ACK_SYNC[0]){
				synced = TRUE;
				printf("Receiving %x", cam_reply);
				for (z=1; z < CAM_COMMAND_LENGTH; z++){
  800320:	e0bff30b 	ldhu	r2,-52(fp)
  800324:	10800044 	addi	r2,r2,1
  800328:	e0bff30d 	sth	r2,-52(fp)
  80032c:	e0bff30b 	ldhu	r2,-52(fp)
  800330:	108001b0 	cmpltui	r2,r2,6
  800334:	103fd71e 	bne	r2,zero,800294 <__alt_mem_epcs_flash_controller_0+0xff7f7294>
						break;
					}else{
						printf(" %x", cam_reply);
					}
				}
				printf("\n");
  800338:	01000284 	movi	r4,10
  80033c:	08345fc0 	call	8345fc <putchar>
			}

			if (synced){
  800340:	e0bff8c3 	ldbu	r2,-29(fp)
  800344:	10000a1e 	bne	r2,zero,800370 <camera_task+0x338>
				break;
			}else{
				sync_delay++;
  800348:	e0bff883 	ldbu	r2,-30(fp)
  80034c:	10800044 	addi	r2,r2,1
  800350:	e0bff885 	stb	r2,-30(fp)
		* Recommends an increasing delay between attempts
		* with an initial time of 5ms
		*/

		useData = FALSE;
		for (q=0; q < CAM_MAX_ATTEMPTS; q++){
  800354:	e0bff28b 	ldhu	r2,-54(fp)
  800358:	10800044 	addi	r2,r2,1
  80035c:	e0bff28d 	sth	r2,-54(fp)
  800360:	e0bff28b 	ldhu	r2,-54(fp)
  800364:	10800f30 	cmpltui	r2,r2,60
  800368:	103f921e 	bne	r2,zero,8001b4 <__alt_mem_epcs_flash_controller_0+0xff7f71b4>
  80036c:	00000106 	br	800374 <camera_task+0x33c>
				}
				printf("\n");
			}

			if (synced){
				break;
  800370:	0001883a 	nop
			}else{
				sync_delay++;
			}
		}

		if (synced){
  800374:	e0bff8c3 	ldbu	r2,-29(fp)
  800378:	10000a26 	beq	r2,zero,8003a4 <camera_task+0x36c>
			printf("Cam synced after %i attempts\n", sync_delay);
  80037c:	e0bff883 	ldbu	r2,-30(fp)
  800380:	100b883a 	mov	r5,r2
  800384:	01002174 	movhi	r4,133
  800388:	211b0604 	addi	r4,r4,27672
  80038c:	08344500 	call	834450 <printf>
			IOWR_ALTERA_AVALON_PIO_DATA(GREEN_LEDS_BASE, 0x0F);
  800390:	00c003c4 	movi	r3,15
  800394:	00804074 	movhi	r2,257
  800398:	10a83004 	addi	r2,r2,-24384
  80039c:	10c00035 	stwio	r3,0(r2)
  8003a0:	00000506 	br	8003b8 <camera_task+0x380>
		}else{
			printf("Cam sync failure after %i attempts\n", sync_delay);
  8003a4:	e0bff883 	ldbu	r2,-30(fp)
  8003a8:	100b883a 	mov	r5,r2
  8003ac:	01002174 	movhi	r4,133
  8003b0:	211b0e04 	addi	r4,r4,27704
  8003b4:	08344500 	call	834450 <printf>
			//return;
		}

		//Send ACK to camera to ACK its SYNC
		for (z=0; z < CAM_COMMAND_LENGTH; z++){
  8003b8:	e03ff30d 	sth	zero,-52(fp)
  8003bc:	00001106 	br	800404 <camera_task+0x3cc>
			while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
  8003c0:	0001883a 	nop
  8003c4:	00804074 	movhi	r2,257
  8003c8:	10a80204 	addi	r2,r2,-24568
  8003cc:	10800037 	ldwio	r2,0(r2)
  8003d0:	1080100c 	andi	r2,r2,64
  8003d4:	103ffb26 	beq	r2,zero,8003c4 <__alt_mem_epcs_flash_controller_0+0xff7f73c4>
			IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, CAM_ACK_SYNC[z]);
  8003d8:	e0fff30b 	ldhu	r3,-52(fp)
  8003dc:	d0a00d04 	addi	r2,gp,-32716
  8003e0:	1885883a 	add	r2,r3,r2
  8003e4:	10800003 	ldbu	r2,0(r2)
  8003e8:	10c03fcc 	andi	r3,r2,255
  8003ec:	00804074 	movhi	r2,257
  8003f0:	10a80104 	addi	r2,r2,-24572
  8003f4:	10c00035 	stwio	r3,0(r2)
			printf("Cam sync failure after %i attempts\n", sync_delay);
			//return;
		}

		//Send ACK to camera to ACK its SYNC
		for (z=0; z < CAM_COMMAND_LENGTH; z++){
  8003f8:	e0bff30b 	ldhu	r2,-52(fp)
  8003fc:	10800044 	addi	r2,r2,1
  800400:	e0bff30d 	sth	r2,-52(fp)
  800404:	e0bff30b 	ldhu	r2,-52(fp)
  800408:	108001b0 	cmpltui	r2,r2,6
  80040c:	103fec1e 	bne	r2,zero,8003c0 <__alt_mem_epcs_flash_controller_0+0xff7f73c0>
			while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
			IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, CAM_ACK_SYNC[z]);
		}

		//Recommended by doc
		OSTimeDlyHMSM(0, 0, 2, 0);
  800410:	000f883a 	mov	r7,zero
  800414:	01800084 	movi	r6,2
  800418:	000b883a 	mov	r5,zero
  80041c:	0009883a 	mov	r4,zero
  800420:	0851a040 	call	851a04 <OSTimeDlyHMSM>

		//Turn on camera
		printf("INIT ");
  800424:	01002174 	movhi	r4,133
  800428:	211b1704 	addi	r4,r4,27740
  80042c:	08344500 	call	834450 <printf>
		if(!cam_send_command(CAM_INIT, CAM_ACK_INIT, CAM_COMMAND_LENGTH, camCommandQueue)){
  800430:	d0a08817 	ldw	r2,-32224(gp)
  800434:	100f883a 	mov	r7,r2
  800438:	01800184 	movi	r6,6
  80043c:	d1600e84 	addi	r5,gp,-32710
  800440:	d1200404 	addi	r4,gp,-32752
  800444:	0800b640 	call	800b64 <cam_send_command>
  800448:	1080005c 	xori	r2,r2,1
  80044c:	10803fcc 	andi	r2,r2,255
  800450:	10000326 	beq	r2,zero,800460 <camera_task+0x428>
			printf("Error at init\n");
  800454:	01002174 	movhi	r4,133
  800458:	211b1904 	addi	r4,r4,27748
  80045c:	08346d40 	call	8346d4 <puts>
		}

		//Send package size into to camera
		printf("SIZE ");
  800460:	01002174 	movhi	r4,133
  800464:	211b1d04 	addi	r4,r4,27764
  800468:	08344500 	call	834450 <printf>
		if(!cam_send_command(CAM_SIZE, CAM_ACK_SIZE, CAM_COMMAND_LENGTH, camCommandQueue)){
  80046c:	d0a08817 	ldw	r2,-32224(gp)
  800470:	100f883a 	mov	r7,r2
  800474:	01800184 	movi	r6,6
  800478:	d1601004 	addi	r5,gp,-32704
  80047c:	d1200584 	addi	r4,gp,-32746
  800480:	0800b640 	call	800b64 <cam_send_command>
  800484:	1080005c 	xori	r2,r2,1
  800488:	10803fcc 	andi	r2,r2,255
  80048c:	10000326 	beq	r2,zero,80049c <camera_task+0x464>
			printf("Error at size\n");
  800490:	01002174 	movhi	r4,133
  800494:	211b1f04 	addi	r4,r4,27772
  800498:	08346d40 	call	8346d4 <puts>
		}

		//Specify luminosity for pictures
		printf("LUMI ");
  80049c:	01002174 	movhi	r4,133
  8004a0:	211b2304 	addi	r4,r4,27788
  8004a4:	08344500 	call	834450 <printf>
		if(!cam_send_command(CAM_LUMI, CAM_ACK_LUMI, CAM_COMMAND_LENGTH, camCommandQueue)){
  8004a8:	d0a08817 	ldw	r2,-32224(gp)
  8004ac:	100f883a 	mov	r7,r2
  8004b0:	01800184 	movi	r6,6
  8004b4:	d1601184 	addi	r5,gp,-32698
  8004b8:	d1200704 	addi	r4,gp,-32740
  8004bc:	0800b640 	call	800b64 <cam_send_command>
  8004c0:	1080005c 	xori	r2,r2,1
  8004c4:	10803fcc 	andi	r2,r2,255
  8004c8:	10000326 	beq	r2,zero,8004d8 <camera_task+0x4a0>
			printf("Error at lumi\n");
  8004cc:	01002174 	movhi	r4,133
  8004d0:	211b2504 	addi	r4,r4,27796
  8004d4:	08346d40 	call	8346d4 <puts>
		}

		//Tell camera to take picture
		printf("SNAP ");
  8004d8:	01002174 	movhi	r4,133
  8004dc:	211b2904 	addi	r4,r4,27812
  8004e0:	08344500 	call	834450 <printf>
		if(!cam_send_command(CAM_SNAP, CAM_ACK_SNAP, CAM_COMMAND_LENGTH, camCommandQueue)){
  8004e4:	d0a08817 	ldw	r2,-32224(gp)
  8004e8:	100f883a 	mov	r7,r2
  8004ec:	01800184 	movi	r6,6
  8004f0:	d1601304 	addi	r5,gp,-32692
  8004f4:	d1200884 	addi	r4,gp,-32734
  8004f8:	0800b640 	call	800b64 <cam_send_command>
  8004fc:	1080005c 	xori	r2,r2,1
  800500:	10803fcc 	andi	r2,r2,255
  800504:	10000326 	beq	r2,zero,800514 <camera_task+0x4dc>
			printf("Error at snap\n");
  800508:	01002174 	movhi	r4,133
  80050c:	211b2b04 	addi	r4,r4,27820
  800510:	08346d40 	call	8346d4 <puts>
		}

		//Tell camera to start sending the picture
		printf("GRAB ");
  800514:	01002174 	movhi	r4,133
  800518:	211b2f04 	addi	r4,r4,27836
  80051c:	08344500 	call	834450 <printf>
		if(!cam_send_command(CAM_GRAB, CAM_ACK_GRAB, CAM_COMMAND_LENGTH, camCommandQueue)){
  800520:	d0a08817 	ldw	r2,-32224(gp)
  800524:	100f883a 	mov	r7,r2
  800528:	01800184 	movi	r6,6
  80052c:	d1601484 	addi	r5,gp,-32686
  800530:	d1200a04 	addi	r4,gp,-32728
  800534:	0800b640 	call	800b64 <cam_send_command>
  800538:	1080005c 	xori	r2,r2,1
  80053c:	10803fcc 	andi	r2,r2,255
  800540:	10000326 	beq	r2,zero,800550 <camera_task+0x518>
			printf("Error at grab\n");
  800544:	01002174 	movhi	r4,133
  800548:	211b3104 	addi	r4,r4,27844
  80054c:	08346d40 	call	8346d4 <puts>
		}

		//Receive the package count, not an ACK and needs special parsing
		printf ("PARSE ");
  800550:	01002174 	movhi	r4,133
  800554:	211b3504 	addi	r4,r4,27860
  800558:	08344500 	call	834450 <printf>
		cam_reply = (uint8_t)OSQPend(camCommandQueue, 0, &err);
  80055c:	d0a08817 	ldw	r2,-32224(gp)
  800560:	e0fffd04 	addi	r3,fp,-12
  800564:	180d883a 	mov	r6,r3
  800568:	000b883a 	mov	r5,zero
  80056c:	1009883a 	mov	r4,r2
  800570:	084ec540 	call	84ec54 <OSQPend>
  800574:	e0bff385 	stb	r2,-50(fp)
		if (cam_reply == CAM_DATA[0]){
  800578:	00bfea84 	movi	r2,-86
  80057c:	10c03fcc 	andi	r3,r2,255
  800580:	e0bff383 	ldbu	r2,-50(fp)
  800584:	1880721e 	bne	r3,r2,800750 <camera_task+0x718>
			printf("receiving %x", cam_reply);
  800588:	e0bff383 	ldbu	r2,-50(fp)
  80058c:	100b883a 	mov	r5,r2
  800590:	01002174 	movhi	r4,133
  800594:	211b3704 	addi	r4,r4,27868
  800598:	08344500 	call	834450 <printf>
			for (z = 1; z < CAM_DATA_START; z++){
  80059c:	00800044 	movi	r2,1
  8005a0:	e0bff30d 	sth	r2,-52(fp)
  8005a4:	00002206 	br	800630 <camera_task+0x5f8>
				cam_reply = (uint8_t)OSQPend(camCommandQueue, 0, &err);
  8005a8:	d0a08817 	ldw	r2,-32224(gp)
  8005ac:	e0fffd04 	addi	r3,fp,-12
  8005b0:	180d883a 	mov	r6,r3
  8005b4:	000b883a 	mov	r5,zero
  8005b8:	1009883a 	mov	r4,r2
  8005bc:	084ec540 	call	84ec54 <OSQPend>
  8005c0:	e0bff385 	stb	r2,-50(fp)
				if ((cam_reply != CAM_DATA[z])){
  8005c4:	e0fff30b 	ldhu	r3,-52(fp)
  8005c8:	d0a00b84 	addi	r2,gp,-32722
  8005cc:	1885883a 	add	r2,r3,r2
  8005d0:	10800003 	ldbu	r2,0(r2)
  8005d4:	10c03fcc 	andi	r3,r2,255
  8005d8:	e0bff383 	ldbu	r2,-50(fp)
  8005dc:	18800c26 	beq	r3,r2,800610 <camera_task+0x5d8>
					printf("got %x expected %x\n", cam_reply, CAM_DATA[z]);
  8005e0:	e13ff383 	ldbu	r4,-50(fp)
  8005e4:	e0fff30b 	ldhu	r3,-52(fp)
  8005e8:	d0a00b84 	addi	r2,gp,-32722
  8005ec:	1885883a 	add	r2,r3,r2
  8005f0:	10800003 	ldbu	r2,0(r2)
  8005f4:	10803fcc 	andi	r2,r2,255
  8005f8:	100d883a 	mov	r6,r2
  8005fc:	200b883a 	mov	r5,r4
  800600:	01002174 	movhi	r4,133
  800604:	211b3b04 	addi	r4,r4,27884
  800608:	08344500 	call	834450 <printf>
  80060c:	00000506 	br	800624 <camera_task+0x5ec>
				}else{
					printf(" %x", cam_reply);
  800610:	e0bff383 	ldbu	r2,-50(fp)
  800614:	100b883a 	mov	r5,r2
  800618:	01002174 	movhi	r4,133
  80061c:	211b0504 	addi	r4,r4,27668
  800620:	08344500 	call	834450 <printf>
		//Receive the package count, not an ACK and needs special parsing
		printf ("PARSE ");
		cam_reply = (uint8_t)OSQPend(camCommandQueue, 0, &err);
		if (cam_reply == CAM_DATA[0]){
			printf("receiving %x", cam_reply);
			for (z = 1; z < CAM_DATA_START; z++){
  800624:	e0bff30b 	ldhu	r2,-52(fp)
  800628:	10800044 	addi	r2,r2,1
  80062c:	e0bff30d 	sth	r2,-52(fp)
  800630:	e0bff30b 	ldhu	r2,-52(fp)
  800634:	108000f0 	cmpltui	r2,r2,3
  800638:	103fdb1e 	bne	r2,zero,8005a8 <__alt_mem_epcs_flash_controller_0+0xff7f75a8>
			//The last three packages will contain the packet count
			//Need to account for the byte offsets and get a single
			//integer value that contains the total number of bits
			//that will be sent by the camera

			bit_count = 0;
  80063c:	e03ffa0d 	sth	zero,-24(fp)
			cam_reply = (uint8_t)OSQPend(camCommandQueue, 0, &err);
  800640:	d0a08817 	ldw	r2,-32224(gp)
  800644:	e0fffd04 	addi	r3,fp,-12
  800648:	180d883a 	mov	r6,r3
  80064c:	000b883a 	mov	r5,zero
  800650:	1009883a 	mov	r4,r2
  800654:	084ec540 	call	84ec54 <OSQPend>
  800658:	e0bff385 	stb	r2,-50(fp)
			printf(" %x", cam_reply);
  80065c:	e0bff383 	ldbu	r2,-50(fp)
  800660:	100b883a 	mov	r5,r2
  800664:	01002174 	movhi	r4,133
  800668:	211b0504 	addi	r4,r4,27668
  80066c:	08344500 	call	834450 <printf>
			bit_count = cam_reply;
  800670:	e0bff383 	ldbu	r2,-50(fp)
  800674:	e0bffa0d 	sth	r2,-24(fp)

			cam_reply = (uint8_t)OSQPend(camCommandQueue, 0, &err);
  800678:	d0a08817 	ldw	r2,-32224(gp)
  80067c:	e0fffd04 	addi	r3,fp,-12
  800680:	180d883a 	mov	r6,r3
  800684:	000b883a 	mov	r5,zero
  800688:	1009883a 	mov	r4,r2
  80068c:	084ec540 	call	84ec54 <OSQPend>
  800690:	e0bff385 	stb	r2,-50(fp)
			printf(" %lx", cam_reply);
  800694:	e0bff383 	ldbu	r2,-50(fp)
  800698:	100b883a 	mov	r5,r2
  80069c:	01002174 	movhi	r4,133
  8006a0:	211b4004 	addi	r4,r4,27904
  8006a4:	08344500 	call	834450 <printf>
			bit_count = bit_count + (0x100 * cam_reply);
  8006a8:	e0bff383 	ldbu	r2,-50(fp)
  8006ac:	1004923a 	slli	r2,r2,8
  8006b0:	1007883a 	mov	r3,r2
  8006b4:	e0bffa0b 	ldhu	r2,-24(fp)
  8006b8:	1885883a 	add	r2,r3,r2
  8006bc:	e0bffa0d 	sth	r2,-24(fp)

			cam_reply = (uint8_t)OSQPend(camCommandQueue, 0, &err);
  8006c0:	d0a08817 	ldw	r2,-32224(gp)
  8006c4:	e0fffd04 	addi	r3,fp,-12
  8006c8:	180d883a 	mov	r6,r3
  8006cc:	000b883a 	mov	r5,zero
  8006d0:	1009883a 	mov	r4,r2
  8006d4:	084ec540 	call	84ec54 <OSQPend>
  8006d8:	e0bff385 	stb	r2,-50(fp)
			printf(" %x", cam_reply);
  8006dc:	e0bff383 	ldbu	r2,-50(fp)
  8006e0:	100b883a 	mov	r5,r2
  8006e4:	01002174 	movhi	r4,133
  8006e8:	211b0504 	addi	r4,r4,27668
  8006ec:	08344500 	call	834450 <printf>
			bit_count = bit_count + (0x10000 * cam_reply);
			printf("\nByte count of %i\n", bit_count);
  8006f0:	e0bffa0b 	ldhu	r2,-24(fp)
  8006f4:	100b883a 	mov	r5,r2
  8006f8:	01002174 	movhi	r4,133
  8006fc:	211b4204 	addi	r4,r4,27912
  800700:	08344500 	call	834450 <printf>

			//Determine the number of packets based on the given bit values
			packet_count = (bit_count / (CAM_PACKAGE_LENGTH - 6)) + 1;
  800704:	e0bffa0b 	ldhu	r2,-24(fp)
  800708:	01407e84 	movi	r5,506
  80070c:	1009883a 	mov	r4,r2
  800710:	08304480 	call	830448 <__udivsi3>
  800714:	10800044 	addi	r2,r2,1
  800718:	e0bff40d 	sth	r2,-48(fp)
			last_packet_byte_count = bit_count % (CAM_PACKAGE_LENGTH - 6);
  80071c:	e0bffa0b 	ldhu	r2,-24(fp)
  800720:	01407e84 	movi	r5,506
  800724:	1009883a 	mov	r4,r2
  800728:	08304ac0 	call	8304ac <__umodsi3>
  80072c:	e0bff48d 	sth	r2,-46(fp)
			printf("Expecting %i total packets with final one being %i bits\n", packet_count, last_packet_byte_count);
  800730:	e0bff40b 	ldhu	r2,-48(fp)
  800734:	e0fff48b 	ldhu	r3,-46(fp)
  800738:	180d883a 	mov	r6,r3
  80073c:	100b883a 	mov	r5,r2
  800740:	01002174 	movhi	r4,133
  800744:	211b4704 	addi	r4,r4,27932
  800748:	08344500 	call	834450 <printf>
  80074c:	00000806 	br	800770 <camera_task+0x738>
		}else{
			printf("got %x expected %x\n", cam_reply, CAM_DATA[0]);
  800750:	e0bff383 	ldbu	r2,-50(fp)
  800754:	00ffea84 	movi	r3,-86
  800758:	18c03fcc 	andi	r3,r3,255
  80075c:	180d883a 	mov	r6,r3
  800760:	100b883a 	mov	r5,r2
  800764:	01002174 	movhi	r4,133
  800768:	211b3b04 	addi	r4,r4,27884
  80076c:	08344500 	call	834450 <printf>
		}

		//Initialize the ACK command for data packets
		for(q = 0; q< CAM_COMMAND_LENGTH; q++){
  800770:	e03ff28d 	sth	zero,-54(fp)
  800774:	00000b06 	br	8007a4 <camera_task+0x76c>
			cam_data_ack[q] = CAM_ACK_DATA[q];
  800778:	e0bff28b 	ldhu	r2,-54(fp)
  80077c:	e13ff28b 	ldhu	r4,-54(fp)
  800780:	d0e01604 	addi	r3,gp,-32680
  800784:	20c7883a 	add	r3,r4,r3
  800788:	18c00003 	ldbu	r3,0(r3)
  80078c:	e13ffd44 	addi	r4,fp,-11
  800790:	2085883a 	add	r2,r4,r2
  800794:	10c00005 	stb	r3,0(r2)
		}else{
			printf("got %x expected %x\n", cam_reply, CAM_DATA[0]);
		}

		//Initialize the ACK command for data packets
		for(q = 0; q< CAM_COMMAND_LENGTH; q++){
  800798:	e0bff28b 	ldhu	r2,-54(fp)
  80079c:	10800044 	addi	r2,r2,1
  8007a0:	e0bff28d 	sth	r2,-54(fp)
  8007a4:	e0bff28b 	ldhu	r2,-54(fp)
  8007a8:	108001b0 	cmpltui	r2,r2,6
  8007ac:	103ff21e 	bne	r2,zero,800778 <__alt_mem_epcs_flash_controller_0+0xff7f7778>
			cam_data_ack[q] = CAM_ACK_DATA[q];
		}

		//TODO clean up numbers here once operational
		//Receive data, start with normal packets
		useData = TRUE;
  8007b0:	00800044 	movi	r2,1
  8007b4:	d0a08405 	stb	r2,-32240(gp)
		synced = TRUE;
  8007b8:	00800044 	movi	r2,1
  8007bc:	e0bff8c5 	stb	r2,-29(fp)
		q = 0;
  8007c0:	e03ff28d 	sth	zero,-54(fp)
		printf("DATA STARTING\n");
  8007c4:	01002174 	movhi	r4,133
  8007c8:	211b5604 	addi	r4,r4,27992
  8007cc:	08346d40 	call	8346d4 <puts>
		while(q < packet_count){
  8007d0:	0000ad06 	br	800a88 <camera_task+0xa50>

			//Prepare for next iteration
			isGoodPacket = TRUE;
  8007d4:	00800044 	movi	r2,1
  8007d8:	e0bff505 	stb	r2,-44(fp)
			checksum = 0;
  8007dc:	e03ff615 	stw	zero,-40(fp)
			tempsum = 0;
  8007e0:	e03ff715 	stw	zero,-36(fp)
			if (q == (packet_count - 1)){
  8007e4:	e0fff28b 	ldhu	r3,-54(fp)
  8007e8:	e0bff40b 	ldhu	r2,-48(fp)
  8007ec:	10bfffc4 	addi	r2,r2,-1
  8007f0:	1880031e 	bne	r3,r2,800800 <camera_task+0x7c8>
				data_length = last_packet_byte_count;
  8007f4:	e0bff48b 	ldhu	r2,-46(fp)
  8007f8:	e0bff80d 	sth	r2,-32(fp)
  8007fc:	00000206 	br	800808 <camera_task+0x7d0>
			}else{
				data_length = CAM_PACKAGE_LENGTH - 2;
  800800:	00807f84 	movi	r2,510
  800804:	e0bff80d 	sth	r2,-32(fp)
			}

			OSQFlush(camPackageQueue);
  800808:	d0a08a17 	ldw	r2,-32216(gp)
  80080c:	1009883a 	mov	r4,r2
  800810:	084eb9c0 	call	84eb9c <OSQFlush>

			//Indicate which packet we intend to receive
			cam_data_ack[4] = q;
  800814:	e0bff28b 	ldhu	r2,-54(fp)
  800818:	e0bffe45 	stb	r2,-7(fp)
			for (z = 0; z < CAM_COMMAND_LENGTH; z++){
  80081c:	e03ff30d 	sth	zero,-52(fp)
  800820:	00001106 	br	800868 <camera_task+0x830>
				while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
  800824:	0001883a 	nop
  800828:	00804074 	movhi	r2,257
  80082c:	10a80204 	addi	r2,r2,-24568
  800830:	10800037 	ldwio	r2,0(r2)
  800834:	1080100c 	andi	r2,r2,64
  800838:	103ffb26 	beq	r2,zero,800828 <__alt_mem_epcs_flash_controller_0+0xff7f7828>
				IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, cam_data_ack[z]);
  80083c:	e0bff30b 	ldhu	r2,-52(fp)
  800840:	e0fffd44 	addi	r3,fp,-11
  800844:	1885883a 	add	r2,r3,r2
  800848:	10800003 	ldbu	r2,0(r2)
  80084c:	10c03fcc 	andi	r3,r2,255
  800850:	00804074 	movhi	r2,257
  800854:	10a80104 	addi	r2,r2,-24572
  800858:	10c00035 	stwio	r3,0(r2)

			OSQFlush(camPackageQueue);

			//Indicate which packet we intend to receive
			cam_data_ack[4] = q;
			for (z = 0; z < CAM_COMMAND_LENGTH; z++){
  80085c:	e0bff30b 	ldhu	r2,-52(fp)
  800860:	10800044 	addi	r2,r2,1
  800864:	e0bff30d 	sth	r2,-52(fp)
  800868:	e0bff30b 	ldhu	r2,-52(fp)
  80086c:	108001b0 	cmpltui	r2,r2,6
  800870:	103fec1e 	bne	r2,zero,800824 <__alt_mem_epcs_flash_controller_0+0xff7f7824>
				while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
				IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, cam_data_ack[z]);
			}

			//First two bytes are ID, make sure they match the ID we want
			for(z = 0; z < 2; z++){
  800874:	e03ff30d 	sth	zero,-52(fp)
  800878:	00001e06 	br	8008f4 <camera_task+0x8bc>
				if(isGoodPacket){
  80087c:	e0bff503 	ldbu	r2,-44(fp)
  800880:	10001926 	beq	r2,zero,8008e8 <camera_task+0x8b0>
					cam_reply = (uint8_t)OSQPend(camPackageQueue, MAX_TIME, &err);
  800884:	d0a08a17 	ldw	r2,-32216(gp)
  800888:	e0fffd04 	addi	r3,fp,-12
  80088c:	180d883a 	mov	r6,r3
  800890:	0143e804 	movi	r5,4000
  800894:	1009883a 	mov	r4,r2
  800898:	084ec540 	call	84ec54 <OSQPend>
  80089c:	e0bff385 	stb	r2,-50(fp)
					if(err == OS_TIMEOUT){
  8008a0:	e0bffd03 	ldbu	r2,-12(fp)
  8008a4:	10803fcc 	andi	r2,r2,255
  8008a8:	10800298 	cmpnei	r2,r2,10
  8008ac:	1000021e 	bne	r2,zero,8008b8 <camera_task+0x880>
//						printf("TIMEOUT AT ID\n");
						isGoodPacket = FALSE;
  8008b0:	e03ff505 	stb	zero,-44(fp)
  8008b4:	00000c06 	br	8008e8 <camera_task+0x8b0>
					}else{
						if((cam_reply != (1 + cam_data_ack[z+4])) && (cam_reply != 0)){
  8008b8:	e0fff383 	ldbu	r3,-50(fp)
  8008bc:	e0bff30b 	ldhu	r2,-52(fp)
  8008c0:	10800104 	addi	r2,r2,4
  8008c4:	e13ffd44 	addi	r4,fp,-11
  8008c8:	2085883a 	add	r2,r4,r2
  8008cc:	10800003 	ldbu	r2,0(r2)
  8008d0:	10803fcc 	andi	r2,r2,255
  8008d4:	10800044 	addi	r2,r2,1
  8008d8:	18800326 	beq	r3,r2,8008e8 <camera_task+0x8b0>
  8008dc:	e0bff383 	ldbu	r2,-50(fp)
  8008e0:	10000126 	beq	r2,zero,8008e8 <camera_task+0x8b0>
							isGoodPacket = FALSE;
  8008e4:	e03ff505 	stb	zero,-44(fp)
				while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
				IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, cam_data_ack[z]);
			}

			//First two bytes are ID, make sure they match the ID we want
			for(z = 0; z < 2; z++){
  8008e8:	e0bff30b 	ldhu	r2,-52(fp)
  8008ec:	10800044 	addi	r2,r2,1
  8008f0:	e0bff30d 	sth	r2,-52(fp)
  8008f4:	e0bff30b 	ldhu	r2,-52(fp)
  8008f8:	108000b0 	cmpltui	r2,r2,2
  8008fc:	103fdf1e 	bne	r2,zero,80087c <__alt_mem_epcs_flash_controller_0+0xff7f787c>

			//Next two bytes are data size, print it out until I decide what to do with it
			//Should be LOWER_BYTE UPPER_BYTE of data size and should equal PACKAGE_LENGTH - 6
			//until of course we hit the final packet so it might be a good dea to use this
			//as the loop counter for data parsing loop
			for(z = 0; z < 2; z++){
  800900:	e03ff30d 	sth	zero,-52(fp)
  800904:	00001106 	br	80094c <camera_task+0x914>
				if(isGoodPacket){
  800908:	e0bff503 	ldbu	r2,-44(fp)
  80090c:	10000c26 	beq	r2,zero,800940 <camera_task+0x908>
					cam_reply = (uint8_t)OSQPend(camPackageQueue, MAX_TIME, &err);
  800910:	d0a08a17 	ldw	r2,-32216(gp)
  800914:	e0fffd04 	addi	r3,fp,-12
  800918:	180d883a 	mov	r6,r3
  80091c:	0143e804 	movi	r5,4000
  800920:	1009883a 	mov	r4,r2
  800924:	084ec540 	call	84ec54 <OSQPend>
  800928:	e0bff385 	stb	r2,-50(fp)
					if(err == OS_TIMEOUT){
  80092c:	e0bffd03 	ldbu	r2,-12(fp)
  800930:	10803fcc 	andi	r2,r2,255
  800934:	10800298 	cmpnei	r2,r2,10
  800938:	1000011e 	bne	r2,zero,800940 <camera_task+0x908>
//						printf("TIMEOUT AT SIZE\n");
						isGoodPacket = FALSE;
  80093c:	e03ff505 	stb	zero,-44(fp)

			//Next two bytes are data size, print it out until I decide what to do with it
			//Should be LOWER_BYTE UPPER_BYTE of data size and should equal PACKAGE_LENGTH - 6
			//until of course we hit the final packet so it might be a good dea to use this
			//as the loop counter for data parsing loop
			for(z = 0; z < 2; z++){
  800940:	e0bff30b 	ldhu	r2,-52(fp)
  800944:	10800044 	addi	r2,r2,1
  800948:	e0bff30d 	sth	r2,-52(fp)
  80094c:	e0bff30b 	ldhu	r2,-52(fp)
  800950:	108000b0 	cmpltui	r2,r2,2
  800954:	103fec1e 	bne	r2,zero,800908 <__alt_mem_epcs_flash_controller_0+0xff7f7908>
					}
				}
			}
//			printf("\n");

			for(z = 4; z < data_length; z++){
  800958:	00800104 	movi	r2,4
  80095c:	e0bff30d 	sth	r2,-52(fp)
  800960:	00001d06 	br	8009d8 <camera_task+0x9a0>
				if(isGoodPacket){
  800964:	e0bff503 	ldbu	r2,-44(fp)
  800968:	10001326 	beq	r2,zero,8009b8 <camera_task+0x980>
					cam_reply = (uint8_t)OSQPend(camPackageQueue, MAX_TIME, &err);
  80096c:	d0a08a17 	ldw	r2,-32216(gp)
  800970:	e0fffd04 	addi	r3,fp,-12
  800974:	180d883a 	mov	r6,r3
  800978:	0143e804 	movi	r5,4000
  80097c:	1009883a 	mov	r4,r2
  800980:	084ec540 	call	84ec54 <OSQPend>
  800984:	e0bff385 	stb	r2,-50(fp)
					if(err == OS_TIMEOUT){
  800988:	e0bffd03 	ldbu	r2,-12(fp)
  80098c:	10803fcc 	andi	r2,r2,255
  800990:	10800298 	cmpnei	r2,r2,10
  800994:	1000031e 	bne	r2,zero,8009a4 <camera_task+0x96c>
//						printf("TIMEOUT AT DATA on byte %i\n", z);
						isGoodPacket = FALSE;
  800998:	e03ff505 	stb	zero,-44(fp)
						cam_reply = 0x00;
  80099c:	e03ff385 	stb	zero,-50(fp)
  8009a0:	00000606 	br	8009bc <camera_task+0x984>
					}else{
						checksum = checksum + cam_reply;
  8009a4:	e0bff383 	ldbu	r2,-50(fp)
  8009a8:	e0fff617 	ldw	r3,-40(fp)
  8009ac:	1885883a 	add	r2,r3,r2
  8009b0:	e0bff615 	stw	r2,-40(fp)
  8009b4:	00000106 	br	8009bc <camera_task+0x984>
					}
				}else{
					cam_reply = 0x00;
  8009b8:	e03ff385 	stb	zero,-50(fp)
				}
				putc(cam_reply, picture);
  8009bc:	e0bff383 	ldbu	r2,-50(fp)
  8009c0:	e17ffc17 	ldw	r5,-16(fp)
  8009c4:	1009883a 	mov	r4,r2
  8009c8:	083452c0 	call	83452c <putc>
					}
				}
			}
//			printf("\n");

			for(z = 4; z < data_length; z++){
  8009cc:	e0bff30b 	ldhu	r2,-52(fp)
  8009d0:	10800044 	addi	r2,r2,1
  8009d4:	e0bff30d 	sth	r2,-52(fp)
  8009d8:	e0fff30b 	ldhu	r3,-52(fp)
  8009dc:	e0bff80b 	ldhu	r2,-32(fp)
  8009e0:	18bfe036 	bltu	r3,r2,800964 <__alt_mem_epcs_flash_controller_0+0xff7f7964>
				}
				putc(cam_reply, picture);
			}

			//Next two bytes are checksum
			for (z = 0; z < 2; z++){
  8009e4:	e03ff30d 	sth	zero,-52(fp)
  8009e8:	00001a06 	br	800a54 <camera_task+0xa1c>
				if(isGoodPacket){
  8009ec:	e0bff503 	ldbu	r2,-44(fp)
  8009f0:	10001526 	beq	r2,zero,800a48 <camera_task+0xa10>
					cam_reply = (uint8_t)OSQPend(camPackageQueue, MAX_TIME, &err);
  8009f4:	d0a08a17 	ldw	r2,-32216(gp)
  8009f8:	e0fffd04 	addi	r3,fp,-12
  8009fc:	180d883a 	mov	r6,r3
  800a00:	0143e804 	movi	r5,4000
  800a04:	1009883a 	mov	r4,r2
  800a08:	084ec540 	call	84ec54 <OSQPend>
  800a0c:	e0bff385 	stb	r2,-50(fp)
					if(err == OS_TIMEOUT){
  800a10:	e0bffd03 	ldbu	r2,-12(fp)
  800a14:	10803fcc 	andi	r2,r2,255
  800a18:	10800298 	cmpnei	r2,r2,10
  800a1c:	1000021e 	bne	r2,zero,800a28 <camera_task+0x9f0>
//						printf("TIMEOUT AT CHECKSUM");
						isGoodPacket = FALSE;
  800a20:	e03ff505 	stb	zero,-44(fp)
  800a24:	00000806 	br	800a48 <camera_task+0xa10>
					}else{
						tempsum = tempsum + (cam_reply << (8*z));
  800a28:	e0fff383 	ldbu	r3,-50(fp)
  800a2c:	e0bff30b 	ldhu	r2,-52(fp)
  800a30:	100490fa 	slli	r2,r2,3
  800a34:	1884983a 	sll	r2,r3,r2
  800a38:	1007883a 	mov	r3,r2
  800a3c:	e0bff717 	ldw	r2,-36(fp)
  800a40:	10c5883a 	add	r2,r2,r3
  800a44:	e0bff715 	stw	r2,-36(fp)
				}
				putc(cam_reply, picture);
			}

			//Next two bytes are checksum
			for (z = 0; z < 2; z++){
  800a48:	e0bff30b 	ldhu	r2,-52(fp)
  800a4c:	10800044 	addi	r2,r2,1
  800a50:	e0bff30d 	sth	r2,-52(fp)
  800a54:	e0bff30b 	ldhu	r2,-52(fp)
  800a58:	108000b0 	cmpltui	r2,r2,2
  800a5c:	103fe31e 	bne	r2,zero,8009ec <__alt_mem_epcs_flash_controller_0+0xff7f79ec>
			if (checksum != tempsum){
//				printf("Invalid checksum, got %x expected %x\n", checksum, tempsum);
				//isGoodPacket = FALSE;
			}

			if(isGoodPacket){
  800a60:	e0bff503 	ldbu	r2,-44(fp)
  800a64:	10000426 	beq	r2,zero,800a78 <camera_task+0xa40>
//				printf("Packet %i good\n", q);
				q++;
  800a68:	e0bff28b 	ldhu	r2,-54(fp)
  800a6c:	10800044 	addi	r2,r2,1
  800a70:	e0bff28d 	sth	r2,-54(fp)
  800a74:	00000406 	br	800a88 <camera_task+0xa50>
			}else{
//				printf("Packet %i bad, moving on\n", q);
				//OSTimeDlyHMSM(0, 0, 1, 0);
				q++;
  800a78:	e0bff28b 	ldhu	r2,-54(fp)
  800a7c:	10800044 	addi	r2,r2,1
  800a80:	e0bff28d 	sth	r2,-54(fp)
				synced = FALSE;
  800a84:	e03ff8c5 	stb	zero,-29(fp)
		//Receive data, start with normal packets
		useData = TRUE;
		synced = TRUE;
		q = 0;
		printf("DATA STARTING\n");
		while(q < packet_count){
  800a88:	e0fff28b 	ldhu	r3,-54(fp)
  800a8c:	e0bff40b 	ldhu	r2,-48(fp)
  800a90:	18bf5036 	bltu	r3,r2,8007d4 <__alt_mem_epcs_flash_controller_0+0xff7f77d4>
				q++;
				synced = FALSE;
			}
		}

		if (synced){
  800a94:	e0bff8c3 	ldbu	r2,-29(fp)
  800a98:	10000426 	beq	r2,zero,800aac <camera_task+0xa74>
			printf("Camera done perfect\n");
  800a9c:	01002174 	movhi	r4,133
  800aa0:	211b5a04 	addi	r4,r4,28008
  800aa4:	08346d40 	call	8346d4 <puts>
  800aa8:	00000306 	br	800ab8 <camera_task+0xa80>
		}else{
			printf("Camera done with err\n");
  800aac:	01002174 	movhi	r4,133
  800ab0:	211b5f04 	addi	r4,r4,28028
  800ab4:	08346d40 	call	8346d4 <puts>
		}

		for (z = 0; z < CAM_COMMAND_LENGTH; z++){
  800ab8:	e03ff30d 	sth	zero,-52(fp)
  800abc:	00001106 	br	800b04 <camera_task+0xacc>
			while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
  800ac0:	0001883a 	nop
  800ac4:	00804074 	movhi	r2,257
  800ac8:	10a80204 	addi	r2,r2,-24568
  800acc:	10800037 	ldwio	r2,0(r2)
  800ad0:	1080100c 	andi	r2,r2,64
  800ad4:	103ffb26 	beq	r2,zero,800ac4 <__alt_mem_epcs_flash_controller_0+0xff7f7ac4>
			IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, CAM_ACK_DEND[z]);
  800ad8:	e0fff30b 	ldhu	r3,-52(fp)
  800adc:	d0a01784 	addi	r2,gp,-32674
  800ae0:	1885883a 	add	r2,r3,r2
  800ae4:	10800003 	ldbu	r2,0(r2)
  800ae8:	10c03fcc 	andi	r3,r2,255
  800aec:	00804074 	movhi	r2,257
  800af0:	10a80104 	addi	r2,r2,-24572
  800af4:	10c00035 	stwio	r3,0(r2)
			printf("Camera done perfect\n");
		}else{
			printf("Camera done with err\n");
		}

		for (z = 0; z < CAM_COMMAND_LENGTH; z++){
  800af8:	e0bff30b 	ldhu	r2,-52(fp)
  800afc:	10800044 	addi	r2,r2,1
  800b00:	e0bff30d 	sth	r2,-52(fp)
  800b04:	e0bff30b 	ldhu	r2,-52(fp)
  800b08:	108001b0 	cmpltui	r2,r2,6
  800b0c:	103fec1e 	bne	r2,zero,800ac0 <__alt_mem_epcs_flash_controller_0+0xff7f7ac0>

		/* Image must be closed so it can be read
		 * Once closed, pass to image processing algorithm
		 * Close again for safety and then pass back to motor
		 */
		fclose(picture);
  800b10:	e13ffc17 	ldw	r4,-16(fp)
  800b14:	08321300 	call	832130 <fclose>
		picture = fopen(CAM_PICTURE_OUTPUT, "r");
  800b18:	d0a00017 	ldw	r2,-32768(gp)
  800b1c:	01402174 	movhi	r5,133
  800b20:	295b6504 	addi	r5,r5,28052
  800b24:	1009883a 	mov	r4,r2
  800b28:	08328900 	call	832890 <fopen>
  800b2c:	e0bffc15 	stw	r2,-16(fp)
//		picture = fmemopen(pic_location, pic_size, "r");
		motor_reply = find_region(picture, colour);
  800b30:	e0bff903 	ldbu	r2,-28(fp)
  800b34:	100b883a 	mov	r5,r2
  800b38:	e13ffc17 	ldw	r4,-16(fp)
  800b3c:	0800db80 	call	800db8 <find_region>
  800b40:	e0bff98d 	sth	r2,-26(fp)
		fclose(picture);
  800b44:	e13ffc17 	ldw	r4,-16(fp)
  800b48:	08321300 	call	832130 <fclose>

		OSQPost(moveCommandQueue, (void*) motor_reply);
  800b4c:	d0a08e17 	ldw	r2,-32200(gp)
  800b50:	e0fff98b 	ldhu	r3,-26(fp)
  800b54:	180b883a 	mov	r5,r3
  800b58:	1009883a 	mov	r4,r2
  800b5c:	084f04c0 	call	84f04c <OSQPost>
	}
  800b60:	003d4c06 	br	800094 <__alt_mem_epcs_flash_controller_0+0xff7f7094>

00800b64 <cam_send_command>:
}

bool cam_send_command(uint8_t* to_send, uint8_t* to_recieve, uint16_t size, OS_EVENT* used_queue){
  800b64:	defff904 	addi	sp,sp,-28
  800b68:	dfc00615 	stw	ra,24(sp)
  800b6c:	df000515 	stw	fp,20(sp)
  800b70:	df000504 	addi	fp,sp,20
  800b74:	e13ffc15 	stw	r4,-16(fp)
  800b78:	e17ffd15 	stw	r5,-12(fp)
  800b7c:	3005883a 	mov	r2,r6
  800b80:	e1ffff15 	stw	r7,-4(fp)
  800b84:	e0bffe0d 	sth	r2,-8(fp)
	uint8_t z;
	uint8_t err;
	uint8_t cam_reply;

	//Flush queue so we know we have an empty one
	OSQFlush(used_queue);
  800b88:	e13fff17 	ldw	r4,-4(fp)
  800b8c:	084eb9c0 	call	84eb9c <OSQFlush>
	for (z = 0; z < size; z++){
  800b90:	e03ffb05 	stb	zero,-20(fp)
  800b94:	00001106 	br	800bdc <cam_send_command+0x78>
		while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
  800b98:	0001883a 	nop
  800b9c:	00804074 	movhi	r2,257
  800ba0:	10a80204 	addi	r2,r2,-24568
  800ba4:	10800037 	ldwio	r2,0(r2)
  800ba8:	1080100c 	andi	r2,r2,64
  800bac:	103ffb26 	beq	r2,zero,800b9c <__alt_mem_epcs_flash_controller_0+0xff7f7b9c>
		IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, to_send[z]);
  800bb0:	e0bffb03 	ldbu	r2,-20(fp)
  800bb4:	e0fffc17 	ldw	r3,-16(fp)
  800bb8:	1885883a 	add	r2,r3,r2
  800bbc:	10800003 	ldbu	r2,0(r2)
  800bc0:	10c03fcc 	andi	r3,r2,255
  800bc4:	00804074 	movhi	r2,257
  800bc8:	10a80104 	addi	r2,r2,-24572
  800bcc:	10c00035 	stwio	r3,0(r2)
	uint8_t err;
	uint8_t cam_reply;

	//Flush queue so we know we have an empty one
	OSQFlush(used_queue);
	for (z = 0; z < size; z++){
  800bd0:	e0bffb03 	ldbu	r2,-20(fp)
  800bd4:	10800044 	addi	r2,r2,1
  800bd8:	e0bffb05 	stb	r2,-20(fp)
  800bdc:	e0bffb03 	ldbu	r2,-20(fp)
  800be0:	10ffffcc 	andi	r3,r2,65535
  800be4:	e0bffe0b 	ldhu	r2,-8(fp)
  800be8:	18bfeb36 	bltu	r3,r2,800b98 <__alt_mem_epcs_flash_controller_0+0xff7f7b98>
		while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_TRDY_MSK));
		IOWR_FIFOED_AVALON_UART_TXDATA(CAM_UART_BASE, to_send[z]);
	}

	cam_reply = (uint8_t)OSQPend(used_queue, 0, &err);
  800bec:	e0bffb84 	addi	r2,fp,-18
  800bf0:	100d883a 	mov	r6,r2
  800bf4:	000b883a 	mov	r5,zero
  800bf8:	e13fff17 	ldw	r4,-4(fp)
  800bfc:	084ec540 	call	84ec54 <OSQPend>
  800c00:	e0bffb45 	stb	r2,-19(fp)
	if (cam_reply == to_recieve[0]){
  800c04:	e0bffd17 	ldw	r2,-12(fp)
  800c08:	10800003 	ldbu	r2,0(r2)
  800c0c:	10c03fcc 	andi	r3,r2,255
  800c10:	e0bffb43 	ldbu	r2,-19(fp)
  800c14:	1880351e 	bne	r3,r2,800cec <cam_send_command+0x188>
		printf("receiving %x", cam_reply);
  800c18:	e0bffb43 	ldbu	r2,-19(fp)
  800c1c:	100b883a 	mov	r5,r2
  800c20:	01002174 	movhi	r4,133
  800c24:	211b3704 	addi	r4,r4,27868
  800c28:	08344500 	call	834450 <printf>
		for (z = 1; z < size; z++){
  800c2c:	00800044 	movi	r2,1
  800c30:	e0bffb05 	stb	r2,-20(fp)
  800c34:	00002506 	br	800ccc <cam_send_command+0x168>
			cam_reply = (uint8_t)OSQPend(used_queue, 0, &err);
  800c38:	e0bffb84 	addi	r2,fp,-18
  800c3c:	100d883a 	mov	r6,r2
  800c40:	000b883a 	mov	r5,zero
  800c44:	e13fff17 	ldw	r4,-4(fp)
  800c48:	084ec540 	call	84ec54 <OSQPend>
  800c4c:	e0bffb45 	stb	r2,-19(fp)
			if ((cam_reply != to_recieve[z]) && (z != CAM_ACK_IGNORE)){
  800c50:	e0bffb03 	ldbu	r2,-20(fp)
  800c54:	e0fffd17 	ldw	r3,-12(fp)
  800c58:	1885883a 	add	r2,r3,r2
  800c5c:	10800003 	ldbu	r2,0(r2)
  800c60:	10c03fcc 	andi	r3,r2,255
  800c64:	e0bffb43 	ldbu	r2,-19(fp)
  800c68:	18801026 	beq	r3,r2,800cac <cam_send_command+0x148>
  800c6c:	e0bffb03 	ldbu	r2,-20(fp)
  800c70:	108000e0 	cmpeqi	r2,r2,3
  800c74:	10000d1e 	bne	r2,zero,800cac <cam_send_command+0x148>
				printf("got %x expected %x\n", cam_reply, to_recieve[z]);
  800c78:	e13ffb43 	ldbu	r4,-19(fp)
  800c7c:	e0bffb03 	ldbu	r2,-20(fp)
  800c80:	e0fffd17 	ldw	r3,-12(fp)
  800c84:	1885883a 	add	r2,r3,r2
  800c88:	10800003 	ldbu	r2,0(r2)
  800c8c:	10803fcc 	andi	r2,r2,255
  800c90:	100d883a 	mov	r6,r2
  800c94:	200b883a 	mov	r5,r4
  800c98:	01002174 	movhi	r4,133
  800c9c:	211b3b04 	addi	r4,r4,27884
  800ca0:	08344500 	call	834450 <printf>
				return FALSE;
  800ca4:	0005883a 	mov	r2,zero
  800ca8:	00001a06 	br	800d14 <cam_send_command+0x1b0>
			}else{
				printf(" %x", cam_reply);
  800cac:	e0bffb43 	ldbu	r2,-19(fp)
  800cb0:	100b883a 	mov	r5,r2
  800cb4:	01002174 	movhi	r4,133
  800cb8:	211b0504 	addi	r4,r4,27668
  800cbc:	08344500 	call	834450 <printf>
	}

	cam_reply = (uint8_t)OSQPend(used_queue, 0, &err);
	if (cam_reply == to_recieve[0]){
		printf("receiving %x", cam_reply);
		for (z = 1; z < size; z++){
  800cc0:	e0bffb03 	ldbu	r2,-20(fp)
  800cc4:	10800044 	addi	r2,r2,1
  800cc8:	e0bffb05 	stb	r2,-20(fp)
  800ccc:	e0bffb03 	ldbu	r2,-20(fp)
  800cd0:	10ffffcc 	andi	r3,r2,65535
  800cd4:	e0bffe0b 	ldhu	r2,-8(fp)
  800cd8:	18bfd736 	bltu	r3,r2,800c38 <__alt_mem_epcs_flash_controller_0+0xff7f7c38>
				return FALSE;
			}else{
				printf(" %x", cam_reply);
			}
		}
		printf("\n");
  800cdc:	01000284 	movi	r4,10
  800ce0:	08345fc0 	call	8345fc <putchar>
	}else{
		printf("got %x expected %x\n", cam_reply, to_recieve[0]);
		return FALSE;
	}

	return TRUE;
  800ce4:	00800044 	movi	r2,1
  800ce8:	00000a06 	br	800d14 <cam_send_command+0x1b0>
				printf(" %x", cam_reply);
			}
		}
		printf("\n");
	}else{
		printf("got %x expected %x\n", cam_reply, to_recieve[0]);
  800cec:	e0fffb43 	ldbu	r3,-19(fp)
  800cf0:	e0bffd17 	ldw	r2,-12(fp)
  800cf4:	10800003 	ldbu	r2,0(r2)
  800cf8:	10803fcc 	andi	r2,r2,255
  800cfc:	100d883a 	mov	r6,r2
  800d00:	180b883a 	mov	r5,r3
  800d04:	01002174 	movhi	r4,133
  800d08:	211b3b04 	addi	r4,r4,27884
  800d0c:	08344500 	call	834450 <printf>
		return FALSE;
  800d10:	0005883a 	mov	r2,zero
	}

	return TRUE;
}
  800d14:	e037883a 	mov	sp,fp
  800d18:	dfc00117 	ldw	ra,4(sp)
  800d1c:	df000017 	ldw	fp,0(sp)
  800d20:	dec00204 	addi	sp,sp,8
  800d24:	f800283a 	ret

00800d28 <cam_uart_interrupt>:

void cam_uart_interrupt(void * context){
  800d28:	defffc04 	addi	sp,sp,-16
  800d2c:	dfc00315 	stw	ra,12(sp)
  800d30:	df000215 	stw	fp,8(sp)
  800d34:	df000204 	addi	fp,sp,8
  800d38:	e13fff15 	stw	r4,-4(fp)
	uint8_t read = 0;
  800d3c:	e03ffe05 	stb	zero,-8(fp)

	while(!(IORD_FIFOED_AVALON_UART_STATUS(CAM_UART_BASE) & FIFOED_AVALON_UART_STATUS_RRDY_MSK));
  800d40:	0001883a 	nop
  800d44:	00804074 	movhi	r2,257
  800d48:	10a80204 	addi	r2,r2,-24568
  800d4c:	10800037 	ldwio	r2,0(r2)
  800d50:	1080200c 	andi	r2,r2,128
  800d54:	103ffb26 	beq	r2,zero,800d44 <__alt_mem_epcs_flash_controller_0+0xff7f7d44>
	read = IORD_FIFOED_AVALON_UART_RXDATA(CAM_UART_BASE);
  800d58:	00804074 	movhi	r2,257
  800d5c:	10a80004 	addi	r2,r2,-24576
  800d60:	10800037 	ldwio	r2,0(r2)
  800d64:	e0bffe05 	stb	r2,-8(fp)

	if (useData){
  800d68:	d0a08403 	ldbu	r2,-32240(gp)
  800d6c:	10803fcc 	andi	r2,r2,255
  800d70:	10000626 	beq	r2,zero,800d8c <cam_uart_interrupt+0x64>
		OSQPost(camPackageQueue, (void*) read);
  800d74:	d0a08a17 	ldw	r2,-32216(gp)
  800d78:	e0fffe03 	ldbu	r3,-8(fp)
  800d7c:	180b883a 	mov	r5,r3
  800d80:	1009883a 	mov	r4,r2
  800d84:	084f04c0 	call	84f04c <OSQPost>
	}else{
		OSQPost(camCommandQueue, (void*) read);
	}
}
  800d88:	00000506 	br	800da0 <cam_uart_interrupt+0x78>
	read = IORD_FIFOED_AVALON_UART_RXDATA(CAM_UART_BASE);

	if (useData){
		OSQPost(camPackageQueue, (void*) read);
	}else{
		OSQPost(camCommandQueue, (void*) read);
  800d8c:	d0a08817 	ldw	r2,-32224(gp)
  800d90:	e0fffe03 	ldbu	r3,-8(fp)
  800d94:	180b883a 	mov	r5,r3
  800d98:	1009883a 	mov	r4,r2
  800d9c:	084f04c0 	call	84f04c <OSQPost>
	}
}
  800da0:	0001883a 	nop
  800da4:	e037883a 	mov	sp,fp
  800da8:	dfc00117 	ldw	ra,4(sp)
  800dac:	df000017 	ldw	fp,0(sp)
  800db0:	dec00204 	addi	sp,sp,8
  800db4:	f800283a 	ret

00800db8 <find_region>:

//http://stackoverflow.com/questions/694080/how-do-i-read-jpeg-and-png-pixels-in-c-on-linux

#include "imagepro.h"

uint16_t find_region(FILE* picture, uint8_t region){
  800db8:	deff2704 	addi	sp,sp,-868
  800dbc:	dfc0d815 	stw	ra,864(sp)
  800dc0:	df00d715 	stw	fp,860(sp)
  800dc4:	dc00d615 	stw	r16,856(sp)
  800dc8:	df00d704 	addi	fp,sp,860
  800dcc:	e13ffd15 	stw	r4,-12(fp)
  800dd0:	2805883a 	mov	r2,r5
  800dd4:	e0bffe05 	stb	r2,-8(fp)
	uint32_t endTime;

	JSAMPARRAY pJpegBuffer;       /* Output row buffer */
	int row_stride;       /* physical row width in output buffer */

	startTime = clock();
  800dd8:	0831fbc0 	call	831fbc <clock>
  800ddc:	e0bf2e15 	stw	r2,-840(fp)

	cinfo.err = jpeg_std_error(&jerr);
  800de0:	e0bfdc04 	addi	r2,fp,-144
  800de4:	1009883a 	mov	r4,r2
  800de8:	080dd140 	call	80dd14 <jpeg_std_error>
  800dec:	e0bf6215 	stw	r2,-632(fp)
	jpeg_create_decompress(&cinfo);
  800df0:	e0bf6204 	addi	r2,fp,-632
  800df4:	01807a04 	movi	r6,488
  800df8:	01401684 	movi	r5,90
  800dfc:	1009883a 	mov	r4,r2
  800e00:	0801bc40 	call	801bc4 <jpeg_CreateDecompress>
	jpeg_stdio_src(&cinfo, picture);
  800e04:	e0bf6204 	addi	r2,fp,-632
  800e08:	e17ffd17 	ldw	r5,-12(fp)
  800e0c:	1009883a 	mov	r4,r2
  800e10:	08031d40 	call	8031d4 <jpeg_stdio_src>
	(void) jpeg_read_header(&cinfo, TRUE);
  800e14:	e0bf6204 	addi	r2,fp,-632
  800e18:	01400044 	movi	r5,1
  800e1c:	1009883a 	mov	r4,r2
  800e20:	080224c0 	call	80224c <jpeg_read_header>
	(void) jpeg_start_decompress(&cinfo);
  800e24:	e0bf6204 	addi	r2,fp,-632
  800e28:	1009883a 	mov	r4,r2
  800e2c:	08027280 	call	802728 <jpeg_start_decompress>
	width = cinfo.output_width;
  800e30:	e0bf7e17 	ldw	r2,-520(fp)
  800e34:	e0bf2f0d 	sth	r2,-836(fp)
	height = cinfo.output_height;
  800e38:	e0bf7f17 	ldw	r2,-516(fp)
  800e3c:	e0bf2f8d 	sth	r2,-834(fp)

	//Initialize... something. Clearly important
	row_stride = width * cinfo.output_components;
  800e40:	e0bf2f0b 	ldhu	r2,-836(fp)
  800e44:	e0ff8117 	ldw	r3,-508(fp)
  800e48:	180b883a 	mov	r5,r3
  800e4c:	1009883a 	mov	r4,r2
  800e50:	08305040 	call	830504 <__mulsi3>
  800e54:	e0bf3015 	stw	r2,-832(fp)
	pJpegBuffer = (*cinfo.mem->alloc_sarray)
  800e58:	e0bf6317 	ldw	r2,-628(fp)
  800e5c:	10800217 	ldw	r2,8(r2)
  800e60:	e13f3017 	ldw	r4,-832(fp)
  800e64:	e0ff6204 	addi	r3,fp,-632
  800e68:	01c00044 	movi	r7,1
  800e6c:	200d883a 	mov	r6,r4
  800e70:	01400044 	movi	r5,1
  800e74:	1809883a 	mov	r4,r3
  800e78:	103ee83a 	callr	r2
  800e7c:	e0bf3115 	stw	r2,-828(fp)
	((j_common_ptr) &cinfo, JPOOL_IMAGE, row_stride, 1);

	//Initialize the regions struct array
	for (y=0; y < REGION_COUNT; y++){
  800e80:	e03f2a0d 	sth	zero,-856(fp)
  800e84:	00003306 	br	800f54 <find_region+0x19c>
		regions[y].confidence = 0;
  800e88:	e0bf2a0b 	ldhu	r2,-856(fp)
  800e8c:	01400484 	movi	r5,18
  800e90:	1009883a 	mov	r4,r2
  800e94:	08305040 	call	830504 <__mulsi3>
  800e98:	e0ff2904 	addi	r3,fp,-860
  800e9c:	1885883a 	add	r2,r3,r2
  800ea0:	10800c04 	addi	r2,r2,48
  800ea4:	1000000d 	sth	zero,0(r2)
		regions[y].pixels_detected = 0;
  800ea8:	e0bf2a0b 	ldhu	r2,-856(fp)
  800eac:	01400484 	movi	r5,18
  800eb0:	1009883a 	mov	r4,r2
  800eb4:	08305040 	call	830504 <__mulsi3>
  800eb8:	e0ff2904 	addi	r3,fp,-860
  800ebc:	1885883a 	add	r2,r3,r2
  800ec0:	10800c84 	addi	r2,r2,50
  800ec4:	1000000d 	sth	zero,0(r2)
		regions[y].cols_traversed = 0;
  800ec8:	e0bf2a0b 	ldhu	r2,-856(fp)
  800ecc:	01400484 	movi	r5,18
  800ed0:	1009883a 	mov	r4,r2
  800ed4:	08305040 	call	830504 <__mulsi3>
  800ed8:	e0ff2904 	addi	r3,fp,-860
  800edc:	1885883a 	add	r2,r3,r2
  800ee0:	10800d84 	addi	r2,r2,54
  800ee4:	1000000d 	sth	zero,0(r2)
		regions[y].rows_traversed = 0;
  800ee8:	e0bf2a0b 	ldhu	r2,-856(fp)
  800eec:	01400484 	movi	r5,18
  800ef0:	1009883a 	mov	r4,r2
  800ef4:	08305040 	call	830504 <__mulsi3>
  800ef8:	e0ff2904 	addi	r3,fp,-860
  800efc:	1885883a 	add	r2,r3,r2
  800f00:	10800d04 	addi	r2,r2,52
  800f04:	1000000d 	sth	zero,0(r2)
		regions[y].x = 0;
  800f08:	e0bf2a0b 	ldhu	r2,-856(fp)
  800f0c:	01400484 	movi	r5,18
  800f10:	1009883a 	mov	r4,r2
  800f14:	08305040 	call	830504 <__mulsi3>
  800f18:	e0ff2904 	addi	r3,fp,-860
  800f1c:	1885883a 	add	r2,r3,r2
  800f20:	10800e04 	addi	r2,r2,56
  800f24:	1000000d 	sth	zero,0(r2)
		regions[y].y = 0;
  800f28:	e0bf2a0b 	ldhu	r2,-856(fp)
  800f2c:	01400484 	movi	r5,18
  800f30:	1009883a 	mov	r4,r2
  800f34:	08305040 	call	830504 <__mulsi3>
  800f38:	e0ff2904 	addi	r3,fp,-860
  800f3c:	1885883a 	add	r2,r3,r2
  800f40:	10800e84 	addi	r2,r2,58
  800f44:	1000000d 	sth	zero,0(r2)
	row_stride = width * cinfo.output_components;
	pJpegBuffer = (*cinfo.mem->alloc_sarray)
	((j_common_ptr) &cinfo, JPOOL_IMAGE, row_stride, 1);

	//Initialize the regions struct array
	for (y=0; y < REGION_COUNT; y++){
  800f48:	e0bf2a0b 	ldhu	r2,-856(fp)
  800f4c:	10800044 	addi	r2,r2,1
  800f50:	e0bf2a0d 	sth	r2,-856(fp)
  800f54:	e0bf2a0b 	ldhu	r2,-856(fp)
  800f58:	108002b0 	cmpltui	r2,r2,10
  800f5c:	103fca1e 	bne	r2,zero,800e88 <__alt_mem_epcs_flash_controller_0+0xff7f7e88>
		regions[y].x = 0;
		regions[y].y = 0;
	}

	//Iterate over the image row by row and detect color regions
	y = 0;
  800f60:	e03f2a0d 	sth	zero,-856(fp)
	while (cinfo.output_scanline < height) {
  800f64:	00009d06 	br	8011dc <find_region+0x424>
		if(y == 100){
  800f68:	e0bf2a0b 	ldhu	r2,-856(fp)
  800f6c:	10801918 	cmpnei	r2,r2,100
  800f70:	1000021e 	bne	r2,zero,800f7c <find_region+0x1c4>
			endTime = clock();
  800f74:	0831fbc0 	call	831fbc <clock>
  800f78:	e0bf2d15 	stw	r2,-844(fp)
		}
		region_found = FALSE;
  800f7c:	e03f2c15 	stw	zero,-848(fp)
		temp_row_count = 0;
  800f80:	e03f2a8d 	sth	zero,-854(fp)
		temp_x = 0;
  800f84:	e03f2b0d 	sth	zero,-852(fp)
		(void) jpeg_read_scanlines(&cinfo, pJpegBuffer, 1);
  800f88:	e0bf6204 	addi	r2,fp,-632
  800f8c:	01800044 	movi	r6,1
  800f90:	e17f3117 	ldw	r5,-828(fp)
  800f94:	1009883a 	mov	r4,r2
  800f98:	0802a540 	call	802a54 <jpeg_read_scanlines>
		for (x = 0; x < width; x++) {
  800f9c:	e03f298d 	sth	zero,-858(fp)
  800fa0:	00006e06 	br	80115c <find_region+0x3a4>
			r = pJpegBuffer[0][cinfo.output_components * x];
  800fa4:	e0bf3117 	ldw	r2,-828(fp)
  800fa8:	14000017 	ldw	r16,0(r2)
  800fac:	e0bf8117 	ldw	r2,-508(fp)
  800fb0:	e0ff298b 	ldhu	r3,-858(fp)
  800fb4:	180b883a 	mov	r5,r3
  800fb8:	1009883a 	mov	r4,r2
  800fbc:	08305040 	call	830504 <__mulsi3>
  800fc0:	8085883a 	add	r2,r16,r2
  800fc4:	10800003 	ldbu	r2,0(r2)
  800fc8:	e0bf3205 	stb	r2,-824(fp)
			if (cinfo.output_components > 2) {
  800fcc:	e0bf8117 	ldw	r2,-508(fp)
  800fd0:	108000d0 	cmplti	r2,r2,3
  800fd4:	1000171e 	bne	r2,zero,801034 <find_region+0x27c>
				g = pJpegBuffer[0][cinfo.output_components * x + 1];
  800fd8:	e0bf3117 	ldw	r2,-828(fp)
  800fdc:	14000017 	ldw	r16,0(r2)
  800fe0:	e0bf8117 	ldw	r2,-508(fp)
  800fe4:	e0ff298b 	ldhu	r3,-858(fp)
  800fe8:	180b883a 	mov	r5,r3
  800fec:	1009883a 	mov	r4,r2
  800ff0:	08305040 	call	830504 <__mulsi3>
  800ff4:	10800044 	addi	r2,r2,1
  800ff8:	8085883a 	add	r2,r16,r2
  800ffc:	10800003 	ldbu	r2,0(r2)
  801000:	e0bf2905 	stb	r2,-860(fp)
				b = pJpegBuffer[0][cinfo.output_components * x + 2];
  801004:	e0bf3117 	ldw	r2,-828(fp)
  801008:	14000017 	ldw	r16,0(r2)
  80100c:	e0bf8117 	ldw	r2,-508(fp)
  801010:	e0ff298b 	ldhu	r3,-858(fp)
  801014:	180b883a 	mov	r5,r3
  801018:	1009883a 	mov	r4,r2
  80101c:	08305040 	call	830504 <__mulsi3>
  801020:	10800084 	addi	r2,r2,2
  801024:	8085883a 	add	r2,r16,r2
  801028:	10800003 	ldbu	r2,0(r2)
  80102c:	e0bf2945 	stb	r2,-859(fp)
  801030:	00000406 	br	801044 <find_region+0x28c>
			} else {
				g = r;
  801034:	e0bf3203 	ldbu	r2,-824(fp)
  801038:	e0bf2905 	stb	r2,-860(fp)
				b = r;
  80103c:	e0bf3203 	ldbu	r2,-824(fp)
  801040:	e0bf2945 	stb	r2,-859(fp)
			}

			if ((region == REGION_RED) && (r > REDREG_RED) &&
  801044:	e0bffe03 	ldbu	r2,-8(fp)
  801048:	1000141e 	bne	r2,zero,80109c <find_region+0x2e4>
  80104c:	e0bf3203 	ldbu	r2,-824(fp)
  801050:	10803770 	cmpltui	r2,r2,221
  801054:	1000111e 	bne	r2,zero,80109c <find_region+0x2e4>
  801058:	e0bf2903 	ldbu	r2,-860(fp)
  80105c:	108016a8 	cmpgeui	r2,r2,90
  801060:	10000e1e 	bne	r2,zero,80109c <find_region+0x2e4>
					(g < REDREG_GRN) && (b < REDREG_BLU)){
  801064:	e0bf2943 	ldbu	r2,-859(fp)
  801068:	108016a8 	cmpgeui	r2,r2,90
  80106c:	10000b1e 	bne	r2,zero,80109c <find_region+0x2e4>
				temp_row_count++;
  801070:	e0bf2a8b 	ldhu	r2,-854(fp)
  801074:	10800044 	addi	r2,r2,1
  801078:	e0bf2a8d 	sth	r2,-854(fp)
				temp_x = x;
  80107c:	e0bf298b 	ldhu	r2,-858(fp)
  801080:	e0bf2b0d 	sth	r2,-852(fp)
				region_found = TRUE;
  801084:	00800044 	movi	r2,1
  801088:	e0bf2c15 	stw	r2,-848(fp)
				regions[0].pixels_detected++;
  80108c:	e0bf358b 	ldhu	r2,-810(fp)
  801090:	10800044 	addi	r2,r2,1
  801094:	e0bf358d 	sth	r2,-810(fp)
  801098:	00002d06 	br	801150 <find_region+0x398>
			}else if ((region == REGION_GRN) && (r < GRNREG_RED) &&
  80109c:	e0bffe03 	ldbu	r2,-8(fp)
  8010a0:	10800058 	cmpnei	r2,r2,1
  8010a4:	1000141e 	bne	r2,zero,8010f8 <find_region+0x340>
  8010a8:	e0bf3203 	ldbu	r2,-824(fp)
  8010ac:	10801928 	cmpgeui	r2,r2,100
  8010b0:	1000111e 	bne	r2,zero,8010f8 <find_region+0x340>
  8010b4:	e0bf2903 	ldbu	r2,-860(fp)
  8010b8:	10801bf0 	cmpltui	r2,r2,111
  8010bc:	10000e1e 	bne	r2,zero,8010f8 <find_region+0x340>
					(g > GRNREG_GRN) && (b < GRNREG_BLU)){
  8010c0:	e0bf2943 	ldbu	r2,-859(fp)
  8010c4:	10800a28 	cmpgeui	r2,r2,40
  8010c8:	10000b1e 	bne	r2,zero,8010f8 <find_region+0x340>
				temp_row_count++;
  8010cc:	e0bf2a8b 	ldhu	r2,-854(fp)
  8010d0:	10800044 	addi	r2,r2,1
  8010d4:	e0bf2a8d 	sth	r2,-854(fp)
				temp_x = x;
  8010d8:	e0bf298b 	ldhu	r2,-858(fp)
  8010dc:	e0bf2b0d 	sth	r2,-852(fp)
				region_found = TRUE;
  8010e0:	00800044 	movi	r2,1
  8010e4:	e0bf2c15 	stw	r2,-848(fp)
				regions[0].pixels_detected++;
  8010e8:	e0bf358b 	ldhu	r2,-810(fp)
  8010ec:	10800044 	addi	r2,r2,1
  8010f0:	e0bf358d 	sth	r2,-810(fp)
  8010f4:	00001606 	br	801150 <find_region+0x398>
			}else if ((region == REGION_BLU) && (r < BLUREG_RED) &&
  8010f8:	e0bffe03 	ldbu	r2,-8(fp)
  8010fc:	10800098 	cmpnei	r2,r2,2
  801100:	1000131e 	bne	r2,zero,801150 <find_region+0x398>
  801104:	e0bf3203 	ldbu	r2,-824(fp)
  801108:	108007a8 	cmpgeui	r2,r2,30
  80110c:	1000101e 	bne	r2,zero,801150 <find_region+0x398>
  801110:	e0bf2903 	ldbu	r2,-860(fp)
  801114:	108007a8 	cmpgeui	r2,r2,30
  801118:	10000d1e 	bne	r2,zero,801150 <find_region+0x398>
					(g < BLUREG_GRN) && (b > BLUREG_BLU)){
  80111c:	e0bf2943 	ldbu	r2,-859(fp)
  801120:	10800a70 	cmpltui	r2,r2,41
  801124:	10000a1e 	bne	r2,zero,801150 <find_region+0x398>
				temp_row_count++;
  801128:	e0bf2a8b 	ldhu	r2,-854(fp)
  80112c:	10800044 	addi	r2,r2,1
  801130:	e0bf2a8d 	sth	r2,-854(fp)
				temp_x = x;
  801134:	e0bf298b 	ldhu	r2,-858(fp)
  801138:	e0bf2b0d 	sth	r2,-852(fp)
				region_found = TRUE;
  80113c:	00800044 	movi	r2,1
  801140:	e0bf2c15 	stw	r2,-848(fp)
				regions[0].pixels_detected++;
  801144:	e0bf358b 	ldhu	r2,-810(fp)
  801148:	10800044 	addi	r2,r2,1
  80114c:	e0bf358d 	sth	r2,-810(fp)
		}
		region_found = FALSE;
		temp_row_count = 0;
		temp_x = 0;
		(void) jpeg_read_scanlines(&cinfo, pJpegBuffer, 1);
		for (x = 0; x < width; x++) {
  801150:	e0bf298b 	ldhu	r2,-858(fp)
  801154:	10800044 	addi	r2,r2,1
  801158:	e0bf298d 	sth	r2,-858(fp)
  80115c:	e0ff298b 	ldhu	r3,-858(fp)
  801160:	e0bf2f0b 	ldhu	r2,-836(fp)
  801164:	18bf8f36 	bltu	r3,r2,800fa4 <__alt_mem_epcs_flash_controller_0+0xff7f7fa4>
				region_found = TRUE;
				regions[0].pixels_detected++;
			}
		}

		if (region_found){
  801168:	e0bf2c17 	ldw	r2,-848(fp)
  80116c:	10000d26 	beq	r2,zero,8011a4 <find_region+0x3ec>
			regions[0].cols_traversed++;
  801170:	e0bf368b 	ldhu	r2,-806(fp)
  801174:	10800044 	addi	r2,r2,1
  801178:	e0bf368d 	sth	r2,-806(fp)
			regions[0].y = y;
  80117c:	e0bf2a0b 	ldhu	r2,-856(fp)
  801180:	e0bf378d 	sth	r2,-802(fp)
			if (temp_row_count > regions[0].rows_traversed){
  801184:	e0bf360b 	ldhu	r2,-808(fp)
  801188:	10ffffcc 	andi	r3,r2,65535
  80118c:	e0bf2a8b 	ldhu	r2,-854(fp)
  801190:	1880042e 	bgeu	r3,r2,8011a4 <find_region+0x3ec>
				regions[0].rows_traversed = temp_row_count;
  801194:	e0bf2a8b 	ldhu	r2,-854(fp)
  801198:	e0bf360d 	sth	r2,-808(fp)
				regions[0].x = temp_x;
  80119c:	e0bf2b0b 	ldhu	r2,-852(fp)
  8011a0:	e0bf370d 	sth	r2,-804(fp)
			}
		}

		if (y == 101){
  8011a4:	e0bf2a0b 	ldhu	r2,-856(fp)
  8011a8:	10801958 	cmpnei	r2,r2,101
  8011ac:	1000081e 	bne	r2,zero,8011d0 <find_region+0x418>
			printf("clock ticks=%i\n", clock() - endTime);
  8011b0:	0831fbc0 	call	831fbc <clock>
  8011b4:	1007883a 	mov	r3,r2
  8011b8:	e0bf2d17 	ldw	r2,-844(fp)
  8011bc:	1885c83a 	sub	r2,r3,r2
  8011c0:	100b883a 	mov	r5,r2
  8011c4:	01002174 	movhi	r4,133
  8011c8:	211b6604 	addi	r4,r4,28056
  8011cc:	08344500 	call	834450 <printf>
		}

		y++;
  8011d0:	e0bf2a0b 	ldhu	r2,-856(fp)
  8011d4:	10800044 	addi	r2,r2,1
  8011d8:	e0bf2a0d 	sth	r2,-856(fp)
		regions[y].y = 0;
	}

	//Iterate over the image row by row and detect color regions
	y = 0;
	while (cinfo.output_scanline < height) {
  8011dc:	e0ff8517 	ldw	r3,-492(fp)
  8011e0:	e0bf2f8b 	ldhu	r2,-834(fp)
  8011e4:	18bf6036 	bltu	r3,r2,800f68 <__alt_mem_epcs_flash_controller_0+0xff7f7f68>
		}

		y++;
	}

	endTime = clock() - startTime;
  8011e8:	0831fbc0 	call	831fbc <clock>
  8011ec:	1007883a 	mov	r3,r2
  8011f0:	e0bf2e17 	ldw	r2,-840(fp)
  8011f4:	1885c83a 	sub	r2,r3,r2
  8011f8:	e0bf2d15 	stw	r2,-844(fp)

	int row_mid = regions[0].x - (regions[0].rows_traversed / 2);
  8011fc:	e0bf370b 	ldhu	r2,-804(fp)
  801200:	10ffffcc 	andi	r3,r2,65535
  801204:	e0bf360b 	ldhu	r2,-808(fp)
  801208:	10bfffcc 	andi	r2,r2,65535
  80120c:	1004d07a 	srli	r2,r2,1
  801210:	10bfffcc 	andi	r2,r2,65535
  801214:	1885c83a 	sub	r2,r3,r2
  801218:	e0bf3315 	stw	r2,-820(fp)
	int col_mid = regions[0].y - (regions[0].cols_traversed / 2);
  80121c:	e0bf378b 	ldhu	r2,-802(fp)
  801220:	10ffffcc 	andi	r3,r2,65535
  801224:	e0bf368b 	ldhu	r2,-806(fp)
  801228:	10bfffcc 	andi	r2,r2,65535
  80122c:	1004d07a 	srli	r2,r2,1
  801230:	10bfffcc 	andi	r2,r2,65535
  801234:	1885c83a 	sub	r2,r3,r2
  801238:	e0bf3415 	stw	r2,-816(fp)

	printf("height_end=%i width_end=%i\n", regions[0].y, regions[0].x);
  80123c:	e0bf378b 	ldhu	r2,-802(fp)
  801240:	10bfffcc 	andi	r2,r2,65535
  801244:	e0ff370b 	ldhu	r3,-804(fp)
  801248:	18ffffcc 	andi	r3,r3,65535
  80124c:	180d883a 	mov	r6,r3
  801250:	100b883a 	mov	r5,r2
  801254:	01002174 	movhi	r4,133
  801258:	211b6a04 	addi	r4,r4,28072
  80125c:	08344500 	call	834450 <printf>
	printf("height_mid=%i width_mid=%i\n", col_mid, row_mid);
  801260:	e1bf3317 	ldw	r6,-820(fp)
  801264:	e17f3417 	ldw	r5,-816(fp)
  801268:	01002174 	movhi	r4,133
  80126c:	211b7104 	addi	r4,r4,28100
  801270:	08344500 	call	834450 <printf>
	printf("cols=%i rows=%i\n", regions[0].cols_traversed, regions[0].rows_traversed);
  801274:	e0bf368b 	ldhu	r2,-806(fp)
  801278:	10bfffcc 	andi	r2,r2,65535
  80127c:	e0ff360b 	ldhu	r3,-808(fp)
  801280:	18ffffcc 	andi	r3,r3,65535
  801284:	180d883a 	mov	r6,r3
  801288:	100b883a 	mov	r5,r2
  80128c:	01002174 	movhi	r4,133
  801290:	211b7804 	addi	r4,r4,28128
  801294:	08344500 	call	834450 <printf>
	printf("confidence=%i\n", regions[0].confidence);
  801298:	e0bf350b 	ldhu	r2,-812(fp)
  80129c:	10bfffcc 	andi	r2,r2,65535
  8012a0:	100b883a 	mov	r5,r2
  8012a4:	01002174 	movhi	r4,133
  8012a8:	211b7d04 	addi	r4,r4,28148
  8012ac:	08344500 	call	834450 <printf>
	printf("clock ticks=%i\n", endTime);
  8012b0:	e17f2d17 	ldw	r5,-844(fp)
  8012b4:	01002174 	movhi	r4,133
  8012b8:	211b6604 	addi	r4,r4,28056
  8012bc:	08344500 	call	834450 <printf>

	(void) jpeg_finish_decompress(&cinfo);
  8012c0:	e0bf6204 	addi	r2,fp,-632
  8012c4:	1009883a 	mov	r4,r2
  8012c8:	08025bc0 	call	8025bc <jpeg_finish_decompress>
	jpeg_destroy_decompress(&cinfo);
  8012cc:	e0bf6204 	addi	r2,fp,-632
  8012d0:	1009883a 	mov	r4,r2
  8012d4:	0801dbc0 	call	801dbc <jpeg_destroy_decompress>

	printf("DONE\n");
  8012d8:	01002174 	movhi	r4,133
  8012dc:	211b8104 	addi	r4,r4,28164
  8012e0:	08346d40 	call	8346d4 <puts>

	//TODO replace with constants
	if (regions[0].pixels_detected > 0){
  8012e4:	e0bf358b 	ldhu	r2,-810(fp)
  8012e8:	10bfffcc 	andi	r2,r2,65535
  8012ec:	10000926 	beq	r2,zero,801314 <find_region+0x55c>
		if (regions[0].pixels_detected > 10000){
  8012f0:	e0bf358b 	ldhu	r2,-810(fp)
  8012f4:	10bfffcc 	andi	r2,r2,65535
  8012f8:	1089c470 	cmpltui	r2,r2,10001
  8012fc:	1000021e 	bne	r2,zero,801308 <find_region+0x550>
			return 0xFFFF;
  801300:	00bfffc4 	movi	r2,-1
  801304:	00000406 	br	801318 <find_region+0x560>
		}else{
			//+1 deals with fringe case of row_mid = 0
			return row_mid + 1;
  801308:	e0bf3317 	ldw	r2,-820(fp)
  80130c:	10800044 	addi	r2,r2,1
  801310:	00000106 	br	801318 <find_region+0x560>
		}
	}else{
		//Found nothing
		return 0;
  801314:	0005883a 	mov	r2,zero
	}
}
  801318:	e6ffff04 	addi	sp,fp,-4
  80131c:	dfc00217 	ldw	ra,8(sp)
  801320:	df000117 	ldw	fp,4(sp)
  801324:	dc000017 	ldw	r16,0(sp)
  801328:	dec00304 	addi	sp,sp,12
  80132c:	f800283a 	ret

00801330 <sensor_interrupt>:
 */

#include "motor.h"
#include "interrupt_peripherals.h"

void sensor_interrupt(void * context){
  801330:	defffd04 	addi	sp,sp,-12
  801334:	dfc00215 	stw	ra,8(sp)
  801338:	df000115 	stw	fp,4(sp)
  80133c:	df000104 	addi	fp,sp,4
  801340:	e13fff15 	stw	r4,-4(fp)
	//printf("sensor\n");

	motorEStop();
  801344:	08018940 	call	801894 <motorEStop>
	//Moved to motor.c motorEstop()
	//IOWR_ALTERA_AVALON_PIO_DATA(SPEAKER_BASE, 0x1);

	//clear interrupt
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PROX_SENSOR_BASE, 1);
  801348:	00c00044 	movi	r3,1
  80134c:	00804074 	movhi	r2,257
  801350:	10a83f04 	addi	r2,r2,-24324
  801354:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_IRQ_MASK(PROX_SENSOR_BASE, 0xF);
  801358:	00c003c4 	movi	r3,15
  80135c:	00804074 	movhi	r2,257
  801360:	10a83e04 	addi	r2,r2,-24328
  801364:	10c00035 	stwio	r3,0(r2)
}
  801368:	0001883a 	nop
  80136c:	e037883a 	mov	sp,fp
  801370:	dfc00117 	ldw	ra,4(sp)
  801374:	df000017 	ldw	fp,0(sp)
  801378:	dec00204 	addi	sp,sp,8
  80137c:	f800283a 	ret

00801380 <motor_task>:

/*
 * Drives FORWARD initially but when the INFRARED SENSOR
 * detects something and it will REVERSE the direction
 */
void motor_task(void* pdata){
  801380:	defffb04 	addi	sp,sp,-20
  801384:	dfc00415 	stw	ra,16(sp)
  801388:	df000315 	stw	fp,12(sp)
  80138c:	df000304 	addi	fp,sp,12
  801390:	e13fff15 	stw	r4,-4(fp)

	bool notFound;

	while (1){

		initCommand = (uint8_t) OSQPend(initCommandQueue, 0, &err);
  801394:	d0a08717 	ldw	r2,-32228(gp)
  801398:	e0fffe84 	addi	r3,fp,-6
  80139c:	180d883a 	mov	r6,r3
  8013a0:	000b883a 	mov	r5,zero
  8013a4:	1009883a 	mov	r4,r2
  8013a8:	084ec540 	call	84ec54 <OSQPend>
  8013ac:	e0bffd45 	stb	r2,-11(fp)

		if((initCommand & INIT_RCMODE) == INIT_RCMODE){
  8013b0:	e0bffd43 	ldbu	r2,-11(fp)
  8013b4:	1080300c 	andi	r2,r2,192
  8013b8:	10803018 	cmpnei	r2,r2,192
  8013bc:	1000041e 	bne	r2,zero,8013d0 <motor_task+0x50>
			rcControl(initCommand);
  8013c0:	e0bffd43 	ldbu	r2,-11(fp)
  8013c4:	1009883a 	mov	r4,r2
  8013c8:	08017b80 	call	8017b8 <rcControl>
  8013cc:	003ff106 	br	801394 <__alt_mem_epcs_flash_controller_0+0xff7f8394>
		}else{ //parse color and time
			notFound = TRUE;
  8013d0:	00800044 	movi	r2,1
  8013d4:	e0bffd05 	stb	r2,-12(fp)
			while(notFound){
  8013d8:	00004906 	br	801500 <motor_task+0x180>
				findCommand = 0; //TEST code, red region is defined as 0
  8013dc:	e03ffd85 	stb	zero,-10(fp)
				OSQPost(findCommandQueue, (void*) findCommand);
  8013e0:	d0a08917 	ldw	r2,-32220(gp)
  8013e4:	e0fffd83 	ldbu	r3,-10(fp)
  8013e8:	180b883a 	mov	r5,r3
  8013ec:	1009883a 	mov	r4,r2
  8013f0:	084f04c0 	call	84f04c <OSQPost>
				moveCommand = (uint16_t) OSQPend(moveCommandQueue, 0, &err);
  8013f4:	d0a08e17 	ldw	r2,-32200(gp)
  8013f8:	e0fffe84 	addi	r3,fp,-6
  8013fc:	180d883a 	mov	r6,r3
  801400:	000b883a 	mov	r5,zero
  801404:	1009883a 	mov	r4,r2
  801408:	084ec540 	call	84ec54 <OSQPend>
  80140c:	e0bffe0d 	sth	r2,-8(fp)
				printf("MOTOR: received %i\n", moveCommand);
  801410:	e0bffe0b 	ldhu	r2,-8(fp)
  801414:	100b883a 	mov	r5,r2
  801418:	01002174 	movhi	r4,133
  80141c:	211b8304 	addi	r4,r4,28172
  801420:	08344500 	call	834450 <printf>

				//Straight
				if((moveCommand >= MID_LOWER) && (moveCommand <= MID_UPPER)){
  801424:	e0bffe0b 	ldhu	r2,-8(fp)
  801428:	10801430 	cmpltui	r2,r2,80
  80142c:	10000a1e 	bne	r2,zero,801458 <motor_task+0xd8>
  801430:	e0bffe0b 	ldhu	r2,-8(fp)
  801434:	10802868 	cmpgeui	r2,r2,161
  801438:	1000071e 	bne	r2,zero,801458 <motor_task+0xd8>
					printf("MOTOR: FORWARD\n");
  80143c:	01002174 	movhi	r4,133
  801440:	211b8804 	addi	r4,r4,28192
  801444:	08346d40 	call	8346d4 <puts>
					motorControl(FORWARD, MED_MOVE);
  801448:	01400084 	movi	r5,2
  80144c:	01000044 	movi	r4,1
  801450:	08016900 	call	801690 <motorControl>
  801454:	00002a06 	br	801500 <motor_task+0x180>
				//Destination
				}else if(moveCommand == MOVE_DONE){
  801458:	e0fffe0b 	ldhu	r3,-8(fp)
  80145c:	00bfffd4 	movui	r2,65535
  801460:	1880051e 	bne	r3,r2,801478 <motor_task+0xf8>
					printf("MOTOR: DONE\n");
  801464:	01002174 	movhi	r4,133
  801468:	211b8c04 	addi	r4,r4,28208
  80146c:	08346d40 	call	8346d4 <puts>
					notFound = FALSE;
  801470:	e03ffd05 	stb	zero,-12(fp)
  801474:	00002206 	br	801500 <motor_task+0x180>
				//Left
				}else if((moveCommand < MID_LOWER) && (moveCommand > 0)){
  801478:	e0bffe0b 	ldhu	r2,-8(fp)
  80147c:	10801428 	cmpgeui	r2,r2,80
  801480:	10000c1e 	bne	r2,zero,8014b4 <motor_task+0x134>
  801484:	e0bffe0b 	ldhu	r2,-8(fp)
  801488:	10000a26 	beq	r2,zero,8014b4 <motor_task+0x134>
					printf("MOTOR: LEFT\n");
  80148c:	01002174 	movhi	r4,133
  801490:	211b8f04 	addi	r4,r4,28220
  801494:	08346d40 	call	8346d4 <puts>
					motorControl(LEFT, SML_MOVE);
  801498:	01400044 	movi	r5,1
  80149c:	010000c4 	movi	r4,3
  8014a0:	08016900 	call	801690 <motorControl>
					motorControl(FORWARD, SML_MOVE);
  8014a4:	01400044 	movi	r5,1
  8014a8:	01000044 	movi	r4,1
  8014ac:	08016900 	call	801690 <motorControl>
  8014b0:	00001306 	br	801500 <motor_task+0x180>
				//Right
				}else if(moveCommand > MID_UPPER){
  8014b4:	e0bffe0b 	ldhu	r2,-8(fp)
  8014b8:	10802870 	cmpltui	r2,r2,161
  8014bc:	10000a1e 	bne	r2,zero,8014e8 <motor_task+0x168>
					printf("MOTOR: RIGHT\n");
  8014c0:	01002174 	movhi	r4,133
  8014c4:	211b9204 	addi	r4,r4,28232
  8014c8:	08346d40 	call	8346d4 <puts>
					motorControl(RIGHT, SML_MOVE);
  8014cc:	01400044 	movi	r5,1
  8014d0:	01000104 	movi	r4,4
  8014d4:	08016900 	call	801690 <motorControl>
					motorControl(FORWARD, SML_MOVE);
  8014d8:	01400044 	movi	r5,1
  8014dc:	01000044 	movi	r4,1
  8014e0:	08016900 	call	801690 <motorControl>
  8014e4:	00000606 	br	801500 <motor_task+0x180>
				//Nothing
				}else{
					printf("MOTOR: NOTHING\n");
  8014e8:	01002174 	movhi	r4,133
  8014ec:	211b9604 	addi	r4,r4,28248
  8014f0:	08346d40 	call	8346d4 <puts>
					motorControl(RIGHT, MED_MOVE);
  8014f4:	01400084 	movi	r5,2
  8014f8:	01000104 	movi	r4,4
  8014fc:	08016900 	call	801690 <motorControl>

		if((initCommand & INIT_RCMODE) == INIT_RCMODE){
			rcControl(initCommand);
		}else{ //parse color and time
			notFound = TRUE;
			while(notFound){
  801500:	e0bffd03 	ldbu	r2,-12(fp)
  801504:	103fb51e 	bne	r2,zero,8013dc <__alt_mem_epcs_flash_controller_0+0xff7f83dc>
					printf("MOTOR: NOTHING\n");
					motorControl(RIGHT, MED_MOVE);
				}
			}
		}
	}
  801508:	003fa206 	br	801394 <__alt_mem_epcs_flash_controller_0+0xff7f8394>

0080150c <motorStop>:
}

void motorStop() {
  80150c:	deffff04 	addi	sp,sp,-4
  801510:	df000015 	stw	fp,0(sp)
  801514:	d839883a 	mov	fp,sp
	//IOWR_ALTERA_AVALON_PIO_DATA(SPEAKER_BASE, 0x0);
	IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_L_BASE, MOTOR_SHORTSTOP);
  801518:	00c001c4 	movi	r3,7
  80151c:	00804074 	movhi	r2,257
  801520:	10a83404 	addi	r2,r2,-24368
  801524:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_R_BASE, MOTOR_SHORTSTOP);
  801528:	00c001c4 	movi	r3,7
  80152c:	00804074 	movhi	r2,257
  801530:	10a83804 	addi	r2,r2,-24352
  801534:	10c00035 	stwio	r3,0(r2)
	//MOVINGFORWARD = FALSE;
}
  801538:	0001883a 	nop
  80153c:	e037883a 	mov	sp,fp
  801540:	df000017 	ldw	fp,0(sp)
  801544:	dec00104 	addi	sp,sp,4
  801548:	f800283a 	ret

0080154c <motorForward>:

void motorForward() {
  80154c:	deffff04 	addi	sp,sp,-4
  801550:	df000015 	stw	fp,0(sp)
  801554:	d839883a 	mov	fp,sp
	//IOWR_ALTERA_AVALON_PIO_DATA(SPEAKER_BASE, 0x1);
	MOVINGFORWARD = TRUE;
  801558:	00800044 	movi	r2,1
  80155c:	d0a09115 	stw	r2,-32188(gp)
	IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_L_BASE, MOTOR_FORWARD);
  801560:	00c000c4 	movi	r3,3
  801564:	00804074 	movhi	r2,257
  801568:	10a83404 	addi	r2,r2,-24368
  80156c:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_R_BASE, MOTOR_FORWARD);
  801570:	00c000c4 	movi	r3,3
  801574:	00804074 	movhi	r2,257
  801578:	10a83804 	addi	r2,r2,-24352
  80157c:	10c00035 	stwio	r3,0(r2)
}
  801580:	0001883a 	nop
  801584:	e037883a 	mov	sp,fp
  801588:	df000017 	ldw	fp,0(sp)
  80158c:	dec00104 	addi	sp,sp,4
  801590:	f800283a 	ret

00801594 <motorReverse>:

void motorReverse() {
  801594:	deffff04 	addi	sp,sp,-4
  801598:	df000015 	stw	fp,0(sp)
  80159c:	d839883a 	mov	fp,sp
	IOWR_ALTERA_AVALON_PIO_DATA(SPEAKER_BASE, 0x0);
  8015a0:	0007883a 	mov	r3,zero
  8015a4:	00804074 	movhi	r2,257
  8015a8:	10a82404 	addi	r2,r2,-24432
  8015ac:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_L_BASE, MOTOR_REVERSE);
  8015b0:	00c00144 	movi	r3,5
  8015b4:	00804074 	movhi	r2,257
  8015b8:	10a83404 	addi	r2,r2,-24368
  8015bc:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_R_BASE, MOTOR_REVERSE);
  8015c0:	00c00144 	movi	r3,5
  8015c4:	00804074 	movhi	r2,257
  8015c8:	10a83804 	addi	r2,r2,-24352
  8015cc:	10c00035 	stwio	r3,0(r2)
	MOVINGFORWARD = FALSE;
  8015d0:	d0209115 	stw	zero,-32188(gp)
}
  8015d4:	0001883a 	nop
  8015d8:	e037883a 	mov	sp,fp
  8015dc:	df000017 	ldw	fp,0(sp)
  8015e0:	dec00104 	addi	sp,sp,4
  8015e4:	f800283a 	ret

008015e8 <motorLeft>:

void motorLeft() {
  8015e8:	deffff04 	addi	sp,sp,-4
  8015ec:	df000015 	stw	fp,0(sp)
  8015f0:	d839883a 	mov	fp,sp
	IOWR_ALTERA_AVALON_PIO_DATA(SPEAKER_BASE, 0x0);
  8015f4:	0007883a 	mov	r3,zero
  8015f8:	00804074 	movhi	r2,257
  8015fc:	10a82404 	addi	r2,r2,-24432
  801600:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_L_BASE, MOTOR_FORWARD);
  801604:	00c000c4 	movi	r3,3
  801608:	00804074 	movhi	r2,257
  80160c:	10a83404 	addi	r2,r2,-24368
  801610:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_R_BASE, MOTOR_REVERSE);
  801614:	00c00144 	movi	r3,5
  801618:	00804074 	movhi	r2,257
  80161c:	10a83804 	addi	r2,r2,-24352
  801620:	10c00035 	stwio	r3,0(r2)
	MOVINGFORWARD = FALSE;
  801624:	d0209115 	stw	zero,-32188(gp)
}
  801628:	0001883a 	nop
  80162c:	e037883a 	mov	sp,fp
  801630:	df000017 	ldw	fp,0(sp)
  801634:	dec00104 	addi	sp,sp,4
  801638:	f800283a 	ret

0080163c <motorRight>:

void motorRight() {
  80163c:	deffff04 	addi	sp,sp,-4
  801640:	df000015 	stw	fp,0(sp)
  801644:	d839883a 	mov	fp,sp
	IOWR_ALTERA_AVALON_PIO_DATA(SPEAKER_BASE, 0x0);
  801648:	0007883a 	mov	r3,zero
  80164c:	00804074 	movhi	r2,257
  801650:	10a82404 	addi	r2,r2,-24432
  801654:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_L_BASE, MOTOR_REVERSE);
  801658:	00c00144 	movi	r3,5
  80165c:	00804074 	movhi	r2,257
  801660:	10a83404 	addi	r2,r2,-24368
  801664:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(MOTOR_R_BASE, MOTOR_FORWARD);
  801668:	00c000c4 	movi	r3,3
  80166c:	00804074 	movhi	r2,257
  801670:	10a83804 	addi	r2,r2,-24352
  801674:	10c00035 	stwio	r3,0(r2)
	MOVINGFORWARD = FALSE;
  801678:	d0209115 	stw	zero,-32188(gp)
}
  80167c:	0001883a 	nop
  801680:	e037883a 	mov	sp,fp
  801684:	df000017 	ldw	fp,0(sp)
  801688:	dec00104 	addi	sp,sp,4
  80168c:	f800283a 	ret

00801690 <motorControl>:

void motorControl(char direction, int time) {
  801690:	defffb04 	addi	sp,sp,-20
  801694:	dfc00415 	stw	ra,16(sp)
  801698:	df000315 	stw	fp,12(sp)
  80169c:	df000304 	addi	fp,sp,12
  8016a0:	2005883a 	mov	r2,r4
  8016a4:	e17fff15 	stw	r5,-4(fp)
  8016a8:	e0bffe05 	stb	r2,-8(fp)
	int isTurn = 0;
  8016ac:	e03ffd15 	stw	zero,-12(fp)

	if(MOTORMOVING) {
  8016b0:	d0a09017 	ldw	r2,-32192(gp)
  8016b4:	10000626 	beq	r2,zero,8016d0 <motorControl+0x40>
		motorStop();
  8016b8:	080150c0 	call	80150c <motorStop>
		OSTimeDlyHMSM(0, 0, 0, 20);
  8016bc:	01c00504 	movi	r7,20
  8016c0:	000d883a 	mov	r6,zero
  8016c4:	000b883a 	mov	r5,zero
  8016c8:	0009883a 	mov	r4,zero
  8016cc:	0851a040 	call	851a04 <OSTimeDlyHMSM>
	}
	if(direction == STOP) {
  8016d0:	e0bffe07 	ldb	r2,-8(fp)
  8016d4:	1000031e 	bne	r2,zero,8016e4 <motorControl+0x54>
		// Cant do stop because delay is broken and espComplete is broken
		motorStop();
  8016d8:	080150c0 	call	80150c <motorStop>
		MOTORMOVING = false;
  8016dc:	d0209015 	stw	zero,-32192(gp)
		return;
  8016e0:	00003006 	br	8017a4 <motorControl+0x114>
	}
	if(direction == FORWARD) {
  8016e4:	e0bffe07 	ldb	r2,-8(fp)
  8016e8:	10800058 	cmpnei	r2,r2,1
  8016ec:	1000011e 	bne	r2,zero,8016f4 <motorControl+0x64>
		motorForward();
  8016f0:	080154c0 	call	80154c <motorForward>
	}
	if(direction == REVERSE) {
  8016f4:	e0bffe07 	ldb	r2,-8(fp)
  8016f8:	10800098 	cmpnei	r2,r2,2
  8016fc:	1000011e 	bne	r2,zero,801704 <motorControl+0x74>
		motorReverse();
  801700:	08015940 	call	801594 <motorReverse>
	}
	if(direction == LEFT) {
  801704:	e0bffe07 	ldb	r2,-8(fp)
  801708:	108000d8 	cmpnei	r2,r2,3
  80170c:	1000031e 	bne	r2,zero,80171c <motorControl+0x8c>
		isTurn = 1;
  801710:	00800044 	movi	r2,1
  801714:	e0bffd15 	stw	r2,-12(fp)
		motorLeft();
  801718:	08015e80 	call	8015e8 <motorLeft>
	}
	if(direction == RIGHT) {
  80171c:	e0bffe07 	ldb	r2,-8(fp)
  801720:	10800118 	cmpnei	r2,r2,4
  801724:	1000031e 	bne	r2,zero,801734 <motorControl+0xa4>
		isTurn = 1;
  801728:	00800044 	movi	r2,1
  80172c:	e0bffd15 	stw	r2,-12(fp)
		motorRight();
  801730:	080163c0 	call	80163c <motorRight>
	}
	MOTORMOVING = true;
  801734:	00800044 	movi	r2,1
  801738:	d0a09015 	stw	r2,-32192(gp)
	if(time == INF_MOVE) {
  80173c:	e0bfff17 	ldw	r2,-4(fp)
  801740:	10800298 	cmpnei	r2,r2,10
  801744:	10001626 	beq	r2,zero,8017a0 <motorControl+0x110>
		return;
	}
	if(isTurn) {
  801748:	e0bffd17 	ldw	r2,-12(fp)
  80174c:	10000b26 	beq	r2,zero,80177c <motorControl+0xec>
		OSTimeDlyHMSM(0, 0, 0, time * deg45);
  801750:	e0bfff17 	ldw	r2,-4(fp)
  801754:	01405f04 	movi	r5,380
  801758:	1009883a 	mov	r4,r2
  80175c:	08305040 	call	830504 <__mulsi3>
  801760:	10bfffcc 	andi	r2,r2,65535
  801764:	100f883a 	mov	r7,r2
  801768:	000d883a 	mov	r6,zero
  80176c:	000b883a 	mov	r5,zero
  801770:	0009883a 	mov	r4,zero
  801774:	0851a040 	call	851a04 <OSTimeDlyHMSM>
  801778:	00000706 	br	801798 <motorControl+0x108>
	}
	else {
		OSTimeDlyHMSM(0, 0, time, 0);
  80177c:	e0bfff17 	ldw	r2,-4(fp)
  801780:	10803fcc 	andi	r2,r2,255
  801784:	000f883a 	mov	r7,zero
  801788:	100d883a 	mov	r6,r2
  80178c:	000b883a 	mov	r5,zero
  801790:	0009883a 	mov	r4,zero
  801794:	0851a040 	call	851a04 <OSTimeDlyHMSM>
	}
	motorStop();
  801798:	080150c0 	call	80150c <motorStop>
  80179c:	00000106 	br	8017a4 <motorControl+0x114>
		isTurn = 1;
		motorRight();
	}
	MOTORMOVING = true;
	if(time == INF_MOVE) {
		return;
  8017a0:	0001883a 	nop
	}
	else {
		OSTimeDlyHMSM(0, 0, time, 0);
	}
	motorStop();
}
  8017a4:	e037883a 	mov	sp,fp
  8017a8:	dfc00117 	ldw	ra,4(sp)
  8017ac:	df000017 	ldw	fp,0(sp)
  8017b0:	dec00204 	addi	sp,sp,8
  8017b4:	f800283a 	ret

008017b8 <rcControl>:

// RC Mode stuff run here to reduce overhead
void rcControl(uint8_t input) {
  8017b8:	defffb04 	addi	sp,sp,-20
  8017bc:	dfc00415 	stw	ra,16(sp)
  8017c0:	df000315 	stw	fp,12(sp)
  8017c4:	df000304 	addi	fp,sp,12
  8017c8:	2005883a 	mov	r2,r4
  8017cc:	e0bfff05 	stb	r2,-4(fp)
	// Decode the command received from wifi and send it to Motor task
	char direction = STOP;
  8017d0:	e03ffd05 	stb	zero,-12(fp)
	int time;

	if((input & STOP) == STOP) {
		direction = STOP;
  8017d4:	e03ffd05 	stb	zero,-12(fp)
	}
	if((input & FORWARD) == FORWARD) {
  8017d8:	e0bfff03 	ldbu	r2,-4(fp)
  8017dc:	1080004c 	andi	r2,r2,1
  8017e0:	10000226 	beq	r2,zero,8017ec <rcControl+0x34>
		direction = FORWARD;
  8017e4:	00800044 	movi	r2,1
  8017e8:	e0bffd05 	stb	r2,-12(fp)
	}
	if((input & REVERSE) == REVERSE) {
  8017ec:	e0bfff03 	ldbu	r2,-4(fp)
  8017f0:	1080008c 	andi	r2,r2,2
  8017f4:	10000226 	beq	r2,zero,801800 <rcControl+0x48>
		direction = REVERSE;
  8017f8:	00800084 	movi	r2,2
  8017fc:	e0bffd05 	stb	r2,-12(fp)
		//IOWR_ALTERA_AVALON_PIO_DATA(SPEAKER_BASE, 0x0);
	}
	if((input & LEFT) == LEFT) {
  801800:	e0bfff03 	ldbu	r2,-4(fp)
  801804:	108000cc 	andi	r2,r2,3
  801808:	108000d8 	cmpnei	r2,r2,3
  80180c:	1000021e 	bne	r2,zero,801818 <rcControl+0x60>
		direction = LEFT;
  801810:	008000c4 	movi	r2,3
  801814:	e0bffd05 	stb	r2,-12(fp)
	}
	if((input & RIGHT) == RIGHT) {
  801818:	e0bfff03 	ldbu	r2,-4(fp)
  80181c:	1080010c 	andi	r2,r2,4
  801820:	10000226 	beq	r2,zero,80182c <rcControl+0x74>
		direction = RIGHT;
  801824:	00800104 	movi	r2,4
  801828:	e0bffd05 	stb	r2,-12(fp)
	}
	if((input & i1) == i1) {
  80182c:	e0bfff03 	ldbu	r2,-4(fp)
  801830:	1080020c 	andi	r2,r2,8
  801834:	10000226 	beq	r2,zero,801840 <rcControl+0x88>
		time = SML_MOVE;
  801838:	00800044 	movi	r2,1
  80183c:	e0bffe15 	stw	r2,-8(fp)
	}
	if((input & i2) == i2) {
  801840:	e0bfff03 	ldbu	r2,-4(fp)
  801844:	1080040c 	andi	r2,r2,16
  801848:	10000226 	beq	r2,zero,801854 <rcControl+0x9c>
		time = MED_MOVE;
  80184c:	00800084 	movi	r2,2
  801850:	e0bffe15 	stw	r2,-8(fp)
	}
	if((input & i3) == i3) {
  801854:	e0bfff03 	ldbu	r2,-4(fp)
  801858:	1080060c 	andi	r2,r2,24
  80185c:	10800618 	cmpnei	r2,r2,24
  801860:	1000021e 	bne	r2,zero,80186c <rcControl+0xb4>
		time = INF_MOVE;
  801864:	00800284 	movi	r2,10
  801868:	e0bffe15 	stw	r2,-8(fp)
	}
	motorControl(direction, time);
  80186c:	e0bffd07 	ldb	r2,-12(fp)
  801870:	e17ffe17 	ldw	r5,-8(fp)
  801874:	1009883a 	mov	r4,r2
  801878:	08016900 	call	801690 <motorControl>
}
  80187c:	0001883a 	nop
  801880:	e037883a 	mov	sp,fp
  801884:	dfc00117 	ldw	ra,4(sp)
  801888:	df000017 	ldw	fp,0(sp)
  80188c:	dec00204 	addi	sp,sp,8
  801890:	f800283a 	ret

00801894 <motorEStop>:

void motorEStop() {
  801894:	defffe04 	addi	sp,sp,-8
  801898:	dfc00115 	stw	ra,4(sp)
  80189c:	df000015 	stw	fp,0(sp)
  8018a0:	d839883a 	mov	fp,sp
	if(MOVINGFORWARD) {
  8018a4:	d0a09117 	ldw	r2,-32188(gp)
  8018a8:	10000526 	beq	r2,zero,8018c0 <motorEStop+0x2c>
		motorStop();
  8018ac:	080150c0 	call	80150c <motorStop>
		IOWR_ALTERA_AVALON_PIO_DATA(SPEAKER_BASE, 0x1);
  8018b0:	00c00044 	movi	r3,1
  8018b4:	00804074 	movhi	r2,257
  8018b8:	10a82404 	addi	r2,r2,-24432
  8018bc:	10c00035 	stwio	r3,0(r2)
	}
}
  8018c0:	0001883a 	nop
  8018c4:	e037883a 	mov	sp,fp
  8018c8:	dfc00117 	ldw	ra,4(sp)
  8018cc:	df000017 	ldw	fp,0(sp)
  8018d0:	dec00204 	addi	sp,sp,8
  8018d4:	f800283a 	ret

008018d8 <main>:

#define MOTOR_PRIORITY     3
#define CAMERA_PRIORITY    2
#define WIFI_PRIORITY	   1

int main(void){
  8018d8:	defff904 	addi	sp,sp,-28
  8018dc:	dfc00615 	stw	ra,24(sp)
  8018e0:	df000515 	stw	fp,20(sp)
  8018e4:	df000504 	addi	fp,sp,20


	if(OSTaskCreateExt(motor_task,
  8018e8:	d8000415 	stw	zero,16(sp)
  8018ec:	d8000315 	stw	zero,12(sp)
  8018f0:	00820004 	movi	r2,2048
  8018f4:	d8800215 	stw	r2,8(sp)
  8018f8:	008021b4 	movhi	r2,134
  8018fc:	10b84f04 	addi	r2,r2,-7876
  801900:	d8800115 	stw	r2,4(sp)
  801904:	008000c4 	movi	r2,3
  801908:	d8800015 	stw	r2,0(sp)
  80190c:	01c000c4 	movi	r7,3
  801910:	018021b4 	movhi	r6,134
  801914:	31804e04 	addi	r6,r6,312
  801918:	000b883a 	mov	r5,zero
  80191c:	01002034 	movhi	r4,128
  801920:	2104e004 	addi	r4,r4,4992
  801924:	08508300 	call	850830 <OSTaskCreateExt>
                  		0))
	{
		//printf("Motor task creation failure\n");
	}

	if(OSTaskCreateExt(camera_task,
  801928:	d8000415 	stw	zero,16(sp)
  80192c:	d8000315 	stw	zero,12(sp)
  801930:	00820004 	movi	r2,2048
  801934:	d8800215 	stw	r2,8(sp)
  801938:	008021b4 	movhi	r2,134
  80193c:	10b04f04 	addi	r2,r2,-16068
  801940:	d8800115 	stw	r2,4(sp)
  801944:	00800084 	movi	r2,2
  801948:	d8800015 	stw	r2,0(sp)
  80194c:	01c00084 	movi	r7,2
  801950:	018021b4 	movhi	r6,134
  801954:	31b84e04 	addi	r6,r6,-7880
  801958:	000b883a 	mov	r5,zero
  80195c:	01002034 	movhi	r4,128
  801960:	21000e04 	addi	r4,r4,56
  801964:	08508300 	call	850830 <OSTaskCreateExt>
                  		0))
	{
		//printf("Camera task creation failure\n");
	}

	if(OSTaskCreateExt(wifi_task,
  801968:	d8000415 	stw	zero,16(sp)
  80196c:	d8000315 	stw	zero,12(sp)
  801970:	00820004 	movi	r2,2048
  801974:	d8800215 	stw	r2,8(sp)
  801978:	008021b4 	movhi	r2,134
  80197c:	10804f04 	addi	r2,r2,316
  801980:	d8800115 	stw	r2,4(sp)
  801984:	00800044 	movi	r2,1
  801988:	d8800015 	stw	r2,0(sp)
  80198c:	01c00044 	movi	r7,1
  801990:	018021b4 	movhi	r6,134
  801994:	31884e04 	addi	r6,r6,8504
  801998:	000b883a 	mov	r5,zero
  80199c:	01002034 	movhi	r4,128
  8019a0:	2106b304 	addi	r4,r4,6860
  8019a4:	08508300 	call	850830 <OSTaskCreateExt>
	{
		//printf("Wifi task creation failure\n");
	}

	//Interrupt masks
	IOWR_ALTERA_AVALON_PIO_IRQ_MASK(PROX_SENSOR_BASE, 0xF);
  8019a8:	00c003c4 	movi	r3,15
  8019ac:	00804074 	movhi	r2,257
  8019b0:	10a83e04 	addi	r2,r2,-24328
  8019b4:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PROX_SENSOR_BASE, 0x0);
  8019b8:	0007883a 	mov	r3,zero
  8019bc:	00804074 	movhi	r2,257
  8019c0:	10a83f04 	addi	r2,r2,-24324
  8019c4:	10c00035 	stwio	r3,0(r2)

	//Initialize the interrupt controllers
	printf("prox on\n");
  8019c8:	01002174 	movhi	r4,133
  8019cc:	211ba004 	addi	r4,r4,28288
  8019d0:	08346d40 	call	8346d4 <puts>
	if(alt_ic_isr_register(PROX_SENSOR_IRQ_INTERRUPT_CONTROLLER_ID,
  8019d4:	d8000015 	stw	zero,0(sp)
  8019d8:	000f883a 	mov	r7,zero
  8019dc:	01802034 	movhi	r6,128
  8019e0:	3184cc04 	addi	r6,r6,4912
  8019e4:	01400084 	movi	r5,2
  8019e8:	0009883a 	mov	r4,zero
  8019ec:	08496c40 	call	8496c4 <alt_ic_isr_register>
					    	NULL))
	{
		//printf("proximity sensor interrupt failed\n");
	}

	if(alt_ic_isr_register(CAM_UART_IRQ_INTERRUPT_CONTROLLER_ID,
  8019f0:	d8000015 	stw	zero,0(sp)
  8019f4:	000f883a 	mov	r7,zero
  8019f8:	01802034 	movhi	r6,128
  8019fc:	31834a04 	addi	r6,r6,3368
  801a00:	014001c4 	movi	r5,7
  801a04:	0009883a 	mov	r4,zero
  801a08:	08496c40 	call	8496c4 <alt_ic_isr_register>
	{
		//printf("cam interrupt failed\n");
	}

    //OSTimeDlyHMSM(0, 0, 1, 0);
    if(alt_ic_isr_register(WIFI_UART_IRQ_INTERRUPT_CONTROLLER_ID,
  801a0c:	d8000015 	stw	zero,0(sp)
  801a10:	000f883a 	mov	r7,zero
  801a14:	01802034 	movhi	r6,128
  801a18:	3186cc04 	addi	r6,r6,6960
  801a1c:	01400044 	movi	r5,1
  801a20:	0009883a 	mov	r4,zero
  801a24:	08496c40 	call	8496c4 <alt_ic_isr_register>
				  	  	   NULL))
	{
    	//printf("wifi interrupt failed\n");
	}

    IOWR_ALTERA_AVALON_PIO_DATA(BUTTON_LED_BASE, 0x1);
  801a28:	00c00044 	movi	r3,1
  801a2c:	00804074 	movhi	r2,257
  801a30:	10a82804 	addi	r2,r2,-24416
  801a34:	10c00035 	stwio	r3,0(r2)

    //Initialize internal queues
	camCommandQueue = OSQCreate(camCommandBuffer, CAM_COMMAND_BUFFER_LENGTH);
  801a38:	01400304 	movi	r5,12
  801a3c:	010021b4 	movhi	r4,134
  801a40:	21303e04 	addi	r4,r4,-16136
  801a44:	084e7700 	call	84e770 <OSQCreate>
  801a48:	d0a08815 	stw	r2,-32224(gp)
	camPackageQueue = OSQCreate(camPackageBuffer, CAM_PACKAGE_BUFFER_LENGTH);
  801a4c:	01408004 	movi	r5,512
  801a50:	010021b4 	movhi	r4,134
  801a54:	212e3e04 	addi	r4,r4,-18184
  801a58:	084e7700 	call	84e770 <OSQCreate>
  801a5c:	d0a08a15 	stw	r2,-32216(gp)
    wifiPackageQueue = OSQCreate(wifiPackageBuffer, WIFI_PACKAGE_BUFFER_LENGTH);
  801a60:	01400044 	movi	r5,1
  801a64:	d1208104 	addi	r4,gp,-32252
  801a68:	084e7700 	call	84e770 <OSQCreate>
  801a6c:	d0a08215 	stw	r2,-32248(gp)

    //Initialize intertask queues
    initCommandQueue = OSQCreate(initCommandBuffer, INIT_COMMAND_BUFFER_LENGTH);
  801a70:	01400044 	movi	r5,1
  801a74:	d1208504 	addi	r4,gp,-32236
  801a78:	084e7700 	call	84e770 <OSQCreate>
  801a7c:	d0a08715 	stw	r2,-32228(gp)
    findCommandQueue = OSQCreate(findCommandBuffer, FIND_COMMAND_BUFFER_LENGTH);
  801a80:	01400044 	movi	r5,1
  801a84:	d1208304 	addi	r4,gp,-32244
  801a88:	084e7700 	call	84e770 <OSQCreate>
  801a8c:	d0a08915 	stw	r2,-32220(gp)
    moveCommandQueue = OSQCreate(moveCommandBuffer, MOVE_COMMAND_BUFFER_LENGTH);
  801a90:	01400044 	movi	r5,1
  801a94:	d1208c04 	addi	r4,gp,-32208
  801a98:	084e7700 	call	84e770 <OSQCreate>
  801a9c:	d0a08e15 	stw	r2,-32200(gp)
    foundCommandQueue = OSQCreate(foundCommandBuffer, FOUND_COMMAND_BUFFER_LENGTH);
  801aa0:	01400044 	movi	r5,1
  801aa4:	d1208b04 	addi	r4,gp,-32212
  801aa8:	084e7700 	call	84e770 <OSQCreate>
  801aac:	d0a08f15 	stw	r2,-32196(gp)

	OSStart();
  801ab0:	084b18c0 	call	84b18c <OSStart>
	return 0;
  801ab4:	0005883a 	mov	r2,zero

}
  801ab8:	e037883a 	mov	sp,fp
  801abc:	dfc00117 	ldw	ra,4(sp)
  801ac0:	df000017 	ldw	fp,0(sp)
  801ac4:	dec00204 	addi	sp,sp,8
  801ac8:	f800283a 	ret

00801acc <wifi_task>:
 *      Author: Randy Baron
 */

#include "wifi.h"

void wifi_task(void* pdata){
  801acc:	defffc04 	addi	sp,sp,-16
  801ad0:	dfc00315 	stw	ra,12(sp)
  801ad4:	df000215 	stw	fp,8(sp)
  801ad8:	df000204 	addi	fp,sp,8
  801adc:	e13fff15 	stw	r4,-4(fp)
	uint8_t err;
    uint8_t wifiReceive;
    uint8_t motorProgress = 0xFF;
  801ae0:	00bfffc4 	movi	r2,-1
  801ae4:	e0bffe05 	stb	r2,-8(fp)
    //IOWR_ALTERA_AVALON_PIO_DATA(SPEAKER_BASE, 0x1);

	while (1){


        wifiReceive = (uint8_t) OSQPend(wifiPackageQueue, 0, &err);
  801ae8:	d0a08217 	ldw	r2,-32248(gp)
  801aec:	e0fffe84 	addi	r3,fp,-6
  801af0:	180d883a 	mov	r6,r3
  801af4:	000b883a 	mov	r5,zero
  801af8:	1009883a 	mov	r4,r2
  801afc:	084ec540 	call	84ec54 <OSQPend>
  801b00:	e0bffe45 	stb	r2,-7(fp)
        printf("Received form Wifi: %d \n", wifiReceive);
  801b04:	e0bffe43 	ldbu	r2,-7(fp)
  801b08:	100b883a 	mov	r5,r2
  801b0c:	01002174 	movhi	r4,133
  801b10:	211ba204 	addi	r4,r4,28296
  801b14:	08344500 	call	834450 <printf>
//			//found file, parse so we can recover from the crash
//			wifiReceive = parseLog(log);
//		}

        //printf("Received form Wifi: %d \n", wifiReceive);
        OSQPost(initCommandQueue, (void*) wifiReceive);
  801b18:	d0a08717 	ldw	r2,-32228(gp)
  801b1c:	e0fffe43 	ldbu	r3,-7(fp)
  801b20:	180b883a 	mov	r5,r3
  801b24:	1009883a 	mov	r4,r2
  801b28:	084f04c0 	call	84f04c <OSQPost>
	}
  801b2c:	003fee06 	br	801ae8 <__alt_mem_epcs_flash_controller_0+0xff7f8ae8>

00801b30 <wifi_uart_interrupt>:
}

void wifi_uart_interrupt(void * context){
  801b30:	defffc04 	addi	sp,sp,-16
  801b34:	dfc00315 	stw	ra,12(sp)
  801b38:	df000215 	stw	fp,8(sp)
  801b3c:	df000204 	addi	fp,sp,8
  801b40:	e13fff15 	stw	r4,-4(fp)
    uint8_t read = 0;
  801b44:	e03ffe05 	stb	zero,-8(fp)

    while(!(IORD_ALTERA_AVALON_UART_STATUS(WIFI_UART_BASE) & ALTERA_AVALON_UART_STATUS_RRDY_MSK));
  801b48:	0001883a 	nop
  801b4c:	00804074 	movhi	r2,257
  801b50:	10a81a04 	addi	r2,r2,-24472
  801b54:	10800037 	ldwio	r2,0(r2)
  801b58:	1080200c 	andi	r2,r2,128
  801b5c:	103ffb26 	beq	r2,zero,801b4c <__alt_mem_epcs_flash_controller_0+0xff7f8b4c>
    read = IORD_ALTERA_AVALON_UART_RXDATA(WIFI_UART_BASE);
  801b60:	00804074 	movhi	r2,257
  801b64:	10a81804 	addi	r2,r2,-24480
  801b68:	10800037 	ldwio	r2,0(r2)
  801b6c:	e0bffe05 	stb	r2,-8(fp)
    
    OSQPost(wifiPackageQueue, (void*) read);
  801b70:	d0a08217 	ldw	r2,-32248(gp)
  801b74:	e0fffe03 	ldbu	r3,-8(fp)
  801b78:	180b883a 	mov	r5,r3
  801b7c:	1009883a 	mov	r4,r2
  801b80:	084f04c0 	call	84f04c <OSQPost>

}
  801b84:	0001883a 	nop
  801b88:	e037883a 	mov	sp,fp
  801b8c:	dfc00117 	ldw	ra,4(sp)
  801b90:	df000017 	ldw	fp,0(sp)
  801b94:	dec00204 	addi	sp,sp,8
  801b98:	f800283a 	ret

00801b9c <parseLog>:

uint8_t parseLog(FILE* log){
  801b9c:	defffd04 	addi	sp,sp,-12
  801ba0:	df000215 	stw	fp,8(sp)
  801ba4:	df000204 	addi	fp,sp,8
  801ba8:	e13fff15 	stw	r4,-4(fp)
	uint8_t recovCommand = 0;
  801bac:	e03ffe05 	stb	zero,-8(fp)

	return recovCommand;
  801bb0:	e0bffe03 	ldbu	r2,-8(fp)
}
  801bb4:	e037883a 	mov	sp,fp
  801bb8:	df000017 	ldw	fp,0(sp)
  801bbc:	dec00104 	addi	sp,sp,4
  801bc0:	f800283a 	ret

00801bc4 <jpeg_CreateDecompress>:
  801bc4:	defff804 	addi	sp,sp,-32
  801bc8:	dfc00715 	stw	ra,28(sp)
  801bcc:	df000615 	stw	fp,24(sp)
  801bd0:	df000604 	addi	fp,sp,24
  801bd4:	e13ffd15 	stw	r4,-12(fp)
  801bd8:	e17ffe15 	stw	r5,-8(fp)
  801bdc:	e1bfff15 	stw	r6,-4(fp)
  801be0:	e0bffd17 	ldw	r2,-12(fp)
  801be4:	10000115 	stw	zero,4(r2)
  801be8:	e0bffe17 	ldw	r2,-8(fp)
  801bec:	108016a0 	cmpeqi	r2,r2,90
  801bf0:	1000111e 	bne	r2,zero,801c38 <jpeg_CreateDecompress+0x74>
  801bf4:	e0bffd17 	ldw	r2,-12(fp)
  801bf8:	10800017 	ldw	r2,0(r2)
  801bfc:	00c00344 	movi	r3,13
  801c00:	10c00515 	stw	r3,20(r2)
  801c04:	e0bffd17 	ldw	r2,-12(fp)
  801c08:	10800017 	ldw	r2,0(r2)
  801c0c:	00c01684 	movi	r3,90
  801c10:	10c00615 	stw	r3,24(r2)
  801c14:	e0bffd17 	ldw	r2,-12(fp)
  801c18:	10800017 	ldw	r2,0(r2)
  801c1c:	e0fffe17 	ldw	r3,-8(fp)
  801c20:	10c00715 	stw	r3,28(r2)
  801c24:	e0bffd17 	ldw	r2,-12(fp)
  801c28:	10800017 	ldw	r2,0(r2)
  801c2c:	10800017 	ldw	r2,0(r2)
  801c30:	e13ffd17 	ldw	r4,-12(fp)
  801c34:	103ee83a 	callr	r2
  801c38:	e0bfff17 	ldw	r2,-4(fp)
  801c3c:	10807a20 	cmpeqi	r2,r2,488
  801c40:	1000111e 	bne	r2,zero,801c88 <jpeg_CreateDecompress+0xc4>
  801c44:	e0bffd17 	ldw	r2,-12(fp)
  801c48:	10800017 	ldw	r2,0(r2)
  801c4c:	00c00584 	movi	r3,22
  801c50:	10c00515 	stw	r3,20(r2)
  801c54:	e0bffd17 	ldw	r2,-12(fp)
  801c58:	10800017 	ldw	r2,0(r2)
  801c5c:	00c07a04 	movi	r3,488
  801c60:	10c00615 	stw	r3,24(r2)
  801c64:	e0bffd17 	ldw	r2,-12(fp)
  801c68:	10800017 	ldw	r2,0(r2)
  801c6c:	e0ffff17 	ldw	r3,-4(fp)
  801c70:	10c00715 	stw	r3,28(r2)
  801c74:	e0bffd17 	ldw	r2,-12(fp)
  801c78:	10800017 	ldw	r2,0(r2)
  801c7c:	10800017 	ldw	r2,0(r2)
  801c80:	e13ffd17 	ldw	r4,-12(fp)
  801c84:	103ee83a 	callr	r2
  801c88:	e0bffd17 	ldw	r2,-12(fp)
  801c8c:	10800017 	ldw	r2,0(r2)
  801c90:	e0bffb15 	stw	r2,-20(fp)
  801c94:	e0bffd17 	ldw	r2,-12(fp)
  801c98:	10800317 	ldw	r2,12(r2)
  801c9c:	e0bffc15 	stw	r2,-16(fp)
  801ca0:	01807a04 	movi	r6,488
  801ca4:	000b883a 	mov	r5,zero
  801ca8:	e13ffd17 	ldw	r4,-12(fp)
  801cac:	08342980 	call	834298 <memset>
  801cb0:	e0bffd17 	ldw	r2,-12(fp)
  801cb4:	e0fffb17 	ldw	r3,-20(fp)
  801cb8:	10c00015 	stw	r3,0(r2)
  801cbc:	e0bffd17 	ldw	r2,-12(fp)
  801cc0:	e0fffc17 	ldw	r3,-16(fp)
  801cc4:	10c00315 	stw	r3,12(r2)
  801cc8:	e0bffd17 	ldw	r2,-12(fp)
  801ccc:	00c00044 	movi	r3,1
  801cd0:	10c00415 	stw	r3,16(r2)
  801cd4:	e13ffd17 	ldw	r4,-12(fp)
  801cd8:	080f8440 	call	80f844 <jinit_memory_mgr>
  801cdc:	e0bffd17 	ldw	r2,-12(fp)
  801ce0:	10000215 	stw	zero,8(r2)
  801ce4:	e0bffd17 	ldw	r2,-12(fp)
  801ce8:	10000615 	stw	zero,24(r2)
  801cec:	e03ffa15 	stw	zero,-24(fp)
  801cf0:	00000a06 	br	801d1c <jpeg_CreateDecompress+0x158>
  801cf4:	e0fffd17 	ldw	r3,-12(fp)
  801cf8:	e0bffa17 	ldw	r2,-24(fp)
  801cfc:	10800a44 	addi	r2,r2,41
  801d00:	1085883a 	add	r2,r2,r2
  801d04:	1085883a 	add	r2,r2,r2
  801d08:	1885883a 	add	r2,r3,r2
  801d0c:	10000015 	stw	zero,0(r2)
  801d10:	e0bffa17 	ldw	r2,-24(fp)
  801d14:	10800044 	addi	r2,r2,1
  801d18:	e0bffa15 	stw	r2,-24(fp)
  801d1c:	e0bffa17 	ldw	r2,-24(fp)
  801d20:	10800110 	cmplti	r2,r2,4
  801d24:	103ff31e 	bne	r2,zero,801cf4 <__alt_mem_epcs_flash_controller_0+0xff7f8cf4>
  801d28:	e03ffa15 	stw	zero,-24(fp)
  801d2c:	00001106 	br	801d74 <jpeg_CreateDecompress+0x1b0>
  801d30:	e0fffd17 	ldw	r3,-12(fp)
  801d34:	e0bffa17 	ldw	r2,-24(fp)
  801d38:	10800b44 	addi	r2,r2,45
  801d3c:	1085883a 	add	r2,r2,r2
  801d40:	1085883a 	add	r2,r2,r2
  801d44:	1885883a 	add	r2,r3,r2
  801d48:	10000015 	stw	zero,0(r2)
  801d4c:	e0fffd17 	ldw	r3,-12(fp)
  801d50:	e0bffa17 	ldw	r2,-24(fp)
  801d54:	10800c44 	addi	r2,r2,49
  801d58:	1085883a 	add	r2,r2,r2
  801d5c:	1085883a 	add	r2,r2,r2
  801d60:	1885883a 	add	r2,r3,r2
  801d64:	10000015 	stw	zero,0(r2)
  801d68:	e0bffa17 	ldw	r2,-24(fp)
  801d6c:	10800044 	addi	r2,r2,1
  801d70:	e0bffa15 	stw	r2,-24(fp)
  801d74:	e0bffa17 	ldw	r2,-24(fp)
  801d78:	10800110 	cmplti	r2,r2,4
  801d7c:	103fec1e 	bne	r2,zero,801d30 <__alt_mem_epcs_flash_controller_0+0xff7f8d30>
  801d80:	e0bffd17 	ldw	r2,-12(fp)
  801d84:	10004e15 	stw	zero,312(r2)
  801d88:	e13ffd17 	ldw	r4,-12(fp)
  801d8c:	080a3840 	call	80a384 <jinit_marker_reader>
  801d90:	e13ffd17 	ldw	r4,-12(fp)
  801d94:	08050f40 	call	8050f4 <jinit_input_controller>
  801d98:	e0bffd17 	ldw	r2,-12(fp)
  801d9c:	00c03204 	movi	r3,200
  801da0:	10c00515 	stw	r3,20(r2)
  801da4:	0001883a 	nop
  801da8:	e037883a 	mov	sp,fp
  801dac:	dfc00117 	ldw	ra,4(sp)
  801db0:	df000017 	ldw	fp,0(sp)
  801db4:	dec00204 	addi	sp,sp,8
  801db8:	f800283a 	ret

00801dbc <jpeg_destroy_decompress>:
  801dbc:	defffd04 	addi	sp,sp,-12
  801dc0:	dfc00215 	stw	ra,8(sp)
  801dc4:	df000115 	stw	fp,4(sp)
  801dc8:	df000104 	addi	fp,sp,4
  801dcc:	e13fff15 	stw	r4,-4(fp)
  801dd0:	e13fff17 	ldw	r4,-4(fp)
  801dd4:	08141100 	call	814110 <jpeg_destroy>
  801dd8:	0001883a 	nop
  801ddc:	e037883a 	mov	sp,fp
  801de0:	dfc00117 	ldw	ra,4(sp)
  801de4:	df000017 	ldw	fp,0(sp)
  801de8:	dec00204 	addi	sp,sp,8
  801dec:	f800283a 	ret

00801df0 <jpeg_abort_decompress>:
  801df0:	defffd04 	addi	sp,sp,-12
  801df4:	dfc00215 	stw	ra,8(sp)
  801df8:	df000115 	stw	fp,4(sp)
  801dfc:	df000104 	addi	fp,sp,4
  801e00:	e13fff15 	stw	r4,-4(fp)
  801e04:	e13fff17 	ldw	r4,-4(fp)
  801e08:	081406c0 	call	81406c <jpeg_abort>
  801e0c:	0001883a 	nop
  801e10:	e037883a 	mov	sp,fp
  801e14:	dfc00117 	ldw	ra,4(sp)
  801e18:	df000017 	ldw	fp,0(sp)
  801e1c:	dec00204 	addi	sp,sp,8
  801e20:	f800283a 	ret

00801e24 <default_decompress_parms>:
  801e24:	defff904 	addi	sp,sp,-28
  801e28:	dfc00615 	stw	ra,24(sp)
  801e2c:	df000515 	stw	fp,20(sp)
  801e30:	df000504 	addi	fp,sp,20
  801e34:	e13fff15 	stw	r4,-4(fp)
  801e38:	e0bfff17 	ldw	r2,-4(fp)
  801e3c:	10800917 	ldw	r2,36(r2)
  801e40:	10c000e0 	cmpeqi	r3,r2,3
  801e44:	18000b1e 	bne	r3,zero,801e74 <default_decompress_parms+0x50>
  801e48:	10c00120 	cmpeqi	r3,r2,4
  801e4c:	1800991e 	bne	r3,zero,8020b4 <default_decompress_parms+0x290>
  801e50:	10800060 	cmpeqi	r2,r2,1
  801e54:	1000c526 	beq	r2,zero,80216c <default_decompress_parms+0x348>
  801e58:	e0bfff17 	ldw	r2,-4(fp)
  801e5c:	00c00044 	movi	r3,1
  801e60:	10c00a15 	stw	r3,40(r2)
  801e64:	e0bfff17 	ldw	r2,-4(fp)
  801e68:	00c00044 	movi	r3,1
  801e6c:	10c00b15 	stw	r3,44(r2)
  801e70:	0000c306 	br	802180 <default_decompress_parms+0x35c>
  801e74:	e0bfff17 	ldw	r2,-4(fp)
  801e78:	10803617 	ldw	r2,216(r2)
  801e7c:	10800017 	ldw	r2,0(r2)
  801e80:	e0bffb15 	stw	r2,-20(fp)
  801e84:	e0bfff17 	ldw	r2,-4(fp)
  801e88:	10803617 	ldw	r2,216(r2)
  801e8c:	10801604 	addi	r2,r2,88
  801e90:	10800017 	ldw	r2,0(r2)
  801e94:	e0bffc15 	stw	r2,-16(fp)
  801e98:	e0bfff17 	ldw	r2,-4(fp)
  801e9c:	10803617 	ldw	r2,216(r2)
  801ea0:	10802c04 	addi	r2,r2,176
  801ea4:	10800017 	ldw	r2,0(r2)
  801ea8:	e0bffd15 	stw	r2,-12(fp)
  801eac:	e0bffb17 	ldw	r2,-20(fp)
  801eb0:	10800058 	cmpnei	r2,r2,1
  801eb4:	10000a1e 	bne	r2,zero,801ee0 <default_decompress_parms+0xbc>
  801eb8:	e0bffc17 	ldw	r2,-16(fp)
  801ebc:	10800098 	cmpnei	r2,r2,2
  801ec0:	1000071e 	bne	r2,zero,801ee0 <default_decompress_parms+0xbc>
  801ec4:	e0bffd17 	ldw	r2,-12(fp)
  801ec8:	108000d8 	cmpnei	r2,r2,3
  801ecc:	1000041e 	bne	r2,zero,801ee0 <default_decompress_parms+0xbc>
  801ed0:	e0bfff17 	ldw	r2,-4(fp)
  801ed4:	00c000c4 	movi	r3,3
  801ed8:	10c00a15 	stw	r3,40(r2)
  801edc:	00007106 	br	8020a4 <default_decompress_parms+0x280>
  801ee0:	e0bffb17 	ldw	r2,-20(fp)
  801ee4:	10800058 	cmpnei	r2,r2,1
  801ee8:	10000a1e 	bne	r2,zero,801f14 <default_decompress_parms+0xf0>
  801eec:	e0bffc17 	ldw	r2,-16(fp)
  801ef0:	10800898 	cmpnei	r2,r2,34
  801ef4:	1000071e 	bne	r2,zero,801f14 <default_decompress_parms+0xf0>
  801ef8:	e0bffd17 	ldw	r2,-12(fp)
  801efc:	108008d8 	cmpnei	r2,r2,35
  801f00:	1000041e 	bne	r2,zero,801f14 <default_decompress_parms+0xf0>
  801f04:	e0bfff17 	ldw	r2,-4(fp)
  801f08:	00c001c4 	movi	r3,7
  801f0c:	10c00a15 	stw	r3,40(r2)
  801f10:	00006406 	br	8020a4 <default_decompress_parms+0x280>
  801f14:	e0bffb17 	ldw	r2,-20(fp)
  801f18:	10801498 	cmpnei	r2,r2,82
  801f1c:	10000a1e 	bne	r2,zero,801f48 <default_decompress_parms+0x124>
  801f20:	e0bffc17 	ldw	r2,-16(fp)
  801f24:	108011d8 	cmpnei	r2,r2,71
  801f28:	1000071e 	bne	r2,zero,801f48 <default_decompress_parms+0x124>
  801f2c:	e0bffd17 	ldw	r2,-12(fp)
  801f30:	10801098 	cmpnei	r2,r2,66
  801f34:	1000041e 	bne	r2,zero,801f48 <default_decompress_parms+0x124>
  801f38:	e0bfff17 	ldw	r2,-4(fp)
  801f3c:	00c00084 	movi	r3,2
  801f40:	10c00a15 	stw	r3,40(r2)
  801f44:	00005706 	br	8020a4 <default_decompress_parms+0x280>
  801f48:	e0bffb17 	ldw	r2,-20(fp)
  801f4c:	10801c98 	cmpnei	r2,r2,114
  801f50:	10000a1e 	bne	r2,zero,801f7c <default_decompress_parms+0x158>
  801f54:	e0bffc17 	ldw	r2,-16(fp)
  801f58:	108019d8 	cmpnei	r2,r2,103
  801f5c:	1000071e 	bne	r2,zero,801f7c <default_decompress_parms+0x158>
  801f60:	e0bffd17 	ldw	r2,-12(fp)
  801f64:	10801898 	cmpnei	r2,r2,98
  801f68:	1000041e 	bne	r2,zero,801f7c <default_decompress_parms+0x158>
  801f6c:	e0bfff17 	ldw	r2,-4(fp)
  801f70:	00c00184 	movi	r3,6
  801f74:	10c00a15 	stw	r3,40(r2)
  801f78:	00004a06 	br	8020a4 <default_decompress_parms+0x280>
  801f7c:	e0bfff17 	ldw	r2,-4(fp)
  801f80:	10804717 	ldw	r2,284(r2)
  801f84:	10000426 	beq	r2,zero,801f98 <default_decompress_parms+0x174>
  801f88:	e0bfff17 	ldw	r2,-4(fp)
  801f8c:	00c000c4 	movi	r3,3
  801f90:	10c00a15 	stw	r3,40(r2)
  801f94:	00004306 	br	8020a4 <default_decompress_parms+0x280>
  801f98:	e0bfff17 	ldw	r2,-4(fp)
  801f9c:	10804a17 	ldw	r2,296(r2)
  801fa0:	10002426 	beq	r2,zero,802034 <default_decompress_parms+0x210>
  801fa4:	e0bfff17 	ldw	r2,-4(fp)
  801fa8:	10804b03 	ldbu	r2,300(r2)
  801fac:	10803fcc 	andi	r2,r2,255
  801fb0:	10000326 	beq	r2,zero,801fc0 <default_decompress_parms+0x19c>
  801fb4:	10800060 	cmpeqi	r2,r2,1
  801fb8:	1000051e 	bne	r2,zero,801fd0 <default_decompress_parms+0x1ac>
  801fbc:	00000806 	br	801fe0 <default_decompress_parms+0x1bc>
  801fc0:	e0bfff17 	ldw	r2,-4(fp)
  801fc4:	00c00084 	movi	r3,2
  801fc8:	10c00a15 	stw	r3,40(r2)
  801fcc:	00003506 	br	8020a4 <default_decompress_parms+0x280>
  801fd0:	e0bfff17 	ldw	r2,-4(fp)
  801fd4:	00c000c4 	movi	r3,3
  801fd8:	10c00a15 	stw	r3,40(r2)
  801fdc:	00003106 	br	8020a4 <default_decompress_parms+0x280>
  801fe0:	e0bfff17 	ldw	r2,-4(fp)
  801fe4:	10800017 	ldw	r2,0(r2)
  801fe8:	00c01d04 	movi	r3,116
  801fec:	10c00515 	stw	r3,20(r2)
  801ff0:	e0bfff17 	ldw	r2,-4(fp)
  801ff4:	10800017 	ldw	r2,0(r2)
  801ff8:	e0ffff17 	ldw	r3,-4(fp)
  801ffc:	18c04b03 	ldbu	r3,300(r3)
  802000:	18c03fcc 	andi	r3,r3,255
  802004:	10c00615 	stw	r3,24(r2)
  802008:	e0bfff17 	ldw	r2,-4(fp)
  80200c:	10800017 	ldw	r2,0(r2)
  802010:	10800117 	ldw	r2,4(r2)
  802014:	017fffc4 	movi	r5,-1
  802018:	e13fff17 	ldw	r4,-4(fp)
  80201c:	103ee83a 	callr	r2
  802020:	e0bfff17 	ldw	r2,-4(fp)
  802024:	00c000c4 	movi	r3,3
  802028:	10c00a15 	stw	r3,40(r2)
  80202c:	0001883a 	nop
  802030:	00001c06 	br	8020a4 <default_decompress_parms+0x280>
  802034:	e0bfff17 	ldw	r2,-4(fp)
  802038:	10800017 	ldw	r2,0(r2)
  80203c:	10800604 	addi	r2,r2,24
  802040:	e0bffe15 	stw	r2,-8(fp)
  802044:	e0bffe17 	ldw	r2,-8(fp)
  802048:	e0fffb17 	ldw	r3,-20(fp)
  80204c:	10c00015 	stw	r3,0(r2)
  802050:	e0bffe17 	ldw	r2,-8(fp)
  802054:	10800104 	addi	r2,r2,4
  802058:	e0fffc17 	ldw	r3,-16(fp)
  80205c:	10c00015 	stw	r3,0(r2)
  802060:	e0bffe17 	ldw	r2,-8(fp)
  802064:	10800204 	addi	r2,r2,8
  802068:	e0fffd17 	ldw	r3,-12(fp)
  80206c:	10c00015 	stw	r3,0(r2)
  802070:	e0bfff17 	ldw	r2,-4(fp)
  802074:	10800017 	ldw	r2,0(r2)
  802078:	00c01c44 	movi	r3,113
  80207c:	10c00515 	stw	r3,20(r2)
  802080:	e0bfff17 	ldw	r2,-4(fp)
  802084:	10800017 	ldw	r2,0(r2)
  802088:	10800117 	ldw	r2,4(r2)
  80208c:	01400044 	movi	r5,1
  802090:	e13fff17 	ldw	r4,-4(fp)
  802094:	103ee83a 	callr	r2
  802098:	e0bfff17 	ldw	r2,-4(fp)
  80209c:	00c000c4 	movi	r3,3
  8020a0:	10c00a15 	stw	r3,40(r2)
  8020a4:	e0bfff17 	ldw	r2,-4(fp)
  8020a8:	00c00084 	movi	r3,2
  8020ac:	10c00b15 	stw	r3,44(r2)
  8020b0:	00003306 	br	802180 <default_decompress_parms+0x35c>
  8020b4:	e0bfff17 	ldw	r2,-4(fp)
  8020b8:	10804a17 	ldw	r2,296(r2)
  8020bc:	10002426 	beq	r2,zero,802150 <default_decompress_parms+0x32c>
  8020c0:	e0bfff17 	ldw	r2,-4(fp)
  8020c4:	10804b03 	ldbu	r2,300(r2)
  8020c8:	10803fcc 	andi	r2,r2,255
  8020cc:	10000326 	beq	r2,zero,8020dc <default_decompress_parms+0x2b8>
  8020d0:	108000a0 	cmpeqi	r2,r2,2
  8020d4:	1000051e 	bne	r2,zero,8020ec <default_decompress_parms+0x2c8>
  8020d8:	00000806 	br	8020fc <default_decompress_parms+0x2d8>
  8020dc:	e0bfff17 	ldw	r2,-4(fp)
  8020e0:	00c00104 	movi	r3,4
  8020e4:	10c00a15 	stw	r3,40(r2)
  8020e8:	00001c06 	br	80215c <default_decompress_parms+0x338>
  8020ec:	e0bfff17 	ldw	r2,-4(fp)
  8020f0:	00c00144 	movi	r3,5
  8020f4:	10c00a15 	stw	r3,40(r2)
  8020f8:	00001806 	br	80215c <default_decompress_parms+0x338>
  8020fc:	e0bfff17 	ldw	r2,-4(fp)
  802100:	10800017 	ldw	r2,0(r2)
  802104:	00c01d04 	movi	r3,116
  802108:	10c00515 	stw	r3,20(r2)
  80210c:	e0bfff17 	ldw	r2,-4(fp)
  802110:	10800017 	ldw	r2,0(r2)
  802114:	e0ffff17 	ldw	r3,-4(fp)
  802118:	18c04b03 	ldbu	r3,300(r3)
  80211c:	18c03fcc 	andi	r3,r3,255
  802120:	10c00615 	stw	r3,24(r2)
  802124:	e0bfff17 	ldw	r2,-4(fp)
  802128:	10800017 	ldw	r2,0(r2)
  80212c:	10800117 	ldw	r2,4(r2)
  802130:	017fffc4 	movi	r5,-1
  802134:	e13fff17 	ldw	r4,-4(fp)
  802138:	103ee83a 	callr	r2
  80213c:	e0bfff17 	ldw	r2,-4(fp)
  802140:	00c00144 	movi	r3,5
  802144:	10c00a15 	stw	r3,40(r2)
  802148:	0001883a 	nop
  80214c:	00000306 	br	80215c <default_decompress_parms+0x338>
  802150:	e0bfff17 	ldw	r2,-4(fp)
  802154:	00c00104 	movi	r3,4
  802158:	10c00a15 	stw	r3,40(r2)
  80215c:	e0bfff17 	ldw	r2,-4(fp)
  802160:	00c00104 	movi	r3,4
  802164:	10c00b15 	stw	r3,44(r2)
  802168:	00000506 	br	802180 <default_decompress_parms+0x35c>
  80216c:	e0bfff17 	ldw	r2,-4(fp)
  802170:	10000a15 	stw	zero,40(r2)
  802174:	e0bfff17 	ldw	r2,-4(fp)
  802178:	10000b15 	stw	zero,44(r2)
  80217c:	0001883a 	nop
  802180:	e0bfff17 	ldw	r2,-4(fp)
  802184:	10806b17 	ldw	r2,428(r2)
  802188:	1007883a 	mov	r3,r2
  80218c:	e0bfff17 	ldw	r2,-4(fp)
  802190:	10c00c15 	stw	r3,48(r2)
  802194:	e0bfff17 	ldw	r2,-4(fp)
  802198:	10806b17 	ldw	r2,428(r2)
  80219c:	1007883a 	mov	r3,r2
  8021a0:	e0bfff17 	ldw	r2,-4(fp)
  8021a4:	10c00d15 	stw	r3,52(r2)
  8021a8:	e0bfff17 	ldw	r2,-4(fp)
  8021ac:	10000e15 	stw	zero,56(r2)
  8021b0:	00cffc34 	movhi	r3,16368
  8021b4:	10c00f15 	stw	r3,60(r2)
  8021b8:	e0bfff17 	ldw	r2,-4(fp)
  8021bc:	10001015 	stw	zero,64(r2)
  8021c0:	e0bfff17 	ldw	r2,-4(fp)
  8021c4:	10001115 	stw	zero,68(r2)
  8021c8:	e0bfff17 	ldw	r2,-4(fp)
  8021cc:	10001215 	stw	zero,72(r2)
  8021d0:	e0bfff17 	ldw	r2,-4(fp)
  8021d4:	00c00044 	movi	r3,1
  8021d8:	10c01315 	stw	r3,76(r2)
  8021dc:	e0bfff17 	ldw	r2,-4(fp)
  8021e0:	00c00044 	movi	r3,1
  8021e4:	10c01415 	stw	r3,80(r2)
  8021e8:	e0bfff17 	ldw	r2,-4(fp)
  8021ec:	10001515 	stw	zero,84(r2)
  8021f0:	e0bfff17 	ldw	r2,-4(fp)
  8021f4:	00c00084 	movi	r3,2
  8021f8:	10c01615 	stw	r3,88(r2)
  8021fc:	e0bfff17 	ldw	r2,-4(fp)
  802200:	00c00044 	movi	r3,1
  802204:	10c01715 	stw	r3,92(r2)
  802208:	e0bfff17 	ldw	r2,-4(fp)
  80220c:	00c04004 	movi	r3,256
  802210:	10c01815 	stw	r3,96(r2)
  802214:	e0bfff17 	ldw	r2,-4(fp)
  802218:	10002215 	stw	zero,136(r2)
  80221c:	e0bfff17 	ldw	r2,-4(fp)
  802220:	10001915 	stw	zero,100(r2)
  802224:	e0bfff17 	ldw	r2,-4(fp)
  802228:	10001a15 	stw	zero,104(r2)
  80222c:	e0bfff17 	ldw	r2,-4(fp)
  802230:	10001b15 	stw	zero,108(r2)
  802234:	0001883a 	nop
  802238:	e037883a 	mov	sp,fp
  80223c:	dfc00117 	ldw	ra,4(sp)
  802240:	df000017 	ldw	fp,0(sp)
  802244:	dec00204 	addi	sp,sp,8
  802248:	f800283a 	ret

0080224c <jpeg_read_header>:
  80224c:	defffb04 	addi	sp,sp,-20
  802250:	dfc00415 	stw	ra,16(sp)
  802254:	df000315 	stw	fp,12(sp)
  802258:	df000304 	addi	fp,sp,12
  80225c:	e13ffe15 	stw	r4,-8(fp)
  802260:	e17fff15 	stw	r5,-4(fp)
  802264:	e0bffe17 	ldw	r2,-8(fp)
  802268:	10800517 	ldw	r2,20(r2)
  80226c:	10803220 	cmpeqi	r2,r2,200
  802270:	1000121e 	bne	r2,zero,8022bc <jpeg_read_header+0x70>
  802274:	e0bffe17 	ldw	r2,-8(fp)
  802278:	10800517 	ldw	r2,20(r2)
  80227c:	10803260 	cmpeqi	r2,r2,201
  802280:	10000e1e 	bne	r2,zero,8022bc <jpeg_read_header+0x70>
  802284:	e0bffe17 	ldw	r2,-8(fp)
  802288:	10800017 	ldw	r2,0(r2)
  80228c:	00c00544 	movi	r3,21
  802290:	10c00515 	stw	r3,20(r2)
  802294:	e0bffe17 	ldw	r2,-8(fp)
  802298:	10800017 	ldw	r2,0(r2)
  80229c:	e0fffe17 	ldw	r3,-8(fp)
  8022a0:	18c00517 	ldw	r3,20(r3)
  8022a4:	10c00615 	stw	r3,24(r2)
  8022a8:	e0bffe17 	ldw	r2,-8(fp)
  8022ac:	10800017 	ldw	r2,0(r2)
  8022b0:	10800017 	ldw	r2,0(r2)
  8022b4:	e13ffe17 	ldw	r4,-8(fp)
  8022b8:	103ee83a 	callr	r2
  8022bc:	e13ffe17 	ldw	r4,-8(fp)
  8022c0:	08023440 	call	802344 <jpeg_consume_input>
  8022c4:	e0bffd15 	stw	r2,-12(fp)
  8022c8:	e0bffd17 	ldw	r2,-12(fp)
  8022cc:	10c00060 	cmpeqi	r3,r2,1
  8022d0:	1800031e 	bne	r3,zero,8022e0 <jpeg_read_header+0x94>
  8022d4:	108000a0 	cmpeqi	r2,r2,2
  8022d8:	1000041e 	bne	r2,zero,8022ec <jpeg_read_header+0xa0>
  8022dc:	00001306 	br	80232c <jpeg_read_header+0xe0>
  8022e0:	00800044 	movi	r2,1
  8022e4:	e0bffd15 	stw	r2,-12(fp)
  8022e8:	00001006 	br	80232c <jpeg_read_header+0xe0>
  8022ec:	e0bfff17 	ldw	r2,-4(fp)
  8022f0:	10000926 	beq	r2,zero,802318 <jpeg_read_header+0xcc>
  8022f4:	e0bffe17 	ldw	r2,-8(fp)
  8022f8:	10800017 	ldw	r2,0(r2)
  8022fc:	00c00d44 	movi	r3,53
  802300:	10c00515 	stw	r3,20(r2)
  802304:	e0bffe17 	ldw	r2,-8(fp)
  802308:	10800017 	ldw	r2,0(r2)
  80230c:	10800017 	ldw	r2,0(r2)
  802310:	e13ffe17 	ldw	r4,-8(fp)
  802314:	103ee83a 	callr	r2
  802318:	e13ffe17 	ldw	r4,-8(fp)
  80231c:	081406c0 	call	81406c <jpeg_abort>
  802320:	00800084 	movi	r2,2
  802324:	e0bffd15 	stw	r2,-12(fp)
  802328:	0001883a 	nop
  80232c:	e0bffd17 	ldw	r2,-12(fp)
  802330:	e037883a 	mov	sp,fp
  802334:	dfc00117 	ldw	ra,4(sp)
  802338:	df000017 	ldw	fp,0(sp)
  80233c:	dec00204 	addi	sp,sp,8
  802340:	f800283a 	ret

00802344 <jpeg_consume_input>:
  802344:	defffc04 	addi	sp,sp,-16
  802348:	dfc00315 	stw	ra,12(sp)
  80234c:	df000215 	stw	fp,8(sp)
  802350:	df000204 	addi	fp,sp,8
  802354:	e13fff15 	stw	r4,-4(fp)
  802358:	e03ffe15 	stw	zero,-8(fp)
  80235c:	e0bfff17 	ldw	r2,-4(fp)
  802360:	10800517 	ldw	r2,20(r2)
  802364:	10bfce04 	addi	r2,r2,-200
  802368:	10c002e8 	cmpgeui	r3,r2,11
  80236c:	1800371e 	bne	r3,zero,80244c <jpeg_consume_input+0x108>
  802370:	100690ba 	slli	r3,r2,2
  802374:	00802034 	movhi	r2,128
  802378:	1088e204 	addi	r2,r2,9096
  80237c:	1885883a 	add	r2,r3,r2
  802380:	10800017 	ldw	r2,0(r2)
  802384:	1000683a 	jmp	r2
  802388:	008023b4 	movhi	r2,142
  80238c:	008023e8 	cmpgeui	r2,zero,143
  802390:	00802424 	muli	r2,zero,144
  802394:	00802430 	cmpltui	r2,zero,144
  802398:	00802430 	cmpltui	r2,zero,144
  80239c:	00802430 	cmpltui	r2,zero,144
  8023a0:	00802430 	cmpltui	r2,zero,144
  8023a4:	00802430 	cmpltui	r2,zero,144
  8023a8:	00802430 	cmpltui	r2,zero,144
  8023ac:	0080244c 	andi	r2,zero,145
  8023b0:	00802430 	cmpltui	r2,zero,144
  8023b4:	e0bfff17 	ldw	r2,-4(fp)
  8023b8:	10807317 	ldw	r2,460(r2)
  8023bc:	10800117 	ldw	r2,4(r2)
  8023c0:	e13fff17 	ldw	r4,-4(fp)
  8023c4:	103ee83a 	callr	r2
  8023c8:	e0bfff17 	ldw	r2,-4(fp)
  8023cc:	10800617 	ldw	r2,24(r2)
  8023d0:	10800217 	ldw	r2,8(r2)
  8023d4:	e13fff17 	ldw	r4,-4(fp)
  8023d8:	103ee83a 	callr	r2
  8023dc:	e0bfff17 	ldw	r2,-4(fp)
  8023e0:	00c03244 	movi	r3,201
  8023e4:	10c00515 	stw	r3,20(r2)
  8023e8:	e0bfff17 	ldw	r2,-4(fp)
  8023ec:	10807317 	ldw	r2,460(r2)
  8023f0:	10800017 	ldw	r2,0(r2)
  8023f4:	e13fff17 	ldw	r4,-4(fp)
  8023f8:	103ee83a 	callr	r2
  8023fc:	e0bffe15 	stw	r2,-8(fp)
  802400:	e0bffe17 	ldw	r2,-8(fp)
  802404:	10800058 	cmpnei	r2,r2,1
  802408:	10001f1e 	bne	r2,zero,802488 <jpeg_consume_input+0x144>
  80240c:	e13fff17 	ldw	r4,-4(fp)
  802410:	0801e240 	call	801e24 <default_decompress_parms>
  802414:	e0bfff17 	ldw	r2,-4(fp)
  802418:	00c03284 	movi	r3,202
  80241c:	10c00515 	stw	r3,20(r2)
  802420:	00001906 	br	802488 <jpeg_consume_input+0x144>
  802424:	00800044 	movi	r2,1
  802428:	e0bffe15 	stw	r2,-8(fp)
  80242c:	00001706 	br	80248c <jpeg_consume_input+0x148>
  802430:	e0bfff17 	ldw	r2,-4(fp)
  802434:	10807317 	ldw	r2,460(r2)
  802438:	10800017 	ldw	r2,0(r2)
  80243c:	e13fff17 	ldw	r4,-4(fp)
  802440:	103ee83a 	callr	r2
  802444:	e0bffe15 	stw	r2,-8(fp)
  802448:	00001006 	br	80248c <jpeg_consume_input+0x148>
  80244c:	e0bfff17 	ldw	r2,-4(fp)
  802450:	10800017 	ldw	r2,0(r2)
  802454:	00c00544 	movi	r3,21
  802458:	10c00515 	stw	r3,20(r2)
  80245c:	e0bfff17 	ldw	r2,-4(fp)
  802460:	10800017 	ldw	r2,0(r2)
  802464:	e0ffff17 	ldw	r3,-4(fp)
  802468:	18c00517 	ldw	r3,20(r3)
  80246c:	10c00615 	stw	r3,24(r2)
  802470:	e0bfff17 	ldw	r2,-4(fp)
  802474:	10800017 	ldw	r2,0(r2)
  802478:	10800017 	ldw	r2,0(r2)
  80247c:	e13fff17 	ldw	r4,-4(fp)
  802480:	103ee83a 	callr	r2
  802484:	00000106 	br	80248c <jpeg_consume_input+0x148>
  802488:	0001883a 	nop
  80248c:	e0bffe17 	ldw	r2,-8(fp)
  802490:	e037883a 	mov	sp,fp
  802494:	dfc00117 	ldw	ra,4(sp)
  802498:	df000017 	ldw	fp,0(sp)
  80249c:	dec00204 	addi	sp,sp,8
  8024a0:	f800283a 	ret

008024a4 <jpeg_input_complete>:
  8024a4:	defffd04 	addi	sp,sp,-12
  8024a8:	dfc00215 	stw	ra,8(sp)
  8024ac:	df000115 	stw	fp,4(sp)
  8024b0:	df000104 	addi	fp,sp,4
  8024b4:	e13fff15 	stw	r4,-4(fp)
  8024b8:	e0bfff17 	ldw	r2,-4(fp)
  8024bc:	10800517 	ldw	r2,20(r2)
  8024c0:	10803210 	cmplti	r2,r2,200
  8024c4:	1000041e 	bne	r2,zero,8024d8 <jpeg_input_complete+0x34>
  8024c8:	e0bfff17 	ldw	r2,-4(fp)
  8024cc:	10800517 	ldw	r2,20(r2)
  8024d0:	108034d0 	cmplti	r2,r2,211
  8024d4:	10000e1e 	bne	r2,zero,802510 <jpeg_input_complete+0x6c>
  8024d8:	e0bfff17 	ldw	r2,-4(fp)
  8024dc:	10800017 	ldw	r2,0(r2)
  8024e0:	00c00544 	movi	r3,21
  8024e4:	10c00515 	stw	r3,20(r2)
  8024e8:	e0bfff17 	ldw	r2,-4(fp)
  8024ec:	10800017 	ldw	r2,0(r2)
  8024f0:	e0ffff17 	ldw	r3,-4(fp)
  8024f4:	18c00517 	ldw	r3,20(r3)
  8024f8:	10c00615 	stw	r3,24(r2)
  8024fc:	e0bfff17 	ldw	r2,-4(fp)
  802500:	10800017 	ldw	r2,0(r2)
  802504:	10800017 	ldw	r2,0(r2)
  802508:	e13fff17 	ldw	r4,-4(fp)
  80250c:	103ee83a 	callr	r2
  802510:	e0bfff17 	ldw	r2,-4(fp)
  802514:	10807317 	ldw	r2,460(r2)
  802518:	10800517 	ldw	r2,20(r2)
  80251c:	e037883a 	mov	sp,fp
  802520:	dfc00117 	ldw	ra,4(sp)
  802524:	df000017 	ldw	fp,0(sp)
  802528:	dec00204 	addi	sp,sp,8
  80252c:	f800283a 	ret

00802530 <jpeg_has_multiple_scans>:
  802530:	defffd04 	addi	sp,sp,-12
  802534:	dfc00215 	stw	ra,8(sp)
  802538:	df000115 	stw	fp,4(sp)
  80253c:	df000104 	addi	fp,sp,4
  802540:	e13fff15 	stw	r4,-4(fp)
  802544:	e0bfff17 	ldw	r2,-4(fp)
  802548:	10800517 	ldw	r2,20(r2)
  80254c:	10803290 	cmplti	r2,r2,202
  802550:	1000041e 	bne	r2,zero,802564 <jpeg_has_multiple_scans+0x34>
  802554:	e0bfff17 	ldw	r2,-4(fp)
  802558:	10800517 	ldw	r2,20(r2)
  80255c:	108034d0 	cmplti	r2,r2,211
  802560:	10000e1e 	bne	r2,zero,80259c <jpeg_has_multiple_scans+0x6c>
  802564:	e0bfff17 	ldw	r2,-4(fp)
  802568:	10800017 	ldw	r2,0(r2)
  80256c:	00c00544 	movi	r3,21
  802570:	10c00515 	stw	r3,20(r2)
  802574:	e0bfff17 	ldw	r2,-4(fp)
  802578:	10800017 	ldw	r2,0(r2)
  80257c:	e0ffff17 	ldw	r3,-4(fp)
  802580:	18c00517 	ldw	r3,20(r3)
  802584:	10c00615 	stw	r3,24(r2)
  802588:	e0bfff17 	ldw	r2,-4(fp)
  80258c:	10800017 	ldw	r2,0(r2)
  802590:	10800017 	ldw	r2,0(r2)
  802594:	e13fff17 	ldw	r4,-4(fp)
  802598:	103ee83a 	callr	r2
  80259c:	e0bfff17 	ldw	r2,-4(fp)
  8025a0:	10807317 	ldw	r2,460(r2)
  8025a4:	10800417 	ldw	r2,16(r2)
  8025a8:	e037883a 	mov	sp,fp
  8025ac:	dfc00117 	ldw	ra,4(sp)
  8025b0:	df000017 	ldw	fp,0(sp)
  8025b4:	dec00204 	addi	sp,sp,8
  8025b8:	f800283a 	ret

008025bc <jpeg_finish_decompress>:
  8025bc:	defffd04 	addi	sp,sp,-12
  8025c0:	dfc00215 	stw	ra,8(sp)
  8025c4:	df000115 	stw	fp,4(sp)
  8025c8:	df000104 	addi	fp,sp,4
  8025cc:	e13fff15 	stw	r4,-4(fp)
  8025d0:	e0bfff17 	ldw	r2,-4(fp)
  8025d4:	10800517 	ldw	r2,20(r2)
  8025d8:	10803360 	cmpeqi	r2,r2,205
  8025dc:	1000041e 	bne	r2,zero,8025f0 <jpeg_finish_decompress+0x34>
  8025e0:	e0bfff17 	ldw	r2,-4(fp)
  8025e4:	10800517 	ldw	r2,20(r2)
  8025e8:	10803398 	cmpnei	r2,r2,206
  8025ec:	10001a1e 	bne	r2,zero,802658 <jpeg_finish_decompress+0x9c>
  8025f0:	e0bfff17 	ldw	r2,-4(fp)
  8025f4:	10801017 	ldw	r2,64(r2)
  8025f8:	1000171e 	bne	r2,zero,802658 <jpeg_finish_decompress+0x9c>
  8025fc:	e0bfff17 	ldw	r2,-4(fp)
  802600:	10c02317 	ldw	r3,140(r2)
  802604:	e0bfff17 	ldw	r2,-4(fp)
  802608:	10801d17 	ldw	r2,116(r2)
  80260c:	1880092e 	bgeu	r3,r2,802634 <jpeg_finish_decompress+0x78>
  802610:	e0bfff17 	ldw	r2,-4(fp)
  802614:	10800017 	ldw	r2,0(r2)
  802618:	00c01144 	movi	r3,69
  80261c:	10c00515 	stw	r3,20(r2)
  802620:	e0bfff17 	ldw	r2,-4(fp)
  802624:	10800017 	ldw	r2,0(r2)
  802628:	10800017 	ldw	r2,0(r2)
  80262c:	e13fff17 	ldw	r4,-4(fp)
  802630:	103ee83a 	callr	r2
  802634:	e0bfff17 	ldw	r2,-4(fp)
  802638:	10806f17 	ldw	r2,444(r2)
  80263c:	10800117 	ldw	r2,4(r2)
  802640:	e13fff17 	ldw	r4,-4(fp)
  802644:	103ee83a 	callr	r2
  802648:	e0bfff17 	ldw	r2,-4(fp)
  80264c:	00c03484 	movi	r3,210
  802650:	10c00515 	stw	r3,20(r2)
  802654:	00001a06 	br	8026c0 <jpeg_finish_decompress+0x104>
  802658:	e0bfff17 	ldw	r2,-4(fp)
  80265c:	10800517 	ldw	r2,20(r2)
  802660:	108033d8 	cmpnei	r2,r2,207
  802664:	1000041e 	bne	r2,zero,802678 <jpeg_finish_decompress+0xbc>
  802668:	e0bfff17 	ldw	r2,-4(fp)
  80266c:	00c03484 	movi	r3,210
  802670:	10c00515 	stw	r3,20(r2)
  802674:	00001b06 	br	8026e4 <jpeg_finish_decompress+0x128>
  802678:	e0bfff17 	ldw	r2,-4(fp)
  80267c:	10800517 	ldw	r2,20(r2)
  802680:	108034a0 	cmpeqi	r2,r2,210
  802684:	1000171e 	bne	r2,zero,8026e4 <jpeg_finish_decompress+0x128>
  802688:	e0bfff17 	ldw	r2,-4(fp)
  80268c:	10800017 	ldw	r2,0(r2)
  802690:	00c00544 	movi	r3,21
  802694:	10c00515 	stw	r3,20(r2)
  802698:	e0bfff17 	ldw	r2,-4(fp)
  80269c:	10800017 	ldw	r2,0(r2)
  8026a0:	e0ffff17 	ldw	r3,-4(fp)
  8026a4:	18c00517 	ldw	r3,20(r3)
  8026a8:	10c00615 	stw	r3,24(r2)
  8026ac:	e0bfff17 	ldw	r2,-4(fp)
  8026b0:	10800017 	ldw	r2,0(r2)
  8026b4:	10800017 	ldw	r2,0(r2)
  8026b8:	e13fff17 	ldw	r4,-4(fp)
  8026bc:	103ee83a 	callr	r2
  8026c0:	00000806 	br	8026e4 <jpeg_finish_decompress+0x128>
  8026c4:	e0bfff17 	ldw	r2,-4(fp)
  8026c8:	10807317 	ldw	r2,460(r2)
  8026cc:	10800017 	ldw	r2,0(r2)
  8026d0:	e13fff17 	ldw	r4,-4(fp)
  8026d4:	103ee83a 	callr	r2
  8026d8:	1000021e 	bne	r2,zero,8026e4 <jpeg_finish_decompress+0x128>
  8026dc:	0005883a 	mov	r2,zero
  8026e0:	00000c06 	br	802714 <jpeg_finish_decompress+0x158>
  8026e4:	e0bfff17 	ldw	r2,-4(fp)
  8026e8:	10807317 	ldw	r2,460(r2)
  8026ec:	10800517 	ldw	r2,20(r2)
  8026f0:	103ff426 	beq	r2,zero,8026c4 <__alt_mem_epcs_flash_controller_0+0xff7f96c4>
  8026f4:	e0bfff17 	ldw	r2,-4(fp)
  8026f8:	10800617 	ldw	r2,24(r2)
  8026fc:	10800617 	ldw	r2,24(r2)
  802700:	e13fff17 	ldw	r4,-4(fp)
  802704:	103ee83a 	callr	r2
  802708:	e13fff17 	ldw	r4,-4(fp)
  80270c:	081406c0 	call	81406c <jpeg_abort>
  802710:	00800044 	movi	r2,1
  802714:	e037883a 	mov	sp,fp
  802718:	dfc00117 	ldw	ra,4(sp)
  80271c:	df000017 	ldw	fp,0(sp)
  802720:	dec00204 	addi	sp,sp,8
  802724:	f800283a 	ret

00802728 <jpeg_start_decompress>:
  802728:	defffc04 	addi	sp,sp,-16
  80272c:	dfc00315 	stw	ra,12(sp)
  802730:	df000215 	stw	fp,8(sp)
  802734:	df000204 	addi	fp,sp,8
  802738:	e13fff15 	stw	r4,-4(fp)
  80273c:	e0bfff17 	ldw	r2,-4(fp)
  802740:	10800517 	ldw	r2,20(r2)
  802744:	10803298 	cmpnei	r2,r2,202
  802748:	10000d1e 	bne	r2,zero,802780 <jpeg_start_decompress+0x58>
  80274c:	e13fff17 	ldw	r4,-4(fp)
  802750:	080b6a00 	call	80b6a0 <jinit_master_decompress>
  802754:	e0bfff17 	ldw	r2,-4(fp)
  802758:	10801017 	ldw	r2,64(r2)
  80275c:	10000526 	beq	r2,zero,802774 <jpeg_start_decompress+0x4c>
  802760:	e0bfff17 	ldw	r2,-4(fp)
  802764:	00c033c4 	movi	r3,207
  802768:	10c00515 	stw	r3,20(r2)
  80276c:	00800044 	movi	r2,1
  802770:	00005706 	br	8028d0 <jpeg_start_decompress+0x1a8>
  802774:	e0bfff17 	ldw	r2,-4(fp)
  802778:	00c032c4 	movi	r3,203
  80277c:	10c00515 	stw	r3,20(r2)
  802780:	e0bfff17 	ldw	r2,-4(fp)
  802784:	10800517 	ldw	r2,20(r2)
  802788:	108032d8 	cmpnei	r2,r2,203
  80278c:	10003c1e 	bne	r2,zero,802880 <jpeg_start_decompress+0x158>
  802790:	e0bfff17 	ldw	r2,-4(fp)
  802794:	10807317 	ldw	r2,460(r2)
  802798:	10800417 	ldw	r2,16(r2)
  80279c:	10003326 	beq	r2,zero,80286c <jpeg_start_decompress+0x144>
  8027a0:	e0bfff17 	ldw	r2,-4(fp)
  8027a4:	10800217 	ldw	r2,8(r2)
  8027a8:	10000526 	beq	r2,zero,8027c0 <jpeg_start_decompress+0x98>
  8027ac:	e0bfff17 	ldw	r2,-4(fp)
  8027b0:	10800217 	ldw	r2,8(r2)
  8027b4:	10800017 	ldw	r2,0(r2)
  8027b8:	e13fff17 	ldw	r4,-4(fp)
  8027bc:	103ee83a 	callr	r2
  8027c0:	e0bfff17 	ldw	r2,-4(fp)
  8027c4:	10807317 	ldw	r2,460(r2)
  8027c8:	10800017 	ldw	r2,0(r2)
  8027cc:	e13fff17 	ldw	r4,-4(fp)
  8027d0:	103ee83a 	callr	r2
  8027d4:	e0bffe15 	stw	r2,-8(fp)
  8027d8:	e0bffe17 	ldw	r2,-8(fp)
  8027dc:	1000021e 	bne	r2,zero,8027e8 <jpeg_start_decompress+0xc0>
  8027e0:	0005883a 	mov	r2,zero
  8027e4:	00003a06 	br	8028d0 <jpeg_start_decompress+0x1a8>
  8027e8:	e0bffe17 	ldw	r2,-8(fp)
  8027ec:	10800098 	cmpnei	r2,r2,2
  8027f0:	10001d26 	beq	r2,zero,802868 <jpeg_start_decompress+0x140>
  8027f4:	e0bfff17 	ldw	r2,-4(fp)
  8027f8:	10800217 	ldw	r2,8(r2)
  8027fc:	103fe826 	beq	r2,zero,8027a0 <__alt_mem_epcs_flash_controller_0+0xff7f97a0>
  802800:	e0bffe17 	ldw	r2,-8(fp)
  802804:	108000e0 	cmpeqi	r2,r2,3
  802808:	1000031e 	bne	r2,zero,802818 <jpeg_start_decompress+0xf0>
  80280c:	e0bffe17 	ldw	r2,-8(fp)
  802810:	10800058 	cmpnei	r2,r2,1
  802814:	103fe21e 	bne	r2,zero,8027a0 <__alt_mem_epcs_flash_controller_0+0xff7f97a0>
  802818:	e0bfff17 	ldw	r2,-4(fp)
  80281c:	10800217 	ldw	r2,8(r2)
  802820:	10c00117 	ldw	r3,4(r2)
  802824:	18c00044 	addi	r3,r3,1
  802828:	10c00115 	stw	r3,4(r2)
  80282c:	10c00117 	ldw	r3,4(r2)
  802830:	e0bfff17 	ldw	r2,-4(fp)
  802834:	10800217 	ldw	r2,8(r2)
  802838:	10800217 	ldw	r2,8(r2)
  80283c:	18bfd816 	blt	r3,r2,8027a0 <__alt_mem_epcs_flash_controller_0+0xff7f97a0>
  802840:	e0bfff17 	ldw	r2,-4(fp)
  802844:	10800217 	ldw	r2,8(r2)
  802848:	e0ffff17 	ldw	r3,-4(fp)
  80284c:	18c00217 	ldw	r3,8(r3)
  802850:	18c00217 	ldw	r3,8(r3)
  802854:	e13fff17 	ldw	r4,-4(fp)
  802858:	21005317 	ldw	r4,332(r4)
  80285c:	1907883a 	add	r3,r3,r4
  802860:	10c00215 	stw	r3,8(r2)
  802864:	003fce06 	br	8027a0 <__alt_mem_epcs_flash_controller_0+0xff7f97a0>
  802868:	0001883a 	nop
  80286c:	e0bfff17 	ldw	r2,-4(fp)
  802870:	10c02417 	ldw	r3,144(r2)
  802874:	e0bfff17 	ldw	r2,-4(fp)
  802878:	10c02615 	stw	r3,152(r2)
  80287c:	00001206 	br	8028c8 <jpeg_start_decompress+0x1a0>
  802880:	e0bfff17 	ldw	r2,-4(fp)
  802884:	10800517 	ldw	r2,20(r2)
  802888:	10803320 	cmpeqi	r2,r2,204
  80288c:	10000e1e 	bne	r2,zero,8028c8 <jpeg_start_decompress+0x1a0>
  802890:	e0bfff17 	ldw	r2,-4(fp)
  802894:	10800017 	ldw	r2,0(r2)
  802898:	00c00544 	movi	r3,21
  80289c:	10c00515 	stw	r3,20(r2)
  8028a0:	e0bfff17 	ldw	r2,-4(fp)
  8028a4:	10800017 	ldw	r2,0(r2)
  8028a8:	e0ffff17 	ldw	r3,-4(fp)
  8028ac:	18c00517 	ldw	r3,20(r3)
  8028b0:	10c00615 	stw	r3,24(r2)
  8028b4:	e0bfff17 	ldw	r2,-4(fp)
  8028b8:	10800017 	ldw	r2,0(r2)
  8028bc:	10800017 	ldw	r2,0(r2)
  8028c0:	e13fff17 	ldw	r4,-4(fp)
  8028c4:	103ee83a 	callr	r2
  8028c8:	e13fff17 	ldw	r4,-4(fp)
  8028cc:	08028e40 	call	8028e4 <output_pass_setup>
  8028d0:	e037883a 	mov	sp,fp
  8028d4:	dfc00117 	ldw	ra,4(sp)
  8028d8:	df000017 	ldw	fp,0(sp)
  8028dc:	dec00204 	addi	sp,sp,8
  8028e0:	f800283a 	ret

008028e4 <output_pass_setup>:
  8028e4:	defffc04 	addi	sp,sp,-16
  8028e8:	dfc00315 	stw	ra,12(sp)
  8028ec:	df000215 	stw	fp,8(sp)
  8028f0:	df000204 	addi	fp,sp,8
  8028f4:	e13fff15 	stw	r4,-4(fp)
  8028f8:	e0bfff17 	ldw	r2,-4(fp)
  8028fc:	10800517 	ldw	r2,20(r2)
  802900:	10803320 	cmpeqi	r2,r2,204
  802904:	1000411e 	bne	r2,zero,802a0c <output_pass_setup+0x128>
  802908:	e0bfff17 	ldw	r2,-4(fp)
  80290c:	10806f17 	ldw	r2,444(r2)
  802910:	10800017 	ldw	r2,0(r2)
  802914:	e13fff17 	ldw	r4,-4(fp)
  802918:	103ee83a 	callr	r2
  80291c:	e0bfff17 	ldw	r2,-4(fp)
  802920:	10002315 	stw	zero,140(r2)
  802924:	e0bfff17 	ldw	r2,-4(fp)
  802928:	00c03304 	movi	r3,204
  80292c:	10c00515 	stw	r3,20(r2)
  802930:	00003606 	br	802a0c <output_pass_setup+0x128>
  802934:	e0bfff17 	ldw	r2,-4(fp)
  802938:	10800217 	ldw	r2,8(r2)
  80293c:	10000f26 	beq	r2,zero,80297c <output_pass_setup+0x98>
  802940:	e0bfff17 	ldw	r2,-4(fp)
  802944:	10800217 	ldw	r2,8(r2)
  802948:	e0ffff17 	ldw	r3,-4(fp)
  80294c:	18c02317 	ldw	r3,140(r3)
  802950:	10c00115 	stw	r3,4(r2)
  802954:	e0bfff17 	ldw	r2,-4(fp)
  802958:	10800217 	ldw	r2,8(r2)
  80295c:	e0ffff17 	ldw	r3,-4(fp)
  802960:	18c01d17 	ldw	r3,116(r3)
  802964:	10c00215 	stw	r3,8(r2)
  802968:	e0bfff17 	ldw	r2,-4(fp)
  80296c:	10800217 	ldw	r2,8(r2)
  802970:	10800017 	ldw	r2,0(r2)
  802974:	e13fff17 	ldw	r4,-4(fp)
  802978:	103ee83a 	callr	r2
  80297c:	e0bfff17 	ldw	r2,-4(fp)
  802980:	10802317 	ldw	r2,140(r2)
  802984:	e0bffe15 	stw	r2,-8(fp)
  802988:	e0bfff17 	ldw	r2,-4(fp)
  80298c:	10807017 	ldw	r2,448(r2)
  802990:	10800117 	ldw	r2,4(r2)
  802994:	e0ffff17 	ldw	r3,-4(fp)
  802998:	18c02304 	addi	r3,r3,140
  80299c:	000f883a 	mov	r7,zero
  8029a0:	180d883a 	mov	r6,r3
  8029a4:	000b883a 	mov	r5,zero
  8029a8:	e13fff17 	ldw	r4,-4(fp)
  8029ac:	103ee83a 	callr	r2
  8029b0:	e0bfff17 	ldw	r2,-4(fp)
  8029b4:	10c02317 	ldw	r3,140(r2)
  8029b8:	e0bffe17 	ldw	r2,-8(fp)
  8029bc:	1880021e 	bne	r3,r2,8029c8 <output_pass_setup+0xe4>
  8029c0:	0005883a 	mov	r2,zero
  8029c4:	00001e06 	br	802a40 <output_pass_setup+0x15c>
  8029c8:	e0bfff17 	ldw	r2,-4(fp)
  8029cc:	10c02317 	ldw	r3,140(r2)
  8029d0:	e0bfff17 	ldw	r2,-4(fp)
  8029d4:	10801d17 	ldw	r2,116(r2)
  8029d8:	18bfd636 	bltu	r3,r2,802934 <__alt_mem_epcs_flash_controller_0+0xff7f9934>
  8029dc:	e0bfff17 	ldw	r2,-4(fp)
  8029e0:	10806f17 	ldw	r2,444(r2)
  8029e4:	10800117 	ldw	r2,4(r2)
  8029e8:	e13fff17 	ldw	r4,-4(fp)
  8029ec:	103ee83a 	callr	r2
  8029f0:	e0bfff17 	ldw	r2,-4(fp)
  8029f4:	10806f17 	ldw	r2,444(r2)
  8029f8:	10800017 	ldw	r2,0(r2)
  8029fc:	e13fff17 	ldw	r4,-4(fp)
  802a00:	103ee83a 	callr	r2
  802a04:	e0bfff17 	ldw	r2,-4(fp)
  802a08:	10002315 	stw	zero,140(r2)
  802a0c:	e0bfff17 	ldw	r2,-4(fp)
  802a10:	10806f17 	ldw	r2,444(r2)
  802a14:	10800217 	ldw	r2,8(r2)
  802a18:	103feb1e 	bne	r2,zero,8029c8 <__alt_mem_epcs_flash_controller_0+0xff7f99c8>
  802a1c:	e0bfff17 	ldw	r2,-4(fp)
  802a20:	10801117 	ldw	r2,68(r2)
  802a24:	10000226 	beq	r2,zero,802a30 <output_pass_setup+0x14c>
  802a28:	00803384 	movi	r2,206
  802a2c:	00000106 	br	802a34 <output_pass_setup+0x150>
  802a30:	00803344 	movi	r2,205
  802a34:	e0ffff17 	ldw	r3,-4(fp)
  802a38:	18800515 	stw	r2,20(r3)
  802a3c:	00800044 	movi	r2,1
  802a40:	e037883a 	mov	sp,fp
  802a44:	dfc00117 	ldw	ra,4(sp)
  802a48:	df000017 	ldw	fp,0(sp)
  802a4c:	dec00204 	addi	sp,sp,8
  802a50:	f800283a 	ret

00802a54 <jpeg_read_scanlines>:
  802a54:	defffa04 	addi	sp,sp,-24
  802a58:	dfc00515 	stw	ra,20(sp)
  802a5c:	df000415 	stw	fp,16(sp)
  802a60:	df000404 	addi	fp,sp,16
  802a64:	e13ffd15 	stw	r4,-12(fp)
  802a68:	e17ffe15 	stw	r5,-8(fp)
  802a6c:	e1bfff15 	stw	r6,-4(fp)
  802a70:	e0bffd17 	ldw	r2,-12(fp)
  802a74:	10800517 	ldw	r2,20(r2)
  802a78:	10803360 	cmpeqi	r2,r2,205
  802a7c:	10000e1e 	bne	r2,zero,802ab8 <jpeg_read_scanlines+0x64>
  802a80:	e0bffd17 	ldw	r2,-12(fp)
  802a84:	10800017 	ldw	r2,0(r2)
  802a88:	00c00544 	movi	r3,21
  802a8c:	10c00515 	stw	r3,20(r2)
  802a90:	e0bffd17 	ldw	r2,-12(fp)
  802a94:	10800017 	ldw	r2,0(r2)
  802a98:	e0fffd17 	ldw	r3,-12(fp)
  802a9c:	18c00517 	ldw	r3,20(r3)
  802aa0:	10c00615 	stw	r3,24(r2)
  802aa4:	e0bffd17 	ldw	r2,-12(fp)
  802aa8:	10800017 	ldw	r2,0(r2)
  802aac:	10800017 	ldw	r2,0(r2)
  802ab0:	e13ffd17 	ldw	r4,-12(fp)
  802ab4:	103ee83a 	callr	r2
  802ab8:	e0bffd17 	ldw	r2,-12(fp)
  802abc:	10c02317 	ldw	r3,140(r2)
  802ac0:	e0bffd17 	ldw	r2,-12(fp)
  802ac4:	10801d17 	ldw	r2,116(r2)
  802ac8:	18800c36 	bltu	r3,r2,802afc <jpeg_read_scanlines+0xa8>
  802acc:	e0bffd17 	ldw	r2,-12(fp)
  802ad0:	10800017 	ldw	r2,0(r2)
  802ad4:	00c01f84 	movi	r3,126
  802ad8:	10c00515 	stw	r3,20(r2)
  802adc:	e0bffd17 	ldw	r2,-12(fp)
  802ae0:	10800017 	ldw	r2,0(r2)
  802ae4:	10800117 	ldw	r2,4(r2)
  802ae8:	017fffc4 	movi	r5,-1
  802aec:	e13ffd17 	ldw	r4,-12(fp)
  802af0:	103ee83a 	callr	r2
  802af4:	0005883a 	mov	r2,zero
  802af8:	00002206 	br	802b84 <jpeg_read_scanlines+0x130>
  802afc:	e0bffd17 	ldw	r2,-12(fp)
  802b00:	10800217 	ldw	r2,8(r2)
  802b04:	10000f26 	beq	r2,zero,802b44 <jpeg_read_scanlines+0xf0>
  802b08:	e0bffd17 	ldw	r2,-12(fp)
  802b0c:	10800217 	ldw	r2,8(r2)
  802b10:	e0fffd17 	ldw	r3,-12(fp)
  802b14:	18c02317 	ldw	r3,140(r3)
  802b18:	10c00115 	stw	r3,4(r2)
  802b1c:	e0bffd17 	ldw	r2,-12(fp)
  802b20:	10800217 	ldw	r2,8(r2)
  802b24:	e0fffd17 	ldw	r3,-12(fp)
  802b28:	18c01d17 	ldw	r3,116(r3)
  802b2c:	10c00215 	stw	r3,8(r2)
  802b30:	e0bffd17 	ldw	r2,-12(fp)
  802b34:	10800217 	ldw	r2,8(r2)
  802b38:	10800017 	ldw	r2,0(r2)
  802b3c:	e13ffd17 	ldw	r4,-12(fp)
  802b40:	103ee83a 	callr	r2
  802b44:	e03ffc15 	stw	zero,-16(fp)
  802b48:	e0bffd17 	ldw	r2,-12(fp)
  802b4c:	10807017 	ldw	r2,448(r2)
  802b50:	10800117 	ldw	r2,4(r2)
  802b54:	e1ffff17 	ldw	r7,-4(fp)
  802b58:	e1bffc04 	addi	r6,fp,-16
  802b5c:	e17ffe17 	ldw	r5,-8(fp)
  802b60:	e13ffd17 	ldw	r4,-12(fp)
  802b64:	103ee83a 	callr	r2
  802b68:	e0bffd17 	ldw	r2,-12(fp)
  802b6c:	10c02317 	ldw	r3,140(r2)
  802b70:	e0bffc17 	ldw	r2,-16(fp)
  802b74:	1887883a 	add	r3,r3,r2
  802b78:	e0bffd17 	ldw	r2,-12(fp)
  802b7c:	10c02315 	stw	r3,140(r2)
  802b80:	e0bffc17 	ldw	r2,-16(fp)
  802b84:	e037883a 	mov	sp,fp
  802b88:	dfc00117 	ldw	ra,4(sp)
  802b8c:	df000017 	ldw	fp,0(sp)
  802b90:	dec00204 	addi	sp,sp,8
  802b94:	f800283a 	ret

00802b98 <jpeg_read_raw_data>:
  802b98:	defffa04 	addi	sp,sp,-24
  802b9c:	dfc00515 	stw	ra,20(sp)
  802ba0:	df000415 	stw	fp,16(sp)
  802ba4:	df000404 	addi	fp,sp,16
  802ba8:	e13ffd15 	stw	r4,-12(fp)
  802bac:	e17ffe15 	stw	r5,-8(fp)
  802bb0:	e1bfff15 	stw	r6,-4(fp)
  802bb4:	e0bffd17 	ldw	r2,-12(fp)
  802bb8:	10800517 	ldw	r2,20(r2)
  802bbc:	108033a0 	cmpeqi	r2,r2,206
  802bc0:	10000e1e 	bne	r2,zero,802bfc <jpeg_read_raw_data+0x64>
  802bc4:	e0bffd17 	ldw	r2,-12(fp)
  802bc8:	10800017 	ldw	r2,0(r2)
  802bcc:	00c00544 	movi	r3,21
  802bd0:	10c00515 	stw	r3,20(r2)
  802bd4:	e0bffd17 	ldw	r2,-12(fp)
  802bd8:	10800017 	ldw	r2,0(r2)
  802bdc:	e0fffd17 	ldw	r3,-12(fp)
  802be0:	18c00517 	ldw	r3,20(r3)
  802be4:	10c00615 	stw	r3,24(r2)
  802be8:	e0bffd17 	ldw	r2,-12(fp)
  802bec:	10800017 	ldw	r2,0(r2)
  802bf0:	10800017 	ldw	r2,0(r2)
  802bf4:	e13ffd17 	ldw	r4,-12(fp)
  802bf8:	103ee83a 	callr	r2
  802bfc:	e0bffd17 	ldw	r2,-12(fp)
  802c00:	10c02317 	ldw	r3,140(r2)
  802c04:	e0bffd17 	ldw	r2,-12(fp)
  802c08:	10801d17 	ldw	r2,116(r2)
  802c0c:	18800c36 	bltu	r3,r2,802c40 <jpeg_read_raw_data+0xa8>
  802c10:	e0bffd17 	ldw	r2,-12(fp)
  802c14:	10800017 	ldw	r2,0(r2)
  802c18:	00c01f84 	movi	r3,126
  802c1c:	10c00515 	stw	r3,20(r2)
  802c20:	e0bffd17 	ldw	r2,-12(fp)
  802c24:	10800017 	ldw	r2,0(r2)
  802c28:	10800117 	ldw	r2,4(r2)
  802c2c:	017fffc4 	movi	r5,-1
  802c30:	e13ffd17 	ldw	r4,-12(fp)
  802c34:	103ee83a 	callr	r2
  802c38:	0005883a 	mov	r2,zero
  802c3c:	00003606 	br	802d18 <jpeg_read_raw_data+0x180>
  802c40:	e0bffd17 	ldw	r2,-12(fp)
  802c44:	10800217 	ldw	r2,8(r2)
  802c48:	10000f26 	beq	r2,zero,802c88 <jpeg_read_raw_data+0xf0>
  802c4c:	e0bffd17 	ldw	r2,-12(fp)
  802c50:	10800217 	ldw	r2,8(r2)
  802c54:	e0fffd17 	ldw	r3,-12(fp)
  802c58:	18c02317 	ldw	r3,140(r3)
  802c5c:	10c00115 	stw	r3,4(r2)
  802c60:	e0bffd17 	ldw	r2,-12(fp)
  802c64:	10800217 	ldw	r2,8(r2)
  802c68:	e0fffd17 	ldw	r3,-12(fp)
  802c6c:	18c01d17 	ldw	r3,116(r3)
  802c70:	10c00215 	stw	r3,8(r2)
  802c74:	e0bffd17 	ldw	r2,-12(fp)
  802c78:	10800217 	ldw	r2,8(r2)
  802c7c:	10800017 	ldw	r2,0(r2)
  802c80:	e13ffd17 	ldw	r4,-12(fp)
  802c84:	103ee83a 	callr	r2
  802c88:	e0bffd17 	ldw	r2,-12(fp)
  802c8c:	10c05017 	ldw	r3,320(r2)
  802c90:	e0bffd17 	ldw	r2,-12(fp)
  802c94:	10805217 	ldw	r2,328(r2)
  802c98:	100b883a 	mov	r5,r2
  802c9c:	1809883a 	mov	r4,r3
  802ca0:	08305040 	call	830504 <__mulsi3>
  802ca4:	e0bffc15 	stw	r2,-16(fp)
  802ca8:	e0ffff17 	ldw	r3,-4(fp)
  802cac:	e0bffc17 	ldw	r2,-16(fp)
  802cb0:	1880092e 	bgeu	r3,r2,802cd8 <jpeg_read_raw_data+0x140>
  802cb4:	e0bffd17 	ldw	r2,-12(fp)
  802cb8:	10800017 	ldw	r2,0(r2)
  802cbc:	00c00604 	movi	r3,24
  802cc0:	10c00515 	stw	r3,20(r2)
  802cc4:	e0bffd17 	ldw	r2,-12(fp)
  802cc8:	10800017 	ldw	r2,0(r2)
  802ccc:	10800017 	ldw	r2,0(r2)
  802cd0:	e13ffd17 	ldw	r4,-12(fp)
  802cd4:	103ee83a 	callr	r2
  802cd8:	e0bffd17 	ldw	r2,-12(fp)
  802cdc:	10807117 	ldw	r2,452(r2)
  802ce0:	10800317 	ldw	r2,12(r2)
  802ce4:	e17ffe17 	ldw	r5,-8(fp)
  802ce8:	e13ffd17 	ldw	r4,-12(fp)
  802cec:	103ee83a 	callr	r2
  802cf0:	1000021e 	bne	r2,zero,802cfc <jpeg_read_raw_data+0x164>
  802cf4:	0005883a 	mov	r2,zero
  802cf8:	00000706 	br	802d18 <jpeg_read_raw_data+0x180>
  802cfc:	e0bffd17 	ldw	r2,-12(fp)
  802d00:	10c02317 	ldw	r3,140(r2)
  802d04:	e0bffc17 	ldw	r2,-16(fp)
  802d08:	1887883a 	add	r3,r3,r2
  802d0c:	e0bffd17 	ldw	r2,-12(fp)
  802d10:	10c02315 	stw	r3,140(r2)
  802d14:	e0bffc17 	ldw	r2,-16(fp)
  802d18:	e037883a 	mov	sp,fp
  802d1c:	dfc00117 	ldw	ra,4(sp)
  802d20:	df000017 	ldw	fp,0(sp)
  802d24:	dec00204 	addi	sp,sp,8
  802d28:	f800283a 	ret

00802d2c <jpeg_start_output>:
  802d2c:	defffc04 	addi	sp,sp,-16
  802d30:	dfc00315 	stw	ra,12(sp)
  802d34:	df000215 	stw	fp,8(sp)
  802d38:	df000204 	addi	fp,sp,8
  802d3c:	e13ffe15 	stw	r4,-8(fp)
  802d40:	e17fff15 	stw	r5,-4(fp)
  802d44:	e0bffe17 	ldw	r2,-8(fp)
  802d48:	10800517 	ldw	r2,20(r2)
  802d4c:	108033e0 	cmpeqi	r2,r2,207
  802d50:	1000121e 	bne	r2,zero,802d9c <jpeg_start_output+0x70>
  802d54:	e0bffe17 	ldw	r2,-8(fp)
  802d58:	10800517 	ldw	r2,20(r2)
  802d5c:	10803320 	cmpeqi	r2,r2,204
  802d60:	10000e1e 	bne	r2,zero,802d9c <jpeg_start_output+0x70>
  802d64:	e0bffe17 	ldw	r2,-8(fp)
  802d68:	10800017 	ldw	r2,0(r2)
  802d6c:	00c00544 	movi	r3,21
  802d70:	10c00515 	stw	r3,20(r2)
  802d74:	e0bffe17 	ldw	r2,-8(fp)
  802d78:	10800017 	ldw	r2,0(r2)
  802d7c:	e0fffe17 	ldw	r3,-8(fp)
  802d80:	18c00517 	ldw	r3,20(r3)
  802d84:	10c00615 	stw	r3,24(r2)
  802d88:	e0bffe17 	ldw	r2,-8(fp)
  802d8c:	10800017 	ldw	r2,0(r2)
  802d90:	10800017 	ldw	r2,0(r2)
  802d94:	e13ffe17 	ldw	r4,-8(fp)
  802d98:	103ee83a 	callr	r2
  802d9c:	e0bfff17 	ldw	r2,-4(fp)
  802da0:	00800216 	blt	zero,r2,802dac <jpeg_start_output+0x80>
  802da4:	00800044 	movi	r2,1
  802da8:	e0bfff15 	stw	r2,-4(fp)
  802dac:	e0bffe17 	ldw	r2,-8(fp)
  802db0:	10807317 	ldw	r2,460(r2)
  802db4:	10800517 	ldw	r2,20(r2)
  802db8:	10000726 	beq	r2,zero,802dd8 <jpeg_start_output+0xac>
  802dbc:	e0bffe17 	ldw	r2,-8(fp)
  802dc0:	10c02417 	ldw	r3,144(r2)
  802dc4:	e0bfff17 	ldw	r2,-4(fp)
  802dc8:	1880030e 	bge	r3,r2,802dd8 <jpeg_start_output+0xac>
  802dcc:	e0bffe17 	ldw	r2,-8(fp)
  802dd0:	10802417 	ldw	r2,144(r2)
  802dd4:	e0bfff15 	stw	r2,-4(fp)
  802dd8:	e0bffe17 	ldw	r2,-8(fp)
  802ddc:	e0ffff17 	ldw	r3,-4(fp)
  802de0:	10c02615 	stw	r3,152(r2)
  802de4:	e13ffe17 	ldw	r4,-8(fp)
  802de8:	08028e40 	call	8028e4 <output_pass_setup>
  802dec:	e037883a 	mov	sp,fp
  802df0:	dfc00117 	ldw	ra,4(sp)
  802df4:	df000017 	ldw	fp,0(sp)
  802df8:	dec00204 	addi	sp,sp,8
  802dfc:	f800283a 	ret

00802e00 <jpeg_finish_output>:
  802e00:	defffd04 	addi	sp,sp,-12
  802e04:	dfc00215 	stw	ra,8(sp)
  802e08:	df000115 	stw	fp,4(sp)
  802e0c:	df000104 	addi	fp,sp,4
  802e10:	e13fff15 	stw	r4,-4(fp)
  802e14:	e0bfff17 	ldw	r2,-4(fp)
  802e18:	10800517 	ldw	r2,20(r2)
  802e1c:	10803360 	cmpeqi	r2,r2,205
  802e20:	1000041e 	bne	r2,zero,802e34 <jpeg_finish_output+0x34>
  802e24:	e0bfff17 	ldw	r2,-4(fp)
  802e28:	10800517 	ldw	r2,20(r2)
  802e2c:	10803398 	cmpnei	r2,r2,206
  802e30:	10000c1e 	bne	r2,zero,802e64 <jpeg_finish_output+0x64>
  802e34:	e0bfff17 	ldw	r2,-4(fp)
  802e38:	10801017 	ldw	r2,64(r2)
  802e3c:	10000926 	beq	r2,zero,802e64 <jpeg_finish_output+0x64>
  802e40:	e0bfff17 	ldw	r2,-4(fp)
  802e44:	10806f17 	ldw	r2,444(r2)
  802e48:	10800117 	ldw	r2,4(r2)
  802e4c:	e13fff17 	ldw	r4,-4(fp)
  802e50:	103ee83a 	callr	r2
  802e54:	e0bfff17 	ldw	r2,-4(fp)
  802e58:	00c03404 	movi	r3,208
  802e5c:	10c00515 	stw	r3,20(r2)
  802e60:	00001206 	br	802eac <jpeg_finish_output+0xac>
  802e64:	e0bfff17 	ldw	r2,-4(fp)
  802e68:	10800517 	ldw	r2,20(r2)
  802e6c:	10803420 	cmpeqi	r2,r2,208
  802e70:	1000171e 	bne	r2,zero,802ed0 <jpeg_finish_output+0xd0>
  802e74:	e0bfff17 	ldw	r2,-4(fp)
  802e78:	10800017 	ldw	r2,0(r2)
  802e7c:	00c00544 	movi	r3,21
  802e80:	10c00515 	stw	r3,20(r2)
  802e84:	e0bfff17 	ldw	r2,-4(fp)
  802e88:	10800017 	ldw	r2,0(r2)
  802e8c:	e0ffff17 	ldw	r3,-4(fp)
  802e90:	18c00517 	ldw	r3,20(r3)
  802e94:	10c00615 	stw	r3,24(r2)
  802e98:	e0bfff17 	ldw	r2,-4(fp)
  802e9c:	10800017 	ldw	r2,0(r2)
  802ea0:	10800017 	ldw	r2,0(r2)
  802ea4:	e13fff17 	ldw	r4,-4(fp)
  802ea8:	103ee83a 	callr	r2
  802eac:	00000806 	br	802ed0 <jpeg_finish_output+0xd0>
  802eb0:	e0bfff17 	ldw	r2,-4(fp)
  802eb4:	10807317 	ldw	r2,460(r2)
  802eb8:	10800017 	ldw	r2,0(r2)
  802ebc:	e13fff17 	ldw	r4,-4(fp)
  802ec0:	103ee83a 	callr	r2
  802ec4:	1000021e 	bne	r2,zero,802ed0 <jpeg_finish_output+0xd0>
  802ec8:	0005883a 	mov	r2,zero
  802ecc:	00000d06 	br	802f04 <jpeg_finish_output+0x104>
  802ed0:	e0bfff17 	ldw	r2,-4(fp)
  802ed4:	10802417 	ldw	r2,144(r2)
  802ed8:	e0ffff17 	ldw	r3,-4(fp)
  802edc:	18c02617 	ldw	r3,152(r3)
  802ee0:	18800416 	blt	r3,r2,802ef4 <jpeg_finish_output+0xf4>
  802ee4:	e0bfff17 	ldw	r2,-4(fp)
  802ee8:	10807317 	ldw	r2,460(r2)
  802eec:	10800517 	ldw	r2,20(r2)
  802ef0:	103fef26 	beq	r2,zero,802eb0 <__alt_mem_epcs_flash_controller_0+0xff7f9eb0>
  802ef4:	e0bfff17 	ldw	r2,-4(fp)
  802ef8:	00c033c4 	movi	r3,207
  802efc:	10c00515 	stw	r3,20(r2)
  802f00:	00800044 	movi	r2,1
  802f04:	e037883a 	mov	sp,fp
  802f08:	dfc00117 	ldw	ra,4(sp)
  802f0c:	df000017 	ldw	fp,0(sp)
  802f10:	dec00204 	addi	sp,sp,8
  802f14:	f800283a 	ret

00802f18 <init_source>:
  802f18:	defffd04 	addi	sp,sp,-12
  802f1c:	df000215 	stw	fp,8(sp)
  802f20:	df000204 	addi	fp,sp,8
  802f24:	e13fff15 	stw	r4,-4(fp)
  802f28:	e0bfff17 	ldw	r2,-4(fp)
  802f2c:	10800617 	ldw	r2,24(r2)
  802f30:	e0bffe15 	stw	r2,-8(fp)
  802f34:	e0bffe17 	ldw	r2,-8(fp)
  802f38:	00c00044 	movi	r3,1
  802f3c:	10c00915 	stw	r3,36(r2)
  802f40:	0001883a 	nop
  802f44:	e037883a 	mov	sp,fp
  802f48:	df000017 	ldw	fp,0(sp)
  802f4c:	dec00104 	addi	sp,sp,4
  802f50:	f800283a 	ret

00802f54 <init_mem_source>:
  802f54:	defffe04 	addi	sp,sp,-8
  802f58:	df000115 	stw	fp,4(sp)
  802f5c:	df000104 	addi	fp,sp,4
  802f60:	e13fff15 	stw	r4,-4(fp)
  802f64:	0001883a 	nop
  802f68:	e037883a 	mov	sp,fp
  802f6c:	df000017 	ldw	fp,0(sp)
  802f70:	dec00104 	addi	sp,sp,4
  802f74:	f800283a 	ret

00802f78 <fill_input_buffer>:
  802f78:	defffb04 	addi	sp,sp,-20
  802f7c:	dfc00415 	stw	ra,16(sp)
  802f80:	df000315 	stw	fp,12(sp)
  802f84:	df000304 	addi	fp,sp,12
  802f88:	e13fff15 	stw	r4,-4(fp)
  802f8c:	e0bfff17 	ldw	r2,-4(fp)
  802f90:	10800617 	ldw	r2,24(r2)
  802f94:	e0bffe15 	stw	r2,-8(fp)
  802f98:	e0bffe17 	ldw	r2,-8(fp)
  802f9c:	10c00817 	ldw	r3,32(r2)
  802fa0:	e0bffe17 	ldw	r2,-8(fp)
  802fa4:	10800717 	ldw	r2,28(r2)
  802fa8:	100f883a 	mov	r7,r2
  802fac:	01840004 	movi	r6,4096
  802fb0:	01400044 	movi	r5,1
  802fb4:	1809883a 	mov	r4,r3
  802fb8:	0832b300 	call	832b30 <fread>
  802fbc:	e0bffd15 	stw	r2,-12(fp)
  802fc0:	e0bffd17 	ldw	r2,-12(fp)
  802fc4:	1000211e 	bne	r2,zero,80304c <fill_input_buffer+0xd4>
  802fc8:	e0bffe17 	ldw	r2,-8(fp)
  802fcc:	10800917 	ldw	r2,36(r2)
  802fd0:	10000926 	beq	r2,zero,802ff8 <fill_input_buffer+0x80>
  802fd4:	e0bfff17 	ldw	r2,-4(fp)
  802fd8:	10800017 	ldw	r2,0(r2)
  802fdc:	00c00ac4 	movi	r3,43
  802fe0:	10c00515 	stw	r3,20(r2)
  802fe4:	e0bfff17 	ldw	r2,-4(fp)
  802fe8:	10800017 	ldw	r2,0(r2)
  802fec:	10800017 	ldw	r2,0(r2)
  802ff0:	e13fff17 	ldw	r4,-4(fp)
  802ff4:	103ee83a 	callr	r2
  802ff8:	e0bfff17 	ldw	r2,-4(fp)
  802ffc:	10800017 	ldw	r2,0(r2)
  803000:	00c01ec4 	movi	r3,123
  803004:	10c00515 	stw	r3,20(r2)
  803008:	e0bfff17 	ldw	r2,-4(fp)
  80300c:	10800017 	ldw	r2,0(r2)
  803010:	10800117 	ldw	r2,4(r2)
  803014:	017fffc4 	movi	r5,-1
  803018:	e13fff17 	ldw	r4,-4(fp)
  80301c:	103ee83a 	callr	r2
  803020:	e0bffe17 	ldw	r2,-8(fp)
  803024:	10800817 	ldw	r2,32(r2)
  803028:	00ffffc4 	movi	r3,-1
  80302c:	10c00005 	stb	r3,0(r2)
  803030:	e0bffe17 	ldw	r2,-8(fp)
  803034:	10800817 	ldw	r2,32(r2)
  803038:	10800044 	addi	r2,r2,1
  80303c:	00fff644 	movi	r3,-39
  803040:	10c00005 	stb	r3,0(r2)
  803044:	00800084 	movi	r2,2
  803048:	e0bffd15 	stw	r2,-12(fp)
  80304c:	e0bffe17 	ldw	r2,-8(fp)
  803050:	10c00817 	ldw	r3,32(r2)
  803054:	e0bffe17 	ldw	r2,-8(fp)
  803058:	10c00015 	stw	r3,0(r2)
  80305c:	e0bffe17 	ldw	r2,-8(fp)
  803060:	e0fffd17 	ldw	r3,-12(fp)
  803064:	10c00115 	stw	r3,4(r2)
  803068:	e0bffe17 	ldw	r2,-8(fp)
  80306c:	10000915 	stw	zero,36(r2)
  803070:	00800044 	movi	r2,1
  803074:	e037883a 	mov	sp,fp
  803078:	dfc00117 	ldw	ra,4(sp)
  80307c:	df000017 	ldw	fp,0(sp)
  803080:	dec00204 	addi	sp,sp,8
  803084:	f800283a 	ret

00803088 <fill_mem_input_buffer>:
  803088:	defffd04 	addi	sp,sp,-12
  80308c:	dfc00215 	stw	ra,8(sp)
  803090:	df000115 	stw	fp,4(sp)
  803094:	df000104 	addi	fp,sp,4
  803098:	e13fff15 	stw	r4,-4(fp)
  80309c:	e0bfff17 	ldw	r2,-4(fp)
  8030a0:	10800017 	ldw	r2,0(r2)
  8030a4:	00c01ec4 	movi	r3,123
  8030a8:	10c00515 	stw	r3,20(r2)
  8030ac:	e0bfff17 	ldw	r2,-4(fp)
  8030b0:	10800017 	ldw	r2,0(r2)
  8030b4:	10800117 	ldw	r2,4(r2)
  8030b8:	017fffc4 	movi	r5,-1
  8030bc:	e13fff17 	ldw	r4,-4(fp)
  8030c0:	103ee83a 	callr	r2
  8030c4:	e0bfff17 	ldw	r2,-4(fp)
  8030c8:	10800617 	ldw	r2,24(r2)
  8030cc:	d0e03584 	addi	r3,gp,-32554
  8030d0:	10c00015 	stw	r3,0(r2)
  8030d4:	e0bfff17 	ldw	r2,-4(fp)
  8030d8:	10800617 	ldw	r2,24(r2)
  8030dc:	00c00084 	movi	r3,2
  8030e0:	10c00115 	stw	r3,4(r2)
  8030e4:	00800044 	movi	r2,1
  8030e8:	e037883a 	mov	sp,fp
  8030ec:	dfc00117 	ldw	ra,4(sp)
  8030f0:	df000017 	ldw	fp,0(sp)
  8030f4:	dec00204 	addi	sp,sp,8
  8030f8:	f800283a 	ret

008030fc <skip_input_data>:
  8030fc:	defffb04 	addi	sp,sp,-20
  803100:	dfc00415 	stw	ra,16(sp)
  803104:	df000315 	stw	fp,12(sp)
  803108:	df000304 	addi	fp,sp,12
  80310c:	e13ffe15 	stw	r4,-8(fp)
  803110:	e17fff15 	stw	r5,-4(fp)
  803114:	e0bffe17 	ldw	r2,-8(fp)
  803118:	10800617 	ldw	r2,24(r2)
  80311c:	e0bffd15 	stw	r2,-12(fp)
  803120:	e0bfff17 	ldw	r2,-4(fp)
  803124:	00801c0e 	bge	zero,r2,803198 <skip_input_data+0x9c>
  803128:	00000a06 	br	803154 <skip_input_data+0x58>
  80312c:	e0bffd17 	ldw	r2,-12(fp)
  803130:	10800117 	ldw	r2,4(r2)
  803134:	1007883a 	mov	r3,r2
  803138:	e0bfff17 	ldw	r2,-4(fp)
  80313c:	10c5c83a 	sub	r2,r2,r3
  803140:	e0bfff15 	stw	r2,-4(fp)
  803144:	e0bffd17 	ldw	r2,-12(fp)
  803148:	10800317 	ldw	r2,12(r2)
  80314c:	e13ffe17 	ldw	r4,-8(fp)
  803150:	103ee83a 	callr	r2
  803154:	e0bffd17 	ldw	r2,-12(fp)
  803158:	10800117 	ldw	r2,4(r2)
  80315c:	1007883a 	mov	r3,r2
  803160:	e0bfff17 	ldw	r2,-4(fp)
  803164:	18bff116 	blt	r3,r2,80312c <__alt_mem_epcs_flash_controller_0+0xff7fa12c>
  803168:	e0bffd17 	ldw	r2,-12(fp)
  80316c:	10c00017 	ldw	r3,0(r2)
  803170:	e0bfff17 	ldw	r2,-4(fp)
  803174:	1887883a 	add	r3,r3,r2
  803178:	e0bffd17 	ldw	r2,-12(fp)
  80317c:	10c00015 	stw	r3,0(r2)
  803180:	e0bffd17 	ldw	r2,-12(fp)
  803184:	10c00117 	ldw	r3,4(r2)
  803188:	e0bfff17 	ldw	r2,-4(fp)
  80318c:	1887c83a 	sub	r3,r3,r2
  803190:	e0bffd17 	ldw	r2,-12(fp)
  803194:	10c00115 	stw	r3,4(r2)
  803198:	0001883a 	nop
  80319c:	e037883a 	mov	sp,fp
  8031a0:	dfc00117 	ldw	ra,4(sp)
  8031a4:	df000017 	ldw	fp,0(sp)
  8031a8:	dec00204 	addi	sp,sp,8
  8031ac:	f800283a 	ret

008031b0 <term_source>:
  8031b0:	defffe04 	addi	sp,sp,-8
  8031b4:	df000115 	stw	fp,4(sp)
  8031b8:	df000104 	addi	fp,sp,4
  8031bc:	e13fff15 	stw	r4,-4(fp)
  8031c0:	0001883a 	nop
  8031c4:	e037883a 	mov	sp,fp
  8031c8:	df000017 	ldw	fp,0(sp)
  8031cc:	dec00104 	addi	sp,sp,4
  8031d0:	f800283a 	ret

008031d4 <jpeg_stdio_src>:
  8031d4:	defffb04 	addi	sp,sp,-20
  8031d8:	dfc00415 	stw	ra,16(sp)
  8031dc:	df000315 	stw	fp,12(sp)
  8031e0:	df000304 	addi	fp,sp,12
  8031e4:	e13ffe15 	stw	r4,-8(fp)
  8031e8:	e17fff15 	stw	r5,-4(fp)
  8031ec:	e0bffe17 	ldw	r2,-8(fp)
  8031f0:	10800617 	ldw	r2,24(r2)
  8031f4:	1000171e 	bne	r2,zero,803254 <jpeg_stdio_src+0x80>
  8031f8:	e0bffe17 	ldw	r2,-8(fp)
  8031fc:	10800117 	ldw	r2,4(r2)
  803200:	10800017 	ldw	r2,0(r2)
  803204:	01800a04 	movi	r6,40
  803208:	000b883a 	mov	r5,zero
  80320c:	e13ffe17 	ldw	r4,-8(fp)
  803210:	103ee83a 	callr	r2
  803214:	1007883a 	mov	r3,r2
  803218:	e0bffe17 	ldw	r2,-8(fp)
  80321c:	10c00615 	stw	r3,24(r2)
  803220:	e0bffe17 	ldw	r2,-8(fp)
  803224:	10800617 	ldw	r2,24(r2)
  803228:	e0bffd15 	stw	r2,-12(fp)
  80322c:	e0bffe17 	ldw	r2,-8(fp)
  803230:	10800117 	ldw	r2,4(r2)
  803234:	10800017 	ldw	r2,0(r2)
  803238:	01840004 	movi	r6,4096
  80323c:	000b883a 	mov	r5,zero
  803240:	e13ffe17 	ldw	r4,-8(fp)
  803244:	103ee83a 	callr	r2
  803248:	1007883a 	mov	r3,r2
  80324c:	e0bffd17 	ldw	r2,-12(fp)
  803250:	10c00815 	stw	r3,32(r2)
  803254:	e0bffe17 	ldw	r2,-8(fp)
  803258:	10800617 	ldw	r2,24(r2)
  80325c:	e0bffd15 	stw	r2,-12(fp)
  803260:	e0fffd17 	ldw	r3,-12(fp)
  803264:	00802034 	movhi	r2,128
  803268:	108bc604 	addi	r2,r2,12056
  80326c:	18800215 	stw	r2,8(r3)
  803270:	e0fffd17 	ldw	r3,-12(fp)
  803274:	00802034 	movhi	r2,128
  803278:	108bde04 	addi	r2,r2,12152
  80327c:	18800315 	stw	r2,12(r3)
  803280:	e0fffd17 	ldw	r3,-12(fp)
  803284:	00802034 	movhi	r2,128
  803288:	108c3f04 	addi	r2,r2,12540
  80328c:	18800415 	stw	r2,16(r3)
  803290:	e0fffd17 	ldw	r3,-12(fp)
  803294:	00802074 	movhi	r2,129
  803298:	10a84d04 	addi	r2,r2,-24268
  80329c:	18800515 	stw	r2,20(r3)
  8032a0:	e0fffd17 	ldw	r3,-12(fp)
  8032a4:	00802034 	movhi	r2,128
  8032a8:	108c6c04 	addi	r2,r2,12720
  8032ac:	18800615 	stw	r2,24(r3)
  8032b0:	e0bffd17 	ldw	r2,-12(fp)
  8032b4:	e0ffff17 	ldw	r3,-4(fp)
  8032b8:	10c00715 	stw	r3,28(r2)
  8032bc:	e0bffd17 	ldw	r2,-12(fp)
  8032c0:	10000115 	stw	zero,4(r2)
  8032c4:	e0bffd17 	ldw	r2,-12(fp)
  8032c8:	10000015 	stw	zero,0(r2)
  8032cc:	0001883a 	nop
  8032d0:	e037883a 	mov	sp,fp
  8032d4:	dfc00117 	ldw	ra,4(sp)
  8032d8:	df000017 	ldw	fp,0(sp)
  8032dc:	dec00204 	addi	sp,sp,8
  8032e0:	f800283a 	ret

008032e4 <jpeg_mem_src>:
  8032e4:	defffa04 	addi	sp,sp,-24
  8032e8:	dfc00515 	stw	ra,20(sp)
  8032ec:	df000415 	stw	fp,16(sp)
  8032f0:	df000404 	addi	fp,sp,16
  8032f4:	e13ffd15 	stw	r4,-12(fp)
  8032f8:	e17ffe15 	stw	r5,-8(fp)
  8032fc:	e1bfff15 	stw	r6,-4(fp)
  803300:	e0bffe17 	ldw	r2,-8(fp)
  803304:	10000226 	beq	r2,zero,803310 <jpeg_mem_src+0x2c>
  803308:	e0bfff17 	ldw	r2,-4(fp)
  80330c:	1000091e 	bne	r2,zero,803334 <jpeg_mem_src+0x50>
  803310:	e0bffd17 	ldw	r2,-12(fp)
  803314:	10800017 	ldw	r2,0(r2)
  803318:	00c00ac4 	movi	r3,43
  80331c:	10c00515 	stw	r3,20(r2)
  803320:	e0bffd17 	ldw	r2,-12(fp)
  803324:	10800017 	ldw	r2,0(r2)
  803328:	10800017 	ldw	r2,0(r2)
  80332c:	e13ffd17 	ldw	r4,-12(fp)
  803330:	103ee83a 	callr	r2
  803334:	e0bffd17 	ldw	r2,-12(fp)
  803338:	10800617 	ldw	r2,24(r2)
  80333c:	10000a1e 	bne	r2,zero,803368 <jpeg_mem_src+0x84>
  803340:	e0bffd17 	ldw	r2,-12(fp)
  803344:	10800117 	ldw	r2,4(r2)
  803348:	10800017 	ldw	r2,0(r2)
  80334c:	01800704 	movi	r6,28
  803350:	000b883a 	mov	r5,zero
  803354:	e13ffd17 	ldw	r4,-12(fp)
  803358:	103ee83a 	callr	r2
  80335c:	1007883a 	mov	r3,r2
  803360:	e0bffd17 	ldw	r2,-12(fp)
  803364:	10c00615 	stw	r3,24(r2)
  803368:	e0bffd17 	ldw	r2,-12(fp)
  80336c:	10800617 	ldw	r2,24(r2)
  803370:	e0bffc15 	stw	r2,-16(fp)
  803374:	e0fffc17 	ldw	r3,-16(fp)
  803378:	00802034 	movhi	r2,128
  80337c:	108bd504 	addi	r2,r2,12116
  803380:	18800215 	stw	r2,8(r3)
  803384:	e0fffc17 	ldw	r3,-16(fp)
  803388:	00802034 	movhi	r2,128
  80338c:	108c2204 	addi	r2,r2,12424
  803390:	18800315 	stw	r2,12(r3)
  803394:	e0fffc17 	ldw	r3,-16(fp)
  803398:	00802034 	movhi	r2,128
  80339c:	108c3f04 	addi	r2,r2,12540
  8033a0:	18800415 	stw	r2,16(r3)
  8033a4:	e0fffc17 	ldw	r3,-16(fp)
  8033a8:	00802074 	movhi	r2,129
  8033ac:	10a84d04 	addi	r2,r2,-24268
  8033b0:	18800515 	stw	r2,20(r3)
  8033b4:	e0fffc17 	ldw	r3,-16(fp)
  8033b8:	00802034 	movhi	r2,128
  8033bc:	108c6c04 	addi	r2,r2,12720
  8033c0:	18800615 	stw	r2,24(r3)
  8033c4:	e0bffc17 	ldw	r2,-16(fp)
  8033c8:	e0ffff17 	ldw	r3,-4(fp)
  8033cc:	10c00115 	stw	r3,4(r2)
  8033d0:	e0bffc17 	ldw	r2,-16(fp)
  8033d4:	e0fffe17 	ldw	r3,-8(fp)
  8033d8:	10c00015 	stw	r3,0(r2)
  8033dc:	0001883a 	nop
  8033e0:	e037883a 	mov	sp,fp
  8033e4:	dfc00117 	ldw	ra,4(sp)
  8033e8:	df000017 	ldw	fp,0(sp)
  8033ec:	dec00204 	addi	sp,sp,8
  8033f0:	f800283a 	ret

008033f4 <jpeg_core_output_dimensions>:
  8033f4:	defffa04 	addi	sp,sp,-24
  8033f8:	dfc00515 	stw	ra,20(sp)
  8033fc:	df000415 	stw	fp,16(sp)
  803400:	dc000315 	stw	r16,12(sp)
  803404:	df000404 	addi	fp,sp,16
  803408:	e13ffe15 	stw	r4,-8(fp)
  80340c:	e0bffe17 	ldw	r2,-8(fp)
  803410:	10c00c17 	ldw	r3,48(r2)
  803414:	e0bffe17 	ldw	r2,-8(fp)
  803418:	10806b17 	ldw	r2,428(r2)
  80341c:	100b883a 	mov	r5,r2
  803420:	1809883a 	mov	r4,r3
  803424:	08305040 	call	830504 <__mulsi3>
  803428:	1007883a 	mov	r3,r2
  80342c:	e0bffe17 	ldw	r2,-8(fp)
  803430:	10800d17 	ldw	r2,52(r2)
  803434:	10c01d36 	bltu	r2,r3,8034ac <jpeg_core_output_dimensions+0xb8>
  803438:	e0bffe17 	ldw	r2,-8(fp)
  80343c:	10800717 	ldw	r2,28(r2)
  803440:	1007883a 	mov	r3,r2
  803444:	e0bffe17 	ldw	r2,-8(fp)
  803448:	10806b17 	ldw	r2,428(r2)
  80344c:	100b883a 	mov	r5,r2
  803450:	1809883a 	mov	r4,r3
  803454:	0813ea80 	call	813ea8 <jdiv_round_up>
  803458:	1007883a 	mov	r3,r2
  80345c:	e0bffe17 	ldw	r2,-8(fp)
  803460:	10c01c15 	stw	r3,112(r2)
  803464:	e0bffe17 	ldw	r2,-8(fp)
  803468:	10800817 	ldw	r2,32(r2)
  80346c:	1007883a 	mov	r3,r2
  803470:	e0bffe17 	ldw	r2,-8(fp)
  803474:	10806b17 	ldw	r2,428(r2)
  803478:	100b883a 	mov	r5,r2
  80347c:	1809883a 	mov	r4,r3
  803480:	0813ea80 	call	813ea8 <jdiv_round_up>
  803484:	1007883a 	mov	r3,r2
  803488:	e0bffe17 	ldw	r2,-8(fp)
  80348c:	10c01d15 	stw	r3,116(r2)
  803490:	e0bffe17 	ldw	r2,-8(fp)
  803494:	00c00044 	movi	r3,1
  803498:	10c05115 	stw	r3,324(r2)
  80349c:	e0bffe17 	ldw	r2,-8(fp)
  8034a0:	00c00044 	movi	r3,1
  8034a4:	10c05215 	stw	r3,328(r2)
  8034a8:	0002b906 	br	803f90 <jpeg_core_output_dimensions+0xb9c>
  8034ac:	e0bffe17 	ldw	r2,-8(fp)
  8034b0:	10c00c17 	ldw	r3,48(r2)
  8034b4:	e0bffe17 	ldw	r2,-8(fp)
  8034b8:	10806b17 	ldw	r2,428(r2)
  8034bc:	100b883a 	mov	r5,r2
  8034c0:	1809883a 	mov	r4,r3
  8034c4:	08305040 	call	830504 <__mulsi3>
  8034c8:	1007883a 	mov	r3,r2
  8034cc:	e0bffe17 	ldw	r2,-8(fp)
  8034d0:	10800d17 	ldw	r2,52(r2)
  8034d4:	1085883a 	add	r2,r2,r2
  8034d8:	10c01f36 	bltu	r2,r3,803558 <jpeg_core_output_dimensions+0x164>
  8034dc:	e0bffe17 	ldw	r2,-8(fp)
  8034e0:	10800717 	ldw	r2,28(r2)
  8034e4:	1085883a 	add	r2,r2,r2
  8034e8:	1007883a 	mov	r3,r2
  8034ec:	e0bffe17 	ldw	r2,-8(fp)
  8034f0:	10806b17 	ldw	r2,428(r2)
  8034f4:	100b883a 	mov	r5,r2
  8034f8:	1809883a 	mov	r4,r3
  8034fc:	0813ea80 	call	813ea8 <jdiv_round_up>
  803500:	1007883a 	mov	r3,r2
  803504:	e0bffe17 	ldw	r2,-8(fp)
  803508:	10c01c15 	stw	r3,112(r2)
  80350c:	e0bffe17 	ldw	r2,-8(fp)
  803510:	10800817 	ldw	r2,32(r2)
  803514:	1085883a 	add	r2,r2,r2
  803518:	1007883a 	mov	r3,r2
  80351c:	e0bffe17 	ldw	r2,-8(fp)
  803520:	10806b17 	ldw	r2,428(r2)
  803524:	100b883a 	mov	r5,r2
  803528:	1809883a 	mov	r4,r3
  80352c:	0813ea80 	call	813ea8 <jdiv_round_up>
  803530:	1007883a 	mov	r3,r2
  803534:	e0bffe17 	ldw	r2,-8(fp)
  803538:	10c01d15 	stw	r3,116(r2)
  80353c:	e0bffe17 	ldw	r2,-8(fp)
  803540:	00c00084 	movi	r3,2
  803544:	10c05115 	stw	r3,324(r2)
  803548:	e0bffe17 	ldw	r2,-8(fp)
  80354c:	00c00084 	movi	r3,2
  803550:	10c05215 	stw	r3,328(r2)
  803554:	00028e06 	br	803f90 <jpeg_core_output_dimensions+0xb9c>
  803558:	e0bffe17 	ldw	r2,-8(fp)
  80355c:	10c00c17 	ldw	r3,48(r2)
  803560:	e0bffe17 	ldw	r2,-8(fp)
  803564:	10806b17 	ldw	r2,428(r2)
  803568:	100b883a 	mov	r5,r2
  80356c:	1809883a 	mov	r4,r3
  803570:	08305040 	call	830504 <__mulsi3>
  803574:	1009883a 	mov	r4,r2
  803578:	e0bffe17 	ldw	r2,-8(fp)
  80357c:	10c00d17 	ldw	r3,52(r2)
  803580:	1805883a 	mov	r2,r3
  803584:	1085883a 	add	r2,r2,r2
  803588:	10c5883a 	add	r2,r2,r3
  80358c:	11002336 	bltu	r2,r4,80361c <jpeg_core_output_dimensions+0x228>
  803590:	e0bffe17 	ldw	r2,-8(fp)
  803594:	10800717 	ldw	r2,28(r2)
  803598:	1007883a 	mov	r3,r2
  80359c:	1805883a 	mov	r2,r3
  8035a0:	1085883a 	add	r2,r2,r2
  8035a4:	10c7883a 	add	r3,r2,r3
  8035a8:	e0bffe17 	ldw	r2,-8(fp)
  8035ac:	10806b17 	ldw	r2,428(r2)
  8035b0:	100b883a 	mov	r5,r2
  8035b4:	1809883a 	mov	r4,r3
  8035b8:	0813ea80 	call	813ea8 <jdiv_round_up>
  8035bc:	1007883a 	mov	r3,r2
  8035c0:	e0bffe17 	ldw	r2,-8(fp)
  8035c4:	10c01c15 	stw	r3,112(r2)
  8035c8:	e0bffe17 	ldw	r2,-8(fp)
  8035cc:	10800817 	ldw	r2,32(r2)
  8035d0:	1007883a 	mov	r3,r2
  8035d4:	1805883a 	mov	r2,r3
  8035d8:	1085883a 	add	r2,r2,r2
  8035dc:	10c7883a 	add	r3,r2,r3
  8035e0:	e0bffe17 	ldw	r2,-8(fp)
  8035e4:	10806b17 	ldw	r2,428(r2)
  8035e8:	100b883a 	mov	r5,r2
  8035ec:	1809883a 	mov	r4,r3
  8035f0:	0813ea80 	call	813ea8 <jdiv_round_up>
  8035f4:	1007883a 	mov	r3,r2
  8035f8:	e0bffe17 	ldw	r2,-8(fp)
  8035fc:	10c01d15 	stw	r3,116(r2)
  803600:	e0bffe17 	ldw	r2,-8(fp)
  803604:	00c000c4 	movi	r3,3
  803608:	10c05115 	stw	r3,324(r2)
  80360c:	e0bffe17 	ldw	r2,-8(fp)
  803610:	00c000c4 	movi	r3,3
  803614:	10c05215 	stw	r3,328(r2)
  803618:	00025d06 	br	803f90 <jpeg_core_output_dimensions+0xb9c>
  80361c:	e0bffe17 	ldw	r2,-8(fp)
  803620:	10c00c17 	ldw	r3,48(r2)
  803624:	e0bffe17 	ldw	r2,-8(fp)
  803628:	10806b17 	ldw	r2,428(r2)
  80362c:	100b883a 	mov	r5,r2
  803630:	1809883a 	mov	r4,r3
  803634:	08305040 	call	830504 <__mulsi3>
  803638:	1007883a 	mov	r3,r2
  80363c:	e0bffe17 	ldw	r2,-8(fp)
  803640:	10800d17 	ldw	r2,52(r2)
  803644:	1085883a 	add	r2,r2,r2
  803648:	1085883a 	add	r2,r2,r2
  80364c:	10c02136 	bltu	r2,r3,8036d4 <jpeg_core_output_dimensions+0x2e0>
  803650:	e0bffe17 	ldw	r2,-8(fp)
  803654:	10800717 	ldw	r2,28(r2)
  803658:	1085883a 	add	r2,r2,r2
  80365c:	1085883a 	add	r2,r2,r2
  803660:	1007883a 	mov	r3,r2
  803664:	e0bffe17 	ldw	r2,-8(fp)
  803668:	10806b17 	ldw	r2,428(r2)
  80366c:	100b883a 	mov	r5,r2
  803670:	1809883a 	mov	r4,r3
  803674:	0813ea80 	call	813ea8 <jdiv_round_up>
  803678:	1007883a 	mov	r3,r2
  80367c:	e0bffe17 	ldw	r2,-8(fp)
  803680:	10c01c15 	stw	r3,112(r2)
  803684:	e0bffe17 	ldw	r2,-8(fp)
  803688:	10800817 	ldw	r2,32(r2)
  80368c:	1085883a 	add	r2,r2,r2
  803690:	1085883a 	add	r2,r2,r2
  803694:	1007883a 	mov	r3,r2
  803698:	e0bffe17 	ldw	r2,-8(fp)
  80369c:	10806b17 	ldw	r2,428(r2)
  8036a0:	100b883a 	mov	r5,r2
  8036a4:	1809883a 	mov	r4,r3
  8036a8:	0813ea80 	call	813ea8 <jdiv_round_up>
  8036ac:	1007883a 	mov	r3,r2
  8036b0:	e0bffe17 	ldw	r2,-8(fp)
  8036b4:	10c01d15 	stw	r3,116(r2)
  8036b8:	e0bffe17 	ldw	r2,-8(fp)
  8036bc:	00c00104 	movi	r3,4
  8036c0:	10c05115 	stw	r3,324(r2)
  8036c4:	e0bffe17 	ldw	r2,-8(fp)
  8036c8:	00c00104 	movi	r3,4
  8036cc:	10c05215 	stw	r3,328(r2)
  8036d0:	00022f06 	br	803f90 <jpeg_core_output_dimensions+0xb9c>
  8036d4:	e0bffe17 	ldw	r2,-8(fp)
  8036d8:	10c00c17 	ldw	r3,48(r2)
  8036dc:	e0bffe17 	ldw	r2,-8(fp)
  8036e0:	10806b17 	ldw	r2,428(r2)
  8036e4:	100b883a 	mov	r5,r2
  8036e8:	1809883a 	mov	r4,r3
  8036ec:	08305040 	call	830504 <__mulsi3>
  8036f0:	1021883a 	mov	r16,r2
  8036f4:	e0bffe17 	ldw	r2,-8(fp)
  8036f8:	10800d17 	ldw	r2,52(r2)
  8036fc:	01400144 	movi	r5,5
  803700:	1009883a 	mov	r4,r2
  803704:	08305040 	call	830504 <__mulsi3>
  803708:	14002336 	bltu	r2,r16,803798 <jpeg_core_output_dimensions+0x3a4>
  80370c:	e0bffe17 	ldw	r2,-8(fp)
  803710:	10800717 	ldw	r2,28(r2)
  803714:	01400144 	movi	r5,5
  803718:	1009883a 	mov	r4,r2
  80371c:	08305040 	call	830504 <__mulsi3>
  803720:	1007883a 	mov	r3,r2
  803724:	e0bffe17 	ldw	r2,-8(fp)
  803728:	10806b17 	ldw	r2,428(r2)
  80372c:	100b883a 	mov	r5,r2
  803730:	1809883a 	mov	r4,r3
  803734:	0813ea80 	call	813ea8 <jdiv_round_up>
  803738:	1007883a 	mov	r3,r2
  80373c:	e0bffe17 	ldw	r2,-8(fp)
  803740:	10c01c15 	stw	r3,112(r2)
  803744:	e0bffe17 	ldw	r2,-8(fp)
  803748:	10800817 	ldw	r2,32(r2)
  80374c:	01400144 	movi	r5,5
  803750:	1009883a 	mov	r4,r2
  803754:	08305040 	call	830504 <__mulsi3>
  803758:	1007883a 	mov	r3,r2
  80375c:	e0bffe17 	ldw	r2,-8(fp)
  803760:	10806b17 	ldw	r2,428(r2)
  803764:	100b883a 	mov	r5,r2
  803768:	1809883a 	mov	r4,r3
  80376c:	0813ea80 	call	813ea8 <jdiv_round_up>
  803770:	1007883a 	mov	r3,r2
  803774:	e0bffe17 	ldw	r2,-8(fp)
  803778:	10c01d15 	stw	r3,116(r2)
  80377c:	e0bffe17 	ldw	r2,-8(fp)
  803780:	00c00144 	movi	r3,5
  803784:	10c05115 	stw	r3,324(r2)
  803788:	e0bffe17 	ldw	r2,-8(fp)
  80378c:	00c00144 	movi	r3,5
  803790:	10c05215 	stw	r3,328(r2)
  803794:	0001fe06 	br	803f90 <jpeg_core_output_dimensions+0xb9c>
  803798:	e0bffe17 	ldw	r2,-8(fp)
  80379c:	10c00c17 	ldw	r3,48(r2)
  8037a0:	e0bffe17 	ldw	r2,-8(fp)
  8037a4:	10806b17 	ldw	r2,428(r2)
  8037a8:	100b883a 	mov	r5,r2
  8037ac:	1809883a 	mov	r4,r3
  8037b0:	08305040 	call	830504 <__mulsi3>
  8037b4:	1021883a 	mov	r16,r2
  8037b8:	e0bffe17 	ldw	r2,-8(fp)
  8037bc:	10800d17 	ldw	r2,52(r2)
  8037c0:	01400184 	movi	r5,6
  8037c4:	1009883a 	mov	r4,r2
  8037c8:	08305040 	call	830504 <__mulsi3>
  8037cc:	14002336 	bltu	r2,r16,80385c <jpeg_core_output_dimensions+0x468>
  8037d0:	e0bffe17 	ldw	r2,-8(fp)
  8037d4:	10800717 	ldw	r2,28(r2)
  8037d8:	01400184 	movi	r5,6
  8037dc:	1009883a 	mov	r4,r2
  8037e0:	08305040 	call	830504 <__mulsi3>
  8037e4:	1007883a 	mov	r3,r2
  8037e8:	e0bffe17 	ldw	r2,-8(fp)
  8037ec:	10806b17 	ldw	r2,428(r2)
  8037f0:	100b883a 	mov	r5,r2
  8037f4:	1809883a 	mov	r4,r3
  8037f8:	0813ea80 	call	813ea8 <jdiv_round_up>
  8037fc:	1007883a 	mov	r3,r2
  803800:	e0bffe17 	ldw	r2,-8(fp)
  803804:	10c01c15 	stw	r3,112(r2)
  803808:	e0bffe17 	ldw	r2,-8(fp)
  80380c:	10800817 	ldw	r2,32(r2)
  803810:	01400184 	movi	r5,6
  803814:	1009883a 	mov	r4,r2
  803818:	08305040 	call	830504 <__mulsi3>
  80381c:	1007883a 	mov	r3,r2
  803820:	e0bffe17 	ldw	r2,-8(fp)
  803824:	10806b17 	ldw	r2,428(r2)
  803828:	100b883a 	mov	r5,r2
  80382c:	1809883a 	mov	r4,r3
  803830:	0813ea80 	call	813ea8 <jdiv_round_up>
  803834:	1007883a 	mov	r3,r2
  803838:	e0bffe17 	ldw	r2,-8(fp)
  80383c:	10c01d15 	stw	r3,116(r2)
  803840:	e0bffe17 	ldw	r2,-8(fp)
  803844:	00c00184 	movi	r3,6
  803848:	10c05115 	stw	r3,324(r2)
  80384c:	e0bffe17 	ldw	r2,-8(fp)
  803850:	00c00184 	movi	r3,6
  803854:	10c05215 	stw	r3,328(r2)
  803858:	0001cd06 	br	803f90 <jpeg_core_output_dimensions+0xb9c>
  80385c:	e0bffe17 	ldw	r2,-8(fp)
  803860:	10c00c17 	ldw	r3,48(r2)
  803864:	e0bffe17 	ldw	r2,-8(fp)
  803868:	10806b17 	ldw	r2,428(r2)
  80386c:	100b883a 	mov	r5,r2
  803870:	1809883a 	mov	r4,r3
  803874:	08305040 	call	830504 <__mulsi3>
  803878:	1021883a 	mov	r16,r2
  80387c:	e0bffe17 	ldw	r2,-8(fp)
  803880:	10800d17 	ldw	r2,52(r2)
  803884:	014001c4 	movi	r5,7
  803888:	1009883a 	mov	r4,r2
  80388c:	08305040 	call	830504 <__mulsi3>
  803890:	14002336 	bltu	r2,r16,803920 <jpeg_core_output_dimensions+0x52c>
  803894:	e0bffe17 	ldw	r2,-8(fp)
  803898:	10800717 	ldw	r2,28(r2)
  80389c:	014001c4 	movi	r5,7
  8038a0:	1009883a 	mov	r4,r2
  8038a4:	08305040 	call	830504 <__mulsi3>
  8038a8:	1007883a 	mov	r3,r2
  8038ac:	e0bffe17 	ldw	r2,-8(fp)
  8038b0:	10806b17 	ldw	r2,428(r2)
  8038b4:	100b883a 	mov	r5,r2
  8038b8:	1809883a 	mov	r4,r3
  8038bc:	0813ea80 	call	813ea8 <jdiv_round_up>
  8038c0:	1007883a 	mov	r3,r2
  8038c4:	e0bffe17 	ldw	r2,-8(fp)
  8038c8:	10c01c15 	stw	r3,112(r2)
  8038cc:	e0bffe17 	ldw	r2,-8(fp)
  8038d0:	10800817 	ldw	r2,32(r2)
  8038d4:	014001c4 	movi	r5,7
  8038d8:	1009883a 	mov	r4,r2
  8038dc:	08305040 	call	830504 <__mulsi3>
  8038e0:	1007883a 	mov	r3,r2
  8038e4:	e0bffe17 	ldw	r2,-8(fp)
  8038e8:	10806b17 	ldw	r2,428(r2)
  8038ec:	100b883a 	mov	r5,r2
  8038f0:	1809883a 	mov	r4,r3
  8038f4:	0813ea80 	call	813ea8 <jdiv_round_up>
  8038f8:	1007883a 	mov	r3,r2
  8038fc:	e0bffe17 	ldw	r2,-8(fp)
  803900:	10c01d15 	stw	r3,116(r2)
  803904:	e0bffe17 	ldw	r2,-8(fp)
  803908:	00c001c4 	movi	r3,7
  80390c:	10c05115 	stw	r3,324(r2)
  803910:	e0bffe17 	ldw	r2,-8(fp)
  803914:	00c001c4 	movi	r3,7
  803918:	10c05215 	stw	r3,328(r2)
  80391c:	00019c06 	br	803f90 <jpeg_core_output_dimensions+0xb9c>
  803920:	e0bffe17 	ldw	r2,-8(fp)
  803924:	10c00c17 	ldw	r3,48(r2)
  803928:	e0bffe17 	ldw	r2,-8(fp)
  80392c:	10806b17 	ldw	r2,428(r2)
  803930:	100b883a 	mov	r5,r2
  803934:	1809883a 	mov	r4,r3
  803938:	08305040 	call	830504 <__mulsi3>
  80393c:	1007883a 	mov	r3,r2
  803940:	e0bffe17 	ldw	r2,-8(fp)
  803944:	10800d17 	ldw	r2,52(r2)
  803948:	100490fa 	slli	r2,r2,3
  80394c:	10c01d36 	bltu	r2,r3,8039c4 <jpeg_core_output_dimensions+0x5d0>
  803950:	e0bffe17 	ldw	r2,-8(fp)
  803954:	10800717 	ldw	r2,28(r2)
  803958:	100690fa 	slli	r3,r2,3
  80395c:	e0bffe17 	ldw	r2,-8(fp)
  803960:	10806b17 	ldw	r2,428(r2)
  803964:	100b883a 	mov	r5,r2
  803968:	1809883a 	mov	r4,r3
  80396c:	0813ea80 	call	813ea8 <jdiv_round_up>
  803970:	1007883a 	mov	r3,r2
  803974:	e0bffe17 	ldw	r2,-8(fp)
  803978:	10c01c15 	stw	r3,112(r2)
  80397c:	e0bffe17 	ldw	r2,-8(fp)
  803980:	10800817 	ldw	r2,32(r2)
  803984:	100690fa 	slli	r3,r2,3
  803988:	e0bffe17 	ldw	r2,-8(fp)
  80398c:	10806b17 	ldw	r2,428(r2)
  803990:	100b883a 	mov	r5,r2
  803994:	1809883a 	mov	r4,r3
  803998:	0813ea80 	call	813ea8 <jdiv_round_up>
  80399c:	1007883a 	mov	r3,r2
  8039a0:	e0bffe17 	ldw	r2,-8(fp)
  8039a4:	10c01d15 	stw	r3,116(r2)
  8039a8:	e0bffe17 	ldw	r2,-8(fp)
  8039ac:	00c00204 	movi	r3,8
  8039b0:	10c05115 	stw	r3,324(r2)
  8039b4:	e0bffe17 	ldw	r2,-8(fp)
  8039b8:	00c00204 	movi	r3,8
  8039bc:	10c05215 	stw	r3,328(r2)
  8039c0:	00017306 	br	803f90 <jpeg_core_output_dimensions+0xb9c>
  8039c4:	e0bffe17 	ldw	r2,-8(fp)
  8039c8:	10c00c17 	ldw	r3,48(r2)
  8039cc:	e0bffe17 	ldw	r2,-8(fp)
  8039d0:	10806b17 	ldw	r2,428(r2)
  8039d4:	100b883a 	mov	r5,r2
  8039d8:	1809883a 	mov	r4,r3
  8039dc:	08305040 	call	830504 <__mulsi3>
  8039e0:	1021883a 	mov	r16,r2
  8039e4:	e0bffe17 	ldw	r2,-8(fp)
  8039e8:	10800d17 	ldw	r2,52(r2)
  8039ec:	01400244 	movi	r5,9
  8039f0:	1009883a 	mov	r4,r2
  8039f4:	08305040 	call	830504 <__mulsi3>
  8039f8:	14002336 	bltu	r2,r16,803a88 <jpeg_core_output_dimensions+0x694>
  8039fc:	e0bffe17 	ldw	r2,-8(fp)
  803a00:	10800717 	ldw	r2,28(r2)
  803a04:	01400244 	movi	r5,9
  803a08:	1009883a 	mov	r4,r2
  803a0c:	08305040 	call	830504 <__mulsi3>
  803a10:	1007883a 	mov	r3,r2
  803a14:	e0bffe17 	ldw	r2,-8(fp)
  803a18:	10806b17 	ldw	r2,428(r2)
  803a1c:	100b883a 	mov	r5,r2
  803a20:	1809883a 	mov	r4,r3
  803a24:	0813ea80 	call	813ea8 <jdiv_round_up>
  803a28:	1007883a 	mov	r3,r2
  803a2c:	e0bffe17 	ldw	r2,-8(fp)
  803a30:	10c01c15 	stw	r3,112(r2)
  803a34:	e0bffe17 	ldw	r2,-8(fp)
  803a38:	10800817 	ldw	r2,32(r2)
  803a3c:	01400244 	movi	r5,9
  803a40:	1009883a 	mov	r4,r2
  803a44:	08305040 	call	830504 <__mulsi3>
  803a48:	1007883a 	mov	r3,r2
  803a4c:	e0bffe17 	ldw	r2,-8(fp)
  803a50:	10806b17 	ldw	r2,428(r2)
  803a54:	100b883a 	mov	r5,r2
  803a58:	1809883a 	mov	r4,r3
  803a5c:	0813ea80 	call	813ea8 <jdiv_round_up>
  803a60:	1007883a 	mov	r3,r2
  803a64:	e0bffe17 	ldw	r2,-8(fp)
  803a68:	10c01d15 	stw	r3,116(r2)
  803a6c:	e0bffe17 	ldw	r2,-8(fp)
  803a70:	00c00244 	movi	r3,9
  803a74:	10c05115 	stw	r3,324(r2)
  803a78:	e0bffe17 	ldw	r2,-8(fp)
  803a7c:	00c00244 	movi	r3,9
  803a80:	10c05215 	stw	r3,328(r2)
  803a84:	00014206 	br	803f90 <jpeg_core_output_dimensions+0xb9c>
  803a88:	e0bffe17 	ldw	r2,-8(fp)
  803a8c:	10c00c17 	ldw	r3,48(r2)
  803a90:	e0bffe17 	ldw	r2,-8(fp)
  803a94:	10806b17 	ldw	r2,428(r2)
  803a98:	100b883a 	mov	r5,r2
  803a9c:	1809883a 	mov	r4,r3
  803aa0:	08305040 	call	830504 <__mulsi3>
  803aa4:	1021883a 	mov	r16,r2
  803aa8:	e0bffe17 	ldw	r2,-8(fp)
  803aac:	10800d17 	ldw	r2,52(r2)
  803ab0:	01400284 	movi	r5,10
  803ab4:	1009883a 	mov	r4,r2
  803ab8:	08305040 	call	830504 <__mulsi3>
  803abc:	14002336 	bltu	r2,r16,803b4c <jpeg_core_output_dimensions+0x758>
  803ac0:	e0bffe17 	ldw	r2,-8(fp)
  803ac4:	10800717 	ldw	r2,28(r2)
  803ac8:	01400284 	movi	r5,10
  803acc:	1009883a 	mov	r4,r2
  803ad0:	08305040 	call	830504 <__mulsi3>
  803ad4:	1007883a 	mov	r3,r2
  803ad8:	e0bffe17 	ldw	r2,-8(fp)
  803adc:	10806b17 	ldw	r2,428(r2)
  803ae0:	100b883a 	mov	r5,r2
  803ae4:	1809883a 	mov	r4,r3
  803ae8:	0813ea80 	call	813ea8 <jdiv_round_up>
  803aec:	1007883a 	mov	r3,r2
  803af0:	e0bffe17 	ldw	r2,-8(fp)
  803af4:	10c01c15 	stw	r3,112(r2)
  803af8:	e0bffe17 	ldw	r2,-8(fp)
  803afc:	10800817 	ldw	r2,32(r2)
  803b00:	01400284 	movi	r5,10
  803b04:	1009883a 	mov	r4,r2
  803b08:	08305040 	call	830504 <__mulsi3>
  803b0c:	1007883a 	mov	r3,r2
  803b10:	e0bffe17 	ldw	r2,-8(fp)
  803b14:	10806b17 	ldw	r2,428(r2)
  803b18:	100b883a 	mov	r5,r2
  803b1c:	1809883a 	mov	r4,r3
  803b20:	0813ea80 	call	813ea8 <jdiv_round_up>
  803b24:	1007883a 	mov	r3,r2
  803b28:	e0bffe17 	ldw	r2,-8(fp)
  803b2c:	10c01d15 	stw	r3,116(r2)
  803b30:	e0bffe17 	ldw	r2,-8(fp)
  803b34:	00c00284 	movi	r3,10
  803b38:	10c05115 	stw	r3,324(r2)
  803b3c:	e0bffe17 	ldw	r2,-8(fp)
  803b40:	00c00284 	movi	r3,10
  803b44:	10c05215 	stw	r3,328(r2)
  803b48:	00011106 	br	803f90 <jpeg_core_output_dimensions+0xb9c>
  803b4c:	e0bffe17 	ldw	r2,-8(fp)
  803b50:	10c00c17 	ldw	r3,48(r2)
  803b54:	e0bffe17 	ldw	r2,-8(fp)
  803b58:	10806b17 	ldw	r2,428(r2)
  803b5c:	100b883a 	mov	r5,r2
  803b60:	1809883a 	mov	r4,r3
  803b64:	08305040 	call	830504 <__mulsi3>
  803b68:	1021883a 	mov	r16,r2
  803b6c:	e0bffe17 	ldw	r2,-8(fp)
  803b70:	10800d17 	ldw	r2,52(r2)
  803b74:	014002c4 	movi	r5,11
  803b78:	1009883a 	mov	r4,r2
  803b7c:	08305040 	call	830504 <__mulsi3>
  803b80:	14002336 	bltu	r2,r16,803c10 <jpeg_core_output_dimensions+0x81c>
  803b84:	e0bffe17 	ldw	r2,-8(fp)
  803b88:	10800717 	ldw	r2,28(r2)
  803b8c:	014002c4 	movi	r5,11
  803b90:	1009883a 	mov	r4,r2
  803b94:	08305040 	call	830504 <__mulsi3>
  803b98:	1007883a 	mov	r3,r2
  803b9c:	e0bffe17 	ldw	r2,-8(fp)
  803ba0:	10806b17 	ldw	r2,428(r2)
  803ba4:	100b883a 	mov	r5,r2
  803ba8:	1809883a 	mov	r4,r3
  803bac:	0813ea80 	call	813ea8 <jdiv_round_up>
  803bb0:	1007883a 	mov	r3,r2
  803bb4:	e0bffe17 	ldw	r2,-8(fp)
  803bb8:	10c01c15 	stw	r3,112(r2)
  803bbc:	e0bffe17 	ldw	r2,-8(fp)
  803bc0:	10800817 	ldw	r2,32(r2)
  803bc4:	014002c4 	movi	r5,11
  803bc8:	1009883a 	mov	r4,r2
  803bcc:	08305040 	call	830504 <__mulsi3>
  803bd0:	1007883a 	mov	r3,r2
  803bd4:	e0bffe17 	ldw	r2,-8(fp)
  803bd8:	10806b17 	ldw	r2,428(r2)
  803bdc:	100b883a 	mov	r5,r2
  803be0:	1809883a 	mov	r4,r3
  803be4:	0813ea80 	call	813ea8 <jdiv_round_up>
  803be8:	1007883a 	mov	r3,r2
  803bec:	e0bffe17 	ldw	r2,-8(fp)
  803bf0:	10c01d15 	stw	r3,116(r2)
  803bf4:	e0bffe17 	ldw	r2,-8(fp)
  803bf8:	00c002c4 	movi	r3,11
  803bfc:	10c05115 	stw	r3,324(r2)
  803c00:	e0bffe17 	ldw	r2,-8(fp)
  803c04:	00c002c4 	movi	r3,11
  803c08:	10c05215 	stw	r3,328(r2)
  803c0c:	0000e006 	br	803f90 <jpeg_core_output_dimensions+0xb9c>
  803c10:	e0bffe17 	ldw	r2,-8(fp)
  803c14:	10c00c17 	ldw	r3,48(r2)
  803c18:	e0bffe17 	ldw	r2,-8(fp)
  803c1c:	10806b17 	ldw	r2,428(r2)
  803c20:	100b883a 	mov	r5,r2
  803c24:	1809883a 	mov	r4,r3
  803c28:	08305040 	call	830504 <__mulsi3>
  803c2c:	1021883a 	mov	r16,r2
  803c30:	e0bffe17 	ldw	r2,-8(fp)
  803c34:	10800d17 	ldw	r2,52(r2)
  803c38:	01400304 	movi	r5,12
  803c3c:	1009883a 	mov	r4,r2
  803c40:	08305040 	call	830504 <__mulsi3>
  803c44:	14002336 	bltu	r2,r16,803cd4 <jpeg_core_output_dimensions+0x8e0>
  803c48:	e0bffe17 	ldw	r2,-8(fp)
  803c4c:	10800717 	ldw	r2,28(r2)
  803c50:	01400304 	movi	r5,12
  803c54:	1009883a 	mov	r4,r2
  803c58:	08305040 	call	830504 <__mulsi3>
  803c5c:	1007883a 	mov	r3,r2
  803c60:	e0bffe17 	ldw	r2,-8(fp)
  803c64:	10806b17 	ldw	r2,428(r2)
  803c68:	100b883a 	mov	r5,r2
  803c6c:	1809883a 	mov	r4,r3
  803c70:	0813ea80 	call	813ea8 <jdiv_round_up>
  803c74:	1007883a 	mov	r3,r2
  803c78:	e0bffe17 	ldw	r2,-8(fp)
  803c7c:	10c01c15 	stw	r3,112(r2)
  803c80:	e0bffe17 	ldw	r2,-8(fp)
  803c84:	10800817 	ldw	r2,32(r2)
  803c88:	01400304 	movi	r5,12
  803c8c:	1009883a 	mov	r4,r2
  803c90:	08305040 	call	830504 <__mulsi3>
  803c94:	1007883a 	mov	r3,r2
  803c98:	e0bffe17 	ldw	r2,-8(fp)
  803c9c:	10806b17 	ldw	r2,428(r2)
  803ca0:	100b883a 	mov	r5,r2
  803ca4:	1809883a 	mov	r4,r3
  803ca8:	0813ea80 	call	813ea8 <jdiv_round_up>
  803cac:	1007883a 	mov	r3,r2
  803cb0:	e0bffe17 	ldw	r2,-8(fp)
  803cb4:	10c01d15 	stw	r3,116(r2)
  803cb8:	e0bffe17 	ldw	r2,-8(fp)
  803cbc:	00c00304 	movi	r3,12
  803cc0:	10c05115 	stw	r3,324(r2)
  803cc4:	e0bffe17 	ldw	r2,-8(fp)
  803cc8:	00c00304 	movi	r3,12
  803ccc:	10c05215 	stw	r3,328(r2)
  803cd0:	0000af06 	br	803f90 <jpeg_core_output_dimensions+0xb9c>
  803cd4:	e0bffe17 	ldw	r2,-8(fp)
  803cd8:	10c00c17 	ldw	r3,48(r2)
  803cdc:	e0bffe17 	ldw	r2,-8(fp)
  803ce0:	10806b17 	ldw	r2,428(r2)
  803ce4:	100b883a 	mov	r5,r2
  803ce8:	1809883a 	mov	r4,r3
  803cec:	08305040 	call	830504 <__mulsi3>
  803cf0:	1021883a 	mov	r16,r2
  803cf4:	e0bffe17 	ldw	r2,-8(fp)
  803cf8:	10800d17 	ldw	r2,52(r2)
  803cfc:	01400344 	movi	r5,13
  803d00:	1009883a 	mov	r4,r2
  803d04:	08305040 	call	830504 <__mulsi3>
  803d08:	14002336 	bltu	r2,r16,803d98 <jpeg_core_output_dimensions+0x9a4>
  803d0c:	e0bffe17 	ldw	r2,-8(fp)
  803d10:	10800717 	ldw	r2,28(r2)
  803d14:	01400344 	movi	r5,13
  803d18:	1009883a 	mov	r4,r2
  803d1c:	08305040 	call	830504 <__mulsi3>
  803d20:	1007883a 	mov	r3,r2
  803d24:	e0bffe17 	ldw	r2,-8(fp)
  803d28:	10806b17 	ldw	r2,428(r2)
  803d2c:	100b883a 	mov	r5,r2
  803d30:	1809883a 	mov	r4,r3
  803d34:	0813ea80 	call	813ea8 <jdiv_round_up>
  803d38:	1007883a 	mov	r3,r2
  803d3c:	e0bffe17 	ldw	r2,-8(fp)
  803d40:	10c01c15 	stw	r3,112(r2)
  803d44:	e0bffe17 	ldw	r2,-8(fp)
  803d48:	10800817 	ldw	r2,32(r2)
  803d4c:	01400344 	movi	r5,13
  803d50:	1009883a 	mov	r4,r2
  803d54:	08305040 	call	830504 <__mulsi3>
  803d58:	1007883a 	mov	r3,r2
  803d5c:	e0bffe17 	ldw	r2,-8(fp)
  803d60:	10806b17 	ldw	r2,428(r2)
  803d64:	100b883a 	mov	r5,r2
  803d68:	1809883a 	mov	r4,r3
  803d6c:	0813ea80 	call	813ea8 <jdiv_round_up>
  803d70:	1007883a 	mov	r3,r2
  803d74:	e0bffe17 	ldw	r2,-8(fp)
  803d78:	10c01d15 	stw	r3,116(r2)
  803d7c:	e0bffe17 	ldw	r2,-8(fp)
  803d80:	00c00344 	movi	r3,13
  803d84:	10c05115 	stw	r3,324(r2)
  803d88:	e0bffe17 	ldw	r2,-8(fp)
  803d8c:	00c00344 	movi	r3,13
  803d90:	10c05215 	stw	r3,328(r2)
  803d94:	00007e06 	br	803f90 <jpeg_core_output_dimensions+0xb9c>
  803d98:	e0bffe17 	ldw	r2,-8(fp)
  803d9c:	10c00c17 	ldw	r3,48(r2)
  803da0:	e0bffe17 	ldw	r2,-8(fp)
  803da4:	10806b17 	ldw	r2,428(r2)
  803da8:	100b883a 	mov	r5,r2
  803dac:	1809883a 	mov	r4,r3
  803db0:	08305040 	call	830504 <__mulsi3>
  803db4:	1021883a 	mov	r16,r2
  803db8:	e0bffe17 	ldw	r2,-8(fp)
  803dbc:	10800d17 	ldw	r2,52(r2)
  803dc0:	01400384 	movi	r5,14
  803dc4:	1009883a 	mov	r4,r2
  803dc8:	08305040 	call	830504 <__mulsi3>
  803dcc:	14002336 	bltu	r2,r16,803e5c <jpeg_core_output_dimensions+0xa68>
  803dd0:	e0bffe17 	ldw	r2,-8(fp)
  803dd4:	10800717 	ldw	r2,28(r2)
  803dd8:	01400384 	movi	r5,14
  803ddc:	1009883a 	mov	r4,r2
  803de0:	08305040 	call	830504 <__mulsi3>
  803de4:	1007883a 	mov	r3,r2
  803de8:	e0bffe17 	ldw	r2,-8(fp)
  803dec:	10806b17 	ldw	r2,428(r2)
  803df0:	100b883a 	mov	r5,r2
  803df4:	1809883a 	mov	r4,r3
  803df8:	0813ea80 	call	813ea8 <jdiv_round_up>
  803dfc:	1007883a 	mov	r3,r2
  803e00:	e0bffe17 	ldw	r2,-8(fp)
  803e04:	10c01c15 	stw	r3,112(r2)
  803e08:	e0bffe17 	ldw	r2,-8(fp)
  803e0c:	10800817 	ldw	r2,32(r2)
  803e10:	01400384 	movi	r5,14
  803e14:	1009883a 	mov	r4,r2
  803e18:	08305040 	call	830504 <__mulsi3>
  803e1c:	1007883a 	mov	r3,r2
  803e20:	e0bffe17 	ldw	r2,-8(fp)
  803e24:	10806b17 	ldw	r2,428(r2)
  803e28:	100b883a 	mov	r5,r2
  803e2c:	1809883a 	mov	r4,r3
  803e30:	0813ea80 	call	813ea8 <jdiv_round_up>
  803e34:	1007883a 	mov	r3,r2
  803e38:	e0bffe17 	ldw	r2,-8(fp)
  803e3c:	10c01d15 	stw	r3,116(r2)
  803e40:	e0bffe17 	ldw	r2,-8(fp)
  803e44:	00c00384 	movi	r3,14
  803e48:	10c05115 	stw	r3,324(r2)
  803e4c:	e0bffe17 	ldw	r2,-8(fp)
  803e50:	00c00384 	movi	r3,14
  803e54:	10c05215 	stw	r3,328(r2)
  803e58:	00004d06 	br	803f90 <jpeg_core_output_dimensions+0xb9c>
  803e5c:	e0bffe17 	ldw	r2,-8(fp)
  803e60:	10c00c17 	ldw	r3,48(r2)
  803e64:	e0bffe17 	ldw	r2,-8(fp)
  803e68:	10806b17 	ldw	r2,428(r2)
  803e6c:	100b883a 	mov	r5,r2
  803e70:	1809883a 	mov	r4,r3
  803e74:	08305040 	call	830504 <__mulsi3>
  803e78:	1021883a 	mov	r16,r2
  803e7c:	e0bffe17 	ldw	r2,-8(fp)
  803e80:	10800d17 	ldw	r2,52(r2)
  803e84:	014003c4 	movi	r5,15
  803e88:	1009883a 	mov	r4,r2
  803e8c:	08305040 	call	830504 <__mulsi3>
  803e90:	14002336 	bltu	r2,r16,803f20 <jpeg_core_output_dimensions+0xb2c>
  803e94:	e0bffe17 	ldw	r2,-8(fp)
  803e98:	10800717 	ldw	r2,28(r2)
  803e9c:	014003c4 	movi	r5,15
  803ea0:	1009883a 	mov	r4,r2
  803ea4:	08305040 	call	830504 <__mulsi3>
  803ea8:	1007883a 	mov	r3,r2
  803eac:	e0bffe17 	ldw	r2,-8(fp)
  803eb0:	10806b17 	ldw	r2,428(r2)
  803eb4:	100b883a 	mov	r5,r2
  803eb8:	1809883a 	mov	r4,r3
  803ebc:	0813ea80 	call	813ea8 <jdiv_round_up>
  803ec0:	1007883a 	mov	r3,r2
  803ec4:	e0bffe17 	ldw	r2,-8(fp)
  803ec8:	10c01c15 	stw	r3,112(r2)
  803ecc:	e0bffe17 	ldw	r2,-8(fp)
  803ed0:	10800817 	ldw	r2,32(r2)
  803ed4:	014003c4 	movi	r5,15
  803ed8:	1009883a 	mov	r4,r2
  803edc:	08305040 	call	830504 <__mulsi3>
  803ee0:	1007883a 	mov	r3,r2
  803ee4:	e0bffe17 	ldw	r2,-8(fp)
  803ee8:	10806b17 	ldw	r2,428(r2)
  803eec:	100b883a 	mov	r5,r2
  803ef0:	1809883a 	mov	r4,r3
  803ef4:	0813ea80 	call	813ea8 <jdiv_round_up>
  803ef8:	1007883a 	mov	r3,r2
  803efc:	e0bffe17 	ldw	r2,-8(fp)
  803f00:	10c01d15 	stw	r3,116(r2)
  803f04:	e0bffe17 	ldw	r2,-8(fp)
  803f08:	00c003c4 	movi	r3,15
  803f0c:	10c05115 	stw	r3,324(r2)
  803f10:	e0bffe17 	ldw	r2,-8(fp)
  803f14:	00c003c4 	movi	r3,15
  803f18:	10c05215 	stw	r3,328(r2)
  803f1c:	00001c06 	br	803f90 <jpeg_core_output_dimensions+0xb9c>
  803f20:	e0bffe17 	ldw	r2,-8(fp)
  803f24:	10800717 	ldw	r2,28(r2)
  803f28:	1006913a 	slli	r3,r2,4
  803f2c:	e0bffe17 	ldw	r2,-8(fp)
  803f30:	10806b17 	ldw	r2,428(r2)
  803f34:	100b883a 	mov	r5,r2
  803f38:	1809883a 	mov	r4,r3
  803f3c:	0813ea80 	call	813ea8 <jdiv_round_up>
  803f40:	1007883a 	mov	r3,r2
  803f44:	e0bffe17 	ldw	r2,-8(fp)
  803f48:	10c01c15 	stw	r3,112(r2)
  803f4c:	e0bffe17 	ldw	r2,-8(fp)
  803f50:	10800817 	ldw	r2,32(r2)
  803f54:	1006913a 	slli	r3,r2,4
  803f58:	e0bffe17 	ldw	r2,-8(fp)
  803f5c:	10806b17 	ldw	r2,428(r2)
  803f60:	100b883a 	mov	r5,r2
  803f64:	1809883a 	mov	r4,r3
  803f68:	0813ea80 	call	813ea8 <jdiv_round_up>
  803f6c:	1007883a 	mov	r3,r2
  803f70:	e0bffe17 	ldw	r2,-8(fp)
  803f74:	10c01d15 	stw	r3,116(r2)
  803f78:	e0bffe17 	ldw	r2,-8(fp)
  803f7c:	00c00404 	movi	r3,16
  803f80:	10c05115 	stw	r3,324(r2)
  803f84:	e0bffe17 	ldw	r2,-8(fp)
  803f88:	00c00404 	movi	r3,16
  803f8c:	10c05215 	stw	r3,328(r2)
  803f90:	e03ffc15 	stw	zero,-16(fp)
  803f94:	e0bffe17 	ldw	r2,-8(fp)
  803f98:	10803617 	ldw	r2,216(r2)
  803f9c:	e0bffd15 	stw	r2,-12(fp)
  803fa0:	00000e06 	br	803fdc <jpeg_core_output_dimensions+0xbe8>
  803fa4:	e0bffe17 	ldw	r2,-8(fp)
  803fa8:	10c05117 	ldw	r3,324(r2)
  803fac:	e0bffd17 	ldw	r2,-12(fp)
  803fb0:	10c00915 	stw	r3,36(r2)
  803fb4:	e0bffe17 	ldw	r2,-8(fp)
  803fb8:	10c05217 	ldw	r3,328(r2)
  803fbc:	e0bffd17 	ldw	r2,-12(fp)
  803fc0:	10c00a15 	stw	r3,40(r2)
  803fc4:	e0bffc17 	ldw	r2,-16(fp)
  803fc8:	10800044 	addi	r2,r2,1
  803fcc:	e0bffc15 	stw	r2,-16(fp)
  803fd0:	e0bffd17 	ldw	r2,-12(fp)
  803fd4:	10801604 	addi	r2,r2,88
  803fd8:	e0bffd15 	stw	r2,-12(fp)
  803fdc:	e0bffe17 	ldw	r2,-8(fp)
  803fe0:	10800917 	ldw	r2,36(r2)
  803fe4:	e0fffc17 	ldw	r3,-16(fp)
  803fe8:	18bfee16 	blt	r3,r2,803fa4 <__alt_mem_epcs_flash_controller_0+0xff7fafa4>
  803fec:	0001883a 	nop
  803ff0:	e6ffff04 	addi	sp,fp,-4
  803ff4:	dfc00217 	ldw	ra,8(sp)
  803ff8:	df000117 	ldw	fp,4(sp)
  803ffc:	dc000017 	ldw	r16,0(sp)
  804000:	dec00304 	addi	sp,sp,12
  804004:	f800283a 	ret

00804008 <initial_setup>:
  804008:	defffa04 	addi	sp,sp,-24
  80400c:	dfc00515 	stw	ra,20(sp)
  804010:	df000415 	stw	fp,16(sp)
  804014:	dc000315 	stw	r16,12(sp)
  804018:	df000404 	addi	fp,sp,16
  80401c:	e13ffe15 	stw	r4,-8(fp)
  804020:	e0bffe17 	ldw	r2,-8(fp)
  804024:	10800817 	ldw	r2,32(r2)
  804028:	1007883a 	mov	r3,r2
  80402c:	00bff714 	movui	r2,65500
  804030:	10c00516 	blt	r2,r3,804048 <initial_setup+0x40>
  804034:	e0bffe17 	ldw	r2,-8(fp)
  804038:	10800717 	ldw	r2,28(r2)
  80403c:	1007883a 	mov	r3,r2
  804040:	00bff714 	movui	r2,65500
  804044:	10c00d0e 	bge	r2,r3,80407c <initial_setup+0x74>
  804048:	e0bffe17 	ldw	r2,-8(fp)
  80404c:	10800017 	ldw	r2,0(r2)
  804050:	00c00a84 	movi	r3,42
  804054:	10c00515 	stw	r3,20(r2)
  804058:	e0bffe17 	ldw	r2,-8(fp)
  80405c:	10800017 	ldw	r2,0(r2)
  804060:	00fff714 	movui	r3,65500
  804064:	10c00615 	stw	r3,24(r2)
  804068:	e0bffe17 	ldw	r2,-8(fp)
  80406c:	10800017 	ldw	r2,0(r2)
  804070:	10800017 	ldw	r2,0(r2)
  804074:	e13ffe17 	ldw	r4,-8(fp)
  804078:	103ee83a 	callr	r2
  80407c:	e0bffe17 	ldw	r2,-8(fp)
  804080:	10803517 	ldw	r2,212(r2)
  804084:	10800210 	cmplti	r2,r2,8
  804088:	1000041e 	bne	r2,zero,80409c <initial_setup+0x94>
  80408c:	e0bffe17 	ldw	r2,-8(fp)
  804090:	10803517 	ldw	r2,212(r2)
  804094:	10800350 	cmplti	r2,r2,13
  804098:	10000e1e 	bne	r2,zero,8040d4 <initial_setup+0xcc>
  80409c:	e0bffe17 	ldw	r2,-8(fp)
  8040a0:	10800017 	ldw	r2,0(r2)
  8040a4:	00c00404 	movi	r3,16
  8040a8:	10c00515 	stw	r3,20(r2)
  8040ac:	e0bffe17 	ldw	r2,-8(fp)
  8040b0:	10800017 	ldw	r2,0(r2)
  8040b4:	e0fffe17 	ldw	r3,-8(fp)
  8040b8:	18c03517 	ldw	r3,212(r3)
  8040bc:	10c00615 	stw	r3,24(r2)
  8040c0:	e0bffe17 	ldw	r2,-8(fp)
  8040c4:	10800017 	ldw	r2,0(r2)
  8040c8:	10800017 	ldw	r2,0(r2)
  8040cc:	e13ffe17 	ldw	r4,-8(fp)
  8040d0:	103ee83a 	callr	r2
  8040d4:	e0bffe17 	ldw	r2,-8(fp)
  8040d8:	10800917 	ldw	r2,36(r2)
  8040dc:	108002d0 	cmplti	r2,r2,11
  8040e0:	1000121e 	bne	r2,zero,80412c <initial_setup+0x124>
  8040e4:	e0bffe17 	ldw	r2,-8(fp)
  8040e8:	10800017 	ldw	r2,0(r2)
  8040ec:	00c006c4 	movi	r3,27
  8040f0:	10c00515 	stw	r3,20(r2)
  8040f4:	e0bffe17 	ldw	r2,-8(fp)
  8040f8:	10800017 	ldw	r2,0(r2)
  8040fc:	e0fffe17 	ldw	r3,-8(fp)
  804100:	18c00917 	ldw	r3,36(r3)
  804104:	10c00615 	stw	r3,24(r2)
  804108:	e0bffe17 	ldw	r2,-8(fp)
  80410c:	10800017 	ldw	r2,0(r2)
  804110:	00c00284 	movi	r3,10
  804114:	10c00715 	stw	r3,28(r2)
  804118:	e0bffe17 	ldw	r2,-8(fp)
  80411c:	10800017 	ldw	r2,0(r2)
  804120:	10800017 	ldw	r2,0(r2)
  804124:	e13ffe17 	ldw	r4,-8(fp)
  804128:	103ee83a 	callr	r2
  80412c:	e0bffe17 	ldw	r2,-8(fp)
  804130:	00c00044 	movi	r3,1
  804134:	10c04f15 	stw	r3,316(r2)
  804138:	e0bffe17 	ldw	r2,-8(fp)
  80413c:	00c00044 	movi	r3,1
  804140:	10c05015 	stw	r3,320(r2)
  804144:	e03ffc15 	stw	zero,-16(fp)
  804148:	e0bffe17 	ldw	r2,-8(fp)
  80414c:	10803617 	ldw	r2,216(r2)
  804150:	e0bffd15 	stw	r2,-12(fp)
  804154:	00002f06 	br	804214 <initial_setup+0x20c>
  804158:	e0bffd17 	ldw	r2,-12(fp)
  80415c:	10800217 	ldw	r2,8(r2)
  804160:	00800b0e 	bge	zero,r2,804190 <initial_setup+0x188>
  804164:	e0bffd17 	ldw	r2,-12(fp)
  804168:	10800217 	ldw	r2,8(r2)
  80416c:	10800148 	cmpgei	r2,r2,5
  804170:	1000071e 	bne	r2,zero,804190 <initial_setup+0x188>
  804174:	e0bffd17 	ldw	r2,-12(fp)
  804178:	10800317 	ldw	r2,12(r2)
  80417c:	0080040e 	bge	zero,r2,804190 <initial_setup+0x188>
  804180:	e0bffd17 	ldw	r2,-12(fp)
  804184:	10800317 	ldw	r2,12(r2)
  804188:	10800150 	cmplti	r2,r2,5
  80418c:	1000091e 	bne	r2,zero,8041b4 <initial_setup+0x1ac>
  804190:	e0bffe17 	ldw	r2,-8(fp)
  804194:	10800017 	ldw	r2,0(r2)
  804198:	00c004c4 	movi	r3,19
  80419c:	10c00515 	stw	r3,20(r2)
  8041a0:	e0bffe17 	ldw	r2,-8(fp)
  8041a4:	10800017 	ldw	r2,0(r2)
  8041a8:	10800017 	ldw	r2,0(r2)
  8041ac:	e13ffe17 	ldw	r4,-8(fp)
  8041b0:	103ee83a 	callr	r2
  8041b4:	e0bffd17 	ldw	r2,-12(fp)
  8041b8:	11000217 	ldw	r4,8(r2)
  8041bc:	e0bffe17 	ldw	r2,-8(fp)
  8041c0:	10c04f17 	ldw	r3,316(r2)
  8041c4:	2005883a 	mov	r2,r4
  8041c8:	10c0010e 	bge	r2,r3,8041d0 <initial_setup+0x1c8>
  8041cc:	1805883a 	mov	r2,r3
  8041d0:	e0fffe17 	ldw	r3,-8(fp)
  8041d4:	18804f15 	stw	r2,316(r3)
  8041d8:	e0bffd17 	ldw	r2,-12(fp)
  8041dc:	11000317 	ldw	r4,12(r2)
  8041e0:	e0bffe17 	ldw	r2,-8(fp)
  8041e4:	10c05017 	ldw	r3,320(r2)
  8041e8:	2005883a 	mov	r2,r4
  8041ec:	10c0010e 	bge	r2,r3,8041f4 <initial_setup+0x1ec>
  8041f0:	1805883a 	mov	r2,r3
  8041f4:	e0fffe17 	ldw	r3,-8(fp)
  8041f8:	18805015 	stw	r2,320(r3)
  8041fc:	e0bffc17 	ldw	r2,-16(fp)
  804200:	10800044 	addi	r2,r2,1
  804204:	e0bffc15 	stw	r2,-16(fp)
  804208:	e0bffd17 	ldw	r2,-12(fp)
  80420c:	10801604 	addi	r2,r2,88
  804210:	e0bffd15 	stw	r2,-12(fp)
  804214:	e0bffe17 	ldw	r2,-8(fp)
  804218:	10800917 	ldw	r2,36(r2)
  80421c:	e0fffc17 	ldw	r3,-16(fp)
  804220:	18bfcd16 	blt	r3,r2,804158 <__alt_mem_epcs_flash_controller_0+0xff7fb158>
  804224:	e0bffe17 	ldw	r2,-8(fp)
  804228:	10803717 	ldw	r2,220(r2)
  80422c:	1000061e 	bne	r2,zero,804248 <initial_setup+0x240>
  804230:	e0bffe17 	ldw	r2,-8(fp)
  804234:	10803817 	ldw	r2,224(r2)
  804238:	10000e26 	beq	r2,zero,804274 <initial_setup+0x26c>
  80423c:	e0bffe17 	ldw	r2,-8(fp)
  804240:	10805517 	ldw	r2,340(r2)
  804244:	10000b26 	beq	r2,zero,804274 <initial_setup+0x26c>
  804248:	e0bffe17 	ldw	r2,-8(fp)
  80424c:	00c00204 	movi	r3,8
  804250:	10c06b15 	stw	r3,428(r2)
  804254:	e0fffe17 	ldw	r3,-8(fp)
  804258:	008021b4 	movhi	r2,134
  80425c:	10a13704 	addi	r2,r2,-31524
  804260:	18806c15 	stw	r2,432(r3)
  804264:	e0bffe17 	ldw	r2,-8(fp)
  804268:	00c00fc4 	movi	r3,63
  80426c:	10c06d15 	stw	r3,436(r2)
  804270:	00010306 	br	804680 <initial_setup+0x678>
  804274:	e0bffe17 	ldw	r2,-8(fp)
  804278:	10806817 	ldw	r2,416(r2)
  80427c:	10c00fe0 	cmpeqi	r3,r2,63
  804280:	18007e1e 	bne	r3,zero,80447c <initial_setup+0x474>
  804284:	10c01008 	cmpgei	r3,r2,64
  804288:	1800111e 	bne	r3,zero,8042d0 <initial_setup+0x2c8>
  80428c:	10c003e0 	cmpeqi	r3,r2,15
  804290:	18004a1e 	bne	r3,zero,8043bc <initial_setup+0x3b4>
  804294:	10c00408 	cmpgei	r3,r2,16
  804298:	1800061e 	bne	r3,zero,8042b4 <initial_setup+0x2ac>
  80429c:	10c000e0 	cmpeqi	r3,r2,3
  8042a0:	18002e1e 	bne	r3,zero,80435c <initial_setup+0x354>
  8042a4:	10c00220 	cmpeqi	r3,r2,8
  8042a8:	1800381e 	bne	r3,zero,80438c <initial_setup+0x384>
  8042ac:	10001f26 	beq	r2,zero,80432c <initial_setup+0x324>
  8042b0:	0000d506 	br	804608 <initial_setup+0x600>
  8042b4:	10c008e0 	cmpeqi	r3,r2,35
  8042b8:	1800581e 	bne	r3,zero,80441c <initial_setup+0x414>
  8042bc:	10c00c20 	cmpeqi	r3,r2,48
  8042c0:	1800621e 	bne	r3,zero,80444c <initial_setup+0x444>
  8042c4:	10800620 	cmpeqi	r2,r2,24
  8042c8:	1000481e 	bne	r2,zero,8043ec <initial_setup+0x3e4>
  8042cc:	0000ce06 	br	804608 <initial_setup+0x600>
  8042d0:	10c023e0 	cmpeqi	r3,r2,143
  8042d4:	1800951e 	bne	r3,zero,80452c <initial_setup+0x524>
  8042d8:	10c02408 	cmpgei	r3,r2,144
  8042dc:	1800071e 	bne	r3,zero,8042fc <initial_setup+0x2f4>
  8042e0:	10c018e0 	cmpeqi	r3,r2,99
  8042e4:	18007b1e 	bne	r3,zero,8044d4 <initial_setup+0x4cc>
  8042e8:	10c01e20 	cmpeqi	r3,r2,120
  8042ec:	1800841e 	bne	r3,zero,804500 <initial_setup+0x4f8>
  8042f0:	10801420 	cmpeqi	r2,r2,80
  8042f4:	10006c1e 	bne	r2,zero,8044a8 <initial_setup+0x4a0>
  8042f8:	0000c306 	br	804608 <initial_setup+0x600>
  8042fc:	10c030e0 	cmpeqi	r3,r2,195
  804300:	1800a01e 	bne	r3,zero,804584 <initial_setup+0x57c>
  804304:	10c03108 	cmpgei	r3,r2,196
  804308:	1800031e 	bne	r3,zero,804318 <initial_setup+0x310>
  80430c:	10802a20 	cmpeqi	r2,r2,168
  804310:	1000911e 	bne	r2,zero,804558 <initial_setup+0x550>
  804314:	0000bc06 	br	804608 <initial_setup+0x600>
  804318:	10c03820 	cmpeqi	r3,r2,224
  80431c:	1800a41e 	bne	r3,zero,8045b0 <initial_setup+0x5a8>
  804320:	10803fe0 	cmpeqi	r2,r2,255
  804324:	1000ad1e 	bne	r2,zero,8045dc <initial_setup+0x5d4>
  804328:	0000b706 	br	804608 <initial_setup+0x600>
  80432c:	e0bffe17 	ldw	r2,-8(fp)
  804330:	00c00044 	movi	r3,1
  804334:	10c06b15 	stw	r3,428(r2)
  804338:	e0fffe17 	ldw	r3,-8(fp)
  80433c:	008021b4 	movhi	r2,134
  804340:	10a13704 	addi	r2,r2,-31524
  804344:	18806c15 	stw	r2,432(r3)
  804348:	e0bffe17 	ldw	r2,-8(fp)
  80434c:	10c06817 	ldw	r3,416(r2)
  804350:	e0bffe17 	ldw	r2,-8(fp)
  804354:	10c06d15 	stw	r3,436(r2)
  804358:	0000c906 	br	804680 <initial_setup+0x678>
  80435c:	e0bffe17 	ldw	r2,-8(fp)
  804360:	00c00084 	movi	r3,2
  804364:	10c06b15 	stw	r3,428(r2)
  804368:	e0fffe17 	ldw	r3,-8(fp)
  80436c:	008021b4 	movhi	r2,134
  804370:	10a25e04 	addi	r2,r2,-30344
  804374:	18806c15 	stw	r2,432(r3)
  804378:	e0bffe17 	ldw	r2,-8(fp)
  80437c:	10c06817 	ldw	r3,416(r2)
  804380:	e0bffe17 	ldw	r2,-8(fp)
  804384:	10c06d15 	stw	r3,436(r2)
  804388:	0000bd06 	br	804680 <initial_setup+0x678>
  80438c:	e0bffe17 	ldw	r2,-8(fp)
  804390:	00c000c4 	movi	r3,3
  804394:	10c06b15 	stw	r3,428(r2)
  804398:	e0fffe17 	ldw	r3,-8(fp)
  80439c:	008021b4 	movhi	r2,134
  8043a0:	10a24504 	addi	r2,r2,-30444
  8043a4:	18806c15 	stw	r2,432(r3)
  8043a8:	e0bffe17 	ldw	r2,-8(fp)
  8043ac:	10c06817 	ldw	r3,416(r2)
  8043b0:	e0bffe17 	ldw	r2,-8(fp)
  8043b4:	10c06d15 	stw	r3,436(r2)
  8043b8:	0000b106 	br	804680 <initial_setup+0x678>
  8043bc:	e0bffe17 	ldw	r2,-8(fp)
  8043c0:	00c00104 	movi	r3,4
  8043c4:	10c06b15 	stw	r3,428(r2)
  8043c8:	e0fffe17 	ldw	r3,-8(fp)
  8043cc:	008021b4 	movhi	r2,134
  8043d0:	10a22504 	addi	r2,r2,-30572
  8043d4:	18806c15 	stw	r2,432(r3)
  8043d8:	e0bffe17 	ldw	r2,-8(fp)
  8043dc:	10c06817 	ldw	r3,416(r2)
  8043e0:	e0bffe17 	ldw	r2,-8(fp)
  8043e4:	10c06d15 	stw	r3,436(r2)
  8043e8:	0000a506 	br	804680 <initial_setup+0x678>
  8043ec:	e0bffe17 	ldw	r2,-8(fp)
  8043f0:	00c00144 	movi	r3,5
  8043f4:	10c06b15 	stw	r3,428(r2)
  8043f8:	e0fffe17 	ldw	r3,-8(fp)
  8043fc:	008021b4 	movhi	r2,134
  804400:	10a1fc04 	addi	r2,r2,-30736
  804404:	18806c15 	stw	r2,432(r3)
  804408:	e0bffe17 	ldw	r2,-8(fp)
  80440c:	10c06817 	ldw	r3,416(r2)
  804410:	e0bffe17 	ldw	r2,-8(fp)
  804414:	10c06d15 	stw	r3,436(r2)
  804418:	00009906 	br	804680 <initial_setup+0x678>
  80441c:	e0bffe17 	ldw	r2,-8(fp)
  804420:	00c00184 	movi	r3,6
  804424:	10c06b15 	stw	r3,428(r2)
  804428:	e0fffe17 	ldw	r3,-8(fp)
  80442c:	008021b4 	movhi	r2,134
  804430:	10a1c804 	addi	r2,r2,-30944
  804434:	18806c15 	stw	r2,432(r3)
  804438:	e0bffe17 	ldw	r2,-8(fp)
  80443c:	10c06817 	ldw	r3,416(r2)
  804440:	e0bffe17 	ldw	r2,-8(fp)
  804444:	10c06d15 	stw	r3,436(r2)
  804448:	00008d06 	br	804680 <initial_setup+0x678>
  80444c:	e0bffe17 	ldw	r2,-8(fp)
  804450:	00c001c4 	movi	r3,7
  804454:	10c06b15 	stw	r3,428(r2)
  804458:	e0fffe17 	ldw	r3,-8(fp)
  80445c:	008021b4 	movhi	r2,134
  804460:	10a18704 	addi	r2,r2,-31204
  804464:	18806c15 	stw	r2,432(r3)
  804468:	e0bffe17 	ldw	r2,-8(fp)
  80446c:	10c06817 	ldw	r3,416(r2)
  804470:	e0bffe17 	ldw	r2,-8(fp)
  804474:	10c06d15 	stw	r3,436(r2)
  804478:	00008106 	br	804680 <initial_setup+0x678>
  80447c:	e0bffe17 	ldw	r2,-8(fp)
  804480:	00c00204 	movi	r3,8
  804484:	10c06b15 	stw	r3,428(r2)
  804488:	e0fffe17 	ldw	r3,-8(fp)
  80448c:	008021b4 	movhi	r2,134
  804490:	10a13704 	addi	r2,r2,-31524
  804494:	18806c15 	stw	r2,432(r3)
  804498:	e0bffe17 	ldw	r2,-8(fp)
  80449c:	00c00fc4 	movi	r3,63
  8044a0:	10c06d15 	stw	r3,436(r2)
  8044a4:	00007606 	br	804680 <initial_setup+0x678>
  8044a8:	e0bffe17 	ldw	r2,-8(fp)
  8044ac:	00c00244 	movi	r3,9
  8044b0:	10c06b15 	stw	r3,428(r2)
  8044b4:	e0fffe17 	ldw	r3,-8(fp)
  8044b8:	008021b4 	movhi	r2,134
  8044bc:	10a13704 	addi	r2,r2,-31524
  8044c0:	18806c15 	stw	r2,432(r3)
  8044c4:	e0bffe17 	ldw	r2,-8(fp)
  8044c8:	00c00fc4 	movi	r3,63
  8044cc:	10c06d15 	stw	r3,436(r2)
  8044d0:	00006b06 	br	804680 <initial_setup+0x678>
  8044d4:	e0bffe17 	ldw	r2,-8(fp)
  8044d8:	00c00284 	movi	r3,10
  8044dc:	10c06b15 	stw	r3,428(r2)
  8044e0:	e0fffe17 	ldw	r3,-8(fp)
  8044e4:	008021b4 	movhi	r2,134
  8044e8:	10a13704 	addi	r2,r2,-31524
  8044ec:	18806c15 	stw	r2,432(r3)
  8044f0:	e0bffe17 	ldw	r2,-8(fp)
  8044f4:	00c00fc4 	movi	r3,63
  8044f8:	10c06d15 	stw	r3,436(r2)
  8044fc:	00006006 	br	804680 <initial_setup+0x678>
  804500:	e0bffe17 	ldw	r2,-8(fp)
  804504:	00c002c4 	movi	r3,11
  804508:	10c06b15 	stw	r3,428(r2)
  80450c:	e0fffe17 	ldw	r3,-8(fp)
  804510:	008021b4 	movhi	r2,134
  804514:	10a13704 	addi	r2,r2,-31524
  804518:	18806c15 	stw	r2,432(r3)
  80451c:	e0bffe17 	ldw	r2,-8(fp)
  804520:	00c00fc4 	movi	r3,63
  804524:	10c06d15 	stw	r3,436(r2)
  804528:	00005506 	br	804680 <initial_setup+0x678>
  80452c:	e0bffe17 	ldw	r2,-8(fp)
  804530:	00c00304 	movi	r3,12
  804534:	10c06b15 	stw	r3,428(r2)
  804538:	e0fffe17 	ldw	r3,-8(fp)
  80453c:	008021b4 	movhi	r2,134
  804540:	10a13704 	addi	r2,r2,-31524
  804544:	18806c15 	stw	r2,432(r3)
  804548:	e0bffe17 	ldw	r2,-8(fp)
  80454c:	00c00fc4 	movi	r3,63
  804550:	10c06d15 	stw	r3,436(r2)
  804554:	00004a06 	br	804680 <initial_setup+0x678>
  804558:	e0bffe17 	ldw	r2,-8(fp)
  80455c:	00c00344 	movi	r3,13
  804560:	10c06b15 	stw	r3,428(r2)
  804564:	e0fffe17 	ldw	r3,-8(fp)
  804568:	008021b4 	movhi	r2,134
  80456c:	10a13704 	addi	r2,r2,-31524
  804570:	18806c15 	stw	r2,432(r3)
  804574:	e0bffe17 	ldw	r2,-8(fp)
  804578:	00c00fc4 	movi	r3,63
  80457c:	10c06d15 	stw	r3,436(r2)
  804580:	00003f06 	br	804680 <initial_setup+0x678>
  804584:	e0bffe17 	ldw	r2,-8(fp)
  804588:	00c00384 	movi	r3,14
  80458c:	10c06b15 	stw	r3,428(r2)
  804590:	e0fffe17 	ldw	r3,-8(fp)
  804594:	008021b4 	movhi	r2,134
  804598:	10a13704 	addi	r2,r2,-31524
  80459c:	18806c15 	stw	r2,432(r3)
  8045a0:	e0bffe17 	ldw	r2,-8(fp)
  8045a4:	00c00fc4 	movi	r3,63
  8045a8:	10c06d15 	stw	r3,436(r2)
  8045ac:	00003406 	br	804680 <initial_setup+0x678>
  8045b0:	e0bffe17 	ldw	r2,-8(fp)
  8045b4:	00c003c4 	movi	r3,15
  8045b8:	10c06b15 	stw	r3,428(r2)
  8045bc:	e0fffe17 	ldw	r3,-8(fp)
  8045c0:	008021b4 	movhi	r2,134
  8045c4:	10a13704 	addi	r2,r2,-31524
  8045c8:	18806c15 	stw	r2,432(r3)
  8045cc:	e0bffe17 	ldw	r2,-8(fp)
  8045d0:	00c00fc4 	movi	r3,63
  8045d4:	10c06d15 	stw	r3,436(r2)
  8045d8:	00002906 	br	804680 <initial_setup+0x678>
  8045dc:	e0bffe17 	ldw	r2,-8(fp)
  8045e0:	00c00404 	movi	r3,16
  8045e4:	10c06b15 	stw	r3,428(r2)
  8045e8:	e0fffe17 	ldw	r3,-8(fp)
  8045ec:	008021b4 	movhi	r2,134
  8045f0:	10a13704 	addi	r2,r2,-31524
  8045f4:	18806c15 	stw	r2,432(r3)
  8045f8:	e0bffe17 	ldw	r2,-8(fp)
  8045fc:	00c00fc4 	movi	r3,63
  804600:	10c06d15 	stw	r3,436(r2)
  804604:	00001e06 	br	804680 <initial_setup+0x678>
  804608:	e0bffe17 	ldw	r2,-8(fp)
  80460c:	10800017 	ldw	r2,0(r2)
  804610:	00c00444 	movi	r3,17
  804614:	10c00515 	stw	r3,20(r2)
  804618:	e0bffe17 	ldw	r2,-8(fp)
  80461c:	10800017 	ldw	r2,0(r2)
  804620:	e0fffe17 	ldw	r3,-8(fp)
  804624:	18c06717 	ldw	r3,412(r3)
  804628:	10c00615 	stw	r3,24(r2)
  80462c:	e0bffe17 	ldw	r2,-8(fp)
  804630:	10800017 	ldw	r2,0(r2)
  804634:	e0fffe17 	ldw	r3,-8(fp)
  804638:	18c06817 	ldw	r3,416(r3)
  80463c:	10c00715 	stw	r3,28(r2)
  804640:	e0bffe17 	ldw	r2,-8(fp)
  804644:	10800017 	ldw	r2,0(r2)
  804648:	e0fffe17 	ldw	r3,-8(fp)
  80464c:	18c06917 	ldw	r3,420(r3)
  804650:	10c00815 	stw	r3,32(r2)
  804654:	e0bffe17 	ldw	r2,-8(fp)
  804658:	10800017 	ldw	r2,0(r2)
  80465c:	e0fffe17 	ldw	r3,-8(fp)
  804660:	18c06a17 	ldw	r3,424(r3)
  804664:	10c00915 	stw	r3,36(r2)
  804668:	e0bffe17 	ldw	r2,-8(fp)
  80466c:	10800017 	ldw	r2,0(r2)
  804670:	10800017 	ldw	r2,0(r2)
  804674:	e13ffe17 	ldw	r4,-8(fp)
  804678:	103ee83a 	callr	r2
  80467c:	0001883a 	nop
  804680:	e0bffe17 	ldw	r2,-8(fp)
  804684:	10c06b17 	ldw	r3,428(r2)
  804688:	e0bffe17 	ldw	r2,-8(fp)
  80468c:	10c05115 	stw	r3,324(r2)
  804690:	e0bffe17 	ldw	r2,-8(fp)
  804694:	10c06b17 	ldw	r3,428(r2)
  804698:	e0bffe17 	ldw	r2,-8(fp)
  80469c:	10c05215 	stw	r3,328(r2)
  8046a0:	e03ffc15 	stw	zero,-16(fp)
  8046a4:	e0bffe17 	ldw	r2,-8(fp)
  8046a8:	10803617 	ldw	r2,216(r2)
  8046ac:	e0bffd15 	stw	r2,-12(fp)
  8046b0:	00006106 	br	804838 <initial_setup+0x830>
  8046b4:	e0bffe17 	ldw	r2,-8(fp)
  8046b8:	10c06b17 	ldw	r3,428(r2)
  8046bc:	e0bffd17 	ldw	r2,-12(fp)
  8046c0:	10c00915 	stw	r3,36(r2)
  8046c4:	e0bffe17 	ldw	r2,-8(fp)
  8046c8:	10c06b17 	ldw	r3,428(r2)
  8046cc:	e0bffd17 	ldw	r2,-12(fp)
  8046d0:	10c00a15 	stw	r3,40(r2)
  8046d4:	e0bffe17 	ldw	r2,-8(fp)
  8046d8:	10800717 	ldw	r2,28(r2)
  8046dc:	1007883a 	mov	r3,r2
  8046e0:	e0bffd17 	ldw	r2,-12(fp)
  8046e4:	10800217 	ldw	r2,8(r2)
  8046e8:	100b883a 	mov	r5,r2
  8046ec:	1809883a 	mov	r4,r3
  8046f0:	08305040 	call	830504 <__mulsi3>
  8046f4:	1021883a 	mov	r16,r2
  8046f8:	e0bffe17 	ldw	r2,-8(fp)
  8046fc:	10c04f17 	ldw	r3,316(r2)
  804700:	e0bffe17 	ldw	r2,-8(fp)
  804704:	10806b17 	ldw	r2,428(r2)
  804708:	100b883a 	mov	r5,r2
  80470c:	1809883a 	mov	r4,r3
  804710:	08305040 	call	830504 <__mulsi3>
  804714:	100b883a 	mov	r5,r2
  804718:	8009883a 	mov	r4,r16
  80471c:	0813ea80 	call	813ea8 <jdiv_round_up>
  804720:	1007883a 	mov	r3,r2
  804724:	e0bffd17 	ldw	r2,-12(fp)
  804728:	10c00715 	stw	r3,28(r2)
  80472c:	e0bffe17 	ldw	r2,-8(fp)
  804730:	10800817 	ldw	r2,32(r2)
  804734:	1007883a 	mov	r3,r2
  804738:	e0bffd17 	ldw	r2,-12(fp)
  80473c:	10800317 	ldw	r2,12(r2)
  804740:	100b883a 	mov	r5,r2
  804744:	1809883a 	mov	r4,r3
  804748:	08305040 	call	830504 <__mulsi3>
  80474c:	1021883a 	mov	r16,r2
  804750:	e0bffe17 	ldw	r2,-8(fp)
  804754:	10c05017 	ldw	r3,320(r2)
  804758:	e0bffe17 	ldw	r2,-8(fp)
  80475c:	10806b17 	ldw	r2,428(r2)
  804760:	100b883a 	mov	r5,r2
  804764:	1809883a 	mov	r4,r3
  804768:	08305040 	call	830504 <__mulsi3>
  80476c:	100b883a 	mov	r5,r2
  804770:	8009883a 	mov	r4,r16
  804774:	0813ea80 	call	813ea8 <jdiv_round_up>
  804778:	1007883a 	mov	r3,r2
  80477c:	e0bffd17 	ldw	r2,-12(fp)
  804780:	10c00815 	stw	r3,32(r2)
  804784:	e0bffe17 	ldw	r2,-8(fp)
  804788:	10800717 	ldw	r2,28(r2)
  80478c:	1007883a 	mov	r3,r2
  804790:	e0bffd17 	ldw	r2,-12(fp)
  804794:	10800217 	ldw	r2,8(r2)
  804798:	100b883a 	mov	r5,r2
  80479c:	1809883a 	mov	r4,r3
  8047a0:	08305040 	call	830504 <__mulsi3>
  8047a4:	1007883a 	mov	r3,r2
  8047a8:	e0bffe17 	ldw	r2,-8(fp)
  8047ac:	10804f17 	ldw	r2,316(r2)
  8047b0:	100b883a 	mov	r5,r2
  8047b4:	1809883a 	mov	r4,r3
  8047b8:	0813ea80 	call	813ea8 <jdiv_round_up>
  8047bc:	1007883a 	mov	r3,r2
  8047c0:	e0bffd17 	ldw	r2,-12(fp)
  8047c4:	10c00b15 	stw	r3,44(r2)
  8047c8:	e0bffe17 	ldw	r2,-8(fp)
  8047cc:	10800817 	ldw	r2,32(r2)
  8047d0:	1007883a 	mov	r3,r2
  8047d4:	e0bffd17 	ldw	r2,-12(fp)
  8047d8:	10800317 	ldw	r2,12(r2)
  8047dc:	100b883a 	mov	r5,r2
  8047e0:	1809883a 	mov	r4,r3
  8047e4:	08305040 	call	830504 <__mulsi3>
  8047e8:	1007883a 	mov	r3,r2
  8047ec:	e0bffe17 	ldw	r2,-8(fp)
  8047f0:	10805017 	ldw	r2,320(r2)
  8047f4:	100b883a 	mov	r5,r2
  8047f8:	1809883a 	mov	r4,r3
  8047fc:	0813ea80 	call	813ea8 <jdiv_round_up>
  804800:	1007883a 	mov	r3,r2
  804804:	e0bffd17 	ldw	r2,-12(fp)
  804808:	10c00c15 	stw	r3,48(r2)
  80480c:	e0bffd17 	ldw	r2,-12(fp)
  804810:	00c00044 	movi	r3,1
  804814:	10c00d15 	stw	r3,52(r2)
  804818:	e0bffd17 	ldw	r2,-12(fp)
  80481c:	10001415 	stw	zero,80(r2)
  804820:	e0bffc17 	ldw	r2,-16(fp)
  804824:	10800044 	addi	r2,r2,1
  804828:	e0bffc15 	stw	r2,-16(fp)
  80482c:	e0bffd17 	ldw	r2,-12(fp)
  804830:	10801604 	addi	r2,r2,88
  804834:	e0bffd15 	stw	r2,-12(fp)
  804838:	e0bffe17 	ldw	r2,-8(fp)
  80483c:	10800917 	ldw	r2,36(r2)
  804840:	e0fffc17 	ldw	r3,-16(fp)
  804844:	18bf9b16 	blt	r3,r2,8046b4 <__alt_mem_epcs_flash_controller_0+0xff7fb6b4>
  804848:	e0bffe17 	ldw	r2,-8(fp)
  80484c:	10800817 	ldw	r2,32(r2)
  804850:	1021883a 	mov	r16,r2
  804854:	e0bffe17 	ldw	r2,-8(fp)
  804858:	10c05017 	ldw	r3,320(r2)
  80485c:	e0bffe17 	ldw	r2,-8(fp)
  804860:	10806b17 	ldw	r2,428(r2)
  804864:	100b883a 	mov	r5,r2
  804868:	1809883a 	mov	r4,r3
  80486c:	08305040 	call	830504 <__mulsi3>
  804870:	100b883a 	mov	r5,r2
  804874:	8009883a 	mov	r4,r16
  804878:	0813ea80 	call	813ea8 <jdiv_round_up>
  80487c:	1007883a 	mov	r3,r2
  804880:	e0bffe17 	ldw	r2,-8(fp)
  804884:	10c05315 	stw	r3,332(r2)
  804888:	e0bffe17 	ldw	r2,-8(fp)
  80488c:	10c05517 	ldw	r3,340(r2)
  804890:	e0bffe17 	ldw	r2,-8(fp)
  804894:	10800917 	ldw	r2,36(r2)
  804898:	18800316 	blt	r3,r2,8048a8 <initial_setup+0x8a0>
  80489c:	e0bffe17 	ldw	r2,-8(fp)
  8048a0:	10803817 	ldw	r2,224(r2)
  8048a4:	10000526 	beq	r2,zero,8048bc <initial_setup+0x8b4>
  8048a8:	e0bffe17 	ldw	r2,-8(fp)
  8048ac:	10807317 	ldw	r2,460(r2)
  8048b0:	00c00044 	movi	r3,1
  8048b4:	10c00415 	stw	r3,16(r2)
  8048b8:	00000306 	br	8048c8 <initial_setup+0x8c0>
  8048bc:	e0bffe17 	ldw	r2,-8(fp)
  8048c0:	10807317 	ldw	r2,460(r2)
  8048c4:	10000415 	stw	zero,16(r2)
  8048c8:	0001883a 	nop
  8048cc:	e6ffff04 	addi	sp,fp,-4
  8048d0:	dfc00217 	ldw	ra,8(sp)
  8048d4:	df000117 	ldw	fp,4(sp)
  8048d8:	dc000017 	ldw	r16,0(sp)
  8048dc:	dec00304 	addi	sp,sp,12
  8048e0:	f800283a 	ret

008048e4 <per_scan_setup>:
  8048e4:	defff804 	addi	sp,sp,-32
  8048e8:	dfc00715 	stw	ra,28(sp)
  8048ec:	df000615 	stw	fp,24(sp)
  8048f0:	dc000515 	stw	r16,20(sp)
  8048f4:	df000604 	addi	fp,sp,24
  8048f8:	e13ffe15 	stw	r4,-8(fp)
  8048fc:	e0bffe17 	ldw	r2,-8(fp)
  804900:	10805517 	ldw	r2,340(r2)
  804904:	10800058 	cmpnei	r2,r2,1
  804908:	1000311e 	bne	r2,zero,8049d0 <per_scan_setup+0xec>
  80490c:	e0bffe17 	ldw	r2,-8(fp)
  804910:	10805617 	ldw	r2,344(r2)
  804914:	e0bffd15 	stw	r2,-12(fp)
  804918:	e0bffd17 	ldw	r2,-12(fp)
  80491c:	10c00717 	ldw	r3,28(r2)
  804920:	e0bffe17 	ldw	r2,-8(fp)
  804924:	10c05a15 	stw	r3,360(r2)
  804928:	e0bffd17 	ldw	r2,-12(fp)
  80492c:	10c00817 	ldw	r3,32(r2)
  804930:	e0bffe17 	ldw	r2,-8(fp)
  804934:	10c05b15 	stw	r3,364(r2)
  804938:	e0bffd17 	ldw	r2,-12(fp)
  80493c:	00c00044 	movi	r3,1
  804940:	10c00e15 	stw	r3,56(r2)
  804944:	e0bffd17 	ldw	r2,-12(fp)
  804948:	00c00044 	movi	r3,1
  80494c:	10c00f15 	stw	r3,60(r2)
  804950:	e0bffd17 	ldw	r2,-12(fp)
  804954:	00c00044 	movi	r3,1
  804958:	10c01015 	stw	r3,64(r2)
  80495c:	e0bffd17 	ldw	r2,-12(fp)
  804960:	10c00917 	ldw	r3,36(r2)
  804964:	e0bffd17 	ldw	r2,-12(fp)
  804968:	10c01115 	stw	r3,68(r2)
  80496c:	e0bffd17 	ldw	r2,-12(fp)
  804970:	00c00044 	movi	r3,1
  804974:	10c01215 	stw	r3,72(r2)
  804978:	e0bffd17 	ldw	r2,-12(fp)
  80497c:	10c00817 	ldw	r3,32(r2)
  804980:	e0bffd17 	ldw	r2,-12(fp)
  804984:	10800317 	ldw	r2,12(r2)
  804988:	100b883a 	mov	r5,r2
  80498c:	1809883a 	mov	r4,r3
  804990:	08304ac0 	call	8304ac <__umodsi3>
  804994:	e0bffc15 	stw	r2,-16(fp)
  804998:	e0bffc17 	ldw	r2,-16(fp)
  80499c:	1000031e 	bne	r2,zero,8049ac <per_scan_setup+0xc8>
  8049a0:	e0bffd17 	ldw	r2,-12(fp)
  8049a4:	10800317 	ldw	r2,12(r2)
  8049a8:	e0bffc15 	stw	r2,-16(fp)
  8049ac:	e0bffd17 	ldw	r2,-12(fp)
  8049b0:	e0fffc17 	ldw	r3,-16(fp)
  8049b4:	10c01315 	stw	r3,76(r2)
  8049b8:	e0bffe17 	ldw	r2,-8(fp)
  8049bc:	00c00044 	movi	r3,1
  8049c0:	10c05c15 	stw	r3,368(r2)
  8049c4:	e0bffe17 	ldw	r2,-8(fp)
  8049c8:	10005d15 	stw	zero,372(r2)
  8049cc:	0000ab06 	br	804c7c <per_scan_setup+0x398>
  8049d0:	e0bffe17 	ldw	r2,-8(fp)
  8049d4:	10805517 	ldw	r2,340(r2)
  8049d8:	0080040e 	bge	zero,r2,8049ec <per_scan_setup+0x108>
  8049dc:	e0bffe17 	ldw	r2,-8(fp)
  8049e0:	10805517 	ldw	r2,340(r2)
  8049e4:	10800150 	cmplti	r2,r2,5
  8049e8:	1000121e 	bne	r2,zero,804a34 <per_scan_setup+0x150>
  8049ec:	e0bffe17 	ldw	r2,-8(fp)
  8049f0:	10800017 	ldw	r2,0(r2)
  8049f4:	00c006c4 	movi	r3,27
  8049f8:	10c00515 	stw	r3,20(r2)
  8049fc:	e0bffe17 	ldw	r2,-8(fp)
  804a00:	10800017 	ldw	r2,0(r2)
  804a04:	e0fffe17 	ldw	r3,-8(fp)
  804a08:	18c05517 	ldw	r3,340(r3)
  804a0c:	10c00615 	stw	r3,24(r2)
  804a10:	e0bffe17 	ldw	r2,-8(fp)
  804a14:	10800017 	ldw	r2,0(r2)
  804a18:	00c00104 	movi	r3,4
  804a1c:	10c00715 	stw	r3,28(r2)
  804a20:	e0bffe17 	ldw	r2,-8(fp)
  804a24:	10800017 	ldw	r2,0(r2)
  804a28:	10800017 	ldw	r2,0(r2)
  804a2c:	e13ffe17 	ldw	r4,-8(fp)
  804a30:	103ee83a 	callr	r2
  804a34:	e0bffe17 	ldw	r2,-8(fp)
  804a38:	10800717 	ldw	r2,28(r2)
  804a3c:	1021883a 	mov	r16,r2
  804a40:	e0bffe17 	ldw	r2,-8(fp)
  804a44:	10c04f17 	ldw	r3,316(r2)
  804a48:	e0bffe17 	ldw	r2,-8(fp)
  804a4c:	10806b17 	ldw	r2,428(r2)
  804a50:	100b883a 	mov	r5,r2
  804a54:	1809883a 	mov	r4,r3
  804a58:	08305040 	call	830504 <__mulsi3>
  804a5c:	100b883a 	mov	r5,r2
  804a60:	8009883a 	mov	r4,r16
  804a64:	0813ea80 	call	813ea8 <jdiv_round_up>
  804a68:	1007883a 	mov	r3,r2
  804a6c:	e0bffe17 	ldw	r2,-8(fp)
  804a70:	10c05a15 	stw	r3,360(r2)
  804a74:	e0bffe17 	ldw	r2,-8(fp)
  804a78:	10800817 	ldw	r2,32(r2)
  804a7c:	1021883a 	mov	r16,r2
  804a80:	e0bffe17 	ldw	r2,-8(fp)
  804a84:	10c05017 	ldw	r3,320(r2)
  804a88:	e0bffe17 	ldw	r2,-8(fp)
  804a8c:	10806b17 	ldw	r2,428(r2)
  804a90:	100b883a 	mov	r5,r2
  804a94:	1809883a 	mov	r4,r3
  804a98:	08305040 	call	830504 <__mulsi3>
  804a9c:	100b883a 	mov	r5,r2
  804aa0:	8009883a 	mov	r4,r16
  804aa4:	0813ea80 	call	813ea8 <jdiv_round_up>
  804aa8:	1007883a 	mov	r3,r2
  804aac:	e0bffe17 	ldw	r2,-8(fp)
  804ab0:	10c05b15 	stw	r3,364(r2)
  804ab4:	e0bffe17 	ldw	r2,-8(fp)
  804ab8:	10005c15 	stw	zero,368(r2)
  804abc:	e03ffa15 	stw	zero,-24(fp)
  804ac0:	00006a06 	br	804c6c <per_scan_setup+0x388>
  804ac4:	e0fffe17 	ldw	r3,-8(fp)
  804ac8:	e0bffa17 	ldw	r2,-24(fp)
  804acc:	10801584 	addi	r2,r2,86
  804ad0:	1085883a 	add	r2,r2,r2
  804ad4:	1085883a 	add	r2,r2,r2
  804ad8:	1885883a 	add	r2,r3,r2
  804adc:	10800017 	ldw	r2,0(r2)
  804ae0:	e0bffd15 	stw	r2,-12(fp)
  804ae4:	e0bffd17 	ldw	r2,-12(fp)
  804ae8:	10c00217 	ldw	r3,8(r2)
  804aec:	e0bffd17 	ldw	r2,-12(fp)
  804af0:	10c00e15 	stw	r3,56(r2)
  804af4:	e0bffd17 	ldw	r2,-12(fp)
  804af8:	10c00317 	ldw	r3,12(r2)
  804afc:	e0bffd17 	ldw	r2,-12(fp)
  804b00:	10c00f15 	stw	r3,60(r2)
  804b04:	e0bffd17 	ldw	r2,-12(fp)
  804b08:	10c00e17 	ldw	r3,56(r2)
  804b0c:	e0bffd17 	ldw	r2,-12(fp)
  804b10:	10800f17 	ldw	r2,60(r2)
  804b14:	100b883a 	mov	r5,r2
  804b18:	1809883a 	mov	r4,r3
  804b1c:	08305040 	call	830504 <__mulsi3>
  804b20:	1007883a 	mov	r3,r2
  804b24:	e0bffd17 	ldw	r2,-12(fp)
  804b28:	10c01015 	stw	r3,64(r2)
  804b2c:	e0bffd17 	ldw	r2,-12(fp)
  804b30:	10c00e17 	ldw	r3,56(r2)
  804b34:	e0bffd17 	ldw	r2,-12(fp)
  804b38:	10800917 	ldw	r2,36(r2)
  804b3c:	100b883a 	mov	r5,r2
  804b40:	1809883a 	mov	r4,r3
  804b44:	08305040 	call	830504 <__mulsi3>
  804b48:	1007883a 	mov	r3,r2
  804b4c:	e0bffd17 	ldw	r2,-12(fp)
  804b50:	10c01115 	stw	r3,68(r2)
  804b54:	e0bffd17 	ldw	r2,-12(fp)
  804b58:	10c00717 	ldw	r3,28(r2)
  804b5c:	e0bffd17 	ldw	r2,-12(fp)
  804b60:	10800e17 	ldw	r2,56(r2)
  804b64:	100b883a 	mov	r5,r2
  804b68:	1809883a 	mov	r4,r3
  804b6c:	08304ac0 	call	8304ac <__umodsi3>
  804b70:	e0bffc15 	stw	r2,-16(fp)
  804b74:	e0bffc17 	ldw	r2,-16(fp)
  804b78:	1000031e 	bne	r2,zero,804b88 <per_scan_setup+0x2a4>
  804b7c:	e0bffd17 	ldw	r2,-12(fp)
  804b80:	10800e17 	ldw	r2,56(r2)
  804b84:	e0bffc15 	stw	r2,-16(fp)
  804b88:	e0bffd17 	ldw	r2,-12(fp)
  804b8c:	e0fffc17 	ldw	r3,-16(fp)
  804b90:	10c01215 	stw	r3,72(r2)
  804b94:	e0bffd17 	ldw	r2,-12(fp)
  804b98:	10c00817 	ldw	r3,32(r2)
  804b9c:	e0bffd17 	ldw	r2,-12(fp)
  804ba0:	10800f17 	ldw	r2,60(r2)
  804ba4:	100b883a 	mov	r5,r2
  804ba8:	1809883a 	mov	r4,r3
  804bac:	08304ac0 	call	8304ac <__umodsi3>
  804bb0:	e0bffc15 	stw	r2,-16(fp)
  804bb4:	e0bffc17 	ldw	r2,-16(fp)
  804bb8:	1000031e 	bne	r2,zero,804bc8 <per_scan_setup+0x2e4>
  804bbc:	e0bffd17 	ldw	r2,-12(fp)
  804bc0:	10800f17 	ldw	r2,60(r2)
  804bc4:	e0bffc15 	stw	r2,-16(fp)
  804bc8:	e0bffd17 	ldw	r2,-12(fp)
  804bcc:	e0fffc17 	ldw	r3,-16(fp)
  804bd0:	10c01315 	stw	r3,76(r2)
  804bd4:	e0bffd17 	ldw	r2,-12(fp)
  804bd8:	10801017 	ldw	r2,64(r2)
  804bdc:	e0bffb15 	stw	r2,-20(fp)
  804be0:	e0bffe17 	ldw	r2,-8(fp)
  804be4:	10c05c17 	ldw	r3,368(r2)
  804be8:	e0bffb17 	ldw	r2,-20(fp)
  804bec:	1885883a 	add	r2,r3,r2
  804bf0:	108002d0 	cmplti	r2,r2,11
  804bf4:	1000161e 	bne	r2,zero,804c50 <per_scan_setup+0x36c>
  804bf8:	e0bffe17 	ldw	r2,-8(fp)
  804bfc:	10800017 	ldw	r2,0(r2)
  804c00:	00c00384 	movi	r3,14
  804c04:	10c00515 	stw	r3,20(r2)
  804c08:	e0bffe17 	ldw	r2,-8(fp)
  804c0c:	10800017 	ldw	r2,0(r2)
  804c10:	10800017 	ldw	r2,0(r2)
  804c14:	e13ffe17 	ldw	r4,-8(fp)
  804c18:	103ee83a 	callr	r2
  804c1c:	00000c06 	br	804c50 <per_scan_setup+0x36c>
  804c20:	e0bffe17 	ldw	r2,-8(fp)
  804c24:	10805c17 	ldw	r2,368(r2)
  804c28:	11000044 	addi	r4,r2,1
  804c2c:	e0fffe17 	ldw	r3,-8(fp)
  804c30:	19005c15 	stw	r4,368(r3)
  804c34:	e0fffe17 	ldw	r3,-8(fp)
  804c38:	10801744 	addi	r2,r2,93
  804c3c:	1085883a 	add	r2,r2,r2
  804c40:	1085883a 	add	r2,r2,r2
  804c44:	1885883a 	add	r2,r3,r2
  804c48:	e0fffa17 	ldw	r3,-24(fp)
  804c4c:	10c00015 	stw	r3,0(r2)
  804c50:	e0bffb17 	ldw	r2,-20(fp)
  804c54:	10ffffc4 	addi	r3,r2,-1
  804c58:	e0fffb15 	stw	r3,-20(fp)
  804c5c:	00bff016 	blt	zero,r2,804c20 <__alt_mem_epcs_flash_controller_0+0xff7fbc20>
  804c60:	e0bffa17 	ldw	r2,-24(fp)
  804c64:	10800044 	addi	r2,r2,1
  804c68:	e0bffa15 	stw	r2,-24(fp)
  804c6c:	e0bffe17 	ldw	r2,-8(fp)
  804c70:	10805517 	ldw	r2,340(r2)
  804c74:	e0fffa17 	ldw	r3,-24(fp)
  804c78:	18bf9216 	blt	r3,r2,804ac4 <__alt_mem_epcs_flash_controller_0+0xff7fbac4>
  804c7c:	0001883a 	nop
  804c80:	e6ffff04 	addi	sp,fp,-4
  804c84:	dfc00217 	ldw	ra,8(sp)
  804c88:	df000117 	ldw	fp,4(sp)
  804c8c:	dc000017 	ldw	r16,0(sp)
  804c90:	dec00304 	addi	sp,sp,12
  804c94:	f800283a 	ret

00804c98 <latch_quant_tables>:
  804c98:	defff904 	addi	sp,sp,-28
  804c9c:	dfc00615 	stw	ra,24(sp)
  804ca0:	df000515 	stw	fp,20(sp)
  804ca4:	df000504 	addi	fp,sp,20
  804ca8:	e13fff15 	stw	r4,-4(fp)
  804cac:	e03ffb15 	stw	zero,-20(fp)
  804cb0:	00004306 	br	804dc0 <latch_quant_tables+0x128>
  804cb4:	e0ffff17 	ldw	r3,-4(fp)
  804cb8:	e0bffb17 	ldw	r2,-20(fp)
  804cbc:	10801584 	addi	r2,r2,86
  804cc0:	1085883a 	add	r2,r2,r2
  804cc4:	1085883a 	add	r2,r2,r2
  804cc8:	1885883a 	add	r2,r3,r2
  804ccc:	10800017 	ldw	r2,0(r2)
  804cd0:	e0bffc15 	stw	r2,-16(fp)
  804cd4:	e0bffc17 	ldw	r2,-16(fp)
  804cd8:	10801417 	ldw	r2,80(r2)
  804cdc:	1000341e 	bne	r2,zero,804db0 <latch_quant_tables+0x118>
  804ce0:	e0bffc17 	ldw	r2,-16(fp)
  804ce4:	10800417 	ldw	r2,16(r2)
  804ce8:	e0bffd15 	stw	r2,-12(fp)
  804cec:	e0bffd17 	ldw	r2,-12(fp)
  804cf0:	10000b16 	blt	r2,zero,804d20 <latch_quant_tables+0x88>
  804cf4:	e0bffd17 	ldw	r2,-12(fp)
  804cf8:	10800108 	cmpgei	r2,r2,4
  804cfc:	1000081e 	bne	r2,zero,804d20 <latch_quant_tables+0x88>
  804d00:	e0ffff17 	ldw	r3,-4(fp)
  804d04:	e0bffd17 	ldw	r2,-12(fp)
  804d08:	10800a44 	addi	r2,r2,41
  804d0c:	1085883a 	add	r2,r2,r2
  804d10:	1085883a 	add	r2,r2,r2
  804d14:	1885883a 	add	r2,r3,r2
  804d18:	10800017 	ldw	r2,0(r2)
  804d1c:	10000d1e 	bne	r2,zero,804d54 <latch_quant_tables+0xbc>
  804d20:	e0bfff17 	ldw	r2,-4(fp)
  804d24:	10800017 	ldw	r2,0(r2)
  804d28:	00c00d84 	movi	r3,54
  804d2c:	10c00515 	stw	r3,20(r2)
  804d30:	e0bfff17 	ldw	r2,-4(fp)
  804d34:	10800017 	ldw	r2,0(r2)
  804d38:	e0fffd17 	ldw	r3,-12(fp)
  804d3c:	10c00615 	stw	r3,24(r2)
  804d40:	e0bfff17 	ldw	r2,-4(fp)
  804d44:	10800017 	ldw	r2,0(r2)
  804d48:	10800017 	ldw	r2,0(r2)
  804d4c:	e13fff17 	ldw	r4,-4(fp)
  804d50:	103ee83a 	callr	r2
  804d54:	e0bfff17 	ldw	r2,-4(fp)
  804d58:	10800117 	ldw	r2,4(r2)
  804d5c:	10800017 	ldw	r2,0(r2)
  804d60:	01802104 	movi	r6,132
  804d64:	01400044 	movi	r5,1
  804d68:	e13fff17 	ldw	r4,-4(fp)
  804d6c:	103ee83a 	callr	r2
  804d70:	e0bffe15 	stw	r2,-8(fp)
  804d74:	e0ffff17 	ldw	r3,-4(fp)
  804d78:	e0bffd17 	ldw	r2,-12(fp)
  804d7c:	10800a44 	addi	r2,r2,41
  804d80:	1085883a 	add	r2,r2,r2
  804d84:	1085883a 	add	r2,r2,r2
  804d88:	1885883a 	add	r2,r3,r2
  804d8c:	10800017 	ldw	r2,0(r2)
  804d90:	01802104 	movi	r6,132
  804d94:	100b883a 	mov	r5,r2
  804d98:	e13ffe17 	ldw	r4,-8(fp)
  804d9c:	08341500 	call	834150 <memcpy>
  804da0:	e0bffc17 	ldw	r2,-16(fp)
  804da4:	e0fffe17 	ldw	r3,-8(fp)
  804da8:	10c01415 	stw	r3,80(r2)
  804dac:	00000106 	br	804db4 <latch_quant_tables+0x11c>
  804db0:	0001883a 	nop
  804db4:	e0bffb17 	ldw	r2,-20(fp)
  804db8:	10800044 	addi	r2,r2,1
  804dbc:	e0bffb15 	stw	r2,-20(fp)
  804dc0:	e0bfff17 	ldw	r2,-4(fp)
  804dc4:	10805517 	ldw	r2,340(r2)
  804dc8:	e0fffb17 	ldw	r3,-20(fp)
  804dcc:	18bfb916 	blt	r3,r2,804cb4 <__alt_mem_epcs_flash_controller_0+0xff7fbcb4>
  804dd0:	0001883a 	nop
  804dd4:	e037883a 	mov	sp,fp
  804dd8:	dfc00117 	ldw	ra,4(sp)
  804ddc:	df000017 	ldw	fp,0(sp)
  804de0:	dec00204 	addi	sp,sp,8
  804de4:	f800283a 	ret

00804de8 <start_input_pass>:
  804de8:	defffd04 	addi	sp,sp,-12
  804dec:	dfc00215 	stw	ra,8(sp)
  804df0:	df000115 	stw	fp,4(sp)
  804df4:	df000104 	addi	fp,sp,4
  804df8:	e13fff15 	stw	r4,-4(fp)
  804dfc:	e13fff17 	ldw	r4,-4(fp)
  804e00:	08048e40 	call	8048e4 <per_scan_setup>
  804e04:	e13fff17 	ldw	r4,-4(fp)
  804e08:	0804c980 	call	804c98 <latch_quant_tables>
  804e0c:	e0bfff17 	ldw	r2,-4(fp)
  804e10:	10807517 	ldw	r2,468(r2)
  804e14:	10800017 	ldw	r2,0(r2)
  804e18:	e13fff17 	ldw	r4,-4(fp)
  804e1c:	103ee83a 	callr	r2
  804e20:	e0bfff17 	ldw	r2,-4(fp)
  804e24:	10807117 	ldw	r2,452(r2)
  804e28:	10800017 	ldw	r2,0(r2)
  804e2c:	e13fff17 	ldw	r4,-4(fp)
  804e30:	103ee83a 	callr	r2
  804e34:	e0bfff17 	ldw	r2,-4(fp)
  804e38:	10807317 	ldw	r2,460(r2)
  804e3c:	e0ffff17 	ldw	r3,-4(fp)
  804e40:	18c07117 	ldw	r3,452(r3)
  804e44:	18c00117 	ldw	r3,4(r3)
  804e48:	10c00015 	stw	r3,0(r2)
  804e4c:	0001883a 	nop
  804e50:	e037883a 	mov	sp,fp
  804e54:	dfc00117 	ldw	ra,4(sp)
  804e58:	df000017 	ldw	fp,0(sp)
  804e5c:	dec00204 	addi	sp,sp,8
  804e60:	f800283a 	ret

00804e64 <finish_input_pass>:
  804e64:	defffd04 	addi	sp,sp,-12
  804e68:	dfc00215 	stw	ra,8(sp)
  804e6c:	df000115 	stw	fp,4(sp)
  804e70:	df000104 	addi	fp,sp,4
  804e74:	e13fff15 	stw	r4,-4(fp)
  804e78:	e0bfff17 	ldw	r2,-4(fp)
  804e7c:	10807517 	ldw	r2,468(r2)
  804e80:	10800217 	ldw	r2,8(r2)
  804e84:	e13fff17 	ldw	r4,-4(fp)
  804e88:	103ee83a 	callr	r2
  804e8c:	e0bfff17 	ldw	r2,-4(fp)
  804e90:	10c07317 	ldw	r3,460(r2)
  804e94:	00802034 	movhi	r2,128
  804e98:	1093ae04 	addi	r2,r2,20152
  804e9c:	18800015 	stw	r2,0(r3)
  804ea0:	0001883a 	nop
  804ea4:	e037883a 	mov	sp,fp
  804ea8:	dfc00117 	ldw	ra,4(sp)
  804eac:	df000017 	ldw	fp,0(sp)
  804eb0:	dec00204 	addi	sp,sp,8
  804eb4:	f800283a 	ret

00804eb8 <consume_markers>:
  804eb8:	defffb04 	addi	sp,sp,-20
  804ebc:	dfc00415 	stw	ra,16(sp)
  804ec0:	df000315 	stw	fp,12(sp)
  804ec4:	df000304 	addi	fp,sp,12
  804ec8:	e13fff15 	stw	r4,-4(fp)
  804ecc:	e0bfff17 	ldw	r2,-4(fp)
  804ed0:	10807317 	ldw	r2,460(r2)
  804ed4:	e0bffd15 	stw	r2,-12(fp)
  804ed8:	e0bffd17 	ldw	r2,-12(fp)
  804edc:	10800517 	ldw	r2,20(r2)
  804ee0:	10000226 	beq	r2,zero,804eec <consume_markers+0x34>
  804ee4:	00800084 	movi	r2,2
  804ee8:	00005806 	br	80504c <consume_markers+0x194>
  804eec:	e0bfff17 	ldw	r2,-4(fp)
  804ef0:	10807417 	ldw	r2,464(r2)
  804ef4:	10800117 	ldw	r2,4(r2)
  804ef8:	e13fff17 	ldw	r4,-4(fp)
  804efc:	103ee83a 	callr	r2
  804f00:	e0bffe15 	stw	r2,-8(fp)
  804f04:	e0bffe17 	ldw	r2,-8(fp)
  804f08:	10c00060 	cmpeqi	r3,r2,1
  804f0c:	1800041e 	bne	r3,zero,804f20 <consume_markers+0x68>
  804f10:	10c000a0 	cmpeqi	r3,r2,2
  804f14:	1800281e 	bne	r3,zero,804fb8 <consume_markers+0x100>
  804f18:	10004626 	beq	r2,zero,805034 <consume_markers+0x17c>
  804f1c:	00004706 	br	80503c <consume_markers+0x184>
  804f20:	e0bffd17 	ldw	r2,-12(fp)
  804f24:	10800617 	ldw	r2,24(r2)
  804f28:	10001026 	beq	r2,zero,804f6c <consume_markers+0xb4>
  804f2c:	e0bffd17 	ldw	r2,-12(fp)
  804f30:	10800617 	ldw	r2,24(r2)
  804f34:	10800058 	cmpnei	r2,r2,1
  804f38:	1000021e 	bne	r2,zero,804f44 <consume_markers+0x8c>
  804f3c:	e13fff17 	ldw	r4,-4(fp)
  804f40:	08040080 	call	804008 <initial_setup>
  804f44:	e0bfff17 	ldw	r2,-4(fp)
  804f48:	10805517 	ldw	r2,340(r2)
  804f4c:	1000041e 	bne	r2,zero,804f60 <consume_markers+0xa8>
  804f50:	e0bffd17 	ldw	r2,-12(fp)
  804f54:	00c00084 	movi	r3,2
  804f58:	10c00615 	stw	r3,24(r2)
  804f5c:	00003a06 	br	805048 <consume_markers+0x190>
  804f60:	e0bffd17 	ldw	r2,-12(fp)
  804f64:	10000615 	stw	zero,24(r2)
  804f68:	00001106 	br	804fb0 <consume_markers+0xf8>
  804f6c:	e0bffd17 	ldw	r2,-12(fp)
  804f70:	10800417 	ldw	r2,16(r2)
  804f74:	1000091e 	bne	r2,zero,804f9c <consume_markers+0xe4>
  804f78:	e0bfff17 	ldw	r2,-4(fp)
  804f7c:	10800017 	ldw	r2,0(r2)
  804f80:	00c00904 	movi	r3,36
  804f84:	10c00515 	stw	r3,20(r2)
  804f88:	e0bfff17 	ldw	r2,-4(fp)
  804f8c:	10800017 	ldw	r2,0(r2)
  804f90:	10800017 	ldw	r2,0(r2)
  804f94:	e13fff17 	ldw	r4,-4(fp)
  804f98:	103ee83a 	callr	r2
  804f9c:	e0bfff17 	ldw	r2,-4(fp)
  804fa0:	10805517 	ldw	r2,340(r2)
  804fa4:	10002726 	beq	r2,zero,805044 <consume_markers+0x18c>
  804fa8:	e13fff17 	ldw	r4,-4(fp)
  804fac:	0804de80 	call	804de8 <start_input_pass>
  804fb0:	e0bffe17 	ldw	r2,-8(fp)
  804fb4:	00002506 	br	80504c <consume_markers+0x194>
  804fb8:	e0bffd17 	ldw	r2,-12(fp)
  804fbc:	00c00044 	movi	r3,1
  804fc0:	10c00515 	stw	r3,20(r2)
  804fc4:	e0bffd17 	ldw	r2,-12(fp)
  804fc8:	10800617 	ldw	r2,24(r2)
  804fcc:	10000e26 	beq	r2,zero,805008 <consume_markers+0x150>
  804fd0:	e0bfff17 	ldw	r2,-4(fp)
  804fd4:	10807417 	ldw	r2,464(r2)
  804fd8:	10800417 	ldw	r2,16(r2)
  804fdc:	10001326 	beq	r2,zero,80502c <consume_markers+0x174>
  804fe0:	e0bfff17 	ldw	r2,-4(fp)
  804fe4:	10800017 	ldw	r2,0(r2)
  804fe8:	00c00f84 	movi	r3,62
  804fec:	10c00515 	stw	r3,20(r2)
  804ff0:	e0bfff17 	ldw	r2,-4(fp)
  804ff4:	10800017 	ldw	r2,0(r2)
  804ff8:	10800017 	ldw	r2,0(r2)
  804ffc:	e13fff17 	ldw	r4,-4(fp)
  805000:	103ee83a 	callr	r2
  805004:	00000906 	br	80502c <consume_markers+0x174>
  805008:	e0bfff17 	ldw	r2,-4(fp)
  80500c:	10802617 	ldw	r2,152(r2)
  805010:	e0ffff17 	ldw	r3,-4(fp)
  805014:	18c02417 	ldw	r3,144(r3)
  805018:	1880040e 	bge	r3,r2,80502c <consume_markers+0x174>
  80501c:	e0bfff17 	ldw	r2,-4(fp)
  805020:	10c02417 	ldw	r3,144(r2)
  805024:	e0bfff17 	ldw	r2,-4(fp)
  805028:	10c02615 	stw	r3,152(r2)
  80502c:	e0bffe17 	ldw	r2,-8(fp)
  805030:	00000606 	br	80504c <consume_markers+0x194>
  805034:	e0bffe17 	ldw	r2,-8(fp)
  805038:	00000406 	br	80504c <consume_markers+0x194>
  80503c:	e0bffe17 	ldw	r2,-8(fp)
  805040:	00000206 	br	80504c <consume_markers+0x194>
  805044:	0001883a 	nop
  805048:	003fa806 	br	804eec <__alt_mem_epcs_flash_controller_0+0xff7fbeec>
  80504c:	e037883a 	mov	sp,fp
  805050:	dfc00117 	ldw	ra,4(sp)
  805054:	df000017 	ldw	fp,0(sp)
  805058:	dec00204 	addi	sp,sp,8
  80505c:	f800283a 	ret

00805060 <reset_input_controller>:
  805060:	defffc04 	addi	sp,sp,-16
  805064:	dfc00315 	stw	ra,12(sp)
  805068:	df000215 	stw	fp,8(sp)
  80506c:	df000204 	addi	fp,sp,8
  805070:	e13fff15 	stw	r4,-4(fp)
  805074:	e0bfff17 	ldw	r2,-4(fp)
  805078:	10807317 	ldw	r2,460(r2)
  80507c:	e0bffe15 	stw	r2,-8(fp)
  805080:	e0fffe17 	ldw	r3,-8(fp)
  805084:	00802034 	movhi	r2,128
  805088:	1093ae04 	addi	r2,r2,20152
  80508c:	18800015 	stw	r2,0(r3)
  805090:	e0bffe17 	ldw	r2,-8(fp)
  805094:	10000415 	stw	zero,16(r2)
  805098:	e0bffe17 	ldw	r2,-8(fp)
  80509c:	10000515 	stw	zero,20(r2)
  8050a0:	e0bffe17 	ldw	r2,-8(fp)
  8050a4:	00c00044 	movi	r3,1
  8050a8:	10c00615 	stw	r3,24(r2)
  8050ac:	e0bfff17 	ldw	r2,-4(fp)
  8050b0:	10800017 	ldw	r2,0(r2)
  8050b4:	10800417 	ldw	r2,16(r2)
  8050b8:	e13fff17 	ldw	r4,-4(fp)
  8050bc:	103ee83a 	callr	r2
  8050c0:	e0bfff17 	ldw	r2,-4(fp)
  8050c4:	10807417 	ldw	r2,464(r2)
  8050c8:	10800017 	ldw	r2,0(r2)
  8050cc:	e13fff17 	ldw	r4,-4(fp)
  8050d0:	103ee83a 	callr	r2
  8050d4:	e0bfff17 	ldw	r2,-4(fp)
  8050d8:	10002815 	stw	zero,160(r2)
  8050dc:	0001883a 	nop
  8050e0:	e037883a 	mov	sp,fp
  8050e4:	dfc00117 	ldw	ra,4(sp)
  8050e8:	df000017 	ldw	fp,0(sp)
  8050ec:	dec00204 	addi	sp,sp,8
  8050f0:	f800283a 	ret

008050f4 <jinit_input_controller>:
  8050f4:	defffc04 	addi	sp,sp,-16
  8050f8:	dfc00315 	stw	ra,12(sp)
  8050fc:	df000215 	stw	fp,8(sp)
  805100:	df000204 	addi	fp,sp,8
  805104:	e13fff15 	stw	r4,-4(fp)
  805108:	e0bfff17 	ldw	r2,-4(fp)
  80510c:	10800117 	ldw	r2,4(r2)
  805110:	10800017 	ldw	r2,0(r2)
  805114:	01800704 	movi	r6,28
  805118:	000b883a 	mov	r5,zero
  80511c:	e13fff17 	ldw	r4,-4(fp)
  805120:	103ee83a 	callr	r2
  805124:	e0bffe15 	stw	r2,-8(fp)
  805128:	e0fffe17 	ldw	r3,-8(fp)
  80512c:	e0bfff17 	ldw	r2,-4(fp)
  805130:	10c07315 	stw	r3,460(r2)
  805134:	e0fffe17 	ldw	r3,-8(fp)
  805138:	00802034 	movhi	r2,128
  80513c:	1093ae04 	addi	r2,r2,20152
  805140:	18800015 	stw	r2,0(r3)
  805144:	e0fffe17 	ldw	r3,-8(fp)
  805148:	00802034 	movhi	r2,128
  80514c:	10941804 	addi	r2,r2,20576
  805150:	18800115 	stw	r2,4(r3)
  805154:	e0fffe17 	ldw	r3,-8(fp)
  805158:	00802034 	movhi	r2,128
  80515c:	10937a04 	addi	r2,r2,19944
  805160:	18800215 	stw	r2,8(r3)
  805164:	e0fffe17 	ldw	r3,-8(fp)
  805168:	00802034 	movhi	r2,128
  80516c:	10939904 	addi	r2,r2,20068
  805170:	18800315 	stw	r2,12(r3)
  805174:	e0bffe17 	ldw	r2,-8(fp)
  805178:	10000415 	stw	zero,16(r2)
  80517c:	e0bffe17 	ldw	r2,-8(fp)
  805180:	10000515 	stw	zero,20(r2)
  805184:	e0bffe17 	ldw	r2,-8(fp)
  805188:	00c00044 	movi	r3,1
  80518c:	10c00615 	stw	r3,24(r2)
  805190:	0001883a 	nop
  805194:	e037883a 	mov	sp,fp
  805198:	dfc00117 	ldw	ra,4(sp)
  80519c:	df000017 	ldw	fp,0(sp)
  8051a0:	dec00204 	addi	sp,sp,8
  8051a4:	f800283a 	ret

008051a8 <get_soi>:
  8051a8:	defffc04 	addi	sp,sp,-16
  8051ac:	dfc00315 	stw	ra,12(sp)
  8051b0:	df000215 	stw	fp,8(sp)
  8051b4:	df000204 	addi	fp,sp,8
  8051b8:	e13fff15 	stw	r4,-4(fp)
  8051bc:	e0bfff17 	ldw	r2,-4(fp)
  8051c0:	10800017 	ldw	r2,0(r2)
  8051c4:	00c01a04 	movi	r3,104
  8051c8:	10c00515 	stw	r3,20(r2)
  8051cc:	e0bfff17 	ldw	r2,-4(fp)
  8051d0:	10800017 	ldw	r2,0(r2)
  8051d4:	10800117 	ldw	r2,4(r2)
  8051d8:	01400044 	movi	r5,1
  8051dc:	e13fff17 	ldw	r4,-4(fp)
  8051e0:	103ee83a 	callr	r2
  8051e4:	e0bfff17 	ldw	r2,-4(fp)
  8051e8:	10807417 	ldw	r2,464(r2)
  8051ec:	10800317 	ldw	r2,12(r2)
  8051f0:	10000926 	beq	r2,zero,805218 <get_soi+0x70>
  8051f4:	e0bfff17 	ldw	r2,-4(fp)
  8051f8:	10800017 	ldw	r2,0(r2)
  8051fc:	00c01004 	movi	r3,64
  805200:	10c00515 	stw	r3,20(r2)
  805204:	e0bfff17 	ldw	r2,-4(fp)
  805208:	10800017 	ldw	r2,0(r2)
  80520c:	10800017 	ldw	r2,0(r2)
  805210:	e13fff17 	ldw	r4,-4(fp)
  805214:	103ee83a 	callr	r2
  805218:	e03ffe15 	stw	zero,-8(fp)
  80521c:	00001406 	br	805270 <get_soi+0xc8>
  805220:	e0ffff17 	ldw	r3,-4(fp)
  805224:	e0bffe17 	ldw	r2,-8(fp)
  805228:	1885883a 	add	r2,r3,r2
  80522c:	10803a04 	addi	r2,r2,232
  805230:	10000005 	stb	zero,0(r2)
  805234:	e0ffff17 	ldw	r3,-4(fp)
  805238:	e0bffe17 	ldw	r2,-8(fp)
  80523c:	1885883a 	add	r2,r3,r2
  805240:	10803e04 	addi	r2,r2,248
  805244:	00c00044 	movi	r3,1
  805248:	10c00005 	stb	r3,0(r2)
  80524c:	e0ffff17 	ldw	r3,-4(fp)
  805250:	e0bffe17 	ldw	r2,-8(fp)
  805254:	1885883a 	add	r2,r3,r2
  805258:	10804204 	addi	r2,r2,264
  80525c:	00c00144 	movi	r3,5
  805260:	10c00005 	stb	r3,0(r2)
  805264:	e0bffe17 	ldw	r2,-8(fp)
  805268:	10800044 	addi	r2,r2,1
  80526c:	e0bffe15 	stw	r2,-8(fp)
  805270:	e0bffe17 	ldw	r2,-8(fp)
  805274:	10800410 	cmplti	r2,r2,16
  805278:	103fe91e 	bne	r2,zero,805220 <__alt_mem_epcs_flash_controller_0+0xff7fc220>
  80527c:	e0bfff17 	ldw	r2,-4(fp)
  805280:	10004615 	stw	zero,280(r2)
  805284:	e0bfff17 	ldw	r2,-4(fp)
  805288:	10000a15 	stw	zero,40(r2)
  80528c:	e0bfff17 	ldw	r2,-4(fp)
  805290:	10004c15 	stw	zero,304(r2)
  805294:	e0bfff17 	ldw	r2,-4(fp)
  805298:	10004d15 	stw	zero,308(r2)
  80529c:	e0bfff17 	ldw	r2,-4(fp)
  8052a0:	10004715 	stw	zero,284(r2)
  8052a4:	e0bfff17 	ldw	r2,-4(fp)
  8052a8:	00c00044 	movi	r3,1
  8052ac:	10c04805 	stb	r3,288(r2)
  8052b0:	e0bfff17 	ldw	r2,-4(fp)
  8052b4:	00c00044 	movi	r3,1
  8052b8:	10c04845 	stb	r3,289(r2)
  8052bc:	e0bfff17 	ldw	r2,-4(fp)
  8052c0:	10004885 	stb	zero,290(r2)
  8052c4:	e0bfff17 	ldw	r2,-4(fp)
  8052c8:	00c00044 	movi	r3,1
  8052cc:	10c0490d 	sth	r3,292(r2)
  8052d0:	e0bfff17 	ldw	r2,-4(fp)
  8052d4:	00c00044 	movi	r3,1
  8052d8:	10c0498d 	sth	r3,294(r2)
  8052dc:	e0bfff17 	ldw	r2,-4(fp)
  8052e0:	10004a15 	stw	zero,296(r2)
  8052e4:	e0bfff17 	ldw	r2,-4(fp)
  8052e8:	10004b05 	stb	zero,300(r2)
  8052ec:	e0bfff17 	ldw	r2,-4(fp)
  8052f0:	10807417 	ldw	r2,464(r2)
  8052f4:	00c00044 	movi	r3,1
  8052f8:	10c00315 	stw	r3,12(r2)
  8052fc:	00800044 	movi	r2,1
  805300:	e037883a 	mov	sp,fp
  805304:	dfc00117 	ldw	ra,4(sp)
  805308:	df000017 	ldw	fp,0(sp)
  80530c:	dec00204 	addi	sp,sp,8
  805310:	f800283a 	ret

00805314 <get_sof>:
  805314:	deffef04 	addi	sp,sp,-68
  805318:	dfc01015 	stw	ra,64(sp)
  80531c:	df000f15 	stw	fp,60(sp)
  805320:	dc000e15 	stw	r16,56(sp)
  805324:	df000f04 	addi	fp,sp,60
  805328:	e13ffb15 	stw	r4,-20(fp)
  80532c:	e17ffc15 	stw	r5,-16(fp)
  805330:	e1bffd15 	stw	r6,-12(fp)
  805334:	e1fffe15 	stw	r7,-8(fp)
  805338:	e0bffb17 	ldw	r2,-20(fp)
  80533c:	10800617 	ldw	r2,24(r2)
  805340:	e0bff715 	stw	r2,-36(fp)
  805344:	e0bff717 	ldw	r2,-36(fp)
  805348:	10800017 	ldw	r2,0(r2)
  80534c:	e0bff515 	stw	r2,-44(fp)
  805350:	e0bff717 	ldw	r2,-36(fp)
  805354:	10800117 	ldw	r2,4(r2)
  805358:	e0bff615 	stw	r2,-40(fp)
  80535c:	e0bffb17 	ldw	r2,-20(fp)
  805360:	e0fffc17 	ldw	r3,-16(fp)
  805364:	10c03715 	stw	r3,220(r2)
  805368:	e0bffb17 	ldw	r2,-20(fp)
  80536c:	e0fffd17 	ldw	r3,-12(fp)
  805370:	10c03815 	stw	r3,224(r2)
  805374:	e0bffb17 	ldw	r2,-20(fp)
  805378:	e0fffe17 	ldw	r3,-8(fp)
  80537c:	10c03915 	stw	r3,228(r2)
  805380:	e0bff617 	ldw	r2,-40(fp)
  805384:	10000d1e 	bne	r2,zero,8053bc <get_sof+0xa8>
  805388:	e0bff717 	ldw	r2,-36(fp)
  80538c:	10800317 	ldw	r2,12(r2)
  805390:	e13ffb17 	ldw	r4,-20(fp)
  805394:	103ee83a 	callr	r2
  805398:	1000021e 	bne	r2,zero,8053a4 <get_sof+0x90>
  80539c:	0005883a 	mov	r2,zero
  8053a0:	0001ec06 	br	805b54 <get_sof+0x840>
  8053a4:	e0bff717 	ldw	r2,-36(fp)
  8053a8:	10800017 	ldw	r2,0(r2)
  8053ac:	e0bff515 	stw	r2,-44(fp)
  8053b0:	e0bff717 	ldw	r2,-36(fp)
  8053b4:	10800117 	ldw	r2,4(r2)
  8053b8:	e0bff615 	stw	r2,-40(fp)
  8053bc:	e0bff617 	ldw	r2,-40(fp)
  8053c0:	10bfffc4 	addi	r2,r2,-1
  8053c4:	e0bff615 	stw	r2,-40(fp)
  8053c8:	e0bff517 	ldw	r2,-44(fp)
  8053cc:	10c00044 	addi	r3,r2,1
  8053d0:	e0fff515 	stw	r3,-44(fp)
  8053d4:	10800003 	ldbu	r2,0(r2)
  8053d8:	10803fcc 	andi	r2,r2,255
  8053dc:	1004923a 	slli	r2,r2,8
  8053e0:	e0bff815 	stw	r2,-32(fp)
  8053e4:	e0bff617 	ldw	r2,-40(fp)
  8053e8:	10000d1e 	bne	r2,zero,805420 <get_sof+0x10c>
  8053ec:	e0bff717 	ldw	r2,-36(fp)
  8053f0:	10800317 	ldw	r2,12(r2)
  8053f4:	e13ffb17 	ldw	r4,-20(fp)
  8053f8:	103ee83a 	callr	r2
  8053fc:	1000021e 	bne	r2,zero,805408 <get_sof+0xf4>
  805400:	0005883a 	mov	r2,zero
  805404:	0001d306 	br	805b54 <get_sof+0x840>
  805408:	e0bff717 	ldw	r2,-36(fp)
  80540c:	10800017 	ldw	r2,0(r2)
  805410:	e0bff515 	stw	r2,-44(fp)
  805414:	e0bff717 	ldw	r2,-36(fp)
  805418:	10800117 	ldw	r2,4(r2)
  80541c:	e0bff615 	stw	r2,-40(fp)
  805420:	e0bff617 	ldw	r2,-40(fp)
  805424:	10bfffc4 	addi	r2,r2,-1
  805428:	e0bff615 	stw	r2,-40(fp)
  80542c:	e0bff517 	ldw	r2,-44(fp)
  805430:	10c00044 	addi	r3,r2,1
  805434:	e0fff515 	stw	r3,-44(fp)
  805438:	10800003 	ldbu	r2,0(r2)
  80543c:	10803fcc 	andi	r2,r2,255
  805440:	e0fff817 	ldw	r3,-32(fp)
  805444:	1885883a 	add	r2,r3,r2
  805448:	e0bff815 	stw	r2,-32(fp)
  80544c:	e0bff617 	ldw	r2,-40(fp)
  805450:	10000d1e 	bne	r2,zero,805488 <get_sof+0x174>
  805454:	e0bff717 	ldw	r2,-36(fp)
  805458:	10800317 	ldw	r2,12(r2)
  80545c:	e13ffb17 	ldw	r4,-20(fp)
  805460:	103ee83a 	callr	r2
  805464:	1000021e 	bne	r2,zero,805470 <get_sof+0x15c>
  805468:	0005883a 	mov	r2,zero
  80546c:	0001b906 	br	805b54 <get_sof+0x840>
  805470:	e0bff717 	ldw	r2,-36(fp)
  805474:	10800017 	ldw	r2,0(r2)
  805478:	e0bff515 	stw	r2,-44(fp)
  80547c:	e0bff717 	ldw	r2,-36(fp)
  805480:	10800117 	ldw	r2,4(r2)
  805484:	e0bff615 	stw	r2,-40(fp)
  805488:	e0bff617 	ldw	r2,-40(fp)
  80548c:	10bfffc4 	addi	r2,r2,-1
  805490:	e0bff615 	stw	r2,-40(fp)
  805494:	e0bff517 	ldw	r2,-44(fp)
  805498:	10c00044 	addi	r3,r2,1
  80549c:	e0fff515 	stw	r3,-44(fp)
  8054a0:	10800003 	ldbu	r2,0(r2)
  8054a4:	10c03fcc 	andi	r3,r2,255
  8054a8:	e0bffb17 	ldw	r2,-20(fp)
  8054ac:	10c03515 	stw	r3,212(r2)
  8054b0:	e0bff617 	ldw	r2,-40(fp)
  8054b4:	10000d1e 	bne	r2,zero,8054ec <get_sof+0x1d8>
  8054b8:	e0bff717 	ldw	r2,-36(fp)
  8054bc:	10800317 	ldw	r2,12(r2)
  8054c0:	e13ffb17 	ldw	r4,-20(fp)
  8054c4:	103ee83a 	callr	r2
  8054c8:	1000021e 	bne	r2,zero,8054d4 <get_sof+0x1c0>
  8054cc:	0005883a 	mov	r2,zero
  8054d0:	0001a006 	br	805b54 <get_sof+0x840>
  8054d4:	e0bff717 	ldw	r2,-36(fp)
  8054d8:	10800017 	ldw	r2,0(r2)
  8054dc:	e0bff515 	stw	r2,-44(fp)
  8054e0:	e0bff717 	ldw	r2,-36(fp)
  8054e4:	10800117 	ldw	r2,4(r2)
  8054e8:	e0bff615 	stw	r2,-40(fp)
  8054ec:	e0bff617 	ldw	r2,-40(fp)
  8054f0:	10bfffc4 	addi	r2,r2,-1
  8054f4:	e0bff615 	stw	r2,-40(fp)
  8054f8:	e0bff517 	ldw	r2,-44(fp)
  8054fc:	10c00044 	addi	r3,r2,1
  805500:	e0fff515 	stw	r3,-44(fp)
  805504:	10800003 	ldbu	r2,0(r2)
  805508:	10803fcc 	andi	r2,r2,255
  80550c:	1006923a 	slli	r3,r2,8
  805510:	e0bffb17 	ldw	r2,-20(fp)
  805514:	10c00815 	stw	r3,32(r2)
  805518:	e0bff617 	ldw	r2,-40(fp)
  80551c:	10000d1e 	bne	r2,zero,805554 <get_sof+0x240>
  805520:	e0bff717 	ldw	r2,-36(fp)
  805524:	10800317 	ldw	r2,12(r2)
  805528:	e13ffb17 	ldw	r4,-20(fp)
  80552c:	103ee83a 	callr	r2
  805530:	1000021e 	bne	r2,zero,80553c <get_sof+0x228>
  805534:	0005883a 	mov	r2,zero
  805538:	00018606 	br	805b54 <get_sof+0x840>
  80553c:	e0bff717 	ldw	r2,-36(fp)
  805540:	10800017 	ldw	r2,0(r2)
  805544:	e0bff515 	stw	r2,-44(fp)
  805548:	e0bff717 	ldw	r2,-36(fp)
  80554c:	10800117 	ldw	r2,4(r2)
  805550:	e0bff615 	stw	r2,-40(fp)
  805554:	e0bff617 	ldw	r2,-40(fp)
  805558:	10bfffc4 	addi	r2,r2,-1
  80555c:	e0bff615 	stw	r2,-40(fp)
  805560:	e0bff517 	ldw	r2,-44(fp)
  805564:	10c00044 	addi	r3,r2,1
  805568:	e0fff515 	stw	r3,-44(fp)
  80556c:	11000003 	ldbu	r4,0(r2)
  805570:	e0bffb17 	ldw	r2,-20(fp)
  805574:	10c00817 	ldw	r3,32(r2)
  805578:	20803fcc 	andi	r2,r4,255
  80557c:	1887883a 	add	r3,r3,r2
  805580:	e0bffb17 	ldw	r2,-20(fp)
  805584:	10c00815 	stw	r3,32(r2)
  805588:	e0bff617 	ldw	r2,-40(fp)
  80558c:	10000d1e 	bne	r2,zero,8055c4 <get_sof+0x2b0>
  805590:	e0bff717 	ldw	r2,-36(fp)
  805594:	10800317 	ldw	r2,12(r2)
  805598:	e13ffb17 	ldw	r4,-20(fp)
  80559c:	103ee83a 	callr	r2
  8055a0:	1000021e 	bne	r2,zero,8055ac <get_sof+0x298>
  8055a4:	0005883a 	mov	r2,zero
  8055a8:	00016a06 	br	805b54 <get_sof+0x840>
  8055ac:	e0bff717 	ldw	r2,-36(fp)
  8055b0:	10800017 	ldw	r2,0(r2)
  8055b4:	e0bff515 	stw	r2,-44(fp)
  8055b8:	e0bff717 	ldw	r2,-36(fp)
  8055bc:	10800117 	ldw	r2,4(r2)
  8055c0:	e0bff615 	stw	r2,-40(fp)
  8055c4:	e0bff617 	ldw	r2,-40(fp)
  8055c8:	10bfffc4 	addi	r2,r2,-1
  8055cc:	e0bff615 	stw	r2,-40(fp)
  8055d0:	e0bff517 	ldw	r2,-44(fp)
  8055d4:	10c00044 	addi	r3,r2,1
  8055d8:	e0fff515 	stw	r3,-44(fp)
  8055dc:	10800003 	ldbu	r2,0(r2)
  8055e0:	10803fcc 	andi	r2,r2,255
  8055e4:	1006923a 	slli	r3,r2,8
  8055e8:	e0bffb17 	ldw	r2,-20(fp)
  8055ec:	10c00715 	stw	r3,28(r2)
  8055f0:	e0bff617 	ldw	r2,-40(fp)
  8055f4:	10000d1e 	bne	r2,zero,80562c <get_sof+0x318>
  8055f8:	e0bff717 	ldw	r2,-36(fp)
  8055fc:	10800317 	ldw	r2,12(r2)
  805600:	e13ffb17 	ldw	r4,-20(fp)
  805604:	103ee83a 	callr	r2
  805608:	1000021e 	bne	r2,zero,805614 <get_sof+0x300>
  80560c:	0005883a 	mov	r2,zero
  805610:	00015006 	br	805b54 <get_sof+0x840>
  805614:	e0bff717 	ldw	r2,-36(fp)
  805618:	10800017 	ldw	r2,0(r2)
  80561c:	e0bff515 	stw	r2,-44(fp)
  805620:	e0bff717 	ldw	r2,-36(fp)
  805624:	10800117 	ldw	r2,4(r2)
  805628:	e0bff615 	stw	r2,-40(fp)
  80562c:	e0bff617 	ldw	r2,-40(fp)
  805630:	10bfffc4 	addi	r2,r2,-1
  805634:	e0bff615 	stw	r2,-40(fp)
  805638:	e0bff517 	ldw	r2,-44(fp)
  80563c:	10c00044 	addi	r3,r2,1
  805640:	e0fff515 	stw	r3,-44(fp)
  805644:	11000003 	ldbu	r4,0(r2)
  805648:	e0bffb17 	ldw	r2,-20(fp)
  80564c:	10c00717 	ldw	r3,28(r2)
  805650:	20803fcc 	andi	r2,r4,255
  805654:	1887883a 	add	r3,r3,r2
  805658:	e0bffb17 	ldw	r2,-20(fp)
  80565c:	10c00715 	stw	r3,28(r2)
  805660:	e0bff617 	ldw	r2,-40(fp)
  805664:	10000d1e 	bne	r2,zero,80569c <get_sof+0x388>
  805668:	e0bff717 	ldw	r2,-36(fp)
  80566c:	10800317 	ldw	r2,12(r2)
  805670:	e13ffb17 	ldw	r4,-20(fp)
  805674:	103ee83a 	callr	r2
  805678:	1000021e 	bne	r2,zero,805684 <get_sof+0x370>
  80567c:	0005883a 	mov	r2,zero
  805680:	00013406 	br	805b54 <get_sof+0x840>
  805684:	e0bff717 	ldw	r2,-36(fp)
  805688:	10800017 	ldw	r2,0(r2)
  80568c:	e0bff515 	stw	r2,-44(fp)
  805690:	e0bff717 	ldw	r2,-36(fp)
  805694:	10800117 	ldw	r2,4(r2)
  805698:	e0bff615 	stw	r2,-40(fp)
  80569c:	e0bff617 	ldw	r2,-40(fp)
  8056a0:	10bfffc4 	addi	r2,r2,-1
  8056a4:	e0bff615 	stw	r2,-40(fp)
  8056a8:	e0bff517 	ldw	r2,-44(fp)
  8056ac:	10c00044 	addi	r3,r2,1
  8056b0:	e0fff515 	stw	r3,-44(fp)
  8056b4:	10800003 	ldbu	r2,0(r2)
  8056b8:	10c03fcc 	andi	r3,r2,255
  8056bc:	e0bffb17 	ldw	r2,-20(fp)
  8056c0:	10c00915 	stw	r3,36(r2)
  8056c4:	e0bff817 	ldw	r2,-32(fp)
  8056c8:	10bffe04 	addi	r2,r2,-8
  8056cc:	e0bff815 	stw	r2,-32(fp)
  8056d0:	e0bffb17 	ldw	r2,-20(fp)
  8056d4:	10800017 	ldw	r2,0(r2)
  8056d8:	10800604 	addi	r2,r2,24
  8056dc:	e0bff915 	stw	r2,-28(fp)
  8056e0:	e0bffb17 	ldw	r2,-20(fp)
  8056e4:	10c06e17 	ldw	r3,440(r2)
  8056e8:	e0bff917 	ldw	r2,-28(fp)
  8056ec:	10c00015 	stw	r3,0(r2)
  8056f0:	e0bff917 	ldw	r2,-28(fp)
  8056f4:	10800104 	addi	r2,r2,4
  8056f8:	e0fffb17 	ldw	r3,-20(fp)
  8056fc:	18c00717 	ldw	r3,28(r3)
  805700:	10c00015 	stw	r3,0(r2)
  805704:	e0bff917 	ldw	r2,-28(fp)
  805708:	10800204 	addi	r2,r2,8
  80570c:	e0fffb17 	ldw	r3,-20(fp)
  805710:	18c00817 	ldw	r3,32(r3)
  805714:	10c00015 	stw	r3,0(r2)
  805718:	e0bff917 	ldw	r2,-28(fp)
  80571c:	10800304 	addi	r2,r2,12
  805720:	e0fffb17 	ldw	r3,-20(fp)
  805724:	18c00917 	ldw	r3,36(r3)
  805728:	10c00015 	stw	r3,0(r2)
  80572c:	e0bffb17 	ldw	r2,-20(fp)
  805730:	10800017 	ldw	r2,0(r2)
  805734:	00c01984 	movi	r3,102
  805738:	10c00515 	stw	r3,20(r2)
  80573c:	e0bffb17 	ldw	r2,-20(fp)
  805740:	10800017 	ldw	r2,0(r2)
  805744:	10800117 	ldw	r2,4(r2)
  805748:	01400044 	movi	r5,1
  80574c:	e13ffb17 	ldw	r4,-20(fp)
  805750:	103ee83a 	callr	r2
  805754:	e0bffb17 	ldw	r2,-20(fp)
  805758:	10807417 	ldw	r2,464(r2)
  80575c:	10800417 	ldw	r2,16(r2)
  805760:	10000926 	beq	r2,zero,805788 <get_sof+0x474>
  805764:	e0bffb17 	ldw	r2,-20(fp)
  805768:	10800017 	ldw	r2,0(r2)
  80576c:	00c00f44 	movi	r3,61
  805770:	10c00515 	stw	r3,20(r2)
  805774:	e0bffb17 	ldw	r2,-20(fp)
  805778:	10800017 	ldw	r2,0(r2)
  80577c:	10800017 	ldw	r2,0(r2)
  805780:	e13ffb17 	ldw	r4,-20(fp)
  805784:	103ee83a 	callr	r2
  805788:	e0bffb17 	ldw	r2,-20(fp)
  80578c:	10800817 	ldw	r2,32(r2)
  805790:	10000626 	beq	r2,zero,8057ac <get_sof+0x498>
  805794:	e0bffb17 	ldw	r2,-20(fp)
  805798:	10800717 	ldw	r2,28(r2)
  80579c:	10000326 	beq	r2,zero,8057ac <get_sof+0x498>
  8057a0:	e0bffb17 	ldw	r2,-20(fp)
  8057a4:	10800917 	ldw	r2,36(r2)
  8057a8:	00800916 	blt	zero,r2,8057d0 <get_sof+0x4bc>
  8057ac:	e0bffb17 	ldw	r2,-20(fp)
  8057b0:	10800017 	ldw	r2,0(r2)
  8057b4:	00c00844 	movi	r3,33
  8057b8:	10c00515 	stw	r3,20(r2)
  8057bc:	e0bffb17 	ldw	r2,-20(fp)
  8057c0:	10800017 	ldw	r2,0(r2)
  8057c4:	10800017 	ldw	r2,0(r2)
  8057c8:	e13ffb17 	ldw	r4,-20(fp)
  8057cc:	103ee83a 	callr	r2
  8057d0:	e0bffb17 	ldw	r2,-20(fp)
  8057d4:	10c00917 	ldw	r3,36(r2)
  8057d8:	1805883a 	mov	r2,r3
  8057dc:	1085883a 	add	r2,r2,r2
  8057e0:	10c7883a 	add	r3,r2,r3
  8057e4:	e0bff817 	ldw	r2,-32(fp)
  8057e8:	18800926 	beq	r3,r2,805810 <get_sof+0x4fc>
  8057ec:	e0bffb17 	ldw	r2,-20(fp)
  8057f0:	10800017 	ldw	r2,0(r2)
  8057f4:	00c00304 	movi	r3,12
  8057f8:	10c00515 	stw	r3,20(r2)
  8057fc:	e0bffb17 	ldw	r2,-20(fp)
  805800:	10800017 	ldw	r2,0(r2)
  805804:	10800017 	ldw	r2,0(r2)
  805808:	e13ffb17 	ldw	r4,-20(fp)
  80580c:	103ee83a 	callr	r2
  805810:	e0bffb17 	ldw	r2,-20(fp)
  805814:	10803617 	ldw	r2,216(r2)
  805818:	10000f1e 	bne	r2,zero,805858 <get_sof+0x544>
  80581c:	e0bffb17 	ldw	r2,-20(fp)
  805820:	10800117 	ldw	r2,4(r2)
  805824:	14000017 	ldw	r16,0(r2)
  805828:	e0bffb17 	ldw	r2,-20(fp)
  80582c:	10800917 	ldw	r2,36(r2)
  805830:	01401604 	movi	r5,88
  805834:	1009883a 	mov	r4,r2
  805838:	08305040 	call	830504 <__mulsi3>
  80583c:	100d883a 	mov	r6,r2
  805840:	01400044 	movi	r5,1
  805844:	e13ffb17 	ldw	r4,-20(fp)
  805848:	803ee83a 	callr	r16
  80584c:	1007883a 	mov	r3,r2
  805850:	e0bffb17 	ldw	r2,-20(fp)
  805854:	10c03615 	stw	r3,216(r2)
  805858:	e03ff215 	stw	zero,-56(fp)
  80585c:	0000ae06 	br	805b18 <get_sof+0x804>
  805860:	e0bff617 	ldw	r2,-40(fp)
  805864:	10000d1e 	bne	r2,zero,80589c <get_sof+0x588>
  805868:	e0bff717 	ldw	r2,-36(fp)
  80586c:	10800317 	ldw	r2,12(r2)
  805870:	e13ffb17 	ldw	r4,-20(fp)
  805874:	103ee83a 	callr	r2
  805878:	1000021e 	bne	r2,zero,805884 <get_sof+0x570>
  80587c:	0005883a 	mov	r2,zero
  805880:	0000b406 	br	805b54 <get_sof+0x840>
  805884:	e0bff717 	ldw	r2,-36(fp)
  805888:	10800017 	ldw	r2,0(r2)
  80588c:	e0bff515 	stw	r2,-44(fp)
  805890:	e0bff717 	ldw	r2,-36(fp)
  805894:	10800117 	ldw	r2,4(r2)
  805898:	e0bff615 	stw	r2,-40(fp)
  80589c:	e0bff617 	ldw	r2,-40(fp)
  8058a0:	10bfffc4 	addi	r2,r2,-1
  8058a4:	e0bff615 	stw	r2,-40(fp)
  8058a8:	e0bff517 	ldw	r2,-44(fp)
  8058ac:	10c00044 	addi	r3,r2,1
  8058b0:	e0fff515 	stw	r3,-44(fp)
  8058b4:	10800003 	ldbu	r2,0(r2)
  8058b8:	10803fcc 	andi	r2,r2,255
  8058bc:	e0bff115 	stw	r2,-60(fp)
  8058c0:	e03ff315 	stw	zero,-52(fp)
  8058c4:	e0bffb17 	ldw	r2,-20(fp)
  8058c8:	10803617 	ldw	r2,216(r2)
  8058cc:	e0bff415 	stw	r2,-48(fp)
  8058d0:	00002a06 	br	80597c <get_sof+0x668>
  8058d4:	e0bff417 	ldw	r2,-48(fp)
  8058d8:	10c00017 	ldw	r3,0(r2)
  8058dc:	e0bff117 	ldw	r2,-60(fp)
  8058e0:	1880201e 	bne	r3,r2,805964 <get_sof+0x650>
  8058e4:	e0bffb17 	ldw	r2,-20(fp)
  8058e8:	10803617 	ldw	r2,216(r2)
  8058ec:	e0bff415 	stw	r2,-48(fp)
  8058f0:	e0bff417 	ldw	r2,-48(fp)
  8058f4:	10800017 	ldw	r2,0(r2)
  8058f8:	e0bff115 	stw	r2,-60(fp)
  8058fc:	e0bff417 	ldw	r2,-48(fp)
  805900:	10801604 	addi	r2,r2,88
  805904:	e0bff415 	stw	r2,-48(fp)
  805908:	00800044 	movi	r2,1
  80590c:	e0bff315 	stw	r2,-52(fp)
  805910:	00000d06 	br	805948 <get_sof+0x634>
  805914:	e0bff417 	ldw	r2,-48(fp)
  805918:	10800017 	ldw	r2,0(r2)
  80591c:	e0fff117 	ldw	r3,-60(fp)
  805920:	1880030e 	bge	r3,r2,805930 <get_sof+0x61c>
  805924:	e0bff417 	ldw	r2,-48(fp)
  805928:	10800017 	ldw	r2,0(r2)
  80592c:	e0bff115 	stw	r2,-60(fp)
  805930:	e0bff317 	ldw	r2,-52(fp)
  805934:	10800044 	addi	r2,r2,1
  805938:	e0bff315 	stw	r2,-52(fp)
  80593c:	e0bff417 	ldw	r2,-48(fp)
  805940:	10801604 	addi	r2,r2,88
  805944:	e0bff415 	stw	r2,-48(fp)
  805948:	e0fff317 	ldw	r3,-52(fp)
  80594c:	e0bff217 	ldw	r2,-56(fp)
  805950:	18bff016 	blt	r3,r2,805914 <__alt_mem_epcs_flash_controller_0+0xff7fc914>
  805954:	e0bff117 	ldw	r2,-60(fp)
  805958:	10800044 	addi	r2,r2,1
  80595c:	e0bff115 	stw	r2,-60(fp)
  805960:	00000906 	br	805988 <get_sof+0x674>
  805964:	e0bff317 	ldw	r2,-52(fp)
  805968:	10800044 	addi	r2,r2,1
  80596c:	e0bff315 	stw	r2,-52(fp)
  805970:	e0bff417 	ldw	r2,-48(fp)
  805974:	10801604 	addi	r2,r2,88
  805978:	e0bff415 	stw	r2,-48(fp)
  80597c:	e0fff317 	ldw	r3,-52(fp)
  805980:	e0bff217 	ldw	r2,-56(fp)
  805984:	18bfd316 	blt	r3,r2,8058d4 <__alt_mem_epcs_flash_controller_0+0xff7fc8d4>
  805988:	e0bff417 	ldw	r2,-48(fp)
  80598c:	e0fff117 	ldw	r3,-60(fp)
  805990:	10c00015 	stw	r3,0(r2)
  805994:	e0bff417 	ldw	r2,-48(fp)
  805998:	e0fff217 	ldw	r3,-56(fp)
  80599c:	10c00115 	stw	r3,4(r2)
  8059a0:	e0bff617 	ldw	r2,-40(fp)
  8059a4:	10000d1e 	bne	r2,zero,8059dc <get_sof+0x6c8>
  8059a8:	e0bff717 	ldw	r2,-36(fp)
  8059ac:	10800317 	ldw	r2,12(r2)
  8059b0:	e13ffb17 	ldw	r4,-20(fp)
  8059b4:	103ee83a 	callr	r2
  8059b8:	1000021e 	bne	r2,zero,8059c4 <get_sof+0x6b0>
  8059bc:	0005883a 	mov	r2,zero
  8059c0:	00006406 	br	805b54 <get_sof+0x840>
  8059c4:	e0bff717 	ldw	r2,-36(fp)
  8059c8:	10800017 	ldw	r2,0(r2)
  8059cc:	e0bff515 	stw	r2,-44(fp)
  8059d0:	e0bff717 	ldw	r2,-36(fp)
  8059d4:	10800117 	ldw	r2,4(r2)
  8059d8:	e0bff615 	stw	r2,-40(fp)
  8059dc:	e0bff617 	ldw	r2,-40(fp)
  8059e0:	10bfffc4 	addi	r2,r2,-1
  8059e4:	e0bff615 	stw	r2,-40(fp)
  8059e8:	e0bff517 	ldw	r2,-44(fp)
  8059ec:	10c00044 	addi	r3,r2,1
  8059f0:	e0fff515 	stw	r3,-44(fp)
  8059f4:	10800003 	ldbu	r2,0(r2)
  8059f8:	10803fcc 	andi	r2,r2,255
  8059fc:	e0bff115 	stw	r2,-60(fp)
  805a00:	e0bff117 	ldw	r2,-60(fp)
  805a04:	1005d13a 	srai	r2,r2,4
  805a08:	10c003cc 	andi	r3,r2,15
  805a0c:	e0bff417 	ldw	r2,-48(fp)
  805a10:	10c00215 	stw	r3,8(r2)
  805a14:	e0bff117 	ldw	r2,-60(fp)
  805a18:	10c003cc 	andi	r3,r2,15
  805a1c:	e0bff417 	ldw	r2,-48(fp)
  805a20:	10c00315 	stw	r3,12(r2)
  805a24:	e0bff617 	ldw	r2,-40(fp)
  805a28:	10000d1e 	bne	r2,zero,805a60 <get_sof+0x74c>
  805a2c:	e0bff717 	ldw	r2,-36(fp)
  805a30:	10800317 	ldw	r2,12(r2)
  805a34:	e13ffb17 	ldw	r4,-20(fp)
  805a38:	103ee83a 	callr	r2
  805a3c:	1000021e 	bne	r2,zero,805a48 <get_sof+0x734>
  805a40:	0005883a 	mov	r2,zero
  805a44:	00004306 	br	805b54 <get_sof+0x840>
  805a48:	e0bff717 	ldw	r2,-36(fp)
  805a4c:	10800017 	ldw	r2,0(r2)
  805a50:	e0bff515 	stw	r2,-44(fp)
  805a54:	e0bff717 	ldw	r2,-36(fp)
  805a58:	10800117 	ldw	r2,4(r2)
  805a5c:	e0bff615 	stw	r2,-40(fp)
  805a60:	e0bff617 	ldw	r2,-40(fp)
  805a64:	10bfffc4 	addi	r2,r2,-1
  805a68:	e0bff615 	stw	r2,-40(fp)
  805a6c:	e0bff517 	ldw	r2,-44(fp)
  805a70:	10c00044 	addi	r3,r2,1
  805a74:	e0fff515 	stw	r3,-44(fp)
  805a78:	10800003 	ldbu	r2,0(r2)
  805a7c:	10c03fcc 	andi	r3,r2,255
  805a80:	e0bff417 	ldw	r2,-48(fp)
  805a84:	10c00415 	stw	r3,16(r2)
  805a88:	e0bffb17 	ldw	r2,-20(fp)
  805a8c:	10800017 	ldw	r2,0(r2)
  805a90:	10800604 	addi	r2,r2,24
  805a94:	e0bffa15 	stw	r2,-24(fp)
  805a98:	e0bff417 	ldw	r2,-48(fp)
  805a9c:	10c00017 	ldw	r3,0(r2)
  805aa0:	e0bffa17 	ldw	r2,-24(fp)
  805aa4:	10c00015 	stw	r3,0(r2)
  805aa8:	e0bffa17 	ldw	r2,-24(fp)
  805aac:	10800104 	addi	r2,r2,4
  805ab0:	e0fff417 	ldw	r3,-48(fp)
  805ab4:	18c00217 	ldw	r3,8(r3)
  805ab8:	10c00015 	stw	r3,0(r2)
  805abc:	e0bffa17 	ldw	r2,-24(fp)
  805ac0:	10800204 	addi	r2,r2,8
  805ac4:	e0fff417 	ldw	r3,-48(fp)
  805ac8:	18c00317 	ldw	r3,12(r3)
  805acc:	10c00015 	stw	r3,0(r2)
  805ad0:	e0bffa17 	ldw	r2,-24(fp)
  805ad4:	10800304 	addi	r2,r2,12
  805ad8:	e0fff417 	ldw	r3,-48(fp)
  805adc:	18c00417 	ldw	r3,16(r3)
  805ae0:	10c00015 	stw	r3,0(r2)
  805ae4:	e0bffb17 	ldw	r2,-20(fp)
  805ae8:	10800017 	ldw	r2,0(r2)
  805aec:	00c019c4 	movi	r3,103
  805af0:	10c00515 	stw	r3,20(r2)
  805af4:	e0bffb17 	ldw	r2,-20(fp)
  805af8:	10800017 	ldw	r2,0(r2)
  805afc:	10800117 	ldw	r2,4(r2)
  805b00:	01400044 	movi	r5,1
  805b04:	e13ffb17 	ldw	r4,-20(fp)
  805b08:	103ee83a 	callr	r2
  805b0c:	e0bff217 	ldw	r2,-56(fp)
  805b10:	10800044 	addi	r2,r2,1
  805b14:	e0bff215 	stw	r2,-56(fp)
  805b18:	e0bffb17 	ldw	r2,-20(fp)
  805b1c:	10800917 	ldw	r2,36(r2)
  805b20:	e0fff217 	ldw	r3,-56(fp)
  805b24:	18bf4e16 	blt	r3,r2,805860 <__alt_mem_epcs_flash_controller_0+0xff7fc860>
  805b28:	e0bffb17 	ldw	r2,-20(fp)
  805b2c:	10807417 	ldw	r2,464(r2)
  805b30:	00c00044 	movi	r3,1
  805b34:	10c00415 	stw	r3,16(r2)
  805b38:	e0bff717 	ldw	r2,-36(fp)
  805b3c:	e0fff517 	ldw	r3,-44(fp)
  805b40:	10c00015 	stw	r3,0(r2)
  805b44:	e0bff717 	ldw	r2,-36(fp)
  805b48:	e0fff617 	ldw	r3,-40(fp)
  805b4c:	10c00115 	stw	r3,4(r2)
  805b50:	00800044 	movi	r2,1
  805b54:	e6ffff04 	addi	sp,fp,-4
  805b58:	dfc00217 	ldw	ra,8(sp)
  805b5c:	df000117 	ldw	fp,4(sp)
  805b60:	dc000017 	ldw	r16,0(sp)
  805b64:	dec00304 	addi	sp,sp,12
  805b68:	f800283a 	ret

00805b6c <get_sos>:
  805b6c:	defff204 	addi	sp,sp,-56
  805b70:	dfc00d15 	stw	ra,52(sp)
  805b74:	df000c15 	stw	fp,48(sp)
  805b78:	df000c04 	addi	fp,sp,48
  805b7c:	e13fff15 	stw	r4,-4(fp)
  805b80:	e0bfff17 	ldw	r2,-4(fp)
  805b84:	10800617 	ldw	r2,24(r2)
  805b88:	e0bffa15 	stw	r2,-24(fp)
  805b8c:	e0bffa17 	ldw	r2,-24(fp)
  805b90:	10800017 	ldw	r2,0(r2)
  805b94:	e0bff815 	stw	r2,-32(fp)
  805b98:	e0bffa17 	ldw	r2,-24(fp)
  805b9c:	10800117 	ldw	r2,4(r2)
  805ba0:	e0bff915 	stw	r2,-28(fp)
  805ba4:	e0bfff17 	ldw	r2,-4(fp)
  805ba8:	10807417 	ldw	r2,464(r2)
  805bac:	10800417 	ldw	r2,16(r2)
  805bb0:	1000111e 	bne	r2,zero,805bf8 <get_sos+0x8c>
  805bb4:	e0bfff17 	ldw	r2,-4(fp)
  805bb8:	10800017 	ldw	r2,0(r2)
  805bbc:	00c00f04 	movi	r3,60
  805bc0:	10c00515 	stw	r3,20(r2)
  805bc4:	e0bfff17 	ldw	r2,-4(fp)
  805bc8:	10800017 	ldw	r2,0(r2)
  805bcc:	10800604 	addi	r2,r2,24
  805bd0:	01801404 	movi	r6,80
  805bd4:	01402174 	movhi	r5,133
  805bd8:	295ba904 	addi	r5,r5,28324
  805bdc:	1009883a 	mov	r4,r2
  805be0:	0834d880 	call	834d88 <strncpy>
  805be4:	e0bfff17 	ldw	r2,-4(fp)
  805be8:	10800017 	ldw	r2,0(r2)
  805bec:	10800017 	ldw	r2,0(r2)
  805bf0:	e13fff17 	ldw	r4,-4(fp)
  805bf4:	103ee83a 	callr	r2
  805bf8:	e0bff917 	ldw	r2,-28(fp)
  805bfc:	10000d1e 	bne	r2,zero,805c34 <get_sos+0xc8>
  805c00:	e0bffa17 	ldw	r2,-24(fp)
  805c04:	10800317 	ldw	r2,12(r2)
  805c08:	e13fff17 	ldw	r4,-4(fp)
  805c0c:	103ee83a 	callr	r2
  805c10:	1000021e 	bne	r2,zero,805c1c <get_sos+0xb0>
  805c14:	0005883a 	mov	r2,zero
  805c18:	0001ac06 	br	8062cc <get_sos+0x760>
  805c1c:	e0bffa17 	ldw	r2,-24(fp)
  805c20:	10800017 	ldw	r2,0(r2)
  805c24:	e0bff815 	stw	r2,-32(fp)
  805c28:	e0bffa17 	ldw	r2,-24(fp)
  805c2c:	10800117 	ldw	r2,4(r2)
  805c30:	e0bff915 	stw	r2,-28(fp)
  805c34:	e0bff917 	ldw	r2,-28(fp)
  805c38:	10bfffc4 	addi	r2,r2,-1
  805c3c:	e0bff915 	stw	r2,-28(fp)
  805c40:	e0bff817 	ldw	r2,-32(fp)
  805c44:	10c00044 	addi	r3,r2,1
  805c48:	e0fff815 	stw	r3,-32(fp)
  805c4c:	10800003 	ldbu	r2,0(r2)
  805c50:	10803fcc 	andi	r2,r2,255
  805c54:	1004923a 	slli	r2,r2,8
  805c58:	e0bffb15 	stw	r2,-20(fp)
  805c5c:	e0bff917 	ldw	r2,-28(fp)
  805c60:	10000d1e 	bne	r2,zero,805c98 <get_sos+0x12c>
  805c64:	e0bffa17 	ldw	r2,-24(fp)
  805c68:	10800317 	ldw	r2,12(r2)
  805c6c:	e13fff17 	ldw	r4,-4(fp)
  805c70:	103ee83a 	callr	r2
  805c74:	1000021e 	bne	r2,zero,805c80 <get_sos+0x114>
  805c78:	0005883a 	mov	r2,zero
  805c7c:	00019306 	br	8062cc <get_sos+0x760>
  805c80:	e0bffa17 	ldw	r2,-24(fp)
  805c84:	10800017 	ldw	r2,0(r2)
  805c88:	e0bff815 	stw	r2,-32(fp)
  805c8c:	e0bffa17 	ldw	r2,-24(fp)
  805c90:	10800117 	ldw	r2,4(r2)
  805c94:	e0bff915 	stw	r2,-28(fp)
  805c98:	e0bff917 	ldw	r2,-28(fp)
  805c9c:	10bfffc4 	addi	r2,r2,-1
  805ca0:	e0bff915 	stw	r2,-28(fp)
  805ca4:	e0bff817 	ldw	r2,-32(fp)
  805ca8:	10c00044 	addi	r3,r2,1
  805cac:	e0fff815 	stw	r3,-32(fp)
  805cb0:	10800003 	ldbu	r2,0(r2)
  805cb4:	10803fcc 	andi	r2,r2,255
  805cb8:	e0fffb17 	ldw	r3,-20(fp)
  805cbc:	1885883a 	add	r2,r3,r2
  805cc0:	e0bffb15 	stw	r2,-20(fp)
  805cc4:	e0bff917 	ldw	r2,-28(fp)
  805cc8:	10000d1e 	bne	r2,zero,805d00 <get_sos+0x194>
  805ccc:	e0bffa17 	ldw	r2,-24(fp)
  805cd0:	10800317 	ldw	r2,12(r2)
  805cd4:	e13fff17 	ldw	r4,-4(fp)
  805cd8:	103ee83a 	callr	r2
  805cdc:	1000021e 	bne	r2,zero,805ce8 <get_sos+0x17c>
  805ce0:	0005883a 	mov	r2,zero
  805ce4:	00017906 	br	8062cc <get_sos+0x760>
  805ce8:	e0bffa17 	ldw	r2,-24(fp)
  805cec:	10800017 	ldw	r2,0(r2)
  805cf0:	e0bff815 	stw	r2,-32(fp)
  805cf4:	e0bffa17 	ldw	r2,-24(fp)
  805cf8:	10800117 	ldw	r2,4(r2)
  805cfc:	e0bff915 	stw	r2,-28(fp)
  805d00:	e0bff917 	ldw	r2,-28(fp)
  805d04:	10bfffc4 	addi	r2,r2,-1
  805d08:	e0bff915 	stw	r2,-28(fp)
  805d0c:	e0bff817 	ldw	r2,-32(fp)
  805d10:	10c00044 	addi	r3,r2,1
  805d14:	e0fff815 	stw	r3,-32(fp)
  805d18:	10800003 	ldbu	r2,0(r2)
  805d1c:	10803fcc 	andi	r2,r2,255
  805d20:	e0bffc15 	stw	r2,-16(fp)
  805d24:	e0bfff17 	ldw	r2,-4(fp)
  805d28:	10800017 	ldw	r2,0(r2)
  805d2c:	00c01a44 	movi	r3,105
  805d30:	10c00515 	stw	r3,20(r2)
  805d34:	e0bfff17 	ldw	r2,-4(fp)
  805d38:	10800017 	ldw	r2,0(r2)
  805d3c:	e0fffc17 	ldw	r3,-16(fp)
  805d40:	10c00615 	stw	r3,24(r2)
  805d44:	e0bfff17 	ldw	r2,-4(fp)
  805d48:	10800017 	ldw	r2,0(r2)
  805d4c:	10800117 	ldw	r2,4(r2)
  805d50:	01400044 	movi	r5,1
  805d54:	e13fff17 	ldw	r4,-4(fp)
  805d58:	103ee83a 	callr	r2
  805d5c:	e0bffc17 	ldw	r2,-16(fp)
  805d60:	108000c4 	addi	r2,r2,3
  805d64:	1085883a 	add	r2,r2,r2
  805d68:	1007883a 	mov	r3,r2
  805d6c:	e0bffb17 	ldw	r2,-20(fp)
  805d70:	1880081e 	bne	r3,r2,805d94 <get_sos+0x228>
  805d74:	e0bffc17 	ldw	r2,-16(fp)
  805d78:	10800148 	cmpgei	r2,r2,5
  805d7c:	1000051e 	bne	r2,zero,805d94 <get_sos+0x228>
  805d80:	e0bffc17 	ldw	r2,-16(fp)
  805d84:	10000c1e 	bne	r2,zero,805db8 <get_sos+0x24c>
  805d88:	e0bfff17 	ldw	r2,-4(fp)
  805d8c:	10803817 	ldw	r2,224(r2)
  805d90:	1000091e 	bne	r2,zero,805db8 <get_sos+0x24c>
  805d94:	e0bfff17 	ldw	r2,-4(fp)
  805d98:	10800017 	ldw	r2,0(r2)
  805d9c:	00c00304 	movi	r3,12
  805da0:	10c00515 	stw	r3,20(r2)
  805da4:	e0bfff17 	ldw	r2,-4(fp)
  805da8:	10800017 	ldw	r2,0(r2)
  805dac:	10800017 	ldw	r2,0(r2)
  805db0:	e13fff17 	ldw	r4,-4(fp)
  805db4:	103ee83a 	callr	r2
  805db8:	e0bfff17 	ldw	r2,-4(fp)
  805dbc:	e0fffc17 	ldw	r3,-16(fp)
  805dc0:	10c05515 	stw	r3,340(r2)
  805dc4:	e03ff615 	stw	zero,-40(fp)
  805dc8:	0000b406 	br	80609c <get_sos+0x530>
  805dcc:	e0bff917 	ldw	r2,-28(fp)
  805dd0:	10000d1e 	bne	r2,zero,805e08 <get_sos+0x29c>
  805dd4:	e0bffa17 	ldw	r2,-24(fp)
  805dd8:	10800317 	ldw	r2,12(r2)
  805ddc:	e13fff17 	ldw	r4,-4(fp)
  805de0:	103ee83a 	callr	r2
  805de4:	1000021e 	bne	r2,zero,805df0 <get_sos+0x284>
  805de8:	0005883a 	mov	r2,zero
  805dec:	00013706 	br	8062cc <get_sos+0x760>
  805df0:	e0bffa17 	ldw	r2,-24(fp)
  805df4:	10800017 	ldw	r2,0(r2)
  805df8:	e0bff815 	stw	r2,-32(fp)
  805dfc:	e0bffa17 	ldw	r2,-24(fp)
  805e00:	10800117 	ldw	r2,4(r2)
  805e04:	e0bff915 	stw	r2,-28(fp)
  805e08:	e0bff917 	ldw	r2,-28(fp)
  805e0c:	10bfffc4 	addi	r2,r2,-1
  805e10:	e0bff915 	stw	r2,-28(fp)
  805e14:	e0bff817 	ldw	r2,-32(fp)
  805e18:	10c00044 	addi	r3,r2,1
  805e1c:	e0fff815 	stw	r3,-32(fp)
  805e20:	10800003 	ldbu	r2,0(r2)
  805e24:	10803fcc 	andi	r2,r2,255
  805e28:	e0bff415 	stw	r2,-48(fp)
  805e2c:	e03ff515 	stw	zero,-44(fp)
  805e30:	00002d06 	br	805ee8 <get_sos+0x37c>
  805e34:	e0ffff17 	ldw	r3,-4(fp)
  805e38:	e0bff517 	ldw	r2,-44(fp)
  805e3c:	10801584 	addi	r2,r2,86
  805e40:	1085883a 	add	r2,r2,r2
  805e44:	1085883a 	add	r2,r2,r2
  805e48:	1885883a 	add	r2,r3,r2
  805e4c:	10800017 	ldw	r2,0(r2)
  805e50:	10c00017 	ldw	r3,0(r2)
  805e54:	e0bff417 	ldw	r2,-48(fp)
  805e58:	1880201e 	bne	r3,r2,805edc <get_sos+0x370>
  805e5c:	e0bfff17 	ldw	r2,-4(fp)
  805e60:	10805617 	ldw	r2,344(r2)
  805e64:	10800017 	ldw	r2,0(r2)
  805e68:	e0bff415 	stw	r2,-48(fp)
  805e6c:	00800044 	movi	r2,1
  805e70:	e0bff515 	stw	r2,-44(fp)
  805e74:	00001206 	br	805ec0 <get_sos+0x354>
  805e78:	e0ffff17 	ldw	r3,-4(fp)
  805e7c:	e0bff517 	ldw	r2,-44(fp)
  805e80:	10801584 	addi	r2,r2,86
  805e84:	1085883a 	add	r2,r2,r2
  805e88:	1085883a 	add	r2,r2,r2
  805e8c:	1885883a 	add	r2,r3,r2
  805e90:	10800017 	ldw	r2,0(r2)
  805e94:	e0bff715 	stw	r2,-36(fp)
  805e98:	e0bff717 	ldw	r2,-36(fp)
  805e9c:	10800017 	ldw	r2,0(r2)
  805ea0:	e0fff417 	ldw	r3,-48(fp)
  805ea4:	1880030e 	bge	r3,r2,805eb4 <get_sos+0x348>
  805ea8:	e0bff717 	ldw	r2,-36(fp)
  805eac:	10800017 	ldw	r2,0(r2)
  805eb0:	e0bff415 	stw	r2,-48(fp)
  805eb4:	e0bff517 	ldw	r2,-44(fp)
  805eb8:	10800044 	addi	r2,r2,1
  805ebc:	e0bff515 	stw	r2,-44(fp)
  805ec0:	e0fff517 	ldw	r3,-44(fp)
  805ec4:	e0bff617 	ldw	r2,-40(fp)
  805ec8:	18bfeb16 	blt	r3,r2,805e78 <__alt_mem_epcs_flash_controller_0+0xff7fce78>
  805ecc:	e0bff417 	ldw	r2,-48(fp)
  805ed0:	10800044 	addi	r2,r2,1
  805ed4:	e0bff415 	stw	r2,-48(fp)
  805ed8:	00000606 	br	805ef4 <get_sos+0x388>
  805edc:	e0bff517 	ldw	r2,-44(fp)
  805ee0:	10800044 	addi	r2,r2,1
  805ee4:	e0bff515 	stw	r2,-44(fp)
  805ee8:	e0fff517 	ldw	r3,-44(fp)
  805eec:	e0bff617 	ldw	r2,-40(fp)
  805ef0:	18bfd016 	blt	r3,r2,805e34 <__alt_mem_epcs_flash_controller_0+0xff7fce34>
  805ef4:	e03ff515 	stw	zero,-44(fp)
  805ef8:	e0bfff17 	ldw	r2,-4(fp)
  805efc:	10803617 	ldw	r2,216(r2)
  805f00:	e0bff715 	stw	r2,-36(fp)
  805f04:	00000a06 	br	805f30 <get_sos+0x3c4>
  805f08:	e0bff717 	ldw	r2,-36(fp)
  805f0c:	10c00017 	ldw	r3,0(r2)
  805f10:	e0bff417 	ldw	r2,-48(fp)
  805f14:	18801826 	beq	r3,r2,805f78 <get_sos+0x40c>
  805f18:	e0bff517 	ldw	r2,-44(fp)
  805f1c:	10800044 	addi	r2,r2,1
  805f20:	e0bff515 	stw	r2,-44(fp)
  805f24:	e0bff717 	ldw	r2,-36(fp)
  805f28:	10801604 	addi	r2,r2,88
  805f2c:	e0bff715 	stw	r2,-36(fp)
  805f30:	e0bfff17 	ldw	r2,-4(fp)
  805f34:	10800917 	ldw	r2,36(r2)
  805f38:	e0fff517 	ldw	r3,-44(fp)
  805f3c:	18bff216 	blt	r3,r2,805f08 <__alt_mem_epcs_flash_controller_0+0xff7fcf08>
  805f40:	e0bfff17 	ldw	r2,-4(fp)
  805f44:	10800017 	ldw	r2,0(r2)
  805f48:	00c00104 	movi	r3,4
  805f4c:	10c00515 	stw	r3,20(r2)
  805f50:	e0bfff17 	ldw	r2,-4(fp)
  805f54:	10800017 	ldw	r2,0(r2)
  805f58:	e0fff417 	ldw	r3,-48(fp)
  805f5c:	10c00615 	stw	r3,24(r2)
  805f60:	e0bfff17 	ldw	r2,-4(fp)
  805f64:	10800017 	ldw	r2,0(r2)
  805f68:	10800017 	ldw	r2,0(r2)
  805f6c:	e13fff17 	ldw	r4,-4(fp)
  805f70:	103ee83a 	callr	r2
  805f74:	00000106 	br	805f7c <get_sos+0x410>
  805f78:	0001883a 	nop
  805f7c:	e0ffff17 	ldw	r3,-4(fp)
  805f80:	e0bff617 	ldw	r2,-40(fp)
  805f84:	10801584 	addi	r2,r2,86
  805f88:	1085883a 	add	r2,r2,r2
  805f8c:	1085883a 	add	r2,r2,r2
  805f90:	1885883a 	add	r2,r3,r2
  805f94:	e0fff717 	ldw	r3,-36(fp)
  805f98:	10c00015 	stw	r3,0(r2)
  805f9c:	e0bff917 	ldw	r2,-28(fp)
  805fa0:	10000d1e 	bne	r2,zero,805fd8 <get_sos+0x46c>
  805fa4:	e0bffa17 	ldw	r2,-24(fp)
  805fa8:	10800317 	ldw	r2,12(r2)
  805fac:	e13fff17 	ldw	r4,-4(fp)
  805fb0:	103ee83a 	callr	r2
  805fb4:	1000021e 	bne	r2,zero,805fc0 <get_sos+0x454>
  805fb8:	0005883a 	mov	r2,zero
  805fbc:	0000c306 	br	8062cc <get_sos+0x760>
  805fc0:	e0bffa17 	ldw	r2,-24(fp)
  805fc4:	10800017 	ldw	r2,0(r2)
  805fc8:	e0bff815 	stw	r2,-32(fp)
  805fcc:	e0bffa17 	ldw	r2,-24(fp)
  805fd0:	10800117 	ldw	r2,4(r2)
  805fd4:	e0bff915 	stw	r2,-28(fp)
  805fd8:	e0bff917 	ldw	r2,-28(fp)
  805fdc:	10bfffc4 	addi	r2,r2,-1
  805fe0:	e0bff915 	stw	r2,-28(fp)
  805fe4:	e0bff817 	ldw	r2,-32(fp)
  805fe8:	10c00044 	addi	r3,r2,1
  805fec:	e0fff815 	stw	r3,-32(fp)
  805ff0:	10800003 	ldbu	r2,0(r2)
  805ff4:	10803fcc 	andi	r2,r2,255
  805ff8:	e0bff415 	stw	r2,-48(fp)
  805ffc:	e0bff417 	ldw	r2,-48(fp)
  806000:	1005d13a 	srai	r2,r2,4
  806004:	10c003cc 	andi	r3,r2,15
  806008:	e0bff717 	ldw	r2,-36(fp)
  80600c:	10c00515 	stw	r3,20(r2)
  806010:	e0bff417 	ldw	r2,-48(fp)
  806014:	10c003cc 	andi	r3,r2,15
  806018:	e0bff717 	ldw	r2,-36(fp)
  80601c:	10c00615 	stw	r3,24(r2)
  806020:	e0bfff17 	ldw	r2,-4(fp)
  806024:	10800017 	ldw	r2,0(r2)
  806028:	10800604 	addi	r2,r2,24
  80602c:	e0bffd15 	stw	r2,-12(fp)
  806030:	e0bff717 	ldw	r2,-36(fp)
  806034:	10c00017 	ldw	r3,0(r2)
  806038:	e0bffd17 	ldw	r2,-12(fp)
  80603c:	10c00015 	stw	r3,0(r2)
  806040:	e0bffd17 	ldw	r2,-12(fp)
  806044:	10800104 	addi	r2,r2,4
  806048:	e0fff717 	ldw	r3,-36(fp)
  80604c:	18c00517 	ldw	r3,20(r3)
  806050:	10c00015 	stw	r3,0(r2)
  806054:	e0bffd17 	ldw	r2,-12(fp)
  806058:	10800204 	addi	r2,r2,8
  80605c:	e0fff717 	ldw	r3,-36(fp)
  806060:	18c00617 	ldw	r3,24(r3)
  806064:	10c00015 	stw	r3,0(r2)
  806068:	e0bfff17 	ldw	r2,-4(fp)
  80606c:	10800017 	ldw	r2,0(r2)
  806070:	00c01a84 	movi	r3,106
  806074:	10c00515 	stw	r3,20(r2)
  806078:	e0bfff17 	ldw	r2,-4(fp)
  80607c:	10800017 	ldw	r2,0(r2)
  806080:	10800117 	ldw	r2,4(r2)
  806084:	01400044 	movi	r5,1
  806088:	e13fff17 	ldw	r4,-4(fp)
  80608c:	103ee83a 	callr	r2
  806090:	e0bff617 	ldw	r2,-40(fp)
  806094:	10800044 	addi	r2,r2,1
  806098:	e0bff615 	stw	r2,-40(fp)
  80609c:	e0fff617 	ldw	r3,-40(fp)
  8060a0:	e0bffc17 	ldw	r2,-16(fp)
  8060a4:	18bf4916 	blt	r3,r2,805dcc <__alt_mem_epcs_flash_controller_0+0xff7fcdcc>
  8060a8:	e0bff917 	ldw	r2,-28(fp)
  8060ac:	10000d1e 	bne	r2,zero,8060e4 <get_sos+0x578>
  8060b0:	e0bffa17 	ldw	r2,-24(fp)
  8060b4:	10800317 	ldw	r2,12(r2)
  8060b8:	e13fff17 	ldw	r4,-4(fp)
  8060bc:	103ee83a 	callr	r2
  8060c0:	1000021e 	bne	r2,zero,8060cc <get_sos+0x560>
  8060c4:	0005883a 	mov	r2,zero
  8060c8:	00008006 	br	8062cc <get_sos+0x760>
  8060cc:	e0bffa17 	ldw	r2,-24(fp)
  8060d0:	10800017 	ldw	r2,0(r2)
  8060d4:	e0bff815 	stw	r2,-32(fp)
  8060d8:	e0bffa17 	ldw	r2,-24(fp)
  8060dc:	10800117 	ldw	r2,4(r2)
  8060e0:	e0bff915 	stw	r2,-28(fp)
  8060e4:	e0bff917 	ldw	r2,-28(fp)
  8060e8:	10bfffc4 	addi	r2,r2,-1
  8060ec:	e0bff915 	stw	r2,-28(fp)
  8060f0:	e0bff817 	ldw	r2,-32(fp)
  8060f4:	10c00044 	addi	r3,r2,1
  8060f8:	e0fff815 	stw	r3,-32(fp)
  8060fc:	10800003 	ldbu	r2,0(r2)
  806100:	10803fcc 	andi	r2,r2,255
  806104:	e0bff415 	stw	r2,-48(fp)
  806108:	e0bfff17 	ldw	r2,-4(fp)
  80610c:	e0fff417 	ldw	r3,-48(fp)
  806110:	10c06715 	stw	r3,412(r2)
  806114:	e0bff917 	ldw	r2,-28(fp)
  806118:	10000d1e 	bne	r2,zero,806150 <get_sos+0x5e4>
  80611c:	e0bffa17 	ldw	r2,-24(fp)
  806120:	10800317 	ldw	r2,12(r2)
  806124:	e13fff17 	ldw	r4,-4(fp)
  806128:	103ee83a 	callr	r2
  80612c:	1000021e 	bne	r2,zero,806138 <get_sos+0x5cc>
  806130:	0005883a 	mov	r2,zero
  806134:	00006506 	br	8062cc <get_sos+0x760>
  806138:	e0bffa17 	ldw	r2,-24(fp)
  80613c:	10800017 	ldw	r2,0(r2)
  806140:	e0bff815 	stw	r2,-32(fp)
  806144:	e0bffa17 	ldw	r2,-24(fp)
  806148:	10800117 	ldw	r2,4(r2)
  80614c:	e0bff915 	stw	r2,-28(fp)
  806150:	e0bff917 	ldw	r2,-28(fp)
  806154:	10bfffc4 	addi	r2,r2,-1
  806158:	e0bff915 	stw	r2,-28(fp)
  80615c:	e0bff817 	ldw	r2,-32(fp)
  806160:	10c00044 	addi	r3,r2,1
  806164:	e0fff815 	stw	r3,-32(fp)
  806168:	10800003 	ldbu	r2,0(r2)
  80616c:	10803fcc 	andi	r2,r2,255
  806170:	e0bff415 	stw	r2,-48(fp)
  806174:	e0bfff17 	ldw	r2,-4(fp)
  806178:	e0fff417 	ldw	r3,-48(fp)
  80617c:	10c06815 	stw	r3,416(r2)
  806180:	e0bff917 	ldw	r2,-28(fp)
  806184:	10000d1e 	bne	r2,zero,8061bc <get_sos+0x650>
  806188:	e0bffa17 	ldw	r2,-24(fp)
  80618c:	10800317 	ldw	r2,12(r2)
  806190:	e13fff17 	ldw	r4,-4(fp)
  806194:	103ee83a 	callr	r2
  806198:	1000021e 	bne	r2,zero,8061a4 <get_sos+0x638>
  80619c:	0005883a 	mov	r2,zero
  8061a0:	00004a06 	br	8062cc <get_sos+0x760>
  8061a4:	e0bffa17 	ldw	r2,-24(fp)
  8061a8:	10800017 	ldw	r2,0(r2)
  8061ac:	e0bff815 	stw	r2,-32(fp)
  8061b0:	e0bffa17 	ldw	r2,-24(fp)
  8061b4:	10800117 	ldw	r2,4(r2)
  8061b8:	e0bff915 	stw	r2,-28(fp)
  8061bc:	e0bff917 	ldw	r2,-28(fp)
  8061c0:	10bfffc4 	addi	r2,r2,-1
  8061c4:	e0bff915 	stw	r2,-28(fp)
  8061c8:	e0bff817 	ldw	r2,-32(fp)
  8061cc:	10c00044 	addi	r3,r2,1
  8061d0:	e0fff815 	stw	r3,-32(fp)
  8061d4:	10800003 	ldbu	r2,0(r2)
  8061d8:	10803fcc 	andi	r2,r2,255
  8061dc:	e0bff415 	stw	r2,-48(fp)
  8061e0:	e0bff417 	ldw	r2,-48(fp)
  8061e4:	1005d13a 	srai	r2,r2,4
  8061e8:	10c003cc 	andi	r3,r2,15
  8061ec:	e0bfff17 	ldw	r2,-4(fp)
  8061f0:	10c06915 	stw	r3,420(r2)
  8061f4:	e0bff417 	ldw	r2,-48(fp)
  8061f8:	10c003cc 	andi	r3,r2,15
  8061fc:	e0bfff17 	ldw	r2,-4(fp)
  806200:	10c06a15 	stw	r3,424(r2)
  806204:	e0bfff17 	ldw	r2,-4(fp)
  806208:	10800017 	ldw	r2,0(r2)
  80620c:	10800604 	addi	r2,r2,24
  806210:	e0bffe15 	stw	r2,-8(fp)
  806214:	e0bfff17 	ldw	r2,-4(fp)
  806218:	10c06717 	ldw	r3,412(r2)
  80621c:	e0bffe17 	ldw	r2,-8(fp)
  806220:	10c00015 	stw	r3,0(r2)
  806224:	e0bffe17 	ldw	r2,-8(fp)
  806228:	10800104 	addi	r2,r2,4
  80622c:	e0ffff17 	ldw	r3,-4(fp)
  806230:	18c06817 	ldw	r3,416(r3)
  806234:	10c00015 	stw	r3,0(r2)
  806238:	e0bffe17 	ldw	r2,-8(fp)
  80623c:	10800204 	addi	r2,r2,8
  806240:	e0ffff17 	ldw	r3,-4(fp)
  806244:	18c06917 	ldw	r3,420(r3)
  806248:	10c00015 	stw	r3,0(r2)
  80624c:	e0bffe17 	ldw	r2,-8(fp)
  806250:	10800304 	addi	r2,r2,12
  806254:	e0ffff17 	ldw	r3,-4(fp)
  806258:	18c06a17 	ldw	r3,424(r3)
  80625c:	10c00015 	stw	r3,0(r2)
  806260:	e0bfff17 	ldw	r2,-4(fp)
  806264:	10800017 	ldw	r2,0(r2)
  806268:	00c01ac4 	movi	r3,107
  80626c:	10c00515 	stw	r3,20(r2)
  806270:	e0bfff17 	ldw	r2,-4(fp)
  806274:	10800017 	ldw	r2,0(r2)
  806278:	10800117 	ldw	r2,4(r2)
  80627c:	01400044 	movi	r5,1
  806280:	e13fff17 	ldw	r4,-4(fp)
  806284:	103ee83a 	callr	r2
  806288:	e0bfff17 	ldw	r2,-4(fp)
  80628c:	10807417 	ldw	r2,464(r2)
  806290:	10000515 	stw	zero,20(r2)
  806294:	e0bffc17 	ldw	r2,-16(fp)
  806298:	10000526 	beq	r2,zero,8062b0 <get_sos+0x744>
  80629c:	e0bfff17 	ldw	r2,-4(fp)
  8062a0:	10802417 	ldw	r2,144(r2)
  8062a4:	10c00044 	addi	r3,r2,1
  8062a8:	e0bfff17 	ldw	r2,-4(fp)
  8062ac:	10c02415 	stw	r3,144(r2)
  8062b0:	e0bffa17 	ldw	r2,-24(fp)
  8062b4:	e0fff817 	ldw	r3,-32(fp)
  8062b8:	10c00015 	stw	r3,0(r2)
  8062bc:	e0bffa17 	ldw	r2,-24(fp)
  8062c0:	e0fff917 	ldw	r3,-28(fp)
  8062c4:	10c00115 	stw	r3,4(r2)
  8062c8:	00800044 	movi	r2,1
  8062cc:	e037883a 	mov	sp,fp
  8062d0:	dfc00117 	ldw	ra,4(sp)
  8062d4:	df000017 	ldw	fp,0(sp)
  8062d8:	dec00204 	addi	sp,sp,8
  8062dc:	f800283a 	ret

008062e0 <get_dac>:
  8062e0:	defff704 	addi	sp,sp,-36
  8062e4:	dfc00815 	stw	ra,32(sp)
  8062e8:	df000715 	stw	fp,28(sp)
  8062ec:	df000704 	addi	fp,sp,28
  8062f0:	e13fff15 	stw	r4,-4(fp)
  8062f4:	e0bfff17 	ldw	r2,-4(fp)
  8062f8:	10800617 	ldw	r2,24(r2)
  8062fc:	e0bffc15 	stw	r2,-16(fp)
  806300:	e0bffc17 	ldw	r2,-16(fp)
  806304:	10800017 	ldw	r2,0(r2)
  806308:	e0bffa15 	stw	r2,-24(fp)
  80630c:	e0bffc17 	ldw	r2,-16(fp)
  806310:	10800117 	ldw	r2,4(r2)
  806314:	e0bffb15 	stw	r2,-20(fp)
  806318:	e0bffb17 	ldw	r2,-20(fp)
  80631c:	10000d1e 	bne	r2,zero,806354 <get_dac+0x74>
  806320:	e0bffc17 	ldw	r2,-16(fp)
  806324:	10800317 	ldw	r2,12(r2)
  806328:	e13fff17 	ldw	r4,-4(fp)
  80632c:	103ee83a 	callr	r2
  806330:	1000021e 	bne	r2,zero,80633c <get_dac+0x5c>
  806334:	0005883a 	mov	r2,zero
  806338:	0000cf06 	br	806678 <get_dac+0x398>
  80633c:	e0bffc17 	ldw	r2,-16(fp)
  806340:	10800017 	ldw	r2,0(r2)
  806344:	e0bffa15 	stw	r2,-24(fp)
  806348:	e0bffc17 	ldw	r2,-16(fp)
  80634c:	10800117 	ldw	r2,4(r2)
  806350:	e0bffb15 	stw	r2,-20(fp)
  806354:	e0bffb17 	ldw	r2,-20(fp)
  806358:	10bfffc4 	addi	r2,r2,-1
  80635c:	e0bffb15 	stw	r2,-20(fp)
  806360:	e0bffa17 	ldw	r2,-24(fp)
  806364:	10c00044 	addi	r3,r2,1
  806368:	e0fffa15 	stw	r3,-24(fp)
  80636c:	10800003 	ldbu	r2,0(r2)
  806370:	10803fcc 	andi	r2,r2,255
  806374:	1004923a 	slli	r2,r2,8
  806378:	e0bff915 	stw	r2,-28(fp)
  80637c:	e0bffb17 	ldw	r2,-20(fp)
  806380:	10000d1e 	bne	r2,zero,8063b8 <get_dac+0xd8>
  806384:	e0bffc17 	ldw	r2,-16(fp)
  806388:	10800317 	ldw	r2,12(r2)
  80638c:	e13fff17 	ldw	r4,-4(fp)
  806390:	103ee83a 	callr	r2
  806394:	1000021e 	bne	r2,zero,8063a0 <get_dac+0xc0>
  806398:	0005883a 	mov	r2,zero
  80639c:	0000b606 	br	806678 <get_dac+0x398>
  8063a0:	e0bffc17 	ldw	r2,-16(fp)
  8063a4:	10800017 	ldw	r2,0(r2)
  8063a8:	e0bffa15 	stw	r2,-24(fp)
  8063ac:	e0bffc17 	ldw	r2,-16(fp)
  8063b0:	10800117 	ldw	r2,4(r2)
  8063b4:	e0bffb15 	stw	r2,-20(fp)
  8063b8:	e0bffb17 	ldw	r2,-20(fp)
  8063bc:	10bfffc4 	addi	r2,r2,-1
  8063c0:	e0bffb15 	stw	r2,-20(fp)
  8063c4:	e0bffa17 	ldw	r2,-24(fp)
  8063c8:	10c00044 	addi	r3,r2,1
  8063cc:	e0fffa15 	stw	r3,-24(fp)
  8063d0:	10800003 	ldbu	r2,0(r2)
  8063d4:	10803fcc 	andi	r2,r2,255
  8063d8:	e0fff917 	ldw	r3,-28(fp)
  8063dc:	1885883a 	add	r2,r3,r2
  8063e0:	e0bff915 	stw	r2,-28(fp)
  8063e4:	e0bff917 	ldw	r2,-28(fp)
  8063e8:	10bfff84 	addi	r2,r2,-2
  8063ec:	e0bff915 	stw	r2,-28(fp)
  8063f0:	00008d06 	br	806628 <get_dac+0x348>
  8063f4:	e0bffb17 	ldw	r2,-20(fp)
  8063f8:	10000d1e 	bne	r2,zero,806430 <get_dac+0x150>
  8063fc:	e0bffc17 	ldw	r2,-16(fp)
  806400:	10800317 	ldw	r2,12(r2)
  806404:	e13fff17 	ldw	r4,-4(fp)
  806408:	103ee83a 	callr	r2
  80640c:	1000021e 	bne	r2,zero,806418 <get_dac+0x138>
  806410:	0005883a 	mov	r2,zero
  806414:	00009806 	br	806678 <get_dac+0x398>
  806418:	e0bffc17 	ldw	r2,-16(fp)
  80641c:	10800017 	ldw	r2,0(r2)
  806420:	e0bffa15 	stw	r2,-24(fp)
  806424:	e0bffc17 	ldw	r2,-16(fp)
  806428:	10800117 	ldw	r2,4(r2)
  80642c:	e0bffb15 	stw	r2,-20(fp)
  806430:	e0bffb17 	ldw	r2,-20(fp)
  806434:	10bfffc4 	addi	r2,r2,-1
  806438:	e0bffb15 	stw	r2,-20(fp)
  80643c:	e0bffa17 	ldw	r2,-24(fp)
  806440:	10c00044 	addi	r3,r2,1
  806444:	e0fffa15 	stw	r3,-24(fp)
  806448:	10800003 	ldbu	r2,0(r2)
  80644c:	10803fcc 	andi	r2,r2,255
  806450:	e0bffd15 	stw	r2,-12(fp)
  806454:	e0bffb17 	ldw	r2,-20(fp)
  806458:	10000d1e 	bne	r2,zero,806490 <get_dac+0x1b0>
  80645c:	e0bffc17 	ldw	r2,-16(fp)
  806460:	10800317 	ldw	r2,12(r2)
  806464:	e13fff17 	ldw	r4,-4(fp)
  806468:	103ee83a 	callr	r2
  80646c:	1000021e 	bne	r2,zero,806478 <get_dac+0x198>
  806470:	0005883a 	mov	r2,zero
  806474:	00008006 	br	806678 <get_dac+0x398>
  806478:	e0bffc17 	ldw	r2,-16(fp)
  80647c:	10800017 	ldw	r2,0(r2)
  806480:	e0bffa15 	stw	r2,-24(fp)
  806484:	e0bffc17 	ldw	r2,-16(fp)
  806488:	10800117 	ldw	r2,4(r2)
  80648c:	e0bffb15 	stw	r2,-20(fp)
  806490:	e0bffb17 	ldw	r2,-20(fp)
  806494:	10bfffc4 	addi	r2,r2,-1
  806498:	e0bffb15 	stw	r2,-20(fp)
  80649c:	e0bffa17 	ldw	r2,-24(fp)
  8064a0:	10c00044 	addi	r3,r2,1
  8064a4:	e0fffa15 	stw	r3,-24(fp)
  8064a8:	10800003 	ldbu	r2,0(r2)
  8064ac:	10803fcc 	andi	r2,r2,255
  8064b0:	e0bffe15 	stw	r2,-8(fp)
  8064b4:	e0bff917 	ldw	r2,-28(fp)
  8064b8:	10bfff84 	addi	r2,r2,-2
  8064bc:	e0bff915 	stw	r2,-28(fp)
  8064c0:	e0bfff17 	ldw	r2,-4(fp)
  8064c4:	10800017 	ldw	r2,0(r2)
  8064c8:	00c01444 	movi	r3,81
  8064cc:	10c00515 	stw	r3,20(r2)
  8064d0:	e0bfff17 	ldw	r2,-4(fp)
  8064d4:	10800017 	ldw	r2,0(r2)
  8064d8:	e0fffd17 	ldw	r3,-12(fp)
  8064dc:	10c00615 	stw	r3,24(r2)
  8064e0:	e0bfff17 	ldw	r2,-4(fp)
  8064e4:	10800017 	ldw	r2,0(r2)
  8064e8:	e0fffe17 	ldw	r3,-8(fp)
  8064ec:	10c00715 	stw	r3,28(r2)
  8064f0:	e0bfff17 	ldw	r2,-4(fp)
  8064f4:	10800017 	ldw	r2,0(r2)
  8064f8:	10800117 	ldw	r2,4(r2)
  8064fc:	01400044 	movi	r5,1
  806500:	e13fff17 	ldw	r4,-4(fp)
  806504:	103ee83a 	callr	r2
  806508:	e0bffd17 	ldw	r2,-12(fp)
  80650c:	10000316 	blt	r2,zero,80651c <get_dac+0x23c>
  806510:	e0bffd17 	ldw	r2,-12(fp)
  806514:	10800810 	cmplti	r2,r2,32
  806518:	10000d1e 	bne	r2,zero,806550 <get_dac+0x270>
  80651c:	e0bfff17 	ldw	r2,-4(fp)
  806520:	10800017 	ldw	r2,0(r2)
  806524:	00c00744 	movi	r3,29
  806528:	10c00515 	stw	r3,20(r2)
  80652c:	e0bfff17 	ldw	r2,-4(fp)
  806530:	10800017 	ldw	r2,0(r2)
  806534:	e0fffd17 	ldw	r3,-12(fp)
  806538:	10c00615 	stw	r3,24(r2)
  80653c:	e0bfff17 	ldw	r2,-4(fp)
  806540:	10800017 	ldw	r2,0(r2)
  806544:	10800017 	ldw	r2,0(r2)
  806548:	e13fff17 	ldw	r4,-4(fp)
  80654c:	103ee83a 	callr	r2
  806550:	e0bffd17 	ldw	r2,-12(fp)
  806554:	10800410 	cmplti	r2,r2,16
  806558:	1000091e 	bne	r2,zero,806580 <get_dac+0x2a0>
  80655c:	e0bffd17 	ldw	r2,-12(fp)
  806560:	10bffc04 	addi	r2,r2,-16
  806564:	e0fffe17 	ldw	r3,-8(fp)
  806568:	1809883a 	mov	r4,r3
  80656c:	e0ffff17 	ldw	r3,-4(fp)
  806570:	1885883a 	add	r2,r3,r2
  806574:	10804204 	addi	r2,r2,264
  806578:	11000005 	stb	r4,0(r2)
  80657c:	00002a06 	br	806628 <get_dac+0x348>
  806580:	e0bffe17 	ldw	r2,-8(fp)
  806584:	108003cc 	andi	r2,r2,15
  806588:	1009883a 	mov	r4,r2
  80658c:	e0ffff17 	ldw	r3,-4(fp)
  806590:	e0bffd17 	ldw	r2,-12(fp)
  806594:	1885883a 	add	r2,r3,r2
  806598:	10803a04 	addi	r2,r2,232
  80659c:	11000005 	stb	r4,0(r2)
  8065a0:	e0bffe17 	ldw	r2,-8(fp)
  8065a4:	1005d13a 	srai	r2,r2,4
  8065a8:	1009883a 	mov	r4,r2
  8065ac:	e0ffff17 	ldw	r3,-4(fp)
  8065b0:	e0bffd17 	ldw	r2,-12(fp)
  8065b4:	1885883a 	add	r2,r3,r2
  8065b8:	10803e04 	addi	r2,r2,248
  8065bc:	11000005 	stb	r4,0(r2)
  8065c0:	e0ffff17 	ldw	r3,-4(fp)
  8065c4:	e0bffd17 	ldw	r2,-12(fp)
  8065c8:	1885883a 	add	r2,r3,r2
  8065cc:	10803a04 	addi	r2,r2,232
  8065d0:	11000003 	ldbu	r4,0(r2)
  8065d4:	e0ffff17 	ldw	r3,-4(fp)
  8065d8:	e0bffd17 	ldw	r2,-12(fp)
  8065dc:	1885883a 	add	r2,r3,r2
  8065e0:	10803e04 	addi	r2,r2,248
  8065e4:	10c00003 	ldbu	r3,0(r2)
  8065e8:	20803fcc 	andi	r2,r4,255
  8065ec:	18c03fcc 	andi	r3,r3,255
  8065f0:	18800d2e 	bgeu	r3,r2,806628 <get_dac+0x348>
  8065f4:	e0bfff17 	ldw	r2,-4(fp)
  8065f8:	10800017 	ldw	r2,0(r2)
  8065fc:	00c00784 	movi	r3,30
  806600:	10c00515 	stw	r3,20(r2)
  806604:	e0bfff17 	ldw	r2,-4(fp)
  806608:	10800017 	ldw	r2,0(r2)
  80660c:	e0fffe17 	ldw	r3,-8(fp)
  806610:	10c00615 	stw	r3,24(r2)
  806614:	e0bfff17 	ldw	r2,-4(fp)
  806618:	10800017 	ldw	r2,0(r2)
  80661c:	10800017 	ldw	r2,0(r2)
  806620:	e13fff17 	ldw	r4,-4(fp)
  806624:	103ee83a 	callr	r2
  806628:	e0bff917 	ldw	r2,-28(fp)
  80662c:	00bf7116 	blt	zero,r2,8063f4 <__alt_mem_epcs_flash_controller_0+0xff7fd3f4>
  806630:	e0bff917 	ldw	r2,-28(fp)
  806634:	10000926 	beq	r2,zero,80665c <get_dac+0x37c>
  806638:	e0bfff17 	ldw	r2,-4(fp)
  80663c:	10800017 	ldw	r2,0(r2)
  806640:	00c00304 	movi	r3,12
  806644:	10c00515 	stw	r3,20(r2)
  806648:	e0bfff17 	ldw	r2,-4(fp)
  80664c:	10800017 	ldw	r2,0(r2)
  806650:	10800017 	ldw	r2,0(r2)
  806654:	e13fff17 	ldw	r4,-4(fp)
  806658:	103ee83a 	callr	r2
  80665c:	e0bffc17 	ldw	r2,-16(fp)
  806660:	e0fffa17 	ldw	r3,-24(fp)
  806664:	10c00015 	stw	r3,0(r2)
  806668:	e0bffc17 	ldw	r2,-16(fp)
  80666c:	e0fffb17 	ldw	r3,-20(fp)
  806670:	10c00115 	stw	r3,4(r2)
  806674:	00800044 	movi	r2,1
  806678:	e037883a 	mov	sp,fp
  80667c:	dfc00117 	ldw	ra,4(sp)
  806680:	df000017 	ldw	fp,0(sp)
  806684:	dec00204 	addi	sp,sp,8
  806688:	f800283a 	ret

0080668c <get_dht>:
  80668c:	deffae04 	addi	sp,sp,-328
  806690:	dfc05115 	stw	ra,324(sp)
  806694:	df005015 	stw	fp,320(sp)
  806698:	df005004 	addi	fp,sp,320
  80669c:	e13fff15 	stw	r4,-4(fp)
  8066a0:	e0bfff17 	ldw	r2,-4(fp)
  8066a4:	10800617 	ldw	r2,24(r2)
  8066a8:	e0bfb715 	stw	r2,-292(fp)
  8066ac:	e0bfb717 	ldw	r2,-292(fp)
  8066b0:	10800017 	ldw	r2,0(r2)
  8066b4:	e0bfb515 	stw	r2,-300(fp)
  8066b8:	e0bfb717 	ldw	r2,-292(fp)
  8066bc:	10800117 	ldw	r2,4(r2)
  8066c0:	e0bfb615 	stw	r2,-296(fp)
  8066c4:	e0bfb617 	ldw	r2,-296(fp)
  8066c8:	10000d1e 	bne	r2,zero,806700 <get_dht+0x74>
  8066cc:	e0bfb717 	ldw	r2,-292(fp)
  8066d0:	10800317 	ldw	r2,12(r2)
  8066d4:	e13fff17 	ldw	r4,-4(fp)
  8066d8:	103ee83a 	callr	r2
  8066dc:	1000021e 	bne	r2,zero,8066e8 <get_dht+0x5c>
  8066e0:	0005883a 	mov	r2,zero
  8066e4:	00017d06 	br	806cdc <get_dht+0x650>
  8066e8:	e0bfb717 	ldw	r2,-292(fp)
  8066ec:	10800017 	ldw	r2,0(r2)
  8066f0:	e0bfb515 	stw	r2,-300(fp)
  8066f4:	e0bfb717 	ldw	r2,-292(fp)
  8066f8:	10800117 	ldw	r2,4(r2)
  8066fc:	e0bfb615 	stw	r2,-296(fp)
  806700:	e0bfb617 	ldw	r2,-296(fp)
  806704:	10bfffc4 	addi	r2,r2,-1
  806708:	e0bfb615 	stw	r2,-296(fp)
  80670c:	e0bfb517 	ldw	r2,-300(fp)
  806710:	10c00044 	addi	r3,r2,1
  806714:	e0ffb515 	stw	r3,-300(fp)
  806718:	10800003 	ldbu	r2,0(r2)
  80671c:	10803fcc 	andi	r2,r2,255
  806720:	1004923a 	slli	r2,r2,8
  806724:	e0bfb015 	stw	r2,-320(fp)
  806728:	e0bfb617 	ldw	r2,-296(fp)
  80672c:	10000d1e 	bne	r2,zero,806764 <get_dht+0xd8>
  806730:	e0bfb717 	ldw	r2,-292(fp)
  806734:	10800317 	ldw	r2,12(r2)
  806738:	e13fff17 	ldw	r4,-4(fp)
  80673c:	103ee83a 	callr	r2
  806740:	1000021e 	bne	r2,zero,80674c <get_dht+0xc0>
  806744:	0005883a 	mov	r2,zero
  806748:	00016406 	br	806cdc <get_dht+0x650>
  80674c:	e0bfb717 	ldw	r2,-292(fp)
  806750:	10800017 	ldw	r2,0(r2)
  806754:	e0bfb515 	stw	r2,-300(fp)
  806758:	e0bfb717 	ldw	r2,-292(fp)
  80675c:	10800117 	ldw	r2,4(r2)
  806760:	e0bfb615 	stw	r2,-296(fp)
  806764:	e0bfb617 	ldw	r2,-296(fp)
  806768:	10bfffc4 	addi	r2,r2,-1
  80676c:	e0bfb615 	stw	r2,-296(fp)
  806770:	e0bfb517 	ldw	r2,-300(fp)
  806774:	10c00044 	addi	r3,r2,1
  806778:	e0ffb515 	stw	r3,-300(fp)
  80677c:	10800003 	ldbu	r2,0(r2)
  806780:	10803fcc 	andi	r2,r2,255
  806784:	e0ffb017 	ldw	r3,-320(fp)
  806788:	1885883a 	add	r2,r3,r2
  80678c:	e0bfb015 	stw	r2,-320(fp)
  806790:	e0bfb017 	ldw	r2,-320(fp)
  806794:	10bfff84 	addi	r2,r2,-2
  806798:	e0bfb015 	stw	r2,-320(fp)
  80679c:	00013a06 	br	806c88 <get_dht+0x5fc>
  8067a0:	e0bfb617 	ldw	r2,-296(fp)
  8067a4:	10000d1e 	bne	r2,zero,8067dc <get_dht+0x150>
  8067a8:	e0bfb717 	ldw	r2,-292(fp)
  8067ac:	10800317 	ldw	r2,12(r2)
  8067b0:	e13fff17 	ldw	r4,-4(fp)
  8067b4:	103ee83a 	callr	r2
  8067b8:	1000021e 	bne	r2,zero,8067c4 <get_dht+0x138>
  8067bc:	0005883a 	mov	r2,zero
  8067c0:	00014606 	br	806cdc <get_dht+0x650>
  8067c4:	e0bfb717 	ldw	r2,-292(fp)
  8067c8:	10800017 	ldw	r2,0(r2)
  8067cc:	e0bfb515 	stw	r2,-300(fp)
  8067d0:	e0bfb717 	ldw	r2,-292(fp)
  8067d4:	10800117 	ldw	r2,4(r2)
  8067d8:	e0bfb615 	stw	r2,-296(fp)
  8067dc:	e0bfb617 	ldw	r2,-296(fp)
  8067e0:	10bfffc4 	addi	r2,r2,-1
  8067e4:	e0bfb615 	stw	r2,-296(fp)
  8067e8:	e0bfb517 	ldw	r2,-300(fp)
  8067ec:	10c00044 	addi	r3,r2,1
  8067f0:	e0ffb515 	stw	r3,-300(fp)
  8067f4:	10800003 	ldbu	r2,0(r2)
  8067f8:	10803fcc 	andi	r2,r2,255
  8067fc:	e0bfb215 	stw	r2,-312(fp)
  806800:	e0bfff17 	ldw	r2,-4(fp)
  806804:	10800017 	ldw	r2,0(r2)
  806808:	00c01484 	movi	r3,82
  80680c:	10c00515 	stw	r3,20(r2)
  806810:	e0bfff17 	ldw	r2,-4(fp)
  806814:	10800017 	ldw	r2,0(r2)
  806818:	e0ffb217 	ldw	r3,-312(fp)
  80681c:	10c00615 	stw	r3,24(r2)
  806820:	e0bfff17 	ldw	r2,-4(fp)
  806824:	10800017 	ldw	r2,0(r2)
  806828:	10800117 	ldw	r2,4(r2)
  80682c:	01400044 	movi	r5,1
  806830:	e13fff17 	ldw	r4,-4(fp)
  806834:	103ee83a 	callr	r2
  806838:	e03fba05 	stb	zero,-280(fp)
  80683c:	e03fb315 	stw	zero,-308(fp)
  806840:	00800044 	movi	r2,1
  806844:	e0bfb115 	stw	r2,-316(fp)
  806848:	00002506 	br	8068e0 <get_dht+0x254>
  80684c:	e0bfb617 	ldw	r2,-296(fp)
  806850:	10000d1e 	bne	r2,zero,806888 <get_dht+0x1fc>
  806854:	e0bfb717 	ldw	r2,-292(fp)
  806858:	10800317 	ldw	r2,12(r2)
  80685c:	e13fff17 	ldw	r4,-4(fp)
  806860:	103ee83a 	callr	r2
  806864:	1000021e 	bne	r2,zero,806870 <get_dht+0x1e4>
  806868:	0005883a 	mov	r2,zero
  80686c:	00011b06 	br	806cdc <get_dht+0x650>
  806870:	e0bfb717 	ldw	r2,-292(fp)
  806874:	10800017 	ldw	r2,0(r2)
  806878:	e0bfb515 	stw	r2,-300(fp)
  80687c:	e0bfb717 	ldw	r2,-292(fp)
  806880:	10800117 	ldw	r2,4(r2)
  806884:	e0bfb615 	stw	r2,-296(fp)
  806888:	e0bfb617 	ldw	r2,-296(fp)
  80688c:	10bfffc4 	addi	r2,r2,-1
  806890:	e0bfb615 	stw	r2,-296(fp)
  806894:	e0bfb517 	ldw	r2,-300(fp)
  806898:	10c00044 	addi	r3,r2,1
  80689c:	e0ffb515 	stw	r3,-300(fp)
  8068a0:	10c00003 	ldbu	r3,0(r2)
  8068a4:	e13fba04 	addi	r4,fp,-280
  8068a8:	e0bfb117 	ldw	r2,-316(fp)
  8068ac:	2085883a 	add	r2,r4,r2
  8068b0:	10c00005 	stb	r3,0(r2)
  8068b4:	e0ffba04 	addi	r3,fp,-280
  8068b8:	e0bfb117 	ldw	r2,-316(fp)
  8068bc:	1885883a 	add	r2,r3,r2
  8068c0:	10800003 	ldbu	r2,0(r2)
  8068c4:	10803fcc 	andi	r2,r2,255
  8068c8:	e0ffb317 	ldw	r3,-308(fp)
  8068cc:	1885883a 	add	r2,r3,r2
  8068d0:	e0bfb315 	stw	r2,-308(fp)
  8068d4:	e0bfb117 	ldw	r2,-316(fp)
  8068d8:	10800044 	addi	r2,r2,1
  8068dc:	e0bfb115 	stw	r2,-316(fp)
  8068e0:	e0bfb117 	ldw	r2,-316(fp)
  8068e4:	10800450 	cmplti	r2,r2,17
  8068e8:	103fd81e 	bne	r2,zero,80684c <__alt_mem_epcs_flash_controller_0+0xff7fd84c>
  8068ec:	e0bfb017 	ldw	r2,-320(fp)
  8068f0:	10bffbc4 	addi	r2,r2,-17
  8068f4:	e0bfb015 	stw	r2,-320(fp)
  8068f8:	e0bfff17 	ldw	r2,-4(fp)
  8068fc:	10800017 	ldw	r2,0(r2)
  806900:	10800604 	addi	r2,r2,24
  806904:	e0bfb815 	stw	r2,-288(fp)
  806908:	e0bfba43 	ldbu	r2,-279(fp)
  80690c:	10c03fcc 	andi	r3,r2,255
  806910:	e0bfb817 	ldw	r2,-288(fp)
  806914:	10c00015 	stw	r3,0(r2)
  806918:	e0bfb817 	ldw	r2,-288(fp)
  80691c:	10800104 	addi	r2,r2,4
  806920:	e0ffba83 	ldbu	r3,-278(fp)
  806924:	18c03fcc 	andi	r3,r3,255
  806928:	10c00015 	stw	r3,0(r2)
  80692c:	e0bfb817 	ldw	r2,-288(fp)
  806930:	10800204 	addi	r2,r2,8
  806934:	e0ffbac3 	ldbu	r3,-277(fp)
  806938:	18c03fcc 	andi	r3,r3,255
  80693c:	10c00015 	stw	r3,0(r2)
  806940:	e0bfb817 	ldw	r2,-288(fp)
  806944:	10800304 	addi	r2,r2,12
  806948:	e0ffbb03 	ldbu	r3,-276(fp)
  80694c:	18c03fcc 	andi	r3,r3,255
  806950:	10c00015 	stw	r3,0(r2)
  806954:	e0bfb817 	ldw	r2,-288(fp)
  806958:	10800404 	addi	r2,r2,16
  80695c:	e0ffbb43 	ldbu	r3,-275(fp)
  806960:	18c03fcc 	andi	r3,r3,255
  806964:	10c00015 	stw	r3,0(r2)
  806968:	e0bfb817 	ldw	r2,-288(fp)
  80696c:	10800504 	addi	r2,r2,20
  806970:	e0ffbb83 	ldbu	r3,-274(fp)
  806974:	18c03fcc 	andi	r3,r3,255
  806978:	10c00015 	stw	r3,0(r2)
  80697c:	e0bfb817 	ldw	r2,-288(fp)
  806980:	10800604 	addi	r2,r2,24
  806984:	e0ffbbc3 	ldbu	r3,-273(fp)
  806988:	18c03fcc 	andi	r3,r3,255
  80698c:	10c00015 	stw	r3,0(r2)
  806990:	e0bfb817 	ldw	r2,-288(fp)
  806994:	10800704 	addi	r2,r2,28
  806998:	e0ffbc03 	ldbu	r3,-272(fp)
  80699c:	18c03fcc 	andi	r3,r3,255
  8069a0:	10c00015 	stw	r3,0(r2)
  8069a4:	e0bfff17 	ldw	r2,-4(fp)
  8069a8:	10800017 	ldw	r2,0(r2)
  8069ac:	00c01604 	movi	r3,88
  8069b0:	10c00515 	stw	r3,20(r2)
  8069b4:	e0bfff17 	ldw	r2,-4(fp)
  8069b8:	10800017 	ldw	r2,0(r2)
  8069bc:	10800117 	ldw	r2,4(r2)
  8069c0:	01400084 	movi	r5,2
  8069c4:	e13fff17 	ldw	r4,-4(fp)
  8069c8:	103ee83a 	callr	r2
  8069cc:	e0bfff17 	ldw	r2,-4(fp)
  8069d0:	10800017 	ldw	r2,0(r2)
  8069d4:	10800604 	addi	r2,r2,24
  8069d8:	e0bfb915 	stw	r2,-284(fp)
  8069dc:	e0bfbc43 	ldbu	r2,-271(fp)
  8069e0:	10c03fcc 	andi	r3,r2,255
  8069e4:	e0bfb917 	ldw	r2,-284(fp)
  8069e8:	10c00015 	stw	r3,0(r2)
  8069ec:	e0bfb917 	ldw	r2,-284(fp)
  8069f0:	10800104 	addi	r2,r2,4
  8069f4:	e0ffbc83 	ldbu	r3,-270(fp)
  8069f8:	18c03fcc 	andi	r3,r3,255
  8069fc:	10c00015 	stw	r3,0(r2)
  806a00:	e0bfb917 	ldw	r2,-284(fp)
  806a04:	10800204 	addi	r2,r2,8
  806a08:	e0ffbcc3 	ldbu	r3,-269(fp)
  806a0c:	18c03fcc 	andi	r3,r3,255
  806a10:	10c00015 	stw	r3,0(r2)
  806a14:	e0bfb917 	ldw	r2,-284(fp)
  806a18:	10800304 	addi	r2,r2,12
  806a1c:	e0ffbd03 	ldbu	r3,-268(fp)
  806a20:	18c03fcc 	andi	r3,r3,255
  806a24:	10c00015 	stw	r3,0(r2)
  806a28:	e0bfb917 	ldw	r2,-284(fp)
  806a2c:	10800404 	addi	r2,r2,16
  806a30:	e0ffbd43 	ldbu	r3,-267(fp)
  806a34:	18c03fcc 	andi	r3,r3,255
  806a38:	10c00015 	stw	r3,0(r2)
  806a3c:	e0bfb917 	ldw	r2,-284(fp)
  806a40:	10800504 	addi	r2,r2,20
  806a44:	e0ffbd83 	ldbu	r3,-266(fp)
  806a48:	18c03fcc 	andi	r3,r3,255
  806a4c:	10c00015 	stw	r3,0(r2)
  806a50:	e0bfb917 	ldw	r2,-284(fp)
  806a54:	10800604 	addi	r2,r2,24
  806a58:	e0ffbdc3 	ldbu	r3,-265(fp)
  806a5c:	18c03fcc 	andi	r3,r3,255
  806a60:	10c00015 	stw	r3,0(r2)
  806a64:	e0bfb917 	ldw	r2,-284(fp)
  806a68:	10800704 	addi	r2,r2,28
  806a6c:	e0ffbe03 	ldbu	r3,-264(fp)
  806a70:	18c03fcc 	andi	r3,r3,255
  806a74:	10c00015 	stw	r3,0(r2)
  806a78:	e0bfff17 	ldw	r2,-4(fp)
  806a7c:	10800017 	ldw	r2,0(r2)
  806a80:	00c01604 	movi	r3,88
  806a84:	10c00515 	stw	r3,20(r2)
  806a88:	e0bfff17 	ldw	r2,-4(fp)
  806a8c:	10800017 	ldw	r2,0(r2)
  806a90:	10800117 	ldw	r2,4(r2)
  806a94:	01400084 	movi	r5,2
  806a98:	e13fff17 	ldw	r4,-4(fp)
  806a9c:	103ee83a 	callr	r2
  806aa0:	e0bfb317 	ldw	r2,-308(fp)
  806aa4:	10804048 	cmpgei	r2,r2,257
  806aa8:	1000031e 	bne	r2,zero,806ab8 <get_dht+0x42c>
  806aac:	e0bfb317 	ldw	r2,-308(fp)
  806ab0:	e0ffb017 	ldw	r3,-320(fp)
  806ab4:	1880090e 	bge	r3,r2,806adc <get_dht+0x450>
  806ab8:	e0bfff17 	ldw	r2,-4(fp)
  806abc:	10800017 	ldw	r2,0(r2)
  806ac0:	00c00244 	movi	r3,9
  806ac4:	10c00515 	stw	r3,20(r2)
  806ac8:	e0bfff17 	ldw	r2,-4(fp)
  806acc:	10800017 	ldw	r2,0(r2)
  806ad0:	10800017 	ldw	r2,0(r2)
  806ad4:	e13fff17 	ldw	r4,-4(fp)
  806ad8:	103ee83a 	callr	r2
  806adc:	e0bfbe44 	addi	r2,fp,-263
  806ae0:	01804004 	movi	r6,256
  806ae4:	000b883a 	mov	r5,zero
  806ae8:	1009883a 	mov	r4,r2
  806aec:	08342980 	call	834298 <memset>
  806af0:	e03fb115 	stw	zero,-316(fp)
  806af4:	00001d06 	br	806b6c <get_dht+0x4e0>
  806af8:	e0bfb617 	ldw	r2,-296(fp)
  806afc:	10000d1e 	bne	r2,zero,806b34 <get_dht+0x4a8>
  806b00:	e0bfb717 	ldw	r2,-292(fp)
  806b04:	10800317 	ldw	r2,12(r2)
  806b08:	e13fff17 	ldw	r4,-4(fp)
  806b0c:	103ee83a 	callr	r2
  806b10:	1000021e 	bne	r2,zero,806b1c <get_dht+0x490>
  806b14:	0005883a 	mov	r2,zero
  806b18:	00007006 	br	806cdc <get_dht+0x650>
  806b1c:	e0bfb717 	ldw	r2,-292(fp)
  806b20:	10800017 	ldw	r2,0(r2)
  806b24:	e0bfb515 	stw	r2,-300(fp)
  806b28:	e0bfb717 	ldw	r2,-292(fp)
  806b2c:	10800117 	ldw	r2,4(r2)
  806b30:	e0bfb615 	stw	r2,-296(fp)
  806b34:	e0bfb617 	ldw	r2,-296(fp)
  806b38:	10bfffc4 	addi	r2,r2,-1
  806b3c:	e0bfb615 	stw	r2,-296(fp)
  806b40:	e0bfb517 	ldw	r2,-300(fp)
  806b44:	10c00044 	addi	r3,r2,1
  806b48:	e0ffb515 	stw	r3,-300(fp)
  806b4c:	10c00003 	ldbu	r3,0(r2)
  806b50:	e13fbe44 	addi	r4,fp,-263
  806b54:	e0bfb117 	ldw	r2,-316(fp)
  806b58:	2085883a 	add	r2,r4,r2
  806b5c:	10c00005 	stb	r3,0(r2)
  806b60:	e0bfb117 	ldw	r2,-316(fp)
  806b64:	10800044 	addi	r2,r2,1
  806b68:	e0bfb115 	stw	r2,-316(fp)
  806b6c:	e0ffb117 	ldw	r3,-316(fp)
  806b70:	e0bfb317 	ldw	r2,-308(fp)
  806b74:	18bfe016 	blt	r3,r2,806af8 <__alt_mem_epcs_flash_controller_0+0xff7fdaf8>
  806b78:	e0ffb017 	ldw	r3,-320(fp)
  806b7c:	e0bfb317 	ldw	r2,-308(fp)
  806b80:	1885c83a 	sub	r2,r3,r2
  806b84:	e0bfb015 	stw	r2,-320(fp)
  806b88:	e0bfb217 	ldw	r2,-312(fp)
  806b8c:	1080040c 	andi	r2,r2,16
  806b90:	10000b26 	beq	r2,zero,806bc0 <get_dht+0x534>
  806b94:	e0bfb217 	ldw	r2,-312(fp)
  806b98:	10bffc04 	addi	r2,r2,-16
  806b9c:	e0bfb215 	stw	r2,-312(fp)
  806ba0:	e0bfb217 	ldw	r2,-312(fp)
  806ba4:	10800c44 	addi	r2,r2,49
  806ba8:	1085883a 	add	r2,r2,r2
  806bac:	1085883a 	add	r2,r2,r2
  806bb0:	e0ffff17 	ldw	r3,-4(fp)
  806bb4:	1885883a 	add	r2,r3,r2
  806bb8:	e0bfb415 	stw	r2,-304(fp)
  806bbc:	00000706 	br	806bdc <get_dht+0x550>
  806bc0:	e0bfb217 	ldw	r2,-312(fp)
  806bc4:	10800b44 	addi	r2,r2,45
  806bc8:	1085883a 	add	r2,r2,r2
  806bcc:	1085883a 	add	r2,r2,r2
  806bd0:	e0ffff17 	ldw	r3,-4(fp)
  806bd4:	1885883a 	add	r2,r3,r2
  806bd8:	e0bfb415 	stw	r2,-304(fp)
  806bdc:	e0bfb217 	ldw	r2,-312(fp)
  806be0:	10000316 	blt	r2,zero,806bf0 <get_dht+0x564>
  806be4:	e0bfb217 	ldw	r2,-312(fp)
  806be8:	10800110 	cmplti	r2,r2,4
  806bec:	10000d1e 	bne	r2,zero,806c24 <get_dht+0x598>
  806bf0:	e0bfff17 	ldw	r2,-4(fp)
  806bf4:	10800017 	ldw	r2,0(r2)
  806bf8:	00c007c4 	movi	r3,31
  806bfc:	10c00515 	stw	r3,20(r2)
  806c00:	e0bfff17 	ldw	r2,-4(fp)
  806c04:	10800017 	ldw	r2,0(r2)
  806c08:	e0ffb217 	ldw	r3,-312(fp)
  806c0c:	10c00615 	stw	r3,24(r2)
  806c10:	e0bfff17 	ldw	r2,-4(fp)
  806c14:	10800017 	ldw	r2,0(r2)
  806c18:	10800017 	ldw	r2,0(r2)
  806c1c:	e13fff17 	ldw	r4,-4(fp)
  806c20:	103ee83a 	callr	r2
  806c24:	e0bfb417 	ldw	r2,-304(fp)
  806c28:	10800017 	ldw	r2,0(r2)
  806c2c:	1000051e 	bne	r2,zero,806c44 <get_dht+0x5b8>
  806c30:	e13fff17 	ldw	r4,-4(fp)
  806c34:	08141c00 	call	8141c0 <jpeg_alloc_huff_table>
  806c38:	1007883a 	mov	r3,r2
  806c3c:	e0bfb417 	ldw	r2,-304(fp)
  806c40:	10c00015 	stw	r3,0(r2)
  806c44:	e0bfb417 	ldw	r2,-304(fp)
  806c48:	10800017 	ldw	r2,0(r2)
  806c4c:	1009883a 	mov	r4,r2
  806c50:	e0bfba04 	addi	r2,fp,-280
  806c54:	00c00444 	movi	r3,17
  806c58:	180d883a 	mov	r6,r3
  806c5c:	100b883a 	mov	r5,r2
  806c60:	08341500 	call	834150 <memcpy>
  806c64:	e0bfb417 	ldw	r2,-304(fp)
  806c68:	10800017 	ldw	r2,0(r2)
  806c6c:	10800444 	addi	r2,r2,17
  806c70:	1009883a 	mov	r4,r2
  806c74:	e0bfbe44 	addi	r2,fp,-263
  806c78:	00c04004 	movi	r3,256
  806c7c:	180d883a 	mov	r6,r3
  806c80:	100b883a 	mov	r5,r2
  806c84:	08341500 	call	834150 <memcpy>
  806c88:	e0bfb017 	ldw	r2,-320(fp)
  806c8c:	10800448 	cmpgei	r2,r2,17
  806c90:	103ec31e 	bne	r2,zero,8067a0 <__alt_mem_epcs_flash_controller_0+0xff7fd7a0>
  806c94:	e0bfb017 	ldw	r2,-320(fp)
  806c98:	10000926 	beq	r2,zero,806cc0 <get_dht+0x634>
  806c9c:	e0bfff17 	ldw	r2,-4(fp)
  806ca0:	10800017 	ldw	r2,0(r2)
  806ca4:	00c00304 	movi	r3,12
  806ca8:	10c00515 	stw	r3,20(r2)
  806cac:	e0bfff17 	ldw	r2,-4(fp)
  806cb0:	10800017 	ldw	r2,0(r2)
  806cb4:	10800017 	ldw	r2,0(r2)
  806cb8:	e13fff17 	ldw	r4,-4(fp)
  806cbc:	103ee83a 	callr	r2
  806cc0:	e0bfb717 	ldw	r2,-292(fp)
  806cc4:	e0ffb517 	ldw	r3,-300(fp)
  806cc8:	10c00015 	stw	r3,0(r2)
  806ccc:	e0bfb717 	ldw	r2,-292(fp)
  806cd0:	e0ffb617 	ldw	r3,-296(fp)
  806cd4:	10c00115 	stw	r3,4(r2)
  806cd8:	00800044 	movi	r2,1
  806cdc:	e037883a 	mov	sp,fp
  806ce0:	dfc00117 	ldw	ra,4(sp)
  806ce4:	df000017 	ldw	fp,0(sp)
  806ce8:	dec00204 	addi	sp,sp,8
  806cec:	f800283a 	ret

00806cf0 <get_dqt>:
  806cf0:	defff104 	addi	sp,sp,-60
  806cf4:	dfc00e15 	stw	ra,56(sp)
  806cf8:	df000d15 	stw	fp,52(sp)
  806cfc:	df000d04 	addi	fp,sp,52
  806d00:	e13fff15 	stw	r4,-4(fp)
  806d04:	e0bfff17 	ldw	r2,-4(fp)
  806d08:	10800617 	ldw	r2,24(r2)
  806d0c:	e0bffa15 	stw	r2,-24(fp)
  806d10:	e0bffa17 	ldw	r2,-24(fp)
  806d14:	10800017 	ldw	r2,0(r2)
  806d18:	e0bff815 	stw	r2,-32(fp)
  806d1c:	e0bffa17 	ldw	r2,-24(fp)
  806d20:	10800117 	ldw	r2,4(r2)
  806d24:	e0bff915 	stw	r2,-28(fp)
  806d28:	e0bff917 	ldw	r2,-28(fp)
  806d2c:	10000d1e 	bne	r2,zero,806d64 <get_dqt+0x74>
  806d30:	e0bffa17 	ldw	r2,-24(fp)
  806d34:	10800317 	ldw	r2,12(r2)
  806d38:	e13fff17 	ldw	r4,-4(fp)
  806d3c:	103ee83a 	callr	r2
  806d40:	1000021e 	bne	r2,zero,806d4c <get_dqt+0x5c>
  806d44:	0005883a 	mov	r2,zero
  806d48:	0001f906 	br	807530 <get_dqt+0x840>
  806d4c:	e0bffa17 	ldw	r2,-24(fp)
  806d50:	10800017 	ldw	r2,0(r2)
  806d54:	e0bff815 	stw	r2,-32(fp)
  806d58:	e0bffa17 	ldw	r2,-24(fp)
  806d5c:	10800117 	ldw	r2,4(r2)
  806d60:	e0bff915 	stw	r2,-28(fp)
  806d64:	e0bff917 	ldw	r2,-28(fp)
  806d68:	10bfffc4 	addi	r2,r2,-1
  806d6c:	e0bff915 	stw	r2,-28(fp)
  806d70:	e0bff817 	ldw	r2,-32(fp)
  806d74:	10c00044 	addi	r3,r2,1
  806d78:	e0fff815 	stw	r3,-32(fp)
  806d7c:	10800003 	ldbu	r2,0(r2)
  806d80:	10803fcc 	andi	r2,r2,255
  806d84:	1004923a 	slli	r2,r2,8
  806d88:	e0bff315 	stw	r2,-52(fp)
  806d8c:	e0bff917 	ldw	r2,-28(fp)
  806d90:	10000d1e 	bne	r2,zero,806dc8 <get_dqt+0xd8>
  806d94:	e0bffa17 	ldw	r2,-24(fp)
  806d98:	10800317 	ldw	r2,12(r2)
  806d9c:	e13fff17 	ldw	r4,-4(fp)
  806da0:	103ee83a 	callr	r2
  806da4:	1000021e 	bne	r2,zero,806db0 <get_dqt+0xc0>
  806da8:	0005883a 	mov	r2,zero
  806dac:	0001e006 	br	807530 <get_dqt+0x840>
  806db0:	e0bffa17 	ldw	r2,-24(fp)
  806db4:	10800017 	ldw	r2,0(r2)
  806db8:	e0bff815 	stw	r2,-32(fp)
  806dbc:	e0bffa17 	ldw	r2,-24(fp)
  806dc0:	10800117 	ldw	r2,4(r2)
  806dc4:	e0bff915 	stw	r2,-28(fp)
  806dc8:	e0bff917 	ldw	r2,-28(fp)
  806dcc:	10bfffc4 	addi	r2,r2,-1
  806dd0:	e0bff915 	stw	r2,-28(fp)
  806dd4:	e0bff817 	ldw	r2,-32(fp)
  806dd8:	10c00044 	addi	r3,r2,1
  806ddc:	e0fff815 	stw	r3,-32(fp)
  806de0:	10800003 	ldbu	r2,0(r2)
  806de4:	10803fcc 	andi	r2,r2,255
  806de8:	e0fff317 	ldw	r3,-52(fp)
  806dec:	1885883a 	add	r2,r3,r2
  806df0:	e0bff315 	stw	r2,-52(fp)
  806df4:	e0bff317 	ldw	r2,-52(fp)
  806df8:	10bfff84 	addi	r2,r2,-2
  806dfc:	e0bff315 	stw	r2,-52(fp)
  806e00:	0001b706 	br	8074e0 <get_dqt+0x7f0>
  806e04:	e0bff317 	ldw	r2,-52(fp)
  806e08:	10bfffc4 	addi	r2,r2,-1
  806e0c:	e0bff315 	stw	r2,-52(fp)
  806e10:	e0bff917 	ldw	r2,-28(fp)
  806e14:	10000d1e 	bne	r2,zero,806e4c <get_dqt+0x15c>
  806e18:	e0bffa17 	ldw	r2,-24(fp)
  806e1c:	10800317 	ldw	r2,12(r2)
  806e20:	e13fff17 	ldw	r4,-4(fp)
  806e24:	103ee83a 	callr	r2
  806e28:	1000021e 	bne	r2,zero,806e34 <get_dqt+0x144>
  806e2c:	0005883a 	mov	r2,zero
  806e30:	0001bf06 	br	807530 <get_dqt+0x840>
  806e34:	e0bffa17 	ldw	r2,-24(fp)
  806e38:	10800017 	ldw	r2,0(r2)
  806e3c:	e0bff815 	stw	r2,-32(fp)
  806e40:	e0bffa17 	ldw	r2,-24(fp)
  806e44:	10800117 	ldw	r2,4(r2)
  806e48:	e0bff915 	stw	r2,-28(fp)
  806e4c:	e0bff917 	ldw	r2,-28(fp)
  806e50:	10bfffc4 	addi	r2,r2,-1
  806e54:	e0bff915 	stw	r2,-28(fp)
  806e58:	e0bff817 	ldw	r2,-32(fp)
  806e5c:	10c00044 	addi	r3,r2,1
  806e60:	e0fff815 	stw	r3,-32(fp)
  806e64:	10800003 	ldbu	r2,0(r2)
  806e68:	10803fcc 	andi	r2,r2,255
  806e6c:	e0bffb15 	stw	r2,-20(fp)
  806e70:	e0bffb17 	ldw	r2,-20(fp)
  806e74:	1005d13a 	srai	r2,r2,4
  806e78:	e0bffc15 	stw	r2,-16(fp)
  806e7c:	e0bffb17 	ldw	r2,-20(fp)
  806e80:	108003cc 	andi	r2,r2,15
  806e84:	e0bffb15 	stw	r2,-20(fp)
  806e88:	e0bfff17 	ldw	r2,-4(fp)
  806e8c:	10800017 	ldw	r2,0(r2)
  806e90:	00c014c4 	movi	r3,83
  806e94:	10c00515 	stw	r3,20(r2)
  806e98:	e0bfff17 	ldw	r2,-4(fp)
  806e9c:	10800017 	ldw	r2,0(r2)
  806ea0:	e0fffb17 	ldw	r3,-20(fp)
  806ea4:	10c00615 	stw	r3,24(r2)
  806ea8:	e0bfff17 	ldw	r2,-4(fp)
  806eac:	10800017 	ldw	r2,0(r2)
  806eb0:	e0fffc17 	ldw	r3,-16(fp)
  806eb4:	10c00715 	stw	r3,28(r2)
  806eb8:	e0bfff17 	ldw	r2,-4(fp)
  806ebc:	10800017 	ldw	r2,0(r2)
  806ec0:	10800117 	ldw	r2,4(r2)
  806ec4:	01400044 	movi	r5,1
  806ec8:	e13fff17 	ldw	r4,-4(fp)
  806ecc:	103ee83a 	callr	r2
  806ed0:	e0bffb17 	ldw	r2,-20(fp)
  806ed4:	10800110 	cmplti	r2,r2,4
  806ed8:	10000d1e 	bne	r2,zero,806f10 <get_dqt+0x220>
  806edc:	e0bfff17 	ldw	r2,-4(fp)
  806ee0:	10800017 	ldw	r2,0(r2)
  806ee4:	00c00804 	movi	r3,32
  806ee8:	10c00515 	stw	r3,20(r2)
  806eec:	e0bfff17 	ldw	r2,-4(fp)
  806ef0:	10800017 	ldw	r2,0(r2)
  806ef4:	e0fffb17 	ldw	r3,-20(fp)
  806ef8:	10c00615 	stw	r3,24(r2)
  806efc:	e0bfff17 	ldw	r2,-4(fp)
  806f00:	10800017 	ldw	r2,0(r2)
  806f04:	10800017 	ldw	r2,0(r2)
  806f08:	e13fff17 	ldw	r4,-4(fp)
  806f0c:	103ee83a 	callr	r2
  806f10:	e0ffff17 	ldw	r3,-4(fp)
  806f14:	e0bffb17 	ldw	r2,-20(fp)
  806f18:	10800a44 	addi	r2,r2,41
  806f1c:	1085883a 	add	r2,r2,r2
  806f20:	1085883a 	add	r2,r2,r2
  806f24:	1885883a 	add	r2,r3,r2
  806f28:	10800017 	ldw	r2,0(r2)
  806f2c:	10000a1e 	bne	r2,zero,806f58 <get_dqt+0x268>
  806f30:	e13fff17 	ldw	r4,-4(fp)
  806f34:	081416c0 	call	81416c <jpeg_alloc_quant_table>
  806f38:	1009883a 	mov	r4,r2
  806f3c:	e0ffff17 	ldw	r3,-4(fp)
  806f40:	e0bffb17 	ldw	r2,-20(fp)
  806f44:	10800a44 	addi	r2,r2,41
  806f48:	1085883a 	add	r2,r2,r2
  806f4c:	1085883a 	add	r2,r2,r2
  806f50:	1885883a 	add	r2,r3,r2
  806f54:	11000015 	stw	r4,0(r2)
  806f58:	e0ffff17 	ldw	r3,-4(fp)
  806f5c:	e0bffb17 	ldw	r2,-20(fp)
  806f60:	10800a44 	addi	r2,r2,41
  806f64:	1085883a 	add	r2,r2,r2
  806f68:	1085883a 	add	r2,r2,r2
  806f6c:	1885883a 	add	r2,r3,r2
  806f70:	10800017 	ldw	r2,0(r2)
  806f74:	e0bffd15 	stw	r2,-12(fp)
  806f78:	e0bffc17 	ldw	r2,-16(fp)
  806f7c:	10001826 	beq	r2,zero,806fe0 <get_dqt+0x2f0>
  806f80:	e0bff317 	ldw	r2,-52(fp)
  806f84:	10802008 	cmpgei	r2,r2,128
  806f88:	1000121e 	bne	r2,zero,806fd4 <get_dqt+0x2e4>
  806f8c:	e03ff515 	stw	zero,-44(fp)
  806f90:	00000906 	br	806fb8 <get_dqt+0x2c8>
  806f94:	e0fffd17 	ldw	r3,-12(fp)
  806f98:	e0bff517 	ldw	r2,-44(fp)
  806f9c:	1085883a 	add	r2,r2,r2
  806fa0:	1885883a 	add	r2,r3,r2
  806fa4:	00c00044 	movi	r3,1
  806fa8:	10c0000d 	sth	r3,0(r2)
  806fac:	e0bff517 	ldw	r2,-44(fp)
  806fb0:	10800044 	addi	r2,r2,1
  806fb4:	e0bff515 	stw	r2,-44(fp)
  806fb8:	e0bff517 	ldw	r2,-44(fp)
  806fbc:	10801010 	cmplti	r2,r2,64
  806fc0:	103ff41e 	bne	r2,zero,806f94 <__alt_mem_epcs_flash_controller_0+0xff7fdf94>
  806fc4:	e0bff317 	ldw	r2,-52(fp)
  806fc8:	1005d07a 	srai	r2,r2,1
  806fcc:	e0bff415 	stw	r2,-48(fp)
  806fd0:	00001906 	br	807038 <get_dqt+0x348>
  806fd4:	00801004 	movi	r2,64
  806fd8:	e0bff415 	stw	r2,-48(fp)
  806fdc:	00001606 	br	807038 <get_dqt+0x348>
  806fe0:	e0bff317 	ldw	r2,-52(fp)
  806fe4:	10801008 	cmpgei	r2,r2,64
  806fe8:	1000111e 	bne	r2,zero,807030 <get_dqt+0x340>
  806fec:	e03ff515 	stw	zero,-44(fp)
  806ff0:	00000906 	br	807018 <get_dqt+0x328>
  806ff4:	e0fffd17 	ldw	r3,-12(fp)
  806ff8:	e0bff517 	ldw	r2,-44(fp)
  806ffc:	1085883a 	add	r2,r2,r2
  807000:	1885883a 	add	r2,r3,r2
  807004:	00c00044 	movi	r3,1
  807008:	10c0000d 	sth	r3,0(r2)
  80700c:	e0bff517 	ldw	r2,-44(fp)
  807010:	10800044 	addi	r2,r2,1
  807014:	e0bff515 	stw	r2,-44(fp)
  807018:	e0bff517 	ldw	r2,-44(fp)
  80701c:	10801010 	cmplti	r2,r2,64
  807020:	103ff41e 	bne	r2,zero,806ff4 <__alt_mem_epcs_flash_controller_0+0xff7fdff4>
  807024:	e0bff317 	ldw	r2,-52(fp)
  807028:	e0bff415 	stw	r2,-48(fp)
  80702c:	00000206 	br	807038 <get_dqt+0x348>
  807030:	00801004 	movi	r2,64
  807034:	e0bff415 	stw	r2,-48(fp)
  807038:	e0bff417 	ldw	r2,-48(fp)
  80703c:	10bfff04 	addi	r2,r2,-4
  807040:	10c00ba8 	cmpgeui	r3,r2,46
  807044:	18004c1e 	bne	r3,zero,807178 <get_dqt+0x488>
  807048:	100690ba 	slli	r3,r2,2
  80704c:	00802034 	movhi	r2,128
  807050:	109c1804 	addi	r2,r2,28768
  807054:	1885883a 	add	r2,r3,r2
  807058:	10800017 	ldw	r2,0(r2)
  80705c:	1000683a 	jmp	r2
  807060:	00807118 	cmpnei	r2,zero,452
  807064:	00807178 	rdprs	r2,zero,453
  807068:	00807178 	rdprs	r2,zero,453
  80706c:	00807178 	rdprs	r2,zero,453
  807070:	00807178 	rdprs	r2,zero,453
  807074:	00807128 	cmpgeui	r2,zero,452
  807078:	00807178 	rdprs	r2,zero,453
  80707c:	00807178 	rdprs	r2,zero,453
  807080:	00807178 	rdprs	r2,zero,453
  807084:	00807178 	rdprs	r2,zero,453
  807088:	00807178 	rdprs	r2,zero,453
  80708c:	00807178 	rdprs	r2,zero,453
  807090:	00807138 	rdprs	r2,zero,452
  807094:	00807178 	rdprs	r2,zero,453
  807098:	00807178 	rdprs	r2,zero,453
  80709c:	00807178 	rdprs	r2,zero,453
  8070a0:	00807178 	rdprs	r2,zero,453
  8070a4:	00807178 	rdprs	r2,zero,453
  8070a8:	00807178 	rdprs	r2,zero,453
  8070ac:	00807178 	rdprs	r2,zero,453
  8070b0:	00807178 	rdprs	r2,zero,453
  8070b4:	00807148 	cmpgei	r2,zero,453
  8070b8:	00807178 	rdprs	r2,zero,453
  8070bc:	00807178 	rdprs	r2,zero,453
  8070c0:	00807178 	rdprs	r2,zero,453
  8070c4:	00807178 	rdprs	r2,zero,453
  8070c8:	00807178 	rdprs	r2,zero,453
  8070cc:	00807178 	rdprs	r2,zero,453
  8070d0:	00807178 	rdprs	r2,zero,453
  8070d4:	00807178 	rdprs	r2,zero,453
  8070d8:	00807178 	rdprs	r2,zero,453
  8070dc:	00807178 	rdprs	r2,zero,453
  8070e0:	00807158 	cmpnei	r2,zero,453
  8070e4:	00807178 	rdprs	r2,zero,453
  8070e8:	00807178 	rdprs	r2,zero,453
  8070ec:	00807178 	rdprs	r2,zero,453
  8070f0:	00807178 	rdprs	r2,zero,453
  8070f4:	00807178 	rdprs	r2,zero,453
  8070f8:	00807178 	rdprs	r2,zero,453
  8070fc:	00807178 	rdprs	r2,zero,453
  807100:	00807178 	rdprs	r2,zero,453
  807104:	00807178 	rdprs	r2,zero,453
  807108:	00807178 	rdprs	r2,zero,453
  80710c:	00807178 	rdprs	r2,zero,453
  807110:	00807178 	rdprs	r2,zero,453
  807114:	00807168 	cmpgeui	r2,zero,453
  807118:	008021b4 	movhi	r2,134
  80711c:	10a25e04 	addi	r2,r2,-30344
  807120:	e0bff715 	stw	r2,-36(fp)
  807124:	00001806 	br	807188 <get_dqt+0x498>
  807128:	008021b4 	movhi	r2,134
  80712c:	10a24504 	addi	r2,r2,-30444
  807130:	e0bff715 	stw	r2,-36(fp)
  807134:	00001406 	br	807188 <get_dqt+0x498>
  807138:	008021b4 	movhi	r2,134
  80713c:	10a22504 	addi	r2,r2,-30572
  807140:	e0bff715 	stw	r2,-36(fp)
  807144:	00001006 	br	807188 <get_dqt+0x498>
  807148:	008021b4 	movhi	r2,134
  80714c:	10a1fc04 	addi	r2,r2,-30736
  807150:	e0bff715 	stw	r2,-36(fp)
  807154:	00000c06 	br	807188 <get_dqt+0x498>
  807158:	008021b4 	movhi	r2,134
  80715c:	10a1c804 	addi	r2,r2,-30944
  807160:	e0bff715 	stw	r2,-36(fp)
  807164:	00000806 	br	807188 <get_dqt+0x498>
  807168:	008021b4 	movhi	r2,134
  80716c:	10a18704 	addi	r2,r2,-31204
  807170:	e0bff715 	stw	r2,-36(fp)
  807174:	00000406 	br	807188 <get_dqt+0x498>
  807178:	008021b4 	movhi	r2,134
  80717c:	10a13704 	addi	r2,r2,-31524
  807180:	e0bff715 	stw	r2,-36(fp)
  807184:	0001883a 	nop
  807188:	e03ff515 	stw	zero,-44(fp)
  80718c:	00005e06 	br	807308 <get_dqt+0x618>
  807190:	e0bffc17 	ldw	r2,-16(fp)
  807194:	10003426 	beq	r2,zero,807268 <get_dqt+0x578>
  807198:	e0bff917 	ldw	r2,-28(fp)
  80719c:	10000d1e 	bne	r2,zero,8071d4 <get_dqt+0x4e4>
  8071a0:	e0bffa17 	ldw	r2,-24(fp)
  8071a4:	10800317 	ldw	r2,12(r2)
  8071a8:	e13fff17 	ldw	r4,-4(fp)
  8071ac:	103ee83a 	callr	r2
  8071b0:	1000021e 	bne	r2,zero,8071bc <get_dqt+0x4cc>
  8071b4:	0005883a 	mov	r2,zero
  8071b8:	0000dd06 	br	807530 <get_dqt+0x840>
  8071bc:	e0bffa17 	ldw	r2,-24(fp)
  8071c0:	10800017 	ldw	r2,0(r2)
  8071c4:	e0bff815 	stw	r2,-32(fp)
  8071c8:	e0bffa17 	ldw	r2,-24(fp)
  8071cc:	10800117 	ldw	r2,4(r2)
  8071d0:	e0bff915 	stw	r2,-28(fp)
  8071d4:	e0bff917 	ldw	r2,-28(fp)
  8071d8:	10bfffc4 	addi	r2,r2,-1
  8071dc:	e0bff915 	stw	r2,-28(fp)
  8071e0:	e0bff817 	ldw	r2,-32(fp)
  8071e4:	10c00044 	addi	r3,r2,1
  8071e8:	e0fff815 	stw	r3,-32(fp)
  8071ec:	10800003 	ldbu	r2,0(r2)
  8071f0:	10803fcc 	andi	r2,r2,255
  8071f4:	1004923a 	slli	r2,r2,8
  8071f8:	e0bff615 	stw	r2,-40(fp)
  8071fc:	e0bff917 	ldw	r2,-28(fp)
  807200:	10000d1e 	bne	r2,zero,807238 <get_dqt+0x548>
  807204:	e0bffa17 	ldw	r2,-24(fp)
  807208:	10800317 	ldw	r2,12(r2)
  80720c:	e13fff17 	ldw	r4,-4(fp)
  807210:	103ee83a 	callr	r2
  807214:	1000021e 	bne	r2,zero,807220 <get_dqt+0x530>
  807218:	0005883a 	mov	r2,zero
  80721c:	0000c406 	br	807530 <get_dqt+0x840>
  807220:	e0bffa17 	ldw	r2,-24(fp)
  807224:	10800017 	ldw	r2,0(r2)
  807228:	e0bff815 	stw	r2,-32(fp)
  80722c:	e0bffa17 	ldw	r2,-24(fp)
  807230:	10800117 	ldw	r2,4(r2)
  807234:	e0bff915 	stw	r2,-28(fp)
  807238:	e0bff917 	ldw	r2,-28(fp)
  80723c:	10bfffc4 	addi	r2,r2,-1
  807240:	e0bff915 	stw	r2,-28(fp)
  807244:	e0bff817 	ldw	r2,-32(fp)
  807248:	10c00044 	addi	r3,r2,1
  80724c:	e0fff815 	stw	r3,-32(fp)
  807250:	10800003 	ldbu	r2,0(r2)
  807254:	10803fcc 	andi	r2,r2,255
  807258:	e0fff617 	ldw	r3,-40(fp)
  80725c:	1885883a 	add	r2,r3,r2
  807260:	e0bff615 	stw	r2,-40(fp)
  807264:	00001806 	br	8072c8 <get_dqt+0x5d8>
  807268:	e0bff917 	ldw	r2,-28(fp)
  80726c:	10000d1e 	bne	r2,zero,8072a4 <get_dqt+0x5b4>
  807270:	e0bffa17 	ldw	r2,-24(fp)
  807274:	10800317 	ldw	r2,12(r2)
  807278:	e13fff17 	ldw	r4,-4(fp)
  80727c:	103ee83a 	callr	r2
  807280:	1000021e 	bne	r2,zero,80728c <get_dqt+0x59c>
  807284:	0005883a 	mov	r2,zero
  807288:	0000a906 	br	807530 <get_dqt+0x840>
  80728c:	e0bffa17 	ldw	r2,-24(fp)
  807290:	10800017 	ldw	r2,0(r2)
  807294:	e0bff815 	stw	r2,-32(fp)
  807298:	e0bffa17 	ldw	r2,-24(fp)
  80729c:	10800117 	ldw	r2,4(r2)
  8072a0:	e0bff915 	stw	r2,-28(fp)
  8072a4:	e0bff917 	ldw	r2,-28(fp)
  8072a8:	10bfffc4 	addi	r2,r2,-1
  8072ac:	e0bff915 	stw	r2,-28(fp)
  8072b0:	e0bff817 	ldw	r2,-32(fp)
  8072b4:	10c00044 	addi	r3,r2,1
  8072b8:	e0fff815 	stw	r3,-32(fp)
  8072bc:	10800003 	ldbu	r2,0(r2)
  8072c0:	10803fcc 	andi	r2,r2,255
  8072c4:	e0bff615 	stw	r2,-40(fp)
  8072c8:	e0bff517 	ldw	r2,-44(fp)
  8072cc:	1085883a 	add	r2,r2,r2
  8072d0:	1085883a 	add	r2,r2,r2
  8072d4:	1007883a 	mov	r3,r2
  8072d8:	e0bff717 	ldw	r2,-36(fp)
  8072dc:	10c5883a 	add	r2,r2,r3
  8072e0:	10800017 	ldw	r2,0(r2)
  8072e4:	e0fff617 	ldw	r3,-40(fp)
  8072e8:	1809883a 	mov	r4,r3
  8072ec:	e0fffd17 	ldw	r3,-12(fp)
  8072f0:	1085883a 	add	r2,r2,r2
  8072f4:	1885883a 	add	r2,r3,r2
  8072f8:	1100000d 	sth	r4,0(r2)
  8072fc:	e0bff517 	ldw	r2,-44(fp)
  807300:	10800044 	addi	r2,r2,1
  807304:	e0bff515 	stw	r2,-44(fp)
  807308:	e0fff517 	ldw	r3,-44(fp)
  80730c:	e0bff417 	ldw	r2,-48(fp)
  807310:	18bf9f16 	blt	r3,r2,807190 <__alt_mem_epcs_flash_controller_0+0xff7fe190>
  807314:	e0bfff17 	ldw	r2,-4(fp)
  807318:	10800017 	ldw	r2,0(r2)
  80731c:	10801a17 	ldw	r2,104(r2)
  807320:	10800090 	cmplti	r2,r2,2
  807324:	1000641e 	bne	r2,zero,8074b8 <get_dqt+0x7c8>
  807328:	e03ff515 	stw	zero,-44(fp)
  80732c:	00005f06 	br	8074ac <get_dqt+0x7bc>
  807330:	e0bfff17 	ldw	r2,-4(fp)
  807334:	10800017 	ldw	r2,0(r2)
  807338:	10800604 	addi	r2,r2,24
  80733c:	e0bffe15 	stw	r2,-8(fp)
  807340:	e0fffd17 	ldw	r3,-12(fp)
  807344:	e0bff517 	ldw	r2,-44(fp)
  807348:	1085883a 	add	r2,r2,r2
  80734c:	1885883a 	add	r2,r3,r2
  807350:	1080000b 	ldhu	r2,0(r2)
  807354:	10ffffcc 	andi	r3,r2,65535
  807358:	e0bffe17 	ldw	r2,-8(fp)
  80735c:	10c00015 	stw	r3,0(r2)
  807360:	e0bffe17 	ldw	r2,-8(fp)
  807364:	10c00104 	addi	r3,r2,4
  807368:	e0bff517 	ldw	r2,-44(fp)
  80736c:	10800044 	addi	r2,r2,1
  807370:	e13ffd17 	ldw	r4,-12(fp)
  807374:	1085883a 	add	r2,r2,r2
  807378:	2085883a 	add	r2,r4,r2
  80737c:	1080000b 	ldhu	r2,0(r2)
  807380:	10bfffcc 	andi	r2,r2,65535
  807384:	18800015 	stw	r2,0(r3)
  807388:	e0bffe17 	ldw	r2,-8(fp)
  80738c:	10c00204 	addi	r3,r2,8
  807390:	e0bff517 	ldw	r2,-44(fp)
  807394:	10800084 	addi	r2,r2,2
  807398:	e13ffd17 	ldw	r4,-12(fp)
  80739c:	1085883a 	add	r2,r2,r2
  8073a0:	2085883a 	add	r2,r4,r2
  8073a4:	1080000b 	ldhu	r2,0(r2)
  8073a8:	10bfffcc 	andi	r2,r2,65535
  8073ac:	18800015 	stw	r2,0(r3)
  8073b0:	e0bffe17 	ldw	r2,-8(fp)
  8073b4:	10c00304 	addi	r3,r2,12
  8073b8:	e0bff517 	ldw	r2,-44(fp)
  8073bc:	108000c4 	addi	r2,r2,3
  8073c0:	e13ffd17 	ldw	r4,-12(fp)
  8073c4:	1085883a 	add	r2,r2,r2
  8073c8:	2085883a 	add	r2,r4,r2
  8073cc:	1080000b 	ldhu	r2,0(r2)
  8073d0:	10bfffcc 	andi	r2,r2,65535
  8073d4:	18800015 	stw	r2,0(r3)
  8073d8:	e0bffe17 	ldw	r2,-8(fp)
  8073dc:	10c00404 	addi	r3,r2,16
  8073e0:	e0bff517 	ldw	r2,-44(fp)
  8073e4:	10800104 	addi	r2,r2,4
  8073e8:	e13ffd17 	ldw	r4,-12(fp)
  8073ec:	1085883a 	add	r2,r2,r2
  8073f0:	2085883a 	add	r2,r4,r2
  8073f4:	1080000b 	ldhu	r2,0(r2)
  8073f8:	10bfffcc 	andi	r2,r2,65535
  8073fc:	18800015 	stw	r2,0(r3)
  807400:	e0bffe17 	ldw	r2,-8(fp)
  807404:	10c00504 	addi	r3,r2,20
  807408:	e0bff517 	ldw	r2,-44(fp)
  80740c:	10800144 	addi	r2,r2,5
  807410:	e13ffd17 	ldw	r4,-12(fp)
  807414:	1085883a 	add	r2,r2,r2
  807418:	2085883a 	add	r2,r4,r2
  80741c:	1080000b 	ldhu	r2,0(r2)
  807420:	10bfffcc 	andi	r2,r2,65535
  807424:	18800015 	stw	r2,0(r3)
  807428:	e0bffe17 	ldw	r2,-8(fp)
  80742c:	10c00604 	addi	r3,r2,24
  807430:	e0bff517 	ldw	r2,-44(fp)
  807434:	10800184 	addi	r2,r2,6
  807438:	e13ffd17 	ldw	r4,-12(fp)
  80743c:	1085883a 	add	r2,r2,r2
  807440:	2085883a 	add	r2,r4,r2
  807444:	1080000b 	ldhu	r2,0(r2)
  807448:	10bfffcc 	andi	r2,r2,65535
  80744c:	18800015 	stw	r2,0(r3)
  807450:	e0bffe17 	ldw	r2,-8(fp)
  807454:	10c00704 	addi	r3,r2,28
  807458:	e0bff517 	ldw	r2,-44(fp)
  80745c:	108001c4 	addi	r2,r2,7
  807460:	e13ffd17 	ldw	r4,-12(fp)
  807464:	1085883a 	add	r2,r2,r2
  807468:	2085883a 	add	r2,r4,r2
  80746c:	1080000b 	ldhu	r2,0(r2)
  807470:	10bfffcc 	andi	r2,r2,65535
  807474:	18800015 	stw	r2,0(r3)
  807478:	e0bfff17 	ldw	r2,-4(fp)
  80747c:	10800017 	ldw	r2,0(r2)
  807480:	00c017c4 	movi	r3,95
  807484:	10c00515 	stw	r3,20(r2)
  807488:	e0bfff17 	ldw	r2,-4(fp)
  80748c:	10800017 	ldw	r2,0(r2)
  807490:	10800117 	ldw	r2,4(r2)
  807494:	01400084 	movi	r5,2
  807498:	e13fff17 	ldw	r4,-4(fp)
  80749c:	103ee83a 	callr	r2
  8074a0:	e0bff517 	ldw	r2,-44(fp)
  8074a4:	10800204 	addi	r2,r2,8
  8074a8:	e0bff515 	stw	r2,-44(fp)
  8074ac:	e0bff517 	ldw	r2,-44(fp)
  8074b0:	10801010 	cmplti	r2,r2,64
  8074b4:	103f9e1e 	bne	r2,zero,807330 <__alt_mem_epcs_flash_controller_0+0xff7fe330>
  8074b8:	e0fff317 	ldw	r3,-52(fp)
  8074bc:	e0bff417 	ldw	r2,-48(fp)
  8074c0:	1885c83a 	sub	r2,r3,r2
  8074c4:	e0bff315 	stw	r2,-52(fp)
  8074c8:	e0bffc17 	ldw	r2,-16(fp)
  8074cc:	10000426 	beq	r2,zero,8074e0 <get_dqt+0x7f0>
  8074d0:	e0fff317 	ldw	r3,-52(fp)
  8074d4:	e0bff417 	ldw	r2,-48(fp)
  8074d8:	1885c83a 	sub	r2,r3,r2
  8074dc:	e0bff315 	stw	r2,-52(fp)
  8074e0:	e0bff317 	ldw	r2,-52(fp)
  8074e4:	00be4716 	blt	zero,r2,806e04 <__alt_mem_epcs_flash_controller_0+0xff7fde04>
  8074e8:	e0bff317 	ldw	r2,-52(fp)
  8074ec:	10000926 	beq	r2,zero,807514 <get_dqt+0x824>
  8074f0:	e0bfff17 	ldw	r2,-4(fp)
  8074f4:	10800017 	ldw	r2,0(r2)
  8074f8:	00c00304 	movi	r3,12
  8074fc:	10c00515 	stw	r3,20(r2)
  807500:	e0bfff17 	ldw	r2,-4(fp)
  807504:	10800017 	ldw	r2,0(r2)
  807508:	10800017 	ldw	r2,0(r2)
  80750c:	e13fff17 	ldw	r4,-4(fp)
  807510:	103ee83a 	callr	r2
  807514:	e0bffa17 	ldw	r2,-24(fp)
  807518:	e0fff817 	ldw	r3,-32(fp)
  80751c:	10c00015 	stw	r3,0(r2)
  807520:	e0bffa17 	ldw	r2,-24(fp)
  807524:	e0fff917 	ldw	r3,-28(fp)
  807528:	10c00115 	stw	r3,4(r2)
  80752c:	00800044 	movi	r2,1
  807530:	e037883a 	mov	sp,fp
  807534:	dfc00117 	ldw	ra,4(sp)
  807538:	df000017 	ldw	fp,0(sp)
  80753c:	dec00204 	addi	sp,sp,8
  807540:	f800283a 	ret

00807544 <get_dri>:
  807544:	defff804 	addi	sp,sp,-32
  807548:	dfc00715 	stw	ra,28(sp)
  80754c:	df000615 	stw	fp,24(sp)
  807550:	df000604 	addi	fp,sp,24
  807554:	e13fff15 	stw	r4,-4(fp)
  807558:	e0bfff17 	ldw	r2,-4(fp)
  80755c:	10800617 	ldw	r2,24(r2)
  807560:	e0bffc15 	stw	r2,-16(fp)
  807564:	e0bffc17 	ldw	r2,-16(fp)
  807568:	10800017 	ldw	r2,0(r2)
  80756c:	e0bffa15 	stw	r2,-24(fp)
  807570:	e0bffc17 	ldw	r2,-16(fp)
  807574:	10800117 	ldw	r2,4(r2)
  807578:	e0bffb15 	stw	r2,-20(fp)
  80757c:	e0bffb17 	ldw	r2,-20(fp)
  807580:	10000d1e 	bne	r2,zero,8075b8 <get_dri+0x74>
  807584:	e0bffc17 	ldw	r2,-16(fp)
  807588:	10800317 	ldw	r2,12(r2)
  80758c:	e13fff17 	ldw	r4,-4(fp)
  807590:	103ee83a 	callr	r2
  807594:	1000021e 	bne	r2,zero,8075a0 <get_dri+0x5c>
  807598:	0005883a 	mov	r2,zero
  80759c:	00008106 	br	8077a4 <get_dri+0x260>
  8075a0:	e0bffc17 	ldw	r2,-16(fp)
  8075a4:	10800017 	ldw	r2,0(r2)
  8075a8:	e0bffa15 	stw	r2,-24(fp)
  8075ac:	e0bffc17 	ldw	r2,-16(fp)
  8075b0:	10800117 	ldw	r2,4(r2)
  8075b4:	e0bffb15 	stw	r2,-20(fp)
  8075b8:	e0bffb17 	ldw	r2,-20(fp)
  8075bc:	10bfffc4 	addi	r2,r2,-1
  8075c0:	e0bffb15 	stw	r2,-20(fp)
  8075c4:	e0bffa17 	ldw	r2,-24(fp)
  8075c8:	10c00044 	addi	r3,r2,1
  8075cc:	e0fffa15 	stw	r3,-24(fp)
  8075d0:	10800003 	ldbu	r2,0(r2)
  8075d4:	10803fcc 	andi	r2,r2,255
  8075d8:	1004923a 	slli	r2,r2,8
  8075dc:	e0bffd15 	stw	r2,-12(fp)
  8075e0:	e0bffb17 	ldw	r2,-20(fp)
  8075e4:	10000d1e 	bne	r2,zero,80761c <get_dri+0xd8>
  8075e8:	e0bffc17 	ldw	r2,-16(fp)
  8075ec:	10800317 	ldw	r2,12(r2)
  8075f0:	e13fff17 	ldw	r4,-4(fp)
  8075f4:	103ee83a 	callr	r2
  8075f8:	1000021e 	bne	r2,zero,807604 <get_dri+0xc0>
  8075fc:	0005883a 	mov	r2,zero
  807600:	00006806 	br	8077a4 <get_dri+0x260>
  807604:	e0bffc17 	ldw	r2,-16(fp)
  807608:	10800017 	ldw	r2,0(r2)
  80760c:	e0bffa15 	stw	r2,-24(fp)
  807610:	e0bffc17 	ldw	r2,-16(fp)
  807614:	10800117 	ldw	r2,4(r2)
  807618:	e0bffb15 	stw	r2,-20(fp)
  80761c:	e0bffb17 	ldw	r2,-20(fp)
  807620:	10bfffc4 	addi	r2,r2,-1
  807624:	e0bffb15 	stw	r2,-20(fp)
  807628:	e0bffa17 	ldw	r2,-24(fp)
  80762c:	10c00044 	addi	r3,r2,1
  807630:	e0fffa15 	stw	r3,-24(fp)
  807634:	10800003 	ldbu	r2,0(r2)
  807638:	10803fcc 	andi	r2,r2,255
  80763c:	e0fffd17 	ldw	r3,-12(fp)
  807640:	1885883a 	add	r2,r3,r2
  807644:	e0bffd15 	stw	r2,-12(fp)
  807648:	e0bffd17 	ldw	r2,-12(fp)
  80764c:	10800120 	cmpeqi	r2,r2,4
  807650:	1000091e 	bne	r2,zero,807678 <get_dri+0x134>
  807654:	e0bfff17 	ldw	r2,-4(fp)
  807658:	10800017 	ldw	r2,0(r2)
  80765c:	00c00304 	movi	r3,12
  807660:	10c00515 	stw	r3,20(r2)
  807664:	e0bfff17 	ldw	r2,-4(fp)
  807668:	10800017 	ldw	r2,0(r2)
  80766c:	10800017 	ldw	r2,0(r2)
  807670:	e13fff17 	ldw	r4,-4(fp)
  807674:	103ee83a 	callr	r2
  807678:	e0bffb17 	ldw	r2,-20(fp)
  80767c:	10000d1e 	bne	r2,zero,8076b4 <get_dri+0x170>
  807680:	e0bffc17 	ldw	r2,-16(fp)
  807684:	10800317 	ldw	r2,12(r2)
  807688:	e13fff17 	ldw	r4,-4(fp)
  80768c:	103ee83a 	callr	r2
  807690:	1000021e 	bne	r2,zero,80769c <get_dri+0x158>
  807694:	0005883a 	mov	r2,zero
  807698:	00004206 	br	8077a4 <get_dri+0x260>
  80769c:	e0bffc17 	ldw	r2,-16(fp)
  8076a0:	10800017 	ldw	r2,0(r2)
  8076a4:	e0bffa15 	stw	r2,-24(fp)
  8076a8:	e0bffc17 	ldw	r2,-16(fp)
  8076ac:	10800117 	ldw	r2,4(r2)
  8076b0:	e0bffb15 	stw	r2,-20(fp)
  8076b4:	e0bffb17 	ldw	r2,-20(fp)
  8076b8:	10bfffc4 	addi	r2,r2,-1
  8076bc:	e0bffb15 	stw	r2,-20(fp)
  8076c0:	e0bffa17 	ldw	r2,-24(fp)
  8076c4:	10c00044 	addi	r3,r2,1
  8076c8:	e0fffa15 	stw	r3,-24(fp)
  8076cc:	10800003 	ldbu	r2,0(r2)
  8076d0:	10803fcc 	andi	r2,r2,255
  8076d4:	1004923a 	slli	r2,r2,8
  8076d8:	e0bffe15 	stw	r2,-8(fp)
  8076dc:	e0bffb17 	ldw	r2,-20(fp)
  8076e0:	10000d1e 	bne	r2,zero,807718 <get_dri+0x1d4>
  8076e4:	e0bffc17 	ldw	r2,-16(fp)
  8076e8:	10800317 	ldw	r2,12(r2)
  8076ec:	e13fff17 	ldw	r4,-4(fp)
  8076f0:	103ee83a 	callr	r2
  8076f4:	1000021e 	bne	r2,zero,807700 <get_dri+0x1bc>
  8076f8:	0005883a 	mov	r2,zero
  8076fc:	00002906 	br	8077a4 <get_dri+0x260>
  807700:	e0bffc17 	ldw	r2,-16(fp)
  807704:	10800017 	ldw	r2,0(r2)
  807708:	e0bffa15 	stw	r2,-24(fp)
  80770c:	e0bffc17 	ldw	r2,-16(fp)
  807710:	10800117 	ldw	r2,4(r2)
  807714:	e0bffb15 	stw	r2,-20(fp)
  807718:	e0bffb17 	ldw	r2,-20(fp)
  80771c:	10bfffc4 	addi	r2,r2,-1
  807720:	e0bffb15 	stw	r2,-20(fp)
  807724:	e0bffa17 	ldw	r2,-24(fp)
  807728:	10c00044 	addi	r3,r2,1
  80772c:	e0fffa15 	stw	r3,-24(fp)
  807730:	10800003 	ldbu	r2,0(r2)
  807734:	10803fcc 	andi	r2,r2,255
  807738:	e0fffe17 	ldw	r3,-8(fp)
  80773c:	1885883a 	add	r2,r3,r2
  807740:	e0bffe15 	stw	r2,-8(fp)
  807744:	e0bfff17 	ldw	r2,-4(fp)
  807748:	10800017 	ldw	r2,0(r2)
  80774c:	00c01504 	movi	r3,84
  807750:	10c00515 	stw	r3,20(r2)
  807754:	e0bfff17 	ldw	r2,-4(fp)
  807758:	10800017 	ldw	r2,0(r2)
  80775c:	e0fffe17 	ldw	r3,-8(fp)
  807760:	10c00615 	stw	r3,24(r2)
  807764:	e0bfff17 	ldw	r2,-4(fp)
  807768:	10800017 	ldw	r2,0(r2)
  80776c:	10800117 	ldw	r2,4(r2)
  807770:	01400044 	movi	r5,1
  807774:	e13fff17 	ldw	r4,-4(fp)
  807778:	103ee83a 	callr	r2
  80777c:	e0bfff17 	ldw	r2,-4(fp)
  807780:	e0fffe17 	ldw	r3,-8(fp)
  807784:	10c04615 	stw	r3,280(r2)
  807788:	e0bffc17 	ldw	r2,-16(fp)
  80778c:	e0fffa17 	ldw	r3,-24(fp)
  807790:	10c00015 	stw	r3,0(r2)
  807794:	e0bffc17 	ldw	r2,-16(fp)
  807798:	e0fffb17 	ldw	r3,-20(fp)
  80779c:	10c00115 	stw	r3,4(r2)
  8077a0:	00800044 	movi	r2,1
  8077a4:	e037883a 	mov	sp,fp
  8077a8:	dfc00117 	ldw	ra,4(sp)
  8077ac:	df000017 	ldw	fp,0(sp)
  8077b0:	dec00204 	addi	sp,sp,8
  8077b4:	f800283a 	ret

008077b8 <get_lse>:
  8077b8:	defff704 	addi	sp,sp,-36
  8077bc:	dfc00815 	stw	ra,32(sp)
  8077c0:	df000715 	stw	fp,28(sp)
  8077c4:	df000704 	addi	fp,sp,28
  8077c8:	e13fff15 	stw	r4,-4(fp)
  8077cc:	e0bfff17 	ldw	r2,-4(fp)
  8077d0:	10800617 	ldw	r2,24(r2)
  8077d4:	e0bffb15 	stw	r2,-20(fp)
  8077d8:	e0bffb17 	ldw	r2,-20(fp)
  8077dc:	10800017 	ldw	r2,0(r2)
  8077e0:	e0bff915 	stw	r2,-28(fp)
  8077e4:	e0bffb17 	ldw	r2,-20(fp)
  8077e8:	10800117 	ldw	r2,4(r2)
  8077ec:	e0bffa15 	stw	r2,-24(fp)
  8077f0:	e0bfff17 	ldw	r2,-4(fp)
  8077f4:	10807417 	ldw	r2,464(r2)
  8077f8:	10800417 	ldw	r2,16(r2)
  8077fc:	1000111e 	bne	r2,zero,807844 <get_lse+0x8c>
  807800:	e0bfff17 	ldw	r2,-4(fp)
  807804:	10800017 	ldw	r2,0(r2)
  807808:	00c00f04 	movi	r3,60
  80780c:	10c00515 	stw	r3,20(r2)
  807810:	e0bfff17 	ldw	r2,-4(fp)
  807814:	10800017 	ldw	r2,0(r2)
  807818:	10800604 	addi	r2,r2,24
  80781c:	01801404 	movi	r6,80
  807820:	01402174 	movhi	r5,133
  807824:	295baa04 	addi	r5,r5,28328
  807828:	1009883a 	mov	r4,r2
  80782c:	0834d880 	call	834d88 <strncpy>
  807830:	e0bfff17 	ldw	r2,-4(fp)
  807834:	10800017 	ldw	r2,0(r2)
  807838:	10800017 	ldw	r2,0(r2)
  80783c:	e13fff17 	ldw	r4,-4(fp)
  807840:	103ee83a 	callr	r2
  807844:	e0bfff17 	ldw	r2,-4(fp)
  807848:	10800917 	ldw	r2,36(r2)
  80784c:	108000c8 	cmpgei	r2,r2,3
  807850:	1002a226 	beq	r2,zero,8082dc <get_lse+0xb24>
  807854:	e0bffa17 	ldw	r2,-24(fp)
  807858:	10000d1e 	bne	r2,zero,807890 <get_lse+0xd8>
  80785c:	e0bffb17 	ldw	r2,-20(fp)
  807860:	10800317 	ldw	r2,12(r2)
  807864:	e13fff17 	ldw	r4,-4(fp)
  807868:	103ee83a 	callr	r2
  80786c:	1000021e 	bne	r2,zero,807878 <get_lse+0xc0>
  807870:	0005883a 	mov	r2,zero
  807874:	0002c706 	br	808394 <get_lse+0xbdc>
  807878:	e0bffb17 	ldw	r2,-20(fp)
  80787c:	10800017 	ldw	r2,0(r2)
  807880:	e0bff915 	stw	r2,-28(fp)
  807884:	e0bffb17 	ldw	r2,-20(fp)
  807888:	10800117 	ldw	r2,4(r2)
  80788c:	e0bffa15 	stw	r2,-24(fp)
  807890:	e0bffa17 	ldw	r2,-24(fp)
  807894:	10bfffc4 	addi	r2,r2,-1
  807898:	e0bffa15 	stw	r2,-24(fp)
  80789c:	e0bff917 	ldw	r2,-28(fp)
  8078a0:	10c00044 	addi	r3,r2,1
  8078a4:	e0fff915 	stw	r3,-28(fp)
  8078a8:	10800003 	ldbu	r2,0(r2)
  8078ac:	10803fcc 	andi	r2,r2,255
  8078b0:	1004923a 	slli	r2,r2,8
  8078b4:	e0bffc15 	stw	r2,-16(fp)
  8078b8:	e0bffa17 	ldw	r2,-24(fp)
  8078bc:	10000d1e 	bne	r2,zero,8078f4 <get_lse+0x13c>
  8078c0:	e0bffb17 	ldw	r2,-20(fp)
  8078c4:	10800317 	ldw	r2,12(r2)
  8078c8:	e13fff17 	ldw	r4,-4(fp)
  8078cc:	103ee83a 	callr	r2
  8078d0:	1000021e 	bne	r2,zero,8078dc <get_lse+0x124>
  8078d4:	0005883a 	mov	r2,zero
  8078d8:	0002ae06 	br	808394 <get_lse+0xbdc>
  8078dc:	e0bffb17 	ldw	r2,-20(fp)
  8078e0:	10800017 	ldw	r2,0(r2)
  8078e4:	e0bff915 	stw	r2,-28(fp)
  8078e8:	e0bffb17 	ldw	r2,-20(fp)
  8078ec:	10800117 	ldw	r2,4(r2)
  8078f0:	e0bffa15 	stw	r2,-24(fp)
  8078f4:	e0bffa17 	ldw	r2,-24(fp)
  8078f8:	10bfffc4 	addi	r2,r2,-1
  8078fc:	e0bffa15 	stw	r2,-24(fp)
  807900:	e0bff917 	ldw	r2,-28(fp)
  807904:	10c00044 	addi	r3,r2,1
  807908:	e0fff915 	stw	r3,-28(fp)
  80790c:	10800003 	ldbu	r2,0(r2)
  807910:	10803fcc 	andi	r2,r2,255
  807914:	e0fffc17 	ldw	r3,-16(fp)
  807918:	1885883a 	add	r2,r3,r2
  80791c:	e0bffc15 	stw	r2,-16(fp)
  807920:	e0bffc17 	ldw	r2,-16(fp)
  807924:	10800620 	cmpeqi	r2,r2,24
  807928:	1000091e 	bne	r2,zero,807950 <get_lse+0x198>
  80792c:	e0bfff17 	ldw	r2,-4(fp)
  807930:	10800017 	ldw	r2,0(r2)
  807934:	00c00304 	movi	r3,12
  807938:	10c00515 	stw	r3,20(r2)
  80793c:	e0bfff17 	ldw	r2,-4(fp)
  807940:	10800017 	ldw	r2,0(r2)
  807944:	10800017 	ldw	r2,0(r2)
  807948:	e13fff17 	ldw	r4,-4(fp)
  80794c:	103ee83a 	callr	r2
  807950:	e0bffa17 	ldw	r2,-24(fp)
  807954:	10000d1e 	bne	r2,zero,80798c <get_lse+0x1d4>
  807958:	e0bffb17 	ldw	r2,-20(fp)
  80795c:	10800317 	ldw	r2,12(r2)
  807960:	e13fff17 	ldw	r4,-4(fp)
  807964:	103ee83a 	callr	r2
  807968:	1000021e 	bne	r2,zero,807974 <get_lse+0x1bc>
  80796c:	0005883a 	mov	r2,zero
  807970:	00028806 	br	808394 <get_lse+0xbdc>
  807974:	e0bffb17 	ldw	r2,-20(fp)
  807978:	10800017 	ldw	r2,0(r2)
  80797c:	e0bff915 	stw	r2,-28(fp)
  807980:	e0bffb17 	ldw	r2,-20(fp)
  807984:	10800117 	ldw	r2,4(r2)
  807988:	e0bffa15 	stw	r2,-24(fp)
  80798c:	e0bffa17 	ldw	r2,-24(fp)
  807990:	10bfffc4 	addi	r2,r2,-1
  807994:	e0bffa15 	stw	r2,-24(fp)
  807998:	e0bff917 	ldw	r2,-28(fp)
  80799c:	10c00044 	addi	r3,r2,1
  8079a0:	e0fff915 	stw	r3,-28(fp)
  8079a4:	10800003 	ldbu	r2,0(r2)
  8079a8:	10803fcc 	andi	r2,r2,255
  8079ac:	e0bffd15 	stw	r2,-12(fp)
  8079b0:	e0bffd17 	ldw	r2,-12(fp)
  8079b4:	10800360 	cmpeqi	r2,r2,13
  8079b8:	10000e1e 	bne	r2,zero,8079f4 <get_lse+0x23c>
  8079bc:	e0bfff17 	ldw	r2,-4(fp)
  8079c0:	10800017 	ldw	r2,0(r2)
  8079c4:	00c01184 	movi	r3,70
  8079c8:	10c00515 	stw	r3,20(r2)
  8079cc:	e0bfff17 	ldw	r2,-4(fp)
  8079d0:	10800017 	ldw	r2,0(r2)
  8079d4:	e0ffff17 	ldw	r3,-4(fp)
  8079d8:	18c06e17 	ldw	r3,440(r3)
  8079dc:	10c00615 	stw	r3,24(r2)
  8079e0:	e0bfff17 	ldw	r2,-4(fp)
  8079e4:	10800017 	ldw	r2,0(r2)
  8079e8:	10800017 	ldw	r2,0(r2)
  8079ec:	e13fff17 	ldw	r4,-4(fp)
  8079f0:	103ee83a 	callr	r2
  8079f4:	e0bffa17 	ldw	r2,-24(fp)
  8079f8:	10000d1e 	bne	r2,zero,807a30 <get_lse+0x278>
  8079fc:	e0bffb17 	ldw	r2,-20(fp)
  807a00:	10800317 	ldw	r2,12(r2)
  807a04:	e13fff17 	ldw	r4,-4(fp)
  807a08:	103ee83a 	callr	r2
  807a0c:	1000021e 	bne	r2,zero,807a18 <get_lse+0x260>
  807a10:	0005883a 	mov	r2,zero
  807a14:	00025f06 	br	808394 <get_lse+0xbdc>
  807a18:	e0bffb17 	ldw	r2,-20(fp)
  807a1c:	10800017 	ldw	r2,0(r2)
  807a20:	e0bff915 	stw	r2,-28(fp)
  807a24:	e0bffb17 	ldw	r2,-20(fp)
  807a28:	10800117 	ldw	r2,4(r2)
  807a2c:	e0bffa15 	stw	r2,-24(fp)
  807a30:	e0bffa17 	ldw	r2,-24(fp)
  807a34:	10bfffc4 	addi	r2,r2,-1
  807a38:	e0bffa15 	stw	r2,-24(fp)
  807a3c:	e0bff917 	ldw	r2,-28(fp)
  807a40:	10c00044 	addi	r3,r2,1
  807a44:	e0fff915 	stw	r3,-28(fp)
  807a48:	10800003 	ldbu	r2,0(r2)
  807a4c:	10803fcc 	andi	r2,r2,255
  807a50:	1004923a 	slli	r2,r2,8
  807a54:	e0bffd15 	stw	r2,-12(fp)
  807a58:	e0bffa17 	ldw	r2,-24(fp)
  807a5c:	10000d1e 	bne	r2,zero,807a94 <get_lse+0x2dc>
  807a60:	e0bffb17 	ldw	r2,-20(fp)
  807a64:	10800317 	ldw	r2,12(r2)
  807a68:	e13fff17 	ldw	r4,-4(fp)
  807a6c:	103ee83a 	callr	r2
  807a70:	1000021e 	bne	r2,zero,807a7c <get_lse+0x2c4>
  807a74:	0005883a 	mov	r2,zero
  807a78:	00024606 	br	808394 <get_lse+0xbdc>
  807a7c:	e0bffb17 	ldw	r2,-20(fp)
  807a80:	10800017 	ldw	r2,0(r2)
  807a84:	e0bff915 	stw	r2,-28(fp)
  807a88:	e0bffb17 	ldw	r2,-20(fp)
  807a8c:	10800117 	ldw	r2,4(r2)
  807a90:	e0bffa15 	stw	r2,-24(fp)
  807a94:	e0bffa17 	ldw	r2,-24(fp)
  807a98:	10bfffc4 	addi	r2,r2,-1
  807a9c:	e0bffa15 	stw	r2,-24(fp)
  807aa0:	e0bff917 	ldw	r2,-28(fp)
  807aa4:	10c00044 	addi	r3,r2,1
  807aa8:	e0fff915 	stw	r3,-28(fp)
  807aac:	10800003 	ldbu	r2,0(r2)
  807ab0:	10803fcc 	andi	r2,r2,255
  807ab4:	e0fffd17 	ldw	r3,-12(fp)
  807ab8:	1885883a 	add	r2,r3,r2
  807abc:	e0bffd15 	stw	r2,-12(fp)
  807ac0:	e0bffd17 	ldw	r2,-12(fp)
  807ac4:	10803fe0 	cmpeqi	r2,r2,255
  807ac8:	10020626 	beq	r2,zero,8082e4 <get_lse+0xb2c>
  807acc:	e0bffa17 	ldw	r2,-24(fp)
  807ad0:	10000d1e 	bne	r2,zero,807b08 <get_lse+0x350>
  807ad4:	e0bffb17 	ldw	r2,-20(fp)
  807ad8:	10800317 	ldw	r2,12(r2)
  807adc:	e13fff17 	ldw	r4,-4(fp)
  807ae0:	103ee83a 	callr	r2
  807ae4:	1000021e 	bne	r2,zero,807af0 <get_lse+0x338>
  807ae8:	0005883a 	mov	r2,zero
  807aec:	00022906 	br	808394 <get_lse+0xbdc>
  807af0:	e0bffb17 	ldw	r2,-20(fp)
  807af4:	10800017 	ldw	r2,0(r2)
  807af8:	e0bff915 	stw	r2,-28(fp)
  807afc:	e0bffb17 	ldw	r2,-20(fp)
  807b00:	10800117 	ldw	r2,4(r2)
  807b04:	e0bffa15 	stw	r2,-24(fp)
  807b08:	e0bffa17 	ldw	r2,-24(fp)
  807b0c:	10bfffc4 	addi	r2,r2,-1
  807b10:	e0bffa15 	stw	r2,-24(fp)
  807b14:	e0bff917 	ldw	r2,-28(fp)
  807b18:	10c00044 	addi	r3,r2,1
  807b1c:	e0fff915 	stw	r3,-28(fp)
  807b20:	10800003 	ldbu	r2,0(r2)
  807b24:	10803fcc 	andi	r2,r2,255
  807b28:	e0bffd15 	stw	r2,-12(fp)
  807b2c:	e0bffd17 	ldw	r2,-12(fp)
  807b30:	108000e0 	cmpeqi	r2,r2,3
  807b34:	1001ed26 	beq	r2,zero,8082ec <get_lse+0xb34>
  807b38:	e0bffa17 	ldw	r2,-24(fp)
  807b3c:	10000d1e 	bne	r2,zero,807b74 <get_lse+0x3bc>
  807b40:	e0bffb17 	ldw	r2,-20(fp)
  807b44:	10800317 	ldw	r2,12(r2)
  807b48:	e13fff17 	ldw	r4,-4(fp)
  807b4c:	103ee83a 	callr	r2
  807b50:	1000021e 	bne	r2,zero,807b5c <get_lse+0x3a4>
  807b54:	0005883a 	mov	r2,zero
  807b58:	00020e06 	br	808394 <get_lse+0xbdc>
  807b5c:	e0bffb17 	ldw	r2,-20(fp)
  807b60:	10800017 	ldw	r2,0(r2)
  807b64:	e0bff915 	stw	r2,-28(fp)
  807b68:	e0bffb17 	ldw	r2,-20(fp)
  807b6c:	10800117 	ldw	r2,4(r2)
  807b70:	e0bffa15 	stw	r2,-24(fp)
  807b74:	e0bffa17 	ldw	r2,-24(fp)
  807b78:	10bfffc4 	addi	r2,r2,-1
  807b7c:	e0bffa15 	stw	r2,-24(fp)
  807b80:	e0bff917 	ldw	r2,-28(fp)
  807b84:	10c00044 	addi	r3,r2,1
  807b88:	e0fff915 	stw	r3,-28(fp)
  807b8c:	10800003 	ldbu	r2,0(r2)
  807b90:	10803fcc 	andi	r2,r2,255
  807b94:	e0bffe15 	stw	r2,-8(fp)
  807b98:	e0bfff17 	ldw	r2,-4(fp)
  807b9c:	10803617 	ldw	r2,216(r2)
  807ba0:	10801604 	addi	r2,r2,88
  807ba4:	10c00017 	ldw	r3,0(r2)
  807ba8:	e0bffe17 	ldw	r2,-8(fp)
  807bac:	1881d11e 	bne	r3,r2,8082f4 <get_lse+0xb3c>
  807bb0:	e0bffa17 	ldw	r2,-24(fp)
  807bb4:	10000d1e 	bne	r2,zero,807bec <get_lse+0x434>
  807bb8:	e0bffb17 	ldw	r2,-20(fp)
  807bbc:	10800317 	ldw	r2,12(r2)
  807bc0:	e13fff17 	ldw	r4,-4(fp)
  807bc4:	103ee83a 	callr	r2
  807bc8:	1000021e 	bne	r2,zero,807bd4 <get_lse+0x41c>
  807bcc:	0005883a 	mov	r2,zero
  807bd0:	0001f006 	br	808394 <get_lse+0xbdc>
  807bd4:	e0bffb17 	ldw	r2,-20(fp)
  807bd8:	10800017 	ldw	r2,0(r2)
  807bdc:	e0bff915 	stw	r2,-28(fp)
  807be0:	e0bffb17 	ldw	r2,-20(fp)
  807be4:	10800117 	ldw	r2,4(r2)
  807be8:	e0bffa15 	stw	r2,-24(fp)
  807bec:	e0bffa17 	ldw	r2,-24(fp)
  807bf0:	10bfffc4 	addi	r2,r2,-1
  807bf4:	e0bffa15 	stw	r2,-24(fp)
  807bf8:	e0bff917 	ldw	r2,-28(fp)
  807bfc:	10c00044 	addi	r3,r2,1
  807c00:	e0fff915 	stw	r3,-28(fp)
  807c04:	10800003 	ldbu	r2,0(r2)
  807c08:	10803fcc 	andi	r2,r2,255
  807c0c:	e0bffe15 	stw	r2,-8(fp)
  807c10:	e0bfff17 	ldw	r2,-4(fp)
  807c14:	10803617 	ldw	r2,216(r2)
  807c18:	10c00017 	ldw	r3,0(r2)
  807c1c:	e0bffe17 	ldw	r2,-8(fp)
  807c20:	1881b61e 	bne	r3,r2,8082fc <get_lse+0xb44>
  807c24:	e0bffa17 	ldw	r2,-24(fp)
  807c28:	10000d1e 	bne	r2,zero,807c60 <get_lse+0x4a8>
  807c2c:	e0bffb17 	ldw	r2,-20(fp)
  807c30:	10800317 	ldw	r2,12(r2)
  807c34:	e13fff17 	ldw	r4,-4(fp)
  807c38:	103ee83a 	callr	r2
  807c3c:	1000021e 	bne	r2,zero,807c48 <get_lse+0x490>
  807c40:	0005883a 	mov	r2,zero
  807c44:	0001d306 	br	808394 <get_lse+0xbdc>
  807c48:	e0bffb17 	ldw	r2,-20(fp)
  807c4c:	10800017 	ldw	r2,0(r2)
  807c50:	e0bff915 	stw	r2,-28(fp)
  807c54:	e0bffb17 	ldw	r2,-20(fp)
  807c58:	10800117 	ldw	r2,4(r2)
  807c5c:	e0bffa15 	stw	r2,-24(fp)
  807c60:	e0bffa17 	ldw	r2,-24(fp)
  807c64:	10bfffc4 	addi	r2,r2,-1
  807c68:	e0bffa15 	stw	r2,-24(fp)
  807c6c:	e0bff917 	ldw	r2,-28(fp)
  807c70:	10c00044 	addi	r3,r2,1
  807c74:	e0fff915 	stw	r3,-28(fp)
  807c78:	10800003 	ldbu	r2,0(r2)
  807c7c:	10803fcc 	andi	r2,r2,255
  807c80:	e0bffe15 	stw	r2,-8(fp)
  807c84:	e0bfff17 	ldw	r2,-4(fp)
  807c88:	10803617 	ldw	r2,216(r2)
  807c8c:	10802c04 	addi	r2,r2,176
  807c90:	10c00017 	ldw	r3,0(r2)
  807c94:	e0bffe17 	ldw	r2,-8(fp)
  807c98:	18819a1e 	bne	r3,r2,808304 <get_lse+0xb4c>
  807c9c:	e0bffa17 	ldw	r2,-24(fp)
  807ca0:	10000d1e 	bne	r2,zero,807cd8 <get_lse+0x520>
  807ca4:	e0bffb17 	ldw	r2,-20(fp)
  807ca8:	10800317 	ldw	r2,12(r2)
  807cac:	e13fff17 	ldw	r4,-4(fp)
  807cb0:	103ee83a 	callr	r2
  807cb4:	1000021e 	bne	r2,zero,807cc0 <get_lse+0x508>
  807cb8:	0005883a 	mov	r2,zero
  807cbc:	0001b506 	br	808394 <get_lse+0xbdc>
  807cc0:	e0bffb17 	ldw	r2,-20(fp)
  807cc4:	10800017 	ldw	r2,0(r2)
  807cc8:	e0bff915 	stw	r2,-28(fp)
  807ccc:	e0bffb17 	ldw	r2,-20(fp)
  807cd0:	10800117 	ldw	r2,4(r2)
  807cd4:	e0bffa15 	stw	r2,-24(fp)
  807cd8:	e0bffa17 	ldw	r2,-24(fp)
  807cdc:	10bfffc4 	addi	r2,r2,-1
  807ce0:	e0bffa15 	stw	r2,-24(fp)
  807ce4:	e0bff917 	ldw	r2,-28(fp)
  807ce8:	10c00044 	addi	r3,r2,1
  807cec:	e0fff915 	stw	r3,-28(fp)
  807cf0:	10800003 	ldbu	r2,0(r2)
  807cf4:	10803fcc 	andi	r2,r2,255
  807cf8:	e0bffd15 	stw	r2,-12(fp)
  807cfc:	e0bffd17 	ldw	r2,-12(fp)
  807d00:	10802020 	cmpeqi	r2,r2,128
  807d04:	10018126 	beq	r2,zero,80830c <get_lse+0xb54>
  807d08:	e0bffa17 	ldw	r2,-24(fp)
  807d0c:	10000d1e 	bne	r2,zero,807d44 <get_lse+0x58c>
  807d10:	e0bffb17 	ldw	r2,-20(fp)
  807d14:	10800317 	ldw	r2,12(r2)
  807d18:	e13fff17 	ldw	r4,-4(fp)
  807d1c:	103ee83a 	callr	r2
  807d20:	1000021e 	bne	r2,zero,807d2c <get_lse+0x574>
  807d24:	0005883a 	mov	r2,zero
  807d28:	00019a06 	br	808394 <get_lse+0xbdc>
  807d2c:	e0bffb17 	ldw	r2,-20(fp)
  807d30:	10800017 	ldw	r2,0(r2)
  807d34:	e0bff915 	stw	r2,-28(fp)
  807d38:	e0bffb17 	ldw	r2,-20(fp)
  807d3c:	10800117 	ldw	r2,4(r2)
  807d40:	e0bffa15 	stw	r2,-24(fp)
  807d44:	e0bffa17 	ldw	r2,-24(fp)
  807d48:	10bfffc4 	addi	r2,r2,-1
  807d4c:	e0bffa15 	stw	r2,-24(fp)
  807d50:	e0bff917 	ldw	r2,-28(fp)
  807d54:	10c00044 	addi	r3,r2,1
  807d58:	e0fff915 	stw	r3,-28(fp)
  807d5c:	10800003 	ldbu	r2,0(r2)
  807d60:	10803fcc 	andi	r2,r2,255
  807d64:	1004923a 	slli	r2,r2,8
  807d68:	e0bffd15 	stw	r2,-12(fp)
  807d6c:	e0bffa17 	ldw	r2,-24(fp)
  807d70:	10000d1e 	bne	r2,zero,807da8 <get_lse+0x5f0>
  807d74:	e0bffb17 	ldw	r2,-20(fp)
  807d78:	10800317 	ldw	r2,12(r2)
  807d7c:	e13fff17 	ldw	r4,-4(fp)
  807d80:	103ee83a 	callr	r2
  807d84:	1000021e 	bne	r2,zero,807d90 <get_lse+0x5d8>
  807d88:	0005883a 	mov	r2,zero
  807d8c:	00018106 	br	808394 <get_lse+0xbdc>
  807d90:	e0bffb17 	ldw	r2,-20(fp)
  807d94:	10800017 	ldw	r2,0(r2)
  807d98:	e0bff915 	stw	r2,-28(fp)
  807d9c:	e0bffb17 	ldw	r2,-20(fp)
  807da0:	10800117 	ldw	r2,4(r2)
  807da4:	e0bffa15 	stw	r2,-24(fp)
  807da8:	e0bffa17 	ldw	r2,-24(fp)
  807dac:	10bfffc4 	addi	r2,r2,-1
  807db0:	e0bffa15 	stw	r2,-24(fp)
  807db4:	e0bff917 	ldw	r2,-28(fp)
  807db8:	10c00044 	addi	r3,r2,1
  807dbc:	e0fff915 	stw	r3,-28(fp)
  807dc0:	10800003 	ldbu	r2,0(r2)
  807dc4:	10803fcc 	andi	r2,r2,255
  807dc8:	e0fffd17 	ldw	r3,-12(fp)
  807dcc:	1885883a 	add	r2,r3,r2
  807dd0:	e0bffd15 	stw	r2,-12(fp)
  807dd4:	e0bffd17 	ldw	r2,-12(fp)
  807dd8:	10014e1e 	bne	r2,zero,808314 <get_lse+0xb5c>
  807ddc:	e0bffa17 	ldw	r2,-24(fp)
  807de0:	10000d1e 	bne	r2,zero,807e18 <get_lse+0x660>
  807de4:	e0bffb17 	ldw	r2,-20(fp)
  807de8:	10800317 	ldw	r2,12(r2)
  807dec:	e13fff17 	ldw	r4,-4(fp)
  807df0:	103ee83a 	callr	r2
  807df4:	1000021e 	bne	r2,zero,807e00 <get_lse+0x648>
  807df8:	0005883a 	mov	r2,zero
  807dfc:	00016506 	br	808394 <get_lse+0xbdc>
  807e00:	e0bffb17 	ldw	r2,-20(fp)
  807e04:	10800017 	ldw	r2,0(r2)
  807e08:	e0bff915 	stw	r2,-28(fp)
  807e0c:	e0bffb17 	ldw	r2,-20(fp)
  807e10:	10800117 	ldw	r2,4(r2)
  807e14:	e0bffa15 	stw	r2,-24(fp)
  807e18:	e0bffa17 	ldw	r2,-24(fp)
  807e1c:	10bfffc4 	addi	r2,r2,-1
  807e20:	e0bffa15 	stw	r2,-24(fp)
  807e24:	e0bff917 	ldw	r2,-28(fp)
  807e28:	10c00044 	addi	r3,r2,1
  807e2c:	e0fff915 	stw	r3,-28(fp)
  807e30:	10800003 	ldbu	r2,0(r2)
  807e34:	10803fcc 	andi	r2,r2,255
  807e38:	1004923a 	slli	r2,r2,8
  807e3c:	e0bffd15 	stw	r2,-12(fp)
  807e40:	e0bffa17 	ldw	r2,-24(fp)
  807e44:	10000d1e 	bne	r2,zero,807e7c <get_lse+0x6c4>
  807e48:	e0bffb17 	ldw	r2,-20(fp)
  807e4c:	10800317 	ldw	r2,12(r2)
  807e50:	e13fff17 	ldw	r4,-4(fp)
  807e54:	103ee83a 	callr	r2
  807e58:	1000021e 	bne	r2,zero,807e64 <get_lse+0x6ac>
  807e5c:	0005883a 	mov	r2,zero
  807e60:	00014c06 	br	808394 <get_lse+0xbdc>
  807e64:	e0bffb17 	ldw	r2,-20(fp)
  807e68:	10800017 	ldw	r2,0(r2)
  807e6c:	e0bff915 	stw	r2,-28(fp)
  807e70:	e0bffb17 	ldw	r2,-20(fp)
  807e74:	10800117 	ldw	r2,4(r2)
  807e78:	e0bffa15 	stw	r2,-24(fp)
  807e7c:	e0bffa17 	ldw	r2,-24(fp)
  807e80:	10bfffc4 	addi	r2,r2,-1
  807e84:	e0bffa15 	stw	r2,-24(fp)
  807e88:	e0bff917 	ldw	r2,-28(fp)
  807e8c:	10c00044 	addi	r3,r2,1
  807e90:	e0fff915 	stw	r3,-28(fp)
  807e94:	10800003 	ldbu	r2,0(r2)
  807e98:	10803fcc 	andi	r2,r2,255
  807e9c:	e0fffd17 	ldw	r3,-12(fp)
  807ea0:	1885883a 	add	r2,r3,r2
  807ea4:	e0bffd15 	stw	r2,-12(fp)
  807ea8:	e0bffd17 	ldw	r2,-12(fp)
  807eac:	10011b1e 	bne	r2,zero,80831c <get_lse+0xb64>
  807eb0:	e0bffa17 	ldw	r2,-24(fp)
  807eb4:	10000d1e 	bne	r2,zero,807eec <get_lse+0x734>
  807eb8:	e0bffb17 	ldw	r2,-20(fp)
  807ebc:	10800317 	ldw	r2,12(r2)
  807ec0:	e13fff17 	ldw	r4,-4(fp)
  807ec4:	103ee83a 	callr	r2
  807ec8:	1000021e 	bne	r2,zero,807ed4 <get_lse+0x71c>
  807ecc:	0005883a 	mov	r2,zero
  807ed0:	00013006 	br	808394 <get_lse+0xbdc>
  807ed4:	e0bffb17 	ldw	r2,-20(fp)
  807ed8:	10800017 	ldw	r2,0(r2)
  807edc:	e0bff915 	stw	r2,-28(fp)
  807ee0:	e0bffb17 	ldw	r2,-20(fp)
  807ee4:	10800117 	ldw	r2,4(r2)
  807ee8:	e0bffa15 	stw	r2,-24(fp)
  807eec:	e0bffa17 	ldw	r2,-24(fp)
  807ef0:	10bfffc4 	addi	r2,r2,-1
  807ef4:	e0bffa15 	stw	r2,-24(fp)
  807ef8:	e0bff917 	ldw	r2,-28(fp)
  807efc:	10c00044 	addi	r3,r2,1
  807f00:	e0fff915 	stw	r3,-28(fp)
  807f04:	10800003 	ldbu	r2,0(r2)
  807f08:	10803fcc 	andi	r2,r2,255
  807f0c:	e0bffd15 	stw	r2,-12(fp)
  807f10:	e0bffd17 	ldw	r2,-12(fp)
  807f14:	1001031e 	bne	r2,zero,808324 <get_lse+0xb6c>
  807f18:	e0bffa17 	ldw	r2,-24(fp)
  807f1c:	10000d1e 	bne	r2,zero,807f54 <get_lse+0x79c>
  807f20:	e0bffb17 	ldw	r2,-20(fp)
  807f24:	10800317 	ldw	r2,12(r2)
  807f28:	e13fff17 	ldw	r4,-4(fp)
  807f2c:	103ee83a 	callr	r2
  807f30:	1000021e 	bne	r2,zero,807f3c <get_lse+0x784>
  807f34:	0005883a 	mov	r2,zero
  807f38:	00011606 	br	808394 <get_lse+0xbdc>
  807f3c:	e0bffb17 	ldw	r2,-20(fp)
  807f40:	10800017 	ldw	r2,0(r2)
  807f44:	e0bff915 	stw	r2,-28(fp)
  807f48:	e0bffb17 	ldw	r2,-20(fp)
  807f4c:	10800117 	ldw	r2,4(r2)
  807f50:	e0bffa15 	stw	r2,-24(fp)
  807f54:	e0bffa17 	ldw	r2,-24(fp)
  807f58:	10bfffc4 	addi	r2,r2,-1
  807f5c:	e0bffa15 	stw	r2,-24(fp)
  807f60:	e0bff917 	ldw	r2,-28(fp)
  807f64:	10c00044 	addi	r3,r2,1
  807f68:	e0fff915 	stw	r3,-28(fp)
  807f6c:	10800003 	ldbu	r2,0(r2)
  807f70:	10803fcc 	andi	r2,r2,255
  807f74:	1004923a 	slli	r2,r2,8
  807f78:	e0bffd15 	stw	r2,-12(fp)
  807f7c:	e0bffa17 	ldw	r2,-24(fp)
  807f80:	10000d1e 	bne	r2,zero,807fb8 <get_lse+0x800>
  807f84:	e0bffb17 	ldw	r2,-20(fp)
  807f88:	10800317 	ldw	r2,12(r2)
  807f8c:	e13fff17 	ldw	r4,-4(fp)
  807f90:	103ee83a 	callr	r2
  807f94:	1000021e 	bne	r2,zero,807fa0 <get_lse+0x7e8>
  807f98:	0005883a 	mov	r2,zero
  807f9c:	0000fd06 	br	808394 <get_lse+0xbdc>
  807fa0:	e0bffb17 	ldw	r2,-20(fp)
  807fa4:	10800017 	ldw	r2,0(r2)
  807fa8:	e0bff915 	stw	r2,-28(fp)
  807fac:	e0bffb17 	ldw	r2,-20(fp)
  807fb0:	10800117 	ldw	r2,4(r2)
  807fb4:	e0bffa15 	stw	r2,-24(fp)
  807fb8:	e0bffa17 	ldw	r2,-24(fp)
  807fbc:	10bfffc4 	addi	r2,r2,-1
  807fc0:	e0bffa15 	stw	r2,-24(fp)
  807fc4:	e0bff917 	ldw	r2,-28(fp)
  807fc8:	10c00044 	addi	r3,r2,1
  807fcc:	e0fff915 	stw	r3,-28(fp)
  807fd0:	10800003 	ldbu	r2,0(r2)
  807fd4:	10803fcc 	andi	r2,r2,255
  807fd8:	e0fffd17 	ldw	r3,-12(fp)
  807fdc:	1885883a 	add	r2,r3,r2
  807fe0:	e0bffd15 	stw	r2,-12(fp)
  807fe4:	e0bffd17 	ldw	r2,-12(fp)
  807fe8:	10800060 	cmpeqi	r2,r2,1
  807fec:	1000cf26 	beq	r2,zero,80832c <get_lse+0xb74>
  807ff0:	e0bffa17 	ldw	r2,-24(fp)
  807ff4:	10000d1e 	bne	r2,zero,80802c <get_lse+0x874>
  807ff8:	e0bffb17 	ldw	r2,-20(fp)
  807ffc:	10800317 	ldw	r2,12(r2)
  808000:	e13fff17 	ldw	r4,-4(fp)
  808004:	103ee83a 	callr	r2
  808008:	1000021e 	bne	r2,zero,808014 <get_lse+0x85c>
  80800c:	0005883a 	mov	r2,zero
  808010:	0000e006 	br	808394 <get_lse+0xbdc>
  808014:	e0bffb17 	ldw	r2,-20(fp)
  808018:	10800017 	ldw	r2,0(r2)
  80801c:	e0bff915 	stw	r2,-28(fp)
  808020:	e0bffb17 	ldw	r2,-20(fp)
  808024:	10800117 	ldw	r2,4(r2)
  808028:	e0bffa15 	stw	r2,-24(fp)
  80802c:	e0bffa17 	ldw	r2,-24(fp)
  808030:	10bfffc4 	addi	r2,r2,-1
  808034:	e0bffa15 	stw	r2,-24(fp)
  808038:	e0bff917 	ldw	r2,-28(fp)
  80803c:	10c00044 	addi	r3,r2,1
  808040:	e0fff915 	stw	r3,-28(fp)
  808044:	10800003 	ldbu	r2,0(r2)
  808048:	10803fcc 	andi	r2,r2,255
  80804c:	1004923a 	slli	r2,r2,8
  808050:	e0bffd15 	stw	r2,-12(fp)
  808054:	e0bffa17 	ldw	r2,-24(fp)
  808058:	10000d1e 	bne	r2,zero,808090 <get_lse+0x8d8>
  80805c:	e0bffb17 	ldw	r2,-20(fp)
  808060:	10800317 	ldw	r2,12(r2)
  808064:	e13fff17 	ldw	r4,-4(fp)
  808068:	103ee83a 	callr	r2
  80806c:	1000021e 	bne	r2,zero,808078 <get_lse+0x8c0>
  808070:	0005883a 	mov	r2,zero
  808074:	0000c706 	br	808394 <get_lse+0xbdc>
  808078:	e0bffb17 	ldw	r2,-20(fp)
  80807c:	10800017 	ldw	r2,0(r2)
  808080:	e0bff915 	stw	r2,-28(fp)
  808084:	e0bffb17 	ldw	r2,-20(fp)
  808088:	10800117 	ldw	r2,4(r2)
  80808c:	e0bffa15 	stw	r2,-24(fp)
  808090:	e0bffa17 	ldw	r2,-24(fp)
  808094:	10bfffc4 	addi	r2,r2,-1
  808098:	e0bffa15 	stw	r2,-24(fp)
  80809c:	e0bff917 	ldw	r2,-28(fp)
  8080a0:	10c00044 	addi	r3,r2,1
  8080a4:	e0fff915 	stw	r3,-28(fp)
  8080a8:	10800003 	ldbu	r2,0(r2)
  8080ac:	10803fcc 	andi	r2,r2,255
  8080b0:	e0fffd17 	ldw	r3,-12(fp)
  8080b4:	1885883a 	add	r2,r3,r2
  8080b8:	e0bffd15 	stw	r2,-12(fp)
  8080bc:	e0bffd17 	ldw	r2,-12(fp)
  8080c0:	10009c1e 	bne	r2,zero,808334 <get_lse+0xb7c>
  8080c4:	e0bffa17 	ldw	r2,-24(fp)
  8080c8:	10000d1e 	bne	r2,zero,808100 <get_lse+0x948>
  8080cc:	e0bffb17 	ldw	r2,-20(fp)
  8080d0:	10800317 	ldw	r2,12(r2)
  8080d4:	e13fff17 	ldw	r4,-4(fp)
  8080d8:	103ee83a 	callr	r2
  8080dc:	1000021e 	bne	r2,zero,8080e8 <get_lse+0x930>
  8080e0:	0005883a 	mov	r2,zero
  8080e4:	0000ab06 	br	808394 <get_lse+0xbdc>
  8080e8:	e0bffb17 	ldw	r2,-20(fp)
  8080ec:	10800017 	ldw	r2,0(r2)
  8080f0:	e0bff915 	stw	r2,-28(fp)
  8080f4:	e0bffb17 	ldw	r2,-20(fp)
  8080f8:	10800117 	ldw	r2,4(r2)
  8080fc:	e0bffa15 	stw	r2,-24(fp)
  808100:	e0bffa17 	ldw	r2,-24(fp)
  808104:	10bfffc4 	addi	r2,r2,-1
  808108:	e0bffa15 	stw	r2,-24(fp)
  80810c:	e0bff917 	ldw	r2,-28(fp)
  808110:	10c00044 	addi	r3,r2,1
  808114:	e0fff915 	stw	r3,-28(fp)
  808118:	10800003 	ldbu	r2,0(r2)
  80811c:	10803fcc 	andi	r2,r2,255
  808120:	e0bffd15 	stw	r2,-12(fp)
  808124:	e0bffd17 	ldw	r2,-12(fp)
  808128:	1000841e 	bne	r2,zero,80833c <get_lse+0xb84>
  80812c:	e0bffa17 	ldw	r2,-24(fp)
  808130:	10000d1e 	bne	r2,zero,808168 <get_lse+0x9b0>
  808134:	e0bffb17 	ldw	r2,-20(fp)
  808138:	10800317 	ldw	r2,12(r2)
  80813c:	e13fff17 	ldw	r4,-4(fp)
  808140:	103ee83a 	callr	r2
  808144:	1000021e 	bne	r2,zero,808150 <get_lse+0x998>
  808148:	0005883a 	mov	r2,zero
  80814c:	00009106 	br	808394 <get_lse+0xbdc>
  808150:	e0bffb17 	ldw	r2,-20(fp)
  808154:	10800017 	ldw	r2,0(r2)
  808158:	e0bff915 	stw	r2,-28(fp)
  80815c:	e0bffb17 	ldw	r2,-20(fp)
  808160:	10800117 	ldw	r2,4(r2)
  808164:	e0bffa15 	stw	r2,-24(fp)
  808168:	e0bffa17 	ldw	r2,-24(fp)
  80816c:	10bfffc4 	addi	r2,r2,-1
  808170:	e0bffa15 	stw	r2,-24(fp)
  808174:	e0bff917 	ldw	r2,-28(fp)
  808178:	10c00044 	addi	r3,r2,1
  80817c:	e0fff915 	stw	r3,-28(fp)
  808180:	10800003 	ldbu	r2,0(r2)
  808184:	10803fcc 	andi	r2,r2,255
  808188:	1004923a 	slli	r2,r2,8
  80818c:	e0bffd15 	stw	r2,-12(fp)
  808190:	e0bffa17 	ldw	r2,-24(fp)
  808194:	10000d1e 	bne	r2,zero,8081cc <get_lse+0xa14>
  808198:	e0bffb17 	ldw	r2,-20(fp)
  80819c:	10800317 	ldw	r2,12(r2)
  8081a0:	e13fff17 	ldw	r4,-4(fp)
  8081a4:	103ee83a 	callr	r2
  8081a8:	1000021e 	bne	r2,zero,8081b4 <get_lse+0x9fc>
  8081ac:	0005883a 	mov	r2,zero
  8081b0:	00007806 	br	808394 <get_lse+0xbdc>
  8081b4:	e0bffb17 	ldw	r2,-20(fp)
  8081b8:	10800017 	ldw	r2,0(r2)
  8081bc:	e0bff915 	stw	r2,-28(fp)
  8081c0:	e0bffb17 	ldw	r2,-20(fp)
  8081c4:	10800117 	ldw	r2,4(r2)
  8081c8:	e0bffa15 	stw	r2,-24(fp)
  8081cc:	e0bffa17 	ldw	r2,-24(fp)
  8081d0:	10bfffc4 	addi	r2,r2,-1
  8081d4:	e0bffa15 	stw	r2,-24(fp)
  8081d8:	e0bff917 	ldw	r2,-28(fp)
  8081dc:	10c00044 	addi	r3,r2,1
  8081e0:	e0fff915 	stw	r3,-28(fp)
  8081e4:	10800003 	ldbu	r2,0(r2)
  8081e8:	10803fcc 	andi	r2,r2,255
  8081ec:	e0fffd17 	ldw	r3,-12(fp)
  8081f0:	1885883a 	add	r2,r3,r2
  8081f4:	e0bffd15 	stw	r2,-12(fp)
  8081f8:	e0bffd17 	ldw	r2,-12(fp)
  8081fc:	10800060 	cmpeqi	r2,r2,1
  808200:	10005026 	beq	r2,zero,808344 <get_lse+0xb8c>
  808204:	e0bffa17 	ldw	r2,-24(fp)
  808208:	10000d1e 	bne	r2,zero,808240 <get_lse+0xa88>
  80820c:	e0bffb17 	ldw	r2,-20(fp)
  808210:	10800317 	ldw	r2,12(r2)
  808214:	e13fff17 	ldw	r4,-4(fp)
  808218:	103ee83a 	callr	r2
  80821c:	1000021e 	bne	r2,zero,808228 <get_lse+0xa70>
  808220:	0005883a 	mov	r2,zero
  808224:	00005b06 	br	808394 <get_lse+0xbdc>
  808228:	e0bffb17 	ldw	r2,-20(fp)
  80822c:	10800017 	ldw	r2,0(r2)
  808230:	e0bff915 	stw	r2,-28(fp)
  808234:	e0bffb17 	ldw	r2,-20(fp)
  808238:	10800117 	ldw	r2,4(r2)
  80823c:	e0bffa15 	stw	r2,-24(fp)
  808240:	e0bffa17 	ldw	r2,-24(fp)
  808244:	10bfffc4 	addi	r2,r2,-1
  808248:	e0bffa15 	stw	r2,-24(fp)
  80824c:	e0bff917 	ldw	r2,-28(fp)
  808250:	10c00044 	addi	r3,r2,1
  808254:	e0fff915 	stw	r3,-28(fp)
  808258:	10800003 	ldbu	r2,0(r2)
  80825c:	10803fcc 	andi	r2,r2,255
  808260:	1004923a 	slli	r2,r2,8
  808264:	e0bffd15 	stw	r2,-12(fp)
  808268:	e0bffa17 	ldw	r2,-24(fp)
  80826c:	10000d1e 	bne	r2,zero,8082a4 <get_lse+0xaec>
  808270:	e0bffb17 	ldw	r2,-20(fp)
  808274:	10800317 	ldw	r2,12(r2)
  808278:	e13fff17 	ldw	r4,-4(fp)
  80827c:	103ee83a 	callr	r2
  808280:	1000021e 	bne	r2,zero,80828c <get_lse+0xad4>
  808284:	0005883a 	mov	r2,zero
  808288:	00004206 	br	808394 <get_lse+0xbdc>
  80828c:	e0bffb17 	ldw	r2,-20(fp)
  808290:	10800017 	ldw	r2,0(r2)
  808294:	e0bff915 	stw	r2,-28(fp)
  808298:	e0bffb17 	ldw	r2,-20(fp)
  80829c:	10800117 	ldw	r2,4(r2)
  8082a0:	e0bffa15 	stw	r2,-24(fp)
  8082a4:	e0bffa17 	ldw	r2,-24(fp)
  8082a8:	10bfffc4 	addi	r2,r2,-1
  8082ac:	e0bffa15 	stw	r2,-24(fp)
  8082b0:	e0bff917 	ldw	r2,-28(fp)
  8082b4:	10c00044 	addi	r3,r2,1
  8082b8:	e0fff915 	stw	r3,-28(fp)
  8082bc:	10800003 	ldbu	r2,0(r2)
  8082c0:	10803fcc 	andi	r2,r2,255
  8082c4:	e0fffd17 	ldw	r3,-12(fp)
  8082c8:	1885883a 	add	r2,r3,r2
  8082cc:	e0bffd15 	stw	r2,-12(fp)
  8082d0:	e0bffd17 	ldw	r2,-12(fp)
  8082d4:	10002526 	beq	r2,zero,80836c <get_lse+0xbb4>
  8082d8:	00001b06 	br	808348 <get_lse+0xb90>
  8082dc:	0001883a 	nop
  8082e0:	00001906 	br	808348 <get_lse+0xb90>
  8082e4:	0001883a 	nop
  8082e8:	00001706 	br	808348 <get_lse+0xb90>
  8082ec:	0001883a 	nop
  8082f0:	00001506 	br	808348 <get_lse+0xb90>
  8082f4:	0001883a 	nop
  8082f8:	00001306 	br	808348 <get_lse+0xb90>
  8082fc:	0001883a 	nop
  808300:	00001106 	br	808348 <get_lse+0xb90>
  808304:	0001883a 	nop
  808308:	00000f06 	br	808348 <get_lse+0xb90>
  80830c:	0001883a 	nop
  808310:	00000d06 	br	808348 <get_lse+0xb90>
  808314:	0001883a 	nop
  808318:	00000b06 	br	808348 <get_lse+0xb90>
  80831c:	0001883a 	nop
  808320:	00000906 	br	808348 <get_lse+0xb90>
  808324:	0001883a 	nop
  808328:	00000706 	br	808348 <get_lse+0xb90>
  80832c:	0001883a 	nop
  808330:	00000506 	br	808348 <get_lse+0xb90>
  808334:	0001883a 	nop
  808338:	00000306 	br	808348 <get_lse+0xb90>
  80833c:	0001883a 	nop
  808340:	00000106 	br	808348 <get_lse+0xb90>
  808344:	0001883a 	nop
  808348:	e0bfff17 	ldw	r2,-4(fp)
  80834c:	10800017 	ldw	r2,0(r2)
  808350:	00c00704 	movi	r3,28
  808354:	10c00515 	stw	r3,20(r2)
  808358:	e0bfff17 	ldw	r2,-4(fp)
  80835c:	10800017 	ldw	r2,0(r2)
  808360:	10800017 	ldw	r2,0(r2)
  808364:	e13fff17 	ldw	r4,-4(fp)
  808368:	103ee83a 	callr	r2
  80836c:	e0bfff17 	ldw	r2,-4(fp)
  808370:	00c00044 	movi	r3,1
  808374:	10c04c15 	stw	r3,304(r2)
  808378:	e0bffb17 	ldw	r2,-20(fp)
  80837c:	e0fff917 	ldw	r3,-28(fp)
  808380:	10c00015 	stw	r3,0(r2)
  808384:	e0bffb17 	ldw	r2,-20(fp)
  808388:	e0fffa17 	ldw	r3,-24(fp)
  80838c:	10c00115 	stw	r3,4(r2)
  808390:	00800044 	movi	r2,1
  808394:	e037883a 	mov	sp,fp
  808398:	dfc00117 	ldw	ra,4(sp)
  80839c:	df000017 	ldw	fp,0(sp)
  8083a0:	dec00204 	addi	sp,sp,8
  8083a4:	f800283a 	ret

008083a8 <examine_app0>:
  8083a8:	defff804 	addi	sp,sp,-32
  8083ac:	dfc00715 	stw	ra,28(sp)
  8083b0:	df000615 	stw	fp,24(sp)
  8083b4:	df000604 	addi	fp,sp,24
  8083b8:	e13ffc15 	stw	r4,-16(fp)
  8083bc:	e17ffd15 	stw	r5,-12(fp)
  8083c0:	e1bffe15 	stw	r6,-8(fp)
  8083c4:	e1ffff15 	stw	r7,-4(fp)
  8083c8:	e0fffe17 	ldw	r3,-8(fp)
  8083cc:	e0bfff17 	ldw	r2,-4(fp)
  8083d0:	1885883a 	add	r2,r3,r2
  8083d4:	e0bffa15 	stw	r2,-24(fp)
  8083d8:	e0bffe17 	ldw	r2,-8(fp)
  8083dc:	108003b0 	cmpltui	r2,r2,14
  8083e0:	1000d61e 	bne	r2,zero,80873c <examine_app0+0x394>
  8083e4:	e0bffd17 	ldw	r2,-12(fp)
  8083e8:	10800003 	ldbu	r2,0(r2)
  8083ec:	10803fcc 	andi	r2,r2,255
  8083f0:	10801298 	cmpnei	r2,r2,74
  8083f4:	1000d11e 	bne	r2,zero,80873c <examine_app0+0x394>
  8083f8:	e0bffd17 	ldw	r2,-12(fp)
  8083fc:	10800044 	addi	r2,r2,1
  808400:	10800003 	ldbu	r2,0(r2)
  808404:	10803fcc 	andi	r2,r2,255
  808408:	10801198 	cmpnei	r2,r2,70
  80840c:	1000cb1e 	bne	r2,zero,80873c <examine_app0+0x394>
  808410:	e0bffd17 	ldw	r2,-12(fp)
  808414:	10800084 	addi	r2,r2,2
  808418:	10800003 	ldbu	r2,0(r2)
  80841c:	10803fcc 	andi	r2,r2,255
  808420:	10801258 	cmpnei	r2,r2,73
  808424:	1000c51e 	bne	r2,zero,80873c <examine_app0+0x394>
  808428:	e0bffd17 	ldw	r2,-12(fp)
  80842c:	108000c4 	addi	r2,r2,3
  808430:	10800003 	ldbu	r2,0(r2)
  808434:	10803fcc 	andi	r2,r2,255
  808438:	10801198 	cmpnei	r2,r2,70
  80843c:	1000bf1e 	bne	r2,zero,80873c <examine_app0+0x394>
  808440:	e0bffd17 	ldw	r2,-12(fp)
  808444:	10800104 	addi	r2,r2,4
  808448:	10800003 	ldbu	r2,0(r2)
  80844c:	10803fcc 	andi	r2,r2,255
  808450:	1000ba1e 	bne	r2,zero,80873c <examine_app0+0x394>
  808454:	e0bffc17 	ldw	r2,-16(fp)
  808458:	00c00044 	movi	r3,1
  80845c:	10c04715 	stw	r3,284(r2)
  808460:	e0bffd17 	ldw	r2,-12(fp)
  808464:	10c00143 	ldbu	r3,5(r2)
  808468:	e0bffc17 	ldw	r2,-16(fp)
  80846c:	10c04805 	stb	r3,288(r2)
  808470:	e0bffd17 	ldw	r2,-12(fp)
  808474:	10c00183 	ldbu	r3,6(r2)
  808478:	e0bffc17 	ldw	r2,-16(fp)
  80847c:	10c04845 	stb	r3,289(r2)
  808480:	e0bffd17 	ldw	r2,-12(fp)
  808484:	10c001c3 	ldbu	r3,7(r2)
  808488:	e0bffc17 	ldw	r2,-16(fp)
  80848c:	10c04885 	stb	r3,290(r2)
  808490:	e0bffd17 	ldw	r2,-12(fp)
  808494:	10800204 	addi	r2,r2,8
  808498:	10800003 	ldbu	r2,0(r2)
  80849c:	10803fcc 	andi	r2,r2,255
  8084a0:	1004923a 	slli	r2,r2,8
  8084a4:	1007883a 	mov	r3,r2
  8084a8:	e0bffd17 	ldw	r2,-12(fp)
  8084ac:	10800244 	addi	r2,r2,9
  8084b0:	10800003 	ldbu	r2,0(r2)
  8084b4:	10803fcc 	andi	r2,r2,255
  8084b8:	1885883a 	add	r2,r3,r2
  8084bc:	1007883a 	mov	r3,r2
  8084c0:	e0bffc17 	ldw	r2,-16(fp)
  8084c4:	10c0490d 	sth	r3,292(r2)
  8084c8:	e0bffd17 	ldw	r2,-12(fp)
  8084cc:	10800284 	addi	r2,r2,10
  8084d0:	10800003 	ldbu	r2,0(r2)
  8084d4:	10803fcc 	andi	r2,r2,255
  8084d8:	1004923a 	slli	r2,r2,8
  8084dc:	1007883a 	mov	r3,r2
  8084e0:	e0bffd17 	ldw	r2,-12(fp)
  8084e4:	108002c4 	addi	r2,r2,11
  8084e8:	10800003 	ldbu	r2,0(r2)
  8084ec:	10803fcc 	andi	r2,r2,255
  8084f0:	1885883a 	add	r2,r3,r2
  8084f4:	1007883a 	mov	r3,r2
  8084f8:	e0bffc17 	ldw	r2,-16(fp)
  8084fc:	10c0498d 	sth	r3,294(r2)
  808500:	e0bffc17 	ldw	r2,-16(fp)
  808504:	10804803 	ldbu	r2,288(r2)
  808508:	10803fcc 	andi	r2,r2,255
  80850c:	10800060 	cmpeqi	r2,r2,1
  808510:	10001b1e 	bne	r2,zero,808580 <examine_app0+0x1d8>
  808514:	e0bffc17 	ldw	r2,-16(fp)
  808518:	10804803 	ldbu	r2,288(r2)
  80851c:	10803fcc 	andi	r2,r2,255
  808520:	108000a0 	cmpeqi	r2,r2,2
  808524:	1000161e 	bne	r2,zero,808580 <examine_app0+0x1d8>
  808528:	e0bffc17 	ldw	r2,-16(fp)
  80852c:	10800017 	ldw	r2,0(r2)
  808530:	00c01e84 	movi	r3,122
  808534:	10c00515 	stw	r3,20(r2)
  808538:	e0bffc17 	ldw	r2,-16(fp)
  80853c:	10800017 	ldw	r2,0(r2)
  808540:	e0fffc17 	ldw	r3,-16(fp)
  808544:	18c04803 	ldbu	r3,288(r3)
  808548:	18c03fcc 	andi	r3,r3,255
  80854c:	10c00615 	stw	r3,24(r2)
  808550:	e0bffc17 	ldw	r2,-16(fp)
  808554:	10800017 	ldw	r2,0(r2)
  808558:	e0fffc17 	ldw	r3,-16(fp)
  80855c:	18c04843 	ldbu	r3,289(r3)
  808560:	18c03fcc 	andi	r3,r3,255
  808564:	10c00715 	stw	r3,28(r2)
  808568:	e0bffc17 	ldw	r2,-16(fp)
  80856c:	10800017 	ldw	r2,0(r2)
  808570:	10800117 	ldw	r2,4(r2)
  808574:	017fffc4 	movi	r5,-1
  808578:	e13ffc17 	ldw	r4,-16(fp)
  80857c:	103ee83a 	callr	r2
  808580:	e0bffc17 	ldw	r2,-16(fp)
  808584:	10800017 	ldw	r2,0(r2)
  808588:	10800604 	addi	r2,r2,24
  80858c:	e0bffb15 	stw	r2,-20(fp)
  808590:	e0bffc17 	ldw	r2,-16(fp)
  808594:	10804803 	ldbu	r2,288(r2)
  808598:	10c03fcc 	andi	r3,r2,255
  80859c:	e0bffb17 	ldw	r2,-20(fp)
  8085a0:	10c00015 	stw	r3,0(r2)
  8085a4:	e0bffb17 	ldw	r2,-20(fp)
  8085a8:	10800104 	addi	r2,r2,4
  8085ac:	e0fffc17 	ldw	r3,-16(fp)
  8085b0:	18c04843 	ldbu	r3,289(r3)
  8085b4:	18c03fcc 	andi	r3,r3,255
  8085b8:	10c00015 	stw	r3,0(r2)
  8085bc:	e0bffb17 	ldw	r2,-20(fp)
  8085c0:	10800204 	addi	r2,r2,8
  8085c4:	e0fffc17 	ldw	r3,-16(fp)
  8085c8:	18c0490b 	ldhu	r3,292(r3)
  8085cc:	18ffffcc 	andi	r3,r3,65535
  8085d0:	10c00015 	stw	r3,0(r2)
  8085d4:	e0bffb17 	ldw	r2,-20(fp)
  8085d8:	10800304 	addi	r2,r2,12
  8085dc:	e0fffc17 	ldw	r3,-16(fp)
  8085e0:	18c0498b 	ldhu	r3,294(r3)
  8085e4:	18ffffcc 	andi	r3,r3,65535
  8085e8:	10c00015 	stw	r3,0(r2)
  8085ec:	e0bffb17 	ldw	r2,-20(fp)
  8085f0:	10800404 	addi	r2,r2,16
  8085f4:	e0fffc17 	ldw	r3,-16(fp)
  8085f8:	18c04883 	ldbu	r3,290(r3)
  8085fc:	18c03fcc 	andi	r3,r3,255
  808600:	10c00015 	stw	r3,0(r2)
  808604:	e0bffc17 	ldw	r2,-16(fp)
  808608:	10800017 	ldw	r2,0(r2)
  80860c:	00c01644 	movi	r3,89
  808610:	10c00515 	stw	r3,20(r2)
  808614:	e0bffc17 	ldw	r2,-16(fp)
  808618:	10800017 	ldw	r2,0(r2)
  80861c:	10800117 	ldw	r2,4(r2)
  808620:	01400044 	movi	r5,1
  808624:	e13ffc17 	ldw	r4,-16(fp)
  808628:	103ee83a 	callr	r2
  80862c:	e0bffd17 	ldw	r2,-12(fp)
  808630:	10800304 	addi	r2,r2,12
  808634:	10c00003 	ldbu	r3,0(r2)
  808638:	e0bffd17 	ldw	r2,-12(fp)
  80863c:	10800344 	addi	r2,r2,13
  808640:	10800003 	ldbu	r2,0(r2)
  808644:	1884b03a 	or	r2,r3,r2
  808648:	10803fcc 	andi	r2,r2,255
  80864c:	10001826 	beq	r2,zero,8086b0 <examine_app0+0x308>
  808650:	e0bffc17 	ldw	r2,-16(fp)
  808654:	10800017 	ldw	r2,0(r2)
  808658:	00c01704 	movi	r3,92
  80865c:	10c00515 	stw	r3,20(r2)
  808660:	e0bffc17 	ldw	r2,-16(fp)
  808664:	10800017 	ldw	r2,0(r2)
  808668:	e0fffd17 	ldw	r3,-12(fp)
  80866c:	18c00304 	addi	r3,r3,12
  808670:	18c00003 	ldbu	r3,0(r3)
  808674:	18c03fcc 	andi	r3,r3,255
  808678:	10c00615 	stw	r3,24(r2)
  80867c:	e0bffc17 	ldw	r2,-16(fp)
  808680:	10800017 	ldw	r2,0(r2)
  808684:	e0fffd17 	ldw	r3,-12(fp)
  808688:	18c00344 	addi	r3,r3,13
  80868c:	18c00003 	ldbu	r3,0(r3)
  808690:	18c03fcc 	andi	r3,r3,255
  808694:	10c00715 	stw	r3,28(r2)
  808698:	e0bffc17 	ldw	r2,-16(fp)
  80869c:	10800017 	ldw	r2,0(r2)
  8086a0:	10800117 	ldw	r2,4(r2)
  8086a4:	01400044 	movi	r5,1
  8086a8:	e13ffc17 	ldw	r4,-16(fp)
  8086ac:	103ee83a 	callr	r2
  8086b0:	e0bffa17 	ldw	r2,-24(fp)
  8086b4:	10bffc84 	addi	r2,r2,-14
  8086b8:	e0bffa15 	stw	r2,-24(fp)
  8086bc:	e0bffd17 	ldw	r2,-12(fp)
  8086c0:	10800304 	addi	r2,r2,12
  8086c4:	10800003 	ldbu	r2,0(r2)
  8086c8:	10c03fcc 	andi	r3,r2,255
  8086cc:	e0bffd17 	ldw	r2,-12(fp)
  8086d0:	10800344 	addi	r2,r2,13
  8086d4:	10800003 	ldbu	r2,0(r2)
  8086d8:	10803fcc 	andi	r2,r2,255
  8086dc:	100b883a 	mov	r5,r2
  8086e0:	1809883a 	mov	r4,r3
  8086e4:	08305040 	call	830504 <__mulsi3>
  8086e8:	1007883a 	mov	r3,r2
  8086ec:	1805883a 	mov	r2,r3
  8086f0:	1085883a 	add	r2,r2,r2
  8086f4:	10c7883a 	add	r3,r2,r3
  8086f8:	e0bffa17 	ldw	r2,-24(fp)
  8086fc:	18808a26 	beq	r3,r2,808928 <examine_app0+0x580>
  808700:	e0bffc17 	ldw	r2,-16(fp)
  808704:	10800017 	ldw	r2,0(r2)
  808708:	00c01684 	movi	r3,90
  80870c:	10c00515 	stw	r3,20(r2)
  808710:	e0bffc17 	ldw	r2,-16(fp)
  808714:	10800017 	ldw	r2,0(r2)
  808718:	e0fffa17 	ldw	r3,-24(fp)
  80871c:	10c00615 	stw	r3,24(r2)
  808720:	e0bffc17 	ldw	r2,-16(fp)
  808724:	10800017 	ldw	r2,0(r2)
  808728:	10800117 	ldw	r2,4(r2)
  80872c:	01400044 	movi	r5,1
  808730:	e13ffc17 	ldw	r4,-16(fp)
  808734:	103ee83a 	callr	r2
  808738:	00007b06 	br	808928 <examine_app0+0x580>
  80873c:	e0bffe17 	ldw	r2,-8(fp)
  808740:	108001b0 	cmpltui	r2,r2,6
  808744:	10006a1e 	bne	r2,zero,8088f0 <examine_app0+0x548>
  808748:	e0bffd17 	ldw	r2,-12(fp)
  80874c:	10800003 	ldbu	r2,0(r2)
  808750:	10803fcc 	andi	r2,r2,255
  808754:	10801298 	cmpnei	r2,r2,74
  808758:	1000651e 	bne	r2,zero,8088f0 <examine_app0+0x548>
  80875c:	e0bffd17 	ldw	r2,-12(fp)
  808760:	10800044 	addi	r2,r2,1
  808764:	10800003 	ldbu	r2,0(r2)
  808768:	10803fcc 	andi	r2,r2,255
  80876c:	10801198 	cmpnei	r2,r2,70
  808770:	10005f1e 	bne	r2,zero,8088f0 <examine_app0+0x548>
  808774:	e0bffd17 	ldw	r2,-12(fp)
  808778:	10800084 	addi	r2,r2,2
  80877c:	10800003 	ldbu	r2,0(r2)
  808780:	10803fcc 	andi	r2,r2,255
  808784:	10801618 	cmpnei	r2,r2,88
  808788:	1000591e 	bne	r2,zero,8088f0 <examine_app0+0x548>
  80878c:	e0bffd17 	ldw	r2,-12(fp)
  808790:	108000c4 	addi	r2,r2,3
  808794:	10800003 	ldbu	r2,0(r2)
  808798:	10803fcc 	andi	r2,r2,255
  80879c:	10801618 	cmpnei	r2,r2,88
  8087a0:	1000531e 	bne	r2,zero,8088f0 <examine_app0+0x548>
  8087a4:	e0bffd17 	ldw	r2,-12(fp)
  8087a8:	10800104 	addi	r2,r2,4
  8087ac:	10800003 	ldbu	r2,0(r2)
  8087b0:	10803fcc 	andi	r2,r2,255
  8087b4:	10004e1e 	bne	r2,zero,8088f0 <examine_app0+0x548>
  8087b8:	e0bffd17 	ldw	r2,-12(fp)
  8087bc:	10800144 	addi	r2,r2,5
  8087c0:	10800003 	ldbu	r2,0(r2)
  8087c4:	10803fcc 	andi	r2,r2,255
  8087c8:	10c00460 	cmpeqi	r3,r2,17
  8087cc:	1800131e 	bne	r3,zero,80881c <examine_app0+0x474>
  8087d0:	10c004e0 	cmpeqi	r3,r2,19
  8087d4:	1800201e 	bne	r3,zero,808858 <examine_app0+0x4b0>
  8087d8:	10800420 	cmpeqi	r2,r2,16
  8087dc:	10002d26 	beq	r2,zero,808894 <examine_app0+0x4ec>
  8087e0:	e0bffc17 	ldw	r2,-16(fp)
  8087e4:	10800017 	ldw	r2,0(r2)
  8087e8:	00c01b84 	movi	r3,110
  8087ec:	10c00515 	stw	r3,20(r2)
  8087f0:	e0bffc17 	ldw	r2,-16(fp)
  8087f4:	10800017 	ldw	r2,0(r2)
  8087f8:	e0fffa17 	ldw	r3,-24(fp)
  8087fc:	10c00615 	stw	r3,24(r2)
  808800:	e0bffc17 	ldw	r2,-16(fp)
  808804:	10800017 	ldw	r2,0(r2)
  808808:	10800117 	ldw	r2,4(r2)
  80880c:	01400044 	movi	r5,1
  808810:	e13ffc17 	ldw	r4,-16(fp)
  808814:	103ee83a 	callr	r2
  808818:	00003406 	br	8088ec <examine_app0+0x544>
  80881c:	e0bffc17 	ldw	r2,-16(fp)
  808820:	10800017 	ldw	r2,0(r2)
  808824:	00c01bc4 	movi	r3,111
  808828:	10c00515 	stw	r3,20(r2)
  80882c:	e0bffc17 	ldw	r2,-16(fp)
  808830:	10800017 	ldw	r2,0(r2)
  808834:	e0fffa17 	ldw	r3,-24(fp)
  808838:	10c00615 	stw	r3,24(r2)
  80883c:	e0bffc17 	ldw	r2,-16(fp)
  808840:	10800017 	ldw	r2,0(r2)
  808844:	10800117 	ldw	r2,4(r2)
  808848:	01400044 	movi	r5,1
  80884c:	e13ffc17 	ldw	r4,-16(fp)
  808850:	103ee83a 	callr	r2
  808854:	00002506 	br	8088ec <examine_app0+0x544>
  808858:	e0bffc17 	ldw	r2,-16(fp)
  80885c:	10800017 	ldw	r2,0(r2)
  808860:	00c01c04 	movi	r3,112
  808864:	10c00515 	stw	r3,20(r2)
  808868:	e0bffc17 	ldw	r2,-16(fp)
  80886c:	10800017 	ldw	r2,0(r2)
  808870:	e0fffa17 	ldw	r3,-24(fp)
  808874:	10c00615 	stw	r3,24(r2)
  808878:	e0bffc17 	ldw	r2,-16(fp)
  80887c:	10800017 	ldw	r2,0(r2)
  808880:	10800117 	ldw	r2,4(r2)
  808884:	01400044 	movi	r5,1
  808888:	e13ffc17 	ldw	r4,-16(fp)
  80888c:	103ee83a 	callr	r2
  808890:	00001606 	br	8088ec <examine_app0+0x544>
  808894:	e0bffc17 	ldw	r2,-16(fp)
  808898:	10800017 	ldw	r2,0(r2)
  80889c:	00c016c4 	movi	r3,91
  8088a0:	10c00515 	stw	r3,20(r2)
  8088a4:	e0bffc17 	ldw	r2,-16(fp)
  8088a8:	10800017 	ldw	r2,0(r2)
  8088ac:	e0fffd17 	ldw	r3,-12(fp)
  8088b0:	18c00144 	addi	r3,r3,5
  8088b4:	18c00003 	ldbu	r3,0(r3)
  8088b8:	18c03fcc 	andi	r3,r3,255
  8088bc:	10c00615 	stw	r3,24(r2)
  8088c0:	e0bffc17 	ldw	r2,-16(fp)
  8088c4:	10800017 	ldw	r2,0(r2)
  8088c8:	e0fffa17 	ldw	r3,-24(fp)
  8088cc:	10c00715 	stw	r3,28(r2)
  8088d0:	e0bffc17 	ldw	r2,-16(fp)
  8088d4:	10800017 	ldw	r2,0(r2)
  8088d8:	10800117 	ldw	r2,4(r2)
  8088dc:	01400044 	movi	r5,1
  8088e0:	e13ffc17 	ldw	r4,-16(fp)
  8088e4:	103ee83a 	callr	r2
  8088e8:	0001883a 	nop
  8088ec:	00000e06 	br	808928 <examine_app0+0x580>
  8088f0:	e0bffc17 	ldw	r2,-16(fp)
  8088f4:	10800017 	ldw	r2,0(r2)
  8088f8:	00c013c4 	movi	r3,79
  8088fc:	10c00515 	stw	r3,20(r2)
  808900:	e0bffc17 	ldw	r2,-16(fp)
  808904:	10800017 	ldw	r2,0(r2)
  808908:	e0fffa17 	ldw	r3,-24(fp)
  80890c:	10c00615 	stw	r3,24(r2)
  808910:	e0bffc17 	ldw	r2,-16(fp)
  808914:	10800017 	ldw	r2,0(r2)
  808918:	10800117 	ldw	r2,4(r2)
  80891c:	01400044 	movi	r5,1
  808920:	e13ffc17 	ldw	r4,-16(fp)
  808924:	103ee83a 	callr	r2
  808928:	0001883a 	nop
  80892c:	e037883a 	mov	sp,fp
  808930:	dfc00117 	ldw	ra,4(sp)
  808934:	df000017 	ldw	fp,0(sp)
  808938:	dec00204 	addi	sp,sp,8
  80893c:	f800283a 	ret

00808940 <examine_app14>:
  808940:	defff504 	addi	sp,sp,-44
  808944:	dfc00a15 	stw	ra,40(sp)
  808948:	df000915 	stw	fp,36(sp)
  80894c:	df000904 	addi	fp,sp,36
  808950:	e13ffc15 	stw	r4,-16(fp)
  808954:	e17ffd15 	stw	r5,-12(fp)
  808958:	e1bffe15 	stw	r6,-8(fp)
  80895c:	e1ffff15 	stw	r7,-4(fp)
  808960:	e0bffe17 	ldw	r2,-8(fp)
  808964:	10800330 	cmpltui	r2,r2,12
  808968:	1000681e 	bne	r2,zero,808b0c <examine_app14+0x1cc>
  80896c:	e0bffd17 	ldw	r2,-12(fp)
  808970:	10800003 	ldbu	r2,0(r2)
  808974:	10803fcc 	andi	r2,r2,255
  808978:	10801058 	cmpnei	r2,r2,65
  80897c:	1000631e 	bne	r2,zero,808b0c <examine_app14+0x1cc>
  808980:	e0bffd17 	ldw	r2,-12(fp)
  808984:	10800044 	addi	r2,r2,1
  808988:	10800003 	ldbu	r2,0(r2)
  80898c:	10803fcc 	andi	r2,r2,255
  808990:	10801918 	cmpnei	r2,r2,100
  808994:	10005d1e 	bne	r2,zero,808b0c <examine_app14+0x1cc>
  808998:	e0bffd17 	ldw	r2,-12(fp)
  80899c:	10800084 	addi	r2,r2,2
  8089a0:	10800003 	ldbu	r2,0(r2)
  8089a4:	10803fcc 	andi	r2,r2,255
  8089a8:	10801bd8 	cmpnei	r2,r2,111
  8089ac:	1000571e 	bne	r2,zero,808b0c <examine_app14+0x1cc>
  8089b0:	e0bffd17 	ldw	r2,-12(fp)
  8089b4:	108000c4 	addi	r2,r2,3
  8089b8:	10800003 	ldbu	r2,0(r2)
  8089bc:	10803fcc 	andi	r2,r2,255
  8089c0:	10801898 	cmpnei	r2,r2,98
  8089c4:	1000511e 	bne	r2,zero,808b0c <examine_app14+0x1cc>
  8089c8:	e0bffd17 	ldw	r2,-12(fp)
  8089cc:	10800104 	addi	r2,r2,4
  8089d0:	10800003 	ldbu	r2,0(r2)
  8089d4:	10803fcc 	andi	r2,r2,255
  8089d8:	10801958 	cmpnei	r2,r2,101
  8089dc:	10004b1e 	bne	r2,zero,808b0c <examine_app14+0x1cc>
  8089e0:	e0bffd17 	ldw	r2,-12(fp)
  8089e4:	10800144 	addi	r2,r2,5
  8089e8:	10800003 	ldbu	r2,0(r2)
  8089ec:	10803fcc 	andi	r2,r2,255
  8089f0:	1006923a 	slli	r3,r2,8
  8089f4:	e0bffd17 	ldw	r2,-12(fp)
  8089f8:	10800184 	addi	r2,r2,6
  8089fc:	10800003 	ldbu	r2,0(r2)
  808a00:	10803fcc 	andi	r2,r2,255
  808a04:	1885883a 	add	r2,r3,r2
  808a08:	e0bff715 	stw	r2,-36(fp)
  808a0c:	e0bffd17 	ldw	r2,-12(fp)
  808a10:	108001c4 	addi	r2,r2,7
  808a14:	10800003 	ldbu	r2,0(r2)
  808a18:	10803fcc 	andi	r2,r2,255
  808a1c:	1006923a 	slli	r3,r2,8
  808a20:	e0bffd17 	ldw	r2,-12(fp)
  808a24:	10800204 	addi	r2,r2,8
  808a28:	10800003 	ldbu	r2,0(r2)
  808a2c:	10803fcc 	andi	r2,r2,255
  808a30:	1885883a 	add	r2,r3,r2
  808a34:	e0bff815 	stw	r2,-32(fp)
  808a38:	e0bffd17 	ldw	r2,-12(fp)
  808a3c:	10800244 	addi	r2,r2,9
  808a40:	10800003 	ldbu	r2,0(r2)
  808a44:	10803fcc 	andi	r2,r2,255
  808a48:	1006923a 	slli	r3,r2,8
  808a4c:	e0bffd17 	ldw	r2,-12(fp)
  808a50:	10800284 	addi	r2,r2,10
  808a54:	10800003 	ldbu	r2,0(r2)
  808a58:	10803fcc 	andi	r2,r2,255
  808a5c:	1885883a 	add	r2,r3,r2
  808a60:	e0bff915 	stw	r2,-28(fp)
  808a64:	e0bffd17 	ldw	r2,-12(fp)
  808a68:	108002c4 	addi	r2,r2,11
  808a6c:	10800003 	ldbu	r2,0(r2)
  808a70:	10803fcc 	andi	r2,r2,255
  808a74:	e0bffa15 	stw	r2,-24(fp)
  808a78:	e0bffc17 	ldw	r2,-16(fp)
  808a7c:	10800017 	ldw	r2,0(r2)
  808a80:	10800604 	addi	r2,r2,24
  808a84:	e0bffb15 	stw	r2,-20(fp)
  808a88:	e0fff717 	ldw	r3,-36(fp)
  808a8c:	e0bffb17 	ldw	r2,-20(fp)
  808a90:	10c00015 	stw	r3,0(r2)
  808a94:	e0bffb17 	ldw	r2,-20(fp)
  808a98:	10800104 	addi	r2,r2,4
  808a9c:	e0fff817 	ldw	r3,-32(fp)
  808aa0:	10c00015 	stw	r3,0(r2)
  808aa4:	e0bffb17 	ldw	r2,-20(fp)
  808aa8:	10800204 	addi	r2,r2,8
  808aac:	e0fff917 	ldw	r3,-28(fp)
  808ab0:	10c00015 	stw	r3,0(r2)
  808ab4:	e0bffb17 	ldw	r2,-20(fp)
  808ab8:	10800304 	addi	r2,r2,12
  808abc:	e0fffa17 	ldw	r3,-24(fp)
  808ac0:	10c00015 	stw	r3,0(r2)
  808ac4:	e0bffc17 	ldw	r2,-16(fp)
  808ac8:	10800017 	ldw	r2,0(r2)
  808acc:	00c01384 	movi	r3,78
  808ad0:	10c00515 	stw	r3,20(r2)
  808ad4:	e0bffc17 	ldw	r2,-16(fp)
  808ad8:	10800017 	ldw	r2,0(r2)
  808adc:	10800117 	ldw	r2,4(r2)
  808ae0:	01400044 	movi	r5,1
  808ae4:	e13ffc17 	ldw	r4,-16(fp)
  808ae8:	103ee83a 	callr	r2
  808aec:	e0bffc17 	ldw	r2,-16(fp)
  808af0:	00c00044 	movi	r3,1
  808af4:	10c04a15 	stw	r3,296(r2)
  808af8:	e0bffa17 	ldw	r2,-24(fp)
  808afc:	1007883a 	mov	r3,r2
  808b00:	e0bffc17 	ldw	r2,-16(fp)
  808b04:	10c04b05 	stb	r3,300(r2)
  808b08:	00001006 	br	808b4c <examine_app14+0x20c>
  808b0c:	e0bffc17 	ldw	r2,-16(fp)
  808b10:	10800017 	ldw	r2,0(r2)
  808b14:	00c01404 	movi	r3,80
  808b18:	10c00515 	stw	r3,20(r2)
  808b1c:	e0bffc17 	ldw	r2,-16(fp)
  808b20:	10800017 	ldw	r2,0(r2)
  808b24:	e13fff17 	ldw	r4,-4(fp)
  808b28:	e0fffe17 	ldw	r3,-8(fp)
  808b2c:	20c7883a 	add	r3,r4,r3
  808b30:	10c00615 	stw	r3,24(r2)
  808b34:	e0bffc17 	ldw	r2,-16(fp)
  808b38:	10800017 	ldw	r2,0(r2)
  808b3c:	10800117 	ldw	r2,4(r2)
  808b40:	01400044 	movi	r5,1
  808b44:	e13ffc17 	ldw	r4,-16(fp)
  808b48:	103ee83a 	callr	r2
  808b4c:	0001883a 	nop
  808b50:	e037883a 	mov	sp,fp
  808b54:	dfc00117 	ldw	ra,4(sp)
  808b58:	df000017 	ldw	fp,0(sp)
  808b5c:	dec00204 	addi	sp,sp,8
  808b60:	f800283a 	ret

00808b64 <get_interesting_appn>:
  808b64:	defff304 	addi	sp,sp,-52
  808b68:	dfc00c15 	stw	ra,48(sp)
  808b6c:	df000b15 	stw	fp,44(sp)
  808b70:	df000b04 	addi	fp,sp,44
  808b74:	e13fff15 	stw	r4,-4(fp)
  808b78:	e0bfff17 	ldw	r2,-4(fp)
  808b7c:	10800617 	ldw	r2,24(r2)
  808b80:	e0bff915 	stw	r2,-28(fp)
  808b84:	e0bff917 	ldw	r2,-28(fp)
  808b88:	10800017 	ldw	r2,0(r2)
  808b8c:	e0bff715 	stw	r2,-36(fp)
  808b90:	e0bff917 	ldw	r2,-28(fp)
  808b94:	10800117 	ldw	r2,4(r2)
  808b98:	e0bff815 	stw	r2,-32(fp)
  808b9c:	e0bff817 	ldw	r2,-32(fp)
  808ba0:	10000d1e 	bne	r2,zero,808bd8 <get_interesting_appn+0x74>
  808ba4:	e0bff917 	ldw	r2,-28(fp)
  808ba8:	10800317 	ldw	r2,12(r2)
  808bac:	e13fff17 	ldw	r4,-4(fp)
  808bb0:	103ee83a 	callr	r2
  808bb4:	1000021e 	bne	r2,zero,808bc0 <get_interesting_appn+0x5c>
  808bb8:	0005883a 	mov	r2,zero
  808bbc:	00009206 	br	808e08 <get_interesting_appn+0x2a4>
  808bc0:	e0bff917 	ldw	r2,-28(fp)
  808bc4:	10800017 	ldw	r2,0(r2)
  808bc8:	e0bff715 	stw	r2,-36(fp)
  808bcc:	e0bff917 	ldw	r2,-28(fp)
  808bd0:	10800117 	ldw	r2,4(r2)
  808bd4:	e0bff815 	stw	r2,-32(fp)
  808bd8:	e0bff817 	ldw	r2,-32(fp)
  808bdc:	10bfffc4 	addi	r2,r2,-1
  808be0:	e0bff815 	stw	r2,-32(fp)
  808be4:	e0bff717 	ldw	r2,-36(fp)
  808be8:	10c00044 	addi	r3,r2,1
  808bec:	e0fff715 	stw	r3,-36(fp)
  808bf0:	10800003 	ldbu	r2,0(r2)
  808bf4:	10803fcc 	andi	r2,r2,255
  808bf8:	1004923a 	slli	r2,r2,8
  808bfc:	e0bffa15 	stw	r2,-24(fp)
  808c00:	e0bff817 	ldw	r2,-32(fp)
  808c04:	10000d1e 	bne	r2,zero,808c3c <get_interesting_appn+0xd8>
  808c08:	e0bff917 	ldw	r2,-28(fp)
  808c0c:	10800317 	ldw	r2,12(r2)
  808c10:	e13fff17 	ldw	r4,-4(fp)
  808c14:	103ee83a 	callr	r2
  808c18:	1000021e 	bne	r2,zero,808c24 <get_interesting_appn+0xc0>
  808c1c:	0005883a 	mov	r2,zero
  808c20:	00007906 	br	808e08 <get_interesting_appn+0x2a4>
  808c24:	e0bff917 	ldw	r2,-28(fp)
  808c28:	10800017 	ldw	r2,0(r2)
  808c2c:	e0bff715 	stw	r2,-36(fp)
  808c30:	e0bff917 	ldw	r2,-28(fp)
  808c34:	10800117 	ldw	r2,4(r2)
  808c38:	e0bff815 	stw	r2,-32(fp)
  808c3c:	e0bff817 	ldw	r2,-32(fp)
  808c40:	10bfffc4 	addi	r2,r2,-1
  808c44:	e0bff815 	stw	r2,-32(fp)
  808c48:	e0bff717 	ldw	r2,-36(fp)
  808c4c:	10c00044 	addi	r3,r2,1
  808c50:	e0fff715 	stw	r3,-36(fp)
  808c54:	10800003 	ldbu	r2,0(r2)
  808c58:	10803fcc 	andi	r2,r2,255
  808c5c:	e0fffa17 	ldw	r3,-24(fp)
  808c60:	1885883a 	add	r2,r3,r2
  808c64:	e0bffa15 	stw	r2,-24(fp)
  808c68:	e0bffa17 	ldw	r2,-24(fp)
  808c6c:	10bfff84 	addi	r2,r2,-2
  808c70:	e0bffa15 	stw	r2,-24(fp)
  808c74:	e0bffa17 	ldw	r2,-24(fp)
  808c78:	10800390 	cmplti	r2,r2,14
  808c7c:	1000031e 	bne	r2,zero,808c8c <get_interesting_appn+0x128>
  808c80:	00800384 	movi	r2,14
  808c84:	e0bff615 	stw	r2,-40(fp)
  808c88:	00000606 	br	808ca4 <get_interesting_appn+0x140>
  808c8c:	e0bffa17 	ldw	r2,-24(fp)
  808c90:	0080030e 	bge	zero,r2,808ca0 <get_interesting_appn+0x13c>
  808c94:	e0bffa17 	ldw	r2,-24(fp)
  808c98:	e0bff615 	stw	r2,-40(fp)
  808c9c:	00000106 	br	808ca4 <get_interesting_appn+0x140>
  808ca0:	e03ff615 	stw	zero,-40(fp)
  808ca4:	e03ff515 	stw	zero,-44(fp)
  808ca8:	00001d06 	br	808d20 <get_interesting_appn+0x1bc>
  808cac:	e0bff817 	ldw	r2,-32(fp)
  808cb0:	10000d1e 	bne	r2,zero,808ce8 <get_interesting_appn+0x184>
  808cb4:	e0bff917 	ldw	r2,-28(fp)
  808cb8:	10800317 	ldw	r2,12(r2)
  808cbc:	e13fff17 	ldw	r4,-4(fp)
  808cc0:	103ee83a 	callr	r2
  808cc4:	1000021e 	bne	r2,zero,808cd0 <get_interesting_appn+0x16c>
  808cc8:	0005883a 	mov	r2,zero
  808ccc:	00004e06 	br	808e08 <get_interesting_appn+0x2a4>
  808cd0:	e0bff917 	ldw	r2,-28(fp)
  808cd4:	10800017 	ldw	r2,0(r2)
  808cd8:	e0bff715 	stw	r2,-36(fp)
  808cdc:	e0bff917 	ldw	r2,-28(fp)
  808ce0:	10800117 	ldw	r2,4(r2)
  808ce4:	e0bff815 	stw	r2,-32(fp)
  808ce8:	e0bff817 	ldw	r2,-32(fp)
  808cec:	10bfffc4 	addi	r2,r2,-1
  808cf0:	e0bff815 	stw	r2,-32(fp)
  808cf4:	e0bff717 	ldw	r2,-36(fp)
  808cf8:	10c00044 	addi	r3,r2,1
  808cfc:	e0fff715 	stw	r3,-36(fp)
  808d00:	10c00003 	ldbu	r3,0(r2)
  808d04:	e13ffb04 	addi	r4,fp,-20
  808d08:	e0bff517 	ldw	r2,-44(fp)
  808d0c:	2085883a 	add	r2,r4,r2
  808d10:	10c00005 	stb	r3,0(r2)
  808d14:	e0bff517 	ldw	r2,-44(fp)
  808d18:	10800044 	addi	r2,r2,1
  808d1c:	e0bff515 	stw	r2,-44(fp)
  808d20:	e0fff517 	ldw	r3,-44(fp)
  808d24:	e0bff617 	ldw	r2,-40(fp)
  808d28:	18bfe036 	bltu	r3,r2,808cac <__alt_mem_epcs_flash_controller_0+0xff7ffcac>
  808d2c:	e0fffa17 	ldw	r3,-24(fp)
  808d30:	e0bff617 	ldw	r2,-40(fp)
  808d34:	1885c83a 	sub	r2,r3,r2
  808d38:	e0bffa15 	stw	r2,-24(fp)
  808d3c:	e0bfff17 	ldw	r2,-4(fp)
  808d40:	10806e17 	ldw	r2,440(r2)
  808d44:	10c03820 	cmpeqi	r3,r2,224
  808d48:	1800031e 	bne	r3,zero,808d58 <get_interesting_appn+0x1f4>
  808d4c:	10803ba0 	cmpeqi	r2,r2,238
  808d50:	1000081e 	bne	r2,zero,808d74 <get_interesting_appn+0x210>
  808d54:	00000e06 	br	808d90 <get_interesting_appn+0x22c>
  808d58:	e0bffb04 	addi	r2,fp,-20
  808d5c:	e1fffa17 	ldw	r7,-24(fp)
  808d60:	e1bff617 	ldw	r6,-40(fp)
  808d64:	100b883a 	mov	r5,r2
  808d68:	e13fff17 	ldw	r4,-4(fp)
  808d6c:	08083a80 	call	8083a8 <examine_app0>
  808d70:	00001606 	br	808dcc <get_interesting_appn+0x268>
  808d74:	e0bffb04 	addi	r2,fp,-20
  808d78:	e1fffa17 	ldw	r7,-24(fp)
  808d7c:	e1bff617 	ldw	r6,-40(fp)
  808d80:	100b883a 	mov	r5,r2
  808d84:	e13fff17 	ldw	r4,-4(fp)
  808d88:	08089400 	call	808940 <examine_app14>
  808d8c:	00000f06 	br	808dcc <get_interesting_appn+0x268>
  808d90:	e0bfff17 	ldw	r2,-4(fp)
  808d94:	10800017 	ldw	r2,0(r2)
  808d98:	00c01184 	movi	r3,70
  808d9c:	10c00515 	stw	r3,20(r2)
  808da0:	e0bfff17 	ldw	r2,-4(fp)
  808da4:	10800017 	ldw	r2,0(r2)
  808da8:	e0ffff17 	ldw	r3,-4(fp)
  808dac:	18c06e17 	ldw	r3,440(r3)
  808db0:	10c00615 	stw	r3,24(r2)
  808db4:	e0bfff17 	ldw	r2,-4(fp)
  808db8:	10800017 	ldw	r2,0(r2)
  808dbc:	10800017 	ldw	r2,0(r2)
  808dc0:	e13fff17 	ldw	r4,-4(fp)
  808dc4:	103ee83a 	callr	r2
  808dc8:	0001883a 	nop
  808dcc:	e0bff917 	ldw	r2,-28(fp)
  808dd0:	e0fff717 	ldw	r3,-36(fp)
  808dd4:	10c00015 	stw	r3,0(r2)
  808dd8:	e0bff917 	ldw	r2,-28(fp)
  808ddc:	e0fff817 	ldw	r3,-32(fp)
  808de0:	10c00115 	stw	r3,4(r2)
  808de4:	e0bffa17 	ldw	r2,-24(fp)
  808de8:	0080060e 	bge	zero,r2,808e04 <get_interesting_appn+0x2a0>
  808dec:	e0bfff17 	ldw	r2,-4(fp)
  808df0:	10800617 	ldw	r2,24(r2)
  808df4:	10800417 	ldw	r2,16(r2)
  808df8:	e17ffa17 	ldw	r5,-24(fp)
  808dfc:	e13fff17 	ldw	r4,-4(fp)
  808e00:	103ee83a 	callr	r2
  808e04:	00800044 	movi	r2,1
  808e08:	e037883a 	mov	sp,fp
  808e0c:	dfc00117 	ldw	ra,4(sp)
  808e10:	df000017 	ldw	fp,0(sp)
  808e14:	dec00204 	addi	sp,sp,8
  808e18:	f800283a 	ret

00808e1c <save_marker>:
  808e1c:	defff204 	addi	sp,sp,-56
  808e20:	dfc00d15 	stw	ra,52(sp)
  808e24:	df000c15 	stw	fp,48(sp)
  808e28:	df000c04 	addi	fp,sp,48
  808e2c:	e13fff15 	stw	r4,-4(fp)
  808e30:	e0bfff17 	ldw	r2,-4(fp)
  808e34:	10807417 	ldw	r2,464(r2)
  808e38:	e0bffd15 	stw	r2,-12(fp)
  808e3c:	e0bffd17 	ldw	r2,-12(fp)
  808e40:	10802917 	ldw	r2,164(r2)
  808e44:	e0bff415 	stw	r2,-48(fp)
  808e48:	e03ff815 	stw	zero,-32(fp)
  808e4c:	e0bfff17 	ldw	r2,-4(fp)
  808e50:	10800617 	ldw	r2,24(r2)
  808e54:	e0bffe15 	stw	r2,-8(fp)
  808e58:	e0bffe17 	ldw	r2,-8(fp)
  808e5c:	10800017 	ldw	r2,0(r2)
  808e60:	e0bff915 	stw	r2,-28(fp)
  808e64:	e0bffe17 	ldw	r2,-8(fp)
  808e68:	10800117 	ldw	r2,4(r2)
  808e6c:	e0bffa15 	stw	r2,-24(fp)
  808e70:	e0bff417 	ldw	r2,-48(fp)
  808e74:	10007b1e 	bne	r2,zero,809064 <save_marker+0x248>
  808e78:	e0bffa17 	ldw	r2,-24(fp)
  808e7c:	10000d1e 	bne	r2,zero,808eb4 <save_marker+0x98>
  808e80:	e0bffe17 	ldw	r2,-8(fp)
  808e84:	10800317 	ldw	r2,12(r2)
  808e88:	e13fff17 	ldw	r4,-4(fp)
  808e8c:	103ee83a 	callr	r2
  808e90:	1000021e 	bne	r2,zero,808e9c <save_marker+0x80>
  808e94:	0005883a 	mov	r2,zero
  808e98:	00010506 	br	8092b0 <save_marker+0x494>
  808e9c:	e0bffe17 	ldw	r2,-8(fp)
  808ea0:	10800017 	ldw	r2,0(r2)
  808ea4:	e0bff915 	stw	r2,-28(fp)
  808ea8:	e0bffe17 	ldw	r2,-8(fp)
  808eac:	10800117 	ldw	r2,4(r2)
  808eb0:	e0bffa15 	stw	r2,-24(fp)
  808eb4:	e0bffa17 	ldw	r2,-24(fp)
  808eb8:	10bfffc4 	addi	r2,r2,-1
  808ebc:	e0bffa15 	stw	r2,-24(fp)
  808ec0:	e0bff917 	ldw	r2,-28(fp)
  808ec4:	10c00044 	addi	r3,r2,1
  808ec8:	e0fff915 	stw	r3,-28(fp)
  808ecc:	10800003 	ldbu	r2,0(r2)
  808ed0:	10803fcc 	andi	r2,r2,255
  808ed4:	1004923a 	slli	r2,r2,8
  808ed8:	e0bff815 	stw	r2,-32(fp)
  808edc:	e0bffa17 	ldw	r2,-24(fp)
  808ee0:	10000d1e 	bne	r2,zero,808f18 <save_marker+0xfc>
  808ee4:	e0bffe17 	ldw	r2,-8(fp)
  808ee8:	10800317 	ldw	r2,12(r2)
  808eec:	e13fff17 	ldw	r4,-4(fp)
  808ef0:	103ee83a 	callr	r2
  808ef4:	1000021e 	bne	r2,zero,808f00 <save_marker+0xe4>
  808ef8:	0005883a 	mov	r2,zero
  808efc:	0000ec06 	br	8092b0 <save_marker+0x494>
  808f00:	e0bffe17 	ldw	r2,-8(fp)
  808f04:	10800017 	ldw	r2,0(r2)
  808f08:	e0bff915 	stw	r2,-28(fp)
  808f0c:	e0bffe17 	ldw	r2,-8(fp)
  808f10:	10800117 	ldw	r2,4(r2)
  808f14:	e0bffa15 	stw	r2,-24(fp)
  808f18:	e0bffa17 	ldw	r2,-24(fp)
  808f1c:	10bfffc4 	addi	r2,r2,-1
  808f20:	e0bffa15 	stw	r2,-24(fp)
  808f24:	e0bff917 	ldw	r2,-28(fp)
  808f28:	10c00044 	addi	r3,r2,1
  808f2c:	e0fff915 	stw	r3,-28(fp)
  808f30:	10800003 	ldbu	r2,0(r2)
  808f34:	10803fcc 	andi	r2,r2,255
  808f38:	e0fff817 	ldw	r3,-32(fp)
  808f3c:	1885883a 	add	r2,r3,r2
  808f40:	e0bff815 	stw	r2,-32(fp)
  808f44:	e0bff817 	ldw	r2,-32(fp)
  808f48:	10bfff84 	addi	r2,r2,-2
  808f4c:	e0bff815 	stw	r2,-32(fp)
  808f50:	e0bff817 	ldw	r2,-32(fp)
  808f54:	10003e16 	blt	r2,zero,809050 <save_marker+0x234>
  808f58:	e0bfff17 	ldw	r2,-4(fp)
  808f5c:	10806e17 	ldw	r2,440(r2)
  808f60:	10803f98 	cmpnei	r2,r2,254
  808f64:	1000041e 	bne	r2,zero,808f78 <save_marker+0x15c>
  808f68:	e0bffd17 	ldw	r2,-12(fp)
  808f6c:	10801817 	ldw	r2,96(r2)
  808f70:	e0bffb15 	stw	r2,-20(fp)
  808f74:	00000a06 	br	808fa0 <save_marker+0x184>
  808f78:	e0bfff17 	ldw	r2,-4(fp)
  808f7c:	10806e17 	ldw	r2,440(r2)
  808f80:	10bfc804 	addi	r2,r2,-224
  808f84:	e0fffd17 	ldw	r3,-12(fp)
  808f88:	10800644 	addi	r2,r2,25
  808f8c:	1085883a 	add	r2,r2,r2
  808f90:	1085883a 	add	r2,r2,r2
  808f94:	1885883a 	add	r2,r3,r2
  808f98:	10800017 	ldw	r2,0(r2)
  808f9c:	e0bffb15 	stw	r2,-20(fp)
  808fa0:	e0fff817 	ldw	r3,-32(fp)
  808fa4:	e0bffb17 	ldw	r2,-20(fp)
  808fa8:	1880022e 	bgeu	r3,r2,808fb4 <save_marker+0x198>
  808fac:	e0bff817 	ldw	r2,-32(fp)
  808fb0:	e0bffb15 	stw	r2,-20(fp)
  808fb4:	e0bfff17 	ldw	r2,-4(fp)
  808fb8:	10800117 	ldw	r2,4(r2)
  808fbc:	10800117 	ldw	r2,4(r2)
  808fc0:	e0fffb17 	ldw	r3,-20(fp)
  808fc4:	18c00504 	addi	r3,r3,20
  808fc8:	180d883a 	mov	r6,r3
  808fcc:	01400044 	movi	r5,1
  808fd0:	e13fff17 	ldw	r4,-4(fp)
  808fd4:	103ee83a 	callr	r2
  808fd8:	e0bff415 	stw	r2,-48(fp)
  808fdc:	e0bff417 	ldw	r2,-48(fp)
  808fe0:	10000015 	stw	zero,0(r2)
  808fe4:	e0bfff17 	ldw	r2,-4(fp)
  808fe8:	10806e17 	ldw	r2,440(r2)
  808fec:	1007883a 	mov	r3,r2
  808ff0:	e0bff417 	ldw	r2,-48(fp)
  808ff4:	10c00105 	stb	r3,4(r2)
  808ff8:	e0fff817 	ldw	r3,-32(fp)
  808ffc:	e0bff417 	ldw	r2,-48(fp)
  809000:	10c00215 	stw	r3,8(r2)
  809004:	e0bff417 	ldw	r2,-48(fp)
  809008:	e0fffb17 	ldw	r3,-20(fp)
  80900c:	10c00315 	stw	r3,12(r2)
  809010:	e0bff417 	ldw	r2,-48(fp)
  809014:	10c00504 	addi	r3,r2,20
  809018:	e0bff417 	ldw	r2,-48(fp)
  80901c:	10c00415 	stw	r3,16(r2)
  809020:	e0bff417 	ldw	r2,-48(fp)
  809024:	10800417 	ldw	r2,16(r2)
  809028:	e0bff715 	stw	r2,-36(fp)
  80902c:	e0bffd17 	ldw	r2,-12(fp)
  809030:	e0fff417 	ldw	r3,-48(fp)
  809034:	10c02915 	stw	r3,164(r2)
  809038:	e0bffd17 	ldw	r2,-12(fp)
  80903c:	10002a15 	stw	zero,168(r2)
  809040:	e03ff515 	stw	zero,-44(fp)
  809044:	e0bffb17 	ldw	r2,-20(fp)
  809048:	e0bff615 	stw	r2,-40(fp)
  80904c:	00003d06 	br	809144 <save_marker+0x328>
  809050:	e03ff615 	stw	zero,-40(fp)
  809054:	e0bff617 	ldw	r2,-40(fp)
  809058:	e0bff515 	stw	r2,-44(fp)
  80905c:	e03ff715 	stw	zero,-36(fp)
  809060:	00003806 	br	809144 <save_marker+0x328>
  809064:	e0bffd17 	ldw	r2,-12(fp)
  809068:	10802a17 	ldw	r2,168(r2)
  80906c:	e0bff515 	stw	r2,-44(fp)
  809070:	e0bff417 	ldw	r2,-48(fp)
  809074:	10800317 	ldw	r2,12(r2)
  809078:	e0bff615 	stw	r2,-40(fp)
  80907c:	e0bff417 	ldw	r2,-48(fp)
  809080:	10c00417 	ldw	r3,16(r2)
  809084:	e0bff517 	ldw	r2,-44(fp)
  809088:	1885883a 	add	r2,r3,r2
  80908c:	e0bff715 	stw	r2,-36(fp)
  809090:	00002c06 	br	809144 <save_marker+0x328>
  809094:	e0bffe17 	ldw	r2,-8(fp)
  809098:	e0fff917 	ldw	r3,-28(fp)
  80909c:	10c00015 	stw	r3,0(r2)
  8090a0:	e0bffe17 	ldw	r2,-8(fp)
  8090a4:	e0fffa17 	ldw	r3,-24(fp)
  8090a8:	10c00115 	stw	r3,4(r2)
  8090ac:	e0bffd17 	ldw	r2,-12(fp)
  8090b0:	e0fff517 	ldw	r3,-44(fp)
  8090b4:	10c02a15 	stw	r3,168(r2)
  8090b8:	e0bffa17 	ldw	r2,-24(fp)
  8090bc:	10001c1e 	bne	r2,zero,809130 <save_marker+0x314>
  8090c0:	e0bffe17 	ldw	r2,-8(fp)
  8090c4:	10800317 	ldw	r2,12(r2)
  8090c8:	e13fff17 	ldw	r4,-4(fp)
  8090cc:	103ee83a 	callr	r2
  8090d0:	1000021e 	bne	r2,zero,8090dc <save_marker+0x2c0>
  8090d4:	0005883a 	mov	r2,zero
  8090d8:	00007506 	br	8092b0 <save_marker+0x494>
  8090dc:	e0bffe17 	ldw	r2,-8(fp)
  8090e0:	10800017 	ldw	r2,0(r2)
  8090e4:	e0bff915 	stw	r2,-28(fp)
  8090e8:	e0bffe17 	ldw	r2,-8(fp)
  8090ec:	10800117 	ldw	r2,4(r2)
  8090f0:	e0bffa15 	stw	r2,-24(fp)
  8090f4:	00000e06 	br	809130 <save_marker+0x314>
  8090f8:	e0bff717 	ldw	r2,-36(fp)
  8090fc:	10c00044 	addi	r3,r2,1
  809100:	e0fff715 	stw	r3,-36(fp)
  809104:	e0fff917 	ldw	r3,-28(fp)
  809108:	19000044 	addi	r4,r3,1
  80910c:	e13ff915 	stw	r4,-28(fp)
  809110:	18c00003 	ldbu	r3,0(r3)
  809114:	10c00005 	stb	r3,0(r2)
  809118:	e0bffa17 	ldw	r2,-24(fp)
  80911c:	10bfffc4 	addi	r2,r2,-1
  809120:	e0bffa15 	stw	r2,-24(fp)
  809124:	e0bff517 	ldw	r2,-44(fp)
  809128:	10800044 	addi	r2,r2,1
  80912c:	e0bff515 	stw	r2,-44(fp)
  809130:	e0fff517 	ldw	r3,-44(fp)
  809134:	e0bff617 	ldw	r2,-40(fp)
  809138:	1880022e 	bgeu	r3,r2,809144 <save_marker+0x328>
  80913c:	e0bffa17 	ldw	r2,-24(fp)
  809140:	103fed1e 	bne	r2,zero,8090f8 <__alt_mem_epcs_flash_controller_0+0xff8000f8>
  809144:	e0fff517 	ldw	r3,-44(fp)
  809148:	e0bff617 	ldw	r2,-40(fp)
  80914c:	18bfd136 	bltu	r3,r2,809094 <__alt_mem_epcs_flash_controller_0+0xff800094>
  809150:	e0bff417 	ldw	r2,-48(fp)
  809154:	10001c26 	beq	r2,zero,8091c8 <save_marker+0x3ac>
  809158:	e0bfff17 	ldw	r2,-4(fp)
  80915c:	10804e17 	ldw	r2,312(r2)
  809160:	1000041e 	bne	r2,zero,809174 <save_marker+0x358>
  809164:	e0bfff17 	ldw	r2,-4(fp)
  809168:	e0fff417 	ldw	r3,-48(fp)
  80916c:	10c04e15 	stw	r3,312(r2)
  809170:	00000d06 	br	8091a8 <save_marker+0x38c>
  809174:	e0bfff17 	ldw	r2,-4(fp)
  809178:	10804e17 	ldw	r2,312(r2)
  80917c:	e0bffc15 	stw	r2,-16(fp)
  809180:	00000306 	br	809190 <save_marker+0x374>
  809184:	e0bffc17 	ldw	r2,-16(fp)
  809188:	10800017 	ldw	r2,0(r2)
  80918c:	e0bffc15 	stw	r2,-16(fp)
  809190:	e0bffc17 	ldw	r2,-16(fp)
  809194:	10800017 	ldw	r2,0(r2)
  809198:	103ffa1e 	bne	r2,zero,809184 <__alt_mem_epcs_flash_controller_0+0xff800184>
  80919c:	e0bffc17 	ldw	r2,-16(fp)
  8091a0:	e0fff417 	ldw	r3,-48(fp)
  8091a4:	10c00015 	stw	r3,0(r2)
  8091a8:	e0bff417 	ldw	r2,-48(fp)
  8091ac:	10800417 	ldw	r2,16(r2)
  8091b0:	e0bff715 	stw	r2,-36(fp)
  8091b4:	e0bff417 	ldw	r2,-48(fp)
  8091b8:	10c00217 	ldw	r3,8(r2)
  8091bc:	e0bff617 	ldw	r2,-40(fp)
  8091c0:	1885c83a 	sub	r2,r3,r2
  8091c4:	e0bff815 	stw	r2,-32(fp)
  8091c8:	e0bffd17 	ldw	r2,-12(fp)
  8091cc:	10002915 	stw	zero,164(r2)
  8091d0:	e0bfff17 	ldw	r2,-4(fp)
  8091d4:	10806e17 	ldw	r2,440(r2)
  8091d8:	10c03820 	cmpeqi	r3,r2,224
  8091dc:	1800031e 	bne	r3,zero,8091ec <save_marker+0x3d0>
  8091e0:	10803ba0 	cmpeqi	r2,r2,238
  8091e4:	1000071e 	bne	r2,zero,809204 <save_marker+0x3e8>
  8091e8:	00000c06 	br	80921c <save_marker+0x400>
  8091ec:	e1fff817 	ldw	r7,-32(fp)
  8091f0:	e1bff617 	ldw	r6,-40(fp)
  8091f4:	e17ff717 	ldw	r5,-36(fp)
  8091f8:	e13fff17 	ldw	r4,-4(fp)
  8091fc:	08083a80 	call	8083a8 <examine_app0>
  809200:	00001c06 	br	809274 <save_marker+0x458>
  809204:	e1fff817 	ldw	r7,-32(fp)
  809208:	e1bff617 	ldw	r6,-40(fp)
  80920c:	e17ff717 	ldw	r5,-36(fp)
  809210:	e13fff17 	ldw	r4,-4(fp)
  809214:	08089400 	call	808940 <examine_app14>
  809218:	00001606 	br	809274 <save_marker+0x458>
  80921c:	e0bfff17 	ldw	r2,-4(fp)
  809220:	10800017 	ldw	r2,0(r2)
  809224:	00c01744 	movi	r3,93
  809228:	10c00515 	stw	r3,20(r2)
  80922c:	e0bfff17 	ldw	r2,-4(fp)
  809230:	10800017 	ldw	r2,0(r2)
  809234:	e0ffff17 	ldw	r3,-4(fp)
  809238:	18c06e17 	ldw	r3,440(r3)
  80923c:	10c00615 	stw	r3,24(r2)
  809240:	e0bfff17 	ldw	r2,-4(fp)
  809244:	10800017 	ldw	r2,0(r2)
  809248:	e13ff817 	ldw	r4,-32(fp)
  80924c:	e0fff617 	ldw	r3,-40(fp)
  809250:	20c7883a 	add	r3,r4,r3
  809254:	10c00715 	stw	r3,28(r2)
  809258:	e0bfff17 	ldw	r2,-4(fp)
  80925c:	10800017 	ldw	r2,0(r2)
  809260:	10800117 	ldw	r2,4(r2)
  809264:	01400044 	movi	r5,1
  809268:	e13fff17 	ldw	r4,-4(fp)
  80926c:	103ee83a 	callr	r2
  809270:	0001883a 	nop
  809274:	e0bffe17 	ldw	r2,-8(fp)
  809278:	e0fff917 	ldw	r3,-28(fp)
  80927c:	10c00015 	stw	r3,0(r2)
  809280:	e0bffe17 	ldw	r2,-8(fp)
  809284:	e0fffa17 	ldw	r3,-24(fp)
  809288:	10c00115 	stw	r3,4(r2)
  80928c:	e0bff817 	ldw	r2,-32(fp)
  809290:	0080060e 	bge	zero,r2,8092ac <save_marker+0x490>
  809294:	e0bfff17 	ldw	r2,-4(fp)
  809298:	10800617 	ldw	r2,24(r2)
  80929c:	10800417 	ldw	r2,16(r2)
  8092a0:	e17ff817 	ldw	r5,-32(fp)
  8092a4:	e13fff17 	ldw	r4,-4(fp)
  8092a8:	103ee83a 	callr	r2
  8092ac:	00800044 	movi	r2,1
  8092b0:	e037883a 	mov	sp,fp
  8092b4:	dfc00117 	ldw	ra,4(sp)
  8092b8:	df000017 	ldw	fp,0(sp)
  8092bc:	dec00204 	addi	sp,sp,8
  8092c0:	f800283a 	ret

008092c4 <skip_variable>:
  8092c4:	defff904 	addi	sp,sp,-28
  8092c8:	dfc00615 	stw	ra,24(sp)
  8092cc:	df000515 	stw	fp,20(sp)
  8092d0:	df000504 	addi	fp,sp,20
  8092d4:	e13fff15 	stw	r4,-4(fp)
  8092d8:	e0bfff17 	ldw	r2,-4(fp)
  8092dc:	10800617 	ldw	r2,24(r2)
  8092e0:	e0bffd15 	stw	r2,-12(fp)
  8092e4:	e0bffd17 	ldw	r2,-12(fp)
  8092e8:	10800017 	ldw	r2,0(r2)
  8092ec:	e0bffb15 	stw	r2,-20(fp)
  8092f0:	e0bffd17 	ldw	r2,-12(fp)
  8092f4:	10800117 	ldw	r2,4(r2)
  8092f8:	e0bffc15 	stw	r2,-16(fp)
  8092fc:	e0bffc17 	ldw	r2,-16(fp)
  809300:	10000d1e 	bne	r2,zero,809338 <skip_variable+0x74>
  809304:	e0bffd17 	ldw	r2,-12(fp)
  809308:	10800317 	ldw	r2,12(r2)
  80930c:	e13fff17 	ldw	r4,-4(fp)
  809310:	103ee83a 	callr	r2
  809314:	1000021e 	bne	r2,zero,809320 <skip_variable+0x5c>
  809318:	0005883a 	mov	r2,zero
  80931c:	00004f06 	br	80945c <skip_variable+0x198>
  809320:	e0bffd17 	ldw	r2,-12(fp)
  809324:	10800017 	ldw	r2,0(r2)
  809328:	e0bffb15 	stw	r2,-20(fp)
  80932c:	e0bffd17 	ldw	r2,-12(fp)
  809330:	10800117 	ldw	r2,4(r2)
  809334:	e0bffc15 	stw	r2,-16(fp)
  809338:	e0bffc17 	ldw	r2,-16(fp)
  80933c:	10bfffc4 	addi	r2,r2,-1
  809340:	e0bffc15 	stw	r2,-16(fp)
  809344:	e0bffb17 	ldw	r2,-20(fp)
  809348:	10c00044 	addi	r3,r2,1
  80934c:	e0fffb15 	stw	r3,-20(fp)
  809350:	10800003 	ldbu	r2,0(r2)
  809354:	10803fcc 	andi	r2,r2,255
  809358:	1004923a 	slli	r2,r2,8
  80935c:	e0bffe15 	stw	r2,-8(fp)
  809360:	e0bffc17 	ldw	r2,-16(fp)
  809364:	10000d1e 	bne	r2,zero,80939c <skip_variable+0xd8>
  809368:	e0bffd17 	ldw	r2,-12(fp)
  80936c:	10800317 	ldw	r2,12(r2)
  809370:	e13fff17 	ldw	r4,-4(fp)
  809374:	103ee83a 	callr	r2
  809378:	1000021e 	bne	r2,zero,809384 <skip_variable+0xc0>
  80937c:	0005883a 	mov	r2,zero
  809380:	00003606 	br	80945c <skip_variable+0x198>
  809384:	e0bffd17 	ldw	r2,-12(fp)
  809388:	10800017 	ldw	r2,0(r2)
  80938c:	e0bffb15 	stw	r2,-20(fp)
  809390:	e0bffd17 	ldw	r2,-12(fp)
  809394:	10800117 	ldw	r2,4(r2)
  809398:	e0bffc15 	stw	r2,-16(fp)
  80939c:	e0bffc17 	ldw	r2,-16(fp)
  8093a0:	10bfffc4 	addi	r2,r2,-1
  8093a4:	e0bffc15 	stw	r2,-16(fp)
  8093a8:	e0bffb17 	ldw	r2,-20(fp)
  8093ac:	10c00044 	addi	r3,r2,1
  8093b0:	e0fffb15 	stw	r3,-20(fp)
  8093b4:	10800003 	ldbu	r2,0(r2)
  8093b8:	10803fcc 	andi	r2,r2,255
  8093bc:	e0fffe17 	ldw	r3,-8(fp)
  8093c0:	1885883a 	add	r2,r3,r2
  8093c4:	e0bffe15 	stw	r2,-8(fp)
  8093c8:	e0bffe17 	ldw	r2,-8(fp)
  8093cc:	10bfff84 	addi	r2,r2,-2
  8093d0:	e0bffe15 	stw	r2,-8(fp)
  8093d4:	e0bfff17 	ldw	r2,-4(fp)
  8093d8:	10800017 	ldw	r2,0(r2)
  8093dc:	00c01744 	movi	r3,93
  8093e0:	10c00515 	stw	r3,20(r2)
  8093e4:	e0bfff17 	ldw	r2,-4(fp)
  8093e8:	10800017 	ldw	r2,0(r2)
  8093ec:	e0ffff17 	ldw	r3,-4(fp)
  8093f0:	18c06e17 	ldw	r3,440(r3)
  8093f4:	10c00615 	stw	r3,24(r2)
  8093f8:	e0bfff17 	ldw	r2,-4(fp)
  8093fc:	10800017 	ldw	r2,0(r2)
  809400:	e0fffe17 	ldw	r3,-8(fp)
  809404:	10c00715 	stw	r3,28(r2)
  809408:	e0bfff17 	ldw	r2,-4(fp)
  80940c:	10800017 	ldw	r2,0(r2)
  809410:	10800117 	ldw	r2,4(r2)
  809414:	01400044 	movi	r5,1
  809418:	e13fff17 	ldw	r4,-4(fp)
  80941c:	103ee83a 	callr	r2
  809420:	e0bffd17 	ldw	r2,-12(fp)
  809424:	e0fffb17 	ldw	r3,-20(fp)
  809428:	10c00015 	stw	r3,0(r2)
  80942c:	e0bffd17 	ldw	r2,-12(fp)
  809430:	e0fffc17 	ldw	r3,-16(fp)
  809434:	10c00115 	stw	r3,4(r2)
  809438:	e0bffe17 	ldw	r2,-8(fp)
  80943c:	0080060e 	bge	zero,r2,809458 <skip_variable+0x194>
  809440:	e0bfff17 	ldw	r2,-4(fp)
  809444:	10800617 	ldw	r2,24(r2)
  809448:	10800417 	ldw	r2,16(r2)
  80944c:	e17ffe17 	ldw	r5,-8(fp)
  809450:	e13fff17 	ldw	r4,-4(fp)
  809454:	103ee83a 	callr	r2
  809458:	00800044 	movi	r2,1
  80945c:	e037883a 	mov	sp,fp
  809460:	dfc00117 	ldw	ra,4(sp)
  809464:	df000017 	ldw	fp,0(sp)
  809468:	dec00204 	addi	sp,sp,8
  80946c:	f800283a 	ret

00809470 <next_marker>:
  809470:	defff904 	addi	sp,sp,-28
  809474:	dfc00615 	stw	ra,24(sp)
  809478:	df000515 	stw	fp,20(sp)
  80947c:	df000504 	addi	fp,sp,20
  809480:	e13fff15 	stw	r4,-4(fp)
  809484:	e0bfff17 	ldw	r2,-4(fp)
  809488:	10800617 	ldw	r2,24(r2)
  80948c:	e0bffe15 	stw	r2,-8(fp)
  809490:	e0bffe17 	ldw	r2,-8(fp)
  809494:	10800017 	ldw	r2,0(r2)
  809498:	e0bffc15 	stw	r2,-16(fp)
  80949c:	e0bffe17 	ldw	r2,-8(fp)
  8094a0:	10800117 	ldw	r2,4(r2)
  8094a4:	e0bffd15 	stw	r2,-12(fp)
  8094a8:	e0bffd17 	ldw	r2,-12(fp)
  8094ac:	10000d1e 	bne	r2,zero,8094e4 <next_marker+0x74>
  8094b0:	e0bffe17 	ldw	r2,-8(fp)
  8094b4:	10800317 	ldw	r2,12(r2)
  8094b8:	e13fff17 	ldw	r4,-4(fp)
  8094bc:	103ee83a 	callr	r2
  8094c0:	1000021e 	bne	r2,zero,8094cc <next_marker+0x5c>
  8094c4:	0005883a 	mov	r2,zero
  8094c8:	00008706 	br	8096e8 <next_marker+0x278>
  8094cc:	e0bffe17 	ldw	r2,-8(fp)
  8094d0:	10800017 	ldw	r2,0(r2)
  8094d4:	e0bffc15 	stw	r2,-16(fp)
  8094d8:	e0bffe17 	ldw	r2,-8(fp)
  8094dc:	10800117 	ldw	r2,4(r2)
  8094e0:	e0bffd15 	stw	r2,-12(fp)
  8094e4:	e0bffd17 	ldw	r2,-12(fp)
  8094e8:	10bfffc4 	addi	r2,r2,-1
  8094ec:	e0bffd15 	stw	r2,-12(fp)
  8094f0:	e0bffc17 	ldw	r2,-16(fp)
  8094f4:	10c00044 	addi	r3,r2,1
  8094f8:	e0fffc15 	stw	r3,-16(fp)
  8094fc:	10800003 	ldbu	r2,0(r2)
  809500:	10803fcc 	andi	r2,r2,255
  809504:	e0bffb15 	stw	r2,-20(fp)
  809508:	00002306 	br	809598 <next_marker+0x128>
  80950c:	e0bfff17 	ldw	r2,-4(fp)
  809510:	10807417 	ldw	r2,464(r2)
  809514:	10c00617 	ldw	r3,24(r2)
  809518:	18c00044 	addi	r3,r3,1
  80951c:	10c00615 	stw	r3,24(r2)
  809520:	e0bffe17 	ldw	r2,-8(fp)
  809524:	e0fffc17 	ldw	r3,-16(fp)
  809528:	10c00015 	stw	r3,0(r2)
  80952c:	e0bffe17 	ldw	r2,-8(fp)
  809530:	e0fffd17 	ldw	r3,-12(fp)
  809534:	10c00115 	stw	r3,4(r2)
  809538:	e0bffd17 	ldw	r2,-12(fp)
  80953c:	10000d1e 	bne	r2,zero,809574 <next_marker+0x104>
  809540:	e0bffe17 	ldw	r2,-8(fp)
  809544:	10800317 	ldw	r2,12(r2)
  809548:	e13fff17 	ldw	r4,-4(fp)
  80954c:	103ee83a 	callr	r2
  809550:	1000021e 	bne	r2,zero,80955c <next_marker+0xec>
  809554:	0005883a 	mov	r2,zero
  809558:	00006306 	br	8096e8 <next_marker+0x278>
  80955c:	e0bffe17 	ldw	r2,-8(fp)
  809560:	10800017 	ldw	r2,0(r2)
  809564:	e0bffc15 	stw	r2,-16(fp)
  809568:	e0bffe17 	ldw	r2,-8(fp)
  80956c:	10800117 	ldw	r2,4(r2)
  809570:	e0bffd15 	stw	r2,-12(fp)
  809574:	e0bffd17 	ldw	r2,-12(fp)
  809578:	10bfffc4 	addi	r2,r2,-1
  80957c:	e0bffd15 	stw	r2,-12(fp)
  809580:	e0bffc17 	ldw	r2,-16(fp)
  809584:	10c00044 	addi	r3,r2,1
  809588:	e0fffc15 	stw	r3,-16(fp)
  80958c:	10800003 	ldbu	r2,0(r2)
  809590:	10803fcc 	andi	r2,r2,255
  809594:	e0bffb15 	stw	r2,-20(fp)
  809598:	e0bffb17 	ldw	r2,-20(fp)
  80959c:	10803fd8 	cmpnei	r2,r2,255
  8095a0:	103fda1e 	bne	r2,zero,80950c <__alt_mem_epcs_flash_controller_0+0xff80050c>
  8095a4:	e0bffd17 	ldw	r2,-12(fp)
  8095a8:	10000d1e 	bne	r2,zero,8095e0 <next_marker+0x170>
  8095ac:	e0bffe17 	ldw	r2,-8(fp)
  8095b0:	10800317 	ldw	r2,12(r2)
  8095b4:	e13fff17 	ldw	r4,-4(fp)
  8095b8:	103ee83a 	callr	r2
  8095bc:	1000021e 	bne	r2,zero,8095c8 <next_marker+0x158>
  8095c0:	0005883a 	mov	r2,zero
  8095c4:	00004806 	br	8096e8 <next_marker+0x278>
  8095c8:	e0bffe17 	ldw	r2,-8(fp)
  8095cc:	10800017 	ldw	r2,0(r2)
  8095d0:	e0bffc15 	stw	r2,-16(fp)
  8095d4:	e0bffe17 	ldw	r2,-8(fp)
  8095d8:	10800117 	ldw	r2,4(r2)
  8095dc:	e0bffd15 	stw	r2,-12(fp)
  8095e0:	e0bffd17 	ldw	r2,-12(fp)
  8095e4:	10bfffc4 	addi	r2,r2,-1
  8095e8:	e0bffd15 	stw	r2,-12(fp)
  8095ec:	e0bffc17 	ldw	r2,-16(fp)
  8095f0:	10c00044 	addi	r3,r2,1
  8095f4:	e0fffc15 	stw	r3,-16(fp)
  8095f8:	10800003 	ldbu	r2,0(r2)
  8095fc:	10803fcc 	andi	r2,r2,255
  809600:	e0bffb15 	stw	r2,-20(fp)
  809604:	e0bffb17 	ldw	r2,-20(fp)
  809608:	10803fe0 	cmpeqi	r2,r2,255
  80960c:	103fe51e 	bne	r2,zero,8095a4 <__alt_mem_epcs_flash_controller_0+0xff8005a4>
  809610:	e0bffb17 	ldw	r2,-20(fp)
  809614:	10000e1e 	bne	r2,zero,809650 <next_marker+0x1e0>
  809618:	e0bfff17 	ldw	r2,-4(fp)
  80961c:	10807417 	ldw	r2,464(r2)
  809620:	e0ffff17 	ldw	r3,-4(fp)
  809624:	18c07417 	ldw	r3,464(r3)
  809628:	18c00617 	ldw	r3,24(r3)
  80962c:	18c00084 	addi	r3,r3,2
  809630:	10c00615 	stw	r3,24(r2)
  809634:	e0bffe17 	ldw	r2,-8(fp)
  809638:	e0fffc17 	ldw	r3,-16(fp)
  80963c:	10c00015 	stw	r3,0(r2)
  809640:	e0bffe17 	ldw	r2,-8(fp)
  809644:	e0fffd17 	ldw	r3,-12(fp)
  809648:	10c00115 	stw	r3,4(r2)
  80964c:	003f9606 	br	8094a8 <__alt_mem_epcs_flash_controller_0+0xff8004a8>
  809650:	0001883a 	nop
  809654:	e0bfff17 	ldw	r2,-4(fp)
  809658:	10807417 	ldw	r2,464(r2)
  80965c:	10800617 	ldw	r2,24(r2)
  809660:	10001726 	beq	r2,zero,8096c0 <next_marker+0x250>
  809664:	e0bfff17 	ldw	r2,-4(fp)
  809668:	10800017 	ldw	r2,0(r2)
  80966c:	00c01dc4 	movi	r3,119
  809670:	10c00515 	stw	r3,20(r2)
  809674:	e0bfff17 	ldw	r2,-4(fp)
  809678:	10800017 	ldw	r2,0(r2)
  80967c:	e0ffff17 	ldw	r3,-4(fp)
  809680:	18c07417 	ldw	r3,464(r3)
  809684:	18c00617 	ldw	r3,24(r3)
  809688:	10c00615 	stw	r3,24(r2)
  80968c:	e0bfff17 	ldw	r2,-4(fp)
  809690:	10800017 	ldw	r2,0(r2)
  809694:	e0fffb17 	ldw	r3,-20(fp)
  809698:	10c00715 	stw	r3,28(r2)
  80969c:	e0bfff17 	ldw	r2,-4(fp)
  8096a0:	10800017 	ldw	r2,0(r2)
  8096a4:	10800117 	ldw	r2,4(r2)
  8096a8:	017fffc4 	movi	r5,-1
  8096ac:	e13fff17 	ldw	r4,-4(fp)
  8096b0:	103ee83a 	callr	r2
  8096b4:	e0bfff17 	ldw	r2,-4(fp)
  8096b8:	10807417 	ldw	r2,464(r2)
  8096bc:	10000615 	stw	zero,24(r2)
  8096c0:	e0bfff17 	ldw	r2,-4(fp)
  8096c4:	e0fffb17 	ldw	r3,-20(fp)
  8096c8:	10c06e15 	stw	r3,440(r2)
  8096cc:	e0bffe17 	ldw	r2,-8(fp)
  8096d0:	e0fffc17 	ldw	r3,-16(fp)
  8096d4:	10c00015 	stw	r3,0(r2)
  8096d8:	e0bffe17 	ldw	r2,-8(fp)
  8096dc:	e0fffd17 	ldw	r3,-12(fp)
  8096e0:	10c00115 	stw	r3,4(r2)
  8096e4:	00800044 	movi	r2,1
  8096e8:	e037883a 	mov	sp,fp
  8096ec:	dfc00117 	ldw	ra,4(sp)
  8096f0:	df000017 	ldw	fp,0(sp)
  8096f4:	dec00204 	addi	sp,sp,8
  8096f8:	f800283a 	ret

008096fc <first_marker>:
  8096fc:	defff804 	addi	sp,sp,-32
  809700:	dfc00715 	stw	ra,28(sp)
  809704:	df000615 	stw	fp,24(sp)
  809708:	df000604 	addi	fp,sp,24
  80970c:	e13fff15 	stw	r4,-4(fp)
  809710:	e0bfff17 	ldw	r2,-4(fp)
  809714:	10800617 	ldw	r2,24(r2)
  809718:	e0bffc15 	stw	r2,-16(fp)
  80971c:	e0bffc17 	ldw	r2,-16(fp)
  809720:	10800017 	ldw	r2,0(r2)
  809724:	e0bffa15 	stw	r2,-24(fp)
  809728:	e0bffc17 	ldw	r2,-16(fp)
  80972c:	10800117 	ldw	r2,4(r2)
  809730:	e0bffb15 	stw	r2,-20(fp)
  809734:	e0bffb17 	ldw	r2,-20(fp)
  809738:	10000d1e 	bne	r2,zero,809770 <first_marker+0x74>
  80973c:	e0bffc17 	ldw	r2,-16(fp)
  809740:	10800317 	ldw	r2,12(r2)
  809744:	e13fff17 	ldw	r4,-4(fp)
  809748:	103ee83a 	callr	r2
  80974c:	1000021e 	bne	r2,zero,809758 <first_marker+0x5c>
  809750:	0005883a 	mov	r2,zero
  809754:	00004806 	br	809878 <first_marker+0x17c>
  809758:	e0bffc17 	ldw	r2,-16(fp)
  80975c:	10800017 	ldw	r2,0(r2)
  809760:	e0bffa15 	stw	r2,-24(fp)
  809764:	e0bffc17 	ldw	r2,-16(fp)
  809768:	10800117 	ldw	r2,4(r2)
  80976c:	e0bffb15 	stw	r2,-20(fp)
  809770:	e0bffb17 	ldw	r2,-20(fp)
  809774:	10bfffc4 	addi	r2,r2,-1
  809778:	e0bffb15 	stw	r2,-20(fp)
  80977c:	e0bffa17 	ldw	r2,-24(fp)
  809780:	10c00044 	addi	r3,r2,1
  809784:	e0fffa15 	stw	r3,-24(fp)
  809788:	10800003 	ldbu	r2,0(r2)
  80978c:	10803fcc 	andi	r2,r2,255
  809790:	e0bffd15 	stw	r2,-12(fp)
  809794:	e0bffb17 	ldw	r2,-20(fp)
  809798:	10000d1e 	bne	r2,zero,8097d0 <first_marker+0xd4>
  80979c:	e0bffc17 	ldw	r2,-16(fp)
  8097a0:	10800317 	ldw	r2,12(r2)
  8097a4:	e13fff17 	ldw	r4,-4(fp)
  8097a8:	103ee83a 	callr	r2
  8097ac:	1000021e 	bne	r2,zero,8097b8 <first_marker+0xbc>
  8097b0:	0005883a 	mov	r2,zero
  8097b4:	00003006 	br	809878 <first_marker+0x17c>
  8097b8:	e0bffc17 	ldw	r2,-16(fp)
  8097bc:	10800017 	ldw	r2,0(r2)
  8097c0:	e0bffa15 	stw	r2,-24(fp)
  8097c4:	e0bffc17 	ldw	r2,-16(fp)
  8097c8:	10800117 	ldw	r2,4(r2)
  8097cc:	e0bffb15 	stw	r2,-20(fp)
  8097d0:	e0bffb17 	ldw	r2,-20(fp)
  8097d4:	10bfffc4 	addi	r2,r2,-1
  8097d8:	e0bffb15 	stw	r2,-20(fp)
  8097dc:	e0bffa17 	ldw	r2,-24(fp)
  8097e0:	10c00044 	addi	r3,r2,1
  8097e4:	e0fffa15 	stw	r3,-24(fp)
  8097e8:	10800003 	ldbu	r2,0(r2)
  8097ec:	10803fcc 	andi	r2,r2,255
  8097f0:	e0bffe15 	stw	r2,-8(fp)
  8097f4:	e0bffd17 	ldw	r2,-12(fp)
  8097f8:	10803fd8 	cmpnei	r2,r2,255
  8097fc:	1000031e 	bne	r2,zero,80980c <first_marker+0x110>
  809800:	e0bffe17 	ldw	r2,-8(fp)
  809804:	10803620 	cmpeqi	r2,r2,216
  809808:	1000111e 	bne	r2,zero,809850 <first_marker+0x154>
  80980c:	e0bfff17 	ldw	r2,-4(fp)
  809810:	10800017 	ldw	r2,0(r2)
  809814:	00c00dc4 	movi	r3,55
  809818:	10c00515 	stw	r3,20(r2)
  80981c:	e0bfff17 	ldw	r2,-4(fp)
  809820:	10800017 	ldw	r2,0(r2)
  809824:	e0fffd17 	ldw	r3,-12(fp)
  809828:	10c00615 	stw	r3,24(r2)
  80982c:	e0bfff17 	ldw	r2,-4(fp)
  809830:	10800017 	ldw	r2,0(r2)
  809834:	e0fffe17 	ldw	r3,-8(fp)
  809838:	10c00715 	stw	r3,28(r2)
  80983c:	e0bfff17 	ldw	r2,-4(fp)
  809840:	10800017 	ldw	r2,0(r2)
  809844:	10800017 	ldw	r2,0(r2)
  809848:	e13fff17 	ldw	r4,-4(fp)
  80984c:	103ee83a 	callr	r2
  809850:	e0bfff17 	ldw	r2,-4(fp)
  809854:	e0fffe17 	ldw	r3,-8(fp)
  809858:	10c06e15 	stw	r3,440(r2)
  80985c:	e0bffc17 	ldw	r2,-16(fp)
  809860:	e0fffa17 	ldw	r3,-24(fp)
  809864:	10c00015 	stw	r3,0(r2)
  809868:	e0bffc17 	ldw	r2,-16(fp)
  80986c:	e0fffb17 	ldw	r3,-20(fp)
  809870:	10c00115 	stw	r3,4(r2)
  809874:	00800044 	movi	r2,1
  809878:	e037883a 	mov	sp,fp
  80987c:	dfc00117 	ldw	ra,4(sp)
  809880:	df000017 	ldw	fp,0(sp)
  809884:	dec00204 	addi	sp,sp,8
  809888:	f800283a 	ret

0080988c <read_markers>:
  80988c:	defffd04 	addi	sp,sp,-12
  809890:	dfc00215 	stw	ra,8(sp)
  809894:	df000115 	stw	fp,4(sp)
  809898:	df000104 	addi	fp,sp,4
  80989c:	e13fff15 	stw	r4,-4(fp)
  8098a0:	e0bfff17 	ldw	r2,-4(fp)
  8098a4:	10806e17 	ldw	r2,440(r2)
  8098a8:	10000e1e 	bne	r2,zero,8098e4 <read_markers+0x58>
  8098ac:	e0bfff17 	ldw	r2,-4(fp)
  8098b0:	10807417 	ldw	r2,464(r2)
  8098b4:	10800317 	ldw	r2,12(r2)
  8098b8:	1000051e 	bne	r2,zero,8098d0 <read_markers+0x44>
  8098bc:	e13fff17 	ldw	r4,-4(fp)
  8098c0:	08096fc0 	call	8096fc <first_marker>
  8098c4:	1000071e 	bne	r2,zero,8098e4 <read_markers+0x58>
  8098c8:	0005883a 	mov	r2,zero
  8098cc:	0001d306 	br	80a01c <read_markers+0x790>
  8098d0:	e13fff17 	ldw	r4,-4(fp)
  8098d4:	08094700 	call	809470 <next_marker>
  8098d8:	1000021e 	bne	r2,zero,8098e4 <read_markers+0x58>
  8098dc:	0005883a 	mov	r2,zero
  8098e0:	0001ce06 	br	80a01c <read_markers+0x790>
  8098e4:	e0bfff17 	ldw	r2,-4(fp)
  8098e8:	10806e17 	ldw	r2,440(r2)
  8098ec:	10c03fe8 	cmpgeui	r3,r2,255
  8098f0:	18019d1e 	bne	r3,zero,809f68 <read_markers+0x6dc>
  8098f4:	100690ba 	slli	r3,r2,2
  8098f8:	00802074 	movhi	r2,129
  8098fc:	10a64304 	addi	r2,r2,-26356
  809900:	1885883a 	add	r2,r3,r2
  809904:	10800017 	ldw	r2,0(r2)
  809908:	1000683a 	jmp	r2
  80990c:	00809f68 	cmpgeui	r2,zero,637
  809910:	00809f14 	movui	r2,636
  809914:	00809f68 	cmpgeui	r2,zero,637
  809918:	00809f68 	cmpgeui	r2,zero,637
  80991c:	00809f68 	cmpgeui	r2,zero,637
  809920:	00809f68 	cmpgeui	r2,zero,637
  809924:	00809f68 	cmpgeui	r2,zero,637
  809928:	00809f68 	cmpgeui	r2,zero,637
  80992c:	00809f68 	cmpgeui	r2,zero,637
  809930:	00809f68 	cmpgeui	r2,zero,637
  809934:	00809f68 	cmpgeui	r2,zero,637
  809938:	00809f68 	cmpgeui	r2,zero,637
  80993c:	00809f68 	cmpgeui	r2,zero,637
  809940:	00809f68 	cmpgeui	r2,zero,637
  809944:	00809f68 	cmpgeui	r2,zero,637
  809948:	00809f68 	cmpgeui	r2,zero,637
  80994c:	00809f68 	cmpgeui	r2,zero,637
  809950:	00809f68 	cmpgeui	r2,zero,637
  809954:	00809f68 	cmpgeui	r2,zero,637
  809958:	00809f68 	cmpgeui	r2,zero,637
  80995c:	00809f68 	cmpgeui	r2,zero,637
  809960:	00809f68 	cmpgeui	r2,zero,637
  809964:	00809f68 	cmpgeui	r2,zero,637
  809968:	00809f68 	cmpgeui	r2,zero,637
  80996c:	00809f68 	cmpgeui	r2,zero,637
  809970:	00809f68 	cmpgeui	r2,zero,637
  809974:	00809f68 	cmpgeui	r2,zero,637
  809978:	00809f68 	cmpgeui	r2,zero,637
  80997c:	00809f68 	cmpgeui	r2,zero,637
  809980:	00809f68 	cmpgeui	r2,zero,637
  809984:	00809f68 	cmpgeui	r2,zero,637
  809988:	00809f68 	cmpgeui	r2,zero,637
  80998c:	00809f68 	cmpgeui	r2,zero,637
  809990:	00809f68 	cmpgeui	r2,zero,637
  809994:	00809f68 	cmpgeui	r2,zero,637
  809998:	00809f68 	cmpgeui	r2,zero,637
  80999c:	00809f68 	cmpgeui	r2,zero,637
  8099a0:	00809f68 	cmpgeui	r2,zero,637
  8099a4:	00809f68 	cmpgeui	r2,zero,637
  8099a8:	00809f68 	cmpgeui	r2,zero,637
  8099ac:	00809f68 	cmpgeui	r2,zero,637
  8099b0:	00809f68 	cmpgeui	r2,zero,637
  8099b4:	00809f68 	cmpgeui	r2,zero,637
  8099b8:	00809f68 	cmpgeui	r2,zero,637
  8099bc:	00809f68 	cmpgeui	r2,zero,637
  8099c0:	00809f68 	cmpgeui	r2,zero,637
  8099c4:	00809f68 	cmpgeui	r2,zero,637
  8099c8:	00809f68 	cmpgeui	r2,zero,637
  8099cc:	00809f68 	cmpgeui	r2,zero,637
  8099d0:	00809f68 	cmpgeui	r2,zero,637
  8099d4:	00809f68 	cmpgeui	r2,zero,637
  8099d8:	00809f68 	cmpgeui	r2,zero,637
  8099dc:	00809f68 	cmpgeui	r2,zero,637
  8099e0:	00809f68 	cmpgeui	r2,zero,637
  8099e4:	00809f68 	cmpgeui	r2,zero,637
  8099e8:	00809f68 	cmpgeui	r2,zero,637
  8099ec:	00809f68 	cmpgeui	r2,zero,637
  8099f0:	00809f68 	cmpgeui	r2,zero,637
  8099f4:	00809f68 	cmpgeui	r2,zero,637
  8099f8:	00809f68 	cmpgeui	r2,zero,637
  8099fc:	00809f68 	cmpgeui	r2,zero,637
  809a00:	00809f68 	cmpgeui	r2,zero,637
  809a04:	00809f68 	cmpgeui	r2,zero,637
  809a08:	00809f68 	cmpgeui	r2,zero,637
  809a0c:	00809f68 	cmpgeui	r2,zero,637
  809a10:	00809f68 	cmpgeui	r2,zero,637
  809a14:	00809f68 	cmpgeui	r2,zero,637
  809a18:	00809f68 	cmpgeui	r2,zero,637
  809a1c:	00809f68 	cmpgeui	r2,zero,637
  809a20:	00809f68 	cmpgeui	r2,zero,637
  809a24:	00809f68 	cmpgeui	r2,zero,637
  809a28:	00809f68 	cmpgeui	r2,zero,637
  809a2c:	00809f68 	cmpgeui	r2,zero,637
  809a30:	00809f68 	cmpgeui	r2,zero,637
  809a34:	00809f68 	cmpgeui	r2,zero,637
  809a38:	00809f68 	cmpgeui	r2,zero,637
  809a3c:	00809f68 	cmpgeui	r2,zero,637
  809a40:	00809f68 	cmpgeui	r2,zero,637
  809a44:	00809f68 	cmpgeui	r2,zero,637
  809a48:	00809f68 	cmpgeui	r2,zero,637
  809a4c:	00809f68 	cmpgeui	r2,zero,637
  809a50:	00809f68 	cmpgeui	r2,zero,637
  809a54:	00809f68 	cmpgeui	r2,zero,637
  809a58:	00809f68 	cmpgeui	r2,zero,637
  809a5c:	00809f68 	cmpgeui	r2,zero,637
  809a60:	00809f68 	cmpgeui	r2,zero,637
  809a64:	00809f68 	cmpgeui	r2,zero,637
  809a68:	00809f68 	cmpgeui	r2,zero,637
  809a6c:	00809f68 	cmpgeui	r2,zero,637
  809a70:	00809f68 	cmpgeui	r2,zero,637
  809a74:	00809f68 	cmpgeui	r2,zero,637
  809a78:	00809f68 	cmpgeui	r2,zero,637
  809a7c:	00809f68 	cmpgeui	r2,zero,637
  809a80:	00809f68 	cmpgeui	r2,zero,637
  809a84:	00809f68 	cmpgeui	r2,zero,637
  809a88:	00809f68 	cmpgeui	r2,zero,637
  809a8c:	00809f68 	cmpgeui	r2,zero,637
  809a90:	00809f68 	cmpgeui	r2,zero,637
  809a94:	00809f68 	cmpgeui	r2,zero,637
  809a98:	00809f68 	cmpgeui	r2,zero,637
  809a9c:	00809f68 	cmpgeui	r2,zero,637
  809aa0:	00809f68 	cmpgeui	r2,zero,637
  809aa4:	00809f68 	cmpgeui	r2,zero,637
  809aa8:	00809f68 	cmpgeui	r2,zero,637
  809aac:	00809f68 	cmpgeui	r2,zero,637
  809ab0:	00809f68 	cmpgeui	r2,zero,637
  809ab4:	00809f68 	cmpgeui	r2,zero,637
  809ab8:	00809f68 	cmpgeui	r2,zero,637
  809abc:	00809f68 	cmpgeui	r2,zero,637
  809ac0:	00809f68 	cmpgeui	r2,zero,637
  809ac4:	00809f68 	cmpgeui	r2,zero,637
  809ac8:	00809f68 	cmpgeui	r2,zero,637
  809acc:	00809f68 	cmpgeui	r2,zero,637
  809ad0:	00809f68 	cmpgeui	r2,zero,637
  809ad4:	00809f68 	cmpgeui	r2,zero,637
  809ad8:	00809f68 	cmpgeui	r2,zero,637
  809adc:	00809f68 	cmpgeui	r2,zero,637
  809ae0:	00809f68 	cmpgeui	r2,zero,637
  809ae4:	00809f68 	cmpgeui	r2,zero,637
  809ae8:	00809f68 	cmpgeui	r2,zero,637
  809aec:	00809f68 	cmpgeui	r2,zero,637
  809af0:	00809f68 	cmpgeui	r2,zero,637
  809af4:	00809f68 	cmpgeui	r2,zero,637
  809af8:	00809f68 	cmpgeui	r2,zero,637
  809afc:	00809f68 	cmpgeui	r2,zero,637
  809b00:	00809f68 	cmpgeui	r2,zero,637
  809b04:	00809f68 	cmpgeui	r2,zero,637
  809b08:	00809f68 	cmpgeui	r2,zero,637
  809b0c:	00809f68 	cmpgeui	r2,zero,637
  809b10:	00809f68 	cmpgeui	r2,zero,637
  809b14:	00809f68 	cmpgeui	r2,zero,637
  809b18:	00809f68 	cmpgeui	r2,zero,637
  809b1c:	00809f68 	cmpgeui	r2,zero,637
  809b20:	00809f68 	cmpgeui	r2,zero,637
  809b24:	00809f68 	cmpgeui	r2,zero,637
  809b28:	00809f68 	cmpgeui	r2,zero,637
  809b2c:	00809f68 	cmpgeui	r2,zero,637
  809b30:	00809f68 	cmpgeui	r2,zero,637
  809b34:	00809f68 	cmpgeui	r2,zero,637
  809b38:	00809f68 	cmpgeui	r2,zero,637
  809b3c:	00809f68 	cmpgeui	r2,zero,637
  809b40:	00809f68 	cmpgeui	r2,zero,637
  809b44:	00809f68 	cmpgeui	r2,zero,637
  809b48:	00809f68 	cmpgeui	r2,zero,637
  809b4c:	00809f68 	cmpgeui	r2,zero,637
  809b50:	00809f68 	cmpgeui	r2,zero,637
  809b54:	00809f68 	cmpgeui	r2,zero,637
  809b58:	00809f68 	cmpgeui	r2,zero,637
  809b5c:	00809f68 	cmpgeui	r2,zero,637
  809b60:	00809f68 	cmpgeui	r2,zero,637
  809b64:	00809f68 	cmpgeui	r2,zero,637
  809b68:	00809f68 	cmpgeui	r2,zero,637
  809b6c:	00809f68 	cmpgeui	r2,zero,637
  809b70:	00809f68 	cmpgeui	r2,zero,637
  809b74:	00809f68 	cmpgeui	r2,zero,637
  809b78:	00809f68 	cmpgeui	r2,zero,637
  809b7c:	00809f68 	cmpgeui	r2,zero,637
  809b80:	00809f68 	cmpgeui	r2,zero,637
  809b84:	00809f68 	cmpgeui	r2,zero,637
  809b88:	00809f68 	cmpgeui	r2,zero,637
  809b8c:	00809f68 	cmpgeui	r2,zero,637
  809b90:	00809f68 	cmpgeui	r2,zero,637
  809b94:	00809f68 	cmpgeui	r2,zero,637
  809b98:	00809f68 	cmpgeui	r2,zero,637
  809b9c:	00809f68 	cmpgeui	r2,zero,637
  809ba0:	00809f68 	cmpgeui	r2,zero,637
  809ba4:	00809f68 	cmpgeui	r2,zero,637
  809ba8:	00809f68 	cmpgeui	r2,zero,637
  809bac:	00809f68 	cmpgeui	r2,zero,637
  809bb0:	00809f68 	cmpgeui	r2,zero,637
  809bb4:	00809f68 	cmpgeui	r2,zero,637
  809bb8:	00809f68 	cmpgeui	r2,zero,637
  809bbc:	00809f68 	cmpgeui	r2,zero,637
  809bc0:	00809f68 	cmpgeui	r2,zero,637
  809bc4:	00809f68 	cmpgeui	r2,zero,637
  809bc8:	00809f68 	cmpgeui	r2,zero,637
  809bcc:	00809f68 	cmpgeui	r2,zero,637
  809bd0:	00809f68 	cmpgeui	r2,zero,637
  809bd4:	00809f68 	cmpgeui	r2,zero,637
  809bd8:	00809f68 	cmpgeui	r2,zero,637
  809bdc:	00809f68 	cmpgeui	r2,zero,637
  809be0:	00809f68 	cmpgeui	r2,zero,637
  809be4:	00809f68 	cmpgeui	r2,zero,637
  809be8:	00809f68 	cmpgeui	r2,zero,637
  809bec:	00809f68 	cmpgeui	r2,zero,637
  809bf0:	00809f68 	cmpgeui	r2,zero,637
  809bf4:	00809f68 	cmpgeui	r2,zero,637
  809bf8:	00809f68 	cmpgeui	r2,zero,637
  809bfc:	00809f68 	cmpgeui	r2,zero,637
  809c00:	00809f68 	cmpgeui	r2,zero,637
  809c04:	00809f68 	cmpgeui	r2,zero,637
  809c08:	00809f68 	cmpgeui	r2,zero,637
  809c0c:	00809d1c 	xori	r2,zero,628
  809c10:	00809d3c 	xorhi	r2,zero,628
  809c14:	00809d5c 	xori	r2,zero,629
  809c18:	00809dbc 	xorhi	r2,zero,630
  809c1c:	00809e68 	cmpgeui	r2,zero,633
  809c20:	00809dbc 	xorhi	r2,zero,630
  809c24:	00809dbc 	xorhi	r2,zero,630
  809c28:	00809dbc 	xorhi	r2,zero,630
  809c2c:	00809dbc 	xorhi	r2,zero,630
  809c30:	00809d7c 	xorhi	r2,zero,629
  809c34:	00809d9c 	xori	r2,zero,630
  809c38:	00809dbc 	xorhi	r2,zero,630
  809c3c:	00809e54 	movui	r2,633
  809c40:	00809dbc 	xorhi	r2,zero,630
  809c44:	00809dbc 	xorhi	r2,zero,630
  809c48:	00809dbc 	xorhi	r2,zero,630
  809c4c:	00809f14 	movui	r2,636
  809c50:	00809f14 	movui	r2,636
  809c54:	00809f14 	movui	r2,636
  809c58:	00809f14 	movui	r2,636
  809c5c:	00809f14 	movui	r2,636
  809c60:	00809f14 	movui	r2,636
  809c64:	00809f14 	movui	r2,636
  809c68:	00809f14 	movui	r2,636
  809c6c:	00809d08 	cmpgei	r2,zero,628
  809c70:	00809e1c 	xori	r2,zero,632
  809c74:	00809df8 	rdprs	r2,zero,631
  809c78:	00809e7c 	xorhi	r2,zero,633
  809c7c:	00809f54 	movui	r2,637
  809c80:	00809e90 	cmplti	r2,zero,634
  809c84:	00809f68 	cmpgeui	r2,zero,637
  809c88:	00809f68 	cmpgeui	r2,zero,637
  809c8c:	00809eb8 	rdprs	r2,zero,634
  809c90:	00809eb8 	rdprs	r2,zero,634
  809c94:	00809eb8 	rdprs	r2,zero,634
  809c98:	00809eb8 	rdprs	r2,zero,634
  809c9c:	00809eb8 	rdprs	r2,zero,634
  809ca0:	00809eb8 	rdprs	r2,zero,634
  809ca4:	00809eb8 	rdprs	r2,zero,634
  809ca8:	00809eb8 	rdprs	r2,zero,634
  809cac:	00809eb8 	rdprs	r2,zero,634
  809cb0:	00809eb8 	rdprs	r2,zero,634
  809cb4:	00809eb8 	rdprs	r2,zero,634
  809cb8:	00809eb8 	rdprs	r2,zero,634
  809cbc:	00809eb8 	rdprs	r2,zero,634
  809cc0:	00809eb8 	rdprs	r2,zero,634
  809cc4:	00809eb8 	rdprs	r2,zero,634
  809cc8:	00809eb8 	rdprs	r2,zero,634
  809ccc:	00809f68 	cmpgeui	r2,zero,637
  809cd0:	00809f68 	cmpgeui	r2,zero,637
  809cd4:	00809f68 	cmpgeui	r2,zero,637
  809cd8:	00809f68 	cmpgeui	r2,zero,637
  809cdc:	00809f68 	cmpgeui	r2,zero,637
  809ce0:	00809f68 	cmpgeui	r2,zero,637
  809ce4:	00809f68 	cmpgeui	r2,zero,637
  809ce8:	00809f68 	cmpgeui	r2,zero,637
  809cec:	00809ea4 	muli	r2,zero,634
  809cf0:	00809f68 	cmpgeui	r2,zero,637
  809cf4:	00809f68 	cmpgeui	r2,zero,637
  809cf8:	00809f68 	cmpgeui	r2,zero,637
  809cfc:	00809f68 	cmpgeui	r2,zero,637
  809d00:	00809f68 	cmpgeui	r2,zero,637
  809d04:	00809ef4 	movhi	r2,635
  809d08:	e13fff17 	ldw	r4,-4(fp)
  809d0c:	08051a80 	call	8051a8 <get_soi>
  809d10:	1000a41e 	bne	r2,zero,809fa4 <read_markers+0x718>
  809d14:	0005883a 	mov	r2,zero
  809d18:	0000c006 	br	80a01c <read_markers+0x790>
  809d1c:	000f883a 	mov	r7,zero
  809d20:	000d883a 	mov	r6,zero
  809d24:	01400044 	movi	r5,1
  809d28:	e13fff17 	ldw	r4,-4(fp)
  809d2c:	08053140 	call	805314 <get_sof>
  809d30:	10009e1e 	bne	r2,zero,809fac <read_markers+0x720>
  809d34:	0005883a 	mov	r2,zero
  809d38:	0000b806 	br	80a01c <read_markers+0x790>
  809d3c:	000f883a 	mov	r7,zero
  809d40:	000d883a 	mov	r6,zero
  809d44:	000b883a 	mov	r5,zero
  809d48:	e13fff17 	ldw	r4,-4(fp)
  809d4c:	08053140 	call	805314 <get_sof>
  809d50:	1000981e 	bne	r2,zero,809fb4 <read_markers+0x728>
  809d54:	0005883a 	mov	r2,zero
  809d58:	0000b006 	br	80a01c <read_markers+0x790>
  809d5c:	000f883a 	mov	r7,zero
  809d60:	01800044 	movi	r6,1
  809d64:	000b883a 	mov	r5,zero
  809d68:	e13fff17 	ldw	r4,-4(fp)
  809d6c:	08053140 	call	805314 <get_sof>
  809d70:	1000921e 	bne	r2,zero,809fbc <read_markers+0x730>
  809d74:	0005883a 	mov	r2,zero
  809d78:	0000a806 	br	80a01c <read_markers+0x790>
  809d7c:	01c00044 	movi	r7,1
  809d80:	000d883a 	mov	r6,zero
  809d84:	000b883a 	mov	r5,zero
  809d88:	e13fff17 	ldw	r4,-4(fp)
  809d8c:	08053140 	call	805314 <get_sof>
  809d90:	10008c1e 	bne	r2,zero,809fc4 <read_markers+0x738>
  809d94:	0005883a 	mov	r2,zero
  809d98:	0000a006 	br	80a01c <read_markers+0x790>
  809d9c:	01c00044 	movi	r7,1
  809da0:	01800044 	movi	r6,1
  809da4:	000b883a 	mov	r5,zero
  809da8:	e13fff17 	ldw	r4,-4(fp)
  809dac:	08053140 	call	805314 <get_sof>
  809db0:	1000861e 	bne	r2,zero,809fcc <read_markers+0x740>
  809db4:	0005883a 	mov	r2,zero
  809db8:	00009806 	br	80a01c <read_markers+0x790>
  809dbc:	e0bfff17 	ldw	r2,-4(fp)
  809dc0:	10800017 	ldw	r2,0(r2)
  809dc4:	00c00fc4 	movi	r3,63
  809dc8:	10c00515 	stw	r3,20(r2)
  809dcc:	e0bfff17 	ldw	r2,-4(fp)
  809dd0:	10800017 	ldw	r2,0(r2)
  809dd4:	e0ffff17 	ldw	r3,-4(fp)
  809dd8:	18c06e17 	ldw	r3,440(r3)
  809ddc:	10c00615 	stw	r3,24(r2)
  809de0:	e0bfff17 	ldw	r2,-4(fp)
  809de4:	10800017 	ldw	r2,0(r2)
  809de8:	10800017 	ldw	r2,0(r2)
  809dec:	e13fff17 	ldw	r4,-4(fp)
  809df0:	103ee83a 	callr	r2
  809df4:	00008606 	br	80a010 <read_markers+0x784>
  809df8:	e13fff17 	ldw	r4,-4(fp)
  809dfc:	0805b6c0 	call	805b6c <get_sos>
  809e00:	1000021e 	bne	r2,zero,809e0c <read_markers+0x580>
  809e04:	0005883a 	mov	r2,zero
  809e08:	00008406 	br	80a01c <read_markers+0x790>
  809e0c:	e0bfff17 	ldw	r2,-4(fp)
  809e10:	10006e15 	stw	zero,440(r2)
  809e14:	00800044 	movi	r2,1
  809e18:	00008006 	br	80a01c <read_markers+0x790>
  809e1c:	e0bfff17 	ldw	r2,-4(fp)
  809e20:	10800017 	ldw	r2,0(r2)
  809e24:	00c015c4 	movi	r3,87
  809e28:	10c00515 	stw	r3,20(r2)
  809e2c:	e0bfff17 	ldw	r2,-4(fp)
  809e30:	10800017 	ldw	r2,0(r2)
  809e34:	10800117 	ldw	r2,4(r2)
  809e38:	01400044 	movi	r5,1
  809e3c:	e13fff17 	ldw	r4,-4(fp)
  809e40:	103ee83a 	callr	r2
  809e44:	e0bfff17 	ldw	r2,-4(fp)
  809e48:	10006e15 	stw	zero,440(r2)
  809e4c:	00800084 	movi	r2,2
  809e50:	00007206 	br	80a01c <read_markers+0x790>
  809e54:	e13fff17 	ldw	r4,-4(fp)
  809e58:	08062e00 	call	8062e0 <get_dac>
  809e5c:	10005d1e 	bne	r2,zero,809fd4 <read_markers+0x748>
  809e60:	0005883a 	mov	r2,zero
  809e64:	00006d06 	br	80a01c <read_markers+0x790>
  809e68:	e13fff17 	ldw	r4,-4(fp)
  809e6c:	080668c0 	call	80668c <get_dht>
  809e70:	10005a1e 	bne	r2,zero,809fdc <read_markers+0x750>
  809e74:	0005883a 	mov	r2,zero
  809e78:	00006806 	br	80a01c <read_markers+0x790>
  809e7c:	e13fff17 	ldw	r4,-4(fp)
  809e80:	0806cf00 	call	806cf0 <get_dqt>
  809e84:	1000571e 	bne	r2,zero,809fe4 <read_markers+0x758>
  809e88:	0005883a 	mov	r2,zero
  809e8c:	00006306 	br	80a01c <read_markers+0x790>
  809e90:	e13fff17 	ldw	r4,-4(fp)
  809e94:	08075440 	call	807544 <get_dri>
  809e98:	1000541e 	bne	r2,zero,809fec <read_markers+0x760>
  809e9c:	0005883a 	mov	r2,zero
  809ea0:	00005e06 	br	80a01c <read_markers+0x790>
  809ea4:	e13fff17 	ldw	r4,-4(fp)
  809ea8:	08077b80 	call	8077b8 <get_lse>
  809eac:	1000511e 	bne	r2,zero,809ff4 <read_markers+0x768>
  809eb0:	0005883a 	mov	r2,zero
  809eb4:	00005906 	br	80a01c <read_markers+0x790>
  809eb8:	e0bfff17 	ldw	r2,-4(fp)
  809ebc:	10c07417 	ldw	r3,464(r2)
  809ec0:	e0bfff17 	ldw	r2,-4(fp)
  809ec4:	10806e17 	ldw	r2,440(r2)
  809ec8:	10bfc804 	addi	r2,r2,-224
  809ecc:	10800204 	addi	r2,r2,8
  809ed0:	1085883a 	add	r2,r2,r2
  809ed4:	1085883a 	add	r2,r2,r2
  809ed8:	1885883a 	add	r2,r3,r2
  809edc:	10800017 	ldw	r2,0(r2)
  809ee0:	e13fff17 	ldw	r4,-4(fp)
  809ee4:	103ee83a 	callr	r2
  809ee8:	1000441e 	bne	r2,zero,809ffc <read_markers+0x770>
  809eec:	0005883a 	mov	r2,zero
  809ef0:	00004a06 	br	80a01c <read_markers+0x790>
  809ef4:	e0bfff17 	ldw	r2,-4(fp)
  809ef8:	10807417 	ldw	r2,464(r2)
  809efc:	10800717 	ldw	r2,28(r2)
  809f00:	e13fff17 	ldw	r4,-4(fp)
  809f04:	103ee83a 	callr	r2
  809f08:	10003e1e 	bne	r2,zero,80a004 <read_markers+0x778>
  809f0c:	0005883a 	mov	r2,zero
  809f10:	00004206 	br	80a01c <read_markers+0x790>
  809f14:	e0bfff17 	ldw	r2,-4(fp)
  809f18:	10800017 	ldw	r2,0(r2)
  809f1c:	00c01784 	movi	r3,94
  809f20:	10c00515 	stw	r3,20(r2)
  809f24:	e0bfff17 	ldw	r2,-4(fp)
  809f28:	10800017 	ldw	r2,0(r2)
  809f2c:	e0ffff17 	ldw	r3,-4(fp)
  809f30:	18c06e17 	ldw	r3,440(r3)
  809f34:	10c00615 	stw	r3,24(r2)
  809f38:	e0bfff17 	ldw	r2,-4(fp)
  809f3c:	10800017 	ldw	r2,0(r2)
  809f40:	10800117 	ldw	r2,4(r2)
  809f44:	01400044 	movi	r5,1
  809f48:	e13fff17 	ldw	r4,-4(fp)
  809f4c:	103ee83a 	callr	r2
  809f50:	00002f06 	br	80a010 <read_markers+0x784>
  809f54:	e13fff17 	ldw	r4,-4(fp)
  809f58:	08092c40 	call	8092c4 <skip_variable>
  809f5c:	10002b1e 	bne	r2,zero,80a00c <read_markers+0x780>
  809f60:	0005883a 	mov	r2,zero
  809f64:	00002d06 	br	80a01c <read_markers+0x790>
  809f68:	e0bfff17 	ldw	r2,-4(fp)
  809f6c:	10800017 	ldw	r2,0(r2)
  809f70:	00c01184 	movi	r3,70
  809f74:	10c00515 	stw	r3,20(r2)
  809f78:	e0bfff17 	ldw	r2,-4(fp)
  809f7c:	10800017 	ldw	r2,0(r2)
  809f80:	e0ffff17 	ldw	r3,-4(fp)
  809f84:	18c06e17 	ldw	r3,440(r3)
  809f88:	10c00615 	stw	r3,24(r2)
  809f8c:	e0bfff17 	ldw	r2,-4(fp)
  809f90:	10800017 	ldw	r2,0(r2)
  809f94:	10800017 	ldw	r2,0(r2)
  809f98:	e13fff17 	ldw	r4,-4(fp)
  809f9c:	103ee83a 	callr	r2
  809fa0:	00001b06 	br	80a010 <read_markers+0x784>
  809fa4:	0001883a 	nop
  809fa8:	00001906 	br	80a010 <read_markers+0x784>
  809fac:	0001883a 	nop
  809fb0:	00001706 	br	80a010 <read_markers+0x784>
  809fb4:	0001883a 	nop
  809fb8:	00001506 	br	80a010 <read_markers+0x784>
  809fbc:	0001883a 	nop
  809fc0:	00001306 	br	80a010 <read_markers+0x784>
  809fc4:	0001883a 	nop
  809fc8:	00001106 	br	80a010 <read_markers+0x784>
  809fcc:	0001883a 	nop
  809fd0:	00000f06 	br	80a010 <read_markers+0x784>
  809fd4:	0001883a 	nop
  809fd8:	00000d06 	br	80a010 <read_markers+0x784>
  809fdc:	0001883a 	nop
  809fe0:	00000b06 	br	80a010 <read_markers+0x784>
  809fe4:	0001883a 	nop
  809fe8:	00000906 	br	80a010 <read_markers+0x784>
  809fec:	0001883a 	nop
  809ff0:	00000706 	br	80a010 <read_markers+0x784>
  809ff4:	0001883a 	nop
  809ff8:	00000506 	br	80a010 <read_markers+0x784>
  809ffc:	0001883a 	nop
  80a000:	00000306 	br	80a010 <read_markers+0x784>
  80a004:	0001883a 	nop
  80a008:	00000106 	br	80a010 <read_markers+0x784>
  80a00c:	0001883a 	nop
  80a010:	e0bfff17 	ldw	r2,-4(fp)
  80a014:	10006e15 	stw	zero,440(r2)
  80a018:	003e2106 	br	8098a0 <__alt_mem_epcs_flash_controller_0+0xff8008a0>
  80a01c:	e037883a 	mov	sp,fp
  80a020:	dfc00117 	ldw	ra,4(sp)
  80a024:	df000017 	ldw	fp,0(sp)
  80a028:	dec00204 	addi	sp,sp,8
  80a02c:	f800283a 	ret

0080a030 <read_restart_marker>:
  80a030:	defffd04 	addi	sp,sp,-12
  80a034:	dfc00215 	stw	ra,8(sp)
  80a038:	df000115 	stw	fp,4(sp)
  80a03c:	df000104 	addi	fp,sp,4
  80a040:	e13fff15 	stw	r4,-4(fp)
  80a044:	e0bfff17 	ldw	r2,-4(fp)
  80a048:	10806e17 	ldw	r2,440(r2)
  80a04c:	1000051e 	bne	r2,zero,80a064 <read_restart_marker+0x34>
  80a050:	e13fff17 	ldw	r4,-4(fp)
  80a054:	08094700 	call	809470 <next_marker>
  80a058:	1000021e 	bne	r2,zero,80a064 <read_restart_marker+0x34>
  80a05c:	0005883a 	mov	r2,zero
  80a060:	00002f06 	br	80a120 <read_restart_marker+0xf0>
  80a064:	e0bfff17 	ldw	r2,-4(fp)
  80a068:	10c06e17 	ldw	r3,440(r2)
  80a06c:	e0bfff17 	ldw	r2,-4(fp)
  80a070:	10807417 	ldw	r2,464(r2)
  80a074:	10800517 	ldw	r2,20(r2)
  80a078:	10803404 	addi	r2,r2,208
  80a07c:	1880131e 	bne	r3,r2,80a0cc <read_restart_marker+0x9c>
  80a080:	e0bfff17 	ldw	r2,-4(fp)
  80a084:	10800017 	ldw	r2,0(r2)
  80a088:	00c01904 	movi	r3,100
  80a08c:	10c00515 	stw	r3,20(r2)
  80a090:	e0bfff17 	ldw	r2,-4(fp)
  80a094:	10800017 	ldw	r2,0(r2)
  80a098:	e0ffff17 	ldw	r3,-4(fp)
  80a09c:	18c07417 	ldw	r3,464(r3)
  80a0a0:	18c00517 	ldw	r3,20(r3)
  80a0a4:	10c00615 	stw	r3,24(r2)
  80a0a8:	e0bfff17 	ldw	r2,-4(fp)
  80a0ac:	10800017 	ldw	r2,0(r2)
  80a0b0:	10800117 	ldw	r2,4(r2)
  80a0b4:	014000c4 	movi	r5,3
  80a0b8:	e13fff17 	ldw	r4,-4(fp)
  80a0bc:	103ee83a 	callr	r2
  80a0c0:	e0bfff17 	ldw	r2,-4(fp)
  80a0c4:	10006e15 	stw	zero,440(r2)
  80a0c8:	00000c06 	br	80a0fc <read_restart_marker+0xcc>
  80a0cc:	e0bfff17 	ldw	r2,-4(fp)
  80a0d0:	10800617 	ldw	r2,24(r2)
  80a0d4:	10800517 	ldw	r2,20(r2)
  80a0d8:	e0ffff17 	ldw	r3,-4(fp)
  80a0dc:	18c07417 	ldw	r3,464(r3)
  80a0e0:	18c00517 	ldw	r3,20(r3)
  80a0e4:	180b883a 	mov	r5,r3
  80a0e8:	e13fff17 	ldw	r4,-4(fp)
  80a0ec:	103ee83a 	callr	r2
  80a0f0:	1000021e 	bne	r2,zero,80a0fc <read_restart_marker+0xcc>
  80a0f4:	0005883a 	mov	r2,zero
  80a0f8:	00000906 	br	80a120 <read_restart_marker+0xf0>
  80a0fc:	e0bfff17 	ldw	r2,-4(fp)
  80a100:	10807417 	ldw	r2,464(r2)
  80a104:	e0ffff17 	ldw	r3,-4(fp)
  80a108:	18c07417 	ldw	r3,464(r3)
  80a10c:	18c00517 	ldw	r3,20(r3)
  80a110:	18c00044 	addi	r3,r3,1
  80a114:	18c001cc 	andi	r3,r3,7
  80a118:	10c00515 	stw	r3,20(r2)
  80a11c:	00800044 	movi	r2,1
  80a120:	e037883a 	mov	sp,fp
  80a124:	dfc00117 	ldw	ra,4(sp)
  80a128:	df000017 	ldw	fp,0(sp)
  80a12c:	dec00204 	addi	sp,sp,8
  80a130:	f800283a 	ret

0080a134 <jpeg_resync_to_restart>:
  80a134:	defffa04 	addi	sp,sp,-24
  80a138:	dfc00515 	stw	ra,20(sp)
  80a13c:	df000415 	stw	fp,16(sp)
  80a140:	df000404 	addi	fp,sp,16
  80a144:	e13ffe15 	stw	r4,-8(fp)
  80a148:	e17fff15 	stw	r5,-4(fp)
  80a14c:	e0bffe17 	ldw	r2,-8(fp)
  80a150:	10806e17 	ldw	r2,440(r2)
  80a154:	e0bffc15 	stw	r2,-16(fp)
  80a158:	00800044 	movi	r2,1
  80a15c:	e0bffd15 	stw	r2,-12(fp)
  80a160:	e0bffe17 	ldw	r2,-8(fp)
  80a164:	10800017 	ldw	r2,0(r2)
  80a168:	00c01f04 	movi	r3,124
  80a16c:	10c00515 	stw	r3,20(r2)
  80a170:	e0bffe17 	ldw	r2,-8(fp)
  80a174:	10800017 	ldw	r2,0(r2)
  80a178:	e0fffc17 	ldw	r3,-16(fp)
  80a17c:	10c00615 	stw	r3,24(r2)
  80a180:	e0bffe17 	ldw	r2,-8(fp)
  80a184:	10800017 	ldw	r2,0(r2)
  80a188:	e0ffff17 	ldw	r3,-4(fp)
  80a18c:	10c00715 	stw	r3,28(r2)
  80a190:	e0bffe17 	ldw	r2,-8(fp)
  80a194:	10800017 	ldw	r2,0(r2)
  80a198:	10800117 	ldw	r2,4(r2)
  80a19c:	017fffc4 	movi	r5,-1
  80a1a0:	e13ffe17 	ldw	r4,-8(fp)
  80a1a4:	103ee83a 	callr	r2
  80a1a8:	e0bffc17 	ldw	r2,-16(fp)
  80a1ac:	10803008 	cmpgei	r2,r2,192
  80a1b0:	1000031e 	bne	r2,zero,80a1c0 <jpeg_resync_to_restart+0x8c>
  80a1b4:	00800084 	movi	r2,2
  80a1b8:	e0bffd15 	stw	r2,-12(fp)
  80a1bc:	00002906 	br	80a264 <jpeg_resync_to_restart+0x130>
  80a1c0:	e0bffc17 	ldw	r2,-16(fp)
  80a1c4:	10803410 	cmplti	r2,r2,208
  80a1c8:	1000031e 	bne	r2,zero,80a1d8 <jpeg_resync_to_restart+0xa4>
  80a1cc:	e0bffc17 	ldw	r2,-16(fp)
  80a1d0:	10803610 	cmplti	r2,r2,216
  80a1d4:	1000031e 	bne	r2,zero,80a1e4 <jpeg_resync_to_restart+0xb0>
  80a1d8:	008000c4 	movi	r2,3
  80a1dc:	e0bffd15 	stw	r2,-12(fp)
  80a1e0:	00002006 	br	80a264 <jpeg_resync_to_restart+0x130>
  80a1e4:	e0bfff17 	ldw	r2,-4(fp)
  80a1e8:	10800044 	addi	r2,r2,1
  80a1ec:	108001cc 	andi	r2,r2,7
  80a1f0:	10c03404 	addi	r3,r2,208
  80a1f4:	e0bffc17 	ldw	r2,-16(fp)
  80a1f8:	18800626 	beq	r3,r2,80a214 <jpeg_resync_to_restart+0xe0>
  80a1fc:	e0bfff17 	ldw	r2,-4(fp)
  80a200:	10800084 	addi	r2,r2,2
  80a204:	108001cc 	andi	r2,r2,7
  80a208:	10c03404 	addi	r3,r2,208
  80a20c:	e0bffc17 	ldw	r2,-16(fp)
  80a210:	1880031e 	bne	r3,r2,80a220 <jpeg_resync_to_restart+0xec>
  80a214:	008000c4 	movi	r2,3
  80a218:	e0bffd15 	stw	r2,-12(fp)
  80a21c:	00001106 	br	80a264 <jpeg_resync_to_restart+0x130>
  80a220:	e0bfff17 	ldw	r2,-4(fp)
  80a224:	10bfffc4 	addi	r2,r2,-1
  80a228:	108001cc 	andi	r2,r2,7
  80a22c:	10c03404 	addi	r3,r2,208
  80a230:	e0bffc17 	ldw	r2,-16(fp)
  80a234:	18800626 	beq	r3,r2,80a250 <jpeg_resync_to_restart+0x11c>
  80a238:	e0bfff17 	ldw	r2,-4(fp)
  80a23c:	10bfff84 	addi	r2,r2,-2
  80a240:	108001cc 	andi	r2,r2,7
  80a244:	10c03404 	addi	r3,r2,208
  80a248:	e0bffc17 	ldw	r2,-16(fp)
  80a24c:	1880031e 	bne	r3,r2,80a25c <jpeg_resync_to_restart+0x128>
  80a250:	00800084 	movi	r2,2
  80a254:	e0bffd15 	stw	r2,-12(fp)
  80a258:	00000206 	br	80a264 <jpeg_resync_to_restart+0x130>
  80a25c:	00800044 	movi	r2,1
  80a260:	e0bffd15 	stw	r2,-12(fp)
  80a264:	e0bffe17 	ldw	r2,-8(fp)
  80a268:	10800017 	ldw	r2,0(r2)
  80a26c:	00c018c4 	movi	r3,99
  80a270:	10c00515 	stw	r3,20(r2)
  80a274:	e0bffe17 	ldw	r2,-8(fp)
  80a278:	10800017 	ldw	r2,0(r2)
  80a27c:	e0fffc17 	ldw	r3,-16(fp)
  80a280:	10c00615 	stw	r3,24(r2)
  80a284:	e0bffe17 	ldw	r2,-8(fp)
  80a288:	10800017 	ldw	r2,0(r2)
  80a28c:	e0fffd17 	ldw	r3,-12(fp)
  80a290:	10c00715 	stw	r3,28(r2)
  80a294:	e0bffe17 	ldw	r2,-8(fp)
  80a298:	10800017 	ldw	r2,0(r2)
  80a29c:	10800117 	ldw	r2,4(r2)
  80a2a0:	01400104 	movi	r5,4
  80a2a4:	e13ffe17 	ldw	r4,-8(fp)
  80a2a8:	103ee83a 	callr	r2
  80a2ac:	e0bffd17 	ldw	r2,-12(fp)
  80a2b0:	10c000a0 	cmpeqi	r3,r2,2
  80a2b4:	1800081e 	bne	r3,zero,80a2d8 <jpeg_resync_to_restart+0x1a4>
  80a2b8:	10c000e0 	cmpeqi	r3,r2,3
  80a2bc:	18000f1e 	bne	r3,zero,80a2fc <jpeg_resync_to_restart+0x1c8>
  80a2c0:	10800060 	cmpeqi	r2,r2,1
  80a2c4:	10000f26 	beq	r2,zero,80a304 <jpeg_resync_to_restart+0x1d0>
  80a2c8:	e0bffe17 	ldw	r2,-8(fp)
  80a2cc:	10006e15 	stw	zero,440(r2)
  80a2d0:	00800044 	movi	r2,1
  80a2d4:	00000c06 	br	80a308 <jpeg_resync_to_restart+0x1d4>
  80a2d8:	e13ffe17 	ldw	r4,-8(fp)
  80a2dc:	08094700 	call	809470 <next_marker>
  80a2e0:	1000021e 	bne	r2,zero,80a2ec <jpeg_resync_to_restart+0x1b8>
  80a2e4:	0005883a 	mov	r2,zero
  80a2e8:	00000706 	br	80a308 <jpeg_resync_to_restart+0x1d4>
  80a2ec:	e0bffe17 	ldw	r2,-8(fp)
  80a2f0:	10806e17 	ldw	r2,440(r2)
  80a2f4:	e0bffc15 	stw	r2,-16(fp)
  80a2f8:	00000206 	br	80a304 <jpeg_resync_to_restart+0x1d0>
  80a2fc:	00800044 	movi	r2,1
  80a300:	00000106 	br	80a308 <jpeg_resync_to_restart+0x1d4>
  80a304:	003fa806 	br	80a1a8 <__alt_mem_epcs_flash_controller_0+0xff8011a8>
  80a308:	e037883a 	mov	sp,fp
  80a30c:	dfc00117 	ldw	ra,4(sp)
  80a310:	df000017 	ldw	fp,0(sp)
  80a314:	dec00204 	addi	sp,sp,8
  80a318:	f800283a 	ret

0080a31c <reset_marker_reader>:
  80a31c:	defffd04 	addi	sp,sp,-12
  80a320:	df000215 	stw	fp,8(sp)
  80a324:	df000204 	addi	fp,sp,8
  80a328:	e13fff15 	stw	r4,-4(fp)
  80a32c:	e0bfff17 	ldw	r2,-4(fp)
  80a330:	10807417 	ldw	r2,464(r2)
  80a334:	e0bffe15 	stw	r2,-8(fp)
  80a338:	e0bfff17 	ldw	r2,-4(fp)
  80a33c:	10003615 	stw	zero,216(r2)
  80a340:	e0bfff17 	ldw	r2,-4(fp)
  80a344:	10002415 	stw	zero,144(r2)
  80a348:	e0bfff17 	ldw	r2,-4(fp)
  80a34c:	10006e15 	stw	zero,440(r2)
  80a350:	e0bffe17 	ldw	r2,-8(fp)
  80a354:	10000315 	stw	zero,12(r2)
  80a358:	e0bffe17 	ldw	r2,-8(fp)
  80a35c:	10000415 	stw	zero,16(r2)
  80a360:	e0bffe17 	ldw	r2,-8(fp)
  80a364:	10000615 	stw	zero,24(r2)
  80a368:	e0bffe17 	ldw	r2,-8(fp)
  80a36c:	10002915 	stw	zero,164(r2)
  80a370:	0001883a 	nop
  80a374:	e037883a 	mov	sp,fp
  80a378:	df000017 	ldw	fp,0(sp)
  80a37c:	dec00104 	addi	sp,sp,4
  80a380:	f800283a 	ret

0080a384 <jinit_marker_reader>:
  80a384:	defffb04 	addi	sp,sp,-20
  80a388:	dfc00415 	stw	ra,16(sp)
  80a38c:	df000315 	stw	fp,12(sp)
  80a390:	df000304 	addi	fp,sp,12
  80a394:	e13fff15 	stw	r4,-4(fp)
  80a398:	e0bfff17 	ldw	r2,-4(fp)
  80a39c:	10800117 	ldw	r2,4(r2)
  80a3a0:	10800017 	ldw	r2,0(r2)
  80a3a4:	01802b04 	movi	r6,172
  80a3a8:	000b883a 	mov	r5,zero
  80a3ac:	e13fff17 	ldw	r4,-4(fp)
  80a3b0:	103ee83a 	callr	r2
  80a3b4:	e0bffe15 	stw	r2,-8(fp)
  80a3b8:	e0fffe17 	ldw	r3,-8(fp)
  80a3bc:	e0bfff17 	ldw	r2,-4(fp)
  80a3c0:	10c07415 	stw	r3,464(r2)
  80a3c4:	e0fffe17 	ldw	r3,-8(fp)
  80a3c8:	00802074 	movhi	r2,129
  80a3cc:	10a8c704 	addi	r2,r2,-23780
  80a3d0:	18800015 	stw	r2,0(r3)
  80a3d4:	e0fffe17 	ldw	r3,-8(fp)
  80a3d8:	00802074 	movhi	r2,129
  80a3dc:	10a62304 	addi	r2,r2,-26484
  80a3e0:	18800115 	stw	r2,4(r3)
  80a3e4:	e0fffe17 	ldw	r3,-8(fp)
  80a3e8:	00802074 	movhi	r2,129
  80a3ec:	10a80c04 	addi	r2,r2,-24528
  80a3f0:	18800215 	stw	r2,8(r3)
  80a3f4:	e0fffe17 	ldw	r3,-8(fp)
  80a3f8:	00802074 	movhi	r2,129
  80a3fc:	10a4b104 	addi	r2,r2,-27964
  80a400:	18800715 	stw	r2,28(r3)
  80a404:	e0bffe17 	ldw	r2,-8(fp)
  80a408:	10001815 	stw	zero,96(r2)
  80a40c:	e03ffd15 	stw	zero,-12(fp)
  80a410:	00001306 	br	80a460 <jinit_marker_reader+0xdc>
  80a414:	e0fffe17 	ldw	r3,-8(fp)
  80a418:	e0bffd17 	ldw	r2,-12(fp)
  80a41c:	10800204 	addi	r2,r2,8
  80a420:	1085883a 	add	r2,r2,r2
  80a424:	1085883a 	add	r2,r2,r2
  80a428:	1887883a 	add	r3,r3,r2
  80a42c:	00802074 	movhi	r2,129
  80a430:	10a4b104 	addi	r2,r2,-27964
  80a434:	18800015 	stw	r2,0(r3)
  80a438:	e0fffe17 	ldw	r3,-8(fp)
  80a43c:	e0bffd17 	ldw	r2,-12(fp)
  80a440:	10800644 	addi	r2,r2,25
  80a444:	1085883a 	add	r2,r2,r2
  80a448:	1085883a 	add	r2,r2,r2
  80a44c:	1885883a 	add	r2,r3,r2
  80a450:	10000015 	stw	zero,0(r2)
  80a454:	e0bffd17 	ldw	r2,-12(fp)
  80a458:	10800044 	addi	r2,r2,1
  80a45c:	e0bffd15 	stw	r2,-12(fp)
  80a460:	e0bffd17 	ldw	r2,-12(fp)
  80a464:	10800410 	cmplti	r2,r2,16
  80a468:	103fea1e 	bne	r2,zero,80a414 <__alt_mem_epcs_flash_controller_0+0xff801414>
  80a46c:	e0fffe17 	ldw	r3,-8(fp)
  80a470:	00802074 	movhi	r2,129
  80a474:	10a2d904 	addi	r2,r2,-29852
  80a478:	18800815 	stw	r2,32(r3)
  80a47c:	e0fffe17 	ldw	r3,-8(fp)
  80a480:	00802074 	movhi	r2,129
  80a484:	10a2d904 	addi	r2,r2,-29852
  80a488:	18801615 	stw	r2,88(r3)
  80a48c:	e13fff17 	ldw	r4,-4(fp)
  80a490:	080a31c0 	call	80a31c <reset_marker_reader>
  80a494:	0001883a 	nop
  80a498:	e037883a 	mov	sp,fp
  80a49c:	dfc00117 	ldw	ra,4(sp)
  80a4a0:	df000017 	ldw	fp,0(sp)
  80a4a4:	dec00204 	addi	sp,sp,8
  80a4a8:	f800283a 	ret

0080a4ac <jpeg_save_markers>:
  80a4ac:	defff804 	addi	sp,sp,-32
  80a4b0:	dfc00715 	stw	ra,28(sp)
  80a4b4:	df000615 	stw	fp,24(sp)
  80a4b8:	df000604 	addi	fp,sp,24
  80a4bc:	e13ffd15 	stw	r4,-12(fp)
  80a4c0:	e17ffe15 	stw	r5,-8(fp)
  80a4c4:	e1bfff15 	stw	r6,-4(fp)
  80a4c8:	e0bffd17 	ldw	r2,-12(fp)
  80a4cc:	10807417 	ldw	r2,464(r2)
  80a4d0:	e0bffb15 	stw	r2,-20(fp)
  80a4d4:	e0bffd17 	ldw	r2,-12(fp)
  80a4d8:	10800117 	ldw	r2,4(r2)
  80a4dc:	10800c17 	ldw	r2,48(r2)
  80a4e0:	10bffb04 	addi	r2,r2,-20
  80a4e4:	e0bffc15 	stw	r2,-16(fp)
  80a4e8:	e0bfff17 	ldw	r2,-4(fp)
  80a4ec:	e0fffc17 	ldw	r3,-16(fp)
  80a4f0:	1880020e 	bge	r3,r2,80a4fc <jpeg_save_markers+0x50>
  80a4f4:	e0bffc17 	ldw	r2,-16(fp)
  80a4f8:	e0bfff15 	stw	r2,-4(fp)
  80a4fc:	e0bfff17 	ldw	r2,-4(fp)
  80a500:	10001526 	beq	r2,zero,80a558 <jpeg_save_markers+0xac>
  80a504:	00802074 	movhi	r2,129
  80a508:	10a38704 	addi	r2,r2,-29156
  80a50c:	e0bffa15 	stw	r2,-24(fp)
  80a510:	e0bffe17 	ldw	r2,-8(fp)
  80a514:	10803818 	cmpnei	r2,r2,224
  80a518:	1000061e 	bne	r2,zero,80a534 <jpeg_save_markers+0x88>
  80a51c:	e0bfff17 	ldw	r2,-4(fp)
  80a520:	108003a8 	cmpgeui	r2,r2,14
  80a524:	1000031e 	bne	r2,zero,80a534 <jpeg_save_markers+0x88>
  80a528:	00800384 	movi	r2,14
  80a52c:	e0bfff15 	stw	r2,-4(fp)
  80a530:	00001506 	br	80a588 <jpeg_save_markers+0xdc>
  80a534:	e0bffe17 	ldw	r2,-8(fp)
  80a538:	10803b98 	cmpnei	r2,r2,238
  80a53c:	1000121e 	bne	r2,zero,80a588 <jpeg_save_markers+0xdc>
  80a540:	e0bfff17 	ldw	r2,-4(fp)
  80a544:	10800328 	cmpgeui	r2,r2,12
  80a548:	10000f1e 	bne	r2,zero,80a588 <jpeg_save_markers+0xdc>
  80a54c:	00800304 	movi	r2,12
  80a550:	e0bfff15 	stw	r2,-4(fp)
  80a554:	00000c06 	br	80a588 <jpeg_save_markers+0xdc>
  80a558:	00802074 	movhi	r2,129
  80a55c:	10a4b104 	addi	r2,r2,-27964
  80a560:	e0bffa15 	stw	r2,-24(fp)
  80a564:	e0bffe17 	ldw	r2,-8(fp)
  80a568:	10803820 	cmpeqi	r2,r2,224
  80a56c:	1000031e 	bne	r2,zero,80a57c <jpeg_save_markers+0xd0>
  80a570:	e0bffe17 	ldw	r2,-8(fp)
  80a574:	10803b98 	cmpnei	r2,r2,238
  80a578:	1000031e 	bne	r2,zero,80a588 <jpeg_save_markers+0xdc>
  80a57c:	00802074 	movhi	r2,129
  80a580:	10a2d904 	addi	r2,r2,-29852
  80a584:	e0bffa15 	stw	r2,-24(fp)
  80a588:	e0bffe17 	ldw	r2,-8(fp)
  80a58c:	10803f98 	cmpnei	r2,r2,254
  80a590:	1000071e 	bne	r2,zero,80a5b0 <jpeg_save_markers+0x104>
  80a594:	e0bffb17 	ldw	r2,-20(fp)
  80a598:	e0fffa17 	ldw	r3,-24(fp)
  80a59c:	10c00715 	stw	r3,28(r2)
  80a5a0:	e0bffb17 	ldw	r2,-20(fp)
  80a5a4:	e0ffff17 	ldw	r3,-4(fp)
  80a5a8:	10c01815 	stw	r3,96(r2)
  80a5ac:	00002606 	br	80a648 <jpeg_save_markers+0x19c>
  80a5b0:	e0bffe17 	ldw	r2,-8(fp)
  80a5b4:	10803810 	cmplti	r2,r2,224
  80a5b8:	1000161e 	bne	r2,zero,80a614 <jpeg_save_markers+0x168>
  80a5bc:	e0bffe17 	ldw	r2,-8(fp)
  80a5c0:	10803c08 	cmpgei	r2,r2,240
  80a5c4:	1000131e 	bne	r2,zero,80a614 <jpeg_save_markers+0x168>
  80a5c8:	e0bffe17 	ldw	r2,-8(fp)
  80a5cc:	10bfc804 	addi	r2,r2,-224
  80a5d0:	e0fffb17 	ldw	r3,-20(fp)
  80a5d4:	10800204 	addi	r2,r2,8
  80a5d8:	1085883a 	add	r2,r2,r2
  80a5dc:	1085883a 	add	r2,r2,r2
  80a5e0:	1885883a 	add	r2,r3,r2
  80a5e4:	e0fffa17 	ldw	r3,-24(fp)
  80a5e8:	10c00015 	stw	r3,0(r2)
  80a5ec:	e0bffe17 	ldw	r2,-8(fp)
  80a5f0:	10bfc804 	addi	r2,r2,-224
  80a5f4:	e0fffb17 	ldw	r3,-20(fp)
  80a5f8:	10800644 	addi	r2,r2,25
  80a5fc:	1085883a 	add	r2,r2,r2
  80a600:	1085883a 	add	r2,r2,r2
  80a604:	1885883a 	add	r2,r3,r2
  80a608:	e0ffff17 	ldw	r3,-4(fp)
  80a60c:	10c00015 	stw	r3,0(r2)
  80a610:	00000d06 	br	80a648 <jpeg_save_markers+0x19c>
  80a614:	e0bffd17 	ldw	r2,-12(fp)
  80a618:	10800017 	ldw	r2,0(r2)
  80a61c:	00c01184 	movi	r3,70
  80a620:	10c00515 	stw	r3,20(r2)
  80a624:	e0bffd17 	ldw	r2,-12(fp)
  80a628:	10800017 	ldw	r2,0(r2)
  80a62c:	e0fffe17 	ldw	r3,-8(fp)
  80a630:	10c00615 	stw	r3,24(r2)
  80a634:	e0bffd17 	ldw	r2,-12(fp)
  80a638:	10800017 	ldw	r2,0(r2)
  80a63c:	10800017 	ldw	r2,0(r2)
  80a640:	e13ffd17 	ldw	r4,-12(fp)
  80a644:	103ee83a 	callr	r2
  80a648:	0001883a 	nop
  80a64c:	e037883a 	mov	sp,fp
  80a650:	dfc00117 	ldw	ra,4(sp)
  80a654:	df000017 	ldw	fp,0(sp)
  80a658:	dec00204 	addi	sp,sp,8
  80a65c:	f800283a 	ret

0080a660 <jpeg_set_marker_processor>:
  80a660:	defffa04 	addi	sp,sp,-24
  80a664:	dfc00515 	stw	ra,20(sp)
  80a668:	df000415 	stw	fp,16(sp)
  80a66c:	df000404 	addi	fp,sp,16
  80a670:	e13ffd15 	stw	r4,-12(fp)
  80a674:	e17ffe15 	stw	r5,-8(fp)
  80a678:	e1bfff15 	stw	r6,-4(fp)
  80a67c:	e0bffd17 	ldw	r2,-12(fp)
  80a680:	10807417 	ldw	r2,464(r2)
  80a684:	e0bffc15 	stw	r2,-16(fp)
  80a688:	e0bffe17 	ldw	r2,-8(fp)
  80a68c:	10803f98 	cmpnei	r2,r2,254
  80a690:	1000041e 	bne	r2,zero,80a6a4 <jpeg_set_marker_processor+0x44>
  80a694:	e0bffc17 	ldw	r2,-16(fp)
  80a698:	e0ffff17 	ldw	r3,-4(fp)
  80a69c:	10c00715 	stw	r3,28(r2)
  80a6a0:	00001d06 	br	80a718 <jpeg_set_marker_processor+0xb8>
  80a6a4:	e0bffe17 	ldw	r2,-8(fp)
  80a6a8:	10803810 	cmplti	r2,r2,224
  80a6ac:	10000d1e 	bne	r2,zero,80a6e4 <jpeg_set_marker_processor+0x84>
  80a6b0:	e0bffe17 	ldw	r2,-8(fp)
  80a6b4:	10803c08 	cmpgei	r2,r2,240
  80a6b8:	10000a1e 	bne	r2,zero,80a6e4 <jpeg_set_marker_processor+0x84>
  80a6bc:	e0bffe17 	ldw	r2,-8(fp)
  80a6c0:	10bfc804 	addi	r2,r2,-224
  80a6c4:	e0fffc17 	ldw	r3,-16(fp)
  80a6c8:	10800204 	addi	r2,r2,8
  80a6cc:	1085883a 	add	r2,r2,r2
  80a6d0:	1085883a 	add	r2,r2,r2
  80a6d4:	1885883a 	add	r2,r3,r2
  80a6d8:	e0ffff17 	ldw	r3,-4(fp)
  80a6dc:	10c00015 	stw	r3,0(r2)
  80a6e0:	00000d06 	br	80a718 <jpeg_set_marker_processor+0xb8>
  80a6e4:	e0bffd17 	ldw	r2,-12(fp)
  80a6e8:	10800017 	ldw	r2,0(r2)
  80a6ec:	00c01184 	movi	r3,70
  80a6f0:	10c00515 	stw	r3,20(r2)
  80a6f4:	e0bffd17 	ldw	r2,-12(fp)
  80a6f8:	10800017 	ldw	r2,0(r2)
  80a6fc:	e0fffe17 	ldw	r3,-8(fp)
  80a700:	10c00615 	stw	r3,24(r2)
  80a704:	e0bffd17 	ldw	r2,-12(fp)
  80a708:	10800017 	ldw	r2,0(r2)
  80a70c:	10800017 	ldw	r2,0(r2)
  80a710:	e13ffd17 	ldw	r4,-12(fp)
  80a714:	103ee83a 	callr	r2
  80a718:	0001883a 	nop
  80a71c:	e037883a 	mov	sp,fp
  80a720:	dfc00117 	ldw	ra,4(sp)
  80a724:	df000017 	ldw	fp,0(sp)
  80a728:	dec00204 	addi	sp,sp,8
  80a72c:	f800283a 	ret

0080a730 <use_merged_upsample>:
  80a730:	defffe04 	addi	sp,sp,-8
  80a734:	df000115 	stw	fp,4(sp)
  80a738:	df000104 	addi	fp,sp,4
  80a73c:	e13fff15 	stw	r4,-4(fp)
  80a740:	e0bfff17 	ldw	r2,-4(fp)
  80a744:	10804d17 	ldw	r2,308(r2)
  80a748:	10000226 	beq	r2,zero,80a754 <use_merged_upsample+0x24>
  80a74c:	0005883a 	mov	r2,zero
  80a750:	00006806 	br	80a8f4 <use_merged_upsample+0x1c4>
  80a754:	e0bfff17 	ldw	r2,-4(fp)
  80a758:	10800a17 	ldw	r2,40(r2)
  80a75c:	108000e0 	cmpeqi	r2,r2,3
  80a760:	1000041e 	bne	r2,zero,80a774 <use_merged_upsample+0x44>
  80a764:	e0bfff17 	ldw	r2,-4(fp)
  80a768:	10800a17 	ldw	r2,40(r2)
  80a76c:	108001d8 	cmpnei	r2,r2,7
  80a770:	10000f1e 	bne	r2,zero,80a7b0 <use_merged_upsample+0x80>
  80a774:	e0bfff17 	ldw	r2,-4(fp)
  80a778:	10800917 	ldw	r2,36(r2)
  80a77c:	108000d8 	cmpnei	r2,r2,3
  80a780:	10000b1e 	bne	r2,zero,80a7b0 <use_merged_upsample+0x80>
  80a784:	e0bfff17 	ldw	r2,-4(fp)
  80a788:	10800b17 	ldw	r2,44(r2)
  80a78c:	10800098 	cmpnei	r2,r2,2
  80a790:	1000071e 	bne	r2,zero,80a7b0 <use_merged_upsample+0x80>
  80a794:	e0bfff17 	ldw	r2,-4(fp)
  80a798:	10801e17 	ldw	r2,120(r2)
  80a79c:	108000d8 	cmpnei	r2,r2,3
  80a7a0:	1000031e 	bne	r2,zero,80a7b0 <use_merged_upsample+0x80>
  80a7a4:	e0bfff17 	ldw	r2,-4(fp)
  80a7a8:	10804c17 	ldw	r2,304(r2)
  80a7ac:	10000226 	beq	r2,zero,80a7b8 <use_merged_upsample+0x88>
  80a7b0:	0005883a 	mov	r2,zero
  80a7b4:	00004f06 	br	80a8f4 <use_merged_upsample+0x1c4>
  80a7b8:	e0bfff17 	ldw	r2,-4(fp)
  80a7bc:	10803617 	ldw	r2,216(r2)
  80a7c0:	10800217 	ldw	r2,8(r2)
  80a7c4:	10800098 	cmpnei	r2,r2,2
  80a7c8:	10001d1e 	bne	r2,zero,80a840 <use_merged_upsample+0x110>
  80a7cc:	e0bfff17 	ldw	r2,-4(fp)
  80a7d0:	10803617 	ldw	r2,216(r2)
  80a7d4:	10801604 	addi	r2,r2,88
  80a7d8:	10800217 	ldw	r2,8(r2)
  80a7dc:	10800058 	cmpnei	r2,r2,1
  80a7e0:	1000171e 	bne	r2,zero,80a840 <use_merged_upsample+0x110>
  80a7e4:	e0bfff17 	ldw	r2,-4(fp)
  80a7e8:	10803617 	ldw	r2,216(r2)
  80a7ec:	10802c04 	addi	r2,r2,176
  80a7f0:	10800217 	ldw	r2,8(r2)
  80a7f4:	10800058 	cmpnei	r2,r2,1
  80a7f8:	1000111e 	bne	r2,zero,80a840 <use_merged_upsample+0x110>
  80a7fc:	e0bfff17 	ldw	r2,-4(fp)
  80a800:	10803617 	ldw	r2,216(r2)
  80a804:	10800317 	ldw	r2,12(r2)
  80a808:	108000c8 	cmpgei	r2,r2,3
  80a80c:	10000c1e 	bne	r2,zero,80a840 <use_merged_upsample+0x110>
  80a810:	e0bfff17 	ldw	r2,-4(fp)
  80a814:	10803617 	ldw	r2,216(r2)
  80a818:	10801604 	addi	r2,r2,88
  80a81c:	10800317 	ldw	r2,12(r2)
  80a820:	10800058 	cmpnei	r2,r2,1
  80a824:	1000061e 	bne	r2,zero,80a840 <use_merged_upsample+0x110>
  80a828:	e0bfff17 	ldw	r2,-4(fp)
  80a82c:	10803617 	ldw	r2,216(r2)
  80a830:	10802c04 	addi	r2,r2,176
  80a834:	10800317 	ldw	r2,12(r2)
  80a838:	10800060 	cmpeqi	r2,r2,1
  80a83c:	1000021e 	bne	r2,zero,80a848 <use_merged_upsample+0x118>
  80a840:	0005883a 	mov	r2,zero
  80a844:	00002b06 	br	80a8f4 <use_merged_upsample+0x1c4>
  80a848:	e0bfff17 	ldw	r2,-4(fp)
  80a84c:	10803617 	ldw	r2,216(r2)
  80a850:	10c00917 	ldw	r3,36(r2)
  80a854:	e0bfff17 	ldw	r2,-4(fp)
  80a858:	10805117 	ldw	r2,324(r2)
  80a85c:	1880221e 	bne	r3,r2,80a8e8 <use_merged_upsample+0x1b8>
  80a860:	e0bfff17 	ldw	r2,-4(fp)
  80a864:	10803617 	ldw	r2,216(r2)
  80a868:	10801604 	addi	r2,r2,88
  80a86c:	10c00917 	ldw	r3,36(r2)
  80a870:	e0bfff17 	ldw	r2,-4(fp)
  80a874:	10805117 	ldw	r2,324(r2)
  80a878:	18801b1e 	bne	r3,r2,80a8e8 <use_merged_upsample+0x1b8>
  80a87c:	e0bfff17 	ldw	r2,-4(fp)
  80a880:	10803617 	ldw	r2,216(r2)
  80a884:	10802c04 	addi	r2,r2,176
  80a888:	10c00917 	ldw	r3,36(r2)
  80a88c:	e0bfff17 	ldw	r2,-4(fp)
  80a890:	10805117 	ldw	r2,324(r2)
  80a894:	1880141e 	bne	r3,r2,80a8e8 <use_merged_upsample+0x1b8>
  80a898:	e0bfff17 	ldw	r2,-4(fp)
  80a89c:	10803617 	ldw	r2,216(r2)
  80a8a0:	10c00a17 	ldw	r3,40(r2)
  80a8a4:	e0bfff17 	ldw	r2,-4(fp)
  80a8a8:	10805217 	ldw	r2,328(r2)
  80a8ac:	18800e1e 	bne	r3,r2,80a8e8 <use_merged_upsample+0x1b8>
  80a8b0:	e0bfff17 	ldw	r2,-4(fp)
  80a8b4:	10803617 	ldw	r2,216(r2)
  80a8b8:	10801604 	addi	r2,r2,88
  80a8bc:	10c00a17 	ldw	r3,40(r2)
  80a8c0:	e0bfff17 	ldw	r2,-4(fp)
  80a8c4:	10805217 	ldw	r2,328(r2)
  80a8c8:	1880071e 	bne	r3,r2,80a8e8 <use_merged_upsample+0x1b8>
  80a8cc:	e0bfff17 	ldw	r2,-4(fp)
  80a8d0:	10803617 	ldw	r2,216(r2)
  80a8d4:	10802c04 	addi	r2,r2,176
  80a8d8:	10c00a17 	ldw	r3,40(r2)
  80a8dc:	e0bfff17 	ldw	r2,-4(fp)
  80a8e0:	10805217 	ldw	r2,328(r2)
  80a8e4:	18800226 	beq	r3,r2,80a8f0 <use_merged_upsample+0x1c0>
  80a8e8:	0005883a 	mov	r2,zero
  80a8ec:	00000106 	br	80a8f4 <use_merged_upsample+0x1c4>
  80a8f0:	00800044 	movi	r2,1
  80a8f4:	e037883a 	mov	sp,fp
  80a8f8:	df000017 	ldw	fp,0(sp)
  80a8fc:	dec00104 	addi	sp,sp,4
  80a900:	f800283a 	ret

0080a904 <jpeg_calc_output_dimensions>:
  80a904:	defff904 	addi	sp,sp,-28
  80a908:	dfc00615 	stw	ra,24(sp)
  80a90c:	df000515 	stw	fp,20(sp)
  80a910:	dc000415 	stw	r16,16(sp)
  80a914:	df000504 	addi	fp,sp,20
  80a918:	e13ffe15 	stw	r4,-8(fp)
  80a91c:	e0bffe17 	ldw	r2,-8(fp)
  80a920:	10800517 	ldw	r2,20(r2)
  80a924:	108032a0 	cmpeqi	r2,r2,202
  80a928:	10000e1e 	bne	r2,zero,80a964 <jpeg_calc_output_dimensions+0x60>
  80a92c:	e0bffe17 	ldw	r2,-8(fp)
  80a930:	10800017 	ldw	r2,0(r2)
  80a934:	00c00544 	movi	r3,21
  80a938:	10c00515 	stw	r3,20(r2)
  80a93c:	e0bffe17 	ldw	r2,-8(fp)
  80a940:	10800017 	ldw	r2,0(r2)
  80a944:	e0fffe17 	ldw	r3,-8(fp)
  80a948:	18c00517 	ldw	r3,20(r3)
  80a94c:	10c00615 	stw	r3,24(r2)
  80a950:	e0bffe17 	ldw	r2,-8(fp)
  80a954:	10800017 	ldw	r2,0(r2)
  80a958:	10800017 	ldw	r2,0(r2)
  80a95c:	e13ffe17 	ldw	r4,-8(fp)
  80a960:	103ee83a 	callr	r2
  80a964:	e13ffe17 	ldw	r4,-8(fp)
  80a968:	08033f40 	call	8033f4 <jpeg_core_output_dimensions>
  80a96c:	e03ffb15 	stw	zero,-20(fp)
  80a970:	e0bffe17 	ldw	r2,-8(fp)
  80a974:	10803617 	ldw	r2,216(r2)
  80a978:	e0bffc15 	stw	r2,-16(fp)
  80a97c:	00006d06 	br	80ab34 <jpeg_calc_output_dimensions+0x230>
  80a980:	00800044 	movi	r2,1
  80a984:	e0bffd15 	stw	r2,-12(fp)
  80a988:	00000306 	br	80a998 <jpeg_calc_output_dimensions+0x94>
  80a98c:	e0bffd17 	ldw	r2,-12(fp)
  80a990:	1085883a 	add	r2,r2,r2
  80a994:	e0bffd15 	stw	r2,-12(fp)
  80a998:	e0bffe17 	ldw	r2,-8(fp)
  80a99c:	10805117 	ldw	r2,324(r2)
  80a9a0:	e17ffd17 	ldw	r5,-12(fp)
  80a9a4:	1009883a 	mov	r4,r2
  80a9a8:	08305040 	call	830504 <__mulsi3>
  80a9ac:	1007883a 	mov	r3,r2
  80a9b0:	e0bffe17 	ldw	r2,-8(fp)
  80a9b4:	10801317 	ldw	r2,76(r2)
  80a9b8:	10000226 	beq	r2,zero,80a9c4 <jpeg_calc_output_dimensions+0xc0>
  80a9bc:	00800204 	movi	r2,8
  80a9c0:	00000106 	br	80a9c8 <jpeg_calc_output_dimensions+0xc4>
  80a9c4:	00800104 	movi	r2,4
  80a9c8:	10c00c16 	blt	r2,r3,80a9fc <jpeg_calc_output_dimensions+0xf8>
  80a9cc:	e0bffe17 	ldw	r2,-8(fp)
  80a9d0:	14004f17 	ldw	r16,316(r2)
  80a9d4:	e0bffc17 	ldw	r2,-16(fp)
  80a9d8:	10800217 	ldw	r2,8(r2)
  80a9dc:	e17ffd17 	ldw	r5,-12(fp)
  80a9e0:	1009883a 	mov	r4,r2
  80a9e4:	08305040 	call	830504 <__mulsi3>
  80a9e8:	1085883a 	add	r2,r2,r2
  80a9ec:	100b883a 	mov	r5,r2
  80a9f0:	8009883a 	mov	r4,r16
  80a9f4:	08303d40 	call	8303d4 <__modsi3>
  80a9f8:	103fe426 	beq	r2,zero,80a98c <__alt_mem_epcs_flash_controller_0+0xff80198c>
  80a9fc:	e0bffe17 	ldw	r2,-8(fp)
  80aa00:	10805117 	ldw	r2,324(r2)
  80aa04:	e17ffd17 	ldw	r5,-12(fp)
  80aa08:	1009883a 	mov	r4,r2
  80aa0c:	08305040 	call	830504 <__mulsi3>
  80aa10:	1007883a 	mov	r3,r2
  80aa14:	e0bffc17 	ldw	r2,-16(fp)
  80aa18:	10c00915 	stw	r3,36(r2)
  80aa1c:	00800044 	movi	r2,1
  80aa20:	e0bffd15 	stw	r2,-12(fp)
  80aa24:	00000306 	br	80aa34 <jpeg_calc_output_dimensions+0x130>
  80aa28:	e0bffd17 	ldw	r2,-12(fp)
  80aa2c:	1085883a 	add	r2,r2,r2
  80aa30:	e0bffd15 	stw	r2,-12(fp)
  80aa34:	e0bffe17 	ldw	r2,-8(fp)
  80aa38:	10805217 	ldw	r2,328(r2)
  80aa3c:	e17ffd17 	ldw	r5,-12(fp)
  80aa40:	1009883a 	mov	r4,r2
  80aa44:	08305040 	call	830504 <__mulsi3>
  80aa48:	1007883a 	mov	r3,r2
  80aa4c:	e0bffe17 	ldw	r2,-8(fp)
  80aa50:	10801317 	ldw	r2,76(r2)
  80aa54:	10000226 	beq	r2,zero,80aa60 <jpeg_calc_output_dimensions+0x15c>
  80aa58:	00800204 	movi	r2,8
  80aa5c:	00000106 	br	80aa64 <jpeg_calc_output_dimensions+0x160>
  80aa60:	00800104 	movi	r2,4
  80aa64:	10c00c16 	blt	r2,r3,80aa98 <jpeg_calc_output_dimensions+0x194>
  80aa68:	e0bffe17 	ldw	r2,-8(fp)
  80aa6c:	14005017 	ldw	r16,320(r2)
  80aa70:	e0bffc17 	ldw	r2,-16(fp)
  80aa74:	10800317 	ldw	r2,12(r2)
  80aa78:	e17ffd17 	ldw	r5,-12(fp)
  80aa7c:	1009883a 	mov	r4,r2
  80aa80:	08305040 	call	830504 <__mulsi3>
  80aa84:	1085883a 	add	r2,r2,r2
  80aa88:	100b883a 	mov	r5,r2
  80aa8c:	8009883a 	mov	r4,r16
  80aa90:	08303d40 	call	8303d4 <__modsi3>
  80aa94:	103fe426 	beq	r2,zero,80aa28 <__alt_mem_epcs_flash_controller_0+0xff801a28>
  80aa98:	e0bffe17 	ldw	r2,-8(fp)
  80aa9c:	10805217 	ldw	r2,328(r2)
  80aaa0:	e17ffd17 	ldw	r5,-12(fp)
  80aaa4:	1009883a 	mov	r4,r2
  80aaa8:	08305040 	call	830504 <__mulsi3>
  80aaac:	1007883a 	mov	r3,r2
  80aab0:	e0bffc17 	ldw	r2,-16(fp)
  80aab4:	10c00a15 	stw	r3,40(r2)
  80aab8:	e0bffc17 	ldw	r2,-16(fp)
  80aabc:	10c00917 	ldw	r3,36(r2)
  80aac0:	e0bffc17 	ldw	r2,-16(fp)
  80aac4:	10800a17 	ldw	r2,40(r2)
  80aac8:	1085883a 	add	r2,r2,r2
  80aacc:	10c0070e 	bge	r2,r3,80aaec <jpeg_calc_output_dimensions+0x1e8>
  80aad0:	e0bffc17 	ldw	r2,-16(fp)
  80aad4:	10800a17 	ldw	r2,40(r2)
  80aad8:	1085883a 	add	r2,r2,r2
  80aadc:	1007883a 	mov	r3,r2
  80aae0:	e0bffc17 	ldw	r2,-16(fp)
  80aae4:	10c00915 	stw	r3,36(r2)
  80aae8:	00000c06 	br	80ab1c <jpeg_calc_output_dimensions+0x218>
  80aaec:	e0bffc17 	ldw	r2,-16(fp)
  80aaf0:	10c00a17 	ldw	r3,40(r2)
  80aaf4:	e0bffc17 	ldw	r2,-16(fp)
  80aaf8:	10800917 	ldw	r2,36(r2)
  80aafc:	1085883a 	add	r2,r2,r2
  80ab00:	10c0060e 	bge	r2,r3,80ab1c <jpeg_calc_output_dimensions+0x218>
  80ab04:	e0bffc17 	ldw	r2,-16(fp)
  80ab08:	10800917 	ldw	r2,36(r2)
  80ab0c:	1085883a 	add	r2,r2,r2
  80ab10:	1007883a 	mov	r3,r2
  80ab14:	e0bffc17 	ldw	r2,-16(fp)
  80ab18:	10c00a15 	stw	r3,40(r2)
  80ab1c:	e0bffb17 	ldw	r2,-20(fp)
  80ab20:	10800044 	addi	r2,r2,1
  80ab24:	e0bffb15 	stw	r2,-20(fp)
  80ab28:	e0bffc17 	ldw	r2,-16(fp)
  80ab2c:	10801604 	addi	r2,r2,88
  80ab30:	e0bffc15 	stw	r2,-16(fp)
  80ab34:	e0bffe17 	ldw	r2,-8(fp)
  80ab38:	10800917 	ldw	r2,36(r2)
  80ab3c:	e0fffb17 	ldw	r3,-20(fp)
  80ab40:	18bf8f16 	blt	r3,r2,80a980 <__alt_mem_epcs_flash_controller_0+0xff801980>
  80ab44:	e03ffb15 	stw	zero,-20(fp)
  80ab48:	e0bffe17 	ldw	r2,-8(fp)
  80ab4c:	10803617 	ldw	r2,216(r2)
  80ab50:	e0bffc15 	stw	r2,-16(fp)
  80ab54:	00003c06 	br	80ac48 <jpeg_calc_output_dimensions+0x344>
  80ab58:	e0bffe17 	ldw	r2,-8(fp)
  80ab5c:	10800717 	ldw	r2,28(r2)
  80ab60:	1021883a 	mov	r16,r2
  80ab64:	e0bffc17 	ldw	r2,-16(fp)
  80ab68:	10c00217 	ldw	r3,8(r2)
  80ab6c:	e0bffc17 	ldw	r2,-16(fp)
  80ab70:	10800917 	ldw	r2,36(r2)
  80ab74:	100b883a 	mov	r5,r2
  80ab78:	1809883a 	mov	r4,r3
  80ab7c:	08305040 	call	830504 <__mulsi3>
  80ab80:	100b883a 	mov	r5,r2
  80ab84:	8009883a 	mov	r4,r16
  80ab88:	08305040 	call	830504 <__mulsi3>
  80ab8c:	1021883a 	mov	r16,r2
  80ab90:	e0bffe17 	ldw	r2,-8(fp)
  80ab94:	10c04f17 	ldw	r3,316(r2)
  80ab98:	e0bffe17 	ldw	r2,-8(fp)
  80ab9c:	10806b17 	ldw	r2,428(r2)
  80aba0:	100b883a 	mov	r5,r2
  80aba4:	1809883a 	mov	r4,r3
  80aba8:	08305040 	call	830504 <__mulsi3>
  80abac:	100b883a 	mov	r5,r2
  80abb0:	8009883a 	mov	r4,r16
  80abb4:	0813ea80 	call	813ea8 <jdiv_round_up>
  80abb8:	1007883a 	mov	r3,r2
  80abbc:	e0bffc17 	ldw	r2,-16(fp)
  80abc0:	10c00b15 	stw	r3,44(r2)
  80abc4:	e0bffe17 	ldw	r2,-8(fp)
  80abc8:	10800817 	ldw	r2,32(r2)
  80abcc:	1021883a 	mov	r16,r2
  80abd0:	e0bffc17 	ldw	r2,-16(fp)
  80abd4:	10c00317 	ldw	r3,12(r2)
  80abd8:	e0bffc17 	ldw	r2,-16(fp)
  80abdc:	10800a17 	ldw	r2,40(r2)
  80abe0:	100b883a 	mov	r5,r2
  80abe4:	1809883a 	mov	r4,r3
  80abe8:	08305040 	call	830504 <__mulsi3>
  80abec:	100b883a 	mov	r5,r2
  80abf0:	8009883a 	mov	r4,r16
  80abf4:	08305040 	call	830504 <__mulsi3>
  80abf8:	1021883a 	mov	r16,r2
  80abfc:	e0bffe17 	ldw	r2,-8(fp)
  80ac00:	10c05017 	ldw	r3,320(r2)
  80ac04:	e0bffe17 	ldw	r2,-8(fp)
  80ac08:	10806b17 	ldw	r2,428(r2)
  80ac0c:	100b883a 	mov	r5,r2
  80ac10:	1809883a 	mov	r4,r3
  80ac14:	08305040 	call	830504 <__mulsi3>
  80ac18:	100b883a 	mov	r5,r2
  80ac1c:	8009883a 	mov	r4,r16
  80ac20:	0813ea80 	call	813ea8 <jdiv_round_up>
  80ac24:	1007883a 	mov	r3,r2
  80ac28:	e0bffc17 	ldw	r2,-16(fp)
  80ac2c:	10c00c15 	stw	r3,48(r2)
  80ac30:	e0bffb17 	ldw	r2,-20(fp)
  80ac34:	10800044 	addi	r2,r2,1
  80ac38:	e0bffb15 	stw	r2,-20(fp)
  80ac3c:	e0bffc17 	ldw	r2,-16(fp)
  80ac40:	10801604 	addi	r2,r2,88
  80ac44:	e0bffc15 	stw	r2,-16(fp)
  80ac48:	e0bffe17 	ldw	r2,-8(fp)
  80ac4c:	10800917 	ldw	r2,36(r2)
  80ac50:	e0fffb17 	ldw	r3,-20(fp)
  80ac54:	18bfc016 	blt	r3,r2,80ab58 <__alt_mem_epcs_flash_controller_0+0xff801b58>
  80ac58:	e0bffe17 	ldw	r2,-8(fp)
  80ac5c:	10800b17 	ldw	r2,44(r2)
  80ac60:	10c00228 	cmpgeui	r3,r2,8
  80ac64:	18001e1e 	bne	r3,zero,80ace0 <jpeg_calc_output_dimensions+0x3dc>
  80ac68:	100690ba 	slli	r3,r2,2
  80ac6c:	00802074 	movhi	r2,129
  80ac70:	10ab2004 	addi	r2,r2,-21376
  80ac74:	1885883a 	add	r2,r3,r2
  80ac78:	10800017 	ldw	r2,0(r2)
  80ac7c:	1000683a 	jmp	r2
  80ac80:	0080ace0 	cmpeqi	r2,zero,691
  80ac84:	0080aca0 	cmpeqi	r2,zero,690
  80ac88:	0080acb0 	cmpltui	r2,zero,690
  80ac8c:	0080acc0 	call	80acc <OSCtxSw_SWITCH_PC+0x80a8c>
  80ac90:	0080acd0 	cmplti	r2,zero,691
  80ac94:	0080acd0 	cmplti	r2,zero,691
  80ac98:	0080acb0 	cmpltui	r2,zero,690
  80ac9c:	0080acc0 	call	80acc <OSCtxSw_SWITCH_PC+0x80a8c>
  80aca0:	e0bffe17 	ldw	r2,-8(fp)
  80aca4:	00c00044 	movi	r3,1
  80aca8:	10c01e15 	stw	r3,120(r2)
  80acac:	00001106 	br	80acf4 <jpeg_calc_output_dimensions+0x3f0>
  80acb0:	e0bffe17 	ldw	r2,-8(fp)
  80acb4:	00c000c4 	movi	r3,3
  80acb8:	10c01e15 	stw	r3,120(r2)
  80acbc:	00000d06 	br	80acf4 <jpeg_calc_output_dimensions+0x3f0>
  80acc0:	e0bffe17 	ldw	r2,-8(fp)
  80acc4:	00c000c4 	movi	r3,3
  80acc8:	10c01e15 	stw	r3,120(r2)
  80accc:	00000906 	br	80acf4 <jpeg_calc_output_dimensions+0x3f0>
  80acd0:	e0bffe17 	ldw	r2,-8(fp)
  80acd4:	00c00104 	movi	r3,4
  80acd8:	10c01e15 	stw	r3,120(r2)
  80acdc:	00000506 	br	80acf4 <jpeg_calc_output_dimensions+0x3f0>
  80ace0:	e0bffe17 	ldw	r2,-8(fp)
  80ace4:	10c00917 	ldw	r3,36(r2)
  80ace8:	e0bffe17 	ldw	r2,-8(fp)
  80acec:	10c01e15 	stw	r3,120(r2)
  80acf0:	0001883a 	nop
  80acf4:	e0bffe17 	ldw	r2,-8(fp)
  80acf8:	10801517 	ldw	r2,84(r2)
  80acfc:	1000031e 	bne	r2,zero,80ad0c <jpeg_calc_output_dimensions+0x408>
  80ad00:	e0bffe17 	ldw	r2,-8(fp)
  80ad04:	10801e17 	ldw	r2,120(r2)
  80ad08:	00000106 	br	80ad10 <jpeg_calc_output_dimensions+0x40c>
  80ad0c:	00800044 	movi	r2,1
  80ad10:	e0fffe17 	ldw	r3,-8(fp)
  80ad14:	18801f15 	stw	r2,124(r3)
  80ad18:	e13ffe17 	ldw	r4,-8(fp)
  80ad1c:	080a7300 	call	80a730 <use_merged_upsample>
  80ad20:	10000526 	beq	r2,zero,80ad38 <jpeg_calc_output_dimensions+0x434>
  80ad24:	e0bffe17 	ldw	r2,-8(fp)
  80ad28:	10c05017 	ldw	r3,320(r2)
  80ad2c:	e0bffe17 	ldw	r2,-8(fp)
  80ad30:	10c02015 	stw	r3,128(r2)
  80ad34:	00000306 	br	80ad44 <jpeg_calc_output_dimensions+0x440>
  80ad38:	e0bffe17 	ldw	r2,-8(fp)
  80ad3c:	00c00044 	movi	r3,1
  80ad40:	10c02015 	stw	r3,128(r2)
  80ad44:	0001883a 	nop
  80ad48:	e6ffff04 	addi	sp,fp,-4
  80ad4c:	dfc00217 	ldw	ra,8(sp)
  80ad50:	df000117 	ldw	fp,4(sp)
  80ad54:	dc000017 	ldw	r16,0(sp)
  80ad58:	dec00304 	addi	sp,sp,12
  80ad5c:	f800283a 	ret

0080ad60 <prepare_range_limit_table>:
  80ad60:	defffb04 	addi	sp,sp,-20
  80ad64:	dfc00415 	stw	ra,16(sp)
  80ad68:	df000315 	stw	fp,12(sp)
  80ad6c:	df000304 	addi	fp,sp,12
  80ad70:	e13fff15 	stw	r4,-4(fp)
  80ad74:	e0bfff17 	ldw	r2,-4(fp)
  80ad78:	10800117 	ldw	r2,4(r2)
  80ad7c:	10800017 	ldw	r2,0(r2)
  80ad80:	01814004 	movi	r6,1280
  80ad84:	01400044 	movi	r5,1
  80ad88:	e13fff17 	ldw	r4,-4(fp)
  80ad8c:	103ee83a 	callr	r2
  80ad90:	e0bffe15 	stw	r2,-8(fp)
  80ad94:	01808004 	movi	r6,512
  80ad98:	000b883a 	mov	r5,zero
  80ad9c:	e13ffe17 	ldw	r4,-8(fp)
  80ada0:	08342980 	call	834298 <memset>
  80ada4:	e0bffe17 	ldw	r2,-8(fp)
  80ada8:	10808004 	addi	r2,r2,512
  80adac:	e0bffe15 	stw	r2,-8(fp)
  80adb0:	e0bfff17 	ldw	r2,-4(fp)
  80adb4:	e0fffe17 	ldw	r3,-8(fp)
  80adb8:	10c05415 	stw	r3,336(r2)
  80adbc:	e03ffd15 	stw	zero,-12(fp)
  80adc0:	00000806 	br	80ade4 <prepare_range_limit_table+0x84>
  80adc4:	e0bffd17 	ldw	r2,-12(fp)
  80adc8:	e0fffe17 	ldw	r3,-8(fp)
  80adcc:	1885883a 	add	r2,r3,r2
  80add0:	e0fffd17 	ldw	r3,-12(fp)
  80add4:	10c00005 	stb	r3,0(r2)
  80add8:	e0bffd17 	ldw	r2,-12(fp)
  80addc:	10800044 	addi	r2,r2,1
  80ade0:	e0bffd15 	stw	r2,-12(fp)
  80ade4:	e0bffd17 	ldw	r2,-12(fp)
  80ade8:	10804010 	cmplti	r2,r2,256
  80adec:	103ff51e 	bne	r2,zero,80adc4 <__alt_mem_epcs_flash_controller_0+0xff801dc4>
  80adf0:	00000806 	br	80ae14 <prepare_range_limit_table+0xb4>
  80adf4:	e0bffd17 	ldw	r2,-12(fp)
  80adf8:	e0fffe17 	ldw	r3,-8(fp)
  80adfc:	1885883a 	add	r2,r3,r2
  80ae00:	00ffffc4 	movi	r3,-1
  80ae04:	10c00005 	stb	r3,0(r2)
  80ae08:	e0bffd17 	ldw	r2,-12(fp)
  80ae0c:	10800044 	addi	r2,r2,1
  80ae10:	e0bffd15 	stw	r2,-12(fp)
  80ae14:	e0bffd17 	ldw	r2,-12(fp)
  80ae18:	1080c010 	cmplti	r2,r2,768
  80ae1c:	103ff51e 	bne	r2,zero,80adf4 <__alt_mem_epcs_flash_controller_0+0xff801df4>
  80ae20:	0001883a 	nop
  80ae24:	e037883a 	mov	sp,fp
  80ae28:	dfc00117 	ldw	ra,4(sp)
  80ae2c:	df000017 	ldw	fp,0(sp)
  80ae30:	dec00204 	addi	sp,sp,8
  80ae34:	f800283a 	ret

0080ae38 <master_selection>:
  80ae38:	defff704 	addi	sp,sp,-36
  80ae3c:	dfc00815 	stw	ra,32(sp)
  80ae40:	df000715 	stw	fp,28(sp)
  80ae44:	dc000615 	stw	r16,24(sp)
  80ae48:	df000704 	addi	fp,sp,28
  80ae4c:	e13ffe15 	stw	r4,-8(fp)
  80ae50:	e0bffe17 	ldw	r2,-8(fp)
  80ae54:	10806f17 	ldw	r2,444(r2)
  80ae58:	e0bffa15 	stw	r2,-24(fp)
  80ae5c:	e0bffe17 	ldw	r2,-8(fp)
  80ae60:	10803517 	ldw	r2,212(r2)
  80ae64:	10800220 	cmpeqi	r2,r2,8
  80ae68:	10000e1e 	bne	r2,zero,80aea4 <master_selection+0x6c>
  80ae6c:	e0bffe17 	ldw	r2,-8(fp)
  80ae70:	10800017 	ldw	r2,0(r2)
  80ae74:	00c00404 	movi	r3,16
  80ae78:	10c00515 	stw	r3,20(r2)
  80ae7c:	e0bffe17 	ldw	r2,-8(fp)
  80ae80:	10800017 	ldw	r2,0(r2)
  80ae84:	e0fffe17 	ldw	r3,-8(fp)
  80ae88:	18c03517 	ldw	r3,212(r3)
  80ae8c:	10c00615 	stw	r3,24(r2)
  80ae90:	e0bffe17 	ldw	r2,-8(fp)
  80ae94:	10800017 	ldw	r2,0(r2)
  80ae98:	10800017 	ldw	r2,0(r2)
  80ae9c:	e13ffe17 	ldw	r4,-8(fp)
  80aea0:	103ee83a 	callr	r2
  80aea4:	e13ffe17 	ldw	r4,-8(fp)
  80aea8:	080a9040 	call	80a904 <jpeg_calc_output_dimensions>
  80aeac:	e13ffe17 	ldw	r4,-8(fp)
  80aeb0:	080ad600 	call	80ad60 <prepare_range_limit_table>
  80aeb4:	e0bffe17 	ldw	r2,-8(fp)
  80aeb8:	10801d17 	ldw	r2,116(r2)
  80aebc:	10000626 	beq	r2,zero,80aed8 <master_selection+0xa0>
  80aec0:	e0bffe17 	ldw	r2,-8(fp)
  80aec4:	10801c17 	ldw	r2,112(r2)
  80aec8:	10000326 	beq	r2,zero,80aed8 <master_selection+0xa0>
  80aecc:	e0bffe17 	ldw	r2,-8(fp)
  80aed0:	10801e17 	ldw	r2,120(r2)
  80aed4:	00800916 	blt	zero,r2,80aefc <master_selection+0xc4>
  80aed8:	e0bffe17 	ldw	r2,-8(fp)
  80aedc:	10800017 	ldw	r2,0(r2)
  80aee0:	00c00844 	movi	r3,33
  80aee4:	10c00515 	stw	r3,20(r2)
  80aee8:	e0bffe17 	ldw	r2,-8(fp)
  80aeec:	10800017 	ldw	r2,0(r2)
  80aef0:	10800017 	ldw	r2,0(r2)
  80aef4:	e13ffe17 	ldw	r4,-8(fp)
  80aef8:	103ee83a 	callr	r2
  80aefc:	e0bffe17 	ldw	r2,-8(fp)
  80af00:	10801c17 	ldw	r2,112(r2)
  80af04:	1007883a 	mov	r3,r2
  80af08:	e0bffe17 	ldw	r2,-8(fp)
  80af0c:	10801e17 	ldw	r2,120(r2)
  80af10:	100b883a 	mov	r5,r2
  80af14:	1809883a 	mov	r4,r3
  80af18:	08305040 	call	830504 <__mulsi3>
  80af1c:	e0bffb15 	stw	r2,-20(fp)
  80af20:	e0bffb17 	ldw	r2,-20(fp)
  80af24:	e0bffc15 	stw	r2,-16(fp)
  80af28:	e0fffc17 	ldw	r3,-16(fp)
  80af2c:	e0bffb17 	ldw	r2,-20(fp)
  80af30:	18800926 	beq	r3,r2,80af58 <master_selection+0x120>
  80af34:	e0bffe17 	ldw	r2,-8(fp)
  80af38:	10800017 	ldw	r2,0(r2)
  80af3c:	00c01204 	movi	r3,72
  80af40:	10c00515 	stw	r3,20(r2)
  80af44:	e0bffe17 	ldw	r2,-8(fp)
  80af48:	10800017 	ldw	r2,0(r2)
  80af4c:	10800017 	ldw	r2,0(r2)
  80af50:	e13ffe17 	ldw	r4,-8(fp)
  80af54:	103ee83a 	callr	r2
  80af58:	e0bffa17 	ldw	r2,-24(fp)
  80af5c:	10000315 	stw	zero,12(r2)
  80af60:	e13ffe17 	ldw	r4,-8(fp)
  80af64:	080a7300 	call	80a730 <use_merged_upsample>
  80af68:	1007883a 	mov	r3,r2
  80af6c:	e0bffa17 	ldw	r2,-24(fp)
  80af70:	10c00415 	stw	r3,16(r2)
  80af74:	e0bffa17 	ldw	r2,-24(fp)
  80af78:	10000515 	stw	zero,20(r2)
  80af7c:	e0bffa17 	ldw	r2,-24(fp)
  80af80:	10000615 	stw	zero,24(r2)
  80af84:	e0bffe17 	ldw	r2,-8(fp)
  80af88:	10801517 	ldw	r2,84(r2)
  80af8c:	10000326 	beq	r2,zero,80af9c <master_selection+0x164>
  80af90:	e0bffe17 	ldw	r2,-8(fp)
  80af94:	10801017 	ldw	r2,64(r2)
  80af98:	1000061e 	bne	r2,zero,80afb4 <master_selection+0x17c>
  80af9c:	e0bffe17 	ldw	r2,-8(fp)
  80afa0:	10001915 	stw	zero,100(r2)
  80afa4:	e0bffe17 	ldw	r2,-8(fp)
  80afa8:	10001a15 	stw	zero,104(r2)
  80afac:	e0bffe17 	ldw	r2,-8(fp)
  80afb0:	10001b15 	stw	zero,108(r2)
  80afb4:	e0bffe17 	ldw	r2,-8(fp)
  80afb8:	10801517 	ldw	r2,84(r2)
  80afbc:	10004026 	beq	r2,zero,80b0c0 <master_selection+0x288>
  80afc0:	e0bffe17 	ldw	r2,-8(fp)
  80afc4:	10801117 	ldw	r2,68(r2)
  80afc8:	10000926 	beq	r2,zero,80aff0 <master_selection+0x1b8>
  80afcc:	e0bffe17 	ldw	r2,-8(fp)
  80afd0:	10800017 	ldw	r2,0(r2)
  80afd4:	00c00c04 	movi	r3,48
  80afd8:	10c00515 	stw	r3,20(r2)
  80afdc:	e0bffe17 	ldw	r2,-8(fp)
  80afe0:	10800017 	ldw	r2,0(r2)
  80afe4:	10800017 	ldw	r2,0(r2)
  80afe8:	e13ffe17 	ldw	r4,-8(fp)
  80afec:	103ee83a 	callr	r2
  80aff0:	e0bffe17 	ldw	r2,-8(fp)
  80aff4:	10801e17 	ldw	r2,120(r2)
  80aff8:	108000e0 	cmpeqi	r2,r2,3
  80affc:	10000a1e 	bne	r2,zero,80b028 <master_selection+0x1f0>
  80b000:	e0bffe17 	ldw	r2,-8(fp)
  80b004:	00c00044 	movi	r3,1
  80b008:	10c01915 	stw	r3,100(r2)
  80b00c:	e0bffe17 	ldw	r2,-8(fp)
  80b010:	10001a15 	stw	zero,104(r2)
  80b014:	e0bffe17 	ldw	r2,-8(fp)
  80b018:	10001b15 	stw	zero,108(r2)
  80b01c:	e0bffe17 	ldw	r2,-8(fp)
  80b020:	10002215 	stw	zero,136(r2)
  80b024:	00001106 	br	80b06c <master_selection+0x234>
  80b028:	e0bffe17 	ldw	r2,-8(fp)
  80b02c:	10802217 	ldw	r2,136(r2)
  80b030:	10000426 	beq	r2,zero,80b044 <master_selection+0x20c>
  80b034:	e0bffe17 	ldw	r2,-8(fp)
  80b038:	00c00044 	movi	r3,1
  80b03c:	10c01a15 	stw	r3,104(r2)
  80b040:	00000a06 	br	80b06c <master_selection+0x234>
  80b044:	e0bffe17 	ldw	r2,-8(fp)
  80b048:	10801717 	ldw	r2,92(r2)
  80b04c:	10000426 	beq	r2,zero,80b060 <master_selection+0x228>
  80b050:	e0bffe17 	ldw	r2,-8(fp)
  80b054:	00c00044 	movi	r3,1
  80b058:	10c01b15 	stw	r3,108(r2)
  80b05c:	00000306 	br	80b06c <master_selection+0x234>
  80b060:	e0bffe17 	ldw	r2,-8(fp)
  80b064:	00c00044 	movi	r3,1
  80b068:	10c01915 	stw	r3,100(r2)
  80b06c:	e0bffe17 	ldw	r2,-8(fp)
  80b070:	10801917 	ldw	r2,100(r2)
  80b074:	10000626 	beq	r2,zero,80b090 <master_selection+0x258>
  80b078:	e13ffe17 	ldw	r4,-8(fp)
  80b07c:	08114ec0 	call	8114ec <jinit_1pass_quantizer>
  80b080:	e0bffe17 	ldw	r2,-8(fp)
  80b084:	10c07917 	ldw	r3,484(r2)
  80b088:	e0bffa17 	ldw	r2,-24(fp)
  80b08c:	10c00515 	stw	r3,20(r2)
  80b090:	e0bffe17 	ldw	r2,-8(fp)
  80b094:	10801b17 	ldw	r2,108(r2)
  80b098:	1000031e 	bne	r2,zero,80b0a8 <master_selection+0x270>
  80b09c:	e0bffe17 	ldw	r2,-8(fp)
  80b0a0:	10801a17 	ldw	r2,104(r2)
  80b0a4:	10000626 	beq	r2,zero,80b0c0 <master_selection+0x288>
  80b0a8:	e13ffe17 	ldw	r4,-8(fp)
  80b0ac:	0813c080 	call	813c08 <jinit_2pass_quantizer>
  80b0b0:	e0bffe17 	ldw	r2,-8(fp)
  80b0b4:	10c07917 	ldw	r3,484(r2)
  80b0b8:	e0bffa17 	ldw	r2,-24(fp)
  80b0bc:	10c00615 	stw	r3,24(r2)
  80b0c0:	e0bffe17 	ldw	r2,-8(fp)
  80b0c4:	10801117 	ldw	r2,68(r2)
  80b0c8:	10000f1e 	bne	r2,zero,80b108 <master_selection+0x2d0>
  80b0cc:	e0bffa17 	ldw	r2,-24(fp)
  80b0d0:	10800417 	ldw	r2,16(r2)
  80b0d4:	10000326 	beq	r2,zero,80b0e4 <master_selection+0x2ac>
  80b0d8:	e13ffe17 	ldw	r4,-8(fp)
  80b0dc:	080c5d00 	call	80c5d0 <jinit_merged_upsampler>
  80b0e0:	00000406 	br	80b0f4 <master_selection+0x2bc>
  80b0e4:	e13ffe17 	ldw	r4,-8(fp)
  80b0e8:	08190500 	call	819050 <jinit_color_deconverter>
  80b0ec:	e13ffe17 	ldw	r4,-8(fp)
  80b0f0:	080d5cc0 	call	80d5cc <jinit_upsampler>
  80b0f4:	e0bffe17 	ldw	r2,-8(fp)
  80b0f8:	10801b17 	ldw	r2,108(r2)
  80b0fc:	100b883a 	mov	r5,r2
  80b100:	e13ffe17 	ldw	r4,-8(fp)
  80b104:	080cd380 	call	80cd38 <jinit_d_post_controller>
  80b108:	e13ffe17 	ldw	r4,-8(fp)
  80b10c:	0819f140 	call	819f14 <jinit_inverse_dct>
  80b110:	e0bffe17 	ldw	r2,-8(fp)
  80b114:	10803917 	ldw	r2,228(r2)
  80b118:	10000326 	beq	r2,zero,80b128 <master_selection+0x2f0>
  80b11c:	e13ffe17 	ldw	r4,-8(fp)
  80b120:	08160300 	call	816030 <jinit_arith_decoder>
  80b124:	00000206 	br	80b130 <master_selection+0x2f8>
  80b128:	e13ffe17 	ldw	r4,-8(fp)
  80b12c:	081d5400 	call	81d540 <jinit_huff_decoder>
  80b130:	e0bffe17 	ldw	r2,-8(fp)
  80b134:	10807317 	ldw	r2,460(r2)
  80b138:	10800417 	ldw	r2,16(r2)
  80b13c:	1000031e 	bne	r2,zero,80b14c <master_selection+0x314>
  80b140:	e0bffe17 	ldw	r2,-8(fp)
  80b144:	10801017 	ldw	r2,64(r2)
  80b148:	10000226 	beq	r2,zero,80b154 <master_selection+0x31c>
  80b14c:	00800044 	movi	r2,1
  80b150:	00000106 	br	80b158 <master_selection+0x320>
  80b154:	0005883a 	mov	r2,zero
  80b158:	e0bffd15 	stw	r2,-12(fp)
  80b15c:	e17ffd17 	ldw	r5,-12(fp)
  80b160:	e13ffe17 	ldw	r4,-8(fp)
  80b164:	0817b740 	call	817b74 <jinit_d_coef_controller>
  80b168:	e0bffe17 	ldw	r2,-8(fp)
  80b16c:	10801117 	ldw	r2,68(r2)
  80b170:	1000031e 	bne	r2,zero,80b180 <master_selection+0x348>
  80b174:	000b883a 	mov	r5,zero
  80b178:	e13ffe17 	ldw	r4,-8(fp)
  80b17c:	081e5140 	call	81e514 <jinit_d_main_controller>
  80b180:	e0bffe17 	ldw	r2,-8(fp)
  80b184:	10800117 	ldw	r2,4(r2)
  80b188:	10800617 	ldw	r2,24(r2)
  80b18c:	e13ffe17 	ldw	r4,-8(fp)
  80b190:	103ee83a 	callr	r2
  80b194:	e0bffe17 	ldw	r2,-8(fp)
  80b198:	10807317 	ldw	r2,460(r2)
  80b19c:	10800217 	ldw	r2,8(r2)
  80b1a0:	e13ffe17 	ldw	r4,-8(fp)
  80b1a4:	103ee83a 	callr	r2
  80b1a8:	e0bffe17 	ldw	r2,-8(fp)
  80b1ac:	10800217 	ldw	r2,8(r2)
  80b1b0:	10003126 	beq	r2,zero,80b278 <master_selection+0x440>
  80b1b4:	e0bffe17 	ldw	r2,-8(fp)
  80b1b8:	10801017 	ldw	r2,64(r2)
  80b1bc:	10002e1e 	bne	r2,zero,80b278 <master_selection+0x440>
  80b1c0:	e0bffe17 	ldw	r2,-8(fp)
  80b1c4:	10807317 	ldw	r2,460(r2)
  80b1c8:	10800417 	ldw	r2,16(r2)
  80b1cc:	10002a26 	beq	r2,zero,80b278 <master_selection+0x440>
  80b1d0:	e0bffe17 	ldw	r2,-8(fp)
  80b1d4:	10803817 	ldw	r2,224(r2)
  80b1d8:	10000826 	beq	r2,zero,80b1fc <master_selection+0x3c4>
  80b1dc:	e0bffe17 	ldw	r2,-8(fp)
  80b1e0:	10c00917 	ldw	r3,36(r2)
  80b1e4:	1805883a 	mov	r2,r3
  80b1e8:	1085883a 	add	r2,r2,r2
  80b1ec:	10c5883a 	add	r2,r2,r3
  80b1f0:	10800084 	addi	r2,r2,2
  80b1f4:	e0bff915 	stw	r2,-28(fp)
  80b1f8:	00000306 	br	80b208 <master_selection+0x3d0>
  80b1fc:	e0bffe17 	ldw	r2,-8(fp)
  80b200:	10800917 	ldw	r2,36(r2)
  80b204:	e0bff915 	stw	r2,-28(fp)
  80b208:	e0bffe17 	ldw	r2,-8(fp)
  80b20c:	10800217 	ldw	r2,8(r2)
  80b210:	10000115 	stw	zero,4(r2)
  80b214:	e0bffe17 	ldw	r2,-8(fp)
  80b218:	14000217 	ldw	r16,8(r2)
  80b21c:	e0bffe17 	ldw	r2,-8(fp)
  80b220:	10805317 	ldw	r2,332(r2)
  80b224:	e17ff917 	ldw	r5,-28(fp)
  80b228:	1009883a 	mov	r4,r2
  80b22c:	08305040 	call	830504 <__mulsi3>
  80b230:	80800215 	stw	r2,8(r16)
  80b234:	e0bffe17 	ldw	r2,-8(fp)
  80b238:	10800217 	ldw	r2,8(r2)
  80b23c:	10000315 	stw	zero,12(r2)
  80b240:	e0bffe17 	ldw	r2,-8(fp)
  80b244:	10c00217 	ldw	r3,8(r2)
  80b248:	e0bffe17 	ldw	r2,-8(fp)
  80b24c:	10801b17 	ldw	r2,108(r2)
  80b250:	10000226 	beq	r2,zero,80b25c <master_selection+0x424>
  80b254:	008000c4 	movi	r2,3
  80b258:	00000106 	br	80b260 <master_selection+0x428>
  80b25c:	00800084 	movi	r2,2
  80b260:	18800415 	stw	r2,16(r3)
  80b264:	e0bffa17 	ldw	r2,-24(fp)
  80b268:	10800317 	ldw	r2,12(r2)
  80b26c:	10c00044 	addi	r3,r2,1
  80b270:	e0bffa17 	ldw	r2,-24(fp)
  80b274:	10c00315 	stw	r3,12(r2)
  80b278:	0001883a 	nop
  80b27c:	e6ffff04 	addi	sp,fp,-4
  80b280:	dfc00217 	ldw	ra,8(sp)
  80b284:	df000117 	ldw	fp,4(sp)
  80b288:	dc000017 	ldw	r16,0(sp)
  80b28c:	dec00304 	addi	sp,sp,12
  80b290:	f800283a 	ret

0080b294 <prepare_for_output_pass>:
  80b294:	defffc04 	addi	sp,sp,-16
  80b298:	dfc00315 	stw	ra,12(sp)
  80b29c:	df000215 	stw	fp,8(sp)
  80b2a0:	df000204 	addi	fp,sp,8
  80b2a4:	e13fff15 	stw	r4,-4(fp)
  80b2a8:	e0bfff17 	ldw	r2,-4(fp)
  80b2ac:	10806f17 	ldw	r2,444(r2)
  80b2b0:	e0bffe15 	stw	r2,-8(fp)
  80b2b4:	e0bffe17 	ldw	r2,-8(fp)
  80b2b8:	10800217 	ldw	r2,8(r2)
  80b2bc:	10001526 	beq	r2,zero,80b314 <prepare_for_output_pass+0x80>
  80b2c0:	e0bffe17 	ldw	r2,-8(fp)
  80b2c4:	10000215 	stw	zero,8(r2)
  80b2c8:	e0bfff17 	ldw	r2,-4(fp)
  80b2cc:	10807917 	ldw	r2,484(r2)
  80b2d0:	10800017 	ldw	r2,0(r2)
  80b2d4:	000b883a 	mov	r5,zero
  80b2d8:	e13fff17 	ldw	r4,-4(fp)
  80b2dc:	103ee83a 	callr	r2
  80b2e0:	e0bfff17 	ldw	r2,-4(fp)
  80b2e4:	10807217 	ldw	r2,456(r2)
  80b2e8:	10800017 	ldw	r2,0(r2)
  80b2ec:	01400084 	movi	r5,2
  80b2f0:	e13fff17 	ldw	r4,-4(fp)
  80b2f4:	103ee83a 	callr	r2
  80b2f8:	e0bfff17 	ldw	r2,-4(fp)
  80b2fc:	10807017 	ldw	r2,448(r2)
  80b300:	10800017 	ldw	r2,0(r2)
  80b304:	01400084 	movi	r5,2
  80b308:	e13fff17 	ldw	r4,-4(fp)
  80b30c:	103ee83a 	callr	r2
  80b310:	00005c06 	br	80b484 <prepare_for_output_pass+0x1f0>
  80b314:	e0bfff17 	ldw	r2,-4(fp)
  80b318:	10801517 	ldw	r2,84(r2)
  80b31c:	10002226 	beq	r2,zero,80b3a8 <prepare_for_output_pass+0x114>
  80b320:	e0bfff17 	ldw	r2,-4(fp)
  80b324:	10802217 	ldw	r2,136(r2)
  80b328:	10001f1e 	bne	r2,zero,80b3a8 <prepare_for_output_pass+0x114>
  80b32c:	e0bfff17 	ldw	r2,-4(fp)
  80b330:	10801717 	ldw	r2,92(r2)
  80b334:	10000b26 	beq	r2,zero,80b364 <prepare_for_output_pass+0xd0>
  80b338:	e0bfff17 	ldw	r2,-4(fp)
  80b33c:	10801b17 	ldw	r2,108(r2)
  80b340:	10000826 	beq	r2,zero,80b364 <prepare_for_output_pass+0xd0>
  80b344:	e0bffe17 	ldw	r2,-8(fp)
  80b348:	10c00617 	ldw	r3,24(r2)
  80b34c:	e0bfff17 	ldw	r2,-4(fp)
  80b350:	10c07915 	stw	r3,484(r2)
  80b354:	e0bffe17 	ldw	r2,-8(fp)
  80b358:	00c00044 	movi	r3,1
  80b35c:	10c00215 	stw	r3,8(r2)
  80b360:	00001106 	br	80b3a8 <prepare_for_output_pass+0x114>
  80b364:	e0bfff17 	ldw	r2,-4(fp)
  80b368:	10801917 	ldw	r2,100(r2)
  80b36c:	10000526 	beq	r2,zero,80b384 <prepare_for_output_pass+0xf0>
  80b370:	e0bffe17 	ldw	r2,-8(fp)
  80b374:	10c00517 	ldw	r3,20(r2)
  80b378:	e0bfff17 	ldw	r2,-4(fp)
  80b37c:	10c07915 	stw	r3,484(r2)
  80b380:	00000906 	br	80b3a8 <prepare_for_output_pass+0x114>
  80b384:	e0bfff17 	ldw	r2,-4(fp)
  80b388:	10800017 	ldw	r2,0(r2)
  80b38c:	00c00bc4 	movi	r3,47
  80b390:	10c00515 	stw	r3,20(r2)
  80b394:	e0bfff17 	ldw	r2,-4(fp)
  80b398:	10800017 	ldw	r2,0(r2)
  80b39c:	10800017 	ldw	r2,0(r2)
  80b3a0:	e13fff17 	ldw	r4,-4(fp)
  80b3a4:	103ee83a 	callr	r2
  80b3a8:	e0bfff17 	ldw	r2,-4(fp)
  80b3ac:	10807617 	ldw	r2,472(r2)
  80b3b0:	10800017 	ldw	r2,0(r2)
  80b3b4:	e13fff17 	ldw	r4,-4(fp)
  80b3b8:	103ee83a 	callr	r2
  80b3bc:	e0bfff17 	ldw	r2,-4(fp)
  80b3c0:	10807117 	ldw	r2,452(r2)
  80b3c4:	10800217 	ldw	r2,8(r2)
  80b3c8:	e13fff17 	ldw	r4,-4(fp)
  80b3cc:	103ee83a 	callr	r2
  80b3d0:	e0bfff17 	ldw	r2,-4(fp)
  80b3d4:	10801117 	ldw	r2,68(r2)
  80b3d8:	10002a1e 	bne	r2,zero,80b484 <prepare_for_output_pass+0x1f0>
  80b3dc:	e0bffe17 	ldw	r2,-8(fp)
  80b3e0:	10800417 	ldw	r2,16(r2)
  80b3e4:	1000051e 	bne	r2,zero,80b3fc <prepare_for_output_pass+0x168>
  80b3e8:	e0bfff17 	ldw	r2,-4(fp)
  80b3ec:	10807817 	ldw	r2,480(r2)
  80b3f0:	10800017 	ldw	r2,0(r2)
  80b3f4:	e13fff17 	ldw	r4,-4(fp)
  80b3f8:	103ee83a 	callr	r2
  80b3fc:	e0bfff17 	ldw	r2,-4(fp)
  80b400:	10807717 	ldw	r2,476(r2)
  80b404:	10800017 	ldw	r2,0(r2)
  80b408:	e13fff17 	ldw	r4,-4(fp)
  80b40c:	103ee83a 	callr	r2
  80b410:	e0bfff17 	ldw	r2,-4(fp)
  80b414:	10801517 	ldw	r2,84(r2)
  80b418:	10000826 	beq	r2,zero,80b43c <prepare_for_output_pass+0x1a8>
  80b41c:	e0bfff17 	ldw	r2,-4(fp)
  80b420:	10807917 	ldw	r2,484(r2)
  80b424:	10800017 	ldw	r2,0(r2)
  80b428:	e0fffe17 	ldw	r3,-8(fp)
  80b42c:	18c00217 	ldw	r3,8(r3)
  80b430:	180b883a 	mov	r5,r3
  80b434:	e13fff17 	ldw	r4,-4(fp)
  80b438:	103ee83a 	callr	r2
  80b43c:	e0bfff17 	ldw	r2,-4(fp)
  80b440:	10807217 	ldw	r2,456(r2)
  80b444:	10800017 	ldw	r2,0(r2)
  80b448:	e0fffe17 	ldw	r3,-8(fp)
  80b44c:	18c00217 	ldw	r3,8(r3)
  80b450:	18000226 	beq	r3,zero,80b45c <prepare_for_output_pass+0x1c8>
  80b454:	00c000c4 	movi	r3,3
  80b458:	00000106 	br	80b460 <prepare_for_output_pass+0x1cc>
  80b45c:	0007883a 	mov	r3,zero
  80b460:	180b883a 	mov	r5,r3
  80b464:	e13fff17 	ldw	r4,-4(fp)
  80b468:	103ee83a 	callr	r2
  80b46c:	e0bfff17 	ldw	r2,-4(fp)
  80b470:	10807017 	ldw	r2,448(r2)
  80b474:	10800017 	ldw	r2,0(r2)
  80b478:	000b883a 	mov	r5,zero
  80b47c:	e13fff17 	ldw	r4,-4(fp)
  80b480:	103ee83a 	callr	r2
  80b484:	e0bfff17 	ldw	r2,-4(fp)
  80b488:	10800217 	ldw	r2,8(r2)
  80b48c:	10002526 	beq	r2,zero,80b524 <prepare_for_output_pass+0x290>
  80b490:	e0bfff17 	ldw	r2,-4(fp)
  80b494:	10800217 	ldw	r2,8(r2)
  80b498:	e0fffe17 	ldw	r3,-8(fp)
  80b49c:	18c00317 	ldw	r3,12(r3)
  80b4a0:	10c00315 	stw	r3,12(r2)
  80b4a4:	e0bfff17 	ldw	r2,-4(fp)
  80b4a8:	10c00217 	ldw	r3,8(r2)
  80b4ac:	e0bffe17 	ldw	r2,-8(fp)
  80b4b0:	11000317 	ldw	r4,12(r2)
  80b4b4:	e0bffe17 	ldw	r2,-8(fp)
  80b4b8:	10800217 	ldw	r2,8(r2)
  80b4bc:	10000226 	beq	r2,zero,80b4c8 <prepare_for_output_pass+0x234>
  80b4c0:	00800084 	movi	r2,2
  80b4c4:	00000106 	br	80b4cc <prepare_for_output_pass+0x238>
  80b4c8:	00800044 	movi	r2,1
  80b4cc:	2085883a 	add	r2,r4,r2
  80b4d0:	18800415 	stw	r2,16(r3)
  80b4d4:	e0bfff17 	ldw	r2,-4(fp)
  80b4d8:	10801017 	ldw	r2,64(r2)
  80b4dc:	10001126 	beq	r2,zero,80b524 <prepare_for_output_pass+0x290>
  80b4e0:	e0bfff17 	ldw	r2,-4(fp)
  80b4e4:	10807317 	ldw	r2,460(r2)
  80b4e8:	10800517 	ldw	r2,20(r2)
  80b4ec:	10000d1e 	bne	r2,zero,80b524 <prepare_for_output_pass+0x290>
  80b4f0:	e0bfff17 	ldw	r2,-4(fp)
  80b4f4:	10c00217 	ldw	r3,8(r2)
  80b4f8:	e0bfff17 	ldw	r2,-4(fp)
  80b4fc:	10800217 	ldw	r2,8(r2)
  80b500:	11000417 	ldw	r4,16(r2)
  80b504:	e0bfff17 	ldw	r2,-4(fp)
  80b508:	10801b17 	ldw	r2,108(r2)
  80b50c:	10000226 	beq	r2,zero,80b518 <prepare_for_output_pass+0x284>
  80b510:	00800084 	movi	r2,2
  80b514:	00000106 	br	80b51c <prepare_for_output_pass+0x288>
  80b518:	00800044 	movi	r2,1
  80b51c:	2085883a 	add	r2,r4,r2
  80b520:	18800415 	stw	r2,16(r3)
  80b524:	0001883a 	nop
  80b528:	e037883a 	mov	sp,fp
  80b52c:	dfc00117 	ldw	ra,4(sp)
  80b530:	df000017 	ldw	fp,0(sp)
  80b534:	dec00204 	addi	sp,sp,8
  80b538:	f800283a 	ret

0080b53c <finish_output_pass>:
  80b53c:	defffc04 	addi	sp,sp,-16
  80b540:	dfc00315 	stw	ra,12(sp)
  80b544:	df000215 	stw	fp,8(sp)
  80b548:	df000204 	addi	fp,sp,8
  80b54c:	e13fff15 	stw	r4,-4(fp)
  80b550:	e0bfff17 	ldw	r2,-4(fp)
  80b554:	10806f17 	ldw	r2,444(r2)
  80b558:	e0bffe15 	stw	r2,-8(fp)
  80b55c:	e0bfff17 	ldw	r2,-4(fp)
  80b560:	10801517 	ldw	r2,84(r2)
  80b564:	10000526 	beq	r2,zero,80b57c <finish_output_pass+0x40>
  80b568:	e0bfff17 	ldw	r2,-4(fp)
  80b56c:	10807917 	ldw	r2,484(r2)
  80b570:	10800217 	ldw	r2,8(r2)
  80b574:	e13fff17 	ldw	r4,-4(fp)
  80b578:	103ee83a 	callr	r2
  80b57c:	e0bffe17 	ldw	r2,-8(fp)
  80b580:	10800317 	ldw	r2,12(r2)
  80b584:	10c00044 	addi	r3,r2,1
  80b588:	e0bffe17 	ldw	r2,-8(fp)
  80b58c:	10c00315 	stw	r3,12(r2)
  80b590:	0001883a 	nop
  80b594:	e037883a 	mov	sp,fp
  80b598:	dfc00117 	ldw	ra,4(sp)
  80b59c:	df000017 	ldw	fp,0(sp)
  80b5a0:	dec00204 	addi	sp,sp,8
  80b5a4:	f800283a 	ret

0080b5a8 <jpeg_new_colormap>:
  80b5a8:	defffc04 	addi	sp,sp,-16
  80b5ac:	dfc00315 	stw	ra,12(sp)
  80b5b0:	df000215 	stw	fp,8(sp)
  80b5b4:	df000204 	addi	fp,sp,8
  80b5b8:	e13fff15 	stw	r4,-4(fp)
  80b5bc:	e0bfff17 	ldw	r2,-4(fp)
  80b5c0:	10806f17 	ldw	r2,444(r2)
  80b5c4:	e0bffe15 	stw	r2,-8(fp)
  80b5c8:	e0bfff17 	ldw	r2,-4(fp)
  80b5cc:	10800517 	ldw	r2,20(r2)
  80b5d0:	108033e0 	cmpeqi	r2,r2,207
  80b5d4:	10000e1e 	bne	r2,zero,80b610 <jpeg_new_colormap+0x68>
  80b5d8:	e0bfff17 	ldw	r2,-4(fp)
  80b5dc:	10800017 	ldw	r2,0(r2)
  80b5e0:	00c00544 	movi	r3,21
  80b5e4:	10c00515 	stw	r3,20(r2)
  80b5e8:	e0bfff17 	ldw	r2,-4(fp)
  80b5ec:	10800017 	ldw	r2,0(r2)
  80b5f0:	e0ffff17 	ldw	r3,-4(fp)
  80b5f4:	18c00517 	ldw	r3,20(r3)
  80b5f8:	10c00615 	stw	r3,24(r2)
  80b5fc:	e0bfff17 	ldw	r2,-4(fp)
  80b600:	10800017 	ldw	r2,0(r2)
  80b604:	10800017 	ldw	r2,0(r2)
  80b608:	e13fff17 	ldw	r4,-4(fp)
  80b60c:	103ee83a 	callr	r2
  80b610:	e0bfff17 	ldw	r2,-4(fp)
  80b614:	10801517 	ldw	r2,84(r2)
  80b618:	10001226 	beq	r2,zero,80b664 <jpeg_new_colormap+0xbc>
  80b61c:	e0bfff17 	ldw	r2,-4(fp)
  80b620:	10801a17 	ldw	r2,104(r2)
  80b624:	10000f26 	beq	r2,zero,80b664 <jpeg_new_colormap+0xbc>
  80b628:	e0bfff17 	ldw	r2,-4(fp)
  80b62c:	10802217 	ldw	r2,136(r2)
  80b630:	10000c26 	beq	r2,zero,80b664 <jpeg_new_colormap+0xbc>
  80b634:	e0bffe17 	ldw	r2,-8(fp)
  80b638:	10c00617 	ldw	r3,24(r2)
  80b63c:	e0bfff17 	ldw	r2,-4(fp)
  80b640:	10c07915 	stw	r3,484(r2)
  80b644:	e0bfff17 	ldw	r2,-4(fp)
  80b648:	10807917 	ldw	r2,484(r2)
  80b64c:	10800317 	ldw	r2,12(r2)
  80b650:	e13fff17 	ldw	r4,-4(fp)
  80b654:	103ee83a 	callr	r2
  80b658:	e0bffe17 	ldw	r2,-8(fp)
  80b65c:	10000215 	stw	zero,8(r2)
  80b660:	00000906 	br	80b688 <jpeg_new_colormap+0xe0>
  80b664:	e0bfff17 	ldw	r2,-4(fp)
  80b668:	10800017 	ldw	r2,0(r2)
  80b66c:	00c00bc4 	movi	r3,47
  80b670:	10c00515 	stw	r3,20(r2)
  80b674:	e0bfff17 	ldw	r2,-4(fp)
  80b678:	10800017 	ldw	r2,0(r2)
  80b67c:	10800017 	ldw	r2,0(r2)
  80b680:	e13fff17 	ldw	r4,-4(fp)
  80b684:	103ee83a 	callr	r2
  80b688:	0001883a 	nop
  80b68c:	e037883a 	mov	sp,fp
  80b690:	dfc00117 	ldw	ra,4(sp)
  80b694:	df000017 	ldw	fp,0(sp)
  80b698:	dec00204 	addi	sp,sp,8
  80b69c:	f800283a 	ret

0080b6a0 <jinit_master_decompress>:
  80b6a0:	defffc04 	addi	sp,sp,-16
  80b6a4:	dfc00315 	stw	ra,12(sp)
  80b6a8:	df000215 	stw	fp,8(sp)
  80b6ac:	df000204 	addi	fp,sp,8
  80b6b0:	e13fff15 	stw	r4,-4(fp)
  80b6b4:	e0bfff17 	ldw	r2,-4(fp)
  80b6b8:	10800117 	ldw	r2,4(r2)
  80b6bc:	10800017 	ldw	r2,0(r2)
  80b6c0:	01800704 	movi	r6,28
  80b6c4:	01400044 	movi	r5,1
  80b6c8:	e13fff17 	ldw	r4,-4(fp)
  80b6cc:	103ee83a 	callr	r2
  80b6d0:	e0bffe15 	stw	r2,-8(fp)
  80b6d4:	e0fffe17 	ldw	r3,-8(fp)
  80b6d8:	e0bfff17 	ldw	r2,-4(fp)
  80b6dc:	10c06f15 	stw	r3,444(r2)
  80b6e0:	e0fffe17 	ldw	r3,-8(fp)
  80b6e4:	00802074 	movhi	r2,129
  80b6e8:	10aca504 	addi	r2,r2,-19820
  80b6ec:	18800015 	stw	r2,0(r3)
  80b6f0:	e0fffe17 	ldw	r3,-8(fp)
  80b6f4:	00802074 	movhi	r2,129
  80b6f8:	10ad4f04 	addi	r2,r2,-19140
  80b6fc:	18800115 	stw	r2,4(r3)
  80b700:	e0bffe17 	ldw	r2,-8(fp)
  80b704:	10000215 	stw	zero,8(r2)
  80b708:	e13fff17 	ldw	r4,-4(fp)
  80b70c:	080ae380 	call	80ae38 <master_selection>
  80b710:	0001883a 	nop
  80b714:	e037883a 	mov	sp,fp
  80b718:	dfc00117 	ldw	ra,4(sp)
  80b71c:	df000017 	ldw	fp,0(sp)
  80b720:	dec00204 	addi	sp,sp,8
  80b724:	f800283a 	ret

0080b728 <build_ycc_rgb_table>:
  80b728:	defff904 	addi	sp,sp,-28
  80b72c:	dfc00615 	stw	ra,24(sp)
  80b730:	df000515 	stw	fp,20(sp)
  80b734:	dc000415 	stw	r16,16(sp)
  80b738:	df000504 	addi	fp,sp,20
  80b73c:	e13ffe15 	stw	r4,-8(fp)
  80b740:	e0bffe17 	ldw	r2,-8(fp)
  80b744:	10807717 	ldw	r2,476(r2)
  80b748:	e0bffd15 	stw	r2,-12(fp)
  80b74c:	e0bffe17 	ldw	r2,-8(fp)
  80b750:	10800117 	ldw	r2,4(r2)
  80b754:	10800017 	ldw	r2,0(r2)
  80b758:	01810004 	movi	r6,1024
  80b75c:	01400044 	movi	r5,1
  80b760:	e13ffe17 	ldw	r4,-8(fp)
  80b764:	103ee83a 	callr	r2
  80b768:	1007883a 	mov	r3,r2
  80b76c:	e0bffd17 	ldw	r2,-12(fp)
  80b770:	10c00415 	stw	r3,16(r2)
  80b774:	e0bffe17 	ldw	r2,-8(fp)
  80b778:	10800117 	ldw	r2,4(r2)
  80b77c:	10800017 	ldw	r2,0(r2)
  80b780:	01810004 	movi	r6,1024
  80b784:	01400044 	movi	r5,1
  80b788:	e13ffe17 	ldw	r4,-8(fp)
  80b78c:	103ee83a 	callr	r2
  80b790:	1007883a 	mov	r3,r2
  80b794:	e0bffd17 	ldw	r2,-12(fp)
  80b798:	10c00515 	stw	r3,20(r2)
  80b79c:	e0bffe17 	ldw	r2,-8(fp)
  80b7a0:	10800117 	ldw	r2,4(r2)
  80b7a4:	10800017 	ldw	r2,0(r2)
  80b7a8:	01810004 	movi	r6,1024
  80b7ac:	01400044 	movi	r5,1
  80b7b0:	e13ffe17 	ldw	r4,-8(fp)
  80b7b4:	103ee83a 	callr	r2
  80b7b8:	1007883a 	mov	r3,r2
  80b7bc:	e0bffd17 	ldw	r2,-12(fp)
  80b7c0:	10c00615 	stw	r3,24(r2)
  80b7c4:	e0bffe17 	ldw	r2,-8(fp)
  80b7c8:	10800117 	ldw	r2,4(r2)
  80b7cc:	10800017 	ldw	r2,0(r2)
  80b7d0:	01810004 	movi	r6,1024
  80b7d4:	01400044 	movi	r5,1
  80b7d8:	e13ffe17 	ldw	r4,-8(fp)
  80b7dc:	103ee83a 	callr	r2
  80b7e0:	1007883a 	mov	r3,r2
  80b7e4:	e0bffd17 	ldw	r2,-12(fp)
  80b7e8:	10c00715 	stw	r3,28(r2)
  80b7ec:	e03ffb15 	stw	zero,-20(fp)
  80b7f0:	00bfe004 	movi	r2,-128
  80b7f4:	e0bffc15 	stw	r2,-16(fp)
  80b7f8:	00003c06 	br	80b8ec <build_ycc_rgb_table+0x1c4>
  80b7fc:	e0bffd17 	ldw	r2,-12(fp)
  80b800:	10c00417 	ldw	r3,16(r2)
  80b804:	e0bffb17 	ldw	r2,-20(fp)
  80b808:	1085883a 	add	r2,r2,r2
  80b80c:	1085883a 	add	r2,r2,r2
  80b810:	18a1883a 	add	r16,r3,r2
  80b814:	01400074 	movhi	r5,1
  80b818:	2959ba44 	addi	r5,r5,26345
  80b81c:	e13ffc17 	ldw	r4,-16(fp)
  80b820:	08305040 	call	830504 <__mulsi3>
  80b824:	1007883a 	mov	r3,r2
  80b828:	00a00014 	movui	r2,32768
  80b82c:	1885883a 	add	r2,r3,r2
  80b830:	1005d43a 	srai	r2,r2,16
  80b834:	80800015 	stw	r2,0(r16)
  80b838:	e0bffd17 	ldw	r2,-12(fp)
  80b83c:	10c00517 	ldw	r3,20(r2)
  80b840:	e0bffb17 	ldw	r2,-20(fp)
  80b844:	1085883a 	add	r2,r2,r2
  80b848:	1085883a 	add	r2,r2,r2
  80b84c:	18a1883a 	add	r16,r3,r2
  80b850:	014000b4 	movhi	r5,2
  80b854:	29716884 	addi	r5,r5,-14942
  80b858:	e13ffc17 	ldw	r4,-16(fp)
  80b85c:	08305040 	call	830504 <__mulsi3>
  80b860:	1007883a 	mov	r3,r2
  80b864:	00a00014 	movui	r2,32768
  80b868:	1885883a 	add	r2,r3,r2
  80b86c:	1005d43a 	srai	r2,r2,16
  80b870:	80800015 	stw	r2,0(r16)
  80b874:	e0bffd17 	ldw	r2,-12(fp)
  80b878:	10c00617 	ldw	r3,24(r2)
  80b87c:	e0bffb17 	ldw	r2,-20(fp)
  80b880:	1085883a 	add	r2,r2,r2
  80b884:	1085883a 	add	r2,r2,r2
  80b888:	18a1883a 	add	r16,r3,r2
  80b88c:	017ffff4 	movhi	r5,65535
  80b890:	29524b84 	addi	r5,r5,18734
  80b894:	e13ffc17 	ldw	r4,-16(fp)
  80b898:	08305040 	call	830504 <__mulsi3>
  80b89c:	80800015 	stw	r2,0(r16)
  80b8a0:	e0bffd17 	ldw	r2,-12(fp)
  80b8a4:	10c00717 	ldw	r3,28(r2)
  80b8a8:	e0bffb17 	ldw	r2,-20(fp)
  80b8ac:	1085883a 	add	r2,r2,r2
  80b8b0:	1085883a 	add	r2,r2,r2
  80b8b4:	18a1883a 	add	r16,r3,r2
  80b8b8:	0169f9c4 	movi	r5,-22553
  80b8bc:	e13ffc17 	ldw	r4,-16(fp)
  80b8c0:	08305040 	call	830504 <__mulsi3>
  80b8c4:	1007883a 	mov	r3,r2
  80b8c8:	00a00014 	movui	r2,32768
  80b8cc:	1885883a 	add	r2,r3,r2
  80b8d0:	80800015 	stw	r2,0(r16)
  80b8d4:	e0bffb17 	ldw	r2,-20(fp)
  80b8d8:	10800044 	addi	r2,r2,1
  80b8dc:	e0bffb15 	stw	r2,-20(fp)
  80b8e0:	e0bffc17 	ldw	r2,-16(fp)
  80b8e4:	10800044 	addi	r2,r2,1
  80b8e8:	e0bffc15 	stw	r2,-16(fp)
  80b8ec:	e0bffb17 	ldw	r2,-20(fp)
  80b8f0:	10804010 	cmplti	r2,r2,256
  80b8f4:	103fc11e 	bne	r2,zero,80b7fc <__alt_mem_epcs_flash_controller_0+0xff8027fc>
  80b8f8:	0001883a 	nop
  80b8fc:	e6ffff04 	addi	sp,fp,-4
  80b900:	dfc00217 	ldw	ra,8(sp)
  80b904:	df000117 	ldw	fp,4(sp)
  80b908:	dc000017 	ldw	r16,0(sp)
  80b90c:	dec00304 	addi	sp,sp,12
  80b910:	f800283a 	ret

0080b914 <build_bg_ycc_rgb_table>:
  80b914:	defff904 	addi	sp,sp,-28
  80b918:	dfc00615 	stw	ra,24(sp)
  80b91c:	df000515 	stw	fp,20(sp)
  80b920:	dc000415 	stw	r16,16(sp)
  80b924:	df000504 	addi	fp,sp,20
  80b928:	e13ffe15 	stw	r4,-8(fp)
  80b92c:	e0bffe17 	ldw	r2,-8(fp)
  80b930:	10807717 	ldw	r2,476(r2)
  80b934:	e0bffd15 	stw	r2,-12(fp)
  80b938:	e0bffe17 	ldw	r2,-8(fp)
  80b93c:	10800117 	ldw	r2,4(r2)
  80b940:	10800017 	ldw	r2,0(r2)
  80b944:	01810004 	movi	r6,1024
  80b948:	01400044 	movi	r5,1
  80b94c:	e13ffe17 	ldw	r4,-8(fp)
  80b950:	103ee83a 	callr	r2
  80b954:	1007883a 	mov	r3,r2
  80b958:	e0bffd17 	ldw	r2,-12(fp)
  80b95c:	10c00415 	stw	r3,16(r2)
  80b960:	e0bffe17 	ldw	r2,-8(fp)
  80b964:	10800117 	ldw	r2,4(r2)
  80b968:	10800017 	ldw	r2,0(r2)
  80b96c:	01810004 	movi	r6,1024
  80b970:	01400044 	movi	r5,1
  80b974:	e13ffe17 	ldw	r4,-8(fp)
  80b978:	103ee83a 	callr	r2
  80b97c:	1007883a 	mov	r3,r2
  80b980:	e0bffd17 	ldw	r2,-12(fp)
  80b984:	10c00515 	stw	r3,20(r2)
  80b988:	e0bffe17 	ldw	r2,-8(fp)
  80b98c:	10800117 	ldw	r2,4(r2)
  80b990:	10800017 	ldw	r2,0(r2)
  80b994:	01810004 	movi	r6,1024
  80b998:	01400044 	movi	r5,1
  80b99c:	e13ffe17 	ldw	r4,-8(fp)
  80b9a0:	103ee83a 	callr	r2
  80b9a4:	1007883a 	mov	r3,r2
  80b9a8:	e0bffd17 	ldw	r2,-12(fp)
  80b9ac:	10c00615 	stw	r3,24(r2)
  80b9b0:	e0bffe17 	ldw	r2,-8(fp)
  80b9b4:	10800117 	ldw	r2,4(r2)
  80b9b8:	10800017 	ldw	r2,0(r2)
  80b9bc:	01810004 	movi	r6,1024
  80b9c0:	01400044 	movi	r5,1
  80b9c4:	e13ffe17 	ldw	r4,-8(fp)
  80b9c8:	103ee83a 	callr	r2
  80b9cc:	1007883a 	mov	r3,r2
  80b9d0:	e0bffd17 	ldw	r2,-12(fp)
  80b9d4:	10c00715 	stw	r3,28(r2)
  80b9d8:	e03ffb15 	stw	zero,-20(fp)
  80b9dc:	00bfe004 	movi	r2,-128
  80b9e0:	e0bffc15 	stw	r2,-16(fp)
  80b9e4:	00003d06 	br	80badc <build_bg_ycc_rgb_table+0x1c8>
  80b9e8:	e0bffd17 	ldw	r2,-12(fp)
  80b9ec:	10c00417 	ldw	r3,16(r2)
  80b9f0:	e0bffb17 	ldw	r2,-20(fp)
  80b9f4:	1085883a 	add	r2,r2,r2
  80b9f8:	1085883a 	add	r2,r2,r2
  80b9fc:	18a1883a 	add	r16,r3,r2
  80ba00:	014000f4 	movhi	r5,3
  80ba04:	297374c4 	addi	r5,r5,-12845
  80ba08:	e13ffc17 	ldw	r4,-16(fp)
  80ba0c:	08305040 	call	830504 <__mulsi3>
  80ba10:	1007883a 	mov	r3,r2
  80ba14:	00a00014 	movui	r2,32768
  80ba18:	1885883a 	add	r2,r3,r2
  80ba1c:	1005d43a 	srai	r2,r2,16
  80ba20:	80800015 	stw	r2,0(r16)
  80ba24:	e0bffd17 	ldw	r2,-12(fp)
  80ba28:	10c00517 	ldw	r3,20(r2)
  80ba2c:	e0bffb17 	ldw	r2,-20(fp)
  80ba30:	1085883a 	add	r2,r2,r2
  80ba34:	1085883a 	add	r2,r2,r2
  80ba38:	18a1883a 	add	r16,r3,r2
  80ba3c:	01400134 	movhi	r5,4
  80ba40:	2962d104 	addi	r5,r5,-29884
  80ba44:	e13ffc17 	ldw	r4,-16(fp)
  80ba48:	08305040 	call	830504 <__mulsi3>
  80ba4c:	1007883a 	mov	r3,r2
  80ba50:	00a00014 	movui	r2,32768
  80ba54:	1885883a 	add	r2,r3,r2
  80ba58:	1005d43a 	srai	r2,r2,16
  80ba5c:	80800015 	stw	r2,0(r16)
  80ba60:	e0bffd17 	ldw	r2,-12(fp)
  80ba64:	10c00617 	ldw	r3,24(r2)
  80ba68:	e0bffb17 	ldw	r2,-20(fp)
  80ba6c:	1085883a 	add	r2,r2,r2
  80ba70:	1085883a 	add	r2,r2,r2
  80ba74:	18a1883a 	add	r16,r3,r2
  80ba78:	017ffff4 	movhi	r5,65535
  80ba7c:	29649744 	addi	r5,r5,-28067
  80ba80:	e13ffc17 	ldw	r4,-16(fp)
  80ba84:	08305040 	call	830504 <__mulsi3>
  80ba88:	80800015 	stw	r2,0(r16)
  80ba8c:	e0bffd17 	ldw	r2,-12(fp)
  80ba90:	10c00717 	ldw	r3,28(r2)
  80ba94:	e0bffb17 	ldw	r2,-20(fp)
  80ba98:	1085883a 	add	r2,r2,r2
  80ba9c:	1085883a 	add	r2,r2,r2
  80baa0:	18a1883a 	add	r16,r3,r2
  80baa4:	017ffff4 	movhi	r5,65535
  80baa8:	2953f344 	addi	r5,r5,20429
  80baac:	e13ffc17 	ldw	r4,-16(fp)
  80bab0:	08305040 	call	830504 <__mulsi3>
  80bab4:	1007883a 	mov	r3,r2
  80bab8:	00a00014 	movui	r2,32768
  80babc:	1885883a 	add	r2,r3,r2
  80bac0:	80800015 	stw	r2,0(r16)
  80bac4:	e0bffb17 	ldw	r2,-20(fp)
  80bac8:	10800044 	addi	r2,r2,1
  80bacc:	e0bffb15 	stw	r2,-20(fp)
  80bad0:	e0bffc17 	ldw	r2,-16(fp)
  80bad4:	10800044 	addi	r2,r2,1
  80bad8:	e0bffc15 	stw	r2,-16(fp)
  80badc:	e0bffb17 	ldw	r2,-20(fp)
  80bae0:	10804010 	cmplti	r2,r2,256
  80bae4:	103fc01e 	bne	r2,zero,80b9e8 <__alt_mem_epcs_flash_controller_0+0xff8029e8>
  80bae8:	0001883a 	nop
  80baec:	e6ffff04 	addi	sp,fp,-4
  80baf0:	dfc00217 	ldw	ra,8(sp)
  80baf4:	df000117 	ldw	fp,4(sp)
  80baf8:	dc000017 	ldw	r16,0(sp)
  80bafc:	dec00304 	addi	sp,sp,12
  80bb00:	f800283a 	ret

0080bb04 <start_pass_merged_upsample>:
  80bb04:	defffd04 	addi	sp,sp,-12
  80bb08:	df000215 	stw	fp,8(sp)
  80bb0c:	df000204 	addi	fp,sp,8
  80bb10:	e13fff15 	stw	r4,-4(fp)
  80bb14:	e0bfff17 	ldw	r2,-4(fp)
  80bb18:	10807717 	ldw	r2,476(r2)
  80bb1c:	e0bffe15 	stw	r2,-8(fp)
  80bb20:	e0bffe17 	ldw	r2,-8(fp)
  80bb24:	10000915 	stw	zero,36(r2)
  80bb28:	e0bfff17 	ldw	r2,-4(fp)
  80bb2c:	10c01d17 	ldw	r3,116(r2)
  80bb30:	e0bffe17 	ldw	r2,-8(fp)
  80bb34:	10c00b15 	stw	r3,44(r2)
  80bb38:	0001883a 	nop
  80bb3c:	e037883a 	mov	sp,fp
  80bb40:	df000017 	ldw	fp,0(sp)
  80bb44:	dec00104 	addi	sp,sp,4
  80bb48:	f800283a 	ret

0080bb4c <merged_2v_upsample>:
  80bb4c:	defff404 	addi	sp,sp,-48
  80bb50:	dfc00b15 	stw	ra,44(sp)
  80bb54:	df000a15 	stw	fp,40(sp)
  80bb58:	df000a04 	addi	fp,sp,40
  80bb5c:	e13ffc15 	stw	r4,-16(fp)
  80bb60:	e17ffd15 	stw	r5,-12(fp)
  80bb64:	e1bffe15 	stw	r6,-8(fp)
  80bb68:	e1ffff15 	stw	r7,-4(fp)
  80bb6c:	e0bffc17 	ldw	r2,-16(fp)
  80bb70:	10807717 	ldw	r2,476(r2)
  80bb74:	e0bff915 	stw	r2,-28(fp)
  80bb78:	e0bff917 	ldw	r2,-28(fp)
  80bb7c:	10800917 	ldw	r2,36(r2)
  80bb80:	10001826 	beq	r2,zero,80bbe4 <merged_2v_upsample+0x98>
  80bb84:	e0bff917 	ldw	r2,-28(fp)
  80bb88:	10c00804 	addi	r3,r2,32
  80bb8c:	e0800317 	ldw	r2,12(fp)
  80bb90:	10800017 	ldw	r2,0(r2)
  80bb94:	1085883a 	add	r2,r2,r2
  80bb98:	1085883a 	add	r2,r2,r2
  80bb9c:	1009883a 	mov	r4,r2
  80bba0:	e0800217 	ldw	r2,8(fp)
  80bba4:	1109883a 	add	r4,r2,r4
  80bba8:	e0bff917 	ldw	r2,-28(fp)
  80bbac:	10800a17 	ldw	r2,40(r2)
  80bbb0:	d8800115 	stw	r2,4(sp)
  80bbb4:	00800044 	movi	r2,1
  80bbb8:	d8800015 	stw	r2,0(sp)
  80bbbc:	000f883a 	mov	r7,zero
  80bbc0:	200d883a 	mov	r6,r4
  80bbc4:	000b883a 	mov	r5,zero
  80bbc8:	1809883a 	mov	r4,r3
  80bbcc:	0813f4c0 	call	813f4c <jcopy_sample_rows>
  80bbd0:	00800044 	movi	r2,1
  80bbd4:	e0bff815 	stw	r2,-32(fp)
  80bbd8:	e0bff917 	ldw	r2,-28(fp)
  80bbdc:	10000915 	stw	zero,36(r2)
  80bbe0:	00003a06 	br	80bccc <merged_2v_upsample+0x180>
  80bbe4:	00800084 	movi	r2,2
  80bbe8:	e0bff815 	stw	r2,-32(fp)
  80bbec:	e0bff917 	ldw	r2,-28(fp)
  80bbf0:	10c00b17 	ldw	r3,44(r2)
  80bbf4:	e0bff817 	ldw	r2,-32(fp)
  80bbf8:	1880032e 	bgeu	r3,r2,80bc08 <merged_2v_upsample+0xbc>
  80bbfc:	e0bff917 	ldw	r2,-28(fp)
  80bc00:	10800b17 	ldw	r2,44(r2)
  80bc04:	e0bff815 	stw	r2,-32(fp)
  80bc08:	e0800317 	ldw	r2,12(fp)
  80bc0c:	10800017 	ldw	r2,0(r2)
  80bc10:	e0c00417 	ldw	r3,16(fp)
  80bc14:	1885c83a 	sub	r2,r3,r2
  80bc18:	e0800415 	stw	r2,16(fp)
  80bc1c:	e0bff817 	ldw	r2,-32(fp)
  80bc20:	e0c00417 	ldw	r3,16(fp)
  80bc24:	1880022e 	bgeu	r3,r2,80bc30 <merged_2v_upsample+0xe4>
  80bc28:	e0800417 	ldw	r2,16(fp)
  80bc2c:	e0bff815 	stw	r2,-32(fp)
  80bc30:	e0800317 	ldw	r2,12(fp)
  80bc34:	10800017 	ldw	r2,0(r2)
  80bc38:	1085883a 	add	r2,r2,r2
  80bc3c:	1085883a 	add	r2,r2,r2
  80bc40:	1007883a 	mov	r3,r2
  80bc44:	e0800217 	ldw	r2,8(fp)
  80bc48:	10c5883a 	add	r2,r2,r3
  80bc4c:	10800017 	ldw	r2,0(r2)
  80bc50:	e0bffa15 	stw	r2,-24(fp)
  80bc54:	e0bff817 	ldw	r2,-32(fp)
  80bc58:	108000b0 	cmpltui	r2,r2,2
  80bc5c:	10000b1e 	bne	r2,zero,80bc8c <merged_2v_upsample+0x140>
  80bc60:	e0800317 	ldw	r2,12(fp)
  80bc64:	10800017 	ldw	r2,0(r2)
  80bc68:	10800044 	addi	r2,r2,1
  80bc6c:	1085883a 	add	r2,r2,r2
  80bc70:	1085883a 	add	r2,r2,r2
  80bc74:	1007883a 	mov	r3,r2
  80bc78:	e0800217 	ldw	r2,8(fp)
  80bc7c:	10c5883a 	add	r2,r2,r3
  80bc80:	10800017 	ldw	r2,0(r2)
  80bc84:	e0bffb15 	stw	r2,-20(fp)
  80bc88:	00000606 	br	80bca4 <merged_2v_upsample+0x158>
  80bc8c:	e0bff917 	ldw	r2,-28(fp)
  80bc90:	10800817 	ldw	r2,32(r2)
  80bc94:	e0bffb15 	stw	r2,-20(fp)
  80bc98:	e0bff917 	ldw	r2,-28(fp)
  80bc9c:	00c00044 	movi	r3,1
  80bca0:	10c00915 	stw	r3,36(r2)
  80bca4:	e0bff917 	ldw	r2,-28(fp)
  80bca8:	10800317 	ldw	r2,12(r2)
  80bcac:	e0fffe17 	ldw	r3,-8(fp)
  80bcb0:	18c00017 	ldw	r3,0(r3)
  80bcb4:	e13ffa04 	addi	r4,fp,-24
  80bcb8:	200f883a 	mov	r7,r4
  80bcbc:	180d883a 	mov	r6,r3
  80bcc0:	e17ffd17 	ldw	r5,-12(fp)
  80bcc4:	e13ffc17 	ldw	r4,-16(fp)
  80bcc8:	103ee83a 	callr	r2
  80bccc:	e0800317 	ldw	r2,12(fp)
  80bcd0:	10c00017 	ldw	r3,0(r2)
  80bcd4:	e0bff817 	ldw	r2,-32(fp)
  80bcd8:	1887883a 	add	r3,r3,r2
  80bcdc:	e0800317 	ldw	r2,12(fp)
  80bce0:	10c00015 	stw	r3,0(r2)
  80bce4:	e0bff917 	ldw	r2,-28(fp)
  80bce8:	10c00b17 	ldw	r3,44(r2)
  80bcec:	e0bff817 	ldw	r2,-32(fp)
  80bcf0:	1887c83a 	sub	r3,r3,r2
  80bcf4:	e0bff917 	ldw	r2,-28(fp)
  80bcf8:	10c00b15 	stw	r3,44(r2)
  80bcfc:	e0bff917 	ldw	r2,-28(fp)
  80bd00:	10800917 	ldw	r2,36(r2)
  80bd04:	1000051e 	bne	r2,zero,80bd1c <merged_2v_upsample+0x1d0>
  80bd08:	e0bffe17 	ldw	r2,-8(fp)
  80bd0c:	10800017 	ldw	r2,0(r2)
  80bd10:	10c00044 	addi	r3,r2,1
  80bd14:	e0bffe17 	ldw	r2,-8(fp)
  80bd18:	10c00015 	stw	r3,0(r2)
  80bd1c:	0001883a 	nop
  80bd20:	e037883a 	mov	sp,fp
  80bd24:	dfc00117 	ldw	ra,4(sp)
  80bd28:	df000017 	ldw	fp,0(sp)
  80bd2c:	dec00204 	addi	sp,sp,8
  80bd30:	f800283a 	ret

0080bd34 <merged_1v_upsample>:
  80bd34:	defff904 	addi	sp,sp,-28
  80bd38:	dfc00615 	stw	ra,24(sp)
  80bd3c:	df000515 	stw	fp,20(sp)
  80bd40:	df000504 	addi	fp,sp,20
  80bd44:	e13ffc15 	stw	r4,-16(fp)
  80bd48:	e17ffd15 	stw	r5,-12(fp)
  80bd4c:	e1bffe15 	stw	r6,-8(fp)
  80bd50:	e1ffff15 	stw	r7,-4(fp)
  80bd54:	e0bffc17 	ldw	r2,-16(fp)
  80bd58:	10807717 	ldw	r2,476(r2)
  80bd5c:	e0bffb15 	stw	r2,-20(fp)
  80bd60:	e0bffb17 	ldw	r2,-20(fp)
  80bd64:	10c00317 	ldw	r3,12(r2)
  80bd68:	e0bffe17 	ldw	r2,-8(fp)
  80bd6c:	11000017 	ldw	r4,0(r2)
  80bd70:	e0800317 	ldw	r2,12(fp)
  80bd74:	10800017 	ldw	r2,0(r2)
  80bd78:	1085883a 	add	r2,r2,r2
  80bd7c:	1085883a 	add	r2,r2,r2
  80bd80:	100b883a 	mov	r5,r2
  80bd84:	e0800217 	ldw	r2,8(fp)
  80bd88:	1145883a 	add	r2,r2,r5
  80bd8c:	100f883a 	mov	r7,r2
  80bd90:	200d883a 	mov	r6,r4
  80bd94:	e17ffd17 	ldw	r5,-12(fp)
  80bd98:	e13ffc17 	ldw	r4,-16(fp)
  80bd9c:	183ee83a 	callr	r3
  80bda0:	e0800317 	ldw	r2,12(fp)
  80bda4:	10800017 	ldw	r2,0(r2)
  80bda8:	10c00044 	addi	r3,r2,1
  80bdac:	e0800317 	ldw	r2,12(fp)
  80bdb0:	10c00015 	stw	r3,0(r2)
  80bdb4:	e0bffe17 	ldw	r2,-8(fp)
  80bdb8:	10800017 	ldw	r2,0(r2)
  80bdbc:	10c00044 	addi	r3,r2,1
  80bdc0:	e0bffe17 	ldw	r2,-8(fp)
  80bdc4:	10c00015 	stw	r3,0(r2)
  80bdc8:	0001883a 	nop
  80bdcc:	e037883a 	mov	sp,fp
  80bdd0:	dfc00117 	ldw	ra,4(sp)
  80bdd4:	df000017 	ldw	fp,0(sp)
  80bdd8:	dec00204 	addi	sp,sp,8
  80bddc:	f800283a 	ret

0080bde0 <h2v1_merged_upsample>:
  80bde0:	deffea04 	addi	sp,sp,-88
  80bde4:	df001515 	stw	fp,84(sp)
  80bde8:	dd401415 	stw	r21,80(sp)
  80bdec:	dd001315 	stw	r20,76(sp)
  80bdf0:	dcc01215 	stw	r19,72(sp)
  80bdf4:	dc801115 	stw	r18,68(sp)
  80bdf8:	dc401015 	stw	r17,64(sp)
  80bdfc:	dc000f15 	stw	r16,60(sp)
  80be00:	df001504 	addi	fp,sp,84
  80be04:	e13ff615 	stw	r4,-40(fp)
  80be08:	e17ff715 	stw	r5,-36(fp)
  80be0c:	e1bff815 	stw	r6,-32(fp)
  80be10:	e1fff915 	stw	r7,-28(fp)
  80be14:	e0bff617 	ldw	r2,-40(fp)
  80be18:	10807717 	ldw	r2,476(r2)
  80be1c:	e0bfef15 	stw	r2,-68(fp)
  80be20:	e0bff617 	ldw	r2,-40(fp)
  80be24:	14805417 	ldw	r18,336(r2)
  80be28:	e0bfef17 	ldw	r2,-68(fp)
  80be2c:	10800417 	ldw	r2,16(r2)
  80be30:	e0bff015 	stw	r2,-64(fp)
  80be34:	e0bfef17 	ldw	r2,-68(fp)
  80be38:	10800517 	ldw	r2,20(r2)
  80be3c:	e0bff115 	stw	r2,-60(fp)
  80be40:	e0bfef17 	ldw	r2,-68(fp)
  80be44:	10800617 	ldw	r2,24(r2)
  80be48:	e0bff215 	stw	r2,-56(fp)
  80be4c:	e0bfef17 	ldw	r2,-68(fp)
  80be50:	10800717 	ldw	r2,28(r2)
  80be54:	e0bff315 	stw	r2,-52(fp)
  80be58:	e0bff717 	ldw	r2,-36(fp)
  80be5c:	10c00017 	ldw	r3,0(r2)
  80be60:	e0bff817 	ldw	r2,-32(fp)
  80be64:	1085883a 	add	r2,r2,r2
  80be68:	1085883a 	add	r2,r2,r2
  80be6c:	1885883a 	add	r2,r3,r2
  80be70:	10800017 	ldw	r2,0(r2)
  80be74:	e0bfeb15 	stw	r2,-84(fp)
  80be78:	e0bff717 	ldw	r2,-36(fp)
  80be7c:	10800104 	addi	r2,r2,4
  80be80:	10c00017 	ldw	r3,0(r2)
  80be84:	e0bff817 	ldw	r2,-32(fp)
  80be88:	1085883a 	add	r2,r2,r2
  80be8c:	1085883a 	add	r2,r2,r2
  80be90:	1885883a 	add	r2,r3,r2
  80be94:	10800017 	ldw	r2,0(r2)
  80be98:	e0bfec15 	stw	r2,-80(fp)
  80be9c:	e0bff717 	ldw	r2,-36(fp)
  80bea0:	10800204 	addi	r2,r2,8
  80bea4:	10c00017 	ldw	r3,0(r2)
  80bea8:	e0bff817 	ldw	r2,-32(fp)
  80beac:	1085883a 	add	r2,r2,r2
  80beb0:	1085883a 	add	r2,r2,r2
  80beb4:	1885883a 	add	r2,r3,r2
  80beb8:	10800017 	ldw	r2,0(r2)
  80bebc:	e0bfed15 	stw	r2,-76(fp)
  80bec0:	e0bff917 	ldw	r2,-28(fp)
  80bec4:	14000017 	ldw	r16,0(r2)
  80bec8:	e0bff617 	ldw	r2,-40(fp)
  80becc:	10801c17 	ldw	r2,112(r2)
  80bed0:	1004d07a 	srli	r2,r2,1
  80bed4:	e0bfee15 	stw	r2,-72(fp)
  80bed8:	00005506 	br	80c030 <h2v1_merged_upsample+0x250>
  80bedc:	e0bfec17 	ldw	r2,-80(fp)
  80bee0:	10c00044 	addi	r3,r2,1
  80bee4:	e0ffec15 	stw	r3,-80(fp)
  80bee8:	10800003 	ldbu	r2,0(r2)
  80beec:	10803fcc 	andi	r2,r2,255
  80bef0:	e0bff415 	stw	r2,-48(fp)
  80bef4:	e0bfed17 	ldw	r2,-76(fp)
  80bef8:	10c00044 	addi	r3,r2,1
  80befc:	e0ffed15 	stw	r3,-76(fp)
  80bf00:	10800003 	ldbu	r2,0(r2)
  80bf04:	10803fcc 	andi	r2,r2,255
  80bf08:	e0bff515 	stw	r2,-44(fp)
  80bf0c:	e0bff517 	ldw	r2,-44(fp)
  80bf10:	1085883a 	add	r2,r2,r2
  80bf14:	1085883a 	add	r2,r2,r2
  80bf18:	1007883a 	mov	r3,r2
  80bf1c:	e0bff017 	ldw	r2,-64(fp)
  80bf20:	10c5883a 	add	r2,r2,r3
  80bf24:	15400017 	ldw	r21,0(r2)
  80bf28:	e0bff417 	ldw	r2,-48(fp)
  80bf2c:	1085883a 	add	r2,r2,r2
  80bf30:	1085883a 	add	r2,r2,r2
  80bf34:	1007883a 	mov	r3,r2
  80bf38:	e0bff317 	ldw	r2,-52(fp)
  80bf3c:	10c5883a 	add	r2,r2,r3
  80bf40:	10c00017 	ldw	r3,0(r2)
  80bf44:	e0bff517 	ldw	r2,-44(fp)
  80bf48:	1085883a 	add	r2,r2,r2
  80bf4c:	1085883a 	add	r2,r2,r2
  80bf50:	1009883a 	mov	r4,r2
  80bf54:	e0bff217 	ldw	r2,-56(fp)
  80bf58:	1105883a 	add	r2,r2,r4
  80bf5c:	10800017 	ldw	r2,0(r2)
  80bf60:	1885883a 	add	r2,r3,r2
  80bf64:	1029d43a 	srai	r20,r2,16
  80bf68:	e0bff417 	ldw	r2,-48(fp)
  80bf6c:	1085883a 	add	r2,r2,r2
  80bf70:	1085883a 	add	r2,r2,r2
  80bf74:	1007883a 	mov	r3,r2
  80bf78:	e0bff117 	ldw	r2,-60(fp)
  80bf7c:	10c5883a 	add	r2,r2,r3
  80bf80:	14c00017 	ldw	r19,0(r2)
  80bf84:	e0bfeb17 	ldw	r2,-84(fp)
  80bf88:	10c00044 	addi	r3,r2,1
  80bf8c:	e0ffeb15 	stw	r3,-84(fp)
  80bf90:	10800003 	ldbu	r2,0(r2)
  80bf94:	14403fcc 	andi	r17,r2,255
  80bf98:	8d45883a 	add	r2,r17,r21
  80bf9c:	9085883a 	add	r2,r18,r2
  80bfa0:	10800003 	ldbu	r2,0(r2)
  80bfa4:	80800005 	stb	r2,0(r16)
  80bfa8:	80800044 	addi	r2,r16,1
  80bfac:	8d07883a 	add	r3,r17,r20
  80bfb0:	90c7883a 	add	r3,r18,r3
  80bfb4:	18c00003 	ldbu	r3,0(r3)
  80bfb8:	10c00005 	stb	r3,0(r2)
  80bfbc:	80800084 	addi	r2,r16,2
  80bfc0:	8cc7883a 	add	r3,r17,r19
  80bfc4:	90c7883a 	add	r3,r18,r3
  80bfc8:	18c00003 	ldbu	r3,0(r3)
  80bfcc:	10c00005 	stb	r3,0(r2)
  80bfd0:	840000c4 	addi	r16,r16,3
  80bfd4:	e0bfeb17 	ldw	r2,-84(fp)
  80bfd8:	10c00044 	addi	r3,r2,1
  80bfdc:	e0ffeb15 	stw	r3,-84(fp)
  80bfe0:	10800003 	ldbu	r2,0(r2)
  80bfe4:	14403fcc 	andi	r17,r2,255
  80bfe8:	8d45883a 	add	r2,r17,r21
  80bfec:	9085883a 	add	r2,r18,r2
  80bff0:	10800003 	ldbu	r2,0(r2)
  80bff4:	80800005 	stb	r2,0(r16)
  80bff8:	80800044 	addi	r2,r16,1
  80bffc:	8d07883a 	add	r3,r17,r20
  80c000:	90c7883a 	add	r3,r18,r3
  80c004:	18c00003 	ldbu	r3,0(r3)
  80c008:	10c00005 	stb	r3,0(r2)
  80c00c:	80800084 	addi	r2,r16,2
  80c010:	8cc7883a 	add	r3,r17,r19
  80c014:	90c7883a 	add	r3,r18,r3
  80c018:	18c00003 	ldbu	r3,0(r3)
  80c01c:	10c00005 	stb	r3,0(r2)
  80c020:	840000c4 	addi	r16,r16,3
  80c024:	e0bfee17 	ldw	r2,-72(fp)
  80c028:	10bfffc4 	addi	r2,r2,-1
  80c02c:	e0bfee15 	stw	r2,-72(fp)
  80c030:	e0bfee17 	ldw	r2,-72(fp)
  80c034:	103fa91e 	bne	r2,zero,80bedc <__alt_mem_epcs_flash_controller_0+0xff802edc>
  80c038:	e0bff617 	ldw	r2,-40(fp)
  80c03c:	10801c17 	ldw	r2,112(r2)
  80c040:	1080004c 	andi	r2,r2,1
  80c044:	10003726 	beq	r2,zero,80c124 <h2v1_merged_upsample+0x344>
  80c048:	e0bfec17 	ldw	r2,-80(fp)
  80c04c:	10800003 	ldbu	r2,0(r2)
  80c050:	10803fcc 	andi	r2,r2,255
  80c054:	e0bff415 	stw	r2,-48(fp)
  80c058:	e0bfed17 	ldw	r2,-76(fp)
  80c05c:	10800003 	ldbu	r2,0(r2)
  80c060:	10803fcc 	andi	r2,r2,255
  80c064:	e0bff515 	stw	r2,-44(fp)
  80c068:	e0bff517 	ldw	r2,-44(fp)
  80c06c:	1085883a 	add	r2,r2,r2
  80c070:	1085883a 	add	r2,r2,r2
  80c074:	1007883a 	mov	r3,r2
  80c078:	e0bff017 	ldw	r2,-64(fp)
  80c07c:	10c5883a 	add	r2,r2,r3
  80c080:	15400017 	ldw	r21,0(r2)
  80c084:	e0bff417 	ldw	r2,-48(fp)
  80c088:	1085883a 	add	r2,r2,r2
  80c08c:	1085883a 	add	r2,r2,r2
  80c090:	1007883a 	mov	r3,r2
  80c094:	e0bff317 	ldw	r2,-52(fp)
  80c098:	10c5883a 	add	r2,r2,r3
  80c09c:	10c00017 	ldw	r3,0(r2)
  80c0a0:	e0bff517 	ldw	r2,-44(fp)
  80c0a4:	1085883a 	add	r2,r2,r2
  80c0a8:	1085883a 	add	r2,r2,r2
  80c0ac:	1009883a 	mov	r4,r2
  80c0b0:	e0bff217 	ldw	r2,-56(fp)
  80c0b4:	1105883a 	add	r2,r2,r4
  80c0b8:	10800017 	ldw	r2,0(r2)
  80c0bc:	1885883a 	add	r2,r3,r2
  80c0c0:	1029d43a 	srai	r20,r2,16
  80c0c4:	e0bff417 	ldw	r2,-48(fp)
  80c0c8:	1085883a 	add	r2,r2,r2
  80c0cc:	1085883a 	add	r2,r2,r2
  80c0d0:	1007883a 	mov	r3,r2
  80c0d4:	e0bff117 	ldw	r2,-60(fp)
  80c0d8:	10c5883a 	add	r2,r2,r3
  80c0dc:	14c00017 	ldw	r19,0(r2)
  80c0e0:	e0bfeb17 	ldw	r2,-84(fp)
  80c0e4:	10800003 	ldbu	r2,0(r2)
  80c0e8:	14403fcc 	andi	r17,r2,255
  80c0ec:	8d45883a 	add	r2,r17,r21
  80c0f0:	9085883a 	add	r2,r18,r2
  80c0f4:	10800003 	ldbu	r2,0(r2)
  80c0f8:	80800005 	stb	r2,0(r16)
  80c0fc:	80800044 	addi	r2,r16,1
  80c100:	8d07883a 	add	r3,r17,r20
  80c104:	90c7883a 	add	r3,r18,r3
  80c108:	18c00003 	ldbu	r3,0(r3)
  80c10c:	10c00005 	stb	r3,0(r2)
  80c110:	80800084 	addi	r2,r16,2
  80c114:	8cc7883a 	add	r3,r17,r19
  80c118:	90c7883a 	add	r3,r18,r3
  80c11c:	18c00003 	ldbu	r3,0(r3)
  80c120:	10c00005 	stb	r3,0(r2)
  80c124:	0001883a 	nop
  80c128:	e6fffa04 	addi	sp,fp,-24
  80c12c:	df000617 	ldw	fp,24(sp)
  80c130:	dd400517 	ldw	r21,20(sp)
  80c134:	dd000417 	ldw	r20,16(sp)
  80c138:	dcc00317 	ldw	r19,12(sp)
  80c13c:	dc800217 	ldw	r18,8(sp)
  80c140:	dc400117 	ldw	r17,4(sp)
  80c144:	dc000017 	ldw	r16,0(sp)
  80c148:	dec00704 	addi	sp,sp,28
  80c14c:	f800283a 	ret

0080c150 <h2v2_merged_upsample>:
  80c150:	deffe804 	addi	sp,sp,-96
  80c154:	df001715 	stw	fp,92(sp)
  80c158:	dd801615 	stw	r22,88(sp)
  80c15c:	dd401515 	stw	r21,84(sp)
  80c160:	dd001415 	stw	r20,80(sp)
  80c164:	dcc01315 	stw	r19,76(sp)
  80c168:	dc801215 	stw	r18,72(sp)
  80c16c:	dc401115 	stw	r17,68(sp)
  80c170:	dc001015 	stw	r16,64(sp)
  80c174:	df001704 	addi	fp,sp,92
  80c178:	e13ff515 	stw	r4,-44(fp)
  80c17c:	e17ff615 	stw	r5,-40(fp)
  80c180:	e1bff715 	stw	r6,-36(fp)
  80c184:	e1fff815 	stw	r7,-32(fp)
  80c188:	e0bff517 	ldw	r2,-44(fp)
  80c18c:	10807717 	ldw	r2,476(r2)
  80c190:	e0bfee15 	stw	r2,-72(fp)
  80c194:	e0bff517 	ldw	r2,-44(fp)
  80c198:	14405417 	ldw	r17,336(r2)
  80c19c:	e0bfee17 	ldw	r2,-72(fp)
  80c1a0:	10800417 	ldw	r2,16(r2)
  80c1a4:	e0bfef15 	stw	r2,-68(fp)
  80c1a8:	e0bfee17 	ldw	r2,-72(fp)
  80c1ac:	10800517 	ldw	r2,20(r2)
  80c1b0:	e0bff015 	stw	r2,-64(fp)
  80c1b4:	e0bfee17 	ldw	r2,-72(fp)
  80c1b8:	10800617 	ldw	r2,24(r2)
  80c1bc:	e0bff115 	stw	r2,-60(fp)
  80c1c0:	e0bfee17 	ldw	r2,-72(fp)
  80c1c4:	10800717 	ldw	r2,28(r2)
  80c1c8:	e0bff215 	stw	r2,-56(fp)
  80c1cc:	e0bff617 	ldw	r2,-40(fp)
  80c1d0:	10c00017 	ldw	r3,0(r2)
  80c1d4:	e0bff717 	ldw	r2,-36(fp)
  80c1d8:	100490fa 	slli	r2,r2,3
  80c1dc:	1885883a 	add	r2,r3,r2
  80c1e0:	10800017 	ldw	r2,0(r2)
  80c1e4:	e0bfe915 	stw	r2,-92(fp)
  80c1e8:	e0bff617 	ldw	r2,-40(fp)
  80c1ec:	10c00017 	ldw	r3,0(r2)
  80c1f0:	e0bff717 	ldw	r2,-36(fp)
  80c1f4:	100490fa 	slli	r2,r2,3
  80c1f8:	10800104 	addi	r2,r2,4
  80c1fc:	1885883a 	add	r2,r3,r2
  80c200:	10800017 	ldw	r2,0(r2)
  80c204:	e0bfea15 	stw	r2,-88(fp)
  80c208:	e0bff617 	ldw	r2,-40(fp)
  80c20c:	10800104 	addi	r2,r2,4
  80c210:	10c00017 	ldw	r3,0(r2)
  80c214:	e0bff717 	ldw	r2,-36(fp)
  80c218:	1085883a 	add	r2,r2,r2
  80c21c:	1085883a 	add	r2,r2,r2
  80c220:	1885883a 	add	r2,r3,r2
  80c224:	10800017 	ldw	r2,0(r2)
  80c228:	e0bfeb15 	stw	r2,-84(fp)
  80c22c:	e0bff617 	ldw	r2,-40(fp)
  80c230:	10800204 	addi	r2,r2,8
  80c234:	10c00017 	ldw	r3,0(r2)
  80c238:	e0bff717 	ldw	r2,-36(fp)
  80c23c:	1085883a 	add	r2,r2,r2
  80c240:	1085883a 	add	r2,r2,r2
  80c244:	1885883a 	add	r2,r3,r2
  80c248:	10800017 	ldw	r2,0(r2)
  80c24c:	e0bfec15 	stw	r2,-80(fp)
  80c250:	e0bff817 	ldw	r2,-32(fp)
  80c254:	14c00017 	ldw	r19,0(r2)
  80c258:	e0bff817 	ldw	r2,-32(fp)
  80c25c:	14800117 	ldw	r18,4(r2)
  80c260:	e0bff517 	ldw	r2,-44(fp)
  80c264:	10801c17 	ldw	r2,112(r2)
  80c268:	1004d07a 	srli	r2,r2,1
  80c26c:	e0bfed15 	stw	r2,-76(fp)
  80c270:	00007d06 	br	80c468 <h2v2_merged_upsample+0x318>
  80c274:	e0bfeb17 	ldw	r2,-84(fp)
  80c278:	10c00044 	addi	r3,r2,1
  80c27c:	e0ffeb15 	stw	r3,-84(fp)
  80c280:	10800003 	ldbu	r2,0(r2)
  80c284:	10803fcc 	andi	r2,r2,255
  80c288:	e0bff315 	stw	r2,-52(fp)
  80c28c:	e0bfec17 	ldw	r2,-80(fp)
  80c290:	10c00044 	addi	r3,r2,1
  80c294:	e0ffec15 	stw	r3,-80(fp)
  80c298:	10800003 	ldbu	r2,0(r2)
  80c29c:	10803fcc 	andi	r2,r2,255
  80c2a0:	e0bff415 	stw	r2,-48(fp)
  80c2a4:	e0bff417 	ldw	r2,-48(fp)
  80c2a8:	1085883a 	add	r2,r2,r2
  80c2ac:	1085883a 	add	r2,r2,r2
  80c2b0:	1007883a 	mov	r3,r2
  80c2b4:	e0bfef17 	ldw	r2,-68(fp)
  80c2b8:	10c5883a 	add	r2,r2,r3
  80c2bc:	15800017 	ldw	r22,0(r2)
  80c2c0:	e0bff317 	ldw	r2,-52(fp)
  80c2c4:	1085883a 	add	r2,r2,r2
  80c2c8:	1085883a 	add	r2,r2,r2
  80c2cc:	1007883a 	mov	r3,r2
  80c2d0:	e0bff217 	ldw	r2,-56(fp)
  80c2d4:	10c5883a 	add	r2,r2,r3
  80c2d8:	10c00017 	ldw	r3,0(r2)
  80c2dc:	e0bff417 	ldw	r2,-48(fp)
  80c2e0:	1085883a 	add	r2,r2,r2
  80c2e4:	1085883a 	add	r2,r2,r2
  80c2e8:	1009883a 	mov	r4,r2
  80c2ec:	e0bff117 	ldw	r2,-60(fp)
  80c2f0:	1105883a 	add	r2,r2,r4
  80c2f4:	10800017 	ldw	r2,0(r2)
  80c2f8:	1885883a 	add	r2,r3,r2
  80c2fc:	102bd43a 	srai	r21,r2,16
  80c300:	e0bff317 	ldw	r2,-52(fp)
  80c304:	1085883a 	add	r2,r2,r2
  80c308:	1085883a 	add	r2,r2,r2
  80c30c:	1007883a 	mov	r3,r2
  80c310:	e0bff017 	ldw	r2,-64(fp)
  80c314:	10c5883a 	add	r2,r2,r3
  80c318:	15000017 	ldw	r20,0(r2)
  80c31c:	e0bfe917 	ldw	r2,-92(fp)
  80c320:	10c00044 	addi	r3,r2,1
  80c324:	e0ffe915 	stw	r3,-92(fp)
  80c328:	10800003 	ldbu	r2,0(r2)
  80c32c:	14003fcc 	andi	r16,r2,255
  80c330:	8585883a 	add	r2,r16,r22
  80c334:	8885883a 	add	r2,r17,r2
  80c338:	10800003 	ldbu	r2,0(r2)
  80c33c:	98800005 	stb	r2,0(r19)
  80c340:	98800044 	addi	r2,r19,1
  80c344:	8547883a 	add	r3,r16,r21
  80c348:	88c7883a 	add	r3,r17,r3
  80c34c:	18c00003 	ldbu	r3,0(r3)
  80c350:	10c00005 	stb	r3,0(r2)
  80c354:	98800084 	addi	r2,r19,2
  80c358:	8507883a 	add	r3,r16,r20
  80c35c:	88c7883a 	add	r3,r17,r3
  80c360:	18c00003 	ldbu	r3,0(r3)
  80c364:	10c00005 	stb	r3,0(r2)
  80c368:	9cc000c4 	addi	r19,r19,3
  80c36c:	e0bfe917 	ldw	r2,-92(fp)
  80c370:	10c00044 	addi	r3,r2,1
  80c374:	e0ffe915 	stw	r3,-92(fp)
  80c378:	10800003 	ldbu	r2,0(r2)
  80c37c:	14003fcc 	andi	r16,r2,255
  80c380:	8585883a 	add	r2,r16,r22
  80c384:	8885883a 	add	r2,r17,r2
  80c388:	10800003 	ldbu	r2,0(r2)
  80c38c:	98800005 	stb	r2,0(r19)
  80c390:	98800044 	addi	r2,r19,1
  80c394:	8547883a 	add	r3,r16,r21
  80c398:	88c7883a 	add	r3,r17,r3
  80c39c:	18c00003 	ldbu	r3,0(r3)
  80c3a0:	10c00005 	stb	r3,0(r2)
  80c3a4:	98800084 	addi	r2,r19,2
  80c3a8:	8507883a 	add	r3,r16,r20
  80c3ac:	88c7883a 	add	r3,r17,r3
  80c3b0:	18c00003 	ldbu	r3,0(r3)
  80c3b4:	10c00005 	stb	r3,0(r2)
  80c3b8:	9cc000c4 	addi	r19,r19,3
  80c3bc:	e0bfea17 	ldw	r2,-88(fp)
  80c3c0:	10c00044 	addi	r3,r2,1
  80c3c4:	e0ffea15 	stw	r3,-88(fp)
  80c3c8:	10800003 	ldbu	r2,0(r2)
  80c3cc:	14003fcc 	andi	r16,r2,255
  80c3d0:	8585883a 	add	r2,r16,r22
  80c3d4:	8885883a 	add	r2,r17,r2
  80c3d8:	10800003 	ldbu	r2,0(r2)
  80c3dc:	90800005 	stb	r2,0(r18)
  80c3e0:	90800044 	addi	r2,r18,1
  80c3e4:	8547883a 	add	r3,r16,r21
  80c3e8:	88c7883a 	add	r3,r17,r3
  80c3ec:	18c00003 	ldbu	r3,0(r3)
  80c3f0:	10c00005 	stb	r3,0(r2)
  80c3f4:	90800084 	addi	r2,r18,2
  80c3f8:	8507883a 	add	r3,r16,r20
  80c3fc:	88c7883a 	add	r3,r17,r3
  80c400:	18c00003 	ldbu	r3,0(r3)
  80c404:	10c00005 	stb	r3,0(r2)
  80c408:	948000c4 	addi	r18,r18,3
  80c40c:	e0bfea17 	ldw	r2,-88(fp)
  80c410:	10c00044 	addi	r3,r2,1
  80c414:	e0ffea15 	stw	r3,-88(fp)
  80c418:	10800003 	ldbu	r2,0(r2)
  80c41c:	14003fcc 	andi	r16,r2,255
  80c420:	8585883a 	add	r2,r16,r22
  80c424:	8885883a 	add	r2,r17,r2
  80c428:	10800003 	ldbu	r2,0(r2)
  80c42c:	90800005 	stb	r2,0(r18)
  80c430:	90800044 	addi	r2,r18,1
  80c434:	8547883a 	add	r3,r16,r21
  80c438:	88c7883a 	add	r3,r17,r3
  80c43c:	18c00003 	ldbu	r3,0(r3)
  80c440:	10c00005 	stb	r3,0(r2)
  80c444:	90800084 	addi	r2,r18,2
  80c448:	8507883a 	add	r3,r16,r20
  80c44c:	88c7883a 	add	r3,r17,r3
  80c450:	18c00003 	ldbu	r3,0(r3)
  80c454:	10c00005 	stb	r3,0(r2)
  80c458:	948000c4 	addi	r18,r18,3
  80c45c:	e0bfed17 	ldw	r2,-76(fp)
  80c460:	10bfffc4 	addi	r2,r2,-1
  80c464:	e0bfed15 	stw	r2,-76(fp)
  80c468:	e0bfed17 	ldw	r2,-76(fp)
  80c46c:	103f811e 	bne	r2,zero,80c274 <__alt_mem_epcs_flash_controller_0+0xff803274>
  80c470:	e0bff517 	ldw	r2,-44(fp)
  80c474:	10801c17 	ldw	r2,112(r2)
  80c478:	1080004c 	andi	r2,r2,1
  80c47c:	10004826 	beq	r2,zero,80c5a0 <h2v2_merged_upsample+0x450>
  80c480:	e0bfeb17 	ldw	r2,-84(fp)
  80c484:	10800003 	ldbu	r2,0(r2)
  80c488:	10803fcc 	andi	r2,r2,255
  80c48c:	e0bff315 	stw	r2,-52(fp)
  80c490:	e0bfec17 	ldw	r2,-80(fp)
  80c494:	10800003 	ldbu	r2,0(r2)
  80c498:	10803fcc 	andi	r2,r2,255
  80c49c:	e0bff415 	stw	r2,-48(fp)
  80c4a0:	e0bff417 	ldw	r2,-48(fp)
  80c4a4:	1085883a 	add	r2,r2,r2
  80c4a8:	1085883a 	add	r2,r2,r2
  80c4ac:	1007883a 	mov	r3,r2
  80c4b0:	e0bfef17 	ldw	r2,-68(fp)
  80c4b4:	10c5883a 	add	r2,r2,r3
  80c4b8:	15800017 	ldw	r22,0(r2)
  80c4bc:	e0bff317 	ldw	r2,-52(fp)
  80c4c0:	1085883a 	add	r2,r2,r2
  80c4c4:	1085883a 	add	r2,r2,r2
  80c4c8:	1007883a 	mov	r3,r2
  80c4cc:	e0bff217 	ldw	r2,-56(fp)
  80c4d0:	10c5883a 	add	r2,r2,r3
  80c4d4:	10c00017 	ldw	r3,0(r2)
  80c4d8:	e0bff417 	ldw	r2,-48(fp)
  80c4dc:	1085883a 	add	r2,r2,r2
  80c4e0:	1085883a 	add	r2,r2,r2
  80c4e4:	1009883a 	mov	r4,r2
  80c4e8:	e0bff117 	ldw	r2,-60(fp)
  80c4ec:	1105883a 	add	r2,r2,r4
  80c4f0:	10800017 	ldw	r2,0(r2)
  80c4f4:	1885883a 	add	r2,r3,r2
  80c4f8:	102bd43a 	srai	r21,r2,16
  80c4fc:	e0bff317 	ldw	r2,-52(fp)
  80c500:	1085883a 	add	r2,r2,r2
  80c504:	1085883a 	add	r2,r2,r2
  80c508:	1007883a 	mov	r3,r2
  80c50c:	e0bff017 	ldw	r2,-64(fp)
  80c510:	10c5883a 	add	r2,r2,r3
  80c514:	15000017 	ldw	r20,0(r2)
  80c518:	e0bfe917 	ldw	r2,-92(fp)
  80c51c:	10800003 	ldbu	r2,0(r2)
  80c520:	14003fcc 	andi	r16,r2,255
  80c524:	8585883a 	add	r2,r16,r22
  80c528:	8885883a 	add	r2,r17,r2
  80c52c:	10800003 	ldbu	r2,0(r2)
  80c530:	98800005 	stb	r2,0(r19)
  80c534:	98800044 	addi	r2,r19,1
  80c538:	8547883a 	add	r3,r16,r21
  80c53c:	88c7883a 	add	r3,r17,r3
  80c540:	18c00003 	ldbu	r3,0(r3)
  80c544:	10c00005 	stb	r3,0(r2)
  80c548:	98800084 	addi	r2,r19,2
  80c54c:	8507883a 	add	r3,r16,r20
  80c550:	88c7883a 	add	r3,r17,r3
  80c554:	18c00003 	ldbu	r3,0(r3)
  80c558:	10c00005 	stb	r3,0(r2)
  80c55c:	e0bfea17 	ldw	r2,-88(fp)
  80c560:	10800003 	ldbu	r2,0(r2)
  80c564:	14003fcc 	andi	r16,r2,255
  80c568:	8585883a 	add	r2,r16,r22
  80c56c:	8885883a 	add	r2,r17,r2
  80c570:	10800003 	ldbu	r2,0(r2)
  80c574:	90800005 	stb	r2,0(r18)
  80c578:	90800044 	addi	r2,r18,1
  80c57c:	8547883a 	add	r3,r16,r21
  80c580:	88c7883a 	add	r3,r17,r3
  80c584:	18c00003 	ldbu	r3,0(r3)
  80c588:	10c00005 	stb	r3,0(r2)
  80c58c:	90800084 	addi	r2,r18,2
  80c590:	8507883a 	add	r3,r16,r20
  80c594:	88c7883a 	add	r3,r17,r3
  80c598:	18c00003 	ldbu	r3,0(r3)
  80c59c:	10c00005 	stb	r3,0(r2)
  80c5a0:	0001883a 	nop
  80c5a4:	e6fff904 	addi	sp,fp,-28
  80c5a8:	df000717 	ldw	fp,28(sp)
  80c5ac:	dd800617 	ldw	r22,24(sp)
  80c5b0:	dd400517 	ldw	r21,20(sp)
  80c5b4:	dd000417 	ldw	r20,16(sp)
  80c5b8:	dcc00317 	ldw	r19,12(sp)
  80c5bc:	dc800217 	ldw	r18,8(sp)
  80c5c0:	dc400117 	ldw	r17,4(sp)
  80c5c4:	dc000017 	ldw	r16,0(sp)
  80c5c8:	dec00804 	addi	sp,sp,32
  80c5cc:	f800283a 	ret

0080c5d0 <jinit_merged_upsampler>:
  80c5d0:	defffc04 	addi	sp,sp,-16
  80c5d4:	dfc00315 	stw	ra,12(sp)
  80c5d8:	df000215 	stw	fp,8(sp)
  80c5dc:	df000204 	addi	fp,sp,8
  80c5e0:	e13fff15 	stw	r4,-4(fp)
  80c5e4:	e0bfff17 	ldw	r2,-4(fp)
  80c5e8:	10800117 	ldw	r2,4(r2)
  80c5ec:	10800017 	ldw	r2,0(r2)
  80c5f0:	01800c04 	movi	r6,48
  80c5f4:	01400044 	movi	r5,1
  80c5f8:	e13fff17 	ldw	r4,-4(fp)
  80c5fc:	103ee83a 	callr	r2
  80c600:	e0bffe15 	stw	r2,-8(fp)
  80c604:	e0fffe17 	ldw	r3,-8(fp)
  80c608:	e0bfff17 	ldw	r2,-4(fp)
  80c60c:	10c07715 	stw	r3,476(r2)
  80c610:	e0fffe17 	ldw	r3,-8(fp)
  80c614:	00802074 	movhi	r2,129
  80c618:	10aec104 	addi	r2,r2,-17660
  80c61c:	18800015 	stw	r2,0(r3)
  80c620:	e0bffe17 	ldw	r2,-8(fp)
  80c624:	10000215 	stw	zero,8(r2)
  80c628:	e0bfff17 	ldw	r2,-4(fp)
  80c62c:	10c01c17 	ldw	r3,112(r2)
  80c630:	e0bfff17 	ldw	r2,-4(fp)
  80c634:	10801e17 	ldw	r2,120(r2)
  80c638:	100b883a 	mov	r5,r2
  80c63c:	1809883a 	mov	r4,r3
  80c640:	08305040 	call	830504 <__mulsi3>
  80c644:	1007883a 	mov	r3,r2
  80c648:	e0bffe17 	ldw	r2,-8(fp)
  80c64c:	10c00a15 	stw	r3,40(r2)
  80c650:	e0bfff17 	ldw	r2,-4(fp)
  80c654:	10805017 	ldw	r2,320(r2)
  80c658:	10800098 	cmpnei	r2,r2,2
  80c65c:	1000151e 	bne	r2,zero,80c6b4 <jinit_merged_upsampler+0xe4>
  80c660:	e0fffe17 	ldw	r3,-8(fp)
  80c664:	00802074 	movhi	r2,129
  80c668:	10aed304 	addi	r2,r2,-17588
  80c66c:	18800115 	stw	r2,4(r3)
  80c670:	e0fffe17 	ldw	r3,-8(fp)
  80c674:	00802074 	movhi	r2,129
  80c678:	10b05404 	addi	r2,r2,-16048
  80c67c:	18800315 	stw	r2,12(r3)
  80c680:	e0bfff17 	ldw	r2,-4(fp)
  80c684:	10800117 	ldw	r2,4(r2)
  80c688:	10800117 	ldw	r2,4(r2)
  80c68c:	e0fffe17 	ldw	r3,-8(fp)
  80c690:	18c00a17 	ldw	r3,40(r3)
  80c694:	180d883a 	mov	r6,r3
  80c698:	01400044 	movi	r5,1
  80c69c:	e13fff17 	ldw	r4,-4(fp)
  80c6a0:	103ee83a 	callr	r2
  80c6a4:	1007883a 	mov	r3,r2
  80c6a8:	e0bffe17 	ldw	r2,-8(fp)
  80c6ac:	10c00815 	stw	r3,32(r2)
  80c6b0:	00000a06 	br	80c6dc <jinit_merged_upsampler+0x10c>
  80c6b4:	e0fffe17 	ldw	r3,-8(fp)
  80c6b8:	00802074 	movhi	r2,129
  80c6bc:	10af4d04 	addi	r2,r2,-17100
  80c6c0:	18800115 	stw	r2,4(r3)
  80c6c4:	e0fffe17 	ldw	r3,-8(fp)
  80c6c8:	00802074 	movhi	r2,129
  80c6cc:	10af7804 	addi	r2,r2,-16928
  80c6d0:	18800315 	stw	r2,12(r3)
  80c6d4:	e0bffe17 	ldw	r2,-8(fp)
  80c6d8:	10000815 	stw	zero,32(r2)
  80c6dc:	e0bfff17 	ldw	r2,-4(fp)
  80c6e0:	10800a17 	ldw	r2,40(r2)
  80c6e4:	108001d8 	cmpnei	r2,r2,7
  80c6e8:	1000031e 	bne	r2,zero,80c6f8 <jinit_merged_upsampler+0x128>
  80c6ec:	e13fff17 	ldw	r4,-4(fp)
  80c6f0:	080b9140 	call	80b914 <build_bg_ycc_rgb_table>
  80c6f4:	00000206 	br	80c700 <jinit_merged_upsampler+0x130>
  80c6f8:	e13fff17 	ldw	r4,-4(fp)
  80c6fc:	080b7280 	call	80b728 <build_ycc_rgb_table>
  80c700:	0001883a 	nop
  80c704:	e037883a 	mov	sp,fp
  80c708:	dfc00117 	ldw	ra,4(sp)
  80c70c:	df000017 	ldw	fp,0(sp)
  80c710:	dec00204 	addi	sp,sp,8
  80c714:	f800283a 	ret

0080c718 <start_pass_dpost>:
  80c718:	defffa04 	addi	sp,sp,-24
  80c71c:	dfc00515 	stw	ra,20(sp)
  80c720:	df000415 	stw	fp,16(sp)
  80c724:	df000404 	addi	fp,sp,16
  80c728:	e13ffe15 	stw	r4,-8(fp)
  80c72c:	e17fff15 	stw	r5,-4(fp)
  80c730:	e0bffe17 	ldw	r2,-8(fp)
  80c734:	10807217 	ldw	r2,456(r2)
  80c738:	e0bffd15 	stw	r2,-12(fp)
  80c73c:	e0bfff17 	ldw	r2,-4(fp)
  80c740:	10c000a0 	cmpeqi	r3,r2,2
  80c744:	1800361e 	bne	r3,zero,80c820 <start_pass_dpost+0x108>
  80c748:	10c000e0 	cmpeqi	r3,r2,3
  80c74c:	1800231e 	bne	r3,zero,80c7dc <start_pass_dpost+0xc4>
  80c750:	1000441e 	bne	r2,zero,80c864 <start_pass_dpost+0x14c>
  80c754:	e0bffe17 	ldw	r2,-8(fp)
  80c758:	10801517 	ldw	r2,84(r2)
  80c75c:	10001926 	beq	r2,zero,80c7c4 <start_pass_dpost+0xac>
  80c760:	e0fffd17 	ldw	r3,-12(fp)
  80c764:	00802074 	movhi	r2,129
  80c768:	10b23004 	addi	r2,r2,-14144
  80c76c:	18800115 	stw	r2,4(r3)
  80c770:	e0bffd17 	ldw	r2,-12(fp)
  80c774:	10800317 	ldw	r2,12(r2)
  80c778:	1000441e 	bne	r2,zero,80c88c <start_pass_dpost+0x174>
  80c77c:	e0bffe17 	ldw	r2,-8(fp)
  80c780:	10800117 	ldw	r2,4(r2)
  80c784:	10800717 	ldw	r2,28(r2)
  80c788:	e0fffd17 	ldw	r3,-12(fp)
  80c78c:	19000217 	ldw	r4,8(r3)
  80c790:	e0fffd17 	ldw	r3,-12(fp)
  80c794:	19400417 	ldw	r5,16(r3)
  80c798:	00c00044 	movi	r3,1
  80c79c:	d8c00015 	stw	r3,0(sp)
  80c7a0:	280f883a 	mov	r7,r5
  80c7a4:	000d883a 	mov	r6,zero
  80c7a8:	200b883a 	mov	r5,r4
  80c7ac:	e13ffe17 	ldw	r4,-8(fp)
  80c7b0:	103ee83a 	callr	r2
  80c7b4:	1007883a 	mov	r3,r2
  80c7b8:	e0bffd17 	ldw	r2,-12(fp)
  80c7bc:	10c00315 	stw	r3,12(r2)
  80c7c0:	00003206 	br	80c88c <start_pass_dpost+0x174>
  80c7c4:	e0bffe17 	ldw	r2,-8(fp)
  80c7c8:	10807717 	ldw	r2,476(r2)
  80c7cc:	10c00117 	ldw	r3,4(r2)
  80c7d0:	e0bffd17 	ldw	r2,-12(fp)
  80c7d4:	10c00115 	stw	r3,4(r2)
  80c7d8:	00002c06 	br	80c88c <start_pass_dpost+0x174>
  80c7dc:	e0bffd17 	ldw	r2,-12(fp)
  80c7e0:	10800217 	ldw	r2,8(r2)
  80c7e4:	1000091e 	bne	r2,zero,80c80c <start_pass_dpost+0xf4>
  80c7e8:	e0bffe17 	ldw	r2,-8(fp)
  80c7ec:	10800017 	ldw	r2,0(r2)
  80c7f0:	00c000c4 	movi	r3,3
  80c7f4:	10c00515 	stw	r3,20(r2)
  80c7f8:	e0bffe17 	ldw	r2,-8(fp)
  80c7fc:	10800017 	ldw	r2,0(r2)
  80c800:	10800017 	ldw	r2,0(r2)
  80c804:	e13ffe17 	ldw	r4,-8(fp)
  80c808:	103ee83a 	callr	r2
  80c80c:	e0fffd17 	ldw	r3,-12(fp)
  80c810:	00802074 	movhi	r2,129
  80c814:	10b27504 	addi	r2,r2,-13868
  80c818:	18800115 	stw	r2,4(r3)
  80c81c:	00001c06 	br	80c890 <start_pass_dpost+0x178>
  80c820:	e0bffd17 	ldw	r2,-12(fp)
  80c824:	10800217 	ldw	r2,8(r2)
  80c828:	1000091e 	bne	r2,zero,80c850 <start_pass_dpost+0x138>
  80c82c:	e0bffe17 	ldw	r2,-8(fp)
  80c830:	10800017 	ldw	r2,0(r2)
  80c834:	00c000c4 	movi	r3,3
  80c838:	10c00515 	stw	r3,20(r2)
  80c83c:	e0bffe17 	ldw	r2,-8(fp)
  80c840:	10800017 	ldw	r2,0(r2)
  80c844:	10800017 	ldw	r2,0(r2)
  80c848:	e13ffe17 	ldw	r4,-8(fp)
  80c84c:	103ee83a 	callr	r2
  80c850:	e0fffd17 	ldw	r3,-12(fp)
  80c854:	00802074 	movhi	r2,129
  80c858:	10b2dc04 	addi	r2,r2,-13456
  80c85c:	18800115 	stw	r2,4(r3)
  80c860:	00000b06 	br	80c890 <start_pass_dpost+0x178>
  80c864:	e0bffe17 	ldw	r2,-8(fp)
  80c868:	10800017 	ldw	r2,0(r2)
  80c86c:	00c000c4 	movi	r3,3
  80c870:	10c00515 	stw	r3,20(r2)
  80c874:	e0bffe17 	ldw	r2,-8(fp)
  80c878:	10800017 	ldw	r2,0(r2)
  80c87c:	10800017 	ldw	r2,0(r2)
  80c880:	e13ffe17 	ldw	r4,-8(fp)
  80c884:	103ee83a 	callr	r2
  80c888:	00000106 	br	80c890 <start_pass_dpost+0x178>
  80c88c:	0001883a 	nop
  80c890:	e0bffd17 	ldw	r2,-12(fp)
  80c894:	10000615 	stw	zero,24(r2)
  80c898:	e0bffd17 	ldw	r2,-12(fp)
  80c89c:	10c00617 	ldw	r3,24(r2)
  80c8a0:	e0bffd17 	ldw	r2,-12(fp)
  80c8a4:	10c00515 	stw	r3,20(r2)
  80c8a8:	0001883a 	nop
  80c8ac:	e037883a 	mov	sp,fp
  80c8b0:	dfc00117 	ldw	ra,4(sp)
  80c8b4:	df000017 	ldw	fp,0(sp)
  80c8b8:	dec00204 	addi	sp,sp,8
  80c8bc:	f800283a 	ret

0080c8c0 <post_process_1pass>:
  80c8c0:	defff404 	addi	sp,sp,-48
  80c8c4:	dfc00b15 	stw	ra,44(sp)
  80c8c8:	df000a15 	stw	fp,40(sp)
  80c8cc:	df000a04 	addi	fp,sp,40
  80c8d0:	e13ffc15 	stw	r4,-16(fp)
  80c8d4:	e17ffd15 	stw	r5,-12(fp)
  80c8d8:	e1bffe15 	stw	r6,-8(fp)
  80c8dc:	e1ffff15 	stw	r7,-4(fp)
  80c8e0:	e0bffc17 	ldw	r2,-16(fp)
  80c8e4:	10807217 	ldw	r2,456(r2)
  80c8e8:	e0bffa15 	stw	r2,-24(fp)
  80c8ec:	e0800317 	ldw	r2,12(fp)
  80c8f0:	10800017 	ldw	r2,0(r2)
  80c8f4:	e0c00417 	ldw	r3,16(fp)
  80c8f8:	1885c83a 	sub	r2,r3,r2
  80c8fc:	e0bff915 	stw	r2,-28(fp)
  80c900:	e0bffa17 	ldw	r2,-24(fp)
  80c904:	10c00417 	ldw	r3,16(r2)
  80c908:	e0bff917 	ldw	r2,-28(fp)
  80c90c:	1880032e 	bgeu	r3,r2,80c91c <post_process_1pass+0x5c>
  80c910:	e0bffa17 	ldw	r2,-24(fp)
  80c914:	10800417 	ldw	r2,16(r2)
  80c918:	e0bff915 	stw	r2,-28(fp)
  80c91c:	e03ffb15 	stw	zero,-20(fp)
  80c920:	e0bffc17 	ldw	r2,-16(fp)
  80c924:	10807717 	ldw	r2,476(r2)
  80c928:	10800117 	ldw	r2,4(r2)
  80c92c:	e0fffa17 	ldw	r3,-24(fp)
  80c930:	18c00317 	ldw	r3,12(r3)
  80c934:	e13ff917 	ldw	r4,-28(fp)
  80c938:	d9000215 	stw	r4,8(sp)
  80c93c:	e13ffb04 	addi	r4,fp,-20
  80c940:	d9000115 	stw	r4,4(sp)
  80c944:	d8c00015 	stw	r3,0(sp)
  80c948:	e1ffff17 	ldw	r7,-4(fp)
  80c94c:	e1bffe17 	ldw	r6,-8(fp)
  80c950:	e17ffd17 	ldw	r5,-12(fp)
  80c954:	e13ffc17 	ldw	r4,-16(fp)
  80c958:	103ee83a 	callr	r2
  80c95c:	e0bffc17 	ldw	r2,-16(fp)
  80c960:	10807917 	ldw	r2,484(r2)
  80c964:	10c00117 	ldw	r3,4(r2)
  80c968:	e0bffa17 	ldw	r2,-24(fp)
  80c96c:	11000317 	ldw	r4,12(r2)
  80c970:	e0800317 	ldw	r2,12(fp)
  80c974:	10800017 	ldw	r2,0(r2)
  80c978:	1085883a 	add	r2,r2,r2
  80c97c:	1085883a 	add	r2,r2,r2
  80c980:	100b883a 	mov	r5,r2
  80c984:	e0800217 	ldw	r2,8(fp)
  80c988:	1145883a 	add	r2,r2,r5
  80c98c:	e17ffb17 	ldw	r5,-20(fp)
  80c990:	280f883a 	mov	r7,r5
  80c994:	100d883a 	mov	r6,r2
  80c998:	200b883a 	mov	r5,r4
  80c99c:	e13ffc17 	ldw	r4,-16(fp)
  80c9a0:	183ee83a 	callr	r3
  80c9a4:	e0800317 	ldw	r2,12(fp)
  80c9a8:	10c00017 	ldw	r3,0(r2)
  80c9ac:	e0bffb17 	ldw	r2,-20(fp)
  80c9b0:	1887883a 	add	r3,r3,r2
  80c9b4:	e0800317 	ldw	r2,12(fp)
  80c9b8:	10c00015 	stw	r3,0(r2)
  80c9bc:	0001883a 	nop
  80c9c0:	e037883a 	mov	sp,fp
  80c9c4:	dfc00117 	ldw	ra,4(sp)
  80c9c8:	df000017 	ldw	fp,0(sp)
  80c9cc:	dec00204 	addi	sp,sp,8
  80c9d0:	f800283a 	ret

0080c9d4 <post_process_prepass>:
  80c9d4:	defff404 	addi	sp,sp,-48
  80c9d8:	dfc00b15 	stw	ra,44(sp)
  80c9dc:	df000a15 	stw	fp,40(sp)
  80c9e0:	df000a04 	addi	fp,sp,40
  80c9e4:	e13ffc15 	stw	r4,-16(fp)
  80c9e8:	e17ffd15 	stw	r5,-12(fp)
  80c9ec:	e1bffe15 	stw	r6,-8(fp)
  80c9f0:	e1ffff15 	stw	r7,-4(fp)
  80c9f4:	e0bffc17 	ldw	r2,-16(fp)
  80c9f8:	10807217 	ldw	r2,456(r2)
  80c9fc:	e0bff915 	stw	r2,-28(fp)
  80ca00:	e0bff917 	ldw	r2,-28(fp)
  80ca04:	10800617 	ldw	r2,24(r2)
  80ca08:	1000131e 	bne	r2,zero,80ca58 <post_process_prepass+0x84>
  80ca0c:	e0bffc17 	ldw	r2,-16(fp)
  80ca10:	10800117 	ldw	r2,4(r2)
  80ca14:	10800717 	ldw	r2,28(r2)
  80ca18:	e0fff917 	ldw	r3,-28(fp)
  80ca1c:	19000217 	ldw	r4,8(r3)
  80ca20:	e0fff917 	ldw	r3,-28(fp)
  80ca24:	19400517 	ldw	r5,20(r3)
  80ca28:	e0fff917 	ldw	r3,-28(fp)
  80ca2c:	19800417 	ldw	r6,16(r3)
  80ca30:	00c00044 	movi	r3,1
  80ca34:	d8c00015 	stw	r3,0(sp)
  80ca38:	300f883a 	mov	r7,r6
  80ca3c:	280d883a 	mov	r6,r5
  80ca40:	200b883a 	mov	r5,r4
  80ca44:	e13ffc17 	ldw	r4,-16(fp)
  80ca48:	103ee83a 	callr	r2
  80ca4c:	1007883a 	mov	r3,r2
  80ca50:	e0bff917 	ldw	r2,-28(fp)
  80ca54:	10c00315 	stw	r3,12(r2)
  80ca58:	e0bff917 	ldw	r2,-28(fp)
  80ca5c:	10800617 	ldw	r2,24(r2)
  80ca60:	e0bffa15 	stw	r2,-24(fp)
  80ca64:	e0bffc17 	ldw	r2,-16(fp)
  80ca68:	10807717 	ldw	r2,476(r2)
  80ca6c:	10800117 	ldw	r2,4(r2)
  80ca70:	e0fff917 	ldw	r3,-28(fp)
  80ca74:	18c00317 	ldw	r3,12(r3)
  80ca78:	e13ff917 	ldw	r4,-28(fp)
  80ca7c:	21000604 	addi	r4,r4,24
  80ca80:	e17ff917 	ldw	r5,-28(fp)
  80ca84:	29400417 	ldw	r5,16(r5)
  80ca88:	d9400215 	stw	r5,8(sp)
  80ca8c:	d9000115 	stw	r4,4(sp)
  80ca90:	d8c00015 	stw	r3,0(sp)
  80ca94:	e1ffff17 	ldw	r7,-4(fp)
  80ca98:	e1bffe17 	ldw	r6,-8(fp)
  80ca9c:	e17ffd17 	ldw	r5,-12(fp)
  80caa0:	e13ffc17 	ldw	r4,-16(fp)
  80caa4:	103ee83a 	callr	r2
  80caa8:	e0bff917 	ldw	r2,-28(fp)
  80caac:	10800617 	ldw	r2,24(r2)
  80cab0:	e0fffa17 	ldw	r3,-24(fp)
  80cab4:	18801a2e 	bgeu	r3,r2,80cb20 <post_process_prepass+0x14c>
  80cab8:	e0bff917 	ldw	r2,-28(fp)
  80cabc:	10c00617 	ldw	r3,24(r2)
  80cac0:	e0bffa17 	ldw	r2,-24(fp)
  80cac4:	1885c83a 	sub	r2,r3,r2
  80cac8:	e0bffb15 	stw	r2,-20(fp)
  80cacc:	e0bffc17 	ldw	r2,-16(fp)
  80cad0:	10807917 	ldw	r2,484(r2)
  80cad4:	10c00117 	ldw	r3,4(r2)
  80cad8:	e0bff917 	ldw	r2,-28(fp)
  80cadc:	11000317 	ldw	r4,12(r2)
  80cae0:	e0bffa17 	ldw	r2,-24(fp)
  80cae4:	1085883a 	add	r2,r2,r2
  80cae8:	1085883a 	add	r2,r2,r2
  80caec:	2085883a 	add	r2,r4,r2
  80caf0:	e13ffb17 	ldw	r4,-20(fp)
  80caf4:	200f883a 	mov	r7,r4
  80caf8:	000d883a 	mov	r6,zero
  80cafc:	100b883a 	mov	r5,r2
  80cb00:	e13ffc17 	ldw	r4,-16(fp)
  80cb04:	183ee83a 	callr	r3
  80cb08:	e0800317 	ldw	r2,12(fp)
  80cb0c:	10c00017 	ldw	r3,0(r2)
  80cb10:	e0bffb17 	ldw	r2,-20(fp)
  80cb14:	1887883a 	add	r3,r3,r2
  80cb18:	e0800317 	ldw	r2,12(fp)
  80cb1c:	10c00015 	stw	r3,0(r2)
  80cb20:	e0bff917 	ldw	r2,-28(fp)
  80cb24:	10c00617 	ldw	r3,24(r2)
  80cb28:	e0bff917 	ldw	r2,-28(fp)
  80cb2c:	10800417 	ldw	r2,16(r2)
  80cb30:	18800936 	bltu	r3,r2,80cb58 <post_process_prepass+0x184>
  80cb34:	e0bff917 	ldw	r2,-28(fp)
  80cb38:	10c00517 	ldw	r3,20(r2)
  80cb3c:	e0bff917 	ldw	r2,-28(fp)
  80cb40:	10800417 	ldw	r2,16(r2)
  80cb44:	1887883a 	add	r3,r3,r2
  80cb48:	e0bff917 	ldw	r2,-28(fp)
  80cb4c:	10c00515 	stw	r3,20(r2)
  80cb50:	e0bff917 	ldw	r2,-28(fp)
  80cb54:	10000615 	stw	zero,24(r2)
  80cb58:	0001883a 	nop
  80cb5c:	e037883a 	mov	sp,fp
  80cb60:	dfc00117 	ldw	ra,4(sp)
  80cb64:	df000017 	ldw	fp,0(sp)
  80cb68:	dec00204 	addi	sp,sp,8
  80cb6c:	f800283a 	ret

0080cb70 <post_process_2pass>:
  80cb70:	defff604 	addi	sp,sp,-40
  80cb74:	dfc00915 	stw	ra,36(sp)
  80cb78:	df000815 	stw	fp,32(sp)
  80cb7c:	df000804 	addi	fp,sp,32
  80cb80:	e13ffc15 	stw	r4,-16(fp)
  80cb84:	e17ffd15 	stw	r5,-12(fp)
  80cb88:	e1bffe15 	stw	r6,-8(fp)
  80cb8c:	e1ffff15 	stw	r7,-4(fp)
  80cb90:	e0bffc17 	ldw	r2,-16(fp)
  80cb94:	10807217 	ldw	r2,456(r2)
  80cb98:	e0bffa15 	stw	r2,-24(fp)
  80cb9c:	e0bffa17 	ldw	r2,-24(fp)
  80cba0:	10800617 	ldw	r2,24(r2)
  80cba4:	1000121e 	bne	r2,zero,80cbf0 <post_process_2pass+0x80>
  80cba8:	e0bffc17 	ldw	r2,-16(fp)
  80cbac:	10800117 	ldw	r2,4(r2)
  80cbb0:	10800717 	ldw	r2,28(r2)
  80cbb4:	e0fffa17 	ldw	r3,-24(fp)
  80cbb8:	19000217 	ldw	r4,8(r3)
  80cbbc:	e0fffa17 	ldw	r3,-24(fp)
  80cbc0:	19400517 	ldw	r5,20(r3)
  80cbc4:	e0fffa17 	ldw	r3,-24(fp)
  80cbc8:	18c00417 	ldw	r3,16(r3)
  80cbcc:	d8000015 	stw	zero,0(sp)
  80cbd0:	180f883a 	mov	r7,r3
  80cbd4:	280d883a 	mov	r6,r5
  80cbd8:	200b883a 	mov	r5,r4
  80cbdc:	e13ffc17 	ldw	r4,-16(fp)
  80cbe0:	103ee83a 	callr	r2
  80cbe4:	1007883a 	mov	r3,r2
  80cbe8:	e0bffa17 	ldw	r2,-24(fp)
  80cbec:	10c00315 	stw	r3,12(r2)
  80cbf0:	e0bffa17 	ldw	r2,-24(fp)
  80cbf4:	10c00417 	ldw	r3,16(r2)
  80cbf8:	e0bffa17 	ldw	r2,-24(fp)
  80cbfc:	10800617 	ldw	r2,24(r2)
  80cc00:	1885c83a 	sub	r2,r3,r2
  80cc04:	e0bff915 	stw	r2,-28(fp)
  80cc08:	e0800317 	ldw	r2,12(fp)
  80cc0c:	10800017 	ldw	r2,0(r2)
  80cc10:	e0c00417 	ldw	r3,16(fp)
  80cc14:	1885c83a 	sub	r2,r3,r2
  80cc18:	e0bffb15 	stw	r2,-20(fp)
  80cc1c:	e0bff917 	ldw	r2,-28(fp)
  80cc20:	e0fffb17 	ldw	r3,-20(fp)
  80cc24:	1880022e 	bgeu	r3,r2,80cc30 <post_process_2pass+0xc0>
  80cc28:	e0bffb17 	ldw	r2,-20(fp)
  80cc2c:	e0bff915 	stw	r2,-28(fp)
  80cc30:	e0bffc17 	ldw	r2,-16(fp)
  80cc34:	10c01d17 	ldw	r3,116(r2)
  80cc38:	e0bffa17 	ldw	r2,-24(fp)
  80cc3c:	10800517 	ldw	r2,20(r2)
  80cc40:	1885c83a 	sub	r2,r3,r2
  80cc44:	e0bffb15 	stw	r2,-20(fp)
  80cc48:	e0bff917 	ldw	r2,-28(fp)
  80cc4c:	e0fffb17 	ldw	r3,-20(fp)
  80cc50:	1880022e 	bgeu	r3,r2,80cc5c <post_process_2pass+0xec>
  80cc54:	e0bffb17 	ldw	r2,-20(fp)
  80cc58:	e0bff915 	stw	r2,-28(fp)
  80cc5c:	e0bffc17 	ldw	r2,-16(fp)
  80cc60:	10807917 	ldw	r2,484(r2)
  80cc64:	10c00117 	ldw	r3,4(r2)
  80cc68:	e0bffa17 	ldw	r2,-24(fp)
  80cc6c:	11000317 	ldw	r4,12(r2)
  80cc70:	e0bffa17 	ldw	r2,-24(fp)
  80cc74:	10800617 	ldw	r2,24(r2)
  80cc78:	1085883a 	add	r2,r2,r2
  80cc7c:	1085883a 	add	r2,r2,r2
  80cc80:	2089883a 	add	r4,r4,r2
  80cc84:	e0800317 	ldw	r2,12(fp)
  80cc88:	10800017 	ldw	r2,0(r2)
  80cc8c:	1085883a 	add	r2,r2,r2
  80cc90:	1085883a 	add	r2,r2,r2
  80cc94:	100b883a 	mov	r5,r2
  80cc98:	e0800217 	ldw	r2,8(fp)
  80cc9c:	1145883a 	add	r2,r2,r5
  80cca0:	e17ff917 	ldw	r5,-28(fp)
  80cca4:	280f883a 	mov	r7,r5
  80cca8:	100d883a 	mov	r6,r2
  80ccac:	200b883a 	mov	r5,r4
  80ccb0:	e13ffc17 	ldw	r4,-16(fp)
  80ccb4:	183ee83a 	callr	r3
  80ccb8:	e0800317 	ldw	r2,12(fp)
  80ccbc:	10c00017 	ldw	r3,0(r2)
  80ccc0:	e0bff917 	ldw	r2,-28(fp)
  80ccc4:	1887883a 	add	r3,r3,r2
  80ccc8:	e0800317 	ldw	r2,12(fp)
  80cccc:	10c00015 	stw	r3,0(r2)
  80ccd0:	e0bffa17 	ldw	r2,-24(fp)
  80ccd4:	10c00617 	ldw	r3,24(r2)
  80ccd8:	e0bff917 	ldw	r2,-28(fp)
  80ccdc:	1887883a 	add	r3,r3,r2
  80cce0:	e0bffa17 	ldw	r2,-24(fp)
  80cce4:	10c00615 	stw	r3,24(r2)
  80cce8:	e0bffa17 	ldw	r2,-24(fp)
  80ccec:	10c00617 	ldw	r3,24(r2)
  80ccf0:	e0bffa17 	ldw	r2,-24(fp)
  80ccf4:	10800417 	ldw	r2,16(r2)
  80ccf8:	18800936 	bltu	r3,r2,80cd20 <post_process_2pass+0x1b0>
  80ccfc:	e0bffa17 	ldw	r2,-24(fp)
  80cd00:	10c00517 	ldw	r3,20(r2)
  80cd04:	e0bffa17 	ldw	r2,-24(fp)
  80cd08:	10800417 	ldw	r2,16(r2)
  80cd0c:	1887883a 	add	r3,r3,r2
  80cd10:	e0bffa17 	ldw	r2,-24(fp)
  80cd14:	10c00515 	stw	r3,20(r2)
  80cd18:	e0bffa17 	ldw	r2,-24(fp)
  80cd1c:	10000615 	stw	zero,24(r2)
  80cd20:	0001883a 	nop
  80cd24:	e037883a 	mov	sp,fp
  80cd28:	dfc00117 	ldw	ra,4(sp)
  80cd2c:	df000017 	ldw	fp,0(sp)
  80cd30:	dec00204 	addi	sp,sp,8
  80cd34:	f800283a 	ret

0080cd38 <jinit_d_post_controller>:
  80cd38:	defff704 	addi	sp,sp,-36
  80cd3c:	dfc00815 	stw	ra,32(sp)
  80cd40:	df000715 	stw	fp,28(sp)
  80cd44:	dc400615 	stw	r17,24(sp)
  80cd48:	dc000515 	stw	r16,20(sp)
  80cd4c:	df000704 	addi	fp,sp,28
  80cd50:	e13ffc15 	stw	r4,-16(fp)
  80cd54:	e17ffd15 	stw	r5,-12(fp)
  80cd58:	e0bffc17 	ldw	r2,-16(fp)
  80cd5c:	10800117 	ldw	r2,4(r2)
  80cd60:	10800017 	ldw	r2,0(r2)
  80cd64:	01800704 	movi	r6,28
  80cd68:	01400044 	movi	r5,1
  80cd6c:	e13ffc17 	ldw	r4,-16(fp)
  80cd70:	103ee83a 	callr	r2
  80cd74:	e0bffb15 	stw	r2,-20(fp)
  80cd78:	e0bffc17 	ldw	r2,-16(fp)
  80cd7c:	e0fffb17 	ldw	r3,-20(fp)
  80cd80:	10c07215 	stw	r3,456(r2)
  80cd84:	e0fffb17 	ldw	r3,-20(fp)
  80cd88:	00802074 	movhi	r2,129
  80cd8c:	10b1c604 	addi	r2,r2,-14568
  80cd90:	18800015 	stw	r2,0(r3)
  80cd94:	e0bffb17 	ldw	r2,-20(fp)
  80cd98:	10000215 	stw	zero,8(r2)
  80cd9c:	e0bffb17 	ldw	r2,-20(fp)
  80cda0:	10000315 	stw	zero,12(r2)
  80cda4:	e0bffc17 	ldw	r2,-16(fp)
  80cda8:	10801517 	ldw	r2,84(r2)
  80cdac:	10003d26 	beq	r2,zero,80cea4 <jinit_d_post_controller+0x16c>
  80cdb0:	e0bffc17 	ldw	r2,-16(fp)
  80cdb4:	10805017 	ldw	r2,320(r2)
  80cdb8:	1007883a 	mov	r3,r2
  80cdbc:	e0bffb17 	ldw	r2,-20(fp)
  80cdc0:	10c00415 	stw	r3,16(r2)
  80cdc4:	e0bffd17 	ldw	r2,-12(fp)
  80cdc8:	10002126 	beq	r2,zero,80ce50 <jinit_d_post_controller+0x118>
  80cdcc:	e0bffc17 	ldw	r2,-16(fp)
  80cdd0:	10800117 	ldw	r2,4(r2)
  80cdd4:	14000417 	ldw	r16,16(r2)
  80cdd8:	e0bffc17 	ldw	r2,-16(fp)
  80cddc:	10c01c17 	ldw	r3,112(r2)
  80cde0:	e0bffc17 	ldw	r2,-16(fp)
  80cde4:	10801e17 	ldw	r2,120(r2)
  80cde8:	100b883a 	mov	r5,r2
  80cdec:	1809883a 	mov	r4,r3
  80cdf0:	08305040 	call	830504 <__mulsi3>
  80cdf4:	1023883a 	mov	r17,r2
  80cdf8:	e0bffc17 	ldw	r2,-16(fp)
  80cdfc:	10801d17 	ldw	r2,116(r2)
  80ce00:	1007883a 	mov	r3,r2
  80ce04:	e0bffb17 	ldw	r2,-20(fp)
  80ce08:	10800417 	ldw	r2,16(r2)
  80ce0c:	100b883a 	mov	r5,r2
  80ce10:	1809883a 	mov	r4,r3
  80ce14:	0813ef00 	call	813ef0 <jround_up>
  80ce18:	1007883a 	mov	r3,r2
  80ce1c:	e0bffb17 	ldw	r2,-20(fp)
  80ce20:	10800417 	ldw	r2,16(r2)
  80ce24:	d8800115 	stw	r2,4(sp)
  80ce28:	d8c00015 	stw	r3,0(sp)
  80ce2c:	880f883a 	mov	r7,r17
  80ce30:	000d883a 	mov	r6,zero
  80ce34:	01400044 	movi	r5,1
  80ce38:	e13ffc17 	ldw	r4,-16(fp)
  80ce3c:	803ee83a 	callr	r16
  80ce40:	1007883a 	mov	r3,r2
  80ce44:	e0bffb17 	ldw	r2,-20(fp)
  80ce48:	10c00215 	stw	r3,8(r2)
  80ce4c:	00001506 	br	80cea4 <jinit_d_post_controller+0x16c>
  80ce50:	e0bffc17 	ldw	r2,-16(fp)
  80ce54:	10800117 	ldw	r2,4(r2)
  80ce58:	14000217 	ldw	r16,8(r2)
  80ce5c:	e0bffc17 	ldw	r2,-16(fp)
  80ce60:	10c01c17 	ldw	r3,112(r2)
  80ce64:	e0bffc17 	ldw	r2,-16(fp)
  80ce68:	10801e17 	ldw	r2,120(r2)
  80ce6c:	100b883a 	mov	r5,r2
  80ce70:	1809883a 	mov	r4,r3
  80ce74:	08305040 	call	830504 <__mulsi3>
  80ce78:	1007883a 	mov	r3,r2
  80ce7c:	e0bffb17 	ldw	r2,-20(fp)
  80ce80:	10800417 	ldw	r2,16(r2)
  80ce84:	100f883a 	mov	r7,r2
  80ce88:	180d883a 	mov	r6,r3
  80ce8c:	01400044 	movi	r5,1
  80ce90:	e13ffc17 	ldw	r4,-16(fp)
  80ce94:	803ee83a 	callr	r16
  80ce98:	1007883a 	mov	r3,r2
  80ce9c:	e0bffb17 	ldw	r2,-20(fp)
  80cea0:	10c00315 	stw	r3,12(r2)
  80cea4:	0001883a 	nop
  80cea8:	e6fffe04 	addi	sp,fp,-8
  80ceac:	dfc00317 	ldw	ra,12(sp)
  80ceb0:	df000217 	ldw	fp,8(sp)
  80ceb4:	dc400117 	ldw	r17,4(sp)
  80ceb8:	dc000017 	ldw	r16,0(sp)
  80cebc:	dec00404 	addi	sp,sp,16
  80cec0:	f800283a 	ret

0080cec4 <start_pass_upsample>:
  80cec4:	defffd04 	addi	sp,sp,-12
  80cec8:	df000215 	stw	fp,8(sp)
  80cecc:	df000204 	addi	fp,sp,8
  80ced0:	e13fff15 	stw	r4,-4(fp)
  80ced4:	e0bfff17 	ldw	r2,-4(fp)
  80ced8:	10807717 	ldw	r2,476(r2)
  80cedc:	e0bffe15 	stw	r2,-8(fp)
  80cee0:	e0bfff17 	ldw	r2,-4(fp)
  80cee4:	10c05017 	ldw	r3,320(r2)
  80cee8:	e0bffe17 	ldw	r2,-8(fp)
  80ceec:	10c01715 	stw	r3,92(r2)
  80cef0:	e0bfff17 	ldw	r2,-4(fp)
  80cef4:	10c01d17 	ldw	r3,116(r2)
  80cef8:	e0bffe17 	ldw	r2,-8(fp)
  80cefc:	10c01815 	stw	r3,96(r2)
  80cf00:	0001883a 	nop
  80cf04:	e037883a 	mov	sp,fp
  80cf08:	df000017 	ldw	fp,0(sp)
  80cf0c:	dec00104 	addi	sp,sp,4
  80cf10:	f800283a 	ret

0080cf14 <sep_upsample>:
  80cf14:	defff304 	addi	sp,sp,-52
  80cf18:	dfc00c15 	stw	ra,48(sp)
  80cf1c:	df000b15 	stw	fp,44(sp)
  80cf20:	dc400a15 	stw	r17,40(sp)
  80cf24:	dc000915 	stw	r16,36(sp)
  80cf28:	df000b04 	addi	fp,sp,44
  80cf2c:	e13ffa15 	stw	r4,-24(fp)
  80cf30:	e17ffb15 	stw	r5,-20(fp)
  80cf34:	e1bffc15 	stw	r6,-16(fp)
  80cf38:	e1fffd15 	stw	r7,-12(fp)
  80cf3c:	e0bffa17 	ldw	r2,-24(fp)
  80cf40:	10807717 	ldw	r2,476(r2)
  80cf44:	e0bff915 	stw	r2,-28(fp)
  80cf48:	e0bff917 	ldw	r2,-28(fp)
  80cf4c:	10c01717 	ldw	r3,92(r2)
  80cf50:	e0bffa17 	ldw	r2,-24(fp)
  80cf54:	10805017 	ldw	r2,320(r2)
  80cf58:	18803816 	blt	r3,r2,80d03c <sep_upsample+0x128>
  80cf5c:	e03ff615 	stw	zero,-40(fp)
  80cf60:	e0bffa17 	ldw	r2,-24(fp)
  80cf64:	10803617 	ldw	r2,216(r2)
  80cf68:	e0bff715 	stw	r2,-36(fp)
  80cf6c:	00002d06 	br	80d024 <sep_upsample+0x110>
  80cf70:	e0fff917 	ldw	r3,-28(fp)
  80cf74:	e0bff617 	ldw	r2,-40(fp)
  80cf78:	10800344 	addi	r2,r2,13
  80cf7c:	1085883a 	add	r2,r2,r2
  80cf80:	1085883a 	add	r2,r2,r2
  80cf84:	1885883a 	add	r2,r3,r2
  80cf88:	14000017 	ldw	r16,0(r2)
  80cf8c:	e0bff617 	ldw	r2,-40(fp)
  80cf90:	1085883a 	add	r2,r2,r2
  80cf94:	1085883a 	add	r2,r2,r2
  80cf98:	1007883a 	mov	r3,r2
  80cf9c:	e0bffb17 	ldw	r2,-20(fp)
  80cfa0:	10c5883a 	add	r2,r2,r3
  80cfa4:	14400017 	ldw	r17,0(r2)
  80cfa8:	e0bffc17 	ldw	r2,-16(fp)
  80cfac:	11000017 	ldw	r4,0(r2)
  80cfb0:	e0fff917 	ldw	r3,-28(fp)
  80cfb4:	e0bff617 	ldw	r2,-40(fp)
  80cfb8:	10800644 	addi	r2,r2,25
  80cfbc:	1085883a 	add	r2,r2,r2
  80cfc0:	1085883a 	add	r2,r2,r2
  80cfc4:	1885883a 	add	r2,r3,r2
  80cfc8:	10800017 	ldw	r2,0(r2)
  80cfcc:	100b883a 	mov	r5,r2
  80cfd0:	08305040 	call	830504 <__mulsi3>
  80cfd4:	1085883a 	add	r2,r2,r2
  80cfd8:	1085883a 	add	r2,r2,r2
  80cfdc:	8889883a 	add	r4,r17,r2
  80cfe0:	e0bff917 	ldw	r2,-28(fp)
  80cfe4:	10c00304 	addi	r3,r2,12
  80cfe8:	e0bff617 	ldw	r2,-40(fp)
  80cfec:	1085883a 	add	r2,r2,r2
  80cff0:	1085883a 	add	r2,r2,r2
  80cff4:	1885883a 	add	r2,r3,r2
  80cff8:	100f883a 	mov	r7,r2
  80cffc:	200d883a 	mov	r6,r4
  80d000:	e17ff717 	ldw	r5,-36(fp)
  80d004:	e13ffa17 	ldw	r4,-24(fp)
  80d008:	803ee83a 	callr	r16
  80d00c:	e0bff617 	ldw	r2,-40(fp)
  80d010:	10800044 	addi	r2,r2,1
  80d014:	e0bff615 	stw	r2,-40(fp)
  80d018:	e0bff717 	ldw	r2,-36(fp)
  80d01c:	10801604 	addi	r2,r2,88
  80d020:	e0bff715 	stw	r2,-36(fp)
  80d024:	e0bffa17 	ldw	r2,-24(fp)
  80d028:	10800917 	ldw	r2,36(r2)
  80d02c:	e0fff617 	ldw	r3,-40(fp)
  80d030:	18bfcf16 	blt	r3,r2,80cf70 <__alt_mem_epcs_flash_controller_0+0xff803f70>
  80d034:	e0bff917 	ldw	r2,-28(fp)
  80d038:	10001715 	stw	zero,92(r2)
  80d03c:	e0bffa17 	ldw	r2,-24(fp)
  80d040:	10c05017 	ldw	r3,320(r2)
  80d044:	e0bff917 	ldw	r2,-28(fp)
  80d048:	10801717 	ldw	r2,92(r2)
  80d04c:	1885c83a 	sub	r2,r3,r2
  80d050:	e0bff815 	stw	r2,-32(fp)
  80d054:	e0bff917 	ldw	r2,-28(fp)
  80d058:	10c01817 	ldw	r3,96(r2)
  80d05c:	e0bff817 	ldw	r2,-32(fp)
  80d060:	1880032e 	bgeu	r3,r2,80d070 <sep_upsample+0x15c>
  80d064:	e0bff917 	ldw	r2,-28(fp)
  80d068:	10801817 	ldw	r2,96(r2)
  80d06c:	e0bff815 	stw	r2,-32(fp)
  80d070:	e0800317 	ldw	r2,12(fp)
  80d074:	10800017 	ldw	r2,0(r2)
  80d078:	e0c00417 	ldw	r3,16(fp)
  80d07c:	1885c83a 	sub	r2,r3,r2
  80d080:	e0800415 	stw	r2,16(fp)
  80d084:	e0bff817 	ldw	r2,-32(fp)
  80d088:	e0c00417 	ldw	r3,16(fp)
  80d08c:	1880022e 	bgeu	r3,r2,80d098 <sep_upsample+0x184>
  80d090:	e0800417 	ldw	r2,16(fp)
  80d094:	e0bff815 	stw	r2,-32(fp)
  80d098:	e0bffa17 	ldw	r2,-24(fp)
  80d09c:	10807817 	ldw	r2,480(r2)
  80d0a0:	10c00117 	ldw	r3,4(r2)
  80d0a4:	e0bff917 	ldw	r2,-28(fp)
  80d0a8:	11000304 	addi	r4,r2,12
  80d0ac:	e0bff917 	ldw	r2,-28(fp)
  80d0b0:	10801717 	ldw	r2,92(r2)
  80d0b4:	100d883a 	mov	r6,r2
  80d0b8:	e0800317 	ldw	r2,12(fp)
  80d0bc:	10800017 	ldw	r2,0(r2)
  80d0c0:	1085883a 	add	r2,r2,r2
  80d0c4:	1085883a 	add	r2,r2,r2
  80d0c8:	100b883a 	mov	r5,r2
  80d0cc:	e0800217 	ldw	r2,8(fp)
  80d0d0:	114b883a 	add	r5,r2,r5
  80d0d4:	e0bff817 	ldw	r2,-32(fp)
  80d0d8:	d8800015 	stw	r2,0(sp)
  80d0dc:	280f883a 	mov	r7,r5
  80d0e0:	200b883a 	mov	r5,r4
  80d0e4:	e13ffa17 	ldw	r4,-24(fp)
  80d0e8:	183ee83a 	callr	r3
  80d0ec:	e0800317 	ldw	r2,12(fp)
  80d0f0:	10c00017 	ldw	r3,0(r2)
  80d0f4:	e0bff817 	ldw	r2,-32(fp)
  80d0f8:	1887883a 	add	r3,r3,r2
  80d0fc:	e0800317 	ldw	r2,12(fp)
  80d100:	10c00015 	stw	r3,0(r2)
  80d104:	e0bff917 	ldw	r2,-28(fp)
  80d108:	10c01817 	ldw	r3,96(r2)
  80d10c:	e0bff817 	ldw	r2,-32(fp)
  80d110:	1887c83a 	sub	r3,r3,r2
  80d114:	e0bff917 	ldw	r2,-28(fp)
  80d118:	10c01815 	stw	r3,96(r2)
  80d11c:	e0bff917 	ldw	r2,-28(fp)
  80d120:	10801717 	ldw	r2,92(r2)
  80d124:	1007883a 	mov	r3,r2
  80d128:	e0bff817 	ldw	r2,-32(fp)
  80d12c:	1885883a 	add	r2,r3,r2
  80d130:	1007883a 	mov	r3,r2
  80d134:	e0bff917 	ldw	r2,-28(fp)
  80d138:	10c01715 	stw	r3,92(r2)
  80d13c:	e0bff917 	ldw	r2,-28(fp)
  80d140:	10c01717 	ldw	r3,92(r2)
  80d144:	e0bffa17 	ldw	r2,-24(fp)
  80d148:	10805017 	ldw	r2,320(r2)
  80d14c:	18800516 	blt	r3,r2,80d164 <sep_upsample+0x250>
  80d150:	e0bffc17 	ldw	r2,-16(fp)
  80d154:	10800017 	ldw	r2,0(r2)
  80d158:	10c00044 	addi	r3,r2,1
  80d15c:	e0bffc17 	ldw	r2,-16(fp)
  80d160:	10c00015 	stw	r3,0(r2)
  80d164:	0001883a 	nop
  80d168:	e6fffe04 	addi	sp,fp,-8
  80d16c:	dfc00317 	ldw	ra,12(sp)
  80d170:	df000217 	ldw	fp,8(sp)
  80d174:	dc400117 	ldw	r17,4(sp)
  80d178:	dc000017 	ldw	r16,0(sp)
  80d17c:	dec00404 	addi	sp,sp,16
  80d180:	f800283a 	ret

0080d184 <fullsize_upsample>:
  80d184:	defffb04 	addi	sp,sp,-20
  80d188:	df000415 	stw	fp,16(sp)
  80d18c:	df000404 	addi	fp,sp,16
  80d190:	e13ffc15 	stw	r4,-16(fp)
  80d194:	e17ffd15 	stw	r5,-12(fp)
  80d198:	e1bffe15 	stw	r6,-8(fp)
  80d19c:	e1ffff15 	stw	r7,-4(fp)
  80d1a0:	e0bfff17 	ldw	r2,-4(fp)
  80d1a4:	e0fffe17 	ldw	r3,-8(fp)
  80d1a8:	10c00015 	stw	r3,0(r2)
  80d1ac:	0001883a 	nop
  80d1b0:	e037883a 	mov	sp,fp
  80d1b4:	df000017 	ldw	fp,0(sp)
  80d1b8:	dec00104 	addi	sp,sp,4
  80d1bc:	f800283a 	ret

0080d1c0 <noop_upsample>:
  80d1c0:	defffb04 	addi	sp,sp,-20
  80d1c4:	df000415 	stw	fp,16(sp)
  80d1c8:	df000404 	addi	fp,sp,16
  80d1cc:	e13ffc15 	stw	r4,-16(fp)
  80d1d0:	e17ffd15 	stw	r5,-12(fp)
  80d1d4:	e1bffe15 	stw	r6,-8(fp)
  80d1d8:	e1ffff15 	stw	r7,-4(fp)
  80d1dc:	e0bfff17 	ldw	r2,-4(fp)
  80d1e0:	10000015 	stw	zero,0(r2)
  80d1e4:	0001883a 	nop
  80d1e8:	e037883a 	mov	sp,fp
  80d1ec:	df000017 	ldw	fp,0(sp)
  80d1f0:	dec00104 	addi	sp,sp,4
  80d1f4:	f800283a 	ret

0080d1f8 <int_upsample>:
  80d1f8:	deffed04 	addi	sp,sp,-76
  80d1fc:	dfc01215 	stw	ra,72(sp)
  80d200:	df001115 	stw	fp,68(sp)
  80d204:	dcc01015 	stw	r19,64(sp)
  80d208:	dc800f15 	stw	r18,60(sp)
  80d20c:	dc400e15 	stw	r17,56(sp)
  80d210:	dc000d15 	stw	r16,52(sp)
  80d214:	df001104 	addi	fp,sp,68
  80d218:	e13ff815 	stw	r4,-32(fp)
  80d21c:	e17ff915 	stw	r5,-28(fp)
  80d220:	e1bffa15 	stw	r6,-24(fp)
  80d224:	e1fffb15 	stw	r7,-20(fp)
  80d228:	e0bff817 	ldw	r2,-32(fp)
  80d22c:	10807717 	ldw	r2,476(r2)
  80d230:	e0bff315 	stw	r2,-52(fp)
  80d234:	e0bffb17 	ldw	r2,-20(fp)
  80d238:	10800017 	ldw	r2,0(r2)
  80d23c:	e0bff415 	stw	r2,-48(fp)
  80d240:	e0bff917 	ldw	r2,-28(fp)
  80d244:	10800117 	ldw	r2,4(r2)
  80d248:	e0fff317 	ldw	r3,-52(fp)
  80d24c:	1885883a 	add	r2,r3,r2
  80d250:	10802304 	addi	r2,r2,140
  80d254:	10800003 	ldbu	r2,0(r2)
  80d258:	10803fcc 	andi	r2,r2,255
  80d25c:	e0bff515 	stw	r2,-44(fp)
  80d260:	e0bff917 	ldw	r2,-28(fp)
  80d264:	10800117 	ldw	r2,4(r2)
  80d268:	e0fff317 	ldw	r3,-52(fp)
  80d26c:	1885883a 	add	r2,r3,r2
  80d270:	10802584 	addi	r2,r2,150
  80d274:	10800003 	ldbu	r2,0(r2)
  80d278:	10803fcc 	andi	r2,r2,255
  80d27c:	e0bff615 	stw	r2,-40(fp)
  80d280:	e03ff215 	stw	zero,-56(fp)
  80d284:	e0bff217 	ldw	r2,-56(fp)
  80d288:	e0bff115 	stw	r2,-60(fp)
  80d28c:	00003606 	br	80d368 <int_upsample+0x170>
  80d290:	e0bff117 	ldw	r2,-60(fp)
  80d294:	1085883a 	add	r2,r2,r2
  80d298:	1085883a 	add	r2,r2,r2
  80d29c:	1007883a 	mov	r3,r2
  80d2a0:	e0bffa17 	ldw	r2,-24(fp)
  80d2a4:	10c5883a 	add	r2,r2,r3
  80d2a8:	14800017 	ldw	r18,0(r2)
  80d2ac:	e0bff217 	ldw	r2,-56(fp)
  80d2b0:	1085883a 	add	r2,r2,r2
  80d2b4:	1085883a 	add	r2,r2,r2
  80d2b8:	1007883a 	mov	r3,r2
  80d2bc:	e0bff417 	ldw	r2,-48(fp)
  80d2c0:	10c5883a 	add	r2,r2,r3
  80d2c4:	14000017 	ldw	r16,0(r2)
  80d2c8:	e0bff817 	ldw	r2,-32(fp)
  80d2cc:	10801c17 	ldw	r2,112(r2)
  80d2d0:	8085883a 	add	r2,r16,r2
  80d2d4:	e0bff715 	stw	r2,-36(fp)
  80d2d8:	00000a06 	br	80d304 <int_upsample+0x10c>
  80d2dc:	9005883a 	mov	r2,r18
  80d2e0:	14800044 	addi	r18,r2,1
  80d2e4:	14c00003 	ldbu	r19,0(r2)
  80d2e8:	e47ff517 	ldw	r17,-44(fp)
  80d2ec:	00000406 	br	80d300 <int_upsample+0x108>
  80d2f0:	8005883a 	mov	r2,r16
  80d2f4:	14000044 	addi	r16,r2,1
  80d2f8:	14c00005 	stb	r19,0(r2)
  80d2fc:	8c7fffc4 	addi	r17,r17,-1
  80d300:	047ffb16 	blt	zero,r17,80d2f0 <__alt_mem_epcs_flash_controller_0+0xff8042f0>
  80d304:	e0bff717 	ldw	r2,-36(fp)
  80d308:	80bff436 	bltu	r16,r2,80d2dc <__alt_mem_epcs_flash_controller_0+0xff8042dc>
  80d30c:	e0bff617 	ldw	r2,-40(fp)
  80d310:	10800090 	cmplti	r2,r2,2
  80d314:	10000d1e 	bne	r2,zero,80d34c <int_upsample+0x154>
  80d318:	e0bff217 	ldw	r2,-56(fp)
  80d31c:	11000044 	addi	r4,r2,1
  80d320:	e0bff617 	ldw	r2,-40(fp)
  80d324:	10bfffc4 	addi	r2,r2,-1
  80d328:	e0fff817 	ldw	r3,-32(fp)
  80d32c:	18c01c17 	ldw	r3,112(r3)
  80d330:	d8c00115 	stw	r3,4(sp)
  80d334:	d8800015 	stw	r2,0(sp)
  80d338:	200f883a 	mov	r7,r4
  80d33c:	e1bff417 	ldw	r6,-48(fp)
  80d340:	e17ff217 	ldw	r5,-56(fp)
  80d344:	e13ff417 	ldw	r4,-48(fp)
  80d348:	0813f4c0 	call	813f4c <jcopy_sample_rows>
  80d34c:	e0bff117 	ldw	r2,-60(fp)
  80d350:	10800044 	addi	r2,r2,1
  80d354:	e0bff115 	stw	r2,-60(fp)
  80d358:	e0fff217 	ldw	r3,-56(fp)
  80d35c:	e0bff617 	ldw	r2,-40(fp)
  80d360:	1885883a 	add	r2,r3,r2
  80d364:	e0bff215 	stw	r2,-56(fp)
  80d368:	e0bff817 	ldw	r2,-32(fp)
  80d36c:	10805017 	ldw	r2,320(r2)
  80d370:	e0fff217 	ldw	r3,-56(fp)
  80d374:	18bfc616 	blt	r3,r2,80d290 <__alt_mem_epcs_flash_controller_0+0xff804290>
  80d378:	0001883a 	nop
  80d37c:	e6fffc04 	addi	sp,fp,-16
  80d380:	dfc00517 	ldw	ra,20(sp)
  80d384:	df000417 	ldw	fp,16(sp)
  80d388:	dcc00317 	ldw	r19,12(sp)
  80d38c:	dc800217 	ldw	r18,8(sp)
  80d390:	dc400117 	ldw	r17,4(sp)
  80d394:	dc000017 	ldw	r16,0(sp)
  80d398:	dec00604 	addi	sp,sp,24
  80d39c:	f800283a 	ret

0080d3a0 <h2v1_upsample>:
  80d3a0:	defff504 	addi	sp,sp,-44
  80d3a4:	df000a15 	stw	fp,40(sp)
  80d3a8:	dc800915 	stw	r18,36(sp)
  80d3ac:	dc400815 	stw	r17,32(sp)
  80d3b0:	dc000715 	stw	r16,28(sp)
  80d3b4:	df000a04 	addi	fp,sp,40
  80d3b8:	e13ff915 	stw	r4,-28(fp)
  80d3bc:	e17ffa15 	stw	r5,-24(fp)
  80d3c0:	e1bffb15 	stw	r6,-20(fp)
  80d3c4:	e1fffc15 	stw	r7,-16(fp)
  80d3c8:	e0bffc17 	ldw	r2,-16(fp)
  80d3cc:	10800017 	ldw	r2,0(r2)
  80d3d0:	e0bff715 	stw	r2,-36(fp)
  80d3d4:	e03ff615 	stw	zero,-40(fp)
  80d3d8:	00002106 	br	80d460 <h2v1_upsample+0xc0>
  80d3dc:	e0bff617 	ldw	r2,-40(fp)
  80d3e0:	1085883a 	add	r2,r2,r2
  80d3e4:	1085883a 	add	r2,r2,r2
  80d3e8:	1007883a 	mov	r3,r2
  80d3ec:	e0bffb17 	ldw	r2,-20(fp)
  80d3f0:	10c5883a 	add	r2,r2,r3
  80d3f4:	14800017 	ldw	r18,0(r2)
  80d3f8:	e0bff617 	ldw	r2,-40(fp)
  80d3fc:	1085883a 	add	r2,r2,r2
  80d400:	1085883a 	add	r2,r2,r2
  80d404:	1007883a 	mov	r3,r2
  80d408:	e0bff717 	ldw	r2,-36(fp)
  80d40c:	10c5883a 	add	r2,r2,r3
  80d410:	14000017 	ldw	r16,0(r2)
  80d414:	e0bff917 	ldw	r2,-28(fp)
  80d418:	10801c17 	ldw	r2,112(r2)
  80d41c:	8085883a 	add	r2,r16,r2
  80d420:	e0bff815 	stw	r2,-32(fp)
  80d424:	00000906 	br	80d44c <h2v1_upsample+0xac>
  80d428:	9005883a 	mov	r2,r18
  80d42c:	14800044 	addi	r18,r2,1
  80d430:	14400003 	ldbu	r17,0(r2)
  80d434:	8005883a 	mov	r2,r16
  80d438:	14000044 	addi	r16,r2,1
  80d43c:	14400005 	stb	r17,0(r2)
  80d440:	8005883a 	mov	r2,r16
  80d444:	14000044 	addi	r16,r2,1
  80d448:	14400005 	stb	r17,0(r2)
  80d44c:	e0bff817 	ldw	r2,-32(fp)
  80d450:	80bff536 	bltu	r16,r2,80d428 <__alt_mem_epcs_flash_controller_0+0xff804428>
  80d454:	e0bff617 	ldw	r2,-40(fp)
  80d458:	10800044 	addi	r2,r2,1
  80d45c:	e0bff615 	stw	r2,-40(fp)
  80d460:	e0bff917 	ldw	r2,-28(fp)
  80d464:	10805017 	ldw	r2,320(r2)
  80d468:	e0fff617 	ldw	r3,-40(fp)
  80d46c:	18bfdb16 	blt	r3,r2,80d3dc <__alt_mem_epcs_flash_controller_0+0xff8043dc>
  80d470:	0001883a 	nop
  80d474:	e6fffd04 	addi	sp,fp,-12
  80d478:	df000317 	ldw	fp,12(sp)
  80d47c:	dc800217 	ldw	r18,8(sp)
  80d480:	dc400117 	ldw	r17,4(sp)
  80d484:	dc000017 	ldw	r16,0(sp)
  80d488:	dec00404 	addi	sp,sp,16
  80d48c:	f800283a 	ret

0080d490 <h2v2_upsample>:
  80d490:	defff104 	addi	sp,sp,-60
  80d494:	dfc00e15 	stw	ra,56(sp)
  80d498:	df000d15 	stw	fp,52(sp)
  80d49c:	dc800c15 	stw	r18,48(sp)
  80d4a0:	dc400b15 	stw	r17,44(sp)
  80d4a4:	dc000a15 	stw	r16,40(sp)
  80d4a8:	df000d04 	addi	fp,sp,52
  80d4ac:	e13ff915 	stw	r4,-28(fp)
  80d4b0:	e17ffa15 	stw	r5,-24(fp)
  80d4b4:	e1bffb15 	stw	r6,-20(fp)
  80d4b8:	e1fffc15 	stw	r7,-16(fp)
  80d4bc:	e0bffc17 	ldw	r2,-16(fp)
  80d4c0:	10800017 	ldw	r2,0(r2)
  80d4c4:	e0bff715 	stw	r2,-36(fp)
  80d4c8:	e03ff615 	stw	zero,-40(fp)
  80d4cc:	e0bff617 	ldw	r2,-40(fp)
  80d4d0:	e0bff515 	stw	r2,-44(fp)
  80d4d4:	00003006 	br	80d598 <h2v2_upsample+0x108>
  80d4d8:	e0bff517 	ldw	r2,-44(fp)
  80d4dc:	1085883a 	add	r2,r2,r2
  80d4e0:	1085883a 	add	r2,r2,r2
  80d4e4:	1007883a 	mov	r3,r2
  80d4e8:	e0bffb17 	ldw	r2,-20(fp)
  80d4ec:	10c5883a 	add	r2,r2,r3
  80d4f0:	14800017 	ldw	r18,0(r2)
  80d4f4:	e0bff617 	ldw	r2,-40(fp)
  80d4f8:	1085883a 	add	r2,r2,r2
  80d4fc:	1085883a 	add	r2,r2,r2
  80d500:	1007883a 	mov	r3,r2
  80d504:	e0bff717 	ldw	r2,-36(fp)
  80d508:	10c5883a 	add	r2,r2,r3
  80d50c:	14000017 	ldw	r16,0(r2)
  80d510:	e0bff917 	ldw	r2,-28(fp)
  80d514:	10801c17 	ldw	r2,112(r2)
  80d518:	8085883a 	add	r2,r16,r2
  80d51c:	e0bff815 	stw	r2,-32(fp)
  80d520:	00000906 	br	80d548 <h2v2_upsample+0xb8>
  80d524:	9005883a 	mov	r2,r18
  80d528:	14800044 	addi	r18,r2,1
  80d52c:	14400003 	ldbu	r17,0(r2)
  80d530:	8005883a 	mov	r2,r16
  80d534:	14000044 	addi	r16,r2,1
  80d538:	14400005 	stb	r17,0(r2)
  80d53c:	8005883a 	mov	r2,r16
  80d540:	14000044 	addi	r16,r2,1
  80d544:	14400005 	stb	r17,0(r2)
  80d548:	e0bff817 	ldw	r2,-32(fp)
  80d54c:	80bff536 	bltu	r16,r2,80d524 <__alt_mem_epcs_flash_controller_0+0xff804524>
  80d550:	e0bff617 	ldw	r2,-40(fp)
  80d554:	10c00044 	addi	r3,r2,1
  80d558:	e0bff917 	ldw	r2,-28(fp)
  80d55c:	10801c17 	ldw	r2,112(r2)
  80d560:	d8800115 	stw	r2,4(sp)
  80d564:	00800044 	movi	r2,1
  80d568:	d8800015 	stw	r2,0(sp)
  80d56c:	180f883a 	mov	r7,r3
  80d570:	e1bff717 	ldw	r6,-36(fp)
  80d574:	e17ff617 	ldw	r5,-40(fp)
  80d578:	e13ff717 	ldw	r4,-36(fp)
  80d57c:	0813f4c0 	call	813f4c <jcopy_sample_rows>
  80d580:	e0bff517 	ldw	r2,-44(fp)
  80d584:	10800044 	addi	r2,r2,1
  80d588:	e0bff515 	stw	r2,-44(fp)
  80d58c:	e0bff617 	ldw	r2,-40(fp)
  80d590:	10800084 	addi	r2,r2,2
  80d594:	e0bff615 	stw	r2,-40(fp)
  80d598:	e0bff917 	ldw	r2,-28(fp)
  80d59c:	10805017 	ldw	r2,320(r2)
  80d5a0:	e0fff617 	ldw	r3,-40(fp)
  80d5a4:	18bfcc16 	blt	r3,r2,80d4d8 <__alt_mem_epcs_flash_controller_0+0xff8044d8>
  80d5a8:	0001883a 	nop
  80d5ac:	e6fffd04 	addi	sp,fp,-12
  80d5b0:	dfc00417 	ldw	ra,16(sp)
  80d5b4:	df000317 	ldw	fp,12(sp)
  80d5b8:	dc800217 	ldw	r18,8(sp)
  80d5bc:	dc400117 	ldw	r17,4(sp)
  80d5c0:	dc000017 	ldw	r16,0(sp)
  80d5c4:	dec00504 	addi	sp,sp,20
  80d5c8:	f800283a 	ret

0080d5cc <jinit_upsampler>:
  80d5cc:	defff504 	addi	sp,sp,-44
  80d5d0:	dfc00a15 	stw	ra,40(sp)
  80d5d4:	df000915 	stw	fp,36(sp)
  80d5d8:	dc000815 	stw	r16,32(sp)
  80d5dc:	df000904 	addi	fp,sp,36
  80d5e0:	e13ffe15 	stw	r4,-8(fp)
  80d5e4:	e0bffe17 	ldw	r2,-8(fp)
  80d5e8:	10800117 	ldw	r2,4(r2)
  80d5ec:	10800017 	ldw	r2,0(r2)
  80d5f0:	01802804 	movi	r6,160
  80d5f4:	01400044 	movi	r5,1
  80d5f8:	e13ffe17 	ldw	r4,-8(fp)
  80d5fc:	103ee83a 	callr	r2
  80d600:	e0bff915 	stw	r2,-28(fp)
  80d604:	e0fff917 	ldw	r3,-28(fp)
  80d608:	e0bffe17 	ldw	r2,-8(fp)
  80d60c:	10c07715 	stw	r3,476(r2)
  80d610:	e0fff917 	ldw	r3,-28(fp)
  80d614:	00802074 	movhi	r2,129
  80d618:	10b3b104 	addi	r2,r2,-12604
  80d61c:	18800015 	stw	r2,0(r3)
  80d620:	e0fff917 	ldw	r3,-28(fp)
  80d624:	00802074 	movhi	r2,129
  80d628:	10b3c504 	addi	r2,r2,-12524
  80d62c:	18800115 	stw	r2,4(r3)
  80d630:	e0bff917 	ldw	r2,-28(fp)
  80d634:	10000215 	stw	zero,8(r2)
  80d638:	e0bffe17 	ldw	r2,-8(fp)
  80d63c:	10804d17 	ldw	r2,308(r2)
  80d640:	10000926 	beq	r2,zero,80d668 <jinit_upsampler+0x9c>
  80d644:	e0bffe17 	ldw	r2,-8(fp)
  80d648:	10800017 	ldw	r2,0(r2)
  80d64c:	00c00684 	movi	r3,26
  80d650:	10c00515 	stw	r3,20(r2)
  80d654:	e0bffe17 	ldw	r2,-8(fp)
  80d658:	10800017 	ldw	r2,0(r2)
  80d65c:	10800017 	ldw	r2,0(r2)
  80d660:	e13ffe17 	ldw	r4,-8(fp)
  80d664:	103ee83a 	callr	r2
  80d668:	e03ff715 	stw	zero,-36(fp)
  80d66c:	e0bffe17 	ldw	r2,-8(fp)
  80d670:	10803617 	ldw	r2,216(r2)
  80d674:	e0bff815 	stw	r2,-32(fp)
  80d678:	0000bd06 	br	80d970 <jinit_upsampler+0x3a4>
  80d67c:	e0bff817 	ldw	r2,-32(fp)
  80d680:	10c00217 	ldw	r3,8(r2)
  80d684:	e0bff817 	ldw	r2,-32(fp)
  80d688:	10800917 	ldw	r2,36(r2)
  80d68c:	100b883a 	mov	r5,r2
  80d690:	1809883a 	mov	r4,r3
  80d694:	08305040 	call	830504 <__mulsi3>
  80d698:	1007883a 	mov	r3,r2
  80d69c:	e0bffe17 	ldw	r2,-8(fp)
  80d6a0:	10805117 	ldw	r2,324(r2)
  80d6a4:	100b883a 	mov	r5,r2
  80d6a8:	1809883a 	mov	r4,r3
  80d6ac:	08303500 	call	830350 <__divsi3>
  80d6b0:	e0bffa15 	stw	r2,-24(fp)
  80d6b4:	e0bff817 	ldw	r2,-32(fp)
  80d6b8:	10c00317 	ldw	r3,12(r2)
  80d6bc:	e0bff817 	ldw	r2,-32(fp)
  80d6c0:	10800a17 	ldw	r2,40(r2)
  80d6c4:	100b883a 	mov	r5,r2
  80d6c8:	1809883a 	mov	r4,r3
  80d6cc:	08305040 	call	830504 <__mulsi3>
  80d6d0:	1007883a 	mov	r3,r2
  80d6d4:	e0bffe17 	ldw	r2,-8(fp)
  80d6d8:	10805217 	ldw	r2,328(r2)
  80d6dc:	100b883a 	mov	r5,r2
  80d6e0:	1809883a 	mov	r4,r3
  80d6e4:	08303500 	call	830350 <__divsi3>
  80d6e8:	e0bffb15 	stw	r2,-20(fp)
  80d6ec:	e0bffe17 	ldw	r2,-8(fp)
  80d6f0:	10804f17 	ldw	r2,316(r2)
  80d6f4:	e0bffc15 	stw	r2,-16(fp)
  80d6f8:	e0bffe17 	ldw	r2,-8(fp)
  80d6fc:	10805017 	ldw	r2,320(r2)
  80d700:	e0bffd15 	stw	r2,-12(fp)
  80d704:	e0fff917 	ldw	r3,-28(fp)
  80d708:	e0bff717 	ldw	r2,-36(fp)
  80d70c:	10800644 	addi	r2,r2,25
  80d710:	1085883a 	add	r2,r2,r2
  80d714:	1085883a 	add	r2,r2,r2
  80d718:	1885883a 	add	r2,r3,r2
  80d71c:	e0fffb17 	ldw	r3,-20(fp)
  80d720:	10c00015 	stw	r3,0(r2)
  80d724:	e0bff817 	ldw	r2,-32(fp)
  80d728:	10800d17 	ldw	r2,52(r2)
  80d72c:	10000a1e 	bne	r2,zero,80d758 <jinit_upsampler+0x18c>
  80d730:	e0fff917 	ldw	r3,-28(fp)
  80d734:	e0bff717 	ldw	r2,-36(fp)
  80d738:	10800344 	addi	r2,r2,13
  80d73c:	1085883a 	add	r2,r2,r2
  80d740:	1085883a 	add	r2,r2,r2
  80d744:	1887883a 	add	r3,r3,r2
  80d748:	00802074 	movhi	r2,129
  80d74c:	10b47004 	addi	r2,r2,-11840
  80d750:	18800015 	stw	r2,0(r3)
  80d754:	00008006 	br	80d958 <jinit_upsampler+0x38c>
  80d758:	e0fffa17 	ldw	r3,-24(fp)
  80d75c:	e0bffc17 	ldw	r2,-16(fp)
  80d760:	18800d1e 	bne	r3,r2,80d798 <jinit_upsampler+0x1cc>
  80d764:	e0fffb17 	ldw	r3,-20(fp)
  80d768:	e0bffd17 	ldw	r2,-12(fp)
  80d76c:	18800a1e 	bne	r3,r2,80d798 <jinit_upsampler+0x1cc>
  80d770:	e0fff917 	ldw	r3,-28(fp)
  80d774:	e0bff717 	ldw	r2,-36(fp)
  80d778:	10800344 	addi	r2,r2,13
  80d77c:	1085883a 	add	r2,r2,r2
  80d780:	1085883a 	add	r2,r2,r2
  80d784:	1887883a 	add	r3,r3,r2
  80d788:	00802074 	movhi	r2,129
  80d78c:	10b46104 	addi	r2,r2,-11900
  80d790:	18800015 	stw	r2,0(r3)
  80d794:	00007006 	br	80d958 <jinit_upsampler+0x38c>
  80d798:	e0bffa17 	ldw	r2,-24(fp)
  80d79c:	1085883a 	add	r2,r2,r2
  80d7a0:	1007883a 	mov	r3,r2
  80d7a4:	e0bffc17 	ldw	r2,-16(fp)
  80d7a8:	18800d1e 	bne	r3,r2,80d7e0 <jinit_upsampler+0x214>
  80d7ac:	e0fffb17 	ldw	r3,-20(fp)
  80d7b0:	e0bffd17 	ldw	r2,-12(fp)
  80d7b4:	18800a1e 	bne	r3,r2,80d7e0 <jinit_upsampler+0x214>
  80d7b8:	e0fff917 	ldw	r3,-28(fp)
  80d7bc:	e0bff717 	ldw	r2,-36(fp)
  80d7c0:	10800344 	addi	r2,r2,13
  80d7c4:	1085883a 	add	r2,r2,r2
  80d7c8:	1085883a 	add	r2,r2,r2
  80d7cc:	1887883a 	add	r3,r3,r2
  80d7d0:	00802074 	movhi	r2,129
  80d7d4:	10b4e804 	addi	r2,r2,-11360
  80d7d8:	18800015 	stw	r2,0(r3)
  80d7dc:	00004306 	br	80d8ec <jinit_upsampler+0x320>
  80d7e0:	e0bffa17 	ldw	r2,-24(fp)
  80d7e4:	1085883a 	add	r2,r2,r2
  80d7e8:	1007883a 	mov	r3,r2
  80d7ec:	e0bffc17 	ldw	r2,-16(fp)
  80d7f0:	18800f1e 	bne	r3,r2,80d830 <jinit_upsampler+0x264>
  80d7f4:	e0bffb17 	ldw	r2,-20(fp)
  80d7f8:	1085883a 	add	r2,r2,r2
  80d7fc:	1007883a 	mov	r3,r2
  80d800:	e0bffd17 	ldw	r2,-12(fp)
  80d804:	18800a1e 	bne	r3,r2,80d830 <jinit_upsampler+0x264>
  80d808:	e0fff917 	ldw	r3,-28(fp)
  80d80c:	e0bff717 	ldw	r2,-36(fp)
  80d810:	10800344 	addi	r2,r2,13
  80d814:	1085883a 	add	r2,r2,r2
  80d818:	1085883a 	add	r2,r2,r2
  80d81c:	1887883a 	add	r3,r3,r2
  80d820:	00802074 	movhi	r2,129
  80d824:	10b52404 	addi	r2,r2,-11120
  80d828:	18800015 	stw	r2,0(r3)
  80d82c:	00002f06 	br	80d8ec <jinit_upsampler+0x320>
  80d830:	e0bffc17 	ldw	r2,-16(fp)
  80d834:	e17ffa17 	ldw	r5,-24(fp)
  80d838:	1009883a 	mov	r4,r2
  80d83c:	08303d40 	call	8303d4 <__modsi3>
  80d840:	1000211e 	bne	r2,zero,80d8c8 <jinit_upsampler+0x2fc>
  80d844:	e0bffd17 	ldw	r2,-12(fp)
  80d848:	e17ffb17 	ldw	r5,-20(fp)
  80d84c:	1009883a 	mov	r4,r2
  80d850:	08303d40 	call	8303d4 <__modsi3>
  80d854:	10001c1e 	bne	r2,zero,80d8c8 <jinit_upsampler+0x2fc>
  80d858:	e0fff917 	ldw	r3,-28(fp)
  80d85c:	e0bff717 	ldw	r2,-36(fp)
  80d860:	10800344 	addi	r2,r2,13
  80d864:	1085883a 	add	r2,r2,r2
  80d868:	1085883a 	add	r2,r2,r2
  80d86c:	1887883a 	add	r3,r3,r2
  80d870:	00802074 	movhi	r2,129
  80d874:	10b47e04 	addi	r2,r2,-11784
  80d878:	18800015 	stw	r2,0(r3)
  80d87c:	e17ffa17 	ldw	r5,-24(fp)
  80d880:	e13ffc17 	ldw	r4,-16(fp)
  80d884:	08303500 	call	830350 <__divsi3>
  80d888:	1009883a 	mov	r4,r2
  80d88c:	e0fff917 	ldw	r3,-28(fp)
  80d890:	e0bff717 	ldw	r2,-36(fp)
  80d894:	1885883a 	add	r2,r3,r2
  80d898:	10802304 	addi	r2,r2,140
  80d89c:	11000005 	stb	r4,0(r2)
  80d8a0:	e17ffb17 	ldw	r5,-20(fp)
  80d8a4:	e13ffd17 	ldw	r4,-12(fp)
  80d8a8:	08303500 	call	830350 <__divsi3>
  80d8ac:	1009883a 	mov	r4,r2
  80d8b0:	e0fff917 	ldw	r3,-28(fp)
  80d8b4:	e0bff717 	ldw	r2,-36(fp)
  80d8b8:	1885883a 	add	r2,r3,r2
  80d8bc:	10802584 	addi	r2,r2,150
  80d8c0:	11000005 	stb	r4,0(r2)
  80d8c4:	00000906 	br	80d8ec <jinit_upsampler+0x320>
  80d8c8:	e0bffe17 	ldw	r2,-8(fp)
  80d8cc:	10800017 	ldw	r2,0(r2)
  80d8d0:	00c009c4 	movi	r3,39
  80d8d4:	10c00515 	stw	r3,20(r2)
  80d8d8:	e0bffe17 	ldw	r2,-8(fp)
  80d8dc:	10800017 	ldw	r2,0(r2)
  80d8e0:	10800017 	ldw	r2,0(r2)
  80d8e4:	e13ffe17 	ldw	r4,-8(fp)
  80d8e8:	103ee83a 	callr	r2
  80d8ec:	e0bffe17 	ldw	r2,-8(fp)
  80d8f0:	10800117 	ldw	r2,4(r2)
  80d8f4:	14000217 	ldw	r16,8(r2)
  80d8f8:	e0bffe17 	ldw	r2,-8(fp)
  80d8fc:	10801c17 	ldw	r2,112(r2)
  80d900:	1007883a 	mov	r3,r2
  80d904:	e0bffe17 	ldw	r2,-8(fp)
  80d908:	10804f17 	ldw	r2,316(r2)
  80d90c:	100b883a 	mov	r5,r2
  80d910:	1809883a 	mov	r4,r3
  80d914:	0813ef00 	call	813ef0 <jround_up>
  80d918:	1007883a 	mov	r3,r2
  80d91c:	e0bffe17 	ldw	r2,-8(fp)
  80d920:	10805017 	ldw	r2,320(r2)
  80d924:	100f883a 	mov	r7,r2
  80d928:	180d883a 	mov	r6,r3
  80d92c:	01400044 	movi	r5,1
  80d930:	e13ffe17 	ldw	r4,-8(fp)
  80d934:	803ee83a 	callr	r16
  80d938:	1009883a 	mov	r4,r2
  80d93c:	e0fff917 	ldw	r3,-28(fp)
  80d940:	e0bff717 	ldw	r2,-36(fp)
  80d944:	108000c4 	addi	r2,r2,3
  80d948:	1085883a 	add	r2,r2,r2
  80d94c:	1085883a 	add	r2,r2,r2
  80d950:	1885883a 	add	r2,r3,r2
  80d954:	11000015 	stw	r4,0(r2)
  80d958:	e0bff717 	ldw	r2,-36(fp)
  80d95c:	10800044 	addi	r2,r2,1
  80d960:	e0bff715 	stw	r2,-36(fp)
  80d964:	e0bff817 	ldw	r2,-32(fp)
  80d968:	10801604 	addi	r2,r2,88
  80d96c:	e0bff815 	stw	r2,-32(fp)
  80d970:	e0bffe17 	ldw	r2,-8(fp)
  80d974:	10800917 	ldw	r2,36(r2)
  80d978:	e0fff717 	ldw	r3,-36(fp)
  80d97c:	18bf3f16 	blt	r3,r2,80d67c <__alt_mem_epcs_flash_controller_0+0xff80467c>
  80d980:	0001883a 	nop
  80d984:	e6ffff04 	addi	sp,fp,-4
  80d988:	dfc00217 	ldw	ra,8(sp)
  80d98c:	df000117 	ldw	fp,4(sp)
  80d990:	dc000017 	ldw	r16,0(sp)
  80d994:	dec00304 	addi	sp,sp,12
  80d998:	f800283a 	ret

0080d99c <error_exit>:
  80d99c:	defffd04 	addi	sp,sp,-12
  80d9a0:	dfc00215 	stw	ra,8(sp)
  80d9a4:	df000115 	stw	fp,4(sp)
  80d9a8:	df000104 	addi	fp,sp,4
  80d9ac:	e13fff15 	stw	r4,-4(fp)
  80d9b0:	e0bfff17 	ldw	r2,-4(fp)
  80d9b4:	10800017 	ldw	r2,0(r2)
  80d9b8:	10800217 	ldw	r2,8(r2)
  80d9bc:	e13fff17 	ldw	r4,-4(fp)
  80d9c0:	103ee83a 	callr	r2
  80d9c4:	e13fff17 	ldw	r4,-4(fp)
  80d9c8:	08141100 	call	814110 <jpeg_destroy>
  80d9cc:	01000044 	movi	r4,1
  80d9d0:	08320080 	call	832008 <exit>

0080d9d4 <output_message>:
  80d9d4:	deffcb04 	addi	sp,sp,-212
  80d9d8:	dfc03415 	stw	ra,208(sp)
  80d9dc:	df003315 	stw	fp,204(sp)
  80d9e0:	df003304 	addi	fp,sp,204
  80d9e4:	e13fff15 	stw	r4,-4(fp)
  80d9e8:	e0bfff17 	ldw	r2,-4(fp)
  80d9ec:	10800017 	ldw	r2,0(r2)
  80d9f0:	10800317 	ldw	r2,12(r2)
  80d9f4:	e17fcd04 	addi	r5,fp,-204
  80d9f8:	e13fff17 	ldw	r4,-4(fp)
  80d9fc:	103ee83a 	callr	r2
  80da00:	d0a03c17 	ldw	r2,-32528(gp)
  80da04:	10800317 	ldw	r2,12(r2)
  80da08:	e1bfcd04 	addi	r6,fp,-204
  80da0c:	014021b4 	movhi	r5,134
  80da10:	2960ef04 	addi	r5,r5,-31812
  80da14:	1009883a 	mov	r4,r2
  80da18:	08328d00 	call	8328d0 <fprintf>
  80da1c:	0001883a 	nop
  80da20:	e037883a 	mov	sp,fp
  80da24:	dfc00117 	ldw	ra,4(sp)
  80da28:	df000017 	ldw	fp,0(sp)
  80da2c:	dec00204 	addi	sp,sp,8
  80da30:	f800283a 	ret

0080da34 <emit_message>:
  80da34:	defffb04 	addi	sp,sp,-20
  80da38:	dfc00415 	stw	ra,16(sp)
  80da3c:	df000315 	stw	fp,12(sp)
  80da40:	df000304 	addi	fp,sp,12
  80da44:	e13ffe15 	stw	r4,-8(fp)
  80da48:	e17fff15 	stw	r5,-4(fp)
  80da4c:	e0bffe17 	ldw	r2,-8(fp)
  80da50:	10800017 	ldw	r2,0(r2)
  80da54:	e0bffd15 	stw	r2,-12(fp)
  80da58:	e0bfff17 	ldw	r2,-4(fp)
  80da5c:	1000110e 	bge	r2,zero,80daa4 <emit_message+0x70>
  80da60:	e0bffd17 	ldw	r2,-12(fp)
  80da64:	10801b17 	ldw	r2,108(r2)
  80da68:	10000426 	beq	r2,zero,80da7c <emit_message+0x48>
  80da6c:	e0bffd17 	ldw	r2,-12(fp)
  80da70:	10801a17 	ldw	r2,104(r2)
  80da74:	108000d0 	cmplti	r2,r2,3
  80da78:	1000041e 	bne	r2,zero,80da8c <emit_message+0x58>
  80da7c:	e0bffd17 	ldw	r2,-12(fp)
  80da80:	10800217 	ldw	r2,8(r2)
  80da84:	e13ffe17 	ldw	r4,-8(fp)
  80da88:	103ee83a 	callr	r2
  80da8c:	e0bffd17 	ldw	r2,-12(fp)
  80da90:	10801b17 	ldw	r2,108(r2)
  80da94:	10c00044 	addi	r3,r2,1
  80da98:	e0bffd17 	ldw	r2,-12(fp)
  80da9c:	10c01b15 	stw	r3,108(r2)
  80daa0:	00000806 	br	80dac4 <emit_message+0x90>
  80daa4:	e0bffd17 	ldw	r2,-12(fp)
  80daa8:	10c01a17 	ldw	r3,104(r2)
  80daac:	e0bfff17 	ldw	r2,-4(fp)
  80dab0:	18800416 	blt	r3,r2,80dac4 <emit_message+0x90>
  80dab4:	e0bffd17 	ldw	r2,-12(fp)
  80dab8:	10800217 	ldw	r2,8(r2)
  80dabc:	e13ffe17 	ldw	r4,-8(fp)
  80dac0:	103ee83a 	callr	r2
  80dac4:	0001883a 	nop
  80dac8:	e037883a 	mov	sp,fp
  80dacc:	dfc00117 	ldw	ra,4(sp)
  80dad0:	df000017 	ldw	fp,0(sp)
  80dad4:	dec00204 	addi	sp,sp,8
  80dad8:	f800283a 	ret

0080dadc <format_message>:
  80dadc:	defff004 	addi	sp,sp,-64
  80dae0:	dfc00f15 	stw	ra,60(sp)
  80dae4:	df000e15 	stw	fp,56(sp)
  80dae8:	df000e04 	addi	fp,sp,56
  80daec:	e13ffe15 	stw	r4,-8(fp)
  80daf0:	e17fff15 	stw	r5,-4(fp)
  80daf4:	e0bffe17 	ldw	r2,-8(fp)
  80daf8:	10800017 	ldw	r2,0(r2)
  80dafc:	e0bffb15 	stw	r2,-20(fp)
  80db00:	e0bffb17 	ldw	r2,-20(fp)
  80db04:	10800517 	ldw	r2,20(r2)
  80db08:	e0bffc15 	stw	r2,-16(fp)
  80db0c:	e03ff815 	stw	zero,-32(fp)
  80db10:	e0bffc17 	ldw	r2,-16(fp)
  80db14:	00800d0e 	bge	zero,r2,80db4c <format_message+0x70>
  80db18:	e0bffb17 	ldw	r2,-20(fp)
  80db1c:	10c01d17 	ldw	r3,116(r2)
  80db20:	e0bffc17 	ldw	r2,-16(fp)
  80db24:	18800916 	blt	r3,r2,80db4c <format_message+0x70>
  80db28:	e0bffb17 	ldw	r2,-20(fp)
  80db2c:	10c01c17 	ldw	r3,112(r2)
  80db30:	e0bffc17 	ldw	r2,-16(fp)
  80db34:	1085883a 	add	r2,r2,r2
  80db38:	1085883a 	add	r2,r2,r2
  80db3c:	1885883a 	add	r2,r3,r2
  80db40:	10800017 	ldw	r2,0(r2)
  80db44:	e0bff815 	stw	r2,-32(fp)
  80db48:	00001606 	br	80dba4 <format_message+0xc8>
  80db4c:	e0bffb17 	ldw	r2,-20(fp)
  80db50:	10801e17 	ldw	r2,120(r2)
  80db54:	10001326 	beq	r2,zero,80dba4 <format_message+0xc8>
  80db58:	e0bffb17 	ldw	r2,-20(fp)
  80db5c:	10801f17 	ldw	r2,124(r2)
  80db60:	e0fffc17 	ldw	r3,-16(fp)
  80db64:	18800f16 	blt	r3,r2,80dba4 <format_message+0xc8>
  80db68:	e0bffb17 	ldw	r2,-20(fp)
  80db6c:	10c02017 	ldw	r3,128(r2)
  80db70:	e0bffc17 	ldw	r2,-16(fp)
  80db74:	18800b16 	blt	r3,r2,80dba4 <format_message+0xc8>
  80db78:	e0bffb17 	ldw	r2,-20(fp)
  80db7c:	10c01e17 	ldw	r3,120(r2)
  80db80:	e0bffb17 	ldw	r2,-20(fp)
  80db84:	10801f17 	ldw	r2,124(r2)
  80db88:	e13ffc17 	ldw	r4,-16(fp)
  80db8c:	2085c83a 	sub	r2,r4,r2
  80db90:	1085883a 	add	r2,r2,r2
  80db94:	1085883a 	add	r2,r2,r2
  80db98:	1885883a 	add	r2,r3,r2
  80db9c:	10800017 	ldw	r2,0(r2)
  80dba0:	e0bff815 	stw	r2,-32(fp)
  80dba4:	e0bff817 	ldw	r2,-32(fp)
  80dba8:	1000071e 	bne	r2,zero,80dbc8 <format_message+0xec>
  80dbac:	e0bffb17 	ldw	r2,-20(fp)
  80dbb0:	e0fffc17 	ldw	r3,-16(fp)
  80dbb4:	10c00615 	stw	r3,24(r2)
  80dbb8:	e0bffb17 	ldw	r2,-20(fp)
  80dbbc:	10801c17 	ldw	r2,112(r2)
  80dbc0:	10800017 	ldw	r2,0(r2)
  80dbc4:	e0bff815 	stw	r2,-32(fp)
  80dbc8:	e03ffa15 	stw	zero,-24(fp)
  80dbcc:	e0bff817 	ldw	r2,-32(fp)
  80dbd0:	e0bff915 	stw	r2,-28(fp)
  80dbd4:	00000d06 	br	80dc0c <format_message+0x130>
  80dbd8:	e0bffd07 	ldb	r2,-12(fp)
  80dbdc:	10800958 	cmpnei	r2,r2,37
  80dbe0:	10000a1e 	bne	r2,zero,80dc0c <format_message+0x130>
  80dbe4:	e0bff917 	ldw	r2,-28(fp)
  80dbe8:	10800003 	ldbu	r2,0(r2)
  80dbec:	10803fcc 	andi	r2,r2,255
  80dbf0:	1080201c 	xori	r2,r2,128
  80dbf4:	10bfe004 	addi	r2,r2,-128
  80dbf8:	10801cd8 	cmpnei	r2,r2,115
  80dbfc:	10000b1e 	bne	r2,zero,80dc2c <format_message+0x150>
  80dc00:	00800044 	movi	r2,1
  80dc04:	e0bffa15 	stw	r2,-24(fp)
  80dc08:	00000806 	br	80dc2c <format_message+0x150>
  80dc0c:	e0bff917 	ldw	r2,-28(fp)
  80dc10:	10c00044 	addi	r3,r2,1
  80dc14:	e0fff915 	stw	r3,-28(fp)
  80dc18:	10800003 	ldbu	r2,0(r2)
  80dc1c:	e0bffd05 	stb	r2,-12(fp)
  80dc20:	e0bffd07 	ldb	r2,-12(fp)
  80dc24:	103fec1e 	bne	r2,zero,80dbd8 <__alt_mem_epcs_flash_controller_0+0xff804bd8>
  80dc28:	00000106 	br	80dc30 <format_message+0x154>
  80dc2c:	0001883a 	nop
  80dc30:	e0bffa17 	ldw	r2,-24(fp)
  80dc34:	10000726 	beq	r2,zero,80dc54 <format_message+0x178>
  80dc38:	e0bffb17 	ldw	r2,-20(fp)
  80dc3c:	10800604 	addi	r2,r2,24
  80dc40:	100d883a 	mov	r6,r2
  80dc44:	e17ff817 	ldw	r5,-32(fp)
  80dc48:	e13fff17 	ldw	r4,-4(fp)
  80dc4c:	08349840 	call	834984 <sprintf>
  80dc50:	00001b06 	br	80dcc0 <format_message+0x1e4>
  80dc54:	e0bffb17 	ldw	r2,-20(fp)
  80dc58:	12000617 	ldw	r8,24(r2)
  80dc5c:	e0bffb17 	ldw	r2,-20(fp)
  80dc60:	12400717 	ldw	r9,28(r2)
  80dc64:	e0bffb17 	ldw	r2,-20(fp)
  80dc68:	10800817 	ldw	r2,32(r2)
  80dc6c:	e0fffb17 	ldw	r3,-20(fp)
  80dc70:	18c00917 	ldw	r3,36(r3)
  80dc74:	e13ffb17 	ldw	r4,-20(fp)
  80dc78:	21000a17 	ldw	r4,40(r4)
  80dc7c:	e17ffb17 	ldw	r5,-20(fp)
  80dc80:	29400b17 	ldw	r5,44(r5)
  80dc84:	e1bffb17 	ldw	r6,-20(fp)
  80dc88:	31800c17 	ldw	r6,48(r6)
  80dc8c:	e1fffb17 	ldw	r7,-20(fp)
  80dc90:	39c00d17 	ldw	r7,52(r7)
  80dc94:	d9c00515 	stw	r7,20(sp)
  80dc98:	d9800415 	stw	r6,16(sp)
  80dc9c:	d9400315 	stw	r5,12(sp)
  80dca0:	d9000215 	stw	r4,8(sp)
  80dca4:	d8c00115 	stw	r3,4(sp)
  80dca8:	d8800015 	stw	r2,0(sp)
  80dcac:	480f883a 	mov	r7,r9
  80dcb0:	400d883a 	mov	r6,r8
  80dcb4:	e17ff817 	ldw	r5,-32(fp)
  80dcb8:	e13fff17 	ldw	r4,-4(fp)
  80dcbc:	08349840 	call	834984 <sprintf>
  80dcc0:	0001883a 	nop
  80dcc4:	e037883a 	mov	sp,fp
  80dcc8:	dfc00117 	ldw	ra,4(sp)
  80dccc:	df000017 	ldw	fp,0(sp)
  80dcd0:	dec00204 	addi	sp,sp,8
  80dcd4:	f800283a 	ret

0080dcd8 <reset_error_mgr>:
  80dcd8:	defffe04 	addi	sp,sp,-8
  80dcdc:	df000115 	stw	fp,4(sp)
  80dce0:	df000104 	addi	fp,sp,4
  80dce4:	e13fff15 	stw	r4,-4(fp)
  80dce8:	e0bfff17 	ldw	r2,-4(fp)
  80dcec:	10800017 	ldw	r2,0(r2)
  80dcf0:	10001b15 	stw	zero,108(r2)
  80dcf4:	e0bfff17 	ldw	r2,-4(fp)
  80dcf8:	10800017 	ldw	r2,0(r2)
  80dcfc:	10000515 	stw	zero,20(r2)
  80dd00:	0001883a 	nop
  80dd04:	e037883a 	mov	sp,fp
  80dd08:	df000017 	ldw	fp,0(sp)
  80dd0c:	dec00104 	addi	sp,sp,4
  80dd10:	f800283a 	ret

0080dd14 <jpeg_std_error>:
  80dd14:	defffe04 	addi	sp,sp,-8
  80dd18:	df000115 	stw	fp,4(sp)
  80dd1c:	df000104 	addi	fp,sp,4
  80dd20:	e13fff15 	stw	r4,-4(fp)
  80dd24:	e0ffff17 	ldw	r3,-4(fp)
  80dd28:	00802074 	movhi	r2,129
  80dd2c:	10b66704 	addi	r2,r2,-9828
  80dd30:	18800015 	stw	r2,0(r3)
  80dd34:	e0ffff17 	ldw	r3,-4(fp)
  80dd38:	00802074 	movhi	r2,129
  80dd3c:	10b68d04 	addi	r2,r2,-9676
  80dd40:	18800115 	stw	r2,4(r3)
  80dd44:	e0ffff17 	ldw	r3,-4(fp)
  80dd48:	00802074 	movhi	r2,129
  80dd4c:	10b67504 	addi	r2,r2,-9772
  80dd50:	18800215 	stw	r2,8(r3)
  80dd54:	e0ffff17 	ldw	r3,-4(fp)
  80dd58:	00802074 	movhi	r2,129
  80dd5c:	10b6b704 	addi	r2,r2,-9508
  80dd60:	18800315 	stw	r2,12(r3)
  80dd64:	e0ffff17 	ldw	r3,-4(fp)
  80dd68:	00802074 	movhi	r2,129
  80dd6c:	10b73604 	addi	r2,r2,-9000
  80dd70:	18800415 	stw	r2,16(r3)
  80dd74:	e0bfff17 	ldw	r2,-4(fp)
  80dd78:	10001a15 	stw	zero,104(r2)
  80dd7c:	e0bfff17 	ldw	r2,-4(fp)
  80dd80:	10001b15 	stw	zero,108(r2)
  80dd84:	e0bfff17 	ldw	r2,-4(fp)
  80dd88:	10000515 	stw	zero,20(r2)
  80dd8c:	e0ffff17 	ldw	r3,-4(fp)
  80dd90:	008021b4 	movhi	r2,134
  80dd94:	10a06f04 	addi	r2,r2,-32324
  80dd98:	18801c15 	stw	r2,112(r3)
  80dd9c:	e0bfff17 	ldw	r2,-4(fp)
  80dda0:	00c01f84 	movi	r3,126
  80dda4:	10c01d15 	stw	r3,116(r2)
  80dda8:	e0bfff17 	ldw	r2,-4(fp)
  80ddac:	10001e15 	stw	zero,120(r2)
  80ddb0:	e0bfff17 	ldw	r2,-4(fp)
  80ddb4:	10001f15 	stw	zero,124(r2)
  80ddb8:	e0bfff17 	ldw	r2,-4(fp)
  80ddbc:	10002015 	stw	zero,128(r2)
  80ddc0:	e0bfff17 	ldw	r2,-4(fp)
  80ddc4:	e037883a 	mov	sp,fp
  80ddc8:	df000017 	ldw	fp,0(sp)
  80ddcc:	dec00104 	addi	sp,sp,4
  80ddd0:	f800283a 	ret

0080ddd4 <out_of_memory>:
  80ddd4:	defffc04 	addi	sp,sp,-16
  80ddd8:	dfc00315 	stw	ra,12(sp)
  80dddc:	df000215 	stw	fp,8(sp)
  80dde0:	df000204 	addi	fp,sp,8
  80dde4:	e13ffe15 	stw	r4,-8(fp)
  80dde8:	e17fff15 	stw	r5,-4(fp)
  80ddec:	e0bffe17 	ldw	r2,-8(fp)
  80ddf0:	10800017 	ldw	r2,0(r2)
  80ddf4:	00c00e04 	movi	r3,56
  80ddf8:	10c00515 	stw	r3,20(r2)
  80ddfc:	e0bffe17 	ldw	r2,-8(fp)
  80de00:	10800017 	ldw	r2,0(r2)
  80de04:	e0ffff17 	ldw	r3,-4(fp)
  80de08:	10c00615 	stw	r3,24(r2)
  80de0c:	e0bffe17 	ldw	r2,-8(fp)
  80de10:	10800017 	ldw	r2,0(r2)
  80de14:	10800017 	ldw	r2,0(r2)
  80de18:	e13ffe17 	ldw	r4,-8(fp)
  80de1c:	103ee83a 	callr	r2
  80de20:	0001883a 	nop
  80de24:	e037883a 	mov	sp,fp
  80de28:	dfc00117 	ldw	ra,4(sp)
  80de2c:	df000017 	ldw	fp,0(sp)
  80de30:	dec00204 	addi	sp,sp,8
  80de34:	f800283a 	ret

0080de38 <alloc_small>:
  80de38:	defff404 	addi	sp,sp,-48
  80de3c:	dfc00b15 	stw	ra,44(sp)
  80de40:	df000a15 	stw	fp,40(sp)
  80de44:	df000a04 	addi	fp,sp,40
  80de48:	e13ffd15 	stw	r4,-12(fp)
  80de4c:	e17ffe15 	stw	r5,-8(fp)
  80de50:	e1bfff15 	stw	r6,-4(fp)
  80de54:	e0bffd17 	ldw	r2,-12(fp)
  80de58:	10800117 	ldw	r2,4(r2)
  80de5c:	e0bff915 	stw	r2,-28(fp)
  80de60:	e0ffff17 	ldw	r3,-4(fp)
  80de64:	008ee6f4 	movhi	r2,15259
  80de68:	10b27d04 	addi	r2,r2,-13836
  80de6c:	10c0032e 	bgeu	r2,r3,80de7c <alloc_small+0x44>
  80de70:	01400044 	movi	r5,1
  80de74:	e13ffd17 	ldw	r4,-12(fp)
  80de78:	080ddd40 	call	80ddd4 <out_of_memory>
  80de7c:	e0bfff17 	ldw	r2,-4(fp)
  80de80:	108001cc 	andi	r2,r2,7
  80de84:	e0bffa15 	stw	r2,-24(fp)
  80de88:	e0bffa17 	ldw	r2,-24(fp)
  80de8c:	10000526 	beq	r2,zero,80dea4 <alloc_small+0x6c>
  80de90:	e0ffff17 	ldw	r3,-4(fp)
  80de94:	e0bffa17 	ldw	r2,-24(fp)
  80de98:	1885c83a 	sub	r2,r3,r2
  80de9c:	10800204 	addi	r2,r2,8
  80dea0:	e0bfff15 	stw	r2,-4(fp)
  80dea4:	e0bffe17 	ldw	r2,-8(fp)
  80dea8:	10000316 	blt	r2,zero,80deb8 <alloc_small+0x80>
  80deac:	e0bffe17 	ldw	r2,-8(fp)
  80deb0:	10800090 	cmplti	r2,r2,2
  80deb4:	10000d1e 	bne	r2,zero,80deec <alloc_small+0xb4>
  80deb8:	e0bffd17 	ldw	r2,-12(fp)
  80debc:	10800017 	ldw	r2,0(r2)
  80dec0:	00c003c4 	movi	r3,15
  80dec4:	10c00515 	stw	r3,20(r2)
  80dec8:	e0bffd17 	ldw	r2,-12(fp)
  80decc:	10800017 	ldw	r2,0(r2)
  80ded0:	e0fffe17 	ldw	r3,-8(fp)
  80ded4:	10c00615 	stw	r3,24(r2)
  80ded8:	e0bffd17 	ldw	r2,-12(fp)
  80dedc:	10800017 	ldw	r2,0(r2)
  80dee0:	10800017 	ldw	r2,0(r2)
  80dee4:	e13ffd17 	ldw	r4,-12(fp)
  80dee8:	103ee83a 	callr	r2
  80deec:	e03ff715 	stw	zero,-36(fp)
  80def0:	e0fff917 	ldw	r3,-28(fp)
  80def4:	e0bffe17 	ldw	r2,-8(fp)
  80def8:	10800344 	addi	r2,r2,13
  80defc:	1085883a 	add	r2,r2,r2
  80df00:	1085883a 	add	r2,r2,r2
  80df04:	1885883a 	add	r2,r3,r2
  80df08:	10800017 	ldw	r2,0(r2)
  80df0c:	e0bff615 	stw	r2,-40(fp)
  80df10:	00000906 	br	80df38 <alloc_small+0x100>
  80df14:	e0bff617 	ldw	r2,-40(fp)
  80df18:	10c00217 	ldw	r3,8(r2)
  80df1c:	e0bfff17 	ldw	r2,-4(fp)
  80df20:	1880082e 	bgeu	r3,r2,80df44 <alloc_small+0x10c>
  80df24:	e0bff617 	ldw	r2,-40(fp)
  80df28:	e0bff715 	stw	r2,-36(fp)
  80df2c:	e0bff617 	ldw	r2,-40(fp)
  80df30:	10800017 	ldw	r2,0(r2)
  80df34:	e0bff615 	stw	r2,-40(fp)
  80df38:	e0bff617 	ldw	r2,-40(fp)
  80df3c:	103ff51e 	bne	r2,zero,80df14 <__alt_mem_epcs_flash_controller_0+0xff804f14>
  80df40:	00000106 	br	80df48 <alloc_small+0x110>
  80df44:	0001883a 	nop
  80df48:	e0bff617 	ldw	r2,-40(fp)
  80df4c:	1000541e 	bne	r2,zero,80e0a0 <alloc_small+0x268>
  80df50:	e0bfff17 	ldw	r2,-4(fp)
  80df54:	10800304 	addi	r2,r2,12
  80df58:	e0bffb15 	stw	r2,-20(fp)
  80df5c:	e0bff717 	ldw	r2,-36(fp)
  80df60:	1000081e 	bne	r2,zero,80df84 <alloc_small+0x14c>
  80df64:	e0bffe17 	ldw	r2,-8(fp)
  80df68:	1085883a 	add	r2,r2,r2
  80df6c:	1087883a 	add	r3,r2,r2
  80df70:	d0a03704 	addi	r2,gp,-32548
  80df74:	1885883a 	add	r2,r3,r2
  80df78:	10800017 	ldw	r2,0(r2)
  80df7c:	e0bff815 	stw	r2,-32(fp)
  80df80:	00000706 	br	80dfa0 <alloc_small+0x168>
  80df84:	e0bffe17 	ldw	r2,-8(fp)
  80df88:	1085883a 	add	r2,r2,r2
  80df8c:	1087883a 	add	r3,r2,r2
  80df90:	d0a03904 	addi	r2,gp,-32540
  80df94:	1885883a 	add	r2,r3,r2
  80df98:	10800017 	ldw	r2,0(r2)
  80df9c:	e0bff815 	stw	r2,-32(fp)
  80dfa0:	008ee6f4 	movhi	r2,15259
  80dfa4:	10b28004 	addi	r2,r2,-13824
  80dfa8:	e0fffb17 	ldw	r3,-20(fp)
  80dfac:	10c7c83a 	sub	r3,r2,r3
  80dfb0:	e0bff817 	ldw	r2,-32(fp)
  80dfb4:	1880052e 	bgeu	r3,r2,80dfcc <alloc_small+0x194>
  80dfb8:	008ee6f4 	movhi	r2,15259
  80dfbc:	10b28004 	addi	r2,r2,-13824
  80dfc0:	e0fffb17 	ldw	r3,-20(fp)
  80dfc4:	10c5c83a 	sub	r2,r2,r3
  80dfc8:	e0bff815 	stw	r2,-32(fp)
  80dfcc:	e0fffb17 	ldw	r3,-20(fp)
  80dfd0:	e0bff817 	ldw	r2,-32(fp)
  80dfd4:	1885883a 	add	r2,r3,r2
  80dfd8:	100b883a 	mov	r5,r2
  80dfdc:	e13ffd17 	ldw	r4,-12(fp)
  80dfe0:	080fb040 	call	80fb04 <jpeg_get_small>
  80dfe4:	e0bff615 	stw	r2,-40(fp)
  80dfe8:	e0bff617 	ldw	r2,-40(fp)
  80dfec:	10000a1e 	bne	r2,zero,80e018 <alloc_small+0x1e0>
  80dff0:	e0bff817 	ldw	r2,-32(fp)
  80dff4:	1004d07a 	srli	r2,r2,1
  80dff8:	e0bff815 	stw	r2,-32(fp)
  80dffc:	e0bff817 	ldw	r2,-32(fp)
  80e000:	10800ca8 	cmpgeui	r2,r2,50
  80e004:	103ff11e 	bne	r2,zero,80dfcc <__alt_mem_epcs_flash_controller_0+0xff804fcc>
  80e008:	01400084 	movi	r5,2
  80e00c:	e13ffd17 	ldw	r4,-12(fp)
  80e010:	080ddd40 	call	80ddd4 <out_of_memory>
  80e014:	003fed06 	br	80dfcc <__alt_mem_epcs_flash_controller_0+0xff804fcc>
  80e018:	0001883a 	nop
  80e01c:	e0bff917 	ldw	r2,-28(fp)
  80e020:	10801317 	ldw	r2,76(r2)
  80e024:	1009883a 	mov	r4,r2
  80e028:	e0fffb17 	ldw	r3,-20(fp)
  80e02c:	e0bff817 	ldw	r2,-32(fp)
  80e030:	1885883a 	add	r2,r3,r2
  80e034:	2085883a 	add	r2,r4,r2
  80e038:	1007883a 	mov	r3,r2
  80e03c:	e0bff917 	ldw	r2,-28(fp)
  80e040:	10c01315 	stw	r3,76(r2)
  80e044:	e0bff617 	ldw	r2,-40(fp)
  80e048:	10000015 	stw	zero,0(r2)
  80e04c:	e0bff617 	ldw	r2,-40(fp)
  80e050:	10000115 	stw	zero,4(r2)
  80e054:	e0ffff17 	ldw	r3,-4(fp)
  80e058:	e0bff817 	ldw	r2,-32(fp)
  80e05c:	1887883a 	add	r3,r3,r2
  80e060:	e0bff617 	ldw	r2,-40(fp)
  80e064:	10c00215 	stw	r3,8(r2)
  80e068:	e0bff717 	ldw	r2,-36(fp)
  80e06c:	1000091e 	bne	r2,zero,80e094 <alloc_small+0x25c>
  80e070:	e0fff917 	ldw	r3,-28(fp)
  80e074:	e0bffe17 	ldw	r2,-8(fp)
  80e078:	10800344 	addi	r2,r2,13
  80e07c:	1085883a 	add	r2,r2,r2
  80e080:	1085883a 	add	r2,r2,r2
  80e084:	1885883a 	add	r2,r3,r2
  80e088:	e0fff617 	ldw	r3,-40(fp)
  80e08c:	10c00015 	stw	r3,0(r2)
  80e090:	00000306 	br	80e0a0 <alloc_small+0x268>
  80e094:	e0bff717 	ldw	r2,-36(fp)
  80e098:	e0fff617 	ldw	r3,-40(fp)
  80e09c:	10c00015 	stw	r3,0(r2)
  80e0a0:	e0bff617 	ldw	r2,-40(fp)
  80e0a4:	10800304 	addi	r2,r2,12
  80e0a8:	e0bffc15 	stw	r2,-16(fp)
  80e0ac:	e0bff617 	ldw	r2,-40(fp)
  80e0b0:	10800117 	ldw	r2,4(r2)
  80e0b4:	e0fffc17 	ldw	r3,-16(fp)
  80e0b8:	1885883a 	add	r2,r3,r2
  80e0bc:	e0bffc15 	stw	r2,-16(fp)
  80e0c0:	e0bff617 	ldw	r2,-40(fp)
  80e0c4:	10c00117 	ldw	r3,4(r2)
  80e0c8:	e0bfff17 	ldw	r2,-4(fp)
  80e0cc:	1887883a 	add	r3,r3,r2
  80e0d0:	e0bff617 	ldw	r2,-40(fp)
  80e0d4:	10c00115 	stw	r3,4(r2)
  80e0d8:	e0bff617 	ldw	r2,-40(fp)
  80e0dc:	10c00217 	ldw	r3,8(r2)
  80e0e0:	e0bfff17 	ldw	r2,-4(fp)
  80e0e4:	1887c83a 	sub	r3,r3,r2
  80e0e8:	e0bff617 	ldw	r2,-40(fp)
  80e0ec:	10c00215 	stw	r3,8(r2)
  80e0f0:	e0bffc17 	ldw	r2,-16(fp)
  80e0f4:	e037883a 	mov	sp,fp
  80e0f8:	dfc00117 	ldw	ra,4(sp)
  80e0fc:	df000017 	ldw	fp,0(sp)
  80e100:	dec00204 	addi	sp,sp,8
  80e104:	f800283a 	ret

0080e108 <alloc_large>:
  80e108:	defff804 	addi	sp,sp,-32
  80e10c:	dfc00715 	stw	ra,28(sp)
  80e110:	df000615 	stw	fp,24(sp)
  80e114:	df000604 	addi	fp,sp,24
  80e118:	e13ffd15 	stw	r4,-12(fp)
  80e11c:	e17ffe15 	stw	r5,-8(fp)
  80e120:	e1bfff15 	stw	r6,-4(fp)
  80e124:	e0bffd17 	ldw	r2,-12(fp)
  80e128:	10800117 	ldw	r2,4(r2)
  80e12c:	e0bffa15 	stw	r2,-24(fp)
  80e130:	e0ffff17 	ldw	r3,-4(fp)
  80e134:	008ee6f4 	movhi	r2,15259
  80e138:	10b27d04 	addi	r2,r2,-13836
  80e13c:	10c0032e 	bgeu	r2,r3,80e14c <alloc_large+0x44>
  80e140:	014000c4 	movi	r5,3
  80e144:	e13ffd17 	ldw	r4,-12(fp)
  80e148:	080ddd40 	call	80ddd4 <out_of_memory>
  80e14c:	e0bfff17 	ldw	r2,-4(fp)
  80e150:	108001cc 	andi	r2,r2,7
  80e154:	e0bffb15 	stw	r2,-20(fp)
  80e158:	e0bffb17 	ldw	r2,-20(fp)
  80e15c:	10000526 	beq	r2,zero,80e174 <alloc_large+0x6c>
  80e160:	e0ffff17 	ldw	r3,-4(fp)
  80e164:	e0bffb17 	ldw	r2,-20(fp)
  80e168:	1885c83a 	sub	r2,r3,r2
  80e16c:	10800204 	addi	r2,r2,8
  80e170:	e0bfff15 	stw	r2,-4(fp)
  80e174:	e0bffe17 	ldw	r2,-8(fp)
  80e178:	10000316 	blt	r2,zero,80e188 <alloc_large+0x80>
  80e17c:	e0bffe17 	ldw	r2,-8(fp)
  80e180:	10800090 	cmplti	r2,r2,2
  80e184:	10000d1e 	bne	r2,zero,80e1bc <alloc_large+0xb4>
  80e188:	e0bffd17 	ldw	r2,-12(fp)
  80e18c:	10800017 	ldw	r2,0(r2)
  80e190:	00c003c4 	movi	r3,15
  80e194:	10c00515 	stw	r3,20(r2)
  80e198:	e0bffd17 	ldw	r2,-12(fp)
  80e19c:	10800017 	ldw	r2,0(r2)
  80e1a0:	e0fffe17 	ldw	r3,-8(fp)
  80e1a4:	10c00615 	stw	r3,24(r2)
  80e1a8:	e0bffd17 	ldw	r2,-12(fp)
  80e1ac:	10800017 	ldw	r2,0(r2)
  80e1b0:	10800017 	ldw	r2,0(r2)
  80e1b4:	e13ffd17 	ldw	r4,-12(fp)
  80e1b8:	103ee83a 	callr	r2
  80e1bc:	e0bfff17 	ldw	r2,-4(fp)
  80e1c0:	10800304 	addi	r2,r2,12
  80e1c4:	100b883a 	mov	r5,r2
  80e1c8:	e13ffd17 	ldw	r4,-12(fp)
  80e1cc:	080fb740 	call	80fb74 <jpeg_get_large>
  80e1d0:	e0bffc15 	stw	r2,-16(fp)
  80e1d4:	e0bffc17 	ldw	r2,-16(fp)
  80e1d8:	1000031e 	bne	r2,zero,80e1e8 <alloc_large+0xe0>
  80e1dc:	01400104 	movi	r5,4
  80e1e0:	e13ffd17 	ldw	r4,-12(fp)
  80e1e4:	080ddd40 	call	80ddd4 <out_of_memory>
  80e1e8:	e0bffa17 	ldw	r2,-24(fp)
  80e1ec:	10801317 	ldw	r2,76(r2)
  80e1f0:	1007883a 	mov	r3,r2
  80e1f4:	e0bfff17 	ldw	r2,-4(fp)
  80e1f8:	1885883a 	add	r2,r3,r2
  80e1fc:	10800304 	addi	r2,r2,12
  80e200:	1007883a 	mov	r3,r2
  80e204:	e0bffa17 	ldw	r2,-24(fp)
  80e208:	10c01315 	stw	r3,76(r2)
  80e20c:	e0fffa17 	ldw	r3,-24(fp)
  80e210:	e0bffe17 	ldw	r2,-8(fp)
  80e214:	108003c4 	addi	r2,r2,15
  80e218:	1085883a 	add	r2,r2,r2
  80e21c:	1085883a 	add	r2,r2,r2
  80e220:	1885883a 	add	r2,r3,r2
  80e224:	10c00017 	ldw	r3,0(r2)
  80e228:	e0bffc17 	ldw	r2,-16(fp)
  80e22c:	10c00015 	stw	r3,0(r2)
  80e230:	e0bffc17 	ldw	r2,-16(fp)
  80e234:	e0ffff17 	ldw	r3,-4(fp)
  80e238:	10c00115 	stw	r3,4(r2)
  80e23c:	e0bffc17 	ldw	r2,-16(fp)
  80e240:	10000215 	stw	zero,8(r2)
  80e244:	e0fffa17 	ldw	r3,-24(fp)
  80e248:	e0bffe17 	ldw	r2,-8(fp)
  80e24c:	108003c4 	addi	r2,r2,15
  80e250:	1085883a 	add	r2,r2,r2
  80e254:	1085883a 	add	r2,r2,r2
  80e258:	1885883a 	add	r2,r3,r2
  80e25c:	e0fffc17 	ldw	r3,-16(fp)
  80e260:	10c00015 	stw	r3,0(r2)
  80e264:	e0bffc17 	ldw	r2,-16(fp)
  80e268:	10800304 	addi	r2,r2,12
  80e26c:	e037883a 	mov	sp,fp
  80e270:	dfc00117 	ldw	ra,4(sp)
  80e274:	df000017 	ldw	fp,0(sp)
  80e278:	dec00204 	addi	sp,sp,8
  80e27c:	f800283a 	ret

0080e280 <alloc_sarray>:
  80e280:	defff304 	addi	sp,sp,-52
  80e284:	dfc00c15 	stw	ra,48(sp)
  80e288:	df000b15 	stw	fp,44(sp)
  80e28c:	df000b04 	addi	fp,sp,44
  80e290:	e13ffc15 	stw	r4,-16(fp)
  80e294:	e17ffd15 	stw	r5,-12(fp)
  80e298:	e1bffe15 	stw	r6,-8(fp)
  80e29c:	e1ffff15 	stw	r7,-4(fp)
  80e2a0:	e0bffc17 	ldw	r2,-16(fp)
  80e2a4:	10800117 	ldw	r2,4(r2)
  80e2a8:	e0bff915 	stw	r2,-28(fp)
  80e2ac:	e17ffe17 	ldw	r5,-8(fp)
  80e2b0:	010ee6f4 	movhi	r4,15259
  80e2b4:	21327d04 	addi	r4,r4,-13836
  80e2b8:	08304480 	call	830448 <__udivsi3>
  80e2bc:	e0bffa15 	stw	r2,-24(fp)
  80e2c0:	e0bffa17 	ldw	r2,-24(fp)
  80e2c4:	00800916 	blt	zero,r2,80e2ec <alloc_sarray+0x6c>
  80e2c8:	e0bffc17 	ldw	r2,-16(fp)
  80e2cc:	10800017 	ldw	r2,0(r2)
  80e2d0:	00c01204 	movi	r3,72
  80e2d4:	10c00515 	stw	r3,20(r2)
  80e2d8:	e0bffc17 	ldw	r2,-16(fp)
  80e2dc:	10800017 	ldw	r2,0(r2)
  80e2e0:	10800017 	ldw	r2,0(r2)
  80e2e4:	e13ffc17 	ldw	r4,-16(fp)
  80e2e8:	103ee83a 	callr	r2
  80e2ec:	e0bfff17 	ldw	r2,-4(fp)
  80e2f0:	e0fffa17 	ldw	r3,-24(fp)
  80e2f4:	1880030e 	bge	r3,r2,80e304 <alloc_sarray+0x84>
  80e2f8:	e0bffa17 	ldw	r2,-24(fp)
  80e2fc:	e0bff615 	stw	r2,-40(fp)
  80e300:	00000206 	br	80e30c <alloc_sarray+0x8c>
  80e304:	e0bfff17 	ldw	r2,-4(fp)
  80e308:	e0bff615 	stw	r2,-40(fp)
  80e30c:	e0bff917 	ldw	r2,-28(fp)
  80e310:	e0fff617 	ldw	r3,-40(fp)
  80e314:	10c01415 	stw	r3,80(r2)
  80e318:	e0bfff17 	ldw	r2,-4(fp)
  80e31c:	1085883a 	add	r2,r2,r2
  80e320:	1085883a 	add	r2,r2,r2
  80e324:	100d883a 	mov	r6,r2
  80e328:	e17ffd17 	ldw	r5,-12(fp)
  80e32c:	e13ffc17 	ldw	r4,-16(fp)
  80e330:	080de380 	call	80de38 <alloc_small>
  80e334:	e0bffb15 	stw	r2,-20(fp)
  80e338:	e03ff715 	stw	zero,-36(fp)
  80e33c:	00002506 	br	80e3d4 <alloc_sarray+0x154>
  80e340:	e0ffff17 	ldw	r3,-4(fp)
  80e344:	e0bff717 	ldw	r2,-36(fp)
  80e348:	1885c83a 	sub	r2,r3,r2
  80e34c:	e0fff617 	ldw	r3,-40(fp)
  80e350:	1880012e 	bgeu	r3,r2,80e358 <alloc_sarray+0xd8>
  80e354:	1805883a 	mov	r2,r3
  80e358:	e0bff615 	stw	r2,-40(fp)
  80e35c:	e17ffe17 	ldw	r5,-8(fp)
  80e360:	e13ff617 	ldw	r4,-40(fp)
  80e364:	08305040 	call	830504 <__mulsi3>
  80e368:	100d883a 	mov	r6,r2
  80e36c:	e17ffd17 	ldw	r5,-12(fp)
  80e370:	e13ffc17 	ldw	r4,-16(fp)
  80e374:	080e1080 	call	80e108 <alloc_large>
  80e378:	e0bff515 	stw	r2,-44(fp)
  80e37c:	e0bff617 	ldw	r2,-40(fp)
  80e380:	e0bff815 	stw	r2,-32(fp)
  80e384:	00001106 	br	80e3cc <alloc_sarray+0x14c>
  80e388:	e0bff717 	ldw	r2,-36(fp)
  80e38c:	10c00044 	addi	r3,r2,1
  80e390:	e0fff715 	stw	r3,-36(fp)
  80e394:	1085883a 	add	r2,r2,r2
  80e398:	1085883a 	add	r2,r2,r2
  80e39c:	1007883a 	mov	r3,r2
  80e3a0:	e0bffb17 	ldw	r2,-20(fp)
  80e3a4:	10c5883a 	add	r2,r2,r3
  80e3a8:	e0fff517 	ldw	r3,-44(fp)
  80e3ac:	10c00015 	stw	r3,0(r2)
  80e3b0:	e0fff517 	ldw	r3,-44(fp)
  80e3b4:	e0bffe17 	ldw	r2,-8(fp)
  80e3b8:	1885883a 	add	r2,r3,r2
  80e3bc:	e0bff515 	stw	r2,-44(fp)
  80e3c0:	e0bff817 	ldw	r2,-32(fp)
  80e3c4:	10bfffc4 	addi	r2,r2,-1
  80e3c8:	e0bff815 	stw	r2,-32(fp)
  80e3cc:	e0bff817 	ldw	r2,-32(fp)
  80e3d0:	103fed1e 	bne	r2,zero,80e388 <__alt_mem_epcs_flash_controller_0+0xff805388>
  80e3d4:	e0fff717 	ldw	r3,-36(fp)
  80e3d8:	e0bfff17 	ldw	r2,-4(fp)
  80e3dc:	18bfd836 	bltu	r3,r2,80e340 <__alt_mem_epcs_flash_controller_0+0xff805340>
  80e3e0:	e0bffb17 	ldw	r2,-20(fp)
  80e3e4:	e037883a 	mov	sp,fp
  80e3e8:	dfc00117 	ldw	ra,4(sp)
  80e3ec:	df000017 	ldw	fp,0(sp)
  80e3f0:	dec00204 	addi	sp,sp,8
  80e3f4:	f800283a 	ret

0080e3f8 <alloc_barray>:
  80e3f8:	defff304 	addi	sp,sp,-52
  80e3fc:	dfc00c15 	stw	ra,48(sp)
  80e400:	df000b15 	stw	fp,44(sp)
  80e404:	df000b04 	addi	fp,sp,44
  80e408:	e13ffc15 	stw	r4,-16(fp)
  80e40c:	e17ffd15 	stw	r5,-12(fp)
  80e410:	e1bffe15 	stw	r6,-8(fp)
  80e414:	e1ffff15 	stw	r7,-4(fp)
  80e418:	e0bffc17 	ldw	r2,-16(fp)
  80e41c:	10800117 	ldw	r2,4(r2)
  80e420:	e0bff915 	stw	r2,-28(fp)
  80e424:	e0bffe17 	ldw	r2,-8(fp)
  80e428:	100491fa 	slli	r2,r2,7
  80e42c:	100b883a 	mov	r5,r2
  80e430:	010ee6f4 	movhi	r4,15259
  80e434:	21327d04 	addi	r4,r4,-13836
  80e438:	08304480 	call	830448 <__udivsi3>
  80e43c:	e0bffa15 	stw	r2,-24(fp)
  80e440:	e0bffa17 	ldw	r2,-24(fp)
  80e444:	00800916 	blt	zero,r2,80e46c <alloc_barray+0x74>
  80e448:	e0bffc17 	ldw	r2,-16(fp)
  80e44c:	10800017 	ldw	r2,0(r2)
  80e450:	00c01204 	movi	r3,72
  80e454:	10c00515 	stw	r3,20(r2)
  80e458:	e0bffc17 	ldw	r2,-16(fp)
  80e45c:	10800017 	ldw	r2,0(r2)
  80e460:	10800017 	ldw	r2,0(r2)
  80e464:	e13ffc17 	ldw	r4,-16(fp)
  80e468:	103ee83a 	callr	r2
  80e46c:	e0bfff17 	ldw	r2,-4(fp)
  80e470:	e0fffa17 	ldw	r3,-24(fp)
  80e474:	1880030e 	bge	r3,r2,80e484 <alloc_barray+0x8c>
  80e478:	e0bffa17 	ldw	r2,-24(fp)
  80e47c:	e0bff615 	stw	r2,-40(fp)
  80e480:	00000206 	br	80e48c <alloc_barray+0x94>
  80e484:	e0bfff17 	ldw	r2,-4(fp)
  80e488:	e0bff615 	stw	r2,-40(fp)
  80e48c:	e0bff917 	ldw	r2,-28(fp)
  80e490:	e0fff617 	ldw	r3,-40(fp)
  80e494:	10c01415 	stw	r3,80(r2)
  80e498:	e0bfff17 	ldw	r2,-4(fp)
  80e49c:	1085883a 	add	r2,r2,r2
  80e4a0:	1085883a 	add	r2,r2,r2
  80e4a4:	100d883a 	mov	r6,r2
  80e4a8:	e17ffd17 	ldw	r5,-12(fp)
  80e4ac:	e13ffc17 	ldw	r4,-16(fp)
  80e4b0:	080de380 	call	80de38 <alloc_small>
  80e4b4:	e0bffb15 	stw	r2,-20(fp)
  80e4b8:	e03ff715 	stw	zero,-36(fp)
  80e4bc:	00002706 	br	80e55c <alloc_barray+0x164>
  80e4c0:	e0ffff17 	ldw	r3,-4(fp)
  80e4c4:	e0bff717 	ldw	r2,-36(fp)
  80e4c8:	1885c83a 	sub	r2,r3,r2
  80e4cc:	e0fff617 	ldw	r3,-40(fp)
  80e4d0:	1880012e 	bgeu	r3,r2,80e4d8 <alloc_barray+0xe0>
  80e4d4:	1805883a 	mov	r2,r3
  80e4d8:	e0bff615 	stw	r2,-40(fp)
  80e4dc:	e17ffe17 	ldw	r5,-8(fp)
  80e4e0:	e13ff617 	ldw	r4,-40(fp)
  80e4e4:	08305040 	call	830504 <__mulsi3>
  80e4e8:	100491fa 	slli	r2,r2,7
  80e4ec:	100d883a 	mov	r6,r2
  80e4f0:	e17ffd17 	ldw	r5,-12(fp)
  80e4f4:	e13ffc17 	ldw	r4,-16(fp)
  80e4f8:	080e1080 	call	80e108 <alloc_large>
  80e4fc:	e0bff515 	stw	r2,-44(fp)
  80e500:	e0bff617 	ldw	r2,-40(fp)
  80e504:	e0bff815 	stw	r2,-32(fp)
  80e508:	00001206 	br	80e554 <alloc_barray+0x15c>
  80e50c:	e0bff717 	ldw	r2,-36(fp)
  80e510:	10c00044 	addi	r3,r2,1
  80e514:	e0fff715 	stw	r3,-36(fp)
  80e518:	1085883a 	add	r2,r2,r2
  80e51c:	1085883a 	add	r2,r2,r2
  80e520:	1007883a 	mov	r3,r2
  80e524:	e0bffb17 	ldw	r2,-20(fp)
  80e528:	10c5883a 	add	r2,r2,r3
  80e52c:	e0fff517 	ldw	r3,-44(fp)
  80e530:	10c00015 	stw	r3,0(r2)
  80e534:	e0bffe17 	ldw	r2,-8(fp)
  80e538:	100491fa 	slli	r2,r2,7
  80e53c:	e0fff517 	ldw	r3,-44(fp)
  80e540:	1885883a 	add	r2,r3,r2
  80e544:	e0bff515 	stw	r2,-44(fp)
  80e548:	e0bff817 	ldw	r2,-32(fp)
  80e54c:	10bfffc4 	addi	r2,r2,-1
  80e550:	e0bff815 	stw	r2,-32(fp)
  80e554:	e0bff817 	ldw	r2,-32(fp)
  80e558:	103fec1e 	bne	r2,zero,80e50c <__alt_mem_epcs_flash_controller_0+0xff80550c>
  80e55c:	e0fff717 	ldw	r3,-36(fp)
  80e560:	e0bfff17 	ldw	r2,-4(fp)
  80e564:	18bfd636 	bltu	r3,r2,80e4c0 <__alt_mem_epcs_flash_controller_0+0xff8054c0>
  80e568:	e0bffb17 	ldw	r2,-20(fp)
  80e56c:	e037883a 	mov	sp,fp
  80e570:	dfc00117 	ldw	ra,4(sp)
  80e574:	df000017 	ldw	fp,0(sp)
  80e578:	dec00204 	addi	sp,sp,8
  80e57c:	f800283a 	ret

0080e580 <request_virt_sarray>:
  80e580:	defff804 	addi	sp,sp,-32
  80e584:	dfc00715 	stw	ra,28(sp)
  80e588:	df000615 	stw	fp,24(sp)
  80e58c:	df000604 	addi	fp,sp,24
  80e590:	e13ffc15 	stw	r4,-16(fp)
  80e594:	e17ffd15 	stw	r5,-12(fp)
  80e598:	e1bffe15 	stw	r6,-8(fp)
  80e59c:	e1ffff15 	stw	r7,-4(fp)
  80e5a0:	e0bffc17 	ldw	r2,-16(fp)
  80e5a4:	10800117 	ldw	r2,4(r2)
  80e5a8:	e0bffa15 	stw	r2,-24(fp)
  80e5ac:	e0bffd17 	ldw	r2,-12(fp)
  80e5b0:	10800060 	cmpeqi	r2,r2,1
  80e5b4:	10000d1e 	bne	r2,zero,80e5ec <request_virt_sarray+0x6c>
  80e5b8:	e0bffc17 	ldw	r2,-16(fp)
  80e5bc:	10800017 	ldw	r2,0(r2)
  80e5c0:	00c003c4 	movi	r3,15
  80e5c4:	10c00515 	stw	r3,20(r2)
  80e5c8:	e0bffc17 	ldw	r2,-16(fp)
  80e5cc:	10800017 	ldw	r2,0(r2)
  80e5d0:	e0fffd17 	ldw	r3,-12(fp)
  80e5d4:	10c00615 	stw	r3,24(r2)
  80e5d8:	e0bffc17 	ldw	r2,-16(fp)
  80e5dc:	10800017 	ldw	r2,0(r2)
  80e5e0:	10800017 	ldw	r2,0(r2)
  80e5e4:	e13ffc17 	ldw	r4,-16(fp)
  80e5e8:	103ee83a 	callr	r2
  80e5ec:	01802004 	movi	r6,128
  80e5f0:	e17ffd17 	ldw	r5,-12(fp)
  80e5f4:	e13ffc17 	ldw	r4,-16(fp)
  80e5f8:	080de380 	call	80de38 <alloc_small>
  80e5fc:	e0bffb15 	stw	r2,-20(fp)
  80e600:	e0bffb17 	ldw	r2,-20(fp)
  80e604:	10000015 	stw	zero,0(r2)
  80e608:	e0bffb17 	ldw	r2,-20(fp)
  80e60c:	e0c00217 	ldw	r3,8(fp)
  80e610:	10c00115 	stw	r3,4(r2)
  80e614:	e0bffb17 	ldw	r2,-20(fp)
  80e618:	e0ffff17 	ldw	r3,-4(fp)
  80e61c:	10c00215 	stw	r3,8(r2)
  80e620:	e0bffb17 	ldw	r2,-20(fp)
  80e624:	e0c00317 	ldw	r3,12(fp)
  80e628:	10c00315 	stw	r3,12(r2)
  80e62c:	e0bffb17 	ldw	r2,-20(fp)
  80e630:	e0fffe17 	ldw	r3,-8(fp)
  80e634:	10c00815 	stw	r3,32(r2)
  80e638:	e0bffb17 	ldw	r2,-20(fp)
  80e63c:	10000a15 	stw	zero,40(r2)
  80e640:	e0bffa17 	ldw	r2,-24(fp)
  80e644:	10c01117 	ldw	r3,68(r2)
  80e648:	e0bffb17 	ldw	r2,-20(fp)
  80e64c:	10c00b15 	stw	r3,44(r2)
  80e650:	e0bffa17 	ldw	r2,-24(fp)
  80e654:	e0fffb17 	ldw	r3,-20(fp)
  80e658:	10c01115 	stw	r3,68(r2)
  80e65c:	e0bffb17 	ldw	r2,-20(fp)
  80e660:	e037883a 	mov	sp,fp
  80e664:	dfc00117 	ldw	ra,4(sp)
  80e668:	df000017 	ldw	fp,0(sp)
  80e66c:	dec00204 	addi	sp,sp,8
  80e670:	f800283a 	ret

0080e674 <request_virt_barray>:
  80e674:	defff804 	addi	sp,sp,-32
  80e678:	dfc00715 	stw	ra,28(sp)
  80e67c:	df000615 	stw	fp,24(sp)
  80e680:	df000604 	addi	fp,sp,24
  80e684:	e13ffc15 	stw	r4,-16(fp)
  80e688:	e17ffd15 	stw	r5,-12(fp)
  80e68c:	e1bffe15 	stw	r6,-8(fp)
  80e690:	e1ffff15 	stw	r7,-4(fp)
  80e694:	e0bffc17 	ldw	r2,-16(fp)
  80e698:	10800117 	ldw	r2,4(r2)
  80e69c:	e0bffa15 	stw	r2,-24(fp)
  80e6a0:	e0bffd17 	ldw	r2,-12(fp)
  80e6a4:	10800060 	cmpeqi	r2,r2,1
  80e6a8:	10000d1e 	bne	r2,zero,80e6e0 <request_virt_barray+0x6c>
  80e6ac:	e0bffc17 	ldw	r2,-16(fp)
  80e6b0:	10800017 	ldw	r2,0(r2)
  80e6b4:	00c003c4 	movi	r3,15
  80e6b8:	10c00515 	stw	r3,20(r2)
  80e6bc:	e0bffc17 	ldw	r2,-16(fp)
  80e6c0:	10800017 	ldw	r2,0(r2)
  80e6c4:	e0fffd17 	ldw	r3,-12(fp)
  80e6c8:	10c00615 	stw	r3,24(r2)
  80e6cc:	e0bffc17 	ldw	r2,-16(fp)
  80e6d0:	10800017 	ldw	r2,0(r2)
  80e6d4:	10800017 	ldw	r2,0(r2)
  80e6d8:	e13ffc17 	ldw	r4,-16(fp)
  80e6dc:	103ee83a 	callr	r2
  80e6e0:	01802004 	movi	r6,128
  80e6e4:	e17ffd17 	ldw	r5,-12(fp)
  80e6e8:	e13ffc17 	ldw	r4,-16(fp)
  80e6ec:	080de380 	call	80de38 <alloc_small>
  80e6f0:	e0bffb15 	stw	r2,-20(fp)
  80e6f4:	e0bffb17 	ldw	r2,-20(fp)
  80e6f8:	10000015 	stw	zero,0(r2)
  80e6fc:	e0bffb17 	ldw	r2,-20(fp)
  80e700:	e0c00217 	ldw	r3,8(fp)
  80e704:	10c00115 	stw	r3,4(r2)
  80e708:	e0bffb17 	ldw	r2,-20(fp)
  80e70c:	e0ffff17 	ldw	r3,-4(fp)
  80e710:	10c00215 	stw	r3,8(r2)
  80e714:	e0bffb17 	ldw	r2,-20(fp)
  80e718:	e0c00317 	ldw	r3,12(fp)
  80e71c:	10c00315 	stw	r3,12(r2)
  80e720:	e0bffb17 	ldw	r2,-20(fp)
  80e724:	e0fffe17 	ldw	r3,-8(fp)
  80e728:	10c00815 	stw	r3,32(r2)
  80e72c:	e0bffb17 	ldw	r2,-20(fp)
  80e730:	10000a15 	stw	zero,40(r2)
  80e734:	e0bffa17 	ldw	r2,-24(fp)
  80e738:	10c01217 	ldw	r3,72(r2)
  80e73c:	e0bffb17 	ldw	r2,-20(fp)
  80e740:	10c00b15 	stw	r3,44(r2)
  80e744:	e0bffa17 	ldw	r2,-24(fp)
  80e748:	e0fffb17 	ldw	r3,-20(fp)
  80e74c:	10c01215 	stw	r3,72(r2)
  80e750:	e0bffb17 	ldw	r2,-20(fp)
  80e754:	e037883a 	mov	sp,fp
  80e758:	dfc00117 	ldw	ra,4(sp)
  80e75c:	df000017 	ldw	fp,0(sp)
  80e760:	dec00204 	addi	sp,sp,8
  80e764:	f800283a 	ret

0080e768 <realize_virt_arrays>:
  80e768:	defff404 	addi	sp,sp,-48
  80e76c:	dfc00b15 	stw	ra,44(sp)
  80e770:	df000a15 	stw	fp,40(sp)
  80e774:	dc000915 	stw	r16,36(sp)
  80e778:	df000a04 	addi	fp,sp,40
  80e77c:	e13ffe15 	stw	r4,-8(fp)
  80e780:	e0bffe17 	ldw	r2,-8(fp)
  80e784:	10800117 	ldw	r2,4(r2)
  80e788:	e0bffb15 	stw	r2,-20(fp)
  80e78c:	e03ff615 	stw	zero,-40(fp)
  80e790:	e03ff715 	stw	zero,-36(fp)
  80e794:	e0bffb17 	ldw	r2,-20(fp)
  80e798:	10801117 	ldw	r2,68(r2)
  80e79c:	e0bff915 	stw	r2,-28(fp)
  80e7a0:	00001e06 	br	80e81c <realize_virt_arrays+0xb4>
  80e7a4:	e0bff917 	ldw	r2,-28(fp)
  80e7a8:	10800017 	ldw	r2,0(r2)
  80e7ac:	1000181e 	bne	r2,zero,80e810 <realize_virt_arrays+0xa8>
  80e7b0:	e0bff917 	ldw	r2,-28(fp)
  80e7b4:	10800317 	ldw	r2,12(r2)
  80e7b8:	1007883a 	mov	r3,r2
  80e7bc:	e0bff917 	ldw	r2,-28(fp)
  80e7c0:	10800217 	ldw	r2,8(r2)
  80e7c4:	100b883a 	mov	r5,r2
  80e7c8:	1809883a 	mov	r4,r3
  80e7cc:	08305040 	call	830504 <__mulsi3>
  80e7d0:	1007883a 	mov	r3,r2
  80e7d4:	e0bff617 	ldw	r2,-40(fp)
  80e7d8:	1885883a 	add	r2,r3,r2
  80e7dc:	e0bff615 	stw	r2,-40(fp)
  80e7e0:	e0bff917 	ldw	r2,-28(fp)
  80e7e4:	10800117 	ldw	r2,4(r2)
  80e7e8:	1007883a 	mov	r3,r2
  80e7ec:	e0bff917 	ldw	r2,-28(fp)
  80e7f0:	10800217 	ldw	r2,8(r2)
  80e7f4:	100b883a 	mov	r5,r2
  80e7f8:	1809883a 	mov	r4,r3
  80e7fc:	08305040 	call	830504 <__mulsi3>
  80e800:	1007883a 	mov	r3,r2
  80e804:	e0bff717 	ldw	r2,-36(fp)
  80e808:	1885883a 	add	r2,r3,r2
  80e80c:	e0bff715 	stw	r2,-36(fp)
  80e810:	e0bff917 	ldw	r2,-28(fp)
  80e814:	10800b17 	ldw	r2,44(r2)
  80e818:	e0bff915 	stw	r2,-28(fp)
  80e81c:	e0bff917 	ldw	r2,-28(fp)
  80e820:	103fe01e 	bne	r2,zero,80e7a4 <__alt_mem_epcs_flash_controller_0+0xff8057a4>
  80e824:	e0bffb17 	ldw	r2,-20(fp)
  80e828:	10801217 	ldw	r2,72(r2)
  80e82c:	e0bffa15 	stw	r2,-24(fp)
  80e830:	00001e06 	br	80e8ac <realize_virt_arrays+0x144>
  80e834:	e0bffa17 	ldw	r2,-24(fp)
  80e838:	10800017 	ldw	r2,0(r2)
  80e83c:	1000181e 	bne	r2,zero,80e8a0 <realize_virt_arrays+0x138>
  80e840:	e0bffa17 	ldw	r2,-24(fp)
  80e844:	10800317 	ldw	r2,12(r2)
  80e848:	1007883a 	mov	r3,r2
  80e84c:	e0bffa17 	ldw	r2,-24(fp)
  80e850:	10800217 	ldw	r2,8(r2)
  80e854:	100b883a 	mov	r5,r2
  80e858:	1809883a 	mov	r4,r3
  80e85c:	08305040 	call	830504 <__mulsi3>
  80e860:	100691fa 	slli	r3,r2,7
  80e864:	e0bff617 	ldw	r2,-40(fp)
  80e868:	1885883a 	add	r2,r3,r2
  80e86c:	e0bff615 	stw	r2,-40(fp)
  80e870:	e0bffa17 	ldw	r2,-24(fp)
  80e874:	10800117 	ldw	r2,4(r2)
  80e878:	1007883a 	mov	r3,r2
  80e87c:	e0bffa17 	ldw	r2,-24(fp)
  80e880:	10800217 	ldw	r2,8(r2)
  80e884:	100b883a 	mov	r5,r2
  80e888:	1809883a 	mov	r4,r3
  80e88c:	08305040 	call	830504 <__mulsi3>
  80e890:	100691fa 	slli	r3,r2,7
  80e894:	e0bff717 	ldw	r2,-36(fp)
  80e898:	1885883a 	add	r2,r3,r2
  80e89c:	e0bff715 	stw	r2,-36(fp)
  80e8a0:	e0bffa17 	ldw	r2,-24(fp)
  80e8a4:	10800b17 	ldw	r2,44(r2)
  80e8a8:	e0bffa15 	stw	r2,-24(fp)
  80e8ac:	e0bffa17 	ldw	r2,-24(fp)
  80e8b0:	103fe01e 	bne	r2,zero,80e834 <__alt_mem_epcs_flash_controller_0+0xff805834>
  80e8b4:	e0bff617 	ldw	r2,-40(fp)
  80e8b8:	0080b70e 	bge	zero,r2,80eb98 <realize_virt_arrays+0x430>
  80e8bc:	e0bffb17 	ldw	r2,-20(fp)
  80e8c0:	10801317 	ldw	r2,76(r2)
  80e8c4:	100f883a 	mov	r7,r2
  80e8c8:	e1bff717 	ldw	r6,-36(fp)
  80e8cc:	e17ff617 	ldw	r5,-40(fp)
  80e8d0:	e13ffe17 	ldw	r4,-8(fp)
  80e8d4:	080fbe40 	call	80fbe4 <jpeg_mem_available>
  80e8d8:	e0bffc15 	stw	r2,-16(fp)
  80e8dc:	e0fffc17 	ldw	r3,-16(fp)
  80e8e0:	e0bff717 	ldw	r2,-36(fp)
  80e8e4:	18800416 	blt	r3,r2,80e8f8 <realize_virt_arrays+0x190>
  80e8e8:	008ee6f4 	movhi	r2,15259
  80e8ec:	10b28004 	addi	r2,r2,-13824
  80e8f0:	e0bff815 	stw	r2,-32(fp)
  80e8f4:	00000806 	br	80e918 <realize_virt_arrays+0x1b0>
  80e8f8:	e17ff617 	ldw	r5,-40(fp)
  80e8fc:	e13ffc17 	ldw	r4,-16(fp)
  80e900:	08303500 	call	830350 <__divsi3>
  80e904:	e0bff815 	stw	r2,-32(fp)
  80e908:	e0bff817 	ldw	r2,-32(fp)
  80e90c:	00800216 	blt	zero,r2,80e918 <realize_virt_arrays+0x1b0>
  80e910:	00800044 	movi	r2,1
  80e914:	e0bff815 	stw	r2,-32(fp)
  80e918:	e0bffb17 	ldw	r2,-20(fp)
  80e91c:	10801117 	ldw	r2,68(r2)
  80e920:	e0bff915 	stw	r2,-28(fp)
  80e924:	00004906 	br	80ea4c <realize_virt_arrays+0x2e4>
  80e928:	e0bff917 	ldw	r2,-28(fp)
  80e92c:	10800017 	ldw	r2,0(r2)
  80e930:	1000431e 	bne	r2,zero,80ea40 <realize_virt_arrays+0x2d8>
  80e934:	e0bff917 	ldw	r2,-28(fp)
  80e938:	10800117 	ldw	r2,4(r2)
  80e93c:	10bfffc4 	addi	r2,r2,-1
  80e940:	1007883a 	mov	r3,r2
  80e944:	e0bff917 	ldw	r2,-28(fp)
  80e948:	10800317 	ldw	r2,12(r2)
  80e94c:	100b883a 	mov	r5,r2
  80e950:	1809883a 	mov	r4,r3
  80e954:	08304480 	call	830448 <__udivsi3>
  80e958:	10800044 	addi	r2,r2,1
  80e95c:	e0bffd15 	stw	r2,-12(fp)
  80e960:	e0bffd17 	ldw	r2,-12(fp)
  80e964:	e0fff817 	ldw	r3,-32(fp)
  80e968:	18800516 	blt	r3,r2,80e980 <realize_virt_arrays+0x218>
  80e96c:	e0bff917 	ldw	r2,-28(fp)
  80e970:	10c00117 	ldw	r3,4(r2)
  80e974:	e0bff917 	ldw	r2,-28(fp)
  80e978:	10c00415 	stw	r3,16(r2)
  80e97c:	00001a06 	br	80e9e8 <realize_virt_arrays+0x280>
  80e980:	e0bff917 	ldw	r2,-28(fp)
  80e984:	10800317 	ldw	r2,12(r2)
  80e988:	e0fff817 	ldw	r3,-32(fp)
  80e98c:	180b883a 	mov	r5,r3
  80e990:	1009883a 	mov	r4,r2
  80e994:	08305040 	call	830504 <__mulsi3>
  80e998:	1007883a 	mov	r3,r2
  80e99c:	e0bff917 	ldw	r2,-28(fp)
  80e9a0:	10c00415 	stw	r3,16(r2)
  80e9a4:	e0bff917 	ldw	r2,-28(fp)
  80e9a8:	14000c04 	addi	r16,r2,48
  80e9ac:	e0bff917 	ldw	r2,-28(fp)
  80e9b0:	10800117 	ldw	r2,4(r2)
  80e9b4:	1007883a 	mov	r3,r2
  80e9b8:	e0bff917 	ldw	r2,-28(fp)
  80e9bc:	10800217 	ldw	r2,8(r2)
  80e9c0:	100b883a 	mov	r5,r2
  80e9c4:	1809883a 	mov	r4,r3
  80e9c8:	08305040 	call	830504 <__mulsi3>
  80e9cc:	100d883a 	mov	r6,r2
  80e9d0:	800b883a 	mov	r5,r16
  80e9d4:	e13ffe17 	ldw	r4,-8(fp)
  80e9d8:	080fc140 	call	80fc14 <jpeg_open_backing_store>
  80e9dc:	e0bff917 	ldw	r2,-28(fp)
  80e9e0:	00c00044 	movi	r3,1
  80e9e4:	10c00a15 	stw	r3,40(r2)
  80e9e8:	e0bff917 	ldw	r2,-28(fp)
  80e9ec:	10c00217 	ldw	r3,8(r2)
  80e9f0:	e0bff917 	ldw	r2,-28(fp)
  80e9f4:	10800417 	ldw	r2,16(r2)
  80e9f8:	100f883a 	mov	r7,r2
  80e9fc:	180d883a 	mov	r6,r3
  80ea00:	01400044 	movi	r5,1
  80ea04:	e13ffe17 	ldw	r4,-8(fp)
  80ea08:	080e2800 	call	80e280 <alloc_sarray>
  80ea0c:	1007883a 	mov	r3,r2
  80ea10:	e0bff917 	ldw	r2,-28(fp)
  80ea14:	10c00015 	stw	r3,0(r2)
  80ea18:	e0bffb17 	ldw	r2,-20(fp)
  80ea1c:	10c01417 	ldw	r3,80(r2)
  80ea20:	e0bff917 	ldw	r2,-28(fp)
  80ea24:	10c00515 	stw	r3,20(r2)
  80ea28:	e0bff917 	ldw	r2,-28(fp)
  80ea2c:	10000615 	stw	zero,24(r2)
  80ea30:	e0bff917 	ldw	r2,-28(fp)
  80ea34:	10000715 	stw	zero,28(r2)
  80ea38:	e0bff917 	ldw	r2,-28(fp)
  80ea3c:	10000915 	stw	zero,36(r2)
  80ea40:	e0bff917 	ldw	r2,-28(fp)
  80ea44:	10800b17 	ldw	r2,44(r2)
  80ea48:	e0bff915 	stw	r2,-28(fp)
  80ea4c:	e0bff917 	ldw	r2,-28(fp)
  80ea50:	103fb51e 	bne	r2,zero,80e928 <__alt_mem_epcs_flash_controller_0+0xff805928>
  80ea54:	e0bffb17 	ldw	r2,-20(fp)
  80ea58:	10801217 	ldw	r2,72(r2)
  80ea5c:	e0bffa15 	stw	r2,-24(fp)
  80ea60:	00004a06 	br	80eb8c <realize_virt_arrays+0x424>
  80ea64:	e0bffa17 	ldw	r2,-24(fp)
  80ea68:	10800017 	ldw	r2,0(r2)
  80ea6c:	1000441e 	bne	r2,zero,80eb80 <realize_virt_arrays+0x418>
  80ea70:	e0bffa17 	ldw	r2,-24(fp)
  80ea74:	10800117 	ldw	r2,4(r2)
  80ea78:	10bfffc4 	addi	r2,r2,-1
  80ea7c:	1007883a 	mov	r3,r2
  80ea80:	e0bffa17 	ldw	r2,-24(fp)
  80ea84:	10800317 	ldw	r2,12(r2)
  80ea88:	100b883a 	mov	r5,r2
  80ea8c:	1809883a 	mov	r4,r3
  80ea90:	08304480 	call	830448 <__udivsi3>
  80ea94:	10800044 	addi	r2,r2,1
  80ea98:	e0bffd15 	stw	r2,-12(fp)
  80ea9c:	e0bffd17 	ldw	r2,-12(fp)
  80eaa0:	e0fff817 	ldw	r3,-32(fp)
  80eaa4:	18800516 	blt	r3,r2,80eabc <realize_virt_arrays+0x354>
  80eaa8:	e0bffa17 	ldw	r2,-24(fp)
  80eaac:	10c00117 	ldw	r3,4(r2)
  80eab0:	e0bffa17 	ldw	r2,-24(fp)
  80eab4:	10c00415 	stw	r3,16(r2)
  80eab8:	00001b06 	br	80eb28 <realize_virt_arrays+0x3c0>
  80eabc:	e0bffa17 	ldw	r2,-24(fp)
  80eac0:	10800317 	ldw	r2,12(r2)
  80eac4:	e0fff817 	ldw	r3,-32(fp)
  80eac8:	180b883a 	mov	r5,r3
  80eacc:	1009883a 	mov	r4,r2
  80ead0:	08305040 	call	830504 <__mulsi3>
  80ead4:	1007883a 	mov	r3,r2
  80ead8:	e0bffa17 	ldw	r2,-24(fp)
  80eadc:	10c00415 	stw	r3,16(r2)
  80eae0:	e0bffa17 	ldw	r2,-24(fp)
  80eae4:	14000c04 	addi	r16,r2,48
  80eae8:	e0bffa17 	ldw	r2,-24(fp)
  80eaec:	10800117 	ldw	r2,4(r2)
  80eaf0:	1007883a 	mov	r3,r2
  80eaf4:	e0bffa17 	ldw	r2,-24(fp)
  80eaf8:	10800217 	ldw	r2,8(r2)
  80eafc:	100b883a 	mov	r5,r2
  80eb00:	1809883a 	mov	r4,r3
  80eb04:	08305040 	call	830504 <__mulsi3>
  80eb08:	100491fa 	slli	r2,r2,7
  80eb0c:	100d883a 	mov	r6,r2
  80eb10:	800b883a 	mov	r5,r16
  80eb14:	e13ffe17 	ldw	r4,-8(fp)
  80eb18:	080fc140 	call	80fc14 <jpeg_open_backing_store>
  80eb1c:	e0bffa17 	ldw	r2,-24(fp)
  80eb20:	00c00044 	movi	r3,1
  80eb24:	10c00a15 	stw	r3,40(r2)
  80eb28:	e0bffa17 	ldw	r2,-24(fp)
  80eb2c:	10c00217 	ldw	r3,8(r2)
  80eb30:	e0bffa17 	ldw	r2,-24(fp)
  80eb34:	10800417 	ldw	r2,16(r2)
  80eb38:	100f883a 	mov	r7,r2
  80eb3c:	180d883a 	mov	r6,r3
  80eb40:	01400044 	movi	r5,1
  80eb44:	e13ffe17 	ldw	r4,-8(fp)
  80eb48:	080e3f80 	call	80e3f8 <alloc_barray>
  80eb4c:	1007883a 	mov	r3,r2
  80eb50:	e0bffa17 	ldw	r2,-24(fp)
  80eb54:	10c00015 	stw	r3,0(r2)
  80eb58:	e0bffb17 	ldw	r2,-20(fp)
  80eb5c:	10c01417 	ldw	r3,80(r2)
  80eb60:	e0bffa17 	ldw	r2,-24(fp)
  80eb64:	10c00515 	stw	r3,20(r2)
  80eb68:	e0bffa17 	ldw	r2,-24(fp)
  80eb6c:	10000615 	stw	zero,24(r2)
  80eb70:	e0bffa17 	ldw	r2,-24(fp)
  80eb74:	10000715 	stw	zero,28(r2)
  80eb78:	e0bffa17 	ldw	r2,-24(fp)
  80eb7c:	10000915 	stw	zero,36(r2)
  80eb80:	e0bffa17 	ldw	r2,-24(fp)
  80eb84:	10800b17 	ldw	r2,44(r2)
  80eb88:	e0bffa15 	stw	r2,-24(fp)
  80eb8c:	e0bffa17 	ldw	r2,-24(fp)
  80eb90:	103fb41e 	bne	r2,zero,80ea64 <__alt_mem_epcs_flash_controller_0+0xff805a64>
  80eb94:	00000106 	br	80eb9c <realize_virt_arrays+0x434>
  80eb98:	0001883a 	nop
  80eb9c:	e6ffff04 	addi	sp,fp,-4
  80eba0:	dfc00217 	ldw	ra,8(sp)
  80eba4:	df000117 	ldw	fp,4(sp)
  80eba8:	dc000017 	ldw	r16,0(sp)
  80ebac:	dec00304 	addi	sp,sp,12
  80ebb0:	f800283a 	ret

0080ebb4 <do_sarray_io>:
  80ebb4:	defff404 	addi	sp,sp,-48
  80ebb8:	dfc00b15 	stw	ra,44(sp)
  80ebbc:	df000a15 	stw	fp,40(sp)
  80ebc0:	df000a04 	addi	fp,sp,40
  80ebc4:	e13ffd15 	stw	r4,-12(fp)
  80ebc8:	e17ffe15 	stw	r5,-8(fp)
  80ebcc:	e1bfff15 	stw	r6,-4(fp)
  80ebd0:	e0bffe17 	ldw	r2,-8(fp)
  80ebd4:	10800217 	ldw	r2,8(r2)
  80ebd8:	e0bff915 	stw	r2,-28(fp)
  80ebdc:	e0bffe17 	ldw	r2,-8(fp)
  80ebe0:	10800617 	ldw	r2,24(r2)
  80ebe4:	e0fff917 	ldw	r3,-28(fp)
  80ebe8:	180b883a 	mov	r5,r3
  80ebec:	1009883a 	mov	r4,r2
  80ebf0:	08305040 	call	830504 <__mulsi3>
  80ebf4:	e0bff715 	stw	r2,-36(fp)
  80ebf8:	e03ff815 	stw	zero,-32(fp)
  80ebfc:	00005806 	br	80ed60 <do_sarray_io+0x1ac>
  80ec00:	e0bffe17 	ldw	r2,-8(fp)
  80ec04:	10800417 	ldw	r2,16(r2)
  80ec08:	1007883a 	mov	r3,r2
  80ec0c:	e0bff817 	ldw	r2,-32(fp)
  80ec10:	1889c83a 	sub	r4,r3,r2
  80ec14:	e0bffe17 	ldw	r2,-8(fp)
  80ec18:	10800517 	ldw	r2,20(r2)
  80ec1c:	1007883a 	mov	r3,r2
  80ec20:	2005883a 	mov	r2,r4
  80ec24:	1880010e 	bge	r3,r2,80ec2c <do_sarray_io+0x78>
  80ec28:	1805883a 	mov	r2,r3
  80ec2c:	e0bffa15 	stw	r2,-24(fp)
  80ec30:	e0bffe17 	ldw	r2,-8(fp)
  80ec34:	10800617 	ldw	r2,24(r2)
  80ec38:	1007883a 	mov	r3,r2
  80ec3c:	e0bff817 	ldw	r2,-32(fp)
  80ec40:	1885883a 	add	r2,r3,r2
  80ec44:	e0bffb15 	stw	r2,-20(fp)
  80ec48:	e0bffe17 	ldw	r2,-8(fp)
  80ec4c:	10800717 	ldw	r2,28(r2)
  80ec50:	1007883a 	mov	r3,r2
  80ec54:	e0bffb17 	ldw	r2,-20(fp)
  80ec58:	1885c83a 	sub	r2,r3,r2
  80ec5c:	e0fffa17 	ldw	r3,-24(fp)
  80ec60:	1880010e 	bge	r3,r2,80ec68 <do_sarray_io+0xb4>
  80ec64:	1805883a 	mov	r2,r3
  80ec68:	e0bffa15 	stw	r2,-24(fp)
  80ec6c:	e0bffe17 	ldw	r2,-8(fp)
  80ec70:	10800117 	ldw	r2,4(r2)
  80ec74:	1007883a 	mov	r3,r2
  80ec78:	e0bffb17 	ldw	r2,-20(fp)
  80ec7c:	1885c83a 	sub	r2,r3,r2
  80ec80:	e0fffa17 	ldw	r3,-24(fp)
  80ec84:	1880010e 	bge	r3,r2,80ec8c <do_sarray_io+0xd8>
  80ec88:	1805883a 	mov	r2,r3
  80ec8c:	e0bffa15 	stw	r2,-24(fp)
  80ec90:	e0bffa17 	ldw	r2,-24(fp)
  80ec94:	0080380e 	bge	zero,r2,80ed78 <do_sarray_io+0x1c4>
  80ec98:	e17ff917 	ldw	r5,-28(fp)
  80ec9c:	e13ffa17 	ldw	r4,-24(fp)
  80eca0:	08305040 	call	830504 <__mulsi3>
  80eca4:	e0bffc15 	stw	r2,-16(fp)
  80eca8:	e0bfff17 	ldw	r2,-4(fp)
  80ecac:	10001226 	beq	r2,zero,80ecf8 <do_sarray_io+0x144>
  80ecb0:	e0bffe17 	ldw	r2,-8(fp)
  80ecb4:	10c00d17 	ldw	r3,52(r2)
  80ecb8:	e0bffe17 	ldw	r2,-8(fp)
  80ecbc:	11400c04 	addi	r5,r2,48
  80ecc0:	e0bffe17 	ldw	r2,-8(fp)
  80ecc4:	11000017 	ldw	r4,0(r2)
  80ecc8:	e0bff817 	ldw	r2,-32(fp)
  80eccc:	1085883a 	add	r2,r2,r2
  80ecd0:	1085883a 	add	r2,r2,r2
  80ecd4:	2085883a 	add	r2,r4,r2
  80ecd8:	11000017 	ldw	r4,0(r2)
  80ecdc:	e0bffc17 	ldw	r2,-16(fp)
  80ece0:	d8800015 	stw	r2,0(sp)
  80ece4:	e1fff717 	ldw	r7,-36(fp)
  80ece8:	200d883a 	mov	r6,r4
  80ecec:	e13ffd17 	ldw	r4,-12(fp)
  80ecf0:	183ee83a 	callr	r3
  80ecf4:	00001106 	br	80ed3c <do_sarray_io+0x188>
  80ecf8:	e0bffe17 	ldw	r2,-8(fp)
  80ecfc:	10c00c17 	ldw	r3,48(r2)
  80ed00:	e0bffe17 	ldw	r2,-8(fp)
  80ed04:	11400c04 	addi	r5,r2,48
  80ed08:	e0bffe17 	ldw	r2,-8(fp)
  80ed0c:	11000017 	ldw	r4,0(r2)
  80ed10:	e0bff817 	ldw	r2,-32(fp)
  80ed14:	1085883a 	add	r2,r2,r2
  80ed18:	1085883a 	add	r2,r2,r2
  80ed1c:	2085883a 	add	r2,r4,r2
  80ed20:	11000017 	ldw	r4,0(r2)
  80ed24:	e0bffc17 	ldw	r2,-16(fp)
  80ed28:	d8800015 	stw	r2,0(sp)
  80ed2c:	e1fff717 	ldw	r7,-36(fp)
  80ed30:	200d883a 	mov	r6,r4
  80ed34:	e13ffd17 	ldw	r4,-12(fp)
  80ed38:	183ee83a 	callr	r3
  80ed3c:	e0fff717 	ldw	r3,-36(fp)
  80ed40:	e0bffc17 	ldw	r2,-16(fp)
  80ed44:	1885883a 	add	r2,r3,r2
  80ed48:	e0bff715 	stw	r2,-36(fp)
  80ed4c:	e0bffe17 	ldw	r2,-8(fp)
  80ed50:	10c00517 	ldw	r3,20(r2)
  80ed54:	e0bff817 	ldw	r2,-32(fp)
  80ed58:	1885883a 	add	r2,r3,r2
  80ed5c:	e0bff815 	stw	r2,-32(fp)
  80ed60:	e0bffe17 	ldw	r2,-8(fp)
  80ed64:	10800417 	ldw	r2,16(r2)
  80ed68:	1007883a 	mov	r3,r2
  80ed6c:	e0bff817 	ldw	r2,-32(fp)
  80ed70:	10ffa316 	blt	r2,r3,80ec00 <__alt_mem_epcs_flash_controller_0+0xff805c00>
  80ed74:	00000106 	br	80ed7c <do_sarray_io+0x1c8>
  80ed78:	0001883a 	nop
  80ed7c:	0001883a 	nop
  80ed80:	e037883a 	mov	sp,fp
  80ed84:	dfc00117 	ldw	ra,4(sp)
  80ed88:	df000017 	ldw	fp,0(sp)
  80ed8c:	dec00204 	addi	sp,sp,8
  80ed90:	f800283a 	ret

0080ed94 <do_barray_io>:
  80ed94:	defff404 	addi	sp,sp,-48
  80ed98:	dfc00b15 	stw	ra,44(sp)
  80ed9c:	df000a15 	stw	fp,40(sp)
  80eda0:	df000a04 	addi	fp,sp,40
  80eda4:	e13ffd15 	stw	r4,-12(fp)
  80eda8:	e17ffe15 	stw	r5,-8(fp)
  80edac:	e1bfff15 	stw	r6,-4(fp)
  80edb0:	e0bffe17 	ldw	r2,-8(fp)
  80edb4:	10800217 	ldw	r2,8(r2)
  80edb8:	100491fa 	slli	r2,r2,7
  80edbc:	e0bff915 	stw	r2,-28(fp)
  80edc0:	e0bffe17 	ldw	r2,-8(fp)
  80edc4:	10800617 	ldw	r2,24(r2)
  80edc8:	e0fff917 	ldw	r3,-28(fp)
  80edcc:	180b883a 	mov	r5,r3
  80edd0:	1009883a 	mov	r4,r2
  80edd4:	08305040 	call	830504 <__mulsi3>
  80edd8:	e0bff715 	stw	r2,-36(fp)
  80eddc:	e03ff815 	stw	zero,-32(fp)
  80ede0:	00005806 	br	80ef44 <do_barray_io+0x1b0>
  80ede4:	e0bffe17 	ldw	r2,-8(fp)
  80ede8:	10800417 	ldw	r2,16(r2)
  80edec:	1007883a 	mov	r3,r2
  80edf0:	e0bff817 	ldw	r2,-32(fp)
  80edf4:	1889c83a 	sub	r4,r3,r2
  80edf8:	e0bffe17 	ldw	r2,-8(fp)
  80edfc:	10800517 	ldw	r2,20(r2)
  80ee00:	1007883a 	mov	r3,r2
  80ee04:	2005883a 	mov	r2,r4
  80ee08:	1880010e 	bge	r3,r2,80ee10 <do_barray_io+0x7c>
  80ee0c:	1805883a 	mov	r2,r3
  80ee10:	e0bffa15 	stw	r2,-24(fp)
  80ee14:	e0bffe17 	ldw	r2,-8(fp)
  80ee18:	10800617 	ldw	r2,24(r2)
  80ee1c:	1007883a 	mov	r3,r2
  80ee20:	e0bff817 	ldw	r2,-32(fp)
  80ee24:	1885883a 	add	r2,r3,r2
  80ee28:	e0bffb15 	stw	r2,-20(fp)
  80ee2c:	e0bffe17 	ldw	r2,-8(fp)
  80ee30:	10800717 	ldw	r2,28(r2)
  80ee34:	1007883a 	mov	r3,r2
  80ee38:	e0bffb17 	ldw	r2,-20(fp)
  80ee3c:	1885c83a 	sub	r2,r3,r2
  80ee40:	e0fffa17 	ldw	r3,-24(fp)
  80ee44:	1880010e 	bge	r3,r2,80ee4c <do_barray_io+0xb8>
  80ee48:	1805883a 	mov	r2,r3
  80ee4c:	e0bffa15 	stw	r2,-24(fp)
  80ee50:	e0bffe17 	ldw	r2,-8(fp)
  80ee54:	10800117 	ldw	r2,4(r2)
  80ee58:	1007883a 	mov	r3,r2
  80ee5c:	e0bffb17 	ldw	r2,-20(fp)
  80ee60:	1885c83a 	sub	r2,r3,r2
  80ee64:	e0fffa17 	ldw	r3,-24(fp)
  80ee68:	1880010e 	bge	r3,r2,80ee70 <do_barray_io+0xdc>
  80ee6c:	1805883a 	mov	r2,r3
  80ee70:	e0bffa15 	stw	r2,-24(fp)
  80ee74:	e0bffa17 	ldw	r2,-24(fp)
  80ee78:	0080380e 	bge	zero,r2,80ef5c <do_barray_io+0x1c8>
  80ee7c:	e17ff917 	ldw	r5,-28(fp)
  80ee80:	e13ffa17 	ldw	r4,-24(fp)
  80ee84:	08305040 	call	830504 <__mulsi3>
  80ee88:	e0bffc15 	stw	r2,-16(fp)
  80ee8c:	e0bfff17 	ldw	r2,-4(fp)
  80ee90:	10001226 	beq	r2,zero,80eedc <do_barray_io+0x148>
  80ee94:	e0bffe17 	ldw	r2,-8(fp)
  80ee98:	10c00d17 	ldw	r3,52(r2)
  80ee9c:	e0bffe17 	ldw	r2,-8(fp)
  80eea0:	11400c04 	addi	r5,r2,48
  80eea4:	e0bffe17 	ldw	r2,-8(fp)
  80eea8:	11000017 	ldw	r4,0(r2)
  80eeac:	e0bff817 	ldw	r2,-32(fp)
  80eeb0:	1085883a 	add	r2,r2,r2
  80eeb4:	1085883a 	add	r2,r2,r2
  80eeb8:	2085883a 	add	r2,r4,r2
  80eebc:	11000017 	ldw	r4,0(r2)
  80eec0:	e0bffc17 	ldw	r2,-16(fp)
  80eec4:	d8800015 	stw	r2,0(sp)
  80eec8:	e1fff717 	ldw	r7,-36(fp)
  80eecc:	200d883a 	mov	r6,r4
  80eed0:	e13ffd17 	ldw	r4,-12(fp)
  80eed4:	183ee83a 	callr	r3
  80eed8:	00001106 	br	80ef20 <do_barray_io+0x18c>
  80eedc:	e0bffe17 	ldw	r2,-8(fp)
  80eee0:	10c00c17 	ldw	r3,48(r2)
  80eee4:	e0bffe17 	ldw	r2,-8(fp)
  80eee8:	11400c04 	addi	r5,r2,48
  80eeec:	e0bffe17 	ldw	r2,-8(fp)
  80eef0:	11000017 	ldw	r4,0(r2)
  80eef4:	e0bff817 	ldw	r2,-32(fp)
  80eef8:	1085883a 	add	r2,r2,r2
  80eefc:	1085883a 	add	r2,r2,r2
  80ef00:	2085883a 	add	r2,r4,r2
  80ef04:	11000017 	ldw	r4,0(r2)
  80ef08:	e0bffc17 	ldw	r2,-16(fp)
  80ef0c:	d8800015 	stw	r2,0(sp)
  80ef10:	e1fff717 	ldw	r7,-36(fp)
  80ef14:	200d883a 	mov	r6,r4
  80ef18:	e13ffd17 	ldw	r4,-12(fp)
  80ef1c:	183ee83a 	callr	r3
  80ef20:	e0fff717 	ldw	r3,-36(fp)
  80ef24:	e0bffc17 	ldw	r2,-16(fp)
  80ef28:	1885883a 	add	r2,r3,r2
  80ef2c:	e0bff715 	stw	r2,-36(fp)
  80ef30:	e0bffe17 	ldw	r2,-8(fp)
  80ef34:	10c00517 	ldw	r3,20(r2)
  80ef38:	e0bff817 	ldw	r2,-32(fp)
  80ef3c:	1885883a 	add	r2,r3,r2
  80ef40:	e0bff815 	stw	r2,-32(fp)
  80ef44:	e0bffe17 	ldw	r2,-8(fp)
  80ef48:	10800417 	ldw	r2,16(r2)
  80ef4c:	1007883a 	mov	r3,r2
  80ef50:	e0bff817 	ldw	r2,-32(fp)
  80ef54:	10ffa316 	blt	r2,r3,80ede4 <__alt_mem_epcs_flash_controller_0+0xff805de4>
  80ef58:	00000106 	br	80ef60 <do_barray_io+0x1cc>
  80ef5c:	0001883a 	nop
  80ef60:	0001883a 	nop
  80ef64:	e037883a 	mov	sp,fp
  80ef68:	dfc00117 	ldw	ra,4(sp)
  80ef6c:	df000017 	ldw	fp,0(sp)
  80ef70:	dec00204 	addi	sp,sp,8
  80ef74:	f800283a 	ret

0080ef78 <access_virt_sarray>:
  80ef78:	defff604 	addi	sp,sp,-40
  80ef7c:	dfc00915 	stw	ra,36(sp)
  80ef80:	df000815 	stw	fp,32(sp)
  80ef84:	df000804 	addi	fp,sp,32
  80ef88:	e13ffc15 	stw	r4,-16(fp)
  80ef8c:	e17ffd15 	stw	r5,-12(fp)
  80ef90:	e1bffe15 	stw	r6,-8(fp)
  80ef94:	e1ffff15 	stw	r7,-4(fp)
  80ef98:	e0fffe17 	ldw	r3,-8(fp)
  80ef9c:	e0bfff17 	ldw	r2,-4(fp)
  80efa0:	1885883a 	add	r2,r3,r2
  80efa4:	e0bffa15 	stw	r2,-24(fp)
  80efa8:	e0bffd17 	ldw	r2,-12(fp)
  80efac:	10c00117 	ldw	r3,4(r2)
  80efb0:	e0bffa17 	ldw	r2,-24(fp)
  80efb4:	18800736 	bltu	r3,r2,80efd4 <access_virt_sarray+0x5c>
  80efb8:	e0bffd17 	ldw	r2,-12(fp)
  80efbc:	10c00317 	ldw	r3,12(r2)
  80efc0:	e0bfff17 	ldw	r2,-4(fp)
  80efc4:	18800336 	bltu	r3,r2,80efd4 <access_virt_sarray+0x5c>
  80efc8:	e0bffd17 	ldw	r2,-12(fp)
  80efcc:	10800017 	ldw	r2,0(r2)
  80efd0:	1000091e 	bne	r2,zero,80eff8 <access_virt_sarray+0x80>
  80efd4:	e0bffc17 	ldw	r2,-16(fp)
  80efd8:	10800017 	ldw	r2,0(r2)
  80efdc:	00c005c4 	movi	r3,23
  80efe0:	10c00515 	stw	r3,20(r2)
  80efe4:	e0bffc17 	ldw	r2,-16(fp)
  80efe8:	10800017 	ldw	r2,0(r2)
  80efec:	10800017 	ldw	r2,0(r2)
  80eff0:	e13ffc17 	ldw	r4,-16(fp)
  80eff4:	103ee83a 	callr	r2
  80eff8:	e0bffd17 	ldw	r2,-12(fp)
  80effc:	10800617 	ldw	r2,24(r2)
  80f000:	e0fffe17 	ldw	r3,-8(fp)
  80f004:	18800736 	bltu	r3,r2,80f024 <access_virt_sarray+0xac>
  80f008:	e0bffd17 	ldw	r2,-12(fp)
  80f00c:	10c00617 	ldw	r3,24(r2)
  80f010:	e0bffd17 	ldw	r2,-12(fp)
  80f014:	10800417 	ldw	r2,16(r2)
  80f018:	1887883a 	add	r3,r3,r2
  80f01c:	e0bffa17 	ldw	r2,-24(fp)
  80f020:	18802c2e 	bgeu	r3,r2,80f0d4 <access_virt_sarray+0x15c>
  80f024:	e0bffd17 	ldw	r2,-12(fp)
  80f028:	10800a17 	ldw	r2,40(r2)
  80f02c:	1000091e 	bne	r2,zero,80f054 <access_virt_sarray+0xdc>
  80f030:	e0bffc17 	ldw	r2,-16(fp)
  80f034:	10800017 	ldw	r2,0(r2)
  80f038:	00c011c4 	movi	r3,71
  80f03c:	10c00515 	stw	r3,20(r2)
  80f040:	e0bffc17 	ldw	r2,-16(fp)
  80f044:	10800017 	ldw	r2,0(r2)
  80f048:	10800017 	ldw	r2,0(r2)
  80f04c:	e13ffc17 	ldw	r4,-16(fp)
  80f050:	103ee83a 	callr	r2
  80f054:	e0bffd17 	ldw	r2,-12(fp)
  80f058:	10800917 	ldw	r2,36(r2)
  80f05c:	10000626 	beq	r2,zero,80f078 <access_virt_sarray+0x100>
  80f060:	01800044 	movi	r6,1
  80f064:	e17ffd17 	ldw	r5,-12(fp)
  80f068:	e13ffc17 	ldw	r4,-16(fp)
  80f06c:	080ebb40 	call	80ebb4 <do_sarray_io>
  80f070:	e0bffd17 	ldw	r2,-12(fp)
  80f074:	10000915 	stw	zero,36(r2)
  80f078:	e0bffd17 	ldw	r2,-12(fp)
  80f07c:	10c00617 	ldw	r3,24(r2)
  80f080:	e0bffe17 	ldw	r2,-8(fp)
  80f084:	1880042e 	bgeu	r3,r2,80f098 <access_virt_sarray+0x120>
  80f088:	e0bffd17 	ldw	r2,-12(fp)
  80f08c:	e0fffe17 	ldw	r3,-8(fp)
  80f090:	10c00615 	stw	r3,24(r2)
  80f094:	00000b06 	br	80f0c4 <access_virt_sarray+0x14c>
  80f098:	e0bffa17 	ldw	r2,-24(fp)
  80f09c:	e0fffd17 	ldw	r3,-12(fp)
  80f0a0:	18c00417 	ldw	r3,16(r3)
  80f0a4:	10c5c83a 	sub	r2,r2,r3
  80f0a8:	e0bff915 	stw	r2,-28(fp)
  80f0ac:	e0bff917 	ldw	r2,-28(fp)
  80f0b0:	1000010e 	bge	r2,zero,80f0b8 <access_virt_sarray+0x140>
  80f0b4:	e03ff915 	stw	zero,-28(fp)
  80f0b8:	e0fff917 	ldw	r3,-28(fp)
  80f0bc:	e0bffd17 	ldw	r2,-12(fp)
  80f0c0:	10c00615 	stw	r3,24(r2)
  80f0c4:	000d883a 	mov	r6,zero
  80f0c8:	e17ffd17 	ldw	r5,-12(fp)
  80f0cc:	e13ffc17 	ldw	r4,-16(fp)
  80f0d0:	080ebb40 	call	80ebb4 <do_sarray_io>
  80f0d4:	e0bffd17 	ldw	r2,-12(fp)
  80f0d8:	10c00717 	ldw	r3,28(r2)
  80f0dc:	e0bffa17 	ldw	r2,-24(fp)
  80f0e0:	1880482e 	bgeu	r3,r2,80f204 <access_virt_sarray+0x28c>
  80f0e4:	e0bffd17 	ldw	r2,-12(fp)
  80f0e8:	10c00717 	ldw	r3,28(r2)
  80f0ec:	e0bffe17 	ldw	r2,-8(fp)
  80f0f0:	18800e2e 	bgeu	r3,r2,80f12c <access_virt_sarray+0x1b4>
  80f0f4:	e0800217 	ldw	r2,8(fp)
  80f0f8:	10000926 	beq	r2,zero,80f120 <access_virt_sarray+0x1a8>
  80f0fc:	e0bffc17 	ldw	r2,-16(fp)
  80f100:	10800017 	ldw	r2,0(r2)
  80f104:	00c005c4 	movi	r3,23
  80f108:	10c00515 	stw	r3,20(r2)
  80f10c:	e0bffc17 	ldw	r2,-16(fp)
  80f110:	10800017 	ldw	r2,0(r2)
  80f114:	10800017 	ldw	r2,0(r2)
  80f118:	e13ffc17 	ldw	r4,-16(fp)
  80f11c:	103ee83a 	callr	r2
  80f120:	e0bffe17 	ldw	r2,-8(fp)
  80f124:	e0bff815 	stw	r2,-32(fp)
  80f128:	00000306 	br	80f138 <access_virt_sarray+0x1c0>
  80f12c:	e0bffd17 	ldw	r2,-12(fp)
  80f130:	10800717 	ldw	r2,28(r2)
  80f134:	e0bff815 	stw	r2,-32(fp)
  80f138:	e0800217 	ldw	r2,8(fp)
  80f13c:	10000326 	beq	r2,zero,80f14c <access_virt_sarray+0x1d4>
  80f140:	e0bffd17 	ldw	r2,-12(fp)
  80f144:	e0fffa17 	ldw	r3,-24(fp)
  80f148:	10c00715 	stw	r3,28(r2)
  80f14c:	e0bffd17 	ldw	r2,-12(fp)
  80f150:	10800817 	ldw	r2,32(r2)
  80f154:	10002026 	beq	r2,zero,80f1d8 <access_virt_sarray+0x260>
  80f158:	e0bffd17 	ldw	r2,-12(fp)
  80f15c:	10800217 	ldw	r2,8(r2)
  80f160:	e0bffb15 	stw	r2,-20(fp)
  80f164:	e0bffd17 	ldw	r2,-12(fp)
  80f168:	10800617 	ldw	r2,24(r2)
  80f16c:	e0fff817 	ldw	r3,-32(fp)
  80f170:	1885c83a 	sub	r2,r3,r2
  80f174:	e0bff815 	stw	r2,-32(fp)
  80f178:	e0bffd17 	ldw	r2,-12(fp)
  80f17c:	10800617 	ldw	r2,24(r2)
  80f180:	e0fffa17 	ldw	r3,-24(fp)
  80f184:	1885c83a 	sub	r2,r3,r2
  80f188:	e0bffa15 	stw	r2,-24(fp)
  80f18c:	00000e06 	br	80f1c8 <access_virt_sarray+0x250>
  80f190:	e0bffd17 	ldw	r2,-12(fp)
  80f194:	10c00017 	ldw	r3,0(r2)
  80f198:	e0bff817 	ldw	r2,-32(fp)
  80f19c:	1085883a 	add	r2,r2,r2
  80f1a0:	1085883a 	add	r2,r2,r2
  80f1a4:	1885883a 	add	r2,r3,r2
  80f1a8:	10800017 	ldw	r2,0(r2)
  80f1ac:	e1bffb17 	ldw	r6,-20(fp)
  80f1b0:	000b883a 	mov	r5,zero
  80f1b4:	1009883a 	mov	r4,r2
  80f1b8:	08342980 	call	834298 <memset>
  80f1bc:	e0bff817 	ldw	r2,-32(fp)
  80f1c0:	10800044 	addi	r2,r2,1
  80f1c4:	e0bff815 	stw	r2,-32(fp)
  80f1c8:	e0fff817 	ldw	r3,-32(fp)
  80f1cc:	e0bffa17 	ldw	r2,-24(fp)
  80f1d0:	18bfef36 	bltu	r3,r2,80f190 <__alt_mem_epcs_flash_controller_0+0xff806190>
  80f1d4:	00000b06 	br	80f204 <access_virt_sarray+0x28c>
  80f1d8:	e0800217 	ldw	r2,8(fp)
  80f1dc:	1000091e 	bne	r2,zero,80f204 <access_virt_sarray+0x28c>
  80f1e0:	e0bffc17 	ldw	r2,-16(fp)
  80f1e4:	10800017 	ldw	r2,0(r2)
  80f1e8:	00c005c4 	movi	r3,23
  80f1ec:	10c00515 	stw	r3,20(r2)
  80f1f0:	e0bffc17 	ldw	r2,-16(fp)
  80f1f4:	10800017 	ldw	r2,0(r2)
  80f1f8:	10800017 	ldw	r2,0(r2)
  80f1fc:	e13ffc17 	ldw	r4,-16(fp)
  80f200:	103ee83a 	callr	r2
  80f204:	e0800217 	ldw	r2,8(fp)
  80f208:	10000326 	beq	r2,zero,80f218 <access_virt_sarray+0x2a0>
  80f20c:	e0bffd17 	ldw	r2,-12(fp)
  80f210:	00c00044 	movi	r3,1
  80f214:	10c00915 	stw	r3,36(r2)
  80f218:	e0bffd17 	ldw	r2,-12(fp)
  80f21c:	10c00017 	ldw	r3,0(r2)
  80f220:	e0bffd17 	ldw	r2,-12(fp)
  80f224:	10800617 	ldw	r2,24(r2)
  80f228:	e13ffe17 	ldw	r4,-8(fp)
  80f22c:	2085c83a 	sub	r2,r4,r2
  80f230:	1085883a 	add	r2,r2,r2
  80f234:	1085883a 	add	r2,r2,r2
  80f238:	1885883a 	add	r2,r3,r2
  80f23c:	e037883a 	mov	sp,fp
  80f240:	dfc00117 	ldw	ra,4(sp)
  80f244:	df000017 	ldw	fp,0(sp)
  80f248:	dec00204 	addi	sp,sp,8
  80f24c:	f800283a 	ret

0080f250 <access_virt_barray>:
  80f250:	defff604 	addi	sp,sp,-40
  80f254:	dfc00915 	stw	ra,36(sp)
  80f258:	df000815 	stw	fp,32(sp)
  80f25c:	df000804 	addi	fp,sp,32
  80f260:	e13ffc15 	stw	r4,-16(fp)
  80f264:	e17ffd15 	stw	r5,-12(fp)
  80f268:	e1bffe15 	stw	r6,-8(fp)
  80f26c:	e1ffff15 	stw	r7,-4(fp)
  80f270:	e0fffe17 	ldw	r3,-8(fp)
  80f274:	e0bfff17 	ldw	r2,-4(fp)
  80f278:	1885883a 	add	r2,r3,r2
  80f27c:	e0bffa15 	stw	r2,-24(fp)
  80f280:	e0bffd17 	ldw	r2,-12(fp)
  80f284:	10c00117 	ldw	r3,4(r2)
  80f288:	e0bffa17 	ldw	r2,-24(fp)
  80f28c:	18800736 	bltu	r3,r2,80f2ac <access_virt_barray+0x5c>
  80f290:	e0bffd17 	ldw	r2,-12(fp)
  80f294:	10c00317 	ldw	r3,12(r2)
  80f298:	e0bfff17 	ldw	r2,-4(fp)
  80f29c:	18800336 	bltu	r3,r2,80f2ac <access_virt_barray+0x5c>
  80f2a0:	e0bffd17 	ldw	r2,-12(fp)
  80f2a4:	10800017 	ldw	r2,0(r2)
  80f2a8:	1000091e 	bne	r2,zero,80f2d0 <access_virt_barray+0x80>
  80f2ac:	e0bffc17 	ldw	r2,-16(fp)
  80f2b0:	10800017 	ldw	r2,0(r2)
  80f2b4:	00c005c4 	movi	r3,23
  80f2b8:	10c00515 	stw	r3,20(r2)
  80f2bc:	e0bffc17 	ldw	r2,-16(fp)
  80f2c0:	10800017 	ldw	r2,0(r2)
  80f2c4:	10800017 	ldw	r2,0(r2)
  80f2c8:	e13ffc17 	ldw	r4,-16(fp)
  80f2cc:	103ee83a 	callr	r2
  80f2d0:	e0bffd17 	ldw	r2,-12(fp)
  80f2d4:	10800617 	ldw	r2,24(r2)
  80f2d8:	e0fffe17 	ldw	r3,-8(fp)
  80f2dc:	18800736 	bltu	r3,r2,80f2fc <access_virt_barray+0xac>
  80f2e0:	e0bffd17 	ldw	r2,-12(fp)
  80f2e4:	10c00617 	ldw	r3,24(r2)
  80f2e8:	e0bffd17 	ldw	r2,-12(fp)
  80f2ec:	10800417 	ldw	r2,16(r2)
  80f2f0:	1887883a 	add	r3,r3,r2
  80f2f4:	e0bffa17 	ldw	r2,-24(fp)
  80f2f8:	18802c2e 	bgeu	r3,r2,80f3ac <access_virt_barray+0x15c>
  80f2fc:	e0bffd17 	ldw	r2,-12(fp)
  80f300:	10800a17 	ldw	r2,40(r2)
  80f304:	1000091e 	bne	r2,zero,80f32c <access_virt_barray+0xdc>
  80f308:	e0bffc17 	ldw	r2,-16(fp)
  80f30c:	10800017 	ldw	r2,0(r2)
  80f310:	00c011c4 	movi	r3,71
  80f314:	10c00515 	stw	r3,20(r2)
  80f318:	e0bffc17 	ldw	r2,-16(fp)
  80f31c:	10800017 	ldw	r2,0(r2)
  80f320:	10800017 	ldw	r2,0(r2)
  80f324:	e13ffc17 	ldw	r4,-16(fp)
  80f328:	103ee83a 	callr	r2
  80f32c:	e0bffd17 	ldw	r2,-12(fp)
  80f330:	10800917 	ldw	r2,36(r2)
  80f334:	10000626 	beq	r2,zero,80f350 <access_virt_barray+0x100>
  80f338:	01800044 	movi	r6,1
  80f33c:	e17ffd17 	ldw	r5,-12(fp)
  80f340:	e13ffc17 	ldw	r4,-16(fp)
  80f344:	080ed940 	call	80ed94 <do_barray_io>
  80f348:	e0bffd17 	ldw	r2,-12(fp)
  80f34c:	10000915 	stw	zero,36(r2)
  80f350:	e0bffd17 	ldw	r2,-12(fp)
  80f354:	10c00617 	ldw	r3,24(r2)
  80f358:	e0bffe17 	ldw	r2,-8(fp)
  80f35c:	1880042e 	bgeu	r3,r2,80f370 <access_virt_barray+0x120>
  80f360:	e0bffd17 	ldw	r2,-12(fp)
  80f364:	e0fffe17 	ldw	r3,-8(fp)
  80f368:	10c00615 	stw	r3,24(r2)
  80f36c:	00000b06 	br	80f39c <access_virt_barray+0x14c>
  80f370:	e0bffa17 	ldw	r2,-24(fp)
  80f374:	e0fffd17 	ldw	r3,-12(fp)
  80f378:	18c00417 	ldw	r3,16(r3)
  80f37c:	10c5c83a 	sub	r2,r2,r3
  80f380:	e0bff915 	stw	r2,-28(fp)
  80f384:	e0bff917 	ldw	r2,-28(fp)
  80f388:	1000010e 	bge	r2,zero,80f390 <access_virt_barray+0x140>
  80f38c:	e03ff915 	stw	zero,-28(fp)
  80f390:	e0fff917 	ldw	r3,-28(fp)
  80f394:	e0bffd17 	ldw	r2,-12(fp)
  80f398:	10c00615 	stw	r3,24(r2)
  80f39c:	000d883a 	mov	r6,zero
  80f3a0:	e17ffd17 	ldw	r5,-12(fp)
  80f3a4:	e13ffc17 	ldw	r4,-16(fp)
  80f3a8:	080ed940 	call	80ed94 <do_barray_io>
  80f3ac:	e0bffd17 	ldw	r2,-12(fp)
  80f3b0:	10c00717 	ldw	r3,28(r2)
  80f3b4:	e0bffa17 	ldw	r2,-24(fp)
  80f3b8:	1880492e 	bgeu	r3,r2,80f4e0 <access_virt_barray+0x290>
  80f3bc:	e0bffd17 	ldw	r2,-12(fp)
  80f3c0:	10c00717 	ldw	r3,28(r2)
  80f3c4:	e0bffe17 	ldw	r2,-8(fp)
  80f3c8:	18800e2e 	bgeu	r3,r2,80f404 <access_virt_barray+0x1b4>
  80f3cc:	e0800217 	ldw	r2,8(fp)
  80f3d0:	10000926 	beq	r2,zero,80f3f8 <access_virt_barray+0x1a8>
  80f3d4:	e0bffc17 	ldw	r2,-16(fp)
  80f3d8:	10800017 	ldw	r2,0(r2)
  80f3dc:	00c005c4 	movi	r3,23
  80f3e0:	10c00515 	stw	r3,20(r2)
  80f3e4:	e0bffc17 	ldw	r2,-16(fp)
  80f3e8:	10800017 	ldw	r2,0(r2)
  80f3ec:	10800017 	ldw	r2,0(r2)
  80f3f0:	e13ffc17 	ldw	r4,-16(fp)
  80f3f4:	103ee83a 	callr	r2
  80f3f8:	e0bffe17 	ldw	r2,-8(fp)
  80f3fc:	e0bff815 	stw	r2,-32(fp)
  80f400:	00000306 	br	80f410 <access_virt_barray+0x1c0>
  80f404:	e0bffd17 	ldw	r2,-12(fp)
  80f408:	10800717 	ldw	r2,28(r2)
  80f40c:	e0bff815 	stw	r2,-32(fp)
  80f410:	e0800217 	ldw	r2,8(fp)
  80f414:	10000326 	beq	r2,zero,80f424 <access_virt_barray+0x1d4>
  80f418:	e0bffd17 	ldw	r2,-12(fp)
  80f41c:	e0fffa17 	ldw	r3,-24(fp)
  80f420:	10c00715 	stw	r3,28(r2)
  80f424:	e0bffd17 	ldw	r2,-12(fp)
  80f428:	10800817 	ldw	r2,32(r2)
  80f42c:	10002126 	beq	r2,zero,80f4b4 <access_virt_barray+0x264>
  80f430:	e0bffd17 	ldw	r2,-12(fp)
  80f434:	10800217 	ldw	r2,8(r2)
  80f438:	100491fa 	slli	r2,r2,7
  80f43c:	e0bffb15 	stw	r2,-20(fp)
  80f440:	e0bffd17 	ldw	r2,-12(fp)
  80f444:	10800617 	ldw	r2,24(r2)
  80f448:	e0fff817 	ldw	r3,-32(fp)
  80f44c:	1885c83a 	sub	r2,r3,r2
  80f450:	e0bff815 	stw	r2,-32(fp)
  80f454:	e0bffd17 	ldw	r2,-12(fp)
  80f458:	10800617 	ldw	r2,24(r2)
  80f45c:	e0fffa17 	ldw	r3,-24(fp)
  80f460:	1885c83a 	sub	r2,r3,r2
  80f464:	e0bffa15 	stw	r2,-24(fp)
  80f468:	00000e06 	br	80f4a4 <access_virt_barray+0x254>
  80f46c:	e0bffd17 	ldw	r2,-12(fp)
  80f470:	10c00017 	ldw	r3,0(r2)
  80f474:	e0bff817 	ldw	r2,-32(fp)
  80f478:	1085883a 	add	r2,r2,r2
  80f47c:	1085883a 	add	r2,r2,r2
  80f480:	1885883a 	add	r2,r3,r2
  80f484:	10800017 	ldw	r2,0(r2)
  80f488:	e1bffb17 	ldw	r6,-20(fp)
  80f48c:	000b883a 	mov	r5,zero
  80f490:	1009883a 	mov	r4,r2
  80f494:	08342980 	call	834298 <memset>
  80f498:	e0bff817 	ldw	r2,-32(fp)
  80f49c:	10800044 	addi	r2,r2,1
  80f4a0:	e0bff815 	stw	r2,-32(fp)
  80f4a4:	e0fff817 	ldw	r3,-32(fp)
  80f4a8:	e0bffa17 	ldw	r2,-24(fp)
  80f4ac:	18bfef36 	bltu	r3,r2,80f46c <__alt_mem_epcs_flash_controller_0+0xff80646c>
  80f4b0:	00000b06 	br	80f4e0 <access_virt_barray+0x290>
  80f4b4:	e0800217 	ldw	r2,8(fp)
  80f4b8:	1000091e 	bne	r2,zero,80f4e0 <access_virt_barray+0x290>
  80f4bc:	e0bffc17 	ldw	r2,-16(fp)
  80f4c0:	10800017 	ldw	r2,0(r2)
  80f4c4:	00c005c4 	movi	r3,23
  80f4c8:	10c00515 	stw	r3,20(r2)
  80f4cc:	e0bffc17 	ldw	r2,-16(fp)
  80f4d0:	10800017 	ldw	r2,0(r2)
  80f4d4:	10800017 	ldw	r2,0(r2)
  80f4d8:	e13ffc17 	ldw	r4,-16(fp)
  80f4dc:	103ee83a 	callr	r2
  80f4e0:	e0800217 	ldw	r2,8(fp)
  80f4e4:	10000326 	beq	r2,zero,80f4f4 <access_virt_barray+0x2a4>
  80f4e8:	e0bffd17 	ldw	r2,-12(fp)
  80f4ec:	00c00044 	movi	r3,1
  80f4f0:	10c00915 	stw	r3,36(r2)
  80f4f4:	e0bffd17 	ldw	r2,-12(fp)
  80f4f8:	10c00017 	ldw	r3,0(r2)
  80f4fc:	e0bffd17 	ldw	r2,-12(fp)
  80f500:	10800617 	ldw	r2,24(r2)
  80f504:	e13ffe17 	ldw	r4,-8(fp)
  80f508:	2085c83a 	sub	r2,r4,r2
  80f50c:	1085883a 	add	r2,r2,r2
  80f510:	1085883a 	add	r2,r2,r2
  80f514:	1885883a 	add	r2,r3,r2
  80f518:	e037883a 	mov	sp,fp
  80f51c:	dfc00117 	ldw	ra,4(sp)
  80f520:	df000017 	ldw	fp,0(sp)
  80f524:	dec00204 	addi	sp,sp,8
  80f528:	f800283a 	ret

0080f52c <free_pool>:
  80f52c:	defff404 	addi	sp,sp,-48
  80f530:	dfc00b15 	stw	ra,44(sp)
  80f534:	df000a15 	stw	fp,40(sp)
  80f538:	df000a04 	addi	fp,sp,40
  80f53c:	e13ffe15 	stw	r4,-8(fp)
  80f540:	e17fff15 	stw	r5,-4(fp)
  80f544:	e0bffe17 	ldw	r2,-8(fp)
  80f548:	10800117 	ldw	r2,4(r2)
  80f54c:	e0bffa15 	stw	r2,-24(fp)
  80f550:	e0bfff17 	ldw	r2,-4(fp)
  80f554:	10000316 	blt	r2,zero,80f564 <free_pool+0x38>
  80f558:	e0bfff17 	ldw	r2,-4(fp)
  80f55c:	10800090 	cmplti	r2,r2,2
  80f560:	10000d1e 	bne	r2,zero,80f598 <free_pool+0x6c>
  80f564:	e0bffe17 	ldw	r2,-8(fp)
  80f568:	10800017 	ldw	r2,0(r2)
  80f56c:	00c003c4 	movi	r3,15
  80f570:	10c00515 	stw	r3,20(r2)
  80f574:	e0bffe17 	ldw	r2,-8(fp)
  80f578:	10800017 	ldw	r2,0(r2)
  80f57c:	e0ffff17 	ldw	r3,-4(fp)
  80f580:	10c00615 	stw	r3,24(r2)
  80f584:	e0bffe17 	ldw	r2,-8(fp)
  80f588:	10800017 	ldw	r2,0(r2)
  80f58c:	10800017 	ldw	r2,0(r2)
  80f590:	e13ffe17 	ldw	r4,-8(fp)
  80f594:	103ee83a 	callr	r2
  80f598:	e0bfff17 	ldw	r2,-4(fp)
  80f59c:	10800058 	cmpnei	r2,r2,1
  80f5a0:	10002e1e 	bne	r2,zero,80f65c <free_pool+0x130>
  80f5a4:	e0bffa17 	ldw	r2,-24(fp)
  80f5a8:	10801117 	ldw	r2,68(r2)
  80f5ac:	e0bff815 	stw	r2,-32(fp)
  80f5b0:	00000f06 	br	80f5f0 <free_pool+0xc4>
  80f5b4:	e0bff817 	ldw	r2,-32(fp)
  80f5b8:	10800a17 	ldw	r2,40(r2)
  80f5bc:	10000926 	beq	r2,zero,80f5e4 <free_pool+0xb8>
  80f5c0:	e0bff817 	ldw	r2,-32(fp)
  80f5c4:	10000a15 	stw	zero,40(r2)
  80f5c8:	e0bff817 	ldw	r2,-32(fp)
  80f5cc:	10800e17 	ldw	r2,56(r2)
  80f5d0:	e0fff817 	ldw	r3,-32(fp)
  80f5d4:	18c00c04 	addi	r3,r3,48
  80f5d8:	180b883a 	mov	r5,r3
  80f5dc:	e13ffe17 	ldw	r4,-8(fp)
  80f5e0:	103ee83a 	callr	r2
  80f5e4:	e0bff817 	ldw	r2,-32(fp)
  80f5e8:	10800b17 	ldw	r2,44(r2)
  80f5ec:	e0bff815 	stw	r2,-32(fp)
  80f5f0:	e0bff817 	ldw	r2,-32(fp)
  80f5f4:	103fef1e 	bne	r2,zero,80f5b4 <__alt_mem_epcs_flash_controller_0+0xff8065b4>
  80f5f8:	e0bffa17 	ldw	r2,-24(fp)
  80f5fc:	10001115 	stw	zero,68(r2)
  80f600:	e0bffa17 	ldw	r2,-24(fp)
  80f604:	10801217 	ldw	r2,72(r2)
  80f608:	e0bff915 	stw	r2,-28(fp)
  80f60c:	00000f06 	br	80f64c <free_pool+0x120>
  80f610:	e0bff917 	ldw	r2,-28(fp)
  80f614:	10800a17 	ldw	r2,40(r2)
  80f618:	10000926 	beq	r2,zero,80f640 <free_pool+0x114>
  80f61c:	e0bff917 	ldw	r2,-28(fp)
  80f620:	10000a15 	stw	zero,40(r2)
  80f624:	e0bff917 	ldw	r2,-28(fp)
  80f628:	10800e17 	ldw	r2,56(r2)
  80f62c:	e0fff917 	ldw	r3,-28(fp)
  80f630:	18c00c04 	addi	r3,r3,48
  80f634:	180b883a 	mov	r5,r3
  80f638:	e13ffe17 	ldw	r4,-8(fp)
  80f63c:	103ee83a 	callr	r2
  80f640:	e0bff917 	ldw	r2,-28(fp)
  80f644:	10800b17 	ldw	r2,44(r2)
  80f648:	e0bff915 	stw	r2,-28(fp)
  80f64c:	e0bff917 	ldw	r2,-28(fp)
  80f650:	103fef1e 	bne	r2,zero,80f610 <__alt_mem_epcs_flash_controller_0+0xff806610>
  80f654:	e0bffa17 	ldw	r2,-24(fp)
  80f658:	10001215 	stw	zero,72(r2)
  80f65c:	e0fffa17 	ldw	r3,-24(fp)
  80f660:	e0bfff17 	ldw	r2,-4(fp)
  80f664:	108003c4 	addi	r2,r2,15
  80f668:	1085883a 	add	r2,r2,r2
  80f66c:	1085883a 	add	r2,r2,r2
  80f670:	1885883a 	add	r2,r3,r2
  80f674:	10800017 	ldw	r2,0(r2)
  80f678:	e0bff715 	stw	r2,-36(fp)
  80f67c:	e0fffa17 	ldw	r3,-24(fp)
  80f680:	e0bfff17 	ldw	r2,-4(fp)
  80f684:	108003c4 	addi	r2,r2,15
  80f688:	1085883a 	add	r2,r2,r2
  80f68c:	1085883a 	add	r2,r2,r2
  80f690:	1885883a 	add	r2,r3,r2
  80f694:	10000015 	stw	zero,0(r2)
  80f698:	00001806 	br	80f6fc <free_pool+0x1d0>
  80f69c:	e0bff717 	ldw	r2,-36(fp)
  80f6a0:	10800017 	ldw	r2,0(r2)
  80f6a4:	e0bffb15 	stw	r2,-20(fp)
  80f6a8:	e0bff717 	ldw	r2,-36(fp)
  80f6ac:	10c00117 	ldw	r3,4(r2)
  80f6b0:	e0bff717 	ldw	r2,-36(fp)
  80f6b4:	10800217 	ldw	r2,8(r2)
  80f6b8:	1885883a 	add	r2,r3,r2
  80f6bc:	10800304 	addi	r2,r2,12
  80f6c0:	e0bffc15 	stw	r2,-16(fp)
  80f6c4:	e1bffc17 	ldw	r6,-16(fp)
  80f6c8:	e17ff717 	ldw	r5,-36(fp)
  80f6cc:	e13ffe17 	ldw	r4,-8(fp)
  80f6d0:	080fba80 	call	80fba8 <jpeg_free_large>
  80f6d4:	e0bffa17 	ldw	r2,-24(fp)
  80f6d8:	10801317 	ldw	r2,76(r2)
  80f6dc:	1007883a 	mov	r3,r2
  80f6e0:	e0bffc17 	ldw	r2,-16(fp)
  80f6e4:	1885c83a 	sub	r2,r3,r2
  80f6e8:	1007883a 	mov	r3,r2
  80f6ec:	e0bffa17 	ldw	r2,-24(fp)
  80f6f0:	10c01315 	stw	r3,76(r2)
  80f6f4:	e0bffb17 	ldw	r2,-20(fp)
  80f6f8:	e0bff715 	stw	r2,-36(fp)
  80f6fc:	e0bff717 	ldw	r2,-36(fp)
  80f700:	103fe61e 	bne	r2,zero,80f69c <__alt_mem_epcs_flash_controller_0+0xff80669c>
  80f704:	e0fffa17 	ldw	r3,-24(fp)
  80f708:	e0bfff17 	ldw	r2,-4(fp)
  80f70c:	10800344 	addi	r2,r2,13
  80f710:	1085883a 	add	r2,r2,r2
  80f714:	1085883a 	add	r2,r2,r2
  80f718:	1885883a 	add	r2,r3,r2
  80f71c:	10800017 	ldw	r2,0(r2)
  80f720:	e0bff615 	stw	r2,-40(fp)
  80f724:	e0fffa17 	ldw	r3,-24(fp)
  80f728:	e0bfff17 	ldw	r2,-4(fp)
  80f72c:	10800344 	addi	r2,r2,13
  80f730:	1085883a 	add	r2,r2,r2
  80f734:	1085883a 	add	r2,r2,r2
  80f738:	1885883a 	add	r2,r3,r2
  80f73c:	10000015 	stw	zero,0(r2)
  80f740:	00001806 	br	80f7a4 <free_pool+0x278>
  80f744:	e0bff617 	ldw	r2,-40(fp)
  80f748:	10800017 	ldw	r2,0(r2)
  80f74c:	e0bffd15 	stw	r2,-12(fp)
  80f750:	e0bff617 	ldw	r2,-40(fp)
  80f754:	10c00117 	ldw	r3,4(r2)
  80f758:	e0bff617 	ldw	r2,-40(fp)
  80f75c:	10800217 	ldw	r2,8(r2)
  80f760:	1885883a 	add	r2,r3,r2
  80f764:	10800304 	addi	r2,r2,12
  80f768:	e0bffc15 	stw	r2,-16(fp)
  80f76c:	e1bffc17 	ldw	r6,-16(fp)
  80f770:	e17ff617 	ldw	r5,-40(fp)
  80f774:	e13ffe17 	ldw	r4,-8(fp)
  80f778:	080fb380 	call	80fb38 <jpeg_free_small>
  80f77c:	e0bffa17 	ldw	r2,-24(fp)
  80f780:	10801317 	ldw	r2,76(r2)
  80f784:	1007883a 	mov	r3,r2
  80f788:	e0bffc17 	ldw	r2,-16(fp)
  80f78c:	1885c83a 	sub	r2,r3,r2
  80f790:	1007883a 	mov	r3,r2
  80f794:	e0bffa17 	ldw	r2,-24(fp)
  80f798:	10c01315 	stw	r3,76(r2)
  80f79c:	e0bffd17 	ldw	r2,-12(fp)
  80f7a0:	e0bff615 	stw	r2,-40(fp)
  80f7a4:	e0bff617 	ldw	r2,-40(fp)
  80f7a8:	103fe61e 	bne	r2,zero,80f744 <__alt_mem_epcs_flash_controller_0+0xff806744>
  80f7ac:	0001883a 	nop
  80f7b0:	e037883a 	mov	sp,fp
  80f7b4:	dfc00117 	ldw	ra,4(sp)
  80f7b8:	df000017 	ldw	fp,0(sp)
  80f7bc:	dec00204 	addi	sp,sp,8
  80f7c0:	f800283a 	ret

0080f7c4 <self_destruct>:
  80f7c4:	defffc04 	addi	sp,sp,-16
  80f7c8:	dfc00315 	stw	ra,12(sp)
  80f7cc:	df000215 	stw	fp,8(sp)
  80f7d0:	df000204 	addi	fp,sp,8
  80f7d4:	e13fff15 	stw	r4,-4(fp)
  80f7d8:	00800044 	movi	r2,1
  80f7dc:	e0bffe15 	stw	r2,-8(fp)
  80f7e0:	00000606 	br	80f7fc <self_destruct+0x38>
  80f7e4:	e17ffe17 	ldw	r5,-8(fp)
  80f7e8:	e13fff17 	ldw	r4,-4(fp)
  80f7ec:	080f52c0 	call	80f52c <free_pool>
  80f7f0:	e0bffe17 	ldw	r2,-8(fp)
  80f7f4:	10bfffc4 	addi	r2,r2,-1
  80f7f8:	e0bffe15 	stw	r2,-8(fp)
  80f7fc:	e0bffe17 	ldw	r2,-8(fp)
  80f800:	103ff80e 	bge	r2,zero,80f7e4 <__alt_mem_epcs_flash_controller_0+0xff8067e4>
  80f804:	e0bfff17 	ldw	r2,-4(fp)
  80f808:	10800117 	ldw	r2,4(r2)
  80f80c:	01801504 	movi	r6,84
  80f810:	100b883a 	mov	r5,r2
  80f814:	e13fff17 	ldw	r4,-4(fp)
  80f818:	080fb380 	call	80fb38 <jpeg_free_small>
  80f81c:	e0bfff17 	ldw	r2,-4(fp)
  80f820:	10000115 	stw	zero,4(r2)
  80f824:	e13fff17 	ldw	r4,-4(fp)
  80f828:	080fc900 	call	80fc90 <jpeg_mem_term>
  80f82c:	0001883a 	nop
  80f830:	e037883a 	mov	sp,fp
  80f834:	dfc00117 	ldw	ra,4(sp)
  80f838:	df000017 	ldw	fp,0(sp)
  80f83c:	dec00204 	addi	sp,sp,8
  80f840:	f800283a 	ret

0080f844 <jinit_memory_mgr>:
  80f844:	defff704 	addi	sp,sp,-36
  80f848:	dfc00815 	stw	ra,32(sp)
  80f84c:	df000715 	stw	fp,28(sp)
  80f850:	df000704 	addi	fp,sp,28
  80f854:	e13fff15 	stw	r4,-4(fp)
  80f858:	e0bfff17 	ldw	r2,-4(fp)
  80f85c:	10000115 	stw	zero,4(r2)
  80f860:	008ee6f4 	movhi	r2,15259
  80f864:	10b28004 	addi	r2,r2,-13824
  80f868:	e0bffa15 	stw	r2,-24(fp)
  80f86c:	e0fffa17 	ldw	r3,-24(fp)
  80f870:	008ee6f4 	movhi	r2,15259
  80f874:	10b28004 	addi	r2,r2,-13824
  80f878:	18800926 	beq	r3,r2,80f8a0 <jinit_memory_mgr+0x5c>
  80f87c:	e0bfff17 	ldw	r2,-4(fp)
  80f880:	10800017 	ldw	r2,0(r2)
  80f884:	00c00084 	movi	r3,2
  80f888:	10c00515 	stw	r3,20(r2)
  80f88c:	e0bfff17 	ldw	r2,-4(fp)
  80f890:	10800017 	ldw	r2,0(r2)
  80f894:	10800017 	ldw	r2,0(r2)
  80f898:	e13fff17 	ldw	r4,-4(fp)
  80f89c:	103ee83a 	callr	r2
  80f8a0:	e13fff17 	ldw	r4,-4(fp)
  80f8a4:	080fc6c0 	call	80fc6c <jpeg_mem_init>
  80f8a8:	e0bffd15 	stw	r2,-12(fp)
  80f8ac:	01401504 	movi	r5,84
  80f8b0:	e13fff17 	ldw	r4,-4(fp)
  80f8b4:	080fb040 	call	80fb04 <jpeg_get_small>
  80f8b8:	e0bffb15 	stw	r2,-20(fp)
  80f8bc:	e0bffb17 	ldw	r2,-20(fp)
  80f8c0:	10000e1e 	bne	r2,zero,80f8fc <jinit_memory_mgr+0xb8>
  80f8c4:	e13fff17 	ldw	r4,-4(fp)
  80f8c8:	080fc900 	call	80fc90 <jpeg_mem_term>
  80f8cc:	e0bfff17 	ldw	r2,-4(fp)
  80f8d0:	10800017 	ldw	r2,0(r2)
  80f8d4:	00c00e04 	movi	r3,56
  80f8d8:	10c00515 	stw	r3,20(r2)
  80f8dc:	e0bfff17 	ldw	r2,-4(fp)
  80f8e0:	10800017 	ldw	r2,0(r2)
  80f8e4:	10000615 	stw	zero,24(r2)
  80f8e8:	e0bfff17 	ldw	r2,-4(fp)
  80f8ec:	10800017 	ldw	r2,0(r2)
  80f8f0:	10800017 	ldw	r2,0(r2)
  80f8f4:	e13fff17 	ldw	r4,-4(fp)
  80f8f8:	103ee83a 	callr	r2
  80f8fc:	e0fffb17 	ldw	r3,-20(fp)
  80f900:	00802074 	movhi	r2,129
  80f904:	10b78e04 	addi	r2,r2,-8648
  80f908:	18800015 	stw	r2,0(r3)
  80f90c:	e0fffb17 	ldw	r3,-20(fp)
  80f910:	00802074 	movhi	r2,129
  80f914:	10b84204 	addi	r2,r2,-7928
  80f918:	18800115 	stw	r2,4(r3)
  80f91c:	e0fffb17 	ldw	r3,-20(fp)
  80f920:	00802074 	movhi	r2,129
  80f924:	10b8a004 	addi	r2,r2,-7552
  80f928:	18800215 	stw	r2,8(r3)
  80f92c:	e0fffb17 	ldw	r3,-20(fp)
  80f930:	00802074 	movhi	r2,129
  80f934:	10b8fe04 	addi	r2,r2,-7176
  80f938:	18800315 	stw	r2,12(r3)
  80f93c:	e0fffb17 	ldw	r3,-20(fp)
  80f940:	00802074 	movhi	r2,129
  80f944:	10b96004 	addi	r2,r2,-6784
  80f948:	18800415 	stw	r2,16(r3)
  80f94c:	e0fffb17 	ldw	r3,-20(fp)
  80f950:	00802074 	movhi	r2,129
  80f954:	10b99d04 	addi	r2,r2,-6540
  80f958:	18800515 	stw	r2,20(r3)
  80f95c:	e0fffb17 	ldw	r3,-20(fp)
  80f960:	00802074 	movhi	r2,129
  80f964:	10b9da04 	addi	r2,r2,-6296
  80f968:	18800615 	stw	r2,24(r3)
  80f96c:	e0fffb17 	ldw	r3,-20(fp)
  80f970:	00802074 	movhi	r2,129
  80f974:	10bbde04 	addi	r2,r2,-4232
  80f978:	18800715 	stw	r2,28(r3)
  80f97c:	e0fffb17 	ldw	r3,-20(fp)
  80f980:	00802074 	movhi	r2,129
  80f984:	10bc9404 	addi	r2,r2,-3504
  80f988:	18800815 	stw	r2,32(r3)
  80f98c:	e0fffb17 	ldw	r3,-20(fp)
  80f990:	00802074 	movhi	r2,129
  80f994:	10bd4b04 	addi	r2,r2,-2772
  80f998:	18800915 	stw	r2,36(r3)
  80f99c:	e0fffb17 	ldw	r3,-20(fp)
  80f9a0:	00802074 	movhi	r2,129
  80f9a4:	10bdf104 	addi	r2,r2,-2108
  80f9a8:	18800a15 	stw	r2,40(r3)
  80f9ac:	e0fffb17 	ldw	r3,-20(fp)
  80f9b0:	008ee6f4 	movhi	r2,15259
  80f9b4:	10b28004 	addi	r2,r2,-13824
  80f9b8:	18800c15 	stw	r2,48(r3)
  80f9bc:	e0fffd17 	ldw	r3,-12(fp)
  80f9c0:	e0bffb17 	ldw	r2,-20(fp)
  80f9c4:	10c00b15 	stw	r3,44(r2)
  80f9c8:	00800044 	movi	r2,1
  80f9cc:	e0bff915 	stw	r2,-28(fp)
  80f9d0:	00001106 	br	80fa18 <jinit_memory_mgr+0x1d4>
  80f9d4:	e0fffb17 	ldw	r3,-20(fp)
  80f9d8:	e0bff917 	ldw	r2,-28(fp)
  80f9dc:	10800344 	addi	r2,r2,13
  80f9e0:	1085883a 	add	r2,r2,r2
  80f9e4:	1085883a 	add	r2,r2,r2
  80f9e8:	1885883a 	add	r2,r3,r2
  80f9ec:	10000015 	stw	zero,0(r2)
  80f9f0:	e0fffb17 	ldw	r3,-20(fp)
  80f9f4:	e0bff917 	ldw	r2,-28(fp)
  80f9f8:	108003c4 	addi	r2,r2,15
  80f9fc:	1085883a 	add	r2,r2,r2
  80fa00:	1085883a 	add	r2,r2,r2
  80fa04:	1885883a 	add	r2,r3,r2
  80fa08:	10000015 	stw	zero,0(r2)
  80fa0c:	e0bff917 	ldw	r2,-28(fp)
  80fa10:	10bfffc4 	addi	r2,r2,-1
  80fa14:	e0bff915 	stw	r2,-28(fp)
  80fa18:	e0bff917 	ldw	r2,-28(fp)
  80fa1c:	103fed0e 	bge	r2,zero,80f9d4 <__alt_mem_epcs_flash_controller_0+0xff8069d4>
  80fa20:	e0bffb17 	ldw	r2,-20(fp)
  80fa24:	10001115 	stw	zero,68(r2)
  80fa28:	e0bffb17 	ldw	r2,-20(fp)
  80fa2c:	10001215 	stw	zero,72(r2)
  80fa30:	e0bffb17 	ldw	r2,-20(fp)
  80fa34:	00c01504 	movi	r3,84
  80fa38:	10c01315 	stw	r3,76(r2)
  80fa3c:	e0fffb17 	ldw	r3,-20(fp)
  80fa40:	e0bfff17 	ldw	r2,-4(fp)
  80fa44:	10c00115 	stw	r3,4(r2)
  80fa48:	010021b4 	movhi	r4,134
  80fa4c:	2120f004 	addi	r4,r4,-31808
  80fa50:	08336140 	call	833614 <getenv>
  80fa54:	e0bffc15 	stw	r2,-16(fp)
  80fa58:	e0bffc17 	ldw	r2,-16(fp)
  80fa5c:	10002326 	beq	r2,zero,80faec <jinit_memory_mgr+0x2a8>
  80fa60:	00801e04 	movi	r2,120
  80fa64:	e0bffe05 	stb	r2,-8(fp)
  80fa68:	e0fffe04 	addi	r3,fp,-8
  80fa6c:	e0bffd04 	addi	r2,fp,-12
  80fa70:	180f883a 	mov	r7,r3
  80fa74:	100d883a 	mov	r6,r2
  80fa78:	014021b4 	movhi	r5,134
  80fa7c:	2960f204 	addi	r5,r5,-31800
  80fa80:	e13ffc17 	ldw	r4,-16(fp)
  80fa84:	08349f00 	call	8349f0 <sscanf>
  80fa88:	0080180e 	bge	zero,r2,80faec <jinit_memory_mgr+0x2a8>
  80fa8c:	e0bffe03 	ldbu	r2,-8(fp)
  80fa90:	10803fcc 	andi	r2,r2,255
  80fa94:	1080201c 	xori	r2,r2,128
  80fa98:	10bfe004 	addi	r2,r2,-128
  80fa9c:	10801b60 	cmpeqi	r2,r2,109
  80faa0:	1000061e 	bne	r2,zero,80fabc <jinit_memory_mgr+0x278>
  80faa4:	e0bffe03 	ldbu	r2,-8(fp)
  80faa8:	10803fcc 	andi	r2,r2,255
  80faac:	1080201c 	xori	r2,r2,128
  80fab0:	10bfe004 	addi	r2,r2,-128
  80fab4:	10801358 	cmpnei	r2,r2,77
  80fab8:	1000051e 	bne	r2,zero,80fad0 <jinit_memory_mgr+0x28c>
  80fabc:	e0bffd17 	ldw	r2,-12(fp)
  80fac0:	0140fa04 	movi	r5,1000
  80fac4:	1009883a 	mov	r4,r2
  80fac8:	08305040 	call	830504 <__mulsi3>
  80facc:	e0bffd15 	stw	r2,-12(fp)
  80fad0:	e0bffd17 	ldw	r2,-12(fp)
  80fad4:	0140fa04 	movi	r5,1000
  80fad8:	1009883a 	mov	r4,r2
  80fadc:	08305040 	call	830504 <__mulsi3>
  80fae0:	1007883a 	mov	r3,r2
  80fae4:	e0bffb17 	ldw	r2,-20(fp)
  80fae8:	10c00b15 	stw	r3,44(r2)
  80faec:	0001883a 	nop
  80faf0:	e037883a 	mov	sp,fp
  80faf4:	dfc00117 	ldw	ra,4(sp)
  80faf8:	df000017 	ldw	fp,0(sp)
  80fafc:	dec00204 	addi	sp,sp,8
  80fb00:	f800283a 	ret

0080fb04 <jpeg_get_small>:
  80fb04:	defffc04 	addi	sp,sp,-16
  80fb08:	dfc00315 	stw	ra,12(sp)
  80fb0c:	df000215 	stw	fp,8(sp)
  80fb10:	df000204 	addi	fp,sp,8
  80fb14:	e13ffe15 	stw	r4,-8(fp)
  80fb18:	e17fff15 	stw	r5,-4(fp)
  80fb1c:	e13fff17 	ldw	r4,-4(fp)
  80fb20:	083391c0 	call	83391c <malloc>
  80fb24:	e037883a 	mov	sp,fp
  80fb28:	dfc00117 	ldw	ra,4(sp)
  80fb2c:	df000017 	ldw	fp,0(sp)
  80fb30:	dec00204 	addi	sp,sp,8
  80fb34:	f800283a 	ret

0080fb38 <jpeg_free_small>:
  80fb38:	defffb04 	addi	sp,sp,-20
  80fb3c:	dfc00415 	stw	ra,16(sp)
  80fb40:	df000315 	stw	fp,12(sp)
  80fb44:	df000304 	addi	fp,sp,12
  80fb48:	e13ffd15 	stw	r4,-12(fp)
  80fb4c:	e17ffe15 	stw	r5,-8(fp)
  80fb50:	e1bfff15 	stw	r6,-4(fp)
  80fb54:	e13ffe17 	ldw	r4,-8(fp)
  80fb58:	08339300 	call	833930 <free>
  80fb5c:	0001883a 	nop
  80fb60:	e037883a 	mov	sp,fp
  80fb64:	dfc00117 	ldw	ra,4(sp)
  80fb68:	df000017 	ldw	fp,0(sp)
  80fb6c:	dec00204 	addi	sp,sp,8
  80fb70:	f800283a 	ret

0080fb74 <jpeg_get_large>:
  80fb74:	defffc04 	addi	sp,sp,-16
  80fb78:	dfc00315 	stw	ra,12(sp)
  80fb7c:	df000215 	stw	fp,8(sp)
  80fb80:	df000204 	addi	fp,sp,8
  80fb84:	e13ffe15 	stw	r4,-8(fp)
  80fb88:	e17fff15 	stw	r5,-4(fp)
  80fb8c:	e13fff17 	ldw	r4,-4(fp)
  80fb90:	083391c0 	call	83391c <malloc>
  80fb94:	e037883a 	mov	sp,fp
  80fb98:	dfc00117 	ldw	ra,4(sp)
  80fb9c:	df000017 	ldw	fp,0(sp)
  80fba0:	dec00204 	addi	sp,sp,8
  80fba4:	f800283a 	ret

0080fba8 <jpeg_free_large>:
  80fba8:	defffb04 	addi	sp,sp,-20
  80fbac:	dfc00415 	stw	ra,16(sp)
  80fbb0:	df000315 	stw	fp,12(sp)
  80fbb4:	df000304 	addi	fp,sp,12
  80fbb8:	e13ffd15 	stw	r4,-12(fp)
  80fbbc:	e17ffe15 	stw	r5,-8(fp)
  80fbc0:	e1bfff15 	stw	r6,-4(fp)
  80fbc4:	e13ffe17 	ldw	r4,-8(fp)
  80fbc8:	08339300 	call	833930 <free>
  80fbcc:	0001883a 	nop
  80fbd0:	e037883a 	mov	sp,fp
  80fbd4:	dfc00117 	ldw	ra,4(sp)
  80fbd8:	df000017 	ldw	fp,0(sp)
  80fbdc:	dec00204 	addi	sp,sp,8
  80fbe0:	f800283a 	ret

0080fbe4 <jpeg_mem_available>:
  80fbe4:	defffb04 	addi	sp,sp,-20
  80fbe8:	df000415 	stw	fp,16(sp)
  80fbec:	df000404 	addi	fp,sp,16
  80fbf0:	e13ffc15 	stw	r4,-16(fp)
  80fbf4:	e17ffd15 	stw	r5,-12(fp)
  80fbf8:	e1bffe15 	stw	r6,-8(fp)
  80fbfc:	e1ffff15 	stw	r7,-4(fp)
  80fc00:	e0bffe17 	ldw	r2,-8(fp)
  80fc04:	e037883a 	mov	sp,fp
  80fc08:	df000017 	ldw	fp,0(sp)
  80fc0c:	dec00104 	addi	sp,sp,4
  80fc10:	f800283a 	ret

0080fc14 <jpeg_open_backing_store>:
  80fc14:	defffb04 	addi	sp,sp,-20
  80fc18:	dfc00415 	stw	ra,16(sp)
  80fc1c:	df000315 	stw	fp,12(sp)
  80fc20:	df000304 	addi	fp,sp,12
  80fc24:	e13ffd15 	stw	r4,-12(fp)
  80fc28:	e17ffe15 	stw	r5,-8(fp)
  80fc2c:	e1bfff15 	stw	r6,-4(fp)
  80fc30:	e0bffd17 	ldw	r2,-12(fp)
  80fc34:	10800017 	ldw	r2,0(r2)
  80fc38:	00c00cc4 	movi	r3,51
  80fc3c:	10c00515 	stw	r3,20(r2)
  80fc40:	e0bffd17 	ldw	r2,-12(fp)
  80fc44:	10800017 	ldw	r2,0(r2)
  80fc48:	10800017 	ldw	r2,0(r2)
  80fc4c:	e13ffd17 	ldw	r4,-12(fp)
  80fc50:	103ee83a 	callr	r2
  80fc54:	0001883a 	nop
  80fc58:	e037883a 	mov	sp,fp
  80fc5c:	dfc00117 	ldw	ra,4(sp)
  80fc60:	df000017 	ldw	fp,0(sp)
  80fc64:	dec00204 	addi	sp,sp,8
  80fc68:	f800283a 	ret

0080fc6c <jpeg_mem_init>:
  80fc6c:	defffe04 	addi	sp,sp,-8
  80fc70:	df000115 	stw	fp,4(sp)
  80fc74:	df000104 	addi	fp,sp,4
  80fc78:	e13fff15 	stw	r4,-4(fp)
  80fc7c:	0005883a 	mov	r2,zero
  80fc80:	e037883a 	mov	sp,fp
  80fc84:	df000017 	ldw	fp,0(sp)
  80fc88:	dec00104 	addi	sp,sp,4
  80fc8c:	f800283a 	ret

0080fc90 <jpeg_mem_term>:
  80fc90:	defffe04 	addi	sp,sp,-8
  80fc94:	df000115 	stw	fp,4(sp)
  80fc98:	df000104 	addi	fp,sp,4
  80fc9c:	e13fff15 	stw	r4,-4(fp)
  80fca0:	0001883a 	nop
  80fca4:	e037883a 	mov	sp,fp
  80fca8:	df000017 	ldw	fp,0(sp)
  80fcac:	dec00104 	addi	sp,sp,4
  80fcb0:	f800283a 	ret

0080fcb4 <select_ncolors>:
  80fcb4:	defff404 	addi	sp,sp,-48
  80fcb8:	dfc00b15 	stw	ra,44(sp)
  80fcbc:	df000a15 	stw	fp,40(sp)
  80fcc0:	df000a04 	addi	fp,sp,40
  80fcc4:	e13ffe15 	stw	r4,-8(fp)
  80fcc8:	e17fff15 	stw	r5,-4(fp)
  80fccc:	e0bffe17 	ldw	r2,-8(fp)
  80fcd0:	10801e17 	ldw	r2,120(r2)
  80fcd4:	e0bffb15 	stw	r2,-20(fp)
  80fcd8:	e0bffe17 	ldw	r2,-8(fp)
  80fcdc:	10801817 	ldw	r2,96(r2)
  80fce0:	e0bffc15 	stw	r2,-16(fp)
  80fce4:	00800044 	movi	r2,1
  80fce8:	e0bff715 	stw	r2,-36(fp)
  80fcec:	e0bff717 	ldw	r2,-36(fp)
  80fcf0:	10800044 	addi	r2,r2,1
  80fcf4:	e0bff715 	stw	r2,-36(fp)
  80fcf8:	e0bff717 	ldw	r2,-36(fp)
  80fcfc:	e0bffa15 	stw	r2,-24(fp)
  80fd00:	00800044 	movi	r2,1
  80fd04:	e0bff815 	stw	r2,-32(fp)
  80fd08:	00000706 	br	80fd28 <select_ncolors+0x74>
  80fd0c:	e17ff717 	ldw	r5,-36(fp)
  80fd10:	e13ffa17 	ldw	r4,-24(fp)
  80fd14:	08305040 	call	830504 <__mulsi3>
  80fd18:	e0bffa15 	stw	r2,-24(fp)
  80fd1c:	e0bff817 	ldw	r2,-32(fp)
  80fd20:	10800044 	addi	r2,r2,1
  80fd24:	e0bff815 	stw	r2,-32(fp)
  80fd28:	e0fff817 	ldw	r3,-32(fp)
  80fd2c:	e0bffb17 	ldw	r2,-20(fp)
  80fd30:	18bff616 	blt	r3,r2,80fd0c <__alt_mem_epcs_flash_controller_0+0xff806d0c>
  80fd34:	e0bffa17 	ldw	r2,-24(fp)
  80fd38:	e0fffc17 	ldw	r3,-16(fp)
  80fd3c:	18bfeb0e 	bge	r3,r2,80fcec <__alt_mem_epcs_flash_controller_0+0xff806cec>
  80fd40:	e0bff717 	ldw	r2,-36(fp)
  80fd44:	10bfffc4 	addi	r2,r2,-1
  80fd48:	e0bff715 	stw	r2,-36(fp)
  80fd4c:	e0bff717 	ldw	r2,-36(fp)
  80fd50:	10800088 	cmpgei	r2,r2,2
  80fd54:	10000d1e 	bne	r2,zero,80fd8c <select_ncolors+0xd8>
  80fd58:	e0bffe17 	ldw	r2,-8(fp)
  80fd5c:	10800017 	ldw	r2,0(r2)
  80fd60:	00c00e84 	movi	r3,58
  80fd64:	10c00515 	stw	r3,20(r2)
  80fd68:	e0bffe17 	ldw	r2,-8(fp)
  80fd6c:	10800017 	ldw	r2,0(r2)
  80fd70:	e0fffa17 	ldw	r3,-24(fp)
  80fd74:	10c00615 	stw	r3,24(r2)
  80fd78:	e0bffe17 	ldw	r2,-8(fp)
  80fd7c:	10800017 	ldw	r2,0(r2)
  80fd80:	10800017 	ldw	r2,0(r2)
  80fd84:	e13ffe17 	ldw	r4,-8(fp)
  80fd88:	103ee83a 	callr	r2
  80fd8c:	00800044 	movi	r2,1
  80fd90:	e0bff615 	stw	r2,-40(fp)
  80fd94:	e03ff815 	stw	zero,-32(fp)
  80fd98:	00000f06 	br	80fdd8 <select_ncolors+0x124>
  80fd9c:	e0bff817 	ldw	r2,-32(fp)
  80fda0:	1085883a 	add	r2,r2,r2
  80fda4:	1085883a 	add	r2,r2,r2
  80fda8:	1007883a 	mov	r3,r2
  80fdac:	e0bfff17 	ldw	r2,-4(fp)
  80fdb0:	10c5883a 	add	r2,r2,r3
  80fdb4:	e0fff717 	ldw	r3,-36(fp)
  80fdb8:	10c00015 	stw	r3,0(r2)
  80fdbc:	e17ff717 	ldw	r5,-36(fp)
  80fdc0:	e13ff617 	ldw	r4,-40(fp)
  80fdc4:	08305040 	call	830504 <__mulsi3>
  80fdc8:	e0bff615 	stw	r2,-40(fp)
  80fdcc:	e0bff817 	ldw	r2,-32(fp)
  80fdd0:	10800044 	addi	r2,r2,1
  80fdd4:	e0bff815 	stw	r2,-32(fp)
  80fdd8:	e0fff817 	ldw	r3,-32(fp)
  80fddc:	e0bffb17 	ldw	r2,-20(fp)
  80fde0:	18bfee16 	blt	r3,r2,80fd9c <__alt_mem_epcs_flash_controller_0+0xff806d9c>
  80fde4:	e03ff915 	stw	zero,-28(fp)
  80fde8:	e03ff815 	stw	zero,-32(fp)
  80fdec:	00003806 	br	80fed0 <select_ncolors+0x21c>
  80fdf0:	e0bffe17 	ldw	r2,-8(fp)
  80fdf4:	10800b17 	ldw	r2,44(r2)
  80fdf8:	10800098 	cmpnei	r2,r2,2
  80fdfc:	1000081e 	bne	r2,zero,80fe20 <select_ncolors+0x16c>
  80fe00:	008021b4 	movhi	r2,134
  80fe04:	10a13404 	addi	r2,r2,-31536
  80fe08:	e0fff817 	ldw	r3,-32(fp)
  80fe0c:	18c7883a 	add	r3,r3,r3
  80fe10:	18c7883a 	add	r3,r3,r3
  80fe14:	10c5883a 	add	r2,r2,r3
  80fe18:	10800017 	ldw	r2,0(r2)
  80fe1c:	00000106 	br	80fe24 <select_ncolors+0x170>
  80fe20:	e0bff817 	ldw	r2,-32(fp)
  80fe24:	e0bffd15 	stw	r2,-12(fp)
  80fe28:	e0bffd17 	ldw	r2,-12(fp)
  80fe2c:	1085883a 	add	r2,r2,r2
  80fe30:	1085883a 	add	r2,r2,r2
  80fe34:	1007883a 	mov	r3,r2
  80fe38:	e0bfff17 	ldw	r2,-4(fp)
  80fe3c:	10c5883a 	add	r2,r2,r3
  80fe40:	10800017 	ldw	r2,0(r2)
  80fe44:	100b883a 	mov	r5,r2
  80fe48:	e13ff617 	ldw	r4,-40(fp)
  80fe4c:	08303500 	call	830350 <__divsi3>
  80fe50:	e0bffa15 	stw	r2,-24(fp)
  80fe54:	e0bffd17 	ldw	r2,-12(fp)
  80fe58:	1085883a 	add	r2,r2,r2
  80fe5c:	1085883a 	add	r2,r2,r2
  80fe60:	1007883a 	mov	r3,r2
  80fe64:	e0bfff17 	ldw	r2,-4(fp)
  80fe68:	10c5883a 	add	r2,r2,r3
  80fe6c:	10800017 	ldw	r2,0(r2)
  80fe70:	10800044 	addi	r2,r2,1
  80fe74:	100b883a 	mov	r5,r2
  80fe78:	e13ffa17 	ldw	r4,-24(fp)
  80fe7c:	08305040 	call	830504 <__mulsi3>
  80fe80:	e0bffa15 	stw	r2,-24(fp)
  80fe84:	e0bffa17 	ldw	r2,-24(fp)
  80fe88:	e0fffc17 	ldw	r3,-16(fp)
  80fe8c:	18801416 	blt	r3,r2,80fee0 <select_ncolors+0x22c>
  80fe90:	e0bffd17 	ldw	r2,-12(fp)
  80fe94:	1085883a 	add	r2,r2,r2
  80fe98:	1085883a 	add	r2,r2,r2
  80fe9c:	1007883a 	mov	r3,r2
  80fea0:	e0bfff17 	ldw	r2,-4(fp)
  80fea4:	10c5883a 	add	r2,r2,r3
  80fea8:	10c00017 	ldw	r3,0(r2)
  80feac:	18c00044 	addi	r3,r3,1
  80feb0:	10c00015 	stw	r3,0(r2)
  80feb4:	e0bffa17 	ldw	r2,-24(fp)
  80feb8:	e0bff615 	stw	r2,-40(fp)
  80febc:	00800044 	movi	r2,1
  80fec0:	e0bff915 	stw	r2,-28(fp)
  80fec4:	e0bff817 	ldw	r2,-32(fp)
  80fec8:	10800044 	addi	r2,r2,1
  80fecc:	e0bff815 	stw	r2,-32(fp)
  80fed0:	e0fff817 	ldw	r3,-32(fp)
  80fed4:	e0bffb17 	ldw	r2,-20(fp)
  80fed8:	18bfc516 	blt	r3,r2,80fdf0 <__alt_mem_epcs_flash_controller_0+0xff806df0>
  80fedc:	00000106 	br	80fee4 <select_ncolors+0x230>
  80fee0:	0001883a 	nop
  80fee4:	e0bff917 	ldw	r2,-28(fp)
  80fee8:	103fbe1e 	bne	r2,zero,80fde4 <__alt_mem_epcs_flash_controller_0+0xff806de4>
  80feec:	e0bff617 	ldw	r2,-40(fp)
  80fef0:	e037883a 	mov	sp,fp
  80fef4:	dfc00117 	ldw	ra,4(sp)
  80fef8:	df000017 	ldw	fp,0(sp)
  80fefc:	dec00204 	addi	sp,sp,8
  80ff00:	f800283a 	ret

0080ff04 <output_value>:
  80ff04:	defffa04 	addi	sp,sp,-24
  80ff08:	dfc00515 	stw	ra,20(sp)
  80ff0c:	df000415 	stw	fp,16(sp)
  80ff10:	df000404 	addi	fp,sp,16
  80ff14:	e13ffc15 	stw	r4,-16(fp)
  80ff18:	e17ffd15 	stw	r5,-12(fp)
  80ff1c:	e1bffe15 	stw	r6,-8(fp)
  80ff20:	e1ffff15 	stw	r7,-4(fp)
  80ff24:	01403fc4 	movi	r5,255
  80ff28:	e13ffe17 	ldw	r4,-8(fp)
  80ff2c:	08305040 	call	830504 <__mulsi3>
  80ff30:	1009883a 	mov	r4,r2
  80ff34:	e0bfff17 	ldw	r2,-4(fp)
  80ff38:	1006d7fa 	srli	r3,r2,31
  80ff3c:	1885883a 	add	r2,r3,r2
  80ff40:	1005d07a 	srai	r2,r2,1
  80ff44:	2085883a 	add	r2,r4,r2
  80ff48:	e17fff17 	ldw	r5,-4(fp)
  80ff4c:	1009883a 	mov	r4,r2
  80ff50:	08303500 	call	830350 <__divsi3>
  80ff54:	e037883a 	mov	sp,fp
  80ff58:	dfc00117 	ldw	ra,4(sp)
  80ff5c:	df000017 	ldw	fp,0(sp)
  80ff60:	dec00204 	addi	sp,sp,8
  80ff64:	f800283a 	ret

0080ff68 <largest_input_value>:
  80ff68:	defffa04 	addi	sp,sp,-24
  80ff6c:	dfc00515 	stw	ra,20(sp)
  80ff70:	df000415 	stw	fp,16(sp)
  80ff74:	df000404 	addi	fp,sp,16
  80ff78:	e13ffc15 	stw	r4,-16(fp)
  80ff7c:	e17ffd15 	stw	r5,-12(fp)
  80ff80:	e1bffe15 	stw	r6,-8(fp)
  80ff84:	e1ffff15 	stw	r7,-4(fp)
  80ff88:	01407f84 	movi	r5,510
  80ff8c:	e13ffe17 	ldw	r4,-8(fp)
  80ff90:	08305040 	call	830504 <__mulsi3>
  80ff94:	10c03fc4 	addi	r3,r2,255
  80ff98:	e0bfff17 	ldw	r2,-4(fp)
  80ff9c:	1887883a 	add	r3,r3,r2
  80ffa0:	e0bfff17 	ldw	r2,-4(fp)
  80ffa4:	1085883a 	add	r2,r2,r2
  80ffa8:	100b883a 	mov	r5,r2
  80ffac:	1809883a 	mov	r4,r3
  80ffb0:	08303500 	call	830350 <__divsi3>
  80ffb4:	e037883a 	mov	sp,fp
  80ffb8:	dfc00117 	ldw	ra,4(sp)
  80ffbc:	df000017 	ldw	fp,0(sp)
  80ffc0:	dec00204 	addi	sp,sp,8
  80ffc4:	f800283a 	ret

0080ffc8 <create_colormap>:
  80ffc8:	defff104 	addi	sp,sp,-60
  80ffcc:	dfc00e15 	stw	ra,56(sp)
  80ffd0:	df000d15 	stw	fp,52(sp)
  80ffd4:	df000d04 	addi	fp,sp,52
  80ffd8:	e13fff15 	stw	r4,-4(fp)
  80ffdc:	e0bfff17 	ldw	r2,-4(fp)
  80ffe0:	10807917 	ldw	r2,484(r2)
  80ffe4:	e0bff815 	stw	r2,-32(fp)
  80ffe8:	e0bff817 	ldw	r2,-32(fp)
  80ffec:	10800804 	addi	r2,r2,32
  80fff0:	100b883a 	mov	r5,r2
  80fff4:	e13fff17 	ldw	r4,-4(fp)
  80fff8:	080fcb40 	call	80fcb4 <select_ncolors>
  80fffc:	e0bff915 	stw	r2,-28(fp)
  810000:	e0bfff17 	ldw	r2,-4(fp)
  810004:	10801e17 	ldw	r2,120(r2)
  810008:	108000d8 	cmpnei	r2,r2,3
  81000c:	1000211e 	bne	r2,zero,810094 <create_colormap+0xcc>
  810010:	e0bfff17 	ldw	r2,-4(fp)
  810014:	10800017 	ldw	r2,0(r2)
  810018:	10800604 	addi	r2,r2,24
  81001c:	e0bffa15 	stw	r2,-24(fp)
  810020:	e0bffa17 	ldw	r2,-24(fp)
  810024:	e0fff917 	ldw	r3,-28(fp)
  810028:	10c00015 	stw	r3,0(r2)
  81002c:	e0bffa17 	ldw	r2,-24(fp)
  810030:	10800104 	addi	r2,r2,4
  810034:	e0fff817 	ldw	r3,-32(fp)
  810038:	18c00817 	ldw	r3,32(r3)
  81003c:	10c00015 	stw	r3,0(r2)
  810040:	e0bffa17 	ldw	r2,-24(fp)
  810044:	10800204 	addi	r2,r2,8
  810048:	e0fff817 	ldw	r3,-32(fp)
  81004c:	18c00917 	ldw	r3,36(r3)
  810050:	10c00015 	stw	r3,0(r2)
  810054:	e0bffa17 	ldw	r2,-24(fp)
  810058:	10800304 	addi	r2,r2,12
  81005c:	e0fff817 	ldw	r3,-32(fp)
  810060:	18c00a17 	ldw	r3,40(r3)
  810064:	10c00015 	stw	r3,0(r2)
  810068:	e0bfff17 	ldw	r2,-4(fp)
  81006c:	10800017 	ldw	r2,0(r2)
  810070:	00c01804 	movi	r3,96
  810074:	10c00515 	stw	r3,20(r2)
  810078:	e0bfff17 	ldw	r2,-4(fp)
  81007c:	10800017 	ldw	r2,0(r2)
  810080:	10800117 	ldw	r2,4(r2)
  810084:	01400044 	movi	r5,1
  810088:	e13fff17 	ldw	r4,-4(fp)
  81008c:	103ee83a 	callr	r2
  810090:	00000e06 	br	8100cc <create_colormap+0x104>
  810094:	e0bfff17 	ldw	r2,-4(fp)
  810098:	10800017 	ldw	r2,0(r2)
  81009c:	00c01844 	movi	r3,97
  8100a0:	10c00515 	stw	r3,20(r2)
  8100a4:	e0bfff17 	ldw	r2,-4(fp)
  8100a8:	10800017 	ldw	r2,0(r2)
  8100ac:	e0fff917 	ldw	r3,-28(fp)
  8100b0:	10c00615 	stw	r3,24(r2)
  8100b4:	e0bfff17 	ldw	r2,-4(fp)
  8100b8:	10800017 	ldw	r2,0(r2)
  8100bc:	10800117 	ldw	r2,4(r2)
  8100c0:	01400044 	movi	r5,1
  8100c4:	e13fff17 	ldw	r4,-4(fp)
  8100c8:	103ee83a 	callr	r2
  8100cc:	e0bfff17 	ldw	r2,-4(fp)
  8100d0:	10800117 	ldw	r2,4(r2)
  8100d4:	10800217 	ldw	r2,8(r2)
  8100d8:	e13ff917 	ldw	r4,-28(fp)
  8100dc:	e0ffff17 	ldw	r3,-4(fp)
  8100e0:	18c01e17 	ldw	r3,120(r3)
  8100e4:	180f883a 	mov	r7,r3
  8100e8:	200d883a 	mov	r6,r4
  8100ec:	01400044 	movi	r5,1
  8100f0:	e13fff17 	ldw	r4,-4(fp)
  8100f4:	103ee83a 	callr	r2
  8100f8:	e0bffb15 	stw	r2,-20(fp)
  8100fc:	e0bff917 	ldw	r2,-28(fp)
  810100:	e0bff615 	stw	r2,-40(fp)
  810104:	e03ff315 	stw	zero,-52(fp)
  810108:	00004206 	br	810214 <create_colormap+0x24c>
  81010c:	e0fff817 	ldw	r3,-32(fp)
  810110:	e0bff317 	ldw	r2,-52(fp)
  810114:	10800204 	addi	r2,r2,8
  810118:	1085883a 	add	r2,r2,r2
  81011c:	1085883a 	add	r2,r2,r2
  810120:	1885883a 	add	r2,r3,r2
  810124:	10800017 	ldw	r2,0(r2)
  810128:	e0bffc15 	stw	r2,-16(fp)
  81012c:	e17ffc17 	ldw	r5,-16(fp)
  810130:	e13ff617 	ldw	r4,-40(fp)
  810134:	08303500 	call	830350 <__divsi3>
  810138:	e0bffd15 	stw	r2,-12(fp)
  81013c:	e03ff415 	stw	zero,-48(fp)
  810140:	00002c06 	br	8101f4 <create_colormap+0x22c>
  810144:	e0bffc17 	ldw	r2,-16(fp)
  810148:	10bfffc4 	addi	r2,r2,-1
  81014c:	100f883a 	mov	r7,r2
  810150:	e1bff417 	ldw	r6,-48(fp)
  810154:	e17ff317 	ldw	r5,-52(fp)
  810158:	e13fff17 	ldw	r4,-4(fp)
  81015c:	080ff040 	call	80ff04 <output_value>
  810160:	e0bffe15 	stw	r2,-8(fp)
  810164:	e17ffd17 	ldw	r5,-12(fp)
  810168:	e13ff417 	ldw	r4,-48(fp)
  81016c:	08305040 	call	830504 <__mulsi3>
  810170:	e0bff715 	stw	r2,-36(fp)
  810174:	00001906 	br	8101dc <create_colormap+0x214>
  810178:	e03ff515 	stw	zero,-44(fp)
  81017c:	00001006 	br	8101c0 <create_colormap+0x1f8>
  810180:	e0bff317 	ldw	r2,-52(fp)
  810184:	1085883a 	add	r2,r2,r2
  810188:	1085883a 	add	r2,r2,r2
  81018c:	1007883a 	mov	r3,r2
  810190:	e0bffb17 	ldw	r2,-20(fp)
  810194:	10c5883a 	add	r2,r2,r3
  810198:	10800017 	ldw	r2,0(r2)
  81019c:	e13ff717 	ldw	r4,-36(fp)
  8101a0:	e0fff517 	ldw	r3,-44(fp)
  8101a4:	20c7883a 	add	r3,r4,r3
  8101a8:	10c5883a 	add	r2,r2,r3
  8101ac:	e0fffe17 	ldw	r3,-8(fp)
  8101b0:	10c00005 	stb	r3,0(r2)
  8101b4:	e0bff517 	ldw	r2,-44(fp)
  8101b8:	10800044 	addi	r2,r2,1
  8101bc:	e0bff515 	stw	r2,-44(fp)
  8101c0:	e0fff517 	ldw	r3,-44(fp)
  8101c4:	e0bffd17 	ldw	r2,-12(fp)
  8101c8:	18bfed16 	blt	r3,r2,810180 <__alt_mem_epcs_flash_controller_0+0xff807180>
  8101cc:	e0fff717 	ldw	r3,-36(fp)
  8101d0:	e0bff617 	ldw	r2,-40(fp)
  8101d4:	1885883a 	add	r2,r3,r2
  8101d8:	e0bff715 	stw	r2,-36(fp)
  8101dc:	e0fff717 	ldw	r3,-36(fp)
  8101e0:	e0bff917 	ldw	r2,-28(fp)
  8101e4:	18bfe416 	blt	r3,r2,810178 <__alt_mem_epcs_flash_controller_0+0xff807178>
  8101e8:	e0bff417 	ldw	r2,-48(fp)
  8101ec:	10800044 	addi	r2,r2,1
  8101f0:	e0bff415 	stw	r2,-48(fp)
  8101f4:	e0fff417 	ldw	r3,-48(fp)
  8101f8:	e0bffc17 	ldw	r2,-16(fp)
  8101fc:	18bfd116 	blt	r3,r2,810144 <__alt_mem_epcs_flash_controller_0+0xff807144>
  810200:	e0bffd17 	ldw	r2,-12(fp)
  810204:	e0bff615 	stw	r2,-40(fp)
  810208:	e0bff317 	ldw	r2,-52(fp)
  81020c:	10800044 	addi	r2,r2,1
  810210:	e0bff315 	stw	r2,-52(fp)
  810214:	e0bfff17 	ldw	r2,-4(fp)
  810218:	10801e17 	ldw	r2,120(r2)
  81021c:	e0fff317 	ldw	r3,-52(fp)
  810220:	18bfba16 	blt	r3,r2,81010c <__alt_mem_epcs_flash_controller_0+0xff80710c>
  810224:	e0bff817 	ldw	r2,-32(fp)
  810228:	e0fffb17 	ldw	r3,-20(fp)
  81022c:	10c00415 	stw	r3,16(r2)
  810230:	e0bff817 	ldw	r2,-32(fp)
  810234:	e0fff917 	ldw	r3,-28(fp)
  810238:	10c00515 	stw	r3,20(r2)
  81023c:	0001883a 	nop
  810240:	e037883a 	mov	sp,fp
  810244:	dfc00117 	ldw	ra,4(sp)
  810248:	df000017 	ldw	fp,0(sp)
  81024c:	dec00204 	addi	sp,sp,8
  810250:	f800283a 	ret

00810254 <create_colorindex>:
  810254:	defff304 	addi	sp,sp,-52
  810258:	dfc00c15 	stw	ra,48(sp)
  81025c:	df000b15 	stw	fp,44(sp)
  810260:	dc000a15 	stw	r16,40(sp)
  810264:	df000b04 	addi	fp,sp,44
  810268:	e13ffe15 	stw	r4,-8(fp)
  81026c:	e0bffe17 	ldw	r2,-8(fp)
  810270:	10807917 	ldw	r2,484(r2)
  810274:	e0bffb15 	stw	r2,-20(fp)
  810278:	e0bffe17 	ldw	r2,-8(fp)
  81027c:	10801617 	ldw	r2,88(r2)
  810280:	10800058 	cmpnei	r2,r2,1
  810284:	1000061e 	bne	r2,zero,8102a0 <create_colorindex+0x4c>
  810288:	00807f84 	movi	r2,510
  81028c:	e0bffa15 	stw	r2,-24(fp)
  810290:	e0bffb17 	ldw	r2,-20(fp)
  810294:	00c00044 	movi	r3,1
  810298:	10c00715 	stw	r3,28(r2)
  81029c:	00000306 	br	8102ac <create_colorindex+0x58>
  8102a0:	e03ffa15 	stw	zero,-24(fp)
  8102a4:	e0bffb17 	ldw	r2,-20(fp)
  8102a8:	10000715 	stw	zero,28(r2)
  8102ac:	e0bffe17 	ldw	r2,-8(fp)
  8102b0:	10800117 	ldw	r2,4(r2)
  8102b4:	10800217 	ldw	r2,8(r2)
  8102b8:	e0fffa17 	ldw	r3,-24(fp)
  8102bc:	18c04004 	addi	r3,r3,256
  8102c0:	1809883a 	mov	r4,r3
  8102c4:	e0fffe17 	ldw	r3,-8(fp)
  8102c8:	18c01e17 	ldw	r3,120(r3)
  8102cc:	180f883a 	mov	r7,r3
  8102d0:	200d883a 	mov	r6,r4
  8102d4:	01400044 	movi	r5,1
  8102d8:	e13ffe17 	ldw	r4,-8(fp)
  8102dc:	103ee83a 	callr	r2
  8102e0:	1007883a 	mov	r3,r2
  8102e4:	e0bffb17 	ldw	r2,-20(fp)
  8102e8:	10c00615 	stw	r3,24(r2)
  8102ec:	e0bffb17 	ldw	r2,-20(fp)
  8102f0:	10800517 	ldw	r2,20(r2)
  8102f4:	e0bff815 	stw	r2,-32(fp)
  8102f8:	e03ff515 	stw	zero,-44(fp)
  8102fc:	00006c06 	br	8104b0 <create_colorindex+0x25c>
  810300:	e0fffb17 	ldw	r3,-20(fp)
  810304:	e0bff517 	ldw	r2,-44(fp)
  810308:	10800204 	addi	r2,r2,8
  81030c:	1085883a 	add	r2,r2,r2
  810310:	1085883a 	add	r2,r2,r2
  810314:	1885883a 	add	r2,r3,r2
  810318:	10800017 	ldw	r2,0(r2)
  81031c:	e0bffc15 	stw	r2,-16(fp)
  810320:	e17ffc17 	ldw	r5,-16(fp)
  810324:	e13ff817 	ldw	r4,-32(fp)
  810328:	08303500 	call	830350 <__divsi3>
  81032c:	e0bff815 	stw	r2,-32(fp)
  810330:	e0bffa17 	ldw	r2,-24(fp)
  810334:	10000f26 	beq	r2,zero,810374 <create_colorindex+0x120>
  810338:	e0bffb17 	ldw	r2,-20(fp)
  81033c:	10c00617 	ldw	r3,24(r2)
  810340:	e0bff517 	ldw	r2,-44(fp)
  810344:	1085883a 	add	r2,r2,r2
  810348:	1085883a 	add	r2,r2,r2
  81034c:	1887883a 	add	r3,r3,r2
  810350:	e0bffb17 	ldw	r2,-20(fp)
  810354:	11000617 	ldw	r4,24(r2)
  810358:	e0bff517 	ldw	r2,-44(fp)
  81035c:	1085883a 	add	r2,r2,r2
  810360:	1085883a 	add	r2,r2,r2
  810364:	2085883a 	add	r2,r4,r2
  810368:	10800017 	ldw	r2,0(r2)
  81036c:	10803fc4 	addi	r2,r2,255
  810370:	18800015 	stw	r2,0(r3)
  810374:	e0bffb17 	ldw	r2,-20(fp)
  810378:	10c00617 	ldw	r3,24(r2)
  81037c:	e0bff517 	ldw	r2,-44(fp)
  810380:	1085883a 	add	r2,r2,r2
  810384:	1085883a 	add	r2,r2,r2
  810388:	1885883a 	add	r2,r3,r2
  81038c:	10800017 	ldw	r2,0(r2)
  810390:	e0bffd15 	stw	r2,-12(fp)
  810394:	e03ff915 	stw	zero,-28(fp)
  810398:	e0bffc17 	ldw	r2,-16(fp)
  81039c:	10bfffc4 	addi	r2,r2,-1
  8103a0:	100f883a 	mov	r7,r2
  8103a4:	000d883a 	mov	r6,zero
  8103a8:	e17ff517 	ldw	r5,-44(fp)
  8103ac:	e13ffe17 	ldw	r4,-8(fp)
  8103b0:	080ff680 	call	80ff68 <largest_input_value>
  8103b4:	e0bff715 	stw	r2,-36(fp)
  8103b8:	e03ff615 	stw	zero,-40(fp)
  8103bc:	00001b06 	br	81042c <create_colorindex+0x1d8>
  8103c0:	e0bff917 	ldw	r2,-28(fp)
  8103c4:	10800044 	addi	r2,r2,1
  8103c8:	e0bff915 	stw	r2,-28(fp)
  8103cc:	e0bffc17 	ldw	r2,-16(fp)
  8103d0:	10bfffc4 	addi	r2,r2,-1
  8103d4:	100f883a 	mov	r7,r2
  8103d8:	e1bff917 	ldw	r6,-28(fp)
  8103dc:	e17ff517 	ldw	r5,-44(fp)
  8103e0:	e13ffe17 	ldw	r4,-8(fp)
  8103e4:	080ff680 	call	80ff68 <largest_input_value>
  8103e8:	e0bff715 	stw	r2,-36(fp)
  8103ec:	e0bff617 	ldw	r2,-40(fp)
  8103f0:	e0fff717 	ldw	r3,-36(fp)
  8103f4:	18bff216 	blt	r3,r2,8103c0 <__alt_mem_epcs_flash_controller_0+0xff8073c0>
  8103f8:	e0bff617 	ldw	r2,-40(fp)
  8103fc:	e0fffd17 	ldw	r3,-12(fp)
  810400:	18a1883a 	add	r16,r3,r2
  810404:	e0bff917 	ldw	r2,-28(fp)
  810408:	1007883a 	mov	r3,r2
  81040c:	e0bff817 	ldw	r2,-32(fp)
  810410:	100b883a 	mov	r5,r2
  810414:	1809883a 	mov	r4,r3
  810418:	08305040 	call	830504 <__mulsi3>
  81041c:	80800005 	stb	r2,0(r16)
  810420:	e0bff617 	ldw	r2,-40(fp)
  810424:	10800044 	addi	r2,r2,1
  810428:	e0bff615 	stw	r2,-40(fp)
  81042c:	e0bff617 	ldw	r2,-40(fp)
  810430:	10804010 	cmplti	r2,r2,256
  810434:	103fed1e 	bne	r2,zero,8103ec <__alt_mem_epcs_flash_controller_0+0xff8073ec>
  810438:	e0bffa17 	ldw	r2,-24(fp)
  81043c:	10001926 	beq	r2,zero,8104a4 <create_colorindex+0x250>
  810440:	00800044 	movi	r2,1
  810444:	e0bff615 	stw	r2,-40(fp)
  810448:	00001306 	br	810498 <create_colorindex+0x244>
  81044c:	e0bff617 	ldw	r2,-40(fp)
  810450:	0085c83a 	sub	r2,zero,r2
  810454:	1007883a 	mov	r3,r2
  810458:	e0bffd17 	ldw	r2,-12(fp)
  81045c:	10c5883a 	add	r2,r2,r3
  810460:	e0fffd17 	ldw	r3,-12(fp)
  810464:	18c00003 	ldbu	r3,0(r3)
  810468:	10c00005 	stb	r3,0(r2)
  81046c:	e0bff617 	ldw	r2,-40(fp)
  810470:	10803fc4 	addi	r2,r2,255
  810474:	1007883a 	mov	r3,r2
  810478:	e0bffd17 	ldw	r2,-12(fp)
  81047c:	10c5883a 	add	r2,r2,r3
  810480:	e0fffd17 	ldw	r3,-12(fp)
  810484:	18c03fc3 	ldbu	r3,255(r3)
  810488:	10c00005 	stb	r3,0(r2)
  81048c:	e0bff617 	ldw	r2,-40(fp)
  810490:	10800044 	addi	r2,r2,1
  810494:	e0bff615 	stw	r2,-40(fp)
  810498:	e0bff617 	ldw	r2,-40(fp)
  81049c:	10804010 	cmplti	r2,r2,256
  8104a0:	103fea1e 	bne	r2,zero,81044c <__alt_mem_epcs_flash_controller_0+0xff80744c>
  8104a4:	e0bff517 	ldw	r2,-44(fp)
  8104a8:	10800044 	addi	r2,r2,1
  8104ac:	e0bff515 	stw	r2,-44(fp)
  8104b0:	e0bffe17 	ldw	r2,-8(fp)
  8104b4:	10801e17 	ldw	r2,120(r2)
  8104b8:	e0fff517 	ldw	r3,-44(fp)
  8104bc:	18bf9016 	blt	r3,r2,810300 <__alt_mem_epcs_flash_controller_0+0xff807300>
  8104c0:	0001883a 	nop
  8104c4:	e6ffff04 	addi	sp,fp,-4
  8104c8:	dfc00217 	ldw	ra,8(sp)
  8104cc:	df000117 	ldw	fp,4(sp)
  8104d0:	dc000017 	ldw	r16,0(sp)
  8104d4:	dec00304 	addi	sp,sp,12
  8104d8:	f800283a 	ret

008104dc <make_odither_array>:
  8104dc:	defff604 	addi	sp,sp,-40
  8104e0:	dfc00915 	stw	ra,36(sp)
  8104e4:	df000815 	stw	fp,32(sp)
  8104e8:	dc000715 	stw	r16,28(sp)
  8104ec:	df000804 	addi	fp,sp,32
  8104f0:	e13ffd15 	stw	r4,-12(fp)
  8104f4:	e17ffe15 	stw	r5,-8(fp)
  8104f8:	e0bffd17 	ldw	r2,-12(fp)
  8104fc:	10800117 	ldw	r2,4(r2)
  810500:	10800017 	ldw	r2,0(r2)
  810504:	01810004 	movi	r6,1024
  810508:	01400044 	movi	r5,1
  81050c:	e13ffd17 	ldw	r4,-12(fp)
  810510:	103ee83a 	callr	r2
  810514:	e0bffa15 	stw	r2,-24(fp)
  810518:	e0bffe17 	ldw	r2,-8(fp)
  81051c:	10bfffc4 	addi	r2,r2,-1
  810520:	1004927a 	slli	r2,r2,9
  810524:	e0bffb15 	stw	r2,-20(fp)
  810528:	e03ff815 	stw	zero,-32(fp)
  81052c:	00003106 	br	8105f4 <make_odither_array+0x118>
  810530:	e03ff915 	stw	zero,-28(fp)
  810534:	00002906 	br	8105dc <make_odither_array+0x100>
  810538:	008021b4 	movhi	r2,134
  81053c:	10a0f404 	addi	r2,r2,-31792
  810540:	e0fff817 	ldw	r3,-32(fp)
  810544:	1806913a 	slli	r3,r3,4
  810548:	10c7883a 	add	r3,r2,r3
  81054c:	e0bff917 	ldw	r2,-28(fp)
  810550:	1885883a 	add	r2,r3,r2
  810554:	10800003 	ldbu	r2,0(r2)
  810558:	10803fcc 	andi	r2,r2,255
  81055c:	017f8084 	movi	r5,-510
  810560:	1009883a 	mov	r4,r2
  810564:	08305040 	call	830504 <__mulsi3>
  810568:	1007883a 	mov	r3,r2
  81056c:	00bf8054 	movui	r2,65025
  810570:	1885883a 	add	r2,r3,r2
  810574:	e0bffc15 	stw	r2,-16(fp)
  810578:	e0bff817 	ldw	r2,-32(fp)
  81057c:	100491ba 	slli	r2,r2,6
  810580:	e0fffa17 	ldw	r3,-24(fp)
  810584:	18a1883a 	add	r16,r3,r2
  810588:	e0bffc17 	ldw	r2,-16(fp)
  81058c:	1000070e 	bge	r2,zero,8105ac <make_odither_array+0xd0>
  810590:	e0bffc17 	ldw	r2,-16(fp)
  810594:	0085c83a 	sub	r2,zero,r2
  810598:	e17ffb17 	ldw	r5,-20(fp)
  81059c:	1009883a 	mov	r4,r2
  8105a0:	08303500 	call	830350 <__divsi3>
  8105a4:	0087c83a 	sub	r3,zero,r2
  8105a8:	00000406 	br	8105bc <make_odither_array+0xe0>
  8105ac:	e17ffb17 	ldw	r5,-20(fp)
  8105b0:	e13ffc17 	ldw	r4,-16(fp)
  8105b4:	08303500 	call	830350 <__divsi3>
  8105b8:	1007883a 	mov	r3,r2
  8105bc:	e0bff917 	ldw	r2,-28(fp)
  8105c0:	1085883a 	add	r2,r2,r2
  8105c4:	1085883a 	add	r2,r2,r2
  8105c8:	8085883a 	add	r2,r16,r2
  8105cc:	10c00015 	stw	r3,0(r2)
  8105d0:	e0bff917 	ldw	r2,-28(fp)
  8105d4:	10800044 	addi	r2,r2,1
  8105d8:	e0bff915 	stw	r2,-28(fp)
  8105dc:	e0bff917 	ldw	r2,-28(fp)
  8105e0:	10800410 	cmplti	r2,r2,16
  8105e4:	103fd41e 	bne	r2,zero,810538 <__alt_mem_epcs_flash_controller_0+0xff807538>
  8105e8:	e0bff817 	ldw	r2,-32(fp)
  8105ec:	10800044 	addi	r2,r2,1
  8105f0:	e0bff815 	stw	r2,-32(fp)
  8105f4:	e0bff817 	ldw	r2,-32(fp)
  8105f8:	10800410 	cmplti	r2,r2,16
  8105fc:	103fcc1e 	bne	r2,zero,810530 <__alt_mem_epcs_flash_controller_0+0xff807530>
  810600:	e0bffa17 	ldw	r2,-24(fp)
  810604:	e6ffff04 	addi	sp,fp,-4
  810608:	dfc00217 	ldw	ra,8(sp)
  81060c:	df000117 	ldw	fp,4(sp)
  810610:	dc000017 	ldw	r16,0(sp)
  810614:	dec00304 	addi	sp,sp,12
  810618:	f800283a 	ret

0081061c <create_odither_tables>:
  81061c:	defff804 	addi	sp,sp,-32
  810620:	dfc00715 	stw	ra,28(sp)
  810624:	df000615 	stw	fp,24(sp)
  810628:	df000604 	addi	fp,sp,24
  81062c:	e13fff15 	stw	r4,-4(fp)
  810630:	e0bfff17 	ldw	r2,-4(fp)
  810634:	10807917 	ldw	r2,484(r2)
  810638:	e0bffd15 	stw	r2,-12(fp)
  81063c:	e03ffb15 	stw	zero,-20(fp)
  810640:	00003406 	br	810714 <create_odither_tables+0xf8>
  810644:	e0fffd17 	ldw	r3,-12(fp)
  810648:	e0bffb17 	ldw	r2,-20(fp)
  81064c:	10800204 	addi	r2,r2,8
  810650:	1085883a 	add	r2,r2,r2
  810654:	1085883a 	add	r2,r2,r2
  810658:	1885883a 	add	r2,r3,r2
  81065c:	10800017 	ldw	r2,0(r2)
  810660:	e0bffe15 	stw	r2,-8(fp)
  810664:	e03ffa15 	stw	zero,-24(fp)
  810668:	e03ffc15 	stw	zero,-16(fp)
  81066c:	00001506 	br	8106c4 <create_odither_tables+0xa8>
  810670:	e0fffd17 	ldw	r3,-12(fp)
  810674:	e0bffc17 	ldw	r2,-16(fp)
  810678:	10800204 	addi	r2,r2,8
  81067c:	1085883a 	add	r2,r2,r2
  810680:	1085883a 	add	r2,r2,r2
  810684:	1885883a 	add	r2,r3,r2
  810688:	10c00017 	ldw	r3,0(r2)
  81068c:	e0bffe17 	ldw	r2,-8(fp)
  810690:	1880091e 	bne	r3,r2,8106b8 <create_odither_tables+0x9c>
  810694:	e0fffd17 	ldw	r3,-12(fp)
  810698:	e0bffc17 	ldw	r2,-16(fp)
  81069c:	10800344 	addi	r2,r2,13
  8106a0:	1085883a 	add	r2,r2,r2
  8106a4:	1085883a 	add	r2,r2,r2
  8106a8:	1885883a 	add	r2,r3,r2
  8106ac:	10800017 	ldw	r2,0(r2)
  8106b0:	e0bffa15 	stw	r2,-24(fp)
  8106b4:	00000606 	br	8106d0 <create_odither_tables+0xb4>
  8106b8:	e0bffc17 	ldw	r2,-16(fp)
  8106bc:	10800044 	addi	r2,r2,1
  8106c0:	e0bffc15 	stw	r2,-16(fp)
  8106c4:	e0fffc17 	ldw	r3,-16(fp)
  8106c8:	e0bffb17 	ldw	r2,-20(fp)
  8106cc:	18bfe816 	blt	r3,r2,810670 <__alt_mem_epcs_flash_controller_0+0xff807670>
  8106d0:	e0bffa17 	ldw	r2,-24(fp)
  8106d4:	1000041e 	bne	r2,zero,8106e8 <create_odither_tables+0xcc>
  8106d8:	e17ffe17 	ldw	r5,-8(fp)
  8106dc:	e13fff17 	ldw	r4,-4(fp)
  8106e0:	08104dc0 	call	8104dc <make_odither_array>
  8106e4:	e0bffa15 	stw	r2,-24(fp)
  8106e8:	e0fffd17 	ldw	r3,-12(fp)
  8106ec:	e0bffb17 	ldw	r2,-20(fp)
  8106f0:	10800344 	addi	r2,r2,13
  8106f4:	1085883a 	add	r2,r2,r2
  8106f8:	1085883a 	add	r2,r2,r2
  8106fc:	1885883a 	add	r2,r3,r2
  810700:	e0fffa17 	ldw	r3,-24(fp)
  810704:	10c00015 	stw	r3,0(r2)
  810708:	e0bffb17 	ldw	r2,-20(fp)
  81070c:	10800044 	addi	r2,r2,1
  810710:	e0bffb15 	stw	r2,-20(fp)
  810714:	e0bfff17 	ldw	r2,-4(fp)
  810718:	10801e17 	ldw	r2,120(r2)
  81071c:	e0fffb17 	ldw	r3,-20(fp)
  810720:	18bfc816 	blt	r3,r2,810644 <__alt_mem_epcs_flash_controller_0+0xff807644>
  810724:	0001883a 	nop
  810728:	e037883a 	mov	sp,fp
  81072c:	dfc00117 	ldw	ra,4(sp)
  810730:	df000017 	ldw	fp,0(sp)
  810734:	dec00204 	addi	sp,sp,8
  810738:	f800283a 	ret

0081073c <color_quantize>:
  81073c:	defff104 	addi	sp,sp,-60
  810740:	df000e15 	stw	fp,56(sp)
  810744:	dd000d15 	stw	r20,52(sp)
  810748:	dcc00c15 	stw	r19,48(sp)
  81074c:	dc800b15 	stw	r18,44(sp)
  810750:	dc400a15 	stw	r17,40(sp)
  810754:	dc000915 	stw	r16,36(sp)
  810758:	df000e04 	addi	fp,sp,56
  81075c:	e13ff715 	stw	r4,-36(fp)
  810760:	e17ff815 	stw	r5,-32(fp)
  810764:	e1bff915 	stw	r6,-28(fp)
  810768:	e1fffa15 	stw	r7,-24(fp)
  81076c:	e0bff717 	ldw	r2,-36(fp)
  810770:	10807917 	ldw	r2,484(r2)
  810774:	e0bff415 	stw	r2,-48(fp)
  810778:	e0bff417 	ldw	r2,-48(fp)
  81077c:	10800617 	ldw	r2,24(r2)
  810780:	e0bff515 	stw	r2,-44(fp)
  810784:	e0bff717 	ldw	r2,-36(fp)
  810788:	10801c17 	ldw	r2,112(r2)
  81078c:	e0bff615 	stw	r2,-40(fp)
  810790:	e0bff717 	ldw	r2,-36(fp)
  810794:	15001e17 	ldw	r20,120(r2)
  810798:	e03ff215 	stw	zero,-56(fp)
  81079c:	00003106 	br	810864 <color_quantize+0x128>
  8107a0:	e0bff217 	ldw	r2,-56(fp)
  8107a4:	1085883a 	add	r2,r2,r2
  8107a8:	1085883a 	add	r2,r2,r2
  8107ac:	1007883a 	mov	r3,r2
  8107b0:	e0bff817 	ldw	r2,-32(fp)
  8107b4:	10c5883a 	add	r2,r2,r3
  8107b8:	14800017 	ldw	r18,0(r2)
  8107bc:	e0bff217 	ldw	r2,-56(fp)
  8107c0:	1085883a 	add	r2,r2,r2
  8107c4:	1085883a 	add	r2,r2,r2
  8107c8:	1007883a 	mov	r3,r2
  8107cc:	e0bff917 	ldw	r2,-28(fp)
  8107d0:	10c5883a 	add	r2,r2,r3
  8107d4:	14c00017 	ldw	r19,0(r2)
  8107d8:	e0bff617 	ldw	r2,-40(fp)
  8107dc:	e0bff315 	stw	r2,-52(fp)
  8107e0:	00001b06 	br	810850 <color_quantize+0x114>
  8107e4:	0023883a 	mov	r17,zero
  8107e8:	0021883a 	mov	r16,zero
  8107ec:	00001006 	br	810830 <color_quantize+0xf4>
  8107f0:	8005883a 	mov	r2,r16
  8107f4:	1085883a 	add	r2,r2,r2
  8107f8:	1085883a 	add	r2,r2,r2
  8107fc:	1007883a 	mov	r3,r2
  810800:	e0bff517 	ldw	r2,-44(fp)
  810804:	10c5883a 	add	r2,r2,r3
  810808:	10c00017 	ldw	r3,0(r2)
  81080c:	9005883a 	mov	r2,r18
  810810:	14800044 	addi	r18,r2,1
  810814:	10800003 	ldbu	r2,0(r2)
  810818:	10803fcc 	andi	r2,r2,255
  81081c:	1885883a 	add	r2,r3,r2
  810820:	10800003 	ldbu	r2,0(r2)
  810824:	10803fcc 	andi	r2,r2,255
  810828:	88a3883a 	add	r17,r17,r2
  81082c:	84000044 	addi	r16,r16,1
  810830:	853fef16 	blt	r16,r20,8107f0 <__alt_mem_epcs_flash_controller_0+0xff8077f0>
  810834:	9805883a 	mov	r2,r19
  810838:	14c00044 	addi	r19,r2,1
  81083c:	8807883a 	mov	r3,r17
  810840:	10c00005 	stb	r3,0(r2)
  810844:	e0bff317 	ldw	r2,-52(fp)
  810848:	10bfffc4 	addi	r2,r2,-1
  81084c:	e0bff315 	stw	r2,-52(fp)
  810850:	e0bff317 	ldw	r2,-52(fp)
  810854:	103fe31e 	bne	r2,zero,8107e4 <__alt_mem_epcs_flash_controller_0+0xff8077e4>
  810858:	e0bff217 	ldw	r2,-56(fp)
  81085c:	10800044 	addi	r2,r2,1
  810860:	e0bff215 	stw	r2,-56(fp)
  810864:	e0fff217 	ldw	r3,-56(fp)
  810868:	e0bffa17 	ldw	r2,-24(fp)
  81086c:	18bfcc16 	blt	r3,r2,8107a0 <__alt_mem_epcs_flash_controller_0+0xff8077a0>
  810870:	0001883a 	nop
  810874:	e6fffb04 	addi	sp,fp,-20
  810878:	df000517 	ldw	fp,20(sp)
  81087c:	dd000417 	ldw	r20,16(sp)
  810880:	dcc00317 	ldw	r19,12(sp)
  810884:	dc800217 	ldw	r18,8(sp)
  810888:	dc400117 	ldw	r17,4(sp)
  81088c:	dc000017 	ldw	r16,0(sp)
  810890:	dec00604 	addi	sp,sp,24
  810894:	f800283a 	ret

00810898 <color_quantize3>:
  810898:	defff104 	addi	sp,sp,-60
  81089c:	df000e15 	stw	fp,56(sp)
  8108a0:	dc800d15 	stw	r18,52(sp)
  8108a4:	dc400c15 	stw	r17,48(sp)
  8108a8:	dc000b15 	stw	r16,44(sp)
  8108ac:	df000e04 	addi	fp,sp,56
  8108b0:	e13ff915 	stw	r4,-28(fp)
  8108b4:	e17ffa15 	stw	r5,-24(fp)
  8108b8:	e1bffb15 	stw	r6,-20(fp)
  8108bc:	e1fffc15 	stw	r7,-16(fp)
  8108c0:	e0bff917 	ldw	r2,-28(fp)
  8108c4:	10807917 	ldw	r2,484(r2)
  8108c8:	e0bff415 	stw	r2,-48(fp)
  8108cc:	e0bff417 	ldw	r2,-48(fp)
  8108d0:	10800617 	ldw	r2,24(r2)
  8108d4:	10800017 	ldw	r2,0(r2)
  8108d8:	e0bff515 	stw	r2,-44(fp)
  8108dc:	e0bff417 	ldw	r2,-48(fp)
  8108e0:	10800617 	ldw	r2,24(r2)
  8108e4:	10800117 	ldw	r2,4(r2)
  8108e8:	e0bff615 	stw	r2,-40(fp)
  8108ec:	e0bff417 	ldw	r2,-48(fp)
  8108f0:	10800617 	ldw	r2,24(r2)
  8108f4:	10800217 	ldw	r2,8(r2)
  8108f8:	e0bff715 	stw	r2,-36(fp)
  8108fc:	e0bff917 	ldw	r2,-28(fp)
  810900:	10801c17 	ldw	r2,112(r2)
  810904:	e0bff815 	stw	r2,-32(fp)
  810908:	e03ff215 	stw	zero,-56(fp)
  81090c:	00003706 	br	8109ec <color_quantize3+0x154>
  810910:	e0bff217 	ldw	r2,-56(fp)
  810914:	1085883a 	add	r2,r2,r2
  810918:	1085883a 	add	r2,r2,r2
  81091c:	1007883a 	mov	r3,r2
  810920:	e0bffa17 	ldw	r2,-24(fp)
  810924:	10c5883a 	add	r2,r2,r3
  810928:	14400017 	ldw	r17,0(r2)
  81092c:	e0bff217 	ldw	r2,-56(fp)
  810930:	1085883a 	add	r2,r2,r2
  810934:	1085883a 	add	r2,r2,r2
  810938:	1007883a 	mov	r3,r2
  81093c:	e0bffb17 	ldw	r2,-20(fp)
  810940:	10c5883a 	add	r2,r2,r3
  810944:	14800017 	ldw	r18,0(r2)
  810948:	e0bff817 	ldw	r2,-32(fp)
  81094c:	e0bff315 	stw	r2,-52(fp)
  810950:	00002106 	br	8109d8 <color_quantize3+0x140>
  810954:	8805883a 	mov	r2,r17
  810958:	14400044 	addi	r17,r2,1
  81095c:	10800003 	ldbu	r2,0(r2)
  810960:	10803fcc 	andi	r2,r2,255
  810964:	e0fff517 	ldw	r3,-44(fp)
  810968:	1885883a 	add	r2,r3,r2
  81096c:	10800003 	ldbu	r2,0(r2)
  810970:	14003fcc 	andi	r16,r2,255
  810974:	8805883a 	mov	r2,r17
  810978:	14400044 	addi	r17,r2,1
  81097c:	10800003 	ldbu	r2,0(r2)
  810980:	10803fcc 	andi	r2,r2,255
  810984:	e0fff617 	ldw	r3,-40(fp)
  810988:	1885883a 	add	r2,r3,r2
  81098c:	10800003 	ldbu	r2,0(r2)
  810990:	10803fcc 	andi	r2,r2,255
  810994:	80a1883a 	add	r16,r16,r2
  810998:	8805883a 	mov	r2,r17
  81099c:	14400044 	addi	r17,r2,1
  8109a0:	10800003 	ldbu	r2,0(r2)
  8109a4:	10803fcc 	andi	r2,r2,255
  8109a8:	e0fff717 	ldw	r3,-36(fp)
  8109ac:	1885883a 	add	r2,r3,r2
  8109b0:	10800003 	ldbu	r2,0(r2)
  8109b4:	10803fcc 	andi	r2,r2,255
  8109b8:	80a1883a 	add	r16,r16,r2
  8109bc:	9005883a 	mov	r2,r18
  8109c0:	14800044 	addi	r18,r2,1
  8109c4:	8007883a 	mov	r3,r16
  8109c8:	10c00005 	stb	r3,0(r2)
  8109cc:	e0bff317 	ldw	r2,-52(fp)
  8109d0:	10bfffc4 	addi	r2,r2,-1
  8109d4:	e0bff315 	stw	r2,-52(fp)
  8109d8:	e0bff317 	ldw	r2,-52(fp)
  8109dc:	103fdd1e 	bne	r2,zero,810954 <__alt_mem_epcs_flash_controller_0+0xff807954>
  8109e0:	e0bff217 	ldw	r2,-56(fp)
  8109e4:	10800044 	addi	r2,r2,1
  8109e8:	e0bff215 	stw	r2,-56(fp)
  8109ec:	e0fff217 	ldw	r3,-56(fp)
  8109f0:	e0bffc17 	ldw	r2,-16(fp)
  8109f4:	18bfc616 	blt	r3,r2,810910 <__alt_mem_epcs_flash_controller_0+0xff807910>
  8109f8:	0001883a 	nop
  8109fc:	e6fffd04 	addi	sp,fp,-12
  810a00:	df000317 	ldw	fp,12(sp)
  810a04:	dc800217 	ldw	r18,8(sp)
  810a08:	dc400117 	ldw	r17,4(sp)
  810a0c:	dc000017 	ldw	r16,0(sp)
  810a10:	dec00404 	addi	sp,sp,16
  810a14:	f800283a 	ret

00810a18 <quantize_ord_dither>:
  810a18:	deffee04 	addi	sp,sp,-72
  810a1c:	dfc01115 	stw	ra,68(sp)
  810a20:	df001015 	stw	fp,64(sp)
  810a24:	dc400f15 	stw	r17,60(sp)
  810a28:	dc000e15 	stw	r16,56(sp)
  810a2c:	df001004 	addi	fp,sp,64
  810a30:	e13ffa15 	stw	r4,-24(fp)
  810a34:	e17ffb15 	stw	r5,-20(fp)
  810a38:	e1bffc15 	stw	r6,-16(fp)
  810a3c:	e1fffd15 	stw	r7,-12(fp)
  810a40:	e0bffa17 	ldw	r2,-24(fp)
  810a44:	10807917 	ldw	r2,484(r2)
  810a48:	e0bff415 	stw	r2,-48(fp)
  810a4c:	e0bffa17 	ldw	r2,-24(fp)
  810a50:	10801e17 	ldw	r2,120(r2)
  810a54:	e0bff515 	stw	r2,-44(fp)
  810a58:	e0bffa17 	ldw	r2,-24(fp)
  810a5c:	10801c17 	ldw	r2,112(r2)
  810a60:	e0bff615 	stw	r2,-40(fp)
  810a64:	e03ff215 	stw	zero,-56(fp)
  810a68:	00006406 	br	810bfc <quantize_ord_dither+0x1e4>
  810a6c:	e0bff217 	ldw	r2,-56(fp)
  810a70:	1085883a 	add	r2,r2,r2
  810a74:	1085883a 	add	r2,r2,r2
  810a78:	1007883a 	mov	r3,r2
  810a7c:	e0bffc17 	ldw	r2,-16(fp)
  810a80:	10c5883a 	add	r2,r2,r3
  810a84:	10800017 	ldw	r2,0(r2)
  810a88:	e1bff617 	ldw	r6,-40(fp)
  810a8c:	000b883a 	mov	r5,zero
  810a90:	1009883a 	mov	r4,r2
  810a94:	08342980 	call	834298 <memset>
  810a98:	e0bff417 	ldw	r2,-48(fp)
  810a9c:	10800c17 	ldw	r2,48(r2)
  810aa0:	e0bff715 	stw	r2,-36(fp)
  810aa4:	e03ff115 	stw	zero,-60(fp)
  810aa8:	00004706 	br	810bc8 <quantize_ord_dither+0x1b0>
  810aac:	e0bff217 	ldw	r2,-56(fp)
  810ab0:	1085883a 	add	r2,r2,r2
  810ab4:	1085883a 	add	r2,r2,r2
  810ab8:	1007883a 	mov	r3,r2
  810abc:	e0bffb17 	ldw	r2,-20(fp)
  810ac0:	10c5883a 	add	r2,r2,r3
  810ac4:	10c00017 	ldw	r3,0(r2)
  810ac8:	e0bff117 	ldw	r2,-60(fp)
  810acc:	18a3883a 	add	r17,r3,r2
  810ad0:	e0bff217 	ldw	r2,-56(fp)
  810ad4:	1085883a 	add	r2,r2,r2
  810ad8:	1085883a 	add	r2,r2,r2
  810adc:	1007883a 	mov	r3,r2
  810ae0:	e0bffc17 	ldw	r2,-16(fp)
  810ae4:	10c5883a 	add	r2,r2,r3
  810ae8:	14000017 	ldw	r16,0(r2)
  810aec:	e0bff417 	ldw	r2,-48(fp)
  810af0:	10c00617 	ldw	r3,24(r2)
  810af4:	e0bff117 	ldw	r2,-60(fp)
  810af8:	1085883a 	add	r2,r2,r2
  810afc:	1085883a 	add	r2,r2,r2
  810b00:	1885883a 	add	r2,r3,r2
  810b04:	10800017 	ldw	r2,0(r2)
  810b08:	e0bff815 	stw	r2,-32(fp)
  810b0c:	e0fff417 	ldw	r3,-48(fp)
  810b10:	e0bff117 	ldw	r2,-60(fp)
  810b14:	10800344 	addi	r2,r2,13
  810b18:	1085883a 	add	r2,r2,r2
  810b1c:	1085883a 	add	r2,r2,r2
  810b20:	1885883a 	add	r2,r3,r2
  810b24:	10c00017 	ldw	r3,0(r2)
  810b28:	e0bff717 	ldw	r2,-36(fp)
  810b2c:	100491ba 	slli	r2,r2,6
  810b30:	1885883a 	add	r2,r3,r2
  810b34:	e0bff915 	stw	r2,-28(fp)
  810b38:	e03ff015 	stw	zero,-64(fp)
  810b3c:	e0bff617 	ldw	r2,-40(fp)
  810b40:	e0bff315 	stw	r2,-52(fp)
  810b44:	00001b06 	br	810bb4 <quantize_ord_dither+0x19c>
  810b48:	80c00003 	ldbu	r3,0(r16)
  810b4c:	88800003 	ldbu	r2,0(r17)
  810b50:	11003fcc 	andi	r4,r2,255
  810b54:	e0bff017 	ldw	r2,-64(fp)
  810b58:	1085883a 	add	r2,r2,r2
  810b5c:	1085883a 	add	r2,r2,r2
  810b60:	100b883a 	mov	r5,r2
  810b64:	e0bff917 	ldw	r2,-28(fp)
  810b68:	1145883a 	add	r2,r2,r5
  810b6c:	10800017 	ldw	r2,0(r2)
  810b70:	2085883a 	add	r2,r4,r2
  810b74:	1009883a 	mov	r4,r2
  810b78:	e0bff817 	ldw	r2,-32(fp)
  810b7c:	1105883a 	add	r2,r2,r4
  810b80:	10800003 	ldbu	r2,0(r2)
  810b84:	1885883a 	add	r2,r3,r2
  810b88:	80800005 	stb	r2,0(r16)
  810b8c:	e0bff517 	ldw	r2,-44(fp)
  810b90:	88a3883a 	add	r17,r17,r2
  810b94:	84000044 	addi	r16,r16,1
  810b98:	e0bff017 	ldw	r2,-64(fp)
  810b9c:	10800044 	addi	r2,r2,1
  810ba0:	108003cc 	andi	r2,r2,15
  810ba4:	e0bff015 	stw	r2,-64(fp)
  810ba8:	e0bff317 	ldw	r2,-52(fp)
  810bac:	10bfffc4 	addi	r2,r2,-1
  810bb0:	e0bff315 	stw	r2,-52(fp)
  810bb4:	e0bff317 	ldw	r2,-52(fp)
  810bb8:	103fe31e 	bne	r2,zero,810b48 <__alt_mem_epcs_flash_controller_0+0xff807b48>
  810bbc:	e0bff117 	ldw	r2,-60(fp)
  810bc0:	10800044 	addi	r2,r2,1
  810bc4:	e0bff115 	stw	r2,-60(fp)
  810bc8:	e0fff117 	ldw	r3,-60(fp)
  810bcc:	e0bff517 	ldw	r2,-44(fp)
  810bd0:	18bfb616 	blt	r3,r2,810aac <__alt_mem_epcs_flash_controller_0+0xff807aac>
  810bd4:	e0bff717 	ldw	r2,-36(fp)
  810bd8:	10800044 	addi	r2,r2,1
  810bdc:	108003cc 	andi	r2,r2,15
  810be0:	e0bff715 	stw	r2,-36(fp)
  810be4:	e0bff417 	ldw	r2,-48(fp)
  810be8:	e0fff717 	ldw	r3,-36(fp)
  810bec:	10c00c15 	stw	r3,48(r2)
  810bf0:	e0bff217 	ldw	r2,-56(fp)
  810bf4:	10800044 	addi	r2,r2,1
  810bf8:	e0bff215 	stw	r2,-56(fp)
  810bfc:	e0fff217 	ldw	r3,-56(fp)
  810c00:	e0bffd17 	ldw	r2,-12(fp)
  810c04:	18bf9916 	blt	r3,r2,810a6c <__alt_mem_epcs_flash_controller_0+0xff807a6c>
  810c08:	0001883a 	nop
  810c0c:	e6fffe04 	addi	sp,fp,-8
  810c10:	dfc00317 	ldw	ra,12(sp)
  810c14:	df000217 	ldw	fp,8(sp)
  810c18:	dc400117 	ldw	r17,4(sp)
  810c1c:	dc000017 	ldw	r16,0(sp)
  810c20:	dec00404 	addi	sp,sp,16
  810c24:	f800283a 	ret

00810c28 <quantize3_ord_dither>:
  810c28:	deffec04 	addi	sp,sp,-80
  810c2c:	df001315 	stw	fp,76(sp)
  810c30:	dc801215 	stw	r18,72(sp)
  810c34:	dc401115 	stw	r17,68(sp)
  810c38:	dc001015 	stw	r16,64(sp)
  810c3c:	df001304 	addi	fp,sp,76
  810c40:	e13ff915 	stw	r4,-28(fp)
  810c44:	e17ffa15 	stw	r5,-24(fp)
  810c48:	e1bffb15 	stw	r6,-20(fp)
  810c4c:	e1fffc15 	stw	r7,-16(fp)
  810c50:	e0bff917 	ldw	r2,-28(fp)
  810c54:	10807917 	ldw	r2,484(r2)
  810c58:	e0bff015 	stw	r2,-64(fp)
  810c5c:	e0bff017 	ldw	r2,-64(fp)
  810c60:	10800617 	ldw	r2,24(r2)
  810c64:	10800017 	ldw	r2,0(r2)
  810c68:	e0bff115 	stw	r2,-60(fp)
  810c6c:	e0bff017 	ldw	r2,-64(fp)
  810c70:	10800617 	ldw	r2,24(r2)
  810c74:	10800117 	ldw	r2,4(r2)
  810c78:	e0bff215 	stw	r2,-56(fp)
  810c7c:	e0bff017 	ldw	r2,-64(fp)
  810c80:	10800617 	ldw	r2,24(r2)
  810c84:	10800217 	ldw	r2,8(r2)
  810c88:	e0bff315 	stw	r2,-52(fp)
  810c8c:	e0bff917 	ldw	r2,-28(fp)
  810c90:	10801c17 	ldw	r2,112(r2)
  810c94:	e0bff415 	stw	r2,-48(fp)
  810c98:	e03fee15 	stw	zero,-72(fp)
  810c9c:	00007306 	br	810e6c <quantize3_ord_dither+0x244>
  810ca0:	e0bff017 	ldw	r2,-64(fp)
  810ca4:	10800c17 	ldw	r2,48(r2)
  810ca8:	e0bff515 	stw	r2,-44(fp)
  810cac:	e0bfee17 	ldw	r2,-72(fp)
  810cb0:	1085883a 	add	r2,r2,r2
  810cb4:	1085883a 	add	r2,r2,r2
  810cb8:	1007883a 	mov	r3,r2
  810cbc:	e0bffa17 	ldw	r2,-24(fp)
  810cc0:	10c5883a 	add	r2,r2,r3
  810cc4:	14400017 	ldw	r17,0(r2)
  810cc8:	e0bfee17 	ldw	r2,-72(fp)
  810ccc:	1085883a 	add	r2,r2,r2
  810cd0:	1085883a 	add	r2,r2,r2
  810cd4:	1007883a 	mov	r3,r2
  810cd8:	e0bffb17 	ldw	r2,-20(fp)
  810cdc:	10c5883a 	add	r2,r2,r3
  810ce0:	14800017 	ldw	r18,0(r2)
  810ce4:	e0bff017 	ldw	r2,-64(fp)
  810ce8:	10c00d17 	ldw	r3,52(r2)
  810cec:	e0bff517 	ldw	r2,-44(fp)
  810cf0:	100491ba 	slli	r2,r2,6
  810cf4:	1885883a 	add	r2,r3,r2
  810cf8:	e0bff615 	stw	r2,-40(fp)
  810cfc:	e0bff017 	ldw	r2,-64(fp)
  810d00:	10c00e17 	ldw	r3,56(r2)
  810d04:	e0bff517 	ldw	r2,-44(fp)
  810d08:	100491ba 	slli	r2,r2,6
  810d0c:	1885883a 	add	r2,r3,r2
  810d10:	e0bff715 	stw	r2,-36(fp)
  810d14:	e0bff017 	ldw	r2,-64(fp)
  810d18:	10c00f17 	ldw	r3,60(r2)
  810d1c:	e0bff517 	ldw	r2,-44(fp)
  810d20:	100491ba 	slli	r2,r2,6
  810d24:	1885883a 	add	r2,r3,r2
  810d28:	e0bff815 	stw	r2,-32(fp)
  810d2c:	e03fed15 	stw	zero,-76(fp)
  810d30:	e0bff417 	ldw	r2,-48(fp)
  810d34:	e0bfef15 	stw	r2,-68(fp)
  810d38:	00004006 	br	810e3c <quantize3_ord_dither+0x214>
  810d3c:	8805883a 	mov	r2,r17
  810d40:	14400044 	addi	r17,r2,1
  810d44:	10800003 	ldbu	r2,0(r2)
  810d48:	10c03fcc 	andi	r3,r2,255
  810d4c:	e0bfed17 	ldw	r2,-76(fp)
  810d50:	1085883a 	add	r2,r2,r2
  810d54:	1085883a 	add	r2,r2,r2
  810d58:	1009883a 	mov	r4,r2
  810d5c:	e0bff617 	ldw	r2,-40(fp)
  810d60:	1105883a 	add	r2,r2,r4
  810d64:	10800017 	ldw	r2,0(r2)
  810d68:	1885883a 	add	r2,r3,r2
  810d6c:	1007883a 	mov	r3,r2
  810d70:	e0bff117 	ldw	r2,-60(fp)
  810d74:	10c5883a 	add	r2,r2,r3
  810d78:	10800003 	ldbu	r2,0(r2)
  810d7c:	14003fcc 	andi	r16,r2,255
  810d80:	8805883a 	mov	r2,r17
  810d84:	14400044 	addi	r17,r2,1
  810d88:	10800003 	ldbu	r2,0(r2)
  810d8c:	10c03fcc 	andi	r3,r2,255
  810d90:	e0bfed17 	ldw	r2,-76(fp)
  810d94:	1085883a 	add	r2,r2,r2
  810d98:	1085883a 	add	r2,r2,r2
  810d9c:	1009883a 	mov	r4,r2
  810da0:	e0bff717 	ldw	r2,-36(fp)
  810da4:	1105883a 	add	r2,r2,r4
  810da8:	10800017 	ldw	r2,0(r2)
  810dac:	1885883a 	add	r2,r3,r2
  810db0:	1007883a 	mov	r3,r2
  810db4:	e0bff217 	ldw	r2,-56(fp)
  810db8:	10c5883a 	add	r2,r2,r3
  810dbc:	10800003 	ldbu	r2,0(r2)
  810dc0:	10803fcc 	andi	r2,r2,255
  810dc4:	80a1883a 	add	r16,r16,r2
  810dc8:	8805883a 	mov	r2,r17
  810dcc:	14400044 	addi	r17,r2,1
  810dd0:	10800003 	ldbu	r2,0(r2)
  810dd4:	10c03fcc 	andi	r3,r2,255
  810dd8:	e0bfed17 	ldw	r2,-76(fp)
  810ddc:	1085883a 	add	r2,r2,r2
  810de0:	1085883a 	add	r2,r2,r2
  810de4:	1009883a 	mov	r4,r2
  810de8:	e0bff817 	ldw	r2,-32(fp)
  810dec:	1105883a 	add	r2,r2,r4
  810df0:	10800017 	ldw	r2,0(r2)
  810df4:	1885883a 	add	r2,r3,r2
  810df8:	1007883a 	mov	r3,r2
  810dfc:	e0bff317 	ldw	r2,-52(fp)
  810e00:	10c5883a 	add	r2,r2,r3
  810e04:	10800003 	ldbu	r2,0(r2)
  810e08:	10803fcc 	andi	r2,r2,255
  810e0c:	80a1883a 	add	r16,r16,r2
  810e10:	9005883a 	mov	r2,r18
  810e14:	14800044 	addi	r18,r2,1
  810e18:	8007883a 	mov	r3,r16
  810e1c:	10c00005 	stb	r3,0(r2)
  810e20:	e0bfed17 	ldw	r2,-76(fp)
  810e24:	10800044 	addi	r2,r2,1
  810e28:	108003cc 	andi	r2,r2,15
  810e2c:	e0bfed15 	stw	r2,-76(fp)
  810e30:	e0bfef17 	ldw	r2,-68(fp)
  810e34:	10bfffc4 	addi	r2,r2,-1
  810e38:	e0bfef15 	stw	r2,-68(fp)
  810e3c:	e0bfef17 	ldw	r2,-68(fp)
  810e40:	103fbe1e 	bne	r2,zero,810d3c <__alt_mem_epcs_flash_controller_0+0xff807d3c>
  810e44:	e0bff517 	ldw	r2,-44(fp)
  810e48:	10800044 	addi	r2,r2,1
  810e4c:	108003cc 	andi	r2,r2,15
  810e50:	e0bff515 	stw	r2,-44(fp)
  810e54:	e0bff017 	ldw	r2,-64(fp)
  810e58:	e0fff517 	ldw	r3,-44(fp)
  810e5c:	10c00c15 	stw	r3,48(r2)
  810e60:	e0bfee17 	ldw	r2,-72(fp)
  810e64:	10800044 	addi	r2,r2,1
  810e68:	e0bfee15 	stw	r2,-72(fp)
  810e6c:	e0ffee17 	ldw	r3,-72(fp)
  810e70:	e0bffc17 	ldw	r2,-16(fp)
  810e74:	18bf8a16 	blt	r3,r2,810ca0 <__alt_mem_epcs_flash_controller_0+0xff807ca0>
  810e78:	0001883a 	nop
  810e7c:	e6fffd04 	addi	sp,fp,-12
  810e80:	df000317 	ldw	fp,12(sp)
  810e84:	dc800217 	ldw	r18,8(sp)
  810e88:	dc400117 	ldw	r17,4(sp)
  810e8c:	dc000017 	ldw	r16,0(sp)
  810e90:	dec00404 	addi	sp,sp,16
  810e94:	f800283a 	ret

00810e98 <quantize_fs_dither>:
  810e98:	deffe604 	addi	sp,sp,-104
  810e9c:	dfc01915 	stw	ra,100(sp)
  810ea0:	df001815 	stw	fp,96(sp)
  810ea4:	dcc01715 	stw	r19,92(sp)
  810ea8:	dc801615 	stw	r18,88(sp)
  810eac:	dc401515 	stw	r17,84(sp)
  810eb0:	dc001415 	stw	r16,80(sp)
  810eb4:	df001804 	addi	fp,sp,96
  810eb8:	e13ff815 	stw	r4,-32(fp)
  810ebc:	e17ff915 	stw	r5,-28(fp)
  810ec0:	e1bffa15 	stw	r6,-24(fp)
  810ec4:	e1fffb15 	stw	r7,-20(fp)
  810ec8:	e0bff817 	ldw	r2,-32(fp)
  810ecc:	10807917 	ldw	r2,484(r2)
  810ed0:	e0bfef15 	stw	r2,-68(fp)
  810ed4:	e0bff817 	ldw	r2,-32(fp)
  810ed8:	10801e17 	ldw	r2,120(r2)
  810edc:	e0bff015 	stw	r2,-64(fp)
  810ee0:	e0bff817 	ldw	r2,-32(fp)
  810ee4:	10801c17 	ldw	r2,112(r2)
  810ee8:	e0bff115 	stw	r2,-60(fp)
  810eec:	e0bff817 	ldw	r2,-32(fp)
  810ef0:	10805417 	ldw	r2,336(r2)
  810ef4:	e0bff215 	stw	r2,-56(fp)
  810ef8:	e03fed15 	stw	zero,-76(fp)
  810efc:	0000af06 	br	8111bc <quantize_fs_dither+0x324>
  810f00:	e0bfed17 	ldw	r2,-76(fp)
  810f04:	1085883a 	add	r2,r2,r2
  810f08:	1085883a 	add	r2,r2,r2
  810f0c:	1007883a 	mov	r3,r2
  810f10:	e0bffa17 	ldw	r2,-24(fp)
  810f14:	10c5883a 	add	r2,r2,r3
  810f18:	10800017 	ldw	r2,0(r2)
  810f1c:	e1bff117 	ldw	r6,-60(fp)
  810f20:	000b883a 	mov	r5,zero
  810f24:	1009883a 	mov	r4,r2
  810f28:	08342980 	call	834298 <memset>
  810f2c:	e03fec15 	stw	zero,-80(fp)
  810f30:	00009606 	br	81118c <quantize_fs_dither+0x2f4>
  810f34:	e0bfed17 	ldw	r2,-76(fp)
  810f38:	1085883a 	add	r2,r2,r2
  810f3c:	1085883a 	add	r2,r2,r2
  810f40:	1007883a 	mov	r3,r2
  810f44:	e0bff917 	ldw	r2,-28(fp)
  810f48:	10c5883a 	add	r2,r2,r3
  810f4c:	10c00017 	ldw	r3,0(r2)
  810f50:	e0bfec17 	ldw	r2,-80(fp)
  810f54:	18a7883a 	add	r19,r3,r2
  810f58:	e0bfed17 	ldw	r2,-76(fp)
  810f5c:	1085883a 	add	r2,r2,r2
  810f60:	1085883a 	add	r2,r2,r2
  810f64:	1007883a 	mov	r3,r2
  810f68:	e0bffa17 	ldw	r2,-24(fp)
  810f6c:	10c5883a 	add	r2,r2,r3
  810f70:	14800017 	ldw	r18,0(r2)
  810f74:	e0bfef17 	ldw	r2,-68(fp)
  810f78:	10801517 	ldw	r2,84(r2)
  810f7c:	10001b26 	beq	r2,zero,810fec <quantize_fs_dither+0x154>
  810f80:	e0bff117 	ldw	r2,-60(fp)
  810f84:	10bfffc4 	addi	r2,r2,-1
  810f88:	e0fff017 	ldw	r3,-64(fp)
  810f8c:	180b883a 	mov	r5,r3
  810f90:	1009883a 	mov	r4,r2
  810f94:	08305040 	call	830504 <__mulsi3>
  810f98:	98a7883a 	add	r19,r19,r2
  810f9c:	e0bff117 	ldw	r2,-60(fp)
  810fa0:	10bfffc4 	addi	r2,r2,-1
  810fa4:	90a5883a 	add	r18,r18,r2
  810fa8:	00bfffc4 	movi	r2,-1
  810fac:	e0bfea15 	stw	r2,-88(fp)
  810fb0:	e0bff017 	ldw	r2,-64(fp)
  810fb4:	0085c83a 	sub	r2,zero,r2
  810fb8:	e0bfeb15 	stw	r2,-84(fp)
  810fbc:	e0ffef17 	ldw	r3,-68(fp)
  810fc0:	e0bfec17 	ldw	r2,-80(fp)
  810fc4:	10800444 	addi	r2,r2,17
  810fc8:	1085883a 	add	r2,r2,r2
  810fcc:	1085883a 	add	r2,r2,r2
  810fd0:	1885883a 	add	r2,r3,r2
  810fd4:	10c00017 	ldw	r3,0(r2)
  810fd8:	e0bff117 	ldw	r2,-60(fp)
  810fdc:	10800044 	addi	r2,r2,1
  810fe0:	1085883a 	add	r2,r2,r2
  810fe4:	18a3883a 	add	r17,r3,r2
  810fe8:	00000b06 	br	811018 <quantize_fs_dither+0x180>
  810fec:	00800044 	movi	r2,1
  810ff0:	e0bfea15 	stw	r2,-88(fp)
  810ff4:	e0bff017 	ldw	r2,-64(fp)
  810ff8:	e0bfeb15 	stw	r2,-84(fp)
  810ffc:	e0ffef17 	ldw	r3,-68(fp)
  811000:	e0bfec17 	ldw	r2,-80(fp)
  811004:	10800444 	addi	r2,r2,17
  811008:	1085883a 	add	r2,r2,r2
  81100c:	1085883a 	add	r2,r2,r2
  811010:	1885883a 	add	r2,r3,r2
  811014:	14400017 	ldw	r17,0(r2)
  811018:	e0bfef17 	ldw	r2,-68(fp)
  81101c:	10c00617 	ldw	r3,24(r2)
  811020:	e0bfec17 	ldw	r2,-80(fp)
  811024:	1085883a 	add	r2,r2,r2
  811028:	1085883a 	add	r2,r2,r2
  81102c:	1885883a 	add	r2,r3,r2
  811030:	10800017 	ldw	r2,0(r2)
  811034:	e0bff315 	stw	r2,-52(fp)
  811038:	e0bfef17 	ldw	r2,-68(fp)
  81103c:	10c00417 	ldw	r3,16(r2)
  811040:	e0bfec17 	ldw	r2,-80(fp)
  811044:	1085883a 	add	r2,r2,r2
  811048:	1085883a 	add	r2,r2,r2
  81104c:	1885883a 	add	r2,r3,r2
  811050:	10800017 	ldw	r2,0(r2)
  811054:	e0bff415 	stw	r2,-48(fp)
  811058:	0021883a 	mov	r16,zero
  81105c:	e03fe915 	stw	zero,-92(fp)
  811060:	e0bfe917 	ldw	r2,-92(fp)
  811064:	e0bfe815 	stw	r2,-96(fp)
  811068:	e0bff117 	ldw	r2,-60(fp)
  81106c:	e0bfee15 	stw	r2,-72(fp)
  811070:	00003f06 	br	811170 <quantize_fs_dither+0x2d8>
  811074:	e0bfea17 	ldw	r2,-88(fp)
  811078:	1085883a 	add	r2,r2,r2
  81107c:	8885883a 	add	r2,r17,r2
  811080:	1080000b 	ldhu	r2,0(r2)
  811084:	10bfffcc 	andi	r2,r2,65535
  811088:	10a0001c 	xori	r2,r2,32768
  81108c:	10a00004 	addi	r2,r2,-32768
  811090:	1405883a 	add	r2,r2,r16
  811094:	10800204 	addi	r2,r2,8
  811098:	1021d13a 	srai	r16,r2,4
  81109c:	98800003 	ldbu	r2,0(r19)
  8110a0:	10803fcc 	andi	r2,r2,255
  8110a4:	80a1883a 	add	r16,r16,r2
  8110a8:	8007883a 	mov	r3,r16
  8110ac:	e0bff217 	ldw	r2,-56(fp)
  8110b0:	10c5883a 	add	r2,r2,r3
  8110b4:	10800003 	ldbu	r2,0(r2)
  8110b8:	14003fcc 	andi	r16,r2,255
  8110bc:	8007883a 	mov	r3,r16
  8110c0:	e0bff317 	ldw	r2,-52(fp)
  8110c4:	10c5883a 	add	r2,r2,r3
  8110c8:	10800003 	ldbu	r2,0(r2)
  8110cc:	10803fcc 	andi	r2,r2,255
  8110d0:	e0bff515 	stw	r2,-44(fp)
  8110d4:	90800003 	ldbu	r2,0(r18)
  8110d8:	e0fff517 	ldw	r3,-44(fp)
  8110dc:	10c5883a 	add	r2,r2,r3
  8110e0:	90800005 	stb	r2,0(r18)
  8110e4:	e0bff517 	ldw	r2,-44(fp)
  8110e8:	e0fff417 	ldw	r3,-48(fp)
  8110ec:	1885883a 	add	r2,r3,r2
  8110f0:	10800003 	ldbu	r2,0(r2)
  8110f4:	10803fcc 	andi	r2,r2,255
  8110f8:	80a1c83a 	sub	r16,r16,r2
  8110fc:	e43ff615 	stw	r16,-40(fp)
  811100:	8405883a 	add	r2,r16,r16
  811104:	e0bff715 	stw	r2,-36(fp)
  811108:	e0bff717 	ldw	r2,-36(fp)
  81110c:	80a1883a 	add	r16,r16,r2
  811110:	e0bfe917 	ldw	r2,-92(fp)
  811114:	1007883a 	mov	r3,r2
  811118:	8005883a 	mov	r2,r16
  81111c:	1885883a 	add	r2,r3,r2
  811120:	8880000d 	sth	r2,0(r17)
  811124:	e0bff717 	ldw	r2,-36(fp)
  811128:	80a1883a 	add	r16,r16,r2
  81112c:	e0bfe817 	ldw	r2,-96(fp)
  811130:	1405883a 	add	r2,r2,r16
  811134:	e0bfe915 	stw	r2,-92(fp)
  811138:	e0bff617 	ldw	r2,-40(fp)
  81113c:	e0bfe815 	stw	r2,-96(fp)
  811140:	e0bff717 	ldw	r2,-36(fp)
  811144:	80a1883a 	add	r16,r16,r2
  811148:	e0bfeb17 	ldw	r2,-84(fp)
  81114c:	98a7883a 	add	r19,r19,r2
  811150:	e0bfea17 	ldw	r2,-88(fp)
  811154:	90a5883a 	add	r18,r18,r2
  811158:	e0bfea17 	ldw	r2,-88(fp)
  81115c:	1085883a 	add	r2,r2,r2
  811160:	88a3883a 	add	r17,r17,r2
  811164:	e0bfee17 	ldw	r2,-72(fp)
  811168:	10bfffc4 	addi	r2,r2,-1
  81116c:	e0bfee15 	stw	r2,-72(fp)
  811170:	e0bfee17 	ldw	r2,-72(fp)
  811174:	103fbf1e 	bne	r2,zero,811074 <__alt_mem_epcs_flash_controller_0+0xff808074>
  811178:	e0bfe917 	ldw	r2,-92(fp)
  81117c:	8880000d 	sth	r2,0(r17)
  811180:	e0bfec17 	ldw	r2,-80(fp)
  811184:	10800044 	addi	r2,r2,1
  811188:	e0bfec15 	stw	r2,-80(fp)
  81118c:	e0ffec17 	ldw	r3,-80(fp)
  811190:	e0bff017 	ldw	r2,-64(fp)
  811194:	18bf6716 	blt	r3,r2,810f34 <__alt_mem_epcs_flash_controller_0+0xff807f34>
  811198:	e0bfef17 	ldw	r2,-68(fp)
  81119c:	10801517 	ldw	r2,84(r2)
  8111a0:	1005003a 	cmpeq	r2,r2,zero
  8111a4:	10c03fcc 	andi	r3,r2,255
  8111a8:	e0bfef17 	ldw	r2,-68(fp)
  8111ac:	10c01515 	stw	r3,84(r2)
  8111b0:	e0bfed17 	ldw	r2,-76(fp)
  8111b4:	10800044 	addi	r2,r2,1
  8111b8:	e0bfed15 	stw	r2,-76(fp)
  8111bc:	e0ffed17 	ldw	r3,-76(fp)
  8111c0:	e0bffb17 	ldw	r2,-20(fp)
  8111c4:	18bf4e16 	blt	r3,r2,810f00 <__alt_mem_epcs_flash_controller_0+0xff807f00>
  8111c8:	0001883a 	nop
  8111cc:	e6fffc04 	addi	sp,fp,-16
  8111d0:	dfc00517 	ldw	ra,20(sp)
  8111d4:	df000417 	ldw	fp,16(sp)
  8111d8:	dcc00317 	ldw	r19,12(sp)
  8111dc:	dc800217 	ldw	r18,8(sp)
  8111e0:	dc400117 	ldw	r17,4(sp)
  8111e4:	dc000017 	ldw	r16,0(sp)
  8111e8:	dec00604 	addi	sp,sp,24
  8111ec:	f800283a 	ret

008111f0 <alloc_fs_workspace>:
  8111f0:	defffa04 	addi	sp,sp,-24
  8111f4:	dfc00515 	stw	ra,20(sp)
  8111f8:	df000415 	stw	fp,16(sp)
  8111fc:	df000404 	addi	fp,sp,16
  811200:	e13fff15 	stw	r4,-4(fp)
  811204:	e0bfff17 	ldw	r2,-4(fp)
  811208:	10807917 	ldw	r2,484(r2)
  81120c:	e0bffd15 	stw	r2,-12(fp)
  811210:	e0bfff17 	ldw	r2,-4(fp)
  811214:	10801c17 	ldw	r2,112(r2)
  811218:	10800084 	addi	r2,r2,2
  81121c:	1085883a 	add	r2,r2,r2
  811220:	e0bffe15 	stw	r2,-8(fp)
  811224:	e03ffc15 	stw	zero,-16(fp)
  811228:	00001206 	br	811274 <alloc_fs_workspace+0x84>
  81122c:	e0bfff17 	ldw	r2,-4(fp)
  811230:	10800117 	ldw	r2,4(r2)
  811234:	10800117 	ldw	r2,4(r2)
  811238:	e1bffe17 	ldw	r6,-8(fp)
  81123c:	01400044 	movi	r5,1
  811240:	e13fff17 	ldw	r4,-4(fp)
  811244:	103ee83a 	callr	r2
  811248:	1009883a 	mov	r4,r2
  81124c:	e0fffd17 	ldw	r3,-12(fp)
  811250:	e0bffc17 	ldw	r2,-16(fp)
  811254:	10800444 	addi	r2,r2,17
  811258:	1085883a 	add	r2,r2,r2
  81125c:	1085883a 	add	r2,r2,r2
  811260:	1885883a 	add	r2,r3,r2
  811264:	11000015 	stw	r4,0(r2)
  811268:	e0bffc17 	ldw	r2,-16(fp)
  81126c:	10800044 	addi	r2,r2,1
  811270:	e0bffc15 	stw	r2,-16(fp)
  811274:	e0bfff17 	ldw	r2,-4(fp)
  811278:	10801e17 	ldw	r2,120(r2)
  81127c:	e0fffc17 	ldw	r3,-16(fp)
  811280:	18bfea16 	blt	r3,r2,81122c <__alt_mem_epcs_flash_controller_0+0xff80822c>
  811284:	0001883a 	nop
  811288:	e037883a 	mov	sp,fp
  81128c:	dfc00117 	ldw	ra,4(sp)
  811290:	df000017 	ldw	fp,0(sp)
  811294:	dec00204 	addi	sp,sp,8
  811298:	f800283a 	ret

0081129c <start_pass_1_quant>:
  81129c:	defff904 	addi	sp,sp,-28
  8112a0:	dfc00615 	stw	ra,24(sp)
  8112a4:	df000515 	stw	fp,20(sp)
  8112a8:	df000504 	addi	fp,sp,20
  8112ac:	e13ffe15 	stw	r4,-8(fp)
  8112b0:	e17fff15 	stw	r5,-4(fp)
  8112b4:	e0bffe17 	ldw	r2,-8(fp)
  8112b8:	10807917 	ldw	r2,484(r2)
  8112bc:	e0bffc15 	stw	r2,-16(fp)
  8112c0:	e0bffc17 	ldw	r2,-16(fp)
  8112c4:	10c00417 	ldw	r3,16(r2)
  8112c8:	e0bffe17 	ldw	r2,-8(fp)
  8112cc:	10c02215 	stw	r3,136(r2)
  8112d0:	e0bffc17 	ldw	r2,-16(fp)
  8112d4:	10c00517 	ldw	r3,20(r2)
  8112d8:	e0bffe17 	ldw	r2,-8(fp)
  8112dc:	10c02115 	stw	r3,132(r2)
  8112e0:	e0bffe17 	ldw	r2,-8(fp)
  8112e4:	10801617 	ldw	r2,88(r2)
  8112e8:	10c00060 	cmpeqi	r3,r2,1
  8112ec:	1800121e 	bne	r3,zero,811338 <start_pass_1_quant+0x9c>
  8112f0:	0080032e 	bgeu	zero,r2,811300 <start_pass_1_quant+0x64>
  8112f4:	108000a0 	cmpeqi	r2,r2,2
  8112f8:	1000291e 	bne	r2,zero,8113a0 <start_pass_1_quant+0x104>
  8112fc:	00004d06 	br	811434 <start_pass_1_quant+0x198>
  811300:	e0bffe17 	ldw	r2,-8(fp)
  811304:	10801e17 	ldw	r2,120(r2)
  811308:	108000d8 	cmpnei	r2,r2,3
  81130c:	1000051e 	bne	r2,zero,811324 <start_pass_1_quant+0x88>
  811310:	e0fffc17 	ldw	r3,-16(fp)
  811314:	00802074 	movhi	r2,129
  811318:	10822604 	addi	r2,r2,2200
  81131c:	18800115 	stw	r2,4(r3)
  811320:	00004f06 	br	811460 <start_pass_1_quant+0x1c4>
  811324:	e0fffc17 	ldw	r3,-16(fp)
  811328:	00802074 	movhi	r2,129
  81132c:	1081cf04 	addi	r2,r2,1852
  811330:	18800115 	stw	r2,4(r3)
  811334:	00004a06 	br	811460 <start_pass_1_quant+0x1c4>
  811338:	e0bffe17 	ldw	r2,-8(fp)
  81133c:	10801e17 	ldw	r2,120(r2)
  811340:	108000d8 	cmpnei	r2,r2,3
  811344:	1000051e 	bne	r2,zero,81135c <start_pass_1_quant+0xc0>
  811348:	e0fffc17 	ldw	r3,-16(fp)
  81134c:	00802074 	movhi	r2,129
  811350:	10830a04 	addi	r2,r2,3112
  811354:	18800115 	stw	r2,4(r3)
  811358:	00000406 	br	81136c <start_pass_1_quant+0xd0>
  81135c:	e0fffc17 	ldw	r3,-16(fp)
  811360:	00802074 	movhi	r2,129
  811364:	10828604 	addi	r2,r2,2584
  811368:	18800115 	stw	r2,4(r3)
  81136c:	e0bffc17 	ldw	r2,-16(fp)
  811370:	10000c15 	stw	zero,48(r2)
  811374:	e0bffc17 	ldw	r2,-16(fp)
  811378:	10800717 	ldw	r2,28(r2)
  81137c:	1000021e 	bne	r2,zero,811388 <start_pass_1_quant+0xec>
  811380:	e13ffe17 	ldw	r4,-8(fp)
  811384:	08102540 	call	810254 <create_colorindex>
  811388:	e0bffc17 	ldw	r2,-16(fp)
  81138c:	10800d17 	ldw	r2,52(r2)
  811390:	1000321e 	bne	r2,zero,81145c <start_pass_1_quant+0x1c0>
  811394:	e13ffe17 	ldw	r4,-8(fp)
  811398:	081061c0 	call	81061c <create_odither_tables>
  81139c:	00002f06 	br	81145c <start_pass_1_quant+0x1c0>
  8113a0:	e0fffc17 	ldw	r3,-16(fp)
  8113a4:	00802074 	movhi	r2,129
  8113a8:	1083a604 	addi	r2,r2,3736
  8113ac:	18800115 	stw	r2,4(r3)
  8113b0:	e0bffc17 	ldw	r2,-16(fp)
  8113b4:	10001515 	stw	zero,84(r2)
  8113b8:	e0bffc17 	ldw	r2,-16(fp)
  8113bc:	10801117 	ldw	r2,68(r2)
  8113c0:	1000021e 	bne	r2,zero,8113cc <start_pass_1_quant+0x130>
  8113c4:	e13ffe17 	ldw	r4,-8(fp)
  8113c8:	08111f00 	call	8111f0 <alloc_fs_workspace>
  8113cc:	e0bffe17 	ldw	r2,-8(fp)
  8113d0:	10801c17 	ldw	r2,112(r2)
  8113d4:	10800084 	addi	r2,r2,2
  8113d8:	1085883a 	add	r2,r2,r2
  8113dc:	e0bffd15 	stw	r2,-12(fp)
  8113e0:	e03ffb15 	stw	zero,-20(fp)
  8113e4:	00000e06 	br	811420 <start_pass_1_quant+0x184>
  8113e8:	e0fffc17 	ldw	r3,-16(fp)
  8113ec:	e0bffb17 	ldw	r2,-20(fp)
  8113f0:	10800444 	addi	r2,r2,17
  8113f4:	1085883a 	add	r2,r2,r2
  8113f8:	1085883a 	add	r2,r2,r2
  8113fc:	1885883a 	add	r2,r3,r2
  811400:	10800017 	ldw	r2,0(r2)
  811404:	e1bffd17 	ldw	r6,-12(fp)
  811408:	000b883a 	mov	r5,zero
  81140c:	1009883a 	mov	r4,r2
  811410:	08342980 	call	834298 <memset>
  811414:	e0bffb17 	ldw	r2,-20(fp)
  811418:	10800044 	addi	r2,r2,1
  81141c:	e0bffb15 	stw	r2,-20(fp)
  811420:	e0bffe17 	ldw	r2,-8(fp)
  811424:	10801e17 	ldw	r2,120(r2)
  811428:	e0fffb17 	ldw	r3,-20(fp)
  81142c:	18bfee16 	blt	r3,r2,8113e8 <__alt_mem_epcs_flash_controller_0+0xff8083e8>
  811430:	00000b06 	br	811460 <start_pass_1_quant+0x1c4>
  811434:	e0bffe17 	ldw	r2,-8(fp)
  811438:	10800017 	ldw	r2,0(r2)
  81143c:	00c00c44 	movi	r3,49
  811440:	10c00515 	stw	r3,20(r2)
  811444:	e0bffe17 	ldw	r2,-8(fp)
  811448:	10800017 	ldw	r2,0(r2)
  81144c:	10800017 	ldw	r2,0(r2)
  811450:	e13ffe17 	ldw	r4,-8(fp)
  811454:	103ee83a 	callr	r2
  811458:	00000106 	br	811460 <start_pass_1_quant+0x1c4>
  81145c:	0001883a 	nop
  811460:	0001883a 	nop
  811464:	e037883a 	mov	sp,fp
  811468:	dfc00117 	ldw	ra,4(sp)
  81146c:	df000017 	ldw	fp,0(sp)
  811470:	dec00204 	addi	sp,sp,8
  811474:	f800283a 	ret

00811478 <finish_pass_1_quant>:
  811478:	defffe04 	addi	sp,sp,-8
  81147c:	df000115 	stw	fp,4(sp)
  811480:	df000104 	addi	fp,sp,4
  811484:	e13fff15 	stw	r4,-4(fp)
  811488:	0001883a 	nop
  81148c:	e037883a 	mov	sp,fp
  811490:	df000017 	ldw	fp,0(sp)
  811494:	dec00104 	addi	sp,sp,4
  811498:	f800283a 	ret

0081149c <new_color_map_1_quant>:
  81149c:	defffd04 	addi	sp,sp,-12
  8114a0:	dfc00215 	stw	ra,8(sp)
  8114a4:	df000115 	stw	fp,4(sp)
  8114a8:	df000104 	addi	fp,sp,4
  8114ac:	e13fff15 	stw	r4,-4(fp)
  8114b0:	e0bfff17 	ldw	r2,-4(fp)
  8114b4:	10800017 	ldw	r2,0(r2)
  8114b8:	00c00bc4 	movi	r3,47
  8114bc:	10c00515 	stw	r3,20(r2)
  8114c0:	e0bfff17 	ldw	r2,-4(fp)
  8114c4:	10800017 	ldw	r2,0(r2)
  8114c8:	10800017 	ldw	r2,0(r2)
  8114cc:	e13fff17 	ldw	r4,-4(fp)
  8114d0:	103ee83a 	callr	r2
  8114d4:	0001883a 	nop
  8114d8:	e037883a 	mov	sp,fp
  8114dc:	dfc00117 	ldw	ra,4(sp)
  8114e0:	df000017 	ldw	fp,0(sp)
  8114e4:	dec00204 	addi	sp,sp,8
  8114e8:	f800283a 	ret

008114ec <jinit_1pass_quantizer>:
  8114ec:	defffc04 	addi	sp,sp,-16
  8114f0:	dfc00315 	stw	ra,12(sp)
  8114f4:	df000215 	stw	fp,8(sp)
  8114f8:	df000204 	addi	fp,sp,8
  8114fc:	e13fff15 	stw	r4,-4(fp)
  811500:	e0bfff17 	ldw	r2,-4(fp)
  811504:	10800117 	ldw	r2,4(r2)
  811508:	10800017 	ldw	r2,0(r2)
  81150c:	01801604 	movi	r6,88
  811510:	01400044 	movi	r5,1
  811514:	e13fff17 	ldw	r4,-4(fp)
  811518:	103ee83a 	callr	r2
  81151c:	e0bffe15 	stw	r2,-8(fp)
  811520:	e0bfff17 	ldw	r2,-4(fp)
  811524:	e0fffe17 	ldw	r3,-8(fp)
  811528:	10c07915 	stw	r3,484(r2)
  81152c:	e0fffe17 	ldw	r3,-8(fp)
  811530:	00802074 	movhi	r2,129
  811534:	1084a704 	addi	r2,r2,4764
  811538:	18800015 	stw	r2,0(r3)
  81153c:	e0fffe17 	ldw	r3,-8(fp)
  811540:	00802074 	movhi	r2,129
  811544:	10851e04 	addi	r2,r2,5240
  811548:	18800215 	stw	r2,8(r3)
  81154c:	e0fffe17 	ldw	r3,-8(fp)
  811550:	00802074 	movhi	r2,129
  811554:	10852704 	addi	r2,r2,5276
  811558:	18800315 	stw	r2,12(r3)
  81155c:	e0bffe17 	ldw	r2,-8(fp)
  811560:	10001115 	stw	zero,68(r2)
  811564:	e0bffe17 	ldw	r2,-8(fp)
  811568:	10000d15 	stw	zero,52(r2)
  81156c:	e0bfff17 	ldw	r2,-4(fp)
  811570:	10801e17 	ldw	r2,120(r2)
  811574:	10800150 	cmplti	r2,r2,5
  811578:	10000d1e 	bne	r2,zero,8115b0 <jinit_1pass_quantizer+0xc4>
  81157c:	e0bfff17 	ldw	r2,-4(fp)
  811580:	10800017 	ldw	r2,0(r2)
  811584:	00c00e44 	movi	r3,57
  811588:	10c00515 	stw	r3,20(r2)
  81158c:	e0bfff17 	ldw	r2,-4(fp)
  811590:	10800017 	ldw	r2,0(r2)
  811594:	00c00104 	movi	r3,4
  811598:	10c00615 	stw	r3,24(r2)
  81159c:	e0bfff17 	ldw	r2,-4(fp)
  8115a0:	10800017 	ldw	r2,0(r2)
  8115a4:	10800017 	ldw	r2,0(r2)
  8115a8:	e13fff17 	ldw	r4,-4(fp)
  8115ac:	103ee83a 	callr	r2
  8115b0:	e0bfff17 	ldw	r2,-4(fp)
  8115b4:	10801817 	ldw	r2,96(r2)
  8115b8:	10804050 	cmplti	r2,r2,257
  8115bc:	10000d1e 	bne	r2,zero,8115f4 <jinit_1pass_quantizer+0x108>
  8115c0:	e0bfff17 	ldw	r2,-4(fp)
  8115c4:	10800017 	ldw	r2,0(r2)
  8115c8:	00c00ec4 	movi	r3,59
  8115cc:	10c00515 	stw	r3,20(r2)
  8115d0:	e0bfff17 	ldw	r2,-4(fp)
  8115d4:	10800017 	ldw	r2,0(r2)
  8115d8:	00c04004 	movi	r3,256
  8115dc:	10c00615 	stw	r3,24(r2)
  8115e0:	e0bfff17 	ldw	r2,-4(fp)
  8115e4:	10800017 	ldw	r2,0(r2)
  8115e8:	10800017 	ldw	r2,0(r2)
  8115ec:	e13fff17 	ldw	r4,-4(fp)
  8115f0:	103ee83a 	callr	r2
  8115f4:	e13fff17 	ldw	r4,-4(fp)
  8115f8:	080ffc80 	call	80ffc8 <create_colormap>
  8115fc:	e13fff17 	ldw	r4,-4(fp)
  811600:	08102540 	call	810254 <create_colorindex>
  811604:	e0bfff17 	ldw	r2,-4(fp)
  811608:	10801617 	ldw	r2,88(r2)
  81160c:	10800098 	cmpnei	r2,r2,2
  811610:	1000021e 	bne	r2,zero,81161c <jinit_1pass_quantizer+0x130>
  811614:	e13fff17 	ldw	r4,-4(fp)
  811618:	08111f00 	call	8111f0 <alloc_fs_workspace>
  81161c:	0001883a 	nop
  811620:	e037883a 	mov	sp,fp
  811624:	dfc00117 	ldw	ra,4(sp)
  811628:	df000017 	ldw	fp,0(sp)
  81162c:	dec00204 	addi	sp,sp,8
  811630:	f800283a 	ret

00811634 <prescan_quantize>:
  811634:	defff404 	addi	sp,sp,-48
  811638:	df000b15 	stw	fp,44(sp)
  81163c:	dc800a15 	stw	r18,40(sp)
  811640:	dc400915 	stw	r17,36(sp)
  811644:	dc000815 	stw	r16,32(sp)
  811648:	df000b04 	addi	fp,sp,44
  81164c:	e13ff915 	stw	r4,-28(fp)
  811650:	e17ffa15 	stw	r5,-24(fp)
  811654:	e1bffb15 	stw	r6,-20(fp)
  811658:	e1fffc15 	stw	r7,-16(fp)
  81165c:	e0bff917 	ldw	r2,-28(fp)
  811660:	10807917 	ldw	r2,484(r2)
  811664:	e0bff715 	stw	r2,-36(fp)
  811668:	e0bff717 	ldw	r2,-36(fp)
  81166c:	14800617 	ldw	r18,24(r2)
  811670:	e0bff917 	ldw	r2,-28(fp)
  811674:	10801c17 	ldw	r2,112(r2)
  811678:	e0bff815 	stw	r2,-32(fp)
  81167c:	e03ff515 	stw	zero,-44(fp)
  811680:	00003206 	br	81174c <prescan_quantize+0x118>
  811684:	e0bff517 	ldw	r2,-44(fp)
  811688:	1085883a 	add	r2,r2,r2
  81168c:	1085883a 	add	r2,r2,r2
  811690:	1007883a 	mov	r3,r2
  811694:	e0bffa17 	ldw	r2,-24(fp)
  811698:	10c5883a 	add	r2,r2,r3
  81169c:	14000017 	ldw	r16,0(r2)
  8116a0:	e0bff817 	ldw	r2,-32(fp)
  8116a4:	e0bff615 	stw	r2,-40(fp)
  8116a8:	00002306 	br	811738 <prescan_quantize+0x104>
  8116ac:	80800003 	ldbu	r2,0(r16)
  8116b0:	10803fcc 	andi	r2,r2,255
  8116b4:	1004d0fa 	srli	r2,r2,3
  8116b8:	10803fcc 	andi	r2,r2,255
  8116bc:	1085883a 	add	r2,r2,r2
  8116c0:	1085883a 	add	r2,r2,r2
  8116c4:	9085883a 	add	r2,r18,r2
  8116c8:	10c00017 	ldw	r3,0(r2)
  8116cc:	80800044 	addi	r2,r16,1
  8116d0:	10800003 	ldbu	r2,0(r2)
  8116d4:	10803fcc 	andi	r2,r2,255
  8116d8:	1004d0ba 	srli	r2,r2,2
  8116dc:	10803fcc 	andi	r2,r2,255
  8116e0:	100491ba 	slli	r2,r2,6
  8116e4:	1887883a 	add	r3,r3,r2
  8116e8:	80800084 	addi	r2,r16,2
  8116ec:	10800003 	ldbu	r2,0(r2)
  8116f0:	10803fcc 	andi	r2,r2,255
  8116f4:	1004d0fa 	srli	r2,r2,3
  8116f8:	10803fcc 	andi	r2,r2,255
  8116fc:	1085883a 	add	r2,r2,r2
  811700:	18a3883a 	add	r17,r3,r2
  811704:	8880000b 	ldhu	r2,0(r17)
  811708:	10800044 	addi	r2,r2,1
  81170c:	8880000d 	sth	r2,0(r17)
  811710:	8880000b 	ldhu	r2,0(r17)
  811714:	10bfffcc 	andi	r2,r2,65535
  811718:	1000031e 	bne	r2,zero,811728 <prescan_quantize+0xf4>
  81171c:	8880000b 	ldhu	r2,0(r17)
  811720:	10bfffc4 	addi	r2,r2,-1
  811724:	8880000d 	sth	r2,0(r17)
  811728:	840000c4 	addi	r16,r16,3
  81172c:	e0bff617 	ldw	r2,-40(fp)
  811730:	10bfffc4 	addi	r2,r2,-1
  811734:	e0bff615 	stw	r2,-40(fp)
  811738:	e0bff617 	ldw	r2,-40(fp)
  81173c:	103fdb1e 	bne	r2,zero,8116ac <__alt_mem_epcs_flash_controller_0+0xff8086ac>
  811740:	e0bff517 	ldw	r2,-44(fp)
  811744:	10800044 	addi	r2,r2,1
  811748:	e0bff515 	stw	r2,-44(fp)
  81174c:	e0fff517 	ldw	r3,-44(fp)
  811750:	e0bffc17 	ldw	r2,-16(fp)
  811754:	18bfcb16 	blt	r3,r2,811684 <__alt_mem_epcs_flash_controller_0+0xff808684>
  811758:	0001883a 	nop
  81175c:	e6fffd04 	addi	sp,fp,-12
  811760:	df000317 	ldw	fp,12(sp)
  811764:	dc800217 	ldw	r18,8(sp)
  811768:	dc400117 	ldw	r17,4(sp)
  81176c:	dc000017 	ldw	r16,0(sp)
  811770:	dec00404 	addi	sp,sp,16
  811774:	f800283a 	ret

00811778 <find_biggest_color_pop>:
  811778:	defff904 	addi	sp,sp,-28
  81177c:	df000615 	stw	fp,24(sp)
  811780:	dc800515 	stw	r18,20(sp)
  811784:	dc400415 	stw	r17,16(sp)
  811788:	dc000315 	stw	r16,12(sp)
  81178c:	df000604 	addi	fp,sp,24
  811790:	e13ffb15 	stw	r4,-20(fp)
  811794:	e17ffc15 	stw	r5,-16(fp)
  811798:	0025883a 	mov	r18,zero
  81179c:	e03ffa15 	stw	zero,-24(fp)
  8117a0:	0023883a 	mov	r17,zero
  8117a4:	e43ffb17 	ldw	r16,-20(fp)
  8117a8:	00000806 	br	8117cc <find_biggest_color_pop+0x54>
  8117ac:	80800717 	ldw	r2,28(r16)
  8117b0:	9080040e 	bge	r18,r2,8117c4 <find_biggest_color_pop+0x4c>
  8117b4:	80800617 	ldw	r2,24(r16)
  8117b8:	0080020e 	bge	zero,r2,8117c4 <find_biggest_color_pop+0x4c>
  8117bc:	e43ffa15 	stw	r16,-24(fp)
  8117c0:	84800717 	ldw	r18,28(r16)
  8117c4:	8c400044 	addi	r17,r17,1
  8117c8:	84000804 	addi	r16,r16,32
  8117cc:	e0bffc17 	ldw	r2,-16(fp)
  8117d0:	88bff616 	blt	r17,r2,8117ac <__alt_mem_epcs_flash_controller_0+0xff8087ac>
  8117d4:	e0bffa17 	ldw	r2,-24(fp)
  8117d8:	e6fffd04 	addi	sp,fp,-12
  8117dc:	df000317 	ldw	fp,12(sp)
  8117e0:	dc800217 	ldw	r18,8(sp)
  8117e4:	dc400117 	ldw	r17,4(sp)
  8117e8:	dc000017 	ldw	r16,0(sp)
  8117ec:	dec00404 	addi	sp,sp,16
  8117f0:	f800283a 	ret

008117f4 <find_biggest_volume>:
  8117f4:	defff904 	addi	sp,sp,-28
  8117f8:	df000615 	stw	fp,24(sp)
  8117fc:	dc800515 	stw	r18,20(sp)
  811800:	dc400415 	stw	r17,16(sp)
  811804:	dc000315 	stw	r16,12(sp)
  811808:	df000604 	addi	fp,sp,24
  81180c:	e13ffb15 	stw	r4,-20(fp)
  811810:	e17ffc15 	stw	r5,-16(fp)
  811814:	0025883a 	mov	r18,zero
  811818:	e03ffa15 	stw	zero,-24(fp)
  81181c:	0023883a 	mov	r17,zero
  811820:	e43ffb17 	ldw	r16,-20(fp)
  811824:	00000606 	br	811840 <find_biggest_volume+0x4c>
  811828:	80800617 	ldw	r2,24(r16)
  81182c:	9080020e 	bge	r18,r2,811838 <find_biggest_volume+0x44>
  811830:	e43ffa15 	stw	r16,-24(fp)
  811834:	84800617 	ldw	r18,24(r16)
  811838:	8c400044 	addi	r17,r17,1
  81183c:	84000804 	addi	r16,r16,32
  811840:	e0bffc17 	ldw	r2,-16(fp)
  811844:	88bff816 	blt	r17,r2,811828 <__alt_mem_epcs_flash_controller_0+0xff808828>
  811848:	e0bffa17 	ldw	r2,-24(fp)
  81184c:	e6fffd04 	addi	sp,fp,-12
  811850:	df000317 	ldw	fp,12(sp)
  811854:	dc800217 	ldw	r18,8(sp)
  811858:	dc400117 	ldw	r17,4(sp)
  81185c:	dc000017 	ldw	r16,0(sp)
  811860:	dec00404 	addi	sp,sp,16
  811864:	f800283a 	ret

00811868 <update_box>:
  811868:	deffeb04 	addi	sp,sp,-84
  81186c:	dfc01415 	stw	ra,80(sp)
  811870:	df001315 	stw	fp,76(sp)
  811874:	dc001215 	stw	r16,72(sp)
  811878:	df001304 	addi	fp,sp,76
  81187c:	e13ffd15 	stw	r4,-12(fp)
  811880:	e17ffe15 	stw	r5,-8(fp)
  811884:	e0bffd17 	ldw	r2,-12(fp)
  811888:	10807917 	ldw	r2,484(r2)
  81188c:	e0bff815 	stw	r2,-32(fp)
  811890:	e0bff817 	ldw	r2,-32(fp)
  811894:	10800617 	ldw	r2,24(r2)
  811898:	e0bff915 	stw	r2,-28(fp)
  81189c:	e0bffe17 	ldw	r2,-8(fp)
  8118a0:	10800017 	ldw	r2,0(r2)
  8118a4:	e0bff115 	stw	r2,-60(fp)
  8118a8:	e0bffe17 	ldw	r2,-8(fp)
  8118ac:	10800117 	ldw	r2,4(r2)
  8118b0:	e0bff215 	stw	r2,-56(fp)
  8118b4:	e0bffe17 	ldw	r2,-8(fp)
  8118b8:	10800217 	ldw	r2,8(r2)
  8118bc:	e0bff315 	stw	r2,-52(fp)
  8118c0:	e0bffe17 	ldw	r2,-8(fp)
  8118c4:	10800317 	ldw	r2,12(r2)
  8118c8:	e0bff415 	stw	r2,-48(fp)
  8118cc:	e0bffe17 	ldw	r2,-8(fp)
  8118d0:	10800417 	ldw	r2,16(r2)
  8118d4:	e0bff515 	stw	r2,-44(fp)
  8118d8:	e0bffe17 	ldw	r2,-8(fp)
  8118dc:	10800517 	ldw	r2,20(r2)
  8118e0:	e0bff615 	stw	r2,-40(fp)
  8118e4:	e0bff217 	ldw	r2,-56(fp)
  8118e8:	e0fff117 	ldw	r3,-60(fp)
  8118ec:	1880350e 	bge	r3,r2,8119c4 <update_box+0x15c>
  8118f0:	e0bff117 	ldw	r2,-60(fp)
  8118f4:	e0bfee15 	stw	r2,-72(fp)
  8118f8:	00002f06 	br	8119b8 <update_box+0x150>
  8118fc:	e0bff317 	ldw	r2,-52(fp)
  811900:	e0bfef15 	stw	r2,-68(fp)
  811904:	00002606 	br	8119a0 <update_box+0x138>
  811908:	e0bfee17 	ldw	r2,-72(fp)
  81190c:	1085883a 	add	r2,r2,r2
  811910:	1085883a 	add	r2,r2,r2
  811914:	1007883a 	mov	r3,r2
  811918:	e0bff917 	ldw	r2,-28(fp)
  81191c:	10c5883a 	add	r2,r2,r3
  811920:	10c00017 	ldw	r3,0(r2)
  811924:	e0bfef17 	ldw	r2,-68(fp)
  811928:	100491ba 	slli	r2,r2,6
  81192c:	1887883a 	add	r3,r3,r2
  811930:	e0bff517 	ldw	r2,-44(fp)
  811934:	1085883a 	add	r2,r2,r2
  811938:	1885883a 	add	r2,r3,r2
  81193c:	e0bfed15 	stw	r2,-76(fp)
  811940:	e0bff517 	ldw	r2,-44(fp)
  811944:	e0bff015 	stw	r2,-64(fp)
  811948:	00000f06 	br	811988 <update_box+0x120>
  81194c:	e0bfed17 	ldw	r2,-76(fp)
  811950:	10c00084 	addi	r3,r2,2
  811954:	e0ffed15 	stw	r3,-76(fp)
  811958:	1080000b 	ldhu	r2,0(r2)
  81195c:	10bfffcc 	andi	r2,r2,65535
  811960:	10000626 	beq	r2,zero,81197c <update_box+0x114>
  811964:	e0bfee17 	ldw	r2,-72(fp)
  811968:	e0bff115 	stw	r2,-60(fp)
  81196c:	e0bffe17 	ldw	r2,-8(fp)
  811970:	e0fff117 	ldw	r3,-60(fp)
  811974:	10c00015 	stw	r3,0(r2)
  811978:	00001206 	br	8119c4 <update_box+0x15c>
  81197c:	e0bff017 	ldw	r2,-64(fp)
  811980:	10800044 	addi	r2,r2,1
  811984:	e0bff015 	stw	r2,-64(fp)
  811988:	e0bff017 	ldw	r2,-64(fp)
  81198c:	e0fff617 	ldw	r3,-40(fp)
  811990:	18bfee0e 	bge	r3,r2,81194c <__alt_mem_epcs_flash_controller_0+0xff80894c>
  811994:	e0bfef17 	ldw	r2,-68(fp)
  811998:	10800044 	addi	r2,r2,1
  81199c:	e0bfef15 	stw	r2,-68(fp)
  8119a0:	e0bfef17 	ldw	r2,-68(fp)
  8119a4:	e0fff417 	ldw	r3,-48(fp)
  8119a8:	18bfd70e 	bge	r3,r2,811908 <__alt_mem_epcs_flash_controller_0+0xff808908>
  8119ac:	e0bfee17 	ldw	r2,-72(fp)
  8119b0:	10800044 	addi	r2,r2,1
  8119b4:	e0bfee15 	stw	r2,-72(fp)
  8119b8:	e0bfee17 	ldw	r2,-72(fp)
  8119bc:	e0fff217 	ldw	r3,-56(fp)
  8119c0:	18bfce0e 	bge	r3,r2,8118fc <__alt_mem_epcs_flash_controller_0+0xff8088fc>
  8119c4:	e0bff217 	ldw	r2,-56(fp)
  8119c8:	e0fff117 	ldw	r3,-60(fp)
  8119cc:	1880350e 	bge	r3,r2,811aa4 <update_box+0x23c>
  8119d0:	e0bff217 	ldw	r2,-56(fp)
  8119d4:	e0bfee15 	stw	r2,-72(fp)
  8119d8:	00002f06 	br	811a98 <update_box+0x230>
  8119dc:	e0bff317 	ldw	r2,-52(fp)
  8119e0:	e0bfef15 	stw	r2,-68(fp)
  8119e4:	00002606 	br	811a80 <update_box+0x218>
  8119e8:	e0bfee17 	ldw	r2,-72(fp)
  8119ec:	1085883a 	add	r2,r2,r2
  8119f0:	1085883a 	add	r2,r2,r2
  8119f4:	1007883a 	mov	r3,r2
  8119f8:	e0bff917 	ldw	r2,-28(fp)
  8119fc:	10c5883a 	add	r2,r2,r3
  811a00:	10c00017 	ldw	r3,0(r2)
  811a04:	e0bfef17 	ldw	r2,-68(fp)
  811a08:	100491ba 	slli	r2,r2,6
  811a0c:	1887883a 	add	r3,r3,r2
  811a10:	e0bff517 	ldw	r2,-44(fp)
  811a14:	1085883a 	add	r2,r2,r2
  811a18:	1885883a 	add	r2,r3,r2
  811a1c:	e0bfed15 	stw	r2,-76(fp)
  811a20:	e0bff517 	ldw	r2,-44(fp)
  811a24:	e0bff015 	stw	r2,-64(fp)
  811a28:	00000f06 	br	811a68 <update_box+0x200>
  811a2c:	e0bfed17 	ldw	r2,-76(fp)
  811a30:	10c00084 	addi	r3,r2,2
  811a34:	e0ffed15 	stw	r3,-76(fp)
  811a38:	1080000b 	ldhu	r2,0(r2)
  811a3c:	10bfffcc 	andi	r2,r2,65535
  811a40:	10000626 	beq	r2,zero,811a5c <update_box+0x1f4>
  811a44:	e0bfee17 	ldw	r2,-72(fp)
  811a48:	e0bff215 	stw	r2,-56(fp)
  811a4c:	e0bffe17 	ldw	r2,-8(fp)
  811a50:	e0fff217 	ldw	r3,-56(fp)
  811a54:	10c00115 	stw	r3,4(r2)
  811a58:	00001206 	br	811aa4 <update_box+0x23c>
  811a5c:	e0bff017 	ldw	r2,-64(fp)
  811a60:	10800044 	addi	r2,r2,1
  811a64:	e0bff015 	stw	r2,-64(fp)
  811a68:	e0bff017 	ldw	r2,-64(fp)
  811a6c:	e0fff617 	ldw	r3,-40(fp)
  811a70:	18bfee0e 	bge	r3,r2,811a2c <__alt_mem_epcs_flash_controller_0+0xff808a2c>
  811a74:	e0bfef17 	ldw	r2,-68(fp)
  811a78:	10800044 	addi	r2,r2,1
  811a7c:	e0bfef15 	stw	r2,-68(fp)
  811a80:	e0bfef17 	ldw	r2,-68(fp)
  811a84:	e0fff417 	ldw	r3,-48(fp)
  811a88:	18bfd70e 	bge	r3,r2,8119e8 <__alt_mem_epcs_flash_controller_0+0xff8089e8>
  811a8c:	e0bfee17 	ldw	r2,-72(fp)
  811a90:	10bfffc4 	addi	r2,r2,-1
  811a94:	e0bfee15 	stw	r2,-72(fp)
  811a98:	e0ffee17 	ldw	r3,-72(fp)
  811a9c:	e0bff117 	ldw	r2,-60(fp)
  811aa0:	18bfce0e 	bge	r3,r2,8119dc <__alt_mem_epcs_flash_controller_0+0xff8089dc>
  811aa4:	e0bff417 	ldw	r2,-48(fp)
  811aa8:	e0fff317 	ldw	r3,-52(fp)
  811aac:	1880350e 	bge	r3,r2,811b84 <update_box+0x31c>
  811ab0:	e0bff317 	ldw	r2,-52(fp)
  811ab4:	e0bfef15 	stw	r2,-68(fp)
  811ab8:	00002f06 	br	811b78 <update_box+0x310>
  811abc:	e0bff117 	ldw	r2,-60(fp)
  811ac0:	e0bfee15 	stw	r2,-72(fp)
  811ac4:	00002606 	br	811b60 <update_box+0x2f8>
  811ac8:	e0bfee17 	ldw	r2,-72(fp)
  811acc:	1085883a 	add	r2,r2,r2
  811ad0:	1085883a 	add	r2,r2,r2
  811ad4:	1007883a 	mov	r3,r2
  811ad8:	e0bff917 	ldw	r2,-28(fp)
  811adc:	10c5883a 	add	r2,r2,r3
  811ae0:	10c00017 	ldw	r3,0(r2)
  811ae4:	e0bfef17 	ldw	r2,-68(fp)
  811ae8:	100491ba 	slli	r2,r2,6
  811aec:	1887883a 	add	r3,r3,r2
  811af0:	e0bff517 	ldw	r2,-44(fp)
  811af4:	1085883a 	add	r2,r2,r2
  811af8:	1885883a 	add	r2,r3,r2
  811afc:	e0bfed15 	stw	r2,-76(fp)
  811b00:	e0bff517 	ldw	r2,-44(fp)
  811b04:	e0bff015 	stw	r2,-64(fp)
  811b08:	00000f06 	br	811b48 <update_box+0x2e0>
  811b0c:	e0bfed17 	ldw	r2,-76(fp)
  811b10:	10c00084 	addi	r3,r2,2
  811b14:	e0ffed15 	stw	r3,-76(fp)
  811b18:	1080000b 	ldhu	r2,0(r2)
  811b1c:	10bfffcc 	andi	r2,r2,65535
  811b20:	10000626 	beq	r2,zero,811b3c <update_box+0x2d4>
  811b24:	e0bfef17 	ldw	r2,-68(fp)
  811b28:	e0bff315 	stw	r2,-52(fp)
  811b2c:	e0bffe17 	ldw	r2,-8(fp)
  811b30:	e0fff317 	ldw	r3,-52(fp)
  811b34:	10c00215 	stw	r3,8(r2)
  811b38:	00001206 	br	811b84 <update_box+0x31c>
  811b3c:	e0bff017 	ldw	r2,-64(fp)
  811b40:	10800044 	addi	r2,r2,1
  811b44:	e0bff015 	stw	r2,-64(fp)
  811b48:	e0bff017 	ldw	r2,-64(fp)
  811b4c:	e0fff617 	ldw	r3,-40(fp)
  811b50:	18bfee0e 	bge	r3,r2,811b0c <__alt_mem_epcs_flash_controller_0+0xff808b0c>
  811b54:	e0bfee17 	ldw	r2,-72(fp)
  811b58:	10800044 	addi	r2,r2,1
  811b5c:	e0bfee15 	stw	r2,-72(fp)
  811b60:	e0bfee17 	ldw	r2,-72(fp)
  811b64:	e0fff217 	ldw	r3,-56(fp)
  811b68:	18bfd70e 	bge	r3,r2,811ac8 <__alt_mem_epcs_flash_controller_0+0xff808ac8>
  811b6c:	e0bfef17 	ldw	r2,-68(fp)
  811b70:	10800044 	addi	r2,r2,1
  811b74:	e0bfef15 	stw	r2,-68(fp)
  811b78:	e0bfef17 	ldw	r2,-68(fp)
  811b7c:	e0fff417 	ldw	r3,-48(fp)
  811b80:	18bfce0e 	bge	r3,r2,811abc <__alt_mem_epcs_flash_controller_0+0xff808abc>
  811b84:	e0bff417 	ldw	r2,-48(fp)
  811b88:	e0fff317 	ldw	r3,-52(fp)
  811b8c:	1880350e 	bge	r3,r2,811c64 <update_box+0x3fc>
  811b90:	e0bff417 	ldw	r2,-48(fp)
  811b94:	e0bfef15 	stw	r2,-68(fp)
  811b98:	00002f06 	br	811c58 <update_box+0x3f0>
  811b9c:	e0bff117 	ldw	r2,-60(fp)
  811ba0:	e0bfee15 	stw	r2,-72(fp)
  811ba4:	00002606 	br	811c40 <update_box+0x3d8>
  811ba8:	e0bfee17 	ldw	r2,-72(fp)
  811bac:	1085883a 	add	r2,r2,r2
  811bb0:	1085883a 	add	r2,r2,r2
  811bb4:	1007883a 	mov	r3,r2
  811bb8:	e0bff917 	ldw	r2,-28(fp)
  811bbc:	10c5883a 	add	r2,r2,r3
  811bc0:	10c00017 	ldw	r3,0(r2)
  811bc4:	e0bfef17 	ldw	r2,-68(fp)
  811bc8:	100491ba 	slli	r2,r2,6
  811bcc:	1887883a 	add	r3,r3,r2
  811bd0:	e0bff517 	ldw	r2,-44(fp)
  811bd4:	1085883a 	add	r2,r2,r2
  811bd8:	1885883a 	add	r2,r3,r2
  811bdc:	e0bfed15 	stw	r2,-76(fp)
  811be0:	e0bff517 	ldw	r2,-44(fp)
  811be4:	e0bff015 	stw	r2,-64(fp)
  811be8:	00000f06 	br	811c28 <update_box+0x3c0>
  811bec:	e0bfed17 	ldw	r2,-76(fp)
  811bf0:	10c00084 	addi	r3,r2,2
  811bf4:	e0ffed15 	stw	r3,-76(fp)
  811bf8:	1080000b 	ldhu	r2,0(r2)
  811bfc:	10bfffcc 	andi	r2,r2,65535
  811c00:	10000626 	beq	r2,zero,811c1c <update_box+0x3b4>
  811c04:	e0bfef17 	ldw	r2,-68(fp)
  811c08:	e0bff415 	stw	r2,-48(fp)
  811c0c:	e0bffe17 	ldw	r2,-8(fp)
  811c10:	e0fff417 	ldw	r3,-48(fp)
  811c14:	10c00315 	stw	r3,12(r2)
  811c18:	00001206 	br	811c64 <update_box+0x3fc>
  811c1c:	e0bff017 	ldw	r2,-64(fp)
  811c20:	10800044 	addi	r2,r2,1
  811c24:	e0bff015 	stw	r2,-64(fp)
  811c28:	e0bff017 	ldw	r2,-64(fp)
  811c2c:	e0fff617 	ldw	r3,-40(fp)
  811c30:	18bfee0e 	bge	r3,r2,811bec <__alt_mem_epcs_flash_controller_0+0xff808bec>
  811c34:	e0bfee17 	ldw	r2,-72(fp)
  811c38:	10800044 	addi	r2,r2,1
  811c3c:	e0bfee15 	stw	r2,-72(fp)
  811c40:	e0bfee17 	ldw	r2,-72(fp)
  811c44:	e0fff217 	ldw	r3,-56(fp)
  811c48:	18bfd70e 	bge	r3,r2,811ba8 <__alt_mem_epcs_flash_controller_0+0xff808ba8>
  811c4c:	e0bfef17 	ldw	r2,-68(fp)
  811c50:	10bfffc4 	addi	r2,r2,-1
  811c54:	e0bfef15 	stw	r2,-68(fp)
  811c58:	e0ffef17 	ldw	r3,-68(fp)
  811c5c:	e0bff317 	ldw	r2,-52(fp)
  811c60:	18bfce0e 	bge	r3,r2,811b9c <__alt_mem_epcs_flash_controller_0+0xff808b9c>
  811c64:	e0bff617 	ldw	r2,-40(fp)
  811c68:	e0fff517 	ldw	r3,-44(fp)
  811c6c:	1880360e 	bge	r3,r2,811d48 <update_box+0x4e0>
  811c70:	e0bff517 	ldw	r2,-44(fp)
  811c74:	e0bff015 	stw	r2,-64(fp)
  811c78:	00003006 	br	811d3c <update_box+0x4d4>
  811c7c:	e0bff117 	ldw	r2,-60(fp)
  811c80:	e0bfee15 	stw	r2,-72(fp)
  811c84:	00002706 	br	811d24 <update_box+0x4bc>
  811c88:	e0bfee17 	ldw	r2,-72(fp)
  811c8c:	1085883a 	add	r2,r2,r2
  811c90:	1085883a 	add	r2,r2,r2
  811c94:	1007883a 	mov	r3,r2
  811c98:	e0bff917 	ldw	r2,-28(fp)
  811c9c:	10c5883a 	add	r2,r2,r3
  811ca0:	10c00017 	ldw	r3,0(r2)
  811ca4:	e0bff317 	ldw	r2,-52(fp)
  811ca8:	100491ba 	slli	r2,r2,6
  811cac:	1887883a 	add	r3,r3,r2
  811cb0:	e0bff017 	ldw	r2,-64(fp)
  811cb4:	1085883a 	add	r2,r2,r2
  811cb8:	1885883a 	add	r2,r3,r2
  811cbc:	e0bfed15 	stw	r2,-76(fp)
  811cc0:	e0bff317 	ldw	r2,-52(fp)
  811cc4:	e0bfef15 	stw	r2,-68(fp)
  811cc8:	00001006 	br	811d0c <update_box+0x4a4>
  811ccc:	e0bfed17 	ldw	r2,-76(fp)
  811cd0:	1080000b 	ldhu	r2,0(r2)
  811cd4:	10bfffcc 	andi	r2,r2,65535
  811cd8:	10000626 	beq	r2,zero,811cf4 <update_box+0x48c>
  811cdc:	e0bff017 	ldw	r2,-64(fp)
  811ce0:	e0bff515 	stw	r2,-44(fp)
  811ce4:	e0bffe17 	ldw	r2,-8(fp)
  811ce8:	e0fff517 	ldw	r3,-44(fp)
  811cec:	10c00415 	stw	r3,16(r2)
  811cf0:	00001506 	br	811d48 <update_box+0x4e0>
  811cf4:	e0bfef17 	ldw	r2,-68(fp)
  811cf8:	10800044 	addi	r2,r2,1
  811cfc:	e0bfef15 	stw	r2,-68(fp)
  811d00:	e0bfed17 	ldw	r2,-76(fp)
  811d04:	10801004 	addi	r2,r2,64
  811d08:	e0bfed15 	stw	r2,-76(fp)
  811d0c:	e0bfef17 	ldw	r2,-68(fp)
  811d10:	e0fff417 	ldw	r3,-48(fp)
  811d14:	18bfed0e 	bge	r3,r2,811ccc <__alt_mem_epcs_flash_controller_0+0xff808ccc>
  811d18:	e0bfee17 	ldw	r2,-72(fp)
  811d1c:	10800044 	addi	r2,r2,1
  811d20:	e0bfee15 	stw	r2,-72(fp)
  811d24:	e0bfee17 	ldw	r2,-72(fp)
  811d28:	e0fff217 	ldw	r3,-56(fp)
  811d2c:	18bfd60e 	bge	r3,r2,811c88 <__alt_mem_epcs_flash_controller_0+0xff808c88>
  811d30:	e0bff017 	ldw	r2,-64(fp)
  811d34:	10800044 	addi	r2,r2,1
  811d38:	e0bff015 	stw	r2,-64(fp)
  811d3c:	e0bff017 	ldw	r2,-64(fp)
  811d40:	e0fff617 	ldw	r3,-40(fp)
  811d44:	18bfcd0e 	bge	r3,r2,811c7c <__alt_mem_epcs_flash_controller_0+0xff808c7c>
  811d48:	e0bff617 	ldw	r2,-40(fp)
  811d4c:	e0fff517 	ldw	r3,-44(fp)
  811d50:	1880360e 	bge	r3,r2,811e2c <update_box+0x5c4>
  811d54:	e0bff617 	ldw	r2,-40(fp)
  811d58:	e0bff015 	stw	r2,-64(fp)
  811d5c:	00003006 	br	811e20 <update_box+0x5b8>
  811d60:	e0bff117 	ldw	r2,-60(fp)
  811d64:	e0bfee15 	stw	r2,-72(fp)
  811d68:	00002706 	br	811e08 <update_box+0x5a0>
  811d6c:	e0bfee17 	ldw	r2,-72(fp)
  811d70:	1085883a 	add	r2,r2,r2
  811d74:	1085883a 	add	r2,r2,r2
  811d78:	1007883a 	mov	r3,r2
  811d7c:	e0bff917 	ldw	r2,-28(fp)
  811d80:	10c5883a 	add	r2,r2,r3
  811d84:	10c00017 	ldw	r3,0(r2)
  811d88:	e0bff317 	ldw	r2,-52(fp)
  811d8c:	100491ba 	slli	r2,r2,6
  811d90:	1887883a 	add	r3,r3,r2
  811d94:	e0bff017 	ldw	r2,-64(fp)
  811d98:	1085883a 	add	r2,r2,r2
  811d9c:	1885883a 	add	r2,r3,r2
  811da0:	e0bfed15 	stw	r2,-76(fp)
  811da4:	e0bff317 	ldw	r2,-52(fp)
  811da8:	e0bfef15 	stw	r2,-68(fp)
  811dac:	00001006 	br	811df0 <update_box+0x588>
  811db0:	e0bfed17 	ldw	r2,-76(fp)
  811db4:	1080000b 	ldhu	r2,0(r2)
  811db8:	10bfffcc 	andi	r2,r2,65535
  811dbc:	10000626 	beq	r2,zero,811dd8 <update_box+0x570>
  811dc0:	e0bff017 	ldw	r2,-64(fp)
  811dc4:	e0bff615 	stw	r2,-40(fp)
  811dc8:	e0bffe17 	ldw	r2,-8(fp)
  811dcc:	e0fff617 	ldw	r3,-40(fp)
  811dd0:	10c00515 	stw	r3,20(r2)
  811dd4:	00001506 	br	811e2c <update_box+0x5c4>
  811dd8:	e0bfef17 	ldw	r2,-68(fp)
  811ddc:	10800044 	addi	r2,r2,1
  811de0:	e0bfef15 	stw	r2,-68(fp)
  811de4:	e0bfed17 	ldw	r2,-76(fp)
  811de8:	10801004 	addi	r2,r2,64
  811dec:	e0bfed15 	stw	r2,-76(fp)
  811df0:	e0bfef17 	ldw	r2,-68(fp)
  811df4:	e0fff417 	ldw	r3,-48(fp)
  811df8:	18bfed0e 	bge	r3,r2,811db0 <__alt_mem_epcs_flash_controller_0+0xff808db0>
  811dfc:	e0bfee17 	ldw	r2,-72(fp)
  811e00:	10800044 	addi	r2,r2,1
  811e04:	e0bfee15 	stw	r2,-72(fp)
  811e08:	e0bfee17 	ldw	r2,-72(fp)
  811e0c:	e0fff217 	ldw	r3,-56(fp)
  811e10:	18bfd60e 	bge	r3,r2,811d6c <__alt_mem_epcs_flash_controller_0+0xff808d6c>
  811e14:	e0bff017 	ldw	r2,-64(fp)
  811e18:	10bfffc4 	addi	r2,r2,-1
  811e1c:	e0bff015 	stw	r2,-64(fp)
  811e20:	e0fff017 	ldw	r3,-64(fp)
  811e24:	e0bff517 	ldw	r2,-44(fp)
  811e28:	18bfcd0e 	bge	r3,r2,811d60 <__alt_mem_epcs_flash_controller_0+0xff808d60>
  811e2c:	e0fff217 	ldw	r3,-56(fp)
  811e30:	e0bff117 	ldw	r2,-60(fp)
  811e34:	1885c83a 	sub	r2,r3,r2
  811e38:	100490fa 	slli	r2,r2,3
  811e3c:	1085883a 	add	r2,r2,r2
  811e40:	e0bffa15 	stw	r2,-24(fp)
  811e44:	e0fff417 	ldw	r3,-48(fp)
  811e48:	e0bff317 	ldw	r2,-52(fp)
  811e4c:	1885c83a 	sub	r2,r3,r2
  811e50:	1085883a 	add	r2,r2,r2
  811e54:	1085883a 	add	r2,r2,r2
  811e58:	1007883a 	mov	r3,r2
  811e5c:	1805883a 	mov	r2,r3
  811e60:	1085883a 	add	r2,r2,r2
  811e64:	10c5883a 	add	r2,r2,r3
  811e68:	e0bffb15 	stw	r2,-20(fp)
  811e6c:	e0fff617 	ldw	r3,-40(fp)
  811e70:	e0bff517 	ldw	r2,-44(fp)
  811e74:	1885c83a 	sub	r2,r3,r2
  811e78:	100490fa 	slli	r2,r2,3
  811e7c:	e0bffc15 	stw	r2,-16(fp)
  811e80:	e17ffa17 	ldw	r5,-24(fp)
  811e84:	e13ffa17 	ldw	r4,-24(fp)
  811e88:	08305040 	call	830504 <__mulsi3>
  811e8c:	1021883a 	mov	r16,r2
  811e90:	e17ffb17 	ldw	r5,-20(fp)
  811e94:	e13ffb17 	ldw	r4,-20(fp)
  811e98:	08305040 	call	830504 <__mulsi3>
  811e9c:	80a1883a 	add	r16,r16,r2
  811ea0:	e17ffc17 	ldw	r5,-16(fp)
  811ea4:	e13ffc17 	ldw	r4,-16(fp)
  811ea8:	08305040 	call	830504 <__mulsi3>
  811eac:	8087883a 	add	r3,r16,r2
  811eb0:	e0bffe17 	ldw	r2,-8(fp)
  811eb4:	10c00615 	stw	r3,24(r2)
  811eb8:	e03ff715 	stw	zero,-36(fp)
  811ebc:	e0bff117 	ldw	r2,-60(fp)
  811ec0:	e0bfee15 	stw	r2,-72(fp)
  811ec4:	00002d06 	br	811f7c <update_box+0x714>
  811ec8:	e0bff317 	ldw	r2,-52(fp)
  811ecc:	e0bfef15 	stw	r2,-68(fp)
  811ed0:	00002406 	br	811f64 <update_box+0x6fc>
  811ed4:	e0bfee17 	ldw	r2,-72(fp)
  811ed8:	1085883a 	add	r2,r2,r2
  811edc:	1085883a 	add	r2,r2,r2
  811ee0:	1007883a 	mov	r3,r2
  811ee4:	e0bff917 	ldw	r2,-28(fp)
  811ee8:	10c5883a 	add	r2,r2,r3
  811eec:	10c00017 	ldw	r3,0(r2)
  811ef0:	e0bfef17 	ldw	r2,-68(fp)
  811ef4:	100491ba 	slli	r2,r2,6
  811ef8:	1887883a 	add	r3,r3,r2
  811efc:	e0bff517 	ldw	r2,-44(fp)
  811f00:	1085883a 	add	r2,r2,r2
  811f04:	1885883a 	add	r2,r3,r2
  811f08:	e0bfed15 	stw	r2,-76(fp)
  811f0c:	e0bff517 	ldw	r2,-44(fp)
  811f10:	e0bff015 	stw	r2,-64(fp)
  811f14:	00000d06 	br	811f4c <update_box+0x6e4>
  811f18:	e0bfed17 	ldw	r2,-76(fp)
  811f1c:	1080000b 	ldhu	r2,0(r2)
  811f20:	10bfffcc 	andi	r2,r2,65535
  811f24:	10000326 	beq	r2,zero,811f34 <update_box+0x6cc>
  811f28:	e0bff717 	ldw	r2,-36(fp)
  811f2c:	10800044 	addi	r2,r2,1
  811f30:	e0bff715 	stw	r2,-36(fp)
  811f34:	e0bff017 	ldw	r2,-64(fp)
  811f38:	10800044 	addi	r2,r2,1
  811f3c:	e0bff015 	stw	r2,-64(fp)
  811f40:	e0bfed17 	ldw	r2,-76(fp)
  811f44:	10800084 	addi	r2,r2,2
  811f48:	e0bfed15 	stw	r2,-76(fp)
  811f4c:	e0bff017 	ldw	r2,-64(fp)
  811f50:	e0fff617 	ldw	r3,-40(fp)
  811f54:	18bff00e 	bge	r3,r2,811f18 <__alt_mem_epcs_flash_controller_0+0xff808f18>
  811f58:	e0bfef17 	ldw	r2,-68(fp)
  811f5c:	10800044 	addi	r2,r2,1
  811f60:	e0bfef15 	stw	r2,-68(fp)
  811f64:	e0bfef17 	ldw	r2,-68(fp)
  811f68:	e0fff417 	ldw	r3,-48(fp)
  811f6c:	18bfd90e 	bge	r3,r2,811ed4 <__alt_mem_epcs_flash_controller_0+0xff808ed4>
  811f70:	e0bfee17 	ldw	r2,-72(fp)
  811f74:	10800044 	addi	r2,r2,1
  811f78:	e0bfee15 	stw	r2,-72(fp)
  811f7c:	e0bfee17 	ldw	r2,-72(fp)
  811f80:	e0fff217 	ldw	r3,-56(fp)
  811f84:	18bfd00e 	bge	r3,r2,811ec8 <__alt_mem_epcs_flash_controller_0+0xff808ec8>
  811f88:	e0bffe17 	ldw	r2,-8(fp)
  811f8c:	e0fff717 	ldw	r3,-36(fp)
  811f90:	10c00715 	stw	r3,28(r2)
  811f94:	0001883a 	nop
  811f98:	e6ffff04 	addi	sp,fp,-4
  811f9c:	dfc00217 	ldw	ra,8(sp)
  811fa0:	df000117 	ldw	fp,4(sp)
  811fa4:	dc000017 	ldw	r16,0(sp)
  811fa8:	dec00304 	addi	sp,sp,12
  811fac:	f800283a 	ret

00811fb0 <median_cut>:
  811fb0:	defff204 	addi	sp,sp,-56
  811fb4:	dfc00d15 	stw	ra,52(sp)
  811fb8:	df000c15 	stw	fp,48(sp)
  811fbc:	dc400b15 	stw	r17,44(sp)
  811fc0:	dc000a15 	stw	r16,40(sp)
  811fc4:	df000c04 	addi	fp,sp,48
  811fc8:	e13ffa15 	stw	r4,-24(fp)
  811fcc:	e17ffb15 	stw	r5,-20(fp)
  811fd0:	e1bffc15 	stw	r6,-16(fp)
  811fd4:	e1fffd15 	stw	r7,-12(fp)
  811fd8:	00007906 	br	8121c0 <median_cut+0x210>
  811fdc:	e0bffc17 	ldw	r2,-16(fp)
  811fe0:	1085883a 	add	r2,r2,r2
  811fe4:	1007883a 	mov	r3,r2
  811fe8:	e0bffd17 	ldw	r2,-12(fp)
  811fec:	10c00516 	blt	r2,r3,812004 <median_cut+0x54>
  811ff0:	e17ffc17 	ldw	r5,-16(fp)
  811ff4:	e13ffb17 	ldw	r4,-20(fp)
  811ff8:	08117780 	call	811778 <find_biggest_color_pop>
  811ffc:	1021883a 	mov	r16,r2
  812000:	00000406 	br	812014 <median_cut+0x64>
  812004:	e17ffc17 	ldw	r5,-16(fp)
  812008:	e13ffb17 	ldw	r4,-20(fp)
  81200c:	08117f40 	call	8117f4 <find_biggest_volume>
  812010:	1021883a 	mov	r16,r2
  812014:	80006e26 	beq	r16,zero,8121d0 <median_cut+0x220>
  812018:	e0bffc17 	ldw	r2,-16(fp)
  81201c:	1004917a 	slli	r2,r2,5
  812020:	e0fffb17 	ldw	r3,-20(fp)
  812024:	18a3883a 	add	r17,r3,r2
  812028:	80800117 	ldw	r2,4(r16)
  81202c:	88800115 	stw	r2,4(r17)
  812030:	80800317 	ldw	r2,12(r16)
  812034:	88800315 	stw	r2,12(r17)
  812038:	80800517 	ldw	r2,20(r16)
  81203c:	88800515 	stw	r2,20(r17)
  812040:	80800017 	ldw	r2,0(r16)
  812044:	88800015 	stw	r2,0(r17)
  812048:	80800217 	ldw	r2,8(r16)
  81204c:	88800215 	stw	r2,8(r17)
  812050:	80800417 	ldw	r2,16(r16)
  812054:	88800415 	stw	r2,16(r17)
  812058:	80c00117 	ldw	r3,4(r16)
  81205c:	80800017 	ldw	r2,0(r16)
  812060:	1885c83a 	sub	r2,r3,r2
  812064:	100490fa 	slli	r2,r2,3
  812068:	1085883a 	add	r2,r2,r2
  81206c:	e0bff615 	stw	r2,-40(fp)
  812070:	80c00317 	ldw	r3,12(r16)
  812074:	80800217 	ldw	r2,8(r16)
  812078:	1885c83a 	sub	r2,r3,r2
  81207c:	1085883a 	add	r2,r2,r2
  812080:	1085883a 	add	r2,r2,r2
  812084:	1007883a 	mov	r3,r2
  812088:	1805883a 	mov	r2,r3
  81208c:	1085883a 	add	r2,r2,r2
  812090:	10c5883a 	add	r2,r2,r3
  812094:	e0bff715 	stw	r2,-36(fp)
  812098:	80c00517 	ldw	r3,20(r16)
  81209c:	80800417 	ldw	r2,16(r16)
  8120a0:	1885c83a 	sub	r2,r3,r2
  8120a4:	100490fa 	slli	r2,r2,3
  8120a8:	e0bff815 	stw	r2,-32(fp)
  8120ac:	e0bff717 	ldw	r2,-36(fp)
  8120b0:	e0bff515 	stw	r2,-44(fp)
  8120b4:	00800044 	movi	r2,1
  8120b8:	e0bff415 	stw	r2,-48(fp)
  8120bc:	e0bff617 	ldw	r2,-40(fp)
  8120c0:	e0fff517 	ldw	r3,-44(fp)
  8120c4:	1880030e 	bge	r3,r2,8120d4 <median_cut+0x124>
  8120c8:	e0bff617 	ldw	r2,-40(fp)
  8120cc:	e0bff515 	stw	r2,-44(fp)
  8120d0:	e03ff415 	stw	zero,-48(fp)
  8120d4:	e0bff817 	ldw	r2,-32(fp)
  8120d8:	e0fff517 	ldw	r3,-44(fp)
  8120dc:	1880020e 	bge	r3,r2,8120e8 <median_cut+0x138>
  8120e0:	00800084 	movi	r2,2
  8120e4:	e0bff415 	stw	r2,-48(fp)
  8120e8:	e0bff417 	ldw	r2,-48(fp)
  8120ec:	10c00060 	cmpeqi	r3,r2,1
  8120f0:	1800101e 	bne	r3,zero,812134 <median_cut+0x184>
  8120f4:	10c000a0 	cmpeqi	r3,r2,2
  8120f8:	18001b1e 	bne	r3,zero,812168 <median_cut+0x1b8>
  8120fc:	1000271e 	bne	r2,zero,81219c <median_cut+0x1ec>
  812100:	80c00117 	ldw	r3,4(r16)
  812104:	80800017 	ldw	r2,0(r16)
  812108:	1885883a 	add	r2,r3,r2
  81210c:	1006d7fa 	srli	r3,r2,31
  812110:	1885883a 	add	r2,r3,r2
  812114:	1005d07a 	srai	r2,r2,1
  812118:	e0bff915 	stw	r2,-28(fp)
  81211c:	e0bff917 	ldw	r2,-28(fp)
  812120:	80800115 	stw	r2,4(r16)
  812124:	e0bff917 	ldw	r2,-28(fp)
  812128:	10800044 	addi	r2,r2,1
  81212c:	88800015 	stw	r2,0(r17)
  812130:	00001a06 	br	81219c <median_cut+0x1ec>
  812134:	80c00317 	ldw	r3,12(r16)
  812138:	80800217 	ldw	r2,8(r16)
  81213c:	1885883a 	add	r2,r3,r2
  812140:	1006d7fa 	srli	r3,r2,31
  812144:	1885883a 	add	r2,r3,r2
  812148:	1005d07a 	srai	r2,r2,1
  81214c:	e0bff915 	stw	r2,-28(fp)
  812150:	e0bff917 	ldw	r2,-28(fp)
  812154:	80800315 	stw	r2,12(r16)
  812158:	e0bff917 	ldw	r2,-28(fp)
  81215c:	10800044 	addi	r2,r2,1
  812160:	88800215 	stw	r2,8(r17)
  812164:	00000d06 	br	81219c <median_cut+0x1ec>
  812168:	80c00517 	ldw	r3,20(r16)
  81216c:	80800417 	ldw	r2,16(r16)
  812170:	1885883a 	add	r2,r3,r2
  812174:	1006d7fa 	srli	r3,r2,31
  812178:	1885883a 	add	r2,r3,r2
  81217c:	1005d07a 	srai	r2,r2,1
  812180:	e0bff915 	stw	r2,-28(fp)
  812184:	e0bff917 	ldw	r2,-28(fp)
  812188:	80800515 	stw	r2,20(r16)
  81218c:	e0bff917 	ldw	r2,-28(fp)
  812190:	10800044 	addi	r2,r2,1
  812194:	88800415 	stw	r2,16(r17)
  812198:	0001883a 	nop
  81219c:	800b883a 	mov	r5,r16
  8121a0:	e13ffa17 	ldw	r4,-24(fp)
  8121a4:	08118680 	call	811868 <update_box>
  8121a8:	880b883a 	mov	r5,r17
  8121ac:	e13ffa17 	ldw	r4,-24(fp)
  8121b0:	08118680 	call	811868 <update_box>
  8121b4:	e0bffc17 	ldw	r2,-16(fp)
  8121b8:	10800044 	addi	r2,r2,1
  8121bc:	e0bffc15 	stw	r2,-16(fp)
  8121c0:	e0fffc17 	ldw	r3,-16(fp)
  8121c4:	e0bffd17 	ldw	r2,-12(fp)
  8121c8:	18bf8416 	blt	r3,r2,811fdc <__alt_mem_epcs_flash_controller_0+0xff808fdc>
  8121cc:	00000106 	br	8121d4 <median_cut+0x224>
  8121d0:	0001883a 	nop
  8121d4:	e0bffc17 	ldw	r2,-16(fp)
  8121d8:	e6fffe04 	addi	sp,fp,-8
  8121dc:	dfc00317 	ldw	ra,12(sp)
  8121e0:	df000217 	ldw	fp,8(sp)
  8121e4:	dc400117 	ldw	r17,4(sp)
  8121e8:	dc000017 	ldw	r16,0(sp)
  8121ec:	dec00404 	addi	sp,sp,16
  8121f0:	f800283a 	ret

008121f4 <compute_color>:
  8121f4:	deffe904 	addi	sp,sp,-92
  8121f8:	dfc01615 	stw	ra,88(sp)
  8121fc:	df001515 	stw	fp,84(sp)
  812200:	dc001415 	stw	r16,80(sp)
  812204:	df001504 	addi	fp,sp,84
  812208:	e13ffc15 	stw	r4,-16(fp)
  81220c:	e17ffd15 	stw	r5,-12(fp)
  812210:	e1bffe15 	stw	r6,-8(fp)
  812214:	e0bffc17 	ldw	r2,-16(fp)
  812218:	10807917 	ldw	r2,484(r2)
  81221c:	e0bff315 	stw	r2,-52(fp)
  812220:	e0bff317 	ldw	r2,-52(fp)
  812224:	10800617 	ldw	r2,24(r2)
  812228:	e0bff415 	stw	r2,-48(fp)
  81222c:	e03fef15 	stw	zero,-68(fp)
  812230:	e03ff015 	stw	zero,-64(fp)
  812234:	e03ff115 	stw	zero,-60(fp)
  812238:	e03ff215 	stw	zero,-56(fp)
  81223c:	e0bffd17 	ldw	r2,-12(fp)
  812240:	10800017 	ldw	r2,0(r2)
  812244:	e0bff515 	stw	r2,-44(fp)
  812248:	e0bffd17 	ldw	r2,-12(fp)
  81224c:	10800117 	ldw	r2,4(r2)
  812250:	e0bff615 	stw	r2,-40(fp)
  812254:	e0bffd17 	ldw	r2,-12(fp)
  812258:	10800217 	ldw	r2,8(r2)
  81225c:	e0bff715 	stw	r2,-36(fp)
  812260:	e0bffd17 	ldw	r2,-12(fp)
  812264:	10800317 	ldw	r2,12(r2)
  812268:	e0bff815 	stw	r2,-32(fp)
  81226c:	e0bffd17 	ldw	r2,-12(fp)
  812270:	10800417 	ldw	r2,16(r2)
  812274:	e0bff915 	stw	r2,-28(fp)
  812278:	e0bffd17 	ldw	r2,-12(fp)
  81227c:	10800517 	ldw	r2,20(r2)
  812280:	e0bffa15 	stw	r2,-24(fp)
  812284:	e0bff517 	ldw	r2,-44(fp)
  812288:	e0bfec15 	stw	r2,-80(fp)
  81228c:	00004e06 	br	8123c8 <compute_color+0x1d4>
  812290:	e0bff717 	ldw	r2,-36(fp)
  812294:	e0bfed15 	stw	r2,-76(fp)
  812298:	00004506 	br	8123b0 <compute_color+0x1bc>
  81229c:	e0bfec17 	ldw	r2,-80(fp)
  8122a0:	1085883a 	add	r2,r2,r2
  8122a4:	1085883a 	add	r2,r2,r2
  8122a8:	1007883a 	mov	r3,r2
  8122ac:	e0bff417 	ldw	r2,-48(fp)
  8122b0:	10c5883a 	add	r2,r2,r3
  8122b4:	10c00017 	ldw	r3,0(r2)
  8122b8:	e0bfed17 	ldw	r2,-76(fp)
  8122bc:	100491ba 	slli	r2,r2,6
  8122c0:	1887883a 	add	r3,r3,r2
  8122c4:	e0bff917 	ldw	r2,-28(fp)
  8122c8:	1085883a 	add	r2,r2,r2
  8122cc:	1885883a 	add	r2,r3,r2
  8122d0:	e0bfeb15 	stw	r2,-84(fp)
  8122d4:	e0bff917 	ldw	r2,-28(fp)
  8122d8:	e0bfee15 	stw	r2,-72(fp)
  8122dc:	00002e06 	br	812398 <compute_color+0x1a4>
  8122e0:	e0bfeb17 	ldw	r2,-84(fp)
  8122e4:	10c00084 	addi	r3,r2,2
  8122e8:	e0ffeb15 	stw	r3,-84(fp)
  8122ec:	1080000b 	ldhu	r2,0(r2)
  8122f0:	10bfffcc 	andi	r2,r2,65535
  8122f4:	e0bffb15 	stw	r2,-20(fp)
  8122f8:	e0bffb17 	ldw	r2,-20(fp)
  8122fc:	10002326 	beq	r2,zero,81238c <compute_color+0x198>
  812300:	e0ffef17 	ldw	r3,-68(fp)
  812304:	e0bffb17 	ldw	r2,-20(fp)
  812308:	1885883a 	add	r2,r3,r2
  81230c:	e0bfef15 	stw	r2,-68(fp)
  812310:	e0bfec17 	ldw	r2,-80(fp)
  812314:	100490fa 	slli	r2,r2,3
  812318:	10800104 	addi	r2,r2,4
  81231c:	e17ffb17 	ldw	r5,-20(fp)
  812320:	1009883a 	mov	r4,r2
  812324:	08305040 	call	830504 <__mulsi3>
  812328:	1007883a 	mov	r3,r2
  81232c:	e0bff017 	ldw	r2,-64(fp)
  812330:	10c5883a 	add	r2,r2,r3
  812334:	e0bff015 	stw	r2,-64(fp)
  812338:	e0bfed17 	ldw	r2,-76(fp)
  81233c:	1085883a 	add	r2,r2,r2
  812340:	1085883a 	add	r2,r2,r2
  812344:	10800084 	addi	r2,r2,2
  812348:	e17ffb17 	ldw	r5,-20(fp)
  81234c:	1009883a 	mov	r4,r2
  812350:	08305040 	call	830504 <__mulsi3>
  812354:	1007883a 	mov	r3,r2
  812358:	e0bff117 	ldw	r2,-60(fp)
  81235c:	10c5883a 	add	r2,r2,r3
  812360:	e0bff115 	stw	r2,-60(fp)
  812364:	e0bfee17 	ldw	r2,-72(fp)
  812368:	100490fa 	slli	r2,r2,3
  81236c:	10800104 	addi	r2,r2,4
  812370:	e17ffb17 	ldw	r5,-20(fp)
  812374:	1009883a 	mov	r4,r2
  812378:	08305040 	call	830504 <__mulsi3>
  81237c:	1007883a 	mov	r3,r2
  812380:	e0bff217 	ldw	r2,-56(fp)
  812384:	10c5883a 	add	r2,r2,r3
  812388:	e0bff215 	stw	r2,-56(fp)
  81238c:	e0bfee17 	ldw	r2,-72(fp)
  812390:	10800044 	addi	r2,r2,1
  812394:	e0bfee15 	stw	r2,-72(fp)
  812398:	e0bfee17 	ldw	r2,-72(fp)
  81239c:	e0fffa17 	ldw	r3,-24(fp)
  8123a0:	18bfcf0e 	bge	r3,r2,8122e0 <__alt_mem_epcs_flash_controller_0+0xff8092e0>
  8123a4:	e0bfed17 	ldw	r2,-76(fp)
  8123a8:	10800044 	addi	r2,r2,1
  8123ac:	e0bfed15 	stw	r2,-76(fp)
  8123b0:	e0bfed17 	ldw	r2,-76(fp)
  8123b4:	e0fff817 	ldw	r3,-32(fp)
  8123b8:	18bfb80e 	bge	r3,r2,81229c <__alt_mem_epcs_flash_controller_0+0xff80929c>
  8123bc:	e0bfec17 	ldw	r2,-80(fp)
  8123c0:	10800044 	addi	r2,r2,1
  8123c4:	e0bfec15 	stw	r2,-80(fp)
  8123c8:	e0bfec17 	ldw	r2,-80(fp)
  8123cc:	e0fff617 	ldw	r3,-40(fp)
  8123d0:	18bfaf0e 	bge	r3,r2,812290 <__alt_mem_epcs_flash_controller_0+0xff809290>
  8123d4:	e0bffc17 	ldw	r2,-16(fp)
  8123d8:	10802217 	ldw	r2,136(r2)
  8123dc:	10c00017 	ldw	r3,0(r2)
  8123e0:	e0bffe17 	ldw	r2,-8(fp)
  8123e4:	18a1883a 	add	r16,r3,r2
  8123e8:	e0bfef17 	ldw	r2,-68(fp)
  8123ec:	1007d07a 	srai	r3,r2,1
  8123f0:	e0bff017 	ldw	r2,-64(fp)
  8123f4:	1885883a 	add	r2,r3,r2
  8123f8:	e17fef17 	ldw	r5,-68(fp)
  8123fc:	1009883a 	mov	r4,r2
  812400:	08303500 	call	830350 <__divsi3>
  812404:	80800005 	stb	r2,0(r16)
  812408:	e0bffc17 	ldw	r2,-16(fp)
  81240c:	10802217 	ldw	r2,136(r2)
  812410:	10800104 	addi	r2,r2,4
  812414:	10c00017 	ldw	r3,0(r2)
  812418:	e0bffe17 	ldw	r2,-8(fp)
  81241c:	18a1883a 	add	r16,r3,r2
  812420:	e0bfef17 	ldw	r2,-68(fp)
  812424:	1007d07a 	srai	r3,r2,1
  812428:	e0bff117 	ldw	r2,-60(fp)
  81242c:	1885883a 	add	r2,r3,r2
  812430:	e17fef17 	ldw	r5,-68(fp)
  812434:	1009883a 	mov	r4,r2
  812438:	08303500 	call	830350 <__divsi3>
  81243c:	80800005 	stb	r2,0(r16)
  812440:	e0bffc17 	ldw	r2,-16(fp)
  812444:	10802217 	ldw	r2,136(r2)
  812448:	10800204 	addi	r2,r2,8
  81244c:	10c00017 	ldw	r3,0(r2)
  812450:	e0bffe17 	ldw	r2,-8(fp)
  812454:	18a1883a 	add	r16,r3,r2
  812458:	e0bfef17 	ldw	r2,-68(fp)
  81245c:	1007d07a 	srai	r3,r2,1
  812460:	e0bff217 	ldw	r2,-56(fp)
  812464:	1885883a 	add	r2,r3,r2
  812468:	e17fef17 	ldw	r5,-68(fp)
  81246c:	1009883a 	mov	r4,r2
  812470:	08303500 	call	830350 <__divsi3>
  812474:	80800005 	stb	r2,0(r16)
  812478:	0001883a 	nop
  81247c:	e6ffff04 	addi	sp,fp,-4
  812480:	dfc00217 	ldw	ra,8(sp)
  812484:	df000117 	ldw	fp,4(sp)
  812488:	dc000017 	ldw	r16,0(sp)
  81248c:	dec00304 	addi	sp,sp,12
  812490:	f800283a 	ret

00812494 <select_colors>:
  812494:	defff904 	addi	sp,sp,-28
  812498:	dfc00615 	stw	ra,24(sp)
  81249c:	df000515 	stw	fp,20(sp)
  8124a0:	df000504 	addi	fp,sp,20
  8124a4:	e13ffe15 	stw	r4,-8(fp)
  8124a8:	e17fff15 	stw	r5,-4(fp)
  8124ac:	e0bffe17 	ldw	r2,-8(fp)
  8124b0:	10800117 	ldw	r2,4(r2)
  8124b4:	10800017 	ldw	r2,0(r2)
  8124b8:	e0ffff17 	ldw	r3,-4(fp)
  8124bc:	1806917a 	slli	r3,r3,5
  8124c0:	180d883a 	mov	r6,r3
  8124c4:	01400044 	movi	r5,1
  8124c8:	e13ffe17 	ldw	r4,-8(fp)
  8124cc:	103ee83a 	callr	r2
  8124d0:	e0bffc15 	stw	r2,-16(fp)
  8124d4:	00800044 	movi	r2,1
  8124d8:	e0bffd15 	stw	r2,-12(fp)
  8124dc:	e0bffc17 	ldw	r2,-16(fp)
  8124e0:	10000015 	stw	zero,0(r2)
  8124e4:	e0bffc17 	ldw	r2,-16(fp)
  8124e8:	00c007c4 	movi	r3,31
  8124ec:	10c00115 	stw	r3,4(r2)
  8124f0:	e0bffc17 	ldw	r2,-16(fp)
  8124f4:	10000215 	stw	zero,8(r2)
  8124f8:	e0bffc17 	ldw	r2,-16(fp)
  8124fc:	00c00fc4 	movi	r3,63
  812500:	10c00315 	stw	r3,12(r2)
  812504:	e0bffc17 	ldw	r2,-16(fp)
  812508:	10000415 	stw	zero,16(r2)
  81250c:	e0bffc17 	ldw	r2,-16(fp)
  812510:	00c007c4 	movi	r3,31
  812514:	10c00515 	stw	r3,20(r2)
  812518:	e17ffc17 	ldw	r5,-16(fp)
  81251c:	e13ffe17 	ldw	r4,-8(fp)
  812520:	08118680 	call	811868 <update_box>
  812524:	e1ffff17 	ldw	r7,-4(fp)
  812528:	e1bffd17 	ldw	r6,-12(fp)
  81252c:	e17ffc17 	ldw	r5,-16(fp)
  812530:	e13ffe17 	ldw	r4,-8(fp)
  812534:	0811fb00 	call	811fb0 <median_cut>
  812538:	e0bffd15 	stw	r2,-12(fp)
  81253c:	e03ffb15 	stw	zero,-20(fp)
  812540:	00000b06 	br	812570 <select_colors+0xdc>
  812544:	e0bffb17 	ldw	r2,-20(fp)
  812548:	1004917a 	slli	r2,r2,5
  81254c:	e0fffc17 	ldw	r3,-16(fp)
  812550:	1885883a 	add	r2,r3,r2
  812554:	e1bffb17 	ldw	r6,-20(fp)
  812558:	100b883a 	mov	r5,r2
  81255c:	e13ffe17 	ldw	r4,-8(fp)
  812560:	08121f40 	call	8121f4 <compute_color>
  812564:	e0bffb17 	ldw	r2,-20(fp)
  812568:	10800044 	addi	r2,r2,1
  81256c:	e0bffb15 	stw	r2,-20(fp)
  812570:	e0fffb17 	ldw	r3,-20(fp)
  812574:	e0bffd17 	ldw	r2,-12(fp)
  812578:	18bff216 	blt	r3,r2,812544 <__alt_mem_epcs_flash_controller_0+0xff809544>
  81257c:	e0bffe17 	ldw	r2,-8(fp)
  812580:	e0fffd17 	ldw	r3,-12(fp)
  812584:	10c02115 	stw	r3,132(r2)
  812588:	e0bffe17 	ldw	r2,-8(fp)
  81258c:	10800017 	ldw	r2,0(r2)
  812590:	00c01884 	movi	r3,98
  812594:	10c00515 	stw	r3,20(r2)
  812598:	e0bffe17 	ldw	r2,-8(fp)
  81259c:	10800017 	ldw	r2,0(r2)
  8125a0:	e0fffd17 	ldw	r3,-12(fp)
  8125a4:	10c00615 	stw	r3,24(r2)
  8125a8:	e0bffe17 	ldw	r2,-8(fp)
  8125ac:	10800017 	ldw	r2,0(r2)
  8125b0:	10800117 	ldw	r2,4(r2)
  8125b4:	01400044 	movi	r5,1
  8125b8:	e13ffe17 	ldw	r4,-8(fp)
  8125bc:	103ee83a 	callr	r2
  8125c0:	0001883a 	nop
  8125c4:	e037883a 	mov	sp,fp
  8125c8:	dfc00117 	ldw	ra,4(sp)
  8125cc:	df000017 	ldw	fp,0(sp)
  8125d0:	dec00204 	addi	sp,sp,8
  8125d4:	f800283a 	ret

008125d8 <find_nearby_colors>:
  8125d8:	defeec04 	addi	sp,sp,-1104
  8125dc:	dfc11315 	stw	ra,1100(sp)
  8125e0:	df011215 	stw	fp,1096(sp)
  8125e4:	df011204 	addi	fp,sp,1096
  8125e8:	e13ffc15 	stw	r4,-16(fp)
  8125ec:	e17ffd15 	stw	r5,-12(fp)
  8125f0:	e1bffe15 	stw	r6,-8(fp)
  8125f4:	e1ffff15 	stw	r7,-4(fp)
  8125f8:	e0bffc17 	ldw	r2,-16(fp)
  8125fc:	10802117 	ldw	r2,132(r2)
  812600:	e0bef315 	stw	r2,-1076(fp)
  812604:	e0bffd17 	ldw	r2,-12(fp)
  812608:	10800604 	addi	r2,r2,24
  81260c:	e0bef415 	stw	r2,-1072(fp)
  812610:	e0fffd17 	ldw	r3,-12(fp)
  812614:	e0bef417 	ldw	r2,-1072(fp)
  812618:	1885883a 	add	r2,r3,r2
  81261c:	1005d07a 	srai	r2,r2,1
  812620:	e0bef515 	stw	r2,-1068(fp)
  812624:	e0bffe17 	ldw	r2,-8(fp)
  812628:	10800704 	addi	r2,r2,28
  81262c:	e0bef615 	stw	r2,-1064(fp)
  812630:	e0fffe17 	ldw	r3,-8(fp)
  812634:	e0bef617 	ldw	r2,-1064(fp)
  812638:	1885883a 	add	r2,r3,r2
  81263c:	1005d07a 	srai	r2,r2,1
  812640:	e0bef715 	stw	r2,-1060(fp)
  812644:	e0bfff17 	ldw	r2,-4(fp)
  812648:	10800604 	addi	r2,r2,24
  81264c:	e0bef815 	stw	r2,-1056(fp)
  812650:	e0ffff17 	ldw	r3,-4(fp)
  812654:	e0bef817 	ldw	r2,-1056(fp)
  812658:	1885883a 	add	r2,r3,r2
  81265c:	1005d07a 	srai	r2,r2,1
  812660:	e0bef915 	stw	r2,-1052(fp)
  812664:	00a00034 	movhi	r2,32768
  812668:	10bfffc4 	addi	r2,r2,-1
  81266c:	e0bef015 	stw	r2,-1088(fp)
  812670:	e03eee15 	stw	zero,-1096(fp)
  812674:	00011b06 	br	812ae4 <find_nearby_colors+0x50c>
  812678:	e0bffc17 	ldw	r2,-16(fp)
  81267c:	10802217 	ldw	r2,136(r2)
  812680:	10c00017 	ldw	r3,0(r2)
  812684:	e0beee17 	ldw	r2,-1096(fp)
  812688:	1885883a 	add	r2,r3,r2
  81268c:	10800003 	ldbu	r2,0(r2)
  812690:	10803fcc 	andi	r2,r2,255
  812694:	e0befa15 	stw	r2,-1048(fp)
  812698:	e0fefa17 	ldw	r3,-1048(fp)
  81269c:	e0bffd17 	ldw	r2,-12(fp)
  8126a0:	1880130e 	bge	r3,r2,8126f0 <find_nearby_colors+0x118>
  8126a4:	e0fefa17 	ldw	r3,-1048(fp)
  8126a8:	e0bffd17 	ldw	r2,-12(fp)
  8126ac:	1885c83a 	sub	r2,r3,r2
  8126b0:	1085883a 	add	r2,r2,r2
  8126b4:	e0befb15 	stw	r2,-1044(fp)
  8126b8:	e17efb17 	ldw	r5,-1044(fp)
  8126bc:	e13efb17 	ldw	r4,-1044(fp)
  8126c0:	08305040 	call	830504 <__mulsi3>
  8126c4:	e0bef115 	stw	r2,-1084(fp)
  8126c8:	e0fefa17 	ldw	r3,-1048(fp)
  8126cc:	e0bef417 	ldw	r2,-1072(fp)
  8126d0:	1885c83a 	sub	r2,r3,r2
  8126d4:	1085883a 	add	r2,r2,r2
  8126d8:	e0befb15 	stw	r2,-1044(fp)
  8126dc:	e17efb17 	ldw	r5,-1044(fp)
  8126e0:	e13efb17 	ldw	r4,-1044(fp)
  8126e4:	08305040 	call	830504 <__mulsi3>
  8126e8:	e0bef215 	stw	r2,-1080(fp)
  8126ec:	00002d06 	br	8127a4 <find_nearby_colors+0x1cc>
  8126f0:	e0befa17 	ldw	r2,-1048(fp)
  8126f4:	e0fef417 	ldw	r3,-1072(fp)
  8126f8:	1880130e 	bge	r3,r2,812748 <find_nearby_colors+0x170>
  8126fc:	e0fefa17 	ldw	r3,-1048(fp)
  812700:	e0bef417 	ldw	r2,-1072(fp)
  812704:	1885c83a 	sub	r2,r3,r2
  812708:	1085883a 	add	r2,r2,r2
  81270c:	e0befb15 	stw	r2,-1044(fp)
  812710:	e17efb17 	ldw	r5,-1044(fp)
  812714:	e13efb17 	ldw	r4,-1044(fp)
  812718:	08305040 	call	830504 <__mulsi3>
  81271c:	e0bef115 	stw	r2,-1084(fp)
  812720:	e0fefa17 	ldw	r3,-1048(fp)
  812724:	e0bffd17 	ldw	r2,-12(fp)
  812728:	1885c83a 	sub	r2,r3,r2
  81272c:	1085883a 	add	r2,r2,r2
  812730:	e0befb15 	stw	r2,-1044(fp)
  812734:	e17efb17 	ldw	r5,-1044(fp)
  812738:	e13efb17 	ldw	r4,-1044(fp)
  81273c:	08305040 	call	830504 <__mulsi3>
  812740:	e0bef215 	stw	r2,-1080(fp)
  812744:	00001706 	br	8127a4 <find_nearby_colors+0x1cc>
  812748:	e03ef115 	stw	zero,-1084(fp)
  81274c:	e0befa17 	ldw	r2,-1048(fp)
  812750:	e0fef517 	ldw	r3,-1068(fp)
  812754:	18800a16 	blt	r3,r2,812780 <find_nearby_colors+0x1a8>
  812758:	e0fefa17 	ldw	r3,-1048(fp)
  81275c:	e0bef417 	ldw	r2,-1072(fp)
  812760:	1885c83a 	sub	r2,r3,r2
  812764:	1085883a 	add	r2,r2,r2
  812768:	e0befb15 	stw	r2,-1044(fp)
  81276c:	e17efb17 	ldw	r5,-1044(fp)
  812770:	e13efb17 	ldw	r4,-1044(fp)
  812774:	08305040 	call	830504 <__mulsi3>
  812778:	e0bef215 	stw	r2,-1080(fp)
  81277c:	00000906 	br	8127a4 <find_nearby_colors+0x1cc>
  812780:	e0fefa17 	ldw	r3,-1048(fp)
  812784:	e0bffd17 	ldw	r2,-12(fp)
  812788:	1885c83a 	sub	r2,r3,r2
  81278c:	1085883a 	add	r2,r2,r2
  812790:	e0befb15 	stw	r2,-1044(fp)
  812794:	e17efb17 	ldw	r5,-1044(fp)
  812798:	e13efb17 	ldw	r4,-1044(fp)
  81279c:	08305040 	call	830504 <__mulsi3>
  8127a0:	e0bef215 	stw	r2,-1080(fp)
  8127a4:	e0bffc17 	ldw	r2,-16(fp)
  8127a8:	10802217 	ldw	r2,136(r2)
  8127ac:	10800104 	addi	r2,r2,4
  8127b0:	10c00017 	ldw	r3,0(r2)
  8127b4:	e0beee17 	ldw	r2,-1096(fp)
  8127b8:	1885883a 	add	r2,r3,r2
  8127bc:	10800003 	ldbu	r2,0(r2)
  8127c0:	10803fcc 	andi	r2,r2,255
  8127c4:	e0befa15 	stw	r2,-1048(fp)
  8127c8:	e0fefa17 	ldw	r3,-1048(fp)
  8127cc:	e0bffe17 	ldw	r2,-8(fp)
  8127d0:	18801d0e 	bge	r3,r2,812848 <find_nearby_colors+0x270>
  8127d4:	e0fefa17 	ldw	r3,-1048(fp)
  8127d8:	e0bffe17 	ldw	r2,-8(fp)
  8127dc:	1887c83a 	sub	r3,r3,r2
  8127e0:	1805883a 	mov	r2,r3
  8127e4:	1085883a 	add	r2,r2,r2
  8127e8:	10c5883a 	add	r2,r2,r3
  8127ec:	e0befb15 	stw	r2,-1044(fp)
  8127f0:	e17efb17 	ldw	r5,-1044(fp)
  8127f4:	e13efb17 	ldw	r4,-1044(fp)
  8127f8:	08305040 	call	830504 <__mulsi3>
  8127fc:	1007883a 	mov	r3,r2
  812800:	e0bef117 	ldw	r2,-1084(fp)
  812804:	10c5883a 	add	r2,r2,r3
  812808:	e0bef115 	stw	r2,-1084(fp)
  81280c:	e0fefa17 	ldw	r3,-1048(fp)
  812810:	e0bef617 	ldw	r2,-1064(fp)
  812814:	1887c83a 	sub	r3,r3,r2
  812818:	1805883a 	mov	r2,r3
  81281c:	1085883a 	add	r2,r2,r2
  812820:	10c5883a 	add	r2,r2,r3
  812824:	e0befb15 	stw	r2,-1044(fp)
  812828:	e17efb17 	ldw	r5,-1044(fp)
  81282c:	e13efb17 	ldw	r4,-1044(fp)
  812830:	08305040 	call	830504 <__mulsi3>
  812834:	1007883a 	mov	r3,r2
  812838:	e0bef217 	ldw	r2,-1080(fp)
  81283c:	10c5883a 	add	r2,r2,r3
  812840:	e0bef215 	stw	r2,-1080(fp)
  812844:	00004006 	br	812948 <find_nearby_colors+0x370>
  812848:	e0befa17 	ldw	r2,-1048(fp)
  81284c:	e0fef617 	ldw	r3,-1064(fp)
  812850:	18801d0e 	bge	r3,r2,8128c8 <find_nearby_colors+0x2f0>
  812854:	e0fefa17 	ldw	r3,-1048(fp)
  812858:	e0bef617 	ldw	r2,-1064(fp)
  81285c:	1887c83a 	sub	r3,r3,r2
  812860:	1805883a 	mov	r2,r3
  812864:	1085883a 	add	r2,r2,r2
  812868:	10c5883a 	add	r2,r2,r3
  81286c:	e0befb15 	stw	r2,-1044(fp)
  812870:	e17efb17 	ldw	r5,-1044(fp)
  812874:	e13efb17 	ldw	r4,-1044(fp)
  812878:	08305040 	call	830504 <__mulsi3>
  81287c:	1007883a 	mov	r3,r2
  812880:	e0bef117 	ldw	r2,-1084(fp)
  812884:	10c5883a 	add	r2,r2,r3
  812888:	e0bef115 	stw	r2,-1084(fp)
  81288c:	e0fefa17 	ldw	r3,-1048(fp)
  812890:	e0bffe17 	ldw	r2,-8(fp)
  812894:	1887c83a 	sub	r3,r3,r2
  812898:	1805883a 	mov	r2,r3
  81289c:	1085883a 	add	r2,r2,r2
  8128a0:	10c5883a 	add	r2,r2,r3
  8128a4:	e0befb15 	stw	r2,-1044(fp)
  8128a8:	e17efb17 	ldw	r5,-1044(fp)
  8128ac:	e13efb17 	ldw	r4,-1044(fp)
  8128b0:	08305040 	call	830504 <__mulsi3>
  8128b4:	1007883a 	mov	r3,r2
  8128b8:	e0bef217 	ldw	r2,-1080(fp)
  8128bc:	10c5883a 	add	r2,r2,r3
  8128c0:	e0bef215 	stw	r2,-1080(fp)
  8128c4:	00002006 	br	812948 <find_nearby_colors+0x370>
  8128c8:	e0befa17 	ldw	r2,-1048(fp)
  8128cc:	e0fef717 	ldw	r3,-1060(fp)
  8128d0:	18800f16 	blt	r3,r2,812910 <find_nearby_colors+0x338>
  8128d4:	e0fefa17 	ldw	r3,-1048(fp)
  8128d8:	e0bef617 	ldw	r2,-1064(fp)
  8128dc:	1887c83a 	sub	r3,r3,r2
  8128e0:	1805883a 	mov	r2,r3
  8128e4:	1085883a 	add	r2,r2,r2
  8128e8:	10c5883a 	add	r2,r2,r3
  8128ec:	e0befb15 	stw	r2,-1044(fp)
  8128f0:	e17efb17 	ldw	r5,-1044(fp)
  8128f4:	e13efb17 	ldw	r4,-1044(fp)
  8128f8:	08305040 	call	830504 <__mulsi3>
  8128fc:	1007883a 	mov	r3,r2
  812900:	e0bef217 	ldw	r2,-1080(fp)
  812904:	10c5883a 	add	r2,r2,r3
  812908:	e0bef215 	stw	r2,-1080(fp)
  81290c:	00000e06 	br	812948 <find_nearby_colors+0x370>
  812910:	e0fefa17 	ldw	r3,-1048(fp)
  812914:	e0bffe17 	ldw	r2,-8(fp)
  812918:	1887c83a 	sub	r3,r3,r2
  81291c:	1805883a 	mov	r2,r3
  812920:	1085883a 	add	r2,r2,r2
  812924:	10c5883a 	add	r2,r2,r3
  812928:	e0befb15 	stw	r2,-1044(fp)
  81292c:	e17efb17 	ldw	r5,-1044(fp)
  812930:	e13efb17 	ldw	r4,-1044(fp)
  812934:	08305040 	call	830504 <__mulsi3>
  812938:	1007883a 	mov	r3,r2
  81293c:	e0bef217 	ldw	r2,-1080(fp)
  812940:	10c5883a 	add	r2,r2,r3
  812944:	e0bef215 	stw	r2,-1080(fp)
  812948:	e0bffc17 	ldw	r2,-16(fp)
  81294c:	10802217 	ldw	r2,136(r2)
  812950:	10800204 	addi	r2,r2,8
  812954:	10c00017 	ldw	r3,0(r2)
  812958:	e0beee17 	ldw	r2,-1096(fp)
  81295c:	1885883a 	add	r2,r3,r2
  812960:	10800003 	ldbu	r2,0(r2)
  812964:	10803fcc 	andi	r2,r2,255
  812968:	e0befa15 	stw	r2,-1048(fp)
  81296c:	e0fefa17 	ldw	r3,-1048(fp)
  812970:	e0bfff17 	ldw	r2,-4(fp)
  812974:	1880170e 	bge	r3,r2,8129d4 <find_nearby_colors+0x3fc>
  812978:	e0fefa17 	ldw	r3,-1048(fp)
  81297c:	e0bfff17 	ldw	r2,-4(fp)
  812980:	1885c83a 	sub	r2,r3,r2
  812984:	e0befb15 	stw	r2,-1044(fp)
  812988:	e17efb17 	ldw	r5,-1044(fp)
  81298c:	e13efb17 	ldw	r4,-1044(fp)
  812990:	08305040 	call	830504 <__mulsi3>
  812994:	1007883a 	mov	r3,r2
  812998:	e0bef117 	ldw	r2,-1084(fp)
  81299c:	10c5883a 	add	r2,r2,r3
  8129a0:	e0bef115 	stw	r2,-1084(fp)
  8129a4:	e0fefa17 	ldw	r3,-1048(fp)
  8129a8:	e0bef817 	ldw	r2,-1056(fp)
  8129ac:	1885c83a 	sub	r2,r3,r2
  8129b0:	e0befb15 	stw	r2,-1044(fp)
  8129b4:	e17efb17 	ldw	r5,-1044(fp)
  8129b8:	e13efb17 	ldw	r4,-1044(fp)
  8129bc:	08305040 	call	830504 <__mulsi3>
  8129c0:	1007883a 	mov	r3,r2
  8129c4:	e0bef217 	ldw	r2,-1080(fp)
  8129c8:	10c5883a 	add	r2,r2,r3
  8129cc:	e0bef215 	stw	r2,-1080(fp)
  8129d0:	00003406 	br	812aa4 <find_nearby_colors+0x4cc>
  8129d4:	e0befa17 	ldw	r2,-1048(fp)
  8129d8:	e0fef817 	ldw	r3,-1056(fp)
  8129dc:	1880170e 	bge	r3,r2,812a3c <find_nearby_colors+0x464>
  8129e0:	e0fefa17 	ldw	r3,-1048(fp)
  8129e4:	e0bef817 	ldw	r2,-1056(fp)
  8129e8:	1885c83a 	sub	r2,r3,r2
  8129ec:	e0befb15 	stw	r2,-1044(fp)
  8129f0:	e17efb17 	ldw	r5,-1044(fp)
  8129f4:	e13efb17 	ldw	r4,-1044(fp)
  8129f8:	08305040 	call	830504 <__mulsi3>
  8129fc:	1007883a 	mov	r3,r2
  812a00:	e0bef117 	ldw	r2,-1084(fp)
  812a04:	10c5883a 	add	r2,r2,r3
  812a08:	e0bef115 	stw	r2,-1084(fp)
  812a0c:	e0fefa17 	ldw	r3,-1048(fp)
  812a10:	e0bfff17 	ldw	r2,-4(fp)
  812a14:	1885c83a 	sub	r2,r3,r2
  812a18:	e0befb15 	stw	r2,-1044(fp)
  812a1c:	e17efb17 	ldw	r5,-1044(fp)
  812a20:	e13efb17 	ldw	r4,-1044(fp)
  812a24:	08305040 	call	830504 <__mulsi3>
  812a28:	1007883a 	mov	r3,r2
  812a2c:	e0bef217 	ldw	r2,-1080(fp)
  812a30:	10c5883a 	add	r2,r2,r3
  812a34:	e0bef215 	stw	r2,-1080(fp)
  812a38:	00001a06 	br	812aa4 <find_nearby_colors+0x4cc>
  812a3c:	e0befa17 	ldw	r2,-1048(fp)
  812a40:	e0fef917 	ldw	r3,-1052(fp)
  812a44:	18800c16 	blt	r3,r2,812a78 <find_nearby_colors+0x4a0>
  812a48:	e0fefa17 	ldw	r3,-1048(fp)
  812a4c:	e0bef817 	ldw	r2,-1056(fp)
  812a50:	1885c83a 	sub	r2,r3,r2
  812a54:	e0befb15 	stw	r2,-1044(fp)
  812a58:	e17efb17 	ldw	r5,-1044(fp)
  812a5c:	e13efb17 	ldw	r4,-1044(fp)
  812a60:	08305040 	call	830504 <__mulsi3>
  812a64:	1007883a 	mov	r3,r2
  812a68:	e0bef217 	ldw	r2,-1080(fp)
  812a6c:	10c5883a 	add	r2,r2,r3
  812a70:	e0bef215 	stw	r2,-1080(fp)
  812a74:	00000b06 	br	812aa4 <find_nearby_colors+0x4cc>
  812a78:	e0fefa17 	ldw	r3,-1048(fp)
  812a7c:	e0bfff17 	ldw	r2,-4(fp)
  812a80:	1885c83a 	sub	r2,r3,r2
  812a84:	e0befb15 	stw	r2,-1044(fp)
  812a88:	e17efb17 	ldw	r5,-1044(fp)
  812a8c:	e13efb17 	ldw	r4,-1044(fp)
  812a90:	08305040 	call	830504 <__mulsi3>
  812a94:	1007883a 	mov	r3,r2
  812a98:	e0bef217 	ldw	r2,-1080(fp)
  812a9c:	10c5883a 	add	r2,r2,r3
  812aa0:	e0bef215 	stw	r2,-1080(fp)
  812aa4:	e0beee17 	ldw	r2,-1096(fp)
  812aa8:	1085883a 	add	r2,r2,r2
  812aac:	1085883a 	add	r2,r2,r2
  812ab0:	e0feee04 	addi	r3,fp,-1096
  812ab4:	1885883a 	add	r2,r3,r2
  812ab8:	10800e04 	addi	r2,r2,56
  812abc:	e0fef117 	ldw	r3,-1084(fp)
  812ac0:	10c00015 	stw	r3,0(r2)
  812ac4:	e0fef217 	ldw	r3,-1080(fp)
  812ac8:	e0bef017 	ldw	r2,-1088(fp)
  812acc:	1880020e 	bge	r3,r2,812ad8 <find_nearby_colors+0x500>
  812ad0:	e0bef217 	ldw	r2,-1080(fp)
  812ad4:	e0bef015 	stw	r2,-1088(fp)
  812ad8:	e0beee17 	ldw	r2,-1096(fp)
  812adc:	10800044 	addi	r2,r2,1
  812ae0:	e0beee15 	stw	r2,-1096(fp)
  812ae4:	e0feee17 	ldw	r3,-1096(fp)
  812ae8:	e0bef317 	ldw	r2,-1076(fp)
  812aec:	18bee216 	blt	r3,r2,812678 <__alt_mem_epcs_flash_controller_0+0xff809678>
  812af0:	e03eef15 	stw	zero,-1092(fp)
  812af4:	e03eee15 	stw	zero,-1096(fp)
  812af8:	00001406 	br	812b4c <find_nearby_colors+0x574>
  812afc:	e0beee17 	ldw	r2,-1096(fp)
  812b00:	1085883a 	add	r2,r2,r2
  812b04:	1085883a 	add	r2,r2,r2
  812b08:	e0feee04 	addi	r3,fp,-1096
  812b0c:	1885883a 	add	r2,r3,r2
  812b10:	10800e04 	addi	r2,r2,56
  812b14:	10800017 	ldw	r2,0(r2)
  812b18:	e0fef017 	ldw	r3,-1088(fp)
  812b1c:	18800816 	blt	r3,r2,812b40 <find_nearby_colors+0x568>
  812b20:	e0beef17 	ldw	r2,-1092(fp)
  812b24:	10c00044 	addi	r3,r2,1
  812b28:	e0feef15 	stw	r3,-1092(fp)
  812b2c:	1007883a 	mov	r3,r2
  812b30:	e0800217 	ldw	r2,8(fp)
  812b34:	10c5883a 	add	r2,r2,r3
  812b38:	e0feee17 	ldw	r3,-1096(fp)
  812b3c:	10c00005 	stb	r3,0(r2)
  812b40:	e0beee17 	ldw	r2,-1096(fp)
  812b44:	10800044 	addi	r2,r2,1
  812b48:	e0beee15 	stw	r2,-1096(fp)
  812b4c:	e0feee17 	ldw	r3,-1096(fp)
  812b50:	e0bef317 	ldw	r2,-1076(fp)
  812b54:	18bfe916 	blt	r3,r2,812afc <__alt_mem_epcs_flash_controller_0+0xff809afc>
  812b58:	e0beef17 	ldw	r2,-1092(fp)
  812b5c:	e037883a 	mov	sp,fp
  812b60:	dfc00117 	ldw	ra,4(sp)
  812b64:	df000017 	ldw	fp,0(sp)
  812b68:	dec00204 	addi	sp,sp,8
  812b6c:	f800283a 	ret

00812b70 <find_best_colors>:
  812b70:	deff6a04 	addi	sp,sp,-600
  812b74:	dfc09515 	stw	ra,596(sp)
  812b78:	df009415 	stw	fp,592(sp)
  812b7c:	dc809315 	stw	r18,588(sp)
  812b80:	dc409215 	stw	r17,584(sp)
  812b84:	dc009115 	stw	r16,580(sp)
  812b88:	df009404 	addi	fp,sp,592
  812b8c:	e13ff915 	stw	r4,-28(fp)
  812b90:	e17ffa15 	stw	r5,-24(fp)
  812b94:	e1bffb15 	stw	r6,-20(fp)
  812b98:	e1fffc15 	stw	r7,-16(fp)
  812b9c:	e43f7904 	addi	r16,fp,-540
  812ba0:	00801fc4 	movi	r2,127
  812ba4:	e0bf6f15 	stw	r2,-580(fp)
  812ba8:	00000806 	br	812bcc <find_best_colors+0x5c>
  812bac:	8007883a 	mov	r3,r16
  812bb0:	1c000104 	addi	r16,r3,4
  812bb4:	00a00034 	movhi	r2,32768
  812bb8:	10bfffc4 	addi	r2,r2,-1
  812bbc:	18800015 	stw	r2,0(r3)
  812bc0:	e0bf6f17 	ldw	r2,-580(fp)
  812bc4:	10bfffc4 	addi	r2,r2,-1
  812bc8:	e0bf6f15 	stw	r2,-580(fp)
  812bcc:	e0bf6f17 	ldw	r2,-580(fp)
  812bd0:	103ff60e 	bge	r2,zero,812bac <__alt_mem_epcs_flash_controller_0+0xff809bac>
  812bd4:	e03f6f15 	stw	zero,-580(fp)
  812bd8:	00008a06 	br	812e04 <find_best_colors+0x294>
  812bdc:	e0bf6f17 	ldw	r2,-580(fp)
  812be0:	e0c00317 	ldw	r3,12(fp)
  812be4:	1885883a 	add	r2,r3,r2
  812be8:	10800003 	ldbu	r2,0(r2)
  812bec:	10803fcc 	andi	r2,r2,255
  812bf0:	e0bf7515 	stw	r2,-556(fp)
  812bf4:	e0bff917 	ldw	r2,-28(fp)
  812bf8:	10802217 	ldw	r2,136(r2)
  812bfc:	10c00017 	ldw	r3,0(r2)
  812c00:	e0bf7517 	ldw	r2,-556(fp)
  812c04:	1885883a 	add	r2,r3,r2
  812c08:	10800003 	ldbu	r2,0(r2)
  812c0c:	10803fcc 	andi	r2,r2,255
  812c10:	e0fffa17 	ldw	r3,-24(fp)
  812c14:	1885c83a 	sub	r2,r3,r2
  812c18:	1085883a 	add	r2,r2,r2
  812c1c:	e0bf7615 	stw	r2,-552(fp)
  812c20:	e17f7617 	ldw	r5,-552(fp)
  812c24:	e13f7617 	ldw	r4,-552(fp)
  812c28:	08305040 	call	830504 <__mulsi3>
  812c2c:	e0bf7115 	stw	r2,-572(fp)
  812c30:	e0bff917 	ldw	r2,-28(fp)
  812c34:	10802217 	ldw	r2,136(r2)
  812c38:	10800104 	addi	r2,r2,4
  812c3c:	10c00017 	ldw	r3,0(r2)
  812c40:	e0bf7517 	ldw	r2,-556(fp)
  812c44:	1885883a 	add	r2,r3,r2
  812c48:	10800003 	ldbu	r2,0(r2)
  812c4c:	10803fcc 	andi	r2,r2,255
  812c50:	e0fffb17 	ldw	r3,-20(fp)
  812c54:	1887c83a 	sub	r3,r3,r2
  812c58:	1805883a 	mov	r2,r3
  812c5c:	1085883a 	add	r2,r2,r2
  812c60:	10c5883a 	add	r2,r2,r3
  812c64:	e0bf7715 	stw	r2,-548(fp)
  812c68:	e17f7717 	ldw	r5,-548(fp)
  812c6c:	e13f7717 	ldw	r4,-548(fp)
  812c70:	08305040 	call	830504 <__mulsi3>
  812c74:	1007883a 	mov	r3,r2
  812c78:	e0bf7117 	ldw	r2,-572(fp)
  812c7c:	10c5883a 	add	r2,r2,r3
  812c80:	e0bf7115 	stw	r2,-572(fp)
  812c84:	e0bff917 	ldw	r2,-28(fp)
  812c88:	10802217 	ldw	r2,136(r2)
  812c8c:	10800204 	addi	r2,r2,8
  812c90:	10c00017 	ldw	r3,0(r2)
  812c94:	e0bf7517 	ldw	r2,-556(fp)
  812c98:	1885883a 	add	r2,r3,r2
  812c9c:	10800003 	ldbu	r2,0(r2)
  812ca0:	10803fcc 	andi	r2,r2,255
  812ca4:	e0fffc17 	ldw	r3,-16(fp)
  812ca8:	1885c83a 	sub	r2,r3,r2
  812cac:	e0bf7815 	stw	r2,-544(fp)
  812cb0:	e17f7817 	ldw	r5,-544(fp)
  812cb4:	e13f7817 	ldw	r4,-544(fp)
  812cb8:	08305040 	call	830504 <__mulsi3>
  812cbc:	1007883a 	mov	r3,r2
  812cc0:	e0bf7117 	ldw	r2,-572(fp)
  812cc4:	10c5883a 	add	r2,r2,r3
  812cc8:	e0bf7115 	stw	r2,-572(fp)
  812ccc:	e0bf7617 	ldw	r2,-552(fp)
  812cd0:	10800204 	addi	r2,r2,8
  812cd4:	1004917a 	slli	r2,r2,5
  812cd8:	e0bf7615 	stw	r2,-552(fp)
  812cdc:	01400604 	movi	r5,24
  812ce0:	e13f7717 	ldw	r4,-548(fp)
  812ce4:	08305040 	call	830504 <__mulsi3>
  812ce8:	10802404 	addi	r2,r2,144
  812cec:	e0bf7715 	stw	r2,-548(fp)
  812cf0:	e0bf7817 	ldw	r2,-544(fp)
  812cf4:	10800104 	addi	r2,r2,4
  812cf8:	1004913a 	slli	r2,r2,4
  812cfc:	e0bf7815 	stw	r2,-544(fp)
  812d00:	e43f7904 	addi	r16,fp,-540
  812d04:	e0800417 	ldw	r2,16(fp)
  812d08:	e0bf7015 	stw	r2,-576(fp)
  812d0c:	e0bf7617 	ldw	r2,-552(fp)
  812d10:	e0bf7315 	stw	r2,-564(fp)
  812d14:	008000c4 	movi	r2,3
  812d18:	e0bf6c15 	stw	r2,-592(fp)
  812d1c:	00003406 	br	812df0 <find_best_colors+0x280>
  812d20:	e0bf7117 	ldw	r2,-572(fp)
  812d24:	e0bf7215 	stw	r2,-568(fp)
  812d28:	e0bf7717 	ldw	r2,-548(fp)
  812d2c:	e0bf7415 	stw	r2,-560(fp)
  812d30:	008001c4 	movi	r2,7
  812d34:	e0bf6d15 	stw	r2,-588(fp)
  812d38:	00002106 	br	812dc0 <find_best_colors+0x250>
  812d3c:	e47f7217 	ldw	r17,-568(fp)
  812d40:	e4bf7817 	ldw	r18,-544(fp)
  812d44:	008000c4 	movi	r2,3
  812d48:	e0bf6e15 	stw	r2,-584(fp)
  812d4c:	00001006 	br	812d90 <find_best_colors+0x220>
  812d50:	80800017 	ldw	r2,0(r16)
  812d54:	8880050e 	bge	r17,r2,812d6c <find_best_colors+0x1fc>
  812d58:	84400015 	stw	r17,0(r16)
  812d5c:	e0bf7517 	ldw	r2,-556(fp)
  812d60:	1007883a 	mov	r3,r2
  812d64:	e0bf7017 	ldw	r2,-576(fp)
  812d68:	10c00005 	stb	r3,0(r2)
  812d6c:	8ca3883a 	add	r17,r17,r18
  812d70:	94802004 	addi	r18,r18,128
  812d74:	84000104 	addi	r16,r16,4
  812d78:	e0bf7017 	ldw	r2,-576(fp)
  812d7c:	10800044 	addi	r2,r2,1
  812d80:	e0bf7015 	stw	r2,-576(fp)
  812d84:	e0bf6e17 	ldw	r2,-584(fp)
  812d88:	10bfffc4 	addi	r2,r2,-1
  812d8c:	e0bf6e15 	stw	r2,-584(fp)
  812d90:	e0bf6e17 	ldw	r2,-584(fp)
  812d94:	103fee0e 	bge	r2,zero,812d50 <__alt_mem_epcs_flash_controller_0+0xff809d50>
  812d98:	e0ff7217 	ldw	r3,-568(fp)
  812d9c:	e0bf7417 	ldw	r2,-560(fp)
  812da0:	1885883a 	add	r2,r3,r2
  812da4:	e0bf7215 	stw	r2,-568(fp)
  812da8:	e0bf7417 	ldw	r2,-560(fp)
  812dac:	10804804 	addi	r2,r2,288
  812db0:	e0bf7415 	stw	r2,-560(fp)
  812db4:	e0bf6d17 	ldw	r2,-588(fp)
  812db8:	10bfffc4 	addi	r2,r2,-1
  812dbc:	e0bf6d15 	stw	r2,-588(fp)
  812dc0:	e0bf6d17 	ldw	r2,-588(fp)
  812dc4:	103fdd0e 	bge	r2,zero,812d3c <__alt_mem_epcs_flash_controller_0+0xff809d3c>
  812dc8:	e0ff7117 	ldw	r3,-572(fp)
  812dcc:	e0bf7317 	ldw	r2,-564(fp)
  812dd0:	1885883a 	add	r2,r3,r2
  812dd4:	e0bf7115 	stw	r2,-572(fp)
  812dd8:	e0bf7317 	ldw	r2,-564(fp)
  812ddc:	10808004 	addi	r2,r2,512
  812de0:	e0bf7315 	stw	r2,-564(fp)
  812de4:	e0bf6c17 	ldw	r2,-592(fp)
  812de8:	10bfffc4 	addi	r2,r2,-1
  812dec:	e0bf6c15 	stw	r2,-592(fp)
  812df0:	e0bf6c17 	ldw	r2,-592(fp)
  812df4:	103fca0e 	bge	r2,zero,812d20 <__alt_mem_epcs_flash_controller_0+0xff809d20>
  812df8:	e0bf6f17 	ldw	r2,-580(fp)
  812dfc:	10800044 	addi	r2,r2,1
  812e00:	e0bf6f15 	stw	r2,-580(fp)
  812e04:	e0ff6f17 	ldw	r3,-580(fp)
  812e08:	e0800217 	ldw	r2,8(fp)
  812e0c:	18bf7316 	blt	r3,r2,812bdc <__alt_mem_epcs_flash_controller_0+0xff809bdc>
  812e10:	0001883a 	nop
  812e14:	e6fffd04 	addi	sp,fp,-12
  812e18:	dfc00417 	ldw	ra,16(sp)
  812e1c:	df000317 	ldw	fp,12(sp)
  812e20:	dc800217 	ldw	r18,8(sp)
  812e24:	dc400117 	ldw	r17,4(sp)
  812e28:	dc000017 	ldw	r16,0(sp)
  812e2c:	dec00504 	addi	sp,sp,20
  812e30:	f800283a 	ret

00812e34 <fill_inverse_cmap>:
  812e34:	deff8c04 	addi	sp,sp,-464
  812e38:	dfc07315 	stw	ra,460(sp)
  812e3c:	df007215 	stw	fp,456(sp)
  812e40:	dc407115 	stw	r17,452(sp)
  812e44:	dc007015 	stw	r16,448(sp)
  812e48:	df007204 	addi	fp,sp,456
  812e4c:	e13ffa15 	stw	r4,-24(fp)
  812e50:	e17ffb15 	stw	r5,-20(fp)
  812e54:	e1bffc15 	stw	r6,-16(fp)
  812e58:	e1fffd15 	stw	r7,-12(fp)
  812e5c:	e0bffa17 	ldw	r2,-24(fp)
  812e60:	10807917 	ldw	r2,484(r2)
  812e64:	e0bf9415 	stw	r2,-432(fp)
  812e68:	e0bf9417 	ldw	r2,-432(fp)
  812e6c:	10800617 	ldw	r2,24(r2)
  812e70:	e0bf9515 	stw	r2,-428(fp)
  812e74:	e0bffb17 	ldw	r2,-20(fp)
  812e78:	1005d0ba 	srai	r2,r2,2
  812e7c:	e0bffb15 	stw	r2,-20(fp)
  812e80:	e0bffc17 	ldw	r2,-16(fp)
  812e84:	1005d0fa 	srai	r2,r2,3
  812e88:	e0bffc15 	stw	r2,-16(fp)
  812e8c:	e0bffd17 	ldw	r2,-12(fp)
  812e90:	1005d0ba 	srai	r2,r2,2
  812e94:	e0bffd15 	stw	r2,-12(fp)
  812e98:	e0bffb17 	ldw	r2,-20(fp)
  812e9c:	1004917a 	slli	r2,r2,5
  812ea0:	10800104 	addi	r2,r2,4
  812ea4:	e0bf9615 	stw	r2,-424(fp)
  812ea8:	e0bffc17 	ldw	r2,-16(fp)
  812eac:	1004917a 	slli	r2,r2,5
  812eb0:	10800084 	addi	r2,r2,2
  812eb4:	e0bf9715 	stw	r2,-420(fp)
  812eb8:	e0bffd17 	ldw	r2,-12(fp)
  812ebc:	1004917a 	slli	r2,r2,5
  812ec0:	10800104 	addi	r2,r2,4
  812ec4:	e0bf9815 	stw	r2,-416(fp)
  812ec8:	e0bf9a04 	addi	r2,fp,-408
  812ecc:	d8800015 	stw	r2,0(sp)
  812ed0:	e1ff9817 	ldw	r7,-416(fp)
  812ed4:	e1bf9717 	ldw	r6,-420(fp)
  812ed8:	e17f9617 	ldw	r5,-424(fp)
  812edc:	e13ffa17 	ldw	r4,-24(fp)
  812ee0:	08125d80 	call	8125d8 <find_nearby_colors>
  812ee4:	e0bf9915 	stw	r2,-412(fp)
  812ee8:	e0bfda04 	addi	r2,fp,-152
  812eec:	d8800215 	stw	r2,8(sp)
  812ef0:	e0bf9a04 	addi	r2,fp,-408
  812ef4:	d8800115 	stw	r2,4(sp)
  812ef8:	e0bf9917 	ldw	r2,-412(fp)
  812efc:	d8800015 	stw	r2,0(sp)
  812f00:	e1ff9817 	ldw	r7,-416(fp)
  812f04:	e1bf9717 	ldw	r6,-420(fp)
  812f08:	e17f9617 	ldw	r5,-424(fp)
  812f0c:	e13ffa17 	ldw	r4,-24(fp)
  812f10:	0812b700 	call	812b70 <find_best_colors>
  812f14:	e0bffb17 	ldw	r2,-20(fp)
  812f18:	1085883a 	add	r2,r2,r2
  812f1c:	1085883a 	add	r2,r2,r2
  812f20:	e0bffb15 	stw	r2,-20(fp)
  812f24:	e0bffc17 	ldw	r2,-16(fp)
  812f28:	100490fa 	slli	r2,r2,3
  812f2c:	e0bffc15 	stw	r2,-16(fp)
  812f30:	e0bffd17 	ldw	r2,-12(fp)
  812f34:	1085883a 	add	r2,r2,r2
  812f38:	1085883a 	add	r2,r2,r2
  812f3c:	e0bffd15 	stw	r2,-12(fp)
  812f40:	e43fda04 	addi	r16,fp,-152
  812f44:	e03f9115 	stw	zero,-444(fp)
  812f48:	00002c06 	br	812ffc <fill_inverse_cmap+0x1c8>
  812f4c:	e03f9215 	stw	zero,-440(fp)
  812f50:	00002406 	br	812fe4 <fill_inverse_cmap+0x1b0>
  812f54:	e0fffb17 	ldw	r3,-20(fp)
  812f58:	e0bf9117 	ldw	r2,-444(fp)
  812f5c:	1885883a 	add	r2,r3,r2
  812f60:	1085883a 	add	r2,r2,r2
  812f64:	1085883a 	add	r2,r2,r2
  812f68:	1007883a 	mov	r3,r2
  812f6c:	e0bf9517 	ldw	r2,-428(fp)
  812f70:	10c5883a 	add	r2,r2,r3
  812f74:	10c00017 	ldw	r3,0(r2)
  812f78:	e13ffc17 	ldw	r4,-16(fp)
  812f7c:	e0bf9217 	ldw	r2,-440(fp)
  812f80:	2085883a 	add	r2,r4,r2
  812f84:	100491ba 	slli	r2,r2,6
  812f88:	1887883a 	add	r3,r3,r2
  812f8c:	e0bffd17 	ldw	r2,-12(fp)
  812f90:	1085883a 	add	r2,r2,r2
  812f94:	18a3883a 	add	r17,r3,r2
  812f98:	e03f9315 	stw	zero,-436(fp)
  812f9c:	00000b06 	br	812fcc <fill_inverse_cmap+0x198>
  812fa0:	8805883a 	mov	r2,r17
  812fa4:	14400084 	addi	r17,r2,2
  812fa8:	8007883a 	mov	r3,r16
  812fac:	1c000044 	addi	r16,r3,1
  812fb0:	18c00003 	ldbu	r3,0(r3)
  812fb4:	18c03fcc 	andi	r3,r3,255
  812fb8:	18c00044 	addi	r3,r3,1
  812fbc:	10c0000d 	sth	r3,0(r2)
  812fc0:	e0bf9317 	ldw	r2,-436(fp)
  812fc4:	10800044 	addi	r2,r2,1
  812fc8:	e0bf9315 	stw	r2,-436(fp)
  812fcc:	e0bf9317 	ldw	r2,-436(fp)
  812fd0:	10800110 	cmplti	r2,r2,4
  812fd4:	103ff21e 	bne	r2,zero,812fa0 <__alt_mem_epcs_flash_controller_0+0xff809fa0>
  812fd8:	e0bf9217 	ldw	r2,-440(fp)
  812fdc:	10800044 	addi	r2,r2,1
  812fe0:	e0bf9215 	stw	r2,-440(fp)
  812fe4:	e0bf9217 	ldw	r2,-440(fp)
  812fe8:	10800210 	cmplti	r2,r2,8
  812fec:	103fd91e 	bne	r2,zero,812f54 <__alt_mem_epcs_flash_controller_0+0xff809f54>
  812ff0:	e0bf9117 	ldw	r2,-444(fp)
  812ff4:	10800044 	addi	r2,r2,1
  812ff8:	e0bf9115 	stw	r2,-444(fp)
  812ffc:	e0bf9117 	ldw	r2,-444(fp)
  813000:	10800110 	cmplti	r2,r2,4
  813004:	103fd11e 	bne	r2,zero,812f4c <__alt_mem_epcs_flash_controller_0+0xff809f4c>
  813008:	0001883a 	nop
  81300c:	e6fffe04 	addi	sp,fp,-8
  813010:	dfc00317 	ldw	ra,12(sp)
  813014:	df000217 	ldw	fp,8(sp)
  813018:	dc400117 	ldw	r17,4(sp)
  81301c:	dc000017 	ldw	r16,0(sp)
  813020:	dec00404 	addi	sp,sp,16
  813024:	f800283a 	ret

00813028 <pass2_no_dither>:
  813028:	deffef04 	addi	sp,sp,-68
  81302c:	dfc01015 	stw	ra,64(sp)
  813030:	df000f15 	stw	fp,60(sp)
  813034:	dd400e15 	stw	r21,56(sp)
  813038:	dd000d15 	stw	r20,52(sp)
  81303c:	dcc00c15 	stw	r19,48(sp)
  813040:	dc800b15 	stw	r18,44(sp)
  813044:	dc400a15 	stw	r17,40(sp)
  813048:	dc000915 	stw	r16,36(sp)
  81304c:	df000f04 	addi	fp,sp,60
  813050:	e13ff615 	stw	r4,-40(fp)
  813054:	e17ff715 	stw	r5,-36(fp)
  813058:	e1bff815 	stw	r6,-32(fp)
  81305c:	e1fff915 	stw	r7,-28(fp)
  813060:	e0bff617 	ldw	r2,-40(fp)
  813064:	10807917 	ldw	r2,484(r2)
  813068:	e0bff315 	stw	r2,-52(fp)
  81306c:	e0bff317 	ldw	r2,-52(fp)
  813070:	10800617 	ldw	r2,24(r2)
  813074:	e0bff415 	stw	r2,-48(fp)
  813078:	e0bff617 	ldw	r2,-40(fp)
  81307c:	10801c17 	ldw	r2,112(r2)
  813080:	e0bff515 	stw	r2,-44(fp)
  813084:	e03ff115 	stw	zero,-60(fp)
  813088:	00004406 	br	81319c <pass2_no_dither+0x174>
  81308c:	e0bff117 	ldw	r2,-60(fp)
  813090:	1085883a 	add	r2,r2,r2
  813094:	1085883a 	add	r2,r2,r2
  813098:	1007883a 	mov	r3,r2
  81309c:	e0bff717 	ldw	r2,-36(fp)
  8130a0:	10c5883a 	add	r2,r2,r3
  8130a4:	14000017 	ldw	r16,0(r2)
  8130a8:	e0bff117 	ldw	r2,-60(fp)
  8130ac:	1085883a 	add	r2,r2,r2
  8130b0:	1085883a 	add	r2,r2,r2
  8130b4:	1007883a 	mov	r3,r2
  8130b8:	e0bff817 	ldw	r2,-32(fp)
  8130bc:	10c5883a 	add	r2,r2,r3
  8130c0:	14c00017 	ldw	r19,0(r2)
  8130c4:	e0bff517 	ldw	r2,-44(fp)
  8130c8:	e0bff215 	stw	r2,-56(fp)
  8130cc:	00002e06 	br	813188 <pass2_no_dither+0x160>
  8130d0:	8005883a 	mov	r2,r16
  8130d4:	14000044 	addi	r16,r2,1
  8130d8:	10800003 	ldbu	r2,0(r2)
  8130dc:	10803fcc 	andi	r2,r2,255
  8130e0:	1004d0fa 	srli	r2,r2,3
  8130e4:	15003fcc 	andi	r20,r2,255
  8130e8:	8005883a 	mov	r2,r16
  8130ec:	14000044 	addi	r16,r2,1
  8130f0:	10800003 	ldbu	r2,0(r2)
  8130f4:	10803fcc 	andi	r2,r2,255
  8130f8:	1004d0ba 	srli	r2,r2,2
  8130fc:	15403fcc 	andi	r21,r2,255
  813100:	8005883a 	mov	r2,r16
  813104:	14000044 	addi	r16,r2,1
  813108:	10800003 	ldbu	r2,0(r2)
  81310c:	10803fcc 	andi	r2,r2,255
  813110:	1004d0fa 	srli	r2,r2,3
  813114:	14403fcc 	andi	r17,r2,255
  813118:	a005883a 	mov	r2,r20
  81311c:	1085883a 	add	r2,r2,r2
  813120:	1085883a 	add	r2,r2,r2
  813124:	1007883a 	mov	r3,r2
  813128:	e0bff417 	ldw	r2,-48(fp)
  81312c:	10c5883a 	add	r2,r2,r3
  813130:	10c00017 	ldw	r3,0(r2)
  813134:	a805883a 	mov	r2,r21
  813138:	100491ba 	slli	r2,r2,6
  81313c:	1887883a 	add	r3,r3,r2
  813140:	8c45883a 	add	r2,r17,r17
  813144:	18a5883a 	add	r18,r3,r2
  813148:	9080000b 	ldhu	r2,0(r18)
  81314c:	10bfffcc 	andi	r2,r2,65535
  813150:	1000051e 	bne	r2,zero,813168 <pass2_no_dither+0x140>
  813154:	880f883a 	mov	r7,r17
  813158:	a80d883a 	mov	r6,r21
  81315c:	a00b883a 	mov	r5,r20
  813160:	e13ff617 	ldw	r4,-40(fp)
  813164:	0812e340 	call	812e34 <fill_inverse_cmap>
  813168:	9805883a 	mov	r2,r19
  81316c:	14c00044 	addi	r19,r2,1
  813170:	90c0000b 	ldhu	r3,0(r18)
  813174:	18ffffc4 	addi	r3,r3,-1
  813178:	10c00005 	stb	r3,0(r2)
  81317c:	e0bff217 	ldw	r2,-56(fp)
  813180:	10bfffc4 	addi	r2,r2,-1
  813184:	e0bff215 	stw	r2,-56(fp)
  813188:	e0bff217 	ldw	r2,-56(fp)
  81318c:	103fd01e 	bne	r2,zero,8130d0 <__alt_mem_epcs_flash_controller_0+0xff80a0d0>
  813190:	e0bff117 	ldw	r2,-60(fp)
  813194:	10800044 	addi	r2,r2,1
  813198:	e0bff115 	stw	r2,-60(fp)
  81319c:	e0fff117 	ldw	r3,-60(fp)
  8131a0:	e0bff917 	ldw	r2,-28(fp)
  8131a4:	18bfb916 	blt	r3,r2,81308c <__alt_mem_epcs_flash_controller_0+0xff80a08c>
  8131a8:	0001883a 	nop
  8131ac:	e6fffa04 	addi	sp,fp,-24
  8131b0:	dfc00717 	ldw	ra,28(sp)
  8131b4:	df000617 	ldw	fp,24(sp)
  8131b8:	dd400517 	ldw	r21,20(sp)
  8131bc:	dd000417 	ldw	r20,16(sp)
  8131c0:	dcc00317 	ldw	r19,12(sp)
  8131c4:	dc800217 	ldw	r18,8(sp)
  8131c8:	dc400117 	ldw	r17,4(sp)
  8131cc:	dc000017 	ldw	r16,0(sp)
  8131d0:	dec00804 	addi	sp,sp,32
  8131d4:	f800283a 	ret

008131d8 <pass2_fs_dither>:
  8131d8:	deffdf04 	addi	sp,sp,-132
  8131dc:	dfc02015 	stw	ra,128(sp)
  8131e0:	df001f15 	stw	fp,124(sp)
  8131e4:	dd401e15 	stw	r21,120(sp)
  8131e8:	dd001d15 	stw	r20,116(sp)
  8131ec:	dcc01c15 	stw	r19,112(sp)
  8131f0:	dc801b15 	stw	r18,108(sp)
  8131f4:	dc401a15 	stw	r17,104(sp)
  8131f8:	dc001915 	stw	r16,100(sp)
  8131fc:	df001f04 	addi	fp,sp,124
  813200:	e13ff615 	stw	r4,-40(fp)
  813204:	e17ff715 	stw	r5,-36(fp)
  813208:	e1bff815 	stw	r6,-32(fp)
  81320c:	e1fff915 	stw	r7,-28(fp)
  813210:	e0bff617 	ldw	r2,-40(fp)
  813214:	10807917 	ldw	r2,484(r2)
  813218:	e0bfed15 	stw	r2,-76(fp)
  81321c:	e0bfed17 	ldw	r2,-76(fp)
  813220:	10800617 	ldw	r2,24(r2)
  813224:	e0bfee15 	stw	r2,-72(fp)
  813228:	e0bff617 	ldw	r2,-40(fp)
  81322c:	10801c17 	ldw	r2,112(r2)
  813230:	e0bfef15 	stw	r2,-68(fp)
  813234:	e0bff617 	ldw	r2,-40(fp)
  813238:	10805417 	ldw	r2,336(r2)
  81323c:	e0bff015 	stw	r2,-64(fp)
  813240:	e0bfed17 	ldw	r2,-76(fp)
  813244:	10800a17 	ldw	r2,40(r2)
  813248:	e0bff115 	stw	r2,-60(fp)
  81324c:	e0bff617 	ldw	r2,-40(fp)
  813250:	10802217 	ldw	r2,136(r2)
  813254:	10800017 	ldw	r2,0(r2)
  813258:	e0bff215 	stw	r2,-56(fp)
  81325c:	e0bff617 	ldw	r2,-40(fp)
  813260:	10802217 	ldw	r2,136(r2)
  813264:	10800117 	ldw	r2,4(r2)
  813268:	e0bff315 	stw	r2,-52(fp)
  81326c:	e0bff617 	ldw	r2,-40(fp)
  813270:	10802217 	ldw	r2,136(r2)
  813274:	10800217 	ldw	r2,8(r2)
  813278:	e0bff415 	stw	r2,-48(fp)
  81327c:	e03feb15 	stw	zero,-84(fp)
  813280:	00011706 	br	8136e0 <pass2_fs_dither+0x508>
  813284:	e0bfeb17 	ldw	r2,-84(fp)
  813288:	1085883a 	add	r2,r2,r2
  81328c:	1085883a 	add	r2,r2,r2
  813290:	1007883a 	mov	r3,r2
  813294:	e0bff717 	ldw	r2,-36(fp)
  813298:	10c5883a 	add	r2,r2,r3
  81329c:	10800017 	ldw	r2,0(r2)
  8132a0:	e0bfe715 	stw	r2,-100(fp)
  8132a4:	e0bfeb17 	ldw	r2,-84(fp)
  8132a8:	1085883a 	add	r2,r2,r2
  8132ac:	1085883a 	add	r2,r2,r2
  8132b0:	1007883a 	mov	r3,r2
  8132b4:	e0bff817 	ldw	r2,-32(fp)
  8132b8:	10c5883a 	add	r2,r2,r3
  8132bc:	10800017 	ldw	r2,0(r2)
  8132c0:	e0bfe815 	stw	r2,-96(fp)
  8132c4:	e0bfed17 	ldw	r2,-76(fp)
  8132c8:	10800917 	ldw	r2,36(r2)
  8132cc:	10001c26 	beq	r2,zero,813340 <pass2_fs_dither+0x168>
  8132d0:	e0ffef17 	ldw	r3,-68(fp)
  8132d4:	1805883a 	mov	r2,r3
  8132d8:	1085883a 	add	r2,r2,r2
  8132dc:	10c5883a 	add	r2,r2,r3
  8132e0:	10bfff44 	addi	r2,r2,-3
  8132e4:	e0ffe717 	ldw	r3,-100(fp)
  8132e8:	1885883a 	add	r2,r3,r2
  8132ec:	e0bfe715 	stw	r2,-100(fp)
  8132f0:	e0bfef17 	ldw	r2,-68(fp)
  8132f4:	10bfffc4 	addi	r2,r2,-1
  8132f8:	e0ffe817 	ldw	r3,-96(fp)
  8132fc:	1885883a 	add	r2,r3,r2
  813300:	e0bfe815 	stw	r2,-96(fp)
  813304:	00bfffc4 	movi	r2,-1
  813308:	e0bfe915 	stw	r2,-92(fp)
  81330c:	00bfff44 	movi	r2,-3
  813310:	e0bfea15 	stw	r2,-88(fp)
  813314:	e0bfed17 	ldw	r2,-76(fp)
  813318:	14000817 	ldw	r16,32(r2)
  81331c:	e0bfef17 	ldw	r2,-68(fp)
  813320:	10800044 	addi	r2,r2,1
  813324:	01400184 	movi	r5,6
  813328:	1009883a 	mov	r4,r2
  81332c:	08305040 	call	830504 <__mulsi3>
  813330:	80a7883a 	add	r19,r16,r2
  813334:	e0bfed17 	ldw	r2,-76(fp)
  813338:	10000915 	stw	zero,36(r2)
  81333c:	00000906 	br	813364 <pass2_fs_dither+0x18c>
  813340:	00800044 	movi	r2,1
  813344:	e0bfe915 	stw	r2,-92(fp)
  813348:	008000c4 	movi	r2,3
  81334c:	e0bfea15 	stw	r2,-88(fp)
  813350:	e0bfed17 	ldw	r2,-76(fp)
  813354:	14c00817 	ldw	r19,32(r2)
  813358:	e0bfed17 	ldw	r2,-76(fp)
  81335c:	00c00044 	movi	r3,1
  813360:	10c00915 	stw	r3,36(r2)
  813364:	0023883a 	mov	r17,zero
  813368:	8821883a 	mov	r16,r17
  81336c:	8025883a 	mov	r18,r16
  813370:	e03fe315 	stw	zero,-116(fp)
  813374:	e0bfe317 	ldw	r2,-116(fp)
  813378:	e0bfe215 	stw	r2,-120(fp)
  81337c:	e0bfe217 	ldw	r2,-120(fp)
  813380:	e0bfe115 	stw	r2,-124(fp)
  813384:	e03fe615 	stw	zero,-104(fp)
  813388:	e0bfe617 	ldw	r2,-104(fp)
  81338c:	e0bfe515 	stw	r2,-108(fp)
  813390:	e0bfe517 	ldw	r2,-108(fp)
  813394:	e0bfe415 	stw	r2,-112(fp)
  813398:	e0bfef17 	ldw	r2,-68(fp)
  81339c:	e0bfec15 	stw	r2,-80(fp)
  8133a0:	0000c206 	br	8136ac <pass2_fs_dither+0x4d4>
  8133a4:	e0bfea17 	ldw	r2,-88(fp)
  8133a8:	1085883a 	add	r2,r2,r2
  8133ac:	9885883a 	add	r2,r19,r2
  8133b0:	1080000b 	ldhu	r2,0(r2)
  8133b4:	10bfffcc 	andi	r2,r2,65535
  8133b8:	10a0001c 	xori	r2,r2,32768
  8133bc:	10a00004 	addi	r2,r2,-32768
  8133c0:	1485883a 	add	r2,r2,r18
  8133c4:	10800204 	addi	r2,r2,8
  8133c8:	1025d13a 	srai	r18,r2,4
  8133cc:	e0bfea17 	ldw	r2,-88(fp)
  8133d0:	10800044 	addi	r2,r2,1
  8133d4:	1085883a 	add	r2,r2,r2
  8133d8:	9885883a 	add	r2,r19,r2
  8133dc:	1080000b 	ldhu	r2,0(r2)
  8133e0:	10bfffcc 	andi	r2,r2,65535
  8133e4:	10a0001c 	xori	r2,r2,32768
  8133e8:	10a00004 	addi	r2,r2,-32768
  8133ec:	1405883a 	add	r2,r2,r16
  8133f0:	10800204 	addi	r2,r2,8
  8133f4:	1021d13a 	srai	r16,r2,4
  8133f8:	e0bfea17 	ldw	r2,-88(fp)
  8133fc:	10800084 	addi	r2,r2,2
  813400:	1085883a 	add	r2,r2,r2
  813404:	9885883a 	add	r2,r19,r2
  813408:	1080000b 	ldhu	r2,0(r2)
  81340c:	10bfffcc 	andi	r2,r2,65535
  813410:	10a0001c 	xori	r2,r2,32768
  813414:	10a00004 	addi	r2,r2,-32768
  813418:	1445883a 	add	r2,r2,r17
  81341c:	10800204 	addi	r2,r2,8
  813420:	1023d13a 	srai	r17,r2,4
  813424:	9005883a 	mov	r2,r18
  813428:	1085883a 	add	r2,r2,r2
  81342c:	1085883a 	add	r2,r2,r2
  813430:	1007883a 	mov	r3,r2
  813434:	e0bff117 	ldw	r2,-60(fp)
  813438:	10c5883a 	add	r2,r2,r3
  81343c:	14800017 	ldw	r18,0(r2)
  813440:	8005883a 	mov	r2,r16
  813444:	1085883a 	add	r2,r2,r2
  813448:	1085883a 	add	r2,r2,r2
  81344c:	1007883a 	mov	r3,r2
  813450:	e0bff117 	ldw	r2,-60(fp)
  813454:	10c5883a 	add	r2,r2,r3
  813458:	14000017 	ldw	r16,0(r2)
  81345c:	8805883a 	mov	r2,r17
  813460:	1085883a 	add	r2,r2,r2
  813464:	1085883a 	add	r2,r2,r2
  813468:	1007883a 	mov	r3,r2
  81346c:	e0bff117 	ldw	r2,-60(fp)
  813470:	10c5883a 	add	r2,r2,r3
  813474:	14400017 	ldw	r17,0(r2)
  813478:	e0bfe717 	ldw	r2,-100(fp)
  81347c:	10800003 	ldbu	r2,0(r2)
  813480:	10803fcc 	andi	r2,r2,255
  813484:	90a5883a 	add	r18,r18,r2
  813488:	e0bfe717 	ldw	r2,-100(fp)
  81348c:	10800044 	addi	r2,r2,1
  813490:	10800003 	ldbu	r2,0(r2)
  813494:	10803fcc 	andi	r2,r2,255
  813498:	80a1883a 	add	r16,r16,r2
  81349c:	e0bfe717 	ldw	r2,-100(fp)
  8134a0:	10800084 	addi	r2,r2,2
  8134a4:	10800003 	ldbu	r2,0(r2)
  8134a8:	10803fcc 	andi	r2,r2,255
  8134ac:	88a3883a 	add	r17,r17,r2
  8134b0:	9007883a 	mov	r3,r18
  8134b4:	e0bff017 	ldw	r2,-64(fp)
  8134b8:	10c5883a 	add	r2,r2,r3
  8134bc:	10800003 	ldbu	r2,0(r2)
  8134c0:	14803fcc 	andi	r18,r2,255
  8134c4:	8007883a 	mov	r3,r16
  8134c8:	e0bff017 	ldw	r2,-64(fp)
  8134cc:	10c5883a 	add	r2,r2,r3
  8134d0:	10800003 	ldbu	r2,0(r2)
  8134d4:	14003fcc 	andi	r16,r2,255
  8134d8:	8807883a 	mov	r3,r17
  8134dc:	e0bff017 	ldw	r2,-64(fp)
  8134e0:	10c5883a 	add	r2,r2,r3
  8134e4:	10800003 	ldbu	r2,0(r2)
  8134e8:	14403fcc 	andi	r17,r2,255
  8134ec:	9005d0fa 	srai	r2,r18,3
  8134f0:	1085883a 	add	r2,r2,r2
  8134f4:	1085883a 	add	r2,r2,r2
  8134f8:	1007883a 	mov	r3,r2
  8134fc:	e0bfee17 	ldw	r2,-72(fp)
  813500:	10c5883a 	add	r2,r2,r3
  813504:	10c00017 	ldw	r3,0(r2)
  813508:	8005d0ba 	srai	r2,r16,2
  81350c:	100491ba 	slli	r2,r2,6
  813510:	1887883a 	add	r3,r3,r2
  813514:	8805d0fa 	srai	r2,r17,3
  813518:	1085883a 	add	r2,r2,r2
  81351c:	1885883a 	add	r2,r3,r2
  813520:	e0bff515 	stw	r2,-44(fp)
  813524:	e0bff517 	ldw	r2,-44(fp)
  813528:	1080000b 	ldhu	r2,0(r2)
  81352c:	10bfffcc 	andi	r2,r2,65535
  813530:	1000081e 	bne	r2,zero,813554 <pass2_fs_dither+0x37c>
  813534:	9005d0fa 	srai	r2,r18,3
  813538:	8007d0ba 	srai	r3,r16,2
  81353c:	8809d0fa 	srai	r4,r17,3
  813540:	200f883a 	mov	r7,r4
  813544:	180d883a 	mov	r6,r3
  813548:	100b883a 	mov	r5,r2
  81354c:	e13ff617 	ldw	r4,-40(fp)
  813550:	0812e340 	call	812e34 <fill_inverse_cmap>
  813554:	e0bff517 	ldw	r2,-44(fp)
  813558:	1080000b 	ldhu	r2,0(r2)
  81355c:	10bfffcc 	andi	r2,r2,65535
  813560:	153fffc4 	addi	r20,r2,-1
  813564:	a007883a 	mov	r3,r20
  813568:	e0bfe817 	ldw	r2,-96(fp)
  81356c:	10c00005 	stb	r3,0(r2)
  813570:	a007883a 	mov	r3,r20
  813574:	e0bff217 	ldw	r2,-56(fp)
  813578:	10c5883a 	add	r2,r2,r3
  81357c:	10800003 	ldbu	r2,0(r2)
  813580:	10803fcc 	andi	r2,r2,255
  813584:	90a5c83a 	sub	r18,r18,r2
  813588:	a007883a 	mov	r3,r20
  81358c:	e0bff317 	ldw	r2,-52(fp)
  813590:	10c5883a 	add	r2,r2,r3
  813594:	10800003 	ldbu	r2,0(r2)
  813598:	10803fcc 	andi	r2,r2,255
  81359c:	80a1c83a 	sub	r16,r16,r2
  8135a0:	a007883a 	mov	r3,r20
  8135a4:	e0bff417 	ldw	r2,-48(fp)
  8135a8:	10c5883a 	add	r2,r2,r3
  8135ac:	10800003 	ldbu	r2,0(r2)
  8135b0:	10803fcc 	andi	r2,r2,255
  8135b4:	88a3c83a 	sub	r17,r17,r2
  8135b8:	902b883a 	mov	r21,r18
  8135bc:	9485883a 	add	r2,r18,r18
  8135c0:	1029883a 	mov	r20,r2
  8135c4:	9525883a 	add	r18,r18,r20
  8135c8:	e0bfe417 	ldw	r2,-112(fp)
  8135cc:	1007883a 	mov	r3,r2
  8135d0:	9005883a 	mov	r2,r18
  8135d4:	1885883a 	add	r2,r3,r2
  8135d8:	9880000d 	sth	r2,0(r19)
  8135dc:	9525883a 	add	r18,r18,r20
  8135e0:	e0bfe117 	ldw	r2,-124(fp)
  8135e4:	1485883a 	add	r2,r2,r18
  8135e8:	e0bfe415 	stw	r2,-112(fp)
  8135ec:	e57fe115 	stw	r21,-124(fp)
  8135f0:	9525883a 	add	r18,r18,r20
  8135f4:	802b883a 	mov	r21,r16
  8135f8:	8405883a 	add	r2,r16,r16
  8135fc:	1029883a 	mov	r20,r2
  813600:	8521883a 	add	r16,r16,r20
  813604:	98800084 	addi	r2,r19,2
  813608:	e0ffe517 	ldw	r3,-108(fp)
  81360c:	1809883a 	mov	r4,r3
  813610:	8007883a 	mov	r3,r16
  813614:	20c7883a 	add	r3,r4,r3
  813618:	10c0000d 	sth	r3,0(r2)
  81361c:	8521883a 	add	r16,r16,r20
  813620:	e0bfe217 	ldw	r2,-120(fp)
  813624:	1405883a 	add	r2,r2,r16
  813628:	e0bfe515 	stw	r2,-108(fp)
  81362c:	e57fe215 	stw	r21,-120(fp)
  813630:	8521883a 	add	r16,r16,r20
  813634:	882b883a 	mov	r21,r17
  813638:	8c45883a 	add	r2,r17,r17
  81363c:	1029883a 	mov	r20,r2
  813640:	8d23883a 	add	r17,r17,r20
  813644:	98800104 	addi	r2,r19,4
  813648:	e0ffe617 	ldw	r3,-104(fp)
  81364c:	1809883a 	mov	r4,r3
  813650:	8807883a 	mov	r3,r17
  813654:	20c7883a 	add	r3,r4,r3
  813658:	10c0000d 	sth	r3,0(r2)
  81365c:	8d23883a 	add	r17,r17,r20
  813660:	e0bfe317 	ldw	r2,-116(fp)
  813664:	1445883a 	add	r2,r2,r17
  813668:	e0bfe615 	stw	r2,-104(fp)
  81366c:	e57fe315 	stw	r21,-116(fp)
  813670:	8d23883a 	add	r17,r17,r20
  813674:	e0bfea17 	ldw	r2,-88(fp)
  813678:	e0ffe717 	ldw	r3,-100(fp)
  81367c:	1885883a 	add	r2,r3,r2
  813680:	e0bfe715 	stw	r2,-100(fp)
  813684:	e0bfe917 	ldw	r2,-92(fp)
  813688:	e0ffe817 	ldw	r3,-96(fp)
  81368c:	1885883a 	add	r2,r3,r2
  813690:	e0bfe815 	stw	r2,-96(fp)
  813694:	e0bfea17 	ldw	r2,-88(fp)
  813698:	1085883a 	add	r2,r2,r2
  81369c:	98a7883a 	add	r19,r19,r2
  8136a0:	e0bfec17 	ldw	r2,-80(fp)
  8136a4:	10bfffc4 	addi	r2,r2,-1
  8136a8:	e0bfec15 	stw	r2,-80(fp)
  8136ac:	e0bfec17 	ldw	r2,-80(fp)
  8136b0:	103f3c1e 	bne	r2,zero,8133a4 <__alt_mem_epcs_flash_controller_0+0xff80a3a4>
  8136b4:	e0bfe417 	ldw	r2,-112(fp)
  8136b8:	9880000d 	sth	r2,0(r19)
  8136bc:	98800084 	addi	r2,r19,2
  8136c0:	e0ffe517 	ldw	r3,-108(fp)
  8136c4:	10c0000d 	sth	r3,0(r2)
  8136c8:	98800104 	addi	r2,r19,4
  8136cc:	e0ffe617 	ldw	r3,-104(fp)
  8136d0:	10c0000d 	sth	r3,0(r2)
  8136d4:	e0bfeb17 	ldw	r2,-84(fp)
  8136d8:	10800044 	addi	r2,r2,1
  8136dc:	e0bfeb15 	stw	r2,-84(fp)
  8136e0:	e0ffeb17 	ldw	r3,-84(fp)
  8136e4:	e0bff917 	ldw	r2,-28(fp)
  8136e8:	18bee616 	blt	r3,r2,813284 <__alt_mem_epcs_flash_controller_0+0xff80a284>
  8136ec:	0001883a 	nop
  8136f0:	e6fffa04 	addi	sp,fp,-24
  8136f4:	dfc00717 	ldw	ra,28(sp)
  8136f8:	df000617 	ldw	fp,24(sp)
  8136fc:	dd400517 	ldw	r21,20(sp)
  813700:	dd000417 	ldw	r20,16(sp)
  813704:	dcc00317 	ldw	r19,12(sp)
  813708:	dc800217 	ldw	r18,8(sp)
  81370c:	dc400117 	ldw	r17,4(sp)
  813710:	dc000017 	ldw	r16,0(sp)
  813714:	dec00804 	addi	sp,sp,32
  813718:	f800283a 	ret

0081371c <init_error_limit>:
  81371c:	defff904 	addi	sp,sp,-28
  813720:	dfc00615 	stw	ra,24(sp)
  813724:	df000515 	stw	fp,20(sp)
  813728:	df000504 	addi	fp,sp,20
  81372c:	e13fff15 	stw	r4,-4(fp)
  813730:	e0bfff17 	ldw	r2,-4(fp)
  813734:	10807917 	ldw	r2,484(r2)
  813738:	e0bffd15 	stw	r2,-12(fp)
  81373c:	e0bfff17 	ldw	r2,-4(fp)
  813740:	10800117 	ldw	r2,4(r2)
  813744:	10800017 	ldw	r2,0(r2)
  813748:	0181ff04 	movi	r6,2044
  81374c:	01400044 	movi	r5,1
  813750:	e13fff17 	ldw	r4,-4(fp)
  813754:	103ee83a 	callr	r2
  813758:	e0bffe15 	stw	r2,-8(fp)
  81375c:	e0bffe17 	ldw	r2,-8(fp)
  813760:	1080ff04 	addi	r2,r2,1020
  813764:	e0bffe15 	stw	r2,-8(fp)
  813768:	e0bffd17 	ldw	r2,-12(fp)
  81376c:	e0fffe17 	ldw	r3,-8(fp)
  813770:	10c00a15 	stw	r3,40(r2)
  813774:	e03ffc15 	stw	zero,-16(fp)
  813778:	e03ffb15 	stw	zero,-20(fp)
  81377c:	00001806 	br	8137e0 <init_error_limit+0xc4>
  813780:	e0bffb17 	ldw	r2,-20(fp)
  813784:	1085883a 	add	r2,r2,r2
  813788:	1085883a 	add	r2,r2,r2
  81378c:	1007883a 	mov	r3,r2
  813790:	e0bffe17 	ldw	r2,-8(fp)
  813794:	10c5883a 	add	r2,r2,r3
  813798:	e0fffc17 	ldw	r3,-16(fp)
  81379c:	10c00015 	stw	r3,0(r2)
  8137a0:	e0bffb17 	ldw	r2,-20(fp)
  8137a4:	017fff04 	movi	r5,-4
  8137a8:	1009883a 	mov	r4,r2
  8137ac:	08305040 	call	830504 <__mulsi3>
  8137b0:	1007883a 	mov	r3,r2
  8137b4:	e0bffe17 	ldw	r2,-8(fp)
  8137b8:	10c5883a 	add	r2,r2,r3
  8137bc:	e0fffc17 	ldw	r3,-16(fp)
  8137c0:	00c7c83a 	sub	r3,zero,r3
  8137c4:	10c00015 	stw	r3,0(r2)
  8137c8:	e0bffb17 	ldw	r2,-20(fp)
  8137cc:	10800044 	addi	r2,r2,1
  8137d0:	e0bffb15 	stw	r2,-20(fp)
  8137d4:	e0bffc17 	ldw	r2,-16(fp)
  8137d8:	10800044 	addi	r2,r2,1
  8137dc:	e0bffc15 	stw	r2,-16(fp)
  8137e0:	e0bffb17 	ldw	r2,-20(fp)
  8137e4:	10800410 	cmplti	r2,r2,16
  8137e8:	103fe51e 	bne	r2,zero,813780 <__alt_mem_epcs_flash_controller_0+0xff80a780>
  8137ec:	00001c06 	br	813860 <init_error_limit+0x144>
  8137f0:	e0bffb17 	ldw	r2,-20(fp)
  8137f4:	1085883a 	add	r2,r2,r2
  8137f8:	1085883a 	add	r2,r2,r2
  8137fc:	1007883a 	mov	r3,r2
  813800:	e0bffe17 	ldw	r2,-8(fp)
  813804:	10c5883a 	add	r2,r2,r3
  813808:	e0fffc17 	ldw	r3,-16(fp)
  81380c:	10c00015 	stw	r3,0(r2)
  813810:	e0bffb17 	ldw	r2,-20(fp)
  813814:	017fff04 	movi	r5,-4
  813818:	1009883a 	mov	r4,r2
  81381c:	08305040 	call	830504 <__mulsi3>
  813820:	1007883a 	mov	r3,r2
  813824:	e0bffe17 	ldw	r2,-8(fp)
  813828:	10c5883a 	add	r2,r2,r3
  81382c:	e0fffc17 	ldw	r3,-16(fp)
  813830:	00c7c83a 	sub	r3,zero,r3
  813834:	10c00015 	stw	r3,0(r2)
  813838:	e0bffb17 	ldw	r2,-20(fp)
  81383c:	10800044 	addi	r2,r2,1
  813840:	e0bffb15 	stw	r2,-20(fp)
  813844:	e0bffb17 	ldw	r2,-20(fp)
  813848:	1080004c 	andi	r2,r2,1
  81384c:	1005003a 	cmpeq	r2,r2,zero
  813850:	10803fcc 	andi	r2,r2,255
  813854:	e0fffc17 	ldw	r3,-16(fp)
  813858:	1885883a 	add	r2,r3,r2
  81385c:	e0bffc15 	stw	r2,-16(fp)
  813860:	e0bffb17 	ldw	r2,-20(fp)
  813864:	10800c10 	cmplti	r2,r2,48
  813868:	103fe11e 	bne	r2,zero,8137f0 <__alt_mem_epcs_flash_controller_0+0xff80a7f0>
  81386c:	00001506 	br	8138c4 <init_error_limit+0x1a8>
  813870:	e0bffb17 	ldw	r2,-20(fp)
  813874:	1085883a 	add	r2,r2,r2
  813878:	1085883a 	add	r2,r2,r2
  81387c:	1007883a 	mov	r3,r2
  813880:	e0bffe17 	ldw	r2,-8(fp)
  813884:	10c5883a 	add	r2,r2,r3
  813888:	e0fffc17 	ldw	r3,-16(fp)
  81388c:	10c00015 	stw	r3,0(r2)
  813890:	e0bffb17 	ldw	r2,-20(fp)
  813894:	017fff04 	movi	r5,-4
  813898:	1009883a 	mov	r4,r2
  81389c:	08305040 	call	830504 <__mulsi3>
  8138a0:	1007883a 	mov	r3,r2
  8138a4:	e0bffe17 	ldw	r2,-8(fp)
  8138a8:	10c5883a 	add	r2,r2,r3
  8138ac:	e0fffc17 	ldw	r3,-16(fp)
  8138b0:	00c7c83a 	sub	r3,zero,r3
  8138b4:	10c00015 	stw	r3,0(r2)
  8138b8:	e0bffb17 	ldw	r2,-20(fp)
  8138bc:	10800044 	addi	r2,r2,1
  8138c0:	e0bffb15 	stw	r2,-20(fp)
  8138c4:	e0bffb17 	ldw	r2,-20(fp)
  8138c8:	10804010 	cmplti	r2,r2,256
  8138cc:	103fe81e 	bne	r2,zero,813870 <__alt_mem_epcs_flash_controller_0+0xff80a870>
  8138d0:	0001883a 	nop
  8138d4:	e037883a 	mov	sp,fp
  8138d8:	dfc00117 	ldw	ra,4(sp)
  8138dc:	df000017 	ldw	fp,0(sp)
  8138e0:	dec00204 	addi	sp,sp,8
  8138e4:	f800283a 	ret

008138e8 <finish_pass1>:
  8138e8:	defffc04 	addi	sp,sp,-16
  8138ec:	dfc00315 	stw	ra,12(sp)
  8138f0:	df000215 	stw	fp,8(sp)
  8138f4:	df000204 	addi	fp,sp,8
  8138f8:	e13fff15 	stw	r4,-4(fp)
  8138fc:	e0bfff17 	ldw	r2,-4(fp)
  813900:	10807917 	ldw	r2,484(r2)
  813904:	e0bffe15 	stw	r2,-8(fp)
  813908:	e0bffe17 	ldw	r2,-8(fp)
  81390c:	10c00417 	ldw	r3,16(r2)
  813910:	e0bfff17 	ldw	r2,-4(fp)
  813914:	10c02215 	stw	r3,136(r2)
  813918:	e0bffe17 	ldw	r2,-8(fp)
  81391c:	10800517 	ldw	r2,20(r2)
  813920:	100b883a 	mov	r5,r2
  813924:	e13fff17 	ldw	r4,-4(fp)
  813928:	08124940 	call	812494 <select_colors>
  81392c:	e0bffe17 	ldw	r2,-8(fp)
  813930:	00c00044 	movi	r3,1
  813934:	10c00715 	stw	r3,28(r2)
  813938:	0001883a 	nop
  81393c:	e037883a 	mov	sp,fp
  813940:	dfc00117 	ldw	ra,4(sp)
  813944:	df000017 	ldw	fp,0(sp)
  813948:	dec00204 	addi	sp,sp,8
  81394c:	f800283a 	ret

00813950 <finish_pass2>:
  813950:	defffe04 	addi	sp,sp,-8
  813954:	df000115 	stw	fp,4(sp)
  813958:	df000104 	addi	fp,sp,4
  81395c:	e13fff15 	stw	r4,-4(fp)
  813960:	0001883a 	nop
  813964:	e037883a 	mov	sp,fp
  813968:	df000017 	ldw	fp,0(sp)
  81396c:	dec00104 	addi	sp,sp,4
  813970:	f800283a 	ret

00813974 <start_pass_2_quant>:
  813974:	defff804 	addi	sp,sp,-32
  813978:	dfc00715 	stw	ra,28(sp)
  81397c:	df000615 	stw	fp,24(sp)
  813980:	df000604 	addi	fp,sp,24
  813984:	e13ffe15 	stw	r4,-8(fp)
  813988:	e17fff15 	stw	r5,-4(fp)
  81398c:	e0bffe17 	ldw	r2,-8(fp)
  813990:	10807917 	ldw	r2,484(r2)
  813994:	e0bffb15 	stw	r2,-20(fp)
  813998:	e0bffb17 	ldw	r2,-20(fp)
  81399c:	10800617 	ldw	r2,24(r2)
  8139a0:	e0bffc15 	stw	r2,-16(fp)
  8139a4:	e0bffe17 	ldw	r2,-8(fp)
  8139a8:	10801617 	ldw	r2,88(r2)
  8139ac:	10000326 	beq	r2,zero,8139bc <start_pass_2_quant+0x48>
  8139b0:	e0bffe17 	ldw	r2,-8(fp)
  8139b4:	00c00084 	movi	r3,2
  8139b8:	10c01615 	stw	r3,88(r2)
  8139bc:	e0bfff17 	ldw	r2,-4(fp)
  8139c0:	10000c26 	beq	r2,zero,8139f4 <start_pass_2_quant+0x80>
  8139c4:	e0fffb17 	ldw	r3,-20(fp)
  8139c8:	00802074 	movhi	r2,129
  8139cc:	10858d04 	addi	r2,r2,5684
  8139d0:	18800115 	stw	r2,4(r3)
  8139d4:	e0fffb17 	ldw	r3,-20(fp)
  8139d8:	00802074 	movhi	r2,129
  8139dc:	108e3a04 	addi	r2,r2,14568
  8139e0:	18800215 	stw	r2,8(r3)
  8139e4:	e0bffb17 	ldw	r2,-20(fp)
  8139e8:	00c00044 	movi	r3,1
  8139ec:	10c00715 	stw	r3,28(r2)
  8139f0:	00005806 	br	813b54 <start_pass_2_quant+0x1e0>
  8139f4:	e0bffe17 	ldw	r2,-8(fp)
  8139f8:	10801617 	ldw	r2,88(r2)
  8139fc:	10800098 	cmpnei	r2,r2,2
  813a00:	1000051e 	bne	r2,zero,813a18 <start_pass_2_quant+0xa4>
  813a04:	e0fffb17 	ldw	r3,-20(fp)
  813a08:	00802074 	movhi	r2,129
  813a0c:	108c7604 	addi	r2,r2,12760
  813a10:	18800115 	stw	r2,4(r3)
  813a14:	00000406 	br	813a28 <start_pass_2_quant+0xb4>
  813a18:	e0fffb17 	ldw	r3,-20(fp)
  813a1c:	00802074 	movhi	r2,129
  813a20:	108c0a04 	addi	r2,r2,12328
  813a24:	18800115 	stw	r2,4(r3)
  813a28:	e0fffb17 	ldw	r3,-20(fp)
  813a2c:	00802074 	movhi	r2,129
  813a30:	108e5404 	addi	r2,r2,14672
  813a34:	18800215 	stw	r2,8(r3)
  813a38:	e0bffe17 	ldw	r2,-8(fp)
  813a3c:	10802117 	ldw	r2,132(r2)
  813a40:	e0bffa15 	stw	r2,-24(fp)
  813a44:	e0bffa17 	ldw	r2,-24(fp)
  813a48:	00800d16 	blt	zero,r2,813a80 <start_pass_2_quant+0x10c>
  813a4c:	e0bffe17 	ldw	r2,-8(fp)
  813a50:	10800017 	ldw	r2,0(r2)
  813a54:	00c00e84 	movi	r3,58
  813a58:	10c00515 	stw	r3,20(r2)
  813a5c:	e0bffe17 	ldw	r2,-8(fp)
  813a60:	10800017 	ldw	r2,0(r2)
  813a64:	00c00044 	movi	r3,1
  813a68:	10c00615 	stw	r3,24(r2)
  813a6c:	e0bffe17 	ldw	r2,-8(fp)
  813a70:	10800017 	ldw	r2,0(r2)
  813a74:	10800017 	ldw	r2,0(r2)
  813a78:	e13ffe17 	ldw	r4,-8(fp)
  813a7c:	103ee83a 	callr	r2
  813a80:	e0bffa17 	ldw	r2,-24(fp)
  813a84:	10804050 	cmplti	r2,r2,257
  813a88:	10000d1e 	bne	r2,zero,813ac0 <start_pass_2_quant+0x14c>
  813a8c:	e0bffe17 	ldw	r2,-8(fp)
  813a90:	10800017 	ldw	r2,0(r2)
  813a94:	00c00ec4 	movi	r3,59
  813a98:	10c00515 	stw	r3,20(r2)
  813a9c:	e0bffe17 	ldw	r2,-8(fp)
  813aa0:	10800017 	ldw	r2,0(r2)
  813aa4:	00c04004 	movi	r3,256
  813aa8:	10c00615 	stw	r3,24(r2)
  813aac:	e0bffe17 	ldw	r2,-8(fp)
  813ab0:	10800017 	ldw	r2,0(r2)
  813ab4:	10800017 	ldw	r2,0(r2)
  813ab8:	e13ffe17 	ldw	r4,-8(fp)
  813abc:	103ee83a 	callr	r2
  813ac0:	e0bffe17 	ldw	r2,-8(fp)
  813ac4:	10801617 	ldw	r2,88(r2)
  813ac8:	10800098 	cmpnei	r2,r2,2
  813acc:	1000211e 	bne	r2,zero,813b54 <start_pass_2_quant+0x1e0>
  813ad0:	e0bffe17 	ldw	r2,-8(fp)
  813ad4:	10801c17 	ldw	r2,112(r2)
  813ad8:	01400184 	movi	r5,6
  813adc:	1009883a 	mov	r4,r2
  813ae0:	08305040 	call	830504 <__mulsi3>
  813ae4:	10800304 	addi	r2,r2,12
  813ae8:	e0bffd15 	stw	r2,-12(fp)
  813aec:	e0bffb17 	ldw	r2,-20(fp)
  813af0:	10800817 	ldw	r2,32(r2)
  813af4:	10000a1e 	bne	r2,zero,813b20 <start_pass_2_quant+0x1ac>
  813af8:	e0bffe17 	ldw	r2,-8(fp)
  813afc:	10800117 	ldw	r2,4(r2)
  813b00:	10800117 	ldw	r2,4(r2)
  813b04:	e1bffd17 	ldw	r6,-12(fp)
  813b08:	01400044 	movi	r5,1
  813b0c:	e13ffe17 	ldw	r4,-8(fp)
  813b10:	103ee83a 	callr	r2
  813b14:	1007883a 	mov	r3,r2
  813b18:	e0bffb17 	ldw	r2,-20(fp)
  813b1c:	10c00815 	stw	r3,32(r2)
  813b20:	e0bffb17 	ldw	r2,-20(fp)
  813b24:	10800817 	ldw	r2,32(r2)
  813b28:	e1bffd17 	ldw	r6,-12(fp)
  813b2c:	000b883a 	mov	r5,zero
  813b30:	1009883a 	mov	r4,r2
  813b34:	08342980 	call	834298 <memset>
  813b38:	e0bffb17 	ldw	r2,-20(fp)
  813b3c:	10800a17 	ldw	r2,40(r2)
  813b40:	1000021e 	bne	r2,zero,813b4c <start_pass_2_quant+0x1d8>
  813b44:	e13ffe17 	ldw	r4,-8(fp)
  813b48:	081371c0 	call	81371c <init_error_limit>
  813b4c:	e0bffb17 	ldw	r2,-20(fp)
  813b50:	10000915 	stw	zero,36(r2)
  813b54:	e0bffb17 	ldw	r2,-20(fp)
  813b58:	10800717 	ldw	r2,28(r2)
  813b5c:	10001526 	beq	r2,zero,813bb4 <start_pass_2_quant+0x240>
  813b60:	e03ffa15 	stw	zero,-24(fp)
  813b64:	00000e06 	br	813ba0 <start_pass_2_quant+0x22c>
  813b68:	e0bffa17 	ldw	r2,-24(fp)
  813b6c:	1085883a 	add	r2,r2,r2
  813b70:	1085883a 	add	r2,r2,r2
  813b74:	1007883a 	mov	r3,r2
  813b78:	e0bffc17 	ldw	r2,-16(fp)
  813b7c:	10c5883a 	add	r2,r2,r3
  813b80:	10800017 	ldw	r2,0(r2)
  813b84:	01840004 	movi	r6,4096
  813b88:	000b883a 	mov	r5,zero
  813b8c:	1009883a 	mov	r4,r2
  813b90:	08342980 	call	834298 <memset>
  813b94:	e0bffa17 	ldw	r2,-24(fp)
  813b98:	10800044 	addi	r2,r2,1
  813b9c:	e0bffa15 	stw	r2,-24(fp)
  813ba0:	e0bffa17 	ldw	r2,-24(fp)
  813ba4:	10800810 	cmplti	r2,r2,32
  813ba8:	103fef1e 	bne	r2,zero,813b68 <__alt_mem_epcs_flash_controller_0+0xff80ab68>
  813bac:	e0bffb17 	ldw	r2,-20(fp)
  813bb0:	10000715 	stw	zero,28(r2)
  813bb4:	0001883a 	nop
  813bb8:	e037883a 	mov	sp,fp
  813bbc:	dfc00117 	ldw	ra,4(sp)
  813bc0:	df000017 	ldw	fp,0(sp)
  813bc4:	dec00204 	addi	sp,sp,8
  813bc8:	f800283a 	ret

00813bcc <new_color_map_2_quant>:
  813bcc:	defffd04 	addi	sp,sp,-12
  813bd0:	df000215 	stw	fp,8(sp)
  813bd4:	df000204 	addi	fp,sp,8
  813bd8:	e13fff15 	stw	r4,-4(fp)
  813bdc:	e0bfff17 	ldw	r2,-4(fp)
  813be0:	10807917 	ldw	r2,484(r2)
  813be4:	e0bffe15 	stw	r2,-8(fp)
  813be8:	e0bffe17 	ldw	r2,-8(fp)
  813bec:	00c00044 	movi	r3,1
  813bf0:	10c00715 	stw	r3,28(r2)
  813bf4:	0001883a 	nop
  813bf8:	e037883a 	mov	sp,fp
  813bfc:	df000017 	ldw	fp,0(sp)
  813c00:	dec00104 	addi	sp,sp,4
  813c04:	f800283a 	ret

00813c08 <jinit_2pass_quantizer>:
  813c08:	defff904 	addi	sp,sp,-28
  813c0c:	dfc00615 	stw	ra,24(sp)
  813c10:	df000515 	stw	fp,20(sp)
  813c14:	dc000415 	stw	r16,16(sp)
  813c18:	df000504 	addi	fp,sp,20
  813c1c:	e13ffe15 	stw	r4,-8(fp)
  813c20:	e0bffe17 	ldw	r2,-8(fp)
  813c24:	10800117 	ldw	r2,4(r2)
  813c28:	10800017 	ldw	r2,0(r2)
  813c2c:	01800b04 	movi	r6,44
  813c30:	01400044 	movi	r5,1
  813c34:	e13ffe17 	ldw	r4,-8(fp)
  813c38:	103ee83a 	callr	r2
  813c3c:	e0bffc15 	stw	r2,-16(fp)
  813c40:	e0bffe17 	ldw	r2,-8(fp)
  813c44:	e0fffc17 	ldw	r3,-16(fp)
  813c48:	10c07915 	stw	r3,484(r2)
  813c4c:	e0fffc17 	ldw	r3,-16(fp)
  813c50:	00802074 	movhi	r2,129
  813c54:	108e5d04 	addi	r2,r2,14708
  813c58:	18800015 	stw	r2,0(r3)
  813c5c:	e0fffc17 	ldw	r3,-16(fp)
  813c60:	00802074 	movhi	r2,129
  813c64:	108ef304 	addi	r2,r2,15308
  813c68:	18800315 	stw	r2,12(r3)
  813c6c:	e0bffc17 	ldw	r2,-16(fp)
  813c70:	10000815 	stw	zero,32(r2)
  813c74:	e0bffc17 	ldw	r2,-16(fp)
  813c78:	10000a15 	stw	zero,40(r2)
  813c7c:	e0bffe17 	ldw	r2,-8(fp)
  813c80:	10801e17 	ldw	r2,120(r2)
  813c84:	108000e0 	cmpeqi	r2,r2,3
  813c88:	1000091e 	bne	r2,zero,813cb0 <jinit_2pass_quantizer+0xa8>
  813c8c:	e0bffe17 	ldw	r2,-8(fp)
  813c90:	10800017 	ldw	r2,0(r2)
  813c94:	00c00c04 	movi	r3,48
  813c98:	10c00515 	stw	r3,20(r2)
  813c9c:	e0bffe17 	ldw	r2,-8(fp)
  813ca0:	10800017 	ldw	r2,0(r2)
  813ca4:	10800017 	ldw	r2,0(r2)
  813ca8:	e13ffe17 	ldw	r4,-8(fp)
  813cac:	103ee83a 	callr	r2
  813cb0:	e0bffe17 	ldw	r2,-8(fp)
  813cb4:	10800117 	ldw	r2,4(r2)
  813cb8:	10800017 	ldw	r2,0(r2)
  813cbc:	01802004 	movi	r6,128
  813cc0:	01400044 	movi	r5,1
  813cc4:	e13ffe17 	ldw	r4,-8(fp)
  813cc8:	103ee83a 	callr	r2
  813ccc:	1007883a 	mov	r3,r2
  813cd0:	e0bffc17 	ldw	r2,-16(fp)
  813cd4:	10c00615 	stw	r3,24(r2)
  813cd8:	e03ffb15 	stw	zero,-20(fp)
  813cdc:	00001106 	br	813d24 <jinit_2pass_quantizer+0x11c>
  813ce0:	e0bffc17 	ldw	r2,-16(fp)
  813ce4:	10c00617 	ldw	r3,24(r2)
  813ce8:	e0bffb17 	ldw	r2,-20(fp)
  813cec:	1085883a 	add	r2,r2,r2
  813cf0:	1085883a 	add	r2,r2,r2
  813cf4:	18a1883a 	add	r16,r3,r2
  813cf8:	e0bffe17 	ldw	r2,-8(fp)
  813cfc:	10800117 	ldw	r2,4(r2)
  813d00:	10800117 	ldw	r2,4(r2)
  813d04:	01840004 	movi	r6,4096
  813d08:	01400044 	movi	r5,1
  813d0c:	e13ffe17 	ldw	r4,-8(fp)
  813d10:	103ee83a 	callr	r2
  813d14:	80800015 	stw	r2,0(r16)
  813d18:	e0bffb17 	ldw	r2,-20(fp)
  813d1c:	10800044 	addi	r2,r2,1
  813d20:	e0bffb15 	stw	r2,-20(fp)
  813d24:	e0bffb17 	ldw	r2,-20(fp)
  813d28:	10800810 	cmplti	r2,r2,32
  813d2c:	103fec1e 	bne	r2,zero,813ce0 <__alt_mem_epcs_flash_controller_0+0xff80ace0>
  813d30:	e0bffc17 	ldw	r2,-16(fp)
  813d34:	00c00044 	movi	r3,1
  813d38:	10c00715 	stw	r3,28(r2)
  813d3c:	e0bffe17 	ldw	r2,-8(fp)
  813d40:	10801b17 	ldw	r2,108(r2)
  813d44:	10003326 	beq	r2,zero,813e14 <jinit_2pass_quantizer+0x20c>
  813d48:	e0bffe17 	ldw	r2,-8(fp)
  813d4c:	10801817 	ldw	r2,96(r2)
  813d50:	e0bffd15 	stw	r2,-12(fp)
  813d54:	e0bffd17 	ldw	r2,-12(fp)
  813d58:	10800208 	cmpgei	r2,r2,8
  813d5c:	10000d1e 	bne	r2,zero,813d94 <jinit_2pass_quantizer+0x18c>
  813d60:	e0bffe17 	ldw	r2,-8(fp)
  813d64:	10800017 	ldw	r2,0(r2)
  813d68:	00c00e84 	movi	r3,58
  813d6c:	10c00515 	stw	r3,20(r2)
  813d70:	e0bffe17 	ldw	r2,-8(fp)
  813d74:	10800017 	ldw	r2,0(r2)
  813d78:	00c00204 	movi	r3,8
  813d7c:	10c00615 	stw	r3,24(r2)
  813d80:	e0bffe17 	ldw	r2,-8(fp)
  813d84:	10800017 	ldw	r2,0(r2)
  813d88:	10800017 	ldw	r2,0(r2)
  813d8c:	e13ffe17 	ldw	r4,-8(fp)
  813d90:	103ee83a 	callr	r2
  813d94:	e0bffd17 	ldw	r2,-12(fp)
  813d98:	10804050 	cmplti	r2,r2,257
  813d9c:	10000d1e 	bne	r2,zero,813dd4 <jinit_2pass_quantizer+0x1cc>
  813da0:	e0bffe17 	ldw	r2,-8(fp)
  813da4:	10800017 	ldw	r2,0(r2)
  813da8:	00c00ec4 	movi	r3,59
  813dac:	10c00515 	stw	r3,20(r2)
  813db0:	e0bffe17 	ldw	r2,-8(fp)
  813db4:	10800017 	ldw	r2,0(r2)
  813db8:	00c04004 	movi	r3,256
  813dbc:	10c00615 	stw	r3,24(r2)
  813dc0:	e0bffe17 	ldw	r2,-8(fp)
  813dc4:	10800017 	ldw	r2,0(r2)
  813dc8:	10800017 	ldw	r2,0(r2)
  813dcc:	e13ffe17 	ldw	r4,-8(fp)
  813dd0:	103ee83a 	callr	r2
  813dd4:	e0bffe17 	ldw	r2,-8(fp)
  813dd8:	10800117 	ldw	r2,4(r2)
  813ddc:	10800217 	ldw	r2,8(r2)
  813de0:	e0fffd17 	ldw	r3,-12(fp)
  813de4:	01c000c4 	movi	r7,3
  813de8:	180d883a 	mov	r6,r3
  813dec:	01400044 	movi	r5,1
  813df0:	e13ffe17 	ldw	r4,-8(fp)
  813df4:	103ee83a 	callr	r2
  813df8:	1007883a 	mov	r3,r2
  813dfc:	e0bffc17 	ldw	r2,-16(fp)
  813e00:	10c00415 	stw	r3,16(r2)
  813e04:	e0bffc17 	ldw	r2,-16(fp)
  813e08:	e0fffd17 	ldw	r3,-12(fp)
  813e0c:	10c00515 	stw	r3,20(r2)
  813e10:	00000206 	br	813e1c <jinit_2pass_quantizer+0x214>
  813e14:	e0bffc17 	ldw	r2,-16(fp)
  813e18:	10000415 	stw	zero,16(r2)
  813e1c:	e0bffe17 	ldw	r2,-8(fp)
  813e20:	10801617 	ldw	r2,88(r2)
  813e24:	10000326 	beq	r2,zero,813e34 <jinit_2pass_quantizer+0x22c>
  813e28:	e0bffe17 	ldw	r2,-8(fp)
  813e2c:	00c00084 	movi	r3,2
  813e30:	10c01615 	stw	r3,88(r2)
  813e34:	e0bffe17 	ldw	r2,-8(fp)
  813e38:	10801617 	ldw	r2,88(r2)
  813e3c:	10800098 	cmpnei	r2,r2,2
  813e40:	1000121e 	bne	r2,zero,813e8c <jinit_2pass_quantizer+0x284>
  813e44:	e0bffe17 	ldw	r2,-8(fp)
  813e48:	10800117 	ldw	r2,4(r2)
  813e4c:	14000117 	ldw	r16,4(r2)
  813e50:	e0bffe17 	ldw	r2,-8(fp)
  813e54:	10801c17 	ldw	r2,112(r2)
  813e58:	01400184 	movi	r5,6
  813e5c:	1009883a 	mov	r4,r2
  813e60:	08305040 	call	830504 <__mulsi3>
  813e64:	10800304 	addi	r2,r2,12
  813e68:	100d883a 	mov	r6,r2
  813e6c:	01400044 	movi	r5,1
  813e70:	e13ffe17 	ldw	r4,-8(fp)
  813e74:	803ee83a 	callr	r16
  813e78:	1007883a 	mov	r3,r2
  813e7c:	e0bffc17 	ldw	r2,-16(fp)
  813e80:	10c00815 	stw	r3,32(r2)
  813e84:	e13ffe17 	ldw	r4,-8(fp)
  813e88:	081371c0 	call	81371c <init_error_limit>
  813e8c:	0001883a 	nop
  813e90:	e6ffff04 	addi	sp,fp,-4
  813e94:	dfc00217 	ldw	ra,8(sp)
  813e98:	df000117 	ldw	fp,4(sp)
  813e9c:	dc000017 	ldw	r16,0(sp)
  813ea0:	dec00304 	addi	sp,sp,12
  813ea4:	f800283a 	ret

00813ea8 <jdiv_round_up>:
  813ea8:	defffc04 	addi	sp,sp,-16
  813eac:	dfc00315 	stw	ra,12(sp)
  813eb0:	df000215 	stw	fp,8(sp)
  813eb4:	df000204 	addi	fp,sp,8
  813eb8:	e13ffe15 	stw	r4,-8(fp)
  813ebc:	e17fff15 	stw	r5,-4(fp)
  813ec0:	e0fffe17 	ldw	r3,-8(fp)
  813ec4:	e0bfff17 	ldw	r2,-4(fp)
  813ec8:	1885883a 	add	r2,r3,r2
  813ecc:	10bfffc4 	addi	r2,r2,-1
  813ed0:	e17fff17 	ldw	r5,-4(fp)
  813ed4:	1009883a 	mov	r4,r2
  813ed8:	08303500 	call	830350 <__divsi3>
  813edc:	e037883a 	mov	sp,fp
  813ee0:	dfc00117 	ldw	ra,4(sp)
  813ee4:	df000017 	ldw	fp,0(sp)
  813ee8:	dec00204 	addi	sp,sp,8
  813eec:	f800283a 	ret

00813ef0 <jround_up>:
  813ef0:	defffc04 	addi	sp,sp,-16
  813ef4:	dfc00315 	stw	ra,12(sp)
  813ef8:	df000215 	stw	fp,8(sp)
  813efc:	df000204 	addi	fp,sp,8
  813f00:	e13ffe15 	stw	r4,-8(fp)
  813f04:	e17fff15 	stw	r5,-4(fp)
  813f08:	e0bfff17 	ldw	r2,-4(fp)
  813f0c:	10bfffc4 	addi	r2,r2,-1
  813f10:	e0fffe17 	ldw	r3,-8(fp)
  813f14:	1885883a 	add	r2,r3,r2
  813f18:	e0bffe15 	stw	r2,-8(fp)
  813f1c:	e0bffe17 	ldw	r2,-8(fp)
  813f20:	e17fff17 	ldw	r5,-4(fp)
  813f24:	1009883a 	mov	r4,r2
  813f28:	08303d40 	call	8303d4 <__modsi3>
  813f2c:	1007883a 	mov	r3,r2
  813f30:	e0bffe17 	ldw	r2,-8(fp)
  813f34:	10c5c83a 	sub	r2,r2,r3
  813f38:	e037883a 	mov	sp,fp
  813f3c:	dfc00117 	ldw	ra,4(sp)
  813f40:	df000017 	ldw	fp,0(sp)
  813f44:	dec00204 	addi	sp,sp,8
  813f48:	f800283a 	ret

00813f4c <jcopy_sample_rows>:
  813f4c:	defff604 	addi	sp,sp,-40
  813f50:	dfc00915 	stw	ra,36(sp)
  813f54:	df000815 	stw	fp,32(sp)
  813f58:	dcc00715 	stw	r19,28(sp)
  813f5c:	dc800615 	stw	r18,24(sp)
  813f60:	dc400515 	stw	r17,20(sp)
  813f64:	dc000415 	stw	r16,16(sp)
  813f68:	df000804 	addi	fp,sp,32
  813f6c:	e13ff815 	stw	r4,-32(fp)
  813f70:	e17ff915 	stw	r5,-28(fp)
  813f74:	e1bffa15 	stw	r6,-24(fp)
  813f78:	e1fffb15 	stw	r7,-20(fp)
  813f7c:	e4400317 	ldw	r17,12(fp)
  813f80:	e0bff917 	ldw	r2,-28(fp)
  813f84:	1085883a 	add	r2,r2,r2
  813f88:	1085883a 	add	r2,r2,r2
  813f8c:	1007883a 	mov	r3,r2
  813f90:	e0bff817 	ldw	r2,-32(fp)
  813f94:	10c5883a 	add	r2,r2,r3
  813f98:	e0bff815 	stw	r2,-32(fp)
  813f9c:	e0bffb17 	ldw	r2,-20(fp)
  813fa0:	1085883a 	add	r2,r2,r2
  813fa4:	1085883a 	add	r2,r2,r2
  813fa8:	1007883a 	mov	r3,r2
  813fac:	e0bffa17 	ldw	r2,-24(fp)
  813fb0:	10c5883a 	add	r2,r2,r3
  813fb4:	e0bffa15 	stw	r2,-24(fp)
  813fb8:	e4000217 	ldw	r16,8(fp)
  813fbc:	00000d06 	br	813ff4 <jcopy_sample_rows+0xa8>
  813fc0:	e0bff817 	ldw	r2,-32(fp)
  813fc4:	10c00104 	addi	r3,r2,4
  813fc8:	e0fff815 	stw	r3,-32(fp)
  813fcc:	14c00017 	ldw	r19,0(r2)
  813fd0:	e0bffa17 	ldw	r2,-24(fp)
  813fd4:	10c00104 	addi	r3,r2,4
  813fd8:	e0fffa15 	stw	r3,-24(fp)
  813fdc:	14800017 	ldw	r18,0(r2)
  813fe0:	880d883a 	mov	r6,r17
  813fe4:	980b883a 	mov	r5,r19
  813fe8:	9009883a 	mov	r4,r18
  813fec:	08341500 	call	834150 <memcpy>
  813ff0:	843fffc4 	addi	r16,r16,-1
  813ff4:	043ff216 	blt	zero,r16,813fc0 <__alt_mem_epcs_flash_controller_0+0xff80afc0>
  813ff8:	0001883a 	nop
  813ffc:	e6fffc04 	addi	sp,fp,-16
  814000:	dfc00517 	ldw	ra,20(sp)
  814004:	df000417 	ldw	fp,16(sp)
  814008:	dcc00317 	ldw	r19,12(sp)
  81400c:	dc800217 	ldw	r18,8(sp)
  814010:	dc400117 	ldw	r17,4(sp)
  814014:	dc000017 	ldw	r16,0(sp)
  814018:	dec00604 	addi	sp,sp,24
  81401c:	f800283a 	ret

00814020 <jcopy_block_row>:
  814020:	defffb04 	addi	sp,sp,-20
  814024:	dfc00415 	stw	ra,16(sp)
  814028:	df000315 	stw	fp,12(sp)
  81402c:	df000304 	addi	fp,sp,12
  814030:	e13ffd15 	stw	r4,-12(fp)
  814034:	e17ffe15 	stw	r5,-8(fp)
  814038:	e1bfff15 	stw	r6,-4(fp)
  81403c:	e0bfff17 	ldw	r2,-4(fp)
  814040:	100491fa 	slli	r2,r2,7
  814044:	100d883a 	mov	r6,r2
  814048:	e17ffd17 	ldw	r5,-12(fp)
  81404c:	e13ffe17 	ldw	r4,-8(fp)
  814050:	08341500 	call	834150 <memcpy>
  814054:	0001883a 	nop
  814058:	e037883a 	mov	sp,fp
  81405c:	dfc00117 	ldw	ra,4(sp)
  814060:	df000017 	ldw	fp,0(sp)
  814064:	dec00204 	addi	sp,sp,8
  814068:	f800283a 	ret

0081406c <jpeg_abort>:
  81406c:	defffc04 	addi	sp,sp,-16
  814070:	dfc00315 	stw	ra,12(sp)
  814074:	df000215 	stw	fp,8(sp)
  814078:	df000204 	addi	fp,sp,8
  81407c:	e13fff15 	stw	r4,-4(fp)
  814080:	e0bfff17 	ldw	r2,-4(fp)
  814084:	10800117 	ldw	r2,4(r2)
  814088:	10001b26 	beq	r2,zero,8140f8 <jpeg_abort+0x8c>
  81408c:	00800044 	movi	r2,1
  814090:	e0bffe15 	stw	r2,-8(fp)
  814094:	00000906 	br	8140bc <jpeg_abort+0x50>
  814098:	e0bfff17 	ldw	r2,-4(fp)
  81409c:	10800117 	ldw	r2,4(r2)
  8140a0:	10800917 	ldw	r2,36(r2)
  8140a4:	e17ffe17 	ldw	r5,-8(fp)
  8140a8:	e13fff17 	ldw	r4,-4(fp)
  8140ac:	103ee83a 	callr	r2
  8140b0:	e0bffe17 	ldw	r2,-8(fp)
  8140b4:	10bfffc4 	addi	r2,r2,-1
  8140b8:	e0bffe15 	stw	r2,-8(fp)
  8140bc:	e0bffe17 	ldw	r2,-8(fp)
  8140c0:	00bff516 	blt	zero,r2,814098 <__alt_mem_epcs_flash_controller_0+0xff80b098>
  8140c4:	e0bfff17 	ldw	r2,-4(fp)
  8140c8:	10800417 	ldw	r2,16(r2)
  8140cc:	10000626 	beq	r2,zero,8140e8 <jpeg_abort+0x7c>
  8140d0:	e0bfff17 	ldw	r2,-4(fp)
  8140d4:	00c03204 	movi	r3,200
  8140d8:	10c00515 	stw	r3,20(r2)
  8140dc:	e0bfff17 	ldw	r2,-4(fp)
  8140e0:	10004e15 	stw	zero,312(r2)
  8140e4:	00000506 	br	8140fc <jpeg_abort+0x90>
  8140e8:	e0bfff17 	ldw	r2,-4(fp)
  8140ec:	00c01904 	movi	r3,100
  8140f0:	10c00515 	stw	r3,20(r2)
  8140f4:	00000106 	br	8140fc <jpeg_abort+0x90>
  8140f8:	0001883a 	nop
  8140fc:	e037883a 	mov	sp,fp
  814100:	dfc00117 	ldw	ra,4(sp)
  814104:	df000017 	ldw	fp,0(sp)
  814108:	dec00204 	addi	sp,sp,8
  81410c:	f800283a 	ret

00814110 <jpeg_destroy>:
  814110:	defffd04 	addi	sp,sp,-12
  814114:	dfc00215 	stw	ra,8(sp)
  814118:	df000115 	stw	fp,4(sp)
  81411c:	df000104 	addi	fp,sp,4
  814120:	e13fff15 	stw	r4,-4(fp)
  814124:	e0bfff17 	ldw	r2,-4(fp)
  814128:	10800117 	ldw	r2,4(r2)
  81412c:	10000526 	beq	r2,zero,814144 <jpeg_destroy+0x34>
  814130:	e0bfff17 	ldw	r2,-4(fp)
  814134:	10800117 	ldw	r2,4(r2)
  814138:	10800a17 	ldw	r2,40(r2)
  81413c:	e13fff17 	ldw	r4,-4(fp)
  814140:	103ee83a 	callr	r2
  814144:	e0bfff17 	ldw	r2,-4(fp)
  814148:	10000115 	stw	zero,4(r2)
  81414c:	e0bfff17 	ldw	r2,-4(fp)
  814150:	10000515 	stw	zero,20(r2)
  814154:	0001883a 	nop
  814158:	e037883a 	mov	sp,fp
  81415c:	dfc00117 	ldw	ra,4(sp)
  814160:	df000017 	ldw	fp,0(sp)
  814164:	dec00204 	addi	sp,sp,8
  814168:	f800283a 	ret

0081416c <jpeg_alloc_quant_table>:
  81416c:	defffc04 	addi	sp,sp,-16
  814170:	dfc00315 	stw	ra,12(sp)
  814174:	df000215 	stw	fp,8(sp)
  814178:	df000204 	addi	fp,sp,8
  81417c:	e13fff15 	stw	r4,-4(fp)
  814180:	e0bfff17 	ldw	r2,-4(fp)
  814184:	10800117 	ldw	r2,4(r2)
  814188:	10800017 	ldw	r2,0(r2)
  81418c:	01802104 	movi	r6,132
  814190:	000b883a 	mov	r5,zero
  814194:	e13fff17 	ldw	r4,-4(fp)
  814198:	103ee83a 	callr	r2
  81419c:	e0bffe15 	stw	r2,-8(fp)
  8141a0:	e0bffe17 	ldw	r2,-8(fp)
  8141a4:	10002015 	stw	zero,128(r2)
  8141a8:	e0bffe17 	ldw	r2,-8(fp)
  8141ac:	e037883a 	mov	sp,fp
  8141b0:	dfc00117 	ldw	ra,4(sp)
  8141b4:	df000017 	ldw	fp,0(sp)
  8141b8:	dec00204 	addi	sp,sp,8
  8141bc:	f800283a 	ret

008141c0 <jpeg_alloc_huff_table>:
  8141c0:	defffc04 	addi	sp,sp,-16
  8141c4:	dfc00315 	stw	ra,12(sp)
  8141c8:	df000215 	stw	fp,8(sp)
  8141cc:	df000204 	addi	fp,sp,8
  8141d0:	e13fff15 	stw	r4,-4(fp)
  8141d4:	e0bfff17 	ldw	r2,-4(fp)
  8141d8:	10800117 	ldw	r2,4(r2)
  8141dc:	10800017 	ldw	r2,0(r2)
  8141e0:	01804604 	movi	r6,280
  8141e4:	000b883a 	mov	r5,zero
  8141e8:	e13fff17 	ldw	r4,-4(fp)
  8141ec:	103ee83a 	callr	r2
  8141f0:	e0bffe15 	stw	r2,-8(fp)
  8141f4:	e0bffe17 	ldw	r2,-8(fp)
  8141f8:	10004515 	stw	zero,276(r2)
  8141fc:	e0bffe17 	ldw	r2,-8(fp)
  814200:	e037883a 	mov	sp,fp
  814204:	dfc00117 	ldw	ra,4(sp)
  814208:	df000017 	ldw	fp,0(sp)
  81420c:	dec00204 	addi	sp,sp,8
  814210:	f800283a 	ret

00814214 <get_byte>:
  814214:	defffc04 	addi	sp,sp,-16
  814218:	dfc00315 	stw	ra,12(sp)
  81421c:	df000215 	stw	fp,8(sp)
  814220:	df000204 	addi	fp,sp,8
  814224:	e13fff15 	stw	r4,-4(fp)
  814228:	e0bfff17 	ldw	r2,-4(fp)
  81422c:	10800617 	ldw	r2,24(r2)
  814230:	e0bffe15 	stw	r2,-8(fp)
  814234:	e0bffe17 	ldw	r2,-8(fp)
  814238:	10800117 	ldw	r2,4(r2)
  81423c:	10000e1e 	bne	r2,zero,814278 <get_byte+0x64>
  814240:	e0bffe17 	ldw	r2,-8(fp)
  814244:	10800317 	ldw	r2,12(r2)
  814248:	e13fff17 	ldw	r4,-4(fp)
  81424c:	103ee83a 	callr	r2
  814250:	1000091e 	bne	r2,zero,814278 <get_byte+0x64>
  814254:	e0bfff17 	ldw	r2,-4(fp)
  814258:	10800017 	ldw	r2,0(r2)
  81425c:	00c00644 	movi	r3,25
  814260:	10c00515 	stw	r3,20(r2)
  814264:	e0bfff17 	ldw	r2,-4(fp)
  814268:	10800017 	ldw	r2,0(r2)
  81426c:	10800017 	ldw	r2,0(r2)
  814270:	e13fff17 	ldw	r4,-4(fp)
  814274:	103ee83a 	callr	r2
  814278:	e0bffe17 	ldw	r2,-8(fp)
  81427c:	10800117 	ldw	r2,4(r2)
  814280:	10ffffc4 	addi	r3,r2,-1
  814284:	e0bffe17 	ldw	r2,-8(fp)
  814288:	10c00115 	stw	r3,4(r2)
  81428c:	e0bffe17 	ldw	r2,-8(fp)
  814290:	10800017 	ldw	r2,0(r2)
  814294:	11000044 	addi	r4,r2,1
  814298:	e0fffe17 	ldw	r3,-8(fp)
  81429c:	19000015 	stw	r4,0(r3)
  8142a0:	10800003 	ldbu	r2,0(r2)
  8142a4:	10803fcc 	andi	r2,r2,255
  8142a8:	e037883a 	mov	sp,fp
  8142ac:	dfc00117 	ldw	ra,4(sp)
  8142b0:	df000017 	ldw	fp,0(sp)
  8142b4:	dec00204 	addi	sp,sp,8
  8142b8:	f800283a 	ret

008142bc <arith_decode>:
  8142bc:	defff604 	addi	sp,sp,-40
  8142c0:	dfc00915 	stw	ra,36(sp)
  8142c4:	df000815 	stw	fp,32(sp)
  8142c8:	dd400715 	stw	r21,28(sp)
  8142cc:	dd000615 	stw	r20,24(sp)
  8142d0:	dcc00515 	stw	r19,20(sp)
  8142d4:	dc800415 	stw	r18,16(sp)
  8142d8:	dc400315 	stw	r17,12(sp)
  8142dc:	dc000215 	stw	r16,8(sp)
  8142e0:	df000804 	addi	fp,sp,32
  8142e4:	e13ff815 	stw	r4,-32(fp)
  8142e8:	e17ff915 	stw	r5,-28(fp)
  8142ec:	e0bff817 	ldw	r2,-32(fp)
  8142f0:	14007517 	ldw	r16,468(r2)
  8142f4:	00002d06 	br	8143ac <arith_decode+0xf0>
  8142f8:	80800517 	ldw	r2,20(r16)
  8142fc:	10bfffc4 	addi	r2,r2,-1
  814300:	80800515 	stw	r2,20(r16)
  814304:	80800517 	ldw	r2,20(r16)
  814308:	1000250e 	bge	r2,zero,8143a0 <arith_decode+0xe4>
  81430c:	e0bff817 	ldw	r2,-32(fp)
  814310:	10806e17 	ldw	r2,440(r2)
  814314:	10000226 	beq	r2,zero,814320 <arith_decode+0x64>
  814318:	0023883a 	mov	r17,zero
  81431c:	00001006 	br	814360 <arith_decode+0xa4>
  814320:	e13ff817 	ldw	r4,-32(fp)
  814324:	08142140 	call	814214 <get_byte>
  814328:	1023883a 	mov	r17,r2
  81432c:	88803fd8 	cmpnei	r2,r17,255
  814330:	10000b1e 	bne	r2,zero,814360 <arith_decode+0xa4>
  814334:	e13ff817 	ldw	r4,-32(fp)
  814338:	08142140 	call	814214 <get_byte>
  81433c:	1023883a 	mov	r17,r2
  814340:	88803fe0 	cmpeqi	r2,r17,255
  814344:	103ffb1e 	bne	r2,zero,814334 <__alt_mem_epcs_flash_controller_0+0xff80b334>
  814348:	8800021e 	bne	r17,zero,814354 <arith_decode+0x98>
  81434c:	04403fc4 	movi	r17,255
  814350:	00000306 	br	814360 <arith_decode+0xa4>
  814354:	e0bff817 	ldw	r2,-32(fp)
  814358:	14406e15 	stw	r17,440(r2)
  81435c:	0023883a 	mov	r17,zero
  814360:	80800317 	ldw	r2,12(r16)
  814364:	1004923a 	slli	r2,r2,8
  814368:	1444b03a 	or	r2,r2,r17
  81436c:	80800315 	stw	r2,12(r16)
  814370:	80800517 	ldw	r2,20(r16)
  814374:	10800204 	addi	r2,r2,8
  814378:	80800515 	stw	r2,20(r16)
  81437c:	80800517 	ldw	r2,20(r16)
  814380:	1000070e 	bge	r2,zero,8143a0 <arith_decode+0xe4>
  814384:	80800517 	ldw	r2,20(r16)
  814388:	10800044 	addi	r2,r2,1
  81438c:	80800515 	stw	r2,20(r16)
  814390:	80800517 	ldw	r2,20(r16)
  814394:	1000021e 	bne	r2,zero,8143a0 <arith_decode+0xe4>
  814398:	00a00014 	movui	r2,32768
  81439c:	80800415 	stw	r2,16(r16)
  8143a0:	80800417 	ldw	r2,16(r16)
  8143a4:	1085883a 	add	r2,r2,r2
  8143a8:	80800415 	stw	r2,16(r16)
  8143ac:	80800417 	ldw	r2,16(r16)
  8143b0:	00dfffc4 	movi	r3,32767
  8143b4:	18bfd00e 	bge	r3,r2,8142f8 <__alt_mem_epcs_flash_controller_0+0xff80b2f8>
  8143b8:	e0bff917 	ldw	r2,-28(fp)
  8143bc:	10800003 	ldbu	r2,0(r2)
  8143c0:	14803fcc 	andi	r18,r2,255
  8143c4:	90c01fcc 	andi	r3,r18,127
  8143c8:	008021b4 	movhi	r2,134
  8143cc:	10a37d04 	addi	r2,r2,-29196
  8143d0:	18c7883a 	add	r3,r3,r3
  8143d4:	18c7883a 	add	r3,r3,r3
  8143d8:	10c5883a 	add	r2,r2,r3
  8143dc:	14400017 	ldw	r17,0(r2)
  8143e0:	882b883a 	mov	r21,r17
  8143e4:	8823d23a 	srai	r17,r17,8
  8143e8:	8829883a 	mov	r20,r17
  8143ec:	8823d23a 	srai	r17,r17,8
  8143f0:	80800417 	ldw	r2,16(r16)
  8143f4:	1467c83a 	sub	r19,r2,r17
  8143f8:	84c00415 	stw	r19,16(r16)
  8143fc:	80800517 	ldw	r2,20(r16)
  814400:	98a6983a 	sll	r19,r19,r2
  814404:	80800317 	ldw	r2,12(r16)
  814408:	14c01c16 	blt	r2,r19,81447c <arith_decode+0x1c0>
  81440c:	80800317 	ldw	r2,12(r16)
  814410:	14c5c83a 	sub	r2,r2,r19
  814414:	80800315 	stw	r2,12(r16)
  814418:	80800417 	ldw	r2,16(r16)
  81441c:	14400b0e 	bge	r2,r17,81444c <arith_decode+0x190>
  814420:	84400415 	stw	r17,16(r16)
  814424:	9007883a 	mov	r3,r18
  814428:	00bfe004 	movi	r2,-128
  81442c:	1884703a 	and	r2,r3,r2
  814430:	1007883a 	mov	r3,r2
  814434:	a005883a 	mov	r2,r20
  814438:	1884f03a 	xor	r2,r3,r2
  81443c:	1007883a 	mov	r3,r2
  814440:	e0bff917 	ldw	r2,-28(fp)
  814444:	10c00005 	stb	r3,0(r2)
  814448:	00002506 	br	8144e0 <arith_decode+0x224>
  81444c:	84400415 	stw	r17,16(r16)
  814450:	9007883a 	mov	r3,r18
  814454:	00bfe004 	movi	r2,-128
  814458:	1884703a 	and	r2,r3,r2
  81445c:	1007883a 	mov	r3,r2
  814460:	a805883a 	mov	r2,r21
  814464:	1884f03a 	xor	r2,r3,r2
  814468:	1007883a 	mov	r3,r2
  81446c:	e0bff917 	ldw	r2,-28(fp)
  814470:	10c00005 	stb	r3,0(r2)
  814474:	9480201c 	xori	r18,r18,128
  814478:	00001906 	br	8144e0 <arith_decode+0x224>
  81447c:	80800417 	ldw	r2,16(r16)
  814480:	00dfffc4 	movi	r3,32767
  814484:	18801616 	blt	r3,r2,8144e0 <arith_decode+0x224>
  814488:	80800417 	ldw	r2,16(r16)
  81448c:	14400b0e 	bge	r2,r17,8144bc <arith_decode+0x200>
  814490:	9007883a 	mov	r3,r18
  814494:	00bfe004 	movi	r2,-128
  814498:	1884703a 	and	r2,r3,r2
  81449c:	1007883a 	mov	r3,r2
  8144a0:	a805883a 	mov	r2,r21
  8144a4:	1884f03a 	xor	r2,r3,r2
  8144a8:	1007883a 	mov	r3,r2
  8144ac:	e0bff917 	ldw	r2,-28(fp)
  8144b0:	10c00005 	stb	r3,0(r2)
  8144b4:	9480201c 	xori	r18,r18,128
  8144b8:	00000906 	br	8144e0 <arith_decode+0x224>
  8144bc:	9007883a 	mov	r3,r18
  8144c0:	00bfe004 	movi	r2,-128
  8144c4:	1884703a 	and	r2,r3,r2
  8144c8:	1007883a 	mov	r3,r2
  8144cc:	a005883a 	mov	r2,r20
  8144d0:	1884f03a 	xor	r2,r3,r2
  8144d4:	1007883a 	mov	r3,r2
  8144d8:	e0bff917 	ldw	r2,-28(fp)
  8144dc:	10c00005 	stb	r3,0(r2)
  8144e0:	9005d1fa 	srai	r2,r18,7
  8144e4:	e6fffa04 	addi	sp,fp,-24
  8144e8:	dfc00717 	ldw	ra,28(sp)
  8144ec:	df000617 	ldw	fp,24(sp)
  8144f0:	dd400517 	ldw	r21,20(sp)
  8144f4:	dd000417 	ldw	r20,16(sp)
  8144f8:	dcc00317 	ldw	r19,12(sp)
  8144fc:	dc800217 	ldw	r18,8(sp)
  814500:	dc400117 	ldw	r17,4(sp)
  814504:	dc000017 	ldw	r16,0(sp)
  814508:	dec00804 	addi	sp,sp,32
  81450c:	f800283a 	ret

00814510 <process_restart>:
  814510:	defffa04 	addi	sp,sp,-24
  814514:	dfc00515 	stw	ra,20(sp)
  814518:	df000415 	stw	fp,16(sp)
  81451c:	df000404 	addi	fp,sp,16
  814520:	e13fff15 	stw	r4,-4(fp)
  814524:	e0bfff17 	ldw	r2,-4(fp)
  814528:	10807517 	ldw	r2,468(r2)
  81452c:	e0bffd15 	stw	r2,-12(fp)
  814530:	e0bfff17 	ldw	r2,-4(fp)
  814534:	10807417 	ldw	r2,464(r2)
  814538:	10800217 	ldw	r2,8(r2)
  81453c:	e13fff17 	ldw	r4,-4(fp)
  814540:	103ee83a 	callr	r2
  814544:	1000091e 	bne	r2,zero,81456c <process_restart+0x5c>
  814548:	e0bfff17 	ldw	r2,-4(fp)
  81454c:	10800017 	ldw	r2,0(r2)
  814550:	00c00644 	movi	r3,25
  814554:	10c00515 	stw	r3,20(r2)
  814558:	e0bfff17 	ldw	r2,-4(fp)
  81455c:	10800017 	ldw	r2,0(r2)
  814560:	10800017 	ldw	r2,0(r2)
  814564:	e13fff17 	ldw	r4,-4(fp)
  814568:	103ee83a 	callr	r2
  81456c:	e03ffc15 	stw	zero,-16(fp)
  814570:	00004606 	br	81468c <process_restart+0x17c>
  814574:	e0ffff17 	ldw	r3,-4(fp)
  814578:	e0bffc17 	ldw	r2,-16(fp)
  81457c:	10801584 	addi	r2,r2,86
  814580:	1085883a 	add	r2,r2,r2
  814584:	1085883a 	add	r2,r2,r2
  814588:	1885883a 	add	r2,r3,r2
  81458c:	10800017 	ldw	r2,0(r2)
  814590:	e0bffe15 	stw	r2,-8(fp)
  814594:	e0bfff17 	ldw	r2,-4(fp)
  814598:	10803817 	ldw	r2,224(r2)
  81459c:	10000626 	beq	r2,zero,8145b8 <process_restart+0xa8>
  8145a0:	e0bfff17 	ldw	r2,-4(fp)
  8145a4:	10806717 	ldw	r2,412(r2)
  8145a8:	10001d1e 	bne	r2,zero,814620 <process_restart+0x110>
  8145ac:	e0bfff17 	ldw	r2,-4(fp)
  8145b0:	10806917 	ldw	r2,420(r2)
  8145b4:	10001a1e 	bne	r2,zero,814620 <process_restart+0x110>
  8145b8:	e0bffe17 	ldw	r2,-8(fp)
  8145bc:	10800517 	ldw	r2,20(r2)
  8145c0:	e0fffd17 	ldw	r3,-12(fp)
  8145c4:	108003c4 	addi	r2,r2,15
  8145c8:	1085883a 	add	r2,r2,r2
  8145cc:	1085883a 	add	r2,r2,r2
  8145d0:	1885883a 	add	r2,r3,r2
  8145d4:	10800017 	ldw	r2,0(r2)
  8145d8:	01801004 	movi	r6,64
  8145dc:	000b883a 	mov	r5,zero
  8145e0:	1009883a 	mov	r4,r2
  8145e4:	08342980 	call	834298 <memset>
  8145e8:	e0fffd17 	ldw	r3,-12(fp)
  8145ec:	e0bffc17 	ldw	r2,-16(fp)
  8145f0:	10800184 	addi	r2,r2,6
  8145f4:	1085883a 	add	r2,r2,r2
  8145f8:	1085883a 	add	r2,r2,r2
  8145fc:	1885883a 	add	r2,r3,r2
  814600:	10000015 	stw	zero,0(r2)
  814604:	e0fffd17 	ldw	r3,-12(fp)
  814608:	e0bffc17 	ldw	r2,-16(fp)
  81460c:	10800284 	addi	r2,r2,10
  814610:	1085883a 	add	r2,r2,r2
  814614:	1085883a 	add	r2,r2,r2
  814618:	1885883a 	add	r2,r3,r2
  81461c:	10000015 	stw	zero,0(r2)
  814620:	e0bfff17 	ldw	r2,-4(fp)
  814624:	10803817 	ldw	r2,224(r2)
  814628:	1000031e 	bne	r2,zero,814638 <process_restart+0x128>
  81462c:	e0bfff17 	ldw	r2,-4(fp)
  814630:	10806d17 	ldw	r2,436(r2)
  814634:	1000061e 	bne	r2,zero,814650 <process_restart+0x140>
  814638:	e0bfff17 	ldw	r2,-4(fp)
  81463c:	10803817 	ldw	r2,224(r2)
  814640:	10000f26 	beq	r2,zero,814680 <process_restart+0x170>
  814644:	e0bfff17 	ldw	r2,-4(fp)
  814648:	10806717 	ldw	r2,412(r2)
  81464c:	10000c26 	beq	r2,zero,814680 <process_restart+0x170>
  814650:	e0bffe17 	ldw	r2,-8(fp)
  814654:	10800617 	ldw	r2,24(r2)
  814658:	e0fffd17 	ldw	r3,-12(fp)
  81465c:	108007c4 	addi	r2,r2,31
  814660:	1085883a 	add	r2,r2,r2
  814664:	1085883a 	add	r2,r2,r2
  814668:	1885883a 	add	r2,r3,r2
  81466c:	10800017 	ldw	r2,0(r2)
  814670:	01804004 	movi	r6,256
  814674:	000b883a 	mov	r5,zero
  814678:	1009883a 	mov	r4,r2
  81467c:	08342980 	call	834298 <memset>
  814680:	e0bffc17 	ldw	r2,-16(fp)
  814684:	10800044 	addi	r2,r2,1
  814688:	e0bffc15 	stw	r2,-16(fp)
  81468c:	e0bfff17 	ldw	r2,-4(fp)
  814690:	10805517 	ldw	r2,340(r2)
  814694:	e0fffc17 	ldw	r3,-16(fp)
  814698:	18bfb616 	blt	r3,r2,814574 <__alt_mem_epcs_flash_controller_0+0xff80b574>
  81469c:	e0bffd17 	ldw	r2,-12(fp)
  8146a0:	10000315 	stw	zero,12(r2)
  8146a4:	e0bffd17 	ldw	r2,-12(fp)
  8146a8:	10000415 	stw	zero,16(r2)
  8146ac:	e0bffd17 	ldw	r2,-12(fp)
  8146b0:	00fffc04 	movi	r3,-16
  8146b4:	10c00515 	stw	r3,20(r2)
  8146b8:	e0bfff17 	ldw	r2,-4(fp)
  8146bc:	10c04617 	ldw	r3,280(r2)
  8146c0:	e0bffd17 	ldw	r2,-12(fp)
  8146c4:	10c00e15 	stw	r3,56(r2)
  8146c8:	0001883a 	nop
  8146cc:	e037883a 	mov	sp,fp
  8146d0:	dfc00117 	ldw	ra,4(sp)
  8146d4:	df000017 	ldw	fp,0(sp)
  8146d8:	dec00204 	addi	sp,sp,8
  8146dc:	f800283a 	ret

008146e0 <decode_mcu_DC_first>:
  8146e0:	defff304 	addi	sp,sp,-52
  8146e4:	dfc00c15 	stw	ra,48(sp)
  8146e8:	df000b15 	stw	fp,44(sp)
  8146ec:	df000b04 	addi	fp,sp,44
  8146f0:	e13ffe15 	stw	r4,-8(fp)
  8146f4:	e17fff15 	stw	r5,-4(fp)
  8146f8:	e0bffe17 	ldw	r2,-8(fp)
  8146fc:	10807517 	ldw	r2,468(r2)
  814700:	e0bff915 	stw	r2,-28(fp)
  814704:	e0bffe17 	ldw	r2,-8(fp)
  814708:	10804617 	ldw	r2,280(r2)
  81470c:	10000a26 	beq	r2,zero,814738 <decode_mcu_DC_first+0x58>
  814710:	e0bff917 	ldw	r2,-28(fp)
  814714:	10800e17 	ldw	r2,56(r2)
  814718:	1000021e 	bne	r2,zero,814724 <decode_mcu_DC_first+0x44>
  81471c:	e13ffe17 	ldw	r4,-8(fp)
  814720:	08145100 	call	814510 <process_restart>
  814724:	e0bff917 	ldw	r2,-28(fp)
  814728:	10800e17 	ldw	r2,56(r2)
  81472c:	10ffffc4 	addi	r3,r2,-1
  814730:	e0bff917 	ldw	r2,-28(fp)
  814734:	10c00e15 	stw	r3,56(r2)
  814738:	e0bff917 	ldw	r2,-28(fp)
  81473c:	10800517 	ldw	r2,20(r2)
  814740:	10bfffd8 	cmpnei	r2,r2,-1
  814744:	1000021e 	bne	r2,zero,814750 <decode_mcu_DC_first+0x70>
  814748:	00800044 	movi	r2,1
  81474c:	0000e706 	br	814aec <decode_mcu_DC_first+0x40c>
  814750:	e03ff615 	stw	zero,-40(fp)
  814754:	0000e006 	br	814ad8 <decode_mcu_DC_first+0x3f8>
  814758:	e0bff617 	ldw	r2,-40(fp)
  81475c:	1085883a 	add	r2,r2,r2
  814760:	1085883a 	add	r2,r2,r2
  814764:	1007883a 	mov	r3,r2
  814768:	e0bfff17 	ldw	r2,-4(fp)
  81476c:	10c5883a 	add	r2,r2,r3
  814770:	10800017 	ldw	r2,0(r2)
  814774:	e0bffa15 	stw	r2,-24(fp)
  814778:	e0fffe17 	ldw	r3,-8(fp)
  81477c:	e0bff617 	ldw	r2,-40(fp)
  814780:	10801744 	addi	r2,r2,93
  814784:	1085883a 	add	r2,r2,r2
  814788:	1085883a 	add	r2,r2,r2
  81478c:	1885883a 	add	r2,r3,r2
  814790:	10800017 	ldw	r2,0(r2)
  814794:	e0bffb15 	stw	r2,-20(fp)
  814798:	e0fffe17 	ldw	r3,-8(fp)
  81479c:	e0bffb17 	ldw	r2,-20(fp)
  8147a0:	10801584 	addi	r2,r2,86
  8147a4:	1085883a 	add	r2,r2,r2
  8147a8:	1085883a 	add	r2,r2,r2
  8147ac:	1885883a 	add	r2,r3,r2
  8147b0:	10800017 	ldw	r2,0(r2)
  8147b4:	10800517 	ldw	r2,20(r2)
  8147b8:	e0bffc15 	stw	r2,-16(fp)
  8147bc:	e0fff917 	ldw	r3,-28(fp)
  8147c0:	e0bffc17 	ldw	r2,-16(fp)
  8147c4:	108003c4 	addi	r2,r2,15
  8147c8:	1085883a 	add	r2,r2,r2
  8147cc:	1085883a 	add	r2,r2,r2
  8147d0:	1885883a 	add	r2,r3,r2
  8147d4:	10c00017 	ldw	r3,0(r2)
  8147d8:	e13ff917 	ldw	r4,-28(fp)
  8147dc:	e0bffb17 	ldw	r2,-20(fp)
  8147e0:	10800284 	addi	r2,r2,10
  8147e4:	1085883a 	add	r2,r2,r2
  8147e8:	1085883a 	add	r2,r2,r2
  8147ec:	2085883a 	add	r2,r4,r2
  8147f0:	10800017 	ldw	r2,0(r2)
  8147f4:	1885883a 	add	r2,r3,r2
  8147f8:	e0bff515 	stw	r2,-44(fp)
  8147fc:	e17ff517 	ldw	r5,-44(fp)
  814800:	e13ffe17 	ldw	r4,-8(fp)
  814804:	08142bc0 	call	8142bc <arith_decode>
  814808:	1000081e 	bne	r2,zero,81482c <decode_mcu_DC_first+0x14c>
  81480c:	e0fff917 	ldw	r3,-28(fp)
  814810:	e0bffb17 	ldw	r2,-20(fp)
  814814:	10800284 	addi	r2,r2,10
  814818:	1085883a 	add	r2,r2,r2
  81481c:	1085883a 	add	r2,r2,r2
  814820:	1885883a 	add	r2,r3,r2
  814824:	10000015 	stw	zero,0(r2)
  814828:	00009b06 	br	814a98 <decode_mcu_DC_first+0x3b8>
  81482c:	e0bff517 	ldw	r2,-44(fp)
  814830:	10800044 	addi	r2,r2,1
  814834:	100b883a 	mov	r5,r2
  814838:	e13ffe17 	ldw	r4,-8(fp)
  81483c:	08142bc0 	call	8142bc <arith_decode>
  814840:	e0bffd15 	stw	r2,-12(fp)
  814844:	e0bff517 	ldw	r2,-44(fp)
  814848:	10800084 	addi	r2,r2,2
  81484c:	e0bff515 	stw	r2,-44(fp)
  814850:	e0bffd17 	ldw	r2,-12(fp)
  814854:	e0fff517 	ldw	r3,-44(fp)
  814858:	1885883a 	add	r2,r3,r2
  81485c:	e0bff515 	stw	r2,-44(fp)
  814860:	e17ff517 	ldw	r5,-44(fp)
  814864:	e13ffe17 	ldw	r4,-8(fp)
  814868:	08142bc0 	call	8142bc <arith_decode>
  81486c:	e0bff815 	stw	r2,-32(fp)
  814870:	e0bff817 	ldw	r2,-32(fp)
  814874:	10002626 	beq	r2,zero,814910 <decode_mcu_DC_first+0x230>
  814878:	e0fff917 	ldw	r3,-28(fp)
  81487c:	e0bffc17 	ldw	r2,-16(fp)
  814880:	108003c4 	addi	r2,r2,15
  814884:	1085883a 	add	r2,r2,r2
  814888:	1085883a 	add	r2,r2,r2
  81488c:	1885883a 	add	r2,r3,r2
  814890:	10800017 	ldw	r2,0(r2)
  814894:	10800504 	addi	r2,r2,20
  814898:	e0bff515 	stw	r2,-44(fp)
  81489c:	00001806 	br	814900 <decode_mcu_DC_first+0x220>
  8148a0:	e0bff817 	ldw	r2,-32(fp)
  8148a4:	1085883a 	add	r2,r2,r2
  8148a8:	e0bff815 	stw	r2,-32(fp)
  8148ac:	e0fff817 	ldw	r3,-32(fp)
  8148b0:	00a00014 	movui	r2,32768
  8148b4:	18800f1e 	bne	r3,r2,8148f4 <decode_mcu_DC_first+0x214>
  8148b8:	e0bffe17 	ldw	r2,-8(fp)
  8148bc:	10800017 	ldw	r2,0(r2)
  8148c0:	00c01d44 	movi	r3,117
  8148c4:	10c00515 	stw	r3,20(r2)
  8148c8:	e0bffe17 	ldw	r2,-8(fp)
  8148cc:	10800017 	ldw	r2,0(r2)
  8148d0:	10800117 	ldw	r2,4(r2)
  8148d4:	017fffc4 	movi	r5,-1
  8148d8:	e13ffe17 	ldw	r4,-8(fp)
  8148dc:	103ee83a 	callr	r2
  8148e0:	e0bff917 	ldw	r2,-28(fp)
  8148e4:	00ffffc4 	movi	r3,-1
  8148e8:	10c00515 	stw	r3,20(r2)
  8148ec:	00800044 	movi	r2,1
  8148f0:	00007e06 	br	814aec <decode_mcu_DC_first+0x40c>
  8148f4:	e0bff517 	ldw	r2,-44(fp)
  8148f8:	10800044 	addi	r2,r2,1
  8148fc:	e0bff515 	stw	r2,-44(fp)
  814900:	e17ff517 	ldw	r5,-44(fp)
  814904:	e13ffe17 	ldw	r4,-8(fp)
  814908:	08142bc0 	call	8142bc <arith_decode>
  81490c:	103fe41e 	bne	r2,zero,8148a0 <__alt_mem_epcs_flash_controller_0+0xff80b8a0>
  814910:	e0fffe17 	ldw	r3,-8(fp)
  814914:	e0bffc17 	ldw	r2,-16(fp)
  814918:	1885883a 	add	r2,r3,r2
  81491c:	10803a04 	addi	r2,r2,232
  814920:	10800003 	ldbu	r2,0(r2)
  814924:	10803fcc 	andi	r2,r2,255
  814928:	00c00044 	movi	r3,1
  81492c:	1884983a 	sll	r2,r3,r2
  814930:	1005d07a 	srai	r2,r2,1
  814934:	e0fff817 	ldw	r3,-32(fp)
  814938:	1880080e 	bge	r3,r2,81495c <decode_mcu_DC_first+0x27c>
  81493c:	e0fff917 	ldw	r3,-28(fp)
  814940:	e0bffb17 	ldw	r2,-20(fp)
  814944:	10800284 	addi	r2,r2,10
  814948:	1085883a 	add	r2,r2,r2
  81494c:	1085883a 	add	r2,r2,r2
  814950:	1885883a 	add	r2,r3,r2
  814954:	10000015 	stw	zero,0(r2)
  814958:	00002406 	br	8149ec <decode_mcu_DC_first+0x30c>
  81495c:	e0fffe17 	ldw	r3,-8(fp)
  814960:	e0bffc17 	ldw	r2,-16(fp)
  814964:	1885883a 	add	r2,r3,r2
  814968:	10803e04 	addi	r2,r2,248
  81496c:	10800003 	ldbu	r2,0(r2)
  814970:	10803fcc 	andi	r2,r2,255
  814974:	00c00044 	movi	r3,1
  814978:	1884983a 	sll	r2,r3,r2
  81497c:	1007d07a 	srai	r3,r2,1
  814980:	e0bff817 	ldw	r2,-32(fp)
  814984:	18800d0e 	bge	r3,r2,8149bc <decode_mcu_DC_first+0x2dc>
  814988:	e0bffd17 	ldw	r2,-12(fp)
  81498c:	108000c4 	addi	r2,r2,3
  814990:	1085883a 	add	r2,r2,r2
  814994:	1085883a 	add	r2,r2,r2
  814998:	1009883a 	mov	r4,r2
  81499c:	e0fff917 	ldw	r3,-28(fp)
  8149a0:	e0bffb17 	ldw	r2,-20(fp)
  8149a4:	10800284 	addi	r2,r2,10
  8149a8:	1085883a 	add	r2,r2,r2
  8149ac:	1085883a 	add	r2,r2,r2
  8149b0:	1885883a 	add	r2,r3,r2
  8149b4:	11000015 	stw	r4,0(r2)
  8149b8:	00000c06 	br	8149ec <decode_mcu_DC_first+0x30c>
  8149bc:	e0bffd17 	ldw	r2,-12(fp)
  8149c0:	10800044 	addi	r2,r2,1
  8149c4:	1085883a 	add	r2,r2,r2
  8149c8:	1085883a 	add	r2,r2,r2
  8149cc:	1009883a 	mov	r4,r2
  8149d0:	e0fff917 	ldw	r3,-28(fp)
  8149d4:	e0bffb17 	ldw	r2,-20(fp)
  8149d8:	10800284 	addi	r2,r2,10
  8149dc:	1085883a 	add	r2,r2,r2
  8149e0:	1085883a 	add	r2,r2,r2
  8149e4:	1885883a 	add	r2,r3,r2
  8149e8:	11000015 	stw	r4,0(r2)
  8149ec:	e0bff817 	ldw	r2,-32(fp)
  8149f0:	e0bff715 	stw	r2,-36(fp)
  8149f4:	e0bff517 	ldw	r2,-44(fp)
  8149f8:	10800384 	addi	r2,r2,14
  8149fc:	e0bff515 	stw	r2,-44(fp)
  814a00:	00000806 	br	814a24 <decode_mcu_DC_first+0x344>
  814a04:	e17ff517 	ldw	r5,-44(fp)
  814a08:	e13ffe17 	ldw	r4,-8(fp)
  814a0c:	08142bc0 	call	8142bc <arith_decode>
  814a10:	10000426 	beq	r2,zero,814a24 <decode_mcu_DC_first+0x344>
  814a14:	e0fff717 	ldw	r3,-36(fp)
  814a18:	e0bff817 	ldw	r2,-32(fp)
  814a1c:	1884b03a 	or	r2,r3,r2
  814a20:	e0bff715 	stw	r2,-36(fp)
  814a24:	e0bff817 	ldw	r2,-32(fp)
  814a28:	1005d07a 	srai	r2,r2,1
  814a2c:	e0bff815 	stw	r2,-32(fp)
  814a30:	e0bff817 	ldw	r2,-32(fp)
  814a34:	103ff31e 	bne	r2,zero,814a04 <__alt_mem_epcs_flash_controller_0+0xff80ba04>
  814a38:	e0bff717 	ldw	r2,-36(fp)
  814a3c:	10800044 	addi	r2,r2,1
  814a40:	e0bff715 	stw	r2,-36(fp)
  814a44:	e0bffd17 	ldw	r2,-12(fp)
  814a48:	10000326 	beq	r2,zero,814a58 <decode_mcu_DC_first+0x378>
  814a4c:	e0bff717 	ldw	r2,-36(fp)
  814a50:	0085c83a 	sub	r2,zero,r2
  814a54:	e0bff715 	stw	r2,-36(fp)
  814a58:	e0fff917 	ldw	r3,-28(fp)
  814a5c:	e0bffb17 	ldw	r2,-20(fp)
  814a60:	10800184 	addi	r2,r2,6
  814a64:	1085883a 	add	r2,r2,r2
  814a68:	1085883a 	add	r2,r2,r2
  814a6c:	1885883a 	add	r2,r3,r2
  814a70:	10c00017 	ldw	r3,0(r2)
  814a74:	e0bff717 	ldw	r2,-36(fp)
  814a78:	1887883a 	add	r3,r3,r2
  814a7c:	e13ff917 	ldw	r4,-28(fp)
  814a80:	e0bffb17 	ldw	r2,-20(fp)
  814a84:	10800184 	addi	r2,r2,6
  814a88:	1085883a 	add	r2,r2,r2
  814a8c:	1085883a 	add	r2,r2,r2
  814a90:	2085883a 	add	r2,r4,r2
  814a94:	10c00015 	stw	r3,0(r2)
  814a98:	e0fff917 	ldw	r3,-28(fp)
  814a9c:	e0bffb17 	ldw	r2,-20(fp)
  814aa0:	10800184 	addi	r2,r2,6
  814aa4:	1085883a 	add	r2,r2,r2
  814aa8:	1085883a 	add	r2,r2,r2
  814aac:	1885883a 	add	r2,r3,r2
  814ab0:	10c00017 	ldw	r3,0(r2)
  814ab4:	e0bffe17 	ldw	r2,-8(fp)
  814ab8:	10806a17 	ldw	r2,424(r2)
  814abc:	1884983a 	sll	r2,r3,r2
  814ac0:	1007883a 	mov	r3,r2
  814ac4:	e0bffa17 	ldw	r2,-24(fp)
  814ac8:	10c0000d 	sth	r3,0(r2)
  814acc:	e0bff617 	ldw	r2,-40(fp)
  814ad0:	10800044 	addi	r2,r2,1
  814ad4:	e0bff615 	stw	r2,-40(fp)
  814ad8:	e0bffe17 	ldw	r2,-8(fp)
  814adc:	10805c17 	ldw	r2,368(r2)
  814ae0:	e0fff617 	ldw	r3,-40(fp)
  814ae4:	18bf1c16 	blt	r3,r2,814758 <__alt_mem_epcs_flash_controller_0+0xff80b758>
  814ae8:	00800044 	movi	r2,1
  814aec:	e037883a 	mov	sp,fp
  814af0:	dfc00117 	ldw	ra,4(sp)
  814af4:	df000017 	ldw	fp,0(sp)
  814af8:	dec00204 	addi	sp,sp,8
  814afc:	f800283a 	ret

00814b00 <decode_mcu_AC_first>:
  814b00:	defff304 	addi	sp,sp,-52
  814b04:	dfc00c15 	stw	ra,48(sp)
  814b08:	df000b15 	stw	fp,44(sp)
  814b0c:	df000b04 	addi	fp,sp,44
  814b10:	e13ffe15 	stw	r4,-8(fp)
  814b14:	e17fff15 	stw	r5,-4(fp)
  814b18:	e0bffe17 	ldw	r2,-8(fp)
  814b1c:	10807517 	ldw	r2,468(r2)
  814b20:	e0bff915 	stw	r2,-28(fp)
  814b24:	e0bffe17 	ldw	r2,-8(fp)
  814b28:	10804617 	ldw	r2,280(r2)
  814b2c:	10000a26 	beq	r2,zero,814b58 <decode_mcu_AC_first+0x58>
  814b30:	e0bff917 	ldw	r2,-28(fp)
  814b34:	10800e17 	ldw	r2,56(r2)
  814b38:	1000021e 	bne	r2,zero,814b44 <decode_mcu_AC_first+0x44>
  814b3c:	e13ffe17 	ldw	r4,-8(fp)
  814b40:	08145100 	call	814510 <process_restart>
  814b44:	e0bff917 	ldw	r2,-28(fp)
  814b48:	10800e17 	ldw	r2,56(r2)
  814b4c:	10ffffc4 	addi	r3,r2,-1
  814b50:	e0bff917 	ldw	r2,-28(fp)
  814b54:	10c00e15 	stw	r3,56(r2)
  814b58:	e0bff917 	ldw	r2,-28(fp)
  814b5c:	10800517 	ldw	r2,20(r2)
  814b60:	10bfffd8 	cmpnei	r2,r2,-1
  814b64:	1000021e 	bne	r2,zero,814b70 <decode_mcu_AC_first+0x70>
  814b68:	00800044 	movi	r2,1
  814b6c:	0000b806 	br	814e50 <decode_mcu_AC_first+0x350>
  814b70:	e0bffe17 	ldw	r2,-8(fp)
  814b74:	10806c17 	ldw	r2,432(r2)
  814b78:	e0bffa15 	stw	r2,-24(fp)
  814b7c:	e0bfff17 	ldw	r2,-4(fp)
  814b80:	10800017 	ldw	r2,0(r2)
  814b84:	e0bffb15 	stw	r2,-20(fp)
  814b88:	e0bffe17 	ldw	r2,-8(fp)
  814b8c:	10805617 	ldw	r2,344(r2)
  814b90:	10800617 	ldw	r2,24(r2)
  814b94:	e0bffc15 	stw	r2,-16(fp)
  814b98:	e0bffe17 	ldw	r2,-8(fp)
  814b9c:	10806717 	ldw	r2,412(r2)
  814ba0:	10bfffc4 	addi	r2,r2,-1
  814ba4:	e0bff615 	stw	r2,-40(fp)
  814ba8:	e0fff917 	ldw	r3,-28(fp)
  814bac:	e0bffc17 	ldw	r2,-16(fp)
  814bb0:	108007c4 	addi	r2,r2,31
  814bb4:	1085883a 	add	r2,r2,r2
  814bb8:	1085883a 	add	r2,r2,r2
  814bbc:	1885883a 	add	r2,r3,r2
  814bc0:	11000017 	ldw	r4,0(r2)
  814bc4:	e0fff617 	ldw	r3,-40(fp)
  814bc8:	1805883a 	mov	r2,r3
  814bcc:	1085883a 	add	r2,r2,r2
  814bd0:	10c5883a 	add	r2,r2,r3
  814bd4:	2085883a 	add	r2,r4,r2
  814bd8:	e0bff515 	stw	r2,-44(fp)
  814bdc:	e17ff517 	ldw	r5,-44(fp)
  814be0:	e13ffe17 	ldw	r4,-8(fp)
  814be4:	08142bc0 	call	8142bc <arith_decode>
  814be8:	1000971e 	bne	r2,zero,814e48 <decode_mcu_AC_first+0x348>
  814bec:	e0bff617 	ldw	r2,-40(fp)
  814bf0:	10800044 	addi	r2,r2,1
  814bf4:	e0bff615 	stw	r2,-40(fp)
  814bf8:	e0bff517 	ldw	r2,-44(fp)
  814bfc:	10800044 	addi	r2,r2,1
  814c00:	100b883a 	mov	r5,r2
  814c04:	e13ffe17 	ldw	r4,-8(fp)
  814c08:	08142bc0 	call	8142bc <arith_decode>
  814c0c:	1000161e 	bne	r2,zero,814c68 <decode_mcu_AC_first+0x168>
  814c10:	e0bff517 	ldw	r2,-44(fp)
  814c14:	108000c4 	addi	r2,r2,3
  814c18:	e0bff515 	stw	r2,-44(fp)
  814c1c:	e0bffe17 	ldw	r2,-8(fp)
  814c20:	10806817 	ldw	r2,416(r2)
  814c24:	e0fff617 	ldw	r3,-40(fp)
  814c28:	18bff016 	blt	r3,r2,814bec <__alt_mem_epcs_flash_controller_0+0xff80bbec>
  814c2c:	e0bffe17 	ldw	r2,-8(fp)
  814c30:	10800017 	ldw	r2,0(r2)
  814c34:	00c01d44 	movi	r3,117
  814c38:	10c00515 	stw	r3,20(r2)
  814c3c:	e0bffe17 	ldw	r2,-8(fp)
  814c40:	10800017 	ldw	r2,0(r2)
  814c44:	10800117 	ldw	r2,4(r2)
  814c48:	017fffc4 	movi	r5,-1
  814c4c:	e13ffe17 	ldw	r4,-8(fp)
  814c50:	103ee83a 	callr	r2
  814c54:	e0bff917 	ldw	r2,-28(fp)
  814c58:	00ffffc4 	movi	r3,-1
  814c5c:	10c00515 	stw	r3,20(r2)
  814c60:	00800044 	movi	r2,1
  814c64:	00007a06 	br	814e50 <decode_mcu_AC_first+0x350>
  814c68:	0001883a 	nop
  814c6c:	e0bff917 	ldw	r2,-28(fp)
  814c70:	10802f04 	addi	r2,r2,188
  814c74:	100b883a 	mov	r5,r2
  814c78:	e13ffe17 	ldw	r4,-8(fp)
  814c7c:	08142bc0 	call	8142bc <arith_decode>
  814c80:	e0bffd15 	stw	r2,-12(fp)
  814c84:	e0bff517 	ldw	r2,-44(fp)
  814c88:	10800084 	addi	r2,r2,2
  814c8c:	e0bff515 	stw	r2,-44(fp)
  814c90:	e17ff517 	ldw	r5,-44(fp)
  814c94:	e13ffe17 	ldw	r4,-8(fp)
  814c98:	08142bc0 	call	8142bc <arith_decode>
  814c9c:	e0bff815 	stw	r2,-32(fp)
  814ca0:	e0bff817 	ldw	r2,-32(fp)
  814ca4:	10003826 	beq	r2,zero,814d88 <decode_mcu_AC_first+0x288>
  814ca8:	e17ff517 	ldw	r5,-44(fp)
  814cac:	e13ffe17 	ldw	r4,-8(fp)
  814cb0:	08142bc0 	call	8142bc <arith_decode>
  814cb4:	10003426 	beq	r2,zero,814d88 <decode_mcu_AC_first+0x288>
  814cb8:	e0bff817 	ldw	r2,-32(fp)
  814cbc:	1085883a 	add	r2,r2,r2
  814cc0:	e0bff815 	stw	r2,-32(fp)
  814cc4:	e0fff917 	ldw	r3,-28(fp)
  814cc8:	e0bffc17 	ldw	r2,-16(fp)
  814ccc:	108007c4 	addi	r2,r2,31
  814cd0:	1085883a 	add	r2,r2,r2
  814cd4:	1085883a 	add	r2,r2,r2
  814cd8:	1885883a 	add	r2,r3,r2
  814cdc:	10c00017 	ldw	r3,0(r2)
  814ce0:	e13ffe17 	ldw	r4,-8(fp)
  814ce4:	e0bffc17 	ldw	r2,-16(fp)
  814ce8:	2085883a 	add	r2,r4,r2
  814cec:	10804204 	addi	r2,r2,264
  814cf0:	10800003 	ldbu	r2,0(r2)
  814cf4:	11003fcc 	andi	r4,r2,255
  814cf8:	e0bff617 	ldw	r2,-40(fp)
  814cfc:	20800216 	blt	r4,r2,814d08 <decode_mcu_AC_first+0x208>
  814d00:	00802f44 	movi	r2,189
  814d04:	00000106 	br	814d0c <decode_mcu_AC_first+0x20c>
  814d08:	00803644 	movi	r2,217
  814d0c:	1885883a 	add	r2,r3,r2
  814d10:	e0bff515 	stw	r2,-44(fp)
  814d14:	00001806 	br	814d78 <decode_mcu_AC_first+0x278>
  814d18:	e0bff817 	ldw	r2,-32(fp)
  814d1c:	1085883a 	add	r2,r2,r2
  814d20:	e0bff815 	stw	r2,-32(fp)
  814d24:	e0fff817 	ldw	r3,-32(fp)
  814d28:	00a00014 	movui	r2,32768
  814d2c:	18800f1e 	bne	r3,r2,814d6c <decode_mcu_AC_first+0x26c>
  814d30:	e0bffe17 	ldw	r2,-8(fp)
  814d34:	10800017 	ldw	r2,0(r2)
  814d38:	00c01d44 	movi	r3,117
  814d3c:	10c00515 	stw	r3,20(r2)
  814d40:	e0bffe17 	ldw	r2,-8(fp)
  814d44:	10800017 	ldw	r2,0(r2)
  814d48:	10800117 	ldw	r2,4(r2)
  814d4c:	017fffc4 	movi	r5,-1
  814d50:	e13ffe17 	ldw	r4,-8(fp)
  814d54:	103ee83a 	callr	r2
  814d58:	e0bff917 	ldw	r2,-28(fp)
  814d5c:	00ffffc4 	movi	r3,-1
  814d60:	10c00515 	stw	r3,20(r2)
  814d64:	00800044 	movi	r2,1
  814d68:	00003906 	br	814e50 <decode_mcu_AC_first+0x350>
  814d6c:	e0bff517 	ldw	r2,-44(fp)
  814d70:	10800044 	addi	r2,r2,1
  814d74:	e0bff515 	stw	r2,-44(fp)
  814d78:	e17ff517 	ldw	r5,-44(fp)
  814d7c:	e13ffe17 	ldw	r4,-8(fp)
  814d80:	08142bc0 	call	8142bc <arith_decode>
  814d84:	103fe41e 	bne	r2,zero,814d18 <__alt_mem_epcs_flash_controller_0+0xff80bd18>
  814d88:	e0bff817 	ldw	r2,-32(fp)
  814d8c:	e0bff715 	stw	r2,-36(fp)
  814d90:	e0bff517 	ldw	r2,-44(fp)
  814d94:	10800384 	addi	r2,r2,14
  814d98:	e0bff515 	stw	r2,-44(fp)
  814d9c:	00000806 	br	814dc0 <decode_mcu_AC_first+0x2c0>
  814da0:	e17ff517 	ldw	r5,-44(fp)
  814da4:	e13ffe17 	ldw	r4,-8(fp)
  814da8:	08142bc0 	call	8142bc <arith_decode>
  814dac:	10000426 	beq	r2,zero,814dc0 <decode_mcu_AC_first+0x2c0>
  814db0:	e0fff717 	ldw	r3,-36(fp)
  814db4:	e0bff817 	ldw	r2,-32(fp)
  814db8:	1884b03a 	or	r2,r3,r2
  814dbc:	e0bff715 	stw	r2,-36(fp)
  814dc0:	e0bff817 	ldw	r2,-32(fp)
  814dc4:	1005d07a 	srai	r2,r2,1
  814dc8:	e0bff815 	stw	r2,-32(fp)
  814dcc:	e0bff817 	ldw	r2,-32(fp)
  814dd0:	103ff31e 	bne	r2,zero,814da0 <__alt_mem_epcs_flash_controller_0+0xff80bda0>
  814dd4:	e0bff717 	ldw	r2,-36(fp)
  814dd8:	10800044 	addi	r2,r2,1
  814ddc:	e0bff715 	stw	r2,-36(fp)
  814de0:	e0bffd17 	ldw	r2,-12(fp)
  814de4:	10000326 	beq	r2,zero,814df4 <decode_mcu_AC_first+0x2f4>
  814de8:	e0bff717 	ldw	r2,-36(fp)
  814dec:	0085c83a 	sub	r2,zero,r2
  814df0:	e0bff715 	stw	r2,-36(fp)
  814df4:	e0bff617 	ldw	r2,-40(fp)
  814df8:	1085883a 	add	r2,r2,r2
  814dfc:	1085883a 	add	r2,r2,r2
  814e00:	1007883a 	mov	r3,r2
  814e04:	e0bffa17 	ldw	r2,-24(fp)
  814e08:	10c5883a 	add	r2,r2,r3
  814e0c:	10800017 	ldw	r2,0(r2)
  814e10:	e0fffe17 	ldw	r3,-8(fp)
  814e14:	18c06a17 	ldw	r3,424(r3)
  814e18:	e13ff717 	ldw	r4,-36(fp)
  814e1c:	20c6983a 	sll	r3,r4,r3
  814e20:	1809883a 	mov	r4,r3
  814e24:	e0fffb17 	ldw	r3,-20(fp)
  814e28:	1085883a 	add	r2,r2,r2
  814e2c:	1885883a 	add	r2,r3,r2
  814e30:	1100000d 	sth	r4,0(r2)
  814e34:	e0bffe17 	ldw	r2,-8(fp)
  814e38:	10806817 	ldw	r2,416(r2)
  814e3c:	e0fff617 	ldw	r3,-40(fp)
  814e40:	18bf5916 	blt	r3,r2,814ba8 <__alt_mem_epcs_flash_controller_0+0xff80bba8>
  814e44:	00000106 	br	814e4c <decode_mcu_AC_first+0x34c>
  814e48:	0001883a 	nop
  814e4c:	00800044 	movi	r2,1
  814e50:	e037883a 	mov	sp,fp
  814e54:	dfc00117 	ldw	ra,4(sp)
  814e58:	df000017 	ldw	fp,0(sp)
  814e5c:	dec00204 	addi	sp,sp,8
  814e60:	f800283a 	ret

00814e64 <decode_mcu_DC_refine>:
  814e64:	defff804 	addi	sp,sp,-32
  814e68:	dfc00715 	stw	ra,28(sp)
  814e6c:	df000615 	stw	fp,24(sp)
  814e70:	df000604 	addi	fp,sp,24
  814e74:	e13ffe15 	stw	r4,-8(fp)
  814e78:	e17fff15 	stw	r5,-4(fp)
  814e7c:	e0bffe17 	ldw	r2,-8(fp)
  814e80:	10807517 	ldw	r2,468(r2)
  814e84:	e0bffb15 	stw	r2,-20(fp)
  814e88:	e0bffe17 	ldw	r2,-8(fp)
  814e8c:	10804617 	ldw	r2,280(r2)
  814e90:	10000a26 	beq	r2,zero,814ebc <decode_mcu_DC_refine+0x58>
  814e94:	e0bffb17 	ldw	r2,-20(fp)
  814e98:	10800e17 	ldw	r2,56(r2)
  814e9c:	1000021e 	bne	r2,zero,814ea8 <decode_mcu_DC_refine+0x44>
  814ea0:	e13ffe17 	ldw	r4,-8(fp)
  814ea4:	08145100 	call	814510 <process_restart>
  814ea8:	e0bffb17 	ldw	r2,-20(fp)
  814eac:	10800e17 	ldw	r2,56(r2)
  814eb0:	10ffffc4 	addi	r3,r2,-1
  814eb4:	e0bffb17 	ldw	r2,-20(fp)
  814eb8:	10c00e15 	stw	r3,56(r2)
  814ebc:	e0bffb17 	ldw	r2,-20(fp)
  814ec0:	10802f04 	addi	r2,r2,188
  814ec4:	e0bffc15 	stw	r2,-16(fp)
  814ec8:	e0bffe17 	ldw	r2,-8(fp)
  814ecc:	10806a17 	ldw	r2,424(r2)
  814ed0:	00c00044 	movi	r3,1
  814ed4:	1884983a 	sll	r2,r3,r2
  814ed8:	e0bffd15 	stw	r2,-12(fp)
  814edc:	e03ffa15 	stw	zero,-24(fp)
  814ee0:	00001906 	br	814f48 <decode_mcu_DC_refine+0xe4>
  814ee4:	e17ffc17 	ldw	r5,-16(fp)
  814ee8:	e13ffe17 	ldw	r4,-8(fp)
  814eec:	08142bc0 	call	8142bc <arith_decode>
  814ef0:	10001226 	beq	r2,zero,814f3c <decode_mcu_DC_refine+0xd8>
  814ef4:	e0bffa17 	ldw	r2,-24(fp)
  814ef8:	1085883a 	add	r2,r2,r2
  814efc:	1085883a 	add	r2,r2,r2
  814f00:	1007883a 	mov	r3,r2
  814f04:	e0bfff17 	ldw	r2,-4(fp)
  814f08:	10c5883a 	add	r2,r2,r3
  814f0c:	10c00017 	ldw	r3,0(r2)
  814f10:	e0bffa17 	ldw	r2,-24(fp)
  814f14:	1085883a 	add	r2,r2,r2
  814f18:	1085883a 	add	r2,r2,r2
  814f1c:	1009883a 	mov	r4,r2
  814f20:	e0bfff17 	ldw	r2,-4(fp)
  814f24:	1105883a 	add	r2,r2,r4
  814f28:	10800017 	ldw	r2,0(r2)
  814f2c:	1080000b 	ldhu	r2,0(r2)
  814f30:	e13ffd17 	ldw	r4,-12(fp)
  814f34:	1104b03a 	or	r2,r2,r4
  814f38:	1880000d 	sth	r2,0(r3)
  814f3c:	e0bffa17 	ldw	r2,-24(fp)
  814f40:	10800044 	addi	r2,r2,1
  814f44:	e0bffa15 	stw	r2,-24(fp)
  814f48:	e0bffe17 	ldw	r2,-8(fp)
  814f4c:	10805c17 	ldw	r2,368(r2)
  814f50:	e0fffa17 	ldw	r3,-24(fp)
  814f54:	18bfe316 	blt	r3,r2,814ee4 <__alt_mem_epcs_flash_controller_0+0xff80bee4>
  814f58:	00800044 	movi	r2,1
  814f5c:	e037883a 	mov	sp,fp
  814f60:	dfc00117 	ldw	ra,4(sp)
  814f64:	df000017 	ldw	fp,0(sp)
  814f68:	dec00204 	addi	sp,sp,8
  814f6c:	f800283a 	ret

00814f70 <decode_mcu_AC_refine>:
  814f70:	defff204 	addi	sp,sp,-56
  814f74:	dfc00d15 	stw	ra,52(sp)
  814f78:	df000c15 	stw	fp,48(sp)
  814f7c:	df000c04 	addi	fp,sp,48
  814f80:	e13ffe15 	stw	r4,-8(fp)
  814f84:	e17fff15 	stw	r5,-4(fp)
  814f88:	e0bffe17 	ldw	r2,-8(fp)
  814f8c:	10807517 	ldw	r2,468(r2)
  814f90:	e0bff715 	stw	r2,-36(fp)
  814f94:	e0bffe17 	ldw	r2,-8(fp)
  814f98:	10804617 	ldw	r2,280(r2)
  814f9c:	10000a26 	beq	r2,zero,814fc8 <decode_mcu_AC_refine+0x58>
  814fa0:	e0bff717 	ldw	r2,-36(fp)
  814fa4:	10800e17 	ldw	r2,56(r2)
  814fa8:	1000021e 	bne	r2,zero,814fb4 <decode_mcu_AC_refine+0x44>
  814fac:	e13ffe17 	ldw	r4,-8(fp)
  814fb0:	08145100 	call	814510 <process_restart>
  814fb4:	e0bff717 	ldw	r2,-36(fp)
  814fb8:	10800e17 	ldw	r2,56(r2)
  814fbc:	10ffffc4 	addi	r3,r2,-1
  814fc0:	e0bff717 	ldw	r2,-36(fp)
  814fc4:	10c00e15 	stw	r3,56(r2)
  814fc8:	e0bff717 	ldw	r2,-36(fp)
  814fcc:	10800517 	ldw	r2,20(r2)
  814fd0:	10bfffd8 	cmpnei	r2,r2,-1
  814fd4:	1000021e 	bne	r2,zero,814fe0 <decode_mcu_AC_refine+0x70>
  814fd8:	00800044 	movi	r2,1
  814fdc:	0000ac06 	br	815290 <decode_mcu_AC_refine+0x320>
  814fe0:	e0bffe17 	ldw	r2,-8(fp)
  814fe4:	10806c17 	ldw	r2,432(r2)
  814fe8:	e0bff815 	stw	r2,-32(fp)
  814fec:	e0bfff17 	ldw	r2,-4(fp)
  814ff0:	10800017 	ldw	r2,0(r2)
  814ff4:	e0bff915 	stw	r2,-28(fp)
  814ff8:	e0bffe17 	ldw	r2,-8(fp)
  814ffc:	10805617 	ldw	r2,344(r2)
  815000:	10800617 	ldw	r2,24(r2)
  815004:	e0bffa15 	stw	r2,-24(fp)
  815008:	e0bffe17 	ldw	r2,-8(fp)
  81500c:	10806a17 	ldw	r2,424(r2)
  815010:	00c00044 	movi	r3,1
  815014:	1884983a 	sll	r2,r3,r2
  815018:	e0bffb15 	stw	r2,-20(fp)
  81501c:	e0bffe17 	ldw	r2,-8(fp)
  815020:	10806a17 	ldw	r2,424(r2)
  815024:	00ffffc4 	movi	r3,-1
  815028:	1884983a 	sll	r2,r3,r2
  81502c:	e0bffc15 	stw	r2,-16(fp)
  815030:	e0bffe17 	ldw	r2,-8(fp)
  815034:	10806817 	ldw	r2,416(r2)
  815038:	e0bff615 	stw	r2,-40(fp)
  81503c:	e0bff617 	ldw	r2,-40(fp)
  815040:	1085883a 	add	r2,r2,r2
  815044:	1085883a 	add	r2,r2,r2
  815048:	1007883a 	mov	r3,r2
  81504c:	e0bff817 	ldw	r2,-32(fp)
  815050:	10c5883a 	add	r2,r2,r3
  815054:	10800017 	ldw	r2,0(r2)
  815058:	e0fff917 	ldw	r3,-28(fp)
  81505c:	1085883a 	add	r2,r2,r2
  815060:	1885883a 	add	r2,r3,r2
  815064:	1080000b 	ldhu	r2,0(r2)
  815068:	10bfffcc 	andi	r2,r2,65535
  81506c:	10a0001c 	xori	r2,r2,32768
  815070:	10a00004 	addi	r2,r2,-32768
  815074:	1000061e 	bne	r2,zero,815090 <decode_mcu_AC_refine+0x120>
  815078:	e0bff617 	ldw	r2,-40(fp)
  81507c:	10bfffc4 	addi	r2,r2,-1
  815080:	e0bff615 	stw	r2,-40(fp)
  815084:	e0bff617 	ldw	r2,-40(fp)
  815088:	103fec1e 	bne	r2,zero,81503c <__alt_mem_epcs_flash_controller_0+0xff80c03c>
  81508c:	00000106 	br	815094 <decode_mcu_AC_refine+0x124>
  815090:	0001883a 	nop
  815094:	e0bffe17 	ldw	r2,-8(fp)
  815098:	10806717 	ldw	r2,412(r2)
  81509c:	10bfffc4 	addi	r2,r2,-1
  8150a0:	e0bff515 	stw	r2,-44(fp)
  8150a4:	e0fff717 	ldw	r3,-36(fp)
  8150a8:	e0bffa17 	ldw	r2,-24(fp)
  8150ac:	108007c4 	addi	r2,r2,31
  8150b0:	1085883a 	add	r2,r2,r2
  8150b4:	1085883a 	add	r2,r2,r2
  8150b8:	1885883a 	add	r2,r3,r2
  8150bc:	11000017 	ldw	r4,0(r2)
  8150c0:	e0fff517 	ldw	r3,-44(fp)
  8150c4:	1805883a 	mov	r2,r3
  8150c8:	1085883a 	add	r2,r2,r2
  8150cc:	10c5883a 	add	r2,r2,r3
  8150d0:	2085883a 	add	r2,r4,r2
  8150d4:	e0bff415 	stw	r2,-48(fp)
  8150d8:	e0fff517 	ldw	r3,-44(fp)
  8150dc:	e0bff617 	ldw	r2,-40(fp)
  8150e0:	18800416 	blt	r3,r2,8150f4 <decode_mcu_AC_refine+0x184>
  8150e4:	e17ff417 	ldw	r5,-48(fp)
  8150e8:	e13ffe17 	ldw	r4,-8(fp)
  8150ec:	08142bc0 	call	8142bc <arith_decode>
  8150f0:	1000651e 	bne	r2,zero,815288 <decode_mcu_AC_refine+0x318>
  8150f4:	e0bff517 	ldw	r2,-44(fp)
  8150f8:	10800044 	addi	r2,r2,1
  8150fc:	e0bff515 	stw	r2,-44(fp)
  815100:	e0bff517 	ldw	r2,-44(fp)
  815104:	1085883a 	add	r2,r2,r2
  815108:	1085883a 	add	r2,r2,r2
  81510c:	1007883a 	mov	r3,r2
  815110:	e0bff817 	ldw	r2,-32(fp)
  815114:	10c5883a 	add	r2,r2,r3
  815118:	10800017 	ldw	r2,0(r2)
  81511c:	1085883a 	add	r2,r2,r2
  815120:	1007883a 	mov	r3,r2
  815124:	e0bff917 	ldw	r2,-28(fp)
  815128:	10c5883a 	add	r2,r2,r3
  81512c:	e0bffd15 	stw	r2,-12(fp)
  815130:	e0bffd17 	ldw	r2,-12(fp)
  815134:	1080000b 	ldhu	r2,0(r2)
  815138:	10bfffcc 	andi	r2,r2,65535
  81513c:	10a0001c 	xori	r2,r2,32768
  815140:	10a00004 	addi	r2,r2,-32768
  815144:	10001e26 	beq	r2,zero,8151c0 <decode_mcu_AC_refine+0x250>
  815148:	e0bff417 	ldw	r2,-48(fp)
  81514c:	10800084 	addi	r2,r2,2
  815150:	100b883a 	mov	r5,r2
  815154:	e13ffe17 	ldw	r4,-8(fp)
  815158:	08142bc0 	call	8142bc <arith_decode>
  81515c:	10004426 	beq	r2,zero,815270 <decode_mcu_AC_refine+0x300>
  815160:	e0bffd17 	ldw	r2,-12(fp)
  815164:	1080000b 	ldhu	r2,0(r2)
  815168:	10bfffcc 	andi	r2,r2,65535
  81516c:	10a0001c 	xori	r2,r2,32768
  815170:	10a00004 	addi	r2,r2,-32768
  815174:	1000090e 	bge	r2,zero,81519c <decode_mcu_AC_refine+0x22c>
  815178:	e0bffd17 	ldw	r2,-12(fp)
  81517c:	1080000b 	ldhu	r2,0(r2)
  815180:	1007883a 	mov	r3,r2
  815184:	e0bffc17 	ldw	r2,-16(fp)
  815188:	1885883a 	add	r2,r3,r2
  81518c:	1007883a 	mov	r3,r2
  815190:	e0bffd17 	ldw	r2,-12(fp)
  815194:	10c0000d 	sth	r3,0(r2)
  815198:	00003506 	br	815270 <decode_mcu_AC_refine+0x300>
  81519c:	e0bffd17 	ldw	r2,-12(fp)
  8151a0:	1080000b 	ldhu	r2,0(r2)
  8151a4:	1007883a 	mov	r3,r2
  8151a8:	e0bffb17 	ldw	r2,-20(fp)
  8151ac:	1885883a 	add	r2,r3,r2
  8151b0:	1007883a 	mov	r3,r2
  8151b4:	e0bffd17 	ldw	r2,-12(fp)
  8151b8:	10c0000d 	sth	r3,0(r2)
  8151bc:	00002c06 	br	815270 <decode_mcu_AC_refine+0x300>
  8151c0:	e0bff417 	ldw	r2,-48(fp)
  8151c4:	10800044 	addi	r2,r2,1
  8151c8:	100b883a 	mov	r5,r2
  8151cc:	e13ffe17 	ldw	r4,-8(fp)
  8151d0:	08142bc0 	call	8142bc <arith_decode>
  8151d4:	10001026 	beq	r2,zero,815218 <decode_mcu_AC_refine+0x2a8>
  8151d8:	e0bff717 	ldw	r2,-36(fp)
  8151dc:	10802f04 	addi	r2,r2,188
  8151e0:	100b883a 	mov	r5,r2
  8151e4:	e13ffe17 	ldw	r4,-8(fp)
  8151e8:	08142bc0 	call	8142bc <arith_decode>
  8151ec:	10000526 	beq	r2,zero,815204 <decode_mcu_AC_refine+0x294>
  8151f0:	e0bffc17 	ldw	r2,-16(fp)
  8151f4:	1007883a 	mov	r3,r2
  8151f8:	e0bffd17 	ldw	r2,-12(fp)
  8151fc:	10c0000d 	sth	r3,0(r2)
  815200:	00001c06 	br	815274 <decode_mcu_AC_refine+0x304>
  815204:	e0bffb17 	ldw	r2,-20(fp)
  815208:	1007883a 	mov	r3,r2
  81520c:	e0bffd17 	ldw	r2,-12(fp)
  815210:	10c0000d 	sth	r3,0(r2)
  815214:	00001706 	br	815274 <decode_mcu_AC_refine+0x304>
  815218:	e0bff417 	ldw	r2,-48(fp)
  81521c:	108000c4 	addi	r2,r2,3
  815220:	e0bff415 	stw	r2,-48(fp)
  815224:	e0bffe17 	ldw	r2,-8(fp)
  815228:	10806817 	ldw	r2,416(r2)
  81522c:	e0fff517 	ldw	r3,-44(fp)
  815230:	18bfb016 	blt	r3,r2,8150f4 <__alt_mem_epcs_flash_controller_0+0xff80c0f4>
  815234:	e0bffe17 	ldw	r2,-8(fp)
  815238:	10800017 	ldw	r2,0(r2)
  81523c:	00c01d44 	movi	r3,117
  815240:	10c00515 	stw	r3,20(r2)
  815244:	e0bffe17 	ldw	r2,-8(fp)
  815248:	10800017 	ldw	r2,0(r2)
  81524c:	10800117 	ldw	r2,4(r2)
  815250:	017fffc4 	movi	r5,-1
  815254:	e13ffe17 	ldw	r4,-8(fp)
  815258:	103ee83a 	callr	r2
  81525c:	e0bff717 	ldw	r2,-36(fp)
  815260:	00ffffc4 	movi	r3,-1
  815264:	10c00515 	stw	r3,20(r2)
  815268:	00800044 	movi	r2,1
  81526c:	00000806 	br	815290 <decode_mcu_AC_refine+0x320>
  815270:	0001883a 	nop
  815274:	e0bffe17 	ldw	r2,-8(fp)
  815278:	10806817 	ldw	r2,416(r2)
  81527c:	e0fff517 	ldw	r3,-44(fp)
  815280:	18bf8816 	blt	r3,r2,8150a4 <__alt_mem_epcs_flash_controller_0+0xff80c0a4>
  815284:	00000106 	br	81528c <decode_mcu_AC_refine+0x31c>
  815288:	0001883a 	nop
  81528c:	00800044 	movi	r2,1
  815290:	e037883a 	mov	sp,fp
  815294:	dfc00117 	ldw	ra,4(sp)
  815298:	df000017 	ldw	fp,0(sp)
  81529c:	dec00204 	addi	sp,sp,8
  8152a0:	f800283a 	ret

008152a4 <decode_mcu>:
  8152a4:	defff004 	addi	sp,sp,-64
  8152a8:	dfc00f15 	stw	ra,60(sp)
  8152ac:	df000e15 	stw	fp,56(sp)
  8152b0:	df000e04 	addi	fp,sp,56
  8152b4:	e13ffe15 	stw	r4,-8(fp)
  8152b8:	e17fff15 	stw	r5,-4(fp)
  8152bc:	e0bffe17 	ldw	r2,-8(fp)
  8152c0:	10807517 	ldw	r2,468(r2)
  8152c4:	e0bff715 	stw	r2,-36(fp)
  8152c8:	e0bffe17 	ldw	r2,-8(fp)
  8152cc:	10804617 	ldw	r2,280(r2)
  8152d0:	10000a26 	beq	r2,zero,8152fc <decode_mcu+0x58>
  8152d4:	e0bff717 	ldw	r2,-36(fp)
  8152d8:	10800e17 	ldw	r2,56(r2)
  8152dc:	1000021e 	bne	r2,zero,8152e8 <decode_mcu+0x44>
  8152e0:	e13ffe17 	ldw	r4,-8(fp)
  8152e4:	08145100 	call	814510 <process_restart>
  8152e8:	e0bff717 	ldw	r2,-36(fp)
  8152ec:	10800e17 	ldw	r2,56(r2)
  8152f0:	10ffffc4 	addi	r3,r2,-1
  8152f4:	e0bff717 	ldw	r2,-36(fp)
  8152f8:	10c00e15 	stw	r3,56(r2)
  8152fc:	e0bff717 	ldw	r2,-36(fp)
  815300:	10800517 	ldw	r2,20(r2)
  815304:	10bfffd8 	cmpnei	r2,r2,-1
  815308:	1000021e 	bne	r2,zero,815314 <decode_mcu+0x70>
  81530c:	00800044 	movi	r2,1
  815310:	00019806 	br	815974 <decode_mcu+0x6d0>
  815314:	e0bffe17 	ldw	r2,-8(fp)
  815318:	10806c17 	ldw	r2,432(r2)
  81531c:	e0bff815 	stw	r2,-32(fp)
  815320:	e03ff315 	stw	zero,-52(fp)
  815324:	00018e06 	br	815960 <decode_mcu+0x6bc>
  815328:	e0bff317 	ldw	r2,-52(fp)
  81532c:	1085883a 	add	r2,r2,r2
  815330:	1085883a 	add	r2,r2,r2
  815334:	1007883a 	mov	r3,r2
  815338:	e0bfff17 	ldw	r2,-4(fp)
  81533c:	10c5883a 	add	r2,r2,r3
  815340:	10800017 	ldw	r2,0(r2)
  815344:	e0bff915 	stw	r2,-28(fp)
  815348:	e0fffe17 	ldw	r3,-8(fp)
  81534c:	e0bff317 	ldw	r2,-52(fp)
  815350:	10801744 	addi	r2,r2,93
  815354:	1085883a 	add	r2,r2,r2
  815358:	1085883a 	add	r2,r2,r2
  81535c:	1885883a 	add	r2,r3,r2
  815360:	10800017 	ldw	r2,0(r2)
  815364:	e0bffa15 	stw	r2,-24(fp)
  815368:	e0fffe17 	ldw	r3,-8(fp)
  81536c:	e0bffa17 	ldw	r2,-24(fp)
  815370:	10801584 	addi	r2,r2,86
  815374:	1085883a 	add	r2,r2,r2
  815378:	1085883a 	add	r2,r2,r2
  81537c:	1885883a 	add	r2,r3,r2
  815380:	10800017 	ldw	r2,0(r2)
  815384:	e0bffb15 	stw	r2,-20(fp)
  815388:	e0bffb17 	ldw	r2,-20(fp)
  81538c:	10800517 	ldw	r2,20(r2)
  815390:	e0bffc15 	stw	r2,-16(fp)
  815394:	e0fff717 	ldw	r3,-36(fp)
  815398:	e0bffc17 	ldw	r2,-16(fp)
  81539c:	108003c4 	addi	r2,r2,15
  8153a0:	1085883a 	add	r2,r2,r2
  8153a4:	1085883a 	add	r2,r2,r2
  8153a8:	1885883a 	add	r2,r3,r2
  8153ac:	10c00017 	ldw	r3,0(r2)
  8153b0:	e13ff717 	ldw	r4,-36(fp)
  8153b4:	e0bffa17 	ldw	r2,-24(fp)
  8153b8:	10800284 	addi	r2,r2,10
  8153bc:	1085883a 	add	r2,r2,r2
  8153c0:	1085883a 	add	r2,r2,r2
  8153c4:	2085883a 	add	r2,r4,r2
  8153c8:	10800017 	ldw	r2,0(r2)
  8153cc:	1885883a 	add	r2,r3,r2
  8153d0:	e0bff215 	stw	r2,-56(fp)
  8153d4:	e17ff217 	ldw	r5,-56(fp)
  8153d8:	e13ffe17 	ldw	r4,-8(fp)
  8153dc:	08142bc0 	call	8142bc <arith_decode>
  8153e0:	1000081e 	bne	r2,zero,815404 <decode_mcu+0x160>
  8153e4:	e0fff717 	ldw	r3,-36(fp)
  8153e8:	e0bffa17 	ldw	r2,-24(fp)
  8153ec:	10800284 	addi	r2,r2,10
  8153f0:	1085883a 	add	r2,r2,r2
  8153f4:	1085883a 	add	r2,r2,r2
  8153f8:	1885883a 	add	r2,r3,r2
  8153fc:	10000015 	stw	zero,0(r2)
  815400:	00009b06 	br	815670 <decode_mcu+0x3cc>
  815404:	e0bff217 	ldw	r2,-56(fp)
  815408:	10800044 	addi	r2,r2,1
  81540c:	100b883a 	mov	r5,r2
  815410:	e13ffe17 	ldw	r4,-8(fp)
  815414:	08142bc0 	call	8142bc <arith_decode>
  815418:	e0bffd15 	stw	r2,-12(fp)
  81541c:	e0bff217 	ldw	r2,-56(fp)
  815420:	10800084 	addi	r2,r2,2
  815424:	e0bff215 	stw	r2,-56(fp)
  815428:	e0bffd17 	ldw	r2,-12(fp)
  81542c:	e0fff217 	ldw	r3,-56(fp)
  815430:	1885883a 	add	r2,r3,r2
  815434:	e0bff215 	stw	r2,-56(fp)
  815438:	e17ff217 	ldw	r5,-56(fp)
  81543c:	e13ffe17 	ldw	r4,-8(fp)
  815440:	08142bc0 	call	8142bc <arith_decode>
  815444:	e0bff615 	stw	r2,-40(fp)
  815448:	e0bff617 	ldw	r2,-40(fp)
  81544c:	10002626 	beq	r2,zero,8154e8 <decode_mcu+0x244>
  815450:	e0fff717 	ldw	r3,-36(fp)
  815454:	e0bffc17 	ldw	r2,-16(fp)
  815458:	108003c4 	addi	r2,r2,15
  81545c:	1085883a 	add	r2,r2,r2
  815460:	1085883a 	add	r2,r2,r2
  815464:	1885883a 	add	r2,r3,r2
  815468:	10800017 	ldw	r2,0(r2)
  81546c:	10800504 	addi	r2,r2,20
  815470:	e0bff215 	stw	r2,-56(fp)
  815474:	00001806 	br	8154d8 <decode_mcu+0x234>
  815478:	e0bff617 	ldw	r2,-40(fp)
  81547c:	1085883a 	add	r2,r2,r2
  815480:	e0bff615 	stw	r2,-40(fp)
  815484:	e0fff617 	ldw	r3,-40(fp)
  815488:	00a00014 	movui	r2,32768
  81548c:	18800f1e 	bne	r3,r2,8154cc <decode_mcu+0x228>
  815490:	e0bffe17 	ldw	r2,-8(fp)
  815494:	10800017 	ldw	r2,0(r2)
  815498:	00c01d44 	movi	r3,117
  81549c:	10c00515 	stw	r3,20(r2)
  8154a0:	e0bffe17 	ldw	r2,-8(fp)
  8154a4:	10800017 	ldw	r2,0(r2)
  8154a8:	10800117 	ldw	r2,4(r2)
  8154ac:	017fffc4 	movi	r5,-1
  8154b0:	e13ffe17 	ldw	r4,-8(fp)
  8154b4:	103ee83a 	callr	r2
  8154b8:	e0bff717 	ldw	r2,-36(fp)
  8154bc:	00ffffc4 	movi	r3,-1
  8154c0:	10c00515 	stw	r3,20(r2)
  8154c4:	00800044 	movi	r2,1
  8154c8:	00012a06 	br	815974 <decode_mcu+0x6d0>
  8154cc:	e0bff217 	ldw	r2,-56(fp)
  8154d0:	10800044 	addi	r2,r2,1
  8154d4:	e0bff215 	stw	r2,-56(fp)
  8154d8:	e17ff217 	ldw	r5,-56(fp)
  8154dc:	e13ffe17 	ldw	r4,-8(fp)
  8154e0:	08142bc0 	call	8142bc <arith_decode>
  8154e4:	103fe41e 	bne	r2,zero,815478 <__alt_mem_epcs_flash_controller_0+0xff80c478>
  8154e8:	e0fffe17 	ldw	r3,-8(fp)
  8154ec:	e0bffc17 	ldw	r2,-16(fp)
  8154f0:	1885883a 	add	r2,r3,r2
  8154f4:	10803a04 	addi	r2,r2,232
  8154f8:	10800003 	ldbu	r2,0(r2)
  8154fc:	10803fcc 	andi	r2,r2,255
  815500:	00c00044 	movi	r3,1
  815504:	1884983a 	sll	r2,r3,r2
  815508:	1005d07a 	srai	r2,r2,1
  81550c:	e0fff617 	ldw	r3,-40(fp)
  815510:	1880080e 	bge	r3,r2,815534 <decode_mcu+0x290>
  815514:	e0fff717 	ldw	r3,-36(fp)
  815518:	e0bffa17 	ldw	r2,-24(fp)
  81551c:	10800284 	addi	r2,r2,10
  815520:	1085883a 	add	r2,r2,r2
  815524:	1085883a 	add	r2,r2,r2
  815528:	1885883a 	add	r2,r3,r2
  81552c:	10000015 	stw	zero,0(r2)
  815530:	00002406 	br	8155c4 <decode_mcu+0x320>
  815534:	e0fffe17 	ldw	r3,-8(fp)
  815538:	e0bffc17 	ldw	r2,-16(fp)
  81553c:	1885883a 	add	r2,r3,r2
  815540:	10803e04 	addi	r2,r2,248
  815544:	10800003 	ldbu	r2,0(r2)
  815548:	10803fcc 	andi	r2,r2,255
  81554c:	00c00044 	movi	r3,1
  815550:	1884983a 	sll	r2,r3,r2
  815554:	1007d07a 	srai	r3,r2,1
  815558:	e0bff617 	ldw	r2,-40(fp)
  81555c:	18800d0e 	bge	r3,r2,815594 <decode_mcu+0x2f0>
  815560:	e0bffd17 	ldw	r2,-12(fp)
  815564:	108000c4 	addi	r2,r2,3
  815568:	1085883a 	add	r2,r2,r2
  81556c:	1085883a 	add	r2,r2,r2
  815570:	1009883a 	mov	r4,r2
  815574:	e0fff717 	ldw	r3,-36(fp)
  815578:	e0bffa17 	ldw	r2,-24(fp)
  81557c:	10800284 	addi	r2,r2,10
  815580:	1085883a 	add	r2,r2,r2
  815584:	1085883a 	add	r2,r2,r2
  815588:	1885883a 	add	r2,r3,r2
  81558c:	11000015 	stw	r4,0(r2)
  815590:	00000c06 	br	8155c4 <decode_mcu+0x320>
  815594:	e0bffd17 	ldw	r2,-12(fp)
  815598:	10800044 	addi	r2,r2,1
  81559c:	1085883a 	add	r2,r2,r2
  8155a0:	1085883a 	add	r2,r2,r2
  8155a4:	1009883a 	mov	r4,r2
  8155a8:	e0fff717 	ldw	r3,-36(fp)
  8155ac:	e0bffa17 	ldw	r2,-24(fp)
  8155b0:	10800284 	addi	r2,r2,10
  8155b4:	1085883a 	add	r2,r2,r2
  8155b8:	1085883a 	add	r2,r2,r2
  8155bc:	1885883a 	add	r2,r3,r2
  8155c0:	11000015 	stw	r4,0(r2)
  8155c4:	e0bff617 	ldw	r2,-40(fp)
  8155c8:	e0bff515 	stw	r2,-44(fp)
  8155cc:	e0bff217 	ldw	r2,-56(fp)
  8155d0:	10800384 	addi	r2,r2,14
  8155d4:	e0bff215 	stw	r2,-56(fp)
  8155d8:	00000806 	br	8155fc <decode_mcu+0x358>
  8155dc:	e17ff217 	ldw	r5,-56(fp)
  8155e0:	e13ffe17 	ldw	r4,-8(fp)
  8155e4:	08142bc0 	call	8142bc <arith_decode>
  8155e8:	10000426 	beq	r2,zero,8155fc <decode_mcu+0x358>
  8155ec:	e0fff517 	ldw	r3,-44(fp)
  8155f0:	e0bff617 	ldw	r2,-40(fp)
  8155f4:	1884b03a 	or	r2,r3,r2
  8155f8:	e0bff515 	stw	r2,-44(fp)
  8155fc:	e0bff617 	ldw	r2,-40(fp)
  815600:	1005d07a 	srai	r2,r2,1
  815604:	e0bff615 	stw	r2,-40(fp)
  815608:	e0bff617 	ldw	r2,-40(fp)
  81560c:	103ff31e 	bne	r2,zero,8155dc <__alt_mem_epcs_flash_controller_0+0xff80c5dc>
  815610:	e0bff517 	ldw	r2,-44(fp)
  815614:	10800044 	addi	r2,r2,1
  815618:	e0bff515 	stw	r2,-44(fp)
  81561c:	e0bffd17 	ldw	r2,-12(fp)
  815620:	10000326 	beq	r2,zero,815630 <decode_mcu+0x38c>
  815624:	e0bff517 	ldw	r2,-44(fp)
  815628:	0085c83a 	sub	r2,zero,r2
  81562c:	e0bff515 	stw	r2,-44(fp)
  815630:	e0fff717 	ldw	r3,-36(fp)
  815634:	e0bffa17 	ldw	r2,-24(fp)
  815638:	10800184 	addi	r2,r2,6
  81563c:	1085883a 	add	r2,r2,r2
  815640:	1085883a 	add	r2,r2,r2
  815644:	1885883a 	add	r2,r3,r2
  815648:	10c00017 	ldw	r3,0(r2)
  81564c:	e0bff517 	ldw	r2,-44(fp)
  815650:	1887883a 	add	r3,r3,r2
  815654:	e13ff717 	ldw	r4,-36(fp)
  815658:	e0bffa17 	ldw	r2,-24(fp)
  81565c:	10800184 	addi	r2,r2,6
  815660:	1085883a 	add	r2,r2,r2
  815664:	1085883a 	add	r2,r2,r2
  815668:	2085883a 	add	r2,r4,r2
  81566c:	10c00015 	stw	r3,0(r2)
  815670:	e0fff717 	ldw	r3,-36(fp)
  815674:	e0bffa17 	ldw	r2,-24(fp)
  815678:	10800184 	addi	r2,r2,6
  81567c:	1085883a 	add	r2,r2,r2
  815680:	1085883a 	add	r2,r2,r2
  815684:	1885883a 	add	r2,r3,r2
  815688:	10800017 	ldw	r2,0(r2)
  81568c:	1007883a 	mov	r3,r2
  815690:	e0bff917 	ldw	r2,-28(fp)
  815694:	10c0000d 	sth	r3,0(r2)
  815698:	e0bffe17 	ldw	r2,-8(fp)
  81569c:	10806d17 	ldw	r2,436(r2)
  8156a0:	1000a926 	beq	r2,zero,815948 <decode_mcu+0x6a4>
  8156a4:	e0bffb17 	ldw	r2,-20(fp)
  8156a8:	10800617 	ldw	r2,24(r2)
  8156ac:	e0bffc15 	stw	r2,-16(fp)
  8156b0:	e03ff415 	stw	zero,-48(fp)
  8156b4:	e0fff717 	ldw	r3,-36(fp)
  8156b8:	e0bffc17 	ldw	r2,-16(fp)
  8156bc:	108007c4 	addi	r2,r2,31
  8156c0:	1085883a 	add	r2,r2,r2
  8156c4:	1085883a 	add	r2,r2,r2
  8156c8:	1885883a 	add	r2,r3,r2
  8156cc:	11000017 	ldw	r4,0(r2)
  8156d0:	e0fff417 	ldw	r3,-48(fp)
  8156d4:	1805883a 	mov	r2,r3
  8156d8:	1085883a 	add	r2,r2,r2
  8156dc:	10c5883a 	add	r2,r2,r3
  8156e0:	2085883a 	add	r2,r4,r2
  8156e4:	e0bff215 	stw	r2,-56(fp)
  8156e8:	e17ff217 	ldw	r5,-56(fp)
  8156ec:	e13ffe17 	ldw	r4,-8(fp)
  8156f0:	08142bc0 	call	8142bc <arith_decode>
  8156f4:	1000961e 	bne	r2,zero,815950 <decode_mcu+0x6ac>
  8156f8:	e0bff417 	ldw	r2,-48(fp)
  8156fc:	10800044 	addi	r2,r2,1
  815700:	e0bff415 	stw	r2,-48(fp)
  815704:	e0bff217 	ldw	r2,-56(fp)
  815708:	10800044 	addi	r2,r2,1
  81570c:	100b883a 	mov	r5,r2
  815710:	e13ffe17 	ldw	r4,-8(fp)
  815714:	08142bc0 	call	8142bc <arith_decode>
  815718:	1000161e 	bne	r2,zero,815774 <decode_mcu+0x4d0>
  81571c:	e0bff217 	ldw	r2,-56(fp)
  815720:	108000c4 	addi	r2,r2,3
  815724:	e0bff215 	stw	r2,-56(fp)
  815728:	e0bffe17 	ldw	r2,-8(fp)
  81572c:	10806d17 	ldw	r2,436(r2)
  815730:	e0fff417 	ldw	r3,-48(fp)
  815734:	18bff016 	blt	r3,r2,8156f8 <__alt_mem_epcs_flash_controller_0+0xff80c6f8>
  815738:	e0bffe17 	ldw	r2,-8(fp)
  81573c:	10800017 	ldw	r2,0(r2)
  815740:	00c01d44 	movi	r3,117
  815744:	10c00515 	stw	r3,20(r2)
  815748:	e0bffe17 	ldw	r2,-8(fp)
  81574c:	10800017 	ldw	r2,0(r2)
  815750:	10800117 	ldw	r2,4(r2)
  815754:	017fffc4 	movi	r5,-1
  815758:	e13ffe17 	ldw	r4,-8(fp)
  81575c:	103ee83a 	callr	r2
  815760:	e0bff717 	ldw	r2,-36(fp)
  815764:	00ffffc4 	movi	r3,-1
  815768:	10c00515 	stw	r3,20(r2)
  81576c:	00800044 	movi	r2,1
  815770:	00008006 	br	815974 <decode_mcu+0x6d0>
  815774:	0001883a 	nop
  815778:	e0bff717 	ldw	r2,-36(fp)
  81577c:	10802f04 	addi	r2,r2,188
  815780:	100b883a 	mov	r5,r2
  815784:	e13ffe17 	ldw	r4,-8(fp)
  815788:	08142bc0 	call	8142bc <arith_decode>
  81578c:	e0bffd15 	stw	r2,-12(fp)
  815790:	e0bff217 	ldw	r2,-56(fp)
  815794:	10800084 	addi	r2,r2,2
  815798:	e0bff215 	stw	r2,-56(fp)
  81579c:	e17ff217 	ldw	r5,-56(fp)
  8157a0:	e13ffe17 	ldw	r4,-8(fp)
  8157a4:	08142bc0 	call	8142bc <arith_decode>
  8157a8:	e0bff615 	stw	r2,-40(fp)
  8157ac:	e0bff617 	ldw	r2,-40(fp)
  8157b0:	10003826 	beq	r2,zero,815894 <decode_mcu+0x5f0>
  8157b4:	e17ff217 	ldw	r5,-56(fp)
  8157b8:	e13ffe17 	ldw	r4,-8(fp)
  8157bc:	08142bc0 	call	8142bc <arith_decode>
  8157c0:	10003426 	beq	r2,zero,815894 <decode_mcu+0x5f0>
  8157c4:	e0bff617 	ldw	r2,-40(fp)
  8157c8:	1085883a 	add	r2,r2,r2
  8157cc:	e0bff615 	stw	r2,-40(fp)
  8157d0:	e0fff717 	ldw	r3,-36(fp)
  8157d4:	e0bffc17 	ldw	r2,-16(fp)
  8157d8:	108007c4 	addi	r2,r2,31
  8157dc:	1085883a 	add	r2,r2,r2
  8157e0:	1085883a 	add	r2,r2,r2
  8157e4:	1885883a 	add	r2,r3,r2
  8157e8:	10c00017 	ldw	r3,0(r2)
  8157ec:	e13ffe17 	ldw	r4,-8(fp)
  8157f0:	e0bffc17 	ldw	r2,-16(fp)
  8157f4:	2085883a 	add	r2,r4,r2
  8157f8:	10804204 	addi	r2,r2,264
  8157fc:	10800003 	ldbu	r2,0(r2)
  815800:	11003fcc 	andi	r4,r2,255
  815804:	e0bff417 	ldw	r2,-48(fp)
  815808:	20800216 	blt	r4,r2,815814 <decode_mcu+0x570>
  81580c:	00802f44 	movi	r2,189
  815810:	00000106 	br	815818 <decode_mcu+0x574>
  815814:	00803644 	movi	r2,217
  815818:	1885883a 	add	r2,r3,r2
  81581c:	e0bff215 	stw	r2,-56(fp)
  815820:	00001806 	br	815884 <decode_mcu+0x5e0>
  815824:	e0bff617 	ldw	r2,-40(fp)
  815828:	1085883a 	add	r2,r2,r2
  81582c:	e0bff615 	stw	r2,-40(fp)
  815830:	e0fff617 	ldw	r3,-40(fp)
  815834:	00a00014 	movui	r2,32768
  815838:	18800f1e 	bne	r3,r2,815878 <decode_mcu+0x5d4>
  81583c:	e0bffe17 	ldw	r2,-8(fp)
  815840:	10800017 	ldw	r2,0(r2)
  815844:	00c01d44 	movi	r3,117
  815848:	10c00515 	stw	r3,20(r2)
  81584c:	e0bffe17 	ldw	r2,-8(fp)
  815850:	10800017 	ldw	r2,0(r2)
  815854:	10800117 	ldw	r2,4(r2)
  815858:	017fffc4 	movi	r5,-1
  81585c:	e13ffe17 	ldw	r4,-8(fp)
  815860:	103ee83a 	callr	r2
  815864:	e0bff717 	ldw	r2,-36(fp)
  815868:	00ffffc4 	movi	r3,-1
  81586c:	10c00515 	stw	r3,20(r2)
  815870:	00800044 	movi	r2,1
  815874:	00003f06 	br	815974 <decode_mcu+0x6d0>
  815878:	e0bff217 	ldw	r2,-56(fp)
  81587c:	10800044 	addi	r2,r2,1
  815880:	e0bff215 	stw	r2,-56(fp)
  815884:	e17ff217 	ldw	r5,-56(fp)
  815888:	e13ffe17 	ldw	r4,-8(fp)
  81588c:	08142bc0 	call	8142bc <arith_decode>
  815890:	103fe41e 	bne	r2,zero,815824 <__alt_mem_epcs_flash_controller_0+0xff80c824>
  815894:	e0bff617 	ldw	r2,-40(fp)
  815898:	e0bff515 	stw	r2,-44(fp)
  81589c:	e0bff217 	ldw	r2,-56(fp)
  8158a0:	10800384 	addi	r2,r2,14
  8158a4:	e0bff215 	stw	r2,-56(fp)
  8158a8:	00000806 	br	8158cc <decode_mcu+0x628>
  8158ac:	e17ff217 	ldw	r5,-56(fp)
  8158b0:	e13ffe17 	ldw	r4,-8(fp)
  8158b4:	08142bc0 	call	8142bc <arith_decode>
  8158b8:	10000426 	beq	r2,zero,8158cc <decode_mcu+0x628>
  8158bc:	e0fff517 	ldw	r3,-44(fp)
  8158c0:	e0bff617 	ldw	r2,-40(fp)
  8158c4:	1884b03a 	or	r2,r3,r2
  8158c8:	e0bff515 	stw	r2,-44(fp)
  8158cc:	e0bff617 	ldw	r2,-40(fp)
  8158d0:	1005d07a 	srai	r2,r2,1
  8158d4:	e0bff615 	stw	r2,-40(fp)
  8158d8:	e0bff617 	ldw	r2,-40(fp)
  8158dc:	103ff31e 	bne	r2,zero,8158ac <__alt_mem_epcs_flash_controller_0+0xff80c8ac>
  8158e0:	e0bff517 	ldw	r2,-44(fp)
  8158e4:	10800044 	addi	r2,r2,1
  8158e8:	e0bff515 	stw	r2,-44(fp)
  8158ec:	e0bffd17 	ldw	r2,-12(fp)
  8158f0:	10000326 	beq	r2,zero,815900 <decode_mcu+0x65c>
  8158f4:	e0bff517 	ldw	r2,-44(fp)
  8158f8:	0085c83a 	sub	r2,zero,r2
  8158fc:	e0bff515 	stw	r2,-44(fp)
  815900:	e0bff417 	ldw	r2,-48(fp)
  815904:	1085883a 	add	r2,r2,r2
  815908:	1085883a 	add	r2,r2,r2
  81590c:	1007883a 	mov	r3,r2
  815910:	e0bff817 	ldw	r2,-32(fp)
  815914:	10c5883a 	add	r2,r2,r3
  815918:	10800017 	ldw	r2,0(r2)
  81591c:	e0fff517 	ldw	r3,-44(fp)
  815920:	1809883a 	mov	r4,r3
  815924:	e0fff917 	ldw	r3,-28(fp)
  815928:	1085883a 	add	r2,r2,r2
  81592c:	1885883a 	add	r2,r3,r2
  815930:	1100000d 	sth	r4,0(r2)
  815934:	e0bffe17 	ldw	r2,-8(fp)
  815938:	10806d17 	ldw	r2,436(r2)
  81593c:	e0fff417 	ldw	r3,-48(fp)
  815940:	18bf5c16 	blt	r3,r2,8156b4 <__alt_mem_epcs_flash_controller_0+0xff80c6b4>
  815944:	00000306 	br	815954 <decode_mcu+0x6b0>
  815948:	0001883a 	nop
  81594c:	00000106 	br	815954 <decode_mcu+0x6b0>
  815950:	0001883a 	nop
  815954:	e0bff317 	ldw	r2,-52(fp)
  815958:	10800044 	addi	r2,r2,1
  81595c:	e0bff315 	stw	r2,-52(fp)
  815960:	e0bffe17 	ldw	r2,-8(fp)
  815964:	10805c17 	ldw	r2,368(r2)
  815968:	e0fff317 	ldw	r3,-52(fp)
  81596c:	18be6e16 	blt	r3,r2,815328 <__alt_mem_epcs_flash_controller_0+0xff80c328>
  815970:	00800044 	movi	r2,1
  815974:	e037883a 	mov	sp,fp
  815978:	dfc00117 	ldw	ra,4(sp)
  81597c:	df000017 	ldw	fp,0(sp)
  815980:	dec00204 	addi	sp,sp,8
  815984:	f800283a 	ret

00815988 <start_pass>:
  815988:	defff504 	addi	sp,sp,-44
  81598c:	dfc00a15 	stw	ra,40(sp)
  815990:	df000915 	stw	fp,36(sp)
  815994:	df000904 	addi	fp,sp,36
  815998:	e13fff15 	stw	r4,-4(fp)
  81599c:	e0bfff17 	ldw	r2,-4(fp)
  8159a0:	10807517 	ldw	r2,468(r2)
  8159a4:	e0bff915 	stw	r2,-28(fp)
  8159a8:	e0bfff17 	ldw	r2,-4(fp)
  8159ac:	10803817 	ldw	r2,224(r2)
  8159b0:	1000c326 	beq	r2,zero,815cc0 <start_pass+0x338>
  8159b4:	e0bfff17 	ldw	r2,-4(fp)
  8159b8:	10806717 	ldw	r2,412(r2)
  8159bc:	1000041e 	bne	r2,zero,8159d0 <start_pass+0x48>
  8159c0:	e0bfff17 	ldw	r2,-4(fp)
  8159c4:	10806817 	ldw	r2,416(r2)
  8159c8:	10000f26 	beq	r2,zero,815a08 <start_pass+0x80>
  8159cc:	00001f06 	br	815a4c <start_pass+0xc4>
  8159d0:	e0bfff17 	ldw	r2,-4(fp)
  8159d4:	10c06817 	ldw	r3,416(r2)
  8159d8:	e0bfff17 	ldw	r2,-4(fp)
  8159dc:	10806717 	ldw	r2,412(r2)
  8159e0:	18801a16 	blt	r3,r2,815a4c <start_pass+0xc4>
  8159e4:	e0bfff17 	ldw	r2,-4(fp)
  8159e8:	10806817 	ldw	r2,416(r2)
  8159ec:	e0ffff17 	ldw	r3,-4(fp)
  8159f0:	18c06d17 	ldw	r3,436(r3)
  8159f4:	18801516 	blt	r3,r2,815a4c <start_pass+0xc4>
  8159f8:	e0bfff17 	ldw	r2,-4(fp)
  8159fc:	10805517 	ldw	r2,340(r2)
  815a00:	10800060 	cmpeqi	r2,r2,1
  815a04:	10000e26 	beq	r2,zero,815a40 <start_pass+0xb8>
  815a08:	e0bfff17 	ldw	r2,-4(fp)
  815a0c:	10806917 	ldw	r2,420(r2)
  815a10:	10000626 	beq	r2,zero,815a2c <start_pass+0xa4>
  815a14:	e0bfff17 	ldw	r2,-4(fp)
  815a18:	10806917 	ldw	r2,420(r2)
  815a1c:	10ffffc4 	addi	r3,r2,-1
  815a20:	e0bfff17 	ldw	r2,-4(fp)
  815a24:	10806a17 	ldw	r2,424(r2)
  815a28:	1880071e 	bne	r3,r2,815a48 <start_pass+0xc0>
  815a2c:	e0bfff17 	ldw	r2,-4(fp)
  815a30:	10806a17 	ldw	r2,424(r2)
  815a34:	10800390 	cmplti	r2,r2,14
  815a38:	1000211e 	bne	r2,zero,815ac0 <start_pass+0x138>
  815a3c:	00000306 	br	815a4c <start_pass+0xc4>
  815a40:	0001883a 	nop
  815a44:	00000106 	br	815a4c <start_pass+0xc4>
  815a48:	0001883a 	nop
  815a4c:	e0bfff17 	ldw	r2,-4(fp)
  815a50:	10800017 	ldw	r2,0(r2)
  815a54:	00c00444 	movi	r3,17
  815a58:	10c00515 	stw	r3,20(r2)
  815a5c:	e0bfff17 	ldw	r2,-4(fp)
  815a60:	10800017 	ldw	r2,0(r2)
  815a64:	e0ffff17 	ldw	r3,-4(fp)
  815a68:	18c06717 	ldw	r3,412(r3)
  815a6c:	10c00615 	stw	r3,24(r2)
  815a70:	e0bfff17 	ldw	r2,-4(fp)
  815a74:	10800017 	ldw	r2,0(r2)
  815a78:	e0ffff17 	ldw	r3,-4(fp)
  815a7c:	18c06817 	ldw	r3,416(r3)
  815a80:	10c00715 	stw	r3,28(r2)
  815a84:	e0bfff17 	ldw	r2,-4(fp)
  815a88:	10800017 	ldw	r2,0(r2)
  815a8c:	e0ffff17 	ldw	r3,-4(fp)
  815a90:	18c06917 	ldw	r3,420(r3)
  815a94:	10c00815 	stw	r3,32(r2)
  815a98:	e0bfff17 	ldw	r2,-4(fp)
  815a9c:	10800017 	ldw	r2,0(r2)
  815aa0:	e0ffff17 	ldw	r3,-4(fp)
  815aa4:	18c06a17 	ldw	r3,424(r3)
  815aa8:	10c00915 	stw	r3,36(r2)
  815aac:	e0bfff17 	ldw	r2,-4(fp)
  815ab0:	10800017 	ldw	r2,0(r2)
  815ab4:	10800017 	ldw	r2,0(r2)
  815ab8:	e13fff17 	ldw	r4,-4(fp)
  815abc:	103ee83a 	callr	r2
  815ac0:	e03ff715 	stw	zero,-36(fp)
  815ac4:	00005d06 	br	815c3c <start_pass+0x2b4>
  815ac8:	e0ffff17 	ldw	r3,-4(fp)
  815acc:	e0bff717 	ldw	r2,-36(fp)
  815ad0:	10801584 	addi	r2,r2,86
  815ad4:	1085883a 	add	r2,r2,r2
  815ad8:	1085883a 	add	r2,r2,r2
  815adc:	1885883a 	add	r2,r3,r2
  815ae0:	10800017 	ldw	r2,0(r2)
  815ae4:	10800117 	ldw	r2,4(r2)
  815ae8:	e0bffa15 	stw	r2,-24(fp)
  815aec:	e0bfff17 	ldw	r2,-4(fp)
  815af0:	10c02817 	ldw	r3,160(r2)
  815af4:	e0bffa17 	ldw	r2,-24(fp)
  815af8:	1004923a 	slli	r2,r2,8
  815afc:	1885883a 	add	r2,r3,r2
  815b00:	e0bffb15 	stw	r2,-20(fp)
  815b04:	e0bfff17 	ldw	r2,-4(fp)
  815b08:	10806717 	ldw	r2,412(r2)
  815b0c:	10001426 	beq	r2,zero,815b60 <start_pass+0x1d8>
  815b10:	e0bffb17 	ldw	r2,-20(fp)
  815b14:	10800017 	ldw	r2,0(r2)
  815b18:	1000110e 	bge	r2,zero,815b60 <start_pass+0x1d8>
  815b1c:	e0bfff17 	ldw	r2,-4(fp)
  815b20:	10800017 	ldw	r2,0(r2)
  815b24:	00c01d84 	movi	r3,118
  815b28:	10c00515 	stw	r3,20(r2)
  815b2c:	e0bfff17 	ldw	r2,-4(fp)
  815b30:	10800017 	ldw	r2,0(r2)
  815b34:	e0fffa17 	ldw	r3,-24(fp)
  815b38:	10c00615 	stw	r3,24(r2)
  815b3c:	e0bfff17 	ldw	r2,-4(fp)
  815b40:	10800017 	ldw	r2,0(r2)
  815b44:	10000715 	stw	zero,28(r2)
  815b48:	e0bfff17 	ldw	r2,-4(fp)
  815b4c:	10800017 	ldw	r2,0(r2)
  815b50:	10800117 	ldw	r2,4(r2)
  815b54:	017fffc4 	movi	r5,-1
  815b58:	e13fff17 	ldw	r4,-4(fp)
  815b5c:	103ee83a 	callr	r2
  815b60:	e0bfff17 	ldw	r2,-4(fp)
  815b64:	10806717 	ldw	r2,412(r2)
  815b68:	e0bff815 	stw	r2,-32(fp)
  815b6c:	00002c06 	br	815c20 <start_pass+0x298>
  815b70:	e0bff817 	ldw	r2,-32(fp)
  815b74:	1085883a 	add	r2,r2,r2
  815b78:	1085883a 	add	r2,r2,r2
  815b7c:	1007883a 	mov	r3,r2
  815b80:	e0bffb17 	ldw	r2,-20(fp)
  815b84:	10c5883a 	add	r2,r2,r3
  815b88:	10800017 	ldw	r2,0(r2)
  815b8c:	1000010e 	bge	r2,zero,815b94 <start_pass+0x20c>
  815b90:	0005883a 	mov	r2,zero
  815b94:	e0bffc15 	stw	r2,-16(fp)
  815b98:	e0bfff17 	ldw	r2,-4(fp)
  815b9c:	10c06917 	ldw	r3,420(r2)
  815ba0:	e0bffc17 	ldw	r2,-16(fp)
  815ba4:	18801226 	beq	r3,r2,815bf0 <start_pass+0x268>
  815ba8:	e0bfff17 	ldw	r2,-4(fp)
  815bac:	10800017 	ldw	r2,0(r2)
  815bb0:	00c01d84 	movi	r3,118
  815bb4:	10c00515 	stw	r3,20(r2)
  815bb8:	e0bfff17 	ldw	r2,-4(fp)
  815bbc:	10800017 	ldw	r2,0(r2)
  815bc0:	e0fffa17 	ldw	r3,-24(fp)
  815bc4:	10c00615 	stw	r3,24(r2)
  815bc8:	e0bfff17 	ldw	r2,-4(fp)
  815bcc:	10800017 	ldw	r2,0(r2)
  815bd0:	e0fff817 	ldw	r3,-32(fp)
  815bd4:	10c00715 	stw	r3,28(r2)
  815bd8:	e0bfff17 	ldw	r2,-4(fp)
  815bdc:	10800017 	ldw	r2,0(r2)
  815be0:	10800117 	ldw	r2,4(r2)
  815be4:	017fffc4 	movi	r5,-1
  815be8:	e13fff17 	ldw	r4,-4(fp)
  815bec:	103ee83a 	callr	r2
  815bf0:	e0bff817 	ldw	r2,-32(fp)
  815bf4:	1085883a 	add	r2,r2,r2
  815bf8:	1085883a 	add	r2,r2,r2
  815bfc:	1007883a 	mov	r3,r2
  815c00:	e0bffb17 	ldw	r2,-20(fp)
  815c04:	10c5883a 	add	r2,r2,r3
  815c08:	e0ffff17 	ldw	r3,-4(fp)
  815c0c:	18c06a17 	ldw	r3,424(r3)
  815c10:	10c00015 	stw	r3,0(r2)
  815c14:	e0bff817 	ldw	r2,-32(fp)
  815c18:	10800044 	addi	r2,r2,1
  815c1c:	e0bff815 	stw	r2,-32(fp)
  815c20:	e0bfff17 	ldw	r2,-4(fp)
  815c24:	10c06817 	ldw	r3,416(r2)
  815c28:	e0bff817 	ldw	r2,-32(fp)
  815c2c:	18bfd00e 	bge	r3,r2,815b70 <__alt_mem_epcs_flash_controller_0+0xff80cb70>
  815c30:	e0bff717 	ldw	r2,-36(fp)
  815c34:	10800044 	addi	r2,r2,1
  815c38:	e0bff715 	stw	r2,-36(fp)
  815c3c:	e0bfff17 	ldw	r2,-4(fp)
  815c40:	10805517 	ldw	r2,340(r2)
  815c44:	e0fff717 	ldw	r3,-36(fp)
  815c48:	18bf9f16 	blt	r3,r2,815ac8 <__alt_mem_epcs_flash_controller_0+0xff80cac8>
  815c4c:	e0bfff17 	ldw	r2,-4(fp)
  815c50:	10806917 	ldw	r2,420(r2)
  815c54:	10000d1e 	bne	r2,zero,815c8c <start_pass+0x304>
  815c58:	e0bfff17 	ldw	r2,-4(fp)
  815c5c:	10806717 	ldw	r2,412(r2)
  815c60:	1000051e 	bne	r2,zero,815c78 <start_pass+0x2f0>
  815c64:	e0fff917 	ldw	r3,-28(fp)
  815c68:	00802074 	movhi	r2,129
  815c6c:	1091b804 	addi	r2,r2,18144
  815c70:	18800115 	stw	r2,4(r3)
  815c74:	00003206 	br	815d40 <start_pass+0x3b8>
  815c78:	e0fff917 	ldw	r3,-28(fp)
  815c7c:	00802074 	movhi	r2,129
  815c80:	1092c004 	addi	r2,r2,19200
  815c84:	18800115 	stw	r2,4(r3)
  815c88:	00002d06 	br	815d40 <start_pass+0x3b8>
  815c8c:	e0bfff17 	ldw	r2,-4(fp)
  815c90:	10806717 	ldw	r2,412(r2)
  815c94:	1000051e 	bne	r2,zero,815cac <start_pass+0x324>
  815c98:	e0fff917 	ldw	r3,-28(fp)
  815c9c:	00802074 	movhi	r2,129
  815ca0:	10939904 	addi	r2,r2,20068
  815ca4:	18800115 	stw	r2,4(r3)
  815ca8:	00002506 	br	815d40 <start_pass+0x3b8>
  815cac:	e0fff917 	ldw	r3,-28(fp)
  815cb0:	00802074 	movhi	r2,129
  815cb4:	1093dc04 	addi	r2,r2,20336
  815cb8:	18800115 	stw	r2,4(r3)
  815cbc:	00002006 	br	815d40 <start_pass+0x3b8>
  815cc0:	e0bfff17 	ldw	r2,-4(fp)
  815cc4:	10806717 	ldw	r2,412(r2)
  815cc8:	10000f1e 	bne	r2,zero,815d08 <start_pass+0x380>
  815ccc:	e0bfff17 	ldw	r2,-4(fp)
  815cd0:	10806917 	ldw	r2,420(r2)
  815cd4:	10000c1e 	bne	r2,zero,815d08 <start_pass+0x380>
  815cd8:	e0bfff17 	ldw	r2,-4(fp)
  815cdc:	10806a17 	ldw	r2,424(r2)
  815ce0:	1000091e 	bne	r2,zero,815d08 <start_pass+0x380>
  815ce4:	e0bfff17 	ldw	r2,-4(fp)
  815ce8:	10806817 	ldw	r2,416(r2)
  815cec:	10801008 	cmpgei	r2,r2,64
  815cf0:	10000f1e 	bne	r2,zero,815d30 <start_pass+0x3a8>
  815cf4:	e0bfff17 	ldw	r2,-4(fp)
  815cf8:	10c06817 	ldw	r3,416(r2)
  815cfc:	e0bfff17 	ldw	r2,-4(fp)
  815d00:	10806d17 	ldw	r2,436(r2)
  815d04:	18800a26 	beq	r3,r2,815d30 <start_pass+0x3a8>
  815d08:	e0bfff17 	ldw	r2,-4(fp)
  815d0c:	10800017 	ldw	r2,0(r2)
  815d10:	00c01f44 	movi	r3,125
  815d14:	10c00515 	stw	r3,20(r2)
  815d18:	e0bfff17 	ldw	r2,-4(fp)
  815d1c:	10800017 	ldw	r2,0(r2)
  815d20:	10800117 	ldw	r2,4(r2)
  815d24:	017fffc4 	movi	r5,-1
  815d28:	e13fff17 	ldw	r4,-4(fp)
  815d2c:	103ee83a 	callr	r2
  815d30:	e0fff917 	ldw	r3,-28(fp)
  815d34:	00802074 	movhi	r2,129
  815d38:	1094a904 	addi	r2,r2,21156
  815d3c:	18800115 	stw	r2,4(r3)
  815d40:	e03ff715 	stw	zero,-36(fp)
  815d44:	00009c06 	br	815fb8 <start_pass+0x630>
  815d48:	e0ffff17 	ldw	r3,-4(fp)
  815d4c:	e0bff717 	ldw	r2,-36(fp)
  815d50:	10801584 	addi	r2,r2,86
  815d54:	1085883a 	add	r2,r2,r2
  815d58:	1085883a 	add	r2,r2,r2
  815d5c:	1885883a 	add	r2,r3,r2
  815d60:	10800017 	ldw	r2,0(r2)
  815d64:	e0bffd15 	stw	r2,-12(fp)
  815d68:	e0bfff17 	ldw	r2,-4(fp)
  815d6c:	10803817 	ldw	r2,224(r2)
  815d70:	10000626 	beq	r2,zero,815d8c <start_pass+0x404>
  815d74:	e0bfff17 	ldw	r2,-4(fp)
  815d78:	10806717 	ldw	r2,412(r2)
  815d7c:	1000481e 	bne	r2,zero,815ea0 <start_pass+0x518>
  815d80:	e0bfff17 	ldw	r2,-4(fp)
  815d84:	10806917 	ldw	r2,420(r2)
  815d88:	1000451e 	bne	r2,zero,815ea0 <start_pass+0x518>
  815d8c:	e0bffd17 	ldw	r2,-12(fp)
  815d90:	10800517 	ldw	r2,20(r2)
  815d94:	e0bffe15 	stw	r2,-8(fp)
  815d98:	e0bffe17 	ldw	r2,-8(fp)
  815d9c:	10000316 	blt	r2,zero,815dac <start_pass+0x424>
  815da0:	e0bffe17 	ldw	r2,-8(fp)
  815da4:	10800410 	cmplti	r2,r2,16
  815da8:	10000d1e 	bne	r2,zero,815de0 <start_pass+0x458>
  815dac:	e0bfff17 	ldw	r2,-4(fp)
  815db0:	10800017 	ldw	r2,0(r2)
  815db4:	00c00c84 	movi	r3,50
  815db8:	10c00515 	stw	r3,20(r2)
  815dbc:	e0bfff17 	ldw	r2,-4(fp)
  815dc0:	10800017 	ldw	r2,0(r2)
  815dc4:	e0fffe17 	ldw	r3,-8(fp)
  815dc8:	10c00615 	stw	r3,24(r2)
  815dcc:	e0bfff17 	ldw	r2,-4(fp)
  815dd0:	10800017 	ldw	r2,0(r2)
  815dd4:	10800017 	ldw	r2,0(r2)
  815dd8:	e13fff17 	ldw	r4,-4(fp)
  815ddc:	103ee83a 	callr	r2
  815de0:	e0fff917 	ldw	r3,-28(fp)
  815de4:	e0bffe17 	ldw	r2,-8(fp)
  815de8:	108003c4 	addi	r2,r2,15
  815dec:	1085883a 	add	r2,r2,r2
  815df0:	1085883a 	add	r2,r2,r2
  815df4:	1885883a 	add	r2,r3,r2
  815df8:	10800017 	ldw	r2,0(r2)
  815dfc:	10000f1e 	bne	r2,zero,815e3c <start_pass+0x4b4>
  815e00:	e0bfff17 	ldw	r2,-4(fp)
  815e04:	10800117 	ldw	r2,4(r2)
  815e08:	10800017 	ldw	r2,0(r2)
  815e0c:	01801004 	movi	r6,64
  815e10:	01400044 	movi	r5,1
  815e14:	e13fff17 	ldw	r4,-4(fp)
  815e18:	103ee83a 	callr	r2
  815e1c:	1009883a 	mov	r4,r2
  815e20:	e0fff917 	ldw	r3,-28(fp)
  815e24:	e0bffe17 	ldw	r2,-8(fp)
  815e28:	108003c4 	addi	r2,r2,15
  815e2c:	1085883a 	add	r2,r2,r2
  815e30:	1085883a 	add	r2,r2,r2
  815e34:	1885883a 	add	r2,r3,r2
  815e38:	11000015 	stw	r4,0(r2)
  815e3c:	e0fff917 	ldw	r3,-28(fp)
  815e40:	e0bffe17 	ldw	r2,-8(fp)
  815e44:	108003c4 	addi	r2,r2,15
  815e48:	1085883a 	add	r2,r2,r2
  815e4c:	1085883a 	add	r2,r2,r2
  815e50:	1885883a 	add	r2,r3,r2
  815e54:	10800017 	ldw	r2,0(r2)
  815e58:	01801004 	movi	r6,64
  815e5c:	000b883a 	mov	r5,zero
  815e60:	1009883a 	mov	r4,r2
  815e64:	08342980 	call	834298 <memset>
  815e68:	e0fff917 	ldw	r3,-28(fp)
  815e6c:	e0bff717 	ldw	r2,-36(fp)
  815e70:	10800184 	addi	r2,r2,6
  815e74:	1085883a 	add	r2,r2,r2
  815e78:	1085883a 	add	r2,r2,r2
  815e7c:	1885883a 	add	r2,r3,r2
  815e80:	10000015 	stw	zero,0(r2)
  815e84:	e0fff917 	ldw	r3,-28(fp)
  815e88:	e0bff717 	ldw	r2,-36(fp)
  815e8c:	10800284 	addi	r2,r2,10
  815e90:	1085883a 	add	r2,r2,r2
  815e94:	1085883a 	add	r2,r2,r2
  815e98:	1885883a 	add	r2,r3,r2
  815e9c:	10000015 	stw	zero,0(r2)
  815ea0:	e0bfff17 	ldw	r2,-4(fp)
  815ea4:	10803817 	ldw	r2,224(r2)
  815ea8:	1000031e 	bne	r2,zero,815eb8 <start_pass+0x530>
  815eac:	e0bfff17 	ldw	r2,-4(fp)
  815eb0:	10806d17 	ldw	r2,436(r2)
  815eb4:	1000061e 	bne	r2,zero,815ed0 <start_pass+0x548>
  815eb8:	e0bfff17 	ldw	r2,-4(fp)
  815ebc:	10803817 	ldw	r2,224(r2)
  815ec0:	10003a26 	beq	r2,zero,815fac <start_pass+0x624>
  815ec4:	e0bfff17 	ldw	r2,-4(fp)
  815ec8:	10806717 	ldw	r2,412(r2)
  815ecc:	10003726 	beq	r2,zero,815fac <start_pass+0x624>
  815ed0:	e0bffd17 	ldw	r2,-12(fp)
  815ed4:	10800617 	ldw	r2,24(r2)
  815ed8:	e0bffe15 	stw	r2,-8(fp)
  815edc:	e0bffe17 	ldw	r2,-8(fp)
  815ee0:	10000316 	blt	r2,zero,815ef0 <start_pass+0x568>
  815ee4:	e0bffe17 	ldw	r2,-8(fp)
  815ee8:	10800410 	cmplti	r2,r2,16
  815eec:	10000d1e 	bne	r2,zero,815f24 <start_pass+0x59c>
  815ef0:	e0bfff17 	ldw	r2,-4(fp)
  815ef4:	10800017 	ldw	r2,0(r2)
  815ef8:	00c00c84 	movi	r3,50
  815efc:	10c00515 	stw	r3,20(r2)
  815f00:	e0bfff17 	ldw	r2,-4(fp)
  815f04:	10800017 	ldw	r2,0(r2)
  815f08:	e0fffe17 	ldw	r3,-8(fp)
  815f0c:	10c00615 	stw	r3,24(r2)
  815f10:	e0bfff17 	ldw	r2,-4(fp)
  815f14:	10800017 	ldw	r2,0(r2)
  815f18:	10800017 	ldw	r2,0(r2)
  815f1c:	e13fff17 	ldw	r4,-4(fp)
  815f20:	103ee83a 	callr	r2
  815f24:	e0fff917 	ldw	r3,-28(fp)
  815f28:	e0bffe17 	ldw	r2,-8(fp)
  815f2c:	108007c4 	addi	r2,r2,31
  815f30:	1085883a 	add	r2,r2,r2
  815f34:	1085883a 	add	r2,r2,r2
  815f38:	1885883a 	add	r2,r3,r2
  815f3c:	10800017 	ldw	r2,0(r2)
  815f40:	10000f1e 	bne	r2,zero,815f80 <start_pass+0x5f8>
  815f44:	e0bfff17 	ldw	r2,-4(fp)
  815f48:	10800117 	ldw	r2,4(r2)
  815f4c:	10800017 	ldw	r2,0(r2)
  815f50:	01804004 	movi	r6,256
  815f54:	01400044 	movi	r5,1
  815f58:	e13fff17 	ldw	r4,-4(fp)
  815f5c:	103ee83a 	callr	r2
  815f60:	1009883a 	mov	r4,r2
  815f64:	e0fff917 	ldw	r3,-28(fp)
  815f68:	e0bffe17 	ldw	r2,-8(fp)
  815f6c:	108007c4 	addi	r2,r2,31
  815f70:	1085883a 	add	r2,r2,r2
  815f74:	1085883a 	add	r2,r2,r2
  815f78:	1885883a 	add	r2,r3,r2
  815f7c:	11000015 	stw	r4,0(r2)
  815f80:	e0fff917 	ldw	r3,-28(fp)
  815f84:	e0bffe17 	ldw	r2,-8(fp)
  815f88:	108007c4 	addi	r2,r2,31
  815f8c:	1085883a 	add	r2,r2,r2
  815f90:	1085883a 	add	r2,r2,r2
  815f94:	1885883a 	add	r2,r3,r2
  815f98:	10800017 	ldw	r2,0(r2)
  815f9c:	01804004 	movi	r6,256
  815fa0:	000b883a 	mov	r5,zero
  815fa4:	1009883a 	mov	r4,r2
  815fa8:	08342980 	call	834298 <memset>
  815fac:	e0bff717 	ldw	r2,-36(fp)
  815fb0:	10800044 	addi	r2,r2,1
  815fb4:	e0bff715 	stw	r2,-36(fp)
  815fb8:	e0bfff17 	ldw	r2,-4(fp)
  815fbc:	10805517 	ldw	r2,340(r2)
  815fc0:	e0fff717 	ldw	r3,-36(fp)
  815fc4:	18bf6016 	blt	r3,r2,815d48 <__alt_mem_epcs_flash_controller_0+0xff80cd48>
  815fc8:	e0bff917 	ldw	r2,-28(fp)
  815fcc:	10000315 	stw	zero,12(r2)
  815fd0:	e0bff917 	ldw	r2,-28(fp)
  815fd4:	10000415 	stw	zero,16(r2)
  815fd8:	e0bff917 	ldw	r2,-28(fp)
  815fdc:	00fffc04 	movi	r3,-16
  815fe0:	10c00515 	stw	r3,20(r2)
  815fe4:	e0bfff17 	ldw	r2,-4(fp)
  815fe8:	10c04617 	ldw	r3,280(r2)
  815fec:	e0bff917 	ldw	r2,-28(fp)
  815ff0:	10c00e15 	stw	r3,56(r2)
  815ff4:	0001883a 	nop
  815ff8:	e037883a 	mov	sp,fp
  815ffc:	dfc00117 	ldw	ra,4(sp)
  816000:	df000017 	ldw	fp,0(sp)
  816004:	dec00204 	addi	sp,sp,8
  816008:	f800283a 	ret

0081600c <finish_pass>:
  81600c:	defffe04 	addi	sp,sp,-8
  816010:	df000115 	stw	fp,4(sp)
  816014:	df000104 	addi	fp,sp,4
  816018:	e13fff15 	stw	r4,-4(fp)
  81601c:	0001883a 	nop
  816020:	e037883a 	mov	sp,fp
  816024:	df000017 	ldw	fp,0(sp)
  816028:	dec00104 	addi	sp,sp,4
  81602c:	f800283a 	ret

00816030 <jinit_arith_decoder>:
  816030:	defff904 	addi	sp,sp,-28
  816034:	dfc00615 	stw	ra,24(sp)
  816038:	df000515 	stw	fp,20(sp)
  81603c:	df000504 	addi	fp,sp,20
  816040:	e13fff15 	stw	r4,-4(fp)
  816044:	e0bfff17 	ldw	r2,-4(fp)
  816048:	10800117 	ldw	r2,4(r2)
  81604c:	10800017 	ldw	r2,0(r2)
  816050:	01803004 	movi	r6,192
  816054:	01400044 	movi	r5,1
  816058:	e13fff17 	ldw	r4,-4(fp)
  81605c:	103ee83a 	callr	r2
  816060:	e0bffe15 	stw	r2,-8(fp)
  816064:	e0fffe17 	ldw	r3,-8(fp)
  816068:	e0bfff17 	ldw	r2,-4(fp)
  81606c:	10c07515 	stw	r3,468(r2)
  816070:	e0fffe17 	ldw	r3,-8(fp)
  816074:	00802074 	movhi	r2,129
  816078:	10966204 	addi	r2,r2,22920
  81607c:	18800015 	stw	r2,0(r3)
  816080:	e0fffe17 	ldw	r3,-8(fp)
  816084:	00802074 	movhi	r2,129
  816088:	10980304 	addi	r2,r2,24588
  81608c:	18800215 	stw	r2,8(r3)
  816090:	e03ffb15 	stw	zero,-20(fp)
  816094:	00001106 	br	8160dc <jinit_arith_decoder+0xac>
  816098:	e0fffe17 	ldw	r3,-8(fp)
  81609c:	e0bffb17 	ldw	r2,-20(fp)
  8160a0:	108003c4 	addi	r2,r2,15
  8160a4:	1085883a 	add	r2,r2,r2
  8160a8:	1085883a 	add	r2,r2,r2
  8160ac:	1885883a 	add	r2,r3,r2
  8160b0:	10000015 	stw	zero,0(r2)
  8160b4:	e0fffe17 	ldw	r3,-8(fp)
  8160b8:	e0bffb17 	ldw	r2,-20(fp)
  8160bc:	108007c4 	addi	r2,r2,31
  8160c0:	1085883a 	add	r2,r2,r2
  8160c4:	1085883a 	add	r2,r2,r2
  8160c8:	1885883a 	add	r2,r3,r2
  8160cc:	10000015 	stw	zero,0(r2)
  8160d0:	e0bffb17 	ldw	r2,-20(fp)
  8160d4:	10800044 	addi	r2,r2,1
  8160d8:	e0bffb15 	stw	r2,-20(fp)
  8160dc:	e0bffb17 	ldw	r2,-20(fp)
  8160e0:	10800410 	cmplti	r2,r2,16
  8160e4:	103fec1e 	bne	r2,zero,816098 <__alt_mem_epcs_flash_controller_0+0xff80d098>
  8160e8:	e0bffe17 	ldw	r2,-8(fp)
  8160ec:	00c01c44 	movi	r3,113
  8160f0:	10c02f05 	stb	r3,188(r2)
  8160f4:	e0bfff17 	ldw	r2,-4(fp)
  8160f8:	10803817 	ldw	r2,224(r2)
  8160fc:	10002626 	beq	r2,zero,816198 <jinit_arith_decoder+0x168>
  816100:	e0bfff17 	ldw	r2,-4(fp)
  816104:	10800117 	ldw	r2,4(r2)
  816108:	10800017 	ldw	r2,0(r2)
  81610c:	e0ffff17 	ldw	r3,-4(fp)
  816110:	18c00917 	ldw	r3,36(r3)
  816114:	1806923a 	slli	r3,r3,8
  816118:	180d883a 	mov	r6,r3
  81611c:	01400044 	movi	r5,1
  816120:	e13fff17 	ldw	r4,-4(fp)
  816124:	103ee83a 	callr	r2
  816128:	1007883a 	mov	r3,r2
  81612c:	e0bfff17 	ldw	r2,-4(fp)
  816130:	10c02815 	stw	r3,160(r2)
  816134:	e0bfff17 	ldw	r2,-4(fp)
  816138:	10802817 	ldw	r2,160(r2)
  81613c:	e0bffc15 	stw	r2,-16(fp)
  816140:	e03ffd15 	stw	zero,-12(fp)
  816144:	00001006 	br	816188 <jinit_arith_decoder+0x158>
  816148:	e03ffb15 	stw	zero,-20(fp)
  81614c:	00000806 	br	816170 <jinit_arith_decoder+0x140>
  816150:	e0bffc17 	ldw	r2,-16(fp)
  816154:	10c00104 	addi	r3,r2,4
  816158:	e0fffc15 	stw	r3,-16(fp)
  81615c:	00ffffc4 	movi	r3,-1
  816160:	10c00015 	stw	r3,0(r2)
  816164:	e0bffb17 	ldw	r2,-20(fp)
  816168:	10800044 	addi	r2,r2,1
  81616c:	e0bffb15 	stw	r2,-20(fp)
  816170:	e0bffb17 	ldw	r2,-20(fp)
  816174:	10801010 	cmplti	r2,r2,64
  816178:	103ff51e 	bne	r2,zero,816150 <__alt_mem_epcs_flash_controller_0+0xff80d150>
  81617c:	e0bffd17 	ldw	r2,-12(fp)
  816180:	10800044 	addi	r2,r2,1
  816184:	e0bffd15 	stw	r2,-12(fp)
  816188:	e0bfff17 	ldw	r2,-4(fp)
  81618c:	10800917 	ldw	r2,36(r2)
  816190:	e0fffd17 	ldw	r3,-12(fp)
  816194:	18bfec16 	blt	r3,r2,816148 <__alt_mem_epcs_flash_controller_0+0xff80d148>
  816198:	0001883a 	nop
  81619c:	e037883a 	mov	sp,fp
  8161a0:	dfc00117 	ldw	ra,4(sp)
  8161a4:	df000017 	ldw	fp,0(sp)
  8161a8:	dec00204 	addi	sp,sp,8
  8161ac:	f800283a 	ret

008161b0 <start_iMCU_row>:
  8161b0:	defffd04 	addi	sp,sp,-12
  8161b4:	df000215 	stw	fp,8(sp)
  8161b8:	df000204 	addi	fp,sp,8
  8161bc:	e13fff15 	stw	r4,-4(fp)
  8161c0:	e0bfff17 	ldw	r2,-4(fp)
  8161c4:	10807117 	ldw	r2,452(r2)
  8161c8:	e0bffe15 	stw	r2,-8(fp)
  8161cc:	e0bfff17 	ldw	r2,-4(fp)
  8161d0:	10805517 	ldw	r2,340(r2)
  8161d4:	10800090 	cmplti	r2,r2,2
  8161d8:	1000041e 	bne	r2,zero,8161ec <start_iMCU_row+0x3c>
  8161dc:	e0bffe17 	ldw	r2,-8(fp)
  8161e0:	00c00044 	movi	r3,1
  8161e4:	10c00715 	stw	r3,28(r2)
  8161e8:	00001106 	br	816230 <start_iMCU_row+0x80>
  8161ec:	e0bfff17 	ldw	r2,-4(fp)
  8161f0:	10c02517 	ldw	r3,148(r2)
  8161f4:	e0bfff17 	ldw	r2,-4(fp)
  8161f8:	10805317 	ldw	r2,332(r2)
  8161fc:	10bfffc4 	addi	r2,r2,-1
  816200:	1880062e 	bgeu	r3,r2,81621c <start_iMCU_row+0x6c>
  816204:	e0bfff17 	ldw	r2,-4(fp)
  816208:	10805617 	ldw	r2,344(r2)
  81620c:	10c00317 	ldw	r3,12(r2)
  816210:	e0bffe17 	ldw	r2,-8(fp)
  816214:	10c00715 	stw	r3,28(r2)
  816218:	00000506 	br	816230 <start_iMCU_row+0x80>
  81621c:	e0bfff17 	ldw	r2,-4(fp)
  816220:	10805617 	ldw	r2,344(r2)
  816224:	10c01317 	ldw	r3,76(r2)
  816228:	e0bffe17 	ldw	r2,-8(fp)
  81622c:	10c00715 	stw	r3,28(r2)
  816230:	e0bffe17 	ldw	r2,-8(fp)
  816234:	10000515 	stw	zero,20(r2)
  816238:	e0bffe17 	ldw	r2,-8(fp)
  81623c:	10000615 	stw	zero,24(r2)
  816240:	0001883a 	nop
  816244:	e037883a 	mov	sp,fp
  816248:	df000017 	ldw	fp,0(sp)
  81624c:	dec00104 	addi	sp,sp,4
  816250:	f800283a 	ret

00816254 <start_input_pass>:
  816254:	defffd04 	addi	sp,sp,-12
  816258:	dfc00215 	stw	ra,8(sp)
  81625c:	df000115 	stw	fp,4(sp)
  816260:	df000104 	addi	fp,sp,4
  816264:	e13fff15 	stw	r4,-4(fp)
  816268:	e0bfff17 	ldw	r2,-4(fp)
  81626c:	10002515 	stw	zero,148(r2)
  816270:	e13fff17 	ldw	r4,-4(fp)
  816274:	08161b00 	call	8161b0 <start_iMCU_row>
  816278:	0001883a 	nop
  81627c:	e037883a 	mov	sp,fp
  816280:	dfc00117 	ldw	ra,4(sp)
  816284:	df000017 	ldw	fp,0(sp)
  816288:	dec00204 	addi	sp,sp,8
  81628c:	f800283a 	ret

00816290 <start_output_pass>:
  816290:	defffc04 	addi	sp,sp,-16
  816294:	dfc00315 	stw	ra,12(sp)
  816298:	df000215 	stw	fp,8(sp)
  81629c:	df000204 	addi	fp,sp,8
  8162a0:	e13fff15 	stw	r4,-4(fp)
  8162a4:	e0bfff17 	ldw	r2,-4(fp)
  8162a8:	10807117 	ldw	r2,452(r2)
  8162ac:	e0bffe15 	stw	r2,-8(fp)
  8162b0:	e0bffe17 	ldw	r2,-8(fp)
  8162b4:	10800417 	ldw	r2,16(r2)
  8162b8:	10000f26 	beq	r2,zero,8162f8 <start_output_pass+0x68>
  8162bc:	e0bfff17 	ldw	r2,-4(fp)
  8162c0:	10801417 	ldw	r2,80(r2)
  8162c4:	10000826 	beq	r2,zero,8162e8 <start_output_pass+0x58>
  8162c8:	e13fff17 	ldw	r4,-4(fp)
  8162cc:	0816d240 	call	816d24 <smoothing_ok>
  8162d0:	10000526 	beq	r2,zero,8162e8 <start_output_pass+0x58>
  8162d4:	e0fffe17 	ldw	r3,-8(fp)
  8162d8:	00802074 	movhi	r2,129
  8162dc:	109bd604 	addi	r2,r2,28504
  8162e0:	18800315 	stw	r2,12(r3)
  8162e4:	00000406 	br	8162f8 <start_output_pass+0x68>
  8162e8:	e0fffe17 	ldw	r3,-8(fp)
  8162ec:	00802074 	movhi	r2,129
  8162f0:	109a8604 	addi	r2,r2,27160
  8162f4:	18800315 	stw	r2,12(r3)
  8162f8:	e0bfff17 	ldw	r2,-4(fp)
  8162fc:	10002715 	stw	zero,156(r2)
  816300:	0001883a 	nop
  816304:	e037883a 	mov	sp,fp
  816308:	dfc00117 	ldw	ra,4(sp)
  81630c:	df000017 	ldw	fp,0(sp)
  816310:	dec00204 	addi	sp,sp,8
  816314:	f800283a 	ret

00816318 <decompress_onepass>:
  816318:	deffeb04 	addi	sp,sp,-84
  81631c:	dfc01415 	stw	ra,80(sp)
  816320:	df001315 	stw	fp,76(sp)
  816324:	dc001215 	stw	r16,72(sp)
  816328:	df001304 	addi	fp,sp,76
  81632c:	e13ffd15 	stw	r4,-12(fp)
  816330:	e17ffe15 	stw	r5,-8(fp)
  816334:	e0bffd17 	ldw	r2,-12(fp)
  816338:	10807117 	ldw	r2,452(r2)
  81633c:	e0bff615 	stw	r2,-40(fp)
  816340:	e0bffd17 	ldw	r2,-12(fp)
  816344:	10805a17 	ldw	r2,360(r2)
  816348:	10bfffc4 	addi	r2,r2,-1
  81634c:	e0bff715 	stw	r2,-36(fp)
  816350:	e0bffd17 	ldw	r2,-12(fp)
  816354:	10805317 	ldw	r2,332(r2)
  816358:	10bfffc4 	addi	r2,r2,-1
  81635c:	e0bff815 	stw	r2,-32(fp)
  816360:	e0bff617 	ldw	r2,-40(fp)
  816364:	10800617 	ldw	r2,24(r2)
  816368:	e0bff315 	stw	r2,-52(fp)
  81636c:	0000b206 	br	816638 <decompress_onepass+0x320>
  816370:	e0bff617 	ldw	r2,-40(fp)
  816374:	10800517 	ldw	r2,20(r2)
  816378:	e0bfee15 	stw	r2,-72(fp)
  81637c:	0000a606 	br	816618 <decompress_onepass+0x300>
  816380:	e0bffd17 	ldw	r2,-12(fp)
  816384:	10806d17 	ldw	r2,436(r2)
  816388:	10000926 	beq	r2,zero,8163b0 <decompress_onepass+0x98>
  81638c:	e0bff617 	ldw	r2,-40(fp)
  816390:	10c00817 	ldw	r3,32(r2)
  816394:	e0bffd17 	ldw	r2,-12(fp)
  816398:	10805c17 	ldw	r2,368(r2)
  81639c:	100491fa 	slli	r2,r2,7
  8163a0:	100d883a 	mov	r6,r2
  8163a4:	000b883a 	mov	r5,zero
  8163a8:	1809883a 	mov	r4,r3
  8163ac:	08342980 	call	834298 <memset>
  8163b0:	e0bffd17 	ldw	r2,-12(fp)
  8163b4:	10807517 	ldw	r2,468(r2)
  8163b8:	10800117 	ldw	r2,4(r2)
  8163bc:	e0fff617 	ldw	r3,-40(fp)
  8163c0:	18c00804 	addi	r3,r3,32
  8163c4:	180b883a 	mov	r5,r3
  8163c8:	e13ffd17 	ldw	r4,-12(fp)
  8163cc:	103ee83a 	callr	r2
  8163d0:	1000081e 	bne	r2,zero,8163f4 <decompress_onepass+0xdc>
  8163d4:	e0bff617 	ldw	r2,-40(fp)
  8163d8:	e0fff317 	ldw	r3,-52(fp)
  8163dc:	10c00615 	stw	r3,24(r2)
  8163e0:	e0bff617 	ldw	r2,-40(fp)
  8163e4:	e0ffee17 	ldw	r3,-72(fp)
  8163e8:	10c00515 	stw	r3,20(r2)
  8163ec:	0005883a 	mov	r2,zero
  8163f0:	0000ae06 	br	8166ac <decompress_onepass+0x394>
  8163f4:	e03fef15 	stw	zero,-68(fp)
  8163f8:	e03ff015 	stw	zero,-64(fp)
  8163fc:	00007f06 	br	8165fc <decompress_onepass+0x2e4>
  816400:	e0fffd17 	ldw	r3,-12(fp)
  816404:	e0bff017 	ldw	r2,-64(fp)
  816408:	10801584 	addi	r2,r2,86
  81640c:	1085883a 	add	r2,r2,r2
  816410:	1085883a 	add	r2,r2,r2
  816414:	1885883a 	add	r2,r3,r2
  816418:	10800017 	ldw	r2,0(r2)
  81641c:	e0bff915 	stw	r2,-28(fp)
  816420:	e0bff917 	ldw	r2,-28(fp)
  816424:	10800d17 	ldw	r2,52(r2)
  816428:	1000061e 	bne	r2,zero,816444 <decompress_onepass+0x12c>
  81642c:	e0bff917 	ldw	r2,-28(fp)
  816430:	10801017 	ldw	r2,64(r2)
  816434:	e0ffef17 	ldw	r3,-68(fp)
  816438:	1885883a 	add	r2,r3,r2
  81643c:	e0bfef15 	stw	r2,-68(fp)
  816440:	00006b06 	br	8165f0 <decompress_onepass+0x2d8>
  816444:	e0bffd17 	ldw	r2,-12(fp)
  816448:	10c07617 	ldw	r3,472(r2)
  81644c:	e0bff917 	ldw	r2,-28(fp)
  816450:	10800117 	ldw	r2,4(r2)
  816454:	10800044 	addi	r2,r2,1
  816458:	1085883a 	add	r2,r2,r2
  81645c:	1085883a 	add	r2,r2,r2
  816460:	1885883a 	add	r2,r3,r2
  816464:	10800017 	ldw	r2,0(r2)
  816468:	e0bffa15 	stw	r2,-24(fp)
  81646c:	e0ffee17 	ldw	r3,-72(fp)
  816470:	e0bff717 	ldw	r2,-36(fp)
  816474:	1880032e 	bgeu	r3,r2,816484 <decompress_onepass+0x16c>
  816478:	e0bff917 	ldw	r2,-28(fp)
  81647c:	10800e17 	ldw	r2,56(r2)
  816480:	00000206 	br	81648c <decompress_onepass+0x174>
  816484:	e0bff917 	ldw	r2,-28(fp)
  816488:	10801217 	ldw	r2,72(r2)
  81648c:	e0bffb15 	stw	r2,-20(fp)
  816490:	e0bff917 	ldw	r2,-28(fp)
  816494:	10800117 	ldw	r2,4(r2)
  816498:	1085883a 	add	r2,r2,r2
  81649c:	1085883a 	add	r2,r2,r2
  8164a0:	1007883a 	mov	r3,r2
  8164a4:	e0bffe17 	ldw	r2,-8(fp)
  8164a8:	10c5883a 	add	r2,r2,r3
  8164ac:	14000017 	ldw	r16,0(r2)
  8164b0:	e0bff917 	ldw	r2,-28(fp)
  8164b4:	10800a17 	ldw	r2,40(r2)
  8164b8:	e17ff317 	ldw	r5,-52(fp)
  8164bc:	1009883a 	mov	r4,r2
  8164c0:	08305040 	call	830504 <__mulsi3>
  8164c4:	1085883a 	add	r2,r2,r2
  8164c8:	1085883a 	add	r2,r2,r2
  8164cc:	8085883a 	add	r2,r16,r2
  8164d0:	e0bff415 	stw	r2,-48(fp)
  8164d4:	e0bff917 	ldw	r2,-28(fp)
  8164d8:	10801117 	ldw	r2,68(r2)
  8164dc:	e17fee17 	ldw	r5,-72(fp)
  8164e0:	1009883a 	mov	r4,r2
  8164e4:	08305040 	call	830504 <__mulsi3>
  8164e8:	e0bffc15 	stw	r2,-16(fp)
  8164ec:	e03ff215 	stw	zero,-56(fp)
  8164f0:	00003b06 	br	8165e0 <decompress_onepass+0x2c8>
  8164f4:	e0bffd17 	ldw	r2,-12(fp)
  8164f8:	10c02517 	ldw	r3,148(r2)
  8164fc:	e0bff817 	ldw	r2,-32(fp)
  816500:	18800636 	bltu	r3,r2,81651c <decompress_onepass+0x204>
  816504:	e0fff317 	ldw	r3,-52(fp)
  816508:	e0bff217 	ldw	r2,-56(fp)
  81650c:	1887883a 	add	r3,r3,r2
  816510:	e0bff917 	ldw	r2,-28(fp)
  816514:	10801317 	ldw	r2,76(r2)
  816518:	1880210e 	bge	r3,r2,8165a0 <decompress_onepass+0x288>
  81651c:	e0bffc17 	ldw	r2,-16(fp)
  816520:	e0bff515 	stw	r2,-44(fp)
  816524:	e03ff115 	stw	zero,-60(fp)
  816528:	00001a06 	br	816594 <decompress_onepass+0x27c>
  81652c:	e0ffef17 	ldw	r3,-68(fp)
  816530:	e0bff117 	ldw	r2,-60(fp)
  816534:	1885883a 	add	r2,r3,r2
  816538:	e0fff617 	ldw	r3,-40(fp)
  81653c:	10800204 	addi	r2,r2,8
  816540:	1085883a 	add	r2,r2,r2
  816544:	1085883a 	add	r2,r2,r2
  816548:	1885883a 	add	r2,r3,r2
  81654c:	10c00017 	ldw	r3,0(r2)
  816550:	e0bff517 	ldw	r2,-44(fp)
  816554:	d8800015 	stw	r2,0(sp)
  816558:	e0bffa17 	ldw	r2,-24(fp)
  81655c:	e1fff417 	ldw	r7,-48(fp)
  816560:	180d883a 	mov	r6,r3
  816564:	e17ff917 	ldw	r5,-28(fp)
  816568:	e13ffd17 	ldw	r4,-12(fp)
  81656c:	103ee83a 	callr	r2
  816570:	e0bff917 	ldw	r2,-28(fp)
  816574:	10800917 	ldw	r2,36(r2)
  816578:	1007883a 	mov	r3,r2
  81657c:	e0bff517 	ldw	r2,-44(fp)
  816580:	10c5883a 	add	r2,r2,r3
  816584:	e0bff515 	stw	r2,-44(fp)
  816588:	e0bff117 	ldw	r2,-60(fp)
  81658c:	10800044 	addi	r2,r2,1
  816590:	e0bff115 	stw	r2,-60(fp)
  816594:	e0fff117 	ldw	r3,-60(fp)
  816598:	e0bffb17 	ldw	r2,-20(fp)
  81659c:	18bfe316 	blt	r3,r2,81652c <__alt_mem_epcs_flash_controller_0+0xff80d52c>
  8165a0:	e0bff917 	ldw	r2,-28(fp)
  8165a4:	10800e17 	ldw	r2,56(r2)
  8165a8:	e0ffef17 	ldw	r3,-68(fp)
  8165ac:	1885883a 	add	r2,r3,r2
  8165b0:	e0bfef15 	stw	r2,-68(fp)
  8165b4:	e0bff917 	ldw	r2,-28(fp)
  8165b8:	10800a17 	ldw	r2,40(r2)
  8165bc:	1085883a 	add	r2,r2,r2
  8165c0:	1085883a 	add	r2,r2,r2
  8165c4:	1007883a 	mov	r3,r2
  8165c8:	e0bff417 	ldw	r2,-48(fp)
  8165cc:	10c5883a 	add	r2,r2,r3
  8165d0:	e0bff415 	stw	r2,-48(fp)
  8165d4:	e0bff217 	ldw	r2,-56(fp)
  8165d8:	10800044 	addi	r2,r2,1
  8165dc:	e0bff215 	stw	r2,-56(fp)
  8165e0:	e0bff917 	ldw	r2,-28(fp)
  8165e4:	10800f17 	ldw	r2,60(r2)
  8165e8:	e0fff217 	ldw	r3,-56(fp)
  8165ec:	18bfc116 	blt	r3,r2,8164f4 <__alt_mem_epcs_flash_controller_0+0xff80d4f4>
  8165f0:	e0bff017 	ldw	r2,-64(fp)
  8165f4:	10800044 	addi	r2,r2,1
  8165f8:	e0bff015 	stw	r2,-64(fp)
  8165fc:	e0bffd17 	ldw	r2,-12(fp)
  816600:	10805517 	ldw	r2,340(r2)
  816604:	e0fff017 	ldw	r3,-64(fp)
  816608:	18bf7d16 	blt	r3,r2,816400 <__alt_mem_epcs_flash_controller_0+0xff80d400>
  81660c:	e0bfee17 	ldw	r2,-72(fp)
  816610:	10800044 	addi	r2,r2,1
  816614:	e0bfee15 	stw	r2,-72(fp)
  816618:	e0bfee17 	ldw	r2,-72(fp)
  81661c:	e0fff717 	ldw	r3,-36(fp)
  816620:	18bf572e 	bgeu	r3,r2,816380 <__alt_mem_epcs_flash_controller_0+0xff80d380>
  816624:	e0bff617 	ldw	r2,-40(fp)
  816628:	10000515 	stw	zero,20(r2)
  81662c:	e0bff317 	ldw	r2,-52(fp)
  816630:	10800044 	addi	r2,r2,1
  816634:	e0bff315 	stw	r2,-52(fp)
  816638:	e0bff617 	ldw	r2,-40(fp)
  81663c:	10800717 	ldw	r2,28(r2)
  816640:	e0fff317 	ldw	r3,-52(fp)
  816644:	18bf4a16 	blt	r3,r2,816370 <__alt_mem_epcs_flash_controller_0+0xff80d370>
  816648:	e0bffd17 	ldw	r2,-12(fp)
  81664c:	10802717 	ldw	r2,156(r2)
  816650:	10c00044 	addi	r3,r2,1
  816654:	e0bffd17 	ldw	r2,-12(fp)
  816658:	10c02715 	stw	r3,156(r2)
  81665c:	e0bffd17 	ldw	r2,-12(fp)
  816660:	10802517 	ldw	r2,148(r2)
  816664:	10c00044 	addi	r3,r2,1
  816668:	e0bffd17 	ldw	r2,-12(fp)
  81666c:	10c02515 	stw	r3,148(r2)
  816670:	e0bffd17 	ldw	r2,-12(fp)
  816674:	10c02517 	ldw	r3,148(r2)
  816678:	e0bffd17 	ldw	r2,-12(fp)
  81667c:	10805317 	ldw	r2,332(r2)
  816680:	1880042e 	bgeu	r3,r2,816694 <decompress_onepass+0x37c>
  816684:	e13ffd17 	ldw	r4,-12(fp)
  816688:	08161b00 	call	8161b0 <start_iMCU_row>
  81668c:	008000c4 	movi	r2,3
  816690:	00000606 	br	8166ac <decompress_onepass+0x394>
  816694:	e0bffd17 	ldw	r2,-12(fp)
  816698:	10807317 	ldw	r2,460(r2)
  81669c:	10800317 	ldw	r2,12(r2)
  8166a0:	e13ffd17 	ldw	r4,-12(fp)
  8166a4:	103ee83a 	callr	r2
  8166a8:	00800104 	movi	r2,4
  8166ac:	e6ffff04 	addi	sp,fp,-4
  8166b0:	dfc00217 	ldw	ra,8(sp)
  8166b4:	df000117 	ldw	fp,4(sp)
  8166b8:	dc000017 	ldw	r16,0(sp)
  8166bc:	dec00304 	addi	sp,sp,12
  8166c0:	f800283a 	ret

008166c4 <dummy_consume_data>:
  8166c4:	defffe04 	addi	sp,sp,-8
  8166c8:	df000115 	stw	fp,4(sp)
  8166cc:	df000104 	addi	fp,sp,4
  8166d0:	e13fff15 	stw	r4,-4(fp)
  8166d4:	0005883a 	mov	r2,zero
  8166d8:	e037883a 	mov	sp,fp
  8166dc:	df000017 	ldw	fp,0(sp)
  8166e0:	dec00104 	addi	sp,sp,4
  8166e4:	f800283a 	ret

008166e8 <consume_data>:
  8166e8:	deffec04 	addi	sp,sp,-80
  8166ec:	dfc01315 	stw	ra,76(sp)
  8166f0:	df001215 	stw	fp,72(sp)
  8166f4:	dc401115 	stw	r17,68(sp)
  8166f8:	dc001015 	stw	r16,64(sp)
  8166fc:	df001204 	addi	fp,sp,72
  816700:	e13ffd15 	stw	r4,-12(fp)
  816704:	e0bffd17 	ldw	r2,-12(fp)
  816708:	10807117 	ldw	r2,452(r2)
  81670c:	e0bff615 	stw	r2,-40(fp)
  816710:	e03ff115 	stw	zero,-60(fp)
  816714:	00003006 	br	8167d8 <consume_data+0xf0>
  816718:	e0fffd17 	ldw	r3,-12(fp)
  81671c:	e0bff117 	ldw	r2,-60(fp)
  816720:	10801584 	addi	r2,r2,86
  816724:	1085883a 	add	r2,r2,r2
  816728:	1085883a 	add	r2,r2,r2
  81672c:	1885883a 	add	r2,r3,r2
  816730:	10800017 	ldw	r2,0(r2)
  816734:	e0bff715 	stw	r2,-36(fp)
  816738:	e0bffd17 	ldw	r2,-12(fp)
  81673c:	10800117 	ldw	r2,4(r2)
  816740:	14000817 	ldw	r16,32(r2)
  816744:	e0bff717 	ldw	r2,-36(fp)
  816748:	10800117 	ldw	r2,4(r2)
  81674c:	e0fff617 	ldw	r3,-40(fp)
  816750:	10800484 	addi	r2,r2,18
  816754:	1085883a 	add	r2,r2,r2
  816758:	1085883a 	add	r2,r2,r2
  81675c:	1885883a 	add	r2,r3,r2
  816760:	14400017 	ldw	r17,0(r2)
  816764:	e0bffd17 	ldw	r2,-12(fp)
  816768:	10c02517 	ldw	r3,148(r2)
  81676c:	e0bff717 	ldw	r2,-36(fp)
  816770:	10800317 	ldw	r2,12(r2)
  816774:	100b883a 	mov	r5,r2
  816778:	1809883a 	mov	r4,r3
  81677c:	08305040 	call	830504 <__mulsi3>
  816780:	1007883a 	mov	r3,r2
  816784:	e0bff717 	ldw	r2,-36(fp)
  816788:	10800317 	ldw	r2,12(r2)
  81678c:	1009883a 	mov	r4,r2
  816790:	00800044 	movi	r2,1
  816794:	d8800015 	stw	r2,0(sp)
  816798:	200f883a 	mov	r7,r4
  81679c:	180d883a 	mov	r6,r3
  8167a0:	880b883a 	mov	r5,r17
  8167a4:	e13ffd17 	ldw	r4,-12(fp)
  8167a8:	803ee83a 	callr	r16
  8167ac:	1007883a 	mov	r3,r2
  8167b0:	e0bff117 	ldw	r2,-60(fp)
  8167b4:	1085883a 	add	r2,r2,r2
  8167b8:	1085883a 	add	r2,r2,r2
  8167bc:	e13fef04 	addi	r4,fp,-68
  8167c0:	2085883a 	add	r2,r4,r2
  8167c4:	10800a04 	addi	r2,r2,40
  8167c8:	10c00015 	stw	r3,0(r2)
  8167cc:	e0bff117 	ldw	r2,-60(fp)
  8167d0:	10800044 	addi	r2,r2,1
  8167d4:	e0bff115 	stw	r2,-60(fp)
  8167d8:	e0bffd17 	ldw	r2,-12(fp)
  8167dc:	10805517 	ldw	r2,340(r2)
  8167e0:	e0fff117 	ldw	r3,-60(fp)
  8167e4:	18bfcc16 	blt	r3,r2,816718 <__alt_mem_epcs_flash_controller_0+0xff80d718>
  8167e8:	e0bff617 	ldw	r2,-40(fp)
  8167ec:	10800617 	ldw	r2,24(r2)
  8167f0:	e0bff415 	stw	r2,-48(fp)
  8167f4:	00006906 	br	81699c <consume_data+0x2b4>
  8167f8:	e0bff617 	ldw	r2,-40(fp)
  8167fc:	10800517 	ldw	r2,20(r2)
  816800:	e0bfef15 	stw	r2,-68(fp)
  816804:	00005c06 	br	816978 <consume_data+0x290>
  816808:	e03ff015 	stw	zero,-64(fp)
  81680c:	e03ff115 	stw	zero,-60(fp)
  816810:	00004106 	br	816918 <consume_data+0x230>
  816814:	e0fffd17 	ldw	r3,-12(fp)
  816818:	e0bff117 	ldw	r2,-60(fp)
  81681c:	10801584 	addi	r2,r2,86
  816820:	1085883a 	add	r2,r2,r2
  816824:	1085883a 	add	r2,r2,r2
  816828:	1885883a 	add	r2,r3,r2
  81682c:	10800017 	ldw	r2,0(r2)
  816830:	e0bff715 	stw	r2,-36(fp)
  816834:	e0bff717 	ldw	r2,-36(fp)
  816838:	10800e17 	ldw	r2,56(r2)
  81683c:	e17fef17 	ldw	r5,-68(fp)
  816840:	1009883a 	mov	r4,r2
  816844:	08305040 	call	830504 <__mulsi3>
  816848:	e0bff815 	stw	r2,-32(fp)
  81684c:	e03ff315 	stw	zero,-52(fp)
  816850:	00002a06 	br	8168fc <consume_data+0x214>
  816854:	e0bff117 	ldw	r2,-60(fp)
  816858:	1085883a 	add	r2,r2,r2
  81685c:	1085883a 	add	r2,r2,r2
  816860:	e0ffef04 	addi	r3,fp,-68
  816864:	1885883a 	add	r2,r3,r2
  816868:	10800a04 	addi	r2,r2,40
  81686c:	10c00017 	ldw	r3,0(r2)
  816870:	e13ff317 	ldw	r4,-52(fp)
  816874:	e0bff417 	ldw	r2,-48(fp)
  816878:	2085883a 	add	r2,r4,r2
  81687c:	1085883a 	add	r2,r2,r2
  816880:	1085883a 	add	r2,r2,r2
  816884:	1885883a 	add	r2,r3,r2
  816888:	10c00017 	ldw	r3,0(r2)
  81688c:	e0bff817 	ldw	r2,-32(fp)
  816890:	100491fa 	slli	r2,r2,7
  816894:	1885883a 	add	r2,r3,r2
  816898:	e0bff515 	stw	r2,-44(fp)
  81689c:	e03ff215 	stw	zero,-56(fp)
  8168a0:	00000f06 	br	8168e0 <consume_data+0x1f8>
  8168a4:	e0fff017 	ldw	r3,-64(fp)
  8168a8:	18800044 	addi	r2,r3,1
  8168ac:	e0bff015 	stw	r2,-64(fp)
  8168b0:	e0bff517 	ldw	r2,-44(fp)
  8168b4:	11002004 	addi	r4,r2,128
  8168b8:	e13ff515 	stw	r4,-44(fp)
  8168bc:	e13ff617 	ldw	r4,-40(fp)
  8168c0:	18c00204 	addi	r3,r3,8
  8168c4:	18c7883a 	add	r3,r3,r3
  8168c8:	18c7883a 	add	r3,r3,r3
  8168cc:	20c7883a 	add	r3,r4,r3
  8168d0:	18800015 	stw	r2,0(r3)
  8168d4:	e0bff217 	ldw	r2,-56(fp)
  8168d8:	10800044 	addi	r2,r2,1
  8168dc:	e0bff215 	stw	r2,-56(fp)
  8168e0:	e0bff717 	ldw	r2,-36(fp)
  8168e4:	10800e17 	ldw	r2,56(r2)
  8168e8:	e0fff217 	ldw	r3,-56(fp)
  8168ec:	18bfed16 	blt	r3,r2,8168a4 <__alt_mem_epcs_flash_controller_0+0xff80d8a4>
  8168f0:	e0bff317 	ldw	r2,-52(fp)
  8168f4:	10800044 	addi	r2,r2,1
  8168f8:	e0bff315 	stw	r2,-52(fp)
  8168fc:	e0bff717 	ldw	r2,-36(fp)
  816900:	10800f17 	ldw	r2,60(r2)
  816904:	e0fff317 	ldw	r3,-52(fp)
  816908:	18bfd216 	blt	r3,r2,816854 <__alt_mem_epcs_flash_controller_0+0xff80d854>
  81690c:	e0bff117 	ldw	r2,-60(fp)
  816910:	10800044 	addi	r2,r2,1
  816914:	e0bff115 	stw	r2,-60(fp)
  816918:	e0bffd17 	ldw	r2,-12(fp)
  81691c:	10805517 	ldw	r2,340(r2)
  816920:	e0fff117 	ldw	r3,-60(fp)
  816924:	18bfbb16 	blt	r3,r2,816814 <__alt_mem_epcs_flash_controller_0+0xff80d814>
  816928:	e0bffd17 	ldw	r2,-12(fp)
  81692c:	10807517 	ldw	r2,468(r2)
  816930:	10800117 	ldw	r2,4(r2)
  816934:	e0fff617 	ldw	r3,-40(fp)
  816938:	18c00804 	addi	r3,r3,32
  81693c:	180b883a 	mov	r5,r3
  816940:	e13ffd17 	ldw	r4,-12(fp)
  816944:	103ee83a 	callr	r2
  816948:	1000081e 	bne	r2,zero,81696c <consume_data+0x284>
  81694c:	e0bff617 	ldw	r2,-40(fp)
  816950:	e0fff417 	ldw	r3,-48(fp)
  816954:	10c00615 	stw	r3,24(r2)
  816958:	e0bff617 	ldw	r2,-40(fp)
  81695c:	e0ffef17 	ldw	r3,-68(fp)
  816960:	10c00515 	stw	r3,20(r2)
  816964:	0005883a 	mov	r2,zero
  816968:	00002406 	br	8169fc <consume_data+0x314>
  81696c:	e0bfef17 	ldw	r2,-68(fp)
  816970:	10800044 	addi	r2,r2,1
  816974:	e0bfef15 	stw	r2,-68(fp)
  816978:	e0bffd17 	ldw	r2,-12(fp)
  81697c:	10805a17 	ldw	r2,360(r2)
  816980:	e0ffef17 	ldw	r3,-68(fp)
  816984:	18bfa036 	bltu	r3,r2,816808 <__alt_mem_epcs_flash_controller_0+0xff80d808>
  816988:	e0bff617 	ldw	r2,-40(fp)
  81698c:	10000515 	stw	zero,20(r2)
  816990:	e0bff417 	ldw	r2,-48(fp)
  816994:	10800044 	addi	r2,r2,1
  816998:	e0bff415 	stw	r2,-48(fp)
  81699c:	e0bff617 	ldw	r2,-40(fp)
  8169a0:	10800717 	ldw	r2,28(r2)
  8169a4:	e0fff417 	ldw	r3,-48(fp)
  8169a8:	18bf9316 	blt	r3,r2,8167f8 <__alt_mem_epcs_flash_controller_0+0xff80d7f8>
  8169ac:	e0bffd17 	ldw	r2,-12(fp)
  8169b0:	10802517 	ldw	r2,148(r2)
  8169b4:	10c00044 	addi	r3,r2,1
  8169b8:	e0bffd17 	ldw	r2,-12(fp)
  8169bc:	10c02515 	stw	r3,148(r2)
  8169c0:	e0bffd17 	ldw	r2,-12(fp)
  8169c4:	10c02517 	ldw	r3,148(r2)
  8169c8:	e0bffd17 	ldw	r2,-12(fp)
  8169cc:	10805317 	ldw	r2,332(r2)
  8169d0:	1880042e 	bgeu	r3,r2,8169e4 <consume_data+0x2fc>
  8169d4:	e13ffd17 	ldw	r4,-12(fp)
  8169d8:	08161b00 	call	8161b0 <start_iMCU_row>
  8169dc:	008000c4 	movi	r2,3
  8169e0:	00000606 	br	8169fc <consume_data+0x314>
  8169e4:	e0bffd17 	ldw	r2,-12(fp)
  8169e8:	10807317 	ldw	r2,460(r2)
  8169ec:	10800317 	ldw	r2,12(r2)
  8169f0:	e13ffd17 	ldw	r4,-12(fp)
  8169f4:	103ee83a 	callr	r2
  8169f8:	00800104 	movi	r2,4
  8169fc:	e6fffe04 	addi	sp,fp,-8
  816a00:	dfc00317 	ldw	ra,12(sp)
  816a04:	df000217 	ldw	fp,8(sp)
  816a08:	dc400117 	ldw	r17,4(sp)
  816a0c:	dc000017 	ldw	r16,0(sp)
  816a10:	dec00404 	addi	sp,sp,16
  816a14:	f800283a 	ret

00816a18 <decompress_data>:
  816a18:	deffed04 	addi	sp,sp,-76
  816a1c:	dfc01215 	stw	ra,72(sp)
  816a20:	df001115 	stw	fp,68(sp)
  816a24:	dc401015 	stw	r17,64(sp)
  816a28:	dc000f15 	stw	r16,60(sp)
  816a2c:	df001104 	addi	fp,sp,68
  816a30:	e13ffc15 	stw	r4,-16(fp)
  816a34:	e17ffd15 	stw	r5,-12(fp)
  816a38:	e0bffc17 	ldw	r2,-16(fp)
  816a3c:	10807117 	ldw	r2,452(r2)
  816a40:	e0bff815 	stw	r2,-32(fp)
  816a44:	e0bffc17 	ldw	r2,-16(fp)
  816a48:	10805317 	ldw	r2,332(r2)
  816a4c:	10bfffc4 	addi	r2,r2,-1
  816a50:	e0bff915 	stw	r2,-28(fp)
  816a54:	00000806 	br	816a78 <decompress_data+0x60>
  816a58:	e0bffc17 	ldw	r2,-16(fp)
  816a5c:	10807317 	ldw	r2,460(r2)
  816a60:	10800017 	ldw	r2,0(r2)
  816a64:	e13ffc17 	ldw	r4,-16(fp)
  816a68:	103ee83a 	callr	r2
  816a6c:	1000021e 	bne	r2,zero,816a78 <decompress_data+0x60>
  816a70:	0005883a 	mov	r2,zero
  816a74:	0000a406 	br	816d08 <decompress_data+0x2f0>
  816a78:	e0bffc17 	ldw	r2,-16(fp)
  816a7c:	10c02417 	ldw	r3,144(r2)
  816a80:	e0bffc17 	ldw	r2,-16(fp)
  816a84:	10802617 	ldw	r2,152(r2)
  816a88:	18bff316 	blt	r3,r2,816a58 <__alt_mem_epcs_flash_controller_0+0xff80da58>
  816a8c:	e0bffc17 	ldw	r2,-16(fp)
  816a90:	10c02417 	ldw	r3,144(r2)
  816a94:	e0bffc17 	ldw	r2,-16(fp)
  816a98:	10802617 	ldw	r2,152(r2)
  816a9c:	1880051e 	bne	r3,r2,816ab4 <decompress_data+0x9c>
  816aa0:	e0bffc17 	ldw	r2,-16(fp)
  816aa4:	10802517 	ldw	r2,148(r2)
  816aa8:	e0fffc17 	ldw	r3,-16(fp)
  816aac:	18c02717 	ldw	r3,156(r3)
  816ab0:	18bfe92e 	bgeu	r3,r2,816a58 <__alt_mem_epcs_flash_controller_0+0xff80da58>
  816ab4:	e03ff115 	stw	zero,-60(fp)
  816ab8:	e0bffc17 	ldw	r2,-16(fp)
  816abc:	10803617 	ldw	r2,216(r2)
  816ac0:	e0bff715 	stw	r2,-36(fp)
  816ac4:	00007f06 	br	816cc4 <decompress_data+0x2ac>
  816ac8:	e0bff717 	ldw	r2,-36(fp)
  816acc:	10800d17 	ldw	r2,52(r2)
  816ad0:	10007526 	beq	r2,zero,816ca8 <decompress_data+0x290>
  816ad4:	e0bffc17 	ldw	r2,-16(fp)
  816ad8:	10800117 	ldw	r2,4(r2)
  816adc:	14000817 	ldw	r16,32(r2)
  816ae0:	e0fff817 	ldw	r3,-32(fp)
  816ae4:	e0bff117 	ldw	r2,-60(fp)
  816ae8:	10800484 	addi	r2,r2,18
  816aec:	1085883a 	add	r2,r2,r2
  816af0:	1085883a 	add	r2,r2,r2
  816af4:	1885883a 	add	r2,r3,r2
  816af8:	14400017 	ldw	r17,0(r2)
  816afc:	e0bffc17 	ldw	r2,-16(fp)
  816b00:	10c02717 	ldw	r3,156(r2)
  816b04:	e0bff717 	ldw	r2,-36(fp)
  816b08:	10800317 	ldw	r2,12(r2)
  816b0c:	100b883a 	mov	r5,r2
  816b10:	1809883a 	mov	r4,r3
  816b14:	08305040 	call	830504 <__mulsi3>
  816b18:	1007883a 	mov	r3,r2
  816b1c:	e0bff717 	ldw	r2,-36(fp)
  816b20:	10800317 	ldw	r2,12(r2)
  816b24:	d8000015 	stw	zero,0(sp)
  816b28:	100f883a 	mov	r7,r2
  816b2c:	180d883a 	mov	r6,r3
  816b30:	880b883a 	mov	r5,r17
  816b34:	e13ffc17 	ldw	r4,-16(fp)
  816b38:	803ee83a 	callr	r16
  816b3c:	e0bffa15 	stw	r2,-24(fp)
  816b40:	e0bffc17 	ldw	r2,-16(fp)
  816b44:	10c02717 	ldw	r3,156(r2)
  816b48:	e0bff917 	ldw	r2,-28(fp)
  816b4c:	1880042e 	bgeu	r3,r2,816b60 <decompress_data+0x148>
  816b50:	e0bff717 	ldw	r2,-36(fp)
  816b54:	10800317 	ldw	r2,12(r2)
  816b58:	e0bff315 	stw	r2,-52(fp)
  816b5c:	00000d06 	br	816b94 <decompress_data+0x17c>
  816b60:	e0bff717 	ldw	r2,-36(fp)
  816b64:	10c00817 	ldw	r3,32(r2)
  816b68:	e0bff717 	ldw	r2,-36(fp)
  816b6c:	10800317 	ldw	r2,12(r2)
  816b70:	100b883a 	mov	r5,r2
  816b74:	1809883a 	mov	r4,r3
  816b78:	08304ac0 	call	8304ac <__umodsi3>
  816b7c:	e0bff315 	stw	r2,-52(fp)
  816b80:	e0bff317 	ldw	r2,-52(fp)
  816b84:	1000031e 	bne	r2,zero,816b94 <decompress_data+0x17c>
  816b88:	e0bff717 	ldw	r2,-36(fp)
  816b8c:	10800317 	ldw	r2,12(r2)
  816b90:	e0bff315 	stw	r2,-52(fp)
  816b94:	e0bffc17 	ldw	r2,-16(fp)
  816b98:	10c07617 	ldw	r3,472(r2)
  816b9c:	e0bff117 	ldw	r2,-60(fp)
  816ba0:	10800044 	addi	r2,r2,1
  816ba4:	1085883a 	add	r2,r2,r2
  816ba8:	1085883a 	add	r2,r2,r2
  816bac:	1885883a 	add	r2,r3,r2
  816bb0:	10800017 	ldw	r2,0(r2)
  816bb4:	e0bffb15 	stw	r2,-20(fp)
  816bb8:	e0bff117 	ldw	r2,-60(fp)
  816bbc:	1085883a 	add	r2,r2,r2
  816bc0:	1085883a 	add	r2,r2,r2
  816bc4:	1007883a 	mov	r3,r2
  816bc8:	e0bffd17 	ldw	r2,-12(fp)
  816bcc:	10c5883a 	add	r2,r2,r3
  816bd0:	10800017 	ldw	r2,0(r2)
  816bd4:	e0bff515 	stw	r2,-44(fp)
  816bd8:	e03ff215 	stw	zero,-56(fp)
  816bdc:	00002e06 	br	816c98 <decompress_data+0x280>
  816be0:	e0bff217 	ldw	r2,-56(fp)
  816be4:	1085883a 	add	r2,r2,r2
  816be8:	1085883a 	add	r2,r2,r2
  816bec:	1007883a 	mov	r3,r2
  816bf0:	e0bffa17 	ldw	r2,-24(fp)
  816bf4:	10c5883a 	add	r2,r2,r3
  816bf8:	10800017 	ldw	r2,0(r2)
  816bfc:	e0bff415 	stw	r2,-48(fp)
  816c00:	e03ff615 	stw	zero,-40(fp)
  816c04:	e03ff015 	stw	zero,-64(fp)
  816c08:	00001406 	br	816c5c <decompress_data+0x244>
  816c0c:	e0bff617 	ldw	r2,-40(fp)
  816c10:	d8800015 	stw	r2,0(sp)
  816c14:	e0bffb17 	ldw	r2,-20(fp)
  816c18:	e1fff517 	ldw	r7,-44(fp)
  816c1c:	e1bff417 	ldw	r6,-48(fp)
  816c20:	e17ff717 	ldw	r5,-36(fp)
  816c24:	e13ffc17 	ldw	r4,-16(fp)
  816c28:	103ee83a 	callr	r2
  816c2c:	e0bff417 	ldw	r2,-48(fp)
  816c30:	10802004 	addi	r2,r2,128
  816c34:	e0bff415 	stw	r2,-48(fp)
  816c38:	e0bff717 	ldw	r2,-36(fp)
  816c3c:	10800917 	ldw	r2,36(r2)
  816c40:	1007883a 	mov	r3,r2
  816c44:	e0bff617 	ldw	r2,-40(fp)
  816c48:	10c5883a 	add	r2,r2,r3
  816c4c:	e0bff615 	stw	r2,-40(fp)
  816c50:	e0bff017 	ldw	r2,-64(fp)
  816c54:	10800044 	addi	r2,r2,1
  816c58:	e0bff015 	stw	r2,-64(fp)
  816c5c:	e0bff717 	ldw	r2,-36(fp)
  816c60:	10800717 	ldw	r2,28(r2)
  816c64:	e0fff017 	ldw	r3,-64(fp)
  816c68:	18bfe836 	bltu	r3,r2,816c0c <__alt_mem_epcs_flash_controller_0+0xff80dc0c>
  816c6c:	e0bff717 	ldw	r2,-36(fp)
  816c70:	10800a17 	ldw	r2,40(r2)
  816c74:	1085883a 	add	r2,r2,r2
  816c78:	1085883a 	add	r2,r2,r2
  816c7c:	1007883a 	mov	r3,r2
  816c80:	e0bff517 	ldw	r2,-44(fp)
  816c84:	10c5883a 	add	r2,r2,r3
  816c88:	e0bff515 	stw	r2,-44(fp)
  816c8c:	e0bff217 	ldw	r2,-56(fp)
  816c90:	10800044 	addi	r2,r2,1
  816c94:	e0bff215 	stw	r2,-56(fp)
  816c98:	e0fff217 	ldw	r3,-56(fp)
  816c9c:	e0bff317 	ldw	r2,-52(fp)
  816ca0:	18bfcf16 	blt	r3,r2,816be0 <__alt_mem_epcs_flash_controller_0+0xff80dbe0>
  816ca4:	00000106 	br	816cac <decompress_data+0x294>
  816ca8:	0001883a 	nop
  816cac:	e0bff117 	ldw	r2,-60(fp)
  816cb0:	10800044 	addi	r2,r2,1
  816cb4:	e0bff115 	stw	r2,-60(fp)
  816cb8:	e0bff717 	ldw	r2,-36(fp)
  816cbc:	10801604 	addi	r2,r2,88
  816cc0:	e0bff715 	stw	r2,-36(fp)
  816cc4:	e0bffc17 	ldw	r2,-16(fp)
  816cc8:	10800917 	ldw	r2,36(r2)
  816ccc:	e0fff117 	ldw	r3,-60(fp)
  816cd0:	18bf7d16 	blt	r3,r2,816ac8 <__alt_mem_epcs_flash_controller_0+0xff80dac8>
  816cd4:	e0bffc17 	ldw	r2,-16(fp)
  816cd8:	10802717 	ldw	r2,156(r2)
  816cdc:	10c00044 	addi	r3,r2,1
  816ce0:	e0bffc17 	ldw	r2,-16(fp)
  816ce4:	10c02715 	stw	r3,156(r2)
  816ce8:	e0bffc17 	ldw	r2,-16(fp)
  816cec:	10c02717 	ldw	r3,156(r2)
  816cf0:	e0bffc17 	ldw	r2,-16(fp)
  816cf4:	10805317 	ldw	r2,332(r2)
  816cf8:	1880022e 	bgeu	r3,r2,816d04 <decompress_data+0x2ec>
  816cfc:	008000c4 	movi	r2,3
  816d00:	00000106 	br	816d08 <decompress_data+0x2f0>
  816d04:	00800104 	movi	r2,4
  816d08:	e6fffe04 	addi	sp,fp,-8
  816d0c:	dfc00317 	ldw	ra,12(sp)
  816d10:	df000217 	ldw	fp,8(sp)
  816d14:	dc400117 	ldw	r17,4(sp)
  816d18:	dc000017 	ldw	r16,0(sp)
  816d1c:	dec00404 	addi	sp,sp,16
  816d20:	f800283a 	ret

00816d24 <smoothing_ok>:
  816d24:	defff404 	addi	sp,sp,-48
  816d28:	dfc00b15 	stw	ra,44(sp)
  816d2c:	df000a15 	stw	fp,40(sp)
  816d30:	dc000915 	stw	r16,36(sp)
  816d34:	df000a04 	addi	fp,sp,40
  816d38:	e13ffe15 	stw	r4,-8(fp)
  816d3c:	e0bffe17 	ldw	r2,-8(fp)
  816d40:	10807117 	ldw	r2,452(r2)
  816d44:	e0bffb15 	stw	r2,-20(fp)
  816d48:	e03ff615 	stw	zero,-40(fp)
  816d4c:	e0bffe17 	ldw	r2,-8(fp)
  816d50:	10803817 	ldw	r2,224(r2)
  816d54:	10000326 	beq	r2,zero,816d64 <smoothing_ok+0x40>
  816d58:	e0bffe17 	ldw	r2,-8(fp)
  816d5c:	10802817 	ldw	r2,160(r2)
  816d60:	1000021e 	bne	r2,zero,816d6c <smoothing_ok+0x48>
  816d64:	0005883a 	mov	r2,zero
  816d68:	00007506 	br	816f40 <smoothing_ok+0x21c>
  816d6c:	e0bffb17 	ldw	r2,-20(fp)
  816d70:	10801c17 	ldw	r2,112(r2)
  816d74:	10000f1e 	bne	r2,zero,816db4 <smoothing_ok+0x90>
  816d78:	e0bffe17 	ldw	r2,-8(fp)
  816d7c:	10800117 	ldw	r2,4(r2)
  816d80:	14000017 	ldw	r16,0(r2)
  816d84:	e0bffe17 	ldw	r2,-8(fp)
  816d88:	10800917 	ldw	r2,36(r2)
  816d8c:	01400604 	movi	r5,24
  816d90:	1009883a 	mov	r4,r2
  816d94:	08305040 	call	830504 <__mulsi3>
  816d98:	100d883a 	mov	r6,r2
  816d9c:	01400044 	movi	r5,1
  816da0:	e13ffe17 	ldw	r4,-8(fp)
  816da4:	803ee83a 	callr	r16
  816da8:	1007883a 	mov	r3,r2
  816dac:	e0bffb17 	ldw	r2,-20(fp)
  816db0:	10c01c15 	stw	r3,112(r2)
  816db4:	e0bffb17 	ldw	r2,-20(fp)
  816db8:	10801c17 	ldw	r2,112(r2)
  816dbc:	e0bffa15 	stw	r2,-24(fp)
  816dc0:	e03ff715 	stw	zero,-36(fp)
  816dc4:	e0bffe17 	ldw	r2,-8(fp)
  816dc8:	10803617 	ldw	r2,216(r2)
  816dcc:	e0bff915 	stw	r2,-28(fp)
  816dd0:	00005606 	br	816f2c <smoothing_ok+0x208>
  816dd4:	e0bff917 	ldw	r2,-28(fp)
  816dd8:	10801417 	ldw	r2,80(r2)
  816ddc:	e0bffc15 	stw	r2,-16(fp)
  816de0:	e0bffc17 	ldw	r2,-16(fp)
  816de4:	1000021e 	bne	r2,zero,816df0 <smoothing_ok+0xcc>
  816de8:	0005883a 	mov	r2,zero
  816dec:	00005406 	br	816f40 <smoothing_ok+0x21c>
  816df0:	e0bffc17 	ldw	r2,-16(fp)
  816df4:	1080000b 	ldhu	r2,0(r2)
  816df8:	10bfffcc 	andi	r2,r2,65535
  816dfc:	10001426 	beq	r2,zero,816e50 <smoothing_ok+0x12c>
  816e00:	e0bffc17 	ldw	r2,-16(fp)
  816e04:	1080008b 	ldhu	r2,2(r2)
  816e08:	10bfffcc 	andi	r2,r2,65535
  816e0c:	10001026 	beq	r2,zero,816e50 <smoothing_ok+0x12c>
  816e10:	e0bffc17 	ldw	r2,-16(fp)
  816e14:	1080040b 	ldhu	r2,16(r2)
  816e18:	10bfffcc 	andi	r2,r2,65535
  816e1c:	10000c26 	beq	r2,zero,816e50 <smoothing_ok+0x12c>
  816e20:	e0bffc17 	ldw	r2,-16(fp)
  816e24:	1080080b 	ldhu	r2,32(r2)
  816e28:	10bfffcc 	andi	r2,r2,65535
  816e2c:	10000826 	beq	r2,zero,816e50 <smoothing_ok+0x12c>
  816e30:	e0bffc17 	ldw	r2,-16(fp)
  816e34:	1080048b 	ldhu	r2,18(r2)
  816e38:	10bfffcc 	andi	r2,r2,65535
  816e3c:	10000426 	beq	r2,zero,816e50 <smoothing_ok+0x12c>
  816e40:	e0bffc17 	ldw	r2,-16(fp)
  816e44:	1080010b 	ldhu	r2,4(r2)
  816e48:	10bfffcc 	andi	r2,r2,65535
  816e4c:	1000021e 	bne	r2,zero,816e58 <smoothing_ok+0x134>
  816e50:	0005883a 	mov	r2,zero
  816e54:	00003a06 	br	816f40 <smoothing_ok+0x21c>
  816e58:	e0bffe17 	ldw	r2,-8(fp)
  816e5c:	10c02817 	ldw	r3,160(r2)
  816e60:	e0bff717 	ldw	r2,-36(fp)
  816e64:	1004923a 	slli	r2,r2,8
  816e68:	1885883a 	add	r2,r3,r2
  816e6c:	e0bffd15 	stw	r2,-12(fp)
  816e70:	e0bffd17 	ldw	r2,-12(fp)
  816e74:	10800017 	ldw	r2,0(r2)
  816e78:	1000020e 	bge	r2,zero,816e84 <smoothing_ok+0x160>
  816e7c:	0005883a 	mov	r2,zero
  816e80:	00002f06 	br	816f40 <smoothing_ok+0x21c>
  816e84:	00800044 	movi	r2,1
  816e88:	e0bff815 	stw	r2,-32(fp)
  816e8c:	00001b06 	br	816efc <smoothing_ok+0x1d8>
  816e90:	e0bff817 	ldw	r2,-32(fp)
  816e94:	1085883a 	add	r2,r2,r2
  816e98:	1085883a 	add	r2,r2,r2
  816e9c:	1007883a 	mov	r3,r2
  816ea0:	e0bffa17 	ldw	r2,-24(fp)
  816ea4:	10c7883a 	add	r3,r2,r3
  816ea8:	e0bff817 	ldw	r2,-32(fp)
  816eac:	1085883a 	add	r2,r2,r2
  816eb0:	1085883a 	add	r2,r2,r2
  816eb4:	1009883a 	mov	r4,r2
  816eb8:	e0bffd17 	ldw	r2,-12(fp)
  816ebc:	1105883a 	add	r2,r2,r4
  816ec0:	10800017 	ldw	r2,0(r2)
  816ec4:	18800015 	stw	r2,0(r3)
  816ec8:	e0bff817 	ldw	r2,-32(fp)
  816ecc:	1085883a 	add	r2,r2,r2
  816ed0:	1085883a 	add	r2,r2,r2
  816ed4:	1007883a 	mov	r3,r2
  816ed8:	e0bffd17 	ldw	r2,-12(fp)
  816edc:	10c5883a 	add	r2,r2,r3
  816ee0:	10800017 	ldw	r2,0(r2)
  816ee4:	10000226 	beq	r2,zero,816ef0 <smoothing_ok+0x1cc>
  816ee8:	00800044 	movi	r2,1
  816eec:	e0bff615 	stw	r2,-40(fp)
  816ef0:	e0bff817 	ldw	r2,-32(fp)
  816ef4:	10800044 	addi	r2,r2,1
  816ef8:	e0bff815 	stw	r2,-32(fp)
  816efc:	e0bff817 	ldw	r2,-32(fp)
  816f00:	10800190 	cmplti	r2,r2,6
  816f04:	103fe21e 	bne	r2,zero,816e90 <__alt_mem_epcs_flash_controller_0+0xff80de90>
  816f08:	e0bffa17 	ldw	r2,-24(fp)
  816f0c:	10800604 	addi	r2,r2,24
  816f10:	e0bffa15 	stw	r2,-24(fp)
  816f14:	e0bff717 	ldw	r2,-36(fp)
  816f18:	10800044 	addi	r2,r2,1
  816f1c:	e0bff715 	stw	r2,-36(fp)
  816f20:	e0bff917 	ldw	r2,-28(fp)
  816f24:	10801604 	addi	r2,r2,88
  816f28:	e0bff915 	stw	r2,-28(fp)
  816f2c:	e0bffe17 	ldw	r2,-8(fp)
  816f30:	10800917 	ldw	r2,36(r2)
  816f34:	e0fff717 	ldw	r3,-36(fp)
  816f38:	18bfa616 	blt	r3,r2,816dd4 <__alt_mem_epcs_flash_controller_0+0xff80ddd4>
  816f3c:	e0bff617 	ldw	r2,-40(fp)
  816f40:	e6ffff04 	addi	sp,fp,-4
  816f44:	dfc00217 	ldw	ra,8(sp)
  816f48:	df000117 	ldw	fp,4(sp)
  816f4c:	dc000017 	ldw	r16,0(sp)
  816f50:	dec00304 	addi	sp,sp,12
  816f54:	f800283a 	ret

00816f58 <decompress_smooth_data>:
  816f58:	deffb204 	addi	sp,sp,-312
  816f5c:	dfc04d15 	stw	ra,308(sp)
  816f60:	df004c15 	stw	fp,304(sp)
  816f64:	dc404b15 	stw	r17,300(sp)
  816f68:	dc004a15 	stw	r16,296(sp)
  816f6c:	df004c04 	addi	fp,sp,304
  816f70:	e13ffc15 	stw	r4,-16(fp)
  816f74:	e17ffd15 	stw	r5,-12(fp)
  816f78:	e0bffc17 	ldw	r2,-16(fp)
  816f7c:	10807117 	ldw	r2,452(r2)
  816f80:	e0bfcd15 	stw	r2,-204(fp)
  816f84:	e0bffc17 	ldw	r2,-16(fp)
  816f88:	10805317 	ldw	r2,332(r2)
  816f8c:	10bfffc4 	addi	r2,r2,-1
  816f90:	e0bfce15 	stw	r2,-200(fp)
  816f94:	00001906 	br	816ffc <decompress_smooth_data+0xa4>
  816f98:	e0bffc17 	ldw	r2,-16(fp)
  816f9c:	10c02417 	ldw	r3,144(r2)
  816fa0:	e0bffc17 	ldw	r2,-16(fp)
  816fa4:	10802617 	ldw	r2,152(r2)
  816fa8:	18800c1e 	bne	r3,r2,816fdc <decompress_smooth_data+0x84>
  816fac:	e0bffc17 	ldw	r2,-16(fp)
  816fb0:	10806717 	ldw	r2,412(r2)
  816fb4:	1005003a 	cmpeq	r2,r2,zero
  816fb8:	10803fcc 	andi	r2,r2,255
  816fbc:	e0bfcf15 	stw	r2,-196(fp)
  816fc0:	e0bffc17 	ldw	r2,-16(fp)
  816fc4:	10802517 	ldw	r2,148(r2)
  816fc8:	e0fffc17 	ldw	r3,-16(fp)
  816fcc:	19002717 	ldw	r4,156(r3)
  816fd0:	e0ffcf17 	ldw	r3,-196(fp)
  816fd4:	20c7883a 	add	r3,r4,r3
  816fd8:	18801236 	bltu	r3,r2,817024 <decompress_smooth_data+0xcc>
  816fdc:	e0bffc17 	ldw	r2,-16(fp)
  816fe0:	10807317 	ldw	r2,460(r2)
  816fe4:	10800017 	ldw	r2,0(r2)
  816fe8:	e13ffc17 	ldw	r4,-16(fp)
  816fec:	103ee83a 	callr	r2
  816ff0:	1000021e 	bne	r2,zero,816ffc <decompress_smooth_data+0xa4>
  816ff4:	0005883a 	mov	r2,zero
  816ff8:	0002d706 	br	817b58 <decompress_smooth_data+0xc00>
  816ffc:	e0bffc17 	ldw	r2,-16(fp)
  817000:	10802417 	ldw	r2,144(r2)
  817004:	e0fffc17 	ldw	r3,-16(fp)
  817008:	18c02617 	ldw	r3,152(r3)
  81700c:	18800616 	blt	r3,r2,817028 <decompress_smooth_data+0xd0>
  817010:	e0bffc17 	ldw	r2,-16(fp)
  817014:	10807317 	ldw	r2,460(r2)
  817018:	10800517 	ldw	r2,20(r2)
  81701c:	103fde26 	beq	r2,zero,816f98 <__alt_mem_epcs_flash_controller_0+0xff80df98>
  817020:	00000106 	br	817028 <decompress_smooth_data+0xd0>
  817024:	0001883a 	nop
  817028:	e03fb615 	stw	zero,-296(fp)
  81702c:	e0bffc17 	ldw	r2,-16(fp)
  817030:	10803617 	ldw	r2,216(r2)
  817034:	e0bfc015 	stw	r2,-256(fp)
  817038:	0002b606 	br	817b14 <decompress_smooth_data+0xbbc>
  81703c:	e0bfc017 	ldw	r2,-256(fp)
  817040:	10800d17 	ldw	r2,52(r2)
  817044:	1002ac26 	beq	r2,zero,817af8 <decompress_smooth_data+0xba0>
  817048:	e0bffc17 	ldw	r2,-16(fp)
  81704c:	10c02717 	ldw	r3,156(r2)
  817050:	e0bfce17 	ldw	r2,-200(fp)
  817054:	1880082e 	bgeu	r3,r2,817078 <decompress_smooth_data+0x120>
  817058:	e0bfc017 	ldw	r2,-256(fp)
  81705c:	10800317 	ldw	r2,12(r2)
  817060:	e0bfb815 	stw	r2,-288(fp)
  817064:	e0bfb817 	ldw	r2,-288(fp)
  817068:	1085883a 	add	r2,r2,r2
  81706c:	e0bfb915 	stw	r2,-284(fp)
  817070:	e03fc215 	stw	zero,-248(fp)
  817074:	00001106 	br	8170bc <decompress_smooth_data+0x164>
  817078:	e0bfc017 	ldw	r2,-256(fp)
  81707c:	10c00817 	ldw	r3,32(r2)
  817080:	e0bfc017 	ldw	r2,-256(fp)
  817084:	10800317 	ldw	r2,12(r2)
  817088:	100b883a 	mov	r5,r2
  81708c:	1809883a 	mov	r4,r3
  817090:	08304ac0 	call	8304ac <__umodsi3>
  817094:	e0bfb815 	stw	r2,-288(fp)
  817098:	e0bfb817 	ldw	r2,-288(fp)
  81709c:	1000031e 	bne	r2,zero,8170ac <decompress_smooth_data+0x154>
  8170a0:	e0bfc017 	ldw	r2,-256(fp)
  8170a4:	10800317 	ldw	r2,12(r2)
  8170a8:	e0bfb815 	stw	r2,-288(fp)
  8170ac:	e0bfb817 	ldw	r2,-288(fp)
  8170b0:	e0bfb915 	stw	r2,-284(fp)
  8170b4:	00800044 	movi	r2,1
  8170b8:	e0bfc215 	stw	r2,-248(fp)
  8170bc:	e0bffc17 	ldw	r2,-16(fp)
  8170c0:	10802717 	ldw	r2,156(r2)
  8170c4:	10002a26 	beq	r2,zero,817170 <decompress_smooth_data+0x218>
  8170c8:	e0bfc017 	ldw	r2,-256(fp)
  8170cc:	10800317 	ldw	r2,12(r2)
  8170d0:	e0ffb917 	ldw	r3,-284(fp)
  8170d4:	1885883a 	add	r2,r3,r2
  8170d8:	e0bfb915 	stw	r2,-284(fp)
  8170dc:	e0bffc17 	ldw	r2,-16(fp)
  8170e0:	10800117 	ldw	r2,4(r2)
  8170e4:	14000817 	ldw	r16,32(r2)
  8170e8:	e0ffcd17 	ldw	r3,-204(fp)
  8170ec:	e0bfb617 	ldw	r2,-296(fp)
  8170f0:	10800484 	addi	r2,r2,18
  8170f4:	1085883a 	add	r2,r2,r2
  8170f8:	1085883a 	add	r2,r2,r2
  8170fc:	1885883a 	add	r2,r3,r2
  817100:	14400017 	ldw	r17,0(r2)
  817104:	e0bffc17 	ldw	r2,-16(fp)
  817108:	10802717 	ldw	r2,156(r2)
  81710c:	10ffffc4 	addi	r3,r2,-1
  817110:	e0bfc017 	ldw	r2,-256(fp)
  817114:	10800317 	ldw	r2,12(r2)
  817118:	100b883a 	mov	r5,r2
  81711c:	1809883a 	mov	r4,r3
  817120:	08305040 	call	830504 <__mulsi3>
  817124:	1007883a 	mov	r3,r2
  817128:	e0bfb917 	ldw	r2,-284(fp)
  81712c:	d8000015 	stw	zero,0(sp)
  817130:	100f883a 	mov	r7,r2
  817134:	180d883a 	mov	r6,r3
  817138:	880b883a 	mov	r5,r17
  81713c:	e13ffc17 	ldw	r4,-16(fp)
  817140:	803ee83a 	callr	r16
  817144:	e0bfba15 	stw	r2,-280(fp)
  817148:	e0bfc017 	ldw	r2,-256(fp)
  81714c:	10800317 	ldw	r2,12(r2)
  817150:	1085883a 	add	r2,r2,r2
  817154:	1085883a 	add	r2,r2,r2
  817158:	1007883a 	mov	r3,r2
  81715c:	e0bfba17 	ldw	r2,-280(fp)
  817160:	10c5883a 	add	r2,r2,r3
  817164:	e0bfba15 	stw	r2,-280(fp)
  817168:	e03fc115 	stw	zero,-252(fp)
  81716c:	00001406 	br	8171c0 <decompress_smooth_data+0x268>
  817170:	e0bffc17 	ldw	r2,-16(fp)
  817174:	10800117 	ldw	r2,4(r2)
  817178:	10c00817 	ldw	r3,32(r2)
  81717c:	e13fcd17 	ldw	r4,-204(fp)
  817180:	e0bfb617 	ldw	r2,-296(fp)
  817184:	10800484 	addi	r2,r2,18
  817188:	1085883a 	add	r2,r2,r2
  81718c:	1085883a 	add	r2,r2,r2
  817190:	2085883a 	add	r2,r4,r2
  817194:	10800017 	ldw	r2,0(r2)
  817198:	e13fb917 	ldw	r4,-284(fp)
  81719c:	d8000015 	stw	zero,0(sp)
  8171a0:	200f883a 	mov	r7,r4
  8171a4:	000d883a 	mov	r6,zero
  8171a8:	100b883a 	mov	r5,r2
  8171ac:	e13ffc17 	ldw	r4,-16(fp)
  8171b0:	183ee83a 	callr	r3
  8171b4:	e0bfba15 	stw	r2,-280(fp)
  8171b8:	00800044 	movi	r2,1
  8171bc:	e0bfc115 	stw	r2,-252(fp)
  8171c0:	e0bfcd17 	ldw	r2,-204(fp)
  8171c4:	14001c17 	ldw	r16,112(r2)
  8171c8:	01400604 	movi	r5,24
  8171cc:	e13fb617 	ldw	r4,-296(fp)
  8171d0:	08305040 	call	830504 <__mulsi3>
  8171d4:	8085883a 	add	r2,r16,r2
  8171d8:	e0bfd015 	stw	r2,-192(fp)
  8171dc:	e0bfc017 	ldw	r2,-256(fp)
  8171e0:	10801417 	ldw	r2,80(r2)
  8171e4:	e0bfd115 	stw	r2,-188(fp)
  8171e8:	e0bfd117 	ldw	r2,-188(fp)
  8171ec:	1080000b 	ldhu	r2,0(r2)
  8171f0:	10bfffcc 	andi	r2,r2,65535
  8171f4:	e0bfd215 	stw	r2,-184(fp)
  8171f8:	e0bfd117 	ldw	r2,-188(fp)
  8171fc:	1080008b 	ldhu	r2,2(r2)
  817200:	10bfffcc 	andi	r2,r2,65535
  817204:	e0bfd315 	stw	r2,-180(fp)
  817208:	e0bfd117 	ldw	r2,-188(fp)
  81720c:	1080040b 	ldhu	r2,16(r2)
  817210:	10bfffcc 	andi	r2,r2,65535
  817214:	e0bfd415 	stw	r2,-176(fp)
  817218:	e0bfd117 	ldw	r2,-188(fp)
  81721c:	1080080b 	ldhu	r2,32(r2)
  817220:	10bfffcc 	andi	r2,r2,65535
  817224:	e0bfd515 	stw	r2,-172(fp)
  817228:	e0bfd117 	ldw	r2,-188(fp)
  81722c:	1080048b 	ldhu	r2,18(r2)
  817230:	10bfffcc 	andi	r2,r2,65535
  817234:	e0bfd615 	stw	r2,-168(fp)
  817238:	e0bfd117 	ldw	r2,-188(fp)
  81723c:	1080010b 	ldhu	r2,4(r2)
  817240:	10bfffcc 	andi	r2,r2,65535
  817244:	e0bfd715 	stw	r2,-164(fp)
  817248:	e0bffc17 	ldw	r2,-16(fp)
  81724c:	10c07617 	ldw	r3,472(r2)
  817250:	e0bfb617 	ldw	r2,-296(fp)
  817254:	10800044 	addi	r2,r2,1
  817258:	1085883a 	add	r2,r2,r2
  81725c:	1085883a 	add	r2,r2,r2
  817260:	1885883a 	add	r2,r3,r2
  817264:	10800017 	ldw	r2,0(r2)
  817268:	e0bfd815 	stw	r2,-160(fp)
  81726c:	e0bfb617 	ldw	r2,-296(fp)
  817270:	1085883a 	add	r2,r2,r2
  817274:	1085883a 	add	r2,r2,r2
  817278:	1007883a 	mov	r3,r2
  81727c:	e0bffd17 	ldw	r2,-12(fp)
  817280:	10c5883a 	add	r2,r2,r3
  817284:	10800017 	ldw	r2,0(r2)
  817288:	e0bfbe15 	stw	r2,-264(fp)
  81728c:	e03fb715 	stw	zero,-292(fp)
  817290:	00021506 	br	817ae8 <decompress_smooth_data+0xb90>
  817294:	e0bfb717 	ldw	r2,-292(fp)
  817298:	1085883a 	add	r2,r2,r2
  81729c:	1085883a 	add	r2,r2,r2
  8172a0:	1007883a 	mov	r3,r2
  8172a4:	e0bfba17 	ldw	r2,-280(fp)
  8172a8:	10c5883a 	add	r2,r2,r3
  8172ac:	10800017 	ldw	r2,0(r2)
  8172b0:	e0bfbb15 	stw	r2,-276(fp)
  8172b4:	e0bfc117 	ldw	r2,-252(fp)
  8172b8:	10000526 	beq	r2,zero,8172d0 <decompress_smooth_data+0x378>
  8172bc:	e0bfb717 	ldw	r2,-292(fp)
  8172c0:	1000031e 	bne	r2,zero,8172d0 <decompress_smooth_data+0x378>
  8172c4:	e0bfbb17 	ldw	r2,-276(fp)
  8172c8:	e0bfbc15 	stw	r2,-272(fp)
  8172cc:	00000b06 	br	8172fc <decompress_smooth_data+0x3a4>
  8172d0:	e0ffb717 	ldw	r3,-292(fp)
  8172d4:	00900034 	movhi	r2,16384
  8172d8:	10bfffc4 	addi	r2,r2,-1
  8172dc:	1885883a 	add	r2,r3,r2
  8172e0:	1085883a 	add	r2,r2,r2
  8172e4:	1085883a 	add	r2,r2,r2
  8172e8:	1007883a 	mov	r3,r2
  8172ec:	e0bfba17 	ldw	r2,-280(fp)
  8172f0:	10c5883a 	add	r2,r2,r3
  8172f4:	10800017 	ldw	r2,0(r2)
  8172f8:	e0bfbc15 	stw	r2,-272(fp)
  8172fc:	e0bfc217 	ldw	r2,-248(fp)
  817300:	10000726 	beq	r2,zero,817320 <decompress_smooth_data+0x3c8>
  817304:	e0bfb817 	ldw	r2,-288(fp)
  817308:	10ffffc4 	addi	r3,r2,-1
  81730c:	e0bfb717 	ldw	r2,-292(fp)
  817310:	1880031e 	bne	r3,r2,817320 <decompress_smooth_data+0x3c8>
  817314:	e0bfbb17 	ldw	r2,-276(fp)
  817318:	e0bfbd15 	stw	r2,-268(fp)
  81731c:	00000906 	br	817344 <decompress_smooth_data+0x3ec>
  817320:	e0bfb717 	ldw	r2,-292(fp)
  817324:	10800044 	addi	r2,r2,1
  817328:	1085883a 	add	r2,r2,r2
  81732c:	1085883a 	add	r2,r2,r2
  817330:	1007883a 	mov	r3,r2
  817334:	e0bfba17 	ldw	r2,-280(fp)
  817338:	10c5883a 	add	r2,r2,r3
  81733c:	10800017 	ldw	r2,0(r2)
  817340:	e0bfbd15 	stw	r2,-268(fp)
  817344:	e0bfbc17 	ldw	r2,-272(fp)
  817348:	1080000b 	ldhu	r2,0(r2)
  81734c:	10bfffcc 	andi	r2,r2,65535
  817350:	10a0001c 	xori	r2,r2,32768
  817354:	10a00004 	addi	r2,r2,-32768
  817358:	e0bfc515 	stw	r2,-236(fp)
  81735c:	e0bfc517 	ldw	r2,-236(fp)
  817360:	e0bfc415 	stw	r2,-240(fp)
  817364:	e0bfc417 	ldw	r2,-240(fp)
  817368:	e0bfc315 	stw	r2,-244(fp)
  81736c:	e0bfbb17 	ldw	r2,-276(fp)
  817370:	1080000b 	ldhu	r2,0(r2)
  817374:	10bfffcc 	andi	r2,r2,65535
  817378:	10a0001c 	xori	r2,r2,32768
  81737c:	10a00004 	addi	r2,r2,-32768
  817380:	e0bfc815 	stw	r2,-224(fp)
  817384:	e0bfc817 	ldw	r2,-224(fp)
  817388:	e0bfc715 	stw	r2,-228(fp)
  81738c:	e0bfc717 	ldw	r2,-228(fp)
  817390:	e0bfc615 	stw	r2,-232(fp)
  817394:	e0bfbd17 	ldw	r2,-268(fp)
  817398:	1080000b 	ldhu	r2,0(r2)
  81739c:	10bfffcc 	andi	r2,r2,65535
  8173a0:	10a0001c 	xori	r2,r2,32768
  8173a4:	10a00004 	addi	r2,r2,-32768
  8173a8:	e0bfcb15 	stw	r2,-212(fp)
  8173ac:	e0bfcb17 	ldw	r2,-212(fp)
  8173b0:	e0bfca15 	stw	r2,-216(fp)
  8173b4:	e0bfca17 	ldw	r2,-216(fp)
  8173b8:	e0bfc915 	stw	r2,-220(fp)
  8173bc:	e03fbf15 	stw	zero,-260(fp)
  8173c0:	e0bfc017 	ldw	r2,-256(fp)
  8173c4:	10800717 	ldw	r2,28(r2)
  8173c8:	10bfffc4 	addi	r2,r2,-1
  8173cc:	e0bfd915 	stw	r2,-156(fp)
  8173d0:	e03fb515 	stw	zero,-300(fp)
  8173d4:	0001b606 	br	817ab0 <decompress_smooth_data+0xb58>
  8173d8:	e0bfdc04 	addi	r2,fp,-144
  8173dc:	01800044 	movi	r6,1
  8173e0:	100b883a 	mov	r5,r2
  8173e4:	e13fbb17 	ldw	r4,-276(fp)
  8173e8:	08140200 	call	814020 <jcopy_block_row>
  8173ec:	e0ffb517 	ldw	r3,-300(fp)
  8173f0:	e0bfd917 	ldw	r2,-156(fp)
  8173f4:	1880152e 	bgeu	r3,r2,81744c <decompress_smooth_data+0x4f4>
  8173f8:	e0bfbc17 	ldw	r2,-272(fp)
  8173fc:	10802004 	addi	r2,r2,128
  817400:	1080000b 	ldhu	r2,0(r2)
  817404:	10bfffcc 	andi	r2,r2,65535
  817408:	10a0001c 	xori	r2,r2,32768
  81740c:	10a00004 	addi	r2,r2,-32768
  817410:	e0bfc515 	stw	r2,-236(fp)
  817414:	e0bfbb17 	ldw	r2,-276(fp)
  817418:	10802004 	addi	r2,r2,128
  81741c:	1080000b 	ldhu	r2,0(r2)
  817420:	10bfffcc 	andi	r2,r2,65535
  817424:	10a0001c 	xori	r2,r2,32768
  817428:	10a00004 	addi	r2,r2,-32768
  81742c:	e0bfc815 	stw	r2,-224(fp)
  817430:	e0bfbd17 	ldw	r2,-268(fp)
  817434:	10802004 	addi	r2,r2,128
  817438:	1080000b 	ldhu	r2,0(r2)
  81743c:	10bfffcc 	andi	r2,r2,65535
  817440:	10a0001c 	xori	r2,r2,32768
  817444:	10a00004 	addi	r2,r2,-32768
  817448:	e0bfcb15 	stw	r2,-212(fp)
  81744c:	e0bfd017 	ldw	r2,-192(fp)
  817450:	10800117 	ldw	r2,4(r2)
  817454:	e0bfda15 	stw	r2,-152(fp)
  817458:	e0bfda17 	ldw	r2,-152(fp)
  81745c:	10004326 	beq	r2,zero,81756c <decompress_smooth_data+0x614>
  817460:	e0bfdc8b 	ldhu	r2,-142(fp)
  817464:	10bfffcc 	andi	r2,r2,65535
  817468:	10a0001c 	xori	r2,r2,32768
  81746c:	10a00004 	addi	r2,r2,-32768
  817470:	10003e1e 	bne	r2,zero,81756c <decompress_smooth_data+0x614>
  817474:	01400904 	movi	r5,36
  817478:	e13fd217 	ldw	r4,-184(fp)
  81747c:	08305040 	call	830504 <__mulsi3>
  817480:	1009883a 	mov	r4,r2
  817484:	e0ffc617 	ldw	r3,-232(fp)
  817488:	e0bfc817 	ldw	r2,-224(fp)
  81748c:	1885c83a 	sub	r2,r3,r2
  817490:	100b883a 	mov	r5,r2
  817494:	08305040 	call	830504 <__mulsi3>
  817498:	e0bfdb15 	stw	r2,-148(fp)
  81749c:	e0bfdb17 	ldw	r2,-148(fp)
  8174a0:	10001716 	blt	r2,zero,817500 <decompress_smooth_data+0x5a8>
  8174a4:	e0bfd317 	ldw	r2,-180(fp)
  8174a8:	100691fa 	slli	r3,r2,7
  8174ac:	e0bfdb17 	ldw	r2,-148(fp)
  8174b0:	1887883a 	add	r3,r3,r2
  8174b4:	e0bfd317 	ldw	r2,-180(fp)
  8174b8:	1004923a 	slli	r2,r2,8
  8174bc:	100b883a 	mov	r5,r2
  8174c0:	1809883a 	mov	r4,r3
  8174c4:	08303500 	call	830350 <__divsi3>
  8174c8:	e0bfcc15 	stw	r2,-208(fp)
  8174cc:	e0bfda17 	ldw	r2,-152(fp)
  8174d0:	0080240e 	bge	zero,r2,817564 <decompress_smooth_data+0x60c>
  8174d4:	00c00044 	movi	r3,1
  8174d8:	e0bfda17 	ldw	r2,-152(fp)
  8174dc:	1884983a 	sll	r2,r3,r2
  8174e0:	e0ffcc17 	ldw	r3,-208(fp)
  8174e4:	18801f16 	blt	r3,r2,817564 <decompress_smooth_data+0x60c>
  8174e8:	00c00044 	movi	r3,1
  8174ec:	e0bfda17 	ldw	r2,-152(fp)
  8174f0:	1884983a 	sll	r2,r3,r2
  8174f4:	10bfffc4 	addi	r2,r2,-1
  8174f8:	e0bfcc15 	stw	r2,-208(fp)
  8174fc:	00001906 	br	817564 <decompress_smooth_data+0x60c>
  817500:	e0bfd317 	ldw	r2,-180(fp)
  817504:	100691fa 	slli	r3,r2,7
  817508:	e0bfdb17 	ldw	r2,-148(fp)
  81750c:	1887c83a 	sub	r3,r3,r2
  817510:	e0bfd317 	ldw	r2,-180(fp)
  817514:	1004923a 	slli	r2,r2,8
  817518:	100b883a 	mov	r5,r2
  81751c:	1809883a 	mov	r4,r3
  817520:	08303500 	call	830350 <__divsi3>
  817524:	e0bfcc15 	stw	r2,-208(fp)
  817528:	e0bfda17 	ldw	r2,-152(fp)
  81752c:	00800a0e 	bge	zero,r2,817558 <decompress_smooth_data+0x600>
  817530:	00c00044 	movi	r3,1
  817534:	e0bfda17 	ldw	r2,-152(fp)
  817538:	1884983a 	sll	r2,r3,r2
  81753c:	e0ffcc17 	ldw	r3,-208(fp)
  817540:	18800516 	blt	r3,r2,817558 <decompress_smooth_data+0x600>
  817544:	00c00044 	movi	r3,1
  817548:	e0bfda17 	ldw	r2,-152(fp)
  81754c:	1884983a 	sll	r2,r3,r2
  817550:	10bfffc4 	addi	r2,r2,-1
  817554:	e0bfcc15 	stw	r2,-208(fp)
  817558:	e0bfcc17 	ldw	r2,-208(fp)
  81755c:	0085c83a 	sub	r2,zero,r2
  817560:	e0bfcc15 	stw	r2,-208(fp)
  817564:	e0bfcc17 	ldw	r2,-208(fp)
  817568:	e0bfdc8d 	sth	r2,-142(fp)
  81756c:	e0bfd017 	ldw	r2,-192(fp)
  817570:	10800217 	ldw	r2,8(r2)
  817574:	e0bfda15 	stw	r2,-152(fp)
  817578:	e0bfda17 	ldw	r2,-152(fp)
  81757c:	10004326 	beq	r2,zero,81768c <decompress_smooth_data+0x734>
  817580:	e0bfe00b 	ldhu	r2,-128(fp)
  817584:	10bfffcc 	andi	r2,r2,65535
  817588:	10a0001c 	xori	r2,r2,32768
  81758c:	10a00004 	addi	r2,r2,-32768
  817590:	10003e1e 	bne	r2,zero,81768c <decompress_smooth_data+0x734>
  817594:	01400904 	movi	r5,36
  817598:	e13fd217 	ldw	r4,-184(fp)
  81759c:	08305040 	call	830504 <__mulsi3>
  8175a0:	1009883a 	mov	r4,r2
  8175a4:	e0ffc417 	ldw	r3,-240(fp)
  8175a8:	e0bfca17 	ldw	r2,-216(fp)
  8175ac:	1885c83a 	sub	r2,r3,r2
  8175b0:	100b883a 	mov	r5,r2
  8175b4:	08305040 	call	830504 <__mulsi3>
  8175b8:	e0bfdb15 	stw	r2,-148(fp)
  8175bc:	e0bfdb17 	ldw	r2,-148(fp)
  8175c0:	10001716 	blt	r2,zero,817620 <decompress_smooth_data+0x6c8>
  8175c4:	e0bfd417 	ldw	r2,-176(fp)
  8175c8:	100691fa 	slli	r3,r2,7
  8175cc:	e0bfdb17 	ldw	r2,-148(fp)
  8175d0:	1887883a 	add	r3,r3,r2
  8175d4:	e0bfd417 	ldw	r2,-176(fp)
  8175d8:	1004923a 	slli	r2,r2,8
  8175dc:	100b883a 	mov	r5,r2
  8175e0:	1809883a 	mov	r4,r3
  8175e4:	08303500 	call	830350 <__divsi3>
  8175e8:	e0bfcc15 	stw	r2,-208(fp)
  8175ec:	e0bfda17 	ldw	r2,-152(fp)
  8175f0:	0080240e 	bge	zero,r2,817684 <decompress_smooth_data+0x72c>
  8175f4:	00c00044 	movi	r3,1
  8175f8:	e0bfda17 	ldw	r2,-152(fp)
  8175fc:	1884983a 	sll	r2,r3,r2
  817600:	e0ffcc17 	ldw	r3,-208(fp)
  817604:	18801f16 	blt	r3,r2,817684 <decompress_smooth_data+0x72c>
  817608:	00c00044 	movi	r3,1
  81760c:	e0bfda17 	ldw	r2,-152(fp)
  817610:	1884983a 	sll	r2,r3,r2
  817614:	10bfffc4 	addi	r2,r2,-1
  817618:	e0bfcc15 	stw	r2,-208(fp)
  81761c:	00001906 	br	817684 <decompress_smooth_data+0x72c>
  817620:	e0bfd417 	ldw	r2,-176(fp)
  817624:	100691fa 	slli	r3,r2,7
  817628:	e0bfdb17 	ldw	r2,-148(fp)
  81762c:	1887c83a 	sub	r3,r3,r2
  817630:	e0bfd417 	ldw	r2,-176(fp)
  817634:	1004923a 	slli	r2,r2,8
  817638:	100b883a 	mov	r5,r2
  81763c:	1809883a 	mov	r4,r3
  817640:	08303500 	call	830350 <__divsi3>
  817644:	e0bfcc15 	stw	r2,-208(fp)
  817648:	e0bfda17 	ldw	r2,-152(fp)
  81764c:	00800a0e 	bge	zero,r2,817678 <decompress_smooth_data+0x720>
  817650:	00c00044 	movi	r3,1
  817654:	e0bfda17 	ldw	r2,-152(fp)
  817658:	1884983a 	sll	r2,r3,r2
  81765c:	e0ffcc17 	ldw	r3,-208(fp)
  817660:	18800516 	blt	r3,r2,817678 <decompress_smooth_data+0x720>
  817664:	00c00044 	movi	r3,1
  817668:	e0bfda17 	ldw	r2,-152(fp)
  81766c:	1884983a 	sll	r2,r3,r2
  817670:	10bfffc4 	addi	r2,r2,-1
  817674:	e0bfcc15 	stw	r2,-208(fp)
  817678:	e0bfcc17 	ldw	r2,-208(fp)
  81767c:	0085c83a 	sub	r2,zero,r2
  817680:	e0bfcc15 	stw	r2,-208(fp)
  817684:	e0bfcc17 	ldw	r2,-208(fp)
  817688:	e0bfe00d 	sth	r2,-128(fp)
  81768c:	e0bfd017 	ldw	r2,-192(fp)
  817690:	10800317 	ldw	r2,12(r2)
  817694:	e0bfda15 	stw	r2,-152(fp)
  817698:	e0bfda17 	ldw	r2,-152(fp)
  81769c:	10004626 	beq	r2,zero,8177b8 <decompress_smooth_data+0x860>
  8176a0:	e0bfe40b 	ldhu	r2,-112(fp)
  8176a4:	10bfffcc 	andi	r2,r2,65535
  8176a8:	10a0001c 	xori	r2,r2,32768
  8176ac:	10a00004 	addi	r2,r2,-32768
  8176b0:	1000411e 	bne	r2,zero,8177b8 <decompress_smooth_data+0x860>
  8176b4:	01400244 	movi	r5,9
  8176b8:	e13fd217 	ldw	r4,-184(fp)
  8176bc:	08305040 	call	830504 <__mulsi3>
  8176c0:	1009883a 	mov	r4,r2
  8176c4:	e0ffc417 	ldw	r3,-240(fp)
  8176c8:	e0bfca17 	ldw	r2,-216(fp)
  8176cc:	1887883a 	add	r3,r3,r2
  8176d0:	e0bfc717 	ldw	r2,-228(fp)
  8176d4:	1085883a 	add	r2,r2,r2
  8176d8:	1885c83a 	sub	r2,r3,r2
  8176dc:	100b883a 	mov	r5,r2
  8176e0:	08305040 	call	830504 <__mulsi3>
  8176e4:	e0bfdb15 	stw	r2,-148(fp)
  8176e8:	e0bfdb17 	ldw	r2,-148(fp)
  8176ec:	10001716 	blt	r2,zero,81774c <decompress_smooth_data+0x7f4>
  8176f0:	e0bfd517 	ldw	r2,-172(fp)
  8176f4:	100691fa 	slli	r3,r2,7
  8176f8:	e0bfdb17 	ldw	r2,-148(fp)
  8176fc:	1887883a 	add	r3,r3,r2
  817700:	e0bfd517 	ldw	r2,-172(fp)
  817704:	1004923a 	slli	r2,r2,8
  817708:	100b883a 	mov	r5,r2
  81770c:	1809883a 	mov	r4,r3
  817710:	08303500 	call	830350 <__divsi3>
  817714:	e0bfcc15 	stw	r2,-208(fp)
  817718:	e0bfda17 	ldw	r2,-152(fp)
  81771c:	0080240e 	bge	zero,r2,8177b0 <decompress_smooth_data+0x858>
  817720:	00c00044 	movi	r3,1
  817724:	e0bfda17 	ldw	r2,-152(fp)
  817728:	1884983a 	sll	r2,r3,r2
  81772c:	e0ffcc17 	ldw	r3,-208(fp)
  817730:	18801f16 	blt	r3,r2,8177b0 <decompress_smooth_data+0x858>
  817734:	00c00044 	movi	r3,1
  817738:	e0bfda17 	ldw	r2,-152(fp)
  81773c:	1884983a 	sll	r2,r3,r2
  817740:	10bfffc4 	addi	r2,r2,-1
  817744:	e0bfcc15 	stw	r2,-208(fp)
  817748:	00001906 	br	8177b0 <decompress_smooth_data+0x858>
  81774c:	e0bfd517 	ldw	r2,-172(fp)
  817750:	100691fa 	slli	r3,r2,7
  817754:	e0bfdb17 	ldw	r2,-148(fp)
  817758:	1887c83a 	sub	r3,r3,r2
  81775c:	e0bfd517 	ldw	r2,-172(fp)
  817760:	1004923a 	slli	r2,r2,8
  817764:	100b883a 	mov	r5,r2
  817768:	1809883a 	mov	r4,r3
  81776c:	08303500 	call	830350 <__divsi3>
  817770:	e0bfcc15 	stw	r2,-208(fp)
  817774:	e0bfda17 	ldw	r2,-152(fp)
  817778:	00800a0e 	bge	zero,r2,8177a4 <decompress_smooth_data+0x84c>
  81777c:	00c00044 	movi	r3,1
  817780:	e0bfda17 	ldw	r2,-152(fp)
  817784:	1884983a 	sll	r2,r3,r2
  817788:	e0ffcc17 	ldw	r3,-208(fp)
  81778c:	18800516 	blt	r3,r2,8177a4 <decompress_smooth_data+0x84c>
  817790:	00c00044 	movi	r3,1
  817794:	e0bfda17 	ldw	r2,-152(fp)
  817798:	1884983a 	sll	r2,r3,r2
  81779c:	10bfffc4 	addi	r2,r2,-1
  8177a0:	e0bfcc15 	stw	r2,-208(fp)
  8177a4:	e0bfcc17 	ldw	r2,-208(fp)
  8177a8:	0085c83a 	sub	r2,zero,r2
  8177ac:	e0bfcc15 	stw	r2,-208(fp)
  8177b0:	e0bfcc17 	ldw	r2,-208(fp)
  8177b4:	e0bfe40d 	sth	r2,-112(fp)
  8177b8:	e0bfd017 	ldw	r2,-192(fp)
  8177bc:	10800417 	ldw	r2,16(r2)
  8177c0:	e0bfda15 	stw	r2,-152(fp)
  8177c4:	e0bfda17 	ldw	r2,-152(fp)
  8177c8:	10004726 	beq	r2,zero,8178e8 <decompress_smooth_data+0x990>
  8177cc:	e0bfe08b 	ldhu	r2,-126(fp)
  8177d0:	10bfffcc 	andi	r2,r2,65535
  8177d4:	10a0001c 	xori	r2,r2,32768
  8177d8:	10a00004 	addi	r2,r2,-32768
  8177dc:	1000421e 	bne	r2,zero,8178e8 <decompress_smooth_data+0x990>
  8177e0:	01400144 	movi	r5,5
  8177e4:	e13fd217 	ldw	r4,-184(fp)
  8177e8:	08305040 	call	830504 <__mulsi3>
  8177ec:	1009883a 	mov	r4,r2
  8177f0:	e0ffc317 	ldw	r3,-244(fp)
  8177f4:	e0bfc517 	ldw	r2,-236(fp)
  8177f8:	1887c83a 	sub	r3,r3,r2
  8177fc:	e0bfc917 	ldw	r2,-220(fp)
  817800:	1887c83a 	sub	r3,r3,r2
  817804:	e0bfcb17 	ldw	r2,-212(fp)
  817808:	1885883a 	add	r2,r3,r2
  81780c:	100b883a 	mov	r5,r2
  817810:	08305040 	call	830504 <__mulsi3>
  817814:	e0bfdb15 	stw	r2,-148(fp)
  817818:	e0bfdb17 	ldw	r2,-148(fp)
  81781c:	10001716 	blt	r2,zero,81787c <decompress_smooth_data+0x924>
  817820:	e0bfd617 	ldw	r2,-168(fp)
  817824:	100691fa 	slli	r3,r2,7
  817828:	e0bfdb17 	ldw	r2,-148(fp)
  81782c:	1887883a 	add	r3,r3,r2
  817830:	e0bfd617 	ldw	r2,-168(fp)
  817834:	1004923a 	slli	r2,r2,8
  817838:	100b883a 	mov	r5,r2
  81783c:	1809883a 	mov	r4,r3
  817840:	08303500 	call	830350 <__divsi3>
  817844:	e0bfcc15 	stw	r2,-208(fp)
  817848:	e0bfda17 	ldw	r2,-152(fp)
  81784c:	0080240e 	bge	zero,r2,8178e0 <decompress_smooth_data+0x988>
  817850:	00c00044 	movi	r3,1
  817854:	e0bfda17 	ldw	r2,-152(fp)
  817858:	1884983a 	sll	r2,r3,r2
  81785c:	e0ffcc17 	ldw	r3,-208(fp)
  817860:	18801f16 	blt	r3,r2,8178e0 <decompress_smooth_data+0x988>
  817864:	00c00044 	movi	r3,1
  817868:	e0bfda17 	ldw	r2,-152(fp)
  81786c:	1884983a 	sll	r2,r3,r2
  817870:	10bfffc4 	addi	r2,r2,-1
  817874:	e0bfcc15 	stw	r2,-208(fp)
  817878:	00001906 	br	8178e0 <decompress_smooth_data+0x988>
  81787c:	e0bfd617 	ldw	r2,-168(fp)
  817880:	100691fa 	slli	r3,r2,7
  817884:	e0bfdb17 	ldw	r2,-148(fp)
  817888:	1887c83a 	sub	r3,r3,r2
  81788c:	e0bfd617 	ldw	r2,-168(fp)
  817890:	1004923a 	slli	r2,r2,8
  817894:	100b883a 	mov	r5,r2
  817898:	1809883a 	mov	r4,r3
  81789c:	08303500 	call	830350 <__divsi3>
  8178a0:	e0bfcc15 	stw	r2,-208(fp)
  8178a4:	e0bfda17 	ldw	r2,-152(fp)
  8178a8:	00800a0e 	bge	zero,r2,8178d4 <decompress_smooth_data+0x97c>
  8178ac:	00c00044 	movi	r3,1
  8178b0:	e0bfda17 	ldw	r2,-152(fp)
  8178b4:	1884983a 	sll	r2,r3,r2
  8178b8:	e0ffcc17 	ldw	r3,-208(fp)
  8178bc:	18800516 	blt	r3,r2,8178d4 <decompress_smooth_data+0x97c>
  8178c0:	00c00044 	movi	r3,1
  8178c4:	e0bfda17 	ldw	r2,-152(fp)
  8178c8:	1884983a 	sll	r2,r3,r2
  8178cc:	10bfffc4 	addi	r2,r2,-1
  8178d0:	e0bfcc15 	stw	r2,-208(fp)
  8178d4:	e0bfcc17 	ldw	r2,-208(fp)
  8178d8:	0085c83a 	sub	r2,zero,r2
  8178dc:	e0bfcc15 	stw	r2,-208(fp)
  8178e0:	e0bfcc17 	ldw	r2,-208(fp)
  8178e4:	e0bfe08d 	sth	r2,-126(fp)
  8178e8:	e0bfd017 	ldw	r2,-192(fp)
  8178ec:	10800517 	ldw	r2,20(r2)
  8178f0:	e0bfda15 	stw	r2,-152(fp)
  8178f4:	e0bfda17 	ldw	r2,-152(fp)
  8178f8:	10004626 	beq	r2,zero,817a14 <decompress_smooth_data+0xabc>
  8178fc:	e0bfdd0b 	ldhu	r2,-140(fp)
  817900:	10bfffcc 	andi	r2,r2,65535
  817904:	10a0001c 	xori	r2,r2,32768
  817908:	10a00004 	addi	r2,r2,-32768
  81790c:	1000411e 	bne	r2,zero,817a14 <decompress_smooth_data+0xabc>
  817910:	01400244 	movi	r5,9
  817914:	e13fd217 	ldw	r4,-184(fp)
  817918:	08305040 	call	830504 <__mulsi3>
  81791c:	1009883a 	mov	r4,r2
  817920:	e0ffc617 	ldw	r3,-232(fp)
  817924:	e0bfc817 	ldw	r2,-224(fp)
  817928:	1887883a 	add	r3,r3,r2
  81792c:	e0bfc717 	ldw	r2,-228(fp)
  817930:	1085883a 	add	r2,r2,r2
  817934:	1885c83a 	sub	r2,r3,r2
  817938:	100b883a 	mov	r5,r2
  81793c:	08305040 	call	830504 <__mulsi3>
  817940:	e0bfdb15 	stw	r2,-148(fp)
  817944:	e0bfdb17 	ldw	r2,-148(fp)
  817948:	10001716 	blt	r2,zero,8179a8 <decompress_smooth_data+0xa50>
  81794c:	e0bfd717 	ldw	r2,-164(fp)
  817950:	100691fa 	slli	r3,r2,7
  817954:	e0bfdb17 	ldw	r2,-148(fp)
  817958:	1887883a 	add	r3,r3,r2
  81795c:	e0bfd717 	ldw	r2,-164(fp)
  817960:	1004923a 	slli	r2,r2,8
  817964:	100b883a 	mov	r5,r2
  817968:	1809883a 	mov	r4,r3
  81796c:	08303500 	call	830350 <__divsi3>
  817970:	e0bfcc15 	stw	r2,-208(fp)
  817974:	e0bfda17 	ldw	r2,-152(fp)
  817978:	0080240e 	bge	zero,r2,817a0c <decompress_smooth_data+0xab4>
  81797c:	00c00044 	movi	r3,1
  817980:	e0bfda17 	ldw	r2,-152(fp)
  817984:	1884983a 	sll	r2,r3,r2
  817988:	e0ffcc17 	ldw	r3,-208(fp)
  81798c:	18801f16 	blt	r3,r2,817a0c <decompress_smooth_data+0xab4>
  817990:	00c00044 	movi	r3,1
  817994:	e0bfda17 	ldw	r2,-152(fp)
  817998:	1884983a 	sll	r2,r3,r2
  81799c:	10bfffc4 	addi	r2,r2,-1
  8179a0:	e0bfcc15 	stw	r2,-208(fp)
  8179a4:	00001906 	br	817a0c <decompress_smooth_data+0xab4>
  8179a8:	e0bfd717 	ldw	r2,-164(fp)
  8179ac:	100691fa 	slli	r3,r2,7
  8179b0:	e0bfdb17 	ldw	r2,-148(fp)
  8179b4:	1887c83a 	sub	r3,r3,r2
  8179b8:	e0bfd717 	ldw	r2,-164(fp)
  8179bc:	1004923a 	slli	r2,r2,8
  8179c0:	100b883a 	mov	r5,r2
  8179c4:	1809883a 	mov	r4,r3
  8179c8:	08303500 	call	830350 <__divsi3>
  8179cc:	e0bfcc15 	stw	r2,-208(fp)
  8179d0:	e0bfda17 	ldw	r2,-152(fp)
  8179d4:	00800a0e 	bge	zero,r2,817a00 <decompress_smooth_data+0xaa8>
  8179d8:	00c00044 	movi	r3,1
  8179dc:	e0bfda17 	ldw	r2,-152(fp)
  8179e0:	1884983a 	sll	r2,r3,r2
  8179e4:	e0ffcc17 	ldw	r3,-208(fp)
  8179e8:	18800516 	blt	r3,r2,817a00 <decompress_smooth_data+0xaa8>
  8179ec:	00c00044 	movi	r3,1
  8179f0:	e0bfda17 	ldw	r2,-152(fp)
  8179f4:	1884983a 	sll	r2,r3,r2
  8179f8:	10bfffc4 	addi	r2,r2,-1
  8179fc:	e0bfcc15 	stw	r2,-208(fp)
  817a00:	e0bfcc17 	ldw	r2,-208(fp)
  817a04:	0085c83a 	sub	r2,zero,r2
  817a08:	e0bfcc15 	stw	r2,-208(fp)
  817a0c:	e0bfcc17 	ldw	r2,-208(fp)
  817a10:	e0bfdd0d 	sth	r2,-140(fp)
  817a14:	e0ffdc04 	addi	r3,fp,-144
  817a18:	e0bfbf17 	ldw	r2,-260(fp)
  817a1c:	d8800015 	stw	r2,0(sp)
  817a20:	e0bfd817 	ldw	r2,-160(fp)
  817a24:	e1ffbe17 	ldw	r7,-264(fp)
  817a28:	180d883a 	mov	r6,r3
  817a2c:	e17fc017 	ldw	r5,-256(fp)
  817a30:	e13ffc17 	ldw	r4,-16(fp)
  817a34:	103ee83a 	callr	r2
  817a38:	e0bfc417 	ldw	r2,-240(fp)
  817a3c:	e0bfc315 	stw	r2,-244(fp)
  817a40:	e0bfc517 	ldw	r2,-236(fp)
  817a44:	e0bfc415 	stw	r2,-240(fp)
  817a48:	e0bfc717 	ldw	r2,-228(fp)
  817a4c:	e0bfc615 	stw	r2,-232(fp)
  817a50:	e0bfc817 	ldw	r2,-224(fp)
  817a54:	e0bfc715 	stw	r2,-228(fp)
  817a58:	e0bfca17 	ldw	r2,-216(fp)
  817a5c:	e0bfc915 	stw	r2,-220(fp)
  817a60:	e0bfcb17 	ldw	r2,-212(fp)
  817a64:	e0bfca15 	stw	r2,-216(fp)
  817a68:	e0bfbb17 	ldw	r2,-276(fp)
  817a6c:	10802004 	addi	r2,r2,128
  817a70:	e0bfbb15 	stw	r2,-276(fp)
  817a74:	e0bfbc17 	ldw	r2,-272(fp)
  817a78:	10802004 	addi	r2,r2,128
  817a7c:	e0bfbc15 	stw	r2,-272(fp)
  817a80:	e0bfbd17 	ldw	r2,-268(fp)
  817a84:	10802004 	addi	r2,r2,128
  817a88:	e0bfbd15 	stw	r2,-268(fp)
  817a8c:	e0bfc017 	ldw	r2,-256(fp)
  817a90:	10800917 	ldw	r2,36(r2)
  817a94:	1007883a 	mov	r3,r2
  817a98:	e0bfbf17 	ldw	r2,-260(fp)
  817a9c:	10c5883a 	add	r2,r2,r3
  817aa0:	e0bfbf15 	stw	r2,-260(fp)
  817aa4:	e0bfb517 	ldw	r2,-300(fp)
  817aa8:	10800044 	addi	r2,r2,1
  817aac:	e0bfb515 	stw	r2,-300(fp)
  817ab0:	e0bfb517 	ldw	r2,-300(fp)
  817ab4:	e0ffd917 	ldw	r3,-156(fp)
  817ab8:	18be472e 	bgeu	r3,r2,8173d8 <__alt_mem_epcs_flash_controller_0+0xff80e3d8>
  817abc:	e0bfc017 	ldw	r2,-256(fp)
  817ac0:	10800a17 	ldw	r2,40(r2)
  817ac4:	1085883a 	add	r2,r2,r2
  817ac8:	1085883a 	add	r2,r2,r2
  817acc:	1007883a 	mov	r3,r2
  817ad0:	e0bfbe17 	ldw	r2,-264(fp)
  817ad4:	10c5883a 	add	r2,r2,r3
  817ad8:	e0bfbe15 	stw	r2,-264(fp)
  817adc:	e0bfb717 	ldw	r2,-292(fp)
  817ae0:	10800044 	addi	r2,r2,1
  817ae4:	e0bfb715 	stw	r2,-292(fp)
  817ae8:	e0ffb717 	ldw	r3,-292(fp)
  817aec:	e0bfb817 	ldw	r2,-288(fp)
  817af0:	18bde816 	blt	r3,r2,817294 <__alt_mem_epcs_flash_controller_0+0xff80e294>
  817af4:	00000106 	br	817afc <decompress_smooth_data+0xba4>
  817af8:	0001883a 	nop
  817afc:	e0bfb617 	ldw	r2,-296(fp)
  817b00:	10800044 	addi	r2,r2,1
  817b04:	e0bfb615 	stw	r2,-296(fp)
  817b08:	e0bfc017 	ldw	r2,-256(fp)
  817b0c:	10801604 	addi	r2,r2,88
  817b10:	e0bfc015 	stw	r2,-256(fp)
  817b14:	e0bffc17 	ldw	r2,-16(fp)
  817b18:	10800917 	ldw	r2,36(r2)
  817b1c:	e0ffb617 	ldw	r3,-296(fp)
  817b20:	18bd4616 	blt	r3,r2,81703c <__alt_mem_epcs_flash_controller_0+0xff80e03c>
  817b24:	e0bffc17 	ldw	r2,-16(fp)
  817b28:	10802717 	ldw	r2,156(r2)
  817b2c:	10c00044 	addi	r3,r2,1
  817b30:	e0bffc17 	ldw	r2,-16(fp)
  817b34:	10c02715 	stw	r3,156(r2)
  817b38:	e0bffc17 	ldw	r2,-16(fp)
  817b3c:	10c02717 	ldw	r3,156(r2)
  817b40:	e0bffc17 	ldw	r2,-16(fp)
  817b44:	10805317 	ldw	r2,332(r2)
  817b48:	1880022e 	bgeu	r3,r2,817b54 <decompress_smooth_data+0xbfc>
  817b4c:	008000c4 	movi	r2,3
  817b50:	00000106 	br	817b58 <decompress_smooth_data+0xc00>
  817b54:	00800104 	movi	r2,4
  817b58:	e6fffe04 	addi	sp,fp,-8
  817b5c:	dfc00317 	ldw	ra,12(sp)
  817b60:	df000217 	ldw	fp,8(sp)
  817b64:	dc400117 	ldw	r17,4(sp)
  817b68:	dc000017 	ldw	r16,0(sp)
  817b6c:	dec00404 	addi	sp,sp,16
  817b70:	f800283a 	ret

00817b74 <jinit_d_coef_controller>:
  817b74:	defff204 	addi	sp,sp,-56
  817b78:	dfc00d15 	stw	ra,52(sp)
  817b7c:	df000c15 	stw	fp,48(sp)
  817b80:	dc400b15 	stw	r17,44(sp)
  817b84:	dc000a15 	stw	r16,40(sp)
  817b88:	df000c04 	addi	fp,sp,48
  817b8c:	e13ffc15 	stw	r4,-16(fp)
  817b90:	e17ffd15 	stw	r5,-12(fp)
  817b94:	e0bffc17 	ldw	r2,-16(fp)
  817b98:	10800117 	ldw	r2,4(r2)
  817b9c:	10800017 	ldw	r2,0(r2)
  817ba0:	01801d04 	movi	r6,116
  817ba4:	01400044 	movi	r5,1
  817ba8:	e13ffc17 	ldw	r4,-16(fp)
  817bac:	103ee83a 	callr	r2
  817bb0:	e0bffa15 	stw	r2,-24(fp)
  817bb4:	e0bffc17 	ldw	r2,-16(fp)
  817bb8:	e0fffa17 	ldw	r3,-24(fp)
  817bbc:	10c07115 	stw	r3,452(r2)
  817bc0:	e0fffa17 	ldw	r3,-24(fp)
  817bc4:	00802074 	movhi	r2,129
  817bc8:	10989504 	addi	r2,r2,25172
  817bcc:	18800015 	stw	r2,0(r3)
  817bd0:	e0fffa17 	ldw	r3,-24(fp)
  817bd4:	00802074 	movhi	r2,129
  817bd8:	1098a404 	addi	r2,r2,25232
  817bdc:	18800215 	stw	r2,8(r3)
  817be0:	e0bffa17 	ldw	r2,-24(fp)
  817be4:	10001c15 	stw	zero,112(r2)
  817be8:	e0bffd17 	ldw	r2,-12(fp)
  817bec:	10004c26 	beq	r2,zero,817d20 <jinit_d_coef_controller+0x1ac>
  817bf0:	e03ff615 	stw	zero,-40(fp)
  817bf4:	e0bffc17 	ldw	r2,-16(fp)
  817bf8:	10803617 	ldw	r2,216(r2)
  817bfc:	e0bff815 	stw	r2,-32(fp)
  817c00:	00003606 	br	817cdc <jinit_d_coef_controller+0x168>
  817c04:	e0bff817 	ldw	r2,-32(fp)
  817c08:	10800317 	ldw	r2,12(r2)
  817c0c:	e0bff715 	stw	r2,-36(fp)
  817c10:	e0bffc17 	ldw	r2,-16(fp)
  817c14:	10803817 	ldw	r2,224(r2)
  817c18:	10000526 	beq	r2,zero,817c30 <jinit_d_coef_controller+0xbc>
  817c1c:	e0fff717 	ldw	r3,-36(fp)
  817c20:	1805883a 	mov	r2,r3
  817c24:	1085883a 	add	r2,r2,r2
  817c28:	10c5883a 	add	r2,r2,r3
  817c2c:	e0bff715 	stw	r2,-36(fp)
  817c30:	e0bffc17 	ldw	r2,-16(fp)
  817c34:	10800117 	ldw	r2,4(r2)
  817c38:	14000517 	ldw	r16,20(r2)
  817c3c:	e0bff817 	ldw	r2,-32(fp)
  817c40:	10800717 	ldw	r2,28(r2)
  817c44:	1007883a 	mov	r3,r2
  817c48:	e0bff817 	ldw	r2,-32(fp)
  817c4c:	10800217 	ldw	r2,8(r2)
  817c50:	100b883a 	mov	r5,r2
  817c54:	1809883a 	mov	r4,r3
  817c58:	0813ef00 	call	813ef0 <jround_up>
  817c5c:	1023883a 	mov	r17,r2
  817c60:	e0bff817 	ldw	r2,-32(fp)
  817c64:	10800817 	ldw	r2,32(r2)
  817c68:	1007883a 	mov	r3,r2
  817c6c:	e0bff817 	ldw	r2,-32(fp)
  817c70:	10800317 	ldw	r2,12(r2)
  817c74:	100b883a 	mov	r5,r2
  817c78:	1809883a 	mov	r4,r3
  817c7c:	0813ef00 	call	813ef0 <jround_up>
  817c80:	1007883a 	mov	r3,r2
  817c84:	e0bff717 	ldw	r2,-36(fp)
  817c88:	d8800115 	stw	r2,4(sp)
  817c8c:	d8c00015 	stw	r3,0(sp)
  817c90:	880f883a 	mov	r7,r17
  817c94:	01800044 	movi	r6,1
  817c98:	01400044 	movi	r5,1
  817c9c:	e13ffc17 	ldw	r4,-16(fp)
  817ca0:	803ee83a 	callr	r16
  817ca4:	1009883a 	mov	r4,r2
  817ca8:	e0fffa17 	ldw	r3,-24(fp)
  817cac:	e0bff617 	ldw	r2,-40(fp)
  817cb0:	10800484 	addi	r2,r2,18
  817cb4:	1085883a 	add	r2,r2,r2
  817cb8:	1085883a 	add	r2,r2,r2
  817cbc:	1885883a 	add	r2,r3,r2
  817cc0:	11000015 	stw	r4,0(r2)
  817cc4:	e0bff617 	ldw	r2,-40(fp)
  817cc8:	10800044 	addi	r2,r2,1
  817ccc:	e0bff615 	stw	r2,-40(fp)
  817cd0:	e0bff817 	ldw	r2,-32(fp)
  817cd4:	10801604 	addi	r2,r2,88
  817cd8:	e0bff815 	stw	r2,-32(fp)
  817cdc:	e0bffc17 	ldw	r2,-16(fp)
  817ce0:	10800917 	ldw	r2,36(r2)
  817ce4:	e0fff617 	ldw	r3,-40(fp)
  817ce8:	18bfc616 	blt	r3,r2,817c04 <__alt_mem_epcs_flash_controller_0+0xff80ec04>
  817cec:	e0fffa17 	ldw	r3,-24(fp)
  817cf0:	00802074 	movhi	r2,129
  817cf4:	1099ba04 	addi	r2,r2,26344
  817cf8:	18800115 	stw	r2,4(r3)
  817cfc:	e0fffa17 	ldw	r3,-24(fp)
  817d00:	00802074 	movhi	r2,129
  817d04:	109a8604 	addi	r2,r2,27160
  817d08:	18800315 	stw	r2,12(r3)
  817d0c:	e0bffa17 	ldw	r2,-24(fp)
  817d10:	10c01204 	addi	r3,r2,72
  817d14:	e0bffa17 	ldw	r2,-24(fp)
  817d18:	10c00415 	stw	r3,16(r2)
  817d1c:	00002c06 	br	817dd0 <jinit_d_coef_controller+0x25c>
  817d20:	e0bffc17 	ldw	r2,-16(fp)
  817d24:	10800117 	ldw	r2,4(r2)
  817d28:	10800117 	ldw	r2,4(r2)
  817d2c:	01814004 	movi	r6,1280
  817d30:	01400044 	movi	r5,1
  817d34:	e13ffc17 	ldw	r4,-16(fp)
  817d38:	103ee83a 	callr	r2
  817d3c:	e0bffb15 	stw	r2,-20(fp)
  817d40:	e03ff915 	stw	zero,-28(fp)
  817d44:	00000e06 	br	817d80 <jinit_d_coef_controller+0x20c>
  817d48:	e0bff917 	ldw	r2,-28(fp)
  817d4c:	100491fa 	slli	r2,r2,7
  817d50:	e0fffb17 	ldw	r3,-20(fp)
  817d54:	1887883a 	add	r3,r3,r2
  817d58:	e13ffa17 	ldw	r4,-24(fp)
  817d5c:	e0bff917 	ldw	r2,-28(fp)
  817d60:	10800204 	addi	r2,r2,8
  817d64:	1085883a 	add	r2,r2,r2
  817d68:	1085883a 	add	r2,r2,r2
  817d6c:	2085883a 	add	r2,r4,r2
  817d70:	10c00015 	stw	r3,0(r2)
  817d74:	e0bff917 	ldw	r2,-28(fp)
  817d78:	10800044 	addi	r2,r2,1
  817d7c:	e0bff915 	stw	r2,-28(fp)
  817d80:	e0bff917 	ldw	r2,-28(fp)
  817d84:	10800290 	cmplti	r2,r2,10
  817d88:	103fef1e 	bne	r2,zero,817d48 <__alt_mem_epcs_flash_controller_0+0xff80ed48>
  817d8c:	e0bffc17 	ldw	r2,-16(fp)
  817d90:	10806d17 	ldw	r2,436(r2)
  817d94:	1000041e 	bne	r2,zero,817da8 <jinit_d_coef_controller+0x234>
  817d98:	01814004 	movi	r6,1280
  817d9c:	000b883a 	mov	r5,zero
  817da0:	e13ffb17 	ldw	r4,-20(fp)
  817da4:	08342980 	call	834298 <memset>
  817da8:	e0fffa17 	ldw	r3,-24(fp)
  817dac:	00802074 	movhi	r2,129
  817db0:	1099b104 	addi	r2,r2,26308
  817db4:	18800115 	stw	r2,4(r3)
  817db8:	e0fffa17 	ldw	r3,-24(fp)
  817dbc:	00802074 	movhi	r2,129
  817dc0:	1098c604 	addi	r2,r2,25368
  817dc4:	18800315 	stw	r2,12(r3)
  817dc8:	e0bffa17 	ldw	r2,-24(fp)
  817dcc:	10000415 	stw	zero,16(r2)
  817dd0:	0001883a 	nop
  817dd4:	e6fffe04 	addi	sp,fp,-8
  817dd8:	dfc00317 	ldw	ra,12(sp)
  817ddc:	df000217 	ldw	fp,8(sp)
  817de0:	dc400117 	ldw	r17,4(sp)
  817de4:	dc000017 	ldw	r16,0(sp)
  817de8:	dec00404 	addi	sp,sp,16
  817dec:	f800283a 	ret

00817df0 <build_ycc_rgb_table>:
  817df0:	defff904 	addi	sp,sp,-28
  817df4:	dfc00615 	stw	ra,24(sp)
  817df8:	df000515 	stw	fp,20(sp)
  817dfc:	dc000415 	stw	r16,16(sp)
  817e00:	df000504 	addi	fp,sp,20
  817e04:	e13ffe15 	stw	r4,-8(fp)
  817e08:	e0bffe17 	ldw	r2,-8(fp)
  817e0c:	10807817 	ldw	r2,480(r2)
  817e10:	e0bffd15 	stw	r2,-12(fp)
  817e14:	e0bffe17 	ldw	r2,-8(fp)
  817e18:	10800117 	ldw	r2,4(r2)
  817e1c:	10800017 	ldw	r2,0(r2)
  817e20:	01810004 	movi	r6,1024
  817e24:	01400044 	movi	r5,1
  817e28:	e13ffe17 	ldw	r4,-8(fp)
  817e2c:	103ee83a 	callr	r2
  817e30:	1007883a 	mov	r3,r2
  817e34:	e0bffd17 	ldw	r2,-12(fp)
  817e38:	10c00215 	stw	r3,8(r2)
  817e3c:	e0bffe17 	ldw	r2,-8(fp)
  817e40:	10800117 	ldw	r2,4(r2)
  817e44:	10800017 	ldw	r2,0(r2)
  817e48:	01810004 	movi	r6,1024
  817e4c:	01400044 	movi	r5,1
  817e50:	e13ffe17 	ldw	r4,-8(fp)
  817e54:	103ee83a 	callr	r2
  817e58:	1007883a 	mov	r3,r2
  817e5c:	e0bffd17 	ldw	r2,-12(fp)
  817e60:	10c00315 	stw	r3,12(r2)
  817e64:	e0bffe17 	ldw	r2,-8(fp)
  817e68:	10800117 	ldw	r2,4(r2)
  817e6c:	10800017 	ldw	r2,0(r2)
  817e70:	01810004 	movi	r6,1024
  817e74:	01400044 	movi	r5,1
  817e78:	e13ffe17 	ldw	r4,-8(fp)
  817e7c:	103ee83a 	callr	r2
  817e80:	1007883a 	mov	r3,r2
  817e84:	e0bffd17 	ldw	r2,-12(fp)
  817e88:	10c00415 	stw	r3,16(r2)
  817e8c:	e0bffe17 	ldw	r2,-8(fp)
  817e90:	10800117 	ldw	r2,4(r2)
  817e94:	10800017 	ldw	r2,0(r2)
  817e98:	01810004 	movi	r6,1024
  817e9c:	01400044 	movi	r5,1
  817ea0:	e13ffe17 	ldw	r4,-8(fp)
  817ea4:	103ee83a 	callr	r2
  817ea8:	1007883a 	mov	r3,r2
  817eac:	e0bffd17 	ldw	r2,-12(fp)
  817eb0:	10c00515 	stw	r3,20(r2)
  817eb4:	e03ffb15 	stw	zero,-20(fp)
  817eb8:	00bfe004 	movi	r2,-128
  817ebc:	e0bffc15 	stw	r2,-16(fp)
  817ec0:	00003c06 	br	817fb4 <build_ycc_rgb_table+0x1c4>
  817ec4:	e0bffd17 	ldw	r2,-12(fp)
  817ec8:	10c00217 	ldw	r3,8(r2)
  817ecc:	e0bffb17 	ldw	r2,-20(fp)
  817ed0:	1085883a 	add	r2,r2,r2
  817ed4:	1085883a 	add	r2,r2,r2
  817ed8:	18a1883a 	add	r16,r3,r2
  817edc:	01400074 	movhi	r5,1
  817ee0:	2959ba44 	addi	r5,r5,26345
  817ee4:	e13ffc17 	ldw	r4,-16(fp)
  817ee8:	08305040 	call	830504 <__mulsi3>
  817eec:	1007883a 	mov	r3,r2
  817ef0:	00a00014 	movui	r2,32768
  817ef4:	1885883a 	add	r2,r3,r2
  817ef8:	1005d43a 	srai	r2,r2,16
  817efc:	80800015 	stw	r2,0(r16)
  817f00:	e0bffd17 	ldw	r2,-12(fp)
  817f04:	10c00317 	ldw	r3,12(r2)
  817f08:	e0bffb17 	ldw	r2,-20(fp)
  817f0c:	1085883a 	add	r2,r2,r2
  817f10:	1085883a 	add	r2,r2,r2
  817f14:	18a1883a 	add	r16,r3,r2
  817f18:	014000b4 	movhi	r5,2
  817f1c:	29716884 	addi	r5,r5,-14942
  817f20:	e13ffc17 	ldw	r4,-16(fp)
  817f24:	08305040 	call	830504 <__mulsi3>
  817f28:	1007883a 	mov	r3,r2
  817f2c:	00a00014 	movui	r2,32768
  817f30:	1885883a 	add	r2,r3,r2
  817f34:	1005d43a 	srai	r2,r2,16
  817f38:	80800015 	stw	r2,0(r16)
  817f3c:	e0bffd17 	ldw	r2,-12(fp)
  817f40:	10c00417 	ldw	r3,16(r2)
  817f44:	e0bffb17 	ldw	r2,-20(fp)
  817f48:	1085883a 	add	r2,r2,r2
  817f4c:	1085883a 	add	r2,r2,r2
  817f50:	18a1883a 	add	r16,r3,r2
  817f54:	017ffff4 	movhi	r5,65535
  817f58:	29524b84 	addi	r5,r5,18734
  817f5c:	e13ffc17 	ldw	r4,-16(fp)
  817f60:	08305040 	call	830504 <__mulsi3>
  817f64:	80800015 	stw	r2,0(r16)
  817f68:	e0bffd17 	ldw	r2,-12(fp)
  817f6c:	10c00517 	ldw	r3,20(r2)
  817f70:	e0bffb17 	ldw	r2,-20(fp)
  817f74:	1085883a 	add	r2,r2,r2
  817f78:	1085883a 	add	r2,r2,r2
  817f7c:	18a1883a 	add	r16,r3,r2
  817f80:	0169f9c4 	movi	r5,-22553
  817f84:	e13ffc17 	ldw	r4,-16(fp)
  817f88:	08305040 	call	830504 <__mulsi3>
  817f8c:	1007883a 	mov	r3,r2
  817f90:	00a00014 	movui	r2,32768
  817f94:	1885883a 	add	r2,r3,r2
  817f98:	80800015 	stw	r2,0(r16)
  817f9c:	e0bffb17 	ldw	r2,-20(fp)
  817fa0:	10800044 	addi	r2,r2,1
  817fa4:	e0bffb15 	stw	r2,-20(fp)
  817fa8:	e0bffc17 	ldw	r2,-16(fp)
  817fac:	10800044 	addi	r2,r2,1
  817fb0:	e0bffc15 	stw	r2,-16(fp)
  817fb4:	e0bffb17 	ldw	r2,-20(fp)
  817fb8:	10804010 	cmplti	r2,r2,256
  817fbc:	103fc11e 	bne	r2,zero,817ec4 <__alt_mem_epcs_flash_controller_0+0xff80eec4>
  817fc0:	0001883a 	nop
  817fc4:	e6ffff04 	addi	sp,fp,-4
  817fc8:	dfc00217 	ldw	ra,8(sp)
  817fcc:	df000117 	ldw	fp,4(sp)
  817fd0:	dc000017 	ldw	r16,0(sp)
  817fd4:	dec00304 	addi	sp,sp,12
  817fd8:	f800283a 	ret

00817fdc <build_bg_ycc_rgb_table>:
  817fdc:	defff904 	addi	sp,sp,-28
  817fe0:	dfc00615 	stw	ra,24(sp)
  817fe4:	df000515 	stw	fp,20(sp)
  817fe8:	dc000415 	stw	r16,16(sp)
  817fec:	df000504 	addi	fp,sp,20
  817ff0:	e13ffe15 	stw	r4,-8(fp)
  817ff4:	e0bffe17 	ldw	r2,-8(fp)
  817ff8:	10807817 	ldw	r2,480(r2)
  817ffc:	e0bffd15 	stw	r2,-12(fp)
  818000:	e0bffe17 	ldw	r2,-8(fp)
  818004:	10800117 	ldw	r2,4(r2)
  818008:	10800017 	ldw	r2,0(r2)
  81800c:	01810004 	movi	r6,1024
  818010:	01400044 	movi	r5,1
  818014:	e13ffe17 	ldw	r4,-8(fp)
  818018:	103ee83a 	callr	r2
  81801c:	1007883a 	mov	r3,r2
  818020:	e0bffd17 	ldw	r2,-12(fp)
  818024:	10c00215 	stw	r3,8(r2)
  818028:	e0bffe17 	ldw	r2,-8(fp)
  81802c:	10800117 	ldw	r2,4(r2)
  818030:	10800017 	ldw	r2,0(r2)
  818034:	01810004 	movi	r6,1024
  818038:	01400044 	movi	r5,1
  81803c:	e13ffe17 	ldw	r4,-8(fp)
  818040:	103ee83a 	callr	r2
  818044:	1007883a 	mov	r3,r2
  818048:	e0bffd17 	ldw	r2,-12(fp)
  81804c:	10c00315 	stw	r3,12(r2)
  818050:	e0bffe17 	ldw	r2,-8(fp)
  818054:	10800117 	ldw	r2,4(r2)
  818058:	10800017 	ldw	r2,0(r2)
  81805c:	01810004 	movi	r6,1024
  818060:	01400044 	movi	r5,1
  818064:	e13ffe17 	ldw	r4,-8(fp)
  818068:	103ee83a 	callr	r2
  81806c:	1007883a 	mov	r3,r2
  818070:	e0bffd17 	ldw	r2,-12(fp)
  818074:	10c00415 	stw	r3,16(r2)
  818078:	e0bffe17 	ldw	r2,-8(fp)
  81807c:	10800117 	ldw	r2,4(r2)
  818080:	10800017 	ldw	r2,0(r2)
  818084:	01810004 	movi	r6,1024
  818088:	01400044 	movi	r5,1
  81808c:	e13ffe17 	ldw	r4,-8(fp)
  818090:	103ee83a 	callr	r2
  818094:	1007883a 	mov	r3,r2
  818098:	e0bffd17 	ldw	r2,-12(fp)
  81809c:	10c00515 	stw	r3,20(r2)
  8180a0:	e03ffb15 	stw	zero,-20(fp)
  8180a4:	00bfe004 	movi	r2,-128
  8180a8:	e0bffc15 	stw	r2,-16(fp)
  8180ac:	00003d06 	br	8181a4 <build_bg_ycc_rgb_table+0x1c8>
  8180b0:	e0bffd17 	ldw	r2,-12(fp)
  8180b4:	10c00217 	ldw	r3,8(r2)
  8180b8:	e0bffb17 	ldw	r2,-20(fp)
  8180bc:	1085883a 	add	r2,r2,r2
  8180c0:	1085883a 	add	r2,r2,r2
  8180c4:	18a1883a 	add	r16,r3,r2
  8180c8:	014000f4 	movhi	r5,3
  8180cc:	297374c4 	addi	r5,r5,-12845
  8180d0:	e13ffc17 	ldw	r4,-16(fp)
  8180d4:	08305040 	call	830504 <__mulsi3>
  8180d8:	1007883a 	mov	r3,r2
  8180dc:	00a00014 	movui	r2,32768
  8180e0:	1885883a 	add	r2,r3,r2
  8180e4:	1005d43a 	srai	r2,r2,16
  8180e8:	80800015 	stw	r2,0(r16)
  8180ec:	e0bffd17 	ldw	r2,-12(fp)
  8180f0:	10c00317 	ldw	r3,12(r2)
  8180f4:	e0bffb17 	ldw	r2,-20(fp)
  8180f8:	1085883a 	add	r2,r2,r2
  8180fc:	1085883a 	add	r2,r2,r2
  818100:	18a1883a 	add	r16,r3,r2
  818104:	01400134 	movhi	r5,4
  818108:	2962d104 	addi	r5,r5,-29884
  81810c:	e13ffc17 	ldw	r4,-16(fp)
  818110:	08305040 	call	830504 <__mulsi3>
  818114:	1007883a 	mov	r3,r2
  818118:	00a00014 	movui	r2,32768
  81811c:	1885883a 	add	r2,r3,r2
  818120:	1005d43a 	srai	r2,r2,16
  818124:	80800015 	stw	r2,0(r16)
  818128:	e0bffd17 	ldw	r2,-12(fp)
  81812c:	10c00417 	ldw	r3,16(r2)
  818130:	e0bffb17 	ldw	r2,-20(fp)
  818134:	1085883a 	add	r2,r2,r2
  818138:	1085883a 	add	r2,r2,r2
  81813c:	18a1883a 	add	r16,r3,r2
  818140:	017ffff4 	movhi	r5,65535
  818144:	29649744 	addi	r5,r5,-28067
  818148:	e13ffc17 	ldw	r4,-16(fp)
  81814c:	08305040 	call	830504 <__mulsi3>
  818150:	80800015 	stw	r2,0(r16)
  818154:	e0bffd17 	ldw	r2,-12(fp)
  818158:	10c00517 	ldw	r3,20(r2)
  81815c:	e0bffb17 	ldw	r2,-20(fp)
  818160:	1085883a 	add	r2,r2,r2
  818164:	1085883a 	add	r2,r2,r2
  818168:	18a1883a 	add	r16,r3,r2
  81816c:	017ffff4 	movhi	r5,65535
  818170:	2953f344 	addi	r5,r5,20429
  818174:	e13ffc17 	ldw	r4,-16(fp)
  818178:	08305040 	call	830504 <__mulsi3>
  81817c:	1007883a 	mov	r3,r2
  818180:	00a00014 	movui	r2,32768
  818184:	1885883a 	add	r2,r3,r2
  818188:	80800015 	stw	r2,0(r16)
  81818c:	e0bffb17 	ldw	r2,-20(fp)
  818190:	10800044 	addi	r2,r2,1
  818194:	e0bffb15 	stw	r2,-20(fp)
  818198:	e0bffc17 	ldw	r2,-16(fp)
  81819c:	10800044 	addi	r2,r2,1
  8181a0:	e0bffc15 	stw	r2,-16(fp)
  8181a4:	e0bffb17 	ldw	r2,-20(fp)
  8181a8:	10804010 	cmplti	r2,r2,256
  8181ac:	103fc01e 	bne	r2,zero,8180b0 <__alt_mem_epcs_flash_controller_0+0xff80f0b0>
  8181b0:	0001883a 	nop
  8181b4:	e6ffff04 	addi	sp,fp,-4
  8181b8:	dfc00217 	ldw	ra,8(sp)
  8181bc:	df000117 	ldw	fp,4(sp)
  8181c0:	dc000017 	ldw	r16,0(sp)
  8181c4:	dec00304 	addi	sp,sp,12
  8181c8:	f800283a 	ret

008181cc <ycc_rgb_convert>:
  8181cc:	deffec04 	addi	sp,sp,-80
  8181d0:	df001315 	stw	fp,76(sp)
  8181d4:	ddc01215 	stw	r23,72(sp)
  8181d8:	dd801115 	stw	r22,68(sp)
  8181dc:	dd401015 	stw	r21,64(sp)
  8181e0:	dd000f15 	stw	r20,60(sp)
  8181e4:	dcc00e15 	stw	r19,56(sp)
  8181e8:	dc800d15 	stw	r18,52(sp)
  8181ec:	dc400c15 	stw	r17,48(sp)
  8181f0:	dc000b15 	stw	r16,44(sp)
  8181f4:	df001304 	addi	fp,sp,76
  8181f8:	e13fef15 	stw	r4,-68(fp)
  8181fc:	e17ff015 	stw	r5,-64(fp)
  818200:	e1bff115 	stw	r6,-60(fp)
  818204:	e1fff215 	stw	r7,-56(fp)
  818208:	e0bfef17 	ldw	r2,-68(fp)
  81820c:	10807817 	ldw	r2,480(r2)
  818210:	e0bfed15 	stw	r2,-76(fp)
  818214:	e0bfef17 	ldw	r2,-68(fp)
  818218:	10801c17 	ldw	r2,112(r2)
  81821c:	e0bfee15 	stw	r2,-72(fp)
  818220:	e0bfef17 	ldw	r2,-68(fp)
  818224:	14805417 	ldw	r18,336(r2)
  818228:	e0bfed17 	ldw	r2,-76(fp)
  81822c:	15000217 	ldw	r20,8(r2)
  818230:	e0bfed17 	ldw	r2,-76(fp)
  818234:	15400317 	ldw	r21,12(r2)
  818238:	e0bfed17 	ldw	r2,-76(fp)
  81823c:	15800417 	ldw	r22,16(r2)
  818240:	e0bfed17 	ldw	r2,-76(fp)
  818244:	15c00517 	ldw	r23,20(r2)
  818248:	00005906 	br	8183b0 <ycc_rgb_convert+0x1e4>
  81824c:	e0bff017 	ldw	r2,-64(fp)
  818250:	10c00017 	ldw	r3,0(r2)
  818254:	e0bff117 	ldw	r2,-60(fp)
  818258:	1085883a 	add	r2,r2,r2
  81825c:	1085883a 	add	r2,r2,r2
  818260:	1885883a 	add	r2,r3,r2
  818264:	10800017 	ldw	r2,0(r2)
  818268:	e0bff315 	stw	r2,-52(fp)
  81826c:	e0bff017 	ldw	r2,-64(fp)
  818270:	10800104 	addi	r2,r2,4
  818274:	10c00017 	ldw	r3,0(r2)
  818278:	e0bff117 	ldw	r2,-60(fp)
  81827c:	1085883a 	add	r2,r2,r2
  818280:	1085883a 	add	r2,r2,r2
  818284:	1885883a 	add	r2,r3,r2
  818288:	10800017 	ldw	r2,0(r2)
  81828c:	e0bff415 	stw	r2,-48(fp)
  818290:	e0bff017 	ldw	r2,-64(fp)
  818294:	10800204 	addi	r2,r2,8
  818298:	10c00017 	ldw	r3,0(r2)
  81829c:	e0bff117 	ldw	r2,-60(fp)
  8182a0:	1085883a 	add	r2,r2,r2
  8182a4:	1085883a 	add	r2,r2,r2
  8182a8:	1885883a 	add	r2,r3,r2
  8182ac:	10800017 	ldw	r2,0(r2)
  8182b0:	e0bff515 	stw	r2,-44(fp)
  8182b4:	e0bff117 	ldw	r2,-60(fp)
  8182b8:	10800044 	addi	r2,r2,1
  8182bc:	e0bff115 	stw	r2,-60(fp)
  8182c0:	e0bff217 	ldw	r2,-56(fp)
  8182c4:	10c00104 	addi	r3,r2,4
  8182c8:	e0fff215 	stw	r3,-56(fp)
  8182cc:	14400017 	ldw	r17,0(r2)
  8182d0:	0021883a 	mov	r16,zero
  8182d4:	00003406 	br	8183a8 <ycc_rgb_convert+0x1dc>
  8182d8:	e0fff317 	ldw	r3,-52(fp)
  8182dc:	1c05883a 	add	r2,r3,r16
  8182e0:	10800003 	ldbu	r2,0(r2)
  8182e4:	14c03fcc 	andi	r19,r2,255
  8182e8:	e0fff417 	ldw	r3,-48(fp)
  8182ec:	1c05883a 	add	r2,r3,r16
  8182f0:	10800003 	ldbu	r2,0(r2)
  8182f4:	10803fcc 	andi	r2,r2,255
  8182f8:	e0bff615 	stw	r2,-40(fp)
  8182fc:	e0fff517 	ldw	r3,-44(fp)
  818300:	1c05883a 	add	r2,r3,r16
  818304:	10800003 	ldbu	r2,0(r2)
  818308:	10803fcc 	andi	r2,r2,255
  81830c:	e0bff715 	stw	r2,-36(fp)
  818310:	e0bff717 	ldw	r2,-36(fp)
  818314:	1085883a 	add	r2,r2,r2
  818318:	1085883a 	add	r2,r2,r2
  81831c:	a085883a 	add	r2,r20,r2
  818320:	10800017 	ldw	r2,0(r2)
  818324:	14c5883a 	add	r2,r2,r19
  818328:	9085883a 	add	r2,r18,r2
  81832c:	10800003 	ldbu	r2,0(r2)
  818330:	88800005 	stb	r2,0(r17)
  818334:	88c00044 	addi	r3,r17,1
  818338:	e0bff617 	ldw	r2,-40(fp)
  81833c:	1085883a 	add	r2,r2,r2
  818340:	1085883a 	add	r2,r2,r2
  818344:	b885883a 	add	r2,r23,r2
  818348:	11000017 	ldw	r4,0(r2)
  81834c:	e0bff717 	ldw	r2,-36(fp)
  818350:	1085883a 	add	r2,r2,r2
  818354:	1085883a 	add	r2,r2,r2
  818358:	b085883a 	add	r2,r22,r2
  81835c:	10800017 	ldw	r2,0(r2)
  818360:	2085883a 	add	r2,r4,r2
  818364:	1005d43a 	srai	r2,r2,16
  818368:	14c5883a 	add	r2,r2,r19
  81836c:	9085883a 	add	r2,r18,r2
  818370:	10800003 	ldbu	r2,0(r2)
  818374:	18800005 	stb	r2,0(r3)
  818378:	88c00084 	addi	r3,r17,2
  81837c:	e0bff617 	ldw	r2,-40(fp)
  818380:	1085883a 	add	r2,r2,r2
  818384:	1085883a 	add	r2,r2,r2
  818388:	a885883a 	add	r2,r21,r2
  81838c:	10800017 	ldw	r2,0(r2)
  818390:	14c5883a 	add	r2,r2,r19
  818394:	9085883a 	add	r2,r18,r2
  818398:	10800003 	ldbu	r2,0(r2)
  81839c:	18800005 	stb	r2,0(r3)
  8183a0:	8c4000c4 	addi	r17,r17,3
  8183a4:	84000044 	addi	r16,r16,1
  8183a8:	e0bfee17 	ldw	r2,-72(fp)
  8183ac:	80bfca36 	bltu	r16,r2,8182d8 <__alt_mem_epcs_flash_controller_0+0xff80f2d8>
  8183b0:	e0800117 	ldw	r2,4(fp)
  8183b4:	10bfffc4 	addi	r2,r2,-1
  8183b8:	e0800115 	stw	r2,4(fp)
  8183bc:	e0800117 	ldw	r2,4(fp)
  8183c0:	103fa20e 	bge	r2,zero,81824c <__alt_mem_epcs_flash_controller_0+0xff80f24c>
  8183c4:	0001883a 	nop
  8183c8:	e6fff804 	addi	sp,fp,-32
  8183cc:	df000817 	ldw	fp,32(sp)
  8183d0:	ddc00717 	ldw	r23,28(sp)
  8183d4:	dd800617 	ldw	r22,24(sp)
  8183d8:	dd400517 	ldw	r21,20(sp)
  8183dc:	dd000417 	ldw	r20,16(sp)
  8183e0:	dcc00317 	ldw	r19,12(sp)
  8183e4:	dc800217 	ldw	r18,8(sp)
  8183e8:	dc400117 	ldw	r17,4(sp)
  8183ec:	dc000017 	ldw	r16,0(sp)
  8183f0:	dec00904 	addi	sp,sp,36
  8183f4:	f800283a 	ret

008183f8 <build_rgb_y_table>:
  8183f8:	defff904 	addi	sp,sp,-28
  8183fc:	dfc00615 	stw	ra,24(sp)
  818400:	df000515 	stw	fp,20(sp)
  818404:	dc000415 	stw	r16,16(sp)
  818408:	df000504 	addi	fp,sp,20
  81840c:	e13ffe15 	stw	r4,-8(fp)
  818410:	e0bffe17 	ldw	r2,-8(fp)
  818414:	10807817 	ldw	r2,480(r2)
  818418:	e0bffc15 	stw	r2,-16(fp)
  81841c:	e0bffe17 	ldw	r2,-8(fp)
  818420:	10800117 	ldw	r2,4(r2)
  818424:	10800017 	ldw	r2,0(r2)
  818428:	01830004 	movi	r6,3072
  81842c:	01400044 	movi	r5,1
  818430:	e13ffe17 	ldw	r4,-8(fp)
  818434:	103ee83a 	callr	r2
  818438:	e0bffd15 	stw	r2,-12(fp)
  81843c:	e0bffc17 	ldw	r2,-16(fp)
  818440:	e0fffd17 	ldw	r3,-12(fp)
  818444:	10c00615 	stw	r3,24(r2)
  818448:	e03ffb15 	stw	zero,-20(fp)
  81844c:	00002606 	br	8184e8 <build_rgb_y_table+0xf0>
  818450:	e0bffb17 	ldw	r2,-20(fp)
  818454:	1085883a 	add	r2,r2,r2
  818458:	1085883a 	add	r2,r2,r2
  81845c:	1007883a 	mov	r3,r2
  818460:	e0bffd17 	ldw	r2,-12(fp)
  818464:	10e1883a 	add	r16,r2,r3
  818468:	015322c4 	movi	r5,19595
  81846c:	e13ffb17 	ldw	r4,-20(fp)
  818470:	08305040 	call	830504 <__mulsi3>
  818474:	80800015 	stw	r2,0(r16)
  818478:	e0bffb17 	ldw	r2,-20(fp)
  81847c:	10804004 	addi	r2,r2,256
  818480:	1085883a 	add	r2,r2,r2
  818484:	1085883a 	add	r2,r2,r2
  818488:	1007883a 	mov	r3,r2
  81848c:	e0bffd17 	ldw	r2,-12(fp)
  818490:	10e1883a 	add	r16,r2,r3
  818494:	01659194 	movui	r5,38470
  818498:	e13ffb17 	ldw	r4,-20(fp)
  81849c:	08305040 	call	830504 <__mulsi3>
  8184a0:	80800015 	stw	r2,0(r16)
  8184a4:	e0bffb17 	ldw	r2,-20(fp)
  8184a8:	10808004 	addi	r2,r2,512
  8184ac:	1085883a 	add	r2,r2,r2
  8184b0:	1085883a 	add	r2,r2,r2
  8184b4:	1007883a 	mov	r3,r2
  8184b8:	e0bffd17 	ldw	r2,-12(fp)
  8184bc:	10e1883a 	add	r16,r2,r3
  8184c0:	01474bc4 	movi	r5,7471
  8184c4:	e13ffb17 	ldw	r4,-20(fp)
  8184c8:	08305040 	call	830504 <__mulsi3>
  8184cc:	1007883a 	mov	r3,r2
  8184d0:	00a00014 	movui	r2,32768
  8184d4:	1885883a 	add	r2,r3,r2
  8184d8:	80800015 	stw	r2,0(r16)
  8184dc:	e0bffb17 	ldw	r2,-20(fp)
  8184e0:	10800044 	addi	r2,r2,1
  8184e4:	e0bffb15 	stw	r2,-20(fp)
  8184e8:	e0bffb17 	ldw	r2,-20(fp)
  8184ec:	10804010 	cmplti	r2,r2,256
  8184f0:	103fd71e 	bne	r2,zero,818450 <__alt_mem_epcs_flash_controller_0+0xff80f450>
  8184f4:	0001883a 	nop
  8184f8:	e6ffff04 	addi	sp,fp,-4
  8184fc:	dfc00217 	ldw	ra,8(sp)
  818500:	df000117 	ldw	fp,4(sp)
  818504:	dc000017 	ldw	r16,0(sp)
  818508:	dec00304 	addi	sp,sp,12
  81850c:	f800283a 	ret

00818510 <rgb_gray_convert>:
  818510:	defff004 	addi	sp,sp,-64
  818514:	df000f15 	stw	fp,60(sp)
  818518:	ddc00e15 	stw	r23,56(sp)
  81851c:	dd800d15 	stw	r22,52(sp)
  818520:	dd400c15 	stw	r21,48(sp)
  818524:	dd000b15 	stw	r20,44(sp)
  818528:	dcc00a15 	stw	r19,40(sp)
  81852c:	dc800915 	stw	r18,36(sp)
  818530:	dc400815 	stw	r17,32(sp)
  818534:	dc000715 	stw	r16,28(sp)
  818538:	df000f04 	addi	fp,sp,60
  81853c:	e13ff315 	stw	r4,-52(fp)
  818540:	e17ff415 	stw	r5,-48(fp)
  818544:	e1bff515 	stw	r6,-44(fp)
  818548:	e1fff615 	stw	r7,-40(fp)
  81854c:	e0bff317 	ldw	r2,-52(fp)
  818550:	10807817 	ldw	r2,480(r2)
  818554:	e0bff115 	stw	r2,-60(fp)
  818558:	e0bff117 	ldw	r2,-60(fp)
  81855c:	14400617 	ldw	r17,24(r2)
  818560:	e0bff317 	ldw	r2,-52(fp)
  818564:	10801c17 	ldw	r2,112(r2)
  818568:	e0bff215 	stw	r2,-56(fp)
  81856c:	00004306 	br	81867c <rgb_gray_convert+0x16c>
  818570:	e0bff417 	ldw	r2,-48(fp)
  818574:	10c00017 	ldw	r3,0(r2)
  818578:	e0bff517 	ldw	r2,-44(fp)
  81857c:	1085883a 	add	r2,r2,r2
  818580:	1085883a 	add	r2,r2,r2
  818584:	1885883a 	add	r2,r3,r2
  818588:	14800017 	ldw	r18,0(r2)
  81858c:	e0bff417 	ldw	r2,-48(fp)
  818590:	10800104 	addi	r2,r2,4
  818594:	10c00017 	ldw	r3,0(r2)
  818598:	e0bff517 	ldw	r2,-44(fp)
  81859c:	1085883a 	add	r2,r2,r2
  8185a0:	1085883a 	add	r2,r2,r2
  8185a4:	1885883a 	add	r2,r3,r2
  8185a8:	14c00017 	ldw	r19,0(r2)
  8185ac:	e0bff417 	ldw	r2,-48(fp)
  8185b0:	10800204 	addi	r2,r2,8
  8185b4:	10c00017 	ldw	r3,0(r2)
  8185b8:	e0bff517 	ldw	r2,-44(fp)
  8185bc:	1085883a 	add	r2,r2,r2
  8185c0:	1085883a 	add	r2,r2,r2
  8185c4:	1885883a 	add	r2,r3,r2
  8185c8:	15000017 	ldw	r20,0(r2)
  8185cc:	e0bff517 	ldw	r2,-44(fp)
  8185d0:	10800044 	addi	r2,r2,1
  8185d4:	e0bff515 	stw	r2,-44(fp)
  8185d8:	e0bff617 	ldw	r2,-40(fp)
  8185dc:	10c00104 	addi	r3,r2,4
  8185e0:	e0fff615 	stw	r3,-40(fp)
  8185e4:	15400017 	ldw	r21,0(r2)
  8185e8:	0021883a 	mov	r16,zero
  8185ec:	00002106 	br	818674 <rgb_gray_convert+0x164>
  8185f0:	9405883a 	add	r2,r18,r16
  8185f4:	10800003 	ldbu	r2,0(r2)
  8185f8:	10803fcc 	andi	r2,r2,255
  8185fc:	e0bff715 	stw	r2,-36(fp)
  818600:	9c05883a 	add	r2,r19,r16
  818604:	10800003 	ldbu	r2,0(r2)
  818608:	15c03fcc 	andi	r23,r2,255
  81860c:	a405883a 	add	r2,r20,r16
  818610:	10800003 	ldbu	r2,0(r2)
  818614:	15803fcc 	andi	r22,r2,255
  818618:	ac07883a 	add	r3,r21,r16
  81861c:	e0bff717 	ldw	r2,-36(fp)
  818620:	1085883a 	add	r2,r2,r2
  818624:	1085883a 	add	r2,r2,r2
  818628:	8885883a 	add	r2,r17,r2
  81862c:	11000017 	ldw	r4,0(r2)
  818630:	b805883a 	mov	r2,r23
  818634:	10804004 	addi	r2,r2,256
  818638:	1085883a 	add	r2,r2,r2
  81863c:	1085883a 	add	r2,r2,r2
  818640:	8885883a 	add	r2,r17,r2
  818644:	10800017 	ldw	r2,0(r2)
  818648:	2089883a 	add	r4,r4,r2
  81864c:	b005883a 	mov	r2,r22
  818650:	10808004 	addi	r2,r2,512
  818654:	1085883a 	add	r2,r2,r2
  818658:	1085883a 	add	r2,r2,r2
  81865c:	8885883a 	add	r2,r17,r2
  818660:	10800017 	ldw	r2,0(r2)
  818664:	2085883a 	add	r2,r4,r2
  818668:	1005d43a 	srai	r2,r2,16
  81866c:	18800005 	stb	r2,0(r3)
  818670:	84000044 	addi	r16,r16,1
  818674:	e0bff217 	ldw	r2,-56(fp)
  818678:	80bfdd36 	bltu	r16,r2,8185f0 <__alt_mem_epcs_flash_controller_0+0xff80f5f0>
  81867c:	e0800117 	ldw	r2,4(fp)
  818680:	10bfffc4 	addi	r2,r2,-1
  818684:	e0800115 	stw	r2,4(fp)
  818688:	e0800117 	ldw	r2,4(fp)
  81868c:	103fb80e 	bge	r2,zero,818570 <__alt_mem_epcs_flash_controller_0+0xff80f570>
  818690:	0001883a 	nop
  818694:	e6fff804 	addi	sp,fp,-32
  818698:	df000817 	ldw	fp,32(sp)
  81869c:	ddc00717 	ldw	r23,28(sp)
  8186a0:	dd800617 	ldw	r22,24(sp)
  8186a4:	dd400517 	ldw	r21,20(sp)
  8186a8:	dd000417 	ldw	r20,16(sp)
  8186ac:	dcc00317 	ldw	r19,12(sp)
  8186b0:	dc800217 	ldw	r18,8(sp)
  8186b4:	dc400117 	ldw	r17,4(sp)
  8186b8:	dc000017 	ldw	r16,0(sp)
  8186bc:	dec00904 	addi	sp,sp,36
  8186c0:	f800283a 	ret

008186c4 <rgb1_rgb_convert>:
  8186c4:	defff204 	addi	sp,sp,-56
  8186c8:	df000d15 	stw	fp,52(sp)
  8186cc:	ddc00c15 	stw	r23,48(sp)
  8186d0:	dd800b15 	stw	r22,44(sp)
  8186d4:	dd400a15 	stw	r21,40(sp)
  8186d8:	dd000915 	stw	r20,36(sp)
  8186dc:	dcc00815 	stw	r19,32(sp)
  8186e0:	dc800715 	stw	r18,28(sp)
  8186e4:	dc400615 	stw	r17,24(sp)
  8186e8:	dc000515 	stw	r16,20(sp)
  8186ec:	df000d04 	addi	fp,sp,52
  8186f0:	e13ff415 	stw	r4,-48(fp)
  8186f4:	e17ff515 	stw	r5,-44(fp)
  8186f8:	e1bff615 	stw	r6,-40(fp)
  8186fc:	e1fff715 	stw	r7,-36(fp)
  818700:	e0bff417 	ldw	r2,-48(fp)
  818704:	10801c17 	ldw	r2,112(r2)
  818708:	e0bff315 	stw	r2,-52(fp)
  81870c:	00003b06 	br	8187fc <rgb1_rgb_convert+0x138>
  818710:	e0bff517 	ldw	r2,-44(fp)
  818714:	10c00017 	ldw	r3,0(r2)
  818718:	e0bff617 	ldw	r2,-40(fp)
  81871c:	1085883a 	add	r2,r2,r2
  818720:	1085883a 	add	r2,r2,r2
  818724:	1885883a 	add	r2,r3,r2
  818728:	14c00017 	ldw	r19,0(r2)
  81872c:	e0bff517 	ldw	r2,-44(fp)
  818730:	10800104 	addi	r2,r2,4
  818734:	10c00017 	ldw	r3,0(r2)
  818738:	e0bff617 	ldw	r2,-40(fp)
  81873c:	1085883a 	add	r2,r2,r2
  818740:	1085883a 	add	r2,r2,r2
  818744:	1885883a 	add	r2,r3,r2
  818748:	15000017 	ldw	r20,0(r2)
  81874c:	e0bff517 	ldw	r2,-44(fp)
  818750:	10800204 	addi	r2,r2,8
  818754:	10c00017 	ldw	r3,0(r2)
  818758:	e0bff617 	ldw	r2,-40(fp)
  81875c:	1085883a 	add	r2,r2,r2
  818760:	1085883a 	add	r2,r2,r2
  818764:	1885883a 	add	r2,r3,r2
  818768:	15400017 	ldw	r21,0(r2)
  81876c:	e0bff617 	ldw	r2,-40(fp)
  818770:	10800044 	addi	r2,r2,1
  818774:	e0bff615 	stw	r2,-40(fp)
  818778:	e0bff717 	ldw	r2,-36(fp)
  81877c:	10c00104 	addi	r3,r2,4
  818780:	e0fff715 	stw	r3,-36(fp)
  818784:	14400017 	ldw	r17,0(r2)
  818788:	0021883a 	mov	r16,zero
  81878c:	00001906 	br	8187f4 <rgb1_rgb_convert+0x130>
  818790:	9c05883a 	add	r2,r19,r16
  818794:	10800003 	ldbu	r2,0(r2)
  818798:	15c03fcc 	andi	r23,r2,255
  81879c:	a405883a 	add	r2,r20,r16
  8187a0:	10800003 	ldbu	r2,0(r2)
  8187a4:	14803fcc 	andi	r18,r2,255
  8187a8:	ac05883a 	add	r2,r21,r16
  8187ac:	10800003 	ldbu	r2,0(r2)
  8187b0:	15803fcc 	andi	r22,r2,255
  8187b4:	b807883a 	mov	r3,r23
  8187b8:	9005883a 	mov	r2,r18
  8187bc:	1885883a 	add	r2,r3,r2
  8187c0:	10bfe004 	addi	r2,r2,-128
  8187c4:	88800005 	stb	r2,0(r17)
  8187c8:	88800044 	addi	r2,r17,1
  8187cc:	9007883a 	mov	r3,r18
  8187d0:	10c00005 	stb	r3,0(r2)
  8187d4:	88800084 	addi	r2,r17,2
  8187d8:	b009883a 	mov	r4,r22
  8187dc:	9007883a 	mov	r3,r18
  8187e0:	20c7883a 	add	r3,r4,r3
  8187e4:	18ffe004 	addi	r3,r3,-128
  8187e8:	10c00005 	stb	r3,0(r2)
  8187ec:	8c4000c4 	addi	r17,r17,3
  8187f0:	84000044 	addi	r16,r16,1
  8187f4:	e0bff317 	ldw	r2,-52(fp)
  8187f8:	80bfe536 	bltu	r16,r2,818790 <__alt_mem_epcs_flash_controller_0+0xff80f790>
  8187fc:	e0800117 	ldw	r2,4(fp)
  818800:	10bfffc4 	addi	r2,r2,-1
  818804:	e0800115 	stw	r2,4(fp)
  818808:	e0800117 	ldw	r2,4(fp)
  81880c:	103fc00e 	bge	r2,zero,818710 <__alt_mem_epcs_flash_controller_0+0xff80f710>
  818810:	0001883a 	nop
  818814:	e6fff804 	addi	sp,fp,-32
  818818:	df000817 	ldw	fp,32(sp)
  81881c:	ddc00717 	ldw	r23,28(sp)
  818820:	dd800617 	ldw	r22,24(sp)
  818824:	dd400517 	ldw	r21,20(sp)
  818828:	dd000417 	ldw	r20,16(sp)
  81882c:	dcc00317 	ldw	r19,12(sp)
  818830:	dc800217 	ldw	r18,8(sp)
  818834:	dc400117 	ldw	r17,4(sp)
  818838:	dc000017 	ldw	r16,0(sp)
  81883c:	dec00904 	addi	sp,sp,36
  818840:	f800283a 	ret

00818844 <rgb1_gray_convert>:
  818844:	defff004 	addi	sp,sp,-64
  818848:	df000f15 	stw	fp,60(sp)
  81884c:	ddc00e15 	stw	r23,56(sp)
  818850:	dd800d15 	stw	r22,52(sp)
  818854:	dd400c15 	stw	r21,48(sp)
  818858:	dd000b15 	stw	r20,44(sp)
  81885c:	dcc00a15 	stw	r19,40(sp)
  818860:	dc800915 	stw	r18,36(sp)
  818864:	dc400815 	stw	r17,32(sp)
  818868:	dc000715 	stw	r16,28(sp)
  81886c:	df000f04 	addi	fp,sp,60
  818870:	e13ff315 	stw	r4,-52(fp)
  818874:	e17ff415 	stw	r5,-48(fp)
  818878:	e1bff515 	stw	r6,-44(fp)
  81887c:	e1fff615 	stw	r7,-40(fp)
  818880:	e0bff317 	ldw	r2,-52(fp)
  818884:	10807817 	ldw	r2,480(r2)
  818888:	e0bff115 	stw	r2,-60(fp)
  81888c:	e0bff117 	ldw	r2,-60(fp)
  818890:	14400617 	ldw	r17,24(r2)
  818894:	e0bff317 	ldw	r2,-52(fp)
  818898:	10801c17 	ldw	r2,112(r2)
  81889c:	e0bff215 	stw	r2,-56(fp)
  8188a0:	00004a06 	br	8189cc <rgb1_gray_convert+0x188>
  8188a4:	e0bff417 	ldw	r2,-48(fp)
  8188a8:	10c00017 	ldw	r3,0(r2)
  8188ac:	e0bff517 	ldw	r2,-44(fp)
  8188b0:	1085883a 	add	r2,r2,r2
  8188b4:	1085883a 	add	r2,r2,r2
  8188b8:	1885883a 	add	r2,r3,r2
  8188bc:	15400017 	ldw	r21,0(r2)
  8188c0:	e0bff417 	ldw	r2,-48(fp)
  8188c4:	10800104 	addi	r2,r2,4
  8188c8:	10c00017 	ldw	r3,0(r2)
  8188cc:	e0bff517 	ldw	r2,-44(fp)
  8188d0:	1085883a 	add	r2,r2,r2
  8188d4:	1085883a 	add	r2,r2,r2
  8188d8:	1885883a 	add	r2,r3,r2
  8188dc:	15800017 	ldw	r22,0(r2)
  8188e0:	e0bff417 	ldw	r2,-48(fp)
  8188e4:	10800204 	addi	r2,r2,8
  8188e8:	10c00017 	ldw	r3,0(r2)
  8188ec:	e0bff517 	ldw	r2,-44(fp)
  8188f0:	1085883a 	add	r2,r2,r2
  8188f4:	1085883a 	add	r2,r2,r2
  8188f8:	1885883a 	add	r2,r3,r2
  8188fc:	15c00017 	ldw	r23,0(r2)
  818900:	e0bff517 	ldw	r2,-44(fp)
  818904:	10800044 	addi	r2,r2,1
  818908:	e0bff515 	stw	r2,-44(fp)
  81890c:	e0bff617 	ldw	r2,-40(fp)
  818910:	10c00104 	addi	r3,r2,4
  818914:	e0fff615 	stw	r3,-40(fp)
  818918:	10800017 	ldw	r2,0(r2)
  81891c:	e0bff715 	stw	r2,-36(fp)
  818920:	0021883a 	mov	r16,zero
  818924:	00002706 	br	8189c4 <rgb1_gray_convert+0x180>
  818928:	ac05883a 	add	r2,r21,r16
  81892c:	10800003 	ldbu	r2,0(r2)
  818930:	15003fcc 	andi	r20,r2,255
  818934:	b405883a 	add	r2,r22,r16
  818938:	10800003 	ldbu	r2,0(r2)
  81893c:	14c03fcc 	andi	r19,r2,255
  818940:	bc05883a 	add	r2,r23,r16
  818944:	10800003 	ldbu	r2,0(r2)
  818948:	14803fcc 	andi	r18,r2,255
  81894c:	a4c5883a 	add	r2,r20,r19
  818950:	10bfe004 	addi	r2,r2,-128
  818954:	15003fcc 	andi	r20,r2,255
  818958:	94c5883a 	add	r2,r18,r19
  81895c:	10bfe004 	addi	r2,r2,-128
  818960:	14803fcc 	andi	r18,r2,255
  818964:	e0bff717 	ldw	r2,-36(fp)
  818968:	1407883a 	add	r3,r2,r16
  81896c:	a005883a 	mov	r2,r20
  818970:	1085883a 	add	r2,r2,r2
  818974:	1085883a 	add	r2,r2,r2
  818978:	8885883a 	add	r2,r17,r2
  81897c:	11000017 	ldw	r4,0(r2)
  818980:	9805883a 	mov	r2,r19
  818984:	10804004 	addi	r2,r2,256
  818988:	1085883a 	add	r2,r2,r2
  81898c:	1085883a 	add	r2,r2,r2
  818990:	8885883a 	add	r2,r17,r2
  818994:	10800017 	ldw	r2,0(r2)
  818998:	2089883a 	add	r4,r4,r2
  81899c:	9005883a 	mov	r2,r18
  8189a0:	10808004 	addi	r2,r2,512
  8189a4:	1085883a 	add	r2,r2,r2
  8189a8:	1085883a 	add	r2,r2,r2
  8189ac:	8885883a 	add	r2,r17,r2
  8189b0:	10800017 	ldw	r2,0(r2)
  8189b4:	2085883a 	add	r2,r4,r2
  8189b8:	1005d43a 	srai	r2,r2,16
  8189bc:	18800005 	stb	r2,0(r3)
  8189c0:	84000044 	addi	r16,r16,1
  8189c4:	e0bff217 	ldw	r2,-56(fp)
  8189c8:	80bfd736 	bltu	r16,r2,818928 <__alt_mem_epcs_flash_controller_0+0xff80f928>
  8189cc:	e0800117 	ldw	r2,4(fp)
  8189d0:	10bfffc4 	addi	r2,r2,-1
  8189d4:	e0800115 	stw	r2,4(fp)
  8189d8:	e0800117 	ldw	r2,4(fp)
  8189dc:	103fb10e 	bge	r2,zero,8188a4 <__alt_mem_epcs_flash_controller_0+0xff80f8a4>
  8189e0:	0001883a 	nop
  8189e4:	e6fff804 	addi	sp,fp,-32
  8189e8:	df000817 	ldw	fp,32(sp)
  8189ec:	ddc00717 	ldw	r23,28(sp)
  8189f0:	dd800617 	ldw	r22,24(sp)
  8189f4:	dd400517 	ldw	r21,20(sp)
  8189f8:	dd000417 	ldw	r20,16(sp)
  8189fc:	dcc00317 	ldw	r19,12(sp)
  818a00:	dc800217 	ldw	r18,8(sp)
  818a04:	dc400117 	ldw	r17,4(sp)
  818a08:	dc000017 	ldw	r16,0(sp)
  818a0c:	dec00904 	addi	sp,sp,36
  818a10:	f800283a 	ret

00818a14 <rgb_convert>:
  818a14:	defff504 	addi	sp,sp,-44
  818a18:	df000a15 	stw	fp,40(sp)
  818a1c:	dd000915 	stw	r20,36(sp)
  818a20:	dcc00815 	stw	r19,32(sp)
  818a24:	dc800715 	stw	r18,28(sp)
  818a28:	dc400615 	stw	r17,24(sp)
  818a2c:	dc000515 	stw	r16,20(sp)
  818a30:	df000a04 	addi	fp,sp,40
  818a34:	e13ff715 	stw	r4,-36(fp)
  818a38:	e17ff815 	stw	r5,-32(fp)
  818a3c:	e1bff915 	stw	r6,-28(fp)
  818a40:	e1fffa15 	stw	r7,-24(fp)
  818a44:	e0bff717 	ldw	r2,-36(fp)
  818a48:	10801c17 	ldw	r2,112(r2)
  818a4c:	e0bff615 	stw	r2,-40(fp)
  818a50:	00002f06 	br	818b10 <rgb_convert+0xfc>
  818a54:	e0bff817 	ldw	r2,-32(fp)
  818a58:	10c00017 	ldw	r3,0(r2)
  818a5c:	e0bff917 	ldw	r2,-28(fp)
  818a60:	1085883a 	add	r2,r2,r2
  818a64:	1085883a 	add	r2,r2,r2
  818a68:	1885883a 	add	r2,r3,r2
  818a6c:	14800017 	ldw	r18,0(r2)
  818a70:	e0bff817 	ldw	r2,-32(fp)
  818a74:	10800104 	addi	r2,r2,4
  818a78:	10c00017 	ldw	r3,0(r2)
  818a7c:	e0bff917 	ldw	r2,-28(fp)
  818a80:	1085883a 	add	r2,r2,r2
  818a84:	1085883a 	add	r2,r2,r2
  818a88:	1885883a 	add	r2,r3,r2
  818a8c:	14c00017 	ldw	r19,0(r2)
  818a90:	e0bff817 	ldw	r2,-32(fp)
  818a94:	10800204 	addi	r2,r2,8
  818a98:	10c00017 	ldw	r3,0(r2)
  818a9c:	e0bff917 	ldw	r2,-28(fp)
  818aa0:	1085883a 	add	r2,r2,r2
  818aa4:	1085883a 	add	r2,r2,r2
  818aa8:	1885883a 	add	r2,r3,r2
  818aac:	15000017 	ldw	r20,0(r2)
  818ab0:	e0bff917 	ldw	r2,-28(fp)
  818ab4:	10800044 	addi	r2,r2,1
  818ab8:	e0bff915 	stw	r2,-28(fp)
  818abc:	e0bffa17 	ldw	r2,-24(fp)
  818ac0:	10c00104 	addi	r3,r2,4
  818ac4:	e0fffa15 	stw	r3,-24(fp)
  818ac8:	14400017 	ldw	r17,0(r2)
  818acc:	0021883a 	mov	r16,zero
  818ad0:	00000d06 	br	818b08 <rgb_convert+0xf4>
  818ad4:	9405883a 	add	r2,r18,r16
  818ad8:	10800003 	ldbu	r2,0(r2)
  818adc:	88800005 	stb	r2,0(r17)
  818ae0:	88800044 	addi	r2,r17,1
  818ae4:	9c07883a 	add	r3,r19,r16
  818ae8:	18c00003 	ldbu	r3,0(r3)
  818aec:	10c00005 	stb	r3,0(r2)
  818af0:	88800084 	addi	r2,r17,2
  818af4:	a407883a 	add	r3,r20,r16
  818af8:	18c00003 	ldbu	r3,0(r3)
  818afc:	10c00005 	stb	r3,0(r2)
  818b00:	8c4000c4 	addi	r17,r17,3
  818b04:	84000044 	addi	r16,r16,1
  818b08:	e0bff617 	ldw	r2,-40(fp)
  818b0c:	80bff136 	bltu	r16,r2,818ad4 <__alt_mem_epcs_flash_controller_0+0xff80fad4>
  818b10:	e0800117 	ldw	r2,4(fp)
  818b14:	10bfffc4 	addi	r2,r2,-1
  818b18:	e0800115 	stw	r2,4(fp)
  818b1c:	e0800117 	ldw	r2,4(fp)
  818b20:	103fcc0e 	bge	r2,zero,818a54 <__alt_mem_epcs_flash_controller_0+0xff80fa54>
  818b24:	0001883a 	nop
  818b28:	e6fffb04 	addi	sp,fp,-20
  818b2c:	df000517 	ldw	fp,20(sp)
  818b30:	dd000417 	ldw	r20,16(sp)
  818b34:	dcc00317 	ldw	r19,12(sp)
  818b38:	dc800217 	ldw	r18,8(sp)
  818b3c:	dc400117 	ldw	r17,4(sp)
  818b40:	dc000017 	ldw	r16,0(sp)
  818b44:	dec00604 	addi	sp,sp,24
  818b48:	f800283a 	ret

00818b4c <null_convert>:
  818b4c:	defff504 	addi	sp,sp,-44
  818b50:	df000a15 	stw	fp,40(sp)
  818b54:	dcc00915 	stw	r19,36(sp)
  818b58:	dc800815 	stw	r18,32(sp)
  818b5c:	dc400715 	stw	r17,28(sp)
  818b60:	dc000615 	stw	r16,24(sp)
  818b64:	df000a04 	addi	fp,sp,40
  818b68:	e13ff815 	stw	r4,-32(fp)
  818b6c:	e17ff915 	stw	r5,-28(fp)
  818b70:	e1bffa15 	stw	r6,-24(fp)
  818b74:	e1fffb15 	stw	r7,-20(fp)
  818b78:	e0bff817 	ldw	r2,-32(fp)
  818b7c:	14800917 	ldw	r18,36(r2)
  818b80:	e0bff817 	ldw	r2,-32(fp)
  818b84:	10801c17 	ldw	r2,112(r2)
  818b88:	e0bff715 	stw	r2,-36(fp)
  818b8c:	00002806 	br	818c30 <null_convert+0xe4>
  818b90:	e03ff615 	stw	zero,-40(fp)
  818b94:	00001e06 	br	818c10 <null_convert+0xc4>
  818b98:	e0bff617 	ldw	r2,-40(fp)
  818b9c:	1085883a 	add	r2,r2,r2
  818ba0:	1085883a 	add	r2,r2,r2
  818ba4:	1007883a 	mov	r3,r2
  818ba8:	e0bff917 	ldw	r2,-28(fp)
  818bac:	10c5883a 	add	r2,r2,r3
  818bb0:	10c00017 	ldw	r3,0(r2)
  818bb4:	e0bffa17 	ldw	r2,-24(fp)
  818bb8:	1085883a 	add	r2,r2,r2
  818bbc:	1085883a 	add	r2,r2,r2
  818bc0:	1885883a 	add	r2,r3,r2
  818bc4:	14c00017 	ldw	r19,0(r2)
  818bc8:	e0bffb17 	ldw	r2,-20(fp)
  818bcc:	10c00017 	ldw	r3,0(r2)
  818bd0:	e0bff617 	ldw	r2,-40(fp)
  818bd4:	18a1883a 	add	r16,r3,r2
  818bd8:	0023883a 	mov	r17,zero
  818bdc:	00000706 	br	818bfc <null_convert+0xb0>
  818be0:	9805883a 	mov	r2,r19
  818be4:	14c00044 	addi	r19,r2,1
  818be8:	10800003 	ldbu	r2,0(r2)
  818bec:	80800005 	stb	r2,0(r16)
  818bf0:	9005883a 	mov	r2,r18
  818bf4:	80a1883a 	add	r16,r16,r2
  818bf8:	8c400044 	addi	r17,r17,1
  818bfc:	e0bff717 	ldw	r2,-36(fp)
  818c00:	88bff736 	bltu	r17,r2,818be0 <__alt_mem_epcs_flash_controller_0+0xff80fbe0>
  818c04:	e0bff617 	ldw	r2,-40(fp)
  818c08:	10800044 	addi	r2,r2,1
  818c0c:	e0bff615 	stw	r2,-40(fp)
  818c10:	e0bff617 	ldw	r2,-40(fp)
  818c14:	14bfe016 	blt	r2,r18,818b98 <__alt_mem_epcs_flash_controller_0+0xff80fb98>
  818c18:	e0bffa17 	ldw	r2,-24(fp)
  818c1c:	10800044 	addi	r2,r2,1
  818c20:	e0bffa15 	stw	r2,-24(fp)
  818c24:	e0bffb17 	ldw	r2,-20(fp)
  818c28:	10800104 	addi	r2,r2,4
  818c2c:	e0bffb15 	stw	r2,-20(fp)
  818c30:	e0800117 	ldw	r2,4(fp)
  818c34:	10bfffc4 	addi	r2,r2,-1
  818c38:	e0800115 	stw	r2,4(fp)
  818c3c:	e0800117 	ldw	r2,4(fp)
  818c40:	103fd30e 	bge	r2,zero,818b90 <__alt_mem_epcs_flash_controller_0+0xff80fb90>
  818c44:	0001883a 	nop
  818c48:	e6fffc04 	addi	sp,fp,-16
  818c4c:	df000417 	ldw	fp,16(sp)
  818c50:	dcc00317 	ldw	r19,12(sp)
  818c54:	dc800217 	ldw	r18,8(sp)
  818c58:	dc400117 	ldw	r17,4(sp)
  818c5c:	dc000017 	ldw	r16,0(sp)
  818c60:	dec00504 	addi	sp,sp,20
  818c64:	f800283a 	ret

00818c68 <grayscale_convert>:
  818c68:	defff804 	addi	sp,sp,-32
  818c6c:	dfc00715 	stw	ra,28(sp)
  818c70:	df000615 	stw	fp,24(sp)
  818c74:	df000604 	addi	fp,sp,24
  818c78:	e13ffc15 	stw	r4,-16(fp)
  818c7c:	e17ffd15 	stw	r5,-12(fp)
  818c80:	e1bffe15 	stw	r6,-8(fp)
  818c84:	e1ffff15 	stw	r7,-4(fp)
  818c88:	e0bffd17 	ldw	r2,-12(fp)
  818c8c:	10c00017 	ldw	r3,0(r2)
  818c90:	e13ffe17 	ldw	r4,-8(fp)
  818c94:	e0bffc17 	ldw	r2,-16(fp)
  818c98:	10801c17 	ldw	r2,112(r2)
  818c9c:	d8800115 	stw	r2,4(sp)
  818ca0:	e0800217 	ldw	r2,8(fp)
  818ca4:	d8800015 	stw	r2,0(sp)
  818ca8:	000f883a 	mov	r7,zero
  818cac:	e1bfff17 	ldw	r6,-4(fp)
  818cb0:	200b883a 	mov	r5,r4
  818cb4:	1809883a 	mov	r4,r3
  818cb8:	0813f4c0 	call	813f4c <jcopy_sample_rows>
  818cbc:	0001883a 	nop
  818cc0:	e037883a 	mov	sp,fp
  818cc4:	dfc00117 	ldw	ra,4(sp)
  818cc8:	df000017 	ldw	fp,0(sp)
  818ccc:	dec00204 	addi	sp,sp,8
  818cd0:	f800283a 	ret

00818cd4 <gray_rgb_convert>:
  818cd4:	defff704 	addi	sp,sp,-36
  818cd8:	df000815 	stw	fp,32(sp)
  818cdc:	dc800715 	stw	r18,28(sp)
  818ce0:	dc400615 	stw	r17,24(sp)
  818ce4:	dc000515 	stw	r16,20(sp)
  818ce8:	df000804 	addi	fp,sp,32
  818cec:	e13ff915 	stw	r4,-28(fp)
  818cf0:	e17ffa15 	stw	r5,-24(fp)
  818cf4:	e1bffb15 	stw	r6,-20(fp)
  818cf8:	e1fffc15 	stw	r7,-16(fp)
  818cfc:	e0bff917 	ldw	r2,-28(fp)
  818d00:	10801c17 	ldw	r2,112(r2)
  818d04:	e0bff815 	stw	r2,-32(fp)
  818d08:	00001c06 	br	818d7c <gray_rgb_convert+0xa8>
  818d0c:	e0bffa17 	ldw	r2,-24(fp)
  818d10:	10c00017 	ldw	r3,0(r2)
  818d14:	e0bffb17 	ldw	r2,-20(fp)
  818d18:	11000044 	addi	r4,r2,1
  818d1c:	e13ffb15 	stw	r4,-20(fp)
  818d20:	1085883a 	add	r2,r2,r2
  818d24:	1085883a 	add	r2,r2,r2
  818d28:	1885883a 	add	r2,r3,r2
  818d2c:	14800017 	ldw	r18,0(r2)
  818d30:	e0bffc17 	ldw	r2,-16(fp)
  818d34:	10c00104 	addi	r3,r2,4
  818d38:	e0fffc15 	stw	r3,-16(fp)
  818d3c:	14000017 	ldw	r16,0(r2)
  818d40:	0023883a 	mov	r17,zero
  818d44:	00000b06 	br	818d74 <gray_rgb_convert+0xa0>
  818d48:	80800044 	addi	r2,r16,1
  818d4c:	80c00084 	addi	r3,r16,2
  818d50:	9449883a 	add	r4,r18,r17
  818d54:	21000003 	ldbu	r4,0(r4)
  818d58:	19000005 	stb	r4,0(r3)
  818d5c:	18c00003 	ldbu	r3,0(r3)
  818d60:	10c00005 	stb	r3,0(r2)
  818d64:	10800003 	ldbu	r2,0(r2)
  818d68:	80800005 	stb	r2,0(r16)
  818d6c:	840000c4 	addi	r16,r16,3
  818d70:	8c400044 	addi	r17,r17,1
  818d74:	e0bff817 	ldw	r2,-32(fp)
  818d78:	88bff336 	bltu	r17,r2,818d48 <__alt_mem_epcs_flash_controller_0+0xff80fd48>
  818d7c:	e0800117 	ldw	r2,4(fp)
  818d80:	10bfffc4 	addi	r2,r2,-1
  818d84:	e0800115 	stw	r2,4(fp)
  818d88:	e0800117 	ldw	r2,4(fp)
  818d8c:	103fdf0e 	bge	r2,zero,818d0c <__alt_mem_epcs_flash_controller_0+0xff80fd0c>
  818d90:	0001883a 	nop
  818d94:	e6fffd04 	addi	sp,fp,-12
  818d98:	df000317 	ldw	fp,12(sp)
  818d9c:	dc800217 	ldw	r18,8(sp)
  818da0:	dc400117 	ldw	r17,4(sp)
  818da4:	dc000017 	ldw	r16,0(sp)
  818da8:	dec00404 	addi	sp,sp,16
  818dac:	f800283a 	ret

00818db0 <ycck_cmyk_convert>:
  818db0:	deffeb04 	addi	sp,sp,-84
  818db4:	df001415 	stw	fp,80(sp)
  818db8:	ddc01315 	stw	r23,76(sp)
  818dbc:	dd801215 	stw	r22,72(sp)
  818dc0:	dd401115 	stw	r21,68(sp)
  818dc4:	dd001015 	stw	r20,64(sp)
  818dc8:	dcc00f15 	stw	r19,60(sp)
  818dcc:	dc800e15 	stw	r18,56(sp)
  818dd0:	dc400d15 	stw	r17,52(sp)
  818dd4:	dc000c15 	stw	r16,48(sp)
  818dd8:	df001404 	addi	fp,sp,80
  818ddc:	e13fee15 	stw	r4,-72(fp)
  818de0:	e17fef15 	stw	r5,-68(fp)
  818de4:	e1bff015 	stw	r6,-64(fp)
  818de8:	e1fff115 	stw	r7,-60(fp)
  818dec:	e0bfee17 	ldw	r2,-72(fp)
  818df0:	10807817 	ldw	r2,480(r2)
  818df4:	e0bfec15 	stw	r2,-80(fp)
  818df8:	e0bfee17 	ldw	r2,-72(fp)
  818dfc:	10801c17 	ldw	r2,112(r2)
  818e00:	e0bfed15 	stw	r2,-76(fp)
  818e04:	e0bfee17 	ldw	r2,-72(fp)
  818e08:	14805417 	ldw	r18,336(r2)
  818e0c:	e0bfec17 	ldw	r2,-80(fp)
  818e10:	15000217 	ldw	r20,8(r2)
  818e14:	e0bfec17 	ldw	r2,-80(fp)
  818e18:	15400317 	ldw	r21,12(r2)
  818e1c:	e0bfec17 	ldw	r2,-80(fp)
  818e20:	15800417 	ldw	r22,16(r2)
  818e24:	e0bfec17 	ldw	r2,-80(fp)
  818e28:	15c00517 	ldw	r23,20(r2)
  818e2c:	00006d06 	br	818fe4 <ycck_cmyk_convert+0x234>
  818e30:	e0bfef17 	ldw	r2,-68(fp)
  818e34:	10c00017 	ldw	r3,0(r2)
  818e38:	e0bff017 	ldw	r2,-64(fp)
  818e3c:	1085883a 	add	r2,r2,r2
  818e40:	1085883a 	add	r2,r2,r2
  818e44:	1885883a 	add	r2,r3,r2
  818e48:	10800017 	ldw	r2,0(r2)
  818e4c:	e0bff215 	stw	r2,-56(fp)
  818e50:	e0bfef17 	ldw	r2,-68(fp)
  818e54:	10800104 	addi	r2,r2,4
  818e58:	10c00017 	ldw	r3,0(r2)
  818e5c:	e0bff017 	ldw	r2,-64(fp)
  818e60:	1085883a 	add	r2,r2,r2
  818e64:	1085883a 	add	r2,r2,r2
  818e68:	1885883a 	add	r2,r3,r2
  818e6c:	10800017 	ldw	r2,0(r2)
  818e70:	e0bff315 	stw	r2,-52(fp)
  818e74:	e0bfef17 	ldw	r2,-68(fp)
  818e78:	10800204 	addi	r2,r2,8
  818e7c:	10c00017 	ldw	r3,0(r2)
  818e80:	e0bff017 	ldw	r2,-64(fp)
  818e84:	1085883a 	add	r2,r2,r2
  818e88:	1085883a 	add	r2,r2,r2
  818e8c:	1885883a 	add	r2,r3,r2
  818e90:	10800017 	ldw	r2,0(r2)
  818e94:	e0bff415 	stw	r2,-48(fp)
  818e98:	e0bfef17 	ldw	r2,-68(fp)
  818e9c:	10800304 	addi	r2,r2,12
  818ea0:	10c00017 	ldw	r3,0(r2)
  818ea4:	e0bff017 	ldw	r2,-64(fp)
  818ea8:	1085883a 	add	r2,r2,r2
  818eac:	1085883a 	add	r2,r2,r2
  818eb0:	1885883a 	add	r2,r3,r2
  818eb4:	10800017 	ldw	r2,0(r2)
  818eb8:	e0bff515 	stw	r2,-44(fp)
  818ebc:	e0bff017 	ldw	r2,-64(fp)
  818ec0:	10800044 	addi	r2,r2,1
  818ec4:	e0bff015 	stw	r2,-64(fp)
  818ec8:	e0bff117 	ldw	r2,-60(fp)
  818ecc:	10c00104 	addi	r3,r2,4
  818ed0:	e0fff115 	stw	r3,-60(fp)
  818ed4:	14400017 	ldw	r17,0(r2)
  818ed8:	0021883a 	mov	r16,zero
  818edc:	00003f06 	br	818fdc <ycck_cmyk_convert+0x22c>
  818ee0:	e0fff217 	ldw	r3,-56(fp)
  818ee4:	1c05883a 	add	r2,r3,r16
  818ee8:	10800003 	ldbu	r2,0(r2)
  818eec:	14c03fcc 	andi	r19,r2,255
  818ef0:	e13ff317 	ldw	r4,-52(fp)
  818ef4:	2405883a 	add	r2,r4,r16
  818ef8:	10800003 	ldbu	r2,0(r2)
  818efc:	10803fcc 	andi	r2,r2,255
  818f00:	e0bff615 	stw	r2,-40(fp)
  818f04:	e0fff417 	ldw	r3,-48(fp)
  818f08:	1c05883a 	add	r2,r3,r16
  818f0c:	10800003 	ldbu	r2,0(r2)
  818f10:	10803fcc 	andi	r2,r2,255
  818f14:	e0bff715 	stw	r2,-36(fp)
  818f18:	e0bff717 	ldw	r2,-36(fp)
  818f1c:	1085883a 	add	r2,r2,r2
  818f20:	1085883a 	add	r2,r2,r2
  818f24:	a085883a 	add	r2,r20,r2
  818f28:	10800017 	ldw	r2,0(r2)
  818f2c:	14c5883a 	add	r2,r2,r19
  818f30:	00c03fc4 	movi	r3,255
  818f34:	1885c83a 	sub	r2,r3,r2
  818f38:	9085883a 	add	r2,r18,r2
  818f3c:	10800003 	ldbu	r2,0(r2)
  818f40:	88800005 	stb	r2,0(r17)
  818f44:	88c00044 	addi	r3,r17,1
  818f48:	e0bff617 	ldw	r2,-40(fp)
  818f4c:	1085883a 	add	r2,r2,r2
  818f50:	1085883a 	add	r2,r2,r2
  818f54:	b885883a 	add	r2,r23,r2
  818f58:	11000017 	ldw	r4,0(r2)
  818f5c:	e0bff717 	ldw	r2,-36(fp)
  818f60:	1085883a 	add	r2,r2,r2
  818f64:	1085883a 	add	r2,r2,r2
  818f68:	b085883a 	add	r2,r22,r2
  818f6c:	10800017 	ldw	r2,0(r2)
  818f70:	2085883a 	add	r2,r4,r2
  818f74:	1005d43a 	srai	r2,r2,16
  818f78:	14c5883a 	add	r2,r2,r19
  818f7c:	01003fc4 	movi	r4,255
  818f80:	2085c83a 	sub	r2,r4,r2
  818f84:	9085883a 	add	r2,r18,r2
  818f88:	10800003 	ldbu	r2,0(r2)
  818f8c:	18800005 	stb	r2,0(r3)
  818f90:	88c00084 	addi	r3,r17,2
  818f94:	e0bff617 	ldw	r2,-40(fp)
  818f98:	1085883a 	add	r2,r2,r2
  818f9c:	1085883a 	add	r2,r2,r2
  818fa0:	a885883a 	add	r2,r21,r2
  818fa4:	10800017 	ldw	r2,0(r2)
  818fa8:	14c5883a 	add	r2,r2,r19
  818fac:	01003fc4 	movi	r4,255
  818fb0:	2085c83a 	sub	r2,r4,r2
  818fb4:	9085883a 	add	r2,r18,r2
  818fb8:	10800003 	ldbu	r2,0(r2)
  818fbc:	18800005 	stb	r2,0(r3)
  818fc0:	888000c4 	addi	r2,r17,3
  818fc4:	e13ff517 	ldw	r4,-44(fp)
  818fc8:	2407883a 	add	r3,r4,r16
  818fcc:	18c00003 	ldbu	r3,0(r3)
  818fd0:	10c00005 	stb	r3,0(r2)
  818fd4:	8c400104 	addi	r17,r17,4
  818fd8:	84000044 	addi	r16,r16,1
  818fdc:	e0bfed17 	ldw	r2,-76(fp)
  818fe0:	80bfbf36 	bltu	r16,r2,818ee0 <__alt_mem_epcs_flash_controller_0+0xff80fee0>
  818fe4:	e0800117 	ldw	r2,4(fp)
  818fe8:	10bfffc4 	addi	r2,r2,-1
  818fec:	e0800115 	stw	r2,4(fp)
  818ff0:	e0800117 	ldw	r2,4(fp)
  818ff4:	103f8e0e 	bge	r2,zero,818e30 <__alt_mem_epcs_flash_controller_0+0xff80fe30>
  818ff8:	0001883a 	nop
  818ffc:	e6fff804 	addi	sp,fp,-32
  819000:	df000817 	ldw	fp,32(sp)
  819004:	ddc00717 	ldw	r23,28(sp)
  819008:	dd800617 	ldw	r22,24(sp)
  81900c:	dd400517 	ldw	r21,20(sp)
  819010:	dd000417 	ldw	r20,16(sp)
  819014:	dcc00317 	ldw	r19,12(sp)
  819018:	dc800217 	ldw	r18,8(sp)
  81901c:	dc400117 	ldw	r17,4(sp)
  819020:	dc000017 	ldw	r16,0(sp)
  819024:	dec00904 	addi	sp,sp,36
  819028:	f800283a 	ret

0081902c <start_pass_dcolor>:
  81902c:	defffe04 	addi	sp,sp,-8
  819030:	df000115 	stw	fp,4(sp)
  819034:	df000104 	addi	fp,sp,4
  819038:	e13fff15 	stw	r4,-4(fp)
  81903c:	0001883a 	nop
  819040:	e037883a 	mov	sp,fp
  819044:	df000017 	ldw	fp,0(sp)
  819048:	dec00104 	addi	sp,sp,4
  81904c:	f800283a 	ret

00819050 <jinit_color_deconverter>:
  819050:	defffa04 	addi	sp,sp,-24
  819054:	dfc00515 	stw	ra,20(sp)
  819058:	df000415 	stw	fp,16(sp)
  81905c:	dc000315 	stw	r16,12(sp)
  819060:	df000404 	addi	fp,sp,16
  819064:	e13ffe15 	stw	r4,-8(fp)
  819068:	e0bffe17 	ldw	r2,-8(fp)
  81906c:	10800117 	ldw	r2,4(r2)
  819070:	10800017 	ldw	r2,0(r2)
  819074:	01800704 	movi	r6,28
  819078:	01400044 	movi	r5,1
  81907c:	e13ffe17 	ldw	r4,-8(fp)
  819080:	103ee83a 	callr	r2
  819084:	e0bffd15 	stw	r2,-12(fp)
  819088:	e0fffd17 	ldw	r3,-12(fp)
  81908c:	e0bffe17 	ldw	r2,-8(fp)
  819090:	10c07815 	stw	r3,480(r2)
  819094:	e0fffd17 	ldw	r3,-12(fp)
  819098:	008020b4 	movhi	r2,130
  81909c:	10a40b04 	addi	r2,r2,-28628
  8190a0:	18800015 	stw	r2,0(r3)
  8190a4:	e0bffe17 	ldw	r2,-8(fp)
  8190a8:	10800a17 	ldw	r2,40(r2)
  8190ac:	10c00228 	cmpgeui	r3,r2,8
  8190b0:	1800381e 	bne	r3,zero,819194 <jinit_color_deconverter+0x144>
  8190b4:	100690ba 	slli	r3,r2,2
  8190b8:	008020b4 	movhi	r2,130
  8190bc:	10a43304 	addi	r2,r2,-28468
  8190c0:	1885883a 	add	r2,r3,r2
  8190c4:	10800017 	ldw	r2,0(r2)
  8190c8:	1000683a 	jmp	r2
  8190cc:	00819194 	movui	r2,1606
  8190d0:	008190ec 	andhi	r2,zero,1603
  8190d4:	00819124 	muli	r2,zero,1604
  8190d8:	00819124 	muli	r2,zero,1604
  8190dc:	0081915c 	xori	r2,zero,1605
  8190e0:	0081915c 	xori	r2,zero,1605
  8190e4:	00819124 	muli	r2,zero,1604
  8190e8:	00819124 	muli	r2,zero,1604
  8190ec:	e0bffe17 	ldw	r2,-8(fp)
  8190f0:	10800917 	ldw	r2,36(r2)
  8190f4:	10800060 	cmpeqi	r2,r2,1
  8190f8:	1000331e 	bne	r2,zero,8191c8 <jinit_color_deconverter+0x178>
  8190fc:	e0bffe17 	ldw	r2,-8(fp)
  819100:	10800017 	ldw	r2,0(r2)
  819104:	00c002c4 	movi	r3,11
  819108:	10c00515 	stw	r3,20(r2)
  81910c:	e0bffe17 	ldw	r2,-8(fp)
  819110:	10800017 	ldw	r2,0(r2)
  819114:	10800017 	ldw	r2,0(r2)
  819118:	e13ffe17 	ldw	r4,-8(fp)
  81911c:	103ee83a 	callr	r2
  819120:	00002906 	br	8191c8 <jinit_color_deconverter+0x178>
  819124:	e0bffe17 	ldw	r2,-8(fp)
  819128:	10800917 	ldw	r2,36(r2)
  81912c:	108000e0 	cmpeqi	r2,r2,3
  819130:	1000271e 	bne	r2,zero,8191d0 <jinit_color_deconverter+0x180>
  819134:	e0bffe17 	ldw	r2,-8(fp)
  819138:	10800017 	ldw	r2,0(r2)
  81913c:	00c002c4 	movi	r3,11
  819140:	10c00515 	stw	r3,20(r2)
  819144:	e0bffe17 	ldw	r2,-8(fp)
  819148:	10800017 	ldw	r2,0(r2)
  81914c:	10800017 	ldw	r2,0(r2)
  819150:	e13ffe17 	ldw	r4,-8(fp)
  819154:	103ee83a 	callr	r2
  819158:	00001d06 	br	8191d0 <jinit_color_deconverter+0x180>
  81915c:	e0bffe17 	ldw	r2,-8(fp)
  819160:	10800917 	ldw	r2,36(r2)
  819164:	10800120 	cmpeqi	r2,r2,4
  819168:	10001b1e 	bne	r2,zero,8191d8 <jinit_color_deconverter+0x188>
  81916c:	e0bffe17 	ldw	r2,-8(fp)
  819170:	10800017 	ldw	r2,0(r2)
  819174:	00c002c4 	movi	r3,11
  819178:	10c00515 	stw	r3,20(r2)
  81917c:	e0bffe17 	ldw	r2,-8(fp)
  819180:	10800017 	ldw	r2,0(r2)
  819184:	10800017 	ldw	r2,0(r2)
  819188:	e13ffe17 	ldw	r4,-8(fp)
  81918c:	103ee83a 	callr	r2
  819190:	00001106 	br	8191d8 <jinit_color_deconverter+0x188>
  819194:	e0bffe17 	ldw	r2,-8(fp)
  819198:	10800917 	ldw	r2,36(r2)
  81919c:	00801016 	blt	zero,r2,8191e0 <jinit_color_deconverter+0x190>
  8191a0:	e0bffe17 	ldw	r2,-8(fp)
  8191a4:	10800017 	ldw	r2,0(r2)
  8191a8:	00c002c4 	movi	r3,11
  8191ac:	10c00515 	stw	r3,20(r2)
  8191b0:	e0bffe17 	ldw	r2,-8(fp)
  8191b4:	10800017 	ldw	r2,0(r2)
  8191b8:	10800017 	ldw	r2,0(r2)
  8191bc:	e13ffe17 	ldw	r4,-8(fp)
  8191c0:	103ee83a 	callr	r2
  8191c4:	00000606 	br	8191e0 <jinit_color_deconverter+0x190>
  8191c8:	0001883a 	nop
  8191cc:	00000506 	br	8191e4 <jinit_color_deconverter+0x194>
  8191d0:	0001883a 	nop
  8191d4:	00000306 	br	8191e4 <jinit_color_deconverter+0x194>
  8191d8:	0001883a 	nop
  8191dc:	00000106 	br	8191e4 <jinit_color_deconverter+0x194>
  8191e0:	0001883a 	nop
  8191e4:	e0bffe17 	ldw	r2,-8(fp)
  8191e8:	10804c17 	ldw	r2,304(r2)
  8191ec:	10001126 	beq	r2,zero,819234 <jinit_color_deconverter+0x1e4>
  8191f0:	e0bffe17 	ldw	r2,-8(fp)
  8191f4:	10800a17 	ldw	r2,40(r2)
  8191f8:	108000a0 	cmpeqi	r2,r2,2
  8191fc:	10000d1e 	bne	r2,zero,819234 <jinit_color_deconverter+0x1e4>
  819200:	e0bffe17 	ldw	r2,-8(fp)
  819204:	10800a17 	ldw	r2,40(r2)
  819208:	108001a0 	cmpeqi	r2,r2,6
  81920c:	1000091e 	bne	r2,zero,819234 <jinit_color_deconverter+0x1e4>
  819210:	e0bffe17 	ldw	r2,-8(fp)
  819214:	10800017 	ldw	r2,0(r2)
  819218:	00c00704 	movi	r3,28
  81921c:	10c00515 	stw	r3,20(r2)
  819220:	e0bffe17 	ldw	r2,-8(fp)
  819224:	10800017 	ldw	r2,0(r2)
  819228:	10800017 	ldw	r2,0(r2)
  81922c:	e13ffe17 	ldw	r4,-8(fp)
  819230:	103ee83a 	callr	r2
  819234:	e0bffe17 	ldw	r2,-8(fp)
  819238:	10800b17 	ldw	r2,44(r2)
  81923c:	10c000a0 	cmpeqi	r3,r2,2
  819240:	1800581e 	bne	r3,zero,8193a4 <jinit_color_deconverter+0x354>
  819244:	10c000e8 	cmpgeui	r3,r2,3
  819248:	1800031e 	bne	r3,zero,819258 <jinit_color_deconverter+0x208>
  81924c:	10800060 	cmpeqi	r2,r2,1
  819250:	1000061e 	bne	r2,zero,81926c <jinit_color_deconverter+0x21c>
  819254:	0000e906 	br	8195fc <jinit_color_deconverter+0x5ac>
  819258:	10c00120 	cmpeqi	r3,r2,4
  81925c:	1800c71e 	bne	r3,zero,81957c <jinit_color_deconverter+0x52c>
  819260:	108001a0 	cmpeqi	r2,r2,6
  819264:	1000991e 	bne	r2,zero,8194cc <jinit_color_deconverter+0x47c>
  819268:	0000e406 	br	8195fc <jinit_color_deconverter+0x5ac>
  81926c:	e0bffe17 	ldw	r2,-8(fp)
  819270:	00c00044 	movi	r3,1
  819274:	10c01e15 	stw	r3,120(r2)
  819278:	e0bffe17 	ldw	r2,-8(fp)
  81927c:	10800a17 	ldw	r2,40(r2)
  819280:	10c000a0 	cmpeqi	r3,r2,2
  819284:	1800201e 	bne	r3,zero,819308 <jinit_color_deconverter+0x2b8>
  819288:	10c000e8 	cmpgeui	r3,r2,3
  81928c:	1800031e 	bne	r3,zero,81929c <jinit_color_deconverter+0x24c>
  819290:	10800060 	cmpeqi	r2,r2,1
  819294:	1000051e 	bne	r2,zero,8192ac <jinit_color_deconverter+0x25c>
  819298:	00003706 	br	819378 <jinit_color_deconverter+0x328>
  81929c:	10c000e0 	cmpeqi	r3,r2,3
  8192a0:	1800021e 	bne	r3,zero,8192ac <jinit_color_deconverter+0x25c>
  8192a4:	108001e0 	cmpeqi	r2,r2,7
  8192a8:	10003326 	beq	r2,zero,819378 <jinit_color_deconverter+0x328>
  8192ac:	e0fffd17 	ldw	r3,-12(fp)
  8192b0:	008020b4 	movhi	r2,130
  8192b4:	10a31a04 	addi	r2,r2,-29592
  8192b8:	18800115 	stw	r2,4(r3)
  8192bc:	00800044 	movi	r2,1
  8192c0:	e0bffc15 	stw	r2,-16(fp)
  8192c4:	00000b06 	br	8192f4 <jinit_color_deconverter+0x2a4>
  8192c8:	e0bffe17 	ldw	r2,-8(fp)
  8192cc:	14003617 	ldw	r16,216(r2)
  8192d0:	e0bffc17 	ldw	r2,-16(fp)
  8192d4:	01401604 	movi	r5,88
  8192d8:	1009883a 	mov	r4,r2
  8192dc:	08305040 	call	830504 <__mulsi3>
  8192e0:	8085883a 	add	r2,r16,r2
  8192e4:	10000d15 	stw	zero,52(r2)
  8192e8:	e0bffc17 	ldw	r2,-16(fp)
  8192ec:	10800044 	addi	r2,r2,1
  8192f0:	e0bffc15 	stw	r2,-16(fp)
  8192f4:	e0bffe17 	ldw	r2,-8(fp)
  8192f8:	10800917 	ldw	r2,36(r2)
  8192fc:	e0fffc17 	ldw	r3,-16(fp)
  819300:	18bff116 	blt	r3,r2,8192c8 <__alt_mem_epcs_flash_controller_0+0xff8102c8>
  819304:	00002606 	br	8193a0 <jinit_color_deconverter+0x350>
  819308:	e0bffe17 	ldw	r2,-8(fp)
  81930c:	10804c17 	ldw	r2,304(r2)
  819310:	10000326 	beq	r2,zero,819320 <jinit_color_deconverter+0x2d0>
  819314:	10800060 	cmpeqi	r2,r2,1
  819318:	1000061e 	bne	r2,zero,819334 <jinit_color_deconverter+0x2e4>
  81931c:	00000a06 	br	819348 <jinit_color_deconverter+0x2f8>
  819320:	e0fffd17 	ldw	r3,-12(fp)
  819324:	008020b4 	movhi	r2,130
  819328:	10a14404 	addi	r2,r2,-31472
  81932c:	18800115 	stw	r2,4(r3)
  819330:	00000e06 	br	81936c <jinit_color_deconverter+0x31c>
  819334:	e0fffd17 	ldw	r3,-12(fp)
  819338:	008020b4 	movhi	r2,130
  81933c:	10a21104 	addi	r2,r2,-30652
  819340:	18800115 	stw	r2,4(r3)
  819344:	00000906 	br	81936c <jinit_color_deconverter+0x31c>
  819348:	e0bffe17 	ldw	r2,-8(fp)
  81934c:	10800017 	ldw	r2,0(r2)
  819350:	00c00704 	movi	r3,28
  819354:	10c00515 	stw	r3,20(r2)
  819358:	e0bffe17 	ldw	r2,-8(fp)
  81935c:	10800017 	ldw	r2,0(r2)
  819360:	10800017 	ldw	r2,0(r2)
  819364:	e13ffe17 	ldw	r4,-8(fp)
  819368:	103ee83a 	callr	r2
  81936c:	e13ffe17 	ldw	r4,-8(fp)
  819370:	08183f80 	call	8183f8 <build_rgb_y_table>
  819374:	00000a06 	br	8193a0 <jinit_color_deconverter+0x350>
  819378:	e0bffe17 	ldw	r2,-8(fp)
  81937c:	10800017 	ldw	r2,0(r2)
  819380:	00c00704 	movi	r3,28
  819384:	10c00515 	stw	r3,20(r2)
  819388:	e0bffe17 	ldw	r2,-8(fp)
  81938c:	10800017 	ldw	r2,0(r2)
  819390:	10800017 	ldw	r2,0(r2)
  819394:	e13ffe17 	ldw	r4,-8(fp)
  819398:	103ee83a 	callr	r2
  81939c:	0000af06 	br	81965c <jinit_color_deconverter+0x60c>
  8193a0:	0000ae06 	br	81965c <jinit_color_deconverter+0x60c>
  8193a4:	e0bffe17 	ldw	r2,-8(fp)
  8193a8:	00c000c4 	movi	r3,3
  8193ac:	10c01e15 	stw	r3,120(r2)
  8193b0:	e0bffe17 	ldw	r2,-8(fp)
  8193b4:	10800a17 	ldw	r2,40(r2)
  8193b8:	10c000a0 	cmpeqi	r3,r2,2
  8193bc:	18001d1e 	bne	r3,zero,819434 <jinit_color_deconverter+0x3e4>
  8193c0:	10c000e8 	cmpgeui	r3,r2,3
  8193c4:	1800031e 	bne	r3,zero,8193d4 <jinit_color_deconverter+0x384>
  8193c8:	10800060 	cmpeqi	r2,r2,1
  8193cc:	1000061e 	bne	r2,zero,8193e8 <jinit_color_deconverter+0x398>
  8193d0:	00003306 	br	8194a0 <jinit_color_deconverter+0x450>
  8193d4:	10c000e0 	cmpeqi	r3,r2,3
  8193d8:	1800081e 	bne	r3,zero,8193fc <jinit_color_deconverter+0x3ac>
  8193dc:	108001e0 	cmpeqi	r2,r2,7
  8193e0:	10000d1e 	bne	r2,zero,819418 <jinit_color_deconverter+0x3c8>
  8193e4:	00002e06 	br	8194a0 <jinit_color_deconverter+0x450>
  8193e8:	e0fffd17 	ldw	r3,-12(fp)
  8193ec:	008020b4 	movhi	r2,130
  8193f0:	10a33504 	addi	r2,r2,-29484
  8193f4:	18800115 	stw	r2,4(r3)
  8193f8:	00003306 	br	8194c8 <jinit_color_deconverter+0x478>
  8193fc:	e0fffd17 	ldw	r3,-12(fp)
  819400:	008020b4 	movhi	r2,130
  819404:	10a07304 	addi	r2,r2,-32308
  819408:	18800115 	stw	r2,4(r3)
  81940c:	e13ffe17 	ldw	r4,-8(fp)
  819410:	0817df00 	call	817df0 <build_ycc_rgb_table>
  819414:	00002c06 	br	8194c8 <jinit_color_deconverter+0x478>
  819418:	e0fffd17 	ldw	r3,-12(fp)
  81941c:	008020b4 	movhi	r2,130
  819420:	10a07304 	addi	r2,r2,-32308
  819424:	18800115 	stw	r2,4(r3)
  819428:	e13ffe17 	ldw	r4,-8(fp)
  81942c:	0817fdc0 	call	817fdc <build_bg_ycc_rgb_table>
  819430:	00002506 	br	8194c8 <jinit_color_deconverter+0x478>
  819434:	e0bffe17 	ldw	r2,-8(fp)
  819438:	10804c17 	ldw	r2,304(r2)
  81943c:	10000326 	beq	r2,zero,81944c <jinit_color_deconverter+0x3fc>
  819440:	10800060 	cmpeqi	r2,r2,1
  819444:	1000061e 	bne	r2,zero,819460 <jinit_color_deconverter+0x410>
  819448:	00000a06 	br	819474 <jinit_color_deconverter+0x424>
  81944c:	e0fffd17 	ldw	r3,-12(fp)
  819450:	008020b4 	movhi	r2,130
  819454:	10a28504 	addi	r2,r2,-30188
  819458:	18800115 	stw	r2,4(r3)
  81945c:	00000f06 	br	81949c <jinit_color_deconverter+0x44c>
  819460:	e0fffd17 	ldw	r3,-12(fp)
  819464:	008020b4 	movhi	r2,130
  819468:	10a1b104 	addi	r2,r2,-31036
  81946c:	18800115 	stw	r2,4(r3)
  819470:	00000a06 	br	81949c <jinit_color_deconverter+0x44c>
  819474:	e0bffe17 	ldw	r2,-8(fp)
  819478:	10800017 	ldw	r2,0(r2)
  81947c:	00c00704 	movi	r3,28
  819480:	10c00515 	stw	r3,20(r2)
  819484:	e0bffe17 	ldw	r2,-8(fp)
  819488:	10800017 	ldw	r2,0(r2)
  81948c:	10800017 	ldw	r2,0(r2)
  819490:	e13ffe17 	ldw	r4,-8(fp)
  819494:	103ee83a 	callr	r2
  819498:	00000b06 	br	8194c8 <jinit_color_deconverter+0x478>
  81949c:	00000a06 	br	8194c8 <jinit_color_deconverter+0x478>
  8194a0:	e0bffe17 	ldw	r2,-8(fp)
  8194a4:	10800017 	ldw	r2,0(r2)
  8194a8:	00c00704 	movi	r3,28
  8194ac:	10c00515 	stw	r3,20(r2)
  8194b0:	e0bffe17 	ldw	r2,-8(fp)
  8194b4:	10800017 	ldw	r2,0(r2)
  8194b8:	10800017 	ldw	r2,0(r2)
  8194bc:	e13ffe17 	ldw	r4,-8(fp)
  8194c0:	103ee83a 	callr	r2
  8194c4:	00006506 	br	81965c <jinit_color_deconverter+0x60c>
  8194c8:	00006406 	br	81965c <jinit_color_deconverter+0x60c>
  8194cc:	e0bffe17 	ldw	r2,-8(fp)
  8194d0:	00c000c4 	movi	r3,3
  8194d4:	10c01e15 	stw	r3,120(r2)
  8194d8:	e0bffe17 	ldw	r2,-8(fp)
  8194dc:	10800a17 	ldw	r2,40(r2)
  8194e0:	10800198 	cmpnei	r2,r2,6
  8194e4:	10001a1e 	bne	r2,zero,819550 <jinit_color_deconverter+0x500>
  8194e8:	e0bffe17 	ldw	r2,-8(fp)
  8194ec:	10804c17 	ldw	r2,304(r2)
  8194f0:	10000326 	beq	r2,zero,819500 <jinit_color_deconverter+0x4b0>
  8194f4:	10800060 	cmpeqi	r2,r2,1
  8194f8:	1000061e 	bne	r2,zero,819514 <jinit_color_deconverter+0x4c4>
  8194fc:	00000a06 	br	819528 <jinit_color_deconverter+0x4d8>
  819500:	e0fffd17 	ldw	r3,-12(fp)
  819504:	008020b4 	movhi	r2,130
  819508:	10a28504 	addi	r2,r2,-30188
  81950c:	18800115 	stw	r2,4(r3)
  819510:	00001906 	br	819578 <jinit_color_deconverter+0x528>
  819514:	e0fffd17 	ldw	r3,-12(fp)
  819518:	008020b4 	movhi	r2,130
  81951c:	10a1b104 	addi	r2,r2,-31036
  819520:	18800115 	stw	r2,4(r3)
  819524:	00001406 	br	819578 <jinit_color_deconverter+0x528>
  819528:	e0bffe17 	ldw	r2,-8(fp)
  81952c:	10800017 	ldw	r2,0(r2)
  819530:	00c00704 	movi	r3,28
  819534:	10c00515 	stw	r3,20(r2)
  819538:	e0bffe17 	ldw	r2,-8(fp)
  81953c:	10800017 	ldw	r2,0(r2)
  819540:	10800017 	ldw	r2,0(r2)
  819544:	e13ffe17 	ldw	r4,-8(fp)
  819548:	103ee83a 	callr	r2
  81954c:	00004306 	br	81965c <jinit_color_deconverter+0x60c>
  819550:	e0bffe17 	ldw	r2,-8(fp)
  819554:	10800017 	ldw	r2,0(r2)
  819558:	00c00704 	movi	r3,28
  81955c:	10c00515 	stw	r3,20(r2)
  819560:	e0bffe17 	ldw	r2,-8(fp)
  819564:	10800017 	ldw	r2,0(r2)
  819568:	10800017 	ldw	r2,0(r2)
  81956c:	e13ffe17 	ldw	r4,-8(fp)
  819570:	103ee83a 	callr	r2
  819574:	00003906 	br	81965c <jinit_color_deconverter+0x60c>
  819578:	00003806 	br	81965c <jinit_color_deconverter+0x60c>
  81957c:	e0bffe17 	ldw	r2,-8(fp)
  819580:	00c00104 	movi	r3,4
  819584:	10c01e15 	stw	r3,120(r2)
  819588:	e0bffe17 	ldw	r2,-8(fp)
  81958c:	10800a17 	ldw	r2,40(r2)
  819590:	10c00120 	cmpeqi	r3,r2,4
  819594:	1800091e 	bne	r3,zero,8195bc <jinit_color_deconverter+0x56c>
  819598:	10800160 	cmpeqi	r2,r2,5
  81959c:	10000c26 	beq	r2,zero,8195d0 <jinit_color_deconverter+0x580>
  8195a0:	e0fffd17 	ldw	r3,-12(fp)
  8195a4:	008020b4 	movhi	r2,130
  8195a8:	10a36c04 	addi	r2,r2,-29264
  8195ac:	18800115 	stw	r2,4(r3)
  8195b0:	e13ffe17 	ldw	r4,-8(fp)
  8195b4:	0817df00 	call	817df0 <build_ycc_rgb_table>
  8195b8:	00000f06 	br	8195f8 <jinit_color_deconverter+0x5a8>
  8195bc:	e0fffd17 	ldw	r3,-12(fp)
  8195c0:	008020b4 	movhi	r2,130
  8195c4:	10a2d304 	addi	r2,r2,-29876
  8195c8:	18800115 	stw	r2,4(r3)
  8195cc:	00000a06 	br	8195f8 <jinit_color_deconverter+0x5a8>
  8195d0:	e0bffe17 	ldw	r2,-8(fp)
  8195d4:	10800017 	ldw	r2,0(r2)
  8195d8:	00c00704 	movi	r3,28
  8195dc:	10c00515 	stw	r3,20(r2)
  8195e0:	e0bffe17 	ldw	r2,-8(fp)
  8195e4:	10800017 	ldw	r2,0(r2)
  8195e8:	10800017 	ldw	r2,0(r2)
  8195ec:	e13ffe17 	ldw	r4,-8(fp)
  8195f0:	103ee83a 	callr	r2
  8195f4:	00001906 	br	81965c <jinit_color_deconverter+0x60c>
  8195f8:	00001806 	br	81965c <jinit_color_deconverter+0x60c>
  8195fc:	e0bffe17 	ldw	r2,-8(fp)
  819600:	10c00b17 	ldw	r3,44(r2)
  819604:	e0bffe17 	ldw	r2,-8(fp)
  819608:	10800a17 	ldw	r2,40(r2)
  81960c:	1880091e 	bne	r3,r2,819634 <jinit_color_deconverter+0x5e4>
  819610:	e0bffe17 	ldw	r2,-8(fp)
  819614:	10c00917 	ldw	r3,36(r2)
  819618:	e0bffe17 	ldw	r2,-8(fp)
  81961c:	10c01e15 	stw	r3,120(r2)
  819620:	e0fffd17 	ldw	r3,-12(fp)
  819624:	008020b4 	movhi	r2,130
  819628:	10a2d304 	addi	r2,r2,-29876
  81962c:	18800115 	stw	r2,4(r3)
  819630:	00000906 	br	819658 <jinit_color_deconverter+0x608>
  819634:	e0bffe17 	ldw	r2,-8(fp)
  819638:	10800017 	ldw	r2,0(r2)
  81963c:	00c00704 	movi	r3,28
  819640:	10c00515 	stw	r3,20(r2)
  819644:	e0bffe17 	ldw	r2,-8(fp)
  819648:	10800017 	ldw	r2,0(r2)
  81964c:	10800017 	ldw	r2,0(r2)
  819650:	e13ffe17 	ldw	r4,-8(fp)
  819654:	103ee83a 	callr	r2
  819658:	0001883a 	nop
  81965c:	e0bffe17 	ldw	r2,-8(fp)
  819660:	10801517 	ldw	r2,84(r2)
  819664:	10000426 	beq	r2,zero,819678 <jinit_color_deconverter+0x628>
  819668:	e0bffe17 	ldw	r2,-8(fp)
  81966c:	00c00044 	movi	r3,1
  819670:	10c01f15 	stw	r3,124(r2)
  819674:	00000406 	br	819688 <jinit_color_deconverter+0x638>
  819678:	e0bffe17 	ldw	r2,-8(fp)
  81967c:	10c01e17 	ldw	r3,120(r2)
  819680:	e0bffe17 	ldw	r2,-8(fp)
  819684:	10c01f15 	stw	r3,124(r2)
  819688:	0001883a 	nop
  81968c:	e6ffff04 	addi	sp,fp,-4
  819690:	dfc00217 	ldw	ra,8(sp)
  819694:	df000117 	ldw	fp,4(sp)
  819698:	dc000017 	ldw	r16,0(sp)
  81969c:	dec00304 	addi	sp,sp,12
  8196a0:	f800283a 	ret

008196a4 <start_pass>:
  8196a4:	defff004 	addi	sp,sp,-64
  8196a8:	dfc00f15 	stw	ra,60(sp)
  8196ac:	df000e15 	stw	fp,56(sp)
  8196b0:	dc000d15 	stw	r16,52(sp)
  8196b4:	df000e04 	addi	fp,sp,56
  8196b8:	e13ffe15 	stw	r4,-8(fp)
  8196bc:	e0bffe17 	ldw	r2,-8(fp)
  8196c0:	10807617 	ldw	r2,472(r2)
  8196c4:	e0bff915 	stw	r2,-28(fp)
  8196c8:	e03ff515 	stw	zero,-44(fp)
  8196cc:	e03ff615 	stw	zero,-40(fp)
  8196d0:	e03ff215 	stw	zero,-56(fp)
  8196d4:	e0bffe17 	ldw	r2,-8(fp)
  8196d8:	10803617 	ldw	r2,216(r2)
  8196dc:	e0bff415 	stw	r2,-48(fp)
  8196e0:	00020106 	br	819ee8 <start_pass+0x844>
  8196e4:	e0bff417 	ldw	r2,-48(fp)
  8196e8:	10800917 	ldw	r2,36(r2)
  8196ec:	1006923a 	slli	r3,r2,8
  8196f0:	e0bff417 	ldw	r2,-48(fp)
  8196f4:	10800a17 	ldw	r2,40(r2)
  8196f8:	1885883a 	add	r2,r3,r2
  8196fc:	10c1c1e0 	cmpeqi	r3,r2,1799
  819700:	1800751e 	bne	r3,zero,8198d8 <start_pass+0x234>
  819704:	10c1c208 	cmpgei	r3,r2,1800
  819708:	1800281e 	bne	r3,zero,8197ac <start_pass+0x108>
  81970c:	10c100a0 	cmpeqi	r3,r2,1026
  819710:	1800bc1e 	bne	r3,zero,819a04 <start_pass+0x360>
  819714:	10c100c8 	cmpgei	r3,r2,1027
  819718:	1800121e 	bne	r3,zero,819764 <start_pass+0xc0>
  81971c:	10c080a0 	cmpeqi	r3,r2,514
  819720:	1800541e 	bne	r3,zero,819874 <start_pass+0x1d0>
  819724:	10c080c8 	cmpgei	r3,r2,515
  819728:	1800071e 	bne	r3,zero,819748 <start_pass+0xa4>
  81972c:	10c040a0 	cmpeqi	r3,r2,258
  819730:	1800e11e 	bne	r3,zero,819ab8 <start_pass+0x414>
  819734:	10c08060 	cmpeqi	r3,r2,513
  819738:	1800b71e 	bne	r3,zero,819a18 <start_pass+0x374>
  81973c:	10804060 	cmpeqi	r2,r2,257
  819740:	1000471e 	bne	r2,zero,819860 <start_pass+0x1bc>
  819744:	00010506 	br	819b5c <start_pass+0x4b8>
  819748:	10c0c0e0 	cmpeqi	r3,r2,771
  81974c:	18004e1e 	bne	r3,zero,819888 <start_pass+0x1e4>
  819750:	10c0c1a0 	cmpeqi	r3,r2,774
  819754:	1800ce1e 	bne	r3,zero,819a90 <start_pass+0x3ec>
  819758:	10808120 	cmpeqi	r2,r2,516
  81975c:	1000d11e 	bne	r2,zero,819aa4 <start_pass+0x400>
  819760:	0000fe06 	br	819b5c <start_pass+0x4b8>
  819764:	10c142a0 	cmpeqi	r3,r2,1290
  819768:	1800bf1e 	bne	r3,zero,819a68 <start_pass+0x3c4>
  81976c:	10c142c8 	cmpgei	r3,r2,1291
  819770:	1800071e 	bne	r3,zero,819790 <start_pass+0xec>
  819774:	10c10220 	cmpeqi	r3,r2,1032
  819778:	1800c01e 	bne	r3,zero,819a7c <start_pass+0x3d8>
  81977c:	10c14160 	cmpeqi	r3,r2,1285
  819780:	18004b1e 	bne	r3,zero,8198b0 <start_pass+0x20c>
  819784:	10810120 	cmpeqi	r2,r2,1028
  819788:	1000441e 	bne	r2,zero,81989c <start_pass+0x1f8>
  81978c:	0000f306 	br	819b5c <start_pass+0x4b8>
  819790:	10c181a0 	cmpeqi	r3,r2,1542
  819794:	18004b1e 	bne	r3,zero,8198c4 <start_pass+0x220>
  819798:	10c18320 	cmpeqi	r3,r2,1548
  81979c:	1800ad1e 	bne	r3,zero,819a54 <start_pass+0x3b0>
  8197a0:	108180e0 	cmpeqi	r2,r2,1539
  8197a4:	1000921e 	bne	r2,zero,8199f0 <start_pass+0x34c>
  8197a8:	0000ec06 	br	819b5c <start_pass+0x4b8>
  8197ac:	10c2c2e0 	cmpeqi	r3,r2,2827
  8197b0:	1800581e 	bne	r3,zero,819914 <start_pass+0x270>
  8197b4:	10c2c308 	cmpgei	r3,r2,2828
  8197b8:	1800121e 	bne	r3,zero,819804 <start_pass+0x160>
  8197bc:	10c20420 	cmpeqi	r3,r2,2064
  8197c0:	18009a1e 	bne	r3,zero,819a2c <start_pass+0x388>
  8197c4:	10c20448 	cmpgei	r3,r2,2065
  8197c8:	1800071e 	bne	r3,zero,8197e8 <start_pass+0x144>
  8197cc:	10c20120 	cmpeqi	r3,r2,2052
  8197d0:	1800821e 	bne	r3,zero,8199dc <start_pass+0x338>
  8197d4:	10c20220 	cmpeqi	r3,r2,2056
  8197d8:	1800bc1e 	bne	r3,zero,819acc <start_pass+0x428>
  8197dc:	1081c3a0 	cmpeqi	r2,r2,1806
  8197e0:	1000971e 	bne	r2,zero,819a40 <start_pass+0x39c>
  8197e4:	0000dd06 	br	819b5c <start_pass+0x4b8>
  8197e8:	10c28160 	cmpeqi	r3,r2,2565
  8197ec:	1800761e 	bne	r3,zero,8199c8 <start_pass+0x324>
  8197f0:	10c282a0 	cmpeqi	r3,r2,2570
  8197f4:	1800421e 	bne	r3,zero,819900 <start_pass+0x25c>
  8197f8:	10824260 	cmpeqi	r2,r2,2313
  8197fc:	10003b1e 	bne	r2,zero,8198ec <start_pass+0x248>
  819800:	0000d606 	br	819b5c <start_pass+0x4b8>
  819804:	10c381e0 	cmpeqi	r3,r2,3591
  819808:	1800651e 	bne	r3,zero,8199a0 <start_pass+0x2fc>
  81980c:	10c38208 	cmpgei	r3,r2,3592
  819810:	1800071e 	bne	r3,zero,819830 <start_pass+0x18c>
  819814:	10c30320 	cmpeqi	r3,r2,3084
  819818:	1800431e 	bne	r3,zero,819928 <start_pass+0x284>
  81981c:	10c34360 	cmpeqi	r3,r2,3341
  819820:	1800461e 	bne	r3,zero,81993c <start_pass+0x298>
  819824:	108301a0 	cmpeqi	r2,r2,3078
  819828:	1000621e 	bne	r2,zero,8199b4 <start_pass+0x310>
  81982c:	0000cb06 	br	819b5c <start_pass+0x4b8>
  819830:	10c3c3e0 	cmpeqi	r3,r2,3855
  819834:	18004b1e 	bne	r3,zero,819964 <start_pass+0x2c0>
  819838:	10c3c408 	cmpgei	r3,r2,3856
  81983c:	1800031e 	bne	r3,zero,81984c <start_pass+0x1a8>
  819840:	108383a0 	cmpeqi	r2,r2,3598
  819844:	1000421e 	bne	r2,zero,819950 <start_pass+0x2ac>
  819848:	0000c406 	br	819b5c <start_pass+0x4b8>
  81984c:	10c40220 	cmpeqi	r3,r2,4104
  819850:	18004e1e 	bne	r3,zero,81998c <start_pass+0x2e8>
  819854:	10840420 	cmpeqi	r2,r2,4112
  819858:	1000471e 	bne	r2,zero,819978 <start_pass+0x2d4>
  81985c:	0000bf06 	br	819b5c <start_pass+0x4b8>
  819860:	008020b4 	movhi	r2,130
  819864:	108a1604 	addi	r2,r2,10328
  819868:	e0bff615 	stw	r2,-40(fp)
  81986c:	e03ff515 	stw	zero,-44(fp)
  819870:	0000ce06 	br	819bac <start_pass+0x508>
  819874:	008020b4 	movhi	r2,130
  819878:	10898704 	addi	r2,r2,9756
  81987c:	e0bff615 	stw	r2,-40(fp)
  819880:	e03ff515 	stw	zero,-44(fp)
  819884:	0000c906 	br	819bac <start_pass+0x508>
  819888:	008020b4 	movhi	r2,130
  81988c:	1088b804 	addi	r2,r2,8928
  819890:	e0bff615 	stw	r2,-40(fp)
  819894:	e03ff515 	stw	zero,-44(fp)
  819898:	0000c406 	br	819bac <start_pass+0x508>
  81989c:	008020b4 	movhi	r2,130
  8198a0:	1087ae04 	addi	r2,r2,7864
  8198a4:	e0bff615 	stw	r2,-40(fp)
  8198a8:	e03ff515 	stw	zero,-44(fp)
  8198ac:	0000bf06 	br	819bac <start_pass+0x508>
  8198b0:	008020b4 	movhi	r2,130
  8198b4:	10865104 	addi	r2,r2,6468
  8198b8:	e0bff615 	stw	r2,-40(fp)
  8198bc:	e03ff515 	stw	zero,-44(fp)
  8198c0:	0000ba06 	br	819bac <start_pass+0x508>
  8198c4:	008020b4 	movhi	r2,130
  8198c8:	1084cd04 	addi	r2,r2,4916
  8198cc:	e0bff615 	stw	r2,-40(fp)
  8198d0:	e03ff515 	stw	zero,-44(fp)
  8198d4:	0000b506 	br	819bac <start_pass+0x508>
  8198d8:	008020b4 	movhi	r2,130
  8198dc:	1082aa04 	addi	r2,r2,2728
  8198e0:	e0bff615 	stw	r2,-40(fp)
  8198e4:	e03ff515 	stw	zero,-44(fp)
  8198e8:	0000b006 	br	819bac <start_pass+0x508>
  8198ec:	008020b4 	movhi	r2,130
  8198f0:	108a4404 	addi	r2,r2,10512
  8198f4:	e0bff615 	stw	r2,-40(fp)
  8198f8:	e03ff515 	stw	zero,-44(fp)
  8198fc:	0000ab06 	br	819bac <start_pass+0x508>
  819900:	008020b4 	movhi	r2,130
  819904:	108c9804 	addi	r2,r2,12896
  819908:	e0bff615 	stw	r2,-40(fp)
  81990c:	e03ff515 	stw	zero,-44(fp)
  819910:	0000a606 	br	819bac <start_pass+0x508>
  819914:	008020b4 	movhi	r2,130
  819918:	108f2e04 	addi	r2,r2,15544
  81991c:	e0bff615 	stw	r2,-40(fp)
  819920:	e03ff515 	stw	zero,-44(fp)
  819924:	0000a106 	br	819bac <start_pass+0x508>
  819928:	008020b4 	movhi	r2,130
  81992c:	10924a04 	addi	r2,r2,18728
  819930:	e0bff615 	stw	r2,-40(fp)
  819934:	e03ff515 	stw	zero,-44(fp)
  819938:	00009c06 	br	819bac <start_pass+0x508>
  81993c:	008020b4 	movhi	r2,130
  819940:	10953804 	addi	r2,r2,21728
  819944:	e0bff615 	stw	r2,-40(fp)
  819948:	e03ff515 	stw	zero,-44(fp)
  81994c:	00009706 	br	819bac <start_pass+0x508>
  819950:	008020b4 	movhi	r2,130
  819954:	1098c604 	addi	r2,r2,25368
  819958:	e0bff615 	stw	r2,-40(fp)
  81995c:	e03ff515 	stw	zero,-44(fp)
  819960:	00009206 	br	819bac <start_pass+0x508>
  819964:	008020b4 	movhi	r2,130
  819968:	109c2a04 	addi	r2,r2,28840
  81996c:	e0bff615 	stw	r2,-40(fp)
  819970:	e03ff515 	stw	zero,-44(fp)
  819974:	00008d06 	br	819bac <start_pass+0x508>
  819978:	008020b4 	movhi	r2,130
  81997c:	109fb204 	addi	r2,r2,32456
  819980:	e0bff615 	stw	r2,-40(fp)
  819984:	e03ff515 	stw	zero,-44(fp)
  819988:	00008806 	br	819bac <start_pass+0x508>
  81998c:	008020f4 	movhi	r2,131
  819990:	10a3c604 	addi	r2,r2,-28904
  819994:	e0bff615 	stw	r2,-40(fp)
  819998:	e03ff515 	stw	zero,-44(fp)
  81999c:	00008306 	br	819bac <start_pass+0x508>
  8199a0:	008020f4 	movhi	r2,131
  8199a4:	10a77c04 	addi	r2,r2,-25104
  8199a8:	e0bff615 	stw	r2,-40(fp)
  8199ac:	e03ff515 	stw	zero,-44(fp)
  8199b0:	00007e06 	br	819bac <start_pass+0x508>
  8199b4:	008020f4 	movhi	r2,131
  8199b8:	10aa4804 	addi	r2,r2,-22240
  8199bc:	e0bff615 	stw	r2,-40(fp)
  8199c0:	e03ff515 	stw	zero,-44(fp)
  8199c4:	00007906 	br	819bac <start_pass+0x508>
  8199c8:	008020f4 	movhi	r2,131
  8199cc:	10ac8504 	addi	r2,r2,-19948
  8199d0:	e0bff615 	stw	r2,-40(fp)
  8199d4:	e03ff515 	stw	zero,-44(fp)
  8199d8:	00007406 	br	819bac <start_pass+0x508>
  8199dc:	008020f4 	movhi	r2,131
  8199e0:	10ae7b04 	addi	r2,r2,-17940
  8199e4:	e0bff615 	stw	r2,-40(fp)
  8199e8:	e03ff515 	stw	zero,-44(fp)
  8199ec:	00006f06 	br	819bac <start_pass+0x508>
  8199f0:	008020f4 	movhi	r2,131
  8199f4:	10b02604 	addi	r2,r2,-16232
  8199f8:	e0bff615 	stw	r2,-40(fp)
  8199fc:	e03ff515 	stw	zero,-44(fp)
  819a00:	00006a06 	br	819bac <start_pass+0x508>
  819a04:	008020f4 	movhi	r2,131
  819a08:	10b14804 	addi	r2,r2,-15072
  819a0c:	e0bff615 	stw	r2,-40(fp)
  819a10:	e03ff515 	stw	zero,-44(fp)
  819a14:	00006506 	br	819bac <start_pass+0x508>
  819a18:	008020f4 	movhi	r2,131
  819a1c:	10b20304 	addi	r2,r2,-14324
  819a20:	e0bff615 	stw	r2,-40(fp)
  819a24:	e03ff515 	stw	zero,-44(fp)
  819a28:	00006006 	br	819bac <start_pass+0x508>
  819a2c:	008020f4 	movhi	r2,131
  819a30:	10b24d04 	addi	r2,r2,-14028
  819a34:	e0bff615 	stw	r2,-40(fp)
  819a38:	e03ff515 	stw	zero,-44(fp)
  819a3c:	00005b06 	br	819bac <start_pass+0x508>
  819a40:	008020f4 	movhi	r2,131
  819a44:	10b57804 	addi	r2,r2,-10784
  819a48:	e0bff615 	stw	r2,-40(fp)
  819a4c:	e03ff515 	stw	zero,-44(fp)
  819a50:	00005606 	br	819bac <start_pass+0x508>
  819a54:	008020f4 	movhi	r2,131
  819a58:	10b83304 	addi	r2,r2,-7988
  819a5c:	e0bff615 	stw	r2,-40(fp)
  819a60:	e03ff515 	stw	zero,-44(fp)
  819a64:	00005106 	br	819bac <start_pass+0x508>
  819a68:	008020f4 	movhi	r2,131
  819a6c:	10ba6a04 	addi	r2,r2,-5720
  819a70:	e0bff615 	stw	r2,-40(fp)
  819a74:	e03ff515 	stw	zero,-44(fp)
  819a78:	00004c06 	br	819bac <start_pass+0x508>
  819a7c:	008020f4 	movhi	r2,131
  819a80:	10bc6704 	addi	r2,r2,-3684
  819a84:	e0bff615 	stw	r2,-40(fp)
  819a88:	e03ff515 	stw	zero,-44(fp)
  819a8c:	00004706 	br	819bac <start_pass+0x508>
  819a90:	008020f4 	movhi	r2,131
  819a94:	10be9104 	addi	r2,r2,-1468
  819a98:	e0bff615 	stw	r2,-40(fp)
  819a9c:	e03ff515 	stw	zero,-44(fp)
  819aa0:	00004206 	br	819bac <start_pass+0x508>
  819aa4:	008020f4 	movhi	r2,131
  819aa8:	10bfc204 	addi	r2,r2,-248
  819aac:	e0bff615 	stw	r2,-40(fp)
  819ab0:	e03ff515 	stw	zero,-44(fp)
  819ab4:	00003d06 	br	819bac <start_pass+0x508>
  819ab8:	008020f4 	movhi	r2,131
  819abc:	10808904 	addi	r2,r2,548
  819ac0:	e0bff615 	stw	r2,-40(fp)
  819ac4:	e03ff515 	stw	zero,-44(fp)
  819ac8:	00003806 	br	819bac <start_pass+0x508>
  819acc:	e0bffe17 	ldw	r2,-8(fp)
  819ad0:	10801217 	ldw	r2,72(r2)
  819ad4:	10c00060 	cmpeqi	r3,r2,1
  819ad8:	1800091e 	bne	r3,zero,819b00 <start_pass+0x45c>
  819adc:	0080032e 	bgeu	zero,r2,819aec <start_pass+0x448>
  819ae0:	108000a0 	cmpeqi	r2,r2,2
  819ae4:	10000c1e 	bne	r2,zero,819b18 <start_pass+0x474>
  819ae8:	00001106 	br	819b30 <start_pass+0x48c>
  819aec:	008020b4 	movhi	r2,130
  819af0:	10bf9904 	addi	r2,r2,-412
  819af4:	e0bff615 	stw	r2,-40(fp)
  819af8:	e03ff515 	stw	zero,-44(fp)
  819afc:	00001606 	br	819b58 <start_pass+0x4b4>
  819b00:	008020b4 	movhi	r2,130
  819b04:	10bcd904 	addi	r2,r2,-3228
  819b08:	e0bff615 	stw	r2,-40(fp)
  819b0c:	00800044 	movi	r2,1
  819b10:	e0bff515 	stw	r2,-44(fp)
  819b14:	00001006 	br	819b58 <start_pass+0x4b4>
  819b18:	008020b4 	movhi	r2,130
  819b1c:	10b9c204 	addi	r2,r2,-6392
  819b20:	e0bff615 	stw	r2,-40(fp)
  819b24:	00800084 	movi	r2,2
  819b28:	e0bff515 	stw	r2,-44(fp)
  819b2c:	00000a06 	br	819b58 <start_pass+0x4b4>
  819b30:	e0bffe17 	ldw	r2,-8(fp)
  819b34:	10800017 	ldw	r2,0(r2)
  819b38:	00c00c44 	movi	r3,49
  819b3c:	10c00515 	stw	r3,20(r2)
  819b40:	e0bffe17 	ldw	r2,-8(fp)
  819b44:	10800017 	ldw	r2,0(r2)
  819b48:	10800017 	ldw	r2,0(r2)
  819b4c:	e13ffe17 	ldw	r4,-8(fp)
  819b50:	103ee83a 	callr	r2
  819b54:	0001883a 	nop
  819b58:	00001406 	br	819bac <start_pass+0x508>
  819b5c:	e0bffe17 	ldw	r2,-8(fp)
  819b60:	10800017 	ldw	r2,0(r2)
  819b64:	00c001c4 	movi	r3,7
  819b68:	10c00515 	stw	r3,20(r2)
  819b6c:	e0bffe17 	ldw	r2,-8(fp)
  819b70:	10800017 	ldw	r2,0(r2)
  819b74:	e0fff417 	ldw	r3,-48(fp)
  819b78:	18c00917 	ldw	r3,36(r3)
  819b7c:	10c00615 	stw	r3,24(r2)
  819b80:	e0bffe17 	ldw	r2,-8(fp)
  819b84:	10800017 	ldw	r2,0(r2)
  819b88:	e0fff417 	ldw	r3,-48(fp)
  819b8c:	18c00a17 	ldw	r3,40(r3)
  819b90:	10c00715 	stw	r3,28(r2)
  819b94:	e0bffe17 	ldw	r2,-8(fp)
  819b98:	10800017 	ldw	r2,0(r2)
  819b9c:	10800017 	ldw	r2,0(r2)
  819ba0:	e13ffe17 	ldw	r4,-8(fp)
  819ba4:	103ee83a 	callr	r2
  819ba8:	0001883a 	nop
  819bac:	e0fff917 	ldw	r3,-28(fp)
  819bb0:	e0bff217 	ldw	r2,-56(fp)
  819bb4:	10800044 	addi	r2,r2,1
  819bb8:	1085883a 	add	r2,r2,r2
  819bbc:	1085883a 	add	r2,r2,r2
  819bc0:	1885883a 	add	r2,r3,r2
  819bc4:	e0fff617 	ldw	r3,-40(fp)
  819bc8:	10c00015 	stw	r3,0(r2)
  819bcc:	e0bff417 	ldw	r2,-48(fp)
  819bd0:	10800d17 	ldw	r2,52(r2)
  819bd4:	1000bb26 	beq	r2,zero,819ec4 <start_pass+0x820>
  819bd8:	e0fff917 	ldw	r3,-28(fp)
  819bdc:	e0bff217 	ldw	r2,-56(fp)
  819be0:	108002c4 	addi	r2,r2,11
  819be4:	1085883a 	add	r2,r2,r2
  819be8:	1085883a 	add	r2,r2,r2
  819bec:	1885883a 	add	r2,r3,r2
  819bf0:	10c00017 	ldw	r3,0(r2)
  819bf4:	e0bff517 	ldw	r2,-44(fp)
  819bf8:	1880b226 	beq	r3,r2,819ec4 <start_pass+0x820>
  819bfc:	e0bff417 	ldw	r2,-48(fp)
  819c00:	10801417 	ldw	r2,80(r2)
  819c04:	e0bffa15 	stw	r2,-24(fp)
  819c08:	e0bffa17 	ldw	r2,-24(fp)
  819c0c:	1000af26 	beq	r2,zero,819ecc <start_pass+0x828>
  819c10:	e0fff917 	ldw	r3,-28(fp)
  819c14:	e0bff217 	ldw	r2,-56(fp)
  819c18:	108002c4 	addi	r2,r2,11
  819c1c:	1085883a 	add	r2,r2,r2
  819c20:	1085883a 	add	r2,r2,r2
  819c24:	1885883a 	add	r2,r3,r2
  819c28:	e0fff517 	ldw	r3,-44(fp)
  819c2c:	10c00015 	stw	r3,0(r2)
  819c30:	e0bff517 	ldw	r2,-44(fp)
  819c34:	10c00060 	cmpeqi	r3,r2,1
  819c38:	18001c1e 	bne	r3,zero,819cac <start_pass+0x608>
  819c3c:	10c000a0 	cmpeqi	r3,r2,2
  819c40:	1800401e 	bne	r3,zero,819d44 <start_pass+0x6a0>
  819c44:	1000951e 	bne	r2,zero,819e9c <start_pass+0x7f8>
  819c48:	e0bff417 	ldw	r2,-48(fp)
  819c4c:	10801517 	ldw	r2,84(r2)
  819c50:	e0bffb15 	stw	r2,-20(fp)
  819c54:	e03ff315 	stw	zero,-52(fp)
  819c58:	00001006 	br	819c9c <start_pass+0x5f8>
  819c5c:	e0bff317 	ldw	r2,-52(fp)
  819c60:	1085883a 	add	r2,r2,r2
  819c64:	1085883a 	add	r2,r2,r2
  819c68:	1007883a 	mov	r3,r2
  819c6c:	e0bffb17 	ldw	r2,-20(fp)
  819c70:	10c7883a 	add	r3,r2,r3
  819c74:	e13ffa17 	ldw	r4,-24(fp)
  819c78:	e0bff317 	ldw	r2,-52(fp)
  819c7c:	1085883a 	add	r2,r2,r2
  819c80:	2085883a 	add	r2,r4,r2
  819c84:	1080000b 	ldhu	r2,0(r2)
  819c88:	10bfffcc 	andi	r2,r2,65535
  819c8c:	18800015 	stw	r2,0(r3)
  819c90:	e0bff317 	ldw	r2,-52(fp)
  819c94:	10800044 	addi	r2,r2,1
  819c98:	e0bff315 	stw	r2,-52(fp)
  819c9c:	e0bff317 	ldw	r2,-52(fp)
  819ca0:	10801010 	cmplti	r2,r2,64
  819ca4:	103fed1e 	bne	r2,zero,819c5c <__alt_mem_epcs_flash_controller_0+0xff810c5c>
  819ca8:	00008906 	br	819ed0 <start_pass+0x82c>
  819cac:	e0bff417 	ldw	r2,-48(fp)
  819cb0:	10801517 	ldw	r2,84(r2)
  819cb4:	e0bffc15 	stw	r2,-16(fp)
  819cb8:	e03ff315 	stw	zero,-52(fp)
  819cbc:	00001d06 	br	819d34 <start_pass+0x690>
  819cc0:	e0bff317 	ldw	r2,-52(fp)
  819cc4:	1085883a 	add	r2,r2,r2
  819cc8:	1085883a 	add	r2,r2,r2
  819ccc:	1007883a 	mov	r3,r2
  819cd0:	e0bffc17 	ldw	r2,-16(fp)
  819cd4:	10e1883a 	add	r16,r2,r3
  819cd8:	e0fffa17 	ldw	r3,-24(fp)
  819cdc:	e0bff317 	ldw	r2,-52(fp)
  819ce0:	1085883a 	add	r2,r2,r2
  819ce4:	1885883a 	add	r2,r3,r2
  819ce8:	1080000b 	ldhu	r2,0(r2)
  819cec:	113fffcc 	andi	r4,r2,65535
  819cf0:	008021b4 	movhi	r2,134
  819cf4:	10a27204 	addi	r2,r2,-30264
  819cf8:	e0fff317 	ldw	r3,-52(fp)
  819cfc:	18c7883a 	add	r3,r3,r3
  819d00:	10c5883a 	add	r2,r2,r3
  819d04:	1080000b 	ldhu	r2,0(r2)
  819d08:	10bfffcc 	andi	r2,r2,65535
  819d0c:	10a0001c 	xori	r2,r2,32768
  819d10:	10a00004 	addi	r2,r2,-32768
  819d14:	100b883a 	mov	r5,r2
  819d18:	08305040 	call	830504 <__mulsi3>
  819d1c:	10820004 	addi	r2,r2,2048
  819d20:	1005d33a 	srai	r2,r2,12
  819d24:	80800015 	stw	r2,0(r16)
  819d28:	e0bff317 	ldw	r2,-52(fp)
  819d2c:	10800044 	addi	r2,r2,1
  819d30:	e0bff315 	stw	r2,-52(fp)
  819d34:	e0bff317 	ldw	r2,-52(fp)
  819d38:	10801010 	cmplti	r2,r2,64
  819d3c:	103fe01e 	bne	r2,zero,819cc0 <__alt_mem_epcs_flash_controller_0+0xff810cc0>
  819d40:	00006306 	br	819ed0 <start_pass+0x82c>
  819d44:	e0bff417 	ldw	r2,-48(fp)
  819d48:	10801517 	ldw	r2,84(r2)
  819d4c:	e0bffd15 	stw	r2,-12(fp)
  819d50:	e03ff315 	stw	zero,-52(fp)
  819d54:	e03ff715 	stw	zero,-36(fp)
  819d58:	00004c06 	br	819e8c <start_pass+0x7e8>
  819d5c:	e03ff815 	stw	zero,-32(fp)
  819d60:	00004406 	br	819e74 <start_pass+0x7d0>
  819d64:	e0bff317 	ldw	r2,-52(fp)
  819d68:	1085883a 	add	r2,r2,r2
  819d6c:	1085883a 	add	r2,r2,r2
  819d70:	1007883a 	mov	r3,r2
  819d74:	e0bffd17 	ldw	r2,-12(fp)
  819d78:	10e1883a 	add	r16,r2,r3
  819d7c:	e0fffa17 	ldw	r3,-24(fp)
  819d80:	e0bff317 	ldw	r2,-52(fp)
  819d84:	1085883a 	add	r2,r2,r2
  819d88:	1885883a 	add	r2,r3,r2
  819d8c:	1080000b 	ldhu	r2,0(r2)
  819d90:	10bfffcc 	andi	r2,r2,65535
  819d94:	1009883a 	mov	r4,r2
  819d98:	0831d080 	call	831d08 <__floatunsidf>
  819d9c:	1011883a 	mov	r8,r2
  819da0:	1813883a 	mov	r9,r3
  819da4:	008021b4 	movhi	r2,134
  819da8:	10a29204 	addi	r2,r2,-30136
  819dac:	e0fff717 	ldw	r3,-36(fp)
  819db0:	180690fa 	slli	r3,r3,3
  819db4:	10c9883a 	add	r4,r2,r3
  819db8:	20800017 	ldw	r2,0(r4)
  819dbc:	20c00117 	ldw	r3,4(r4)
  819dc0:	100d883a 	mov	r6,r2
  819dc4:	180f883a 	mov	r7,r3
  819dc8:	4009883a 	mov	r4,r8
  819dcc:	480b883a 	mov	r5,r9
  819dd0:	083149c0 	call	83149c <__muldf3>
  819dd4:	1009883a 	mov	r4,r2
  819dd8:	180b883a 	mov	r5,r3
  819ddc:	2011883a 	mov	r8,r4
  819de0:	2813883a 	mov	r9,r5
  819de4:	008021b4 	movhi	r2,134
  819de8:	10a29204 	addi	r2,r2,-30136
  819dec:	e0fff817 	ldw	r3,-32(fp)
  819df0:	180690fa 	slli	r3,r3,3
  819df4:	10c9883a 	add	r4,r2,r3
  819df8:	20800017 	ldw	r2,0(r4)
  819dfc:	20c00117 	ldw	r3,4(r4)
  819e00:	100d883a 	mov	r6,r2
  819e04:	180f883a 	mov	r7,r3
  819e08:	4009883a 	mov	r4,r8
  819e0c:	480b883a 	mov	r5,r9
  819e10:	083149c0 	call	83149c <__muldf3>
  819e14:	1009883a 	mov	r4,r2
  819e18:	180b883a 	mov	r5,r3
  819e1c:	2005883a 	mov	r2,r4
  819e20:	2807883a 	mov	r3,r5
  819e24:	000d883a 	mov	r6,zero
  819e28:	01cff034 	movhi	r7,16320
  819e2c:	1009883a 	mov	r4,r2
  819e30:	180b883a 	mov	r5,r3
  819e34:	083149c0 	call	83149c <__muldf3>
  819e38:	1009883a 	mov	r4,r2
  819e3c:	180b883a 	mov	r5,r3
  819e40:	2005883a 	mov	r2,r4
  819e44:	2807883a 	mov	r3,r5
  819e48:	1009883a 	mov	r4,r2
  819e4c:	180b883a 	mov	r5,r3
  819e50:	0831db00 	call	831db0 <__truncdfsf2>
  819e54:	1007883a 	mov	r3,r2
  819e58:	80c00015 	stw	r3,0(r16)
  819e5c:	e0bff317 	ldw	r2,-52(fp)
  819e60:	10800044 	addi	r2,r2,1
  819e64:	e0bff315 	stw	r2,-52(fp)
  819e68:	e0bff817 	ldw	r2,-32(fp)
  819e6c:	10800044 	addi	r2,r2,1
  819e70:	e0bff815 	stw	r2,-32(fp)
  819e74:	e0bff817 	ldw	r2,-32(fp)
  819e78:	10800210 	cmplti	r2,r2,8
  819e7c:	103fb91e 	bne	r2,zero,819d64 <__alt_mem_epcs_flash_controller_0+0xff810d64>
  819e80:	e0bff717 	ldw	r2,-36(fp)
  819e84:	10800044 	addi	r2,r2,1
  819e88:	e0bff715 	stw	r2,-36(fp)
  819e8c:	e0bff717 	ldw	r2,-36(fp)
  819e90:	10800210 	cmplti	r2,r2,8
  819e94:	103fb11e 	bne	r2,zero,819d5c <__alt_mem_epcs_flash_controller_0+0xff810d5c>
  819e98:	00000d06 	br	819ed0 <start_pass+0x82c>
  819e9c:	e0bffe17 	ldw	r2,-8(fp)
  819ea0:	10800017 	ldw	r2,0(r2)
  819ea4:	00c00c44 	movi	r3,49
  819ea8:	10c00515 	stw	r3,20(r2)
  819eac:	e0bffe17 	ldw	r2,-8(fp)
  819eb0:	10800017 	ldw	r2,0(r2)
  819eb4:	10800017 	ldw	r2,0(r2)
  819eb8:	e13ffe17 	ldw	r4,-8(fp)
  819ebc:	103ee83a 	callr	r2
  819ec0:	00000306 	br	819ed0 <start_pass+0x82c>
  819ec4:	0001883a 	nop
  819ec8:	00000106 	br	819ed0 <start_pass+0x82c>
  819ecc:	0001883a 	nop
  819ed0:	e0bff217 	ldw	r2,-56(fp)
  819ed4:	10800044 	addi	r2,r2,1
  819ed8:	e0bff215 	stw	r2,-56(fp)
  819edc:	e0bff417 	ldw	r2,-48(fp)
  819ee0:	10801604 	addi	r2,r2,88
  819ee4:	e0bff415 	stw	r2,-48(fp)
  819ee8:	e0bffe17 	ldw	r2,-8(fp)
  819eec:	10800917 	ldw	r2,36(r2)
  819ef0:	e0fff217 	ldw	r3,-56(fp)
  819ef4:	18bdfb16 	blt	r3,r2,8196e4 <__alt_mem_epcs_flash_controller_0+0xff8106e4>
  819ef8:	0001883a 	nop
  819efc:	e6ffff04 	addi	sp,fp,-4
  819f00:	dfc00217 	ldw	ra,8(sp)
  819f04:	df000117 	ldw	fp,4(sp)
  819f08:	dc000017 	ldw	r16,0(sp)
  819f0c:	dec00304 	addi	sp,sp,12
  819f10:	f800283a 	ret

00819f14 <jinit_inverse_dct>:
  819f14:	defffa04 	addi	sp,sp,-24
  819f18:	dfc00515 	stw	ra,20(sp)
  819f1c:	df000415 	stw	fp,16(sp)
  819f20:	df000404 	addi	fp,sp,16
  819f24:	e13fff15 	stw	r4,-4(fp)
  819f28:	e0bfff17 	ldw	r2,-4(fp)
  819f2c:	10800117 	ldw	r2,4(r2)
  819f30:	10800017 	ldw	r2,0(r2)
  819f34:	01801504 	movi	r6,84
  819f38:	01400044 	movi	r5,1
  819f3c:	e13fff17 	ldw	r4,-4(fp)
  819f40:	103ee83a 	callr	r2
  819f44:	e0bffe15 	stw	r2,-8(fp)
  819f48:	e0fffe17 	ldw	r3,-8(fp)
  819f4c:	e0bfff17 	ldw	r2,-4(fp)
  819f50:	10c07615 	stw	r3,472(r2)
  819f54:	e0fffe17 	ldw	r3,-8(fp)
  819f58:	008020b4 	movhi	r2,130
  819f5c:	10a5a904 	addi	r2,r2,-26972
  819f60:	18800015 	stw	r2,0(r3)
  819f64:	e03ffc15 	stw	zero,-16(fp)
  819f68:	e0bfff17 	ldw	r2,-4(fp)
  819f6c:	10803617 	ldw	r2,216(r2)
  819f70:	e0bffd15 	stw	r2,-12(fp)
  819f74:	00001e06 	br	819ff0 <jinit_inverse_dct+0xdc>
  819f78:	e0bfff17 	ldw	r2,-4(fp)
  819f7c:	10800117 	ldw	r2,4(r2)
  819f80:	10800017 	ldw	r2,0(r2)
  819f84:	01804004 	movi	r6,256
  819f88:	01400044 	movi	r5,1
  819f8c:	e13fff17 	ldw	r4,-4(fp)
  819f90:	103ee83a 	callr	r2
  819f94:	1007883a 	mov	r3,r2
  819f98:	e0bffd17 	ldw	r2,-12(fp)
  819f9c:	10c01515 	stw	r3,84(r2)
  819fa0:	e0bffd17 	ldw	r2,-12(fp)
  819fa4:	10801517 	ldw	r2,84(r2)
  819fa8:	01804004 	movi	r6,256
  819fac:	000b883a 	mov	r5,zero
  819fb0:	1009883a 	mov	r4,r2
  819fb4:	08342980 	call	834298 <memset>
  819fb8:	e0fffe17 	ldw	r3,-8(fp)
  819fbc:	e0bffc17 	ldw	r2,-16(fp)
  819fc0:	108002c4 	addi	r2,r2,11
  819fc4:	1085883a 	add	r2,r2,r2
  819fc8:	1085883a 	add	r2,r2,r2
  819fcc:	1885883a 	add	r2,r3,r2
  819fd0:	00ffffc4 	movi	r3,-1
  819fd4:	10c00015 	stw	r3,0(r2)
  819fd8:	e0bffc17 	ldw	r2,-16(fp)
  819fdc:	10800044 	addi	r2,r2,1
  819fe0:	e0bffc15 	stw	r2,-16(fp)
  819fe4:	e0bffd17 	ldw	r2,-12(fp)
  819fe8:	10801604 	addi	r2,r2,88
  819fec:	e0bffd15 	stw	r2,-12(fp)
  819ff0:	e0bfff17 	ldw	r2,-4(fp)
  819ff4:	10800917 	ldw	r2,36(r2)
  819ff8:	e0fffc17 	ldw	r3,-16(fp)
  819ffc:	18bfde16 	blt	r3,r2,819f78 <__alt_mem_epcs_flash_controller_0+0xff810f78>
  81a000:	0001883a 	nop
  81a004:	e037883a 	mov	sp,fp
  81a008:	dfc00117 	ldw	ra,4(sp)
  81a00c:	df000017 	ldw	fp,0(sp)
  81a010:	dec00204 	addi	sp,sp,8
  81a014:	f800283a 	ret

0081a018 <jpeg_make_d_derived_tbl>:
  81a018:	defead04 	addi	sp,sp,-1356
  81a01c:	dfc15215 	stw	ra,1352(sp)
  81a020:	df015115 	stw	fp,1348(sp)
  81a024:	df015104 	addi	fp,sp,1348
  81a028:	e13ffc15 	stw	r4,-16(fp)
  81a02c:	e17ffd15 	stw	r5,-12(fp)
  81a030:	e1bffe15 	stw	r6,-8(fp)
  81a034:	e1ffff15 	stw	r7,-4(fp)
  81a038:	e0bffe17 	ldw	r2,-8(fp)
  81a03c:	10000316 	blt	r2,zero,81a04c <jpeg_make_d_derived_tbl+0x34>
  81a040:	e0bffe17 	ldw	r2,-8(fp)
  81a044:	10800110 	cmplti	r2,r2,4
  81a048:	10000d1e 	bne	r2,zero,81a080 <jpeg_make_d_derived_tbl+0x68>
  81a04c:	e0bffc17 	ldw	r2,-16(fp)
  81a050:	10800017 	ldw	r2,0(r2)
  81a054:	00c00d04 	movi	r3,52
  81a058:	10c00515 	stw	r3,20(r2)
  81a05c:	e0bffc17 	ldw	r2,-16(fp)
  81a060:	10800017 	ldw	r2,0(r2)
  81a064:	e0fffe17 	ldw	r3,-8(fp)
  81a068:	10c00615 	stw	r3,24(r2)
  81a06c:	e0bffc17 	ldw	r2,-16(fp)
  81a070:	10800017 	ldw	r2,0(r2)
  81a074:	10800017 	ldw	r2,0(r2)
  81a078:	e13ffc17 	ldw	r4,-16(fp)
  81a07c:	103ee83a 	callr	r2
  81a080:	e0bffd17 	ldw	r2,-12(fp)
  81a084:	10000826 	beq	r2,zero,81a0a8 <jpeg_make_d_derived_tbl+0x90>
  81a088:	e0fffc17 	ldw	r3,-16(fp)
  81a08c:	e0bffe17 	ldw	r2,-8(fp)
  81a090:	10800b44 	addi	r2,r2,45
  81a094:	1085883a 	add	r2,r2,r2
  81a098:	1085883a 	add	r2,r2,r2
  81a09c:	1885883a 	add	r2,r3,r2
  81a0a0:	10800017 	ldw	r2,0(r2)
  81a0a4:	00000706 	br	81a0c4 <jpeg_make_d_derived_tbl+0xac>
  81a0a8:	e0fffc17 	ldw	r3,-16(fp)
  81a0ac:	e0bffe17 	ldw	r2,-8(fp)
  81a0b0:	10800c44 	addi	r2,r2,49
  81a0b4:	1085883a 	add	r2,r2,r2
  81a0b8:	1085883a 	add	r2,r2,r2
  81a0bc:	1885883a 	add	r2,r3,r2
  81a0c0:	10800017 	ldw	r2,0(r2)
  81a0c4:	e0beb615 	stw	r2,-1320(fp)
  81a0c8:	e0beb617 	ldw	r2,-1320(fp)
  81a0cc:	10000d1e 	bne	r2,zero,81a104 <jpeg_make_d_derived_tbl+0xec>
  81a0d0:	e0bffc17 	ldw	r2,-16(fp)
  81a0d4:	10800017 	ldw	r2,0(r2)
  81a0d8:	00c00d04 	movi	r3,52
  81a0dc:	10c00515 	stw	r3,20(r2)
  81a0e0:	e0bffc17 	ldw	r2,-16(fp)
  81a0e4:	10800017 	ldw	r2,0(r2)
  81a0e8:	e0fffe17 	ldw	r3,-8(fp)
  81a0ec:	10c00615 	stw	r3,24(r2)
  81a0f0:	e0bffc17 	ldw	r2,-16(fp)
  81a0f4:	10800017 	ldw	r2,0(r2)
  81a0f8:	10800017 	ldw	r2,0(r2)
  81a0fc:	e13ffc17 	ldw	r4,-16(fp)
  81a100:	103ee83a 	callr	r2
  81a104:	e0bfff17 	ldw	r2,-4(fp)
  81a108:	10800017 	ldw	r2,0(r2)
  81a10c:	10000a1e 	bne	r2,zero,81a138 <jpeg_make_d_derived_tbl+0x120>
  81a110:	e0bffc17 	ldw	r2,-16(fp)
  81a114:	10800117 	ldw	r2,4(r2)
  81a118:	10800017 	ldw	r2,0(r2)
  81a11c:	01816404 	movi	r6,1424
  81a120:	01400044 	movi	r5,1
  81a124:	e13ffc17 	ldw	r4,-16(fp)
  81a128:	103ee83a 	callr	r2
  81a12c:	1007883a 	mov	r3,r2
  81a130:	e0bfff17 	ldw	r2,-4(fp)
  81a134:	10c00015 	stw	r3,0(r2)
  81a138:	e0bfff17 	ldw	r2,-4(fp)
  81a13c:	10800017 	ldw	r2,0(r2)
  81a140:	e0beb715 	stw	r2,-1316(fp)
  81a144:	e0beb717 	ldw	r2,-1316(fp)
  81a148:	e0feb617 	ldw	r3,-1320(fp)
  81a14c:	10c02315 	stw	r3,140(r2)
  81a150:	e03eaf15 	stw	zero,-1348(fp)
  81a154:	00800044 	movi	r2,1
  81a158:	e0beb115 	stw	r2,-1340(fp)
  81a15c:	00002606 	br	81a1f8 <jpeg_make_d_derived_tbl+0x1e0>
  81a160:	e0feb617 	ldw	r3,-1320(fp)
  81a164:	e0beb117 	ldw	r2,-1340(fp)
  81a168:	1885883a 	add	r2,r3,r2
  81a16c:	10800003 	ldbu	r2,0(r2)
  81a170:	10803fcc 	andi	r2,r2,255
  81a174:	e0beb015 	stw	r2,-1344(fp)
  81a178:	e0beb017 	ldw	r2,-1344(fp)
  81a17c:	10000516 	blt	r2,zero,81a194 <jpeg_make_d_derived_tbl+0x17c>
  81a180:	e0feaf17 	ldw	r3,-1348(fp)
  81a184:	e0beb017 	ldw	r2,-1344(fp)
  81a188:	1885883a 	add	r2,r3,r2
  81a18c:	10804050 	cmplti	r2,r2,257
  81a190:	1000121e 	bne	r2,zero,81a1dc <jpeg_make_d_derived_tbl+0x1c4>
  81a194:	e0bffc17 	ldw	r2,-16(fp)
  81a198:	10800017 	ldw	r2,0(r2)
  81a19c:	00c00244 	movi	r3,9
  81a1a0:	10c00515 	stw	r3,20(r2)
  81a1a4:	e0bffc17 	ldw	r2,-16(fp)
  81a1a8:	10800017 	ldw	r2,0(r2)
  81a1ac:	10800017 	ldw	r2,0(r2)
  81a1b0:	e13ffc17 	ldw	r4,-16(fp)
  81a1b4:	103ee83a 	callr	r2
  81a1b8:	00000806 	br	81a1dc <jpeg_make_d_derived_tbl+0x1c4>
  81a1bc:	e0beaf17 	ldw	r2,-1348(fp)
  81a1c0:	10c00044 	addi	r3,r2,1
  81a1c4:	e0feaf15 	stw	r3,-1348(fp)
  81a1c8:	e0feb117 	ldw	r3,-1340(fp)
  81a1cc:	1809883a 	mov	r4,r3
  81a1d0:	e0feba04 	addi	r3,fp,-1304
  81a1d4:	1885883a 	add	r2,r3,r2
  81a1d8:	11000005 	stb	r4,0(r2)
  81a1dc:	e0beb017 	ldw	r2,-1344(fp)
  81a1e0:	10ffffc4 	addi	r3,r2,-1
  81a1e4:	e0feb015 	stw	r3,-1344(fp)
  81a1e8:	103ff41e 	bne	r2,zero,81a1bc <__alt_mem_epcs_flash_controller_0+0xff8111bc>
  81a1ec:	e0beb117 	ldw	r2,-1340(fp)
  81a1f0:	10800044 	addi	r2,r2,1
  81a1f4:	e0beb115 	stw	r2,-1340(fp)
  81a1f8:	e0beb117 	ldw	r2,-1340(fp)
  81a1fc:	10800450 	cmplti	r2,r2,17
  81a200:	103fd71e 	bne	r2,zero,81a160 <__alt_mem_epcs_flash_controller_0+0xff811160>
  81a204:	e0feba04 	addi	r3,fp,-1304
  81a208:	e0beaf17 	ldw	r2,-1348(fp)
  81a20c:	1885883a 	add	r2,r3,r2
  81a210:	10000005 	stb	zero,0(r2)
  81a214:	e0beaf17 	ldw	r2,-1348(fp)
  81a218:	e0beb815 	stw	r2,-1312(fp)
  81a21c:	e03eb515 	stw	zero,-1324(fp)
  81a220:	e0beba03 	ldbu	r2,-1304(fp)
  81a224:	10803fcc 	andi	r2,r2,255
  81a228:	1080201c 	xori	r2,r2,128
  81a22c:	10bfe004 	addi	r2,r2,-128
  81a230:	e0beb215 	stw	r2,-1336(fp)
  81a234:	e03eaf15 	stw	zero,-1348(fp)
  81a238:	00002a06 	br	81a2e4 <jpeg_make_d_derived_tbl+0x2cc>
  81a23c:	e0beaf17 	ldw	r2,-1348(fp)
  81a240:	10c00044 	addi	r3,r2,1
  81a244:	e0feaf15 	stw	r3,-1348(fp)
  81a248:	1085883a 	add	r2,r2,r2
  81a24c:	1085883a 	add	r2,r2,r2
  81a250:	e0feaf04 	addi	r3,fp,-1348
  81a254:	1885883a 	add	r2,r3,r2
  81a258:	10804c04 	addi	r2,r2,304
  81a25c:	e0feb517 	ldw	r3,-1324(fp)
  81a260:	10c00015 	stw	r3,0(r2)
  81a264:	e0beb517 	ldw	r2,-1324(fp)
  81a268:	10800044 	addi	r2,r2,1
  81a26c:	e0beb515 	stw	r2,-1324(fp)
  81a270:	e0feba04 	addi	r3,fp,-1304
  81a274:	e0beaf17 	ldw	r2,-1348(fp)
  81a278:	1885883a 	add	r2,r3,r2
  81a27c:	10800003 	ldbu	r2,0(r2)
  81a280:	10c03fcc 	andi	r3,r2,255
  81a284:	18c0201c 	xori	r3,r3,128
  81a288:	18ffe004 	addi	r3,r3,-128
  81a28c:	e0beb217 	ldw	r2,-1336(fp)
  81a290:	18bfea26 	beq	r3,r2,81a23c <__alt_mem_epcs_flash_controller_0+0xff81123c>
  81a294:	00c00044 	movi	r3,1
  81a298:	e0beb217 	ldw	r2,-1336(fp)
  81a29c:	1884983a 	sll	r2,r3,r2
  81a2a0:	e0feb517 	ldw	r3,-1324(fp)
  81a2a4:	18800916 	blt	r3,r2,81a2cc <jpeg_make_d_derived_tbl+0x2b4>
  81a2a8:	e0bffc17 	ldw	r2,-16(fp)
  81a2ac:	10800017 	ldw	r2,0(r2)
  81a2b0:	00c00244 	movi	r3,9
  81a2b4:	10c00515 	stw	r3,20(r2)
  81a2b8:	e0bffc17 	ldw	r2,-16(fp)
  81a2bc:	10800017 	ldw	r2,0(r2)
  81a2c0:	10800017 	ldw	r2,0(r2)
  81a2c4:	e13ffc17 	ldw	r4,-16(fp)
  81a2c8:	103ee83a 	callr	r2
  81a2cc:	e0beb517 	ldw	r2,-1324(fp)
  81a2d0:	1085883a 	add	r2,r2,r2
  81a2d4:	e0beb515 	stw	r2,-1324(fp)
  81a2d8:	e0beb217 	ldw	r2,-1336(fp)
  81a2dc:	10800044 	addi	r2,r2,1
  81a2e0:	e0beb215 	stw	r2,-1336(fp)
  81a2e4:	e0feba04 	addi	r3,fp,-1304
  81a2e8:	e0beaf17 	ldw	r2,-1348(fp)
  81a2ec:	1885883a 	add	r2,r3,r2
  81a2f0:	10800003 	ldbu	r2,0(r2)
  81a2f4:	10803fcc 	andi	r2,r2,255
  81a2f8:	1080201c 	xori	r2,r2,128
  81a2fc:	10bfe004 	addi	r2,r2,-128
  81a300:	103fdb1e 	bne	r2,zero,81a270 <__alt_mem_epcs_flash_controller_0+0xff811270>
  81a304:	e03eaf15 	stw	zero,-1348(fp)
  81a308:	00800044 	movi	r2,1
  81a30c:	e0beb115 	stw	r2,-1340(fp)
  81a310:	00003906 	br	81a3f8 <jpeg_make_d_derived_tbl+0x3e0>
  81a314:	e0feb617 	ldw	r3,-1320(fp)
  81a318:	e0beb117 	ldw	r2,-1340(fp)
  81a31c:	1885883a 	add	r2,r3,r2
  81a320:	10800003 	ldbu	r2,0(r2)
  81a324:	10803fcc 	andi	r2,r2,255
  81a328:	10002926 	beq	r2,zero,81a3d0 <jpeg_make_d_derived_tbl+0x3b8>
  81a32c:	e0beaf17 	ldw	r2,-1348(fp)
  81a330:	1085883a 	add	r2,r2,r2
  81a334:	1085883a 	add	r2,r2,r2
  81a338:	e0feaf04 	addi	r3,fp,-1348
  81a33c:	1885883a 	add	r2,r3,r2
  81a340:	10804c04 	addi	r2,r2,304
  81a344:	10800017 	ldw	r2,0(r2)
  81a348:	1007883a 	mov	r3,r2
  81a34c:	e0beaf17 	ldw	r2,-1348(fp)
  81a350:	10c7c83a 	sub	r3,r2,r3
  81a354:	e13eb717 	ldw	r4,-1316(fp)
  81a358:	e0beb117 	ldw	r2,-1340(fp)
  81a35c:	10800484 	addi	r2,r2,18
  81a360:	1085883a 	add	r2,r2,r2
  81a364:	1085883a 	add	r2,r2,r2
  81a368:	2085883a 	add	r2,r4,r2
  81a36c:	10c00015 	stw	r3,0(r2)
  81a370:	e0feb617 	ldw	r3,-1320(fp)
  81a374:	e0beb117 	ldw	r2,-1340(fp)
  81a378:	1885883a 	add	r2,r3,r2
  81a37c:	10800003 	ldbu	r2,0(r2)
  81a380:	10803fcc 	andi	r2,r2,255
  81a384:	e0feaf17 	ldw	r3,-1348(fp)
  81a388:	1885883a 	add	r2,r3,r2
  81a38c:	e0beaf15 	stw	r2,-1348(fp)
  81a390:	e0beaf17 	ldw	r2,-1348(fp)
  81a394:	10bfffc4 	addi	r2,r2,-1
  81a398:	1085883a 	add	r2,r2,r2
  81a39c:	1085883a 	add	r2,r2,r2
  81a3a0:	e0feaf04 	addi	r3,fp,-1348
  81a3a4:	1885883a 	add	r2,r3,r2
  81a3a8:	10804c04 	addi	r2,r2,304
  81a3ac:	10800017 	ldw	r2,0(r2)
  81a3b0:	1009883a 	mov	r4,r2
  81a3b4:	e0feb717 	ldw	r3,-1316(fp)
  81a3b8:	e0beb117 	ldw	r2,-1340(fp)
  81a3bc:	1085883a 	add	r2,r2,r2
  81a3c0:	1085883a 	add	r2,r2,r2
  81a3c4:	1885883a 	add	r2,r3,r2
  81a3c8:	11000015 	stw	r4,0(r2)
  81a3cc:	00000706 	br	81a3ec <jpeg_make_d_derived_tbl+0x3d4>
  81a3d0:	e0feb717 	ldw	r3,-1316(fp)
  81a3d4:	e0beb117 	ldw	r2,-1340(fp)
  81a3d8:	1085883a 	add	r2,r2,r2
  81a3dc:	1085883a 	add	r2,r2,r2
  81a3e0:	1885883a 	add	r2,r3,r2
  81a3e4:	00ffffc4 	movi	r3,-1
  81a3e8:	10c00015 	stw	r3,0(r2)
  81a3ec:	e0beb117 	ldw	r2,-1340(fp)
  81a3f0:	10800044 	addi	r2,r2,1
  81a3f4:	e0beb115 	stw	r2,-1340(fp)
  81a3f8:	e0beb117 	ldw	r2,-1340(fp)
  81a3fc:	10800450 	cmplti	r2,r2,17
  81a400:	103fc41e 	bne	r2,zero,81a314 <__alt_mem_epcs_flash_controller_0+0xff811314>
  81a404:	e0feb717 	ldw	r3,-1316(fp)
  81a408:	00800434 	movhi	r2,16
  81a40c:	10bfffc4 	addi	r2,r2,-1
  81a410:	18801115 	stw	r2,68(r3)
  81a414:	e0beb717 	ldw	r2,-1316(fp)
  81a418:	10802404 	addi	r2,r2,144
  81a41c:	01810004 	movi	r6,1024
  81a420:	000b883a 	mov	r5,zero
  81a424:	1009883a 	mov	r4,r2
  81a428:	08342980 	call	834298 <memset>
  81a42c:	e03eaf15 	stw	zero,-1348(fp)
  81a430:	00800044 	movi	r2,1
  81a434:	e0beb115 	stw	r2,-1340(fp)
  81a438:	00004006 	br	81a53c <jpeg_make_d_derived_tbl+0x524>
  81a43c:	00800044 	movi	r2,1
  81a440:	e0beb015 	stw	r2,-1344(fp)
  81a444:	00003306 	br	81a514 <jpeg_make_d_derived_tbl+0x4fc>
  81a448:	e0beaf17 	ldw	r2,-1348(fp)
  81a44c:	1085883a 	add	r2,r2,r2
  81a450:	1085883a 	add	r2,r2,r2
  81a454:	e0feaf04 	addi	r3,fp,-1348
  81a458:	1885883a 	add	r2,r3,r2
  81a45c:	10804c04 	addi	r2,r2,304
  81a460:	10c00017 	ldw	r3,0(r2)
  81a464:	01000204 	movi	r4,8
  81a468:	e0beb117 	ldw	r2,-1340(fp)
  81a46c:	2085c83a 	sub	r2,r4,r2
  81a470:	1884983a 	sll	r2,r3,r2
  81a474:	e0beb315 	stw	r2,-1332(fp)
  81a478:	00c00204 	movi	r3,8
  81a47c:	e0beb117 	ldw	r2,-1340(fp)
  81a480:	1885c83a 	sub	r2,r3,r2
  81a484:	00c00044 	movi	r3,1
  81a488:	1884983a 	sll	r2,r3,r2
  81a48c:	e0beb415 	stw	r2,-1328(fp)
  81a490:	00001806 	br	81a4f4 <jpeg_make_d_derived_tbl+0x4dc>
  81a494:	e0feb717 	ldw	r3,-1316(fp)
  81a498:	e0beb317 	ldw	r2,-1332(fp)
  81a49c:	10800904 	addi	r2,r2,36
  81a4a0:	1085883a 	add	r2,r2,r2
  81a4a4:	1085883a 	add	r2,r2,r2
  81a4a8:	1885883a 	add	r2,r3,r2
  81a4ac:	e0feb117 	ldw	r3,-1340(fp)
  81a4b0:	10c00015 	stw	r3,0(r2)
  81a4b4:	e0feb617 	ldw	r3,-1320(fp)
  81a4b8:	e0beaf17 	ldw	r2,-1348(fp)
  81a4bc:	1885883a 	add	r2,r3,r2
  81a4c0:	10800444 	addi	r2,r2,17
  81a4c4:	10c00003 	ldbu	r3,0(r2)
  81a4c8:	e13eb717 	ldw	r4,-1316(fp)
  81a4cc:	e0beb317 	ldw	r2,-1332(fp)
  81a4d0:	2085883a 	add	r2,r4,r2
  81a4d4:	10812404 	addi	r2,r2,1168
  81a4d8:	10c00005 	stb	r3,0(r2)
  81a4dc:	e0beb317 	ldw	r2,-1332(fp)
  81a4e0:	10800044 	addi	r2,r2,1
  81a4e4:	e0beb315 	stw	r2,-1332(fp)
  81a4e8:	e0beb417 	ldw	r2,-1328(fp)
  81a4ec:	10bfffc4 	addi	r2,r2,-1
  81a4f0:	e0beb415 	stw	r2,-1328(fp)
  81a4f4:	e0beb417 	ldw	r2,-1328(fp)
  81a4f8:	00bfe616 	blt	zero,r2,81a494 <__alt_mem_epcs_flash_controller_0+0xff811494>
  81a4fc:	e0beb017 	ldw	r2,-1344(fp)
  81a500:	10800044 	addi	r2,r2,1
  81a504:	e0beb015 	stw	r2,-1344(fp)
  81a508:	e0beaf17 	ldw	r2,-1348(fp)
  81a50c:	10800044 	addi	r2,r2,1
  81a510:	e0beaf15 	stw	r2,-1348(fp)
  81a514:	e0feb617 	ldw	r3,-1320(fp)
  81a518:	e0beb117 	ldw	r2,-1340(fp)
  81a51c:	1885883a 	add	r2,r3,r2
  81a520:	10800003 	ldbu	r2,0(r2)
  81a524:	10c03fcc 	andi	r3,r2,255
  81a528:	e0beb017 	ldw	r2,-1344(fp)
  81a52c:	18bfc60e 	bge	r3,r2,81a448 <__alt_mem_epcs_flash_controller_0+0xff811448>
  81a530:	e0beb117 	ldw	r2,-1340(fp)
  81a534:	10800044 	addi	r2,r2,1
  81a538:	e0beb115 	stw	r2,-1340(fp)
  81a53c:	e0beb117 	ldw	r2,-1340(fp)
  81a540:	10800250 	cmplti	r2,r2,9
  81a544:	103fbd1e 	bne	r2,zero,81a43c <__alt_mem_epcs_flash_controller_0+0xff81143c>
  81a548:	e0bffd17 	ldw	r2,-12(fp)
  81a54c:	10001d26 	beq	r2,zero,81a5c4 <jpeg_make_d_derived_tbl+0x5ac>
  81a550:	e03eb015 	stw	zero,-1344(fp)
  81a554:	00001806 	br	81a5b8 <jpeg_make_d_derived_tbl+0x5a0>
  81a558:	e0feb617 	ldw	r3,-1320(fp)
  81a55c:	e0beb017 	ldw	r2,-1344(fp)
  81a560:	1885883a 	add	r2,r3,r2
  81a564:	10800444 	addi	r2,r2,17
  81a568:	10800003 	ldbu	r2,0(r2)
  81a56c:	10803fcc 	andi	r2,r2,255
  81a570:	e0beb915 	stw	r2,-1308(fp)
  81a574:	e0beb917 	ldw	r2,-1308(fp)
  81a578:	10000316 	blt	r2,zero,81a588 <jpeg_make_d_derived_tbl+0x570>
  81a57c:	e0beb917 	ldw	r2,-1308(fp)
  81a580:	10800410 	cmplti	r2,r2,16
  81a584:	1000091e 	bne	r2,zero,81a5ac <jpeg_make_d_derived_tbl+0x594>
  81a588:	e0bffc17 	ldw	r2,-16(fp)
  81a58c:	10800017 	ldw	r2,0(r2)
  81a590:	00c00244 	movi	r3,9
  81a594:	10c00515 	stw	r3,20(r2)
  81a598:	e0bffc17 	ldw	r2,-16(fp)
  81a59c:	10800017 	ldw	r2,0(r2)
  81a5a0:	10800017 	ldw	r2,0(r2)
  81a5a4:	e13ffc17 	ldw	r4,-16(fp)
  81a5a8:	103ee83a 	callr	r2
  81a5ac:	e0beb017 	ldw	r2,-1344(fp)
  81a5b0:	10800044 	addi	r2,r2,1
  81a5b4:	e0beb015 	stw	r2,-1344(fp)
  81a5b8:	e0feb017 	ldw	r3,-1344(fp)
  81a5bc:	e0beb817 	ldw	r2,-1312(fp)
  81a5c0:	18bfe516 	blt	r3,r2,81a558 <__alt_mem_epcs_flash_controller_0+0xff811558>
  81a5c4:	0001883a 	nop
  81a5c8:	e037883a 	mov	sp,fp
  81a5cc:	dfc00117 	ldw	ra,4(sp)
  81a5d0:	df000017 	ldw	fp,0(sp)
  81a5d4:	dec00204 	addi	sp,sp,8
  81a5d8:	f800283a 	ret

0081a5dc <jpeg_fill_bit_buffer>:
  81a5dc:	defff604 	addi	sp,sp,-40
  81a5e0:	dfc00915 	stw	ra,36(sp)
  81a5e4:	df000815 	stw	fp,32(sp)
  81a5e8:	dd000715 	stw	r20,28(sp)
  81a5ec:	dcc00615 	stw	r19,24(sp)
  81a5f0:	dc800515 	stw	r18,20(sp)
  81a5f4:	dc400415 	stw	r17,16(sp)
  81a5f8:	dc000315 	stw	r16,12(sp)
  81a5fc:	df000804 	addi	fp,sp,32
  81a600:	e13ff915 	stw	r4,-28(fp)
  81a604:	2829883a 	mov	r20,r5
  81a608:	3025883a 	mov	r18,r6
  81a60c:	e1fffa15 	stw	r7,-24(fp)
  81a610:	e0bff917 	ldw	r2,-28(fp)
  81a614:	14c00017 	ldw	r19,0(r2)
  81a618:	e0bff917 	ldw	r2,-28(fp)
  81a61c:	14000117 	ldw	r16,4(r2)
  81a620:	e0bff917 	ldw	r2,-28(fp)
  81a624:	10800417 	ldw	r2,16(r2)
  81a628:	e0bff815 	stw	r2,-32(fp)
  81a62c:	e0bff817 	ldw	r2,-32(fp)
  81a630:	10806e17 	ldw	r2,440(r2)
  81a634:	1000391e 	bne	r2,zero,81a71c <jpeg_fill_bit_buffer+0x140>
  81a638:	00003506 	br	81a710 <jpeg_fill_bit_buffer+0x134>
  81a63c:	80000e1e 	bne	r16,zero,81a678 <jpeg_fill_bit_buffer+0x9c>
  81a640:	e0bff817 	ldw	r2,-32(fp)
  81a644:	10800617 	ldw	r2,24(r2)
  81a648:	10800317 	ldw	r2,12(r2)
  81a64c:	e13ff817 	ldw	r4,-32(fp)
  81a650:	103ee83a 	callr	r2
  81a654:	1000021e 	bne	r2,zero,81a660 <jpeg_fill_bit_buffer+0x84>
  81a658:	0005883a 	mov	r2,zero
  81a65c:	00005006 	br	81a7a0 <jpeg_fill_bit_buffer+0x1c4>
  81a660:	e0bff817 	ldw	r2,-32(fp)
  81a664:	10800617 	ldw	r2,24(r2)
  81a668:	14c00017 	ldw	r19,0(r2)
  81a66c:	e0bff817 	ldw	r2,-32(fp)
  81a670:	10800617 	ldw	r2,24(r2)
  81a674:	14000117 	ldw	r16,4(r2)
  81a678:	843fffc4 	addi	r16,r16,-1
  81a67c:	9805883a 	mov	r2,r19
  81a680:	14c00044 	addi	r19,r2,1
  81a684:	10800003 	ldbu	r2,0(r2)
  81a688:	14403fcc 	andi	r17,r2,255
  81a68c:	88803fd8 	cmpnei	r2,r17,255
  81a690:	10001c1e 	bne	r2,zero,81a704 <jpeg_fill_bit_buffer+0x128>
  81a694:	80000e1e 	bne	r16,zero,81a6d0 <jpeg_fill_bit_buffer+0xf4>
  81a698:	e0bff817 	ldw	r2,-32(fp)
  81a69c:	10800617 	ldw	r2,24(r2)
  81a6a0:	10800317 	ldw	r2,12(r2)
  81a6a4:	e13ff817 	ldw	r4,-32(fp)
  81a6a8:	103ee83a 	callr	r2
  81a6ac:	1000021e 	bne	r2,zero,81a6b8 <jpeg_fill_bit_buffer+0xdc>
  81a6b0:	0005883a 	mov	r2,zero
  81a6b4:	00003a06 	br	81a7a0 <jpeg_fill_bit_buffer+0x1c4>
  81a6b8:	e0bff817 	ldw	r2,-32(fp)
  81a6bc:	10800617 	ldw	r2,24(r2)
  81a6c0:	14c00017 	ldw	r19,0(r2)
  81a6c4:	e0bff817 	ldw	r2,-32(fp)
  81a6c8:	10800617 	ldw	r2,24(r2)
  81a6cc:	14000117 	ldw	r16,4(r2)
  81a6d0:	843fffc4 	addi	r16,r16,-1
  81a6d4:	9805883a 	mov	r2,r19
  81a6d8:	14c00044 	addi	r19,r2,1
  81a6dc:	10800003 	ldbu	r2,0(r2)
  81a6e0:	14403fcc 	andi	r17,r2,255
  81a6e4:	88803fe0 	cmpeqi	r2,r17,255
  81a6e8:	103fea1e 	bne	r2,zero,81a694 <__alt_mem_epcs_flash_controller_0+0xff811694>
  81a6ec:	8800021e 	bne	r17,zero,81a6f8 <jpeg_fill_bit_buffer+0x11c>
  81a6f0:	04403fc4 	movi	r17,255
  81a6f4:	00000306 	br	81a704 <jpeg_fill_bit_buffer+0x128>
  81a6f8:	e0bff817 	ldw	r2,-32(fp)
  81a6fc:	14406e15 	stw	r17,440(r2)
  81a700:	00000606 	br	81a71c <jpeg_fill_bit_buffer+0x140>
  81a704:	a004923a 	slli	r2,r20,8
  81a708:	1468b03a 	or	r20,r2,r17
  81a70c:	94800204 	addi	r18,r18,8
  81a710:	90800650 	cmplti	r2,r18,25
  81a714:	103fc91e 	bne	r2,zero,81a63c <__alt_mem_epcs_flash_controller_0+0xff81163c>
  81a718:	00001806 	br	81a77c <jpeg_fill_bit_buffer+0x1a0>
  81a71c:	e0bffa17 	ldw	r2,-24(fp)
  81a720:	9080160e 	bge	r18,r2,81a77c <jpeg_fill_bit_buffer+0x1a0>
  81a724:	e0bff817 	ldw	r2,-32(fp)
  81a728:	10807517 	ldw	r2,468(r2)
  81a72c:	10800a17 	ldw	r2,40(r2)
  81a730:	10000e1e 	bne	r2,zero,81a76c <jpeg_fill_bit_buffer+0x190>
  81a734:	e0bff817 	ldw	r2,-32(fp)
  81a738:	10800017 	ldw	r2,0(r2)
  81a73c:	00c01e04 	movi	r3,120
  81a740:	10c00515 	stw	r3,20(r2)
  81a744:	e0bff817 	ldw	r2,-32(fp)
  81a748:	10800017 	ldw	r2,0(r2)
  81a74c:	10800117 	ldw	r2,4(r2)
  81a750:	017fffc4 	movi	r5,-1
  81a754:	e13ff817 	ldw	r4,-32(fp)
  81a758:	103ee83a 	callr	r2
  81a75c:	e0bff817 	ldw	r2,-32(fp)
  81a760:	10807517 	ldw	r2,468(r2)
  81a764:	00c00044 	movi	r3,1
  81a768:	10c00a15 	stw	r3,40(r2)
  81a76c:	00800644 	movi	r2,25
  81a770:	1485c83a 	sub	r2,r2,r18
  81a774:	a0a8983a 	sll	r20,r20,r2
  81a778:	04800644 	movi	r18,25
  81a77c:	e0bff917 	ldw	r2,-28(fp)
  81a780:	14c00015 	stw	r19,0(r2)
  81a784:	e0bff917 	ldw	r2,-28(fp)
  81a788:	14000115 	stw	r16,4(r2)
  81a78c:	e0bff917 	ldw	r2,-28(fp)
  81a790:	15000215 	stw	r20,8(r2)
  81a794:	e0bff917 	ldw	r2,-28(fp)
  81a798:	14800315 	stw	r18,12(r2)
  81a79c:	00800044 	movi	r2,1
  81a7a0:	e6fffb04 	addi	sp,fp,-20
  81a7a4:	dfc00617 	ldw	ra,24(sp)
  81a7a8:	df000517 	ldw	fp,20(sp)
  81a7ac:	dd000417 	ldw	r20,16(sp)
  81a7b0:	dcc00317 	ldw	r19,12(sp)
  81a7b4:	dc800217 	ldw	r18,8(sp)
  81a7b8:	dc400117 	ldw	r17,4(sp)
  81a7bc:	dc000017 	ldw	r16,0(sp)
  81a7c0:	dec00704 	addi	sp,sp,28
  81a7c4:	f800283a 	ret

0081a7c8 <jpeg_huff_decode>:
  81a7c8:	defffa04 	addi	sp,sp,-24
  81a7cc:	dfc00515 	stw	ra,20(sp)
  81a7d0:	df000415 	stw	fp,16(sp)
  81a7d4:	dc400315 	stw	r17,12(sp)
  81a7d8:	dc000215 	stw	r16,8(sp)
  81a7dc:	df000404 	addi	fp,sp,16
  81a7e0:	e13ffc15 	stw	r4,-16(fp)
  81a7e4:	2807883a 	mov	r3,r5
  81a7e8:	3005883a 	mov	r2,r6
  81a7ec:	e1fffd15 	stw	r7,-12(fp)
  81a7f0:	e4000217 	ldw	r16,8(fp)
  81a7f4:	14000c0e 	bge	r2,r16,81a828 <jpeg_huff_decode+0x60>
  81a7f8:	800f883a 	mov	r7,r16
  81a7fc:	100d883a 	mov	r6,r2
  81a800:	180b883a 	mov	r5,r3
  81a804:	e13ffc17 	ldw	r4,-16(fp)
  81a808:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81a80c:	1000021e 	bne	r2,zero,81a818 <jpeg_huff_decode+0x50>
  81a810:	00bfffc4 	movi	r2,-1
  81a814:	00004c06 	br	81a948 <jpeg_huff_decode+0x180>
  81a818:	e0bffc17 	ldw	r2,-16(fp)
  81a81c:	10c00217 	ldw	r3,8(r2)
  81a820:	e0bffc17 	ldw	r2,-16(fp)
  81a824:	10800317 	ldw	r2,12(r2)
  81a828:	1405c83a 	sub	r2,r2,r16
  81a82c:	188dd83a 	sra	r6,r3,r2
  81a830:	010021b4 	movhi	r4,134
  81a834:	21236d04 	addi	r4,r4,-29260
  81a838:	840b883a 	add	r5,r16,r16
  81a83c:	294b883a 	add	r5,r5,r5
  81a840:	2149883a 	add	r4,r4,r5
  81a844:	21000017 	ldw	r4,0(r4)
  81a848:	3122703a 	and	r17,r6,r4
  81a84c:	00001506 	br	81a8a4 <jpeg_huff_decode+0xdc>
  81a850:	8c49883a 	add	r4,r17,r17
  81a854:	2023883a 	mov	r17,r4
  81a858:	00800c16 	blt	zero,r2,81a88c <jpeg_huff_decode+0xc4>
  81a85c:	01c00044 	movi	r7,1
  81a860:	100d883a 	mov	r6,r2
  81a864:	180b883a 	mov	r5,r3
  81a868:	e13ffc17 	ldw	r4,-16(fp)
  81a86c:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81a870:	1000021e 	bne	r2,zero,81a87c <jpeg_huff_decode+0xb4>
  81a874:	00bfffc4 	movi	r2,-1
  81a878:	00003306 	br	81a948 <jpeg_huff_decode+0x180>
  81a87c:	e0bffc17 	ldw	r2,-16(fp)
  81a880:	10c00217 	ldw	r3,8(r2)
  81a884:	e0bffc17 	ldw	r2,-16(fp)
  81a888:	10800317 	ldw	r2,12(r2)
  81a88c:	10bfffc4 	addi	r2,r2,-1
  81a890:	188bd83a 	sra	r5,r3,r2
  81a894:	01000044 	movi	r4,1
  81a898:	2908703a 	and	r4,r5,r4
  81a89c:	8922b03a 	or	r17,r17,r4
  81a8a0:	84000044 	addi	r16,r16,1
  81a8a4:	e17ffd17 	ldw	r5,-12(fp)
  81a8a8:	8409883a 	add	r4,r16,r16
  81a8ac:	2109883a 	add	r4,r4,r4
  81a8b0:	2909883a 	add	r4,r5,r4
  81a8b4:	21000017 	ldw	r4,0(r4)
  81a8b8:	247fe516 	blt	r4,r17,81a850 <__alt_mem_epcs_flash_controller_0+0xff811850>
  81a8bc:	e13ffc17 	ldw	r4,-16(fp)
  81a8c0:	20c00215 	stw	r3,8(r4)
  81a8c4:	e0fffc17 	ldw	r3,-16(fp)
  81a8c8:	18800315 	stw	r2,12(r3)
  81a8cc:	80800450 	cmplti	r2,r16,17
  81a8d0:	1000101e 	bne	r2,zero,81a914 <jpeg_huff_decode+0x14c>
  81a8d4:	e0bffc17 	ldw	r2,-16(fp)
  81a8d8:	10800417 	ldw	r2,16(r2)
  81a8dc:	10800017 	ldw	r2,0(r2)
  81a8e0:	00c01e44 	movi	r3,121
  81a8e4:	10c00515 	stw	r3,20(r2)
  81a8e8:	e0bffc17 	ldw	r2,-16(fp)
  81a8ec:	10800417 	ldw	r2,16(r2)
  81a8f0:	10800017 	ldw	r2,0(r2)
  81a8f4:	10800117 	ldw	r2,4(r2)
  81a8f8:	e0fffc17 	ldw	r3,-16(fp)
  81a8fc:	18c00417 	ldw	r3,16(r3)
  81a900:	017fffc4 	movi	r5,-1
  81a904:	1809883a 	mov	r4,r3
  81a908:	103ee83a 	callr	r2
  81a90c:	0005883a 	mov	r2,zero
  81a910:	00000d06 	br	81a948 <jpeg_huff_decode+0x180>
  81a914:	e0bffd17 	ldw	r2,-12(fp)
  81a918:	10c02317 	ldw	r3,140(r2)
  81a91c:	e13ffd17 	ldw	r4,-12(fp)
  81a920:	80800484 	addi	r2,r16,18
  81a924:	1085883a 	add	r2,r2,r2
  81a928:	1085883a 	add	r2,r2,r2
  81a92c:	2085883a 	add	r2,r4,r2
  81a930:	10800017 	ldw	r2,0(r2)
  81a934:	1445883a 	add	r2,r2,r17
  81a938:	1885883a 	add	r2,r3,r2
  81a93c:	10800444 	addi	r2,r2,17
  81a940:	10800003 	ldbu	r2,0(r2)
  81a944:	10803fcc 	andi	r2,r2,255
  81a948:	e6fffe04 	addi	sp,fp,-8
  81a94c:	dfc00317 	ldw	ra,12(sp)
  81a950:	df000217 	ldw	fp,8(sp)
  81a954:	dc400117 	ldw	r17,4(sp)
  81a958:	dc000017 	ldw	r16,0(sp)
  81a95c:	dec00404 	addi	sp,sp,16
  81a960:	f800283a 	ret

0081a964 <finish_pass_huff>:
  81a964:	defffd04 	addi	sp,sp,-12
  81a968:	df000215 	stw	fp,8(sp)
  81a96c:	df000204 	addi	fp,sp,8
  81a970:	e13fff15 	stw	r4,-4(fp)
  81a974:	e0bfff17 	ldw	r2,-4(fp)
  81a978:	10807517 	ldw	r2,468(r2)
  81a97c:	e0bffe15 	stw	r2,-8(fp)
  81a980:	e0bfff17 	ldw	r2,-4(fp)
  81a984:	10c07417 	ldw	r3,464(r2)
  81a988:	e0bfff17 	ldw	r2,-4(fp)
  81a98c:	10807417 	ldw	r2,464(r2)
  81a990:	11000617 	ldw	r4,24(r2)
  81a994:	e0bffe17 	ldw	r2,-8(fp)
  81a998:	10800417 	ldw	r2,16(r2)
  81a99c:	1000010e 	bge	r2,zero,81a9a4 <finish_pass_huff+0x40>
  81a9a0:	108001c4 	addi	r2,r2,7
  81a9a4:	1005d0fa 	srai	r2,r2,3
  81a9a8:	2085883a 	add	r2,r4,r2
  81a9ac:	18800615 	stw	r2,24(r3)
  81a9b0:	e0bffe17 	ldw	r2,-8(fp)
  81a9b4:	10000415 	stw	zero,16(r2)
  81a9b8:	0001883a 	nop
  81a9bc:	e037883a 	mov	sp,fp
  81a9c0:	df000017 	ldw	fp,0(sp)
  81a9c4:	dec00104 	addi	sp,sp,4
  81a9c8:	f800283a 	ret

0081a9cc <process_restart>:
  81a9cc:	defffb04 	addi	sp,sp,-20
  81a9d0:	dfc00415 	stw	ra,16(sp)
  81a9d4:	df000315 	stw	fp,12(sp)
  81a9d8:	df000304 	addi	fp,sp,12
  81a9dc:	e13fff15 	stw	r4,-4(fp)
  81a9e0:	e0bfff17 	ldw	r2,-4(fp)
  81a9e4:	10807517 	ldw	r2,468(r2)
  81a9e8:	e0bffe15 	stw	r2,-8(fp)
  81a9ec:	e13fff17 	ldw	r4,-4(fp)
  81a9f0:	081a9640 	call	81a964 <finish_pass_huff>
  81a9f4:	e0bfff17 	ldw	r2,-4(fp)
  81a9f8:	10807417 	ldw	r2,464(r2)
  81a9fc:	10800217 	ldw	r2,8(r2)
  81aa00:	e13fff17 	ldw	r4,-4(fp)
  81aa04:	103ee83a 	callr	r2
  81aa08:	1000021e 	bne	r2,zero,81aa14 <process_restart+0x48>
  81aa0c:	0005883a 	mov	r2,zero
  81aa10:	00001c06 	br	81aa84 <process_restart+0xb8>
  81aa14:	e03ffd15 	stw	zero,-12(fp)
  81aa18:	00000a06 	br	81aa44 <process_restart+0x78>
  81aa1c:	e0fffe17 	ldw	r3,-8(fp)
  81aa20:	e0bffd17 	ldw	r2,-12(fp)
  81aa24:	10800184 	addi	r2,r2,6
  81aa28:	1085883a 	add	r2,r2,r2
  81aa2c:	1085883a 	add	r2,r2,r2
  81aa30:	1885883a 	add	r2,r3,r2
  81aa34:	10000015 	stw	zero,0(r2)
  81aa38:	e0bffd17 	ldw	r2,-12(fp)
  81aa3c:	10800044 	addi	r2,r2,1
  81aa40:	e0bffd15 	stw	r2,-12(fp)
  81aa44:	e0bfff17 	ldw	r2,-4(fp)
  81aa48:	10805517 	ldw	r2,340(r2)
  81aa4c:	e0fffd17 	ldw	r3,-12(fp)
  81aa50:	18bff216 	blt	r3,r2,81aa1c <__alt_mem_epcs_flash_controller_0+0xff811a1c>
  81aa54:	e0bffe17 	ldw	r2,-8(fp)
  81aa58:	10000515 	stw	zero,20(r2)
  81aa5c:	e0bfff17 	ldw	r2,-4(fp)
  81aa60:	10c04617 	ldw	r3,280(r2)
  81aa64:	e0bffe17 	ldw	r2,-8(fp)
  81aa68:	10c00b15 	stw	r3,44(r2)
  81aa6c:	e0bfff17 	ldw	r2,-4(fp)
  81aa70:	10806e17 	ldw	r2,440(r2)
  81aa74:	1000021e 	bne	r2,zero,81aa80 <process_restart+0xb4>
  81aa78:	e0bffe17 	ldw	r2,-8(fp)
  81aa7c:	10000a15 	stw	zero,40(r2)
  81aa80:	00800044 	movi	r2,1
  81aa84:	e037883a 	mov	sp,fp
  81aa88:	dfc00117 	ldw	ra,4(sp)
  81aa8c:	df000017 	ldw	fp,0(sp)
  81aa90:	dec00204 	addi	sp,sp,8
  81aa94:	f800283a 	ret

0081aa98 <decode_mcu_DC_first>:
  81aa98:	deffe604 	addi	sp,sp,-104
  81aa9c:	dfc01915 	stw	ra,100(sp)
  81aaa0:	df001815 	stw	fp,96(sp)
  81aaa4:	dcc01715 	stw	r19,92(sp)
  81aaa8:	dc801615 	stw	r18,88(sp)
  81aaac:	dc401515 	stw	r17,84(sp)
  81aab0:	dc001415 	stw	r16,80(sp)
  81aab4:	df001804 	addi	fp,sp,96
  81aab8:	e13ffa15 	stw	r4,-24(fp)
  81aabc:	e17ffb15 	stw	r5,-20(fp)
  81aac0:	e0bffa17 	ldw	r2,-24(fp)
  81aac4:	10807517 	ldw	r2,468(r2)
  81aac8:	e0bfea15 	stw	r2,-88(fp)
  81aacc:	e0bffa17 	ldw	r2,-24(fp)
  81aad0:	10806a17 	ldw	r2,424(r2)
  81aad4:	e0bfeb15 	stw	r2,-84(fp)
  81aad8:	e0bffa17 	ldw	r2,-24(fp)
  81aadc:	10804617 	ldw	r2,280(r2)
  81aae0:	10000826 	beq	r2,zero,81ab04 <decode_mcu_DC_first+0x6c>
  81aae4:	e0bfea17 	ldw	r2,-88(fp)
  81aae8:	10800b17 	ldw	r2,44(r2)
  81aaec:	1000051e 	bne	r2,zero,81ab04 <decode_mcu_DC_first+0x6c>
  81aaf0:	e13ffa17 	ldw	r4,-24(fp)
  81aaf4:	081a9cc0 	call	81a9cc <process_restart>
  81aaf8:	1000021e 	bne	r2,zero,81ab04 <decode_mcu_DC_first+0x6c>
  81aafc:	0005883a 	mov	r2,zero
  81ab00:	0000d206 	br	81ae4c <decode_mcu_DC_first+0x3b4>
  81ab04:	e0bfea17 	ldw	r2,-88(fp)
  81ab08:	10800a17 	ldw	r2,40(r2)
  81ab0c:	1000c91e 	bne	r2,zero,81ae34 <decode_mcu_DC_first+0x39c>
  81ab10:	e0bffa17 	ldw	r2,-24(fp)
  81ab14:	e0bff415 	stw	r2,-48(fp)
  81ab18:	e0bffa17 	ldw	r2,-24(fp)
  81ab1c:	10800617 	ldw	r2,24(r2)
  81ab20:	10800017 	ldw	r2,0(r2)
  81ab24:	e0bff015 	stw	r2,-64(fp)
  81ab28:	e0bffa17 	ldw	r2,-24(fp)
  81ab2c:	10800617 	ldw	r2,24(r2)
  81ab30:	10800117 	ldw	r2,4(r2)
  81ab34:	e0bff115 	stw	r2,-60(fp)
  81ab38:	e0bfea17 	ldw	r2,-88(fp)
  81ab3c:	14800317 	ldw	r18,12(r2)
  81ab40:	e0bfea17 	ldw	r2,-88(fp)
  81ab44:	14000417 	ldw	r16,16(r2)
  81ab48:	e0bfea17 	ldw	r2,-88(fp)
  81ab4c:	10c00517 	ldw	r3,20(r2)
  81ab50:	e0fff515 	stw	r3,-44(fp)
  81ab54:	10c00617 	ldw	r3,24(r2)
  81ab58:	e0fff615 	stw	r3,-40(fp)
  81ab5c:	10c00717 	ldw	r3,28(r2)
  81ab60:	e0fff715 	stw	r3,-36(fp)
  81ab64:	10c00817 	ldw	r3,32(r2)
  81ab68:	e0fff815 	stw	r3,-32(fp)
  81ab6c:	10800917 	ldw	r2,36(r2)
  81ab70:	e0bff915 	stw	r2,-28(fp)
  81ab74:	e03fe915 	stw	zero,-92(fp)
  81ab78:	00009306 	br	81adc8 <decode_mcu_DC_first+0x330>
  81ab7c:	e0bfe917 	ldw	r2,-92(fp)
  81ab80:	1085883a 	add	r2,r2,r2
  81ab84:	1085883a 	add	r2,r2,r2
  81ab88:	1007883a 	mov	r3,r2
  81ab8c:	e0bffb17 	ldw	r2,-20(fp)
  81ab90:	10c5883a 	add	r2,r2,r3
  81ab94:	10800017 	ldw	r2,0(r2)
  81ab98:	e0bfec15 	stw	r2,-80(fp)
  81ab9c:	e0fffa17 	ldw	r3,-24(fp)
  81aba0:	e0bfe917 	ldw	r2,-92(fp)
  81aba4:	10801744 	addi	r2,r2,93
  81aba8:	1085883a 	add	r2,r2,r2
  81abac:	1085883a 	add	r2,r2,r2
  81abb0:	1885883a 	add	r2,r3,r2
  81abb4:	10800017 	ldw	r2,0(r2)
  81abb8:	e0bfed15 	stw	r2,-76(fp)
  81abbc:	e0fffa17 	ldw	r3,-24(fp)
  81abc0:	e0bfed17 	ldw	r2,-76(fp)
  81abc4:	10801584 	addi	r2,r2,86
  81abc8:	1085883a 	add	r2,r2,r2
  81abcc:	1085883a 	add	r2,r2,r2
  81abd0:	1885883a 	add	r2,r3,r2
  81abd4:	10800017 	ldw	r2,0(r2)
  81abd8:	e0bfee15 	stw	r2,-72(fp)
  81abdc:	e0bfee17 	ldw	r2,-72(fp)
  81abe0:	10800517 	ldw	r2,20(r2)
  81abe4:	e0ffea17 	ldw	r3,-88(fp)
  81abe8:	10800304 	addi	r2,r2,12
  81abec:	1085883a 	add	r2,r2,r2
  81abf0:	1085883a 	add	r2,r2,r2
  81abf4:	1885883a 	add	r2,r3,r2
  81abf8:	10800017 	ldw	r2,0(r2)
  81abfc:	e0bfef15 	stw	r2,-68(fp)
  81ac00:	80800208 	cmpgei	r2,r16,8
  81ac04:	10000f1e 	bne	r2,zero,81ac44 <decode_mcu_DC_first+0x1ac>
  81ac08:	e0bff004 	addi	r2,fp,-64
  81ac0c:	000f883a 	mov	r7,zero
  81ac10:	800d883a 	mov	r6,r16
  81ac14:	900b883a 	mov	r5,r18
  81ac18:	1009883a 	mov	r4,r2
  81ac1c:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81ac20:	1000021e 	bne	r2,zero,81ac2c <decode_mcu_DC_first+0x194>
  81ac24:	0005883a 	mov	r2,zero
  81ac28:	00008806 	br	81ae4c <decode_mcu_DC_first+0x3b4>
  81ac2c:	e4bff217 	ldw	r18,-56(fp)
  81ac30:	e43ff317 	ldw	r16,-52(fp)
  81ac34:	80800208 	cmpgei	r2,r16,8
  81ac38:	1000021e 	bne	r2,zero,81ac44 <decode_mcu_DC_first+0x1ac>
  81ac3c:	04400044 	movi	r17,1
  81ac40:	00001306 	br	81ac90 <decode_mcu_DC_first+0x1f8>
  81ac44:	80bffe04 	addi	r2,r16,-8
  81ac48:	9087d83a 	sra	r3,r18,r2
  81ac4c:	00803fc4 	movi	r2,255
  81ac50:	18a6703a 	and	r19,r3,r2
  81ac54:	e0ffef17 	ldw	r3,-68(fp)
  81ac58:	98800904 	addi	r2,r19,36
  81ac5c:	1085883a 	add	r2,r2,r2
  81ac60:	1085883a 	add	r2,r2,r2
  81ac64:	1885883a 	add	r2,r3,r2
  81ac68:	14400017 	ldw	r17,0(r2)
  81ac6c:	88000726 	beq	r17,zero,81ac8c <decode_mcu_DC_first+0x1f4>
  81ac70:	8461c83a 	sub	r16,r16,r17
  81ac74:	e0bfef17 	ldw	r2,-68(fp)
  81ac78:	14c5883a 	add	r2,r2,r19
  81ac7c:	10812404 	addi	r2,r2,1168
  81ac80:	10800003 	ldbu	r2,0(r2)
  81ac84:	14403fcc 	andi	r17,r2,255
  81ac88:	00000e06 	br	81acc4 <decode_mcu_DC_first+0x22c>
  81ac8c:	04400244 	movi	r17,9
  81ac90:	e0bff004 	addi	r2,fp,-64
  81ac94:	dc400015 	stw	r17,0(sp)
  81ac98:	e1ffef17 	ldw	r7,-68(fp)
  81ac9c:	800d883a 	mov	r6,r16
  81aca0:	900b883a 	mov	r5,r18
  81aca4:	1009883a 	mov	r4,r2
  81aca8:	081a7c80 	call	81a7c8 <jpeg_huff_decode>
  81acac:	1023883a 	mov	r17,r2
  81acb0:	8800020e 	bge	r17,zero,81acbc <decode_mcu_DC_first+0x224>
  81acb4:	0005883a 	mov	r2,zero
  81acb8:	00006406 	br	81ae4c <decode_mcu_DC_first+0x3b4>
  81acbc:	e4bff217 	ldw	r18,-56(fp)
  81acc0:	e43ff317 	ldw	r16,-52(fp)
  81acc4:	88002726 	beq	r17,zero,81ad64 <decode_mcu_DC_first+0x2cc>
  81acc8:	84400b0e 	bge	r16,r17,81acf8 <decode_mcu_DC_first+0x260>
  81accc:	e0bff004 	addi	r2,fp,-64
  81acd0:	880f883a 	mov	r7,r17
  81acd4:	800d883a 	mov	r6,r16
  81acd8:	900b883a 	mov	r5,r18
  81acdc:	1009883a 	mov	r4,r2
  81ace0:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81ace4:	1000021e 	bne	r2,zero,81acf0 <decode_mcu_DC_first+0x258>
  81ace8:	0005883a 	mov	r2,zero
  81acec:	00005706 	br	81ae4c <decode_mcu_DC_first+0x3b4>
  81acf0:	e4bff217 	ldw	r18,-56(fp)
  81acf4:	e43ff317 	ldw	r16,-52(fp)
  81acf8:	8461c83a 	sub	r16,r16,r17
  81acfc:	9409d83a 	sra	r4,r18,r16
  81ad00:	008021b4 	movhi	r2,134
  81ad04:	10a36d04 	addi	r2,r2,-29260
  81ad08:	8c47883a 	add	r3,r17,r17
  81ad0c:	18c7883a 	add	r3,r3,r3
  81ad10:	10c5883a 	add	r2,r2,r3
  81ad14:	10800017 	ldw	r2,0(r2)
  81ad18:	20a6703a 	and	r19,r4,r2
  81ad1c:	88ffffc4 	addi	r3,r17,-1
  81ad20:	008021b4 	movhi	r2,134
  81ad24:	10a36d04 	addi	r2,r2,-29260
  81ad28:	18c7883a 	add	r3,r3,r3
  81ad2c:	18c7883a 	add	r3,r3,r3
  81ad30:	10c5883a 	add	r2,r2,r3
  81ad34:	10800017 	ldw	r2,0(r2)
  81ad38:	14c00816 	blt	r2,r19,81ad5c <decode_mcu_DC_first+0x2c4>
  81ad3c:	008021b4 	movhi	r2,134
  81ad40:	10a36d04 	addi	r2,r2,-29260
  81ad44:	8c47883a 	add	r3,r17,r17
  81ad48:	18c7883a 	add	r3,r3,r3
  81ad4c:	10c5883a 	add	r2,r2,r3
  81ad50:	10800017 	ldw	r2,0(r2)
  81ad54:	9885c83a 	sub	r2,r19,r2
  81ad58:	00000106 	br	81ad60 <decode_mcu_DC_first+0x2c8>
  81ad5c:	9805883a 	mov	r2,r19
  81ad60:	1023883a 	mov	r17,r2
  81ad64:	e0bfed17 	ldw	r2,-76(fp)
  81ad68:	10800044 	addi	r2,r2,1
  81ad6c:	1085883a 	add	r2,r2,r2
  81ad70:	1085883a 	add	r2,r2,r2
  81ad74:	e0ffe904 	addi	r3,fp,-92
  81ad78:	1885883a 	add	r2,r3,r2
  81ad7c:	10800c04 	addi	r2,r2,48
  81ad80:	10800017 	ldw	r2,0(r2)
  81ad84:	88a3883a 	add	r17,r17,r2
  81ad88:	e0bfed17 	ldw	r2,-76(fp)
  81ad8c:	10800044 	addi	r2,r2,1
  81ad90:	1085883a 	add	r2,r2,r2
  81ad94:	1085883a 	add	r2,r2,r2
  81ad98:	e0ffe904 	addi	r3,fp,-92
  81ad9c:	1885883a 	add	r2,r3,r2
  81ada0:	10800c04 	addi	r2,r2,48
  81ada4:	14400015 	stw	r17,0(r2)
  81ada8:	e0bfeb17 	ldw	r2,-84(fp)
  81adac:	8884983a 	sll	r2,r17,r2
  81adb0:	1007883a 	mov	r3,r2
  81adb4:	e0bfec17 	ldw	r2,-80(fp)
  81adb8:	10c0000d 	sth	r3,0(r2)
  81adbc:	e0bfe917 	ldw	r2,-92(fp)
  81adc0:	10800044 	addi	r2,r2,1
  81adc4:	e0bfe915 	stw	r2,-92(fp)
  81adc8:	e0bffa17 	ldw	r2,-24(fp)
  81adcc:	10805c17 	ldw	r2,368(r2)
  81add0:	e0ffe917 	ldw	r3,-92(fp)
  81add4:	18bf6916 	blt	r3,r2,81ab7c <__alt_mem_epcs_flash_controller_0+0xff811b7c>
  81add8:	e0bffa17 	ldw	r2,-24(fp)
  81addc:	10800617 	ldw	r2,24(r2)
  81ade0:	e0fff017 	ldw	r3,-64(fp)
  81ade4:	10c00015 	stw	r3,0(r2)
  81ade8:	e0bffa17 	ldw	r2,-24(fp)
  81adec:	10800617 	ldw	r2,24(r2)
  81adf0:	e0fff117 	ldw	r3,-60(fp)
  81adf4:	10c00115 	stw	r3,4(r2)
  81adf8:	e0bfea17 	ldw	r2,-88(fp)
  81adfc:	14800315 	stw	r18,12(r2)
  81ae00:	e0bfea17 	ldw	r2,-88(fp)
  81ae04:	14000415 	stw	r16,16(r2)
  81ae08:	e0bfea17 	ldw	r2,-88(fp)
  81ae0c:	e0fff517 	ldw	r3,-44(fp)
  81ae10:	10c00515 	stw	r3,20(r2)
  81ae14:	e0fff617 	ldw	r3,-40(fp)
  81ae18:	10c00615 	stw	r3,24(r2)
  81ae1c:	e0fff717 	ldw	r3,-36(fp)
  81ae20:	10c00715 	stw	r3,28(r2)
  81ae24:	e0fff817 	ldw	r3,-32(fp)
  81ae28:	10c00815 	stw	r3,32(r2)
  81ae2c:	e0fff917 	ldw	r3,-28(fp)
  81ae30:	10c00915 	stw	r3,36(r2)
  81ae34:	e0bfea17 	ldw	r2,-88(fp)
  81ae38:	10800b17 	ldw	r2,44(r2)
  81ae3c:	10ffffc4 	addi	r3,r2,-1
  81ae40:	e0bfea17 	ldw	r2,-88(fp)
  81ae44:	10c00b15 	stw	r3,44(r2)
  81ae48:	00800044 	movi	r2,1
  81ae4c:	e6fffc04 	addi	sp,fp,-16
  81ae50:	dfc00517 	ldw	ra,20(sp)
  81ae54:	df000417 	ldw	fp,16(sp)
  81ae58:	dcc00317 	ldw	r19,12(sp)
  81ae5c:	dc800217 	ldw	r18,8(sp)
  81ae60:	dc400117 	ldw	r17,4(sp)
  81ae64:	dc000017 	ldw	r16,0(sp)
  81ae68:	dec00604 	addi	sp,sp,24
  81ae6c:	f800283a 	ret

0081ae70 <decode_mcu_AC_first>:
  81ae70:	deffea04 	addi	sp,sp,-88
  81ae74:	dfc01515 	stw	ra,84(sp)
  81ae78:	df001415 	stw	fp,80(sp)
  81ae7c:	dd001315 	stw	r20,76(sp)
  81ae80:	dcc01215 	stw	r19,72(sp)
  81ae84:	dc801115 	stw	r18,68(sp)
  81ae88:	dc401015 	stw	r17,64(sp)
  81ae8c:	dc000f15 	stw	r16,60(sp)
  81ae90:	df001404 	addi	fp,sp,80
  81ae94:	e13ff915 	stw	r4,-28(fp)
  81ae98:	e17ffa15 	stw	r5,-24(fp)
  81ae9c:	e0bff917 	ldw	r2,-28(fp)
  81aea0:	10807517 	ldw	r2,468(r2)
  81aea4:	e0bfee15 	stw	r2,-72(fp)
  81aea8:	e0bff917 	ldw	r2,-28(fp)
  81aeac:	10804617 	ldw	r2,280(r2)
  81aeb0:	10000826 	beq	r2,zero,81aed4 <decode_mcu_AC_first+0x64>
  81aeb4:	e0bfee17 	ldw	r2,-72(fp)
  81aeb8:	10800b17 	ldw	r2,44(r2)
  81aebc:	1000051e 	bne	r2,zero,81aed4 <decode_mcu_AC_first+0x64>
  81aec0:	e13ff917 	ldw	r4,-28(fp)
  81aec4:	081a9cc0 	call	81a9cc <process_restart>
  81aec8:	1000021e 	bne	r2,zero,81aed4 <decode_mcu_AC_first+0x64>
  81aecc:	0005883a 	mov	r2,zero
  81aed0:	0000d506 	br	81b228 <decode_mcu_AC_first+0x3b8>
  81aed4:	e0bfee17 	ldw	r2,-72(fp)
  81aed8:	10800a17 	ldw	r2,40(r2)
  81aedc:	1000cc1e 	bne	r2,zero,81b210 <decode_mcu_AC_first+0x3a0>
  81aee0:	e0bff917 	ldw	r2,-28(fp)
  81aee4:	10806817 	ldw	r2,416(r2)
  81aee8:	e0bfef15 	stw	r2,-68(fp)
  81aeec:	e0bff917 	ldw	r2,-28(fp)
  81aef0:	10806a17 	ldw	r2,424(r2)
  81aef4:	e0bff015 	stw	r2,-64(fp)
  81aef8:	e0bff917 	ldw	r2,-28(fp)
  81aefc:	10806c17 	ldw	r2,432(r2)
  81af00:	e0bff115 	stw	r2,-60(fp)
  81af04:	e0bfee17 	ldw	r2,-72(fp)
  81af08:	10800517 	ldw	r2,20(r2)
  81af0c:	e0bfed15 	stw	r2,-76(fp)
  81af10:	e0bfed17 	ldw	r2,-76(fp)
  81af14:	10000426 	beq	r2,zero,81af28 <decode_mcu_AC_first+0xb8>
  81af18:	e0bfed17 	ldw	r2,-76(fp)
  81af1c:	10bfffc4 	addi	r2,r2,-1
  81af20:	e0bfed15 	stw	r2,-76(fp)
  81af24:	0000b706 	br	81b204 <decode_mcu_AC_first+0x394>
  81af28:	e0bff917 	ldw	r2,-28(fp)
  81af2c:	e0bff815 	stw	r2,-32(fp)
  81af30:	e0bff917 	ldw	r2,-28(fp)
  81af34:	10800617 	ldw	r2,24(r2)
  81af38:	10800017 	ldw	r2,0(r2)
  81af3c:	e0bff415 	stw	r2,-48(fp)
  81af40:	e0bff917 	ldw	r2,-28(fp)
  81af44:	10800617 	ldw	r2,24(r2)
  81af48:	10800117 	ldw	r2,4(r2)
  81af4c:	e0bff515 	stw	r2,-44(fp)
  81af50:	e0bfee17 	ldw	r2,-72(fp)
  81af54:	14c00317 	ldw	r19,12(r2)
  81af58:	e0bfee17 	ldw	r2,-72(fp)
  81af5c:	14000417 	ldw	r16,16(r2)
  81af60:	e0bffa17 	ldw	r2,-24(fp)
  81af64:	10800017 	ldw	r2,0(r2)
  81af68:	e0bff215 	stw	r2,-56(fp)
  81af6c:	e0bfee17 	ldw	r2,-72(fp)
  81af70:	10801017 	ldw	r2,64(r2)
  81af74:	e0bff315 	stw	r2,-52(fp)
  81af78:	e0bff917 	ldw	r2,-28(fp)
  81af7c:	15006717 	ldw	r20,412(r2)
  81af80:	00009006 	br	81b1c4 <decode_mcu_AC_first+0x354>
  81af84:	80800208 	cmpgei	r2,r16,8
  81af88:	10000f1e 	bne	r2,zero,81afc8 <decode_mcu_AC_first+0x158>
  81af8c:	e0bff404 	addi	r2,fp,-48
  81af90:	000f883a 	mov	r7,zero
  81af94:	800d883a 	mov	r6,r16
  81af98:	980b883a 	mov	r5,r19
  81af9c:	1009883a 	mov	r4,r2
  81afa0:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81afa4:	1000021e 	bne	r2,zero,81afb0 <decode_mcu_AC_first+0x140>
  81afa8:	0005883a 	mov	r2,zero
  81afac:	00009e06 	br	81b228 <decode_mcu_AC_first+0x3b8>
  81afb0:	e4fff617 	ldw	r19,-40(fp)
  81afb4:	e43ff717 	ldw	r16,-36(fp)
  81afb8:	80800208 	cmpgei	r2,r16,8
  81afbc:	1000021e 	bne	r2,zero,81afc8 <decode_mcu_AC_first+0x158>
  81afc0:	04400044 	movi	r17,1
  81afc4:	00001306 	br	81b014 <decode_mcu_AC_first+0x1a4>
  81afc8:	80bffe04 	addi	r2,r16,-8
  81afcc:	9887d83a 	sra	r3,r19,r2
  81afd0:	00803fc4 	movi	r2,255
  81afd4:	18a4703a 	and	r18,r3,r2
  81afd8:	e0fff317 	ldw	r3,-52(fp)
  81afdc:	90800904 	addi	r2,r18,36
  81afe0:	1085883a 	add	r2,r2,r2
  81afe4:	1085883a 	add	r2,r2,r2
  81afe8:	1885883a 	add	r2,r3,r2
  81afec:	14400017 	ldw	r17,0(r2)
  81aff0:	88000726 	beq	r17,zero,81b010 <decode_mcu_AC_first+0x1a0>
  81aff4:	8461c83a 	sub	r16,r16,r17
  81aff8:	e0bff317 	ldw	r2,-52(fp)
  81affc:	1485883a 	add	r2,r2,r18
  81b000:	10812404 	addi	r2,r2,1168
  81b004:	10800003 	ldbu	r2,0(r2)
  81b008:	14403fcc 	andi	r17,r2,255
  81b00c:	00000e06 	br	81b048 <decode_mcu_AC_first+0x1d8>
  81b010:	04400244 	movi	r17,9
  81b014:	e0bff404 	addi	r2,fp,-48
  81b018:	dc400015 	stw	r17,0(sp)
  81b01c:	e1fff317 	ldw	r7,-52(fp)
  81b020:	800d883a 	mov	r6,r16
  81b024:	980b883a 	mov	r5,r19
  81b028:	1009883a 	mov	r4,r2
  81b02c:	081a7c80 	call	81a7c8 <jpeg_huff_decode>
  81b030:	1023883a 	mov	r17,r2
  81b034:	8800020e 	bge	r17,zero,81b040 <decode_mcu_AC_first+0x1d0>
  81b038:	0005883a 	mov	r2,zero
  81b03c:	00007a06 	br	81b228 <decode_mcu_AC_first+0x3b8>
  81b040:	e4fff617 	ldw	r19,-40(fp)
  81b044:	e43ff717 	ldw	r16,-36(fp)
  81b048:	8825d13a 	srai	r18,r17,4
  81b04c:	8c4003cc 	andi	r17,r17,15
  81b050:	88003726 	beq	r17,zero,81b130 <decode_mcu_AC_first+0x2c0>
  81b054:	a4a9883a 	add	r20,r20,r18
  81b058:	84400b0e 	bge	r16,r17,81b088 <decode_mcu_AC_first+0x218>
  81b05c:	e0bff404 	addi	r2,fp,-48
  81b060:	880f883a 	mov	r7,r17
  81b064:	800d883a 	mov	r6,r16
  81b068:	980b883a 	mov	r5,r19
  81b06c:	1009883a 	mov	r4,r2
  81b070:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81b074:	1000021e 	bne	r2,zero,81b080 <decode_mcu_AC_first+0x210>
  81b078:	0005883a 	mov	r2,zero
  81b07c:	00006a06 	br	81b228 <decode_mcu_AC_first+0x3b8>
  81b080:	e4fff617 	ldw	r19,-40(fp)
  81b084:	e43ff717 	ldw	r16,-36(fp)
  81b088:	8461c83a 	sub	r16,r16,r17
  81b08c:	9c09d83a 	sra	r4,r19,r16
  81b090:	008021b4 	movhi	r2,134
  81b094:	10a36d04 	addi	r2,r2,-29260
  81b098:	8c47883a 	add	r3,r17,r17
  81b09c:	18c7883a 	add	r3,r3,r3
  81b0a0:	10c5883a 	add	r2,r2,r3
  81b0a4:	10800017 	ldw	r2,0(r2)
  81b0a8:	20a4703a 	and	r18,r4,r2
  81b0ac:	88ffffc4 	addi	r3,r17,-1
  81b0b0:	008021b4 	movhi	r2,134
  81b0b4:	10a36d04 	addi	r2,r2,-29260
  81b0b8:	18c7883a 	add	r3,r3,r3
  81b0bc:	18c7883a 	add	r3,r3,r3
  81b0c0:	10c5883a 	add	r2,r2,r3
  81b0c4:	10800017 	ldw	r2,0(r2)
  81b0c8:	14800816 	blt	r2,r18,81b0ec <decode_mcu_AC_first+0x27c>
  81b0cc:	008021b4 	movhi	r2,134
  81b0d0:	10a36d04 	addi	r2,r2,-29260
  81b0d4:	8c47883a 	add	r3,r17,r17
  81b0d8:	18c7883a 	add	r3,r3,r3
  81b0dc:	10c5883a 	add	r2,r2,r3
  81b0e0:	10800017 	ldw	r2,0(r2)
  81b0e4:	9085c83a 	sub	r2,r18,r2
  81b0e8:	00000106 	br	81b0f0 <decode_mcu_AC_first+0x280>
  81b0ec:	9005883a 	mov	r2,r18
  81b0f0:	1023883a 	mov	r17,r2
  81b0f4:	a005883a 	mov	r2,r20
  81b0f8:	1085883a 	add	r2,r2,r2
  81b0fc:	1085883a 	add	r2,r2,r2
  81b100:	1007883a 	mov	r3,r2
  81b104:	e0bff117 	ldw	r2,-60(fp)
  81b108:	10c5883a 	add	r2,r2,r3
  81b10c:	10800017 	ldw	r2,0(r2)
  81b110:	e0fff017 	ldw	r3,-64(fp)
  81b114:	88c6983a 	sll	r3,r17,r3
  81b118:	1809883a 	mov	r4,r3
  81b11c:	e0fff217 	ldw	r3,-56(fp)
  81b120:	1085883a 	add	r2,r2,r2
  81b124:	1885883a 	add	r2,r3,r2
  81b128:	1100000d 	sth	r4,0(r2)
  81b12c:	00002406 	br	81b1c0 <decode_mcu_AC_first+0x350>
  81b130:	908003e0 	cmpeqi	r2,r18,15
  81b134:	1000211e 	bne	r2,zero,81b1bc <decode_mcu_AC_first+0x34c>
  81b138:	90002526 	beq	r18,zero,81b1d0 <decode_mcu_AC_first+0x360>
  81b13c:	00800044 	movi	r2,1
  81b140:	1484983a 	sll	r2,r2,r18
  81b144:	e0bfed15 	stw	r2,-76(fp)
  81b148:	84800b0e 	bge	r16,r18,81b178 <decode_mcu_AC_first+0x308>
  81b14c:	e0bff404 	addi	r2,fp,-48
  81b150:	900f883a 	mov	r7,r18
  81b154:	800d883a 	mov	r6,r16
  81b158:	980b883a 	mov	r5,r19
  81b15c:	1009883a 	mov	r4,r2
  81b160:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81b164:	1000021e 	bne	r2,zero,81b170 <decode_mcu_AC_first+0x300>
  81b168:	0005883a 	mov	r2,zero
  81b16c:	00002e06 	br	81b228 <decode_mcu_AC_first+0x3b8>
  81b170:	e4fff617 	ldw	r19,-40(fp)
  81b174:	e43ff717 	ldw	r16,-36(fp)
  81b178:	84a1c83a 	sub	r16,r16,r18
  81b17c:	9c09d83a 	sra	r4,r19,r16
  81b180:	008021b4 	movhi	r2,134
  81b184:	10a36d04 	addi	r2,r2,-29260
  81b188:	9487883a 	add	r3,r18,r18
  81b18c:	18c7883a 	add	r3,r3,r3
  81b190:	10c5883a 	add	r2,r2,r3
  81b194:	10800017 	ldw	r2,0(r2)
  81b198:	20a4703a 	and	r18,r4,r2
  81b19c:	9007883a 	mov	r3,r18
  81b1a0:	e0bfed17 	ldw	r2,-76(fp)
  81b1a4:	10c5883a 	add	r2,r2,r3
  81b1a8:	e0bfed15 	stw	r2,-76(fp)
  81b1ac:	e0bfed17 	ldw	r2,-76(fp)
  81b1b0:	10bfffc4 	addi	r2,r2,-1
  81b1b4:	e0bfed15 	stw	r2,-76(fp)
  81b1b8:	00000506 	br	81b1d0 <decode_mcu_AC_first+0x360>
  81b1bc:	a50003c4 	addi	r20,r20,15
  81b1c0:	a5000044 	addi	r20,r20,1
  81b1c4:	e0bfef17 	ldw	r2,-68(fp)
  81b1c8:	153f6e0e 	bge	r2,r20,81af84 <__alt_mem_epcs_flash_controller_0+0xff811f84>
  81b1cc:	00000106 	br	81b1d4 <decode_mcu_AC_first+0x364>
  81b1d0:	0001883a 	nop
  81b1d4:	e0bff917 	ldw	r2,-28(fp)
  81b1d8:	10800617 	ldw	r2,24(r2)
  81b1dc:	e0fff417 	ldw	r3,-48(fp)
  81b1e0:	10c00015 	stw	r3,0(r2)
  81b1e4:	e0bff917 	ldw	r2,-28(fp)
  81b1e8:	10800617 	ldw	r2,24(r2)
  81b1ec:	e0fff517 	ldw	r3,-44(fp)
  81b1f0:	10c00115 	stw	r3,4(r2)
  81b1f4:	e0bfee17 	ldw	r2,-72(fp)
  81b1f8:	14c00315 	stw	r19,12(r2)
  81b1fc:	e0bfee17 	ldw	r2,-72(fp)
  81b200:	14000415 	stw	r16,16(r2)
  81b204:	e0bfee17 	ldw	r2,-72(fp)
  81b208:	e0ffed17 	ldw	r3,-76(fp)
  81b20c:	10c00515 	stw	r3,20(r2)
  81b210:	e0bfee17 	ldw	r2,-72(fp)
  81b214:	10800b17 	ldw	r2,44(r2)
  81b218:	10ffffc4 	addi	r3,r2,-1
  81b21c:	e0bfee17 	ldw	r2,-72(fp)
  81b220:	10c00b15 	stw	r3,44(r2)
  81b224:	00800044 	movi	r2,1
  81b228:	e6fffb04 	addi	sp,fp,-20
  81b22c:	dfc00617 	ldw	ra,24(sp)
  81b230:	df000517 	ldw	fp,20(sp)
  81b234:	dd000417 	ldw	r20,16(sp)
  81b238:	dcc00317 	ldw	r19,12(sp)
  81b23c:	dc800217 	ldw	r18,8(sp)
  81b240:	dc400117 	ldw	r17,4(sp)
  81b244:	dc000017 	ldw	r16,0(sp)
  81b248:	dec00704 	addi	sp,sp,28
  81b24c:	f800283a 	ret

0081b250 <decode_mcu_DC_refine>:
  81b250:	defff204 	addi	sp,sp,-56
  81b254:	dfc00d15 	stw	ra,52(sp)
  81b258:	df000c15 	stw	fp,48(sp)
  81b25c:	dc400b15 	stw	r17,44(sp)
  81b260:	dc000a15 	stw	r16,40(sp)
  81b264:	df000c04 	addi	fp,sp,48
  81b268:	e13ffc15 	stw	r4,-16(fp)
  81b26c:	e17ffd15 	stw	r5,-12(fp)
  81b270:	e0bffc17 	ldw	r2,-16(fp)
  81b274:	10807517 	ldw	r2,468(r2)
  81b278:	e0bff515 	stw	r2,-44(fp)
  81b27c:	e0bffc17 	ldw	r2,-16(fp)
  81b280:	10804617 	ldw	r2,280(r2)
  81b284:	10000826 	beq	r2,zero,81b2a8 <decode_mcu_DC_refine+0x58>
  81b288:	e0bff517 	ldw	r2,-44(fp)
  81b28c:	10800b17 	ldw	r2,44(r2)
  81b290:	1000051e 	bne	r2,zero,81b2a8 <decode_mcu_DC_refine+0x58>
  81b294:	e13ffc17 	ldw	r4,-16(fp)
  81b298:	081a9cc0 	call	81a9cc <process_restart>
  81b29c:	1000021e 	bne	r2,zero,81b2a8 <decode_mcu_DC_refine+0x58>
  81b2a0:	0005883a 	mov	r2,zero
  81b2a4:	00005106 	br	81b3ec <decode_mcu_DC_refine+0x19c>
  81b2a8:	e0bffc17 	ldw	r2,-16(fp)
  81b2ac:	e0bffb15 	stw	r2,-20(fp)
  81b2b0:	e0bffc17 	ldw	r2,-16(fp)
  81b2b4:	10800617 	ldw	r2,24(r2)
  81b2b8:	10800017 	ldw	r2,0(r2)
  81b2bc:	e0bff715 	stw	r2,-36(fp)
  81b2c0:	e0bffc17 	ldw	r2,-16(fp)
  81b2c4:	10800617 	ldw	r2,24(r2)
  81b2c8:	10800117 	ldw	r2,4(r2)
  81b2cc:	e0bff815 	stw	r2,-32(fp)
  81b2d0:	e0bff517 	ldw	r2,-44(fp)
  81b2d4:	14400317 	ldw	r17,12(r2)
  81b2d8:	e0bff517 	ldw	r2,-44(fp)
  81b2dc:	14000417 	ldw	r16,16(r2)
  81b2e0:	e0bffc17 	ldw	r2,-16(fp)
  81b2e4:	10806a17 	ldw	r2,424(r2)
  81b2e8:	00c00044 	movi	r3,1
  81b2ec:	1884983a 	sll	r2,r3,r2
  81b2f0:	e0bff615 	stw	r2,-40(fp)
  81b2f4:	e03ff415 	stw	zero,-48(fp)
  81b2f8:	00002606 	br	81b394 <decode_mcu_DC_refine+0x144>
  81b2fc:	04000b16 	blt	zero,r16,81b32c <decode_mcu_DC_refine+0xdc>
  81b300:	e0bff704 	addi	r2,fp,-36
  81b304:	01c00044 	movi	r7,1
  81b308:	800d883a 	mov	r6,r16
  81b30c:	880b883a 	mov	r5,r17
  81b310:	1009883a 	mov	r4,r2
  81b314:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81b318:	1000021e 	bne	r2,zero,81b324 <decode_mcu_DC_refine+0xd4>
  81b31c:	0005883a 	mov	r2,zero
  81b320:	00003206 	br	81b3ec <decode_mcu_DC_refine+0x19c>
  81b324:	e47ff917 	ldw	r17,-28(fp)
  81b328:	e43ffa17 	ldw	r16,-24(fp)
  81b32c:	843fffc4 	addi	r16,r16,-1
  81b330:	8c07d83a 	sra	r3,r17,r16
  81b334:	00800044 	movi	r2,1
  81b338:	1884703a 	and	r2,r3,r2
  81b33c:	10001226 	beq	r2,zero,81b388 <decode_mcu_DC_refine+0x138>
  81b340:	e0bff417 	ldw	r2,-48(fp)
  81b344:	1085883a 	add	r2,r2,r2
  81b348:	1085883a 	add	r2,r2,r2
  81b34c:	1007883a 	mov	r3,r2
  81b350:	e0bffd17 	ldw	r2,-12(fp)
  81b354:	10c5883a 	add	r2,r2,r3
  81b358:	10c00017 	ldw	r3,0(r2)
  81b35c:	e0bff417 	ldw	r2,-48(fp)
  81b360:	1085883a 	add	r2,r2,r2
  81b364:	1085883a 	add	r2,r2,r2
  81b368:	1009883a 	mov	r4,r2
  81b36c:	e0bffd17 	ldw	r2,-12(fp)
  81b370:	1105883a 	add	r2,r2,r4
  81b374:	10800017 	ldw	r2,0(r2)
  81b378:	1080000b 	ldhu	r2,0(r2)
  81b37c:	e13ff617 	ldw	r4,-40(fp)
  81b380:	1104b03a 	or	r2,r2,r4
  81b384:	1880000d 	sth	r2,0(r3)
  81b388:	e0bff417 	ldw	r2,-48(fp)
  81b38c:	10800044 	addi	r2,r2,1
  81b390:	e0bff415 	stw	r2,-48(fp)
  81b394:	e0bffc17 	ldw	r2,-16(fp)
  81b398:	10805c17 	ldw	r2,368(r2)
  81b39c:	e0fff417 	ldw	r3,-48(fp)
  81b3a0:	18bfd616 	blt	r3,r2,81b2fc <__alt_mem_epcs_flash_controller_0+0xff8122fc>
  81b3a4:	e0bffc17 	ldw	r2,-16(fp)
  81b3a8:	10800617 	ldw	r2,24(r2)
  81b3ac:	e0fff717 	ldw	r3,-36(fp)
  81b3b0:	10c00015 	stw	r3,0(r2)
  81b3b4:	e0bffc17 	ldw	r2,-16(fp)
  81b3b8:	10800617 	ldw	r2,24(r2)
  81b3bc:	e0fff817 	ldw	r3,-32(fp)
  81b3c0:	10c00115 	stw	r3,4(r2)
  81b3c4:	e0bff517 	ldw	r2,-44(fp)
  81b3c8:	14400315 	stw	r17,12(r2)
  81b3cc:	e0bff517 	ldw	r2,-44(fp)
  81b3d0:	14000415 	stw	r16,16(r2)
  81b3d4:	e0bff517 	ldw	r2,-44(fp)
  81b3d8:	10800b17 	ldw	r2,44(r2)
  81b3dc:	10ffffc4 	addi	r3,r2,-1
  81b3e0:	e0bff517 	ldw	r2,-44(fp)
  81b3e4:	10c00b15 	stw	r3,44(r2)
  81b3e8:	00800044 	movi	r2,1
  81b3ec:	e6fffe04 	addi	sp,fp,-8
  81b3f0:	dfc00317 	ldw	ra,12(sp)
  81b3f4:	df000217 	ldw	fp,8(sp)
  81b3f8:	dc400117 	ldw	r17,4(sp)
  81b3fc:	dc000017 	ldw	r16,0(sp)
  81b400:	dec00404 	addi	sp,sp,16
  81b404:	f800283a 	ret

0081b408 <decode_mcu_AC_refine>:
  81b408:	deffa604 	addi	sp,sp,-360
  81b40c:	dfc05915 	stw	ra,356(sp)
  81b410:	df005815 	stw	fp,352(sp)
  81b414:	dd005715 	stw	r20,348(sp)
  81b418:	dcc05615 	stw	r19,344(sp)
  81b41c:	dc805515 	stw	r18,340(sp)
  81b420:	dc405415 	stw	r17,336(sp)
  81b424:	dc005315 	stw	r16,332(sp)
  81b428:	df005804 	addi	fp,sp,352
  81b42c:	e13ff915 	stw	r4,-28(fp)
  81b430:	e17ffa15 	stw	r5,-24(fp)
  81b434:	e0bff917 	ldw	r2,-28(fp)
  81b438:	10807517 	ldw	r2,468(r2)
  81b43c:	e0bfab15 	stw	r2,-340(fp)
  81b440:	e0bff917 	ldw	r2,-28(fp)
  81b444:	10804617 	ldw	r2,280(r2)
  81b448:	10000826 	beq	r2,zero,81b46c <decode_mcu_AC_refine+0x64>
  81b44c:	e0bfab17 	ldw	r2,-340(fp)
  81b450:	10800b17 	ldw	r2,44(r2)
  81b454:	1000051e 	bne	r2,zero,81b46c <decode_mcu_AC_refine+0x64>
  81b458:	e13ff917 	ldw	r4,-28(fp)
  81b45c:	081a9cc0 	call	81a9cc <process_restart>
  81b460:	1000021e 	bne	r2,zero,81b46c <decode_mcu_AC_refine+0x64>
  81b464:	0005883a 	mov	r2,zero
  81b468:	00017d06 	br	81ba60 <decode_mcu_AC_refine+0x658>
  81b46c:	e0bfab17 	ldw	r2,-340(fp)
  81b470:	10800a17 	ldw	r2,40(r2)
  81b474:	1001561e 	bne	r2,zero,81b9d0 <decode_mcu_AC_refine+0x5c8>
  81b478:	e0bff917 	ldw	r2,-28(fp)
  81b47c:	10806817 	ldw	r2,416(r2)
  81b480:	e0bfac15 	stw	r2,-336(fp)
  81b484:	e0bff917 	ldw	r2,-28(fp)
  81b488:	10806a17 	ldw	r2,424(r2)
  81b48c:	00c00044 	movi	r3,1
  81b490:	1884983a 	sll	r2,r3,r2
  81b494:	e0bfad15 	stw	r2,-332(fp)
  81b498:	e0bff917 	ldw	r2,-28(fp)
  81b49c:	10806a17 	ldw	r2,424(r2)
  81b4a0:	00ffffc4 	movi	r3,-1
  81b4a4:	1884983a 	sll	r2,r3,r2
  81b4a8:	e0bfae15 	stw	r2,-328(fp)
  81b4ac:	e0bff917 	ldw	r2,-28(fp)
  81b4b0:	10806c17 	ldw	r2,432(r2)
  81b4b4:	e0bfaf15 	stw	r2,-324(fp)
  81b4b8:	e0bff917 	ldw	r2,-28(fp)
  81b4bc:	e0bfb815 	stw	r2,-288(fp)
  81b4c0:	e0bff917 	ldw	r2,-28(fp)
  81b4c4:	10800617 	ldw	r2,24(r2)
  81b4c8:	10800017 	ldw	r2,0(r2)
  81b4cc:	e0bfb415 	stw	r2,-304(fp)
  81b4d0:	e0bff917 	ldw	r2,-28(fp)
  81b4d4:	10800617 	ldw	r2,24(r2)
  81b4d8:	10800117 	ldw	r2,4(r2)
  81b4dc:	e0bfb515 	stw	r2,-300(fp)
  81b4e0:	e0bfab17 	ldw	r2,-340(fp)
  81b4e4:	14400317 	ldw	r17,12(r2)
  81b4e8:	e0bfab17 	ldw	r2,-340(fp)
  81b4ec:	14000417 	ldw	r16,16(r2)
  81b4f0:	e0bfab17 	ldw	r2,-340(fp)
  81b4f4:	10800517 	ldw	r2,20(r2)
  81b4f8:	e0bfa915 	stw	r2,-348(fp)
  81b4fc:	e0bffa17 	ldw	r2,-24(fp)
  81b500:	10800017 	ldw	r2,0(r2)
  81b504:	e0bfb015 	stw	r2,-320(fp)
  81b508:	e0bfab17 	ldw	r2,-340(fp)
  81b50c:	10801017 	ldw	r2,64(r2)
  81b510:	e0bfb115 	stw	r2,-316(fp)
  81b514:	e03faa15 	stw	zero,-344(fp)
  81b518:	e0bff917 	ldw	r2,-28(fp)
  81b51c:	14c06717 	ldw	r19,412(r2)
  81b520:	e0bfa917 	ldw	r2,-348(fp)
  81b524:	1000d31e 	bne	r2,zero,81b874 <decode_mcu_AC_refine+0x46c>
  81b528:	80800208 	cmpgei	r2,r16,8
  81b52c:	10000d1e 	bne	r2,zero,81b564 <decode_mcu_AC_refine+0x15c>
  81b530:	e0bfb404 	addi	r2,fp,-304
  81b534:	000f883a 	mov	r7,zero
  81b538:	800d883a 	mov	r6,r16
  81b53c:	880b883a 	mov	r5,r17
  81b540:	1009883a 	mov	r4,r2
  81b544:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81b548:	10012826 	beq	r2,zero,81b9ec <decode_mcu_AC_refine+0x5e4>
  81b54c:	e47fb617 	ldw	r17,-296(fp)
  81b550:	e43fb717 	ldw	r16,-292(fp)
  81b554:	80800208 	cmpgei	r2,r16,8
  81b558:	1000021e 	bne	r2,zero,81b564 <decode_mcu_AC_refine+0x15c>
  81b55c:	04800044 	movi	r18,1
  81b560:	00001306 	br	81b5b0 <decode_mcu_AC_refine+0x1a8>
  81b564:	80bffe04 	addi	r2,r16,-8
  81b568:	8887d83a 	sra	r3,r17,r2
  81b56c:	00803fc4 	movi	r2,255
  81b570:	18a8703a 	and	r20,r3,r2
  81b574:	e0ffb117 	ldw	r3,-316(fp)
  81b578:	a0800904 	addi	r2,r20,36
  81b57c:	1085883a 	add	r2,r2,r2
  81b580:	1085883a 	add	r2,r2,r2
  81b584:	1885883a 	add	r2,r3,r2
  81b588:	14800017 	ldw	r18,0(r2)
  81b58c:	90000726 	beq	r18,zero,81b5ac <decode_mcu_AC_refine+0x1a4>
  81b590:	84a1c83a 	sub	r16,r16,r18
  81b594:	e0bfb117 	ldw	r2,-316(fp)
  81b598:	1505883a 	add	r2,r2,r20
  81b59c:	10812404 	addi	r2,r2,1168
  81b5a0:	10800003 	ldbu	r2,0(r2)
  81b5a4:	15003fcc 	andi	r20,r2,255
  81b5a8:	00000c06 	br	81b5dc <decode_mcu_AC_refine+0x1d4>
  81b5ac:	04800244 	movi	r18,9
  81b5b0:	e0bfb404 	addi	r2,fp,-304
  81b5b4:	dc800015 	stw	r18,0(sp)
  81b5b8:	e1ffb117 	ldw	r7,-316(fp)
  81b5bc:	800d883a 	mov	r6,r16
  81b5c0:	880b883a 	mov	r5,r17
  81b5c4:	1009883a 	mov	r4,r2
  81b5c8:	081a7c80 	call	81a7c8 <jpeg_huff_decode>
  81b5cc:	1029883a 	mov	r20,r2
  81b5d0:	a0010816 	blt	r20,zero,81b9f4 <decode_mcu_AC_refine+0x5ec>
  81b5d4:	e47fb617 	ldw	r17,-296(fp)
  81b5d8:	e43fb717 	ldw	r16,-292(fp)
  81b5dc:	a025d13a 	srai	r18,r20,4
  81b5e0:	a50003cc 	andi	r20,r20,15
  81b5e4:	a0001f26 	beq	r20,zero,81b664 <decode_mcu_AC_refine+0x25c>
  81b5e8:	a0800060 	cmpeqi	r2,r20,1
  81b5ec:	10000a1e 	bne	r2,zero,81b618 <decode_mcu_AC_refine+0x210>
  81b5f0:	e0bff917 	ldw	r2,-28(fp)
  81b5f4:	10800017 	ldw	r2,0(r2)
  81b5f8:	00c01e44 	movi	r3,121
  81b5fc:	10c00515 	stw	r3,20(r2)
  81b600:	e0bff917 	ldw	r2,-28(fp)
  81b604:	10800017 	ldw	r2,0(r2)
  81b608:	10800117 	ldw	r2,4(r2)
  81b60c:	017fffc4 	movi	r5,-1
  81b610:	e13ff917 	ldw	r4,-28(fp)
  81b614:	103ee83a 	callr	r2
  81b618:	04000916 	blt	zero,r16,81b640 <decode_mcu_AC_refine+0x238>
  81b61c:	e0bfb404 	addi	r2,fp,-304
  81b620:	01c00044 	movi	r7,1
  81b624:	800d883a 	mov	r6,r16
  81b628:	880b883a 	mov	r5,r17
  81b62c:	1009883a 	mov	r4,r2
  81b630:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81b634:	1000f126 	beq	r2,zero,81b9fc <decode_mcu_AC_refine+0x5f4>
  81b638:	e47fb617 	ldw	r17,-296(fp)
  81b63c:	e43fb717 	ldw	r16,-292(fp)
  81b640:	843fffc4 	addi	r16,r16,-1
  81b644:	8c07d83a 	sra	r3,r17,r16
  81b648:	00800044 	movi	r2,1
  81b64c:	1884703a 	and	r2,r3,r2
  81b650:	10000226 	beq	r2,zero,81b65c <decode_mcu_AC_refine+0x254>
  81b654:	e53fad17 	ldw	r20,-332(fp)
  81b658:	00002006 	br	81b6dc <decode_mcu_AC_refine+0x2d4>
  81b65c:	e53fae17 	ldw	r20,-328(fp)
  81b660:	00001e06 	br	81b6dc <decode_mcu_AC_refine+0x2d4>
  81b664:	908003e0 	cmpeqi	r2,r18,15
  81b668:	10001c1e 	bne	r2,zero,81b6dc <decode_mcu_AC_refine+0x2d4>
  81b66c:	00800044 	movi	r2,1
  81b670:	1484983a 	sll	r2,r2,r18
  81b674:	e0bfa915 	stw	r2,-348(fp)
  81b678:	90007d26 	beq	r18,zero,81b870 <decode_mcu_AC_refine+0x468>
  81b67c:	8480090e 	bge	r16,r18,81b6a4 <decode_mcu_AC_refine+0x29c>
  81b680:	e0bfb404 	addi	r2,fp,-304
  81b684:	900f883a 	mov	r7,r18
  81b688:	800d883a 	mov	r6,r16
  81b68c:	880b883a 	mov	r5,r17
  81b690:	1009883a 	mov	r4,r2
  81b694:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81b698:	1000da26 	beq	r2,zero,81ba04 <decode_mcu_AC_refine+0x5fc>
  81b69c:	e47fb617 	ldw	r17,-296(fp)
  81b6a0:	e43fb717 	ldw	r16,-292(fp)
  81b6a4:	84a1c83a 	sub	r16,r16,r18
  81b6a8:	8c09d83a 	sra	r4,r17,r16
  81b6ac:	008021b4 	movhi	r2,134
  81b6b0:	10a36d04 	addi	r2,r2,-29260
  81b6b4:	9487883a 	add	r3,r18,r18
  81b6b8:	18c7883a 	add	r3,r3,r3
  81b6bc:	10c5883a 	add	r2,r2,r3
  81b6c0:	10800017 	ldw	r2,0(r2)
  81b6c4:	20a4703a 	and	r18,r4,r2
  81b6c8:	9007883a 	mov	r3,r18
  81b6cc:	e0bfa917 	ldw	r2,-348(fp)
  81b6d0:	10c5883a 	add	r2,r2,r3
  81b6d4:	e0bfa915 	stw	r2,-348(fp)
  81b6d8:	00006506 	br	81b870 <decode_mcu_AC_refine+0x468>
  81b6dc:	9805883a 	mov	r2,r19
  81b6e0:	1085883a 	add	r2,r2,r2
  81b6e4:	1085883a 	add	r2,r2,r2
  81b6e8:	1007883a 	mov	r3,r2
  81b6ec:	e0bfaf17 	ldw	r2,-324(fp)
  81b6f0:	10c5883a 	add	r2,r2,r3
  81b6f4:	10800017 	ldw	r2,0(r2)
  81b6f8:	1085883a 	add	r2,r2,r2
  81b6fc:	1007883a 	mov	r3,r2
  81b700:	e0bfb017 	ldw	r2,-320(fp)
  81b704:	10c5883a 	add	r2,r2,r3
  81b708:	e0bfb215 	stw	r2,-312(fp)
  81b70c:	e0bfb217 	ldw	r2,-312(fp)
  81b710:	1080000b 	ldhu	r2,0(r2)
  81b714:	10bfffcc 	andi	r2,r2,65535
  81b718:	10a0001c 	xori	r2,r2,32768
  81b71c:	10a00004 	addi	r2,r2,-32768
  81b720:	10002f26 	beq	r2,zero,81b7e0 <decode_mcu_AC_refine+0x3d8>
  81b724:	04000916 	blt	zero,r16,81b74c <decode_mcu_AC_refine+0x344>
  81b728:	e0bfb404 	addi	r2,fp,-304
  81b72c:	01c00044 	movi	r7,1
  81b730:	800d883a 	mov	r6,r16
  81b734:	880b883a 	mov	r5,r17
  81b738:	1009883a 	mov	r4,r2
  81b73c:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81b740:	1000b226 	beq	r2,zero,81ba0c <decode_mcu_AC_refine+0x604>
  81b744:	e47fb617 	ldw	r17,-296(fp)
  81b748:	e43fb717 	ldw	r16,-292(fp)
  81b74c:	843fffc4 	addi	r16,r16,-1
  81b750:	8c07d83a 	sra	r3,r17,r16
  81b754:	00800044 	movi	r2,1
  81b758:	1884703a 	and	r2,r3,r2
  81b75c:	10002226 	beq	r2,zero,81b7e8 <decode_mcu_AC_refine+0x3e0>
  81b760:	e0bfb217 	ldw	r2,-312(fp)
  81b764:	1080000b 	ldhu	r2,0(r2)
  81b768:	10ffffcc 	andi	r3,r2,65535
  81b76c:	18e0001c 	xori	r3,r3,32768
  81b770:	18e00004 	addi	r3,r3,-32768
  81b774:	e0bfad17 	ldw	r2,-332(fp)
  81b778:	1884703a 	and	r2,r3,r2
  81b77c:	10001a1e 	bne	r2,zero,81b7e8 <decode_mcu_AC_refine+0x3e0>
  81b780:	e0bfb217 	ldw	r2,-312(fp)
  81b784:	1080000b 	ldhu	r2,0(r2)
  81b788:	10bfffcc 	andi	r2,r2,65535
  81b78c:	10a0001c 	xori	r2,r2,32768
  81b790:	10a00004 	addi	r2,r2,-32768
  81b794:	10000916 	blt	r2,zero,81b7bc <decode_mcu_AC_refine+0x3b4>
  81b798:	e0bfb217 	ldw	r2,-312(fp)
  81b79c:	1080000b 	ldhu	r2,0(r2)
  81b7a0:	1007883a 	mov	r3,r2
  81b7a4:	e0bfad17 	ldw	r2,-332(fp)
  81b7a8:	1885883a 	add	r2,r3,r2
  81b7ac:	1007883a 	mov	r3,r2
  81b7b0:	e0bfb217 	ldw	r2,-312(fp)
  81b7b4:	10c0000d 	sth	r3,0(r2)
  81b7b8:	00000b06 	br	81b7e8 <decode_mcu_AC_refine+0x3e0>
  81b7bc:	e0bfb217 	ldw	r2,-312(fp)
  81b7c0:	1080000b 	ldhu	r2,0(r2)
  81b7c4:	1007883a 	mov	r3,r2
  81b7c8:	e0bfae17 	ldw	r2,-328(fp)
  81b7cc:	1885883a 	add	r2,r3,r2
  81b7d0:	1007883a 	mov	r3,r2
  81b7d4:	e0bfb217 	ldw	r2,-312(fp)
  81b7d8:	10c0000d 	sth	r3,0(r2)
  81b7dc:	00000206 	br	81b7e8 <decode_mcu_AC_refine+0x3e0>
  81b7e0:	94bfffc4 	addi	r18,r18,-1
  81b7e4:	90000416 	blt	r18,zero,81b7f8 <decode_mcu_AC_refine+0x3f0>
  81b7e8:	9cc00044 	addi	r19,r19,1
  81b7ec:	e0bfac17 	ldw	r2,-336(fp)
  81b7f0:	14ffba0e 	bge	r2,r19,81b6dc <__alt_mem_epcs_flash_controller_0+0xff8126dc>
  81b7f4:	00000106 	br	81b7fc <decode_mcu_AC_refine+0x3f4>
  81b7f8:	0001883a 	nop
  81b7fc:	a0001826 	beq	r20,zero,81b860 <decode_mcu_AC_refine+0x458>
  81b800:	9805883a 	mov	r2,r19
  81b804:	1085883a 	add	r2,r2,r2
  81b808:	1085883a 	add	r2,r2,r2
  81b80c:	1007883a 	mov	r3,r2
  81b810:	e0bfaf17 	ldw	r2,-324(fp)
  81b814:	10c5883a 	add	r2,r2,r3
  81b818:	10800017 	ldw	r2,0(r2)
  81b81c:	e0bfb315 	stw	r2,-308(fp)
  81b820:	a009883a 	mov	r4,r20
  81b824:	e0ffb017 	ldw	r3,-320(fp)
  81b828:	e0bfb317 	ldw	r2,-308(fp)
  81b82c:	1085883a 	add	r2,r2,r2
  81b830:	1885883a 	add	r2,r3,r2
  81b834:	1100000d 	sth	r4,0(r2)
  81b838:	e0bfaa17 	ldw	r2,-344(fp)
  81b83c:	10c00044 	addi	r3,r2,1
  81b840:	e0ffaa15 	stw	r3,-344(fp)
  81b844:	1085883a 	add	r2,r2,r2
  81b848:	1085883a 	add	r2,r2,r2
  81b84c:	e0ffa904 	addi	r3,fp,-348
  81b850:	1885883a 	add	r2,r3,r2
  81b854:	10801004 	addi	r2,r2,64
  81b858:	e0ffb317 	ldw	r3,-308(fp)
  81b85c:	10c00015 	stw	r3,0(r2)
  81b860:	9cc00044 	addi	r19,r19,1
  81b864:	e0bfac17 	ldw	r2,-336(fp)
  81b868:	14ff2f0e 	bge	r2,r19,81b528 <__alt_mem_epcs_flash_controller_0+0xff812528>
  81b86c:	00000106 	br	81b874 <decode_mcu_AC_refine+0x46c>
  81b870:	0001883a 	nop
  81b874:	e0bfa917 	ldw	r2,-348(fp)
  81b878:	10004626 	beq	r2,zero,81b994 <decode_mcu_AC_refine+0x58c>
  81b87c:	9805883a 	mov	r2,r19
  81b880:	1085883a 	add	r2,r2,r2
  81b884:	1085883a 	add	r2,r2,r2
  81b888:	1007883a 	mov	r3,r2
  81b88c:	e0bfaf17 	ldw	r2,-324(fp)
  81b890:	10c5883a 	add	r2,r2,r3
  81b894:	10800017 	ldw	r2,0(r2)
  81b898:	1085883a 	add	r2,r2,r2
  81b89c:	1007883a 	mov	r3,r2
  81b8a0:	e0bfb017 	ldw	r2,-320(fp)
  81b8a4:	10c5883a 	add	r2,r2,r3
  81b8a8:	e0bfb215 	stw	r2,-312(fp)
  81b8ac:	e0bfb217 	ldw	r2,-312(fp)
  81b8b0:	1080000b 	ldhu	r2,0(r2)
  81b8b4:	10bfffcc 	andi	r2,r2,65535
  81b8b8:	10a0001c 	xori	r2,r2,32768
  81b8bc:	10a00004 	addi	r2,r2,-32768
  81b8c0:	10002e26 	beq	r2,zero,81b97c <decode_mcu_AC_refine+0x574>
  81b8c4:	04000916 	blt	zero,r16,81b8ec <decode_mcu_AC_refine+0x4e4>
  81b8c8:	e0bfb404 	addi	r2,fp,-304
  81b8cc:	01c00044 	movi	r7,1
  81b8d0:	800d883a 	mov	r6,r16
  81b8d4:	880b883a 	mov	r5,r17
  81b8d8:	1009883a 	mov	r4,r2
  81b8dc:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81b8e0:	10004c26 	beq	r2,zero,81ba14 <decode_mcu_AC_refine+0x60c>
  81b8e4:	e47fb617 	ldw	r17,-296(fp)
  81b8e8:	e43fb717 	ldw	r16,-292(fp)
  81b8ec:	843fffc4 	addi	r16,r16,-1
  81b8f0:	8c07d83a 	sra	r3,r17,r16
  81b8f4:	00800044 	movi	r2,1
  81b8f8:	1884703a 	and	r2,r3,r2
  81b8fc:	10001f26 	beq	r2,zero,81b97c <decode_mcu_AC_refine+0x574>
  81b900:	e0bfb217 	ldw	r2,-312(fp)
  81b904:	1080000b 	ldhu	r2,0(r2)
  81b908:	10ffffcc 	andi	r3,r2,65535
  81b90c:	18e0001c 	xori	r3,r3,32768
  81b910:	18e00004 	addi	r3,r3,-32768
  81b914:	e0bfad17 	ldw	r2,-332(fp)
  81b918:	1884703a 	and	r2,r3,r2
  81b91c:	1000171e 	bne	r2,zero,81b97c <decode_mcu_AC_refine+0x574>
  81b920:	e0bfb217 	ldw	r2,-312(fp)
  81b924:	1080000b 	ldhu	r2,0(r2)
  81b928:	10bfffcc 	andi	r2,r2,65535
  81b92c:	10a0001c 	xori	r2,r2,32768
  81b930:	10a00004 	addi	r2,r2,-32768
  81b934:	10000916 	blt	r2,zero,81b95c <decode_mcu_AC_refine+0x554>
  81b938:	e0bfb217 	ldw	r2,-312(fp)
  81b93c:	1080000b 	ldhu	r2,0(r2)
  81b940:	1007883a 	mov	r3,r2
  81b944:	e0bfad17 	ldw	r2,-332(fp)
  81b948:	1885883a 	add	r2,r3,r2
  81b94c:	1007883a 	mov	r3,r2
  81b950:	e0bfb217 	ldw	r2,-312(fp)
  81b954:	10c0000d 	sth	r3,0(r2)
  81b958:	00000806 	br	81b97c <decode_mcu_AC_refine+0x574>
  81b95c:	e0bfb217 	ldw	r2,-312(fp)
  81b960:	1080000b 	ldhu	r2,0(r2)
  81b964:	1007883a 	mov	r3,r2
  81b968:	e0bfae17 	ldw	r2,-328(fp)
  81b96c:	1885883a 	add	r2,r3,r2
  81b970:	1007883a 	mov	r3,r2
  81b974:	e0bfb217 	ldw	r2,-312(fp)
  81b978:	10c0000d 	sth	r3,0(r2)
  81b97c:	9cc00044 	addi	r19,r19,1
  81b980:	e0bfac17 	ldw	r2,-336(fp)
  81b984:	14ffbd0e 	bge	r2,r19,81b87c <__alt_mem_epcs_flash_controller_0+0xff81287c>
  81b988:	e0bfa917 	ldw	r2,-348(fp)
  81b98c:	10bfffc4 	addi	r2,r2,-1
  81b990:	e0bfa915 	stw	r2,-348(fp)
  81b994:	e0bff917 	ldw	r2,-28(fp)
  81b998:	10800617 	ldw	r2,24(r2)
  81b99c:	e0ffb417 	ldw	r3,-304(fp)
  81b9a0:	10c00015 	stw	r3,0(r2)
  81b9a4:	e0bff917 	ldw	r2,-28(fp)
  81b9a8:	10800617 	ldw	r2,24(r2)
  81b9ac:	e0ffb517 	ldw	r3,-300(fp)
  81b9b0:	10c00115 	stw	r3,4(r2)
  81b9b4:	e0bfab17 	ldw	r2,-340(fp)
  81b9b8:	14400315 	stw	r17,12(r2)
  81b9bc:	e0bfab17 	ldw	r2,-340(fp)
  81b9c0:	14000415 	stw	r16,16(r2)
  81b9c4:	e0bfab17 	ldw	r2,-340(fp)
  81b9c8:	e0ffa917 	ldw	r3,-348(fp)
  81b9cc:	10c00515 	stw	r3,20(r2)
  81b9d0:	e0bfab17 	ldw	r2,-340(fp)
  81b9d4:	10800b17 	ldw	r2,44(r2)
  81b9d8:	10ffffc4 	addi	r3,r2,-1
  81b9dc:	e0bfab17 	ldw	r2,-340(fp)
  81b9e0:	10c00b15 	stw	r3,44(r2)
  81b9e4:	00800044 	movi	r2,1
  81b9e8:	00001d06 	br	81ba60 <decode_mcu_AC_refine+0x658>
  81b9ec:	0001883a 	nop
  81b9f0:	00001806 	br	81ba54 <decode_mcu_AC_refine+0x64c>
  81b9f4:	0001883a 	nop
  81b9f8:	00001606 	br	81ba54 <decode_mcu_AC_refine+0x64c>
  81b9fc:	0001883a 	nop
  81ba00:	00001406 	br	81ba54 <decode_mcu_AC_refine+0x64c>
  81ba04:	0001883a 	nop
  81ba08:	00001206 	br	81ba54 <decode_mcu_AC_refine+0x64c>
  81ba0c:	0001883a 	nop
  81ba10:	00001006 	br	81ba54 <decode_mcu_AC_refine+0x64c>
  81ba14:	0001883a 	nop
  81ba18:	00000e06 	br	81ba54 <decode_mcu_AC_refine+0x64c>
  81ba1c:	e0bfaa17 	ldw	r2,-344(fp)
  81ba20:	10bfffc4 	addi	r2,r2,-1
  81ba24:	e0bfaa15 	stw	r2,-344(fp)
  81ba28:	e0bfaa17 	ldw	r2,-344(fp)
  81ba2c:	1085883a 	add	r2,r2,r2
  81ba30:	1085883a 	add	r2,r2,r2
  81ba34:	e0ffa904 	addi	r3,fp,-348
  81ba38:	1885883a 	add	r2,r3,r2
  81ba3c:	10801004 	addi	r2,r2,64
  81ba40:	10800017 	ldw	r2,0(r2)
  81ba44:	e0ffb017 	ldw	r3,-320(fp)
  81ba48:	1085883a 	add	r2,r2,r2
  81ba4c:	1885883a 	add	r2,r3,r2
  81ba50:	1000000d 	sth	zero,0(r2)
  81ba54:	e0bfaa17 	ldw	r2,-344(fp)
  81ba58:	103ff01e 	bne	r2,zero,81ba1c <__alt_mem_epcs_flash_controller_0+0xff812a1c>
  81ba5c:	0005883a 	mov	r2,zero
  81ba60:	e6fffb04 	addi	sp,fp,-20
  81ba64:	dfc00617 	ldw	ra,24(sp)
  81ba68:	df000517 	ldw	fp,20(sp)
  81ba6c:	dd000417 	ldw	r20,16(sp)
  81ba70:	dcc00317 	ldw	r19,12(sp)
  81ba74:	dc800217 	ldw	r18,8(sp)
  81ba78:	dc400117 	ldw	r17,4(sp)
  81ba7c:	dc000017 	ldw	r16,0(sp)
  81ba80:	dec00704 	addi	sp,sp,28
  81ba84:	f800283a 	ret

0081ba88 <decode_mcu_sub>:
  81ba88:	deffe404 	addi	sp,sp,-112
  81ba8c:	dfc01b15 	stw	ra,108(sp)
  81ba90:	df001a15 	stw	fp,104(sp)
  81ba94:	dd001915 	stw	r20,100(sp)
  81ba98:	dcc01815 	stw	r19,96(sp)
  81ba9c:	dc801715 	stw	r18,92(sp)
  81baa0:	dc401615 	stw	r17,88(sp)
  81baa4:	dc001515 	stw	r16,84(sp)
  81baa8:	df001a04 	addi	fp,sp,104
  81baac:	e13ff915 	stw	r4,-28(fp)
  81bab0:	e17ffa15 	stw	r5,-24(fp)
  81bab4:	e0bff917 	ldw	r2,-28(fp)
  81bab8:	10807517 	ldw	r2,468(r2)
  81babc:	e0bfe815 	stw	r2,-96(fp)
  81bac0:	e0bff917 	ldw	r2,-28(fp)
  81bac4:	10804617 	ldw	r2,280(r2)
  81bac8:	10000826 	beq	r2,zero,81baec <decode_mcu_sub+0x64>
  81bacc:	e0bfe817 	ldw	r2,-96(fp)
  81bad0:	10800b17 	ldw	r2,44(r2)
  81bad4:	1000051e 	bne	r2,zero,81baec <decode_mcu_sub+0x64>
  81bad8:	e13ff917 	ldw	r4,-28(fp)
  81badc:	081a9cc0 	call	81a9cc <process_restart>
  81bae0:	1000021e 	bne	r2,zero,81baec <decode_mcu_sub+0x64>
  81bae4:	0005883a 	mov	r2,zero
  81bae8:	0001ad06 	br	81c1a0 <decode_mcu_sub+0x718>
  81baec:	e0bfe817 	ldw	r2,-96(fp)
  81baf0:	10800a17 	ldw	r2,40(r2)
  81baf4:	1001a41e 	bne	r2,zero,81c188 <decode_mcu_sub+0x700>
  81baf8:	e0bff917 	ldw	r2,-28(fp)
  81bafc:	10806c17 	ldw	r2,432(r2)
  81bb00:	e0bfe915 	stw	r2,-92(fp)
  81bb04:	e0bff917 	ldw	r2,-28(fp)
  81bb08:	10806d17 	ldw	r2,436(r2)
  81bb0c:	e0bfea15 	stw	r2,-88(fp)
  81bb10:	e0bff917 	ldw	r2,-28(fp)
  81bb14:	e0bff315 	stw	r2,-52(fp)
  81bb18:	e0bff917 	ldw	r2,-28(fp)
  81bb1c:	10800617 	ldw	r2,24(r2)
  81bb20:	10800017 	ldw	r2,0(r2)
  81bb24:	e0bfef15 	stw	r2,-68(fp)
  81bb28:	e0bff917 	ldw	r2,-28(fp)
  81bb2c:	10800617 	ldw	r2,24(r2)
  81bb30:	10800117 	ldw	r2,4(r2)
  81bb34:	e0bff015 	stw	r2,-64(fp)
  81bb38:	e0bfe817 	ldw	r2,-96(fp)
  81bb3c:	14800317 	ldw	r18,12(r2)
  81bb40:	e0bfe817 	ldw	r2,-96(fp)
  81bb44:	14000417 	ldw	r16,16(r2)
  81bb48:	e0bfe817 	ldw	r2,-96(fp)
  81bb4c:	10c00517 	ldw	r3,20(r2)
  81bb50:	e0fff415 	stw	r3,-48(fp)
  81bb54:	10c00617 	ldw	r3,24(r2)
  81bb58:	e0fff515 	stw	r3,-44(fp)
  81bb5c:	10c00717 	ldw	r3,28(r2)
  81bb60:	e0fff615 	stw	r3,-40(fp)
  81bb64:	10c00817 	ldw	r3,32(r2)
  81bb68:	e0fff715 	stw	r3,-36(fp)
  81bb6c:	10800917 	ldw	r2,36(r2)
  81bb70:	e0bff815 	stw	r2,-32(fp)
  81bb74:	e03fe715 	stw	zero,-100(fp)
  81bb78:	00016806 	br	81c11c <decode_mcu_sub+0x694>
  81bb7c:	e0bfe717 	ldw	r2,-100(fp)
  81bb80:	1085883a 	add	r2,r2,r2
  81bb84:	1085883a 	add	r2,r2,r2
  81bb88:	1007883a 	mov	r3,r2
  81bb8c:	e0bffa17 	ldw	r2,-24(fp)
  81bb90:	10c5883a 	add	r2,r2,r3
  81bb94:	10800017 	ldw	r2,0(r2)
  81bb98:	e0bfeb15 	stw	r2,-84(fp)
  81bb9c:	e0ffe817 	ldw	r3,-96(fp)
  81bba0:	e0bfe717 	ldw	r2,-100(fp)
  81bba4:	10800644 	addi	r2,r2,25
  81bba8:	1085883a 	add	r2,r2,r2
  81bbac:	1085883a 	add	r2,r2,r2
  81bbb0:	1885883a 	add	r2,r3,r2
  81bbb4:	10800017 	ldw	r2,0(r2)
  81bbb8:	e0bfec15 	stw	r2,-80(fp)
  81bbbc:	80800208 	cmpgei	r2,r16,8
  81bbc0:	10000f1e 	bne	r2,zero,81bc00 <decode_mcu_sub+0x178>
  81bbc4:	e0bfef04 	addi	r2,fp,-68
  81bbc8:	000f883a 	mov	r7,zero
  81bbcc:	800d883a 	mov	r6,r16
  81bbd0:	900b883a 	mov	r5,r18
  81bbd4:	1009883a 	mov	r4,r2
  81bbd8:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81bbdc:	1000021e 	bne	r2,zero,81bbe8 <decode_mcu_sub+0x160>
  81bbe0:	0005883a 	mov	r2,zero
  81bbe4:	00016e06 	br	81c1a0 <decode_mcu_sub+0x718>
  81bbe8:	e4bff117 	ldw	r18,-60(fp)
  81bbec:	e43ff217 	ldw	r16,-56(fp)
  81bbf0:	80800208 	cmpgei	r2,r16,8
  81bbf4:	1000021e 	bne	r2,zero,81bc00 <decode_mcu_sub+0x178>
  81bbf8:	04400044 	movi	r17,1
  81bbfc:	00001306 	br	81bc4c <decode_mcu_sub+0x1c4>
  81bc00:	80bffe04 	addi	r2,r16,-8
  81bc04:	9087d83a 	sra	r3,r18,r2
  81bc08:	00803fc4 	movi	r2,255
  81bc0c:	18a6703a 	and	r19,r3,r2
  81bc10:	e0ffec17 	ldw	r3,-80(fp)
  81bc14:	98800904 	addi	r2,r19,36
  81bc18:	1085883a 	add	r2,r2,r2
  81bc1c:	1085883a 	add	r2,r2,r2
  81bc20:	1885883a 	add	r2,r3,r2
  81bc24:	14400017 	ldw	r17,0(r2)
  81bc28:	88000726 	beq	r17,zero,81bc48 <decode_mcu_sub+0x1c0>
  81bc2c:	8461c83a 	sub	r16,r16,r17
  81bc30:	e0bfec17 	ldw	r2,-80(fp)
  81bc34:	14c5883a 	add	r2,r2,r19
  81bc38:	10812404 	addi	r2,r2,1168
  81bc3c:	10800003 	ldbu	r2,0(r2)
  81bc40:	14403fcc 	andi	r17,r2,255
  81bc44:	00000e06 	br	81bc80 <decode_mcu_sub+0x1f8>
  81bc48:	04400244 	movi	r17,9
  81bc4c:	e0bfef04 	addi	r2,fp,-68
  81bc50:	dc400015 	stw	r17,0(sp)
  81bc54:	e1ffec17 	ldw	r7,-80(fp)
  81bc58:	800d883a 	mov	r6,r16
  81bc5c:	900b883a 	mov	r5,r18
  81bc60:	1009883a 	mov	r4,r2
  81bc64:	081a7c80 	call	81a7c8 <jpeg_huff_decode>
  81bc68:	1023883a 	mov	r17,r2
  81bc6c:	8800020e 	bge	r17,zero,81bc78 <decode_mcu_sub+0x1f0>
  81bc70:	0005883a 	mov	r2,zero
  81bc74:	00014a06 	br	81c1a0 <decode_mcu_sub+0x718>
  81bc78:	e4bff117 	ldw	r18,-60(fp)
  81bc7c:	e43ff217 	ldw	r16,-56(fp)
  81bc80:	e0ffe817 	ldw	r3,-96(fp)
  81bc84:	e0bfe717 	ldw	r2,-100(fp)
  81bc88:	108008c4 	addi	r2,r2,35
  81bc8c:	1085883a 	add	r2,r2,r2
  81bc90:	1085883a 	add	r2,r2,r2
  81bc94:	1885883a 	add	r2,r3,r2
  81bc98:	10800017 	ldw	r2,0(r2)
  81bc9c:	e0bfec15 	stw	r2,-80(fp)
  81bca0:	04c00044 	movi	r19,1
  81bca4:	e0ffe817 	ldw	r3,-96(fp)
  81bca8:	e0bfe717 	ldw	r2,-100(fp)
  81bcac:	10800b44 	addi	r2,r2,45
  81bcb0:	1085883a 	add	r2,r2,r2
  81bcb4:	1085883a 	add	r2,r2,r2
  81bcb8:	1885883a 	add	r2,r3,r2
  81bcbc:	10800017 	ldw	r2,0(r2)
  81bcc0:	e0bfed15 	stw	r2,-76(fp)
  81bcc4:	e0bfed17 	ldw	r2,-76(fp)
  81bcc8:	1000b526 	beq	r2,zero,81bfa0 <decode_mcu_sub+0x518>
  81bccc:	88002726 	beq	r17,zero,81bd6c <decode_mcu_sub+0x2e4>
  81bcd0:	84400b0e 	bge	r16,r17,81bd00 <decode_mcu_sub+0x278>
  81bcd4:	e0bfef04 	addi	r2,fp,-68
  81bcd8:	880f883a 	mov	r7,r17
  81bcdc:	800d883a 	mov	r6,r16
  81bce0:	900b883a 	mov	r5,r18
  81bce4:	1009883a 	mov	r4,r2
  81bce8:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81bcec:	1000021e 	bne	r2,zero,81bcf8 <decode_mcu_sub+0x270>
  81bcf0:	0005883a 	mov	r2,zero
  81bcf4:	00012a06 	br	81c1a0 <decode_mcu_sub+0x718>
  81bcf8:	e4bff117 	ldw	r18,-60(fp)
  81bcfc:	e43ff217 	ldw	r16,-56(fp)
  81bd00:	8461c83a 	sub	r16,r16,r17
  81bd04:	9409d83a 	sra	r4,r18,r16
  81bd08:	008021b4 	movhi	r2,134
  81bd0c:	10a36d04 	addi	r2,r2,-29260
  81bd10:	8c47883a 	add	r3,r17,r17
  81bd14:	18c7883a 	add	r3,r3,r3
  81bd18:	10c5883a 	add	r2,r2,r3
  81bd1c:	10800017 	ldw	r2,0(r2)
  81bd20:	20a8703a 	and	r20,r4,r2
  81bd24:	88ffffc4 	addi	r3,r17,-1
  81bd28:	008021b4 	movhi	r2,134
  81bd2c:	10a36d04 	addi	r2,r2,-29260
  81bd30:	18c7883a 	add	r3,r3,r3
  81bd34:	18c7883a 	add	r3,r3,r3
  81bd38:	10c5883a 	add	r2,r2,r3
  81bd3c:	10800017 	ldw	r2,0(r2)
  81bd40:	15000816 	blt	r2,r20,81bd64 <decode_mcu_sub+0x2dc>
  81bd44:	008021b4 	movhi	r2,134
  81bd48:	10a36d04 	addi	r2,r2,-29260
  81bd4c:	8c47883a 	add	r3,r17,r17
  81bd50:	18c7883a 	add	r3,r3,r3
  81bd54:	10c5883a 	add	r2,r2,r3
  81bd58:	10800017 	ldw	r2,0(r2)
  81bd5c:	a085c83a 	sub	r2,r20,r2
  81bd60:	00000106 	br	81bd68 <decode_mcu_sub+0x2e0>
  81bd64:	a005883a 	mov	r2,r20
  81bd68:	1023883a 	mov	r17,r2
  81bd6c:	e0fff917 	ldw	r3,-28(fp)
  81bd70:	e0bfe717 	ldw	r2,-100(fp)
  81bd74:	10801744 	addi	r2,r2,93
  81bd78:	1085883a 	add	r2,r2,r2
  81bd7c:	1085883a 	add	r2,r2,r2
  81bd80:	1885883a 	add	r2,r3,r2
  81bd84:	10800017 	ldw	r2,0(r2)
  81bd88:	e0bfee15 	stw	r2,-72(fp)
  81bd8c:	e0bfee17 	ldw	r2,-72(fp)
  81bd90:	10800044 	addi	r2,r2,1
  81bd94:	1085883a 	add	r2,r2,r2
  81bd98:	1085883a 	add	r2,r2,r2
  81bd9c:	e0ffe704 	addi	r3,fp,-100
  81bda0:	1885883a 	add	r2,r3,r2
  81bda4:	10800d04 	addi	r2,r2,52
  81bda8:	10800017 	ldw	r2,0(r2)
  81bdac:	88a3883a 	add	r17,r17,r2
  81bdb0:	e0bfee17 	ldw	r2,-72(fp)
  81bdb4:	10800044 	addi	r2,r2,1
  81bdb8:	1085883a 	add	r2,r2,r2
  81bdbc:	1085883a 	add	r2,r2,r2
  81bdc0:	e0ffe704 	addi	r3,fp,-100
  81bdc4:	1885883a 	add	r2,r3,r2
  81bdc8:	10800d04 	addi	r2,r2,52
  81bdcc:	14400015 	stw	r17,0(r2)
  81bdd0:	8807883a 	mov	r3,r17
  81bdd4:	e0bfeb17 	ldw	r2,-84(fp)
  81bdd8:	10c0000d 	sth	r3,0(r2)
  81bddc:	00006d06 	br	81bf94 <decode_mcu_sub+0x50c>
  81bde0:	80800208 	cmpgei	r2,r16,8
  81bde4:	10000f1e 	bne	r2,zero,81be24 <decode_mcu_sub+0x39c>
  81bde8:	e0bfef04 	addi	r2,fp,-68
  81bdec:	000f883a 	mov	r7,zero
  81bdf0:	800d883a 	mov	r6,r16
  81bdf4:	900b883a 	mov	r5,r18
  81bdf8:	1009883a 	mov	r4,r2
  81bdfc:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81be00:	1000021e 	bne	r2,zero,81be0c <decode_mcu_sub+0x384>
  81be04:	0005883a 	mov	r2,zero
  81be08:	0000e506 	br	81c1a0 <decode_mcu_sub+0x718>
  81be0c:	e4bff117 	ldw	r18,-60(fp)
  81be10:	e43ff217 	ldw	r16,-56(fp)
  81be14:	80800208 	cmpgei	r2,r16,8
  81be18:	1000021e 	bne	r2,zero,81be24 <decode_mcu_sub+0x39c>
  81be1c:	04400044 	movi	r17,1
  81be20:	00001306 	br	81be70 <decode_mcu_sub+0x3e8>
  81be24:	80bffe04 	addi	r2,r16,-8
  81be28:	9087d83a 	sra	r3,r18,r2
  81be2c:	00803fc4 	movi	r2,255
  81be30:	18a8703a 	and	r20,r3,r2
  81be34:	e0ffec17 	ldw	r3,-80(fp)
  81be38:	a0800904 	addi	r2,r20,36
  81be3c:	1085883a 	add	r2,r2,r2
  81be40:	1085883a 	add	r2,r2,r2
  81be44:	1885883a 	add	r2,r3,r2
  81be48:	14400017 	ldw	r17,0(r2)
  81be4c:	88000726 	beq	r17,zero,81be6c <decode_mcu_sub+0x3e4>
  81be50:	8461c83a 	sub	r16,r16,r17
  81be54:	e0bfec17 	ldw	r2,-80(fp)
  81be58:	1505883a 	add	r2,r2,r20
  81be5c:	10812404 	addi	r2,r2,1168
  81be60:	10800003 	ldbu	r2,0(r2)
  81be64:	14403fcc 	andi	r17,r2,255
  81be68:	00000e06 	br	81bea4 <decode_mcu_sub+0x41c>
  81be6c:	04400244 	movi	r17,9
  81be70:	e0bfef04 	addi	r2,fp,-68
  81be74:	dc400015 	stw	r17,0(sp)
  81be78:	e1ffec17 	ldw	r7,-80(fp)
  81be7c:	800d883a 	mov	r6,r16
  81be80:	900b883a 	mov	r5,r18
  81be84:	1009883a 	mov	r4,r2
  81be88:	081a7c80 	call	81a7c8 <jpeg_huff_decode>
  81be8c:	1023883a 	mov	r17,r2
  81be90:	8800020e 	bge	r17,zero,81be9c <decode_mcu_sub+0x414>
  81be94:	0005883a 	mov	r2,zero
  81be98:	0000c106 	br	81c1a0 <decode_mcu_sub+0x718>
  81be9c:	e4bff117 	ldw	r18,-60(fp)
  81bea0:	e43ff217 	ldw	r16,-56(fp)
  81bea4:	8829d13a 	srai	r20,r17,4
  81bea8:	8c4003cc 	andi	r17,r17,15
  81beac:	88003526 	beq	r17,zero,81bf84 <decode_mcu_sub+0x4fc>
  81beb0:	9d27883a 	add	r19,r19,r20
  81beb4:	84400b0e 	bge	r16,r17,81bee4 <decode_mcu_sub+0x45c>
  81beb8:	e0bfef04 	addi	r2,fp,-68
  81bebc:	880f883a 	mov	r7,r17
  81bec0:	800d883a 	mov	r6,r16
  81bec4:	900b883a 	mov	r5,r18
  81bec8:	1009883a 	mov	r4,r2
  81becc:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81bed0:	1000021e 	bne	r2,zero,81bedc <decode_mcu_sub+0x454>
  81bed4:	0005883a 	mov	r2,zero
  81bed8:	0000b106 	br	81c1a0 <decode_mcu_sub+0x718>
  81bedc:	e4bff117 	ldw	r18,-60(fp)
  81bee0:	e43ff217 	ldw	r16,-56(fp)
  81bee4:	8461c83a 	sub	r16,r16,r17
  81bee8:	9409d83a 	sra	r4,r18,r16
  81beec:	008021b4 	movhi	r2,134
  81bef0:	10a36d04 	addi	r2,r2,-29260
  81bef4:	8c47883a 	add	r3,r17,r17
  81bef8:	18c7883a 	add	r3,r3,r3
  81befc:	10c5883a 	add	r2,r2,r3
  81bf00:	10800017 	ldw	r2,0(r2)
  81bf04:	20a8703a 	and	r20,r4,r2
  81bf08:	88ffffc4 	addi	r3,r17,-1
  81bf0c:	008021b4 	movhi	r2,134
  81bf10:	10a36d04 	addi	r2,r2,-29260
  81bf14:	18c7883a 	add	r3,r3,r3
  81bf18:	18c7883a 	add	r3,r3,r3
  81bf1c:	10c5883a 	add	r2,r2,r3
  81bf20:	10800017 	ldw	r2,0(r2)
  81bf24:	15000816 	blt	r2,r20,81bf48 <decode_mcu_sub+0x4c0>
  81bf28:	008021b4 	movhi	r2,134
  81bf2c:	10a36d04 	addi	r2,r2,-29260
  81bf30:	8c47883a 	add	r3,r17,r17
  81bf34:	18c7883a 	add	r3,r3,r3
  81bf38:	10c5883a 	add	r2,r2,r3
  81bf3c:	10800017 	ldw	r2,0(r2)
  81bf40:	a085c83a 	sub	r2,r20,r2
  81bf44:	00000106 	br	81bf4c <decode_mcu_sub+0x4c4>
  81bf48:	a005883a 	mov	r2,r20
  81bf4c:	1023883a 	mov	r17,r2
  81bf50:	9805883a 	mov	r2,r19
  81bf54:	1085883a 	add	r2,r2,r2
  81bf58:	1085883a 	add	r2,r2,r2
  81bf5c:	1007883a 	mov	r3,r2
  81bf60:	e0bfe917 	ldw	r2,-92(fp)
  81bf64:	10c5883a 	add	r2,r2,r3
  81bf68:	10800017 	ldw	r2,0(r2)
  81bf6c:	8809883a 	mov	r4,r17
  81bf70:	e0ffeb17 	ldw	r3,-84(fp)
  81bf74:	1085883a 	add	r2,r2,r2
  81bf78:	1885883a 	add	r2,r3,r2
  81bf7c:	1100000d 	sth	r4,0(r2)
  81bf80:	00000306 	br	81bf90 <decode_mcu_sub+0x508>
  81bf84:	a08003e0 	cmpeqi	r2,r20,15
  81bf88:	10005e26 	beq	r2,zero,81c104 <decode_mcu_sub+0x67c>
  81bf8c:	9cc003c4 	addi	r19,r19,15
  81bf90:	9cc00044 	addi	r19,r19,1
  81bf94:	e0bfed17 	ldw	r2,-76(fp)
  81bf98:	98bf9116 	blt	r19,r2,81bde0 <__alt_mem_epcs_flash_controller_0+0xff812de0>
  81bf9c:	00005606 	br	81c0f8 <decode_mcu_sub+0x670>
  81bfa0:	88005526 	beq	r17,zero,81c0f8 <decode_mcu_sub+0x670>
  81bfa4:	84400b0e 	bge	r16,r17,81bfd4 <decode_mcu_sub+0x54c>
  81bfa8:	e0bfef04 	addi	r2,fp,-68
  81bfac:	880f883a 	mov	r7,r17
  81bfb0:	800d883a 	mov	r6,r16
  81bfb4:	900b883a 	mov	r5,r18
  81bfb8:	1009883a 	mov	r4,r2
  81bfbc:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81bfc0:	1000021e 	bne	r2,zero,81bfcc <decode_mcu_sub+0x544>
  81bfc4:	0005883a 	mov	r2,zero
  81bfc8:	00007506 	br	81c1a0 <decode_mcu_sub+0x718>
  81bfcc:	e4bff117 	ldw	r18,-60(fp)
  81bfd0:	e43ff217 	ldw	r16,-56(fp)
  81bfd4:	8461c83a 	sub	r16,r16,r17
  81bfd8:	00004706 	br	81c0f8 <decode_mcu_sub+0x670>
  81bfdc:	80800208 	cmpgei	r2,r16,8
  81bfe0:	10000f1e 	bne	r2,zero,81c020 <decode_mcu_sub+0x598>
  81bfe4:	e0bfef04 	addi	r2,fp,-68
  81bfe8:	000f883a 	mov	r7,zero
  81bfec:	800d883a 	mov	r6,r16
  81bff0:	900b883a 	mov	r5,r18
  81bff4:	1009883a 	mov	r4,r2
  81bff8:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81bffc:	1000021e 	bne	r2,zero,81c008 <decode_mcu_sub+0x580>
  81c000:	0005883a 	mov	r2,zero
  81c004:	00006606 	br	81c1a0 <decode_mcu_sub+0x718>
  81c008:	e4bff117 	ldw	r18,-60(fp)
  81c00c:	e43ff217 	ldw	r16,-56(fp)
  81c010:	80800208 	cmpgei	r2,r16,8
  81c014:	1000021e 	bne	r2,zero,81c020 <decode_mcu_sub+0x598>
  81c018:	04400044 	movi	r17,1
  81c01c:	00001306 	br	81c06c <decode_mcu_sub+0x5e4>
  81c020:	80bffe04 	addi	r2,r16,-8
  81c024:	9087d83a 	sra	r3,r18,r2
  81c028:	00803fc4 	movi	r2,255
  81c02c:	18a8703a 	and	r20,r3,r2
  81c030:	e0ffec17 	ldw	r3,-80(fp)
  81c034:	a0800904 	addi	r2,r20,36
  81c038:	1085883a 	add	r2,r2,r2
  81c03c:	1085883a 	add	r2,r2,r2
  81c040:	1885883a 	add	r2,r3,r2
  81c044:	14400017 	ldw	r17,0(r2)
  81c048:	88000726 	beq	r17,zero,81c068 <decode_mcu_sub+0x5e0>
  81c04c:	8461c83a 	sub	r16,r16,r17
  81c050:	e0bfec17 	ldw	r2,-80(fp)
  81c054:	1505883a 	add	r2,r2,r20
  81c058:	10812404 	addi	r2,r2,1168
  81c05c:	10800003 	ldbu	r2,0(r2)
  81c060:	14403fcc 	andi	r17,r2,255
  81c064:	00000e06 	br	81c0a0 <decode_mcu_sub+0x618>
  81c068:	04400244 	movi	r17,9
  81c06c:	e0bfef04 	addi	r2,fp,-68
  81c070:	dc400015 	stw	r17,0(sp)
  81c074:	e1ffec17 	ldw	r7,-80(fp)
  81c078:	800d883a 	mov	r6,r16
  81c07c:	900b883a 	mov	r5,r18
  81c080:	1009883a 	mov	r4,r2
  81c084:	081a7c80 	call	81a7c8 <jpeg_huff_decode>
  81c088:	1023883a 	mov	r17,r2
  81c08c:	8800020e 	bge	r17,zero,81c098 <decode_mcu_sub+0x610>
  81c090:	0005883a 	mov	r2,zero
  81c094:	00004206 	br	81c1a0 <decode_mcu_sub+0x718>
  81c098:	e4bff117 	ldw	r18,-60(fp)
  81c09c:	e43ff217 	ldw	r16,-56(fp)
  81c0a0:	8829d13a 	srai	r20,r17,4
  81c0a4:	8c4003cc 	andi	r17,r17,15
  81c0a8:	88000f26 	beq	r17,zero,81c0e8 <decode_mcu_sub+0x660>
  81c0ac:	9d27883a 	add	r19,r19,r20
  81c0b0:	84400b0e 	bge	r16,r17,81c0e0 <decode_mcu_sub+0x658>
  81c0b4:	e0bfef04 	addi	r2,fp,-68
  81c0b8:	880f883a 	mov	r7,r17
  81c0bc:	800d883a 	mov	r6,r16
  81c0c0:	900b883a 	mov	r5,r18
  81c0c4:	1009883a 	mov	r4,r2
  81c0c8:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81c0cc:	1000021e 	bne	r2,zero,81c0d8 <decode_mcu_sub+0x650>
  81c0d0:	0005883a 	mov	r2,zero
  81c0d4:	00003206 	br	81c1a0 <decode_mcu_sub+0x718>
  81c0d8:	e4bff117 	ldw	r18,-60(fp)
  81c0dc:	e43ff217 	ldw	r16,-56(fp)
  81c0e0:	8461c83a 	sub	r16,r16,r17
  81c0e4:	00000306 	br	81c0f4 <decode_mcu_sub+0x66c>
  81c0e8:	a08003e0 	cmpeqi	r2,r20,15
  81c0ec:	10000726 	beq	r2,zero,81c10c <decode_mcu_sub+0x684>
  81c0f0:	9cc003c4 	addi	r19,r19,15
  81c0f4:	9cc00044 	addi	r19,r19,1
  81c0f8:	e0bfea17 	ldw	r2,-88(fp)
  81c0fc:	14ffb70e 	bge	r2,r19,81bfdc <__alt_mem_epcs_flash_controller_0+0xff812fdc>
  81c100:	00000306 	br	81c110 <decode_mcu_sub+0x688>
  81c104:	0001883a 	nop
  81c108:	00000106 	br	81c110 <decode_mcu_sub+0x688>
  81c10c:	0001883a 	nop
  81c110:	e0bfe717 	ldw	r2,-100(fp)
  81c114:	10800044 	addi	r2,r2,1
  81c118:	e0bfe715 	stw	r2,-100(fp)
  81c11c:	e0bff917 	ldw	r2,-28(fp)
  81c120:	10805c17 	ldw	r2,368(r2)
  81c124:	e0ffe717 	ldw	r3,-100(fp)
  81c128:	18be9416 	blt	r3,r2,81bb7c <__alt_mem_epcs_flash_controller_0+0xff812b7c>
  81c12c:	e0bff917 	ldw	r2,-28(fp)
  81c130:	10800617 	ldw	r2,24(r2)
  81c134:	e0ffef17 	ldw	r3,-68(fp)
  81c138:	10c00015 	stw	r3,0(r2)
  81c13c:	e0bff917 	ldw	r2,-28(fp)
  81c140:	10800617 	ldw	r2,24(r2)
  81c144:	e0fff017 	ldw	r3,-64(fp)
  81c148:	10c00115 	stw	r3,4(r2)
  81c14c:	e0bfe817 	ldw	r2,-96(fp)
  81c150:	14800315 	stw	r18,12(r2)
  81c154:	e0bfe817 	ldw	r2,-96(fp)
  81c158:	14000415 	stw	r16,16(r2)
  81c15c:	e0bfe817 	ldw	r2,-96(fp)
  81c160:	e0fff417 	ldw	r3,-48(fp)
  81c164:	10c00515 	stw	r3,20(r2)
  81c168:	e0fff517 	ldw	r3,-44(fp)
  81c16c:	10c00615 	stw	r3,24(r2)
  81c170:	e0fff617 	ldw	r3,-40(fp)
  81c174:	10c00715 	stw	r3,28(r2)
  81c178:	e0fff717 	ldw	r3,-36(fp)
  81c17c:	10c00815 	stw	r3,32(r2)
  81c180:	e0fff817 	ldw	r3,-32(fp)
  81c184:	10c00915 	stw	r3,36(r2)
  81c188:	e0bfe817 	ldw	r2,-96(fp)
  81c18c:	10800b17 	ldw	r2,44(r2)
  81c190:	10ffffc4 	addi	r3,r2,-1
  81c194:	e0bfe817 	ldw	r2,-96(fp)
  81c198:	10c00b15 	stw	r3,44(r2)
  81c19c:	00800044 	movi	r2,1
  81c1a0:	e6fffb04 	addi	sp,fp,-20
  81c1a4:	dfc00617 	ldw	ra,24(sp)
  81c1a8:	df000517 	ldw	fp,20(sp)
  81c1ac:	dd000417 	ldw	r20,16(sp)
  81c1b0:	dcc00317 	ldw	r19,12(sp)
  81c1b4:	dc800217 	ldw	r18,8(sp)
  81c1b8:	dc400117 	ldw	r17,4(sp)
  81c1bc:	dc000017 	ldw	r16,0(sp)
  81c1c0:	dec00704 	addi	sp,sp,28
  81c1c4:	f800283a 	ret

0081c1c8 <decode_mcu>:
  81c1c8:	deffe604 	addi	sp,sp,-104
  81c1cc:	dfc01915 	stw	ra,100(sp)
  81c1d0:	df001815 	stw	fp,96(sp)
  81c1d4:	dd001715 	stw	r20,92(sp)
  81c1d8:	dcc01615 	stw	r19,88(sp)
  81c1dc:	dc801515 	stw	r18,84(sp)
  81c1e0:	dc401415 	stw	r17,80(sp)
  81c1e4:	dc001315 	stw	r16,76(sp)
  81c1e8:	df001804 	addi	fp,sp,96
  81c1ec:	e13ff915 	stw	r4,-28(fp)
  81c1f0:	e17ffa15 	stw	r5,-24(fp)
  81c1f4:	e0bff917 	ldw	r2,-28(fp)
  81c1f8:	10807517 	ldw	r2,468(r2)
  81c1fc:	e0bfea15 	stw	r2,-88(fp)
  81c200:	e0bff917 	ldw	r2,-28(fp)
  81c204:	10804617 	ldw	r2,280(r2)
  81c208:	10000826 	beq	r2,zero,81c22c <decode_mcu+0x64>
  81c20c:	e0bfea17 	ldw	r2,-88(fp)
  81c210:	10800b17 	ldw	r2,44(r2)
  81c214:	1000051e 	bne	r2,zero,81c22c <decode_mcu+0x64>
  81c218:	e13ff917 	ldw	r4,-28(fp)
  81c21c:	081a9cc0 	call	81a9cc <process_restart>
  81c220:	1000021e 	bne	r2,zero,81c22c <decode_mcu+0x64>
  81c224:	0005883a 	mov	r2,zero
  81c228:	0001a606 	br	81c8c4 <decode_mcu+0x6fc>
  81c22c:	e0bfea17 	ldw	r2,-88(fp)
  81c230:	10800a17 	ldw	r2,40(r2)
  81c234:	10019d1e 	bne	r2,zero,81c8ac <decode_mcu+0x6e4>
  81c238:	e0bff917 	ldw	r2,-28(fp)
  81c23c:	e0bff315 	stw	r2,-52(fp)
  81c240:	e0bff917 	ldw	r2,-28(fp)
  81c244:	10800617 	ldw	r2,24(r2)
  81c248:	10800017 	ldw	r2,0(r2)
  81c24c:	e0bfef15 	stw	r2,-68(fp)
  81c250:	e0bff917 	ldw	r2,-28(fp)
  81c254:	10800617 	ldw	r2,24(r2)
  81c258:	10800117 	ldw	r2,4(r2)
  81c25c:	e0bff015 	stw	r2,-64(fp)
  81c260:	e0bfea17 	ldw	r2,-88(fp)
  81c264:	14800317 	ldw	r18,12(r2)
  81c268:	e0bfea17 	ldw	r2,-88(fp)
  81c26c:	14000417 	ldw	r16,16(r2)
  81c270:	e0bfea17 	ldw	r2,-88(fp)
  81c274:	10c00517 	ldw	r3,20(r2)
  81c278:	e0fff415 	stw	r3,-48(fp)
  81c27c:	10c00617 	ldw	r3,24(r2)
  81c280:	e0fff515 	stw	r3,-44(fp)
  81c284:	10c00717 	ldw	r3,28(r2)
  81c288:	e0fff615 	stw	r3,-40(fp)
  81c28c:	10c00817 	ldw	r3,32(r2)
  81c290:	e0fff715 	stw	r3,-36(fp)
  81c294:	10800917 	ldw	r2,36(r2)
  81c298:	e0bff815 	stw	r2,-32(fp)
  81c29c:	e03fe915 	stw	zero,-92(fp)
  81c2a0:	00016706 	br	81c840 <decode_mcu+0x678>
  81c2a4:	e0bfe917 	ldw	r2,-92(fp)
  81c2a8:	1085883a 	add	r2,r2,r2
  81c2ac:	1085883a 	add	r2,r2,r2
  81c2b0:	1007883a 	mov	r3,r2
  81c2b4:	e0bffa17 	ldw	r2,-24(fp)
  81c2b8:	10c5883a 	add	r2,r2,r3
  81c2bc:	10800017 	ldw	r2,0(r2)
  81c2c0:	e0bfeb15 	stw	r2,-84(fp)
  81c2c4:	e0ffea17 	ldw	r3,-88(fp)
  81c2c8:	e0bfe917 	ldw	r2,-92(fp)
  81c2cc:	10800644 	addi	r2,r2,25
  81c2d0:	1085883a 	add	r2,r2,r2
  81c2d4:	1085883a 	add	r2,r2,r2
  81c2d8:	1885883a 	add	r2,r3,r2
  81c2dc:	10800017 	ldw	r2,0(r2)
  81c2e0:	e0bfec15 	stw	r2,-80(fp)
  81c2e4:	80800208 	cmpgei	r2,r16,8
  81c2e8:	10000f1e 	bne	r2,zero,81c328 <decode_mcu+0x160>
  81c2ec:	e0bfef04 	addi	r2,fp,-68
  81c2f0:	000f883a 	mov	r7,zero
  81c2f4:	800d883a 	mov	r6,r16
  81c2f8:	900b883a 	mov	r5,r18
  81c2fc:	1009883a 	mov	r4,r2
  81c300:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81c304:	1000021e 	bne	r2,zero,81c310 <decode_mcu+0x148>
  81c308:	0005883a 	mov	r2,zero
  81c30c:	00016d06 	br	81c8c4 <decode_mcu+0x6fc>
  81c310:	e4bff117 	ldw	r18,-60(fp)
  81c314:	e43ff217 	ldw	r16,-56(fp)
  81c318:	80800208 	cmpgei	r2,r16,8
  81c31c:	1000021e 	bne	r2,zero,81c328 <decode_mcu+0x160>
  81c320:	04400044 	movi	r17,1
  81c324:	00001306 	br	81c374 <decode_mcu+0x1ac>
  81c328:	80bffe04 	addi	r2,r16,-8
  81c32c:	9087d83a 	sra	r3,r18,r2
  81c330:	00803fc4 	movi	r2,255
  81c334:	18a6703a 	and	r19,r3,r2
  81c338:	e0ffec17 	ldw	r3,-80(fp)
  81c33c:	98800904 	addi	r2,r19,36
  81c340:	1085883a 	add	r2,r2,r2
  81c344:	1085883a 	add	r2,r2,r2
  81c348:	1885883a 	add	r2,r3,r2
  81c34c:	14400017 	ldw	r17,0(r2)
  81c350:	88000726 	beq	r17,zero,81c370 <decode_mcu+0x1a8>
  81c354:	8461c83a 	sub	r16,r16,r17
  81c358:	e0bfec17 	ldw	r2,-80(fp)
  81c35c:	14c5883a 	add	r2,r2,r19
  81c360:	10812404 	addi	r2,r2,1168
  81c364:	10800003 	ldbu	r2,0(r2)
  81c368:	14403fcc 	andi	r17,r2,255
  81c36c:	00000e06 	br	81c3a8 <decode_mcu+0x1e0>
  81c370:	04400244 	movi	r17,9
  81c374:	e0bfef04 	addi	r2,fp,-68
  81c378:	dc400015 	stw	r17,0(sp)
  81c37c:	e1ffec17 	ldw	r7,-80(fp)
  81c380:	800d883a 	mov	r6,r16
  81c384:	900b883a 	mov	r5,r18
  81c388:	1009883a 	mov	r4,r2
  81c38c:	081a7c80 	call	81a7c8 <jpeg_huff_decode>
  81c390:	1023883a 	mov	r17,r2
  81c394:	8800020e 	bge	r17,zero,81c3a0 <decode_mcu+0x1d8>
  81c398:	0005883a 	mov	r2,zero
  81c39c:	00014906 	br	81c8c4 <decode_mcu+0x6fc>
  81c3a0:	e4bff117 	ldw	r18,-60(fp)
  81c3a4:	e43ff217 	ldw	r16,-56(fp)
  81c3a8:	e0ffea17 	ldw	r3,-88(fp)
  81c3ac:	e0bfe917 	ldw	r2,-92(fp)
  81c3b0:	108008c4 	addi	r2,r2,35
  81c3b4:	1085883a 	add	r2,r2,r2
  81c3b8:	1085883a 	add	r2,r2,r2
  81c3bc:	1885883a 	add	r2,r3,r2
  81c3c0:	10800017 	ldw	r2,0(r2)
  81c3c4:	e0bfec15 	stw	r2,-80(fp)
  81c3c8:	04c00044 	movi	r19,1
  81c3cc:	e0ffea17 	ldw	r3,-88(fp)
  81c3d0:	e0bfe917 	ldw	r2,-92(fp)
  81c3d4:	10800b44 	addi	r2,r2,45
  81c3d8:	1085883a 	add	r2,r2,r2
  81c3dc:	1085883a 	add	r2,r2,r2
  81c3e0:	1885883a 	add	r2,r3,r2
  81c3e4:	10800017 	ldw	r2,0(r2)
  81c3e8:	e0bfed15 	stw	r2,-76(fp)
  81c3ec:	e0bfed17 	ldw	r2,-76(fp)
  81c3f0:	1000b426 	beq	r2,zero,81c6c4 <decode_mcu+0x4fc>
  81c3f4:	88002726 	beq	r17,zero,81c494 <decode_mcu+0x2cc>
  81c3f8:	84400b0e 	bge	r16,r17,81c428 <decode_mcu+0x260>
  81c3fc:	e0bfef04 	addi	r2,fp,-68
  81c400:	880f883a 	mov	r7,r17
  81c404:	800d883a 	mov	r6,r16
  81c408:	900b883a 	mov	r5,r18
  81c40c:	1009883a 	mov	r4,r2
  81c410:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81c414:	1000021e 	bne	r2,zero,81c420 <decode_mcu+0x258>
  81c418:	0005883a 	mov	r2,zero
  81c41c:	00012906 	br	81c8c4 <decode_mcu+0x6fc>
  81c420:	e4bff117 	ldw	r18,-60(fp)
  81c424:	e43ff217 	ldw	r16,-56(fp)
  81c428:	8461c83a 	sub	r16,r16,r17
  81c42c:	9409d83a 	sra	r4,r18,r16
  81c430:	008021b4 	movhi	r2,134
  81c434:	10a36d04 	addi	r2,r2,-29260
  81c438:	8c47883a 	add	r3,r17,r17
  81c43c:	18c7883a 	add	r3,r3,r3
  81c440:	10c5883a 	add	r2,r2,r3
  81c444:	10800017 	ldw	r2,0(r2)
  81c448:	20a8703a 	and	r20,r4,r2
  81c44c:	88ffffc4 	addi	r3,r17,-1
  81c450:	008021b4 	movhi	r2,134
  81c454:	10a36d04 	addi	r2,r2,-29260
  81c458:	18c7883a 	add	r3,r3,r3
  81c45c:	18c7883a 	add	r3,r3,r3
  81c460:	10c5883a 	add	r2,r2,r3
  81c464:	10800017 	ldw	r2,0(r2)
  81c468:	15000816 	blt	r2,r20,81c48c <decode_mcu+0x2c4>
  81c46c:	008021b4 	movhi	r2,134
  81c470:	10a36d04 	addi	r2,r2,-29260
  81c474:	8c47883a 	add	r3,r17,r17
  81c478:	18c7883a 	add	r3,r3,r3
  81c47c:	10c5883a 	add	r2,r2,r3
  81c480:	10800017 	ldw	r2,0(r2)
  81c484:	a085c83a 	sub	r2,r20,r2
  81c488:	00000106 	br	81c490 <decode_mcu+0x2c8>
  81c48c:	a005883a 	mov	r2,r20
  81c490:	1023883a 	mov	r17,r2
  81c494:	e0fff917 	ldw	r3,-28(fp)
  81c498:	e0bfe917 	ldw	r2,-92(fp)
  81c49c:	10801744 	addi	r2,r2,93
  81c4a0:	1085883a 	add	r2,r2,r2
  81c4a4:	1085883a 	add	r2,r2,r2
  81c4a8:	1885883a 	add	r2,r3,r2
  81c4ac:	10800017 	ldw	r2,0(r2)
  81c4b0:	e0bfee15 	stw	r2,-72(fp)
  81c4b4:	e0bfee17 	ldw	r2,-72(fp)
  81c4b8:	10800044 	addi	r2,r2,1
  81c4bc:	1085883a 	add	r2,r2,r2
  81c4c0:	1085883a 	add	r2,r2,r2
  81c4c4:	e0ffe904 	addi	r3,fp,-92
  81c4c8:	1885883a 	add	r2,r3,r2
  81c4cc:	10800b04 	addi	r2,r2,44
  81c4d0:	10800017 	ldw	r2,0(r2)
  81c4d4:	88a3883a 	add	r17,r17,r2
  81c4d8:	e0bfee17 	ldw	r2,-72(fp)
  81c4dc:	10800044 	addi	r2,r2,1
  81c4e0:	1085883a 	add	r2,r2,r2
  81c4e4:	1085883a 	add	r2,r2,r2
  81c4e8:	e0ffe904 	addi	r3,fp,-92
  81c4ec:	1885883a 	add	r2,r3,r2
  81c4f0:	10800b04 	addi	r2,r2,44
  81c4f4:	14400015 	stw	r17,0(r2)
  81c4f8:	8807883a 	mov	r3,r17
  81c4fc:	e0bfeb17 	ldw	r2,-84(fp)
  81c500:	10c0000d 	sth	r3,0(r2)
  81c504:	00006c06 	br	81c6b8 <decode_mcu+0x4f0>
  81c508:	80800208 	cmpgei	r2,r16,8
  81c50c:	10000f1e 	bne	r2,zero,81c54c <decode_mcu+0x384>
  81c510:	e0bfef04 	addi	r2,fp,-68
  81c514:	000f883a 	mov	r7,zero
  81c518:	800d883a 	mov	r6,r16
  81c51c:	900b883a 	mov	r5,r18
  81c520:	1009883a 	mov	r4,r2
  81c524:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81c528:	1000021e 	bne	r2,zero,81c534 <decode_mcu+0x36c>
  81c52c:	0005883a 	mov	r2,zero
  81c530:	0000e406 	br	81c8c4 <decode_mcu+0x6fc>
  81c534:	e4bff117 	ldw	r18,-60(fp)
  81c538:	e43ff217 	ldw	r16,-56(fp)
  81c53c:	80800208 	cmpgei	r2,r16,8
  81c540:	1000021e 	bne	r2,zero,81c54c <decode_mcu+0x384>
  81c544:	04400044 	movi	r17,1
  81c548:	00001306 	br	81c598 <decode_mcu+0x3d0>
  81c54c:	80bffe04 	addi	r2,r16,-8
  81c550:	9087d83a 	sra	r3,r18,r2
  81c554:	00803fc4 	movi	r2,255
  81c558:	18a8703a 	and	r20,r3,r2
  81c55c:	e0ffec17 	ldw	r3,-80(fp)
  81c560:	a0800904 	addi	r2,r20,36
  81c564:	1085883a 	add	r2,r2,r2
  81c568:	1085883a 	add	r2,r2,r2
  81c56c:	1885883a 	add	r2,r3,r2
  81c570:	14400017 	ldw	r17,0(r2)
  81c574:	88000726 	beq	r17,zero,81c594 <decode_mcu+0x3cc>
  81c578:	8461c83a 	sub	r16,r16,r17
  81c57c:	e0bfec17 	ldw	r2,-80(fp)
  81c580:	1505883a 	add	r2,r2,r20
  81c584:	10812404 	addi	r2,r2,1168
  81c588:	10800003 	ldbu	r2,0(r2)
  81c58c:	14403fcc 	andi	r17,r2,255
  81c590:	00000e06 	br	81c5cc <decode_mcu+0x404>
  81c594:	04400244 	movi	r17,9
  81c598:	e0bfef04 	addi	r2,fp,-68
  81c59c:	dc400015 	stw	r17,0(sp)
  81c5a0:	e1ffec17 	ldw	r7,-80(fp)
  81c5a4:	800d883a 	mov	r6,r16
  81c5a8:	900b883a 	mov	r5,r18
  81c5ac:	1009883a 	mov	r4,r2
  81c5b0:	081a7c80 	call	81a7c8 <jpeg_huff_decode>
  81c5b4:	1023883a 	mov	r17,r2
  81c5b8:	8800020e 	bge	r17,zero,81c5c4 <decode_mcu+0x3fc>
  81c5bc:	0005883a 	mov	r2,zero
  81c5c0:	0000c006 	br	81c8c4 <decode_mcu+0x6fc>
  81c5c4:	e4bff117 	ldw	r18,-60(fp)
  81c5c8:	e43ff217 	ldw	r16,-56(fp)
  81c5cc:	8829d13a 	srai	r20,r17,4
  81c5d0:	8c4003cc 	andi	r17,r17,15
  81c5d4:	88003426 	beq	r17,zero,81c6a8 <decode_mcu+0x4e0>
  81c5d8:	9d27883a 	add	r19,r19,r20
  81c5dc:	84400b0e 	bge	r16,r17,81c60c <decode_mcu+0x444>
  81c5e0:	e0bfef04 	addi	r2,fp,-68
  81c5e4:	880f883a 	mov	r7,r17
  81c5e8:	800d883a 	mov	r6,r16
  81c5ec:	900b883a 	mov	r5,r18
  81c5f0:	1009883a 	mov	r4,r2
  81c5f4:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81c5f8:	1000021e 	bne	r2,zero,81c604 <decode_mcu+0x43c>
  81c5fc:	0005883a 	mov	r2,zero
  81c600:	0000b006 	br	81c8c4 <decode_mcu+0x6fc>
  81c604:	e4bff117 	ldw	r18,-60(fp)
  81c608:	e43ff217 	ldw	r16,-56(fp)
  81c60c:	8461c83a 	sub	r16,r16,r17
  81c610:	9409d83a 	sra	r4,r18,r16
  81c614:	008021b4 	movhi	r2,134
  81c618:	10a36d04 	addi	r2,r2,-29260
  81c61c:	8c47883a 	add	r3,r17,r17
  81c620:	18c7883a 	add	r3,r3,r3
  81c624:	10c5883a 	add	r2,r2,r3
  81c628:	10800017 	ldw	r2,0(r2)
  81c62c:	20a8703a 	and	r20,r4,r2
  81c630:	88ffffc4 	addi	r3,r17,-1
  81c634:	008021b4 	movhi	r2,134
  81c638:	10a36d04 	addi	r2,r2,-29260
  81c63c:	18c7883a 	add	r3,r3,r3
  81c640:	18c7883a 	add	r3,r3,r3
  81c644:	10c5883a 	add	r2,r2,r3
  81c648:	10800017 	ldw	r2,0(r2)
  81c64c:	15000816 	blt	r2,r20,81c670 <decode_mcu+0x4a8>
  81c650:	008021b4 	movhi	r2,134
  81c654:	10a36d04 	addi	r2,r2,-29260
  81c658:	8c47883a 	add	r3,r17,r17
  81c65c:	18c7883a 	add	r3,r3,r3
  81c660:	10c5883a 	add	r2,r2,r3
  81c664:	10800017 	ldw	r2,0(r2)
  81c668:	a085c83a 	sub	r2,r20,r2
  81c66c:	00000106 	br	81c674 <decode_mcu+0x4ac>
  81c670:	a005883a 	mov	r2,r20
  81c674:	1023883a 	mov	r17,r2
  81c678:	008021b4 	movhi	r2,134
  81c67c:	10a13704 	addi	r2,r2,-31524
  81c680:	9cc7883a 	add	r3,r19,r19
  81c684:	18c7883a 	add	r3,r3,r3
  81c688:	10c5883a 	add	r2,r2,r3
  81c68c:	10800017 	ldw	r2,0(r2)
  81c690:	8809883a 	mov	r4,r17
  81c694:	e0ffeb17 	ldw	r3,-84(fp)
  81c698:	1085883a 	add	r2,r2,r2
  81c69c:	1885883a 	add	r2,r3,r2
  81c6a0:	1100000d 	sth	r4,0(r2)
  81c6a4:	00000306 	br	81c6b4 <decode_mcu+0x4ec>
  81c6a8:	a08003e0 	cmpeqi	r2,r20,15
  81c6ac:	10005e26 	beq	r2,zero,81c828 <decode_mcu+0x660>
  81c6b0:	9cc003c4 	addi	r19,r19,15
  81c6b4:	9cc00044 	addi	r19,r19,1
  81c6b8:	e0bfed17 	ldw	r2,-76(fp)
  81c6bc:	98bf9216 	blt	r19,r2,81c508 <__alt_mem_epcs_flash_controller_0+0xff813508>
  81c6c0:	00005606 	br	81c81c <decode_mcu+0x654>
  81c6c4:	88005526 	beq	r17,zero,81c81c <decode_mcu+0x654>
  81c6c8:	84400b0e 	bge	r16,r17,81c6f8 <decode_mcu+0x530>
  81c6cc:	e0bfef04 	addi	r2,fp,-68
  81c6d0:	880f883a 	mov	r7,r17
  81c6d4:	800d883a 	mov	r6,r16
  81c6d8:	900b883a 	mov	r5,r18
  81c6dc:	1009883a 	mov	r4,r2
  81c6e0:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81c6e4:	1000021e 	bne	r2,zero,81c6f0 <decode_mcu+0x528>
  81c6e8:	0005883a 	mov	r2,zero
  81c6ec:	00007506 	br	81c8c4 <decode_mcu+0x6fc>
  81c6f0:	e4bff117 	ldw	r18,-60(fp)
  81c6f4:	e43ff217 	ldw	r16,-56(fp)
  81c6f8:	8461c83a 	sub	r16,r16,r17
  81c6fc:	00004706 	br	81c81c <decode_mcu+0x654>
  81c700:	80800208 	cmpgei	r2,r16,8
  81c704:	10000f1e 	bne	r2,zero,81c744 <decode_mcu+0x57c>
  81c708:	e0bfef04 	addi	r2,fp,-68
  81c70c:	000f883a 	mov	r7,zero
  81c710:	800d883a 	mov	r6,r16
  81c714:	900b883a 	mov	r5,r18
  81c718:	1009883a 	mov	r4,r2
  81c71c:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81c720:	1000021e 	bne	r2,zero,81c72c <decode_mcu+0x564>
  81c724:	0005883a 	mov	r2,zero
  81c728:	00006606 	br	81c8c4 <decode_mcu+0x6fc>
  81c72c:	e4bff117 	ldw	r18,-60(fp)
  81c730:	e43ff217 	ldw	r16,-56(fp)
  81c734:	80800208 	cmpgei	r2,r16,8
  81c738:	1000021e 	bne	r2,zero,81c744 <decode_mcu+0x57c>
  81c73c:	04400044 	movi	r17,1
  81c740:	00001306 	br	81c790 <decode_mcu+0x5c8>
  81c744:	80bffe04 	addi	r2,r16,-8
  81c748:	9087d83a 	sra	r3,r18,r2
  81c74c:	00803fc4 	movi	r2,255
  81c750:	18a8703a 	and	r20,r3,r2
  81c754:	e0ffec17 	ldw	r3,-80(fp)
  81c758:	a0800904 	addi	r2,r20,36
  81c75c:	1085883a 	add	r2,r2,r2
  81c760:	1085883a 	add	r2,r2,r2
  81c764:	1885883a 	add	r2,r3,r2
  81c768:	14400017 	ldw	r17,0(r2)
  81c76c:	88000726 	beq	r17,zero,81c78c <decode_mcu+0x5c4>
  81c770:	8461c83a 	sub	r16,r16,r17
  81c774:	e0bfec17 	ldw	r2,-80(fp)
  81c778:	1505883a 	add	r2,r2,r20
  81c77c:	10812404 	addi	r2,r2,1168
  81c780:	10800003 	ldbu	r2,0(r2)
  81c784:	14403fcc 	andi	r17,r2,255
  81c788:	00000e06 	br	81c7c4 <decode_mcu+0x5fc>
  81c78c:	04400244 	movi	r17,9
  81c790:	e0bfef04 	addi	r2,fp,-68
  81c794:	dc400015 	stw	r17,0(sp)
  81c798:	e1ffec17 	ldw	r7,-80(fp)
  81c79c:	800d883a 	mov	r6,r16
  81c7a0:	900b883a 	mov	r5,r18
  81c7a4:	1009883a 	mov	r4,r2
  81c7a8:	081a7c80 	call	81a7c8 <jpeg_huff_decode>
  81c7ac:	1023883a 	mov	r17,r2
  81c7b0:	8800020e 	bge	r17,zero,81c7bc <decode_mcu+0x5f4>
  81c7b4:	0005883a 	mov	r2,zero
  81c7b8:	00004206 	br	81c8c4 <decode_mcu+0x6fc>
  81c7bc:	e4bff117 	ldw	r18,-60(fp)
  81c7c0:	e43ff217 	ldw	r16,-56(fp)
  81c7c4:	8829d13a 	srai	r20,r17,4
  81c7c8:	8c4003cc 	andi	r17,r17,15
  81c7cc:	88000f26 	beq	r17,zero,81c80c <decode_mcu+0x644>
  81c7d0:	9d27883a 	add	r19,r19,r20
  81c7d4:	84400b0e 	bge	r16,r17,81c804 <decode_mcu+0x63c>
  81c7d8:	e0bfef04 	addi	r2,fp,-68
  81c7dc:	880f883a 	mov	r7,r17
  81c7e0:	800d883a 	mov	r6,r16
  81c7e4:	900b883a 	mov	r5,r18
  81c7e8:	1009883a 	mov	r4,r2
  81c7ec:	081a5dc0 	call	81a5dc <jpeg_fill_bit_buffer>
  81c7f0:	1000021e 	bne	r2,zero,81c7fc <decode_mcu+0x634>
  81c7f4:	0005883a 	mov	r2,zero
  81c7f8:	00003206 	br	81c8c4 <decode_mcu+0x6fc>
  81c7fc:	e4bff117 	ldw	r18,-60(fp)
  81c800:	e43ff217 	ldw	r16,-56(fp)
  81c804:	8461c83a 	sub	r16,r16,r17
  81c808:	00000306 	br	81c818 <decode_mcu+0x650>
  81c80c:	a08003e0 	cmpeqi	r2,r20,15
  81c810:	10000726 	beq	r2,zero,81c830 <decode_mcu+0x668>
  81c814:	9cc003c4 	addi	r19,r19,15
  81c818:	9cc00044 	addi	r19,r19,1
  81c81c:	98801010 	cmplti	r2,r19,64
  81c820:	103fb71e 	bne	r2,zero,81c700 <__alt_mem_epcs_flash_controller_0+0xff813700>
  81c824:	00000306 	br	81c834 <decode_mcu+0x66c>
  81c828:	0001883a 	nop
  81c82c:	00000106 	br	81c834 <decode_mcu+0x66c>
  81c830:	0001883a 	nop
  81c834:	e0bfe917 	ldw	r2,-92(fp)
  81c838:	10800044 	addi	r2,r2,1
  81c83c:	e0bfe915 	stw	r2,-92(fp)
  81c840:	e0bff917 	ldw	r2,-28(fp)
  81c844:	10805c17 	ldw	r2,368(r2)
  81c848:	e0ffe917 	ldw	r3,-92(fp)
  81c84c:	18be9516 	blt	r3,r2,81c2a4 <__alt_mem_epcs_flash_controller_0+0xff8132a4>
  81c850:	e0bff917 	ldw	r2,-28(fp)
  81c854:	10800617 	ldw	r2,24(r2)
  81c858:	e0ffef17 	ldw	r3,-68(fp)
  81c85c:	10c00015 	stw	r3,0(r2)
  81c860:	e0bff917 	ldw	r2,-28(fp)
  81c864:	10800617 	ldw	r2,24(r2)
  81c868:	e0fff017 	ldw	r3,-64(fp)
  81c86c:	10c00115 	stw	r3,4(r2)
  81c870:	e0bfea17 	ldw	r2,-88(fp)
  81c874:	14800315 	stw	r18,12(r2)
  81c878:	e0bfea17 	ldw	r2,-88(fp)
  81c87c:	14000415 	stw	r16,16(r2)
  81c880:	e0bfea17 	ldw	r2,-88(fp)
  81c884:	e0fff417 	ldw	r3,-48(fp)
  81c888:	10c00515 	stw	r3,20(r2)
  81c88c:	e0fff517 	ldw	r3,-44(fp)
  81c890:	10c00615 	stw	r3,24(r2)
  81c894:	e0fff617 	ldw	r3,-40(fp)
  81c898:	10c00715 	stw	r3,28(r2)
  81c89c:	e0fff717 	ldw	r3,-36(fp)
  81c8a0:	10c00815 	stw	r3,32(r2)
  81c8a4:	e0fff817 	ldw	r3,-32(fp)
  81c8a8:	10c00915 	stw	r3,36(r2)
  81c8ac:	e0bfea17 	ldw	r2,-88(fp)
  81c8b0:	10800b17 	ldw	r2,44(r2)
  81c8b4:	10ffffc4 	addi	r3,r2,-1
  81c8b8:	e0bfea17 	ldw	r2,-88(fp)
  81c8bc:	10c00b15 	stw	r3,44(r2)
  81c8c0:	00800044 	movi	r2,1
  81c8c4:	e6fffb04 	addi	sp,fp,-20
  81c8c8:	dfc00617 	ldw	ra,24(sp)
  81c8cc:	df000517 	ldw	fp,20(sp)
  81c8d0:	dd000417 	ldw	r20,16(sp)
  81c8d4:	dcc00317 	ldw	r19,12(sp)
  81c8d8:	dc800217 	ldw	r18,8(sp)
  81c8dc:	dc400117 	ldw	r17,4(sp)
  81c8e0:	dc000017 	ldw	r16,0(sp)
  81c8e4:	dec00704 	addi	sp,sp,28
  81c8e8:	f800283a 	ret

0081c8ec <start_pass_huff_decoder>:
  81c8ec:	defff104 	addi	sp,sp,-60
  81c8f0:	dfc00e15 	stw	ra,56(sp)
  81c8f4:	df000d15 	stw	fp,52(sp)
  81c8f8:	dc400c15 	stw	r17,48(sp)
  81c8fc:	dc000b15 	stw	r16,44(sp)
  81c900:	df000d04 	addi	fp,sp,52
  81c904:	e13ffd15 	stw	r4,-12(fp)
  81c908:	e0bffd17 	ldw	r2,-12(fp)
  81c90c:	10807517 	ldw	r2,468(r2)
  81c910:	e0bff715 	stw	r2,-36(fp)
  81c914:	e0bffd17 	ldw	r2,-12(fp)
  81c918:	10803817 	ldw	r2,224(r2)
  81c91c:	10010926 	beq	r2,zero,81cd44 <start_pass_huff_decoder+0x458>
  81c920:	e0bffd17 	ldw	r2,-12(fp)
  81c924:	10806717 	ldw	r2,412(r2)
  81c928:	1000041e 	bne	r2,zero,81c93c <start_pass_huff_decoder+0x50>
  81c92c:	e0bffd17 	ldw	r2,-12(fp)
  81c930:	10806817 	ldw	r2,416(r2)
  81c934:	10000f26 	beq	r2,zero,81c974 <start_pass_huff_decoder+0x88>
  81c938:	00001f06 	br	81c9b8 <start_pass_huff_decoder+0xcc>
  81c93c:	e0bffd17 	ldw	r2,-12(fp)
  81c940:	10c06817 	ldw	r3,416(r2)
  81c944:	e0bffd17 	ldw	r2,-12(fp)
  81c948:	10806717 	ldw	r2,412(r2)
  81c94c:	18801a16 	blt	r3,r2,81c9b8 <start_pass_huff_decoder+0xcc>
  81c950:	e0bffd17 	ldw	r2,-12(fp)
  81c954:	10806817 	ldw	r2,416(r2)
  81c958:	e0fffd17 	ldw	r3,-12(fp)
  81c95c:	18c06d17 	ldw	r3,436(r3)
  81c960:	18801516 	blt	r3,r2,81c9b8 <start_pass_huff_decoder+0xcc>
  81c964:	e0bffd17 	ldw	r2,-12(fp)
  81c968:	10805517 	ldw	r2,340(r2)
  81c96c:	10800060 	cmpeqi	r2,r2,1
  81c970:	10000e26 	beq	r2,zero,81c9ac <start_pass_huff_decoder+0xc0>
  81c974:	e0bffd17 	ldw	r2,-12(fp)
  81c978:	10806917 	ldw	r2,420(r2)
  81c97c:	10000626 	beq	r2,zero,81c998 <start_pass_huff_decoder+0xac>
  81c980:	e0bffd17 	ldw	r2,-12(fp)
  81c984:	10806917 	ldw	r2,420(r2)
  81c988:	10ffffc4 	addi	r3,r2,-1
  81c98c:	e0bffd17 	ldw	r2,-12(fp)
  81c990:	10806a17 	ldw	r2,424(r2)
  81c994:	1880071e 	bne	r3,r2,81c9b4 <start_pass_huff_decoder+0xc8>
  81c998:	e0bffd17 	ldw	r2,-12(fp)
  81c99c:	10806a17 	ldw	r2,424(r2)
  81c9a0:	10800390 	cmplti	r2,r2,14
  81c9a4:	1000211e 	bne	r2,zero,81ca2c <start_pass_huff_decoder+0x140>
  81c9a8:	00000306 	br	81c9b8 <start_pass_huff_decoder+0xcc>
  81c9ac:	0001883a 	nop
  81c9b0:	00000106 	br	81c9b8 <start_pass_huff_decoder+0xcc>
  81c9b4:	0001883a 	nop
  81c9b8:	e0bffd17 	ldw	r2,-12(fp)
  81c9bc:	10800017 	ldw	r2,0(r2)
  81c9c0:	00c00444 	movi	r3,17
  81c9c4:	10c00515 	stw	r3,20(r2)
  81c9c8:	e0bffd17 	ldw	r2,-12(fp)
  81c9cc:	10800017 	ldw	r2,0(r2)
  81c9d0:	e0fffd17 	ldw	r3,-12(fp)
  81c9d4:	18c06717 	ldw	r3,412(r3)
  81c9d8:	10c00615 	stw	r3,24(r2)
  81c9dc:	e0bffd17 	ldw	r2,-12(fp)
  81c9e0:	10800017 	ldw	r2,0(r2)
  81c9e4:	e0fffd17 	ldw	r3,-12(fp)
  81c9e8:	18c06817 	ldw	r3,416(r3)
  81c9ec:	10c00715 	stw	r3,28(r2)
  81c9f0:	e0bffd17 	ldw	r2,-12(fp)
  81c9f4:	10800017 	ldw	r2,0(r2)
  81c9f8:	e0fffd17 	ldw	r3,-12(fp)
  81c9fc:	18c06917 	ldw	r3,420(r3)
  81ca00:	10c00815 	stw	r3,32(r2)
  81ca04:	e0bffd17 	ldw	r2,-12(fp)
  81ca08:	10800017 	ldw	r2,0(r2)
  81ca0c:	e0fffd17 	ldw	r3,-12(fp)
  81ca10:	18c06a17 	ldw	r3,424(r3)
  81ca14:	10c00915 	stw	r3,36(r2)
  81ca18:	e0bffd17 	ldw	r2,-12(fp)
  81ca1c:	10800017 	ldw	r2,0(r2)
  81ca20:	10800017 	ldw	r2,0(r2)
  81ca24:	e13ffd17 	ldw	r4,-12(fp)
  81ca28:	103ee83a 	callr	r2
  81ca2c:	e03ff315 	stw	zero,-52(fp)
  81ca30:	00005d06 	br	81cba8 <start_pass_huff_decoder+0x2bc>
  81ca34:	e0fffd17 	ldw	r3,-12(fp)
  81ca38:	e0bff317 	ldw	r2,-52(fp)
  81ca3c:	10801584 	addi	r2,r2,86
  81ca40:	1085883a 	add	r2,r2,r2
  81ca44:	1085883a 	add	r2,r2,r2
  81ca48:	1885883a 	add	r2,r3,r2
  81ca4c:	10800017 	ldw	r2,0(r2)
  81ca50:	10800117 	ldw	r2,4(r2)
  81ca54:	e0bff815 	stw	r2,-32(fp)
  81ca58:	e0bffd17 	ldw	r2,-12(fp)
  81ca5c:	10c02817 	ldw	r3,160(r2)
  81ca60:	e0bff817 	ldw	r2,-32(fp)
  81ca64:	1004923a 	slli	r2,r2,8
  81ca68:	1885883a 	add	r2,r3,r2
  81ca6c:	e0bff915 	stw	r2,-28(fp)
  81ca70:	e0bffd17 	ldw	r2,-12(fp)
  81ca74:	10806717 	ldw	r2,412(r2)
  81ca78:	10001426 	beq	r2,zero,81cacc <start_pass_huff_decoder+0x1e0>
  81ca7c:	e0bff917 	ldw	r2,-28(fp)
  81ca80:	10800017 	ldw	r2,0(r2)
  81ca84:	1000110e 	bge	r2,zero,81cacc <start_pass_huff_decoder+0x1e0>
  81ca88:	e0bffd17 	ldw	r2,-12(fp)
  81ca8c:	10800017 	ldw	r2,0(r2)
  81ca90:	00c01d84 	movi	r3,118
  81ca94:	10c00515 	stw	r3,20(r2)
  81ca98:	e0bffd17 	ldw	r2,-12(fp)
  81ca9c:	10800017 	ldw	r2,0(r2)
  81caa0:	e0fff817 	ldw	r3,-32(fp)
  81caa4:	10c00615 	stw	r3,24(r2)
  81caa8:	e0bffd17 	ldw	r2,-12(fp)
  81caac:	10800017 	ldw	r2,0(r2)
  81cab0:	10000715 	stw	zero,28(r2)
  81cab4:	e0bffd17 	ldw	r2,-12(fp)
  81cab8:	10800017 	ldw	r2,0(r2)
  81cabc:	10800117 	ldw	r2,4(r2)
  81cac0:	017fffc4 	movi	r5,-1
  81cac4:	e13ffd17 	ldw	r4,-12(fp)
  81cac8:	103ee83a 	callr	r2
  81cacc:	e0bffd17 	ldw	r2,-12(fp)
  81cad0:	10806717 	ldw	r2,412(r2)
  81cad4:	e0bff615 	stw	r2,-40(fp)
  81cad8:	00002c06 	br	81cb8c <start_pass_huff_decoder+0x2a0>
  81cadc:	e0bff617 	ldw	r2,-40(fp)
  81cae0:	1085883a 	add	r2,r2,r2
  81cae4:	1085883a 	add	r2,r2,r2
  81cae8:	1007883a 	mov	r3,r2
  81caec:	e0bff917 	ldw	r2,-28(fp)
  81caf0:	10c5883a 	add	r2,r2,r3
  81caf4:	10800017 	ldw	r2,0(r2)
  81caf8:	1000010e 	bge	r2,zero,81cb00 <start_pass_huff_decoder+0x214>
  81cafc:	0005883a 	mov	r2,zero
  81cb00:	e0bffa15 	stw	r2,-24(fp)
  81cb04:	e0bffd17 	ldw	r2,-12(fp)
  81cb08:	10c06917 	ldw	r3,420(r2)
  81cb0c:	e0bffa17 	ldw	r2,-24(fp)
  81cb10:	18801226 	beq	r3,r2,81cb5c <start_pass_huff_decoder+0x270>
  81cb14:	e0bffd17 	ldw	r2,-12(fp)
  81cb18:	10800017 	ldw	r2,0(r2)
  81cb1c:	00c01d84 	movi	r3,118
  81cb20:	10c00515 	stw	r3,20(r2)
  81cb24:	e0bffd17 	ldw	r2,-12(fp)
  81cb28:	10800017 	ldw	r2,0(r2)
  81cb2c:	e0fff817 	ldw	r3,-32(fp)
  81cb30:	10c00615 	stw	r3,24(r2)
  81cb34:	e0bffd17 	ldw	r2,-12(fp)
  81cb38:	10800017 	ldw	r2,0(r2)
  81cb3c:	e0fff617 	ldw	r3,-40(fp)
  81cb40:	10c00715 	stw	r3,28(r2)
  81cb44:	e0bffd17 	ldw	r2,-12(fp)
  81cb48:	10800017 	ldw	r2,0(r2)
  81cb4c:	10800117 	ldw	r2,4(r2)
  81cb50:	017fffc4 	movi	r5,-1
  81cb54:	e13ffd17 	ldw	r4,-12(fp)
  81cb58:	103ee83a 	callr	r2
  81cb5c:	e0bff617 	ldw	r2,-40(fp)
  81cb60:	1085883a 	add	r2,r2,r2
  81cb64:	1085883a 	add	r2,r2,r2
  81cb68:	1007883a 	mov	r3,r2
  81cb6c:	e0bff917 	ldw	r2,-28(fp)
  81cb70:	10c5883a 	add	r2,r2,r3
  81cb74:	e0fffd17 	ldw	r3,-12(fp)
  81cb78:	18c06a17 	ldw	r3,424(r3)
  81cb7c:	10c00015 	stw	r3,0(r2)
  81cb80:	e0bff617 	ldw	r2,-40(fp)
  81cb84:	10800044 	addi	r2,r2,1
  81cb88:	e0bff615 	stw	r2,-40(fp)
  81cb8c:	e0bffd17 	ldw	r2,-12(fp)
  81cb90:	10c06817 	ldw	r3,416(r2)
  81cb94:	e0bff617 	ldw	r2,-40(fp)
  81cb98:	18bfd00e 	bge	r3,r2,81cadc <__alt_mem_epcs_flash_controller_0+0xff813adc>
  81cb9c:	e0bff317 	ldw	r2,-52(fp)
  81cba0:	10800044 	addi	r2,r2,1
  81cba4:	e0bff315 	stw	r2,-52(fp)
  81cba8:	e0bffd17 	ldw	r2,-12(fp)
  81cbac:	10805517 	ldw	r2,340(r2)
  81cbb0:	e0fff317 	ldw	r3,-52(fp)
  81cbb4:	18bf9f16 	blt	r3,r2,81ca34 <__alt_mem_epcs_flash_controller_0+0xff813a34>
  81cbb8:	e0bffd17 	ldw	r2,-12(fp)
  81cbbc:	10806917 	ldw	r2,420(r2)
  81cbc0:	10000d1e 	bne	r2,zero,81cbf8 <start_pass_huff_decoder+0x30c>
  81cbc4:	e0bffd17 	ldw	r2,-12(fp)
  81cbc8:	10806717 	ldw	r2,412(r2)
  81cbcc:	1000051e 	bne	r2,zero,81cbe4 <start_pass_huff_decoder+0x2f8>
  81cbd0:	e0fff717 	ldw	r3,-36(fp)
  81cbd4:	008020b4 	movhi	r2,130
  81cbd8:	10aaa604 	addi	r2,r2,-21864
  81cbdc:	18800115 	stw	r2,4(r3)
  81cbe0:	00001106 	br	81cc28 <start_pass_huff_decoder+0x33c>
  81cbe4:	e0fff717 	ldw	r3,-36(fp)
  81cbe8:	008020b4 	movhi	r2,130
  81cbec:	10ab9c04 	addi	r2,r2,-20880
  81cbf0:	18800115 	stw	r2,4(r3)
  81cbf4:	00000c06 	br	81cc28 <start_pass_huff_decoder+0x33c>
  81cbf8:	e0bffd17 	ldw	r2,-12(fp)
  81cbfc:	10806717 	ldw	r2,412(r2)
  81cc00:	1000051e 	bne	r2,zero,81cc18 <start_pass_huff_decoder+0x32c>
  81cc04:	e0fff717 	ldw	r3,-36(fp)
  81cc08:	008020b4 	movhi	r2,130
  81cc0c:	10ac9404 	addi	r2,r2,-19888
  81cc10:	18800115 	stw	r2,4(r3)
  81cc14:	00000406 	br	81cc28 <start_pass_huff_decoder+0x33c>
  81cc18:	e0fff717 	ldw	r3,-36(fp)
  81cc1c:	008020b4 	movhi	r2,130
  81cc20:	10ad0204 	addi	r2,r2,-19448
  81cc24:	18800115 	stw	r2,4(r3)
  81cc28:	e03ff315 	stw	zero,-52(fp)
  81cc2c:	00003e06 	br	81cd28 <start_pass_huff_decoder+0x43c>
  81cc30:	e0fffd17 	ldw	r3,-12(fp)
  81cc34:	e0bff317 	ldw	r2,-52(fp)
  81cc38:	10801584 	addi	r2,r2,86
  81cc3c:	1085883a 	add	r2,r2,r2
  81cc40:	1085883a 	add	r2,r2,r2
  81cc44:	1885883a 	add	r2,r3,r2
  81cc48:	10800017 	ldw	r2,0(r2)
  81cc4c:	e0bffb15 	stw	r2,-20(fp)
  81cc50:	e0bffd17 	ldw	r2,-12(fp)
  81cc54:	10806717 	ldw	r2,412(r2)
  81cc58:	1000121e 	bne	r2,zero,81cca4 <start_pass_huff_decoder+0x3b8>
  81cc5c:	e0bffd17 	ldw	r2,-12(fp)
  81cc60:	10806917 	ldw	r2,420(r2)
  81cc64:	1000261e 	bne	r2,zero,81cd00 <start_pass_huff_decoder+0x414>
  81cc68:	e0bffb17 	ldw	r2,-20(fp)
  81cc6c:	10800517 	ldw	r2,20(r2)
  81cc70:	e0bffc15 	stw	r2,-16(fp)
  81cc74:	e0bffc17 	ldw	r2,-16(fp)
  81cc78:	10800304 	addi	r2,r2,12
  81cc7c:	1085883a 	add	r2,r2,r2
  81cc80:	1085883a 	add	r2,r2,r2
  81cc84:	e0fff717 	ldw	r3,-36(fp)
  81cc88:	1885883a 	add	r2,r3,r2
  81cc8c:	100f883a 	mov	r7,r2
  81cc90:	e1bffc17 	ldw	r6,-16(fp)
  81cc94:	01400044 	movi	r5,1
  81cc98:	e13ffd17 	ldw	r4,-12(fp)
  81cc9c:	081a0180 	call	81a018 <jpeg_make_d_derived_tbl>
  81cca0:	00001706 	br	81cd00 <start_pass_huff_decoder+0x414>
  81cca4:	e0bffb17 	ldw	r2,-20(fp)
  81cca8:	10800617 	ldw	r2,24(r2)
  81ccac:	e0bffc15 	stw	r2,-16(fp)
  81ccb0:	e0bffc17 	ldw	r2,-16(fp)
  81ccb4:	10800304 	addi	r2,r2,12
  81ccb8:	1085883a 	add	r2,r2,r2
  81ccbc:	1085883a 	add	r2,r2,r2
  81ccc0:	e0fff717 	ldw	r3,-36(fp)
  81ccc4:	1885883a 	add	r2,r3,r2
  81ccc8:	100f883a 	mov	r7,r2
  81cccc:	e1bffc17 	ldw	r6,-16(fp)
  81ccd0:	000b883a 	mov	r5,zero
  81ccd4:	e13ffd17 	ldw	r4,-12(fp)
  81ccd8:	081a0180 	call	81a018 <jpeg_make_d_derived_tbl>
  81ccdc:	e0fff717 	ldw	r3,-36(fp)
  81cce0:	e0bffc17 	ldw	r2,-16(fp)
  81cce4:	10800304 	addi	r2,r2,12
  81cce8:	1085883a 	add	r2,r2,r2
  81ccec:	1085883a 	add	r2,r2,r2
  81ccf0:	1885883a 	add	r2,r3,r2
  81ccf4:	10c00017 	ldw	r3,0(r2)
  81ccf8:	e0bff717 	ldw	r2,-36(fp)
  81ccfc:	10c01015 	stw	r3,64(r2)
  81cd00:	e0fff717 	ldw	r3,-36(fp)
  81cd04:	e0bff317 	ldw	r2,-52(fp)
  81cd08:	10800184 	addi	r2,r2,6
  81cd0c:	1085883a 	add	r2,r2,r2
  81cd10:	1085883a 	add	r2,r2,r2
  81cd14:	1885883a 	add	r2,r3,r2
  81cd18:	10000015 	stw	zero,0(r2)
  81cd1c:	e0bff317 	ldw	r2,-52(fp)
  81cd20:	10800044 	addi	r2,r2,1
  81cd24:	e0bff315 	stw	r2,-52(fp)
  81cd28:	e0bffd17 	ldw	r2,-12(fp)
  81cd2c:	10805517 	ldw	r2,340(r2)
  81cd30:	e0fff317 	ldw	r3,-52(fp)
  81cd34:	18bfbe16 	blt	r3,r2,81cc30 <__alt_mem_epcs_flash_controller_0+0xff813c30>
  81cd38:	e0bff717 	ldw	r2,-36(fp)
  81cd3c:	10000515 	stw	zero,20(r2)
  81cd40:	0001ed06 	br	81d4f8 <start_pass_huff_decoder+0xc0c>
  81cd44:	e0bffd17 	ldw	r2,-12(fp)
  81cd48:	10806717 	ldw	r2,412(r2)
  81cd4c:	1000121e 	bne	r2,zero,81cd98 <start_pass_huff_decoder+0x4ac>
  81cd50:	e0bffd17 	ldw	r2,-12(fp)
  81cd54:	10806917 	ldw	r2,420(r2)
  81cd58:	10000f1e 	bne	r2,zero,81cd98 <start_pass_huff_decoder+0x4ac>
  81cd5c:	e0bffd17 	ldw	r2,-12(fp)
  81cd60:	10806a17 	ldw	r2,424(r2)
  81cd64:	10000c1e 	bne	r2,zero,81cd98 <start_pass_huff_decoder+0x4ac>
  81cd68:	e0bffd17 	ldw	r2,-12(fp)
  81cd6c:	10803717 	ldw	r2,220(r2)
  81cd70:	1000041e 	bne	r2,zero,81cd84 <start_pass_huff_decoder+0x498>
  81cd74:	e0bffd17 	ldw	r2,-12(fp)
  81cd78:	10806817 	ldw	r2,416(r2)
  81cd7c:	10801008 	cmpgei	r2,r2,64
  81cd80:	10000f1e 	bne	r2,zero,81cdc0 <start_pass_huff_decoder+0x4d4>
  81cd84:	e0bffd17 	ldw	r2,-12(fp)
  81cd88:	10c06817 	ldw	r3,416(r2)
  81cd8c:	e0bffd17 	ldw	r2,-12(fp)
  81cd90:	10806d17 	ldw	r2,436(r2)
  81cd94:	18800a26 	beq	r3,r2,81cdc0 <start_pass_huff_decoder+0x4d4>
  81cd98:	e0bffd17 	ldw	r2,-12(fp)
  81cd9c:	10800017 	ldw	r2,0(r2)
  81cda0:	00c01f44 	movi	r3,125
  81cda4:	10c00515 	stw	r3,20(r2)
  81cda8:	e0bffd17 	ldw	r2,-12(fp)
  81cdac:	10800017 	ldw	r2,0(r2)
  81cdb0:	10800117 	ldw	r2,4(r2)
  81cdb4:	017fffc4 	movi	r5,-1
  81cdb8:	e13ffd17 	ldw	r4,-12(fp)
  81cdbc:	103ee83a 	callr	r2
  81cdc0:	e0bffd17 	ldw	r2,-12(fp)
  81cdc4:	10806d17 	ldw	r2,436(r2)
  81cdc8:	10800fe0 	cmpeqi	r2,r2,63
  81cdcc:	1000051e 	bne	r2,zero,81cde4 <start_pass_huff_decoder+0x4f8>
  81cdd0:	e0fff717 	ldw	r3,-36(fp)
  81cdd4:	008020b4 	movhi	r2,130
  81cdd8:	10aea204 	addi	r2,r2,-17784
  81cddc:	18800115 	stw	r2,4(r3)
  81cde0:	00000406 	br	81cdf4 <start_pass_huff_decoder+0x508>
  81cde4:	e0fff717 	ldw	r3,-36(fp)
  81cde8:	008020b4 	movhi	r2,130
  81cdec:	10b07204 	addi	r2,r2,-15928
  81cdf0:	18800115 	stw	r2,4(r3)
  81cdf4:	e03ff315 	stw	zero,-52(fp)
  81cdf8:	00003106 	br	81cec0 <start_pass_huff_decoder+0x5d4>
  81cdfc:	e0fffd17 	ldw	r3,-12(fp)
  81ce00:	e0bff317 	ldw	r2,-52(fp)
  81ce04:	10801584 	addi	r2,r2,86
  81ce08:	1085883a 	add	r2,r2,r2
  81ce0c:	1085883a 	add	r2,r2,r2
  81ce10:	1885883a 	add	r2,r3,r2
  81ce14:	10800017 	ldw	r2,0(r2)
  81ce18:	e0bffb15 	stw	r2,-20(fp)
  81ce1c:	e0bffb17 	ldw	r2,-20(fp)
  81ce20:	10800517 	ldw	r2,20(r2)
  81ce24:	e0bffc15 	stw	r2,-16(fp)
  81ce28:	e0bffc17 	ldw	r2,-16(fp)
  81ce2c:	10800444 	addi	r2,r2,17
  81ce30:	1085883a 	add	r2,r2,r2
  81ce34:	1085883a 	add	r2,r2,r2
  81ce38:	e0fff717 	ldw	r3,-36(fp)
  81ce3c:	1885883a 	add	r2,r3,r2
  81ce40:	100f883a 	mov	r7,r2
  81ce44:	e1bffc17 	ldw	r6,-16(fp)
  81ce48:	01400044 	movi	r5,1
  81ce4c:	e13ffd17 	ldw	r4,-12(fp)
  81ce50:	081a0180 	call	81a018 <jpeg_make_d_derived_tbl>
  81ce54:	e0bffd17 	ldw	r2,-12(fp)
  81ce58:	10806d17 	ldw	r2,436(r2)
  81ce5c:	10000e26 	beq	r2,zero,81ce98 <start_pass_huff_decoder+0x5ac>
  81ce60:	e0bffb17 	ldw	r2,-20(fp)
  81ce64:	10800617 	ldw	r2,24(r2)
  81ce68:	e0bffc15 	stw	r2,-16(fp)
  81ce6c:	e0bffc17 	ldw	r2,-16(fp)
  81ce70:	10800544 	addi	r2,r2,21
  81ce74:	1085883a 	add	r2,r2,r2
  81ce78:	1085883a 	add	r2,r2,r2
  81ce7c:	e0fff717 	ldw	r3,-36(fp)
  81ce80:	1885883a 	add	r2,r3,r2
  81ce84:	100f883a 	mov	r7,r2
  81ce88:	e1bffc17 	ldw	r6,-16(fp)
  81ce8c:	000b883a 	mov	r5,zero
  81ce90:	e13ffd17 	ldw	r4,-12(fp)
  81ce94:	081a0180 	call	81a018 <jpeg_make_d_derived_tbl>
  81ce98:	e0fff717 	ldw	r3,-36(fp)
  81ce9c:	e0bff317 	ldw	r2,-52(fp)
  81cea0:	10800184 	addi	r2,r2,6
  81cea4:	1085883a 	add	r2,r2,r2
  81cea8:	1085883a 	add	r2,r2,r2
  81ceac:	1885883a 	add	r2,r3,r2
  81ceb0:	10000015 	stw	zero,0(r2)
  81ceb4:	e0bff317 	ldw	r2,-52(fp)
  81ceb8:	10800044 	addi	r2,r2,1
  81cebc:	e0bff315 	stw	r2,-52(fp)
  81cec0:	e0bffd17 	ldw	r2,-12(fp)
  81cec4:	10805517 	ldw	r2,340(r2)
  81cec8:	e0fff317 	ldw	r3,-52(fp)
  81cecc:	18bfcb16 	blt	r3,r2,81cdfc <__alt_mem_epcs_flash_controller_0+0xff813dfc>
  81ced0:	e03ff415 	stw	zero,-48(fp)
  81ced4:	00018406 	br	81d4e8 <start_pass_huff_decoder+0xbfc>
  81ced8:	e0fffd17 	ldw	r3,-12(fp)
  81cedc:	e0bff417 	ldw	r2,-48(fp)
  81cee0:	10801744 	addi	r2,r2,93
  81cee4:	1085883a 	add	r2,r2,r2
  81cee8:	1085883a 	add	r2,r2,r2
  81ceec:	1885883a 	add	r2,r3,r2
  81cef0:	10800017 	ldw	r2,0(r2)
  81cef4:	e0bff315 	stw	r2,-52(fp)
  81cef8:	e0fffd17 	ldw	r3,-12(fp)
  81cefc:	e0bff317 	ldw	r2,-52(fp)
  81cf00:	10801584 	addi	r2,r2,86
  81cf04:	1085883a 	add	r2,r2,r2
  81cf08:	1085883a 	add	r2,r2,r2
  81cf0c:	1885883a 	add	r2,r3,r2
  81cf10:	10800017 	ldw	r2,0(r2)
  81cf14:	e0bffb15 	stw	r2,-20(fp)
  81cf18:	e0bffb17 	ldw	r2,-20(fp)
  81cf1c:	10800517 	ldw	r2,20(r2)
  81cf20:	e0fff717 	ldw	r3,-36(fp)
  81cf24:	10800444 	addi	r2,r2,17
  81cf28:	1085883a 	add	r2,r2,r2
  81cf2c:	1085883a 	add	r2,r2,r2
  81cf30:	1885883a 	add	r2,r3,r2
  81cf34:	10c00017 	ldw	r3,0(r2)
  81cf38:	e13ff717 	ldw	r4,-36(fp)
  81cf3c:	e0bff417 	ldw	r2,-48(fp)
  81cf40:	10800644 	addi	r2,r2,25
  81cf44:	1085883a 	add	r2,r2,r2
  81cf48:	1085883a 	add	r2,r2,r2
  81cf4c:	2085883a 	add	r2,r4,r2
  81cf50:	10c00015 	stw	r3,0(r2)
  81cf54:	e0bffb17 	ldw	r2,-20(fp)
  81cf58:	10800617 	ldw	r2,24(r2)
  81cf5c:	e0fff717 	ldw	r3,-36(fp)
  81cf60:	10800544 	addi	r2,r2,21
  81cf64:	1085883a 	add	r2,r2,r2
  81cf68:	1085883a 	add	r2,r2,r2
  81cf6c:	1885883a 	add	r2,r3,r2
  81cf70:	10c00017 	ldw	r3,0(r2)
  81cf74:	e13ff717 	ldw	r4,-36(fp)
  81cf78:	e0bff417 	ldw	r2,-48(fp)
  81cf7c:	108008c4 	addi	r2,r2,35
  81cf80:	1085883a 	add	r2,r2,r2
  81cf84:	1085883a 	add	r2,r2,r2
  81cf88:	2085883a 	add	r2,r4,r2
  81cf8c:	10c00015 	stw	r3,0(r2)
  81cf90:	e0bffb17 	ldw	r2,-20(fp)
  81cf94:	10800d17 	ldw	r2,52(r2)
  81cf98:	10014926 	beq	r2,zero,81d4c0 <start_pass_huff_decoder+0xbd4>
  81cf9c:	e0bffb17 	ldw	r2,-20(fp)
  81cfa0:	10800a17 	ldw	r2,40(r2)
  81cfa4:	e0bff315 	stw	r2,-52(fp)
  81cfa8:	e0bffb17 	ldw	r2,-20(fp)
  81cfac:	10800917 	ldw	r2,36(r2)
  81cfb0:	e0bff515 	stw	r2,-44(fp)
  81cfb4:	e0bffd17 	ldw	r2,-12(fp)
  81cfb8:	10806d17 	ldw	r2,436(r2)
  81cfbc:	10c00c68 	cmpgeui	r3,r2,49
  81cfc0:	18011b1e 	bne	r3,zero,81d430 <start_pass_huff_decoder+0xb44>
  81cfc4:	100690ba 	slli	r3,r2,2
  81cfc8:	008020b4 	movhi	r2,130
  81cfcc:	10b3f704 	addi	r2,r2,-12324
  81cfd0:	1885883a 	add	r2,r3,r2
  81cfd4:	10800017 	ldw	r2,0(r2)
  81cfd8:	1000683a 	jmp	r2
  81cfdc:	0081d0a0 	cmpeqi	r2,zero,1858
  81cfe0:	0081d430 	cmpltui	r2,zero,1872
  81cfe4:	0081d430 	cmpltui	r2,zero,1872
  81cfe8:	0081d0c4 	movi	r2,1859
  81cfec:	0081d430 	cmpltui	r2,zero,1872
  81cff0:	0081d430 	cmpltui	r2,zero,1872
  81cff4:	0081d430 	cmpltui	r2,zero,1872
  81cff8:	0081d430 	cmpltui	r2,zero,1872
  81cffc:	0081d150 	cmplti	r2,zero,1861
  81d000:	0081d430 	cmpltui	r2,zero,1872
  81d004:	0081d430 	cmpltui	r2,zero,1872
  81d008:	0081d430 	cmpltui	r2,zero,1872
  81d00c:	0081d430 	cmpltui	r2,zero,1872
  81d010:	0081d430 	cmpltui	r2,zero,1872
  81d014:	0081d430 	cmpltui	r2,zero,1872
  81d018:	0081d1e4 	muli	r2,zero,1863
  81d01c:	0081d430 	cmpltui	r2,zero,1872
  81d020:	0081d430 	cmpltui	r2,zero,1872
  81d024:	0081d430 	cmpltui	r2,zero,1872
  81d028:	0081d430 	cmpltui	r2,zero,1872
  81d02c:	0081d430 	cmpltui	r2,zero,1872
  81d030:	0081d430 	cmpltui	r2,zero,1872
  81d034:	0081d430 	cmpltui	r2,zero,1872
  81d038:	0081d430 	cmpltui	r2,zero,1872
  81d03c:	0081d274 	movhi	r2,1865
  81d040:	0081d430 	cmpltui	r2,zero,1872
  81d044:	0081d430 	cmpltui	r2,zero,1872
  81d048:	0081d430 	cmpltui	r2,zero,1872
  81d04c:	0081d430 	cmpltui	r2,zero,1872
  81d050:	0081d430 	cmpltui	r2,zero,1872
  81d054:	0081d430 	cmpltui	r2,zero,1872
  81d058:	0081d430 	cmpltui	r2,zero,1872
  81d05c:	0081d430 	cmpltui	r2,zero,1872
  81d060:	0081d430 	cmpltui	r2,zero,1872
  81d064:	0081d430 	cmpltui	r2,zero,1872
  81d068:	0081d308 	cmpgei	r2,zero,1868
  81d06c:	0081d430 	cmpltui	r2,zero,1872
  81d070:	0081d430 	cmpltui	r2,zero,1872
  81d074:	0081d430 	cmpltui	r2,zero,1872
  81d078:	0081d430 	cmpltui	r2,zero,1872
  81d07c:	0081d430 	cmpltui	r2,zero,1872
  81d080:	0081d430 	cmpltui	r2,zero,1872
  81d084:	0081d430 	cmpltui	r2,zero,1872
  81d088:	0081d430 	cmpltui	r2,zero,1872
  81d08c:	0081d430 	cmpltui	r2,zero,1872
  81d090:	0081d430 	cmpltui	r2,zero,1872
  81d094:	0081d430 	cmpltui	r2,zero,1872
  81d098:	0081d430 	cmpltui	r2,zero,1872
  81d09c:	0081d39c 	xori	r2,zero,1870
  81d0a0:	e0fff717 	ldw	r3,-36(fp)
  81d0a4:	e0bff417 	ldw	r2,-48(fp)
  81d0a8:	10800b44 	addi	r2,r2,45
  81d0ac:	1085883a 	add	r2,r2,r2
  81d0b0:	1085883a 	add	r2,r2,r2
  81d0b4:	1885883a 	add	r2,r3,r2
  81d0b8:	00c00044 	movi	r3,1
  81d0bc:	10c00015 	stw	r3,0(r2)
  81d0c0:	00010606 	br	81d4dc <start_pass_huff_decoder+0xbf0>
  81d0c4:	e0bff317 	ldw	r2,-52(fp)
  81d0c8:	0080030e 	bge	zero,r2,81d0d8 <start_pass_huff_decoder+0x7ec>
  81d0cc:	e0bff317 	ldw	r2,-52(fp)
  81d0d0:	108000d0 	cmplti	r2,r2,3
  81d0d4:	1000021e 	bne	r2,zero,81d0e0 <start_pass_huff_decoder+0x7f4>
  81d0d8:	00800084 	movi	r2,2
  81d0dc:	e0bff315 	stw	r2,-52(fp)
  81d0e0:	e0bff517 	ldw	r2,-44(fp)
  81d0e4:	0080030e 	bge	zero,r2,81d0f4 <start_pass_huff_decoder+0x808>
  81d0e8:	e0bff517 	ldw	r2,-44(fp)
  81d0ec:	108000d0 	cmplti	r2,r2,3
  81d0f0:	1000021e 	bne	r2,zero,81d0fc <start_pass_huff_decoder+0x810>
  81d0f4:	00800084 	movi	r2,2
  81d0f8:	e0bff515 	stw	r2,-44(fp)
  81d0fc:	e0bff317 	ldw	r2,-52(fp)
  81d100:	10ffffc4 	addi	r3,r2,-1
  81d104:	e0bff517 	ldw	r2,-44(fp)
  81d108:	113fffc4 	addi	r4,r2,-1
  81d10c:	008021b4 	movhi	r2,134
  81d110:	10a36904 	addi	r2,r2,-29276
  81d114:	18c7883a 	add	r3,r3,r3
  81d118:	1907883a 	add	r3,r3,r4
  81d11c:	18c7883a 	add	r3,r3,r3
  81d120:	18c7883a 	add	r3,r3,r3
  81d124:	10c5883a 	add	r2,r2,r3
  81d128:	10800017 	ldw	r2,0(r2)
  81d12c:	10c00044 	addi	r3,r2,1
  81d130:	e13ff717 	ldw	r4,-36(fp)
  81d134:	e0bff417 	ldw	r2,-48(fp)
  81d138:	10800b44 	addi	r2,r2,45
  81d13c:	1085883a 	add	r2,r2,r2
  81d140:	1085883a 	add	r2,r2,r2
  81d144:	2085883a 	add	r2,r4,r2
  81d148:	10c00015 	stw	r3,0(r2)
  81d14c:	0000e306 	br	81d4dc <start_pass_huff_decoder+0xbf0>
  81d150:	e0bff317 	ldw	r2,-52(fp)
  81d154:	0080030e 	bge	zero,r2,81d164 <start_pass_huff_decoder+0x878>
  81d158:	e0bff317 	ldw	r2,-52(fp)
  81d15c:	10800110 	cmplti	r2,r2,4
  81d160:	1000021e 	bne	r2,zero,81d16c <start_pass_huff_decoder+0x880>
  81d164:	008000c4 	movi	r2,3
  81d168:	e0bff315 	stw	r2,-52(fp)
  81d16c:	e0bff517 	ldw	r2,-44(fp)
  81d170:	0080030e 	bge	zero,r2,81d180 <start_pass_huff_decoder+0x894>
  81d174:	e0bff517 	ldw	r2,-44(fp)
  81d178:	10800110 	cmplti	r2,r2,4
  81d17c:	1000021e 	bne	r2,zero,81d188 <start_pass_huff_decoder+0x89c>
  81d180:	008000c4 	movi	r2,3
  81d184:	e0bff515 	stw	r2,-44(fp)
  81d188:	e0bff317 	ldw	r2,-52(fp)
  81d18c:	113fffc4 	addi	r4,r2,-1
  81d190:	e0bff517 	ldw	r2,-44(fp)
  81d194:	117fffc4 	addi	r5,r2,-1
  81d198:	00c021b4 	movhi	r3,134
  81d19c:	18e36004 	addi	r3,r3,-29312
  81d1a0:	2005883a 	mov	r2,r4
  81d1a4:	1085883a 	add	r2,r2,r2
  81d1a8:	1105883a 	add	r2,r2,r4
  81d1ac:	1145883a 	add	r2,r2,r5
  81d1b0:	1085883a 	add	r2,r2,r2
  81d1b4:	1085883a 	add	r2,r2,r2
  81d1b8:	1885883a 	add	r2,r3,r2
  81d1bc:	10800017 	ldw	r2,0(r2)
  81d1c0:	10c00044 	addi	r3,r2,1
  81d1c4:	e13ff717 	ldw	r4,-36(fp)
  81d1c8:	e0bff417 	ldw	r2,-48(fp)
  81d1cc:	10800b44 	addi	r2,r2,45
  81d1d0:	1085883a 	add	r2,r2,r2
  81d1d4:	1085883a 	add	r2,r2,r2
  81d1d8:	2085883a 	add	r2,r4,r2
  81d1dc:	10c00015 	stw	r3,0(r2)
  81d1e0:	0000be06 	br	81d4dc <start_pass_huff_decoder+0xbf0>
  81d1e4:	e0bff317 	ldw	r2,-52(fp)
  81d1e8:	0080030e 	bge	zero,r2,81d1f8 <start_pass_huff_decoder+0x90c>
  81d1ec:	e0bff317 	ldw	r2,-52(fp)
  81d1f0:	10800150 	cmplti	r2,r2,5
  81d1f4:	1000021e 	bne	r2,zero,81d200 <start_pass_huff_decoder+0x914>
  81d1f8:	00800104 	movi	r2,4
  81d1fc:	e0bff315 	stw	r2,-52(fp)
  81d200:	e0bff517 	ldw	r2,-44(fp)
  81d204:	0080030e 	bge	zero,r2,81d214 <start_pass_huff_decoder+0x928>
  81d208:	e0bff517 	ldw	r2,-44(fp)
  81d20c:	10800150 	cmplti	r2,r2,5
  81d210:	1000021e 	bne	r2,zero,81d21c <start_pass_huff_decoder+0x930>
  81d214:	00800104 	movi	r2,4
  81d218:	e0bff515 	stw	r2,-44(fp)
  81d21c:	e0bff317 	ldw	r2,-52(fp)
  81d220:	10ffffc4 	addi	r3,r2,-1
  81d224:	e0bff517 	ldw	r2,-44(fp)
  81d228:	113fffc4 	addi	r4,r2,-1
  81d22c:	008021b4 	movhi	r2,134
  81d230:	10a35004 	addi	r2,r2,-29376
  81d234:	18c7883a 	add	r3,r3,r3
  81d238:	18c7883a 	add	r3,r3,r3
  81d23c:	1907883a 	add	r3,r3,r4
  81d240:	18c7883a 	add	r3,r3,r3
  81d244:	18c7883a 	add	r3,r3,r3
  81d248:	10c5883a 	add	r2,r2,r3
  81d24c:	10800017 	ldw	r2,0(r2)
  81d250:	10c00044 	addi	r3,r2,1
  81d254:	e13ff717 	ldw	r4,-36(fp)
  81d258:	e0bff417 	ldw	r2,-48(fp)
  81d25c:	10800b44 	addi	r2,r2,45
  81d260:	1085883a 	add	r2,r2,r2
  81d264:	1085883a 	add	r2,r2,r2
  81d268:	2085883a 	add	r2,r4,r2
  81d26c:	10c00015 	stw	r3,0(r2)
  81d270:	00009a06 	br	81d4dc <start_pass_huff_decoder+0xbf0>
  81d274:	e0bff317 	ldw	r2,-52(fp)
  81d278:	0080030e 	bge	zero,r2,81d288 <start_pass_huff_decoder+0x99c>
  81d27c:	e0bff317 	ldw	r2,-52(fp)
  81d280:	10800190 	cmplti	r2,r2,6
  81d284:	1000021e 	bne	r2,zero,81d290 <start_pass_huff_decoder+0x9a4>
  81d288:	00800144 	movi	r2,5
  81d28c:	e0bff315 	stw	r2,-52(fp)
  81d290:	e0bff517 	ldw	r2,-44(fp)
  81d294:	0080030e 	bge	zero,r2,81d2a4 <start_pass_huff_decoder+0x9b8>
  81d298:	e0bff517 	ldw	r2,-44(fp)
  81d29c:	10800190 	cmplti	r2,r2,6
  81d2a0:	1000021e 	bne	r2,zero,81d2ac <start_pass_huff_decoder+0x9c0>
  81d2a4:	00800144 	movi	r2,5
  81d2a8:	e0bff515 	stw	r2,-44(fp)
  81d2ac:	e0bff317 	ldw	r2,-52(fp)
  81d2b0:	10ffffc4 	addi	r3,r2,-1
  81d2b4:	e0bff517 	ldw	r2,-44(fp)
  81d2b8:	147fffc4 	addi	r17,r2,-1
  81d2bc:	040021b4 	movhi	r16,134
  81d2c0:	84233704 	addi	r16,r16,-29476
  81d2c4:	01400144 	movi	r5,5
  81d2c8:	1809883a 	mov	r4,r3
  81d2cc:	08305040 	call	830504 <__mulsi3>
  81d2d0:	1445883a 	add	r2,r2,r17
  81d2d4:	1085883a 	add	r2,r2,r2
  81d2d8:	1085883a 	add	r2,r2,r2
  81d2dc:	8085883a 	add	r2,r16,r2
  81d2e0:	10800017 	ldw	r2,0(r2)
  81d2e4:	10c00044 	addi	r3,r2,1
  81d2e8:	e13ff717 	ldw	r4,-36(fp)
  81d2ec:	e0bff417 	ldw	r2,-48(fp)
  81d2f0:	10800b44 	addi	r2,r2,45
  81d2f4:	1085883a 	add	r2,r2,r2
  81d2f8:	1085883a 	add	r2,r2,r2
  81d2fc:	2085883a 	add	r2,r4,r2
  81d300:	10c00015 	stw	r3,0(r2)
  81d304:	00007506 	br	81d4dc <start_pass_huff_decoder+0xbf0>
  81d308:	e0bff317 	ldw	r2,-52(fp)
  81d30c:	0080030e 	bge	zero,r2,81d31c <start_pass_huff_decoder+0xa30>
  81d310:	e0bff317 	ldw	r2,-52(fp)
  81d314:	108001d0 	cmplti	r2,r2,7
  81d318:	1000021e 	bne	r2,zero,81d324 <start_pass_huff_decoder+0xa38>
  81d31c:	00800184 	movi	r2,6
  81d320:	e0bff315 	stw	r2,-52(fp)
  81d324:	e0bff517 	ldw	r2,-44(fp)
  81d328:	0080030e 	bge	zero,r2,81d338 <start_pass_huff_decoder+0xa4c>
  81d32c:	e0bff517 	ldw	r2,-44(fp)
  81d330:	108001d0 	cmplti	r2,r2,7
  81d334:	1000021e 	bne	r2,zero,81d340 <start_pass_huff_decoder+0xa54>
  81d338:	00800184 	movi	r2,6
  81d33c:	e0bff515 	stw	r2,-44(fp)
  81d340:	e0bff317 	ldw	r2,-52(fp)
  81d344:	10ffffc4 	addi	r3,r2,-1
  81d348:	e0bff517 	ldw	r2,-44(fp)
  81d34c:	147fffc4 	addi	r17,r2,-1
  81d350:	040021b4 	movhi	r16,134
  81d354:	84231304 	addi	r16,r16,-29620
  81d358:	01400184 	movi	r5,6
  81d35c:	1809883a 	mov	r4,r3
  81d360:	08305040 	call	830504 <__mulsi3>
  81d364:	1445883a 	add	r2,r2,r17
  81d368:	1085883a 	add	r2,r2,r2
  81d36c:	1085883a 	add	r2,r2,r2
  81d370:	8085883a 	add	r2,r16,r2
  81d374:	10800017 	ldw	r2,0(r2)
  81d378:	10c00044 	addi	r3,r2,1
  81d37c:	e13ff717 	ldw	r4,-36(fp)
  81d380:	e0bff417 	ldw	r2,-48(fp)
  81d384:	10800b44 	addi	r2,r2,45
  81d388:	1085883a 	add	r2,r2,r2
  81d38c:	1085883a 	add	r2,r2,r2
  81d390:	2085883a 	add	r2,r4,r2
  81d394:	10c00015 	stw	r3,0(r2)
  81d398:	00005006 	br	81d4dc <start_pass_huff_decoder+0xbf0>
  81d39c:	e0bff317 	ldw	r2,-52(fp)
  81d3a0:	0080030e 	bge	zero,r2,81d3b0 <start_pass_huff_decoder+0xac4>
  81d3a4:	e0bff317 	ldw	r2,-52(fp)
  81d3a8:	10800210 	cmplti	r2,r2,8
  81d3ac:	1000021e 	bne	r2,zero,81d3b8 <start_pass_huff_decoder+0xacc>
  81d3b0:	008001c4 	movi	r2,7
  81d3b4:	e0bff315 	stw	r2,-52(fp)
  81d3b8:	e0bff517 	ldw	r2,-44(fp)
  81d3bc:	0080030e 	bge	zero,r2,81d3cc <start_pass_huff_decoder+0xae0>
  81d3c0:	e0bff517 	ldw	r2,-44(fp)
  81d3c4:	10800210 	cmplti	r2,r2,8
  81d3c8:	1000021e 	bne	r2,zero,81d3d4 <start_pass_huff_decoder+0xae8>
  81d3cc:	008001c4 	movi	r2,7
  81d3d0:	e0bff515 	stw	r2,-44(fp)
  81d3d4:	e0bff317 	ldw	r2,-52(fp)
  81d3d8:	10ffffc4 	addi	r3,r2,-1
  81d3dc:	e0bff517 	ldw	r2,-44(fp)
  81d3e0:	147fffc4 	addi	r17,r2,-1
  81d3e4:	040021b4 	movhi	r16,134
  81d3e8:	8422e204 	addi	r16,r16,-29816
  81d3ec:	014001c4 	movi	r5,7
  81d3f0:	1809883a 	mov	r4,r3
  81d3f4:	08305040 	call	830504 <__mulsi3>
  81d3f8:	1445883a 	add	r2,r2,r17
  81d3fc:	1085883a 	add	r2,r2,r2
  81d400:	1085883a 	add	r2,r2,r2
  81d404:	8085883a 	add	r2,r16,r2
  81d408:	10800017 	ldw	r2,0(r2)
  81d40c:	10c00044 	addi	r3,r2,1
  81d410:	e13ff717 	ldw	r4,-36(fp)
  81d414:	e0bff417 	ldw	r2,-48(fp)
  81d418:	10800b44 	addi	r2,r2,45
  81d41c:	1085883a 	add	r2,r2,r2
  81d420:	1085883a 	add	r2,r2,r2
  81d424:	2085883a 	add	r2,r4,r2
  81d428:	10c00015 	stw	r3,0(r2)
  81d42c:	00002b06 	br	81d4dc <start_pass_huff_decoder+0xbf0>
  81d430:	e0bff317 	ldw	r2,-52(fp)
  81d434:	0080030e 	bge	zero,r2,81d444 <start_pass_huff_decoder+0xb58>
  81d438:	e0bff317 	ldw	r2,-52(fp)
  81d43c:	10800250 	cmplti	r2,r2,9
  81d440:	1000021e 	bne	r2,zero,81d44c <start_pass_huff_decoder+0xb60>
  81d444:	00800204 	movi	r2,8
  81d448:	e0bff315 	stw	r2,-52(fp)
  81d44c:	e0bff517 	ldw	r2,-44(fp)
  81d450:	0080030e 	bge	zero,r2,81d460 <start_pass_huff_decoder+0xb74>
  81d454:	e0bff517 	ldw	r2,-44(fp)
  81d458:	10800250 	cmplti	r2,r2,9
  81d45c:	1000021e 	bne	r2,zero,81d468 <start_pass_huff_decoder+0xb7c>
  81d460:	00800204 	movi	r2,8
  81d464:	e0bff515 	stw	r2,-44(fp)
  81d468:	e0bff317 	ldw	r2,-52(fp)
  81d46c:	113fffc4 	addi	r4,r2,-1
  81d470:	e0bff517 	ldw	r2,-44(fp)
  81d474:	10ffffc4 	addi	r3,r2,-1
  81d478:	008021b4 	movhi	r2,134
  81d47c:	10a2a204 	addi	r2,r2,-30072
  81d480:	200890fa 	slli	r4,r4,3
  81d484:	20c7883a 	add	r3,r4,r3
  81d488:	18c7883a 	add	r3,r3,r3
  81d48c:	18c7883a 	add	r3,r3,r3
  81d490:	10c5883a 	add	r2,r2,r3
  81d494:	10800017 	ldw	r2,0(r2)
  81d498:	10c00044 	addi	r3,r2,1
  81d49c:	e13ff717 	ldw	r4,-36(fp)
  81d4a0:	e0bff417 	ldw	r2,-48(fp)
  81d4a4:	10800b44 	addi	r2,r2,45
  81d4a8:	1085883a 	add	r2,r2,r2
  81d4ac:	1085883a 	add	r2,r2,r2
  81d4b0:	2085883a 	add	r2,r4,r2
  81d4b4:	10c00015 	stw	r3,0(r2)
  81d4b8:	0001883a 	nop
  81d4bc:	00000706 	br	81d4dc <start_pass_huff_decoder+0xbf0>
  81d4c0:	e0fff717 	ldw	r3,-36(fp)
  81d4c4:	e0bff417 	ldw	r2,-48(fp)
  81d4c8:	10800b44 	addi	r2,r2,45
  81d4cc:	1085883a 	add	r2,r2,r2
  81d4d0:	1085883a 	add	r2,r2,r2
  81d4d4:	1885883a 	add	r2,r3,r2
  81d4d8:	10000015 	stw	zero,0(r2)
  81d4dc:	e0bff417 	ldw	r2,-48(fp)
  81d4e0:	10800044 	addi	r2,r2,1
  81d4e4:	e0bff415 	stw	r2,-48(fp)
  81d4e8:	e0bffd17 	ldw	r2,-12(fp)
  81d4ec:	10805c17 	ldw	r2,368(r2)
  81d4f0:	e0fff417 	ldw	r3,-48(fp)
  81d4f4:	18be7816 	blt	r3,r2,81ced8 <__alt_mem_epcs_flash_controller_0+0xff813ed8>
  81d4f8:	e0bff717 	ldw	r2,-36(fp)
  81d4fc:	10000415 	stw	zero,16(r2)
  81d500:	e0bff717 	ldw	r2,-36(fp)
  81d504:	10000315 	stw	zero,12(r2)
  81d508:	e0bff717 	ldw	r2,-36(fp)
  81d50c:	10000a15 	stw	zero,40(r2)
  81d510:	e0bffd17 	ldw	r2,-12(fp)
  81d514:	10c04617 	ldw	r3,280(r2)
  81d518:	e0bff717 	ldw	r2,-36(fp)
  81d51c:	10c00b15 	stw	r3,44(r2)
  81d520:	0001883a 	nop
  81d524:	e6fffe04 	addi	sp,fp,-8
  81d528:	dfc00317 	ldw	ra,12(sp)
  81d52c:	df000217 	ldw	fp,8(sp)
  81d530:	dc400117 	ldw	r17,4(sp)
  81d534:	dc000017 	ldw	r16,0(sp)
  81d538:	dec00404 	addi	sp,sp,16
  81d53c:	f800283a 	ret

0081d540 <jinit_huff_decoder>:
  81d540:	defff904 	addi	sp,sp,-28
  81d544:	dfc00615 	stw	ra,24(sp)
  81d548:	df000515 	stw	fp,20(sp)
  81d54c:	df000504 	addi	fp,sp,20
  81d550:	e13fff15 	stw	r4,-4(fp)
  81d554:	e0bfff17 	ldw	r2,-4(fp)
  81d558:	10800117 	ldw	r2,4(r2)
  81d55c:	10800017 	ldw	r2,0(r2)
  81d560:	01803704 	movi	r6,220
  81d564:	01400044 	movi	r5,1
  81d568:	e13fff17 	ldw	r4,-4(fp)
  81d56c:	103ee83a 	callr	r2
  81d570:	e0bffe15 	stw	r2,-8(fp)
  81d574:	e0fffe17 	ldw	r3,-8(fp)
  81d578:	e0bfff17 	ldw	r2,-4(fp)
  81d57c:	10c07515 	stw	r3,468(r2)
  81d580:	e0fffe17 	ldw	r3,-8(fp)
  81d584:	008020b4 	movhi	r2,130
  81d588:	10b23b04 	addi	r2,r2,-14100
  81d58c:	18800015 	stw	r2,0(r3)
  81d590:	e0fffe17 	ldw	r3,-8(fp)
  81d594:	008020b4 	movhi	r2,130
  81d598:	10aa5904 	addi	r2,r2,-22172
  81d59c:	18800215 	stw	r2,8(r3)
  81d5a0:	e0bfff17 	ldw	r2,-4(fp)
  81d5a4:	10803817 	ldw	r2,224(r2)
  81d5a8:	10003626 	beq	r2,zero,81d684 <jinit_huff_decoder+0x144>
  81d5ac:	e0bfff17 	ldw	r2,-4(fp)
  81d5b0:	10800117 	ldw	r2,4(r2)
  81d5b4:	10800017 	ldw	r2,0(r2)
  81d5b8:	e0ffff17 	ldw	r3,-4(fp)
  81d5bc:	18c00917 	ldw	r3,36(r3)
  81d5c0:	1806923a 	slli	r3,r3,8
  81d5c4:	180d883a 	mov	r6,r3
  81d5c8:	01400044 	movi	r5,1
  81d5cc:	e13fff17 	ldw	r4,-4(fp)
  81d5d0:	103ee83a 	callr	r2
  81d5d4:	1007883a 	mov	r3,r2
  81d5d8:	e0bfff17 	ldw	r2,-4(fp)
  81d5dc:	10c02815 	stw	r3,160(r2)
  81d5e0:	e0bfff17 	ldw	r2,-4(fp)
  81d5e4:	10802817 	ldw	r2,160(r2)
  81d5e8:	e0bffc15 	stw	r2,-16(fp)
  81d5ec:	e03ffd15 	stw	zero,-12(fp)
  81d5f0:	00001006 	br	81d634 <jinit_huff_decoder+0xf4>
  81d5f4:	e03ffb15 	stw	zero,-20(fp)
  81d5f8:	00000806 	br	81d61c <jinit_huff_decoder+0xdc>
  81d5fc:	e0bffc17 	ldw	r2,-16(fp)
  81d600:	10c00104 	addi	r3,r2,4
  81d604:	e0fffc15 	stw	r3,-16(fp)
  81d608:	00ffffc4 	movi	r3,-1
  81d60c:	10c00015 	stw	r3,0(r2)
  81d610:	e0bffb17 	ldw	r2,-20(fp)
  81d614:	10800044 	addi	r2,r2,1
  81d618:	e0bffb15 	stw	r2,-20(fp)
  81d61c:	e0bffb17 	ldw	r2,-20(fp)
  81d620:	10801010 	cmplti	r2,r2,64
  81d624:	103ff51e 	bne	r2,zero,81d5fc <__alt_mem_epcs_flash_controller_0+0xff8145fc>
  81d628:	e0bffd17 	ldw	r2,-12(fp)
  81d62c:	10800044 	addi	r2,r2,1
  81d630:	e0bffd15 	stw	r2,-12(fp)
  81d634:	e0bfff17 	ldw	r2,-4(fp)
  81d638:	10800917 	ldw	r2,36(r2)
  81d63c:	e0fffd17 	ldw	r3,-12(fp)
  81d640:	18bfec16 	blt	r3,r2,81d5f4 <__alt_mem_epcs_flash_controller_0+0xff8145f4>
  81d644:	e03ffb15 	stw	zero,-20(fp)
  81d648:	00000a06 	br	81d674 <jinit_huff_decoder+0x134>
  81d64c:	e0fffe17 	ldw	r3,-8(fp)
  81d650:	e0bffb17 	ldw	r2,-20(fp)
  81d654:	10800304 	addi	r2,r2,12
  81d658:	1085883a 	add	r2,r2,r2
  81d65c:	1085883a 	add	r2,r2,r2
  81d660:	1885883a 	add	r2,r3,r2
  81d664:	10000015 	stw	zero,0(r2)
  81d668:	e0bffb17 	ldw	r2,-20(fp)
  81d66c:	10800044 	addi	r2,r2,1
  81d670:	e0bffb15 	stw	r2,-20(fp)
  81d674:	e0bffb17 	ldw	r2,-20(fp)
  81d678:	10800110 	cmplti	r2,r2,4
  81d67c:	103ff31e 	bne	r2,zero,81d64c <__alt_mem_epcs_flash_controller_0+0xff81464c>
  81d680:	00001d06 	br	81d6f8 <jinit_huff_decoder+0x1b8>
  81d684:	e03ffb15 	stw	zero,-20(fp)
  81d688:	00001806 	br	81d6ec <jinit_huff_decoder+0x1ac>
  81d68c:	e0fffe17 	ldw	r3,-8(fp)
  81d690:	e0bffb17 	ldw	r2,-20(fp)
  81d694:	10800544 	addi	r2,r2,21
  81d698:	1085883a 	add	r2,r2,r2
  81d69c:	1085883a 	add	r2,r2,r2
  81d6a0:	1885883a 	add	r2,r3,r2
  81d6a4:	10000015 	stw	zero,0(r2)
  81d6a8:	e0fffe17 	ldw	r3,-8(fp)
  81d6ac:	e0bffb17 	ldw	r2,-20(fp)
  81d6b0:	10800544 	addi	r2,r2,21
  81d6b4:	1085883a 	add	r2,r2,r2
  81d6b8:	1085883a 	add	r2,r2,r2
  81d6bc:	1885883a 	add	r2,r3,r2
  81d6c0:	10c00017 	ldw	r3,0(r2)
  81d6c4:	e13ffe17 	ldw	r4,-8(fp)
  81d6c8:	e0bffb17 	ldw	r2,-20(fp)
  81d6cc:	10800444 	addi	r2,r2,17
  81d6d0:	1085883a 	add	r2,r2,r2
  81d6d4:	1085883a 	add	r2,r2,r2
  81d6d8:	2085883a 	add	r2,r4,r2
  81d6dc:	10c00015 	stw	r3,0(r2)
  81d6e0:	e0bffb17 	ldw	r2,-20(fp)
  81d6e4:	10800044 	addi	r2,r2,1
  81d6e8:	e0bffb15 	stw	r2,-20(fp)
  81d6ec:	e0bffb17 	ldw	r2,-20(fp)
  81d6f0:	10800110 	cmplti	r2,r2,4
  81d6f4:	103fe51e 	bne	r2,zero,81d68c <__alt_mem_epcs_flash_controller_0+0xff81468c>
  81d6f8:	0001883a 	nop
  81d6fc:	e037883a 	mov	sp,fp
  81d700:	dfc00117 	ldw	ra,4(sp)
  81d704:	df000017 	ldw	fp,0(sp)
  81d708:	dec00204 	addi	sp,sp,8
  81d70c:	f800283a 	ret

0081d710 <alloc_funny_pointers>:
  81d710:	defff604 	addi	sp,sp,-40
  81d714:	dfc00915 	stw	ra,36(sp)
  81d718:	df000815 	stw	fp,32(sp)
  81d71c:	dc000715 	stw	r16,28(sp)
  81d720:	df000804 	addi	fp,sp,32
  81d724:	e13ffe15 	stw	r4,-8(fp)
  81d728:	e0bffe17 	ldw	r2,-8(fp)
  81d72c:	10807017 	ldw	r2,448(r2)
  81d730:	e0bffa15 	stw	r2,-24(fp)
  81d734:	e0bffe17 	ldw	r2,-8(fp)
  81d738:	10805217 	ldw	r2,328(r2)
  81d73c:	e0bffb15 	stw	r2,-20(fp)
  81d740:	e0bffe17 	ldw	r2,-8(fp)
  81d744:	10800117 	ldw	r2,4(r2)
  81d748:	10800017 	ldw	r2,0(r2)
  81d74c:	e0fffe17 	ldw	r3,-8(fp)
  81d750:	18c00917 	ldw	r3,36(r3)
  81d754:	180690fa 	slli	r3,r3,3
  81d758:	180d883a 	mov	r6,r3
  81d75c:	01400044 	movi	r5,1
  81d760:	e13ffe17 	ldw	r4,-8(fp)
  81d764:	103ee83a 	callr	r2
  81d768:	1007883a 	mov	r3,r2
  81d76c:	e0bffa17 	ldw	r2,-24(fp)
  81d770:	10c00e15 	stw	r3,56(r2)
  81d774:	e0bffa17 	ldw	r2,-24(fp)
  81d778:	10c00e17 	ldw	r3,56(r2)
  81d77c:	e0bffe17 	ldw	r2,-8(fp)
  81d780:	10800917 	ldw	r2,36(r2)
  81d784:	1085883a 	add	r2,r2,r2
  81d788:	1085883a 	add	r2,r2,r2
  81d78c:	1887883a 	add	r3,r3,r2
  81d790:	e0bffa17 	ldw	r2,-24(fp)
  81d794:	10c00f15 	stw	r3,60(r2)
  81d798:	e03ff815 	stw	zero,-32(fp)
  81d79c:	e0bffe17 	ldw	r2,-8(fp)
  81d7a0:	10803617 	ldw	r2,216(r2)
  81d7a4:	e0bff915 	stw	r2,-28(fp)
  81d7a8:	00004406 	br	81d8bc <alloc_funny_pointers+0x1ac>
  81d7ac:	e0bff917 	ldw	r2,-28(fp)
  81d7b0:	10c00317 	ldw	r3,12(r2)
  81d7b4:	e0bff917 	ldw	r2,-28(fp)
  81d7b8:	10800a17 	ldw	r2,40(r2)
  81d7bc:	100b883a 	mov	r5,r2
  81d7c0:	1809883a 	mov	r4,r3
  81d7c4:	08305040 	call	830504 <__mulsi3>
  81d7c8:	1007883a 	mov	r3,r2
  81d7cc:	e0bffe17 	ldw	r2,-8(fp)
  81d7d0:	10805217 	ldw	r2,328(r2)
  81d7d4:	100b883a 	mov	r5,r2
  81d7d8:	1809883a 	mov	r4,r3
  81d7dc:	08303500 	call	830350 <__divsi3>
  81d7e0:	e0bffc15 	stw	r2,-16(fp)
  81d7e4:	e0bffe17 	ldw	r2,-8(fp)
  81d7e8:	10800117 	ldw	r2,4(r2)
  81d7ec:	14000017 	ldw	r16,0(r2)
  81d7f0:	e0bffb17 	ldw	r2,-20(fp)
  81d7f4:	10800104 	addi	r2,r2,4
  81d7f8:	e17ffc17 	ldw	r5,-16(fp)
  81d7fc:	1009883a 	mov	r4,r2
  81d800:	08305040 	call	830504 <__mulsi3>
  81d804:	100490fa 	slli	r2,r2,3
  81d808:	100d883a 	mov	r6,r2
  81d80c:	01400044 	movi	r5,1
  81d810:	e13ffe17 	ldw	r4,-8(fp)
  81d814:	803ee83a 	callr	r16
  81d818:	e0bffd15 	stw	r2,-12(fp)
  81d81c:	e0bffc17 	ldw	r2,-16(fp)
  81d820:	1085883a 	add	r2,r2,r2
  81d824:	1085883a 	add	r2,r2,r2
  81d828:	1007883a 	mov	r3,r2
  81d82c:	e0bffd17 	ldw	r2,-12(fp)
  81d830:	10c5883a 	add	r2,r2,r3
  81d834:	e0bffd15 	stw	r2,-12(fp)
  81d838:	e0bffa17 	ldw	r2,-24(fp)
  81d83c:	10c00e17 	ldw	r3,56(r2)
  81d840:	e0bff817 	ldw	r2,-32(fp)
  81d844:	1085883a 	add	r2,r2,r2
  81d848:	1085883a 	add	r2,r2,r2
  81d84c:	1885883a 	add	r2,r3,r2
  81d850:	e0fffd17 	ldw	r3,-12(fp)
  81d854:	10c00015 	stw	r3,0(r2)
  81d858:	e0bffb17 	ldw	r2,-20(fp)
  81d85c:	10800104 	addi	r2,r2,4
  81d860:	e17ffc17 	ldw	r5,-16(fp)
  81d864:	1009883a 	mov	r4,r2
  81d868:	08305040 	call	830504 <__mulsi3>
  81d86c:	1085883a 	add	r2,r2,r2
  81d870:	1085883a 	add	r2,r2,r2
  81d874:	1007883a 	mov	r3,r2
  81d878:	e0bffd17 	ldw	r2,-12(fp)
  81d87c:	10c5883a 	add	r2,r2,r3
  81d880:	e0bffd15 	stw	r2,-12(fp)
  81d884:	e0bffa17 	ldw	r2,-24(fp)
  81d888:	10c00f17 	ldw	r3,60(r2)
  81d88c:	e0bff817 	ldw	r2,-32(fp)
  81d890:	1085883a 	add	r2,r2,r2
  81d894:	1085883a 	add	r2,r2,r2
  81d898:	1885883a 	add	r2,r3,r2
  81d89c:	e0fffd17 	ldw	r3,-12(fp)
  81d8a0:	10c00015 	stw	r3,0(r2)
  81d8a4:	e0bff817 	ldw	r2,-32(fp)
  81d8a8:	10800044 	addi	r2,r2,1
  81d8ac:	e0bff815 	stw	r2,-32(fp)
  81d8b0:	e0bff917 	ldw	r2,-28(fp)
  81d8b4:	10801604 	addi	r2,r2,88
  81d8b8:	e0bff915 	stw	r2,-28(fp)
  81d8bc:	e0bffe17 	ldw	r2,-8(fp)
  81d8c0:	10800917 	ldw	r2,36(r2)
  81d8c4:	e0fff817 	ldw	r3,-32(fp)
  81d8c8:	18bfb816 	blt	r3,r2,81d7ac <__alt_mem_epcs_flash_controller_0+0xff8147ac>
  81d8cc:	0001883a 	nop
  81d8d0:	e6ffff04 	addi	sp,fp,-4
  81d8d4:	dfc00217 	ldw	ra,8(sp)
  81d8d8:	df000117 	ldw	fp,4(sp)
  81d8dc:	dc000017 	ldw	r16,0(sp)
  81d8e0:	dec00304 	addi	sp,sp,12
  81d8e4:	f800283a 	ret

0081d8e8 <make_funny_pointers>:
  81d8e8:	defff304 	addi	sp,sp,-52
  81d8ec:	dfc00c15 	stw	ra,48(sp)
  81d8f0:	df000b15 	stw	fp,44(sp)
  81d8f4:	dc000a15 	stw	r16,40(sp)
  81d8f8:	df000b04 	addi	fp,sp,44
  81d8fc:	e13ffe15 	stw	r4,-8(fp)
  81d900:	e0bffe17 	ldw	r2,-8(fp)
  81d904:	10807017 	ldw	r2,448(r2)
  81d908:	e0bff815 	stw	r2,-32(fp)
  81d90c:	e0bffe17 	ldw	r2,-8(fp)
  81d910:	10805217 	ldw	r2,328(r2)
  81d914:	e0bff915 	stw	r2,-28(fp)
  81d918:	e03ff515 	stw	zero,-44(fp)
  81d91c:	e0bffe17 	ldw	r2,-8(fp)
  81d920:	10803617 	ldw	r2,216(r2)
  81d924:	e0bff715 	stw	r2,-36(fp)
  81d928:	0000a006 	br	81dbac <make_funny_pointers+0x2c4>
  81d92c:	e0bff717 	ldw	r2,-36(fp)
  81d930:	10c00317 	ldw	r3,12(r2)
  81d934:	e0bff717 	ldw	r2,-36(fp)
  81d938:	10800a17 	ldw	r2,40(r2)
  81d93c:	100b883a 	mov	r5,r2
  81d940:	1809883a 	mov	r4,r3
  81d944:	08305040 	call	830504 <__mulsi3>
  81d948:	1007883a 	mov	r3,r2
  81d94c:	e0bffe17 	ldw	r2,-8(fp)
  81d950:	10805217 	ldw	r2,328(r2)
  81d954:	100b883a 	mov	r5,r2
  81d958:	1809883a 	mov	r4,r3
  81d95c:	08303500 	call	830350 <__divsi3>
  81d960:	e0bffa15 	stw	r2,-24(fp)
  81d964:	e0bff817 	ldw	r2,-32(fp)
  81d968:	10c00e17 	ldw	r3,56(r2)
  81d96c:	e0bff517 	ldw	r2,-44(fp)
  81d970:	1085883a 	add	r2,r2,r2
  81d974:	1085883a 	add	r2,r2,r2
  81d978:	1885883a 	add	r2,r3,r2
  81d97c:	10800017 	ldw	r2,0(r2)
  81d980:	e0bffb15 	stw	r2,-20(fp)
  81d984:	e0bff817 	ldw	r2,-32(fp)
  81d988:	10c00f17 	ldw	r3,60(r2)
  81d98c:	e0bff517 	ldw	r2,-44(fp)
  81d990:	1085883a 	add	r2,r2,r2
  81d994:	1085883a 	add	r2,r2,r2
  81d998:	1885883a 	add	r2,r3,r2
  81d99c:	10800017 	ldw	r2,0(r2)
  81d9a0:	e0bffc15 	stw	r2,-16(fp)
  81d9a4:	e0fff817 	ldw	r3,-32(fp)
  81d9a8:	e0bff517 	ldw	r2,-44(fp)
  81d9ac:	10800084 	addi	r2,r2,2
  81d9b0:	1085883a 	add	r2,r2,r2
  81d9b4:	1085883a 	add	r2,r2,r2
  81d9b8:	1885883a 	add	r2,r3,r2
  81d9bc:	10800017 	ldw	r2,0(r2)
  81d9c0:	e0bffd15 	stw	r2,-12(fp)
  81d9c4:	e03ff615 	stw	zero,-40(fp)
  81d9c8:	00001906 	br	81da30 <make_funny_pointers+0x148>
  81d9cc:	e0bff617 	ldw	r2,-40(fp)
  81d9d0:	1085883a 	add	r2,r2,r2
  81d9d4:	1085883a 	add	r2,r2,r2
  81d9d8:	1007883a 	mov	r3,r2
  81d9dc:	e0bffb17 	ldw	r2,-20(fp)
  81d9e0:	10c9883a 	add	r4,r2,r3
  81d9e4:	e0bff617 	ldw	r2,-40(fp)
  81d9e8:	1085883a 	add	r2,r2,r2
  81d9ec:	1085883a 	add	r2,r2,r2
  81d9f0:	1007883a 	mov	r3,r2
  81d9f4:	e0bffc17 	ldw	r2,-16(fp)
  81d9f8:	10c5883a 	add	r2,r2,r3
  81d9fc:	e0fff617 	ldw	r3,-40(fp)
  81da00:	18c7883a 	add	r3,r3,r3
  81da04:	18c7883a 	add	r3,r3,r3
  81da08:	180b883a 	mov	r5,r3
  81da0c:	e0fffd17 	ldw	r3,-12(fp)
  81da10:	1947883a 	add	r3,r3,r5
  81da14:	18c00017 	ldw	r3,0(r3)
  81da18:	10c00015 	stw	r3,0(r2)
  81da1c:	10800017 	ldw	r2,0(r2)
  81da20:	20800015 	stw	r2,0(r4)
  81da24:	e0bff617 	ldw	r2,-40(fp)
  81da28:	10800044 	addi	r2,r2,1
  81da2c:	e0bff615 	stw	r2,-40(fp)
  81da30:	e0bff917 	ldw	r2,-28(fp)
  81da34:	10800084 	addi	r2,r2,2
  81da38:	e17ffa17 	ldw	r5,-24(fp)
  81da3c:	1009883a 	mov	r4,r2
  81da40:	08305040 	call	830504 <__mulsi3>
  81da44:	1007883a 	mov	r3,r2
  81da48:	e0bff617 	ldw	r2,-40(fp)
  81da4c:	10ffdf16 	blt	r2,r3,81d9cc <__alt_mem_epcs_flash_controller_0+0xff8149cc>
  81da50:	e03ff615 	stw	zero,-40(fp)
  81da54:	00003706 	br	81db34 <make_funny_pointers+0x24c>
  81da58:	e0bff917 	ldw	r2,-28(fp)
  81da5c:	10bfff84 	addi	r2,r2,-2
  81da60:	e17ffa17 	ldw	r5,-24(fp)
  81da64:	1009883a 	mov	r4,r2
  81da68:	08305040 	call	830504 <__mulsi3>
  81da6c:	1007883a 	mov	r3,r2
  81da70:	e0bff617 	ldw	r2,-40(fp)
  81da74:	1885883a 	add	r2,r3,r2
  81da78:	1085883a 	add	r2,r2,r2
  81da7c:	1085883a 	add	r2,r2,r2
  81da80:	1007883a 	mov	r3,r2
  81da84:	e0bffc17 	ldw	r2,-16(fp)
  81da88:	10e1883a 	add	r16,r2,r3
  81da8c:	e17ff917 	ldw	r5,-28(fp)
  81da90:	e13ffa17 	ldw	r4,-24(fp)
  81da94:	08305040 	call	830504 <__mulsi3>
  81da98:	1007883a 	mov	r3,r2
  81da9c:	e0bff617 	ldw	r2,-40(fp)
  81daa0:	1885883a 	add	r2,r3,r2
  81daa4:	1085883a 	add	r2,r2,r2
  81daa8:	1085883a 	add	r2,r2,r2
  81daac:	1007883a 	mov	r3,r2
  81dab0:	e0bffd17 	ldw	r2,-12(fp)
  81dab4:	10c5883a 	add	r2,r2,r3
  81dab8:	10800017 	ldw	r2,0(r2)
  81dabc:	80800015 	stw	r2,0(r16)
  81dac0:	e17ff917 	ldw	r5,-28(fp)
  81dac4:	e13ffa17 	ldw	r4,-24(fp)
  81dac8:	08305040 	call	830504 <__mulsi3>
  81dacc:	1007883a 	mov	r3,r2
  81dad0:	e0bff617 	ldw	r2,-40(fp)
  81dad4:	1885883a 	add	r2,r3,r2
  81dad8:	1085883a 	add	r2,r2,r2
  81dadc:	1085883a 	add	r2,r2,r2
  81dae0:	1007883a 	mov	r3,r2
  81dae4:	e0bffc17 	ldw	r2,-16(fp)
  81dae8:	10e1883a 	add	r16,r2,r3
  81daec:	e0bff917 	ldw	r2,-28(fp)
  81daf0:	10bfff84 	addi	r2,r2,-2
  81daf4:	e17ffa17 	ldw	r5,-24(fp)
  81daf8:	1009883a 	mov	r4,r2
  81dafc:	08305040 	call	830504 <__mulsi3>
  81db00:	1007883a 	mov	r3,r2
  81db04:	e0bff617 	ldw	r2,-40(fp)
  81db08:	1885883a 	add	r2,r3,r2
  81db0c:	1085883a 	add	r2,r2,r2
  81db10:	1085883a 	add	r2,r2,r2
  81db14:	1007883a 	mov	r3,r2
  81db18:	e0bffd17 	ldw	r2,-12(fp)
  81db1c:	10c5883a 	add	r2,r2,r3
  81db20:	10800017 	ldw	r2,0(r2)
  81db24:	80800015 	stw	r2,0(r16)
  81db28:	e0bff617 	ldw	r2,-40(fp)
  81db2c:	10800044 	addi	r2,r2,1
  81db30:	e0bff615 	stw	r2,-40(fp)
  81db34:	e0bffa17 	ldw	r2,-24(fp)
  81db38:	1085883a 	add	r2,r2,r2
  81db3c:	1007883a 	mov	r3,r2
  81db40:	e0bff617 	ldw	r2,-40(fp)
  81db44:	10ffc416 	blt	r2,r3,81da58 <__alt_mem_epcs_flash_controller_0+0xff814a58>
  81db48:	e03ff615 	stw	zero,-40(fp)
  81db4c:	00000e06 	br	81db88 <make_funny_pointers+0x2a0>
  81db50:	e0fff617 	ldw	r3,-40(fp)
  81db54:	e0bffa17 	ldw	r2,-24(fp)
  81db58:	1885c83a 	sub	r2,r3,r2
  81db5c:	1085883a 	add	r2,r2,r2
  81db60:	1085883a 	add	r2,r2,r2
  81db64:	1007883a 	mov	r3,r2
  81db68:	e0bffb17 	ldw	r2,-20(fp)
  81db6c:	10c5883a 	add	r2,r2,r3
  81db70:	e0fffb17 	ldw	r3,-20(fp)
  81db74:	18c00017 	ldw	r3,0(r3)
  81db78:	10c00015 	stw	r3,0(r2)
  81db7c:	e0bff617 	ldw	r2,-40(fp)
  81db80:	10800044 	addi	r2,r2,1
  81db84:	e0bff615 	stw	r2,-40(fp)
  81db88:	e0fff617 	ldw	r3,-40(fp)
  81db8c:	e0bffa17 	ldw	r2,-24(fp)
  81db90:	18bfef16 	blt	r3,r2,81db50 <__alt_mem_epcs_flash_controller_0+0xff814b50>
  81db94:	e0bff517 	ldw	r2,-44(fp)
  81db98:	10800044 	addi	r2,r2,1
  81db9c:	e0bff515 	stw	r2,-44(fp)
  81dba0:	e0bff717 	ldw	r2,-36(fp)
  81dba4:	10801604 	addi	r2,r2,88
  81dba8:	e0bff715 	stw	r2,-36(fp)
  81dbac:	e0bffe17 	ldw	r2,-8(fp)
  81dbb0:	10800917 	ldw	r2,36(r2)
  81dbb4:	e0fff517 	ldw	r3,-44(fp)
  81dbb8:	18bf5c16 	blt	r3,r2,81d92c <__alt_mem_epcs_flash_controller_0+0xff81492c>
  81dbbc:	0001883a 	nop
  81dbc0:	e6ffff04 	addi	sp,fp,-4
  81dbc4:	dfc00217 	ldw	ra,8(sp)
  81dbc8:	df000117 	ldw	fp,4(sp)
  81dbcc:	dc000017 	ldw	r16,0(sp)
  81dbd0:	dec00304 	addi	sp,sp,12
  81dbd4:	f800283a 	ret

0081dbd8 <set_wraparound_pointers>:
  81dbd8:	defff404 	addi	sp,sp,-48
  81dbdc:	dfc00b15 	stw	ra,44(sp)
  81dbe0:	df000a15 	stw	fp,40(sp)
  81dbe4:	dc000915 	stw	r16,36(sp)
  81dbe8:	df000a04 	addi	fp,sp,40
  81dbec:	e13ffe15 	stw	r4,-8(fp)
  81dbf0:	e0bffe17 	ldw	r2,-8(fp)
  81dbf4:	10807017 	ldw	r2,448(r2)
  81dbf8:	e0bff915 	stw	r2,-28(fp)
  81dbfc:	e0bffe17 	ldw	r2,-8(fp)
  81dc00:	10805217 	ldw	r2,328(r2)
  81dc04:	e0bffa15 	stw	r2,-24(fp)
  81dc08:	e03ff615 	stw	zero,-40(fp)
  81dc0c:	e0bffe17 	ldw	r2,-8(fp)
  81dc10:	10803617 	ldw	r2,216(r2)
  81dc14:	e0bff815 	stw	r2,-32(fp)
  81dc18:	00008406 	br	81de2c <set_wraparound_pointers+0x254>
  81dc1c:	e0bff817 	ldw	r2,-32(fp)
  81dc20:	10c00317 	ldw	r3,12(r2)
  81dc24:	e0bff817 	ldw	r2,-32(fp)
  81dc28:	10800a17 	ldw	r2,40(r2)
  81dc2c:	100b883a 	mov	r5,r2
  81dc30:	1809883a 	mov	r4,r3
  81dc34:	08305040 	call	830504 <__mulsi3>
  81dc38:	1007883a 	mov	r3,r2
  81dc3c:	e0bffe17 	ldw	r2,-8(fp)
  81dc40:	10805217 	ldw	r2,328(r2)
  81dc44:	100b883a 	mov	r5,r2
  81dc48:	1809883a 	mov	r4,r3
  81dc4c:	08303500 	call	830350 <__divsi3>
  81dc50:	e0bffb15 	stw	r2,-20(fp)
  81dc54:	e0bff917 	ldw	r2,-28(fp)
  81dc58:	10c00e17 	ldw	r3,56(r2)
  81dc5c:	e0bff617 	ldw	r2,-40(fp)
  81dc60:	1085883a 	add	r2,r2,r2
  81dc64:	1085883a 	add	r2,r2,r2
  81dc68:	1885883a 	add	r2,r3,r2
  81dc6c:	10800017 	ldw	r2,0(r2)
  81dc70:	e0bffc15 	stw	r2,-16(fp)
  81dc74:	e0bff917 	ldw	r2,-28(fp)
  81dc78:	10c00f17 	ldw	r3,60(r2)
  81dc7c:	e0bff617 	ldw	r2,-40(fp)
  81dc80:	1085883a 	add	r2,r2,r2
  81dc84:	1085883a 	add	r2,r2,r2
  81dc88:	1885883a 	add	r2,r3,r2
  81dc8c:	10800017 	ldw	r2,0(r2)
  81dc90:	e0bffd15 	stw	r2,-12(fp)
  81dc94:	e03ff715 	stw	zero,-36(fp)
  81dc98:	00005b06 	br	81de08 <set_wraparound_pointers+0x230>
  81dc9c:	e0fff717 	ldw	r3,-36(fp)
  81dca0:	e0bffb17 	ldw	r2,-20(fp)
  81dca4:	1885c83a 	sub	r2,r3,r2
  81dca8:	1085883a 	add	r2,r2,r2
  81dcac:	1085883a 	add	r2,r2,r2
  81dcb0:	1007883a 	mov	r3,r2
  81dcb4:	e0bffc17 	ldw	r2,-16(fp)
  81dcb8:	10e1883a 	add	r16,r2,r3
  81dcbc:	e0bffa17 	ldw	r2,-24(fp)
  81dcc0:	10800044 	addi	r2,r2,1
  81dcc4:	e17ffb17 	ldw	r5,-20(fp)
  81dcc8:	1009883a 	mov	r4,r2
  81dccc:	08305040 	call	830504 <__mulsi3>
  81dcd0:	1007883a 	mov	r3,r2
  81dcd4:	e0bff717 	ldw	r2,-36(fp)
  81dcd8:	1885883a 	add	r2,r3,r2
  81dcdc:	1085883a 	add	r2,r2,r2
  81dce0:	1085883a 	add	r2,r2,r2
  81dce4:	1007883a 	mov	r3,r2
  81dce8:	e0bffc17 	ldw	r2,-16(fp)
  81dcec:	10c5883a 	add	r2,r2,r3
  81dcf0:	10800017 	ldw	r2,0(r2)
  81dcf4:	80800015 	stw	r2,0(r16)
  81dcf8:	e0fff717 	ldw	r3,-36(fp)
  81dcfc:	e0bffb17 	ldw	r2,-20(fp)
  81dd00:	1885c83a 	sub	r2,r3,r2
  81dd04:	1085883a 	add	r2,r2,r2
  81dd08:	1085883a 	add	r2,r2,r2
  81dd0c:	1007883a 	mov	r3,r2
  81dd10:	e0bffd17 	ldw	r2,-12(fp)
  81dd14:	10e1883a 	add	r16,r2,r3
  81dd18:	e0bffa17 	ldw	r2,-24(fp)
  81dd1c:	10800044 	addi	r2,r2,1
  81dd20:	e17ffb17 	ldw	r5,-20(fp)
  81dd24:	1009883a 	mov	r4,r2
  81dd28:	08305040 	call	830504 <__mulsi3>
  81dd2c:	1007883a 	mov	r3,r2
  81dd30:	e0bff717 	ldw	r2,-36(fp)
  81dd34:	1885883a 	add	r2,r3,r2
  81dd38:	1085883a 	add	r2,r2,r2
  81dd3c:	1085883a 	add	r2,r2,r2
  81dd40:	1007883a 	mov	r3,r2
  81dd44:	e0bffd17 	ldw	r2,-12(fp)
  81dd48:	10c5883a 	add	r2,r2,r3
  81dd4c:	10800017 	ldw	r2,0(r2)
  81dd50:	80800015 	stw	r2,0(r16)
  81dd54:	e0bffa17 	ldw	r2,-24(fp)
  81dd58:	10800084 	addi	r2,r2,2
  81dd5c:	e17ffb17 	ldw	r5,-20(fp)
  81dd60:	1009883a 	mov	r4,r2
  81dd64:	08305040 	call	830504 <__mulsi3>
  81dd68:	1007883a 	mov	r3,r2
  81dd6c:	e0bff717 	ldw	r2,-36(fp)
  81dd70:	1885883a 	add	r2,r3,r2
  81dd74:	1085883a 	add	r2,r2,r2
  81dd78:	1085883a 	add	r2,r2,r2
  81dd7c:	1007883a 	mov	r3,r2
  81dd80:	e0bffc17 	ldw	r2,-16(fp)
  81dd84:	10c7883a 	add	r3,r2,r3
  81dd88:	e0bff717 	ldw	r2,-36(fp)
  81dd8c:	1085883a 	add	r2,r2,r2
  81dd90:	1085883a 	add	r2,r2,r2
  81dd94:	1009883a 	mov	r4,r2
  81dd98:	e0bffc17 	ldw	r2,-16(fp)
  81dd9c:	1105883a 	add	r2,r2,r4
  81dda0:	10800017 	ldw	r2,0(r2)
  81dda4:	18800015 	stw	r2,0(r3)
  81dda8:	e0bffa17 	ldw	r2,-24(fp)
  81ddac:	10800084 	addi	r2,r2,2
  81ddb0:	e17ffb17 	ldw	r5,-20(fp)
  81ddb4:	1009883a 	mov	r4,r2
  81ddb8:	08305040 	call	830504 <__mulsi3>
  81ddbc:	1007883a 	mov	r3,r2
  81ddc0:	e0bff717 	ldw	r2,-36(fp)
  81ddc4:	1885883a 	add	r2,r3,r2
  81ddc8:	1085883a 	add	r2,r2,r2
  81ddcc:	1085883a 	add	r2,r2,r2
  81ddd0:	1007883a 	mov	r3,r2
  81ddd4:	e0bffd17 	ldw	r2,-12(fp)
  81ddd8:	10c7883a 	add	r3,r2,r3
  81dddc:	e0bff717 	ldw	r2,-36(fp)
  81dde0:	1085883a 	add	r2,r2,r2
  81dde4:	1085883a 	add	r2,r2,r2
  81dde8:	1009883a 	mov	r4,r2
  81ddec:	e0bffd17 	ldw	r2,-12(fp)
  81ddf0:	1105883a 	add	r2,r2,r4
  81ddf4:	10800017 	ldw	r2,0(r2)
  81ddf8:	18800015 	stw	r2,0(r3)
  81ddfc:	e0bff717 	ldw	r2,-36(fp)
  81de00:	10800044 	addi	r2,r2,1
  81de04:	e0bff715 	stw	r2,-36(fp)
  81de08:	e0fff717 	ldw	r3,-36(fp)
  81de0c:	e0bffb17 	ldw	r2,-20(fp)
  81de10:	18bfa216 	blt	r3,r2,81dc9c <__alt_mem_epcs_flash_controller_0+0xff814c9c>
  81de14:	e0bff617 	ldw	r2,-40(fp)
  81de18:	10800044 	addi	r2,r2,1
  81de1c:	e0bff615 	stw	r2,-40(fp)
  81de20:	e0bff817 	ldw	r2,-32(fp)
  81de24:	10801604 	addi	r2,r2,88
  81de28:	e0bff815 	stw	r2,-32(fp)
  81de2c:	e0bffe17 	ldw	r2,-8(fp)
  81de30:	10800917 	ldw	r2,36(r2)
  81de34:	e0fff617 	ldw	r3,-40(fp)
  81de38:	18bf7816 	blt	r3,r2,81dc1c <__alt_mem_epcs_flash_controller_0+0xff814c1c>
  81de3c:	0001883a 	nop
  81de40:	e6ffff04 	addi	sp,fp,-4
  81de44:	dfc00217 	ldw	ra,8(sp)
  81de48:	df000117 	ldw	fp,4(sp)
  81de4c:	dc000017 	ldw	r16,0(sp)
  81de50:	dec00304 	addi	sp,sp,12
  81de54:	f800283a 	ret

0081de58 <set_bottom_pointers>:
  81de58:	defff504 	addi	sp,sp,-44
  81de5c:	dfc00a15 	stw	ra,40(sp)
  81de60:	df000915 	stw	fp,36(sp)
  81de64:	df000904 	addi	fp,sp,36
  81de68:	e13fff15 	stw	r4,-4(fp)
  81de6c:	e0bfff17 	ldw	r2,-4(fp)
  81de70:	10807017 	ldw	r2,448(r2)
  81de74:	e0bffb15 	stw	r2,-20(fp)
  81de78:	e03ff715 	stw	zero,-36(fp)
  81de7c:	e0bfff17 	ldw	r2,-4(fp)
  81de80:	10803617 	ldw	r2,216(r2)
  81de84:	e0bffa15 	stw	r2,-24(fp)
  81de88:	00005506 	br	81dfe0 <set_bottom_pointers+0x188>
  81de8c:	e0bffa17 	ldw	r2,-24(fp)
  81de90:	10c00317 	ldw	r3,12(r2)
  81de94:	e0bffa17 	ldw	r2,-24(fp)
  81de98:	10800a17 	ldw	r2,40(r2)
  81de9c:	100b883a 	mov	r5,r2
  81dea0:	1809883a 	mov	r4,r3
  81dea4:	08305040 	call	830504 <__mulsi3>
  81dea8:	e0bffc15 	stw	r2,-16(fp)
  81deac:	e0bfff17 	ldw	r2,-4(fp)
  81deb0:	10805217 	ldw	r2,328(r2)
  81deb4:	100b883a 	mov	r5,r2
  81deb8:	e13ffc17 	ldw	r4,-16(fp)
  81debc:	08303500 	call	830350 <__divsi3>
  81dec0:	e0bffd15 	stw	r2,-12(fp)
  81dec4:	e0bffa17 	ldw	r2,-24(fp)
  81dec8:	10800c17 	ldw	r2,48(r2)
  81decc:	e0fffc17 	ldw	r3,-16(fp)
  81ded0:	180b883a 	mov	r5,r3
  81ded4:	1009883a 	mov	r4,r2
  81ded8:	08304ac0 	call	8304ac <__umodsi3>
  81dedc:	e0bff915 	stw	r2,-28(fp)
  81dee0:	e0bff917 	ldw	r2,-28(fp)
  81dee4:	1000021e 	bne	r2,zero,81def0 <set_bottom_pointers+0x98>
  81dee8:	e0bffc17 	ldw	r2,-16(fp)
  81deec:	e0bff915 	stw	r2,-28(fp)
  81def0:	e0bff717 	ldw	r2,-36(fp)
  81def4:	1000091e 	bne	r2,zero,81df1c <set_bottom_pointers+0xc4>
  81def8:	e0bff917 	ldw	r2,-28(fp)
  81defc:	10bfffc4 	addi	r2,r2,-1
  81df00:	e17ffd17 	ldw	r5,-12(fp)
  81df04:	1009883a 	mov	r4,r2
  81df08:	08303500 	call	830350 <__divsi3>
  81df0c:	10800044 	addi	r2,r2,1
  81df10:	1007883a 	mov	r3,r2
  81df14:	e0bffb17 	ldw	r2,-20(fp)
  81df18:	10c01215 	stw	r3,72(r2)
  81df1c:	e0bffb17 	ldw	r2,-20(fp)
  81df20:	10801017 	ldw	r2,64(r2)
  81df24:	e0fffb17 	ldw	r3,-20(fp)
  81df28:	10800384 	addi	r2,r2,14
  81df2c:	1085883a 	add	r2,r2,r2
  81df30:	1085883a 	add	r2,r2,r2
  81df34:	1885883a 	add	r2,r3,r2
  81df38:	10c00017 	ldw	r3,0(r2)
  81df3c:	e0bff717 	ldw	r2,-36(fp)
  81df40:	1085883a 	add	r2,r2,r2
  81df44:	1085883a 	add	r2,r2,r2
  81df48:	1885883a 	add	r2,r3,r2
  81df4c:	10800017 	ldw	r2,0(r2)
  81df50:	e0bffe15 	stw	r2,-8(fp)
  81df54:	e03ff815 	stw	zero,-32(fp)
  81df58:	00001606 	br	81dfb4 <set_bottom_pointers+0x15c>
  81df5c:	e0fff917 	ldw	r3,-28(fp)
  81df60:	e0bff817 	ldw	r2,-32(fp)
  81df64:	1885883a 	add	r2,r3,r2
  81df68:	1085883a 	add	r2,r2,r2
  81df6c:	1085883a 	add	r2,r2,r2
  81df70:	1007883a 	mov	r3,r2
  81df74:	e0bffe17 	ldw	r2,-8(fp)
  81df78:	10c7883a 	add	r3,r2,r3
  81df7c:	e13ff917 	ldw	r4,-28(fp)
  81df80:	00900034 	movhi	r2,16384
  81df84:	10bfffc4 	addi	r2,r2,-1
  81df88:	2085883a 	add	r2,r4,r2
  81df8c:	1085883a 	add	r2,r2,r2
  81df90:	1085883a 	add	r2,r2,r2
  81df94:	1009883a 	mov	r4,r2
  81df98:	e0bffe17 	ldw	r2,-8(fp)
  81df9c:	1105883a 	add	r2,r2,r4
  81dfa0:	10800017 	ldw	r2,0(r2)
  81dfa4:	18800015 	stw	r2,0(r3)
  81dfa8:	e0bff817 	ldw	r2,-32(fp)
  81dfac:	10800044 	addi	r2,r2,1
  81dfb0:	e0bff815 	stw	r2,-32(fp)
  81dfb4:	e0bffd17 	ldw	r2,-12(fp)
  81dfb8:	1085883a 	add	r2,r2,r2
  81dfbc:	1007883a 	mov	r3,r2
  81dfc0:	e0bff817 	ldw	r2,-32(fp)
  81dfc4:	10ffe516 	blt	r2,r3,81df5c <__alt_mem_epcs_flash_controller_0+0xff814f5c>
  81dfc8:	e0bff717 	ldw	r2,-36(fp)
  81dfcc:	10800044 	addi	r2,r2,1
  81dfd0:	e0bff715 	stw	r2,-36(fp)
  81dfd4:	e0bffa17 	ldw	r2,-24(fp)
  81dfd8:	10801604 	addi	r2,r2,88
  81dfdc:	e0bffa15 	stw	r2,-24(fp)
  81dfe0:	e0bfff17 	ldw	r2,-4(fp)
  81dfe4:	10800917 	ldw	r2,36(r2)
  81dfe8:	e0fff717 	ldw	r3,-36(fp)
  81dfec:	18bfa716 	blt	r3,r2,81de8c <__alt_mem_epcs_flash_controller_0+0xff814e8c>
  81dff0:	0001883a 	nop
  81dff4:	e037883a 	mov	sp,fp
  81dff8:	dfc00117 	ldw	ra,4(sp)
  81dffc:	df000017 	ldw	fp,0(sp)
  81e000:	dec00204 	addi	sp,sp,8
  81e004:	f800283a 	ret

0081e008 <start_pass_main>:
  81e008:	defffb04 	addi	sp,sp,-20
  81e00c:	dfc00415 	stw	ra,16(sp)
  81e010:	df000315 	stw	fp,12(sp)
  81e014:	df000304 	addi	fp,sp,12
  81e018:	e13ffe15 	stw	r4,-8(fp)
  81e01c:	e17fff15 	stw	r5,-4(fp)
  81e020:	e0bffe17 	ldw	r2,-8(fp)
  81e024:	10807017 	ldw	r2,448(r2)
  81e028:	e0bffd15 	stw	r2,-12(fp)
  81e02c:	e0bfff17 	ldw	r2,-4(fp)
  81e030:	10000326 	beq	r2,zero,81e040 <start_pass_main+0x38>
  81e034:	108000a0 	cmpeqi	r2,r2,2
  81e038:	10001b1e 	bne	r2,zero,81e0a8 <start_pass_main+0xa0>
  81e03c:	00001f06 	br	81e0bc <start_pass_main+0xb4>
  81e040:	e0bffe17 	ldw	r2,-8(fp)
  81e044:	10807717 	ldw	r2,476(r2)
  81e048:	10800217 	ldw	r2,8(r2)
  81e04c:	10000d26 	beq	r2,zero,81e084 <start_pass_main+0x7c>
  81e050:	e0fffd17 	ldw	r3,-12(fp)
  81e054:	008020b4 	movhi	r2,130
  81e058:	10b87d04 	addi	r2,r2,-7692
  81e05c:	18800115 	stw	r2,4(r3)
  81e060:	e13ffe17 	ldw	r4,-8(fp)
  81e064:	081d8e80 	call	81d8e8 <make_funny_pointers>
  81e068:	e0bffd17 	ldw	r2,-12(fp)
  81e06c:	10001015 	stw	zero,64(r2)
  81e070:	e0bffd17 	ldw	r2,-12(fp)
  81e074:	10001115 	stw	zero,68(r2)
  81e078:	e0bffd17 	ldw	r2,-12(fp)
  81e07c:	10001315 	stw	zero,76(r2)
  81e080:	00000406 	br	81e094 <start_pass_main+0x8c>
  81e084:	e0fffd17 	ldw	r3,-12(fp)
  81e088:	008020b4 	movhi	r2,130
  81e08c:	10b83f04 	addi	r2,r2,-7940
  81e090:	18800115 	stw	r2,4(r3)
  81e094:	e0bffd17 	ldw	r2,-12(fp)
  81e098:	10000c15 	stw	zero,48(r2)
  81e09c:	e0bffd17 	ldw	r2,-12(fp)
  81e0a0:	10000d15 	stw	zero,52(r2)
  81e0a4:	00000f06 	br	81e0e4 <start_pass_main+0xdc>
  81e0a8:	e0fffd17 	ldw	r3,-12(fp)
  81e0ac:	008020b4 	movhi	r2,130
  81e0b0:	10b92904 	addi	r2,r2,-7004
  81e0b4:	18800115 	stw	r2,4(r3)
  81e0b8:	00000a06 	br	81e0e4 <start_pass_main+0xdc>
  81e0bc:	e0bffe17 	ldw	r2,-8(fp)
  81e0c0:	10800017 	ldw	r2,0(r2)
  81e0c4:	00c000c4 	movi	r3,3
  81e0c8:	10c00515 	stw	r3,20(r2)
  81e0cc:	e0bffe17 	ldw	r2,-8(fp)
  81e0d0:	10800017 	ldw	r2,0(r2)
  81e0d4:	10800017 	ldw	r2,0(r2)
  81e0d8:	e13ffe17 	ldw	r4,-8(fp)
  81e0dc:	103ee83a 	callr	r2
  81e0e0:	0001883a 	nop
  81e0e4:	0001883a 	nop
  81e0e8:	e037883a 	mov	sp,fp
  81e0ec:	dfc00117 	ldw	ra,4(sp)
  81e0f0:	df000017 	ldw	fp,0(sp)
  81e0f4:	dec00204 	addi	sp,sp,8
  81e0f8:	f800283a 	ret

0081e0fc <process_data_simple_main>:
  81e0fc:	defff504 	addi	sp,sp,-44
  81e100:	dfc00a15 	stw	ra,40(sp)
  81e104:	df000915 	stw	fp,36(sp)
  81e108:	df000904 	addi	fp,sp,36
  81e10c:	e13ffc15 	stw	r4,-16(fp)
  81e110:	e17ffd15 	stw	r5,-12(fp)
  81e114:	e1bffe15 	stw	r6,-8(fp)
  81e118:	e1ffff15 	stw	r7,-4(fp)
  81e11c:	e0bffc17 	ldw	r2,-16(fp)
  81e120:	10807017 	ldw	r2,448(r2)
  81e124:	e0bffa15 	stw	r2,-24(fp)
  81e128:	e0bffa17 	ldw	r2,-24(fp)
  81e12c:	10800c17 	ldw	r2,48(r2)
  81e130:	10000c1e 	bne	r2,zero,81e164 <process_data_simple_main+0x68>
  81e134:	e0bffc17 	ldw	r2,-16(fp)
  81e138:	10807117 	ldw	r2,452(r2)
  81e13c:	10800317 	ldw	r2,12(r2)
  81e140:	e0fffa17 	ldw	r3,-24(fp)
  81e144:	18c00204 	addi	r3,r3,8
  81e148:	180b883a 	mov	r5,r3
  81e14c:	e13ffc17 	ldw	r4,-16(fp)
  81e150:	103ee83a 	callr	r2
  81e154:	10002126 	beq	r2,zero,81e1dc <process_data_simple_main+0xe0>
  81e158:	e0bffa17 	ldw	r2,-24(fp)
  81e15c:	00c00044 	movi	r3,1
  81e160:	10c00c15 	stw	r3,48(r2)
  81e164:	e0bffc17 	ldw	r2,-16(fp)
  81e168:	10805217 	ldw	r2,328(r2)
  81e16c:	e0bffb15 	stw	r2,-20(fp)
  81e170:	e0bffc17 	ldw	r2,-16(fp)
  81e174:	10807217 	ldw	r2,456(r2)
  81e178:	10800117 	ldw	r2,4(r2)
  81e17c:	e0fffa17 	ldw	r3,-24(fp)
  81e180:	19000204 	addi	r4,r3,8
  81e184:	e0fffa17 	ldw	r3,-24(fp)
  81e188:	19400d04 	addi	r5,r3,52
  81e18c:	e0ffff17 	ldw	r3,-4(fp)
  81e190:	d8c00215 	stw	r3,8(sp)
  81e194:	e0fffe17 	ldw	r3,-8(fp)
  81e198:	d8c00115 	stw	r3,4(sp)
  81e19c:	e0fffd17 	ldw	r3,-12(fp)
  81e1a0:	d8c00015 	stw	r3,0(sp)
  81e1a4:	e1fffb17 	ldw	r7,-20(fp)
  81e1a8:	280d883a 	mov	r6,r5
  81e1ac:	200b883a 	mov	r5,r4
  81e1b0:	e13ffc17 	ldw	r4,-16(fp)
  81e1b4:	103ee83a 	callr	r2
  81e1b8:	e0bffa17 	ldw	r2,-24(fp)
  81e1bc:	10c00d17 	ldw	r3,52(r2)
  81e1c0:	e0bffb17 	ldw	r2,-20(fp)
  81e1c4:	18800636 	bltu	r3,r2,81e1e0 <process_data_simple_main+0xe4>
  81e1c8:	e0bffa17 	ldw	r2,-24(fp)
  81e1cc:	10000c15 	stw	zero,48(r2)
  81e1d0:	e0bffa17 	ldw	r2,-24(fp)
  81e1d4:	10000d15 	stw	zero,52(r2)
  81e1d8:	00000106 	br	81e1e0 <process_data_simple_main+0xe4>
  81e1dc:	0001883a 	nop
  81e1e0:	e037883a 	mov	sp,fp
  81e1e4:	dfc00117 	ldw	ra,4(sp)
  81e1e8:	df000017 	ldw	fp,0(sp)
  81e1ec:	dec00204 	addi	sp,sp,8
  81e1f0:	f800283a 	ret

0081e1f4 <process_data_context_main>:
  81e1f4:	defff604 	addi	sp,sp,-40
  81e1f8:	dfc00915 	stw	ra,36(sp)
  81e1fc:	df000815 	stw	fp,32(sp)
  81e200:	df000804 	addi	fp,sp,32
  81e204:	e13ffc15 	stw	r4,-16(fp)
  81e208:	e17ffd15 	stw	r5,-12(fp)
  81e20c:	e1bffe15 	stw	r6,-8(fp)
  81e210:	e1ffff15 	stw	r7,-4(fp)
  81e214:	e0bffc17 	ldw	r2,-16(fp)
  81e218:	10807017 	ldw	r2,448(r2)
  81e21c:	e0bffb15 	stw	r2,-20(fp)
  81e220:	e0bffb17 	ldw	r2,-20(fp)
  81e224:	10800c17 	ldw	r2,48(r2)
  81e228:	1000171e 	bne	r2,zero,81e288 <process_data_context_main+0x94>
  81e22c:	e0bffc17 	ldw	r2,-16(fp)
  81e230:	10807117 	ldw	r2,452(r2)
  81e234:	10c00317 	ldw	r3,12(r2)
  81e238:	e0bffb17 	ldw	r2,-20(fp)
  81e23c:	10801017 	ldw	r2,64(r2)
  81e240:	e13ffb17 	ldw	r4,-20(fp)
  81e244:	10800384 	addi	r2,r2,14
  81e248:	1085883a 	add	r2,r2,r2
  81e24c:	1085883a 	add	r2,r2,r2
  81e250:	2085883a 	add	r2,r4,r2
  81e254:	10800017 	ldw	r2,0(r2)
  81e258:	100b883a 	mov	r5,r2
  81e25c:	e13ffc17 	ldw	r4,-16(fp)
  81e260:	183ee83a 	callr	r3
  81e264:	10008326 	beq	r2,zero,81e474 <process_data_context_main+0x280>
  81e268:	e0bffb17 	ldw	r2,-20(fp)
  81e26c:	00c00044 	movi	r3,1
  81e270:	10c00c15 	stw	r3,48(r2)
  81e274:	e0bffb17 	ldw	r2,-20(fp)
  81e278:	10801317 	ldw	r2,76(r2)
  81e27c:	10c00044 	addi	r3,r2,1
  81e280:	e0bffb17 	ldw	r2,-20(fp)
  81e284:	10c01315 	stw	r3,76(r2)
  81e288:	e0bffb17 	ldw	r2,-20(fp)
  81e28c:	10801117 	ldw	r2,68(r2)
  81e290:	10c00060 	cmpeqi	r3,r2,1
  81e294:	18003b1e 	bne	r3,zero,81e384 <process_data_context_main+0x190>
  81e298:	10c000a0 	cmpeqi	r3,r2,2
  81e29c:	1800021e 	bne	r3,zero,81e2a8 <process_data_context_main+0xb4>
  81e2a0:	10002626 	beq	r2,zero,81e33c <process_data_context_main+0x148>
  81e2a4:	00007a06 	br	81e490 <process_data_context_main+0x29c>
  81e2a8:	e0bffc17 	ldw	r2,-16(fp)
  81e2ac:	10807217 	ldw	r2,456(r2)
  81e2b0:	10c00117 	ldw	r3,4(r2)
  81e2b4:	e0bffb17 	ldw	r2,-20(fp)
  81e2b8:	10801017 	ldw	r2,64(r2)
  81e2bc:	e13ffb17 	ldw	r4,-20(fp)
  81e2c0:	10800384 	addi	r2,r2,14
  81e2c4:	1085883a 	add	r2,r2,r2
  81e2c8:	1085883a 	add	r2,r2,r2
  81e2cc:	2085883a 	add	r2,r4,r2
  81e2d0:	11000017 	ldw	r4,0(r2)
  81e2d4:	e0bffb17 	ldw	r2,-20(fp)
  81e2d8:	11400d04 	addi	r5,r2,52
  81e2dc:	e0bffb17 	ldw	r2,-20(fp)
  81e2e0:	11801217 	ldw	r6,72(r2)
  81e2e4:	e0bfff17 	ldw	r2,-4(fp)
  81e2e8:	d8800215 	stw	r2,8(sp)
  81e2ec:	e0bffe17 	ldw	r2,-8(fp)
  81e2f0:	d8800115 	stw	r2,4(sp)
  81e2f4:	e0bffd17 	ldw	r2,-12(fp)
  81e2f8:	d8800015 	stw	r2,0(sp)
  81e2fc:	300f883a 	mov	r7,r6
  81e300:	280d883a 	mov	r6,r5
  81e304:	200b883a 	mov	r5,r4
  81e308:	e13ffc17 	ldw	r4,-16(fp)
  81e30c:	183ee83a 	callr	r3
  81e310:	e0bffb17 	ldw	r2,-20(fp)
  81e314:	10c00d17 	ldw	r3,52(r2)
  81e318:	e0bffb17 	ldw	r2,-20(fp)
  81e31c:	10801217 	ldw	r2,72(r2)
  81e320:	18805636 	bltu	r3,r2,81e47c <process_data_context_main+0x288>
  81e324:	e0bffb17 	ldw	r2,-20(fp)
  81e328:	10001115 	stw	zero,68(r2)
  81e32c:	e0bffe17 	ldw	r2,-8(fp)
  81e330:	10c00017 	ldw	r3,0(r2)
  81e334:	e0bfff17 	ldw	r2,-4(fp)
  81e338:	1880522e 	bgeu	r3,r2,81e484 <process_data_context_main+0x290>
  81e33c:	e0bffb17 	ldw	r2,-20(fp)
  81e340:	10000d15 	stw	zero,52(r2)
  81e344:	e0bffc17 	ldw	r2,-16(fp)
  81e348:	10805217 	ldw	r2,328(r2)
  81e34c:	10bfffc4 	addi	r2,r2,-1
  81e350:	1007883a 	mov	r3,r2
  81e354:	e0bffb17 	ldw	r2,-20(fp)
  81e358:	10c01215 	stw	r3,72(r2)
  81e35c:	e0bffb17 	ldw	r2,-20(fp)
  81e360:	10c01317 	ldw	r3,76(r2)
  81e364:	e0bffc17 	ldw	r2,-16(fp)
  81e368:	10805317 	ldw	r2,332(r2)
  81e36c:	1880021e 	bne	r3,r2,81e378 <process_data_context_main+0x184>
  81e370:	e13ffc17 	ldw	r4,-16(fp)
  81e374:	081de580 	call	81de58 <set_bottom_pointers>
  81e378:	e0bffb17 	ldw	r2,-20(fp)
  81e37c:	00c00044 	movi	r3,1
  81e380:	10c01115 	stw	r3,68(r2)
  81e384:	e0bffc17 	ldw	r2,-16(fp)
  81e388:	10807217 	ldw	r2,456(r2)
  81e38c:	10c00117 	ldw	r3,4(r2)
  81e390:	e0bffb17 	ldw	r2,-20(fp)
  81e394:	10801017 	ldw	r2,64(r2)
  81e398:	e13ffb17 	ldw	r4,-20(fp)
  81e39c:	10800384 	addi	r2,r2,14
  81e3a0:	1085883a 	add	r2,r2,r2
  81e3a4:	1085883a 	add	r2,r2,r2
  81e3a8:	2085883a 	add	r2,r4,r2
  81e3ac:	11000017 	ldw	r4,0(r2)
  81e3b0:	e0bffb17 	ldw	r2,-20(fp)
  81e3b4:	11400d04 	addi	r5,r2,52
  81e3b8:	e0bffb17 	ldw	r2,-20(fp)
  81e3bc:	11801217 	ldw	r6,72(r2)
  81e3c0:	e0bfff17 	ldw	r2,-4(fp)
  81e3c4:	d8800215 	stw	r2,8(sp)
  81e3c8:	e0bffe17 	ldw	r2,-8(fp)
  81e3cc:	d8800115 	stw	r2,4(sp)
  81e3d0:	e0bffd17 	ldw	r2,-12(fp)
  81e3d4:	d8800015 	stw	r2,0(sp)
  81e3d8:	300f883a 	mov	r7,r6
  81e3dc:	280d883a 	mov	r6,r5
  81e3e0:	200b883a 	mov	r5,r4
  81e3e4:	e13ffc17 	ldw	r4,-16(fp)
  81e3e8:	183ee83a 	callr	r3
  81e3ec:	e0bffb17 	ldw	r2,-20(fp)
  81e3f0:	10c00d17 	ldw	r3,52(r2)
  81e3f4:	e0bffb17 	ldw	r2,-20(fp)
  81e3f8:	10801217 	ldw	r2,72(r2)
  81e3fc:	18802336 	bltu	r3,r2,81e48c <process_data_context_main+0x298>
  81e400:	e0bffb17 	ldw	r2,-20(fp)
  81e404:	10801317 	ldw	r2,76(r2)
  81e408:	10800058 	cmpnei	r2,r2,1
  81e40c:	1000021e 	bne	r2,zero,81e418 <process_data_context_main+0x224>
  81e410:	e13ffc17 	ldw	r4,-16(fp)
  81e414:	081dbd80 	call	81dbd8 <set_wraparound_pointers>
  81e418:	e0bffb17 	ldw	r2,-20(fp)
  81e41c:	10801017 	ldw	r2,64(r2)
  81e420:	10c0005c 	xori	r3,r2,1
  81e424:	e0bffb17 	ldw	r2,-20(fp)
  81e428:	10c01015 	stw	r3,64(r2)
  81e42c:	e0bffb17 	ldw	r2,-20(fp)
  81e430:	10000c15 	stw	zero,48(r2)
  81e434:	e0bffc17 	ldw	r2,-16(fp)
  81e438:	10805217 	ldw	r2,328(r2)
  81e43c:	10800044 	addi	r2,r2,1
  81e440:	1007883a 	mov	r3,r2
  81e444:	e0bffb17 	ldw	r2,-20(fp)
  81e448:	10c00d15 	stw	r3,52(r2)
  81e44c:	e0bffc17 	ldw	r2,-16(fp)
  81e450:	10805217 	ldw	r2,328(r2)
  81e454:	10800084 	addi	r2,r2,2
  81e458:	1007883a 	mov	r3,r2
  81e45c:	e0bffb17 	ldw	r2,-20(fp)
  81e460:	10c01215 	stw	r3,72(r2)
  81e464:	e0bffb17 	ldw	r2,-20(fp)
  81e468:	00c00084 	movi	r3,2
  81e46c:	10c01115 	stw	r3,68(r2)
  81e470:	00000706 	br	81e490 <process_data_context_main+0x29c>
  81e474:	0001883a 	nop
  81e478:	00000506 	br	81e490 <process_data_context_main+0x29c>
  81e47c:	0001883a 	nop
  81e480:	00000306 	br	81e490 <process_data_context_main+0x29c>
  81e484:	0001883a 	nop
  81e488:	00000106 	br	81e490 <process_data_context_main+0x29c>
  81e48c:	0001883a 	nop
  81e490:	e037883a 	mov	sp,fp
  81e494:	dfc00117 	ldw	ra,4(sp)
  81e498:	df000017 	ldw	fp,0(sp)
  81e49c:	dec00204 	addi	sp,sp,8
  81e4a0:	f800283a 	ret

0081e4a4 <process_data_crank_post>:
  81e4a4:	defff704 	addi	sp,sp,-36
  81e4a8:	dfc00815 	stw	ra,32(sp)
  81e4ac:	df000715 	stw	fp,28(sp)
  81e4b0:	df000704 	addi	fp,sp,28
  81e4b4:	e13ffc15 	stw	r4,-16(fp)
  81e4b8:	e17ffd15 	stw	r5,-12(fp)
  81e4bc:	e1bffe15 	stw	r6,-8(fp)
  81e4c0:	e1ffff15 	stw	r7,-4(fp)
  81e4c4:	e0bffc17 	ldw	r2,-16(fp)
  81e4c8:	10807217 	ldw	r2,456(r2)
  81e4cc:	10800117 	ldw	r2,4(r2)
  81e4d0:	e0ffff17 	ldw	r3,-4(fp)
  81e4d4:	d8c00215 	stw	r3,8(sp)
  81e4d8:	e0fffe17 	ldw	r3,-8(fp)
  81e4dc:	d8c00115 	stw	r3,4(sp)
  81e4e0:	e0fffd17 	ldw	r3,-12(fp)
  81e4e4:	d8c00015 	stw	r3,0(sp)
  81e4e8:	000f883a 	mov	r7,zero
  81e4ec:	000d883a 	mov	r6,zero
  81e4f0:	000b883a 	mov	r5,zero
  81e4f4:	e13ffc17 	ldw	r4,-16(fp)
  81e4f8:	103ee83a 	callr	r2
  81e4fc:	0001883a 	nop
  81e500:	e037883a 	mov	sp,fp
  81e504:	dfc00117 	ldw	ra,4(sp)
  81e508:	df000017 	ldw	fp,0(sp)
  81e50c:	dec00204 	addi	sp,sp,8
  81e510:	f800283a 	ret

0081e514 <jinit_d_main_controller>:
  81e514:	defff504 	addi	sp,sp,-44
  81e518:	dfc00a15 	stw	ra,40(sp)
  81e51c:	df000915 	stw	fp,36(sp)
  81e520:	dc400815 	stw	r17,32(sp)
  81e524:	dc000715 	stw	r16,28(sp)
  81e528:	df000904 	addi	fp,sp,36
  81e52c:	e13ffc15 	stw	r4,-16(fp)
  81e530:	e17ffd15 	stw	r5,-12(fp)
  81e534:	e0bffc17 	ldw	r2,-16(fp)
  81e538:	10800117 	ldw	r2,4(r2)
  81e53c:	10800017 	ldw	r2,0(r2)
  81e540:	01801404 	movi	r6,80
  81e544:	01400044 	movi	r5,1
  81e548:	e13ffc17 	ldw	r4,-16(fp)
  81e54c:	103ee83a 	callr	r2
  81e550:	e0bffa15 	stw	r2,-24(fp)
  81e554:	e0fffa17 	ldw	r3,-24(fp)
  81e558:	e0bffc17 	ldw	r2,-16(fp)
  81e55c:	10c07015 	stw	r3,448(r2)
  81e560:	e0fffa17 	ldw	r3,-24(fp)
  81e564:	008020b4 	movhi	r2,130
  81e568:	10b80204 	addi	r2,r2,-8184
  81e56c:	18800015 	stw	r2,0(r3)
  81e570:	e0bffd17 	ldw	r2,-12(fp)
  81e574:	10000926 	beq	r2,zero,81e59c <jinit_d_main_controller+0x88>
  81e578:	e0bffc17 	ldw	r2,-16(fp)
  81e57c:	10800017 	ldw	r2,0(r2)
  81e580:	00c000c4 	movi	r3,3
  81e584:	10c00515 	stw	r3,20(r2)
  81e588:	e0bffc17 	ldw	r2,-16(fp)
  81e58c:	10800017 	ldw	r2,0(r2)
  81e590:	10800017 	ldw	r2,0(r2)
  81e594:	e13ffc17 	ldw	r4,-16(fp)
  81e598:	103ee83a 	callr	r2
  81e59c:	e0bffc17 	ldw	r2,-16(fp)
  81e5a0:	10807717 	ldw	r2,476(r2)
  81e5a4:	10800217 	ldw	r2,8(r2)
  81e5a8:	10001426 	beq	r2,zero,81e5fc <jinit_d_main_controller+0xe8>
  81e5ac:	e0bffc17 	ldw	r2,-16(fp)
  81e5b0:	10805217 	ldw	r2,328(r2)
  81e5b4:	10800088 	cmpgei	r2,r2,2
  81e5b8:	1000091e 	bne	r2,zero,81e5e0 <jinit_d_main_controller+0xcc>
  81e5bc:	e0bffc17 	ldw	r2,-16(fp)
  81e5c0:	10800017 	ldw	r2,0(r2)
  81e5c4:	00c00c04 	movi	r3,48
  81e5c8:	10c00515 	stw	r3,20(r2)
  81e5cc:	e0bffc17 	ldw	r2,-16(fp)
  81e5d0:	10800017 	ldw	r2,0(r2)
  81e5d4:	10800017 	ldw	r2,0(r2)
  81e5d8:	e13ffc17 	ldw	r4,-16(fp)
  81e5dc:	103ee83a 	callr	r2
  81e5e0:	e13ffc17 	ldw	r4,-16(fp)
  81e5e4:	081d7100 	call	81d710 <alloc_funny_pointers>
  81e5e8:	e0bffc17 	ldw	r2,-16(fp)
  81e5ec:	10805217 	ldw	r2,328(r2)
  81e5f0:	10800084 	addi	r2,r2,2
  81e5f4:	e0bff815 	stw	r2,-32(fp)
  81e5f8:	00000306 	br	81e608 <jinit_d_main_controller+0xf4>
  81e5fc:	e0bffc17 	ldw	r2,-16(fp)
  81e600:	10805217 	ldw	r2,328(r2)
  81e604:	e0bff815 	stw	r2,-32(fp)
  81e608:	e03ff715 	stw	zero,-36(fp)
  81e60c:	e0bffc17 	ldw	r2,-16(fp)
  81e610:	10803617 	ldw	r2,216(r2)
  81e614:	e0bff915 	stw	r2,-28(fp)
  81e618:	00002f06 	br	81e6d8 <jinit_d_main_controller+0x1c4>
  81e61c:	e0bff917 	ldw	r2,-28(fp)
  81e620:	10c00317 	ldw	r3,12(r2)
  81e624:	e0bff917 	ldw	r2,-28(fp)
  81e628:	10800a17 	ldw	r2,40(r2)
  81e62c:	100b883a 	mov	r5,r2
  81e630:	1809883a 	mov	r4,r3
  81e634:	08305040 	call	830504 <__mulsi3>
  81e638:	1007883a 	mov	r3,r2
  81e63c:	e0bffc17 	ldw	r2,-16(fp)
  81e640:	10805217 	ldw	r2,328(r2)
  81e644:	100b883a 	mov	r5,r2
  81e648:	1809883a 	mov	r4,r3
  81e64c:	08303500 	call	830350 <__divsi3>
  81e650:	e0bffb15 	stw	r2,-20(fp)
  81e654:	e0bffc17 	ldw	r2,-16(fp)
  81e658:	10800117 	ldw	r2,4(r2)
  81e65c:	14000217 	ldw	r16,8(r2)
  81e660:	e0bff917 	ldw	r2,-28(fp)
  81e664:	10c00717 	ldw	r3,28(r2)
  81e668:	e0bff917 	ldw	r2,-28(fp)
  81e66c:	10800917 	ldw	r2,36(r2)
  81e670:	100b883a 	mov	r5,r2
  81e674:	1809883a 	mov	r4,r3
  81e678:	08305040 	call	830504 <__mulsi3>
  81e67c:	1023883a 	mov	r17,r2
  81e680:	e17ff817 	ldw	r5,-32(fp)
  81e684:	e13ffb17 	ldw	r4,-20(fp)
  81e688:	08305040 	call	830504 <__mulsi3>
  81e68c:	100f883a 	mov	r7,r2
  81e690:	880d883a 	mov	r6,r17
  81e694:	01400044 	movi	r5,1
  81e698:	e13ffc17 	ldw	r4,-16(fp)
  81e69c:	803ee83a 	callr	r16
  81e6a0:	1009883a 	mov	r4,r2
  81e6a4:	e0fffa17 	ldw	r3,-24(fp)
  81e6a8:	e0bff717 	ldw	r2,-36(fp)
  81e6ac:	10800084 	addi	r2,r2,2
  81e6b0:	1085883a 	add	r2,r2,r2
  81e6b4:	1085883a 	add	r2,r2,r2
  81e6b8:	1885883a 	add	r2,r3,r2
  81e6bc:	11000015 	stw	r4,0(r2)
  81e6c0:	e0bff717 	ldw	r2,-36(fp)
  81e6c4:	10800044 	addi	r2,r2,1
  81e6c8:	e0bff715 	stw	r2,-36(fp)
  81e6cc:	e0bff917 	ldw	r2,-28(fp)
  81e6d0:	10801604 	addi	r2,r2,88
  81e6d4:	e0bff915 	stw	r2,-28(fp)
  81e6d8:	e0bffc17 	ldw	r2,-16(fp)
  81e6dc:	10800917 	ldw	r2,36(r2)
  81e6e0:	e0fff717 	ldw	r3,-36(fp)
  81e6e4:	18bfcd16 	blt	r3,r2,81e61c <__alt_mem_epcs_flash_controller_0+0xff81561c>
  81e6e8:	0001883a 	nop
  81e6ec:	e6fffe04 	addi	sp,fp,-8
  81e6f0:	dfc00317 	ldw	ra,12(sp)
  81e6f4:	df000217 	ldw	fp,8(sp)
  81e6f8:	dc400117 	ldw	r17,4(sp)
  81e6fc:	dc000017 	ldw	r16,0(sp)
  81e700:	dec00404 	addi	sp,sp,16
  81e704:	f800283a 	ret

0081e708 <jpeg_idct_float>:
  81e708:	deffa104 	addi	sp,sp,-380
  81e70c:	dfc05e15 	stw	ra,376(sp)
  81e710:	df005d15 	stw	fp,372(sp)
  81e714:	dc005c15 	stw	r16,368(sp)
  81e718:	df005d04 	addi	fp,sp,372
  81e71c:	e13ffb15 	stw	r4,-20(fp)
  81e720:	e17ffc15 	stw	r5,-16(fp)
  81e724:	e1bffd15 	stw	r6,-12(fp)
  81e728:	e1fffe15 	stw	r7,-8(fp)
  81e72c:	e0bffb17 	ldw	r2,-20(fp)
  81e730:	10805417 	ldw	r2,336(r2)
  81e734:	10bfa004 	addi	r2,r2,-384
  81e738:	e0bfa715 	stw	r2,-356(fp)
  81e73c:	e0bffd17 	ldw	r2,-12(fp)
  81e740:	e0bfa315 	stw	r2,-372(fp)
  81e744:	e0bffc17 	ldw	r2,-16(fp)
  81e748:	10801517 	ldw	r2,84(r2)
  81e74c:	e0bfa415 	stw	r2,-368(fp)
  81e750:	e0bfbb04 	addi	r2,fp,-276
  81e754:	e0bfa515 	stw	r2,-364(fp)
  81e758:	00800204 	movi	r2,8
  81e75c:	e0bfa615 	stw	r2,-360(fp)
  81e760:	0001b806 	br	81ee44 <jpeg_idct_float+0x73c>
  81e764:	e0bfa317 	ldw	r2,-372(fp)
  81e768:	10800404 	addi	r2,r2,16
  81e76c:	1080000b 	ldhu	r2,0(r2)
  81e770:	10bfffcc 	andi	r2,r2,65535
  81e774:	10a0001c 	xori	r2,r2,32768
  81e778:	10a00004 	addi	r2,r2,-32768
  81e77c:	1000611e 	bne	r2,zero,81e904 <jpeg_idct_float+0x1fc>
  81e780:	e0bfa317 	ldw	r2,-372(fp)
  81e784:	10800804 	addi	r2,r2,32
  81e788:	1080000b 	ldhu	r2,0(r2)
  81e78c:	10bfffcc 	andi	r2,r2,65535
  81e790:	10a0001c 	xori	r2,r2,32768
  81e794:	10a00004 	addi	r2,r2,-32768
  81e798:	10005a1e 	bne	r2,zero,81e904 <jpeg_idct_float+0x1fc>
  81e79c:	e0bfa317 	ldw	r2,-372(fp)
  81e7a0:	10800c04 	addi	r2,r2,48
  81e7a4:	1080000b 	ldhu	r2,0(r2)
  81e7a8:	10bfffcc 	andi	r2,r2,65535
  81e7ac:	10a0001c 	xori	r2,r2,32768
  81e7b0:	10a00004 	addi	r2,r2,-32768
  81e7b4:	1000531e 	bne	r2,zero,81e904 <jpeg_idct_float+0x1fc>
  81e7b8:	e0bfa317 	ldw	r2,-372(fp)
  81e7bc:	10801004 	addi	r2,r2,64
  81e7c0:	1080000b 	ldhu	r2,0(r2)
  81e7c4:	10bfffcc 	andi	r2,r2,65535
  81e7c8:	10a0001c 	xori	r2,r2,32768
  81e7cc:	10a00004 	addi	r2,r2,-32768
  81e7d0:	10004c1e 	bne	r2,zero,81e904 <jpeg_idct_float+0x1fc>
  81e7d4:	e0bfa317 	ldw	r2,-372(fp)
  81e7d8:	10801404 	addi	r2,r2,80
  81e7dc:	1080000b 	ldhu	r2,0(r2)
  81e7e0:	10bfffcc 	andi	r2,r2,65535
  81e7e4:	10a0001c 	xori	r2,r2,32768
  81e7e8:	10a00004 	addi	r2,r2,-32768
  81e7ec:	1000451e 	bne	r2,zero,81e904 <jpeg_idct_float+0x1fc>
  81e7f0:	e0bfa317 	ldw	r2,-372(fp)
  81e7f4:	10801804 	addi	r2,r2,96
  81e7f8:	1080000b 	ldhu	r2,0(r2)
  81e7fc:	10bfffcc 	andi	r2,r2,65535
  81e800:	10a0001c 	xori	r2,r2,32768
  81e804:	10a00004 	addi	r2,r2,-32768
  81e808:	10003e1e 	bne	r2,zero,81e904 <jpeg_idct_float+0x1fc>
  81e80c:	e0bfa317 	ldw	r2,-372(fp)
  81e810:	10801c04 	addi	r2,r2,112
  81e814:	1080000b 	ldhu	r2,0(r2)
  81e818:	10bfffcc 	andi	r2,r2,65535
  81e81c:	10a0001c 	xori	r2,r2,32768
  81e820:	10a00004 	addi	r2,r2,-32768
  81e824:	1000371e 	bne	r2,zero,81e904 <jpeg_idct_float+0x1fc>
  81e828:	e0bfa317 	ldw	r2,-372(fp)
  81e82c:	1080000b 	ldhu	r2,0(r2)
  81e830:	10bfffcc 	andi	r2,r2,65535
  81e834:	10a0001c 	xori	r2,r2,32768
  81e838:	10a00004 	addi	r2,r2,-32768
  81e83c:	1009883a 	mov	r4,r2
  81e840:	08313780 	call	831378 <__floatsisf>
  81e844:	1009883a 	mov	r4,r2
  81e848:	e0bfa417 	ldw	r2,-368(fp)
  81e84c:	10c00017 	ldw	r3,0(r2)
  81e850:	180b883a 	mov	r5,r3
  81e854:	08309f40 	call	8309f4 <__mulsf3>
  81e858:	1007883a 	mov	r3,r2
  81e85c:	e0ffa815 	stw	r3,-352(fp)
  81e860:	e0bfa517 	ldw	r2,-364(fp)
  81e864:	e0ffa817 	ldw	r3,-352(fp)
  81e868:	10c00015 	stw	r3,0(r2)
  81e86c:	e0bfa517 	ldw	r2,-364(fp)
  81e870:	10800804 	addi	r2,r2,32
  81e874:	e0ffa817 	ldw	r3,-352(fp)
  81e878:	10c00015 	stw	r3,0(r2)
  81e87c:	e0bfa517 	ldw	r2,-364(fp)
  81e880:	10801004 	addi	r2,r2,64
  81e884:	e0ffa817 	ldw	r3,-352(fp)
  81e888:	10c00015 	stw	r3,0(r2)
  81e88c:	e0bfa517 	ldw	r2,-364(fp)
  81e890:	10801804 	addi	r2,r2,96
  81e894:	e0ffa817 	ldw	r3,-352(fp)
  81e898:	10c00015 	stw	r3,0(r2)
  81e89c:	e0bfa517 	ldw	r2,-364(fp)
  81e8a0:	10802004 	addi	r2,r2,128
  81e8a4:	e0ffa817 	ldw	r3,-352(fp)
  81e8a8:	10c00015 	stw	r3,0(r2)
  81e8ac:	e0bfa517 	ldw	r2,-364(fp)
  81e8b0:	10802804 	addi	r2,r2,160
  81e8b4:	e0ffa817 	ldw	r3,-352(fp)
  81e8b8:	10c00015 	stw	r3,0(r2)
  81e8bc:	e0bfa517 	ldw	r2,-364(fp)
  81e8c0:	10803004 	addi	r2,r2,192
  81e8c4:	e0ffa817 	ldw	r3,-352(fp)
  81e8c8:	10c00015 	stw	r3,0(r2)
  81e8cc:	e0bfa517 	ldw	r2,-364(fp)
  81e8d0:	10803804 	addi	r2,r2,224
  81e8d4:	e0ffa817 	ldw	r3,-352(fp)
  81e8d8:	10c00015 	stw	r3,0(r2)
  81e8dc:	e0bfa317 	ldw	r2,-372(fp)
  81e8e0:	10800084 	addi	r2,r2,2
  81e8e4:	e0bfa315 	stw	r2,-372(fp)
  81e8e8:	e0bfa417 	ldw	r2,-368(fp)
  81e8ec:	10800104 	addi	r2,r2,4
  81e8f0:	e0bfa415 	stw	r2,-368(fp)
  81e8f4:	e0bfa517 	ldw	r2,-364(fp)
  81e8f8:	10800104 	addi	r2,r2,4
  81e8fc:	e0bfa515 	stw	r2,-364(fp)
  81e900:	00014d06 	br	81ee38 <jpeg_idct_float+0x730>
  81e904:	e0bfa317 	ldw	r2,-372(fp)
  81e908:	1080000b 	ldhu	r2,0(r2)
  81e90c:	10bfffcc 	andi	r2,r2,65535
  81e910:	10a0001c 	xori	r2,r2,32768
  81e914:	10a00004 	addi	r2,r2,-32768
  81e918:	1009883a 	mov	r4,r2
  81e91c:	08313780 	call	831378 <__floatsisf>
  81e920:	1009883a 	mov	r4,r2
  81e924:	e0bfa417 	ldw	r2,-368(fp)
  81e928:	10c00017 	ldw	r3,0(r2)
  81e92c:	180b883a 	mov	r5,r3
  81e930:	08309f40 	call	8309f4 <__mulsf3>
  81e934:	1007883a 	mov	r3,r2
  81e938:	e0ffa915 	stw	r3,-348(fp)
  81e93c:	e0bfa317 	ldw	r2,-372(fp)
  81e940:	10800804 	addi	r2,r2,32
  81e944:	1080000b 	ldhu	r2,0(r2)
  81e948:	10bfffcc 	andi	r2,r2,65535
  81e94c:	10a0001c 	xori	r2,r2,32768
  81e950:	10a00004 	addi	r2,r2,-32768
  81e954:	1009883a 	mov	r4,r2
  81e958:	08313780 	call	831378 <__floatsisf>
  81e95c:	1009883a 	mov	r4,r2
  81e960:	e0bfa417 	ldw	r2,-368(fp)
  81e964:	10801004 	addi	r2,r2,64
  81e968:	10c00017 	ldw	r3,0(r2)
  81e96c:	180b883a 	mov	r5,r3
  81e970:	08309f40 	call	8309f4 <__mulsf3>
  81e974:	1007883a 	mov	r3,r2
  81e978:	e0ffaa15 	stw	r3,-344(fp)
  81e97c:	e0bfa317 	ldw	r2,-372(fp)
  81e980:	10801004 	addi	r2,r2,64
  81e984:	1080000b 	ldhu	r2,0(r2)
  81e988:	10bfffcc 	andi	r2,r2,65535
  81e98c:	10a0001c 	xori	r2,r2,32768
  81e990:	10a00004 	addi	r2,r2,-32768
  81e994:	1009883a 	mov	r4,r2
  81e998:	08313780 	call	831378 <__floatsisf>
  81e99c:	1009883a 	mov	r4,r2
  81e9a0:	e0bfa417 	ldw	r2,-368(fp)
  81e9a4:	10802004 	addi	r2,r2,128
  81e9a8:	10c00017 	ldw	r3,0(r2)
  81e9ac:	180b883a 	mov	r5,r3
  81e9b0:	08309f40 	call	8309f4 <__mulsf3>
  81e9b4:	1007883a 	mov	r3,r2
  81e9b8:	e0ffab15 	stw	r3,-340(fp)
  81e9bc:	e0bfa317 	ldw	r2,-372(fp)
  81e9c0:	10801804 	addi	r2,r2,96
  81e9c4:	1080000b 	ldhu	r2,0(r2)
  81e9c8:	10bfffcc 	andi	r2,r2,65535
  81e9cc:	10a0001c 	xori	r2,r2,32768
  81e9d0:	10a00004 	addi	r2,r2,-32768
  81e9d4:	1009883a 	mov	r4,r2
  81e9d8:	08313780 	call	831378 <__floatsisf>
  81e9dc:	1009883a 	mov	r4,r2
  81e9e0:	e0bfa417 	ldw	r2,-368(fp)
  81e9e4:	10803004 	addi	r2,r2,192
  81e9e8:	10c00017 	ldw	r3,0(r2)
  81e9ec:	180b883a 	mov	r5,r3
  81e9f0:	08309f40 	call	8309f4 <__mulsf3>
  81e9f4:	1007883a 	mov	r3,r2
  81e9f8:	e0ffac15 	stw	r3,-336(fp)
  81e9fc:	e17fab17 	ldw	r5,-340(fp)
  81ea00:	e13fa917 	ldw	r4,-348(fp)
  81ea04:	083052c0 	call	83052c <__addsf3>
  81ea08:	1007883a 	mov	r3,r2
  81ea0c:	e0ffad15 	stw	r3,-332(fp)
  81ea10:	e17fab17 	ldw	r5,-340(fp)
  81ea14:	e13fa917 	ldw	r4,-348(fp)
  81ea18:	0830e240 	call	830e24 <__subsf3>
  81ea1c:	1007883a 	mov	r3,r2
  81ea20:	e0ffae15 	stw	r3,-328(fp)
  81ea24:	e17fac17 	ldw	r5,-336(fp)
  81ea28:	e13faa17 	ldw	r4,-344(fp)
  81ea2c:	083052c0 	call	83052c <__addsf3>
  81ea30:	1007883a 	mov	r3,r2
  81ea34:	e0ffaf15 	stw	r3,-324(fp)
  81ea38:	e17fac17 	ldw	r5,-336(fp)
  81ea3c:	e13faa17 	ldw	r4,-344(fp)
  81ea40:	0830e240 	call	830e24 <__subsf3>
  81ea44:	1007883a 	mov	r3,r2
  81ea48:	1805883a 	mov	r2,r3
  81ea4c:	014fed74 	movhi	r5,16309
  81ea50:	29413cc4 	addi	r5,r5,1267
  81ea54:	1009883a 	mov	r4,r2
  81ea58:	08309f40 	call	8309f4 <__mulsf3>
  81ea5c:	1007883a 	mov	r3,r2
  81ea60:	1805883a 	mov	r2,r3
  81ea64:	e17faf17 	ldw	r5,-324(fp)
  81ea68:	1009883a 	mov	r4,r2
  81ea6c:	0830e240 	call	830e24 <__subsf3>
  81ea70:	1007883a 	mov	r3,r2
  81ea74:	e0ffb015 	stw	r3,-320(fp)
  81ea78:	e17faf17 	ldw	r5,-324(fp)
  81ea7c:	e13fad17 	ldw	r4,-332(fp)
  81ea80:	083052c0 	call	83052c <__addsf3>
  81ea84:	1007883a 	mov	r3,r2
  81ea88:	e0ffa915 	stw	r3,-348(fp)
  81ea8c:	e17faf17 	ldw	r5,-324(fp)
  81ea90:	e13fad17 	ldw	r4,-332(fp)
  81ea94:	0830e240 	call	830e24 <__subsf3>
  81ea98:	1007883a 	mov	r3,r2
  81ea9c:	e0ffac15 	stw	r3,-336(fp)
  81eaa0:	e17fb017 	ldw	r5,-320(fp)
  81eaa4:	e13fae17 	ldw	r4,-328(fp)
  81eaa8:	083052c0 	call	83052c <__addsf3>
  81eaac:	1007883a 	mov	r3,r2
  81eab0:	e0ffaa15 	stw	r3,-344(fp)
  81eab4:	e17fb017 	ldw	r5,-320(fp)
  81eab8:	e13fae17 	ldw	r4,-328(fp)
  81eabc:	0830e240 	call	830e24 <__subsf3>
  81eac0:	1007883a 	mov	r3,r2
  81eac4:	e0ffab15 	stw	r3,-340(fp)
  81eac8:	e0bfa317 	ldw	r2,-372(fp)
  81eacc:	10800404 	addi	r2,r2,16
  81ead0:	1080000b 	ldhu	r2,0(r2)
  81ead4:	10bfffcc 	andi	r2,r2,65535
  81ead8:	10a0001c 	xori	r2,r2,32768
  81eadc:	10a00004 	addi	r2,r2,-32768
  81eae0:	1009883a 	mov	r4,r2
  81eae4:	08313780 	call	831378 <__floatsisf>
  81eae8:	1009883a 	mov	r4,r2
  81eaec:	e0bfa417 	ldw	r2,-368(fp)
  81eaf0:	10800804 	addi	r2,r2,32
  81eaf4:	10c00017 	ldw	r3,0(r2)
  81eaf8:	180b883a 	mov	r5,r3
  81eafc:	08309f40 	call	8309f4 <__mulsf3>
  81eb00:	1007883a 	mov	r3,r2
  81eb04:	e0ffb115 	stw	r3,-316(fp)
  81eb08:	e0bfa317 	ldw	r2,-372(fp)
  81eb0c:	10800c04 	addi	r2,r2,48
  81eb10:	1080000b 	ldhu	r2,0(r2)
  81eb14:	10bfffcc 	andi	r2,r2,65535
  81eb18:	10a0001c 	xori	r2,r2,32768
  81eb1c:	10a00004 	addi	r2,r2,-32768
  81eb20:	1009883a 	mov	r4,r2
  81eb24:	08313780 	call	831378 <__floatsisf>
  81eb28:	1009883a 	mov	r4,r2
  81eb2c:	e0bfa417 	ldw	r2,-368(fp)
  81eb30:	10801804 	addi	r2,r2,96
  81eb34:	10c00017 	ldw	r3,0(r2)
  81eb38:	180b883a 	mov	r5,r3
  81eb3c:	08309f40 	call	8309f4 <__mulsf3>
  81eb40:	1007883a 	mov	r3,r2
  81eb44:	e0ffb215 	stw	r3,-312(fp)
  81eb48:	e0bfa317 	ldw	r2,-372(fp)
  81eb4c:	10801404 	addi	r2,r2,80
  81eb50:	1080000b 	ldhu	r2,0(r2)
  81eb54:	10bfffcc 	andi	r2,r2,65535
  81eb58:	10a0001c 	xori	r2,r2,32768
  81eb5c:	10a00004 	addi	r2,r2,-32768
  81eb60:	1009883a 	mov	r4,r2
  81eb64:	08313780 	call	831378 <__floatsisf>
  81eb68:	1009883a 	mov	r4,r2
  81eb6c:	e0bfa417 	ldw	r2,-368(fp)
  81eb70:	10802804 	addi	r2,r2,160
  81eb74:	10c00017 	ldw	r3,0(r2)
  81eb78:	180b883a 	mov	r5,r3
  81eb7c:	08309f40 	call	8309f4 <__mulsf3>
  81eb80:	1007883a 	mov	r3,r2
  81eb84:	e0ffb315 	stw	r3,-308(fp)
  81eb88:	e0bfa317 	ldw	r2,-372(fp)
  81eb8c:	10801c04 	addi	r2,r2,112
  81eb90:	1080000b 	ldhu	r2,0(r2)
  81eb94:	10bfffcc 	andi	r2,r2,65535
  81eb98:	10a0001c 	xori	r2,r2,32768
  81eb9c:	10a00004 	addi	r2,r2,-32768
  81eba0:	1009883a 	mov	r4,r2
  81eba4:	08313780 	call	831378 <__floatsisf>
  81eba8:	1009883a 	mov	r4,r2
  81ebac:	e0bfa417 	ldw	r2,-368(fp)
  81ebb0:	10803804 	addi	r2,r2,224
  81ebb4:	10c00017 	ldw	r3,0(r2)
  81ebb8:	180b883a 	mov	r5,r3
  81ebbc:	08309f40 	call	8309f4 <__mulsf3>
  81ebc0:	1007883a 	mov	r3,r2
  81ebc4:	e0ffb415 	stw	r3,-304(fp)
  81ebc8:	e17fb217 	ldw	r5,-312(fp)
  81ebcc:	e13fb317 	ldw	r4,-308(fp)
  81ebd0:	083052c0 	call	83052c <__addsf3>
  81ebd4:	1007883a 	mov	r3,r2
  81ebd8:	e0ffb515 	stw	r3,-300(fp)
  81ebdc:	e17fb217 	ldw	r5,-312(fp)
  81ebe0:	e13fb317 	ldw	r4,-308(fp)
  81ebe4:	0830e240 	call	830e24 <__subsf3>
  81ebe8:	1007883a 	mov	r3,r2
  81ebec:	e0ffb615 	stw	r3,-296(fp)
  81ebf0:	e17fb417 	ldw	r5,-304(fp)
  81ebf4:	e13fb117 	ldw	r4,-316(fp)
  81ebf8:	083052c0 	call	83052c <__addsf3>
  81ebfc:	1007883a 	mov	r3,r2
  81ec00:	e0ffb715 	stw	r3,-292(fp)
  81ec04:	e17fb417 	ldw	r5,-304(fp)
  81ec08:	e13fb117 	ldw	r4,-316(fp)
  81ec0c:	0830e240 	call	830e24 <__subsf3>
  81ec10:	1007883a 	mov	r3,r2
  81ec14:	e0ffb815 	stw	r3,-288(fp)
  81ec18:	e17fb517 	ldw	r5,-300(fp)
  81ec1c:	e13fb717 	ldw	r4,-292(fp)
  81ec20:	083052c0 	call	83052c <__addsf3>
  81ec24:	1007883a 	mov	r3,r2
  81ec28:	e0ffb415 	stw	r3,-304(fp)
  81ec2c:	e17fb517 	ldw	r5,-300(fp)
  81ec30:	e13fb717 	ldw	r4,-292(fp)
  81ec34:	0830e240 	call	830e24 <__subsf3>
  81ec38:	1007883a 	mov	r3,r2
  81ec3c:	1805883a 	mov	r2,r3
  81ec40:	014fed74 	movhi	r5,16309
  81ec44:	29413cc4 	addi	r5,r5,1267
  81ec48:	1009883a 	mov	r4,r2
  81ec4c:	08309f40 	call	8309f4 <__mulsf3>
  81ec50:	1007883a 	mov	r3,r2
  81ec54:	e0ffae15 	stw	r3,-328(fp)
  81ec58:	e17fb817 	ldw	r5,-288(fp)
  81ec5c:	e13fb617 	ldw	r4,-296(fp)
  81ec60:	083052c0 	call	83052c <__addsf3>
  81ec64:	1007883a 	mov	r3,r2
  81ec68:	1805883a 	mov	r2,r3
  81ec6c:	014ffb74 	movhi	r5,16365
  81ec70:	2960d784 	addi	r5,r5,-31906
  81ec74:	1009883a 	mov	r4,r2
  81ec78:	08309f40 	call	8309f4 <__mulsf3>
  81ec7c:	1007883a 	mov	r3,r2
  81ec80:	e0ffb915 	stw	r3,-284(fp)
  81ec84:	014fe2f4 	movhi	r5,16267
  81ec88:	2962f504 	addi	r5,r5,-29740
  81ec8c:	e13fb817 	ldw	r4,-288(fp)
  81ec90:	08309f40 	call	8309f4 <__mulsf3>
  81ec94:	1007883a 	mov	r3,r2
  81ec98:	1805883a 	mov	r2,r3
  81ec9c:	100b883a 	mov	r5,r2
  81eca0:	e13fb917 	ldw	r4,-284(fp)
  81eca4:	0830e240 	call	830e24 <__subsf3>
  81eca8:	1007883a 	mov	r3,r2
  81ecac:	e0ffad15 	stw	r3,-332(fp)
  81ecb0:	015009f4 	movhi	r5,16423
  81ecb4:	294f5d44 	addi	r5,r5,15733
  81ecb8:	e13fb617 	ldw	r4,-296(fp)
  81ecbc:	08309f40 	call	8309f4 <__mulsf3>
  81ecc0:	1007883a 	mov	r3,r2
  81ecc4:	1805883a 	mov	r2,r3
  81ecc8:	100b883a 	mov	r5,r2
  81eccc:	e13fb917 	ldw	r4,-284(fp)
  81ecd0:	0830e240 	call	830e24 <__subsf3>
  81ecd4:	1007883a 	mov	r3,r2
  81ecd8:	e0ffb015 	stw	r3,-320(fp)
  81ecdc:	e17fb417 	ldw	r5,-304(fp)
  81ece0:	e13fb017 	ldw	r4,-320(fp)
  81ece4:	0830e240 	call	830e24 <__subsf3>
  81ece8:	1007883a 	mov	r3,r2
  81ecec:	e0ffb315 	stw	r3,-308(fp)
  81ecf0:	e17fb317 	ldw	r5,-308(fp)
  81ecf4:	e13fae17 	ldw	r4,-328(fp)
  81ecf8:	0830e240 	call	830e24 <__subsf3>
  81ecfc:	1007883a 	mov	r3,r2
  81ed00:	e0ffb215 	stw	r3,-312(fp)
  81ed04:	e17fb217 	ldw	r5,-312(fp)
  81ed08:	e13fad17 	ldw	r4,-332(fp)
  81ed0c:	0830e240 	call	830e24 <__subsf3>
  81ed10:	1007883a 	mov	r3,r2
  81ed14:	e0ffb115 	stw	r3,-316(fp)
  81ed18:	e17fb417 	ldw	r5,-304(fp)
  81ed1c:	e13fa917 	ldw	r4,-348(fp)
  81ed20:	083052c0 	call	83052c <__addsf3>
  81ed24:	1009883a 	mov	r4,r2
  81ed28:	2007883a 	mov	r3,r4
  81ed2c:	e0bfa517 	ldw	r2,-364(fp)
  81ed30:	10c00015 	stw	r3,0(r2)
  81ed34:	e0bfa517 	ldw	r2,-364(fp)
  81ed38:	14003804 	addi	r16,r2,224
  81ed3c:	e17fb417 	ldw	r5,-304(fp)
  81ed40:	e13fa917 	ldw	r4,-348(fp)
  81ed44:	0830e240 	call	830e24 <__subsf3>
  81ed48:	1007883a 	mov	r3,r2
  81ed4c:	1805883a 	mov	r2,r3
  81ed50:	80800015 	stw	r2,0(r16)
  81ed54:	e0bfa517 	ldw	r2,-364(fp)
  81ed58:	14000804 	addi	r16,r2,32
  81ed5c:	e17fb317 	ldw	r5,-308(fp)
  81ed60:	e13faa17 	ldw	r4,-344(fp)
  81ed64:	083052c0 	call	83052c <__addsf3>
  81ed68:	1007883a 	mov	r3,r2
  81ed6c:	1805883a 	mov	r2,r3
  81ed70:	80800015 	stw	r2,0(r16)
  81ed74:	e0bfa517 	ldw	r2,-364(fp)
  81ed78:	14003004 	addi	r16,r2,192
  81ed7c:	e17fb317 	ldw	r5,-308(fp)
  81ed80:	e13faa17 	ldw	r4,-344(fp)
  81ed84:	0830e240 	call	830e24 <__subsf3>
  81ed88:	1007883a 	mov	r3,r2
  81ed8c:	1805883a 	mov	r2,r3
  81ed90:	80800015 	stw	r2,0(r16)
  81ed94:	e0bfa517 	ldw	r2,-364(fp)
  81ed98:	14001004 	addi	r16,r2,64
  81ed9c:	e17fb217 	ldw	r5,-312(fp)
  81eda0:	e13fab17 	ldw	r4,-340(fp)
  81eda4:	083052c0 	call	83052c <__addsf3>
  81eda8:	1007883a 	mov	r3,r2
  81edac:	1805883a 	mov	r2,r3
  81edb0:	80800015 	stw	r2,0(r16)
  81edb4:	e0bfa517 	ldw	r2,-364(fp)
  81edb8:	14002804 	addi	r16,r2,160
  81edbc:	e17fb217 	ldw	r5,-312(fp)
  81edc0:	e13fab17 	ldw	r4,-340(fp)
  81edc4:	0830e240 	call	830e24 <__subsf3>
  81edc8:	1007883a 	mov	r3,r2
  81edcc:	1805883a 	mov	r2,r3
  81edd0:	80800015 	stw	r2,0(r16)
  81edd4:	e0bfa517 	ldw	r2,-364(fp)
  81edd8:	14001804 	addi	r16,r2,96
  81eddc:	e17fb117 	ldw	r5,-316(fp)
  81ede0:	e13fac17 	ldw	r4,-336(fp)
  81ede4:	083052c0 	call	83052c <__addsf3>
  81ede8:	1007883a 	mov	r3,r2
  81edec:	1805883a 	mov	r2,r3
  81edf0:	80800015 	stw	r2,0(r16)
  81edf4:	e0bfa517 	ldw	r2,-364(fp)
  81edf8:	14002004 	addi	r16,r2,128
  81edfc:	e17fb117 	ldw	r5,-316(fp)
  81ee00:	e13fac17 	ldw	r4,-336(fp)
  81ee04:	0830e240 	call	830e24 <__subsf3>
  81ee08:	1007883a 	mov	r3,r2
  81ee0c:	1805883a 	mov	r2,r3
  81ee10:	80800015 	stw	r2,0(r16)
  81ee14:	e0bfa317 	ldw	r2,-372(fp)
  81ee18:	10800084 	addi	r2,r2,2
  81ee1c:	e0bfa315 	stw	r2,-372(fp)
  81ee20:	e0bfa417 	ldw	r2,-368(fp)
  81ee24:	10800104 	addi	r2,r2,4
  81ee28:	e0bfa415 	stw	r2,-368(fp)
  81ee2c:	e0bfa517 	ldw	r2,-364(fp)
  81ee30:	10800104 	addi	r2,r2,4
  81ee34:	e0bfa515 	stw	r2,-364(fp)
  81ee38:	e0bfa617 	ldw	r2,-360(fp)
  81ee3c:	10bfffc4 	addi	r2,r2,-1
  81ee40:	e0bfa615 	stw	r2,-360(fp)
  81ee44:	e0bfa617 	ldw	r2,-360(fp)
  81ee48:	00be4616 	blt	zero,r2,81e764 <__alt_mem_epcs_flash_controller_0+0xff815764>
  81ee4c:	e0bfbb04 	addi	r2,fp,-276
  81ee50:	e0bfa515 	stw	r2,-364(fp)
  81ee54:	e03fa615 	stw	zero,-360(fp)
  81ee58:	00013806 	br	81f33c <jpeg_idct_float+0xc34>
  81ee5c:	e0bfa617 	ldw	r2,-360(fp)
  81ee60:	1085883a 	add	r2,r2,r2
  81ee64:	1085883a 	add	r2,r2,r2
  81ee68:	1007883a 	mov	r3,r2
  81ee6c:	e0bffe17 	ldw	r2,-8(fp)
  81ee70:	10c5883a 	add	r2,r2,r3
  81ee74:	10c00017 	ldw	r3,0(r2)
  81ee78:	e0800217 	ldw	r2,8(fp)
  81ee7c:	1885883a 	add	r2,r3,r2
  81ee80:	e0bfba15 	stw	r2,-280(fp)
  81ee84:	e0bfa517 	ldw	r2,-364(fp)
  81ee88:	10c00017 	ldw	r3,0(r2)
  81ee8c:	01510034 	movhi	r5,17408
  81ee90:	29480004 	addi	r5,r5,8192
  81ee94:	1809883a 	mov	r4,r3
  81ee98:	083052c0 	call	83052c <__addsf3>
  81ee9c:	1007883a 	mov	r3,r2
  81eea0:	e0ffb915 	stw	r3,-284(fp)
  81eea4:	e0bfa517 	ldw	r2,-364(fp)
  81eea8:	10800404 	addi	r2,r2,16
  81eeac:	10c00017 	ldw	r3,0(r2)
  81eeb0:	e17fb917 	ldw	r5,-284(fp)
  81eeb4:	1809883a 	mov	r4,r3
  81eeb8:	083052c0 	call	83052c <__addsf3>
  81eebc:	1007883a 	mov	r3,r2
  81eec0:	e0ffad15 	stw	r3,-332(fp)
  81eec4:	e0bfa517 	ldw	r2,-364(fp)
  81eec8:	10800404 	addi	r2,r2,16
  81eecc:	10c00017 	ldw	r3,0(r2)
  81eed0:	180b883a 	mov	r5,r3
  81eed4:	e13fb917 	ldw	r4,-284(fp)
  81eed8:	0830e240 	call	830e24 <__subsf3>
  81eedc:	1007883a 	mov	r3,r2
  81eee0:	e0ffae15 	stw	r3,-328(fp)
  81eee4:	e0bfa517 	ldw	r2,-364(fp)
  81eee8:	10800204 	addi	r2,r2,8
  81eeec:	10c00017 	ldw	r3,0(r2)
  81eef0:	e0bfa517 	ldw	r2,-364(fp)
  81eef4:	10800604 	addi	r2,r2,24
  81eef8:	11000017 	ldw	r4,0(r2)
  81eefc:	200b883a 	mov	r5,r4
  81ef00:	1809883a 	mov	r4,r3
  81ef04:	083052c0 	call	83052c <__addsf3>
  81ef08:	1007883a 	mov	r3,r2
  81ef0c:	e0ffaf15 	stw	r3,-324(fp)
  81ef10:	e0bfa517 	ldw	r2,-364(fp)
  81ef14:	10800204 	addi	r2,r2,8
  81ef18:	10c00017 	ldw	r3,0(r2)
  81ef1c:	e0bfa517 	ldw	r2,-364(fp)
  81ef20:	10800604 	addi	r2,r2,24
  81ef24:	11000017 	ldw	r4,0(r2)
  81ef28:	200b883a 	mov	r5,r4
  81ef2c:	1809883a 	mov	r4,r3
  81ef30:	0830e240 	call	830e24 <__subsf3>
  81ef34:	1007883a 	mov	r3,r2
  81ef38:	1805883a 	mov	r2,r3
  81ef3c:	014fed74 	movhi	r5,16309
  81ef40:	29413cc4 	addi	r5,r5,1267
  81ef44:	1009883a 	mov	r4,r2
  81ef48:	08309f40 	call	8309f4 <__mulsf3>
  81ef4c:	1007883a 	mov	r3,r2
  81ef50:	1805883a 	mov	r2,r3
  81ef54:	e17faf17 	ldw	r5,-324(fp)
  81ef58:	1009883a 	mov	r4,r2
  81ef5c:	0830e240 	call	830e24 <__subsf3>
  81ef60:	1007883a 	mov	r3,r2
  81ef64:	e0ffb015 	stw	r3,-320(fp)
  81ef68:	e17faf17 	ldw	r5,-324(fp)
  81ef6c:	e13fad17 	ldw	r4,-332(fp)
  81ef70:	083052c0 	call	83052c <__addsf3>
  81ef74:	1007883a 	mov	r3,r2
  81ef78:	e0ffa915 	stw	r3,-348(fp)
  81ef7c:	e17faf17 	ldw	r5,-324(fp)
  81ef80:	e13fad17 	ldw	r4,-332(fp)
  81ef84:	0830e240 	call	830e24 <__subsf3>
  81ef88:	1007883a 	mov	r3,r2
  81ef8c:	e0ffac15 	stw	r3,-336(fp)
  81ef90:	e17fb017 	ldw	r5,-320(fp)
  81ef94:	e13fae17 	ldw	r4,-328(fp)
  81ef98:	083052c0 	call	83052c <__addsf3>
  81ef9c:	1007883a 	mov	r3,r2
  81efa0:	e0ffaa15 	stw	r3,-344(fp)
  81efa4:	e17fb017 	ldw	r5,-320(fp)
  81efa8:	e13fae17 	ldw	r4,-328(fp)
  81efac:	0830e240 	call	830e24 <__subsf3>
  81efb0:	1007883a 	mov	r3,r2
  81efb4:	e0ffab15 	stw	r3,-340(fp)
  81efb8:	e0bfa517 	ldw	r2,-364(fp)
  81efbc:	10800504 	addi	r2,r2,20
  81efc0:	10c00017 	ldw	r3,0(r2)
  81efc4:	e0bfa517 	ldw	r2,-364(fp)
  81efc8:	10800304 	addi	r2,r2,12
  81efcc:	11000017 	ldw	r4,0(r2)
  81efd0:	200b883a 	mov	r5,r4
  81efd4:	1809883a 	mov	r4,r3
  81efd8:	083052c0 	call	83052c <__addsf3>
  81efdc:	1007883a 	mov	r3,r2
  81efe0:	e0ffb515 	stw	r3,-300(fp)
  81efe4:	e0bfa517 	ldw	r2,-364(fp)
  81efe8:	10800504 	addi	r2,r2,20
  81efec:	10c00017 	ldw	r3,0(r2)
  81eff0:	e0bfa517 	ldw	r2,-364(fp)
  81eff4:	10800304 	addi	r2,r2,12
  81eff8:	11000017 	ldw	r4,0(r2)
  81effc:	200b883a 	mov	r5,r4
  81f000:	1809883a 	mov	r4,r3
  81f004:	0830e240 	call	830e24 <__subsf3>
  81f008:	1007883a 	mov	r3,r2
  81f00c:	e0ffb615 	stw	r3,-296(fp)
  81f010:	e0bfa517 	ldw	r2,-364(fp)
  81f014:	10800104 	addi	r2,r2,4
  81f018:	10c00017 	ldw	r3,0(r2)
  81f01c:	e0bfa517 	ldw	r2,-364(fp)
  81f020:	10800704 	addi	r2,r2,28
  81f024:	11000017 	ldw	r4,0(r2)
  81f028:	200b883a 	mov	r5,r4
  81f02c:	1809883a 	mov	r4,r3
  81f030:	083052c0 	call	83052c <__addsf3>
  81f034:	1007883a 	mov	r3,r2
  81f038:	e0ffb715 	stw	r3,-292(fp)
  81f03c:	e0bfa517 	ldw	r2,-364(fp)
  81f040:	10800104 	addi	r2,r2,4
  81f044:	10c00017 	ldw	r3,0(r2)
  81f048:	e0bfa517 	ldw	r2,-364(fp)
  81f04c:	10800704 	addi	r2,r2,28
  81f050:	11000017 	ldw	r4,0(r2)
  81f054:	200b883a 	mov	r5,r4
  81f058:	1809883a 	mov	r4,r3
  81f05c:	0830e240 	call	830e24 <__subsf3>
  81f060:	1007883a 	mov	r3,r2
  81f064:	e0ffb815 	stw	r3,-288(fp)
  81f068:	e17fb517 	ldw	r5,-300(fp)
  81f06c:	e13fb717 	ldw	r4,-292(fp)
  81f070:	083052c0 	call	83052c <__addsf3>
  81f074:	1007883a 	mov	r3,r2
  81f078:	e0ffb415 	stw	r3,-304(fp)
  81f07c:	e17fb517 	ldw	r5,-300(fp)
  81f080:	e13fb717 	ldw	r4,-292(fp)
  81f084:	0830e240 	call	830e24 <__subsf3>
  81f088:	1007883a 	mov	r3,r2
  81f08c:	1805883a 	mov	r2,r3
  81f090:	014fed74 	movhi	r5,16309
  81f094:	29413cc4 	addi	r5,r5,1267
  81f098:	1009883a 	mov	r4,r2
  81f09c:	08309f40 	call	8309f4 <__mulsf3>
  81f0a0:	1007883a 	mov	r3,r2
  81f0a4:	e0ffae15 	stw	r3,-328(fp)
  81f0a8:	e17fb817 	ldw	r5,-288(fp)
  81f0ac:	e13fb617 	ldw	r4,-296(fp)
  81f0b0:	083052c0 	call	83052c <__addsf3>
  81f0b4:	1007883a 	mov	r3,r2
  81f0b8:	1805883a 	mov	r2,r3
  81f0bc:	014ffb74 	movhi	r5,16365
  81f0c0:	2960d784 	addi	r5,r5,-31906
  81f0c4:	1009883a 	mov	r4,r2
  81f0c8:	08309f40 	call	8309f4 <__mulsf3>
  81f0cc:	1007883a 	mov	r3,r2
  81f0d0:	e0ffb915 	stw	r3,-284(fp)
  81f0d4:	014fe2f4 	movhi	r5,16267
  81f0d8:	2962f504 	addi	r5,r5,-29740
  81f0dc:	e13fb817 	ldw	r4,-288(fp)
  81f0e0:	08309f40 	call	8309f4 <__mulsf3>
  81f0e4:	1007883a 	mov	r3,r2
  81f0e8:	1805883a 	mov	r2,r3
  81f0ec:	100b883a 	mov	r5,r2
  81f0f0:	e13fb917 	ldw	r4,-284(fp)
  81f0f4:	0830e240 	call	830e24 <__subsf3>
  81f0f8:	1007883a 	mov	r3,r2
  81f0fc:	e0ffad15 	stw	r3,-332(fp)
  81f100:	015009f4 	movhi	r5,16423
  81f104:	294f5d44 	addi	r5,r5,15733
  81f108:	e13fb617 	ldw	r4,-296(fp)
  81f10c:	08309f40 	call	8309f4 <__mulsf3>
  81f110:	1007883a 	mov	r3,r2
  81f114:	1805883a 	mov	r2,r3
  81f118:	100b883a 	mov	r5,r2
  81f11c:	e13fb917 	ldw	r4,-284(fp)
  81f120:	0830e240 	call	830e24 <__subsf3>
  81f124:	1007883a 	mov	r3,r2
  81f128:	e0ffb015 	stw	r3,-320(fp)
  81f12c:	e17fb417 	ldw	r5,-304(fp)
  81f130:	e13fb017 	ldw	r4,-320(fp)
  81f134:	0830e240 	call	830e24 <__subsf3>
  81f138:	1007883a 	mov	r3,r2
  81f13c:	e0ffb315 	stw	r3,-308(fp)
  81f140:	e17fb317 	ldw	r5,-308(fp)
  81f144:	e13fae17 	ldw	r4,-328(fp)
  81f148:	0830e240 	call	830e24 <__subsf3>
  81f14c:	1007883a 	mov	r3,r2
  81f150:	e0ffb215 	stw	r3,-312(fp)
  81f154:	e17fb217 	ldw	r5,-312(fp)
  81f158:	e13fad17 	ldw	r4,-332(fp)
  81f15c:	0830e240 	call	830e24 <__subsf3>
  81f160:	1007883a 	mov	r3,r2
  81f164:	e0ffb115 	stw	r3,-316(fp)
  81f168:	e17fb417 	ldw	r5,-304(fp)
  81f16c:	e13fa917 	ldw	r4,-348(fp)
  81f170:	083052c0 	call	83052c <__addsf3>
  81f174:	1007883a 	mov	r3,r2
  81f178:	1805883a 	mov	r2,r3
  81f17c:	1009883a 	mov	r4,r2
  81f180:	08313080 	call	831308 <__fixsfsi>
  81f184:	1080ffcc 	andi	r2,r2,1023
  81f188:	e0ffa717 	ldw	r3,-356(fp)
  81f18c:	1885883a 	add	r2,r3,r2
  81f190:	10c00003 	ldbu	r3,0(r2)
  81f194:	e0bfba17 	ldw	r2,-280(fp)
  81f198:	10c00005 	stb	r3,0(r2)
  81f19c:	e0bfba17 	ldw	r2,-280(fp)
  81f1a0:	140001c4 	addi	r16,r2,7
  81f1a4:	e17fb417 	ldw	r5,-304(fp)
  81f1a8:	e13fa917 	ldw	r4,-348(fp)
  81f1ac:	0830e240 	call	830e24 <__subsf3>
  81f1b0:	1007883a 	mov	r3,r2
  81f1b4:	1805883a 	mov	r2,r3
  81f1b8:	1009883a 	mov	r4,r2
  81f1bc:	08313080 	call	831308 <__fixsfsi>
  81f1c0:	1080ffcc 	andi	r2,r2,1023
  81f1c4:	e0ffa717 	ldw	r3,-356(fp)
  81f1c8:	1885883a 	add	r2,r3,r2
  81f1cc:	10800003 	ldbu	r2,0(r2)
  81f1d0:	80800005 	stb	r2,0(r16)
  81f1d4:	e0bfba17 	ldw	r2,-280(fp)
  81f1d8:	14000044 	addi	r16,r2,1
  81f1dc:	e17fb317 	ldw	r5,-308(fp)
  81f1e0:	e13faa17 	ldw	r4,-344(fp)
  81f1e4:	083052c0 	call	83052c <__addsf3>
  81f1e8:	1007883a 	mov	r3,r2
  81f1ec:	1805883a 	mov	r2,r3
  81f1f0:	1009883a 	mov	r4,r2
  81f1f4:	08313080 	call	831308 <__fixsfsi>
  81f1f8:	1080ffcc 	andi	r2,r2,1023
  81f1fc:	e0ffa717 	ldw	r3,-356(fp)
  81f200:	1885883a 	add	r2,r3,r2
  81f204:	10800003 	ldbu	r2,0(r2)
  81f208:	80800005 	stb	r2,0(r16)
  81f20c:	e0bfba17 	ldw	r2,-280(fp)
  81f210:	14000184 	addi	r16,r2,6
  81f214:	e17fb317 	ldw	r5,-308(fp)
  81f218:	e13faa17 	ldw	r4,-344(fp)
  81f21c:	0830e240 	call	830e24 <__subsf3>
  81f220:	1007883a 	mov	r3,r2
  81f224:	1805883a 	mov	r2,r3
  81f228:	1009883a 	mov	r4,r2
  81f22c:	08313080 	call	831308 <__fixsfsi>
  81f230:	1080ffcc 	andi	r2,r2,1023
  81f234:	e0ffa717 	ldw	r3,-356(fp)
  81f238:	1885883a 	add	r2,r3,r2
  81f23c:	10800003 	ldbu	r2,0(r2)
  81f240:	80800005 	stb	r2,0(r16)
  81f244:	e0bfba17 	ldw	r2,-280(fp)
  81f248:	14000084 	addi	r16,r2,2
  81f24c:	e17fb217 	ldw	r5,-312(fp)
  81f250:	e13fab17 	ldw	r4,-340(fp)
  81f254:	083052c0 	call	83052c <__addsf3>
  81f258:	1007883a 	mov	r3,r2
  81f25c:	1805883a 	mov	r2,r3
  81f260:	1009883a 	mov	r4,r2
  81f264:	08313080 	call	831308 <__fixsfsi>
  81f268:	1080ffcc 	andi	r2,r2,1023
  81f26c:	e0ffa717 	ldw	r3,-356(fp)
  81f270:	1885883a 	add	r2,r3,r2
  81f274:	10800003 	ldbu	r2,0(r2)
  81f278:	80800005 	stb	r2,0(r16)
  81f27c:	e0bfba17 	ldw	r2,-280(fp)
  81f280:	14000144 	addi	r16,r2,5
  81f284:	e17fb217 	ldw	r5,-312(fp)
  81f288:	e13fab17 	ldw	r4,-340(fp)
  81f28c:	0830e240 	call	830e24 <__subsf3>
  81f290:	1007883a 	mov	r3,r2
  81f294:	1805883a 	mov	r2,r3
  81f298:	1009883a 	mov	r4,r2
  81f29c:	08313080 	call	831308 <__fixsfsi>
  81f2a0:	1080ffcc 	andi	r2,r2,1023
  81f2a4:	e0ffa717 	ldw	r3,-356(fp)
  81f2a8:	1885883a 	add	r2,r3,r2
  81f2ac:	10800003 	ldbu	r2,0(r2)
  81f2b0:	80800005 	stb	r2,0(r16)
  81f2b4:	e0bfba17 	ldw	r2,-280(fp)
  81f2b8:	140000c4 	addi	r16,r2,3
  81f2bc:	e17fb117 	ldw	r5,-316(fp)
  81f2c0:	e13fac17 	ldw	r4,-336(fp)
  81f2c4:	083052c0 	call	83052c <__addsf3>
  81f2c8:	1007883a 	mov	r3,r2
  81f2cc:	1805883a 	mov	r2,r3
  81f2d0:	1009883a 	mov	r4,r2
  81f2d4:	08313080 	call	831308 <__fixsfsi>
  81f2d8:	1080ffcc 	andi	r2,r2,1023
  81f2dc:	e0ffa717 	ldw	r3,-356(fp)
  81f2e0:	1885883a 	add	r2,r3,r2
  81f2e4:	10800003 	ldbu	r2,0(r2)
  81f2e8:	80800005 	stb	r2,0(r16)
  81f2ec:	e0bfba17 	ldw	r2,-280(fp)
  81f2f0:	14000104 	addi	r16,r2,4
  81f2f4:	e17fb117 	ldw	r5,-316(fp)
  81f2f8:	e13fac17 	ldw	r4,-336(fp)
  81f2fc:	0830e240 	call	830e24 <__subsf3>
  81f300:	1007883a 	mov	r3,r2
  81f304:	1805883a 	mov	r2,r3
  81f308:	1009883a 	mov	r4,r2
  81f30c:	08313080 	call	831308 <__fixsfsi>
  81f310:	1080ffcc 	andi	r2,r2,1023
  81f314:	e0ffa717 	ldw	r3,-356(fp)
  81f318:	1885883a 	add	r2,r3,r2
  81f31c:	10800003 	ldbu	r2,0(r2)
  81f320:	80800005 	stb	r2,0(r16)
  81f324:	e0bfa517 	ldw	r2,-364(fp)
  81f328:	10800804 	addi	r2,r2,32
  81f32c:	e0bfa515 	stw	r2,-364(fp)
  81f330:	e0bfa617 	ldw	r2,-360(fp)
  81f334:	10800044 	addi	r2,r2,1
  81f338:	e0bfa615 	stw	r2,-360(fp)
  81f33c:	e0bfa617 	ldw	r2,-360(fp)
  81f340:	10800210 	cmplti	r2,r2,8
  81f344:	103ec51e 	bne	r2,zero,81ee5c <__alt_mem_epcs_flash_controller_0+0xff815e5c>
  81f348:	0001883a 	nop
  81f34c:	e6ffff04 	addi	sp,fp,-4
  81f350:	dfc00217 	ldw	ra,8(sp)
  81f354:	df000117 	ldw	fp,4(sp)
  81f358:	dc000017 	ldw	r16,0(sp)
  81f35c:	dec00304 	addi	sp,sp,12
  81f360:	f800283a 	ret

0081f364 <jpeg_idct_ifast>:
  81f364:	deffa104 	addi	sp,sp,-380
  81f368:	dfc05e15 	stw	ra,376(sp)
  81f36c:	df005d15 	stw	fp,372(sp)
  81f370:	df005d04 	addi	fp,sp,372
  81f374:	e13ffc15 	stw	r4,-16(fp)
  81f378:	e17ffd15 	stw	r5,-12(fp)
  81f37c:	e1bffe15 	stw	r6,-8(fp)
  81f380:	e1ffff15 	stw	r7,-4(fp)
  81f384:	e0bffc17 	ldw	r2,-16(fp)
  81f388:	10805417 	ldw	r2,336(r2)
  81f38c:	10bfa004 	addi	r2,r2,-384
  81f390:	e0bfa715 	stw	r2,-356(fp)
  81f394:	e0bffe17 	ldw	r2,-8(fp)
  81f398:	e0bfa315 	stw	r2,-372(fp)
  81f39c:	e0bffd17 	ldw	r2,-12(fp)
  81f3a0:	10801517 	ldw	r2,84(r2)
  81f3a4:	e0bfa415 	stw	r2,-368(fp)
  81f3a8:	e0bfbc04 	addi	r2,fp,-272
  81f3ac:	e0bfa515 	stw	r2,-364(fp)
  81f3b0:	00800204 	movi	r2,8
  81f3b4:	e0bfa615 	stw	r2,-360(fp)
  81f3b8:	00016a06 	br	81f964 <jpeg_idct_ifast+0x600>
  81f3bc:	e0bfa317 	ldw	r2,-372(fp)
  81f3c0:	10800404 	addi	r2,r2,16
  81f3c4:	1080000b 	ldhu	r2,0(r2)
  81f3c8:	10bfffcc 	andi	r2,r2,65535
  81f3cc:	10a0001c 	xori	r2,r2,32768
  81f3d0:	10a00004 	addi	r2,r2,-32768
  81f3d4:	10005e1e 	bne	r2,zero,81f550 <jpeg_idct_ifast+0x1ec>
  81f3d8:	e0bfa317 	ldw	r2,-372(fp)
  81f3dc:	10800804 	addi	r2,r2,32
  81f3e0:	1080000b 	ldhu	r2,0(r2)
  81f3e4:	10bfffcc 	andi	r2,r2,65535
  81f3e8:	10a0001c 	xori	r2,r2,32768
  81f3ec:	10a00004 	addi	r2,r2,-32768
  81f3f0:	1000571e 	bne	r2,zero,81f550 <jpeg_idct_ifast+0x1ec>
  81f3f4:	e0bfa317 	ldw	r2,-372(fp)
  81f3f8:	10800c04 	addi	r2,r2,48
  81f3fc:	1080000b 	ldhu	r2,0(r2)
  81f400:	10bfffcc 	andi	r2,r2,65535
  81f404:	10a0001c 	xori	r2,r2,32768
  81f408:	10a00004 	addi	r2,r2,-32768
  81f40c:	1000501e 	bne	r2,zero,81f550 <jpeg_idct_ifast+0x1ec>
  81f410:	e0bfa317 	ldw	r2,-372(fp)
  81f414:	10801004 	addi	r2,r2,64
  81f418:	1080000b 	ldhu	r2,0(r2)
  81f41c:	10bfffcc 	andi	r2,r2,65535
  81f420:	10a0001c 	xori	r2,r2,32768
  81f424:	10a00004 	addi	r2,r2,-32768
  81f428:	1000491e 	bne	r2,zero,81f550 <jpeg_idct_ifast+0x1ec>
  81f42c:	e0bfa317 	ldw	r2,-372(fp)
  81f430:	10801404 	addi	r2,r2,80
  81f434:	1080000b 	ldhu	r2,0(r2)
  81f438:	10bfffcc 	andi	r2,r2,65535
  81f43c:	10a0001c 	xori	r2,r2,32768
  81f440:	10a00004 	addi	r2,r2,-32768
  81f444:	1000421e 	bne	r2,zero,81f550 <jpeg_idct_ifast+0x1ec>
  81f448:	e0bfa317 	ldw	r2,-372(fp)
  81f44c:	10801804 	addi	r2,r2,96
  81f450:	1080000b 	ldhu	r2,0(r2)
  81f454:	10bfffcc 	andi	r2,r2,65535
  81f458:	10a0001c 	xori	r2,r2,32768
  81f45c:	10a00004 	addi	r2,r2,-32768
  81f460:	10003b1e 	bne	r2,zero,81f550 <jpeg_idct_ifast+0x1ec>
  81f464:	e0bfa317 	ldw	r2,-372(fp)
  81f468:	10801c04 	addi	r2,r2,112
  81f46c:	1080000b 	ldhu	r2,0(r2)
  81f470:	10bfffcc 	andi	r2,r2,65535
  81f474:	10a0001c 	xori	r2,r2,32768
  81f478:	10a00004 	addi	r2,r2,-32768
  81f47c:	1000341e 	bne	r2,zero,81f550 <jpeg_idct_ifast+0x1ec>
  81f480:	e0bfa317 	ldw	r2,-372(fp)
  81f484:	1080000b 	ldhu	r2,0(r2)
  81f488:	10ffffcc 	andi	r3,r2,65535
  81f48c:	18e0001c 	xori	r3,r3,32768
  81f490:	18e00004 	addi	r3,r3,-32768
  81f494:	e0bfa417 	ldw	r2,-368(fp)
  81f498:	10800017 	ldw	r2,0(r2)
  81f49c:	100b883a 	mov	r5,r2
  81f4a0:	1809883a 	mov	r4,r3
  81f4a4:	08305040 	call	830504 <__mulsi3>
  81f4a8:	e0bfa815 	stw	r2,-352(fp)
  81f4ac:	e0bfa517 	ldw	r2,-364(fp)
  81f4b0:	e0ffa817 	ldw	r3,-352(fp)
  81f4b4:	10c00015 	stw	r3,0(r2)
  81f4b8:	e0bfa517 	ldw	r2,-364(fp)
  81f4bc:	10800804 	addi	r2,r2,32
  81f4c0:	e0ffa817 	ldw	r3,-352(fp)
  81f4c4:	10c00015 	stw	r3,0(r2)
  81f4c8:	e0bfa517 	ldw	r2,-364(fp)
  81f4cc:	10801004 	addi	r2,r2,64
  81f4d0:	e0ffa817 	ldw	r3,-352(fp)
  81f4d4:	10c00015 	stw	r3,0(r2)
  81f4d8:	e0bfa517 	ldw	r2,-364(fp)
  81f4dc:	10801804 	addi	r2,r2,96
  81f4e0:	e0ffa817 	ldw	r3,-352(fp)
  81f4e4:	10c00015 	stw	r3,0(r2)
  81f4e8:	e0bfa517 	ldw	r2,-364(fp)
  81f4ec:	10802004 	addi	r2,r2,128
  81f4f0:	e0ffa817 	ldw	r3,-352(fp)
  81f4f4:	10c00015 	stw	r3,0(r2)
  81f4f8:	e0bfa517 	ldw	r2,-364(fp)
  81f4fc:	10802804 	addi	r2,r2,160
  81f500:	e0ffa817 	ldw	r3,-352(fp)
  81f504:	10c00015 	stw	r3,0(r2)
  81f508:	e0bfa517 	ldw	r2,-364(fp)
  81f50c:	10803004 	addi	r2,r2,192
  81f510:	e0ffa817 	ldw	r3,-352(fp)
  81f514:	10c00015 	stw	r3,0(r2)
  81f518:	e0bfa517 	ldw	r2,-364(fp)
  81f51c:	10803804 	addi	r2,r2,224
  81f520:	e0ffa817 	ldw	r3,-352(fp)
  81f524:	10c00015 	stw	r3,0(r2)
  81f528:	e0bfa317 	ldw	r2,-372(fp)
  81f52c:	10800084 	addi	r2,r2,2
  81f530:	e0bfa315 	stw	r2,-372(fp)
  81f534:	e0bfa417 	ldw	r2,-368(fp)
  81f538:	10800104 	addi	r2,r2,4
  81f53c:	e0bfa415 	stw	r2,-368(fp)
  81f540:	e0bfa517 	ldw	r2,-364(fp)
  81f544:	10800104 	addi	r2,r2,4
  81f548:	e0bfa515 	stw	r2,-364(fp)
  81f54c:	00010206 	br	81f958 <jpeg_idct_ifast+0x5f4>
  81f550:	e0bfa317 	ldw	r2,-372(fp)
  81f554:	1080000b 	ldhu	r2,0(r2)
  81f558:	10ffffcc 	andi	r3,r2,65535
  81f55c:	18e0001c 	xori	r3,r3,32768
  81f560:	18e00004 	addi	r3,r3,-32768
  81f564:	e0bfa417 	ldw	r2,-368(fp)
  81f568:	10800017 	ldw	r2,0(r2)
  81f56c:	100b883a 	mov	r5,r2
  81f570:	1809883a 	mov	r4,r3
  81f574:	08305040 	call	830504 <__mulsi3>
  81f578:	e0bfa915 	stw	r2,-348(fp)
  81f57c:	e0bfa317 	ldw	r2,-372(fp)
  81f580:	10800804 	addi	r2,r2,32
  81f584:	1080000b 	ldhu	r2,0(r2)
  81f588:	10ffffcc 	andi	r3,r2,65535
  81f58c:	18e0001c 	xori	r3,r3,32768
  81f590:	18e00004 	addi	r3,r3,-32768
  81f594:	e0bfa417 	ldw	r2,-368(fp)
  81f598:	10801004 	addi	r2,r2,64
  81f59c:	10800017 	ldw	r2,0(r2)
  81f5a0:	100b883a 	mov	r5,r2
  81f5a4:	1809883a 	mov	r4,r3
  81f5a8:	08305040 	call	830504 <__mulsi3>
  81f5ac:	e0bfaa15 	stw	r2,-344(fp)
  81f5b0:	e0bfa317 	ldw	r2,-372(fp)
  81f5b4:	10801004 	addi	r2,r2,64
  81f5b8:	1080000b 	ldhu	r2,0(r2)
  81f5bc:	10ffffcc 	andi	r3,r2,65535
  81f5c0:	18e0001c 	xori	r3,r3,32768
  81f5c4:	18e00004 	addi	r3,r3,-32768
  81f5c8:	e0bfa417 	ldw	r2,-368(fp)
  81f5cc:	10802004 	addi	r2,r2,128
  81f5d0:	10800017 	ldw	r2,0(r2)
  81f5d4:	100b883a 	mov	r5,r2
  81f5d8:	1809883a 	mov	r4,r3
  81f5dc:	08305040 	call	830504 <__mulsi3>
  81f5e0:	e0bfab15 	stw	r2,-340(fp)
  81f5e4:	e0bfa317 	ldw	r2,-372(fp)
  81f5e8:	10801804 	addi	r2,r2,96
  81f5ec:	1080000b 	ldhu	r2,0(r2)
  81f5f0:	10ffffcc 	andi	r3,r2,65535
  81f5f4:	18e0001c 	xori	r3,r3,32768
  81f5f8:	18e00004 	addi	r3,r3,-32768
  81f5fc:	e0bfa417 	ldw	r2,-368(fp)
  81f600:	10803004 	addi	r2,r2,192
  81f604:	10800017 	ldw	r2,0(r2)
  81f608:	100b883a 	mov	r5,r2
  81f60c:	1809883a 	mov	r4,r3
  81f610:	08305040 	call	830504 <__mulsi3>
  81f614:	e0bfac15 	stw	r2,-336(fp)
  81f618:	e0ffa917 	ldw	r3,-348(fp)
  81f61c:	e0bfab17 	ldw	r2,-340(fp)
  81f620:	1885883a 	add	r2,r3,r2
  81f624:	e0bfad15 	stw	r2,-332(fp)
  81f628:	e0ffa917 	ldw	r3,-348(fp)
  81f62c:	e0bfab17 	ldw	r2,-340(fp)
  81f630:	1885c83a 	sub	r2,r3,r2
  81f634:	e0bfae15 	stw	r2,-328(fp)
  81f638:	e0ffaa17 	ldw	r3,-344(fp)
  81f63c:	e0bfac17 	ldw	r2,-336(fp)
  81f640:	1885883a 	add	r2,r3,r2
  81f644:	e0bfaf15 	stw	r2,-324(fp)
  81f648:	e0ffaa17 	ldw	r3,-344(fp)
  81f64c:	e0bfac17 	ldw	r2,-336(fp)
  81f650:	1885c83a 	sub	r2,r3,r2
  81f654:	01405a84 	movi	r5,362
  81f658:	1009883a 	mov	r4,r2
  81f65c:	08305040 	call	830504 <__mulsi3>
  81f660:	1007d23a 	srai	r3,r2,8
  81f664:	e0bfaf17 	ldw	r2,-324(fp)
  81f668:	1885c83a 	sub	r2,r3,r2
  81f66c:	e0bfb015 	stw	r2,-320(fp)
  81f670:	e0ffad17 	ldw	r3,-332(fp)
  81f674:	e0bfaf17 	ldw	r2,-324(fp)
  81f678:	1885883a 	add	r2,r3,r2
  81f67c:	e0bfa915 	stw	r2,-348(fp)
  81f680:	e0ffad17 	ldw	r3,-332(fp)
  81f684:	e0bfaf17 	ldw	r2,-324(fp)
  81f688:	1885c83a 	sub	r2,r3,r2
  81f68c:	e0bfac15 	stw	r2,-336(fp)
  81f690:	e0ffae17 	ldw	r3,-328(fp)
  81f694:	e0bfb017 	ldw	r2,-320(fp)
  81f698:	1885883a 	add	r2,r3,r2
  81f69c:	e0bfaa15 	stw	r2,-344(fp)
  81f6a0:	e0ffae17 	ldw	r3,-328(fp)
  81f6a4:	e0bfb017 	ldw	r2,-320(fp)
  81f6a8:	1885c83a 	sub	r2,r3,r2
  81f6ac:	e0bfab15 	stw	r2,-340(fp)
  81f6b0:	e0bfa317 	ldw	r2,-372(fp)
  81f6b4:	10800404 	addi	r2,r2,16
  81f6b8:	1080000b 	ldhu	r2,0(r2)
  81f6bc:	10ffffcc 	andi	r3,r2,65535
  81f6c0:	18e0001c 	xori	r3,r3,32768
  81f6c4:	18e00004 	addi	r3,r3,-32768
  81f6c8:	e0bfa417 	ldw	r2,-368(fp)
  81f6cc:	10800804 	addi	r2,r2,32
  81f6d0:	10800017 	ldw	r2,0(r2)
  81f6d4:	100b883a 	mov	r5,r2
  81f6d8:	1809883a 	mov	r4,r3
  81f6dc:	08305040 	call	830504 <__mulsi3>
  81f6e0:	e0bfb115 	stw	r2,-316(fp)
  81f6e4:	e0bfa317 	ldw	r2,-372(fp)
  81f6e8:	10800c04 	addi	r2,r2,48
  81f6ec:	1080000b 	ldhu	r2,0(r2)
  81f6f0:	10ffffcc 	andi	r3,r2,65535
  81f6f4:	18e0001c 	xori	r3,r3,32768
  81f6f8:	18e00004 	addi	r3,r3,-32768
  81f6fc:	e0bfa417 	ldw	r2,-368(fp)
  81f700:	10801804 	addi	r2,r2,96
  81f704:	10800017 	ldw	r2,0(r2)
  81f708:	100b883a 	mov	r5,r2
  81f70c:	1809883a 	mov	r4,r3
  81f710:	08305040 	call	830504 <__mulsi3>
  81f714:	e0bfb215 	stw	r2,-312(fp)
  81f718:	e0bfa317 	ldw	r2,-372(fp)
  81f71c:	10801404 	addi	r2,r2,80
  81f720:	1080000b 	ldhu	r2,0(r2)
  81f724:	10ffffcc 	andi	r3,r2,65535
  81f728:	18e0001c 	xori	r3,r3,32768
  81f72c:	18e00004 	addi	r3,r3,-32768
  81f730:	e0bfa417 	ldw	r2,-368(fp)
  81f734:	10802804 	addi	r2,r2,160
  81f738:	10800017 	ldw	r2,0(r2)
  81f73c:	100b883a 	mov	r5,r2
  81f740:	1809883a 	mov	r4,r3
  81f744:	08305040 	call	830504 <__mulsi3>
  81f748:	e0bfb315 	stw	r2,-308(fp)
  81f74c:	e0bfa317 	ldw	r2,-372(fp)
  81f750:	10801c04 	addi	r2,r2,112
  81f754:	1080000b 	ldhu	r2,0(r2)
  81f758:	10ffffcc 	andi	r3,r2,65535
  81f75c:	18e0001c 	xori	r3,r3,32768
  81f760:	18e00004 	addi	r3,r3,-32768
  81f764:	e0bfa417 	ldw	r2,-368(fp)
  81f768:	10803804 	addi	r2,r2,224
  81f76c:	10800017 	ldw	r2,0(r2)
  81f770:	100b883a 	mov	r5,r2
  81f774:	1809883a 	mov	r4,r3
  81f778:	08305040 	call	830504 <__mulsi3>
  81f77c:	e0bfb415 	stw	r2,-304(fp)
  81f780:	e0ffb317 	ldw	r3,-308(fp)
  81f784:	e0bfb217 	ldw	r2,-312(fp)
  81f788:	1885883a 	add	r2,r3,r2
  81f78c:	e0bfb515 	stw	r2,-300(fp)
  81f790:	e0ffb317 	ldw	r3,-308(fp)
  81f794:	e0bfb217 	ldw	r2,-312(fp)
  81f798:	1885c83a 	sub	r2,r3,r2
  81f79c:	e0bfb615 	stw	r2,-296(fp)
  81f7a0:	e0ffb117 	ldw	r3,-316(fp)
  81f7a4:	e0bfb417 	ldw	r2,-304(fp)
  81f7a8:	1885883a 	add	r2,r3,r2
  81f7ac:	e0bfb715 	stw	r2,-292(fp)
  81f7b0:	e0ffb117 	ldw	r3,-316(fp)
  81f7b4:	e0bfb417 	ldw	r2,-304(fp)
  81f7b8:	1885c83a 	sub	r2,r3,r2
  81f7bc:	e0bfb815 	stw	r2,-288(fp)
  81f7c0:	e0ffb717 	ldw	r3,-292(fp)
  81f7c4:	e0bfb517 	ldw	r2,-300(fp)
  81f7c8:	1885883a 	add	r2,r3,r2
  81f7cc:	e0bfb415 	stw	r2,-304(fp)
  81f7d0:	e0ffb717 	ldw	r3,-292(fp)
  81f7d4:	e0bfb517 	ldw	r2,-300(fp)
  81f7d8:	1885c83a 	sub	r2,r3,r2
  81f7dc:	01405a84 	movi	r5,362
  81f7e0:	1009883a 	mov	r4,r2
  81f7e4:	08305040 	call	830504 <__mulsi3>
  81f7e8:	1005d23a 	srai	r2,r2,8
  81f7ec:	e0bfae15 	stw	r2,-328(fp)
  81f7f0:	e0ffb617 	ldw	r3,-296(fp)
  81f7f4:	e0bfb817 	ldw	r2,-288(fp)
  81f7f8:	1885883a 	add	r2,r3,r2
  81f7fc:	01407644 	movi	r5,473
  81f800:	1009883a 	mov	r4,r2
  81f804:	08305040 	call	830504 <__mulsi3>
  81f808:	1005d23a 	srai	r2,r2,8
  81f80c:	e0bfb915 	stw	r2,-284(fp)
  81f810:	01404544 	movi	r5,277
  81f814:	e13fb817 	ldw	r4,-288(fp)
  81f818:	08305040 	call	830504 <__mulsi3>
  81f81c:	1005d23a 	srai	r2,r2,8
  81f820:	e0ffb917 	ldw	r3,-284(fp)
  81f824:	1885c83a 	sub	r2,r3,r2
  81f828:	e0bfad15 	stw	r2,-332(fp)
  81f82c:	0140a744 	movi	r5,669
  81f830:	e13fb617 	ldw	r4,-296(fp)
  81f834:	08305040 	call	830504 <__mulsi3>
  81f838:	1005d23a 	srai	r2,r2,8
  81f83c:	e0ffb917 	ldw	r3,-284(fp)
  81f840:	1885c83a 	sub	r2,r3,r2
  81f844:	e0bfb015 	stw	r2,-320(fp)
  81f848:	e0ffb017 	ldw	r3,-320(fp)
  81f84c:	e0bfb417 	ldw	r2,-304(fp)
  81f850:	1885c83a 	sub	r2,r3,r2
  81f854:	e0bfb315 	stw	r2,-308(fp)
  81f858:	e0ffae17 	ldw	r3,-328(fp)
  81f85c:	e0bfb317 	ldw	r2,-308(fp)
  81f860:	1885c83a 	sub	r2,r3,r2
  81f864:	e0bfb215 	stw	r2,-312(fp)
  81f868:	e0ffad17 	ldw	r3,-332(fp)
  81f86c:	e0bfb217 	ldw	r2,-312(fp)
  81f870:	1885c83a 	sub	r2,r3,r2
  81f874:	e0bfb115 	stw	r2,-316(fp)
  81f878:	e0ffa917 	ldw	r3,-348(fp)
  81f87c:	e0bfb417 	ldw	r2,-304(fp)
  81f880:	1887883a 	add	r3,r3,r2
  81f884:	e0bfa517 	ldw	r2,-364(fp)
  81f888:	10c00015 	stw	r3,0(r2)
  81f88c:	e0bfa517 	ldw	r2,-364(fp)
  81f890:	10803804 	addi	r2,r2,224
  81f894:	e13fa917 	ldw	r4,-348(fp)
  81f898:	e0ffb417 	ldw	r3,-304(fp)
  81f89c:	20c7c83a 	sub	r3,r4,r3
  81f8a0:	10c00015 	stw	r3,0(r2)
  81f8a4:	e0bfa517 	ldw	r2,-364(fp)
  81f8a8:	10800804 	addi	r2,r2,32
  81f8ac:	e13faa17 	ldw	r4,-344(fp)
  81f8b0:	e0ffb317 	ldw	r3,-308(fp)
  81f8b4:	20c7883a 	add	r3,r4,r3
  81f8b8:	10c00015 	stw	r3,0(r2)
  81f8bc:	e0bfa517 	ldw	r2,-364(fp)
  81f8c0:	10803004 	addi	r2,r2,192
  81f8c4:	e13faa17 	ldw	r4,-344(fp)
  81f8c8:	e0ffb317 	ldw	r3,-308(fp)
  81f8cc:	20c7c83a 	sub	r3,r4,r3
  81f8d0:	10c00015 	stw	r3,0(r2)
  81f8d4:	e0bfa517 	ldw	r2,-364(fp)
  81f8d8:	10801004 	addi	r2,r2,64
  81f8dc:	e13fab17 	ldw	r4,-340(fp)
  81f8e0:	e0ffb217 	ldw	r3,-312(fp)
  81f8e4:	20c7883a 	add	r3,r4,r3
  81f8e8:	10c00015 	stw	r3,0(r2)
  81f8ec:	e0bfa517 	ldw	r2,-364(fp)
  81f8f0:	10802804 	addi	r2,r2,160
  81f8f4:	e13fab17 	ldw	r4,-340(fp)
  81f8f8:	e0ffb217 	ldw	r3,-312(fp)
  81f8fc:	20c7c83a 	sub	r3,r4,r3
  81f900:	10c00015 	stw	r3,0(r2)
  81f904:	e0bfa517 	ldw	r2,-364(fp)
  81f908:	10801804 	addi	r2,r2,96
  81f90c:	e13fac17 	ldw	r4,-336(fp)
  81f910:	e0ffb117 	ldw	r3,-316(fp)
  81f914:	20c7883a 	add	r3,r4,r3
  81f918:	10c00015 	stw	r3,0(r2)
  81f91c:	e0bfa517 	ldw	r2,-364(fp)
  81f920:	10802004 	addi	r2,r2,128
  81f924:	e13fac17 	ldw	r4,-336(fp)
  81f928:	e0ffb117 	ldw	r3,-316(fp)
  81f92c:	20c7c83a 	sub	r3,r4,r3
  81f930:	10c00015 	stw	r3,0(r2)
  81f934:	e0bfa317 	ldw	r2,-372(fp)
  81f938:	10800084 	addi	r2,r2,2
  81f93c:	e0bfa315 	stw	r2,-372(fp)
  81f940:	e0bfa417 	ldw	r2,-368(fp)
  81f944:	10800104 	addi	r2,r2,4
  81f948:	e0bfa415 	stw	r2,-368(fp)
  81f94c:	e0bfa517 	ldw	r2,-364(fp)
  81f950:	10800104 	addi	r2,r2,4
  81f954:	e0bfa515 	stw	r2,-364(fp)
  81f958:	e0bfa617 	ldw	r2,-360(fp)
  81f95c:	10bfffc4 	addi	r2,r2,-1
  81f960:	e0bfa615 	stw	r2,-360(fp)
  81f964:	e0bfa617 	ldw	r2,-360(fp)
  81f968:	00be9416 	blt	zero,r2,81f3bc <__alt_mem_epcs_flash_controller_0+0xff8163bc>
  81f96c:	e0bfbc04 	addi	r2,fp,-272
  81f970:	e0bfa515 	stw	r2,-364(fp)
  81f974:	e03fa615 	stw	zero,-360(fp)
  81f978:	00013106 	br	81fe40 <jpeg_idct_ifast+0xadc>
  81f97c:	e0bfa617 	ldw	r2,-360(fp)
  81f980:	1085883a 	add	r2,r2,r2
  81f984:	1085883a 	add	r2,r2,r2
  81f988:	1007883a 	mov	r3,r2
  81f98c:	e0bfff17 	ldw	r2,-4(fp)
  81f990:	10c5883a 	add	r2,r2,r3
  81f994:	10c00017 	ldw	r3,0(r2)
  81f998:	e0800217 	ldw	r2,8(fp)
  81f99c:	1885883a 	add	r2,r3,r2
  81f9a0:	e0bfba15 	stw	r2,-280(fp)
  81f9a4:	e0bfa517 	ldw	r2,-364(fp)
  81f9a8:	10800017 	ldw	r2,0(r2)
  81f9ac:	10900404 	addi	r2,r2,16400
  81f9b0:	e0bfb915 	stw	r2,-284(fp)
  81f9b4:	e0bfa517 	ldw	r2,-364(fp)
  81f9b8:	10800104 	addi	r2,r2,4
  81f9bc:	10800017 	ldw	r2,0(r2)
  81f9c0:	1000421e 	bne	r2,zero,81facc <jpeg_idct_ifast+0x768>
  81f9c4:	e0bfa517 	ldw	r2,-364(fp)
  81f9c8:	10800204 	addi	r2,r2,8
  81f9cc:	10800017 	ldw	r2,0(r2)
  81f9d0:	10003e1e 	bne	r2,zero,81facc <jpeg_idct_ifast+0x768>
  81f9d4:	e0bfa517 	ldw	r2,-364(fp)
  81f9d8:	10800304 	addi	r2,r2,12
  81f9dc:	10800017 	ldw	r2,0(r2)
  81f9e0:	10003a1e 	bne	r2,zero,81facc <jpeg_idct_ifast+0x768>
  81f9e4:	e0bfa517 	ldw	r2,-364(fp)
  81f9e8:	10800404 	addi	r2,r2,16
  81f9ec:	10800017 	ldw	r2,0(r2)
  81f9f0:	1000361e 	bne	r2,zero,81facc <jpeg_idct_ifast+0x768>
  81f9f4:	e0bfa517 	ldw	r2,-364(fp)
  81f9f8:	10800504 	addi	r2,r2,20
  81f9fc:	10800017 	ldw	r2,0(r2)
  81fa00:	1000321e 	bne	r2,zero,81facc <jpeg_idct_ifast+0x768>
  81fa04:	e0bfa517 	ldw	r2,-364(fp)
  81fa08:	10800604 	addi	r2,r2,24
  81fa0c:	10800017 	ldw	r2,0(r2)
  81fa10:	10002e1e 	bne	r2,zero,81facc <jpeg_idct_ifast+0x768>
  81fa14:	e0bfa517 	ldw	r2,-364(fp)
  81fa18:	10800704 	addi	r2,r2,28
  81fa1c:	10800017 	ldw	r2,0(r2)
  81fa20:	10002a1e 	bne	r2,zero,81facc <jpeg_idct_ifast+0x768>
  81fa24:	e0bfb917 	ldw	r2,-284(fp)
  81fa28:	1005d17a 	srai	r2,r2,5
  81fa2c:	1080ffcc 	andi	r2,r2,1023
  81fa30:	e0ffa717 	ldw	r3,-356(fp)
  81fa34:	1885883a 	add	r2,r3,r2
  81fa38:	10800003 	ldbu	r2,0(r2)
  81fa3c:	e0bfbb05 	stb	r2,-276(fp)
  81fa40:	e0bfba17 	ldw	r2,-280(fp)
  81fa44:	e0ffbb03 	ldbu	r3,-276(fp)
  81fa48:	10c00005 	stb	r3,0(r2)
  81fa4c:	e0bfba17 	ldw	r2,-280(fp)
  81fa50:	10800044 	addi	r2,r2,1
  81fa54:	e0ffbb03 	ldbu	r3,-276(fp)
  81fa58:	10c00005 	stb	r3,0(r2)
  81fa5c:	e0bfba17 	ldw	r2,-280(fp)
  81fa60:	10800084 	addi	r2,r2,2
  81fa64:	e0ffbb03 	ldbu	r3,-276(fp)
  81fa68:	10c00005 	stb	r3,0(r2)
  81fa6c:	e0bfba17 	ldw	r2,-280(fp)
  81fa70:	108000c4 	addi	r2,r2,3
  81fa74:	e0ffbb03 	ldbu	r3,-276(fp)
  81fa78:	10c00005 	stb	r3,0(r2)
  81fa7c:	e0bfba17 	ldw	r2,-280(fp)
  81fa80:	10800104 	addi	r2,r2,4
  81fa84:	e0ffbb03 	ldbu	r3,-276(fp)
  81fa88:	10c00005 	stb	r3,0(r2)
  81fa8c:	e0bfba17 	ldw	r2,-280(fp)
  81fa90:	10800144 	addi	r2,r2,5
  81fa94:	e0ffbb03 	ldbu	r3,-276(fp)
  81fa98:	10c00005 	stb	r3,0(r2)
  81fa9c:	e0bfba17 	ldw	r2,-280(fp)
  81faa0:	10800184 	addi	r2,r2,6
  81faa4:	e0ffbb03 	ldbu	r3,-276(fp)
  81faa8:	10c00005 	stb	r3,0(r2)
  81faac:	e0bfba17 	ldw	r2,-280(fp)
  81fab0:	108001c4 	addi	r2,r2,7
  81fab4:	e0ffbb03 	ldbu	r3,-276(fp)
  81fab8:	10c00005 	stb	r3,0(r2)
  81fabc:	e0bfa517 	ldw	r2,-364(fp)
  81fac0:	10800804 	addi	r2,r2,32
  81fac4:	e0bfa515 	stw	r2,-364(fp)
  81fac8:	0000da06 	br	81fe34 <jpeg_idct_ifast+0xad0>
  81facc:	e0bfa517 	ldw	r2,-364(fp)
  81fad0:	10800404 	addi	r2,r2,16
  81fad4:	10c00017 	ldw	r3,0(r2)
  81fad8:	e0bfb917 	ldw	r2,-284(fp)
  81fadc:	1885883a 	add	r2,r3,r2
  81fae0:	e0bfad15 	stw	r2,-332(fp)
  81fae4:	e0bfa517 	ldw	r2,-364(fp)
  81fae8:	10800404 	addi	r2,r2,16
  81faec:	10800017 	ldw	r2,0(r2)
  81faf0:	e0ffb917 	ldw	r3,-284(fp)
  81faf4:	1885c83a 	sub	r2,r3,r2
  81faf8:	e0bfae15 	stw	r2,-328(fp)
  81fafc:	e0bfa517 	ldw	r2,-364(fp)
  81fb00:	10800204 	addi	r2,r2,8
  81fb04:	10c00017 	ldw	r3,0(r2)
  81fb08:	e0bfa517 	ldw	r2,-364(fp)
  81fb0c:	10800604 	addi	r2,r2,24
  81fb10:	10800017 	ldw	r2,0(r2)
  81fb14:	1885883a 	add	r2,r3,r2
  81fb18:	e0bfaf15 	stw	r2,-324(fp)
  81fb1c:	e0bfa517 	ldw	r2,-364(fp)
  81fb20:	10800204 	addi	r2,r2,8
  81fb24:	10c00017 	ldw	r3,0(r2)
  81fb28:	e0bfa517 	ldw	r2,-364(fp)
  81fb2c:	10800604 	addi	r2,r2,24
  81fb30:	10800017 	ldw	r2,0(r2)
  81fb34:	1885c83a 	sub	r2,r3,r2
  81fb38:	01405a84 	movi	r5,362
  81fb3c:	1009883a 	mov	r4,r2
  81fb40:	08305040 	call	830504 <__mulsi3>
  81fb44:	1007d23a 	srai	r3,r2,8
  81fb48:	e0bfaf17 	ldw	r2,-324(fp)
  81fb4c:	1885c83a 	sub	r2,r3,r2
  81fb50:	e0bfb015 	stw	r2,-320(fp)
  81fb54:	e0ffad17 	ldw	r3,-332(fp)
  81fb58:	e0bfaf17 	ldw	r2,-324(fp)
  81fb5c:	1885883a 	add	r2,r3,r2
  81fb60:	e0bfa915 	stw	r2,-348(fp)
  81fb64:	e0ffad17 	ldw	r3,-332(fp)
  81fb68:	e0bfaf17 	ldw	r2,-324(fp)
  81fb6c:	1885c83a 	sub	r2,r3,r2
  81fb70:	e0bfac15 	stw	r2,-336(fp)
  81fb74:	e0ffae17 	ldw	r3,-328(fp)
  81fb78:	e0bfb017 	ldw	r2,-320(fp)
  81fb7c:	1885883a 	add	r2,r3,r2
  81fb80:	e0bfaa15 	stw	r2,-344(fp)
  81fb84:	e0ffae17 	ldw	r3,-328(fp)
  81fb88:	e0bfb017 	ldw	r2,-320(fp)
  81fb8c:	1885c83a 	sub	r2,r3,r2
  81fb90:	e0bfab15 	stw	r2,-340(fp)
  81fb94:	e0bfa517 	ldw	r2,-364(fp)
  81fb98:	10800504 	addi	r2,r2,20
  81fb9c:	10c00017 	ldw	r3,0(r2)
  81fba0:	e0bfa517 	ldw	r2,-364(fp)
  81fba4:	10800304 	addi	r2,r2,12
  81fba8:	10800017 	ldw	r2,0(r2)
  81fbac:	1885883a 	add	r2,r3,r2
  81fbb0:	e0bfb515 	stw	r2,-300(fp)
  81fbb4:	e0bfa517 	ldw	r2,-364(fp)
  81fbb8:	10800504 	addi	r2,r2,20
  81fbbc:	10c00017 	ldw	r3,0(r2)
  81fbc0:	e0bfa517 	ldw	r2,-364(fp)
  81fbc4:	10800304 	addi	r2,r2,12
  81fbc8:	10800017 	ldw	r2,0(r2)
  81fbcc:	1885c83a 	sub	r2,r3,r2
  81fbd0:	e0bfb615 	stw	r2,-296(fp)
  81fbd4:	e0bfa517 	ldw	r2,-364(fp)
  81fbd8:	10800104 	addi	r2,r2,4
  81fbdc:	10c00017 	ldw	r3,0(r2)
  81fbe0:	e0bfa517 	ldw	r2,-364(fp)
  81fbe4:	10800704 	addi	r2,r2,28
  81fbe8:	10800017 	ldw	r2,0(r2)
  81fbec:	1885883a 	add	r2,r3,r2
  81fbf0:	e0bfb715 	stw	r2,-292(fp)
  81fbf4:	e0bfa517 	ldw	r2,-364(fp)
  81fbf8:	10800104 	addi	r2,r2,4
  81fbfc:	10c00017 	ldw	r3,0(r2)
  81fc00:	e0bfa517 	ldw	r2,-364(fp)
  81fc04:	10800704 	addi	r2,r2,28
  81fc08:	10800017 	ldw	r2,0(r2)
  81fc0c:	1885c83a 	sub	r2,r3,r2
  81fc10:	e0bfb815 	stw	r2,-288(fp)
  81fc14:	e0ffb717 	ldw	r3,-292(fp)
  81fc18:	e0bfb517 	ldw	r2,-300(fp)
  81fc1c:	1885883a 	add	r2,r3,r2
  81fc20:	e0bfb415 	stw	r2,-304(fp)
  81fc24:	e0ffb717 	ldw	r3,-292(fp)
  81fc28:	e0bfb517 	ldw	r2,-300(fp)
  81fc2c:	1885c83a 	sub	r2,r3,r2
  81fc30:	01405a84 	movi	r5,362
  81fc34:	1009883a 	mov	r4,r2
  81fc38:	08305040 	call	830504 <__mulsi3>
  81fc3c:	1005d23a 	srai	r2,r2,8
  81fc40:	e0bfae15 	stw	r2,-328(fp)
  81fc44:	e0ffb617 	ldw	r3,-296(fp)
  81fc48:	e0bfb817 	ldw	r2,-288(fp)
  81fc4c:	1885883a 	add	r2,r3,r2
  81fc50:	01407644 	movi	r5,473
  81fc54:	1009883a 	mov	r4,r2
  81fc58:	08305040 	call	830504 <__mulsi3>
  81fc5c:	1005d23a 	srai	r2,r2,8
  81fc60:	e0bfb915 	stw	r2,-284(fp)
  81fc64:	01404544 	movi	r5,277
  81fc68:	e13fb817 	ldw	r4,-288(fp)
  81fc6c:	08305040 	call	830504 <__mulsi3>
  81fc70:	1005d23a 	srai	r2,r2,8
  81fc74:	e0ffb917 	ldw	r3,-284(fp)
  81fc78:	1885c83a 	sub	r2,r3,r2
  81fc7c:	e0bfad15 	stw	r2,-332(fp)
  81fc80:	0140a744 	movi	r5,669
  81fc84:	e13fb617 	ldw	r4,-296(fp)
  81fc88:	08305040 	call	830504 <__mulsi3>
  81fc8c:	1005d23a 	srai	r2,r2,8
  81fc90:	e0ffb917 	ldw	r3,-284(fp)
  81fc94:	1885c83a 	sub	r2,r3,r2
  81fc98:	e0bfb015 	stw	r2,-320(fp)
  81fc9c:	e0ffb017 	ldw	r3,-320(fp)
  81fca0:	e0bfb417 	ldw	r2,-304(fp)
  81fca4:	1885c83a 	sub	r2,r3,r2
  81fca8:	e0bfb315 	stw	r2,-308(fp)
  81fcac:	e0ffae17 	ldw	r3,-328(fp)
  81fcb0:	e0bfb317 	ldw	r2,-308(fp)
  81fcb4:	1885c83a 	sub	r2,r3,r2
  81fcb8:	e0bfb215 	stw	r2,-312(fp)
  81fcbc:	e0ffad17 	ldw	r3,-332(fp)
  81fcc0:	e0bfb217 	ldw	r2,-312(fp)
  81fcc4:	1885c83a 	sub	r2,r3,r2
  81fcc8:	e0bfb115 	stw	r2,-316(fp)
  81fccc:	e0ffa917 	ldw	r3,-348(fp)
  81fcd0:	e0bfb417 	ldw	r2,-304(fp)
  81fcd4:	1885883a 	add	r2,r3,r2
  81fcd8:	1005d17a 	srai	r2,r2,5
  81fcdc:	1080ffcc 	andi	r2,r2,1023
  81fce0:	e0ffa717 	ldw	r3,-356(fp)
  81fce4:	1885883a 	add	r2,r3,r2
  81fce8:	10c00003 	ldbu	r3,0(r2)
  81fcec:	e0bfba17 	ldw	r2,-280(fp)
  81fcf0:	10c00005 	stb	r3,0(r2)
  81fcf4:	e0bfba17 	ldw	r2,-280(fp)
  81fcf8:	108001c4 	addi	r2,r2,7
  81fcfc:	e13fa917 	ldw	r4,-348(fp)
  81fd00:	e0ffb417 	ldw	r3,-304(fp)
  81fd04:	20c7c83a 	sub	r3,r4,r3
  81fd08:	1807d17a 	srai	r3,r3,5
  81fd0c:	18c0ffcc 	andi	r3,r3,1023
  81fd10:	e13fa717 	ldw	r4,-356(fp)
  81fd14:	20c7883a 	add	r3,r4,r3
  81fd18:	18c00003 	ldbu	r3,0(r3)
  81fd1c:	10c00005 	stb	r3,0(r2)
  81fd20:	e0bfba17 	ldw	r2,-280(fp)
  81fd24:	10800044 	addi	r2,r2,1
  81fd28:	e13faa17 	ldw	r4,-344(fp)
  81fd2c:	e0ffb317 	ldw	r3,-308(fp)
  81fd30:	20c7883a 	add	r3,r4,r3
  81fd34:	1807d17a 	srai	r3,r3,5
  81fd38:	18c0ffcc 	andi	r3,r3,1023
  81fd3c:	e13fa717 	ldw	r4,-356(fp)
  81fd40:	20c7883a 	add	r3,r4,r3
  81fd44:	18c00003 	ldbu	r3,0(r3)
  81fd48:	10c00005 	stb	r3,0(r2)
  81fd4c:	e0bfba17 	ldw	r2,-280(fp)
  81fd50:	10800184 	addi	r2,r2,6
  81fd54:	e13faa17 	ldw	r4,-344(fp)
  81fd58:	e0ffb317 	ldw	r3,-308(fp)
  81fd5c:	20c7c83a 	sub	r3,r4,r3
  81fd60:	1807d17a 	srai	r3,r3,5
  81fd64:	18c0ffcc 	andi	r3,r3,1023
  81fd68:	e13fa717 	ldw	r4,-356(fp)
  81fd6c:	20c7883a 	add	r3,r4,r3
  81fd70:	18c00003 	ldbu	r3,0(r3)
  81fd74:	10c00005 	stb	r3,0(r2)
  81fd78:	e0bfba17 	ldw	r2,-280(fp)
  81fd7c:	10800084 	addi	r2,r2,2
  81fd80:	e13fab17 	ldw	r4,-340(fp)
  81fd84:	e0ffb217 	ldw	r3,-312(fp)
  81fd88:	20c7883a 	add	r3,r4,r3
  81fd8c:	1807d17a 	srai	r3,r3,5
  81fd90:	18c0ffcc 	andi	r3,r3,1023
  81fd94:	e13fa717 	ldw	r4,-356(fp)
  81fd98:	20c7883a 	add	r3,r4,r3
  81fd9c:	18c00003 	ldbu	r3,0(r3)
  81fda0:	10c00005 	stb	r3,0(r2)
  81fda4:	e0bfba17 	ldw	r2,-280(fp)
  81fda8:	10800144 	addi	r2,r2,5
  81fdac:	e13fab17 	ldw	r4,-340(fp)
  81fdb0:	e0ffb217 	ldw	r3,-312(fp)
  81fdb4:	20c7c83a 	sub	r3,r4,r3
  81fdb8:	1807d17a 	srai	r3,r3,5
  81fdbc:	18c0ffcc 	andi	r3,r3,1023
  81fdc0:	e13fa717 	ldw	r4,-356(fp)
  81fdc4:	20c7883a 	add	r3,r4,r3
  81fdc8:	18c00003 	ldbu	r3,0(r3)
  81fdcc:	10c00005 	stb	r3,0(r2)
  81fdd0:	e0bfba17 	ldw	r2,-280(fp)
  81fdd4:	108000c4 	addi	r2,r2,3
  81fdd8:	e13fac17 	ldw	r4,-336(fp)
  81fddc:	e0ffb117 	ldw	r3,-316(fp)
  81fde0:	20c7883a 	add	r3,r4,r3
  81fde4:	1807d17a 	srai	r3,r3,5
  81fde8:	18c0ffcc 	andi	r3,r3,1023
  81fdec:	e13fa717 	ldw	r4,-356(fp)
  81fdf0:	20c7883a 	add	r3,r4,r3
  81fdf4:	18c00003 	ldbu	r3,0(r3)
  81fdf8:	10c00005 	stb	r3,0(r2)
  81fdfc:	e0bfba17 	ldw	r2,-280(fp)
  81fe00:	10800104 	addi	r2,r2,4
  81fe04:	e13fac17 	ldw	r4,-336(fp)
  81fe08:	e0ffb117 	ldw	r3,-316(fp)
  81fe0c:	20c7c83a 	sub	r3,r4,r3
  81fe10:	1807d17a 	srai	r3,r3,5
  81fe14:	18c0ffcc 	andi	r3,r3,1023
  81fe18:	e13fa717 	ldw	r4,-356(fp)
  81fe1c:	20c7883a 	add	r3,r4,r3
  81fe20:	18c00003 	ldbu	r3,0(r3)
  81fe24:	10c00005 	stb	r3,0(r2)
  81fe28:	e0bfa517 	ldw	r2,-364(fp)
  81fe2c:	10800804 	addi	r2,r2,32
  81fe30:	e0bfa515 	stw	r2,-364(fp)
  81fe34:	e0bfa617 	ldw	r2,-360(fp)
  81fe38:	10800044 	addi	r2,r2,1
  81fe3c:	e0bfa615 	stw	r2,-360(fp)
  81fe40:	e0bfa617 	ldw	r2,-360(fp)
  81fe44:	10800210 	cmplti	r2,r2,8
  81fe48:	103ecc1e 	bne	r2,zero,81f97c <__alt_mem_epcs_flash_controller_0+0xff81697c>
  81fe4c:	0001883a 	nop
  81fe50:	e037883a 	mov	sp,fp
  81fe54:	dfc00117 	ldw	ra,4(sp)
  81fe58:	df000017 	ldw	fp,0(sp)
  81fe5c:	dec00204 	addi	sp,sp,8
  81fe60:	f800283a 	ret

0081fe64 <jpeg_idct_islow>:
  81fe64:	deffa704 	addi	sp,sp,-356
  81fe68:	dfc05815 	stw	ra,352(sp)
  81fe6c:	df005715 	stw	fp,348(sp)
  81fe70:	df005704 	addi	fp,sp,348
  81fe74:	e13ffc15 	stw	r4,-16(fp)
  81fe78:	e17ffd15 	stw	r5,-12(fp)
  81fe7c:	e1bffe15 	stw	r6,-8(fp)
  81fe80:	e1ffff15 	stw	r7,-4(fp)
  81fe84:	e0bffc17 	ldw	r2,-16(fp)
  81fe88:	10805417 	ldw	r2,336(r2)
  81fe8c:	10bfa004 	addi	r2,r2,-384
  81fe90:	e0bfad15 	stw	r2,-332(fp)
  81fe94:	e0bffe17 	ldw	r2,-8(fp)
  81fe98:	e0bfa915 	stw	r2,-348(fp)
  81fe9c:	e0bffd17 	ldw	r2,-12(fp)
  81fea0:	10801517 	ldw	r2,84(r2)
  81fea4:	e0bfaa15 	stw	r2,-344(fp)
  81fea8:	e0bfbc04 	addi	r2,fp,-272
  81feac:	e0bfab15 	stw	r2,-340(fp)
  81feb0:	00800204 	movi	r2,8
  81feb4:	e0bfac15 	stw	r2,-336(fp)
  81feb8:	00019b06 	br	820528 <jpeg_idct_islow+0x6c4>
  81febc:	e0bfa917 	ldw	r2,-348(fp)
  81fec0:	10800404 	addi	r2,r2,16
  81fec4:	1080000b 	ldhu	r2,0(r2)
  81fec8:	10bfffcc 	andi	r2,r2,65535
  81fecc:	10a0001c 	xori	r2,r2,32768
  81fed0:	10a00004 	addi	r2,r2,-32768
  81fed4:	1000601e 	bne	r2,zero,820058 <jpeg_idct_islow+0x1f4>
  81fed8:	e0bfa917 	ldw	r2,-348(fp)
  81fedc:	10800804 	addi	r2,r2,32
  81fee0:	1080000b 	ldhu	r2,0(r2)
  81fee4:	10bfffcc 	andi	r2,r2,65535
  81fee8:	10a0001c 	xori	r2,r2,32768
  81feec:	10a00004 	addi	r2,r2,-32768
  81fef0:	1000591e 	bne	r2,zero,820058 <jpeg_idct_islow+0x1f4>
  81fef4:	e0bfa917 	ldw	r2,-348(fp)
  81fef8:	10800c04 	addi	r2,r2,48
  81fefc:	1080000b 	ldhu	r2,0(r2)
  81ff00:	10bfffcc 	andi	r2,r2,65535
  81ff04:	10a0001c 	xori	r2,r2,32768
  81ff08:	10a00004 	addi	r2,r2,-32768
  81ff0c:	1000521e 	bne	r2,zero,820058 <jpeg_idct_islow+0x1f4>
  81ff10:	e0bfa917 	ldw	r2,-348(fp)
  81ff14:	10801004 	addi	r2,r2,64
  81ff18:	1080000b 	ldhu	r2,0(r2)
  81ff1c:	10bfffcc 	andi	r2,r2,65535
  81ff20:	10a0001c 	xori	r2,r2,32768
  81ff24:	10a00004 	addi	r2,r2,-32768
  81ff28:	10004b1e 	bne	r2,zero,820058 <jpeg_idct_islow+0x1f4>
  81ff2c:	e0bfa917 	ldw	r2,-348(fp)
  81ff30:	10801404 	addi	r2,r2,80
  81ff34:	1080000b 	ldhu	r2,0(r2)
  81ff38:	10bfffcc 	andi	r2,r2,65535
  81ff3c:	10a0001c 	xori	r2,r2,32768
  81ff40:	10a00004 	addi	r2,r2,-32768
  81ff44:	1000441e 	bne	r2,zero,820058 <jpeg_idct_islow+0x1f4>
  81ff48:	e0bfa917 	ldw	r2,-348(fp)
  81ff4c:	10801804 	addi	r2,r2,96
  81ff50:	1080000b 	ldhu	r2,0(r2)
  81ff54:	10bfffcc 	andi	r2,r2,65535
  81ff58:	10a0001c 	xori	r2,r2,32768
  81ff5c:	10a00004 	addi	r2,r2,-32768
  81ff60:	10003d1e 	bne	r2,zero,820058 <jpeg_idct_islow+0x1f4>
  81ff64:	e0bfa917 	ldw	r2,-348(fp)
  81ff68:	10801c04 	addi	r2,r2,112
  81ff6c:	1080000b 	ldhu	r2,0(r2)
  81ff70:	10bfffcc 	andi	r2,r2,65535
  81ff74:	10a0001c 	xori	r2,r2,32768
  81ff78:	10a00004 	addi	r2,r2,-32768
  81ff7c:	1000361e 	bne	r2,zero,820058 <jpeg_idct_islow+0x1f4>
  81ff80:	e0bfa917 	ldw	r2,-348(fp)
  81ff84:	1080000b 	ldhu	r2,0(r2)
  81ff88:	10ffffcc 	andi	r3,r2,65535
  81ff8c:	18e0001c 	xori	r3,r3,32768
  81ff90:	18e00004 	addi	r3,r3,-32768
  81ff94:	e0bfaa17 	ldw	r2,-344(fp)
  81ff98:	10800017 	ldw	r2,0(r2)
  81ff9c:	100b883a 	mov	r5,r2
  81ffa0:	1809883a 	mov	r4,r3
  81ffa4:	08305040 	call	830504 <__mulsi3>
  81ffa8:	1085883a 	add	r2,r2,r2
  81ffac:	1085883a 	add	r2,r2,r2
  81ffb0:	e0bfae15 	stw	r2,-328(fp)
  81ffb4:	e0bfab17 	ldw	r2,-340(fp)
  81ffb8:	e0ffae17 	ldw	r3,-328(fp)
  81ffbc:	10c00015 	stw	r3,0(r2)
  81ffc0:	e0bfab17 	ldw	r2,-340(fp)
  81ffc4:	10800804 	addi	r2,r2,32
  81ffc8:	e0ffae17 	ldw	r3,-328(fp)
  81ffcc:	10c00015 	stw	r3,0(r2)
  81ffd0:	e0bfab17 	ldw	r2,-340(fp)
  81ffd4:	10801004 	addi	r2,r2,64
  81ffd8:	e0ffae17 	ldw	r3,-328(fp)
  81ffdc:	10c00015 	stw	r3,0(r2)
  81ffe0:	e0bfab17 	ldw	r2,-340(fp)
  81ffe4:	10801804 	addi	r2,r2,96
  81ffe8:	e0ffae17 	ldw	r3,-328(fp)
  81ffec:	10c00015 	stw	r3,0(r2)
  81fff0:	e0bfab17 	ldw	r2,-340(fp)
  81fff4:	10802004 	addi	r2,r2,128
  81fff8:	e0ffae17 	ldw	r3,-328(fp)
  81fffc:	10c00015 	stw	r3,0(r2)
  820000:	e0bfab17 	ldw	r2,-340(fp)
  820004:	10802804 	addi	r2,r2,160
  820008:	e0ffae17 	ldw	r3,-328(fp)
  82000c:	10c00015 	stw	r3,0(r2)
  820010:	e0bfab17 	ldw	r2,-340(fp)
  820014:	10803004 	addi	r2,r2,192
  820018:	e0ffae17 	ldw	r3,-328(fp)
  82001c:	10c00015 	stw	r3,0(r2)
  820020:	e0bfab17 	ldw	r2,-340(fp)
  820024:	10803804 	addi	r2,r2,224
  820028:	e0ffae17 	ldw	r3,-328(fp)
  82002c:	10c00015 	stw	r3,0(r2)
  820030:	e0bfa917 	ldw	r2,-348(fp)
  820034:	10800084 	addi	r2,r2,2
  820038:	e0bfa915 	stw	r2,-348(fp)
  82003c:	e0bfaa17 	ldw	r2,-344(fp)
  820040:	10800104 	addi	r2,r2,4
  820044:	e0bfaa15 	stw	r2,-344(fp)
  820048:	e0bfab17 	ldw	r2,-340(fp)
  82004c:	10800104 	addi	r2,r2,4
  820050:	e0bfab15 	stw	r2,-340(fp)
  820054:	00013106 	br	82051c <jpeg_idct_islow+0x6b8>
  820058:	e0bfa917 	ldw	r2,-348(fp)
  82005c:	1080000b 	ldhu	r2,0(r2)
  820060:	10ffffcc 	andi	r3,r2,65535
  820064:	18e0001c 	xori	r3,r3,32768
  820068:	18e00004 	addi	r3,r3,-32768
  82006c:	e0bfaa17 	ldw	r2,-344(fp)
  820070:	10800017 	ldw	r2,0(r2)
  820074:	100b883a 	mov	r5,r2
  820078:	1809883a 	mov	r4,r3
  82007c:	08305040 	call	830504 <__mulsi3>
  820080:	e0bfaf15 	stw	r2,-324(fp)
  820084:	e0bfa917 	ldw	r2,-348(fp)
  820088:	10801004 	addi	r2,r2,64
  82008c:	1080000b 	ldhu	r2,0(r2)
  820090:	10ffffcc 	andi	r3,r2,65535
  820094:	18e0001c 	xori	r3,r3,32768
  820098:	18e00004 	addi	r3,r3,-32768
  82009c:	e0bfaa17 	ldw	r2,-344(fp)
  8200a0:	10802004 	addi	r2,r2,128
  8200a4:	10800017 	ldw	r2,0(r2)
  8200a8:	100b883a 	mov	r5,r2
  8200ac:	1809883a 	mov	r4,r3
  8200b0:	08305040 	call	830504 <__mulsi3>
  8200b4:	e0bfb015 	stw	r2,-320(fp)
  8200b8:	e0bfaf17 	ldw	r2,-324(fp)
  8200bc:	1004937a 	slli	r2,r2,13
  8200c0:	e0bfaf15 	stw	r2,-324(fp)
  8200c4:	e0bfb017 	ldw	r2,-320(fp)
  8200c8:	1004937a 	slli	r2,r2,13
  8200cc:	e0bfb015 	stw	r2,-320(fp)
  8200d0:	e0bfaf17 	ldw	r2,-324(fp)
  8200d4:	10810004 	addi	r2,r2,1024
  8200d8:	e0bfaf15 	stw	r2,-324(fp)
  8200dc:	e0ffaf17 	ldw	r3,-324(fp)
  8200e0:	e0bfb017 	ldw	r2,-320(fp)
  8200e4:	1885883a 	add	r2,r3,r2
  8200e8:	e0bfb115 	stw	r2,-316(fp)
  8200ec:	e0ffaf17 	ldw	r3,-324(fp)
  8200f0:	e0bfb017 	ldw	r2,-320(fp)
  8200f4:	1885c83a 	sub	r2,r3,r2
  8200f8:	e0bfb215 	stw	r2,-312(fp)
  8200fc:	e0bfa917 	ldw	r2,-348(fp)
  820100:	10800804 	addi	r2,r2,32
  820104:	1080000b 	ldhu	r2,0(r2)
  820108:	10ffffcc 	andi	r3,r2,65535
  82010c:	18e0001c 	xori	r3,r3,32768
  820110:	18e00004 	addi	r3,r3,-32768
  820114:	e0bfaa17 	ldw	r2,-344(fp)
  820118:	10801004 	addi	r2,r2,64
  82011c:	10800017 	ldw	r2,0(r2)
  820120:	100b883a 	mov	r5,r2
  820124:	1809883a 	mov	r4,r3
  820128:	08305040 	call	830504 <__mulsi3>
  82012c:	e0bfaf15 	stw	r2,-324(fp)
  820130:	e0bfa917 	ldw	r2,-348(fp)
  820134:	10801804 	addi	r2,r2,96
  820138:	1080000b 	ldhu	r2,0(r2)
  82013c:	10ffffcc 	andi	r3,r2,65535
  820140:	18e0001c 	xori	r3,r3,32768
  820144:	18e00004 	addi	r3,r3,-32768
  820148:	e0bfaa17 	ldw	r2,-344(fp)
  82014c:	10803004 	addi	r2,r2,192
  820150:	10800017 	ldw	r2,0(r2)
  820154:	100b883a 	mov	r5,r2
  820158:	1809883a 	mov	r4,r3
  82015c:	08305040 	call	830504 <__mulsi3>
  820160:	e0bfb015 	stw	r2,-320(fp)
  820164:	e0ffaf17 	ldw	r3,-324(fp)
  820168:	e0bfb017 	ldw	r2,-320(fp)
  82016c:	1885883a 	add	r2,r3,r2
  820170:	01445444 	movi	r5,4433
  820174:	1009883a 	mov	r4,r2
  820178:	08305040 	call	830504 <__mulsi3>
  82017c:	e0bfb315 	stw	r2,-308(fp)
  820180:	01461f84 	movi	r5,6270
  820184:	e13faf17 	ldw	r4,-324(fp)
  820188:	08305040 	call	830504 <__mulsi3>
  82018c:	1007883a 	mov	r3,r2
  820190:	e0bfb317 	ldw	r2,-308(fp)
  820194:	1885883a 	add	r2,r3,r2
  820198:	e0bfb415 	stw	r2,-304(fp)
  82019c:	017137c4 	movi	r5,-15137
  8201a0:	e13fb017 	ldw	r4,-320(fp)
  8201a4:	08305040 	call	830504 <__mulsi3>
  8201a8:	1007883a 	mov	r3,r2
  8201ac:	e0bfb317 	ldw	r2,-308(fp)
  8201b0:	1885883a 	add	r2,r3,r2
  8201b4:	e0bfb515 	stw	r2,-300(fp)
  8201b8:	e0ffb117 	ldw	r3,-316(fp)
  8201bc:	e0bfb417 	ldw	r2,-304(fp)
  8201c0:	1885883a 	add	r2,r3,r2
  8201c4:	e0bfb615 	stw	r2,-296(fp)
  8201c8:	e0ffb117 	ldw	r3,-316(fp)
  8201cc:	e0bfb417 	ldw	r2,-304(fp)
  8201d0:	1885c83a 	sub	r2,r3,r2
  8201d4:	e0bfb715 	stw	r2,-292(fp)
  8201d8:	e0ffb217 	ldw	r3,-312(fp)
  8201dc:	e0bfb517 	ldw	r2,-300(fp)
  8201e0:	1885883a 	add	r2,r3,r2
  8201e4:	e0bfb815 	stw	r2,-288(fp)
  8201e8:	e0ffb217 	ldw	r3,-312(fp)
  8201ec:	e0bfb517 	ldw	r2,-300(fp)
  8201f0:	1885c83a 	sub	r2,r3,r2
  8201f4:	e0bfb915 	stw	r2,-284(fp)
  8201f8:	e0bfa917 	ldw	r2,-348(fp)
  8201fc:	10801c04 	addi	r2,r2,112
  820200:	1080000b 	ldhu	r2,0(r2)
  820204:	10ffffcc 	andi	r3,r2,65535
  820208:	18e0001c 	xori	r3,r3,32768
  82020c:	18e00004 	addi	r3,r3,-32768
  820210:	e0bfaa17 	ldw	r2,-344(fp)
  820214:	10803804 	addi	r2,r2,224
  820218:	10800017 	ldw	r2,0(r2)
  82021c:	100b883a 	mov	r5,r2
  820220:	1809883a 	mov	r4,r3
  820224:	08305040 	call	830504 <__mulsi3>
  820228:	e0bfb115 	stw	r2,-316(fp)
  82022c:	e0bfa917 	ldw	r2,-348(fp)
  820230:	10801404 	addi	r2,r2,80
  820234:	1080000b 	ldhu	r2,0(r2)
  820238:	10ffffcc 	andi	r3,r2,65535
  82023c:	18e0001c 	xori	r3,r3,32768
  820240:	18e00004 	addi	r3,r3,-32768
  820244:	e0bfaa17 	ldw	r2,-344(fp)
  820248:	10802804 	addi	r2,r2,160
  82024c:	10800017 	ldw	r2,0(r2)
  820250:	100b883a 	mov	r5,r2
  820254:	1809883a 	mov	r4,r3
  820258:	08305040 	call	830504 <__mulsi3>
  82025c:	e0bfb215 	stw	r2,-312(fp)
  820260:	e0bfa917 	ldw	r2,-348(fp)
  820264:	10800c04 	addi	r2,r2,48
  820268:	1080000b 	ldhu	r2,0(r2)
  82026c:	10ffffcc 	andi	r3,r2,65535
  820270:	18e0001c 	xori	r3,r3,32768
  820274:	18e00004 	addi	r3,r3,-32768
  820278:	e0bfaa17 	ldw	r2,-344(fp)
  82027c:	10801804 	addi	r2,r2,96
  820280:	10800017 	ldw	r2,0(r2)
  820284:	100b883a 	mov	r5,r2
  820288:	1809883a 	mov	r4,r3
  82028c:	08305040 	call	830504 <__mulsi3>
  820290:	e0bfb415 	stw	r2,-304(fp)
  820294:	e0bfa917 	ldw	r2,-348(fp)
  820298:	10800404 	addi	r2,r2,16
  82029c:	1080000b 	ldhu	r2,0(r2)
  8202a0:	10ffffcc 	andi	r3,r2,65535
  8202a4:	18e0001c 	xori	r3,r3,32768
  8202a8:	18e00004 	addi	r3,r3,-32768
  8202ac:	e0bfaa17 	ldw	r2,-344(fp)
  8202b0:	10800804 	addi	r2,r2,32
  8202b4:	10800017 	ldw	r2,0(r2)
  8202b8:	100b883a 	mov	r5,r2
  8202bc:	1809883a 	mov	r4,r3
  8202c0:	08305040 	call	830504 <__mulsi3>
  8202c4:	e0bfb515 	stw	r2,-300(fp)
  8202c8:	e0ffb117 	ldw	r3,-316(fp)
  8202cc:	e0bfb417 	ldw	r2,-304(fp)
  8202d0:	1885883a 	add	r2,r3,r2
  8202d4:	e0bfaf15 	stw	r2,-324(fp)
  8202d8:	e0ffb217 	ldw	r3,-312(fp)
  8202dc:	e0bfb517 	ldw	r2,-300(fp)
  8202e0:	1885883a 	add	r2,r3,r2
  8202e4:	e0bfb015 	stw	r2,-320(fp)
  8202e8:	e0ffaf17 	ldw	r3,-324(fp)
  8202ec:	e0bfb017 	ldw	r2,-320(fp)
  8202f0:	1885883a 	add	r2,r3,r2
  8202f4:	01496844 	movi	r5,9633
  8202f8:	1009883a 	mov	r4,r2
  8202fc:	08305040 	call	830504 <__mulsi3>
  820300:	e0bfb315 	stw	r2,-308(fp)
  820304:	01704ec4 	movi	r5,-16069
  820308:	e13faf17 	ldw	r4,-324(fp)
  82030c:	08305040 	call	830504 <__mulsi3>
  820310:	e0bfaf15 	stw	r2,-324(fp)
  820314:	017ce104 	movi	r5,-3196
  820318:	e13fb017 	ldw	r4,-320(fp)
  82031c:	08305040 	call	830504 <__mulsi3>
  820320:	e0bfb015 	stw	r2,-320(fp)
  820324:	e0ffaf17 	ldw	r3,-324(fp)
  820328:	e0bfb317 	ldw	r2,-308(fp)
  82032c:	1885883a 	add	r2,r3,r2
  820330:	e0bfaf15 	stw	r2,-324(fp)
  820334:	e0ffb017 	ldw	r3,-320(fp)
  820338:	e0bfb317 	ldw	r2,-308(fp)
  82033c:	1885883a 	add	r2,r3,r2
  820340:	e0bfb015 	stw	r2,-320(fp)
  820344:	e0ffb117 	ldw	r3,-316(fp)
  820348:	e0bfb517 	ldw	r2,-300(fp)
  82034c:	1885883a 	add	r2,r3,r2
  820350:	0178ccc4 	movi	r5,-7373
  820354:	1009883a 	mov	r4,r2
  820358:	08305040 	call	830504 <__mulsi3>
  82035c:	e0bfb315 	stw	r2,-308(fp)
  820360:	01426384 	movi	r5,2446
  820364:	e13fb117 	ldw	r4,-316(fp)
  820368:	08305040 	call	830504 <__mulsi3>
  82036c:	e0bfb115 	stw	r2,-316(fp)
  820370:	014c02c4 	movi	r5,12299
  820374:	e13fb517 	ldw	r4,-300(fp)
  820378:	08305040 	call	830504 <__mulsi3>
  82037c:	e0bfb515 	stw	r2,-300(fp)
  820380:	e0ffb317 	ldw	r3,-308(fp)
  820384:	e0bfaf17 	ldw	r2,-324(fp)
  820388:	1885883a 	add	r2,r3,r2
  82038c:	e0ffb117 	ldw	r3,-316(fp)
  820390:	1885883a 	add	r2,r3,r2
  820394:	e0bfb115 	stw	r2,-316(fp)
  820398:	e0ffb317 	ldw	r3,-308(fp)
  82039c:	e0bfb017 	ldw	r2,-320(fp)
  8203a0:	1885883a 	add	r2,r3,r2
  8203a4:	e0ffb517 	ldw	r3,-300(fp)
  8203a8:	1885883a 	add	r2,r3,r2
  8203ac:	e0bfb515 	stw	r2,-300(fp)
  8203b0:	e0ffb217 	ldw	r3,-312(fp)
  8203b4:	e0bfb417 	ldw	r2,-304(fp)
  8203b8:	1885883a 	add	r2,r3,r2
  8203bc:	016b7f44 	movi	r5,-20995
  8203c0:	1009883a 	mov	r4,r2
  8203c4:	08305040 	call	830504 <__mulsi3>
  8203c8:	e0bfb315 	stw	r2,-308(fp)
  8203cc:	01506cc4 	movi	r5,16819
  8203d0:	e13fb217 	ldw	r4,-312(fp)
  8203d4:	08305040 	call	830504 <__mulsi3>
  8203d8:	e0bfb215 	stw	r2,-312(fp)
  8203dc:	01589504 	movi	r5,25172
  8203e0:	e13fb417 	ldw	r4,-304(fp)
  8203e4:	08305040 	call	830504 <__mulsi3>
  8203e8:	e0bfb415 	stw	r2,-304(fp)
  8203ec:	e0ffb317 	ldw	r3,-308(fp)
  8203f0:	e0bfb017 	ldw	r2,-320(fp)
  8203f4:	1885883a 	add	r2,r3,r2
  8203f8:	e0ffb217 	ldw	r3,-312(fp)
  8203fc:	1885883a 	add	r2,r3,r2
  820400:	e0bfb215 	stw	r2,-312(fp)
  820404:	e0ffb317 	ldw	r3,-308(fp)
  820408:	e0bfaf17 	ldw	r2,-324(fp)
  82040c:	1885883a 	add	r2,r3,r2
  820410:	e0ffb417 	ldw	r3,-304(fp)
  820414:	1885883a 	add	r2,r3,r2
  820418:	e0bfb415 	stw	r2,-304(fp)
  82041c:	e0ffb617 	ldw	r3,-296(fp)
  820420:	e0bfb517 	ldw	r2,-300(fp)
  820424:	1885883a 	add	r2,r3,r2
  820428:	1007d2fa 	srai	r3,r2,11
  82042c:	e0bfab17 	ldw	r2,-340(fp)
  820430:	10c00015 	stw	r3,0(r2)
  820434:	e0bfab17 	ldw	r2,-340(fp)
  820438:	10803804 	addi	r2,r2,224
  82043c:	e13fb617 	ldw	r4,-296(fp)
  820440:	e0ffb517 	ldw	r3,-300(fp)
  820444:	20c7c83a 	sub	r3,r4,r3
  820448:	1807d2fa 	srai	r3,r3,11
  82044c:	10c00015 	stw	r3,0(r2)
  820450:	e0bfab17 	ldw	r2,-340(fp)
  820454:	10800804 	addi	r2,r2,32
  820458:	e13fb817 	ldw	r4,-288(fp)
  82045c:	e0ffb417 	ldw	r3,-304(fp)
  820460:	20c7883a 	add	r3,r4,r3
  820464:	1807d2fa 	srai	r3,r3,11
  820468:	10c00015 	stw	r3,0(r2)
  82046c:	e0bfab17 	ldw	r2,-340(fp)
  820470:	10803004 	addi	r2,r2,192
  820474:	e13fb817 	ldw	r4,-288(fp)
  820478:	e0ffb417 	ldw	r3,-304(fp)
  82047c:	20c7c83a 	sub	r3,r4,r3
  820480:	1807d2fa 	srai	r3,r3,11
  820484:	10c00015 	stw	r3,0(r2)
  820488:	e0bfab17 	ldw	r2,-340(fp)
  82048c:	10801004 	addi	r2,r2,64
  820490:	e13fb917 	ldw	r4,-284(fp)
  820494:	e0ffb217 	ldw	r3,-312(fp)
  820498:	20c7883a 	add	r3,r4,r3
  82049c:	1807d2fa 	srai	r3,r3,11
  8204a0:	10c00015 	stw	r3,0(r2)
  8204a4:	e0bfab17 	ldw	r2,-340(fp)
  8204a8:	10802804 	addi	r2,r2,160
  8204ac:	e13fb917 	ldw	r4,-284(fp)
  8204b0:	e0ffb217 	ldw	r3,-312(fp)
  8204b4:	20c7c83a 	sub	r3,r4,r3
  8204b8:	1807d2fa 	srai	r3,r3,11
  8204bc:	10c00015 	stw	r3,0(r2)
  8204c0:	e0bfab17 	ldw	r2,-340(fp)
  8204c4:	10801804 	addi	r2,r2,96
  8204c8:	e13fb717 	ldw	r4,-292(fp)
  8204cc:	e0ffb117 	ldw	r3,-316(fp)
  8204d0:	20c7883a 	add	r3,r4,r3
  8204d4:	1807d2fa 	srai	r3,r3,11
  8204d8:	10c00015 	stw	r3,0(r2)
  8204dc:	e0bfab17 	ldw	r2,-340(fp)
  8204e0:	10802004 	addi	r2,r2,128
  8204e4:	e13fb717 	ldw	r4,-292(fp)
  8204e8:	e0ffb117 	ldw	r3,-316(fp)
  8204ec:	20c7c83a 	sub	r3,r4,r3
  8204f0:	1807d2fa 	srai	r3,r3,11
  8204f4:	10c00015 	stw	r3,0(r2)
  8204f8:	e0bfa917 	ldw	r2,-348(fp)
  8204fc:	10800084 	addi	r2,r2,2
  820500:	e0bfa915 	stw	r2,-348(fp)
  820504:	e0bfaa17 	ldw	r2,-344(fp)
  820508:	10800104 	addi	r2,r2,4
  82050c:	e0bfaa15 	stw	r2,-344(fp)
  820510:	e0bfab17 	ldw	r2,-340(fp)
  820514:	10800104 	addi	r2,r2,4
  820518:	e0bfab15 	stw	r2,-340(fp)
  82051c:	e0bfac17 	ldw	r2,-336(fp)
  820520:	10bfffc4 	addi	r2,r2,-1
  820524:	e0bfac15 	stw	r2,-336(fp)
  820528:	e0bfac17 	ldw	r2,-336(fp)
  82052c:	00be6316 	blt	zero,r2,81febc <__alt_mem_epcs_flash_controller_0+0xff816ebc>
  820530:	e0bfbc04 	addi	r2,fp,-272
  820534:	e0bfab15 	stw	r2,-340(fp)
  820538:	e03fac15 	stw	zero,-336(fp)
  82053c:	00015106 	br	820a84 <jpeg_idct_islow+0xc20>
  820540:	e0bfac17 	ldw	r2,-336(fp)
  820544:	1085883a 	add	r2,r2,r2
  820548:	1085883a 	add	r2,r2,r2
  82054c:	1007883a 	mov	r3,r2
  820550:	e0bfff17 	ldw	r2,-4(fp)
  820554:	10c5883a 	add	r2,r2,r3
  820558:	10c00017 	ldw	r3,0(r2)
  82055c:	e0800217 	ldw	r2,8(fp)
  820560:	1885883a 	add	r2,r3,r2
  820564:	e0bfba15 	stw	r2,-280(fp)
  820568:	e0bfab17 	ldw	r2,-340(fp)
  82056c:	10800017 	ldw	r2,0(r2)
  820570:	10900404 	addi	r2,r2,16400
  820574:	e0bfaf15 	stw	r2,-324(fp)
  820578:	e0bfab17 	ldw	r2,-340(fp)
  82057c:	10800104 	addi	r2,r2,4
  820580:	10800017 	ldw	r2,0(r2)
  820584:	1000421e 	bne	r2,zero,820690 <jpeg_idct_islow+0x82c>
  820588:	e0bfab17 	ldw	r2,-340(fp)
  82058c:	10800204 	addi	r2,r2,8
  820590:	10800017 	ldw	r2,0(r2)
  820594:	10003e1e 	bne	r2,zero,820690 <jpeg_idct_islow+0x82c>
  820598:	e0bfab17 	ldw	r2,-340(fp)
  82059c:	10800304 	addi	r2,r2,12
  8205a0:	10800017 	ldw	r2,0(r2)
  8205a4:	10003a1e 	bne	r2,zero,820690 <jpeg_idct_islow+0x82c>
  8205a8:	e0bfab17 	ldw	r2,-340(fp)
  8205ac:	10800404 	addi	r2,r2,16
  8205b0:	10800017 	ldw	r2,0(r2)
  8205b4:	1000361e 	bne	r2,zero,820690 <jpeg_idct_islow+0x82c>
  8205b8:	e0bfab17 	ldw	r2,-340(fp)
  8205bc:	10800504 	addi	r2,r2,20
  8205c0:	10800017 	ldw	r2,0(r2)
  8205c4:	1000321e 	bne	r2,zero,820690 <jpeg_idct_islow+0x82c>
  8205c8:	e0bfab17 	ldw	r2,-340(fp)
  8205cc:	10800604 	addi	r2,r2,24
  8205d0:	10800017 	ldw	r2,0(r2)
  8205d4:	10002e1e 	bne	r2,zero,820690 <jpeg_idct_islow+0x82c>
  8205d8:	e0bfab17 	ldw	r2,-340(fp)
  8205dc:	10800704 	addi	r2,r2,28
  8205e0:	10800017 	ldw	r2,0(r2)
  8205e4:	10002a1e 	bne	r2,zero,820690 <jpeg_idct_islow+0x82c>
  8205e8:	e0bfaf17 	ldw	r2,-324(fp)
  8205ec:	1005d17a 	srai	r2,r2,5
  8205f0:	1080ffcc 	andi	r2,r2,1023
  8205f4:	e0ffad17 	ldw	r3,-332(fp)
  8205f8:	1885883a 	add	r2,r3,r2
  8205fc:	10800003 	ldbu	r2,0(r2)
  820600:	e0bfbb05 	stb	r2,-276(fp)
  820604:	e0bfba17 	ldw	r2,-280(fp)
  820608:	e0ffbb03 	ldbu	r3,-276(fp)
  82060c:	10c00005 	stb	r3,0(r2)
  820610:	e0bfba17 	ldw	r2,-280(fp)
  820614:	10800044 	addi	r2,r2,1
  820618:	e0ffbb03 	ldbu	r3,-276(fp)
  82061c:	10c00005 	stb	r3,0(r2)
  820620:	e0bfba17 	ldw	r2,-280(fp)
  820624:	10800084 	addi	r2,r2,2
  820628:	e0ffbb03 	ldbu	r3,-276(fp)
  82062c:	10c00005 	stb	r3,0(r2)
  820630:	e0bfba17 	ldw	r2,-280(fp)
  820634:	108000c4 	addi	r2,r2,3
  820638:	e0ffbb03 	ldbu	r3,-276(fp)
  82063c:	10c00005 	stb	r3,0(r2)
  820640:	e0bfba17 	ldw	r2,-280(fp)
  820644:	10800104 	addi	r2,r2,4
  820648:	e0ffbb03 	ldbu	r3,-276(fp)
  82064c:	10c00005 	stb	r3,0(r2)
  820650:	e0bfba17 	ldw	r2,-280(fp)
  820654:	10800144 	addi	r2,r2,5
  820658:	e0ffbb03 	ldbu	r3,-276(fp)
  82065c:	10c00005 	stb	r3,0(r2)
  820660:	e0bfba17 	ldw	r2,-280(fp)
  820664:	10800184 	addi	r2,r2,6
  820668:	e0ffbb03 	ldbu	r3,-276(fp)
  82066c:	10c00005 	stb	r3,0(r2)
  820670:	e0bfba17 	ldw	r2,-280(fp)
  820674:	108001c4 	addi	r2,r2,7
  820678:	e0ffbb03 	ldbu	r3,-276(fp)
  82067c:	10c00005 	stb	r3,0(r2)
  820680:	e0bfab17 	ldw	r2,-340(fp)
  820684:	10800804 	addi	r2,r2,32
  820688:	e0bfab15 	stw	r2,-340(fp)
  82068c:	0000fa06 	br	820a78 <jpeg_idct_islow+0xc14>
  820690:	e0bfab17 	ldw	r2,-340(fp)
  820694:	10800404 	addi	r2,r2,16
  820698:	10800017 	ldw	r2,0(r2)
  82069c:	e0bfb015 	stw	r2,-320(fp)
  8206a0:	e0ffaf17 	ldw	r3,-324(fp)
  8206a4:	e0bfb017 	ldw	r2,-320(fp)
  8206a8:	1885883a 	add	r2,r3,r2
  8206ac:	1004937a 	slli	r2,r2,13
  8206b0:	e0bfb115 	stw	r2,-316(fp)
  8206b4:	e0ffaf17 	ldw	r3,-324(fp)
  8206b8:	e0bfb017 	ldw	r2,-320(fp)
  8206bc:	1885c83a 	sub	r2,r3,r2
  8206c0:	1004937a 	slli	r2,r2,13
  8206c4:	e0bfb215 	stw	r2,-312(fp)
  8206c8:	e0bfab17 	ldw	r2,-340(fp)
  8206cc:	10800204 	addi	r2,r2,8
  8206d0:	10800017 	ldw	r2,0(r2)
  8206d4:	e0bfaf15 	stw	r2,-324(fp)
  8206d8:	e0bfab17 	ldw	r2,-340(fp)
  8206dc:	10800604 	addi	r2,r2,24
  8206e0:	10800017 	ldw	r2,0(r2)
  8206e4:	e0bfb015 	stw	r2,-320(fp)
  8206e8:	e0ffaf17 	ldw	r3,-324(fp)
  8206ec:	e0bfb017 	ldw	r2,-320(fp)
  8206f0:	1885883a 	add	r2,r3,r2
  8206f4:	01445444 	movi	r5,4433
  8206f8:	1009883a 	mov	r4,r2
  8206fc:	08305040 	call	830504 <__mulsi3>
  820700:	e0bfb315 	stw	r2,-308(fp)
  820704:	01461f84 	movi	r5,6270
  820708:	e13faf17 	ldw	r4,-324(fp)
  82070c:	08305040 	call	830504 <__mulsi3>
  820710:	1007883a 	mov	r3,r2
  820714:	e0bfb317 	ldw	r2,-308(fp)
  820718:	1885883a 	add	r2,r3,r2
  82071c:	e0bfb415 	stw	r2,-304(fp)
  820720:	017137c4 	movi	r5,-15137
  820724:	e13fb017 	ldw	r4,-320(fp)
  820728:	08305040 	call	830504 <__mulsi3>
  82072c:	1007883a 	mov	r3,r2
  820730:	e0bfb317 	ldw	r2,-308(fp)
  820734:	1885883a 	add	r2,r3,r2
  820738:	e0bfb515 	stw	r2,-300(fp)
  82073c:	e0ffb117 	ldw	r3,-316(fp)
  820740:	e0bfb417 	ldw	r2,-304(fp)
  820744:	1885883a 	add	r2,r3,r2
  820748:	e0bfb615 	stw	r2,-296(fp)
  82074c:	e0ffb117 	ldw	r3,-316(fp)
  820750:	e0bfb417 	ldw	r2,-304(fp)
  820754:	1885c83a 	sub	r2,r3,r2
  820758:	e0bfb715 	stw	r2,-292(fp)
  82075c:	e0ffb217 	ldw	r3,-312(fp)
  820760:	e0bfb517 	ldw	r2,-300(fp)
  820764:	1885883a 	add	r2,r3,r2
  820768:	e0bfb815 	stw	r2,-288(fp)
  82076c:	e0ffb217 	ldw	r3,-312(fp)
  820770:	e0bfb517 	ldw	r2,-300(fp)
  820774:	1885c83a 	sub	r2,r3,r2
  820778:	e0bfb915 	stw	r2,-284(fp)
  82077c:	e0bfab17 	ldw	r2,-340(fp)
  820780:	10800704 	addi	r2,r2,28
  820784:	10800017 	ldw	r2,0(r2)
  820788:	e0bfb115 	stw	r2,-316(fp)
  82078c:	e0bfab17 	ldw	r2,-340(fp)
  820790:	10800504 	addi	r2,r2,20
  820794:	10800017 	ldw	r2,0(r2)
  820798:	e0bfb215 	stw	r2,-312(fp)
  82079c:	e0bfab17 	ldw	r2,-340(fp)
  8207a0:	10800304 	addi	r2,r2,12
  8207a4:	10800017 	ldw	r2,0(r2)
  8207a8:	e0bfb415 	stw	r2,-304(fp)
  8207ac:	e0bfab17 	ldw	r2,-340(fp)
  8207b0:	10800104 	addi	r2,r2,4
  8207b4:	10800017 	ldw	r2,0(r2)
  8207b8:	e0bfb515 	stw	r2,-300(fp)
  8207bc:	e0ffb117 	ldw	r3,-316(fp)
  8207c0:	e0bfb417 	ldw	r2,-304(fp)
  8207c4:	1885883a 	add	r2,r3,r2
  8207c8:	e0bfaf15 	stw	r2,-324(fp)
  8207cc:	e0ffb217 	ldw	r3,-312(fp)
  8207d0:	e0bfb517 	ldw	r2,-300(fp)
  8207d4:	1885883a 	add	r2,r3,r2
  8207d8:	e0bfb015 	stw	r2,-320(fp)
  8207dc:	e0ffaf17 	ldw	r3,-324(fp)
  8207e0:	e0bfb017 	ldw	r2,-320(fp)
  8207e4:	1885883a 	add	r2,r3,r2
  8207e8:	01496844 	movi	r5,9633
  8207ec:	1009883a 	mov	r4,r2
  8207f0:	08305040 	call	830504 <__mulsi3>
  8207f4:	e0bfb315 	stw	r2,-308(fp)
  8207f8:	01704ec4 	movi	r5,-16069
  8207fc:	e13faf17 	ldw	r4,-324(fp)
  820800:	08305040 	call	830504 <__mulsi3>
  820804:	e0bfaf15 	stw	r2,-324(fp)
  820808:	017ce104 	movi	r5,-3196
  82080c:	e13fb017 	ldw	r4,-320(fp)
  820810:	08305040 	call	830504 <__mulsi3>
  820814:	e0bfb015 	stw	r2,-320(fp)
  820818:	e0ffaf17 	ldw	r3,-324(fp)
  82081c:	e0bfb317 	ldw	r2,-308(fp)
  820820:	1885883a 	add	r2,r3,r2
  820824:	e0bfaf15 	stw	r2,-324(fp)
  820828:	e0ffb017 	ldw	r3,-320(fp)
  82082c:	e0bfb317 	ldw	r2,-308(fp)
  820830:	1885883a 	add	r2,r3,r2
  820834:	e0bfb015 	stw	r2,-320(fp)
  820838:	e0ffb117 	ldw	r3,-316(fp)
  82083c:	e0bfb517 	ldw	r2,-300(fp)
  820840:	1885883a 	add	r2,r3,r2
  820844:	0178ccc4 	movi	r5,-7373
  820848:	1009883a 	mov	r4,r2
  82084c:	08305040 	call	830504 <__mulsi3>
  820850:	e0bfb315 	stw	r2,-308(fp)
  820854:	01426384 	movi	r5,2446
  820858:	e13fb117 	ldw	r4,-316(fp)
  82085c:	08305040 	call	830504 <__mulsi3>
  820860:	e0bfb115 	stw	r2,-316(fp)
  820864:	014c02c4 	movi	r5,12299
  820868:	e13fb517 	ldw	r4,-300(fp)
  82086c:	08305040 	call	830504 <__mulsi3>
  820870:	e0bfb515 	stw	r2,-300(fp)
  820874:	e0ffb317 	ldw	r3,-308(fp)
  820878:	e0bfaf17 	ldw	r2,-324(fp)
  82087c:	1885883a 	add	r2,r3,r2
  820880:	e0ffb117 	ldw	r3,-316(fp)
  820884:	1885883a 	add	r2,r3,r2
  820888:	e0bfb115 	stw	r2,-316(fp)
  82088c:	e0ffb317 	ldw	r3,-308(fp)
  820890:	e0bfb017 	ldw	r2,-320(fp)
  820894:	1885883a 	add	r2,r3,r2
  820898:	e0ffb517 	ldw	r3,-300(fp)
  82089c:	1885883a 	add	r2,r3,r2
  8208a0:	e0bfb515 	stw	r2,-300(fp)
  8208a4:	e0ffb217 	ldw	r3,-312(fp)
  8208a8:	e0bfb417 	ldw	r2,-304(fp)
  8208ac:	1885883a 	add	r2,r3,r2
  8208b0:	016b7f44 	movi	r5,-20995
  8208b4:	1009883a 	mov	r4,r2
  8208b8:	08305040 	call	830504 <__mulsi3>
  8208bc:	e0bfb315 	stw	r2,-308(fp)
  8208c0:	01506cc4 	movi	r5,16819
  8208c4:	e13fb217 	ldw	r4,-312(fp)
  8208c8:	08305040 	call	830504 <__mulsi3>
  8208cc:	e0bfb215 	stw	r2,-312(fp)
  8208d0:	01589504 	movi	r5,25172
  8208d4:	e13fb417 	ldw	r4,-304(fp)
  8208d8:	08305040 	call	830504 <__mulsi3>
  8208dc:	e0bfb415 	stw	r2,-304(fp)
  8208e0:	e0ffb317 	ldw	r3,-308(fp)
  8208e4:	e0bfb017 	ldw	r2,-320(fp)
  8208e8:	1885883a 	add	r2,r3,r2
  8208ec:	e0ffb217 	ldw	r3,-312(fp)
  8208f0:	1885883a 	add	r2,r3,r2
  8208f4:	e0bfb215 	stw	r2,-312(fp)
  8208f8:	e0ffb317 	ldw	r3,-308(fp)
  8208fc:	e0bfaf17 	ldw	r2,-324(fp)
  820900:	1885883a 	add	r2,r3,r2
  820904:	e0ffb417 	ldw	r3,-304(fp)
  820908:	1885883a 	add	r2,r3,r2
  82090c:	e0bfb415 	stw	r2,-304(fp)
  820910:	e0ffb617 	ldw	r3,-296(fp)
  820914:	e0bfb517 	ldw	r2,-300(fp)
  820918:	1885883a 	add	r2,r3,r2
  82091c:	1005d4ba 	srai	r2,r2,18
  820920:	1080ffcc 	andi	r2,r2,1023
  820924:	e0ffad17 	ldw	r3,-332(fp)
  820928:	1885883a 	add	r2,r3,r2
  82092c:	10c00003 	ldbu	r3,0(r2)
  820930:	e0bfba17 	ldw	r2,-280(fp)
  820934:	10c00005 	stb	r3,0(r2)
  820938:	e0bfba17 	ldw	r2,-280(fp)
  82093c:	108001c4 	addi	r2,r2,7
  820940:	e13fb617 	ldw	r4,-296(fp)
  820944:	e0ffb517 	ldw	r3,-300(fp)
  820948:	20c7c83a 	sub	r3,r4,r3
  82094c:	1807d4ba 	srai	r3,r3,18
  820950:	18c0ffcc 	andi	r3,r3,1023
  820954:	e13fad17 	ldw	r4,-332(fp)
  820958:	20c7883a 	add	r3,r4,r3
  82095c:	18c00003 	ldbu	r3,0(r3)
  820960:	10c00005 	stb	r3,0(r2)
  820964:	e0bfba17 	ldw	r2,-280(fp)
  820968:	10800044 	addi	r2,r2,1
  82096c:	e13fb817 	ldw	r4,-288(fp)
  820970:	e0ffb417 	ldw	r3,-304(fp)
  820974:	20c7883a 	add	r3,r4,r3
  820978:	1807d4ba 	srai	r3,r3,18
  82097c:	18c0ffcc 	andi	r3,r3,1023
  820980:	e13fad17 	ldw	r4,-332(fp)
  820984:	20c7883a 	add	r3,r4,r3
  820988:	18c00003 	ldbu	r3,0(r3)
  82098c:	10c00005 	stb	r3,0(r2)
  820990:	e0bfba17 	ldw	r2,-280(fp)
  820994:	10800184 	addi	r2,r2,6
  820998:	e13fb817 	ldw	r4,-288(fp)
  82099c:	e0ffb417 	ldw	r3,-304(fp)
  8209a0:	20c7c83a 	sub	r3,r4,r3
  8209a4:	1807d4ba 	srai	r3,r3,18
  8209a8:	18c0ffcc 	andi	r3,r3,1023
  8209ac:	e13fad17 	ldw	r4,-332(fp)
  8209b0:	20c7883a 	add	r3,r4,r3
  8209b4:	18c00003 	ldbu	r3,0(r3)
  8209b8:	10c00005 	stb	r3,0(r2)
  8209bc:	e0bfba17 	ldw	r2,-280(fp)
  8209c0:	10800084 	addi	r2,r2,2
  8209c4:	e13fb917 	ldw	r4,-284(fp)
  8209c8:	e0ffb217 	ldw	r3,-312(fp)
  8209cc:	20c7883a 	add	r3,r4,r3
  8209d0:	1807d4ba 	srai	r3,r3,18
  8209d4:	18c0ffcc 	andi	r3,r3,1023
  8209d8:	e13fad17 	ldw	r4,-332(fp)
  8209dc:	20c7883a 	add	r3,r4,r3
  8209e0:	18c00003 	ldbu	r3,0(r3)
  8209e4:	10c00005 	stb	r3,0(r2)
  8209e8:	e0bfba17 	ldw	r2,-280(fp)
  8209ec:	10800144 	addi	r2,r2,5
  8209f0:	e13fb917 	ldw	r4,-284(fp)
  8209f4:	e0ffb217 	ldw	r3,-312(fp)
  8209f8:	20c7c83a 	sub	r3,r4,r3
  8209fc:	1807d4ba 	srai	r3,r3,18
  820a00:	18c0ffcc 	andi	r3,r3,1023
  820a04:	e13fad17 	ldw	r4,-332(fp)
  820a08:	20c7883a 	add	r3,r4,r3
  820a0c:	18c00003 	ldbu	r3,0(r3)
  820a10:	10c00005 	stb	r3,0(r2)
  820a14:	e0bfba17 	ldw	r2,-280(fp)
  820a18:	108000c4 	addi	r2,r2,3
  820a1c:	e13fb717 	ldw	r4,-292(fp)
  820a20:	e0ffb117 	ldw	r3,-316(fp)
  820a24:	20c7883a 	add	r3,r4,r3
  820a28:	1807d4ba 	srai	r3,r3,18
  820a2c:	18c0ffcc 	andi	r3,r3,1023
  820a30:	e13fad17 	ldw	r4,-332(fp)
  820a34:	20c7883a 	add	r3,r4,r3
  820a38:	18c00003 	ldbu	r3,0(r3)
  820a3c:	10c00005 	stb	r3,0(r2)
  820a40:	e0bfba17 	ldw	r2,-280(fp)
  820a44:	10800104 	addi	r2,r2,4
  820a48:	e13fb717 	ldw	r4,-292(fp)
  820a4c:	e0ffb117 	ldw	r3,-316(fp)
  820a50:	20c7c83a 	sub	r3,r4,r3
  820a54:	1807d4ba 	srai	r3,r3,18
  820a58:	18c0ffcc 	andi	r3,r3,1023
  820a5c:	e13fad17 	ldw	r4,-332(fp)
  820a60:	20c7883a 	add	r3,r4,r3
  820a64:	18c00003 	ldbu	r3,0(r3)
  820a68:	10c00005 	stb	r3,0(r2)
  820a6c:	e0bfab17 	ldw	r2,-340(fp)
  820a70:	10800804 	addi	r2,r2,32
  820a74:	e0bfab15 	stw	r2,-340(fp)
  820a78:	e0bfac17 	ldw	r2,-336(fp)
  820a7c:	10800044 	addi	r2,r2,1
  820a80:	e0bfac15 	stw	r2,-336(fp)
  820a84:	e0bfac17 	ldw	r2,-336(fp)
  820a88:	10800210 	cmplti	r2,r2,8
  820a8c:	103eac1e 	bne	r2,zero,820540 <__alt_mem_epcs_flash_controller_0+0xff817540>
  820a90:	0001883a 	nop
  820a94:	e037883a 	mov	sp,fp
  820a98:	dfc00117 	ldw	ra,4(sp)
  820a9c:	df000017 	ldw	fp,0(sp)
  820aa0:	dec00204 	addi	sp,sp,8
  820aa4:	f800283a 	ret

00820aa8 <jpeg_idct_7x7>:
  820aa8:	deffb804 	addi	sp,sp,-288
  820aac:	dfc04715 	stw	ra,284(sp)
  820ab0:	df004615 	stw	fp,280(sp)
  820ab4:	dc004515 	stw	r16,276(sp)
  820ab8:	df004604 	addi	fp,sp,280
  820abc:	e13ffb15 	stw	r4,-20(fp)
  820ac0:	e17ffc15 	stw	r5,-16(fp)
  820ac4:	e1bffd15 	stw	r6,-12(fp)
  820ac8:	e1fffe15 	stw	r7,-8(fp)
  820acc:	e0bffb17 	ldw	r2,-20(fp)
  820ad0:	10805417 	ldw	r2,336(r2)
  820ad4:	10bfa004 	addi	r2,r2,-384
  820ad8:	e0bfbe15 	stw	r2,-264(fp)
  820adc:	e0bffd17 	ldw	r2,-12(fp)
  820ae0:	e0bfba15 	stw	r2,-280(fp)
  820ae4:	e0bffc17 	ldw	r2,-16(fp)
  820ae8:	10801517 	ldw	r2,84(r2)
  820aec:	e0bfbb15 	stw	r2,-276(fp)
  820af0:	e0bfca04 	addi	r2,fp,-216
  820af4:	e0bfbc15 	stw	r2,-272(fp)
  820af8:	e03fbd15 	stw	zero,-268(fp)
  820afc:	00010e06 	br	820f38 <jpeg_idct_7x7+0x490>
  820b00:	e0bfba17 	ldw	r2,-280(fp)
  820b04:	1080000b 	ldhu	r2,0(r2)
  820b08:	10ffffcc 	andi	r3,r2,65535
  820b0c:	18e0001c 	xori	r3,r3,32768
  820b10:	18e00004 	addi	r3,r3,-32768
  820b14:	e0bfbb17 	ldw	r2,-276(fp)
  820b18:	10800017 	ldw	r2,0(r2)
  820b1c:	100b883a 	mov	r5,r2
  820b20:	1809883a 	mov	r4,r3
  820b24:	08305040 	call	830504 <__mulsi3>
  820b28:	e0bfbf15 	stw	r2,-260(fp)
  820b2c:	e0bfbf17 	ldw	r2,-260(fp)
  820b30:	1004937a 	slli	r2,r2,13
  820b34:	e0bfbf15 	stw	r2,-260(fp)
  820b38:	e0bfbf17 	ldw	r2,-260(fp)
  820b3c:	10810004 	addi	r2,r2,1024
  820b40:	e0bfbf15 	stw	r2,-260(fp)
  820b44:	e0bfba17 	ldw	r2,-280(fp)
  820b48:	10800804 	addi	r2,r2,32
  820b4c:	1080000b 	ldhu	r2,0(r2)
  820b50:	10ffffcc 	andi	r3,r2,65535
  820b54:	18e0001c 	xori	r3,r3,32768
  820b58:	18e00004 	addi	r3,r3,-32768
  820b5c:	e0bfbb17 	ldw	r2,-276(fp)
  820b60:	10801004 	addi	r2,r2,64
  820b64:	10800017 	ldw	r2,0(r2)
  820b68:	100b883a 	mov	r5,r2
  820b6c:	1809883a 	mov	r4,r3
  820b70:	08305040 	call	830504 <__mulsi3>
  820b74:	e0bfc015 	stw	r2,-256(fp)
  820b78:	e0bfba17 	ldw	r2,-280(fp)
  820b7c:	10801004 	addi	r2,r2,64
  820b80:	1080000b 	ldhu	r2,0(r2)
  820b84:	10ffffcc 	andi	r3,r2,65535
  820b88:	18e0001c 	xori	r3,r3,32768
  820b8c:	18e00004 	addi	r3,r3,-32768
  820b90:	e0bfbb17 	ldw	r2,-276(fp)
  820b94:	10802004 	addi	r2,r2,128
  820b98:	10800017 	ldw	r2,0(r2)
  820b9c:	100b883a 	mov	r5,r2
  820ba0:	1809883a 	mov	r4,r3
  820ba4:	08305040 	call	830504 <__mulsi3>
  820ba8:	e0bfc115 	stw	r2,-252(fp)
  820bac:	e0bfba17 	ldw	r2,-280(fp)
  820bb0:	10801804 	addi	r2,r2,96
  820bb4:	1080000b 	ldhu	r2,0(r2)
  820bb8:	10ffffcc 	andi	r3,r2,65535
  820bbc:	18e0001c 	xori	r3,r3,32768
  820bc0:	18e00004 	addi	r3,r3,-32768
  820bc4:	e0bfbb17 	ldw	r2,-276(fp)
  820bc8:	10803004 	addi	r2,r2,192
  820bcc:	10800017 	ldw	r2,0(r2)
  820bd0:	100b883a 	mov	r5,r2
  820bd4:	1809883a 	mov	r4,r3
  820bd8:	08305040 	call	830504 <__mulsi3>
  820bdc:	e0bfc215 	stw	r2,-248(fp)
  820be0:	e0ffc117 	ldw	r3,-252(fp)
  820be4:	e0bfc217 	ldw	r2,-248(fp)
  820be8:	1885c83a 	sub	r2,r3,r2
  820bec:	01470dc4 	movi	r5,7223
  820bf0:	1009883a 	mov	r4,r2
  820bf4:	08305040 	call	830504 <__mulsi3>
  820bf8:	e0bfc315 	stw	r2,-244(fp)
  820bfc:	e0ffc017 	ldw	r3,-256(fp)
  820c00:	e0bfc117 	ldw	r2,-252(fp)
  820c04:	1885c83a 	sub	r2,r3,r2
  820c08:	01428484 	movi	r5,2578
  820c0c:	1009883a 	mov	r4,r2
  820c10:	08305040 	call	830504 <__mulsi3>
  820c14:	e0bfc415 	stw	r2,-240(fp)
  820c18:	e0ffc317 	ldw	r3,-244(fp)
  820c1c:	e0bfc417 	ldw	r2,-240(fp)
  820c20:	1887883a 	add	r3,r3,r2
  820c24:	e0bfbf17 	ldw	r2,-260(fp)
  820c28:	18a1883a 	add	r16,r3,r2
  820c2c:	01714544 	movi	r5,-15083
  820c30:	e13fc117 	ldw	r4,-252(fp)
  820c34:	08305040 	call	830504 <__mulsi3>
  820c38:	8085883a 	add	r2,r16,r2
  820c3c:	e0bfc515 	stw	r2,-236(fp)
  820c40:	e0ffc017 	ldw	r3,-256(fp)
  820c44:	e0bfc217 	ldw	r2,-248(fp)
  820c48:	1885883a 	add	r2,r3,r2
  820c4c:	e0bfc615 	stw	r2,-232(fp)
  820c50:	e0ffc117 	ldw	r3,-252(fp)
  820c54:	e0bfc617 	ldw	r2,-232(fp)
  820c58:	1885c83a 	sub	r2,r3,r2
  820c5c:	e0bfc115 	stw	r2,-252(fp)
  820c60:	014a3184 	movi	r5,10438
  820c64:	e13fc617 	ldw	r4,-232(fp)
  820c68:	08305040 	call	830504 <__mulsi3>
  820c6c:	1007883a 	mov	r3,r2
  820c70:	e0bfbf17 	ldw	r2,-260(fp)
  820c74:	1885883a 	add	r2,r3,r2
  820c78:	e0bfc615 	stw	r2,-232(fp)
  820c7c:	017f60c4 	movi	r5,-637
  820c80:	e13fc217 	ldw	r4,-248(fp)
  820c84:	08305040 	call	830504 <__mulsi3>
  820c88:	1007883a 	mov	r3,r2
  820c8c:	e0bfc617 	ldw	r2,-232(fp)
  820c90:	1885883a 	add	r2,r3,r2
  820c94:	e0ffc317 	ldw	r3,-244(fp)
  820c98:	1885883a 	add	r2,r3,r2
  820c9c:	e0bfc315 	stw	r2,-244(fp)
  820ca0:	016c3c44 	movi	r5,-20239
  820ca4:	e13fc017 	ldw	r4,-256(fp)
  820ca8:	08305040 	call	830504 <__mulsi3>
  820cac:	1007883a 	mov	r3,r2
  820cb0:	e0bfc617 	ldw	r2,-232(fp)
  820cb4:	1885883a 	add	r2,r3,r2
  820cb8:	e0ffc417 	ldw	r3,-240(fp)
  820cbc:	1885883a 	add	r2,r3,r2
  820cc0:	e0bfc415 	stw	r2,-240(fp)
  820cc4:	014b5044 	movi	r5,11585
  820cc8:	e13fc117 	ldw	r4,-252(fp)
  820ccc:	08305040 	call	830504 <__mulsi3>
  820cd0:	1007883a 	mov	r3,r2
  820cd4:	e0bfbf17 	ldw	r2,-260(fp)
  820cd8:	10c5883a 	add	r2,r2,r3
  820cdc:	e0bfbf15 	stw	r2,-260(fp)
  820ce0:	e0bfba17 	ldw	r2,-280(fp)
  820ce4:	10800404 	addi	r2,r2,16
  820ce8:	1080000b 	ldhu	r2,0(r2)
  820cec:	10ffffcc 	andi	r3,r2,65535
  820cf0:	18e0001c 	xori	r3,r3,32768
  820cf4:	18e00004 	addi	r3,r3,-32768
  820cf8:	e0bfbb17 	ldw	r2,-276(fp)
  820cfc:	10800804 	addi	r2,r2,32
  820d00:	10800017 	ldw	r2,0(r2)
  820d04:	100b883a 	mov	r5,r2
  820d08:	1809883a 	mov	r4,r3
  820d0c:	08305040 	call	830504 <__mulsi3>
  820d10:	e0bfc015 	stw	r2,-256(fp)
  820d14:	e0bfba17 	ldw	r2,-280(fp)
  820d18:	10800c04 	addi	r2,r2,48
  820d1c:	1080000b 	ldhu	r2,0(r2)
  820d20:	10ffffcc 	andi	r3,r2,65535
  820d24:	18e0001c 	xori	r3,r3,32768
  820d28:	18e00004 	addi	r3,r3,-32768
  820d2c:	e0bfbb17 	ldw	r2,-276(fp)
  820d30:	10801804 	addi	r2,r2,96
  820d34:	10800017 	ldw	r2,0(r2)
  820d38:	100b883a 	mov	r5,r2
  820d3c:	1809883a 	mov	r4,r3
  820d40:	08305040 	call	830504 <__mulsi3>
  820d44:	e0bfc115 	stw	r2,-252(fp)
  820d48:	e0bfba17 	ldw	r2,-280(fp)
  820d4c:	10801404 	addi	r2,r2,80
  820d50:	1080000b 	ldhu	r2,0(r2)
  820d54:	10ffffcc 	andi	r3,r2,65535
  820d58:	18e0001c 	xori	r3,r3,32768
  820d5c:	18e00004 	addi	r3,r3,-32768
  820d60:	e0bfbb17 	ldw	r2,-276(fp)
  820d64:	10802804 	addi	r2,r2,160
  820d68:	10800017 	ldw	r2,0(r2)
  820d6c:	100b883a 	mov	r5,r2
  820d70:	1809883a 	mov	r4,r3
  820d74:	08305040 	call	830504 <__mulsi3>
  820d78:	e0bfc215 	stw	r2,-248(fp)
  820d7c:	e0ffc017 	ldw	r3,-256(fp)
  820d80:	e0bfc117 	ldw	r2,-252(fp)
  820d84:	1885883a 	add	r2,r3,r2
  820d88:	01477bc4 	movi	r5,7663
  820d8c:	1009883a 	mov	r4,r2
  820d90:	08305040 	call	830504 <__mulsi3>
  820d94:	e0bfc715 	stw	r2,-228(fp)
  820d98:	e0ffc017 	ldw	r3,-256(fp)
  820d9c:	e0bfc117 	ldw	r2,-252(fp)
  820da0:	1885c83a 	sub	r2,r3,r2
  820da4:	01415cc4 	movi	r5,1395
  820da8:	1009883a 	mov	r4,r2
  820dac:	08305040 	call	830504 <__mulsi3>
  820db0:	e0bfc815 	stw	r2,-224(fp)
  820db4:	e0ffc717 	ldw	r3,-228(fp)
  820db8:	e0bfc817 	ldw	r2,-224(fp)
  820dbc:	1885c83a 	sub	r2,r3,r2
  820dc0:	e0bfc615 	stw	r2,-232(fp)
  820dc4:	e0ffc717 	ldw	r3,-228(fp)
  820dc8:	e0bfc817 	ldw	r2,-224(fp)
  820dcc:	1885883a 	add	r2,r3,r2
  820dd0:	e0bfc715 	stw	r2,-228(fp)
  820dd4:	e0ffc117 	ldw	r3,-252(fp)
  820dd8:	e0bfc217 	ldw	r2,-248(fp)
  820ddc:	1885883a 	add	r2,r3,r2
  820de0:	0174f844 	movi	r5,-11295
  820de4:	1009883a 	mov	r4,r2
  820de8:	08305040 	call	830504 <__mulsi3>
  820dec:	e0bfc815 	stw	r2,-224(fp)
  820df0:	e0ffc717 	ldw	r3,-228(fp)
  820df4:	e0bfc817 	ldw	r2,-224(fp)
  820df8:	1885883a 	add	r2,r3,r2
  820dfc:	e0bfc715 	stw	r2,-228(fp)
  820e00:	e0ffc017 	ldw	r3,-256(fp)
  820e04:	e0bfc217 	ldw	r2,-248(fp)
  820e08:	1885883a 	add	r2,r3,r2
  820e0c:	0144e8c4 	movi	r5,5027
  820e10:	1009883a 	mov	r4,r2
  820e14:	08305040 	call	830504 <__mulsi3>
  820e18:	e0bfc115 	stw	r2,-252(fp)
  820e1c:	e0ffc617 	ldw	r3,-232(fp)
  820e20:	e0bfc117 	ldw	r2,-252(fp)
  820e24:	1885883a 	add	r2,r3,r2
  820e28:	e0bfc615 	stw	r2,-232(fp)
  820e2c:	014ef784 	movi	r5,15326
  820e30:	e13fc217 	ldw	r4,-248(fp)
  820e34:	08305040 	call	830504 <__mulsi3>
  820e38:	1007883a 	mov	r3,r2
  820e3c:	e0bfc117 	ldw	r2,-252(fp)
  820e40:	1885883a 	add	r2,r3,r2
  820e44:	e0ffc817 	ldw	r3,-224(fp)
  820e48:	1885883a 	add	r2,r3,r2
  820e4c:	e0bfc815 	stw	r2,-224(fp)
  820e50:	e0ffc317 	ldw	r3,-244(fp)
  820e54:	e0bfc617 	ldw	r2,-232(fp)
  820e58:	1885883a 	add	r2,r3,r2
  820e5c:	1007d2fa 	srai	r3,r2,11
  820e60:	e0bfbc17 	ldw	r2,-272(fp)
  820e64:	10c00015 	stw	r3,0(r2)
  820e68:	e0bfbc17 	ldw	r2,-272(fp)
  820e6c:	10802a04 	addi	r2,r2,168
  820e70:	e13fc317 	ldw	r4,-244(fp)
  820e74:	e0ffc617 	ldw	r3,-232(fp)
  820e78:	20c7c83a 	sub	r3,r4,r3
  820e7c:	1807d2fa 	srai	r3,r3,11
  820e80:	10c00015 	stw	r3,0(r2)
  820e84:	e0bfbc17 	ldw	r2,-272(fp)
  820e88:	10800704 	addi	r2,r2,28
  820e8c:	e13fc517 	ldw	r4,-236(fp)
  820e90:	e0ffc717 	ldw	r3,-228(fp)
  820e94:	20c7883a 	add	r3,r4,r3
  820e98:	1807d2fa 	srai	r3,r3,11
  820e9c:	10c00015 	stw	r3,0(r2)
  820ea0:	e0bfbc17 	ldw	r2,-272(fp)
  820ea4:	10802304 	addi	r2,r2,140
  820ea8:	e13fc517 	ldw	r4,-236(fp)
  820eac:	e0ffc717 	ldw	r3,-228(fp)
  820eb0:	20c7c83a 	sub	r3,r4,r3
  820eb4:	1807d2fa 	srai	r3,r3,11
  820eb8:	10c00015 	stw	r3,0(r2)
  820ebc:	e0bfbc17 	ldw	r2,-272(fp)
  820ec0:	10800e04 	addi	r2,r2,56
  820ec4:	e13fc417 	ldw	r4,-240(fp)
  820ec8:	e0ffc817 	ldw	r3,-224(fp)
  820ecc:	20c7883a 	add	r3,r4,r3
  820ed0:	1807d2fa 	srai	r3,r3,11
  820ed4:	10c00015 	stw	r3,0(r2)
  820ed8:	e0bfbc17 	ldw	r2,-272(fp)
  820edc:	10801c04 	addi	r2,r2,112
  820ee0:	e13fc417 	ldw	r4,-240(fp)
  820ee4:	e0ffc817 	ldw	r3,-224(fp)
  820ee8:	20c7c83a 	sub	r3,r4,r3
  820eec:	1807d2fa 	srai	r3,r3,11
  820ef0:	10c00015 	stw	r3,0(r2)
  820ef4:	e0bfbc17 	ldw	r2,-272(fp)
  820ef8:	10801504 	addi	r2,r2,84
  820efc:	e0ffbf17 	ldw	r3,-260(fp)
  820f00:	1807d2fa 	srai	r3,r3,11
  820f04:	10c00015 	stw	r3,0(r2)
  820f08:	e0bfbd17 	ldw	r2,-268(fp)
  820f0c:	10800044 	addi	r2,r2,1
  820f10:	e0bfbd15 	stw	r2,-268(fp)
  820f14:	e0bfba17 	ldw	r2,-280(fp)
  820f18:	10800084 	addi	r2,r2,2
  820f1c:	e0bfba15 	stw	r2,-280(fp)
  820f20:	e0bfbb17 	ldw	r2,-276(fp)
  820f24:	10800104 	addi	r2,r2,4
  820f28:	e0bfbb15 	stw	r2,-276(fp)
  820f2c:	e0bfbc17 	ldw	r2,-272(fp)
  820f30:	10800104 	addi	r2,r2,4
  820f34:	e0bfbc15 	stw	r2,-272(fp)
  820f38:	e0bfbd17 	ldw	r2,-268(fp)
  820f3c:	108001d0 	cmplti	r2,r2,7
  820f40:	103eef1e 	bne	r2,zero,820b00 <__alt_mem_epcs_flash_controller_0+0xff817b00>
  820f44:	e0bfca04 	addi	r2,fp,-216
  820f48:	e0bfbc15 	stw	r2,-272(fp)
  820f4c:	e03fbd15 	stw	zero,-268(fp)
  820f50:	0000ee06 	br	82130c <jpeg_idct_7x7+0x864>
  820f54:	e0bfbd17 	ldw	r2,-268(fp)
  820f58:	1085883a 	add	r2,r2,r2
  820f5c:	1085883a 	add	r2,r2,r2
  820f60:	1007883a 	mov	r3,r2
  820f64:	e0bffe17 	ldw	r2,-8(fp)
  820f68:	10c5883a 	add	r2,r2,r3
  820f6c:	10c00017 	ldw	r3,0(r2)
  820f70:	e0800217 	ldw	r2,8(fp)
  820f74:	1885883a 	add	r2,r3,r2
  820f78:	e0bfc915 	stw	r2,-220(fp)
  820f7c:	e0bfbc17 	ldw	r2,-272(fp)
  820f80:	10800017 	ldw	r2,0(r2)
  820f84:	10900404 	addi	r2,r2,16400
  820f88:	e0bfbf15 	stw	r2,-260(fp)
  820f8c:	e0bfbf17 	ldw	r2,-260(fp)
  820f90:	1004937a 	slli	r2,r2,13
  820f94:	e0bfbf15 	stw	r2,-260(fp)
  820f98:	e0bfbc17 	ldw	r2,-272(fp)
  820f9c:	10800204 	addi	r2,r2,8
  820fa0:	10800017 	ldw	r2,0(r2)
  820fa4:	e0bfc015 	stw	r2,-256(fp)
  820fa8:	e0bfbc17 	ldw	r2,-272(fp)
  820fac:	10800404 	addi	r2,r2,16
  820fb0:	10800017 	ldw	r2,0(r2)
  820fb4:	e0bfc115 	stw	r2,-252(fp)
  820fb8:	e0bfbc17 	ldw	r2,-272(fp)
  820fbc:	10800604 	addi	r2,r2,24
  820fc0:	10800017 	ldw	r2,0(r2)
  820fc4:	e0bfc215 	stw	r2,-248(fp)
  820fc8:	e0ffc117 	ldw	r3,-252(fp)
  820fcc:	e0bfc217 	ldw	r2,-248(fp)
  820fd0:	1885c83a 	sub	r2,r3,r2
  820fd4:	01470dc4 	movi	r5,7223
  820fd8:	1009883a 	mov	r4,r2
  820fdc:	08305040 	call	830504 <__mulsi3>
  820fe0:	e0bfc315 	stw	r2,-244(fp)
  820fe4:	e0ffc017 	ldw	r3,-256(fp)
  820fe8:	e0bfc117 	ldw	r2,-252(fp)
  820fec:	1885c83a 	sub	r2,r3,r2
  820ff0:	01428484 	movi	r5,2578
  820ff4:	1009883a 	mov	r4,r2
  820ff8:	08305040 	call	830504 <__mulsi3>
  820ffc:	e0bfc415 	stw	r2,-240(fp)
  821000:	e0ffc317 	ldw	r3,-244(fp)
  821004:	e0bfc417 	ldw	r2,-240(fp)
  821008:	1887883a 	add	r3,r3,r2
  82100c:	e0bfbf17 	ldw	r2,-260(fp)
  821010:	18a1883a 	add	r16,r3,r2
  821014:	01714544 	movi	r5,-15083
  821018:	e13fc117 	ldw	r4,-252(fp)
  82101c:	08305040 	call	830504 <__mulsi3>
  821020:	8085883a 	add	r2,r16,r2
  821024:	e0bfc515 	stw	r2,-236(fp)
  821028:	e0ffc017 	ldw	r3,-256(fp)
  82102c:	e0bfc217 	ldw	r2,-248(fp)
  821030:	1885883a 	add	r2,r3,r2
  821034:	e0bfc615 	stw	r2,-232(fp)
  821038:	e0ffc117 	ldw	r3,-252(fp)
  82103c:	e0bfc617 	ldw	r2,-232(fp)
  821040:	1885c83a 	sub	r2,r3,r2
  821044:	e0bfc115 	stw	r2,-252(fp)
  821048:	014a3184 	movi	r5,10438
  82104c:	e13fc617 	ldw	r4,-232(fp)
  821050:	08305040 	call	830504 <__mulsi3>
  821054:	1007883a 	mov	r3,r2
  821058:	e0bfbf17 	ldw	r2,-260(fp)
  82105c:	1885883a 	add	r2,r3,r2
  821060:	e0bfc615 	stw	r2,-232(fp)
  821064:	017f60c4 	movi	r5,-637
  821068:	e13fc217 	ldw	r4,-248(fp)
  82106c:	08305040 	call	830504 <__mulsi3>
  821070:	1007883a 	mov	r3,r2
  821074:	e0bfc617 	ldw	r2,-232(fp)
  821078:	1885883a 	add	r2,r3,r2
  82107c:	e0ffc317 	ldw	r3,-244(fp)
  821080:	1885883a 	add	r2,r3,r2
  821084:	e0bfc315 	stw	r2,-244(fp)
  821088:	016c3c44 	movi	r5,-20239
  82108c:	e13fc017 	ldw	r4,-256(fp)
  821090:	08305040 	call	830504 <__mulsi3>
  821094:	1007883a 	mov	r3,r2
  821098:	e0bfc617 	ldw	r2,-232(fp)
  82109c:	1885883a 	add	r2,r3,r2
  8210a0:	e0ffc417 	ldw	r3,-240(fp)
  8210a4:	1885883a 	add	r2,r3,r2
  8210a8:	e0bfc415 	stw	r2,-240(fp)
  8210ac:	014b5044 	movi	r5,11585
  8210b0:	e13fc117 	ldw	r4,-252(fp)
  8210b4:	08305040 	call	830504 <__mulsi3>
  8210b8:	1007883a 	mov	r3,r2
  8210bc:	e0bfbf17 	ldw	r2,-260(fp)
  8210c0:	10c5883a 	add	r2,r2,r3
  8210c4:	e0bfbf15 	stw	r2,-260(fp)
  8210c8:	e0bfbc17 	ldw	r2,-272(fp)
  8210cc:	10800104 	addi	r2,r2,4
  8210d0:	10800017 	ldw	r2,0(r2)
  8210d4:	e0bfc015 	stw	r2,-256(fp)
  8210d8:	e0bfbc17 	ldw	r2,-272(fp)
  8210dc:	10800304 	addi	r2,r2,12
  8210e0:	10800017 	ldw	r2,0(r2)
  8210e4:	e0bfc115 	stw	r2,-252(fp)
  8210e8:	e0bfbc17 	ldw	r2,-272(fp)
  8210ec:	10800504 	addi	r2,r2,20
  8210f0:	10800017 	ldw	r2,0(r2)
  8210f4:	e0bfc215 	stw	r2,-248(fp)
  8210f8:	e0ffc017 	ldw	r3,-256(fp)
  8210fc:	e0bfc117 	ldw	r2,-252(fp)
  821100:	1885883a 	add	r2,r3,r2
  821104:	01477bc4 	movi	r5,7663
  821108:	1009883a 	mov	r4,r2
  82110c:	08305040 	call	830504 <__mulsi3>
  821110:	e0bfc715 	stw	r2,-228(fp)
  821114:	e0ffc017 	ldw	r3,-256(fp)
  821118:	e0bfc117 	ldw	r2,-252(fp)
  82111c:	1885c83a 	sub	r2,r3,r2
  821120:	01415cc4 	movi	r5,1395
  821124:	1009883a 	mov	r4,r2
  821128:	08305040 	call	830504 <__mulsi3>
  82112c:	e0bfc815 	stw	r2,-224(fp)
  821130:	e0ffc717 	ldw	r3,-228(fp)
  821134:	e0bfc817 	ldw	r2,-224(fp)
  821138:	1885c83a 	sub	r2,r3,r2
  82113c:	e0bfc615 	stw	r2,-232(fp)
  821140:	e0ffc717 	ldw	r3,-228(fp)
  821144:	e0bfc817 	ldw	r2,-224(fp)
  821148:	1885883a 	add	r2,r3,r2
  82114c:	e0bfc715 	stw	r2,-228(fp)
  821150:	e0ffc117 	ldw	r3,-252(fp)
  821154:	e0bfc217 	ldw	r2,-248(fp)
  821158:	1885883a 	add	r2,r3,r2
  82115c:	0174f844 	movi	r5,-11295
  821160:	1009883a 	mov	r4,r2
  821164:	08305040 	call	830504 <__mulsi3>
  821168:	e0bfc815 	stw	r2,-224(fp)
  82116c:	e0ffc717 	ldw	r3,-228(fp)
  821170:	e0bfc817 	ldw	r2,-224(fp)
  821174:	1885883a 	add	r2,r3,r2
  821178:	e0bfc715 	stw	r2,-228(fp)
  82117c:	e0ffc017 	ldw	r3,-256(fp)
  821180:	e0bfc217 	ldw	r2,-248(fp)
  821184:	1885883a 	add	r2,r3,r2
  821188:	0144e8c4 	movi	r5,5027
  82118c:	1009883a 	mov	r4,r2
  821190:	08305040 	call	830504 <__mulsi3>
  821194:	e0bfc115 	stw	r2,-252(fp)
  821198:	e0ffc617 	ldw	r3,-232(fp)
  82119c:	e0bfc117 	ldw	r2,-252(fp)
  8211a0:	1885883a 	add	r2,r3,r2
  8211a4:	e0bfc615 	stw	r2,-232(fp)
  8211a8:	014ef784 	movi	r5,15326
  8211ac:	e13fc217 	ldw	r4,-248(fp)
  8211b0:	08305040 	call	830504 <__mulsi3>
  8211b4:	1007883a 	mov	r3,r2
  8211b8:	e0bfc117 	ldw	r2,-252(fp)
  8211bc:	1885883a 	add	r2,r3,r2
  8211c0:	e0ffc817 	ldw	r3,-224(fp)
  8211c4:	1885883a 	add	r2,r3,r2
  8211c8:	e0bfc815 	stw	r2,-224(fp)
  8211cc:	e0ffc317 	ldw	r3,-244(fp)
  8211d0:	e0bfc617 	ldw	r2,-232(fp)
  8211d4:	1885883a 	add	r2,r3,r2
  8211d8:	1005d4ba 	srai	r2,r2,18
  8211dc:	1080ffcc 	andi	r2,r2,1023
  8211e0:	e0ffbe17 	ldw	r3,-264(fp)
  8211e4:	1885883a 	add	r2,r3,r2
  8211e8:	10c00003 	ldbu	r3,0(r2)
  8211ec:	e0bfc917 	ldw	r2,-220(fp)
  8211f0:	10c00005 	stb	r3,0(r2)
  8211f4:	e0bfc917 	ldw	r2,-220(fp)
  8211f8:	10800184 	addi	r2,r2,6
  8211fc:	e13fc317 	ldw	r4,-244(fp)
  821200:	e0ffc617 	ldw	r3,-232(fp)
  821204:	20c7c83a 	sub	r3,r4,r3
  821208:	1807d4ba 	srai	r3,r3,18
  82120c:	18c0ffcc 	andi	r3,r3,1023
  821210:	e13fbe17 	ldw	r4,-264(fp)
  821214:	20c7883a 	add	r3,r4,r3
  821218:	18c00003 	ldbu	r3,0(r3)
  82121c:	10c00005 	stb	r3,0(r2)
  821220:	e0bfc917 	ldw	r2,-220(fp)
  821224:	10800044 	addi	r2,r2,1
  821228:	e13fc517 	ldw	r4,-236(fp)
  82122c:	e0ffc717 	ldw	r3,-228(fp)
  821230:	20c7883a 	add	r3,r4,r3
  821234:	1807d4ba 	srai	r3,r3,18
  821238:	18c0ffcc 	andi	r3,r3,1023
  82123c:	e13fbe17 	ldw	r4,-264(fp)
  821240:	20c7883a 	add	r3,r4,r3
  821244:	18c00003 	ldbu	r3,0(r3)
  821248:	10c00005 	stb	r3,0(r2)
  82124c:	e0bfc917 	ldw	r2,-220(fp)
  821250:	10800144 	addi	r2,r2,5
  821254:	e13fc517 	ldw	r4,-236(fp)
  821258:	e0ffc717 	ldw	r3,-228(fp)
  82125c:	20c7c83a 	sub	r3,r4,r3
  821260:	1807d4ba 	srai	r3,r3,18
  821264:	18c0ffcc 	andi	r3,r3,1023
  821268:	e13fbe17 	ldw	r4,-264(fp)
  82126c:	20c7883a 	add	r3,r4,r3
  821270:	18c00003 	ldbu	r3,0(r3)
  821274:	10c00005 	stb	r3,0(r2)
  821278:	e0bfc917 	ldw	r2,-220(fp)
  82127c:	10800084 	addi	r2,r2,2
  821280:	e13fc417 	ldw	r4,-240(fp)
  821284:	e0ffc817 	ldw	r3,-224(fp)
  821288:	20c7883a 	add	r3,r4,r3
  82128c:	1807d4ba 	srai	r3,r3,18
  821290:	18c0ffcc 	andi	r3,r3,1023
  821294:	e13fbe17 	ldw	r4,-264(fp)
  821298:	20c7883a 	add	r3,r4,r3
  82129c:	18c00003 	ldbu	r3,0(r3)
  8212a0:	10c00005 	stb	r3,0(r2)
  8212a4:	e0bfc917 	ldw	r2,-220(fp)
  8212a8:	10800104 	addi	r2,r2,4
  8212ac:	e13fc417 	ldw	r4,-240(fp)
  8212b0:	e0ffc817 	ldw	r3,-224(fp)
  8212b4:	20c7c83a 	sub	r3,r4,r3
  8212b8:	1807d4ba 	srai	r3,r3,18
  8212bc:	18c0ffcc 	andi	r3,r3,1023
  8212c0:	e13fbe17 	ldw	r4,-264(fp)
  8212c4:	20c7883a 	add	r3,r4,r3
  8212c8:	18c00003 	ldbu	r3,0(r3)
  8212cc:	10c00005 	stb	r3,0(r2)
  8212d0:	e0bfc917 	ldw	r2,-220(fp)
  8212d4:	108000c4 	addi	r2,r2,3
  8212d8:	e0ffbf17 	ldw	r3,-260(fp)
  8212dc:	1807d4ba 	srai	r3,r3,18
  8212e0:	18c0ffcc 	andi	r3,r3,1023
  8212e4:	e13fbe17 	ldw	r4,-264(fp)
  8212e8:	20c7883a 	add	r3,r4,r3
  8212ec:	18c00003 	ldbu	r3,0(r3)
  8212f0:	10c00005 	stb	r3,0(r2)
  8212f4:	e0bfbc17 	ldw	r2,-272(fp)
  8212f8:	10800704 	addi	r2,r2,28
  8212fc:	e0bfbc15 	stw	r2,-272(fp)
  821300:	e0bfbd17 	ldw	r2,-268(fp)
  821304:	10800044 	addi	r2,r2,1
  821308:	e0bfbd15 	stw	r2,-268(fp)
  82130c:	e0bfbd17 	ldw	r2,-268(fp)
  821310:	108001d0 	cmplti	r2,r2,7
  821314:	103f0f1e 	bne	r2,zero,820f54 <__alt_mem_epcs_flash_controller_0+0xff817f54>
  821318:	0001883a 	nop
  82131c:	e6ffff04 	addi	sp,fp,-4
  821320:	dfc00217 	ldw	ra,8(sp)
  821324:	df000117 	ldw	fp,4(sp)
  821328:	dc000017 	ldw	r16,0(sp)
  82132c:	dec00304 	addi	sp,sp,12
  821330:	f800283a 	ret

00821334 <jpeg_idct_6x6>:
  821334:	deffc704 	addi	sp,sp,-228
  821338:	dfc03815 	stw	ra,224(sp)
  82133c:	df003715 	stw	fp,220(sp)
  821340:	df003704 	addi	fp,sp,220
  821344:	e13ffc15 	stw	r4,-16(fp)
  821348:	e17ffd15 	stw	r5,-12(fp)
  82134c:	e1bffe15 	stw	r6,-8(fp)
  821350:	e1ffff15 	stw	r7,-4(fp)
  821354:	e0bffc17 	ldw	r2,-16(fp)
  821358:	10805417 	ldw	r2,336(r2)
  82135c:	10bfa004 	addi	r2,r2,-384
  821360:	e0bfcd15 	stw	r2,-204(fp)
  821364:	e0bffe17 	ldw	r2,-8(fp)
  821368:	e0bfc915 	stw	r2,-220(fp)
  82136c:	e0bffd17 	ldw	r2,-12(fp)
  821370:	10801517 	ldw	r2,84(r2)
  821374:	e0bfca15 	stw	r2,-216(fp)
  821378:	e0bfd804 	addi	r2,fp,-160
  82137c:	e0bfcb15 	stw	r2,-212(fp)
  821380:	e03fcc15 	stw	zero,-208(fp)
  821384:	0000bd06 	br	82167c <jpeg_idct_6x6+0x348>
  821388:	e0bfc917 	ldw	r2,-220(fp)
  82138c:	1080000b 	ldhu	r2,0(r2)
  821390:	10ffffcc 	andi	r3,r2,65535
  821394:	18e0001c 	xori	r3,r3,32768
  821398:	18e00004 	addi	r3,r3,-32768
  82139c:	e0bfca17 	ldw	r2,-216(fp)
  8213a0:	10800017 	ldw	r2,0(r2)
  8213a4:	100b883a 	mov	r5,r2
  8213a8:	1809883a 	mov	r4,r3
  8213ac:	08305040 	call	830504 <__mulsi3>
  8213b0:	e0bfce15 	stw	r2,-200(fp)
  8213b4:	e0bfce17 	ldw	r2,-200(fp)
  8213b8:	1004937a 	slli	r2,r2,13
  8213bc:	e0bfce15 	stw	r2,-200(fp)
  8213c0:	e0bfce17 	ldw	r2,-200(fp)
  8213c4:	10810004 	addi	r2,r2,1024
  8213c8:	e0bfce15 	stw	r2,-200(fp)
  8213cc:	e0bfc917 	ldw	r2,-220(fp)
  8213d0:	10801004 	addi	r2,r2,64
  8213d4:	1080000b 	ldhu	r2,0(r2)
  8213d8:	10ffffcc 	andi	r3,r2,65535
  8213dc:	18e0001c 	xori	r3,r3,32768
  8213e0:	18e00004 	addi	r3,r3,-32768
  8213e4:	e0bfca17 	ldw	r2,-216(fp)
  8213e8:	10802004 	addi	r2,r2,128
  8213ec:	10800017 	ldw	r2,0(r2)
  8213f0:	100b883a 	mov	r5,r2
  8213f4:	1809883a 	mov	r4,r3
  8213f8:	08305040 	call	830504 <__mulsi3>
  8213fc:	e0bfcf15 	stw	r2,-196(fp)
  821400:	0145a844 	movi	r5,5793
  821404:	e13fcf17 	ldw	r4,-196(fp)
  821408:	08305040 	call	830504 <__mulsi3>
  82140c:	e0bfd015 	stw	r2,-192(fp)
  821410:	e0ffce17 	ldw	r3,-200(fp)
  821414:	e0bfd017 	ldw	r2,-192(fp)
  821418:	1885883a 	add	r2,r3,r2
  82141c:	e0bfd115 	stw	r2,-188(fp)
  821420:	e0ffce17 	ldw	r3,-200(fp)
  821424:	e0bfd017 	ldw	r2,-192(fp)
  821428:	1887c83a 	sub	r3,r3,r2
  82142c:	e0bfd017 	ldw	r2,-192(fp)
  821430:	1885c83a 	sub	r2,r3,r2
  821434:	1005d2fa 	srai	r2,r2,11
  821438:	e0bfd215 	stw	r2,-184(fp)
  82143c:	e0bfc917 	ldw	r2,-220(fp)
  821440:	10800804 	addi	r2,r2,32
  821444:	1080000b 	ldhu	r2,0(r2)
  821448:	10ffffcc 	andi	r3,r2,65535
  82144c:	18e0001c 	xori	r3,r3,32768
  821450:	18e00004 	addi	r3,r3,-32768
  821454:	e0bfca17 	ldw	r2,-216(fp)
  821458:	10801004 	addi	r2,r2,64
  82145c:	10800017 	ldw	r2,0(r2)
  821460:	100b883a 	mov	r5,r2
  821464:	1809883a 	mov	r4,r3
  821468:	08305040 	call	830504 <__mulsi3>
  82146c:	e0bfd015 	stw	r2,-192(fp)
  821470:	0149cc44 	movi	r5,10033
  821474:	e13fd017 	ldw	r4,-192(fp)
  821478:	08305040 	call	830504 <__mulsi3>
  82147c:	e0bfce15 	stw	r2,-200(fp)
  821480:	e0ffd117 	ldw	r3,-188(fp)
  821484:	e0bfce17 	ldw	r2,-200(fp)
  821488:	1885883a 	add	r2,r3,r2
  82148c:	e0bfd015 	stw	r2,-192(fp)
  821490:	e0ffd117 	ldw	r3,-188(fp)
  821494:	e0bfce17 	ldw	r2,-200(fp)
  821498:	1885c83a 	sub	r2,r3,r2
  82149c:	e0bfd315 	stw	r2,-180(fp)
  8214a0:	e0bfc917 	ldw	r2,-220(fp)
  8214a4:	10800404 	addi	r2,r2,16
  8214a8:	1080000b 	ldhu	r2,0(r2)
  8214ac:	10ffffcc 	andi	r3,r2,65535
  8214b0:	18e0001c 	xori	r3,r3,32768
  8214b4:	18e00004 	addi	r3,r3,-32768
  8214b8:	e0bfca17 	ldw	r2,-216(fp)
  8214bc:	10800804 	addi	r2,r2,32
  8214c0:	10800017 	ldw	r2,0(r2)
  8214c4:	100b883a 	mov	r5,r2
  8214c8:	1809883a 	mov	r4,r3
  8214cc:	08305040 	call	830504 <__mulsi3>
  8214d0:	e0bfd415 	stw	r2,-176(fp)
  8214d4:	e0bfc917 	ldw	r2,-220(fp)
  8214d8:	10800c04 	addi	r2,r2,48
  8214dc:	1080000b 	ldhu	r2,0(r2)
  8214e0:	10ffffcc 	andi	r3,r2,65535
  8214e4:	18e0001c 	xori	r3,r3,32768
  8214e8:	18e00004 	addi	r3,r3,-32768
  8214ec:	e0bfca17 	ldw	r2,-216(fp)
  8214f0:	10801804 	addi	r2,r2,96
  8214f4:	10800017 	ldw	r2,0(r2)
  8214f8:	100b883a 	mov	r5,r2
  8214fc:	1809883a 	mov	r4,r3
  821500:	08305040 	call	830504 <__mulsi3>
  821504:	e0bfd515 	stw	r2,-172(fp)
  821508:	e0bfc917 	ldw	r2,-220(fp)
  82150c:	10801404 	addi	r2,r2,80
  821510:	1080000b 	ldhu	r2,0(r2)
  821514:	10ffffcc 	andi	r3,r2,65535
  821518:	18e0001c 	xori	r3,r3,32768
  82151c:	18e00004 	addi	r3,r3,-32768
  821520:	e0bfca17 	ldw	r2,-216(fp)
  821524:	10802804 	addi	r2,r2,160
  821528:	10800017 	ldw	r2,0(r2)
  82152c:	100b883a 	mov	r5,r2
  821530:	1809883a 	mov	r4,r3
  821534:	08305040 	call	830504 <__mulsi3>
  821538:	e0bfd615 	stw	r2,-168(fp)
  82153c:	e0ffd417 	ldw	r3,-176(fp)
  821540:	e0bfd617 	ldw	r2,-168(fp)
  821544:	1885883a 	add	r2,r3,r2
  821548:	0142ed84 	movi	r5,2998
  82154c:	1009883a 	mov	r4,r2
  821550:	08305040 	call	830504 <__mulsi3>
  821554:	e0bfd115 	stw	r2,-188(fp)
  821558:	e0ffd417 	ldw	r3,-176(fp)
  82155c:	e0bfd517 	ldw	r2,-172(fp)
  821560:	1885883a 	add	r2,r3,r2
  821564:	1006937a 	slli	r3,r2,13
  821568:	e0bfd117 	ldw	r2,-188(fp)
  82156c:	1885883a 	add	r2,r3,r2
  821570:	e0bfce15 	stw	r2,-200(fp)
  821574:	e0ffd617 	ldw	r3,-168(fp)
  821578:	e0bfd517 	ldw	r2,-172(fp)
  82157c:	1885c83a 	sub	r2,r3,r2
  821580:	1006937a 	slli	r3,r2,13
  821584:	e0bfd117 	ldw	r2,-188(fp)
  821588:	1885883a 	add	r2,r3,r2
  82158c:	e0bfcf15 	stw	r2,-196(fp)
  821590:	e0ffd417 	ldw	r3,-176(fp)
  821594:	e0bfd517 	ldw	r2,-172(fp)
  821598:	1887c83a 	sub	r3,r3,r2
  82159c:	e0bfd617 	ldw	r2,-168(fp)
  8215a0:	1885c83a 	sub	r2,r3,r2
  8215a4:	1085883a 	add	r2,r2,r2
  8215a8:	1085883a 	add	r2,r2,r2
  8215ac:	e0bfd115 	stw	r2,-188(fp)
  8215b0:	e0ffd017 	ldw	r3,-192(fp)
  8215b4:	e0bfce17 	ldw	r2,-200(fp)
  8215b8:	1885883a 	add	r2,r3,r2
  8215bc:	1007d2fa 	srai	r3,r2,11
  8215c0:	e0bfcb17 	ldw	r2,-212(fp)
  8215c4:	10c00015 	stw	r3,0(r2)
  8215c8:	e0bfcb17 	ldw	r2,-212(fp)
  8215cc:	10801e04 	addi	r2,r2,120
  8215d0:	e13fd017 	ldw	r4,-192(fp)
  8215d4:	e0ffce17 	ldw	r3,-200(fp)
  8215d8:	20c7c83a 	sub	r3,r4,r3
  8215dc:	1807d2fa 	srai	r3,r3,11
  8215e0:	10c00015 	stw	r3,0(r2)
  8215e4:	e0bfcb17 	ldw	r2,-212(fp)
  8215e8:	10800604 	addi	r2,r2,24
  8215ec:	e13fd217 	ldw	r4,-184(fp)
  8215f0:	e0ffd117 	ldw	r3,-188(fp)
  8215f4:	20c7883a 	add	r3,r4,r3
  8215f8:	10c00015 	stw	r3,0(r2)
  8215fc:	e0bfcb17 	ldw	r2,-212(fp)
  821600:	10801804 	addi	r2,r2,96
  821604:	e13fd217 	ldw	r4,-184(fp)
  821608:	e0ffd117 	ldw	r3,-188(fp)
  82160c:	20c7c83a 	sub	r3,r4,r3
  821610:	10c00015 	stw	r3,0(r2)
  821614:	e0bfcb17 	ldw	r2,-212(fp)
  821618:	10800c04 	addi	r2,r2,48
  82161c:	e13fd317 	ldw	r4,-180(fp)
  821620:	e0ffcf17 	ldw	r3,-196(fp)
  821624:	20c7883a 	add	r3,r4,r3
  821628:	1807d2fa 	srai	r3,r3,11
  82162c:	10c00015 	stw	r3,0(r2)
  821630:	e0bfcb17 	ldw	r2,-212(fp)
  821634:	10801204 	addi	r2,r2,72
  821638:	e13fd317 	ldw	r4,-180(fp)
  82163c:	e0ffcf17 	ldw	r3,-196(fp)
  821640:	20c7c83a 	sub	r3,r4,r3
  821644:	1807d2fa 	srai	r3,r3,11
  821648:	10c00015 	stw	r3,0(r2)
  82164c:	e0bfcc17 	ldw	r2,-208(fp)
  821650:	10800044 	addi	r2,r2,1
  821654:	e0bfcc15 	stw	r2,-208(fp)
  821658:	e0bfc917 	ldw	r2,-220(fp)
  82165c:	10800084 	addi	r2,r2,2
  821660:	e0bfc915 	stw	r2,-220(fp)
  821664:	e0bfca17 	ldw	r2,-216(fp)
  821668:	10800104 	addi	r2,r2,4
  82166c:	e0bfca15 	stw	r2,-216(fp)
  821670:	e0bfcb17 	ldw	r2,-212(fp)
  821674:	10800104 	addi	r2,r2,4
  821678:	e0bfcb15 	stw	r2,-212(fp)
  82167c:	e0bfcc17 	ldw	r2,-208(fp)
  821680:	10800190 	cmplti	r2,r2,6
  821684:	103f401e 	bne	r2,zero,821388 <__alt_mem_epcs_flash_controller_0+0xff818388>
  821688:	e0bfd804 	addi	r2,fp,-160
  82168c:	e0bfcb15 	stw	r2,-212(fp)
  821690:	e03fcc15 	stw	zero,-208(fp)
  821694:	0000a206 	br	821920 <jpeg_idct_6x6+0x5ec>
  821698:	e0bfcc17 	ldw	r2,-208(fp)
  82169c:	1085883a 	add	r2,r2,r2
  8216a0:	1085883a 	add	r2,r2,r2
  8216a4:	1007883a 	mov	r3,r2
  8216a8:	e0bfff17 	ldw	r2,-4(fp)
  8216ac:	10c5883a 	add	r2,r2,r3
  8216b0:	10c00017 	ldw	r3,0(r2)
  8216b4:	e0800217 	ldw	r2,8(fp)
  8216b8:	1885883a 	add	r2,r3,r2
  8216bc:	e0bfd715 	stw	r2,-164(fp)
  8216c0:	e0bfcb17 	ldw	r2,-212(fp)
  8216c4:	10800017 	ldw	r2,0(r2)
  8216c8:	10900404 	addi	r2,r2,16400
  8216cc:	e0bfce15 	stw	r2,-200(fp)
  8216d0:	e0bfce17 	ldw	r2,-200(fp)
  8216d4:	1004937a 	slli	r2,r2,13
  8216d8:	e0bfce15 	stw	r2,-200(fp)
  8216dc:	e0bfcb17 	ldw	r2,-212(fp)
  8216e0:	10800404 	addi	r2,r2,16
  8216e4:	10800017 	ldw	r2,0(r2)
  8216e8:	e0bfcf15 	stw	r2,-196(fp)
  8216ec:	0145a844 	movi	r5,5793
  8216f0:	e13fcf17 	ldw	r4,-196(fp)
  8216f4:	08305040 	call	830504 <__mulsi3>
  8216f8:	e0bfd015 	stw	r2,-192(fp)
  8216fc:	e0ffce17 	ldw	r3,-200(fp)
  821700:	e0bfd017 	ldw	r2,-192(fp)
  821704:	1885883a 	add	r2,r3,r2
  821708:	e0bfd115 	stw	r2,-188(fp)
  82170c:	e0ffce17 	ldw	r3,-200(fp)
  821710:	e0bfd017 	ldw	r2,-192(fp)
  821714:	1887c83a 	sub	r3,r3,r2
  821718:	e0bfd017 	ldw	r2,-192(fp)
  82171c:	1885c83a 	sub	r2,r3,r2
  821720:	e0bfd215 	stw	r2,-184(fp)
  821724:	e0bfcb17 	ldw	r2,-212(fp)
  821728:	10800204 	addi	r2,r2,8
  82172c:	10800017 	ldw	r2,0(r2)
  821730:	e0bfd015 	stw	r2,-192(fp)
  821734:	0149cc44 	movi	r5,10033
  821738:	e13fd017 	ldw	r4,-192(fp)
  82173c:	08305040 	call	830504 <__mulsi3>
  821740:	e0bfce15 	stw	r2,-200(fp)
  821744:	e0ffd117 	ldw	r3,-188(fp)
  821748:	e0bfce17 	ldw	r2,-200(fp)
  82174c:	1885883a 	add	r2,r3,r2
  821750:	e0bfd015 	stw	r2,-192(fp)
  821754:	e0ffd117 	ldw	r3,-188(fp)
  821758:	e0bfce17 	ldw	r2,-200(fp)
  82175c:	1885c83a 	sub	r2,r3,r2
  821760:	e0bfd315 	stw	r2,-180(fp)
  821764:	e0bfcb17 	ldw	r2,-212(fp)
  821768:	10800104 	addi	r2,r2,4
  82176c:	10800017 	ldw	r2,0(r2)
  821770:	e0bfd415 	stw	r2,-176(fp)
  821774:	e0bfcb17 	ldw	r2,-212(fp)
  821778:	10800304 	addi	r2,r2,12
  82177c:	10800017 	ldw	r2,0(r2)
  821780:	e0bfd515 	stw	r2,-172(fp)
  821784:	e0bfcb17 	ldw	r2,-212(fp)
  821788:	10800504 	addi	r2,r2,20
  82178c:	10800017 	ldw	r2,0(r2)
  821790:	e0bfd615 	stw	r2,-168(fp)
  821794:	e0ffd417 	ldw	r3,-176(fp)
  821798:	e0bfd617 	ldw	r2,-168(fp)
  82179c:	1885883a 	add	r2,r3,r2
  8217a0:	0142ed84 	movi	r5,2998
  8217a4:	1009883a 	mov	r4,r2
  8217a8:	08305040 	call	830504 <__mulsi3>
  8217ac:	e0bfd115 	stw	r2,-188(fp)
  8217b0:	e0ffd417 	ldw	r3,-176(fp)
  8217b4:	e0bfd517 	ldw	r2,-172(fp)
  8217b8:	1885883a 	add	r2,r3,r2
  8217bc:	1006937a 	slli	r3,r2,13
  8217c0:	e0bfd117 	ldw	r2,-188(fp)
  8217c4:	1885883a 	add	r2,r3,r2
  8217c8:	e0bfce15 	stw	r2,-200(fp)
  8217cc:	e0ffd617 	ldw	r3,-168(fp)
  8217d0:	e0bfd517 	ldw	r2,-172(fp)
  8217d4:	1885c83a 	sub	r2,r3,r2
  8217d8:	1006937a 	slli	r3,r2,13
  8217dc:	e0bfd117 	ldw	r2,-188(fp)
  8217e0:	1885883a 	add	r2,r3,r2
  8217e4:	e0bfcf15 	stw	r2,-196(fp)
  8217e8:	e0ffd417 	ldw	r3,-176(fp)
  8217ec:	e0bfd517 	ldw	r2,-172(fp)
  8217f0:	1887c83a 	sub	r3,r3,r2
  8217f4:	e0bfd617 	ldw	r2,-168(fp)
  8217f8:	1885c83a 	sub	r2,r3,r2
  8217fc:	1004937a 	slli	r2,r2,13
  821800:	e0bfd115 	stw	r2,-188(fp)
  821804:	e0ffd017 	ldw	r3,-192(fp)
  821808:	e0bfce17 	ldw	r2,-200(fp)
  82180c:	1885883a 	add	r2,r3,r2
  821810:	1005d4ba 	srai	r2,r2,18
  821814:	1080ffcc 	andi	r2,r2,1023
  821818:	e0ffcd17 	ldw	r3,-204(fp)
  82181c:	1885883a 	add	r2,r3,r2
  821820:	10c00003 	ldbu	r3,0(r2)
  821824:	e0bfd717 	ldw	r2,-164(fp)
  821828:	10c00005 	stb	r3,0(r2)
  82182c:	e0bfd717 	ldw	r2,-164(fp)
  821830:	10800144 	addi	r2,r2,5
  821834:	e13fd017 	ldw	r4,-192(fp)
  821838:	e0ffce17 	ldw	r3,-200(fp)
  82183c:	20c7c83a 	sub	r3,r4,r3
  821840:	1807d4ba 	srai	r3,r3,18
  821844:	18c0ffcc 	andi	r3,r3,1023
  821848:	e13fcd17 	ldw	r4,-204(fp)
  82184c:	20c7883a 	add	r3,r4,r3
  821850:	18c00003 	ldbu	r3,0(r3)
  821854:	10c00005 	stb	r3,0(r2)
  821858:	e0bfd717 	ldw	r2,-164(fp)
  82185c:	10800044 	addi	r2,r2,1
  821860:	e13fd217 	ldw	r4,-184(fp)
  821864:	e0ffd117 	ldw	r3,-188(fp)
  821868:	20c7883a 	add	r3,r4,r3
  82186c:	1807d4ba 	srai	r3,r3,18
  821870:	18c0ffcc 	andi	r3,r3,1023
  821874:	e13fcd17 	ldw	r4,-204(fp)
  821878:	20c7883a 	add	r3,r4,r3
  82187c:	18c00003 	ldbu	r3,0(r3)
  821880:	10c00005 	stb	r3,0(r2)
  821884:	e0bfd717 	ldw	r2,-164(fp)
  821888:	10800104 	addi	r2,r2,4
  82188c:	e13fd217 	ldw	r4,-184(fp)
  821890:	e0ffd117 	ldw	r3,-188(fp)
  821894:	20c7c83a 	sub	r3,r4,r3
  821898:	1807d4ba 	srai	r3,r3,18
  82189c:	18c0ffcc 	andi	r3,r3,1023
  8218a0:	e13fcd17 	ldw	r4,-204(fp)
  8218a4:	20c7883a 	add	r3,r4,r3
  8218a8:	18c00003 	ldbu	r3,0(r3)
  8218ac:	10c00005 	stb	r3,0(r2)
  8218b0:	e0bfd717 	ldw	r2,-164(fp)
  8218b4:	10800084 	addi	r2,r2,2
  8218b8:	e13fd317 	ldw	r4,-180(fp)
  8218bc:	e0ffcf17 	ldw	r3,-196(fp)
  8218c0:	20c7883a 	add	r3,r4,r3
  8218c4:	1807d4ba 	srai	r3,r3,18
  8218c8:	18c0ffcc 	andi	r3,r3,1023
  8218cc:	e13fcd17 	ldw	r4,-204(fp)
  8218d0:	20c7883a 	add	r3,r4,r3
  8218d4:	18c00003 	ldbu	r3,0(r3)
  8218d8:	10c00005 	stb	r3,0(r2)
  8218dc:	e0bfd717 	ldw	r2,-164(fp)
  8218e0:	108000c4 	addi	r2,r2,3
  8218e4:	e13fd317 	ldw	r4,-180(fp)
  8218e8:	e0ffcf17 	ldw	r3,-196(fp)
  8218ec:	20c7c83a 	sub	r3,r4,r3
  8218f0:	1807d4ba 	srai	r3,r3,18
  8218f4:	18c0ffcc 	andi	r3,r3,1023
  8218f8:	e13fcd17 	ldw	r4,-204(fp)
  8218fc:	20c7883a 	add	r3,r4,r3
  821900:	18c00003 	ldbu	r3,0(r3)
  821904:	10c00005 	stb	r3,0(r2)
  821908:	e0bfcb17 	ldw	r2,-212(fp)
  82190c:	10800604 	addi	r2,r2,24
  821910:	e0bfcb15 	stw	r2,-212(fp)
  821914:	e0bfcc17 	ldw	r2,-208(fp)
  821918:	10800044 	addi	r2,r2,1
  82191c:	e0bfcc15 	stw	r2,-208(fp)
  821920:	e0bfcc17 	ldw	r2,-208(fp)
  821924:	10800190 	cmplti	r2,r2,6
  821928:	103f5b1e 	bne	r2,zero,821698 <__alt_mem_epcs_flash_controller_0+0xff818698>
  82192c:	0001883a 	nop
  821930:	e037883a 	mov	sp,fp
  821934:	dfc00117 	ldw	ra,4(sp)
  821938:	df000017 	ldw	fp,0(sp)
  82193c:	dec00204 	addi	sp,sp,8
  821940:	f800283a 	ret

00821944 <jpeg_idct_5x5>:
  821944:	deffd304 	addi	sp,sp,-180
  821948:	dfc02c15 	stw	ra,176(sp)
  82194c:	df002b15 	stw	fp,172(sp)
  821950:	df002b04 	addi	fp,sp,172
  821954:	e13ffc15 	stw	r4,-16(fp)
  821958:	e17ffd15 	stw	r5,-12(fp)
  82195c:	e1bffe15 	stw	r6,-8(fp)
  821960:	e1ffff15 	stw	r7,-4(fp)
  821964:	e0bffc17 	ldw	r2,-16(fp)
  821968:	10805417 	ldw	r2,336(r2)
  82196c:	10bfa004 	addi	r2,r2,-384
  821970:	e0bfd915 	stw	r2,-156(fp)
  821974:	e0bffe17 	ldw	r2,-8(fp)
  821978:	e0bfd515 	stw	r2,-172(fp)
  82197c:	e0bffd17 	ldw	r2,-12(fp)
  821980:	10801517 	ldw	r2,84(r2)
  821984:	e0bfd615 	stw	r2,-168(fp)
  821988:	e0bfe304 	addi	r2,fp,-116
  82198c:	e0bfd715 	stw	r2,-164(fp)
  821990:	e03fd815 	stw	zero,-160(fp)
  821994:	0000a706 	br	821c34 <jpeg_idct_5x5+0x2f0>
  821998:	e0bfd517 	ldw	r2,-172(fp)
  82199c:	1080000b 	ldhu	r2,0(r2)
  8219a0:	10ffffcc 	andi	r3,r2,65535
  8219a4:	18e0001c 	xori	r3,r3,32768
  8219a8:	18e00004 	addi	r3,r3,-32768
  8219ac:	e0bfd617 	ldw	r2,-168(fp)
  8219b0:	10800017 	ldw	r2,0(r2)
  8219b4:	100b883a 	mov	r5,r2
  8219b8:	1809883a 	mov	r4,r3
  8219bc:	08305040 	call	830504 <__mulsi3>
  8219c0:	e0bfda15 	stw	r2,-152(fp)
  8219c4:	e0bfda17 	ldw	r2,-152(fp)
  8219c8:	1004937a 	slli	r2,r2,13
  8219cc:	e0bfda15 	stw	r2,-152(fp)
  8219d0:	e0bfda17 	ldw	r2,-152(fp)
  8219d4:	10810004 	addi	r2,r2,1024
  8219d8:	e0bfda15 	stw	r2,-152(fp)
  8219dc:	e0bfd517 	ldw	r2,-172(fp)
  8219e0:	10800804 	addi	r2,r2,32
  8219e4:	1080000b 	ldhu	r2,0(r2)
  8219e8:	10ffffcc 	andi	r3,r2,65535
  8219ec:	18e0001c 	xori	r3,r3,32768
  8219f0:	18e00004 	addi	r3,r3,-32768
  8219f4:	e0bfd617 	ldw	r2,-168(fp)
  8219f8:	10801004 	addi	r2,r2,64
  8219fc:	10800017 	ldw	r2,0(r2)
  821a00:	100b883a 	mov	r5,r2
  821a04:	1809883a 	mov	r4,r3
  821a08:	08305040 	call	830504 <__mulsi3>
  821a0c:	e0bfdb15 	stw	r2,-148(fp)
  821a10:	e0bfd517 	ldw	r2,-172(fp)
  821a14:	10801004 	addi	r2,r2,64
  821a18:	1080000b 	ldhu	r2,0(r2)
  821a1c:	10ffffcc 	andi	r3,r2,65535
  821a20:	18e0001c 	xori	r3,r3,32768
  821a24:	18e00004 	addi	r3,r3,-32768
  821a28:	e0bfd617 	ldw	r2,-168(fp)
  821a2c:	10802004 	addi	r2,r2,128
  821a30:	10800017 	ldw	r2,0(r2)
  821a34:	100b883a 	mov	r5,r2
  821a38:	1809883a 	mov	r4,r3
  821a3c:	08305040 	call	830504 <__mulsi3>
  821a40:	e0bfdc15 	stw	r2,-144(fp)
  821a44:	e0ffdb17 	ldw	r3,-148(fp)
  821a48:	e0bfdc17 	ldw	r2,-144(fp)
  821a4c:	1885883a 	add	r2,r3,r2
  821a50:	01465304 	movi	r5,6476
  821a54:	1009883a 	mov	r4,r2
  821a58:	08305040 	call	830504 <__mulsi3>
  821a5c:	e0bfdd15 	stw	r2,-140(fp)
  821a60:	e0ffdb17 	ldw	r3,-148(fp)
  821a64:	e0bfdc17 	ldw	r2,-144(fp)
  821a68:	1885c83a 	sub	r2,r3,r2
  821a6c:	0142d404 	movi	r5,2896
  821a70:	1009883a 	mov	r4,r2
  821a74:	08305040 	call	830504 <__mulsi3>
  821a78:	e0bfde15 	stw	r2,-136(fp)
  821a7c:	e0ffda17 	ldw	r3,-152(fp)
  821a80:	e0bfde17 	ldw	r2,-136(fp)
  821a84:	1885883a 	add	r2,r3,r2
  821a88:	e0bfdf15 	stw	r2,-132(fp)
  821a8c:	e0ffdf17 	ldw	r3,-132(fp)
  821a90:	e0bfdd17 	ldw	r2,-140(fp)
  821a94:	1885883a 	add	r2,r3,r2
  821a98:	e0bfe015 	stw	r2,-128(fp)
  821a9c:	e0ffdf17 	ldw	r3,-132(fp)
  821aa0:	e0bfdd17 	ldw	r2,-140(fp)
  821aa4:	1885c83a 	sub	r2,r3,r2
  821aa8:	e0bfe115 	stw	r2,-124(fp)
  821aac:	e0bfde17 	ldw	r2,-136(fp)
  821ab0:	1085883a 	add	r2,r2,r2
  821ab4:	1085883a 	add	r2,r2,r2
  821ab8:	1007883a 	mov	r3,r2
  821abc:	e0bfda17 	ldw	r2,-152(fp)
  821ac0:	10c5c83a 	sub	r2,r2,r3
  821ac4:	e0bfda15 	stw	r2,-152(fp)
  821ac8:	e0bfd517 	ldw	r2,-172(fp)
  821acc:	10800404 	addi	r2,r2,16
  821ad0:	1080000b 	ldhu	r2,0(r2)
  821ad4:	10ffffcc 	andi	r3,r2,65535
  821ad8:	18e0001c 	xori	r3,r3,32768
  821adc:	18e00004 	addi	r3,r3,-32768
  821ae0:	e0bfd617 	ldw	r2,-168(fp)
  821ae4:	10800804 	addi	r2,r2,32
  821ae8:	10800017 	ldw	r2,0(r2)
  821aec:	100b883a 	mov	r5,r2
  821af0:	1809883a 	mov	r4,r3
  821af4:	08305040 	call	830504 <__mulsi3>
  821af8:	e0bfde15 	stw	r2,-136(fp)
  821afc:	e0bfd517 	ldw	r2,-172(fp)
  821b00:	10800c04 	addi	r2,r2,48
  821b04:	1080000b 	ldhu	r2,0(r2)
  821b08:	10ffffcc 	andi	r3,r2,65535
  821b0c:	18e0001c 	xori	r3,r3,32768
  821b10:	18e00004 	addi	r3,r3,-32768
  821b14:	e0bfd617 	ldw	r2,-168(fp)
  821b18:	10801804 	addi	r2,r2,96
  821b1c:	10800017 	ldw	r2,0(r2)
  821b20:	100b883a 	mov	r5,r2
  821b24:	1809883a 	mov	r4,r3
  821b28:	08305040 	call	830504 <__mulsi3>
  821b2c:	e0bfdf15 	stw	r2,-132(fp)
  821b30:	e0ffde17 	ldw	r3,-136(fp)
  821b34:	e0bfdf17 	ldw	r2,-132(fp)
  821b38:	1885883a 	add	r2,r3,r2
  821b3c:	0146a684 	movi	r5,6810
  821b40:	1009883a 	mov	r4,r2
  821b44:	08305040 	call	830504 <__mulsi3>
  821b48:	e0bfdd15 	stw	r2,-140(fp)
  821b4c:	01441c44 	movi	r5,4209
  821b50:	e13fde17 	ldw	r4,-136(fp)
  821b54:	08305040 	call	830504 <__mulsi3>
  821b58:	1007883a 	mov	r3,r2
  821b5c:	e0bfdd17 	ldw	r2,-140(fp)
  821b60:	1885883a 	add	r2,r3,r2
  821b64:	e0bfdb15 	stw	r2,-148(fp)
  821b68:	016e9704 	movi	r5,-17828
  821b6c:	e13fdf17 	ldw	r4,-132(fp)
  821b70:	08305040 	call	830504 <__mulsi3>
  821b74:	1007883a 	mov	r3,r2
  821b78:	e0bfdd17 	ldw	r2,-140(fp)
  821b7c:	1885883a 	add	r2,r3,r2
  821b80:	e0bfdc15 	stw	r2,-144(fp)
  821b84:	e0ffe017 	ldw	r3,-128(fp)
  821b88:	e0bfdb17 	ldw	r2,-148(fp)
  821b8c:	1885883a 	add	r2,r3,r2
  821b90:	1007d2fa 	srai	r3,r2,11
  821b94:	e0bfd717 	ldw	r2,-164(fp)
  821b98:	10c00015 	stw	r3,0(r2)
  821b9c:	e0bfd717 	ldw	r2,-164(fp)
  821ba0:	10801404 	addi	r2,r2,80
  821ba4:	e13fe017 	ldw	r4,-128(fp)
  821ba8:	e0ffdb17 	ldw	r3,-148(fp)
  821bac:	20c7c83a 	sub	r3,r4,r3
  821bb0:	1807d2fa 	srai	r3,r3,11
  821bb4:	10c00015 	stw	r3,0(r2)
  821bb8:	e0bfd717 	ldw	r2,-164(fp)
  821bbc:	10800504 	addi	r2,r2,20
  821bc0:	e13fe117 	ldw	r4,-124(fp)
  821bc4:	e0ffdc17 	ldw	r3,-144(fp)
  821bc8:	20c7883a 	add	r3,r4,r3
  821bcc:	1807d2fa 	srai	r3,r3,11
  821bd0:	10c00015 	stw	r3,0(r2)
  821bd4:	e0bfd717 	ldw	r2,-164(fp)
  821bd8:	10800f04 	addi	r2,r2,60
  821bdc:	e13fe117 	ldw	r4,-124(fp)
  821be0:	e0ffdc17 	ldw	r3,-144(fp)
  821be4:	20c7c83a 	sub	r3,r4,r3
  821be8:	1807d2fa 	srai	r3,r3,11
  821bec:	10c00015 	stw	r3,0(r2)
  821bf0:	e0bfd717 	ldw	r2,-164(fp)
  821bf4:	10800a04 	addi	r2,r2,40
  821bf8:	e0ffda17 	ldw	r3,-152(fp)
  821bfc:	1807d2fa 	srai	r3,r3,11
  821c00:	10c00015 	stw	r3,0(r2)
  821c04:	e0bfd817 	ldw	r2,-160(fp)
  821c08:	10800044 	addi	r2,r2,1
  821c0c:	e0bfd815 	stw	r2,-160(fp)
  821c10:	e0bfd517 	ldw	r2,-172(fp)
  821c14:	10800084 	addi	r2,r2,2
  821c18:	e0bfd515 	stw	r2,-172(fp)
  821c1c:	e0bfd617 	ldw	r2,-168(fp)
  821c20:	10800104 	addi	r2,r2,4
  821c24:	e0bfd615 	stw	r2,-168(fp)
  821c28:	e0bfd717 	ldw	r2,-164(fp)
  821c2c:	10800104 	addi	r2,r2,4
  821c30:	e0bfd715 	stw	r2,-164(fp)
  821c34:	e0bfd817 	ldw	r2,-160(fp)
  821c38:	10800150 	cmplti	r2,r2,5
  821c3c:	103f561e 	bne	r2,zero,821998 <__alt_mem_epcs_flash_controller_0+0xff818998>
  821c40:	e0bfe304 	addi	r2,fp,-116
  821c44:	e0bfd715 	stw	r2,-164(fp)
  821c48:	e03fd815 	stw	zero,-160(fp)
  821c4c:	00009106 	br	821e94 <jpeg_idct_5x5+0x550>
  821c50:	e0bfd817 	ldw	r2,-160(fp)
  821c54:	1085883a 	add	r2,r2,r2
  821c58:	1085883a 	add	r2,r2,r2
  821c5c:	1007883a 	mov	r3,r2
  821c60:	e0bfff17 	ldw	r2,-4(fp)
  821c64:	10c5883a 	add	r2,r2,r3
  821c68:	10c00017 	ldw	r3,0(r2)
  821c6c:	e0800217 	ldw	r2,8(fp)
  821c70:	1885883a 	add	r2,r3,r2
  821c74:	e0bfe215 	stw	r2,-120(fp)
  821c78:	e0bfd717 	ldw	r2,-164(fp)
  821c7c:	10800017 	ldw	r2,0(r2)
  821c80:	10900404 	addi	r2,r2,16400
  821c84:	e0bfda15 	stw	r2,-152(fp)
  821c88:	e0bfda17 	ldw	r2,-152(fp)
  821c8c:	1004937a 	slli	r2,r2,13
  821c90:	e0bfda15 	stw	r2,-152(fp)
  821c94:	e0bfd717 	ldw	r2,-164(fp)
  821c98:	10800204 	addi	r2,r2,8
  821c9c:	10800017 	ldw	r2,0(r2)
  821ca0:	e0bfdb15 	stw	r2,-148(fp)
  821ca4:	e0bfd717 	ldw	r2,-164(fp)
  821ca8:	10800404 	addi	r2,r2,16
  821cac:	10800017 	ldw	r2,0(r2)
  821cb0:	e0bfdc15 	stw	r2,-144(fp)
  821cb4:	e0ffdb17 	ldw	r3,-148(fp)
  821cb8:	e0bfdc17 	ldw	r2,-144(fp)
  821cbc:	1885883a 	add	r2,r3,r2
  821cc0:	01465304 	movi	r5,6476
  821cc4:	1009883a 	mov	r4,r2
  821cc8:	08305040 	call	830504 <__mulsi3>
  821ccc:	e0bfdd15 	stw	r2,-140(fp)
  821cd0:	e0ffdb17 	ldw	r3,-148(fp)
  821cd4:	e0bfdc17 	ldw	r2,-144(fp)
  821cd8:	1885c83a 	sub	r2,r3,r2
  821cdc:	0142d404 	movi	r5,2896
  821ce0:	1009883a 	mov	r4,r2
  821ce4:	08305040 	call	830504 <__mulsi3>
  821ce8:	e0bfde15 	stw	r2,-136(fp)
  821cec:	e0ffda17 	ldw	r3,-152(fp)
  821cf0:	e0bfde17 	ldw	r2,-136(fp)
  821cf4:	1885883a 	add	r2,r3,r2
  821cf8:	e0bfdf15 	stw	r2,-132(fp)
  821cfc:	e0ffdf17 	ldw	r3,-132(fp)
  821d00:	e0bfdd17 	ldw	r2,-140(fp)
  821d04:	1885883a 	add	r2,r3,r2
  821d08:	e0bfe015 	stw	r2,-128(fp)
  821d0c:	e0ffdf17 	ldw	r3,-132(fp)
  821d10:	e0bfdd17 	ldw	r2,-140(fp)
  821d14:	1885c83a 	sub	r2,r3,r2
  821d18:	e0bfe115 	stw	r2,-124(fp)
  821d1c:	e0bfde17 	ldw	r2,-136(fp)
  821d20:	1085883a 	add	r2,r2,r2
  821d24:	1085883a 	add	r2,r2,r2
  821d28:	1007883a 	mov	r3,r2
  821d2c:	e0bfda17 	ldw	r2,-152(fp)
  821d30:	10c5c83a 	sub	r2,r2,r3
  821d34:	e0bfda15 	stw	r2,-152(fp)
  821d38:	e0bfd717 	ldw	r2,-164(fp)
  821d3c:	10800104 	addi	r2,r2,4
  821d40:	10800017 	ldw	r2,0(r2)
  821d44:	e0bfde15 	stw	r2,-136(fp)
  821d48:	e0bfd717 	ldw	r2,-164(fp)
  821d4c:	10800304 	addi	r2,r2,12
  821d50:	10800017 	ldw	r2,0(r2)
  821d54:	e0bfdf15 	stw	r2,-132(fp)
  821d58:	e0ffde17 	ldw	r3,-136(fp)
  821d5c:	e0bfdf17 	ldw	r2,-132(fp)
  821d60:	1885883a 	add	r2,r3,r2
  821d64:	0146a684 	movi	r5,6810
  821d68:	1009883a 	mov	r4,r2
  821d6c:	08305040 	call	830504 <__mulsi3>
  821d70:	e0bfdd15 	stw	r2,-140(fp)
  821d74:	01441c44 	movi	r5,4209
  821d78:	e13fde17 	ldw	r4,-136(fp)
  821d7c:	08305040 	call	830504 <__mulsi3>
  821d80:	1007883a 	mov	r3,r2
  821d84:	e0bfdd17 	ldw	r2,-140(fp)
  821d88:	1885883a 	add	r2,r3,r2
  821d8c:	e0bfdb15 	stw	r2,-148(fp)
  821d90:	016e9704 	movi	r5,-17828
  821d94:	e13fdf17 	ldw	r4,-132(fp)
  821d98:	08305040 	call	830504 <__mulsi3>
  821d9c:	1007883a 	mov	r3,r2
  821da0:	e0bfdd17 	ldw	r2,-140(fp)
  821da4:	1885883a 	add	r2,r3,r2
  821da8:	e0bfdc15 	stw	r2,-144(fp)
  821dac:	e0ffe017 	ldw	r3,-128(fp)
  821db0:	e0bfdb17 	ldw	r2,-148(fp)
  821db4:	1885883a 	add	r2,r3,r2
  821db8:	1005d4ba 	srai	r2,r2,18
  821dbc:	1080ffcc 	andi	r2,r2,1023
  821dc0:	e0ffd917 	ldw	r3,-156(fp)
  821dc4:	1885883a 	add	r2,r3,r2
  821dc8:	10c00003 	ldbu	r3,0(r2)
  821dcc:	e0bfe217 	ldw	r2,-120(fp)
  821dd0:	10c00005 	stb	r3,0(r2)
  821dd4:	e0bfe217 	ldw	r2,-120(fp)
  821dd8:	10800104 	addi	r2,r2,4
  821ddc:	e13fe017 	ldw	r4,-128(fp)
  821de0:	e0ffdb17 	ldw	r3,-148(fp)
  821de4:	20c7c83a 	sub	r3,r4,r3
  821de8:	1807d4ba 	srai	r3,r3,18
  821dec:	18c0ffcc 	andi	r3,r3,1023
  821df0:	e13fd917 	ldw	r4,-156(fp)
  821df4:	20c7883a 	add	r3,r4,r3
  821df8:	18c00003 	ldbu	r3,0(r3)
  821dfc:	10c00005 	stb	r3,0(r2)
  821e00:	e0bfe217 	ldw	r2,-120(fp)
  821e04:	10800044 	addi	r2,r2,1
  821e08:	e13fe117 	ldw	r4,-124(fp)
  821e0c:	e0ffdc17 	ldw	r3,-144(fp)
  821e10:	20c7883a 	add	r3,r4,r3
  821e14:	1807d4ba 	srai	r3,r3,18
  821e18:	18c0ffcc 	andi	r3,r3,1023
  821e1c:	e13fd917 	ldw	r4,-156(fp)
  821e20:	20c7883a 	add	r3,r4,r3
  821e24:	18c00003 	ldbu	r3,0(r3)
  821e28:	10c00005 	stb	r3,0(r2)
  821e2c:	e0bfe217 	ldw	r2,-120(fp)
  821e30:	108000c4 	addi	r2,r2,3
  821e34:	e13fe117 	ldw	r4,-124(fp)
  821e38:	e0ffdc17 	ldw	r3,-144(fp)
  821e3c:	20c7c83a 	sub	r3,r4,r3
  821e40:	1807d4ba 	srai	r3,r3,18
  821e44:	18c0ffcc 	andi	r3,r3,1023
  821e48:	e13fd917 	ldw	r4,-156(fp)
  821e4c:	20c7883a 	add	r3,r4,r3
  821e50:	18c00003 	ldbu	r3,0(r3)
  821e54:	10c00005 	stb	r3,0(r2)
  821e58:	e0bfe217 	ldw	r2,-120(fp)
  821e5c:	10800084 	addi	r2,r2,2
  821e60:	e0ffda17 	ldw	r3,-152(fp)
  821e64:	1807d4ba 	srai	r3,r3,18
  821e68:	18c0ffcc 	andi	r3,r3,1023
  821e6c:	e13fd917 	ldw	r4,-156(fp)
  821e70:	20c7883a 	add	r3,r4,r3
  821e74:	18c00003 	ldbu	r3,0(r3)
  821e78:	10c00005 	stb	r3,0(r2)
  821e7c:	e0bfd717 	ldw	r2,-164(fp)
  821e80:	10800504 	addi	r2,r2,20
  821e84:	e0bfd715 	stw	r2,-164(fp)
  821e88:	e0bfd817 	ldw	r2,-160(fp)
  821e8c:	10800044 	addi	r2,r2,1
  821e90:	e0bfd815 	stw	r2,-160(fp)
  821e94:	e0bfd817 	ldw	r2,-160(fp)
  821e98:	10800150 	cmplti	r2,r2,5
  821e9c:	103f6c1e 	bne	r2,zero,821c50 <__alt_mem_epcs_flash_controller_0+0xff818c50>
  821ea0:	0001883a 	nop
  821ea4:	e037883a 	mov	sp,fp
  821ea8:	dfc00117 	ldw	ra,4(sp)
  821eac:	df000017 	ldw	fp,0(sp)
  821eb0:	dec00204 	addi	sp,sp,8
  821eb4:	f800283a 	ret

00821eb8 <jpeg_idct_4x4>:
  821eb8:	deffdd04 	addi	sp,sp,-140
  821ebc:	dfc02215 	stw	ra,136(sp)
  821ec0:	df002115 	stw	fp,132(sp)
  821ec4:	df002104 	addi	fp,sp,132
  821ec8:	e13ffc15 	stw	r4,-16(fp)
  821ecc:	e17ffd15 	stw	r5,-12(fp)
  821ed0:	e1bffe15 	stw	r6,-8(fp)
  821ed4:	e1ffff15 	stw	r7,-4(fp)
  821ed8:	e0bffc17 	ldw	r2,-16(fp)
  821edc:	10805417 	ldw	r2,336(r2)
  821ee0:	10bfa004 	addi	r2,r2,-384
  821ee4:	e0bfe315 	stw	r2,-116(fp)
  821ee8:	e0bffe17 	ldw	r2,-8(fp)
  821eec:	e0bfdf15 	stw	r2,-132(fp)
  821ef0:	e0bffd17 	ldw	r2,-12(fp)
  821ef4:	10801517 	ldw	r2,84(r2)
  821ef8:	e0bfe015 	stw	r2,-128(fp)
  821efc:	e0bfec04 	addi	r2,fp,-80
  821f00:	e0bfe115 	stw	r2,-124(fp)
  821f04:	e03fe215 	stw	zero,-120(fp)
  821f08:	00007b06 	br	8220f8 <jpeg_idct_4x4+0x240>
  821f0c:	e0bfdf17 	ldw	r2,-132(fp)
  821f10:	1080000b 	ldhu	r2,0(r2)
  821f14:	10ffffcc 	andi	r3,r2,65535
  821f18:	18e0001c 	xori	r3,r3,32768
  821f1c:	18e00004 	addi	r3,r3,-32768
  821f20:	e0bfe017 	ldw	r2,-128(fp)
  821f24:	10800017 	ldw	r2,0(r2)
  821f28:	100b883a 	mov	r5,r2
  821f2c:	1809883a 	mov	r4,r3
  821f30:	08305040 	call	830504 <__mulsi3>
  821f34:	e0bfe415 	stw	r2,-112(fp)
  821f38:	e0bfdf17 	ldw	r2,-132(fp)
  821f3c:	10800804 	addi	r2,r2,32
  821f40:	1080000b 	ldhu	r2,0(r2)
  821f44:	10ffffcc 	andi	r3,r2,65535
  821f48:	18e0001c 	xori	r3,r3,32768
  821f4c:	18e00004 	addi	r3,r3,-32768
  821f50:	e0bfe017 	ldw	r2,-128(fp)
  821f54:	10801004 	addi	r2,r2,64
  821f58:	10800017 	ldw	r2,0(r2)
  821f5c:	100b883a 	mov	r5,r2
  821f60:	1809883a 	mov	r4,r3
  821f64:	08305040 	call	830504 <__mulsi3>
  821f68:	e0bfe515 	stw	r2,-108(fp)
  821f6c:	e0ffe417 	ldw	r3,-112(fp)
  821f70:	e0bfe517 	ldw	r2,-108(fp)
  821f74:	1885883a 	add	r2,r3,r2
  821f78:	1085883a 	add	r2,r2,r2
  821f7c:	1085883a 	add	r2,r2,r2
  821f80:	e0bfe615 	stw	r2,-104(fp)
  821f84:	e0ffe417 	ldw	r3,-112(fp)
  821f88:	e0bfe517 	ldw	r2,-108(fp)
  821f8c:	1885c83a 	sub	r2,r3,r2
  821f90:	1085883a 	add	r2,r2,r2
  821f94:	1085883a 	add	r2,r2,r2
  821f98:	e0bfe715 	stw	r2,-100(fp)
  821f9c:	e0bfdf17 	ldw	r2,-132(fp)
  821fa0:	10800404 	addi	r2,r2,16
  821fa4:	1080000b 	ldhu	r2,0(r2)
  821fa8:	10ffffcc 	andi	r3,r2,65535
  821fac:	18e0001c 	xori	r3,r3,32768
  821fb0:	18e00004 	addi	r3,r3,-32768
  821fb4:	e0bfe017 	ldw	r2,-128(fp)
  821fb8:	10800804 	addi	r2,r2,32
  821fbc:	10800017 	ldw	r2,0(r2)
  821fc0:	100b883a 	mov	r5,r2
  821fc4:	1809883a 	mov	r4,r3
  821fc8:	08305040 	call	830504 <__mulsi3>
  821fcc:	e0bfe815 	stw	r2,-96(fp)
  821fd0:	e0bfdf17 	ldw	r2,-132(fp)
  821fd4:	10800c04 	addi	r2,r2,48
  821fd8:	1080000b 	ldhu	r2,0(r2)
  821fdc:	10ffffcc 	andi	r3,r2,65535
  821fe0:	18e0001c 	xori	r3,r3,32768
  821fe4:	18e00004 	addi	r3,r3,-32768
  821fe8:	e0bfe017 	ldw	r2,-128(fp)
  821fec:	10801804 	addi	r2,r2,96
  821ff0:	10800017 	ldw	r2,0(r2)
  821ff4:	100b883a 	mov	r5,r2
  821ff8:	1809883a 	mov	r4,r3
  821ffc:	08305040 	call	830504 <__mulsi3>
  822000:	e0bfe915 	stw	r2,-92(fp)
  822004:	e0ffe817 	ldw	r3,-96(fp)
  822008:	e0bfe917 	ldw	r2,-92(fp)
  82200c:	1885883a 	add	r2,r3,r2
  822010:	01445444 	movi	r5,4433
  822014:	1009883a 	mov	r4,r2
  822018:	08305040 	call	830504 <__mulsi3>
  82201c:	e0bfea15 	stw	r2,-88(fp)
  822020:	e0bfea17 	ldw	r2,-88(fp)
  822024:	10810004 	addi	r2,r2,1024
  822028:	e0bfea15 	stw	r2,-88(fp)
  82202c:	01461f84 	movi	r5,6270
  822030:	e13fe817 	ldw	r4,-96(fp)
  822034:	08305040 	call	830504 <__mulsi3>
  822038:	1007883a 	mov	r3,r2
  82203c:	e0bfea17 	ldw	r2,-88(fp)
  822040:	1885883a 	add	r2,r3,r2
  822044:	1005d2fa 	srai	r2,r2,11
  822048:	e0bfe415 	stw	r2,-112(fp)
  82204c:	017137c4 	movi	r5,-15137
  822050:	e13fe917 	ldw	r4,-92(fp)
  822054:	08305040 	call	830504 <__mulsi3>
  822058:	1007883a 	mov	r3,r2
  82205c:	e0bfea17 	ldw	r2,-88(fp)
  822060:	1885883a 	add	r2,r3,r2
  822064:	1005d2fa 	srai	r2,r2,11
  822068:	e0bfe515 	stw	r2,-108(fp)
  82206c:	e0ffe617 	ldw	r3,-104(fp)
  822070:	e0bfe417 	ldw	r2,-112(fp)
  822074:	1887883a 	add	r3,r3,r2
  822078:	e0bfe117 	ldw	r2,-124(fp)
  82207c:	10c00015 	stw	r3,0(r2)
  822080:	e0bfe117 	ldw	r2,-124(fp)
  822084:	10800c04 	addi	r2,r2,48
  822088:	e13fe617 	ldw	r4,-104(fp)
  82208c:	e0ffe417 	ldw	r3,-112(fp)
  822090:	20c7c83a 	sub	r3,r4,r3
  822094:	10c00015 	stw	r3,0(r2)
  822098:	e0bfe117 	ldw	r2,-124(fp)
  82209c:	10800404 	addi	r2,r2,16
  8220a0:	e13fe717 	ldw	r4,-100(fp)
  8220a4:	e0ffe517 	ldw	r3,-108(fp)
  8220a8:	20c7883a 	add	r3,r4,r3
  8220ac:	10c00015 	stw	r3,0(r2)
  8220b0:	e0bfe117 	ldw	r2,-124(fp)
  8220b4:	10800804 	addi	r2,r2,32
  8220b8:	e13fe717 	ldw	r4,-100(fp)
  8220bc:	e0ffe517 	ldw	r3,-108(fp)
  8220c0:	20c7c83a 	sub	r3,r4,r3
  8220c4:	10c00015 	stw	r3,0(r2)
  8220c8:	e0bfe217 	ldw	r2,-120(fp)
  8220cc:	10800044 	addi	r2,r2,1
  8220d0:	e0bfe215 	stw	r2,-120(fp)
  8220d4:	e0bfdf17 	ldw	r2,-132(fp)
  8220d8:	10800084 	addi	r2,r2,2
  8220dc:	e0bfdf15 	stw	r2,-132(fp)
  8220e0:	e0bfe017 	ldw	r2,-128(fp)
  8220e4:	10800104 	addi	r2,r2,4
  8220e8:	e0bfe015 	stw	r2,-128(fp)
  8220ec:	e0bfe117 	ldw	r2,-124(fp)
  8220f0:	10800104 	addi	r2,r2,4
  8220f4:	e0bfe115 	stw	r2,-124(fp)
  8220f8:	e0bfe217 	ldw	r2,-120(fp)
  8220fc:	10800110 	cmplti	r2,r2,4
  822100:	103f821e 	bne	r2,zero,821f0c <__alt_mem_epcs_flash_controller_0+0xff818f0c>
  822104:	e0bfec04 	addi	r2,fp,-80
  822108:	e0bfe115 	stw	r2,-124(fp)
  82210c:	e03fe215 	stw	zero,-120(fp)
  822110:	00006a06 	br	8222bc <jpeg_idct_4x4+0x404>
  822114:	e0bfe217 	ldw	r2,-120(fp)
  822118:	1085883a 	add	r2,r2,r2
  82211c:	1085883a 	add	r2,r2,r2
  822120:	1007883a 	mov	r3,r2
  822124:	e0bfff17 	ldw	r2,-4(fp)
  822128:	10c5883a 	add	r2,r2,r3
  82212c:	10c00017 	ldw	r3,0(r2)
  822130:	e0800217 	ldw	r2,8(fp)
  822134:	1885883a 	add	r2,r3,r2
  822138:	e0bfeb15 	stw	r2,-84(fp)
  82213c:	e0bfe117 	ldw	r2,-124(fp)
  822140:	10800017 	ldw	r2,0(r2)
  822144:	10900404 	addi	r2,r2,16400
  822148:	e0bfe415 	stw	r2,-112(fp)
  82214c:	e0bfe117 	ldw	r2,-124(fp)
  822150:	10800204 	addi	r2,r2,8
  822154:	10800017 	ldw	r2,0(r2)
  822158:	e0bfe515 	stw	r2,-108(fp)
  82215c:	e0ffe417 	ldw	r3,-112(fp)
  822160:	e0bfe517 	ldw	r2,-108(fp)
  822164:	1885883a 	add	r2,r3,r2
  822168:	1004937a 	slli	r2,r2,13
  82216c:	e0bfe615 	stw	r2,-104(fp)
  822170:	e0ffe417 	ldw	r3,-112(fp)
  822174:	e0bfe517 	ldw	r2,-108(fp)
  822178:	1885c83a 	sub	r2,r3,r2
  82217c:	1004937a 	slli	r2,r2,13
  822180:	e0bfe715 	stw	r2,-100(fp)
  822184:	e0bfe117 	ldw	r2,-124(fp)
  822188:	10800104 	addi	r2,r2,4
  82218c:	10800017 	ldw	r2,0(r2)
  822190:	e0bfe815 	stw	r2,-96(fp)
  822194:	e0bfe117 	ldw	r2,-124(fp)
  822198:	10800304 	addi	r2,r2,12
  82219c:	10800017 	ldw	r2,0(r2)
  8221a0:	e0bfe915 	stw	r2,-92(fp)
  8221a4:	e0ffe817 	ldw	r3,-96(fp)
  8221a8:	e0bfe917 	ldw	r2,-92(fp)
  8221ac:	1885883a 	add	r2,r3,r2
  8221b0:	01445444 	movi	r5,4433
  8221b4:	1009883a 	mov	r4,r2
  8221b8:	08305040 	call	830504 <__mulsi3>
  8221bc:	e0bfea15 	stw	r2,-88(fp)
  8221c0:	01461f84 	movi	r5,6270
  8221c4:	e13fe817 	ldw	r4,-96(fp)
  8221c8:	08305040 	call	830504 <__mulsi3>
  8221cc:	1007883a 	mov	r3,r2
  8221d0:	e0bfea17 	ldw	r2,-88(fp)
  8221d4:	1885883a 	add	r2,r3,r2
  8221d8:	e0bfe415 	stw	r2,-112(fp)
  8221dc:	017137c4 	movi	r5,-15137
  8221e0:	e13fe917 	ldw	r4,-92(fp)
  8221e4:	08305040 	call	830504 <__mulsi3>
  8221e8:	1007883a 	mov	r3,r2
  8221ec:	e0bfea17 	ldw	r2,-88(fp)
  8221f0:	1885883a 	add	r2,r3,r2
  8221f4:	e0bfe515 	stw	r2,-108(fp)
  8221f8:	e0ffe617 	ldw	r3,-104(fp)
  8221fc:	e0bfe417 	ldw	r2,-112(fp)
  822200:	1885883a 	add	r2,r3,r2
  822204:	1005d4ba 	srai	r2,r2,18
  822208:	1080ffcc 	andi	r2,r2,1023
  82220c:	e0ffe317 	ldw	r3,-116(fp)
  822210:	1885883a 	add	r2,r3,r2
  822214:	10c00003 	ldbu	r3,0(r2)
  822218:	e0bfeb17 	ldw	r2,-84(fp)
  82221c:	10c00005 	stb	r3,0(r2)
  822220:	e0bfeb17 	ldw	r2,-84(fp)
  822224:	108000c4 	addi	r2,r2,3
  822228:	e13fe617 	ldw	r4,-104(fp)
  82222c:	e0ffe417 	ldw	r3,-112(fp)
  822230:	20c7c83a 	sub	r3,r4,r3
  822234:	1807d4ba 	srai	r3,r3,18
  822238:	18c0ffcc 	andi	r3,r3,1023
  82223c:	e13fe317 	ldw	r4,-116(fp)
  822240:	20c7883a 	add	r3,r4,r3
  822244:	18c00003 	ldbu	r3,0(r3)
  822248:	10c00005 	stb	r3,0(r2)
  82224c:	e0bfeb17 	ldw	r2,-84(fp)
  822250:	10800044 	addi	r2,r2,1
  822254:	e13fe717 	ldw	r4,-100(fp)
  822258:	e0ffe517 	ldw	r3,-108(fp)
  82225c:	20c7883a 	add	r3,r4,r3
  822260:	1807d4ba 	srai	r3,r3,18
  822264:	18c0ffcc 	andi	r3,r3,1023
  822268:	e13fe317 	ldw	r4,-116(fp)
  82226c:	20c7883a 	add	r3,r4,r3
  822270:	18c00003 	ldbu	r3,0(r3)
  822274:	10c00005 	stb	r3,0(r2)
  822278:	e0bfeb17 	ldw	r2,-84(fp)
  82227c:	10800084 	addi	r2,r2,2
  822280:	e13fe717 	ldw	r4,-100(fp)
  822284:	e0ffe517 	ldw	r3,-108(fp)
  822288:	20c7c83a 	sub	r3,r4,r3
  82228c:	1807d4ba 	srai	r3,r3,18
  822290:	18c0ffcc 	andi	r3,r3,1023
  822294:	e13fe317 	ldw	r4,-116(fp)
  822298:	20c7883a 	add	r3,r4,r3
  82229c:	18c00003 	ldbu	r3,0(r3)
  8222a0:	10c00005 	stb	r3,0(r2)
  8222a4:	e0bfe117 	ldw	r2,-124(fp)
  8222a8:	10800404 	addi	r2,r2,16
  8222ac:	e0bfe115 	stw	r2,-124(fp)
  8222b0:	e0bfe217 	ldw	r2,-120(fp)
  8222b4:	10800044 	addi	r2,r2,1
  8222b8:	e0bfe215 	stw	r2,-120(fp)
  8222bc:	e0bfe217 	ldw	r2,-120(fp)
  8222c0:	10800110 	cmplti	r2,r2,4
  8222c4:	103f931e 	bne	r2,zero,822114 <__alt_mem_epcs_flash_controller_0+0xff819114>
  8222c8:	0001883a 	nop
  8222cc:	e037883a 	mov	sp,fp
  8222d0:	dfc00117 	ldw	ra,4(sp)
  8222d4:	df000017 	ldw	fp,0(sp)
  8222d8:	dec00204 	addi	sp,sp,8
  8222dc:	f800283a 	ret

008222e0 <jpeg_idct_3x3>:
  8222e0:	deffe704 	addi	sp,sp,-100
  8222e4:	dfc01815 	stw	ra,96(sp)
  8222e8:	df001715 	stw	fp,92(sp)
  8222ec:	df001704 	addi	fp,sp,92
  8222f0:	e13ffc15 	stw	r4,-16(fp)
  8222f4:	e17ffd15 	stw	r5,-12(fp)
  8222f8:	e1bffe15 	stw	r6,-8(fp)
  8222fc:	e1ffff15 	stw	r7,-4(fp)
  822300:	e0bffc17 	ldw	r2,-16(fp)
  822304:	10805417 	ldw	r2,336(r2)
  822308:	10bfa004 	addi	r2,r2,-384
  82230c:	e0bfed15 	stw	r2,-76(fp)
  822310:	e0bffe17 	ldw	r2,-8(fp)
  822314:	e0bfe915 	stw	r2,-92(fp)
  822318:	e0bffd17 	ldw	r2,-12(fp)
  82231c:	10801517 	ldw	r2,84(r2)
  822320:	e0bfea15 	stw	r2,-88(fp)
  822324:	e0bff304 	addi	r2,fp,-52
  822328:	e0bfeb15 	stw	r2,-84(fp)
  82232c:	e03fec15 	stw	zero,-80(fp)
  822330:	00005b06 	br	8224a0 <jpeg_idct_3x3+0x1c0>
  822334:	e0bfe917 	ldw	r2,-92(fp)
  822338:	1080000b 	ldhu	r2,0(r2)
  82233c:	10ffffcc 	andi	r3,r2,65535
  822340:	18e0001c 	xori	r3,r3,32768
  822344:	18e00004 	addi	r3,r3,-32768
  822348:	e0bfea17 	ldw	r2,-88(fp)
  82234c:	10800017 	ldw	r2,0(r2)
  822350:	100b883a 	mov	r5,r2
  822354:	1809883a 	mov	r4,r3
  822358:	08305040 	call	830504 <__mulsi3>
  82235c:	e0bfee15 	stw	r2,-72(fp)
  822360:	e0bfee17 	ldw	r2,-72(fp)
  822364:	1004937a 	slli	r2,r2,13
  822368:	e0bfee15 	stw	r2,-72(fp)
  82236c:	e0bfee17 	ldw	r2,-72(fp)
  822370:	10810004 	addi	r2,r2,1024
  822374:	e0bfee15 	stw	r2,-72(fp)
  822378:	e0bfe917 	ldw	r2,-92(fp)
  82237c:	10800804 	addi	r2,r2,32
  822380:	1080000b 	ldhu	r2,0(r2)
  822384:	10ffffcc 	andi	r3,r2,65535
  822388:	18e0001c 	xori	r3,r3,32768
  82238c:	18e00004 	addi	r3,r3,-32768
  822390:	e0bfea17 	ldw	r2,-88(fp)
  822394:	10801004 	addi	r2,r2,64
  822398:	10800017 	ldw	r2,0(r2)
  82239c:	100b883a 	mov	r5,r2
  8223a0:	1809883a 	mov	r4,r3
  8223a4:	08305040 	call	830504 <__mulsi3>
  8223a8:	e0bfef15 	stw	r2,-68(fp)
  8223ac:	0145a844 	movi	r5,5793
  8223b0:	e13fef17 	ldw	r4,-68(fp)
  8223b4:	08305040 	call	830504 <__mulsi3>
  8223b8:	e0bff015 	stw	r2,-64(fp)
  8223bc:	e0ffee17 	ldw	r3,-72(fp)
  8223c0:	e0bff017 	ldw	r2,-64(fp)
  8223c4:	1885883a 	add	r2,r3,r2
  8223c8:	e0bff115 	stw	r2,-60(fp)
  8223cc:	e0ffee17 	ldw	r3,-72(fp)
  8223d0:	e0bff017 	ldw	r2,-64(fp)
  8223d4:	1887c83a 	sub	r3,r3,r2
  8223d8:	e0bff017 	ldw	r2,-64(fp)
  8223dc:	1885c83a 	sub	r2,r3,r2
  8223e0:	e0bfef15 	stw	r2,-68(fp)
  8223e4:	e0bfe917 	ldw	r2,-92(fp)
  8223e8:	10800404 	addi	r2,r2,16
  8223ec:	1080000b 	ldhu	r2,0(r2)
  8223f0:	10ffffcc 	andi	r3,r2,65535
  8223f4:	18e0001c 	xori	r3,r3,32768
  8223f8:	18e00004 	addi	r3,r3,-32768
  8223fc:	e0bfea17 	ldw	r2,-88(fp)
  822400:	10800804 	addi	r2,r2,32
  822404:	10800017 	ldw	r2,0(r2)
  822408:	100b883a 	mov	r5,r2
  82240c:	1809883a 	mov	r4,r3
  822410:	08305040 	call	830504 <__mulsi3>
  822414:	e0bff015 	stw	r2,-64(fp)
  822418:	0149cc44 	movi	r5,10033
  82241c:	e13ff017 	ldw	r4,-64(fp)
  822420:	08305040 	call	830504 <__mulsi3>
  822424:	e0bfee15 	stw	r2,-72(fp)
  822428:	e0fff117 	ldw	r3,-60(fp)
  82242c:	e0bfee17 	ldw	r2,-72(fp)
  822430:	1885883a 	add	r2,r3,r2
  822434:	1007d2fa 	srai	r3,r2,11
  822438:	e0bfeb17 	ldw	r2,-84(fp)
  82243c:	10c00015 	stw	r3,0(r2)
  822440:	e0bfeb17 	ldw	r2,-84(fp)
  822444:	10800604 	addi	r2,r2,24
  822448:	e13ff117 	ldw	r4,-60(fp)
  82244c:	e0ffee17 	ldw	r3,-72(fp)
  822450:	20c7c83a 	sub	r3,r4,r3
  822454:	1807d2fa 	srai	r3,r3,11
  822458:	10c00015 	stw	r3,0(r2)
  82245c:	e0bfeb17 	ldw	r2,-84(fp)
  822460:	10800304 	addi	r2,r2,12
  822464:	e0ffef17 	ldw	r3,-68(fp)
  822468:	1807d2fa 	srai	r3,r3,11
  82246c:	10c00015 	stw	r3,0(r2)
  822470:	e0bfec17 	ldw	r2,-80(fp)
  822474:	10800044 	addi	r2,r2,1
  822478:	e0bfec15 	stw	r2,-80(fp)
  82247c:	e0bfe917 	ldw	r2,-92(fp)
  822480:	10800084 	addi	r2,r2,2
  822484:	e0bfe915 	stw	r2,-92(fp)
  822488:	e0bfea17 	ldw	r2,-88(fp)
  82248c:	10800104 	addi	r2,r2,4
  822490:	e0bfea15 	stw	r2,-88(fp)
  822494:	e0bfeb17 	ldw	r2,-84(fp)
  822498:	10800104 	addi	r2,r2,4
  82249c:	e0bfeb15 	stw	r2,-84(fp)
  8224a0:	e0bfec17 	ldw	r2,-80(fp)
  8224a4:	108000d0 	cmplti	r2,r2,3
  8224a8:	103fa21e 	bne	r2,zero,822334 <__alt_mem_epcs_flash_controller_0+0xff819334>
  8224ac:	e0bff304 	addi	r2,fp,-52
  8224b0:	e0bfeb15 	stw	r2,-84(fp)
  8224b4:	e03fec15 	stw	zero,-80(fp)
  8224b8:	00004f06 	br	8225f8 <jpeg_idct_3x3+0x318>
  8224bc:	e0bfec17 	ldw	r2,-80(fp)
  8224c0:	1085883a 	add	r2,r2,r2
  8224c4:	1085883a 	add	r2,r2,r2
  8224c8:	1007883a 	mov	r3,r2
  8224cc:	e0bfff17 	ldw	r2,-4(fp)
  8224d0:	10c5883a 	add	r2,r2,r3
  8224d4:	10c00017 	ldw	r3,0(r2)
  8224d8:	e0800217 	ldw	r2,8(fp)
  8224dc:	1885883a 	add	r2,r3,r2
  8224e0:	e0bff215 	stw	r2,-56(fp)
  8224e4:	e0bfeb17 	ldw	r2,-84(fp)
  8224e8:	10800017 	ldw	r2,0(r2)
  8224ec:	10900404 	addi	r2,r2,16400
  8224f0:	e0bfee15 	stw	r2,-72(fp)
  8224f4:	e0bfee17 	ldw	r2,-72(fp)
  8224f8:	1004937a 	slli	r2,r2,13
  8224fc:	e0bfee15 	stw	r2,-72(fp)
  822500:	e0bfeb17 	ldw	r2,-84(fp)
  822504:	10800204 	addi	r2,r2,8
  822508:	10800017 	ldw	r2,0(r2)
  82250c:	e0bfef15 	stw	r2,-68(fp)
  822510:	0145a844 	movi	r5,5793
  822514:	e13fef17 	ldw	r4,-68(fp)
  822518:	08305040 	call	830504 <__mulsi3>
  82251c:	e0bff015 	stw	r2,-64(fp)
  822520:	e0ffee17 	ldw	r3,-72(fp)
  822524:	e0bff017 	ldw	r2,-64(fp)
  822528:	1885883a 	add	r2,r3,r2
  82252c:	e0bff115 	stw	r2,-60(fp)
  822530:	e0ffee17 	ldw	r3,-72(fp)
  822534:	e0bff017 	ldw	r2,-64(fp)
  822538:	1887c83a 	sub	r3,r3,r2
  82253c:	e0bff017 	ldw	r2,-64(fp)
  822540:	1885c83a 	sub	r2,r3,r2
  822544:	e0bfef15 	stw	r2,-68(fp)
  822548:	e0bfeb17 	ldw	r2,-84(fp)
  82254c:	10800104 	addi	r2,r2,4
  822550:	10800017 	ldw	r2,0(r2)
  822554:	e0bff015 	stw	r2,-64(fp)
  822558:	0149cc44 	movi	r5,10033
  82255c:	e13ff017 	ldw	r4,-64(fp)
  822560:	08305040 	call	830504 <__mulsi3>
  822564:	e0bfee15 	stw	r2,-72(fp)
  822568:	e0fff117 	ldw	r3,-60(fp)
  82256c:	e0bfee17 	ldw	r2,-72(fp)
  822570:	1885883a 	add	r2,r3,r2
  822574:	1005d4ba 	srai	r2,r2,18
  822578:	1080ffcc 	andi	r2,r2,1023
  82257c:	e0ffed17 	ldw	r3,-76(fp)
  822580:	1885883a 	add	r2,r3,r2
  822584:	10c00003 	ldbu	r3,0(r2)
  822588:	e0bff217 	ldw	r2,-56(fp)
  82258c:	10c00005 	stb	r3,0(r2)
  822590:	e0bff217 	ldw	r2,-56(fp)
  822594:	10800084 	addi	r2,r2,2
  822598:	e13ff117 	ldw	r4,-60(fp)
  82259c:	e0ffee17 	ldw	r3,-72(fp)
  8225a0:	20c7c83a 	sub	r3,r4,r3
  8225a4:	1807d4ba 	srai	r3,r3,18
  8225a8:	18c0ffcc 	andi	r3,r3,1023
  8225ac:	e13fed17 	ldw	r4,-76(fp)
  8225b0:	20c7883a 	add	r3,r4,r3
  8225b4:	18c00003 	ldbu	r3,0(r3)
  8225b8:	10c00005 	stb	r3,0(r2)
  8225bc:	e0bff217 	ldw	r2,-56(fp)
  8225c0:	10800044 	addi	r2,r2,1
  8225c4:	e0ffef17 	ldw	r3,-68(fp)
  8225c8:	1807d4ba 	srai	r3,r3,18
  8225cc:	18c0ffcc 	andi	r3,r3,1023
  8225d0:	e13fed17 	ldw	r4,-76(fp)
  8225d4:	20c7883a 	add	r3,r4,r3
  8225d8:	18c00003 	ldbu	r3,0(r3)
  8225dc:	10c00005 	stb	r3,0(r2)
  8225e0:	e0bfeb17 	ldw	r2,-84(fp)
  8225e4:	10800304 	addi	r2,r2,12
  8225e8:	e0bfeb15 	stw	r2,-84(fp)
  8225ec:	e0bfec17 	ldw	r2,-80(fp)
  8225f0:	10800044 	addi	r2,r2,1
  8225f4:	e0bfec15 	stw	r2,-80(fp)
  8225f8:	e0bfec17 	ldw	r2,-80(fp)
  8225fc:	108000d0 	cmplti	r2,r2,3
  822600:	103fae1e 	bne	r2,zero,8224bc <__alt_mem_epcs_flash_controller_0+0xff8194bc>
  822604:	0001883a 	nop
  822608:	e037883a 	mov	sp,fp
  82260c:	dfc00117 	ldw	ra,4(sp)
  822610:	df000017 	ldw	fp,0(sp)
  822614:	dec00204 	addi	sp,sp,8
  822618:	f800283a 	ret

0082261c <jpeg_idct_2x2>:
  82261c:	defff104 	addi	sp,sp,-60
  822620:	dfc00e15 	stw	ra,56(sp)
  822624:	df000d15 	stw	fp,52(sp)
  822628:	df000d04 	addi	fp,sp,52
  82262c:	e13ffc15 	stw	r4,-16(fp)
  822630:	e17ffd15 	stw	r5,-12(fp)
  822634:	e1bffe15 	stw	r6,-8(fp)
  822638:	e1ffff15 	stw	r7,-4(fp)
  82263c:	e0bffc17 	ldw	r2,-16(fp)
  822640:	10805417 	ldw	r2,336(r2)
  822644:	10bfa004 	addi	r2,r2,-384
  822648:	e0bff315 	stw	r2,-52(fp)
  82264c:	e0bffd17 	ldw	r2,-12(fp)
  822650:	10801517 	ldw	r2,84(r2)
  822654:	e0bff415 	stw	r2,-48(fp)
  822658:	e0bffe17 	ldw	r2,-8(fp)
  82265c:	1080000b 	ldhu	r2,0(r2)
  822660:	10ffffcc 	andi	r3,r2,65535
  822664:	18e0001c 	xori	r3,r3,32768
  822668:	18e00004 	addi	r3,r3,-32768
  82266c:	e0bff417 	ldw	r2,-48(fp)
  822670:	10800017 	ldw	r2,0(r2)
  822674:	100b883a 	mov	r5,r2
  822678:	1809883a 	mov	r4,r3
  82267c:	08305040 	call	830504 <__mulsi3>
  822680:	e0bff515 	stw	r2,-44(fp)
  822684:	e0bffe17 	ldw	r2,-8(fp)
  822688:	10800404 	addi	r2,r2,16
  82268c:	1080000b 	ldhu	r2,0(r2)
  822690:	10ffffcc 	andi	r3,r2,65535
  822694:	18e0001c 	xori	r3,r3,32768
  822698:	18e00004 	addi	r3,r3,-32768
  82269c:	e0bff417 	ldw	r2,-48(fp)
  8226a0:	10800804 	addi	r2,r2,32
  8226a4:	10800017 	ldw	r2,0(r2)
  8226a8:	100b883a 	mov	r5,r2
  8226ac:	1809883a 	mov	r4,r3
  8226b0:	08305040 	call	830504 <__mulsi3>
  8226b4:	e0bff615 	stw	r2,-40(fp)
  8226b8:	e0bff517 	ldw	r2,-44(fp)
  8226bc:	10840104 	addi	r2,r2,4100
  8226c0:	e0bff515 	stw	r2,-44(fp)
  8226c4:	e0fff517 	ldw	r3,-44(fp)
  8226c8:	e0bff617 	ldw	r2,-40(fp)
  8226cc:	1885883a 	add	r2,r3,r2
  8226d0:	e0bff715 	stw	r2,-36(fp)
  8226d4:	e0fff517 	ldw	r3,-44(fp)
  8226d8:	e0bff617 	ldw	r2,-40(fp)
  8226dc:	1885c83a 	sub	r2,r3,r2
  8226e0:	e0bff815 	stw	r2,-32(fp)
  8226e4:	e0bffe17 	ldw	r2,-8(fp)
  8226e8:	10800084 	addi	r2,r2,2
  8226ec:	1080000b 	ldhu	r2,0(r2)
  8226f0:	10ffffcc 	andi	r3,r2,65535
  8226f4:	18e0001c 	xori	r3,r3,32768
  8226f8:	18e00004 	addi	r3,r3,-32768
  8226fc:	e0bff417 	ldw	r2,-48(fp)
  822700:	10800104 	addi	r2,r2,4
  822704:	10800017 	ldw	r2,0(r2)
  822708:	100b883a 	mov	r5,r2
  82270c:	1809883a 	mov	r4,r3
  822710:	08305040 	call	830504 <__mulsi3>
  822714:	e0bff515 	stw	r2,-44(fp)
  822718:	e0bffe17 	ldw	r2,-8(fp)
  82271c:	10800484 	addi	r2,r2,18
  822720:	1080000b 	ldhu	r2,0(r2)
  822724:	10ffffcc 	andi	r3,r2,65535
  822728:	18e0001c 	xori	r3,r3,32768
  82272c:	18e00004 	addi	r3,r3,-32768
  822730:	e0bff417 	ldw	r2,-48(fp)
  822734:	10800904 	addi	r2,r2,36
  822738:	10800017 	ldw	r2,0(r2)
  82273c:	100b883a 	mov	r5,r2
  822740:	1809883a 	mov	r4,r3
  822744:	08305040 	call	830504 <__mulsi3>
  822748:	e0bff615 	stw	r2,-40(fp)
  82274c:	e0fff517 	ldw	r3,-44(fp)
  822750:	e0bff617 	ldw	r2,-40(fp)
  822754:	1885883a 	add	r2,r3,r2
  822758:	e0bff915 	stw	r2,-28(fp)
  82275c:	e0fff517 	ldw	r3,-44(fp)
  822760:	e0bff617 	ldw	r2,-40(fp)
  822764:	1885c83a 	sub	r2,r3,r2
  822768:	e0bffa15 	stw	r2,-24(fp)
  82276c:	e0bfff17 	ldw	r2,-4(fp)
  822770:	10c00017 	ldw	r3,0(r2)
  822774:	e0800217 	ldw	r2,8(fp)
  822778:	1885883a 	add	r2,r3,r2
  82277c:	e0bffb15 	stw	r2,-20(fp)
  822780:	e0fff717 	ldw	r3,-36(fp)
  822784:	e0bff917 	ldw	r2,-28(fp)
  822788:	1885883a 	add	r2,r3,r2
  82278c:	1005d0fa 	srai	r2,r2,3
  822790:	1080ffcc 	andi	r2,r2,1023
  822794:	e0fff317 	ldw	r3,-52(fp)
  822798:	1885883a 	add	r2,r3,r2
  82279c:	10c00003 	ldbu	r3,0(r2)
  8227a0:	e0bffb17 	ldw	r2,-20(fp)
  8227a4:	10c00005 	stb	r3,0(r2)
  8227a8:	e0bffb17 	ldw	r2,-20(fp)
  8227ac:	10800044 	addi	r2,r2,1
  8227b0:	e13ff717 	ldw	r4,-36(fp)
  8227b4:	e0fff917 	ldw	r3,-28(fp)
  8227b8:	20c7c83a 	sub	r3,r4,r3
  8227bc:	1807d0fa 	srai	r3,r3,3
  8227c0:	18c0ffcc 	andi	r3,r3,1023
  8227c4:	e13ff317 	ldw	r4,-52(fp)
  8227c8:	20c7883a 	add	r3,r4,r3
  8227cc:	18c00003 	ldbu	r3,0(r3)
  8227d0:	10c00005 	stb	r3,0(r2)
  8227d4:	e0bfff17 	ldw	r2,-4(fp)
  8227d8:	10800104 	addi	r2,r2,4
  8227dc:	10c00017 	ldw	r3,0(r2)
  8227e0:	e0800217 	ldw	r2,8(fp)
  8227e4:	1885883a 	add	r2,r3,r2
  8227e8:	e0bffb15 	stw	r2,-20(fp)
  8227ec:	e0fff817 	ldw	r3,-32(fp)
  8227f0:	e0bffa17 	ldw	r2,-24(fp)
  8227f4:	1885883a 	add	r2,r3,r2
  8227f8:	1005d0fa 	srai	r2,r2,3
  8227fc:	1080ffcc 	andi	r2,r2,1023
  822800:	e0fff317 	ldw	r3,-52(fp)
  822804:	1885883a 	add	r2,r3,r2
  822808:	10c00003 	ldbu	r3,0(r2)
  82280c:	e0bffb17 	ldw	r2,-20(fp)
  822810:	10c00005 	stb	r3,0(r2)
  822814:	e0bffb17 	ldw	r2,-20(fp)
  822818:	10800044 	addi	r2,r2,1
  82281c:	e13ff817 	ldw	r4,-32(fp)
  822820:	e0fffa17 	ldw	r3,-24(fp)
  822824:	20c7c83a 	sub	r3,r4,r3
  822828:	1807d0fa 	srai	r3,r3,3
  82282c:	18c0ffcc 	andi	r3,r3,1023
  822830:	e13ff317 	ldw	r4,-52(fp)
  822834:	20c7883a 	add	r3,r4,r3
  822838:	18c00003 	ldbu	r3,0(r3)
  82283c:	10c00005 	stb	r3,0(r2)
  822840:	0001883a 	nop
  822844:	e037883a 	mov	sp,fp
  822848:	dfc00117 	ldw	ra,4(sp)
  82284c:	df000017 	ldw	fp,0(sp)
  822850:	dec00204 	addi	sp,sp,8
  822854:	f800283a 	ret

00822858 <jpeg_idct_1x1>:
  822858:	defff704 	addi	sp,sp,-36
  82285c:	dfc00815 	stw	ra,32(sp)
  822860:	df000715 	stw	fp,28(sp)
  822864:	df000704 	addi	fp,sp,28
  822868:	e13ffc15 	stw	r4,-16(fp)
  82286c:	e17ffd15 	stw	r5,-12(fp)
  822870:	e1bffe15 	stw	r6,-8(fp)
  822874:	e1ffff15 	stw	r7,-4(fp)
  822878:	e0bffc17 	ldw	r2,-16(fp)
  82287c:	10805417 	ldw	r2,336(r2)
  822880:	10bfa004 	addi	r2,r2,-384
  822884:	e0bff915 	stw	r2,-28(fp)
  822888:	e0bffd17 	ldw	r2,-12(fp)
  82288c:	10801517 	ldw	r2,84(r2)
  822890:	e0bffa15 	stw	r2,-24(fp)
  822894:	e0bffe17 	ldw	r2,-8(fp)
  822898:	1080000b 	ldhu	r2,0(r2)
  82289c:	10ffffcc 	andi	r3,r2,65535
  8228a0:	18e0001c 	xori	r3,r3,32768
  8228a4:	18e00004 	addi	r3,r3,-32768
  8228a8:	e0bffa17 	ldw	r2,-24(fp)
  8228ac:	10800017 	ldw	r2,0(r2)
  8228b0:	100b883a 	mov	r5,r2
  8228b4:	1809883a 	mov	r4,r3
  8228b8:	08305040 	call	830504 <__mulsi3>
  8228bc:	e0bffb15 	stw	r2,-20(fp)
  8228c0:	e0bffb17 	ldw	r2,-20(fp)
  8228c4:	10840104 	addi	r2,r2,4100
  8228c8:	e0bffb15 	stw	r2,-20(fp)
  8228cc:	e0bfff17 	ldw	r2,-4(fp)
  8228d0:	10c00017 	ldw	r3,0(r2)
  8228d4:	e0800217 	ldw	r2,8(fp)
  8228d8:	1885883a 	add	r2,r3,r2
  8228dc:	e0fffb17 	ldw	r3,-20(fp)
  8228e0:	1807d0fa 	srai	r3,r3,3
  8228e4:	18c0ffcc 	andi	r3,r3,1023
  8228e8:	e13ff917 	ldw	r4,-28(fp)
  8228ec:	20c7883a 	add	r3,r4,r3
  8228f0:	18c00003 	ldbu	r3,0(r3)
  8228f4:	10c00005 	stb	r3,0(r2)
  8228f8:	0001883a 	nop
  8228fc:	e037883a 	mov	sp,fp
  822900:	dfc00117 	ldw	ra,4(sp)
  822904:	df000017 	ldw	fp,0(sp)
  822908:	dec00204 	addi	sp,sp,8
  82290c:	f800283a 	ret

00822910 <jpeg_idct_9x9>:
  822910:	deff9f04 	addi	sp,sp,-388
  822914:	dfc06015 	stw	ra,384(sp)
  822918:	df005f15 	stw	fp,380(sp)
  82291c:	df005f04 	addi	fp,sp,380
  822920:	e13ffc15 	stw	r4,-16(fp)
  822924:	e17ffd15 	stw	r5,-12(fp)
  822928:	e1bffe15 	stw	r6,-8(fp)
  82292c:	e1ffff15 	stw	r7,-4(fp)
  822930:	e0bffc17 	ldw	r2,-16(fp)
  822934:	10805417 	ldw	r2,336(r2)
  822938:	10bfa004 	addi	r2,r2,-384
  82293c:	e0bfa515 	stw	r2,-364(fp)
  822940:	e0bffe17 	ldw	r2,-8(fp)
  822944:	e0bfa115 	stw	r2,-380(fp)
  822948:	e0bffd17 	ldw	r2,-12(fp)
  82294c:	10801517 	ldw	r2,84(r2)
  822950:	e0bfa215 	stw	r2,-376(fp)
  822954:	e0bfb404 	addi	r2,fp,-304
  822958:	e0bfa315 	stw	r2,-372(fp)
  82295c:	e03fa415 	stw	zero,-368(fp)
  822960:	00012806 	br	822e04 <jpeg_idct_9x9+0x4f4>
  822964:	e0bfa117 	ldw	r2,-380(fp)
  822968:	1080000b 	ldhu	r2,0(r2)
  82296c:	10ffffcc 	andi	r3,r2,65535
  822970:	18e0001c 	xori	r3,r3,32768
  822974:	18e00004 	addi	r3,r3,-32768
  822978:	e0bfa217 	ldw	r2,-376(fp)
  82297c:	10800017 	ldw	r2,0(r2)
  822980:	100b883a 	mov	r5,r2
  822984:	1809883a 	mov	r4,r3
  822988:	08305040 	call	830504 <__mulsi3>
  82298c:	e0bfa615 	stw	r2,-360(fp)
  822990:	e0bfa617 	ldw	r2,-360(fp)
  822994:	1004937a 	slli	r2,r2,13
  822998:	e0bfa615 	stw	r2,-360(fp)
  82299c:	e0bfa617 	ldw	r2,-360(fp)
  8229a0:	10810004 	addi	r2,r2,1024
  8229a4:	e0bfa615 	stw	r2,-360(fp)
  8229a8:	e0bfa117 	ldw	r2,-380(fp)
  8229ac:	10800804 	addi	r2,r2,32
  8229b0:	1080000b 	ldhu	r2,0(r2)
  8229b4:	10ffffcc 	andi	r3,r2,65535
  8229b8:	18e0001c 	xori	r3,r3,32768
  8229bc:	18e00004 	addi	r3,r3,-32768
  8229c0:	e0bfa217 	ldw	r2,-376(fp)
  8229c4:	10801004 	addi	r2,r2,64
  8229c8:	10800017 	ldw	r2,0(r2)
  8229cc:	100b883a 	mov	r5,r2
  8229d0:	1809883a 	mov	r4,r3
  8229d4:	08305040 	call	830504 <__mulsi3>
  8229d8:	e0bfa715 	stw	r2,-356(fp)
  8229dc:	e0bfa117 	ldw	r2,-380(fp)
  8229e0:	10801004 	addi	r2,r2,64
  8229e4:	1080000b 	ldhu	r2,0(r2)
  8229e8:	10ffffcc 	andi	r3,r2,65535
  8229ec:	18e0001c 	xori	r3,r3,32768
  8229f0:	18e00004 	addi	r3,r3,-32768
  8229f4:	e0bfa217 	ldw	r2,-376(fp)
  8229f8:	10802004 	addi	r2,r2,128
  8229fc:	10800017 	ldw	r2,0(r2)
  822a00:	100b883a 	mov	r5,r2
  822a04:	1809883a 	mov	r4,r3
  822a08:	08305040 	call	830504 <__mulsi3>
  822a0c:	e0bfa815 	stw	r2,-352(fp)
  822a10:	e0bfa117 	ldw	r2,-380(fp)
  822a14:	10801804 	addi	r2,r2,96
  822a18:	1080000b 	ldhu	r2,0(r2)
  822a1c:	10ffffcc 	andi	r3,r2,65535
  822a20:	18e0001c 	xori	r3,r3,32768
  822a24:	18e00004 	addi	r3,r3,-32768
  822a28:	e0bfa217 	ldw	r2,-376(fp)
  822a2c:	10803004 	addi	r2,r2,192
  822a30:	10800017 	ldw	r2,0(r2)
  822a34:	100b883a 	mov	r5,r2
  822a38:	1809883a 	mov	r4,r3
  822a3c:	08305040 	call	830504 <__mulsi3>
  822a40:	e0bfa915 	stw	r2,-348(fp)
  822a44:	0145a844 	movi	r5,5793
  822a48:	e13fa917 	ldw	r4,-348(fp)
  822a4c:	08305040 	call	830504 <__mulsi3>
  822a50:	e0bfaa15 	stw	r2,-344(fp)
  822a54:	e0ffa617 	ldw	r3,-360(fp)
  822a58:	e0bfaa17 	ldw	r2,-344(fp)
  822a5c:	1885883a 	add	r2,r3,r2
  822a60:	e0bfab15 	stw	r2,-340(fp)
  822a64:	e0ffa617 	ldw	r3,-360(fp)
  822a68:	e0bfaa17 	ldw	r2,-344(fp)
  822a6c:	1887c83a 	sub	r3,r3,r2
  822a70:	e0bfaa17 	ldw	r2,-344(fp)
  822a74:	1885c83a 	sub	r2,r3,r2
  822a78:	e0bfac15 	stw	r2,-336(fp)
  822a7c:	e0ffa717 	ldw	r3,-356(fp)
  822a80:	e0bfa817 	ldw	r2,-352(fp)
  822a84:	1885c83a 	sub	r2,r3,r2
  822a88:	0145a844 	movi	r5,5793
  822a8c:	1009883a 	mov	r4,r2
  822a90:	08305040 	call	830504 <__mulsi3>
  822a94:	e0bfa615 	stw	r2,-360(fp)
  822a98:	e0ffac17 	ldw	r3,-336(fp)
  822a9c:	e0bfa617 	ldw	r2,-360(fp)
  822aa0:	1885883a 	add	r2,r3,r2
  822aa4:	e0bfad15 	stw	r2,-332(fp)
  822aa8:	e0ffac17 	ldw	r3,-336(fp)
  822aac:	e0bfa617 	ldw	r2,-360(fp)
  822ab0:	1887c83a 	sub	r3,r3,r2
  822ab4:	e0bfa617 	ldw	r2,-360(fp)
  822ab8:	1885c83a 	sub	r2,r3,r2
  822abc:	e0bfae15 	stw	r2,-328(fp)
  822ac0:	e0ffa717 	ldw	r3,-356(fp)
  822ac4:	e0bfa817 	ldw	r2,-352(fp)
  822ac8:	1885883a 	add	r2,r3,r2
  822acc:	014aa1c4 	movi	r5,10887
  822ad0:	1009883a 	mov	r4,r2
  822ad4:	08305040 	call	830504 <__mulsi3>
  822ad8:	e0bfa615 	stw	r2,-360(fp)
  822adc:	0148aac4 	movi	r5,8875
  822ae0:	e13fa717 	ldw	r4,-356(fp)
  822ae4:	08305040 	call	830504 <__mulsi3>
  822ae8:	e0bfac15 	stw	r2,-336(fp)
  822aec:	0141f704 	movi	r5,2012
  822af0:	e13fa817 	ldw	r4,-352(fp)
  822af4:	08305040 	call	830504 <__mulsi3>
  822af8:	e0bfaa15 	stw	r2,-344(fp)
  822afc:	e0ffab17 	ldw	r3,-340(fp)
  822b00:	e0bfa617 	ldw	r2,-360(fp)
  822b04:	1887883a 	add	r3,r3,r2
  822b08:	e0bfaa17 	ldw	r2,-344(fp)
  822b0c:	1885c83a 	sub	r2,r3,r2
  822b10:	e0bfaf15 	stw	r2,-324(fp)
  822b14:	e0ffab17 	ldw	r3,-340(fp)
  822b18:	e0bfa617 	ldw	r2,-360(fp)
  822b1c:	1887c83a 	sub	r3,r3,r2
  822b20:	e0bfac17 	ldw	r2,-336(fp)
  822b24:	1885883a 	add	r2,r3,r2
  822b28:	e0bfb015 	stw	r2,-320(fp)
  822b2c:	e0ffab17 	ldw	r3,-340(fp)
  822b30:	e0bfac17 	ldw	r2,-336(fp)
  822b34:	1887c83a 	sub	r3,r3,r2
  822b38:	e0bfaa17 	ldw	r2,-344(fp)
  822b3c:	1885883a 	add	r2,r3,r2
  822b40:	e0bfb115 	stw	r2,-316(fp)
  822b44:	e0bfa117 	ldw	r2,-380(fp)
  822b48:	10800404 	addi	r2,r2,16
  822b4c:	1080000b 	ldhu	r2,0(r2)
  822b50:	10ffffcc 	andi	r3,r2,65535
  822b54:	18e0001c 	xori	r3,r3,32768
  822b58:	18e00004 	addi	r3,r3,-32768
  822b5c:	e0bfa217 	ldw	r2,-376(fp)
  822b60:	10800804 	addi	r2,r2,32
  822b64:	10800017 	ldw	r2,0(r2)
  822b68:	100b883a 	mov	r5,r2
  822b6c:	1809883a 	mov	r4,r3
  822b70:	08305040 	call	830504 <__mulsi3>
  822b74:	e0bfa715 	stw	r2,-356(fp)
  822b78:	e0bfa117 	ldw	r2,-380(fp)
  822b7c:	10800c04 	addi	r2,r2,48
  822b80:	1080000b 	ldhu	r2,0(r2)
  822b84:	10ffffcc 	andi	r3,r2,65535
  822b88:	18e0001c 	xori	r3,r3,32768
  822b8c:	18e00004 	addi	r3,r3,-32768
  822b90:	e0bfa217 	ldw	r2,-376(fp)
  822b94:	10801804 	addi	r2,r2,96
  822b98:	10800017 	ldw	r2,0(r2)
  822b9c:	100b883a 	mov	r5,r2
  822ba0:	1809883a 	mov	r4,r3
  822ba4:	08305040 	call	830504 <__mulsi3>
  822ba8:	e0bfa815 	stw	r2,-352(fp)
  822bac:	e0bfa117 	ldw	r2,-380(fp)
  822bb0:	10801404 	addi	r2,r2,80
  822bb4:	1080000b 	ldhu	r2,0(r2)
  822bb8:	10ffffcc 	andi	r3,r2,65535
  822bbc:	18e0001c 	xori	r3,r3,32768
  822bc0:	18e00004 	addi	r3,r3,-32768
  822bc4:	e0bfa217 	ldw	r2,-376(fp)
  822bc8:	10802804 	addi	r2,r2,160
  822bcc:	10800017 	ldw	r2,0(r2)
  822bd0:	100b883a 	mov	r5,r2
  822bd4:	1809883a 	mov	r4,r3
  822bd8:	08305040 	call	830504 <__mulsi3>
  822bdc:	e0bfa915 	stw	r2,-348(fp)
  822be0:	e0bfa117 	ldw	r2,-380(fp)
  822be4:	10801c04 	addi	r2,r2,112
  822be8:	1080000b 	ldhu	r2,0(r2)
  822bec:	10ffffcc 	andi	r3,r2,65535
  822bf0:	18e0001c 	xori	r3,r3,32768
  822bf4:	18e00004 	addi	r3,r3,-32768
  822bf8:	e0bfa217 	ldw	r2,-376(fp)
  822bfc:	10803804 	addi	r2,r2,224
  822c00:	10800017 	ldw	r2,0(r2)
  822c04:	100b883a 	mov	r5,r2
  822c08:	1809883a 	mov	r4,r3
  822c0c:	08305040 	call	830504 <__mulsi3>
  822c10:	e0bfb215 	stw	r2,-312(fp)
  822c14:	017633c4 	movi	r5,-10033
  822c18:	e13fa817 	ldw	r4,-352(fp)
  822c1c:	08305040 	call	830504 <__mulsi3>
  822c20:	e0bfa815 	stw	r2,-352(fp)
  822c24:	e0ffa717 	ldw	r3,-356(fp)
  822c28:	e0bfa917 	ldw	r2,-348(fp)
  822c2c:	1885883a 	add	r2,r3,r2
  822c30:	014745c4 	movi	r5,7447
  822c34:	1009883a 	mov	r4,r2
  822c38:	08305040 	call	830504 <__mulsi3>
  822c3c:	e0bfac15 	stw	r2,-336(fp)
  822c40:	e0ffa717 	ldw	r3,-356(fp)
  822c44:	e0bfb217 	ldw	r2,-312(fp)
  822c48:	1885883a 	add	r2,r3,r2
  822c4c:	0143de84 	movi	r5,3962
  822c50:	1009883a 	mov	r4,r2
  822c54:	08305040 	call	830504 <__mulsi3>
  822c58:	e0bfaa15 	stw	r2,-344(fp)
  822c5c:	e0ffac17 	ldw	r3,-336(fp)
  822c60:	e0bfaa17 	ldw	r2,-344(fp)
  822c64:	1887883a 	add	r3,r3,r2
  822c68:	e0bfa817 	ldw	r2,-352(fp)
  822c6c:	1885c83a 	sub	r2,r3,r2
  822c70:	e0bfa615 	stw	r2,-360(fp)
  822c74:	e0ffa917 	ldw	r3,-348(fp)
  822c78:	e0bfb217 	ldw	r2,-312(fp)
  822c7c:	1885c83a 	sub	r2,r3,r2
  822c80:	014b2444 	movi	r5,11409
  822c84:	1009883a 	mov	r4,r2
  822c88:	08305040 	call	830504 <__mulsi3>
  822c8c:	e0bfab15 	stw	r2,-340(fp)
  822c90:	e0ffa817 	ldw	r3,-352(fp)
  822c94:	e0bfab17 	ldw	r2,-340(fp)
  822c98:	1885c83a 	sub	r2,r3,r2
  822c9c:	e0ffac17 	ldw	r3,-336(fp)
  822ca0:	1885883a 	add	r2,r3,r2
  822ca4:	e0bfac15 	stw	r2,-336(fp)
  822ca8:	e0ffa817 	ldw	r3,-352(fp)
  822cac:	e0bfab17 	ldw	r2,-340(fp)
  822cb0:	1885883a 	add	r2,r3,r2
  822cb4:	e0ffaa17 	ldw	r3,-344(fp)
  822cb8:	1885883a 	add	r2,r3,r2
  822cbc:	e0bfaa15 	stw	r2,-344(fp)
  822cc0:	e0ffa717 	ldw	r3,-356(fp)
  822cc4:	e0bfa917 	ldw	r2,-348(fp)
  822cc8:	1887c83a 	sub	r3,r3,r2
  822ccc:	e0bfb217 	ldw	r2,-312(fp)
  822cd0:	1885c83a 	sub	r2,r3,r2
  822cd4:	0149cc44 	movi	r5,10033
  822cd8:	1009883a 	mov	r4,r2
  822cdc:	08305040 	call	830504 <__mulsi3>
  822ce0:	e0bfab15 	stw	r2,-340(fp)
  822ce4:	e0ffaf17 	ldw	r3,-324(fp)
  822ce8:	e0bfa617 	ldw	r2,-360(fp)
  822cec:	1885883a 	add	r2,r3,r2
  822cf0:	1007d2fa 	srai	r3,r2,11
  822cf4:	e0bfa317 	ldw	r2,-372(fp)
  822cf8:	10c00015 	stw	r3,0(r2)
  822cfc:	e0bfa317 	ldw	r2,-372(fp)
  822d00:	10804004 	addi	r2,r2,256
  822d04:	e13faf17 	ldw	r4,-324(fp)
  822d08:	e0ffa617 	ldw	r3,-360(fp)
  822d0c:	20c7c83a 	sub	r3,r4,r3
  822d10:	1807d2fa 	srai	r3,r3,11
  822d14:	10c00015 	stw	r3,0(r2)
  822d18:	e0bfa317 	ldw	r2,-372(fp)
  822d1c:	10800804 	addi	r2,r2,32
  822d20:	e13fad17 	ldw	r4,-332(fp)
  822d24:	e0ffab17 	ldw	r3,-340(fp)
  822d28:	20c7883a 	add	r3,r4,r3
  822d2c:	1807d2fa 	srai	r3,r3,11
  822d30:	10c00015 	stw	r3,0(r2)
  822d34:	e0bfa317 	ldw	r2,-372(fp)
  822d38:	10803804 	addi	r2,r2,224
  822d3c:	e13fad17 	ldw	r4,-332(fp)
  822d40:	e0ffab17 	ldw	r3,-340(fp)
  822d44:	20c7c83a 	sub	r3,r4,r3
  822d48:	1807d2fa 	srai	r3,r3,11
  822d4c:	10c00015 	stw	r3,0(r2)
  822d50:	e0bfa317 	ldw	r2,-372(fp)
  822d54:	10801004 	addi	r2,r2,64
  822d58:	e13fb017 	ldw	r4,-320(fp)
  822d5c:	e0ffac17 	ldw	r3,-336(fp)
  822d60:	20c7883a 	add	r3,r4,r3
  822d64:	1807d2fa 	srai	r3,r3,11
  822d68:	10c00015 	stw	r3,0(r2)
  822d6c:	e0bfa317 	ldw	r2,-372(fp)
  822d70:	10803004 	addi	r2,r2,192
  822d74:	e13fb017 	ldw	r4,-320(fp)
  822d78:	e0ffac17 	ldw	r3,-336(fp)
  822d7c:	20c7c83a 	sub	r3,r4,r3
  822d80:	1807d2fa 	srai	r3,r3,11
  822d84:	10c00015 	stw	r3,0(r2)
  822d88:	e0bfa317 	ldw	r2,-372(fp)
  822d8c:	10801804 	addi	r2,r2,96
  822d90:	e13fb117 	ldw	r4,-316(fp)
  822d94:	e0ffaa17 	ldw	r3,-344(fp)
  822d98:	20c7883a 	add	r3,r4,r3
  822d9c:	1807d2fa 	srai	r3,r3,11
  822da0:	10c00015 	stw	r3,0(r2)
  822da4:	e0bfa317 	ldw	r2,-372(fp)
  822da8:	10802804 	addi	r2,r2,160
  822dac:	e13fb117 	ldw	r4,-316(fp)
  822db0:	e0ffaa17 	ldw	r3,-344(fp)
  822db4:	20c7c83a 	sub	r3,r4,r3
  822db8:	1807d2fa 	srai	r3,r3,11
  822dbc:	10c00015 	stw	r3,0(r2)
  822dc0:	e0bfa317 	ldw	r2,-372(fp)
  822dc4:	10802004 	addi	r2,r2,128
  822dc8:	e0ffae17 	ldw	r3,-328(fp)
  822dcc:	1807d2fa 	srai	r3,r3,11
  822dd0:	10c00015 	stw	r3,0(r2)
  822dd4:	e0bfa417 	ldw	r2,-368(fp)
  822dd8:	10800044 	addi	r2,r2,1
  822ddc:	e0bfa415 	stw	r2,-368(fp)
  822de0:	e0bfa117 	ldw	r2,-380(fp)
  822de4:	10800084 	addi	r2,r2,2
  822de8:	e0bfa115 	stw	r2,-380(fp)
  822dec:	e0bfa217 	ldw	r2,-376(fp)
  822df0:	10800104 	addi	r2,r2,4
  822df4:	e0bfa215 	stw	r2,-376(fp)
  822df8:	e0bfa317 	ldw	r2,-372(fp)
  822dfc:	10800104 	addi	r2,r2,4
  822e00:	e0bfa315 	stw	r2,-372(fp)
  822e04:	e0bfa417 	ldw	r2,-368(fp)
  822e08:	10800210 	cmplti	r2,r2,8
  822e0c:	103ed51e 	bne	r2,zero,822964 <__alt_mem_epcs_flash_controller_0+0xff819964>
  822e10:	e0bfb404 	addi	r2,fp,-304
  822e14:	e0bfa315 	stw	r2,-372(fp)
  822e18:	e03fa415 	stw	zero,-368(fp)
  822e1c:	00010706 	br	82323c <jpeg_idct_9x9+0x92c>
  822e20:	e0bfa417 	ldw	r2,-368(fp)
  822e24:	1085883a 	add	r2,r2,r2
  822e28:	1085883a 	add	r2,r2,r2
  822e2c:	1007883a 	mov	r3,r2
  822e30:	e0bfff17 	ldw	r2,-4(fp)
  822e34:	10c5883a 	add	r2,r2,r3
  822e38:	10c00017 	ldw	r3,0(r2)
  822e3c:	e0800217 	ldw	r2,8(fp)
  822e40:	1885883a 	add	r2,r3,r2
  822e44:	e0bfb315 	stw	r2,-308(fp)
  822e48:	e0bfa317 	ldw	r2,-372(fp)
  822e4c:	10800017 	ldw	r2,0(r2)
  822e50:	10900404 	addi	r2,r2,16400
  822e54:	e0bfa615 	stw	r2,-360(fp)
  822e58:	e0bfa617 	ldw	r2,-360(fp)
  822e5c:	1004937a 	slli	r2,r2,13
  822e60:	e0bfa615 	stw	r2,-360(fp)
  822e64:	e0bfa317 	ldw	r2,-372(fp)
  822e68:	10800204 	addi	r2,r2,8
  822e6c:	10800017 	ldw	r2,0(r2)
  822e70:	e0bfa715 	stw	r2,-356(fp)
  822e74:	e0bfa317 	ldw	r2,-372(fp)
  822e78:	10800404 	addi	r2,r2,16
  822e7c:	10800017 	ldw	r2,0(r2)
  822e80:	e0bfa815 	stw	r2,-352(fp)
  822e84:	e0bfa317 	ldw	r2,-372(fp)
  822e88:	10800604 	addi	r2,r2,24
  822e8c:	10800017 	ldw	r2,0(r2)
  822e90:	e0bfa915 	stw	r2,-348(fp)
  822e94:	0145a844 	movi	r5,5793
  822e98:	e13fa917 	ldw	r4,-348(fp)
  822e9c:	08305040 	call	830504 <__mulsi3>
  822ea0:	e0bfaa15 	stw	r2,-344(fp)
  822ea4:	e0ffa617 	ldw	r3,-360(fp)
  822ea8:	e0bfaa17 	ldw	r2,-344(fp)
  822eac:	1885883a 	add	r2,r3,r2
  822eb0:	e0bfab15 	stw	r2,-340(fp)
  822eb4:	e0ffa617 	ldw	r3,-360(fp)
  822eb8:	e0bfaa17 	ldw	r2,-344(fp)
  822ebc:	1887c83a 	sub	r3,r3,r2
  822ec0:	e0bfaa17 	ldw	r2,-344(fp)
  822ec4:	1885c83a 	sub	r2,r3,r2
  822ec8:	e0bfac15 	stw	r2,-336(fp)
  822ecc:	e0ffa717 	ldw	r3,-356(fp)
  822ed0:	e0bfa817 	ldw	r2,-352(fp)
  822ed4:	1885c83a 	sub	r2,r3,r2
  822ed8:	0145a844 	movi	r5,5793
  822edc:	1009883a 	mov	r4,r2
  822ee0:	08305040 	call	830504 <__mulsi3>
  822ee4:	e0bfa615 	stw	r2,-360(fp)
  822ee8:	e0ffac17 	ldw	r3,-336(fp)
  822eec:	e0bfa617 	ldw	r2,-360(fp)
  822ef0:	1885883a 	add	r2,r3,r2
  822ef4:	e0bfad15 	stw	r2,-332(fp)
  822ef8:	e0ffac17 	ldw	r3,-336(fp)
  822efc:	e0bfa617 	ldw	r2,-360(fp)
  822f00:	1887c83a 	sub	r3,r3,r2
  822f04:	e0bfa617 	ldw	r2,-360(fp)
  822f08:	1885c83a 	sub	r2,r3,r2
  822f0c:	e0bfae15 	stw	r2,-328(fp)
  822f10:	e0ffa717 	ldw	r3,-356(fp)
  822f14:	e0bfa817 	ldw	r2,-352(fp)
  822f18:	1885883a 	add	r2,r3,r2
  822f1c:	014aa1c4 	movi	r5,10887
  822f20:	1009883a 	mov	r4,r2
  822f24:	08305040 	call	830504 <__mulsi3>
  822f28:	e0bfa615 	stw	r2,-360(fp)
  822f2c:	0148aac4 	movi	r5,8875
  822f30:	e13fa717 	ldw	r4,-356(fp)
  822f34:	08305040 	call	830504 <__mulsi3>
  822f38:	e0bfac15 	stw	r2,-336(fp)
  822f3c:	0141f704 	movi	r5,2012
  822f40:	e13fa817 	ldw	r4,-352(fp)
  822f44:	08305040 	call	830504 <__mulsi3>
  822f48:	e0bfaa15 	stw	r2,-344(fp)
  822f4c:	e0ffab17 	ldw	r3,-340(fp)
  822f50:	e0bfa617 	ldw	r2,-360(fp)
  822f54:	1887883a 	add	r3,r3,r2
  822f58:	e0bfaa17 	ldw	r2,-344(fp)
  822f5c:	1885c83a 	sub	r2,r3,r2
  822f60:	e0bfaf15 	stw	r2,-324(fp)
  822f64:	e0ffab17 	ldw	r3,-340(fp)
  822f68:	e0bfa617 	ldw	r2,-360(fp)
  822f6c:	1887c83a 	sub	r3,r3,r2
  822f70:	e0bfac17 	ldw	r2,-336(fp)
  822f74:	1885883a 	add	r2,r3,r2
  822f78:	e0bfb015 	stw	r2,-320(fp)
  822f7c:	e0ffab17 	ldw	r3,-340(fp)
  822f80:	e0bfac17 	ldw	r2,-336(fp)
  822f84:	1887c83a 	sub	r3,r3,r2
  822f88:	e0bfaa17 	ldw	r2,-344(fp)
  822f8c:	1885883a 	add	r2,r3,r2
  822f90:	e0bfb115 	stw	r2,-316(fp)
  822f94:	e0bfa317 	ldw	r2,-372(fp)
  822f98:	10800104 	addi	r2,r2,4
  822f9c:	10800017 	ldw	r2,0(r2)
  822fa0:	e0bfa715 	stw	r2,-356(fp)
  822fa4:	e0bfa317 	ldw	r2,-372(fp)
  822fa8:	10800304 	addi	r2,r2,12
  822fac:	10800017 	ldw	r2,0(r2)
  822fb0:	e0bfa815 	stw	r2,-352(fp)
  822fb4:	e0bfa317 	ldw	r2,-372(fp)
  822fb8:	10800504 	addi	r2,r2,20
  822fbc:	10800017 	ldw	r2,0(r2)
  822fc0:	e0bfa915 	stw	r2,-348(fp)
  822fc4:	e0bfa317 	ldw	r2,-372(fp)
  822fc8:	10800704 	addi	r2,r2,28
  822fcc:	10800017 	ldw	r2,0(r2)
  822fd0:	e0bfb215 	stw	r2,-312(fp)
  822fd4:	017633c4 	movi	r5,-10033
  822fd8:	e13fa817 	ldw	r4,-352(fp)
  822fdc:	08305040 	call	830504 <__mulsi3>
  822fe0:	e0bfa815 	stw	r2,-352(fp)
  822fe4:	e0ffa717 	ldw	r3,-356(fp)
  822fe8:	e0bfa917 	ldw	r2,-348(fp)
  822fec:	1885883a 	add	r2,r3,r2
  822ff0:	014745c4 	movi	r5,7447
  822ff4:	1009883a 	mov	r4,r2
  822ff8:	08305040 	call	830504 <__mulsi3>
  822ffc:	e0bfac15 	stw	r2,-336(fp)
  823000:	e0ffa717 	ldw	r3,-356(fp)
  823004:	e0bfb217 	ldw	r2,-312(fp)
  823008:	1885883a 	add	r2,r3,r2
  82300c:	0143de84 	movi	r5,3962
  823010:	1009883a 	mov	r4,r2
  823014:	08305040 	call	830504 <__mulsi3>
  823018:	e0bfaa15 	stw	r2,-344(fp)
  82301c:	e0ffac17 	ldw	r3,-336(fp)
  823020:	e0bfaa17 	ldw	r2,-344(fp)
  823024:	1887883a 	add	r3,r3,r2
  823028:	e0bfa817 	ldw	r2,-352(fp)
  82302c:	1885c83a 	sub	r2,r3,r2
  823030:	e0bfa615 	stw	r2,-360(fp)
  823034:	e0ffa917 	ldw	r3,-348(fp)
  823038:	e0bfb217 	ldw	r2,-312(fp)
  82303c:	1885c83a 	sub	r2,r3,r2
  823040:	014b2444 	movi	r5,11409
  823044:	1009883a 	mov	r4,r2
  823048:	08305040 	call	830504 <__mulsi3>
  82304c:	e0bfab15 	stw	r2,-340(fp)
  823050:	e0ffa817 	ldw	r3,-352(fp)
  823054:	e0bfab17 	ldw	r2,-340(fp)
  823058:	1885c83a 	sub	r2,r3,r2
  82305c:	e0ffac17 	ldw	r3,-336(fp)
  823060:	1885883a 	add	r2,r3,r2
  823064:	e0bfac15 	stw	r2,-336(fp)
  823068:	e0ffa817 	ldw	r3,-352(fp)
  82306c:	e0bfab17 	ldw	r2,-340(fp)
  823070:	1885883a 	add	r2,r3,r2
  823074:	e0ffaa17 	ldw	r3,-344(fp)
  823078:	1885883a 	add	r2,r3,r2
  82307c:	e0bfaa15 	stw	r2,-344(fp)
  823080:	e0ffa717 	ldw	r3,-356(fp)
  823084:	e0bfa917 	ldw	r2,-348(fp)
  823088:	1887c83a 	sub	r3,r3,r2
  82308c:	e0bfb217 	ldw	r2,-312(fp)
  823090:	1885c83a 	sub	r2,r3,r2
  823094:	0149cc44 	movi	r5,10033
  823098:	1009883a 	mov	r4,r2
  82309c:	08305040 	call	830504 <__mulsi3>
  8230a0:	e0bfab15 	stw	r2,-340(fp)
  8230a4:	e0ffaf17 	ldw	r3,-324(fp)
  8230a8:	e0bfa617 	ldw	r2,-360(fp)
  8230ac:	1885883a 	add	r2,r3,r2
  8230b0:	1005d4ba 	srai	r2,r2,18
  8230b4:	1080ffcc 	andi	r2,r2,1023
  8230b8:	e0ffa517 	ldw	r3,-364(fp)
  8230bc:	1885883a 	add	r2,r3,r2
  8230c0:	10c00003 	ldbu	r3,0(r2)
  8230c4:	e0bfb317 	ldw	r2,-308(fp)
  8230c8:	10c00005 	stb	r3,0(r2)
  8230cc:	e0bfb317 	ldw	r2,-308(fp)
  8230d0:	10800204 	addi	r2,r2,8
  8230d4:	e13faf17 	ldw	r4,-324(fp)
  8230d8:	e0ffa617 	ldw	r3,-360(fp)
  8230dc:	20c7c83a 	sub	r3,r4,r3
  8230e0:	1807d4ba 	srai	r3,r3,18
  8230e4:	18c0ffcc 	andi	r3,r3,1023
  8230e8:	e13fa517 	ldw	r4,-364(fp)
  8230ec:	20c7883a 	add	r3,r4,r3
  8230f0:	18c00003 	ldbu	r3,0(r3)
  8230f4:	10c00005 	stb	r3,0(r2)
  8230f8:	e0bfb317 	ldw	r2,-308(fp)
  8230fc:	10800044 	addi	r2,r2,1
  823100:	e13fad17 	ldw	r4,-332(fp)
  823104:	e0ffab17 	ldw	r3,-340(fp)
  823108:	20c7883a 	add	r3,r4,r3
  82310c:	1807d4ba 	srai	r3,r3,18
  823110:	18c0ffcc 	andi	r3,r3,1023
  823114:	e13fa517 	ldw	r4,-364(fp)
  823118:	20c7883a 	add	r3,r4,r3
  82311c:	18c00003 	ldbu	r3,0(r3)
  823120:	10c00005 	stb	r3,0(r2)
  823124:	e0bfb317 	ldw	r2,-308(fp)
  823128:	108001c4 	addi	r2,r2,7
  82312c:	e13fad17 	ldw	r4,-332(fp)
  823130:	e0ffab17 	ldw	r3,-340(fp)
  823134:	20c7c83a 	sub	r3,r4,r3
  823138:	1807d4ba 	srai	r3,r3,18
  82313c:	18c0ffcc 	andi	r3,r3,1023
  823140:	e13fa517 	ldw	r4,-364(fp)
  823144:	20c7883a 	add	r3,r4,r3
  823148:	18c00003 	ldbu	r3,0(r3)
  82314c:	10c00005 	stb	r3,0(r2)
  823150:	e0bfb317 	ldw	r2,-308(fp)
  823154:	10800084 	addi	r2,r2,2
  823158:	e13fb017 	ldw	r4,-320(fp)
  82315c:	e0ffac17 	ldw	r3,-336(fp)
  823160:	20c7883a 	add	r3,r4,r3
  823164:	1807d4ba 	srai	r3,r3,18
  823168:	18c0ffcc 	andi	r3,r3,1023
  82316c:	e13fa517 	ldw	r4,-364(fp)
  823170:	20c7883a 	add	r3,r4,r3
  823174:	18c00003 	ldbu	r3,0(r3)
  823178:	10c00005 	stb	r3,0(r2)
  82317c:	e0bfb317 	ldw	r2,-308(fp)
  823180:	10800184 	addi	r2,r2,6
  823184:	e13fb017 	ldw	r4,-320(fp)
  823188:	e0ffac17 	ldw	r3,-336(fp)
  82318c:	20c7c83a 	sub	r3,r4,r3
  823190:	1807d4ba 	srai	r3,r3,18
  823194:	18c0ffcc 	andi	r3,r3,1023
  823198:	e13fa517 	ldw	r4,-364(fp)
  82319c:	20c7883a 	add	r3,r4,r3
  8231a0:	18c00003 	ldbu	r3,0(r3)
  8231a4:	10c00005 	stb	r3,0(r2)
  8231a8:	e0bfb317 	ldw	r2,-308(fp)
  8231ac:	108000c4 	addi	r2,r2,3
  8231b0:	e13fb117 	ldw	r4,-316(fp)
  8231b4:	e0ffaa17 	ldw	r3,-344(fp)
  8231b8:	20c7883a 	add	r3,r4,r3
  8231bc:	1807d4ba 	srai	r3,r3,18
  8231c0:	18c0ffcc 	andi	r3,r3,1023
  8231c4:	e13fa517 	ldw	r4,-364(fp)
  8231c8:	20c7883a 	add	r3,r4,r3
  8231cc:	18c00003 	ldbu	r3,0(r3)
  8231d0:	10c00005 	stb	r3,0(r2)
  8231d4:	e0bfb317 	ldw	r2,-308(fp)
  8231d8:	10800144 	addi	r2,r2,5
  8231dc:	e13fb117 	ldw	r4,-316(fp)
  8231e0:	e0ffaa17 	ldw	r3,-344(fp)
  8231e4:	20c7c83a 	sub	r3,r4,r3
  8231e8:	1807d4ba 	srai	r3,r3,18
  8231ec:	18c0ffcc 	andi	r3,r3,1023
  8231f0:	e13fa517 	ldw	r4,-364(fp)
  8231f4:	20c7883a 	add	r3,r4,r3
  8231f8:	18c00003 	ldbu	r3,0(r3)
  8231fc:	10c00005 	stb	r3,0(r2)
  823200:	e0bfb317 	ldw	r2,-308(fp)
  823204:	10800104 	addi	r2,r2,4
  823208:	e0ffae17 	ldw	r3,-328(fp)
  82320c:	1807d4ba 	srai	r3,r3,18
  823210:	18c0ffcc 	andi	r3,r3,1023
  823214:	e13fa517 	ldw	r4,-364(fp)
  823218:	20c7883a 	add	r3,r4,r3
  82321c:	18c00003 	ldbu	r3,0(r3)
  823220:	10c00005 	stb	r3,0(r2)
  823224:	e0bfa317 	ldw	r2,-372(fp)
  823228:	10800804 	addi	r2,r2,32
  82322c:	e0bfa315 	stw	r2,-372(fp)
  823230:	e0bfa417 	ldw	r2,-368(fp)
  823234:	10800044 	addi	r2,r2,1
  823238:	e0bfa415 	stw	r2,-368(fp)
  82323c:	e0bfa417 	ldw	r2,-368(fp)
  823240:	10800250 	cmplti	r2,r2,9
  823244:	103ef61e 	bne	r2,zero,822e20 <__alt_mem_epcs_flash_controller_0+0xff819e20>
  823248:	0001883a 	nop
  82324c:	e037883a 	mov	sp,fp
  823250:	dfc00117 	ldw	ra,4(sp)
  823254:	df000017 	ldw	fp,0(sp)
  823258:	dec00204 	addi	sp,sp,8
  82325c:	f800283a 	ret

00823260 <jpeg_idct_10x10>:
  823260:	deff9504 	addi	sp,sp,-428
  823264:	dfc06a15 	stw	ra,424(sp)
  823268:	df006915 	stw	fp,420(sp)
  82326c:	df006904 	addi	fp,sp,420
  823270:	e13ffc15 	stw	r4,-16(fp)
  823274:	e17ffd15 	stw	r5,-12(fp)
  823278:	e1bffe15 	stw	r6,-8(fp)
  82327c:	e1ffff15 	stw	r7,-4(fp)
  823280:	e0bffc17 	ldw	r2,-16(fp)
  823284:	10805417 	ldw	r2,336(r2)
  823288:	10bfa004 	addi	r2,r2,-384
  82328c:	e0bf9b15 	stw	r2,-404(fp)
  823290:	e0bffe17 	ldw	r2,-8(fp)
  823294:	e0bf9715 	stw	r2,-420(fp)
  823298:	e0bffd17 	ldw	r2,-12(fp)
  82329c:	10801517 	ldw	r2,84(r2)
  8232a0:	e0bf9815 	stw	r2,-416(fp)
  8232a4:	e0bfac04 	addi	r2,fp,-336
  8232a8:	e0bf9915 	stw	r2,-412(fp)
  8232ac:	e03f9a15 	stw	zero,-408(fp)
  8232b0:	00014706 	br	8237d0 <jpeg_idct_10x10+0x570>
  8232b4:	e0bf9717 	ldw	r2,-420(fp)
  8232b8:	1080000b 	ldhu	r2,0(r2)
  8232bc:	10ffffcc 	andi	r3,r2,65535
  8232c0:	18e0001c 	xori	r3,r3,32768
  8232c4:	18e00004 	addi	r3,r3,-32768
  8232c8:	e0bf9817 	ldw	r2,-416(fp)
  8232cc:	10800017 	ldw	r2,0(r2)
  8232d0:	100b883a 	mov	r5,r2
  8232d4:	1809883a 	mov	r4,r3
  8232d8:	08305040 	call	830504 <__mulsi3>
  8232dc:	e0bf9c15 	stw	r2,-400(fp)
  8232e0:	e0bf9c17 	ldw	r2,-400(fp)
  8232e4:	1004937a 	slli	r2,r2,13
  8232e8:	e0bf9c15 	stw	r2,-400(fp)
  8232ec:	e0bf9c17 	ldw	r2,-400(fp)
  8232f0:	10810004 	addi	r2,r2,1024
  8232f4:	e0bf9c15 	stw	r2,-400(fp)
  8232f8:	e0bf9717 	ldw	r2,-420(fp)
  8232fc:	10801004 	addi	r2,r2,64
  823300:	1080000b 	ldhu	r2,0(r2)
  823304:	10ffffcc 	andi	r3,r2,65535
  823308:	18e0001c 	xori	r3,r3,32768
  82330c:	18e00004 	addi	r3,r3,-32768
  823310:	e0bf9817 	ldw	r2,-416(fp)
  823314:	10802004 	addi	r2,r2,128
  823318:	10800017 	ldw	r2,0(r2)
  82331c:	100b883a 	mov	r5,r2
  823320:	1809883a 	mov	r4,r3
  823324:	08305040 	call	830504 <__mulsi3>
  823328:	e0bf9d15 	stw	r2,-396(fp)
  82332c:	01492744 	movi	r5,9373
  823330:	e13f9d17 	ldw	r4,-396(fp)
  823334:	08305040 	call	830504 <__mulsi3>
  823338:	e0bf9e15 	stw	r2,-392(fp)
  82333c:	01437f04 	movi	r5,3580
  823340:	e13f9d17 	ldw	r4,-396(fp)
  823344:	08305040 	call	830504 <__mulsi3>
  823348:	e0bf9f15 	stw	r2,-388(fp)
  82334c:	e0ff9c17 	ldw	r3,-400(fp)
  823350:	e0bf9e17 	ldw	r2,-392(fp)
  823354:	1885883a 	add	r2,r3,r2
  823358:	e0bfa015 	stw	r2,-384(fp)
  82335c:	e0ff9c17 	ldw	r3,-400(fp)
  823360:	e0bf9f17 	ldw	r2,-388(fp)
  823364:	1885c83a 	sub	r2,r3,r2
  823368:	e0bfa115 	stw	r2,-380(fp)
  82336c:	e0ff9e17 	ldw	r3,-392(fp)
  823370:	e0bf9f17 	ldw	r2,-388(fp)
  823374:	1885c83a 	sub	r2,r3,r2
  823378:	1085883a 	add	r2,r2,r2
  82337c:	1007883a 	mov	r3,r2
  823380:	e0bf9c17 	ldw	r2,-400(fp)
  823384:	10c5c83a 	sub	r2,r2,r3
  823388:	1005d2fa 	srai	r2,r2,11
  82338c:	e0bfa215 	stw	r2,-376(fp)
  823390:	e0bf9717 	ldw	r2,-420(fp)
  823394:	10800804 	addi	r2,r2,32
  823398:	1080000b 	ldhu	r2,0(r2)
  82339c:	10ffffcc 	andi	r3,r2,65535
  8233a0:	18e0001c 	xori	r3,r3,32768
  8233a4:	18e00004 	addi	r3,r3,-32768
  8233a8:	e0bf9817 	ldw	r2,-416(fp)
  8233ac:	10801004 	addi	r2,r2,64
  8233b0:	10800017 	ldw	r2,0(r2)
  8233b4:	100b883a 	mov	r5,r2
  8233b8:	1809883a 	mov	r4,r3
  8233bc:	08305040 	call	830504 <__mulsi3>
  8233c0:	e0bf9f15 	stw	r2,-388(fp)
  8233c4:	e0bf9717 	ldw	r2,-420(fp)
  8233c8:	10801804 	addi	r2,r2,96
  8233cc:	1080000b 	ldhu	r2,0(r2)
  8233d0:	10ffffcc 	andi	r3,r2,65535
  8233d4:	18e0001c 	xori	r3,r3,32768
  8233d8:	18e00004 	addi	r3,r3,-32768
  8233dc:	e0bf9817 	ldw	r2,-416(fp)
  8233e0:	10803004 	addi	r2,r2,192
  8233e4:	10800017 	ldw	r2,0(r2)
  8233e8:	100b883a 	mov	r5,r2
  8233ec:	1809883a 	mov	r4,r3
  8233f0:	08305040 	call	830504 <__mulsi3>
  8233f4:	e0bf9c15 	stw	r2,-400(fp)
  8233f8:	e0ff9f17 	ldw	r3,-388(fp)
  8233fc:	e0bf9c17 	ldw	r2,-400(fp)
  823400:	1885883a 	add	r2,r3,r2
  823404:	0146a684 	movi	r5,6810
  823408:	1009883a 	mov	r4,r2
  82340c:	08305040 	call	830504 <__mulsi3>
  823410:	e0bf9e15 	stw	r2,-392(fp)
  823414:	01441c44 	movi	r5,4209
  823418:	e13f9f17 	ldw	r4,-388(fp)
  82341c:	08305040 	call	830504 <__mulsi3>
  823420:	1007883a 	mov	r3,r2
  823424:	e0bf9e17 	ldw	r2,-392(fp)
  823428:	1885883a 	add	r2,r3,r2
  82342c:	e0bfa315 	stw	r2,-372(fp)
  823430:	016e9704 	movi	r5,-17828
  823434:	e13f9c17 	ldw	r4,-400(fp)
  823438:	08305040 	call	830504 <__mulsi3>
  82343c:	1007883a 	mov	r3,r2
  823440:	e0bf9e17 	ldw	r2,-392(fp)
  823444:	1885883a 	add	r2,r3,r2
  823448:	e0bfa415 	stw	r2,-368(fp)
  82344c:	e0ffa017 	ldw	r3,-384(fp)
  823450:	e0bfa317 	ldw	r2,-372(fp)
  823454:	1885883a 	add	r2,r3,r2
  823458:	e0bfa515 	stw	r2,-364(fp)
  82345c:	e0ffa017 	ldw	r3,-384(fp)
  823460:	e0bfa317 	ldw	r2,-372(fp)
  823464:	1885c83a 	sub	r2,r3,r2
  823468:	e0bfa615 	stw	r2,-360(fp)
  82346c:	e0ffa117 	ldw	r3,-380(fp)
  823470:	e0bfa417 	ldw	r2,-368(fp)
  823474:	1885883a 	add	r2,r3,r2
  823478:	e0bfa715 	stw	r2,-356(fp)
  82347c:	e0ffa117 	ldw	r3,-380(fp)
  823480:	e0bfa417 	ldw	r2,-368(fp)
  823484:	1885c83a 	sub	r2,r3,r2
  823488:	e0bfa815 	stw	r2,-352(fp)
  82348c:	e0bf9717 	ldw	r2,-420(fp)
  823490:	10800404 	addi	r2,r2,16
  823494:	1080000b 	ldhu	r2,0(r2)
  823498:	10ffffcc 	andi	r3,r2,65535
  82349c:	18e0001c 	xori	r3,r3,32768
  8234a0:	18e00004 	addi	r3,r3,-32768
  8234a4:	e0bf9817 	ldw	r2,-416(fp)
  8234a8:	10800804 	addi	r2,r2,32
  8234ac:	10800017 	ldw	r2,0(r2)
  8234b0:	100b883a 	mov	r5,r2
  8234b4:	1809883a 	mov	r4,r3
  8234b8:	08305040 	call	830504 <__mulsi3>
  8234bc:	e0bf9e15 	stw	r2,-392(fp)
  8234c0:	e0bf9717 	ldw	r2,-420(fp)
  8234c4:	10800c04 	addi	r2,r2,48
  8234c8:	1080000b 	ldhu	r2,0(r2)
  8234cc:	10ffffcc 	andi	r3,r2,65535
  8234d0:	18e0001c 	xori	r3,r3,32768
  8234d4:	18e00004 	addi	r3,r3,-32768
  8234d8:	e0bf9817 	ldw	r2,-416(fp)
  8234dc:	10801804 	addi	r2,r2,96
  8234e0:	10800017 	ldw	r2,0(r2)
  8234e4:	100b883a 	mov	r5,r2
  8234e8:	1809883a 	mov	r4,r3
  8234ec:	08305040 	call	830504 <__mulsi3>
  8234f0:	e0bf9f15 	stw	r2,-388(fp)
  8234f4:	e0bf9717 	ldw	r2,-420(fp)
  8234f8:	10801404 	addi	r2,r2,80
  8234fc:	1080000b 	ldhu	r2,0(r2)
  823500:	10ffffcc 	andi	r3,r2,65535
  823504:	18e0001c 	xori	r3,r3,32768
  823508:	18e00004 	addi	r3,r3,-32768
  82350c:	e0bf9817 	ldw	r2,-416(fp)
  823510:	10802804 	addi	r2,r2,160
  823514:	10800017 	ldw	r2,0(r2)
  823518:	100b883a 	mov	r5,r2
  82351c:	1809883a 	mov	r4,r3
  823520:	08305040 	call	830504 <__mulsi3>
  823524:	e0bf9c15 	stw	r2,-400(fp)
  823528:	e0bf9717 	ldw	r2,-420(fp)
  82352c:	10801c04 	addi	r2,r2,112
  823530:	1080000b 	ldhu	r2,0(r2)
  823534:	10ffffcc 	andi	r3,r2,65535
  823538:	18e0001c 	xori	r3,r3,32768
  82353c:	18e00004 	addi	r3,r3,-32768
  823540:	e0bf9817 	ldw	r2,-416(fp)
  823544:	10803804 	addi	r2,r2,224
  823548:	10800017 	ldw	r2,0(r2)
  82354c:	100b883a 	mov	r5,r2
  823550:	1809883a 	mov	r4,r3
  823554:	08305040 	call	830504 <__mulsi3>
  823558:	e0bf9d15 	stw	r2,-396(fp)
  82355c:	e0ff9f17 	ldw	r3,-388(fp)
  823560:	e0bf9d17 	ldw	r2,-396(fp)
  823564:	1885883a 	add	r2,r3,r2
  823568:	e0bfa115 	stw	r2,-380(fp)
  82356c:	e0ff9f17 	ldw	r3,-388(fp)
  823570:	e0bf9d17 	ldw	r2,-396(fp)
  823574:	1885c83a 	sub	r2,r3,r2
  823578:	e0bfa415 	stw	r2,-368(fp)
  82357c:	014278c4 	movi	r5,2531
  823580:	e13fa417 	ldw	r4,-368(fp)
  823584:	08305040 	call	830504 <__mulsi3>
  823588:	e0bfa315 	stw	r2,-372(fp)
  82358c:	e0bf9c17 	ldw	r2,-400(fp)
  823590:	1004937a 	slli	r2,r2,13
  823594:	e0bfa915 	stw	r2,-348(fp)
  823598:	01479bc4 	movi	r5,7791
  82359c:	e13fa117 	ldw	r4,-380(fp)
  8235a0:	08305040 	call	830504 <__mulsi3>
  8235a4:	e0bf9f15 	stw	r2,-388(fp)
  8235a8:	e0ffa917 	ldw	r3,-348(fp)
  8235ac:	e0bfa317 	ldw	r2,-372(fp)
  8235b0:	1885883a 	add	r2,r3,r2
  8235b4:	e0bf9d15 	stw	r2,-396(fp)
  8235b8:	014b2cc4 	movi	r5,11443
  8235bc:	e13f9e17 	ldw	r4,-392(fp)
  8235c0:	08305040 	call	830504 <__mulsi3>
  8235c4:	1007883a 	mov	r3,r2
  8235c8:	e0bf9f17 	ldw	r2,-388(fp)
  8235cc:	1887883a 	add	r3,r3,r2
  8235d0:	e0bf9d17 	ldw	r2,-396(fp)
  8235d4:	1885883a 	add	r2,r3,r2
  8235d8:	e0bfa015 	stw	r2,-384(fp)
  8235dc:	0141c504 	movi	r5,1812
  8235e0:	e13f9e17 	ldw	r4,-392(fp)
  8235e4:	08305040 	call	830504 <__mulsi3>
  8235e8:	1007883a 	mov	r3,r2
  8235ec:	e0bf9f17 	ldw	r2,-388(fp)
  8235f0:	1887c83a 	sub	r3,r3,r2
  8235f4:	e0bf9d17 	ldw	r2,-396(fp)
  8235f8:	1885883a 	add	r2,r3,r2
  8235fc:	e0bfaa15 	stw	r2,-344(fp)
  823600:	0144b3c4 	movi	r5,4815
  823604:	e13fa117 	ldw	r4,-380(fp)
  823608:	08305040 	call	830504 <__mulsi3>
  82360c:	e0bf9f15 	stw	r2,-388(fp)
  823610:	e0ffa917 	ldw	r3,-348(fp)
  823614:	e0bfa317 	ldw	r2,-372(fp)
  823618:	1887c83a 	sub	r3,r3,r2
  82361c:	e0bfa417 	ldw	r2,-368(fp)
  823620:	1004933a 	slli	r2,r2,12
  823624:	1885c83a 	sub	r2,r3,r2
  823628:	e0bf9d15 	stw	r2,-396(fp)
  82362c:	e0ff9e17 	ldw	r3,-392(fp)
  823630:	e0bfa417 	ldw	r2,-368(fp)
  823634:	1887c83a 	sub	r3,r3,r2
  823638:	e0bf9c17 	ldw	r2,-400(fp)
  82363c:	1885c83a 	sub	r2,r3,r2
  823640:	1085883a 	add	r2,r2,r2
  823644:	1085883a 	add	r2,r2,r2
  823648:	e0bfa315 	stw	r2,-372(fp)
  82364c:	014a14c4 	movi	r5,10323
  823650:	e13f9e17 	ldw	r4,-392(fp)
  823654:	08305040 	call	830504 <__mulsi3>
  823658:	1007883a 	mov	r3,r2
  82365c:	e0bf9f17 	ldw	r2,-388(fp)
  823660:	1887c83a 	sub	r3,r3,r2
  823664:	e0bf9d17 	ldw	r2,-396(fp)
  823668:	1885c83a 	sub	r2,r3,r2
  82366c:	e0bfa115 	stw	r2,-380(fp)
  823670:	01452304 	movi	r5,5260
  823674:	e13f9e17 	ldw	r4,-392(fp)
  823678:	08305040 	call	830504 <__mulsi3>
  82367c:	1007883a 	mov	r3,r2
  823680:	e0bf9f17 	ldw	r2,-388(fp)
  823684:	1887c83a 	sub	r3,r3,r2
  823688:	e0bf9d17 	ldw	r2,-396(fp)
  82368c:	1885883a 	add	r2,r3,r2
  823690:	e0bfa415 	stw	r2,-368(fp)
  823694:	e0ffa517 	ldw	r3,-364(fp)
  823698:	e0bfa017 	ldw	r2,-384(fp)
  82369c:	1885883a 	add	r2,r3,r2
  8236a0:	1007d2fa 	srai	r3,r2,11
  8236a4:	e0bf9917 	ldw	r2,-412(fp)
  8236a8:	10c00015 	stw	r3,0(r2)
  8236ac:	e0bf9917 	ldw	r2,-412(fp)
  8236b0:	10804804 	addi	r2,r2,288
  8236b4:	e13fa517 	ldw	r4,-364(fp)
  8236b8:	e0ffa017 	ldw	r3,-384(fp)
  8236bc:	20c7c83a 	sub	r3,r4,r3
  8236c0:	1807d2fa 	srai	r3,r3,11
  8236c4:	10c00015 	stw	r3,0(r2)
  8236c8:	e0bf9917 	ldw	r2,-412(fp)
  8236cc:	10800804 	addi	r2,r2,32
  8236d0:	e13fa717 	ldw	r4,-356(fp)
  8236d4:	e0ffa117 	ldw	r3,-380(fp)
  8236d8:	20c7883a 	add	r3,r4,r3
  8236dc:	1807d2fa 	srai	r3,r3,11
  8236e0:	10c00015 	stw	r3,0(r2)
  8236e4:	e0bf9917 	ldw	r2,-412(fp)
  8236e8:	10804004 	addi	r2,r2,256
  8236ec:	e13fa717 	ldw	r4,-356(fp)
  8236f0:	e0ffa117 	ldw	r3,-380(fp)
  8236f4:	20c7c83a 	sub	r3,r4,r3
  8236f8:	1807d2fa 	srai	r3,r3,11
  8236fc:	10c00015 	stw	r3,0(r2)
  823700:	e0bf9917 	ldw	r2,-412(fp)
  823704:	10801004 	addi	r2,r2,64
  823708:	e13fa217 	ldw	r4,-376(fp)
  82370c:	e0ffa317 	ldw	r3,-372(fp)
  823710:	20c7883a 	add	r3,r4,r3
  823714:	10c00015 	stw	r3,0(r2)
  823718:	e0bf9917 	ldw	r2,-412(fp)
  82371c:	10803804 	addi	r2,r2,224
  823720:	e13fa217 	ldw	r4,-376(fp)
  823724:	e0ffa317 	ldw	r3,-372(fp)
  823728:	20c7c83a 	sub	r3,r4,r3
  82372c:	10c00015 	stw	r3,0(r2)
  823730:	e0bf9917 	ldw	r2,-412(fp)
  823734:	10801804 	addi	r2,r2,96
  823738:	e13fa817 	ldw	r4,-352(fp)
  82373c:	e0ffa417 	ldw	r3,-368(fp)
  823740:	20c7883a 	add	r3,r4,r3
  823744:	1807d2fa 	srai	r3,r3,11
  823748:	10c00015 	stw	r3,0(r2)
  82374c:	e0bf9917 	ldw	r2,-412(fp)
  823750:	10803004 	addi	r2,r2,192
  823754:	e13fa817 	ldw	r4,-352(fp)
  823758:	e0ffa417 	ldw	r3,-368(fp)
  82375c:	20c7c83a 	sub	r3,r4,r3
  823760:	1807d2fa 	srai	r3,r3,11
  823764:	10c00015 	stw	r3,0(r2)
  823768:	e0bf9917 	ldw	r2,-412(fp)
  82376c:	10802004 	addi	r2,r2,128
  823770:	e13fa617 	ldw	r4,-360(fp)
  823774:	e0ffaa17 	ldw	r3,-344(fp)
  823778:	20c7883a 	add	r3,r4,r3
  82377c:	1807d2fa 	srai	r3,r3,11
  823780:	10c00015 	stw	r3,0(r2)
  823784:	e0bf9917 	ldw	r2,-412(fp)
  823788:	10802804 	addi	r2,r2,160
  82378c:	e13fa617 	ldw	r4,-360(fp)
  823790:	e0ffaa17 	ldw	r3,-344(fp)
  823794:	20c7c83a 	sub	r3,r4,r3
  823798:	1807d2fa 	srai	r3,r3,11
  82379c:	10c00015 	stw	r3,0(r2)
  8237a0:	e0bf9a17 	ldw	r2,-408(fp)
  8237a4:	10800044 	addi	r2,r2,1
  8237a8:	e0bf9a15 	stw	r2,-408(fp)
  8237ac:	e0bf9717 	ldw	r2,-420(fp)
  8237b0:	10800084 	addi	r2,r2,2
  8237b4:	e0bf9715 	stw	r2,-420(fp)
  8237b8:	e0bf9817 	ldw	r2,-416(fp)
  8237bc:	10800104 	addi	r2,r2,4
  8237c0:	e0bf9815 	stw	r2,-416(fp)
  8237c4:	e0bf9917 	ldw	r2,-412(fp)
  8237c8:	10800104 	addi	r2,r2,4
  8237cc:	e0bf9915 	stw	r2,-412(fp)
  8237d0:	e0bf9a17 	ldw	r2,-408(fp)
  8237d4:	10800210 	cmplti	r2,r2,8
  8237d8:	103eb61e 	bne	r2,zero,8232b4 <__alt_mem_epcs_flash_controller_0+0xff81a2b4>
  8237dc:	e0bfac04 	addi	r2,fp,-336
  8237e0:	e0bf9915 	stw	r2,-412(fp)
  8237e4:	e03f9a15 	stw	zero,-408(fp)
  8237e8:	00012a06 	br	823c94 <jpeg_idct_10x10+0xa34>
  8237ec:	e0bf9a17 	ldw	r2,-408(fp)
  8237f0:	1085883a 	add	r2,r2,r2
  8237f4:	1085883a 	add	r2,r2,r2
  8237f8:	1007883a 	mov	r3,r2
  8237fc:	e0bfff17 	ldw	r2,-4(fp)
  823800:	10c5883a 	add	r2,r2,r3
  823804:	10c00017 	ldw	r3,0(r2)
  823808:	e0800217 	ldw	r2,8(fp)
  82380c:	1885883a 	add	r2,r3,r2
  823810:	e0bfab15 	stw	r2,-340(fp)
  823814:	e0bf9917 	ldw	r2,-412(fp)
  823818:	10800017 	ldw	r2,0(r2)
  82381c:	10900404 	addi	r2,r2,16400
  823820:	e0bf9c15 	stw	r2,-400(fp)
  823824:	e0bf9c17 	ldw	r2,-400(fp)
  823828:	1004937a 	slli	r2,r2,13
  82382c:	e0bf9c15 	stw	r2,-400(fp)
  823830:	e0bf9917 	ldw	r2,-412(fp)
  823834:	10800404 	addi	r2,r2,16
  823838:	10800017 	ldw	r2,0(r2)
  82383c:	e0bf9d15 	stw	r2,-396(fp)
  823840:	01492744 	movi	r5,9373
  823844:	e13f9d17 	ldw	r4,-396(fp)
  823848:	08305040 	call	830504 <__mulsi3>
  82384c:	e0bf9e15 	stw	r2,-392(fp)
  823850:	01437f04 	movi	r5,3580
  823854:	e13f9d17 	ldw	r4,-396(fp)
  823858:	08305040 	call	830504 <__mulsi3>
  82385c:	e0bf9f15 	stw	r2,-388(fp)
  823860:	e0ff9c17 	ldw	r3,-400(fp)
  823864:	e0bf9e17 	ldw	r2,-392(fp)
  823868:	1885883a 	add	r2,r3,r2
  82386c:	e0bfa015 	stw	r2,-384(fp)
  823870:	e0ff9c17 	ldw	r3,-400(fp)
  823874:	e0bf9f17 	ldw	r2,-388(fp)
  823878:	1885c83a 	sub	r2,r3,r2
  82387c:	e0bfa115 	stw	r2,-380(fp)
  823880:	e0ff9e17 	ldw	r3,-392(fp)
  823884:	e0bf9f17 	ldw	r2,-388(fp)
  823888:	1885c83a 	sub	r2,r3,r2
  82388c:	1085883a 	add	r2,r2,r2
  823890:	1007883a 	mov	r3,r2
  823894:	e0bf9c17 	ldw	r2,-400(fp)
  823898:	10c5c83a 	sub	r2,r2,r3
  82389c:	e0bfa215 	stw	r2,-376(fp)
  8238a0:	e0bf9917 	ldw	r2,-412(fp)
  8238a4:	10800204 	addi	r2,r2,8
  8238a8:	10800017 	ldw	r2,0(r2)
  8238ac:	e0bf9f15 	stw	r2,-388(fp)
  8238b0:	e0bf9917 	ldw	r2,-412(fp)
  8238b4:	10800604 	addi	r2,r2,24
  8238b8:	10800017 	ldw	r2,0(r2)
  8238bc:	e0bf9c15 	stw	r2,-400(fp)
  8238c0:	e0ff9f17 	ldw	r3,-388(fp)
  8238c4:	e0bf9c17 	ldw	r2,-400(fp)
  8238c8:	1885883a 	add	r2,r3,r2
  8238cc:	0146a684 	movi	r5,6810
  8238d0:	1009883a 	mov	r4,r2
  8238d4:	08305040 	call	830504 <__mulsi3>
  8238d8:	e0bf9e15 	stw	r2,-392(fp)
  8238dc:	01441c44 	movi	r5,4209
  8238e0:	e13f9f17 	ldw	r4,-388(fp)
  8238e4:	08305040 	call	830504 <__mulsi3>
  8238e8:	1007883a 	mov	r3,r2
  8238ec:	e0bf9e17 	ldw	r2,-392(fp)
  8238f0:	1885883a 	add	r2,r3,r2
  8238f4:	e0bfa315 	stw	r2,-372(fp)
  8238f8:	016e9704 	movi	r5,-17828
  8238fc:	e13f9c17 	ldw	r4,-400(fp)
  823900:	08305040 	call	830504 <__mulsi3>
  823904:	1007883a 	mov	r3,r2
  823908:	e0bf9e17 	ldw	r2,-392(fp)
  82390c:	1885883a 	add	r2,r3,r2
  823910:	e0bfa415 	stw	r2,-368(fp)
  823914:	e0ffa017 	ldw	r3,-384(fp)
  823918:	e0bfa317 	ldw	r2,-372(fp)
  82391c:	1885883a 	add	r2,r3,r2
  823920:	e0bfa515 	stw	r2,-364(fp)
  823924:	e0ffa017 	ldw	r3,-384(fp)
  823928:	e0bfa317 	ldw	r2,-372(fp)
  82392c:	1885c83a 	sub	r2,r3,r2
  823930:	e0bfa615 	stw	r2,-360(fp)
  823934:	e0ffa117 	ldw	r3,-380(fp)
  823938:	e0bfa417 	ldw	r2,-368(fp)
  82393c:	1885883a 	add	r2,r3,r2
  823940:	e0bfa715 	stw	r2,-356(fp)
  823944:	e0ffa117 	ldw	r3,-380(fp)
  823948:	e0bfa417 	ldw	r2,-368(fp)
  82394c:	1885c83a 	sub	r2,r3,r2
  823950:	e0bfa815 	stw	r2,-352(fp)
  823954:	e0bf9917 	ldw	r2,-412(fp)
  823958:	10800104 	addi	r2,r2,4
  82395c:	10800017 	ldw	r2,0(r2)
  823960:	e0bf9e15 	stw	r2,-392(fp)
  823964:	e0bf9917 	ldw	r2,-412(fp)
  823968:	10800304 	addi	r2,r2,12
  82396c:	10800017 	ldw	r2,0(r2)
  823970:	e0bf9f15 	stw	r2,-388(fp)
  823974:	e0bf9917 	ldw	r2,-412(fp)
  823978:	10800504 	addi	r2,r2,20
  82397c:	10800017 	ldw	r2,0(r2)
  823980:	e0bf9c15 	stw	r2,-400(fp)
  823984:	e0bf9c17 	ldw	r2,-400(fp)
  823988:	1004937a 	slli	r2,r2,13
  82398c:	e0bf9c15 	stw	r2,-400(fp)
  823990:	e0bf9917 	ldw	r2,-412(fp)
  823994:	10800704 	addi	r2,r2,28
  823998:	10800017 	ldw	r2,0(r2)
  82399c:	e0bf9d15 	stw	r2,-396(fp)
  8239a0:	e0ff9f17 	ldw	r3,-388(fp)
  8239a4:	e0bf9d17 	ldw	r2,-396(fp)
  8239a8:	1885883a 	add	r2,r3,r2
  8239ac:	e0bfa115 	stw	r2,-380(fp)
  8239b0:	e0ff9f17 	ldw	r3,-388(fp)
  8239b4:	e0bf9d17 	ldw	r2,-396(fp)
  8239b8:	1885c83a 	sub	r2,r3,r2
  8239bc:	e0bfa415 	stw	r2,-368(fp)
  8239c0:	014278c4 	movi	r5,2531
  8239c4:	e13fa417 	ldw	r4,-368(fp)
  8239c8:	08305040 	call	830504 <__mulsi3>
  8239cc:	e0bfa315 	stw	r2,-372(fp)
  8239d0:	01479bc4 	movi	r5,7791
  8239d4:	e13fa117 	ldw	r4,-380(fp)
  8239d8:	08305040 	call	830504 <__mulsi3>
  8239dc:	e0bf9f15 	stw	r2,-388(fp)
  8239e0:	e0ff9c17 	ldw	r3,-400(fp)
  8239e4:	e0bfa317 	ldw	r2,-372(fp)
  8239e8:	1885883a 	add	r2,r3,r2
  8239ec:	e0bf9d15 	stw	r2,-396(fp)
  8239f0:	014b2cc4 	movi	r5,11443
  8239f4:	e13f9e17 	ldw	r4,-392(fp)
  8239f8:	08305040 	call	830504 <__mulsi3>
  8239fc:	1007883a 	mov	r3,r2
  823a00:	e0bf9f17 	ldw	r2,-388(fp)
  823a04:	1887883a 	add	r3,r3,r2
  823a08:	e0bf9d17 	ldw	r2,-396(fp)
  823a0c:	1885883a 	add	r2,r3,r2
  823a10:	e0bfa015 	stw	r2,-384(fp)
  823a14:	0141c504 	movi	r5,1812
  823a18:	e13f9e17 	ldw	r4,-392(fp)
  823a1c:	08305040 	call	830504 <__mulsi3>
  823a20:	1007883a 	mov	r3,r2
  823a24:	e0bf9f17 	ldw	r2,-388(fp)
  823a28:	1887c83a 	sub	r3,r3,r2
  823a2c:	e0bf9d17 	ldw	r2,-396(fp)
  823a30:	1885883a 	add	r2,r3,r2
  823a34:	e0bfaa15 	stw	r2,-344(fp)
  823a38:	0144b3c4 	movi	r5,4815
  823a3c:	e13fa117 	ldw	r4,-380(fp)
  823a40:	08305040 	call	830504 <__mulsi3>
  823a44:	e0bf9f15 	stw	r2,-388(fp)
  823a48:	e0ff9c17 	ldw	r3,-400(fp)
  823a4c:	e0bfa317 	ldw	r2,-372(fp)
  823a50:	1887c83a 	sub	r3,r3,r2
  823a54:	e0bfa417 	ldw	r2,-368(fp)
  823a58:	1004933a 	slli	r2,r2,12
  823a5c:	1885c83a 	sub	r2,r3,r2
  823a60:	e0bf9d15 	stw	r2,-396(fp)
  823a64:	e0ff9e17 	ldw	r3,-392(fp)
  823a68:	e0bfa417 	ldw	r2,-368(fp)
  823a6c:	1885c83a 	sub	r2,r3,r2
  823a70:	1006937a 	slli	r3,r2,13
  823a74:	e0bf9c17 	ldw	r2,-400(fp)
  823a78:	1885c83a 	sub	r2,r3,r2
  823a7c:	e0bfa315 	stw	r2,-372(fp)
  823a80:	014a14c4 	movi	r5,10323
  823a84:	e13f9e17 	ldw	r4,-392(fp)
  823a88:	08305040 	call	830504 <__mulsi3>
  823a8c:	1007883a 	mov	r3,r2
  823a90:	e0bf9f17 	ldw	r2,-388(fp)
  823a94:	1887c83a 	sub	r3,r3,r2
  823a98:	e0bf9d17 	ldw	r2,-396(fp)
  823a9c:	1885c83a 	sub	r2,r3,r2
  823aa0:	e0bfa115 	stw	r2,-380(fp)
  823aa4:	01452304 	movi	r5,5260
  823aa8:	e13f9e17 	ldw	r4,-392(fp)
  823aac:	08305040 	call	830504 <__mulsi3>
  823ab0:	1007883a 	mov	r3,r2
  823ab4:	e0bf9f17 	ldw	r2,-388(fp)
  823ab8:	1887c83a 	sub	r3,r3,r2
  823abc:	e0bf9d17 	ldw	r2,-396(fp)
  823ac0:	1885883a 	add	r2,r3,r2
  823ac4:	e0bfa415 	stw	r2,-368(fp)
  823ac8:	e0ffa517 	ldw	r3,-364(fp)
  823acc:	e0bfa017 	ldw	r2,-384(fp)
  823ad0:	1885883a 	add	r2,r3,r2
  823ad4:	1005d4ba 	srai	r2,r2,18
  823ad8:	1080ffcc 	andi	r2,r2,1023
  823adc:	e0ff9b17 	ldw	r3,-404(fp)
  823ae0:	1885883a 	add	r2,r3,r2
  823ae4:	10c00003 	ldbu	r3,0(r2)
  823ae8:	e0bfab17 	ldw	r2,-340(fp)
  823aec:	10c00005 	stb	r3,0(r2)
  823af0:	e0bfab17 	ldw	r2,-340(fp)
  823af4:	10800244 	addi	r2,r2,9
  823af8:	e13fa517 	ldw	r4,-364(fp)
  823afc:	e0ffa017 	ldw	r3,-384(fp)
  823b00:	20c7c83a 	sub	r3,r4,r3
  823b04:	1807d4ba 	srai	r3,r3,18
  823b08:	18c0ffcc 	andi	r3,r3,1023
  823b0c:	e13f9b17 	ldw	r4,-404(fp)
  823b10:	20c7883a 	add	r3,r4,r3
  823b14:	18c00003 	ldbu	r3,0(r3)
  823b18:	10c00005 	stb	r3,0(r2)
  823b1c:	e0bfab17 	ldw	r2,-340(fp)
  823b20:	10800044 	addi	r2,r2,1
  823b24:	e13fa717 	ldw	r4,-356(fp)
  823b28:	e0ffa117 	ldw	r3,-380(fp)
  823b2c:	20c7883a 	add	r3,r4,r3
  823b30:	1807d4ba 	srai	r3,r3,18
  823b34:	18c0ffcc 	andi	r3,r3,1023
  823b38:	e13f9b17 	ldw	r4,-404(fp)
  823b3c:	20c7883a 	add	r3,r4,r3
  823b40:	18c00003 	ldbu	r3,0(r3)
  823b44:	10c00005 	stb	r3,0(r2)
  823b48:	e0bfab17 	ldw	r2,-340(fp)
  823b4c:	10800204 	addi	r2,r2,8
  823b50:	e13fa717 	ldw	r4,-356(fp)
  823b54:	e0ffa117 	ldw	r3,-380(fp)
  823b58:	20c7c83a 	sub	r3,r4,r3
  823b5c:	1807d4ba 	srai	r3,r3,18
  823b60:	18c0ffcc 	andi	r3,r3,1023
  823b64:	e13f9b17 	ldw	r4,-404(fp)
  823b68:	20c7883a 	add	r3,r4,r3
  823b6c:	18c00003 	ldbu	r3,0(r3)
  823b70:	10c00005 	stb	r3,0(r2)
  823b74:	e0bfab17 	ldw	r2,-340(fp)
  823b78:	10800084 	addi	r2,r2,2
  823b7c:	e13fa217 	ldw	r4,-376(fp)
  823b80:	e0ffa317 	ldw	r3,-372(fp)
  823b84:	20c7883a 	add	r3,r4,r3
  823b88:	1807d4ba 	srai	r3,r3,18
  823b8c:	18c0ffcc 	andi	r3,r3,1023
  823b90:	e13f9b17 	ldw	r4,-404(fp)
  823b94:	20c7883a 	add	r3,r4,r3
  823b98:	18c00003 	ldbu	r3,0(r3)
  823b9c:	10c00005 	stb	r3,0(r2)
  823ba0:	e0bfab17 	ldw	r2,-340(fp)
  823ba4:	108001c4 	addi	r2,r2,7
  823ba8:	e13fa217 	ldw	r4,-376(fp)
  823bac:	e0ffa317 	ldw	r3,-372(fp)
  823bb0:	20c7c83a 	sub	r3,r4,r3
  823bb4:	1807d4ba 	srai	r3,r3,18
  823bb8:	18c0ffcc 	andi	r3,r3,1023
  823bbc:	e13f9b17 	ldw	r4,-404(fp)
  823bc0:	20c7883a 	add	r3,r4,r3
  823bc4:	18c00003 	ldbu	r3,0(r3)
  823bc8:	10c00005 	stb	r3,0(r2)
  823bcc:	e0bfab17 	ldw	r2,-340(fp)
  823bd0:	108000c4 	addi	r2,r2,3
  823bd4:	e13fa817 	ldw	r4,-352(fp)
  823bd8:	e0ffa417 	ldw	r3,-368(fp)
  823bdc:	20c7883a 	add	r3,r4,r3
  823be0:	1807d4ba 	srai	r3,r3,18
  823be4:	18c0ffcc 	andi	r3,r3,1023
  823be8:	e13f9b17 	ldw	r4,-404(fp)
  823bec:	20c7883a 	add	r3,r4,r3
  823bf0:	18c00003 	ldbu	r3,0(r3)
  823bf4:	10c00005 	stb	r3,0(r2)
  823bf8:	e0bfab17 	ldw	r2,-340(fp)
  823bfc:	10800184 	addi	r2,r2,6
  823c00:	e13fa817 	ldw	r4,-352(fp)
  823c04:	e0ffa417 	ldw	r3,-368(fp)
  823c08:	20c7c83a 	sub	r3,r4,r3
  823c0c:	1807d4ba 	srai	r3,r3,18
  823c10:	18c0ffcc 	andi	r3,r3,1023
  823c14:	e13f9b17 	ldw	r4,-404(fp)
  823c18:	20c7883a 	add	r3,r4,r3
  823c1c:	18c00003 	ldbu	r3,0(r3)
  823c20:	10c00005 	stb	r3,0(r2)
  823c24:	e0bfab17 	ldw	r2,-340(fp)
  823c28:	10800104 	addi	r2,r2,4
  823c2c:	e13fa617 	ldw	r4,-360(fp)
  823c30:	e0ffaa17 	ldw	r3,-344(fp)
  823c34:	20c7883a 	add	r3,r4,r3
  823c38:	1807d4ba 	srai	r3,r3,18
  823c3c:	18c0ffcc 	andi	r3,r3,1023
  823c40:	e13f9b17 	ldw	r4,-404(fp)
  823c44:	20c7883a 	add	r3,r4,r3
  823c48:	18c00003 	ldbu	r3,0(r3)
  823c4c:	10c00005 	stb	r3,0(r2)
  823c50:	e0bfab17 	ldw	r2,-340(fp)
  823c54:	10800144 	addi	r2,r2,5
  823c58:	e13fa617 	ldw	r4,-360(fp)
  823c5c:	e0ffaa17 	ldw	r3,-344(fp)
  823c60:	20c7c83a 	sub	r3,r4,r3
  823c64:	1807d4ba 	srai	r3,r3,18
  823c68:	18c0ffcc 	andi	r3,r3,1023
  823c6c:	e13f9b17 	ldw	r4,-404(fp)
  823c70:	20c7883a 	add	r3,r4,r3
  823c74:	18c00003 	ldbu	r3,0(r3)
  823c78:	10c00005 	stb	r3,0(r2)
  823c7c:	e0bf9917 	ldw	r2,-412(fp)
  823c80:	10800804 	addi	r2,r2,32
  823c84:	e0bf9915 	stw	r2,-412(fp)
  823c88:	e0bf9a17 	ldw	r2,-408(fp)
  823c8c:	10800044 	addi	r2,r2,1
  823c90:	e0bf9a15 	stw	r2,-408(fp)
  823c94:	e0bf9a17 	ldw	r2,-408(fp)
  823c98:	10800290 	cmplti	r2,r2,10
  823c9c:	103ed31e 	bne	r2,zero,8237ec <__alt_mem_epcs_flash_controller_0+0xff81a7ec>
  823ca0:	0001883a 	nop
  823ca4:	e037883a 	mov	sp,fp
  823ca8:	dfc00117 	ldw	ra,4(sp)
  823cac:	df000017 	ldw	fp,0(sp)
  823cb0:	dec00204 	addi	sp,sp,8
  823cb4:	f800283a 	ret

00823cb8 <jpeg_idct_11x11>:
  823cb8:	deff8c04 	addi	sp,sp,-464
  823cbc:	dfc07315 	stw	ra,460(sp)
  823cc0:	df007215 	stw	fp,456(sp)
  823cc4:	dc007115 	stw	r16,452(sp)
  823cc8:	df007204 	addi	fp,sp,456
  823ccc:	e13ffb15 	stw	r4,-20(fp)
  823cd0:	e17ffc15 	stw	r5,-16(fp)
  823cd4:	e1bffd15 	stw	r6,-12(fp)
  823cd8:	e1fffe15 	stw	r7,-8(fp)
  823cdc:	e0bffb17 	ldw	r2,-20(fp)
  823ce0:	10805417 	ldw	r2,336(r2)
  823ce4:	10bfa004 	addi	r2,r2,-384
  823ce8:	e0bf9215 	stw	r2,-440(fp)
  823cec:	e0bffd17 	ldw	r2,-12(fp)
  823cf0:	e0bf8e15 	stw	r2,-456(fp)
  823cf4:	e0bffc17 	ldw	r2,-16(fp)
  823cf8:	10801517 	ldw	r2,84(r2)
  823cfc:	e0bf8f15 	stw	r2,-452(fp)
  823d00:	e0bfa304 	addi	r2,fp,-372
  823d04:	e0bf9015 	stw	r2,-448(fp)
  823d08:	e03f9115 	stw	zero,-444(fp)
  823d0c:	00018706 	br	82432c <jpeg_idct_11x11+0x674>
  823d10:	e0bf8e17 	ldw	r2,-456(fp)
  823d14:	1080000b 	ldhu	r2,0(r2)
  823d18:	10ffffcc 	andi	r3,r2,65535
  823d1c:	18e0001c 	xori	r3,r3,32768
  823d20:	18e00004 	addi	r3,r3,-32768
  823d24:	e0bf8f17 	ldw	r2,-452(fp)
  823d28:	10800017 	ldw	r2,0(r2)
  823d2c:	100b883a 	mov	r5,r2
  823d30:	1809883a 	mov	r4,r3
  823d34:	08305040 	call	830504 <__mulsi3>
  823d38:	e0bf9315 	stw	r2,-436(fp)
  823d3c:	e0bf9317 	ldw	r2,-436(fp)
  823d40:	1004937a 	slli	r2,r2,13
  823d44:	e0bf9315 	stw	r2,-436(fp)
  823d48:	e0bf9317 	ldw	r2,-436(fp)
  823d4c:	10810004 	addi	r2,r2,1024
  823d50:	e0bf9315 	stw	r2,-436(fp)
  823d54:	e0bf8e17 	ldw	r2,-456(fp)
  823d58:	10800804 	addi	r2,r2,32
  823d5c:	1080000b 	ldhu	r2,0(r2)
  823d60:	10ffffcc 	andi	r3,r2,65535
  823d64:	18e0001c 	xori	r3,r3,32768
  823d68:	18e00004 	addi	r3,r3,-32768
  823d6c:	e0bf8f17 	ldw	r2,-452(fp)
  823d70:	10801004 	addi	r2,r2,64
  823d74:	10800017 	ldw	r2,0(r2)
  823d78:	100b883a 	mov	r5,r2
  823d7c:	1809883a 	mov	r4,r3
  823d80:	08305040 	call	830504 <__mulsi3>
  823d84:	e0bf9415 	stw	r2,-432(fp)
  823d88:	e0bf8e17 	ldw	r2,-456(fp)
  823d8c:	10801004 	addi	r2,r2,64
  823d90:	1080000b 	ldhu	r2,0(r2)
  823d94:	10ffffcc 	andi	r3,r2,65535
  823d98:	18e0001c 	xori	r3,r3,32768
  823d9c:	18e00004 	addi	r3,r3,-32768
  823da0:	e0bf8f17 	ldw	r2,-452(fp)
  823da4:	10802004 	addi	r2,r2,128
  823da8:	10800017 	ldw	r2,0(r2)
  823dac:	100b883a 	mov	r5,r2
  823db0:	1809883a 	mov	r4,r3
  823db4:	08305040 	call	830504 <__mulsi3>
  823db8:	e0bf9515 	stw	r2,-428(fp)
  823dbc:	e0bf8e17 	ldw	r2,-456(fp)
  823dc0:	10801804 	addi	r2,r2,96
  823dc4:	1080000b 	ldhu	r2,0(r2)
  823dc8:	10ffffcc 	andi	r3,r2,65535
  823dcc:	18e0001c 	xori	r3,r3,32768
  823dd0:	18e00004 	addi	r3,r3,-32768
  823dd4:	e0bf8f17 	ldw	r2,-452(fp)
  823dd8:	10803004 	addi	r2,r2,192
  823ddc:	10800017 	ldw	r2,0(r2)
  823de0:	100b883a 	mov	r5,r2
  823de4:	1809883a 	mov	r4,r3
  823de8:	08305040 	call	830504 <__mulsi3>
  823dec:	e0bf9615 	stw	r2,-424(fp)
  823df0:	e0ff9517 	ldw	r3,-428(fp)
  823df4:	e0bf9617 	ldw	r2,-424(fp)
  823df8:	1885c83a 	sub	r2,r3,r2
  823dfc:	01545f84 	movi	r5,20862
  823e00:	1009883a 	mov	r4,r2
  823e04:	08305040 	call	830504 <__mulsi3>
  823e08:	e0bf9715 	stw	r2,-420(fp)
  823e0c:	e0ff9517 	ldw	r3,-428(fp)
  823e10:	e0bf9417 	ldw	r2,-432(fp)
  823e14:	1885c83a 	sub	r2,r3,r2
  823e18:	01437244 	movi	r5,3529
  823e1c:	1009883a 	mov	r4,r2
  823e20:	08305040 	call	830504 <__mulsi3>
  823e24:	e0bf9815 	stw	r2,-416(fp)
  823e28:	e0ff9417 	ldw	r3,-432(fp)
  823e2c:	e0bf9617 	ldw	r2,-424(fp)
  823e30:	1885883a 	add	r2,r3,r2
  823e34:	e0bf9915 	stw	r2,-412(fp)
  823e38:	0176c144 	movi	r5,-9467
  823e3c:	e13f9917 	ldw	r4,-412(fp)
  823e40:	08305040 	call	830504 <__mulsi3>
  823e44:	e0bf9a15 	stw	r2,-408(fp)
  823e48:	e0ff9917 	ldw	r3,-412(fp)
  823e4c:	e0bf9517 	ldw	r2,-428(fp)
  823e50:	1885c83a 	sub	r2,r3,r2
  823e54:	e0bf9915 	stw	r2,-412(fp)
  823e58:	014adb04 	movi	r5,11116
  823e5c:	e13f9917 	ldw	r4,-412(fp)
  823e60:	08305040 	call	830504 <__mulsi3>
  823e64:	1007883a 	mov	r3,r2
  823e68:	e0bf9317 	ldw	r2,-436(fp)
  823e6c:	1885883a 	add	r2,r3,r2
  823e70:	e0bf9b15 	stw	r2,-404(fp)
  823e74:	e0ff9717 	ldw	r3,-420(fp)
  823e78:	e0bf9817 	ldw	r2,-416(fp)
  823e7c:	1887883a 	add	r3,r3,r2
  823e80:	e0bf9b17 	ldw	r2,-404(fp)
  823e84:	18a1883a 	add	r16,r3,r2
  823e88:	01716d04 	movi	r5,-14924
  823e8c:	e13f9517 	ldw	r4,-428(fp)
  823e90:	08305040 	call	830504 <__mulsi3>
  823e94:	8085883a 	add	r2,r16,r2
  823e98:	e0bf9c15 	stw	r2,-400(fp)
  823e9c:	0150ed44 	movi	r5,17333
  823ea0:	e13f9617 	ldw	r4,-424(fp)
  823ea4:	08305040 	call	830504 <__mulsi3>
  823ea8:	1007883a 	mov	r3,r2
  823eac:	e0bf9b17 	ldw	r2,-404(fp)
  823eb0:	1885883a 	add	r2,r3,r2
  823eb4:	e0ff9717 	ldw	r3,-420(fp)
  823eb8:	1885883a 	add	r2,r3,r2
  823ebc:	e0bf9715 	stw	r2,-420(fp)
  823ec0:	0173e444 	movi	r5,-12399
  823ec4:	e13f9417 	ldw	r4,-432(fp)
  823ec8:	08305040 	call	830504 <__mulsi3>
  823ecc:	1007883a 	mov	r3,r2
  823ed0:	e0bf9b17 	ldw	r2,-404(fp)
  823ed4:	1885883a 	add	r2,r3,r2
  823ed8:	e0ff9817 	ldw	r3,-416(fp)
  823edc:	1885883a 	add	r2,r3,r2
  823ee0:	e0bf9815 	stw	r2,-416(fp)
  823ee4:	e0ff9a17 	ldw	r3,-408(fp)
  823ee8:	e0bf9b17 	ldw	r2,-404(fp)
  823eec:	1885883a 	add	r2,r3,r2
  823ef0:	e0bf9a15 	stw	r2,-408(fp)
  823ef4:	0179b0c4 	movi	r5,-6461
  823ef8:	e13f9617 	ldw	r4,-424(fp)
  823efc:	08305040 	call	830504 <__mulsi3>
  823f00:	1007883a 	mov	r3,r2
  823f04:	e0bf9a17 	ldw	r2,-408(fp)
  823f08:	1885883a 	add	r2,r3,r2
  823f0c:	e0bf9d15 	stw	r2,-396(fp)
  823f10:	014f8e44 	movi	r5,15929
  823f14:	e13f9517 	ldw	r4,-428(fp)
  823f18:	08305040 	call	830504 <__mulsi3>
  823f1c:	1021883a 	mov	r16,r2
  823f20:	0174df44 	movi	r5,-11395
  823f24:	e13f9417 	ldw	r4,-432(fp)
  823f28:	08305040 	call	830504 <__mulsi3>
  823f2c:	8085883a 	add	r2,r16,r2
  823f30:	e0ff9a17 	ldw	r3,-408(fp)
  823f34:	1885883a 	add	r2,r3,r2
  823f38:	e0bf9a15 	stw	r2,-408(fp)
  823f3c:	0174afc4 	movi	r5,-11585
  823f40:	e13f9917 	ldw	r4,-412(fp)
  823f44:	08305040 	call	830504 <__mulsi3>
  823f48:	1007883a 	mov	r3,r2
  823f4c:	e0bf9317 	ldw	r2,-436(fp)
  823f50:	1885883a 	add	r2,r3,r2
  823f54:	e0bf9b15 	stw	r2,-404(fp)
  823f58:	e0bf8e17 	ldw	r2,-456(fp)
  823f5c:	10800404 	addi	r2,r2,16
  823f60:	1080000b 	ldhu	r2,0(r2)
  823f64:	10ffffcc 	andi	r3,r2,65535
  823f68:	18e0001c 	xori	r3,r3,32768
  823f6c:	18e00004 	addi	r3,r3,-32768
  823f70:	e0bf8f17 	ldw	r2,-452(fp)
  823f74:	10800804 	addi	r2,r2,32
  823f78:	10800017 	ldw	r2,0(r2)
  823f7c:	100b883a 	mov	r5,r2
  823f80:	1809883a 	mov	r4,r3
  823f84:	08305040 	call	830504 <__mulsi3>
  823f88:	e0bf9415 	stw	r2,-432(fp)
  823f8c:	e0bf8e17 	ldw	r2,-456(fp)
  823f90:	10800c04 	addi	r2,r2,48
  823f94:	1080000b 	ldhu	r2,0(r2)
  823f98:	10ffffcc 	andi	r3,r2,65535
  823f9c:	18e0001c 	xori	r3,r3,32768
  823fa0:	18e00004 	addi	r3,r3,-32768
  823fa4:	e0bf8f17 	ldw	r2,-452(fp)
  823fa8:	10801804 	addi	r2,r2,96
  823fac:	10800017 	ldw	r2,0(r2)
  823fb0:	100b883a 	mov	r5,r2
  823fb4:	1809883a 	mov	r4,r3
  823fb8:	08305040 	call	830504 <__mulsi3>
  823fbc:	e0bf9515 	stw	r2,-428(fp)
  823fc0:	e0bf8e17 	ldw	r2,-456(fp)
  823fc4:	10801404 	addi	r2,r2,80
  823fc8:	1080000b 	ldhu	r2,0(r2)
  823fcc:	10ffffcc 	andi	r3,r2,65535
  823fd0:	18e0001c 	xori	r3,r3,32768
  823fd4:	18e00004 	addi	r3,r3,-32768
  823fd8:	e0bf8f17 	ldw	r2,-452(fp)
  823fdc:	10802804 	addi	r2,r2,160
  823fe0:	10800017 	ldw	r2,0(r2)
  823fe4:	100b883a 	mov	r5,r2
  823fe8:	1809883a 	mov	r4,r3
  823fec:	08305040 	call	830504 <__mulsi3>
  823ff0:	e0bf9615 	stw	r2,-424(fp)
  823ff4:	e0bf8e17 	ldw	r2,-456(fp)
  823ff8:	10801c04 	addi	r2,r2,112
  823ffc:	1080000b 	ldhu	r2,0(r2)
  824000:	10ffffcc 	andi	r3,r2,65535
  824004:	18e0001c 	xori	r3,r3,32768
  824008:	18e00004 	addi	r3,r3,-32768
  82400c:	e0bf8f17 	ldw	r2,-452(fp)
  824010:	10803804 	addi	r2,r2,224
  824014:	10800017 	ldw	r2,0(r2)
  824018:	100b883a 	mov	r5,r2
  82401c:	1809883a 	mov	r4,r3
  824020:	08305040 	call	830504 <__mulsi3>
  824024:	e0bf9915 	stw	r2,-412(fp)
  824028:	e0ff9417 	ldw	r3,-432(fp)
  82402c:	e0bf9517 	ldw	r2,-428(fp)
  824030:	1885883a 	add	r2,r3,r2
  824034:	e0bf9e15 	stw	r2,-392(fp)
  824038:	e0ff9e17 	ldw	r3,-392(fp)
  82403c:	e0bf9617 	ldw	r2,-424(fp)
  824040:	1887883a 	add	r3,r3,r2
  824044:	e0bf9917 	ldw	r2,-412(fp)
  824048:	1885883a 	add	r2,r3,r2
  82404c:	01433004 	movi	r5,3264
  824050:	1009883a 	mov	r4,r2
  824054:	08305040 	call	830504 <__mulsi3>
  824058:	e0bf9f15 	stw	r2,-388(fp)
  82405c:	01471a84 	movi	r5,7274
  824060:	e13f9e17 	ldw	r4,-392(fp)
  824064:	08305040 	call	830504 <__mulsi3>
  824068:	e0bf9e15 	stw	r2,-392(fp)
  82406c:	e0ff9417 	ldw	r3,-432(fp)
  824070:	e0bf9617 	ldw	r2,-424(fp)
  824074:	1885883a 	add	r2,r3,r2
  824078:	01455d04 	movi	r5,5492
  82407c:	1009883a 	mov	r4,r2
  824080:	08305040 	call	830504 <__mulsi3>
  824084:	e0bfa015 	stw	r2,-384(fp)
  824088:	e0ff9417 	ldw	r3,-432(fp)
  82408c:	e0bf9917 	ldw	r2,-412(fp)
  824090:	1885883a 	add	r2,r3,r2
  824094:	0142ee04 	movi	r5,3000
  824098:	1009883a 	mov	r4,r2
  82409c:	08305040 	call	830504 <__mulsi3>
  8240a0:	1007883a 	mov	r3,r2
  8240a4:	e0bf9f17 	ldw	r2,-388(fp)
  8240a8:	1885883a 	add	r2,r3,r2
  8240ac:	e0bfa115 	stw	r2,-380(fp)
  8240b0:	e0ff9e17 	ldw	r3,-392(fp)
  8240b4:	e0bfa017 	ldw	r2,-384(fp)
  8240b8:	1887883a 	add	r3,r3,r2
  8240bc:	e0bfa117 	ldw	r2,-380(fp)
  8240c0:	18a1883a 	add	r16,r3,r2
  8240c4:	01789d84 	movi	r5,-7562
  8240c8:	e13f9417 	ldw	r4,-432(fp)
  8240cc:	08305040 	call	830504 <__mulsi3>
  8240d0:	8085883a 	add	r2,r16,r2
  8240d4:	e0bf9315 	stw	r2,-436(fp)
  8240d8:	e0ff9517 	ldw	r3,-428(fp)
  8240dc:	e0bf9617 	ldw	r2,-424(fp)
  8240e0:	1885883a 	add	r2,r3,r2
  8240e4:	0176b244 	movi	r5,-9527
  8240e8:	1009883a 	mov	r4,r2
  8240ec:	08305040 	call	830504 <__mulsi3>
  8240f0:	1007883a 	mov	r3,r2
  8240f4:	e0bf9f17 	ldw	r2,-388(fp)
  8240f8:	1885883a 	add	r2,r3,r2
  8240fc:	e0bf9415 	stw	r2,-432(fp)
  824100:	01509604 	movi	r5,16984
  824104:	e13f9517 	ldw	r4,-428(fp)
  824108:	08305040 	call	830504 <__mulsi3>
  82410c:	1007883a 	mov	r3,r2
  824110:	e0bf9417 	ldw	r2,-432(fp)
  824114:	1885883a 	add	r2,r3,r2
  824118:	e0ff9e17 	ldw	r3,-392(fp)
  82411c:	1885883a 	add	r2,r3,r2
  824120:	e0bf9e15 	stw	r2,-392(fp)
  824124:	01767684 	movi	r5,-9766
  824128:	e13f9617 	ldw	r4,-424(fp)
  82412c:	08305040 	call	830504 <__mulsi3>
  824130:	1007883a 	mov	r3,r2
  824134:	e0bf9417 	ldw	r2,-432(fp)
  824138:	1885883a 	add	r2,r3,r2
  82413c:	e0ffa017 	ldw	r3,-384(fp)
  824140:	1885883a 	add	r2,r3,r2
  824144:	e0bfa015 	stw	r2,-384(fp)
  824148:	e0ff9517 	ldw	r3,-428(fp)
  82414c:	e0bf9917 	ldw	r2,-412(fp)
  824150:	1885883a 	add	r2,r3,r2
  824154:	01719d44 	movi	r5,-14731
  824158:	1009883a 	mov	r4,r2
  82415c:	08305040 	call	830504 <__mulsi3>
  824160:	e0bf9415 	stw	r2,-432(fp)
  824164:	e0ff9e17 	ldw	r3,-392(fp)
  824168:	e0bf9417 	ldw	r2,-432(fp)
  82416c:	1885883a 	add	r2,r3,r2
  824170:	e0bf9e15 	stw	r2,-392(fp)
  824174:	0150d1c4 	movi	r5,17223
  824178:	e13f9917 	ldw	r4,-412(fp)
  82417c:	08305040 	call	830504 <__mulsi3>
  824180:	1007883a 	mov	r3,r2
  824184:	e0bf9417 	ldw	r2,-432(fp)
  824188:	1885883a 	add	r2,r3,r2
  82418c:	e0ffa117 	ldw	r3,-380(fp)
  824190:	1885883a 	add	r2,r3,r2
  824194:	e0bfa115 	stw	r2,-380(fp)
  824198:	01744344 	movi	r5,-12019
  82419c:	e13f9517 	ldw	r4,-428(fp)
  8241a0:	08305040 	call	830504 <__mulsi3>
  8241a4:	1021883a 	mov	r16,r2
  8241a8:	014802c4 	movi	r5,8203
  8241ac:	e13f9617 	ldw	r4,-424(fp)
  8241b0:	08305040 	call	830504 <__mulsi3>
  8241b4:	80a1883a 	add	r16,r16,r2
  8241b8:	01728584 	movi	r5,-13802
  8241bc:	e13f9917 	ldw	r4,-412(fp)
  8241c0:	08305040 	call	830504 <__mulsi3>
  8241c4:	8085883a 	add	r2,r16,r2
  8241c8:	e0ff9f17 	ldw	r3,-388(fp)
  8241cc:	1885883a 	add	r2,r3,r2
  8241d0:	e0bf9f15 	stw	r2,-388(fp)
  8241d4:	e0ff9717 	ldw	r3,-420(fp)
  8241d8:	e0bf9317 	ldw	r2,-436(fp)
  8241dc:	1885883a 	add	r2,r3,r2
  8241e0:	1007d2fa 	srai	r3,r2,11
  8241e4:	e0bf9017 	ldw	r2,-448(fp)
  8241e8:	10c00015 	stw	r3,0(r2)
  8241ec:	e0bf9017 	ldw	r2,-448(fp)
  8241f0:	10805004 	addi	r2,r2,320
  8241f4:	e13f9717 	ldw	r4,-420(fp)
  8241f8:	e0ff9317 	ldw	r3,-436(fp)
  8241fc:	20c7c83a 	sub	r3,r4,r3
  824200:	1807d2fa 	srai	r3,r3,11
  824204:	10c00015 	stw	r3,0(r2)
  824208:	e0bf9017 	ldw	r2,-448(fp)
  82420c:	10800804 	addi	r2,r2,32
  824210:	e13f9c17 	ldw	r4,-400(fp)
  824214:	e0ff9e17 	ldw	r3,-392(fp)
  824218:	20c7883a 	add	r3,r4,r3
  82421c:	1807d2fa 	srai	r3,r3,11
  824220:	10c00015 	stw	r3,0(r2)
  824224:	e0bf9017 	ldw	r2,-448(fp)
  824228:	10804804 	addi	r2,r2,288
  82422c:	e13f9c17 	ldw	r4,-400(fp)
  824230:	e0ff9e17 	ldw	r3,-392(fp)
  824234:	20c7c83a 	sub	r3,r4,r3
  824238:	1807d2fa 	srai	r3,r3,11
  82423c:	10c00015 	stw	r3,0(r2)
  824240:	e0bf9017 	ldw	r2,-448(fp)
  824244:	10801004 	addi	r2,r2,64
  824248:	e13f9d17 	ldw	r4,-396(fp)
  82424c:	e0ffa017 	ldw	r3,-384(fp)
  824250:	20c7883a 	add	r3,r4,r3
  824254:	1807d2fa 	srai	r3,r3,11
  824258:	10c00015 	stw	r3,0(r2)
  82425c:	e0bf9017 	ldw	r2,-448(fp)
  824260:	10804004 	addi	r2,r2,256
  824264:	e13f9d17 	ldw	r4,-396(fp)
  824268:	e0ffa017 	ldw	r3,-384(fp)
  82426c:	20c7c83a 	sub	r3,r4,r3
  824270:	1807d2fa 	srai	r3,r3,11
  824274:	10c00015 	stw	r3,0(r2)
  824278:	e0bf9017 	ldw	r2,-448(fp)
  82427c:	10801804 	addi	r2,r2,96
  824280:	e13f9817 	ldw	r4,-416(fp)
  824284:	e0ffa117 	ldw	r3,-380(fp)
  824288:	20c7883a 	add	r3,r4,r3
  82428c:	1807d2fa 	srai	r3,r3,11
  824290:	10c00015 	stw	r3,0(r2)
  824294:	e0bf9017 	ldw	r2,-448(fp)
  824298:	10803804 	addi	r2,r2,224
  82429c:	e13f9817 	ldw	r4,-416(fp)
  8242a0:	e0ffa117 	ldw	r3,-380(fp)
  8242a4:	20c7c83a 	sub	r3,r4,r3
  8242a8:	1807d2fa 	srai	r3,r3,11
  8242ac:	10c00015 	stw	r3,0(r2)
  8242b0:	e0bf9017 	ldw	r2,-448(fp)
  8242b4:	10802004 	addi	r2,r2,128
  8242b8:	e13f9a17 	ldw	r4,-408(fp)
  8242bc:	e0ff9f17 	ldw	r3,-388(fp)
  8242c0:	20c7883a 	add	r3,r4,r3
  8242c4:	1807d2fa 	srai	r3,r3,11
  8242c8:	10c00015 	stw	r3,0(r2)
  8242cc:	e0bf9017 	ldw	r2,-448(fp)
  8242d0:	10803004 	addi	r2,r2,192
  8242d4:	e13f9a17 	ldw	r4,-408(fp)
  8242d8:	e0ff9f17 	ldw	r3,-388(fp)
  8242dc:	20c7c83a 	sub	r3,r4,r3
  8242e0:	1807d2fa 	srai	r3,r3,11
  8242e4:	10c00015 	stw	r3,0(r2)
  8242e8:	e0bf9017 	ldw	r2,-448(fp)
  8242ec:	10802804 	addi	r2,r2,160
  8242f0:	e0ff9b17 	ldw	r3,-404(fp)
  8242f4:	1807d2fa 	srai	r3,r3,11
  8242f8:	10c00015 	stw	r3,0(r2)
  8242fc:	e0bf9117 	ldw	r2,-444(fp)
  824300:	10800044 	addi	r2,r2,1
  824304:	e0bf9115 	stw	r2,-444(fp)
  824308:	e0bf8e17 	ldw	r2,-456(fp)
  82430c:	10800084 	addi	r2,r2,2
  824310:	e0bf8e15 	stw	r2,-456(fp)
  824314:	e0bf8f17 	ldw	r2,-452(fp)
  824318:	10800104 	addi	r2,r2,4
  82431c:	e0bf8f15 	stw	r2,-452(fp)
  824320:	e0bf9017 	ldw	r2,-448(fp)
  824324:	10800104 	addi	r2,r2,4
  824328:	e0bf9015 	stw	r2,-448(fp)
  82432c:	e0bf9117 	ldw	r2,-444(fp)
  824330:	10800210 	cmplti	r2,r2,8
  824334:	103e761e 	bne	r2,zero,823d10 <__alt_mem_epcs_flash_controller_0+0xff81ad10>
  824338:	e0bfa304 	addi	r2,fp,-372
  82433c:	e0bf9015 	stw	r2,-448(fp)
  824340:	e03f9115 	stw	zero,-444(fp)
  824344:	00016e06 	br	824900 <jpeg_idct_11x11+0xc48>
  824348:	e0bf9117 	ldw	r2,-444(fp)
  82434c:	1085883a 	add	r2,r2,r2
  824350:	1085883a 	add	r2,r2,r2
  824354:	1007883a 	mov	r3,r2
  824358:	e0bffe17 	ldw	r2,-8(fp)
  82435c:	10c5883a 	add	r2,r2,r3
  824360:	10c00017 	ldw	r3,0(r2)
  824364:	e0800217 	ldw	r2,8(fp)
  824368:	1885883a 	add	r2,r3,r2
  82436c:	e0bfa215 	stw	r2,-376(fp)
  824370:	e0bf9017 	ldw	r2,-448(fp)
  824374:	10800017 	ldw	r2,0(r2)
  824378:	10900404 	addi	r2,r2,16400
  82437c:	e0bf9315 	stw	r2,-436(fp)
  824380:	e0bf9317 	ldw	r2,-436(fp)
  824384:	1004937a 	slli	r2,r2,13
  824388:	e0bf9315 	stw	r2,-436(fp)
  82438c:	e0bf9017 	ldw	r2,-448(fp)
  824390:	10800204 	addi	r2,r2,8
  824394:	10800017 	ldw	r2,0(r2)
  824398:	e0bf9415 	stw	r2,-432(fp)
  82439c:	e0bf9017 	ldw	r2,-448(fp)
  8243a0:	10800404 	addi	r2,r2,16
  8243a4:	10800017 	ldw	r2,0(r2)
  8243a8:	e0bf9515 	stw	r2,-428(fp)
  8243ac:	e0bf9017 	ldw	r2,-448(fp)
  8243b0:	10800604 	addi	r2,r2,24
  8243b4:	10800017 	ldw	r2,0(r2)
  8243b8:	e0bf9615 	stw	r2,-424(fp)
  8243bc:	e0ff9517 	ldw	r3,-428(fp)
  8243c0:	e0bf9617 	ldw	r2,-424(fp)
  8243c4:	1885c83a 	sub	r2,r3,r2
  8243c8:	01545f84 	movi	r5,20862
  8243cc:	1009883a 	mov	r4,r2
  8243d0:	08305040 	call	830504 <__mulsi3>
  8243d4:	e0bf9715 	stw	r2,-420(fp)
  8243d8:	e0ff9517 	ldw	r3,-428(fp)
  8243dc:	e0bf9417 	ldw	r2,-432(fp)
  8243e0:	1885c83a 	sub	r2,r3,r2
  8243e4:	01437244 	movi	r5,3529
  8243e8:	1009883a 	mov	r4,r2
  8243ec:	08305040 	call	830504 <__mulsi3>
  8243f0:	e0bf9815 	stw	r2,-416(fp)
  8243f4:	e0ff9417 	ldw	r3,-432(fp)
  8243f8:	e0bf9617 	ldw	r2,-424(fp)
  8243fc:	1885883a 	add	r2,r3,r2
  824400:	e0bf9915 	stw	r2,-412(fp)
  824404:	0176c144 	movi	r5,-9467
  824408:	e13f9917 	ldw	r4,-412(fp)
  82440c:	08305040 	call	830504 <__mulsi3>
  824410:	e0bf9a15 	stw	r2,-408(fp)
  824414:	e0ff9917 	ldw	r3,-412(fp)
  824418:	e0bf9517 	ldw	r2,-428(fp)
  82441c:	1885c83a 	sub	r2,r3,r2
  824420:	e0bf9915 	stw	r2,-412(fp)
  824424:	014adb04 	movi	r5,11116
  824428:	e13f9917 	ldw	r4,-412(fp)
  82442c:	08305040 	call	830504 <__mulsi3>
  824430:	1007883a 	mov	r3,r2
  824434:	e0bf9317 	ldw	r2,-436(fp)
  824438:	1885883a 	add	r2,r3,r2
  82443c:	e0bf9b15 	stw	r2,-404(fp)
  824440:	e0ff9717 	ldw	r3,-420(fp)
  824444:	e0bf9817 	ldw	r2,-416(fp)
  824448:	1887883a 	add	r3,r3,r2
  82444c:	e0bf9b17 	ldw	r2,-404(fp)
  824450:	18a1883a 	add	r16,r3,r2
  824454:	01716d04 	movi	r5,-14924
  824458:	e13f9517 	ldw	r4,-428(fp)
  82445c:	08305040 	call	830504 <__mulsi3>
  824460:	8085883a 	add	r2,r16,r2
  824464:	e0bf9c15 	stw	r2,-400(fp)
  824468:	0150ed44 	movi	r5,17333
  82446c:	e13f9617 	ldw	r4,-424(fp)
  824470:	08305040 	call	830504 <__mulsi3>
  824474:	1007883a 	mov	r3,r2
  824478:	e0bf9b17 	ldw	r2,-404(fp)
  82447c:	1885883a 	add	r2,r3,r2
  824480:	e0ff9717 	ldw	r3,-420(fp)
  824484:	1885883a 	add	r2,r3,r2
  824488:	e0bf9715 	stw	r2,-420(fp)
  82448c:	0173e444 	movi	r5,-12399
  824490:	e13f9417 	ldw	r4,-432(fp)
  824494:	08305040 	call	830504 <__mulsi3>
  824498:	1007883a 	mov	r3,r2
  82449c:	e0bf9b17 	ldw	r2,-404(fp)
  8244a0:	1885883a 	add	r2,r3,r2
  8244a4:	e0ff9817 	ldw	r3,-416(fp)
  8244a8:	1885883a 	add	r2,r3,r2
  8244ac:	e0bf9815 	stw	r2,-416(fp)
  8244b0:	e0ff9a17 	ldw	r3,-408(fp)
  8244b4:	e0bf9b17 	ldw	r2,-404(fp)
  8244b8:	1885883a 	add	r2,r3,r2
  8244bc:	e0bf9a15 	stw	r2,-408(fp)
  8244c0:	0179b0c4 	movi	r5,-6461
  8244c4:	e13f9617 	ldw	r4,-424(fp)
  8244c8:	08305040 	call	830504 <__mulsi3>
  8244cc:	1007883a 	mov	r3,r2
  8244d0:	e0bf9a17 	ldw	r2,-408(fp)
  8244d4:	1885883a 	add	r2,r3,r2
  8244d8:	e0bf9d15 	stw	r2,-396(fp)
  8244dc:	014f8e44 	movi	r5,15929
  8244e0:	e13f9517 	ldw	r4,-428(fp)
  8244e4:	08305040 	call	830504 <__mulsi3>
  8244e8:	1021883a 	mov	r16,r2
  8244ec:	0174df44 	movi	r5,-11395
  8244f0:	e13f9417 	ldw	r4,-432(fp)
  8244f4:	08305040 	call	830504 <__mulsi3>
  8244f8:	8085883a 	add	r2,r16,r2
  8244fc:	e0ff9a17 	ldw	r3,-408(fp)
  824500:	1885883a 	add	r2,r3,r2
  824504:	e0bf9a15 	stw	r2,-408(fp)
  824508:	0174afc4 	movi	r5,-11585
  82450c:	e13f9917 	ldw	r4,-412(fp)
  824510:	08305040 	call	830504 <__mulsi3>
  824514:	1007883a 	mov	r3,r2
  824518:	e0bf9317 	ldw	r2,-436(fp)
  82451c:	1885883a 	add	r2,r3,r2
  824520:	e0bf9b15 	stw	r2,-404(fp)
  824524:	e0bf9017 	ldw	r2,-448(fp)
  824528:	10800104 	addi	r2,r2,4
  82452c:	10800017 	ldw	r2,0(r2)
  824530:	e0bf9415 	stw	r2,-432(fp)
  824534:	e0bf9017 	ldw	r2,-448(fp)
  824538:	10800304 	addi	r2,r2,12
  82453c:	10800017 	ldw	r2,0(r2)
  824540:	e0bf9515 	stw	r2,-428(fp)
  824544:	e0bf9017 	ldw	r2,-448(fp)
  824548:	10800504 	addi	r2,r2,20
  82454c:	10800017 	ldw	r2,0(r2)
  824550:	e0bf9615 	stw	r2,-424(fp)
  824554:	e0bf9017 	ldw	r2,-448(fp)
  824558:	10800704 	addi	r2,r2,28
  82455c:	10800017 	ldw	r2,0(r2)
  824560:	e0bf9915 	stw	r2,-412(fp)
  824564:	e0ff9417 	ldw	r3,-432(fp)
  824568:	e0bf9517 	ldw	r2,-428(fp)
  82456c:	1885883a 	add	r2,r3,r2
  824570:	e0bf9e15 	stw	r2,-392(fp)
  824574:	e0ff9e17 	ldw	r3,-392(fp)
  824578:	e0bf9617 	ldw	r2,-424(fp)
  82457c:	1887883a 	add	r3,r3,r2
  824580:	e0bf9917 	ldw	r2,-412(fp)
  824584:	1885883a 	add	r2,r3,r2
  824588:	01433004 	movi	r5,3264
  82458c:	1009883a 	mov	r4,r2
  824590:	08305040 	call	830504 <__mulsi3>
  824594:	e0bf9f15 	stw	r2,-388(fp)
  824598:	01471a84 	movi	r5,7274
  82459c:	e13f9e17 	ldw	r4,-392(fp)
  8245a0:	08305040 	call	830504 <__mulsi3>
  8245a4:	e0bf9e15 	stw	r2,-392(fp)
  8245a8:	e0ff9417 	ldw	r3,-432(fp)
  8245ac:	e0bf9617 	ldw	r2,-424(fp)
  8245b0:	1885883a 	add	r2,r3,r2
  8245b4:	01455d04 	movi	r5,5492
  8245b8:	1009883a 	mov	r4,r2
  8245bc:	08305040 	call	830504 <__mulsi3>
  8245c0:	e0bfa015 	stw	r2,-384(fp)
  8245c4:	e0ff9417 	ldw	r3,-432(fp)
  8245c8:	e0bf9917 	ldw	r2,-412(fp)
  8245cc:	1885883a 	add	r2,r3,r2
  8245d0:	0142ee04 	movi	r5,3000
  8245d4:	1009883a 	mov	r4,r2
  8245d8:	08305040 	call	830504 <__mulsi3>
  8245dc:	1007883a 	mov	r3,r2
  8245e0:	e0bf9f17 	ldw	r2,-388(fp)
  8245e4:	1885883a 	add	r2,r3,r2
  8245e8:	e0bfa115 	stw	r2,-380(fp)
  8245ec:	e0ff9e17 	ldw	r3,-392(fp)
  8245f0:	e0bfa017 	ldw	r2,-384(fp)
  8245f4:	1887883a 	add	r3,r3,r2
  8245f8:	e0bfa117 	ldw	r2,-380(fp)
  8245fc:	18a1883a 	add	r16,r3,r2
  824600:	01789d84 	movi	r5,-7562
  824604:	e13f9417 	ldw	r4,-432(fp)
  824608:	08305040 	call	830504 <__mulsi3>
  82460c:	8085883a 	add	r2,r16,r2
  824610:	e0bf9315 	stw	r2,-436(fp)
  824614:	e0ff9517 	ldw	r3,-428(fp)
  824618:	e0bf9617 	ldw	r2,-424(fp)
  82461c:	1885883a 	add	r2,r3,r2
  824620:	0176b244 	movi	r5,-9527
  824624:	1009883a 	mov	r4,r2
  824628:	08305040 	call	830504 <__mulsi3>
  82462c:	1007883a 	mov	r3,r2
  824630:	e0bf9f17 	ldw	r2,-388(fp)
  824634:	1885883a 	add	r2,r3,r2
  824638:	e0bf9415 	stw	r2,-432(fp)
  82463c:	01509604 	movi	r5,16984
  824640:	e13f9517 	ldw	r4,-428(fp)
  824644:	08305040 	call	830504 <__mulsi3>
  824648:	1007883a 	mov	r3,r2
  82464c:	e0bf9417 	ldw	r2,-432(fp)
  824650:	1885883a 	add	r2,r3,r2
  824654:	e0ff9e17 	ldw	r3,-392(fp)
  824658:	1885883a 	add	r2,r3,r2
  82465c:	e0bf9e15 	stw	r2,-392(fp)
  824660:	01767684 	movi	r5,-9766
  824664:	e13f9617 	ldw	r4,-424(fp)
  824668:	08305040 	call	830504 <__mulsi3>
  82466c:	1007883a 	mov	r3,r2
  824670:	e0bf9417 	ldw	r2,-432(fp)
  824674:	1885883a 	add	r2,r3,r2
  824678:	e0ffa017 	ldw	r3,-384(fp)
  82467c:	1885883a 	add	r2,r3,r2
  824680:	e0bfa015 	stw	r2,-384(fp)
  824684:	e0ff9517 	ldw	r3,-428(fp)
  824688:	e0bf9917 	ldw	r2,-412(fp)
  82468c:	1885883a 	add	r2,r3,r2
  824690:	01719d44 	movi	r5,-14731
  824694:	1009883a 	mov	r4,r2
  824698:	08305040 	call	830504 <__mulsi3>
  82469c:	e0bf9415 	stw	r2,-432(fp)
  8246a0:	e0ff9e17 	ldw	r3,-392(fp)
  8246a4:	e0bf9417 	ldw	r2,-432(fp)
  8246a8:	1885883a 	add	r2,r3,r2
  8246ac:	e0bf9e15 	stw	r2,-392(fp)
  8246b0:	0150d1c4 	movi	r5,17223
  8246b4:	e13f9917 	ldw	r4,-412(fp)
  8246b8:	08305040 	call	830504 <__mulsi3>
  8246bc:	1007883a 	mov	r3,r2
  8246c0:	e0bf9417 	ldw	r2,-432(fp)
  8246c4:	1885883a 	add	r2,r3,r2
  8246c8:	e0ffa117 	ldw	r3,-380(fp)
  8246cc:	1885883a 	add	r2,r3,r2
  8246d0:	e0bfa115 	stw	r2,-380(fp)
  8246d4:	01744344 	movi	r5,-12019
  8246d8:	e13f9517 	ldw	r4,-428(fp)
  8246dc:	08305040 	call	830504 <__mulsi3>
  8246e0:	1021883a 	mov	r16,r2
  8246e4:	014802c4 	movi	r5,8203
  8246e8:	e13f9617 	ldw	r4,-424(fp)
  8246ec:	08305040 	call	830504 <__mulsi3>
  8246f0:	80a1883a 	add	r16,r16,r2
  8246f4:	01728584 	movi	r5,-13802
  8246f8:	e13f9917 	ldw	r4,-412(fp)
  8246fc:	08305040 	call	830504 <__mulsi3>
  824700:	8085883a 	add	r2,r16,r2
  824704:	e0ff9f17 	ldw	r3,-388(fp)
  824708:	1885883a 	add	r2,r3,r2
  82470c:	e0bf9f15 	stw	r2,-388(fp)
  824710:	e0ff9717 	ldw	r3,-420(fp)
  824714:	e0bf9317 	ldw	r2,-436(fp)
  824718:	1885883a 	add	r2,r3,r2
  82471c:	1005d4ba 	srai	r2,r2,18
  824720:	1080ffcc 	andi	r2,r2,1023
  824724:	e0ff9217 	ldw	r3,-440(fp)
  824728:	1885883a 	add	r2,r3,r2
  82472c:	10c00003 	ldbu	r3,0(r2)
  824730:	e0bfa217 	ldw	r2,-376(fp)
  824734:	10c00005 	stb	r3,0(r2)
  824738:	e0bfa217 	ldw	r2,-376(fp)
  82473c:	10800284 	addi	r2,r2,10
  824740:	e13f9717 	ldw	r4,-420(fp)
  824744:	e0ff9317 	ldw	r3,-436(fp)
  824748:	20c7c83a 	sub	r3,r4,r3
  82474c:	1807d4ba 	srai	r3,r3,18
  824750:	18c0ffcc 	andi	r3,r3,1023
  824754:	e13f9217 	ldw	r4,-440(fp)
  824758:	20c7883a 	add	r3,r4,r3
  82475c:	18c00003 	ldbu	r3,0(r3)
  824760:	10c00005 	stb	r3,0(r2)
  824764:	e0bfa217 	ldw	r2,-376(fp)
  824768:	10800044 	addi	r2,r2,1
  82476c:	e13f9c17 	ldw	r4,-400(fp)
  824770:	e0ff9e17 	ldw	r3,-392(fp)
  824774:	20c7883a 	add	r3,r4,r3
  824778:	1807d4ba 	srai	r3,r3,18
  82477c:	18c0ffcc 	andi	r3,r3,1023
  824780:	e13f9217 	ldw	r4,-440(fp)
  824784:	20c7883a 	add	r3,r4,r3
  824788:	18c00003 	ldbu	r3,0(r3)
  82478c:	10c00005 	stb	r3,0(r2)
  824790:	e0bfa217 	ldw	r2,-376(fp)
  824794:	10800244 	addi	r2,r2,9
  824798:	e13f9c17 	ldw	r4,-400(fp)
  82479c:	e0ff9e17 	ldw	r3,-392(fp)
  8247a0:	20c7c83a 	sub	r3,r4,r3
  8247a4:	1807d4ba 	srai	r3,r3,18
  8247a8:	18c0ffcc 	andi	r3,r3,1023
  8247ac:	e13f9217 	ldw	r4,-440(fp)
  8247b0:	20c7883a 	add	r3,r4,r3
  8247b4:	18c00003 	ldbu	r3,0(r3)
  8247b8:	10c00005 	stb	r3,0(r2)
  8247bc:	e0bfa217 	ldw	r2,-376(fp)
  8247c0:	10800084 	addi	r2,r2,2
  8247c4:	e13f9d17 	ldw	r4,-396(fp)
  8247c8:	e0ffa017 	ldw	r3,-384(fp)
  8247cc:	20c7883a 	add	r3,r4,r3
  8247d0:	1807d4ba 	srai	r3,r3,18
  8247d4:	18c0ffcc 	andi	r3,r3,1023
  8247d8:	e13f9217 	ldw	r4,-440(fp)
  8247dc:	20c7883a 	add	r3,r4,r3
  8247e0:	18c00003 	ldbu	r3,0(r3)
  8247e4:	10c00005 	stb	r3,0(r2)
  8247e8:	e0bfa217 	ldw	r2,-376(fp)
  8247ec:	10800204 	addi	r2,r2,8
  8247f0:	e13f9d17 	ldw	r4,-396(fp)
  8247f4:	e0ffa017 	ldw	r3,-384(fp)
  8247f8:	20c7c83a 	sub	r3,r4,r3
  8247fc:	1807d4ba 	srai	r3,r3,18
  824800:	18c0ffcc 	andi	r3,r3,1023
  824804:	e13f9217 	ldw	r4,-440(fp)
  824808:	20c7883a 	add	r3,r4,r3
  82480c:	18c00003 	ldbu	r3,0(r3)
  824810:	10c00005 	stb	r3,0(r2)
  824814:	e0bfa217 	ldw	r2,-376(fp)
  824818:	108000c4 	addi	r2,r2,3
  82481c:	e13f9817 	ldw	r4,-416(fp)
  824820:	e0ffa117 	ldw	r3,-380(fp)
  824824:	20c7883a 	add	r3,r4,r3
  824828:	1807d4ba 	srai	r3,r3,18
  82482c:	18c0ffcc 	andi	r3,r3,1023
  824830:	e13f9217 	ldw	r4,-440(fp)
  824834:	20c7883a 	add	r3,r4,r3
  824838:	18c00003 	ldbu	r3,0(r3)
  82483c:	10c00005 	stb	r3,0(r2)
  824840:	e0bfa217 	ldw	r2,-376(fp)
  824844:	108001c4 	addi	r2,r2,7
  824848:	e13f9817 	ldw	r4,-416(fp)
  82484c:	e0ffa117 	ldw	r3,-380(fp)
  824850:	20c7c83a 	sub	r3,r4,r3
  824854:	1807d4ba 	srai	r3,r3,18
  824858:	18c0ffcc 	andi	r3,r3,1023
  82485c:	e13f9217 	ldw	r4,-440(fp)
  824860:	20c7883a 	add	r3,r4,r3
  824864:	18c00003 	ldbu	r3,0(r3)
  824868:	10c00005 	stb	r3,0(r2)
  82486c:	e0bfa217 	ldw	r2,-376(fp)
  824870:	10800104 	addi	r2,r2,4
  824874:	e13f9a17 	ldw	r4,-408(fp)
  824878:	e0ff9f17 	ldw	r3,-388(fp)
  82487c:	20c7883a 	add	r3,r4,r3
  824880:	1807d4ba 	srai	r3,r3,18
  824884:	18c0ffcc 	andi	r3,r3,1023
  824888:	e13f9217 	ldw	r4,-440(fp)
  82488c:	20c7883a 	add	r3,r4,r3
  824890:	18c00003 	ldbu	r3,0(r3)
  824894:	10c00005 	stb	r3,0(r2)
  824898:	e0bfa217 	ldw	r2,-376(fp)
  82489c:	10800184 	addi	r2,r2,6
  8248a0:	e13f9a17 	ldw	r4,-408(fp)
  8248a4:	e0ff9f17 	ldw	r3,-388(fp)
  8248a8:	20c7c83a 	sub	r3,r4,r3
  8248ac:	1807d4ba 	srai	r3,r3,18
  8248b0:	18c0ffcc 	andi	r3,r3,1023
  8248b4:	e13f9217 	ldw	r4,-440(fp)
  8248b8:	20c7883a 	add	r3,r4,r3
  8248bc:	18c00003 	ldbu	r3,0(r3)
  8248c0:	10c00005 	stb	r3,0(r2)
  8248c4:	e0bfa217 	ldw	r2,-376(fp)
  8248c8:	10800144 	addi	r2,r2,5
  8248cc:	e0ff9b17 	ldw	r3,-404(fp)
  8248d0:	1807d4ba 	srai	r3,r3,18
  8248d4:	18c0ffcc 	andi	r3,r3,1023
  8248d8:	e13f9217 	ldw	r4,-440(fp)
  8248dc:	20c7883a 	add	r3,r4,r3
  8248e0:	18c00003 	ldbu	r3,0(r3)
  8248e4:	10c00005 	stb	r3,0(r2)
  8248e8:	e0bf9017 	ldw	r2,-448(fp)
  8248ec:	10800804 	addi	r2,r2,32
  8248f0:	e0bf9015 	stw	r2,-448(fp)
  8248f4:	e0bf9117 	ldw	r2,-444(fp)
  8248f8:	10800044 	addi	r2,r2,1
  8248fc:	e0bf9115 	stw	r2,-444(fp)
  824900:	e0bf9117 	ldw	r2,-444(fp)
  824904:	108002d0 	cmplti	r2,r2,11
  824908:	103e8f1e 	bne	r2,zero,824348 <__alt_mem_epcs_flash_controller_0+0xff81b348>
  82490c:	0001883a 	nop
  824910:	e6ffff04 	addi	sp,fp,-4
  824914:	dfc00217 	ldw	ra,8(sp)
  824918:	df000117 	ldw	fp,4(sp)
  82491c:	dc000017 	ldw	r16,0(sp)
  824920:	dec00304 	addi	sp,sp,12
  824924:	f800283a 	ret

00824928 <jpeg_idct_12x12>:
  824928:	deff8304 	addi	sp,sp,-500
  82492c:	dfc07c15 	stw	ra,496(sp)
  824930:	df007b15 	stw	fp,492(sp)
  824934:	dc007a15 	stw	r16,488(sp)
  824938:	df007b04 	addi	fp,sp,492
  82493c:	e13ffb15 	stw	r4,-20(fp)
  824940:	e17ffc15 	stw	r5,-16(fp)
  824944:	e1bffd15 	stw	r6,-12(fp)
  824948:	e1fffe15 	stw	r7,-8(fp)
  82494c:	e0bffb17 	ldw	r2,-20(fp)
  824950:	10805417 	ldw	r2,336(r2)
  824954:	10bfa004 	addi	r2,r2,-384
  824958:	e0bf8915 	stw	r2,-476(fp)
  82495c:	e0bffd17 	ldw	r2,-12(fp)
  824960:	e0bf8515 	stw	r2,-492(fp)
  824964:	e0bffc17 	ldw	r2,-16(fp)
  824968:	10801517 	ldw	r2,84(r2)
  82496c:	e0bf8615 	stw	r2,-488(fp)
  824970:	e0bf9b04 	addi	r2,fp,-404
  824974:	e0bf8715 	stw	r2,-484(fp)
  824978:	e03f8815 	stw	zero,-480(fp)
  82497c:	00016e06 	br	824f38 <jpeg_idct_12x12+0x610>
  824980:	e0bf8517 	ldw	r2,-492(fp)
  824984:	1080000b 	ldhu	r2,0(r2)
  824988:	10ffffcc 	andi	r3,r2,65535
  82498c:	18e0001c 	xori	r3,r3,32768
  824990:	18e00004 	addi	r3,r3,-32768
  824994:	e0bf8617 	ldw	r2,-488(fp)
  824998:	10800017 	ldw	r2,0(r2)
  82499c:	100b883a 	mov	r5,r2
  8249a0:	1809883a 	mov	r4,r3
  8249a4:	08305040 	call	830504 <__mulsi3>
  8249a8:	e0bf8a15 	stw	r2,-472(fp)
  8249ac:	e0bf8a17 	ldw	r2,-472(fp)
  8249b0:	1004937a 	slli	r2,r2,13
  8249b4:	e0bf8a15 	stw	r2,-472(fp)
  8249b8:	e0bf8a17 	ldw	r2,-472(fp)
  8249bc:	10810004 	addi	r2,r2,1024
  8249c0:	e0bf8a15 	stw	r2,-472(fp)
  8249c4:	e0bf8517 	ldw	r2,-492(fp)
  8249c8:	10801004 	addi	r2,r2,64
  8249cc:	1080000b 	ldhu	r2,0(r2)
  8249d0:	10ffffcc 	andi	r3,r2,65535
  8249d4:	18e0001c 	xori	r3,r3,32768
  8249d8:	18e00004 	addi	r3,r3,-32768
  8249dc:	e0bf8617 	ldw	r2,-488(fp)
  8249e0:	10802004 	addi	r2,r2,128
  8249e4:	10800017 	ldw	r2,0(r2)
  8249e8:	100b883a 	mov	r5,r2
  8249ec:	1809883a 	mov	r4,r3
  8249f0:	08305040 	call	830504 <__mulsi3>
  8249f4:	e0bf8b15 	stw	r2,-468(fp)
  8249f8:	0149cc44 	movi	r5,10033
  8249fc:	e13f8b17 	ldw	r4,-468(fp)
  824a00:	08305040 	call	830504 <__mulsi3>
  824a04:	e0bf8b15 	stw	r2,-468(fp)
  824a08:	e0ff8a17 	ldw	r3,-472(fp)
  824a0c:	e0bf8b17 	ldw	r2,-468(fp)
  824a10:	1885883a 	add	r2,r3,r2
  824a14:	e0bf8c15 	stw	r2,-464(fp)
  824a18:	e0ff8a17 	ldw	r3,-472(fp)
  824a1c:	e0bf8b17 	ldw	r2,-468(fp)
  824a20:	1885c83a 	sub	r2,r3,r2
  824a24:	e0bf8d15 	stw	r2,-460(fp)
  824a28:	e0bf8517 	ldw	r2,-492(fp)
  824a2c:	10800804 	addi	r2,r2,32
  824a30:	1080000b 	ldhu	r2,0(r2)
  824a34:	10ffffcc 	andi	r3,r2,65535
  824a38:	18e0001c 	xori	r3,r3,32768
  824a3c:	18e00004 	addi	r3,r3,-32768
  824a40:	e0bf8617 	ldw	r2,-488(fp)
  824a44:	10801004 	addi	r2,r2,64
  824a48:	10800017 	ldw	r2,0(r2)
  824a4c:	100b883a 	mov	r5,r2
  824a50:	1809883a 	mov	r4,r3
  824a54:	08305040 	call	830504 <__mulsi3>
  824a58:	e0bf8e15 	stw	r2,-456(fp)
  824a5c:	014aed84 	movi	r5,11190
  824a60:	e13f8e17 	ldw	r4,-456(fp)
  824a64:	08305040 	call	830504 <__mulsi3>
  824a68:	e0bf8b15 	stw	r2,-468(fp)
  824a6c:	e0bf8e17 	ldw	r2,-456(fp)
  824a70:	1004937a 	slli	r2,r2,13
  824a74:	e0bf8e15 	stw	r2,-456(fp)
  824a78:	e0bf8517 	ldw	r2,-492(fp)
  824a7c:	10801804 	addi	r2,r2,96
  824a80:	1080000b 	ldhu	r2,0(r2)
  824a84:	10ffffcc 	andi	r3,r2,65535
  824a88:	18e0001c 	xori	r3,r3,32768
  824a8c:	18e00004 	addi	r3,r3,-32768
  824a90:	e0bf8617 	ldw	r2,-488(fp)
  824a94:	10803004 	addi	r2,r2,192
  824a98:	10800017 	ldw	r2,0(r2)
  824a9c:	100b883a 	mov	r5,r2
  824aa0:	1809883a 	mov	r4,r3
  824aa4:	08305040 	call	830504 <__mulsi3>
  824aa8:	e0bf8f15 	stw	r2,-452(fp)
  824aac:	e0bf8f17 	ldw	r2,-452(fp)
  824ab0:	1004937a 	slli	r2,r2,13
  824ab4:	e0bf8f15 	stw	r2,-452(fp)
  824ab8:	e0ff8e17 	ldw	r3,-456(fp)
  824abc:	e0bf8f17 	ldw	r2,-452(fp)
  824ac0:	1885c83a 	sub	r2,r3,r2
  824ac4:	e0bf9015 	stw	r2,-448(fp)
  824ac8:	e0ff8a17 	ldw	r3,-472(fp)
  824acc:	e0bf9017 	ldw	r2,-448(fp)
  824ad0:	1885883a 	add	r2,r3,r2
  824ad4:	e0bf9115 	stw	r2,-444(fp)
  824ad8:	e0ff8a17 	ldw	r3,-472(fp)
  824adc:	e0bf9017 	ldw	r2,-448(fp)
  824ae0:	1885c83a 	sub	r2,r3,r2
  824ae4:	e0bf9215 	stw	r2,-440(fp)
  824ae8:	e0ff8b17 	ldw	r3,-468(fp)
  824aec:	e0bf8f17 	ldw	r2,-452(fp)
  824af0:	1885883a 	add	r2,r3,r2
  824af4:	e0bf9015 	stw	r2,-448(fp)
  824af8:	e0ff8c17 	ldw	r3,-464(fp)
  824afc:	e0bf9017 	ldw	r2,-448(fp)
  824b00:	1885883a 	add	r2,r3,r2
  824b04:	e0bf9315 	stw	r2,-436(fp)
  824b08:	e0ff8c17 	ldw	r3,-464(fp)
  824b0c:	e0bf9017 	ldw	r2,-448(fp)
  824b10:	1885c83a 	sub	r2,r3,r2
  824b14:	e0bf9415 	stw	r2,-432(fp)
  824b18:	e0ff8b17 	ldw	r3,-468(fp)
  824b1c:	e0bf8e17 	ldw	r2,-456(fp)
  824b20:	1887c83a 	sub	r3,r3,r2
  824b24:	e0bf8f17 	ldw	r2,-452(fp)
  824b28:	1885c83a 	sub	r2,r3,r2
  824b2c:	e0bf9015 	stw	r2,-448(fp)
  824b30:	e0ff8d17 	ldw	r3,-460(fp)
  824b34:	e0bf9017 	ldw	r2,-448(fp)
  824b38:	1885883a 	add	r2,r3,r2
  824b3c:	e0bf9515 	stw	r2,-428(fp)
  824b40:	e0ff8d17 	ldw	r3,-460(fp)
  824b44:	e0bf9017 	ldw	r2,-448(fp)
  824b48:	1885c83a 	sub	r2,r3,r2
  824b4c:	e0bf9615 	stw	r2,-424(fp)
  824b50:	e0bf8517 	ldw	r2,-492(fp)
  824b54:	10800404 	addi	r2,r2,16
  824b58:	1080000b 	ldhu	r2,0(r2)
  824b5c:	10ffffcc 	andi	r3,r2,65535
  824b60:	18e0001c 	xori	r3,r3,32768
  824b64:	18e00004 	addi	r3,r3,-32768
  824b68:	e0bf8617 	ldw	r2,-488(fp)
  824b6c:	10800804 	addi	r2,r2,32
  824b70:	10800017 	ldw	r2,0(r2)
  824b74:	100b883a 	mov	r5,r2
  824b78:	1809883a 	mov	r4,r3
  824b7c:	08305040 	call	830504 <__mulsi3>
  824b80:	e0bf8e15 	stw	r2,-456(fp)
  824b84:	e0bf8517 	ldw	r2,-492(fp)
  824b88:	10800c04 	addi	r2,r2,48
  824b8c:	1080000b 	ldhu	r2,0(r2)
  824b90:	10ffffcc 	andi	r3,r2,65535
  824b94:	18e0001c 	xori	r3,r3,32768
  824b98:	18e00004 	addi	r3,r3,-32768
  824b9c:	e0bf8617 	ldw	r2,-488(fp)
  824ba0:	10801804 	addi	r2,r2,96
  824ba4:	10800017 	ldw	r2,0(r2)
  824ba8:	100b883a 	mov	r5,r2
  824bac:	1809883a 	mov	r4,r3
  824bb0:	08305040 	call	830504 <__mulsi3>
  824bb4:	e0bf8f15 	stw	r2,-452(fp)
  824bb8:	e0bf8517 	ldw	r2,-492(fp)
  824bbc:	10801404 	addi	r2,r2,80
  824bc0:	1080000b 	ldhu	r2,0(r2)
  824bc4:	10ffffcc 	andi	r3,r2,65535
  824bc8:	18e0001c 	xori	r3,r3,32768
  824bcc:	18e00004 	addi	r3,r3,-32768
  824bd0:	e0bf8617 	ldw	r2,-488(fp)
  824bd4:	10802804 	addi	r2,r2,160
  824bd8:	10800017 	ldw	r2,0(r2)
  824bdc:	100b883a 	mov	r5,r2
  824be0:	1809883a 	mov	r4,r3
  824be4:	08305040 	call	830504 <__mulsi3>
  824be8:	e0bf8a15 	stw	r2,-472(fp)
  824bec:	e0bf8517 	ldw	r2,-492(fp)
  824bf0:	10801c04 	addi	r2,r2,112
  824bf4:	1080000b 	ldhu	r2,0(r2)
  824bf8:	10ffffcc 	andi	r3,r2,65535
  824bfc:	18e0001c 	xori	r3,r3,32768
  824c00:	18e00004 	addi	r3,r3,-32768
  824c04:	e0bf8617 	ldw	r2,-488(fp)
  824c08:	10803804 	addi	r2,r2,224
  824c0c:	10800017 	ldw	r2,0(r2)
  824c10:	100b883a 	mov	r5,r2
  824c14:	1809883a 	mov	r4,r3
  824c18:	08305040 	call	830504 <__mulsi3>
  824c1c:	e0bf8b15 	stw	r2,-468(fp)
  824c20:	014a73c4 	movi	r5,10703
  824c24:	e13f8f17 	ldw	r4,-452(fp)
  824c28:	08305040 	call	830504 <__mulsi3>
  824c2c:	e0bf8d15 	stw	r2,-460(fp)
  824c30:	017babc4 	movi	r5,-4433
  824c34:	e13f8f17 	ldw	r4,-452(fp)
  824c38:	08305040 	call	830504 <__mulsi3>
  824c3c:	e0bf9715 	stw	r2,-420(fp)
  824c40:	e0ff8e17 	ldw	r3,-456(fp)
  824c44:	e0bf8a17 	ldw	r2,-472(fp)
  824c48:	1885883a 	add	r2,r3,r2
  824c4c:	e0bf8c15 	stw	r2,-464(fp)
  824c50:	e0ff8c17 	ldw	r3,-464(fp)
  824c54:	e0bf8b17 	ldw	r2,-468(fp)
  824c58:	1885883a 	add	r2,r3,r2
  824c5c:	0146e344 	movi	r5,7053
  824c60:	1009883a 	mov	r4,r2
  824c64:	08305040 	call	830504 <__mulsi3>
  824c68:	e0bf9815 	stw	r2,-416(fp)
  824c6c:	014216c4 	movi	r5,2139
  824c70:	e13f8c17 	ldw	r4,-464(fp)
  824c74:	08305040 	call	830504 <__mulsi3>
  824c78:	1007883a 	mov	r3,r2
  824c7c:	e0bf9817 	ldw	r2,-416(fp)
  824c80:	1885883a 	add	r2,r3,r2
  824c84:	e0bf9015 	stw	r2,-448(fp)
  824c88:	e0ff9017 	ldw	r3,-448(fp)
  824c8c:	e0bf8d17 	ldw	r2,-460(fp)
  824c90:	18a1883a 	add	r16,r3,r2
  824c94:	01423dc4 	movi	r5,2295
  824c98:	e13f8e17 	ldw	r4,-456(fp)
  824c9c:	08305040 	call	830504 <__mulsi3>
  824ca0:	8085883a 	add	r2,r16,r2
  824ca4:	e0bf8c15 	stw	r2,-464(fp)
  824ca8:	e0ff8a17 	ldw	r3,-472(fp)
  824cac:	e0bf8b17 	ldw	r2,-468(fp)
  824cb0:	1885883a 	add	r2,r3,r2
  824cb4:	0177a2c4 	movi	r5,-8565
  824cb8:	1009883a 	mov	r4,r2
  824cbc:	08305040 	call	830504 <__mulsi3>
  824cc0:	e0bf9915 	stw	r2,-412(fp)
  824cc4:	e0ff9917 	ldw	r3,-412(fp)
  824cc8:	e0bf9717 	ldw	r2,-420(fp)
  824ccc:	18a1883a 	add	r16,r3,r2
  824cd0:	01742c04 	movi	r5,-12112
  824cd4:	e13f8a17 	ldw	r4,-472(fp)
  824cd8:	08305040 	call	830504 <__mulsi3>
  824cdc:	8085883a 	add	r2,r16,r2
  824ce0:	e0ff9017 	ldw	r3,-448(fp)
  824ce4:	1885883a 	add	r2,r3,r2
  824ce8:	e0bf9015 	stw	r2,-448(fp)
  824cec:	e0ff9817 	ldw	r3,-416(fp)
  824cf0:	e0bf8d17 	ldw	r2,-460(fp)
  824cf4:	18a1c83a 	sub	r16,r3,r2
  824cf8:	014cb184 	movi	r5,12998
  824cfc:	e13f8b17 	ldw	r4,-468(fp)
  824d00:	08305040 	call	830504 <__mulsi3>
  824d04:	8085883a 	add	r2,r16,r2
  824d08:	e0ff9917 	ldw	r3,-412(fp)
  824d0c:	1885883a 	add	r2,r3,r2
  824d10:	e0bf9915 	stw	r2,-412(fp)
  824d14:	017a9704 	movi	r5,-5540
  824d18:	e13f8e17 	ldw	r4,-456(fp)
  824d1c:	08305040 	call	830504 <__mulsi3>
  824d20:	1007883a 	mov	r3,r2
  824d24:	e0bf9717 	ldw	r2,-420(fp)
  824d28:	18a1883a 	add	r16,r3,r2
  824d2c:	01702304 	movi	r5,-16244
  824d30:	e13f8b17 	ldw	r4,-468(fp)
  824d34:	08305040 	call	830504 <__mulsi3>
  824d38:	8085883a 	add	r2,r16,r2
  824d3c:	e0ff9817 	ldw	r3,-416(fp)
  824d40:	1885883a 	add	r2,r3,r2
  824d44:	e0bf9815 	stw	r2,-416(fp)
  824d48:	e0ff8e17 	ldw	r3,-456(fp)
  824d4c:	e0bf8b17 	ldw	r2,-468(fp)
  824d50:	1885c83a 	sub	r2,r3,r2
  824d54:	e0bf8e15 	stw	r2,-456(fp)
  824d58:	e0ff8f17 	ldw	r3,-452(fp)
  824d5c:	e0bf8a17 	ldw	r2,-472(fp)
  824d60:	1885c83a 	sub	r2,r3,r2
  824d64:	e0bf8f15 	stw	r2,-452(fp)
  824d68:	e0ff8e17 	ldw	r3,-456(fp)
  824d6c:	e0bf8f17 	ldw	r2,-452(fp)
  824d70:	1885883a 	add	r2,r3,r2
  824d74:	01445444 	movi	r5,4433
  824d78:	1009883a 	mov	r4,r2
  824d7c:	08305040 	call	830504 <__mulsi3>
  824d80:	e0bf8a15 	stw	r2,-472(fp)
  824d84:	01461f84 	movi	r5,6270
  824d88:	e13f8e17 	ldw	r4,-456(fp)
  824d8c:	08305040 	call	830504 <__mulsi3>
  824d90:	1007883a 	mov	r3,r2
  824d94:	e0bf8a17 	ldw	r2,-472(fp)
  824d98:	1885883a 	add	r2,r3,r2
  824d9c:	e0bf8d15 	stw	r2,-460(fp)
  824da0:	017137c4 	movi	r5,-15137
  824da4:	e13f8f17 	ldw	r4,-452(fp)
  824da8:	08305040 	call	830504 <__mulsi3>
  824dac:	1007883a 	mov	r3,r2
  824db0:	e0bf8a17 	ldw	r2,-472(fp)
  824db4:	1885883a 	add	r2,r3,r2
  824db8:	e0bf9715 	stw	r2,-420(fp)
  824dbc:	e0ff9317 	ldw	r3,-436(fp)
  824dc0:	e0bf8c17 	ldw	r2,-464(fp)
  824dc4:	1885883a 	add	r2,r3,r2
  824dc8:	1007d2fa 	srai	r3,r2,11
  824dcc:	e0bf8717 	ldw	r2,-484(fp)
  824dd0:	10c00015 	stw	r3,0(r2)
  824dd4:	e0bf8717 	ldw	r2,-484(fp)
  824dd8:	10805804 	addi	r2,r2,352
  824ddc:	e13f9317 	ldw	r4,-436(fp)
  824de0:	e0ff8c17 	ldw	r3,-464(fp)
  824de4:	20c7c83a 	sub	r3,r4,r3
  824de8:	1807d2fa 	srai	r3,r3,11
  824dec:	10c00015 	stw	r3,0(r2)
  824df0:	e0bf8717 	ldw	r2,-484(fp)
  824df4:	10800804 	addi	r2,r2,32
  824df8:	e13f9117 	ldw	r4,-444(fp)
  824dfc:	e0ff8d17 	ldw	r3,-460(fp)
  824e00:	20c7883a 	add	r3,r4,r3
  824e04:	1807d2fa 	srai	r3,r3,11
  824e08:	10c00015 	stw	r3,0(r2)
  824e0c:	e0bf8717 	ldw	r2,-484(fp)
  824e10:	10805004 	addi	r2,r2,320
  824e14:	e13f9117 	ldw	r4,-444(fp)
  824e18:	e0ff8d17 	ldw	r3,-460(fp)
  824e1c:	20c7c83a 	sub	r3,r4,r3
  824e20:	1807d2fa 	srai	r3,r3,11
  824e24:	10c00015 	stw	r3,0(r2)
  824e28:	e0bf8717 	ldw	r2,-484(fp)
  824e2c:	10801004 	addi	r2,r2,64
  824e30:	e13f9517 	ldw	r4,-428(fp)
  824e34:	e0ff9017 	ldw	r3,-448(fp)
  824e38:	20c7883a 	add	r3,r4,r3
  824e3c:	1807d2fa 	srai	r3,r3,11
  824e40:	10c00015 	stw	r3,0(r2)
  824e44:	e0bf8717 	ldw	r2,-484(fp)
  824e48:	10804804 	addi	r2,r2,288
  824e4c:	e13f9517 	ldw	r4,-428(fp)
  824e50:	e0ff9017 	ldw	r3,-448(fp)
  824e54:	20c7c83a 	sub	r3,r4,r3
  824e58:	1807d2fa 	srai	r3,r3,11
  824e5c:	10c00015 	stw	r3,0(r2)
  824e60:	e0bf8717 	ldw	r2,-484(fp)
  824e64:	10801804 	addi	r2,r2,96
  824e68:	e13f9617 	ldw	r4,-424(fp)
  824e6c:	e0ff9917 	ldw	r3,-412(fp)
  824e70:	20c7883a 	add	r3,r4,r3
  824e74:	1807d2fa 	srai	r3,r3,11
  824e78:	10c00015 	stw	r3,0(r2)
  824e7c:	e0bf8717 	ldw	r2,-484(fp)
  824e80:	10804004 	addi	r2,r2,256
  824e84:	e13f9617 	ldw	r4,-424(fp)
  824e88:	e0ff9917 	ldw	r3,-412(fp)
  824e8c:	20c7c83a 	sub	r3,r4,r3
  824e90:	1807d2fa 	srai	r3,r3,11
  824e94:	10c00015 	stw	r3,0(r2)
  824e98:	e0bf8717 	ldw	r2,-484(fp)
  824e9c:	10802004 	addi	r2,r2,128
  824ea0:	e13f9217 	ldw	r4,-440(fp)
  824ea4:	e0ff9717 	ldw	r3,-420(fp)
  824ea8:	20c7883a 	add	r3,r4,r3
  824eac:	1807d2fa 	srai	r3,r3,11
  824eb0:	10c00015 	stw	r3,0(r2)
  824eb4:	e0bf8717 	ldw	r2,-484(fp)
  824eb8:	10803804 	addi	r2,r2,224
  824ebc:	e13f9217 	ldw	r4,-440(fp)
  824ec0:	e0ff9717 	ldw	r3,-420(fp)
  824ec4:	20c7c83a 	sub	r3,r4,r3
  824ec8:	1807d2fa 	srai	r3,r3,11
  824ecc:	10c00015 	stw	r3,0(r2)
  824ed0:	e0bf8717 	ldw	r2,-484(fp)
  824ed4:	10802804 	addi	r2,r2,160
  824ed8:	e13f9417 	ldw	r4,-432(fp)
  824edc:	e0ff9817 	ldw	r3,-416(fp)
  824ee0:	20c7883a 	add	r3,r4,r3
  824ee4:	1807d2fa 	srai	r3,r3,11
  824ee8:	10c00015 	stw	r3,0(r2)
  824eec:	e0bf8717 	ldw	r2,-484(fp)
  824ef0:	10803004 	addi	r2,r2,192
  824ef4:	e13f9417 	ldw	r4,-432(fp)
  824ef8:	e0ff9817 	ldw	r3,-416(fp)
  824efc:	20c7c83a 	sub	r3,r4,r3
  824f00:	1807d2fa 	srai	r3,r3,11
  824f04:	10c00015 	stw	r3,0(r2)
  824f08:	e0bf8817 	ldw	r2,-480(fp)
  824f0c:	10800044 	addi	r2,r2,1
  824f10:	e0bf8815 	stw	r2,-480(fp)
  824f14:	e0bf8517 	ldw	r2,-492(fp)
  824f18:	10800084 	addi	r2,r2,2
  824f1c:	e0bf8515 	stw	r2,-492(fp)
  824f20:	e0bf8617 	ldw	r2,-488(fp)
  824f24:	10800104 	addi	r2,r2,4
  824f28:	e0bf8615 	stw	r2,-488(fp)
  824f2c:	e0bf8717 	ldw	r2,-484(fp)
  824f30:	10800104 	addi	r2,r2,4
  824f34:	e0bf8715 	stw	r2,-484(fp)
  824f38:	e0bf8817 	ldw	r2,-480(fp)
  824f3c:	10800210 	cmplti	r2,r2,8
  824f40:	103e8f1e 	bne	r2,zero,824980 <__alt_mem_epcs_flash_controller_0+0xff81b980>
  824f44:	e0bf9b04 	addi	r2,fp,-404
  824f48:	e0bf8715 	stw	r2,-484(fp)
  824f4c:	e03f8815 	stw	zero,-480(fp)
  824f50:	00015906 	br	8254b8 <jpeg_idct_12x12+0xb90>
  824f54:	e0bf8817 	ldw	r2,-480(fp)
  824f58:	1085883a 	add	r2,r2,r2
  824f5c:	1085883a 	add	r2,r2,r2
  824f60:	1007883a 	mov	r3,r2
  824f64:	e0bffe17 	ldw	r2,-8(fp)
  824f68:	10c5883a 	add	r2,r2,r3
  824f6c:	10c00017 	ldw	r3,0(r2)
  824f70:	e0800217 	ldw	r2,8(fp)
  824f74:	1885883a 	add	r2,r3,r2
  824f78:	e0bf9a15 	stw	r2,-408(fp)
  824f7c:	e0bf8717 	ldw	r2,-484(fp)
  824f80:	10800017 	ldw	r2,0(r2)
  824f84:	10900404 	addi	r2,r2,16400
  824f88:	e0bf8a15 	stw	r2,-472(fp)
  824f8c:	e0bf8a17 	ldw	r2,-472(fp)
  824f90:	1004937a 	slli	r2,r2,13
  824f94:	e0bf8a15 	stw	r2,-472(fp)
  824f98:	e0bf8717 	ldw	r2,-484(fp)
  824f9c:	10800404 	addi	r2,r2,16
  824fa0:	10800017 	ldw	r2,0(r2)
  824fa4:	e0bf8b15 	stw	r2,-468(fp)
  824fa8:	0149cc44 	movi	r5,10033
  824fac:	e13f8b17 	ldw	r4,-468(fp)
  824fb0:	08305040 	call	830504 <__mulsi3>
  824fb4:	e0bf8b15 	stw	r2,-468(fp)
  824fb8:	e0ff8a17 	ldw	r3,-472(fp)
  824fbc:	e0bf8b17 	ldw	r2,-468(fp)
  824fc0:	1885883a 	add	r2,r3,r2
  824fc4:	e0bf8c15 	stw	r2,-464(fp)
  824fc8:	e0ff8a17 	ldw	r3,-472(fp)
  824fcc:	e0bf8b17 	ldw	r2,-468(fp)
  824fd0:	1885c83a 	sub	r2,r3,r2
  824fd4:	e0bf8d15 	stw	r2,-460(fp)
  824fd8:	e0bf8717 	ldw	r2,-484(fp)
  824fdc:	10800204 	addi	r2,r2,8
  824fe0:	10800017 	ldw	r2,0(r2)
  824fe4:	e0bf8e15 	stw	r2,-456(fp)
  824fe8:	014aed84 	movi	r5,11190
  824fec:	e13f8e17 	ldw	r4,-456(fp)
  824ff0:	08305040 	call	830504 <__mulsi3>
  824ff4:	e0bf8b15 	stw	r2,-468(fp)
  824ff8:	e0bf8e17 	ldw	r2,-456(fp)
  824ffc:	1004937a 	slli	r2,r2,13
  825000:	e0bf8e15 	stw	r2,-456(fp)
  825004:	e0bf8717 	ldw	r2,-484(fp)
  825008:	10800604 	addi	r2,r2,24
  82500c:	10800017 	ldw	r2,0(r2)
  825010:	e0bf8f15 	stw	r2,-452(fp)
  825014:	e0bf8f17 	ldw	r2,-452(fp)
  825018:	1004937a 	slli	r2,r2,13
  82501c:	e0bf8f15 	stw	r2,-452(fp)
  825020:	e0ff8e17 	ldw	r3,-456(fp)
  825024:	e0bf8f17 	ldw	r2,-452(fp)
  825028:	1885c83a 	sub	r2,r3,r2
  82502c:	e0bf9015 	stw	r2,-448(fp)
  825030:	e0ff8a17 	ldw	r3,-472(fp)
  825034:	e0bf9017 	ldw	r2,-448(fp)
  825038:	1885883a 	add	r2,r3,r2
  82503c:	e0bf9115 	stw	r2,-444(fp)
  825040:	e0ff8a17 	ldw	r3,-472(fp)
  825044:	e0bf9017 	ldw	r2,-448(fp)
  825048:	1885c83a 	sub	r2,r3,r2
  82504c:	e0bf9215 	stw	r2,-440(fp)
  825050:	e0ff8b17 	ldw	r3,-468(fp)
  825054:	e0bf8f17 	ldw	r2,-452(fp)
  825058:	1885883a 	add	r2,r3,r2
  82505c:	e0bf9015 	stw	r2,-448(fp)
  825060:	e0ff8c17 	ldw	r3,-464(fp)
  825064:	e0bf9017 	ldw	r2,-448(fp)
  825068:	1885883a 	add	r2,r3,r2
  82506c:	e0bf9315 	stw	r2,-436(fp)
  825070:	e0ff8c17 	ldw	r3,-464(fp)
  825074:	e0bf9017 	ldw	r2,-448(fp)
  825078:	1885c83a 	sub	r2,r3,r2
  82507c:	e0bf9415 	stw	r2,-432(fp)
  825080:	e0ff8b17 	ldw	r3,-468(fp)
  825084:	e0bf8e17 	ldw	r2,-456(fp)
  825088:	1887c83a 	sub	r3,r3,r2
  82508c:	e0bf8f17 	ldw	r2,-452(fp)
  825090:	1885c83a 	sub	r2,r3,r2
  825094:	e0bf9015 	stw	r2,-448(fp)
  825098:	e0ff8d17 	ldw	r3,-460(fp)
  82509c:	e0bf9017 	ldw	r2,-448(fp)
  8250a0:	1885883a 	add	r2,r3,r2
  8250a4:	e0bf9515 	stw	r2,-428(fp)
  8250a8:	e0ff8d17 	ldw	r3,-460(fp)
  8250ac:	e0bf9017 	ldw	r2,-448(fp)
  8250b0:	1885c83a 	sub	r2,r3,r2
  8250b4:	e0bf9615 	stw	r2,-424(fp)
  8250b8:	e0bf8717 	ldw	r2,-484(fp)
  8250bc:	10800104 	addi	r2,r2,4
  8250c0:	10800017 	ldw	r2,0(r2)
  8250c4:	e0bf8e15 	stw	r2,-456(fp)
  8250c8:	e0bf8717 	ldw	r2,-484(fp)
  8250cc:	10800304 	addi	r2,r2,12
  8250d0:	10800017 	ldw	r2,0(r2)
  8250d4:	e0bf8f15 	stw	r2,-452(fp)
  8250d8:	e0bf8717 	ldw	r2,-484(fp)
  8250dc:	10800504 	addi	r2,r2,20
  8250e0:	10800017 	ldw	r2,0(r2)
  8250e4:	e0bf8a15 	stw	r2,-472(fp)
  8250e8:	e0bf8717 	ldw	r2,-484(fp)
  8250ec:	10800704 	addi	r2,r2,28
  8250f0:	10800017 	ldw	r2,0(r2)
  8250f4:	e0bf8b15 	stw	r2,-468(fp)
  8250f8:	014a73c4 	movi	r5,10703
  8250fc:	e13f8f17 	ldw	r4,-452(fp)
  825100:	08305040 	call	830504 <__mulsi3>
  825104:	e0bf8d15 	stw	r2,-460(fp)
  825108:	017babc4 	movi	r5,-4433
  82510c:	e13f8f17 	ldw	r4,-452(fp)
  825110:	08305040 	call	830504 <__mulsi3>
  825114:	e0bf9715 	stw	r2,-420(fp)
  825118:	e0ff8e17 	ldw	r3,-456(fp)
  82511c:	e0bf8a17 	ldw	r2,-472(fp)
  825120:	1885883a 	add	r2,r3,r2
  825124:	e0bf8c15 	stw	r2,-464(fp)
  825128:	e0ff8c17 	ldw	r3,-464(fp)
  82512c:	e0bf8b17 	ldw	r2,-468(fp)
  825130:	1885883a 	add	r2,r3,r2
  825134:	0146e344 	movi	r5,7053
  825138:	1009883a 	mov	r4,r2
  82513c:	08305040 	call	830504 <__mulsi3>
  825140:	e0bf9815 	stw	r2,-416(fp)
  825144:	014216c4 	movi	r5,2139
  825148:	e13f8c17 	ldw	r4,-464(fp)
  82514c:	08305040 	call	830504 <__mulsi3>
  825150:	1007883a 	mov	r3,r2
  825154:	e0bf9817 	ldw	r2,-416(fp)
  825158:	1885883a 	add	r2,r3,r2
  82515c:	e0bf9015 	stw	r2,-448(fp)
  825160:	e0ff9017 	ldw	r3,-448(fp)
  825164:	e0bf8d17 	ldw	r2,-460(fp)
  825168:	18a1883a 	add	r16,r3,r2
  82516c:	01423dc4 	movi	r5,2295
  825170:	e13f8e17 	ldw	r4,-456(fp)
  825174:	08305040 	call	830504 <__mulsi3>
  825178:	8085883a 	add	r2,r16,r2
  82517c:	e0bf8c15 	stw	r2,-464(fp)
  825180:	e0ff8a17 	ldw	r3,-472(fp)
  825184:	e0bf8b17 	ldw	r2,-468(fp)
  825188:	1885883a 	add	r2,r3,r2
  82518c:	0177a2c4 	movi	r5,-8565
  825190:	1009883a 	mov	r4,r2
  825194:	08305040 	call	830504 <__mulsi3>
  825198:	e0bf9915 	stw	r2,-412(fp)
  82519c:	e0ff9917 	ldw	r3,-412(fp)
  8251a0:	e0bf9717 	ldw	r2,-420(fp)
  8251a4:	18a1883a 	add	r16,r3,r2
  8251a8:	01742c04 	movi	r5,-12112
  8251ac:	e13f8a17 	ldw	r4,-472(fp)
  8251b0:	08305040 	call	830504 <__mulsi3>
  8251b4:	8085883a 	add	r2,r16,r2
  8251b8:	e0ff9017 	ldw	r3,-448(fp)
  8251bc:	1885883a 	add	r2,r3,r2
  8251c0:	e0bf9015 	stw	r2,-448(fp)
  8251c4:	e0ff9817 	ldw	r3,-416(fp)
  8251c8:	e0bf8d17 	ldw	r2,-460(fp)
  8251cc:	18a1c83a 	sub	r16,r3,r2
  8251d0:	014cb184 	movi	r5,12998
  8251d4:	e13f8b17 	ldw	r4,-468(fp)
  8251d8:	08305040 	call	830504 <__mulsi3>
  8251dc:	8085883a 	add	r2,r16,r2
  8251e0:	e0ff9917 	ldw	r3,-412(fp)
  8251e4:	1885883a 	add	r2,r3,r2
  8251e8:	e0bf9915 	stw	r2,-412(fp)
  8251ec:	017a9704 	movi	r5,-5540
  8251f0:	e13f8e17 	ldw	r4,-456(fp)
  8251f4:	08305040 	call	830504 <__mulsi3>
  8251f8:	1007883a 	mov	r3,r2
  8251fc:	e0bf9717 	ldw	r2,-420(fp)
  825200:	18a1883a 	add	r16,r3,r2
  825204:	01702304 	movi	r5,-16244
  825208:	e13f8b17 	ldw	r4,-468(fp)
  82520c:	08305040 	call	830504 <__mulsi3>
  825210:	8085883a 	add	r2,r16,r2
  825214:	e0ff9817 	ldw	r3,-416(fp)
  825218:	1885883a 	add	r2,r3,r2
  82521c:	e0bf9815 	stw	r2,-416(fp)
  825220:	e0ff8e17 	ldw	r3,-456(fp)
  825224:	e0bf8b17 	ldw	r2,-468(fp)
  825228:	1885c83a 	sub	r2,r3,r2
  82522c:	e0bf8e15 	stw	r2,-456(fp)
  825230:	e0ff8f17 	ldw	r3,-452(fp)
  825234:	e0bf8a17 	ldw	r2,-472(fp)
  825238:	1885c83a 	sub	r2,r3,r2
  82523c:	e0bf8f15 	stw	r2,-452(fp)
  825240:	e0ff8e17 	ldw	r3,-456(fp)
  825244:	e0bf8f17 	ldw	r2,-452(fp)
  825248:	1885883a 	add	r2,r3,r2
  82524c:	01445444 	movi	r5,4433
  825250:	1009883a 	mov	r4,r2
  825254:	08305040 	call	830504 <__mulsi3>
  825258:	e0bf8a15 	stw	r2,-472(fp)
  82525c:	01461f84 	movi	r5,6270
  825260:	e13f8e17 	ldw	r4,-456(fp)
  825264:	08305040 	call	830504 <__mulsi3>
  825268:	1007883a 	mov	r3,r2
  82526c:	e0bf8a17 	ldw	r2,-472(fp)
  825270:	1885883a 	add	r2,r3,r2
  825274:	e0bf8d15 	stw	r2,-460(fp)
  825278:	017137c4 	movi	r5,-15137
  82527c:	e13f8f17 	ldw	r4,-452(fp)
  825280:	08305040 	call	830504 <__mulsi3>
  825284:	1007883a 	mov	r3,r2
  825288:	e0bf8a17 	ldw	r2,-472(fp)
  82528c:	1885883a 	add	r2,r3,r2
  825290:	e0bf9715 	stw	r2,-420(fp)
  825294:	e0ff9317 	ldw	r3,-436(fp)
  825298:	e0bf8c17 	ldw	r2,-464(fp)
  82529c:	1885883a 	add	r2,r3,r2
  8252a0:	1005d4ba 	srai	r2,r2,18
  8252a4:	1080ffcc 	andi	r2,r2,1023
  8252a8:	e0ff8917 	ldw	r3,-476(fp)
  8252ac:	1885883a 	add	r2,r3,r2
  8252b0:	10c00003 	ldbu	r3,0(r2)
  8252b4:	e0bf9a17 	ldw	r2,-408(fp)
  8252b8:	10c00005 	stb	r3,0(r2)
  8252bc:	e0bf9a17 	ldw	r2,-408(fp)
  8252c0:	108002c4 	addi	r2,r2,11
  8252c4:	e13f9317 	ldw	r4,-436(fp)
  8252c8:	e0ff8c17 	ldw	r3,-464(fp)
  8252cc:	20c7c83a 	sub	r3,r4,r3
  8252d0:	1807d4ba 	srai	r3,r3,18
  8252d4:	18c0ffcc 	andi	r3,r3,1023
  8252d8:	e13f8917 	ldw	r4,-476(fp)
  8252dc:	20c7883a 	add	r3,r4,r3
  8252e0:	18c00003 	ldbu	r3,0(r3)
  8252e4:	10c00005 	stb	r3,0(r2)
  8252e8:	e0bf9a17 	ldw	r2,-408(fp)
  8252ec:	10800044 	addi	r2,r2,1
  8252f0:	e13f9117 	ldw	r4,-444(fp)
  8252f4:	e0ff8d17 	ldw	r3,-460(fp)
  8252f8:	20c7883a 	add	r3,r4,r3
  8252fc:	1807d4ba 	srai	r3,r3,18
  825300:	18c0ffcc 	andi	r3,r3,1023
  825304:	e13f8917 	ldw	r4,-476(fp)
  825308:	20c7883a 	add	r3,r4,r3
  82530c:	18c00003 	ldbu	r3,0(r3)
  825310:	10c00005 	stb	r3,0(r2)
  825314:	e0bf9a17 	ldw	r2,-408(fp)
  825318:	10800284 	addi	r2,r2,10
  82531c:	e13f9117 	ldw	r4,-444(fp)
  825320:	e0ff8d17 	ldw	r3,-460(fp)
  825324:	20c7c83a 	sub	r3,r4,r3
  825328:	1807d4ba 	srai	r3,r3,18
  82532c:	18c0ffcc 	andi	r3,r3,1023
  825330:	e13f8917 	ldw	r4,-476(fp)
  825334:	20c7883a 	add	r3,r4,r3
  825338:	18c00003 	ldbu	r3,0(r3)
  82533c:	10c00005 	stb	r3,0(r2)
  825340:	e0bf9a17 	ldw	r2,-408(fp)
  825344:	10800084 	addi	r2,r2,2
  825348:	e13f9517 	ldw	r4,-428(fp)
  82534c:	e0ff9017 	ldw	r3,-448(fp)
  825350:	20c7883a 	add	r3,r4,r3
  825354:	1807d4ba 	srai	r3,r3,18
  825358:	18c0ffcc 	andi	r3,r3,1023
  82535c:	e13f8917 	ldw	r4,-476(fp)
  825360:	20c7883a 	add	r3,r4,r3
  825364:	18c00003 	ldbu	r3,0(r3)
  825368:	10c00005 	stb	r3,0(r2)
  82536c:	e0bf9a17 	ldw	r2,-408(fp)
  825370:	10800244 	addi	r2,r2,9
  825374:	e13f9517 	ldw	r4,-428(fp)
  825378:	e0ff9017 	ldw	r3,-448(fp)
  82537c:	20c7c83a 	sub	r3,r4,r3
  825380:	1807d4ba 	srai	r3,r3,18
  825384:	18c0ffcc 	andi	r3,r3,1023
  825388:	e13f8917 	ldw	r4,-476(fp)
  82538c:	20c7883a 	add	r3,r4,r3
  825390:	18c00003 	ldbu	r3,0(r3)
  825394:	10c00005 	stb	r3,0(r2)
  825398:	e0bf9a17 	ldw	r2,-408(fp)
  82539c:	108000c4 	addi	r2,r2,3
  8253a0:	e13f9617 	ldw	r4,-424(fp)
  8253a4:	e0ff9917 	ldw	r3,-412(fp)
  8253a8:	20c7883a 	add	r3,r4,r3
  8253ac:	1807d4ba 	srai	r3,r3,18
  8253b0:	18c0ffcc 	andi	r3,r3,1023
  8253b4:	e13f8917 	ldw	r4,-476(fp)
  8253b8:	20c7883a 	add	r3,r4,r3
  8253bc:	18c00003 	ldbu	r3,0(r3)
  8253c0:	10c00005 	stb	r3,0(r2)
  8253c4:	e0bf9a17 	ldw	r2,-408(fp)
  8253c8:	10800204 	addi	r2,r2,8
  8253cc:	e13f9617 	ldw	r4,-424(fp)
  8253d0:	e0ff9917 	ldw	r3,-412(fp)
  8253d4:	20c7c83a 	sub	r3,r4,r3
  8253d8:	1807d4ba 	srai	r3,r3,18
  8253dc:	18c0ffcc 	andi	r3,r3,1023
  8253e0:	e13f8917 	ldw	r4,-476(fp)
  8253e4:	20c7883a 	add	r3,r4,r3
  8253e8:	18c00003 	ldbu	r3,0(r3)
  8253ec:	10c00005 	stb	r3,0(r2)
  8253f0:	e0bf9a17 	ldw	r2,-408(fp)
  8253f4:	10800104 	addi	r2,r2,4
  8253f8:	e13f9217 	ldw	r4,-440(fp)
  8253fc:	e0ff9717 	ldw	r3,-420(fp)
  825400:	20c7883a 	add	r3,r4,r3
  825404:	1807d4ba 	srai	r3,r3,18
  825408:	18c0ffcc 	andi	r3,r3,1023
  82540c:	e13f8917 	ldw	r4,-476(fp)
  825410:	20c7883a 	add	r3,r4,r3
  825414:	18c00003 	ldbu	r3,0(r3)
  825418:	10c00005 	stb	r3,0(r2)
  82541c:	e0bf9a17 	ldw	r2,-408(fp)
  825420:	108001c4 	addi	r2,r2,7
  825424:	e13f9217 	ldw	r4,-440(fp)
  825428:	e0ff9717 	ldw	r3,-420(fp)
  82542c:	20c7c83a 	sub	r3,r4,r3
  825430:	1807d4ba 	srai	r3,r3,18
  825434:	18c0ffcc 	andi	r3,r3,1023
  825438:	e13f8917 	ldw	r4,-476(fp)
  82543c:	20c7883a 	add	r3,r4,r3
  825440:	18c00003 	ldbu	r3,0(r3)
  825444:	10c00005 	stb	r3,0(r2)
  825448:	e0bf9a17 	ldw	r2,-408(fp)
  82544c:	10800144 	addi	r2,r2,5
  825450:	e13f9417 	ldw	r4,-432(fp)
  825454:	e0ff9817 	ldw	r3,-416(fp)
  825458:	20c7883a 	add	r3,r4,r3
  82545c:	1807d4ba 	srai	r3,r3,18
  825460:	18c0ffcc 	andi	r3,r3,1023
  825464:	e13f8917 	ldw	r4,-476(fp)
  825468:	20c7883a 	add	r3,r4,r3
  82546c:	18c00003 	ldbu	r3,0(r3)
  825470:	10c00005 	stb	r3,0(r2)
  825474:	e0bf9a17 	ldw	r2,-408(fp)
  825478:	10800184 	addi	r2,r2,6
  82547c:	e13f9417 	ldw	r4,-432(fp)
  825480:	e0ff9817 	ldw	r3,-416(fp)
  825484:	20c7c83a 	sub	r3,r4,r3
  825488:	1807d4ba 	srai	r3,r3,18
  82548c:	18c0ffcc 	andi	r3,r3,1023
  825490:	e13f8917 	ldw	r4,-476(fp)
  825494:	20c7883a 	add	r3,r4,r3
  825498:	18c00003 	ldbu	r3,0(r3)
  82549c:	10c00005 	stb	r3,0(r2)
  8254a0:	e0bf8717 	ldw	r2,-484(fp)
  8254a4:	10800804 	addi	r2,r2,32
  8254a8:	e0bf8715 	stw	r2,-484(fp)
  8254ac:	e0bf8817 	ldw	r2,-480(fp)
  8254b0:	10800044 	addi	r2,r2,1
  8254b4:	e0bf8815 	stw	r2,-480(fp)
  8254b8:	e0bf8817 	ldw	r2,-480(fp)
  8254bc:	10800310 	cmplti	r2,r2,12
  8254c0:	103ea41e 	bne	r2,zero,824f54 <__alt_mem_epcs_flash_controller_0+0xff81bf54>
  8254c4:	0001883a 	nop
  8254c8:	e6ffff04 	addi	sp,fp,-4
  8254cc:	dfc00217 	ldw	ra,8(sp)
  8254d0:	df000117 	ldw	fp,4(sp)
  8254d4:	dc000017 	ldw	r16,0(sp)
  8254d8:	dec00304 	addi	sp,sp,12
  8254dc:	f800283a 	ret

008254e0 <jpeg_idct_13x13>:
  8254e0:	deff7a04 	addi	sp,sp,-536
  8254e4:	dfc08515 	stw	ra,532(sp)
  8254e8:	df008415 	stw	fp,528(sp)
  8254ec:	dc008315 	stw	r16,524(sp)
  8254f0:	df008404 	addi	fp,sp,528
  8254f4:	e13ffb15 	stw	r4,-20(fp)
  8254f8:	e17ffc15 	stw	r5,-16(fp)
  8254fc:	e1bffd15 	stw	r6,-12(fp)
  825500:	e1fffe15 	stw	r7,-8(fp)
  825504:	e0bffb17 	ldw	r2,-20(fp)
  825508:	10805417 	ldw	r2,336(r2)
  82550c:	10bfa004 	addi	r2,r2,-384
  825510:	e0bf8015 	stw	r2,-512(fp)
  825514:	e0bffd17 	ldw	r2,-12(fp)
  825518:	e0bf7c15 	stw	r2,-528(fp)
  82551c:	e0bffc17 	ldw	r2,-16(fp)
  825520:	10801517 	ldw	r2,84(r2)
  825524:	e0bf7d15 	stw	r2,-524(fp)
  825528:	e0bf9304 	addi	r2,fp,-436
  82552c:	e0bf7e15 	stw	r2,-520(fp)
  825530:	e03f7f15 	stw	zero,-516(fp)
  825534:	0001bc06 	br	825c28 <jpeg_idct_13x13+0x748>
  825538:	e0bf7c17 	ldw	r2,-528(fp)
  82553c:	1080000b 	ldhu	r2,0(r2)
  825540:	10ffffcc 	andi	r3,r2,65535
  825544:	18e0001c 	xori	r3,r3,32768
  825548:	18e00004 	addi	r3,r3,-32768
  82554c:	e0bf7d17 	ldw	r2,-524(fp)
  825550:	10800017 	ldw	r2,0(r2)
  825554:	100b883a 	mov	r5,r2
  825558:	1809883a 	mov	r4,r3
  82555c:	08305040 	call	830504 <__mulsi3>
  825560:	e0bf8115 	stw	r2,-508(fp)
  825564:	e0bf8117 	ldw	r2,-508(fp)
  825568:	1004937a 	slli	r2,r2,13
  82556c:	e0bf8115 	stw	r2,-508(fp)
  825570:	e0bf8117 	ldw	r2,-508(fp)
  825574:	10810004 	addi	r2,r2,1024
  825578:	e0bf8115 	stw	r2,-508(fp)
  82557c:	e0bf7c17 	ldw	r2,-528(fp)
  825580:	10800804 	addi	r2,r2,32
  825584:	1080000b 	ldhu	r2,0(r2)
  825588:	10ffffcc 	andi	r3,r2,65535
  82558c:	18e0001c 	xori	r3,r3,32768
  825590:	18e00004 	addi	r3,r3,-32768
  825594:	e0bf7d17 	ldw	r2,-524(fp)
  825598:	10801004 	addi	r2,r2,64
  82559c:	10800017 	ldw	r2,0(r2)
  8255a0:	100b883a 	mov	r5,r2
  8255a4:	1809883a 	mov	r4,r3
  8255a8:	08305040 	call	830504 <__mulsi3>
  8255ac:	e0bf8215 	stw	r2,-504(fp)
  8255b0:	e0bf7c17 	ldw	r2,-528(fp)
  8255b4:	10801004 	addi	r2,r2,64
  8255b8:	1080000b 	ldhu	r2,0(r2)
  8255bc:	10ffffcc 	andi	r3,r2,65535
  8255c0:	18e0001c 	xori	r3,r3,32768
  8255c4:	18e00004 	addi	r3,r3,-32768
  8255c8:	e0bf7d17 	ldw	r2,-524(fp)
  8255cc:	10802004 	addi	r2,r2,128
  8255d0:	10800017 	ldw	r2,0(r2)
  8255d4:	100b883a 	mov	r5,r2
  8255d8:	1809883a 	mov	r4,r3
  8255dc:	08305040 	call	830504 <__mulsi3>
  8255e0:	e0bf8315 	stw	r2,-500(fp)
  8255e4:	e0bf7c17 	ldw	r2,-528(fp)
  8255e8:	10801804 	addi	r2,r2,96
  8255ec:	1080000b 	ldhu	r2,0(r2)
  8255f0:	10ffffcc 	andi	r3,r2,65535
  8255f4:	18e0001c 	xori	r3,r3,32768
  8255f8:	18e00004 	addi	r3,r3,-32768
  8255fc:	e0bf7d17 	ldw	r2,-524(fp)
  825600:	10803004 	addi	r2,r2,192
  825604:	10800017 	ldw	r2,0(r2)
  825608:	100b883a 	mov	r5,r2
  82560c:	1809883a 	mov	r4,r3
  825610:	08305040 	call	830504 <__mulsi3>
  825614:	e0bf8415 	stw	r2,-496(fp)
  825618:	e0ff8317 	ldw	r3,-500(fp)
  82561c:	e0bf8417 	ldw	r2,-496(fp)
  825620:	1885883a 	add	r2,r3,r2
  825624:	e0bf8515 	stw	r2,-492(fp)
  825628:	e0ff8317 	ldw	r3,-500(fp)
  82562c:	e0bf8417 	ldw	r2,-496(fp)
  825630:	1885c83a 	sub	r2,r3,r2
  825634:	e0bf8615 	stw	r2,-488(fp)
  825638:	01493e44 	movi	r5,9465
  82563c:	e13f8517 	ldw	r4,-492(fp)
  825640:	08305040 	call	830504 <__mulsi3>
  825644:	e0bf8715 	stw	r2,-484(fp)
  825648:	0140c644 	movi	r5,793
  82564c:	e13f8617 	ldw	r4,-488(fp)
  825650:	08305040 	call	830504 <__mulsi3>
  825654:	1007883a 	mov	r3,r2
  825658:	e0bf8117 	ldw	r2,-508(fp)
  82565c:	1885883a 	add	r2,r3,r2
  825660:	e0bf8815 	stw	r2,-480(fp)
  825664:	014afc44 	movi	r5,11249
  825668:	e13f8217 	ldw	r4,-504(fp)
  82566c:	08305040 	call	830504 <__mulsi3>
  825670:	1007883a 	mov	r3,r2
  825674:	e0bf8717 	ldw	r2,-484(fp)
  825678:	1887883a 	add	r3,r3,r2
  82567c:	e0bf8817 	ldw	r2,-480(fp)
  825680:	1885883a 	add	r2,r3,r2
  825684:	e0bf8915 	stw	r2,-476(fp)
  825688:	01440304 	movi	r5,4108
  82568c:	e13f8217 	ldw	r4,-504(fp)
  825690:	08305040 	call	830504 <__mulsi3>
  825694:	1007883a 	mov	r3,r2
  825698:	e0bf8717 	ldw	r2,-484(fp)
  82569c:	1887c83a 	sub	r3,r3,r2
  8256a0:	e0bf8817 	ldw	r2,-480(fp)
  8256a4:	1885883a 	add	r2,r3,r2
  8256a8:	e0bf8a15 	stw	r2,-472(fp)
  8256ac:	01428804 	movi	r5,2592
  8256b0:	e13f8517 	ldw	r4,-492(fp)
  8256b4:	08305040 	call	830504 <__mulsi3>
  8256b8:	e0bf8715 	stw	r2,-484(fp)
  8256bc:	0143e544 	movi	r5,3989
  8256c0:	e13f8617 	ldw	r4,-488(fp)
  8256c4:	08305040 	call	830504 <__mulsi3>
  8256c8:	1007883a 	mov	r3,r2
  8256cc:	e0bf8117 	ldw	r2,-508(fp)
  8256d0:	1885883a 	add	r2,r3,r2
  8256d4:	e0bf8815 	stw	r2,-480(fp)
  8256d8:	01487804 	movi	r5,8672
  8256dc:	e13f8217 	ldw	r4,-504(fp)
  8256e0:	08305040 	call	830504 <__mulsi3>
  8256e4:	1007883a 	mov	r3,r2
  8256e8:	e0bf8717 	ldw	r2,-484(fp)
  8256ec:	1887c83a 	sub	r3,r3,r2
  8256f0:	e0bf8817 	ldw	r2,-480(fp)
  8256f4:	1885883a 	add	r2,r3,r2
  8256f8:	e0bf8b15 	stw	r2,-468(fp)
  8256fc:	0175fb84 	movi	r5,-10258
  825700:	e13f8217 	ldw	r4,-504(fp)
  825704:	08305040 	call	830504 <__mulsi3>
  825708:	1007883a 	mov	r3,r2
  82570c:	e0bf8717 	ldw	r2,-484(fp)
  825710:	1887883a 	add	r3,r3,r2
  825714:	e0bf8817 	ldw	r2,-480(fp)
  825718:	1885883a 	add	r2,r3,r2
  82571c:	e0bf8c15 	stw	r2,-464(fp)
  825720:	01437c84 	movi	r5,3570
  825724:	e13f8517 	ldw	r4,-492(fp)
  825728:	08305040 	call	830504 <__mulsi3>
  82572c:	e0bf8715 	stw	r2,-484(fp)
  825730:	01477f84 	movi	r5,7678
  825734:	e13f8617 	ldw	r4,-488(fp)
  825738:	08305040 	call	830504 <__mulsi3>
  82573c:	1007883a 	mov	r3,r2
  825740:	e0bf8117 	ldw	r2,-508(fp)
  825744:	1885c83a 	sub	r2,r3,r2
  825748:	e0bf8815 	stw	r2,-480(fp)
  82574c:	017ea304 	movi	r5,-1396
  825750:	e13f8217 	ldw	r4,-504(fp)
  825754:	08305040 	call	830504 <__mulsi3>
  825758:	1007883a 	mov	r3,r2
  82575c:	e0bf8717 	ldw	r2,-484(fp)
  825760:	1887c83a 	sub	r3,r3,r2
  825764:	e0bf8817 	ldw	r2,-480(fp)
  825768:	1885c83a 	sub	r2,r3,r2
  82576c:	e0bf8d15 	stw	r2,-460(fp)
  825770:	017992c4 	movi	r5,-6581
  825774:	e13f8217 	ldw	r4,-504(fp)
  825778:	08305040 	call	830504 <__mulsi3>
  82577c:	1007883a 	mov	r3,r2
  825780:	e0bf8717 	ldw	r2,-484(fp)
  825784:	1887883a 	add	r3,r3,r2
  825788:	e0bf8817 	ldw	r2,-480(fp)
  82578c:	1885c83a 	sub	r2,r3,r2
  825790:	e0bf8e15 	stw	r2,-456(fp)
  825794:	e0ff8617 	ldw	r3,-488(fp)
  825798:	e0bf8217 	ldw	r2,-504(fp)
  82579c:	1885c83a 	sub	r2,r3,r2
  8257a0:	014b5044 	movi	r5,11585
  8257a4:	1009883a 	mov	r4,r2
  8257a8:	08305040 	call	830504 <__mulsi3>
  8257ac:	1007883a 	mov	r3,r2
  8257b0:	e0bf8117 	ldw	r2,-508(fp)
  8257b4:	1885883a 	add	r2,r3,r2
  8257b8:	e0bf8f15 	stw	r2,-452(fp)
  8257bc:	e0bf7c17 	ldw	r2,-528(fp)
  8257c0:	10800404 	addi	r2,r2,16
  8257c4:	1080000b 	ldhu	r2,0(r2)
  8257c8:	10ffffcc 	andi	r3,r2,65535
  8257cc:	18e0001c 	xori	r3,r3,32768
  8257d0:	18e00004 	addi	r3,r3,-32768
  8257d4:	e0bf7d17 	ldw	r2,-524(fp)
  8257d8:	10800804 	addi	r2,r2,32
  8257dc:	10800017 	ldw	r2,0(r2)
  8257e0:	100b883a 	mov	r5,r2
  8257e4:	1809883a 	mov	r4,r3
  8257e8:	08305040 	call	830504 <__mulsi3>
  8257ec:	e0bf8115 	stw	r2,-508(fp)
  8257f0:	e0bf7c17 	ldw	r2,-528(fp)
  8257f4:	10800c04 	addi	r2,r2,48
  8257f8:	1080000b 	ldhu	r2,0(r2)
  8257fc:	10ffffcc 	andi	r3,r2,65535
  825800:	18e0001c 	xori	r3,r3,32768
  825804:	18e00004 	addi	r3,r3,-32768
  825808:	e0bf7d17 	ldw	r2,-524(fp)
  82580c:	10801804 	addi	r2,r2,96
  825810:	10800017 	ldw	r2,0(r2)
  825814:	100b883a 	mov	r5,r2
  825818:	1809883a 	mov	r4,r3
  82581c:	08305040 	call	830504 <__mulsi3>
  825820:	e0bf8215 	stw	r2,-504(fp)
  825824:	e0bf7c17 	ldw	r2,-528(fp)
  825828:	10801404 	addi	r2,r2,80
  82582c:	1080000b 	ldhu	r2,0(r2)
  825830:	10ffffcc 	andi	r3,r2,65535
  825834:	18e0001c 	xori	r3,r3,32768
  825838:	18e00004 	addi	r3,r3,-32768
  82583c:	e0bf7d17 	ldw	r2,-524(fp)
  825840:	10802804 	addi	r2,r2,160
  825844:	10800017 	ldw	r2,0(r2)
  825848:	100b883a 	mov	r5,r2
  82584c:	1809883a 	mov	r4,r3
  825850:	08305040 	call	830504 <__mulsi3>
  825854:	e0bf8315 	stw	r2,-500(fp)
  825858:	e0bf7c17 	ldw	r2,-528(fp)
  82585c:	10801c04 	addi	r2,r2,112
  825860:	1080000b 	ldhu	r2,0(r2)
  825864:	10ffffcc 	andi	r3,r2,65535
  825868:	18e0001c 	xori	r3,r3,32768
  82586c:	18e00004 	addi	r3,r3,-32768
  825870:	e0bf7d17 	ldw	r2,-524(fp)
  825874:	10803804 	addi	r2,r2,224
  825878:	10800017 	ldw	r2,0(r2)
  82587c:	100b883a 	mov	r5,r2
  825880:	1809883a 	mov	r4,r3
  825884:	08305040 	call	830504 <__mulsi3>
  825888:	e0bf8415 	stw	r2,-496(fp)
  82588c:	e0ff8117 	ldw	r3,-508(fp)
  825890:	e0bf8217 	ldw	r2,-504(fp)
  825894:	1885883a 	add	r2,r3,r2
  825898:	014a9404 	movi	r5,10832
  82589c:	1009883a 	mov	r4,r2
  8258a0:	08305040 	call	830504 <__mulsi3>
  8258a4:	e0bf8615 	stw	r2,-488(fp)
  8258a8:	e0ff8117 	ldw	r3,-508(fp)
  8258ac:	e0bf8317 	ldw	r2,-500(fp)
  8258b0:	1885883a 	add	r2,r3,r2
  8258b4:	01494f84 	movi	r5,9534
  8258b8:	1009883a 	mov	r4,r2
  8258bc:	08305040 	call	830504 <__mulsi3>
  8258c0:	e0bf8715 	stw	r2,-484(fp)
  8258c4:	e0ff8117 	ldw	r3,-508(fp)
  8258c8:	e0bf8417 	ldw	r2,-496(fp)
  8258cc:	1885883a 	add	r2,r3,r2
  8258d0:	e0bf9015 	stw	r2,-448(fp)
  8258d4:	01478084 	movi	r5,7682
  8258d8:	e13f9017 	ldw	r4,-448(fp)
  8258dc:	08305040 	call	830504 <__mulsi3>
  8258e0:	e0bf8815 	stw	r2,-480(fp)
  8258e4:	e0ff8617 	ldw	r3,-488(fp)
  8258e8:	e0bf8717 	ldw	r2,-484(fp)
  8258ec:	1887883a 	add	r3,r3,r2
  8258f0:	e0bf8817 	ldw	r2,-480(fp)
  8258f4:	18a1883a 	add	r16,r3,r2
  8258f8:	016fd6c4 	movi	r5,-16549
  8258fc:	e13f8117 	ldw	r4,-508(fp)
  825900:	08305040 	call	830504 <__mulsi3>
  825904:	8085883a 	add	r2,r16,r2
  825908:	e0bf8515 	stw	r2,-492(fp)
  82590c:	e0ff8217 	ldw	r3,-504(fp)
  825910:	e0bf8317 	ldw	r2,-500(fp)
  825914:	1885883a 	add	r2,r3,r2
  825918:	017d4ac4 	movi	r5,-2773
  82591c:	1009883a 	mov	r4,r2
  825920:	08305040 	call	830504 <__mulsi3>
  825924:	e0bf9115 	stw	r2,-444(fp)
  825928:	0146b2c4 	movi	r5,6859
  82592c:	e13f8217 	ldw	r4,-504(fp)
  825930:	08305040 	call	830504 <__mulsi3>
  825934:	1007883a 	mov	r3,r2
  825938:	e0bf9117 	ldw	r2,-444(fp)
  82593c:	1885883a 	add	r2,r3,r2
  825940:	e0ff8617 	ldw	r3,-488(fp)
  825944:	1885883a 	add	r2,r3,r2
  825948:	e0bf8615 	stw	r2,-488(fp)
  82594c:	01736c44 	movi	r5,-12879
  825950:	e13f8317 	ldw	r4,-500(fp)
  825954:	08305040 	call	830504 <__mulsi3>
  825958:	1007883a 	mov	r3,r2
  82595c:	e0bf9117 	ldw	r2,-444(fp)
  825960:	1885883a 	add	r2,r3,r2
  825964:	e0ff8717 	ldw	r3,-484(fp)
  825968:	1885883a 	add	r2,r3,r2
  82596c:	e0bf8715 	stw	r2,-484(fp)
  825970:	e0ff8217 	ldw	r3,-504(fp)
  825974:	e0bf8417 	ldw	r2,-496(fp)
  825978:	1885883a 	add	r2,r3,r2
  82597c:	0176b084 	movi	r5,-9534
  825980:	1009883a 	mov	r4,r2
  825984:	08305040 	call	830504 <__mulsi3>
  825988:	e0bf9115 	stw	r2,-444(fp)
  82598c:	e0ff8617 	ldw	r3,-488(fp)
  825990:	e0bf9117 	ldw	r2,-444(fp)
  825994:	1885883a 	add	r2,r3,r2
  825998:	e0bf8615 	stw	r2,-488(fp)
  82599c:	0151a504 	movi	r5,18068
  8259a0:	e13f8417 	ldw	r4,-496(fp)
  8259a4:	08305040 	call	830504 <__mulsi3>
  8259a8:	1007883a 	mov	r3,r2
  8259ac:	e0bf9117 	ldw	r2,-444(fp)
  8259b0:	1885883a 	add	r2,r3,r2
  8259b4:	e0ff8817 	ldw	r3,-480(fp)
  8259b8:	1885883a 	add	r2,r3,r2
  8259bc:	e0bf8815 	stw	r2,-480(fp)
  8259c0:	e0ff8317 	ldw	r3,-500(fp)
  8259c4:	e0bf8417 	ldw	r2,-496(fp)
  8259c8:	1885883a 	add	r2,r3,r2
  8259cc:	017abe04 	movi	r5,-5384
  8259d0:	1009883a 	mov	r4,r2
  8259d4:	08305040 	call	830504 <__mulsi3>
  8259d8:	e0bf9115 	stw	r2,-444(fp)
  8259dc:	e0ff8717 	ldw	r3,-484(fp)
  8259e0:	e0bf9117 	ldw	r2,-444(fp)
  8259e4:	1885883a 	add	r2,r3,r2
  8259e8:	e0bf8715 	stw	r2,-484(fp)
  8259ec:	e0ff8817 	ldw	r3,-480(fp)
  8259f0:	e0bf9117 	ldw	r2,-444(fp)
  8259f4:	1885883a 	add	r2,r3,r2
  8259f8:	e0bf8815 	stw	r2,-480(fp)
  8259fc:	0142b544 	movi	r5,2773
  825a00:	e13f9017 	ldw	r4,-448(fp)
  825a04:	08305040 	call	830504 <__mulsi3>
  825a08:	e0bf9015 	stw	r2,-448(fp)
  825a0c:	01428cc4 	movi	r5,2611
  825a10:	e13f8117 	ldw	r4,-508(fp)
  825a14:	08305040 	call	830504 <__mulsi3>
  825a18:	1007883a 	mov	r3,r2
  825a1c:	e0bf9017 	ldw	r2,-448(fp)
  825a20:	18a1883a 	add	r16,r3,r2
  825a24:	017c4584 	movi	r5,-3818
  825a28:	e13f8217 	ldw	r4,-504(fp)
  825a2c:	08305040 	call	830504 <__mulsi3>
  825a30:	8085883a 	add	r2,r16,r2
  825a34:	e0bf9115 	stw	r2,-444(fp)
  825a38:	e0ff8317 	ldw	r3,-500(fp)
  825a3c:	e0bf8217 	ldw	r2,-504(fp)
  825a40:	1885c83a 	sub	r2,r3,r2
  825a44:	01478084 	movi	r5,7682
  825a48:	1009883a 	mov	r4,r2
  825a4c:	08305040 	call	830504 <__mulsi3>
  825a50:	e0bf8115 	stw	r2,-508(fp)
  825a54:	e0ff9117 	ldw	r3,-444(fp)
  825a58:	e0bf8117 	ldw	r2,-508(fp)
  825a5c:	1885883a 	add	r2,r3,r2
  825a60:	e0bf9115 	stw	r2,-444(fp)
  825a64:	01431384 	movi	r5,3150
  825a68:	e13f8317 	ldw	r4,-500(fp)
  825a6c:	08305040 	call	830504 <__mulsi3>
  825a70:	1007883a 	mov	r3,r2
  825a74:	e0bf8117 	ldw	r2,-508(fp)
  825a78:	18a1883a 	add	r16,r3,r2
  825a7c:	01720fc4 	movi	r5,-14273
  825a80:	e13f8417 	ldw	r4,-496(fp)
  825a84:	08305040 	call	830504 <__mulsi3>
  825a88:	8085883a 	add	r2,r16,r2
  825a8c:	e0ff9017 	ldw	r3,-448(fp)
  825a90:	1885883a 	add	r2,r3,r2
  825a94:	e0bf9015 	stw	r2,-448(fp)
  825a98:	e0ff8917 	ldw	r3,-476(fp)
  825a9c:	e0bf8517 	ldw	r2,-492(fp)
  825aa0:	1885883a 	add	r2,r3,r2
  825aa4:	1007d2fa 	srai	r3,r2,11
  825aa8:	e0bf7e17 	ldw	r2,-520(fp)
  825aac:	10c00015 	stw	r3,0(r2)
  825ab0:	e0bf7e17 	ldw	r2,-520(fp)
  825ab4:	10806004 	addi	r2,r2,384
  825ab8:	e13f8917 	ldw	r4,-476(fp)
  825abc:	e0ff8517 	ldw	r3,-492(fp)
  825ac0:	20c7c83a 	sub	r3,r4,r3
  825ac4:	1807d2fa 	srai	r3,r3,11
  825ac8:	10c00015 	stw	r3,0(r2)
  825acc:	e0bf7e17 	ldw	r2,-520(fp)
  825ad0:	10800804 	addi	r2,r2,32
  825ad4:	e13f8b17 	ldw	r4,-468(fp)
  825ad8:	e0ff8617 	ldw	r3,-488(fp)
  825adc:	20c7883a 	add	r3,r4,r3
  825ae0:	1807d2fa 	srai	r3,r3,11
  825ae4:	10c00015 	stw	r3,0(r2)
  825ae8:	e0bf7e17 	ldw	r2,-520(fp)
  825aec:	10805804 	addi	r2,r2,352
  825af0:	e13f8b17 	ldw	r4,-468(fp)
  825af4:	e0ff8617 	ldw	r3,-488(fp)
  825af8:	20c7c83a 	sub	r3,r4,r3
  825afc:	1807d2fa 	srai	r3,r3,11
  825b00:	10c00015 	stw	r3,0(r2)
  825b04:	e0bf7e17 	ldw	r2,-520(fp)
  825b08:	10801004 	addi	r2,r2,64
  825b0c:	e13f8a17 	ldw	r4,-472(fp)
  825b10:	e0ff8717 	ldw	r3,-484(fp)
  825b14:	20c7883a 	add	r3,r4,r3
  825b18:	1807d2fa 	srai	r3,r3,11
  825b1c:	10c00015 	stw	r3,0(r2)
  825b20:	e0bf7e17 	ldw	r2,-520(fp)
  825b24:	10805004 	addi	r2,r2,320
  825b28:	e13f8a17 	ldw	r4,-472(fp)
  825b2c:	e0ff8717 	ldw	r3,-484(fp)
  825b30:	20c7c83a 	sub	r3,r4,r3
  825b34:	1807d2fa 	srai	r3,r3,11
  825b38:	10c00015 	stw	r3,0(r2)
  825b3c:	e0bf7e17 	ldw	r2,-520(fp)
  825b40:	10801804 	addi	r2,r2,96
  825b44:	e13f8d17 	ldw	r4,-460(fp)
  825b48:	e0ff8817 	ldw	r3,-480(fp)
  825b4c:	20c7883a 	add	r3,r4,r3
  825b50:	1807d2fa 	srai	r3,r3,11
  825b54:	10c00015 	stw	r3,0(r2)
  825b58:	e0bf7e17 	ldw	r2,-520(fp)
  825b5c:	10804804 	addi	r2,r2,288
  825b60:	e13f8d17 	ldw	r4,-460(fp)
  825b64:	e0ff8817 	ldw	r3,-480(fp)
  825b68:	20c7c83a 	sub	r3,r4,r3
  825b6c:	1807d2fa 	srai	r3,r3,11
  825b70:	10c00015 	stw	r3,0(r2)
  825b74:	e0bf7e17 	ldw	r2,-520(fp)
  825b78:	10802004 	addi	r2,r2,128
  825b7c:	e13f8e17 	ldw	r4,-456(fp)
  825b80:	e0ff9117 	ldw	r3,-444(fp)
  825b84:	20c7883a 	add	r3,r4,r3
  825b88:	1807d2fa 	srai	r3,r3,11
  825b8c:	10c00015 	stw	r3,0(r2)
  825b90:	e0bf7e17 	ldw	r2,-520(fp)
  825b94:	10804004 	addi	r2,r2,256
  825b98:	e13f8e17 	ldw	r4,-456(fp)
  825b9c:	e0ff9117 	ldw	r3,-444(fp)
  825ba0:	20c7c83a 	sub	r3,r4,r3
  825ba4:	1807d2fa 	srai	r3,r3,11
  825ba8:	10c00015 	stw	r3,0(r2)
  825bac:	e0bf7e17 	ldw	r2,-520(fp)
  825bb0:	10802804 	addi	r2,r2,160
  825bb4:	e13f8c17 	ldw	r4,-464(fp)
  825bb8:	e0ff9017 	ldw	r3,-448(fp)
  825bbc:	20c7883a 	add	r3,r4,r3
  825bc0:	1807d2fa 	srai	r3,r3,11
  825bc4:	10c00015 	stw	r3,0(r2)
  825bc8:	e0bf7e17 	ldw	r2,-520(fp)
  825bcc:	10803804 	addi	r2,r2,224
  825bd0:	e13f8c17 	ldw	r4,-464(fp)
  825bd4:	e0ff9017 	ldw	r3,-448(fp)
  825bd8:	20c7c83a 	sub	r3,r4,r3
  825bdc:	1807d2fa 	srai	r3,r3,11
  825be0:	10c00015 	stw	r3,0(r2)
  825be4:	e0bf7e17 	ldw	r2,-520(fp)
  825be8:	10803004 	addi	r2,r2,192
  825bec:	e0ff8f17 	ldw	r3,-452(fp)
  825bf0:	1807d2fa 	srai	r3,r3,11
  825bf4:	10c00015 	stw	r3,0(r2)
  825bf8:	e0bf7f17 	ldw	r2,-516(fp)
  825bfc:	10800044 	addi	r2,r2,1
  825c00:	e0bf7f15 	stw	r2,-516(fp)
  825c04:	e0bf7c17 	ldw	r2,-528(fp)
  825c08:	10800084 	addi	r2,r2,2
  825c0c:	e0bf7c15 	stw	r2,-528(fp)
  825c10:	e0bf7d17 	ldw	r2,-524(fp)
  825c14:	10800104 	addi	r2,r2,4
  825c18:	e0bf7d15 	stw	r2,-524(fp)
  825c1c:	e0bf7e17 	ldw	r2,-520(fp)
  825c20:	10800104 	addi	r2,r2,4
  825c24:	e0bf7e15 	stw	r2,-520(fp)
  825c28:	e0bf7f17 	ldw	r2,-516(fp)
  825c2c:	10800210 	cmplti	r2,r2,8
  825c30:	103e411e 	bne	r2,zero,825538 <__alt_mem_epcs_flash_controller_0+0xff81c538>
  825c34:	e0bf9304 	addi	r2,fp,-436
  825c38:	e0bf7e15 	stw	r2,-520(fp)
  825c3c:	e03f7f15 	stw	zero,-516(fp)
  825c40:	0001ab06 	br	8262f0 <jpeg_idct_13x13+0xe10>
  825c44:	e0bf7f17 	ldw	r2,-516(fp)
  825c48:	1085883a 	add	r2,r2,r2
  825c4c:	1085883a 	add	r2,r2,r2
  825c50:	1007883a 	mov	r3,r2
  825c54:	e0bffe17 	ldw	r2,-8(fp)
  825c58:	10c5883a 	add	r2,r2,r3
  825c5c:	10c00017 	ldw	r3,0(r2)
  825c60:	e0800217 	ldw	r2,8(fp)
  825c64:	1885883a 	add	r2,r3,r2
  825c68:	e0bf9215 	stw	r2,-440(fp)
  825c6c:	e0bf7e17 	ldw	r2,-520(fp)
  825c70:	10800017 	ldw	r2,0(r2)
  825c74:	10900404 	addi	r2,r2,16400
  825c78:	e0bf8115 	stw	r2,-508(fp)
  825c7c:	e0bf8117 	ldw	r2,-508(fp)
  825c80:	1004937a 	slli	r2,r2,13
  825c84:	e0bf8115 	stw	r2,-508(fp)
  825c88:	e0bf7e17 	ldw	r2,-520(fp)
  825c8c:	10800204 	addi	r2,r2,8
  825c90:	10800017 	ldw	r2,0(r2)
  825c94:	e0bf8215 	stw	r2,-504(fp)
  825c98:	e0bf7e17 	ldw	r2,-520(fp)
  825c9c:	10800404 	addi	r2,r2,16
  825ca0:	10800017 	ldw	r2,0(r2)
  825ca4:	e0bf8315 	stw	r2,-500(fp)
  825ca8:	e0bf7e17 	ldw	r2,-520(fp)
  825cac:	10800604 	addi	r2,r2,24
  825cb0:	10800017 	ldw	r2,0(r2)
  825cb4:	e0bf8415 	stw	r2,-496(fp)
  825cb8:	e0ff8317 	ldw	r3,-500(fp)
  825cbc:	e0bf8417 	ldw	r2,-496(fp)
  825cc0:	1885883a 	add	r2,r3,r2
  825cc4:	e0bf8515 	stw	r2,-492(fp)
  825cc8:	e0ff8317 	ldw	r3,-500(fp)
  825ccc:	e0bf8417 	ldw	r2,-496(fp)
  825cd0:	1885c83a 	sub	r2,r3,r2
  825cd4:	e0bf8615 	stw	r2,-488(fp)
  825cd8:	01493e44 	movi	r5,9465
  825cdc:	e13f8517 	ldw	r4,-492(fp)
  825ce0:	08305040 	call	830504 <__mulsi3>
  825ce4:	e0bf8715 	stw	r2,-484(fp)
  825ce8:	0140c644 	movi	r5,793
  825cec:	e13f8617 	ldw	r4,-488(fp)
  825cf0:	08305040 	call	830504 <__mulsi3>
  825cf4:	1007883a 	mov	r3,r2
  825cf8:	e0bf8117 	ldw	r2,-508(fp)
  825cfc:	1885883a 	add	r2,r3,r2
  825d00:	e0bf8815 	stw	r2,-480(fp)
  825d04:	014afc44 	movi	r5,11249
  825d08:	e13f8217 	ldw	r4,-504(fp)
  825d0c:	08305040 	call	830504 <__mulsi3>
  825d10:	1007883a 	mov	r3,r2
  825d14:	e0bf8717 	ldw	r2,-484(fp)
  825d18:	1887883a 	add	r3,r3,r2
  825d1c:	e0bf8817 	ldw	r2,-480(fp)
  825d20:	1885883a 	add	r2,r3,r2
  825d24:	e0bf8915 	stw	r2,-476(fp)
  825d28:	01440304 	movi	r5,4108
  825d2c:	e13f8217 	ldw	r4,-504(fp)
  825d30:	08305040 	call	830504 <__mulsi3>
  825d34:	1007883a 	mov	r3,r2
  825d38:	e0bf8717 	ldw	r2,-484(fp)
  825d3c:	1887c83a 	sub	r3,r3,r2
  825d40:	e0bf8817 	ldw	r2,-480(fp)
  825d44:	1885883a 	add	r2,r3,r2
  825d48:	e0bf8a15 	stw	r2,-472(fp)
  825d4c:	01428804 	movi	r5,2592
  825d50:	e13f8517 	ldw	r4,-492(fp)
  825d54:	08305040 	call	830504 <__mulsi3>
  825d58:	e0bf8715 	stw	r2,-484(fp)
  825d5c:	0143e544 	movi	r5,3989
  825d60:	e13f8617 	ldw	r4,-488(fp)
  825d64:	08305040 	call	830504 <__mulsi3>
  825d68:	1007883a 	mov	r3,r2
  825d6c:	e0bf8117 	ldw	r2,-508(fp)
  825d70:	1885883a 	add	r2,r3,r2
  825d74:	e0bf8815 	stw	r2,-480(fp)
  825d78:	01487804 	movi	r5,8672
  825d7c:	e13f8217 	ldw	r4,-504(fp)
  825d80:	08305040 	call	830504 <__mulsi3>
  825d84:	1007883a 	mov	r3,r2
  825d88:	e0bf8717 	ldw	r2,-484(fp)
  825d8c:	1887c83a 	sub	r3,r3,r2
  825d90:	e0bf8817 	ldw	r2,-480(fp)
  825d94:	1885883a 	add	r2,r3,r2
  825d98:	e0bf8b15 	stw	r2,-468(fp)
  825d9c:	0175fb84 	movi	r5,-10258
  825da0:	e13f8217 	ldw	r4,-504(fp)
  825da4:	08305040 	call	830504 <__mulsi3>
  825da8:	1007883a 	mov	r3,r2
  825dac:	e0bf8717 	ldw	r2,-484(fp)
  825db0:	1887883a 	add	r3,r3,r2
  825db4:	e0bf8817 	ldw	r2,-480(fp)
  825db8:	1885883a 	add	r2,r3,r2
  825dbc:	e0bf8c15 	stw	r2,-464(fp)
  825dc0:	01437c84 	movi	r5,3570
  825dc4:	e13f8517 	ldw	r4,-492(fp)
  825dc8:	08305040 	call	830504 <__mulsi3>
  825dcc:	e0bf8715 	stw	r2,-484(fp)
  825dd0:	01477f84 	movi	r5,7678
  825dd4:	e13f8617 	ldw	r4,-488(fp)
  825dd8:	08305040 	call	830504 <__mulsi3>
  825ddc:	1007883a 	mov	r3,r2
  825de0:	e0bf8117 	ldw	r2,-508(fp)
  825de4:	1885c83a 	sub	r2,r3,r2
  825de8:	e0bf8815 	stw	r2,-480(fp)
  825dec:	017ea304 	movi	r5,-1396
  825df0:	e13f8217 	ldw	r4,-504(fp)
  825df4:	08305040 	call	830504 <__mulsi3>
  825df8:	1007883a 	mov	r3,r2
  825dfc:	e0bf8717 	ldw	r2,-484(fp)
  825e00:	1887c83a 	sub	r3,r3,r2
  825e04:	e0bf8817 	ldw	r2,-480(fp)
  825e08:	1885c83a 	sub	r2,r3,r2
  825e0c:	e0bf8d15 	stw	r2,-460(fp)
  825e10:	017992c4 	movi	r5,-6581
  825e14:	e13f8217 	ldw	r4,-504(fp)
  825e18:	08305040 	call	830504 <__mulsi3>
  825e1c:	1007883a 	mov	r3,r2
  825e20:	e0bf8717 	ldw	r2,-484(fp)
  825e24:	1887883a 	add	r3,r3,r2
  825e28:	e0bf8817 	ldw	r2,-480(fp)
  825e2c:	1885c83a 	sub	r2,r3,r2
  825e30:	e0bf8e15 	stw	r2,-456(fp)
  825e34:	e0ff8617 	ldw	r3,-488(fp)
  825e38:	e0bf8217 	ldw	r2,-504(fp)
  825e3c:	1885c83a 	sub	r2,r3,r2
  825e40:	014b5044 	movi	r5,11585
  825e44:	1009883a 	mov	r4,r2
  825e48:	08305040 	call	830504 <__mulsi3>
  825e4c:	1007883a 	mov	r3,r2
  825e50:	e0bf8117 	ldw	r2,-508(fp)
  825e54:	1885883a 	add	r2,r3,r2
  825e58:	e0bf8f15 	stw	r2,-452(fp)
  825e5c:	e0bf7e17 	ldw	r2,-520(fp)
  825e60:	10800104 	addi	r2,r2,4
  825e64:	10800017 	ldw	r2,0(r2)
  825e68:	e0bf8115 	stw	r2,-508(fp)
  825e6c:	e0bf7e17 	ldw	r2,-520(fp)
  825e70:	10800304 	addi	r2,r2,12
  825e74:	10800017 	ldw	r2,0(r2)
  825e78:	e0bf8215 	stw	r2,-504(fp)
  825e7c:	e0bf7e17 	ldw	r2,-520(fp)
  825e80:	10800504 	addi	r2,r2,20
  825e84:	10800017 	ldw	r2,0(r2)
  825e88:	e0bf8315 	stw	r2,-500(fp)
  825e8c:	e0bf7e17 	ldw	r2,-520(fp)
  825e90:	10800704 	addi	r2,r2,28
  825e94:	10800017 	ldw	r2,0(r2)
  825e98:	e0bf8415 	stw	r2,-496(fp)
  825e9c:	e0ff8117 	ldw	r3,-508(fp)
  825ea0:	e0bf8217 	ldw	r2,-504(fp)
  825ea4:	1885883a 	add	r2,r3,r2
  825ea8:	014a9404 	movi	r5,10832
  825eac:	1009883a 	mov	r4,r2
  825eb0:	08305040 	call	830504 <__mulsi3>
  825eb4:	e0bf8615 	stw	r2,-488(fp)
  825eb8:	e0ff8117 	ldw	r3,-508(fp)
  825ebc:	e0bf8317 	ldw	r2,-500(fp)
  825ec0:	1885883a 	add	r2,r3,r2
  825ec4:	01494f84 	movi	r5,9534
  825ec8:	1009883a 	mov	r4,r2
  825ecc:	08305040 	call	830504 <__mulsi3>
  825ed0:	e0bf8715 	stw	r2,-484(fp)
  825ed4:	e0ff8117 	ldw	r3,-508(fp)
  825ed8:	e0bf8417 	ldw	r2,-496(fp)
  825edc:	1885883a 	add	r2,r3,r2
  825ee0:	e0bf9015 	stw	r2,-448(fp)
  825ee4:	01478084 	movi	r5,7682
  825ee8:	e13f9017 	ldw	r4,-448(fp)
  825eec:	08305040 	call	830504 <__mulsi3>
  825ef0:	e0bf8815 	stw	r2,-480(fp)
  825ef4:	e0ff8617 	ldw	r3,-488(fp)
  825ef8:	e0bf8717 	ldw	r2,-484(fp)
  825efc:	1887883a 	add	r3,r3,r2
  825f00:	e0bf8817 	ldw	r2,-480(fp)
  825f04:	18a1883a 	add	r16,r3,r2
  825f08:	016fd6c4 	movi	r5,-16549
  825f0c:	e13f8117 	ldw	r4,-508(fp)
  825f10:	08305040 	call	830504 <__mulsi3>
  825f14:	8085883a 	add	r2,r16,r2
  825f18:	e0bf8515 	stw	r2,-492(fp)
  825f1c:	e0ff8217 	ldw	r3,-504(fp)
  825f20:	e0bf8317 	ldw	r2,-500(fp)
  825f24:	1885883a 	add	r2,r3,r2
  825f28:	017d4ac4 	movi	r5,-2773
  825f2c:	1009883a 	mov	r4,r2
  825f30:	08305040 	call	830504 <__mulsi3>
  825f34:	e0bf9115 	stw	r2,-444(fp)
  825f38:	0146b2c4 	movi	r5,6859
  825f3c:	e13f8217 	ldw	r4,-504(fp)
  825f40:	08305040 	call	830504 <__mulsi3>
  825f44:	1007883a 	mov	r3,r2
  825f48:	e0bf9117 	ldw	r2,-444(fp)
  825f4c:	1885883a 	add	r2,r3,r2
  825f50:	e0ff8617 	ldw	r3,-488(fp)
  825f54:	1885883a 	add	r2,r3,r2
  825f58:	e0bf8615 	stw	r2,-488(fp)
  825f5c:	01736c44 	movi	r5,-12879
  825f60:	e13f8317 	ldw	r4,-500(fp)
  825f64:	08305040 	call	830504 <__mulsi3>
  825f68:	1007883a 	mov	r3,r2
  825f6c:	e0bf9117 	ldw	r2,-444(fp)
  825f70:	1885883a 	add	r2,r3,r2
  825f74:	e0ff8717 	ldw	r3,-484(fp)
  825f78:	1885883a 	add	r2,r3,r2
  825f7c:	e0bf8715 	stw	r2,-484(fp)
  825f80:	e0ff8217 	ldw	r3,-504(fp)
  825f84:	e0bf8417 	ldw	r2,-496(fp)
  825f88:	1885883a 	add	r2,r3,r2
  825f8c:	0176b084 	movi	r5,-9534
  825f90:	1009883a 	mov	r4,r2
  825f94:	08305040 	call	830504 <__mulsi3>
  825f98:	e0bf9115 	stw	r2,-444(fp)
  825f9c:	e0ff8617 	ldw	r3,-488(fp)
  825fa0:	e0bf9117 	ldw	r2,-444(fp)
  825fa4:	1885883a 	add	r2,r3,r2
  825fa8:	e0bf8615 	stw	r2,-488(fp)
  825fac:	0151a504 	movi	r5,18068
  825fb0:	e13f8417 	ldw	r4,-496(fp)
  825fb4:	08305040 	call	830504 <__mulsi3>
  825fb8:	1007883a 	mov	r3,r2
  825fbc:	e0bf9117 	ldw	r2,-444(fp)
  825fc0:	1885883a 	add	r2,r3,r2
  825fc4:	e0ff8817 	ldw	r3,-480(fp)
  825fc8:	1885883a 	add	r2,r3,r2
  825fcc:	e0bf8815 	stw	r2,-480(fp)
  825fd0:	e0ff8317 	ldw	r3,-500(fp)
  825fd4:	e0bf8417 	ldw	r2,-496(fp)
  825fd8:	1885883a 	add	r2,r3,r2
  825fdc:	017abe04 	movi	r5,-5384
  825fe0:	1009883a 	mov	r4,r2
  825fe4:	08305040 	call	830504 <__mulsi3>
  825fe8:	e0bf9115 	stw	r2,-444(fp)
  825fec:	e0ff8717 	ldw	r3,-484(fp)
  825ff0:	e0bf9117 	ldw	r2,-444(fp)
  825ff4:	1885883a 	add	r2,r3,r2
  825ff8:	e0bf8715 	stw	r2,-484(fp)
  825ffc:	e0ff8817 	ldw	r3,-480(fp)
  826000:	e0bf9117 	ldw	r2,-444(fp)
  826004:	1885883a 	add	r2,r3,r2
  826008:	e0bf8815 	stw	r2,-480(fp)
  82600c:	0142b544 	movi	r5,2773
  826010:	e13f9017 	ldw	r4,-448(fp)
  826014:	08305040 	call	830504 <__mulsi3>
  826018:	e0bf9015 	stw	r2,-448(fp)
  82601c:	01428cc4 	movi	r5,2611
  826020:	e13f8117 	ldw	r4,-508(fp)
  826024:	08305040 	call	830504 <__mulsi3>
  826028:	1007883a 	mov	r3,r2
  82602c:	e0bf9017 	ldw	r2,-448(fp)
  826030:	18a1883a 	add	r16,r3,r2
  826034:	017c4584 	movi	r5,-3818
  826038:	e13f8217 	ldw	r4,-504(fp)
  82603c:	08305040 	call	830504 <__mulsi3>
  826040:	8085883a 	add	r2,r16,r2
  826044:	e0bf9115 	stw	r2,-444(fp)
  826048:	e0ff8317 	ldw	r3,-500(fp)
  82604c:	e0bf8217 	ldw	r2,-504(fp)
  826050:	1885c83a 	sub	r2,r3,r2
  826054:	01478084 	movi	r5,7682
  826058:	1009883a 	mov	r4,r2
  82605c:	08305040 	call	830504 <__mulsi3>
  826060:	e0bf8115 	stw	r2,-508(fp)
  826064:	e0ff9117 	ldw	r3,-444(fp)
  826068:	e0bf8117 	ldw	r2,-508(fp)
  82606c:	1885883a 	add	r2,r3,r2
  826070:	e0bf9115 	stw	r2,-444(fp)
  826074:	01431384 	movi	r5,3150
  826078:	e13f8317 	ldw	r4,-500(fp)
  82607c:	08305040 	call	830504 <__mulsi3>
  826080:	1007883a 	mov	r3,r2
  826084:	e0bf8117 	ldw	r2,-508(fp)
  826088:	18a1883a 	add	r16,r3,r2
  82608c:	01720fc4 	movi	r5,-14273
  826090:	e13f8417 	ldw	r4,-496(fp)
  826094:	08305040 	call	830504 <__mulsi3>
  826098:	8085883a 	add	r2,r16,r2
  82609c:	e0ff9017 	ldw	r3,-448(fp)
  8260a0:	1885883a 	add	r2,r3,r2
  8260a4:	e0bf9015 	stw	r2,-448(fp)
  8260a8:	e0ff8917 	ldw	r3,-476(fp)
  8260ac:	e0bf8517 	ldw	r2,-492(fp)
  8260b0:	1885883a 	add	r2,r3,r2
  8260b4:	1005d4ba 	srai	r2,r2,18
  8260b8:	1080ffcc 	andi	r2,r2,1023
  8260bc:	e0ff8017 	ldw	r3,-512(fp)
  8260c0:	1885883a 	add	r2,r3,r2
  8260c4:	10c00003 	ldbu	r3,0(r2)
  8260c8:	e0bf9217 	ldw	r2,-440(fp)
  8260cc:	10c00005 	stb	r3,0(r2)
  8260d0:	e0bf9217 	ldw	r2,-440(fp)
  8260d4:	10800304 	addi	r2,r2,12
  8260d8:	e13f8917 	ldw	r4,-476(fp)
  8260dc:	e0ff8517 	ldw	r3,-492(fp)
  8260e0:	20c7c83a 	sub	r3,r4,r3
  8260e4:	1807d4ba 	srai	r3,r3,18
  8260e8:	18c0ffcc 	andi	r3,r3,1023
  8260ec:	e13f8017 	ldw	r4,-512(fp)
  8260f0:	20c7883a 	add	r3,r4,r3
  8260f4:	18c00003 	ldbu	r3,0(r3)
  8260f8:	10c00005 	stb	r3,0(r2)
  8260fc:	e0bf9217 	ldw	r2,-440(fp)
  826100:	10800044 	addi	r2,r2,1
  826104:	e13f8b17 	ldw	r4,-468(fp)
  826108:	e0ff8617 	ldw	r3,-488(fp)
  82610c:	20c7883a 	add	r3,r4,r3
  826110:	1807d4ba 	srai	r3,r3,18
  826114:	18c0ffcc 	andi	r3,r3,1023
  826118:	e13f8017 	ldw	r4,-512(fp)
  82611c:	20c7883a 	add	r3,r4,r3
  826120:	18c00003 	ldbu	r3,0(r3)
  826124:	10c00005 	stb	r3,0(r2)
  826128:	e0bf9217 	ldw	r2,-440(fp)
  82612c:	108002c4 	addi	r2,r2,11
  826130:	e13f8b17 	ldw	r4,-468(fp)
  826134:	e0ff8617 	ldw	r3,-488(fp)
  826138:	20c7c83a 	sub	r3,r4,r3
  82613c:	1807d4ba 	srai	r3,r3,18
  826140:	18c0ffcc 	andi	r3,r3,1023
  826144:	e13f8017 	ldw	r4,-512(fp)
  826148:	20c7883a 	add	r3,r4,r3
  82614c:	18c00003 	ldbu	r3,0(r3)
  826150:	10c00005 	stb	r3,0(r2)
  826154:	e0bf9217 	ldw	r2,-440(fp)
  826158:	10800084 	addi	r2,r2,2
  82615c:	e13f8a17 	ldw	r4,-472(fp)
  826160:	e0ff8717 	ldw	r3,-484(fp)
  826164:	20c7883a 	add	r3,r4,r3
  826168:	1807d4ba 	srai	r3,r3,18
  82616c:	18c0ffcc 	andi	r3,r3,1023
  826170:	e13f8017 	ldw	r4,-512(fp)
  826174:	20c7883a 	add	r3,r4,r3
  826178:	18c00003 	ldbu	r3,0(r3)
  82617c:	10c00005 	stb	r3,0(r2)
  826180:	e0bf9217 	ldw	r2,-440(fp)
  826184:	10800284 	addi	r2,r2,10
  826188:	e13f8a17 	ldw	r4,-472(fp)
  82618c:	e0ff8717 	ldw	r3,-484(fp)
  826190:	20c7c83a 	sub	r3,r4,r3
  826194:	1807d4ba 	srai	r3,r3,18
  826198:	18c0ffcc 	andi	r3,r3,1023
  82619c:	e13f8017 	ldw	r4,-512(fp)
  8261a0:	20c7883a 	add	r3,r4,r3
  8261a4:	18c00003 	ldbu	r3,0(r3)
  8261a8:	10c00005 	stb	r3,0(r2)
  8261ac:	e0bf9217 	ldw	r2,-440(fp)
  8261b0:	108000c4 	addi	r2,r2,3
  8261b4:	e13f8d17 	ldw	r4,-460(fp)
  8261b8:	e0ff8817 	ldw	r3,-480(fp)
  8261bc:	20c7883a 	add	r3,r4,r3
  8261c0:	1807d4ba 	srai	r3,r3,18
  8261c4:	18c0ffcc 	andi	r3,r3,1023
  8261c8:	e13f8017 	ldw	r4,-512(fp)
  8261cc:	20c7883a 	add	r3,r4,r3
  8261d0:	18c00003 	ldbu	r3,0(r3)
  8261d4:	10c00005 	stb	r3,0(r2)
  8261d8:	e0bf9217 	ldw	r2,-440(fp)
  8261dc:	10800244 	addi	r2,r2,9
  8261e0:	e13f8d17 	ldw	r4,-460(fp)
  8261e4:	e0ff8817 	ldw	r3,-480(fp)
  8261e8:	20c7c83a 	sub	r3,r4,r3
  8261ec:	1807d4ba 	srai	r3,r3,18
  8261f0:	18c0ffcc 	andi	r3,r3,1023
  8261f4:	e13f8017 	ldw	r4,-512(fp)
  8261f8:	20c7883a 	add	r3,r4,r3
  8261fc:	18c00003 	ldbu	r3,0(r3)
  826200:	10c00005 	stb	r3,0(r2)
  826204:	e0bf9217 	ldw	r2,-440(fp)
  826208:	10800104 	addi	r2,r2,4
  82620c:	e13f8e17 	ldw	r4,-456(fp)
  826210:	e0ff9117 	ldw	r3,-444(fp)
  826214:	20c7883a 	add	r3,r4,r3
  826218:	1807d4ba 	srai	r3,r3,18
  82621c:	18c0ffcc 	andi	r3,r3,1023
  826220:	e13f8017 	ldw	r4,-512(fp)
  826224:	20c7883a 	add	r3,r4,r3
  826228:	18c00003 	ldbu	r3,0(r3)
  82622c:	10c00005 	stb	r3,0(r2)
  826230:	e0bf9217 	ldw	r2,-440(fp)
  826234:	10800204 	addi	r2,r2,8
  826238:	e13f8e17 	ldw	r4,-456(fp)
  82623c:	e0ff9117 	ldw	r3,-444(fp)
  826240:	20c7c83a 	sub	r3,r4,r3
  826244:	1807d4ba 	srai	r3,r3,18
  826248:	18c0ffcc 	andi	r3,r3,1023
  82624c:	e13f8017 	ldw	r4,-512(fp)
  826250:	20c7883a 	add	r3,r4,r3
  826254:	18c00003 	ldbu	r3,0(r3)
  826258:	10c00005 	stb	r3,0(r2)
  82625c:	e0bf9217 	ldw	r2,-440(fp)
  826260:	10800144 	addi	r2,r2,5
  826264:	e13f8c17 	ldw	r4,-464(fp)
  826268:	e0ff9017 	ldw	r3,-448(fp)
  82626c:	20c7883a 	add	r3,r4,r3
  826270:	1807d4ba 	srai	r3,r3,18
  826274:	18c0ffcc 	andi	r3,r3,1023
  826278:	e13f8017 	ldw	r4,-512(fp)
  82627c:	20c7883a 	add	r3,r4,r3
  826280:	18c00003 	ldbu	r3,0(r3)
  826284:	10c00005 	stb	r3,0(r2)
  826288:	e0bf9217 	ldw	r2,-440(fp)
  82628c:	108001c4 	addi	r2,r2,7
  826290:	e13f8c17 	ldw	r4,-464(fp)
  826294:	e0ff9017 	ldw	r3,-448(fp)
  826298:	20c7c83a 	sub	r3,r4,r3
  82629c:	1807d4ba 	srai	r3,r3,18
  8262a0:	18c0ffcc 	andi	r3,r3,1023
  8262a4:	e13f8017 	ldw	r4,-512(fp)
  8262a8:	20c7883a 	add	r3,r4,r3
  8262ac:	18c00003 	ldbu	r3,0(r3)
  8262b0:	10c00005 	stb	r3,0(r2)
  8262b4:	e0bf9217 	ldw	r2,-440(fp)
  8262b8:	10800184 	addi	r2,r2,6
  8262bc:	e0ff8f17 	ldw	r3,-452(fp)
  8262c0:	1807d4ba 	srai	r3,r3,18
  8262c4:	18c0ffcc 	andi	r3,r3,1023
  8262c8:	e13f8017 	ldw	r4,-512(fp)
  8262cc:	20c7883a 	add	r3,r4,r3
  8262d0:	18c00003 	ldbu	r3,0(r3)
  8262d4:	10c00005 	stb	r3,0(r2)
  8262d8:	e0bf7e17 	ldw	r2,-520(fp)
  8262dc:	10800804 	addi	r2,r2,32
  8262e0:	e0bf7e15 	stw	r2,-520(fp)
  8262e4:	e0bf7f17 	ldw	r2,-516(fp)
  8262e8:	10800044 	addi	r2,r2,1
  8262ec:	e0bf7f15 	stw	r2,-516(fp)
  8262f0:	e0bf7f17 	ldw	r2,-516(fp)
  8262f4:	10800350 	cmplti	r2,r2,13
  8262f8:	103e521e 	bne	r2,zero,825c44 <__alt_mem_epcs_flash_controller_0+0xff81cc44>
  8262fc:	0001883a 	nop
  826300:	e6ffff04 	addi	sp,fp,-4
  826304:	dfc00217 	ldw	ra,8(sp)
  826308:	df000117 	ldw	fp,4(sp)
  82630c:	dc000017 	ldw	r16,0(sp)
  826310:	dec00304 	addi	sp,sp,12
  826314:	f800283a 	ret

00826318 <jpeg_idct_14x14>:
  826318:	deff7104 	addi	sp,sp,-572
  82631c:	dfc08e15 	stw	ra,568(sp)
  826320:	df008d15 	stw	fp,564(sp)
  826324:	dc008c15 	stw	r16,560(sp)
  826328:	df008d04 	addi	fp,sp,564
  82632c:	e13ffb15 	stw	r4,-20(fp)
  826330:	e17ffc15 	stw	r5,-16(fp)
  826334:	e1bffd15 	stw	r6,-12(fp)
  826338:	e1fffe15 	stw	r7,-8(fp)
  82633c:	e0bffb17 	ldw	r2,-20(fp)
  826340:	10805417 	ldw	r2,336(r2)
  826344:	10bfa004 	addi	r2,r2,-384
  826348:	e0bf7715 	stw	r2,-548(fp)
  82634c:	e0bffd17 	ldw	r2,-12(fp)
  826350:	e0bf7315 	stw	r2,-564(fp)
  826354:	e0bffc17 	ldw	r2,-16(fp)
  826358:	10801517 	ldw	r2,84(r2)
  82635c:	e0bf7415 	stw	r2,-560(fp)
  826360:	e0bf8b04 	addi	r2,fp,-468
  826364:	e0bf7515 	stw	r2,-556(fp)
  826368:	e03f7615 	stw	zero,-552(fp)
  82636c:	0001a606 	br	826a08 <jpeg_idct_14x14+0x6f0>
  826370:	e0bf7317 	ldw	r2,-564(fp)
  826374:	1080000b 	ldhu	r2,0(r2)
  826378:	10ffffcc 	andi	r3,r2,65535
  82637c:	18e0001c 	xori	r3,r3,32768
  826380:	18e00004 	addi	r3,r3,-32768
  826384:	e0bf7417 	ldw	r2,-560(fp)
  826388:	10800017 	ldw	r2,0(r2)
  82638c:	100b883a 	mov	r5,r2
  826390:	1809883a 	mov	r4,r3
  826394:	08305040 	call	830504 <__mulsi3>
  826398:	e0bf7815 	stw	r2,-544(fp)
  82639c:	e0bf7817 	ldw	r2,-544(fp)
  8263a0:	1004937a 	slli	r2,r2,13
  8263a4:	e0bf7815 	stw	r2,-544(fp)
  8263a8:	e0bf7817 	ldw	r2,-544(fp)
  8263ac:	10810004 	addi	r2,r2,1024
  8263b0:	e0bf7815 	stw	r2,-544(fp)
  8263b4:	e0bf7317 	ldw	r2,-564(fp)
  8263b8:	10801004 	addi	r2,r2,64
  8263bc:	1080000b 	ldhu	r2,0(r2)
  8263c0:	10ffffcc 	andi	r3,r2,65535
  8263c4:	18e0001c 	xori	r3,r3,32768
  8263c8:	18e00004 	addi	r3,r3,-32768
  8263cc:	e0bf7417 	ldw	r2,-560(fp)
  8263d0:	10802004 	addi	r2,r2,128
  8263d4:	10800017 	ldw	r2,0(r2)
  8263d8:	100b883a 	mov	r5,r2
  8263dc:	1809883a 	mov	r4,r3
  8263e0:	08305040 	call	830504 <__mulsi3>
  8263e4:	e0bf7915 	stw	r2,-540(fp)
  8263e8:	014a3184 	movi	r5,10438
  8263ec:	e13f7917 	ldw	r4,-540(fp)
  8263f0:	08305040 	call	830504 <__mulsi3>
  8263f4:	e0bf7a15 	stw	r2,-536(fp)
  8263f8:	01428484 	movi	r5,2578
  8263fc:	e13f7917 	ldw	r4,-540(fp)
  826400:	08305040 	call	830504 <__mulsi3>
  826404:	e0bf7b15 	stw	r2,-532(fp)
  826408:	01470dc4 	movi	r5,7223
  82640c:	e13f7917 	ldw	r4,-540(fp)
  826410:	08305040 	call	830504 <__mulsi3>
  826414:	e0bf7915 	stw	r2,-540(fp)
  826418:	e0ff7817 	ldw	r3,-544(fp)
  82641c:	e0bf7a17 	ldw	r2,-536(fp)
  826420:	1885883a 	add	r2,r3,r2
  826424:	e0bf7c15 	stw	r2,-528(fp)
  826428:	e0ff7817 	ldw	r3,-544(fp)
  82642c:	e0bf7b17 	ldw	r2,-532(fp)
  826430:	1885883a 	add	r2,r3,r2
  826434:	e0bf7d15 	stw	r2,-524(fp)
  826438:	e0ff7817 	ldw	r3,-544(fp)
  82643c:	e0bf7917 	ldw	r2,-540(fp)
  826440:	1885c83a 	sub	r2,r3,r2
  826444:	e0bf7e15 	stw	r2,-520(fp)
  826448:	e0ff7a17 	ldw	r3,-536(fp)
  82644c:	e0bf7b17 	ldw	r2,-532(fp)
  826450:	1887883a 	add	r3,r3,r2
  826454:	e0bf7917 	ldw	r2,-540(fp)
  826458:	1885c83a 	sub	r2,r3,r2
  82645c:	1085883a 	add	r2,r2,r2
  826460:	1007883a 	mov	r3,r2
  826464:	e0bf7817 	ldw	r2,-544(fp)
  826468:	10c5c83a 	sub	r2,r2,r3
  82646c:	1005d2fa 	srai	r2,r2,11
  826470:	e0bf7f15 	stw	r2,-516(fp)
  826474:	e0bf7317 	ldw	r2,-564(fp)
  826478:	10800804 	addi	r2,r2,32
  82647c:	1080000b 	ldhu	r2,0(r2)
  826480:	10ffffcc 	andi	r3,r2,65535
  826484:	18e0001c 	xori	r3,r3,32768
  826488:	18e00004 	addi	r3,r3,-32768
  82648c:	e0bf7417 	ldw	r2,-560(fp)
  826490:	10801004 	addi	r2,r2,64
  826494:	10800017 	ldw	r2,0(r2)
  826498:	100b883a 	mov	r5,r2
  82649c:	1809883a 	mov	r4,r3
  8264a0:	08305040 	call	830504 <__mulsi3>
  8264a4:	e0bf7815 	stw	r2,-544(fp)
  8264a8:	e0bf7317 	ldw	r2,-564(fp)
  8264ac:	10801804 	addi	r2,r2,96
  8264b0:	1080000b 	ldhu	r2,0(r2)
  8264b4:	10ffffcc 	andi	r3,r2,65535
  8264b8:	18e0001c 	xori	r3,r3,32768
  8264bc:	18e00004 	addi	r3,r3,-32768
  8264c0:	e0bf7417 	ldw	r2,-560(fp)
  8264c4:	10803004 	addi	r2,r2,192
  8264c8:	10800017 	ldw	r2,0(r2)
  8264cc:	100b883a 	mov	r5,r2
  8264d0:	1809883a 	mov	r4,r3
  8264d4:	08305040 	call	830504 <__mulsi3>
  8264d8:	e0bf7a15 	stw	r2,-536(fp)
  8264dc:	e0ff7817 	ldw	r3,-544(fp)
  8264e0:	e0bf7a17 	ldw	r2,-536(fp)
  8264e4:	1885883a 	add	r2,r3,r2
  8264e8:	0148d884 	movi	r5,9058
  8264ec:	1009883a 	mov	r4,r2
  8264f0:	08305040 	call	830504 <__mulsi3>
  8264f4:	e0bf7b15 	stw	r2,-532(fp)
  8264f8:	01422f44 	movi	r5,2237
  8264fc:	e13f7817 	ldw	r4,-544(fp)
  826500:	08305040 	call	830504 <__mulsi3>
  826504:	1007883a 	mov	r3,r2
  826508:	e0bf7b17 	ldw	r2,-532(fp)
  82650c:	1885883a 	add	r2,r3,r2
  826510:	e0bf8015 	stw	r2,-512(fp)
  826514:	01723f04 	movi	r5,-14084
  826518:	e13f7a17 	ldw	r4,-536(fp)
  82651c:	08305040 	call	830504 <__mulsi3>
  826520:	1007883a 	mov	r3,r2
  826524:	e0bf7b17 	ldw	r2,-532(fp)
  826528:	1885883a 	add	r2,r3,r2
  82652c:	e0bf8115 	stw	r2,-508(fp)
  826530:	0144e8c4 	movi	r5,5027
  826534:	e13f7817 	ldw	r4,-544(fp)
  826538:	08305040 	call	830504 <__mulsi3>
  82653c:	1021883a 	mov	r16,r2
  826540:	0174f844 	movi	r5,-11295
  826544:	e13f7a17 	ldw	r4,-536(fp)
  826548:	08305040 	call	830504 <__mulsi3>
  82654c:	8085883a 	add	r2,r16,r2
  826550:	e0bf8215 	stw	r2,-504(fp)
  826554:	e0ff7c17 	ldw	r3,-528(fp)
  826558:	e0bf8017 	ldw	r2,-512(fp)
  82655c:	1885883a 	add	r2,r3,r2
  826560:	e0bf8315 	stw	r2,-500(fp)
  826564:	e0ff7c17 	ldw	r3,-528(fp)
  826568:	e0bf8017 	ldw	r2,-512(fp)
  82656c:	1885c83a 	sub	r2,r3,r2
  826570:	e0bf8415 	stw	r2,-496(fp)
  826574:	e0ff7d17 	ldw	r3,-524(fp)
  826578:	e0bf8117 	ldw	r2,-508(fp)
  82657c:	1885883a 	add	r2,r3,r2
  826580:	e0bf8515 	stw	r2,-492(fp)
  826584:	e0ff7d17 	ldw	r3,-524(fp)
  826588:	e0bf8117 	ldw	r2,-508(fp)
  82658c:	1885c83a 	sub	r2,r3,r2
  826590:	e0bf8615 	stw	r2,-488(fp)
  826594:	e0ff7e17 	ldw	r3,-520(fp)
  826598:	e0bf8217 	ldw	r2,-504(fp)
  82659c:	1885883a 	add	r2,r3,r2
  8265a0:	e0bf8715 	stw	r2,-484(fp)
  8265a4:	e0ff7e17 	ldw	r3,-520(fp)
  8265a8:	e0bf8217 	ldw	r2,-504(fp)
  8265ac:	1885c83a 	sub	r2,r3,r2
  8265b0:	e0bf8815 	stw	r2,-480(fp)
  8265b4:	e0bf7317 	ldw	r2,-564(fp)
  8265b8:	10800404 	addi	r2,r2,16
  8265bc:	1080000b 	ldhu	r2,0(r2)
  8265c0:	10ffffcc 	andi	r3,r2,65535
  8265c4:	18e0001c 	xori	r3,r3,32768
  8265c8:	18e00004 	addi	r3,r3,-32768
  8265cc:	e0bf7417 	ldw	r2,-560(fp)
  8265d0:	10800804 	addi	r2,r2,32
  8265d4:	10800017 	ldw	r2,0(r2)
  8265d8:	100b883a 	mov	r5,r2
  8265dc:	1809883a 	mov	r4,r3
  8265e0:	08305040 	call	830504 <__mulsi3>
  8265e4:	e0bf7815 	stw	r2,-544(fp)
  8265e8:	e0bf7317 	ldw	r2,-564(fp)
  8265ec:	10800c04 	addi	r2,r2,48
  8265f0:	1080000b 	ldhu	r2,0(r2)
  8265f4:	10ffffcc 	andi	r3,r2,65535
  8265f8:	18e0001c 	xori	r3,r3,32768
  8265fc:	18e00004 	addi	r3,r3,-32768
  826600:	e0bf7417 	ldw	r2,-560(fp)
  826604:	10801804 	addi	r2,r2,96
  826608:	10800017 	ldw	r2,0(r2)
  82660c:	100b883a 	mov	r5,r2
  826610:	1809883a 	mov	r4,r3
  826614:	08305040 	call	830504 <__mulsi3>
  826618:	e0bf7a15 	stw	r2,-536(fp)
  82661c:	e0bf7317 	ldw	r2,-564(fp)
  826620:	10801404 	addi	r2,r2,80
  826624:	1080000b 	ldhu	r2,0(r2)
  826628:	10ffffcc 	andi	r3,r2,65535
  82662c:	18e0001c 	xori	r3,r3,32768
  826630:	18e00004 	addi	r3,r3,-32768
  826634:	e0bf7417 	ldw	r2,-560(fp)
  826638:	10802804 	addi	r2,r2,160
  82663c:	10800017 	ldw	r2,0(r2)
  826640:	100b883a 	mov	r5,r2
  826644:	1809883a 	mov	r4,r3
  826648:	08305040 	call	830504 <__mulsi3>
  82664c:	e0bf7b15 	stw	r2,-532(fp)
  826650:	e0bf7317 	ldw	r2,-564(fp)
  826654:	10801c04 	addi	r2,r2,112
  826658:	1080000b 	ldhu	r2,0(r2)
  82665c:	10ffffcc 	andi	r3,r2,65535
  826660:	18e0001c 	xori	r3,r3,32768
  826664:	18e00004 	addi	r3,r3,-32768
  826668:	e0bf7417 	ldw	r2,-560(fp)
  82666c:	10803804 	addi	r2,r2,224
  826670:	10800017 	ldw	r2,0(r2)
  826674:	100b883a 	mov	r5,r2
  826678:	1809883a 	mov	r4,r3
  82667c:	08305040 	call	830504 <__mulsi3>
  826680:	e0bf7915 	stw	r2,-540(fp)
  826684:	e0bf7917 	ldw	r2,-540(fp)
  826688:	1004937a 	slli	r2,r2,13
  82668c:	e0bf8015 	stw	r2,-512(fp)
  826690:	e0ff7817 	ldw	r3,-544(fp)
  826694:	e0bf7b17 	ldw	r2,-532(fp)
  826698:	1885883a 	add	r2,r3,r2
  82669c:	e0bf8115 	stw	r2,-508(fp)
  8266a0:	e0ff7817 	ldw	r3,-544(fp)
  8266a4:	e0bf7a17 	ldw	r2,-536(fp)
  8266a8:	1885883a 	add	r2,r3,r2
  8266ac:	014aadc4 	movi	r5,10935
  8266b0:	1009883a 	mov	r4,r2
  8266b4:	08305040 	call	830504 <__mulsi3>
  8266b8:	e0bf7d15 	stw	r2,-524(fp)
  8266bc:	01499484 	movi	r5,9810
  8266c0:	e13f8117 	ldw	r4,-508(fp)
  8266c4:	08305040 	call	830504 <__mulsi3>
  8266c8:	e0bf7e15 	stw	r2,-520(fp)
  8266cc:	e0ff7d17 	ldw	r3,-524(fp)
  8266d0:	e0bf7e17 	ldw	r2,-520(fp)
  8266d4:	1887883a 	add	r3,r3,r2
  8266d8:	e0bf8017 	ldw	r2,-512(fp)
  8266dc:	18a1883a 	add	r16,r3,r2
  8266e0:	0176fc04 	movi	r5,-9232
  8266e4:	e13f7817 	ldw	r4,-544(fp)
  8266e8:	08305040 	call	830504 <__mulsi3>
  8266ec:	8085883a 	add	r2,r16,r2
  8266f0:	e0bf7c15 	stw	r2,-528(fp)
  8266f4:	01460504 	movi	r5,6164
  8266f8:	e13f8117 	ldw	r4,-508(fp)
  8266fc:	08305040 	call	830504 <__mulsi3>
  826700:	e0bf8115 	stw	r2,-508(fp)
  826704:	017782c4 	movi	r5,-8693
  826708:	e13f7817 	ldw	r4,-544(fp)
  82670c:	08305040 	call	830504 <__mulsi3>
  826710:	1007883a 	mov	r3,r2
  826714:	e0bf8117 	ldw	r2,-508(fp)
  826718:	1885883a 	add	r2,r3,r2
  82671c:	e0bf8915 	stw	r2,-476(fp)
  826720:	e0ff7817 	ldw	r3,-544(fp)
  826724:	e0bf7a17 	ldw	r2,-536(fp)
  826728:	1885c83a 	sub	r2,r3,r2
  82672c:	e0bf7815 	stw	r2,-544(fp)
  826730:	0143bc84 	movi	r5,3826
  826734:	e13f7817 	ldw	r4,-544(fp)
  826738:	08305040 	call	830504 <__mulsi3>
  82673c:	1007883a 	mov	r3,r2
  826740:	e0bf8017 	ldw	r2,-512(fp)
  826744:	1885c83a 	sub	r2,r3,r2
  826748:	e0bf8215 	stw	r2,-504(fp)
  82674c:	e0ff8917 	ldw	r3,-476(fp)
  826750:	e0bf8217 	ldw	r2,-504(fp)
  826754:	1885883a 	add	r2,r3,r2
  826758:	e0bf8915 	stw	r2,-476(fp)
  82675c:	e0ff7817 	ldw	r3,-544(fp)
  826760:	e0bf7917 	ldw	r2,-540(fp)
  826764:	1885883a 	add	r2,r3,r2
  826768:	e0bf7815 	stw	r2,-544(fp)
  82676c:	e0ff7a17 	ldw	r3,-536(fp)
  826770:	e0bf7b17 	ldw	r2,-532(fp)
  826774:	1885883a 	add	r2,r3,r2
  826778:	017ebbc4 	movi	r5,-1297
  82677c:	1009883a 	mov	r4,r2
  826780:	08305040 	call	830504 <__mulsi3>
  826784:	1007883a 	mov	r3,r2
  826788:	e0bf8017 	ldw	r2,-512(fp)
  82678c:	1885c83a 	sub	r2,r3,r2
  826790:	e0bf7915 	stw	r2,-540(fp)
  826794:	017c9b84 	movi	r5,-3474
  826798:	e13f7a17 	ldw	r4,-536(fp)
  82679c:	08305040 	call	830504 <__mulsi3>
  8267a0:	1007883a 	mov	r3,r2
  8267a4:	e0bf7917 	ldw	r2,-540(fp)
  8267a8:	1885883a 	add	r2,r3,r2
  8267ac:	e0ff7d17 	ldw	r3,-524(fp)
  8267b0:	1885883a 	add	r2,r3,r2
  8267b4:	e0bf7d15 	stw	r2,-524(fp)
  8267b8:	016d0244 	movi	r5,-19447
  8267bc:	e13f7b17 	ldw	r4,-532(fp)
  8267c0:	08305040 	call	830504 <__mulsi3>
  8267c4:	1007883a 	mov	r3,r2
  8267c8:	e0bf7917 	ldw	r2,-540(fp)
  8267cc:	1885883a 	add	r2,r3,r2
  8267d0:	e0ff7e17 	ldw	r3,-520(fp)
  8267d4:	1885883a 	add	r2,r3,r2
  8267d8:	e0bf7e15 	stw	r2,-520(fp)
  8267dc:	e0ff7b17 	ldw	r3,-532(fp)
  8267e0:	e0bf7a17 	ldw	r2,-536(fp)
  8267e4:	1885c83a 	sub	r2,r3,r2
  8267e8:	014b3e04 	movi	r5,11512
  8267ec:	1009883a 	mov	r4,r2
  8267f0:	08305040 	call	830504 <__mulsi3>
  8267f4:	e0bf7915 	stw	r2,-540(fp)
  8267f8:	e0ff7917 	ldw	r3,-540(fp)
  8267fc:	e0bf8017 	ldw	r2,-512(fp)
  826800:	18a1883a 	add	r16,r3,r2
  826804:	01727984 	movi	r5,-13850
  826808:	e13f7b17 	ldw	r4,-532(fp)
  82680c:	08305040 	call	830504 <__mulsi3>
  826810:	8085883a 	add	r2,r16,r2
  826814:	e0ff8117 	ldw	r3,-508(fp)
  826818:	1885883a 	add	r2,r3,r2
  82681c:	e0bf8115 	stw	r2,-508(fp)
  826820:	01456644 	movi	r5,5529
  826824:	e13f7a17 	ldw	r4,-536(fp)
  826828:	08305040 	call	830504 <__mulsi3>
  82682c:	1007883a 	mov	r3,r2
  826830:	e0bf7917 	ldw	r2,-540(fp)
  826834:	1885883a 	add	r2,r3,r2
  826838:	e0ff8217 	ldw	r3,-504(fp)
  82683c:	1885883a 	add	r2,r3,r2
  826840:	e0bf8215 	stw	r2,-504(fp)
  826844:	e0ff7817 	ldw	r3,-544(fp)
  826848:	e0bf7b17 	ldw	r2,-532(fp)
  82684c:	1885c83a 	sub	r2,r3,r2
  826850:	1085883a 	add	r2,r2,r2
  826854:	1085883a 	add	r2,r2,r2
  826858:	e0bf8015 	stw	r2,-512(fp)
  82685c:	e0ff8317 	ldw	r3,-500(fp)
  826860:	e0bf7c17 	ldw	r2,-528(fp)
  826864:	1885883a 	add	r2,r3,r2
  826868:	1007d2fa 	srai	r3,r2,11
  82686c:	e0bf7517 	ldw	r2,-556(fp)
  826870:	10c00015 	stw	r3,0(r2)
  826874:	e0bf7517 	ldw	r2,-556(fp)
  826878:	10806804 	addi	r2,r2,416
  82687c:	e13f8317 	ldw	r4,-500(fp)
  826880:	e0ff7c17 	ldw	r3,-528(fp)
  826884:	20c7c83a 	sub	r3,r4,r3
  826888:	1807d2fa 	srai	r3,r3,11
  82688c:	10c00015 	stw	r3,0(r2)
  826890:	e0bf7517 	ldw	r2,-556(fp)
  826894:	10800804 	addi	r2,r2,32
  826898:	e13f8517 	ldw	r4,-492(fp)
  82689c:	e0ff7d17 	ldw	r3,-524(fp)
  8268a0:	20c7883a 	add	r3,r4,r3
  8268a4:	1807d2fa 	srai	r3,r3,11
  8268a8:	10c00015 	stw	r3,0(r2)
  8268ac:	e0bf7517 	ldw	r2,-556(fp)
  8268b0:	10806004 	addi	r2,r2,384
  8268b4:	e13f8517 	ldw	r4,-492(fp)
  8268b8:	e0ff7d17 	ldw	r3,-524(fp)
  8268bc:	20c7c83a 	sub	r3,r4,r3
  8268c0:	1807d2fa 	srai	r3,r3,11
  8268c4:	10c00015 	stw	r3,0(r2)
  8268c8:	e0bf7517 	ldw	r2,-556(fp)
  8268cc:	10801004 	addi	r2,r2,64
  8268d0:	e13f8717 	ldw	r4,-484(fp)
  8268d4:	e0ff7e17 	ldw	r3,-520(fp)
  8268d8:	20c7883a 	add	r3,r4,r3
  8268dc:	1807d2fa 	srai	r3,r3,11
  8268e0:	10c00015 	stw	r3,0(r2)
  8268e4:	e0bf7517 	ldw	r2,-556(fp)
  8268e8:	10805804 	addi	r2,r2,352
  8268ec:	e13f8717 	ldw	r4,-484(fp)
  8268f0:	e0ff7e17 	ldw	r3,-520(fp)
  8268f4:	20c7c83a 	sub	r3,r4,r3
  8268f8:	1807d2fa 	srai	r3,r3,11
  8268fc:	10c00015 	stw	r3,0(r2)
  826900:	e0bf7517 	ldw	r2,-556(fp)
  826904:	10801804 	addi	r2,r2,96
  826908:	e13f7f17 	ldw	r4,-516(fp)
  82690c:	e0ff8017 	ldw	r3,-512(fp)
  826910:	20c7883a 	add	r3,r4,r3
  826914:	10c00015 	stw	r3,0(r2)
  826918:	e0bf7517 	ldw	r2,-556(fp)
  82691c:	10805004 	addi	r2,r2,320
  826920:	e13f7f17 	ldw	r4,-516(fp)
  826924:	e0ff8017 	ldw	r3,-512(fp)
  826928:	20c7c83a 	sub	r3,r4,r3
  82692c:	10c00015 	stw	r3,0(r2)
  826930:	e0bf7517 	ldw	r2,-556(fp)
  826934:	10802004 	addi	r2,r2,128
  826938:	e13f8817 	ldw	r4,-480(fp)
  82693c:	e0ff8117 	ldw	r3,-508(fp)
  826940:	20c7883a 	add	r3,r4,r3
  826944:	1807d2fa 	srai	r3,r3,11
  826948:	10c00015 	stw	r3,0(r2)
  82694c:	e0bf7517 	ldw	r2,-556(fp)
  826950:	10804804 	addi	r2,r2,288
  826954:	e13f8817 	ldw	r4,-480(fp)
  826958:	e0ff8117 	ldw	r3,-508(fp)
  82695c:	20c7c83a 	sub	r3,r4,r3
  826960:	1807d2fa 	srai	r3,r3,11
  826964:	10c00015 	stw	r3,0(r2)
  826968:	e0bf7517 	ldw	r2,-556(fp)
  82696c:	10802804 	addi	r2,r2,160
  826970:	e13f8617 	ldw	r4,-488(fp)
  826974:	e0ff8217 	ldw	r3,-504(fp)
  826978:	20c7883a 	add	r3,r4,r3
  82697c:	1807d2fa 	srai	r3,r3,11
  826980:	10c00015 	stw	r3,0(r2)
  826984:	e0bf7517 	ldw	r2,-556(fp)
  826988:	10804004 	addi	r2,r2,256
  82698c:	e13f8617 	ldw	r4,-488(fp)
  826990:	e0ff8217 	ldw	r3,-504(fp)
  826994:	20c7c83a 	sub	r3,r4,r3
  826998:	1807d2fa 	srai	r3,r3,11
  82699c:	10c00015 	stw	r3,0(r2)
  8269a0:	e0bf7517 	ldw	r2,-556(fp)
  8269a4:	10803004 	addi	r2,r2,192
  8269a8:	e13f8417 	ldw	r4,-496(fp)
  8269ac:	e0ff8917 	ldw	r3,-476(fp)
  8269b0:	20c7883a 	add	r3,r4,r3
  8269b4:	1807d2fa 	srai	r3,r3,11
  8269b8:	10c00015 	stw	r3,0(r2)
  8269bc:	e0bf7517 	ldw	r2,-556(fp)
  8269c0:	10803804 	addi	r2,r2,224
  8269c4:	e13f8417 	ldw	r4,-496(fp)
  8269c8:	e0ff8917 	ldw	r3,-476(fp)
  8269cc:	20c7c83a 	sub	r3,r4,r3
  8269d0:	1807d2fa 	srai	r3,r3,11
  8269d4:	10c00015 	stw	r3,0(r2)
  8269d8:	e0bf7617 	ldw	r2,-552(fp)
  8269dc:	10800044 	addi	r2,r2,1
  8269e0:	e0bf7615 	stw	r2,-552(fp)
  8269e4:	e0bf7317 	ldw	r2,-564(fp)
  8269e8:	10800084 	addi	r2,r2,2
  8269ec:	e0bf7315 	stw	r2,-564(fp)
  8269f0:	e0bf7417 	ldw	r2,-560(fp)
  8269f4:	10800104 	addi	r2,r2,4
  8269f8:	e0bf7415 	stw	r2,-560(fp)
  8269fc:	e0bf7517 	ldw	r2,-556(fp)
  826a00:	10800104 	addi	r2,r2,4
  826a04:	e0bf7515 	stw	r2,-556(fp)
  826a08:	e0bf7617 	ldw	r2,-552(fp)
  826a0c:	10800210 	cmplti	r2,r2,8
  826a10:	103e571e 	bne	r2,zero,826370 <__alt_mem_epcs_flash_controller_0+0xff81d370>
  826a14:	e0bf8b04 	addi	r2,fp,-468
  826a18:	e0bf7515 	stw	r2,-556(fp)
  826a1c:	e03f7615 	stw	zero,-552(fp)
  826a20:	00019706 	br	827080 <jpeg_idct_14x14+0xd68>
  826a24:	e0bf7617 	ldw	r2,-552(fp)
  826a28:	1085883a 	add	r2,r2,r2
  826a2c:	1085883a 	add	r2,r2,r2
  826a30:	1007883a 	mov	r3,r2
  826a34:	e0bffe17 	ldw	r2,-8(fp)
  826a38:	10c5883a 	add	r2,r2,r3
  826a3c:	10c00017 	ldw	r3,0(r2)
  826a40:	e0800217 	ldw	r2,8(fp)
  826a44:	1885883a 	add	r2,r3,r2
  826a48:	e0bf8a15 	stw	r2,-472(fp)
  826a4c:	e0bf7517 	ldw	r2,-556(fp)
  826a50:	10800017 	ldw	r2,0(r2)
  826a54:	10900404 	addi	r2,r2,16400
  826a58:	e0bf7815 	stw	r2,-544(fp)
  826a5c:	e0bf7817 	ldw	r2,-544(fp)
  826a60:	1004937a 	slli	r2,r2,13
  826a64:	e0bf7815 	stw	r2,-544(fp)
  826a68:	e0bf7517 	ldw	r2,-556(fp)
  826a6c:	10800404 	addi	r2,r2,16
  826a70:	10800017 	ldw	r2,0(r2)
  826a74:	e0bf7915 	stw	r2,-540(fp)
  826a78:	014a3184 	movi	r5,10438
  826a7c:	e13f7917 	ldw	r4,-540(fp)
  826a80:	08305040 	call	830504 <__mulsi3>
  826a84:	e0bf7a15 	stw	r2,-536(fp)
  826a88:	01428484 	movi	r5,2578
  826a8c:	e13f7917 	ldw	r4,-540(fp)
  826a90:	08305040 	call	830504 <__mulsi3>
  826a94:	e0bf7b15 	stw	r2,-532(fp)
  826a98:	01470dc4 	movi	r5,7223
  826a9c:	e13f7917 	ldw	r4,-540(fp)
  826aa0:	08305040 	call	830504 <__mulsi3>
  826aa4:	e0bf7915 	stw	r2,-540(fp)
  826aa8:	e0ff7817 	ldw	r3,-544(fp)
  826aac:	e0bf7a17 	ldw	r2,-536(fp)
  826ab0:	1885883a 	add	r2,r3,r2
  826ab4:	e0bf7c15 	stw	r2,-528(fp)
  826ab8:	e0ff7817 	ldw	r3,-544(fp)
  826abc:	e0bf7b17 	ldw	r2,-532(fp)
  826ac0:	1885883a 	add	r2,r3,r2
  826ac4:	e0bf7d15 	stw	r2,-524(fp)
  826ac8:	e0ff7817 	ldw	r3,-544(fp)
  826acc:	e0bf7917 	ldw	r2,-540(fp)
  826ad0:	1885c83a 	sub	r2,r3,r2
  826ad4:	e0bf7e15 	stw	r2,-520(fp)
  826ad8:	e0ff7a17 	ldw	r3,-536(fp)
  826adc:	e0bf7b17 	ldw	r2,-532(fp)
  826ae0:	1887883a 	add	r3,r3,r2
  826ae4:	e0bf7917 	ldw	r2,-540(fp)
  826ae8:	1885c83a 	sub	r2,r3,r2
  826aec:	1085883a 	add	r2,r2,r2
  826af0:	1007883a 	mov	r3,r2
  826af4:	e0bf7817 	ldw	r2,-544(fp)
  826af8:	10c5c83a 	sub	r2,r2,r3
  826afc:	e0bf7f15 	stw	r2,-516(fp)
  826b00:	e0bf7517 	ldw	r2,-556(fp)
  826b04:	10800204 	addi	r2,r2,8
  826b08:	10800017 	ldw	r2,0(r2)
  826b0c:	e0bf7815 	stw	r2,-544(fp)
  826b10:	e0bf7517 	ldw	r2,-556(fp)
  826b14:	10800604 	addi	r2,r2,24
  826b18:	10800017 	ldw	r2,0(r2)
  826b1c:	e0bf7a15 	stw	r2,-536(fp)
  826b20:	e0ff7817 	ldw	r3,-544(fp)
  826b24:	e0bf7a17 	ldw	r2,-536(fp)
  826b28:	1885883a 	add	r2,r3,r2
  826b2c:	0148d884 	movi	r5,9058
  826b30:	1009883a 	mov	r4,r2
  826b34:	08305040 	call	830504 <__mulsi3>
  826b38:	e0bf7b15 	stw	r2,-532(fp)
  826b3c:	01422f44 	movi	r5,2237
  826b40:	e13f7817 	ldw	r4,-544(fp)
  826b44:	08305040 	call	830504 <__mulsi3>
  826b48:	1007883a 	mov	r3,r2
  826b4c:	e0bf7b17 	ldw	r2,-532(fp)
  826b50:	1885883a 	add	r2,r3,r2
  826b54:	e0bf8015 	stw	r2,-512(fp)
  826b58:	01723f04 	movi	r5,-14084
  826b5c:	e13f7a17 	ldw	r4,-536(fp)
  826b60:	08305040 	call	830504 <__mulsi3>
  826b64:	1007883a 	mov	r3,r2
  826b68:	e0bf7b17 	ldw	r2,-532(fp)
  826b6c:	1885883a 	add	r2,r3,r2
  826b70:	e0bf8115 	stw	r2,-508(fp)
  826b74:	0144e8c4 	movi	r5,5027
  826b78:	e13f7817 	ldw	r4,-544(fp)
  826b7c:	08305040 	call	830504 <__mulsi3>
  826b80:	1021883a 	mov	r16,r2
  826b84:	0174f844 	movi	r5,-11295
  826b88:	e13f7a17 	ldw	r4,-536(fp)
  826b8c:	08305040 	call	830504 <__mulsi3>
  826b90:	8085883a 	add	r2,r16,r2
  826b94:	e0bf8215 	stw	r2,-504(fp)
  826b98:	e0ff7c17 	ldw	r3,-528(fp)
  826b9c:	e0bf8017 	ldw	r2,-512(fp)
  826ba0:	1885883a 	add	r2,r3,r2
  826ba4:	e0bf8315 	stw	r2,-500(fp)
  826ba8:	e0ff7c17 	ldw	r3,-528(fp)
  826bac:	e0bf8017 	ldw	r2,-512(fp)
  826bb0:	1885c83a 	sub	r2,r3,r2
  826bb4:	e0bf8415 	stw	r2,-496(fp)
  826bb8:	e0ff7d17 	ldw	r3,-524(fp)
  826bbc:	e0bf8117 	ldw	r2,-508(fp)
  826bc0:	1885883a 	add	r2,r3,r2
  826bc4:	e0bf8515 	stw	r2,-492(fp)
  826bc8:	e0ff7d17 	ldw	r3,-524(fp)
  826bcc:	e0bf8117 	ldw	r2,-508(fp)
  826bd0:	1885c83a 	sub	r2,r3,r2
  826bd4:	e0bf8615 	stw	r2,-488(fp)
  826bd8:	e0ff7e17 	ldw	r3,-520(fp)
  826bdc:	e0bf8217 	ldw	r2,-504(fp)
  826be0:	1885883a 	add	r2,r3,r2
  826be4:	e0bf8715 	stw	r2,-484(fp)
  826be8:	e0ff7e17 	ldw	r3,-520(fp)
  826bec:	e0bf8217 	ldw	r2,-504(fp)
  826bf0:	1885c83a 	sub	r2,r3,r2
  826bf4:	e0bf8815 	stw	r2,-480(fp)
  826bf8:	e0bf7517 	ldw	r2,-556(fp)
  826bfc:	10800104 	addi	r2,r2,4
  826c00:	10800017 	ldw	r2,0(r2)
  826c04:	e0bf7815 	stw	r2,-544(fp)
  826c08:	e0bf7517 	ldw	r2,-556(fp)
  826c0c:	10800304 	addi	r2,r2,12
  826c10:	10800017 	ldw	r2,0(r2)
  826c14:	e0bf7a15 	stw	r2,-536(fp)
  826c18:	e0bf7517 	ldw	r2,-556(fp)
  826c1c:	10800504 	addi	r2,r2,20
  826c20:	10800017 	ldw	r2,0(r2)
  826c24:	e0bf7b15 	stw	r2,-532(fp)
  826c28:	e0bf7517 	ldw	r2,-556(fp)
  826c2c:	10800704 	addi	r2,r2,28
  826c30:	10800017 	ldw	r2,0(r2)
  826c34:	e0bf7915 	stw	r2,-540(fp)
  826c38:	e0bf7917 	ldw	r2,-540(fp)
  826c3c:	1004937a 	slli	r2,r2,13
  826c40:	e0bf7915 	stw	r2,-540(fp)
  826c44:	e0ff7817 	ldw	r3,-544(fp)
  826c48:	e0bf7b17 	ldw	r2,-532(fp)
  826c4c:	1885883a 	add	r2,r3,r2
  826c50:	e0bf8115 	stw	r2,-508(fp)
  826c54:	e0ff7817 	ldw	r3,-544(fp)
  826c58:	e0bf7a17 	ldw	r2,-536(fp)
  826c5c:	1885883a 	add	r2,r3,r2
  826c60:	014aadc4 	movi	r5,10935
  826c64:	1009883a 	mov	r4,r2
  826c68:	08305040 	call	830504 <__mulsi3>
  826c6c:	e0bf7d15 	stw	r2,-524(fp)
  826c70:	01499484 	movi	r5,9810
  826c74:	e13f8117 	ldw	r4,-508(fp)
  826c78:	08305040 	call	830504 <__mulsi3>
  826c7c:	e0bf7e15 	stw	r2,-520(fp)
  826c80:	e0ff7d17 	ldw	r3,-524(fp)
  826c84:	e0bf7e17 	ldw	r2,-520(fp)
  826c88:	1887883a 	add	r3,r3,r2
  826c8c:	e0bf7917 	ldw	r2,-540(fp)
  826c90:	18a1883a 	add	r16,r3,r2
  826c94:	0176fc04 	movi	r5,-9232
  826c98:	e13f7817 	ldw	r4,-544(fp)
  826c9c:	08305040 	call	830504 <__mulsi3>
  826ca0:	8085883a 	add	r2,r16,r2
  826ca4:	e0bf7c15 	stw	r2,-528(fp)
  826ca8:	01460504 	movi	r5,6164
  826cac:	e13f8117 	ldw	r4,-508(fp)
  826cb0:	08305040 	call	830504 <__mulsi3>
  826cb4:	e0bf8115 	stw	r2,-508(fp)
  826cb8:	017782c4 	movi	r5,-8693
  826cbc:	e13f7817 	ldw	r4,-544(fp)
  826cc0:	08305040 	call	830504 <__mulsi3>
  826cc4:	1007883a 	mov	r3,r2
  826cc8:	e0bf8117 	ldw	r2,-508(fp)
  826ccc:	1885883a 	add	r2,r3,r2
  826cd0:	e0bf8915 	stw	r2,-476(fp)
  826cd4:	e0ff7817 	ldw	r3,-544(fp)
  826cd8:	e0bf7a17 	ldw	r2,-536(fp)
  826cdc:	1885c83a 	sub	r2,r3,r2
  826ce0:	e0bf7815 	stw	r2,-544(fp)
  826ce4:	0143bc84 	movi	r5,3826
  826ce8:	e13f7817 	ldw	r4,-544(fp)
  826cec:	08305040 	call	830504 <__mulsi3>
  826cf0:	1007883a 	mov	r3,r2
  826cf4:	e0bf7917 	ldw	r2,-540(fp)
  826cf8:	1885c83a 	sub	r2,r3,r2
  826cfc:	e0bf8215 	stw	r2,-504(fp)
  826d00:	e0ff8917 	ldw	r3,-476(fp)
  826d04:	e0bf8217 	ldw	r2,-504(fp)
  826d08:	1885883a 	add	r2,r3,r2
  826d0c:	e0bf8915 	stw	r2,-476(fp)
  826d10:	e0ff7a17 	ldw	r3,-536(fp)
  826d14:	e0bf7b17 	ldw	r2,-532(fp)
  826d18:	1885883a 	add	r2,r3,r2
  826d1c:	017ebbc4 	movi	r5,-1297
  826d20:	1009883a 	mov	r4,r2
  826d24:	08305040 	call	830504 <__mulsi3>
  826d28:	1007883a 	mov	r3,r2
  826d2c:	e0bf7917 	ldw	r2,-540(fp)
  826d30:	1885c83a 	sub	r2,r3,r2
  826d34:	e0bf8015 	stw	r2,-512(fp)
  826d38:	017c9b84 	movi	r5,-3474
  826d3c:	e13f7a17 	ldw	r4,-536(fp)
  826d40:	08305040 	call	830504 <__mulsi3>
  826d44:	1007883a 	mov	r3,r2
  826d48:	e0bf8017 	ldw	r2,-512(fp)
  826d4c:	1885883a 	add	r2,r3,r2
  826d50:	e0ff7d17 	ldw	r3,-524(fp)
  826d54:	1885883a 	add	r2,r3,r2
  826d58:	e0bf7d15 	stw	r2,-524(fp)
  826d5c:	016d0244 	movi	r5,-19447
  826d60:	e13f7b17 	ldw	r4,-532(fp)
  826d64:	08305040 	call	830504 <__mulsi3>
  826d68:	1007883a 	mov	r3,r2
  826d6c:	e0bf8017 	ldw	r2,-512(fp)
  826d70:	1885883a 	add	r2,r3,r2
  826d74:	e0ff7e17 	ldw	r3,-520(fp)
  826d78:	1885883a 	add	r2,r3,r2
  826d7c:	e0bf7e15 	stw	r2,-520(fp)
  826d80:	e0ff7b17 	ldw	r3,-532(fp)
  826d84:	e0bf7a17 	ldw	r2,-536(fp)
  826d88:	1885c83a 	sub	r2,r3,r2
  826d8c:	014b3e04 	movi	r5,11512
  826d90:	1009883a 	mov	r4,r2
  826d94:	08305040 	call	830504 <__mulsi3>
  826d98:	e0bf8015 	stw	r2,-512(fp)
  826d9c:	e0ff8017 	ldw	r3,-512(fp)
  826da0:	e0bf7917 	ldw	r2,-540(fp)
  826da4:	18a1883a 	add	r16,r3,r2
  826da8:	01727984 	movi	r5,-13850
  826dac:	e13f7b17 	ldw	r4,-532(fp)
  826db0:	08305040 	call	830504 <__mulsi3>
  826db4:	8085883a 	add	r2,r16,r2
  826db8:	e0ff8117 	ldw	r3,-508(fp)
  826dbc:	1885883a 	add	r2,r3,r2
  826dc0:	e0bf8115 	stw	r2,-508(fp)
  826dc4:	01456644 	movi	r5,5529
  826dc8:	e13f7a17 	ldw	r4,-536(fp)
  826dcc:	08305040 	call	830504 <__mulsi3>
  826dd0:	1007883a 	mov	r3,r2
  826dd4:	e0bf8017 	ldw	r2,-512(fp)
  826dd8:	1885883a 	add	r2,r3,r2
  826ddc:	e0ff8217 	ldw	r3,-504(fp)
  826de0:	1885883a 	add	r2,r3,r2
  826de4:	e0bf8215 	stw	r2,-504(fp)
  826de8:	e0ff7817 	ldw	r3,-544(fp)
  826dec:	e0bf7b17 	ldw	r2,-532(fp)
  826df0:	1885c83a 	sub	r2,r3,r2
  826df4:	1006937a 	slli	r3,r2,13
  826df8:	e0bf7917 	ldw	r2,-540(fp)
  826dfc:	1885883a 	add	r2,r3,r2
  826e00:	e0bf8015 	stw	r2,-512(fp)
  826e04:	e0ff8317 	ldw	r3,-500(fp)
  826e08:	e0bf7c17 	ldw	r2,-528(fp)
  826e0c:	1885883a 	add	r2,r3,r2
  826e10:	1005d4ba 	srai	r2,r2,18
  826e14:	1080ffcc 	andi	r2,r2,1023
  826e18:	e0ff7717 	ldw	r3,-548(fp)
  826e1c:	1885883a 	add	r2,r3,r2
  826e20:	10c00003 	ldbu	r3,0(r2)
  826e24:	e0bf8a17 	ldw	r2,-472(fp)
  826e28:	10c00005 	stb	r3,0(r2)
  826e2c:	e0bf8a17 	ldw	r2,-472(fp)
  826e30:	10800344 	addi	r2,r2,13
  826e34:	e13f8317 	ldw	r4,-500(fp)
  826e38:	e0ff7c17 	ldw	r3,-528(fp)
  826e3c:	20c7c83a 	sub	r3,r4,r3
  826e40:	1807d4ba 	srai	r3,r3,18
  826e44:	18c0ffcc 	andi	r3,r3,1023
  826e48:	e13f7717 	ldw	r4,-548(fp)
  826e4c:	20c7883a 	add	r3,r4,r3
  826e50:	18c00003 	ldbu	r3,0(r3)
  826e54:	10c00005 	stb	r3,0(r2)
  826e58:	e0bf8a17 	ldw	r2,-472(fp)
  826e5c:	10800044 	addi	r2,r2,1
  826e60:	e13f8517 	ldw	r4,-492(fp)
  826e64:	e0ff7d17 	ldw	r3,-524(fp)
  826e68:	20c7883a 	add	r3,r4,r3
  826e6c:	1807d4ba 	srai	r3,r3,18
  826e70:	18c0ffcc 	andi	r3,r3,1023
  826e74:	e13f7717 	ldw	r4,-548(fp)
  826e78:	20c7883a 	add	r3,r4,r3
  826e7c:	18c00003 	ldbu	r3,0(r3)
  826e80:	10c00005 	stb	r3,0(r2)
  826e84:	e0bf8a17 	ldw	r2,-472(fp)
  826e88:	10800304 	addi	r2,r2,12
  826e8c:	e13f8517 	ldw	r4,-492(fp)
  826e90:	e0ff7d17 	ldw	r3,-524(fp)
  826e94:	20c7c83a 	sub	r3,r4,r3
  826e98:	1807d4ba 	srai	r3,r3,18
  826e9c:	18c0ffcc 	andi	r3,r3,1023
  826ea0:	e13f7717 	ldw	r4,-548(fp)
  826ea4:	20c7883a 	add	r3,r4,r3
  826ea8:	18c00003 	ldbu	r3,0(r3)
  826eac:	10c00005 	stb	r3,0(r2)
  826eb0:	e0bf8a17 	ldw	r2,-472(fp)
  826eb4:	10800084 	addi	r2,r2,2
  826eb8:	e13f8717 	ldw	r4,-484(fp)
  826ebc:	e0ff7e17 	ldw	r3,-520(fp)
  826ec0:	20c7883a 	add	r3,r4,r3
  826ec4:	1807d4ba 	srai	r3,r3,18
  826ec8:	18c0ffcc 	andi	r3,r3,1023
  826ecc:	e13f7717 	ldw	r4,-548(fp)
  826ed0:	20c7883a 	add	r3,r4,r3
  826ed4:	18c00003 	ldbu	r3,0(r3)
  826ed8:	10c00005 	stb	r3,0(r2)
  826edc:	e0bf8a17 	ldw	r2,-472(fp)
  826ee0:	108002c4 	addi	r2,r2,11
  826ee4:	e13f8717 	ldw	r4,-484(fp)
  826ee8:	e0ff7e17 	ldw	r3,-520(fp)
  826eec:	20c7c83a 	sub	r3,r4,r3
  826ef0:	1807d4ba 	srai	r3,r3,18
  826ef4:	18c0ffcc 	andi	r3,r3,1023
  826ef8:	e13f7717 	ldw	r4,-548(fp)
  826efc:	20c7883a 	add	r3,r4,r3
  826f00:	18c00003 	ldbu	r3,0(r3)
  826f04:	10c00005 	stb	r3,0(r2)
  826f08:	e0bf8a17 	ldw	r2,-472(fp)
  826f0c:	108000c4 	addi	r2,r2,3
  826f10:	e13f7f17 	ldw	r4,-516(fp)
  826f14:	e0ff8017 	ldw	r3,-512(fp)
  826f18:	20c7883a 	add	r3,r4,r3
  826f1c:	1807d4ba 	srai	r3,r3,18
  826f20:	18c0ffcc 	andi	r3,r3,1023
  826f24:	e13f7717 	ldw	r4,-548(fp)
  826f28:	20c7883a 	add	r3,r4,r3
  826f2c:	18c00003 	ldbu	r3,0(r3)
  826f30:	10c00005 	stb	r3,0(r2)
  826f34:	e0bf8a17 	ldw	r2,-472(fp)
  826f38:	10800284 	addi	r2,r2,10
  826f3c:	e13f7f17 	ldw	r4,-516(fp)
  826f40:	e0ff8017 	ldw	r3,-512(fp)
  826f44:	20c7c83a 	sub	r3,r4,r3
  826f48:	1807d4ba 	srai	r3,r3,18
  826f4c:	18c0ffcc 	andi	r3,r3,1023
  826f50:	e13f7717 	ldw	r4,-548(fp)
  826f54:	20c7883a 	add	r3,r4,r3
  826f58:	18c00003 	ldbu	r3,0(r3)
  826f5c:	10c00005 	stb	r3,0(r2)
  826f60:	e0bf8a17 	ldw	r2,-472(fp)
  826f64:	10800104 	addi	r2,r2,4
  826f68:	e13f8817 	ldw	r4,-480(fp)
  826f6c:	e0ff8117 	ldw	r3,-508(fp)
  826f70:	20c7883a 	add	r3,r4,r3
  826f74:	1807d4ba 	srai	r3,r3,18
  826f78:	18c0ffcc 	andi	r3,r3,1023
  826f7c:	e13f7717 	ldw	r4,-548(fp)
  826f80:	20c7883a 	add	r3,r4,r3
  826f84:	18c00003 	ldbu	r3,0(r3)
  826f88:	10c00005 	stb	r3,0(r2)
  826f8c:	e0bf8a17 	ldw	r2,-472(fp)
  826f90:	10800244 	addi	r2,r2,9
  826f94:	e13f8817 	ldw	r4,-480(fp)
  826f98:	e0ff8117 	ldw	r3,-508(fp)
  826f9c:	20c7c83a 	sub	r3,r4,r3
  826fa0:	1807d4ba 	srai	r3,r3,18
  826fa4:	18c0ffcc 	andi	r3,r3,1023
  826fa8:	e13f7717 	ldw	r4,-548(fp)
  826fac:	20c7883a 	add	r3,r4,r3
  826fb0:	18c00003 	ldbu	r3,0(r3)
  826fb4:	10c00005 	stb	r3,0(r2)
  826fb8:	e0bf8a17 	ldw	r2,-472(fp)
  826fbc:	10800144 	addi	r2,r2,5
  826fc0:	e13f8617 	ldw	r4,-488(fp)
  826fc4:	e0ff8217 	ldw	r3,-504(fp)
  826fc8:	20c7883a 	add	r3,r4,r3
  826fcc:	1807d4ba 	srai	r3,r3,18
  826fd0:	18c0ffcc 	andi	r3,r3,1023
  826fd4:	e13f7717 	ldw	r4,-548(fp)
  826fd8:	20c7883a 	add	r3,r4,r3
  826fdc:	18c00003 	ldbu	r3,0(r3)
  826fe0:	10c00005 	stb	r3,0(r2)
  826fe4:	e0bf8a17 	ldw	r2,-472(fp)
  826fe8:	10800204 	addi	r2,r2,8
  826fec:	e13f8617 	ldw	r4,-488(fp)
  826ff0:	e0ff8217 	ldw	r3,-504(fp)
  826ff4:	20c7c83a 	sub	r3,r4,r3
  826ff8:	1807d4ba 	srai	r3,r3,18
  826ffc:	18c0ffcc 	andi	r3,r3,1023
  827000:	e13f7717 	ldw	r4,-548(fp)
  827004:	20c7883a 	add	r3,r4,r3
  827008:	18c00003 	ldbu	r3,0(r3)
  82700c:	10c00005 	stb	r3,0(r2)
  827010:	e0bf8a17 	ldw	r2,-472(fp)
  827014:	10800184 	addi	r2,r2,6
  827018:	e13f8417 	ldw	r4,-496(fp)
  82701c:	e0ff8917 	ldw	r3,-476(fp)
  827020:	20c7883a 	add	r3,r4,r3
  827024:	1807d4ba 	srai	r3,r3,18
  827028:	18c0ffcc 	andi	r3,r3,1023
  82702c:	e13f7717 	ldw	r4,-548(fp)
  827030:	20c7883a 	add	r3,r4,r3
  827034:	18c00003 	ldbu	r3,0(r3)
  827038:	10c00005 	stb	r3,0(r2)
  82703c:	e0bf8a17 	ldw	r2,-472(fp)
  827040:	108001c4 	addi	r2,r2,7
  827044:	e13f8417 	ldw	r4,-496(fp)
  827048:	e0ff8917 	ldw	r3,-476(fp)
  82704c:	20c7c83a 	sub	r3,r4,r3
  827050:	1807d4ba 	srai	r3,r3,18
  827054:	18c0ffcc 	andi	r3,r3,1023
  827058:	e13f7717 	ldw	r4,-548(fp)
  82705c:	20c7883a 	add	r3,r4,r3
  827060:	18c00003 	ldbu	r3,0(r3)
  827064:	10c00005 	stb	r3,0(r2)
  827068:	e0bf7517 	ldw	r2,-556(fp)
  82706c:	10800804 	addi	r2,r2,32
  827070:	e0bf7515 	stw	r2,-556(fp)
  827074:	e0bf7617 	ldw	r2,-552(fp)
  827078:	10800044 	addi	r2,r2,1
  82707c:	e0bf7615 	stw	r2,-552(fp)
  827080:	e0bf7617 	ldw	r2,-552(fp)
  827084:	10800390 	cmplti	r2,r2,14
  827088:	103e661e 	bne	r2,zero,826a24 <__alt_mem_epcs_flash_controller_0+0xff81da24>
  82708c:	0001883a 	nop
  827090:	e6ffff04 	addi	sp,fp,-4
  827094:	dfc00217 	ldw	ra,8(sp)
  827098:	df000117 	ldw	fp,4(sp)
  82709c:	dc000017 	ldw	r16,0(sp)
  8270a0:	dec00304 	addi	sp,sp,12
  8270a4:	f800283a 	ret

008270a8 <jpeg_idct_15x15>:
  8270a8:	deff6904 	addi	sp,sp,-604
  8270ac:	dfc09615 	stw	ra,600(sp)
  8270b0:	df009515 	stw	fp,596(sp)
  8270b4:	df009504 	addi	fp,sp,596
  8270b8:	e13ffc15 	stw	r4,-16(fp)
  8270bc:	e17ffd15 	stw	r5,-12(fp)
  8270c0:	e1bffe15 	stw	r6,-8(fp)
  8270c4:	e1ffff15 	stw	r7,-4(fp)
  8270c8:	e0bffc17 	ldw	r2,-16(fp)
  8270cc:	10805417 	ldw	r2,336(r2)
  8270d0:	10bfa004 	addi	r2,r2,-384
  8270d4:	e0bf6f15 	stw	r2,-580(fp)
  8270d8:	e0bffe17 	ldw	r2,-8(fp)
  8270dc:	e0bf6b15 	stw	r2,-596(fp)
  8270e0:	e0bffd17 	ldw	r2,-12(fp)
  8270e4:	10801517 	ldw	r2,84(r2)
  8270e8:	e0bf6c15 	stw	r2,-592(fp)
  8270ec:	e0bf8404 	addi	r2,fp,-496
  8270f0:	e0bf6d15 	stw	r2,-588(fp)
  8270f4:	e03f6e15 	stw	zero,-584(fp)
  8270f8:	0001b606 	br	8277d4 <jpeg_idct_15x15+0x72c>
  8270fc:	e0bf6b17 	ldw	r2,-596(fp)
  827100:	1080000b 	ldhu	r2,0(r2)
  827104:	10ffffcc 	andi	r3,r2,65535
  827108:	18e0001c 	xori	r3,r3,32768
  82710c:	18e00004 	addi	r3,r3,-32768
  827110:	e0bf6c17 	ldw	r2,-592(fp)
  827114:	10800017 	ldw	r2,0(r2)
  827118:	100b883a 	mov	r5,r2
  82711c:	1809883a 	mov	r4,r3
  827120:	08305040 	call	830504 <__mulsi3>
  827124:	e0bf7015 	stw	r2,-576(fp)
  827128:	e0bf7017 	ldw	r2,-576(fp)
  82712c:	1004937a 	slli	r2,r2,13
  827130:	e0bf7015 	stw	r2,-576(fp)
  827134:	e0bf7017 	ldw	r2,-576(fp)
  827138:	10810004 	addi	r2,r2,1024
  82713c:	e0bf7015 	stw	r2,-576(fp)
  827140:	e0bf6b17 	ldw	r2,-596(fp)
  827144:	10800804 	addi	r2,r2,32
  827148:	1080000b 	ldhu	r2,0(r2)
  82714c:	10ffffcc 	andi	r3,r2,65535
  827150:	18e0001c 	xori	r3,r3,32768
  827154:	18e00004 	addi	r3,r3,-32768
  827158:	e0bf6c17 	ldw	r2,-592(fp)
  82715c:	10801004 	addi	r2,r2,64
  827160:	10800017 	ldw	r2,0(r2)
  827164:	100b883a 	mov	r5,r2
  827168:	1809883a 	mov	r4,r3
  82716c:	08305040 	call	830504 <__mulsi3>
  827170:	e0bf7115 	stw	r2,-572(fp)
  827174:	e0bf6b17 	ldw	r2,-596(fp)
  827178:	10801004 	addi	r2,r2,64
  82717c:	1080000b 	ldhu	r2,0(r2)
  827180:	10ffffcc 	andi	r3,r2,65535
  827184:	18e0001c 	xori	r3,r3,32768
  827188:	18e00004 	addi	r3,r3,-32768
  82718c:	e0bf6c17 	ldw	r2,-592(fp)
  827190:	10802004 	addi	r2,r2,128
  827194:	10800017 	ldw	r2,0(r2)
  827198:	100b883a 	mov	r5,r2
  82719c:	1809883a 	mov	r4,r3
  8271a0:	08305040 	call	830504 <__mulsi3>
  8271a4:	e0bf7215 	stw	r2,-568(fp)
  8271a8:	e0bf6b17 	ldw	r2,-596(fp)
  8271ac:	10801804 	addi	r2,r2,96
  8271b0:	1080000b 	ldhu	r2,0(r2)
  8271b4:	10ffffcc 	andi	r3,r2,65535
  8271b8:	18e0001c 	xori	r3,r3,32768
  8271bc:	18e00004 	addi	r3,r3,-32768
  8271c0:	e0bf6c17 	ldw	r2,-592(fp)
  8271c4:	10803004 	addi	r2,r2,192
  8271c8:	10800017 	ldw	r2,0(r2)
  8271cc:	100b883a 	mov	r5,r2
  8271d0:	1809883a 	mov	r4,r3
  8271d4:	08305040 	call	830504 <__mulsi3>
  8271d8:	e0bf7315 	stw	r2,-564(fp)
  8271dc:	01437f04 	movi	r5,3580
  8271e0:	e13f7317 	ldw	r4,-564(fp)
  8271e4:	08305040 	call	830504 <__mulsi3>
  8271e8:	e0bf7415 	stw	r2,-560(fp)
  8271ec:	01492744 	movi	r5,9373
  8271f0:	e13f7317 	ldw	r4,-564(fp)
  8271f4:	08305040 	call	830504 <__mulsi3>
  8271f8:	e0bf7515 	stw	r2,-556(fp)
  8271fc:	e0ff7017 	ldw	r3,-576(fp)
  827200:	e0bf7417 	ldw	r2,-560(fp)
  827204:	1885c83a 	sub	r2,r3,r2
  827208:	e0bf7615 	stw	r2,-552(fp)
  82720c:	e0ff7017 	ldw	r3,-576(fp)
  827210:	e0bf7517 	ldw	r2,-556(fp)
  827214:	1885883a 	add	r2,r3,r2
  827218:	e0bf7715 	stw	r2,-548(fp)
  82721c:	e0ff7517 	ldw	r3,-556(fp)
  827220:	e0bf7417 	ldw	r2,-560(fp)
  827224:	1885c83a 	sub	r2,r3,r2
  827228:	1085883a 	add	r2,r2,r2
  82722c:	1007883a 	mov	r3,r2
  827230:	e0bf7017 	ldw	r2,-576(fp)
  827234:	10c5c83a 	sub	r2,r2,r3
  827238:	e0bf7015 	stw	r2,-576(fp)
  82723c:	e0ff7117 	ldw	r3,-572(fp)
  827240:	e0bf7217 	ldw	r2,-568(fp)
  827244:	1885c83a 	sub	r2,r3,r2
  827248:	e0bf7315 	stw	r2,-564(fp)
  82724c:	e0ff7217 	ldw	r3,-568(fp)
  827250:	e0bf7117 	ldw	r2,-572(fp)
  827254:	1885883a 	add	r2,r3,r2
  827258:	e0bf7215 	stw	r2,-568(fp)
  82725c:	014ab384 	movi	r5,10958
  827260:	e13f7217 	ldw	r4,-568(fp)
  827264:	08305040 	call	830504 <__mulsi3>
  827268:	e0bf7415 	stw	r2,-560(fp)
  82726c:	01405d84 	movi	r5,374
  827270:	e13f7317 	ldw	r4,-564(fp)
  827274:	08305040 	call	830504 <__mulsi3>
  827278:	e0bf7515 	stw	r2,-556(fp)
  82727c:	014b84c4 	movi	r5,11795
  827280:	e13f7117 	ldw	r4,-572(fp)
  827284:	08305040 	call	830504 <__mulsi3>
  827288:	e0bf7115 	stw	r2,-572(fp)
  82728c:	e0ff7717 	ldw	r3,-548(fp)
  827290:	e0bf7417 	ldw	r2,-560(fp)
  827294:	1887883a 	add	r3,r3,r2
  827298:	e0bf7517 	ldw	r2,-556(fp)
  82729c:	1885883a 	add	r2,r3,r2
  8272a0:	e0bf7815 	stw	r2,-544(fp)
  8272a4:	e0ff7617 	ldw	r3,-552(fp)
  8272a8:	e0bf7417 	ldw	r2,-560(fp)
  8272ac:	1887c83a 	sub	r3,r3,r2
  8272b0:	e0bf7517 	ldw	r2,-556(fp)
  8272b4:	1887883a 	add	r3,r3,r2
  8272b8:	e0bf7117 	ldw	r2,-572(fp)
  8272bc:	1885883a 	add	r2,r3,r2
  8272c0:	e0bf7915 	stw	r2,-540(fp)
  8272c4:	01446084 	movi	r5,4482
  8272c8:	e13f7217 	ldw	r4,-568(fp)
  8272cc:	08305040 	call	830504 <__mulsi3>
  8272d0:	e0bf7415 	stw	r2,-560(fp)
  8272d4:	014331c4 	movi	r5,3271
  8272d8:	e13f7317 	ldw	r4,-564(fp)
  8272dc:	08305040 	call	830504 <__mulsi3>
  8272e0:	e0bf7515 	stw	r2,-556(fp)
  8272e4:	e0ff7717 	ldw	r3,-548(fp)
  8272e8:	e0bf7417 	ldw	r2,-560(fp)
  8272ec:	1887c83a 	sub	r3,r3,r2
  8272f0:	e0bf7517 	ldw	r2,-556(fp)
  8272f4:	1885c83a 	sub	r2,r3,r2
  8272f8:	e0bf7a15 	stw	r2,-536(fp)
  8272fc:	e0ff7617 	ldw	r3,-552(fp)
  827300:	e0bf7417 	ldw	r2,-560(fp)
  827304:	1887883a 	add	r3,r3,r2
  827308:	e0bf7517 	ldw	r2,-556(fp)
  82730c:	1887c83a 	sub	r3,r3,r2
  827310:	e0bf7117 	ldw	r2,-572(fp)
  827314:	1885c83a 	sub	r2,r3,r2
  827318:	e0bf7b15 	stw	r2,-532(fp)
  82731c:	01465304 	movi	r5,6476
  827320:	e13f7217 	ldw	r4,-568(fp)
  827324:	08305040 	call	830504 <__mulsi3>
  827328:	e0bf7415 	stw	r2,-560(fp)
  82732c:	0142d404 	movi	r5,2896
  827330:	e13f7317 	ldw	r4,-564(fp)
  827334:	08305040 	call	830504 <__mulsi3>
  827338:	e0bf7515 	stw	r2,-556(fp)
  82733c:	e0ff7617 	ldw	r3,-552(fp)
  827340:	e0bf7417 	ldw	r2,-560(fp)
  827344:	1887883a 	add	r3,r3,r2
  827348:	e0bf7517 	ldw	r2,-556(fp)
  82734c:	1885883a 	add	r2,r3,r2
  827350:	e0bf7c15 	stw	r2,-528(fp)
  827354:	e0ff7717 	ldw	r3,-548(fp)
  827358:	e0bf7417 	ldw	r2,-560(fp)
  82735c:	1887c83a 	sub	r3,r3,r2
  827360:	e0bf7517 	ldw	r2,-556(fp)
  827364:	1885883a 	add	r2,r3,r2
  827368:	e0bf7d15 	stw	r2,-524(fp)
  82736c:	e0ff7517 	ldw	r3,-556(fp)
  827370:	e0bf7517 	ldw	r2,-556(fp)
  827374:	1885883a 	add	r2,r3,r2
  827378:	e0bf7515 	stw	r2,-556(fp)
  82737c:	e0ff7017 	ldw	r3,-576(fp)
  827380:	e0bf7517 	ldw	r2,-556(fp)
  827384:	1885883a 	add	r2,r3,r2
  827388:	e0bf7e15 	stw	r2,-520(fp)
  82738c:	e0ff7017 	ldw	r3,-576(fp)
  827390:	e0bf7517 	ldw	r2,-556(fp)
  827394:	1887c83a 	sub	r3,r3,r2
  827398:	e0bf7517 	ldw	r2,-556(fp)
  82739c:	1885c83a 	sub	r2,r3,r2
  8273a0:	e0bf7f15 	stw	r2,-516(fp)
  8273a4:	e0bf6b17 	ldw	r2,-596(fp)
  8273a8:	10800404 	addi	r2,r2,16
  8273ac:	1080000b 	ldhu	r2,0(r2)
  8273b0:	10ffffcc 	andi	r3,r2,65535
  8273b4:	18e0001c 	xori	r3,r3,32768
  8273b8:	18e00004 	addi	r3,r3,-32768
  8273bc:	e0bf6c17 	ldw	r2,-592(fp)
  8273c0:	10800804 	addi	r2,r2,32
  8273c4:	10800017 	ldw	r2,0(r2)
  8273c8:	100b883a 	mov	r5,r2
  8273cc:	1809883a 	mov	r4,r3
  8273d0:	08305040 	call	830504 <__mulsi3>
  8273d4:	e0bf7015 	stw	r2,-576(fp)
  8273d8:	e0bf6b17 	ldw	r2,-596(fp)
  8273dc:	10800c04 	addi	r2,r2,48
  8273e0:	1080000b 	ldhu	r2,0(r2)
  8273e4:	10ffffcc 	andi	r3,r2,65535
  8273e8:	18e0001c 	xori	r3,r3,32768
  8273ec:	18e00004 	addi	r3,r3,-32768
  8273f0:	e0bf6c17 	ldw	r2,-592(fp)
  8273f4:	10801804 	addi	r2,r2,96
  8273f8:	10800017 	ldw	r2,0(r2)
  8273fc:	100b883a 	mov	r5,r2
  827400:	1809883a 	mov	r4,r3
  827404:	08305040 	call	830504 <__mulsi3>
  827408:	e0bf7115 	stw	r2,-572(fp)
  82740c:	e0bf6b17 	ldw	r2,-596(fp)
  827410:	10801404 	addi	r2,r2,80
  827414:	1080000b 	ldhu	r2,0(r2)
  827418:	10ffffcc 	andi	r3,r2,65535
  82741c:	18e0001c 	xori	r3,r3,32768
  827420:	18e00004 	addi	r3,r3,-32768
  827424:	e0bf6c17 	ldw	r2,-592(fp)
  827428:	10802804 	addi	r2,r2,160
  82742c:	10800017 	ldw	r2,0(r2)
  827430:	100b883a 	mov	r5,r2
  827434:	1809883a 	mov	r4,r3
  827438:	08305040 	call	830504 <__mulsi3>
  82743c:	e0bf7315 	stw	r2,-564(fp)
  827440:	0149cc44 	movi	r5,10033
  827444:	e13f7317 	ldw	r4,-564(fp)
  827448:	08305040 	call	830504 <__mulsi3>
  82744c:	e0bf7215 	stw	r2,-568(fp)
  827450:	e0bf6b17 	ldw	r2,-596(fp)
  827454:	10801c04 	addi	r2,r2,112
  827458:	1080000b 	ldhu	r2,0(r2)
  82745c:	10ffffcc 	andi	r3,r2,65535
  827460:	18e0001c 	xori	r3,r3,32768
  827464:	18e00004 	addi	r3,r3,-32768
  827468:	e0bf6c17 	ldw	r2,-592(fp)
  82746c:	10803804 	addi	r2,r2,224
  827470:	10800017 	ldw	r2,0(r2)
  827474:	100b883a 	mov	r5,r2
  827478:	1809883a 	mov	r4,r3
  82747c:	08305040 	call	830504 <__mulsi3>
  827480:	e0bf7315 	stw	r2,-564(fp)
  827484:	e0ff7117 	ldw	r3,-572(fp)
  827488:	e0bf7317 	ldw	r2,-564(fp)
  82748c:	1885c83a 	sub	r2,r3,r2
  827490:	e0bf7715 	stw	r2,-548(fp)
  827494:	e0ff7017 	ldw	r3,-576(fp)
  827498:	e0bf7717 	ldw	r2,-548(fp)
  82749c:	1885883a 	add	r2,r3,r2
  8274a0:	0146a684 	movi	r5,6810
  8274a4:	1009883a 	mov	r4,r2
  8274a8:	08305040 	call	830504 <__mulsi3>
  8274ac:	e0bf8015 	stw	r2,-512(fp)
  8274b0:	01441c44 	movi	r5,4209
  8274b4:	e13f7017 	ldw	r4,-576(fp)
  8274b8:	08305040 	call	830504 <__mulsi3>
  8274bc:	1007883a 	mov	r3,r2
  8274c0:	e0bf8017 	ldw	r2,-512(fp)
  8274c4:	1885883a 	add	r2,r3,r2
  8274c8:	e0bf7515 	stw	r2,-556(fp)
  8274cc:	016e9704 	movi	r5,-17828
  8274d0:	e13f7717 	ldw	r4,-548(fp)
  8274d4:	08305040 	call	830504 <__mulsi3>
  8274d8:	1007883a 	mov	r3,r2
  8274dc:	e0bf8017 	ldw	r2,-512(fp)
  8274e0:	1885883a 	add	r2,r3,r2
  8274e4:	e0bf8115 	stw	r2,-508(fp)
  8274e8:	01795984 	movi	r5,-6810
  8274ec:	e13f7117 	ldw	r4,-572(fp)
  8274f0:	08305040 	call	830504 <__mulsi3>
  8274f4:	e0bf7715 	stw	r2,-548(fp)
  8274f8:	01753d84 	movi	r5,-11018
  8274fc:	e13f7117 	ldw	r4,-572(fp)
  827500:	08305040 	call	830504 <__mulsi3>
  827504:	e0bf8015 	stw	r2,-512(fp)
  827508:	e0ff7017 	ldw	r3,-576(fp)
  82750c:	e0bf7317 	ldw	r2,-564(fp)
  827510:	1885c83a 	sub	r2,r3,r2
  827514:	e0bf7115 	stw	r2,-572(fp)
  827518:	014b4084 	movi	r5,11522
  82751c:	e13f7117 	ldw	r4,-572(fp)
  827520:	08305040 	call	830504 <__mulsi3>
  827524:	1007883a 	mov	r3,r2
  827528:	e0bf7217 	ldw	r2,-568(fp)
  82752c:	1885883a 	add	r2,r3,r2
  827530:	e0bf7615 	stw	r2,-552(fp)
  827534:	0153a8c4 	movi	r5,20131
  827538:	e13f7317 	ldw	r4,-564(fp)
  82753c:	08305040 	call	830504 <__mulsi3>
  827540:	1007883a 	mov	r3,r2
  827544:	e0bf7617 	ldw	r2,-552(fp)
  827548:	1887883a 	add	r3,r3,r2
  82754c:	e0bf8017 	ldw	r2,-512(fp)
  827550:	1885c83a 	sub	r2,r3,r2
  827554:	e0bf7415 	stw	r2,-560(fp)
  827558:	017719c4 	movi	r5,-9113
  82755c:	e13f7017 	ldw	r4,-576(fp)
  827560:	08305040 	call	830504 <__mulsi3>
  827564:	1007883a 	mov	r3,r2
  827568:	e0bf7617 	ldw	r2,-552(fp)
  82756c:	1887883a 	add	r3,r3,r2
  827570:	e0bf7717 	ldw	r2,-548(fp)
  827574:	1885883a 	add	r2,r3,r2
  827578:	e0bf8215 	stw	r2,-504(fp)
  82757c:	0149cc44 	movi	r5,10033
  827580:	e13f7117 	ldw	r4,-572(fp)
  827584:	08305040 	call	830504 <__mulsi3>
  827588:	1007883a 	mov	r3,r2
  82758c:	e0bf7217 	ldw	r2,-568(fp)
  827590:	1885c83a 	sub	r2,r3,r2
  827594:	e0bf7615 	stw	r2,-552(fp)
  827598:	e0ff7017 	ldw	r3,-576(fp)
  82759c:	e0bf7317 	ldw	r2,-564(fp)
  8275a0:	1885883a 	add	r2,r3,r2
  8275a4:	01449a04 	movi	r5,4712
  8275a8:	1009883a 	mov	r4,r2
  8275ac:	08305040 	call	830504 <__mulsi3>
  8275b0:	e0bf7115 	stw	r2,-572(fp)
  8275b4:	0143ce44 	movi	r5,3897
  8275b8:	e13f7017 	ldw	r4,-576(fp)
  8275bc:	08305040 	call	830504 <__mulsi3>
  8275c0:	1007883a 	mov	r3,r2
  8275c4:	e0bf7117 	ldw	r2,-572(fp)
  8275c8:	1887883a 	add	r3,r3,r2
  8275cc:	e0bf7217 	ldw	r2,-568(fp)
  8275d0:	1885c83a 	sub	r2,r3,r2
  8275d4:	e0ff7717 	ldw	r3,-548(fp)
  8275d8:	1885883a 	add	r2,r3,r2
  8275dc:	e0bf7715 	stw	r2,-548(fp)
  8275e0:	01790bc4 	movi	r5,-7121
  8275e4:	e13f7317 	ldw	r4,-564(fp)
  8275e8:	08305040 	call	830504 <__mulsi3>
  8275ec:	1007883a 	mov	r3,r2
  8275f0:	e0bf7117 	ldw	r2,-572(fp)
  8275f4:	1887883a 	add	r3,r3,r2
  8275f8:	e0bf7217 	ldw	r2,-568(fp)
  8275fc:	1885883a 	add	r2,r3,r2
  827600:	e0ff8017 	ldw	r3,-512(fp)
  827604:	1885883a 	add	r2,r3,r2
  827608:	e0bf8015 	stw	r2,-512(fp)
  82760c:	e0ff7817 	ldw	r3,-544(fp)
  827610:	e0bf7417 	ldw	r2,-560(fp)
  827614:	1885883a 	add	r2,r3,r2
  827618:	1007d2fa 	srai	r3,r2,11
  82761c:	e0bf6d17 	ldw	r2,-588(fp)
  827620:	10c00015 	stw	r3,0(r2)
  827624:	e0bf6d17 	ldw	r2,-588(fp)
  827628:	10807004 	addi	r2,r2,448
  82762c:	e13f7817 	ldw	r4,-544(fp)
  827630:	e0ff7417 	ldw	r3,-560(fp)
  827634:	20c7c83a 	sub	r3,r4,r3
  827638:	1807d2fa 	srai	r3,r3,11
  82763c:	10c00015 	stw	r3,0(r2)
  827640:	e0bf6d17 	ldw	r2,-588(fp)
  827644:	10800804 	addi	r2,r2,32
  827648:	e13f7c17 	ldw	r4,-528(fp)
  82764c:	e0ff7517 	ldw	r3,-556(fp)
  827650:	20c7883a 	add	r3,r4,r3
  827654:	1807d2fa 	srai	r3,r3,11
  827658:	10c00015 	stw	r3,0(r2)
  82765c:	e0bf6d17 	ldw	r2,-588(fp)
  827660:	10806804 	addi	r2,r2,416
  827664:	e13f7c17 	ldw	r4,-528(fp)
  827668:	e0ff7517 	ldw	r3,-556(fp)
  82766c:	20c7c83a 	sub	r3,r4,r3
  827670:	1807d2fa 	srai	r3,r3,11
  827674:	10c00015 	stw	r3,0(r2)
  827678:	e0bf6d17 	ldw	r2,-588(fp)
  82767c:	10801004 	addi	r2,r2,64
  827680:	e13f7e17 	ldw	r4,-520(fp)
  827684:	e0ff7617 	ldw	r3,-552(fp)
  827688:	20c7883a 	add	r3,r4,r3
  82768c:	1807d2fa 	srai	r3,r3,11
  827690:	10c00015 	stw	r3,0(r2)
  827694:	e0bf6d17 	ldw	r2,-588(fp)
  827698:	10806004 	addi	r2,r2,384
  82769c:	e13f7e17 	ldw	r4,-520(fp)
  8276a0:	e0ff7617 	ldw	r3,-552(fp)
  8276a4:	20c7c83a 	sub	r3,r4,r3
  8276a8:	1807d2fa 	srai	r3,r3,11
  8276ac:	10c00015 	stw	r3,0(r2)
  8276b0:	e0bf6d17 	ldw	r2,-588(fp)
  8276b4:	10801804 	addi	r2,r2,96
  8276b8:	e13f7917 	ldw	r4,-540(fp)
  8276bc:	e0ff7717 	ldw	r3,-548(fp)
  8276c0:	20c7883a 	add	r3,r4,r3
  8276c4:	1807d2fa 	srai	r3,r3,11
  8276c8:	10c00015 	stw	r3,0(r2)
  8276cc:	e0bf6d17 	ldw	r2,-588(fp)
  8276d0:	10805804 	addi	r2,r2,352
  8276d4:	e13f7917 	ldw	r4,-540(fp)
  8276d8:	e0ff7717 	ldw	r3,-548(fp)
  8276dc:	20c7c83a 	sub	r3,r4,r3
  8276e0:	1807d2fa 	srai	r3,r3,11
  8276e4:	10c00015 	stw	r3,0(r2)
  8276e8:	e0bf6d17 	ldw	r2,-588(fp)
  8276ec:	10802004 	addi	r2,r2,128
  8276f0:	e13f7d17 	ldw	r4,-524(fp)
  8276f4:	e0ff8117 	ldw	r3,-508(fp)
  8276f8:	20c7883a 	add	r3,r4,r3
  8276fc:	1807d2fa 	srai	r3,r3,11
  827700:	10c00015 	stw	r3,0(r2)
  827704:	e0bf6d17 	ldw	r2,-588(fp)
  827708:	10805004 	addi	r2,r2,320
  82770c:	e13f7d17 	ldw	r4,-524(fp)
  827710:	e0ff8117 	ldw	r3,-508(fp)
  827714:	20c7c83a 	sub	r3,r4,r3
  827718:	1807d2fa 	srai	r3,r3,11
  82771c:	10c00015 	stw	r3,0(r2)
  827720:	e0bf6d17 	ldw	r2,-588(fp)
  827724:	10802804 	addi	r2,r2,160
  827728:	e13f7a17 	ldw	r4,-536(fp)
  82772c:	e0ff8017 	ldw	r3,-512(fp)
  827730:	20c7883a 	add	r3,r4,r3
  827734:	1807d2fa 	srai	r3,r3,11
  827738:	10c00015 	stw	r3,0(r2)
  82773c:	e0bf6d17 	ldw	r2,-588(fp)
  827740:	10804804 	addi	r2,r2,288
  827744:	e13f7a17 	ldw	r4,-536(fp)
  827748:	e0ff8017 	ldw	r3,-512(fp)
  82774c:	20c7c83a 	sub	r3,r4,r3
  827750:	1807d2fa 	srai	r3,r3,11
  827754:	10c00015 	stw	r3,0(r2)
  827758:	e0bf6d17 	ldw	r2,-588(fp)
  82775c:	10803004 	addi	r2,r2,192
  827760:	e13f7b17 	ldw	r4,-532(fp)
  827764:	e0ff8217 	ldw	r3,-504(fp)
  827768:	20c7883a 	add	r3,r4,r3
  82776c:	1807d2fa 	srai	r3,r3,11
  827770:	10c00015 	stw	r3,0(r2)
  827774:	e0bf6d17 	ldw	r2,-588(fp)
  827778:	10804004 	addi	r2,r2,256
  82777c:	e13f7b17 	ldw	r4,-532(fp)
  827780:	e0ff8217 	ldw	r3,-504(fp)
  827784:	20c7c83a 	sub	r3,r4,r3
  827788:	1807d2fa 	srai	r3,r3,11
  82778c:	10c00015 	stw	r3,0(r2)
  827790:	e0bf6d17 	ldw	r2,-588(fp)
  827794:	10803804 	addi	r2,r2,224
  827798:	e0ff7f17 	ldw	r3,-516(fp)
  82779c:	1807d2fa 	srai	r3,r3,11
  8277a0:	10c00015 	stw	r3,0(r2)
  8277a4:	e0bf6e17 	ldw	r2,-584(fp)
  8277a8:	10800044 	addi	r2,r2,1
  8277ac:	e0bf6e15 	stw	r2,-584(fp)
  8277b0:	e0bf6b17 	ldw	r2,-596(fp)
  8277b4:	10800084 	addi	r2,r2,2
  8277b8:	e0bf6b15 	stw	r2,-596(fp)
  8277bc:	e0bf6c17 	ldw	r2,-592(fp)
  8277c0:	10800104 	addi	r2,r2,4
  8277c4:	e0bf6c15 	stw	r2,-592(fp)
  8277c8:	e0bf6d17 	ldw	r2,-588(fp)
  8277cc:	10800104 	addi	r2,r2,4
  8277d0:	e0bf6d15 	stw	r2,-588(fp)
  8277d4:	e0bf6e17 	ldw	r2,-584(fp)
  8277d8:	10800210 	cmplti	r2,r2,8
  8277dc:	103e471e 	bne	r2,zero,8270fc <__alt_mem_epcs_flash_controller_0+0xff81e0fc>
  8277e0:	e0bf8404 	addi	r2,fp,-496
  8277e4:	e0bf6d15 	stw	r2,-588(fp)
  8277e8:	e03f6e15 	stw	zero,-584(fp)
  8277ec:	0001ad06 	br	827ea4 <jpeg_idct_15x15+0xdfc>
  8277f0:	e0bf6e17 	ldw	r2,-584(fp)
  8277f4:	1085883a 	add	r2,r2,r2
  8277f8:	1085883a 	add	r2,r2,r2
  8277fc:	1007883a 	mov	r3,r2
  827800:	e0bfff17 	ldw	r2,-4(fp)
  827804:	10c5883a 	add	r2,r2,r3
  827808:	10c00017 	ldw	r3,0(r2)
  82780c:	e0800217 	ldw	r2,8(fp)
  827810:	1885883a 	add	r2,r3,r2
  827814:	e0bf8315 	stw	r2,-500(fp)
  827818:	e0bf6d17 	ldw	r2,-588(fp)
  82781c:	10800017 	ldw	r2,0(r2)
  827820:	10900404 	addi	r2,r2,16400
  827824:	e0bf7015 	stw	r2,-576(fp)
  827828:	e0bf7017 	ldw	r2,-576(fp)
  82782c:	1004937a 	slli	r2,r2,13
  827830:	e0bf7015 	stw	r2,-576(fp)
  827834:	e0bf6d17 	ldw	r2,-588(fp)
  827838:	10800204 	addi	r2,r2,8
  82783c:	10800017 	ldw	r2,0(r2)
  827840:	e0bf7115 	stw	r2,-572(fp)
  827844:	e0bf6d17 	ldw	r2,-588(fp)
  827848:	10800404 	addi	r2,r2,16
  82784c:	10800017 	ldw	r2,0(r2)
  827850:	e0bf7215 	stw	r2,-568(fp)
  827854:	e0bf6d17 	ldw	r2,-588(fp)
  827858:	10800604 	addi	r2,r2,24
  82785c:	10800017 	ldw	r2,0(r2)
  827860:	e0bf7315 	stw	r2,-564(fp)
  827864:	01437f04 	movi	r5,3580
  827868:	e13f7317 	ldw	r4,-564(fp)
  82786c:	08305040 	call	830504 <__mulsi3>
  827870:	e0bf7415 	stw	r2,-560(fp)
  827874:	01492744 	movi	r5,9373
  827878:	e13f7317 	ldw	r4,-564(fp)
  82787c:	08305040 	call	830504 <__mulsi3>
  827880:	e0bf7515 	stw	r2,-556(fp)
  827884:	e0ff7017 	ldw	r3,-576(fp)
  827888:	e0bf7417 	ldw	r2,-560(fp)
  82788c:	1885c83a 	sub	r2,r3,r2
  827890:	e0bf7615 	stw	r2,-552(fp)
  827894:	e0ff7017 	ldw	r3,-576(fp)
  827898:	e0bf7517 	ldw	r2,-556(fp)
  82789c:	1885883a 	add	r2,r3,r2
  8278a0:	e0bf7715 	stw	r2,-548(fp)
  8278a4:	e0ff7517 	ldw	r3,-556(fp)
  8278a8:	e0bf7417 	ldw	r2,-560(fp)
  8278ac:	1885c83a 	sub	r2,r3,r2
  8278b0:	1085883a 	add	r2,r2,r2
  8278b4:	1007883a 	mov	r3,r2
  8278b8:	e0bf7017 	ldw	r2,-576(fp)
  8278bc:	10c5c83a 	sub	r2,r2,r3
  8278c0:	e0bf7015 	stw	r2,-576(fp)
  8278c4:	e0ff7117 	ldw	r3,-572(fp)
  8278c8:	e0bf7217 	ldw	r2,-568(fp)
  8278cc:	1885c83a 	sub	r2,r3,r2
  8278d0:	e0bf7315 	stw	r2,-564(fp)
  8278d4:	e0ff7217 	ldw	r3,-568(fp)
  8278d8:	e0bf7117 	ldw	r2,-572(fp)
  8278dc:	1885883a 	add	r2,r3,r2
  8278e0:	e0bf7215 	stw	r2,-568(fp)
  8278e4:	014ab384 	movi	r5,10958
  8278e8:	e13f7217 	ldw	r4,-568(fp)
  8278ec:	08305040 	call	830504 <__mulsi3>
  8278f0:	e0bf7415 	stw	r2,-560(fp)
  8278f4:	01405d84 	movi	r5,374
  8278f8:	e13f7317 	ldw	r4,-564(fp)
  8278fc:	08305040 	call	830504 <__mulsi3>
  827900:	e0bf7515 	stw	r2,-556(fp)
  827904:	014b84c4 	movi	r5,11795
  827908:	e13f7117 	ldw	r4,-572(fp)
  82790c:	08305040 	call	830504 <__mulsi3>
  827910:	e0bf7115 	stw	r2,-572(fp)
  827914:	e0ff7717 	ldw	r3,-548(fp)
  827918:	e0bf7417 	ldw	r2,-560(fp)
  82791c:	1887883a 	add	r3,r3,r2
  827920:	e0bf7517 	ldw	r2,-556(fp)
  827924:	1885883a 	add	r2,r3,r2
  827928:	e0bf7815 	stw	r2,-544(fp)
  82792c:	e0ff7617 	ldw	r3,-552(fp)
  827930:	e0bf7417 	ldw	r2,-560(fp)
  827934:	1887c83a 	sub	r3,r3,r2
  827938:	e0bf7517 	ldw	r2,-556(fp)
  82793c:	1887883a 	add	r3,r3,r2
  827940:	e0bf7117 	ldw	r2,-572(fp)
  827944:	1885883a 	add	r2,r3,r2
  827948:	e0bf7915 	stw	r2,-540(fp)
  82794c:	01446084 	movi	r5,4482
  827950:	e13f7217 	ldw	r4,-568(fp)
  827954:	08305040 	call	830504 <__mulsi3>
  827958:	e0bf7415 	stw	r2,-560(fp)
  82795c:	014331c4 	movi	r5,3271
  827960:	e13f7317 	ldw	r4,-564(fp)
  827964:	08305040 	call	830504 <__mulsi3>
  827968:	e0bf7515 	stw	r2,-556(fp)
  82796c:	e0ff7717 	ldw	r3,-548(fp)
  827970:	e0bf7417 	ldw	r2,-560(fp)
  827974:	1887c83a 	sub	r3,r3,r2
  827978:	e0bf7517 	ldw	r2,-556(fp)
  82797c:	1885c83a 	sub	r2,r3,r2
  827980:	e0bf7a15 	stw	r2,-536(fp)
  827984:	e0ff7617 	ldw	r3,-552(fp)
  827988:	e0bf7417 	ldw	r2,-560(fp)
  82798c:	1887883a 	add	r3,r3,r2
  827990:	e0bf7517 	ldw	r2,-556(fp)
  827994:	1887c83a 	sub	r3,r3,r2
  827998:	e0bf7117 	ldw	r2,-572(fp)
  82799c:	1885c83a 	sub	r2,r3,r2
  8279a0:	e0bf7b15 	stw	r2,-532(fp)
  8279a4:	01465304 	movi	r5,6476
  8279a8:	e13f7217 	ldw	r4,-568(fp)
  8279ac:	08305040 	call	830504 <__mulsi3>
  8279b0:	e0bf7415 	stw	r2,-560(fp)
  8279b4:	0142d404 	movi	r5,2896
  8279b8:	e13f7317 	ldw	r4,-564(fp)
  8279bc:	08305040 	call	830504 <__mulsi3>
  8279c0:	e0bf7515 	stw	r2,-556(fp)
  8279c4:	e0ff7617 	ldw	r3,-552(fp)
  8279c8:	e0bf7417 	ldw	r2,-560(fp)
  8279cc:	1887883a 	add	r3,r3,r2
  8279d0:	e0bf7517 	ldw	r2,-556(fp)
  8279d4:	1885883a 	add	r2,r3,r2
  8279d8:	e0bf7c15 	stw	r2,-528(fp)
  8279dc:	e0ff7717 	ldw	r3,-548(fp)
  8279e0:	e0bf7417 	ldw	r2,-560(fp)
  8279e4:	1887c83a 	sub	r3,r3,r2
  8279e8:	e0bf7517 	ldw	r2,-556(fp)
  8279ec:	1885883a 	add	r2,r3,r2
  8279f0:	e0bf7d15 	stw	r2,-524(fp)
  8279f4:	e0ff7517 	ldw	r3,-556(fp)
  8279f8:	e0bf7517 	ldw	r2,-556(fp)
  8279fc:	1885883a 	add	r2,r3,r2
  827a00:	e0bf7515 	stw	r2,-556(fp)
  827a04:	e0ff7017 	ldw	r3,-576(fp)
  827a08:	e0bf7517 	ldw	r2,-556(fp)
  827a0c:	1885883a 	add	r2,r3,r2
  827a10:	e0bf7e15 	stw	r2,-520(fp)
  827a14:	e0ff7017 	ldw	r3,-576(fp)
  827a18:	e0bf7517 	ldw	r2,-556(fp)
  827a1c:	1887c83a 	sub	r3,r3,r2
  827a20:	e0bf7517 	ldw	r2,-556(fp)
  827a24:	1885c83a 	sub	r2,r3,r2
  827a28:	e0bf7f15 	stw	r2,-516(fp)
  827a2c:	e0bf6d17 	ldw	r2,-588(fp)
  827a30:	10800104 	addi	r2,r2,4
  827a34:	10800017 	ldw	r2,0(r2)
  827a38:	e0bf7015 	stw	r2,-576(fp)
  827a3c:	e0bf6d17 	ldw	r2,-588(fp)
  827a40:	10800304 	addi	r2,r2,12
  827a44:	10800017 	ldw	r2,0(r2)
  827a48:	e0bf7115 	stw	r2,-572(fp)
  827a4c:	e0bf6d17 	ldw	r2,-588(fp)
  827a50:	10800504 	addi	r2,r2,20
  827a54:	10800017 	ldw	r2,0(r2)
  827a58:	e0bf7315 	stw	r2,-564(fp)
  827a5c:	0149cc44 	movi	r5,10033
  827a60:	e13f7317 	ldw	r4,-564(fp)
  827a64:	08305040 	call	830504 <__mulsi3>
  827a68:	e0bf7215 	stw	r2,-568(fp)
  827a6c:	e0bf6d17 	ldw	r2,-588(fp)
  827a70:	10800704 	addi	r2,r2,28
  827a74:	10800017 	ldw	r2,0(r2)
  827a78:	e0bf7315 	stw	r2,-564(fp)
  827a7c:	e0ff7117 	ldw	r3,-572(fp)
  827a80:	e0bf7317 	ldw	r2,-564(fp)
  827a84:	1885c83a 	sub	r2,r3,r2
  827a88:	e0bf7715 	stw	r2,-548(fp)
  827a8c:	e0ff7017 	ldw	r3,-576(fp)
  827a90:	e0bf7717 	ldw	r2,-548(fp)
  827a94:	1885883a 	add	r2,r3,r2
  827a98:	0146a684 	movi	r5,6810
  827a9c:	1009883a 	mov	r4,r2
  827aa0:	08305040 	call	830504 <__mulsi3>
  827aa4:	e0bf8015 	stw	r2,-512(fp)
  827aa8:	01441c44 	movi	r5,4209
  827aac:	e13f7017 	ldw	r4,-576(fp)
  827ab0:	08305040 	call	830504 <__mulsi3>
  827ab4:	1007883a 	mov	r3,r2
  827ab8:	e0bf8017 	ldw	r2,-512(fp)
  827abc:	1885883a 	add	r2,r3,r2
  827ac0:	e0bf7515 	stw	r2,-556(fp)
  827ac4:	016e9704 	movi	r5,-17828
  827ac8:	e13f7717 	ldw	r4,-548(fp)
  827acc:	08305040 	call	830504 <__mulsi3>
  827ad0:	1007883a 	mov	r3,r2
  827ad4:	e0bf8017 	ldw	r2,-512(fp)
  827ad8:	1885883a 	add	r2,r3,r2
  827adc:	e0bf8115 	stw	r2,-508(fp)
  827ae0:	01795984 	movi	r5,-6810
  827ae4:	e13f7117 	ldw	r4,-572(fp)
  827ae8:	08305040 	call	830504 <__mulsi3>
  827aec:	e0bf7715 	stw	r2,-548(fp)
  827af0:	01753d84 	movi	r5,-11018
  827af4:	e13f7117 	ldw	r4,-572(fp)
  827af8:	08305040 	call	830504 <__mulsi3>
  827afc:	e0bf8015 	stw	r2,-512(fp)
  827b00:	e0ff7017 	ldw	r3,-576(fp)
  827b04:	e0bf7317 	ldw	r2,-564(fp)
  827b08:	1885c83a 	sub	r2,r3,r2
  827b0c:	e0bf7115 	stw	r2,-572(fp)
  827b10:	014b4084 	movi	r5,11522
  827b14:	e13f7117 	ldw	r4,-572(fp)
  827b18:	08305040 	call	830504 <__mulsi3>
  827b1c:	1007883a 	mov	r3,r2
  827b20:	e0bf7217 	ldw	r2,-568(fp)
  827b24:	1885883a 	add	r2,r3,r2
  827b28:	e0bf7615 	stw	r2,-552(fp)
  827b2c:	0153a8c4 	movi	r5,20131
  827b30:	e13f7317 	ldw	r4,-564(fp)
  827b34:	08305040 	call	830504 <__mulsi3>
  827b38:	1007883a 	mov	r3,r2
  827b3c:	e0bf7617 	ldw	r2,-552(fp)
  827b40:	1887883a 	add	r3,r3,r2
  827b44:	e0bf8017 	ldw	r2,-512(fp)
  827b48:	1885c83a 	sub	r2,r3,r2
  827b4c:	e0bf7415 	stw	r2,-560(fp)
  827b50:	017719c4 	movi	r5,-9113
  827b54:	e13f7017 	ldw	r4,-576(fp)
  827b58:	08305040 	call	830504 <__mulsi3>
  827b5c:	1007883a 	mov	r3,r2
  827b60:	e0bf7617 	ldw	r2,-552(fp)
  827b64:	1887883a 	add	r3,r3,r2
  827b68:	e0bf7717 	ldw	r2,-548(fp)
  827b6c:	1885883a 	add	r2,r3,r2
  827b70:	e0bf8215 	stw	r2,-504(fp)
  827b74:	0149cc44 	movi	r5,10033
  827b78:	e13f7117 	ldw	r4,-572(fp)
  827b7c:	08305040 	call	830504 <__mulsi3>
  827b80:	1007883a 	mov	r3,r2
  827b84:	e0bf7217 	ldw	r2,-568(fp)
  827b88:	1885c83a 	sub	r2,r3,r2
  827b8c:	e0bf7615 	stw	r2,-552(fp)
  827b90:	e0ff7017 	ldw	r3,-576(fp)
  827b94:	e0bf7317 	ldw	r2,-564(fp)
  827b98:	1885883a 	add	r2,r3,r2
  827b9c:	01449a04 	movi	r5,4712
  827ba0:	1009883a 	mov	r4,r2
  827ba4:	08305040 	call	830504 <__mulsi3>
  827ba8:	e0bf7115 	stw	r2,-572(fp)
  827bac:	0143ce44 	movi	r5,3897
  827bb0:	e13f7017 	ldw	r4,-576(fp)
  827bb4:	08305040 	call	830504 <__mulsi3>
  827bb8:	1007883a 	mov	r3,r2
  827bbc:	e0bf7117 	ldw	r2,-572(fp)
  827bc0:	1887883a 	add	r3,r3,r2
  827bc4:	e0bf7217 	ldw	r2,-568(fp)
  827bc8:	1885c83a 	sub	r2,r3,r2
  827bcc:	e0ff7717 	ldw	r3,-548(fp)
  827bd0:	1885883a 	add	r2,r3,r2
  827bd4:	e0bf7715 	stw	r2,-548(fp)
  827bd8:	01790bc4 	movi	r5,-7121
  827bdc:	e13f7317 	ldw	r4,-564(fp)
  827be0:	08305040 	call	830504 <__mulsi3>
  827be4:	1007883a 	mov	r3,r2
  827be8:	e0bf7117 	ldw	r2,-572(fp)
  827bec:	1887883a 	add	r3,r3,r2
  827bf0:	e0bf7217 	ldw	r2,-568(fp)
  827bf4:	1885883a 	add	r2,r3,r2
  827bf8:	e0ff8017 	ldw	r3,-512(fp)
  827bfc:	1885883a 	add	r2,r3,r2
  827c00:	e0bf8015 	stw	r2,-512(fp)
  827c04:	e0ff7817 	ldw	r3,-544(fp)
  827c08:	e0bf7417 	ldw	r2,-560(fp)
  827c0c:	1885883a 	add	r2,r3,r2
  827c10:	1005d4ba 	srai	r2,r2,18
  827c14:	1080ffcc 	andi	r2,r2,1023
  827c18:	e0ff6f17 	ldw	r3,-580(fp)
  827c1c:	1885883a 	add	r2,r3,r2
  827c20:	10c00003 	ldbu	r3,0(r2)
  827c24:	e0bf8317 	ldw	r2,-500(fp)
  827c28:	10c00005 	stb	r3,0(r2)
  827c2c:	e0bf8317 	ldw	r2,-500(fp)
  827c30:	10800384 	addi	r2,r2,14
  827c34:	e13f7817 	ldw	r4,-544(fp)
  827c38:	e0ff7417 	ldw	r3,-560(fp)
  827c3c:	20c7c83a 	sub	r3,r4,r3
  827c40:	1807d4ba 	srai	r3,r3,18
  827c44:	18c0ffcc 	andi	r3,r3,1023
  827c48:	e13f6f17 	ldw	r4,-580(fp)
  827c4c:	20c7883a 	add	r3,r4,r3
  827c50:	18c00003 	ldbu	r3,0(r3)
  827c54:	10c00005 	stb	r3,0(r2)
  827c58:	e0bf8317 	ldw	r2,-500(fp)
  827c5c:	10800044 	addi	r2,r2,1
  827c60:	e13f7c17 	ldw	r4,-528(fp)
  827c64:	e0ff7517 	ldw	r3,-556(fp)
  827c68:	20c7883a 	add	r3,r4,r3
  827c6c:	1807d4ba 	srai	r3,r3,18
  827c70:	18c0ffcc 	andi	r3,r3,1023
  827c74:	e13f6f17 	ldw	r4,-580(fp)
  827c78:	20c7883a 	add	r3,r4,r3
  827c7c:	18c00003 	ldbu	r3,0(r3)
  827c80:	10c00005 	stb	r3,0(r2)
  827c84:	e0bf8317 	ldw	r2,-500(fp)
  827c88:	10800344 	addi	r2,r2,13
  827c8c:	e13f7c17 	ldw	r4,-528(fp)
  827c90:	e0ff7517 	ldw	r3,-556(fp)
  827c94:	20c7c83a 	sub	r3,r4,r3
  827c98:	1807d4ba 	srai	r3,r3,18
  827c9c:	18c0ffcc 	andi	r3,r3,1023
  827ca0:	e13f6f17 	ldw	r4,-580(fp)
  827ca4:	20c7883a 	add	r3,r4,r3
  827ca8:	18c00003 	ldbu	r3,0(r3)
  827cac:	10c00005 	stb	r3,0(r2)
  827cb0:	e0bf8317 	ldw	r2,-500(fp)
  827cb4:	10800084 	addi	r2,r2,2
  827cb8:	e13f7e17 	ldw	r4,-520(fp)
  827cbc:	e0ff7617 	ldw	r3,-552(fp)
  827cc0:	20c7883a 	add	r3,r4,r3
  827cc4:	1807d4ba 	srai	r3,r3,18
  827cc8:	18c0ffcc 	andi	r3,r3,1023
  827ccc:	e13f6f17 	ldw	r4,-580(fp)
  827cd0:	20c7883a 	add	r3,r4,r3
  827cd4:	18c00003 	ldbu	r3,0(r3)
  827cd8:	10c00005 	stb	r3,0(r2)
  827cdc:	e0bf8317 	ldw	r2,-500(fp)
  827ce0:	10800304 	addi	r2,r2,12
  827ce4:	e13f7e17 	ldw	r4,-520(fp)
  827ce8:	e0ff7617 	ldw	r3,-552(fp)
  827cec:	20c7c83a 	sub	r3,r4,r3
  827cf0:	1807d4ba 	srai	r3,r3,18
  827cf4:	18c0ffcc 	andi	r3,r3,1023
  827cf8:	e13f6f17 	ldw	r4,-580(fp)
  827cfc:	20c7883a 	add	r3,r4,r3
  827d00:	18c00003 	ldbu	r3,0(r3)
  827d04:	10c00005 	stb	r3,0(r2)
  827d08:	e0bf8317 	ldw	r2,-500(fp)
  827d0c:	108000c4 	addi	r2,r2,3
  827d10:	e13f7917 	ldw	r4,-540(fp)
  827d14:	e0ff7717 	ldw	r3,-548(fp)
  827d18:	20c7883a 	add	r3,r4,r3
  827d1c:	1807d4ba 	srai	r3,r3,18
  827d20:	18c0ffcc 	andi	r3,r3,1023
  827d24:	e13f6f17 	ldw	r4,-580(fp)
  827d28:	20c7883a 	add	r3,r4,r3
  827d2c:	18c00003 	ldbu	r3,0(r3)
  827d30:	10c00005 	stb	r3,0(r2)
  827d34:	e0bf8317 	ldw	r2,-500(fp)
  827d38:	108002c4 	addi	r2,r2,11
  827d3c:	e13f7917 	ldw	r4,-540(fp)
  827d40:	e0ff7717 	ldw	r3,-548(fp)
  827d44:	20c7c83a 	sub	r3,r4,r3
  827d48:	1807d4ba 	srai	r3,r3,18
  827d4c:	18c0ffcc 	andi	r3,r3,1023
  827d50:	e13f6f17 	ldw	r4,-580(fp)
  827d54:	20c7883a 	add	r3,r4,r3
  827d58:	18c00003 	ldbu	r3,0(r3)
  827d5c:	10c00005 	stb	r3,0(r2)
  827d60:	e0bf8317 	ldw	r2,-500(fp)
  827d64:	10800104 	addi	r2,r2,4
  827d68:	e13f7d17 	ldw	r4,-524(fp)
  827d6c:	e0ff8117 	ldw	r3,-508(fp)
  827d70:	20c7883a 	add	r3,r4,r3
  827d74:	1807d4ba 	srai	r3,r3,18
  827d78:	18c0ffcc 	andi	r3,r3,1023
  827d7c:	e13f6f17 	ldw	r4,-580(fp)
  827d80:	20c7883a 	add	r3,r4,r3
  827d84:	18c00003 	ldbu	r3,0(r3)
  827d88:	10c00005 	stb	r3,0(r2)
  827d8c:	e0bf8317 	ldw	r2,-500(fp)
  827d90:	10800284 	addi	r2,r2,10
  827d94:	e13f7d17 	ldw	r4,-524(fp)
  827d98:	e0ff8117 	ldw	r3,-508(fp)
  827d9c:	20c7c83a 	sub	r3,r4,r3
  827da0:	1807d4ba 	srai	r3,r3,18
  827da4:	18c0ffcc 	andi	r3,r3,1023
  827da8:	e13f6f17 	ldw	r4,-580(fp)
  827dac:	20c7883a 	add	r3,r4,r3
  827db0:	18c00003 	ldbu	r3,0(r3)
  827db4:	10c00005 	stb	r3,0(r2)
  827db8:	e0bf8317 	ldw	r2,-500(fp)
  827dbc:	10800144 	addi	r2,r2,5
  827dc0:	e13f7a17 	ldw	r4,-536(fp)
  827dc4:	e0ff8017 	ldw	r3,-512(fp)
  827dc8:	20c7883a 	add	r3,r4,r3
  827dcc:	1807d4ba 	srai	r3,r3,18
  827dd0:	18c0ffcc 	andi	r3,r3,1023
  827dd4:	e13f6f17 	ldw	r4,-580(fp)
  827dd8:	20c7883a 	add	r3,r4,r3
  827ddc:	18c00003 	ldbu	r3,0(r3)
  827de0:	10c00005 	stb	r3,0(r2)
  827de4:	e0bf8317 	ldw	r2,-500(fp)
  827de8:	10800244 	addi	r2,r2,9
  827dec:	e13f7a17 	ldw	r4,-536(fp)
  827df0:	e0ff8017 	ldw	r3,-512(fp)
  827df4:	20c7c83a 	sub	r3,r4,r3
  827df8:	1807d4ba 	srai	r3,r3,18
  827dfc:	18c0ffcc 	andi	r3,r3,1023
  827e00:	e13f6f17 	ldw	r4,-580(fp)
  827e04:	20c7883a 	add	r3,r4,r3
  827e08:	18c00003 	ldbu	r3,0(r3)
  827e0c:	10c00005 	stb	r3,0(r2)
  827e10:	e0bf8317 	ldw	r2,-500(fp)
  827e14:	10800184 	addi	r2,r2,6
  827e18:	e13f7b17 	ldw	r4,-532(fp)
  827e1c:	e0ff8217 	ldw	r3,-504(fp)
  827e20:	20c7883a 	add	r3,r4,r3
  827e24:	1807d4ba 	srai	r3,r3,18
  827e28:	18c0ffcc 	andi	r3,r3,1023
  827e2c:	e13f6f17 	ldw	r4,-580(fp)
  827e30:	20c7883a 	add	r3,r4,r3
  827e34:	18c00003 	ldbu	r3,0(r3)
  827e38:	10c00005 	stb	r3,0(r2)
  827e3c:	e0bf8317 	ldw	r2,-500(fp)
  827e40:	10800204 	addi	r2,r2,8
  827e44:	e13f7b17 	ldw	r4,-532(fp)
  827e48:	e0ff8217 	ldw	r3,-504(fp)
  827e4c:	20c7c83a 	sub	r3,r4,r3
  827e50:	1807d4ba 	srai	r3,r3,18
  827e54:	18c0ffcc 	andi	r3,r3,1023
  827e58:	e13f6f17 	ldw	r4,-580(fp)
  827e5c:	20c7883a 	add	r3,r4,r3
  827e60:	18c00003 	ldbu	r3,0(r3)
  827e64:	10c00005 	stb	r3,0(r2)
  827e68:	e0bf8317 	ldw	r2,-500(fp)
  827e6c:	108001c4 	addi	r2,r2,7
  827e70:	e0ff7f17 	ldw	r3,-516(fp)
  827e74:	1807d4ba 	srai	r3,r3,18
  827e78:	18c0ffcc 	andi	r3,r3,1023
  827e7c:	e13f6f17 	ldw	r4,-580(fp)
  827e80:	20c7883a 	add	r3,r4,r3
  827e84:	18c00003 	ldbu	r3,0(r3)
  827e88:	10c00005 	stb	r3,0(r2)
  827e8c:	e0bf6d17 	ldw	r2,-588(fp)
  827e90:	10800804 	addi	r2,r2,32
  827e94:	e0bf6d15 	stw	r2,-588(fp)
  827e98:	e0bf6e17 	ldw	r2,-584(fp)
  827e9c:	10800044 	addi	r2,r2,1
  827ea0:	e0bf6e15 	stw	r2,-584(fp)
  827ea4:	e0bf6e17 	ldw	r2,-584(fp)
  827ea8:	108003d0 	cmplti	r2,r2,15
  827eac:	103e501e 	bne	r2,zero,8277f0 <__alt_mem_epcs_flash_controller_0+0xff81e7f0>
  827eb0:	0001883a 	nop
  827eb4:	e037883a 	mov	sp,fp
  827eb8:	dfc00117 	ldw	ra,4(sp)
  827ebc:	df000017 	ldw	fp,0(sp)
  827ec0:	dec00204 	addi	sp,sp,8
  827ec4:	f800283a 	ret

00827ec8 <jpeg_idct_16x16>:
  827ec8:	deff5f04 	addi	sp,sp,-644
  827ecc:	dfc0a015 	stw	ra,640(sp)
  827ed0:	df009f15 	stw	fp,636(sp)
  827ed4:	dc009e15 	stw	r16,632(sp)
  827ed8:	df009f04 	addi	fp,sp,636
  827edc:	e13ffb15 	stw	r4,-20(fp)
  827ee0:	e17ffc15 	stw	r5,-16(fp)
  827ee4:	e1bffd15 	stw	r6,-12(fp)
  827ee8:	e1fffe15 	stw	r7,-8(fp)
  827eec:	e0bffb17 	ldw	r2,-20(fp)
  827ef0:	10805417 	ldw	r2,336(r2)
  827ef4:	10bfa004 	addi	r2,r2,-384
  827ef8:	e0bf6515 	stw	r2,-620(fp)
  827efc:	e0bffd17 	ldw	r2,-12(fp)
  827f00:	e0bf6115 	stw	r2,-636(fp)
  827f04:	e0bffc17 	ldw	r2,-16(fp)
  827f08:	10801517 	ldw	r2,84(r2)
  827f0c:	e0bf6215 	stw	r2,-632(fp)
  827f10:	e0bf7b04 	addi	r2,fp,-532
  827f14:	e0bf6315 	stw	r2,-628(fp)
  827f18:	e03f6415 	stw	zero,-624(fp)
  827f1c:	0001f906 	br	828704 <jpeg_idct_16x16+0x83c>
  827f20:	e0bf6117 	ldw	r2,-636(fp)
  827f24:	1080000b 	ldhu	r2,0(r2)
  827f28:	10ffffcc 	andi	r3,r2,65535
  827f2c:	18e0001c 	xori	r3,r3,32768
  827f30:	18e00004 	addi	r3,r3,-32768
  827f34:	e0bf6217 	ldw	r2,-632(fp)
  827f38:	10800017 	ldw	r2,0(r2)
  827f3c:	100b883a 	mov	r5,r2
  827f40:	1809883a 	mov	r4,r3
  827f44:	08305040 	call	830504 <__mulsi3>
  827f48:	e0bf6615 	stw	r2,-616(fp)
  827f4c:	e0bf6617 	ldw	r2,-616(fp)
  827f50:	1004937a 	slli	r2,r2,13
  827f54:	e0bf6615 	stw	r2,-616(fp)
  827f58:	e0bf6617 	ldw	r2,-616(fp)
  827f5c:	10810004 	addi	r2,r2,1024
  827f60:	e0bf6615 	stw	r2,-616(fp)
  827f64:	e0bf6117 	ldw	r2,-636(fp)
  827f68:	10801004 	addi	r2,r2,64
  827f6c:	1080000b 	ldhu	r2,0(r2)
  827f70:	10ffffcc 	andi	r3,r2,65535
  827f74:	18e0001c 	xori	r3,r3,32768
  827f78:	18e00004 	addi	r3,r3,-32768
  827f7c:	e0bf6217 	ldw	r2,-632(fp)
  827f80:	10802004 	addi	r2,r2,128
  827f84:	10800017 	ldw	r2,0(r2)
  827f88:	100b883a 	mov	r5,r2
  827f8c:	1809883a 	mov	r4,r3
  827f90:	08305040 	call	830504 <__mulsi3>
  827f94:	e0bf6715 	stw	r2,-612(fp)
  827f98:	014a73c4 	movi	r5,10703
  827f9c:	e13f6717 	ldw	r4,-612(fp)
  827fa0:	08305040 	call	830504 <__mulsi3>
  827fa4:	e0bf6815 	stw	r2,-608(fp)
  827fa8:	01445444 	movi	r5,4433
  827fac:	e13f6717 	ldw	r4,-612(fp)
  827fb0:	08305040 	call	830504 <__mulsi3>
  827fb4:	e0bf6915 	stw	r2,-604(fp)
  827fb8:	e0ff6617 	ldw	r3,-616(fp)
  827fbc:	e0bf6817 	ldw	r2,-608(fp)
  827fc0:	1885883a 	add	r2,r3,r2
  827fc4:	e0bf6a15 	stw	r2,-600(fp)
  827fc8:	e0ff6617 	ldw	r3,-616(fp)
  827fcc:	e0bf6817 	ldw	r2,-608(fp)
  827fd0:	1885c83a 	sub	r2,r3,r2
  827fd4:	e0bf6b15 	stw	r2,-596(fp)
  827fd8:	e0ff6617 	ldw	r3,-616(fp)
  827fdc:	e0bf6917 	ldw	r2,-604(fp)
  827fe0:	1885883a 	add	r2,r3,r2
  827fe4:	e0bf6c15 	stw	r2,-592(fp)
  827fe8:	e0ff6617 	ldw	r3,-616(fp)
  827fec:	e0bf6917 	ldw	r2,-604(fp)
  827ff0:	1885c83a 	sub	r2,r3,r2
  827ff4:	e0bf6d15 	stw	r2,-588(fp)
  827ff8:	e0bf6117 	ldw	r2,-636(fp)
  827ffc:	10800804 	addi	r2,r2,32
  828000:	1080000b 	ldhu	r2,0(r2)
  828004:	10ffffcc 	andi	r3,r2,65535
  828008:	18e0001c 	xori	r3,r3,32768
  82800c:	18e00004 	addi	r3,r3,-32768
  828010:	e0bf6217 	ldw	r2,-632(fp)
  828014:	10801004 	addi	r2,r2,64
  828018:	10800017 	ldw	r2,0(r2)
  82801c:	100b883a 	mov	r5,r2
  828020:	1809883a 	mov	r4,r3
  828024:	08305040 	call	830504 <__mulsi3>
  828028:	e0bf6715 	stw	r2,-612(fp)
  82802c:	e0bf6117 	ldw	r2,-636(fp)
  828030:	10801804 	addi	r2,r2,96
  828034:	1080000b 	ldhu	r2,0(r2)
  828038:	10ffffcc 	andi	r3,r2,65535
  82803c:	18e0001c 	xori	r3,r3,32768
  828040:	18e00004 	addi	r3,r3,-32768
  828044:	e0bf6217 	ldw	r2,-632(fp)
  828048:	10803004 	addi	r2,r2,192
  82804c:	10800017 	ldw	r2,0(r2)
  828050:	100b883a 	mov	r5,r2
  828054:	1809883a 	mov	r4,r3
  828058:	08305040 	call	830504 <__mulsi3>
  82805c:	e0bf6e15 	stw	r2,-584(fp)
  828060:	e0ff6717 	ldw	r3,-612(fp)
  828064:	e0bf6e17 	ldw	r2,-584(fp)
  828068:	1885c83a 	sub	r2,r3,r2
  82806c:	e0bf6f15 	stw	r2,-580(fp)
  828070:	01423504 	movi	r5,2260
  828074:	e13f6f17 	ldw	r4,-580(fp)
  828078:	08305040 	call	830504 <__mulsi3>
  82807c:	e0bf7015 	stw	r2,-576(fp)
  828080:	014b18c4 	movi	r5,11363
  828084:	e13f6f17 	ldw	r4,-580(fp)
  828088:	08305040 	call	830504 <__mulsi3>
  82808c:	e0bf6f15 	stw	r2,-580(fp)
  828090:	015480c4 	movi	r5,20995
  828094:	e13f6e17 	ldw	r4,-584(fp)
  828098:	08305040 	call	830504 <__mulsi3>
  82809c:	1007883a 	mov	r3,r2
  8280a0:	e0bf6f17 	ldw	r2,-580(fp)
  8280a4:	1885883a 	add	r2,r3,r2
  8280a8:	e0bf6615 	stw	r2,-616(fp)
  8280ac:	01473344 	movi	r5,7373
  8280b0:	e13f6717 	ldw	r4,-612(fp)
  8280b4:	08305040 	call	830504 <__mulsi3>
  8280b8:	1007883a 	mov	r3,r2
  8280bc:	e0bf7017 	ldw	r2,-576(fp)
  8280c0:	1885883a 	add	r2,r3,r2
  8280c4:	e0bf6815 	stw	r2,-608(fp)
  8280c8:	017b3084 	movi	r5,-4926
  8280cc:	e13f6717 	ldw	r4,-612(fp)
  8280d0:	08305040 	call	830504 <__mulsi3>
  8280d4:	1007883a 	mov	r3,r2
  8280d8:	e0bf6f17 	ldw	r2,-580(fp)
  8280dc:	1885883a 	add	r2,r3,r2
  8280e0:	e0bf6915 	stw	r2,-604(fp)
  8280e4:	017bec04 	movi	r5,-4176
  8280e8:	e13f6e17 	ldw	r4,-584(fp)
  8280ec:	08305040 	call	830504 <__mulsi3>
  8280f0:	1007883a 	mov	r3,r2
  8280f4:	e0bf7017 	ldw	r2,-576(fp)
  8280f8:	1885883a 	add	r2,r3,r2
  8280fc:	e0bf7115 	stw	r2,-572(fp)
  828100:	e0ff6a17 	ldw	r3,-600(fp)
  828104:	e0bf6617 	ldw	r2,-616(fp)
  828108:	1885883a 	add	r2,r3,r2
  82810c:	e0bf7215 	stw	r2,-568(fp)
  828110:	e0ff6a17 	ldw	r3,-600(fp)
  828114:	e0bf6617 	ldw	r2,-616(fp)
  828118:	1885c83a 	sub	r2,r3,r2
  82811c:	e0bf7315 	stw	r2,-564(fp)
  828120:	e0ff6c17 	ldw	r3,-592(fp)
  828124:	e0bf6817 	ldw	r2,-608(fp)
  828128:	1885883a 	add	r2,r3,r2
  82812c:	e0bf7415 	stw	r2,-560(fp)
  828130:	e0ff6c17 	ldw	r3,-592(fp)
  828134:	e0bf6817 	ldw	r2,-608(fp)
  828138:	1885c83a 	sub	r2,r3,r2
  82813c:	e0bf7515 	stw	r2,-556(fp)
  828140:	e0ff6d17 	ldw	r3,-588(fp)
  828144:	e0bf6917 	ldw	r2,-604(fp)
  828148:	1885883a 	add	r2,r3,r2
  82814c:	e0bf7615 	stw	r2,-552(fp)
  828150:	e0ff6d17 	ldw	r3,-588(fp)
  828154:	e0bf6917 	ldw	r2,-604(fp)
  828158:	1885c83a 	sub	r2,r3,r2
  82815c:	e0bf7715 	stw	r2,-548(fp)
  828160:	e0ff6b17 	ldw	r3,-596(fp)
  828164:	e0bf7117 	ldw	r2,-572(fp)
  828168:	1885883a 	add	r2,r3,r2
  82816c:	e0bf7815 	stw	r2,-544(fp)
  828170:	e0ff6b17 	ldw	r3,-596(fp)
  828174:	e0bf7117 	ldw	r2,-572(fp)
  828178:	1885c83a 	sub	r2,r3,r2
  82817c:	e0bf7915 	stw	r2,-540(fp)
  828180:	e0bf6117 	ldw	r2,-636(fp)
  828184:	10800404 	addi	r2,r2,16
  828188:	1080000b 	ldhu	r2,0(r2)
  82818c:	10ffffcc 	andi	r3,r2,65535
  828190:	18e0001c 	xori	r3,r3,32768
  828194:	18e00004 	addi	r3,r3,-32768
  828198:	e0bf6217 	ldw	r2,-632(fp)
  82819c:	10800804 	addi	r2,r2,32
  8281a0:	10800017 	ldw	r2,0(r2)
  8281a4:	100b883a 	mov	r5,r2
  8281a8:	1809883a 	mov	r4,r3
  8281ac:	08305040 	call	830504 <__mulsi3>
  8281b0:	e0bf6715 	stw	r2,-612(fp)
  8281b4:	e0bf6117 	ldw	r2,-636(fp)
  8281b8:	10800c04 	addi	r2,r2,48
  8281bc:	1080000b 	ldhu	r2,0(r2)
  8281c0:	10ffffcc 	andi	r3,r2,65535
  8281c4:	18e0001c 	xori	r3,r3,32768
  8281c8:	18e00004 	addi	r3,r3,-32768
  8281cc:	e0bf6217 	ldw	r2,-632(fp)
  8281d0:	10801804 	addi	r2,r2,96
  8281d4:	10800017 	ldw	r2,0(r2)
  8281d8:	100b883a 	mov	r5,r2
  8281dc:	1809883a 	mov	r4,r3
  8281e0:	08305040 	call	830504 <__mulsi3>
  8281e4:	e0bf6e15 	stw	r2,-584(fp)
  8281e8:	e0bf6117 	ldw	r2,-636(fp)
  8281ec:	10801404 	addi	r2,r2,80
  8281f0:	1080000b 	ldhu	r2,0(r2)
  8281f4:	10ffffcc 	andi	r3,r2,65535
  8281f8:	18e0001c 	xori	r3,r3,32768
  8281fc:	18e00004 	addi	r3,r3,-32768
  828200:	e0bf6217 	ldw	r2,-632(fp)
  828204:	10802804 	addi	r2,r2,160
  828208:	10800017 	ldw	r2,0(r2)
  82820c:	100b883a 	mov	r5,r2
  828210:	1809883a 	mov	r4,r3
  828214:	08305040 	call	830504 <__mulsi3>
  828218:	e0bf6f15 	stw	r2,-580(fp)
  82821c:	e0bf6117 	ldw	r2,-636(fp)
  828220:	10801c04 	addi	r2,r2,112
  828224:	1080000b 	ldhu	r2,0(r2)
  828228:	10ffffcc 	andi	r3,r2,65535
  82822c:	18e0001c 	xori	r3,r3,32768
  828230:	18e00004 	addi	r3,r3,-32768
  828234:	e0bf6217 	ldw	r2,-632(fp)
  828238:	10803804 	addi	r2,r2,224
  82823c:	10800017 	ldw	r2,0(r2)
  828240:	100b883a 	mov	r5,r2
  828244:	1809883a 	mov	r4,r3
  828248:	08305040 	call	830504 <__mulsi3>
  82824c:	e0bf7015 	stw	r2,-576(fp)
  828250:	e0ff6717 	ldw	r3,-612(fp)
  828254:	e0bf6f17 	ldw	r2,-580(fp)
  828258:	1885883a 	add	r2,r3,r2
  82825c:	e0bf6b15 	stw	r2,-596(fp)
  828260:	e0ff6717 	ldw	r3,-612(fp)
  828264:	e0bf6e17 	ldw	r2,-584(fp)
  828268:	1885883a 	add	r2,r3,r2
  82826c:	014ad384 	movi	r5,11086
  828270:	1009883a 	mov	r4,r2
  828274:	08305040 	call	830504 <__mulsi3>
  828278:	e0bf6815 	stw	r2,-608(fp)
  82827c:	0149fa44 	movi	r5,10217
  828280:	e13f6b17 	ldw	r4,-596(fp)
  828284:	08305040 	call	830504 <__mulsi3>
  828288:	e0bf6915 	stw	r2,-604(fp)
  82828c:	e0ff6717 	ldw	r3,-612(fp)
  828290:	e0bf7017 	ldw	r2,-576(fp)
  828294:	1885883a 	add	r2,r3,r2
  828298:	0148bf04 	movi	r5,8956
  82829c:	1009883a 	mov	r4,r2
  8282a0:	08305040 	call	830504 <__mulsi3>
  8282a4:	e0bf7115 	stw	r2,-572(fp)
  8282a8:	e0ff6717 	ldw	r3,-612(fp)
  8282ac:	e0bf7017 	ldw	r2,-576(fp)
  8282b0:	1885c83a 	sub	r2,r3,r2
  8282b4:	01472d84 	movi	r5,7350
  8282b8:	1009883a 	mov	r4,r2
  8282bc:	08305040 	call	830504 <__mulsi3>
  8282c0:	e0bf6a15 	stw	r2,-600(fp)
  8282c4:	01455544 	movi	r5,5461
  8282c8:	e13f6b17 	ldw	r4,-596(fp)
  8282cc:	08305040 	call	830504 <__mulsi3>
  8282d0:	e0bf6b15 	stw	r2,-596(fp)
  8282d4:	e0ff6717 	ldw	r3,-612(fp)
  8282d8:	e0bf6e17 	ldw	r2,-584(fp)
  8282dc:	1885c83a 	sub	r2,r3,r2
  8282e0:	014348c4 	movi	r5,3363
  8282e4:	1009883a 	mov	r4,r2
  8282e8:	08305040 	call	830504 <__mulsi3>
  8282ec:	e0bf6c15 	stw	r2,-592(fp)
  8282f0:	e0ff6817 	ldw	r3,-608(fp)
  8282f4:	e0bf6917 	ldw	r2,-604(fp)
  8282f8:	1887883a 	add	r3,r3,r2
  8282fc:	e0bf7117 	ldw	r2,-572(fp)
  828300:	18a1883a 	add	r16,r3,r2
  828304:	016db584 	movi	r5,-18730
  828308:	e13f6717 	ldw	r4,-612(fp)
  82830c:	08305040 	call	830504 <__mulsi3>
  828310:	8085883a 	add	r2,r16,r2
  828314:	e0bf6615 	stw	r2,-616(fp)
  828318:	e0ff6a17 	ldw	r3,-600(fp)
  82831c:	e0bf6b17 	ldw	r2,-596(fp)
  828320:	1887883a 	add	r3,r3,r2
  828324:	e0bf6c17 	ldw	r2,-592(fp)
  828328:	18a1883a 	add	r16,r3,r2
  82832c:	01715084 	movi	r5,-15038
  828330:	e13f6717 	ldw	r4,-612(fp)
  828334:	08305040 	call	830504 <__mulsi3>
  828338:	8085883a 	add	r2,r16,r2
  82833c:	e0bf6d15 	stw	r2,-588(fp)
  828340:	e0ff6e17 	ldw	r3,-584(fp)
  828344:	e0bf6f17 	ldw	r2,-580(fp)
  828348:	1885883a 	add	r2,r3,r2
  82834c:	01411c04 	movi	r5,1136
  828350:	1009883a 	mov	r4,r2
  828354:	08305040 	call	830504 <__mulsi3>
  828358:	e0bf6715 	stw	r2,-612(fp)
  82835c:	01409344 	movi	r5,589
  828360:	e13f6e17 	ldw	r4,-584(fp)
  828364:	08305040 	call	830504 <__mulsi3>
  828368:	1007883a 	mov	r3,r2
  82836c:	e0bf6717 	ldw	r2,-612(fp)
  828370:	1885883a 	add	r2,r3,r2
  828374:	e0ff6817 	ldw	r3,-608(fp)
  828378:	1885883a 	add	r2,r3,r2
  82837c:	e0bf6815 	stw	r2,-608(fp)
  828380:	0176fe84 	movi	r5,-9222
  828384:	e13f6f17 	ldw	r4,-580(fp)
  828388:	08305040 	call	830504 <__mulsi3>
  82838c:	1007883a 	mov	r3,r2
  828390:	e0bf6717 	ldw	r2,-612(fp)
  828394:	1885883a 	add	r2,r3,r2
  828398:	e0ff6917 	ldw	r3,-604(fp)
  82839c:	1885883a 	add	r2,r3,r2
  8283a0:	e0bf6915 	stw	r2,-604(fp)
  8283a4:	e0ff6f17 	ldw	r3,-580(fp)
  8283a8:	e0bf6e17 	ldw	r2,-584(fp)
  8283ac:	1885c83a 	sub	r2,r3,r2
  8283b0:	014b4244 	movi	r5,11529
  8283b4:	1009883a 	mov	r4,r2
  8283b8:	08305040 	call	830504 <__mulsi3>
  8283bc:	e0bf6715 	stw	r2,-612(fp)
  8283c0:	0179de84 	movi	r5,-6278
  8283c4:	e13f6f17 	ldw	r4,-580(fp)
  8283c8:	08305040 	call	830504 <__mulsi3>
  8283cc:	1007883a 	mov	r3,r2
  8283d0:	e0bf6717 	ldw	r2,-612(fp)
  8283d4:	1885883a 	add	r2,r3,r2
  8283d8:	e0ff6b17 	ldw	r3,-596(fp)
  8283dc:	1885883a 	add	r2,r3,r2
  8283e0:	e0bf6b15 	stw	r2,-596(fp)
  8283e4:	014fc684 	movi	r5,16154
  8283e8:	e13f6e17 	ldw	r4,-584(fp)
  8283ec:	08305040 	call	830504 <__mulsi3>
  8283f0:	1007883a 	mov	r3,r2
  8283f4:	e0bf6717 	ldw	r2,-612(fp)
  8283f8:	1885883a 	add	r2,r3,r2
  8283fc:	e0ff6c17 	ldw	r3,-592(fp)
  828400:	1885883a 	add	r2,r3,r2
  828404:	e0bf6c15 	stw	r2,-592(fp)
  828408:	e0ff6e17 	ldw	r3,-584(fp)
  82840c:	e0bf7017 	ldw	r2,-576(fp)
  828410:	1885883a 	add	r2,r3,r2
  828414:	e0bf6e15 	stw	r2,-584(fp)
  828418:	017aaac4 	movi	r5,-5461
  82841c:	e13f6e17 	ldw	r4,-584(fp)
  828420:	08305040 	call	830504 <__mulsi3>
  828424:	e0bf6715 	stw	r2,-612(fp)
  828428:	e0ff6817 	ldw	r3,-608(fp)
  82842c:	e0bf6717 	ldw	r2,-612(fp)
  828430:	1885883a 	add	r2,r3,r2
  828434:	e0bf6815 	stw	r2,-608(fp)
  828438:	01488604 	movi	r5,8728
  82843c:	e13f7017 	ldw	r4,-576(fp)
  828440:	08305040 	call	830504 <__mulsi3>
  828444:	1007883a 	mov	r3,r2
  828448:	e0bf6717 	ldw	r2,-612(fp)
  82844c:	1885883a 	add	r2,r3,r2
  828450:	e0ff7117 	ldw	r3,-572(fp)
  828454:	1885883a 	add	r2,r3,r2
  828458:	e0bf7115 	stw	r2,-572(fp)
  82845c:	017605c4 	movi	r5,-10217
  828460:	e13f6e17 	ldw	r4,-584(fp)
  828464:	08305040 	call	830504 <__mulsi3>
  828468:	e0bf6e15 	stw	r2,-584(fp)
  82846c:	01592144 	movi	r5,25733
  828470:	e13f7017 	ldw	r4,-576(fp)
  828474:	08305040 	call	830504 <__mulsi3>
  828478:	1007883a 	mov	r3,r2
  82847c:	e0bf6e17 	ldw	r2,-584(fp)
  828480:	1885883a 	add	r2,r3,r2
  828484:	e0ff6a17 	ldw	r3,-600(fp)
  828488:	1885883a 	add	r2,r3,r2
  82848c:	e0bf6a15 	stw	r2,-600(fp)
  828490:	e0ff6c17 	ldw	r3,-592(fp)
  828494:	e0bf6e17 	ldw	r2,-584(fp)
  828498:	1885883a 	add	r2,r3,r2
  82849c:	e0bf6c15 	stw	r2,-592(fp)
  8284a0:	e0ff6f17 	ldw	r3,-580(fp)
  8284a4:	e0bf7017 	ldw	r2,-576(fp)
  8284a8:	1885883a 	add	r2,r3,r2
  8284ac:	01752c84 	movi	r5,-11086
  8284b0:	1009883a 	mov	r4,r2
  8284b4:	08305040 	call	830504 <__mulsi3>
  8284b8:	e0bf6e15 	stw	r2,-584(fp)
  8284bc:	e0ff6917 	ldw	r3,-604(fp)
  8284c0:	e0bf6e17 	ldw	r2,-584(fp)
  8284c4:	1885883a 	add	r2,r3,r2
  8284c8:	e0bf6915 	stw	r2,-604(fp)
  8284cc:	e0ff7117 	ldw	r3,-572(fp)
  8284d0:	e0bf6e17 	ldw	r2,-584(fp)
  8284d4:	1885883a 	add	r2,r3,r2
  8284d8:	e0bf7115 	stw	r2,-572(fp)
  8284dc:	e0ff7017 	ldw	r3,-576(fp)
  8284e0:	e0bf6f17 	ldw	r2,-580(fp)
  8284e4:	1885c83a 	sub	r2,r3,r2
  8284e8:	014348c4 	movi	r5,3363
  8284ec:	1009883a 	mov	r4,r2
  8284f0:	08305040 	call	830504 <__mulsi3>
  8284f4:	e0bf6e15 	stw	r2,-584(fp)
  8284f8:	e0ff6a17 	ldw	r3,-600(fp)
  8284fc:	e0bf6e17 	ldw	r2,-584(fp)
  828500:	1885883a 	add	r2,r3,r2
  828504:	e0bf6a15 	stw	r2,-600(fp)
  828508:	e0ff6b17 	ldw	r3,-596(fp)
  82850c:	e0bf6e17 	ldw	r2,-584(fp)
  828510:	1885883a 	add	r2,r3,r2
  828514:	e0bf6b15 	stw	r2,-596(fp)
  828518:	e0ff7217 	ldw	r3,-568(fp)
  82851c:	e0bf6617 	ldw	r2,-616(fp)
  828520:	1885883a 	add	r2,r3,r2
  828524:	1007d2fa 	srai	r3,r2,11
  828528:	e0bf6317 	ldw	r2,-628(fp)
  82852c:	10c00015 	stw	r3,0(r2)
  828530:	e0bf6317 	ldw	r2,-628(fp)
  828534:	10807804 	addi	r2,r2,480
  828538:	e13f7217 	ldw	r4,-568(fp)
  82853c:	e0ff6617 	ldw	r3,-616(fp)
  828540:	20c7c83a 	sub	r3,r4,r3
  828544:	1807d2fa 	srai	r3,r3,11
  828548:	10c00015 	stw	r3,0(r2)
  82854c:	e0bf6317 	ldw	r2,-628(fp)
  828550:	10800804 	addi	r2,r2,32
  828554:	e13f7417 	ldw	r4,-560(fp)
  828558:	e0ff6817 	ldw	r3,-608(fp)
  82855c:	20c7883a 	add	r3,r4,r3
  828560:	1807d2fa 	srai	r3,r3,11
  828564:	10c00015 	stw	r3,0(r2)
  828568:	e0bf6317 	ldw	r2,-628(fp)
  82856c:	10807004 	addi	r2,r2,448
  828570:	e13f7417 	ldw	r4,-560(fp)
  828574:	e0ff6817 	ldw	r3,-608(fp)
  828578:	20c7c83a 	sub	r3,r4,r3
  82857c:	1807d2fa 	srai	r3,r3,11
  828580:	10c00015 	stw	r3,0(r2)
  828584:	e0bf6317 	ldw	r2,-628(fp)
  828588:	10801004 	addi	r2,r2,64
  82858c:	e13f7617 	ldw	r4,-552(fp)
  828590:	e0ff6917 	ldw	r3,-604(fp)
  828594:	20c7883a 	add	r3,r4,r3
  828598:	1807d2fa 	srai	r3,r3,11
  82859c:	10c00015 	stw	r3,0(r2)
  8285a0:	e0bf6317 	ldw	r2,-628(fp)
  8285a4:	10806804 	addi	r2,r2,416
  8285a8:	e13f7617 	ldw	r4,-552(fp)
  8285ac:	e0ff6917 	ldw	r3,-604(fp)
  8285b0:	20c7c83a 	sub	r3,r4,r3
  8285b4:	1807d2fa 	srai	r3,r3,11
  8285b8:	10c00015 	stw	r3,0(r2)
  8285bc:	e0bf6317 	ldw	r2,-628(fp)
  8285c0:	10801804 	addi	r2,r2,96
  8285c4:	e13f7817 	ldw	r4,-544(fp)
  8285c8:	e0ff7117 	ldw	r3,-572(fp)
  8285cc:	20c7883a 	add	r3,r4,r3
  8285d0:	1807d2fa 	srai	r3,r3,11
  8285d4:	10c00015 	stw	r3,0(r2)
  8285d8:	e0bf6317 	ldw	r2,-628(fp)
  8285dc:	10806004 	addi	r2,r2,384
  8285e0:	e13f7817 	ldw	r4,-544(fp)
  8285e4:	e0ff7117 	ldw	r3,-572(fp)
  8285e8:	20c7c83a 	sub	r3,r4,r3
  8285ec:	1807d2fa 	srai	r3,r3,11
  8285f0:	10c00015 	stw	r3,0(r2)
  8285f4:	e0bf6317 	ldw	r2,-628(fp)
  8285f8:	10802004 	addi	r2,r2,128
  8285fc:	e13f7917 	ldw	r4,-540(fp)
  828600:	e0ff6a17 	ldw	r3,-600(fp)
  828604:	20c7883a 	add	r3,r4,r3
  828608:	1807d2fa 	srai	r3,r3,11
  82860c:	10c00015 	stw	r3,0(r2)
  828610:	e0bf6317 	ldw	r2,-628(fp)
  828614:	10805804 	addi	r2,r2,352
  828618:	e13f7917 	ldw	r4,-540(fp)
  82861c:	e0ff6a17 	ldw	r3,-600(fp)
  828620:	20c7c83a 	sub	r3,r4,r3
  828624:	1807d2fa 	srai	r3,r3,11
  828628:	10c00015 	stw	r3,0(r2)
  82862c:	e0bf6317 	ldw	r2,-628(fp)
  828630:	10802804 	addi	r2,r2,160
  828634:	e13f7717 	ldw	r4,-548(fp)
  828638:	e0ff6b17 	ldw	r3,-596(fp)
  82863c:	20c7883a 	add	r3,r4,r3
  828640:	1807d2fa 	srai	r3,r3,11
  828644:	10c00015 	stw	r3,0(r2)
  828648:	e0bf6317 	ldw	r2,-628(fp)
  82864c:	10805004 	addi	r2,r2,320
  828650:	e13f7717 	ldw	r4,-548(fp)
  828654:	e0ff6b17 	ldw	r3,-596(fp)
  828658:	20c7c83a 	sub	r3,r4,r3
  82865c:	1807d2fa 	srai	r3,r3,11
  828660:	10c00015 	stw	r3,0(r2)
  828664:	e0bf6317 	ldw	r2,-628(fp)
  828668:	10803004 	addi	r2,r2,192
  82866c:	e13f7517 	ldw	r4,-556(fp)
  828670:	e0ff6c17 	ldw	r3,-592(fp)
  828674:	20c7883a 	add	r3,r4,r3
  828678:	1807d2fa 	srai	r3,r3,11
  82867c:	10c00015 	stw	r3,0(r2)
  828680:	e0bf6317 	ldw	r2,-628(fp)
  828684:	10804804 	addi	r2,r2,288
  828688:	e13f7517 	ldw	r4,-556(fp)
  82868c:	e0ff6c17 	ldw	r3,-592(fp)
  828690:	20c7c83a 	sub	r3,r4,r3
  828694:	1807d2fa 	srai	r3,r3,11
  828698:	10c00015 	stw	r3,0(r2)
  82869c:	e0bf6317 	ldw	r2,-628(fp)
  8286a0:	10803804 	addi	r2,r2,224
  8286a4:	e13f7317 	ldw	r4,-564(fp)
  8286a8:	e0ff6d17 	ldw	r3,-588(fp)
  8286ac:	20c7883a 	add	r3,r4,r3
  8286b0:	1807d2fa 	srai	r3,r3,11
  8286b4:	10c00015 	stw	r3,0(r2)
  8286b8:	e0bf6317 	ldw	r2,-628(fp)
  8286bc:	10804004 	addi	r2,r2,256
  8286c0:	e13f7317 	ldw	r4,-564(fp)
  8286c4:	e0ff6d17 	ldw	r3,-588(fp)
  8286c8:	20c7c83a 	sub	r3,r4,r3
  8286cc:	1807d2fa 	srai	r3,r3,11
  8286d0:	10c00015 	stw	r3,0(r2)
  8286d4:	e0bf6417 	ldw	r2,-624(fp)
  8286d8:	10800044 	addi	r2,r2,1
  8286dc:	e0bf6415 	stw	r2,-624(fp)
  8286e0:	e0bf6117 	ldw	r2,-636(fp)
  8286e4:	10800084 	addi	r2,r2,2
  8286e8:	e0bf6115 	stw	r2,-636(fp)
  8286ec:	e0bf6217 	ldw	r2,-632(fp)
  8286f0:	10800104 	addi	r2,r2,4
  8286f4:	e0bf6215 	stw	r2,-632(fp)
  8286f8:	e0bf6317 	ldw	r2,-628(fp)
  8286fc:	10800104 	addi	r2,r2,4
  828700:	e0bf6315 	stw	r2,-628(fp)
  828704:	e0bf6417 	ldw	r2,-624(fp)
  828708:	10800210 	cmplti	r2,r2,8
  82870c:	103e041e 	bne	r2,zero,827f20 <__alt_mem_epcs_flash_controller_0+0xff81ef20>
  828710:	e0bf7b04 	addi	r2,fp,-532
  828714:	e0bf6315 	stw	r2,-628(fp)
  828718:	e03f6415 	stw	zero,-624(fp)
  82871c:	0001f406 	br	828ef0 <jpeg_idct_16x16+0x1028>
  828720:	e0bf6417 	ldw	r2,-624(fp)
  828724:	1085883a 	add	r2,r2,r2
  828728:	1085883a 	add	r2,r2,r2
  82872c:	1007883a 	mov	r3,r2
  828730:	e0bffe17 	ldw	r2,-8(fp)
  828734:	10c5883a 	add	r2,r2,r3
  828738:	10c00017 	ldw	r3,0(r2)
  82873c:	e0800217 	ldw	r2,8(fp)
  828740:	1885883a 	add	r2,r3,r2
  828744:	e0bf7a15 	stw	r2,-536(fp)
  828748:	e0bf6317 	ldw	r2,-628(fp)
  82874c:	10800017 	ldw	r2,0(r2)
  828750:	10900404 	addi	r2,r2,16400
  828754:	e0bf6615 	stw	r2,-616(fp)
  828758:	e0bf6617 	ldw	r2,-616(fp)
  82875c:	1004937a 	slli	r2,r2,13
  828760:	e0bf6615 	stw	r2,-616(fp)
  828764:	e0bf6317 	ldw	r2,-628(fp)
  828768:	10800404 	addi	r2,r2,16
  82876c:	10800017 	ldw	r2,0(r2)
  828770:	e0bf6715 	stw	r2,-612(fp)
  828774:	014a73c4 	movi	r5,10703
  828778:	e13f6717 	ldw	r4,-612(fp)
  82877c:	08305040 	call	830504 <__mulsi3>
  828780:	e0bf6815 	stw	r2,-608(fp)
  828784:	01445444 	movi	r5,4433
  828788:	e13f6717 	ldw	r4,-612(fp)
  82878c:	08305040 	call	830504 <__mulsi3>
  828790:	e0bf6915 	stw	r2,-604(fp)
  828794:	e0ff6617 	ldw	r3,-616(fp)
  828798:	e0bf6817 	ldw	r2,-608(fp)
  82879c:	1885883a 	add	r2,r3,r2
  8287a0:	e0bf6a15 	stw	r2,-600(fp)
  8287a4:	e0ff6617 	ldw	r3,-616(fp)
  8287a8:	e0bf6817 	ldw	r2,-608(fp)
  8287ac:	1885c83a 	sub	r2,r3,r2
  8287b0:	e0bf6b15 	stw	r2,-596(fp)
  8287b4:	e0ff6617 	ldw	r3,-616(fp)
  8287b8:	e0bf6917 	ldw	r2,-604(fp)
  8287bc:	1885883a 	add	r2,r3,r2
  8287c0:	e0bf6c15 	stw	r2,-592(fp)
  8287c4:	e0ff6617 	ldw	r3,-616(fp)
  8287c8:	e0bf6917 	ldw	r2,-604(fp)
  8287cc:	1885c83a 	sub	r2,r3,r2
  8287d0:	e0bf6d15 	stw	r2,-588(fp)
  8287d4:	e0bf6317 	ldw	r2,-628(fp)
  8287d8:	10800204 	addi	r2,r2,8
  8287dc:	10800017 	ldw	r2,0(r2)
  8287e0:	e0bf6715 	stw	r2,-612(fp)
  8287e4:	e0bf6317 	ldw	r2,-628(fp)
  8287e8:	10800604 	addi	r2,r2,24
  8287ec:	10800017 	ldw	r2,0(r2)
  8287f0:	e0bf6e15 	stw	r2,-584(fp)
  8287f4:	e0ff6717 	ldw	r3,-612(fp)
  8287f8:	e0bf6e17 	ldw	r2,-584(fp)
  8287fc:	1885c83a 	sub	r2,r3,r2
  828800:	e0bf6f15 	stw	r2,-580(fp)
  828804:	01423504 	movi	r5,2260
  828808:	e13f6f17 	ldw	r4,-580(fp)
  82880c:	08305040 	call	830504 <__mulsi3>
  828810:	e0bf7015 	stw	r2,-576(fp)
  828814:	014b18c4 	movi	r5,11363
  828818:	e13f6f17 	ldw	r4,-580(fp)
  82881c:	08305040 	call	830504 <__mulsi3>
  828820:	e0bf6f15 	stw	r2,-580(fp)
  828824:	015480c4 	movi	r5,20995
  828828:	e13f6e17 	ldw	r4,-584(fp)
  82882c:	08305040 	call	830504 <__mulsi3>
  828830:	1007883a 	mov	r3,r2
  828834:	e0bf6f17 	ldw	r2,-580(fp)
  828838:	1885883a 	add	r2,r3,r2
  82883c:	e0bf6615 	stw	r2,-616(fp)
  828840:	01473344 	movi	r5,7373
  828844:	e13f6717 	ldw	r4,-612(fp)
  828848:	08305040 	call	830504 <__mulsi3>
  82884c:	1007883a 	mov	r3,r2
  828850:	e0bf7017 	ldw	r2,-576(fp)
  828854:	1885883a 	add	r2,r3,r2
  828858:	e0bf6815 	stw	r2,-608(fp)
  82885c:	017b3084 	movi	r5,-4926
  828860:	e13f6717 	ldw	r4,-612(fp)
  828864:	08305040 	call	830504 <__mulsi3>
  828868:	1007883a 	mov	r3,r2
  82886c:	e0bf6f17 	ldw	r2,-580(fp)
  828870:	1885883a 	add	r2,r3,r2
  828874:	e0bf6915 	stw	r2,-604(fp)
  828878:	017bec04 	movi	r5,-4176
  82887c:	e13f6e17 	ldw	r4,-584(fp)
  828880:	08305040 	call	830504 <__mulsi3>
  828884:	1007883a 	mov	r3,r2
  828888:	e0bf7017 	ldw	r2,-576(fp)
  82888c:	1885883a 	add	r2,r3,r2
  828890:	e0bf7115 	stw	r2,-572(fp)
  828894:	e0ff6a17 	ldw	r3,-600(fp)
  828898:	e0bf6617 	ldw	r2,-616(fp)
  82889c:	1885883a 	add	r2,r3,r2
  8288a0:	e0bf7215 	stw	r2,-568(fp)
  8288a4:	e0ff6a17 	ldw	r3,-600(fp)
  8288a8:	e0bf6617 	ldw	r2,-616(fp)
  8288ac:	1885c83a 	sub	r2,r3,r2
  8288b0:	e0bf7315 	stw	r2,-564(fp)
  8288b4:	e0ff6c17 	ldw	r3,-592(fp)
  8288b8:	e0bf6817 	ldw	r2,-608(fp)
  8288bc:	1885883a 	add	r2,r3,r2
  8288c0:	e0bf7415 	stw	r2,-560(fp)
  8288c4:	e0ff6c17 	ldw	r3,-592(fp)
  8288c8:	e0bf6817 	ldw	r2,-608(fp)
  8288cc:	1885c83a 	sub	r2,r3,r2
  8288d0:	e0bf7515 	stw	r2,-556(fp)
  8288d4:	e0ff6d17 	ldw	r3,-588(fp)
  8288d8:	e0bf6917 	ldw	r2,-604(fp)
  8288dc:	1885883a 	add	r2,r3,r2
  8288e0:	e0bf7615 	stw	r2,-552(fp)
  8288e4:	e0ff6d17 	ldw	r3,-588(fp)
  8288e8:	e0bf6917 	ldw	r2,-604(fp)
  8288ec:	1885c83a 	sub	r2,r3,r2
  8288f0:	e0bf7715 	stw	r2,-548(fp)
  8288f4:	e0ff6b17 	ldw	r3,-596(fp)
  8288f8:	e0bf7117 	ldw	r2,-572(fp)
  8288fc:	1885883a 	add	r2,r3,r2
  828900:	e0bf7815 	stw	r2,-544(fp)
  828904:	e0ff6b17 	ldw	r3,-596(fp)
  828908:	e0bf7117 	ldw	r2,-572(fp)
  82890c:	1885c83a 	sub	r2,r3,r2
  828910:	e0bf7915 	stw	r2,-540(fp)
  828914:	e0bf6317 	ldw	r2,-628(fp)
  828918:	10800104 	addi	r2,r2,4
  82891c:	10800017 	ldw	r2,0(r2)
  828920:	e0bf6715 	stw	r2,-612(fp)
  828924:	e0bf6317 	ldw	r2,-628(fp)
  828928:	10800304 	addi	r2,r2,12
  82892c:	10800017 	ldw	r2,0(r2)
  828930:	e0bf6e15 	stw	r2,-584(fp)
  828934:	e0bf6317 	ldw	r2,-628(fp)
  828938:	10800504 	addi	r2,r2,20
  82893c:	10800017 	ldw	r2,0(r2)
  828940:	e0bf6f15 	stw	r2,-580(fp)
  828944:	e0bf6317 	ldw	r2,-628(fp)
  828948:	10800704 	addi	r2,r2,28
  82894c:	10800017 	ldw	r2,0(r2)
  828950:	e0bf7015 	stw	r2,-576(fp)
  828954:	e0ff6717 	ldw	r3,-612(fp)
  828958:	e0bf6f17 	ldw	r2,-580(fp)
  82895c:	1885883a 	add	r2,r3,r2
  828960:	e0bf6b15 	stw	r2,-596(fp)
  828964:	e0ff6717 	ldw	r3,-612(fp)
  828968:	e0bf6e17 	ldw	r2,-584(fp)
  82896c:	1885883a 	add	r2,r3,r2
  828970:	014ad384 	movi	r5,11086
  828974:	1009883a 	mov	r4,r2
  828978:	08305040 	call	830504 <__mulsi3>
  82897c:	e0bf6815 	stw	r2,-608(fp)
  828980:	0149fa44 	movi	r5,10217
  828984:	e13f6b17 	ldw	r4,-596(fp)
  828988:	08305040 	call	830504 <__mulsi3>
  82898c:	e0bf6915 	stw	r2,-604(fp)
  828990:	e0ff6717 	ldw	r3,-612(fp)
  828994:	e0bf7017 	ldw	r2,-576(fp)
  828998:	1885883a 	add	r2,r3,r2
  82899c:	0148bf04 	movi	r5,8956
  8289a0:	1009883a 	mov	r4,r2
  8289a4:	08305040 	call	830504 <__mulsi3>
  8289a8:	e0bf7115 	stw	r2,-572(fp)
  8289ac:	e0ff6717 	ldw	r3,-612(fp)
  8289b0:	e0bf7017 	ldw	r2,-576(fp)
  8289b4:	1885c83a 	sub	r2,r3,r2
  8289b8:	01472d84 	movi	r5,7350
  8289bc:	1009883a 	mov	r4,r2
  8289c0:	08305040 	call	830504 <__mulsi3>
  8289c4:	e0bf6a15 	stw	r2,-600(fp)
  8289c8:	01455544 	movi	r5,5461
  8289cc:	e13f6b17 	ldw	r4,-596(fp)
  8289d0:	08305040 	call	830504 <__mulsi3>
  8289d4:	e0bf6b15 	stw	r2,-596(fp)
  8289d8:	e0ff6717 	ldw	r3,-612(fp)
  8289dc:	e0bf6e17 	ldw	r2,-584(fp)
  8289e0:	1885c83a 	sub	r2,r3,r2
  8289e4:	014348c4 	movi	r5,3363
  8289e8:	1009883a 	mov	r4,r2
  8289ec:	08305040 	call	830504 <__mulsi3>
  8289f0:	e0bf6c15 	stw	r2,-592(fp)
  8289f4:	e0ff6817 	ldw	r3,-608(fp)
  8289f8:	e0bf6917 	ldw	r2,-604(fp)
  8289fc:	1887883a 	add	r3,r3,r2
  828a00:	e0bf7117 	ldw	r2,-572(fp)
  828a04:	18a1883a 	add	r16,r3,r2
  828a08:	016db584 	movi	r5,-18730
  828a0c:	e13f6717 	ldw	r4,-612(fp)
  828a10:	08305040 	call	830504 <__mulsi3>
  828a14:	8085883a 	add	r2,r16,r2
  828a18:	e0bf6615 	stw	r2,-616(fp)
  828a1c:	e0ff6a17 	ldw	r3,-600(fp)
  828a20:	e0bf6b17 	ldw	r2,-596(fp)
  828a24:	1887883a 	add	r3,r3,r2
  828a28:	e0bf6c17 	ldw	r2,-592(fp)
  828a2c:	18a1883a 	add	r16,r3,r2
  828a30:	01715084 	movi	r5,-15038
  828a34:	e13f6717 	ldw	r4,-612(fp)
  828a38:	08305040 	call	830504 <__mulsi3>
  828a3c:	8085883a 	add	r2,r16,r2
  828a40:	e0bf6d15 	stw	r2,-588(fp)
  828a44:	e0ff6e17 	ldw	r3,-584(fp)
  828a48:	e0bf6f17 	ldw	r2,-580(fp)
  828a4c:	1885883a 	add	r2,r3,r2
  828a50:	01411c04 	movi	r5,1136
  828a54:	1009883a 	mov	r4,r2
  828a58:	08305040 	call	830504 <__mulsi3>
  828a5c:	e0bf6715 	stw	r2,-612(fp)
  828a60:	01409344 	movi	r5,589
  828a64:	e13f6e17 	ldw	r4,-584(fp)
  828a68:	08305040 	call	830504 <__mulsi3>
  828a6c:	1007883a 	mov	r3,r2
  828a70:	e0bf6717 	ldw	r2,-612(fp)
  828a74:	1885883a 	add	r2,r3,r2
  828a78:	e0ff6817 	ldw	r3,-608(fp)
  828a7c:	1885883a 	add	r2,r3,r2
  828a80:	e0bf6815 	stw	r2,-608(fp)
  828a84:	0176fe84 	movi	r5,-9222
  828a88:	e13f6f17 	ldw	r4,-580(fp)
  828a8c:	08305040 	call	830504 <__mulsi3>
  828a90:	1007883a 	mov	r3,r2
  828a94:	e0bf6717 	ldw	r2,-612(fp)
  828a98:	1885883a 	add	r2,r3,r2
  828a9c:	e0ff6917 	ldw	r3,-604(fp)
  828aa0:	1885883a 	add	r2,r3,r2
  828aa4:	e0bf6915 	stw	r2,-604(fp)
  828aa8:	e0ff6f17 	ldw	r3,-580(fp)
  828aac:	e0bf6e17 	ldw	r2,-584(fp)
  828ab0:	1885c83a 	sub	r2,r3,r2
  828ab4:	014b4244 	movi	r5,11529
  828ab8:	1009883a 	mov	r4,r2
  828abc:	08305040 	call	830504 <__mulsi3>
  828ac0:	e0bf6715 	stw	r2,-612(fp)
  828ac4:	0179de84 	movi	r5,-6278
  828ac8:	e13f6f17 	ldw	r4,-580(fp)
  828acc:	08305040 	call	830504 <__mulsi3>
  828ad0:	1007883a 	mov	r3,r2
  828ad4:	e0bf6717 	ldw	r2,-612(fp)
  828ad8:	1885883a 	add	r2,r3,r2
  828adc:	e0ff6b17 	ldw	r3,-596(fp)
  828ae0:	1885883a 	add	r2,r3,r2
  828ae4:	e0bf6b15 	stw	r2,-596(fp)
  828ae8:	014fc684 	movi	r5,16154
  828aec:	e13f6e17 	ldw	r4,-584(fp)
  828af0:	08305040 	call	830504 <__mulsi3>
  828af4:	1007883a 	mov	r3,r2
  828af8:	e0bf6717 	ldw	r2,-612(fp)
  828afc:	1885883a 	add	r2,r3,r2
  828b00:	e0ff6c17 	ldw	r3,-592(fp)
  828b04:	1885883a 	add	r2,r3,r2
  828b08:	e0bf6c15 	stw	r2,-592(fp)
  828b0c:	e0ff6e17 	ldw	r3,-584(fp)
  828b10:	e0bf7017 	ldw	r2,-576(fp)
  828b14:	1885883a 	add	r2,r3,r2
  828b18:	e0bf6e15 	stw	r2,-584(fp)
  828b1c:	017aaac4 	movi	r5,-5461
  828b20:	e13f6e17 	ldw	r4,-584(fp)
  828b24:	08305040 	call	830504 <__mulsi3>
  828b28:	e0bf6715 	stw	r2,-612(fp)
  828b2c:	e0ff6817 	ldw	r3,-608(fp)
  828b30:	e0bf6717 	ldw	r2,-612(fp)
  828b34:	1885883a 	add	r2,r3,r2
  828b38:	e0bf6815 	stw	r2,-608(fp)
  828b3c:	01488604 	movi	r5,8728
  828b40:	e13f7017 	ldw	r4,-576(fp)
  828b44:	08305040 	call	830504 <__mulsi3>
  828b48:	1007883a 	mov	r3,r2
  828b4c:	e0bf6717 	ldw	r2,-612(fp)
  828b50:	1885883a 	add	r2,r3,r2
  828b54:	e0ff7117 	ldw	r3,-572(fp)
  828b58:	1885883a 	add	r2,r3,r2
  828b5c:	e0bf7115 	stw	r2,-572(fp)
  828b60:	017605c4 	movi	r5,-10217
  828b64:	e13f6e17 	ldw	r4,-584(fp)
  828b68:	08305040 	call	830504 <__mulsi3>
  828b6c:	e0bf6e15 	stw	r2,-584(fp)
  828b70:	01592144 	movi	r5,25733
  828b74:	e13f7017 	ldw	r4,-576(fp)
  828b78:	08305040 	call	830504 <__mulsi3>
  828b7c:	1007883a 	mov	r3,r2
  828b80:	e0bf6e17 	ldw	r2,-584(fp)
  828b84:	1885883a 	add	r2,r3,r2
  828b88:	e0ff6a17 	ldw	r3,-600(fp)
  828b8c:	1885883a 	add	r2,r3,r2
  828b90:	e0bf6a15 	stw	r2,-600(fp)
  828b94:	e0ff6c17 	ldw	r3,-592(fp)
  828b98:	e0bf6e17 	ldw	r2,-584(fp)
  828b9c:	1885883a 	add	r2,r3,r2
  828ba0:	e0bf6c15 	stw	r2,-592(fp)
  828ba4:	e0ff6f17 	ldw	r3,-580(fp)
  828ba8:	e0bf7017 	ldw	r2,-576(fp)
  828bac:	1885883a 	add	r2,r3,r2
  828bb0:	01752c84 	movi	r5,-11086
  828bb4:	1009883a 	mov	r4,r2
  828bb8:	08305040 	call	830504 <__mulsi3>
  828bbc:	e0bf6e15 	stw	r2,-584(fp)
  828bc0:	e0ff6917 	ldw	r3,-604(fp)
  828bc4:	e0bf6e17 	ldw	r2,-584(fp)
  828bc8:	1885883a 	add	r2,r3,r2
  828bcc:	e0bf6915 	stw	r2,-604(fp)
  828bd0:	e0ff7117 	ldw	r3,-572(fp)
  828bd4:	e0bf6e17 	ldw	r2,-584(fp)
  828bd8:	1885883a 	add	r2,r3,r2
  828bdc:	e0bf7115 	stw	r2,-572(fp)
  828be0:	e0ff7017 	ldw	r3,-576(fp)
  828be4:	e0bf6f17 	ldw	r2,-580(fp)
  828be8:	1885c83a 	sub	r2,r3,r2
  828bec:	014348c4 	movi	r5,3363
  828bf0:	1009883a 	mov	r4,r2
  828bf4:	08305040 	call	830504 <__mulsi3>
  828bf8:	e0bf6e15 	stw	r2,-584(fp)
  828bfc:	e0ff6a17 	ldw	r3,-600(fp)
  828c00:	e0bf6e17 	ldw	r2,-584(fp)
  828c04:	1885883a 	add	r2,r3,r2
  828c08:	e0bf6a15 	stw	r2,-600(fp)
  828c0c:	e0ff6b17 	ldw	r3,-596(fp)
  828c10:	e0bf6e17 	ldw	r2,-584(fp)
  828c14:	1885883a 	add	r2,r3,r2
  828c18:	e0bf6b15 	stw	r2,-596(fp)
  828c1c:	e0ff7217 	ldw	r3,-568(fp)
  828c20:	e0bf6617 	ldw	r2,-616(fp)
  828c24:	1885883a 	add	r2,r3,r2
  828c28:	1005d4ba 	srai	r2,r2,18
  828c2c:	1080ffcc 	andi	r2,r2,1023
  828c30:	e0ff6517 	ldw	r3,-620(fp)
  828c34:	1885883a 	add	r2,r3,r2
  828c38:	10c00003 	ldbu	r3,0(r2)
  828c3c:	e0bf7a17 	ldw	r2,-536(fp)
  828c40:	10c00005 	stb	r3,0(r2)
  828c44:	e0bf7a17 	ldw	r2,-536(fp)
  828c48:	108003c4 	addi	r2,r2,15
  828c4c:	e13f7217 	ldw	r4,-568(fp)
  828c50:	e0ff6617 	ldw	r3,-616(fp)
  828c54:	20c7c83a 	sub	r3,r4,r3
  828c58:	1807d4ba 	srai	r3,r3,18
  828c5c:	18c0ffcc 	andi	r3,r3,1023
  828c60:	e13f6517 	ldw	r4,-620(fp)
  828c64:	20c7883a 	add	r3,r4,r3
  828c68:	18c00003 	ldbu	r3,0(r3)
  828c6c:	10c00005 	stb	r3,0(r2)
  828c70:	e0bf7a17 	ldw	r2,-536(fp)
  828c74:	10800044 	addi	r2,r2,1
  828c78:	e13f7417 	ldw	r4,-560(fp)
  828c7c:	e0ff6817 	ldw	r3,-608(fp)
  828c80:	20c7883a 	add	r3,r4,r3
  828c84:	1807d4ba 	srai	r3,r3,18
  828c88:	18c0ffcc 	andi	r3,r3,1023
  828c8c:	e13f6517 	ldw	r4,-620(fp)
  828c90:	20c7883a 	add	r3,r4,r3
  828c94:	18c00003 	ldbu	r3,0(r3)
  828c98:	10c00005 	stb	r3,0(r2)
  828c9c:	e0bf7a17 	ldw	r2,-536(fp)
  828ca0:	10800384 	addi	r2,r2,14
  828ca4:	e13f7417 	ldw	r4,-560(fp)
  828ca8:	e0ff6817 	ldw	r3,-608(fp)
  828cac:	20c7c83a 	sub	r3,r4,r3
  828cb0:	1807d4ba 	srai	r3,r3,18
  828cb4:	18c0ffcc 	andi	r3,r3,1023
  828cb8:	e13f6517 	ldw	r4,-620(fp)
  828cbc:	20c7883a 	add	r3,r4,r3
  828cc0:	18c00003 	ldbu	r3,0(r3)
  828cc4:	10c00005 	stb	r3,0(r2)
  828cc8:	e0bf7a17 	ldw	r2,-536(fp)
  828ccc:	10800084 	addi	r2,r2,2
  828cd0:	e13f7617 	ldw	r4,-552(fp)
  828cd4:	e0ff6917 	ldw	r3,-604(fp)
  828cd8:	20c7883a 	add	r3,r4,r3
  828cdc:	1807d4ba 	srai	r3,r3,18
  828ce0:	18c0ffcc 	andi	r3,r3,1023
  828ce4:	e13f6517 	ldw	r4,-620(fp)
  828ce8:	20c7883a 	add	r3,r4,r3
  828cec:	18c00003 	ldbu	r3,0(r3)
  828cf0:	10c00005 	stb	r3,0(r2)
  828cf4:	e0bf7a17 	ldw	r2,-536(fp)
  828cf8:	10800344 	addi	r2,r2,13
  828cfc:	e13f7617 	ldw	r4,-552(fp)
  828d00:	e0ff6917 	ldw	r3,-604(fp)
  828d04:	20c7c83a 	sub	r3,r4,r3
  828d08:	1807d4ba 	srai	r3,r3,18
  828d0c:	18c0ffcc 	andi	r3,r3,1023
  828d10:	e13f6517 	ldw	r4,-620(fp)
  828d14:	20c7883a 	add	r3,r4,r3
  828d18:	18c00003 	ldbu	r3,0(r3)
  828d1c:	10c00005 	stb	r3,0(r2)
  828d20:	e0bf7a17 	ldw	r2,-536(fp)
  828d24:	108000c4 	addi	r2,r2,3
  828d28:	e13f7817 	ldw	r4,-544(fp)
  828d2c:	e0ff7117 	ldw	r3,-572(fp)
  828d30:	20c7883a 	add	r3,r4,r3
  828d34:	1807d4ba 	srai	r3,r3,18
  828d38:	18c0ffcc 	andi	r3,r3,1023
  828d3c:	e13f6517 	ldw	r4,-620(fp)
  828d40:	20c7883a 	add	r3,r4,r3
  828d44:	18c00003 	ldbu	r3,0(r3)
  828d48:	10c00005 	stb	r3,0(r2)
  828d4c:	e0bf7a17 	ldw	r2,-536(fp)
  828d50:	10800304 	addi	r2,r2,12
  828d54:	e13f7817 	ldw	r4,-544(fp)
  828d58:	e0ff7117 	ldw	r3,-572(fp)
  828d5c:	20c7c83a 	sub	r3,r4,r3
  828d60:	1807d4ba 	srai	r3,r3,18
  828d64:	18c0ffcc 	andi	r3,r3,1023
  828d68:	e13f6517 	ldw	r4,-620(fp)
  828d6c:	20c7883a 	add	r3,r4,r3
  828d70:	18c00003 	ldbu	r3,0(r3)
  828d74:	10c00005 	stb	r3,0(r2)
  828d78:	e0bf7a17 	ldw	r2,-536(fp)
  828d7c:	10800104 	addi	r2,r2,4
  828d80:	e13f7917 	ldw	r4,-540(fp)
  828d84:	e0ff6a17 	ldw	r3,-600(fp)
  828d88:	20c7883a 	add	r3,r4,r3
  828d8c:	1807d4ba 	srai	r3,r3,18
  828d90:	18c0ffcc 	andi	r3,r3,1023
  828d94:	e13f6517 	ldw	r4,-620(fp)
  828d98:	20c7883a 	add	r3,r4,r3
  828d9c:	18c00003 	ldbu	r3,0(r3)
  828da0:	10c00005 	stb	r3,0(r2)
  828da4:	e0bf7a17 	ldw	r2,-536(fp)
  828da8:	108002c4 	addi	r2,r2,11
  828dac:	e13f7917 	ldw	r4,-540(fp)
  828db0:	e0ff6a17 	ldw	r3,-600(fp)
  828db4:	20c7c83a 	sub	r3,r4,r3
  828db8:	1807d4ba 	srai	r3,r3,18
  828dbc:	18c0ffcc 	andi	r3,r3,1023
  828dc0:	e13f6517 	ldw	r4,-620(fp)
  828dc4:	20c7883a 	add	r3,r4,r3
  828dc8:	18c00003 	ldbu	r3,0(r3)
  828dcc:	10c00005 	stb	r3,0(r2)
  828dd0:	e0bf7a17 	ldw	r2,-536(fp)
  828dd4:	10800144 	addi	r2,r2,5
  828dd8:	e13f7717 	ldw	r4,-548(fp)
  828ddc:	e0ff6b17 	ldw	r3,-596(fp)
  828de0:	20c7883a 	add	r3,r4,r3
  828de4:	1807d4ba 	srai	r3,r3,18
  828de8:	18c0ffcc 	andi	r3,r3,1023
  828dec:	e13f6517 	ldw	r4,-620(fp)
  828df0:	20c7883a 	add	r3,r4,r3
  828df4:	18c00003 	ldbu	r3,0(r3)
  828df8:	10c00005 	stb	r3,0(r2)
  828dfc:	e0bf7a17 	ldw	r2,-536(fp)
  828e00:	10800284 	addi	r2,r2,10
  828e04:	e13f7717 	ldw	r4,-548(fp)
  828e08:	e0ff6b17 	ldw	r3,-596(fp)
  828e0c:	20c7c83a 	sub	r3,r4,r3
  828e10:	1807d4ba 	srai	r3,r3,18
  828e14:	18c0ffcc 	andi	r3,r3,1023
  828e18:	e13f6517 	ldw	r4,-620(fp)
  828e1c:	20c7883a 	add	r3,r4,r3
  828e20:	18c00003 	ldbu	r3,0(r3)
  828e24:	10c00005 	stb	r3,0(r2)
  828e28:	e0bf7a17 	ldw	r2,-536(fp)
  828e2c:	10800184 	addi	r2,r2,6
  828e30:	e13f7517 	ldw	r4,-556(fp)
  828e34:	e0ff6c17 	ldw	r3,-592(fp)
  828e38:	20c7883a 	add	r3,r4,r3
  828e3c:	1807d4ba 	srai	r3,r3,18
  828e40:	18c0ffcc 	andi	r3,r3,1023
  828e44:	e13f6517 	ldw	r4,-620(fp)
  828e48:	20c7883a 	add	r3,r4,r3
  828e4c:	18c00003 	ldbu	r3,0(r3)
  828e50:	10c00005 	stb	r3,0(r2)
  828e54:	e0bf7a17 	ldw	r2,-536(fp)
  828e58:	10800244 	addi	r2,r2,9
  828e5c:	e13f7517 	ldw	r4,-556(fp)
  828e60:	e0ff6c17 	ldw	r3,-592(fp)
  828e64:	20c7c83a 	sub	r3,r4,r3
  828e68:	1807d4ba 	srai	r3,r3,18
  828e6c:	18c0ffcc 	andi	r3,r3,1023
  828e70:	e13f6517 	ldw	r4,-620(fp)
  828e74:	20c7883a 	add	r3,r4,r3
  828e78:	18c00003 	ldbu	r3,0(r3)
  828e7c:	10c00005 	stb	r3,0(r2)
  828e80:	e0bf7a17 	ldw	r2,-536(fp)
  828e84:	108001c4 	addi	r2,r2,7
  828e88:	e13f7317 	ldw	r4,-564(fp)
  828e8c:	e0ff6d17 	ldw	r3,-588(fp)
  828e90:	20c7883a 	add	r3,r4,r3
  828e94:	1807d4ba 	srai	r3,r3,18
  828e98:	18c0ffcc 	andi	r3,r3,1023
  828e9c:	e13f6517 	ldw	r4,-620(fp)
  828ea0:	20c7883a 	add	r3,r4,r3
  828ea4:	18c00003 	ldbu	r3,0(r3)
  828ea8:	10c00005 	stb	r3,0(r2)
  828eac:	e0bf7a17 	ldw	r2,-536(fp)
  828eb0:	10800204 	addi	r2,r2,8
  828eb4:	e13f7317 	ldw	r4,-564(fp)
  828eb8:	e0ff6d17 	ldw	r3,-588(fp)
  828ebc:	20c7c83a 	sub	r3,r4,r3
  828ec0:	1807d4ba 	srai	r3,r3,18
  828ec4:	18c0ffcc 	andi	r3,r3,1023
  828ec8:	e13f6517 	ldw	r4,-620(fp)
  828ecc:	20c7883a 	add	r3,r4,r3
  828ed0:	18c00003 	ldbu	r3,0(r3)
  828ed4:	10c00005 	stb	r3,0(r2)
  828ed8:	e0bf6317 	ldw	r2,-628(fp)
  828edc:	10800804 	addi	r2,r2,32
  828ee0:	e0bf6315 	stw	r2,-628(fp)
  828ee4:	e0bf6417 	ldw	r2,-624(fp)
  828ee8:	10800044 	addi	r2,r2,1
  828eec:	e0bf6415 	stw	r2,-624(fp)
  828ef0:	e0bf6417 	ldw	r2,-624(fp)
  828ef4:	10800410 	cmplti	r2,r2,16
  828ef8:	103e091e 	bne	r2,zero,828720 <__alt_mem_epcs_flash_controller_0+0xff81f720>
  828efc:	0001883a 	nop
  828f00:	e6ffff04 	addi	sp,fp,-4
  828f04:	dfc00217 	ldw	ra,8(sp)
  828f08:	df000117 	ldw	fp,4(sp)
  828f0c:	dc000017 	ldw	r16,0(sp)
  828f10:	dec00304 	addi	sp,sp,12
  828f14:	f800283a 	ret

00828f18 <jpeg_idct_16x8>:
  828f18:	deff9e04 	addi	sp,sp,-392
  828f1c:	dfc06115 	stw	ra,388(sp)
  828f20:	df006015 	stw	fp,384(sp)
  828f24:	dc005f15 	stw	r16,380(sp)
  828f28:	df006004 	addi	fp,sp,384
  828f2c:	e13ffb15 	stw	r4,-20(fp)
  828f30:	e17ffc15 	stw	r5,-16(fp)
  828f34:	e1bffd15 	stw	r6,-12(fp)
  828f38:	e1fffe15 	stw	r7,-8(fp)
  828f3c:	e0bffb17 	ldw	r2,-20(fp)
  828f40:	10805417 	ldw	r2,336(r2)
  828f44:	10bfa004 	addi	r2,r2,-384
  828f48:	e0bfa415 	stw	r2,-368(fp)
  828f4c:	e0bffd17 	ldw	r2,-12(fp)
  828f50:	e0bfa015 	stw	r2,-384(fp)
  828f54:	e0bffc17 	ldw	r2,-16(fp)
  828f58:	10801517 	ldw	r2,84(r2)
  828f5c:	e0bfa115 	stw	r2,-380(fp)
  828f60:	e0bfbb04 	addi	r2,fp,-276
  828f64:	e0bfa215 	stw	r2,-376(fp)
  828f68:	00800204 	movi	r2,8
  828f6c:	e0bfa315 	stw	r2,-372(fp)
  828f70:	00019b06 	br	8295e0 <jpeg_idct_16x8+0x6c8>
  828f74:	e0bfa017 	ldw	r2,-384(fp)
  828f78:	10800404 	addi	r2,r2,16
  828f7c:	1080000b 	ldhu	r2,0(r2)
  828f80:	10bfffcc 	andi	r2,r2,65535
  828f84:	10a0001c 	xori	r2,r2,32768
  828f88:	10a00004 	addi	r2,r2,-32768
  828f8c:	1000601e 	bne	r2,zero,829110 <jpeg_idct_16x8+0x1f8>
  828f90:	e0bfa017 	ldw	r2,-384(fp)
  828f94:	10800804 	addi	r2,r2,32
  828f98:	1080000b 	ldhu	r2,0(r2)
  828f9c:	10bfffcc 	andi	r2,r2,65535
  828fa0:	10a0001c 	xori	r2,r2,32768
  828fa4:	10a00004 	addi	r2,r2,-32768
  828fa8:	1000591e 	bne	r2,zero,829110 <jpeg_idct_16x8+0x1f8>
  828fac:	e0bfa017 	ldw	r2,-384(fp)
  828fb0:	10800c04 	addi	r2,r2,48
  828fb4:	1080000b 	ldhu	r2,0(r2)
  828fb8:	10bfffcc 	andi	r2,r2,65535
  828fbc:	10a0001c 	xori	r2,r2,32768
  828fc0:	10a00004 	addi	r2,r2,-32768
  828fc4:	1000521e 	bne	r2,zero,829110 <jpeg_idct_16x8+0x1f8>
  828fc8:	e0bfa017 	ldw	r2,-384(fp)
  828fcc:	10801004 	addi	r2,r2,64
  828fd0:	1080000b 	ldhu	r2,0(r2)
  828fd4:	10bfffcc 	andi	r2,r2,65535
  828fd8:	10a0001c 	xori	r2,r2,32768
  828fdc:	10a00004 	addi	r2,r2,-32768
  828fe0:	10004b1e 	bne	r2,zero,829110 <jpeg_idct_16x8+0x1f8>
  828fe4:	e0bfa017 	ldw	r2,-384(fp)
  828fe8:	10801404 	addi	r2,r2,80
  828fec:	1080000b 	ldhu	r2,0(r2)
  828ff0:	10bfffcc 	andi	r2,r2,65535
  828ff4:	10a0001c 	xori	r2,r2,32768
  828ff8:	10a00004 	addi	r2,r2,-32768
  828ffc:	1000441e 	bne	r2,zero,829110 <jpeg_idct_16x8+0x1f8>
  829000:	e0bfa017 	ldw	r2,-384(fp)
  829004:	10801804 	addi	r2,r2,96
  829008:	1080000b 	ldhu	r2,0(r2)
  82900c:	10bfffcc 	andi	r2,r2,65535
  829010:	10a0001c 	xori	r2,r2,32768
  829014:	10a00004 	addi	r2,r2,-32768
  829018:	10003d1e 	bne	r2,zero,829110 <jpeg_idct_16x8+0x1f8>
  82901c:	e0bfa017 	ldw	r2,-384(fp)
  829020:	10801c04 	addi	r2,r2,112
  829024:	1080000b 	ldhu	r2,0(r2)
  829028:	10bfffcc 	andi	r2,r2,65535
  82902c:	10a0001c 	xori	r2,r2,32768
  829030:	10a00004 	addi	r2,r2,-32768
  829034:	1000361e 	bne	r2,zero,829110 <jpeg_idct_16x8+0x1f8>
  829038:	e0bfa017 	ldw	r2,-384(fp)
  82903c:	1080000b 	ldhu	r2,0(r2)
  829040:	10ffffcc 	andi	r3,r2,65535
  829044:	18e0001c 	xori	r3,r3,32768
  829048:	18e00004 	addi	r3,r3,-32768
  82904c:	e0bfa117 	ldw	r2,-380(fp)
  829050:	10800017 	ldw	r2,0(r2)
  829054:	100b883a 	mov	r5,r2
  829058:	1809883a 	mov	r4,r3
  82905c:	08305040 	call	830504 <__mulsi3>
  829060:	1085883a 	add	r2,r2,r2
  829064:	1085883a 	add	r2,r2,r2
  829068:	e0bfa515 	stw	r2,-364(fp)
  82906c:	e0bfa217 	ldw	r2,-376(fp)
  829070:	e0ffa517 	ldw	r3,-364(fp)
  829074:	10c00015 	stw	r3,0(r2)
  829078:	e0bfa217 	ldw	r2,-376(fp)
  82907c:	10800804 	addi	r2,r2,32
  829080:	e0ffa517 	ldw	r3,-364(fp)
  829084:	10c00015 	stw	r3,0(r2)
  829088:	e0bfa217 	ldw	r2,-376(fp)
  82908c:	10801004 	addi	r2,r2,64
  829090:	e0ffa517 	ldw	r3,-364(fp)
  829094:	10c00015 	stw	r3,0(r2)
  829098:	e0bfa217 	ldw	r2,-376(fp)
  82909c:	10801804 	addi	r2,r2,96
  8290a0:	e0ffa517 	ldw	r3,-364(fp)
  8290a4:	10c00015 	stw	r3,0(r2)
  8290a8:	e0bfa217 	ldw	r2,-376(fp)
  8290ac:	10802004 	addi	r2,r2,128
  8290b0:	e0ffa517 	ldw	r3,-364(fp)
  8290b4:	10c00015 	stw	r3,0(r2)
  8290b8:	e0bfa217 	ldw	r2,-376(fp)
  8290bc:	10802804 	addi	r2,r2,160
  8290c0:	e0ffa517 	ldw	r3,-364(fp)
  8290c4:	10c00015 	stw	r3,0(r2)
  8290c8:	e0bfa217 	ldw	r2,-376(fp)
  8290cc:	10803004 	addi	r2,r2,192
  8290d0:	e0ffa517 	ldw	r3,-364(fp)
  8290d4:	10c00015 	stw	r3,0(r2)
  8290d8:	e0bfa217 	ldw	r2,-376(fp)
  8290dc:	10803804 	addi	r2,r2,224
  8290e0:	e0ffa517 	ldw	r3,-364(fp)
  8290e4:	10c00015 	stw	r3,0(r2)
  8290e8:	e0bfa017 	ldw	r2,-384(fp)
  8290ec:	10800084 	addi	r2,r2,2
  8290f0:	e0bfa015 	stw	r2,-384(fp)
  8290f4:	e0bfa117 	ldw	r2,-380(fp)
  8290f8:	10800104 	addi	r2,r2,4
  8290fc:	e0bfa115 	stw	r2,-380(fp)
  829100:	e0bfa217 	ldw	r2,-376(fp)
  829104:	10800104 	addi	r2,r2,4
  829108:	e0bfa215 	stw	r2,-376(fp)
  82910c:	00013106 	br	8295d4 <jpeg_idct_16x8+0x6bc>
  829110:	e0bfa017 	ldw	r2,-384(fp)
  829114:	10800804 	addi	r2,r2,32
  829118:	1080000b 	ldhu	r2,0(r2)
  82911c:	10ffffcc 	andi	r3,r2,65535
  829120:	18e0001c 	xori	r3,r3,32768
  829124:	18e00004 	addi	r3,r3,-32768
  829128:	e0bfa117 	ldw	r2,-380(fp)
  82912c:	10801004 	addi	r2,r2,64
  829130:	10800017 	ldw	r2,0(r2)
  829134:	100b883a 	mov	r5,r2
  829138:	1809883a 	mov	r4,r3
  82913c:	08305040 	call	830504 <__mulsi3>
  829140:	e0bfa615 	stw	r2,-360(fp)
  829144:	e0bfa017 	ldw	r2,-384(fp)
  829148:	10801804 	addi	r2,r2,96
  82914c:	1080000b 	ldhu	r2,0(r2)
  829150:	10ffffcc 	andi	r3,r2,65535
  829154:	18e0001c 	xori	r3,r3,32768
  829158:	18e00004 	addi	r3,r3,-32768
  82915c:	e0bfa117 	ldw	r2,-380(fp)
  829160:	10803004 	addi	r2,r2,192
  829164:	10800017 	ldw	r2,0(r2)
  829168:	100b883a 	mov	r5,r2
  82916c:	1809883a 	mov	r4,r3
  829170:	08305040 	call	830504 <__mulsi3>
  829174:	e0bfa715 	stw	r2,-356(fp)
  829178:	e0ffa617 	ldw	r3,-360(fp)
  82917c:	e0bfa717 	ldw	r2,-356(fp)
  829180:	1885883a 	add	r2,r3,r2
  829184:	01445444 	movi	r5,4433
  829188:	1009883a 	mov	r4,r2
  82918c:	08305040 	call	830504 <__mulsi3>
  829190:	e0bfa815 	stw	r2,-352(fp)
  829194:	01461f84 	movi	r5,6270
  829198:	e13fa617 	ldw	r4,-360(fp)
  82919c:	08305040 	call	830504 <__mulsi3>
  8291a0:	1007883a 	mov	r3,r2
  8291a4:	e0bfa817 	ldw	r2,-352(fp)
  8291a8:	1885883a 	add	r2,r3,r2
  8291ac:	e0bfa915 	stw	r2,-348(fp)
  8291b0:	017137c4 	movi	r5,-15137
  8291b4:	e13fa717 	ldw	r4,-356(fp)
  8291b8:	08305040 	call	830504 <__mulsi3>
  8291bc:	1007883a 	mov	r3,r2
  8291c0:	e0bfa817 	ldw	r2,-352(fp)
  8291c4:	1885883a 	add	r2,r3,r2
  8291c8:	e0bfaa15 	stw	r2,-344(fp)
  8291cc:	e0bfa017 	ldw	r2,-384(fp)
  8291d0:	1080000b 	ldhu	r2,0(r2)
  8291d4:	10ffffcc 	andi	r3,r2,65535
  8291d8:	18e0001c 	xori	r3,r3,32768
  8291dc:	18e00004 	addi	r3,r3,-32768
  8291e0:	e0bfa117 	ldw	r2,-380(fp)
  8291e4:	10800017 	ldw	r2,0(r2)
  8291e8:	100b883a 	mov	r5,r2
  8291ec:	1809883a 	mov	r4,r3
  8291f0:	08305040 	call	830504 <__mulsi3>
  8291f4:	e0bfa615 	stw	r2,-360(fp)
  8291f8:	e0bfa017 	ldw	r2,-384(fp)
  8291fc:	10801004 	addi	r2,r2,64
  829200:	1080000b 	ldhu	r2,0(r2)
  829204:	10ffffcc 	andi	r3,r2,65535
  829208:	18e0001c 	xori	r3,r3,32768
  82920c:	18e00004 	addi	r3,r3,-32768
  829210:	e0bfa117 	ldw	r2,-380(fp)
  829214:	10802004 	addi	r2,r2,128
  829218:	10800017 	ldw	r2,0(r2)
  82921c:	100b883a 	mov	r5,r2
  829220:	1809883a 	mov	r4,r3
  829224:	08305040 	call	830504 <__mulsi3>
  829228:	e0bfa715 	stw	r2,-356(fp)
  82922c:	e0bfa617 	ldw	r2,-360(fp)
  829230:	1004937a 	slli	r2,r2,13
  829234:	e0bfa615 	stw	r2,-360(fp)
  829238:	e0bfa717 	ldw	r2,-356(fp)
  82923c:	1004937a 	slli	r2,r2,13
  829240:	e0bfa715 	stw	r2,-356(fp)
  829244:	e0bfa617 	ldw	r2,-360(fp)
  829248:	10810004 	addi	r2,r2,1024
  82924c:	e0bfa615 	stw	r2,-360(fp)
  829250:	e0ffa617 	ldw	r3,-360(fp)
  829254:	e0bfa717 	ldw	r2,-356(fp)
  829258:	1885883a 	add	r2,r3,r2
  82925c:	e0bfab15 	stw	r2,-340(fp)
  829260:	e0ffa617 	ldw	r3,-360(fp)
  829264:	e0bfa717 	ldw	r2,-356(fp)
  829268:	1885c83a 	sub	r2,r3,r2
  82926c:	e0bfac15 	stw	r2,-336(fp)
  829270:	e0ffab17 	ldw	r3,-340(fp)
  829274:	e0bfa917 	ldw	r2,-348(fp)
  829278:	1885883a 	add	r2,r3,r2
  82927c:	e0bfad15 	stw	r2,-332(fp)
  829280:	e0ffab17 	ldw	r3,-340(fp)
  829284:	e0bfa917 	ldw	r2,-348(fp)
  829288:	1885c83a 	sub	r2,r3,r2
  82928c:	e0bfae15 	stw	r2,-328(fp)
  829290:	e0ffac17 	ldw	r3,-336(fp)
  829294:	e0bfaa17 	ldw	r2,-344(fp)
  829298:	1885883a 	add	r2,r3,r2
  82929c:	e0bfaf15 	stw	r2,-324(fp)
  8292a0:	e0ffac17 	ldw	r3,-336(fp)
  8292a4:	e0bfaa17 	ldw	r2,-344(fp)
  8292a8:	1885c83a 	sub	r2,r3,r2
  8292ac:	e0bfb015 	stw	r2,-320(fp)
  8292b0:	e0bfa017 	ldw	r2,-384(fp)
  8292b4:	10801c04 	addi	r2,r2,112
  8292b8:	1080000b 	ldhu	r2,0(r2)
  8292bc:	10ffffcc 	andi	r3,r2,65535
  8292c0:	18e0001c 	xori	r3,r3,32768
  8292c4:	18e00004 	addi	r3,r3,-32768
  8292c8:	e0bfa117 	ldw	r2,-380(fp)
  8292cc:	10803804 	addi	r2,r2,224
  8292d0:	10800017 	ldw	r2,0(r2)
  8292d4:	100b883a 	mov	r5,r2
  8292d8:	1809883a 	mov	r4,r3
  8292dc:	08305040 	call	830504 <__mulsi3>
  8292e0:	e0bfab15 	stw	r2,-340(fp)
  8292e4:	e0bfa017 	ldw	r2,-384(fp)
  8292e8:	10801404 	addi	r2,r2,80
  8292ec:	1080000b 	ldhu	r2,0(r2)
  8292f0:	10ffffcc 	andi	r3,r2,65535
  8292f4:	18e0001c 	xori	r3,r3,32768
  8292f8:	18e00004 	addi	r3,r3,-32768
  8292fc:	e0bfa117 	ldw	r2,-380(fp)
  829300:	10802804 	addi	r2,r2,160
  829304:	10800017 	ldw	r2,0(r2)
  829308:	100b883a 	mov	r5,r2
  82930c:	1809883a 	mov	r4,r3
  829310:	08305040 	call	830504 <__mulsi3>
  829314:	e0bfac15 	stw	r2,-336(fp)
  829318:	e0bfa017 	ldw	r2,-384(fp)
  82931c:	10800c04 	addi	r2,r2,48
  829320:	1080000b 	ldhu	r2,0(r2)
  829324:	10ffffcc 	andi	r3,r2,65535
  829328:	18e0001c 	xori	r3,r3,32768
  82932c:	18e00004 	addi	r3,r3,-32768
  829330:	e0bfa117 	ldw	r2,-380(fp)
  829334:	10801804 	addi	r2,r2,96
  829338:	10800017 	ldw	r2,0(r2)
  82933c:	100b883a 	mov	r5,r2
  829340:	1809883a 	mov	r4,r3
  829344:	08305040 	call	830504 <__mulsi3>
  829348:	e0bfa915 	stw	r2,-348(fp)
  82934c:	e0bfa017 	ldw	r2,-384(fp)
  829350:	10800404 	addi	r2,r2,16
  829354:	1080000b 	ldhu	r2,0(r2)
  829358:	10ffffcc 	andi	r3,r2,65535
  82935c:	18e0001c 	xori	r3,r3,32768
  829360:	18e00004 	addi	r3,r3,-32768
  829364:	e0bfa117 	ldw	r2,-380(fp)
  829368:	10800804 	addi	r2,r2,32
  82936c:	10800017 	ldw	r2,0(r2)
  829370:	100b883a 	mov	r5,r2
  829374:	1809883a 	mov	r4,r3
  829378:	08305040 	call	830504 <__mulsi3>
  82937c:	e0bfaa15 	stw	r2,-344(fp)
  829380:	e0ffab17 	ldw	r3,-340(fp)
  829384:	e0bfa917 	ldw	r2,-348(fp)
  829388:	1885883a 	add	r2,r3,r2
  82938c:	e0bfa615 	stw	r2,-360(fp)
  829390:	e0ffac17 	ldw	r3,-336(fp)
  829394:	e0bfaa17 	ldw	r2,-344(fp)
  829398:	1885883a 	add	r2,r3,r2
  82939c:	e0bfa715 	stw	r2,-356(fp)
  8293a0:	e0ffa617 	ldw	r3,-360(fp)
  8293a4:	e0bfa717 	ldw	r2,-356(fp)
  8293a8:	1885883a 	add	r2,r3,r2
  8293ac:	01496844 	movi	r5,9633
  8293b0:	1009883a 	mov	r4,r2
  8293b4:	08305040 	call	830504 <__mulsi3>
  8293b8:	e0bfa815 	stw	r2,-352(fp)
  8293bc:	01704ec4 	movi	r5,-16069
  8293c0:	e13fa617 	ldw	r4,-360(fp)
  8293c4:	08305040 	call	830504 <__mulsi3>
  8293c8:	e0bfa615 	stw	r2,-360(fp)
  8293cc:	017ce104 	movi	r5,-3196
  8293d0:	e13fa717 	ldw	r4,-356(fp)
  8293d4:	08305040 	call	830504 <__mulsi3>
  8293d8:	e0bfa715 	stw	r2,-356(fp)
  8293dc:	e0ffa617 	ldw	r3,-360(fp)
  8293e0:	e0bfa817 	ldw	r2,-352(fp)
  8293e4:	1885883a 	add	r2,r3,r2
  8293e8:	e0bfa615 	stw	r2,-360(fp)
  8293ec:	e0ffa717 	ldw	r3,-356(fp)
  8293f0:	e0bfa817 	ldw	r2,-352(fp)
  8293f4:	1885883a 	add	r2,r3,r2
  8293f8:	e0bfa715 	stw	r2,-356(fp)
  8293fc:	e0ffab17 	ldw	r3,-340(fp)
  829400:	e0bfaa17 	ldw	r2,-344(fp)
  829404:	1885883a 	add	r2,r3,r2
  829408:	0178ccc4 	movi	r5,-7373
  82940c:	1009883a 	mov	r4,r2
  829410:	08305040 	call	830504 <__mulsi3>
  829414:	e0bfa815 	stw	r2,-352(fp)
  829418:	01426384 	movi	r5,2446
  82941c:	e13fab17 	ldw	r4,-340(fp)
  829420:	08305040 	call	830504 <__mulsi3>
  829424:	e0bfab15 	stw	r2,-340(fp)
  829428:	014c02c4 	movi	r5,12299
  82942c:	e13faa17 	ldw	r4,-344(fp)
  829430:	08305040 	call	830504 <__mulsi3>
  829434:	e0bfaa15 	stw	r2,-344(fp)
  829438:	e0ffa817 	ldw	r3,-352(fp)
  82943c:	e0bfa617 	ldw	r2,-360(fp)
  829440:	1885883a 	add	r2,r3,r2
  829444:	e0ffab17 	ldw	r3,-340(fp)
  829448:	1885883a 	add	r2,r3,r2
  82944c:	e0bfab15 	stw	r2,-340(fp)
  829450:	e0ffa817 	ldw	r3,-352(fp)
  829454:	e0bfa717 	ldw	r2,-356(fp)
  829458:	1885883a 	add	r2,r3,r2
  82945c:	e0ffaa17 	ldw	r3,-344(fp)
  829460:	1885883a 	add	r2,r3,r2
  829464:	e0bfaa15 	stw	r2,-344(fp)
  829468:	e0ffac17 	ldw	r3,-336(fp)
  82946c:	e0bfa917 	ldw	r2,-348(fp)
  829470:	1885883a 	add	r2,r3,r2
  829474:	016b7f44 	movi	r5,-20995
  829478:	1009883a 	mov	r4,r2
  82947c:	08305040 	call	830504 <__mulsi3>
  829480:	e0bfa815 	stw	r2,-352(fp)
  829484:	01506cc4 	movi	r5,16819
  829488:	e13fac17 	ldw	r4,-336(fp)
  82948c:	08305040 	call	830504 <__mulsi3>
  829490:	e0bfac15 	stw	r2,-336(fp)
  829494:	01589504 	movi	r5,25172
  829498:	e13fa917 	ldw	r4,-348(fp)
  82949c:	08305040 	call	830504 <__mulsi3>
  8294a0:	e0bfa915 	stw	r2,-348(fp)
  8294a4:	e0ffa817 	ldw	r3,-352(fp)
  8294a8:	e0bfa717 	ldw	r2,-356(fp)
  8294ac:	1885883a 	add	r2,r3,r2
  8294b0:	e0ffac17 	ldw	r3,-336(fp)
  8294b4:	1885883a 	add	r2,r3,r2
  8294b8:	e0bfac15 	stw	r2,-336(fp)
  8294bc:	e0ffa817 	ldw	r3,-352(fp)
  8294c0:	e0bfa617 	ldw	r2,-360(fp)
  8294c4:	1885883a 	add	r2,r3,r2
  8294c8:	e0ffa917 	ldw	r3,-348(fp)
  8294cc:	1885883a 	add	r2,r3,r2
  8294d0:	e0bfa915 	stw	r2,-348(fp)
  8294d4:	e0ffad17 	ldw	r3,-332(fp)
  8294d8:	e0bfaa17 	ldw	r2,-344(fp)
  8294dc:	1885883a 	add	r2,r3,r2
  8294e0:	1007d2fa 	srai	r3,r2,11
  8294e4:	e0bfa217 	ldw	r2,-376(fp)
  8294e8:	10c00015 	stw	r3,0(r2)
  8294ec:	e0bfa217 	ldw	r2,-376(fp)
  8294f0:	10803804 	addi	r2,r2,224
  8294f4:	e13fad17 	ldw	r4,-332(fp)
  8294f8:	e0ffaa17 	ldw	r3,-344(fp)
  8294fc:	20c7c83a 	sub	r3,r4,r3
  829500:	1807d2fa 	srai	r3,r3,11
  829504:	10c00015 	stw	r3,0(r2)
  829508:	e0bfa217 	ldw	r2,-376(fp)
  82950c:	10800804 	addi	r2,r2,32
  829510:	e13faf17 	ldw	r4,-324(fp)
  829514:	e0ffa917 	ldw	r3,-348(fp)
  829518:	20c7883a 	add	r3,r4,r3
  82951c:	1807d2fa 	srai	r3,r3,11
  829520:	10c00015 	stw	r3,0(r2)
  829524:	e0bfa217 	ldw	r2,-376(fp)
  829528:	10803004 	addi	r2,r2,192
  82952c:	e13faf17 	ldw	r4,-324(fp)
  829530:	e0ffa917 	ldw	r3,-348(fp)
  829534:	20c7c83a 	sub	r3,r4,r3
  829538:	1807d2fa 	srai	r3,r3,11
  82953c:	10c00015 	stw	r3,0(r2)
  829540:	e0bfa217 	ldw	r2,-376(fp)
  829544:	10801004 	addi	r2,r2,64
  829548:	e13fb017 	ldw	r4,-320(fp)
  82954c:	e0ffac17 	ldw	r3,-336(fp)
  829550:	20c7883a 	add	r3,r4,r3
  829554:	1807d2fa 	srai	r3,r3,11
  829558:	10c00015 	stw	r3,0(r2)
  82955c:	e0bfa217 	ldw	r2,-376(fp)
  829560:	10802804 	addi	r2,r2,160
  829564:	e13fb017 	ldw	r4,-320(fp)
  829568:	e0ffac17 	ldw	r3,-336(fp)
  82956c:	20c7c83a 	sub	r3,r4,r3
  829570:	1807d2fa 	srai	r3,r3,11
  829574:	10c00015 	stw	r3,0(r2)
  829578:	e0bfa217 	ldw	r2,-376(fp)
  82957c:	10801804 	addi	r2,r2,96
  829580:	e13fae17 	ldw	r4,-328(fp)
  829584:	e0ffab17 	ldw	r3,-340(fp)
  829588:	20c7883a 	add	r3,r4,r3
  82958c:	1807d2fa 	srai	r3,r3,11
  829590:	10c00015 	stw	r3,0(r2)
  829594:	e0bfa217 	ldw	r2,-376(fp)
  829598:	10802004 	addi	r2,r2,128
  82959c:	e13fae17 	ldw	r4,-328(fp)
  8295a0:	e0ffab17 	ldw	r3,-340(fp)
  8295a4:	20c7c83a 	sub	r3,r4,r3
  8295a8:	1807d2fa 	srai	r3,r3,11
  8295ac:	10c00015 	stw	r3,0(r2)
  8295b0:	e0bfa017 	ldw	r2,-384(fp)
  8295b4:	10800084 	addi	r2,r2,2
  8295b8:	e0bfa015 	stw	r2,-384(fp)
  8295bc:	e0bfa117 	ldw	r2,-380(fp)
  8295c0:	10800104 	addi	r2,r2,4
  8295c4:	e0bfa115 	stw	r2,-380(fp)
  8295c8:	e0bfa217 	ldw	r2,-376(fp)
  8295cc:	10800104 	addi	r2,r2,4
  8295d0:	e0bfa215 	stw	r2,-376(fp)
  8295d4:	e0bfa317 	ldw	r2,-372(fp)
  8295d8:	10bfffc4 	addi	r2,r2,-1
  8295dc:	e0bfa315 	stw	r2,-372(fp)
  8295e0:	e0bfa317 	ldw	r2,-372(fp)
  8295e4:	00be6316 	blt	zero,r2,828f74 <__alt_mem_epcs_flash_controller_0+0xff81ff74>
  8295e8:	e0bfbb04 	addi	r2,fp,-276
  8295ec:	e0bfa215 	stw	r2,-376(fp)
  8295f0:	e03fa315 	stw	zero,-372(fp)
  8295f4:	0001f406 	br	829dc8 <jpeg_idct_16x8+0xeb0>
  8295f8:	e0bfa317 	ldw	r2,-372(fp)
  8295fc:	1085883a 	add	r2,r2,r2
  829600:	1085883a 	add	r2,r2,r2
  829604:	1007883a 	mov	r3,r2
  829608:	e0bffe17 	ldw	r2,-8(fp)
  82960c:	10c5883a 	add	r2,r2,r3
  829610:	10c00017 	ldw	r3,0(r2)
  829614:	e0800217 	ldw	r2,8(fp)
  829618:	1885883a 	add	r2,r3,r2
  82961c:	e0bfb115 	stw	r2,-316(fp)
  829620:	e0bfa217 	ldw	r2,-376(fp)
  829624:	10800017 	ldw	r2,0(r2)
  829628:	10900404 	addi	r2,r2,16400
  82962c:	e0bfab15 	stw	r2,-340(fp)
  829630:	e0bfab17 	ldw	r2,-340(fp)
  829634:	1004937a 	slli	r2,r2,13
  829638:	e0bfab15 	stw	r2,-340(fp)
  82963c:	e0bfa217 	ldw	r2,-376(fp)
  829640:	10800404 	addi	r2,r2,16
  829644:	10800017 	ldw	r2,0(r2)
  829648:	e0bfa815 	stw	r2,-352(fp)
  82964c:	014a73c4 	movi	r5,10703
  829650:	e13fa817 	ldw	r4,-352(fp)
  829654:	08305040 	call	830504 <__mulsi3>
  829658:	e0bfac15 	stw	r2,-336(fp)
  82965c:	01445444 	movi	r5,4433
  829660:	e13fa817 	ldw	r4,-352(fp)
  829664:	08305040 	call	830504 <__mulsi3>
  829668:	e0bfa915 	stw	r2,-348(fp)
  82966c:	e0ffab17 	ldw	r3,-340(fp)
  829670:	e0bfac17 	ldw	r2,-336(fp)
  829674:	1885883a 	add	r2,r3,r2
  829678:	e0bfad15 	stw	r2,-332(fp)
  82967c:	e0ffab17 	ldw	r3,-340(fp)
  829680:	e0bfac17 	ldw	r2,-336(fp)
  829684:	1885c83a 	sub	r2,r3,r2
  829688:	e0bfaf15 	stw	r2,-324(fp)
  82968c:	e0ffab17 	ldw	r3,-340(fp)
  829690:	e0bfa917 	ldw	r2,-348(fp)
  829694:	1885883a 	add	r2,r3,r2
  829698:	e0bfb015 	stw	r2,-320(fp)
  82969c:	e0ffab17 	ldw	r3,-340(fp)
  8296a0:	e0bfa917 	ldw	r2,-348(fp)
  8296a4:	1885c83a 	sub	r2,r3,r2
  8296a8:	e0bfae15 	stw	r2,-328(fp)
  8296ac:	e0bfa217 	ldw	r2,-376(fp)
  8296b0:	10800204 	addi	r2,r2,8
  8296b4:	10800017 	ldw	r2,0(r2)
  8296b8:	e0bfa815 	stw	r2,-352(fp)
  8296bc:	e0bfa217 	ldw	r2,-376(fp)
  8296c0:	10800604 	addi	r2,r2,24
  8296c4:	10800017 	ldw	r2,0(r2)
  8296c8:	e0bfa615 	stw	r2,-360(fp)
  8296cc:	e0ffa817 	ldw	r3,-352(fp)
  8296d0:	e0bfa617 	ldw	r2,-360(fp)
  8296d4:	1885c83a 	sub	r2,r3,r2
  8296d8:	e0bfa715 	stw	r2,-356(fp)
  8296dc:	01423504 	movi	r5,2260
  8296e0:	e13fa717 	ldw	r4,-356(fp)
  8296e4:	08305040 	call	830504 <__mulsi3>
  8296e8:	e0bfb215 	stw	r2,-312(fp)
  8296ec:	014b18c4 	movi	r5,11363
  8296f0:	e13fa717 	ldw	r4,-356(fp)
  8296f4:	08305040 	call	830504 <__mulsi3>
  8296f8:	e0bfa715 	stw	r2,-356(fp)
  8296fc:	015480c4 	movi	r5,20995
  829700:	e13fa617 	ldw	r4,-360(fp)
  829704:	08305040 	call	830504 <__mulsi3>
  829708:	1007883a 	mov	r3,r2
  82970c:	e0bfa717 	ldw	r2,-356(fp)
  829710:	1885883a 	add	r2,r3,r2
  829714:	e0bfab15 	stw	r2,-340(fp)
  829718:	01473344 	movi	r5,7373
  82971c:	e13fa817 	ldw	r4,-352(fp)
  829720:	08305040 	call	830504 <__mulsi3>
  829724:	1007883a 	mov	r3,r2
  829728:	e0bfb217 	ldw	r2,-312(fp)
  82972c:	1885883a 	add	r2,r3,r2
  829730:	e0bfac15 	stw	r2,-336(fp)
  829734:	017b3084 	movi	r5,-4926
  829738:	e13fa817 	ldw	r4,-352(fp)
  82973c:	08305040 	call	830504 <__mulsi3>
  829740:	1007883a 	mov	r3,r2
  829744:	e0bfa717 	ldw	r2,-356(fp)
  829748:	1885883a 	add	r2,r3,r2
  82974c:	e0bfa915 	stw	r2,-348(fp)
  829750:	017bec04 	movi	r5,-4176
  829754:	e13fa617 	ldw	r4,-360(fp)
  829758:	08305040 	call	830504 <__mulsi3>
  82975c:	1007883a 	mov	r3,r2
  829760:	e0bfb217 	ldw	r2,-312(fp)
  829764:	1885883a 	add	r2,r3,r2
  829768:	e0bfaa15 	stw	r2,-344(fp)
  82976c:	e0ffad17 	ldw	r3,-332(fp)
  829770:	e0bfab17 	ldw	r2,-340(fp)
  829774:	1885883a 	add	r2,r3,r2
  829778:	e0bfb315 	stw	r2,-308(fp)
  82977c:	e0ffad17 	ldw	r3,-332(fp)
  829780:	e0bfab17 	ldw	r2,-340(fp)
  829784:	1885c83a 	sub	r2,r3,r2
  829788:	e0bfb415 	stw	r2,-304(fp)
  82978c:	e0ffb017 	ldw	r3,-320(fp)
  829790:	e0bfac17 	ldw	r2,-336(fp)
  829794:	1885883a 	add	r2,r3,r2
  829798:	e0bfb515 	stw	r2,-300(fp)
  82979c:	e0ffb017 	ldw	r3,-320(fp)
  8297a0:	e0bfac17 	ldw	r2,-336(fp)
  8297a4:	1885c83a 	sub	r2,r3,r2
  8297a8:	e0bfb615 	stw	r2,-296(fp)
  8297ac:	e0ffae17 	ldw	r3,-328(fp)
  8297b0:	e0bfa917 	ldw	r2,-348(fp)
  8297b4:	1885883a 	add	r2,r3,r2
  8297b8:	e0bfb715 	stw	r2,-292(fp)
  8297bc:	e0ffae17 	ldw	r3,-328(fp)
  8297c0:	e0bfa917 	ldw	r2,-348(fp)
  8297c4:	1885c83a 	sub	r2,r3,r2
  8297c8:	e0bfb815 	stw	r2,-288(fp)
  8297cc:	e0ffaf17 	ldw	r3,-324(fp)
  8297d0:	e0bfaa17 	ldw	r2,-344(fp)
  8297d4:	1885883a 	add	r2,r3,r2
  8297d8:	e0bfb915 	stw	r2,-284(fp)
  8297dc:	e0ffaf17 	ldw	r3,-324(fp)
  8297e0:	e0bfaa17 	ldw	r2,-344(fp)
  8297e4:	1885c83a 	sub	r2,r3,r2
  8297e8:	e0bfba15 	stw	r2,-280(fp)
  8297ec:	e0bfa217 	ldw	r2,-376(fp)
  8297f0:	10800104 	addi	r2,r2,4
  8297f4:	10800017 	ldw	r2,0(r2)
  8297f8:	e0bfa815 	stw	r2,-352(fp)
  8297fc:	e0bfa217 	ldw	r2,-376(fp)
  829800:	10800304 	addi	r2,r2,12
  829804:	10800017 	ldw	r2,0(r2)
  829808:	e0bfa615 	stw	r2,-360(fp)
  82980c:	e0bfa217 	ldw	r2,-376(fp)
  829810:	10800504 	addi	r2,r2,20
  829814:	10800017 	ldw	r2,0(r2)
  829818:	e0bfa715 	stw	r2,-356(fp)
  82981c:	e0bfa217 	ldw	r2,-376(fp)
  829820:	10800704 	addi	r2,r2,28
  829824:	10800017 	ldw	r2,0(r2)
  829828:	e0bfb215 	stw	r2,-312(fp)
  82982c:	e0ffa817 	ldw	r3,-352(fp)
  829830:	e0bfa717 	ldw	r2,-356(fp)
  829834:	1885883a 	add	r2,r3,r2
  829838:	e0bfaf15 	stw	r2,-324(fp)
  82983c:	e0ffa817 	ldw	r3,-352(fp)
  829840:	e0bfa617 	ldw	r2,-360(fp)
  829844:	1885883a 	add	r2,r3,r2
  829848:	014ad384 	movi	r5,11086
  82984c:	1009883a 	mov	r4,r2
  829850:	08305040 	call	830504 <__mulsi3>
  829854:	e0bfac15 	stw	r2,-336(fp)
  829858:	0149fa44 	movi	r5,10217
  82985c:	e13faf17 	ldw	r4,-324(fp)
  829860:	08305040 	call	830504 <__mulsi3>
  829864:	e0bfa915 	stw	r2,-348(fp)
  829868:	e0ffa817 	ldw	r3,-352(fp)
  82986c:	e0bfb217 	ldw	r2,-312(fp)
  829870:	1885883a 	add	r2,r3,r2
  829874:	0148bf04 	movi	r5,8956
  829878:	1009883a 	mov	r4,r2
  82987c:	08305040 	call	830504 <__mulsi3>
  829880:	e0bfaa15 	stw	r2,-344(fp)
  829884:	e0ffa817 	ldw	r3,-352(fp)
  829888:	e0bfb217 	ldw	r2,-312(fp)
  82988c:	1885c83a 	sub	r2,r3,r2
  829890:	01472d84 	movi	r5,7350
  829894:	1009883a 	mov	r4,r2
  829898:	08305040 	call	830504 <__mulsi3>
  82989c:	e0bfad15 	stw	r2,-332(fp)
  8298a0:	01455544 	movi	r5,5461
  8298a4:	e13faf17 	ldw	r4,-324(fp)
  8298a8:	08305040 	call	830504 <__mulsi3>
  8298ac:	e0bfaf15 	stw	r2,-324(fp)
  8298b0:	e0ffa817 	ldw	r3,-352(fp)
  8298b4:	e0bfa617 	ldw	r2,-360(fp)
  8298b8:	1885c83a 	sub	r2,r3,r2
  8298bc:	014348c4 	movi	r5,3363
  8298c0:	1009883a 	mov	r4,r2
  8298c4:	08305040 	call	830504 <__mulsi3>
  8298c8:	e0bfb015 	stw	r2,-320(fp)
  8298cc:	e0ffac17 	ldw	r3,-336(fp)
  8298d0:	e0bfa917 	ldw	r2,-348(fp)
  8298d4:	1887883a 	add	r3,r3,r2
  8298d8:	e0bfaa17 	ldw	r2,-344(fp)
  8298dc:	18a1883a 	add	r16,r3,r2
  8298e0:	016db584 	movi	r5,-18730
  8298e4:	e13fa817 	ldw	r4,-352(fp)
  8298e8:	08305040 	call	830504 <__mulsi3>
  8298ec:	8085883a 	add	r2,r16,r2
  8298f0:	e0bfab15 	stw	r2,-340(fp)
  8298f4:	e0ffad17 	ldw	r3,-332(fp)
  8298f8:	e0bfaf17 	ldw	r2,-324(fp)
  8298fc:	1887883a 	add	r3,r3,r2
  829900:	e0bfb017 	ldw	r2,-320(fp)
  829904:	18a1883a 	add	r16,r3,r2
  829908:	01715084 	movi	r5,-15038
  82990c:	e13fa817 	ldw	r4,-352(fp)
  829910:	08305040 	call	830504 <__mulsi3>
  829914:	8085883a 	add	r2,r16,r2
  829918:	e0bfae15 	stw	r2,-328(fp)
  82991c:	e0ffa617 	ldw	r3,-360(fp)
  829920:	e0bfa717 	ldw	r2,-356(fp)
  829924:	1885883a 	add	r2,r3,r2
  829928:	01411c04 	movi	r5,1136
  82992c:	1009883a 	mov	r4,r2
  829930:	08305040 	call	830504 <__mulsi3>
  829934:	e0bfa815 	stw	r2,-352(fp)
  829938:	01409344 	movi	r5,589
  82993c:	e13fa617 	ldw	r4,-360(fp)
  829940:	08305040 	call	830504 <__mulsi3>
  829944:	1007883a 	mov	r3,r2
  829948:	e0bfa817 	ldw	r2,-352(fp)
  82994c:	1885883a 	add	r2,r3,r2
  829950:	e0ffac17 	ldw	r3,-336(fp)
  829954:	1885883a 	add	r2,r3,r2
  829958:	e0bfac15 	stw	r2,-336(fp)
  82995c:	0176fe84 	movi	r5,-9222
  829960:	e13fa717 	ldw	r4,-356(fp)
  829964:	08305040 	call	830504 <__mulsi3>
  829968:	1007883a 	mov	r3,r2
  82996c:	e0bfa817 	ldw	r2,-352(fp)
  829970:	1885883a 	add	r2,r3,r2
  829974:	e0ffa917 	ldw	r3,-348(fp)
  829978:	1885883a 	add	r2,r3,r2
  82997c:	e0bfa915 	stw	r2,-348(fp)
  829980:	e0ffa717 	ldw	r3,-356(fp)
  829984:	e0bfa617 	ldw	r2,-360(fp)
  829988:	1885c83a 	sub	r2,r3,r2
  82998c:	014b4244 	movi	r5,11529
  829990:	1009883a 	mov	r4,r2
  829994:	08305040 	call	830504 <__mulsi3>
  829998:	e0bfa815 	stw	r2,-352(fp)
  82999c:	0179de84 	movi	r5,-6278
  8299a0:	e13fa717 	ldw	r4,-356(fp)
  8299a4:	08305040 	call	830504 <__mulsi3>
  8299a8:	1007883a 	mov	r3,r2
  8299ac:	e0bfa817 	ldw	r2,-352(fp)
  8299b0:	1885883a 	add	r2,r3,r2
  8299b4:	e0ffaf17 	ldw	r3,-324(fp)
  8299b8:	1885883a 	add	r2,r3,r2
  8299bc:	e0bfaf15 	stw	r2,-324(fp)
  8299c0:	014fc684 	movi	r5,16154
  8299c4:	e13fa617 	ldw	r4,-360(fp)
  8299c8:	08305040 	call	830504 <__mulsi3>
  8299cc:	1007883a 	mov	r3,r2
  8299d0:	e0bfa817 	ldw	r2,-352(fp)
  8299d4:	1885883a 	add	r2,r3,r2
  8299d8:	e0ffb017 	ldw	r3,-320(fp)
  8299dc:	1885883a 	add	r2,r3,r2
  8299e0:	e0bfb015 	stw	r2,-320(fp)
  8299e4:	e0ffa617 	ldw	r3,-360(fp)
  8299e8:	e0bfb217 	ldw	r2,-312(fp)
  8299ec:	1885883a 	add	r2,r3,r2
  8299f0:	e0bfa615 	stw	r2,-360(fp)
  8299f4:	017aaac4 	movi	r5,-5461
  8299f8:	e13fa617 	ldw	r4,-360(fp)
  8299fc:	08305040 	call	830504 <__mulsi3>
  829a00:	e0bfa815 	stw	r2,-352(fp)
  829a04:	e0ffac17 	ldw	r3,-336(fp)
  829a08:	e0bfa817 	ldw	r2,-352(fp)
  829a0c:	1885883a 	add	r2,r3,r2
  829a10:	e0bfac15 	stw	r2,-336(fp)
  829a14:	01488604 	movi	r5,8728
  829a18:	e13fb217 	ldw	r4,-312(fp)
  829a1c:	08305040 	call	830504 <__mulsi3>
  829a20:	1007883a 	mov	r3,r2
  829a24:	e0bfa817 	ldw	r2,-352(fp)
  829a28:	1885883a 	add	r2,r3,r2
  829a2c:	e0ffaa17 	ldw	r3,-344(fp)
  829a30:	1885883a 	add	r2,r3,r2
  829a34:	e0bfaa15 	stw	r2,-344(fp)
  829a38:	017605c4 	movi	r5,-10217
  829a3c:	e13fa617 	ldw	r4,-360(fp)
  829a40:	08305040 	call	830504 <__mulsi3>
  829a44:	e0bfa615 	stw	r2,-360(fp)
  829a48:	01592144 	movi	r5,25733
  829a4c:	e13fb217 	ldw	r4,-312(fp)
  829a50:	08305040 	call	830504 <__mulsi3>
  829a54:	1007883a 	mov	r3,r2
  829a58:	e0bfa617 	ldw	r2,-360(fp)
  829a5c:	1885883a 	add	r2,r3,r2
  829a60:	e0ffad17 	ldw	r3,-332(fp)
  829a64:	1885883a 	add	r2,r3,r2
  829a68:	e0bfad15 	stw	r2,-332(fp)
  829a6c:	e0ffb017 	ldw	r3,-320(fp)
  829a70:	e0bfa617 	ldw	r2,-360(fp)
  829a74:	1885883a 	add	r2,r3,r2
  829a78:	e0bfb015 	stw	r2,-320(fp)
  829a7c:	e0ffa717 	ldw	r3,-356(fp)
  829a80:	e0bfb217 	ldw	r2,-312(fp)
  829a84:	1885883a 	add	r2,r3,r2
  829a88:	01752c84 	movi	r5,-11086
  829a8c:	1009883a 	mov	r4,r2
  829a90:	08305040 	call	830504 <__mulsi3>
  829a94:	e0bfa615 	stw	r2,-360(fp)
  829a98:	e0ffa917 	ldw	r3,-348(fp)
  829a9c:	e0bfa617 	ldw	r2,-360(fp)
  829aa0:	1885883a 	add	r2,r3,r2
  829aa4:	e0bfa915 	stw	r2,-348(fp)
  829aa8:	e0ffaa17 	ldw	r3,-344(fp)
  829aac:	e0bfa617 	ldw	r2,-360(fp)
  829ab0:	1885883a 	add	r2,r3,r2
  829ab4:	e0bfaa15 	stw	r2,-344(fp)
  829ab8:	e0ffb217 	ldw	r3,-312(fp)
  829abc:	e0bfa717 	ldw	r2,-356(fp)
  829ac0:	1885c83a 	sub	r2,r3,r2
  829ac4:	014348c4 	movi	r5,3363
  829ac8:	1009883a 	mov	r4,r2
  829acc:	08305040 	call	830504 <__mulsi3>
  829ad0:	e0bfa615 	stw	r2,-360(fp)
  829ad4:	e0ffad17 	ldw	r3,-332(fp)
  829ad8:	e0bfa617 	ldw	r2,-360(fp)
  829adc:	1885883a 	add	r2,r3,r2
  829ae0:	e0bfad15 	stw	r2,-332(fp)
  829ae4:	e0ffaf17 	ldw	r3,-324(fp)
  829ae8:	e0bfa617 	ldw	r2,-360(fp)
  829aec:	1885883a 	add	r2,r3,r2
  829af0:	e0bfaf15 	stw	r2,-324(fp)
  829af4:	e0ffb317 	ldw	r3,-308(fp)
  829af8:	e0bfab17 	ldw	r2,-340(fp)
  829afc:	1885883a 	add	r2,r3,r2
  829b00:	1005d4ba 	srai	r2,r2,18
  829b04:	1080ffcc 	andi	r2,r2,1023
  829b08:	e0ffa417 	ldw	r3,-368(fp)
  829b0c:	1885883a 	add	r2,r3,r2
  829b10:	10c00003 	ldbu	r3,0(r2)
  829b14:	e0bfb117 	ldw	r2,-316(fp)
  829b18:	10c00005 	stb	r3,0(r2)
  829b1c:	e0bfb117 	ldw	r2,-316(fp)
  829b20:	108003c4 	addi	r2,r2,15
  829b24:	e13fb317 	ldw	r4,-308(fp)
  829b28:	e0ffab17 	ldw	r3,-340(fp)
  829b2c:	20c7c83a 	sub	r3,r4,r3
  829b30:	1807d4ba 	srai	r3,r3,18
  829b34:	18c0ffcc 	andi	r3,r3,1023
  829b38:	e13fa417 	ldw	r4,-368(fp)
  829b3c:	20c7883a 	add	r3,r4,r3
  829b40:	18c00003 	ldbu	r3,0(r3)
  829b44:	10c00005 	stb	r3,0(r2)
  829b48:	e0bfb117 	ldw	r2,-316(fp)
  829b4c:	10800044 	addi	r2,r2,1
  829b50:	e13fb517 	ldw	r4,-300(fp)
  829b54:	e0ffac17 	ldw	r3,-336(fp)
  829b58:	20c7883a 	add	r3,r4,r3
  829b5c:	1807d4ba 	srai	r3,r3,18
  829b60:	18c0ffcc 	andi	r3,r3,1023
  829b64:	e13fa417 	ldw	r4,-368(fp)
  829b68:	20c7883a 	add	r3,r4,r3
  829b6c:	18c00003 	ldbu	r3,0(r3)
  829b70:	10c00005 	stb	r3,0(r2)
  829b74:	e0bfb117 	ldw	r2,-316(fp)
  829b78:	10800384 	addi	r2,r2,14
  829b7c:	e13fb517 	ldw	r4,-300(fp)
  829b80:	e0ffac17 	ldw	r3,-336(fp)
  829b84:	20c7c83a 	sub	r3,r4,r3
  829b88:	1807d4ba 	srai	r3,r3,18
  829b8c:	18c0ffcc 	andi	r3,r3,1023
  829b90:	e13fa417 	ldw	r4,-368(fp)
  829b94:	20c7883a 	add	r3,r4,r3
  829b98:	18c00003 	ldbu	r3,0(r3)
  829b9c:	10c00005 	stb	r3,0(r2)
  829ba0:	e0bfb117 	ldw	r2,-316(fp)
  829ba4:	10800084 	addi	r2,r2,2
  829ba8:	e13fb717 	ldw	r4,-292(fp)
  829bac:	e0ffa917 	ldw	r3,-348(fp)
  829bb0:	20c7883a 	add	r3,r4,r3
  829bb4:	1807d4ba 	srai	r3,r3,18
  829bb8:	18c0ffcc 	andi	r3,r3,1023
  829bbc:	e13fa417 	ldw	r4,-368(fp)
  829bc0:	20c7883a 	add	r3,r4,r3
  829bc4:	18c00003 	ldbu	r3,0(r3)
  829bc8:	10c00005 	stb	r3,0(r2)
  829bcc:	e0bfb117 	ldw	r2,-316(fp)
  829bd0:	10800344 	addi	r2,r2,13
  829bd4:	e13fb717 	ldw	r4,-292(fp)
  829bd8:	e0ffa917 	ldw	r3,-348(fp)
  829bdc:	20c7c83a 	sub	r3,r4,r3
  829be0:	1807d4ba 	srai	r3,r3,18
  829be4:	18c0ffcc 	andi	r3,r3,1023
  829be8:	e13fa417 	ldw	r4,-368(fp)
  829bec:	20c7883a 	add	r3,r4,r3
  829bf0:	18c00003 	ldbu	r3,0(r3)
  829bf4:	10c00005 	stb	r3,0(r2)
  829bf8:	e0bfb117 	ldw	r2,-316(fp)
  829bfc:	108000c4 	addi	r2,r2,3
  829c00:	e13fb917 	ldw	r4,-284(fp)
  829c04:	e0ffaa17 	ldw	r3,-344(fp)
  829c08:	20c7883a 	add	r3,r4,r3
  829c0c:	1807d4ba 	srai	r3,r3,18
  829c10:	18c0ffcc 	andi	r3,r3,1023
  829c14:	e13fa417 	ldw	r4,-368(fp)
  829c18:	20c7883a 	add	r3,r4,r3
  829c1c:	18c00003 	ldbu	r3,0(r3)
  829c20:	10c00005 	stb	r3,0(r2)
  829c24:	e0bfb117 	ldw	r2,-316(fp)
  829c28:	10800304 	addi	r2,r2,12
  829c2c:	e13fb917 	ldw	r4,-284(fp)
  829c30:	e0ffaa17 	ldw	r3,-344(fp)
  829c34:	20c7c83a 	sub	r3,r4,r3
  829c38:	1807d4ba 	srai	r3,r3,18
  829c3c:	18c0ffcc 	andi	r3,r3,1023
  829c40:	e13fa417 	ldw	r4,-368(fp)
  829c44:	20c7883a 	add	r3,r4,r3
  829c48:	18c00003 	ldbu	r3,0(r3)
  829c4c:	10c00005 	stb	r3,0(r2)
  829c50:	e0bfb117 	ldw	r2,-316(fp)
  829c54:	10800104 	addi	r2,r2,4
  829c58:	e13fba17 	ldw	r4,-280(fp)
  829c5c:	e0ffad17 	ldw	r3,-332(fp)
  829c60:	20c7883a 	add	r3,r4,r3
  829c64:	1807d4ba 	srai	r3,r3,18
  829c68:	18c0ffcc 	andi	r3,r3,1023
  829c6c:	e13fa417 	ldw	r4,-368(fp)
  829c70:	20c7883a 	add	r3,r4,r3
  829c74:	18c00003 	ldbu	r3,0(r3)
  829c78:	10c00005 	stb	r3,0(r2)
  829c7c:	e0bfb117 	ldw	r2,-316(fp)
  829c80:	108002c4 	addi	r2,r2,11
  829c84:	e13fba17 	ldw	r4,-280(fp)
  829c88:	e0ffad17 	ldw	r3,-332(fp)
  829c8c:	20c7c83a 	sub	r3,r4,r3
  829c90:	1807d4ba 	srai	r3,r3,18
  829c94:	18c0ffcc 	andi	r3,r3,1023
  829c98:	e13fa417 	ldw	r4,-368(fp)
  829c9c:	20c7883a 	add	r3,r4,r3
  829ca0:	18c00003 	ldbu	r3,0(r3)
  829ca4:	10c00005 	stb	r3,0(r2)
  829ca8:	e0bfb117 	ldw	r2,-316(fp)
  829cac:	10800144 	addi	r2,r2,5
  829cb0:	e13fb817 	ldw	r4,-288(fp)
  829cb4:	e0ffaf17 	ldw	r3,-324(fp)
  829cb8:	20c7883a 	add	r3,r4,r3
  829cbc:	1807d4ba 	srai	r3,r3,18
  829cc0:	18c0ffcc 	andi	r3,r3,1023
  829cc4:	e13fa417 	ldw	r4,-368(fp)
  829cc8:	20c7883a 	add	r3,r4,r3
  829ccc:	18c00003 	ldbu	r3,0(r3)
  829cd0:	10c00005 	stb	r3,0(r2)
  829cd4:	e0bfb117 	ldw	r2,-316(fp)
  829cd8:	10800284 	addi	r2,r2,10
  829cdc:	e13fb817 	ldw	r4,-288(fp)
  829ce0:	e0ffaf17 	ldw	r3,-324(fp)
  829ce4:	20c7c83a 	sub	r3,r4,r3
  829ce8:	1807d4ba 	srai	r3,r3,18
  829cec:	18c0ffcc 	andi	r3,r3,1023
  829cf0:	e13fa417 	ldw	r4,-368(fp)
  829cf4:	20c7883a 	add	r3,r4,r3
  829cf8:	18c00003 	ldbu	r3,0(r3)
  829cfc:	10c00005 	stb	r3,0(r2)
  829d00:	e0bfb117 	ldw	r2,-316(fp)
  829d04:	10800184 	addi	r2,r2,6
  829d08:	e13fb617 	ldw	r4,-296(fp)
  829d0c:	e0ffb017 	ldw	r3,-320(fp)
  829d10:	20c7883a 	add	r3,r4,r3
  829d14:	1807d4ba 	srai	r3,r3,18
  829d18:	18c0ffcc 	andi	r3,r3,1023
  829d1c:	e13fa417 	ldw	r4,-368(fp)
  829d20:	20c7883a 	add	r3,r4,r3
  829d24:	18c00003 	ldbu	r3,0(r3)
  829d28:	10c00005 	stb	r3,0(r2)
  829d2c:	e0bfb117 	ldw	r2,-316(fp)
  829d30:	10800244 	addi	r2,r2,9
  829d34:	e13fb617 	ldw	r4,-296(fp)
  829d38:	e0ffb017 	ldw	r3,-320(fp)
  829d3c:	20c7c83a 	sub	r3,r4,r3
  829d40:	1807d4ba 	srai	r3,r3,18
  829d44:	18c0ffcc 	andi	r3,r3,1023
  829d48:	e13fa417 	ldw	r4,-368(fp)
  829d4c:	20c7883a 	add	r3,r4,r3
  829d50:	18c00003 	ldbu	r3,0(r3)
  829d54:	10c00005 	stb	r3,0(r2)
  829d58:	e0bfb117 	ldw	r2,-316(fp)
  829d5c:	108001c4 	addi	r2,r2,7
  829d60:	e13fb417 	ldw	r4,-304(fp)
  829d64:	e0ffae17 	ldw	r3,-328(fp)
  829d68:	20c7883a 	add	r3,r4,r3
  829d6c:	1807d4ba 	srai	r3,r3,18
  829d70:	18c0ffcc 	andi	r3,r3,1023
  829d74:	e13fa417 	ldw	r4,-368(fp)
  829d78:	20c7883a 	add	r3,r4,r3
  829d7c:	18c00003 	ldbu	r3,0(r3)
  829d80:	10c00005 	stb	r3,0(r2)
  829d84:	e0bfb117 	ldw	r2,-316(fp)
  829d88:	10800204 	addi	r2,r2,8
  829d8c:	e13fb417 	ldw	r4,-304(fp)
  829d90:	e0ffae17 	ldw	r3,-328(fp)
  829d94:	20c7c83a 	sub	r3,r4,r3
  829d98:	1807d4ba 	srai	r3,r3,18
  829d9c:	18c0ffcc 	andi	r3,r3,1023
  829da0:	e13fa417 	ldw	r4,-368(fp)
  829da4:	20c7883a 	add	r3,r4,r3
  829da8:	18c00003 	ldbu	r3,0(r3)
  829dac:	10c00005 	stb	r3,0(r2)
  829db0:	e0bfa217 	ldw	r2,-376(fp)
  829db4:	10800804 	addi	r2,r2,32
  829db8:	e0bfa215 	stw	r2,-376(fp)
  829dbc:	e0bfa317 	ldw	r2,-372(fp)
  829dc0:	10800044 	addi	r2,r2,1
  829dc4:	e0bfa315 	stw	r2,-372(fp)
  829dc8:	e0bfa317 	ldw	r2,-372(fp)
  829dcc:	10800210 	cmplti	r2,r2,8
  829dd0:	103e091e 	bne	r2,zero,8295f8 <__alt_mem_epcs_flash_controller_0+0xff8205f8>
  829dd4:	0001883a 	nop
  829dd8:	e6ffff04 	addi	sp,fp,-4
  829ddc:	dfc00217 	ldw	ra,8(sp)
  829de0:	df000117 	ldw	fp,4(sp)
  829de4:	dc000017 	ldw	r16,0(sp)
  829de8:	dec00304 	addi	sp,sp,12
  829dec:	f800283a 	ret

00829df0 <jpeg_idct_14x7>:
  829df0:	deffa904 	addi	sp,sp,-348
  829df4:	dfc05615 	stw	ra,344(sp)
  829df8:	df005515 	stw	fp,340(sp)
  829dfc:	dc005415 	stw	r16,336(sp)
  829e00:	df005504 	addi	fp,sp,340
  829e04:	e13ffb15 	stw	r4,-20(fp)
  829e08:	e17ffc15 	stw	r5,-16(fp)
  829e0c:	e1bffd15 	stw	r6,-12(fp)
  829e10:	e1fffe15 	stw	r7,-8(fp)
  829e14:	e0bffb17 	ldw	r2,-20(fp)
  829e18:	10805417 	ldw	r2,336(r2)
  829e1c:	10bfa004 	addi	r2,r2,-384
  829e20:	e0bfaf15 	stw	r2,-324(fp)
  829e24:	e0bffd17 	ldw	r2,-12(fp)
  829e28:	e0bfab15 	stw	r2,-340(fp)
  829e2c:	e0bffc17 	ldw	r2,-16(fp)
  829e30:	10801517 	ldw	r2,84(r2)
  829e34:	e0bfac15 	stw	r2,-336(fp)
  829e38:	e0bfc304 	addi	r2,fp,-244
  829e3c:	e0bfad15 	stw	r2,-332(fp)
  829e40:	e03fae15 	stw	zero,-328(fp)
  829e44:	00010e06 	br	82a280 <jpeg_idct_14x7+0x490>
  829e48:	e0bfab17 	ldw	r2,-340(fp)
  829e4c:	1080000b 	ldhu	r2,0(r2)
  829e50:	10ffffcc 	andi	r3,r2,65535
  829e54:	18e0001c 	xori	r3,r3,32768
  829e58:	18e00004 	addi	r3,r3,-32768
  829e5c:	e0bfac17 	ldw	r2,-336(fp)
  829e60:	10800017 	ldw	r2,0(r2)
  829e64:	100b883a 	mov	r5,r2
  829e68:	1809883a 	mov	r4,r3
  829e6c:	08305040 	call	830504 <__mulsi3>
  829e70:	e0bfb015 	stw	r2,-320(fp)
  829e74:	e0bfb017 	ldw	r2,-320(fp)
  829e78:	1004937a 	slli	r2,r2,13
  829e7c:	e0bfb015 	stw	r2,-320(fp)
  829e80:	e0bfb017 	ldw	r2,-320(fp)
  829e84:	10810004 	addi	r2,r2,1024
  829e88:	e0bfb015 	stw	r2,-320(fp)
  829e8c:	e0bfab17 	ldw	r2,-340(fp)
  829e90:	10800804 	addi	r2,r2,32
  829e94:	1080000b 	ldhu	r2,0(r2)
  829e98:	10ffffcc 	andi	r3,r2,65535
  829e9c:	18e0001c 	xori	r3,r3,32768
  829ea0:	18e00004 	addi	r3,r3,-32768
  829ea4:	e0bfac17 	ldw	r2,-336(fp)
  829ea8:	10801004 	addi	r2,r2,64
  829eac:	10800017 	ldw	r2,0(r2)
  829eb0:	100b883a 	mov	r5,r2
  829eb4:	1809883a 	mov	r4,r3
  829eb8:	08305040 	call	830504 <__mulsi3>
  829ebc:	e0bfb115 	stw	r2,-316(fp)
  829ec0:	e0bfab17 	ldw	r2,-340(fp)
  829ec4:	10801004 	addi	r2,r2,64
  829ec8:	1080000b 	ldhu	r2,0(r2)
  829ecc:	10ffffcc 	andi	r3,r2,65535
  829ed0:	18e0001c 	xori	r3,r3,32768
  829ed4:	18e00004 	addi	r3,r3,-32768
  829ed8:	e0bfac17 	ldw	r2,-336(fp)
  829edc:	10802004 	addi	r2,r2,128
  829ee0:	10800017 	ldw	r2,0(r2)
  829ee4:	100b883a 	mov	r5,r2
  829ee8:	1809883a 	mov	r4,r3
  829eec:	08305040 	call	830504 <__mulsi3>
  829ef0:	e0bfb215 	stw	r2,-312(fp)
  829ef4:	e0bfab17 	ldw	r2,-340(fp)
  829ef8:	10801804 	addi	r2,r2,96
  829efc:	1080000b 	ldhu	r2,0(r2)
  829f00:	10ffffcc 	andi	r3,r2,65535
  829f04:	18e0001c 	xori	r3,r3,32768
  829f08:	18e00004 	addi	r3,r3,-32768
  829f0c:	e0bfac17 	ldw	r2,-336(fp)
  829f10:	10803004 	addi	r2,r2,192
  829f14:	10800017 	ldw	r2,0(r2)
  829f18:	100b883a 	mov	r5,r2
  829f1c:	1809883a 	mov	r4,r3
  829f20:	08305040 	call	830504 <__mulsi3>
  829f24:	e0bfb315 	stw	r2,-308(fp)
  829f28:	e0ffb217 	ldw	r3,-312(fp)
  829f2c:	e0bfb317 	ldw	r2,-308(fp)
  829f30:	1885c83a 	sub	r2,r3,r2
  829f34:	01470dc4 	movi	r5,7223
  829f38:	1009883a 	mov	r4,r2
  829f3c:	08305040 	call	830504 <__mulsi3>
  829f40:	e0bfb415 	stw	r2,-304(fp)
  829f44:	e0ffb117 	ldw	r3,-316(fp)
  829f48:	e0bfb217 	ldw	r2,-312(fp)
  829f4c:	1885c83a 	sub	r2,r3,r2
  829f50:	01428484 	movi	r5,2578
  829f54:	1009883a 	mov	r4,r2
  829f58:	08305040 	call	830504 <__mulsi3>
  829f5c:	e0bfb515 	stw	r2,-300(fp)
  829f60:	e0ffb417 	ldw	r3,-304(fp)
  829f64:	e0bfb517 	ldw	r2,-300(fp)
  829f68:	1887883a 	add	r3,r3,r2
  829f6c:	e0bfb017 	ldw	r2,-320(fp)
  829f70:	18a1883a 	add	r16,r3,r2
  829f74:	01714544 	movi	r5,-15083
  829f78:	e13fb217 	ldw	r4,-312(fp)
  829f7c:	08305040 	call	830504 <__mulsi3>
  829f80:	8085883a 	add	r2,r16,r2
  829f84:	e0bfb615 	stw	r2,-296(fp)
  829f88:	e0ffb117 	ldw	r3,-316(fp)
  829f8c:	e0bfb317 	ldw	r2,-308(fp)
  829f90:	1885883a 	add	r2,r3,r2
  829f94:	e0bfb715 	stw	r2,-292(fp)
  829f98:	e0ffb217 	ldw	r3,-312(fp)
  829f9c:	e0bfb717 	ldw	r2,-292(fp)
  829fa0:	1885c83a 	sub	r2,r3,r2
  829fa4:	e0bfb215 	stw	r2,-312(fp)
  829fa8:	014a3184 	movi	r5,10438
  829fac:	e13fb717 	ldw	r4,-292(fp)
  829fb0:	08305040 	call	830504 <__mulsi3>
  829fb4:	1007883a 	mov	r3,r2
  829fb8:	e0bfb017 	ldw	r2,-320(fp)
  829fbc:	1885883a 	add	r2,r3,r2
  829fc0:	e0bfb715 	stw	r2,-292(fp)
  829fc4:	017f60c4 	movi	r5,-637
  829fc8:	e13fb317 	ldw	r4,-308(fp)
  829fcc:	08305040 	call	830504 <__mulsi3>
  829fd0:	1007883a 	mov	r3,r2
  829fd4:	e0bfb717 	ldw	r2,-292(fp)
  829fd8:	1885883a 	add	r2,r3,r2
  829fdc:	e0ffb417 	ldw	r3,-304(fp)
  829fe0:	1885883a 	add	r2,r3,r2
  829fe4:	e0bfb415 	stw	r2,-304(fp)
  829fe8:	016c3c44 	movi	r5,-20239
  829fec:	e13fb117 	ldw	r4,-316(fp)
  829ff0:	08305040 	call	830504 <__mulsi3>
  829ff4:	1007883a 	mov	r3,r2
  829ff8:	e0bfb717 	ldw	r2,-292(fp)
  829ffc:	1885883a 	add	r2,r3,r2
  82a000:	e0ffb517 	ldw	r3,-300(fp)
  82a004:	1885883a 	add	r2,r3,r2
  82a008:	e0bfb515 	stw	r2,-300(fp)
  82a00c:	014b5044 	movi	r5,11585
  82a010:	e13fb217 	ldw	r4,-312(fp)
  82a014:	08305040 	call	830504 <__mulsi3>
  82a018:	1007883a 	mov	r3,r2
  82a01c:	e0bfb017 	ldw	r2,-320(fp)
  82a020:	10c5883a 	add	r2,r2,r3
  82a024:	e0bfb015 	stw	r2,-320(fp)
  82a028:	e0bfab17 	ldw	r2,-340(fp)
  82a02c:	10800404 	addi	r2,r2,16
  82a030:	1080000b 	ldhu	r2,0(r2)
  82a034:	10ffffcc 	andi	r3,r2,65535
  82a038:	18e0001c 	xori	r3,r3,32768
  82a03c:	18e00004 	addi	r3,r3,-32768
  82a040:	e0bfac17 	ldw	r2,-336(fp)
  82a044:	10800804 	addi	r2,r2,32
  82a048:	10800017 	ldw	r2,0(r2)
  82a04c:	100b883a 	mov	r5,r2
  82a050:	1809883a 	mov	r4,r3
  82a054:	08305040 	call	830504 <__mulsi3>
  82a058:	e0bfb115 	stw	r2,-316(fp)
  82a05c:	e0bfab17 	ldw	r2,-340(fp)
  82a060:	10800c04 	addi	r2,r2,48
  82a064:	1080000b 	ldhu	r2,0(r2)
  82a068:	10ffffcc 	andi	r3,r2,65535
  82a06c:	18e0001c 	xori	r3,r3,32768
  82a070:	18e00004 	addi	r3,r3,-32768
  82a074:	e0bfac17 	ldw	r2,-336(fp)
  82a078:	10801804 	addi	r2,r2,96
  82a07c:	10800017 	ldw	r2,0(r2)
  82a080:	100b883a 	mov	r5,r2
  82a084:	1809883a 	mov	r4,r3
  82a088:	08305040 	call	830504 <__mulsi3>
  82a08c:	e0bfb215 	stw	r2,-312(fp)
  82a090:	e0bfab17 	ldw	r2,-340(fp)
  82a094:	10801404 	addi	r2,r2,80
  82a098:	1080000b 	ldhu	r2,0(r2)
  82a09c:	10ffffcc 	andi	r3,r2,65535
  82a0a0:	18e0001c 	xori	r3,r3,32768
  82a0a4:	18e00004 	addi	r3,r3,-32768
  82a0a8:	e0bfac17 	ldw	r2,-336(fp)
  82a0ac:	10802804 	addi	r2,r2,160
  82a0b0:	10800017 	ldw	r2,0(r2)
  82a0b4:	100b883a 	mov	r5,r2
  82a0b8:	1809883a 	mov	r4,r3
  82a0bc:	08305040 	call	830504 <__mulsi3>
  82a0c0:	e0bfb315 	stw	r2,-308(fp)
  82a0c4:	e0ffb117 	ldw	r3,-316(fp)
  82a0c8:	e0bfb217 	ldw	r2,-312(fp)
  82a0cc:	1885883a 	add	r2,r3,r2
  82a0d0:	01477bc4 	movi	r5,7663
  82a0d4:	1009883a 	mov	r4,r2
  82a0d8:	08305040 	call	830504 <__mulsi3>
  82a0dc:	e0bfb815 	stw	r2,-288(fp)
  82a0e0:	e0ffb117 	ldw	r3,-316(fp)
  82a0e4:	e0bfb217 	ldw	r2,-312(fp)
  82a0e8:	1885c83a 	sub	r2,r3,r2
  82a0ec:	01415cc4 	movi	r5,1395
  82a0f0:	1009883a 	mov	r4,r2
  82a0f4:	08305040 	call	830504 <__mulsi3>
  82a0f8:	e0bfb915 	stw	r2,-284(fp)
  82a0fc:	e0ffb817 	ldw	r3,-288(fp)
  82a100:	e0bfb917 	ldw	r2,-284(fp)
  82a104:	1885c83a 	sub	r2,r3,r2
  82a108:	e0bfb715 	stw	r2,-292(fp)
  82a10c:	e0ffb817 	ldw	r3,-288(fp)
  82a110:	e0bfb917 	ldw	r2,-284(fp)
  82a114:	1885883a 	add	r2,r3,r2
  82a118:	e0bfb815 	stw	r2,-288(fp)
  82a11c:	e0ffb217 	ldw	r3,-312(fp)
  82a120:	e0bfb317 	ldw	r2,-308(fp)
  82a124:	1885883a 	add	r2,r3,r2
  82a128:	0174f844 	movi	r5,-11295
  82a12c:	1009883a 	mov	r4,r2
  82a130:	08305040 	call	830504 <__mulsi3>
  82a134:	e0bfb915 	stw	r2,-284(fp)
  82a138:	e0ffb817 	ldw	r3,-288(fp)
  82a13c:	e0bfb917 	ldw	r2,-284(fp)
  82a140:	1885883a 	add	r2,r3,r2
  82a144:	e0bfb815 	stw	r2,-288(fp)
  82a148:	e0ffb117 	ldw	r3,-316(fp)
  82a14c:	e0bfb317 	ldw	r2,-308(fp)
  82a150:	1885883a 	add	r2,r3,r2
  82a154:	0144e8c4 	movi	r5,5027
  82a158:	1009883a 	mov	r4,r2
  82a15c:	08305040 	call	830504 <__mulsi3>
  82a160:	e0bfb215 	stw	r2,-312(fp)
  82a164:	e0ffb717 	ldw	r3,-292(fp)
  82a168:	e0bfb217 	ldw	r2,-312(fp)
  82a16c:	1885883a 	add	r2,r3,r2
  82a170:	e0bfb715 	stw	r2,-292(fp)
  82a174:	014ef784 	movi	r5,15326
  82a178:	e13fb317 	ldw	r4,-308(fp)
  82a17c:	08305040 	call	830504 <__mulsi3>
  82a180:	1007883a 	mov	r3,r2
  82a184:	e0bfb217 	ldw	r2,-312(fp)
  82a188:	1885883a 	add	r2,r3,r2
  82a18c:	e0ffb917 	ldw	r3,-284(fp)
  82a190:	1885883a 	add	r2,r3,r2
  82a194:	e0bfb915 	stw	r2,-284(fp)
  82a198:	e0ffb417 	ldw	r3,-304(fp)
  82a19c:	e0bfb717 	ldw	r2,-292(fp)
  82a1a0:	1885883a 	add	r2,r3,r2
  82a1a4:	1007d2fa 	srai	r3,r2,11
  82a1a8:	e0bfad17 	ldw	r2,-332(fp)
  82a1ac:	10c00015 	stw	r3,0(r2)
  82a1b0:	e0bfad17 	ldw	r2,-332(fp)
  82a1b4:	10803004 	addi	r2,r2,192
  82a1b8:	e13fb417 	ldw	r4,-304(fp)
  82a1bc:	e0ffb717 	ldw	r3,-292(fp)
  82a1c0:	20c7c83a 	sub	r3,r4,r3
  82a1c4:	1807d2fa 	srai	r3,r3,11
  82a1c8:	10c00015 	stw	r3,0(r2)
  82a1cc:	e0bfad17 	ldw	r2,-332(fp)
  82a1d0:	10800804 	addi	r2,r2,32
  82a1d4:	e13fb617 	ldw	r4,-296(fp)
  82a1d8:	e0ffb817 	ldw	r3,-288(fp)
  82a1dc:	20c7883a 	add	r3,r4,r3
  82a1e0:	1807d2fa 	srai	r3,r3,11
  82a1e4:	10c00015 	stw	r3,0(r2)
  82a1e8:	e0bfad17 	ldw	r2,-332(fp)
  82a1ec:	10802804 	addi	r2,r2,160
  82a1f0:	e13fb617 	ldw	r4,-296(fp)
  82a1f4:	e0ffb817 	ldw	r3,-288(fp)
  82a1f8:	20c7c83a 	sub	r3,r4,r3
  82a1fc:	1807d2fa 	srai	r3,r3,11
  82a200:	10c00015 	stw	r3,0(r2)
  82a204:	e0bfad17 	ldw	r2,-332(fp)
  82a208:	10801004 	addi	r2,r2,64
  82a20c:	e13fb517 	ldw	r4,-300(fp)
  82a210:	e0ffb917 	ldw	r3,-284(fp)
  82a214:	20c7883a 	add	r3,r4,r3
  82a218:	1807d2fa 	srai	r3,r3,11
  82a21c:	10c00015 	stw	r3,0(r2)
  82a220:	e0bfad17 	ldw	r2,-332(fp)
  82a224:	10802004 	addi	r2,r2,128
  82a228:	e13fb517 	ldw	r4,-300(fp)
  82a22c:	e0ffb917 	ldw	r3,-284(fp)
  82a230:	20c7c83a 	sub	r3,r4,r3
  82a234:	1807d2fa 	srai	r3,r3,11
  82a238:	10c00015 	stw	r3,0(r2)
  82a23c:	e0bfad17 	ldw	r2,-332(fp)
  82a240:	10801804 	addi	r2,r2,96
  82a244:	e0ffb017 	ldw	r3,-320(fp)
  82a248:	1807d2fa 	srai	r3,r3,11
  82a24c:	10c00015 	stw	r3,0(r2)
  82a250:	e0bfae17 	ldw	r2,-328(fp)
  82a254:	10800044 	addi	r2,r2,1
  82a258:	e0bfae15 	stw	r2,-328(fp)
  82a25c:	e0bfab17 	ldw	r2,-340(fp)
  82a260:	10800084 	addi	r2,r2,2
  82a264:	e0bfab15 	stw	r2,-340(fp)
  82a268:	e0bfac17 	ldw	r2,-336(fp)
  82a26c:	10800104 	addi	r2,r2,4
  82a270:	e0bfac15 	stw	r2,-336(fp)
  82a274:	e0bfad17 	ldw	r2,-332(fp)
  82a278:	10800104 	addi	r2,r2,4
  82a27c:	e0bfad15 	stw	r2,-332(fp)
  82a280:	e0bfae17 	ldw	r2,-328(fp)
  82a284:	10800210 	cmplti	r2,r2,8
  82a288:	103eef1e 	bne	r2,zero,829e48 <__alt_mem_epcs_flash_controller_0+0xff820e48>
  82a28c:	e0bfc304 	addi	r2,fp,-244
  82a290:	e0bfad15 	stw	r2,-332(fp)
  82a294:	e03fae15 	stw	zero,-328(fp)
  82a298:	00019706 	br	82a8f8 <jpeg_idct_14x7+0xb08>
  82a29c:	e0bfae17 	ldw	r2,-328(fp)
  82a2a0:	1085883a 	add	r2,r2,r2
  82a2a4:	1085883a 	add	r2,r2,r2
  82a2a8:	1007883a 	mov	r3,r2
  82a2ac:	e0bffe17 	ldw	r2,-8(fp)
  82a2b0:	10c5883a 	add	r2,r2,r3
  82a2b4:	10c00017 	ldw	r3,0(r2)
  82a2b8:	e0800217 	ldw	r2,8(fp)
  82a2bc:	1885883a 	add	r2,r3,r2
  82a2c0:	e0bfba15 	stw	r2,-280(fp)
  82a2c4:	e0bfad17 	ldw	r2,-332(fp)
  82a2c8:	10800017 	ldw	r2,0(r2)
  82a2cc:	10900404 	addi	r2,r2,16400
  82a2d0:	e0bfb115 	stw	r2,-316(fp)
  82a2d4:	e0bfb117 	ldw	r2,-316(fp)
  82a2d8:	1004937a 	slli	r2,r2,13
  82a2dc:	e0bfb115 	stw	r2,-316(fp)
  82a2e0:	e0bfad17 	ldw	r2,-332(fp)
  82a2e4:	10800404 	addi	r2,r2,16
  82a2e8:	10800017 	ldw	r2,0(r2)
  82a2ec:	e0bfbb15 	stw	r2,-276(fp)
  82a2f0:	014a3184 	movi	r5,10438
  82a2f4:	e13fbb17 	ldw	r4,-276(fp)
  82a2f8:	08305040 	call	830504 <__mulsi3>
  82a2fc:	e0bfb215 	stw	r2,-312(fp)
  82a300:	01428484 	movi	r5,2578
  82a304:	e13fbb17 	ldw	r4,-276(fp)
  82a308:	08305040 	call	830504 <__mulsi3>
  82a30c:	e0bfb315 	stw	r2,-308(fp)
  82a310:	01470dc4 	movi	r5,7223
  82a314:	e13fbb17 	ldw	r4,-276(fp)
  82a318:	08305040 	call	830504 <__mulsi3>
  82a31c:	e0bfbb15 	stw	r2,-276(fp)
  82a320:	e0ffb117 	ldw	r3,-316(fp)
  82a324:	e0bfb217 	ldw	r2,-312(fp)
  82a328:	1885883a 	add	r2,r3,r2
  82a32c:	e0bfb715 	stw	r2,-292(fp)
  82a330:	e0ffb117 	ldw	r3,-316(fp)
  82a334:	e0bfb317 	ldw	r2,-308(fp)
  82a338:	1885883a 	add	r2,r3,r2
  82a33c:	e0bfb815 	stw	r2,-288(fp)
  82a340:	e0ffb117 	ldw	r3,-316(fp)
  82a344:	e0bfbb17 	ldw	r2,-276(fp)
  82a348:	1885c83a 	sub	r2,r3,r2
  82a34c:	e0bfb915 	stw	r2,-284(fp)
  82a350:	e0ffb217 	ldw	r3,-312(fp)
  82a354:	e0bfb317 	ldw	r2,-308(fp)
  82a358:	1887883a 	add	r3,r3,r2
  82a35c:	e0bfbb17 	ldw	r2,-276(fp)
  82a360:	1885c83a 	sub	r2,r3,r2
  82a364:	1085883a 	add	r2,r2,r2
  82a368:	1007883a 	mov	r3,r2
  82a36c:	e0bfb117 	ldw	r2,-316(fp)
  82a370:	10c5c83a 	sub	r2,r2,r3
  82a374:	e0bfb015 	stw	r2,-320(fp)
  82a378:	e0bfad17 	ldw	r2,-332(fp)
  82a37c:	10800204 	addi	r2,r2,8
  82a380:	10800017 	ldw	r2,0(r2)
  82a384:	e0bfb115 	stw	r2,-316(fp)
  82a388:	e0bfad17 	ldw	r2,-332(fp)
  82a38c:	10800604 	addi	r2,r2,24
  82a390:	10800017 	ldw	r2,0(r2)
  82a394:	e0bfb215 	stw	r2,-312(fp)
  82a398:	e0ffb117 	ldw	r3,-316(fp)
  82a39c:	e0bfb217 	ldw	r2,-312(fp)
  82a3a0:	1885883a 	add	r2,r3,r2
  82a3a4:	0148d884 	movi	r5,9058
  82a3a8:	1009883a 	mov	r4,r2
  82a3ac:	08305040 	call	830504 <__mulsi3>
  82a3b0:	e0bfb315 	stw	r2,-308(fp)
  82a3b4:	01422f44 	movi	r5,2237
  82a3b8:	e13fb117 	ldw	r4,-316(fp)
  82a3bc:	08305040 	call	830504 <__mulsi3>
  82a3c0:	1007883a 	mov	r3,r2
  82a3c4:	e0bfb317 	ldw	r2,-308(fp)
  82a3c8:	1885883a 	add	r2,r3,r2
  82a3cc:	e0bfbc15 	stw	r2,-272(fp)
  82a3d0:	01723f04 	movi	r5,-14084
  82a3d4:	e13fb217 	ldw	r4,-312(fp)
  82a3d8:	08305040 	call	830504 <__mulsi3>
  82a3dc:	1007883a 	mov	r3,r2
  82a3e0:	e0bfb317 	ldw	r2,-308(fp)
  82a3e4:	1885883a 	add	r2,r3,r2
  82a3e8:	e0bfbd15 	stw	r2,-268(fp)
  82a3ec:	0144e8c4 	movi	r5,5027
  82a3f0:	e13fb117 	ldw	r4,-316(fp)
  82a3f4:	08305040 	call	830504 <__mulsi3>
  82a3f8:	1021883a 	mov	r16,r2
  82a3fc:	0174f844 	movi	r5,-11295
  82a400:	e13fb217 	ldw	r4,-312(fp)
  82a404:	08305040 	call	830504 <__mulsi3>
  82a408:	8085883a 	add	r2,r16,r2
  82a40c:	e0bfbe15 	stw	r2,-264(fp)
  82a410:	e0ffb717 	ldw	r3,-292(fp)
  82a414:	e0bfbc17 	ldw	r2,-272(fp)
  82a418:	1885883a 	add	r2,r3,r2
  82a41c:	e0bfb415 	stw	r2,-304(fp)
  82a420:	e0ffb717 	ldw	r3,-292(fp)
  82a424:	e0bfbc17 	ldw	r2,-272(fp)
  82a428:	1885c83a 	sub	r2,r3,r2
  82a42c:	e0bfbf15 	stw	r2,-260(fp)
  82a430:	e0ffb817 	ldw	r3,-288(fp)
  82a434:	e0bfbd17 	ldw	r2,-268(fp)
  82a438:	1885883a 	add	r2,r3,r2
  82a43c:	e0bfb615 	stw	r2,-296(fp)
  82a440:	e0ffb817 	ldw	r3,-288(fp)
  82a444:	e0bfbd17 	ldw	r2,-268(fp)
  82a448:	1885c83a 	sub	r2,r3,r2
  82a44c:	e0bfc015 	stw	r2,-256(fp)
  82a450:	e0ffb917 	ldw	r3,-284(fp)
  82a454:	e0bfbe17 	ldw	r2,-264(fp)
  82a458:	1885883a 	add	r2,r3,r2
  82a45c:	e0bfb515 	stw	r2,-300(fp)
  82a460:	e0ffb917 	ldw	r3,-284(fp)
  82a464:	e0bfbe17 	ldw	r2,-264(fp)
  82a468:	1885c83a 	sub	r2,r3,r2
  82a46c:	e0bfc115 	stw	r2,-252(fp)
  82a470:	e0bfad17 	ldw	r2,-332(fp)
  82a474:	10800104 	addi	r2,r2,4
  82a478:	10800017 	ldw	r2,0(r2)
  82a47c:	e0bfb115 	stw	r2,-316(fp)
  82a480:	e0bfad17 	ldw	r2,-332(fp)
  82a484:	10800304 	addi	r2,r2,12
  82a488:	10800017 	ldw	r2,0(r2)
  82a48c:	e0bfb215 	stw	r2,-312(fp)
  82a490:	e0bfad17 	ldw	r2,-332(fp)
  82a494:	10800504 	addi	r2,r2,20
  82a498:	10800017 	ldw	r2,0(r2)
  82a49c:	e0bfb315 	stw	r2,-308(fp)
  82a4a0:	e0bfad17 	ldw	r2,-332(fp)
  82a4a4:	10800704 	addi	r2,r2,28
  82a4a8:	10800017 	ldw	r2,0(r2)
  82a4ac:	e0bfbb15 	stw	r2,-276(fp)
  82a4b0:	e0bfbb17 	ldw	r2,-276(fp)
  82a4b4:	1004937a 	slli	r2,r2,13
  82a4b8:	e0bfbb15 	stw	r2,-276(fp)
  82a4bc:	e0ffb117 	ldw	r3,-316(fp)
  82a4c0:	e0bfb317 	ldw	r2,-308(fp)
  82a4c4:	1885883a 	add	r2,r3,r2
  82a4c8:	e0bfbd15 	stw	r2,-268(fp)
  82a4cc:	e0ffb117 	ldw	r3,-316(fp)
  82a4d0:	e0bfb217 	ldw	r2,-312(fp)
  82a4d4:	1885883a 	add	r2,r3,r2
  82a4d8:	014aadc4 	movi	r5,10935
  82a4dc:	1009883a 	mov	r4,r2
  82a4e0:	08305040 	call	830504 <__mulsi3>
  82a4e4:	e0bfb815 	stw	r2,-288(fp)
  82a4e8:	01499484 	movi	r5,9810
  82a4ec:	e13fbd17 	ldw	r4,-268(fp)
  82a4f0:	08305040 	call	830504 <__mulsi3>
  82a4f4:	e0bfb915 	stw	r2,-284(fp)
  82a4f8:	e0ffb817 	ldw	r3,-288(fp)
  82a4fc:	e0bfb917 	ldw	r2,-284(fp)
  82a500:	1887883a 	add	r3,r3,r2
  82a504:	e0bfbb17 	ldw	r2,-276(fp)
  82a508:	18a1883a 	add	r16,r3,r2
  82a50c:	0176fc04 	movi	r5,-9232
  82a510:	e13fb117 	ldw	r4,-316(fp)
  82a514:	08305040 	call	830504 <__mulsi3>
  82a518:	8085883a 	add	r2,r16,r2
  82a51c:	e0bfb715 	stw	r2,-292(fp)
  82a520:	01460504 	movi	r5,6164
  82a524:	e13fbd17 	ldw	r4,-268(fp)
  82a528:	08305040 	call	830504 <__mulsi3>
  82a52c:	e0bfbd15 	stw	r2,-268(fp)
  82a530:	017782c4 	movi	r5,-8693
  82a534:	e13fb117 	ldw	r4,-316(fp)
  82a538:	08305040 	call	830504 <__mulsi3>
  82a53c:	1007883a 	mov	r3,r2
  82a540:	e0bfbd17 	ldw	r2,-268(fp)
  82a544:	1885883a 	add	r2,r3,r2
  82a548:	e0bfc215 	stw	r2,-248(fp)
  82a54c:	e0ffb117 	ldw	r3,-316(fp)
  82a550:	e0bfb217 	ldw	r2,-312(fp)
  82a554:	1885c83a 	sub	r2,r3,r2
  82a558:	e0bfb115 	stw	r2,-316(fp)
  82a55c:	0143bc84 	movi	r5,3826
  82a560:	e13fb117 	ldw	r4,-316(fp)
  82a564:	08305040 	call	830504 <__mulsi3>
  82a568:	1007883a 	mov	r3,r2
  82a56c:	e0bfbb17 	ldw	r2,-276(fp)
  82a570:	1885c83a 	sub	r2,r3,r2
  82a574:	e0bfbe15 	stw	r2,-264(fp)
  82a578:	e0ffc217 	ldw	r3,-248(fp)
  82a57c:	e0bfbe17 	ldw	r2,-264(fp)
  82a580:	1885883a 	add	r2,r3,r2
  82a584:	e0bfc215 	stw	r2,-248(fp)
  82a588:	e0ffb217 	ldw	r3,-312(fp)
  82a58c:	e0bfb317 	ldw	r2,-308(fp)
  82a590:	1885883a 	add	r2,r3,r2
  82a594:	017ebbc4 	movi	r5,-1297
  82a598:	1009883a 	mov	r4,r2
  82a59c:	08305040 	call	830504 <__mulsi3>
  82a5a0:	1007883a 	mov	r3,r2
  82a5a4:	e0bfbb17 	ldw	r2,-276(fp)
  82a5a8:	1885c83a 	sub	r2,r3,r2
  82a5ac:	e0bfbc15 	stw	r2,-272(fp)
  82a5b0:	017c9b84 	movi	r5,-3474
  82a5b4:	e13fb217 	ldw	r4,-312(fp)
  82a5b8:	08305040 	call	830504 <__mulsi3>
  82a5bc:	1007883a 	mov	r3,r2
  82a5c0:	e0bfbc17 	ldw	r2,-272(fp)
  82a5c4:	1885883a 	add	r2,r3,r2
  82a5c8:	e0ffb817 	ldw	r3,-288(fp)
  82a5cc:	1885883a 	add	r2,r3,r2
  82a5d0:	e0bfb815 	stw	r2,-288(fp)
  82a5d4:	016d0244 	movi	r5,-19447
  82a5d8:	e13fb317 	ldw	r4,-308(fp)
  82a5dc:	08305040 	call	830504 <__mulsi3>
  82a5e0:	1007883a 	mov	r3,r2
  82a5e4:	e0bfbc17 	ldw	r2,-272(fp)
  82a5e8:	1885883a 	add	r2,r3,r2
  82a5ec:	e0ffb917 	ldw	r3,-284(fp)
  82a5f0:	1885883a 	add	r2,r3,r2
  82a5f4:	e0bfb915 	stw	r2,-284(fp)
  82a5f8:	e0ffb317 	ldw	r3,-308(fp)
  82a5fc:	e0bfb217 	ldw	r2,-312(fp)
  82a600:	1885c83a 	sub	r2,r3,r2
  82a604:	014b3e04 	movi	r5,11512
  82a608:	1009883a 	mov	r4,r2
  82a60c:	08305040 	call	830504 <__mulsi3>
  82a610:	e0bfbc15 	stw	r2,-272(fp)
  82a614:	e0ffbc17 	ldw	r3,-272(fp)
  82a618:	e0bfbb17 	ldw	r2,-276(fp)
  82a61c:	18a1883a 	add	r16,r3,r2
  82a620:	01727984 	movi	r5,-13850
  82a624:	e13fb317 	ldw	r4,-308(fp)
  82a628:	08305040 	call	830504 <__mulsi3>
  82a62c:	8085883a 	add	r2,r16,r2
  82a630:	e0ffbd17 	ldw	r3,-268(fp)
  82a634:	1885883a 	add	r2,r3,r2
  82a638:	e0bfbd15 	stw	r2,-268(fp)
  82a63c:	01456644 	movi	r5,5529
  82a640:	e13fb217 	ldw	r4,-312(fp)
  82a644:	08305040 	call	830504 <__mulsi3>
  82a648:	1007883a 	mov	r3,r2
  82a64c:	e0bfbc17 	ldw	r2,-272(fp)
  82a650:	1885883a 	add	r2,r3,r2
  82a654:	e0ffbe17 	ldw	r3,-264(fp)
  82a658:	1885883a 	add	r2,r3,r2
  82a65c:	e0bfbe15 	stw	r2,-264(fp)
  82a660:	e0ffb117 	ldw	r3,-316(fp)
  82a664:	e0bfb317 	ldw	r2,-308(fp)
  82a668:	1885c83a 	sub	r2,r3,r2
  82a66c:	1006937a 	slli	r3,r2,13
  82a670:	e0bfbb17 	ldw	r2,-276(fp)
  82a674:	1885883a 	add	r2,r3,r2
  82a678:	e0bfbc15 	stw	r2,-272(fp)
  82a67c:	e0ffb417 	ldw	r3,-304(fp)
  82a680:	e0bfb717 	ldw	r2,-292(fp)
  82a684:	1885883a 	add	r2,r3,r2
  82a688:	1005d4ba 	srai	r2,r2,18
  82a68c:	1080ffcc 	andi	r2,r2,1023
  82a690:	e0ffaf17 	ldw	r3,-324(fp)
  82a694:	1885883a 	add	r2,r3,r2
  82a698:	10c00003 	ldbu	r3,0(r2)
  82a69c:	e0bfba17 	ldw	r2,-280(fp)
  82a6a0:	10c00005 	stb	r3,0(r2)
  82a6a4:	e0bfba17 	ldw	r2,-280(fp)
  82a6a8:	10800344 	addi	r2,r2,13
  82a6ac:	e13fb417 	ldw	r4,-304(fp)
  82a6b0:	e0ffb717 	ldw	r3,-292(fp)
  82a6b4:	20c7c83a 	sub	r3,r4,r3
  82a6b8:	1807d4ba 	srai	r3,r3,18
  82a6bc:	18c0ffcc 	andi	r3,r3,1023
  82a6c0:	e13faf17 	ldw	r4,-324(fp)
  82a6c4:	20c7883a 	add	r3,r4,r3
  82a6c8:	18c00003 	ldbu	r3,0(r3)
  82a6cc:	10c00005 	stb	r3,0(r2)
  82a6d0:	e0bfba17 	ldw	r2,-280(fp)
  82a6d4:	10800044 	addi	r2,r2,1
  82a6d8:	e13fb617 	ldw	r4,-296(fp)
  82a6dc:	e0ffb817 	ldw	r3,-288(fp)
  82a6e0:	20c7883a 	add	r3,r4,r3
  82a6e4:	1807d4ba 	srai	r3,r3,18
  82a6e8:	18c0ffcc 	andi	r3,r3,1023
  82a6ec:	e13faf17 	ldw	r4,-324(fp)
  82a6f0:	20c7883a 	add	r3,r4,r3
  82a6f4:	18c00003 	ldbu	r3,0(r3)
  82a6f8:	10c00005 	stb	r3,0(r2)
  82a6fc:	e0bfba17 	ldw	r2,-280(fp)
  82a700:	10800304 	addi	r2,r2,12
  82a704:	e13fb617 	ldw	r4,-296(fp)
  82a708:	e0ffb817 	ldw	r3,-288(fp)
  82a70c:	20c7c83a 	sub	r3,r4,r3
  82a710:	1807d4ba 	srai	r3,r3,18
  82a714:	18c0ffcc 	andi	r3,r3,1023
  82a718:	e13faf17 	ldw	r4,-324(fp)
  82a71c:	20c7883a 	add	r3,r4,r3
  82a720:	18c00003 	ldbu	r3,0(r3)
  82a724:	10c00005 	stb	r3,0(r2)
  82a728:	e0bfba17 	ldw	r2,-280(fp)
  82a72c:	10800084 	addi	r2,r2,2
  82a730:	e13fb517 	ldw	r4,-300(fp)
  82a734:	e0ffb917 	ldw	r3,-284(fp)
  82a738:	20c7883a 	add	r3,r4,r3
  82a73c:	1807d4ba 	srai	r3,r3,18
  82a740:	18c0ffcc 	andi	r3,r3,1023
  82a744:	e13faf17 	ldw	r4,-324(fp)
  82a748:	20c7883a 	add	r3,r4,r3
  82a74c:	18c00003 	ldbu	r3,0(r3)
  82a750:	10c00005 	stb	r3,0(r2)
  82a754:	e0bfba17 	ldw	r2,-280(fp)
  82a758:	108002c4 	addi	r2,r2,11
  82a75c:	e13fb517 	ldw	r4,-300(fp)
  82a760:	e0ffb917 	ldw	r3,-284(fp)
  82a764:	20c7c83a 	sub	r3,r4,r3
  82a768:	1807d4ba 	srai	r3,r3,18
  82a76c:	18c0ffcc 	andi	r3,r3,1023
  82a770:	e13faf17 	ldw	r4,-324(fp)
  82a774:	20c7883a 	add	r3,r4,r3
  82a778:	18c00003 	ldbu	r3,0(r3)
  82a77c:	10c00005 	stb	r3,0(r2)
  82a780:	e0bfba17 	ldw	r2,-280(fp)
  82a784:	108000c4 	addi	r2,r2,3
  82a788:	e13fb017 	ldw	r4,-320(fp)
  82a78c:	e0ffbc17 	ldw	r3,-272(fp)
  82a790:	20c7883a 	add	r3,r4,r3
  82a794:	1807d4ba 	srai	r3,r3,18
  82a798:	18c0ffcc 	andi	r3,r3,1023
  82a79c:	e13faf17 	ldw	r4,-324(fp)
  82a7a0:	20c7883a 	add	r3,r4,r3
  82a7a4:	18c00003 	ldbu	r3,0(r3)
  82a7a8:	10c00005 	stb	r3,0(r2)
  82a7ac:	e0bfba17 	ldw	r2,-280(fp)
  82a7b0:	10800284 	addi	r2,r2,10
  82a7b4:	e13fb017 	ldw	r4,-320(fp)
  82a7b8:	e0ffbc17 	ldw	r3,-272(fp)
  82a7bc:	20c7c83a 	sub	r3,r4,r3
  82a7c0:	1807d4ba 	srai	r3,r3,18
  82a7c4:	18c0ffcc 	andi	r3,r3,1023
  82a7c8:	e13faf17 	ldw	r4,-324(fp)
  82a7cc:	20c7883a 	add	r3,r4,r3
  82a7d0:	18c00003 	ldbu	r3,0(r3)
  82a7d4:	10c00005 	stb	r3,0(r2)
  82a7d8:	e0bfba17 	ldw	r2,-280(fp)
  82a7dc:	10800104 	addi	r2,r2,4
  82a7e0:	e13fc117 	ldw	r4,-252(fp)
  82a7e4:	e0ffbd17 	ldw	r3,-268(fp)
  82a7e8:	20c7883a 	add	r3,r4,r3
  82a7ec:	1807d4ba 	srai	r3,r3,18
  82a7f0:	18c0ffcc 	andi	r3,r3,1023
  82a7f4:	e13faf17 	ldw	r4,-324(fp)
  82a7f8:	20c7883a 	add	r3,r4,r3
  82a7fc:	18c00003 	ldbu	r3,0(r3)
  82a800:	10c00005 	stb	r3,0(r2)
  82a804:	e0bfba17 	ldw	r2,-280(fp)
  82a808:	10800244 	addi	r2,r2,9
  82a80c:	e13fc117 	ldw	r4,-252(fp)
  82a810:	e0ffbd17 	ldw	r3,-268(fp)
  82a814:	20c7c83a 	sub	r3,r4,r3
  82a818:	1807d4ba 	srai	r3,r3,18
  82a81c:	18c0ffcc 	andi	r3,r3,1023
  82a820:	e13faf17 	ldw	r4,-324(fp)
  82a824:	20c7883a 	add	r3,r4,r3
  82a828:	18c00003 	ldbu	r3,0(r3)
  82a82c:	10c00005 	stb	r3,0(r2)
  82a830:	e0bfba17 	ldw	r2,-280(fp)
  82a834:	10800144 	addi	r2,r2,5
  82a838:	e13fc017 	ldw	r4,-256(fp)
  82a83c:	e0ffbe17 	ldw	r3,-264(fp)
  82a840:	20c7883a 	add	r3,r4,r3
  82a844:	1807d4ba 	srai	r3,r3,18
  82a848:	18c0ffcc 	andi	r3,r3,1023
  82a84c:	e13faf17 	ldw	r4,-324(fp)
  82a850:	20c7883a 	add	r3,r4,r3
  82a854:	18c00003 	ldbu	r3,0(r3)
  82a858:	10c00005 	stb	r3,0(r2)
  82a85c:	e0bfba17 	ldw	r2,-280(fp)
  82a860:	10800204 	addi	r2,r2,8
  82a864:	e13fc017 	ldw	r4,-256(fp)
  82a868:	e0ffbe17 	ldw	r3,-264(fp)
  82a86c:	20c7c83a 	sub	r3,r4,r3
  82a870:	1807d4ba 	srai	r3,r3,18
  82a874:	18c0ffcc 	andi	r3,r3,1023
  82a878:	e13faf17 	ldw	r4,-324(fp)
  82a87c:	20c7883a 	add	r3,r4,r3
  82a880:	18c00003 	ldbu	r3,0(r3)
  82a884:	10c00005 	stb	r3,0(r2)
  82a888:	e0bfba17 	ldw	r2,-280(fp)
  82a88c:	10800184 	addi	r2,r2,6
  82a890:	e13fbf17 	ldw	r4,-260(fp)
  82a894:	e0ffc217 	ldw	r3,-248(fp)
  82a898:	20c7883a 	add	r3,r4,r3
  82a89c:	1807d4ba 	srai	r3,r3,18
  82a8a0:	18c0ffcc 	andi	r3,r3,1023
  82a8a4:	e13faf17 	ldw	r4,-324(fp)
  82a8a8:	20c7883a 	add	r3,r4,r3
  82a8ac:	18c00003 	ldbu	r3,0(r3)
  82a8b0:	10c00005 	stb	r3,0(r2)
  82a8b4:	e0bfba17 	ldw	r2,-280(fp)
  82a8b8:	108001c4 	addi	r2,r2,7
  82a8bc:	e13fbf17 	ldw	r4,-260(fp)
  82a8c0:	e0ffc217 	ldw	r3,-248(fp)
  82a8c4:	20c7c83a 	sub	r3,r4,r3
  82a8c8:	1807d4ba 	srai	r3,r3,18
  82a8cc:	18c0ffcc 	andi	r3,r3,1023
  82a8d0:	e13faf17 	ldw	r4,-324(fp)
  82a8d4:	20c7883a 	add	r3,r4,r3
  82a8d8:	18c00003 	ldbu	r3,0(r3)
  82a8dc:	10c00005 	stb	r3,0(r2)
  82a8e0:	e0bfad17 	ldw	r2,-332(fp)
  82a8e4:	10800804 	addi	r2,r2,32
  82a8e8:	e0bfad15 	stw	r2,-332(fp)
  82a8ec:	e0bfae17 	ldw	r2,-328(fp)
  82a8f0:	10800044 	addi	r2,r2,1
  82a8f4:	e0bfae15 	stw	r2,-328(fp)
  82a8f8:	e0bfae17 	ldw	r2,-328(fp)
  82a8fc:	108001d0 	cmplti	r2,r2,7
  82a900:	103e661e 	bne	r2,zero,82a29c <__alt_mem_epcs_flash_controller_0+0xff82129c>
  82a904:	0001883a 	nop
  82a908:	e6ffff04 	addi	sp,fp,-4
  82a90c:	dfc00217 	ldw	ra,8(sp)
  82a910:	df000117 	ldw	fp,4(sp)
  82a914:	dc000017 	ldw	r16,0(sp)
  82a918:	dec00304 	addi	sp,sp,12
  82a91c:	f800283a 	ret

0082a920 <jpeg_idct_12x6>:
  82a920:	deffb304 	addi	sp,sp,-308
  82a924:	dfc04c15 	stw	ra,304(sp)
  82a928:	df004b15 	stw	fp,300(sp)
  82a92c:	dc004a15 	stw	r16,296(sp)
  82a930:	df004b04 	addi	fp,sp,300
  82a934:	e13ffb15 	stw	r4,-20(fp)
  82a938:	e17ffc15 	stw	r5,-16(fp)
  82a93c:	e1bffd15 	stw	r6,-12(fp)
  82a940:	e1fffe15 	stw	r7,-8(fp)
  82a944:	e0bffb17 	ldw	r2,-20(fp)
  82a948:	10805417 	ldw	r2,336(r2)
  82a94c:	10bfa004 	addi	r2,r2,-384
  82a950:	e0bfb915 	stw	r2,-284(fp)
  82a954:	e0bffd17 	ldw	r2,-12(fp)
  82a958:	e0bfb515 	stw	r2,-300(fp)
  82a95c:	e0bffc17 	ldw	r2,-16(fp)
  82a960:	10801517 	ldw	r2,84(r2)
  82a964:	e0bfb615 	stw	r2,-296(fp)
  82a968:	e0bfcb04 	addi	r2,fp,-212
  82a96c:	e0bfb715 	stw	r2,-292(fp)
  82a970:	e03fb815 	stw	zero,-288(fp)
  82a974:	0000bd06 	br	82ac6c <jpeg_idct_12x6+0x34c>
  82a978:	e0bfb517 	ldw	r2,-300(fp)
  82a97c:	1080000b 	ldhu	r2,0(r2)
  82a980:	10ffffcc 	andi	r3,r2,65535
  82a984:	18e0001c 	xori	r3,r3,32768
  82a988:	18e00004 	addi	r3,r3,-32768
  82a98c:	e0bfb617 	ldw	r2,-296(fp)
  82a990:	10800017 	ldw	r2,0(r2)
  82a994:	100b883a 	mov	r5,r2
  82a998:	1809883a 	mov	r4,r3
  82a99c:	08305040 	call	830504 <__mulsi3>
  82a9a0:	e0bfba15 	stw	r2,-280(fp)
  82a9a4:	e0bfba17 	ldw	r2,-280(fp)
  82a9a8:	1004937a 	slli	r2,r2,13
  82a9ac:	e0bfba15 	stw	r2,-280(fp)
  82a9b0:	e0bfba17 	ldw	r2,-280(fp)
  82a9b4:	10810004 	addi	r2,r2,1024
  82a9b8:	e0bfba15 	stw	r2,-280(fp)
  82a9bc:	e0bfb517 	ldw	r2,-300(fp)
  82a9c0:	10801004 	addi	r2,r2,64
  82a9c4:	1080000b 	ldhu	r2,0(r2)
  82a9c8:	10ffffcc 	andi	r3,r2,65535
  82a9cc:	18e0001c 	xori	r3,r3,32768
  82a9d0:	18e00004 	addi	r3,r3,-32768
  82a9d4:	e0bfb617 	ldw	r2,-296(fp)
  82a9d8:	10802004 	addi	r2,r2,128
  82a9dc:	10800017 	ldw	r2,0(r2)
  82a9e0:	100b883a 	mov	r5,r2
  82a9e4:	1809883a 	mov	r4,r3
  82a9e8:	08305040 	call	830504 <__mulsi3>
  82a9ec:	e0bfbb15 	stw	r2,-276(fp)
  82a9f0:	0145a844 	movi	r5,5793
  82a9f4:	e13fbb17 	ldw	r4,-276(fp)
  82a9f8:	08305040 	call	830504 <__mulsi3>
  82a9fc:	e0bfbc15 	stw	r2,-272(fp)
  82aa00:	e0ffba17 	ldw	r3,-280(fp)
  82aa04:	e0bfbc17 	ldw	r2,-272(fp)
  82aa08:	1885883a 	add	r2,r3,r2
  82aa0c:	e0bfbd15 	stw	r2,-268(fp)
  82aa10:	e0ffba17 	ldw	r3,-280(fp)
  82aa14:	e0bfbc17 	ldw	r2,-272(fp)
  82aa18:	1887c83a 	sub	r3,r3,r2
  82aa1c:	e0bfbc17 	ldw	r2,-272(fp)
  82aa20:	1885c83a 	sub	r2,r3,r2
  82aa24:	1005d2fa 	srai	r2,r2,11
  82aa28:	e0bfbe15 	stw	r2,-264(fp)
  82aa2c:	e0bfb517 	ldw	r2,-300(fp)
  82aa30:	10800804 	addi	r2,r2,32
  82aa34:	1080000b 	ldhu	r2,0(r2)
  82aa38:	10ffffcc 	andi	r3,r2,65535
  82aa3c:	18e0001c 	xori	r3,r3,32768
  82aa40:	18e00004 	addi	r3,r3,-32768
  82aa44:	e0bfb617 	ldw	r2,-296(fp)
  82aa48:	10801004 	addi	r2,r2,64
  82aa4c:	10800017 	ldw	r2,0(r2)
  82aa50:	100b883a 	mov	r5,r2
  82aa54:	1809883a 	mov	r4,r3
  82aa58:	08305040 	call	830504 <__mulsi3>
  82aa5c:	e0bfbc15 	stw	r2,-272(fp)
  82aa60:	0149cc44 	movi	r5,10033
  82aa64:	e13fbc17 	ldw	r4,-272(fp)
  82aa68:	08305040 	call	830504 <__mulsi3>
  82aa6c:	e0bfba15 	stw	r2,-280(fp)
  82aa70:	e0ffbd17 	ldw	r3,-268(fp)
  82aa74:	e0bfba17 	ldw	r2,-280(fp)
  82aa78:	1885883a 	add	r2,r3,r2
  82aa7c:	e0bfbc15 	stw	r2,-272(fp)
  82aa80:	e0ffbd17 	ldw	r3,-268(fp)
  82aa84:	e0bfba17 	ldw	r2,-280(fp)
  82aa88:	1885c83a 	sub	r2,r3,r2
  82aa8c:	e0bfbf15 	stw	r2,-260(fp)
  82aa90:	e0bfb517 	ldw	r2,-300(fp)
  82aa94:	10800404 	addi	r2,r2,16
  82aa98:	1080000b 	ldhu	r2,0(r2)
  82aa9c:	10ffffcc 	andi	r3,r2,65535
  82aaa0:	18e0001c 	xori	r3,r3,32768
  82aaa4:	18e00004 	addi	r3,r3,-32768
  82aaa8:	e0bfb617 	ldw	r2,-296(fp)
  82aaac:	10800804 	addi	r2,r2,32
  82aab0:	10800017 	ldw	r2,0(r2)
  82aab4:	100b883a 	mov	r5,r2
  82aab8:	1809883a 	mov	r4,r3
  82aabc:	08305040 	call	830504 <__mulsi3>
  82aac0:	e0bfc015 	stw	r2,-256(fp)
  82aac4:	e0bfb517 	ldw	r2,-300(fp)
  82aac8:	10800c04 	addi	r2,r2,48
  82aacc:	1080000b 	ldhu	r2,0(r2)
  82aad0:	10ffffcc 	andi	r3,r2,65535
  82aad4:	18e0001c 	xori	r3,r3,32768
  82aad8:	18e00004 	addi	r3,r3,-32768
  82aadc:	e0bfb617 	ldw	r2,-296(fp)
  82aae0:	10801804 	addi	r2,r2,96
  82aae4:	10800017 	ldw	r2,0(r2)
  82aae8:	100b883a 	mov	r5,r2
  82aaec:	1809883a 	mov	r4,r3
  82aaf0:	08305040 	call	830504 <__mulsi3>
  82aaf4:	e0bfc115 	stw	r2,-252(fp)
  82aaf8:	e0bfb517 	ldw	r2,-300(fp)
  82aafc:	10801404 	addi	r2,r2,80
  82ab00:	1080000b 	ldhu	r2,0(r2)
  82ab04:	10ffffcc 	andi	r3,r2,65535
  82ab08:	18e0001c 	xori	r3,r3,32768
  82ab0c:	18e00004 	addi	r3,r3,-32768
  82ab10:	e0bfb617 	ldw	r2,-296(fp)
  82ab14:	10802804 	addi	r2,r2,160
  82ab18:	10800017 	ldw	r2,0(r2)
  82ab1c:	100b883a 	mov	r5,r2
  82ab20:	1809883a 	mov	r4,r3
  82ab24:	08305040 	call	830504 <__mulsi3>
  82ab28:	e0bfc215 	stw	r2,-248(fp)
  82ab2c:	e0ffc017 	ldw	r3,-256(fp)
  82ab30:	e0bfc217 	ldw	r2,-248(fp)
  82ab34:	1885883a 	add	r2,r3,r2
  82ab38:	0142ed84 	movi	r5,2998
  82ab3c:	1009883a 	mov	r4,r2
  82ab40:	08305040 	call	830504 <__mulsi3>
  82ab44:	e0bfbd15 	stw	r2,-268(fp)
  82ab48:	e0ffc017 	ldw	r3,-256(fp)
  82ab4c:	e0bfc117 	ldw	r2,-252(fp)
  82ab50:	1885883a 	add	r2,r3,r2
  82ab54:	1006937a 	slli	r3,r2,13
  82ab58:	e0bfbd17 	ldw	r2,-268(fp)
  82ab5c:	1885883a 	add	r2,r3,r2
  82ab60:	e0bfba15 	stw	r2,-280(fp)
  82ab64:	e0ffc217 	ldw	r3,-248(fp)
  82ab68:	e0bfc117 	ldw	r2,-252(fp)
  82ab6c:	1885c83a 	sub	r2,r3,r2
  82ab70:	1006937a 	slli	r3,r2,13
  82ab74:	e0bfbd17 	ldw	r2,-268(fp)
  82ab78:	1885883a 	add	r2,r3,r2
  82ab7c:	e0bfbb15 	stw	r2,-276(fp)
  82ab80:	e0ffc017 	ldw	r3,-256(fp)
  82ab84:	e0bfc117 	ldw	r2,-252(fp)
  82ab88:	1887c83a 	sub	r3,r3,r2
  82ab8c:	e0bfc217 	ldw	r2,-248(fp)
  82ab90:	1885c83a 	sub	r2,r3,r2
  82ab94:	1085883a 	add	r2,r2,r2
  82ab98:	1085883a 	add	r2,r2,r2
  82ab9c:	e0bfbd15 	stw	r2,-268(fp)
  82aba0:	e0ffbc17 	ldw	r3,-272(fp)
  82aba4:	e0bfba17 	ldw	r2,-280(fp)
  82aba8:	1885883a 	add	r2,r3,r2
  82abac:	1007d2fa 	srai	r3,r2,11
  82abb0:	e0bfb717 	ldw	r2,-292(fp)
  82abb4:	10c00015 	stw	r3,0(r2)
  82abb8:	e0bfb717 	ldw	r2,-292(fp)
  82abbc:	10802804 	addi	r2,r2,160
  82abc0:	e13fbc17 	ldw	r4,-272(fp)
  82abc4:	e0ffba17 	ldw	r3,-280(fp)
  82abc8:	20c7c83a 	sub	r3,r4,r3
  82abcc:	1807d2fa 	srai	r3,r3,11
  82abd0:	10c00015 	stw	r3,0(r2)
  82abd4:	e0bfb717 	ldw	r2,-292(fp)
  82abd8:	10800804 	addi	r2,r2,32
  82abdc:	e13fbe17 	ldw	r4,-264(fp)
  82abe0:	e0ffbd17 	ldw	r3,-268(fp)
  82abe4:	20c7883a 	add	r3,r4,r3
  82abe8:	10c00015 	stw	r3,0(r2)
  82abec:	e0bfb717 	ldw	r2,-292(fp)
  82abf0:	10802004 	addi	r2,r2,128
  82abf4:	e13fbe17 	ldw	r4,-264(fp)
  82abf8:	e0ffbd17 	ldw	r3,-268(fp)
  82abfc:	20c7c83a 	sub	r3,r4,r3
  82ac00:	10c00015 	stw	r3,0(r2)
  82ac04:	e0bfb717 	ldw	r2,-292(fp)
  82ac08:	10801004 	addi	r2,r2,64
  82ac0c:	e13fbf17 	ldw	r4,-260(fp)
  82ac10:	e0ffbb17 	ldw	r3,-276(fp)
  82ac14:	20c7883a 	add	r3,r4,r3
  82ac18:	1807d2fa 	srai	r3,r3,11
  82ac1c:	10c00015 	stw	r3,0(r2)
  82ac20:	e0bfb717 	ldw	r2,-292(fp)
  82ac24:	10801804 	addi	r2,r2,96
  82ac28:	e13fbf17 	ldw	r4,-260(fp)
  82ac2c:	e0ffbb17 	ldw	r3,-276(fp)
  82ac30:	20c7c83a 	sub	r3,r4,r3
  82ac34:	1807d2fa 	srai	r3,r3,11
  82ac38:	10c00015 	stw	r3,0(r2)
  82ac3c:	e0bfb817 	ldw	r2,-288(fp)
  82ac40:	10800044 	addi	r2,r2,1
  82ac44:	e0bfb815 	stw	r2,-288(fp)
  82ac48:	e0bfb517 	ldw	r2,-300(fp)
  82ac4c:	10800084 	addi	r2,r2,2
  82ac50:	e0bfb515 	stw	r2,-300(fp)
  82ac54:	e0bfb617 	ldw	r2,-296(fp)
  82ac58:	10800104 	addi	r2,r2,4
  82ac5c:	e0bfb615 	stw	r2,-296(fp)
  82ac60:	e0bfb717 	ldw	r2,-292(fp)
  82ac64:	10800104 	addi	r2,r2,4
  82ac68:	e0bfb715 	stw	r2,-292(fp)
  82ac6c:	e0bfb817 	ldw	r2,-288(fp)
  82ac70:	10800210 	cmplti	r2,r2,8
  82ac74:	103f401e 	bne	r2,zero,82a978 <__alt_mem_epcs_flash_controller_0+0xff821978>
  82ac78:	e0bfcb04 	addi	r2,fp,-212
  82ac7c:	e0bfb715 	stw	r2,-292(fp)
  82ac80:	e03fb815 	stw	zero,-288(fp)
  82ac84:	00015906 	br	82b1ec <jpeg_idct_12x6+0x8cc>
  82ac88:	e0bfb817 	ldw	r2,-288(fp)
  82ac8c:	1085883a 	add	r2,r2,r2
  82ac90:	1085883a 	add	r2,r2,r2
  82ac94:	1007883a 	mov	r3,r2
  82ac98:	e0bffe17 	ldw	r2,-8(fp)
  82ac9c:	10c5883a 	add	r2,r2,r3
  82aca0:	10c00017 	ldw	r3,0(r2)
  82aca4:	e0800217 	ldw	r2,8(fp)
  82aca8:	1885883a 	add	r2,r3,r2
  82acac:	e0bfc315 	stw	r2,-244(fp)
  82acb0:	e0bfb717 	ldw	r2,-292(fp)
  82acb4:	10800017 	ldw	r2,0(r2)
  82acb8:	10900404 	addi	r2,r2,16400
  82acbc:	e0bfc215 	stw	r2,-248(fp)
  82acc0:	e0bfc217 	ldw	r2,-248(fp)
  82acc4:	1004937a 	slli	r2,r2,13
  82acc8:	e0bfc215 	stw	r2,-248(fp)
  82accc:	e0bfb717 	ldw	r2,-292(fp)
  82acd0:	10800404 	addi	r2,r2,16
  82acd4:	10800017 	ldw	r2,0(r2)
  82acd8:	e0bfc415 	stw	r2,-240(fp)
  82acdc:	0149cc44 	movi	r5,10033
  82ace0:	e13fc417 	ldw	r4,-240(fp)
  82ace4:	08305040 	call	830504 <__mulsi3>
  82ace8:	e0bfc415 	stw	r2,-240(fp)
  82acec:	e0ffc217 	ldw	r3,-248(fp)
  82acf0:	e0bfc417 	ldw	r2,-240(fp)
  82acf4:	1885883a 	add	r2,r3,r2
  82acf8:	e0bfba15 	stw	r2,-280(fp)
  82acfc:	e0ffc217 	ldw	r3,-248(fp)
  82ad00:	e0bfc417 	ldw	r2,-240(fp)
  82ad04:	1885c83a 	sub	r2,r3,r2
  82ad08:	e0bfbd15 	stw	r2,-268(fp)
  82ad0c:	e0bfb717 	ldw	r2,-292(fp)
  82ad10:	10800204 	addi	r2,r2,8
  82ad14:	10800017 	ldw	r2,0(r2)
  82ad18:	e0bfc015 	stw	r2,-256(fp)
  82ad1c:	014aed84 	movi	r5,11190
  82ad20:	e13fc017 	ldw	r4,-256(fp)
  82ad24:	08305040 	call	830504 <__mulsi3>
  82ad28:	e0bfc415 	stw	r2,-240(fp)
  82ad2c:	e0bfc017 	ldw	r2,-256(fp)
  82ad30:	1004937a 	slli	r2,r2,13
  82ad34:	e0bfc015 	stw	r2,-256(fp)
  82ad38:	e0bfb717 	ldw	r2,-292(fp)
  82ad3c:	10800604 	addi	r2,r2,24
  82ad40:	10800017 	ldw	r2,0(r2)
  82ad44:	e0bfc115 	stw	r2,-252(fp)
  82ad48:	e0bfc117 	ldw	r2,-252(fp)
  82ad4c:	1004937a 	slli	r2,r2,13
  82ad50:	e0bfc115 	stw	r2,-252(fp)
  82ad54:	e0ffc017 	ldw	r3,-256(fp)
  82ad58:	e0bfc117 	ldw	r2,-252(fp)
  82ad5c:	1885c83a 	sub	r2,r3,r2
  82ad60:	e0bfbb15 	stw	r2,-276(fp)
  82ad64:	e0ffc217 	ldw	r3,-248(fp)
  82ad68:	e0bfbb17 	ldw	r2,-276(fp)
  82ad6c:	1885883a 	add	r2,r3,r2
  82ad70:	e0bfbe15 	stw	r2,-264(fp)
  82ad74:	e0ffc217 	ldw	r3,-248(fp)
  82ad78:	e0bfbb17 	ldw	r2,-276(fp)
  82ad7c:	1885c83a 	sub	r2,r3,r2
  82ad80:	e0bfc515 	stw	r2,-236(fp)
  82ad84:	e0ffc417 	ldw	r3,-240(fp)
  82ad88:	e0bfc117 	ldw	r2,-252(fp)
  82ad8c:	1885883a 	add	r2,r3,r2
  82ad90:	e0bfbb15 	stw	r2,-276(fp)
  82ad94:	e0ffba17 	ldw	r3,-280(fp)
  82ad98:	e0bfbb17 	ldw	r2,-276(fp)
  82ad9c:	1885883a 	add	r2,r3,r2
  82ada0:	e0bfbc15 	stw	r2,-272(fp)
  82ada4:	e0ffba17 	ldw	r3,-280(fp)
  82ada8:	e0bfbb17 	ldw	r2,-276(fp)
  82adac:	1885c83a 	sub	r2,r3,r2
  82adb0:	e0bfc615 	stw	r2,-232(fp)
  82adb4:	e0ffc417 	ldw	r3,-240(fp)
  82adb8:	e0bfc017 	ldw	r2,-256(fp)
  82adbc:	1887c83a 	sub	r3,r3,r2
  82adc0:	e0bfc117 	ldw	r2,-252(fp)
  82adc4:	1885c83a 	sub	r2,r3,r2
  82adc8:	e0bfbb15 	stw	r2,-276(fp)
  82adcc:	e0ffbd17 	ldw	r3,-268(fp)
  82add0:	e0bfbb17 	ldw	r2,-276(fp)
  82add4:	1885883a 	add	r2,r3,r2
  82add8:	e0bfbf15 	stw	r2,-260(fp)
  82addc:	e0ffbd17 	ldw	r3,-268(fp)
  82ade0:	e0bfbb17 	ldw	r2,-276(fp)
  82ade4:	1885c83a 	sub	r2,r3,r2
  82ade8:	e0bfc715 	stw	r2,-228(fp)
  82adec:	e0bfb717 	ldw	r2,-292(fp)
  82adf0:	10800104 	addi	r2,r2,4
  82adf4:	10800017 	ldw	r2,0(r2)
  82adf8:	e0bfc015 	stw	r2,-256(fp)
  82adfc:	e0bfb717 	ldw	r2,-292(fp)
  82ae00:	10800304 	addi	r2,r2,12
  82ae04:	10800017 	ldw	r2,0(r2)
  82ae08:	e0bfc115 	stw	r2,-252(fp)
  82ae0c:	e0bfb717 	ldw	r2,-292(fp)
  82ae10:	10800504 	addi	r2,r2,20
  82ae14:	10800017 	ldw	r2,0(r2)
  82ae18:	e0bfc215 	stw	r2,-248(fp)
  82ae1c:	e0bfb717 	ldw	r2,-292(fp)
  82ae20:	10800704 	addi	r2,r2,28
  82ae24:	10800017 	ldw	r2,0(r2)
  82ae28:	e0bfc415 	stw	r2,-240(fp)
  82ae2c:	014a73c4 	movi	r5,10703
  82ae30:	e13fc117 	ldw	r4,-252(fp)
  82ae34:	08305040 	call	830504 <__mulsi3>
  82ae38:	e0bfbd15 	stw	r2,-268(fp)
  82ae3c:	017babc4 	movi	r5,-4433
  82ae40:	e13fc117 	ldw	r4,-252(fp)
  82ae44:	08305040 	call	830504 <__mulsi3>
  82ae48:	e0bfc815 	stw	r2,-224(fp)
  82ae4c:	e0ffc017 	ldw	r3,-256(fp)
  82ae50:	e0bfc217 	ldw	r2,-248(fp)
  82ae54:	1885883a 	add	r2,r3,r2
  82ae58:	e0bfba15 	stw	r2,-280(fp)
  82ae5c:	e0ffba17 	ldw	r3,-280(fp)
  82ae60:	e0bfc417 	ldw	r2,-240(fp)
  82ae64:	1885883a 	add	r2,r3,r2
  82ae68:	0146e344 	movi	r5,7053
  82ae6c:	1009883a 	mov	r4,r2
  82ae70:	08305040 	call	830504 <__mulsi3>
  82ae74:	e0bfc915 	stw	r2,-220(fp)
  82ae78:	014216c4 	movi	r5,2139
  82ae7c:	e13fba17 	ldw	r4,-280(fp)
  82ae80:	08305040 	call	830504 <__mulsi3>
  82ae84:	1007883a 	mov	r3,r2
  82ae88:	e0bfc917 	ldw	r2,-220(fp)
  82ae8c:	1885883a 	add	r2,r3,r2
  82ae90:	e0bfbb15 	stw	r2,-276(fp)
  82ae94:	e0ffbb17 	ldw	r3,-276(fp)
  82ae98:	e0bfbd17 	ldw	r2,-268(fp)
  82ae9c:	18a1883a 	add	r16,r3,r2
  82aea0:	01423dc4 	movi	r5,2295
  82aea4:	e13fc017 	ldw	r4,-256(fp)
  82aea8:	08305040 	call	830504 <__mulsi3>
  82aeac:	8085883a 	add	r2,r16,r2
  82aeb0:	e0bfba15 	stw	r2,-280(fp)
  82aeb4:	e0ffc217 	ldw	r3,-248(fp)
  82aeb8:	e0bfc417 	ldw	r2,-240(fp)
  82aebc:	1885883a 	add	r2,r3,r2
  82aec0:	0177a2c4 	movi	r5,-8565
  82aec4:	1009883a 	mov	r4,r2
  82aec8:	08305040 	call	830504 <__mulsi3>
  82aecc:	e0bfca15 	stw	r2,-216(fp)
  82aed0:	e0ffca17 	ldw	r3,-216(fp)
  82aed4:	e0bfc817 	ldw	r2,-224(fp)
  82aed8:	18a1883a 	add	r16,r3,r2
  82aedc:	01742c04 	movi	r5,-12112
  82aee0:	e13fc217 	ldw	r4,-248(fp)
  82aee4:	08305040 	call	830504 <__mulsi3>
  82aee8:	8085883a 	add	r2,r16,r2
  82aeec:	e0ffbb17 	ldw	r3,-276(fp)
  82aef0:	1885883a 	add	r2,r3,r2
  82aef4:	e0bfbb15 	stw	r2,-276(fp)
  82aef8:	e0ffc917 	ldw	r3,-220(fp)
  82aefc:	e0bfbd17 	ldw	r2,-268(fp)
  82af00:	18a1c83a 	sub	r16,r3,r2
  82af04:	014cb184 	movi	r5,12998
  82af08:	e13fc417 	ldw	r4,-240(fp)
  82af0c:	08305040 	call	830504 <__mulsi3>
  82af10:	8085883a 	add	r2,r16,r2
  82af14:	e0ffca17 	ldw	r3,-216(fp)
  82af18:	1885883a 	add	r2,r3,r2
  82af1c:	e0bfca15 	stw	r2,-216(fp)
  82af20:	017a9704 	movi	r5,-5540
  82af24:	e13fc017 	ldw	r4,-256(fp)
  82af28:	08305040 	call	830504 <__mulsi3>
  82af2c:	1007883a 	mov	r3,r2
  82af30:	e0bfc817 	ldw	r2,-224(fp)
  82af34:	18a1883a 	add	r16,r3,r2
  82af38:	01702304 	movi	r5,-16244
  82af3c:	e13fc417 	ldw	r4,-240(fp)
  82af40:	08305040 	call	830504 <__mulsi3>
  82af44:	8085883a 	add	r2,r16,r2
  82af48:	e0ffc917 	ldw	r3,-220(fp)
  82af4c:	1885883a 	add	r2,r3,r2
  82af50:	e0bfc915 	stw	r2,-220(fp)
  82af54:	e0ffc017 	ldw	r3,-256(fp)
  82af58:	e0bfc417 	ldw	r2,-240(fp)
  82af5c:	1885c83a 	sub	r2,r3,r2
  82af60:	e0bfc015 	stw	r2,-256(fp)
  82af64:	e0ffc117 	ldw	r3,-252(fp)
  82af68:	e0bfc217 	ldw	r2,-248(fp)
  82af6c:	1885c83a 	sub	r2,r3,r2
  82af70:	e0bfc115 	stw	r2,-252(fp)
  82af74:	e0ffc017 	ldw	r3,-256(fp)
  82af78:	e0bfc117 	ldw	r2,-252(fp)
  82af7c:	1885883a 	add	r2,r3,r2
  82af80:	01445444 	movi	r5,4433
  82af84:	1009883a 	mov	r4,r2
  82af88:	08305040 	call	830504 <__mulsi3>
  82af8c:	e0bfc215 	stw	r2,-248(fp)
  82af90:	01461f84 	movi	r5,6270
  82af94:	e13fc017 	ldw	r4,-256(fp)
  82af98:	08305040 	call	830504 <__mulsi3>
  82af9c:	1007883a 	mov	r3,r2
  82afa0:	e0bfc217 	ldw	r2,-248(fp)
  82afa4:	1885883a 	add	r2,r3,r2
  82afa8:	e0bfbd15 	stw	r2,-268(fp)
  82afac:	017137c4 	movi	r5,-15137
  82afb0:	e13fc117 	ldw	r4,-252(fp)
  82afb4:	08305040 	call	830504 <__mulsi3>
  82afb8:	1007883a 	mov	r3,r2
  82afbc:	e0bfc217 	ldw	r2,-248(fp)
  82afc0:	1885883a 	add	r2,r3,r2
  82afc4:	e0bfc815 	stw	r2,-224(fp)
  82afc8:	e0ffbc17 	ldw	r3,-272(fp)
  82afcc:	e0bfba17 	ldw	r2,-280(fp)
  82afd0:	1885883a 	add	r2,r3,r2
  82afd4:	1005d4ba 	srai	r2,r2,18
  82afd8:	1080ffcc 	andi	r2,r2,1023
  82afdc:	e0ffb917 	ldw	r3,-284(fp)
  82afe0:	1885883a 	add	r2,r3,r2
  82afe4:	10c00003 	ldbu	r3,0(r2)
  82afe8:	e0bfc317 	ldw	r2,-244(fp)
  82afec:	10c00005 	stb	r3,0(r2)
  82aff0:	e0bfc317 	ldw	r2,-244(fp)
  82aff4:	108002c4 	addi	r2,r2,11
  82aff8:	e13fbc17 	ldw	r4,-272(fp)
  82affc:	e0ffba17 	ldw	r3,-280(fp)
  82b000:	20c7c83a 	sub	r3,r4,r3
  82b004:	1807d4ba 	srai	r3,r3,18
  82b008:	18c0ffcc 	andi	r3,r3,1023
  82b00c:	e13fb917 	ldw	r4,-284(fp)
  82b010:	20c7883a 	add	r3,r4,r3
  82b014:	18c00003 	ldbu	r3,0(r3)
  82b018:	10c00005 	stb	r3,0(r2)
  82b01c:	e0bfc317 	ldw	r2,-244(fp)
  82b020:	10800044 	addi	r2,r2,1
  82b024:	e13fbe17 	ldw	r4,-264(fp)
  82b028:	e0ffbd17 	ldw	r3,-268(fp)
  82b02c:	20c7883a 	add	r3,r4,r3
  82b030:	1807d4ba 	srai	r3,r3,18
  82b034:	18c0ffcc 	andi	r3,r3,1023
  82b038:	e13fb917 	ldw	r4,-284(fp)
  82b03c:	20c7883a 	add	r3,r4,r3
  82b040:	18c00003 	ldbu	r3,0(r3)
  82b044:	10c00005 	stb	r3,0(r2)
  82b048:	e0bfc317 	ldw	r2,-244(fp)
  82b04c:	10800284 	addi	r2,r2,10
  82b050:	e13fbe17 	ldw	r4,-264(fp)
  82b054:	e0ffbd17 	ldw	r3,-268(fp)
  82b058:	20c7c83a 	sub	r3,r4,r3
  82b05c:	1807d4ba 	srai	r3,r3,18
  82b060:	18c0ffcc 	andi	r3,r3,1023
  82b064:	e13fb917 	ldw	r4,-284(fp)
  82b068:	20c7883a 	add	r3,r4,r3
  82b06c:	18c00003 	ldbu	r3,0(r3)
  82b070:	10c00005 	stb	r3,0(r2)
  82b074:	e0bfc317 	ldw	r2,-244(fp)
  82b078:	10800084 	addi	r2,r2,2
  82b07c:	e13fbf17 	ldw	r4,-260(fp)
  82b080:	e0ffbb17 	ldw	r3,-276(fp)
  82b084:	20c7883a 	add	r3,r4,r3
  82b088:	1807d4ba 	srai	r3,r3,18
  82b08c:	18c0ffcc 	andi	r3,r3,1023
  82b090:	e13fb917 	ldw	r4,-284(fp)
  82b094:	20c7883a 	add	r3,r4,r3
  82b098:	18c00003 	ldbu	r3,0(r3)
  82b09c:	10c00005 	stb	r3,0(r2)
  82b0a0:	e0bfc317 	ldw	r2,-244(fp)
  82b0a4:	10800244 	addi	r2,r2,9
  82b0a8:	e13fbf17 	ldw	r4,-260(fp)
  82b0ac:	e0ffbb17 	ldw	r3,-276(fp)
  82b0b0:	20c7c83a 	sub	r3,r4,r3
  82b0b4:	1807d4ba 	srai	r3,r3,18
  82b0b8:	18c0ffcc 	andi	r3,r3,1023
  82b0bc:	e13fb917 	ldw	r4,-284(fp)
  82b0c0:	20c7883a 	add	r3,r4,r3
  82b0c4:	18c00003 	ldbu	r3,0(r3)
  82b0c8:	10c00005 	stb	r3,0(r2)
  82b0cc:	e0bfc317 	ldw	r2,-244(fp)
  82b0d0:	108000c4 	addi	r2,r2,3
  82b0d4:	e13fc717 	ldw	r4,-228(fp)
  82b0d8:	e0ffca17 	ldw	r3,-216(fp)
  82b0dc:	20c7883a 	add	r3,r4,r3
  82b0e0:	1807d4ba 	srai	r3,r3,18
  82b0e4:	18c0ffcc 	andi	r3,r3,1023
  82b0e8:	e13fb917 	ldw	r4,-284(fp)
  82b0ec:	20c7883a 	add	r3,r4,r3
  82b0f0:	18c00003 	ldbu	r3,0(r3)
  82b0f4:	10c00005 	stb	r3,0(r2)
  82b0f8:	e0bfc317 	ldw	r2,-244(fp)
  82b0fc:	10800204 	addi	r2,r2,8
  82b100:	e13fc717 	ldw	r4,-228(fp)
  82b104:	e0ffca17 	ldw	r3,-216(fp)
  82b108:	20c7c83a 	sub	r3,r4,r3
  82b10c:	1807d4ba 	srai	r3,r3,18
  82b110:	18c0ffcc 	andi	r3,r3,1023
  82b114:	e13fb917 	ldw	r4,-284(fp)
  82b118:	20c7883a 	add	r3,r4,r3
  82b11c:	18c00003 	ldbu	r3,0(r3)
  82b120:	10c00005 	stb	r3,0(r2)
  82b124:	e0bfc317 	ldw	r2,-244(fp)
  82b128:	10800104 	addi	r2,r2,4
  82b12c:	e13fc517 	ldw	r4,-236(fp)
  82b130:	e0ffc817 	ldw	r3,-224(fp)
  82b134:	20c7883a 	add	r3,r4,r3
  82b138:	1807d4ba 	srai	r3,r3,18
  82b13c:	18c0ffcc 	andi	r3,r3,1023
  82b140:	e13fb917 	ldw	r4,-284(fp)
  82b144:	20c7883a 	add	r3,r4,r3
  82b148:	18c00003 	ldbu	r3,0(r3)
  82b14c:	10c00005 	stb	r3,0(r2)
  82b150:	e0bfc317 	ldw	r2,-244(fp)
  82b154:	108001c4 	addi	r2,r2,7
  82b158:	e13fc517 	ldw	r4,-236(fp)
  82b15c:	e0ffc817 	ldw	r3,-224(fp)
  82b160:	20c7c83a 	sub	r3,r4,r3
  82b164:	1807d4ba 	srai	r3,r3,18
  82b168:	18c0ffcc 	andi	r3,r3,1023
  82b16c:	e13fb917 	ldw	r4,-284(fp)
  82b170:	20c7883a 	add	r3,r4,r3
  82b174:	18c00003 	ldbu	r3,0(r3)
  82b178:	10c00005 	stb	r3,0(r2)
  82b17c:	e0bfc317 	ldw	r2,-244(fp)
  82b180:	10800144 	addi	r2,r2,5
  82b184:	e13fc617 	ldw	r4,-232(fp)
  82b188:	e0ffc917 	ldw	r3,-220(fp)
  82b18c:	20c7883a 	add	r3,r4,r3
  82b190:	1807d4ba 	srai	r3,r3,18
  82b194:	18c0ffcc 	andi	r3,r3,1023
  82b198:	e13fb917 	ldw	r4,-284(fp)
  82b19c:	20c7883a 	add	r3,r4,r3
  82b1a0:	18c00003 	ldbu	r3,0(r3)
  82b1a4:	10c00005 	stb	r3,0(r2)
  82b1a8:	e0bfc317 	ldw	r2,-244(fp)
  82b1ac:	10800184 	addi	r2,r2,6
  82b1b0:	e13fc617 	ldw	r4,-232(fp)
  82b1b4:	e0ffc917 	ldw	r3,-220(fp)
  82b1b8:	20c7c83a 	sub	r3,r4,r3
  82b1bc:	1807d4ba 	srai	r3,r3,18
  82b1c0:	18c0ffcc 	andi	r3,r3,1023
  82b1c4:	e13fb917 	ldw	r4,-284(fp)
  82b1c8:	20c7883a 	add	r3,r4,r3
  82b1cc:	18c00003 	ldbu	r3,0(r3)
  82b1d0:	10c00005 	stb	r3,0(r2)
  82b1d4:	e0bfb717 	ldw	r2,-292(fp)
  82b1d8:	10800804 	addi	r2,r2,32
  82b1dc:	e0bfb715 	stw	r2,-292(fp)
  82b1e0:	e0bfb817 	ldw	r2,-288(fp)
  82b1e4:	10800044 	addi	r2,r2,1
  82b1e8:	e0bfb815 	stw	r2,-288(fp)
  82b1ec:	e0bfb817 	ldw	r2,-288(fp)
  82b1f0:	10800190 	cmplti	r2,r2,6
  82b1f4:	103ea41e 	bne	r2,zero,82ac88 <__alt_mem_epcs_flash_controller_0+0xff821c88>
  82b1f8:	0001883a 	nop
  82b1fc:	e6ffff04 	addi	sp,fp,-4
  82b200:	dfc00217 	ldw	ra,8(sp)
  82b204:	df000117 	ldw	fp,4(sp)
  82b208:	dc000017 	ldw	r16,0(sp)
  82b20c:	dec00304 	addi	sp,sp,12
  82b210:	f800283a 	ret

0082b214 <jpeg_idct_10x5>:
  82b214:	deffbe04 	addi	sp,sp,-264
  82b218:	dfc04115 	stw	ra,260(sp)
  82b21c:	df004015 	stw	fp,256(sp)
  82b220:	df004004 	addi	fp,sp,256
  82b224:	e13ffc15 	stw	r4,-16(fp)
  82b228:	e17ffd15 	stw	r5,-12(fp)
  82b22c:	e1bffe15 	stw	r6,-8(fp)
  82b230:	e1ffff15 	stw	r7,-4(fp)
  82b234:	e0bffc17 	ldw	r2,-16(fp)
  82b238:	10805417 	ldw	r2,336(r2)
  82b23c:	10bfa004 	addi	r2,r2,-384
  82b240:	e0bfc415 	stw	r2,-240(fp)
  82b244:	e0bffe17 	ldw	r2,-8(fp)
  82b248:	e0bfc015 	stw	r2,-256(fp)
  82b24c:	e0bffd17 	ldw	r2,-12(fp)
  82b250:	10801517 	ldw	r2,84(r2)
  82b254:	e0bfc115 	stw	r2,-252(fp)
  82b258:	e0bfd404 	addi	r2,fp,-176
  82b25c:	e0bfc215 	stw	r2,-248(fp)
  82b260:	e03fc315 	stw	zero,-244(fp)
  82b264:	0000a706 	br	82b504 <jpeg_idct_10x5+0x2f0>
  82b268:	e0bfc017 	ldw	r2,-256(fp)
  82b26c:	1080000b 	ldhu	r2,0(r2)
  82b270:	10ffffcc 	andi	r3,r2,65535
  82b274:	18e0001c 	xori	r3,r3,32768
  82b278:	18e00004 	addi	r3,r3,-32768
  82b27c:	e0bfc117 	ldw	r2,-252(fp)
  82b280:	10800017 	ldw	r2,0(r2)
  82b284:	100b883a 	mov	r5,r2
  82b288:	1809883a 	mov	r4,r3
  82b28c:	08305040 	call	830504 <__mulsi3>
  82b290:	e0bfc515 	stw	r2,-236(fp)
  82b294:	e0bfc517 	ldw	r2,-236(fp)
  82b298:	1004937a 	slli	r2,r2,13
  82b29c:	e0bfc515 	stw	r2,-236(fp)
  82b2a0:	e0bfc517 	ldw	r2,-236(fp)
  82b2a4:	10810004 	addi	r2,r2,1024
  82b2a8:	e0bfc515 	stw	r2,-236(fp)
  82b2ac:	e0bfc017 	ldw	r2,-256(fp)
  82b2b0:	10800804 	addi	r2,r2,32
  82b2b4:	1080000b 	ldhu	r2,0(r2)
  82b2b8:	10ffffcc 	andi	r3,r2,65535
  82b2bc:	18e0001c 	xori	r3,r3,32768
  82b2c0:	18e00004 	addi	r3,r3,-32768
  82b2c4:	e0bfc117 	ldw	r2,-252(fp)
  82b2c8:	10801004 	addi	r2,r2,64
  82b2cc:	10800017 	ldw	r2,0(r2)
  82b2d0:	100b883a 	mov	r5,r2
  82b2d4:	1809883a 	mov	r4,r3
  82b2d8:	08305040 	call	830504 <__mulsi3>
  82b2dc:	e0bfc615 	stw	r2,-232(fp)
  82b2e0:	e0bfc017 	ldw	r2,-256(fp)
  82b2e4:	10801004 	addi	r2,r2,64
  82b2e8:	1080000b 	ldhu	r2,0(r2)
  82b2ec:	10ffffcc 	andi	r3,r2,65535
  82b2f0:	18e0001c 	xori	r3,r3,32768
  82b2f4:	18e00004 	addi	r3,r3,-32768
  82b2f8:	e0bfc117 	ldw	r2,-252(fp)
  82b2fc:	10802004 	addi	r2,r2,128
  82b300:	10800017 	ldw	r2,0(r2)
  82b304:	100b883a 	mov	r5,r2
  82b308:	1809883a 	mov	r4,r3
  82b30c:	08305040 	call	830504 <__mulsi3>
  82b310:	e0bfc715 	stw	r2,-228(fp)
  82b314:	e0ffc617 	ldw	r3,-232(fp)
  82b318:	e0bfc717 	ldw	r2,-228(fp)
  82b31c:	1885883a 	add	r2,r3,r2
  82b320:	01465304 	movi	r5,6476
  82b324:	1009883a 	mov	r4,r2
  82b328:	08305040 	call	830504 <__mulsi3>
  82b32c:	e0bfc815 	stw	r2,-224(fp)
  82b330:	e0ffc617 	ldw	r3,-232(fp)
  82b334:	e0bfc717 	ldw	r2,-228(fp)
  82b338:	1885c83a 	sub	r2,r3,r2
  82b33c:	0142d404 	movi	r5,2896
  82b340:	1009883a 	mov	r4,r2
  82b344:	08305040 	call	830504 <__mulsi3>
  82b348:	e0bfc915 	stw	r2,-220(fp)
  82b34c:	e0ffc517 	ldw	r3,-236(fp)
  82b350:	e0bfc917 	ldw	r2,-220(fp)
  82b354:	1885883a 	add	r2,r3,r2
  82b358:	e0bfca15 	stw	r2,-216(fp)
  82b35c:	e0ffca17 	ldw	r3,-216(fp)
  82b360:	e0bfc817 	ldw	r2,-224(fp)
  82b364:	1885883a 	add	r2,r3,r2
  82b368:	e0bfcb15 	stw	r2,-212(fp)
  82b36c:	e0ffca17 	ldw	r3,-216(fp)
  82b370:	e0bfc817 	ldw	r2,-224(fp)
  82b374:	1885c83a 	sub	r2,r3,r2
  82b378:	e0bfcc15 	stw	r2,-208(fp)
  82b37c:	e0bfc917 	ldw	r2,-220(fp)
  82b380:	1085883a 	add	r2,r2,r2
  82b384:	1085883a 	add	r2,r2,r2
  82b388:	1007883a 	mov	r3,r2
  82b38c:	e0bfc517 	ldw	r2,-236(fp)
  82b390:	10c5c83a 	sub	r2,r2,r3
  82b394:	e0bfc515 	stw	r2,-236(fp)
  82b398:	e0bfc017 	ldw	r2,-256(fp)
  82b39c:	10800404 	addi	r2,r2,16
  82b3a0:	1080000b 	ldhu	r2,0(r2)
  82b3a4:	10ffffcc 	andi	r3,r2,65535
  82b3a8:	18e0001c 	xori	r3,r3,32768
  82b3ac:	18e00004 	addi	r3,r3,-32768
  82b3b0:	e0bfc117 	ldw	r2,-252(fp)
  82b3b4:	10800804 	addi	r2,r2,32
  82b3b8:	10800017 	ldw	r2,0(r2)
  82b3bc:	100b883a 	mov	r5,r2
  82b3c0:	1809883a 	mov	r4,r3
  82b3c4:	08305040 	call	830504 <__mulsi3>
  82b3c8:	e0bfc915 	stw	r2,-220(fp)
  82b3cc:	e0bfc017 	ldw	r2,-256(fp)
  82b3d0:	10800c04 	addi	r2,r2,48
  82b3d4:	1080000b 	ldhu	r2,0(r2)
  82b3d8:	10ffffcc 	andi	r3,r2,65535
  82b3dc:	18e0001c 	xori	r3,r3,32768
  82b3e0:	18e00004 	addi	r3,r3,-32768
  82b3e4:	e0bfc117 	ldw	r2,-252(fp)
  82b3e8:	10801804 	addi	r2,r2,96
  82b3ec:	10800017 	ldw	r2,0(r2)
  82b3f0:	100b883a 	mov	r5,r2
  82b3f4:	1809883a 	mov	r4,r3
  82b3f8:	08305040 	call	830504 <__mulsi3>
  82b3fc:	e0bfca15 	stw	r2,-216(fp)
  82b400:	e0ffc917 	ldw	r3,-220(fp)
  82b404:	e0bfca17 	ldw	r2,-216(fp)
  82b408:	1885883a 	add	r2,r3,r2
  82b40c:	0146a684 	movi	r5,6810
  82b410:	1009883a 	mov	r4,r2
  82b414:	08305040 	call	830504 <__mulsi3>
  82b418:	e0bfc815 	stw	r2,-224(fp)
  82b41c:	01441c44 	movi	r5,4209
  82b420:	e13fc917 	ldw	r4,-220(fp)
  82b424:	08305040 	call	830504 <__mulsi3>
  82b428:	1007883a 	mov	r3,r2
  82b42c:	e0bfc817 	ldw	r2,-224(fp)
  82b430:	1885883a 	add	r2,r3,r2
  82b434:	e0bfc615 	stw	r2,-232(fp)
  82b438:	016e9704 	movi	r5,-17828
  82b43c:	e13fca17 	ldw	r4,-216(fp)
  82b440:	08305040 	call	830504 <__mulsi3>
  82b444:	1007883a 	mov	r3,r2
  82b448:	e0bfc817 	ldw	r2,-224(fp)
  82b44c:	1885883a 	add	r2,r3,r2
  82b450:	e0bfc715 	stw	r2,-228(fp)
  82b454:	e0ffcb17 	ldw	r3,-212(fp)
  82b458:	e0bfc617 	ldw	r2,-232(fp)
  82b45c:	1885883a 	add	r2,r3,r2
  82b460:	1007d2fa 	srai	r3,r2,11
  82b464:	e0bfc217 	ldw	r2,-248(fp)
  82b468:	10c00015 	stw	r3,0(r2)
  82b46c:	e0bfc217 	ldw	r2,-248(fp)
  82b470:	10802004 	addi	r2,r2,128
  82b474:	e13fcb17 	ldw	r4,-212(fp)
  82b478:	e0ffc617 	ldw	r3,-232(fp)
  82b47c:	20c7c83a 	sub	r3,r4,r3
  82b480:	1807d2fa 	srai	r3,r3,11
  82b484:	10c00015 	stw	r3,0(r2)
  82b488:	e0bfc217 	ldw	r2,-248(fp)
  82b48c:	10800804 	addi	r2,r2,32
  82b490:	e13fcc17 	ldw	r4,-208(fp)
  82b494:	e0ffc717 	ldw	r3,-228(fp)
  82b498:	20c7883a 	add	r3,r4,r3
  82b49c:	1807d2fa 	srai	r3,r3,11
  82b4a0:	10c00015 	stw	r3,0(r2)
  82b4a4:	e0bfc217 	ldw	r2,-248(fp)
  82b4a8:	10801804 	addi	r2,r2,96
  82b4ac:	e13fcc17 	ldw	r4,-208(fp)
  82b4b0:	e0ffc717 	ldw	r3,-228(fp)
  82b4b4:	20c7c83a 	sub	r3,r4,r3
  82b4b8:	1807d2fa 	srai	r3,r3,11
  82b4bc:	10c00015 	stw	r3,0(r2)
  82b4c0:	e0bfc217 	ldw	r2,-248(fp)
  82b4c4:	10801004 	addi	r2,r2,64
  82b4c8:	e0ffc517 	ldw	r3,-236(fp)
  82b4cc:	1807d2fa 	srai	r3,r3,11
  82b4d0:	10c00015 	stw	r3,0(r2)
  82b4d4:	e0bfc317 	ldw	r2,-244(fp)
  82b4d8:	10800044 	addi	r2,r2,1
  82b4dc:	e0bfc315 	stw	r2,-244(fp)
  82b4e0:	e0bfc017 	ldw	r2,-256(fp)
  82b4e4:	10800084 	addi	r2,r2,2
  82b4e8:	e0bfc015 	stw	r2,-256(fp)
  82b4ec:	e0bfc117 	ldw	r2,-252(fp)
  82b4f0:	10800104 	addi	r2,r2,4
  82b4f4:	e0bfc115 	stw	r2,-252(fp)
  82b4f8:	e0bfc217 	ldw	r2,-248(fp)
  82b4fc:	10800104 	addi	r2,r2,4
  82b500:	e0bfc215 	stw	r2,-248(fp)
  82b504:	e0bfc317 	ldw	r2,-244(fp)
  82b508:	10800210 	cmplti	r2,r2,8
  82b50c:	103f561e 	bne	r2,zero,82b268 <__alt_mem_epcs_flash_controller_0+0xff822268>
  82b510:	e0bfd404 	addi	r2,fp,-176
  82b514:	e0bfc215 	stw	r2,-248(fp)
  82b518:	e03fc315 	stw	zero,-244(fp)
  82b51c:	00012a06 	br	82b9c8 <jpeg_idct_10x5+0x7b4>
  82b520:	e0bfc317 	ldw	r2,-244(fp)
  82b524:	1085883a 	add	r2,r2,r2
  82b528:	1085883a 	add	r2,r2,r2
  82b52c:	1007883a 	mov	r3,r2
  82b530:	e0bfff17 	ldw	r2,-4(fp)
  82b534:	10c5883a 	add	r2,r2,r3
  82b538:	10c00017 	ldw	r3,0(r2)
  82b53c:	e0800217 	ldw	r2,8(fp)
  82b540:	1885883a 	add	r2,r3,r2
  82b544:	e0bfcd15 	stw	r2,-204(fp)
  82b548:	e0bfc217 	ldw	r2,-248(fp)
  82b54c:	10800017 	ldw	r2,0(r2)
  82b550:	10900404 	addi	r2,r2,16400
  82b554:	e0bfca15 	stw	r2,-216(fp)
  82b558:	e0bfca17 	ldw	r2,-216(fp)
  82b55c:	1004937a 	slli	r2,r2,13
  82b560:	e0bfca15 	stw	r2,-216(fp)
  82b564:	e0bfc217 	ldw	r2,-248(fp)
  82b568:	10800404 	addi	r2,r2,16
  82b56c:	10800017 	ldw	r2,0(r2)
  82b570:	e0bfce15 	stw	r2,-200(fp)
  82b574:	01492744 	movi	r5,9373
  82b578:	e13fce17 	ldw	r4,-200(fp)
  82b57c:	08305040 	call	830504 <__mulsi3>
  82b580:	e0bfc815 	stw	r2,-224(fp)
  82b584:	01437f04 	movi	r5,3580
  82b588:	e13fce17 	ldw	r4,-200(fp)
  82b58c:	08305040 	call	830504 <__mulsi3>
  82b590:	e0bfc915 	stw	r2,-220(fp)
  82b594:	e0ffca17 	ldw	r3,-216(fp)
  82b598:	e0bfc817 	ldw	r2,-224(fp)
  82b59c:	1885883a 	add	r2,r3,r2
  82b5a0:	e0bfcb15 	stw	r2,-212(fp)
  82b5a4:	e0ffca17 	ldw	r3,-216(fp)
  82b5a8:	e0bfc917 	ldw	r2,-220(fp)
  82b5ac:	1885c83a 	sub	r2,r3,r2
  82b5b0:	e0bfcc15 	stw	r2,-208(fp)
  82b5b4:	e0ffc817 	ldw	r3,-224(fp)
  82b5b8:	e0bfc917 	ldw	r2,-220(fp)
  82b5bc:	1885c83a 	sub	r2,r3,r2
  82b5c0:	1085883a 	add	r2,r2,r2
  82b5c4:	1007883a 	mov	r3,r2
  82b5c8:	e0bfca17 	ldw	r2,-216(fp)
  82b5cc:	10c5c83a 	sub	r2,r2,r3
  82b5d0:	e0bfcf15 	stw	r2,-196(fp)
  82b5d4:	e0bfc217 	ldw	r2,-248(fp)
  82b5d8:	10800204 	addi	r2,r2,8
  82b5dc:	10800017 	ldw	r2,0(r2)
  82b5e0:	e0bfc915 	stw	r2,-220(fp)
  82b5e4:	e0bfc217 	ldw	r2,-248(fp)
  82b5e8:	10800604 	addi	r2,r2,24
  82b5ec:	10800017 	ldw	r2,0(r2)
  82b5f0:	e0bfca15 	stw	r2,-216(fp)
  82b5f4:	e0ffc917 	ldw	r3,-220(fp)
  82b5f8:	e0bfca17 	ldw	r2,-216(fp)
  82b5fc:	1885883a 	add	r2,r3,r2
  82b600:	0146a684 	movi	r5,6810
  82b604:	1009883a 	mov	r4,r2
  82b608:	08305040 	call	830504 <__mulsi3>
  82b60c:	e0bfc815 	stw	r2,-224(fp)
  82b610:	01441c44 	movi	r5,4209
  82b614:	e13fc917 	ldw	r4,-220(fp)
  82b618:	08305040 	call	830504 <__mulsi3>
  82b61c:	1007883a 	mov	r3,r2
  82b620:	e0bfc817 	ldw	r2,-224(fp)
  82b624:	1885883a 	add	r2,r3,r2
  82b628:	e0bfc515 	stw	r2,-236(fp)
  82b62c:	016e9704 	movi	r5,-17828
  82b630:	e13fca17 	ldw	r4,-216(fp)
  82b634:	08305040 	call	830504 <__mulsi3>
  82b638:	1007883a 	mov	r3,r2
  82b63c:	e0bfc817 	ldw	r2,-224(fp)
  82b640:	1885883a 	add	r2,r3,r2
  82b644:	e0bfc615 	stw	r2,-232(fp)
  82b648:	e0ffcb17 	ldw	r3,-212(fp)
  82b64c:	e0bfc517 	ldw	r2,-236(fp)
  82b650:	1885883a 	add	r2,r3,r2
  82b654:	e0bfd015 	stw	r2,-192(fp)
  82b658:	e0ffcb17 	ldw	r3,-212(fp)
  82b65c:	e0bfc517 	ldw	r2,-236(fp)
  82b660:	1885c83a 	sub	r2,r3,r2
  82b664:	e0bfd115 	stw	r2,-188(fp)
  82b668:	e0ffcc17 	ldw	r3,-208(fp)
  82b66c:	e0bfc617 	ldw	r2,-232(fp)
  82b670:	1885883a 	add	r2,r3,r2
  82b674:	e0bfd215 	stw	r2,-184(fp)
  82b678:	e0ffcc17 	ldw	r3,-208(fp)
  82b67c:	e0bfc617 	ldw	r2,-232(fp)
  82b680:	1885c83a 	sub	r2,r3,r2
  82b684:	e0bfd315 	stw	r2,-180(fp)
  82b688:	e0bfc217 	ldw	r2,-248(fp)
  82b68c:	10800104 	addi	r2,r2,4
  82b690:	10800017 	ldw	r2,0(r2)
  82b694:	e0bfc815 	stw	r2,-224(fp)
  82b698:	e0bfc217 	ldw	r2,-248(fp)
  82b69c:	10800304 	addi	r2,r2,12
  82b6a0:	10800017 	ldw	r2,0(r2)
  82b6a4:	e0bfc915 	stw	r2,-220(fp)
  82b6a8:	e0bfc217 	ldw	r2,-248(fp)
  82b6ac:	10800504 	addi	r2,r2,20
  82b6b0:	10800017 	ldw	r2,0(r2)
  82b6b4:	e0bfca15 	stw	r2,-216(fp)
  82b6b8:	e0bfca17 	ldw	r2,-216(fp)
  82b6bc:	1004937a 	slli	r2,r2,13
  82b6c0:	e0bfca15 	stw	r2,-216(fp)
  82b6c4:	e0bfc217 	ldw	r2,-248(fp)
  82b6c8:	10800704 	addi	r2,r2,28
  82b6cc:	10800017 	ldw	r2,0(r2)
  82b6d0:	e0bfce15 	stw	r2,-200(fp)
  82b6d4:	e0ffc917 	ldw	r3,-220(fp)
  82b6d8:	e0bfce17 	ldw	r2,-200(fp)
  82b6dc:	1885883a 	add	r2,r3,r2
  82b6e0:	e0bfcc15 	stw	r2,-208(fp)
  82b6e4:	e0ffc917 	ldw	r3,-220(fp)
  82b6e8:	e0bfce17 	ldw	r2,-200(fp)
  82b6ec:	1885c83a 	sub	r2,r3,r2
  82b6f0:	e0bfc615 	stw	r2,-232(fp)
  82b6f4:	014278c4 	movi	r5,2531
  82b6f8:	e13fc617 	ldw	r4,-232(fp)
  82b6fc:	08305040 	call	830504 <__mulsi3>
  82b700:	e0bfc515 	stw	r2,-236(fp)
  82b704:	01479bc4 	movi	r5,7791
  82b708:	e13fcc17 	ldw	r4,-208(fp)
  82b70c:	08305040 	call	830504 <__mulsi3>
  82b710:	e0bfc915 	stw	r2,-220(fp)
  82b714:	e0ffca17 	ldw	r3,-216(fp)
  82b718:	e0bfc517 	ldw	r2,-236(fp)
  82b71c:	1885883a 	add	r2,r3,r2
  82b720:	e0bfce15 	stw	r2,-200(fp)
  82b724:	014b2cc4 	movi	r5,11443
  82b728:	e13fc817 	ldw	r4,-224(fp)
  82b72c:	08305040 	call	830504 <__mulsi3>
  82b730:	1007883a 	mov	r3,r2
  82b734:	e0bfc917 	ldw	r2,-220(fp)
  82b738:	1887883a 	add	r3,r3,r2
  82b73c:	e0bfce17 	ldw	r2,-200(fp)
  82b740:	1885883a 	add	r2,r3,r2
  82b744:	e0bfcb15 	stw	r2,-212(fp)
  82b748:	0141c504 	movi	r5,1812
  82b74c:	e13fc817 	ldw	r4,-224(fp)
  82b750:	08305040 	call	830504 <__mulsi3>
  82b754:	1007883a 	mov	r3,r2
  82b758:	e0bfc917 	ldw	r2,-220(fp)
  82b75c:	1887c83a 	sub	r3,r3,r2
  82b760:	e0bfce17 	ldw	r2,-200(fp)
  82b764:	1885883a 	add	r2,r3,r2
  82b768:	e0bfc715 	stw	r2,-228(fp)
  82b76c:	0144b3c4 	movi	r5,4815
  82b770:	e13fcc17 	ldw	r4,-208(fp)
  82b774:	08305040 	call	830504 <__mulsi3>
  82b778:	e0bfc915 	stw	r2,-220(fp)
  82b77c:	e0ffca17 	ldw	r3,-216(fp)
  82b780:	e0bfc517 	ldw	r2,-236(fp)
  82b784:	1887c83a 	sub	r3,r3,r2
  82b788:	e0bfc617 	ldw	r2,-232(fp)
  82b78c:	1004933a 	slli	r2,r2,12
  82b790:	1885c83a 	sub	r2,r3,r2
  82b794:	e0bfce15 	stw	r2,-200(fp)
  82b798:	e0ffc817 	ldw	r3,-224(fp)
  82b79c:	e0bfc617 	ldw	r2,-232(fp)
  82b7a0:	1885c83a 	sub	r2,r3,r2
  82b7a4:	1006937a 	slli	r3,r2,13
  82b7a8:	e0bfca17 	ldw	r2,-216(fp)
  82b7ac:	1885c83a 	sub	r2,r3,r2
  82b7b0:	e0bfc515 	stw	r2,-236(fp)
  82b7b4:	014a14c4 	movi	r5,10323
  82b7b8:	e13fc817 	ldw	r4,-224(fp)
  82b7bc:	08305040 	call	830504 <__mulsi3>
  82b7c0:	1007883a 	mov	r3,r2
  82b7c4:	e0bfc917 	ldw	r2,-220(fp)
  82b7c8:	1887c83a 	sub	r3,r3,r2
  82b7cc:	e0bfce17 	ldw	r2,-200(fp)
  82b7d0:	1885c83a 	sub	r2,r3,r2
  82b7d4:	e0bfcc15 	stw	r2,-208(fp)
  82b7d8:	01452304 	movi	r5,5260
  82b7dc:	e13fc817 	ldw	r4,-224(fp)
  82b7e0:	08305040 	call	830504 <__mulsi3>
  82b7e4:	1007883a 	mov	r3,r2
  82b7e8:	e0bfc917 	ldw	r2,-220(fp)
  82b7ec:	1887c83a 	sub	r3,r3,r2
  82b7f0:	e0bfce17 	ldw	r2,-200(fp)
  82b7f4:	1885883a 	add	r2,r3,r2
  82b7f8:	e0bfc615 	stw	r2,-232(fp)
  82b7fc:	e0ffd017 	ldw	r3,-192(fp)
  82b800:	e0bfcb17 	ldw	r2,-212(fp)
  82b804:	1885883a 	add	r2,r3,r2
  82b808:	1005d4ba 	srai	r2,r2,18
  82b80c:	1080ffcc 	andi	r2,r2,1023
  82b810:	e0ffc417 	ldw	r3,-240(fp)
  82b814:	1885883a 	add	r2,r3,r2
  82b818:	10c00003 	ldbu	r3,0(r2)
  82b81c:	e0bfcd17 	ldw	r2,-204(fp)
  82b820:	10c00005 	stb	r3,0(r2)
  82b824:	e0bfcd17 	ldw	r2,-204(fp)
  82b828:	10800244 	addi	r2,r2,9
  82b82c:	e13fd017 	ldw	r4,-192(fp)
  82b830:	e0ffcb17 	ldw	r3,-212(fp)
  82b834:	20c7c83a 	sub	r3,r4,r3
  82b838:	1807d4ba 	srai	r3,r3,18
  82b83c:	18c0ffcc 	andi	r3,r3,1023
  82b840:	e13fc417 	ldw	r4,-240(fp)
  82b844:	20c7883a 	add	r3,r4,r3
  82b848:	18c00003 	ldbu	r3,0(r3)
  82b84c:	10c00005 	stb	r3,0(r2)
  82b850:	e0bfcd17 	ldw	r2,-204(fp)
  82b854:	10800044 	addi	r2,r2,1
  82b858:	e13fd217 	ldw	r4,-184(fp)
  82b85c:	e0ffcc17 	ldw	r3,-208(fp)
  82b860:	20c7883a 	add	r3,r4,r3
  82b864:	1807d4ba 	srai	r3,r3,18
  82b868:	18c0ffcc 	andi	r3,r3,1023
  82b86c:	e13fc417 	ldw	r4,-240(fp)
  82b870:	20c7883a 	add	r3,r4,r3
  82b874:	18c00003 	ldbu	r3,0(r3)
  82b878:	10c00005 	stb	r3,0(r2)
  82b87c:	e0bfcd17 	ldw	r2,-204(fp)
  82b880:	10800204 	addi	r2,r2,8
  82b884:	e13fd217 	ldw	r4,-184(fp)
  82b888:	e0ffcc17 	ldw	r3,-208(fp)
  82b88c:	20c7c83a 	sub	r3,r4,r3
  82b890:	1807d4ba 	srai	r3,r3,18
  82b894:	18c0ffcc 	andi	r3,r3,1023
  82b898:	e13fc417 	ldw	r4,-240(fp)
  82b89c:	20c7883a 	add	r3,r4,r3
  82b8a0:	18c00003 	ldbu	r3,0(r3)
  82b8a4:	10c00005 	stb	r3,0(r2)
  82b8a8:	e0bfcd17 	ldw	r2,-204(fp)
  82b8ac:	10800084 	addi	r2,r2,2
  82b8b0:	e13fcf17 	ldw	r4,-196(fp)
  82b8b4:	e0ffc517 	ldw	r3,-236(fp)
  82b8b8:	20c7883a 	add	r3,r4,r3
  82b8bc:	1807d4ba 	srai	r3,r3,18
  82b8c0:	18c0ffcc 	andi	r3,r3,1023
  82b8c4:	e13fc417 	ldw	r4,-240(fp)
  82b8c8:	20c7883a 	add	r3,r4,r3
  82b8cc:	18c00003 	ldbu	r3,0(r3)
  82b8d0:	10c00005 	stb	r3,0(r2)
  82b8d4:	e0bfcd17 	ldw	r2,-204(fp)
  82b8d8:	108001c4 	addi	r2,r2,7
  82b8dc:	e13fcf17 	ldw	r4,-196(fp)
  82b8e0:	e0ffc517 	ldw	r3,-236(fp)
  82b8e4:	20c7c83a 	sub	r3,r4,r3
  82b8e8:	1807d4ba 	srai	r3,r3,18
  82b8ec:	18c0ffcc 	andi	r3,r3,1023
  82b8f0:	e13fc417 	ldw	r4,-240(fp)
  82b8f4:	20c7883a 	add	r3,r4,r3
  82b8f8:	18c00003 	ldbu	r3,0(r3)
  82b8fc:	10c00005 	stb	r3,0(r2)
  82b900:	e0bfcd17 	ldw	r2,-204(fp)
  82b904:	108000c4 	addi	r2,r2,3
  82b908:	e13fd317 	ldw	r4,-180(fp)
  82b90c:	e0ffc617 	ldw	r3,-232(fp)
  82b910:	20c7883a 	add	r3,r4,r3
  82b914:	1807d4ba 	srai	r3,r3,18
  82b918:	18c0ffcc 	andi	r3,r3,1023
  82b91c:	e13fc417 	ldw	r4,-240(fp)
  82b920:	20c7883a 	add	r3,r4,r3
  82b924:	18c00003 	ldbu	r3,0(r3)
  82b928:	10c00005 	stb	r3,0(r2)
  82b92c:	e0bfcd17 	ldw	r2,-204(fp)
  82b930:	10800184 	addi	r2,r2,6
  82b934:	e13fd317 	ldw	r4,-180(fp)
  82b938:	e0ffc617 	ldw	r3,-232(fp)
  82b93c:	20c7c83a 	sub	r3,r4,r3
  82b940:	1807d4ba 	srai	r3,r3,18
  82b944:	18c0ffcc 	andi	r3,r3,1023
  82b948:	e13fc417 	ldw	r4,-240(fp)
  82b94c:	20c7883a 	add	r3,r4,r3
  82b950:	18c00003 	ldbu	r3,0(r3)
  82b954:	10c00005 	stb	r3,0(r2)
  82b958:	e0bfcd17 	ldw	r2,-204(fp)
  82b95c:	10800104 	addi	r2,r2,4
  82b960:	e13fd117 	ldw	r4,-188(fp)
  82b964:	e0ffc717 	ldw	r3,-228(fp)
  82b968:	20c7883a 	add	r3,r4,r3
  82b96c:	1807d4ba 	srai	r3,r3,18
  82b970:	18c0ffcc 	andi	r3,r3,1023
  82b974:	e13fc417 	ldw	r4,-240(fp)
  82b978:	20c7883a 	add	r3,r4,r3
  82b97c:	18c00003 	ldbu	r3,0(r3)
  82b980:	10c00005 	stb	r3,0(r2)
  82b984:	e0bfcd17 	ldw	r2,-204(fp)
  82b988:	10800144 	addi	r2,r2,5
  82b98c:	e13fd117 	ldw	r4,-188(fp)
  82b990:	e0ffc717 	ldw	r3,-228(fp)
  82b994:	20c7c83a 	sub	r3,r4,r3
  82b998:	1807d4ba 	srai	r3,r3,18
  82b99c:	18c0ffcc 	andi	r3,r3,1023
  82b9a0:	e13fc417 	ldw	r4,-240(fp)
  82b9a4:	20c7883a 	add	r3,r4,r3
  82b9a8:	18c00003 	ldbu	r3,0(r3)
  82b9ac:	10c00005 	stb	r3,0(r2)
  82b9b0:	e0bfc217 	ldw	r2,-248(fp)
  82b9b4:	10800804 	addi	r2,r2,32
  82b9b8:	e0bfc215 	stw	r2,-248(fp)
  82b9bc:	e0bfc317 	ldw	r2,-244(fp)
  82b9c0:	10800044 	addi	r2,r2,1
  82b9c4:	e0bfc315 	stw	r2,-244(fp)
  82b9c8:	e0bfc317 	ldw	r2,-244(fp)
  82b9cc:	10800150 	cmplti	r2,r2,5
  82b9d0:	103ed31e 	bne	r2,zero,82b520 <__alt_mem_epcs_flash_controller_0+0xff822520>
  82b9d4:	0001883a 	nop
  82b9d8:	e037883a 	mov	sp,fp
  82b9dc:	dfc00117 	ldw	ra,4(sp)
  82b9e0:	df000017 	ldw	fp,0(sp)
  82b9e4:	dec00204 	addi	sp,sp,8
  82b9e8:	f800283a 	ret

0082b9ec <jpeg_idct_8x4>:
  82b9ec:	deffc904 	addi	sp,sp,-220
  82b9f0:	dfc03615 	stw	ra,216(sp)
  82b9f4:	df003515 	stw	fp,212(sp)
  82b9f8:	df003504 	addi	fp,sp,212
  82b9fc:	e13ffc15 	stw	r4,-16(fp)
  82ba00:	e17ffd15 	stw	r5,-12(fp)
  82ba04:	e1bffe15 	stw	r6,-8(fp)
  82ba08:	e1ffff15 	stw	r7,-4(fp)
  82ba0c:	e0bffc17 	ldw	r2,-16(fp)
  82ba10:	10805417 	ldw	r2,336(r2)
  82ba14:	10bfa004 	addi	r2,r2,-384
  82ba18:	e0bfcf15 	stw	r2,-196(fp)
  82ba1c:	e0bffe17 	ldw	r2,-8(fp)
  82ba20:	e0bfcb15 	stw	r2,-212(fp)
  82ba24:	e0bffd17 	ldw	r2,-12(fp)
  82ba28:	10801517 	ldw	r2,84(r2)
  82ba2c:	e0bfcc15 	stw	r2,-208(fp)
  82ba30:	e0bfdc04 	addi	r2,fp,-144
  82ba34:	e0bfcd15 	stw	r2,-204(fp)
  82ba38:	e03fce15 	stw	zero,-200(fp)
  82ba3c:	00007b06 	br	82bc2c <jpeg_idct_8x4+0x240>
  82ba40:	e0bfcb17 	ldw	r2,-212(fp)
  82ba44:	1080000b 	ldhu	r2,0(r2)
  82ba48:	10ffffcc 	andi	r3,r2,65535
  82ba4c:	18e0001c 	xori	r3,r3,32768
  82ba50:	18e00004 	addi	r3,r3,-32768
  82ba54:	e0bfcc17 	ldw	r2,-208(fp)
  82ba58:	10800017 	ldw	r2,0(r2)
  82ba5c:	100b883a 	mov	r5,r2
  82ba60:	1809883a 	mov	r4,r3
  82ba64:	08305040 	call	830504 <__mulsi3>
  82ba68:	e0bfd015 	stw	r2,-192(fp)
  82ba6c:	e0bfcb17 	ldw	r2,-212(fp)
  82ba70:	10800804 	addi	r2,r2,32
  82ba74:	1080000b 	ldhu	r2,0(r2)
  82ba78:	10ffffcc 	andi	r3,r2,65535
  82ba7c:	18e0001c 	xori	r3,r3,32768
  82ba80:	18e00004 	addi	r3,r3,-32768
  82ba84:	e0bfcc17 	ldw	r2,-208(fp)
  82ba88:	10801004 	addi	r2,r2,64
  82ba8c:	10800017 	ldw	r2,0(r2)
  82ba90:	100b883a 	mov	r5,r2
  82ba94:	1809883a 	mov	r4,r3
  82ba98:	08305040 	call	830504 <__mulsi3>
  82ba9c:	e0bfd115 	stw	r2,-188(fp)
  82baa0:	e0ffd017 	ldw	r3,-192(fp)
  82baa4:	e0bfd117 	ldw	r2,-188(fp)
  82baa8:	1885883a 	add	r2,r3,r2
  82baac:	1085883a 	add	r2,r2,r2
  82bab0:	1085883a 	add	r2,r2,r2
  82bab4:	e0bfd215 	stw	r2,-184(fp)
  82bab8:	e0ffd017 	ldw	r3,-192(fp)
  82babc:	e0bfd117 	ldw	r2,-188(fp)
  82bac0:	1885c83a 	sub	r2,r3,r2
  82bac4:	1085883a 	add	r2,r2,r2
  82bac8:	1085883a 	add	r2,r2,r2
  82bacc:	e0bfd315 	stw	r2,-180(fp)
  82bad0:	e0bfcb17 	ldw	r2,-212(fp)
  82bad4:	10800404 	addi	r2,r2,16
  82bad8:	1080000b 	ldhu	r2,0(r2)
  82badc:	10ffffcc 	andi	r3,r2,65535
  82bae0:	18e0001c 	xori	r3,r3,32768
  82bae4:	18e00004 	addi	r3,r3,-32768
  82bae8:	e0bfcc17 	ldw	r2,-208(fp)
  82baec:	10800804 	addi	r2,r2,32
  82baf0:	10800017 	ldw	r2,0(r2)
  82baf4:	100b883a 	mov	r5,r2
  82baf8:	1809883a 	mov	r4,r3
  82bafc:	08305040 	call	830504 <__mulsi3>
  82bb00:	e0bfd415 	stw	r2,-176(fp)
  82bb04:	e0bfcb17 	ldw	r2,-212(fp)
  82bb08:	10800c04 	addi	r2,r2,48
  82bb0c:	1080000b 	ldhu	r2,0(r2)
  82bb10:	10ffffcc 	andi	r3,r2,65535
  82bb14:	18e0001c 	xori	r3,r3,32768
  82bb18:	18e00004 	addi	r3,r3,-32768
  82bb1c:	e0bfcc17 	ldw	r2,-208(fp)
  82bb20:	10801804 	addi	r2,r2,96
  82bb24:	10800017 	ldw	r2,0(r2)
  82bb28:	100b883a 	mov	r5,r2
  82bb2c:	1809883a 	mov	r4,r3
  82bb30:	08305040 	call	830504 <__mulsi3>
  82bb34:	e0bfd515 	stw	r2,-172(fp)
  82bb38:	e0ffd417 	ldw	r3,-176(fp)
  82bb3c:	e0bfd517 	ldw	r2,-172(fp)
  82bb40:	1885883a 	add	r2,r3,r2
  82bb44:	01445444 	movi	r5,4433
  82bb48:	1009883a 	mov	r4,r2
  82bb4c:	08305040 	call	830504 <__mulsi3>
  82bb50:	e0bfd615 	stw	r2,-168(fp)
  82bb54:	e0bfd617 	ldw	r2,-168(fp)
  82bb58:	10810004 	addi	r2,r2,1024
  82bb5c:	e0bfd615 	stw	r2,-168(fp)
  82bb60:	01461f84 	movi	r5,6270
  82bb64:	e13fd417 	ldw	r4,-176(fp)
  82bb68:	08305040 	call	830504 <__mulsi3>
  82bb6c:	1007883a 	mov	r3,r2
  82bb70:	e0bfd617 	ldw	r2,-168(fp)
  82bb74:	1885883a 	add	r2,r3,r2
  82bb78:	1005d2fa 	srai	r2,r2,11
  82bb7c:	e0bfd015 	stw	r2,-192(fp)
  82bb80:	017137c4 	movi	r5,-15137
  82bb84:	e13fd517 	ldw	r4,-172(fp)
  82bb88:	08305040 	call	830504 <__mulsi3>
  82bb8c:	1007883a 	mov	r3,r2
  82bb90:	e0bfd617 	ldw	r2,-168(fp)
  82bb94:	1885883a 	add	r2,r3,r2
  82bb98:	1005d2fa 	srai	r2,r2,11
  82bb9c:	e0bfd115 	stw	r2,-188(fp)
  82bba0:	e0ffd217 	ldw	r3,-184(fp)
  82bba4:	e0bfd017 	ldw	r2,-192(fp)
  82bba8:	1887883a 	add	r3,r3,r2
  82bbac:	e0bfcd17 	ldw	r2,-204(fp)
  82bbb0:	10c00015 	stw	r3,0(r2)
  82bbb4:	e0bfcd17 	ldw	r2,-204(fp)
  82bbb8:	10801804 	addi	r2,r2,96
  82bbbc:	e13fd217 	ldw	r4,-184(fp)
  82bbc0:	e0ffd017 	ldw	r3,-192(fp)
  82bbc4:	20c7c83a 	sub	r3,r4,r3
  82bbc8:	10c00015 	stw	r3,0(r2)
  82bbcc:	e0bfcd17 	ldw	r2,-204(fp)
  82bbd0:	10800804 	addi	r2,r2,32
  82bbd4:	e13fd317 	ldw	r4,-180(fp)
  82bbd8:	e0ffd117 	ldw	r3,-188(fp)
  82bbdc:	20c7883a 	add	r3,r4,r3
  82bbe0:	10c00015 	stw	r3,0(r2)
  82bbe4:	e0bfcd17 	ldw	r2,-204(fp)
  82bbe8:	10801004 	addi	r2,r2,64
  82bbec:	e13fd317 	ldw	r4,-180(fp)
  82bbf0:	e0ffd117 	ldw	r3,-188(fp)
  82bbf4:	20c7c83a 	sub	r3,r4,r3
  82bbf8:	10c00015 	stw	r3,0(r2)
  82bbfc:	e0bfce17 	ldw	r2,-200(fp)
  82bc00:	10800044 	addi	r2,r2,1
  82bc04:	e0bfce15 	stw	r2,-200(fp)
  82bc08:	e0bfcb17 	ldw	r2,-212(fp)
  82bc0c:	10800084 	addi	r2,r2,2
  82bc10:	e0bfcb15 	stw	r2,-212(fp)
  82bc14:	e0bfcc17 	ldw	r2,-208(fp)
  82bc18:	10800104 	addi	r2,r2,4
  82bc1c:	e0bfcc15 	stw	r2,-208(fp)
  82bc20:	e0bfcd17 	ldw	r2,-204(fp)
  82bc24:	10800104 	addi	r2,r2,4
  82bc28:	e0bfcd15 	stw	r2,-204(fp)
  82bc2c:	e0bfce17 	ldw	r2,-200(fp)
  82bc30:	10800210 	cmplti	r2,r2,8
  82bc34:	103f821e 	bne	r2,zero,82ba40 <__alt_mem_epcs_flash_controller_0+0xff822a40>
  82bc38:	e0bfdc04 	addi	r2,fp,-144
  82bc3c:	e0bfcd15 	stw	r2,-204(fp)
  82bc40:	e03fce15 	stw	zero,-200(fp)
  82bc44:	00010b06 	br	82c074 <jpeg_idct_8x4+0x688>
  82bc48:	e0bfce17 	ldw	r2,-200(fp)
  82bc4c:	1085883a 	add	r2,r2,r2
  82bc50:	1085883a 	add	r2,r2,r2
  82bc54:	1007883a 	mov	r3,r2
  82bc58:	e0bfff17 	ldw	r2,-4(fp)
  82bc5c:	10c5883a 	add	r2,r2,r3
  82bc60:	10c00017 	ldw	r3,0(r2)
  82bc64:	e0800217 	ldw	r2,8(fp)
  82bc68:	1885883a 	add	r2,r3,r2
  82bc6c:	e0bfd715 	stw	r2,-164(fp)
  82bc70:	e0bfcd17 	ldw	r2,-204(fp)
  82bc74:	10800017 	ldw	r2,0(r2)
  82bc78:	10900404 	addi	r2,r2,16400
  82bc7c:	e0bfd415 	stw	r2,-176(fp)
  82bc80:	e0bfcd17 	ldw	r2,-204(fp)
  82bc84:	10800404 	addi	r2,r2,16
  82bc88:	10800017 	ldw	r2,0(r2)
  82bc8c:	e0bfd515 	stw	r2,-172(fp)
  82bc90:	e0ffd417 	ldw	r3,-176(fp)
  82bc94:	e0bfd517 	ldw	r2,-172(fp)
  82bc98:	1885883a 	add	r2,r3,r2
  82bc9c:	1004937a 	slli	r2,r2,13
  82bca0:	e0bfd015 	stw	r2,-192(fp)
  82bca4:	e0ffd417 	ldw	r3,-176(fp)
  82bca8:	e0bfd517 	ldw	r2,-172(fp)
  82bcac:	1885c83a 	sub	r2,r3,r2
  82bcb0:	1004937a 	slli	r2,r2,13
  82bcb4:	e0bfd815 	stw	r2,-160(fp)
  82bcb8:	e0bfcd17 	ldw	r2,-204(fp)
  82bcbc:	10800204 	addi	r2,r2,8
  82bcc0:	10800017 	ldw	r2,0(r2)
  82bcc4:	e0bfd415 	stw	r2,-176(fp)
  82bcc8:	e0bfcd17 	ldw	r2,-204(fp)
  82bccc:	10800604 	addi	r2,r2,24
  82bcd0:	10800017 	ldw	r2,0(r2)
  82bcd4:	e0bfd515 	stw	r2,-172(fp)
  82bcd8:	e0ffd417 	ldw	r3,-176(fp)
  82bcdc:	e0bfd517 	ldw	r2,-172(fp)
  82bce0:	1885883a 	add	r2,r3,r2
  82bce4:	01445444 	movi	r5,4433
  82bce8:	1009883a 	mov	r4,r2
  82bcec:	08305040 	call	830504 <__mulsi3>
  82bcf0:	e0bfd615 	stw	r2,-168(fp)
  82bcf4:	01461f84 	movi	r5,6270
  82bcf8:	e13fd417 	ldw	r4,-176(fp)
  82bcfc:	08305040 	call	830504 <__mulsi3>
  82bd00:	1007883a 	mov	r3,r2
  82bd04:	e0bfd617 	ldw	r2,-168(fp)
  82bd08:	1885883a 	add	r2,r3,r2
  82bd0c:	e0bfd115 	stw	r2,-188(fp)
  82bd10:	017137c4 	movi	r5,-15137
  82bd14:	e13fd517 	ldw	r4,-172(fp)
  82bd18:	08305040 	call	830504 <__mulsi3>
  82bd1c:	1007883a 	mov	r3,r2
  82bd20:	e0bfd617 	ldw	r2,-168(fp)
  82bd24:	1885883a 	add	r2,r3,r2
  82bd28:	e0bfd915 	stw	r2,-156(fp)
  82bd2c:	e0ffd017 	ldw	r3,-192(fp)
  82bd30:	e0bfd117 	ldw	r2,-188(fp)
  82bd34:	1885883a 	add	r2,r3,r2
  82bd38:	e0bfd215 	stw	r2,-184(fp)
  82bd3c:	e0ffd017 	ldw	r3,-192(fp)
  82bd40:	e0bfd117 	ldw	r2,-188(fp)
  82bd44:	1885c83a 	sub	r2,r3,r2
  82bd48:	e0bfda15 	stw	r2,-152(fp)
  82bd4c:	e0ffd817 	ldw	r3,-160(fp)
  82bd50:	e0bfd917 	ldw	r2,-156(fp)
  82bd54:	1885883a 	add	r2,r3,r2
  82bd58:	e0bfdb15 	stw	r2,-148(fp)
  82bd5c:	e0ffd817 	ldw	r3,-160(fp)
  82bd60:	e0bfd917 	ldw	r2,-156(fp)
  82bd64:	1885c83a 	sub	r2,r3,r2
  82bd68:	e0bfd315 	stw	r2,-180(fp)
  82bd6c:	e0bfcd17 	ldw	r2,-204(fp)
  82bd70:	10800704 	addi	r2,r2,28
  82bd74:	10800017 	ldw	r2,0(r2)
  82bd78:	e0bfd015 	stw	r2,-192(fp)
  82bd7c:	e0bfcd17 	ldw	r2,-204(fp)
  82bd80:	10800504 	addi	r2,r2,20
  82bd84:	10800017 	ldw	r2,0(r2)
  82bd88:	e0bfd815 	stw	r2,-160(fp)
  82bd8c:	e0bfcd17 	ldw	r2,-204(fp)
  82bd90:	10800304 	addi	r2,r2,12
  82bd94:	10800017 	ldw	r2,0(r2)
  82bd98:	e0bfd115 	stw	r2,-188(fp)
  82bd9c:	e0bfcd17 	ldw	r2,-204(fp)
  82bda0:	10800104 	addi	r2,r2,4
  82bda4:	10800017 	ldw	r2,0(r2)
  82bda8:	e0bfd915 	stw	r2,-156(fp)
  82bdac:	e0ffd017 	ldw	r3,-192(fp)
  82bdb0:	e0bfd117 	ldw	r2,-188(fp)
  82bdb4:	1885883a 	add	r2,r3,r2
  82bdb8:	e0bfd415 	stw	r2,-176(fp)
  82bdbc:	e0ffd817 	ldw	r3,-160(fp)
  82bdc0:	e0bfd917 	ldw	r2,-156(fp)
  82bdc4:	1885883a 	add	r2,r3,r2
  82bdc8:	e0bfd515 	stw	r2,-172(fp)
  82bdcc:	e0ffd417 	ldw	r3,-176(fp)
  82bdd0:	e0bfd517 	ldw	r2,-172(fp)
  82bdd4:	1885883a 	add	r2,r3,r2
  82bdd8:	01496844 	movi	r5,9633
  82bddc:	1009883a 	mov	r4,r2
  82bde0:	08305040 	call	830504 <__mulsi3>
  82bde4:	e0bfd615 	stw	r2,-168(fp)
  82bde8:	01704ec4 	movi	r5,-16069
  82bdec:	e13fd417 	ldw	r4,-176(fp)
  82bdf0:	08305040 	call	830504 <__mulsi3>
  82bdf4:	e0bfd415 	stw	r2,-176(fp)
  82bdf8:	017ce104 	movi	r5,-3196
  82bdfc:	e13fd517 	ldw	r4,-172(fp)
  82be00:	08305040 	call	830504 <__mulsi3>
  82be04:	e0bfd515 	stw	r2,-172(fp)
  82be08:	e0ffd417 	ldw	r3,-176(fp)
  82be0c:	e0bfd617 	ldw	r2,-168(fp)
  82be10:	1885883a 	add	r2,r3,r2
  82be14:	e0bfd415 	stw	r2,-176(fp)
  82be18:	e0ffd517 	ldw	r3,-172(fp)
  82be1c:	e0bfd617 	ldw	r2,-168(fp)
  82be20:	1885883a 	add	r2,r3,r2
  82be24:	e0bfd515 	stw	r2,-172(fp)
  82be28:	e0ffd017 	ldw	r3,-192(fp)
  82be2c:	e0bfd917 	ldw	r2,-156(fp)
  82be30:	1885883a 	add	r2,r3,r2
  82be34:	0178ccc4 	movi	r5,-7373
  82be38:	1009883a 	mov	r4,r2
  82be3c:	08305040 	call	830504 <__mulsi3>
  82be40:	e0bfd615 	stw	r2,-168(fp)
  82be44:	01426384 	movi	r5,2446
  82be48:	e13fd017 	ldw	r4,-192(fp)
  82be4c:	08305040 	call	830504 <__mulsi3>
  82be50:	e0bfd015 	stw	r2,-192(fp)
  82be54:	014c02c4 	movi	r5,12299
  82be58:	e13fd917 	ldw	r4,-156(fp)
  82be5c:	08305040 	call	830504 <__mulsi3>
  82be60:	e0bfd915 	stw	r2,-156(fp)
  82be64:	e0ffd617 	ldw	r3,-168(fp)
  82be68:	e0bfd417 	ldw	r2,-176(fp)
  82be6c:	1885883a 	add	r2,r3,r2
  82be70:	e0ffd017 	ldw	r3,-192(fp)
  82be74:	1885883a 	add	r2,r3,r2
  82be78:	e0bfd015 	stw	r2,-192(fp)
  82be7c:	e0ffd617 	ldw	r3,-168(fp)
  82be80:	e0bfd517 	ldw	r2,-172(fp)
  82be84:	1885883a 	add	r2,r3,r2
  82be88:	e0ffd917 	ldw	r3,-156(fp)
  82be8c:	1885883a 	add	r2,r3,r2
  82be90:	e0bfd915 	stw	r2,-156(fp)
  82be94:	e0ffd817 	ldw	r3,-160(fp)
  82be98:	e0bfd117 	ldw	r2,-188(fp)
  82be9c:	1885883a 	add	r2,r3,r2
  82bea0:	016b7f44 	movi	r5,-20995
  82bea4:	1009883a 	mov	r4,r2
  82bea8:	08305040 	call	830504 <__mulsi3>
  82beac:	e0bfd615 	stw	r2,-168(fp)
  82beb0:	01506cc4 	movi	r5,16819
  82beb4:	e13fd817 	ldw	r4,-160(fp)
  82beb8:	08305040 	call	830504 <__mulsi3>
  82bebc:	e0bfd815 	stw	r2,-160(fp)
  82bec0:	01589504 	movi	r5,25172
  82bec4:	e13fd117 	ldw	r4,-188(fp)
  82bec8:	08305040 	call	830504 <__mulsi3>
  82becc:	e0bfd115 	stw	r2,-188(fp)
  82bed0:	e0ffd617 	ldw	r3,-168(fp)
  82bed4:	e0bfd517 	ldw	r2,-172(fp)
  82bed8:	1885883a 	add	r2,r3,r2
  82bedc:	e0ffd817 	ldw	r3,-160(fp)
  82bee0:	1885883a 	add	r2,r3,r2
  82bee4:	e0bfd815 	stw	r2,-160(fp)
  82bee8:	e0ffd617 	ldw	r3,-168(fp)
  82beec:	e0bfd417 	ldw	r2,-176(fp)
  82bef0:	1885883a 	add	r2,r3,r2
  82bef4:	e0ffd117 	ldw	r3,-188(fp)
  82bef8:	1885883a 	add	r2,r3,r2
  82befc:	e0bfd115 	stw	r2,-188(fp)
  82bf00:	e0ffd217 	ldw	r3,-184(fp)
  82bf04:	e0bfd917 	ldw	r2,-156(fp)
  82bf08:	1885883a 	add	r2,r3,r2
  82bf0c:	1005d4ba 	srai	r2,r2,18
  82bf10:	1080ffcc 	andi	r2,r2,1023
  82bf14:	e0ffcf17 	ldw	r3,-196(fp)
  82bf18:	1885883a 	add	r2,r3,r2
  82bf1c:	10c00003 	ldbu	r3,0(r2)
  82bf20:	e0bfd717 	ldw	r2,-164(fp)
  82bf24:	10c00005 	stb	r3,0(r2)
  82bf28:	e0bfd717 	ldw	r2,-164(fp)
  82bf2c:	108001c4 	addi	r2,r2,7
  82bf30:	e13fd217 	ldw	r4,-184(fp)
  82bf34:	e0ffd917 	ldw	r3,-156(fp)
  82bf38:	20c7c83a 	sub	r3,r4,r3
  82bf3c:	1807d4ba 	srai	r3,r3,18
  82bf40:	18c0ffcc 	andi	r3,r3,1023
  82bf44:	e13fcf17 	ldw	r4,-196(fp)
  82bf48:	20c7883a 	add	r3,r4,r3
  82bf4c:	18c00003 	ldbu	r3,0(r3)
  82bf50:	10c00005 	stb	r3,0(r2)
  82bf54:	e0bfd717 	ldw	r2,-164(fp)
  82bf58:	10800044 	addi	r2,r2,1
  82bf5c:	e13fdb17 	ldw	r4,-148(fp)
  82bf60:	e0ffd117 	ldw	r3,-188(fp)
  82bf64:	20c7883a 	add	r3,r4,r3
  82bf68:	1807d4ba 	srai	r3,r3,18
  82bf6c:	18c0ffcc 	andi	r3,r3,1023
  82bf70:	e13fcf17 	ldw	r4,-196(fp)
  82bf74:	20c7883a 	add	r3,r4,r3
  82bf78:	18c00003 	ldbu	r3,0(r3)
  82bf7c:	10c00005 	stb	r3,0(r2)
  82bf80:	e0bfd717 	ldw	r2,-164(fp)
  82bf84:	10800184 	addi	r2,r2,6
  82bf88:	e13fdb17 	ldw	r4,-148(fp)
  82bf8c:	e0ffd117 	ldw	r3,-188(fp)
  82bf90:	20c7c83a 	sub	r3,r4,r3
  82bf94:	1807d4ba 	srai	r3,r3,18
  82bf98:	18c0ffcc 	andi	r3,r3,1023
  82bf9c:	e13fcf17 	ldw	r4,-196(fp)
  82bfa0:	20c7883a 	add	r3,r4,r3
  82bfa4:	18c00003 	ldbu	r3,0(r3)
  82bfa8:	10c00005 	stb	r3,0(r2)
  82bfac:	e0bfd717 	ldw	r2,-164(fp)
  82bfb0:	10800084 	addi	r2,r2,2
  82bfb4:	e13fd317 	ldw	r4,-180(fp)
  82bfb8:	e0ffd817 	ldw	r3,-160(fp)
  82bfbc:	20c7883a 	add	r3,r4,r3
  82bfc0:	1807d4ba 	srai	r3,r3,18
  82bfc4:	18c0ffcc 	andi	r3,r3,1023
  82bfc8:	e13fcf17 	ldw	r4,-196(fp)
  82bfcc:	20c7883a 	add	r3,r4,r3
  82bfd0:	18c00003 	ldbu	r3,0(r3)
  82bfd4:	10c00005 	stb	r3,0(r2)
  82bfd8:	e0bfd717 	ldw	r2,-164(fp)
  82bfdc:	10800144 	addi	r2,r2,5
  82bfe0:	e13fd317 	ldw	r4,-180(fp)
  82bfe4:	e0ffd817 	ldw	r3,-160(fp)
  82bfe8:	20c7c83a 	sub	r3,r4,r3
  82bfec:	1807d4ba 	srai	r3,r3,18
  82bff0:	18c0ffcc 	andi	r3,r3,1023
  82bff4:	e13fcf17 	ldw	r4,-196(fp)
  82bff8:	20c7883a 	add	r3,r4,r3
  82bffc:	18c00003 	ldbu	r3,0(r3)
  82c000:	10c00005 	stb	r3,0(r2)
  82c004:	e0bfd717 	ldw	r2,-164(fp)
  82c008:	108000c4 	addi	r2,r2,3
  82c00c:	e13fda17 	ldw	r4,-152(fp)
  82c010:	e0ffd017 	ldw	r3,-192(fp)
  82c014:	20c7883a 	add	r3,r4,r3
  82c018:	1807d4ba 	srai	r3,r3,18
  82c01c:	18c0ffcc 	andi	r3,r3,1023
  82c020:	e13fcf17 	ldw	r4,-196(fp)
  82c024:	20c7883a 	add	r3,r4,r3
  82c028:	18c00003 	ldbu	r3,0(r3)
  82c02c:	10c00005 	stb	r3,0(r2)
  82c030:	e0bfd717 	ldw	r2,-164(fp)
  82c034:	10800104 	addi	r2,r2,4
  82c038:	e13fda17 	ldw	r4,-152(fp)
  82c03c:	e0ffd017 	ldw	r3,-192(fp)
  82c040:	20c7c83a 	sub	r3,r4,r3
  82c044:	1807d4ba 	srai	r3,r3,18
  82c048:	18c0ffcc 	andi	r3,r3,1023
  82c04c:	e13fcf17 	ldw	r4,-196(fp)
  82c050:	20c7883a 	add	r3,r4,r3
  82c054:	18c00003 	ldbu	r3,0(r3)
  82c058:	10c00005 	stb	r3,0(r2)
  82c05c:	e0bfcd17 	ldw	r2,-204(fp)
  82c060:	10800804 	addi	r2,r2,32
  82c064:	e0bfcd15 	stw	r2,-204(fp)
  82c068:	e0bfce17 	ldw	r2,-200(fp)
  82c06c:	10800044 	addi	r2,r2,1
  82c070:	e0bfce15 	stw	r2,-200(fp)
  82c074:	e0bfce17 	ldw	r2,-200(fp)
  82c078:	10800110 	cmplti	r2,r2,4
  82c07c:	103ef21e 	bne	r2,zero,82bc48 <__alt_mem_epcs_flash_controller_0+0xff822c48>
  82c080:	0001883a 	nop
  82c084:	e037883a 	mov	sp,fp
  82c088:	dfc00117 	ldw	ra,4(sp)
  82c08c:	df000017 	ldw	fp,0(sp)
  82c090:	dec00204 	addi	sp,sp,8
  82c094:	f800283a 	ret

0082c098 <jpeg_idct_6x3>:
  82c098:	deffd904 	addi	sp,sp,-156
  82c09c:	dfc02615 	stw	ra,152(sp)
  82c0a0:	df002515 	stw	fp,148(sp)
  82c0a4:	df002504 	addi	fp,sp,148
  82c0a8:	e13ffc15 	stw	r4,-16(fp)
  82c0ac:	e17ffd15 	stw	r5,-12(fp)
  82c0b0:	e1bffe15 	stw	r6,-8(fp)
  82c0b4:	e1ffff15 	stw	r7,-4(fp)
  82c0b8:	e0bffc17 	ldw	r2,-16(fp)
  82c0bc:	10805417 	ldw	r2,336(r2)
  82c0c0:	10bfa004 	addi	r2,r2,-384
  82c0c4:	e0bfdf15 	stw	r2,-132(fp)
  82c0c8:	e0bffe17 	ldw	r2,-8(fp)
  82c0cc:	e0bfdb15 	stw	r2,-148(fp)
  82c0d0:	e0bffd17 	ldw	r2,-12(fp)
  82c0d4:	10801517 	ldw	r2,84(r2)
  82c0d8:	e0bfdc15 	stw	r2,-144(fp)
  82c0dc:	e0bfea04 	addi	r2,fp,-88
  82c0e0:	e0bfdd15 	stw	r2,-140(fp)
  82c0e4:	e03fde15 	stw	zero,-136(fp)
  82c0e8:	00005b06 	br	82c258 <jpeg_idct_6x3+0x1c0>
  82c0ec:	e0bfdb17 	ldw	r2,-148(fp)
  82c0f0:	1080000b 	ldhu	r2,0(r2)
  82c0f4:	10ffffcc 	andi	r3,r2,65535
  82c0f8:	18e0001c 	xori	r3,r3,32768
  82c0fc:	18e00004 	addi	r3,r3,-32768
  82c100:	e0bfdc17 	ldw	r2,-144(fp)
  82c104:	10800017 	ldw	r2,0(r2)
  82c108:	100b883a 	mov	r5,r2
  82c10c:	1809883a 	mov	r4,r3
  82c110:	08305040 	call	830504 <__mulsi3>
  82c114:	e0bfe015 	stw	r2,-128(fp)
  82c118:	e0bfe017 	ldw	r2,-128(fp)
  82c11c:	1004937a 	slli	r2,r2,13
  82c120:	e0bfe015 	stw	r2,-128(fp)
  82c124:	e0bfe017 	ldw	r2,-128(fp)
  82c128:	10810004 	addi	r2,r2,1024
  82c12c:	e0bfe015 	stw	r2,-128(fp)
  82c130:	e0bfdb17 	ldw	r2,-148(fp)
  82c134:	10800804 	addi	r2,r2,32
  82c138:	1080000b 	ldhu	r2,0(r2)
  82c13c:	10ffffcc 	andi	r3,r2,65535
  82c140:	18e0001c 	xori	r3,r3,32768
  82c144:	18e00004 	addi	r3,r3,-32768
  82c148:	e0bfdc17 	ldw	r2,-144(fp)
  82c14c:	10801004 	addi	r2,r2,64
  82c150:	10800017 	ldw	r2,0(r2)
  82c154:	100b883a 	mov	r5,r2
  82c158:	1809883a 	mov	r4,r3
  82c15c:	08305040 	call	830504 <__mulsi3>
  82c160:	e0bfe115 	stw	r2,-124(fp)
  82c164:	0145a844 	movi	r5,5793
  82c168:	e13fe117 	ldw	r4,-124(fp)
  82c16c:	08305040 	call	830504 <__mulsi3>
  82c170:	e0bfe215 	stw	r2,-120(fp)
  82c174:	e0ffe017 	ldw	r3,-128(fp)
  82c178:	e0bfe217 	ldw	r2,-120(fp)
  82c17c:	1885883a 	add	r2,r3,r2
  82c180:	e0bfe315 	stw	r2,-116(fp)
  82c184:	e0ffe017 	ldw	r3,-128(fp)
  82c188:	e0bfe217 	ldw	r2,-120(fp)
  82c18c:	1887c83a 	sub	r3,r3,r2
  82c190:	e0bfe217 	ldw	r2,-120(fp)
  82c194:	1885c83a 	sub	r2,r3,r2
  82c198:	e0bfe115 	stw	r2,-124(fp)
  82c19c:	e0bfdb17 	ldw	r2,-148(fp)
  82c1a0:	10800404 	addi	r2,r2,16
  82c1a4:	1080000b 	ldhu	r2,0(r2)
  82c1a8:	10ffffcc 	andi	r3,r2,65535
  82c1ac:	18e0001c 	xori	r3,r3,32768
  82c1b0:	18e00004 	addi	r3,r3,-32768
  82c1b4:	e0bfdc17 	ldw	r2,-144(fp)
  82c1b8:	10800804 	addi	r2,r2,32
  82c1bc:	10800017 	ldw	r2,0(r2)
  82c1c0:	100b883a 	mov	r5,r2
  82c1c4:	1809883a 	mov	r4,r3
  82c1c8:	08305040 	call	830504 <__mulsi3>
  82c1cc:	e0bfe215 	stw	r2,-120(fp)
  82c1d0:	0149cc44 	movi	r5,10033
  82c1d4:	e13fe217 	ldw	r4,-120(fp)
  82c1d8:	08305040 	call	830504 <__mulsi3>
  82c1dc:	e0bfe015 	stw	r2,-128(fp)
  82c1e0:	e0ffe317 	ldw	r3,-116(fp)
  82c1e4:	e0bfe017 	ldw	r2,-128(fp)
  82c1e8:	1885883a 	add	r2,r3,r2
  82c1ec:	1007d2fa 	srai	r3,r2,11
  82c1f0:	e0bfdd17 	ldw	r2,-140(fp)
  82c1f4:	10c00015 	stw	r3,0(r2)
  82c1f8:	e0bfdd17 	ldw	r2,-140(fp)
  82c1fc:	10800c04 	addi	r2,r2,48
  82c200:	e13fe317 	ldw	r4,-116(fp)
  82c204:	e0ffe017 	ldw	r3,-128(fp)
  82c208:	20c7c83a 	sub	r3,r4,r3
  82c20c:	1807d2fa 	srai	r3,r3,11
  82c210:	10c00015 	stw	r3,0(r2)
  82c214:	e0bfdd17 	ldw	r2,-140(fp)
  82c218:	10800604 	addi	r2,r2,24
  82c21c:	e0ffe117 	ldw	r3,-124(fp)
  82c220:	1807d2fa 	srai	r3,r3,11
  82c224:	10c00015 	stw	r3,0(r2)
  82c228:	e0bfde17 	ldw	r2,-136(fp)
  82c22c:	10800044 	addi	r2,r2,1
  82c230:	e0bfde15 	stw	r2,-136(fp)
  82c234:	e0bfdb17 	ldw	r2,-148(fp)
  82c238:	10800084 	addi	r2,r2,2
  82c23c:	e0bfdb15 	stw	r2,-148(fp)
  82c240:	e0bfdc17 	ldw	r2,-144(fp)
  82c244:	10800104 	addi	r2,r2,4
  82c248:	e0bfdc15 	stw	r2,-144(fp)
  82c24c:	e0bfdd17 	ldw	r2,-140(fp)
  82c250:	10800104 	addi	r2,r2,4
  82c254:	e0bfdd15 	stw	r2,-140(fp)
  82c258:	e0bfde17 	ldw	r2,-136(fp)
  82c25c:	10800190 	cmplti	r2,r2,6
  82c260:	103fa21e 	bne	r2,zero,82c0ec <__alt_mem_epcs_flash_controller_0+0xff8230ec>
  82c264:	e0bfea04 	addi	r2,fp,-88
  82c268:	e0bfdd15 	stw	r2,-140(fp)
  82c26c:	e03fde15 	stw	zero,-136(fp)
  82c270:	0000a206 	br	82c4fc <jpeg_idct_6x3+0x464>
  82c274:	e0bfde17 	ldw	r2,-136(fp)
  82c278:	1085883a 	add	r2,r2,r2
  82c27c:	1085883a 	add	r2,r2,r2
  82c280:	1007883a 	mov	r3,r2
  82c284:	e0bfff17 	ldw	r2,-4(fp)
  82c288:	10c5883a 	add	r2,r2,r3
  82c28c:	10c00017 	ldw	r3,0(r2)
  82c290:	e0800217 	ldw	r2,8(fp)
  82c294:	1885883a 	add	r2,r3,r2
  82c298:	e0bfe415 	stw	r2,-112(fp)
  82c29c:	e0bfdd17 	ldw	r2,-140(fp)
  82c2a0:	10800017 	ldw	r2,0(r2)
  82c2a4:	10900404 	addi	r2,r2,16400
  82c2a8:	e0bfe015 	stw	r2,-128(fp)
  82c2ac:	e0bfe017 	ldw	r2,-128(fp)
  82c2b0:	1004937a 	slli	r2,r2,13
  82c2b4:	e0bfe015 	stw	r2,-128(fp)
  82c2b8:	e0bfdd17 	ldw	r2,-140(fp)
  82c2bc:	10800404 	addi	r2,r2,16
  82c2c0:	10800017 	ldw	r2,0(r2)
  82c2c4:	e0bfe115 	stw	r2,-124(fp)
  82c2c8:	0145a844 	movi	r5,5793
  82c2cc:	e13fe117 	ldw	r4,-124(fp)
  82c2d0:	08305040 	call	830504 <__mulsi3>
  82c2d4:	e0bfe315 	stw	r2,-116(fp)
  82c2d8:	e0ffe017 	ldw	r3,-128(fp)
  82c2dc:	e0bfe317 	ldw	r2,-116(fp)
  82c2e0:	1885883a 	add	r2,r3,r2
  82c2e4:	e0bfe515 	stw	r2,-108(fp)
  82c2e8:	e0ffe017 	ldw	r3,-128(fp)
  82c2ec:	e0bfe317 	ldw	r2,-116(fp)
  82c2f0:	1887c83a 	sub	r3,r3,r2
  82c2f4:	e0bfe317 	ldw	r2,-116(fp)
  82c2f8:	1885c83a 	sub	r2,r3,r2
  82c2fc:	e0bfe615 	stw	r2,-104(fp)
  82c300:	e0bfdd17 	ldw	r2,-140(fp)
  82c304:	10800204 	addi	r2,r2,8
  82c308:	10800017 	ldw	r2,0(r2)
  82c30c:	e0bfe315 	stw	r2,-116(fp)
  82c310:	0149cc44 	movi	r5,10033
  82c314:	e13fe317 	ldw	r4,-116(fp)
  82c318:	08305040 	call	830504 <__mulsi3>
  82c31c:	e0bfe015 	stw	r2,-128(fp)
  82c320:	e0ffe517 	ldw	r3,-108(fp)
  82c324:	e0bfe017 	ldw	r2,-128(fp)
  82c328:	1885883a 	add	r2,r3,r2
  82c32c:	e0bfe315 	stw	r2,-116(fp)
  82c330:	e0ffe517 	ldw	r3,-108(fp)
  82c334:	e0bfe017 	ldw	r2,-128(fp)
  82c338:	1885c83a 	sub	r2,r3,r2
  82c33c:	e0bfe215 	stw	r2,-120(fp)
  82c340:	e0bfdd17 	ldw	r2,-140(fp)
  82c344:	10800104 	addi	r2,r2,4
  82c348:	10800017 	ldw	r2,0(r2)
  82c34c:	e0bfe715 	stw	r2,-100(fp)
  82c350:	e0bfdd17 	ldw	r2,-140(fp)
  82c354:	10800304 	addi	r2,r2,12
  82c358:	10800017 	ldw	r2,0(r2)
  82c35c:	e0bfe815 	stw	r2,-96(fp)
  82c360:	e0bfdd17 	ldw	r2,-140(fp)
  82c364:	10800504 	addi	r2,r2,20
  82c368:	10800017 	ldw	r2,0(r2)
  82c36c:	e0bfe915 	stw	r2,-92(fp)
  82c370:	e0ffe717 	ldw	r3,-100(fp)
  82c374:	e0bfe917 	ldw	r2,-92(fp)
  82c378:	1885883a 	add	r2,r3,r2
  82c37c:	0142ed84 	movi	r5,2998
  82c380:	1009883a 	mov	r4,r2
  82c384:	08305040 	call	830504 <__mulsi3>
  82c388:	e0bfe515 	stw	r2,-108(fp)
  82c38c:	e0ffe717 	ldw	r3,-100(fp)
  82c390:	e0bfe817 	ldw	r2,-96(fp)
  82c394:	1885883a 	add	r2,r3,r2
  82c398:	1006937a 	slli	r3,r2,13
  82c39c:	e0bfe517 	ldw	r2,-108(fp)
  82c3a0:	1885883a 	add	r2,r3,r2
  82c3a4:	e0bfe015 	stw	r2,-128(fp)
  82c3a8:	e0ffe917 	ldw	r3,-92(fp)
  82c3ac:	e0bfe817 	ldw	r2,-96(fp)
  82c3b0:	1885c83a 	sub	r2,r3,r2
  82c3b4:	1006937a 	slli	r3,r2,13
  82c3b8:	e0bfe517 	ldw	r2,-108(fp)
  82c3bc:	1885883a 	add	r2,r3,r2
  82c3c0:	e0bfe115 	stw	r2,-124(fp)
  82c3c4:	e0ffe717 	ldw	r3,-100(fp)
  82c3c8:	e0bfe817 	ldw	r2,-96(fp)
  82c3cc:	1887c83a 	sub	r3,r3,r2
  82c3d0:	e0bfe917 	ldw	r2,-92(fp)
  82c3d4:	1885c83a 	sub	r2,r3,r2
  82c3d8:	1004937a 	slli	r2,r2,13
  82c3dc:	e0bfe515 	stw	r2,-108(fp)
  82c3e0:	e0ffe317 	ldw	r3,-116(fp)
  82c3e4:	e0bfe017 	ldw	r2,-128(fp)
  82c3e8:	1885883a 	add	r2,r3,r2
  82c3ec:	1005d4ba 	srai	r2,r2,18
  82c3f0:	1080ffcc 	andi	r2,r2,1023
  82c3f4:	e0ffdf17 	ldw	r3,-132(fp)
  82c3f8:	1885883a 	add	r2,r3,r2
  82c3fc:	10c00003 	ldbu	r3,0(r2)
  82c400:	e0bfe417 	ldw	r2,-112(fp)
  82c404:	10c00005 	stb	r3,0(r2)
  82c408:	e0bfe417 	ldw	r2,-112(fp)
  82c40c:	10800144 	addi	r2,r2,5
  82c410:	e13fe317 	ldw	r4,-116(fp)
  82c414:	e0ffe017 	ldw	r3,-128(fp)
  82c418:	20c7c83a 	sub	r3,r4,r3
  82c41c:	1807d4ba 	srai	r3,r3,18
  82c420:	18c0ffcc 	andi	r3,r3,1023
  82c424:	e13fdf17 	ldw	r4,-132(fp)
  82c428:	20c7883a 	add	r3,r4,r3
  82c42c:	18c00003 	ldbu	r3,0(r3)
  82c430:	10c00005 	stb	r3,0(r2)
  82c434:	e0bfe417 	ldw	r2,-112(fp)
  82c438:	10800044 	addi	r2,r2,1
  82c43c:	e13fe617 	ldw	r4,-104(fp)
  82c440:	e0ffe517 	ldw	r3,-108(fp)
  82c444:	20c7883a 	add	r3,r4,r3
  82c448:	1807d4ba 	srai	r3,r3,18
  82c44c:	18c0ffcc 	andi	r3,r3,1023
  82c450:	e13fdf17 	ldw	r4,-132(fp)
  82c454:	20c7883a 	add	r3,r4,r3
  82c458:	18c00003 	ldbu	r3,0(r3)
  82c45c:	10c00005 	stb	r3,0(r2)
  82c460:	e0bfe417 	ldw	r2,-112(fp)
  82c464:	10800104 	addi	r2,r2,4
  82c468:	e13fe617 	ldw	r4,-104(fp)
  82c46c:	e0ffe517 	ldw	r3,-108(fp)
  82c470:	20c7c83a 	sub	r3,r4,r3
  82c474:	1807d4ba 	srai	r3,r3,18
  82c478:	18c0ffcc 	andi	r3,r3,1023
  82c47c:	e13fdf17 	ldw	r4,-132(fp)
  82c480:	20c7883a 	add	r3,r4,r3
  82c484:	18c00003 	ldbu	r3,0(r3)
  82c488:	10c00005 	stb	r3,0(r2)
  82c48c:	e0bfe417 	ldw	r2,-112(fp)
  82c490:	10800084 	addi	r2,r2,2
  82c494:	e13fe217 	ldw	r4,-120(fp)
  82c498:	e0ffe117 	ldw	r3,-124(fp)
  82c49c:	20c7883a 	add	r3,r4,r3
  82c4a0:	1807d4ba 	srai	r3,r3,18
  82c4a4:	18c0ffcc 	andi	r3,r3,1023
  82c4a8:	e13fdf17 	ldw	r4,-132(fp)
  82c4ac:	20c7883a 	add	r3,r4,r3
  82c4b0:	18c00003 	ldbu	r3,0(r3)
  82c4b4:	10c00005 	stb	r3,0(r2)
  82c4b8:	e0bfe417 	ldw	r2,-112(fp)
  82c4bc:	108000c4 	addi	r2,r2,3
  82c4c0:	e13fe217 	ldw	r4,-120(fp)
  82c4c4:	e0ffe117 	ldw	r3,-124(fp)
  82c4c8:	20c7c83a 	sub	r3,r4,r3
  82c4cc:	1807d4ba 	srai	r3,r3,18
  82c4d0:	18c0ffcc 	andi	r3,r3,1023
  82c4d4:	e13fdf17 	ldw	r4,-132(fp)
  82c4d8:	20c7883a 	add	r3,r4,r3
  82c4dc:	18c00003 	ldbu	r3,0(r3)
  82c4e0:	10c00005 	stb	r3,0(r2)
  82c4e4:	e0bfdd17 	ldw	r2,-140(fp)
  82c4e8:	10800604 	addi	r2,r2,24
  82c4ec:	e0bfdd15 	stw	r2,-140(fp)
  82c4f0:	e0bfde17 	ldw	r2,-136(fp)
  82c4f4:	10800044 	addi	r2,r2,1
  82c4f8:	e0bfde15 	stw	r2,-136(fp)
  82c4fc:	e0bfde17 	ldw	r2,-136(fp)
  82c500:	108000d0 	cmplti	r2,r2,3
  82c504:	103f5b1e 	bne	r2,zero,82c274 <__alt_mem_epcs_flash_controller_0+0xff823274>
  82c508:	0001883a 	nop
  82c50c:	e037883a 	mov	sp,fp
  82c510:	dfc00117 	ldw	ra,4(sp)
  82c514:	df000017 	ldw	fp,0(sp)
  82c518:	dec00204 	addi	sp,sp,8
  82c51c:	f800283a 	ret

0082c520 <jpeg_idct_4x2>:
  82c520:	deffe504 	addi	sp,sp,-108
  82c524:	dfc01a15 	stw	ra,104(sp)
  82c528:	df001915 	stw	fp,100(sp)
  82c52c:	df001904 	addi	fp,sp,100
  82c530:	e13ffc15 	stw	r4,-16(fp)
  82c534:	e17ffd15 	stw	r5,-12(fp)
  82c538:	e1bffe15 	stw	r6,-8(fp)
  82c53c:	e1ffff15 	stw	r7,-4(fp)
  82c540:	e0bffc17 	ldw	r2,-16(fp)
  82c544:	10805417 	ldw	r2,336(r2)
  82c548:	10bfa004 	addi	r2,r2,-384
  82c54c:	e0bfeb15 	stw	r2,-84(fp)
  82c550:	e0bffe17 	ldw	r2,-8(fp)
  82c554:	e0bfe715 	stw	r2,-100(fp)
  82c558:	e0bffd17 	ldw	r2,-12(fp)
  82c55c:	10801517 	ldw	r2,84(r2)
  82c560:	e0bfe815 	stw	r2,-96(fp)
  82c564:	e0bff404 	addi	r2,fp,-48
  82c568:	e0bfe915 	stw	r2,-92(fp)
  82c56c:	e03fea15 	stw	zero,-88(fp)
  82c570:	00002f06 	br	82c630 <jpeg_idct_4x2+0x110>
  82c574:	e0bfe717 	ldw	r2,-100(fp)
  82c578:	1080000b 	ldhu	r2,0(r2)
  82c57c:	10ffffcc 	andi	r3,r2,65535
  82c580:	18e0001c 	xori	r3,r3,32768
  82c584:	18e00004 	addi	r3,r3,-32768
  82c588:	e0bfe817 	ldw	r2,-96(fp)
  82c58c:	10800017 	ldw	r2,0(r2)
  82c590:	100b883a 	mov	r5,r2
  82c594:	1809883a 	mov	r4,r3
  82c598:	08305040 	call	830504 <__mulsi3>
  82c59c:	e0bfec15 	stw	r2,-80(fp)
  82c5a0:	e0bfe717 	ldw	r2,-100(fp)
  82c5a4:	10800404 	addi	r2,r2,16
  82c5a8:	1080000b 	ldhu	r2,0(r2)
  82c5ac:	10ffffcc 	andi	r3,r2,65535
  82c5b0:	18e0001c 	xori	r3,r3,32768
  82c5b4:	18e00004 	addi	r3,r3,-32768
  82c5b8:	e0bfe817 	ldw	r2,-96(fp)
  82c5bc:	10800804 	addi	r2,r2,32
  82c5c0:	10800017 	ldw	r2,0(r2)
  82c5c4:	100b883a 	mov	r5,r2
  82c5c8:	1809883a 	mov	r4,r3
  82c5cc:	08305040 	call	830504 <__mulsi3>
  82c5d0:	e0bfed15 	stw	r2,-76(fp)
  82c5d4:	e0ffec17 	ldw	r3,-80(fp)
  82c5d8:	e0bfed17 	ldw	r2,-76(fp)
  82c5dc:	1887883a 	add	r3,r3,r2
  82c5e0:	e0bfe917 	ldw	r2,-92(fp)
  82c5e4:	10c00015 	stw	r3,0(r2)
  82c5e8:	e0bfe917 	ldw	r2,-92(fp)
  82c5ec:	10800404 	addi	r2,r2,16
  82c5f0:	e13fec17 	ldw	r4,-80(fp)
  82c5f4:	e0ffed17 	ldw	r3,-76(fp)
  82c5f8:	20c7c83a 	sub	r3,r4,r3
  82c5fc:	10c00015 	stw	r3,0(r2)
  82c600:	e0bfea17 	ldw	r2,-88(fp)
  82c604:	10800044 	addi	r2,r2,1
  82c608:	e0bfea15 	stw	r2,-88(fp)
  82c60c:	e0bfe717 	ldw	r2,-100(fp)
  82c610:	10800084 	addi	r2,r2,2
  82c614:	e0bfe715 	stw	r2,-100(fp)
  82c618:	e0bfe817 	ldw	r2,-96(fp)
  82c61c:	10800104 	addi	r2,r2,4
  82c620:	e0bfe815 	stw	r2,-96(fp)
  82c624:	e0bfe917 	ldw	r2,-92(fp)
  82c628:	10800104 	addi	r2,r2,4
  82c62c:	e0bfe915 	stw	r2,-92(fp)
  82c630:	e0bfea17 	ldw	r2,-88(fp)
  82c634:	10800110 	cmplti	r2,r2,4
  82c638:	103fce1e 	bne	r2,zero,82c574 <__alt_mem_epcs_flash_controller_0+0xff823574>
  82c63c:	e0bff404 	addi	r2,fp,-48
  82c640:	e0bfe915 	stw	r2,-92(fp)
  82c644:	e03fea15 	stw	zero,-88(fp)
  82c648:	00006706 	br	82c7e8 <jpeg_idct_4x2+0x2c8>
  82c64c:	e0bfea17 	ldw	r2,-88(fp)
  82c650:	1085883a 	add	r2,r2,r2
  82c654:	1085883a 	add	r2,r2,r2
  82c658:	1007883a 	mov	r3,r2
  82c65c:	e0bfff17 	ldw	r2,-4(fp)
  82c660:	10c5883a 	add	r2,r2,r3
  82c664:	10c00017 	ldw	r3,0(r2)
  82c668:	e0800217 	ldw	r2,8(fp)
  82c66c:	1885883a 	add	r2,r3,r2
  82c670:	e0bfee15 	stw	r2,-72(fp)
  82c674:	e0bfe917 	ldw	r2,-92(fp)
  82c678:	10800017 	ldw	r2,0(r2)
  82c67c:	10840104 	addi	r2,r2,4100
  82c680:	e0bfed15 	stw	r2,-76(fp)
  82c684:	e0bfe917 	ldw	r2,-92(fp)
  82c688:	10800217 	ldw	r2,8(r2)
  82c68c:	e0bfef15 	stw	r2,-68(fp)
  82c690:	e0ffed17 	ldw	r3,-76(fp)
  82c694:	e0bfef17 	ldw	r2,-68(fp)
  82c698:	1885883a 	add	r2,r3,r2
  82c69c:	1004937a 	slli	r2,r2,13
  82c6a0:	e0bfec15 	stw	r2,-80(fp)
  82c6a4:	e0ffed17 	ldw	r3,-76(fp)
  82c6a8:	e0bfef17 	ldw	r2,-68(fp)
  82c6ac:	1885c83a 	sub	r2,r3,r2
  82c6b0:	1004937a 	slli	r2,r2,13
  82c6b4:	e0bff015 	stw	r2,-64(fp)
  82c6b8:	e0bfe917 	ldw	r2,-92(fp)
  82c6bc:	10800117 	ldw	r2,4(r2)
  82c6c0:	e0bff115 	stw	r2,-60(fp)
  82c6c4:	e0bfe917 	ldw	r2,-92(fp)
  82c6c8:	10800317 	ldw	r2,12(r2)
  82c6cc:	e0bff215 	stw	r2,-56(fp)
  82c6d0:	e0fff117 	ldw	r3,-60(fp)
  82c6d4:	e0bff217 	ldw	r2,-56(fp)
  82c6d8:	1885883a 	add	r2,r3,r2
  82c6dc:	01445444 	movi	r5,4433
  82c6e0:	1009883a 	mov	r4,r2
  82c6e4:	08305040 	call	830504 <__mulsi3>
  82c6e8:	e0bff315 	stw	r2,-52(fp)
  82c6ec:	01461f84 	movi	r5,6270
  82c6f0:	e13ff117 	ldw	r4,-60(fp)
  82c6f4:	08305040 	call	830504 <__mulsi3>
  82c6f8:	1007883a 	mov	r3,r2
  82c6fc:	e0bff317 	ldw	r2,-52(fp)
  82c700:	1885883a 	add	r2,r3,r2
  82c704:	e0bfed15 	stw	r2,-76(fp)
  82c708:	017137c4 	movi	r5,-15137
  82c70c:	e13ff217 	ldw	r4,-56(fp)
  82c710:	08305040 	call	830504 <__mulsi3>
  82c714:	1007883a 	mov	r3,r2
  82c718:	e0bff317 	ldw	r2,-52(fp)
  82c71c:	1885883a 	add	r2,r3,r2
  82c720:	e0bfef15 	stw	r2,-68(fp)
  82c724:	e0ffec17 	ldw	r3,-80(fp)
  82c728:	e0bfed17 	ldw	r2,-76(fp)
  82c72c:	1885883a 	add	r2,r3,r2
  82c730:	1005d43a 	srai	r2,r2,16
  82c734:	1080ffcc 	andi	r2,r2,1023
  82c738:	e0ffeb17 	ldw	r3,-84(fp)
  82c73c:	1885883a 	add	r2,r3,r2
  82c740:	10c00003 	ldbu	r3,0(r2)
  82c744:	e0bfee17 	ldw	r2,-72(fp)
  82c748:	10c00005 	stb	r3,0(r2)
  82c74c:	e0bfee17 	ldw	r2,-72(fp)
  82c750:	108000c4 	addi	r2,r2,3
  82c754:	e13fec17 	ldw	r4,-80(fp)
  82c758:	e0ffed17 	ldw	r3,-76(fp)
  82c75c:	20c7c83a 	sub	r3,r4,r3
  82c760:	1807d43a 	srai	r3,r3,16
  82c764:	18c0ffcc 	andi	r3,r3,1023
  82c768:	e13feb17 	ldw	r4,-84(fp)
  82c76c:	20c7883a 	add	r3,r4,r3
  82c770:	18c00003 	ldbu	r3,0(r3)
  82c774:	10c00005 	stb	r3,0(r2)
  82c778:	e0bfee17 	ldw	r2,-72(fp)
  82c77c:	10800044 	addi	r2,r2,1
  82c780:	e13ff017 	ldw	r4,-64(fp)
  82c784:	e0ffef17 	ldw	r3,-68(fp)
  82c788:	20c7883a 	add	r3,r4,r3
  82c78c:	1807d43a 	srai	r3,r3,16
  82c790:	18c0ffcc 	andi	r3,r3,1023
  82c794:	e13feb17 	ldw	r4,-84(fp)
  82c798:	20c7883a 	add	r3,r4,r3
  82c79c:	18c00003 	ldbu	r3,0(r3)
  82c7a0:	10c00005 	stb	r3,0(r2)
  82c7a4:	e0bfee17 	ldw	r2,-72(fp)
  82c7a8:	10800084 	addi	r2,r2,2
  82c7ac:	e13ff017 	ldw	r4,-64(fp)
  82c7b0:	e0ffef17 	ldw	r3,-68(fp)
  82c7b4:	20c7c83a 	sub	r3,r4,r3
  82c7b8:	1807d43a 	srai	r3,r3,16
  82c7bc:	18c0ffcc 	andi	r3,r3,1023
  82c7c0:	e13feb17 	ldw	r4,-84(fp)
  82c7c4:	20c7883a 	add	r3,r4,r3
  82c7c8:	18c00003 	ldbu	r3,0(r3)
  82c7cc:	10c00005 	stb	r3,0(r2)
  82c7d0:	e0bfe917 	ldw	r2,-92(fp)
  82c7d4:	10800404 	addi	r2,r2,16
  82c7d8:	e0bfe915 	stw	r2,-92(fp)
  82c7dc:	e0bfea17 	ldw	r2,-88(fp)
  82c7e0:	10800044 	addi	r2,r2,1
  82c7e4:	e0bfea15 	stw	r2,-88(fp)
  82c7e8:	e0bfea17 	ldw	r2,-88(fp)
  82c7ec:	10800090 	cmplti	r2,r2,2
  82c7f0:	103f961e 	bne	r2,zero,82c64c <__alt_mem_epcs_flash_controller_0+0xff82364c>
  82c7f4:	0001883a 	nop
  82c7f8:	e037883a 	mov	sp,fp
  82c7fc:	dfc00117 	ldw	ra,4(sp)
  82c800:	df000017 	ldw	fp,0(sp)
  82c804:	dec00204 	addi	sp,sp,8
  82c808:	f800283a 	ret

0082c80c <jpeg_idct_2x1>:
  82c80c:	defff504 	addi	sp,sp,-44
  82c810:	dfc00a15 	stw	ra,40(sp)
  82c814:	df000915 	stw	fp,36(sp)
  82c818:	df000904 	addi	fp,sp,36
  82c81c:	e13ffc15 	stw	r4,-16(fp)
  82c820:	e17ffd15 	stw	r5,-12(fp)
  82c824:	e1bffe15 	stw	r6,-8(fp)
  82c828:	e1ffff15 	stw	r7,-4(fp)
  82c82c:	e0bffc17 	ldw	r2,-16(fp)
  82c830:	10805417 	ldw	r2,336(r2)
  82c834:	10bfa004 	addi	r2,r2,-384
  82c838:	e0bff715 	stw	r2,-36(fp)
  82c83c:	e0bffd17 	ldw	r2,-12(fp)
  82c840:	10801517 	ldw	r2,84(r2)
  82c844:	e0bff815 	stw	r2,-32(fp)
  82c848:	e0bfff17 	ldw	r2,-4(fp)
  82c84c:	10c00017 	ldw	r3,0(r2)
  82c850:	e0800217 	ldw	r2,8(fp)
  82c854:	1885883a 	add	r2,r3,r2
  82c858:	e0bff915 	stw	r2,-28(fp)
  82c85c:	e0bffe17 	ldw	r2,-8(fp)
  82c860:	1080000b 	ldhu	r2,0(r2)
  82c864:	10ffffcc 	andi	r3,r2,65535
  82c868:	18e0001c 	xori	r3,r3,32768
  82c86c:	18e00004 	addi	r3,r3,-32768
  82c870:	e0bff817 	ldw	r2,-32(fp)
  82c874:	10800017 	ldw	r2,0(r2)
  82c878:	100b883a 	mov	r5,r2
  82c87c:	1809883a 	mov	r4,r3
  82c880:	08305040 	call	830504 <__mulsi3>
  82c884:	e0bffa15 	stw	r2,-24(fp)
  82c888:	e0bffa17 	ldw	r2,-24(fp)
  82c88c:	10840104 	addi	r2,r2,4100
  82c890:	e0bffa15 	stw	r2,-24(fp)
  82c894:	e0bffe17 	ldw	r2,-8(fp)
  82c898:	10800084 	addi	r2,r2,2
  82c89c:	1080000b 	ldhu	r2,0(r2)
  82c8a0:	10ffffcc 	andi	r3,r2,65535
  82c8a4:	18e0001c 	xori	r3,r3,32768
  82c8a8:	18e00004 	addi	r3,r3,-32768
  82c8ac:	e0bff817 	ldw	r2,-32(fp)
  82c8b0:	10800104 	addi	r2,r2,4
  82c8b4:	10800017 	ldw	r2,0(r2)
  82c8b8:	100b883a 	mov	r5,r2
  82c8bc:	1809883a 	mov	r4,r3
  82c8c0:	08305040 	call	830504 <__mulsi3>
  82c8c4:	e0bffb15 	stw	r2,-20(fp)
  82c8c8:	e0fffa17 	ldw	r3,-24(fp)
  82c8cc:	e0bffb17 	ldw	r2,-20(fp)
  82c8d0:	1885883a 	add	r2,r3,r2
  82c8d4:	1005d0fa 	srai	r2,r2,3
  82c8d8:	1080ffcc 	andi	r2,r2,1023
  82c8dc:	e0fff717 	ldw	r3,-36(fp)
  82c8e0:	1885883a 	add	r2,r3,r2
  82c8e4:	10c00003 	ldbu	r3,0(r2)
  82c8e8:	e0bff917 	ldw	r2,-28(fp)
  82c8ec:	10c00005 	stb	r3,0(r2)
  82c8f0:	e0bff917 	ldw	r2,-28(fp)
  82c8f4:	10800044 	addi	r2,r2,1
  82c8f8:	e13ffa17 	ldw	r4,-24(fp)
  82c8fc:	e0fffb17 	ldw	r3,-20(fp)
  82c900:	20c7c83a 	sub	r3,r4,r3
  82c904:	1807d0fa 	srai	r3,r3,3
  82c908:	18c0ffcc 	andi	r3,r3,1023
  82c90c:	e13ff717 	ldw	r4,-36(fp)
  82c910:	20c7883a 	add	r3,r4,r3
  82c914:	18c00003 	ldbu	r3,0(r3)
  82c918:	10c00005 	stb	r3,0(r2)
  82c91c:	0001883a 	nop
  82c920:	e037883a 	mov	sp,fp
  82c924:	dfc00117 	ldw	ra,4(sp)
  82c928:	df000017 	ldw	fp,0(sp)
  82c92c:	dec00204 	addi	sp,sp,8
  82c930:	f800283a 	ret

0082c934 <jpeg_idct_8x16>:
  82c934:	deff5f04 	addi	sp,sp,-644
  82c938:	dfc0a015 	stw	ra,640(sp)
  82c93c:	df009f15 	stw	fp,636(sp)
  82c940:	dc009e15 	stw	r16,632(sp)
  82c944:	df009f04 	addi	fp,sp,636
  82c948:	e13ffb15 	stw	r4,-20(fp)
  82c94c:	e17ffc15 	stw	r5,-16(fp)
  82c950:	e1bffd15 	stw	r6,-12(fp)
  82c954:	e1fffe15 	stw	r7,-8(fp)
  82c958:	e0bffb17 	ldw	r2,-20(fp)
  82c95c:	10805417 	ldw	r2,336(r2)
  82c960:	10bfa004 	addi	r2,r2,-384
  82c964:	e0bf6515 	stw	r2,-620(fp)
  82c968:	e0bffd17 	ldw	r2,-12(fp)
  82c96c:	e0bf6115 	stw	r2,-636(fp)
  82c970:	e0bffc17 	ldw	r2,-16(fp)
  82c974:	10801517 	ldw	r2,84(r2)
  82c978:	e0bf6215 	stw	r2,-632(fp)
  82c97c:	e0bf7b04 	addi	r2,fp,-532
  82c980:	e0bf6315 	stw	r2,-628(fp)
  82c984:	e03f6415 	stw	zero,-624(fp)
  82c988:	0001f906 	br	82d170 <jpeg_idct_8x16+0x83c>
  82c98c:	e0bf6117 	ldw	r2,-636(fp)
  82c990:	1080000b 	ldhu	r2,0(r2)
  82c994:	10ffffcc 	andi	r3,r2,65535
  82c998:	18e0001c 	xori	r3,r3,32768
  82c99c:	18e00004 	addi	r3,r3,-32768
  82c9a0:	e0bf6217 	ldw	r2,-632(fp)
  82c9a4:	10800017 	ldw	r2,0(r2)
  82c9a8:	100b883a 	mov	r5,r2
  82c9ac:	1809883a 	mov	r4,r3
  82c9b0:	08305040 	call	830504 <__mulsi3>
  82c9b4:	e0bf6615 	stw	r2,-616(fp)
  82c9b8:	e0bf6617 	ldw	r2,-616(fp)
  82c9bc:	1004937a 	slli	r2,r2,13
  82c9c0:	e0bf6615 	stw	r2,-616(fp)
  82c9c4:	e0bf6617 	ldw	r2,-616(fp)
  82c9c8:	10810004 	addi	r2,r2,1024
  82c9cc:	e0bf6615 	stw	r2,-616(fp)
  82c9d0:	e0bf6117 	ldw	r2,-636(fp)
  82c9d4:	10801004 	addi	r2,r2,64
  82c9d8:	1080000b 	ldhu	r2,0(r2)
  82c9dc:	10ffffcc 	andi	r3,r2,65535
  82c9e0:	18e0001c 	xori	r3,r3,32768
  82c9e4:	18e00004 	addi	r3,r3,-32768
  82c9e8:	e0bf6217 	ldw	r2,-632(fp)
  82c9ec:	10802004 	addi	r2,r2,128
  82c9f0:	10800017 	ldw	r2,0(r2)
  82c9f4:	100b883a 	mov	r5,r2
  82c9f8:	1809883a 	mov	r4,r3
  82c9fc:	08305040 	call	830504 <__mulsi3>
  82ca00:	e0bf6715 	stw	r2,-612(fp)
  82ca04:	014a73c4 	movi	r5,10703
  82ca08:	e13f6717 	ldw	r4,-612(fp)
  82ca0c:	08305040 	call	830504 <__mulsi3>
  82ca10:	e0bf6815 	stw	r2,-608(fp)
  82ca14:	01445444 	movi	r5,4433
  82ca18:	e13f6717 	ldw	r4,-612(fp)
  82ca1c:	08305040 	call	830504 <__mulsi3>
  82ca20:	e0bf6915 	stw	r2,-604(fp)
  82ca24:	e0ff6617 	ldw	r3,-616(fp)
  82ca28:	e0bf6817 	ldw	r2,-608(fp)
  82ca2c:	1885883a 	add	r2,r3,r2
  82ca30:	e0bf6a15 	stw	r2,-600(fp)
  82ca34:	e0ff6617 	ldw	r3,-616(fp)
  82ca38:	e0bf6817 	ldw	r2,-608(fp)
  82ca3c:	1885c83a 	sub	r2,r3,r2
  82ca40:	e0bf6b15 	stw	r2,-596(fp)
  82ca44:	e0ff6617 	ldw	r3,-616(fp)
  82ca48:	e0bf6917 	ldw	r2,-604(fp)
  82ca4c:	1885883a 	add	r2,r3,r2
  82ca50:	e0bf6c15 	stw	r2,-592(fp)
  82ca54:	e0ff6617 	ldw	r3,-616(fp)
  82ca58:	e0bf6917 	ldw	r2,-604(fp)
  82ca5c:	1885c83a 	sub	r2,r3,r2
  82ca60:	e0bf6d15 	stw	r2,-588(fp)
  82ca64:	e0bf6117 	ldw	r2,-636(fp)
  82ca68:	10800804 	addi	r2,r2,32
  82ca6c:	1080000b 	ldhu	r2,0(r2)
  82ca70:	10ffffcc 	andi	r3,r2,65535
  82ca74:	18e0001c 	xori	r3,r3,32768
  82ca78:	18e00004 	addi	r3,r3,-32768
  82ca7c:	e0bf6217 	ldw	r2,-632(fp)
  82ca80:	10801004 	addi	r2,r2,64
  82ca84:	10800017 	ldw	r2,0(r2)
  82ca88:	100b883a 	mov	r5,r2
  82ca8c:	1809883a 	mov	r4,r3
  82ca90:	08305040 	call	830504 <__mulsi3>
  82ca94:	e0bf6715 	stw	r2,-612(fp)
  82ca98:	e0bf6117 	ldw	r2,-636(fp)
  82ca9c:	10801804 	addi	r2,r2,96
  82caa0:	1080000b 	ldhu	r2,0(r2)
  82caa4:	10ffffcc 	andi	r3,r2,65535
  82caa8:	18e0001c 	xori	r3,r3,32768
  82caac:	18e00004 	addi	r3,r3,-32768
  82cab0:	e0bf6217 	ldw	r2,-632(fp)
  82cab4:	10803004 	addi	r2,r2,192
  82cab8:	10800017 	ldw	r2,0(r2)
  82cabc:	100b883a 	mov	r5,r2
  82cac0:	1809883a 	mov	r4,r3
  82cac4:	08305040 	call	830504 <__mulsi3>
  82cac8:	e0bf6e15 	stw	r2,-584(fp)
  82cacc:	e0ff6717 	ldw	r3,-612(fp)
  82cad0:	e0bf6e17 	ldw	r2,-584(fp)
  82cad4:	1885c83a 	sub	r2,r3,r2
  82cad8:	e0bf6f15 	stw	r2,-580(fp)
  82cadc:	01423504 	movi	r5,2260
  82cae0:	e13f6f17 	ldw	r4,-580(fp)
  82cae4:	08305040 	call	830504 <__mulsi3>
  82cae8:	e0bf7015 	stw	r2,-576(fp)
  82caec:	014b18c4 	movi	r5,11363
  82caf0:	e13f6f17 	ldw	r4,-580(fp)
  82caf4:	08305040 	call	830504 <__mulsi3>
  82caf8:	e0bf6f15 	stw	r2,-580(fp)
  82cafc:	015480c4 	movi	r5,20995
  82cb00:	e13f6e17 	ldw	r4,-584(fp)
  82cb04:	08305040 	call	830504 <__mulsi3>
  82cb08:	1007883a 	mov	r3,r2
  82cb0c:	e0bf6f17 	ldw	r2,-580(fp)
  82cb10:	1885883a 	add	r2,r3,r2
  82cb14:	e0bf6615 	stw	r2,-616(fp)
  82cb18:	01473344 	movi	r5,7373
  82cb1c:	e13f6717 	ldw	r4,-612(fp)
  82cb20:	08305040 	call	830504 <__mulsi3>
  82cb24:	1007883a 	mov	r3,r2
  82cb28:	e0bf7017 	ldw	r2,-576(fp)
  82cb2c:	1885883a 	add	r2,r3,r2
  82cb30:	e0bf6815 	stw	r2,-608(fp)
  82cb34:	017b3084 	movi	r5,-4926
  82cb38:	e13f6717 	ldw	r4,-612(fp)
  82cb3c:	08305040 	call	830504 <__mulsi3>
  82cb40:	1007883a 	mov	r3,r2
  82cb44:	e0bf6f17 	ldw	r2,-580(fp)
  82cb48:	1885883a 	add	r2,r3,r2
  82cb4c:	e0bf6915 	stw	r2,-604(fp)
  82cb50:	017bec04 	movi	r5,-4176
  82cb54:	e13f6e17 	ldw	r4,-584(fp)
  82cb58:	08305040 	call	830504 <__mulsi3>
  82cb5c:	1007883a 	mov	r3,r2
  82cb60:	e0bf7017 	ldw	r2,-576(fp)
  82cb64:	1885883a 	add	r2,r3,r2
  82cb68:	e0bf7115 	stw	r2,-572(fp)
  82cb6c:	e0ff6a17 	ldw	r3,-600(fp)
  82cb70:	e0bf6617 	ldw	r2,-616(fp)
  82cb74:	1885883a 	add	r2,r3,r2
  82cb78:	e0bf7215 	stw	r2,-568(fp)
  82cb7c:	e0ff6a17 	ldw	r3,-600(fp)
  82cb80:	e0bf6617 	ldw	r2,-616(fp)
  82cb84:	1885c83a 	sub	r2,r3,r2
  82cb88:	e0bf7315 	stw	r2,-564(fp)
  82cb8c:	e0ff6c17 	ldw	r3,-592(fp)
  82cb90:	e0bf6817 	ldw	r2,-608(fp)
  82cb94:	1885883a 	add	r2,r3,r2
  82cb98:	e0bf7415 	stw	r2,-560(fp)
  82cb9c:	e0ff6c17 	ldw	r3,-592(fp)
  82cba0:	e0bf6817 	ldw	r2,-608(fp)
  82cba4:	1885c83a 	sub	r2,r3,r2
  82cba8:	e0bf7515 	stw	r2,-556(fp)
  82cbac:	e0ff6d17 	ldw	r3,-588(fp)
  82cbb0:	e0bf6917 	ldw	r2,-604(fp)
  82cbb4:	1885883a 	add	r2,r3,r2
  82cbb8:	e0bf7615 	stw	r2,-552(fp)
  82cbbc:	e0ff6d17 	ldw	r3,-588(fp)
  82cbc0:	e0bf6917 	ldw	r2,-604(fp)
  82cbc4:	1885c83a 	sub	r2,r3,r2
  82cbc8:	e0bf7715 	stw	r2,-548(fp)
  82cbcc:	e0ff6b17 	ldw	r3,-596(fp)
  82cbd0:	e0bf7117 	ldw	r2,-572(fp)
  82cbd4:	1885883a 	add	r2,r3,r2
  82cbd8:	e0bf7815 	stw	r2,-544(fp)
  82cbdc:	e0ff6b17 	ldw	r3,-596(fp)
  82cbe0:	e0bf7117 	ldw	r2,-572(fp)
  82cbe4:	1885c83a 	sub	r2,r3,r2
  82cbe8:	e0bf7915 	stw	r2,-540(fp)
  82cbec:	e0bf6117 	ldw	r2,-636(fp)
  82cbf0:	10800404 	addi	r2,r2,16
  82cbf4:	1080000b 	ldhu	r2,0(r2)
  82cbf8:	10ffffcc 	andi	r3,r2,65535
  82cbfc:	18e0001c 	xori	r3,r3,32768
  82cc00:	18e00004 	addi	r3,r3,-32768
  82cc04:	e0bf6217 	ldw	r2,-632(fp)
  82cc08:	10800804 	addi	r2,r2,32
  82cc0c:	10800017 	ldw	r2,0(r2)
  82cc10:	100b883a 	mov	r5,r2
  82cc14:	1809883a 	mov	r4,r3
  82cc18:	08305040 	call	830504 <__mulsi3>
  82cc1c:	e0bf6715 	stw	r2,-612(fp)
  82cc20:	e0bf6117 	ldw	r2,-636(fp)
  82cc24:	10800c04 	addi	r2,r2,48
  82cc28:	1080000b 	ldhu	r2,0(r2)
  82cc2c:	10ffffcc 	andi	r3,r2,65535
  82cc30:	18e0001c 	xori	r3,r3,32768
  82cc34:	18e00004 	addi	r3,r3,-32768
  82cc38:	e0bf6217 	ldw	r2,-632(fp)
  82cc3c:	10801804 	addi	r2,r2,96
  82cc40:	10800017 	ldw	r2,0(r2)
  82cc44:	100b883a 	mov	r5,r2
  82cc48:	1809883a 	mov	r4,r3
  82cc4c:	08305040 	call	830504 <__mulsi3>
  82cc50:	e0bf6e15 	stw	r2,-584(fp)
  82cc54:	e0bf6117 	ldw	r2,-636(fp)
  82cc58:	10801404 	addi	r2,r2,80
  82cc5c:	1080000b 	ldhu	r2,0(r2)
  82cc60:	10ffffcc 	andi	r3,r2,65535
  82cc64:	18e0001c 	xori	r3,r3,32768
  82cc68:	18e00004 	addi	r3,r3,-32768
  82cc6c:	e0bf6217 	ldw	r2,-632(fp)
  82cc70:	10802804 	addi	r2,r2,160
  82cc74:	10800017 	ldw	r2,0(r2)
  82cc78:	100b883a 	mov	r5,r2
  82cc7c:	1809883a 	mov	r4,r3
  82cc80:	08305040 	call	830504 <__mulsi3>
  82cc84:	e0bf6f15 	stw	r2,-580(fp)
  82cc88:	e0bf6117 	ldw	r2,-636(fp)
  82cc8c:	10801c04 	addi	r2,r2,112
  82cc90:	1080000b 	ldhu	r2,0(r2)
  82cc94:	10ffffcc 	andi	r3,r2,65535
  82cc98:	18e0001c 	xori	r3,r3,32768
  82cc9c:	18e00004 	addi	r3,r3,-32768
  82cca0:	e0bf6217 	ldw	r2,-632(fp)
  82cca4:	10803804 	addi	r2,r2,224
  82cca8:	10800017 	ldw	r2,0(r2)
  82ccac:	100b883a 	mov	r5,r2
  82ccb0:	1809883a 	mov	r4,r3
  82ccb4:	08305040 	call	830504 <__mulsi3>
  82ccb8:	e0bf7015 	stw	r2,-576(fp)
  82ccbc:	e0ff6717 	ldw	r3,-612(fp)
  82ccc0:	e0bf6f17 	ldw	r2,-580(fp)
  82ccc4:	1885883a 	add	r2,r3,r2
  82ccc8:	e0bf6b15 	stw	r2,-596(fp)
  82cccc:	e0ff6717 	ldw	r3,-612(fp)
  82ccd0:	e0bf6e17 	ldw	r2,-584(fp)
  82ccd4:	1885883a 	add	r2,r3,r2
  82ccd8:	014ad384 	movi	r5,11086
  82ccdc:	1009883a 	mov	r4,r2
  82cce0:	08305040 	call	830504 <__mulsi3>
  82cce4:	e0bf6815 	stw	r2,-608(fp)
  82cce8:	0149fa44 	movi	r5,10217
  82ccec:	e13f6b17 	ldw	r4,-596(fp)
  82ccf0:	08305040 	call	830504 <__mulsi3>
  82ccf4:	e0bf6915 	stw	r2,-604(fp)
  82ccf8:	e0ff6717 	ldw	r3,-612(fp)
  82ccfc:	e0bf7017 	ldw	r2,-576(fp)
  82cd00:	1885883a 	add	r2,r3,r2
  82cd04:	0148bf04 	movi	r5,8956
  82cd08:	1009883a 	mov	r4,r2
  82cd0c:	08305040 	call	830504 <__mulsi3>
  82cd10:	e0bf7115 	stw	r2,-572(fp)
  82cd14:	e0ff6717 	ldw	r3,-612(fp)
  82cd18:	e0bf7017 	ldw	r2,-576(fp)
  82cd1c:	1885c83a 	sub	r2,r3,r2
  82cd20:	01472d84 	movi	r5,7350
  82cd24:	1009883a 	mov	r4,r2
  82cd28:	08305040 	call	830504 <__mulsi3>
  82cd2c:	e0bf6a15 	stw	r2,-600(fp)
  82cd30:	01455544 	movi	r5,5461
  82cd34:	e13f6b17 	ldw	r4,-596(fp)
  82cd38:	08305040 	call	830504 <__mulsi3>
  82cd3c:	e0bf6b15 	stw	r2,-596(fp)
  82cd40:	e0ff6717 	ldw	r3,-612(fp)
  82cd44:	e0bf6e17 	ldw	r2,-584(fp)
  82cd48:	1885c83a 	sub	r2,r3,r2
  82cd4c:	014348c4 	movi	r5,3363
  82cd50:	1009883a 	mov	r4,r2
  82cd54:	08305040 	call	830504 <__mulsi3>
  82cd58:	e0bf6c15 	stw	r2,-592(fp)
  82cd5c:	e0ff6817 	ldw	r3,-608(fp)
  82cd60:	e0bf6917 	ldw	r2,-604(fp)
  82cd64:	1887883a 	add	r3,r3,r2
  82cd68:	e0bf7117 	ldw	r2,-572(fp)
  82cd6c:	18a1883a 	add	r16,r3,r2
  82cd70:	016db584 	movi	r5,-18730
  82cd74:	e13f6717 	ldw	r4,-612(fp)
  82cd78:	08305040 	call	830504 <__mulsi3>
  82cd7c:	8085883a 	add	r2,r16,r2
  82cd80:	e0bf6615 	stw	r2,-616(fp)
  82cd84:	e0ff6a17 	ldw	r3,-600(fp)
  82cd88:	e0bf6b17 	ldw	r2,-596(fp)
  82cd8c:	1887883a 	add	r3,r3,r2
  82cd90:	e0bf6c17 	ldw	r2,-592(fp)
  82cd94:	18a1883a 	add	r16,r3,r2
  82cd98:	01715084 	movi	r5,-15038
  82cd9c:	e13f6717 	ldw	r4,-612(fp)
  82cda0:	08305040 	call	830504 <__mulsi3>
  82cda4:	8085883a 	add	r2,r16,r2
  82cda8:	e0bf6d15 	stw	r2,-588(fp)
  82cdac:	e0ff6e17 	ldw	r3,-584(fp)
  82cdb0:	e0bf6f17 	ldw	r2,-580(fp)
  82cdb4:	1885883a 	add	r2,r3,r2
  82cdb8:	01411c04 	movi	r5,1136
  82cdbc:	1009883a 	mov	r4,r2
  82cdc0:	08305040 	call	830504 <__mulsi3>
  82cdc4:	e0bf6715 	stw	r2,-612(fp)
  82cdc8:	01409344 	movi	r5,589
  82cdcc:	e13f6e17 	ldw	r4,-584(fp)
  82cdd0:	08305040 	call	830504 <__mulsi3>
  82cdd4:	1007883a 	mov	r3,r2
  82cdd8:	e0bf6717 	ldw	r2,-612(fp)
  82cddc:	1885883a 	add	r2,r3,r2
  82cde0:	e0ff6817 	ldw	r3,-608(fp)
  82cde4:	1885883a 	add	r2,r3,r2
  82cde8:	e0bf6815 	stw	r2,-608(fp)
  82cdec:	0176fe84 	movi	r5,-9222
  82cdf0:	e13f6f17 	ldw	r4,-580(fp)
  82cdf4:	08305040 	call	830504 <__mulsi3>
  82cdf8:	1007883a 	mov	r3,r2
  82cdfc:	e0bf6717 	ldw	r2,-612(fp)
  82ce00:	1885883a 	add	r2,r3,r2
  82ce04:	e0ff6917 	ldw	r3,-604(fp)
  82ce08:	1885883a 	add	r2,r3,r2
  82ce0c:	e0bf6915 	stw	r2,-604(fp)
  82ce10:	e0ff6f17 	ldw	r3,-580(fp)
  82ce14:	e0bf6e17 	ldw	r2,-584(fp)
  82ce18:	1885c83a 	sub	r2,r3,r2
  82ce1c:	014b4244 	movi	r5,11529
  82ce20:	1009883a 	mov	r4,r2
  82ce24:	08305040 	call	830504 <__mulsi3>
  82ce28:	e0bf6715 	stw	r2,-612(fp)
  82ce2c:	0179de84 	movi	r5,-6278
  82ce30:	e13f6f17 	ldw	r4,-580(fp)
  82ce34:	08305040 	call	830504 <__mulsi3>
  82ce38:	1007883a 	mov	r3,r2
  82ce3c:	e0bf6717 	ldw	r2,-612(fp)
  82ce40:	1885883a 	add	r2,r3,r2
  82ce44:	e0ff6b17 	ldw	r3,-596(fp)
  82ce48:	1885883a 	add	r2,r3,r2
  82ce4c:	e0bf6b15 	stw	r2,-596(fp)
  82ce50:	014fc684 	movi	r5,16154
  82ce54:	e13f6e17 	ldw	r4,-584(fp)
  82ce58:	08305040 	call	830504 <__mulsi3>
  82ce5c:	1007883a 	mov	r3,r2
  82ce60:	e0bf6717 	ldw	r2,-612(fp)
  82ce64:	1885883a 	add	r2,r3,r2
  82ce68:	e0ff6c17 	ldw	r3,-592(fp)
  82ce6c:	1885883a 	add	r2,r3,r2
  82ce70:	e0bf6c15 	stw	r2,-592(fp)
  82ce74:	e0ff6e17 	ldw	r3,-584(fp)
  82ce78:	e0bf7017 	ldw	r2,-576(fp)
  82ce7c:	1885883a 	add	r2,r3,r2
  82ce80:	e0bf6e15 	stw	r2,-584(fp)
  82ce84:	017aaac4 	movi	r5,-5461
  82ce88:	e13f6e17 	ldw	r4,-584(fp)
  82ce8c:	08305040 	call	830504 <__mulsi3>
  82ce90:	e0bf6715 	stw	r2,-612(fp)
  82ce94:	e0ff6817 	ldw	r3,-608(fp)
  82ce98:	e0bf6717 	ldw	r2,-612(fp)
  82ce9c:	1885883a 	add	r2,r3,r2
  82cea0:	e0bf6815 	stw	r2,-608(fp)
  82cea4:	01488604 	movi	r5,8728
  82cea8:	e13f7017 	ldw	r4,-576(fp)
  82ceac:	08305040 	call	830504 <__mulsi3>
  82ceb0:	1007883a 	mov	r3,r2
  82ceb4:	e0bf6717 	ldw	r2,-612(fp)
  82ceb8:	1885883a 	add	r2,r3,r2
  82cebc:	e0ff7117 	ldw	r3,-572(fp)
  82cec0:	1885883a 	add	r2,r3,r2
  82cec4:	e0bf7115 	stw	r2,-572(fp)
  82cec8:	017605c4 	movi	r5,-10217
  82cecc:	e13f6e17 	ldw	r4,-584(fp)
  82ced0:	08305040 	call	830504 <__mulsi3>
  82ced4:	e0bf6e15 	stw	r2,-584(fp)
  82ced8:	01592144 	movi	r5,25733
  82cedc:	e13f7017 	ldw	r4,-576(fp)
  82cee0:	08305040 	call	830504 <__mulsi3>
  82cee4:	1007883a 	mov	r3,r2
  82cee8:	e0bf6e17 	ldw	r2,-584(fp)
  82ceec:	1885883a 	add	r2,r3,r2
  82cef0:	e0ff6a17 	ldw	r3,-600(fp)
  82cef4:	1885883a 	add	r2,r3,r2
  82cef8:	e0bf6a15 	stw	r2,-600(fp)
  82cefc:	e0ff6c17 	ldw	r3,-592(fp)
  82cf00:	e0bf6e17 	ldw	r2,-584(fp)
  82cf04:	1885883a 	add	r2,r3,r2
  82cf08:	e0bf6c15 	stw	r2,-592(fp)
  82cf0c:	e0ff6f17 	ldw	r3,-580(fp)
  82cf10:	e0bf7017 	ldw	r2,-576(fp)
  82cf14:	1885883a 	add	r2,r3,r2
  82cf18:	01752c84 	movi	r5,-11086
  82cf1c:	1009883a 	mov	r4,r2
  82cf20:	08305040 	call	830504 <__mulsi3>
  82cf24:	e0bf6e15 	stw	r2,-584(fp)
  82cf28:	e0ff6917 	ldw	r3,-604(fp)
  82cf2c:	e0bf6e17 	ldw	r2,-584(fp)
  82cf30:	1885883a 	add	r2,r3,r2
  82cf34:	e0bf6915 	stw	r2,-604(fp)
  82cf38:	e0ff7117 	ldw	r3,-572(fp)
  82cf3c:	e0bf6e17 	ldw	r2,-584(fp)
  82cf40:	1885883a 	add	r2,r3,r2
  82cf44:	e0bf7115 	stw	r2,-572(fp)
  82cf48:	e0ff7017 	ldw	r3,-576(fp)
  82cf4c:	e0bf6f17 	ldw	r2,-580(fp)
  82cf50:	1885c83a 	sub	r2,r3,r2
  82cf54:	014348c4 	movi	r5,3363
  82cf58:	1009883a 	mov	r4,r2
  82cf5c:	08305040 	call	830504 <__mulsi3>
  82cf60:	e0bf6e15 	stw	r2,-584(fp)
  82cf64:	e0ff6a17 	ldw	r3,-600(fp)
  82cf68:	e0bf6e17 	ldw	r2,-584(fp)
  82cf6c:	1885883a 	add	r2,r3,r2
  82cf70:	e0bf6a15 	stw	r2,-600(fp)
  82cf74:	e0ff6b17 	ldw	r3,-596(fp)
  82cf78:	e0bf6e17 	ldw	r2,-584(fp)
  82cf7c:	1885883a 	add	r2,r3,r2
  82cf80:	e0bf6b15 	stw	r2,-596(fp)
  82cf84:	e0ff7217 	ldw	r3,-568(fp)
  82cf88:	e0bf6617 	ldw	r2,-616(fp)
  82cf8c:	1885883a 	add	r2,r3,r2
  82cf90:	1007d2fa 	srai	r3,r2,11
  82cf94:	e0bf6317 	ldw	r2,-628(fp)
  82cf98:	10c00015 	stw	r3,0(r2)
  82cf9c:	e0bf6317 	ldw	r2,-628(fp)
  82cfa0:	10807804 	addi	r2,r2,480
  82cfa4:	e13f7217 	ldw	r4,-568(fp)
  82cfa8:	e0ff6617 	ldw	r3,-616(fp)
  82cfac:	20c7c83a 	sub	r3,r4,r3
  82cfb0:	1807d2fa 	srai	r3,r3,11
  82cfb4:	10c00015 	stw	r3,0(r2)
  82cfb8:	e0bf6317 	ldw	r2,-628(fp)
  82cfbc:	10800804 	addi	r2,r2,32
  82cfc0:	e13f7417 	ldw	r4,-560(fp)
  82cfc4:	e0ff6817 	ldw	r3,-608(fp)
  82cfc8:	20c7883a 	add	r3,r4,r3
  82cfcc:	1807d2fa 	srai	r3,r3,11
  82cfd0:	10c00015 	stw	r3,0(r2)
  82cfd4:	e0bf6317 	ldw	r2,-628(fp)
  82cfd8:	10807004 	addi	r2,r2,448
  82cfdc:	e13f7417 	ldw	r4,-560(fp)
  82cfe0:	e0ff6817 	ldw	r3,-608(fp)
  82cfe4:	20c7c83a 	sub	r3,r4,r3
  82cfe8:	1807d2fa 	srai	r3,r3,11
  82cfec:	10c00015 	stw	r3,0(r2)
  82cff0:	e0bf6317 	ldw	r2,-628(fp)
  82cff4:	10801004 	addi	r2,r2,64
  82cff8:	e13f7617 	ldw	r4,-552(fp)
  82cffc:	e0ff6917 	ldw	r3,-604(fp)
  82d000:	20c7883a 	add	r3,r4,r3
  82d004:	1807d2fa 	srai	r3,r3,11
  82d008:	10c00015 	stw	r3,0(r2)
  82d00c:	e0bf6317 	ldw	r2,-628(fp)
  82d010:	10806804 	addi	r2,r2,416
  82d014:	e13f7617 	ldw	r4,-552(fp)
  82d018:	e0ff6917 	ldw	r3,-604(fp)
  82d01c:	20c7c83a 	sub	r3,r4,r3
  82d020:	1807d2fa 	srai	r3,r3,11
  82d024:	10c00015 	stw	r3,0(r2)
  82d028:	e0bf6317 	ldw	r2,-628(fp)
  82d02c:	10801804 	addi	r2,r2,96
  82d030:	e13f7817 	ldw	r4,-544(fp)
  82d034:	e0ff7117 	ldw	r3,-572(fp)
  82d038:	20c7883a 	add	r3,r4,r3
  82d03c:	1807d2fa 	srai	r3,r3,11
  82d040:	10c00015 	stw	r3,0(r2)
  82d044:	e0bf6317 	ldw	r2,-628(fp)
  82d048:	10806004 	addi	r2,r2,384
  82d04c:	e13f7817 	ldw	r4,-544(fp)
  82d050:	e0ff7117 	ldw	r3,-572(fp)
  82d054:	20c7c83a 	sub	r3,r4,r3
  82d058:	1807d2fa 	srai	r3,r3,11
  82d05c:	10c00015 	stw	r3,0(r2)
  82d060:	e0bf6317 	ldw	r2,-628(fp)
  82d064:	10802004 	addi	r2,r2,128
  82d068:	e13f7917 	ldw	r4,-540(fp)
  82d06c:	e0ff6a17 	ldw	r3,-600(fp)
  82d070:	20c7883a 	add	r3,r4,r3
  82d074:	1807d2fa 	srai	r3,r3,11
  82d078:	10c00015 	stw	r3,0(r2)
  82d07c:	e0bf6317 	ldw	r2,-628(fp)
  82d080:	10805804 	addi	r2,r2,352
  82d084:	e13f7917 	ldw	r4,-540(fp)
  82d088:	e0ff6a17 	ldw	r3,-600(fp)
  82d08c:	20c7c83a 	sub	r3,r4,r3
  82d090:	1807d2fa 	srai	r3,r3,11
  82d094:	10c00015 	stw	r3,0(r2)
  82d098:	e0bf6317 	ldw	r2,-628(fp)
  82d09c:	10802804 	addi	r2,r2,160
  82d0a0:	e13f7717 	ldw	r4,-548(fp)
  82d0a4:	e0ff6b17 	ldw	r3,-596(fp)
  82d0a8:	20c7883a 	add	r3,r4,r3
  82d0ac:	1807d2fa 	srai	r3,r3,11
  82d0b0:	10c00015 	stw	r3,0(r2)
  82d0b4:	e0bf6317 	ldw	r2,-628(fp)
  82d0b8:	10805004 	addi	r2,r2,320
  82d0bc:	e13f7717 	ldw	r4,-548(fp)
  82d0c0:	e0ff6b17 	ldw	r3,-596(fp)
  82d0c4:	20c7c83a 	sub	r3,r4,r3
  82d0c8:	1807d2fa 	srai	r3,r3,11
  82d0cc:	10c00015 	stw	r3,0(r2)
  82d0d0:	e0bf6317 	ldw	r2,-628(fp)
  82d0d4:	10803004 	addi	r2,r2,192
  82d0d8:	e13f7517 	ldw	r4,-556(fp)
  82d0dc:	e0ff6c17 	ldw	r3,-592(fp)
  82d0e0:	20c7883a 	add	r3,r4,r3
  82d0e4:	1807d2fa 	srai	r3,r3,11
  82d0e8:	10c00015 	stw	r3,0(r2)
  82d0ec:	e0bf6317 	ldw	r2,-628(fp)
  82d0f0:	10804804 	addi	r2,r2,288
  82d0f4:	e13f7517 	ldw	r4,-556(fp)
  82d0f8:	e0ff6c17 	ldw	r3,-592(fp)
  82d0fc:	20c7c83a 	sub	r3,r4,r3
  82d100:	1807d2fa 	srai	r3,r3,11
  82d104:	10c00015 	stw	r3,0(r2)
  82d108:	e0bf6317 	ldw	r2,-628(fp)
  82d10c:	10803804 	addi	r2,r2,224
  82d110:	e13f7317 	ldw	r4,-564(fp)
  82d114:	e0ff6d17 	ldw	r3,-588(fp)
  82d118:	20c7883a 	add	r3,r4,r3
  82d11c:	1807d2fa 	srai	r3,r3,11
  82d120:	10c00015 	stw	r3,0(r2)
  82d124:	e0bf6317 	ldw	r2,-628(fp)
  82d128:	10804004 	addi	r2,r2,256
  82d12c:	e13f7317 	ldw	r4,-564(fp)
  82d130:	e0ff6d17 	ldw	r3,-588(fp)
  82d134:	20c7c83a 	sub	r3,r4,r3
  82d138:	1807d2fa 	srai	r3,r3,11
  82d13c:	10c00015 	stw	r3,0(r2)
  82d140:	e0bf6417 	ldw	r2,-624(fp)
  82d144:	10800044 	addi	r2,r2,1
  82d148:	e0bf6415 	stw	r2,-624(fp)
  82d14c:	e0bf6117 	ldw	r2,-636(fp)
  82d150:	10800084 	addi	r2,r2,2
  82d154:	e0bf6115 	stw	r2,-636(fp)
  82d158:	e0bf6217 	ldw	r2,-632(fp)
  82d15c:	10800104 	addi	r2,r2,4
  82d160:	e0bf6215 	stw	r2,-632(fp)
  82d164:	e0bf6317 	ldw	r2,-628(fp)
  82d168:	10800104 	addi	r2,r2,4
  82d16c:	e0bf6315 	stw	r2,-628(fp)
  82d170:	e0bf6417 	ldw	r2,-624(fp)
  82d174:	10800210 	cmplti	r2,r2,8
  82d178:	103e041e 	bne	r2,zero,82c98c <__alt_mem_epcs_flash_controller_0+0xff82398c>
  82d17c:	e0bf7b04 	addi	r2,fp,-532
  82d180:	e0bf6315 	stw	r2,-628(fp)
  82d184:	e03f6415 	stw	zero,-624(fp)
  82d188:	00010b06 	br	82d5b8 <jpeg_idct_8x16+0xc84>
  82d18c:	e0bf6417 	ldw	r2,-624(fp)
  82d190:	1085883a 	add	r2,r2,r2
  82d194:	1085883a 	add	r2,r2,r2
  82d198:	1007883a 	mov	r3,r2
  82d19c:	e0bffe17 	ldw	r2,-8(fp)
  82d1a0:	10c5883a 	add	r2,r2,r3
  82d1a4:	10c00017 	ldw	r3,0(r2)
  82d1a8:	e0800217 	ldw	r2,8(fp)
  82d1ac:	1885883a 	add	r2,r3,r2
  82d1b0:	e0bf7a15 	stw	r2,-536(fp)
  82d1b4:	e0bf6317 	ldw	r2,-628(fp)
  82d1b8:	10800017 	ldw	r2,0(r2)
  82d1bc:	10900404 	addi	r2,r2,16400
  82d1c0:	e0bf6e15 	stw	r2,-584(fp)
  82d1c4:	e0bf6317 	ldw	r2,-628(fp)
  82d1c8:	10800404 	addi	r2,r2,16
  82d1cc:	10800017 	ldw	r2,0(r2)
  82d1d0:	e0bf6f15 	stw	r2,-580(fp)
  82d1d4:	e0ff6e17 	ldw	r3,-584(fp)
  82d1d8:	e0bf6f17 	ldw	r2,-580(fp)
  82d1dc:	1885883a 	add	r2,r3,r2
  82d1e0:	1004937a 	slli	r2,r2,13
  82d1e4:	e0bf6615 	stw	r2,-616(fp)
  82d1e8:	e0ff6e17 	ldw	r3,-584(fp)
  82d1ec:	e0bf6f17 	ldw	r2,-580(fp)
  82d1f0:	1885c83a 	sub	r2,r3,r2
  82d1f4:	1004937a 	slli	r2,r2,13
  82d1f8:	e0bf6815 	stw	r2,-608(fp)
  82d1fc:	e0bf6317 	ldw	r2,-628(fp)
  82d200:	10800204 	addi	r2,r2,8
  82d204:	10800017 	ldw	r2,0(r2)
  82d208:	e0bf6e15 	stw	r2,-584(fp)
  82d20c:	e0bf6317 	ldw	r2,-628(fp)
  82d210:	10800604 	addi	r2,r2,24
  82d214:	10800017 	ldw	r2,0(r2)
  82d218:	e0bf6f15 	stw	r2,-580(fp)
  82d21c:	e0ff6e17 	ldw	r3,-584(fp)
  82d220:	e0bf6f17 	ldw	r2,-580(fp)
  82d224:	1885883a 	add	r2,r3,r2
  82d228:	01445444 	movi	r5,4433
  82d22c:	1009883a 	mov	r4,r2
  82d230:	08305040 	call	830504 <__mulsi3>
  82d234:	e0bf6715 	stw	r2,-612(fp)
  82d238:	01461f84 	movi	r5,6270
  82d23c:	e13f6e17 	ldw	r4,-584(fp)
  82d240:	08305040 	call	830504 <__mulsi3>
  82d244:	1007883a 	mov	r3,r2
  82d248:	e0bf6717 	ldw	r2,-612(fp)
  82d24c:	1885883a 	add	r2,r3,r2
  82d250:	e0bf6915 	stw	r2,-604(fp)
  82d254:	017137c4 	movi	r5,-15137
  82d258:	e13f6f17 	ldw	r4,-580(fp)
  82d25c:	08305040 	call	830504 <__mulsi3>
  82d260:	1007883a 	mov	r3,r2
  82d264:	e0bf6717 	ldw	r2,-612(fp)
  82d268:	1885883a 	add	r2,r3,r2
  82d26c:	e0bf7115 	stw	r2,-572(fp)
  82d270:	e0ff6617 	ldw	r3,-616(fp)
  82d274:	e0bf6917 	ldw	r2,-604(fp)
  82d278:	1885883a 	add	r2,r3,r2
  82d27c:	e0bf6a15 	stw	r2,-600(fp)
  82d280:	e0ff6617 	ldw	r3,-616(fp)
  82d284:	e0bf6917 	ldw	r2,-604(fp)
  82d288:	1885c83a 	sub	r2,r3,r2
  82d28c:	e0bf6d15 	stw	r2,-588(fp)
  82d290:	e0ff6817 	ldw	r3,-608(fp)
  82d294:	e0bf7117 	ldw	r2,-572(fp)
  82d298:	1885883a 	add	r2,r3,r2
  82d29c:	e0bf6b15 	stw	r2,-596(fp)
  82d2a0:	e0ff6817 	ldw	r3,-608(fp)
  82d2a4:	e0bf7117 	ldw	r2,-572(fp)
  82d2a8:	1885c83a 	sub	r2,r3,r2
  82d2ac:	e0bf6c15 	stw	r2,-592(fp)
  82d2b0:	e0bf6317 	ldw	r2,-628(fp)
  82d2b4:	10800704 	addi	r2,r2,28
  82d2b8:	10800017 	ldw	r2,0(r2)
  82d2bc:	e0bf6615 	stw	r2,-616(fp)
  82d2c0:	e0bf6317 	ldw	r2,-628(fp)
  82d2c4:	10800504 	addi	r2,r2,20
  82d2c8:	10800017 	ldw	r2,0(r2)
  82d2cc:	e0bf6815 	stw	r2,-608(fp)
  82d2d0:	e0bf6317 	ldw	r2,-628(fp)
  82d2d4:	10800304 	addi	r2,r2,12
  82d2d8:	10800017 	ldw	r2,0(r2)
  82d2dc:	e0bf6915 	stw	r2,-604(fp)
  82d2e0:	e0bf6317 	ldw	r2,-628(fp)
  82d2e4:	10800104 	addi	r2,r2,4
  82d2e8:	10800017 	ldw	r2,0(r2)
  82d2ec:	e0bf7115 	stw	r2,-572(fp)
  82d2f0:	e0ff6617 	ldw	r3,-616(fp)
  82d2f4:	e0bf6917 	ldw	r2,-604(fp)
  82d2f8:	1885883a 	add	r2,r3,r2
  82d2fc:	e0bf6e15 	stw	r2,-584(fp)
  82d300:	e0ff6817 	ldw	r3,-608(fp)
  82d304:	e0bf7117 	ldw	r2,-572(fp)
  82d308:	1885883a 	add	r2,r3,r2
  82d30c:	e0bf6f15 	stw	r2,-580(fp)
  82d310:	e0ff6e17 	ldw	r3,-584(fp)
  82d314:	e0bf6f17 	ldw	r2,-580(fp)
  82d318:	1885883a 	add	r2,r3,r2
  82d31c:	01496844 	movi	r5,9633
  82d320:	1009883a 	mov	r4,r2
  82d324:	08305040 	call	830504 <__mulsi3>
  82d328:	e0bf6715 	stw	r2,-612(fp)
  82d32c:	01704ec4 	movi	r5,-16069
  82d330:	e13f6e17 	ldw	r4,-584(fp)
  82d334:	08305040 	call	830504 <__mulsi3>
  82d338:	e0bf6e15 	stw	r2,-584(fp)
  82d33c:	017ce104 	movi	r5,-3196
  82d340:	e13f6f17 	ldw	r4,-580(fp)
  82d344:	08305040 	call	830504 <__mulsi3>
  82d348:	e0bf6f15 	stw	r2,-580(fp)
  82d34c:	e0ff6e17 	ldw	r3,-584(fp)
  82d350:	e0bf6717 	ldw	r2,-612(fp)
  82d354:	1885883a 	add	r2,r3,r2
  82d358:	e0bf6e15 	stw	r2,-584(fp)
  82d35c:	e0ff6f17 	ldw	r3,-580(fp)
  82d360:	e0bf6717 	ldw	r2,-612(fp)
  82d364:	1885883a 	add	r2,r3,r2
  82d368:	e0bf6f15 	stw	r2,-580(fp)
  82d36c:	e0ff6617 	ldw	r3,-616(fp)
  82d370:	e0bf7117 	ldw	r2,-572(fp)
  82d374:	1885883a 	add	r2,r3,r2
  82d378:	0178ccc4 	movi	r5,-7373
  82d37c:	1009883a 	mov	r4,r2
  82d380:	08305040 	call	830504 <__mulsi3>
  82d384:	e0bf6715 	stw	r2,-612(fp)
  82d388:	01426384 	movi	r5,2446
  82d38c:	e13f6617 	ldw	r4,-616(fp)
  82d390:	08305040 	call	830504 <__mulsi3>
  82d394:	e0bf6615 	stw	r2,-616(fp)
  82d398:	014c02c4 	movi	r5,12299
  82d39c:	e13f7117 	ldw	r4,-572(fp)
  82d3a0:	08305040 	call	830504 <__mulsi3>
  82d3a4:	e0bf7115 	stw	r2,-572(fp)
  82d3a8:	e0ff6717 	ldw	r3,-612(fp)
  82d3ac:	e0bf6e17 	ldw	r2,-584(fp)
  82d3b0:	1885883a 	add	r2,r3,r2
  82d3b4:	e0ff6617 	ldw	r3,-616(fp)
  82d3b8:	1885883a 	add	r2,r3,r2
  82d3bc:	e0bf6615 	stw	r2,-616(fp)
  82d3c0:	e0ff6717 	ldw	r3,-612(fp)
  82d3c4:	e0bf6f17 	ldw	r2,-580(fp)
  82d3c8:	1885883a 	add	r2,r3,r2
  82d3cc:	e0ff7117 	ldw	r3,-572(fp)
  82d3d0:	1885883a 	add	r2,r3,r2
  82d3d4:	e0bf7115 	stw	r2,-572(fp)
  82d3d8:	e0ff6817 	ldw	r3,-608(fp)
  82d3dc:	e0bf6917 	ldw	r2,-604(fp)
  82d3e0:	1885883a 	add	r2,r3,r2
  82d3e4:	016b7f44 	movi	r5,-20995
  82d3e8:	1009883a 	mov	r4,r2
  82d3ec:	08305040 	call	830504 <__mulsi3>
  82d3f0:	e0bf6715 	stw	r2,-612(fp)
  82d3f4:	01506cc4 	movi	r5,16819
  82d3f8:	e13f6817 	ldw	r4,-608(fp)
  82d3fc:	08305040 	call	830504 <__mulsi3>
  82d400:	e0bf6815 	stw	r2,-608(fp)
  82d404:	01589504 	movi	r5,25172
  82d408:	e13f6917 	ldw	r4,-604(fp)
  82d40c:	08305040 	call	830504 <__mulsi3>
  82d410:	e0bf6915 	stw	r2,-604(fp)
  82d414:	e0ff6717 	ldw	r3,-612(fp)
  82d418:	e0bf6f17 	ldw	r2,-580(fp)
  82d41c:	1885883a 	add	r2,r3,r2
  82d420:	e0ff6817 	ldw	r3,-608(fp)
  82d424:	1885883a 	add	r2,r3,r2
  82d428:	e0bf6815 	stw	r2,-608(fp)
  82d42c:	e0ff6717 	ldw	r3,-612(fp)
  82d430:	e0bf6e17 	ldw	r2,-584(fp)
  82d434:	1885883a 	add	r2,r3,r2
  82d438:	e0ff6917 	ldw	r3,-604(fp)
  82d43c:	1885883a 	add	r2,r3,r2
  82d440:	e0bf6915 	stw	r2,-604(fp)
  82d444:	e0ff6a17 	ldw	r3,-600(fp)
  82d448:	e0bf7117 	ldw	r2,-572(fp)
  82d44c:	1885883a 	add	r2,r3,r2
  82d450:	1005d4ba 	srai	r2,r2,18
  82d454:	1080ffcc 	andi	r2,r2,1023
  82d458:	e0ff6517 	ldw	r3,-620(fp)
  82d45c:	1885883a 	add	r2,r3,r2
  82d460:	10c00003 	ldbu	r3,0(r2)
  82d464:	e0bf7a17 	ldw	r2,-536(fp)
  82d468:	10c00005 	stb	r3,0(r2)
  82d46c:	e0bf7a17 	ldw	r2,-536(fp)
  82d470:	108001c4 	addi	r2,r2,7
  82d474:	e13f6a17 	ldw	r4,-600(fp)
  82d478:	e0ff7117 	ldw	r3,-572(fp)
  82d47c:	20c7c83a 	sub	r3,r4,r3
  82d480:	1807d4ba 	srai	r3,r3,18
  82d484:	18c0ffcc 	andi	r3,r3,1023
  82d488:	e13f6517 	ldw	r4,-620(fp)
  82d48c:	20c7883a 	add	r3,r4,r3
  82d490:	18c00003 	ldbu	r3,0(r3)
  82d494:	10c00005 	stb	r3,0(r2)
  82d498:	e0bf7a17 	ldw	r2,-536(fp)
  82d49c:	10800044 	addi	r2,r2,1
  82d4a0:	e13f6b17 	ldw	r4,-596(fp)
  82d4a4:	e0ff6917 	ldw	r3,-604(fp)
  82d4a8:	20c7883a 	add	r3,r4,r3
  82d4ac:	1807d4ba 	srai	r3,r3,18
  82d4b0:	18c0ffcc 	andi	r3,r3,1023
  82d4b4:	e13f6517 	ldw	r4,-620(fp)
  82d4b8:	20c7883a 	add	r3,r4,r3
  82d4bc:	18c00003 	ldbu	r3,0(r3)
  82d4c0:	10c00005 	stb	r3,0(r2)
  82d4c4:	e0bf7a17 	ldw	r2,-536(fp)
  82d4c8:	10800184 	addi	r2,r2,6
  82d4cc:	e13f6b17 	ldw	r4,-596(fp)
  82d4d0:	e0ff6917 	ldw	r3,-604(fp)
  82d4d4:	20c7c83a 	sub	r3,r4,r3
  82d4d8:	1807d4ba 	srai	r3,r3,18
  82d4dc:	18c0ffcc 	andi	r3,r3,1023
  82d4e0:	e13f6517 	ldw	r4,-620(fp)
  82d4e4:	20c7883a 	add	r3,r4,r3
  82d4e8:	18c00003 	ldbu	r3,0(r3)
  82d4ec:	10c00005 	stb	r3,0(r2)
  82d4f0:	e0bf7a17 	ldw	r2,-536(fp)
  82d4f4:	10800084 	addi	r2,r2,2
  82d4f8:	e13f6c17 	ldw	r4,-592(fp)
  82d4fc:	e0ff6817 	ldw	r3,-608(fp)
  82d500:	20c7883a 	add	r3,r4,r3
  82d504:	1807d4ba 	srai	r3,r3,18
  82d508:	18c0ffcc 	andi	r3,r3,1023
  82d50c:	e13f6517 	ldw	r4,-620(fp)
  82d510:	20c7883a 	add	r3,r4,r3
  82d514:	18c00003 	ldbu	r3,0(r3)
  82d518:	10c00005 	stb	r3,0(r2)
  82d51c:	e0bf7a17 	ldw	r2,-536(fp)
  82d520:	10800144 	addi	r2,r2,5
  82d524:	e13f6c17 	ldw	r4,-592(fp)
  82d528:	e0ff6817 	ldw	r3,-608(fp)
  82d52c:	20c7c83a 	sub	r3,r4,r3
  82d530:	1807d4ba 	srai	r3,r3,18
  82d534:	18c0ffcc 	andi	r3,r3,1023
  82d538:	e13f6517 	ldw	r4,-620(fp)
  82d53c:	20c7883a 	add	r3,r4,r3
  82d540:	18c00003 	ldbu	r3,0(r3)
  82d544:	10c00005 	stb	r3,0(r2)
  82d548:	e0bf7a17 	ldw	r2,-536(fp)
  82d54c:	108000c4 	addi	r2,r2,3
  82d550:	e13f6d17 	ldw	r4,-588(fp)
  82d554:	e0ff6617 	ldw	r3,-616(fp)
  82d558:	20c7883a 	add	r3,r4,r3
  82d55c:	1807d4ba 	srai	r3,r3,18
  82d560:	18c0ffcc 	andi	r3,r3,1023
  82d564:	e13f6517 	ldw	r4,-620(fp)
  82d568:	20c7883a 	add	r3,r4,r3
  82d56c:	18c00003 	ldbu	r3,0(r3)
  82d570:	10c00005 	stb	r3,0(r2)
  82d574:	e0bf7a17 	ldw	r2,-536(fp)
  82d578:	10800104 	addi	r2,r2,4
  82d57c:	e13f6d17 	ldw	r4,-588(fp)
  82d580:	e0ff6617 	ldw	r3,-616(fp)
  82d584:	20c7c83a 	sub	r3,r4,r3
  82d588:	1807d4ba 	srai	r3,r3,18
  82d58c:	18c0ffcc 	andi	r3,r3,1023
  82d590:	e13f6517 	ldw	r4,-620(fp)
  82d594:	20c7883a 	add	r3,r4,r3
  82d598:	18c00003 	ldbu	r3,0(r3)
  82d59c:	10c00005 	stb	r3,0(r2)
  82d5a0:	e0bf6317 	ldw	r2,-628(fp)
  82d5a4:	10800804 	addi	r2,r2,32
  82d5a8:	e0bf6315 	stw	r2,-628(fp)
  82d5ac:	e0bf6417 	ldw	r2,-624(fp)
  82d5b0:	10800044 	addi	r2,r2,1
  82d5b4:	e0bf6415 	stw	r2,-624(fp)
  82d5b8:	e0bf6417 	ldw	r2,-624(fp)
  82d5bc:	10800410 	cmplti	r2,r2,16
  82d5c0:	103ef21e 	bne	r2,zero,82d18c <__alt_mem_epcs_flash_controller_0+0xff82418c>
  82d5c4:	0001883a 	nop
  82d5c8:	e6ffff04 	addi	sp,fp,-4
  82d5cc:	dfc00217 	ldw	ra,8(sp)
  82d5d0:	df000117 	ldw	fp,4(sp)
  82d5d4:	dc000017 	ldw	r16,0(sp)
  82d5d8:	dec00304 	addi	sp,sp,12
  82d5dc:	f800283a 	ret

0082d5e0 <jpeg_idct_7x14>:
  82d5e0:	deff7f04 	addi	sp,sp,-516
  82d5e4:	dfc08015 	stw	ra,512(sp)
  82d5e8:	df007f15 	stw	fp,508(sp)
  82d5ec:	dc007e15 	stw	r16,504(sp)
  82d5f0:	df007f04 	addi	fp,sp,508
  82d5f4:	e13ffb15 	stw	r4,-20(fp)
  82d5f8:	e17ffc15 	stw	r5,-16(fp)
  82d5fc:	e1bffd15 	stw	r6,-12(fp)
  82d600:	e1fffe15 	stw	r7,-8(fp)
  82d604:	e0bffb17 	ldw	r2,-20(fp)
  82d608:	10805417 	ldw	r2,336(r2)
  82d60c:	10bfa004 	addi	r2,r2,-384
  82d610:	e0bf8515 	stw	r2,-492(fp)
  82d614:	e0bffd17 	ldw	r2,-12(fp)
  82d618:	e0bf8115 	stw	r2,-508(fp)
  82d61c:	e0bffc17 	ldw	r2,-16(fp)
  82d620:	10801517 	ldw	r2,84(r2)
  82d624:	e0bf8215 	stw	r2,-504(fp)
  82d628:	e0bf9904 	addi	r2,fp,-412
  82d62c:	e0bf8315 	stw	r2,-500(fp)
  82d630:	e03f8415 	stw	zero,-496(fp)
  82d634:	0001a606 	br	82dcd0 <jpeg_idct_7x14+0x6f0>
  82d638:	e0bf8117 	ldw	r2,-508(fp)
  82d63c:	1080000b 	ldhu	r2,0(r2)
  82d640:	10ffffcc 	andi	r3,r2,65535
  82d644:	18e0001c 	xori	r3,r3,32768
  82d648:	18e00004 	addi	r3,r3,-32768
  82d64c:	e0bf8217 	ldw	r2,-504(fp)
  82d650:	10800017 	ldw	r2,0(r2)
  82d654:	100b883a 	mov	r5,r2
  82d658:	1809883a 	mov	r4,r3
  82d65c:	08305040 	call	830504 <__mulsi3>
  82d660:	e0bf8615 	stw	r2,-488(fp)
  82d664:	e0bf8617 	ldw	r2,-488(fp)
  82d668:	1004937a 	slli	r2,r2,13
  82d66c:	e0bf8615 	stw	r2,-488(fp)
  82d670:	e0bf8617 	ldw	r2,-488(fp)
  82d674:	10810004 	addi	r2,r2,1024
  82d678:	e0bf8615 	stw	r2,-488(fp)
  82d67c:	e0bf8117 	ldw	r2,-508(fp)
  82d680:	10801004 	addi	r2,r2,64
  82d684:	1080000b 	ldhu	r2,0(r2)
  82d688:	10ffffcc 	andi	r3,r2,65535
  82d68c:	18e0001c 	xori	r3,r3,32768
  82d690:	18e00004 	addi	r3,r3,-32768
  82d694:	e0bf8217 	ldw	r2,-504(fp)
  82d698:	10802004 	addi	r2,r2,128
  82d69c:	10800017 	ldw	r2,0(r2)
  82d6a0:	100b883a 	mov	r5,r2
  82d6a4:	1809883a 	mov	r4,r3
  82d6a8:	08305040 	call	830504 <__mulsi3>
  82d6ac:	e0bf8715 	stw	r2,-484(fp)
  82d6b0:	014a3184 	movi	r5,10438
  82d6b4:	e13f8717 	ldw	r4,-484(fp)
  82d6b8:	08305040 	call	830504 <__mulsi3>
  82d6bc:	e0bf8815 	stw	r2,-480(fp)
  82d6c0:	01428484 	movi	r5,2578
  82d6c4:	e13f8717 	ldw	r4,-484(fp)
  82d6c8:	08305040 	call	830504 <__mulsi3>
  82d6cc:	e0bf8915 	stw	r2,-476(fp)
  82d6d0:	01470dc4 	movi	r5,7223
  82d6d4:	e13f8717 	ldw	r4,-484(fp)
  82d6d8:	08305040 	call	830504 <__mulsi3>
  82d6dc:	e0bf8715 	stw	r2,-484(fp)
  82d6e0:	e0ff8617 	ldw	r3,-488(fp)
  82d6e4:	e0bf8817 	ldw	r2,-480(fp)
  82d6e8:	1885883a 	add	r2,r3,r2
  82d6ec:	e0bf8a15 	stw	r2,-472(fp)
  82d6f0:	e0ff8617 	ldw	r3,-488(fp)
  82d6f4:	e0bf8917 	ldw	r2,-476(fp)
  82d6f8:	1885883a 	add	r2,r3,r2
  82d6fc:	e0bf8b15 	stw	r2,-468(fp)
  82d700:	e0ff8617 	ldw	r3,-488(fp)
  82d704:	e0bf8717 	ldw	r2,-484(fp)
  82d708:	1885c83a 	sub	r2,r3,r2
  82d70c:	e0bf8c15 	stw	r2,-464(fp)
  82d710:	e0ff8817 	ldw	r3,-480(fp)
  82d714:	e0bf8917 	ldw	r2,-476(fp)
  82d718:	1887883a 	add	r3,r3,r2
  82d71c:	e0bf8717 	ldw	r2,-484(fp)
  82d720:	1885c83a 	sub	r2,r3,r2
  82d724:	1085883a 	add	r2,r2,r2
  82d728:	1007883a 	mov	r3,r2
  82d72c:	e0bf8617 	ldw	r2,-488(fp)
  82d730:	10c5c83a 	sub	r2,r2,r3
  82d734:	1005d2fa 	srai	r2,r2,11
  82d738:	e0bf8d15 	stw	r2,-460(fp)
  82d73c:	e0bf8117 	ldw	r2,-508(fp)
  82d740:	10800804 	addi	r2,r2,32
  82d744:	1080000b 	ldhu	r2,0(r2)
  82d748:	10ffffcc 	andi	r3,r2,65535
  82d74c:	18e0001c 	xori	r3,r3,32768
  82d750:	18e00004 	addi	r3,r3,-32768
  82d754:	e0bf8217 	ldw	r2,-504(fp)
  82d758:	10801004 	addi	r2,r2,64
  82d75c:	10800017 	ldw	r2,0(r2)
  82d760:	100b883a 	mov	r5,r2
  82d764:	1809883a 	mov	r4,r3
  82d768:	08305040 	call	830504 <__mulsi3>
  82d76c:	e0bf8615 	stw	r2,-488(fp)
  82d770:	e0bf8117 	ldw	r2,-508(fp)
  82d774:	10801804 	addi	r2,r2,96
  82d778:	1080000b 	ldhu	r2,0(r2)
  82d77c:	10ffffcc 	andi	r3,r2,65535
  82d780:	18e0001c 	xori	r3,r3,32768
  82d784:	18e00004 	addi	r3,r3,-32768
  82d788:	e0bf8217 	ldw	r2,-504(fp)
  82d78c:	10803004 	addi	r2,r2,192
  82d790:	10800017 	ldw	r2,0(r2)
  82d794:	100b883a 	mov	r5,r2
  82d798:	1809883a 	mov	r4,r3
  82d79c:	08305040 	call	830504 <__mulsi3>
  82d7a0:	e0bf8815 	stw	r2,-480(fp)
  82d7a4:	e0ff8617 	ldw	r3,-488(fp)
  82d7a8:	e0bf8817 	ldw	r2,-480(fp)
  82d7ac:	1885883a 	add	r2,r3,r2
  82d7b0:	0148d884 	movi	r5,9058
  82d7b4:	1009883a 	mov	r4,r2
  82d7b8:	08305040 	call	830504 <__mulsi3>
  82d7bc:	e0bf8915 	stw	r2,-476(fp)
  82d7c0:	01422f44 	movi	r5,2237
  82d7c4:	e13f8617 	ldw	r4,-488(fp)
  82d7c8:	08305040 	call	830504 <__mulsi3>
  82d7cc:	1007883a 	mov	r3,r2
  82d7d0:	e0bf8917 	ldw	r2,-476(fp)
  82d7d4:	1885883a 	add	r2,r3,r2
  82d7d8:	e0bf8e15 	stw	r2,-456(fp)
  82d7dc:	01723f04 	movi	r5,-14084
  82d7e0:	e13f8817 	ldw	r4,-480(fp)
  82d7e4:	08305040 	call	830504 <__mulsi3>
  82d7e8:	1007883a 	mov	r3,r2
  82d7ec:	e0bf8917 	ldw	r2,-476(fp)
  82d7f0:	1885883a 	add	r2,r3,r2
  82d7f4:	e0bf8f15 	stw	r2,-452(fp)
  82d7f8:	0144e8c4 	movi	r5,5027
  82d7fc:	e13f8617 	ldw	r4,-488(fp)
  82d800:	08305040 	call	830504 <__mulsi3>
  82d804:	1021883a 	mov	r16,r2
  82d808:	0174f844 	movi	r5,-11295
  82d80c:	e13f8817 	ldw	r4,-480(fp)
  82d810:	08305040 	call	830504 <__mulsi3>
  82d814:	8085883a 	add	r2,r16,r2
  82d818:	e0bf9015 	stw	r2,-448(fp)
  82d81c:	e0ff8a17 	ldw	r3,-472(fp)
  82d820:	e0bf8e17 	ldw	r2,-456(fp)
  82d824:	1885883a 	add	r2,r3,r2
  82d828:	e0bf9115 	stw	r2,-444(fp)
  82d82c:	e0ff8a17 	ldw	r3,-472(fp)
  82d830:	e0bf8e17 	ldw	r2,-456(fp)
  82d834:	1885c83a 	sub	r2,r3,r2
  82d838:	e0bf9215 	stw	r2,-440(fp)
  82d83c:	e0ff8b17 	ldw	r3,-468(fp)
  82d840:	e0bf8f17 	ldw	r2,-452(fp)
  82d844:	1885883a 	add	r2,r3,r2
  82d848:	e0bf9315 	stw	r2,-436(fp)
  82d84c:	e0ff8b17 	ldw	r3,-468(fp)
  82d850:	e0bf8f17 	ldw	r2,-452(fp)
  82d854:	1885c83a 	sub	r2,r3,r2
  82d858:	e0bf9415 	stw	r2,-432(fp)
  82d85c:	e0ff8c17 	ldw	r3,-464(fp)
  82d860:	e0bf9017 	ldw	r2,-448(fp)
  82d864:	1885883a 	add	r2,r3,r2
  82d868:	e0bf9515 	stw	r2,-428(fp)
  82d86c:	e0ff8c17 	ldw	r3,-464(fp)
  82d870:	e0bf9017 	ldw	r2,-448(fp)
  82d874:	1885c83a 	sub	r2,r3,r2
  82d878:	e0bf9615 	stw	r2,-424(fp)
  82d87c:	e0bf8117 	ldw	r2,-508(fp)
  82d880:	10800404 	addi	r2,r2,16
  82d884:	1080000b 	ldhu	r2,0(r2)
  82d888:	10ffffcc 	andi	r3,r2,65535
  82d88c:	18e0001c 	xori	r3,r3,32768
  82d890:	18e00004 	addi	r3,r3,-32768
  82d894:	e0bf8217 	ldw	r2,-504(fp)
  82d898:	10800804 	addi	r2,r2,32
  82d89c:	10800017 	ldw	r2,0(r2)
  82d8a0:	100b883a 	mov	r5,r2
  82d8a4:	1809883a 	mov	r4,r3
  82d8a8:	08305040 	call	830504 <__mulsi3>
  82d8ac:	e0bf8615 	stw	r2,-488(fp)
  82d8b0:	e0bf8117 	ldw	r2,-508(fp)
  82d8b4:	10800c04 	addi	r2,r2,48
  82d8b8:	1080000b 	ldhu	r2,0(r2)
  82d8bc:	10ffffcc 	andi	r3,r2,65535
  82d8c0:	18e0001c 	xori	r3,r3,32768
  82d8c4:	18e00004 	addi	r3,r3,-32768
  82d8c8:	e0bf8217 	ldw	r2,-504(fp)
  82d8cc:	10801804 	addi	r2,r2,96
  82d8d0:	10800017 	ldw	r2,0(r2)
  82d8d4:	100b883a 	mov	r5,r2
  82d8d8:	1809883a 	mov	r4,r3
  82d8dc:	08305040 	call	830504 <__mulsi3>
  82d8e0:	e0bf8815 	stw	r2,-480(fp)
  82d8e4:	e0bf8117 	ldw	r2,-508(fp)
  82d8e8:	10801404 	addi	r2,r2,80
  82d8ec:	1080000b 	ldhu	r2,0(r2)
  82d8f0:	10ffffcc 	andi	r3,r2,65535
  82d8f4:	18e0001c 	xori	r3,r3,32768
  82d8f8:	18e00004 	addi	r3,r3,-32768
  82d8fc:	e0bf8217 	ldw	r2,-504(fp)
  82d900:	10802804 	addi	r2,r2,160
  82d904:	10800017 	ldw	r2,0(r2)
  82d908:	100b883a 	mov	r5,r2
  82d90c:	1809883a 	mov	r4,r3
  82d910:	08305040 	call	830504 <__mulsi3>
  82d914:	e0bf8915 	stw	r2,-476(fp)
  82d918:	e0bf8117 	ldw	r2,-508(fp)
  82d91c:	10801c04 	addi	r2,r2,112
  82d920:	1080000b 	ldhu	r2,0(r2)
  82d924:	10ffffcc 	andi	r3,r2,65535
  82d928:	18e0001c 	xori	r3,r3,32768
  82d92c:	18e00004 	addi	r3,r3,-32768
  82d930:	e0bf8217 	ldw	r2,-504(fp)
  82d934:	10803804 	addi	r2,r2,224
  82d938:	10800017 	ldw	r2,0(r2)
  82d93c:	100b883a 	mov	r5,r2
  82d940:	1809883a 	mov	r4,r3
  82d944:	08305040 	call	830504 <__mulsi3>
  82d948:	e0bf8715 	stw	r2,-484(fp)
  82d94c:	e0bf8717 	ldw	r2,-484(fp)
  82d950:	1004937a 	slli	r2,r2,13
  82d954:	e0bf8e15 	stw	r2,-456(fp)
  82d958:	e0ff8617 	ldw	r3,-488(fp)
  82d95c:	e0bf8917 	ldw	r2,-476(fp)
  82d960:	1885883a 	add	r2,r3,r2
  82d964:	e0bf8f15 	stw	r2,-452(fp)
  82d968:	e0ff8617 	ldw	r3,-488(fp)
  82d96c:	e0bf8817 	ldw	r2,-480(fp)
  82d970:	1885883a 	add	r2,r3,r2
  82d974:	014aadc4 	movi	r5,10935
  82d978:	1009883a 	mov	r4,r2
  82d97c:	08305040 	call	830504 <__mulsi3>
  82d980:	e0bf8b15 	stw	r2,-468(fp)
  82d984:	01499484 	movi	r5,9810
  82d988:	e13f8f17 	ldw	r4,-452(fp)
  82d98c:	08305040 	call	830504 <__mulsi3>
  82d990:	e0bf8c15 	stw	r2,-464(fp)
  82d994:	e0ff8b17 	ldw	r3,-468(fp)
  82d998:	e0bf8c17 	ldw	r2,-464(fp)
  82d99c:	1887883a 	add	r3,r3,r2
  82d9a0:	e0bf8e17 	ldw	r2,-456(fp)
  82d9a4:	18a1883a 	add	r16,r3,r2
  82d9a8:	0176fc04 	movi	r5,-9232
  82d9ac:	e13f8617 	ldw	r4,-488(fp)
  82d9b0:	08305040 	call	830504 <__mulsi3>
  82d9b4:	8085883a 	add	r2,r16,r2
  82d9b8:	e0bf8a15 	stw	r2,-472(fp)
  82d9bc:	01460504 	movi	r5,6164
  82d9c0:	e13f8f17 	ldw	r4,-452(fp)
  82d9c4:	08305040 	call	830504 <__mulsi3>
  82d9c8:	e0bf8f15 	stw	r2,-452(fp)
  82d9cc:	017782c4 	movi	r5,-8693
  82d9d0:	e13f8617 	ldw	r4,-488(fp)
  82d9d4:	08305040 	call	830504 <__mulsi3>
  82d9d8:	1007883a 	mov	r3,r2
  82d9dc:	e0bf8f17 	ldw	r2,-452(fp)
  82d9e0:	1885883a 	add	r2,r3,r2
  82d9e4:	e0bf9715 	stw	r2,-420(fp)
  82d9e8:	e0ff8617 	ldw	r3,-488(fp)
  82d9ec:	e0bf8817 	ldw	r2,-480(fp)
  82d9f0:	1885c83a 	sub	r2,r3,r2
  82d9f4:	e0bf8615 	stw	r2,-488(fp)
  82d9f8:	0143bc84 	movi	r5,3826
  82d9fc:	e13f8617 	ldw	r4,-488(fp)
  82da00:	08305040 	call	830504 <__mulsi3>
  82da04:	1007883a 	mov	r3,r2
  82da08:	e0bf8e17 	ldw	r2,-456(fp)
  82da0c:	1885c83a 	sub	r2,r3,r2
  82da10:	e0bf9015 	stw	r2,-448(fp)
  82da14:	e0ff9717 	ldw	r3,-420(fp)
  82da18:	e0bf9017 	ldw	r2,-448(fp)
  82da1c:	1885883a 	add	r2,r3,r2
  82da20:	e0bf9715 	stw	r2,-420(fp)
  82da24:	e0ff8617 	ldw	r3,-488(fp)
  82da28:	e0bf8717 	ldw	r2,-484(fp)
  82da2c:	1885883a 	add	r2,r3,r2
  82da30:	e0bf8615 	stw	r2,-488(fp)
  82da34:	e0ff8817 	ldw	r3,-480(fp)
  82da38:	e0bf8917 	ldw	r2,-476(fp)
  82da3c:	1885883a 	add	r2,r3,r2
  82da40:	017ebbc4 	movi	r5,-1297
  82da44:	1009883a 	mov	r4,r2
  82da48:	08305040 	call	830504 <__mulsi3>
  82da4c:	1007883a 	mov	r3,r2
  82da50:	e0bf8e17 	ldw	r2,-456(fp)
  82da54:	1885c83a 	sub	r2,r3,r2
  82da58:	e0bf8715 	stw	r2,-484(fp)
  82da5c:	017c9b84 	movi	r5,-3474
  82da60:	e13f8817 	ldw	r4,-480(fp)
  82da64:	08305040 	call	830504 <__mulsi3>
  82da68:	1007883a 	mov	r3,r2
  82da6c:	e0bf8717 	ldw	r2,-484(fp)
  82da70:	1885883a 	add	r2,r3,r2
  82da74:	e0ff8b17 	ldw	r3,-468(fp)
  82da78:	1885883a 	add	r2,r3,r2
  82da7c:	e0bf8b15 	stw	r2,-468(fp)
  82da80:	016d0244 	movi	r5,-19447
  82da84:	e13f8917 	ldw	r4,-476(fp)
  82da88:	08305040 	call	830504 <__mulsi3>
  82da8c:	1007883a 	mov	r3,r2
  82da90:	e0bf8717 	ldw	r2,-484(fp)
  82da94:	1885883a 	add	r2,r3,r2
  82da98:	e0ff8c17 	ldw	r3,-464(fp)
  82da9c:	1885883a 	add	r2,r3,r2
  82daa0:	e0bf8c15 	stw	r2,-464(fp)
  82daa4:	e0ff8917 	ldw	r3,-476(fp)
  82daa8:	e0bf8817 	ldw	r2,-480(fp)
  82daac:	1885c83a 	sub	r2,r3,r2
  82dab0:	014b3e04 	movi	r5,11512
  82dab4:	1009883a 	mov	r4,r2
  82dab8:	08305040 	call	830504 <__mulsi3>
  82dabc:	e0bf8715 	stw	r2,-484(fp)
  82dac0:	e0ff8717 	ldw	r3,-484(fp)
  82dac4:	e0bf8e17 	ldw	r2,-456(fp)
  82dac8:	18a1883a 	add	r16,r3,r2
  82dacc:	01727984 	movi	r5,-13850
  82dad0:	e13f8917 	ldw	r4,-476(fp)
  82dad4:	08305040 	call	830504 <__mulsi3>
  82dad8:	8085883a 	add	r2,r16,r2
  82dadc:	e0ff8f17 	ldw	r3,-452(fp)
  82dae0:	1885883a 	add	r2,r3,r2
  82dae4:	e0bf8f15 	stw	r2,-452(fp)
  82dae8:	01456644 	movi	r5,5529
  82daec:	e13f8817 	ldw	r4,-480(fp)
  82daf0:	08305040 	call	830504 <__mulsi3>
  82daf4:	1007883a 	mov	r3,r2
  82daf8:	e0bf8717 	ldw	r2,-484(fp)
  82dafc:	1885883a 	add	r2,r3,r2
  82db00:	e0ff9017 	ldw	r3,-448(fp)
  82db04:	1885883a 	add	r2,r3,r2
  82db08:	e0bf9015 	stw	r2,-448(fp)
  82db0c:	e0ff8617 	ldw	r3,-488(fp)
  82db10:	e0bf8917 	ldw	r2,-476(fp)
  82db14:	1885c83a 	sub	r2,r3,r2
  82db18:	1085883a 	add	r2,r2,r2
  82db1c:	1085883a 	add	r2,r2,r2
  82db20:	e0bf8e15 	stw	r2,-456(fp)
  82db24:	e0ff9117 	ldw	r3,-444(fp)
  82db28:	e0bf8a17 	ldw	r2,-472(fp)
  82db2c:	1885883a 	add	r2,r3,r2
  82db30:	1007d2fa 	srai	r3,r2,11
  82db34:	e0bf8317 	ldw	r2,-500(fp)
  82db38:	10c00015 	stw	r3,0(r2)
  82db3c:	e0bf8317 	ldw	r2,-500(fp)
  82db40:	10805b04 	addi	r2,r2,364
  82db44:	e13f9117 	ldw	r4,-444(fp)
  82db48:	e0ff8a17 	ldw	r3,-472(fp)
  82db4c:	20c7c83a 	sub	r3,r4,r3
  82db50:	1807d2fa 	srai	r3,r3,11
  82db54:	10c00015 	stw	r3,0(r2)
  82db58:	e0bf8317 	ldw	r2,-500(fp)
  82db5c:	10800704 	addi	r2,r2,28
  82db60:	e13f9317 	ldw	r4,-436(fp)
  82db64:	e0ff8b17 	ldw	r3,-468(fp)
  82db68:	20c7883a 	add	r3,r4,r3
  82db6c:	1807d2fa 	srai	r3,r3,11
  82db70:	10c00015 	stw	r3,0(r2)
  82db74:	e0bf8317 	ldw	r2,-500(fp)
  82db78:	10805404 	addi	r2,r2,336
  82db7c:	e13f9317 	ldw	r4,-436(fp)
  82db80:	e0ff8b17 	ldw	r3,-468(fp)
  82db84:	20c7c83a 	sub	r3,r4,r3
  82db88:	1807d2fa 	srai	r3,r3,11
  82db8c:	10c00015 	stw	r3,0(r2)
  82db90:	e0bf8317 	ldw	r2,-500(fp)
  82db94:	10800e04 	addi	r2,r2,56
  82db98:	e13f9517 	ldw	r4,-428(fp)
  82db9c:	e0ff8c17 	ldw	r3,-464(fp)
  82dba0:	20c7883a 	add	r3,r4,r3
  82dba4:	1807d2fa 	srai	r3,r3,11
  82dba8:	10c00015 	stw	r3,0(r2)
  82dbac:	e0bf8317 	ldw	r2,-500(fp)
  82dbb0:	10804d04 	addi	r2,r2,308
  82dbb4:	e13f9517 	ldw	r4,-428(fp)
  82dbb8:	e0ff8c17 	ldw	r3,-464(fp)
  82dbbc:	20c7c83a 	sub	r3,r4,r3
  82dbc0:	1807d2fa 	srai	r3,r3,11
  82dbc4:	10c00015 	stw	r3,0(r2)
  82dbc8:	e0bf8317 	ldw	r2,-500(fp)
  82dbcc:	10801504 	addi	r2,r2,84
  82dbd0:	e13f8d17 	ldw	r4,-460(fp)
  82dbd4:	e0ff8e17 	ldw	r3,-456(fp)
  82dbd8:	20c7883a 	add	r3,r4,r3
  82dbdc:	10c00015 	stw	r3,0(r2)
  82dbe0:	e0bf8317 	ldw	r2,-500(fp)
  82dbe4:	10804604 	addi	r2,r2,280
  82dbe8:	e13f8d17 	ldw	r4,-460(fp)
  82dbec:	e0ff8e17 	ldw	r3,-456(fp)
  82dbf0:	20c7c83a 	sub	r3,r4,r3
  82dbf4:	10c00015 	stw	r3,0(r2)
  82dbf8:	e0bf8317 	ldw	r2,-500(fp)
  82dbfc:	10801c04 	addi	r2,r2,112
  82dc00:	e13f9617 	ldw	r4,-424(fp)
  82dc04:	e0ff8f17 	ldw	r3,-452(fp)
  82dc08:	20c7883a 	add	r3,r4,r3
  82dc0c:	1807d2fa 	srai	r3,r3,11
  82dc10:	10c00015 	stw	r3,0(r2)
  82dc14:	e0bf8317 	ldw	r2,-500(fp)
  82dc18:	10803f04 	addi	r2,r2,252
  82dc1c:	e13f9617 	ldw	r4,-424(fp)
  82dc20:	e0ff8f17 	ldw	r3,-452(fp)
  82dc24:	20c7c83a 	sub	r3,r4,r3
  82dc28:	1807d2fa 	srai	r3,r3,11
  82dc2c:	10c00015 	stw	r3,0(r2)
  82dc30:	e0bf8317 	ldw	r2,-500(fp)
  82dc34:	10802304 	addi	r2,r2,140
  82dc38:	e13f9417 	ldw	r4,-432(fp)
  82dc3c:	e0ff9017 	ldw	r3,-448(fp)
  82dc40:	20c7883a 	add	r3,r4,r3
  82dc44:	1807d2fa 	srai	r3,r3,11
  82dc48:	10c00015 	stw	r3,0(r2)
  82dc4c:	e0bf8317 	ldw	r2,-500(fp)
  82dc50:	10803804 	addi	r2,r2,224
  82dc54:	e13f9417 	ldw	r4,-432(fp)
  82dc58:	e0ff9017 	ldw	r3,-448(fp)
  82dc5c:	20c7c83a 	sub	r3,r4,r3
  82dc60:	1807d2fa 	srai	r3,r3,11
  82dc64:	10c00015 	stw	r3,0(r2)
  82dc68:	e0bf8317 	ldw	r2,-500(fp)
  82dc6c:	10802a04 	addi	r2,r2,168
  82dc70:	e13f9217 	ldw	r4,-440(fp)
  82dc74:	e0ff9717 	ldw	r3,-420(fp)
  82dc78:	20c7883a 	add	r3,r4,r3
  82dc7c:	1807d2fa 	srai	r3,r3,11
  82dc80:	10c00015 	stw	r3,0(r2)
  82dc84:	e0bf8317 	ldw	r2,-500(fp)
  82dc88:	10803104 	addi	r2,r2,196
  82dc8c:	e13f9217 	ldw	r4,-440(fp)
  82dc90:	e0ff9717 	ldw	r3,-420(fp)
  82dc94:	20c7c83a 	sub	r3,r4,r3
  82dc98:	1807d2fa 	srai	r3,r3,11
  82dc9c:	10c00015 	stw	r3,0(r2)
  82dca0:	e0bf8417 	ldw	r2,-496(fp)
  82dca4:	10800044 	addi	r2,r2,1
  82dca8:	e0bf8415 	stw	r2,-496(fp)
  82dcac:	e0bf8117 	ldw	r2,-508(fp)
  82dcb0:	10800084 	addi	r2,r2,2
  82dcb4:	e0bf8115 	stw	r2,-508(fp)
  82dcb8:	e0bf8217 	ldw	r2,-504(fp)
  82dcbc:	10800104 	addi	r2,r2,4
  82dcc0:	e0bf8215 	stw	r2,-504(fp)
  82dcc4:	e0bf8317 	ldw	r2,-500(fp)
  82dcc8:	10800104 	addi	r2,r2,4
  82dccc:	e0bf8315 	stw	r2,-500(fp)
  82dcd0:	e0bf8417 	ldw	r2,-496(fp)
  82dcd4:	108001d0 	cmplti	r2,r2,7
  82dcd8:	103e571e 	bne	r2,zero,82d638 <__alt_mem_epcs_flash_controller_0+0xff824638>
  82dcdc:	e0bf9904 	addi	r2,fp,-412
  82dce0:	e0bf8315 	stw	r2,-500(fp)
  82dce4:	e03f8415 	stw	zero,-496(fp)
  82dce8:	0000ee06 	br	82e0a4 <jpeg_idct_7x14+0xac4>
  82dcec:	e0bf8417 	ldw	r2,-496(fp)
  82dcf0:	1085883a 	add	r2,r2,r2
  82dcf4:	1085883a 	add	r2,r2,r2
  82dcf8:	1007883a 	mov	r3,r2
  82dcfc:	e0bffe17 	ldw	r2,-8(fp)
  82dd00:	10c5883a 	add	r2,r2,r3
  82dd04:	10c00017 	ldw	r3,0(r2)
  82dd08:	e0800217 	ldw	r2,8(fp)
  82dd0c:	1885883a 	add	r2,r3,r2
  82dd10:	e0bf9815 	stw	r2,-416(fp)
  82dd14:	e0bf8317 	ldw	r2,-500(fp)
  82dd18:	10800017 	ldw	r2,0(r2)
  82dd1c:	10900404 	addi	r2,r2,16400
  82dd20:	e0bf8d15 	stw	r2,-460(fp)
  82dd24:	e0bf8d17 	ldw	r2,-460(fp)
  82dd28:	1004937a 	slli	r2,r2,13
  82dd2c:	e0bf8d15 	stw	r2,-460(fp)
  82dd30:	e0bf8317 	ldw	r2,-500(fp)
  82dd34:	10800204 	addi	r2,r2,8
  82dd38:	10800017 	ldw	r2,0(r2)
  82dd3c:	e0bf8615 	stw	r2,-488(fp)
  82dd40:	e0bf8317 	ldw	r2,-500(fp)
  82dd44:	10800404 	addi	r2,r2,16
  82dd48:	10800017 	ldw	r2,0(r2)
  82dd4c:	e0bf8815 	stw	r2,-480(fp)
  82dd50:	e0bf8317 	ldw	r2,-500(fp)
  82dd54:	10800604 	addi	r2,r2,24
  82dd58:	10800017 	ldw	r2,0(r2)
  82dd5c:	e0bf8915 	stw	r2,-476(fp)
  82dd60:	e0ff8817 	ldw	r3,-480(fp)
  82dd64:	e0bf8917 	ldw	r2,-476(fp)
  82dd68:	1885c83a 	sub	r2,r3,r2
  82dd6c:	01470dc4 	movi	r5,7223
  82dd70:	1009883a 	mov	r4,r2
  82dd74:	08305040 	call	830504 <__mulsi3>
  82dd78:	e0bf9115 	stw	r2,-444(fp)
  82dd7c:	e0ff8617 	ldw	r3,-488(fp)
  82dd80:	e0bf8817 	ldw	r2,-480(fp)
  82dd84:	1885c83a 	sub	r2,r3,r2
  82dd88:	01428484 	movi	r5,2578
  82dd8c:	1009883a 	mov	r4,r2
  82dd90:	08305040 	call	830504 <__mulsi3>
  82dd94:	e0bf9515 	stw	r2,-428(fp)
  82dd98:	e0ff9117 	ldw	r3,-444(fp)
  82dd9c:	e0bf9517 	ldw	r2,-428(fp)
  82dda0:	1887883a 	add	r3,r3,r2
  82dda4:	e0bf8d17 	ldw	r2,-460(fp)
  82dda8:	18a1883a 	add	r16,r3,r2
  82ddac:	01714544 	movi	r5,-15083
  82ddb0:	e13f8817 	ldw	r4,-480(fp)
  82ddb4:	08305040 	call	830504 <__mulsi3>
  82ddb8:	8085883a 	add	r2,r16,r2
  82ddbc:	e0bf9315 	stw	r2,-436(fp)
  82ddc0:	e0ff8617 	ldw	r3,-488(fp)
  82ddc4:	e0bf8917 	ldw	r2,-476(fp)
  82ddc8:	1885883a 	add	r2,r3,r2
  82ddcc:	e0bf8a15 	stw	r2,-472(fp)
  82ddd0:	e0ff8817 	ldw	r3,-480(fp)
  82ddd4:	e0bf8a17 	ldw	r2,-472(fp)
  82ddd8:	1885c83a 	sub	r2,r3,r2
  82dddc:	e0bf8815 	stw	r2,-480(fp)
  82dde0:	014a3184 	movi	r5,10438
  82dde4:	e13f8a17 	ldw	r4,-472(fp)
  82dde8:	08305040 	call	830504 <__mulsi3>
  82ddec:	1007883a 	mov	r3,r2
  82ddf0:	e0bf8d17 	ldw	r2,-460(fp)
  82ddf4:	1885883a 	add	r2,r3,r2
  82ddf8:	e0bf8a15 	stw	r2,-472(fp)
  82ddfc:	017f60c4 	movi	r5,-637
  82de00:	e13f8917 	ldw	r4,-476(fp)
  82de04:	08305040 	call	830504 <__mulsi3>
  82de08:	1007883a 	mov	r3,r2
  82de0c:	e0bf8a17 	ldw	r2,-472(fp)
  82de10:	1885883a 	add	r2,r3,r2
  82de14:	e0ff9117 	ldw	r3,-444(fp)
  82de18:	1885883a 	add	r2,r3,r2
  82de1c:	e0bf9115 	stw	r2,-444(fp)
  82de20:	016c3c44 	movi	r5,-20239
  82de24:	e13f8617 	ldw	r4,-488(fp)
  82de28:	08305040 	call	830504 <__mulsi3>
  82de2c:	1007883a 	mov	r3,r2
  82de30:	e0bf8a17 	ldw	r2,-472(fp)
  82de34:	1885883a 	add	r2,r3,r2
  82de38:	e0ff9517 	ldw	r3,-428(fp)
  82de3c:	1885883a 	add	r2,r3,r2
  82de40:	e0bf9515 	stw	r2,-428(fp)
  82de44:	014b5044 	movi	r5,11585
  82de48:	e13f8817 	ldw	r4,-480(fp)
  82de4c:	08305040 	call	830504 <__mulsi3>
  82de50:	1007883a 	mov	r3,r2
  82de54:	e0bf8d17 	ldw	r2,-460(fp)
  82de58:	10c5883a 	add	r2,r2,r3
  82de5c:	e0bf8d15 	stw	r2,-460(fp)
  82de60:	e0bf8317 	ldw	r2,-500(fp)
  82de64:	10800104 	addi	r2,r2,4
  82de68:	10800017 	ldw	r2,0(r2)
  82de6c:	e0bf8615 	stw	r2,-488(fp)
  82de70:	e0bf8317 	ldw	r2,-500(fp)
  82de74:	10800304 	addi	r2,r2,12
  82de78:	10800017 	ldw	r2,0(r2)
  82de7c:	e0bf8815 	stw	r2,-480(fp)
  82de80:	e0bf8317 	ldw	r2,-500(fp)
  82de84:	10800504 	addi	r2,r2,20
  82de88:	10800017 	ldw	r2,0(r2)
  82de8c:	e0bf8915 	stw	r2,-476(fp)
  82de90:	e0ff8617 	ldw	r3,-488(fp)
  82de94:	e0bf8817 	ldw	r2,-480(fp)
  82de98:	1885883a 	add	r2,r3,r2
  82de9c:	01477bc4 	movi	r5,7663
  82dea0:	1009883a 	mov	r4,r2
  82dea4:	08305040 	call	830504 <__mulsi3>
  82dea8:	e0bf8b15 	stw	r2,-468(fp)
  82deac:	e0ff8617 	ldw	r3,-488(fp)
  82deb0:	e0bf8817 	ldw	r2,-480(fp)
  82deb4:	1885c83a 	sub	r2,r3,r2
  82deb8:	01415cc4 	movi	r5,1395
  82debc:	1009883a 	mov	r4,r2
  82dec0:	08305040 	call	830504 <__mulsi3>
  82dec4:	e0bf8c15 	stw	r2,-464(fp)
  82dec8:	e0ff8b17 	ldw	r3,-468(fp)
  82decc:	e0bf8c17 	ldw	r2,-464(fp)
  82ded0:	1885c83a 	sub	r2,r3,r2
  82ded4:	e0bf8a15 	stw	r2,-472(fp)
  82ded8:	e0ff8b17 	ldw	r3,-468(fp)
  82dedc:	e0bf8c17 	ldw	r2,-464(fp)
  82dee0:	1885883a 	add	r2,r3,r2
  82dee4:	e0bf8b15 	stw	r2,-468(fp)
  82dee8:	e0ff8817 	ldw	r3,-480(fp)
  82deec:	e0bf8917 	ldw	r2,-476(fp)
  82def0:	1885883a 	add	r2,r3,r2
  82def4:	0174f844 	movi	r5,-11295
  82def8:	1009883a 	mov	r4,r2
  82defc:	08305040 	call	830504 <__mulsi3>
  82df00:	e0bf8c15 	stw	r2,-464(fp)
  82df04:	e0ff8b17 	ldw	r3,-468(fp)
  82df08:	e0bf8c17 	ldw	r2,-464(fp)
  82df0c:	1885883a 	add	r2,r3,r2
  82df10:	e0bf8b15 	stw	r2,-468(fp)
  82df14:	e0ff8617 	ldw	r3,-488(fp)
  82df18:	e0bf8917 	ldw	r2,-476(fp)
  82df1c:	1885883a 	add	r2,r3,r2
  82df20:	0144e8c4 	movi	r5,5027
  82df24:	1009883a 	mov	r4,r2
  82df28:	08305040 	call	830504 <__mulsi3>
  82df2c:	e0bf8815 	stw	r2,-480(fp)
  82df30:	e0ff8a17 	ldw	r3,-472(fp)
  82df34:	e0bf8817 	ldw	r2,-480(fp)
  82df38:	1885883a 	add	r2,r3,r2
  82df3c:	e0bf8a15 	stw	r2,-472(fp)
  82df40:	014ef784 	movi	r5,15326
  82df44:	e13f8917 	ldw	r4,-476(fp)
  82df48:	08305040 	call	830504 <__mulsi3>
  82df4c:	1007883a 	mov	r3,r2
  82df50:	e0bf8817 	ldw	r2,-480(fp)
  82df54:	1885883a 	add	r2,r3,r2
  82df58:	e0ff8c17 	ldw	r3,-464(fp)
  82df5c:	1885883a 	add	r2,r3,r2
  82df60:	e0bf8c15 	stw	r2,-464(fp)
  82df64:	e0ff9117 	ldw	r3,-444(fp)
  82df68:	e0bf8a17 	ldw	r2,-472(fp)
  82df6c:	1885883a 	add	r2,r3,r2
  82df70:	1005d4ba 	srai	r2,r2,18
  82df74:	1080ffcc 	andi	r2,r2,1023
  82df78:	e0ff8517 	ldw	r3,-492(fp)
  82df7c:	1885883a 	add	r2,r3,r2
  82df80:	10c00003 	ldbu	r3,0(r2)
  82df84:	e0bf9817 	ldw	r2,-416(fp)
  82df88:	10c00005 	stb	r3,0(r2)
  82df8c:	e0bf9817 	ldw	r2,-416(fp)
  82df90:	10800184 	addi	r2,r2,6
  82df94:	e13f9117 	ldw	r4,-444(fp)
  82df98:	e0ff8a17 	ldw	r3,-472(fp)
  82df9c:	20c7c83a 	sub	r3,r4,r3
  82dfa0:	1807d4ba 	srai	r3,r3,18
  82dfa4:	18c0ffcc 	andi	r3,r3,1023
  82dfa8:	e13f8517 	ldw	r4,-492(fp)
  82dfac:	20c7883a 	add	r3,r4,r3
  82dfb0:	18c00003 	ldbu	r3,0(r3)
  82dfb4:	10c00005 	stb	r3,0(r2)
  82dfb8:	e0bf9817 	ldw	r2,-416(fp)
  82dfbc:	10800044 	addi	r2,r2,1
  82dfc0:	e13f9317 	ldw	r4,-436(fp)
  82dfc4:	e0ff8b17 	ldw	r3,-468(fp)
  82dfc8:	20c7883a 	add	r3,r4,r3
  82dfcc:	1807d4ba 	srai	r3,r3,18
  82dfd0:	18c0ffcc 	andi	r3,r3,1023
  82dfd4:	e13f8517 	ldw	r4,-492(fp)
  82dfd8:	20c7883a 	add	r3,r4,r3
  82dfdc:	18c00003 	ldbu	r3,0(r3)
  82dfe0:	10c00005 	stb	r3,0(r2)
  82dfe4:	e0bf9817 	ldw	r2,-416(fp)
  82dfe8:	10800144 	addi	r2,r2,5
  82dfec:	e13f9317 	ldw	r4,-436(fp)
  82dff0:	e0ff8b17 	ldw	r3,-468(fp)
  82dff4:	20c7c83a 	sub	r3,r4,r3
  82dff8:	1807d4ba 	srai	r3,r3,18
  82dffc:	18c0ffcc 	andi	r3,r3,1023
  82e000:	e13f8517 	ldw	r4,-492(fp)
  82e004:	20c7883a 	add	r3,r4,r3
  82e008:	18c00003 	ldbu	r3,0(r3)
  82e00c:	10c00005 	stb	r3,0(r2)
  82e010:	e0bf9817 	ldw	r2,-416(fp)
  82e014:	10800084 	addi	r2,r2,2
  82e018:	e13f9517 	ldw	r4,-428(fp)
  82e01c:	e0ff8c17 	ldw	r3,-464(fp)
  82e020:	20c7883a 	add	r3,r4,r3
  82e024:	1807d4ba 	srai	r3,r3,18
  82e028:	18c0ffcc 	andi	r3,r3,1023
  82e02c:	e13f8517 	ldw	r4,-492(fp)
  82e030:	20c7883a 	add	r3,r4,r3
  82e034:	18c00003 	ldbu	r3,0(r3)
  82e038:	10c00005 	stb	r3,0(r2)
  82e03c:	e0bf9817 	ldw	r2,-416(fp)
  82e040:	10800104 	addi	r2,r2,4
  82e044:	e13f9517 	ldw	r4,-428(fp)
  82e048:	e0ff8c17 	ldw	r3,-464(fp)
  82e04c:	20c7c83a 	sub	r3,r4,r3
  82e050:	1807d4ba 	srai	r3,r3,18
  82e054:	18c0ffcc 	andi	r3,r3,1023
  82e058:	e13f8517 	ldw	r4,-492(fp)
  82e05c:	20c7883a 	add	r3,r4,r3
  82e060:	18c00003 	ldbu	r3,0(r3)
  82e064:	10c00005 	stb	r3,0(r2)
  82e068:	e0bf9817 	ldw	r2,-416(fp)
  82e06c:	108000c4 	addi	r2,r2,3
  82e070:	e0ff8d17 	ldw	r3,-460(fp)
  82e074:	1807d4ba 	srai	r3,r3,18
  82e078:	18c0ffcc 	andi	r3,r3,1023
  82e07c:	e13f8517 	ldw	r4,-492(fp)
  82e080:	20c7883a 	add	r3,r4,r3
  82e084:	18c00003 	ldbu	r3,0(r3)
  82e088:	10c00005 	stb	r3,0(r2)
  82e08c:	e0bf8317 	ldw	r2,-500(fp)
  82e090:	10800704 	addi	r2,r2,28
  82e094:	e0bf8315 	stw	r2,-500(fp)
  82e098:	e0bf8417 	ldw	r2,-496(fp)
  82e09c:	10800044 	addi	r2,r2,1
  82e0a0:	e0bf8415 	stw	r2,-496(fp)
  82e0a4:	e0bf8417 	ldw	r2,-496(fp)
  82e0a8:	10800390 	cmplti	r2,r2,14
  82e0ac:	103f0f1e 	bne	r2,zero,82dcec <__alt_mem_epcs_flash_controller_0+0xff824cec>
  82e0b0:	0001883a 	nop
  82e0b4:	e6ffff04 	addi	sp,fp,-4
  82e0b8:	dfc00217 	ldw	ra,8(sp)
  82e0bc:	df000117 	ldw	fp,4(sp)
  82e0c0:	dc000017 	ldw	r16,0(sp)
  82e0c4:	dec00304 	addi	sp,sp,12
  82e0c8:	f800283a 	ret

0082e0cc <jpeg_idct_6x12>:
  82e0cc:	deff9b04 	addi	sp,sp,-404
  82e0d0:	dfc06415 	stw	ra,400(sp)
  82e0d4:	df006315 	stw	fp,396(sp)
  82e0d8:	dc006215 	stw	r16,392(sp)
  82e0dc:	df006304 	addi	fp,sp,396
  82e0e0:	e13ffb15 	stw	r4,-20(fp)
  82e0e4:	e17ffc15 	stw	r5,-16(fp)
  82e0e8:	e1bffd15 	stw	r6,-12(fp)
  82e0ec:	e1fffe15 	stw	r7,-8(fp)
  82e0f0:	e0bffb17 	ldw	r2,-20(fp)
  82e0f4:	10805417 	ldw	r2,336(r2)
  82e0f8:	10bfa004 	addi	r2,r2,-384
  82e0fc:	e0bfa115 	stw	r2,-380(fp)
  82e100:	e0bffd17 	ldw	r2,-12(fp)
  82e104:	e0bf9d15 	stw	r2,-396(fp)
  82e108:	e0bffc17 	ldw	r2,-16(fp)
  82e10c:	10801517 	ldw	r2,84(r2)
  82e110:	e0bf9e15 	stw	r2,-392(fp)
  82e114:	e0bfb304 	addi	r2,fp,-308
  82e118:	e0bf9f15 	stw	r2,-388(fp)
  82e11c:	e03fa015 	stw	zero,-384(fp)
  82e120:	00016e06 	br	82e6dc <jpeg_idct_6x12+0x610>
  82e124:	e0bf9d17 	ldw	r2,-396(fp)
  82e128:	1080000b 	ldhu	r2,0(r2)
  82e12c:	10ffffcc 	andi	r3,r2,65535
  82e130:	18e0001c 	xori	r3,r3,32768
  82e134:	18e00004 	addi	r3,r3,-32768
  82e138:	e0bf9e17 	ldw	r2,-392(fp)
  82e13c:	10800017 	ldw	r2,0(r2)
  82e140:	100b883a 	mov	r5,r2
  82e144:	1809883a 	mov	r4,r3
  82e148:	08305040 	call	830504 <__mulsi3>
  82e14c:	e0bfa215 	stw	r2,-376(fp)
  82e150:	e0bfa217 	ldw	r2,-376(fp)
  82e154:	1004937a 	slli	r2,r2,13
  82e158:	e0bfa215 	stw	r2,-376(fp)
  82e15c:	e0bfa217 	ldw	r2,-376(fp)
  82e160:	10810004 	addi	r2,r2,1024
  82e164:	e0bfa215 	stw	r2,-376(fp)
  82e168:	e0bf9d17 	ldw	r2,-396(fp)
  82e16c:	10801004 	addi	r2,r2,64
  82e170:	1080000b 	ldhu	r2,0(r2)
  82e174:	10ffffcc 	andi	r3,r2,65535
  82e178:	18e0001c 	xori	r3,r3,32768
  82e17c:	18e00004 	addi	r3,r3,-32768
  82e180:	e0bf9e17 	ldw	r2,-392(fp)
  82e184:	10802004 	addi	r2,r2,128
  82e188:	10800017 	ldw	r2,0(r2)
  82e18c:	100b883a 	mov	r5,r2
  82e190:	1809883a 	mov	r4,r3
  82e194:	08305040 	call	830504 <__mulsi3>
  82e198:	e0bfa315 	stw	r2,-372(fp)
  82e19c:	0149cc44 	movi	r5,10033
  82e1a0:	e13fa317 	ldw	r4,-372(fp)
  82e1a4:	08305040 	call	830504 <__mulsi3>
  82e1a8:	e0bfa315 	stw	r2,-372(fp)
  82e1ac:	e0ffa217 	ldw	r3,-376(fp)
  82e1b0:	e0bfa317 	ldw	r2,-372(fp)
  82e1b4:	1885883a 	add	r2,r3,r2
  82e1b8:	e0bfa415 	stw	r2,-368(fp)
  82e1bc:	e0ffa217 	ldw	r3,-376(fp)
  82e1c0:	e0bfa317 	ldw	r2,-372(fp)
  82e1c4:	1885c83a 	sub	r2,r3,r2
  82e1c8:	e0bfa515 	stw	r2,-364(fp)
  82e1cc:	e0bf9d17 	ldw	r2,-396(fp)
  82e1d0:	10800804 	addi	r2,r2,32
  82e1d4:	1080000b 	ldhu	r2,0(r2)
  82e1d8:	10ffffcc 	andi	r3,r2,65535
  82e1dc:	18e0001c 	xori	r3,r3,32768
  82e1e0:	18e00004 	addi	r3,r3,-32768
  82e1e4:	e0bf9e17 	ldw	r2,-392(fp)
  82e1e8:	10801004 	addi	r2,r2,64
  82e1ec:	10800017 	ldw	r2,0(r2)
  82e1f0:	100b883a 	mov	r5,r2
  82e1f4:	1809883a 	mov	r4,r3
  82e1f8:	08305040 	call	830504 <__mulsi3>
  82e1fc:	e0bfa615 	stw	r2,-360(fp)
  82e200:	014aed84 	movi	r5,11190
  82e204:	e13fa617 	ldw	r4,-360(fp)
  82e208:	08305040 	call	830504 <__mulsi3>
  82e20c:	e0bfa315 	stw	r2,-372(fp)
  82e210:	e0bfa617 	ldw	r2,-360(fp)
  82e214:	1004937a 	slli	r2,r2,13
  82e218:	e0bfa615 	stw	r2,-360(fp)
  82e21c:	e0bf9d17 	ldw	r2,-396(fp)
  82e220:	10801804 	addi	r2,r2,96
  82e224:	1080000b 	ldhu	r2,0(r2)
  82e228:	10ffffcc 	andi	r3,r2,65535
  82e22c:	18e0001c 	xori	r3,r3,32768
  82e230:	18e00004 	addi	r3,r3,-32768
  82e234:	e0bf9e17 	ldw	r2,-392(fp)
  82e238:	10803004 	addi	r2,r2,192
  82e23c:	10800017 	ldw	r2,0(r2)
  82e240:	100b883a 	mov	r5,r2
  82e244:	1809883a 	mov	r4,r3
  82e248:	08305040 	call	830504 <__mulsi3>
  82e24c:	e0bfa715 	stw	r2,-356(fp)
  82e250:	e0bfa717 	ldw	r2,-356(fp)
  82e254:	1004937a 	slli	r2,r2,13
  82e258:	e0bfa715 	stw	r2,-356(fp)
  82e25c:	e0ffa617 	ldw	r3,-360(fp)
  82e260:	e0bfa717 	ldw	r2,-356(fp)
  82e264:	1885c83a 	sub	r2,r3,r2
  82e268:	e0bfa815 	stw	r2,-352(fp)
  82e26c:	e0ffa217 	ldw	r3,-376(fp)
  82e270:	e0bfa817 	ldw	r2,-352(fp)
  82e274:	1885883a 	add	r2,r3,r2
  82e278:	e0bfa915 	stw	r2,-348(fp)
  82e27c:	e0ffa217 	ldw	r3,-376(fp)
  82e280:	e0bfa817 	ldw	r2,-352(fp)
  82e284:	1885c83a 	sub	r2,r3,r2
  82e288:	e0bfaa15 	stw	r2,-344(fp)
  82e28c:	e0ffa317 	ldw	r3,-372(fp)
  82e290:	e0bfa717 	ldw	r2,-356(fp)
  82e294:	1885883a 	add	r2,r3,r2
  82e298:	e0bfa815 	stw	r2,-352(fp)
  82e29c:	e0ffa417 	ldw	r3,-368(fp)
  82e2a0:	e0bfa817 	ldw	r2,-352(fp)
  82e2a4:	1885883a 	add	r2,r3,r2
  82e2a8:	e0bfab15 	stw	r2,-340(fp)
  82e2ac:	e0ffa417 	ldw	r3,-368(fp)
  82e2b0:	e0bfa817 	ldw	r2,-352(fp)
  82e2b4:	1885c83a 	sub	r2,r3,r2
  82e2b8:	e0bfac15 	stw	r2,-336(fp)
  82e2bc:	e0ffa317 	ldw	r3,-372(fp)
  82e2c0:	e0bfa617 	ldw	r2,-360(fp)
  82e2c4:	1887c83a 	sub	r3,r3,r2
  82e2c8:	e0bfa717 	ldw	r2,-356(fp)
  82e2cc:	1885c83a 	sub	r2,r3,r2
  82e2d0:	e0bfa815 	stw	r2,-352(fp)
  82e2d4:	e0ffa517 	ldw	r3,-364(fp)
  82e2d8:	e0bfa817 	ldw	r2,-352(fp)
  82e2dc:	1885883a 	add	r2,r3,r2
  82e2e0:	e0bfad15 	stw	r2,-332(fp)
  82e2e4:	e0ffa517 	ldw	r3,-364(fp)
  82e2e8:	e0bfa817 	ldw	r2,-352(fp)
  82e2ec:	1885c83a 	sub	r2,r3,r2
  82e2f0:	e0bfae15 	stw	r2,-328(fp)
  82e2f4:	e0bf9d17 	ldw	r2,-396(fp)
  82e2f8:	10800404 	addi	r2,r2,16
  82e2fc:	1080000b 	ldhu	r2,0(r2)
  82e300:	10ffffcc 	andi	r3,r2,65535
  82e304:	18e0001c 	xori	r3,r3,32768
  82e308:	18e00004 	addi	r3,r3,-32768
  82e30c:	e0bf9e17 	ldw	r2,-392(fp)
  82e310:	10800804 	addi	r2,r2,32
  82e314:	10800017 	ldw	r2,0(r2)
  82e318:	100b883a 	mov	r5,r2
  82e31c:	1809883a 	mov	r4,r3
  82e320:	08305040 	call	830504 <__mulsi3>
  82e324:	e0bfa615 	stw	r2,-360(fp)
  82e328:	e0bf9d17 	ldw	r2,-396(fp)
  82e32c:	10800c04 	addi	r2,r2,48
  82e330:	1080000b 	ldhu	r2,0(r2)
  82e334:	10ffffcc 	andi	r3,r2,65535
  82e338:	18e0001c 	xori	r3,r3,32768
  82e33c:	18e00004 	addi	r3,r3,-32768
  82e340:	e0bf9e17 	ldw	r2,-392(fp)
  82e344:	10801804 	addi	r2,r2,96
  82e348:	10800017 	ldw	r2,0(r2)
  82e34c:	100b883a 	mov	r5,r2
  82e350:	1809883a 	mov	r4,r3
  82e354:	08305040 	call	830504 <__mulsi3>
  82e358:	e0bfa715 	stw	r2,-356(fp)
  82e35c:	e0bf9d17 	ldw	r2,-396(fp)
  82e360:	10801404 	addi	r2,r2,80
  82e364:	1080000b 	ldhu	r2,0(r2)
  82e368:	10ffffcc 	andi	r3,r2,65535
  82e36c:	18e0001c 	xori	r3,r3,32768
  82e370:	18e00004 	addi	r3,r3,-32768
  82e374:	e0bf9e17 	ldw	r2,-392(fp)
  82e378:	10802804 	addi	r2,r2,160
  82e37c:	10800017 	ldw	r2,0(r2)
  82e380:	100b883a 	mov	r5,r2
  82e384:	1809883a 	mov	r4,r3
  82e388:	08305040 	call	830504 <__mulsi3>
  82e38c:	e0bfa215 	stw	r2,-376(fp)
  82e390:	e0bf9d17 	ldw	r2,-396(fp)
  82e394:	10801c04 	addi	r2,r2,112
  82e398:	1080000b 	ldhu	r2,0(r2)
  82e39c:	10ffffcc 	andi	r3,r2,65535
  82e3a0:	18e0001c 	xori	r3,r3,32768
  82e3a4:	18e00004 	addi	r3,r3,-32768
  82e3a8:	e0bf9e17 	ldw	r2,-392(fp)
  82e3ac:	10803804 	addi	r2,r2,224
  82e3b0:	10800017 	ldw	r2,0(r2)
  82e3b4:	100b883a 	mov	r5,r2
  82e3b8:	1809883a 	mov	r4,r3
  82e3bc:	08305040 	call	830504 <__mulsi3>
  82e3c0:	e0bfa315 	stw	r2,-372(fp)
  82e3c4:	014a73c4 	movi	r5,10703
  82e3c8:	e13fa717 	ldw	r4,-356(fp)
  82e3cc:	08305040 	call	830504 <__mulsi3>
  82e3d0:	e0bfa515 	stw	r2,-364(fp)
  82e3d4:	017babc4 	movi	r5,-4433
  82e3d8:	e13fa717 	ldw	r4,-356(fp)
  82e3dc:	08305040 	call	830504 <__mulsi3>
  82e3e0:	e0bfaf15 	stw	r2,-324(fp)
  82e3e4:	e0ffa617 	ldw	r3,-360(fp)
  82e3e8:	e0bfa217 	ldw	r2,-376(fp)
  82e3ec:	1885883a 	add	r2,r3,r2
  82e3f0:	e0bfa415 	stw	r2,-368(fp)
  82e3f4:	e0ffa417 	ldw	r3,-368(fp)
  82e3f8:	e0bfa317 	ldw	r2,-372(fp)
  82e3fc:	1885883a 	add	r2,r3,r2
  82e400:	0146e344 	movi	r5,7053
  82e404:	1009883a 	mov	r4,r2
  82e408:	08305040 	call	830504 <__mulsi3>
  82e40c:	e0bfb015 	stw	r2,-320(fp)
  82e410:	014216c4 	movi	r5,2139
  82e414:	e13fa417 	ldw	r4,-368(fp)
  82e418:	08305040 	call	830504 <__mulsi3>
  82e41c:	1007883a 	mov	r3,r2
  82e420:	e0bfb017 	ldw	r2,-320(fp)
  82e424:	1885883a 	add	r2,r3,r2
  82e428:	e0bfa815 	stw	r2,-352(fp)
  82e42c:	e0ffa817 	ldw	r3,-352(fp)
  82e430:	e0bfa517 	ldw	r2,-364(fp)
  82e434:	18a1883a 	add	r16,r3,r2
  82e438:	01423dc4 	movi	r5,2295
  82e43c:	e13fa617 	ldw	r4,-360(fp)
  82e440:	08305040 	call	830504 <__mulsi3>
  82e444:	8085883a 	add	r2,r16,r2
  82e448:	e0bfa415 	stw	r2,-368(fp)
  82e44c:	e0ffa217 	ldw	r3,-376(fp)
  82e450:	e0bfa317 	ldw	r2,-372(fp)
  82e454:	1885883a 	add	r2,r3,r2
  82e458:	0177a2c4 	movi	r5,-8565
  82e45c:	1009883a 	mov	r4,r2
  82e460:	08305040 	call	830504 <__mulsi3>
  82e464:	e0bfb115 	stw	r2,-316(fp)
  82e468:	e0ffb117 	ldw	r3,-316(fp)
  82e46c:	e0bfaf17 	ldw	r2,-324(fp)
  82e470:	18a1883a 	add	r16,r3,r2
  82e474:	01742c04 	movi	r5,-12112
  82e478:	e13fa217 	ldw	r4,-376(fp)
  82e47c:	08305040 	call	830504 <__mulsi3>
  82e480:	8085883a 	add	r2,r16,r2
  82e484:	e0ffa817 	ldw	r3,-352(fp)
  82e488:	1885883a 	add	r2,r3,r2
  82e48c:	e0bfa815 	stw	r2,-352(fp)
  82e490:	e0ffb017 	ldw	r3,-320(fp)
  82e494:	e0bfa517 	ldw	r2,-364(fp)
  82e498:	18a1c83a 	sub	r16,r3,r2
  82e49c:	014cb184 	movi	r5,12998
  82e4a0:	e13fa317 	ldw	r4,-372(fp)
  82e4a4:	08305040 	call	830504 <__mulsi3>
  82e4a8:	8085883a 	add	r2,r16,r2
  82e4ac:	e0ffb117 	ldw	r3,-316(fp)
  82e4b0:	1885883a 	add	r2,r3,r2
  82e4b4:	e0bfb115 	stw	r2,-316(fp)
  82e4b8:	017a9704 	movi	r5,-5540
  82e4bc:	e13fa617 	ldw	r4,-360(fp)
  82e4c0:	08305040 	call	830504 <__mulsi3>
  82e4c4:	1007883a 	mov	r3,r2
  82e4c8:	e0bfaf17 	ldw	r2,-324(fp)
  82e4cc:	18a1883a 	add	r16,r3,r2
  82e4d0:	01702304 	movi	r5,-16244
  82e4d4:	e13fa317 	ldw	r4,-372(fp)
  82e4d8:	08305040 	call	830504 <__mulsi3>
  82e4dc:	8085883a 	add	r2,r16,r2
  82e4e0:	e0ffb017 	ldw	r3,-320(fp)
  82e4e4:	1885883a 	add	r2,r3,r2
  82e4e8:	e0bfb015 	stw	r2,-320(fp)
  82e4ec:	e0ffa617 	ldw	r3,-360(fp)
  82e4f0:	e0bfa317 	ldw	r2,-372(fp)
  82e4f4:	1885c83a 	sub	r2,r3,r2
  82e4f8:	e0bfa615 	stw	r2,-360(fp)
  82e4fc:	e0ffa717 	ldw	r3,-356(fp)
  82e500:	e0bfa217 	ldw	r2,-376(fp)
  82e504:	1885c83a 	sub	r2,r3,r2
  82e508:	e0bfa715 	stw	r2,-356(fp)
  82e50c:	e0ffa617 	ldw	r3,-360(fp)
  82e510:	e0bfa717 	ldw	r2,-356(fp)
  82e514:	1885883a 	add	r2,r3,r2
  82e518:	01445444 	movi	r5,4433
  82e51c:	1009883a 	mov	r4,r2
  82e520:	08305040 	call	830504 <__mulsi3>
  82e524:	e0bfa215 	stw	r2,-376(fp)
  82e528:	01461f84 	movi	r5,6270
  82e52c:	e13fa617 	ldw	r4,-360(fp)
  82e530:	08305040 	call	830504 <__mulsi3>
  82e534:	1007883a 	mov	r3,r2
  82e538:	e0bfa217 	ldw	r2,-376(fp)
  82e53c:	1885883a 	add	r2,r3,r2
  82e540:	e0bfa515 	stw	r2,-364(fp)
  82e544:	017137c4 	movi	r5,-15137
  82e548:	e13fa717 	ldw	r4,-356(fp)
  82e54c:	08305040 	call	830504 <__mulsi3>
  82e550:	1007883a 	mov	r3,r2
  82e554:	e0bfa217 	ldw	r2,-376(fp)
  82e558:	1885883a 	add	r2,r3,r2
  82e55c:	e0bfaf15 	stw	r2,-324(fp)
  82e560:	e0ffab17 	ldw	r3,-340(fp)
  82e564:	e0bfa417 	ldw	r2,-368(fp)
  82e568:	1885883a 	add	r2,r3,r2
  82e56c:	1007d2fa 	srai	r3,r2,11
  82e570:	e0bf9f17 	ldw	r2,-388(fp)
  82e574:	10c00015 	stw	r3,0(r2)
  82e578:	e0bf9f17 	ldw	r2,-388(fp)
  82e57c:	10804204 	addi	r2,r2,264
  82e580:	e13fab17 	ldw	r4,-340(fp)
  82e584:	e0ffa417 	ldw	r3,-368(fp)
  82e588:	20c7c83a 	sub	r3,r4,r3
  82e58c:	1807d2fa 	srai	r3,r3,11
  82e590:	10c00015 	stw	r3,0(r2)
  82e594:	e0bf9f17 	ldw	r2,-388(fp)
  82e598:	10800604 	addi	r2,r2,24
  82e59c:	e13fa917 	ldw	r4,-348(fp)
  82e5a0:	e0ffa517 	ldw	r3,-364(fp)
  82e5a4:	20c7883a 	add	r3,r4,r3
  82e5a8:	1807d2fa 	srai	r3,r3,11
  82e5ac:	10c00015 	stw	r3,0(r2)
  82e5b0:	e0bf9f17 	ldw	r2,-388(fp)
  82e5b4:	10803c04 	addi	r2,r2,240
  82e5b8:	e13fa917 	ldw	r4,-348(fp)
  82e5bc:	e0ffa517 	ldw	r3,-364(fp)
  82e5c0:	20c7c83a 	sub	r3,r4,r3
  82e5c4:	1807d2fa 	srai	r3,r3,11
  82e5c8:	10c00015 	stw	r3,0(r2)
  82e5cc:	e0bf9f17 	ldw	r2,-388(fp)
  82e5d0:	10800c04 	addi	r2,r2,48
  82e5d4:	e13fad17 	ldw	r4,-332(fp)
  82e5d8:	e0ffa817 	ldw	r3,-352(fp)
  82e5dc:	20c7883a 	add	r3,r4,r3
  82e5e0:	1807d2fa 	srai	r3,r3,11
  82e5e4:	10c00015 	stw	r3,0(r2)
  82e5e8:	e0bf9f17 	ldw	r2,-388(fp)
  82e5ec:	10803604 	addi	r2,r2,216
  82e5f0:	e13fad17 	ldw	r4,-332(fp)
  82e5f4:	e0ffa817 	ldw	r3,-352(fp)
  82e5f8:	20c7c83a 	sub	r3,r4,r3
  82e5fc:	1807d2fa 	srai	r3,r3,11
  82e600:	10c00015 	stw	r3,0(r2)
  82e604:	e0bf9f17 	ldw	r2,-388(fp)
  82e608:	10801204 	addi	r2,r2,72
  82e60c:	e13fae17 	ldw	r4,-328(fp)
  82e610:	e0ffb117 	ldw	r3,-316(fp)
  82e614:	20c7883a 	add	r3,r4,r3
  82e618:	1807d2fa 	srai	r3,r3,11
  82e61c:	10c00015 	stw	r3,0(r2)
  82e620:	e0bf9f17 	ldw	r2,-388(fp)
  82e624:	10803004 	addi	r2,r2,192
  82e628:	e13fae17 	ldw	r4,-328(fp)
  82e62c:	e0ffb117 	ldw	r3,-316(fp)
  82e630:	20c7c83a 	sub	r3,r4,r3
  82e634:	1807d2fa 	srai	r3,r3,11
  82e638:	10c00015 	stw	r3,0(r2)
  82e63c:	e0bf9f17 	ldw	r2,-388(fp)
  82e640:	10801804 	addi	r2,r2,96
  82e644:	e13faa17 	ldw	r4,-344(fp)
  82e648:	e0ffaf17 	ldw	r3,-324(fp)
  82e64c:	20c7883a 	add	r3,r4,r3
  82e650:	1807d2fa 	srai	r3,r3,11
  82e654:	10c00015 	stw	r3,0(r2)
  82e658:	e0bf9f17 	ldw	r2,-388(fp)
  82e65c:	10802a04 	addi	r2,r2,168
  82e660:	e13faa17 	ldw	r4,-344(fp)
  82e664:	e0ffaf17 	ldw	r3,-324(fp)
  82e668:	20c7c83a 	sub	r3,r4,r3
  82e66c:	1807d2fa 	srai	r3,r3,11
  82e670:	10c00015 	stw	r3,0(r2)
  82e674:	e0bf9f17 	ldw	r2,-388(fp)
  82e678:	10801e04 	addi	r2,r2,120
  82e67c:	e13fac17 	ldw	r4,-336(fp)
  82e680:	e0ffb017 	ldw	r3,-320(fp)
  82e684:	20c7883a 	add	r3,r4,r3
  82e688:	1807d2fa 	srai	r3,r3,11
  82e68c:	10c00015 	stw	r3,0(r2)
  82e690:	e0bf9f17 	ldw	r2,-388(fp)
  82e694:	10802404 	addi	r2,r2,144
  82e698:	e13fac17 	ldw	r4,-336(fp)
  82e69c:	e0ffb017 	ldw	r3,-320(fp)
  82e6a0:	20c7c83a 	sub	r3,r4,r3
  82e6a4:	1807d2fa 	srai	r3,r3,11
  82e6a8:	10c00015 	stw	r3,0(r2)
  82e6ac:	e0bfa017 	ldw	r2,-384(fp)
  82e6b0:	10800044 	addi	r2,r2,1
  82e6b4:	e0bfa015 	stw	r2,-384(fp)
  82e6b8:	e0bf9d17 	ldw	r2,-396(fp)
  82e6bc:	10800084 	addi	r2,r2,2
  82e6c0:	e0bf9d15 	stw	r2,-396(fp)
  82e6c4:	e0bf9e17 	ldw	r2,-392(fp)
  82e6c8:	10800104 	addi	r2,r2,4
  82e6cc:	e0bf9e15 	stw	r2,-392(fp)
  82e6d0:	e0bf9f17 	ldw	r2,-388(fp)
  82e6d4:	10800104 	addi	r2,r2,4
  82e6d8:	e0bf9f15 	stw	r2,-388(fp)
  82e6dc:	e0bfa017 	ldw	r2,-384(fp)
  82e6e0:	10800190 	cmplti	r2,r2,6
  82e6e4:	103e8f1e 	bne	r2,zero,82e124 <__alt_mem_epcs_flash_controller_0+0xff825124>
  82e6e8:	e0bfb304 	addi	r2,fp,-308
  82e6ec:	e0bf9f15 	stw	r2,-388(fp)
  82e6f0:	e03fa015 	stw	zero,-384(fp)
  82e6f4:	0000a206 	br	82e980 <jpeg_idct_6x12+0x8b4>
  82e6f8:	e0bfa017 	ldw	r2,-384(fp)
  82e6fc:	1085883a 	add	r2,r2,r2
  82e700:	1085883a 	add	r2,r2,r2
  82e704:	1007883a 	mov	r3,r2
  82e708:	e0bffe17 	ldw	r2,-8(fp)
  82e70c:	10c5883a 	add	r2,r2,r3
  82e710:	10c00017 	ldw	r3,0(r2)
  82e714:	e0800217 	ldw	r2,8(fp)
  82e718:	1885883a 	add	r2,r3,r2
  82e71c:	e0bfb215 	stw	r2,-312(fp)
  82e720:	e0bf9f17 	ldw	r2,-388(fp)
  82e724:	10800017 	ldw	r2,0(r2)
  82e728:	10900404 	addi	r2,r2,16400
  82e72c:	e0bfa415 	stw	r2,-368(fp)
  82e730:	e0bfa417 	ldw	r2,-368(fp)
  82e734:	1004937a 	slli	r2,r2,13
  82e738:	e0bfa415 	stw	r2,-368(fp)
  82e73c:	e0bf9f17 	ldw	r2,-388(fp)
  82e740:	10800404 	addi	r2,r2,16
  82e744:	10800017 	ldw	r2,0(r2)
  82e748:	e0bfa815 	stw	r2,-352(fp)
  82e74c:	0145a844 	movi	r5,5793
  82e750:	e13fa817 	ldw	r4,-352(fp)
  82e754:	08305040 	call	830504 <__mulsi3>
  82e758:	e0bfab15 	stw	r2,-340(fp)
  82e75c:	e0ffa417 	ldw	r3,-368(fp)
  82e760:	e0bfab17 	ldw	r2,-340(fp)
  82e764:	1885883a 	add	r2,r3,r2
  82e768:	e0bfa515 	stw	r2,-364(fp)
  82e76c:	e0ffa417 	ldw	r3,-368(fp)
  82e770:	e0bfab17 	ldw	r2,-340(fp)
  82e774:	1887c83a 	sub	r3,r3,r2
  82e778:	e0bfab17 	ldw	r2,-340(fp)
  82e77c:	1885c83a 	sub	r2,r3,r2
  82e780:	e0bfa915 	stw	r2,-348(fp)
  82e784:	e0bf9f17 	ldw	r2,-388(fp)
  82e788:	10800204 	addi	r2,r2,8
  82e78c:	10800017 	ldw	r2,0(r2)
  82e790:	e0bfab15 	stw	r2,-340(fp)
  82e794:	0149cc44 	movi	r5,10033
  82e798:	e13fab17 	ldw	r4,-340(fp)
  82e79c:	08305040 	call	830504 <__mulsi3>
  82e7a0:	e0bfa415 	stw	r2,-368(fp)
  82e7a4:	e0ffa517 	ldw	r3,-364(fp)
  82e7a8:	e0bfa417 	ldw	r2,-368(fp)
  82e7ac:	1885883a 	add	r2,r3,r2
  82e7b0:	e0bfab15 	stw	r2,-340(fp)
  82e7b4:	e0ffa517 	ldw	r3,-364(fp)
  82e7b8:	e0bfa417 	ldw	r2,-368(fp)
  82e7bc:	1885c83a 	sub	r2,r3,r2
  82e7c0:	e0bfad15 	stw	r2,-332(fp)
  82e7c4:	e0bf9f17 	ldw	r2,-388(fp)
  82e7c8:	10800104 	addi	r2,r2,4
  82e7cc:	10800017 	ldw	r2,0(r2)
  82e7d0:	e0bfa615 	stw	r2,-360(fp)
  82e7d4:	e0bf9f17 	ldw	r2,-388(fp)
  82e7d8:	10800304 	addi	r2,r2,12
  82e7dc:	10800017 	ldw	r2,0(r2)
  82e7e0:	e0bfa715 	stw	r2,-356(fp)
  82e7e4:	e0bf9f17 	ldw	r2,-388(fp)
  82e7e8:	10800504 	addi	r2,r2,20
  82e7ec:	10800017 	ldw	r2,0(r2)
  82e7f0:	e0bfa215 	stw	r2,-376(fp)
  82e7f4:	e0ffa617 	ldw	r3,-360(fp)
  82e7f8:	e0bfa217 	ldw	r2,-376(fp)
  82e7fc:	1885883a 	add	r2,r3,r2
  82e800:	0142ed84 	movi	r5,2998
  82e804:	1009883a 	mov	r4,r2
  82e808:	08305040 	call	830504 <__mulsi3>
  82e80c:	e0bfa515 	stw	r2,-364(fp)
  82e810:	e0ffa617 	ldw	r3,-360(fp)
  82e814:	e0bfa717 	ldw	r2,-356(fp)
  82e818:	1885883a 	add	r2,r3,r2
  82e81c:	1006937a 	slli	r3,r2,13
  82e820:	e0bfa517 	ldw	r2,-364(fp)
  82e824:	1885883a 	add	r2,r3,r2
  82e828:	e0bfa415 	stw	r2,-368(fp)
  82e82c:	e0ffa217 	ldw	r3,-376(fp)
  82e830:	e0bfa717 	ldw	r2,-356(fp)
  82e834:	1885c83a 	sub	r2,r3,r2
  82e838:	1006937a 	slli	r3,r2,13
  82e83c:	e0bfa517 	ldw	r2,-364(fp)
  82e840:	1885883a 	add	r2,r3,r2
  82e844:	e0bfa815 	stw	r2,-352(fp)
  82e848:	e0ffa617 	ldw	r3,-360(fp)
  82e84c:	e0bfa717 	ldw	r2,-356(fp)
  82e850:	1887c83a 	sub	r3,r3,r2
  82e854:	e0bfa217 	ldw	r2,-376(fp)
  82e858:	1885c83a 	sub	r2,r3,r2
  82e85c:	1004937a 	slli	r2,r2,13
  82e860:	e0bfa515 	stw	r2,-364(fp)
  82e864:	e0ffab17 	ldw	r3,-340(fp)
  82e868:	e0bfa417 	ldw	r2,-368(fp)
  82e86c:	1885883a 	add	r2,r3,r2
  82e870:	1005d4ba 	srai	r2,r2,18
  82e874:	1080ffcc 	andi	r2,r2,1023
  82e878:	e0ffa117 	ldw	r3,-380(fp)
  82e87c:	1885883a 	add	r2,r3,r2
  82e880:	10c00003 	ldbu	r3,0(r2)
  82e884:	e0bfb217 	ldw	r2,-312(fp)
  82e888:	10c00005 	stb	r3,0(r2)
  82e88c:	e0bfb217 	ldw	r2,-312(fp)
  82e890:	10800144 	addi	r2,r2,5
  82e894:	e13fab17 	ldw	r4,-340(fp)
  82e898:	e0ffa417 	ldw	r3,-368(fp)
  82e89c:	20c7c83a 	sub	r3,r4,r3
  82e8a0:	1807d4ba 	srai	r3,r3,18
  82e8a4:	18c0ffcc 	andi	r3,r3,1023
  82e8a8:	e13fa117 	ldw	r4,-380(fp)
  82e8ac:	20c7883a 	add	r3,r4,r3
  82e8b0:	18c00003 	ldbu	r3,0(r3)
  82e8b4:	10c00005 	stb	r3,0(r2)
  82e8b8:	e0bfb217 	ldw	r2,-312(fp)
  82e8bc:	10800044 	addi	r2,r2,1
  82e8c0:	e13fa917 	ldw	r4,-348(fp)
  82e8c4:	e0ffa517 	ldw	r3,-364(fp)
  82e8c8:	20c7883a 	add	r3,r4,r3
  82e8cc:	1807d4ba 	srai	r3,r3,18
  82e8d0:	18c0ffcc 	andi	r3,r3,1023
  82e8d4:	e13fa117 	ldw	r4,-380(fp)
  82e8d8:	20c7883a 	add	r3,r4,r3
  82e8dc:	18c00003 	ldbu	r3,0(r3)
  82e8e0:	10c00005 	stb	r3,0(r2)
  82e8e4:	e0bfb217 	ldw	r2,-312(fp)
  82e8e8:	10800104 	addi	r2,r2,4
  82e8ec:	e13fa917 	ldw	r4,-348(fp)
  82e8f0:	e0ffa517 	ldw	r3,-364(fp)
  82e8f4:	20c7c83a 	sub	r3,r4,r3
  82e8f8:	1807d4ba 	srai	r3,r3,18
  82e8fc:	18c0ffcc 	andi	r3,r3,1023
  82e900:	e13fa117 	ldw	r4,-380(fp)
  82e904:	20c7883a 	add	r3,r4,r3
  82e908:	18c00003 	ldbu	r3,0(r3)
  82e90c:	10c00005 	stb	r3,0(r2)
  82e910:	e0bfb217 	ldw	r2,-312(fp)
  82e914:	10800084 	addi	r2,r2,2
  82e918:	e13fad17 	ldw	r4,-332(fp)
  82e91c:	e0ffa817 	ldw	r3,-352(fp)
  82e920:	20c7883a 	add	r3,r4,r3
  82e924:	1807d4ba 	srai	r3,r3,18
  82e928:	18c0ffcc 	andi	r3,r3,1023
  82e92c:	e13fa117 	ldw	r4,-380(fp)
  82e930:	20c7883a 	add	r3,r4,r3
  82e934:	18c00003 	ldbu	r3,0(r3)
  82e938:	10c00005 	stb	r3,0(r2)
  82e93c:	e0bfb217 	ldw	r2,-312(fp)
  82e940:	108000c4 	addi	r2,r2,3
  82e944:	e13fad17 	ldw	r4,-332(fp)
  82e948:	e0ffa817 	ldw	r3,-352(fp)
  82e94c:	20c7c83a 	sub	r3,r4,r3
  82e950:	1807d4ba 	srai	r3,r3,18
  82e954:	18c0ffcc 	andi	r3,r3,1023
  82e958:	e13fa117 	ldw	r4,-380(fp)
  82e95c:	20c7883a 	add	r3,r4,r3
  82e960:	18c00003 	ldbu	r3,0(r3)
  82e964:	10c00005 	stb	r3,0(r2)
  82e968:	e0bf9f17 	ldw	r2,-388(fp)
  82e96c:	10800604 	addi	r2,r2,24
  82e970:	e0bf9f15 	stw	r2,-388(fp)
  82e974:	e0bfa017 	ldw	r2,-384(fp)
  82e978:	10800044 	addi	r2,r2,1
  82e97c:	e0bfa015 	stw	r2,-384(fp)
  82e980:	e0bfa017 	ldw	r2,-384(fp)
  82e984:	10800310 	cmplti	r2,r2,12
  82e988:	103f5b1e 	bne	r2,zero,82e6f8 <__alt_mem_epcs_flash_controller_0+0xff8256f8>
  82e98c:	0001883a 	nop
  82e990:	e6ffff04 	addi	sp,fp,-4
  82e994:	dfc00217 	ldw	ra,8(sp)
  82e998:	df000117 	ldw	fp,4(sp)
  82e99c:	dc000017 	ldw	r16,0(sp)
  82e9a0:	dec00304 	addi	sp,sp,12
  82e9a4:	f800283a 	ret

0082e9a8 <jpeg_idct_5x10>:
  82e9a8:	deffb304 	addi	sp,sp,-308
  82e9ac:	dfc04c15 	stw	ra,304(sp)
  82e9b0:	df004b15 	stw	fp,300(sp)
  82e9b4:	df004b04 	addi	fp,sp,300
  82e9b8:	e13ffc15 	stw	r4,-16(fp)
  82e9bc:	e17ffd15 	stw	r5,-12(fp)
  82e9c0:	e1bffe15 	stw	r6,-8(fp)
  82e9c4:	e1ffff15 	stw	r7,-4(fp)
  82e9c8:	e0bffc17 	ldw	r2,-16(fp)
  82e9cc:	10805417 	ldw	r2,336(r2)
  82e9d0:	10bfa004 	addi	r2,r2,-384
  82e9d4:	e0bfb915 	stw	r2,-284(fp)
  82e9d8:	e0bffe17 	ldw	r2,-8(fp)
  82e9dc:	e0bfb515 	stw	r2,-300(fp)
  82e9e0:	e0bffd17 	ldw	r2,-12(fp)
  82e9e4:	10801517 	ldw	r2,84(r2)
  82e9e8:	e0bfb615 	stw	r2,-296(fp)
  82e9ec:	e0bfca04 	addi	r2,fp,-216
  82e9f0:	e0bfb715 	stw	r2,-292(fp)
  82e9f4:	e03fb815 	stw	zero,-288(fp)
  82e9f8:	00014706 	br	82ef18 <jpeg_idct_5x10+0x570>
  82e9fc:	e0bfb517 	ldw	r2,-300(fp)
  82ea00:	1080000b 	ldhu	r2,0(r2)
  82ea04:	10ffffcc 	andi	r3,r2,65535
  82ea08:	18e0001c 	xori	r3,r3,32768
  82ea0c:	18e00004 	addi	r3,r3,-32768
  82ea10:	e0bfb617 	ldw	r2,-296(fp)
  82ea14:	10800017 	ldw	r2,0(r2)
  82ea18:	100b883a 	mov	r5,r2
  82ea1c:	1809883a 	mov	r4,r3
  82ea20:	08305040 	call	830504 <__mulsi3>
  82ea24:	e0bfba15 	stw	r2,-280(fp)
  82ea28:	e0bfba17 	ldw	r2,-280(fp)
  82ea2c:	1004937a 	slli	r2,r2,13
  82ea30:	e0bfba15 	stw	r2,-280(fp)
  82ea34:	e0bfba17 	ldw	r2,-280(fp)
  82ea38:	10810004 	addi	r2,r2,1024
  82ea3c:	e0bfba15 	stw	r2,-280(fp)
  82ea40:	e0bfb517 	ldw	r2,-300(fp)
  82ea44:	10801004 	addi	r2,r2,64
  82ea48:	1080000b 	ldhu	r2,0(r2)
  82ea4c:	10ffffcc 	andi	r3,r2,65535
  82ea50:	18e0001c 	xori	r3,r3,32768
  82ea54:	18e00004 	addi	r3,r3,-32768
  82ea58:	e0bfb617 	ldw	r2,-296(fp)
  82ea5c:	10802004 	addi	r2,r2,128
  82ea60:	10800017 	ldw	r2,0(r2)
  82ea64:	100b883a 	mov	r5,r2
  82ea68:	1809883a 	mov	r4,r3
  82ea6c:	08305040 	call	830504 <__mulsi3>
  82ea70:	e0bfbb15 	stw	r2,-276(fp)
  82ea74:	01492744 	movi	r5,9373
  82ea78:	e13fbb17 	ldw	r4,-276(fp)
  82ea7c:	08305040 	call	830504 <__mulsi3>
  82ea80:	e0bfbc15 	stw	r2,-272(fp)
  82ea84:	01437f04 	movi	r5,3580
  82ea88:	e13fbb17 	ldw	r4,-276(fp)
  82ea8c:	08305040 	call	830504 <__mulsi3>
  82ea90:	e0bfbd15 	stw	r2,-268(fp)
  82ea94:	e0ffba17 	ldw	r3,-280(fp)
  82ea98:	e0bfbc17 	ldw	r2,-272(fp)
  82ea9c:	1885883a 	add	r2,r3,r2
  82eaa0:	e0bfbe15 	stw	r2,-264(fp)
  82eaa4:	e0ffba17 	ldw	r3,-280(fp)
  82eaa8:	e0bfbd17 	ldw	r2,-268(fp)
  82eaac:	1885c83a 	sub	r2,r3,r2
  82eab0:	e0bfbf15 	stw	r2,-260(fp)
  82eab4:	e0ffbc17 	ldw	r3,-272(fp)
  82eab8:	e0bfbd17 	ldw	r2,-268(fp)
  82eabc:	1885c83a 	sub	r2,r3,r2
  82eac0:	1085883a 	add	r2,r2,r2
  82eac4:	1007883a 	mov	r3,r2
  82eac8:	e0bfba17 	ldw	r2,-280(fp)
  82eacc:	10c5c83a 	sub	r2,r2,r3
  82ead0:	1005d2fa 	srai	r2,r2,11
  82ead4:	e0bfc015 	stw	r2,-256(fp)
  82ead8:	e0bfb517 	ldw	r2,-300(fp)
  82eadc:	10800804 	addi	r2,r2,32
  82eae0:	1080000b 	ldhu	r2,0(r2)
  82eae4:	10ffffcc 	andi	r3,r2,65535
  82eae8:	18e0001c 	xori	r3,r3,32768
  82eaec:	18e00004 	addi	r3,r3,-32768
  82eaf0:	e0bfb617 	ldw	r2,-296(fp)
  82eaf4:	10801004 	addi	r2,r2,64
  82eaf8:	10800017 	ldw	r2,0(r2)
  82eafc:	100b883a 	mov	r5,r2
  82eb00:	1809883a 	mov	r4,r3
  82eb04:	08305040 	call	830504 <__mulsi3>
  82eb08:	e0bfbd15 	stw	r2,-268(fp)
  82eb0c:	e0bfb517 	ldw	r2,-300(fp)
  82eb10:	10801804 	addi	r2,r2,96
  82eb14:	1080000b 	ldhu	r2,0(r2)
  82eb18:	10ffffcc 	andi	r3,r2,65535
  82eb1c:	18e0001c 	xori	r3,r3,32768
  82eb20:	18e00004 	addi	r3,r3,-32768
  82eb24:	e0bfb617 	ldw	r2,-296(fp)
  82eb28:	10803004 	addi	r2,r2,192
  82eb2c:	10800017 	ldw	r2,0(r2)
  82eb30:	100b883a 	mov	r5,r2
  82eb34:	1809883a 	mov	r4,r3
  82eb38:	08305040 	call	830504 <__mulsi3>
  82eb3c:	e0bfba15 	stw	r2,-280(fp)
  82eb40:	e0ffbd17 	ldw	r3,-268(fp)
  82eb44:	e0bfba17 	ldw	r2,-280(fp)
  82eb48:	1885883a 	add	r2,r3,r2
  82eb4c:	0146a684 	movi	r5,6810
  82eb50:	1009883a 	mov	r4,r2
  82eb54:	08305040 	call	830504 <__mulsi3>
  82eb58:	e0bfbc15 	stw	r2,-272(fp)
  82eb5c:	01441c44 	movi	r5,4209
  82eb60:	e13fbd17 	ldw	r4,-268(fp)
  82eb64:	08305040 	call	830504 <__mulsi3>
  82eb68:	1007883a 	mov	r3,r2
  82eb6c:	e0bfbc17 	ldw	r2,-272(fp)
  82eb70:	1885883a 	add	r2,r3,r2
  82eb74:	e0bfc115 	stw	r2,-252(fp)
  82eb78:	016e9704 	movi	r5,-17828
  82eb7c:	e13fba17 	ldw	r4,-280(fp)
  82eb80:	08305040 	call	830504 <__mulsi3>
  82eb84:	1007883a 	mov	r3,r2
  82eb88:	e0bfbc17 	ldw	r2,-272(fp)
  82eb8c:	1885883a 	add	r2,r3,r2
  82eb90:	e0bfc215 	stw	r2,-248(fp)
  82eb94:	e0ffbe17 	ldw	r3,-264(fp)
  82eb98:	e0bfc117 	ldw	r2,-252(fp)
  82eb9c:	1885883a 	add	r2,r3,r2
  82eba0:	e0bfc315 	stw	r2,-244(fp)
  82eba4:	e0ffbe17 	ldw	r3,-264(fp)
  82eba8:	e0bfc117 	ldw	r2,-252(fp)
  82ebac:	1885c83a 	sub	r2,r3,r2
  82ebb0:	e0bfc415 	stw	r2,-240(fp)
  82ebb4:	e0ffbf17 	ldw	r3,-260(fp)
  82ebb8:	e0bfc217 	ldw	r2,-248(fp)
  82ebbc:	1885883a 	add	r2,r3,r2
  82ebc0:	e0bfc515 	stw	r2,-236(fp)
  82ebc4:	e0ffbf17 	ldw	r3,-260(fp)
  82ebc8:	e0bfc217 	ldw	r2,-248(fp)
  82ebcc:	1885c83a 	sub	r2,r3,r2
  82ebd0:	e0bfc615 	stw	r2,-232(fp)
  82ebd4:	e0bfb517 	ldw	r2,-300(fp)
  82ebd8:	10800404 	addi	r2,r2,16
  82ebdc:	1080000b 	ldhu	r2,0(r2)
  82ebe0:	10ffffcc 	andi	r3,r2,65535
  82ebe4:	18e0001c 	xori	r3,r3,32768
  82ebe8:	18e00004 	addi	r3,r3,-32768
  82ebec:	e0bfb617 	ldw	r2,-296(fp)
  82ebf0:	10800804 	addi	r2,r2,32
  82ebf4:	10800017 	ldw	r2,0(r2)
  82ebf8:	100b883a 	mov	r5,r2
  82ebfc:	1809883a 	mov	r4,r3
  82ec00:	08305040 	call	830504 <__mulsi3>
  82ec04:	e0bfbc15 	stw	r2,-272(fp)
  82ec08:	e0bfb517 	ldw	r2,-300(fp)
  82ec0c:	10800c04 	addi	r2,r2,48
  82ec10:	1080000b 	ldhu	r2,0(r2)
  82ec14:	10ffffcc 	andi	r3,r2,65535
  82ec18:	18e0001c 	xori	r3,r3,32768
  82ec1c:	18e00004 	addi	r3,r3,-32768
  82ec20:	e0bfb617 	ldw	r2,-296(fp)
  82ec24:	10801804 	addi	r2,r2,96
  82ec28:	10800017 	ldw	r2,0(r2)
  82ec2c:	100b883a 	mov	r5,r2
  82ec30:	1809883a 	mov	r4,r3
  82ec34:	08305040 	call	830504 <__mulsi3>
  82ec38:	e0bfbd15 	stw	r2,-268(fp)
  82ec3c:	e0bfb517 	ldw	r2,-300(fp)
  82ec40:	10801404 	addi	r2,r2,80
  82ec44:	1080000b 	ldhu	r2,0(r2)
  82ec48:	10ffffcc 	andi	r3,r2,65535
  82ec4c:	18e0001c 	xori	r3,r3,32768
  82ec50:	18e00004 	addi	r3,r3,-32768
  82ec54:	e0bfb617 	ldw	r2,-296(fp)
  82ec58:	10802804 	addi	r2,r2,160
  82ec5c:	10800017 	ldw	r2,0(r2)
  82ec60:	100b883a 	mov	r5,r2
  82ec64:	1809883a 	mov	r4,r3
  82ec68:	08305040 	call	830504 <__mulsi3>
  82ec6c:	e0bfba15 	stw	r2,-280(fp)
  82ec70:	e0bfb517 	ldw	r2,-300(fp)
  82ec74:	10801c04 	addi	r2,r2,112
  82ec78:	1080000b 	ldhu	r2,0(r2)
  82ec7c:	10ffffcc 	andi	r3,r2,65535
  82ec80:	18e0001c 	xori	r3,r3,32768
  82ec84:	18e00004 	addi	r3,r3,-32768
  82ec88:	e0bfb617 	ldw	r2,-296(fp)
  82ec8c:	10803804 	addi	r2,r2,224
  82ec90:	10800017 	ldw	r2,0(r2)
  82ec94:	100b883a 	mov	r5,r2
  82ec98:	1809883a 	mov	r4,r3
  82ec9c:	08305040 	call	830504 <__mulsi3>
  82eca0:	e0bfbb15 	stw	r2,-276(fp)
  82eca4:	e0ffbd17 	ldw	r3,-268(fp)
  82eca8:	e0bfbb17 	ldw	r2,-276(fp)
  82ecac:	1885883a 	add	r2,r3,r2
  82ecb0:	e0bfbf15 	stw	r2,-260(fp)
  82ecb4:	e0ffbd17 	ldw	r3,-268(fp)
  82ecb8:	e0bfbb17 	ldw	r2,-276(fp)
  82ecbc:	1885c83a 	sub	r2,r3,r2
  82ecc0:	e0bfc215 	stw	r2,-248(fp)
  82ecc4:	014278c4 	movi	r5,2531
  82ecc8:	e13fc217 	ldw	r4,-248(fp)
  82eccc:	08305040 	call	830504 <__mulsi3>
  82ecd0:	e0bfc115 	stw	r2,-252(fp)
  82ecd4:	e0bfba17 	ldw	r2,-280(fp)
  82ecd8:	1004937a 	slli	r2,r2,13
  82ecdc:	e0bfc715 	stw	r2,-228(fp)
  82ece0:	01479bc4 	movi	r5,7791
  82ece4:	e13fbf17 	ldw	r4,-260(fp)
  82ece8:	08305040 	call	830504 <__mulsi3>
  82ecec:	e0bfbd15 	stw	r2,-268(fp)
  82ecf0:	e0ffc717 	ldw	r3,-228(fp)
  82ecf4:	e0bfc117 	ldw	r2,-252(fp)
  82ecf8:	1885883a 	add	r2,r3,r2
  82ecfc:	e0bfbb15 	stw	r2,-276(fp)
  82ed00:	014b2cc4 	movi	r5,11443
  82ed04:	e13fbc17 	ldw	r4,-272(fp)
  82ed08:	08305040 	call	830504 <__mulsi3>
  82ed0c:	1007883a 	mov	r3,r2
  82ed10:	e0bfbd17 	ldw	r2,-268(fp)
  82ed14:	1887883a 	add	r3,r3,r2
  82ed18:	e0bfbb17 	ldw	r2,-276(fp)
  82ed1c:	1885883a 	add	r2,r3,r2
  82ed20:	e0bfbe15 	stw	r2,-264(fp)
  82ed24:	0141c504 	movi	r5,1812
  82ed28:	e13fbc17 	ldw	r4,-272(fp)
  82ed2c:	08305040 	call	830504 <__mulsi3>
  82ed30:	1007883a 	mov	r3,r2
  82ed34:	e0bfbd17 	ldw	r2,-268(fp)
  82ed38:	1887c83a 	sub	r3,r3,r2
  82ed3c:	e0bfbb17 	ldw	r2,-276(fp)
  82ed40:	1885883a 	add	r2,r3,r2
  82ed44:	e0bfc815 	stw	r2,-224(fp)
  82ed48:	0144b3c4 	movi	r5,4815
  82ed4c:	e13fbf17 	ldw	r4,-260(fp)
  82ed50:	08305040 	call	830504 <__mulsi3>
  82ed54:	e0bfbd15 	stw	r2,-268(fp)
  82ed58:	e0ffc717 	ldw	r3,-228(fp)
  82ed5c:	e0bfc117 	ldw	r2,-252(fp)
  82ed60:	1887c83a 	sub	r3,r3,r2
  82ed64:	e0bfc217 	ldw	r2,-248(fp)
  82ed68:	1004933a 	slli	r2,r2,12
  82ed6c:	1885c83a 	sub	r2,r3,r2
  82ed70:	e0bfbb15 	stw	r2,-276(fp)
  82ed74:	e0ffbc17 	ldw	r3,-272(fp)
  82ed78:	e0bfc217 	ldw	r2,-248(fp)
  82ed7c:	1887c83a 	sub	r3,r3,r2
  82ed80:	e0bfba17 	ldw	r2,-280(fp)
  82ed84:	1885c83a 	sub	r2,r3,r2
  82ed88:	1085883a 	add	r2,r2,r2
  82ed8c:	1085883a 	add	r2,r2,r2
  82ed90:	e0bfc115 	stw	r2,-252(fp)
  82ed94:	014a14c4 	movi	r5,10323
  82ed98:	e13fbc17 	ldw	r4,-272(fp)
  82ed9c:	08305040 	call	830504 <__mulsi3>
  82eda0:	1007883a 	mov	r3,r2
  82eda4:	e0bfbd17 	ldw	r2,-268(fp)
  82eda8:	1887c83a 	sub	r3,r3,r2
  82edac:	e0bfbb17 	ldw	r2,-276(fp)
  82edb0:	1885c83a 	sub	r2,r3,r2
  82edb4:	e0bfbf15 	stw	r2,-260(fp)
  82edb8:	01452304 	movi	r5,5260
  82edbc:	e13fbc17 	ldw	r4,-272(fp)
  82edc0:	08305040 	call	830504 <__mulsi3>
  82edc4:	1007883a 	mov	r3,r2
  82edc8:	e0bfbd17 	ldw	r2,-268(fp)
  82edcc:	1887c83a 	sub	r3,r3,r2
  82edd0:	e0bfbb17 	ldw	r2,-276(fp)
  82edd4:	1885883a 	add	r2,r3,r2
  82edd8:	e0bfc215 	stw	r2,-248(fp)
  82eddc:	e0ffc317 	ldw	r3,-244(fp)
  82ede0:	e0bfbe17 	ldw	r2,-264(fp)
  82ede4:	1885883a 	add	r2,r3,r2
  82ede8:	1007d2fa 	srai	r3,r2,11
  82edec:	e0bfb717 	ldw	r2,-292(fp)
  82edf0:	10c00015 	stw	r3,0(r2)
  82edf4:	e0bfb717 	ldw	r2,-292(fp)
  82edf8:	10802d04 	addi	r2,r2,180
  82edfc:	e13fc317 	ldw	r4,-244(fp)
  82ee00:	e0ffbe17 	ldw	r3,-264(fp)
  82ee04:	20c7c83a 	sub	r3,r4,r3
  82ee08:	1807d2fa 	srai	r3,r3,11
  82ee0c:	10c00015 	stw	r3,0(r2)
  82ee10:	e0bfb717 	ldw	r2,-292(fp)
  82ee14:	10800504 	addi	r2,r2,20
  82ee18:	e13fc517 	ldw	r4,-236(fp)
  82ee1c:	e0ffbf17 	ldw	r3,-260(fp)
  82ee20:	20c7883a 	add	r3,r4,r3
  82ee24:	1807d2fa 	srai	r3,r3,11
  82ee28:	10c00015 	stw	r3,0(r2)
  82ee2c:	e0bfb717 	ldw	r2,-292(fp)
  82ee30:	10802804 	addi	r2,r2,160
  82ee34:	e13fc517 	ldw	r4,-236(fp)
  82ee38:	e0ffbf17 	ldw	r3,-260(fp)
  82ee3c:	20c7c83a 	sub	r3,r4,r3
  82ee40:	1807d2fa 	srai	r3,r3,11
  82ee44:	10c00015 	stw	r3,0(r2)
  82ee48:	e0bfb717 	ldw	r2,-292(fp)
  82ee4c:	10800a04 	addi	r2,r2,40
  82ee50:	e13fc017 	ldw	r4,-256(fp)
  82ee54:	e0ffc117 	ldw	r3,-252(fp)
  82ee58:	20c7883a 	add	r3,r4,r3
  82ee5c:	10c00015 	stw	r3,0(r2)
  82ee60:	e0bfb717 	ldw	r2,-292(fp)
  82ee64:	10802304 	addi	r2,r2,140
  82ee68:	e13fc017 	ldw	r4,-256(fp)
  82ee6c:	e0ffc117 	ldw	r3,-252(fp)
  82ee70:	20c7c83a 	sub	r3,r4,r3
  82ee74:	10c00015 	stw	r3,0(r2)
  82ee78:	e0bfb717 	ldw	r2,-292(fp)
  82ee7c:	10800f04 	addi	r2,r2,60
  82ee80:	e13fc617 	ldw	r4,-232(fp)
  82ee84:	e0ffc217 	ldw	r3,-248(fp)
  82ee88:	20c7883a 	add	r3,r4,r3
  82ee8c:	1807d2fa 	srai	r3,r3,11
  82ee90:	10c00015 	stw	r3,0(r2)
  82ee94:	e0bfb717 	ldw	r2,-292(fp)
  82ee98:	10801e04 	addi	r2,r2,120
  82ee9c:	e13fc617 	ldw	r4,-232(fp)
  82eea0:	e0ffc217 	ldw	r3,-248(fp)
  82eea4:	20c7c83a 	sub	r3,r4,r3
  82eea8:	1807d2fa 	srai	r3,r3,11
  82eeac:	10c00015 	stw	r3,0(r2)
  82eeb0:	e0bfb717 	ldw	r2,-292(fp)
  82eeb4:	10801404 	addi	r2,r2,80
  82eeb8:	e13fc417 	ldw	r4,-240(fp)
  82eebc:	e0ffc817 	ldw	r3,-224(fp)
  82eec0:	20c7883a 	add	r3,r4,r3
  82eec4:	1807d2fa 	srai	r3,r3,11
  82eec8:	10c00015 	stw	r3,0(r2)
  82eecc:	e0bfb717 	ldw	r2,-292(fp)
  82eed0:	10801904 	addi	r2,r2,100
  82eed4:	e13fc417 	ldw	r4,-240(fp)
  82eed8:	e0ffc817 	ldw	r3,-224(fp)
  82eedc:	20c7c83a 	sub	r3,r4,r3
  82eee0:	1807d2fa 	srai	r3,r3,11
  82eee4:	10c00015 	stw	r3,0(r2)
  82eee8:	e0bfb817 	ldw	r2,-288(fp)
  82eeec:	10800044 	addi	r2,r2,1
  82eef0:	e0bfb815 	stw	r2,-288(fp)
  82eef4:	e0bfb517 	ldw	r2,-300(fp)
  82eef8:	10800084 	addi	r2,r2,2
  82eefc:	e0bfb515 	stw	r2,-300(fp)
  82ef00:	e0bfb617 	ldw	r2,-296(fp)
  82ef04:	10800104 	addi	r2,r2,4
  82ef08:	e0bfb615 	stw	r2,-296(fp)
  82ef0c:	e0bfb717 	ldw	r2,-292(fp)
  82ef10:	10800104 	addi	r2,r2,4
  82ef14:	e0bfb715 	stw	r2,-292(fp)
  82ef18:	e0bfb817 	ldw	r2,-288(fp)
  82ef1c:	10800150 	cmplti	r2,r2,5
  82ef20:	103eb61e 	bne	r2,zero,82e9fc <__alt_mem_epcs_flash_controller_0+0xff8259fc>
  82ef24:	e0bfca04 	addi	r2,fp,-216
  82ef28:	e0bfb715 	stw	r2,-292(fp)
  82ef2c:	e03fb815 	stw	zero,-288(fp)
  82ef30:	00009106 	br	82f178 <jpeg_idct_5x10+0x7d0>
  82ef34:	e0bfb817 	ldw	r2,-288(fp)
  82ef38:	1085883a 	add	r2,r2,r2
  82ef3c:	1085883a 	add	r2,r2,r2
  82ef40:	1007883a 	mov	r3,r2
  82ef44:	e0bfff17 	ldw	r2,-4(fp)
  82ef48:	10c5883a 	add	r2,r2,r3
  82ef4c:	10c00017 	ldw	r3,0(r2)
  82ef50:	e0800217 	ldw	r2,8(fp)
  82ef54:	1885883a 	add	r2,r3,r2
  82ef58:	e0bfc915 	stw	r2,-220(fp)
  82ef5c:	e0bfb717 	ldw	r2,-292(fp)
  82ef60:	10800017 	ldw	r2,0(r2)
  82ef64:	10900404 	addi	r2,r2,16400
  82ef68:	e0bfc115 	stw	r2,-252(fp)
  82ef6c:	e0bfc117 	ldw	r2,-252(fp)
  82ef70:	1004937a 	slli	r2,r2,13
  82ef74:	e0bfc115 	stw	r2,-252(fp)
  82ef78:	e0bfb717 	ldw	r2,-292(fp)
  82ef7c:	10800204 	addi	r2,r2,8
  82ef80:	10800017 	ldw	r2,0(r2)
  82ef84:	e0bfc215 	stw	r2,-248(fp)
  82ef88:	e0bfb717 	ldw	r2,-292(fp)
  82ef8c:	10800404 	addi	r2,r2,16
  82ef90:	10800017 	ldw	r2,0(r2)
  82ef94:	e0bfc815 	stw	r2,-224(fp)
  82ef98:	e0ffc217 	ldw	r3,-248(fp)
  82ef9c:	e0bfc817 	ldw	r2,-224(fp)
  82efa0:	1885883a 	add	r2,r3,r2
  82efa4:	01465304 	movi	r5,6476
  82efa8:	1009883a 	mov	r4,r2
  82efac:	08305040 	call	830504 <__mulsi3>
  82efb0:	e0bfbc15 	stw	r2,-272(fp)
  82efb4:	e0ffc217 	ldw	r3,-248(fp)
  82efb8:	e0bfc817 	ldw	r2,-224(fp)
  82efbc:	1885c83a 	sub	r2,r3,r2
  82efc0:	0142d404 	movi	r5,2896
  82efc4:	1009883a 	mov	r4,r2
  82efc8:	08305040 	call	830504 <__mulsi3>
  82efcc:	e0bfbd15 	stw	r2,-268(fp)
  82efd0:	e0ffc117 	ldw	r3,-252(fp)
  82efd4:	e0bfbd17 	ldw	r2,-268(fp)
  82efd8:	1885883a 	add	r2,r3,r2
  82efdc:	e0bfba15 	stw	r2,-280(fp)
  82efe0:	e0ffba17 	ldw	r3,-280(fp)
  82efe4:	e0bfbc17 	ldw	r2,-272(fp)
  82efe8:	1885883a 	add	r2,r3,r2
  82efec:	e0bfbe15 	stw	r2,-264(fp)
  82eff0:	e0ffba17 	ldw	r3,-280(fp)
  82eff4:	e0bfbc17 	ldw	r2,-272(fp)
  82eff8:	1885c83a 	sub	r2,r3,r2
  82effc:	e0bfbf15 	stw	r2,-260(fp)
  82f000:	e0bfbd17 	ldw	r2,-268(fp)
  82f004:	1085883a 	add	r2,r2,r2
  82f008:	1085883a 	add	r2,r2,r2
  82f00c:	1007883a 	mov	r3,r2
  82f010:	e0bfc117 	ldw	r2,-252(fp)
  82f014:	10c5c83a 	sub	r2,r2,r3
  82f018:	e0bfc115 	stw	r2,-252(fp)
  82f01c:	e0bfb717 	ldw	r2,-292(fp)
  82f020:	10800104 	addi	r2,r2,4
  82f024:	10800017 	ldw	r2,0(r2)
  82f028:	e0bfbd15 	stw	r2,-268(fp)
  82f02c:	e0bfb717 	ldw	r2,-292(fp)
  82f030:	10800304 	addi	r2,r2,12
  82f034:	10800017 	ldw	r2,0(r2)
  82f038:	e0bfba15 	stw	r2,-280(fp)
  82f03c:	e0ffbd17 	ldw	r3,-268(fp)
  82f040:	e0bfba17 	ldw	r2,-280(fp)
  82f044:	1885883a 	add	r2,r3,r2
  82f048:	0146a684 	movi	r5,6810
  82f04c:	1009883a 	mov	r4,r2
  82f050:	08305040 	call	830504 <__mulsi3>
  82f054:	e0bfbc15 	stw	r2,-272(fp)
  82f058:	01441c44 	movi	r5,4209
  82f05c:	e13fbd17 	ldw	r4,-268(fp)
  82f060:	08305040 	call	830504 <__mulsi3>
  82f064:	1007883a 	mov	r3,r2
  82f068:	e0bfbc17 	ldw	r2,-272(fp)
  82f06c:	1885883a 	add	r2,r3,r2
  82f070:	e0bfc215 	stw	r2,-248(fp)
  82f074:	016e9704 	movi	r5,-17828
  82f078:	e13fba17 	ldw	r4,-280(fp)
  82f07c:	08305040 	call	830504 <__mulsi3>
  82f080:	1007883a 	mov	r3,r2
  82f084:	e0bfbc17 	ldw	r2,-272(fp)
  82f088:	1885883a 	add	r2,r3,r2
  82f08c:	e0bfc815 	stw	r2,-224(fp)
  82f090:	e0ffbe17 	ldw	r3,-264(fp)
  82f094:	e0bfc217 	ldw	r2,-248(fp)
  82f098:	1885883a 	add	r2,r3,r2
  82f09c:	1005d4ba 	srai	r2,r2,18
  82f0a0:	1080ffcc 	andi	r2,r2,1023
  82f0a4:	e0ffb917 	ldw	r3,-284(fp)
  82f0a8:	1885883a 	add	r2,r3,r2
  82f0ac:	10c00003 	ldbu	r3,0(r2)
  82f0b0:	e0bfc917 	ldw	r2,-220(fp)
  82f0b4:	10c00005 	stb	r3,0(r2)
  82f0b8:	e0bfc917 	ldw	r2,-220(fp)
  82f0bc:	10800104 	addi	r2,r2,4
  82f0c0:	e13fbe17 	ldw	r4,-264(fp)
  82f0c4:	e0ffc217 	ldw	r3,-248(fp)
  82f0c8:	20c7c83a 	sub	r3,r4,r3
  82f0cc:	1807d4ba 	srai	r3,r3,18
  82f0d0:	18c0ffcc 	andi	r3,r3,1023
  82f0d4:	e13fb917 	ldw	r4,-284(fp)
  82f0d8:	20c7883a 	add	r3,r4,r3
  82f0dc:	18c00003 	ldbu	r3,0(r3)
  82f0e0:	10c00005 	stb	r3,0(r2)
  82f0e4:	e0bfc917 	ldw	r2,-220(fp)
  82f0e8:	10800044 	addi	r2,r2,1
  82f0ec:	e13fbf17 	ldw	r4,-260(fp)
  82f0f0:	e0ffc817 	ldw	r3,-224(fp)
  82f0f4:	20c7883a 	add	r3,r4,r3
  82f0f8:	1807d4ba 	srai	r3,r3,18
  82f0fc:	18c0ffcc 	andi	r3,r3,1023
  82f100:	e13fb917 	ldw	r4,-284(fp)
  82f104:	20c7883a 	add	r3,r4,r3
  82f108:	18c00003 	ldbu	r3,0(r3)
  82f10c:	10c00005 	stb	r3,0(r2)
  82f110:	e0bfc917 	ldw	r2,-220(fp)
  82f114:	108000c4 	addi	r2,r2,3
  82f118:	e13fbf17 	ldw	r4,-260(fp)
  82f11c:	e0ffc817 	ldw	r3,-224(fp)
  82f120:	20c7c83a 	sub	r3,r4,r3
  82f124:	1807d4ba 	srai	r3,r3,18
  82f128:	18c0ffcc 	andi	r3,r3,1023
  82f12c:	e13fb917 	ldw	r4,-284(fp)
  82f130:	20c7883a 	add	r3,r4,r3
  82f134:	18c00003 	ldbu	r3,0(r3)
  82f138:	10c00005 	stb	r3,0(r2)
  82f13c:	e0bfc917 	ldw	r2,-220(fp)
  82f140:	10800084 	addi	r2,r2,2
  82f144:	e0ffc117 	ldw	r3,-252(fp)
  82f148:	1807d4ba 	srai	r3,r3,18
  82f14c:	18c0ffcc 	andi	r3,r3,1023
  82f150:	e13fb917 	ldw	r4,-284(fp)
  82f154:	20c7883a 	add	r3,r4,r3
  82f158:	18c00003 	ldbu	r3,0(r3)
  82f15c:	10c00005 	stb	r3,0(r2)
  82f160:	e0bfb717 	ldw	r2,-292(fp)
  82f164:	10800504 	addi	r2,r2,20
  82f168:	e0bfb715 	stw	r2,-292(fp)
  82f16c:	e0bfb817 	ldw	r2,-288(fp)
  82f170:	10800044 	addi	r2,r2,1
  82f174:	e0bfb815 	stw	r2,-288(fp)
  82f178:	e0bfb817 	ldw	r2,-288(fp)
  82f17c:	10800290 	cmplti	r2,r2,10
  82f180:	103f6c1e 	bne	r2,zero,82ef34 <__alt_mem_epcs_flash_controller_0+0xff825f34>
  82f184:	0001883a 	nop
  82f188:	e037883a 	mov	sp,fp
  82f18c:	dfc00117 	ldw	ra,4(sp)
  82f190:	df000017 	ldw	fp,0(sp)
  82f194:	dec00204 	addi	sp,sp,8
  82f198:	f800283a 	ret

0082f19c <jpeg_idct_4x8>:
  82f19c:	deffc804 	addi	sp,sp,-224
  82f1a0:	dfc03715 	stw	ra,220(sp)
  82f1a4:	df003615 	stw	fp,216(sp)
  82f1a8:	df003604 	addi	fp,sp,216
  82f1ac:	e13ffc15 	stw	r4,-16(fp)
  82f1b0:	e17ffd15 	stw	r5,-12(fp)
  82f1b4:	e1bffe15 	stw	r6,-8(fp)
  82f1b8:	e1ffff15 	stw	r7,-4(fp)
  82f1bc:	e0bffc17 	ldw	r2,-16(fp)
  82f1c0:	10805417 	ldw	r2,336(r2)
  82f1c4:	10bfa004 	addi	r2,r2,-384
  82f1c8:	e0bfce15 	stw	r2,-200(fp)
  82f1cc:	e0bffe17 	ldw	r2,-8(fp)
  82f1d0:	e0bfca15 	stw	r2,-216(fp)
  82f1d4:	e0bffd17 	ldw	r2,-12(fp)
  82f1d8:	10801517 	ldw	r2,84(r2)
  82f1dc:	e0bfcb15 	stw	r2,-212(fp)
  82f1e0:	e0bfdc04 	addi	r2,fp,-144
  82f1e4:	e0bfcc15 	stw	r2,-208(fp)
  82f1e8:	00800104 	movi	r2,4
  82f1ec:	e0bfcd15 	stw	r2,-204(fp)
  82f1f0:	00019b06 	br	82f860 <jpeg_idct_4x8+0x6c4>
  82f1f4:	e0bfca17 	ldw	r2,-216(fp)
  82f1f8:	10800404 	addi	r2,r2,16
  82f1fc:	1080000b 	ldhu	r2,0(r2)
  82f200:	10bfffcc 	andi	r2,r2,65535
  82f204:	10a0001c 	xori	r2,r2,32768
  82f208:	10a00004 	addi	r2,r2,-32768
  82f20c:	1000601e 	bne	r2,zero,82f390 <jpeg_idct_4x8+0x1f4>
  82f210:	e0bfca17 	ldw	r2,-216(fp)
  82f214:	10800804 	addi	r2,r2,32
  82f218:	1080000b 	ldhu	r2,0(r2)
  82f21c:	10bfffcc 	andi	r2,r2,65535
  82f220:	10a0001c 	xori	r2,r2,32768
  82f224:	10a00004 	addi	r2,r2,-32768
  82f228:	1000591e 	bne	r2,zero,82f390 <jpeg_idct_4x8+0x1f4>
  82f22c:	e0bfca17 	ldw	r2,-216(fp)
  82f230:	10800c04 	addi	r2,r2,48
  82f234:	1080000b 	ldhu	r2,0(r2)
  82f238:	10bfffcc 	andi	r2,r2,65535
  82f23c:	10a0001c 	xori	r2,r2,32768
  82f240:	10a00004 	addi	r2,r2,-32768
  82f244:	1000521e 	bne	r2,zero,82f390 <jpeg_idct_4x8+0x1f4>
  82f248:	e0bfca17 	ldw	r2,-216(fp)
  82f24c:	10801004 	addi	r2,r2,64
  82f250:	1080000b 	ldhu	r2,0(r2)
  82f254:	10bfffcc 	andi	r2,r2,65535
  82f258:	10a0001c 	xori	r2,r2,32768
  82f25c:	10a00004 	addi	r2,r2,-32768
  82f260:	10004b1e 	bne	r2,zero,82f390 <jpeg_idct_4x8+0x1f4>
  82f264:	e0bfca17 	ldw	r2,-216(fp)
  82f268:	10801404 	addi	r2,r2,80
  82f26c:	1080000b 	ldhu	r2,0(r2)
  82f270:	10bfffcc 	andi	r2,r2,65535
  82f274:	10a0001c 	xori	r2,r2,32768
  82f278:	10a00004 	addi	r2,r2,-32768
  82f27c:	1000441e 	bne	r2,zero,82f390 <jpeg_idct_4x8+0x1f4>
  82f280:	e0bfca17 	ldw	r2,-216(fp)
  82f284:	10801804 	addi	r2,r2,96
  82f288:	1080000b 	ldhu	r2,0(r2)
  82f28c:	10bfffcc 	andi	r2,r2,65535
  82f290:	10a0001c 	xori	r2,r2,32768
  82f294:	10a00004 	addi	r2,r2,-32768
  82f298:	10003d1e 	bne	r2,zero,82f390 <jpeg_idct_4x8+0x1f4>
  82f29c:	e0bfca17 	ldw	r2,-216(fp)
  82f2a0:	10801c04 	addi	r2,r2,112
  82f2a4:	1080000b 	ldhu	r2,0(r2)
  82f2a8:	10bfffcc 	andi	r2,r2,65535
  82f2ac:	10a0001c 	xori	r2,r2,32768
  82f2b0:	10a00004 	addi	r2,r2,-32768
  82f2b4:	1000361e 	bne	r2,zero,82f390 <jpeg_idct_4x8+0x1f4>
  82f2b8:	e0bfca17 	ldw	r2,-216(fp)
  82f2bc:	1080000b 	ldhu	r2,0(r2)
  82f2c0:	10ffffcc 	andi	r3,r2,65535
  82f2c4:	18e0001c 	xori	r3,r3,32768
  82f2c8:	18e00004 	addi	r3,r3,-32768
  82f2cc:	e0bfcb17 	ldw	r2,-212(fp)
  82f2d0:	10800017 	ldw	r2,0(r2)
  82f2d4:	100b883a 	mov	r5,r2
  82f2d8:	1809883a 	mov	r4,r3
  82f2dc:	08305040 	call	830504 <__mulsi3>
  82f2e0:	1085883a 	add	r2,r2,r2
  82f2e4:	1085883a 	add	r2,r2,r2
  82f2e8:	e0bfcf15 	stw	r2,-196(fp)
  82f2ec:	e0bfcc17 	ldw	r2,-208(fp)
  82f2f0:	e0ffcf17 	ldw	r3,-196(fp)
  82f2f4:	10c00015 	stw	r3,0(r2)
  82f2f8:	e0bfcc17 	ldw	r2,-208(fp)
  82f2fc:	10800404 	addi	r2,r2,16
  82f300:	e0ffcf17 	ldw	r3,-196(fp)
  82f304:	10c00015 	stw	r3,0(r2)
  82f308:	e0bfcc17 	ldw	r2,-208(fp)
  82f30c:	10800804 	addi	r2,r2,32
  82f310:	e0ffcf17 	ldw	r3,-196(fp)
  82f314:	10c00015 	stw	r3,0(r2)
  82f318:	e0bfcc17 	ldw	r2,-208(fp)
  82f31c:	10800c04 	addi	r2,r2,48
  82f320:	e0ffcf17 	ldw	r3,-196(fp)
  82f324:	10c00015 	stw	r3,0(r2)
  82f328:	e0bfcc17 	ldw	r2,-208(fp)
  82f32c:	10801004 	addi	r2,r2,64
  82f330:	e0ffcf17 	ldw	r3,-196(fp)
  82f334:	10c00015 	stw	r3,0(r2)
  82f338:	e0bfcc17 	ldw	r2,-208(fp)
  82f33c:	10801404 	addi	r2,r2,80
  82f340:	e0ffcf17 	ldw	r3,-196(fp)
  82f344:	10c00015 	stw	r3,0(r2)
  82f348:	e0bfcc17 	ldw	r2,-208(fp)
  82f34c:	10801804 	addi	r2,r2,96
  82f350:	e0ffcf17 	ldw	r3,-196(fp)
  82f354:	10c00015 	stw	r3,0(r2)
  82f358:	e0bfcc17 	ldw	r2,-208(fp)
  82f35c:	10801c04 	addi	r2,r2,112
  82f360:	e0ffcf17 	ldw	r3,-196(fp)
  82f364:	10c00015 	stw	r3,0(r2)
  82f368:	e0bfca17 	ldw	r2,-216(fp)
  82f36c:	10800084 	addi	r2,r2,2
  82f370:	e0bfca15 	stw	r2,-216(fp)
  82f374:	e0bfcb17 	ldw	r2,-212(fp)
  82f378:	10800104 	addi	r2,r2,4
  82f37c:	e0bfcb15 	stw	r2,-212(fp)
  82f380:	e0bfcc17 	ldw	r2,-208(fp)
  82f384:	10800104 	addi	r2,r2,4
  82f388:	e0bfcc15 	stw	r2,-208(fp)
  82f38c:	00013106 	br	82f854 <jpeg_idct_4x8+0x6b8>
  82f390:	e0bfca17 	ldw	r2,-216(fp)
  82f394:	10800804 	addi	r2,r2,32
  82f398:	1080000b 	ldhu	r2,0(r2)
  82f39c:	10ffffcc 	andi	r3,r2,65535
  82f3a0:	18e0001c 	xori	r3,r3,32768
  82f3a4:	18e00004 	addi	r3,r3,-32768
  82f3a8:	e0bfcb17 	ldw	r2,-212(fp)
  82f3ac:	10801004 	addi	r2,r2,64
  82f3b0:	10800017 	ldw	r2,0(r2)
  82f3b4:	100b883a 	mov	r5,r2
  82f3b8:	1809883a 	mov	r4,r3
  82f3bc:	08305040 	call	830504 <__mulsi3>
  82f3c0:	e0bfd015 	stw	r2,-192(fp)
  82f3c4:	e0bfca17 	ldw	r2,-216(fp)
  82f3c8:	10801804 	addi	r2,r2,96
  82f3cc:	1080000b 	ldhu	r2,0(r2)
  82f3d0:	10ffffcc 	andi	r3,r2,65535
  82f3d4:	18e0001c 	xori	r3,r3,32768
  82f3d8:	18e00004 	addi	r3,r3,-32768
  82f3dc:	e0bfcb17 	ldw	r2,-212(fp)
  82f3e0:	10803004 	addi	r2,r2,192
  82f3e4:	10800017 	ldw	r2,0(r2)
  82f3e8:	100b883a 	mov	r5,r2
  82f3ec:	1809883a 	mov	r4,r3
  82f3f0:	08305040 	call	830504 <__mulsi3>
  82f3f4:	e0bfd115 	stw	r2,-188(fp)
  82f3f8:	e0ffd017 	ldw	r3,-192(fp)
  82f3fc:	e0bfd117 	ldw	r2,-188(fp)
  82f400:	1885883a 	add	r2,r3,r2
  82f404:	01445444 	movi	r5,4433
  82f408:	1009883a 	mov	r4,r2
  82f40c:	08305040 	call	830504 <__mulsi3>
  82f410:	e0bfd215 	stw	r2,-184(fp)
  82f414:	01461f84 	movi	r5,6270
  82f418:	e13fd017 	ldw	r4,-192(fp)
  82f41c:	08305040 	call	830504 <__mulsi3>
  82f420:	1007883a 	mov	r3,r2
  82f424:	e0bfd217 	ldw	r2,-184(fp)
  82f428:	1885883a 	add	r2,r3,r2
  82f42c:	e0bfd315 	stw	r2,-180(fp)
  82f430:	017137c4 	movi	r5,-15137
  82f434:	e13fd117 	ldw	r4,-188(fp)
  82f438:	08305040 	call	830504 <__mulsi3>
  82f43c:	1007883a 	mov	r3,r2
  82f440:	e0bfd217 	ldw	r2,-184(fp)
  82f444:	1885883a 	add	r2,r3,r2
  82f448:	e0bfd415 	stw	r2,-176(fp)
  82f44c:	e0bfca17 	ldw	r2,-216(fp)
  82f450:	1080000b 	ldhu	r2,0(r2)
  82f454:	10ffffcc 	andi	r3,r2,65535
  82f458:	18e0001c 	xori	r3,r3,32768
  82f45c:	18e00004 	addi	r3,r3,-32768
  82f460:	e0bfcb17 	ldw	r2,-212(fp)
  82f464:	10800017 	ldw	r2,0(r2)
  82f468:	100b883a 	mov	r5,r2
  82f46c:	1809883a 	mov	r4,r3
  82f470:	08305040 	call	830504 <__mulsi3>
  82f474:	e0bfd015 	stw	r2,-192(fp)
  82f478:	e0bfca17 	ldw	r2,-216(fp)
  82f47c:	10801004 	addi	r2,r2,64
  82f480:	1080000b 	ldhu	r2,0(r2)
  82f484:	10ffffcc 	andi	r3,r2,65535
  82f488:	18e0001c 	xori	r3,r3,32768
  82f48c:	18e00004 	addi	r3,r3,-32768
  82f490:	e0bfcb17 	ldw	r2,-212(fp)
  82f494:	10802004 	addi	r2,r2,128
  82f498:	10800017 	ldw	r2,0(r2)
  82f49c:	100b883a 	mov	r5,r2
  82f4a0:	1809883a 	mov	r4,r3
  82f4a4:	08305040 	call	830504 <__mulsi3>
  82f4a8:	e0bfd115 	stw	r2,-188(fp)
  82f4ac:	e0bfd017 	ldw	r2,-192(fp)
  82f4b0:	1004937a 	slli	r2,r2,13
  82f4b4:	e0bfd015 	stw	r2,-192(fp)
  82f4b8:	e0bfd117 	ldw	r2,-188(fp)
  82f4bc:	1004937a 	slli	r2,r2,13
  82f4c0:	e0bfd115 	stw	r2,-188(fp)
  82f4c4:	e0bfd017 	ldw	r2,-192(fp)
  82f4c8:	10810004 	addi	r2,r2,1024
  82f4cc:	e0bfd015 	stw	r2,-192(fp)
  82f4d0:	e0ffd017 	ldw	r3,-192(fp)
  82f4d4:	e0bfd117 	ldw	r2,-188(fp)
  82f4d8:	1885883a 	add	r2,r3,r2
  82f4dc:	e0bfd515 	stw	r2,-172(fp)
  82f4e0:	e0ffd017 	ldw	r3,-192(fp)
  82f4e4:	e0bfd117 	ldw	r2,-188(fp)
  82f4e8:	1885c83a 	sub	r2,r3,r2
  82f4ec:	e0bfd615 	stw	r2,-168(fp)
  82f4f0:	e0ffd517 	ldw	r3,-172(fp)
  82f4f4:	e0bfd317 	ldw	r2,-180(fp)
  82f4f8:	1885883a 	add	r2,r3,r2
  82f4fc:	e0bfd715 	stw	r2,-164(fp)
  82f500:	e0ffd517 	ldw	r3,-172(fp)
  82f504:	e0bfd317 	ldw	r2,-180(fp)
  82f508:	1885c83a 	sub	r2,r3,r2
  82f50c:	e0bfd815 	stw	r2,-160(fp)
  82f510:	e0ffd617 	ldw	r3,-168(fp)
  82f514:	e0bfd417 	ldw	r2,-176(fp)
  82f518:	1885883a 	add	r2,r3,r2
  82f51c:	e0bfd915 	stw	r2,-156(fp)
  82f520:	e0ffd617 	ldw	r3,-168(fp)
  82f524:	e0bfd417 	ldw	r2,-176(fp)
  82f528:	1885c83a 	sub	r2,r3,r2
  82f52c:	e0bfda15 	stw	r2,-152(fp)
  82f530:	e0bfca17 	ldw	r2,-216(fp)
  82f534:	10801c04 	addi	r2,r2,112
  82f538:	1080000b 	ldhu	r2,0(r2)
  82f53c:	10ffffcc 	andi	r3,r2,65535
  82f540:	18e0001c 	xori	r3,r3,32768
  82f544:	18e00004 	addi	r3,r3,-32768
  82f548:	e0bfcb17 	ldw	r2,-212(fp)
  82f54c:	10803804 	addi	r2,r2,224
  82f550:	10800017 	ldw	r2,0(r2)
  82f554:	100b883a 	mov	r5,r2
  82f558:	1809883a 	mov	r4,r3
  82f55c:	08305040 	call	830504 <__mulsi3>
  82f560:	e0bfd515 	stw	r2,-172(fp)
  82f564:	e0bfca17 	ldw	r2,-216(fp)
  82f568:	10801404 	addi	r2,r2,80
  82f56c:	1080000b 	ldhu	r2,0(r2)
  82f570:	10ffffcc 	andi	r3,r2,65535
  82f574:	18e0001c 	xori	r3,r3,32768
  82f578:	18e00004 	addi	r3,r3,-32768
  82f57c:	e0bfcb17 	ldw	r2,-212(fp)
  82f580:	10802804 	addi	r2,r2,160
  82f584:	10800017 	ldw	r2,0(r2)
  82f588:	100b883a 	mov	r5,r2
  82f58c:	1809883a 	mov	r4,r3
  82f590:	08305040 	call	830504 <__mulsi3>
  82f594:	e0bfd615 	stw	r2,-168(fp)
  82f598:	e0bfca17 	ldw	r2,-216(fp)
  82f59c:	10800c04 	addi	r2,r2,48
  82f5a0:	1080000b 	ldhu	r2,0(r2)
  82f5a4:	10ffffcc 	andi	r3,r2,65535
  82f5a8:	18e0001c 	xori	r3,r3,32768
  82f5ac:	18e00004 	addi	r3,r3,-32768
  82f5b0:	e0bfcb17 	ldw	r2,-212(fp)
  82f5b4:	10801804 	addi	r2,r2,96
  82f5b8:	10800017 	ldw	r2,0(r2)
  82f5bc:	100b883a 	mov	r5,r2
  82f5c0:	1809883a 	mov	r4,r3
  82f5c4:	08305040 	call	830504 <__mulsi3>
  82f5c8:	e0bfd315 	stw	r2,-180(fp)
  82f5cc:	e0bfca17 	ldw	r2,-216(fp)
  82f5d0:	10800404 	addi	r2,r2,16
  82f5d4:	1080000b 	ldhu	r2,0(r2)
  82f5d8:	10ffffcc 	andi	r3,r2,65535
  82f5dc:	18e0001c 	xori	r3,r3,32768
  82f5e0:	18e00004 	addi	r3,r3,-32768
  82f5e4:	e0bfcb17 	ldw	r2,-212(fp)
  82f5e8:	10800804 	addi	r2,r2,32
  82f5ec:	10800017 	ldw	r2,0(r2)
  82f5f0:	100b883a 	mov	r5,r2
  82f5f4:	1809883a 	mov	r4,r3
  82f5f8:	08305040 	call	830504 <__mulsi3>
  82f5fc:	e0bfd415 	stw	r2,-176(fp)
  82f600:	e0ffd517 	ldw	r3,-172(fp)
  82f604:	e0bfd317 	ldw	r2,-180(fp)
  82f608:	1885883a 	add	r2,r3,r2
  82f60c:	e0bfd015 	stw	r2,-192(fp)
  82f610:	e0ffd617 	ldw	r3,-168(fp)
  82f614:	e0bfd417 	ldw	r2,-176(fp)
  82f618:	1885883a 	add	r2,r3,r2
  82f61c:	e0bfd115 	stw	r2,-188(fp)
  82f620:	e0ffd017 	ldw	r3,-192(fp)
  82f624:	e0bfd117 	ldw	r2,-188(fp)
  82f628:	1885883a 	add	r2,r3,r2
  82f62c:	01496844 	movi	r5,9633
  82f630:	1009883a 	mov	r4,r2
  82f634:	08305040 	call	830504 <__mulsi3>
  82f638:	e0bfd215 	stw	r2,-184(fp)
  82f63c:	01704ec4 	movi	r5,-16069
  82f640:	e13fd017 	ldw	r4,-192(fp)
  82f644:	08305040 	call	830504 <__mulsi3>
  82f648:	e0bfd015 	stw	r2,-192(fp)
  82f64c:	017ce104 	movi	r5,-3196
  82f650:	e13fd117 	ldw	r4,-188(fp)
  82f654:	08305040 	call	830504 <__mulsi3>
  82f658:	e0bfd115 	stw	r2,-188(fp)
  82f65c:	e0ffd017 	ldw	r3,-192(fp)
  82f660:	e0bfd217 	ldw	r2,-184(fp)
  82f664:	1885883a 	add	r2,r3,r2
  82f668:	e0bfd015 	stw	r2,-192(fp)
  82f66c:	e0ffd117 	ldw	r3,-188(fp)
  82f670:	e0bfd217 	ldw	r2,-184(fp)
  82f674:	1885883a 	add	r2,r3,r2
  82f678:	e0bfd115 	stw	r2,-188(fp)
  82f67c:	e0ffd517 	ldw	r3,-172(fp)
  82f680:	e0bfd417 	ldw	r2,-176(fp)
  82f684:	1885883a 	add	r2,r3,r2
  82f688:	0178ccc4 	movi	r5,-7373
  82f68c:	1009883a 	mov	r4,r2
  82f690:	08305040 	call	830504 <__mulsi3>
  82f694:	e0bfd215 	stw	r2,-184(fp)
  82f698:	01426384 	movi	r5,2446
  82f69c:	e13fd517 	ldw	r4,-172(fp)
  82f6a0:	08305040 	call	830504 <__mulsi3>
  82f6a4:	e0bfd515 	stw	r2,-172(fp)
  82f6a8:	014c02c4 	movi	r5,12299
  82f6ac:	e13fd417 	ldw	r4,-176(fp)
  82f6b0:	08305040 	call	830504 <__mulsi3>
  82f6b4:	e0bfd415 	stw	r2,-176(fp)
  82f6b8:	e0ffd217 	ldw	r3,-184(fp)
  82f6bc:	e0bfd017 	ldw	r2,-192(fp)
  82f6c0:	1885883a 	add	r2,r3,r2
  82f6c4:	e0ffd517 	ldw	r3,-172(fp)
  82f6c8:	1885883a 	add	r2,r3,r2
  82f6cc:	e0bfd515 	stw	r2,-172(fp)
  82f6d0:	e0ffd217 	ldw	r3,-184(fp)
  82f6d4:	e0bfd117 	ldw	r2,-188(fp)
  82f6d8:	1885883a 	add	r2,r3,r2
  82f6dc:	e0ffd417 	ldw	r3,-176(fp)
  82f6e0:	1885883a 	add	r2,r3,r2
  82f6e4:	e0bfd415 	stw	r2,-176(fp)
  82f6e8:	e0ffd617 	ldw	r3,-168(fp)
  82f6ec:	e0bfd317 	ldw	r2,-180(fp)
  82f6f0:	1885883a 	add	r2,r3,r2
  82f6f4:	016b7f44 	movi	r5,-20995
  82f6f8:	1009883a 	mov	r4,r2
  82f6fc:	08305040 	call	830504 <__mulsi3>
  82f700:	e0bfd215 	stw	r2,-184(fp)
  82f704:	01506cc4 	movi	r5,16819
  82f708:	e13fd617 	ldw	r4,-168(fp)
  82f70c:	08305040 	call	830504 <__mulsi3>
  82f710:	e0bfd615 	stw	r2,-168(fp)
  82f714:	01589504 	movi	r5,25172
  82f718:	e13fd317 	ldw	r4,-180(fp)
  82f71c:	08305040 	call	830504 <__mulsi3>
  82f720:	e0bfd315 	stw	r2,-180(fp)
  82f724:	e0ffd217 	ldw	r3,-184(fp)
  82f728:	e0bfd117 	ldw	r2,-188(fp)
  82f72c:	1885883a 	add	r2,r3,r2
  82f730:	e0ffd617 	ldw	r3,-168(fp)
  82f734:	1885883a 	add	r2,r3,r2
  82f738:	e0bfd615 	stw	r2,-168(fp)
  82f73c:	e0ffd217 	ldw	r3,-184(fp)
  82f740:	e0bfd017 	ldw	r2,-192(fp)
  82f744:	1885883a 	add	r2,r3,r2
  82f748:	e0ffd317 	ldw	r3,-180(fp)
  82f74c:	1885883a 	add	r2,r3,r2
  82f750:	e0bfd315 	stw	r2,-180(fp)
  82f754:	e0ffd717 	ldw	r3,-164(fp)
  82f758:	e0bfd417 	ldw	r2,-176(fp)
  82f75c:	1885883a 	add	r2,r3,r2
  82f760:	1007d2fa 	srai	r3,r2,11
  82f764:	e0bfcc17 	ldw	r2,-208(fp)
  82f768:	10c00015 	stw	r3,0(r2)
  82f76c:	e0bfcc17 	ldw	r2,-208(fp)
  82f770:	10801c04 	addi	r2,r2,112
  82f774:	e13fd717 	ldw	r4,-164(fp)
  82f778:	e0ffd417 	ldw	r3,-176(fp)
  82f77c:	20c7c83a 	sub	r3,r4,r3
  82f780:	1807d2fa 	srai	r3,r3,11
  82f784:	10c00015 	stw	r3,0(r2)
  82f788:	e0bfcc17 	ldw	r2,-208(fp)
  82f78c:	10800404 	addi	r2,r2,16
  82f790:	e13fd917 	ldw	r4,-156(fp)
  82f794:	e0ffd317 	ldw	r3,-180(fp)
  82f798:	20c7883a 	add	r3,r4,r3
  82f79c:	1807d2fa 	srai	r3,r3,11
  82f7a0:	10c00015 	stw	r3,0(r2)
  82f7a4:	e0bfcc17 	ldw	r2,-208(fp)
  82f7a8:	10801804 	addi	r2,r2,96
  82f7ac:	e13fd917 	ldw	r4,-156(fp)
  82f7b0:	e0ffd317 	ldw	r3,-180(fp)
  82f7b4:	20c7c83a 	sub	r3,r4,r3
  82f7b8:	1807d2fa 	srai	r3,r3,11
  82f7bc:	10c00015 	stw	r3,0(r2)
  82f7c0:	e0bfcc17 	ldw	r2,-208(fp)
  82f7c4:	10800804 	addi	r2,r2,32
  82f7c8:	e13fda17 	ldw	r4,-152(fp)
  82f7cc:	e0ffd617 	ldw	r3,-168(fp)
  82f7d0:	20c7883a 	add	r3,r4,r3
  82f7d4:	1807d2fa 	srai	r3,r3,11
  82f7d8:	10c00015 	stw	r3,0(r2)
  82f7dc:	e0bfcc17 	ldw	r2,-208(fp)
  82f7e0:	10801404 	addi	r2,r2,80
  82f7e4:	e13fda17 	ldw	r4,-152(fp)
  82f7e8:	e0ffd617 	ldw	r3,-168(fp)
  82f7ec:	20c7c83a 	sub	r3,r4,r3
  82f7f0:	1807d2fa 	srai	r3,r3,11
  82f7f4:	10c00015 	stw	r3,0(r2)
  82f7f8:	e0bfcc17 	ldw	r2,-208(fp)
  82f7fc:	10800c04 	addi	r2,r2,48
  82f800:	e13fd817 	ldw	r4,-160(fp)
  82f804:	e0ffd517 	ldw	r3,-172(fp)
  82f808:	20c7883a 	add	r3,r4,r3
  82f80c:	1807d2fa 	srai	r3,r3,11
  82f810:	10c00015 	stw	r3,0(r2)
  82f814:	e0bfcc17 	ldw	r2,-208(fp)
  82f818:	10801004 	addi	r2,r2,64
  82f81c:	e13fd817 	ldw	r4,-160(fp)
  82f820:	e0ffd517 	ldw	r3,-172(fp)
  82f824:	20c7c83a 	sub	r3,r4,r3
  82f828:	1807d2fa 	srai	r3,r3,11
  82f82c:	10c00015 	stw	r3,0(r2)
  82f830:	e0bfca17 	ldw	r2,-216(fp)
  82f834:	10800084 	addi	r2,r2,2
  82f838:	e0bfca15 	stw	r2,-216(fp)
  82f83c:	e0bfcb17 	ldw	r2,-212(fp)
  82f840:	10800104 	addi	r2,r2,4
  82f844:	e0bfcb15 	stw	r2,-212(fp)
  82f848:	e0bfcc17 	ldw	r2,-208(fp)
  82f84c:	10800104 	addi	r2,r2,4
  82f850:	e0bfcc15 	stw	r2,-208(fp)
  82f854:	e0bfcd17 	ldw	r2,-204(fp)
  82f858:	10bfffc4 	addi	r2,r2,-1
  82f85c:	e0bfcd15 	stw	r2,-204(fp)
  82f860:	e0bfcd17 	ldw	r2,-204(fp)
  82f864:	00be6316 	blt	zero,r2,82f1f4 <__alt_mem_epcs_flash_controller_0+0xff8261f4>
  82f868:	e0bfdc04 	addi	r2,fp,-144
  82f86c:	e0bfcc15 	stw	r2,-208(fp)
  82f870:	e03fcd15 	stw	zero,-204(fp)
  82f874:	00006a06 	br	82fa20 <jpeg_idct_4x8+0x884>
  82f878:	e0bfcd17 	ldw	r2,-204(fp)
  82f87c:	1085883a 	add	r2,r2,r2
  82f880:	1085883a 	add	r2,r2,r2
  82f884:	1007883a 	mov	r3,r2
  82f888:	e0bfff17 	ldw	r2,-4(fp)
  82f88c:	10c5883a 	add	r2,r2,r3
  82f890:	10c00017 	ldw	r3,0(r2)
  82f894:	e0800217 	ldw	r2,8(fp)
  82f898:	1885883a 	add	r2,r3,r2
  82f89c:	e0bfdb15 	stw	r2,-148(fp)
  82f8a0:	e0bfcc17 	ldw	r2,-208(fp)
  82f8a4:	10800017 	ldw	r2,0(r2)
  82f8a8:	10900404 	addi	r2,r2,16400
  82f8ac:	e0bfd515 	stw	r2,-172(fp)
  82f8b0:	e0bfcc17 	ldw	r2,-208(fp)
  82f8b4:	10800204 	addi	r2,r2,8
  82f8b8:	10800017 	ldw	r2,0(r2)
  82f8bc:	e0bfd315 	stw	r2,-180(fp)
  82f8c0:	e0ffd517 	ldw	r3,-172(fp)
  82f8c4:	e0bfd317 	ldw	r2,-180(fp)
  82f8c8:	1885883a 	add	r2,r3,r2
  82f8cc:	1004937a 	slli	r2,r2,13
  82f8d0:	e0bfd715 	stw	r2,-164(fp)
  82f8d4:	e0ffd517 	ldw	r3,-172(fp)
  82f8d8:	e0bfd317 	ldw	r2,-180(fp)
  82f8dc:	1885c83a 	sub	r2,r3,r2
  82f8e0:	1004937a 	slli	r2,r2,13
  82f8e4:	e0bfda15 	stw	r2,-152(fp)
  82f8e8:	e0bfcc17 	ldw	r2,-208(fp)
  82f8ec:	10800104 	addi	r2,r2,4
  82f8f0:	10800017 	ldw	r2,0(r2)
  82f8f4:	e0bfd015 	stw	r2,-192(fp)
  82f8f8:	e0bfcc17 	ldw	r2,-208(fp)
  82f8fc:	10800304 	addi	r2,r2,12
  82f900:	10800017 	ldw	r2,0(r2)
  82f904:	e0bfd115 	stw	r2,-188(fp)
  82f908:	e0ffd017 	ldw	r3,-192(fp)
  82f90c:	e0bfd117 	ldw	r2,-188(fp)
  82f910:	1885883a 	add	r2,r3,r2
  82f914:	01445444 	movi	r5,4433
  82f918:	1009883a 	mov	r4,r2
  82f91c:	08305040 	call	830504 <__mulsi3>
  82f920:	e0bfd215 	stw	r2,-184(fp)
  82f924:	01461f84 	movi	r5,6270
  82f928:	e13fd017 	ldw	r4,-192(fp)
  82f92c:	08305040 	call	830504 <__mulsi3>
  82f930:	1007883a 	mov	r3,r2
  82f934:	e0bfd217 	ldw	r2,-184(fp)
  82f938:	1885883a 	add	r2,r3,r2
  82f93c:	e0bfd515 	stw	r2,-172(fp)
  82f940:	017137c4 	movi	r5,-15137
  82f944:	e13fd117 	ldw	r4,-188(fp)
  82f948:	08305040 	call	830504 <__mulsi3>
  82f94c:	1007883a 	mov	r3,r2
  82f950:	e0bfd217 	ldw	r2,-184(fp)
  82f954:	1885883a 	add	r2,r3,r2
  82f958:	e0bfd315 	stw	r2,-180(fp)
  82f95c:	e0ffd717 	ldw	r3,-164(fp)
  82f960:	e0bfd517 	ldw	r2,-172(fp)
  82f964:	1885883a 	add	r2,r3,r2
  82f968:	1005d4ba 	srai	r2,r2,18
  82f96c:	1080ffcc 	andi	r2,r2,1023
  82f970:	e0ffce17 	ldw	r3,-200(fp)
  82f974:	1885883a 	add	r2,r3,r2
  82f978:	10c00003 	ldbu	r3,0(r2)
  82f97c:	e0bfdb17 	ldw	r2,-148(fp)
  82f980:	10c00005 	stb	r3,0(r2)
  82f984:	e0bfdb17 	ldw	r2,-148(fp)
  82f988:	108000c4 	addi	r2,r2,3
  82f98c:	e13fd717 	ldw	r4,-164(fp)
  82f990:	e0ffd517 	ldw	r3,-172(fp)
  82f994:	20c7c83a 	sub	r3,r4,r3
  82f998:	1807d4ba 	srai	r3,r3,18
  82f99c:	18c0ffcc 	andi	r3,r3,1023
  82f9a0:	e13fce17 	ldw	r4,-200(fp)
  82f9a4:	20c7883a 	add	r3,r4,r3
  82f9a8:	18c00003 	ldbu	r3,0(r3)
  82f9ac:	10c00005 	stb	r3,0(r2)
  82f9b0:	e0bfdb17 	ldw	r2,-148(fp)
  82f9b4:	10800044 	addi	r2,r2,1
  82f9b8:	e13fda17 	ldw	r4,-152(fp)
  82f9bc:	e0ffd317 	ldw	r3,-180(fp)
  82f9c0:	20c7883a 	add	r3,r4,r3
  82f9c4:	1807d4ba 	srai	r3,r3,18
  82f9c8:	18c0ffcc 	andi	r3,r3,1023
  82f9cc:	e13fce17 	ldw	r4,-200(fp)
  82f9d0:	20c7883a 	add	r3,r4,r3
  82f9d4:	18c00003 	ldbu	r3,0(r3)
  82f9d8:	10c00005 	stb	r3,0(r2)
  82f9dc:	e0bfdb17 	ldw	r2,-148(fp)
  82f9e0:	10800084 	addi	r2,r2,2
  82f9e4:	e13fda17 	ldw	r4,-152(fp)
  82f9e8:	e0ffd317 	ldw	r3,-180(fp)
  82f9ec:	20c7c83a 	sub	r3,r4,r3
  82f9f0:	1807d4ba 	srai	r3,r3,18
  82f9f4:	18c0ffcc 	andi	r3,r3,1023
  82f9f8:	e13fce17 	ldw	r4,-200(fp)
  82f9fc:	20c7883a 	add	r3,r4,r3
  82fa00:	18c00003 	ldbu	r3,0(r3)
  82fa04:	10c00005 	stb	r3,0(r2)
  82fa08:	e0bfcc17 	ldw	r2,-208(fp)
  82fa0c:	10800404 	addi	r2,r2,16
  82fa10:	e0bfcc15 	stw	r2,-208(fp)
  82fa14:	e0bfcd17 	ldw	r2,-204(fp)
  82fa18:	10800044 	addi	r2,r2,1
  82fa1c:	e0bfcd15 	stw	r2,-204(fp)
  82fa20:	e0bfcd17 	ldw	r2,-204(fp)
  82fa24:	10800210 	cmplti	r2,r2,8
  82fa28:	103f931e 	bne	r2,zero,82f878 <__alt_mem_epcs_flash_controller_0+0xff826878>
  82fa2c:	0001883a 	nop
  82fa30:	e037883a 	mov	sp,fp
  82fa34:	dfc00117 	ldw	ra,4(sp)
  82fa38:	df000017 	ldw	fp,0(sp)
  82fa3c:	dec00204 	addi	sp,sp,8
  82fa40:	f800283a 	ret

0082fa44 <jpeg_idct_3x6>:
  82fa44:	deffd904 	addi	sp,sp,-156
  82fa48:	dfc02615 	stw	ra,152(sp)
  82fa4c:	df002515 	stw	fp,148(sp)
  82fa50:	df002504 	addi	fp,sp,148
  82fa54:	e13ffc15 	stw	r4,-16(fp)
  82fa58:	e17ffd15 	stw	r5,-12(fp)
  82fa5c:	e1bffe15 	stw	r6,-8(fp)
  82fa60:	e1ffff15 	stw	r7,-4(fp)
  82fa64:	e0bffc17 	ldw	r2,-16(fp)
  82fa68:	10805417 	ldw	r2,336(r2)
  82fa6c:	10bfa004 	addi	r2,r2,-384
  82fa70:	e0bfdf15 	stw	r2,-132(fp)
  82fa74:	e0bffe17 	ldw	r2,-8(fp)
  82fa78:	e0bfdb15 	stw	r2,-148(fp)
  82fa7c:	e0bffd17 	ldw	r2,-12(fp)
  82fa80:	10801517 	ldw	r2,84(r2)
  82fa84:	e0bfdc15 	stw	r2,-144(fp)
  82fa88:	e0bfea04 	addi	r2,fp,-88
  82fa8c:	e0bfdd15 	stw	r2,-140(fp)
  82fa90:	e03fde15 	stw	zero,-136(fp)
  82fa94:	0000bd06 	br	82fd8c <jpeg_idct_3x6+0x348>
  82fa98:	e0bfdb17 	ldw	r2,-148(fp)
  82fa9c:	1080000b 	ldhu	r2,0(r2)
  82faa0:	10ffffcc 	andi	r3,r2,65535
  82faa4:	18e0001c 	xori	r3,r3,32768
  82faa8:	18e00004 	addi	r3,r3,-32768
  82faac:	e0bfdc17 	ldw	r2,-144(fp)
  82fab0:	10800017 	ldw	r2,0(r2)
  82fab4:	100b883a 	mov	r5,r2
  82fab8:	1809883a 	mov	r4,r3
  82fabc:	08305040 	call	830504 <__mulsi3>
  82fac0:	e0bfe015 	stw	r2,-128(fp)
  82fac4:	e0bfe017 	ldw	r2,-128(fp)
  82fac8:	1004937a 	slli	r2,r2,13
  82facc:	e0bfe015 	stw	r2,-128(fp)
  82fad0:	e0bfe017 	ldw	r2,-128(fp)
  82fad4:	10810004 	addi	r2,r2,1024
  82fad8:	e0bfe015 	stw	r2,-128(fp)
  82fadc:	e0bfdb17 	ldw	r2,-148(fp)
  82fae0:	10801004 	addi	r2,r2,64
  82fae4:	1080000b 	ldhu	r2,0(r2)
  82fae8:	10ffffcc 	andi	r3,r2,65535
  82faec:	18e0001c 	xori	r3,r3,32768
  82faf0:	18e00004 	addi	r3,r3,-32768
  82faf4:	e0bfdc17 	ldw	r2,-144(fp)
  82faf8:	10802004 	addi	r2,r2,128
  82fafc:	10800017 	ldw	r2,0(r2)
  82fb00:	100b883a 	mov	r5,r2
  82fb04:	1809883a 	mov	r4,r3
  82fb08:	08305040 	call	830504 <__mulsi3>
  82fb0c:	e0bfe115 	stw	r2,-124(fp)
  82fb10:	0145a844 	movi	r5,5793
  82fb14:	e13fe117 	ldw	r4,-124(fp)
  82fb18:	08305040 	call	830504 <__mulsi3>
  82fb1c:	e0bfe215 	stw	r2,-120(fp)
  82fb20:	e0ffe017 	ldw	r3,-128(fp)
  82fb24:	e0bfe217 	ldw	r2,-120(fp)
  82fb28:	1885883a 	add	r2,r3,r2
  82fb2c:	e0bfe315 	stw	r2,-116(fp)
  82fb30:	e0ffe017 	ldw	r3,-128(fp)
  82fb34:	e0bfe217 	ldw	r2,-120(fp)
  82fb38:	1887c83a 	sub	r3,r3,r2
  82fb3c:	e0bfe217 	ldw	r2,-120(fp)
  82fb40:	1885c83a 	sub	r2,r3,r2
  82fb44:	1005d2fa 	srai	r2,r2,11
  82fb48:	e0bfe415 	stw	r2,-112(fp)
  82fb4c:	e0bfdb17 	ldw	r2,-148(fp)
  82fb50:	10800804 	addi	r2,r2,32
  82fb54:	1080000b 	ldhu	r2,0(r2)
  82fb58:	10ffffcc 	andi	r3,r2,65535
  82fb5c:	18e0001c 	xori	r3,r3,32768
  82fb60:	18e00004 	addi	r3,r3,-32768
  82fb64:	e0bfdc17 	ldw	r2,-144(fp)
  82fb68:	10801004 	addi	r2,r2,64
  82fb6c:	10800017 	ldw	r2,0(r2)
  82fb70:	100b883a 	mov	r5,r2
  82fb74:	1809883a 	mov	r4,r3
  82fb78:	08305040 	call	830504 <__mulsi3>
  82fb7c:	e0bfe215 	stw	r2,-120(fp)
  82fb80:	0149cc44 	movi	r5,10033
  82fb84:	e13fe217 	ldw	r4,-120(fp)
  82fb88:	08305040 	call	830504 <__mulsi3>
  82fb8c:	e0bfe015 	stw	r2,-128(fp)
  82fb90:	e0ffe317 	ldw	r3,-116(fp)
  82fb94:	e0bfe017 	ldw	r2,-128(fp)
  82fb98:	1885883a 	add	r2,r3,r2
  82fb9c:	e0bfe215 	stw	r2,-120(fp)
  82fba0:	e0ffe317 	ldw	r3,-116(fp)
  82fba4:	e0bfe017 	ldw	r2,-128(fp)
  82fba8:	1885c83a 	sub	r2,r3,r2
  82fbac:	e0bfe515 	stw	r2,-108(fp)
  82fbb0:	e0bfdb17 	ldw	r2,-148(fp)
  82fbb4:	10800404 	addi	r2,r2,16
  82fbb8:	1080000b 	ldhu	r2,0(r2)
  82fbbc:	10ffffcc 	andi	r3,r2,65535
  82fbc0:	18e0001c 	xori	r3,r3,32768
  82fbc4:	18e00004 	addi	r3,r3,-32768
  82fbc8:	e0bfdc17 	ldw	r2,-144(fp)
  82fbcc:	10800804 	addi	r2,r2,32
  82fbd0:	10800017 	ldw	r2,0(r2)
  82fbd4:	100b883a 	mov	r5,r2
  82fbd8:	1809883a 	mov	r4,r3
  82fbdc:	08305040 	call	830504 <__mulsi3>
  82fbe0:	e0bfe615 	stw	r2,-104(fp)
  82fbe4:	e0bfdb17 	ldw	r2,-148(fp)
  82fbe8:	10800c04 	addi	r2,r2,48
  82fbec:	1080000b 	ldhu	r2,0(r2)
  82fbf0:	10ffffcc 	andi	r3,r2,65535
  82fbf4:	18e0001c 	xori	r3,r3,32768
  82fbf8:	18e00004 	addi	r3,r3,-32768
  82fbfc:	e0bfdc17 	ldw	r2,-144(fp)
  82fc00:	10801804 	addi	r2,r2,96
  82fc04:	10800017 	ldw	r2,0(r2)
  82fc08:	100b883a 	mov	r5,r2
  82fc0c:	1809883a 	mov	r4,r3
  82fc10:	08305040 	call	830504 <__mulsi3>
  82fc14:	e0bfe715 	stw	r2,-100(fp)
  82fc18:	e0bfdb17 	ldw	r2,-148(fp)
  82fc1c:	10801404 	addi	r2,r2,80
  82fc20:	1080000b 	ldhu	r2,0(r2)
  82fc24:	10ffffcc 	andi	r3,r2,65535
  82fc28:	18e0001c 	xori	r3,r3,32768
  82fc2c:	18e00004 	addi	r3,r3,-32768
  82fc30:	e0bfdc17 	ldw	r2,-144(fp)
  82fc34:	10802804 	addi	r2,r2,160
  82fc38:	10800017 	ldw	r2,0(r2)
  82fc3c:	100b883a 	mov	r5,r2
  82fc40:	1809883a 	mov	r4,r3
  82fc44:	08305040 	call	830504 <__mulsi3>
  82fc48:	e0bfe815 	stw	r2,-96(fp)
  82fc4c:	e0ffe617 	ldw	r3,-104(fp)
  82fc50:	e0bfe817 	ldw	r2,-96(fp)
  82fc54:	1885883a 	add	r2,r3,r2
  82fc58:	0142ed84 	movi	r5,2998
  82fc5c:	1009883a 	mov	r4,r2
  82fc60:	08305040 	call	830504 <__mulsi3>
  82fc64:	e0bfe315 	stw	r2,-116(fp)
  82fc68:	e0ffe617 	ldw	r3,-104(fp)
  82fc6c:	e0bfe717 	ldw	r2,-100(fp)
  82fc70:	1885883a 	add	r2,r3,r2
  82fc74:	1006937a 	slli	r3,r2,13
  82fc78:	e0bfe317 	ldw	r2,-116(fp)
  82fc7c:	1885883a 	add	r2,r3,r2
  82fc80:	e0bfe015 	stw	r2,-128(fp)
  82fc84:	e0ffe817 	ldw	r3,-96(fp)
  82fc88:	e0bfe717 	ldw	r2,-100(fp)
  82fc8c:	1885c83a 	sub	r2,r3,r2
  82fc90:	1006937a 	slli	r3,r2,13
  82fc94:	e0bfe317 	ldw	r2,-116(fp)
  82fc98:	1885883a 	add	r2,r3,r2
  82fc9c:	e0bfe115 	stw	r2,-124(fp)
  82fca0:	e0ffe617 	ldw	r3,-104(fp)
  82fca4:	e0bfe717 	ldw	r2,-100(fp)
  82fca8:	1887c83a 	sub	r3,r3,r2
  82fcac:	e0bfe817 	ldw	r2,-96(fp)
  82fcb0:	1885c83a 	sub	r2,r3,r2
  82fcb4:	1085883a 	add	r2,r2,r2
  82fcb8:	1085883a 	add	r2,r2,r2
  82fcbc:	e0bfe315 	stw	r2,-116(fp)
  82fcc0:	e0ffe217 	ldw	r3,-120(fp)
  82fcc4:	e0bfe017 	ldw	r2,-128(fp)
  82fcc8:	1885883a 	add	r2,r3,r2
  82fccc:	1007d2fa 	srai	r3,r2,11
  82fcd0:	e0bfdd17 	ldw	r2,-140(fp)
  82fcd4:	10c00015 	stw	r3,0(r2)
  82fcd8:	e0bfdd17 	ldw	r2,-140(fp)
  82fcdc:	10800f04 	addi	r2,r2,60
  82fce0:	e13fe217 	ldw	r4,-120(fp)
  82fce4:	e0ffe017 	ldw	r3,-128(fp)
  82fce8:	20c7c83a 	sub	r3,r4,r3
  82fcec:	1807d2fa 	srai	r3,r3,11
  82fcf0:	10c00015 	stw	r3,0(r2)
  82fcf4:	e0bfdd17 	ldw	r2,-140(fp)
  82fcf8:	10800304 	addi	r2,r2,12
  82fcfc:	e13fe417 	ldw	r4,-112(fp)
  82fd00:	e0ffe317 	ldw	r3,-116(fp)
  82fd04:	20c7883a 	add	r3,r4,r3
  82fd08:	10c00015 	stw	r3,0(r2)
  82fd0c:	e0bfdd17 	ldw	r2,-140(fp)
  82fd10:	10800c04 	addi	r2,r2,48
  82fd14:	e13fe417 	ldw	r4,-112(fp)
  82fd18:	e0ffe317 	ldw	r3,-116(fp)
  82fd1c:	20c7c83a 	sub	r3,r4,r3
  82fd20:	10c00015 	stw	r3,0(r2)
  82fd24:	e0bfdd17 	ldw	r2,-140(fp)
  82fd28:	10800604 	addi	r2,r2,24
  82fd2c:	e13fe517 	ldw	r4,-108(fp)
  82fd30:	e0ffe117 	ldw	r3,-124(fp)
  82fd34:	20c7883a 	add	r3,r4,r3
  82fd38:	1807d2fa 	srai	r3,r3,11
  82fd3c:	10c00015 	stw	r3,0(r2)
  82fd40:	e0bfdd17 	ldw	r2,-140(fp)
  82fd44:	10800904 	addi	r2,r2,36
  82fd48:	e13fe517 	ldw	r4,-108(fp)
  82fd4c:	e0ffe117 	ldw	r3,-124(fp)
  82fd50:	20c7c83a 	sub	r3,r4,r3
  82fd54:	1807d2fa 	srai	r3,r3,11
  82fd58:	10c00015 	stw	r3,0(r2)
  82fd5c:	e0bfde17 	ldw	r2,-136(fp)
  82fd60:	10800044 	addi	r2,r2,1
  82fd64:	e0bfde15 	stw	r2,-136(fp)
  82fd68:	e0bfdb17 	ldw	r2,-148(fp)
  82fd6c:	10800084 	addi	r2,r2,2
  82fd70:	e0bfdb15 	stw	r2,-148(fp)
  82fd74:	e0bfdc17 	ldw	r2,-144(fp)
  82fd78:	10800104 	addi	r2,r2,4
  82fd7c:	e0bfdc15 	stw	r2,-144(fp)
  82fd80:	e0bfdd17 	ldw	r2,-140(fp)
  82fd84:	10800104 	addi	r2,r2,4
  82fd88:	e0bfdd15 	stw	r2,-140(fp)
  82fd8c:	e0bfde17 	ldw	r2,-136(fp)
  82fd90:	108000d0 	cmplti	r2,r2,3
  82fd94:	103f401e 	bne	r2,zero,82fa98 <__alt_mem_epcs_flash_controller_0+0xff826a98>
  82fd98:	e0bfea04 	addi	r2,fp,-88
  82fd9c:	e0bfdd15 	stw	r2,-140(fp)
  82fda0:	e03fde15 	stw	zero,-136(fp)
  82fda4:	00004f06 	br	82fee4 <jpeg_idct_3x6+0x4a0>
  82fda8:	e0bfde17 	ldw	r2,-136(fp)
  82fdac:	1085883a 	add	r2,r2,r2
  82fdb0:	1085883a 	add	r2,r2,r2
  82fdb4:	1007883a 	mov	r3,r2
  82fdb8:	e0bfff17 	ldw	r2,-4(fp)
  82fdbc:	10c5883a 	add	r2,r2,r3
  82fdc0:	10c00017 	ldw	r3,0(r2)
  82fdc4:	e0800217 	ldw	r2,8(fp)
  82fdc8:	1885883a 	add	r2,r3,r2
  82fdcc:	e0bfe915 	stw	r2,-92(fp)
  82fdd0:	e0bfdd17 	ldw	r2,-140(fp)
  82fdd4:	10800017 	ldw	r2,0(r2)
  82fdd8:	10900404 	addi	r2,r2,16400
  82fddc:	e0bfe015 	stw	r2,-128(fp)
  82fde0:	e0bfe017 	ldw	r2,-128(fp)
  82fde4:	1004937a 	slli	r2,r2,13
  82fde8:	e0bfe015 	stw	r2,-128(fp)
  82fdec:	e0bfdd17 	ldw	r2,-140(fp)
  82fdf0:	10800204 	addi	r2,r2,8
  82fdf4:	10800017 	ldw	r2,0(r2)
  82fdf8:	e0bfe115 	stw	r2,-124(fp)
  82fdfc:	0145a844 	movi	r5,5793
  82fe00:	e13fe117 	ldw	r4,-124(fp)
  82fe04:	08305040 	call	830504 <__mulsi3>
  82fe08:	e0bfe515 	stw	r2,-108(fp)
  82fe0c:	e0ffe017 	ldw	r3,-128(fp)
  82fe10:	e0bfe517 	ldw	r2,-108(fp)
  82fe14:	1885883a 	add	r2,r3,r2
  82fe18:	e0bfe215 	stw	r2,-120(fp)
  82fe1c:	e0ffe017 	ldw	r3,-128(fp)
  82fe20:	e0bfe517 	ldw	r2,-108(fp)
  82fe24:	1887c83a 	sub	r3,r3,r2
  82fe28:	e0bfe517 	ldw	r2,-108(fp)
  82fe2c:	1885c83a 	sub	r2,r3,r2
  82fe30:	e0bfe115 	stw	r2,-124(fp)
  82fe34:	e0bfdd17 	ldw	r2,-140(fp)
  82fe38:	10800104 	addi	r2,r2,4
  82fe3c:	10800017 	ldw	r2,0(r2)
  82fe40:	e0bfe515 	stw	r2,-108(fp)
  82fe44:	0149cc44 	movi	r5,10033
  82fe48:	e13fe517 	ldw	r4,-108(fp)
  82fe4c:	08305040 	call	830504 <__mulsi3>
  82fe50:	e0bfe015 	stw	r2,-128(fp)
  82fe54:	e0ffe217 	ldw	r3,-120(fp)
  82fe58:	e0bfe017 	ldw	r2,-128(fp)
  82fe5c:	1885883a 	add	r2,r3,r2
  82fe60:	1005d4ba 	srai	r2,r2,18
  82fe64:	1080ffcc 	andi	r2,r2,1023
  82fe68:	e0ffdf17 	ldw	r3,-132(fp)
  82fe6c:	1885883a 	add	r2,r3,r2
  82fe70:	10c00003 	ldbu	r3,0(r2)
  82fe74:	e0bfe917 	ldw	r2,-92(fp)
  82fe78:	10c00005 	stb	r3,0(r2)
  82fe7c:	e0bfe917 	ldw	r2,-92(fp)
  82fe80:	10800084 	addi	r2,r2,2
  82fe84:	e13fe217 	ldw	r4,-120(fp)
  82fe88:	e0ffe017 	ldw	r3,-128(fp)
  82fe8c:	20c7c83a 	sub	r3,r4,r3
  82fe90:	1807d4ba 	srai	r3,r3,18
  82fe94:	18c0ffcc 	andi	r3,r3,1023
  82fe98:	e13fdf17 	ldw	r4,-132(fp)
  82fe9c:	20c7883a 	add	r3,r4,r3
  82fea0:	18c00003 	ldbu	r3,0(r3)
  82fea4:	10c00005 	stb	r3,0(r2)
  82fea8:	e0bfe917 	ldw	r2,-92(fp)
  82feac:	10800044 	addi	r2,r2,1
  82feb0:	e0ffe117 	ldw	r3,-124(fp)
  82feb4:	1807d4ba 	srai	r3,r3,18
  82feb8:	18c0ffcc 	andi	r3,r3,1023
  82febc:	e13fdf17 	ldw	r4,-132(fp)
  82fec0:	20c7883a 	add	r3,r4,r3
  82fec4:	18c00003 	ldbu	r3,0(r3)
  82fec8:	10c00005 	stb	r3,0(r2)
  82fecc:	e0bfdd17 	ldw	r2,-140(fp)
  82fed0:	10800304 	addi	r2,r2,12
  82fed4:	e0bfdd15 	stw	r2,-140(fp)
  82fed8:	e0bfde17 	ldw	r2,-136(fp)
  82fedc:	10800044 	addi	r2,r2,1
  82fee0:	e0bfde15 	stw	r2,-136(fp)
  82fee4:	e0bfde17 	ldw	r2,-136(fp)
  82fee8:	10800190 	cmplti	r2,r2,6
  82feec:	103fae1e 	bne	r2,zero,82fda8 <__alt_mem_epcs_flash_controller_0+0xff826da8>
  82fef0:	0001883a 	nop
  82fef4:	e037883a 	mov	sp,fp
  82fef8:	dfc00117 	ldw	ra,4(sp)
  82fefc:	df000017 	ldw	fp,0(sp)
  82ff00:	dec00204 	addi	sp,sp,8
  82ff04:	f800283a 	ret

0082ff08 <jpeg_idct_2x4>:
  82ff08:	deffe504 	addi	sp,sp,-108
  82ff0c:	dfc01a15 	stw	ra,104(sp)
  82ff10:	df001915 	stw	fp,100(sp)
  82ff14:	df001904 	addi	fp,sp,100
  82ff18:	e13ffc15 	stw	r4,-16(fp)
  82ff1c:	e17ffd15 	stw	r5,-12(fp)
  82ff20:	e1bffe15 	stw	r6,-8(fp)
  82ff24:	e1ffff15 	stw	r7,-4(fp)
  82ff28:	e0bffc17 	ldw	r2,-16(fp)
  82ff2c:	10805417 	ldw	r2,336(r2)
  82ff30:	10bfa004 	addi	r2,r2,-384
  82ff34:	e0bfeb15 	stw	r2,-84(fp)
  82ff38:	e0bffe17 	ldw	r2,-8(fp)
  82ff3c:	e0bfe715 	stw	r2,-100(fp)
  82ff40:	e0bffd17 	ldw	r2,-12(fp)
  82ff44:	10801517 	ldw	r2,84(r2)
  82ff48:	e0bfe815 	stw	r2,-96(fp)
  82ff4c:	e0bff404 	addi	r2,fp,-48
  82ff50:	e0bfe915 	stw	r2,-92(fp)
  82ff54:	e03fea15 	stw	zero,-88(fp)
  82ff58:	00007406 	br	83012c <jpeg_idct_2x4+0x224>
  82ff5c:	e0bfe717 	ldw	r2,-100(fp)
  82ff60:	1080000b 	ldhu	r2,0(r2)
  82ff64:	10ffffcc 	andi	r3,r2,65535
  82ff68:	18e0001c 	xori	r3,r3,32768
  82ff6c:	18e00004 	addi	r3,r3,-32768
  82ff70:	e0bfe817 	ldw	r2,-96(fp)
  82ff74:	10800017 	ldw	r2,0(r2)
  82ff78:	100b883a 	mov	r5,r2
  82ff7c:	1809883a 	mov	r4,r3
  82ff80:	08305040 	call	830504 <__mulsi3>
  82ff84:	e0bfec15 	stw	r2,-80(fp)
  82ff88:	e0bfe717 	ldw	r2,-100(fp)
  82ff8c:	10800804 	addi	r2,r2,32
  82ff90:	1080000b 	ldhu	r2,0(r2)
  82ff94:	10ffffcc 	andi	r3,r2,65535
  82ff98:	18e0001c 	xori	r3,r3,32768
  82ff9c:	18e00004 	addi	r3,r3,-32768
  82ffa0:	e0bfe817 	ldw	r2,-96(fp)
  82ffa4:	10801004 	addi	r2,r2,64
  82ffa8:	10800017 	ldw	r2,0(r2)
  82ffac:	100b883a 	mov	r5,r2
  82ffb0:	1809883a 	mov	r4,r3
  82ffb4:	08305040 	call	830504 <__mulsi3>
  82ffb8:	e0bfed15 	stw	r2,-76(fp)
  82ffbc:	e0ffec17 	ldw	r3,-80(fp)
  82ffc0:	e0bfed17 	ldw	r2,-76(fp)
  82ffc4:	1885883a 	add	r2,r3,r2
  82ffc8:	1004937a 	slli	r2,r2,13
  82ffcc:	e0bfee15 	stw	r2,-72(fp)
  82ffd0:	e0ffec17 	ldw	r3,-80(fp)
  82ffd4:	e0bfed17 	ldw	r2,-76(fp)
  82ffd8:	1885c83a 	sub	r2,r3,r2
  82ffdc:	1004937a 	slli	r2,r2,13
  82ffe0:	e0bfef15 	stw	r2,-68(fp)
  82ffe4:	e0bfe717 	ldw	r2,-100(fp)
  82ffe8:	10800404 	addi	r2,r2,16
  82ffec:	1080000b 	ldhu	r2,0(r2)
  82fff0:	10ffffcc 	andi	r3,r2,65535
  82fff4:	18e0001c 	xori	r3,r3,32768
  82fff8:	18e00004 	addi	r3,r3,-32768
  82fffc:	e0bfe817 	ldw	r2,-96(fp)
  830000:	10800804 	addi	r2,r2,32
  830004:	10800017 	ldw	r2,0(r2)
  830008:	100b883a 	mov	r5,r2
  83000c:	1809883a 	mov	r4,r3
  830010:	08305040 	call	830504 <__mulsi3>
  830014:	e0bff015 	stw	r2,-64(fp)
  830018:	e0bfe717 	ldw	r2,-100(fp)
  83001c:	10800c04 	addi	r2,r2,48
  830020:	1080000b 	ldhu	r2,0(r2)
  830024:	10ffffcc 	andi	r3,r2,65535
  830028:	18e0001c 	xori	r3,r3,32768
  83002c:	18e00004 	addi	r3,r3,-32768
  830030:	e0bfe817 	ldw	r2,-96(fp)
  830034:	10801804 	addi	r2,r2,96
  830038:	10800017 	ldw	r2,0(r2)
  83003c:	100b883a 	mov	r5,r2
  830040:	1809883a 	mov	r4,r3
  830044:	08305040 	call	830504 <__mulsi3>
  830048:	e0bff115 	stw	r2,-60(fp)
  83004c:	e0fff017 	ldw	r3,-64(fp)
  830050:	e0bff117 	ldw	r2,-60(fp)
  830054:	1885883a 	add	r2,r3,r2
  830058:	01445444 	movi	r5,4433
  83005c:	1009883a 	mov	r4,r2
  830060:	08305040 	call	830504 <__mulsi3>
  830064:	e0bff215 	stw	r2,-56(fp)
  830068:	01461f84 	movi	r5,6270
  83006c:	e13ff017 	ldw	r4,-64(fp)
  830070:	08305040 	call	830504 <__mulsi3>
  830074:	1007883a 	mov	r3,r2
  830078:	e0bff217 	ldw	r2,-56(fp)
  83007c:	1885883a 	add	r2,r3,r2
  830080:	e0bfec15 	stw	r2,-80(fp)
  830084:	017137c4 	movi	r5,-15137
  830088:	e13ff117 	ldw	r4,-60(fp)
  83008c:	08305040 	call	830504 <__mulsi3>
  830090:	1007883a 	mov	r3,r2
  830094:	e0bff217 	ldw	r2,-56(fp)
  830098:	1885883a 	add	r2,r3,r2
  83009c:	e0bfed15 	stw	r2,-76(fp)
  8300a0:	e0ffee17 	ldw	r3,-72(fp)
  8300a4:	e0bfec17 	ldw	r2,-80(fp)
  8300a8:	1887883a 	add	r3,r3,r2
  8300ac:	e0bfe917 	ldw	r2,-92(fp)
  8300b0:	10c00015 	stw	r3,0(r2)
  8300b4:	e0bfe917 	ldw	r2,-92(fp)
  8300b8:	10800604 	addi	r2,r2,24
  8300bc:	e13fee17 	ldw	r4,-72(fp)
  8300c0:	e0ffec17 	ldw	r3,-80(fp)
  8300c4:	20c7c83a 	sub	r3,r4,r3
  8300c8:	10c00015 	stw	r3,0(r2)
  8300cc:	e0bfe917 	ldw	r2,-92(fp)
  8300d0:	10800204 	addi	r2,r2,8
  8300d4:	e13fef17 	ldw	r4,-68(fp)
  8300d8:	e0ffed17 	ldw	r3,-76(fp)
  8300dc:	20c7883a 	add	r3,r4,r3
  8300e0:	10c00015 	stw	r3,0(r2)
  8300e4:	e0bfe917 	ldw	r2,-92(fp)
  8300e8:	10800404 	addi	r2,r2,16
  8300ec:	e13fef17 	ldw	r4,-68(fp)
  8300f0:	e0ffed17 	ldw	r3,-76(fp)
  8300f4:	20c7c83a 	sub	r3,r4,r3
  8300f8:	10c00015 	stw	r3,0(r2)
  8300fc:	e0bfea17 	ldw	r2,-88(fp)
  830100:	10800044 	addi	r2,r2,1
  830104:	e0bfea15 	stw	r2,-88(fp)
  830108:	e0bfe717 	ldw	r2,-100(fp)
  83010c:	10800084 	addi	r2,r2,2
  830110:	e0bfe715 	stw	r2,-100(fp)
  830114:	e0bfe817 	ldw	r2,-96(fp)
  830118:	10800104 	addi	r2,r2,4
  83011c:	e0bfe815 	stw	r2,-96(fp)
  830120:	e0bfe917 	ldw	r2,-92(fp)
  830124:	10800104 	addi	r2,r2,4
  830128:	e0bfe915 	stw	r2,-92(fp)
  83012c:	e0bfea17 	ldw	r2,-88(fp)
  830130:	10800090 	cmplti	r2,r2,2
  830134:	103f891e 	bne	r2,zero,82ff5c <__alt_mem_epcs_flash_controller_0+0xff826f5c>
  830138:	e0bff404 	addi	r2,fp,-48
  83013c:	e0bfe915 	stw	r2,-92(fp)
  830140:	e03fea15 	stw	zero,-88(fp)
  830144:	00002e06 	br	830200 <jpeg_idct_2x4+0x2f8>
  830148:	e0bfea17 	ldw	r2,-88(fp)
  83014c:	1085883a 	add	r2,r2,r2
  830150:	1085883a 	add	r2,r2,r2
  830154:	1007883a 	mov	r3,r2
  830158:	e0bfff17 	ldw	r2,-4(fp)
  83015c:	10c5883a 	add	r2,r2,r3
  830160:	10c00017 	ldw	r3,0(r2)
  830164:	e0800217 	ldw	r2,8(fp)
  830168:	1885883a 	add	r2,r3,r2
  83016c:	e0bff315 	stw	r2,-52(fp)
  830170:	e0bfe917 	ldw	r2,-92(fp)
  830174:	10c00017 	ldw	r3,0(r2)
  830178:	00808074 	movhi	r2,513
  83017c:	10a00004 	addi	r2,r2,-32768
  830180:	1885883a 	add	r2,r3,r2
  830184:	e0bfee15 	stw	r2,-72(fp)
  830188:	e0bfe917 	ldw	r2,-92(fp)
  83018c:	10800117 	ldw	r2,4(r2)
  830190:	e0bfec15 	stw	r2,-80(fp)
  830194:	e0ffee17 	ldw	r3,-72(fp)
  830198:	e0bfec17 	ldw	r2,-80(fp)
  83019c:	1885883a 	add	r2,r3,r2
  8301a0:	1005d43a 	srai	r2,r2,16
  8301a4:	1080ffcc 	andi	r2,r2,1023
  8301a8:	e0ffeb17 	ldw	r3,-84(fp)
  8301ac:	1885883a 	add	r2,r3,r2
  8301b0:	10c00003 	ldbu	r3,0(r2)
  8301b4:	e0bff317 	ldw	r2,-52(fp)
  8301b8:	10c00005 	stb	r3,0(r2)
  8301bc:	e0bff317 	ldw	r2,-52(fp)
  8301c0:	10800044 	addi	r2,r2,1
  8301c4:	e13fee17 	ldw	r4,-72(fp)
  8301c8:	e0ffec17 	ldw	r3,-80(fp)
  8301cc:	20c7c83a 	sub	r3,r4,r3
  8301d0:	1807d43a 	srai	r3,r3,16
  8301d4:	18c0ffcc 	andi	r3,r3,1023
  8301d8:	e13feb17 	ldw	r4,-84(fp)
  8301dc:	20c7883a 	add	r3,r4,r3
  8301e0:	18c00003 	ldbu	r3,0(r3)
  8301e4:	10c00005 	stb	r3,0(r2)
  8301e8:	e0bfe917 	ldw	r2,-92(fp)
  8301ec:	10800204 	addi	r2,r2,8
  8301f0:	e0bfe915 	stw	r2,-92(fp)
  8301f4:	e0bfea17 	ldw	r2,-88(fp)
  8301f8:	10800044 	addi	r2,r2,1
  8301fc:	e0bfea15 	stw	r2,-88(fp)
  830200:	e0bfea17 	ldw	r2,-88(fp)
  830204:	10800110 	cmplti	r2,r2,4
  830208:	103fcf1e 	bne	r2,zero,830148 <__alt_mem_epcs_flash_controller_0+0xff827148>
  83020c:	0001883a 	nop
  830210:	e037883a 	mov	sp,fp
  830214:	dfc00117 	ldw	ra,4(sp)
  830218:	df000017 	ldw	fp,0(sp)
  83021c:	dec00204 	addi	sp,sp,8
  830220:	f800283a 	ret

00830224 <jpeg_idct_1x2>:
  830224:	defff604 	addi	sp,sp,-40
  830228:	dfc00915 	stw	ra,36(sp)
  83022c:	df000815 	stw	fp,32(sp)
  830230:	df000804 	addi	fp,sp,32
  830234:	e13ffc15 	stw	r4,-16(fp)
  830238:	e17ffd15 	stw	r5,-12(fp)
  83023c:	e1bffe15 	stw	r6,-8(fp)
  830240:	e1ffff15 	stw	r7,-4(fp)
  830244:	e0bffc17 	ldw	r2,-16(fp)
  830248:	10805417 	ldw	r2,336(r2)
  83024c:	10bfa004 	addi	r2,r2,-384
  830250:	e0bff815 	stw	r2,-32(fp)
  830254:	e0bffd17 	ldw	r2,-12(fp)
  830258:	10801517 	ldw	r2,84(r2)
  83025c:	e0bff915 	stw	r2,-28(fp)
  830260:	e0bffe17 	ldw	r2,-8(fp)
  830264:	1080000b 	ldhu	r2,0(r2)
  830268:	10ffffcc 	andi	r3,r2,65535
  83026c:	18e0001c 	xori	r3,r3,32768
  830270:	18e00004 	addi	r3,r3,-32768
  830274:	e0bff917 	ldw	r2,-28(fp)
  830278:	10800017 	ldw	r2,0(r2)
  83027c:	100b883a 	mov	r5,r2
  830280:	1809883a 	mov	r4,r3
  830284:	08305040 	call	830504 <__mulsi3>
  830288:	e0bffa15 	stw	r2,-24(fp)
  83028c:	e0bffa17 	ldw	r2,-24(fp)
  830290:	10840104 	addi	r2,r2,4100
  830294:	e0bffa15 	stw	r2,-24(fp)
  830298:	e0bffe17 	ldw	r2,-8(fp)
  83029c:	10800404 	addi	r2,r2,16
  8302a0:	1080000b 	ldhu	r2,0(r2)
  8302a4:	10ffffcc 	andi	r3,r2,65535
  8302a8:	18e0001c 	xori	r3,r3,32768
  8302ac:	18e00004 	addi	r3,r3,-32768
  8302b0:	e0bff917 	ldw	r2,-28(fp)
  8302b4:	10800804 	addi	r2,r2,32
  8302b8:	10800017 	ldw	r2,0(r2)
  8302bc:	100b883a 	mov	r5,r2
  8302c0:	1809883a 	mov	r4,r3
  8302c4:	08305040 	call	830504 <__mulsi3>
  8302c8:	e0bffb15 	stw	r2,-20(fp)
  8302cc:	e0bfff17 	ldw	r2,-4(fp)
  8302d0:	10c00017 	ldw	r3,0(r2)
  8302d4:	e0800217 	ldw	r2,8(fp)
  8302d8:	1885883a 	add	r2,r3,r2
  8302dc:	e13ffa17 	ldw	r4,-24(fp)
  8302e0:	e0fffb17 	ldw	r3,-20(fp)
  8302e4:	20c7883a 	add	r3,r4,r3
  8302e8:	1807d0fa 	srai	r3,r3,3
  8302ec:	18c0ffcc 	andi	r3,r3,1023
  8302f0:	e13ff817 	ldw	r4,-32(fp)
  8302f4:	20c7883a 	add	r3,r4,r3
  8302f8:	18c00003 	ldbu	r3,0(r3)
  8302fc:	10c00005 	stb	r3,0(r2)
  830300:	e0bfff17 	ldw	r2,-4(fp)
  830304:	10800104 	addi	r2,r2,4
  830308:	10c00017 	ldw	r3,0(r2)
  83030c:	e0800217 	ldw	r2,8(fp)
  830310:	1885883a 	add	r2,r3,r2
  830314:	e13ffa17 	ldw	r4,-24(fp)
  830318:	e0fffb17 	ldw	r3,-20(fp)
  83031c:	20c7c83a 	sub	r3,r4,r3
  830320:	1807d0fa 	srai	r3,r3,3
  830324:	18c0ffcc 	andi	r3,r3,1023
  830328:	e13ff817 	ldw	r4,-32(fp)
  83032c:	20c7883a 	add	r3,r4,r3
  830330:	18c00003 	ldbu	r3,0(r3)
  830334:	10c00005 	stb	r3,0(r2)
  830338:	0001883a 	nop
  83033c:	e037883a 	mov	sp,fp
  830340:	dfc00117 	ldw	ra,4(sp)
  830344:	df000017 	ldw	fp,0(sp)
  830348:	dec00204 	addi	sp,sp,8
  83034c:	f800283a 	ret

00830350 <__divsi3>:
  830350:	20001b16 	blt	r4,zero,8303c0 <__divsi3+0x70>
  830354:	000f883a 	mov	r7,zero
  830358:	28001616 	blt	r5,zero,8303b4 <__divsi3+0x64>
  83035c:	200d883a 	mov	r6,r4
  830360:	29001a2e 	bgeu	r5,r4,8303cc <__divsi3+0x7c>
  830364:	00800804 	movi	r2,32
  830368:	00c00044 	movi	r3,1
  83036c:	00000106 	br	830374 <__divsi3+0x24>
  830370:	10000d26 	beq	r2,zero,8303a8 <__divsi3+0x58>
  830374:	294b883a 	add	r5,r5,r5
  830378:	10bfffc4 	addi	r2,r2,-1
  83037c:	18c7883a 	add	r3,r3,r3
  830380:	293ffb36 	bltu	r5,r4,830370 <__alt_mem_epcs_flash_controller_0+0xff827370>
  830384:	0005883a 	mov	r2,zero
  830388:	18000726 	beq	r3,zero,8303a8 <__divsi3+0x58>
  83038c:	0005883a 	mov	r2,zero
  830390:	31400236 	bltu	r6,r5,83039c <__divsi3+0x4c>
  830394:	314dc83a 	sub	r6,r6,r5
  830398:	10c4b03a 	or	r2,r2,r3
  83039c:	1806d07a 	srli	r3,r3,1
  8303a0:	280ad07a 	srli	r5,r5,1
  8303a4:	183ffa1e 	bne	r3,zero,830390 <__alt_mem_epcs_flash_controller_0+0xff827390>
  8303a8:	38000126 	beq	r7,zero,8303b0 <__divsi3+0x60>
  8303ac:	0085c83a 	sub	r2,zero,r2
  8303b0:	f800283a 	ret
  8303b4:	014bc83a 	sub	r5,zero,r5
  8303b8:	39c0005c 	xori	r7,r7,1
  8303bc:	003fe706 	br	83035c <__alt_mem_epcs_flash_controller_0+0xff82735c>
  8303c0:	0109c83a 	sub	r4,zero,r4
  8303c4:	01c00044 	movi	r7,1
  8303c8:	003fe306 	br	830358 <__alt_mem_epcs_flash_controller_0+0xff827358>
  8303cc:	00c00044 	movi	r3,1
  8303d0:	003fee06 	br	83038c <__alt_mem_epcs_flash_controller_0+0xff82738c>

008303d4 <__modsi3>:
  8303d4:	20001716 	blt	r4,zero,830434 <__modsi3+0x60>
  8303d8:	000f883a 	mov	r7,zero
  8303dc:	2005883a 	mov	r2,r4
  8303e0:	28001216 	blt	r5,zero,83042c <__modsi3+0x58>
  8303e4:	2900162e 	bgeu	r5,r4,830440 <__modsi3+0x6c>
  8303e8:	01800804 	movi	r6,32
  8303ec:	00c00044 	movi	r3,1
  8303f0:	00000106 	br	8303f8 <__modsi3+0x24>
  8303f4:	30000a26 	beq	r6,zero,830420 <__modsi3+0x4c>
  8303f8:	294b883a 	add	r5,r5,r5
  8303fc:	31bfffc4 	addi	r6,r6,-1
  830400:	18c7883a 	add	r3,r3,r3
  830404:	293ffb36 	bltu	r5,r4,8303f4 <__alt_mem_epcs_flash_controller_0+0xff8273f4>
  830408:	18000526 	beq	r3,zero,830420 <__modsi3+0x4c>
  83040c:	1806d07a 	srli	r3,r3,1
  830410:	11400136 	bltu	r2,r5,830418 <__modsi3+0x44>
  830414:	1145c83a 	sub	r2,r2,r5
  830418:	280ad07a 	srli	r5,r5,1
  83041c:	183ffb1e 	bne	r3,zero,83040c <__alt_mem_epcs_flash_controller_0+0xff82740c>
  830420:	38000126 	beq	r7,zero,830428 <__modsi3+0x54>
  830424:	0085c83a 	sub	r2,zero,r2
  830428:	f800283a 	ret
  83042c:	014bc83a 	sub	r5,zero,r5
  830430:	003fec06 	br	8303e4 <__alt_mem_epcs_flash_controller_0+0xff8273e4>
  830434:	0109c83a 	sub	r4,zero,r4
  830438:	01c00044 	movi	r7,1
  83043c:	003fe706 	br	8303dc <__alt_mem_epcs_flash_controller_0+0xff8273dc>
  830440:	00c00044 	movi	r3,1
  830444:	003ff106 	br	83040c <__alt_mem_epcs_flash_controller_0+0xff82740c>

00830448 <__udivsi3>:
  830448:	200d883a 	mov	r6,r4
  83044c:	2900152e 	bgeu	r5,r4,8304a4 <__udivsi3+0x5c>
  830450:	28001416 	blt	r5,zero,8304a4 <__udivsi3+0x5c>
  830454:	00800804 	movi	r2,32
  830458:	00c00044 	movi	r3,1
  83045c:	00000206 	br	830468 <__udivsi3+0x20>
  830460:	10000e26 	beq	r2,zero,83049c <__udivsi3+0x54>
  830464:	28000516 	blt	r5,zero,83047c <__udivsi3+0x34>
  830468:	294b883a 	add	r5,r5,r5
  83046c:	10bfffc4 	addi	r2,r2,-1
  830470:	18c7883a 	add	r3,r3,r3
  830474:	293ffa36 	bltu	r5,r4,830460 <__alt_mem_epcs_flash_controller_0+0xff827460>
  830478:	18000826 	beq	r3,zero,83049c <__udivsi3+0x54>
  83047c:	0005883a 	mov	r2,zero
  830480:	31400236 	bltu	r6,r5,83048c <__udivsi3+0x44>
  830484:	314dc83a 	sub	r6,r6,r5
  830488:	10c4b03a 	or	r2,r2,r3
  83048c:	1806d07a 	srli	r3,r3,1
  830490:	280ad07a 	srli	r5,r5,1
  830494:	183ffa1e 	bne	r3,zero,830480 <__alt_mem_epcs_flash_controller_0+0xff827480>
  830498:	f800283a 	ret
  83049c:	0005883a 	mov	r2,zero
  8304a0:	f800283a 	ret
  8304a4:	00c00044 	movi	r3,1
  8304a8:	003ff406 	br	83047c <__alt_mem_epcs_flash_controller_0+0xff82747c>

008304ac <__umodsi3>:
  8304ac:	2005883a 	mov	r2,r4
  8304b0:	2900122e 	bgeu	r5,r4,8304fc <__umodsi3+0x50>
  8304b4:	28001116 	blt	r5,zero,8304fc <__umodsi3+0x50>
  8304b8:	01800804 	movi	r6,32
  8304bc:	00c00044 	movi	r3,1
  8304c0:	00000206 	br	8304cc <__umodsi3+0x20>
  8304c4:	30000c26 	beq	r6,zero,8304f8 <__umodsi3+0x4c>
  8304c8:	28000516 	blt	r5,zero,8304e0 <__umodsi3+0x34>
  8304cc:	294b883a 	add	r5,r5,r5
  8304d0:	31bfffc4 	addi	r6,r6,-1
  8304d4:	18c7883a 	add	r3,r3,r3
  8304d8:	293ffa36 	bltu	r5,r4,8304c4 <__alt_mem_epcs_flash_controller_0+0xff8274c4>
  8304dc:	18000626 	beq	r3,zero,8304f8 <__umodsi3+0x4c>
  8304e0:	1806d07a 	srli	r3,r3,1
  8304e4:	11400136 	bltu	r2,r5,8304ec <__umodsi3+0x40>
  8304e8:	1145c83a 	sub	r2,r2,r5
  8304ec:	280ad07a 	srli	r5,r5,1
  8304f0:	183ffb1e 	bne	r3,zero,8304e0 <__alt_mem_epcs_flash_controller_0+0xff8274e0>
  8304f4:	f800283a 	ret
  8304f8:	f800283a 	ret
  8304fc:	00c00044 	movi	r3,1
  830500:	003ff706 	br	8304e0 <__alt_mem_epcs_flash_controller_0+0xff8274e0>

00830504 <__mulsi3>:
  830504:	0005883a 	mov	r2,zero
  830508:	20000726 	beq	r4,zero,830528 <__mulsi3+0x24>
  83050c:	20c0004c 	andi	r3,r4,1
  830510:	2008d07a 	srli	r4,r4,1
  830514:	18000126 	beq	r3,zero,83051c <__mulsi3+0x18>
  830518:	1145883a 	add	r2,r2,r5
  83051c:	294b883a 	add	r5,r5,r5
  830520:	203ffa1e 	bne	r4,zero,83050c <__alt_mem_epcs_flash_controller_0+0xff82750c>
  830524:	f800283a 	ret
  830528:	f800283a 	ret

0083052c <__addsf3>:
  83052c:	defffc04 	addi	sp,sp,-16
  830530:	2004d7fa 	srli	r2,r4,31
  830534:	280cd5fa 	srli	r6,r5,23
  830538:	dc000015 	stw	r16,0(sp)
  83053c:	00c02034 	movhi	r3,128
  830540:	2020d5fa 	srli	r16,r4,23
  830544:	280ed7fa 	srli	r7,r5,31
  830548:	18ffffc4 	addi	r3,r3,-1
  83054c:	dc400115 	stw	r17,4(sp)
  830550:	1908703a 	and	r4,r3,r4
  830554:	194a703a 	and	r5,r3,r5
  830558:	dfc00315 	stw	ra,12(sp)
  83055c:	dc800215 	stw	r18,8(sp)
  830560:	14403fcc 	andi	r17,r2,255
  830564:	84003fcc 	andi	r16,r16,255
  830568:	200890fa 	slli	r4,r4,3
  83056c:	31803fcc 	andi	r6,r6,255
  830570:	280a90fa 	slli	r5,r5,3
  830574:	89c05026 	beq	r17,r7,8306b8 <__addsf3+0x18c>
  830578:	8185c83a 	sub	r2,r16,r6
  83057c:	00807a0e 	bge	zero,r2,830768 <__addsf3+0x23c>
  830580:	30001e1e 	bne	r6,zero,8305fc <__addsf3+0xd0>
  830584:	28006d1e 	bne	r5,zero,83073c <__addsf3+0x210>
  830588:	208001cc 	andi	r2,r4,7
  83058c:	10000426 	beq	r2,zero,8305a0 <__addsf3+0x74>
  830590:	208003cc 	andi	r2,r4,15
  830594:	00c00104 	movi	r3,4
  830598:	10c00126 	beq	r2,r3,8305a0 <__addsf3+0x74>
  83059c:	20c9883a 	add	r4,r4,r3
  8305a0:	2081002c 	andhi	r2,r4,1024
  8305a4:	10003926 	beq	r2,zero,83068c <__addsf3+0x160>
  8305a8:	84000044 	addi	r16,r16,1
  8305ac:	00803fc4 	movi	r2,255
  8305b0:	80807826 	beq	r16,r2,830794 <__addsf3+0x268>
  8305b4:	200891ba 	slli	r4,r4,6
  8305b8:	8805883a 	mov	r2,r17
  8305bc:	2008d27a 	srli	r4,r4,9
  8305c0:	84003fcc 	andi	r16,r16,255
  8305c4:	800695fa 	slli	r3,r16,23
  8305c8:	10803fcc 	andi	r2,r2,255
  8305cc:	04002034 	movhi	r16,128
  8305d0:	843fffc4 	addi	r16,r16,-1
  8305d4:	100497fa 	slli	r2,r2,31
  8305d8:	2408703a 	and	r4,r4,r16
  8305dc:	20e0b03a 	or	r16,r4,r3
  8305e0:	8084b03a 	or	r2,r16,r2
  8305e4:	dfc00317 	ldw	ra,12(sp)
  8305e8:	dc800217 	ldw	r18,8(sp)
  8305ec:	dc400117 	ldw	r17,4(sp)
  8305f0:	dc000017 	ldw	r16,0(sp)
  8305f4:	dec00404 	addi	sp,sp,16
  8305f8:	f800283a 	ret
  8305fc:	00c03fc4 	movi	r3,255
  830600:	80ffe126 	beq	r16,r3,830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  830604:	29410034 	orhi	r5,r5,1024
  830608:	00c006c4 	movi	r3,27
  83060c:	18807516 	blt	r3,r2,8307e4 <__addsf3+0x2b8>
  830610:	00c00804 	movi	r3,32
  830614:	1887c83a 	sub	r3,r3,r2
  830618:	28c6983a 	sll	r3,r5,r3
  83061c:	288ad83a 	srl	r5,r5,r2
  830620:	1804c03a 	cmpne	r2,r3,zero
  830624:	288ab03a 	or	r5,r5,r2
  830628:	2149c83a 	sub	r4,r4,r5
  83062c:	2081002c 	andhi	r2,r4,1024
  830630:	10001426 	beq	r2,zero,830684 <__addsf3+0x158>
  830634:	04810034 	movhi	r18,1024
  830638:	94bfffc4 	addi	r18,r18,-1
  83063c:	24a4703a 	and	r18,r4,r18
  830640:	9009883a 	mov	r4,r18
  830644:	0831f580 	call	831f58 <__clzsi2>
  830648:	10bffec4 	addi	r2,r2,-5
  83064c:	90a4983a 	sll	r18,r18,r2
  830650:	14005416 	blt	r2,r16,8307a4 <__addsf3+0x278>
  830654:	1405c83a 	sub	r2,r2,r16
  830658:	11000044 	addi	r4,r2,1
  83065c:	00800804 	movi	r2,32
  830660:	1105c83a 	sub	r2,r2,r4
  830664:	9084983a 	sll	r2,r18,r2
  830668:	9124d83a 	srl	r18,r18,r4
  83066c:	0021883a 	mov	r16,zero
  830670:	1008c03a 	cmpne	r4,r2,zero
  830674:	9108b03a 	or	r4,r18,r4
  830678:	003fc306 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  83067c:	1000db26 	beq	r2,zero,8309ec <__addsf3+0x4c0>
  830680:	1009883a 	mov	r4,r2
  830684:	208001cc 	andi	r2,r4,7
  830688:	103fc11e 	bne	r2,zero,830590 <__alt_mem_epcs_flash_controller_0+0xff827590>
  83068c:	2006d0fa 	srli	r3,r4,3
  830690:	01003fc4 	movi	r4,255
  830694:	8805883a 	mov	r2,r17
  830698:	8100241e 	bne	r16,r4,83072c <__addsf3+0x200>
  83069c:	18006e26 	beq	r3,zero,830858 <__addsf3+0x32c>
  8306a0:	19001034 	orhi	r4,r3,64
  8306a4:	00c02034 	movhi	r3,128
  8306a8:	18ffffc4 	addi	r3,r3,-1
  8306ac:	043fffc4 	movi	r16,-1
  8306b0:	20c8703a 	and	r4,r4,r3
  8306b4:	003fc206 	br	8305c0 <__alt_mem_epcs_flash_controller_0+0xff8275c0>
  8306b8:	8187c83a 	sub	r3,r16,r6
  8306bc:	00c03e0e 	bge	zero,r3,8307b8 <__addsf3+0x28c>
  8306c0:	30002326 	beq	r6,zero,830750 <__addsf3+0x224>
  8306c4:	01803fc4 	movi	r6,255
  8306c8:	81bfaf26 	beq	r16,r6,830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  8306cc:	29410034 	orhi	r5,r5,1024
  8306d0:	018006c4 	movi	r6,27
  8306d4:	30c07416 	blt	r6,r3,8308a8 <__addsf3+0x37c>
  8306d8:	01800804 	movi	r6,32
  8306dc:	30cdc83a 	sub	r6,r6,r3
  8306e0:	298c983a 	sll	r6,r5,r6
  8306e4:	28cad83a 	srl	r5,r5,r3
  8306e8:	3006c03a 	cmpne	r3,r6,zero
  8306ec:	28cab03a 	or	r5,r5,r3
  8306f0:	2149883a 	add	r4,r4,r5
  8306f4:	20c1002c 	andhi	r3,r4,1024
  8306f8:	183fe226 	beq	r3,zero,830684 <__alt_mem_epcs_flash_controller_0+0xff827684>
  8306fc:	84000044 	addi	r16,r16,1
  830700:	00c03fc4 	movi	r3,255
  830704:	80c05426 	beq	r16,r3,830858 <__addsf3+0x32c>
  830708:	00bf0034 	movhi	r2,64512
  83070c:	10bfffc4 	addi	r2,r2,-1
  830710:	20c0004c 	andi	r3,r4,1
  830714:	2088703a 	and	r4,r4,r2
  830718:	2008d07a 	srli	r4,r4,1
  83071c:	20c8b03a 	or	r4,r4,r3
  830720:	003f9906 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  830724:	0007883a 	mov	r3,zero
  830728:	0005883a 	mov	r2,zero
  83072c:	01002034 	movhi	r4,128
  830730:	213fffc4 	addi	r4,r4,-1
  830734:	1908703a 	and	r4,r3,r4
  830738:	003fa106 	br	8305c0 <__alt_mem_epcs_flash_controller_0+0xff8275c0>
  83073c:	10bfffc4 	addi	r2,r2,-1
  830740:	103fb926 	beq	r2,zero,830628 <__alt_mem_epcs_flash_controller_0+0xff827628>
  830744:	00c03fc4 	movi	r3,255
  830748:	80ffaf1e 	bne	r16,r3,830608 <__alt_mem_epcs_flash_controller_0+0xff827608>
  83074c:	003f8e06 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  830750:	283f8d26 	beq	r5,zero,830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  830754:	18ffffc4 	addi	r3,r3,-1
  830758:	183fe526 	beq	r3,zero,8306f0 <__alt_mem_epcs_flash_controller_0+0xff8276f0>
  83075c:	01803fc4 	movi	r6,255
  830760:	81bfdb1e 	bne	r16,r6,8306d0 <__alt_mem_epcs_flash_controller_0+0xff8276d0>
  830764:	003f8806 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  830768:	1000201e 	bne	r2,zero,8307ec <__addsf3+0x2c0>
  83076c:	80800044 	addi	r2,r16,1
  830770:	10803fcc 	andi	r2,r2,255
  830774:	01800044 	movi	r6,1
  830778:	3080450e 	bge	r6,r2,830890 <__addsf3+0x364>
  83077c:	2165c83a 	sub	r18,r4,r5
  830780:	90c1002c 	andhi	r3,r18,1024
  830784:	18002b26 	beq	r3,zero,830834 <__addsf3+0x308>
  830788:	2925c83a 	sub	r18,r5,r4
  83078c:	3823883a 	mov	r17,r7
  830790:	003fab06 	br	830640 <__alt_mem_epcs_flash_controller_0+0xff827640>
  830794:	8805883a 	mov	r2,r17
  830798:	043fffc4 	movi	r16,-1
  83079c:	0009883a 	mov	r4,zero
  8307a0:	003f8706 	br	8305c0 <__alt_mem_epcs_flash_controller_0+0xff8275c0>
  8307a4:	013f0034 	movhi	r4,64512
  8307a8:	213fffc4 	addi	r4,r4,-1
  8307ac:	80a1c83a 	sub	r16,r16,r2
  8307b0:	9108703a 	and	r4,r18,r4
  8307b4:	003f7406 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  8307b8:	1800411e 	bne	r3,zero,8308c0 <__addsf3+0x394>
  8307bc:	80c00044 	addi	r3,r16,1
  8307c0:	19c03fcc 	andi	r7,r3,255
  8307c4:	01800044 	movi	r6,1
  8307c8:	31c0260e 	bge	r6,r7,830864 <__addsf3+0x338>
  8307cc:	01803fc4 	movi	r6,255
  8307d0:	19802126 	beq	r3,r6,830858 <__addsf3+0x32c>
  8307d4:	2149883a 	add	r4,r4,r5
  8307d8:	2008d07a 	srli	r4,r4,1
  8307dc:	1821883a 	mov	r16,r3
  8307e0:	003f6906 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  8307e4:	01400044 	movi	r5,1
  8307e8:	003f8f06 	br	830628 <__alt_mem_epcs_flash_controller_0+0xff827628>
  8307ec:	8000151e 	bne	r16,zero,830844 <__addsf3+0x318>
  8307f0:	20002f26 	beq	r4,zero,8308b0 <__addsf3+0x384>
  8307f4:	0084303a 	nor	r2,zero,r2
  8307f8:	10000a26 	beq	r2,zero,830824 <__addsf3+0x2f8>
  8307fc:	00c03fc4 	movi	r3,255
  830800:	30c02b26 	beq	r6,r3,8308b0 <__addsf3+0x384>
  830804:	00c006c4 	movi	r3,27
  830808:	18806d16 	blt	r3,r2,8309c0 <__addsf3+0x494>
  83080c:	00c00804 	movi	r3,32
  830810:	1887c83a 	sub	r3,r3,r2
  830814:	20c6983a 	sll	r3,r4,r3
  830818:	2084d83a 	srl	r2,r4,r2
  83081c:	1808c03a 	cmpne	r4,r3,zero
  830820:	1108b03a 	or	r4,r2,r4
  830824:	2909c83a 	sub	r4,r5,r4
  830828:	3021883a 	mov	r16,r6
  83082c:	3823883a 	mov	r17,r7
  830830:	003f7e06 	br	83062c <__alt_mem_epcs_flash_controller_0+0xff82762c>
  830834:	903f821e 	bne	r18,zero,830640 <__alt_mem_epcs_flash_controller_0+0xff827640>
  830838:	0005883a 	mov	r2,zero
  83083c:	0021883a 	mov	r16,zero
  830840:	003fba06 	br	83072c <__alt_mem_epcs_flash_controller_0+0xff82772c>
  830844:	00c03fc4 	movi	r3,255
  830848:	30c01926 	beq	r6,r3,8308b0 <__addsf3+0x384>
  83084c:	0085c83a 	sub	r2,zero,r2
  830850:	21010034 	orhi	r4,r4,1024
  830854:	003feb06 	br	830804 <__alt_mem_epcs_flash_controller_0+0xff827804>
  830858:	043fffc4 	movi	r16,-1
  83085c:	0009883a 	mov	r4,zero
  830860:	003f5706 	br	8305c0 <__alt_mem_epcs_flash_controller_0+0xff8275c0>
  830864:	80004a1e 	bne	r16,zero,830990 <__addsf3+0x464>
  830868:	20005926 	beq	r4,zero,8309d0 <__addsf3+0x4a4>
  83086c:	283f4626 	beq	r5,zero,830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  830870:	2149883a 	add	r4,r4,r5
  830874:	2081002c 	andhi	r2,r4,1024
  830878:	103f8226 	beq	r2,zero,830684 <__alt_mem_epcs_flash_controller_0+0xff827684>
  83087c:	00bf0034 	movhi	r2,64512
  830880:	10bfffc4 	addi	r2,r2,-1
  830884:	3021883a 	mov	r16,r6
  830888:	2088703a 	and	r4,r4,r2
  83088c:	003f3e06 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  830890:	8000121e 	bne	r16,zero,8308dc <__addsf3+0x3b0>
  830894:	2000261e 	bne	r4,zero,830930 <__addsf3+0x404>
  830898:	283fa226 	beq	r5,zero,830724 <__alt_mem_epcs_flash_controller_0+0xff827724>
  83089c:	2809883a 	mov	r4,r5
  8308a0:	3823883a 	mov	r17,r7
  8308a4:	003f3806 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  8308a8:	01400044 	movi	r5,1
  8308ac:	003f9006 	br	8306f0 <__alt_mem_epcs_flash_controller_0+0xff8276f0>
  8308b0:	2809883a 	mov	r4,r5
  8308b4:	3021883a 	mov	r16,r6
  8308b8:	3823883a 	mov	r17,r7
  8308bc:	003f3206 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  8308c0:	80000c1e 	bne	r16,zero,8308f4 <__addsf3+0x3c8>
  8308c4:	20002f26 	beq	r4,zero,830984 <__addsf3+0x458>
  8308c8:	00c6303a 	nor	r3,zero,r3
  8308cc:	18002b1e 	bne	r3,zero,83097c <__addsf3+0x450>
  8308d0:	2149883a 	add	r4,r4,r5
  8308d4:	3021883a 	mov	r16,r6
  8308d8:	003f8606 	br	8306f4 <__alt_mem_epcs_flash_controller_0+0xff8276f4>
  8308dc:	20001b1e 	bne	r4,zero,83094c <__addsf3+0x420>
  8308e0:	28003926 	beq	r5,zero,8309c8 <__addsf3+0x49c>
  8308e4:	2809883a 	mov	r4,r5
  8308e8:	3823883a 	mov	r17,r7
  8308ec:	04003fc4 	movi	r16,255
  8308f0:	003f2506 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  8308f4:	01c03fc4 	movi	r7,255
  8308f8:	31c02226 	beq	r6,r7,830984 <__addsf3+0x458>
  8308fc:	00c7c83a 	sub	r3,zero,r3
  830900:	21010034 	orhi	r4,r4,1024
  830904:	01c006c4 	movi	r7,27
  830908:	38c03616 	blt	r7,r3,8309e4 <__addsf3+0x4b8>
  83090c:	01c00804 	movi	r7,32
  830910:	38cfc83a 	sub	r7,r7,r3
  830914:	21ce983a 	sll	r7,r4,r7
  830918:	20c6d83a 	srl	r3,r4,r3
  83091c:	3808c03a 	cmpne	r4,r7,zero
  830920:	1906b03a 	or	r3,r3,r4
  830924:	1949883a 	add	r4,r3,r5
  830928:	3021883a 	mov	r16,r6
  83092c:	003f7106 	br	8306f4 <__alt_mem_epcs_flash_controller_0+0xff8276f4>
  830930:	283f1526 	beq	r5,zero,830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  830934:	2145c83a 	sub	r2,r4,r5
  830938:	10c1002c 	andhi	r3,r2,1024
  83093c:	183f4f26 	beq	r3,zero,83067c <__alt_mem_epcs_flash_controller_0+0xff82767c>
  830940:	2909c83a 	sub	r4,r5,r4
  830944:	3823883a 	mov	r17,r7
  830948:	003f0f06 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  83094c:	28001a26 	beq	r5,zero,8309b8 <__addsf3+0x48c>
  830950:	2008d0fa 	srli	r4,r4,3
  830954:	2080102c 	andhi	r2,r4,64
  830958:	10000526 	beq	r2,zero,830970 <__addsf3+0x444>
  83095c:	280ad0fa 	srli	r5,r5,3
  830960:	2880102c 	andhi	r2,r5,64
  830964:	1000021e 	bne	r2,zero,830970 <__addsf3+0x444>
  830968:	2809883a 	mov	r4,r5
  83096c:	3823883a 	mov	r17,r7
  830970:	200890fa 	slli	r4,r4,3
  830974:	04003fc4 	movi	r16,255
  830978:	003f0306 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  83097c:	01c03fc4 	movi	r7,255
  830980:	31ffe01e 	bne	r6,r7,830904 <__alt_mem_epcs_flash_controller_0+0xff827904>
  830984:	2809883a 	mov	r4,r5
  830988:	3021883a 	mov	r16,r6
  83098c:	003efe06 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  830990:	20001126 	beq	r4,zero,8309d8 <__addsf3+0x4ac>
  830994:	28000826 	beq	r5,zero,8309b8 <__addsf3+0x48c>
  830998:	2008d0fa 	srli	r4,r4,3
  83099c:	2080102c 	andhi	r2,r4,64
  8309a0:	103ff326 	beq	r2,zero,830970 <__alt_mem_epcs_flash_controller_0+0xff827970>
  8309a4:	280ad0fa 	srli	r5,r5,3
  8309a8:	2880102c 	andhi	r2,r5,64
  8309ac:	103ff01e 	bne	r2,zero,830970 <__alt_mem_epcs_flash_controller_0+0xff827970>
  8309b0:	2809883a 	mov	r4,r5
  8309b4:	003fee06 	br	830970 <__alt_mem_epcs_flash_controller_0+0xff827970>
  8309b8:	04003fc4 	movi	r16,255
  8309bc:	003ef206 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  8309c0:	01000044 	movi	r4,1
  8309c4:	003f9706 	br	830824 <__alt_mem_epcs_flash_controller_0+0xff827824>
  8309c8:	0005883a 	mov	r2,zero
  8309cc:	003f3406 	br	8306a0 <__alt_mem_epcs_flash_controller_0+0xff8276a0>
  8309d0:	2809883a 	mov	r4,r5
  8309d4:	003eec06 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  8309d8:	2809883a 	mov	r4,r5
  8309dc:	04003fc4 	movi	r16,255
  8309e0:	003ee906 	br	830588 <__alt_mem_epcs_flash_controller_0+0xff827588>
  8309e4:	00c00044 	movi	r3,1
  8309e8:	003fce06 	br	830924 <__alt_mem_epcs_flash_controller_0+0xff827924>
  8309ec:	0005883a 	mov	r2,zero
  8309f0:	003f4e06 	br	83072c <__alt_mem_epcs_flash_controller_0+0xff82772c>

008309f4 <__mulsf3>:
  8309f4:	defff504 	addi	sp,sp,-44
  8309f8:	dc000115 	stw	r16,4(sp)
  8309fc:	2020d5fa 	srli	r16,r4,23
  830a00:	dd400615 	stw	r21,24(sp)
  830a04:	202ad7fa 	srli	r21,r4,31
  830a08:	dc800315 	stw	r18,12(sp)
  830a0c:	04802034 	movhi	r18,128
  830a10:	df000915 	stw	fp,36(sp)
  830a14:	dd000515 	stw	r20,20(sp)
  830a18:	94bfffc4 	addi	r18,r18,-1
  830a1c:	dfc00a15 	stw	ra,40(sp)
  830a20:	ddc00815 	stw	r23,32(sp)
  830a24:	dd800715 	stw	r22,28(sp)
  830a28:	dcc00415 	stw	r19,16(sp)
  830a2c:	dc400215 	stw	r17,8(sp)
  830a30:	84003fcc 	andi	r16,r16,255
  830a34:	9124703a 	and	r18,r18,r4
  830a38:	a829883a 	mov	r20,r21
  830a3c:	af003fcc 	andi	fp,r21,255
  830a40:	80005426 	beq	r16,zero,830b94 <__mulsf3+0x1a0>
  830a44:	00803fc4 	movi	r2,255
  830a48:	80802f26 	beq	r16,r2,830b08 <__mulsf3+0x114>
  830a4c:	91002034 	orhi	r4,r18,128
  830a50:	202490fa 	slli	r18,r4,3
  830a54:	843fe044 	addi	r16,r16,-127
  830a58:	0023883a 	mov	r17,zero
  830a5c:	002f883a 	mov	r23,zero
  830a60:	2804d5fa 	srli	r2,r5,23
  830a64:	282cd7fa 	srli	r22,r5,31
  830a68:	01002034 	movhi	r4,128
  830a6c:	213fffc4 	addi	r4,r4,-1
  830a70:	10803fcc 	andi	r2,r2,255
  830a74:	2166703a 	and	r19,r4,r5
  830a78:	b1803fcc 	andi	r6,r22,255
  830a7c:	10004c26 	beq	r2,zero,830bb0 <__mulsf3+0x1bc>
  830a80:	00c03fc4 	movi	r3,255
  830a84:	10c04726 	beq	r2,r3,830ba4 <__mulsf3+0x1b0>
  830a88:	99002034 	orhi	r4,r19,128
  830a8c:	202690fa 	slli	r19,r4,3
  830a90:	10bfe044 	addi	r2,r2,-127
  830a94:	0007883a 	mov	r3,zero
  830a98:	80a1883a 	add	r16,r16,r2
  830a9c:	010003c4 	movi	r4,15
  830aa0:	1c44b03a 	or	r2,r3,r17
  830aa4:	b56af03a 	xor	r21,r22,r21
  830aa8:	81c00044 	addi	r7,r16,1
  830aac:	20806b36 	bltu	r4,r2,830c5c <__mulsf3+0x268>
  830ab0:	100490ba 	slli	r2,r2,2
  830ab4:	010020f4 	movhi	r4,131
  830ab8:	2102b204 	addi	r4,r4,2760
  830abc:	1105883a 	add	r2,r2,r4
  830ac0:	10800017 	ldw	r2,0(r2)
  830ac4:	1000683a 	jmp	r2
  830ac8:	00830c5c 	xori	r2,zero,3121
  830acc:	00830b1c 	xori	r2,zero,3116
  830ad0:	00830b1c 	xori	r2,zero,3116
  830ad4:	00830b18 	cmpnei	r2,zero,3116
  830ad8:	00830c40 	call	830c4 <OSCtxSw_SWITCH_PC+0x83084>
  830adc:	00830c40 	call	830c4 <OSCtxSw_SWITCH_PC+0x83084>
  830ae0:	00830c2c 	andhi	r2,zero,3120
  830ae4:	00830b18 	cmpnei	r2,zero,3116
  830ae8:	00830c40 	call	830c4 <OSCtxSw_SWITCH_PC+0x83084>
  830aec:	00830c2c 	andhi	r2,zero,3120
  830af0:	00830c40 	call	830c4 <OSCtxSw_SWITCH_PC+0x83084>
  830af4:	00830b18 	cmpnei	r2,zero,3116
  830af8:	00830c4c 	andi	r2,zero,3121
  830afc:	00830c4c 	andi	r2,zero,3121
  830b00:	00830c4c 	andi	r2,zero,3121
  830b04:	00830d5c 	xori	r2,zero,3125
  830b08:	90003b1e 	bne	r18,zero,830bf8 <__mulsf3+0x204>
  830b0c:	04400204 	movi	r17,8
  830b10:	05c00084 	movi	r23,2
  830b14:	003fd206 	br	830a60 <__alt_mem_epcs_flash_controller_0+0xff827a60>
  830b18:	302b883a 	mov	r21,r6
  830b1c:	00800084 	movi	r2,2
  830b20:	18802626 	beq	r3,r2,830bbc <__mulsf3+0x1c8>
  830b24:	008000c4 	movi	r2,3
  830b28:	1880b826 	beq	r3,r2,830e0c <__mulsf3+0x418>
  830b2c:	00800044 	movi	r2,1
  830b30:	1880af1e 	bne	r3,r2,830df0 <__mulsf3+0x3fc>
  830b34:	a829883a 	mov	r20,r21
  830b38:	0007883a 	mov	r3,zero
  830b3c:	0009883a 	mov	r4,zero
  830b40:	18803fcc 	andi	r2,r3,255
  830b44:	100695fa 	slli	r3,r2,23
  830b48:	a0803fcc 	andi	r2,r20,255
  830b4c:	100a97fa 	slli	r5,r2,31
  830b50:	00802034 	movhi	r2,128
  830b54:	10bfffc4 	addi	r2,r2,-1
  830b58:	2084703a 	and	r2,r4,r2
  830b5c:	10c4b03a 	or	r2,r2,r3
  830b60:	1144b03a 	or	r2,r2,r5
  830b64:	dfc00a17 	ldw	ra,40(sp)
  830b68:	df000917 	ldw	fp,36(sp)
  830b6c:	ddc00817 	ldw	r23,32(sp)
  830b70:	dd800717 	ldw	r22,28(sp)
  830b74:	dd400617 	ldw	r21,24(sp)
  830b78:	dd000517 	ldw	r20,20(sp)
  830b7c:	dcc00417 	ldw	r19,16(sp)
  830b80:	dc800317 	ldw	r18,12(sp)
  830b84:	dc400217 	ldw	r17,8(sp)
  830b88:	dc000117 	ldw	r16,4(sp)
  830b8c:	dec00b04 	addi	sp,sp,44
  830b90:	f800283a 	ret
  830b94:	90000d1e 	bne	r18,zero,830bcc <__mulsf3+0x1d8>
  830b98:	04400104 	movi	r17,4
  830b9c:	05c00044 	movi	r23,1
  830ba0:	003faf06 	br	830a60 <__alt_mem_epcs_flash_controller_0+0xff827a60>
  830ba4:	9806c03a 	cmpne	r3,r19,zero
  830ba8:	18c00084 	addi	r3,r3,2
  830bac:	003fba06 	br	830a98 <__alt_mem_epcs_flash_controller_0+0xff827a98>
  830bb0:	9800141e 	bne	r19,zero,830c04 <__mulsf3+0x210>
  830bb4:	00c00044 	movi	r3,1
  830bb8:	003fb706 	br	830a98 <__alt_mem_epcs_flash_controller_0+0xff827a98>
  830bbc:	a829883a 	mov	r20,r21
  830bc0:	00ffffc4 	movi	r3,-1
  830bc4:	0009883a 	mov	r4,zero
  830bc8:	003fdd06 	br	830b40 <__alt_mem_epcs_flash_controller_0+0xff827b40>
  830bcc:	9009883a 	mov	r4,r18
  830bd0:	d9400015 	stw	r5,0(sp)
  830bd4:	0831f580 	call	831f58 <__clzsi2>
  830bd8:	10fffec4 	addi	r3,r2,-5
  830bdc:	10801d84 	addi	r2,r2,118
  830be0:	90e4983a 	sll	r18,r18,r3
  830be4:	00a1c83a 	sub	r16,zero,r2
  830be8:	0023883a 	mov	r17,zero
  830bec:	002f883a 	mov	r23,zero
  830bf0:	d9400017 	ldw	r5,0(sp)
  830bf4:	003f9a06 	br	830a60 <__alt_mem_epcs_flash_controller_0+0xff827a60>
  830bf8:	04400304 	movi	r17,12
  830bfc:	05c000c4 	movi	r23,3
  830c00:	003f9706 	br	830a60 <__alt_mem_epcs_flash_controller_0+0xff827a60>
  830c04:	9809883a 	mov	r4,r19
  830c08:	d9800015 	stw	r6,0(sp)
  830c0c:	0831f580 	call	831f58 <__clzsi2>
  830c10:	10fffec4 	addi	r3,r2,-5
  830c14:	10801d84 	addi	r2,r2,118
  830c18:	98e6983a 	sll	r19,r19,r3
  830c1c:	0085c83a 	sub	r2,zero,r2
  830c20:	0007883a 	mov	r3,zero
  830c24:	d9800017 	ldw	r6,0(sp)
  830c28:	003f9b06 	br	830a98 <__alt_mem_epcs_flash_controller_0+0xff827a98>
  830c2c:	01002034 	movhi	r4,128
  830c30:	0029883a 	mov	r20,zero
  830c34:	213fffc4 	addi	r4,r4,-1
  830c38:	00ffffc4 	movi	r3,-1
  830c3c:	003fc006 	br	830b40 <__alt_mem_epcs_flash_controller_0+0xff827b40>
  830c40:	9027883a 	mov	r19,r18
  830c44:	b807883a 	mov	r3,r23
  830c48:	003fb406 	br	830b1c <__alt_mem_epcs_flash_controller_0+0xff827b1c>
  830c4c:	9027883a 	mov	r19,r18
  830c50:	e02b883a 	mov	r21,fp
  830c54:	b807883a 	mov	r3,r23
  830c58:	003fb006 	br	830b1c <__alt_mem_epcs_flash_controller_0+0xff827b1c>
  830c5c:	9028d43a 	srli	r20,r18,16
  830c60:	982cd43a 	srli	r22,r19,16
  830c64:	94bfffcc 	andi	r18,r18,65535
  830c68:	9cffffcc 	andi	r19,r19,65535
  830c6c:	980b883a 	mov	r5,r19
  830c70:	9009883a 	mov	r4,r18
  830c74:	d9c00015 	stw	r7,0(sp)
  830c78:	08305040 	call	830504 <__mulsi3>
  830c7c:	a00b883a 	mov	r5,r20
  830c80:	9809883a 	mov	r4,r19
  830c84:	1023883a 	mov	r17,r2
  830c88:	08305040 	call	830504 <__mulsi3>
  830c8c:	a009883a 	mov	r4,r20
  830c90:	b00b883a 	mov	r5,r22
  830c94:	1027883a 	mov	r19,r2
  830c98:	08305040 	call	830504 <__mulsi3>
  830c9c:	b00b883a 	mov	r5,r22
  830ca0:	9009883a 	mov	r4,r18
  830ca4:	1029883a 	mov	r20,r2
  830ca8:	08305040 	call	830504 <__mulsi3>
  830cac:	8806d43a 	srli	r3,r17,16
  830cb0:	14c5883a 	add	r2,r2,r19
  830cb4:	d9c00017 	ldw	r7,0(sp)
  830cb8:	1885883a 	add	r2,r3,r2
  830cbc:	14c0022e 	bgeu	r2,r19,830cc8 <__mulsf3+0x2d4>
  830cc0:	00c00074 	movhi	r3,1
  830cc4:	a0e9883a 	add	r20,r20,r3
  830cc8:	1026943a 	slli	r19,r2,16
  830ccc:	8c7fffcc 	andi	r17,r17,65535
  830cd0:	1004d43a 	srli	r2,r2,16
  830cd4:	9c63883a 	add	r17,r19,r17
  830cd8:	882691ba 	slli	r19,r17,6
  830cdc:	1505883a 	add	r2,r2,r20
  830ce0:	8822d6ba 	srli	r17,r17,26
  830ce4:	100891ba 	slli	r4,r2,6
  830ce8:	9826c03a 	cmpne	r19,r19,zero
  830cec:	9c62b03a 	or	r17,r19,r17
  830cf0:	8926b03a 	or	r19,r17,r4
  830cf4:	9882002c 	andhi	r2,r19,2048
  830cf8:	10000426 	beq	r2,zero,830d0c <__mulsf3+0x318>
  830cfc:	9804d07a 	srli	r2,r19,1
  830d00:	9900004c 	andi	r4,r19,1
  830d04:	3821883a 	mov	r16,r7
  830d08:	1126b03a 	or	r19,r2,r4
  830d0c:	80c01fc4 	addi	r3,r16,127
  830d10:	00c0210e 	bge	zero,r3,830d98 <__mulsf3+0x3a4>
  830d14:	988001cc 	andi	r2,r19,7
  830d18:	10000426 	beq	r2,zero,830d2c <__mulsf3+0x338>
  830d1c:	988003cc 	andi	r2,r19,15
  830d20:	01000104 	movi	r4,4
  830d24:	11000126 	beq	r2,r4,830d2c <__mulsf3+0x338>
  830d28:	9927883a 	add	r19,r19,r4
  830d2c:	9882002c 	andhi	r2,r19,2048
  830d30:	10000426 	beq	r2,zero,830d44 <__mulsf3+0x350>
  830d34:	00be0034 	movhi	r2,63488
  830d38:	10bfffc4 	addi	r2,r2,-1
  830d3c:	80c02004 	addi	r3,r16,128
  830d40:	98a6703a 	and	r19,r19,r2
  830d44:	00803f84 	movi	r2,254
  830d48:	10ff9c16 	blt	r2,r3,830bbc <__alt_mem_epcs_flash_controller_0+0xff827bbc>
  830d4c:	980891ba 	slli	r4,r19,6
  830d50:	a829883a 	mov	r20,r21
  830d54:	2008d27a 	srli	r4,r4,9
  830d58:	003f7906 	br	830b40 <__alt_mem_epcs_flash_controller_0+0xff827b40>
  830d5c:	9080102c 	andhi	r2,r18,64
  830d60:	10000826 	beq	r2,zero,830d84 <__mulsf3+0x390>
  830d64:	9880102c 	andhi	r2,r19,64
  830d68:	1000061e 	bne	r2,zero,830d84 <__mulsf3+0x390>
  830d6c:	00802034 	movhi	r2,128
  830d70:	99001034 	orhi	r4,r19,64
  830d74:	10bfffc4 	addi	r2,r2,-1
  830d78:	b029883a 	mov	r20,r22
  830d7c:	2088703a 	and	r4,r4,r2
  830d80:	003fad06 	br	830c38 <__alt_mem_epcs_flash_controller_0+0xff827c38>
  830d84:	00802034 	movhi	r2,128
  830d88:	91001034 	orhi	r4,r18,64
  830d8c:	10bfffc4 	addi	r2,r2,-1
  830d90:	2088703a 	and	r4,r4,r2
  830d94:	003fa806 	br	830c38 <__alt_mem_epcs_flash_controller_0+0xff827c38>
  830d98:	00800044 	movi	r2,1
  830d9c:	10c7c83a 	sub	r3,r2,r3
  830da0:	008006c4 	movi	r2,27
  830da4:	10ff6316 	blt	r2,r3,830b34 <__alt_mem_epcs_flash_controller_0+0xff827b34>
  830da8:	00800804 	movi	r2,32
  830dac:	10c5c83a 	sub	r2,r2,r3
  830db0:	9884983a 	sll	r2,r19,r2
  830db4:	98c6d83a 	srl	r3,r19,r3
  830db8:	1004c03a 	cmpne	r2,r2,zero
  830dbc:	1884b03a 	or	r2,r3,r2
  830dc0:	10c001cc 	andi	r3,r2,7
  830dc4:	18000426 	beq	r3,zero,830dd8 <__mulsf3+0x3e4>
  830dc8:	10c003cc 	andi	r3,r2,15
  830dcc:	01000104 	movi	r4,4
  830dd0:	19000126 	beq	r3,r4,830dd8 <__mulsf3+0x3e4>
  830dd4:	1105883a 	add	r2,r2,r4
  830dd8:	10c1002c 	andhi	r3,r2,1024
  830ddc:	18000626 	beq	r3,zero,830df8 <__mulsf3+0x404>
  830de0:	a829883a 	mov	r20,r21
  830de4:	00c00044 	movi	r3,1
  830de8:	0009883a 	mov	r4,zero
  830dec:	003f5406 	br	830b40 <__alt_mem_epcs_flash_controller_0+0xff827b40>
  830df0:	3821883a 	mov	r16,r7
  830df4:	003fc506 	br	830d0c <__alt_mem_epcs_flash_controller_0+0xff827d0c>
  830df8:	100491ba 	slli	r2,r2,6
  830dfc:	a829883a 	mov	r20,r21
  830e00:	0007883a 	mov	r3,zero
  830e04:	1008d27a 	srli	r4,r2,9
  830e08:	003f4d06 	br	830b40 <__alt_mem_epcs_flash_controller_0+0xff827b40>
  830e0c:	00802034 	movhi	r2,128
  830e10:	99001034 	orhi	r4,r19,64
  830e14:	10bfffc4 	addi	r2,r2,-1
  830e18:	a829883a 	mov	r20,r21
  830e1c:	2088703a 	and	r4,r4,r2
  830e20:	003f8506 	br	830c38 <__alt_mem_epcs_flash_controller_0+0xff827c38>

00830e24 <__subsf3>:
  830e24:	defffc04 	addi	sp,sp,-16
  830e28:	280cd5fa 	srli	r6,r5,23
  830e2c:	dc000015 	stw	r16,0(sp)
  830e30:	01c02034 	movhi	r7,128
  830e34:	2020d5fa 	srli	r16,r4,23
  830e38:	39ffffc4 	addi	r7,r7,-1
  830e3c:	3906703a 	and	r3,r7,r4
  830e40:	dc400115 	stw	r17,4(sp)
  830e44:	394e703a 	and	r7,r7,r5
  830e48:	2022d7fa 	srli	r17,r4,31
  830e4c:	dfc00315 	stw	ra,12(sp)
  830e50:	dc800215 	stw	r18,8(sp)
  830e54:	31803fcc 	andi	r6,r6,255
  830e58:	01003fc4 	movi	r4,255
  830e5c:	84003fcc 	andi	r16,r16,255
  830e60:	180690fa 	slli	r3,r3,3
  830e64:	2804d7fa 	srli	r2,r5,31
  830e68:	380e90fa 	slli	r7,r7,3
  830e6c:	31006d26 	beq	r6,r4,831024 <__subsf3+0x200>
  830e70:	1080005c 	xori	r2,r2,1
  830e74:	8189c83a 	sub	r4,r16,r6
  830e78:	14404f26 	beq	r2,r17,830fb8 <__subsf3+0x194>
  830e7c:	0100770e 	bge	zero,r4,83105c <__subsf3+0x238>
  830e80:	30001e1e 	bne	r6,zero,830efc <__subsf3+0xd8>
  830e84:	38006a1e 	bne	r7,zero,831030 <__subsf3+0x20c>
  830e88:	188001cc 	andi	r2,r3,7
  830e8c:	10000426 	beq	r2,zero,830ea0 <__subsf3+0x7c>
  830e90:	188003cc 	andi	r2,r3,15
  830e94:	01000104 	movi	r4,4
  830e98:	11000126 	beq	r2,r4,830ea0 <__subsf3+0x7c>
  830e9c:	1907883a 	add	r3,r3,r4
  830ea0:	1881002c 	andhi	r2,r3,1024
  830ea4:	10003926 	beq	r2,zero,830f8c <__subsf3+0x168>
  830ea8:	84000044 	addi	r16,r16,1
  830eac:	00803fc4 	movi	r2,255
  830eb0:	80807526 	beq	r16,r2,831088 <__subsf3+0x264>
  830eb4:	180691ba 	slli	r3,r3,6
  830eb8:	8880004c 	andi	r2,r17,1
  830ebc:	180ad27a 	srli	r5,r3,9
  830ec0:	84003fcc 	andi	r16,r16,255
  830ec4:	800695fa 	slli	r3,r16,23
  830ec8:	10803fcc 	andi	r2,r2,255
  830ecc:	01002034 	movhi	r4,128
  830ed0:	213fffc4 	addi	r4,r4,-1
  830ed4:	100497fa 	slli	r2,r2,31
  830ed8:	2920703a 	and	r16,r5,r4
  830edc:	80e0b03a 	or	r16,r16,r3
  830ee0:	8084b03a 	or	r2,r16,r2
  830ee4:	dfc00317 	ldw	ra,12(sp)
  830ee8:	dc800217 	ldw	r18,8(sp)
  830eec:	dc400117 	ldw	r17,4(sp)
  830ef0:	dc000017 	ldw	r16,0(sp)
  830ef4:	dec00404 	addi	sp,sp,16
  830ef8:	f800283a 	ret
  830efc:	00803fc4 	movi	r2,255
  830f00:	80bfe126 	beq	r16,r2,830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  830f04:	39c10034 	orhi	r7,r7,1024
  830f08:	008006c4 	movi	r2,27
  830f0c:	11007416 	blt	r2,r4,8310e0 <__subsf3+0x2bc>
  830f10:	00800804 	movi	r2,32
  830f14:	1105c83a 	sub	r2,r2,r4
  830f18:	3884983a 	sll	r2,r7,r2
  830f1c:	390ed83a 	srl	r7,r7,r4
  830f20:	1008c03a 	cmpne	r4,r2,zero
  830f24:	390eb03a 	or	r7,r7,r4
  830f28:	19c7c83a 	sub	r3,r3,r7
  830f2c:	1881002c 	andhi	r2,r3,1024
  830f30:	10001426 	beq	r2,zero,830f84 <__subsf3+0x160>
  830f34:	04810034 	movhi	r18,1024
  830f38:	94bfffc4 	addi	r18,r18,-1
  830f3c:	1ca4703a 	and	r18,r3,r18
  830f40:	9009883a 	mov	r4,r18
  830f44:	0831f580 	call	831f58 <__clzsi2>
  830f48:	10bffec4 	addi	r2,r2,-5
  830f4c:	90a4983a 	sll	r18,r18,r2
  830f50:	14005116 	blt	r2,r16,831098 <__subsf3+0x274>
  830f54:	1405c83a 	sub	r2,r2,r16
  830f58:	10c00044 	addi	r3,r2,1
  830f5c:	00800804 	movi	r2,32
  830f60:	10c5c83a 	sub	r2,r2,r3
  830f64:	9084983a 	sll	r2,r18,r2
  830f68:	90e4d83a 	srl	r18,r18,r3
  830f6c:	0021883a 	mov	r16,zero
  830f70:	1006c03a 	cmpne	r3,r2,zero
  830f74:	90c6b03a 	or	r3,r18,r3
  830f78:	003fc306 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  830f7c:	2000e026 	beq	r4,zero,831300 <__subsf3+0x4dc>
  830f80:	2007883a 	mov	r3,r4
  830f84:	188001cc 	andi	r2,r3,7
  830f88:	103fc11e 	bne	r2,zero,830e90 <__alt_mem_epcs_flash_controller_0+0xff827e90>
  830f8c:	180ad0fa 	srli	r5,r3,3
  830f90:	00c03fc4 	movi	r3,255
  830f94:	8880004c 	andi	r2,r17,1
  830f98:	80c0031e 	bne	r16,r3,830fa8 <__subsf3+0x184>
  830f9c:	28006d26 	beq	r5,zero,831154 <__subsf3+0x330>
  830fa0:	29401034 	orhi	r5,r5,64
  830fa4:	043fffc4 	movi	r16,-1
  830fa8:	00c02034 	movhi	r3,128
  830fac:	18ffffc4 	addi	r3,r3,-1
  830fb0:	28ca703a 	and	r5,r5,r3
  830fb4:	003fc206 	br	830ec0 <__alt_mem_epcs_flash_controller_0+0xff827ec0>
  830fb8:	01003c0e 	bge	zero,r4,8310ac <__subsf3+0x288>
  830fbc:	30002126 	beq	r6,zero,831044 <__subsf3+0x220>
  830fc0:	01403fc4 	movi	r5,255
  830fc4:	817fb026 	beq	r16,r5,830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  830fc8:	39c10034 	orhi	r7,r7,1024
  830fcc:	014006c4 	movi	r5,27
  830fd0:	29007416 	blt	r5,r4,8311a4 <__subsf3+0x380>
  830fd4:	01400804 	movi	r5,32
  830fd8:	290bc83a 	sub	r5,r5,r4
  830fdc:	394a983a 	sll	r5,r7,r5
  830fe0:	390ed83a 	srl	r7,r7,r4
  830fe4:	2808c03a 	cmpne	r4,r5,zero
  830fe8:	390eb03a 	or	r7,r7,r4
  830fec:	19c7883a 	add	r3,r3,r7
  830ff0:	1901002c 	andhi	r4,r3,1024
  830ff4:	20003826 	beq	r4,zero,8310d8 <__subsf3+0x2b4>
  830ff8:	84000044 	addi	r16,r16,1
  830ffc:	01003fc4 	movi	r4,255
  831000:	81005426 	beq	r16,r4,831154 <__subsf3+0x330>
  831004:	1023883a 	mov	r17,r2
  831008:	00bf0034 	movhi	r2,64512
  83100c:	10bfffc4 	addi	r2,r2,-1
  831010:	1900004c 	andi	r4,r3,1
  831014:	1886703a 	and	r3,r3,r2
  831018:	1806d07a 	srli	r3,r3,1
  83101c:	1906b03a 	or	r3,r3,r4
  831020:	003f9906 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  831024:	383f9226 	beq	r7,zero,830e70 <__alt_mem_epcs_flash_controller_0+0xff827e70>
  831028:	10803fcc 	andi	r2,r2,255
  83102c:	003f9106 	br	830e74 <__alt_mem_epcs_flash_controller_0+0xff827e74>
  831030:	213fffc4 	addi	r4,r4,-1
  831034:	203fbc26 	beq	r4,zero,830f28 <__alt_mem_epcs_flash_controller_0+0xff827f28>
  831038:	00803fc4 	movi	r2,255
  83103c:	80bfb21e 	bne	r16,r2,830f08 <__alt_mem_epcs_flash_controller_0+0xff827f08>
  831040:	003f9106 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  831044:	383f9026 	beq	r7,zero,830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  831048:	213fffc4 	addi	r4,r4,-1
  83104c:	203fe726 	beq	r4,zero,830fec <__alt_mem_epcs_flash_controller_0+0xff827fec>
  831050:	01403fc4 	movi	r5,255
  831054:	817fdd1e 	bne	r16,r5,830fcc <__alt_mem_epcs_flash_controller_0+0xff827fcc>
  831058:	003f8b06 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  83105c:	2000221e 	bne	r4,zero,8310e8 <__subsf3+0x2c4>
  831060:	81000044 	addi	r4,r16,1
  831064:	21003fcc 	andi	r4,r4,255
  831068:	01400044 	movi	r5,1
  83106c:	2900470e 	bge	r5,r4,83118c <__subsf3+0x368>
  831070:	19e5c83a 	sub	r18,r3,r7
  831074:	9141002c 	andhi	r5,r18,1024
  831078:	28002d26 	beq	r5,zero,831130 <__subsf3+0x30c>
  83107c:	38e5c83a 	sub	r18,r7,r3
  831080:	1023883a 	mov	r17,r2
  831084:	003fae06 	br	830f40 <__alt_mem_epcs_flash_controller_0+0xff827f40>
  831088:	8880004c 	andi	r2,r17,1
  83108c:	043fffc4 	movi	r16,-1
  831090:	000b883a 	mov	r5,zero
  831094:	003f8a06 	br	830ec0 <__alt_mem_epcs_flash_controller_0+0xff827ec0>
  831098:	00ff0034 	movhi	r3,64512
  83109c:	18ffffc4 	addi	r3,r3,-1
  8310a0:	80a1c83a 	sub	r16,r16,r2
  8310a4:	90c6703a 	and	r3,r18,r3
  8310a8:	003f7706 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  8310ac:	2000431e 	bne	r4,zero,8311bc <__subsf3+0x398>
  8310b0:	81000044 	addi	r4,r16,1
  8310b4:	21803fcc 	andi	r6,r4,255
  8310b8:	01400044 	movi	r5,1
  8310bc:	2980280e 	bge	r5,r6,831160 <__subsf3+0x33c>
  8310c0:	01403fc4 	movi	r5,255
  8310c4:	21402326 	beq	r4,r5,831154 <__subsf3+0x330>
  8310c8:	19c7883a 	add	r3,r3,r7
  8310cc:	1806d07a 	srli	r3,r3,1
  8310d0:	2021883a 	mov	r16,r4
  8310d4:	003f6c06 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  8310d8:	1023883a 	mov	r17,r2
  8310dc:	003fa906 	br	830f84 <__alt_mem_epcs_flash_controller_0+0xff827f84>
  8310e0:	01c00044 	movi	r7,1
  8310e4:	003f9006 	br	830f28 <__alt_mem_epcs_flash_controller_0+0xff827f28>
  8310e8:	8000151e 	bne	r16,zero,831140 <__subsf3+0x31c>
  8310ec:	18002f26 	beq	r3,zero,8311ac <__subsf3+0x388>
  8310f0:	0108303a 	nor	r4,zero,r4
  8310f4:	20000a26 	beq	r4,zero,831120 <__subsf3+0x2fc>
  8310f8:	01403fc4 	movi	r5,255
  8310fc:	31402b26 	beq	r6,r5,8311ac <__subsf3+0x388>
  831100:	014006c4 	movi	r5,27
  831104:	29006e16 	blt	r5,r4,8312c0 <__subsf3+0x49c>
  831108:	01400804 	movi	r5,32
  83110c:	290bc83a 	sub	r5,r5,r4
  831110:	194a983a 	sll	r5,r3,r5
  831114:	1908d83a 	srl	r4,r3,r4
  831118:	2806c03a 	cmpne	r3,r5,zero
  83111c:	20c6b03a 	or	r3,r4,r3
  831120:	38c7c83a 	sub	r3,r7,r3
  831124:	3021883a 	mov	r16,r6
  831128:	1023883a 	mov	r17,r2
  83112c:	003f7f06 	br	830f2c <__alt_mem_epcs_flash_controller_0+0xff827f2c>
  831130:	903f831e 	bne	r18,zero,830f40 <__alt_mem_epcs_flash_controller_0+0xff827f40>
  831134:	0005883a 	mov	r2,zero
  831138:	0021883a 	mov	r16,zero
  83113c:	003f9a06 	br	830fa8 <__alt_mem_epcs_flash_controller_0+0xff827fa8>
  831140:	01403fc4 	movi	r5,255
  831144:	31401926 	beq	r6,r5,8311ac <__subsf3+0x388>
  831148:	0109c83a 	sub	r4,zero,r4
  83114c:	18c10034 	orhi	r3,r3,1024
  831150:	003feb06 	br	831100 <__alt_mem_epcs_flash_controller_0+0xff828100>
  831154:	043fffc4 	movi	r16,-1
  831158:	000b883a 	mov	r5,zero
  83115c:	003f5806 	br	830ec0 <__alt_mem_epcs_flash_controller_0+0xff827ec0>
  831160:	8000481e 	bne	r16,zero,831284 <__subsf3+0x460>
  831164:	18006226 	beq	r3,zero,8312f0 <__subsf3+0x4cc>
  831168:	383f4726 	beq	r7,zero,830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  83116c:	19c7883a 	add	r3,r3,r7
  831170:	1881002c 	andhi	r2,r3,1024
  831174:	103f8326 	beq	r2,zero,830f84 <__alt_mem_epcs_flash_controller_0+0xff827f84>
  831178:	00bf0034 	movhi	r2,64512
  83117c:	10bfffc4 	addi	r2,r2,-1
  831180:	2821883a 	mov	r16,r5
  831184:	1886703a 	and	r3,r3,r2
  831188:	003f3f06 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  83118c:	80001c1e 	bne	r16,zero,831200 <__subsf3+0x3dc>
  831190:	1800261e 	bne	r3,zero,83122c <__subsf3+0x408>
  831194:	38004c26 	beq	r7,zero,8312c8 <__subsf3+0x4a4>
  831198:	3807883a 	mov	r3,r7
  83119c:	1023883a 	mov	r17,r2
  8311a0:	003f3906 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  8311a4:	01c00044 	movi	r7,1
  8311a8:	003f9006 	br	830fec <__alt_mem_epcs_flash_controller_0+0xff827fec>
  8311ac:	3807883a 	mov	r3,r7
  8311b0:	3021883a 	mov	r16,r6
  8311b4:	1023883a 	mov	r17,r2
  8311b8:	003f3306 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  8311bc:	8000161e 	bne	r16,zero,831218 <__subsf3+0x3f4>
  8311c0:	18002d26 	beq	r3,zero,831278 <__subsf3+0x454>
  8311c4:	0108303a 	nor	r4,zero,r4
  8311c8:	20000a26 	beq	r4,zero,8311f4 <__subsf3+0x3d0>
  8311cc:	01403fc4 	movi	r5,255
  8311d0:	31402926 	beq	r6,r5,831278 <__subsf3+0x454>
  8311d4:	014006c4 	movi	r5,27
  8311d8:	29004716 	blt	r5,r4,8312f8 <__subsf3+0x4d4>
  8311dc:	01400804 	movi	r5,32
  8311e0:	290bc83a 	sub	r5,r5,r4
  8311e4:	194a983a 	sll	r5,r3,r5
  8311e8:	1908d83a 	srl	r4,r3,r4
  8311ec:	2806c03a 	cmpne	r3,r5,zero
  8311f0:	20c6b03a 	or	r3,r4,r3
  8311f4:	19c7883a 	add	r3,r3,r7
  8311f8:	3021883a 	mov	r16,r6
  8311fc:	003f7c06 	br	830ff0 <__alt_mem_epcs_flash_controller_0+0xff827ff0>
  831200:	1800111e 	bne	r3,zero,831248 <__subsf3+0x424>
  831204:	38003326 	beq	r7,zero,8312d4 <__subsf3+0x4b0>
  831208:	3807883a 	mov	r3,r7
  83120c:	1023883a 	mov	r17,r2
  831210:	04003fc4 	movi	r16,255
  831214:	003f1c06 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  831218:	01403fc4 	movi	r5,255
  83121c:	31401626 	beq	r6,r5,831278 <__subsf3+0x454>
  831220:	0109c83a 	sub	r4,zero,r4
  831224:	18c10034 	orhi	r3,r3,1024
  831228:	003fea06 	br	8311d4 <__alt_mem_epcs_flash_controller_0+0xff8281d4>
  83122c:	383f1626 	beq	r7,zero,830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  831230:	19c9c83a 	sub	r4,r3,r7
  831234:	2141002c 	andhi	r5,r4,1024
  831238:	283f5026 	beq	r5,zero,830f7c <__alt_mem_epcs_flash_controller_0+0xff827f7c>
  83123c:	38c7c83a 	sub	r3,r7,r3
  831240:	1023883a 	mov	r17,r2
  831244:	003f1006 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  831248:	38001b26 	beq	r7,zero,8312b8 <__subsf3+0x494>
  83124c:	1806d0fa 	srli	r3,r3,3
  831250:	1900102c 	andhi	r4,r3,64
  831254:	20000526 	beq	r4,zero,83126c <__subsf3+0x448>
  831258:	380ed0fa 	srli	r7,r7,3
  83125c:	3900102c 	andhi	r4,r7,64
  831260:	2000021e 	bne	r4,zero,83126c <__subsf3+0x448>
  831264:	3807883a 	mov	r3,r7
  831268:	1023883a 	mov	r17,r2
  83126c:	180690fa 	slli	r3,r3,3
  831270:	04003fc4 	movi	r16,255
  831274:	003f0406 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  831278:	3807883a 	mov	r3,r7
  83127c:	3021883a 	mov	r16,r6
  831280:	003f0106 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  831284:	18001726 	beq	r3,zero,8312e4 <__subsf3+0x4c0>
  831288:	38000b26 	beq	r7,zero,8312b8 <__subsf3+0x494>
  83128c:	1806d0fa 	srli	r3,r3,3
  831290:	1900102c 	andhi	r4,r3,64
  831294:	20000426 	beq	r4,zero,8312a8 <__subsf3+0x484>
  831298:	380ed0fa 	srli	r7,r7,3
  83129c:	3900102c 	andhi	r4,r7,64
  8312a0:	2000011e 	bne	r4,zero,8312a8 <__subsf3+0x484>
  8312a4:	3807883a 	mov	r3,r7
  8312a8:	180690fa 	slli	r3,r3,3
  8312ac:	1023883a 	mov	r17,r2
  8312b0:	04003fc4 	movi	r16,255
  8312b4:	003ef406 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  8312b8:	04003fc4 	movi	r16,255
  8312bc:	003ef206 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  8312c0:	00c00044 	movi	r3,1
  8312c4:	003f9606 	br	831120 <__alt_mem_epcs_flash_controller_0+0xff828120>
  8312c8:	000b883a 	mov	r5,zero
  8312cc:	0005883a 	mov	r2,zero
  8312d0:	003f3506 	br	830fa8 <__alt_mem_epcs_flash_controller_0+0xff827fa8>
  8312d4:	01402034 	movhi	r5,128
  8312d8:	297fffc4 	addi	r5,r5,-1
  8312dc:	0005883a 	mov	r2,zero
  8312e0:	003f2f06 	br	830fa0 <__alt_mem_epcs_flash_controller_0+0xff827fa0>
  8312e4:	3807883a 	mov	r3,r7
  8312e8:	04003fc4 	movi	r16,255
  8312ec:	003ee606 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  8312f0:	3807883a 	mov	r3,r7
  8312f4:	003ee406 	br	830e88 <__alt_mem_epcs_flash_controller_0+0xff827e88>
  8312f8:	00c00044 	movi	r3,1
  8312fc:	003fbd06 	br	8311f4 <__alt_mem_epcs_flash_controller_0+0xff8281f4>
  831300:	0005883a 	mov	r2,zero
  831304:	003f2806 	br	830fa8 <__alt_mem_epcs_flash_controller_0+0xff827fa8>

00831308 <__fixsfsi>:
  831308:	200ad5fa 	srli	r5,r4,23
  83130c:	00c02034 	movhi	r3,128
  831310:	18ffffc4 	addi	r3,r3,-1
  831314:	29403fcc 	andi	r5,r5,255
  831318:	00801f84 	movi	r2,126
  83131c:	1906703a 	and	r3,r3,r4
  831320:	2008d7fa 	srli	r4,r4,31
  831324:	11400e0e 	bge	r2,r5,831360 <__fixsfsi+0x58>
  831328:	00802744 	movi	r2,157
  83132c:	11400816 	blt	r2,r5,831350 <__fixsfsi+0x48>
  831330:	00802544 	movi	r2,149
  831334:	18c02034 	orhi	r3,r3,128
  831338:	11400b0e 	bge	r2,r5,831368 <__fixsfsi+0x60>
  83133c:	28bfda84 	addi	r2,r5,-150
  831340:	1884983a 	sll	r2,r3,r2
  831344:	20000726 	beq	r4,zero,831364 <__fixsfsi+0x5c>
  831348:	0085c83a 	sub	r2,zero,r2
  83134c:	f800283a 	ret
  831350:	00a00034 	movhi	r2,32768
  831354:	10bfffc4 	addi	r2,r2,-1
  831358:	2085883a 	add	r2,r4,r2
  83135c:	f800283a 	ret
  831360:	0005883a 	mov	r2,zero
  831364:	f800283a 	ret
  831368:	00802584 	movi	r2,150
  83136c:	1145c83a 	sub	r2,r2,r5
  831370:	1884d83a 	srl	r2,r3,r2
  831374:	003ff306 	br	831344 <__alt_mem_epcs_flash_controller_0+0xff828344>

00831378 <__floatsisf>:
  831378:	defffd04 	addi	sp,sp,-12
  83137c:	dfc00215 	stw	ra,8(sp)
  831380:	dc400115 	stw	r17,4(sp)
  831384:	dc000015 	stw	r16,0(sp)
  831388:	20003526 	beq	r4,zero,831460 <__floatsisf+0xe8>
  83138c:	2021883a 	mov	r16,r4
  831390:	2022d7fa 	srli	r17,r4,31
  831394:	20003616 	blt	r4,zero,831470 <__floatsisf+0xf8>
  831398:	8009883a 	mov	r4,r16
  83139c:	0831f580 	call	831f58 <__clzsi2>
  8313a0:	00c02784 	movi	r3,158
  8313a4:	1887c83a 	sub	r3,r3,r2
  8313a8:	01002584 	movi	r4,150
  8313ac:	20c01416 	blt	r4,r3,831400 <__floatsisf+0x88>
  8313b0:	20c9c83a 	sub	r4,r4,r3
  8313b4:	8120983a 	sll	r16,r16,r4
  8313b8:	00802034 	movhi	r2,128
  8313bc:	10bfffc4 	addi	r2,r2,-1
  8313c0:	8809883a 	mov	r4,r17
  8313c4:	80a0703a 	and	r16,r16,r2
  8313c8:	18803fcc 	andi	r2,r3,255
  8313cc:	100695fa 	slli	r3,r2,23
  8313d0:	20803fcc 	andi	r2,r4,255
  8313d4:	100897fa 	slli	r4,r2,31
  8313d8:	00802034 	movhi	r2,128
  8313dc:	10bfffc4 	addi	r2,r2,-1
  8313e0:	8084703a 	and	r2,r16,r2
  8313e4:	10c4b03a 	or	r2,r2,r3
  8313e8:	1104b03a 	or	r2,r2,r4
  8313ec:	dfc00217 	ldw	ra,8(sp)
  8313f0:	dc400117 	ldw	r17,4(sp)
  8313f4:	dc000017 	ldw	r16,0(sp)
  8313f8:	dec00304 	addi	sp,sp,12
  8313fc:	f800283a 	ret
  831400:	01002644 	movi	r4,153
  831404:	20c01c16 	blt	r4,r3,831478 <__floatsisf+0x100>
  831408:	20c9c83a 	sub	r4,r4,r3
  83140c:	8120983a 	sll	r16,r16,r4
  831410:	013f0034 	movhi	r4,64512
  831414:	213fffc4 	addi	r4,r4,-1
  831418:	814001cc 	andi	r5,r16,7
  83141c:	8108703a 	and	r4,r16,r4
  831420:	28000426 	beq	r5,zero,831434 <__floatsisf+0xbc>
  831424:	840003cc 	andi	r16,r16,15
  831428:	01400104 	movi	r5,4
  83142c:	81400126 	beq	r16,r5,831434 <__floatsisf+0xbc>
  831430:	2149883a 	add	r4,r4,r5
  831434:	2141002c 	andhi	r5,r4,1024
  831438:	28000526 	beq	r5,zero,831450 <__floatsisf+0xd8>
  83143c:	00c027c4 	movi	r3,159
  831440:	1887c83a 	sub	r3,r3,r2
  831444:	00bf0034 	movhi	r2,64512
  831448:	10bfffc4 	addi	r2,r2,-1
  83144c:	2088703a 	and	r4,r4,r2
  831450:	202091ba 	slli	r16,r4,6
  831454:	8809883a 	mov	r4,r17
  831458:	8020d27a 	srli	r16,r16,9
  83145c:	003fda06 	br	8313c8 <__alt_mem_epcs_flash_controller_0+0xff8283c8>
  831460:	0009883a 	mov	r4,zero
  831464:	0007883a 	mov	r3,zero
  831468:	0021883a 	mov	r16,zero
  83146c:	003fd606 	br	8313c8 <__alt_mem_epcs_flash_controller_0+0xff8283c8>
  831470:	0121c83a 	sub	r16,zero,r4
  831474:	003fc806 	br	831398 <__alt_mem_epcs_flash_controller_0+0xff828398>
  831478:	01002e44 	movi	r4,185
  83147c:	20c9c83a 	sub	r4,r4,r3
  831480:	01400144 	movi	r5,5
  831484:	8108983a 	sll	r4,r16,r4
  831488:	288bc83a 	sub	r5,r5,r2
  83148c:	8160d83a 	srl	r16,r16,r5
  831490:	2008c03a 	cmpne	r4,r4,zero
  831494:	8120b03a 	or	r16,r16,r4
  831498:	003fdd06 	br	831410 <__alt_mem_epcs_flash_controller_0+0xff828410>

0083149c <__muldf3>:
  83149c:	deffee04 	addi	sp,sp,-72
  8314a0:	dd000c15 	stw	r20,48(sp)
  8314a4:	2828d53a 	srli	r20,r5,20
  8314a8:	ddc00f15 	stw	r23,60(sp)
  8314ac:	282ed7fa 	srli	r23,r5,31
  8314b0:	dc000815 	stw	r16,32(sp)
  8314b4:	04000434 	movhi	r16,16
  8314b8:	dcc00b15 	stw	r19,44(sp)
  8314bc:	843fffc4 	addi	r16,r16,-1
  8314c0:	dfc01115 	stw	ra,68(sp)
  8314c4:	df001015 	stw	fp,64(sp)
  8314c8:	dd800e15 	stw	r22,56(sp)
  8314cc:	dd400d15 	stw	r21,52(sp)
  8314d0:	dc800a15 	stw	r18,40(sp)
  8314d4:	dc400915 	stw	r17,36(sp)
  8314d8:	a501ffcc 	andi	r20,r20,2047
  8314dc:	2c20703a 	and	r16,r5,r16
  8314e0:	b827883a 	mov	r19,r23
  8314e4:	ba403fcc 	andi	r9,r23,255
  8314e8:	a0006026 	beq	r20,zero,83166c <__muldf3+0x1d0>
  8314ec:	0081ffc4 	movi	r2,2047
  8314f0:	202d883a 	mov	r22,r4
  8314f4:	a0803626 	beq	r20,r2,8315d0 <__muldf3+0x134>
  8314f8:	84000434 	orhi	r16,r16,16
  8314fc:	200ad77a 	srli	r5,r4,29
  831500:	800490fa 	slli	r2,r16,3
  831504:	202c90fa 	slli	r22,r4,3
  831508:	a53f0044 	addi	r20,r20,-1023
  83150c:	28a0b03a 	or	r16,r5,r2
  831510:	002b883a 	mov	r21,zero
  831514:	000b883a 	mov	r5,zero
  831518:	3804d53a 	srli	r2,r7,20
  83151c:	3838d7fa 	srli	fp,r7,31
  831520:	04400434 	movhi	r17,16
  831524:	8c7fffc4 	addi	r17,r17,-1
  831528:	1081ffcc 	andi	r2,r2,2047
  83152c:	3025883a 	mov	r18,r6
  831530:	3c62703a 	and	r17,r7,r17
  831534:	e2803fcc 	andi	r10,fp,255
  831538:	10006d26 	beq	r2,zero,8316f0 <__muldf3+0x254>
  83153c:	00c1ffc4 	movi	r3,2047
  831540:	10c06526 	beq	r2,r3,8316d8 <__muldf3+0x23c>
  831544:	8c400434 	orhi	r17,r17,16
  831548:	300ed77a 	srli	r7,r6,29
  83154c:	880690fa 	slli	r3,r17,3
  831550:	302490fa 	slli	r18,r6,3
  831554:	10bf0044 	addi	r2,r2,-1023
  831558:	38e2b03a 	or	r17,r7,r3
  83155c:	000f883a 	mov	r7,zero
  831560:	a087883a 	add	r3,r20,r2
  831564:	010003c4 	movi	r4,15
  831568:	3d44b03a 	or	r2,r7,r21
  83156c:	e5ccf03a 	xor	r6,fp,r23
  831570:	1a000044 	addi	r8,r3,1
  831574:	20809b36 	bltu	r4,r2,8317e4 <__muldf3+0x348>
  831578:	100490ba 	slli	r2,r2,2
  83157c:	010020f4 	movhi	r4,131
  831580:	21056404 	addi	r4,r4,5520
  831584:	1105883a 	add	r2,r2,r4
  831588:	10800017 	ldw	r2,0(r2)
  83158c:	1000683a 	jmp	r2
  831590:	008317e4 	muli	r2,zero,3167
  831594:	008315f0 	cmpltui	r2,zero,3159
  831598:	008315f0 	cmpltui	r2,zero,3159
  83159c:	008315ec 	andhi	r2,zero,3159
  8315a0:	008317c0 	call	8317c <OSCtxSw_SWITCH_PC+0x8313c>
  8315a4:	008317c0 	call	8317c <OSCtxSw_SWITCH_PC+0x8313c>
  8315a8:	008317a8 	cmpgeui	r2,zero,3166
  8315ac:	008315ec 	andhi	r2,zero,3159
  8315b0:	008317c0 	call	8317c <OSCtxSw_SWITCH_PC+0x8313c>
  8315b4:	008317a8 	cmpgeui	r2,zero,3166
  8315b8:	008317c0 	call	8317c <OSCtxSw_SWITCH_PC+0x8313c>
  8315bc:	008315ec 	andhi	r2,zero,3159
  8315c0:	008317d0 	cmplti	r2,zero,3167
  8315c4:	008317d0 	cmplti	r2,zero,3167
  8315c8:	008317d0 	cmplti	r2,zero,3167
  8315cc:	00831b30 	cmpltui	r2,zero,3180
  8315d0:	2404b03a 	or	r2,r4,r16
  8315d4:	1000711e 	bne	r2,zero,83179c <__muldf3+0x300>
  8315d8:	05400204 	movi	r21,8
  8315dc:	0021883a 	mov	r16,zero
  8315e0:	002d883a 	mov	r22,zero
  8315e4:	01400084 	movi	r5,2
  8315e8:	003fcb06 	br	831518 <__alt_mem_epcs_flash_controller_0+0xff828518>
  8315ec:	500d883a 	mov	r6,r10
  8315f0:	00800084 	movi	r2,2
  8315f4:	38805926 	beq	r7,r2,83175c <__muldf3+0x2c0>
  8315f8:	008000c4 	movi	r2,3
  8315fc:	3881bb26 	beq	r7,r2,831cec <__muldf3+0x850>
  831600:	00800044 	movi	r2,1
  831604:	3881961e 	bne	r7,r2,831c60 <__muldf3+0x7c4>
  831608:	3027883a 	mov	r19,r6
  83160c:	0005883a 	mov	r2,zero
  831610:	0021883a 	mov	r16,zero
  831614:	002d883a 	mov	r22,zero
  831618:	1004953a 	slli	r2,r2,20
  83161c:	98c03fcc 	andi	r3,r19,255
  831620:	04400434 	movhi	r17,16
  831624:	8c7fffc4 	addi	r17,r17,-1
  831628:	180697fa 	slli	r3,r3,31
  83162c:	8460703a 	and	r16,r16,r17
  831630:	80a0b03a 	or	r16,r16,r2
  831634:	80c6b03a 	or	r3,r16,r3
  831638:	b005883a 	mov	r2,r22
  83163c:	dfc01117 	ldw	ra,68(sp)
  831640:	df001017 	ldw	fp,64(sp)
  831644:	ddc00f17 	ldw	r23,60(sp)
  831648:	dd800e17 	ldw	r22,56(sp)
  83164c:	dd400d17 	ldw	r21,52(sp)
  831650:	dd000c17 	ldw	r20,48(sp)
  831654:	dcc00b17 	ldw	r19,44(sp)
  831658:	dc800a17 	ldw	r18,40(sp)
  83165c:	dc400917 	ldw	r17,36(sp)
  831660:	dc000817 	ldw	r16,32(sp)
  831664:	dec01204 	addi	sp,sp,72
  831668:	f800283a 	ret
  83166c:	2404b03a 	or	r2,r4,r16
  831670:	202b883a 	mov	r21,r4
  831674:	10004426 	beq	r2,zero,831788 <__muldf3+0x2ec>
  831678:	80015126 	beq	r16,zero,831bc0 <__muldf3+0x724>
  83167c:	8009883a 	mov	r4,r16
  831680:	d9800715 	stw	r6,28(sp)
  831684:	d9c00215 	stw	r7,8(sp)
  831688:	da400415 	stw	r9,16(sp)
  83168c:	0831f580 	call	831f58 <__clzsi2>
  831690:	d9800717 	ldw	r6,28(sp)
  831694:	d9c00217 	ldw	r7,8(sp)
  831698:	da400417 	ldw	r9,16(sp)
  83169c:	113ffd44 	addi	r4,r2,-11
  8316a0:	00c00704 	movi	r3,28
  8316a4:	19014216 	blt	r3,r4,831bb0 <__muldf3+0x714>
  8316a8:	00c00744 	movi	r3,29
  8316ac:	15bffe04 	addi	r22,r2,-8
  8316b0:	1907c83a 	sub	r3,r3,r4
  8316b4:	85a0983a 	sll	r16,r16,r22
  8316b8:	a8c6d83a 	srl	r3,r21,r3
  8316bc:	adac983a 	sll	r22,r21,r22
  8316c0:	1c20b03a 	or	r16,r3,r16
  8316c4:	1080fcc4 	addi	r2,r2,1011
  8316c8:	00a9c83a 	sub	r20,zero,r2
  8316cc:	002b883a 	mov	r21,zero
  8316d0:	000b883a 	mov	r5,zero
  8316d4:	003f9006 	br	831518 <__alt_mem_epcs_flash_controller_0+0xff828518>
  8316d8:	3446b03a 	or	r3,r6,r17
  8316dc:	1800281e 	bne	r3,zero,831780 <__muldf3+0x2e4>
  8316e0:	0023883a 	mov	r17,zero
  8316e4:	0025883a 	mov	r18,zero
  8316e8:	01c00084 	movi	r7,2
  8316ec:	003f9c06 	br	831560 <__alt_mem_epcs_flash_controller_0+0xff828560>
  8316f0:	3446b03a 	or	r3,r6,r17
  8316f4:	18001e26 	beq	r3,zero,831770 <__muldf3+0x2d4>
  8316f8:	88012126 	beq	r17,zero,831b80 <__muldf3+0x6e4>
  8316fc:	8809883a 	mov	r4,r17
  831700:	d9400215 	stw	r5,8(sp)
  831704:	d9800715 	stw	r6,28(sp)
  831708:	da400415 	stw	r9,16(sp)
  83170c:	da800315 	stw	r10,12(sp)
  831710:	0831f580 	call	831f58 <__clzsi2>
  831714:	d9400217 	ldw	r5,8(sp)
  831718:	d9800717 	ldw	r6,28(sp)
  83171c:	da400417 	ldw	r9,16(sp)
  831720:	da800317 	ldw	r10,12(sp)
  831724:	113ffd44 	addi	r4,r2,-11
  831728:	00c00704 	movi	r3,28
  83172c:	19011016 	blt	r3,r4,831b70 <__muldf3+0x6d4>
  831730:	00c00744 	movi	r3,29
  831734:	14bffe04 	addi	r18,r2,-8
  831738:	1907c83a 	sub	r3,r3,r4
  83173c:	8ca2983a 	sll	r17,r17,r18
  831740:	30c6d83a 	srl	r3,r6,r3
  831744:	34a4983a 	sll	r18,r6,r18
  831748:	1c62b03a 	or	r17,r3,r17
  83174c:	1080fcc4 	addi	r2,r2,1011
  831750:	0085c83a 	sub	r2,zero,r2
  831754:	000f883a 	mov	r7,zero
  831758:	003f8106 	br	831560 <__alt_mem_epcs_flash_controller_0+0xff828560>
  83175c:	3027883a 	mov	r19,r6
  831760:	0081ffc4 	movi	r2,2047
  831764:	0021883a 	mov	r16,zero
  831768:	002d883a 	mov	r22,zero
  83176c:	003faa06 	br	831618 <__alt_mem_epcs_flash_controller_0+0xff828618>
  831770:	0023883a 	mov	r17,zero
  831774:	0025883a 	mov	r18,zero
  831778:	01c00044 	movi	r7,1
  83177c:	003f7806 	br	831560 <__alt_mem_epcs_flash_controller_0+0xff828560>
  831780:	01c000c4 	movi	r7,3
  831784:	003f7606 	br	831560 <__alt_mem_epcs_flash_controller_0+0xff828560>
  831788:	05400104 	movi	r21,4
  83178c:	0021883a 	mov	r16,zero
  831790:	002d883a 	mov	r22,zero
  831794:	01400044 	movi	r5,1
  831798:	003f5f06 	br	831518 <__alt_mem_epcs_flash_controller_0+0xff828518>
  83179c:	05400304 	movi	r21,12
  8317a0:	014000c4 	movi	r5,3
  8317a4:	003f5c06 	br	831518 <__alt_mem_epcs_flash_controller_0+0xff828518>
  8317a8:	04000434 	movhi	r16,16
  8317ac:	0027883a 	mov	r19,zero
  8317b0:	843fffc4 	addi	r16,r16,-1
  8317b4:	05bfffc4 	movi	r22,-1
  8317b8:	0081ffc4 	movi	r2,2047
  8317bc:	003f9606 	br	831618 <__alt_mem_epcs_flash_controller_0+0xff828618>
  8317c0:	8023883a 	mov	r17,r16
  8317c4:	b025883a 	mov	r18,r22
  8317c8:	280f883a 	mov	r7,r5
  8317cc:	003f8806 	br	8315f0 <__alt_mem_epcs_flash_controller_0+0xff8285f0>
  8317d0:	8023883a 	mov	r17,r16
  8317d4:	b025883a 	mov	r18,r22
  8317d8:	480d883a 	mov	r6,r9
  8317dc:	280f883a 	mov	r7,r5
  8317e0:	003f8306 	br	8315f0 <__alt_mem_epcs_flash_controller_0+0xff8285f0>
  8317e4:	b026d43a 	srli	r19,r22,16
  8317e8:	902ed43a 	srli	r23,r18,16
  8317ec:	b5bfffcc 	andi	r22,r22,65535
  8317f0:	94bfffcc 	andi	r18,r18,65535
  8317f4:	b00b883a 	mov	r5,r22
  8317f8:	9009883a 	mov	r4,r18
  8317fc:	d8c00515 	stw	r3,20(sp)
  831800:	d9800715 	stw	r6,28(sp)
  831804:	da000615 	stw	r8,24(sp)
  831808:	08305040 	call	830504 <__mulsi3>
  83180c:	980b883a 	mov	r5,r19
  831810:	9009883a 	mov	r4,r18
  831814:	1029883a 	mov	r20,r2
  831818:	08305040 	call	830504 <__mulsi3>
  83181c:	b80b883a 	mov	r5,r23
  831820:	9809883a 	mov	r4,r19
  831824:	102b883a 	mov	r21,r2
  831828:	08305040 	call	830504 <__mulsi3>
  83182c:	b809883a 	mov	r4,r23
  831830:	b00b883a 	mov	r5,r22
  831834:	1039883a 	mov	fp,r2
  831838:	08305040 	call	830504 <__mulsi3>
  83183c:	a008d43a 	srli	r4,r20,16
  831840:	1545883a 	add	r2,r2,r21
  831844:	d8c00517 	ldw	r3,20(sp)
  831848:	2085883a 	add	r2,r4,r2
  83184c:	d9800717 	ldw	r6,28(sp)
  831850:	da000617 	ldw	r8,24(sp)
  831854:	1540022e 	bgeu	r2,r21,831860 <__muldf3+0x3c4>
  831858:	01000074 	movhi	r4,1
  83185c:	e139883a 	add	fp,fp,r4
  831860:	100e943a 	slli	r7,r2,16
  831864:	1004d43a 	srli	r2,r2,16
  831868:	882ad43a 	srli	r21,r17,16
  83186c:	a53fffcc 	andi	r20,r20,65535
  831870:	8c7fffcc 	andi	r17,r17,65535
  831874:	3d29883a 	add	r20,r7,r20
  831878:	b00b883a 	mov	r5,r22
  83187c:	8809883a 	mov	r4,r17
  831880:	d8c00515 	stw	r3,20(sp)
  831884:	d9800715 	stw	r6,28(sp)
  831888:	da000615 	stw	r8,24(sp)
  83188c:	dd000115 	stw	r20,4(sp)
  831890:	d8800015 	stw	r2,0(sp)
  831894:	08305040 	call	830504 <__mulsi3>
  831898:	980b883a 	mov	r5,r19
  83189c:	8809883a 	mov	r4,r17
  8318a0:	d8800215 	stw	r2,8(sp)
  8318a4:	08305040 	call	830504 <__mulsi3>
  8318a8:	9809883a 	mov	r4,r19
  8318ac:	a80b883a 	mov	r5,r21
  8318b0:	1029883a 	mov	r20,r2
  8318b4:	08305040 	call	830504 <__mulsi3>
  8318b8:	b00b883a 	mov	r5,r22
  8318bc:	a809883a 	mov	r4,r21
  8318c0:	d8800415 	stw	r2,16(sp)
  8318c4:	08305040 	call	830504 <__mulsi3>
  8318c8:	d9c00217 	ldw	r7,8(sp)
  8318cc:	1505883a 	add	r2,r2,r20
  8318d0:	d8c00517 	ldw	r3,20(sp)
  8318d4:	3826d43a 	srli	r19,r7,16
  8318d8:	d9800717 	ldw	r6,28(sp)
  8318dc:	da000617 	ldw	r8,24(sp)
  8318e0:	9885883a 	add	r2,r19,r2
  8318e4:	da400417 	ldw	r9,16(sp)
  8318e8:	1500022e 	bgeu	r2,r20,8318f4 <__muldf3+0x458>
  8318ec:	01000074 	movhi	r4,1
  8318f0:	4913883a 	add	r9,r9,r4
  8318f4:	1028d43a 	srli	r20,r2,16
  8318f8:	1004943a 	slli	r2,r2,16
  8318fc:	802cd43a 	srli	r22,r16,16
  831900:	843fffcc 	andi	r16,r16,65535
  831904:	3cffffcc 	andi	r19,r7,65535
  831908:	9009883a 	mov	r4,r18
  83190c:	800b883a 	mov	r5,r16
  831910:	a269883a 	add	r20,r20,r9
  831914:	d8c00515 	stw	r3,20(sp)
  831918:	d9800715 	stw	r6,28(sp)
  83191c:	da000615 	stw	r8,24(sp)
  831920:	14e7883a 	add	r19,r2,r19
  831924:	08305040 	call	830504 <__mulsi3>
  831928:	9009883a 	mov	r4,r18
  83192c:	b00b883a 	mov	r5,r22
  831930:	d8800315 	stw	r2,12(sp)
  831934:	08305040 	call	830504 <__mulsi3>
  831938:	b809883a 	mov	r4,r23
  83193c:	b00b883a 	mov	r5,r22
  831940:	d8800215 	stw	r2,8(sp)
  831944:	08305040 	call	830504 <__mulsi3>
  831948:	b80b883a 	mov	r5,r23
  83194c:	8009883a 	mov	r4,r16
  831950:	d8800415 	stw	r2,16(sp)
  831954:	08305040 	call	830504 <__mulsi3>
  831958:	da800317 	ldw	r10,12(sp)
  83195c:	d9c00217 	ldw	r7,8(sp)
  831960:	d9000017 	ldw	r4,0(sp)
  831964:	502ed43a 	srli	r23,r10,16
  831968:	11c5883a 	add	r2,r2,r7
  83196c:	24e5883a 	add	r18,r4,r19
  831970:	b885883a 	add	r2,r23,r2
  831974:	d8c00517 	ldw	r3,20(sp)
  831978:	d9800717 	ldw	r6,28(sp)
  83197c:	da000617 	ldw	r8,24(sp)
  831980:	da400417 	ldw	r9,16(sp)
  831984:	11c0022e 	bgeu	r2,r7,831990 <__muldf3+0x4f4>
  831988:	01000074 	movhi	r4,1
  83198c:	4913883a 	add	r9,r9,r4
  831990:	100ed43a 	srli	r7,r2,16
  831994:	1004943a 	slli	r2,r2,16
  831998:	55ffffcc 	andi	r23,r10,65535
  83199c:	3a53883a 	add	r9,r7,r9
  8319a0:	8809883a 	mov	r4,r17
  8319a4:	800b883a 	mov	r5,r16
  8319a8:	d8c00515 	stw	r3,20(sp)
  8319ac:	d9800715 	stw	r6,28(sp)
  8319b0:	da000615 	stw	r8,24(sp)
  8319b4:	da400415 	stw	r9,16(sp)
  8319b8:	15ef883a 	add	r23,r2,r23
  8319bc:	08305040 	call	830504 <__mulsi3>
  8319c0:	8809883a 	mov	r4,r17
  8319c4:	b00b883a 	mov	r5,r22
  8319c8:	d8800215 	stw	r2,8(sp)
  8319cc:	08305040 	call	830504 <__mulsi3>
  8319d0:	b00b883a 	mov	r5,r22
  8319d4:	a809883a 	mov	r4,r21
  8319d8:	d8800315 	stw	r2,12(sp)
  8319dc:	08305040 	call	830504 <__mulsi3>
  8319e0:	8009883a 	mov	r4,r16
  8319e4:	a80b883a 	mov	r5,r21
  8319e8:	1023883a 	mov	r17,r2
  8319ec:	08305040 	call	830504 <__mulsi3>
  8319f0:	d9c00217 	ldw	r7,8(sp)
  8319f4:	da800317 	ldw	r10,12(sp)
  8319f8:	d8c00517 	ldw	r3,20(sp)
  8319fc:	3808d43a 	srli	r4,r7,16
  831a00:	1285883a 	add	r2,r2,r10
  831a04:	d9800717 	ldw	r6,28(sp)
  831a08:	2085883a 	add	r2,r4,r2
  831a0c:	da000617 	ldw	r8,24(sp)
  831a10:	da400417 	ldw	r9,16(sp)
  831a14:	1280022e 	bgeu	r2,r10,831a20 <__muldf3+0x584>
  831a18:	01000074 	movhi	r4,1
  831a1c:	8923883a 	add	r17,r17,r4
  831a20:	1008943a 	slli	r4,r2,16
  831a24:	39ffffcc 	andi	r7,r7,65535
  831a28:	e4b9883a 	add	fp,fp,r18
  831a2c:	21cf883a 	add	r7,r4,r7
  831a30:	e4e7803a 	cmpltu	r19,fp,r19
  831a34:	3d0f883a 	add	r7,r7,r20
  831a38:	bf39883a 	add	fp,r23,fp
  831a3c:	99c9883a 	add	r4,r19,r7
  831a40:	e5ef803a 	cmpltu	r23,fp,r23
  831a44:	490b883a 	add	r5,r9,r4
  831a48:	1004d43a 	srli	r2,r2,16
  831a4c:	b965883a 	add	r18,r23,r5
  831a50:	24c9803a 	cmpltu	r4,r4,r19
  831a54:	3d29803a 	cmpltu	r20,r7,r20
  831a58:	a128b03a 	or	r20,r20,r4
  831a5c:	95ef803a 	cmpltu	r23,r18,r23
  831a60:	2a53803a 	cmpltu	r9,r5,r9
  831a64:	a0a9883a 	add	r20,r20,r2
  831a68:	4deeb03a 	or	r23,r9,r23
  831a6c:	a5ef883a 	add	r23,r20,r23
  831a70:	bc63883a 	add	r17,r23,r17
  831a74:	e004927a 	slli	r2,fp,9
  831a78:	d9000117 	ldw	r4,4(sp)
  831a7c:	882e927a 	slli	r23,r17,9
  831a80:	9022d5fa 	srli	r17,r18,23
  831a84:	e038d5fa 	srli	fp,fp,23
  831a88:	1104b03a 	or	r2,r2,r4
  831a8c:	9024927a 	slli	r18,r18,9
  831a90:	1004c03a 	cmpne	r2,r2,zero
  831a94:	bc62b03a 	or	r17,r23,r17
  831a98:	1738b03a 	or	fp,r2,fp
  831a9c:	8880402c 	andhi	r2,r17,256
  831aa0:	e4a4b03a 	or	r18,fp,r18
  831aa4:	10000726 	beq	r2,zero,831ac4 <__muldf3+0x628>
  831aa8:	9006d07a 	srli	r3,r18,1
  831aac:	880497fa 	slli	r2,r17,31
  831ab0:	9480004c 	andi	r18,r18,1
  831ab4:	8822d07a 	srli	r17,r17,1
  831ab8:	1ca4b03a 	or	r18,r3,r18
  831abc:	14a4b03a 	or	r18,r2,r18
  831ac0:	4007883a 	mov	r3,r8
  831ac4:	1880ffc4 	addi	r2,r3,1023
  831ac8:	0080460e 	bge	zero,r2,831be4 <__muldf3+0x748>
  831acc:	910001cc 	andi	r4,r18,7
  831ad0:	20000726 	beq	r4,zero,831af0 <__muldf3+0x654>
  831ad4:	910003cc 	andi	r4,r18,15
  831ad8:	01400104 	movi	r5,4
  831adc:	21400426 	beq	r4,r5,831af0 <__muldf3+0x654>
  831ae0:	9149883a 	add	r4,r18,r5
  831ae4:	24a5803a 	cmpltu	r18,r4,r18
  831ae8:	8ca3883a 	add	r17,r17,r18
  831aec:	2025883a 	mov	r18,r4
  831af0:	8900402c 	andhi	r4,r17,256
  831af4:	20000426 	beq	r4,zero,831b08 <__muldf3+0x66c>
  831af8:	18810004 	addi	r2,r3,1024
  831afc:	00ffc034 	movhi	r3,65280
  831b00:	18ffffc4 	addi	r3,r3,-1
  831b04:	88e2703a 	and	r17,r17,r3
  831b08:	00c1ff84 	movi	r3,2046
  831b0c:	18bf1316 	blt	r3,r2,83175c <__alt_mem_epcs_flash_controller_0+0xff82875c>
  831b10:	882c977a 	slli	r22,r17,29
  831b14:	9024d0fa 	srli	r18,r18,3
  831b18:	8822927a 	slli	r17,r17,9
  831b1c:	1081ffcc 	andi	r2,r2,2047
  831b20:	b4acb03a 	or	r22,r22,r18
  831b24:	8820d33a 	srli	r16,r17,12
  831b28:	3027883a 	mov	r19,r6
  831b2c:	003eba06 	br	831618 <__alt_mem_epcs_flash_controller_0+0xff828618>
  831b30:	8080022c 	andhi	r2,r16,8
  831b34:	10000926 	beq	r2,zero,831b5c <__muldf3+0x6c0>
  831b38:	8880022c 	andhi	r2,r17,8
  831b3c:	1000071e 	bne	r2,zero,831b5c <__muldf3+0x6c0>
  831b40:	00800434 	movhi	r2,16
  831b44:	8c000234 	orhi	r16,r17,8
  831b48:	10bfffc4 	addi	r2,r2,-1
  831b4c:	e027883a 	mov	r19,fp
  831b50:	80a0703a 	and	r16,r16,r2
  831b54:	902d883a 	mov	r22,r18
  831b58:	003f1706 	br	8317b8 <__alt_mem_epcs_flash_controller_0+0xff8287b8>
  831b5c:	00800434 	movhi	r2,16
  831b60:	84000234 	orhi	r16,r16,8
  831b64:	10bfffc4 	addi	r2,r2,-1
  831b68:	80a0703a 	and	r16,r16,r2
  831b6c:	003f1206 	br	8317b8 <__alt_mem_epcs_flash_controller_0+0xff8287b8>
  831b70:	147ff604 	addi	r17,r2,-40
  831b74:	3462983a 	sll	r17,r6,r17
  831b78:	0025883a 	mov	r18,zero
  831b7c:	003ef306 	br	83174c <__alt_mem_epcs_flash_controller_0+0xff82874c>
  831b80:	3009883a 	mov	r4,r6
  831b84:	d9400215 	stw	r5,8(sp)
  831b88:	d9800715 	stw	r6,28(sp)
  831b8c:	da400415 	stw	r9,16(sp)
  831b90:	da800315 	stw	r10,12(sp)
  831b94:	0831f580 	call	831f58 <__clzsi2>
  831b98:	10800804 	addi	r2,r2,32
  831b9c:	da800317 	ldw	r10,12(sp)
  831ba0:	da400417 	ldw	r9,16(sp)
  831ba4:	d9800717 	ldw	r6,28(sp)
  831ba8:	d9400217 	ldw	r5,8(sp)
  831bac:	003edd06 	br	831724 <__alt_mem_epcs_flash_controller_0+0xff828724>
  831bb0:	143ff604 	addi	r16,r2,-40
  831bb4:	ac20983a 	sll	r16,r21,r16
  831bb8:	002d883a 	mov	r22,zero
  831bbc:	003ec106 	br	8316c4 <__alt_mem_epcs_flash_controller_0+0xff8286c4>
  831bc0:	d9800715 	stw	r6,28(sp)
  831bc4:	d9c00215 	stw	r7,8(sp)
  831bc8:	da400415 	stw	r9,16(sp)
  831bcc:	0831f580 	call	831f58 <__clzsi2>
  831bd0:	10800804 	addi	r2,r2,32
  831bd4:	da400417 	ldw	r9,16(sp)
  831bd8:	d9c00217 	ldw	r7,8(sp)
  831bdc:	d9800717 	ldw	r6,28(sp)
  831be0:	003eae06 	br	83169c <__alt_mem_epcs_flash_controller_0+0xff82869c>
  831be4:	00c00044 	movi	r3,1
  831be8:	1887c83a 	sub	r3,r3,r2
  831bec:	01000e04 	movi	r4,56
  831bf0:	20fe8516 	blt	r4,r3,831608 <__alt_mem_epcs_flash_controller_0+0xff828608>
  831bf4:	010007c4 	movi	r4,31
  831bf8:	20c01b16 	blt	r4,r3,831c68 <__muldf3+0x7cc>
  831bfc:	00800804 	movi	r2,32
  831c00:	10c5c83a 	sub	r2,r2,r3
  831c04:	888a983a 	sll	r5,r17,r2
  831c08:	90c8d83a 	srl	r4,r18,r3
  831c0c:	9084983a 	sll	r2,r18,r2
  831c10:	88e2d83a 	srl	r17,r17,r3
  831c14:	2906b03a 	or	r3,r5,r4
  831c18:	1004c03a 	cmpne	r2,r2,zero
  831c1c:	1886b03a 	or	r3,r3,r2
  831c20:	188001cc 	andi	r2,r3,7
  831c24:	10000726 	beq	r2,zero,831c44 <__muldf3+0x7a8>
  831c28:	188003cc 	andi	r2,r3,15
  831c2c:	01000104 	movi	r4,4
  831c30:	11000426 	beq	r2,r4,831c44 <__muldf3+0x7a8>
  831c34:	1805883a 	mov	r2,r3
  831c38:	10c00104 	addi	r3,r2,4
  831c3c:	1885803a 	cmpltu	r2,r3,r2
  831c40:	88a3883a 	add	r17,r17,r2
  831c44:	8880202c 	andhi	r2,r17,128
  831c48:	10001c26 	beq	r2,zero,831cbc <__muldf3+0x820>
  831c4c:	3027883a 	mov	r19,r6
  831c50:	00800044 	movi	r2,1
  831c54:	0021883a 	mov	r16,zero
  831c58:	002d883a 	mov	r22,zero
  831c5c:	003e6e06 	br	831618 <__alt_mem_epcs_flash_controller_0+0xff828618>
  831c60:	4007883a 	mov	r3,r8
  831c64:	003f9706 	br	831ac4 <__alt_mem_epcs_flash_controller_0+0xff828ac4>
  831c68:	017ff844 	movi	r5,-31
  831c6c:	2885c83a 	sub	r2,r5,r2
  831c70:	888ad83a 	srl	r5,r17,r2
  831c74:	00800804 	movi	r2,32
  831c78:	18801a26 	beq	r3,r2,831ce4 <__muldf3+0x848>
  831c7c:	01001004 	movi	r4,64
  831c80:	20c7c83a 	sub	r3,r4,r3
  831c84:	88e2983a 	sll	r17,r17,r3
  831c88:	8ca4b03a 	or	r18,r17,r18
  831c8c:	9004c03a 	cmpne	r2,r18,zero
  831c90:	2884b03a 	or	r2,r5,r2
  831c94:	144001cc 	andi	r17,r2,7
  831c98:	88000d1e 	bne	r17,zero,831cd0 <__muldf3+0x834>
  831c9c:	0021883a 	mov	r16,zero
  831ca0:	102cd0fa 	srli	r22,r2,3
  831ca4:	3027883a 	mov	r19,r6
  831ca8:	0005883a 	mov	r2,zero
  831cac:	b46cb03a 	or	r22,r22,r17
  831cb0:	003e5906 	br	831618 <__alt_mem_epcs_flash_controller_0+0xff828618>
  831cb4:	1007883a 	mov	r3,r2
  831cb8:	0023883a 	mov	r17,zero
  831cbc:	8820927a 	slli	r16,r17,9
  831cc0:	1805883a 	mov	r2,r3
  831cc4:	8822977a 	slli	r17,r17,29
  831cc8:	8020d33a 	srli	r16,r16,12
  831ccc:	003ff406 	br	831ca0 <__alt_mem_epcs_flash_controller_0+0xff828ca0>
  831cd0:	10c003cc 	andi	r3,r2,15
  831cd4:	01000104 	movi	r4,4
  831cd8:	193ff626 	beq	r3,r4,831cb4 <__alt_mem_epcs_flash_controller_0+0xff828cb4>
  831cdc:	0023883a 	mov	r17,zero
  831ce0:	003fd506 	br	831c38 <__alt_mem_epcs_flash_controller_0+0xff828c38>
  831ce4:	0023883a 	mov	r17,zero
  831ce8:	003fe706 	br	831c88 <__alt_mem_epcs_flash_controller_0+0xff828c88>
  831cec:	00800434 	movhi	r2,16
  831cf0:	8c000234 	orhi	r16,r17,8
  831cf4:	10bfffc4 	addi	r2,r2,-1
  831cf8:	3027883a 	mov	r19,r6
  831cfc:	80a0703a 	and	r16,r16,r2
  831d00:	902d883a 	mov	r22,r18
  831d04:	003eac06 	br	8317b8 <__alt_mem_epcs_flash_controller_0+0xff8287b8>

00831d08 <__floatunsidf>:
  831d08:	defffe04 	addi	sp,sp,-8
  831d0c:	dc000015 	stw	r16,0(sp)
  831d10:	dfc00115 	stw	ra,4(sp)
  831d14:	2021883a 	mov	r16,r4
  831d18:	20002226 	beq	r4,zero,831da4 <__floatunsidf+0x9c>
  831d1c:	0831f580 	call	831f58 <__clzsi2>
  831d20:	01010784 	movi	r4,1054
  831d24:	2089c83a 	sub	r4,r4,r2
  831d28:	01810cc4 	movi	r6,1075
  831d2c:	310dc83a 	sub	r6,r6,r4
  831d30:	00c007c4 	movi	r3,31
  831d34:	1980120e 	bge	r3,r6,831d80 <__floatunsidf+0x78>
  831d38:	00c104c4 	movi	r3,1043
  831d3c:	1907c83a 	sub	r3,r3,r4
  831d40:	80ca983a 	sll	r5,r16,r3
  831d44:	00800434 	movhi	r2,16
  831d48:	10bfffc4 	addi	r2,r2,-1
  831d4c:	2101ffcc 	andi	r4,r4,2047
  831d50:	0021883a 	mov	r16,zero
  831d54:	288a703a 	and	r5,r5,r2
  831d58:	2008953a 	slli	r4,r4,20
  831d5c:	00c00434 	movhi	r3,16
  831d60:	18ffffc4 	addi	r3,r3,-1
  831d64:	28c6703a 	and	r3,r5,r3
  831d68:	8005883a 	mov	r2,r16
  831d6c:	1906b03a 	or	r3,r3,r4
  831d70:	dfc00117 	ldw	ra,4(sp)
  831d74:	dc000017 	ldw	r16,0(sp)
  831d78:	dec00204 	addi	sp,sp,8
  831d7c:	f800283a 	ret
  831d80:	00c002c4 	movi	r3,11
  831d84:	188bc83a 	sub	r5,r3,r2
  831d88:	814ad83a 	srl	r5,r16,r5
  831d8c:	00c00434 	movhi	r3,16
  831d90:	18ffffc4 	addi	r3,r3,-1
  831d94:	81a0983a 	sll	r16,r16,r6
  831d98:	2101ffcc 	andi	r4,r4,2047
  831d9c:	28ca703a 	and	r5,r5,r3
  831da0:	003fed06 	br	831d58 <__alt_mem_epcs_flash_controller_0+0xff828d58>
  831da4:	0009883a 	mov	r4,zero
  831da8:	000b883a 	mov	r5,zero
  831dac:	003fea06 	br	831d58 <__alt_mem_epcs_flash_controller_0+0xff828d58>

00831db0 <__truncdfsf2>:
  831db0:	2810d53a 	srli	r8,r5,20
  831db4:	01c00434 	movhi	r7,16
  831db8:	39ffffc4 	addi	r7,r7,-1
  831dbc:	29ce703a 	and	r7,r5,r7
  831dc0:	4201ffcc 	andi	r8,r8,2047
  831dc4:	380e90fa 	slli	r7,r7,3
  831dc8:	200cd77a 	srli	r6,r4,29
  831dcc:	42400044 	addi	r9,r8,1
  831dd0:	4a41ffcc 	andi	r9,r9,2047
  831dd4:	00c00044 	movi	r3,1
  831dd8:	280ad7fa 	srli	r5,r5,31
  831ddc:	31ceb03a 	or	r7,r6,r7
  831de0:	200490fa 	slli	r2,r4,3
  831de4:	1a40230e 	bge	r3,r9,831e74 <__truncdfsf2+0xc4>
  831de8:	40ff2004 	addi	r3,r8,-896
  831dec:	01803f84 	movi	r6,254
  831df0:	30c01516 	blt	r6,r3,831e48 <__truncdfsf2+0x98>
  831df4:	00c0380e 	bge	zero,r3,831ed8 <__truncdfsf2+0x128>
  831df8:	200c91ba 	slli	r6,r4,6
  831dfc:	380e90fa 	slli	r7,r7,3
  831e00:	1004d77a 	srli	r2,r2,29
  831e04:	300cc03a 	cmpne	r6,r6,zero
  831e08:	31ccb03a 	or	r6,r6,r7
  831e0c:	308cb03a 	or	r6,r6,r2
  831e10:	308001cc 	andi	r2,r6,7
  831e14:	10000426 	beq	r2,zero,831e28 <__truncdfsf2+0x78>
  831e18:	308003cc 	andi	r2,r6,15
  831e1c:	01000104 	movi	r4,4
  831e20:	11000126 	beq	r2,r4,831e28 <__truncdfsf2+0x78>
  831e24:	31800104 	addi	r6,r6,4
  831e28:	3081002c 	andhi	r2,r6,1024
  831e2c:	10001626 	beq	r2,zero,831e88 <__truncdfsf2+0xd8>
  831e30:	18c00044 	addi	r3,r3,1
  831e34:	00803fc4 	movi	r2,255
  831e38:	18800326 	beq	r3,r2,831e48 <__truncdfsf2+0x98>
  831e3c:	300c91ba 	slli	r6,r6,6
  831e40:	300cd27a 	srli	r6,r6,9
  831e44:	00000206 	br	831e50 <__truncdfsf2+0xa0>
  831e48:	00ffffc4 	movi	r3,-1
  831e4c:	000d883a 	mov	r6,zero
  831e50:	18c03fcc 	andi	r3,r3,255
  831e54:	180895fa 	slli	r4,r3,23
  831e58:	00c02034 	movhi	r3,128
  831e5c:	280a97fa 	slli	r5,r5,31
  831e60:	18ffffc4 	addi	r3,r3,-1
  831e64:	30c6703a 	and	r3,r6,r3
  831e68:	1906b03a 	or	r3,r3,r4
  831e6c:	1944b03a 	or	r2,r3,r5
  831e70:	f800283a 	ret
  831e74:	40000b1e 	bne	r8,zero,831ea4 <__truncdfsf2+0xf4>
  831e78:	388cb03a 	or	r6,r7,r2
  831e7c:	0007883a 	mov	r3,zero
  831e80:	30000426 	beq	r6,zero,831e94 <__truncdfsf2+0xe4>
  831e84:	01800144 	movi	r6,5
  831e88:	00803fc4 	movi	r2,255
  831e8c:	300cd0fa 	srli	r6,r6,3
  831e90:	18800a26 	beq	r3,r2,831ebc <__truncdfsf2+0x10c>
  831e94:	00802034 	movhi	r2,128
  831e98:	10bfffc4 	addi	r2,r2,-1
  831e9c:	308c703a 	and	r6,r6,r2
  831ea0:	003feb06 	br	831e50 <__alt_mem_epcs_flash_controller_0+0xff828e50>
  831ea4:	3888b03a 	or	r4,r7,r2
  831ea8:	203fe726 	beq	r4,zero,831e48 <__alt_mem_epcs_flash_controller_0+0xff828e48>
  831eac:	380c90fa 	slli	r6,r7,3
  831eb0:	00c03fc4 	movi	r3,255
  831eb4:	31808034 	orhi	r6,r6,512
  831eb8:	003fd506 	br	831e10 <__alt_mem_epcs_flash_controller_0+0xff828e10>
  831ebc:	303fe226 	beq	r6,zero,831e48 <__alt_mem_epcs_flash_controller_0+0xff828e48>
  831ec0:	00802034 	movhi	r2,128
  831ec4:	31801034 	orhi	r6,r6,64
  831ec8:	10bfffc4 	addi	r2,r2,-1
  831ecc:	00ffffc4 	movi	r3,-1
  831ed0:	308c703a 	and	r6,r6,r2
  831ed4:	003fde06 	br	831e50 <__alt_mem_epcs_flash_controller_0+0xff828e50>
  831ed8:	013ffa44 	movi	r4,-23
  831edc:	19000e16 	blt	r3,r4,831f18 <__truncdfsf2+0x168>
  831ee0:	01000784 	movi	r4,30
  831ee4:	20c9c83a 	sub	r4,r4,r3
  831ee8:	018007c4 	movi	r6,31
  831eec:	39c02034 	orhi	r7,r7,128
  831ef0:	31000b16 	blt	r6,r4,831f20 <__truncdfsf2+0x170>
  831ef4:	423f2084 	addi	r8,r8,-894
  831ef8:	120c983a 	sll	r6,r2,r8
  831efc:	3a0e983a 	sll	r7,r7,r8
  831f00:	1104d83a 	srl	r2,r2,r4
  831f04:	300cc03a 	cmpne	r6,r6,zero
  831f08:	31ceb03a 	or	r7,r6,r7
  831f0c:	388cb03a 	or	r6,r7,r2
  831f10:	0007883a 	mov	r3,zero
  831f14:	003fbe06 	br	831e10 <__alt_mem_epcs_flash_controller_0+0xff828e10>
  831f18:	0007883a 	mov	r3,zero
  831f1c:	003fd906 	br	831e84 <__alt_mem_epcs_flash_controller_0+0xff828e84>
  831f20:	01bfff84 	movi	r6,-2
  831f24:	30cdc83a 	sub	r6,r6,r3
  831f28:	00c00804 	movi	r3,32
  831f2c:	398cd83a 	srl	r6,r7,r6
  831f30:	20c00726 	beq	r4,r3,831f50 <__truncdfsf2+0x1a0>
  831f34:	423f2884 	addi	r8,r8,-862
  831f38:	3a0e983a 	sll	r7,r7,r8
  831f3c:	3884b03a 	or	r2,r7,r2
  831f40:	1004c03a 	cmpne	r2,r2,zero
  831f44:	118cb03a 	or	r6,r2,r6
  831f48:	0007883a 	mov	r3,zero
  831f4c:	003fb006 	br	831e10 <__alt_mem_epcs_flash_controller_0+0xff828e10>
  831f50:	000f883a 	mov	r7,zero
  831f54:	003ff906 	br	831f3c <__alt_mem_epcs_flash_controller_0+0xff828f3c>

00831f58 <__clzsi2>:
  831f58:	00bfffd4 	movui	r2,65535
  831f5c:	11000536 	bltu	r2,r4,831f74 <__clzsi2+0x1c>
  831f60:	00803fc4 	movi	r2,255
  831f64:	11000f36 	bltu	r2,r4,831fa4 <__clzsi2+0x4c>
  831f68:	00800804 	movi	r2,32
  831f6c:	0007883a 	mov	r3,zero
  831f70:	00000506 	br	831f88 <__clzsi2+0x30>
  831f74:	00804034 	movhi	r2,256
  831f78:	10bfffc4 	addi	r2,r2,-1
  831f7c:	11000c2e 	bgeu	r2,r4,831fb0 <__clzsi2+0x58>
  831f80:	00800204 	movi	r2,8
  831f84:	00c00604 	movi	r3,24
  831f88:	20c8d83a 	srl	r4,r4,r3
  831f8c:	00c021b4 	movhi	r3,134
  831f90:	18e3ef04 	addi	r3,r3,-28740
  831f94:	1909883a 	add	r4,r3,r4
  831f98:	20c00003 	ldbu	r3,0(r4)
  831f9c:	10c5c83a 	sub	r2,r2,r3
  831fa0:	f800283a 	ret
  831fa4:	00800604 	movi	r2,24
  831fa8:	00c00204 	movi	r3,8
  831fac:	003ff606 	br	831f88 <__alt_mem_epcs_flash_controller_0+0xff828f88>
  831fb0:	00800404 	movi	r2,16
  831fb4:	1007883a 	mov	r3,r2
  831fb8:	003ff306 	br	831f88 <__alt_mem_epcs_flash_controller_0+0xff828f88>

00831fbc <clock>:
  831fbc:	008021b4 	movhi	r2,134
  831fc0:	10adb604 	addi	r2,r2,-18728
  831fc4:	11000017 	ldw	r4,0(r2)
  831fc8:	defffb04 	addi	sp,sp,-20
  831fcc:	d80b883a 	mov	r5,sp
  831fd0:	dfc00415 	stw	ra,16(sp)
  831fd4:	0838abc0 	call	838abc <_times_r>
  831fd8:	00ffffc4 	movi	r3,-1
  831fdc:	10c00726 	beq	r2,r3,831ffc <clock+0x40>
  831fe0:	d8c00017 	ldw	r3,0(sp)
  831fe4:	d8800117 	ldw	r2,4(sp)
  831fe8:	1885883a 	add	r2,r3,r2
  831fec:	d8c00217 	ldw	r3,8(sp)
  831ff0:	10c7883a 	add	r3,r2,r3
  831ff4:	d8800317 	ldw	r2,12(sp)
  831ff8:	1885883a 	add	r2,r3,r2
  831ffc:	dfc00417 	ldw	ra,16(sp)
  832000:	dec00504 	addi	sp,sp,20
  832004:	f800283a 	ret

00832008 <exit>:
  832008:	defffe04 	addi	sp,sp,-8
  83200c:	000b883a 	mov	r5,zero
  832010:	dc000015 	stw	r16,0(sp)
  832014:	dfc00115 	stw	ra,4(sp)
  832018:	2021883a 	mov	r16,r4
  83201c:	083b1d80 	call	83b1d8 <__call_exitprocs>
  832020:	008021b4 	movhi	r2,134
  832024:	10adb504 	addi	r2,r2,-18732
  832028:	11000017 	ldw	r4,0(r2)
  83202c:	20800f17 	ldw	r2,60(r4)
  832030:	10000126 	beq	r2,zero,832038 <exit+0x30>
  832034:	103ee83a 	callr	r2
  832038:	8009883a 	mov	r4,r16
  83203c:	084959c0 	call	84959c <_exit>

00832040 <_fclose_r>:
  832040:	28003926 	beq	r5,zero,832128 <_fclose_r+0xe8>
  832044:	defffc04 	addi	sp,sp,-16
  832048:	dc400115 	stw	r17,4(sp)
  83204c:	dc000015 	stw	r16,0(sp)
  832050:	dfc00315 	stw	ra,12(sp)
  832054:	dc800215 	stw	r18,8(sp)
  832058:	2023883a 	mov	r17,r4
  83205c:	2821883a 	mov	r16,r5
  832060:	20000226 	beq	r4,zero,83206c <_fclose_r+0x2c>
  832064:	20800e17 	ldw	r2,56(r4)
  832068:	10002726 	beq	r2,zero,832108 <_fclose_r+0xc8>
  83206c:	8080030f 	ldh	r2,12(r16)
  832070:	1000071e 	bne	r2,zero,832090 <_fclose_r+0x50>
  832074:	0005883a 	mov	r2,zero
  832078:	dfc00317 	ldw	ra,12(sp)
  83207c:	dc800217 	ldw	r18,8(sp)
  832080:	dc400117 	ldw	r17,4(sp)
  832084:	dc000017 	ldw	r16,0(sp)
  832088:	dec00404 	addi	sp,sp,16
  83208c:	f800283a 	ret
  832090:	800b883a 	mov	r5,r16
  832094:	8809883a 	mov	r4,r17
  832098:	08321440 	call	832144 <__sflush_r>
  83209c:	1025883a 	mov	r18,r2
  8320a0:	80800b17 	ldw	r2,44(r16)
  8320a4:	10000426 	beq	r2,zero,8320b8 <_fclose_r+0x78>
  8320a8:	81400717 	ldw	r5,28(r16)
  8320ac:	8809883a 	mov	r4,r17
  8320b0:	103ee83a 	callr	r2
  8320b4:	10001616 	blt	r2,zero,832110 <_fclose_r+0xd0>
  8320b8:	8080030b 	ldhu	r2,12(r16)
  8320bc:	1080200c 	andi	r2,r2,128
  8320c0:	1000151e 	bne	r2,zero,832118 <_fclose_r+0xd8>
  8320c4:	81400c17 	ldw	r5,48(r16)
  8320c8:	28000526 	beq	r5,zero,8320e0 <_fclose_r+0xa0>
  8320cc:	80801004 	addi	r2,r16,64
  8320d0:	28800226 	beq	r5,r2,8320dc <_fclose_r+0x9c>
  8320d4:	8809883a 	mov	r4,r17
  8320d8:	0832c880 	call	832c88 <_free_r>
  8320dc:	80000c15 	stw	zero,48(r16)
  8320e0:	81401117 	ldw	r5,68(r16)
  8320e4:	28000326 	beq	r5,zero,8320f4 <_fclose_r+0xb4>
  8320e8:	8809883a 	mov	r4,r17
  8320ec:	0832c880 	call	832c88 <_free_r>
  8320f0:	80001115 	stw	zero,68(r16)
  8320f4:	083275c0 	call	83275c <__sfp_lock_acquire>
  8320f8:	8000030d 	sth	zero,12(r16)
  8320fc:	08327600 	call	832760 <__sfp_lock_release>
  832100:	9005883a 	mov	r2,r18
  832104:	003fdc06 	br	832078 <__alt_mem_epcs_flash_controller_0+0xff829078>
  832108:	083274c0 	call	83274c <__sinit>
  83210c:	003fd706 	br	83206c <__alt_mem_epcs_flash_controller_0+0xff82906c>
  832110:	04bfffc4 	movi	r18,-1
  832114:	003fe806 	br	8320b8 <__alt_mem_epcs_flash_controller_0+0xff8290b8>
  832118:	81400417 	ldw	r5,16(r16)
  83211c:	8809883a 	mov	r4,r17
  832120:	0832c880 	call	832c88 <_free_r>
  832124:	003fe706 	br	8320c4 <__alt_mem_epcs_flash_controller_0+0xff8290c4>
  832128:	0005883a 	mov	r2,zero
  83212c:	f800283a 	ret

00832130 <fclose>:
  832130:	008021b4 	movhi	r2,134
  832134:	10adb604 	addi	r2,r2,-18728
  832138:	200b883a 	mov	r5,r4
  83213c:	11000017 	ldw	r4,0(r2)
  832140:	08320401 	jmpi	832040 <_fclose_r>

00832144 <__sflush_r>:
  832144:	2880030b 	ldhu	r2,12(r5)
  832148:	defffb04 	addi	sp,sp,-20
  83214c:	dcc00315 	stw	r19,12(sp)
  832150:	dc400115 	stw	r17,4(sp)
  832154:	dfc00415 	stw	ra,16(sp)
  832158:	dc800215 	stw	r18,8(sp)
  83215c:	dc000015 	stw	r16,0(sp)
  832160:	10c0020c 	andi	r3,r2,8
  832164:	2823883a 	mov	r17,r5
  832168:	2027883a 	mov	r19,r4
  83216c:	1800311e 	bne	r3,zero,832234 <__sflush_r+0xf0>
  832170:	28c00117 	ldw	r3,4(r5)
  832174:	10820014 	ori	r2,r2,2048
  832178:	2880030d 	sth	r2,12(r5)
  83217c:	00c04b0e 	bge	zero,r3,8322ac <__sflush_r+0x168>
  832180:	8a000a17 	ldw	r8,40(r17)
  832184:	40002326 	beq	r8,zero,832214 <__sflush_r+0xd0>
  832188:	9c000017 	ldw	r16,0(r19)
  83218c:	10c4000c 	andi	r3,r2,4096
  832190:	98000015 	stw	zero,0(r19)
  832194:	18004826 	beq	r3,zero,8322b8 <__sflush_r+0x174>
  832198:	89801417 	ldw	r6,80(r17)
  83219c:	10c0010c 	andi	r3,r2,4
  8321a0:	18000626 	beq	r3,zero,8321bc <__sflush_r+0x78>
  8321a4:	88c00117 	ldw	r3,4(r17)
  8321a8:	88800c17 	ldw	r2,48(r17)
  8321ac:	30cdc83a 	sub	r6,r6,r3
  8321b0:	10000226 	beq	r2,zero,8321bc <__sflush_r+0x78>
  8321b4:	88800f17 	ldw	r2,60(r17)
  8321b8:	308dc83a 	sub	r6,r6,r2
  8321bc:	89400717 	ldw	r5,28(r17)
  8321c0:	000f883a 	mov	r7,zero
  8321c4:	9809883a 	mov	r4,r19
  8321c8:	403ee83a 	callr	r8
  8321cc:	00ffffc4 	movi	r3,-1
  8321d0:	10c04426 	beq	r2,r3,8322e4 <__sflush_r+0x1a0>
  8321d4:	88c0030b 	ldhu	r3,12(r17)
  8321d8:	89000417 	ldw	r4,16(r17)
  8321dc:	88000115 	stw	zero,4(r17)
  8321e0:	197dffcc 	andi	r5,r3,63487
  8321e4:	8940030d 	sth	r5,12(r17)
  8321e8:	89000015 	stw	r4,0(r17)
  8321ec:	18c4000c 	andi	r3,r3,4096
  8321f0:	18002c1e 	bne	r3,zero,8322a4 <__sflush_r+0x160>
  8321f4:	89400c17 	ldw	r5,48(r17)
  8321f8:	9c000015 	stw	r16,0(r19)
  8321fc:	28000526 	beq	r5,zero,832214 <__sflush_r+0xd0>
  832200:	88801004 	addi	r2,r17,64
  832204:	28800226 	beq	r5,r2,832210 <__sflush_r+0xcc>
  832208:	9809883a 	mov	r4,r19
  83220c:	0832c880 	call	832c88 <_free_r>
  832210:	88000c15 	stw	zero,48(r17)
  832214:	0005883a 	mov	r2,zero
  832218:	dfc00417 	ldw	ra,16(sp)
  83221c:	dcc00317 	ldw	r19,12(sp)
  832220:	dc800217 	ldw	r18,8(sp)
  832224:	dc400117 	ldw	r17,4(sp)
  832228:	dc000017 	ldw	r16,0(sp)
  83222c:	dec00504 	addi	sp,sp,20
  832230:	f800283a 	ret
  832234:	2c800417 	ldw	r18,16(r5)
  832238:	903ff626 	beq	r18,zero,832214 <__alt_mem_epcs_flash_controller_0+0xff829214>
  83223c:	2c000017 	ldw	r16,0(r5)
  832240:	108000cc 	andi	r2,r2,3
  832244:	2c800015 	stw	r18,0(r5)
  832248:	84a1c83a 	sub	r16,r16,r18
  83224c:	1000131e 	bne	r2,zero,83229c <__sflush_r+0x158>
  832250:	28800517 	ldw	r2,20(r5)
  832254:	88800215 	stw	r2,8(r17)
  832258:	04000316 	blt	zero,r16,832268 <__sflush_r+0x124>
  83225c:	003fed06 	br	832214 <__alt_mem_epcs_flash_controller_0+0xff829214>
  832260:	90a5883a 	add	r18,r18,r2
  832264:	043feb0e 	bge	zero,r16,832214 <__alt_mem_epcs_flash_controller_0+0xff829214>
  832268:	88800917 	ldw	r2,36(r17)
  83226c:	89400717 	ldw	r5,28(r17)
  832270:	800f883a 	mov	r7,r16
  832274:	900d883a 	mov	r6,r18
  832278:	9809883a 	mov	r4,r19
  83227c:	103ee83a 	callr	r2
  832280:	80a1c83a 	sub	r16,r16,r2
  832284:	00bff616 	blt	zero,r2,832260 <__alt_mem_epcs_flash_controller_0+0xff829260>
  832288:	88c0030b 	ldhu	r3,12(r17)
  83228c:	00bfffc4 	movi	r2,-1
  832290:	18c01014 	ori	r3,r3,64
  832294:	88c0030d 	sth	r3,12(r17)
  832298:	003fdf06 	br	832218 <__alt_mem_epcs_flash_controller_0+0xff829218>
  83229c:	0005883a 	mov	r2,zero
  8322a0:	003fec06 	br	832254 <__alt_mem_epcs_flash_controller_0+0xff829254>
  8322a4:	88801415 	stw	r2,80(r17)
  8322a8:	003fd206 	br	8321f4 <__alt_mem_epcs_flash_controller_0+0xff8291f4>
  8322ac:	28c00f17 	ldw	r3,60(r5)
  8322b0:	00ffb316 	blt	zero,r3,832180 <__alt_mem_epcs_flash_controller_0+0xff829180>
  8322b4:	003fd706 	br	832214 <__alt_mem_epcs_flash_controller_0+0xff829214>
  8322b8:	89400717 	ldw	r5,28(r17)
  8322bc:	000d883a 	mov	r6,zero
  8322c0:	01c00044 	movi	r7,1
  8322c4:	9809883a 	mov	r4,r19
  8322c8:	403ee83a 	callr	r8
  8322cc:	100d883a 	mov	r6,r2
  8322d0:	00bfffc4 	movi	r2,-1
  8322d4:	30801426 	beq	r6,r2,832328 <__sflush_r+0x1e4>
  8322d8:	8880030b 	ldhu	r2,12(r17)
  8322dc:	8a000a17 	ldw	r8,40(r17)
  8322e0:	003fae06 	br	83219c <__alt_mem_epcs_flash_controller_0+0xff82919c>
  8322e4:	98c00017 	ldw	r3,0(r19)
  8322e8:	183fba26 	beq	r3,zero,8321d4 <__alt_mem_epcs_flash_controller_0+0xff8291d4>
  8322ec:	01000744 	movi	r4,29
  8322f0:	19000626 	beq	r3,r4,83230c <__sflush_r+0x1c8>
  8322f4:	01000584 	movi	r4,22
  8322f8:	19000426 	beq	r3,r4,83230c <__sflush_r+0x1c8>
  8322fc:	88c0030b 	ldhu	r3,12(r17)
  832300:	18c01014 	ori	r3,r3,64
  832304:	88c0030d 	sth	r3,12(r17)
  832308:	003fc306 	br	832218 <__alt_mem_epcs_flash_controller_0+0xff829218>
  83230c:	8880030b 	ldhu	r2,12(r17)
  832310:	88c00417 	ldw	r3,16(r17)
  832314:	88000115 	stw	zero,4(r17)
  832318:	10bdffcc 	andi	r2,r2,63487
  83231c:	8880030d 	sth	r2,12(r17)
  832320:	88c00015 	stw	r3,0(r17)
  832324:	003fb306 	br	8321f4 <__alt_mem_epcs_flash_controller_0+0xff8291f4>
  832328:	98800017 	ldw	r2,0(r19)
  83232c:	103fea26 	beq	r2,zero,8322d8 <__alt_mem_epcs_flash_controller_0+0xff8292d8>
  832330:	00c00744 	movi	r3,29
  832334:	10c00226 	beq	r2,r3,832340 <__sflush_r+0x1fc>
  832338:	00c00584 	movi	r3,22
  83233c:	10c0031e 	bne	r2,r3,83234c <__sflush_r+0x208>
  832340:	9c000015 	stw	r16,0(r19)
  832344:	0005883a 	mov	r2,zero
  832348:	003fb306 	br	832218 <__alt_mem_epcs_flash_controller_0+0xff829218>
  83234c:	88c0030b 	ldhu	r3,12(r17)
  832350:	3005883a 	mov	r2,r6
  832354:	18c01014 	ori	r3,r3,64
  832358:	88c0030d 	sth	r3,12(r17)
  83235c:	003fae06 	br	832218 <__alt_mem_epcs_flash_controller_0+0xff829218>

00832360 <_fflush_r>:
  832360:	defffd04 	addi	sp,sp,-12
  832364:	dc000115 	stw	r16,4(sp)
  832368:	dfc00215 	stw	ra,8(sp)
  83236c:	2021883a 	mov	r16,r4
  832370:	20000226 	beq	r4,zero,83237c <_fflush_r+0x1c>
  832374:	20800e17 	ldw	r2,56(r4)
  832378:	10000c26 	beq	r2,zero,8323ac <_fflush_r+0x4c>
  83237c:	2880030f 	ldh	r2,12(r5)
  832380:	1000051e 	bne	r2,zero,832398 <_fflush_r+0x38>
  832384:	0005883a 	mov	r2,zero
  832388:	dfc00217 	ldw	ra,8(sp)
  83238c:	dc000117 	ldw	r16,4(sp)
  832390:	dec00304 	addi	sp,sp,12
  832394:	f800283a 	ret
  832398:	8009883a 	mov	r4,r16
  83239c:	dfc00217 	ldw	ra,8(sp)
  8323a0:	dc000117 	ldw	r16,4(sp)
  8323a4:	dec00304 	addi	sp,sp,12
  8323a8:	08321441 	jmpi	832144 <__sflush_r>
  8323ac:	d9400015 	stw	r5,0(sp)
  8323b0:	083274c0 	call	83274c <__sinit>
  8323b4:	d9400017 	ldw	r5,0(sp)
  8323b8:	003ff006 	br	83237c <__alt_mem_epcs_flash_controller_0+0xff82937c>

008323bc <fflush>:
  8323bc:	20000526 	beq	r4,zero,8323d4 <fflush+0x18>
  8323c0:	008021b4 	movhi	r2,134
  8323c4:	10adb604 	addi	r2,r2,-18728
  8323c8:	200b883a 	mov	r5,r4
  8323cc:	11000017 	ldw	r4,0(r2)
  8323d0:	08323601 	jmpi	832360 <_fflush_r>
  8323d4:	008021b4 	movhi	r2,134
  8323d8:	10adb504 	addi	r2,r2,-18732
  8323dc:	11000017 	ldw	r4,0(r2)
  8323e0:	014020f4 	movhi	r5,131
  8323e4:	2948d804 	addi	r5,r5,9056
  8323e8:	08335381 	jmpi	833538 <_fwalk_reent>

008323ec <__fp_unlock>:
  8323ec:	0005883a 	mov	r2,zero
  8323f0:	f800283a 	ret

008323f4 <_cleanup_r>:
  8323f4:	014020f4 	movhi	r5,131
  8323f8:	29481004 	addi	r5,r5,8256
  8323fc:	08335381 	jmpi	833538 <_fwalk_reent>

00832400 <__sinit.part.1>:
  832400:	defff704 	addi	sp,sp,-36
  832404:	00c020f4 	movhi	r3,131
  832408:	dfc00815 	stw	ra,32(sp)
  83240c:	ddc00715 	stw	r23,28(sp)
  832410:	dd800615 	stw	r22,24(sp)
  832414:	dd400515 	stw	r21,20(sp)
  832418:	dd000415 	stw	r20,16(sp)
  83241c:	dcc00315 	stw	r19,12(sp)
  832420:	dc800215 	stw	r18,8(sp)
  832424:	dc400115 	stw	r17,4(sp)
  832428:	dc000015 	stw	r16,0(sp)
  83242c:	18c8fd04 	addi	r3,r3,9204
  832430:	24000117 	ldw	r16,4(r4)
  832434:	20c00f15 	stw	r3,60(r4)
  832438:	2080bb04 	addi	r2,r4,748
  83243c:	00c000c4 	movi	r3,3
  832440:	20c0b915 	stw	r3,740(r4)
  832444:	2080ba15 	stw	r2,744(r4)
  832448:	2000b815 	stw	zero,736(r4)
  83244c:	05c00204 	movi	r23,8
  832450:	00800104 	movi	r2,4
  832454:	2025883a 	mov	r18,r4
  832458:	b80d883a 	mov	r6,r23
  83245c:	81001704 	addi	r4,r16,92
  832460:	000b883a 	mov	r5,zero
  832464:	80000015 	stw	zero,0(r16)
  832468:	80000115 	stw	zero,4(r16)
  83246c:	80000215 	stw	zero,8(r16)
  832470:	8080030d 	sth	r2,12(r16)
  832474:	80001915 	stw	zero,100(r16)
  832478:	8000038d 	sth	zero,14(r16)
  83247c:	80000415 	stw	zero,16(r16)
  832480:	80000515 	stw	zero,20(r16)
  832484:	80000615 	stw	zero,24(r16)
  832488:	08342980 	call	834298 <memset>
  83248c:	058020f4 	movhi	r22,131
  832490:	94400217 	ldw	r17,8(r18)
  832494:	054020f4 	movhi	r21,131
  832498:	050020f4 	movhi	r20,131
  83249c:	04c020f4 	movhi	r19,131
  8324a0:	b592b904 	addi	r22,r22,19172
  8324a4:	ad52d004 	addi	r21,r21,19264
  8324a8:	a512ef04 	addi	r20,r20,19388
  8324ac:	9cd30604 	addi	r19,r19,19480
  8324b0:	85800815 	stw	r22,32(r16)
  8324b4:	85400915 	stw	r21,36(r16)
  8324b8:	85000a15 	stw	r20,40(r16)
  8324bc:	84c00b15 	stw	r19,44(r16)
  8324c0:	84000715 	stw	r16,28(r16)
  8324c4:	00800284 	movi	r2,10
  8324c8:	8880030d 	sth	r2,12(r17)
  8324cc:	00800044 	movi	r2,1
  8324d0:	b80d883a 	mov	r6,r23
  8324d4:	89001704 	addi	r4,r17,92
  8324d8:	000b883a 	mov	r5,zero
  8324dc:	88000015 	stw	zero,0(r17)
  8324e0:	88000115 	stw	zero,4(r17)
  8324e4:	88000215 	stw	zero,8(r17)
  8324e8:	88001915 	stw	zero,100(r17)
  8324ec:	8880038d 	sth	r2,14(r17)
  8324f0:	88000415 	stw	zero,16(r17)
  8324f4:	88000515 	stw	zero,20(r17)
  8324f8:	88000615 	stw	zero,24(r17)
  8324fc:	08342980 	call	834298 <memset>
  832500:	94000317 	ldw	r16,12(r18)
  832504:	00800484 	movi	r2,18
  832508:	8c400715 	stw	r17,28(r17)
  83250c:	8d800815 	stw	r22,32(r17)
  832510:	8d400915 	stw	r21,36(r17)
  832514:	8d000a15 	stw	r20,40(r17)
  832518:	8cc00b15 	stw	r19,44(r17)
  83251c:	8080030d 	sth	r2,12(r16)
  832520:	00800084 	movi	r2,2
  832524:	80000015 	stw	zero,0(r16)
  832528:	80000115 	stw	zero,4(r16)
  83252c:	80000215 	stw	zero,8(r16)
  832530:	80001915 	stw	zero,100(r16)
  832534:	8080038d 	sth	r2,14(r16)
  832538:	80000415 	stw	zero,16(r16)
  83253c:	80000515 	stw	zero,20(r16)
  832540:	80000615 	stw	zero,24(r16)
  832544:	b80d883a 	mov	r6,r23
  832548:	000b883a 	mov	r5,zero
  83254c:	81001704 	addi	r4,r16,92
  832550:	08342980 	call	834298 <memset>
  832554:	00800044 	movi	r2,1
  832558:	84000715 	stw	r16,28(r16)
  83255c:	85800815 	stw	r22,32(r16)
  832560:	85400915 	stw	r21,36(r16)
  832564:	85000a15 	stw	r20,40(r16)
  832568:	84c00b15 	stw	r19,44(r16)
  83256c:	90800e15 	stw	r2,56(r18)
  832570:	dfc00817 	ldw	ra,32(sp)
  832574:	ddc00717 	ldw	r23,28(sp)
  832578:	dd800617 	ldw	r22,24(sp)
  83257c:	dd400517 	ldw	r21,20(sp)
  832580:	dd000417 	ldw	r20,16(sp)
  832584:	dcc00317 	ldw	r19,12(sp)
  832588:	dc800217 	ldw	r18,8(sp)
  83258c:	dc400117 	ldw	r17,4(sp)
  832590:	dc000017 	ldw	r16,0(sp)
  832594:	dec00904 	addi	sp,sp,36
  832598:	f800283a 	ret

0083259c <__fp_lock>:
  83259c:	0005883a 	mov	r2,zero
  8325a0:	f800283a 	ret

008325a4 <__sfmoreglue>:
  8325a4:	defffc04 	addi	sp,sp,-16
  8325a8:	dc800215 	stw	r18,8(sp)
  8325ac:	2825883a 	mov	r18,r5
  8325b0:	dc000015 	stw	r16,0(sp)
  8325b4:	01401a04 	movi	r5,104
  8325b8:	2021883a 	mov	r16,r4
  8325bc:	913fffc4 	addi	r4,r18,-1
  8325c0:	dfc00315 	stw	ra,12(sp)
  8325c4:	dc400115 	stw	r17,4(sp)
  8325c8:	08305040 	call	830504 <__mulsi3>
  8325cc:	8009883a 	mov	r4,r16
  8325d0:	11401d04 	addi	r5,r2,116
  8325d4:	1023883a 	mov	r17,r2
  8325d8:	08339440 	call	833944 <_malloc_r>
  8325dc:	1021883a 	mov	r16,r2
  8325e0:	10000726 	beq	r2,zero,832600 <__sfmoreglue+0x5c>
  8325e4:	11000304 	addi	r4,r2,12
  8325e8:	10000015 	stw	zero,0(r2)
  8325ec:	14800115 	stw	r18,4(r2)
  8325f0:	11000215 	stw	r4,8(r2)
  8325f4:	89801a04 	addi	r6,r17,104
  8325f8:	000b883a 	mov	r5,zero
  8325fc:	08342980 	call	834298 <memset>
  832600:	8005883a 	mov	r2,r16
  832604:	dfc00317 	ldw	ra,12(sp)
  832608:	dc800217 	ldw	r18,8(sp)
  83260c:	dc400117 	ldw	r17,4(sp)
  832610:	dc000017 	ldw	r16,0(sp)
  832614:	dec00404 	addi	sp,sp,16
  832618:	f800283a 	ret

0083261c <__sfp>:
  83261c:	defffb04 	addi	sp,sp,-20
  832620:	dc000015 	stw	r16,0(sp)
  832624:	040021b4 	movhi	r16,134
  832628:	842db504 	addi	r16,r16,-18732
  83262c:	dcc00315 	stw	r19,12(sp)
  832630:	2027883a 	mov	r19,r4
  832634:	81000017 	ldw	r4,0(r16)
  832638:	dfc00415 	stw	ra,16(sp)
  83263c:	dc800215 	stw	r18,8(sp)
  832640:	20800e17 	ldw	r2,56(r4)
  832644:	dc400115 	stw	r17,4(sp)
  832648:	1000021e 	bne	r2,zero,832654 <__sfp+0x38>
  83264c:	08324000 	call	832400 <__sinit.part.1>
  832650:	81000017 	ldw	r4,0(r16)
  832654:	2480b804 	addi	r18,r4,736
  832658:	047fffc4 	movi	r17,-1
  83265c:	91000117 	ldw	r4,4(r18)
  832660:	94000217 	ldw	r16,8(r18)
  832664:	213fffc4 	addi	r4,r4,-1
  832668:	20000a16 	blt	r4,zero,832694 <__sfp+0x78>
  83266c:	8080030f 	ldh	r2,12(r16)
  832670:	10000c26 	beq	r2,zero,8326a4 <__sfp+0x88>
  832674:	80c01d04 	addi	r3,r16,116
  832678:	00000206 	br	832684 <__sfp+0x68>
  83267c:	18bfe60f 	ldh	r2,-104(r3)
  832680:	10000826 	beq	r2,zero,8326a4 <__sfp+0x88>
  832684:	213fffc4 	addi	r4,r4,-1
  832688:	1c3ffd04 	addi	r16,r3,-12
  83268c:	18c01a04 	addi	r3,r3,104
  832690:	247ffa1e 	bne	r4,r17,83267c <__alt_mem_epcs_flash_controller_0+0xff82967c>
  832694:	90800017 	ldw	r2,0(r18)
  832698:	10001d26 	beq	r2,zero,832710 <__sfp+0xf4>
  83269c:	1025883a 	mov	r18,r2
  8326a0:	003fee06 	br	83265c <__alt_mem_epcs_flash_controller_0+0xff82965c>
  8326a4:	00bfffc4 	movi	r2,-1
  8326a8:	8080038d 	sth	r2,14(r16)
  8326ac:	00800044 	movi	r2,1
  8326b0:	8080030d 	sth	r2,12(r16)
  8326b4:	80001915 	stw	zero,100(r16)
  8326b8:	80000015 	stw	zero,0(r16)
  8326bc:	80000215 	stw	zero,8(r16)
  8326c0:	80000115 	stw	zero,4(r16)
  8326c4:	80000415 	stw	zero,16(r16)
  8326c8:	80000515 	stw	zero,20(r16)
  8326cc:	80000615 	stw	zero,24(r16)
  8326d0:	01800204 	movi	r6,8
  8326d4:	000b883a 	mov	r5,zero
  8326d8:	81001704 	addi	r4,r16,92
  8326dc:	08342980 	call	834298 <memset>
  8326e0:	8005883a 	mov	r2,r16
  8326e4:	80000c15 	stw	zero,48(r16)
  8326e8:	80000d15 	stw	zero,52(r16)
  8326ec:	80001115 	stw	zero,68(r16)
  8326f0:	80001215 	stw	zero,72(r16)
  8326f4:	dfc00417 	ldw	ra,16(sp)
  8326f8:	dcc00317 	ldw	r19,12(sp)
  8326fc:	dc800217 	ldw	r18,8(sp)
  832700:	dc400117 	ldw	r17,4(sp)
  832704:	dc000017 	ldw	r16,0(sp)
  832708:	dec00504 	addi	sp,sp,20
  83270c:	f800283a 	ret
  832710:	01400104 	movi	r5,4
  832714:	9809883a 	mov	r4,r19
  832718:	08325a40 	call	8325a4 <__sfmoreglue>
  83271c:	90800015 	stw	r2,0(r18)
  832720:	103fde1e 	bne	r2,zero,83269c <__alt_mem_epcs_flash_controller_0+0xff82969c>
  832724:	00800304 	movi	r2,12
  832728:	98800015 	stw	r2,0(r19)
  83272c:	0005883a 	mov	r2,zero
  832730:	003ff006 	br	8326f4 <__alt_mem_epcs_flash_controller_0+0xff8296f4>

00832734 <_cleanup>:
  832734:	008021b4 	movhi	r2,134
  832738:	10adb504 	addi	r2,r2,-18732
  83273c:	11000017 	ldw	r4,0(r2)
  832740:	014020f4 	movhi	r5,131
  832744:	29481004 	addi	r5,r5,8256
  832748:	08335381 	jmpi	833538 <_fwalk_reent>

0083274c <__sinit>:
  83274c:	20800e17 	ldw	r2,56(r4)
  832750:	10000126 	beq	r2,zero,832758 <__sinit+0xc>
  832754:	f800283a 	ret
  832758:	08324001 	jmpi	832400 <__sinit.part.1>

0083275c <__sfp_lock_acquire>:
  83275c:	f800283a 	ret

00832760 <__sfp_lock_release>:
  832760:	f800283a 	ret

00832764 <__sinit_lock_acquire>:
  832764:	f800283a 	ret

00832768 <__sinit_lock_release>:
  832768:	f800283a 	ret

0083276c <__fp_lock_all>:
  83276c:	008021b4 	movhi	r2,134
  832770:	10adb604 	addi	r2,r2,-18728
  832774:	11000017 	ldw	r4,0(r2)
  832778:	014020f4 	movhi	r5,131
  83277c:	29496704 	addi	r5,r5,9628
  832780:	08334741 	jmpi	833474 <_fwalk>

00832784 <__fp_unlock_all>:
  832784:	008021b4 	movhi	r2,134
  832788:	10adb604 	addi	r2,r2,-18728
  83278c:	11000017 	ldw	r4,0(r2)
  832790:	014020f4 	movhi	r5,131
  832794:	2948fb04 	addi	r5,r5,9196
  832798:	08334741 	jmpi	833474 <_fwalk>

0083279c <_fopen_r>:
  83279c:	defffa04 	addi	sp,sp,-24
  8327a0:	3005883a 	mov	r2,r6
  8327a4:	dcc00415 	stw	r19,16(sp)
  8327a8:	d80d883a 	mov	r6,sp
  8327ac:	2827883a 	mov	r19,r5
  8327b0:	100b883a 	mov	r5,r2
  8327b4:	dc800315 	stw	r18,12(sp)
  8327b8:	dfc00515 	stw	ra,20(sp)
  8327bc:	dc400215 	stw	r17,8(sp)
  8327c0:	dc000115 	stw	r16,4(sp)
  8327c4:	2025883a 	mov	r18,r4
  8327c8:	083cc080 	call	83cc08 <__sflags>
  8327cc:	10002726 	beq	r2,zero,83286c <_fopen_r+0xd0>
  8327d0:	9009883a 	mov	r4,r18
  8327d4:	1023883a 	mov	r17,r2
  8327d8:	083261c0 	call	83261c <__sfp>
  8327dc:	1021883a 	mov	r16,r2
  8327e0:	10002226 	beq	r2,zero,83286c <_fopen_r+0xd0>
  8327e4:	d9800017 	ldw	r6,0(sp)
  8327e8:	01c06d84 	movi	r7,438
  8327ec:	980b883a 	mov	r5,r19
  8327f0:	9009883a 	mov	r4,r18
  8327f4:	08343c00 	call	8343c0 <_open_r>
  8327f8:	10001916 	blt	r2,zero,832860 <_fopen_r+0xc4>
  8327fc:	8080038d 	sth	r2,14(r16)
  832800:	008020f4 	movhi	r2,131
  832804:	1092b904 	addi	r2,r2,19172
  832808:	80800815 	stw	r2,32(r16)
  83280c:	008020f4 	movhi	r2,131
  832810:	1092d004 	addi	r2,r2,19264
  832814:	80800915 	stw	r2,36(r16)
  832818:	008020f4 	movhi	r2,131
  83281c:	1092ef04 	addi	r2,r2,19388
  832820:	80800a15 	stw	r2,40(r16)
  832824:	008020f4 	movhi	r2,131
  832828:	10930604 	addi	r2,r2,19480
  83282c:	8440030d 	sth	r17,12(r16)
  832830:	84000715 	stw	r16,28(r16)
  832834:	80800b15 	stw	r2,44(r16)
  832838:	8c40400c 	andi	r17,r17,256
  83283c:	88000d1e 	bne	r17,zero,832874 <_fopen_r+0xd8>
  832840:	8005883a 	mov	r2,r16
  832844:	dfc00517 	ldw	ra,20(sp)
  832848:	dcc00417 	ldw	r19,16(sp)
  83284c:	dc800317 	ldw	r18,12(sp)
  832850:	dc400217 	ldw	r17,8(sp)
  832854:	dc000117 	ldw	r16,4(sp)
  832858:	dec00604 	addi	sp,sp,24
  83285c:	f800283a 	ret
  832860:	083275c0 	call	83275c <__sfp_lock_acquire>
  832864:	8000030d 	sth	zero,12(r16)
  832868:	08327600 	call	832760 <__sfp_lock_release>
  83286c:	0005883a 	mov	r2,zero
  832870:	003ff406 	br	832844 <__alt_mem_epcs_flash_controller_0+0xff829844>
  832874:	01c00084 	movi	r7,2
  832878:	000d883a 	mov	r6,zero
  83287c:	800b883a 	mov	r5,r16
  832880:	9009883a 	mov	r4,r18
  832884:	0832f980 	call	832f98 <_fseek_r>
  832888:	8005883a 	mov	r2,r16
  83288c:	003fed06 	br	832844 <__alt_mem_epcs_flash_controller_0+0xff829844>

00832890 <fopen>:
  832890:	008021b4 	movhi	r2,134
  832894:	10adb604 	addi	r2,r2,-18728
  832898:	280d883a 	mov	r6,r5
  83289c:	200b883a 	mov	r5,r4
  8328a0:	11000017 	ldw	r4,0(r2)
  8328a4:	083279c1 	jmpi	83279c <_fopen_r>

008328a8 <_fprintf_r>:
  8328a8:	defffe04 	addi	sp,sp,-8
  8328ac:	2809883a 	mov	r4,r5
  8328b0:	300b883a 	mov	r5,r6
  8328b4:	dfc00015 	stw	ra,0(sp)
  8328b8:	d9c00115 	stw	r7,4(sp)
  8328bc:	d9800104 	addi	r6,sp,4
  8328c0:	083ada00 	call	83ada0 <__vfprintf_internal>
  8328c4:	dfc00017 	ldw	ra,0(sp)
  8328c8:	dec00204 	addi	sp,sp,8
  8328cc:	f800283a 	ret

008328d0 <fprintf>:
  8328d0:	defffd04 	addi	sp,sp,-12
  8328d4:	dfc00015 	stw	ra,0(sp)
  8328d8:	d9800115 	stw	r6,4(sp)
  8328dc:	d9c00215 	stw	r7,8(sp)
  8328e0:	d9800104 	addi	r6,sp,4
  8328e4:	083ada00 	call	83ada0 <__vfprintf_internal>
  8328e8:	dfc00017 	ldw	ra,0(sp)
  8328ec:	dec00304 	addi	sp,sp,12
  8328f0:	f800283a 	ret

008328f4 <_fread_r>:
  8328f4:	defff404 	addi	sp,sp,-48
  8328f8:	dd000615 	stw	r20,24(sp)
  8328fc:	dcc00515 	stw	r19,20(sp)
  832900:	2029883a 	mov	r20,r4
  832904:	2827883a 	mov	r19,r5
  832908:	3809883a 	mov	r4,r7
  83290c:	300b883a 	mov	r5,r6
  832910:	ddc00915 	stw	r23,36(sp)
  832914:	dd400715 	stw	r21,28(sp)
  832918:	dc000215 	stw	r16,8(sp)
  83291c:	dfc00b15 	stw	ra,44(sp)
  832920:	df000a15 	stw	fp,40(sp)
  832924:	dd800815 	stw	r22,32(sp)
  832928:	dc800415 	stw	r18,16(sp)
  83292c:	dc400315 	stw	r17,12(sp)
  832930:	302f883a 	mov	r23,r6
  832934:	382b883a 	mov	r21,r7
  832938:	08305040 	call	830504 <__mulsi3>
  83293c:	dc000c17 	ldw	r16,48(sp)
  832940:	10003826 	beq	r2,zero,832a24 <_fread_r+0x130>
  832944:	102d883a 	mov	r22,r2
  832948:	a0000226 	beq	r20,zero,832954 <_fread_r+0x60>
  83294c:	a0800e17 	ldw	r2,56(r20)
  832950:	10006e26 	beq	r2,zero,832b0c <_fread_r+0x218>
  832954:	8080030b 	ldhu	r2,12(r16)
  832958:	10c8000c 	andi	r3,r2,8192
  83295c:	1800061e 	bne	r3,zero,832978 <_fread_r+0x84>
  832960:	81001917 	ldw	r4,100(r16)
  832964:	00f7ffc4 	movi	r3,-8193
  832968:	10880014 	ori	r2,r2,8192
  83296c:	20c6703a 	and	r3,r4,r3
  832970:	8080030d 	sth	r2,12(r16)
  832974:	80c01915 	stw	r3,100(r16)
  832978:	84400117 	ldw	r17,4(r16)
  83297c:	88005f16 	blt	r17,zero,832afc <_fread_r+0x208>
  832980:	8809883a 	mov	r4,r17
  832984:	1080008c 	andi	r2,r2,2
  832988:	1000281e 	bne	r2,zero,832a2c <_fread_r+0x138>
  83298c:	b025883a 	mov	r18,r22
  832990:	00000b06 	br	8329c0 <_fread_r+0xcc>
  832994:	08341500 	call	834150 <memcpy>
  832998:	80800017 	ldw	r2,0(r16)
  83299c:	9c67883a 	add	r19,r19,r17
  8329a0:	9465c83a 	sub	r18,r18,r17
  8329a4:	1463883a 	add	r17,r2,r17
  8329a8:	800b883a 	mov	r5,r16
  8329ac:	a009883a 	mov	r4,r20
  8329b0:	84400015 	stw	r17,0(r16)
  8329b4:	08347040 	call	834704 <__srefill_r>
  8329b8:	10004c1e 	bne	r2,zero,832aec <_fread_r+0x1f8>
  8329bc:	84400117 	ldw	r17,4(r16)
  8329c0:	880d883a 	mov	r6,r17
  8329c4:	9809883a 	mov	r4,r19
  8329c8:	81400017 	ldw	r5,0(r16)
  8329cc:	8cbff136 	bltu	r17,r18,832994 <__alt_mem_epcs_flash_controller_0+0xff829994>
  8329d0:	900d883a 	mov	r6,r18
  8329d4:	08341500 	call	834150 <memcpy>
  8329d8:	80c00117 	ldw	r3,4(r16)
  8329dc:	81000017 	ldw	r4,0(r16)
  8329e0:	a805883a 	mov	r2,r21
  8329e4:	1c87c83a 	sub	r3,r3,r18
  8329e8:	24a5883a 	add	r18,r4,r18
  8329ec:	80c00115 	stw	r3,4(r16)
  8329f0:	84800015 	stw	r18,0(r16)
  8329f4:	dfc00b17 	ldw	ra,44(sp)
  8329f8:	df000a17 	ldw	fp,40(sp)
  8329fc:	ddc00917 	ldw	r23,36(sp)
  832a00:	dd800817 	ldw	r22,32(sp)
  832a04:	dd400717 	ldw	r21,28(sp)
  832a08:	dd000617 	ldw	r20,24(sp)
  832a0c:	dcc00517 	ldw	r19,20(sp)
  832a10:	dc800417 	ldw	r18,16(sp)
  832a14:	dc400317 	ldw	r17,12(sp)
  832a18:	dc000217 	ldw	r16,8(sp)
  832a1c:	dec00c04 	addi	sp,sp,48
  832a20:	f800283a 	ret
  832a24:	0005883a 	mov	r2,zero
  832a28:	003ff206 	br	8329f4 <__alt_mem_epcs_flash_controller_0+0xff8299f4>
  832a2c:	b007883a 	mov	r3,r22
  832a30:	2580012e 	bgeu	r4,r22,832a38 <_fread_r+0x144>
  832a34:	2007883a 	mov	r3,r4
  832a38:	81400017 	ldw	r5,0(r16)
  832a3c:	180d883a 	mov	r6,r3
  832a40:	9809883a 	mov	r4,r19
  832a44:	d8c00115 	stw	r3,4(sp)
  832a48:	08341500 	call	834150 <memcpy>
  832a4c:	d8c00117 	ldw	r3,4(sp)
  832a50:	84400017 	ldw	r17,0(r16)
  832a54:	80800117 	ldw	r2,4(r16)
  832a58:	81400c17 	ldw	r5,48(r16)
  832a5c:	88e3883a 	add	r17,r17,r3
  832a60:	10c5c83a 	sub	r2,r2,r3
  832a64:	84400015 	stw	r17,0(r16)
  832a68:	80800115 	stw	r2,4(r16)
  832a6c:	b0e5c83a 	sub	r18,r22,r3
  832a70:	28002c26 	beq	r5,zero,832b24 <_fread_r+0x230>
  832a74:	90002c26 	beq	r18,zero,832b28 <_fread_r+0x234>
  832a78:	80801004 	addi	r2,r16,64
  832a7c:	28800526 	beq	r5,r2,832a94 <_fread_r+0x1a0>
  832a80:	a009883a 	mov	r4,r20
  832a84:	d8c00115 	stw	r3,4(sp)
  832a88:	0832c880 	call	832c88 <_free_r>
  832a8c:	d8c00117 	ldw	r3,4(sp)
  832a90:	84400017 	ldw	r17,0(r16)
  832a94:	80000c15 	stw	zero,48(r16)
  832a98:	80800517 	ldw	r2,20(r16)
  832a9c:	87000417 	ldw	fp,16(r16)
  832aa0:	98e7883a 	add	r19,r19,r3
  832aa4:	d8800015 	stw	r2,0(sp)
  832aa8:	00000106 	br	832ab0 <_fread_r+0x1bc>
  832aac:	90001e26 	beq	r18,zero,832b28 <_fread_r+0x234>
  832ab0:	84c00415 	stw	r19,16(r16)
  832ab4:	84800515 	stw	r18,20(r16)
  832ab8:	84c00015 	stw	r19,0(r16)
  832abc:	a009883a 	mov	r4,r20
  832ac0:	800b883a 	mov	r5,r16
  832ac4:	08347040 	call	834704 <__srefill_r>
  832ac8:	d9000017 	ldw	r4,0(sp)
  832acc:	80c00117 	ldw	r3,4(r16)
  832ad0:	87000415 	stw	fp,16(r16)
  832ad4:	81000515 	stw	r4,20(r16)
  832ad8:	84400015 	stw	r17,0(r16)
  832adc:	80000115 	stw	zero,4(r16)
  832ae0:	90e5c83a 	sub	r18,r18,r3
  832ae4:	98e7883a 	add	r19,r19,r3
  832ae8:	103ff026 	beq	r2,zero,832aac <__alt_mem_epcs_flash_controller_0+0xff829aac>
  832aec:	b80b883a 	mov	r5,r23
  832af0:	b489c83a 	sub	r4,r22,r18
  832af4:	08304480 	call	830448 <__udivsi3>
  832af8:	003fbe06 	br	8329f4 <__alt_mem_epcs_flash_controller_0+0xff8299f4>
  832afc:	80000115 	stw	zero,4(r16)
  832b00:	0009883a 	mov	r4,zero
  832b04:	0023883a 	mov	r17,zero
  832b08:	003f9e06 	br	832984 <__alt_mem_epcs_flash_controller_0+0xff829984>
  832b0c:	a009883a 	mov	r4,r20
  832b10:	083274c0 	call	83274c <__sinit>
  832b14:	8080030b 	ldhu	r2,12(r16)
  832b18:	10c8000c 	andi	r3,r2,8192
  832b1c:	183f961e 	bne	r3,zero,832978 <__alt_mem_epcs_flash_controller_0+0xff829978>
  832b20:	003f8f06 	br	832960 <__alt_mem_epcs_flash_controller_0+0xff829960>
  832b24:	903fdc1e 	bne	r18,zero,832a98 <__alt_mem_epcs_flash_controller_0+0xff829a98>
  832b28:	a805883a 	mov	r2,r21
  832b2c:	003fb106 	br	8329f4 <__alt_mem_epcs_flash_controller_0+0xff8299f4>

00832b30 <fread>:
  832b30:	defffe04 	addi	sp,sp,-8
  832b34:	008021b4 	movhi	r2,134
  832b38:	d9c00015 	stw	r7,0(sp)
  832b3c:	10adb604 	addi	r2,r2,-18728
  832b40:	300f883a 	mov	r7,r6
  832b44:	280d883a 	mov	r6,r5
  832b48:	200b883a 	mov	r5,r4
  832b4c:	11000017 	ldw	r4,0(r2)
  832b50:	dfc00115 	stw	ra,4(sp)
  832b54:	08328f40 	call	8328f4 <_fread_r>
  832b58:	dfc00117 	ldw	ra,4(sp)
  832b5c:	dec00204 	addi	sp,sp,8
  832b60:	f800283a 	ret

00832b64 <_malloc_trim_r>:
  832b64:	defffb04 	addi	sp,sp,-20
  832b68:	dcc00315 	stw	r19,12(sp)
  832b6c:	04c021b4 	movhi	r19,134
  832b70:	dc800215 	stw	r18,8(sp)
  832b74:	dc400115 	stw	r17,4(sp)
  832b78:	dc000015 	stw	r16,0(sp)
  832b7c:	dfc00415 	stw	ra,16(sp)
  832b80:	2821883a 	mov	r16,r5
  832b84:	9ce73004 	addi	r19,r19,-25408
  832b88:	2025883a 	mov	r18,r4
  832b8c:	084a42c0 	call	84a42c <__malloc_lock>
  832b90:	98800217 	ldw	r2,8(r19)
  832b94:	14400117 	ldw	r17,4(r2)
  832b98:	00bfff04 	movi	r2,-4
  832b9c:	88a2703a 	and	r17,r17,r2
  832ba0:	8c21c83a 	sub	r16,r17,r16
  832ba4:	8403fbc4 	addi	r16,r16,4079
  832ba8:	8020d33a 	srli	r16,r16,12
  832bac:	0083ffc4 	movi	r2,4095
  832bb0:	843fffc4 	addi	r16,r16,-1
  832bb4:	8020933a 	slli	r16,r16,12
  832bb8:	1400060e 	bge	r2,r16,832bd4 <_malloc_trim_r+0x70>
  832bbc:	000b883a 	mov	r5,zero
  832bc0:	9009883a 	mov	r4,r18
  832bc4:	08348d80 	call	8348d8 <_sbrk_r>
  832bc8:	98c00217 	ldw	r3,8(r19)
  832bcc:	1c47883a 	add	r3,r3,r17
  832bd0:	10c00a26 	beq	r2,r3,832bfc <_malloc_trim_r+0x98>
  832bd4:	9009883a 	mov	r4,r18
  832bd8:	084a54c0 	call	84a54c <__malloc_unlock>
  832bdc:	0005883a 	mov	r2,zero
  832be0:	dfc00417 	ldw	ra,16(sp)
  832be4:	dcc00317 	ldw	r19,12(sp)
  832be8:	dc800217 	ldw	r18,8(sp)
  832bec:	dc400117 	ldw	r17,4(sp)
  832bf0:	dc000017 	ldw	r16,0(sp)
  832bf4:	dec00504 	addi	sp,sp,20
  832bf8:	f800283a 	ret
  832bfc:	040bc83a 	sub	r5,zero,r16
  832c00:	9009883a 	mov	r4,r18
  832c04:	08348d80 	call	8348d8 <_sbrk_r>
  832c08:	00ffffc4 	movi	r3,-1
  832c0c:	10c00d26 	beq	r2,r3,832c44 <_malloc_trim_r+0xe0>
  832c10:	00c021b4 	movhi	r3,134
  832c14:	18ee3404 	addi	r3,r3,-18224
  832c18:	18800017 	ldw	r2,0(r3)
  832c1c:	99000217 	ldw	r4,8(r19)
  832c20:	8c23c83a 	sub	r17,r17,r16
  832c24:	8c400054 	ori	r17,r17,1
  832c28:	1421c83a 	sub	r16,r2,r16
  832c2c:	24400115 	stw	r17,4(r4)
  832c30:	9009883a 	mov	r4,r18
  832c34:	1c000015 	stw	r16,0(r3)
  832c38:	084a54c0 	call	84a54c <__malloc_unlock>
  832c3c:	00800044 	movi	r2,1
  832c40:	003fe706 	br	832be0 <__alt_mem_epcs_flash_controller_0+0xff829be0>
  832c44:	000b883a 	mov	r5,zero
  832c48:	9009883a 	mov	r4,r18
  832c4c:	08348d80 	call	8348d8 <_sbrk_r>
  832c50:	99000217 	ldw	r4,8(r19)
  832c54:	014003c4 	movi	r5,15
  832c58:	1107c83a 	sub	r3,r2,r4
  832c5c:	28ffdd0e 	bge	r5,r3,832bd4 <__alt_mem_epcs_flash_controller_0+0xff829bd4>
  832c60:	014021b4 	movhi	r5,134
  832c64:	296db704 	addi	r5,r5,-18724
  832c68:	29400017 	ldw	r5,0(r5)
  832c6c:	18c00054 	ori	r3,r3,1
  832c70:	20c00115 	stw	r3,4(r4)
  832c74:	00c021b4 	movhi	r3,134
  832c78:	1145c83a 	sub	r2,r2,r5
  832c7c:	18ee3404 	addi	r3,r3,-18224
  832c80:	18800015 	stw	r2,0(r3)
  832c84:	003fd306 	br	832bd4 <__alt_mem_epcs_flash_controller_0+0xff829bd4>

00832c88 <_free_r>:
  832c88:	28004126 	beq	r5,zero,832d90 <_free_r+0x108>
  832c8c:	defffd04 	addi	sp,sp,-12
  832c90:	dc400115 	stw	r17,4(sp)
  832c94:	dc000015 	stw	r16,0(sp)
  832c98:	2023883a 	mov	r17,r4
  832c9c:	2821883a 	mov	r16,r5
  832ca0:	dfc00215 	stw	ra,8(sp)
  832ca4:	084a42c0 	call	84a42c <__malloc_lock>
  832ca8:	81ffff17 	ldw	r7,-4(r16)
  832cac:	00bfff84 	movi	r2,-2
  832cb0:	010021b4 	movhi	r4,134
  832cb4:	81bffe04 	addi	r6,r16,-8
  832cb8:	3884703a 	and	r2,r7,r2
  832cbc:	21273004 	addi	r4,r4,-25408
  832cc0:	308b883a 	add	r5,r6,r2
  832cc4:	2a400117 	ldw	r9,4(r5)
  832cc8:	22000217 	ldw	r8,8(r4)
  832ccc:	00ffff04 	movi	r3,-4
  832cd0:	48c6703a 	and	r3,r9,r3
  832cd4:	2a005726 	beq	r5,r8,832e34 <_free_r+0x1ac>
  832cd8:	28c00115 	stw	r3,4(r5)
  832cdc:	39c0004c 	andi	r7,r7,1
  832ce0:	3800091e 	bne	r7,zero,832d08 <_free_r+0x80>
  832ce4:	823ffe17 	ldw	r8,-8(r16)
  832ce8:	22400204 	addi	r9,r4,8
  832cec:	320dc83a 	sub	r6,r6,r8
  832cf0:	31c00217 	ldw	r7,8(r6)
  832cf4:	1205883a 	add	r2,r2,r8
  832cf8:	3a406526 	beq	r7,r9,832e90 <_free_r+0x208>
  832cfc:	32000317 	ldw	r8,12(r6)
  832d00:	3a000315 	stw	r8,12(r7)
  832d04:	41c00215 	stw	r7,8(r8)
  832d08:	28cf883a 	add	r7,r5,r3
  832d0c:	39c00117 	ldw	r7,4(r7)
  832d10:	39c0004c 	andi	r7,r7,1
  832d14:	38003a26 	beq	r7,zero,832e00 <_free_r+0x178>
  832d18:	10c00054 	ori	r3,r2,1
  832d1c:	30c00115 	stw	r3,4(r6)
  832d20:	3087883a 	add	r3,r6,r2
  832d24:	18800015 	stw	r2,0(r3)
  832d28:	00c07fc4 	movi	r3,511
  832d2c:	18801936 	bltu	r3,r2,832d94 <_free_r+0x10c>
  832d30:	1004d0fa 	srli	r2,r2,3
  832d34:	01c00044 	movi	r7,1
  832d38:	21400117 	ldw	r5,4(r4)
  832d3c:	10c00044 	addi	r3,r2,1
  832d40:	18c7883a 	add	r3,r3,r3
  832d44:	1005d0ba 	srai	r2,r2,2
  832d48:	18c7883a 	add	r3,r3,r3
  832d4c:	18c7883a 	add	r3,r3,r3
  832d50:	1907883a 	add	r3,r3,r4
  832d54:	3884983a 	sll	r2,r7,r2
  832d58:	19c00017 	ldw	r7,0(r3)
  832d5c:	1a3ffe04 	addi	r8,r3,-8
  832d60:	1144b03a 	or	r2,r2,r5
  832d64:	32000315 	stw	r8,12(r6)
  832d68:	31c00215 	stw	r7,8(r6)
  832d6c:	20800115 	stw	r2,4(r4)
  832d70:	19800015 	stw	r6,0(r3)
  832d74:	39800315 	stw	r6,12(r7)
  832d78:	8809883a 	mov	r4,r17
  832d7c:	dfc00217 	ldw	ra,8(sp)
  832d80:	dc400117 	ldw	r17,4(sp)
  832d84:	dc000017 	ldw	r16,0(sp)
  832d88:	dec00304 	addi	sp,sp,12
  832d8c:	084a54c1 	jmpi	84a54c <__malloc_unlock>
  832d90:	f800283a 	ret
  832d94:	100ad27a 	srli	r5,r2,9
  832d98:	00c00104 	movi	r3,4
  832d9c:	19404a36 	bltu	r3,r5,832ec8 <_free_r+0x240>
  832da0:	100ad1ba 	srli	r5,r2,6
  832da4:	28c00e44 	addi	r3,r5,57
  832da8:	18c7883a 	add	r3,r3,r3
  832dac:	29400e04 	addi	r5,r5,56
  832db0:	18c7883a 	add	r3,r3,r3
  832db4:	18c7883a 	add	r3,r3,r3
  832db8:	1909883a 	add	r4,r3,r4
  832dbc:	20c00017 	ldw	r3,0(r4)
  832dc0:	01c021b4 	movhi	r7,134
  832dc4:	213ffe04 	addi	r4,r4,-8
  832dc8:	39e73004 	addi	r7,r7,-25408
  832dcc:	20c04426 	beq	r4,r3,832ee0 <_free_r+0x258>
  832dd0:	01ffff04 	movi	r7,-4
  832dd4:	19400117 	ldw	r5,4(r3)
  832dd8:	29ca703a 	and	r5,r5,r7
  832ddc:	1140022e 	bgeu	r2,r5,832de8 <_free_r+0x160>
  832de0:	18c00217 	ldw	r3,8(r3)
  832de4:	20fffb1e 	bne	r4,r3,832dd4 <__alt_mem_epcs_flash_controller_0+0xff829dd4>
  832de8:	19000317 	ldw	r4,12(r3)
  832dec:	31000315 	stw	r4,12(r6)
  832df0:	30c00215 	stw	r3,8(r6)
  832df4:	21800215 	stw	r6,8(r4)
  832df8:	19800315 	stw	r6,12(r3)
  832dfc:	003fde06 	br	832d78 <__alt_mem_epcs_flash_controller_0+0xff829d78>
  832e00:	29c00217 	ldw	r7,8(r5)
  832e04:	10c5883a 	add	r2,r2,r3
  832e08:	00c021b4 	movhi	r3,134
  832e0c:	18e73204 	addi	r3,r3,-25400
  832e10:	38c03b26 	beq	r7,r3,832f00 <_free_r+0x278>
  832e14:	2a000317 	ldw	r8,12(r5)
  832e18:	11400054 	ori	r5,r2,1
  832e1c:	3087883a 	add	r3,r6,r2
  832e20:	3a000315 	stw	r8,12(r7)
  832e24:	41c00215 	stw	r7,8(r8)
  832e28:	31400115 	stw	r5,4(r6)
  832e2c:	18800015 	stw	r2,0(r3)
  832e30:	003fbd06 	br	832d28 <__alt_mem_epcs_flash_controller_0+0xff829d28>
  832e34:	39c0004c 	andi	r7,r7,1
  832e38:	10c5883a 	add	r2,r2,r3
  832e3c:	3800071e 	bne	r7,zero,832e5c <_free_r+0x1d4>
  832e40:	81fffe17 	ldw	r7,-8(r16)
  832e44:	31cdc83a 	sub	r6,r6,r7
  832e48:	30c00317 	ldw	r3,12(r6)
  832e4c:	31400217 	ldw	r5,8(r6)
  832e50:	11c5883a 	add	r2,r2,r7
  832e54:	28c00315 	stw	r3,12(r5)
  832e58:	19400215 	stw	r5,8(r3)
  832e5c:	10c00054 	ori	r3,r2,1
  832e60:	30c00115 	stw	r3,4(r6)
  832e64:	00c021b4 	movhi	r3,134
  832e68:	18edb804 	addi	r3,r3,-18720
  832e6c:	18c00017 	ldw	r3,0(r3)
  832e70:	21800215 	stw	r6,8(r4)
  832e74:	10ffc036 	bltu	r2,r3,832d78 <__alt_mem_epcs_flash_controller_0+0xff829d78>
  832e78:	008021b4 	movhi	r2,134
  832e7c:	10ae0f04 	addi	r2,r2,-18372
  832e80:	11400017 	ldw	r5,0(r2)
  832e84:	8809883a 	mov	r4,r17
  832e88:	0832b640 	call	832b64 <_malloc_trim_r>
  832e8c:	003fba06 	br	832d78 <__alt_mem_epcs_flash_controller_0+0xff829d78>
  832e90:	28c9883a 	add	r4,r5,r3
  832e94:	21000117 	ldw	r4,4(r4)
  832e98:	2100004c 	andi	r4,r4,1
  832e9c:	2000391e 	bne	r4,zero,832f84 <_free_r+0x2fc>
  832ea0:	29c00217 	ldw	r7,8(r5)
  832ea4:	29000317 	ldw	r4,12(r5)
  832ea8:	1885883a 	add	r2,r3,r2
  832eac:	10c00054 	ori	r3,r2,1
  832eb0:	39000315 	stw	r4,12(r7)
  832eb4:	21c00215 	stw	r7,8(r4)
  832eb8:	30c00115 	stw	r3,4(r6)
  832ebc:	308d883a 	add	r6,r6,r2
  832ec0:	30800015 	stw	r2,0(r6)
  832ec4:	003fac06 	br	832d78 <__alt_mem_epcs_flash_controller_0+0xff829d78>
  832ec8:	00c00504 	movi	r3,20
  832ecc:	19401536 	bltu	r3,r5,832f24 <_free_r+0x29c>
  832ed0:	28c01704 	addi	r3,r5,92
  832ed4:	18c7883a 	add	r3,r3,r3
  832ed8:	294016c4 	addi	r5,r5,91
  832edc:	003fb406 	br	832db0 <__alt_mem_epcs_flash_controller_0+0xff829db0>
  832ee0:	280bd0ba 	srai	r5,r5,2
  832ee4:	00c00044 	movi	r3,1
  832ee8:	38800117 	ldw	r2,4(r7)
  832eec:	194a983a 	sll	r5,r3,r5
  832ef0:	2007883a 	mov	r3,r4
  832ef4:	2884b03a 	or	r2,r5,r2
  832ef8:	38800115 	stw	r2,4(r7)
  832efc:	003fbb06 	br	832dec <__alt_mem_epcs_flash_controller_0+0xff829dec>
  832f00:	21800515 	stw	r6,20(r4)
  832f04:	21800415 	stw	r6,16(r4)
  832f08:	10c00054 	ori	r3,r2,1
  832f0c:	31c00315 	stw	r7,12(r6)
  832f10:	31c00215 	stw	r7,8(r6)
  832f14:	30c00115 	stw	r3,4(r6)
  832f18:	308d883a 	add	r6,r6,r2
  832f1c:	30800015 	stw	r2,0(r6)
  832f20:	003f9506 	br	832d78 <__alt_mem_epcs_flash_controller_0+0xff829d78>
  832f24:	00c01504 	movi	r3,84
  832f28:	19400536 	bltu	r3,r5,832f40 <_free_r+0x2b8>
  832f2c:	100ad33a 	srli	r5,r2,12
  832f30:	28c01bc4 	addi	r3,r5,111
  832f34:	18c7883a 	add	r3,r3,r3
  832f38:	29401b84 	addi	r5,r5,110
  832f3c:	003f9c06 	br	832db0 <__alt_mem_epcs_flash_controller_0+0xff829db0>
  832f40:	00c05504 	movi	r3,340
  832f44:	19400536 	bltu	r3,r5,832f5c <_free_r+0x2d4>
  832f48:	100ad3fa 	srli	r5,r2,15
  832f4c:	28c01e04 	addi	r3,r5,120
  832f50:	18c7883a 	add	r3,r3,r3
  832f54:	29401dc4 	addi	r5,r5,119
  832f58:	003f9506 	br	832db0 <__alt_mem_epcs_flash_controller_0+0xff829db0>
  832f5c:	00c15504 	movi	r3,1364
  832f60:	19400536 	bltu	r3,r5,832f78 <_free_r+0x2f0>
  832f64:	100ad4ba 	srli	r5,r2,18
  832f68:	28c01f44 	addi	r3,r5,125
  832f6c:	18c7883a 	add	r3,r3,r3
  832f70:	29401f04 	addi	r5,r5,124
  832f74:	003f8e06 	br	832db0 <__alt_mem_epcs_flash_controller_0+0xff829db0>
  832f78:	00c03f84 	movi	r3,254
  832f7c:	01401f84 	movi	r5,126
  832f80:	003f8b06 	br	832db0 <__alt_mem_epcs_flash_controller_0+0xff829db0>
  832f84:	10c00054 	ori	r3,r2,1
  832f88:	30c00115 	stw	r3,4(r6)
  832f8c:	308d883a 	add	r6,r6,r2
  832f90:	30800015 	stw	r2,0(r6)
  832f94:	003f7806 	br	832d78 <__alt_mem_epcs_flash_controller_0+0xff829d78>

00832f98 <_fseek_r>:
  832f98:	0832fb81 	jmpi	832fb8 <_fseeko_r>

00832f9c <fseek>:
  832f9c:	008021b4 	movhi	r2,134
  832fa0:	10adb604 	addi	r2,r2,-18728
  832fa4:	300f883a 	mov	r7,r6
  832fa8:	280d883a 	mov	r6,r5
  832fac:	200b883a 	mov	r5,r4
  832fb0:	11000017 	ldw	r4,0(r2)
  832fb4:	0832fb81 	jmpi	832fb8 <_fseeko_r>

00832fb8 <_fseeko_r>:
  832fb8:	deffe804 	addi	sp,sp,-96
  832fbc:	dd401415 	stw	r21,80(sp)
  832fc0:	dc801115 	stw	r18,68(sp)
  832fc4:	dc401015 	stw	r17,64(sp)
  832fc8:	dc000f15 	stw	r16,60(sp)
  832fcc:	dfc01715 	stw	ra,92(sp)
  832fd0:	ddc01615 	stw	r23,88(sp)
  832fd4:	dd801515 	stw	r22,84(sp)
  832fd8:	dd001315 	stw	r20,76(sp)
  832fdc:	dcc01215 	stw	r19,72(sp)
  832fe0:	2023883a 	mov	r17,r4
  832fe4:	2821883a 	mov	r16,r5
  832fe8:	302b883a 	mov	r21,r6
  832fec:	3825883a 	mov	r18,r7
  832ff0:	20000226 	beq	r4,zero,832ffc <_fseeko_r+0x44>
  832ff4:	20800e17 	ldw	r2,56(r4)
  832ff8:	10005a26 	beq	r2,zero,833164 <_fseeko_r+0x1ac>
  832ffc:	8080030b 	ldhu	r2,12(r16)
  833000:	00c04204 	movi	r3,264
  833004:	1080420c 	andi	r2,r2,264
  833008:	10c05b26 	beq	r2,r3,833178 <_fseeko_r+0x1c0>
  83300c:	85000a17 	ldw	r20,40(r16)
  833010:	a000f626 	beq	r20,zero,8333ec <_fseeko_r+0x434>
  833014:	00800044 	movi	r2,1
  833018:	90803e26 	beq	r18,r2,833114 <_fseeko_r+0x15c>
  83301c:	00800084 	movi	r2,2
  833020:	90801026 	beq	r18,r2,833064 <_fseeko_r+0xac>
  833024:	90000f26 	beq	r18,zero,833064 <_fseeko_r+0xac>
  833028:	00800584 	movi	r2,22
  83302c:	88800015 	stw	r2,0(r17)
  833030:	04ffffc4 	movi	r19,-1
  833034:	9805883a 	mov	r2,r19
  833038:	dfc01717 	ldw	ra,92(sp)
  83303c:	ddc01617 	ldw	r23,88(sp)
  833040:	dd801517 	ldw	r22,84(sp)
  833044:	dd401417 	ldw	r21,80(sp)
  833048:	dd001317 	ldw	r20,76(sp)
  83304c:	dcc01217 	ldw	r19,72(sp)
  833050:	dc801117 	ldw	r18,68(sp)
  833054:	dc401017 	ldw	r17,64(sp)
  833058:	dc000f17 	ldw	r16,60(sp)
  83305c:	dec01804 	addi	sp,sp,96
  833060:	f800283a 	ret
  833064:	80800417 	ldw	r2,16(r16)
  833068:	002f883a 	mov	r23,zero
  83306c:	0027883a 	mov	r19,zero
  833070:	1000cb26 	beq	r2,zero,8333a0 <_fseeko_r+0x3e8>
  833074:	8080030b 	ldhu	r2,12(r16)
  833078:	10c2068c 	andi	r3,r2,2074
  83307c:	1800071e 	bne	r3,zero,83309c <_fseeko_r+0xe4>
  833080:	10c1000c 	andi	r3,r2,1024
  833084:	1800451e 	bne	r3,zero,83319c <_fseeko_r+0x1e4>
  833088:	00c020f4 	movhi	r3,131
  83308c:	18d2ef04 	addi	r3,r3,19388
  833090:	a0c0b726 	beq	r20,r3,833370 <_fseeko_r+0x3b8>
  833094:	10820014 	ori	r2,r2,2048
  833098:	8080030d 	sth	r2,12(r16)
  83309c:	800b883a 	mov	r5,r16
  8330a0:	8809883a 	mov	r4,r17
  8330a4:	08323600 	call	832360 <_fflush_r>
  8330a8:	1027883a 	mov	r19,r2
  8330ac:	103fe01e 	bne	r2,zero,833030 <__alt_mem_epcs_flash_controller_0+0xff82a030>
  8330b0:	81400717 	ldw	r5,28(r16)
  8330b4:	900f883a 	mov	r7,r18
  8330b8:	a80d883a 	mov	r6,r21
  8330bc:	8809883a 	mov	r4,r17
  8330c0:	a03ee83a 	callr	r20
  8330c4:	00ffffc4 	movi	r3,-1
  8330c8:	10ffd926 	beq	r2,r3,833030 <__alt_mem_epcs_flash_controller_0+0xff82a030>
  8330cc:	81400c17 	ldw	r5,48(r16)
  8330d0:	28000526 	beq	r5,zero,8330e8 <_fseeko_r+0x130>
  8330d4:	80801004 	addi	r2,r16,64
  8330d8:	28800226 	beq	r5,r2,8330e4 <_fseeko_r+0x12c>
  8330dc:	8809883a 	mov	r4,r17
  8330e0:	0832c880 	call	832c88 <_free_r>
  8330e4:	80000c15 	stw	zero,48(r16)
  8330e8:	8080030b 	ldhu	r2,12(r16)
  8330ec:	80c00417 	ldw	r3,16(r16)
  8330f0:	80000115 	stw	zero,4(r16)
  8330f4:	10bdf7cc 	andi	r2,r2,63455
  8330f8:	80c00015 	stw	r3,0(r16)
  8330fc:	8080030d 	sth	r2,12(r16)
  833100:	01800204 	movi	r6,8
  833104:	000b883a 	mov	r5,zero
  833108:	81001704 	addi	r4,r16,92
  83310c:	08342980 	call	834298 <memset>
  833110:	003fc806 	br	833034 <__alt_mem_epcs_flash_controller_0+0xff82a034>
  833114:	800b883a 	mov	r5,r16
  833118:	8809883a 	mov	r4,r17
  83311c:	08323600 	call	832360 <_fflush_r>
  833120:	8080030b 	ldhu	r2,12(r16)
  833124:	10c4000c 	andi	r3,r2,4096
  833128:	18008726 	beq	r3,zero,833348 <_fseeko_r+0x390>
  83312c:	84c01417 	ldw	r19,80(r16)
  833130:	10c0010c 	andi	r3,r2,4
  833134:	1800431e 	bne	r3,zero,833244 <_fseeko_r+0x28c>
  833138:	1080020c 	andi	r2,r2,8
  83313c:	10008026 	beq	r2,zero,833340 <_fseeko_r+0x388>
  833140:	80c00017 	ldw	r3,0(r16)
  833144:	80800417 	ldw	r2,16(r16)
  833148:	18000226 	beq	r3,zero,833154 <_fseeko_r+0x19c>
  83314c:	1887c83a 	sub	r3,r3,r2
  833150:	98e7883a 	add	r19,r19,r3
  833154:	aceb883a 	add	r21,r21,r19
  833158:	05c00044 	movi	r23,1
  83315c:	0025883a 	mov	r18,zero
  833160:	003fc306 	br	833070 <__alt_mem_epcs_flash_controller_0+0xff82a070>
  833164:	083274c0 	call	83274c <__sinit>
  833168:	8080030b 	ldhu	r2,12(r16)
  83316c:	00c04204 	movi	r3,264
  833170:	1080420c 	andi	r2,r2,264
  833174:	10ffa51e 	bne	r2,r3,83300c <__alt_mem_epcs_flash_controller_0+0xff82a00c>
  833178:	800b883a 	mov	r5,r16
  83317c:	8809883a 	mov	r4,r17
  833180:	08323600 	call	832360 <_fflush_r>
  833184:	003fa106 	br	83300c <__alt_mem_epcs_flash_controller_0+0xff82a00c>
  833188:	8080030b 	ldhu	r2,12(r16)
  83318c:	00c10004 	movi	r3,1024
  833190:	80c01315 	stw	r3,76(r16)
  833194:	10c4b03a 	or	r2,r2,r3
  833198:	8080030d 	sth	r2,12(r16)
  83319c:	9000311e 	bne	r18,zero,833264 <_fseeko_r+0x2ac>
  8331a0:	a82d883a 	mov	r22,r21
  8331a4:	b800371e 	bne	r23,zero,833284 <_fseeko_r+0x2cc>
  8331a8:	8080030b 	ldhu	r2,12(r16)
  8331ac:	1084000c 	andi	r2,r2,4096
  8331b0:	10007f26 	beq	r2,zero,8333b0 <_fseeko_r+0x3f8>
  8331b4:	80801417 	ldw	r2,80(r16)
  8331b8:	81800117 	ldw	r6,4(r16)
  8331bc:	81400c17 	ldw	r5,48(r16)
  8331c0:	11a7c83a 	sub	r19,r2,r6
  8331c4:	28008226 	beq	r5,zero,8333d0 <_fseeko_r+0x418>
  8331c8:	81c00f17 	ldw	r7,60(r16)
  8331cc:	99e7c83a 	sub	r19,r19,r7
  8331d0:	81000e17 	ldw	r4,56(r16)
  8331d4:	80800417 	ldw	r2,16(r16)
  8331d8:	99a7883a 	add	r19,r19,r6
  8331dc:	2087c83a 	sub	r3,r4,r2
  8331e0:	98e7c83a 	sub	r19,r19,r3
  8331e4:	38c7883a 	add	r3,r7,r3
  8331e8:	b4c02b16 	blt	r22,r19,833298 <_fseeko_r+0x2e0>
  8331ec:	98c9883a 	add	r4,r19,r3
  8331f0:	b100292e 	bgeu	r22,r4,833298 <_fseeko_r+0x2e0>
  8331f4:	b4e7c83a 	sub	r19,r22,r19
  8331f8:	14c5883a 	add	r2,r2,r19
  8331fc:	1ce7c83a 	sub	r19,r3,r19
  833200:	80800015 	stw	r2,0(r16)
  833204:	84c00115 	stw	r19,4(r16)
  833208:	28000526 	beq	r5,zero,833220 <_fseeko_r+0x268>
  83320c:	80801004 	addi	r2,r16,64
  833210:	28800226 	beq	r5,r2,83321c <_fseeko_r+0x264>
  833214:	8809883a 	mov	r4,r17
  833218:	0832c880 	call	832c88 <_free_r>
  83321c:	80000c15 	stw	zero,48(r16)
  833220:	8080030b 	ldhu	r2,12(r16)
  833224:	01800204 	movi	r6,8
  833228:	000b883a 	mov	r5,zero
  83322c:	10bff7cc 	andi	r2,r2,65503
  833230:	8080030d 	sth	r2,12(r16)
  833234:	81001704 	addi	r4,r16,92
  833238:	08342980 	call	834298 <memset>
  83323c:	0027883a 	mov	r19,zero
  833240:	003f7c06 	br	833034 <__alt_mem_epcs_flash_controller_0+0xff82a034>
  833244:	80c00117 	ldw	r3,4(r16)
  833248:	80800c17 	ldw	r2,48(r16)
  83324c:	98e7c83a 	sub	r19,r19,r3
  833250:	10003b26 	beq	r2,zero,833340 <_fseeko_r+0x388>
  833254:	80c00f17 	ldw	r3,60(r16)
  833258:	80800417 	ldw	r2,16(r16)
  83325c:	98e7c83a 	sub	r19,r19,r3
  833260:	003fbc06 	br	833154 <__alt_mem_epcs_flash_controller_0+0xff82a154>
  833264:	8140038f 	ldh	r5,14(r16)
  833268:	d80d883a 	mov	r6,sp
  83326c:	8809883a 	mov	r4,r17
  833270:	08334180 	call	833418 <_fstat_r>
  833274:	103f891e 	bne	r2,zero,83309c <__alt_mem_epcs_flash_controller_0+0xff82a09c>
  833278:	dd800417 	ldw	r22,16(sp)
  83327c:	adad883a 	add	r22,r21,r22
  833280:	b83fc926 	beq	r23,zero,8331a8 <__alt_mem_epcs_flash_controller_0+0xff82a1a8>
  833284:	81400c17 	ldw	r5,48(r16)
  833288:	81800117 	ldw	r6,4(r16)
  83328c:	28005026 	beq	r5,zero,8333d0 <_fseeko_r+0x418>
  833290:	81c00f17 	ldw	r7,60(r16)
  833294:	003fce06 	br	8331d0 <__alt_mem_epcs_flash_controller_0+0xff82a1d0>
  833298:	84c01317 	ldw	r19,76(r16)
  83329c:	81400717 	ldw	r5,28(r16)
  8332a0:	000f883a 	mov	r7,zero
  8332a4:	04e7c83a 	sub	r19,zero,r19
  8332a8:	9da6703a 	and	r19,r19,r22
  8332ac:	980d883a 	mov	r6,r19
  8332b0:	8809883a 	mov	r4,r17
  8332b4:	a03ee83a 	callr	r20
  8332b8:	00ffffc4 	movi	r3,-1
  8332bc:	10ff7726 	beq	r2,r3,83309c <__alt_mem_epcs_flash_controller_0+0xff82a09c>
  8332c0:	80800417 	ldw	r2,16(r16)
  8332c4:	81400c17 	ldw	r5,48(r16)
  8332c8:	80000115 	stw	zero,4(r16)
  8332cc:	80800015 	stw	r2,0(r16)
  8332d0:	28000526 	beq	r5,zero,8332e8 <_fseeko_r+0x330>
  8332d4:	80801004 	addi	r2,r16,64
  8332d8:	28800226 	beq	r5,r2,8332e4 <_fseeko_r+0x32c>
  8332dc:	8809883a 	mov	r4,r17
  8332e0:	0832c880 	call	832c88 <_free_r>
  8332e4:	80000c15 	stw	zero,48(r16)
  8332e8:	8080030b 	ldhu	r2,12(r16)
  8332ec:	b4e7c83a 	sub	r19,r22,r19
  8332f0:	10bff7cc 	andi	r2,r2,65503
  8332f4:	8080030d 	sth	r2,12(r16)
  8332f8:	98000b26 	beq	r19,zero,833328 <_fseeko_r+0x370>
  8332fc:	800b883a 	mov	r5,r16
  833300:	8809883a 	mov	r4,r17
  833304:	08347040 	call	834704 <__srefill_r>
  833308:	103f641e 	bne	r2,zero,83309c <__alt_mem_epcs_flash_controller_0+0xff82a09c>
  83330c:	80800117 	ldw	r2,4(r16)
  833310:	14ff6236 	bltu	r2,r19,83309c <__alt_mem_epcs_flash_controller_0+0xff82a09c>
  833314:	80c00017 	ldw	r3,0(r16)
  833318:	14c5c83a 	sub	r2,r2,r19
  83331c:	80800115 	stw	r2,4(r16)
  833320:	1ce7883a 	add	r19,r3,r19
  833324:	84c00015 	stw	r19,0(r16)
  833328:	01800204 	movi	r6,8
  83332c:	000b883a 	mov	r5,zero
  833330:	81001704 	addi	r4,r16,92
  833334:	08342980 	call	834298 <memset>
  833338:	0027883a 	mov	r19,zero
  83333c:	003f3d06 	br	833034 <__alt_mem_epcs_flash_controller_0+0xff82a034>
  833340:	80800417 	ldw	r2,16(r16)
  833344:	003f8306 	br	833154 <__alt_mem_epcs_flash_controller_0+0xff82a154>
  833348:	81400717 	ldw	r5,28(r16)
  83334c:	900f883a 	mov	r7,r18
  833350:	000d883a 	mov	r6,zero
  833354:	8809883a 	mov	r4,r17
  833358:	a03ee83a 	callr	r20
  83335c:	1027883a 	mov	r19,r2
  833360:	00bfffc4 	movi	r2,-1
  833364:	98bf3226 	beq	r19,r2,833030 <__alt_mem_epcs_flash_controller_0+0xff82a030>
  833368:	8080030b 	ldhu	r2,12(r16)
  83336c:	003f7006 	br	833130 <__alt_mem_epcs_flash_controller_0+0xff82a130>
  833370:	8140038f 	ldh	r5,14(r16)
  833374:	283f4716 	blt	r5,zero,833094 <__alt_mem_epcs_flash_controller_0+0xff82a094>
  833378:	d80d883a 	mov	r6,sp
  83337c:	8809883a 	mov	r4,r17
  833380:	08334180 	call	833418 <_fstat_r>
  833384:	1000041e 	bne	r2,zero,833398 <_fseeko_r+0x3e0>
  833388:	d8800117 	ldw	r2,4(sp)
  83338c:	00e00014 	movui	r3,32768
  833390:	10bc000c 	andi	r2,r2,61440
  833394:	10ff7c26 	beq	r2,r3,833188 <__alt_mem_epcs_flash_controller_0+0xff82a188>
  833398:	8080030b 	ldhu	r2,12(r16)
  83339c:	003f3d06 	br	833094 <__alt_mem_epcs_flash_controller_0+0xff82a094>
  8333a0:	800b883a 	mov	r5,r16
  8333a4:	8809883a 	mov	r4,r17
  8333a8:	08337600 	call	833760 <__smakebuf_r>
  8333ac:	003f3106 	br	833074 <__alt_mem_epcs_flash_controller_0+0xff82a074>
  8333b0:	81400717 	ldw	r5,28(r16)
  8333b4:	01c00044 	movi	r7,1
  8333b8:	000d883a 	mov	r6,zero
  8333bc:	8809883a 	mov	r4,r17
  8333c0:	a03ee83a 	callr	r20
  8333c4:	00ffffc4 	movi	r3,-1
  8333c8:	10ff7b1e 	bne	r2,r3,8331b8 <__alt_mem_epcs_flash_controller_0+0xff82a1b8>
  8333cc:	003f3306 	br	83309c <__alt_mem_epcs_flash_controller_0+0xff82a09c>
  8333d0:	80c00017 	ldw	r3,0(r16)
  8333d4:	80800417 	ldw	r2,16(r16)
  8333d8:	000b883a 	mov	r5,zero
  8333dc:	1887c83a 	sub	r3,r3,r2
  8333e0:	98e7c83a 	sub	r19,r19,r3
  8333e4:	30c7883a 	add	r3,r6,r3
  8333e8:	003f7f06 	br	8331e8 <__alt_mem_epcs_flash_controller_0+0xff82a1e8>
  8333ec:	00800744 	movi	r2,29
  8333f0:	88800015 	stw	r2,0(r17)
  8333f4:	04ffffc4 	movi	r19,-1
  8333f8:	003f0e06 	br	833034 <__alt_mem_epcs_flash_controller_0+0xff82a034>

008333fc <fseeko>:
  8333fc:	008021b4 	movhi	r2,134
  833400:	10adb604 	addi	r2,r2,-18728
  833404:	300f883a 	mov	r7,r6
  833408:	280d883a 	mov	r6,r5
  83340c:	200b883a 	mov	r5,r4
  833410:	11000017 	ldw	r4,0(r2)
  833414:	0832fb81 	jmpi	832fb8 <_fseeko_r>

00833418 <_fstat_r>:
  833418:	defffd04 	addi	sp,sp,-12
  83341c:	2805883a 	mov	r2,r5
  833420:	dc000015 	stw	r16,0(sp)
  833424:	040021b4 	movhi	r16,134
  833428:	dc400115 	stw	r17,4(sp)
  83342c:	842e0c04 	addi	r16,r16,-18384
  833430:	2023883a 	mov	r17,r4
  833434:	300b883a 	mov	r5,r6
  833438:	1009883a 	mov	r4,r2
  83343c:	dfc00215 	stw	ra,8(sp)
  833440:	80000015 	stw	zero,0(r16)
  833444:	084960c0 	call	84960c <fstat>
  833448:	00ffffc4 	movi	r3,-1
  83344c:	10c00526 	beq	r2,r3,833464 <_fstat_r+0x4c>
  833450:	dfc00217 	ldw	ra,8(sp)
  833454:	dc400117 	ldw	r17,4(sp)
  833458:	dc000017 	ldw	r16,0(sp)
  83345c:	dec00304 	addi	sp,sp,12
  833460:	f800283a 	ret
  833464:	80c00017 	ldw	r3,0(r16)
  833468:	183ff926 	beq	r3,zero,833450 <__alt_mem_epcs_flash_controller_0+0xff82a450>
  83346c:	88c00015 	stw	r3,0(r17)
  833470:	003ff706 	br	833450 <__alt_mem_epcs_flash_controller_0+0xff82a450>

00833474 <_fwalk>:
  833474:	defff704 	addi	sp,sp,-36
  833478:	dd000415 	stw	r20,16(sp)
  83347c:	dfc00815 	stw	ra,32(sp)
  833480:	ddc00715 	stw	r23,28(sp)
  833484:	dd800615 	stw	r22,24(sp)
  833488:	dd400515 	stw	r21,20(sp)
  83348c:	dcc00315 	stw	r19,12(sp)
  833490:	dc800215 	stw	r18,8(sp)
  833494:	dc400115 	stw	r17,4(sp)
  833498:	dc000015 	stw	r16,0(sp)
  83349c:	2500b804 	addi	r20,r4,736
  8334a0:	a0002326 	beq	r20,zero,833530 <_fwalk+0xbc>
  8334a4:	282b883a 	mov	r21,r5
  8334a8:	002f883a 	mov	r23,zero
  8334ac:	05800044 	movi	r22,1
  8334b0:	04ffffc4 	movi	r19,-1
  8334b4:	a4400117 	ldw	r17,4(r20)
  8334b8:	a4800217 	ldw	r18,8(r20)
  8334bc:	8c7fffc4 	addi	r17,r17,-1
  8334c0:	88000d16 	blt	r17,zero,8334f8 <_fwalk+0x84>
  8334c4:	94000304 	addi	r16,r18,12
  8334c8:	94800384 	addi	r18,r18,14
  8334cc:	8080000b 	ldhu	r2,0(r16)
  8334d0:	8c7fffc4 	addi	r17,r17,-1
  8334d4:	813ffd04 	addi	r4,r16,-12
  8334d8:	b080042e 	bgeu	r22,r2,8334ec <_fwalk+0x78>
  8334dc:	9080000f 	ldh	r2,0(r18)
  8334e0:	14c00226 	beq	r2,r19,8334ec <_fwalk+0x78>
  8334e4:	a83ee83a 	callr	r21
  8334e8:	b8aeb03a 	or	r23,r23,r2
  8334ec:	84001a04 	addi	r16,r16,104
  8334f0:	94801a04 	addi	r18,r18,104
  8334f4:	8cfff51e 	bne	r17,r19,8334cc <__alt_mem_epcs_flash_controller_0+0xff82a4cc>
  8334f8:	a5000017 	ldw	r20,0(r20)
  8334fc:	a03fed1e 	bne	r20,zero,8334b4 <__alt_mem_epcs_flash_controller_0+0xff82a4b4>
  833500:	b805883a 	mov	r2,r23
  833504:	dfc00817 	ldw	ra,32(sp)
  833508:	ddc00717 	ldw	r23,28(sp)
  83350c:	dd800617 	ldw	r22,24(sp)
  833510:	dd400517 	ldw	r21,20(sp)
  833514:	dd000417 	ldw	r20,16(sp)
  833518:	dcc00317 	ldw	r19,12(sp)
  83351c:	dc800217 	ldw	r18,8(sp)
  833520:	dc400117 	ldw	r17,4(sp)
  833524:	dc000017 	ldw	r16,0(sp)
  833528:	dec00904 	addi	sp,sp,36
  83352c:	f800283a 	ret
  833530:	002f883a 	mov	r23,zero
  833534:	003ff206 	br	833500 <__alt_mem_epcs_flash_controller_0+0xff82a500>

00833538 <_fwalk_reent>:
  833538:	defff704 	addi	sp,sp,-36
  83353c:	dd000415 	stw	r20,16(sp)
  833540:	dfc00815 	stw	ra,32(sp)
  833544:	ddc00715 	stw	r23,28(sp)
  833548:	dd800615 	stw	r22,24(sp)
  83354c:	dd400515 	stw	r21,20(sp)
  833550:	dcc00315 	stw	r19,12(sp)
  833554:	dc800215 	stw	r18,8(sp)
  833558:	dc400115 	stw	r17,4(sp)
  83355c:	dc000015 	stw	r16,0(sp)
  833560:	2500b804 	addi	r20,r4,736
  833564:	a0002326 	beq	r20,zero,8335f4 <_fwalk_reent+0xbc>
  833568:	282b883a 	mov	r21,r5
  83356c:	2027883a 	mov	r19,r4
  833570:	002f883a 	mov	r23,zero
  833574:	05800044 	movi	r22,1
  833578:	04bfffc4 	movi	r18,-1
  83357c:	a4400117 	ldw	r17,4(r20)
  833580:	a4000217 	ldw	r16,8(r20)
  833584:	8c7fffc4 	addi	r17,r17,-1
  833588:	88000c16 	blt	r17,zero,8335bc <_fwalk_reent+0x84>
  83358c:	84000304 	addi	r16,r16,12
  833590:	8080000b 	ldhu	r2,0(r16)
  833594:	8c7fffc4 	addi	r17,r17,-1
  833598:	817ffd04 	addi	r5,r16,-12
  83359c:	b080052e 	bgeu	r22,r2,8335b4 <_fwalk_reent+0x7c>
  8335a0:	8080008f 	ldh	r2,2(r16)
  8335a4:	9809883a 	mov	r4,r19
  8335a8:	14800226 	beq	r2,r18,8335b4 <_fwalk_reent+0x7c>
  8335ac:	a83ee83a 	callr	r21
  8335b0:	b8aeb03a 	or	r23,r23,r2
  8335b4:	84001a04 	addi	r16,r16,104
  8335b8:	8cbff51e 	bne	r17,r18,833590 <__alt_mem_epcs_flash_controller_0+0xff82a590>
  8335bc:	a5000017 	ldw	r20,0(r20)
  8335c0:	a03fee1e 	bne	r20,zero,83357c <__alt_mem_epcs_flash_controller_0+0xff82a57c>
  8335c4:	b805883a 	mov	r2,r23
  8335c8:	dfc00817 	ldw	ra,32(sp)
  8335cc:	ddc00717 	ldw	r23,28(sp)
  8335d0:	dd800617 	ldw	r22,24(sp)
  8335d4:	dd400517 	ldw	r21,20(sp)
  8335d8:	dd000417 	ldw	r20,16(sp)
  8335dc:	dcc00317 	ldw	r19,12(sp)
  8335e0:	dc800217 	ldw	r18,8(sp)
  8335e4:	dc400117 	ldw	r17,4(sp)
  8335e8:	dc000017 	ldw	r16,0(sp)
  8335ec:	dec00904 	addi	sp,sp,36
  8335f0:	f800283a 	ret
  8335f4:	002f883a 	mov	r23,zero
  8335f8:	003ff206 	br	8335c4 <__alt_mem_epcs_flash_controller_0+0xff82a5c4>

008335fc <_findenv>:
  8335fc:	008021b4 	movhi	r2,134
  833600:	10adb604 	addi	r2,r2,-18728
  833604:	280d883a 	mov	r6,r5
  833608:	200b883a 	mov	r5,r4
  83360c:	11000017 	ldw	r4,0(r2)
  833610:	08336401 	jmpi	833640 <_findenv_r>

00833614 <getenv>:
  833614:	008021b4 	movhi	r2,134
  833618:	10adb604 	addi	r2,r2,-18728
  83361c:	200b883a 	mov	r5,r4
  833620:	11000017 	ldw	r4,0(r2)
  833624:	defffe04 	addi	sp,sp,-8
  833628:	d80d883a 	mov	r6,sp
  83362c:	dfc00115 	stw	ra,4(sp)
  833630:	08336400 	call	833640 <_findenv_r>
  833634:	dfc00117 	ldw	ra,4(sp)
  833638:	dec00204 	addi	sp,sp,8
  83363c:	f800283a 	ret

00833640 <_findenv_r>:
  833640:	defff704 	addi	sp,sp,-36
  833644:	dd000415 	stw	r20,16(sp)
  833648:	050021b4 	movhi	r20,134
  83364c:	a52dba04 	addi	r20,r20,-18712
  833650:	dd400515 	stw	r21,20(sp)
  833654:	dcc00315 	stw	r19,12(sp)
  833658:	dc800215 	stw	r18,8(sp)
  83365c:	dc000015 	stw	r16,0(sp)
  833660:	dfc00815 	stw	ra,32(sp)
  833664:	ddc00715 	stw	r23,28(sp)
  833668:	dd800615 	stw	r22,24(sp)
  83366c:	dc400115 	stw	r17,4(sp)
  833670:	202b883a 	mov	r21,r4
  833674:	2825883a 	mov	r18,r5
  833678:	3027883a 	mov	r19,r6
  83367c:	084a3080 	call	84a308 <__env_lock>
  833680:	a4000017 	ldw	r16,0(r20)
  833684:	80001726 	beq	r16,zero,8336e4 <_findenv_r+0xa4>
  833688:	90c00007 	ldb	r3,0(r18)
  83368c:	18002b26 	beq	r3,zero,83373c <_findenv_r+0xfc>
  833690:	9005883a 	mov	r2,r18
  833694:	01000f44 	movi	r4,61
  833698:	19001226 	beq	r3,r4,8336e4 <_findenv_r+0xa4>
  83369c:	10800044 	addi	r2,r2,1
  8336a0:	10c00007 	ldb	r3,0(r2)
  8336a4:	183ffc1e 	bne	r3,zero,833698 <__alt_mem_epcs_flash_controller_0+0xff82a698>
  8336a8:	14a3c83a 	sub	r17,r2,r18
  8336ac:	81000017 	ldw	r4,0(r16)
  8336b0:	20000c26 	beq	r4,zero,8336e4 <_findenv_r+0xa4>
  8336b4:	05c00f44 	movi	r23,61
  8336b8:	880d883a 	mov	r6,r17
  8336bc:	900b883a 	mov	r5,r18
  8336c0:	0834cb80 	call	834cb8 <strncmp>
  8336c4:	1000041e 	bne	r2,zero,8336d8 <_findenv_r+0x98>
  8336c8:	85800017 	ldw	r22,0(r16)
  8336cc:	b46d883a 	add	r22,r22,r17
  8336d0:	b0800007 	ldb	r2,0(r22)
  8336d4:	15c01126 	beq	r2,r23,83371c <_findenv_r+0xdc>
  8336d8:	84000104 	addi	r16,r16,4
  8336dc:	81000017 	ldw	r4,0(r16)
  8336e0:	203ff51e 	bne	r4,zero,8336b8 <__alt_mem_epcs_flash_controller_0+0xff82a6b8>
  8336e4:	a809883a 	mov	r4,r21
  8336e8:	084a3cc0 	call	84a3cc <__env_unlock>
  8336ec:	0005883a 	mov	r2,zero
  8336f0:	dfc00817 	ldw	ra,32(sp)
  8336f4:	ddc00717 	ldw	r23,28(sp)
  8336f8:	dd800617 	ldw	r22,24(sp)
  8336fc:	dd400517 	ldw	r21,20(sp)
  833700:	dd000417 	ldw	r20,16(sp)
  833704:	dcc00317 	ldw	r19,12(sp)
  833708:	dc800217 	ldw	r18,8(sp)
  83370c:	dc400117 	ldw	r17,4(sp)
  833710:	dc000017 	ldw	r16,0(sp)
  833714:	dec00904 	addi	sp,sp,36
  833718:	f800283a 	ret
  83371c:	a0800017 	ldw	r2,0(r20)
  833720:	a809883a 	mov	r4,r21
  833724:	80a1c83a 	sub	r16,r16,r2
  833728:	8021d0ba 	srai	r16,r16,2
  83372c:	9c000015 	stw	r16,0(r19)
  833730:	084a3cc0 	call	84a3cc <__env_unlock>
  833734:	b0800044 	addi	r2,r22,1
  833738:	003fed06 	br	8336f0 <__alt_mem_epcs_flash_controller_0+0xff82a6f0>
  83373c:	0023883a 	mov	r17,zero
  833740:	003fda06 	br	8336ac <__alt_mem_epcs_flash_controller_0+0xff82a6ac>

00833744 <_getenv_r>:
  833744:	defffe04 	addi	sp,sp,-8
  833748:	d80d883a 	mov	r6,sp
  83374c:	dfc00115 	stw	ra,4(sp)
  833750:	08336400 	call	833640 <_findenv_r>
  833754:	dfc00117 	ldw	ra,4(sp)
  833758:	dec00204 	addi	sp,sp,8
  83375c:	f800283a 	ret

00833760 <__smakebuf_r>:
  833760:	2880030b 	ldhu	r2,12(r5)
  833764:	10c0008c 	andi	r3,r2,2
  833768:	1800411e 	bne	r3,zero,833870 <__smakebuf_r+0x110>
  83376c:	deffec04 	addi	sp,sp,-80
  833770:	dc000f15 	stw	r16,60(sp)
  833774:	2821883a 	mov	r16,r5
  833778:	2940038f 	ldh	r5,14(r5)
  83377c:	dc401015 	stw	r17,64(sp)
  833780:	dfc01315 	stw	ra,76(sp)
  833784:	dcc01215 	stw	r19,72(sp)
  833788:	dc801115 	stw	r18,68(sp)
  83378c:	2023883a 	mov	r17,r4
  833790:	28001c16 	blt	r5,zero,833804 <__smakebuf_r+0xa4>
  833794:	d80d883a 	mov	r6,sp
  833798:	08334180 	call	833418 <_fstat_r>
  83379c:	10001816 	blt	r2,zero,833800 <__smakebuf_r+0xa0>
  8337a0:	d8800117 	ldw	r2,4(sp)
  8337a4:	00e00014 	movui	r3,32768
  8337a8:	10bc000c 	andi	r2,r2,61440
  8337ac:	14c80020 	cmpeqi	r19,r2,8192
  8337b0:	10c03726 	beq	r2,r3,833890 <__smakebuf_r+0x130>
  8337b4:	80c0030b 	ldhu	r3,12(r16)
  8337b8:	18c20014 	ori	r3,r3,2048
  8337bc:	80c0030d 	sth	r3,12(r16)
  8337c0:	00c80004 	movi	r3,8192
  8337c4:	10c0521e 	bne	r2,r3,833910 <__smakebuf_r+0x1b0>
  8337c8:	8140038f 	ldh	r5,14(r16)
  8337cc:	8809883a 	mov	r4,r17
  8337d0:	083d17c0 	call	83d17c <_isatty_r>
  8337d4:	10004c26 	beq	r2,zero,833908 <__smakebuf_r+0x1a8>
  8337d8:	8080030b 	ldhu	r2,12(r16)
  8337dc:	80c010c4 	addi	r3,r16,67
  8337e0:	80c00015 	stw	r3,0(r16)
  8337e4:	10800054 	ori	r2,r2,1
  8337e8:	8080030d 	sth	r2,12(r16)
  8337ec:	00800044 	movi	r2,1
  8337f0:	80c00415 	stw	r3,16(r16)
  8337f4:	80800515 	stw	r2,20(r16)
  8337f8:	04810004 	movi	r18,1024
  8337fc:	00000706 	br	83381c <__smakebuf_r+0xbc>
  833800:	8080030b 	ldhu	r2,12(r16)
  833804:	10c0200c 	andi	r3,r2,128
  833808:	18001f1e 	bne	r3,zero,833888 <__smakebuf_r+0x128>
  83380c:	04810004 	movi	r18,1024
  833810:	10820014 	ori	r2,r2,2048
  833814:	8080030d 	sth	r2,12(r16)
  833818:	0027883a 	mov	r19,zero
  83381c:	900b883a 	mov	r5,r18
  833820:	8809883a 	mov	r4,r17
  833824:	08339440 	call	833944 <_malloc_r>
  833828:	10002c26 	beq	r2,zero,8338dc <__smakebuf_r+0x17c>
  83382c:	80c0030b 	ldhu	r3,12(r16)
  833830:	010020f4 	movhi	r4,131
  833834:	2108fd04 	addi	r4,r4,9204
  833838:	89000f15 	stw	r4,60(r17)
  83383c:	18c02014 	ori	r3,r3,128
  833840:	80c0030d 	sth	r3,12(r16)
  833844:	80800015 	stw	r2,0(r16)
  833848:	80800415 	stw	r2,16(r16)
  83384c:	84800515 	stw	r18,20(r16)
  833850:	98001a1e 	bne	r19,zero,8338bc <__smakebuf_r+0x15c>
  833854:	dfc01317 	ldw	ra,76(sp)
  833858:	dcc01217 	ldw	r19,72(sp)
  83385c:	dc801117 	ldw	r18,68(sp)
  833860:	dc401017 	ldw	r17,64(sp)
  833864:	dc000f17 	ldw	r16,60(sp)
  833868:	dec01404 	addi	sp,sp,80
  83386c:	f800283a 	ret
  833870:	288010c4 	addi	r2,r5,67
  833874:	28800015 	stw	r2,0(r5)
  833878:	28800415 	stw	r2,16(r5)
  83387c:	00800044 	movi	r2,1
  833880:	28800515 	stw	r2,20(r5)
  833884:	f800283a 	ret
  833888:	04801004 	movi	r18,64
  83388c:	003fe006 	br	833810 <__alt_mem_epcs_flash_controller_0+0xff82a810>
  833890:	81000a17 	ldw	r4,40(r16)
  833894:	00c020f4 	movhi	r3,131
  833898:	18d2ef04 	addi	r3,r3,19388
  83389c:	20ffc51e 	bne	r4,r3,8337b4 <__alt_mem_epcs_flash_controller_0+0xff82a7b4>
  8338a0:	8080030b 	ldhu	r2,12(r16)
  8338a4:	04810004 	movi	r18,1024
  8338a8:	84801315 	stw	r18,76(r16)
  8338ac:	1484b03a 	or	r2,r2,r18
  8338b0:	8080030d 	sth	r2,12(r16)
  8338b4:	0027883a 	mov	r19,zero
  8338b8:	003fd806 	br	83381c <__alt_mem_epcs_flash_controller_0+0xff82a81c>
  8338bc:	8140038f 	ldh	r5,14(r16)
  8338c0:	8809883a 	mov	r4,r17
  8338c4:	083d17c0 	call	83d17c <_isatty_r>
  8338c8:	103fe226 	beq	r2,zero,833854 <__alt_mem_epcs_flash_controller_0+0xff82a854>
  8338cc:	8080030b 	ldhu	r2,12(r16)
  8338d0:	10800054 	ori	r2,r2,1
  8338d4:	8080030d 	sth	r2,12(r16)
  8338d8:	003fde06 	br	833854 <__alt_mem_epcs_flash_controller_0+0xff82a854>
  8338dc:	8080030b 	ldhu	r2,12(r16)
  8338e0:	10c0800c 	andi	r3,r2,512
  8338e4:	183fdb1e 	bne	r3,zero,833854 <__alt_mem_epcs_flash_controller_0+0xff82a854>
  8338e8:	10800094 	ori	r2,r2,2
  8338ec:	80c010c4 	addi	r3,r16,67
  8338f0:	8080030d 	sth	r2,12(r16)
  8338f4:	00800044 	movi	r2,1
  8338f8:	80c00015 	stw	r3,0(r16)
  8338fc:	80c00415 	stw	r3,16(r16)
  833900:	80800515 	stw	r2,20(r16)
  833904:	003fd306 	br	833854 <__alt_mem_epcs_flash_controller_0+0xff82a854>
  833908:	04810004 	movi	r18,1024
  83390c:	003fc306 	br	83381c <__alt_mem_epcs_flash_controller_0+0xff82a81c>
  833910:	0027883a 	mov	r19,zero
  833914:	04810004 	movi	r18,1024
  833918:	003fc006 	br	83381c <__alt_mem_epcs_flash_controller_0+0xff82a81c>

0083391c <malloc>:
  83391c:	008021b4 	movhi	r2,134
  833920:	10adb604 	addi	r2,r2,-18728
  833924:	200b883a 	mov	r5,r4
  833928:	11000017 	ldw	r4,0(r2)
  83392c:	08339441 	jmpi	833944 <_malloc_r>

00833930 <free>:
  833930:	008021b4 	movhi	r2,134
  833934:	10adb604 	addi	r2,r2,-18728
  833938:	200b883a 	mov	r5,r4
  83393c:	11000017 	ldw	r4,0(r2)
  833940:	0832c881 	jmpi	832c88 <_free_r>

00833944 <_malloc_r>:
  833944:	defff504 	addi	sp,sp,-44
  833948:	dc800315 	stw	r18,12(sp)
  83394c:	dfc00a15 	stw	ra,40(sp)
  833950:	df000915 	stw	fp,36(sp)
  833954:	ddc00815 	stw	r23,32(sp)
  833958:	dd800715 	stw	r22,28(sp)
  83395c:	dd400615 	stw	r21,24(sp)
  833960:	dd000515 	stw	r20,20(sp)
  833964:	dcc00415 	stw	r19,16(sp)
  833968:	dc400215 	stw	r17,8(sp)
  83396c:	dc000115 	stw	r16,4(sp)
  833970:	288002c4 	addi	r2,r5,11
  833974:	00c00584 	movi	r3,22
  833978:	2025883a 	mov	r18,r4
  83397c:	18807f2e 	bgeu	r3,r2,833b7c <_malloc_r+0x238>
  833980:	047ffe04 	movi	r17,-8
  833984:	1462703a 	and	r17,r2,r17
  833988:	8800a316 	blt	r17,zero,833c18 <_malloc_r+0x2d4>
  83398c:	8940a236 	bltu	r17,r5,833c18 <_malloc_r+0x2d4>
  833990:	084a42c0 	call	84a42c <__malloc_lock>
  833994:	00807dc4 	movi	r2,503
  833998:	1441e92e 	bgeu	r2,r17,834140 <_malloc_r+0x7fc>
  83399c:	8804d27a 	srli	r2,r17,9
  8339a0:	1000a126 	beq	r2,zero,833c28 <_malloc_r+0x2e4>
  8339a4:	00c00104 	movi	r3,4
  8339a8:	18811e36 	bltu	r3,r2,833e24 <_malloc_r+0x4e0>
  8339ac:	8804d1ba 	srli	r2,r17,6
  8339b0:	12000e44 	addi	r8,r2,57
  8339b4:	11c00e04 	addi	r7,r2,56
  8339b8:	4209883a 	add	r4,r8,r8
  8339bc:	04c021b4 	movhi	r19,134
  8339c0:	2109883a 	add	r4,r4,r4
  8339c4:	9ce73004 	addi	r19,r19,-25408
  8339c8:	2109883a 	add	r4,r4,r4
  8339cc:	9909883a 	add	r4,r19,r4
  8339d0:	24000117 	ldw	r16,4(r4)
  8339d4:	213ffe04 	addi	r4,r4,-8
  8339d8:	24009726 	beq	r4,r16,833c38 <_malloc_r+0x2f4>
  8339dc:	80800117 	ldw	r2,4(r16)
  8339e0:	01bfff04 	movi	r6,-4
  8339e4:	014003c4 	movi	r5,15
  8339e8:	1184703a 	and	r2,r2,r6
  8339ec:	1447c83a 	sub	r3,r2,r17
  8339f0:	28c00716 	blt	r5,r3,833a10 <_malloc_r+0xcc>
  8339f4:	1800920e 	bge	r3,zero,833c40 <_malloc_r+0x2fc>
  8339f8:	84000317 	ldw	r16,12(r16)
  8339fc:	24008e26 	beq	r4,r16,833c38 <_malloc_r+0x2f4>
  833a00:	80800117 	ldw	r2,4(r16)
  833a04:	1184703a 	and	r2,r2,r6
  833a08:	1447c83a 	sub	r3,r2,r17
  833a0c:	28fff90e 	bge	r5,r3,8339f4 <__alt_mem_epcs_flash_controller_0+0xff82a9f4>
  833a10:	3809883a 	mov	r4,r7
  833a14:	018021b4 	movhi	r6,134
  833a18:	9c000417 	ldw	r16,16(r19)
  833a1c:	31a73004 	addi	r6,r6,-25408
  833a20:	32000204 	addi	r8,r6,8
  833a24:	82013426 	beq	r16,r8,833ef8 <_malloc_r+0x5b4>
  833a28:	80c00117 	ldw	r3,4(r16)
  833a2c:	00bfff04 	movi	r2,-4
  833a30:	188e703a 	and	r7,r3,r2
  833a34:	3c45c83a 	sub	r2,r7,r17
  833a38:	00c003c4 	movi	r3,15
  833a3c:	18811f16 	blt	r3,r2,833ebc <_malloc_r+0x578>
  833a40:	32000515 	stw	r8,20(r6)
  833a44:	32000415 	stw	r8,16(r6)
  833a48:	10007f0e 	bge	r2,zero,833c48 <_malloc_r+0x304>
  833a4c:	00807fc4 	movi	r2,511
  833a50:	11c0fd36 	bltu	r2,r7,833e48 <_malloc_r+0x504>
  833a54:	3806d0fa 	srli	r3,r7,3
  833a58:	01c00044 	movi	r7,1
  833a5c:	30800117 	ldw	r2,4(r6)
  833a60:	19400044 	addi	r5,r3,1
  833a64:	294b883a 	add	r5,r5,r5
  833a68:	1807d0ba 	srai	r3,r3,2
  833a6c:	294b883a 	add	r5,r5,r5
  833a70:	294b883a 	add	r5,r5,r5
  833a74:	298b883a 	add	r5,r5,r6
  833a78:	38c6983a 	sll	r3,r7,r3
  833a7c:	29c00017 	ldw	r7,0(r5)
  833a80:	2a7ffe04 	addi	r9,r5,-8
  833a84:	1886b03a 	or	r3,r3,r2
  833a88:	82400315 	stw	r9,12(r16)
  833a8c:	81c00215 	stw	r7,8(r16)
  833a90:	30c00115 	stw	r3,4(r6)
  833a94:	2c000015 	stw	r16,0(r5)
  833a98:	3c000315 	stw	r16,12(r7)
  833a9c:	2005d0ba 	srai	r2,r4,2
  833aa0:	01400044 	movi	r5,1
  833aa4:	288a983a 	sll	r5,r5,r2
  833aa8:	19406f36 	bltu	r3,r5,833c68 <_malloc_r+0x324>
  833aac:	28c4703a 	and	r2,r5,r3
  833ab0:	10000a1e 	bne	r2,zero,833adc <_malloc_r+0x198>
  833ab4:	00bfff04 	movi	r2,-4
  833ab8:	294b883a 	add	r5,r5,r5
  833abc:	2088703a 	and	r4,r4,r2
  833ac0:	28c4703a 	and	r2,r5,r3
  833ac4:	21000104 	addi	r4,r4,4
  833ac8:	1000041e 	bne	r2,zero,833adc <_malloc_r+0x198>
  833acc:	294b883a 	add	r5,r5,r5
  833ad0:	28c4703a 	and	r2,r5,r3
  833ad4:	21000104 	addi	r4,r4,4
  833ad8:	103ffc26 	beq	r2,zero,833acc <__alt_mem_epcs_flash_controller_0+0xff82aacc>
  833adc:	02bfff04 	movi	r10,-4
  833ae0:	024003c4 	movi	r9,15
  833ae4:	21800044 	addi	r6,r4,1
  833ae8:	318d883a 	add	r6,r6,r6
  833aec:	318d883a 	add	r6,r6,r6
  833af0:	318d883a 	add	r6,r6,r6
  833af4:	998d883a 	add	r6,r19,r6
  833af8:	333ffe04 	addi	r12,r6,-8
  833afc:	2017883a 	mov	r11,r4
  833b00:	31800104 	addi	r6,r6,4
  833b04:	34000017 	ldw	r16,0(r6)
  833b08:	31fffd04 	addi	r7,r6,-12
  833b0c:	81c0041e 	bne	r16,r7,833b20 <_malloc_r+0x1dc>
  833b10:	0000fb06 	br	833f00 <_malloc_r+0x5bc>
  833b14:	1801030e 	bge	r3,zero,833f24 <_malloc_r+0x5e0>
  833b18:	84000317 	ldw	r16,12(r16)
  833b1c:	81c0f826 	beq	r16,r7,833f00 <_malloc_r+0x5bc>
  833b20:	80800117 	ldw	r2,4(r16)
  833b24:	1284703a 	and	r2,r2,r10
  833b28:	1447c83a 	sub	r3,r2,r17
  833b2c:	48fff90e 	bge	r9,r3,833b14 <__alt_mem_epcs_flash_controller_0+0xff82ab14>
  833b30:	80800317 	ldw	r2,12(r16)
  833b34:	81000217 	ldw	r4,8(r16)
  833b38:	89400054 	ori	r5,r17,1
  833b3c:	81400115 	stw	r5,4(r16)
  833b40:	20800315 	stw	r2,12(r4)
  833b44:	11000215 	stw	r4,8(r2)
  833b48:	8463883a 	add	r17,r16,r17
  833b4c:	9c400515 	stw	r17,20(r19)
  833b50:	9c400415 	stw	r17,16(r19)
  833b54:	18800054 	ori	r2,r3,1
  833b58:	88800115 	stw	r2,4(r17)
  833b5c:	8a000315 	stw	r8,12(r17)
  833b60:	8a000215 	stw	r8,8(r17)
  833b64:	88e3883a 	add	r17,r17,r3
  833b68:	88c00015 	stw	r3,0(r17)
  833b6c:	9009883a 	mov	r4,r18
  833b70:	084a54c0 	call	84a54c <__malloc_unlock>
  833b74:	80800204 	addi	r2,r16,8
  833b78:	00001b06 	br	833be8 <_malloc_r+0x2a4>
  833b7c:	04400404 	movi	r17,16
  833b80:	89402536 	bltu	r17,r5,833c18 <_malloc_r+0x2d4>
  833b84:	084a42c0 	call	84a42c <__malloc_lock>
  833b88:	00800184 	movi	r2,6
  833b8c:	01000084 	movi	r4,2
  833b90:	04c021b4 	movhi	r19,134
  833b94:	1085883a 	add	r2,r2,r2
  833b98:	9ce73004 	addi	r19,r19,-25408
  833b9c:	1085883a 	add	r2,r2,r2
  833ba0:	9885883a 	add	r2,r19,r2
  833ba4:	14000117 	ldw	r16,4(r2)
  833ba8:	10fffe04 	addi	r3,r2,-8
  833bac:	80c0d926 	beq	r16,r3,833f14 <_malloc_r+0x5d0>
  833bb0:	80c00117 	ldw	r3,4(r16)
  833bb4:	81000317 	ldw	r4,12(r16)
  833bb8:	00bfff04 	movi	r2,-4
  833bbc:	1884703a 	and	r2,r3,r2
  833bc0:	81400217 	ldw	r5,8(r16)
  833bc4:	8085883a 	add	r2,r16,r2
  833bc8:	10c00117 	ldw	r3,4(r2)
  833bcc:	29000315 	stw	r4,12(r5)
  833bd0:	21400215 	stw	r5,8(r4)
  833bd4:	18c00054 	ori	r3,r3,1
  833bd8:	10c00115 	stw	r3,4(r2)
  833bdc:	9009883a 	mov	r4,r18
  833be0:	084a54c0 	call	84a54c <__malloc_unlock>
  833be4:	80800204 	addi	r2,r16,8
  833be8:	dfc00a17 	ldw	ra,40(sp)
  833bec:	df000917 	ldw	fp,36(sp)
  833bf0:	ddc00817 	ldw	r23,32(sp)
  833bf4:	dd800717 	ldw	r22,28(sp)
  833bf8:	dd400617 	ldw	r21,24(sp)
  833bfc:	dd000517 	ldw	r20,20(sp)
  833c00:	dcc00417 	ldw	r19,16(sp)
  833c04:	dc800317 	ldw	r18,12(sp)
  833c08:	dc400217 	ldw	r17,8(sp)
  833c0c:	dc000117 	ldw	r16,4(sp)
  833c10:	dec00b04 	addi	sp,sp,44
  833c14:	f800283a 	ret
  833c18:	00800304 	movi	r2,12
  833c1c:	90800015 	stw	r2,0(r18)
  833c20:	0005883a 	mov	r2,zero
  833c24:	003ff006 	br	833be8 <__alt_mem_epcs_flash_controller_0+0xff82abe8>
  833c28:	01002004 	movi	r4,128
  833c2c:	02001004 	movi	r8,64
  833c30:	01c00fc4 	movi	r7,63
  833c34:	003f6106 	br	8339bc <__alt_mem_epcs_flash_controller_0+0xff82a9bc>
  833c38:	4009883a 	mov	r4,r8
  833c3c:	003f7506 	br	833a14 <__alt_mem_epcs_flash_controller_0+0xff82aa14>
  833c40:	81000317 	ldw	r4,12(r16)
  833c44:	003fde06 	br	833bc0 <__alt_mem_epcs_flash_controller_0+0xff82abc0>
  833c48:	81c5883a 	add	r2,r16,r7
  833c4c:	11400117 	ldw	r5,4(r2)
  833c50:	9009883a 	mov	r4,r18
  833c54:	29400054 	ori	r5,r5,1
  833c58:	11400115 	stw	r5,4(r2)
  833c5c:	084a54c0 	call	84a54c <__malloc_unlock>
  833c60:	80800204 	addi	r2,r16,8
  833c64:	003fe006 	br	833be8 <__alt_mem_epcs_flash_controller_0+0xff82abe8>
  833c68:	9c000217 	ldw	r16,8(r19)
  833c6c:	00bfff04 	movi	r2,-4
  833c70:	85800117 	ldw	r22,4(r16)
  833c74:	b0ac703a 	and	r22,r22,r2
  833c78:	b4400336 	bltu	r22,r17,833c88 <_malloc_r+0x344>
  833c7c:	b445c83a 	sub	r2,r22,r17
  833c80:	00c003c4 	movi	r3,15
  833c84:	18805d16 	blt	r3,r2,833dfc <_malloc_r+0x4b8>
  833c88:	05c021b4 	movhi	r23,134
  833c8c:	008021b4 	movhi	r2,134
  833c90:	10ae0f04 	addi	r2,r2,-18372
  833c94:	bdedb704 	addi	r23,r23,-18724
  833c98:	15400017 	ldw	r21,0(r2)
  833c9c:	b8c00017 	ldw	r3,0(r23)
  833ca0:	00bfffc4 	movi	r2,-1
  833ca4:	858d883a 	add	r6,r16,r22
  833ca8:	8d6b883a 	add	r21,r17,r21
  833cac:	1880ea26 	beq	r3,r2,834058 <_malloc_r+0x714>
  833cb0:	ad4403c4 	addi	r21,r21,4111
  833cb4:	00bc0004 	movi	r2,-4096
  833cb8:	a8aa703a 	and	r21,r21,r2
  833cbc:	a80b883a 	mov	r5,r21
  833cc0:	9009883a 	mov	r4,r18
  833cc4:	d9800015 	stw	r6,0(sp)
  833cc8:	08348d80 	call	8348d8 <_sbrk_r>
  833ccc:	1029883a 	mov	r20,r2
  833cd0:	00bfffc4 	movi	r2,-1
  833cd4:	d9800017 	ldw	r6,0(sp)
  833cd8:	a080e826 	beq	r20,r2,83407c <_malloc_r+0x738>
  833cdc:	a180a636 	bltu	r20,r6,833f78 <_malloc_r+0x634>
  833ce0:	070021b4 	movhi	fp,134
  833ce4:	e72e3404 	addi	fp,fp,-18224
  833ce8:	e0800017 	ldw	r2,0(fp)
  833cec:	a887883a 	add	r3,r21,r2
  833cf0:	e0c00015 	stw	r3,0(fp)
  833cf4:	3500e626 	beq	r6,r20,834090 <_malloc_r+0x74c>
  833cf8:	b9000017 	ldw	r4,0(r23)
  833cfc:	00bfffc4 	movi	r2,-1
  833d00:	2080ee26 	beq	r4,r2,8340bc <_malloc_r+0x778>
  833d04:	a185c83a 	sub	r2,r20,r6
  833d08:	10c5883a 	add	r2,r2,r3
  833d0c:	e0800015 	stw	r2,0(fp)
  833d10:	a0c001cc 	andi	r3,r20,7
  833d14:	1800bc26 	beq	r3,zero,834008 <_malloc_r+0x6c4>
  833d18:	a0e9c83a 	sub	r20,r20,r3
  833d1c:	00840204 	movi	r2,4104
  833d20:	a5000204 	addi	r20,r20,8
  833d24:	10c7c83a 	sub	r3,r2,r3
  833d28:	a545883a 	add	r2,r20,r21
  833d2c:	1083ffcc 	andi	r2,r2,4095
  833d30:	18abc83a 	sub	r21,r3,r2
  833d34:	a80b883a 	mov	r5,r21
  833d38:	9009883a 	mov	r4,r18
  833d3c:	08348d80 	call	8348d8 <_sbrk_r>
  833d40:	00ffffc4 	movi	r3,-1
  833d44:	10c0e126 	beq	r2,r3,8340cc <_malloc_r+0x788>
  833d48:	1505c83a 	sub	r2,r2,r20
  833d4c:	1545883a 	add	r2,r2,r21
  833d50:	10800054 	ori	r2,r2,1
  833d54:	e0c00017 	ldw	r3,0(fp)
  833d58:	9d000215 	stw	r20,8(r19)
  833d5c:	a0800115 	stw	r2,4(r20)
  833d60:	a8c7883a 	add	r3,r21,r3
  833d64:	e0c00015 	stw	r3,0(fp)
  833d68:	84c00e26 	beq	r16,r19,833da4 <_malloc_r+0x460>
  833d6c:	018003c4 	movi	r6,15
  833d70:	3580a72e 	bgeu	r6,r22,834010 <_malloc_r+0x6cc>
  833d74:	81400117 	ldw	r5,4(r16)
  833d78:	013ffe04 	movi	r4,-8
  833d7c:	b0bffd04 	addi	r2,r22,-12
  833d80:	1104703a 	and	r2,r2,r4
  833d84:	2900004c 	andi	r4,r5,1
  833d88:	2088b03a 	or	r4,r4,r2
  833d8c:	81000115 	stw	r4,4(r16)
  833d90:	01400144 	movi	r5,5
  833d94:	8089883a 	add	r4,r16,r2
  833d98:	21400115 	stw	r5,4(r4)
  833d9c:	21400215 	stw	r5,8(r4)
  833da0:	3080cd36 	bltu	r6,r2,8340d8 <_malloc_r+0x794>
  833da4:	008021b4 	movhi	r2,134
  833da8:	10ae0e04 	addi	r2,r2,-18376
  833dac:	11000017 	ldw	r4,0(r2)
  833db0:	20c0012e 	bgeu	r4,r3,833db8 <_malloc_r+0x474>
  833db4:	10c00015 	stw	r3,0(r2)
  833db8:	008021b4 	movhi	r2,134
  833dbc:	10ae0d04 	addi	r2,r2,-18380
  833dc0:	11000017 	ldw	r4,0(r2)
  833dc4:	9c000217 	ldw	r16,8(r19)
  833dc8:	20c0012e 	bgeu	r4,r3,833dd0 <_malloc_r+0x48c>
  833dcc:	10c00015 	stw	r3,0(r2)
  833dd0:	80c00117 	ldw	r3,4(r16)
  833dd4:	00bfff04 	movi	r2,-4
  833dd8:	1886703a 	and	r3,r3,r2
  833ddc:	1c45c83a 	sub	r2,r3,r17
  833de0:	1c400236 	bltu	r3,r17,833dec <_malloc_r+0x4a8>
  833de4:	00c003c4 	movi	r3,15
  833de8:	18800416 	blt	r3,r2,833dfc <_malloc_r+0x4b8>
  833dec:	9009883a 	mov	r4,r18
  833df0:	084a54c0 	call	84a54c <__malloc_unlock>
  833df4:	0005883a 	mov	r2,zero
  833df8:	003f7b06 	br	833be8 <__alt_mem_epcs_flash_controller_0+0xff82abe8>
  833dfc:	88c00054 	ori	r3,r17,1
  833e00:	80c00115 	stw	r3,4(r16)
  833e04:	8463883a 	add	r17,r16,r17
  833e08:	10800054 	ori	r2,r2,1
  833e0c:	9c400215 	stw	r17,8(r19)
  833e10:	88800115 	stw	r2,4(r17)
  833e14:	9009883a 	mov	r4,r18
  833e18:	084a54c0 	call	84a54c <__malloc_unlock>
  833e1c:	80800204 	addi	r2,r16,8
  833e20:	003f7106 	br	833be8 <__alt_mem_epcs_flash_controller_0+0xff82abe8>
  833e24:	00c00504 	movi	r3,20
  833e28:	18804a2e 	bgeu	r3,r2,833f54 <_malloc_r+0x610>
  833e2c:	00c01504 	movi	r3,84
  833e30:	18806e36 	bltu	r3,r2,833fec <_malloc_r+0x6a8>
  833e34:	8804d33a 	srli	r2,r17,12
  833e38:	12001bc4 	addi	r8,r2,111
  833e3c:	11c01b84 	addi	r7,r2,110
  833e40:	4209883a 	add	r4,r8,r8
  833e44:	003edd06 	br	8339bc <__alt_mem_epcs_flash_controller_0+0xff82a9bc>
  833e48:	3804d27a 	srli	r2,r7,9
  833e4c:	00c00104 	movi	r3,4
  833e50:	1880442e 	bgeu	r3,r2,833f64 <_malloc_r+0x620>
  833e54:	00c00504 	movi	r3,20
  833e58:	18808136 	bltu	r3,r2,834060 <_malloc_r+0x71c>
  833e5c:	11401704 	addi	r5,r2,92
  833e60:	10c016c4 	addi	r3,r2,91
  833e64:	294b883a 	add	r5,r5,r5
  833e68:	294b883a 	add	r5,r5,r5
  833e6c:	294b883a 	add	r5,r5,r5
  833e70:	994b883a 	add	r5,r19,r5
  833e74:	28800017 	ldw	r2,0(r5)
  833e78:	018021b4 	movhi	r6,134
  833e7c:	297ffe04 	addi	r5,r5,-8
  833e80:	31a73004 	addi	r6,r6,-25408
  833e84:	28806526 	beq	r5,r2,83401c <_malloc_r+0x6d8>
  833e88:	01bfff04 	movi	r6,-4
  833e8c:	10c00117 	ldw	r3,4(r2)
  833e90:	1986703a 	and	r3,r3,r6
  833e94:	38c0022e 	bgeu	r7,r3,833ea0 <_malloc_r+0x55c>
  833e98:	10800217 	ldw	r2,8(r2)
  833e9c:	28bffb1e 	bne	r5,r2,833e8c <__alt_mem_epcs_flash_controller_0+0xff82ae8c>
  833ea0:	11400317 	ldw	r5,12(r2)
  833ea4:	98c00117 	ldw	r3,4(r19)
  833ea8:	81400315 	stw	r5,12(r16)
  833eac:	80800215 	stw	r2,8(r16)
  833eb0:	2c000215 	stw	r16,8(r5)
  833eb4:	14000315 	stw	r16,12(r2)
  833eb8:	003ef806 	br	833a9c <__alt_mem_epcs_flash_controller_0+0xff82aa9c>
  833ebc:	88c00054 	ori	r3,r17,1
  833ec0:	80c00115 	stw	r3,4(r16)
  833ec4:	8463883a 	add	r17,r16,r17
  833ec8:	34400515 	stw	r17,20(r6)
  833ecc:	34400415 	stw	r17,16(r6)
  833ed0:	10c00054 	ori	r3,r2,1
  833ed4:	8a000315 	stw	r8,12(r17)
  833ed8:	8a000215 	stw	r8,8(r17)
  833edc:	88c00115 	stw	r3,4(r17)
  833ee0:	88a3883a 	add	r17,r17,r2
  833ee4:	88800015 	stw	r2,0(r17)
  833ee8:	9009883a 	mov	r4,r18
  833eec:	084a54c0 	call	84a54c <__malloc_unlock>
  833ef0:	80800204 	addi	r2,r16,8
  833ef4:	003f3c06 	br	833be8 <__alt_mem_epcs_flash_controller_0+0xff82abe8>
  833ef8:	30c00117 	ldw	r3,4(r6)
  833efc:	003ee706 	br	833a9c <__alt_mem_epcs_flash_controller_0+0xff82aa9c>
  833f00:	5ac00044 	addi	r11,r11,1
  833f04:	588000cc 	andi	r2,r11,3
  833f08:	31800204 	addi	r6,r6,8
  833f0c:	103efd1e 	bne	r2,zero,833b04 <__alt_mem_epcs_flash_controller_0+0xff82ab04>
  833f10:	00002406 	br	833fa4 <_malloc_r+0x660>
  833f14:	14000317 	ldw	r16,12(r2)
  833f18:	143f251e 	bne	r2,r16,833bb0 <__alt_mem_epcs_flash_controller_0+0xff82abb0>
  833f1c:	21000084 	addi	r4,r4,2
  833f20:	003ebc06 	br	833a14 <__alt_mem_epcs_flash_controller_0+0xff82aa14>
  833f24:	8085883a 	add	r2,r16,r2
  833f28:	10c00117 	ldw	r3,4(r2)
  833f2c:	81000317 	ldw	r4,12(r16)
  833f30:	81400217 	ldw	r5,8(r16)
  833f34:	18c00054 	ori	r3,r3,1
  833f38:	10c00115 	stw	r3,4(r2)
  833f3c:	29000315 	stw	r4,12(r5)
  833f40:	21400215 	stw	r5,8(r4)
  833f44:	9009883a 	mov	r4,r18
  833f48:	084a54c0 	call	84a54c <__malloc_unlock>
  833f4c:	80800204 	addi	r2,r16,8
  833f50:	003f2506 	br	833be8 <__alt_mem_epcs_flash_controller_0+0xff82abe8>
  833f54:	12001704 	addi	r8,r2,92
  833f58:	11c016c4 	addi	r7,r2,91
  833f5c:	4209883a 	add	r4,r8,r8
  833f60:	003e9606 	br	8339bc <__alt_mem_epcs_flash_controller_0+0xff82a9bc>
  833f64:	3804d1ba 	srli	r2,r7,6
  833f68:	11400e44 	addi	r5,r2,57
  833f6c:	10c00e04 	addi	r3,r2,56
  833f70:	294b883a 	add	r5,r5,r5
  833f74:	003fbc06 	br	833e68 <__alt_mem_epcs_flash_controller_0+0xff82ae68>
  833f78:	84ff5926 	beq	r16,r19,833ce0 <__alt_mem_epcs_flash_controller_0+0xff82ace0>
  833f7c:	008021b4 	movhi	r2,134
  833f80:	10a73004 	addi	r2,r2,-25408
  833f84:	14000217 	ldw	r16,8(r2)
  833f88:	00bfff04 	movi	r2,-4
  833f8c:	80c00117 	ldw	r3,4(r16)
  833f90:	1886703a 	and	r3,r3,r2
  833f94:	003f9106 	br	833ddc <__alt_mem_epcs_flash_controller_0+0xff82addc>
  833f98:	60800217 	ldw	r2,8(r12)
  833f9c:	213fffc4 	addi	r4,r4,-1
  833fa0:	1300651e 	bne	r2,r12,834138 <_malloc_r+0x7f4>
  833fa4:	208000cc 	andi	r2,r4,3
  833fa8:	633ffe04 	addi	r12,r12,-8
  833fac:	103ffa1e 	bne	r2,zero,833f98 <__alt_mem_epcs_flash_controller_0+0xff82af98>
  833fb0:	98800117 	ldw	r2,4(r19)
  833fb4:	0146303a 	nor	r3,zero,r5
  833fb8:	1884703a 	and	r2,r3,r2
  833fbc:	98800115 	stw	r2,4(r19)
  833fc0:	294b883a 	add	r5,r5,r5
  833fc4:	117f2836 	bltu	r2,r5,833c68 <__alt_mem_epcs_flash_controller_0+0xff82ac68>
  833fc8:	283f2726 	beq	r5,zero,833c68 <__alt_mem_epcs_flash_controller_0+0xff82ac68>
  833fcc:	2886703a 	and	r3,r5,r2
  833fd0:	5809883a 	mov	r4,r11
  833fd4:	183ec31e 	bne	r3,zero,833ae4 <__alt_mem_epcs_flash_controller_0+0xff82aae4>
  833fd8:	294b883a 	add	r5,r5,r5
  833fdc:	2886703a 	and	r3,r5,r2
  833fe0:	21000104 	addi	r4,r4,4
  833fe4:	183ffc26 	beq	r3,zero,833fd8 <__alt_mem_epcs_flash_controller_0+0xff82afd8>
  833fe8:	003ebe06 	br	833ae4 <__alt_mem_epcs_flash_controller_0+0xff82aae4>
  833fec:	00c05504 	movi	r3,340
  833ff0:	18801236 	bltu	r3,r2,83403c <_malloc_r+0x6f8>
  833ff4:	8804d3fa 	srli	r2,r17,15
  833ff8:	12001e04 	addi	r8,r2,120
  833ffc:	11c01dc4 	addi	r7,r2,119
  834000:	4209883a 	add	r4,r8,r8
  834004:	003e6d06 	br	8339bc <__alt_mem_epcs_flash_controller_0+0xff82a9bc>
  834008:	00c40004 	movi	r3,4096
  83400c:	003f4606 	br	833d28 <__alt_mem_epcs_flash_controller_0+0xff82ad28>
  834010:	00800044 	movi	r2,1
  834014:	a0800115 	stw	r2,4(r20)
  834018:	003f7406 	br	833dec <__alt_mem_epcs_flash_controller_0+0xff82adec>
  83401c:	1805d0ba 	srai	r2,r3,2
  834020:	01c00044 	movi	r7,1
  834024:	30c00117 	ldw	r3,4(r6)
  834028:	388e983a 	sll	r7,r7,r2
  83402c:	2805883a 	mov	r2,r5
  834030:	38c6b03a 	or	r3,r7,r3
  834034:	30c00115 	stw	r3,4(r6)
  834038:	003f9b06 	br	833ea8 <__alt_mem_epcs_flash_controller_0+0xff82aea8>
  83403c:	00c15504 	movi	r3,1364
  834040:	18801a36 	bltu	r3,r2,8340ac <_malloc_r+0x768>
  834044:	8804d4ba 	srli	r2,r17,18
  834048:	12001f44 	addi	r8,r2,125
  83404c:	11c01f04 	addi	r7,r2,124
  834050:	4209883a 	add	r4,r8,r8
  834054:	003e5906 	br	8339bc <__alt_mem_epcs_flash_controller_0+0xff82a9bc>
  834058:	ad400404 	addi	r21,r21,16
  83405c:	003f1706 	br	833cbc <__alt_mem_epcs_flash_controller_0+0xff82acbc>
  834060:	00c01504 	movi	r3,84
  834064:	18802336 	bltu	r3,r2,8340f4 <_malloc_r+0x7b0>
  834068:	3804d33a 	srli	r2,r7,12
  83406c:	11401bc4 	addi	r5,r2,111
  834070:	10c01b84 	addi	r3,r2,110
  834074:	294b883a 	add	r5,r5,r5
  834078:	003f7b06 	br	833e68 <__alt_mem_epcs_flash_controller_0+0xff82ae68>
  83407c:	9c000217 	ldw	r16,8(r19)
  834080:	00bfff04 	movi	r2,-4
  834084:	80c00117 	ldw	r3,4(r16)
  834088:	1886703a 	and	r3,r3,r2
  83408c:	003f5306 	br	833ddc <__alt_mem_epcs_flash_controller_0+0xff82addc>
  834090:	3083ffcc 	andi	r2,r6,4095
  834094:	103f181e 	bne	r2,zero,833cf8 <__alt_mem_epcs_flash_controller_0+0xff82acf8>
  834098:	99000217 	ldw	r4,8(r19)
  83409c:	b545883a 	add	r2,r22,r21
  8340a0:	10800054 	ori	r2,r2,1
  8340a4:	20800115 	stw	r2,4(r4)
  8340a8:	003f3e06 	br	833da4 <__alt_mem_epcs_flash_controller_0+0xff82ada4>
  8340ac:	01003f84 	movi	r4,254
  8340b0:	02001fc4 	movi	r8,127
  8340b4:	01c01f84 	movi	r7,126
  8340b8:	003e4006 	br	8339bc <__alt_mem_epcs_flash_controller_0+0xff82a9bc>
  8340bc:	008021b4 	movhi	r2,134
  8340c0:	10adb704 	addi	r2,r2,-18724
  8340c4:	15000015 	stw	r20,0(r2)
  8340c8:	003f1106 	br	833d10 <__alt_mem_epcs_flash_controller_0+0xff82ad10>
  8340cc:	00800044 	movi	r2,1
  8340d0:	002b883a 	mov	r21,zero
  8340d4:	003f1f06 	br	833d54 <__alt_mem_epcs_flash_controller_0+0xff82ad54>
  8340d8:	81400204 	addi	r5,r16,8
  8340dc:	9009883a 	mov	r4,r18
  8340e0:	0832c880 	call	832c88 <_free_r>
  8340e4:	008021b4 	movhi	r2,134
  8340e8:	10ae3404 	addi	r2,r2,-18224
  8340ec:	10c00017 	ldw	r3,0(r2)
  8340f0:	003f2c06 	br	833da4 <__alt_mem_epcs_flash_controller_0+0xff82ada4>
  8340f4:	00c05504 	movi	r3,340
  8340f8:	18800536 	bltu	r3,r2,834110 <_malloc_r+0x7cc>
  8340fc:	3804d3fa 	srli	r2,r7,15
  834100:	11401e04 	addi	r5,r2,120
  834104:	10c01dc4 	addi	r3,r2,119
  834108:	294b883a 	add	r5,r5,r5
  83410c:	003f5606 	br	833e68 <__alt_mem_epcs_flash_controller_0+0xff82ae68>
  834110:	00c15504 	movi	r3,1364
  834114:	18800536 	bltu	r3,r2,83412c <_malloc_r+0x7e8>
  834118:	3804d4ba 	srli	r2,r7,18
  83411c:	11401f44 	addi	r5,r2,125
  834120:	10c01f04 	addi	r3,r2,124
  834124:	294b883a 	add	r5,r5,r5
  834128:	003f4f06 	br	833e68 <__alt_mem_epcs_flash_controller_0+0xff82ae68>
  83412c:	01403f84 	movi	r5,254
  834130:	00c01f84 	movi	r3,126
  834134:	003f4c06 	br	833e68 <__alt_mem_epcs_flash_controller_0+0xff82ae68>
  834138:	98800117 	ldw	r2,4(r19)
  83413c:	003fa006 	br	833fc0 <__alt_mem_epcs_flash_controller_0+0xff82afc0>
  834140:	8808d0fa 	srli	r4,r17,3
  834144:	20800044 	addi	r2,r4,1
  834148:	1085883a 	add	r2,r2,r2
  83414c:	003e9006 	br	833b90 <__alt_mem_epcs_flash_controller_0+0xff82ab90>

00834150 <memcpy>:
  834150:	defffd04 	addi	sp,sp,-12
  834154:	dfc00215 	stw	ra,8(sp)
  834158:	dc400115 	stw	r17,4(sp)
  83415c:	dc000015 	stw	r16,0(sp)
  834160:	00c003c4 	movi	r3,15
  834164:	2005883a 	mov	r2,r4
  834168:	1980452e 	bgeu	r3,r6,834280 <memcpy+0x130>
  83416c:	2906b03a 	or	r3,r5,r4
  834170:	18c000cc 	andi	r3,r3,3
  834174:	1800441e 	bne	r3,zero,834288 <memcpy+0x138>
  834178:	347ffc04 	addi	r17,r6,-16
  83417c:	8822d13a 	srli	r17,r17,4
  834180:	28c00104 	addi	r3,r5,4
  834184:	23400104 	addi	r13,r4,4
  834188:	8820913a 	slli	r16,r17,4
  83418c:	2b000204 	addi	r12,r5,8
  834190:	22c00204 	addi	r11,r4,8
  834194:	84000504 	addi	r16,r16,20
  834198:	2a800304 	addi	r10,r5,12
  83419c:	22400304 	addi	r9,r4,12
  8341a0:	2c21883a 	add	r16,r5,r16
  8341a4:	2811883a 	mov	r8,r5
  8341a8:	200f883a 	mov	r7,r4
  8341ac:	41000017 	ldw	r4,0(r8)
  8341b0:	1fc00017 	ldw	ra,0(r3)
  8341b4:	63c00017 	ldw	r15,0(r12)
  8341b8:	39000015 	stw	r4,0(r7)
  8341bc:	53800017 	ldw	r14,0(r10)
  8341c0:	6fc00015 	stw	ra,0(r13)
  8341c4:	5bc00015 	stw	r15,0(r11)
  8341c8:	4b800015 	stw	r14,0(r9)
  8341cc:	18c00404 	addi	r3,r3,16
  8341d0:	39c00404 	addi	r7,r7,16
  8341d4:	42000404 	addi	r8,r8,16
  8341d8:	6b400404 	addi	r13,r13,16
  8341dc:	63000404 	addi	r12,r12,16
  8341e0:	5ac00404 	addi	r11,r11,16
  8341e4:	52800404 	addi	r10,r10,16
  8341e8:	4a400404 	addi	r9,r9,16
  8341ec:	1c3fef1e 	bne	r3,r16,8341ac <__alt_mem_epcs_flash_controller_0+0xff82b1ac>
  8341f0:	89c00044 	addi	r7,r17,1
  8341f4:	380e913a 	slli	r7,r7,4
  8341f8:	310003cc 	andi	r4,r6,15
  8341fc:	02c000c4 	movi	r11,3
  834200:	11c7883a 	add	r3,r2,r7
  834204:	29cb883a 	add	r5,r5,r7
  834208:	5900212e 	bgeu	r11,r4,834290 <memcpy+0x140>
  83420c:	1813883a 	mov	r9,r3
  834210:	2811883a 	mov	r8,r5
  834214:	200f883a 	mov	r7,r4
  834218:	42800017 	ldw	r10,0(r8)
  83421c:	4a400104 	addi	r9,r9,4
  834220:	39ffff04 	addi	r7,r7,-4
  834224:	4abfff15 	stw	r10,-4(r9)
  834228:	42000104 	addi	r8,r8,4
  83422c:	59fffa36 	bltu	r11,r7,834218 <__alt_mem_epcs_flash_controller_0+0xff82b218>
  834230:	213fff04 	addi	r4,r4,-4
  834234:	2008d0ba 	srli	r4,r4,2
  834238:	318000cc 	andi	r6,r6,3
  83423c:	21000044 	addi	r4,r4,1
  834240:	2109883a 	add	r4,r4,r4
  834244:	2109883a 	add	r4,r4,r4
  834248:	1907883a 	add	r3,r3,r4
  83424c:	290b883a 	add	r5,r5,r4
  834250:	30000626 	beq	r6,zero,83426c <memcpy+0x11c>
  834254:	198d883a 	add	r6,r3,r6
  834258:	29c00003 	ldbu	r7,0(r5)
  83425c:	18c00044 	addi	r3,r3,1
  834260:	29400044 	addi	r5,r5,1
  834264:	19ffffc5 	stb	r7,-1(r3)
  834268:	19bffb1e 	bne	r3,r6,834258 <__alt_mem_epcs_flash_controller_0+0xff82b258>
  83426c:	dfc00217 	ldw	ra,8(sp)
  834270:	dc400117 	ldw	r17,4(sp)
  834274:	dc000017 	ldw	r16,0(sp)
  834278:	dec00304 	addi	sp,sp,12
  83427c:	f800283a 	ret
  834280:	2007883a 	mov	r3,r4
  834284:	003ff206 	br	834250 <__alt_mem_epcs_flash_controller_0+0xff82b250>
  834288:	2007883a 	mov	r3,r4
  83428c:	003ff106 	br	834254 <__alt_mem_epcs_flash_controller_0+0xff82b254>
  834290:	200d883a 	mov	r6,r4
  834294:	003fee06 	br	834250 <__alt_mem_epcs_flash_controller_0+0xff82b250>

00834298 <memset>:
  834298:	20c000cc 	andi	r3,r4,3
  83429c:	2005883a 	mov	r2,r4
  8342a0:	18004426 	beq	r3,zero,8343b4 <memset+0x11c>
  8342a4:	31ffffc4 	addi	r7,r6,-1
  8342a8:	30004026 	beq	r6,zero,8343ac <memset+0x114>
  8342ac:	2813883a 	mov	r9,r5
  8342b0:	200d883a 	mov	r6,r4
  8342b4:	2007883a 	mov	r3,r4
  8342b8:	00000406 	br	8342cc <memset+0x34>
  8342bc:	3a3fffc4 	addi	r8,r7,-1
  8342c0:	31800044 	addi	r6,r6,1
  8342c4:	38003926 	beq	r7,zero,8343ac <memset+0x114>
  8342c8:	400f883a 	mov	r7,r8
  8342cc:	18c00044 	addi	r3,r3,1
  8342d0:	32400005 	stb	r9,0(r6)
  8342d4:	1a0000cc 	andi	r8,r3,3
  8342d8:	403ff81e 	bne	r8,zero,8342bc <__alt_mem_epcs_flash_controller_0+0xff82b2bc>
  8342dc:	010000c4 	movi	r4,3
  8342e0:	21c02d2e 	bgeu	r4,r7,834398 <memset+0x100>
  8342e4:	29003fcc 	andi	r4,r5,255
  8342e8:	200c923a 	slli	r6,r4,8
  8342ec:	3108b03a 	or	r4,r6,r4
  8342f0:	200c943a 	slli	r6,r4,16
  8342f4:	218cb03a 	or	r6,r4,r6
  8342f8:	010003c4 	movi	r4,15
  8342fc:	21c0182e 	bgeu	r4,r7,834360 <memset+0xc8>
  834300:	3b3ffc04 	addi	r12,r7,-16
  834304:	6018d13a 	srli	r12,r12,4
  834308:	1a000104 	addi	r8,r3,4
  83430c:	1ac00204 	addi	r11,r3,8
  834310:	6008913a 	slli	r4,r12,4
  834314:	1a800304 	addi	r10,r3,12
  834318:	1813883a 	mov	r9,r3
  83431c:	21000504 	addi	r4,r4,20
  834320:	1909883a 	add	r4,r3,r4
  834324:	49800015 	stw	r6,0(r9)
  834328:	41800015 	stw	r6,0(r8)
  83432c:	59800015 	stw	r6,0(r11)
  834330:	51800015 	stw	r6,0(r10)
  834334:	42000404 	addi	r8,r8,16
  834338:	4a400404 	addi	r9,r9,16
  83433c:	5ac00404 	addi	r11,r11,16
  834340:	52800404 	addi	r10,r10,16
  834344:	413ff71e 	bne	r8,r4,834324 <__alt_mem_epcs_flash_controller_0+0xff82b324>
  834348:	63000044 	addi	r12,r12,1
  83434c:	6018913a 	slli	r12,r12,4
  834350:	39c003cc 	andi	r7,r7,15
  834354:	010000c4 	movi	r4,3
  834358:	1b07883a 	add	r3,r3,r12
  83435c:	21c00e2e 	bgeu	r4,r7,834398 <memset+0x100>
  834360:	1813883a 	mov	r9,r3
  834364:	3811883a 	mov	r8,r7
  834368:	010000c4 	movi	r4,3
  83436c:	49800015 	stw	r6,0(r9)
  834370:	423fff04 	addi	r8,r8,-4
  834374:	4a400104 	addi	r9,r9,4
  834378:	223ffc36 	bltu	r4,r8,83436c <__alt_mem_epcs_flash_controller_0+0xff82b36c>
  83437c:	393fff04 	addi	r4,r7,-4
  834380:	2008d0ba 	srli	r4,r4,2
  834384:	39c000cc 	andi	r7,r7,3
  834388:	21000044 	addi	r4,r4,1
  83438c:	2109883a 	add	r4,r4,r4
  834390:	2109883a 	add	r4,r4,r4
  834394:	1907883a 	add	r3,r3,r4
  834398:	38000526 	beq	r7,zero,8343b0 <memset+0x118>
  83439c:	19cf883a 	add	r7,r3,r7
  8343a0:	19400005 	stb	r5,0(r3)
  8343a4:	18c00044 	addi	r3,r3,1
  8343a8:	38fffd1e 	bne	r7,r3,8343a0 <__alt_mem_epcs_flash_controller_0+0xff82b3a0>
  8343ac:	f800283a 	ret
  8343b0:	f800283a 	ret
  8343b4:	2007883a 	mov	r3,r4
  8343b8:	300f883a 	mov	r7,r6
  8343bc:	003fc706 	br	8342dc <__alt_mem_epcs_flash_controller_0+0xff82b2dc>

008343c0 <_open_r>:
  8343c0:	defffd04 	addi	sp,sp,-12
  8343c4:	2805883a 	mov	r2,r5
  8343c8:	dc000015 	stw	r16,0(sp)
  8343cc:	040021b4 	movhi	r16,134
  8343d0:	dc400115 	stw	r17,4(sp)
  8343d4:	300b883a 	mov	r5,r6
  8343d8:	842e0c04 	addi	r16,r16,-18384
  8343dc:	2023883a 	mov	r17,r4
  8343e0:	380d883a 	mov	r6,r7
  8343e4:	1009883a 	mov	r4,r2
  8343e8:	dfc00215 	stw	ra,8(sp)
  8343ec:	80000015 	stw	zero,0(r16)
  8343f0:	0849d480 	call	849d48 <open>
  8343f4:	00ffffc4 	movi	r3,-1
  8343f8:	10c00526 	beq	r2,r3,834410 <_open_r+0x50>
  8343fc:	dfc00217 	ldw	ra,8(sp)
  834400:	dc400117 	ldw	r17,4(sp)
  834404:	dc000017 	ldw	r16,0(sp)
  834408:	dec00304 	addi	sp,sp,12
  83440c:	f800283a 	ret
  834410:	80c00017 	ldw	r3,0(r16)
  834414:	183ff926 	beq	r3,zero,8343fc <__alt_mem_epcs_flash_controller_0+0xff82b3fc>
  834418:	88c00015 	stw	r3,0(r17)
  83441c:	003ff706 	br	8343fc <__alt_mem_epcs_flash_controller_0+0xff82b3fc>

00834420 <_printf_r>:
  834420:	defffd04 	addi	sp,sp,-12
  834424:	2805883a 	mov	r2,r5
  834428:	dfc00015 	stw	ra,0(sp)
  83442c:	d9800115 	stw	r6,4(sp)
  834430:	d9c00215 	stw	r7,8(sp)
  834434:	21400217 	ldw	r5,8(r4)
  834438:	d9c00104 	addi	r7,sp,4
  83443c:	100d883a 	mov	r6,r2
  834440:	0838ac40 	call	838ac4 <___vfprintf_internal_r>
  834444:	dfc00017 	ldw	ra,0(sp)
  834448:	dec00304 	addi	sp,sp,12
  83444c:	f800283a 	ret

00834450 <printf>:
  834450:	defffc04 	addi	sp,sp,-16
  834454:	dfc00015 	stw	ra,0(sp)
  834458:	d9400115 	stw	r5,4(sp)
  83445c:	d9800215 	stw	r6,8(sp)
  834460:	d9c00315 	stw	r7,12(sp)
  834464:	008021b4 	movhi	r2,134
  834468:	10adb604 	addi	r2,r2,-18728
  83446c:	10800017 	ldw	r2,0(r2)
  834470:	200b883a 	mov	r5,r4
  834474:	d9800104 	addi	r6,sp,4
  834478:	11000217 	ldw	r4,8(r2)
  83447c:	083ada00 	call	83ada0 <__vfprintf_internal>
  834480:	dfc00017 	ldw	ra,0(sp)
  834484:	dec00404 	addi	sp,sp,16
  834488:	f800283a 	ret

0083448c <_putc_r>:
  83448c:	defffc04 	addi	sp,sp,-16
  834490:	dc000215 	stw	r16,8(sp)
  834494:	dfc00315 	stw	ra,12(sp)
  834498:	2021883a 	mov	r16,r4
  83449c:	20000226 	beq	r4,zero,8344a8 <_putc_r+0x1c>
  8344a0:	20800e17 	ldw	r2,56(r4)
  8344a4:	10001b26 	beq	r2,zero,834514 <_putc_r+0x88>
  8344a8:	30800217 	ldw	r2,8(r6)
  8344ac:	10bfffc4 	addi	r2,r2,-1
  8344b0:	30800215 	stw	r2,8(r6)
  8344b4:	10000a16 	blt	r2,zero,8344e0 <_putc_r+0x54>
  8344b8:	30800017 	ldw	r2,0(r6)
  8344bc:	11400005 	stb	r5,0(r2)
  8344c0:	30800017 	ldw	r2,0(r6)
  8344c4:	10c00044 	addi	r3,r2,1
  8344c8:	30c00015 	stw	r3,0(r6)
  8344cc:	10800003 	ldbu	r2,0(r2)
  8344d0:	dfc00317 	ldw	ra,12(sp)
  8344d4:	dc000217 	ldw	r16,8(sp)
  8344d8:	dec00404 	addi	sp,sp,16
  8344dc:	f800283a 	ret
  8344e0:	30c00617 	ldw	r3,24(r6)
  8344e4:	10c00616 	blt	r2,r3,834500 <_putc_r+0x74>
  8344e8:	30800017 	ldw	r2,0(r6)
  8344ec:	00c00284 	movi	r3,10
  8344f0:	11400005 	stb	r5,0(r2)
  8344f4:	30800017 	ldw	r2,0(r6)
  8344f8:	11400003 	ldbu	r5,0(r2)
  8344fc:	28fff11e 	bne	r5,r3,8344c4 <__alt_mem_epcs_flash_controller_0+0xff82b4c4>
  834500:	8009883a 	mov	r4,r16
  834504:	dfc00317 	ldw	ra,12(sp)
  834508:	dc000217 	ldw	r16,8(sp)
  83450c:	dec00404 	addi	sp,sp,16
  834510:	083ae781 	jmpi	83ae78 <__swbuf_r>
  834514:	d9400015 	stw	r5,0(sp)
  834518:	d9800115 	stw	r6,4(sp)
  83451c:	083274c0 	call	83274c <__sinit>
  834520:	d9800117 	ldw	r6,4(sp)
  834524:	d9400017 	ldw	r5,0(sp)
  834528:	003fdf06 	br	8344a8 <__alt_mem_epcs_flash_controller_0+0xff82b4a8>

0083452c <putc>:
  83452c:	008021b4 	movhi	r2,134
  834530:	defffc04 	addi	sp,sp,-16
  834534:	10adb604 	addi	r2,r2,-18728
  834538:	dc000115 	stw	r16,4(sp)
  83453c:	14000017 	ldw	r16,0(r2)
  834540:	dc400215 	stw	r17,8(sp)
  834544:	dfc00315 	stw	ra,12(sp)
  834548:	2023883a 	mov	r17,r4
  83454c:	80000226 	beq	r16,zero,834558 <putc+0x2c>
  834550:	80800e17 	ldw	r2,56(r16)
  834554:	10001a26 	beq	r2,zero,8345c0 <putc+0x94>
  834558:	28800217 	ldw	r2,8(r5)
  83455c:	10bfffc4 	addi	r2,r2,-1
  834560:	28800215 	stw	r2,8(r5)
  834564:	10000b16 	blt	r2,zero,834594 <putc+0x68>
  834568:	28800017 	ldw	r2,0(r5)
  83456c:	14400005 	stb	r17,0(r2)
  834570:	28800017 	ldw	r2,0(r5)
  834574:	10c00044 	addi	r3,r2,1
  834578:	28c00015 	stw	r3,0(r5)
  83457c:	10800003 	ldbu	r2,0(r2)
  834580:	dfc00317 	ldw	ra,12(sp)
  834584:	dc400217 	ldw	r17,8(sp)
  834588:	dc000117 	ldw	r16,4(sp)
  83458c:	dec00404 	addi	sp,sp,16
  834590:	f800283a 	ret
  834594:	28c00617 	ldw	r3,24(r5)
  834598:	10c00e16 	blt	r2,r3,8345d4 <putc+0xa8>
  83459c:	28800017 	ldw	r2,0(r5)
  8345a0:	01000284 	movi	r4,10
  8345a4:	14400005 	stb	r17,0(r2)
  8345a8:	28800017 	ldw	r2,0(r5)
  8345ac:	10c00003 	ldbu	r3,0(r2)
  8345b0:	193ff01e 	bne	r3,r4,834574 <__alt_mem_epcs_flash_controller_0+0xff82b574>
  8345b4:	280d883a 	mov	r6,r5
  8345b8:	180b883a 	mov	r5,r3
  8345bc:	00000706 	br	8345dc <putc+0xb0>
  8345c0:	8009883a 	mov	r4,r16
  8345c4:	d9400015 	stw	r5,0(sp)
  8345c8:	083274c0 	call	83274c <__sinit>
  8345cc:	d9400017 	ldw	r5,0(sp)
  8345d0:	003fe106 	br	834558 <__alt_mem_epcs_flash_controller_0+0xff82b558>
  8345d4:	280d883a 	mov	r6,r5
  8345d8:	880b883a 	mov	r5,r17
  8345dc:	8009883a 	mov	r4,r16
  8345e0:	dfc00317 	ldw	ra,12(sp)
  8345e4:	dc400217 	ldw	r17,8(sp)
  8345e8:	dc000117 	ldw	r16,4(sp)
  8345ec:	dec00404 	addi	sp,sp,16
  8345f0:	083ae781 	jmpi	83ae78 <__swbuf_r>

008345f4 <_putchar_r>:
  8345f4:	21800217 	ldw	r6,8(r4)
  8345f8:	083448c1 	jmpi	83448c <_putc_r>

008345fc <putchar>:
  8345fc:	008021b4 	movhi	r2,134
  834600:	10adb604 	addi	r2,r2,-18728
  834604:	200b883a 	mov	r5,r4
  834608:	11000017 	ldw	r4,0(r2)
  83460c:	21800217 	ldw	r6,8(r4)
  834610:	083448c1 	jmpi	83448c <_putc_r>

00834614 <_puts_r>:
  834614:	defff604 	addi	sp,sp,-40
  834618:	dc000715 	stw	r16,28(sp)
  83461c:	2021883a 	mov	r16,r4
  834620:	2809883a 	mov	r4,r5
  834624:	dc400815 	stw	r17,32(sp)
  834628:	dfc00915 	stw	ra,36(sp)
  83462c:	2823883a 	mov	r17,r5
  834630:	0834c200 	call	834c20 <strlen>
  834634:	10c00044 	addi	r3,r2,1
  834638:	d8800115 	stw	r2,4(sp)
  83463c:	008021b4 	movhi	r2,134
  834640:	10a43004 	addi	r2,r2,-28480
  834644:	d8800215 	stw	r2,8(sp)
  834648:	00800044 	movi	r2,1
  83464c:	d8800315 	stw	r2,12(sp)
  834650:	00800084 	movi	r2,2
  834654:	dc400015 	stw	r17,0(sp)
  834658:	d8c00615 	stw	r3,24(sp)
  83465c:	dec00415 	stw	sp,16(sp)
  834660:	d8800515 	stw	r2,20(sp)
  834664:	80000226 	beq	r16,zero,834670 <_puts_r+0x5c>
  834668:	80800e17 	ldw	r2,56(r16)
  83466c:	10001426 	beq	r2,zero,8346c0 <_puts_r+0xac>
  834670:	81400217 	ldw	r5,8(r16)
  834674:	2880030b 	ldhu	r2,12(r5)
  834678:	10c8000c 	andi	r3,r2,8192
  83467c:	1800061e 	bne	r3,zero,834698 <_puts_r+0x84>
  834680:	29001917 	ldw	r4,100(r5)
  834684:	00f7ffc4 	movi	r3,-8193
  834688:	10880014 	ori	r2,r2,8192
  83468c:	20c6703a 	and	r3,r4,r3
  834690:	2880030d 	sth	r2,12(r5)
  834694:	28c01915 	stw	r3,100(r5)
  834698:	d9800404 	addi	r6,sp,16
  83469c:	8009883a 	mov	r4,r16
  8346a0:	083ccb40 	call	83ccb4 <__sfvwrite_r>
  8346a4:	1000091e 	bne	r2,zero,8346cc <_puts_r+0xb8>
  8346a8:	00800284 	movi	r2,10
  8346ac:	dfc00917 	ldw	ra,36(sp)
  8346b0:	dc400817 	ldw	r17,32(sp)
  8346b4:	dc000717 	ldw	r16,28(sp)
  8346b8:	dec00a04 	addi	sp,sp,40
  8346bc:	f800283a 	ret
  8346c0:	8009883a 	mov	r4,r16
  8346c4:	083274c0 	call	83274c <__sinit>
  8346c8:	003fe906 	br	834670 <__alt_mem_epcs_flash_controller_0+0xff82b670>
  8346cc:	00bfffc4 	movi	r2,-1
  8346d0:	003ff606 	br	8346ac <__alt_mem_epcs_flash_controller_0+0xff82b6ac>

008346d4 <puts>:
  8346d4:	008021b4 	movhi	r2,134
  8346d8:	10adb604 	addi	r2,r2,-18728
  8346dc:	200b883a 	mov	r5,r4
  8346e0:	11000017 	ldw	r4,0(r2)
  8346e4:	08346141 	jmpi	834614 <_puts_r>

008346e8 <lflush>:
  8346e8:	2080030b 	ldhu	r2,12(r4)
  8346ec:	00c00244 	movi	r3,9
  8346f0:	1080024c 	andi	r2,r2,9
  8346f4:	10c00226 	beq	r2,r3,834700 <lflush+0x18>
  8346f8:	0005883a 	mov	r2,zero
  8346fc:	f800283a 	ret
  834700:	08323bc1 	jmpi	8323bc <fflush>

00834704 <__srefill_r>:
  834704:	defffc04 	addi	sp,sp,-16
  834708:	dc400115 	stw	r17,4(sp)
  83470c:	dc000015 	stw	r16,0(sp)
  834710:	dfc00315 	stw	ra,12(sp)
  834714:	dc800215 	stw	r18,8(sp)
  834718:	2023883a 	mov	r17,r4
  83471c:	2821883a 	mov	r16,r5
  834720:	20000226 	beq	r4,zero,83472c <__srefill_r+0x28>
  834724:	20800e17 	ldw	r2,56(r4)
  834728:	10003c26 	beq	r2,zero,83481c <__srefill_r+0x118>
  83472c:	80c0030b 	ldhu	r3,12(r16)
  834730:	1908000c 	andi	r4,r3,8192
  834734:	1805883a 	mov	r2,r3
  834738:	2000071e 	bne	r4,zero,834758 <__srefill_r+0x54>
  83473c:	81001917 	ldw	r4,100(r16)
  834740:	18880014 	ori	r2,r3,8192
  834744:	00f7ffc4 	movi	r3,-8193
  834748:	20c8703a 	and	r4,r4,r3
  83474c:	8080030d 	sth	r2,12(r16)
  834750:	1007883a 	mov	r3,r2
  834754:	81001915 	stw	r4,100(r16)
  834758:	80000115 	stw	zero,4(r16)
  83475c:	1100080c 	andi	r4,r2,32
  834760:	2000571e 	bne	r4,zero,8348c0 <__srefill_r+0x1bc>
  834764:	1100010c 	andi	r4,r2,4
  834768:	20001f26 	beq	r4,zero,8347e8 <__srefill_r+0xe4>
  83476c:	81400c17 	ldw	r5,48(r16)
  834770:	28000826 	beq	r5,zero,834794 <__srefill_r+0x90>
  834774:	80801004 	addi	r2,r16,64
  834778:	28800226 	beq	r5,r2,834784 <__srefill_r+0x80>
  83477c:	8809883a 	mov	r4,r17
  834780:	0832c880 	call	832c88 <_free_r>
  834784:	80800f17 	ldw	r2,60(r16)
  834788:	80000c15 	stw	zero,48(r16)
  83478c:	80800115 	stw	r2,4(r16)
  834790:	1000391e 	bne	r2,zero,834878 <__srefill_r+0x174>
  834794:	80800417 	ldw	r2,16(r16)
  834798:	10004b26 	beq	r2,zero,8348c8 <__srefill_r+0x1c4>
  83479c:	8480030b 	ldhu	r18,12(r16)
  8347a0:	908000cc 	andi	r2,r18,3
  8347a4:	10001f1e 	bne	r2,zero,834824 <__srefill_r+0x120>
  8347a8:	81800417 	ldw	r6,16(r16)
  8347ac:	80800817 	ldw	r2,32(r16)
  8347b0:	81c00517 	ldw	r7,20(r16)
  8347b4:	81400717 	ldw	r5,28(r16)
  8347b8:	81800015 	stw	r6,0(r16)
  8347bc:	8809883a 	mov	r4,r17
  8347c0:	103ee83a 	callr	r2
  8347c4:	80800115 	stw	r2,4(r16)
  8347c8:	00800e0e 	bge	zero,r2,834804 <__srefill_r+0x100>
  8347cc:	0005883a 	mov	r2,zero
  8347d0:	dfc00317 	ldw	ra,12(sp)
  8347d4:	dc800217 	ldw	r18,8(sp)
  8347d8:	dc400117 	ldw	r17,4(sp)
  8347dc:	dc000017 	ldw	r16,0(sp)
  8347e0:	dec00404 	addi	sp,sp,16
  8347e4:	f800283a 	ret
  8347e8:	1100040c 	andi	r4,r2,16
  8347ec:	20003026 	beq	r4,zero,8348b0 <__srefill_r+0x1ac>
  8347f0:	1080020c 	andi	r2,r2,8
  8347f4:	1000241e 	bne	r2,zero,834888 <__srefill_r+0x184>
  8347f8:	18c00114 	ori	r3,r3,4
  8347fc:	80c0030d 	sth	r3,12(r16)
  834800:	003fe406 	br	834794 <__alt_mem_epcs_flash_controller_0+0xff82b794>
  834804:	80c0030b 	ldhu	r3,12(r16)
  834808:	1000161e 	bne	r2,zero,834864 <__srefill_r+0x160>
  83480c:	18c00814 	ori	r3,r3,32
  834810:	00bfffc4 	movi	r2,-1
  834814:	80c0030d 	sth	r3,12(r16)
  834818:	003fed06 	br	8347d0 <__alt_mem_epcs_flash_controller_0+0xff82b7d0>
  83481c:	083274c0 	call	83274c <__sinit>
  834820:	003fc206 	br	83472c <__alt_mem_epcs_flash_controller_0+0xff82b72c>
  834824:	008021b4 	movhi	r2,134
  834828:	10adb504 	addi	r2,r2,-18732
  83482c:	11000017 	ldw	r4,0(r2)
  834830:	014020f4 	movhi	r5,131
  834834:	00800044 	movi	r2,1
  834838:	2951ba04 	addi	r5,r5,18152
  83483c:	8080030d 	sth	r2,12(r16)
  834840:	08334740 	call	833474 <_fwalk>
  834844:	00800244 	movi	r2,9
  834848:	8480030d 	sth	r18,12(r16)
  83484c:	9480024c 	andi	r18,r18,9
  834850:	90bfd51e 	bne	r18,r2,8347a8 <__alt_mem_epcs_flash_controller_0+0xff82b7a8>
  834854:	800b883a 	mov	r5,r16
  834858:	8809883a 	mov	r4,r17
  83485c:	08321440 	call	832144 <__sflush_r>
  834860:	003fd106 	br	8347a8 <__alt_mem_epcs_flash_controller_0+0xff82b7a8>
  834864:	18c01014 	ori	r3,r3,64
  834868:	80000115 	stw	zero,4(r16)
  83486c:	00bfffc4 	movi	r2,-1
  834870:	80c0030d 	sth	r3,12(r16)
  834874:	003fd606 	br	8347d0 <__alt_mem_epcs_flash_controller_0+0xff82b7d0>
  834878:	80c00e17 	ldw	r3,56(r16)
  83487c:	0005883a 	mov	r2,zero
  834880:	80c00015 	stw	r3,0(r16)
  834884:	003fd206 	br	8347d0 <__alt_mem_epcs_flash_controller_0+0xff82b7d0>
  834888:	800b883a 	mov	r5,r16
  83488c:	8809883a 	mov	r4,r17
  834890:	08323600 	call	832360 <_fflush_r>
  834894:	10000a1e 	bne	r2,zero,8348c0 <__srefill_r+0x1bc>
  834898:	8080030b 	ldhu	r2,12(r16)
  83489c:	00fffdc4 	movi	r3,-9
  8348a0:	80000215 	stw	zero,8(r16)
  8348a4:	1886703a 	and	r3,r3,r2
  8348a8:	80000615 	stw	zero,24(r16)
  8348ac:	003fd206 	br	8347f8 <__alt_mem_epcs_flash_controller_0+0xff82b7f8>
  8348b0:	00800244 	movi	r2,9
  8348b4:	88800015 	stw	r2,0(r17)
  8348b8:	18c01014 	ori	r3,r3,64
  8348bc:	80c0030d 	sth	r3,12(r16)
  8348c0:	00bfffc4 	movi	r2,-1
  8348c4:	003fc206 	br	8347d0 <__alt_mem_epcs_flash_controller_0+0xff82b7d0>
  8348c8:	800b883a 	mov	r5,r16
  8348cc:	8809883a 	mov	r4,r17
  8348d0:	08337600 	call	833760 <__smakebuf_r>
  8348d4:	003fb106 	br	83479c <__alt_mem_epcs_flash_controller_0+0xff82b79c>

008348d8 <_sbrk_r>:
  8348d8:	defffd04 	addi	sp,sp,-12
  8348dc:	dc000015 	stw	r16,0(sp)
  8348e0:	040021b4 	movhi	r16,134
  8348e4:	dc400115 	stw	r17,4(sp)
  8348e8:	842e0c04 	addi	r16,r16,-18384
  8348ec:	2023883a 	mov	r17,r4
  8348f0:	2809883a 	mov	r4,r5
  8348f4:	dfc00215 	stw	ra,8(sp)
  8348f8:	80000015 	stw	zero,0(r16)
  8348fc:	084a0680 	call	84a068 <sbrk>
  834900:	00ffffc4 	movi	r3,-1
  834904:	10c00526 	beq	r2,r3,83491c <_sbrk_r+0x44>
  834908:	dfc00217 	ldw	ra,8(sp)
  83490c:	dc400117 	ldw	r17,4(sp)
  834910:	dc000017 	ldw	r16,0(sp)
  834914:	dec00304 	addi	sp,sp,12
  834918:	f800283a 	ret
  83491c:	80c00017 	ldw	r3,0(r16)
  834920:	183ff926 	beq	r3,zero,834908 <__alt_mem_epcs_flash_controller_0+0xff82b908>
  834924:	88c00015 	stw	r3,0(r17)
  834928:	003ff706 	br	834908 <__alt_mem_epcs_flash_controller_0+0xff82b908>

0083492c <_sprintf_r>:
  83492c:	deffe404 	addi	sp,sp,-112
  834930:	2807883a 	mov	r3,r5
  834934:	dfc01a15 	stw	ra,104(sp)
  834938:	d9c01b15 	stw	r7,108(sp)
  83493c:	00a00034 	movhi	r2,32768
  834940:	10bfffc4 	addi	r2,r2,-1
  834944:	02008204 	movi	r8,520
  834948:	d8800215 	stw	r2,8(sp)
  83494c:	d8800515 	stw	r2,20(sp)
  834950:	d9c01b04 	addi	r7,sp,108
  834954:	d80b883a 	mov	r5,sp
  834958:	00bfffc4 	movi	r2,-1
  83495c:	d8c00015 	stw	r3,0(sp)
  834960:	d8c00415 	stw	r3,16(sp)
  834964:	da00030d 	sth	r8,12(sp)
  834968:	d880038d 	sth	r2,14(sp)
  83496c:	0834e740 	call	834e74 <___svfprintf_internal_r>
  834970:	d8c00017 	ldw	r3,0(sp)
  834974:	18000005 	stb	zero,0(r3)
  834978:	dfc01a17 	ldw	ra,104(sp)
  83497c:	dec01c04 	addi	sp,sp,112
  834980:	f800283a 	ret

00834984 <sprintf>:
  834984:	deffe304 	addi	sp,sp,-116
  834988:	2007883a 	mov	r3,r4
  83498c:	dfc01a15 	stw	ra,104(sp)
  834990:	d9801b15 	stw	r6,108(sp)
  834994:	d9c01c15 	stw	r7,112(sp)
  834998:	010021b4 	movhi	r4,134
  83499c:	212db604 	addi	r4,r4,-18728
  8349a0:	21000017 	ldw	r4,0(r4)
  8349a4:	00a00034 	movhi	r2,32768
  8349a8:	10bfffc4 	addi	r2,r2,-1
  8349ac:	280d883a 	mov	r6,r5
  8349b0:	02008204 	movi	r8,520
  8349b4:	d8800215 	stw	r2,8(sp)
  8349b8:	d8800515 	stw	r2,20(sp)
  8349bc:	d9c01b04 	addi	r7,sp,108
  8349c0:	d80b883a 	mov	r5,sp
  8349c4:	00bfffc4 	movi	r2,-1
  8349c8:	d8c00015 	stw	r3,0(sp)
  8349cc:	d8c00415 	stw	r3,16(sp)
  8349d0:	da00030d 	sth	r8,12(sp)
  8349d4:	d880038d 	sth	r2,14(sp)
  8349d8:	0834e740 	call	834e74 <___svfprintf_internal_r>
  8349dc:	d8c00017 	ldw	r3,0(sp)
  8349e0:	18000005 	stb	zero,0(r3)
  8349e4:	dfc01a17 	ldw	ra,104(sp)
  8349e8:	dec01d04 	addi	sp,sp,116
  8349ec:	f800283a 	ret

008349f0 <sscanf>:
  8349f0:	deffe204 	addi	sp,sp,-120
  8349f4:	dc001a15 	stw	r16,104(sp)
  8349f8:	2821883a 	mov	r16,r5
  8349fc:	dfc01b15 	stw	ra,108(sp)
  834a00:	d9801c15 	stw	r6,112(sp)
  834a04:	d9c01d15 	stw	r7,116(sp)
  834a08:	00c08104 	movi	r3,516
  834a0c:	d8c0030d 	sth	r3,12(sp)
  834a10:	d9000015 	stw	r4,0(sp)
  834a14:	d9000415 	stw	r4,16(sp)
  834a18:	0834c200 	call	834c20 <strlen>
  834a1c:	00c021b4 	movhi	r3,134
  834a20:	18edb604 	addi	r3,r3,-18728
  834a24:	d8800115 	stw	r2,4(sp)
  834a28:	d8800515 	stw	r2,20(sp)
  834a2c:	19000017 	ldw	r4,0(r3)
  834a30:	008020f4 	movhi	r2,131
  834a34:	1092ce04 	addi	r2,r2,19256
  834a38:	d8800815 	stw	r2,32(sp)
  834a3c:	d9c01c04 	addi	r7,sp,112
  834a40:	800d883a 	mov	r6,r16
  834a44:	d80b883a 	mov	r5,sp
  834a48:	00bfffc4 	movi	r2,-1
  834a4c:	d8000c15 	stw	zero,48(sp)
  834a50:	d8001115 	stw	zero,68(sp)
  834a54:	d880038d 	sth	r2,14(sp)
  834a58:	08371300 	call	837130 <__ssvfscanf_r>
  834a5c:	dfc01b17 	ldw	ra,108(sp)
  834a60:	dc001a17 	ldw	r16,104(sp)
  834a64:	dec01e04 	addi	sp,sp,120
  834a68:	f800283a 	ret

00834a6c <_sscanf_r>:
  834a6c:	deffe204 	addi	sp,sp,-120
  834a70:	dc001b15 	stw	r16,108(sp)
  834a74:	2021883a 	mov	r16,r4
  834a78:	dfc01c15 	stw	ra,112(sp)
  834a7c:	d9c01d15 	stw	r7,116(sp)
  834a80:	00808104 	movi	r2,516
  834a84:	2809883a 	mov	r4,r5
  834a88:	d9400015 	stw	r5,0(sp)
  834a8c:	d9400415 	stw	r5,16(sp)
  834a90:	d9801a15 	stw	r6,104(sp)
  834a94:	d880030d 	sth	r2,12(sp)
  834a98:	0834c200 	call	834c20 <strlen>
  834a9c:	d8800115 	stw	r2,4(sp)
  834aa0:	d8800515 	stw	r2,20(sp)
  834aa4:	d9801a17 	ldw	r6,104(sp)
  834aa8:	008020f4 	movhi	r2,131
  834aac:	1092ce04 	addi	r2,r2,19256
  834ab0:	d8800815 	stw	r2,32(sp)
  834ab4:	d9c01d04 	addi	r7,sp,116
  834ab8:	d80b883a 	mov	r5,sp
  834abc:	8009883a 	mov	r4,r16
  834ac0:	00bfffc4 	movi	r2,-1
  834ac4:	d8000c15 	stw	zero,48(sp)
  834ac8:	d8001115 	stw	zero,68(sp)
  834acc:	d880038d 	sth	r2,14(sp)
  834ad0:	08371300 	call	837130 <__ssvfscanf_r>
  834ad4:	dfc01c17 	ldw	ra,112(sp)
  834ad8:	dc001b17 	ldw	r16,108(sp)
  834adc:	dec01e04 	addi	sp,sp,120
  834ae0:	f800283a 	ret

00834ae4 <__sread>:
  834ae4:	defffe04 	addi	sp,sp,-8
  834ae8:	dc000015 	stw	r16,0(sp)
  834aec:	2821883a 	mov	r16,r5
  834af0:	2940038f 	ldh	r5,14(r5)
  834af4:	dfc00115 	stw	ra,4(sp)
  834af8:	083e8580 	call	83e858 <_read_r>
  834afc:	10000716 	blt	r2,zero,834b1c <__sread+0x38>
  834b00:	80c01417 	ldw	r3,80(r16)
  834b04:	1887883a 	add	r3,r3,r2
  834b08:	80c01415 	stw	r3,80(r16)
  834b0c:	dfc00117 	ldw	ra,4(sp)
  834b10:	dc000017 	ldw	r16,0(sp)
  834b14:	dec00204 	addi	sp,sp,8
  834b18:	f800283a 	ret
  834b1c:	80c0030b 	ldhu	r3,12(r16)
  834b20:	18fbffcc 	andi	r3,r3,61439
  834b24:	80c0030d 	sth	r3,12(r16)
  834b28:	dfc00117 	ldw	ra,4(sp)
  834b2c:	dc000017 	ldw	r16,0(sp)
  834b30:	dec00204 	addi	sp,sp,8
  834b34:	f800283a 	ret

00834b38 <__seofread>:
  834b38:	0005883a 	mov	r2,zero
  834b3c:	f800283a 	ret

00834b40 <__swrite>:
  834b40:	2880030b 	ldhu	r2,12(r5)
  834b44:	defffb04 	addi	sp,sp,-20
  834b48:	dcc00315 	stw	r19,12(sp)
  834b4c:	dc800215 	stw	r18,8(sp)
  834b50:	dc400115 	stw	r17,4(sp)
  834b54:	dc000015 	stw	r16,0(sp)
  834b58:	dfc00415 	stw	ra,16(sp)
  834b5c:	10c0400c 	andi	r3,r2,256
  834b60:	2821883a 	mov	r16,r5
  834b64:	2023883a 	mov	r17,r4
  834b68:	3025883a 	mov	r18,r6
  834b6c:	3827883a 	mov	r19,r7
  834b70:	18000526 	beq	r3,zero,834b88 <__swrite+0x48>
  834b74:	2940038f 	ldh	r5,14(r5)
  834b78:	01c00084 	movi	r7,2
  834b7c:	000d883a 	mov	r6,zero
  834b80:	083d2dc0 	call	83d2dc <_lseek_r>
  834b84:	8080030b 	ldhu	r2,12(r16)
  834b88:	8140038f 	ldh	r5,14(r16)
  834b8c:	10bbffcc 	andi	r2,r2,61439
  834b90:	980f883a 	mov	r7,r19
  834b94:	900d883a 	mov	r6,r18
  834b98:	8809883a 	mov	r4,r17
  834b9c:	8080030d 	sth	r2,12(r16)
  834ba0:	dfc00417 	ldw	ra,16(sp)
  834ba4:	dcc00317 	ldw	r19,12(sp)
  834ba8:	dc800217 	ldw	r18,8(sp)
  834bac:	dc400117 	ldw	r17,4(sp)
  834bb0:	dc000017 	ldw	r16,0(sp)
  834bb4:	dec00504 	addi	sp,sp,20
  834bb8:	083afd01 	jmpi	83afd0 <_write_r>

00834bbc <__sseek>:
  834bbc:	defffe04 	addi	sp,sp,-8
  834bc0:	dc000015 	stw	r16,0(sp)
  834bc4:	2821883a 	mov	r16,r5
  834bc8:	2940038f 	ldh	r5,14(r5)
  834bcc:	dfc00115 	stw	ra,4(sp)
  834bd0:	083d2dc0 	call	83d2dc <_lseek_r>
  834bd4:	00ffffc4 	movi	r3,-1
  834bd8:	10c00826 	beq	r2,r3,834bfc <__sseek+0x40>
  834bdc:	80c0030b 	ldhu	r3,12(r16)
  834be0:	80801415 	stw	r2,80(r16)
  834be4:	18c40014 	ori	r3,r3,4096
  834be8:	80c0030d 	sth	r3,12(r16)
  834bec:	dfc00117 	ldw	ra,4(sp)
  834bf0:	dc000017 	ldw	r16,0(sp)
  834bf4:	dec00204 	addi	sp,sp,8
  834bf8:	f800283a 	ret
  834bfc:	80c0030b 	ldhu	r3,12(r16)
  834c00:	18fbffcc 	andi	r3,r3,61439
  834c04:	80c0030d 	sth	r3,12(r16)
  834c08:	dfc00117 	ldw	ra,4(sp)
  834c0c:	dc000017 	ldw	r16,0(sp)
  834c10:	dec00204 	addi	sp,sp,8
  834c14:	f800283a 	ret

00834c18 <__sclose>:
  834c18:	2940038f 	ldh	r5,14(r5)
  834c1c:	083b1841 	jmpi	83b184 <_close_r>

00834c20 <strlen>:
  834c20:	208000cc 	andi	r2,r4,3
  834c24:	10002026 	beq	r2,zero,834ca8 <strlen+0x88>
  834c28:	20800007 	ldb	r2,0(r4)
  834c2c:	10002026 	beq	r2,zero,834cb0 <strlen+0x90>
  834c30:	2005883a 	mov	r2,r4
  834c34:	00000206 	br	834c40 <strlen+0x20>
  834c38:	10c00007 	ldb	r3,0(r2)
  834c3c:	18001826 	beq	r3,zero,834ca0 <strlen+0x80>
  834c40:	10800044 	addi	r2,r2,1
  834c44:	10c000cc 	andi	r3,r2,3
  834c48:	183ffb1e 	bne	r3,zero,834c38 <__alt_mem_epcs_flash_controller_0+0xff82bc38>
  834c4c:	10c00017 	ldw	r3,0(r2)
  834c50:	01ffbff4 	movhi	r7,65279
  834c54:	39ffbfc4 	addi	r7,r7,-257
  834c58:	00ca303a 	nor	r5,zero,r3
  834c5c:	01a02074 	movhi	r6,32897
  834c60:	19c7883a 	add	r3,r3,r7
  834c64:	31a02004 	addi	r6,r6,-32640
  834c68:	1946703a 	and	r3,r3,r5
  834c6c:	1986703a 	and	r3,r3,r6
  834c70:	1800091e 	bne	r3,zero,834c98 <strlen+0x78>
  834c74:	10800104 	addi	r2,r2,4
  834c78:	10c00017 	ldw	r3,0(r2)
  834c7c:	19cb883a 	add	r5,r3,r7
  834c80:	00c6303a 	nor	r3,zero,r3
  834c84:	28c6703a 	and	r3,r5,r3
  834c88:	1986703a 	and	r3,r3,r6
  834c8c:	183ff926 	beq	r3,zero,834c74 <__alt_mem_epcs_flash_controller_0+0xff82bc74>
  834c90:	00000106 	br	834c98 <strlen+0x78>
  834c94:	10800044 	addi	r2,r2,1
  834c98:	10c00007 	ldb	r3,0(r2)
  834c9c:	183ffd1e 	bne	r3,zero,834c94 <__alt_mem_epcs_flash_controller_0+0xff82bc94>
  834ca0:	1105c83a 	sub	r2,r2,r4
  834ca4:	f800283a 	ret
  834ca8:	2005883a 	mov	r2,r4
  834cac:	003fe706 	br	834c4c <__alt_mem_epcs_flash_controller_0+0xff82bc4c>
  834cb0:	0005883a 	mov	r2,zero
  834cb4:	f800283a 	ret

00834cb8 <strncmp>:
  834cb8:	30003126 	beq	r6,zero,834d80 <strncmp+0xc8>
  834cbc:	2144b03a 	or	r2,r4,r5
  834cc0:	108000cc 	andi	r2,r2,3
  834cc4:	10001e1e 	bne	r2,zero,834d40 <strncmp+0x88>
  834cc8:	024000c4 	movi	r9,3
  834ccc:	49801c2e 	bgeu	r9,r6,834d40 <strncmp+0x88>
  834cd0:	20800017 	ldw	r2,0(r4)
  834cd4:	28c00017 	ldw	r3,0(r5)
  834cd8:	10c0191e 	bne	r2,r3,834d40 <strncmp+0x88>
  834cdc:	31bfff04 	addi	r6,r6,-4
  834ce0:	30002726 	beq	r6,zero,834d80 <strncmp+0xc8>
  834ce4:	02ffbff4 	movhi	r11,65279
  834ce8:	5affbfc4 	addi	r11,r11,-257
  834cec:	0086303a 	nor	r3,zero,r2
  834cf0:	02a02074 	movhi	r10,32897
  834cf4:	12c5883a 	add	r2,r2,r11
  834cf8:	52a02004 	addi	r10,r10,-32640
  834cfc:	10c4703a 	and	r2,r2,r3
  834d00:	1284703a 	and	r2,r2,r10
  834d04:	10000b26 	beq	r2,zero,834d34 <strncmp+0x7c>
  834d08:	00001d06 	br	834d80 <strncmp+0xc8>
  834d0c:	20c00017 	ldw	r3,0(r4)
  834d10:	29c00017 	ldw	r7,0(r5)
  834d14:	1ad1883a 	add	r8,r3,r11
  834d18:	00c4303a 	nor	r2,zero,r3
  834d1c:	4084703a 	and	r2,r8,r2
  834d20:	1284703a 	and	r2,r2,r10
  834d24:	19c0061e 	bne	r3,r7,834d40 <strncmp+0x88>
  834d28:	31bfff04 	addi	r6,r6,-4
  834d2c:	30001426 	beq	r6,zero,834d80 <strncmp+0xc8>
  834d30:	1000131e 	bne	r2,zero,834d80 <strncmp+0xc8>
  834d34:	21000104 	addi	r4,r4,4
  834d38:	29400104 	addi	r5,r5,4
  834d3c:	49bff336 	bltu	r9,r6,834d0c <__alt_mem_epcs_flash_controller_0+0xff82bd0c>
  834d40:	28800007 	ldb	r2,0(r5)
  834d44:	20c00007 	ldb	r3,0(r4)
  834d48:	31bfffc4 	addi	r6,r6,-1
  834d4c:	10c0081e 	bne	r2,r3,834d70 <strncmp+0xb8>
  834d50:	30000b26 	beq	r6,zero,834d80 <strncmp+0xc8>
  834d54:	10000a26 	beq	r2,zero,834d80 <strncmp+0xc8>
  834d58:	21000044 	addi	r4,r4,1
  834d5c:	29400044 	addi	r5,r5,1
  834d60:	20800007 	ldb	r2,0(r4)
  834d64:	28c00007 	ldb	r3,0(r5)
  834d68:	31bfffc4 	addi	r6,r6,-1
  834d6c:	10fff826 	beq	r2,r3,834d50 <__alt_mem_epcs_flash_controller_0+0xff82bd50>
  834d70:	20800003 	ldbu	r2,0(r4)
  834d74:	28c00003 	ldbu	r3,0(r5)
  834d78:	10c5c83a 	sub	r2,r2,r3
  834d7c:	f800283a 	ret
  834d80:	0005883a 	mov	r2,zero
  834d84:	f800283a 	ret

00834d88 <strncpy>:
  834d88:	2906b03a 	or	r3,r5,r4
  834d8c:	18c000cc 	andi	r3,r3,3
  834d90:	2005883a 	mov	r2,r4
  834d94:	18002c1e 	bne	r3,zero,834e48 <strncpy+0xc0>
  834d98:	010000c4 	movi	r4,3
  834d9c:	21802a2e 	bgeu	r4,r6,834e48 <strncpy+0xc0>
  834da0:	033fbff4 	movhi	r12,65279
  834da4:	02e02074 	movhi	r11,32897
  834da8:	633fbfc4 	addi	r12,r12,-257
  834dac:	5ae02004 	addi	r11,r11,-32640
  834db0:	100f883a 	mov	r7,r2
  834db4:	2a000017 	ldw	r8,0(r5)
  834db8:	3815883a 	mov	r10,r7
  834dbc:	4313883a 	add	r9,r8,r12
  834dc0:	0206303a 	nor	r3,zero,r8
  834dc4:	48c6703a 	and	r3,r9,r3
  834dc8:	1ac6703a 	and	r3,r3,r11
  834dcc:	1800261e 	bne	r3,zero,834e68 <strncpy+0xe0>
  834dd0:	39c00104 	addi	r7,r7,4
  834dd4:	52000015 	stw	r8,0(r10)
  834dd8:	31bfff04 	addi	r6,r6,-4
  834ddc:	3811883a 	mov	r8,r7
  834de0:	29400104 	addi	r5,r5,4
  834de4:	21bff336 	bltu	r4,r6,834db4 <__alt_mem_epcs_flash_controller_0+0xff82bdb4>
  834de8:	30001e26 	beq	r6,zero,834e64 <strncpy+0xdc>
  834dec:	29c00003 	ldbu	r7,0(r5)
  834df0:	31bfffc4 	addi	r6,r6,-1
  834df4:	40c00044 	addi	r3,r8,1
  834df8:	41c00005 	stb	r7,0(r8)
  834dfc:	39c03fcc 	andi	r7,r7,255
  834e00:	39c0201c 	xori	r7,r7,128
  834e04:	39ffe004 	addi	r7,r7,-128
  834e08:	29400044 	addi	r5,r5,1
  834e0c:	38001026 	beq	r7,zero,834e50 <strncpy+0xc8>
  834e10:	1811883a 	mov	r8,r3
  834e14:	00000906 	br	834e3c <strncpy+0xb4>
  834e18:	29c00003 	ldbu	r7,0(r5)
  834e1c:	31bfffc4 	addi	r6,r6,-1
  834e20:	29400044 	addi	r5,r5,1
  834e24:	41c00005 	stb	r7,0(r8)
  834e28:	39c03fcc 	andi	r7,r7,255
  834e2c:	39c0201c 	xori	r7,r7,128
  834e30:	39ffe004 	addi	r7,r7,-128
  834e34:	1811883a 	mov	r8,r3
  834e38:	38000526 	beq	r7,zero,834e50 <strncpy+0xc8>
  834e3c:	18c00044 	addi	r3,r3,1
  834e40:	303ff51e 	bne	r6,zero,834e18 <__alt_mem_epcs_flash_controller_0+0xff82be18>
  834e44:	f800283a 	ret
  834e48:	1011883a 	mov	r8,r2
  834e4c:	003fe606 	br	834de8 <__alt_mem_epcs_flash_controller_0+0xff82bde8>
  834e50:	30000726 	beq	r6,zero,834e70 <strncpy+0xe8>
  834e54:	198d883a 	add	r6,r3,r6
  834e58:	18000005 	stb	zero,0(r3)
  834e5c:	18c00044 	addi	r3,r3,1
  834e60:	19bffd1e 	bne	r3,r6,834e58 <__alt_mem_epcs_flash_controller_0+0xff82be58>
  834e64:	f800283a 	ret
  834e68:	3811883a 	mov	r8,r7
  834e6c:	003fdf06 	br	834dec <__alt_mem_epcs_flash_controller_0+0xff82bdec>
  834e70:	f800283a 	ret

00834e74 <___svfprintf_internal_r>:
  834e74:	deffb704 	addi	sp,sp,-292
  834e78:	dfc04815 	stw	ra,288(sp)
  834e7c:	ddc04615 	stw	r23,280(sp)
  834e80:	d9402d15 	stw	r5,180(sp)
  834e84:	d9003915 	stw	r4,228(sp)
  834e88:	302f883a 	mov	r23,r6
  834e8c:	d9c02e15 	stw	r7,184(sp)
  834e90:	df004715 	stw	fp,284(sp)
  834e94:	dd804515 	stw	r22,276(sp)
  834e98:	dd404415 	stw	r21,272(sp)
  834e9c:	dd004315 	stw	r20,268(sp)
  834ea0:	dcc04215 	stw	r19,264(sp)
  834ea4:	dc804115 	stw	r18,260(sp)
  834ea8:	dc404015 	stw	r17,256(sp)
  834eac:	dc003f15 	stw	r16,252(sp)
  834eb0:	083d2ac0 	call	83d2ac <_localeconv_r>
  834eb4:	10800017 	ldw	r2,0(r2)
  834eb8:	1009883a 	mov	r4,r2
  834ebc:	d8803415 	stw	r2,208(sp)
  834ec0:	0834c200 	call	834c20 <strlen>
  834ec4:	d8c02d17 	ldw	r3,180(sp)
  834ec8:	d8803815 	stw	r2,224(sp)
  834ecc:	1880030b 	ldhu	r2,12(r3)
  834ed0:	1080200c 	andi	r2,r2,128
  834ed4:	10000226 	beq	r2,zero,834ee0 <___svfprintf_internal_r+0x6c>
  834ed8:	18800417 	ldw	r2,16(r3)
  834edc:	1006b126 	beq	r2,zero,8369a4 <___svfprintf_internal_r+0x1b30>
  834ee0:	dcc03917 	ldw	r19,228(sp)
  834ee4:	d8c00404 	addi	r3,sp,16
  834ee8:	054021b4 	movhi	r21,134
  834eec:	d9001e04 	addi	r4,sp,120
  834ef0:	ad644184 	addi	r21,r21,-28410
  834ef4:	d8c01e15 	stw	r3,120(sp)
  834ef8:	d8002015 	stw	zero,128(sp)
  834efc:	d8001f15 	stw	zero,124(sp)
  834f00:	d8003315 	stw	zero,204(sp)
  834f04:	d8003615 	stw	zero,216(sp)
  834f08:	d8003715 	stw	zero,220(sp)
  834f0c:	1811883a 	mov	r8,r3
  834f10:	d8003a15 	stw	zero,232(sp)
  834f14:	d8003b15 	stw	zero,236(sp)
  834f18:	d8002f15 	stw	zero,188(sp)
  834f1c:	d9002815 	stw	r4,160(sp)
  834f20:	b8800007 	ldb	r2,0(r23)
  834f24:	10027726 	beq	r2,zero,835904 <___svfprintf_internal_r+0xa90>
  834f28:	00c00944 	movi	r3,37
  834f2c:	b823883a 	mov	r17,r23
  834f30:	10c0021e 	bne	r2,r3,834f3c <___svfprintf_internal_r+0xc8>
  834f34:	00001406 	br	834f88 <___svfprintf_internal_r+0x114>
  834f38:	10c00326 	beq	r2,r3,834f48 <___svfprintf_internal_r+0xd4>
  834f3c:	8c400044 	addi	r17,r17,1
  834f40:	88800007 	ldb	r2,0(r17)
  834f44:	103ffc1e 	bne	r2,zero,834f38 <__alt_mem_epcs_flash_controller_0+0xff82bf38>
  834f48:	8de1c83a 	sub	r16,r17,r23
  834f4c:	80000e26 	beq	r16,zero,834f88 <___svfprintf_internal_r+0x114>
  834f50:	d8c02017 	ldw	r3,128(sp)
  834f54:	d8801f17 	ldw	r2,124(sp)
  834f58:	45c00015 	stw	r23,0(r8)
  834f5c:	1c07883a 	add	r3,r3,r16
  834f60:	10800044 	addi	r2,r2,1
  834f64:	d8c02015 	stw	r3,128(sp)
  834f68:	44000115 	stw	r16,4(r8)
  834f6c:	d8801f15 	stw	r2,124(sp)
  834f70:	00c001c4 	movi	r3,7
  834f74:	18809916 	blt	r3,r2,8351dc <___svfprintf_internal_r+0x368>
  834f78:	42000204 	addi	r8,r8,8
  834f7c:	d9402f17 	ldw	r5,188(sp)
  834f80:	2c0b883a 	add	r5,r5,r16
  834f84:	d9402f15 	stw	r5,188(sp)
  834f88:	88800007 	ldb	r2,0(r17)
  834f8c:	10009a26 	beq	r2,zero,8351f8 <___svfprintf_internal_r+0x384>
  834f90:	8dc00044 	addi	r23,r17,1
  834f94:	8c400047 	ldb	r17,1(r17)
  834f98:	0021883a 	mov	r16,zero
  834f9c:	00bfffc4 	movi	r2,-1
  834fa0:	0025883a 	mov	r18,zero
  834fa4:	dc002905 	stb	r16,164(sp)
  834fa8:	d8002785 	stb	zero,158(sp)
  834fac:	d8002b05 	stb	zero,172(sp)
  834fb0:	d8802a15 	stw	r2,168(sp)
  834fb4:	d8003115 	stw	zero,196(sp)
  834fb8:	05001604 	movi	r20,88
  834fbc:	05800244 	movi	r22,9
  834fc0:	4039883a 	mov	fp,r8
  834fc4:	9021883a 	mov	r16,r18
  834fc8:	bdc00044 	addi	r23,r23,1
  834fcc:	88bff804 	addi	r2,r17,-32
  834fd0:	a0831e36 	bltu	r20,r2,835c4c <___svfprintf_internal_r+0xdd8>
  834fd4:	100490ba 	slli	r2,r2,2
  834fd8:	00c020f4 	movhi	r3,131
  834fdc:	18d3fb04 	addi	r3,r3,20460
  834fe0:	10c5883a 	add	r2,r2,r3
  834fe4:	10800017 	ldw	r2,0(r2)
  834fe8:	1000683a 	jmp	r2
  834fec:	00835b94 	movui	r2,3438
  834ff0:	00835c4c 	andi	r2,zero,3441
  834ff4:	00835c4c 	andi	r2,zero,3441
  834ff8:	00835b88 	cmpgei	r2,zero,3438
  834ffc:	00835c4c 	andi	r2,zero,3441
  835000:	00835c4c 	andi	r2,zero,3441
  835004:	00835c4c 	andi	r2,zero,3441
  835008:	00835c4c 	andi	r2,zero,3441
  83500c:	00835c4c 	andi	r2,zero,3441
  835010:	00835c4c 	andi	r2,zero,3441
  835014:	00835254 	movui	r2,3401
  835018:	00835a98 	cmpnei	r2,zero,3434
  83501c:	00835c4c 	andi	r2,zero,3441
  835020:	00835160 	cmpeqi	r2,zero,3397
  835024:	00835278 	rdprs	r2,zero,3401
  835028:	00835c4c 	andi	r2,zero,3441
  83502c:	00835304 	movi	r2,3404
  835030:	008352c8 	cmpgei	r2,zero,3403
  835034:	008352c8 	cmpgei	r2,zero,3403
  835038:	008352c8 	cmpgei	r2,zero,3403
  83503c:	008352c8 	cmpgei	r2,zero,3403
  835040:	008352c8 	cmpgei	r2,zero,3403
  835044:	008352c8 	cmpgei	r2,zero,3403
  835048:	008352c8 	cmpgei	r2,zero,3403
  83504c:	008352c8 	cmpgei	r2,zero,3403
  835050:	008352c8 	cmpgei	r2,zero,3403
  835054:	00835c4c 	andi	r2,zero,3441
  835058:	00835c4c 	andi	r2,zero,3441
  83505c:	00835c4c 	andi	r2,zero,3441
  835060:	00835c4c 	andi	r2,zero,3441
  835064:	00835c4c 	andi	r2,zero,3441
  835068:	00835c4c 	andi	r2,zero,3441
  83506c:	00835c4c 	andi	r2,zero,3441
  835070:	00835c4c 	andi	r2,zero,3441
  835074:	00835c4c 	andi	r2,zero,3441
  835078:	00835c4c 	andi	r2,zero,3441
  83507c:	008353c8 	cmpgei	r2,zero,3407
  835080:	00835310 	cmplti	r2,zero,3404
  835084:	00835c4c 	andi	r2,zero,3441
  835088:	00835310 	cmplti	r2,zero,3404
  83508c:	00835c4c 	andi	r2,zero,3441
  835090:	00835c4c 	andi	r2,zero,3441
  835094:	00835c4c 	andi	r2,zero,3441
  835098:	00835c4c 	andi	r2,zero,3441
  83509c:	008353bc 	xorhi	r2,zero,3406
  8350a0:	00835c4c 	andi	r2,zero,3441
  8350a4:	00835c4c 	andi	r2,zero,3441
  8350a8:	00835490 	cmplti	r2,zero,3410
  8350ac:	00835c4c 	andi	r2,zero,3441
  8350b0:	00835c4c 	andi	r2,zero,3441
  8350b4:	00835c4c 	andi	r2,zero,3441
  8350b8:	00835c4c 	andi	r2,zero,3441
  8350bc:	00835c4c 	andi	r2,zero,3441
  8350c0:	0083590c 	andi	r2,zero,3428
  8350c4:	00835c4c 	andi	r2,zero,3441
  8350c8:	00835c4c 	andi	r2,zero,3441
  8350cc:	00835978 	rdprs	r2,zero,3429
  8350d0:	00835c4c 	andi	r2,zero,3441
  8350d4:	00835c4c 	andi	r2,zero,3441
  8350d8:	00835c4c 	andi	r2,zero,3441
  8350dc:	00835c4c 	andi	r2,zero,3441
  8350e0:	00835c4c 	andi	r2,zero,3441
  8350e4:	00835c4c 	andi	r2,zero,3441
  8350e8:	00835c4c 	andi	r2,zero,3441
  8350ec:	00835c4c 	andi	r2,zero,3441
  8350f0:	00835c4c 	andi	r2,zero,3441
  8350f4:	00835c4c 	andi	r2,zero,3441
  8350f8:	00835a34 	movhi	r2,3432
  8350fc:	00835bb4 	movhi	r2,3438
  835100:	00835310 	cmplti	r2,zero,3404
  835104:	00835310 	cmplti	r2,zero,3404
  835108:	00835310 	cmplti	r2,zero,3404
  83510c:	00835c28 	cmpgeui	r2,zero,3440
  835110:	00835bb4 	movhi	r2,3438
  835114:	00835c4c 	andi	r2,zero,3441
  835118:	00835c4c 	andi	r2,zero,3441
  83511c:	00835bd4 	movui	r2,3439
  835120:	00835c4c 	andi	r2,zero,3441
  835124:	00835be8 	cmpgeui	r2,zero,3439
  835128:	00835a78 	rdprs	r2,zero,3433
  83512c:	0083516c 	andhi	r2,zero,3397
  835130:	00835ab0 	cmpltui	r2,zero,3434
  835134:	00835c4c 	andi	r2,zero,3441
  835138:	00835abc 	xorhi	r2,zero,3434
  83513c:	00835c4c 	andi	r2,zero,3441
  835140:	00835b20 	cmpeqi	r2,zero,3436
  835144:	00835c4c 	andi	r2,zero,3441
  835148:	00835c4c 	andi	r2,zero,3441
  83514c:	00835b40 	call	835b4 <OSCtxSw_SWITCH_PC+0x83574>
  835150:	d8c03117 	ldw	r3,196(sp)
  835154:	d8802e15 	stw	r2,184(sp)
  835158:	00c7c83a 	sub	r3,zero,r3
  83515c:	d8c03115 	stw	r3,196(sp)
  835160:	84000114 	ori	r16,r16,4
  835164:	bc400007 	ldb	r17,0(r23)
  835168:	003f9706 	br	834fc8 <__alt_mem_epcs_flash_controller_0+0xff82bfc8>
  83516c:	00800c04 	movi	r2,48
  835170:	d8802705 	stb	r2,156(sp)
  835174:	00801e04 	movi	r2,120
  835178:	d8802745 	stb	r2,157(sp)
  83517c:	d9002a17 	ldw	r4,168(sp)
  835180:	d8802e17 	ldw	r2,184(sp)
  835184:	d8002785 	stb	zero,158(sp)
  835188:	e011883a 	mov	r8,fp
  83518c:	10c00104 	addi	r3,r2,4
  835190:	15000017 	ldw	r20,0(r2)
  835194:	002d883a 	mov	r22,zero
  835198:	80800094 	ori	r2,r16,2
  83519c:	2002b616 	blt	r4,zero,835c78 <___svfprintf_internal_r+0xe04>
  8351a0:	00bfdfc4 	movi	r2,-129
  8351a4:	80a4703a 	and	r18,r16,r2
  8351a8:	d8c02e15 	stw	r3,184(sp)
  8351ac:	94800094 	ori	r18,r18,2
  8351b0:	a002a01e 	bne	r20,zero,835c34 <___svfprintf_internal_r+0xdc0>
  8351b4:	014021b4 	movhi	r5,134
  8351b8:	29643a04 	addi	r5,r5,-28440
  8351bc:	d9403a15 	stw	r5,232(sp)
  8351c0:	04401e04 	movi	r17,120
  8351c4:	d8c02a17 	ldw	r3,168(sp)
  8351c8:	0039883a 	mov	fp,zero
  8351cc:	1801e626 	beq	r3,zero,835968 <___svfprintf_internal_r+0xaf4>
  8351d0:	0029883a 	mov	r20,zero
  8351d4:	002d883a 	mov	r22,zero
  8351d8:	00020506 	br	8359f0 <___svfprintf_internal_r+0xb7c>
  8351dc:	d9402d17 	ldw	r5,180(sp)
  8351e0:	d9801e04 	addi	r6,sp,120
  8351e4:	9809883a 	mov	r4,r19
  8351e8:	08412d00 	call	8412d0 <__ssprint_r>
  8351ec:	1000081e 	bne	r2,zero,835210 <___svfprintf_internal_r+0x39c>
  8351f0:	da000404 	addi	r8,sp,16
  8351f4:	003f6106 	br	834f7c <__alt_mem_epcs_flash_controller_0+0xff82bf7c>
  8351f8:	d8802017 	ldw	r2,128(sp)
  8351fc:	10000426 	beq	r2,zero,835210 <___svfprintf_internal_r+0x39c>
  835200:	d9402d17 	ldw	r5,180(sp)
  835204:	d9003917 	ldw	r4,228(sp)
  835208:	d9801e04 	addi	r6,sp,120
  83520c:	08412d00 	call	8412d0 <__ssprint_r>
  835210:	d8802d17 	ldw	r2,180(sp)
  835214:	10c0030b 	ldhu	r3,12(r2)
  835218:	d8802f17 	ldw	r2,188(sp)
  83521c:	18c0100c 	andi	r3,r3,64
  835220:	1806251e 	bne	r3,zero,836ab8 <___svfprintf_internal_r+0x1c44>
  835224:	dfc04817 	ldw	ra,288(sp)
  835228:	df004717 	ldw	fp,284(sp)
  83522c:	ddc04617 	ldw	r23,280(sp)
  835230:	dd804517 	ldw	r22,276(sp)
  835234:	dd404417 	ldw	r21,272(sp)
  835238:	dd004317 	ldw	r20,268(sp)
  83523c:	dcc04217 	ldw	r19,264(sp)
  835240:	dc804117 	ldw	r18,260(sp)
  835244:	dc404017 	ldw	r17,256(sp)
  835248:	dc003f17 	ldw	r16,252(sp)
  83524c:	dec04904 	addi	sp,sp,292
  835250:	f800283a 	ret
  835254:	d9002e17 	ldw	r4,184(sp)
  835258:	d9402e17 	ldw	r5,184(sp)
  83525c:	21000017 	ldw	r4,0(r4)
  835260:	28800104 	addi	r2,r5,4
  835264:	d9003115 	stw	r4,196(sp)
  835268:	203fb916 	blt	r4,zero,835150 <__alt_mem_epcs_flash_controller_0+0xff82c150>
  83526c:	d8802e15 	stw	r2,184(sp)
  835270:	bc400007 	ldb	r17,0(r23)
  835274:	003f5406 	br	834fc8 <__alt_mem_epcs_flash_controller_0+0xff82bfc8>
  835278:	bc400007 	ldb	r17,0(r23)
  83527c:	01000a84 	movi	r4,42
  835280:	b8c00044 	addi	r3,r23,1
  835284:	89076926 	beq	r17,r4,83702c <___svfprintf_internal_r+0x21b8>
  835288:	8cbff404 	addi	r18,r17,-48
  83528c:	b486b936 	bltu	r22,r18,836d74 <___svfprintf_internal_r+0x1f00>
  835290:	0009883a 	mov	r4,zero
  835294:	1823883a 	mov	r17,r3
  835298:	01400284 	movi	r5,10
  83529c:	08305040 	call	830504 <__mulsi3>
  8352a0:	88c00007 	ldb	r3,0(r17)
  8352a4:	1489883a 	add	r4,r2,r18
  8352a8:	8dc00044 	addi	r23,r17,1
  8352ac:	1cbff404 	addi	r18,r3,-48
  8352b0:	b823883a 	mov	r17,r23
  8352b4:	b4bff82e 	bgeu	r22,r18,835298 <__alt_mem_epcs_flash_controller_0+0xff82c298>
  8352b8:	1823883a 	mov	r17,r3
  8352bc:	20060416 	blt	r4,zero,836ad0 <___svfprintf_internal_r+0x1c5c>
  8352c0:	d9002a15 	stw	r4,168(sp)
  8352c4:	003f4106 	br	834fcc <__alt_mem_epcs_flash_controller_0+0xff82bfcc>
  8352c8:	8cbff404 	addi	r18,r17,-48
  8352cc:	d8003115 	stw	zero,196(sp)
  8352d0:	0009883a 	mov	r4,zero
  8352d4:	b823883a 	mov	r17,r23
  8352d8:	01400284 	movi	r5,10
  8352dc:	08305040 	call	830504 <__mulsi3>
  8352e0:	88c00007 	ldb	r3,0(r17)
  8352e4:	9089883a 	add	r4,r18,r2
  8352e8:	bdc00044 	addi	r23,r23,1
  8352ec:	1cbff404 	addi	r18,r3,-48
  8352f0:	b823883a 	mov	r17,r23
  8352f4:	b4bff82e 	bgeu	r22,r18,8352d8 <__alt_mem_epcs_flash_controller_0+0xff82c2d8>
  8352f8:	1823883a 	mov	r17,r3
  8352fc:	d9003115 	stw	r4,196(sp)
  835300:	003f3206 	br	834fcc <__alt_mem_epcs_flash_controller_0+0xff82bfcc>
  835304:	84002014 	ori	r16,r16,128
  835308:	bc400007 	ldb	r17,0(r23)
  83530c:	003f2e06 	br	834fc8 <__alt_mem_epcs_flash_controller_0+0xff82bfc8>
  835310:	8025883a 	mov	r18,r16
  835314:	dc002903 	ldbu	r16,164(sp)
  835318:	e011883a 	mov	r8,fp
  83531c:	84003fcc 	andi	r16,r16,255
  835320:	8007721e 	bne	r16,zero,8370ec <___svfprintf_internal_r+0x2278>
  835324:	9080020c 	andi	r2,r18,8
  835328:	1004a526 	beq	r2,zero,8365c0 <___svfprintf_internal_r+0x174c>
  83532c:	d9002e17 	ldw	r4,184(sp)
  835330:	d9402e17 	ldw	r5,184(sp)
  835334:	d8802e17 	ldw	r2,184(sp)
  835338:	21000017 	ldw	r4,0(r4)
  83533c:	29400117 	ldw	r5,4(r5)
  835340:	10800204 	addi	r2,r2,8
  835344:	d9003615 	stw	r4,216(sp)
  835348:	d9403715 	stw	r5,220(sp)
  83534c:	d8802e15 	stw	r2,184(sp)
  835350:	d9003617 	ldw	r4,216(sp)
  835354:	d9403717 	ldw	r5,220(sp)
  835358:	da003e15 	stw	r8,248(sp)
  83535c:	04000044 	movi	r16,1
  835360:	083ee1c0 	call	83ee1c <__fpclassifyd>
  835364:	da003e17 	ldw	r8,248(sp)
  835368:	1404731e 	bne	r2,r16,836538 <___svfprintf_internal_r+0x16c4>
  83536c:	d9003617 	ldw	r4,216(sp)
  835370:	d9403717 	ldw	r5,220(sp)
  835374:	000d883a 	mov	r6,zero
  835378:	000f883a 	mov	r7,zero
  83537c:	08489100 	call	848910 <__ledf2>
  835380:	da003e17 	ldw	r8,248(sp)
  835384:	10061b16 	blt	r2,zero,836bf4 <___svfprintf_internal_r+0x1d80>
  835388:	df002783 	ldbu	fp,158(sp)
  83538c:	008011c4 	movi	r2,71
  835390:	1445810e 	bge	r2,r17,836998 <___svfprintf_internal_r+0x1b24>
  835394:	040021b4 	movhi	r16,134
  835398:	84243204 	addi	r16,r16,-28472
  83539c:	00c000c4 	movi	r3,3
  8353a0:	00bfdfc4 	movi	r2,-129
  8353a4:	d8c02915 	stw	r3,164(sp)
  8353a8:	90a4703a 	and	r18,r18,r2
  8353ac:	d8c02b15 	stw	r3,172(sp)
  8353b0:	d8002a15 	stw	zero,168(sp)
  8353b4:	d8003215 	stw	zero,200(sp)
  8353b8:	00006c06 	br	83556c <___svfprintf_internal_r+0x6f8>
  8353bc:	84000214 	ori	r16,r16,8
  8353c0:	bc400007 	ldb	r17,0(r23)
  8353c4:	003f0006 	br	834fc8 <__alt_mem_epcs_flash_controller_0+0xff82bfc8>
  8353c8:	8025883a 	mov	r18,r16
  8353cc:	dc002903 	ldbu	r16,164(sp)
  8353d0:	e011883a 	mov	r8,fp
  8353d4:	84003fcc 	andi	r16,r16,255
  8353d8:	80073f1e 	bne	r16,zero,8370d8 <___svfprintf_internal_r+0x2264>
  8353dc:	94800414 	ori	r18,r18,16
  8353e0:	9080080c 	andi	r2,r18,32
  8353e4:	1003bb26 	beq	r2,zero,8362d4 <___svfprintf_internal_r+0x1460>
  8353e8:	d9002e17 	ldw	r4,184(sp)
  8353ec:	20800117 	ldw	r2,4(r4)
  8353f0:	25000017 	ldw	r20,0(r4)
  8353f4:	21000204 	addi	r4,r4,8
  8353f8:	d9002e15 	stw	r4,184(sp)
  8353fc:	102d883a 	mov	r22,r2
  835400:	1003bd16 	blt	r2,zero,8362f8 <___svfprintf_internal_r+0x1484>
  835404:	d9002a17 	ldw	r4,168(sp)
  835408:	df002783 	ldbu	fp,158(sp)
  83540c:	2003d016 	blt	r4,zero,836350 <___svfprintf_internal_r+0x14dc>
  835410:	00ffdfc4 	movi	r3,-129
  835414:	a584b03a 	or	r2,r20,r22
  835418:	90e4703a 	and	r18,r18,r3
  83541c:	10015026 	beq	r2,zero,835960 <___svfprintf_internal_r+0xaec>
  835420:	b0037026 	beq	r22,zero,8361e4 <___svfprintf_internal_r+0x1370>
  835424:	dc402915 	stw	r17,164(sp)
  835428:	dc001e04 	addi	r16,sp,120
  83542c:	b023883a 	mov	r17,r22
  835430:	402d883a 	mov	r22,r8
  835434:	a009883a 	mov	r4,r20
  835438:	880b883a 	mov	r5,r17
  83543c:	01800284 	movi	r6,10
  835440:	000f883a 	mov	r7,zero
  835444:	0846d700 	call	846d70 <__umoddi3>
  835448:	10800c04 	addi	r2,r2,48
  83544c:	843fffc4 	addi	r16,r16,-1
  835450:	a009883a 	mov	r4,r20
  835454:	880b883a 	mov	r5,r17
  835458:	80800005 	stb	r2,0(r16)
  83545c:	01800284 	movi	r6,10
  835460:	000f883a 	mov	r7,zero
  835464:	08467740 	call	846774 <__udivdi3>
  835468:	1029883a 	mov	r20,r2
  83546c:	10c4b03a 	or	r2,r2,r3
  835470:	1823883a 	mov	r17,r3
  835474:	103fef1e 	bne	r2,zero,835434 <__alt_mem_epcs_flash_controller_0+0xff82c434>
  835478:	d8c02817 	ldw	r3,160(sp)
  83547c:	dc402917 	ldw	r17,164(sp)
  835480:	b011883a 	mov	r8,r22
  835484:	1c07c83a 	sub	r3,r3,r16
  835488:	d8c02b15 	stw	r3,172(sp)
  83548c:	00003106 	br	835554 <___svfprintf_internal_r+0x6e0>
  835490:	8025883a 	mov	r18,r16
  835494:	dc002903 	ldbu	r16,164(sp)
  835498:	e011883a 	mov	r8,fp
  83549c:	84003fcc 	andi	r16,r16,255
  8354a0:	80070a1e 	bne	r16,zero,8370cc <___svfprintf_internal_r+0x2258>
  8354a4:	94800414 	ori	r18,r18,16
  8354a8:	9080080c 	andi	r2,r18,32
  8354ac:	1002f626 	beq	r2,zero,836088 <___svfprintf_internal_r+0x1214>
  8354b0:	d9002e17 	ldw	r4,184(sp)
  8354b4:	d9402a17 	ldw	r5,168(sp)
  8354b8:	d8002785 	stb	zero,158(sp)
  8354bc:	20800204 	addi	r2,r4,8
  8354c0:	25000017 	ldw	r20,0(r4)
  8354c4:	25800117 	ldw	r22,4(r4)
  8354c8:	28043716 	blt	r5,zero,8365a8 <___svfprintf_internal_r+0x1734>
  8354cc:	013fdfc4 	movi	r4,-129
  8354d0:	a586b03a 	or	r3,r20,r22
  8354d4:	d8802e15 	stw	r2,184(sp)
  8354d8:	9124703a 	and	r18,r18,r4
  8354dc:	1802f71e 	bne	r3,zero,8360bc <___svfprintf_internal_r+0x1248>
  8354e0:	d9402a17 	ldw	r5,168(sp)
  8354e4:	0039883a 	mov	fp,zero
  8354e8:	2806df26 	beq	r5,zero,837068 <___svfprintf_internal_r+0x21f4>
  8354ec:	0029883a 	mov	r20,zero
  8354f0:	002d883a 	mov	r22,zero
  8354f4:	dc001e04 	addi	r16,sp,120
  8354f8:	a006d0fa 	srli	r3,r20,3
  8354fc:	b008977a 	slli	r4,r22,29
  835500:	b02cd0fa 	srli	r22,r22,3
  835504:	a50001cc 	andi	r20,r20,7
  835508:	a0800c04 	addi	r2,r20,48
  83550c:	843fffc4 	addi	r16,r16,-1
  835510:	20e8b03a 	or	r20,r4,r3
  835514:	80800005 	stb	r2,0(r16)
  835518:	a586b03a 	or	r3,r20,r22
  83551c:	183ff61e 	bne	r3,zero,8354f8 <__alt_mem_epcs_flash_controller_0+0xff82c4f8>
  835520:	90c0004c 	andi	r3,r18,1
  835524:	18013f26 	beq	r3,zero,835a24 <___svfprintf_internal_r+0xbb0>
  835528:	10803fcc 	andi	r2,r2,255
  83552c:	1080201c 	xori	r2,r2,128
  835530:	10bfe004 	addi	r2,r2,-128
  835534:	00c00c04 	movi	r3,48
  835538:	10c13a26 	beq	r2,r3,835a24 <___svfprintf_internal_r+0xbb0>
  83553c:	80ffffc5 	stb	r3,-1(r16)
  835540:	d8c02817 	ldw	r3,160(sp)
  835544:	80bfffc4 	addi	r2,r16,-1
  835548:	1021883a 	mov	r16,r2
  83554c:	1887c83a 	sub	r3,r3,r2
  835550:	d8c02b15 	stw	r3,172(sp)
  835554:	d8802b17 	ldw	r2,172(sp)
  835558:	d9002a17 	ldw	r4,168(sp)
  83555c:	1100010e 	bge	r2,r4,835564 <___svfprintf_internal_r+0x6f0>
  835560:	2005883a 	mov	r2,r4
  835564:	d8802915 	stw	r2,164(sp)
  835568:	d8003215 	stw	zero,200(sp)
  83556c:	e7003fcc 	andi	fp,fp,255
  835570:	e700201c 	xori	fp,fp,128
  835574:	e73fe004 	addi	fp,fp,-128
  835578:	e0000326 	beq	fp,zero,835588 <___svfprintf_internal_r+0x714>
  83557c:	d8c02917 	ldw	r3,164(sp)
  835580:	18c00044 	addi	r3,r3,1
  835584:	d8c02915 	stw	r3,164(sp)
  835588:	90c0008c 	andi	r3,r18,2
  83558c:	d8c02c15 	stw	r3,176(sp)
  835590:	18000326 	beq	r3,zero,8355a0 <___svfprintf_internal_r+0x72c>
  835594:	d8c02917 	ldw	r3,164(sp)
  835598:	18c00084 	addi	r3,r3,2
  83559c:	d8c02915 	stw	r3,164(sp)
  8355a0:	90c0210c 	andi	r3,r18,132
  8355a4:	d8c03015 	stw	r3,192(sp)
  8355a8:	1801c31e 	bne	r3,zero,835cb8 <___svfprintf_internal_r+0xe44>
  8355ac:	d9003117 	ldw	r4,196(sp)
  8355b0:	d8c02917 	ldw	r3,164(sp)
  8355b4:	20e9c83a 	sub	r20,r4,r3
  8355b8:	0501bf0e 	bge	zero,r20,835cb8 <___svfprintf_internal_r+0xe44>
  8355bc:	02400404 	movi	r9,16
  8355c0:	d8c02017 	ldw	r3,128(sp)
  8355c4:	d8801f17 	ldw	r2,124(sp)
  8355c8:	4d053d0e 	bge	r9,r20,836ac0 <___svfprintf_internal_r+0x1c4c>
  8355cc:	014021b4 	movhi	r5,134
  8355d0:	29644584 	addi	r5,r5,-28394
  8355d4:	dc403c15 	stw	r17,240(sp)
  8355d8:	d9403515 	stw	r5,212(sp)
  8355dc:	a023883a 	mov	r17,r20
  8355e0:	482d883a 	mov	r22,r9
  8355e4:	9029883a 	mov	r20,r18
  8355e8:	070001c4 	movi	fp,7
  8355ec:	8025883a 	mov	r18,r16
  8355f0:	dc002d17 	ldw	r16,180(sp)
  8355f4:	00000306 	br	835604 <___svfprintf_internal_r+0x790>
  8355f8:	8c7ffc04 	addi	r17,r17,-16
  8355fc:	42000204 	addi	r8,r8,8
  835600:	b440130e 	bge	r22,r17,835650 <___svfprintf_internal_r+0x7dc>
  835604:	010021b4 	movhi	r4,134
  835608:	18c00404 	addi	r3,r3,16
  83560c:	10800044 	addi	r2,r2,1
  835610:	21244584 	addi	r4,r4,-28394
  835614:	41000015 	stw	r4,0(r8)
  835618:	45800115 	stw	r22,4(r8)
  83561c:	d8c02015 	stw	r3,128(sp)
  835620:	d8801f15 	stw	r2,124(sp)
  835624:	e0bff40e 	bge	fp,r2,8355f8 <__alt_mem_epcs_flash_controller_0+0xff82c5f8>
  835628:	d9801e04 	addi	r6,sp,120
  83562c:	800b883a 	mov	r5,r16
  835630:	9809883a 	mov	r4,r19
  835634:	08412d00 	call	8412d0 <__ssprint_r>
  835638:	103ef51e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  83563c:	8c7ffc04 	addi	r17,r17,-16
  835640:	d8c02017 	ldw	r3,128(sp)
  835644:	d8801f17 	ldw	r2,124(sp)
  835648:	da000404 	addi	r8,sp,16
  83564c:	b47fed16 	blt	r22,r17,835604 <__alt_mem_epcs_flash_controller_0+0xff82c604>
  835650:	9021883a 	mov	r16,r18
  835654:	a025883a 	mov	r18,r20
  835658:	8829883a 	mov	r20,r17
  83565c:	dc403c17 	ldw	r17,240(sp)
  835660:	d9403517 	ldw	r5,212(sp)
  835664:	a0c7883a 	add	r3,r20,r3
  835668:	10800044 	addi	r2,r2,1
  83566c:	41400015 	stw	r5,0(r8)
  835670:	45000115 	stw	r20,4(r8)
  835674:	d8c02015 	stw	r3,128(sp)
  835678:	d8801f15 	stw	r2,124(sp)
  83567c:	010001c4 	movi	r4,7
  835680:	2082c116 	blt	r4,r2,836188 <___svfprintf_internal_r+0x1314>
  835684:	df002787 	ldb	fp,158(sp)
  835688:	42000204 	addi	r8,r8,8
  83568c:	e0000c26 	beq	fp,zero,8356c0 <___svfprintf_internal_r+0x84c>
  835690:	d8801f17 	ldw	r2,124(sp)
  835694:	d9002784 	addi	r4,sp,158
  835698:	18c00044 	addi	r3,r3,1
  83569c:	10800044 	addi	r2,r2,1
  8356a0:	41000015 	stw	r4,0(r8)
  8356a4:	01000044 	movi	r4,1
  8356a8:	41000115 	stw	r4,4(r8)
  8356ac:	d8c02015 	stw	r3,128(sp)
  8356b0:	d8801f15 	stw	r2,124(sp)
  8356b4:	010001c4 	movi	r4,7
  8356b8:	20825a16 	blt	r4,r2,836024 <___svfprintf_internal_r+0x11b0>
  8356bc:	42000204 	addi	r8,r8,8
  8356c0:	d8802c17 	ldw	r2,176(sp)
  8356c4:	10000c26 	beq	r2,zero,8356f8 <___svfprintf_internal_r+0x884>
  8356c8:	d8801f17 	ldw	r2,124(sp)
  8356cc:	d9002704 	addi	r4,sp,156
  8356d0:	18c00084 	addi	r3,r3,2
  8356d4:	10800044 	addi	r2,r2,1
  8356d8:	41000015 	stw	r4,0(r8)
  8356dc:	01000084 	movi	r4,2
  8356e0:	41000115 	stw	r4,4(r8)
  8356e4:	d8c02015 	stw	r3,128(sp)
  8356e8:	d8801f15 	stw	r2,124(sp)
  8356ec:	010001c4 	movi	r4,7
  8356f0:	20825416 	blt	r4,r2,836044 <___svfprintf_internal_r+0x11d0>
  8356f4:	42000204 	addi	r8,r8,8
  8356f8:	d9003017 	ldw	r4,192(sp)
  8356fc:	00802004 	movi	r2,128
  835700:	2081b926 	beq	r4,r2,835de8 <___svfprintf_internal_r+0xf74>
  835704:	d9402a17 	ldw	r5,168(sp)
  835708:	d8802b17 	ldw	r2,172(sp)
  83570c:	28adc83a 	sub	r22,r5,r2
  835710:	05802f0e 	bge	zero,r22,8357d0 <___svfprintf_internal_r+0x95c>
  835714:	07000404 	movi	fp,16
  835718:	d8801f17 	ldw	r2,124(sp)
  83571c:	e583e20e 	bge	fp,r22,8366a8 <___svfprintf_internal_r+0x1834>
  835720:	014021b4 	movhi	r5,134
  835724:	29644184 	addi	r5,r5,-28410
  835728:	dc402a15 	stw	r17,168(sp)
  83572c:	d9402c15 	stw	r5,176(sp)
  835730:	b023883a 	mov	r17,r22
  835734:	050001c4 	movi	r20,7
  835738:	902d883a 	mov	r22,r18
  83573c:	8025883a 	mov	r18,r16
  835740:	dc002d17 	ldw	r16,180(sp)
  835744:	00000306 	br	835754 <___svfprintf_internal_r+0x8e0>
  835748:	8c7ffc04 	addi	r17,r17,-16
  83574c:	42000204 	addi	r8,r8,8
  835750:	e440110e 	bge	fp,r17,835798 <___svfprintf_internal_r+0x924>
  835754:	18c00404 	addi	r3,r3,16
  835758:	10800044 	addi	r2,r2,1
  83575c:	45400015 	stw	r21,0(r8)
  835760:	47000115 	stw	fp,4(r8)
  835764:	d8c02015 	stw	r3,128(sp)
  835768:	d8801f15 	stw	r2,124(sp)
  83576c:	a0bff60e 	bge	r20,r2,835748 <__alt_mem_epcs_flash_controller_0+0xff82c748>
  835770:	d9801e04 	addi	r6,sp,120
  835774:	800b883a 	mov	r5,r16
  835778:	9809883a 	mov	r4,r19
  83577c:	08412d00 	call	8412d0 <__ssprint_r>
  835780:	103ea31e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  835784:	8c7ffc04 	addi	r17,r17,-16
  835788:	d8c02017 	ldw	r3,128(sp)
  83578c:	d8801f17 	ldw	r2,124(sp)
  835790:	da000404 	addi	r8,sp,16
  835794:	e47fef16 	blt	fp,r17,835754 <__alt_mem_epcs_flash_controller_0+0xff82c754>
  835798:	9021883a 	mov	r16,r18
  83579c:	b025883a 	mov	r18,r22
  8357a0:	882d883a 	mov	r22,r17
  8357a4:	dc402a17 	ldw	r17,168(sp)
  8357a8:	d9002c17 	ldw	r4,176(sp)
  8357ac:	1d87883a 	add	r3,r3,r22
  8357b0:	10800044 	addi	r2,r2,1
  8357b4:	41000015 	stw	r4,0(r8)
  8357b8:	45800115 	stw	r22,4(r8)
  8357bc:	d8c02015 	stw	r3,128(sp)
  8357c0:	d8801f15 	stw	r2,124(sp)
  8357c4:	010001c4 	movi	r4,7
  8357c8:	20820e16 	blt	r4,r2,836004 <___svfprintf_internal_r+0x1190>
  8357cc:	42000204 	addi	r8,r8,8
  8357d0:	9080400c 	andi	r2,r18,256
  8357d4:	10013a1e 	bne	r2,zero,835cc0 <___svfprintf_internal_r+0xe4c>
  8357d8:	d9402b17 	ldw	r5,172(sp)
  8357dc:	d8801f17 	ldw	r2,124(sp)
  8357e0:	44000015 	stw	r16,0(r8)
  8357e4:	1947883a 	add	r3,r3,r5
  8357e8:	10800044 	addi	r2,r2,1
  8357ec:	41400115 	stw	r5,4(r8)
  8357f0:	d8c02015 	stw	r3,128(sp)
  8357f4:	d8801f15 	stw	r2,124(sp)
  8357f8:	010001c4 	movi	r4,7
  8357fc:	2081f316 	blt	r4,r2,835fcc <___svfprintf_internal_r+0x1158>
  835800:	42000204 	addi	r8,r8,8
  835804:	9480010c 	andi	r18,r18,4
  835808:	90003226 	beq	r18,zero,8358d4 <___svfprintf_internal_r+0xa60>
  83580c:	d9403117 	ldw	r5,196(sp)
  835810:	d8802917 	ldw	r2,164(sp)
  835814:	28a1c83a 	sub	r16,r5,r2
  835818:	04002e0e 	bge	zero,r16,8358d4 <___svfprintf_internal_r+0xa60>
  83581c:	04400404 	movi	r17,16
  835820:	d8801f17 	ldw	r2,124(sp)
  835824:	8c04db0e 	bge	r17,r16,836b94 <___svfprintf_internal_r+0x1d20>
  835828:	014021b4 	movhi	r5,134
  83582c:	29644584 	addi	r5,r5,-28394
  835830:	d9403515 	stw	r5,212(sp)
  835834:	048001c4 	movi	r18,7
  835838:	dd002d17 	ldw	r20,180(sp)
  83583c:	00000306 	br	83584c <___svfprintf_internal_r+0x9d8>
  835840:	843ffc04 	addi	r16,r16,-16
  835844:	42000204 	addi	r8,r8,8
  835848:	8c00130e 	bge	r17,r16,835898 <___svfprintf_internal_r+0xa24>
  83584c:	010021b4 	movhi	r4,134
  835850:	18c00404 	addi	r3,r3,16
  835854:	10800044 	addi	r2,r2,1
  835858:	21244584 	addi	r4,r4,-28394
  83585c:	41000015 	stw	r4,0(r8)
  835860:	44400115 	stw	r17,4(r8)
  835864:	d8c02015 	stw	r3,128(sp)
  835868:	d8801f15 	stw	r2,124(sp)
  83586c:	90bff40e 	bge	r18,r2,835840 <__alt_mem_epcs_flash_controller_0+0xff82c840>
  835870:	d9801e04 	addi	r6,sp,120
  835874:	a00b883a 	mov	r5,r20
  835878:	9809883a 	mov	r4,r19
  83587c:	08412d00 	call	8412d0 <__ssprint_r>
  835880:	103e631e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  835884:	843ffc04 	addi	r16,r16,-16
  835888:	d8c02017 	ldw	r3,128(sp)
  83588c:	d8801f17 	ldw	r2,124(sp)
  835890:	da000404 	addi	r8,sp,16
  835894:	8c3fed16 	blt	r17,r16,83584c <__alt_mem_epcs_flash_controller_0+0xff82c84c>
  835898:	d9403517 	ldw	r5,212(sp)
  83589c:	1c07883a 	add	r3,r3,r16
  8358a0:	10800044 	addi	r2,r2,1
  8358a4:	41400015 	stw	r5,0(r8)
  8358a8:	44000115 	stw	r16,4(r8)
  8358ac:	d8c02015 	stw	r3,128(sp)
  8358b0:	d8801f15 	stw	r2,124(sp)
  8358b4:	010001c4 	movi	r4,7
  8358b8:	2080060e 	bge	r4,r2,8358d4 <___svfprintf_internal_r+0xa60>
  8358bc:	d9402d17 	ldw	r5,180(sp)
  8358c0:	d9801e04 	addi	r6,sp,120
  8358c4:	9809883a 	mov	r4,r19
  8358c8:	08412d00 	call	8412d0 <__ssprint_r>
  8358cc:	103e501e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  8358d0:	d8c02017 	ldw	r3,128(sp)
  8358d4:	d8803117 	ldw	r2,196(sp)
  8358d8:	d9002917 	ldw	r4,164(sp)
  8358dc:	1100010e 	bge	r2,r4,8358e4 <___svfprintf_internal_r+0xa70>
  8358e0:	2005883a 	mov	r2,r4
  8358e4:	d9402f17 	ldw	r5,188(sp)
  8358e8:	288b883a 	add	r5,r5,r2
  8358ec:	d9402f15 	stw	r5,188(sp)
  8358f0:	1801be1e 	bne	r3,zero,835fec <___svfprintf_internal_r+0x1178>
  8358f4:	b8800007 	ldb	r2,0(r23)
  8358f8:	d8001f15 	stw	zero,124(sp)
  8358fc:	da000404 	addi	r8,sp,16
  835900:	103d891e 	bne	r2,zero,834f28 <__alt_mem_epcs_flash_controller_0+0xff82bf28>
  835904:	b823883a 	mov	r17,r23
  835908:	003d9f06 	br	834f88 <__alt_mem_epcs_flash_controller_0+0xff82bf88>
  83590c:	8025883a 	mov	r18,r16
  835910:	dc002903 	ldbu	r16,164(sp)
  835914:	e011883a 	mov	r8,fp
  835918:	84003fcc 	andi	r16,r16,255
  83591c:	8005e61e 	bne	r16,zero,8370b8 <___svfprintf_internal_r+0x2244>
  835920:	94800414 	ori	r18,r18,16
  835924:	9080080c 	andi	r2,r18,32
  835928:	10022026 	beq	r2,zero,8361ac <___svfprintf_internal_r+0x1338>
  83592c:	d9002e17 	ldw	r4,184(sp)
  835930:	d9402a17 	ldw	r5,168(sp)
  835934:	d8002785 	stb	zero,158(sp)
  835938:	20c00204 	addi	r3,r4,8
  83593c:	25000017 	ldw	r20,0(r4)
  835940:	25800117 	ldw	r22,4(r4)
  835944:	2803ad16 	blt	r5,zero,8367fc <___svfprintf_internal_r+0x1988>
  835948:	013fdfc4 	movi	r4,-129
  83594c:	a584b03a 	or	r2,r20,r22
  835950:	d8c02e15 	stw	r3,184(sp)
  835954:	9124703a 	and	r18,r18,r4
  835958:	0039883a 	mov	fp,zero
  83595c:	103eb01e 	bne	r2,zero,835420 <__alt_mem_epcs_flash_controller_0+0xff82c420>
  835960:	d8802a17 	ldw	r2,168(sp)
  835964:	1002e71e 	bne	r2,zero,836504 <___svfprintf_internal_r+0x1690>
  835968:	d8002a15 	stw	zero,168(sp)
  83596c:	d8002b15 	stw	zero,172(sp)
  835970:	dc001e04 	addi	r16,sp,120
  835974:	003ef706 	br	835554 <__alt_mem_epcs_flash_controller_0+0xff82c554>
  835978:	8025883a 	mov	r18,r16
  83597c:	dc002903 	ldbu	r16,164(sp)
  835980:	e011883a 	mov	r8,fp
  835984:	84003fcc 	andi	r16,r16,255
  835988:	8005c81e 	bne	r16,zero,8370ac <___svfprintf_internal_r+0x2238>
  83598c:	010021b4 	movhi	r4,134
  835990:	21243504 	addi	r4,r4,-28460
  835994:	d9003a15 	stw	r4,232(sp)
  835998:	9080080c 	andi	r2,r18,32
  83599c:	10007226 	beq	r2,zero,835b68 <___svfprintf_internal_r+0xcf4>
  8359a0:	d9402e17 	ldw	r5,184(sp)
  8359a4:	2d000017 	ldw	r20,0(r5)
  8359a8:	2d800117 	ldw	r22,4(r5)
  8359ac:	29400204 	addi	r5,r5,8
  8359b0:	d9402e15 	stw	r5,184(sp)
  8359b4:	9080004c 	andi	r2,r18,1
  8359b8:	1001aa26 	beq	r2,zero,836064 <___svfprintf_internal_r+0x11f0>
  8359bc:	a584b03a 	or	r2,r20,r22
  8359c0:	10032526 	beq	r2,zero,836658 <___svfprintf_internal_r+0x17e4>
  8359c4:	d8c02a17 	ldw	r3,168(sp)
  8359c8:	00800c04 	movi	r2,48
  8359cc:	d8802705 	stb	r2,156(sp)
  8359d0:	dc402745 	stb	r17,157(sp)
  8359d4:	d8002785 	stb	zero,158(sp)
  8359d8:	90800094 	ori	r2,r18,2
  8359dc:	1804a316 	blt	r3,zero,836c6c <___svfprintf_internal_r+0x1df8>
  8359e0:	00bfdfc4 	movi	r2,-129
  8359e4:	90a4703a 	and	r18,r18,r2
  8359e8:	94800094 	ori	r18,r18,2
  8359ec:	0039883a 	mov	fp,zero
  8359f0:	d9003a17 	ldw	r4,232(sp)
  8359f4:	dc001e04 	addi	r16,sp,120
  8359f8:	a08003cc 	andi	r2,r20,15
  8359fc:	b006973a 	slli	r3,r22,28
  835a00:	2085883a 	add	r2,r4,r2
  835a04:	a028d13a 	srli	r20,r20,4
  835a08:	10800003 	ldbu	r2,0(r2)
  835a0c:	b02cd13a 	srli	r22,r22,4
  835a10:	843fffc4 	addi	r16,r16,-1
  835a14:	1d28b03a 	or	r20,r3,r20
  835a18:	80800005 	stb	r2,0(r16)
  835a1c:	a584b03a 	or	r2,r20,r22
  835a20:	103ff51e 	bne	r2,zero,8359f8 <__alt_mem_epcs_flash_controller_0+0xff82c9f8>
  835a24:	d8c02817 	ldw	r3,160(sp)
  835a28:	1c07c83a 	sub	r3,r3,r16
  835a2c:	d8c02b15 	stw	r3,172(sp)
  835a30:	003ec806 	br	835554 <__alt_mem_epcs_flash_controller_0+0xff82c554>
  835a34:	d8c02e17 	ldw	r3,184(sp)
  835a38:	d9002e17 	ldw	r4,184(sp)
  835a3c:	8025883a 	mov	r18,r16
  835a40:	18800017 	ldw	r2,0(r3)
  835a44:	21000104 	addi	r4,r4,4
  835a48:	00c00044 	movi	r3,1
  835a4c:	e011883a 	mov	r8,fp
  835a50:	d8c02915 	stw	r3,164(sp)
  835a54:	d8002785 	stb	zero,158(sp)
  835a58:	d8801405 	stb	r2,80(sp)
  835a5c:	d9002e15 	stw	r4,184(sp)
  835a60:	d8c02b15 	stw	r3,172(sp)
  835a64:	d8002a15 	stw	zero,168(sp)
  835a68:	d8003215 	stw	zero,200(sp)
  835a6c:	dc001404 	addi	r16,sp,80
  835a70:	0039883a 	mov	fp,zero
  835a74:	003ec406 	br	835588 <__alt_mem_epcs_flash_controller_0+0xff82c588>
  835a78:	8025883a 	mov	r18,r16
  835a7c:	dc002903 	ldbu	r16,164(sp)
  835a80:	e011883a 	mov	r8,fp
  835a84:	84003fcc 	andi	r16,r16,255
  835a88:	803e8726 	beq	r16,zero,8354a8 <__alt_mem_epcs_flash_controller_0+0xff82c4a8>
  835a8c:	d8c02b03 	ldbu	r3,172(sp)
  835a90:	d8c02785 	stb	r3,158(sp)
  835a94:	003e8406 	br	8354a8 <__alt_mem_epcs_flash_controller_0+0xff82c4a8>
  835a98:	00c00044 	movi	r3,1
  835a9c:	d8c02905 	stb	r3,164(sp)
  835aa0:	00c00ac4 	movi	r3,43
  835aa4:	d8c02b05 	stb	r3,172(sp)
  835aa8:	bc400007 	ldb	r17,0(r23)
  835aac:	003d4606 	br	834fc8 <__alt_mem_epcs_flash_controller_0+0xff82bfc8>
  835ab0:	84000814 	ori	r16,r16,32
  835ab4:	bc400007 	ldb	r17,0(r23)
  835ab8:	003d4306 	br	834fc8 <__alt_mem_epcs_flash_controller_0+0xff82bfc8>
  835abc:	d8802e17 	ldw	r2,184(sp)
  835ac0:	8025883a 	mov	r18,r16
  835ac4:	d8002785 	stb	zero,158(sp)
  835ac8:	14000017 	ldw	r16,0(r2)
  835acc:	e011883a 	mov	r8,fp
  835ad0:	15000104 	addi	r20,r2,4
  835ad4:	80042126 	beq	r16,zero,836b5c <___svfprintf_internal_r+0x1ce8>
  835ad8:	d8c02a17 	ldw	r3,168(sp)
  835adc:	1803ee16 	blt	r3,zero,836a98 <___svfprintf_internal_r+0x1c24>
  835ae0:	180d883a 	mov	r6,r3
  835ae4:	000b883a 	mov	r5,zero
  835ae8:	8009883a 	mov	r4,r16
  835aec:	df003e15 	stw	fp,248(sp)
  835af0:	083d5600 	call	83d560 <memchr>
  835af4:	da003e17 	ldw	r8,248(sp)
  835af8:	10046a26 	beq	r2,zero,836ca4 <___svfprintf_internal_r+0x1e30>
  835afc:	1405c83a 	sub	r2,r2,r16
  835b00:	d8802b15 	stw	r2,172(sp)
  835b04:	1003ea16 	blt	r2,zero,836ab0 <___svfprintf_internal_r+0x1c3c>
  835b08:	df002783 	ldbu	fp,158(sp)
  835b0c:	d8802915 	stw	r2,164(sp)
  835b10:	dd002e15 	stw	r20,184(sp)
  835b14:	d8002a15 	stw	zero,168(sp)
  835b18:	d8003215 	stw	zero,200(sp)
  835b1c:	003e9306 	br	83556c <__alt_mem_epcs_flash_controller_0+0xff82c56c>
  835b20:	8025883a 	mov	r18,r16
  835b24:	dc002903 	ldbu	r16,164(sp)
  835b28:	e011883a 	mov	r8,fp
  835b2c:	84003fcc 	andi	r16,r16,255
  835b30:	803f7c26 	beq	r16,zero,835924 <__alt_mem_epcs_flash_controller_0+0xff82c924>
  835b34:	d8c02b03 	ldbu	r3,172(sp)
  835b38:	d8c02785 	stb	r3,158(sp)
  835b3c:	003f7906 	br	835924 <__alt_mem_epcs_flash_controller_0+0xff82c924>
  835b40:	8025883a 	mov	r18,r16
  835b44:	dc002903 	ldbu	r16,164(sp)
  835b48:	e011883a 	mov	r8,fp
  835b4c:	84003fcc 	andi	r16,r16,255
  835b50:	8005741e 	bne	r16,zero,837124 <___svfprintf_internal_r+0x22b0>
  835b54:	010021b4 	movhi	r4,134
  835b58:	21243a04 	addi	r4,r4,-28440
  835b5c:	d9003a15 	stw	r4,232(sp)
  835b60:	9080080c 	andi	r2,r18,32
  835b64:	103f8e1e 	bne	r2,zero,8359a0 <__alt_mem_epcs_flash_controller_0+0xff82c9a0>
  835b68:	9080040c 	andi	r2,r18,16
  835b6c:	1002a726 	beq	r2,zero,83660c <___svfprintf_internal_r+0x1798>
  835b70:	d8802e17 	ldw	r2,184(sp)
  835b74:	002d883a 	mov	r22,zero
  835b78:	15000017 	ldw	r20,0(r2)
  835b7c:	10800104 	addi	r2,r2,4
  835b80:	d8802e15 	stw	r2,184(sp)
  835b84:	003f8b06 	br	8359b4 <__alt_mem_epcs_flash_controller_0+0xff82c9b4>
  835b88:	84000054 	ori	r16,r16,1
  835b8c:	bc400007 	ldb	r17,0(r23)
  835b90:	003d0d06 	br	834fc8 <__alt_mem_epcs_flash_controller_0+0xff82bfc8>
  835b94:	d8802b07 	ldb	r2,172(sp)
  835b98:	1002a41e 	bne	r2,zero,83662c <___svfprintf_internal_r+0x17b8>
  835b9c:	00c00044 	movi	r3,1
  835ba0:	d8c02905 	stb	r3,164(sp)
  835ba4:	00c00804 	movi	r3,32
  835ba8:	d8c02b05 	stb	r3,172(sp)
  835bac:	bc400007 	ldb	r17,0(r23)
  835bb0:	003d0506 	br	834fc8 <__alt_mem_epcs_flash_controller_0+0xff82bfc8>
  835bb4:	8025883a 	mov	r18,r16
  835bb8:	dc002903 	ldbu	r16,164(sp)
  835bbc:	e011883a 	mov	r8,fp
  835bc0:	84003fcc 	andi	r16,r16,255
  835bc4:	803e0626 	beq	r16,zero,8353e0 <__alt_mem_epcs_flash_controller_0+0xff82c3e0>
  835bc8:	d8c02b03 	ldbu	r3,172(sp)
  835bcc:	d8c02785 	stb	r3,158(sp)
  835bd0:	003e0306 	br	8353e0 <__alt_mem_epcs_flash_controller_0+0xff82c3e0>
  835bd4:	bc400007 	ldb	r17,0(r23)
  835bd8:	00801b04 	movi	r2,108
  835bdc:	88830a26 	beq	r17,r2,836808 <___svfprintf_internal_r+0x1994>
  835be0:	84000414 	ori	r16,r16,16
  835be4:	003cf806 	br	834fc8 <__alt_mem_epcs_flash_controller_0+0xff82bfc8>
  835be8:	8025883a 	mov	r18,r16
  835bec:	dc002903 	ldbu	r16,164(sp)
  835bf0:	e011883a 	mov	r8,fp
  835bf4:	84003fcc 	andi	r16,r16,255
  835bf8:	8005471e 	bne	r16,zero,837118 <___svfprintf_internal_r+0x22a4>
  835bfc:	9080080c 	andi	r2,r18,32
  835c00:	10028c26 	beq	r2,zero,836634 <___svfprintf_internal_r+0x17c0>
  835c04:	d9002e17 	ldw	r4,184(sp)
  835c08:	d9402f17 	ldw	r5,188(sp)
  835c0c:	20800017 	ldw	r2,0(r4)
  835c10:	2807d7fa 	srai	r3,r5,31
  835c14:	21000104 	addi	r4,r4,4
  835c18:	d9002e15 	stw	r4,184(sp)
  835c1c:	11400015 	stw	r5,0(r2)
  835c20:	10c00115 	stw	r3,4(r2)
  835c24:	003cbe06 	br	834f20 <__alt_mem_epcs_flash_controller_0+0xff82bf20>
  835c28:	84001014 	ori	r16,r16,64
  835c2c:	bc400007 	ldb	r17,0(r23)
  835c30:	003ce506 	br	834fc8 <__alt_mem_epcs_flash_controller_0+0xff82bfc8>
  835c34:	010021b4 	movhi	r4,134
  835c38:	21243a04 	addi	r4,r4,-28440
  835c3c:	0039883a 	mov	fp,zero
  835c40:	d9003a15 	stw	r4,232(sp)
  835c44:	04401e04 	movi	r17,120
  835c48:	003f6906 	br	8359f0 <__alt_mem_epcs_flash_controller_0+0xff82c9f0>
  835c4c:	8025883a 	mov	r18,r16
  835c50:	dc002903 	ldbu	r16,164(sp)
  835c54:	e011883a 	mov	r8,fp
  835c58:	84003fcc 	andi	r16,r16,255
  835c5c:	8005261e 	bne	r16,zero,8370f8 <___svfprintf_internal_r+0x2284>
  835c60:	883d6526 	beq	r17,zero,8351f8 <__alt_mem_epcs_flash_controller_0+0xff82c1f8>
  835c64:	00c00044 	movi	r3,1
  835c68:	d8c02915 	stw	r3,164(sp)
  835c6c:	dc401405 	stb	r17,80(sp)
  835c70:	d8002785 	stb	zero,158(sp)
  835c74:	003f7a06 	br	835a60 <__alt_mem_epcs_flash_controller_0+0xff82ca60>
  835c78:	010021b4 	movhi	r4,134
  835c7c:	21243a04 	addi	r4,r4,-28440
  835c80:	d9003a15 	stw	r4,232(sp)
  835c84:	d8c02e15 	stw	r3,184(sp)
  835c88:	1025883a 	mov	r18,r2
  835c8c:	04401e04 	movi	r17,120
  835c90:	a584b03a 	or	r2,r20,r22
  835c94:	1000fa1e 	bne	r2,zero,836080 <___svfprintf_internal_r+0x120c>
  835c98:	0039883a 	mov	fp,zero
  835c9c:	00800084 	movi	r2,2
  835ca0:	10803fcc 	andi	r2,r2,255
  835ca4:	00c00044 	movi	r3,1
  835ca8:	10c21626 	beq	r2,r3,836504 <___svfprintf_internal_r+0x1690>
  835cac:	00c00084 	movi	r3,2
  835cb0:	10fe0e1e 	bne	r2,r3,8354ec <__alt_mem_epcs_flash_controller_0+0xff82c4ec>
  835cb4:	003d4606 	br	8351d0 <__alt_mem_epcs_flash_controller_0+0xff82c1d0>
  835cb8:	d8c02017 	ldw	r3,128(sp)
  835cbc:	003e7306 	br	83568c <__alt_mem_epcs_flash_controller_0+0xff82c68c>
  835cc0:	00801944 	movi	r2,101
  835cc4:	14407c0e 	bge	r2,r17,835eb8 <___svfprintf_internal_r+0x1044>
  835cc8:	d9003617 	ldw	r4,216(sp)
  835ccc:	d9403717 	ldw	r5,220(sp)
  835cd0:	000d883a 	mov	r6,zero
  835cd4:	000f883a 	mov	r7,zero
  835cd8:	d8c03d15 	stw	r3,244(sp)
  835cdc:	da003e15 	stw	r8,248(sp)
  835ce0:	08487ac0 	call	8487ac <__eqdf2>
  835ce4:	d8c03d17 	ldw	r3,244(sp)
  835ce8:	da003e17 	ldw	r8,248(sp)
  835cec:	1000f51e 	bne	r2,zero,8360c4 <___svfprintf_internal_r+0x1250>
  835cf0:	d8801f17 	ldw	r2,124(sp)
  835cf4:	010021b4 	movhi	r4,134
  835cf8:	21244104 	addi	r4,r4,-28412
  835cfc:	18c00044 	addi	r3,r3,1
  835d00:	10800044 	addi	r2,r2,1
  835d04:	41000015 	stw	r4,0(r8)
  835d08:	01000044 	movi	r4,1
  835d0c:	41000115 	stw	r4,4(r8)
  835d10:	d8c02015 	stw	r3,128(sp)
  835d14:	d8801f15 	stw	r2,124(sp)
  835d18:	010001c4 	movi	r4,7
  835d1c:	20826616 	blt	r4,r2,8366b8 <___svfprintf_internal_r+0x1844>
  835d20:	42000204 	addi	r8,r8,8
  835d24:	d8802617 	ldw	r2,152(sp)
  835d28:	d9403317 	ldw	r5,204(sp)
  835d2c:	11400216 	blt	r2,r5,835d38 <___svfprintf_internal_r+0xec4>
  835d30:	9080004c 	andi	r2,r18,1
  835d34:	103eb326 	beq	r2,zero,835804 <__alt_mem_epcs_flash_controller_0+0xff82c804>
  835d38:	d8803817 	ldw	r2,224(sp)
  835d3c:	d9003417 	ldw	r4,208(sp)
  835d40:	d9403817 	ldw	r5,224(sp)
  835d44:	1887883a 	add	r3,r3,r2
  835d48:	d8801f17 	ldw	r2,124(sp)
  835d4c:	41000015 	stw	r4,0(r8)
  835d50:	41400115 	stw	r5,4(r8)
  835d54:	10800044 	addi	r2,r2,1
  835d58:	d8c02015 	stw	r3,128(sp)
  835d5c:	d8801f15 	stw	r2,124(sp)
  835d60:	010001c4 	movi	r4,7
  835d64:	2082af16 	blt	r4,r2,836824 <___svfprintf_internal_r+0x19b0>
  835d68:	42000204 	addi	r8,r8,8
  835d6c:	d8803317 	ldw	r2,204(sp)
  835d70:	143fffc4 	addi	r16,r2,-1
  835d74:	043ea30e 	bge	zero,r16,835804 <__alt_mem_epcs_flash_controller_0+0xff82c804>
  835d78:	04400404 	movi	r17,16
  835d7c:	d8801f17 	ldw	r2,124(sp)
  835d80:	8c00860e 	bge	r17,r16,835f9c <___svfprintf_internal_r+0x1128>
  835d84:	014021b4 	movhi	r5,134
  835d88:	29644184 	addi	r5,r5,-28410
  835d8c:	d9402c15 	stw	r5,176(sp)
  835d90:	058001c4 	movi	r22,7
  835d94:	dd002d17 	ldw	r20,180(sp)
  835d98:	00000306 	br	835da8 <___svfprintf_internal_r+0xf34>
  835d9c:	42000204 	addi	r8,r8,8
  835da0:	843ffc04 	addi	r16,r16,-16
  835da4:	8c00800e 	bge	r17,r16,835fa8 <___svfprintf_internal_r+0x1134>
  835da8:	18c00404 	addi	r3,r3,16
  835dac:	10800044 	addi	r2,r2,1
  835db0:	45400015 	stw	r21,0(r8)
  835db4:	44400115 	stw	r17,4(r8)
  835db8:	d8c02015 	stw	r3,128(sp)
  835dbc:	d8801f15 	stw	r2,124(sp)
  835dc0:	b0bff60e 	bge	r22,r2,835d9c <__alt_mem_epcs_flash_controller_0+0xff82cd9c>
  835dc4:	d9801e04 	addi	r6,sp,120
  835dc8:	a00b883a 	mov	r5,r20
  835dcc:	9809883a 	mov	r4,r19
  835dd0:	08412d00 	call	8412d0 <__ssprint_r>
  835dd4:	103d0e1e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  835dd8:	d8c02017 	ldw	r3,128(sp)
  835ddc:	d8801f17 	ldw	r2,124(sp)
  835de0:	da000404 	addi	r8,sp,16
  835de4:	003fee06 	br	835da0 <__alt_mem_epcs_flash_controller_0+0xff82cda0>
  835de8:	d9403117 	ldw	r5,196(sp)
  835dec:	d8802917 	ldw	r2,164(sp)
  835df0:	28adc83a 	sub	r22,r5,r2
  835df4:	05be430e 	bge	zero,r22,835704 <__alt_mem_epcs_flash_controller_0+0xff82c704>
  835df8:	07000404 	movi	fp,16
  835dfc:	d8801f17 	ldw	r2,124(sp)
  835e00:	e583a20e 	bge	fp,r22,836c8c <___svfprintf_internal_r+0x1e18>
  835e04:	014021b4 	movhi	r5,134
  835e08:	29644184 	addi	r5,r5,-28410
  835e0c:	dc403015 	stw	r17,192(sp)
  835e10:	d9402c15 	stw	r5,176(sp)
  835e14:	b023883a 	mov	r17,r22
  835e18:	050001c4 	movi	r20,7
  835e1c:	902d883a 	mov	r22,r18
  835e20:	8025883a 	mov	r18,r16
  835e24:	dc002d17 	ldw	r16,180(sp)
  835e28:	00000306 	br	835e38 <___svfprintf_internal_r+0xfc4>
  835e2c:	8c7ffc04 	addi	r17,r17,-16
  835e30:	42000204 	addi	r8,r8,8
  835e34:	e440110e 	bge	fp,r17,835e7c <___svfprintf_internal_r+0x1008>
  835e38:	18c00404 	addi	r3,r3,16
  835e3c:	10800044 	addi	r2,r2,1
  835e40:	45400015 	stw	r21,0(r8)
  835e44:	47000115 	stw	fp,4(r8)
  835e48:	d8c02015 	stw	r3,128(sp)
  835e4c:	d8801f15 	stw	r2,124(sp)
  835e50:	a0bff60e 	bge	r20,r2,835e2c <__alt_mem_epcs_flash_controller_0+0xff82ce2c>
  835e54:	d9801e04 	addi	r6,sp,120
  835e58:	800b883a 	mov	r5,r16
  835e5c:	9809883a 	mov	r4,r19
  835e60:	08412d00 	call	8412d0 <__ssprint_r>
  835e64:	103cea1e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  835e68:	8c7ffc04 	addi	r17,r17,-16
  835e6c:	d8c02017 	ldw	r3,128(sp)
  835e70:	d8801f17 	ldw	r2,124(sp)
  835e74:	da000404 	addi	r8,sp,16
  835e78:	e47fef16 	blt	fp,r17,835e38 <__alt_mem_epcs_flash_controller_0+0xff82ce38>
  835e7c:	9021883a 	mov	r16,r18
  835e80:	b025883a 	mov	r18,r22
  835e84:	882d883a 	mov	r22,r17
  835e88:	dc403017 	ldw	r17,192(sp)
  835e8c:	d9002c17 	ldw	r4,176(sp)
  835e90:	1d87883a 	add	r3,r3,r22
  835e94:	10800044 	addi	r2,r2,1
  835e98:	41000015 	stw	r4,0(r8)
  835e9c:	45800115 	stw	r22,4(r8)
  835ea0:	d8c02015 	stw	r3,128(sp)
  835ea4:	d8801f15 	stw	r2,124(sp)
  835ea8:	010001c4 	movi	r4,7
  835eac:	20819a16 	blt	r4,r2,836518 <___svfprintf_internal_r+0x16a4>
  835eb0:	42000204 	addi	r8,r8,8
  835eb4:	003e1306 	br	835704 <__alt_mem_epcs_flash_controller_0+0xff82c704>
  835eb8:	d9403317 	ldw	r5,204(sp)
  835ebc:	00800044 	movi	r2,1
  835ec0:	18c00044 	addi	r3,r3,1
  835ec4:	1141710e 	bge	r2,r5,83648c <___svfprintf_internal_r+0x1618>
  835ec8:	dc401f17 	ldw	r17,124(sp)
  835ecc:	00800044 	movi	r2,1
  835ed0:	40800115 	stw	r2,4(r8)
  835ed4:	8c400044 	addi	r17,r17,1
  835ed8:	44000015 	stw	r16,0(r8)
  835edc:	d8c02015 	stw	r3,128(sp)
  835ee0:	dc401f15 	stw	r17,124(sp)
  835ee4:	008001c4 	movi	r2,7
  835ee8:	14417416 	blt	r2,r17,8364bc <___svfprintf_internal_r+0x1648>
  835eec:	42000204 	addi	r8,r8,8
  835ef0:	d8803817 	ldw	r2,224(sp)
  835ef4:	d9003417 	ldw	r4,208(sp)
  835ef8:	8c400044 	addi	r17,r17,1
  835efc:	10c7883a 	add	r3,r2,r3
  835f00:	40800115 	stw	r2,4(r8)
  835f04:	41000015 	stw	r4,0(r8)
  835f08:	d8c02015 	stw	r3,128(sp)
  835f0c:	dc401f15 	stw	r17,124(sp)
  835f10:	008001c4 	movi	r2,7
  835f14:	14417216 	blt	r2,r17,8364e0 <___svfprintf_internal_r+0x166c>
  835f18:	45800204 	addi	r22,r8,8
  835f1c:	d9003617 	ldw	r4,216(sp)
  835f20:	d9403717 	ldw	r5,220(sp)
  835f24:	000d883a 	mov	r6,zero
  835f28:	000f883a 	mov	r7,zero
  835f2c:	d8c03d15 	stw	r3,244(sp)
  835f30:	08487ac0 	call	8487ac <__eqdf2>
  835f34:	d8c03d17 	ldw	r3,244(sp)
  835f38:	1000b326 	beq	r2,zero,836208 <___svfprintf_internal_r+0x1394>
  835f3c:	d9403317 	ldw	r5,204(sp)
  835f40:	84000044 	addi	r16,r16,1
  835f44:	8c400044 	addi	r17,r17,1
  835f48:	28bfffc4 	addi	r2,r5,-1
  835f4c:	1887883a 	add	r3,r3,r2
  835f50:	b0800115 	stw	r2,4(r22)
  835f54:	b4000015 	stw	r16,0(r22)
  835f58:	d8c02015 	stw	r3,128(sp)
  835f5c:	dc401f15 	stw	r17,124(sp)
  835f60:	008001c4 	movi	r2,7
  835f64:	1440d216 	blt	r2,r17,8362b0 <___svfprintf_internal_r+0x143c>
  835f68:	b5800204 	addi	r22,r22,8
  835f6c:	d9003b17 	ldw	r4,236(sp)
  835f70:	df0022c4 	addi	fp,sp,139
  835f74:	8c400044 	addi	r17,r17,1
  835f78:	20c7883a 	add	r3,r4,r3
  835f7c:	b7000015 	stw	fp,0(r22)
  835f80:	b1000115 	stw	r4,4(r22)
  835f84:	d8c02015 	stw	r3,128(sp)
  835f88:	dc401f15 	stw	r17,124(sp)
  835f8c:	008001c4 	movi	r2,7
  835f90:	14400e16 	blt	r2,r17,835fcc <___svfprintf_internal_r+0x1158>
  835f94:	b2000204 	addi	r8,r22,8
  835f98:	003e1a06 	br	835804 <__alt_mem_epcs_flash_controller_0+0xff82c804>
  835f9c:	010021b4 	movhi	r4,134
  835fa0:	21244184 	addi	r4,r4,-28410
  835fa4:	d9002c15 	stw	r4,176(sp)
  835fa8:	d9002c17 	ldw	r4,176(sp)
  835fac:	1c07883a 	add	r3,r3,r16
  835fb0:	44000115 	stw	r16,4(r8)
  835fb4:	41000015 	stw	r4,0(r8)
  835fb8:	10800044 	addi	r2,r2,1
  835fbc:	d8c02015 	stw	r3,128(sp)
  835fc0:	d8801f15 	stw	r2,124(sp)
  835fc4:	010001c4 	movi	r4,7
  835fc8:	20be0d0e 	bge	r4,r2,835800 <__alt_mem_epcs_flash_controller_0+0xff82c800>
  835fcc:	d9402d17 	ldw	r5,180(sp)
  835fd0:	d9801e04 	addi	r6,sp,120
  835fd4:	9809883a 	mov	r4,r19
  835fd8:	08412d00 	call	8412d0 <__ssprint_r>
  835fdc:	103c8c1e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  835fe0:	d8c02017 	ldw	r3,128(sp)
  835fe4:	da000404 	addi	r8,sp,16
  835fe8:	003e0606 	br	835804 <__alt_mem_epcs_flash_controller_0+0xff82c804>
  835fec:	d9402d17 	ldw	r5,180(sp)
  835ff0:	d9801e04 	addi	r6,sp,120
  835ff4:	9809883a 	mov	r4,r19
  835ff8:	08412d00 	call	8412d0 <__ssprint_r>
  835ffc:	103e3d26 	beq	r2,zero,8358f4 <__alt_mem_epcs_flash_controller_0+0xff82c8f4>
  836000:	003c8306 	br	835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  836004:	d9402d17 	ldw	r5,180(sp)
  836008:	d9801e04 	addi	r6,sp,120
  83600c:	9809883a 	mov	r4,r19
  836010:	08412d00 	call	8412d0 <__ssprint_r>
  836014:	103c7e1e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  836018:	d8c02017 	ldw	r3,128(sp)
  83601c:	da000404 	addi	r8,sp,16
  836020:	003deb06 	br	8357d0 <__alt_mem_epcs_flash_controller_0+0xff82c7d0>
  836024:	d9402d17 	ldw	r5,180(sp)
  836028:	d9801e04 	addi	r6,sp,120
  83602c:	9809883a 	mov	r4,r19
  836030:	08412d00 	call	8412d0 <__ssprint_r>
  836034:	103c761e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  836038:	d8c02017 	ldw	r3,128(sp)
  83603c:	da000404 	addi	r8,sp,16
  836040:	003d9f06 	br	8356c0 <__alt_mem_epcs_flash_controller_0+0xff82c6c0>
  836044:	d9402d17 	ldw	r5,180(sp)
  836048:	d9801e04 	addi	r6,sp,120
  83604c:	9809883a 	mov	r4,r19
  836050:	08412d00 	call	8412d0 <__ssprint_r>
  836054:	103c6e1e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  836058:	d8c02017 	ldw	r3,128(sp)
  83605c:	da000404 	addi	r8,sp,16
  836060:	003da506 	br	8356f8 <__alt_mem_epcs_flash_controller_0+0xff82c6f8>
  836064:	d9402a17 	ldw	r5,168(sp)
  836068:	d8002785 	stb	zero,158(sp)
  83606c:	283f0816 	blt	r5,zero,835c90 <__alt_mem_epcs_flash_controller_0+0xff82cc90>
  836070:	00ffdfc4 	movi	r3,-129
  836074:	a584b03a 	or	r2,r20,r22
  836078:	90e4703a 	and	r18,r18,r3
  83607c:	103c5126 	beq	r2,zero,8351c4 <__alt_mem_epcs_flash_controller_0+0xff82c1c4>
  836080:	0039883a 	mov	fp,zero
  836084:	003e5a06 	br	8359f0 <__alt_mem_epcs_flash_controller_0+0xff82c9f0>
  836088:	9080040c 	andi	r2,r18,16
  83608c:	10013d26 	beq	r2,zero,836584 <___svfprintf_internal_r+0x1710>
  836090:	d8c02e17 	ldw	r3,184(sp)
  836094:	d9002a17 	ldw	r4,168(sp)
  836098:	d8002785 	stb	zero,158(sp)
  83609c:	18800104 	addi	r2,r3,4
  8360a0:	1d000017 	ldw	r20,0(r3)
  8360a4:	002d883a 	mov	r22,zero
  8360a8:	20013f16 	blt	r4,zero,8365a8 <___svfprintf_internal_r+0x1734>
  8360ac:	00ffdfc4 	movi	r3,-129
  8360b0:	d8802e15 	stw	r2,184(sp)
  8360b4:	90e4703a 	and	r18,r18,r3
  8360b8:	a03d0926 	beq	r20,zero,8354e0 <__alt_mem_epcs_flash_controller_0+0xff82c4e0>
  8360bc:	0039883a 	mov	fp,zero
  8360c0:	003d0c06 	br	8354f4 <__alt_mem_epcs_flash_controller_0+0xff82c4f4>
  8360c4:	dc402617 	ldw	r17,152(sp)
  8360c8:	0441830e 	bge	zero,r17,8366d8 <___svfprintf_internal_r+0x1864>
  8360cc:	dc403217 	ldw	r17,200(sp)
  8360d0:	d8803317 	ldw	r2,204(sp)
  8360d4:	1440010e 	bge	r2,r17,8360dc <___svfprintf_internal_r+0x1268>
  8360d8:	1023883a 	mov	r17,r2
  8360dc:	04400a0e 	bge	zero,r17,836108 <___svfprintf_internal_r+0x1294>
  8360e0:	d8801f17 	ldw	r2,124(sp)
  8360e4:	1c47883a 	add	r3,r3,r17
  8360e8:	44000015 	stw	r16,0(r8)
  8360ec:	10800044 	addi	r2,r2,1
  8360f0:	44400115 	stw	r17,4(r8)
  8360f4:	d8c02015 	stw	r3,128(sp)
  8360f8:	d8801f15 	stw	r2,124(sp)
  8360fc:	010001c4 	movi	r4,7
  836100:	20827516 	blt	r4,r2,836ad8 <___svfprintf_internal_r+0x1c64>
  836104:	42000204 	addi	r8,r8,8
  836108:	88027b16 	blt	r17,zero,836af8 <___svfprintf_internal_r+0x1c84>
  83610c:	d9003217 	ldw	r4,200(sp)
  836110:	2463c83a 	sub	r17,r4,r17
  836114:	0440990e 	bge	zero,r17,83637c <___svfprintf_internal_r+0x1508>
  836118:	05800404 	movi	r22,16
  83611c:	d8801f17 	ldw	r2,124(sp)
  836120:	b441530e 	bge	r22,r17,836670 <___svfprintf_internal_r+0x17fc>
  836124:	010021b4 	movhi	r4,134
  836128:	21244184 	addi	r4,r4,-28410
  83612c:	d9002c15 	stw	r4,176(sp)
  836130:	070001c4 	movi	fp,7
  836134:	dd002d17 	ldw	r20,180(sp)
  836138:	00000306 	br	836148 <___svfprintf_internal_r+0x12d4>
  83613c:	42000204 	addi	r8,r8,8
  836140:	8c7ffc04 	addi	r17,r17,-16
  836144:	b4414d0e 	bge	r22,r17,83667c <___svfprintf_internal_r+0x1808>
  836148:	18c00404 	addi	r3,r3,16
  83614c:	10800044 	addi	r2,r2,1
  836150:	45400015 	stw	r21,0(r8)
  836154:	45800115 	stw	r22,4(r8)
  836158:	d8c02015 	stw	r3,128(sp)
  83615c:	d8801f15 	stw	r2,124(sp)
  836160:	e0bff60e 	bge	fp,r2,83613c <__alt_mem_epcs_flash_controller_0+0xff82d13c>
  836164:	d9801e04 	addi	r6,sp,120
  836168:	a00b883a 	mov	r5,r20
  83616c:	9809883a 	mov	r4,r19
  836170:	08412d00 	call	8412d0 <__ssprint_r>
  836174:	103c261e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  836178:	d8c02017 	ldw	r3,128(sp)
  83617c:	d8801f17 	ldw	r2,124(sp)
  836180:	da000404 	addi	r8,sp,16
  836184:	003fee06 	br	836140 <__alt_mem_epcs_flash_controller_0+0xff82d140>
  836188:	d9402d17 	ldw	r5,180(sp)
  83618c:	d9801e04 	addi	r6,sp,120
  836190:	9809883a 	mov	r4,r19
  836194:	08412d00 	call	8412d0 <__ssprint_r>
  836198:	103c1d1e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  83619c:	d8c02017 	ldw	r3,128(sp)
  8361a0:	df002787 	ldb	fp,158(sp)
  8361a4:	da000404 	addi	r8,sp,16
  8361a8:	003d3806 	br	83568c <__alt_mem_epcs_flash_controller_0+0xff82c68c>
  8361ac:	9080040c 	andi	r2,r18,16
  8361b0:	10005c26 	beq	r2,zero,836324 <___svfprintf_internal_r+0x14b0>
  8361b4:	d8c02e17 	ldw	r3,184(sp)
  8361b8:	d9002a17 	ldw	r4,168(sp)
  8361bc:	d8002785 	stb	zero,158(sp)
  8361c0:	18800104 	addi	r2,r3,4
  8361c4:	1d000017 	ldw	r20,0(r3)
  8361c8:	002d883a 	mov	r22,zero
  8361cc:	20005e16 	blt	r4,zero,836348 <___svfprintf_internal_r+0x14d4>
  8361d0:	00ffdfc4 	movi	r3,-129
  8361d4:	d8802e15 	stw	r2,184(sp)
  8361d8:	90e4703a 	and	r18,r18,r3
  8361dc:	0039883a 	mov	fp,zero
  8361e0:	a03ddf26 	beq	r20,zero,835960 <__alt_mem_epcs_flash_controller_0+0xff82c960>
  8361e4:	00800244 	movi	r2,9
  8361e8:	153c8e36 	bltu	r2,r20,835424 <__alt_mem_epcs_flash_controller_0+0xff82c424>
  8361ec:	a5000c04 	addi	r20,r20,48
  8361f0:	dc001dc4 	addi	r16,sp,119
  8361f4:	dd001dc5 	stb	r20,119(sp)
  8361f8:	d8c02817 	ldw	r3,160(sp)
  8361fc:	1c07c83a 	sub	r3,r3,r16
  836200:	d8c02b15 	stw	r3,172(sp)
  836204:	003cd306 	br	835554 <__alt_mem_epcs_flash_controller_0+0xff82c554>
  836208:	d8803317 	ldw	r2,204(sp)
  83620c:	143fffc4 	addi	r16,r2,-1
  836210:	043f560e 	bge	zero,r16,835f6c <__alt_mem_epcs_flash_controller_0+0xff82cf6c>
  836214:	07000404 	movi	fp,16
  836218:	e403530e 	bge	fp,r16,836f68 <___svfprintf_internal_r+0x20f4>
  83621c:	014021b4 	movhi	r5,134
  836220:	29644184 	addi	r5,r5,-28410
  836224:	d9402c15 	stw	r5,176(sp)
  836228:	01c001c4 	movi	r7,7
  83622c:	dd002d17 	ldw	r20,180(sp)
  836230:	00000306 	br	836240 <___svfprintf_internal_r+0x13cc>
  836234:	843ffc04 	addi	r16,r16,-16
  836238:	b5800204 	addi	r22,r22,8
  83623c:	e400130e 	bge	fp,r16,83628c <___svfprintf_internal_r+0x1418>
  836240:	18c00404 	addi	r3,r3,16
  836244:	8c400044 	addi	r17,r17,1
  836248:	b5400015 	stw	r21,0(r22)
  83624c:	b7000115 	stw	fp,4(r22)
  836250:	d8c02015 	stw	r3,128(sp)
  836254:	dc401f15 	stw	r17,124(sp)
  836258:	3c7ff60e 	bge	r7,r17,836234 <__alt_mem_epcs_flash_controller_0+0xff82d234>
  83625c:	d9801e04 	addi	r6,sp,120
  836260:	a00b883a 	mov	r5,r20
  836264:	9809883a 	mov	r4,r19
  836268:	d9c03d15 	stw	r7,244(sp)
  83626c:	08412d00 	call	8412d0 <__ssprint_r>
  836270:	d9c03d17 	ldw	r7,244(sp)
  836274:	103be61e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  836278:	843ffc04 	addi	r16,r16,-16
  83627c:	d8c02017 	ldw	r3,128(sp)
  836280:	dc401f17 	ldw	r17,124(sp)
  836284:	dd800404 	addi	r22,sp,16
  836288:	e43fed16 	blt	fp,r16,836240 <__alt_mem_epcs_flash_controller_0+0xff82d240>
  83628c:	d8802c17 	ldw	r2,176(sp)
  836290:	1c07883a 	add	r3,r3,r16
  836294:	8c400044 	addi	r17,r17,1
  836298:	b0800015 	stw	r2,0(r22)
  83629c:	b4000115 	stw	r16,4(r22)
  8362a0:	d8c02015 	stw	r3,128(sp)
  8362a4:	dc401f15 	stw	r17,124(sp)
  8362a8:	008001c4 	movi	r2,7
  8362ac:	147f2e0e 	bge	r2,r17,835f68 <__alt_mem_epcs_flash_controller_0+0xff82cf68>
  8362b0:	d9402d17 	ldw	r5,180(sp)
  8362b4:	d9801e04 	addi	r6,sp,120
  8362b8:	9809883a 	mov	r4,r19
  8362bc:	08412d00 	call	8412d0 <__ssprint_r>
  8362c0:	103bd31e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  8362c4:	d8c02017 	ldw	r3,128(sp)
  8362c8:	dc401f17 	ldw	r17,124(sp)
  8362cc:	dd800404 	addi	r22,sp,16
  8362d0:	003f2606 	br	835f6c <__alt_mem_epcs_flash_controller_0+0xff82cf6c>
  8362d4:	9080040c 	andi	r2,r18,16
  8362d8:	1000c326 	beq	r2,zero,8365e8 <___svfprintf_internal_r+0x1774>
  8362dc:	d9402e17 	ldw	r5,184(sp)
  8362e0:	2d000017 	ldw	r20,0(r5)
  8362e4:	29400104 	addi	r5,r5,4
  8362e8:	d9402e15 	stw	r5,184(sp)
  8362ec:	a02dd7fa 	srai	r22,r20,31
  8362f0:	b005883a 	mov	r2,r22
  8362f4:	103c430e 	bge	r2,zero,835404 <__alt_mem_epcs_flash_controller_0+0xff82c404>
  8362f8:	d9402a17 	ldw	r5,168(sp)
  8362fc:	0529c83a 	sub	r20,zero,r20
  836300:	07000b44 	movi	fp,45
  836304:	a004c03a 	cmpne	r2,r20,zero
  836308:	05adc83a 	sub	r22,zero,r22
  83630c:	df002785 	stb	fp,158(sp)
  836310:	b0adc83a 	sub	r22,r22,r2
  836314:	28022e16 	blt	r5,zero,836bd0 <___svfprintf_internal_r+0x1d5c>
  836318:	00bfdfc4 	movi	r2,-129
  83631c:	90a4703a 	and	r18,r18,r2
  836320:	003c3f06 	br	835420 <__alt_mem_epcs_flash_controller_0+0xff82c420>
  836324:	9080100c 	andi	r2,r18,64
  836328:	d8002785 	stb	zero,158(sp)
  83632c:	10012526 	beq	r2,zero,8367c4 <___svfprintf_internal_r+0x1950>
  836330:	d9402e17 	ldw	r5,184(sp)
  836334:	d8c02a17 	ldw	r3,168(sp)
  836338:	002d883a 	mov	r22,zero
  83633c:	28800104 	addi	r2,r5,4
  836340:	2d00000b 	ldhu	r20,0(r5)
  836344:	183fa20e 	bge	r3,zero,8361d0 <__alt_mem_epcs_flash_controller_0+0xff82d1d0>
  836348:	d8802e15 	stw	r2,184(sp)
  83634c:	0039883a 	mov	fp,zero
  836350:	a584b03a 	or	r2,r20,r22
  836354:	103c321e 	bne	r2,zero,835420 <__alt_mem_epcs_flash_controller_0+0xff82c420>
  836358:	00800044 	movi	r2,1
  83635c:	003e5006 	br	835ca0 <__alt_mem_epcs_flash_controller_0+0xff82cca0>
  836360:	d9402d17 	ldw	r5,180(sp)
  836364:	d9801e04 	addi	r6,sp,120
  836368:	9809883a 	mov	r4,r19
  83636c:	08412d00 	call	8412d0 <__ssprint_r>
  836370:	103ba71e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  836374:	d8c02017 	ldw	r3,128(sp)
  836378:	da000404 	addi	r8,sp,16
  83637c:	d9003217 	ldw	r4,200(sp)
  836380:	d8802617 	ldw	r2,152(sp)
  836384:	d9403317 	ldw	r5,204(sp)
  836388:	8123883a 	add	r17,r16,r4
  83638c:	11400216 	blt	r2,r5,836398 <___svfprintf_internal_r+0x1524>
  836390:	9100004c 	andi	r4,r18,1
  836394:	20000d26 	beq	r4,zero,8363cc <___svfprintf_internal_r+0x1558>
  836398:	d9003817 	ldw	r4,224(sp)
  83639c:	d9403417 	ldw	r5,208(sp)
  8363a0:	1907883a 	add	r3,r3,r4
  8363a4:	d9001f17 	ldw	r4,124(sp)
  8363a8:	41400015 	stw	r5,0(r8)
  8363ac:	d9403817 	ldw	r5,224(sp)
  8363b0:	21000044 	addi	r4,r4,1
  8363b4:	d8c02015 	stw	r3,128(sp)
  8363b8:	41400115 	stw	r5,4(r8)
  8363bc:	d9001f15 	stw	r4,124(sp)
  8363c0:	014001c4 	movi	r5,7
  8363c4:	2901dc16 	blt	r5,r4,836b38 <___svfprintf_internal_r+0x1cc4>
  8363c8:	42000204 	addi	r8,r8,8
  8363cc:	d9003317 	ldw	r4,204(sp)
  8363d0:	8121883a 	add	r16,r16,r4
  8363d4:	2085c83a 	sub	r2,r4,r2
  8363d8:	8461c83a 	sub	r16,r16,r17
  8363dc:	1400010e 	bge	r2,r16,8363e4 <___svfprintf_internal_r+0x1570>
  8363e0:	1021883a 	mov	r16,r2
  8363e4:	04000a0e 	bge	zero,r16,836410 <___svfprintf_internal_r+0x159c>
  8363e8:	d9001f17 	ldw	r4,124(sp)
  8363ec:	1c07883a 	add	r3,r3,r16
  8363f0:	44400015 	stw	r17,0(r8)
  8363f4:	21000044 	addi	r4,r4,1
  8363f8:	44000115 	stw	r16,4(r8)
  8363fc:	d8c02015 	stw	r3,128(sp)
  836400:	d9001f15 	stw	r4,124(sp)
  836404:	014001c4 	movi	r5,7
  836408:	2901e616 	blt	r5,r4,836ba4 <___svfprintf_internal_r+0x1d30>
  83640c:	42000204 	addi	r8,r8,8
  836410:	8001f616 	blt	r16,zero,836bec <___svfprintf_internal_r+0x1d78>
  836414:	1421c83a 	sub	r16,r2,r16
  836418:	043cfa0e 	bge	zero,r16,835804 <__alt_mem_epcs_flash_controller_0+0xff82c804>
  83641c:	04400404 	movi	r17,16
  836420:	d8801f17 	ldw	r2,124(sp)
  836424:	8c3edd0e 	bge	r17,r16,835f9c <__alt_mem_epcs_flash_controller_0+0xff82cf9c>
  836428:	014021b4 	movhi	r5,134
  83642c:	29644184 	addi	r5,r5,-28410
  836430:	d9402c15 	stw	r5,176(sp)
  836434:	058001c4 	movi	r22,7
  836438:	dd002d17 	ldw	r20,180(sp)
  83643c:	00000306 	br	83644c <___svfprintf_internal_r+0x15d8>
  836440:	42000204 	addi	r8,r8,8
  836444:	843ffc04 	addi	r16,r16,-16
  836448:	8c3ed70e 	bge	r17,r16,835fa8 <__alt_mem_epcs_flash_controller_0+0xff82cfa8>
  83644c:	18c00404 	addi	r3,r3,16
  836450:	10800044 	addi	r2,r2,1
  836454:	45400015 	stw	r21,0(r8)
  836458:	44400115 	stw	r17,4(r8)
  83645c:	d8c02015 	stw	r3,128(sp)
  836460:	d8801f15 	stw	r2,124(sp)
  836464:	b0bff60e 	bge	r22,r2,836440 <__alt_mem_epcs_flash_controller_0+0xff82d440>
  836468:	d9801e04 	addi	r6,sp,120
  83646c:	a00b883a 	mov	r5,r20
  836470:	9809883a 	mov	r4,r19
  836474:	08412d00 	call	8412d0 <__ssprint_r>
  836478:	103b651e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  83647c:	d8c02017 	ldw	r3,128(sp)
  836480:	d8801f17 	ldw	r2,124(sp)
  836484:	da000404 	addi	r8,sp,16
  836488:	003fee06 	br	836444 <__alt_mem_epcs_flash_controller_0+0xff82d444>
  83648c:	9088703a 	and	r4,r18,r2
  836490:	203e8d1e 	bne	r4,zero,835ec8 <__alt_mem_epcs_flash_controller_0+0xff82cec8>
  836494:	dc401f17 	ldw	r17,124(sp)
  836498:	40800115 	stw	r2,4(r8)
  83649c:	44000015 	stw	r16,0(r8)
  8364a0:	8c400044 	addi	r17,r17,1
  8364a4:	d8c02015 	stw	r3,128(sp)
  8364a8:	dc401f15 	stw	r17,124(sp)
  8364ac:	008001c4 	movi	r2,7
  8364b0:	147f7f16 	blt	r2,r17,8362b0 <__alt_mem_epcs_flash_controller_0+0xff82d2b0>
  8364b4:	45800204 	addi	r22,r8,8
  8364b8:	003eac06 	br	835f6c <__alt_mem_epcs_flash_controller_0+0xff82cf6c>
  8364bc:	d9402d17 	ldw	r5,180(sp)
  8364c0:	d9801e04 	addi	r6,sp,120
  8364c4:	9809883a 	mov	r4,r19
  8364c8:	08412d00 	call	8412d0 <__ssprint_r>
  8364cc:	103b501e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  8364d0:	d8c02017 	ldw	r3,128(sp)
  8364d4:	dc401f17 	ldw	r17,124(sp)
  8364d8:	da000404 	addi	r8,sp,16
  8364dc:	003e8406 	br	835ef0 <__alt_mem_epcs_flash_controller_0+0xff82cef0>
  8364e0:	d9402d17 	ldw	r5,180(sp)
  8364e4:	d9801e04 	addi	r6,sp,120
  8364e8:	9809883a 	mov	r4,r19
  8364ec:	08412d00 	call	8412d0 <__ssprint_r>
  8364f0:	103b471e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  8364f4:	d8c02017 	ldw	r3,128(sp)
  8364f8:	dc401f17 	ldw	r17,124(sp)
  8364fc:	dd800404 	addi	r22,sp,16
  836500:	003e8606 	br	835f1c <__alt_mem_epcs_flash_controller_0+0xff82cf1c>
  836504:	0029883a 	mov	r20,zero
  836508:	a5000c04 	addi	r20,r20,48
  83650c:	dc001dc4 	addi	r16,sp,119
  836510:	dd001dc5 	stb	r20,119(sp)
  836514:	003f3806 	br	8361f8 <__alt_mem_epcs_flash_controller_0+0xff82d1f8>
  836518:	d9402d17 	ldw	r5,180(sp)
  83651c:	d9801e04 	addi	r6,sp,120
  836520:	9809883a 	mov	r4,r19
  836524:	08412d00 	call	8412d0 <__ssprint_r>
  836528:	103b391e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  83652c:	d8c02017 	ldw	r3,128(sp)
  836530:	da000404 	addi	r8,sp,16
  836534:	003c7306 	br	835704 <__alt_mem_epcs_flash_controller_0+0xff82c704>
  836538:	d9003617 	ldw	r4,216(sp)
  83653c:	d9403717 	ldw	r5,220(sp)
  836540:	da003e15 	stw	r8,248(sp)
  836544:	083ee1c0 	call	83ee1c <__fpclassifyd>
  836548:	da003e17 	ldw	r8,248(sp)
  83654c:	1000bd1e 	bne	r2,zero,836844 <___svfprintf_internal_r+0x19d0>
  836550:	008011c4 	movi	r2,71
  836554:	14411e0e 	bge	r2,r17,8369d0 <___svfprintf_internal_r+0x1b5c>
  836558:	040021b4 	movhi	r16,134
  83655c:	84243404 	addi	r16,r16,-28464
  836560:	00c000c4 	movi	r3,3
  836564:	00bfdfc4 	movi	r2,-129
  836568:	d8c02915 	stw	r3,164(sp)
  83656c:	90a4703a 	and	r18,r18,r2
  836570:	df002783 	ldbu	fp,158(sp)
  836574:	d8c02b15 	stw	r3,172(sp)
  836578:	d8002a15 	stw	zero,168(sp)
  83657c:	d8003215 	stw	zero,200(sp)
  836580:	003bfa06 	br	83556c <__alt_mem_epcs_flash_controller_0+0xff82c56c>
  836584:	9080100c 	andi	r2,r18,64
  836588:	d8002785 	stb	zero,158(sp)
  83658c:	10009426 	beq	r2,zero,8367e0 <___svfprintf_internal_r+0x196c>
  836590:	d9402e17 	ldw	r5,184(sp)
  836594:	d8c02a17 	ldw	r3,168(sp)
  836598:	002d883a 	mov	r22,zero
  83659c:	28800104 	addi	r2,r5,4
  8365a0:	2d00000b 	ldhu	r20,0(r5)
  8365a4:	183ec10e 	bge	r3,zero,8360ac <__alt_mem_epcs_flash_controller_0+0xff82d0ac>
  8365a8:	a586b03a 	or	r3,r20,r22
  8365ac:	d8802e15 	stw	r2,184(sp)
  8365b0:	183ec21e 	bne	r3,zero,8360bc <__alt_mem_epcs_flash_controller_0+0xff82d0bc>
  8365b4:	0039883a 	mov	fp,zero
  8365b8:	0005883a 	mov	r2,zero
  8365bc:	003db806 	br	835ca0 <__alt_mem_epcs_flash_controller_0+0xff82cca0>
  8365c0:	d8c02e17 	ldw	r3,184(sp)
  8365c4:	d9002e17 	ldw	r4,184(sp)
  8365c8:	d9402e17 	ldw	r5,184(sp)
  8365cc:	18c00017 	ldw	r3,0(r3)
  8365d0:	21000117 	ldw	r4,4(r4)
  8365d4:	29400204 	addi	r5,r5,8
  8365d8:	d8c03615 	stw	r3,216(sp)
  8365dc:	d9003715 	stw	r4,220(sp)
  8365e0:	d9402e15 	stw	r5,184(sp)
  8365e4:	003b5a06 	br	835350 <__alt_mem_epcs_flash_controller_0+0xff82c350>
  8365e8:	9080100c 	andi	r2,r18,64
  8365ec:	10010726 	beq	r2,zero,836a0c <___svfprintf_internal_r+0x1b98>
  8365f0:	d8802e17 	ldw	r2,184(sp)
  8365f4:	1500000f 	ldh	r20,0(r2)
  8365f8:	10800104 	addi	r2,r2,4
  8365fc:	d8802e15 	stw	r2,184(sp)
  836600:	a02dd7fa 	srai	r22,r20,31
  836604:	b005883a 	mov	r2,r22
  836608:	003b7d06 	br	835400 <__alt_mem_epcs_flash_controller_0+0xff82c400>
  83660c:	9080100c 	andi	r2,r18,64
  836610:	10010526 	beq	r2,zero,836a28 <___svfprintf_internal_r+0x1bb4>
  836614:	d8c02e17 	ldw	r3,184(sp)
  836618:	002d883a 	mov	r22,zero
  83661c:	1d00000b 	ldhu	r20,0(r3)
  836620:	18c00104 	addi	r3,r3,4
  836624:	d8c02e15 	stw	r3,184(sp)
  836628:	003ce206 	br	8359b4 <__alt_mem_epcs_flash_controller_0+0xff82c9b4>
  83662c:	bc400007 	ldb	r17,0(r23)
  836630:	003a6506 	br	834fc8 <__alt_mem_epcs_flash_controller_0+0xff82bfc8>
  836634:	9080040c 	andi	r2,r18,16
  836638:	10010126 	beq	r2,zero,836a40 <___svfprintf_internal_r+0x1bcc>
  83663c:	d8c02e17 	ldw	r3,184(sp)
  836640:	d9002f17 	ldw	r4,188(sp)
  836644:	18800017 	ldw	r2,0(r3)
  836648:	18c00104 	addi	r3,r3,4
  83664c:	d8c02e15 	stw	r3,184(sp)
  836650:	11000015 	stw	r4,0(r2)
  836654:	003a3206 	br	834f20 <__alt_mem_epcs_flash_controller_0+0xff82bf20>
  836658:	d9002a17 	ldw	r4,168(sp)
  83665c:	d8002785 	stb	zero,158(sp)
  836660:	203d8d16 	blt	r4,zero,835c98 <__alt_mem_epcs_flash_controller_0+0xff82cc98>
  836664:	00bfdfc4 	movi	r2,-129
  836668:	90a4703a 	and	r18,r18,r2
  83666c:	003ad506 	br	8351c4 <__alt_mem_epcs_flash_controller_0+0xff82c1c4>
  836670:	014021b4 	movhi	r5,134
  836674:	29644184 	addi	r5,r5,-28410
  836678:	d9402c15 	stw	r5,176(sp)
  83667c:	d9402c17 	ldw	r5,176(sp)
  836680:	1c47883a 	add	r3,r3,r17
  836684:	10800044 	addi	r2,r2,1
  836688:	41400015 	stw	r5,0(r8)
  83668c:	44400115 	stw	r17,4(r8)
  836690:	d8c02015 	stw	r3,128(sp)
  836694:	d8801f15 	stw	r2,124(sp)
  836698:	010001c4 	movi	r4,7
  83669c:	20bf3016 	blt	r4,r2,836360 <__alt_mem_epcs_flash_controller_0+0xff82d360>
  8366a0:	42000204 	addi	r8,r8,8
  8366a4:	003f3506 	br	83637c <__alt_mem_epcs_flash_controller_0+0xff82d37c>
  8366a8:	010021b4 	movhi	r4,134
  8366ac:	21244184 	addi	r4,r4,-28410
  8366b0:	d9002c15 	stw	r4,176(sp)
  8366b4:	003c3c06 	br	8357a8 <__alt_mem_epcs_flash_controller_0+0xff82c7a8>
  8366b8:	d9402d17 	ldw	r5,180(sp)
  8366bc:	d9801e04 	addi	r6,sp,120
  8366c0:	9809883a 	mov	r4,r19
  8366c4:	08412d00 	call	8412d0 <__ssprint_r>
  8366c8:	103ad11e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  8366cc:	d8c02017 	ldw	r3,128(sp)
  8366d0:	da000404 	addi	r8,sp,16
  8366d4:	003d9306 	br	835d24 <__alt_mem_epcs_flash_controller_0+0xff82cd24>
  8366d8:	d8801f17 	ldw	r2,124(sp)
  8366dc:	014021b4 	movhi	r5,134
  8366e0:	01000044 	movi	r4,1
  8366e4:	18c00044 	addi	r3,r3,1
  8366e8:	10800044 	addi	r2,r2,1
  8366ec:	29644104 	addi	r5,r5,-28412
  8366f0:	41000115 	stw	r4,4(r8)
  8366f4:	41400015 	stw	r5,0(r8)
  8366f8:	d8c02015 	stw	r3,128(sp)
  8366fc:	d8801f15 	stw	r2,124(sp)
  836700:	010001c4 	movi	r4,7
  836704:	2080b516 	blt	r4,r2,8369dc <___svfprintf_internal_r+0x1b68>
  836708:	42000204 	addi	r8,r8,8
  83670c:	8800041e 	bne	r17,zero,836720 <___svfprintf_internal_r+0x18ac>
  836710:	d8803317 	ldw	r2,204(sp)
  836714:	1000021e 	bne	r2,zero,836720 <___svfprintf_internal_r+0x18ac>
  836718:	9080004c 	andi	r2,r18,1
  83671c:	103c3926 	beq	r2,zero,835804 <__alt_mem_epcs_flash_controller_0+0xff82c804>
  836720:	d9003817 	ldw	r4,224(sp)
  836724:	d8801f17 	ldw	r2,124(sp)
  836728:	d9403417 	ldw	r5,208(sp)
  83672c:	20c7883a 	add	r3,r4,r3
  836730:	10800044 	addi	r2,r2,1
  836734:	41000115 	stw	r4,4(r8)
  836738:	41400015 	stw	r5,0(r8)
  83673c:	d8c02015 	stw	r3,128(sp)
  836740:	d8801f15 	stw	r2,124(sp)
  836744:	010001c4 	movi	r4,7
  836748:	20818016 	blt	r4,r2,836d4c <___svfprintf_internal_r+0x1ed8>
  83674c:	42000204 	addi	r8,r8,8
  836750:	0463c83a 	sub	r17,zero,r17
  836754:	0440cb0e 	bge	zero,r17,836a84 <___svfprintf_internal_r+0x1c10>
  836758:	05800404 	movi	r22,16
  83675c:	b440e80e 	bge	r22,r17,836b00 <___svfprintf_internal_r+0x1c8c>
  836760:	014021b4 	movhi	r5,134
  836764:	29644184 	addi	r5,r5,-28410
  836768:	d9402c15 	stw	r5,176(sp)
  83676c:	070001c4 	movi	fp,7
  836770:	dd002d17 	ldw	r20,180(sp)
  836774:	00000306 	br	836784 <___svfprintf_internal_r+0x1910>
  836778:	42000204 	addi	r8,r8,8
  83677c:	8c7ffc04 	addi	r17,r17,-16
  836780:	b440e20e 	bge	r22,r17,836b0c <___svfprintf_internal_r+0x1c98>
  836784:	18c00404 	addi	r3,r3,16
  836788:	10800044 	addi	r2,r2,1
  83678c:	45400015 	stw	r21,0(r8)
  836790:	45800115 	stw	r22,4(r8)
  836794:	d8c02015 	stw	r3,128(sp)
  836798:	d8801f15 	stw	r2,124(sp)
  83679c:	e0bff60e 	bge	fp,r2,836778 <__alt_mem_epcs_flash_controller_0+0xff82d778>
  8367a0:	d9801e04 	addi	r6,sp,120
  8367a4:	a00b883a 	mov	r5,r20
  8367a8:	9809883a 	mov	r4,r19
  8367ac:	08412d00 	call	8412d0 <__ssprint_r>
  8367b0:	103a971e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  8367b4:	d8c02017 	ldw	r3,128(sp)
  8367b8:	d8801f17 	ldw	r2,124(sp)
  8367bc:	da000404 	addi	r8,sp,16
  8367c0:	003fee06 	br	83677c <__alt_mem_epcs_flash_controller_0+0xff82d77c>
  8367c4:	d9002e17 	ldw	r4,184(sp)
  8367c8:	d9402a17 	ldw	r5,168(sp)
  8367cc:	002d883a 	mov	r22,zero
  8367d0:	20800104 	addi	r2,r4,4
  8367d4:	25000017 	ldw	r20,0(r4)
  8367d8:	283e7d0e 	bge	r5,zero,8361d0 <__alt_mem_epcs_flash_controller_0+0xff82d1d0>
  8367dc:	003eda06 	br	836348 <__alt_mem_epcs_flash_controller_0+0xff82d348>
  8367e0:	d9002e17 	ldw	r4,184(sp)
  8367e4:	d9402a17 	ldw	r5,168(sp)
  8367e8:	002d883a 	mov	r22,zero
  8367ec:	20800104 	addi	r2,r4,4
  8367f0:	25000017 	ldw	r20,0(r4)
  8367f4:	283e2d0e 	bge	r5,zero,8360ac <__alt_mem_epcs_flash_controller_0+0xff82d0ac>
  8367f8:	003f6b06 	br	8365a8 <__alt_mem_epcs_flash_controller_0+0xff82d5a8>
  8367fc:	d8c02e15 	stw	r3,184(sp)
  836800:	0039883a 	mov	fp,zero
  836804:	003ed206 	br	836350 <__alt_mem_epcs_flash_controller_0+0xff82d350>
  836808:	bc400043 	ldbu	r17,1(r23)
  83680c:	84000814 	ori	r16,r16,32
  836810:	bdc00044 	addi	r23,r23,1
  836814:	8c403fcc 	andi	r17,r17,255
  836818:	8c40201c 	xori	r17,r17,128
  83681c:	8c7fe004 	addi	r17,r17,-128
  836820:	0039e906 	br	834fc8 <__alt_mem_epcs_flash_controller_0+0xff82bfc8>
  836824:	d9402d17 	ldw	r5,180(sp)
  836828:	d9801e04 	addi	r6,sp,120
  83682c:	9809883a 	mov	r4,r19
  836830:	08412d00 	call	8412d0 <__ssprint_r>
  836834:	103a761e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  836838:	d8c02017 	ldw	r3,128(sp)
  83683c:	da000404 	addi	r8,sp,16
  836840:	003d4a06 	br	835d6c <__alt_mem_epcs_flash_controller_0+0xff82cd6c>
  836844:	d9002a17 	ldw	r4,168(sp)
  836848:	05bff7c4 	movi	r22,-33
  83684c:	00bfffc4 	movi	r2,-1
  836850:	8dac703a 	and	r22,r17,r22
  836854:	20806a26 	beq	r4,r2,836a00 <___svfprintf_internal_r+0x1b8c>
  836858:	008011c4 	movi	r2,71
  83685c:	b0813726 	beq	r22,r2,836d3c <___svfprintf_internal_r+0x1ec8>
  836860:	d9003717 	ldw	r4,220(sp)
  836864:	90c04014 	ori	r3,r18,256
  836868:	d8c02c15 	stw	r3,176(sp)
  83686c:	20015d16 	blt	r4,zero,836de4 <___svfprintf_internal_r+0x1f70>
  836870:	dd003717 	ldw	r20,220(sp)
  836874:	d8002905 	stb	zero,164(sp)
  836878:	00801984 	movi	r2,102
  83687c:	88814026 	beq	r17,r2,836d80 <___svfprintf_internal_r+0x1f0c>
  836880:	00801184 	movi	r2,70
  836884:	88817126 	beq	r17,r2,836e4c <___svfprintf_internal_r+0x1fd8>
  836888:	00801144 	movi	r2,69
  83688c:	b0816226 	beq	r22,r2,836e18 <___svfprintf_internal_r+0x1fa4>
  836890:	d8c02a17 	ldw	r3,168(sp)
  836894:	d8802104 	addi	r2,sp,132
  836898:	d8800315 	stw	r2,12(sp)
  83689c:	d9403617 	ldw	r5,216(sp)
  8368a0:	d8802504 	addi	r2,sp,148
  8368a4:	d8800215 	stw	r2,8(sp)
  8368a8:	d8802604 	addi	r2,sp,152
  8368ac:	d8c00015 	stw	r3,0(sp)
  8368b0:	d8800115 	stw	r2,4(sp)
  8368b4:	01c00084 	movi	r7,2
  8368b8:	a00d883a 	mov	r6,r20
  8368bc:	9809883a 	mov	r4,r19
  8368c0:	d8c03d15 	stw	r3,244(sp)
  8368c4:	da003e15 	stw	r8,248(sp)
  8368c8:	083b5800 	call	83b580 <_dtoa_r>
  8368cc:	1021883a 	mov	r16,r2
  8368d0:	008019c4 	movi	r2,103
  8368d4:	d8c03d17 	ldw	r3,244(sp)
  8368d8:	da003e17 	ldw	r8,248(sp)
  8368dc:	8880e726 	beq	r17,r2,836c7c <___svfprintf_internal_r+0x1e08>
  8368e0:	008011c4 	movi	r2,71
  8368e4:	8880d426 	beq	r17,r2,836c38 <___svfprintf_internal_r+0x1dc4>
  8368e8:	80f9883a 	add	fp,r16,r3
  8368ec:	d9003617 	ldw	r4,216(sp)
  8368f0:	000d883a 	mov	r6,zero
  8368f4:	000f883a 	mov	r7,zero
  8368f8:	a00b883a 	mov	r5,r20
  8368fc:	da003e15 	stw	r8,248(sp)
  836900:	08487ac0 	call	8487ac <__eqdf2>
  836904:	da003e17 	ldw	r8,248(sp)
  836908:	1000e426 	beq	r2,zero,836c9c <___svfprintf_internal_r+0x1e28>
  83690c:	d8802117 	ldw	r2,132(sp)
  836910:	1700062e 	bgeu	r2,fp,83692c <___svfprintf_internal_r+0x1ab8>
  836914:	01000c04 	movi	r4,48
  836918:	10c00044 	addi	r3,r2,1
  83691c:	d8c02115 	stw	r3,132(sp)
  836920:	11000005 	stb	r4,0(r2)
  836924:	d8802117 	ldw	r2,132(sp)
  836928:	173ffb36 	bltu	r2,fp,836918 <__alt_mem_epcs_flash_controller_0+0xff82d918>
  83692c:	1405c83a 	sub	r2,r2,r16
  836930:	d8803315 	stw	r2,204(sp)
  836934:	008011c4 	movi	r2,71
  836938:	b080c526 	beq	r22,r2,836c50 <___svfprintf_internal_r+0x1ddc>
  83693c:	00801944 	movi	r2,101
  836940:	1441d80e 	bge	r2,r17,8370a4 <___svfprintf_internal_r+0x2230>
  836944:	d8c02617 	ldw	r3,152(sp)
  836948:	00801984 	movi	r2,102
  83694c:	d8c03215 	stw	r3,200(sp)
  836950:	88813426 	beq	r17,r2,836e24 <___svfprintf_internal_r+0x1fb0>
  836954:	d8c03217 	ldw	r3,200(sp)
  836958:	d9003317 	ldw	r4,204(sp)
  83695c:	19012516 	blt	r3,r4,836df4 <___svfprintf_internal_r+0x1f80>
  836960:	9480004c 	andi	r18,r18,1
  836964:	9001841e 	bne	r18,zero,836f78 <___svfprintf_internal_r+0x2104>
  836968:	1805883a 	mov	r2,r3
  83696c:	1801cb16 	blt	r3,zero,83709c <___svfprintf_internal_r+0x2228>
  836970:	d8c03217 	ldw	r3,200(sp)
  836974:	044019c4 	movi	r17,103
  836978:	d8c02b15 	stw	r3,172(sp)
  83697c:	df002907 	ldb	fp,164(sp)
  836980:	e000a61e 	bne	fp,zero,836c1c <___svfprintf_internal_r+0x1da8>
  836984:	df002783 	ldbu	fp,158(sp)
  836988:	d8802915 	stw	r2,164(sp)
  83698c:	dc802c17 	ldw	r18,176(sp)
  836990:	d8002a15 	stw	zero,168(sp)
  836994:	003af506 	br	83556c <__alt_mem_epcs_flash_controller_0+0xff82c56c>
  836998:	040021b4 	movhi	r16,134
  83699c:	84243104 	addi	r16,r16,-28476
  8369a0:	003a7e06 	br	83539c <__alt_mem_epcs_flash_controller_0+0xff82c39c>
  8369a4:	d9003917 	ldw	r4,228(sp)
  8369a8:	04001004 	movi	r16,64
  8369ac:	800b883a 	mov	r5,r16
  8369b0:	08339440 	call	833944 <_malloc_r>
  8369b4:	d9002d17 	ldw	r4,180(sp)
  8369b8:	20800015 	stw	r2,0(r4)
  8369bc:	20800415 	stw	r2,16(r4)
  8369c0:	1001d026 	beq	r2,zero,837104 <___svfprintf_internal_r+0x2290>
  8369c4:	d8802d17 	ldw	r2,180(sp)
  8369c8:	14000515 	stw	r16,20(r2)
  8369cc:	00394406 	br	834ee0 <__alt_mem_epcs_flash_controller_0+0xff82bee0>
  8369d0:	040021b4 	movhi	r16,134
  8369d4:	84243304 	addi	r16,r16,-28468
  8369d8:	003ee106 	br	836560 <__alt_mem_epcs_flash_controller_0+0xff82d560>
  8369dc:	d9402d17 	ldw	r5,180(sp)
  8369e0:	d9801e04 	addi	r6,sp,120
  8369e4:	9809883a 	mov	r4,r19
  8369e8:	08412d00 	call	8412d0 <__ssprint_r>
  8369ec:	103a081e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  8369f0:	dc402617 	ldw	r17,152(sp)
  8369f4:	d8c02017 	ldw	r3,128(sp)
  8369f8:	da000404 	addi	r8,sp,16
  8369fc:	003f4306 	br	83670c <__alt_mem_epcs_flash_controller_0+0xff82d70c>
  836a00:	01400184 	movi	r5,6
  836a04:	d9402a15 	stw	r5,168(sp)
  836a08:	003f9506 	br	836860 <__alt_mem_epcs_flash_controller_0+0xff82d860>
  836a0c:	d8c02e17 	ldw	r3,184(sp)
  836a10:	1d000017 	ldw	r20,0(r3)
  836a14:	18c00104 	addi	r3,r3,4
  836a18:	d8c02e15 	stw	r3,184(sp)
  836a1c:	a02dd7fa 	srai	r22,r20,31
  836a20:	b005883a 	mov	r2,r22
  836a24:	003a7606 	br	835400 <__alt_mem_epcs_flash_controller_0+0xff82c400>
  836a28:	d9002e17 	ldw	r4,184(sp)
  836a2c:	002d883a 	mov	r22,zero
  836a30:	25000017 	ldw	r20,0(r4)
  836a34:	21000104 	addi	r4,r4,4
  836a38:	d9002e15 	stw	r4,184(sp)
  836a3c:	003bdd06 	br	8359b4 <__alt_mem_epcs_flash_controller_0+0xff82c9b4>
  836a40:	9480100c 	andi	r18,r18,64
  836a44:	90006e26 	beq	r18,zero,836c00 <___svfprintf_internal_r+0x1d8c>
  836a48:	d9402e17 	ldw	r5,184(sp)
  836a4c:	d8c02f17 	ldw	r3,188(sp)
  836a50:	28800017 	ldw	r2,0(r5)
  836a54:	29400104 	addi	r5,r5,4
  836a58:	d9402e15 	stw	r5,184(sp)
  836a5c:	10c0000d 	sth	r3,0(r2)
  836a60:	00392f06 	br	834f20 <__alt_mem_epcs_flash_controller_0+0xff82bf20>
  836a64:	d9402d17 	ldw	r5,180(sp)
  836a68:	d9801e04 	addi	r6,sp,120
  836a6c:	9809883a 	mov	r4,r19
  836a70:	08412d00 	call	8412d0 <__ssprint_r>
  836a74:	1039e61e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  836a78:	d8c02017 	ldw	r3,128(sp)
  836a7c:	d8801f17 	ldw	r2,124(sp)
  836a80:	da000404 	addi	r8,sp,16
  836a84:	d9403317 	ldw	r5,204(sp)
  836a88:	10800044 	addi	r2,r2,1
  836a8c:	44000015 	stw	r16,0(r8)
  836a90:	28c7883a 	add	r3,r5,r3
  836a94:	003b5506 	br	8357ec <__alt_mem_epcs_flash_controller_0+0xff82c7ec>
  836a98:	8009883a 	mov	r4,r16
  836a9c:	df003e15 	stw	fp,248(sp)
  836aa0:	0834c200 	call	834c20 <strlen>
  836aa4:	d8802b15 	stw	r2,172(sp)
  836aa8:	da003e17 	ldw	r8,248(sp)
  836aac:	103c160e 	bge	r2,zero,835b08 <__alt_mem_epcs_flash_controller_0+0xff82cb08>
  836ab0:	0005883a 	mov	r2,zero
  836ab4:	003c1406 	br	835b08 <__alt_mem_epcs_flash_controller_0+0xff82cb08>
  836ab8:	00bfffc4 	movi	r2,-1
  836abc:	0039d906 	br	835224 <__alt_mem_epcs_flash_controller_0+0xff82c224>
  836ac0:	010021b4 	movhi	r4,134
  836ac4:	21244584 	addi	r4,r4,-28394
  836ac8:	d9003515 	stw	r4,212(sp)
  836acc:	003ae406 	br	835660 <__alt_mem_epcs_flash_controller_0+0xff82c660>
  836ad0:	013fffc4 	movi	r4,-1
  836ad4:	0039fa06 	br	8352c0 <__alt_mem_epcs_flash_controller_0+0xff82c2c0>
  836ad8:	d9402d17 	ldw	r5,180(sp)
  836adc:	d9801e04 	addi	r6,sp,120
  836ae0:	9809883a 	mov	r4,r19
  836ae4:	08412d00 	call	8412d0 <__ssprint_r>
  836ae8:	1039c91e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  836aec:	d8c02017 	ldw	r3,128(sp)
  836af0:	da000404 	addi	r8,sp,16
  836af4:	003d8406 	br	836108 <__alt_mem_epcs_flash_controller_0+0xff82d108>
  836af8:	0023883a 	mov	r17,zero
  836afc:	003d8306 	br	83610c <__alt_mem_epcs_flash_controller_0+0xff82d10c>
  836b00:	010021b4 	movhi	r4,134
  836b04:	21244184 	addi	r4,r4,-28410
  836b08:	d9002c15 	stw	r4,176(sp)
  836b0c:	d9002c17 	ldw	r4,176(sp)
  836b10:	1c47883a 	add	r3,r3,r17
  836b14:	10800044 	addi	r2,r2,1
  836b18:	41000015 	stw	r4,0(r8)
  836b1c:	44400115 	stw	r17,4(r8)
  836b20:	d8c02015 	stw	r3,128(sp)
  836b24:	d8801f15 	stw	r2,124(sp)
  836b28:	010001c4 	movi	r4,7
  836b2c:	20bfcd16 	blt	r4,r2,836a64 <__alt_mem_epcs_flash_controller_0+0xff82da64>
  836b30:	42000204 	addi	r8,r8,8
  836b34:	003fd306 	br	836a84 <__alt_mem_epcs_flash_controller_0+0xff82da84>
  836b38:	d9402d17 	ldw	r5,180(sp)
  836b3c:	d9801e04 	addi	r6,sp,120
  836b40:	9809883a 	mov	r4,r19
  836b44:	08412d00 	call	8412d0 <__ssprint_r>
  836b48:	1039b11e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  836b4c:	d8802617 	ldw	r2,152(sp)
  836b50:	d8c02017 	ldw	r3,128(sp)
  836b54:	da000404 	addi	r8,sp,16
  836b58:	003e1c06 	br	8363cc <__alt_mem_epcs_flash_controller_0+0xff82d3cc>
  836b5c:	d8802a17 	ldw	r2,168(sp)
  836b60:	00c00184 	movi	r3,6
  836b64:	1880012e 	bgeu	r3,r2,836b6c <___svfprintf_internal_r+0x1cf8>
  836b68:	1805883a 	mov	r2,r3
  836b6c:	d8802b15 	stw	r2,172(sp)
  836b70:	1000f316 	blt	r2,zero,836f40 <___svfprintf_internal_r+0x20cc>
  836b74:	040021b4 	movhi	r16,134
  836b78:	d8802915 	stw	r2,164(sp)
  836b7c:	dd002e15 	stw	r20,184(sp)
  836b80:	d8002a15 	stw	zero,168(sp)
  836b84:	d8003215 	stw	zero,200(sp)
  836b88:	84243f04 	addi	r16,r16,-28420
  836b8c:	0039883a 	mov	fp,zero
  836b90:	003a7d06 	br	835588 <__alt_mem_epcs_flash_controller_0+0xff82c588>
  836b94:	010021b4 	movhi	r4,134
  836b98:	21244584 	addi	r4,r4,-28394
  836b9c:	d9003515 	stw	r4,212(sp)
  836ba0:	003b3d06 	br	835898 <__alt_mem_epcs_flash_controller_0+0xff82c898>
  836ba4:	d9402d17 	ldw	r5,180(sp)
  836ba8:	d9801e04 	addi	r6,sp,120
  836bac:	9809883a 	mov	r4,r19
  836bb0:	08412d00 	call	8412d0 <__ssprint_r>
  836bb4:	1039961e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  836bb8:	d8802617 	ldw	r2,152(sp)
  836bbc:	d9403317 	ldw	r5,204(sp)
  836bc0:	d8c02017 	ldw	r3,128(sp)
  836bc4:	da000404 	addi	r8,sp,16
  836bc8:	2885c83a 	sub	r2,r5,r2
  836bcc:	003e1006 	br	836410 <__alt_mem_epcs_flash_controller_0+0xff82d410>
  836bd0:	00800044 	movi	r2,1
  836bd4:	10803fcc 	andi	r2,r2,255
  836bd8:	00c00044 	movi	r3,1
  836bdc:	10fa1026 	beq	r2,r3,835420 <__alt_mem_epcs_flash_controller_0+0xff82c420>
  836be0:	00c00084 	movi	r3,2
  836be4:	10fb8226 	beq	r2,r3,8359f0 <__alt_mem_epcs_flash_controller_0+0xff82c9f0>
  836be8:	003a4206 	br	8354f4 <__alt_mem_epcs_flash_controller_0+0xff82c4f4>
  836bec:	0021883a 	mov	r16,zero
  836bf0:	003e0806 	br	836414 <__alt_mem_epcs_flash_controller_0+0xff82d414>
  836bf4:	07000b44 	movi	fp,45
  836bf8:	df002785 	stb	fp,158(sp)
  836bfc:	0039e306 	br	83538c <__alt_mem_epcs_flash_controller_0+0xff82c38c>
  836c00:	d9002e17 	ldw	r4,184(sp)
  836c04:	d9402f17 	ldw	r5,188(sp)
  836c08:	20800017 	ldw	r2,0(r4)
  836c0c:	21000104 	addi	r4,r4,4
  836c10:	d9002e15 	stw	r4,184(sp)
  836c14:	11400015 	stw	r5,0(r2)
  836c18:	0038c106 	br	834f20 <__alt_mem_epcs_flash_controller_0+0xff82bf20>
  836c1c:	00c00b44 	movi	r3,45
  836c20:	d8c02785 	stb	r3,158(sp)
  836c24:	d8802915 	stw	r2,164(sp)
  836c28:	dc802c17 	ldw	r18,176(sp)
  836c2c:	d8002a15 	stw	zero,168(sp)
  836c30:	07000b44 	movi	fp,45
  836c34:	003a5106 	br	83557c <__alt_mem_epcs_flash_controller_0+0xff82c57c>
  836c38:	9080004c 	andi	r2,r18,1
  836c3c:	1000941e 	bne	r2,zero,836e90 <___svfprintf_internal_r+0x201c>
  836c40:	d8802117 	ldw	r2,132(sp)
  836c44:	1405c83a 	sub	r2,r2,r16
  836c48:	d8803315 	stw	r2,204(sp)
  836c4c:	b441151e 	bne	r22,r17,8370a4 <___svfprintf_internal_r+0x2230>
  836c50:	dd802617 	ldw	r22,152(sp)
  836c54:	00bfff44 	movi	r2,-3
  836c58:	b0801a16 	blt	r22,r2,836cc4 <___svfprintf_internal_r+0x1e50>
  836c5c:	d9402a17 	ldw	r5,168(sp)
  836c60:	2d801816 	blt	r5,r22,836cc4 <___svfprintf_internal_r+0x1e50>
  836c64:	dd803215 	stw	r22,200(sp)
  836c68:	003f3a06 	br	836954 <__alt_mem_epcs_flash_controller_0+0xff82d954>
  836c6c:	1025883a 	mov	r18,r2
  836c70:	0039883a 	mov	fp,zero
  836c74:	00800084 	movi	r2,2
  836c78:	003fd606 	br	836bd4 <__alt_mem_epcs_flash_controller_0+0xff82dbd4>
  836c7c:	9080004c 	andi	r2,r18,1
  836c80:	103f191e 	bne	r2,zero,8368e8 <__alt_mem_epcs_flash_controller_0+0xff82d8e8>
  836c84:	d8802117 	ldw	r2,132(sp)
  836c88:	003f2806 	br	83692c <__alt_mem_epcs_flash_controller_0+0xff82d92c>
  836c8c:	010021b4 	movhi	r4,134
  836c90:	21244184 	addi	r4,r4,-28410
  836c94:	d9002c15 	stw	r4,176(sp)
  836c98:	003c7c06 	br	835e8c <__alt_mem_epcs_flash_controller_0+0xff82ce8c>
  836c9c:	e005883a 	mov	r2,fp
  836ca0:	003f2206 	br	83692c <__alt_mem_epcs_flash_controller_0+0xff82d92c>
  836ca4:	d9002a17 	ldw	r4,168(sp)
  836ca8:	df002783 	ldbu	fp,158(sp)
  836cac:	dd002e15 	stw	r20,184(sp)
  836cb0:	d9002915 	stw	r4,164(sp)
  836cb4:	d9002b15 	stw	r4,172(sp)
  836cb8:	d8002a15 	stw	zero,168(sp)
  836cbc:	d8003215 	stw	zero,200(sp)
  836cc0:	003a2a06 	br	83556c <__alt_mem_epcs_flash_controller_0+0xff82c56c>
  836cc4:	8c7fff84 	addi	r17,r17,-2
  836cc8:	b5bfffc4 	addi	r22,r22,-1
  836ccc:	dd802615 	stw	r22,152(sp)
  836cd0:	dc4022c5 	stb	r17,139(sp)
  836cd4:	b000c316 	blt	r22,zero,836fe4 <___svfprintf_internal_r+0x2170>
  836cd8:	00800ac4 	movi	r2,43
  836cdc:	d8802305 	stb	r2,140(sp)
  836ce0:	00800244 	movi	r2,9
  836ce4:	15806e16 	blt	r2,r22,836ea0 <___svfprintf_internal_r+0x202c>
  836ce8:	00800c04 	movi	r2,48
  836cec:	b5800c04 	addi	r22,r22,48
  836cf0:	d8802345 	stb	r2,141(sp)
  836cf4:	dd802385 	stb	r22,142(sp)
  836cf8:	d88023c4 	addi	r2,sp,143
  836cfc:	df0022c4 	addi	fp,sp,139
  836d00:	d8c03317 	ldw	r3,204(sp)
  836d04:	1739c83a 	sub	fp,r2,fp
  836d08:	d9003317 	ldw	r4,204(sp)
  836d0c:	e0c7883a 	add	r3,fp,r3
  836d10:	df003b15 	stw	fp,236(sp)
  836d14:	d8c02b15 	stw	r3,172(sp)
  836d18:	00800044 	movi	r2,1
  836d1c:	1100b70e 	bge	r2,r4,836ffc <___svfprintf_internal_r+0x2188>
  836d20:	d8c02b17 	ldw	r3,172(sp)
  836d24:	18c00044 	addi	r3,r3,1
  836d28:	d8c02b15 	stw	r3,172(sp)
  836d2c:	1805883a 	mov	r2,r3
  836d30:	1800b016 	blt	r3,zero,836ff4 <___svfprintf_internal_r+0x2180>
  836d34:	d8003215 	stw	zero,200(sp)
  836d38:	003f1006 	br	83697c <__alt_mem_epcs_flash_controller_0+0xff82d97c>
  836d3c:	d8802a17 	ldw	r2,168(sp)
  836d40:	103ec71e 	bne	r2,zero,836860 <__alt_mem_epcs_flash_controller_0+0xff82d860>
  836d44:	dc002a15 	stw	r16,168(sp)
  836d48:	003ec506 	br	836860 <__alt_mem_epcs_flash_controller_0+0xff82d860>
  836d4c:	d9402d17 	ldw	r5,180(sp)
  836d50:	d9801e04 	addi	r6,sp,120
  836d54:	9809883a 	mov	r4,r19
  836d58:	08412d00 	call	8412d0 <__ssprint_r>
  836d5c:	10392c1e 	bne	r2,zero,835210 <__alt_mem_epcs_flash_controller_0+0xff82c210>
  836d60:	dc402617 	ldw	r17,152(sp)
  836d64:	d8c02017 	ldw	r3,128(sp)
  836d68:	d8801f17 	ldw	r2,124(sp)
  836d6c:	da000404 	addi	r8,sp,16
  836d70:	003e7706 	br	836750 <__alt_mem_epcs_flash_controller_0+0xff82d750>
  836d74:	182f883a 	mov	r23,r3
  836d78:	d8002a15 	stw	zero,168(sp)
  836d7c:	00389306 	br	834fcc <__alt_mem_epcs_flash_controller_0+0xff82bfcc>
  836d80:	d8c02a17 	ldw	r3,168(sp)
  836d84:	d8802104 	addi	r2,sp,132
  836d88:	d8800315 	stw	r2,12(sp)
  836d8c:	d9403617 	ldw	r5,216(sp)
  836d90:	d8802504 	addi	r2,sp,148
  836d94:	d8800215 	stw	r2,8(sp)
  836d98:	d8802604 	addi	r2,sp,152
  836d9c:	d8c00015 	stw	r3,0(sp)
  836da0:	9809883a 	mov	r4,r19
  836da4:	d8800115 	stw	r2,4(sp)
  836da8:	01c000c4 	movi	r7,3
  836dac:	a00d883a 	mov	r6,r20
  836db0:	da003e15 	stw	r8,248(sp)
  836db4:	083b5800 	call	83b580 <_dtoa_r>
  836db8:	d9002a17 	ldw	r4,168(sp)
  836dbc:	da003e17 	ldw	r8,248(sp)
  836dc0:	1021883a 	mov	r16,r2
  836dc4:	1139883a 	add	fp,r2,r4
  836dc8:	2007883a 	mov	r3,r4
  836dcc:	81000007 	ldb	r4,0(r16)
  836dd0:	00800c04 	movi	r2,48
  836dd4:	20806f26 	beq	r4,r2,836f94 <___svfprintf_internal_r+0x2120>
  836dd8:	d8c02617 	ldw	r3,152(sp)
  836ddc:	e0f9883a 	add	fp,fp,r3
  836de0:	003ec206 	br	8368ec <__alt_mem_epcs_flash_controller_0+0xff82d8ec>
  836de4:	00c00b44 	movi	r3,45
  836de8:	2520003c 	xorhi	r20,r4,32768
  836dec:	d8c02905 	stb	r3,164(sp)
  836df0:	003ea106 	br	836878 <__alt_mem_epcs_flash_controller_0+0xff82d878>
  836df4:	d8c03217 	ldw	r3,200(sp)
  836df8:	00c0890e 	bge	zero,r3,837020 <___svfprintf_internal_r+0x21ac>
  836dfc:	00800044 	movi	r2,1
  836e00:	d9003317 	ldw	r4,204(sp)
  836e04:	1105883a 	add	r2,r2,r4
  836e08:	d8802b15 	stw	r2,172(sp)
  836e0c:	10005f16 	blt	r2,zero,836f8c <___svfprintf_internal_r+0x2118>
  836e10:	044019c4 	movi	r17,103
  836e14:	003ed906 	br	83697c <__alt_mem_epcs_flash_controller_0+0xff82d97c>
  836e18:	d9002a17 	ldw	r4,168(sp)
  836e1c:	20c00044 	addi	r3,r4,1
  836e20:	003e9c06 	br	836894 <__alt_mem_epcs_flash_controller_0+0xff82d894>
  836e24:	d9002a17 	ldw	r4,168(sp)
  836e28:	00c0680e 	bge	zero,r3,836fcc <___svfprintf_internal_r+0x2158>
  836e2c:	2000461e 	bne	r4,zero,836f48 <___svfprintf_internal_r+0x20d4>
  836e30:	9480004c 	andi	r18,r18,1
  836e34:	9000441e 	bne	r18,zero,836f48 <___svfprintf_internal_r+0x20d4>
  836e38:	1805883a 	mov	r2,r3
  836e3c:	1800a116 	blt	r3,zero,8370c4 <___svfprintf_internal_r+0x2250>
  836e40:	d8c03217 	ldw	r3,200(sp)
  836e44:	d8c02b15 	stw	r3,172(sp)
  836e48:	003ecc06 	br	83697c <__alt_mem_epcs_flash_controller_0+0xff82d97c>
  836e4c:	d9402a17 	ldw	r5,168(sp)
  836e50:	d8802104 	addi	r2,sp,132
  836e54:	d8800315 	stw	r2,12(sp)
  836e58:	d9400015 	stw	r5,0(sp)
  836e5c:	d8802504 	addi	r2,sp,148
  836e60:	d9403617 	ldw	r5,216(sp)
  836e64:	d8800215 	stw	r2,8(sp)
  836e68:	d8802604 	addi	r2,sp,152
  836e6c:	d8800115 	stw	r2,4(sp)
  836e70:	01c000c4 	movi	r7,3
  836e74:	a00d883a 	mov	r6,r20
  836e78:	9809883a 	mov	r4,r19
  836e7c:	da003e15 	stw	r8,248(sp)
  836e80:	083b5800 	call	83b580 <_dtoa_r>
  836e84:	d8c02a17 	ldw	r3,168(sp)
  836e88:	da003e17 	ldw	r8,248(sp)
  836e8c:	1021883a 	mov	r16,r2
  836e90:	00801184 	movi	r2,70
  836e94:	80f9883a 	add	fp,r16,r3
  836e98:	88bfcc26 	beq	r17,r2,836dcc <__alt_mem_epcs_flash_controller_0+0xff82ddcc>
  836e9c:	003e9306 	br	8368ec <__alt_mem_epcs_flash_controller_0+0xff82d8ec>
  836ea0:	df0022c4 	addi	fp,sp,139
  836ea4:	dc002a15 	stw	r16,168(sp)
  836ea8:	9829883a 	mov	r20,r19
  836eac:	e021883a 	mov	r16,fp
  836eb0:	4027883a 	mov	r19,r8
  836eb4:	b009883a 	mov	r4,r22
  836eb8:	01400284 	movi	r5,10
  836ebc:	08303d40 	call	8303d4 <__modsi3>
  836ec0:	10800c04 	addi	r2,r2,48
  836ec4:	843fffc4 	addi	r16,r16,-1
  836ec8:	b009883a 	mov	r4,r22
  836ecc:	01400284 	movi	r5,10
  836ed0:	80800005 	stb	r2,0(r16)
  836ed4:	08303500 	call	830350 <__divsi3>
  836ed8:	102d883a 	mov	r22,r2
  836edc:	00800244 	movi	r2,9
  836ee0:	15bff416 	blt	r2,r22,836eb4 <__alt_mem_epcs_flash_controller_0+0xff82deb4>
  836ee4:	9811883a 	mov	r8,r19
  836ee8:	b0800c04 	addi	r2,r22,48
  836eec:	a027883a 	mov	r19,r20
  836ef0:	8029883a 	mov	r20,r16
  836ef4:	a17fffc4 	addi	r5,r20,-1
  836ef8:	a0bfffc5 	stb	r2,-1(r20)
  836efc:	dc002a17 	ldw	r16,168(sp)
  836f00:	2f00782e 	bgeu	r5,fp,8370e4 <___svfprintf_internal_r+0x2270>
  836f04:	d9c02384 	addi	r7,sp,142
  836f08:	3d0fc83a 	sub	r7,r7,r20
  836f0c:	d9002344 	addi	r4,sp,141
  836f10:	e1cf883a 	add	r7,fp,r7
  836f14:	00000106 	br	836f1c <___svfprintf_internal_r+0x20a8>
  836f18:	28800003 	ldbu	r2,0(r5)
  836f1c:	20800005 	stb	r2,0(r4)
  836f20:	21000044 	addi	r4,r4,1
  836f24:	29400044 	addi	r5,r5,1
  836f28:	21fffb1e 	bne	r4,r7,836f18 <__alt_mem_epcs_flash_controller_0+0xff82df18>
  836f2c:	d8802304 	addi	r2,sp,140
  836f30:	1505c83a 	sub	r2,r2,r20
  836f34:	d8c02344 	addi	r3,sp,141
  836f38:	1885883a 	add	r2,r3,r2
  836f3c:	003f7006 	br	836d00 <__alt_mem_epcs_flash_controller_0+0xff82dd00>
  836f40:	0005883a 	mov	r2,zero
  836f44:	003f0b06 	br	836b74 <__alt_mem_epcs_flash_controller_0+0xff82db74>
  836f48:	d9002a17 	ldw	r4,168(sp)
  836f4c:	d8c03217 	ldw	r3,200(sp)
  836f50:	20800044 	addi	r2,r4,1
  836f54:	1885883a 	add	r2,r3,r2
  836f58:	d8802b15 	stw	r2,172(sp)
  836f5c:	103e870e 	bge	r2,zero,83697c <__alt_mem_epcs_flash_controller_0+0xff82d97c>
  836f60:	0005883a 	mov	r2,zero
  836f64:	003e8506 	br	83697c <__alt_mem_epcs_flash_controller_0+0xff82d97c>
  836f68:	010021b4 	movhi	r4,134
  836f6c:	21244184 	addi	r4,r4,-28410
  836f70:	d9002c15 	stw	r4,176(sp)
  836f74:	003cc506 	br	83628c <__alt_mem_epcs_flash_controller_0+0xff82d28c>
  836f78:	d8c03217 	ldw	r3,200(sp)
  836f7c:	18c00044 	addi	r3,r3,1
  836f80:	d8c02b15 	stw	r3,172(sp)
  836f84:	1805883a 	mov	r2,r3
  836f88:	183fa10e 	bge	r3,zero,836e10 <__alt_mem_epcs_flash_controller_0+0xff82de10>
  836f8c:	0005883a 	mov	r2,zero
  836f90:	003f9f06 	br	836e10 <__alt_mem_epcs_flash_controller_0+0xff82de10>
  836f94:	d9003617 	ldw	r4,216(sp)
  836f98:	000d883a 	mov	r6,zero
  836f9c:	000f883a 	mov	r7,zero
  836fa0:	a00b883a 	mov	r5,r20
  836fa4:	d8c03d15 	stw	r3,244(sp)
  836fa8:	da003e15 	stw	r8,248(sp)
  836fac:	08487ac0 	call	8487ac <__eqdf2>
  836fb0:	d8c03d17 	ldw	r3,244(sp)
  836fb4:	da003e17 	ldw	r8,248(sp)
  836fb8:	103f8726 	beq	r2,zero,836dd8 <__alt_mem_epcs_flash_controller_0+0xff82ddd8>
  836fbc:	00800044 	movi	r2,1
  836fc0:	10c7c83a 	sub	r3,r2,r3
  836fc4:	d8c02615 	stw	r3,152(sp)
  836fc8:	003f8406 	br	836ddc <__alt_mem_epcs_flash_controller_0+0xff82dddc>
  836fcc:	20000e1e 	bne	r4,zero,837008 <___svfprintf_internal_r+0x2194>
  836fd0:	9480004c 	andi	r18,r18,1
  836fd4:	90000c1e 	bne	r18,zero,837008 <___svfprintf_internal_r+0x2194>
  836fd8:	00800044 	movi	r2,1
  836fdc:	d8802b15 	stw	r2,172(sp)
  836fe0:	003e6606 	br	83697c <__alt_mem_epcs_flash_controller_0+0xff82d97c>
  836fe4:	00800b44 	movi	r2,45
  836fe8:	05adc83a 	sub	r22,zero,r22
  836fec:	d8802305 	stb	r2,140(sp)
  836ff0:	003f3b06 	br	836ce0 <__alt_mem_epcs_flash_controller_0+0xff82dce0>
  836ff4:	0005883a 	mov	r2,zero
  836ff8:	003f4e06 	br	836d34 <__alt_mem_epcs_flash_controller_0+0xff82dd34>
  836ffc:	90a4703a 	and	r18,r18,r2
  837000:	903f4a26 	beq	r18,zero,836d2c <__alt_mem_epcs_flash_controller_0+0xff82dd2c>
  837004:	003f4606 	br	836d20 <__alt_mem_epcs_flash_controller_0+0xff82dd20>
  837008:	d8c02a17 	ldw	r3,168(sp)
  83700c:	18c00084 	addi	r3,r3,2
  837010:	d8c02b15 	stw	r3,172(sp)
  837014:	1805883a 	mov	r2,r3
  837018:	183e580e 	bge	r3,zero,83697c <__alt_mem_epcs_flash_controller_0+0xff82d97c>
  83701c:	003fd006 	br	836f60 <__alt_mem_epcs_flash_controller_0+0xff82df60>
  837020:	00800084 	movi	r2,2
  837024:	10c5c83a 	sub	r2,r2,r3
  837028:	003f7506 	br	836e00 <__alt_mem_epcs_flash_controller_0+0xff82de00>
  83702c:	d9402e17 	ldw	r5,184(sp)
  837030:	d9002e17 	ldw	r4,184(sp)
  837034:	bc400043 	ldbu	r17,1(r23)
  837038:	29400017 	ldw	r5,0(r5)
  83703c:	20800104 	addi	r2,r4,4
  837040:	d8802e15 	stw	r2,184(sp)
  837044:	d9402a15 	stw	r5,168(sp)
  837048:	182f883a 	mov	r23,r3
  83704c:	283df10e 	bge	r5,zero,836814 <__alt_mem_epcs_flash_controller_0+0xff82d814>
  837050:	8c403fcc 	andi	r17,r17,255
  837054:	017fffc4 	movi	r5,-1
  837058:	8c40201c 	xori	r17,r17,128
  83705c:	d9402a15 	stw	r5,168(sp)
  837060:	8c7fe004 	addi	r17,r17,-128
  837064:	0037d806 	br	834fc8 <__alt_mem_epcs_flash_controller_0+0xff82bfc8>
  837068:	9080004c 	andi	r2,r18,1
  83706c:	0039883a 	mov	fp,zero
  837070:	10000726 	beq	r2,zero,837090 <___svfprintf_internal_r+0x221c>
  837074:	d8c02817 	ldw	r3,160(sp)
  837078:	dc001dc4 	addi	r16,sp,119
  83707c:	00800c04 	movi	r2,48
  837080:	1c07c83a 	sub	r3,r3,r16
  837084:	d8801dc5 	stb	r2,119(sp)
  837088:	d8c02b15 	stw	r3,172(sp)
  83708c:	00393106 	br	835554 <__alt_mem_epcs_flash_controller_0+0xff82c554>
  837090:	d8002b15 	stw	zero,172(sp)
  837094:	dc001e04 	addi	r16,sp,120
  837098:	00392e06 	br	835554 <__alt_mem_epcs_flash_controller_0+0xff82c554>
  83709c:	0005883a 	mov	r2,zero
  8370a0:	003e3306 	br	836970 <__alt_mem_epcs_flash_controller_0+0xff82d970>
  8370a4:	dd802617 	ldw	r22,152(sp)
  8370a8:	003f0706 	br	836cc8 <__alt_mem_epcs_flash_controller_0+0xff82dcc8>
  8370ac:	d8c02b03 	ldbu	r3,172(sp)
  8370b0:	d8c02785 	stb	r3,158(sp)
  8370b4:	003a3506 	br	83598c <__alt_mem_epcs_flash_controller_0+0xff82c98c>
  8370b8:	d8c02b03 	ldbu	r3,172(sp)
  8370bc:	d8c02785 	stb	r3,158(sp)
  8370c0:	003a1706 	br	835920 <__alt_mem_epcs_flash_controller_0+0xff82c920>
  8370c4:	0005883a 	mov	r2,zero
  8370c8:	003f5d06 	br	836e40 <__alt_mem_epcs_flash_controller_0+0xff82de40>
  8370cc:	d8c02b03 	ldbu	r3,172(sp)
  8370d0:	d8c02785 	stb	r3,158(sp)
  8370d4:	0038f306 	br	8354a4 <__alt_mem_epcs_flash_controller_0+0xff82c4a4>
  8370d8:	d8c02b03 	ldbu	r3,172(sp)
  8370dc:	d8c02785 	stb	r3,158(sp)
  8370e0:	0038be06 	br	8353dc <__alt_mem_epcs_flash_controller_0+0xff82c3dc>
  8370e4:	d8802344 	addi	r2,sp,141
  8370e8:	003f0506 	br	836d00 <__alt_mem_epcs_flash_controller_0+0xff82dd00>
  8370ec:	d8c02b03 	ldbu	r3,172(sp)
  8370f0:	d8c02785 	stb	r3,158(sp)
  8370f4:	00388b06 	br	835324 <__alt_mem_epcs_flash_controller_0+0xff82c324>
  8370f8:	d8c02b03 	ldbu	r3,172(sp)
  8370fc:	d8c02785 	stb	r3,158(sp)
  837100:	003ad706 	br	835c60 <__alt_mem_epcs_flash_controller_0+0xff82cc60>
  837104:	d9403917 	ldw	r5,228(sp)
  837108:	00800304 	movi	r2,12
  83710c:	28800015 	stw	r2,0(r5)
  837110:	00bfffc4 	movi	r2,-1
  837114:	00384306 	br	835224 <__alt_mem_epcs_flash_controller_0+0xff82c224>
  837118:	d8c02b03 	ldbu	r3,172(sp)
  83711c:	d8c02785 	stb	r3,158(sp)
  837120:	003ab606 	br	835bfc <__alt_mem_epcs_flash_controller_0+0xff82cbfc>
  837124:	d8c02b03 	ldbu	r3,172(sp)
  837128:	d8c02785 	stb	r3,158(sp)
  83712c:	003a8906 	br	835b54 <__alt_mem_epcs_flash_controller_0+0xff82cb54>

00837130 <__ssvfscanf_r>:
  837130:	2880030b 	ldhu	r2,12(r5)
  837134:	deff4b04 	addi	sp,sp,-724
  837138:	df00b315 	stw	fp,716(sp)
  83713c:	ddc0b215 	stw	r23,712(sp)
  837140:	dfc0b415 	stw	ra,720(sp)
  837144:	dd80b115 	stw	r22,708(sp)
  837148:	dd40b015 	stw	r21,704(sp)
  83714c:	dd00af15 	stw	r20,700(sp)
  837150:	dcc0ae15 	stw	r19,696(sp)
  837154:	dc80ad15 	stw	r18,692(sp)
  837158:	dc40ac15 	stw	r17,688(sp)
  83715c:	dc00ab15 	stw	r16,684(sp)
  837160:	10c8000c 	andi	r3,r2,8192
  837164:	d9c09c15 	stw	r7,624(sp)
  837168:	2839883a 	mov	fp,r5
  83716c:	202f883a 	mov	r23,r4
  837170:	1800061e 	bne	r3,zero,83718c <__ssvfscanf_r+0x5c>
  837174:	29001917 	ldw	r4,100(r5)
  837178:	00f7ffc4 	movi	r3,-8193
  83717c:	10880014 	ori	r2,r2,8192
  837180:	20c6703a 	and	r3,r4,r3
  837184:	2880030d 	sth	r2,12(r5)
  837188:	28c01915 	stw	r3,100(r5)
  83718c:	30800003 	ldbu	r2,0(r6)
  837190:	0021883a 	mov	r16,zero
  837194:	058021b4 	movhi	r22,134
  837198:	d800a115 	stw	zero,644(sp)
  83719c:	d8009e15 	stw	zero,632(sp)
  8371a0:	d800a015 	stw	zero,640(sp)
  8371a4:	d8809b15 	stw	r2,620(sp)
  8371a8:	b5adb904 	addi	r22,r22,-18716
  8371ac:	8025883a 	mov	r18,r16
  8371b0:	e027883a 	mov	r19,fp
  8371b4:	35000044 	addi	r20,r6,1
  8371b8:	10001e26 	beq	r2,zero,837234 <__ssvfscanf_r+0x104>
  8371bc:	b4000017 	ldw	r16,0(r22)
  8371c0:	8087883a 	add	r3,r16,r2
  8371c4:	18c00043 	ldbu	r3,1(r3)
  8371c8:	18c0020c 	andi	r3,r3,8
  8371cc:	18001b26 	beq	r3,zero,83723c <__ssvfscanf_r+0x10c>
  8371d0:	98800117 	ldw	r2,4(r19)
  8371d4:	00800e0e 	bge	zero,r2,837210 <__ssvfscanf_r+0xe0>
  8371d8:	98c00017 	ldw	r3,0(r19)
  8371dc:	b1000017 	ldw	r4,0(r22)
  8371e0:	18800003 	ldbu	r2,0(r3)
  8371e4:	2085883a 	add	r2,r4,r2
  8371e8:	10800043 	ldbu	r2,1(r2)
  8371ec:	1080020c 	andi	r2,r2,8
  8371f0:	10000b26 	beq	r2,zero,837220 <__ssvfscanf_r+0xf0>
  8371f4:	98800117 	ldw	r2,4(r19)
  8371f8:	18c00044 	addi	r3,r3,1
  8371fc:	98c00015 	stw	r3,0(r19)
  837200:	10bfffc4 	addi	r2,r2,-1
  837204:	98800115 	stw	r2,4(r19)
  837208:	94800044 	addi	r18,r18,1
  83720c:	00bff216 	blt	zero,r2,8371d8 <__alt_mem_epcs_flash_controller_0+0xff82e1d8>
  837210:	980b883a 	mov	r5,r19
  837214:	b809883a 	mov	r4,r23
  837218:	08429480 	call	842948 <__ssrefill_r>
  83721c:	103fee26 	beq	r2,zero,8371d8 <__alt_mem_epcs_flash_controller_0+0xff82e1d8>
  837220:	a00d883a 	mov	r6,r20
  837224:	30800003 	ldbu	r2,0(r6)
  837228:	35000044 	addi	r20,r6,1
  83722c:	d8809b15 	stw	r2,620(sp)
  837230:	103fe21e 	bne	r2,zero,8371bc <__alt_mem_epcs_flash_controller_0+0xff82e1bc>
  837234:	d880a017 	ldw	r2,640(sp)
  837238:	00009a06 	br	8374a4 <__ssvfscanf_r+0x374>
  83723c:	00c00944 	movi	r3,37
  837240:	10c0891e 	bne	r2,r3,837468 <__ssvfscanf_r+0x338>
  837244:	0039883a 	mov	fp,zero
  837248:	35400043 	ldbu	r21,1(r6)
  83724c:	0023883a 	mov	r17,zero
  837250:	01801e04 	movi	r6,120
  837254:	00c01b04 	movi	r3,108
  837258:	e009883a 	mov	r4,fp
  83725c:	a1c00044 	addi	r7,r20,1
  837260:	3540a236 	bltu	r6,r21,8374ec <__ssvfscanf_r+0x3bc>
  837264:	a80490ba 	slli	r2,r21,2
  837268:	014020f4 	movhi	r5,131
  83726c:	295c9f04 	addi	r5,r5,29308
  837270:	1145883a 	add	r2,r2,r5
  837274:	10800017 	ldw	r2,0(r2)
  837278:	1000683a 	jmp	r2
  83727c:	008374a0 	cmpeqi	r2,zero,3538
  837280:	008374ec 	andhi	r2,zero,3539
  837284:	008374ec 	andhi	r2,zero,3539
  837288:	008374ec 	andhi	r2,zero,3539
  83728c:	008374ec 	andhi	r2,zero,3539
  837290:	008374ec 	andhi	r2,zero,3539
  837294:	008374ec 	andhi	r2,zero,3539
  837298:	008374ec 	andhi	r2,zero,3539
  83729c:	008374ec 	andhi	r2,zero,3539
  8372a0:	008374ec 	andhi	r2,zero,3539
  8372a4:	008374ec 	andhi	r2,zero,3539
  8372a8:	008374ec 	andhi	r2,zero,3539
  8372ac:	008374ec 	andhi	r2,zero,3539
  8372b0:	008374ec 	andhi	r2,zero,3539
  8372b4:	008374ec 	andhi	r2,zero,3539
  8372b8:	008374ec 	andhi	r2,zero,3539
  8372bc:	008374ec 	andhi	r2,zero,3539
  8372c0:	008374ec 	andhi	r2,zero,3539
  8372c4:	008374ec 	andhi	r2,zero,3539
  8372c8:	008374ec 	andhi	r2,zero,3539
  8372cc:	008374ec 	andhi	r2,zero,3539
  8372d0:	008374ec 	andhi	r2,zero,3539
  8372d4:	008374ec 	andhi	r2,zero,3539
  8372d8:	008374ec 	andhi	r2,zero,3539
  8372dc:	008374ec 	andhi	r2,zero,3539
  8372e0:	008374ec 	andhi	r2,zero,3539
  8372e4:	008374ec 	andhi	r2,zero,3539
  8372e8:	008374ec 	andhi	r2,zero,3539
  8372ec:	008374ec 	andhi	r2,zero,3539
  8372f0:	008374ec 	andhi	r2,zero,3539
  8372f4:	008374ec 	andhi	r2,zero,3539
  8372f8:	008374ec 	andhi	r2,zero,3539
  8372fc:	008374ec 	andhi	r2,zero,3539
  837300:	008374ec 	andhi	r2,zero,3539
  837304:	008374ec 	andhi	r2,zero,3539
  837308:	008374ec 	andhi	r2,zero,3539
  83730c:	008374ec 	andhi	r2,zero,3539
  837310:	00837460 	cmpeqi	r2,zero,3537
  837314:	008374ec 	andhi	r2,zero,3539
  837318:	008374ec 	andhi	r2,zero,3539
  83731c:	008374ec 	andhi	r2,zero,3539
  837320:	008374ec 	andhi	r2,zero,3539
  837324:	008374d4 	movui	r2,3539
  837328:	008374ec 	andhi	r2,zero,3539
  83732c:	008374ec 	andhi	r2,zero,3539
  837330:	008374ec 	andhi	r2,zero,3539
  837334:	008374ec 	andhi	r2,zero,3539
  837338:	008374ec 	andhi	r2,zero,3539
  83733c:	00837634 	movhi	r2,3544
  837340:	00837634 	movhi	r2,3544
  837344:	00837634 	movhi	r2,3544
  837348:	00837634 	movhi	r2,3544
  83734c:	00837634 	movhi	r2,3544
  837350:	00837634 	movhi	r2,3544
  837354:	00837634 	movhi	r2,3544
  837358:	00837634 	movhi	r2,3544
  83735c:	00837634 	movhi	r2,3544
  837360:	00837634 	movhi	r2,3544
  837364:	008374ec 	andhi	r2,zero,3539
  837368:	008374ec 	andhi	r2,zero,3539
  83736c:	008374ec 	andhi	r2,zero,3539
  837370:	008374ec 	andhi	r2,zero,3539
  837374:	008374ec 	andhi	r2,zero,3539
  837378:	008374ec 	andhi	r2,zero,3539
  83737c:	008374ec 	andhi	r2,zero,3539
  837380:	008374ec 	andhi	r2,zero,3539
  837384:	008374ec 	andhi	r2,zero,3539
  837388:	008374ec 	andhi	r2,zero,3539
  83738c:	00837604 	movi	r2,3544
  837390:	008376e0 	cmpeqi	r2,zero,3547
  837394:	008374ec 	andhi	r2,zero,3539
  837398:	008376e0 	cmpeqi	r2,zero,3547
  83739c:	008374ec 	andhi	r2,zero,3539
  8373a0:	008374ec 	andhi	r2,zero,3539
  8373a4:	008374ec 	andhi	r2,zero,3539
  8373a8:	008374ec 	andhi	r2,zero,3539
  8373ac:	008376cc 	andi	r2,zero,3547
  8373b0:	008374ec 	andhi	r2,zero,3539
  8373b4:	008374ec 	andhi	r2,zero,3539
  8373b8:	0083769c 	xori	r2,zero,3546
  8373bc:	008374ec 	andhi	r2,zero,3539
  8373c0:	008374ec 	andhi	r2,zero,3539
  8373c4:	008374ec 	andhi	r2,zero,3539
  8373c8:	008374ec 	andhi	r2,zero,3539
  8373cc:	008374ec 	andhi	r2,zero,3539
  8373d0:	008374ec 	andhi	r2,zero,3539
  8373d4:	008374ec 	andhi	r2,zero,3539
  8373d8:	008374ec 	andhi	r2,zero,3539
  8373dc:	0083766c 	andhi	r2,zero,3545
  8373e0:	008374ec 	andhi	r2,zero,3539
  8373e4:	008374ec 	andhi	r2,zero,3539
  8373e8:	00837828 	cmpgeui	r2,zero,3552
  8373ec:	008374ec 	andhi	r2,zero,3539
  8373f0:	008374ec 	andhi	r2,zero,3539
  8373f4:	008374ec 	andhi	r2,zero,3539
  8373f8:	008374ec 	andhi	r2,zero,3539
  8373fc:	008374ec 	andhi	r2,zero,3539
  837400:	008374ec 	andhi	r2,zero,3539
  837404:	008374ec 	andhi	r2,zero,3539
  837408:	008377a8 	cmpgeui	r2,zero,3550
  83740c:	0083777c 	xorhi	r2,zero,3549
  837410:	008376e0 	cmpeqi	r2,zero,3547
  837414:	008376e0 	cmpeqi	r2,zero,3547
  837418:	008376e0 	cmpeqi	r2,zero,3547
  83741c:	00837768 	cmpgeui	r2,zero,3549
  837420:	008378b8 	rdprs	r2,zero,3554
  837424:	008374ec 	andhi	r2,zero,3539
  837428:	008374ec 	andhi	r2,zero,3539
  83742c:	00837754 	movui	r2,3549
  837430:	008374ec 	andhi	r2,zero,3539
  837434:	00837724 	muli	r2,zero,3548
  837438:	008376f8 	rdprs	r2,zero,3547
  83743c:	008375d4 	movui	r2,3543
  837440:	008374ec 	andhi	r2,zero,3539
  837444:	008374ec 	andhi	r2,zero,3539
  837448:	008375bc 	xorhi	r2,zero,3542
  83744c:	008374ec 	andhi	r2,zero,3539
  837450:	00837540 	call	83754 <OSCtxSw_SWITCH_PC+0x83714>
  837454:	008374ec 	andhi	r2,zero,3539
  837458:	008374ec 	andhi	r2,zero,3539
  83745c:	0083766c 	andhi	r2,zero,3545
  837460:	d9c09d15 	stw	r7,628(sp)
  837464:	3829883a 	mov	r20,r7
  837468:	98800117 	ldw	r2,4(r19)
  83746c:	0081c60e 	bge	zero,r2,837b88 <__ssvfscanf_r+0xa58>
  837470:	98800017 	ldw	r2,0(r19)
  837474:	a0ffffc3 	ldbu	r3,-1(r20)
  837478:	11000003 	ldbu	r4,0(r2)
  83747c:	20ff6d1e 	bne	r4,r3,837234 <__alt_mem_epcs_flash_controller_0+0xff82e234>
  837480:	98c00117 	ldw	r3,4(r19)
  837484:	10800044 	addi	r2,r2,1
  837488:	98800015 	stw	r2,0(r19)
  83748c:	18bfffc4 	addi	r2,r3,-1
  837490:	98800115 	stw	r2,4(r19)
  837494:	94800044 	addi	r18,r18,1
  837498:	a00d883a 	mov	r6,r20
  83749c:	003f6106 	br	837224 <__alt_mem_epcs_flash_controller_0+0xff82e224>
  8374a0:	00bfffc4 	movi	r2,-1
  8374a4:	dfc0b417 	ldw	ra,720(sp)
  8374a8:	df00b317 	ldw	fp,716(sp)
  8374ac:	ddc0b217 	ldw	r23,712(sp)
  8374b0:	dd80b117 	ldw	r22,708(sp)
  8374b4:	dd40b017 	ldw	r21,704(sp)
  8374b8:	dd00af17 	ldw	r20,700(sp)
  8374bc:	dcc0ae17 	ldw	r19,696(sp)
  8374c0:	dc80ad17 	ldw	r18,692(sp)
  8374c4:	dc40ac17 	ldw	r17,688(sp)
  8374c8:	dc00ab17 	ldw	r16,684(sp)
  8374cc:	dec0b504 	addi	sp,sp,724
  8374d0:	f800283a 	ret
  8374d4:	a1400043 	ldbu	r5,1(r20)
  8374d8:	3829883a 	mov	r20,r7
  8374dc:	8c400414 	ori	r17,r17,16
  8374e0:	2d403fcc 	andi	r21,r5,255
  8374e4:	a1c00044 	addi	r7,r20,1
  8374e8:	357f5e2e 	bgeu	r6,r21,837264 <__alt_mem_epcs_flash_controller_0+0xff82e264>
  8374ec:	856b883a 	add	r21,r16,r21
  8374f0:	a8800043 	ldbu	r2,1(r21)
  8374f4:	d9c09d15 	stw	r7,628(sp)
  8374f8:	00c00044 	movi	r3,1
  8374fc:	108000cc 	andi	r2,r2,3
  837500:	2039883a 	mov	fp,r4
  837504:	10c1a526 	beq	r2,r3,837b9c <__ssvfscanf_r+0xa6c>
  837508:	98800117 	ldw	r2,4(r19)
  83750c:	00804216 	blt	zero,r2,837618 <__ssvfscanf_r+0x4e8>
  837510:	980b883a 	mov	r5,r19
  837514:	b809883a 	mov	r4,r23
  837518:	08429480 	call	842948 <__ssrefill_r>
  83751c:	10015e1e 	bne	r2,zero,837a98 <__ssvfscanf_r+0x968>
  837520:	01002134 	movhi	r4,132
  837524:	2101e904 	addi	r4,r4,1956
  837528:	01400284 	movi	r5,10
  83752c:	b4000017 	ldw	r16,0(r22)
  837530:	d900a115 	stw	r4,644(sp)
  837534:	d9409e15 	stw	r5,632(sp)
  837538:	050000c4 	movi	r20,3
  83753c:	00000a06 	br	837568 <__ssvfscanf_r+0x438>
  837540:	98800117 	ldw	r2,4(r19)
  837544:	d9c09d15 	stw	r7,628(sp)
  837548:	2039883a 	mov	fp,r4
  83754c:	0081e20e 	bge	zero,r2,837cd8 <__ssvfscanf_r+0xba8>
  837550:	00c02134 	movhi	r3,132
  837554:	18c34704 	addi	r3,r3,3356
  837558:	01000284 	movi	r4,10
  83755c:	d8c0a115 	stw	r3,644(sp)
  837560:	d9009e15 	stw	r4,632(sp)
  837564:	050000c4 	movi	r20,3
  837568:	98c00017 	ldw	r3,0(r19)
  83756c:	00000206 	br	837578 <__ssvfscanf_r+0x448>
  837570:	18c00044 	addi	r3,r3,1
  837574:	98c00015 	stw	r3,0(r19)
  837578:	19000003 	ldbu	r4,0(r3)
  83757c:	20803fcc 	andi	r2,r4,255
  837580:	8085883a 	add	r2,r16,r2
  837584:	10800043 	ldbu	r2,1(r2)
  837588:	1140020c 	andi	r5,r2,8
  83758c:	28020126 	beq	r5,zero,837d94 <__ssvfscanf_r+0xc64>
  837590:	98800117 	ldw	r2,4(r19)
  837594:	94800044 	addi	r18,r18,1
  837598:	10bfffc4 	addi	r2,r2,-1
  83759c:	98800115 	stw	r2,4(r19)
  8375a0:	00bff316 	blt	zero,r2,837570 <__alt_mem_epcs_flash_controller_0+0xff82e570>
  8375a4:	980b883a 	mov	r5,r19
  8375a8:	b809883a 	mov	r4,r23
  8375ac:	08429480 	call	842948 <__ssrefill_r>
  8375b0:	1001391e 	bne	r2,zero,837a98 <__ssvfscanf_r+0x968>
  8375b4:	b4000017 	ldw	r16,0(r22)
  8375b8:	003feb06 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  8375bc:	98800117 	ldw	r2,4(r19)
  8375c0:	d9c09d15 	stw	r7,628(sp)
  8375c4:	2039883a 	mov	fp,r4
  8375c8:	0081aa0e 	bge	zero,r2,837c74 <__ssvfscanf_r+0xb44>
  8375cc:	05000084 	movi	r20,2
  8375d0:	003fe506 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  8375d4:	98800117 	ldw	r2,4(r19)
  8375d8:	d9c09d15 	stw	r7,628(sp)
  8375dc:	2039883a 	mov	fp,r4
  8375e0:	8c408814 	ori	r17,r17,544
  8375e4:	0081df0e 	bge	zero,r2,837d64 <__ssvfscanf_r+0xc34>
  8375e8:	00c02134 	movhi	r3,132
  8375ec:	18c34704 	addi	r3,r3,3356
  8375f0:	01000404 	movi	r4,16
  8375f4:	d8c0a115 	stw	r3,644(sp)
  8375f8:	d9009e15 	stw	r4,632(sp)
  8375fc:	050000c4 	movi	r20,3
  837600:	003fd906 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  837604:	98800117 	ldw	r2,4(r19)
  837608:	d9c09d15 	stw	r7,628(sp)
  83760c:	2039883a 	mov	fp,r4
  837610:	8c400054 	ori	r17,r17,1
  837614:	0081850e 	bge	zero,r2,837c2c <__ssvfscanf_r+0xafc>
  837618:	00c02134 	movhi	r3,132
  83761c:	18c1e904 	addi	r3,r3,1956
  837620:	01000284 	movi	r4,10
  837624:	d8c0a115 	stw	r3,644(sp)
  837628:	d9009e15 	stw	r4,632(sp)
  83762c:	050000c4 	movi	r20,3
  837630:	003fcd06 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  837634:	01400284 	movi	r5,10
  837638:	d8c0a615 	stw	r3,664(sp)
  83763c:	d980a915 	stw	r6,676(sp)
  837640:	d9c0aa15 	stw	r7,680(sp)
  837644:	08305040 	call	830504 <__mulsi3>
  837648:	a1400043 	ldbu	r5,1(r20)
  83764c:	d9c0aa17 	ldw	r7,680(sp)
  837650:	1545883a 	add	r2,r2,r21
  837654:	113ff404 	addi	r4,r2,-48
  837658:	3829883a 	mov	r20,r7
  83765c:	2d403fcc 	andi	r21,r5,255
  837660:	d8c0a617 	ldw	r3,664(sp)
  837664:	d980a917 	ldw	r6,676(sp)
  837668:	003efc06 	br	83725c <__alt_mem_epcs_flash_controller_0+0xff82e25c>
  83766c:	98800117 	ldw	r2,4(r19)
  837670:	d9c09d15 	stw	r7,628(sp)
  837674:	2039883a 	mov	fp,r4
  837678:	8c408014 	ori	r17,r17,512
  83767c:	0081710e 	bge	zero,r2,837c44 <__ssvfscanf_r+0xb14>
  837680:	01402134 	movhi	r5,132
  837684:	29434704 	addi	r5,r5,3356
  837688:	00800404 	movi	r2,16
  83768c:	d940a115 	stw	r5,644(sp)
  837690:	d8809e15 	stw	r2,632(sp)
  837694:	050000c4 	movi	r20,3
  837698:	003fb306 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  83769c:	98800117 	ldw	r2,4(r19)
  8376a0:	d9c09d15 	stw	r7,628(sp)
  8376a4:	2039883a 	mov	fp,r4
  8376a8:	8c400054 	ori	r17,r17,1
  8376ac:	0081840e 	bge	zero,r2,837cc0 <__ssvfscanf_r+0xb90>
  8376b0:	01402134 	movhi	r5,132
  8376b4:	29434704 	addi	r5,r5,3356
  8376b8:	00800204 	movi	r2,8
  8376bc:	d940a115 	stw	r5,644(sp)
  8376c0:	d8809e15 	stw	r2,632(sp)
  8376c4:	050000c4 	movi	r20,3
  8376c8:	003fa706 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  8376cc:	a1400043 	ldbu	r5,1(r20)
  8376d0:	8c400094 	ori	r17,r17,2
  8376d4:	3829883a 	mov	r20,r7
  8376d8:	2d403fcc 	andi	r21,r5,255
  8376dc:	003edf06 	br	83725c <__alt_mem_epcs_flash_controller_0+0xff82e25c>
  8376e0:	98800117 	ldw	r2,4(r19)
  8376e4:	d9c09d15 	stw	r7,628(sp)
  8376e8:	2039883a 	mov	fp,r4
  8376ec:	00816d0e 	bge	zero,r2,837ca4 <__ssvfscanf_r+0xb74>
  8376f0:	05000104 	movi	r20,4
  8376f4:	003f9c06 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  8376f8:	98800117 	ldw	r2,4(r19)
  8376fc:	d9c09d15 	stw	r7,628(sp)
  837700:	2039883a 	mov	fp,r4
  837704:	0081800e 	bge	zero,r2,837d08 <__ssvfscanf_r+0xbd8>
  837708:	01002134 	movhi	r4,132
  83770c:	21034704 	addi	r4,r4,3356
  837710:	01400204 	movi	r5,8
  837714:	d900a115 	stw	r4,644(sp)
  837718:	d9409e15 	stw	r5,632(sp)
  83771c:	050000c4 	movi	r20,3
  837720:	003f9106 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  837724:	d9c09d15 	stw	r7,628(sp)
  837728:	8880040c 	andi	r2,r17,16
  83772c:	1000a01e 	bne	r2,zero,8379b0 <__ssvfscanf_r+0x880>
  837730:	8880010c 	andi	r2,r17,4
  837734:	10012826 	beq	r2,zero,837bd8 <__ssvfscanf_r+0xaa8>
  837738:	d9009c17 	ldw	r4,624(sp)
  83773c:	3829883a 	mov	r20,r7
  837740:	20800017 	ldw	r2,0(r4)
  837744:	21000104 	addi	r4,r4,4
  837748:	d9009c15 	stw	r4,624(sp)
  83774c:	1480000d 	sth	r18,0(r2)
  837750:	003eb306 	br	837220 <__alt_mem_epcs_flash_controller_0+0xff82e220>
  837754:	a5400043 	ldbu	r21,1(r20)
  837758:	a8c11a26 	beq	r21,r3,837bc4 <__ssvfscanf_r+0xa94>
  83775c:	8c400054 	ori	r17,r17,1
  837760:	3829883a 	mov	r20,r7
  837764:	003ebd06 	br	83725c <__alt_mem_epcs_flash_controller_0+0xff82e25c>
  837768:	a1400043 	ldbu	r5,1(r20)
  83776c:	8c400114 	ori	r17,r17,4
  837770:	3829883a 	mov	r20,r7
  837774:	2d403fcc 	andi	r21,r5,255
  837778:	003eb806 	br	83725c <__alt_mem_epcs_flash_controller_0+0xff82e25c>
  83777c:	98800117 	ldw	r2,4(r19)
  837780:	d9c09d15 	stw	r7,628(sp)
  837784:	2039883a 	mov	fp,r4
  837788:	00bf610e 	bge	zero,r2,837510 <__alt_mem_epcs_flash_controller_0+0xff82e510>
  83778c:	00802134 	movhi	r2,132
  837790:	1081e904 	addi	r2,r2,1956
  837794:	00c00284 	movi	r3,10
  837798:	d880a115 	stw	r2,644(sp)
  83779c:	d8c09e15 	stw	r3,632(sp)
  8377a0:	050000c4 	movi	r20,3
  8377a4:	003f7006 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  8377a8:	98800117 	ldw	r2,4(r19)
  8377ac:	d9c09d15 	stw	r7,628(sp)
  8377b0:	2039883a 	mov	fp,r4
  8377b4:	0080c60e 	bge	zero,r2,837ad0 <__ssvfscanf_r+0x9a0>
  8377b8:	e000011e 	bne	fp,zero,8377c0 <__ssvfscanf_r+0x690>
  8377bc:	07000044 	movi	fp,1
  8377c0:	8880004c 	andi	r2,r17,1
  8377c4:	1000461e 	bne	r2,zero,8378e0 <__ssvfscanf_r+0x7b0>
  8377c8:	8c40040c 	andi	r17,r17,16
  8377cc:	8800dc26 	beq	r17,zero,837b40 <__ssvfscanf_r+0xa10>
  8377d0:	0021883a 	mov	r16,zero
  8377d4:	00000806 	br	8377f8 <__ssvfscanf_r+0x6c8>
  8377d8:	1887883a 	add	r3,r3,r2
  8377dc:	980b883a 	mov	r5,r19
  8377e0:	b809883a 	mov	r4,r23
  8377e4:	98c00015 	stw	r3,0(r19)
  8377e8:	80a1883a 	add	r16,r16,r2
  8377ec:	e0b9c83a 	sub	fp,fp,r2
  8377f0:	08429480 	call	842948 <__ssrefill_r>
  8377f4:	1000cc1e 	bne	r2,zero,837b28 <__ssvfscanf_r+0x9f8>
  8377f8:	98800117 	ldw	r2,4(r19)
  8377fc:	98c00017 	ldw	r3,0(r19)
  837800:	173ff516 	blt	r2,fp,8377d8 <__alt_mem_epcs_flash_controller_0+0xff82e7d8>
  837804:	1705c83a 	sub	r2,r2,fp
  837808:	1f15883a 	add	r10,r3,fp
  83780c:	8721883a 	add	r16,r16,fp
  837810:	98800115 	stw	r2,4(r19)
  837814:	9a800015 	stw	r10,0(r19)
  837818:	dd009d17 	ldw	r20,628(sp)
  83781c:	9425883a 	add	r18,r18,r16
  837820:	a00d883a 	mov	r6,r20
  837824:	003e7f06 	br	837224 <__alt_mem_epcs_flash_controller_0+0xff82e224>
  837828:	2039883a 	mov	fp,r4
  83782c:	380b883a 	mov	r5,r7
  837830:	d9005884 	addi	r4,sp,354
  837834:	d9c09d15 	stw	r7,628(sp)
  837838:	083ee900 	call	83ee90 <__sccl>
  83783c:	1029883a 	mov	r20,r2
  837840:	98800117 	ldw	r2,4(r19)
  837844:	0081120e 	bge	zero,r2,837c90 <__ssvfscanf_r+0xb60>
  837848:	99000017 	ldw	r4,0(r19)
  83784c:	20800003 	ldbu	r2,0(r4)
  837850:	e0005a26 	beq	fp,zero,8379bc <__ssvfscanf_r+0x88c>
  837854:	8c40040c 	andi	r17,r17,16
  837858:	88005b26 	beq	r17,zero,8379c8 <__ssvfscanf_r+0x898>
  83785c:	e023883a 	mov	r17,fp
  837860:	0021883a 	mov	r16,zero
  837864:	00000106 	br	83786c <__ssvfscanf_r+0x73c>
  837868:	20800003 	ldbu	r2,0(r4)
  83786c:	10803fcc 	andi	r2,r2,255
  837870:	d8c05884 	addi	r3,sp,354
  837874:	1885883a 	add	r2,r3,r2
  837878:	10800007 	ldb	r2,0(r2)
  83787c:	1000ae26 	beq	r2,zero,837b38 <__ssvfscanf_r+0xa08>
  837880:	98800117 	ldw	r2,4(r19)
  837884:	21000044 	addi	r4,r4,1
  837888:	84000044 	addi	r16,r16,1
  83788c:	10bfffc4 	addi	r2,r2,-1
  837890:	98800115 	stw	r2,4(r19)
  837894:	99000015 	stw	r4,0(r19)
  837898:	8700a126 	beq	r16,fp,837b20 <__ssvfscanf_r+0x9f0>
  83789c:	00bff216 	blt	zero,r2,837868 <__alt_mem_epcs_flash_controller_0+0xff82e868>
  8378a0:	980b883a 	mov	r5,r19
  8378a4:	b809883a 	mov	r4,r23
  8378a8:	08429480 	call	842948 <__ssrefill_r>
  8378ac:	10009b1e 	bne	r2,zero,837b1c <__ssvfscanf_r+0x9ec>
  8378b0:	99000017 	ldw	r4,0(r19)
  8378b4:	003fec06 	br	837868 <__alt_mem_epcs_flash_controller_0+0xff82e868>
  8378b8:	98800117 	ldw	r2,4(r19)
  8378bc:	d9c09d15 	stw	r7,628(sp)
  8378c0:	2039883a 	mov	fp,r4
  8378c4:	00811c0e 	bge	zero,r2,837d38 <__ssvfscanf_r+0xc08>
  8378c8:	01402134 	movhi	r5,132
  8378cc:	2941e904 	addi	r5,r5,1956
  8378d0:	d940a115 	stw	r5,644(sp)
  8378d4:	d8009e15 	stw	zero,632(sp)
  8378d8:	050000c4 	movi	r20,3
  8378dc:	003f2206 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  8378e0:	dd409904 	addi	r21,sp,612
  8378e4:	8c40040c 	andi	r17,r17,16
  8378e8:	01800204 	movi	r6,8
  8378ec:	000b883a 	mov	r5,zero
  8378f0:	a809883a 	mov	r4,r21
  8378f4:	dc409f15 	stw	r17,636(sp)
  8378f8:	08342980 	call	834298 <memset>
  8378fc:	dc409f17 	ldw	r17,636(sp)
  837900:	88006e26 	beq	r17,zero,837abc <__ssvfscanf_r+0x98c>
  837904:	0029883a 	mov	r20,zero
  837908:	0023883a 	mov	r17,zero
  83790c:	083d2880 	call	83d288 <__locale_mb_cur_max>
  837910:	14406126 	beq	r2,r17,837a98 <__ssvfscanf_r+0x968>
  837914:	98800017 	ldw	r2,0(r19)
  837918:	98c00117 	ldw	r3,4(r19)
  83791c:	d9000104 	addi	r4,sp,4
  837920:	12000003 	ldbu	r8,0(r2)
  837924:	18ffffc4 	addi	r3,r3,-1
  837928:	10800044 	addi	r2,r2,1
  83792c:	98c00115 	stw	r3,4(r19)
  837930:	98800015 	stw	r2,0(r19)
  837934:	8c000044 	addi	r16,r17,1
  837938:	dd400015 	stw	r21,0(sp)
  83793c:	2463883a 	add	r17,r4,r17
  837940:	200d883a 	mov	r6,r4
  837944:	a00b883a 	mov	r5,r20
  837948:	800f883a 	mov	r7,r16
  83794c:	b809883a 	mov	r4,r23
  837950:	8a000005 	stb	r8,0(r17)
  837954:	083d33c0 	call	83d33c <_mbrtowc_r>
  837958:	017fffc4 	movi	r5,-1
  83795c:	11404e26 	beq	r2,r5,837a98 <__ssvfscanf_r+0x968>
  837960:	1000601e 	bne	r2,zero,837ae4 <__ssvfscanf_r+0x9b4>
  837964:	d8c09f17 	ldw	r3,636(sp)
  837968:	1800641e 	bne	r3,zero,837afc <__ssvfscanf_r+0x9cc>
  83796c:	a0000015 	stw	zero,0(r20)
  837970:	9425883a 	add	r18,r18,r16
  837974:	e179883a 	add	fp,fp,r5
  837978:	a5000104 	addi	r20,r20,4
  83797c:	98800117 	ldw	r2,4(r19)
  837980:	0023883a 	mov	r17,zero
  837984:	00804b16 	blt	zero,r2,837ab4 <__ssvfscanf_r+0x984>
  837988:	980b883a 	mov	r5,r19
  83798c:	b809883a 	mov	r4,r23
  837990:	08429480 	call	842948 <__ssrefill_r>
  837994:	10004726 	beq	r2,zero,837ab4 <__ssvfscanf_r+0x984>
  837998:	88003f1e 	bne	r17,zero,837a98 <__ssvfscanf_r+0x968>
  83799c:	d8c09f17 	ldw	r3,636(sp)
  8379a0:	1800031e 	bne	r3,zero,8379b0 <__ssvfscanf_r+0x880>
  8379a4:	d900a017 	ldw	r4,640(sp)
  8379a8:	21000044 	addi	r4,r4,1
  8379ac:	d900a015 	stw	r4,640(sp)
  8379b0:	dd009d17 	ldw	r20,628(sp)
  8379b4:	a00d883a 	mov	r6,r20
  8379b8:	003e1a06 	br	837224 <__alt_mem_epcs_flash_controller_0+0xff82e224>
  8379bc:	8c40040c 	andi	r17,r17,16
  8379c0:	073fffc4 	movi	fp,-1
  8379c4:	883fa51e 	bne	r17,zero,83785c <__alt_mem_epcs_flash_controller_0+0xff82e85c>
  8379c8:	d9409c17 	ldw	r5,624(sp)
  8379cc:	e2bfffc4 	addi	r10,fp,-1
  8379d0:	2c000017 	ldw	r16,0(r5)
  8379d4:	2c400104 	addi	r17,r5,4
  8379d8:	8007883a 	mov	r3,r16
  8379dc:	82ab883a 	add	r21,r16,r10
  8379e0:	00000306 	br	8379f0 <__ssvfscanf_r+0x8c0>
  8379e4:	99000017 	ldw	r4,0(r19)
  8379e8:	e007883a 	mov	r3,fp
  8379ec:	20800003 	ldbu	r2,0(r4)
  8379f0:	10803fcc 	andi	r2,r2,255
  8379f4:	d9405884 	addi	r5,sp,354
  8379f8:	2885883a 	add	r2,r5,r2
  8379fc:	10800007 	ldb	r2,0(r2)
  837a00:	10004b26 	beq	r2,zero,837b30 <__ssvfscanf_r+0xa00>
  837a04:	98800117 	ldw	r2,4(r19)
  837a08:	21400044 	addi	r5,r4,1
  837a0c:	99400015 	stw	r5,0(r19)
  837a10:	10bfffc4 	addi	r2,r2,-1
  837a14:	98800115 	stw	r2,4(r19)
  837a18:	20800003 	ldbu	r2,0(r4)
  837a1c:	1f000044 	addi	fp,r3,1
  837a20:	18800005 	stb	r2,0(r3)
  837a24:	1d400726 	beq	r3,r21,837a44 <__ssvfscanf_r+0x914>
  837a28:	98800117 	ldw	r2,4(r19)
  837a2c:	00bfed16 	blt	zero,r2,8379e4 <__alt_mem_epcs_flash_controller_0+0xff82e9e4>
  837a30:	980b883a 	mov	r5,r19
  837a34:	b809883a 	mov	r4,r23
  837a38:	08429480 	call	842948 <__ssrefill_r>
  837a3c:	103fe926 	beq	r2,zero,8379e4 <__alt_mem_epcs_flash_controller_0+0xff82e9e4>
  837a40:	87001526 	beq	r16,fp,837a98 <__ssvfscanf_r+0x968>
  837a44:	e421c83a 	sub	r16,fp,r16
  837a48:	803dfa26 	beq	r16,zero,837234 <__alt_mem_epcs_flash_controller_0+0xff82e234>
  837a4c:	d880a017 	ldw	r2,640(sp)
  837a50:	e0000005 	stb	zero,0(fp)
  837a54:	dc409c15 	stw	r17,624(sp)
  837a58:	10800044 	addi	r2,r2,1
  837a5c:	d880a015 	stw	r2,640(sp)
  837a60:	9425883a 	add	r18,r18,r16
  837a64:	a00d883a 	mov	r6,r20
  837a68:	003dee06 	br	837224 <__alt_mem_epcs_flash_controller_0+0xff82e224>
  837a6c:	013fff84 	movi	r4,-2
  837a70:	1103ed1e 	bne	r2,r4,838a28 <__ssvfscanf_r+0x18f8>
  837a74:	8821883a 	mov	r16,r17
  837a78:	98800117 	ldw	r2,4(r19)
  837a7c:	00834116 	blt	zero,r2,838784 <__ssvfscanf_r+0x1654>
  837a80:	980b883a 	mov	r5,r19
  837a84:	b809883a 	mov	r4,r23
  837a88:	08429480 	call	842948 <__ssrefill_r>
  837a8c:	10033d26 	beq	r2,zero,838784 <__ssvfscanf_r+0x1654>
  837a90:	dc409f17 	ldw	r17,636(sp)
  837a94:	80034426 	beq	r16,zero,8387a8 <__ssvfscanf_r+0x1678>
  837a98:	d900a017 	ldw	r4,640(sp)
  837a9c:	203e8026 	beq	r4,zero,8374a0 <__alt_mem_epcs_flash_controller_0+0xff82e4a0>
  837aa0:	9880030b 	ldhu	r2,12(r19)
  837aa4:	1080100c 	andi	r2,r2,64
  837aa8:	103e7d1e 	bne	r2,zero,8374a0 <__alt_mem_epcs_flash_controller_0+0xff82e4a0>
  837aac:	2005883a 	mov	r2,r4
  837ab0:	003e7c06 	br	8374a4 <__alt_mem_epcs_flash_controller_0+0xff82e4a4>
  837ab4:	e03f951e 	bne	fp,zero,83790c <__alt_mem_epcs_flash_controller_0+0xff82e90c>
  837ab8:	003fb806 	br	83799c <__alt_mem_epcs_flash_controller_0+0xff82e99c>
  837abc:	d8809c17 	ldw	r2,624(sp)
  837ac0:	15000017 	ldw	r20,0(r2)
  837ac4:	10800104 	addi	r2,r2,4
  837ac8:	d8809c15 	stw	r2,624(sp)
  837acc:	003f8e06 	br	837908 <__alt_mem_epcs_flash_controller_0+0xff82e908>
  837ad0:	980b883a 	mov	r5,r19
  837ad4:	b809883a 	mov	r4,r23
  837ad8:	08429480 	call	842948 <__ssrefill_r>
  837adc:	103f3626 	beq	r2,zero,8377b8 <__alt_mem_epcs_flash_controller_0+0xff82e7b8>
  837ae0:	003fed06 	br	837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  837ae4:	013fff84 	movi	r4,-2
  837ae8:	1100071e 	bne	r2,r4,837b08 <__ssvfscanf_r+0x9d8>
  837aec:	98800117 	ldw	r2,4(r19)
  837af0:	8023883a 	mov	r17,r16
  837af4:	00bf8516 	blt	zero,r2,83790c <__alt_mem_epcs_flash_controller_0+0xff82e90c>
  837af8:	003fa306 	br	837988 <__alt_mem_epcs_flash_controller_0+0xff82e988>
  837afc:	9425883a 	add	r18,r18,r16
  837b00:	e73fffc4 	addi	fp,fp,-1
  837b04:	003f9d06 	br	83797c <__alt_mem_epcs_flash_controller_0+0xff82e97c>
  837b08:	d8c09f17 	ldw	r3,636(sp)
  837b0c:	9425883a 	add	r18,r18,r16
  837b10:	e73fffc4 	addi	fp,fp,-1
  837b14:	183f9826 	beq	r3,zero,837978 <__alt_mem_epcs_flash_controller_0+0xff82e978>
  837b18:	003f9806 	br	83797c <__alt_mem_epcs_flash_controller_0+0xff82e97c>
  837b1c:	8023883a 	mov	r17,r16
  837b20:	8821883a 	mov	r16,r17
  837b24:	003fce06 	br	837a60 <__alt_mem_epcs_flash_controller_0+0xff82ea60>
  837b28:	803f3b1e 	bne	r16,zero,837818 <__alt_mem_epcs_flash_controller_0+0xff82e818>
  837b2c:	003fda06 	br	837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  837b30:	1839883a 	mov	fp,r3
  837b34:	003fc306 	br	837a44 <__alt_mem_epcs_flash_controller_0+0xff82ea44>
  837b38:	803fc91e 	bne	r16,zero,837a60 <__alt_mem_epcs_flash_controller_0+0xff82ea60>
  837b3c:	003dbd06 	br	837234 <__alt_mem_epcs_flash_controller_0+0xff82e234>
  837b40:	d8809c17 	ldw	r2,624(sp)
  837b44:	dcc00015 	stw	r19,0(sp)
  837b48:	b809883a 	mov	r4,r23
  837b4c:	11400017 	ldw	r5,0(r2)
  837b50:	e00f883a 	mov	r7,fp
  837b54:	01800044 	movi	r6,1
  837b58:	08429b80 	call	8429b8 <_sfread_r>
  837b5c:	d9009c17 	ldw	r4,624(sp)
  837b60:	20c00104 	addi	r3,r4,4
  837b64:	103fcc26 	beq	r2,zero,837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  837b68:	d940a017 	ldw	r5,640(sp)
  837b6c:	dd009d17 	ldw	r20,628(sp)
  837b70:	90a5883a 	add	r18,r18,r2
  837b74:	29400044 	addi	r5,r5,1
  837b78:	d940a015 	stw	r5,640(sp)
  837b7c:	d8c09c15 	stw	r3,624(sp)
  837b80:	a00d883a 	mov	r6,r20
  837b84:	003da706 	br	837224 <__alt_mem_epcs_flash_controller_0+0xff82e224>
  837b88:	980b883a 	mov	r5,r19
  837b8c:	b809883a 	mov	r4,r23
  837b90:	08429480 	call	842948 <__ssrefill_r>
  837b94:	103e3626 	beq	r2,zero,837470 <__alt_mem_epcs_flash_controller_0+0xff82e470>
  837b98:	003fbf06 	br	837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  837b9c:	98800117 	ldw	r2,4(r19)
  837ba0:	88e2b03a 	or	r17,r17,r3
  837ba4:	0080210e 	bge	zero,r2,837c2c <__ssvfscanf_r+0xafc>
  837ba8:	01402134 	movhi	r5,132
  837bac:	2941e904 	addi	r5,r5,1956
  837bb0:	00800284 	movi	r2,10
  837bb4:	d940a115 	stw	r5,644(sp)
  837bb8:	d8809e15 	stw	r2,632(sp)
  837bbc:	050000c4 	movi	r20,3
  837bc0:	003e6906 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  837bc4:	a1400083 	ldbu	r5,2(r20)
  837bc8:	8c400094 	ori	r17,r17,2
  837bcc:	a5000084 	addi	r20,r20,2
  837bd0:	2d403fcc 	andi	r21,r5,255
  837bd4:	003da106 	br	83725c <__alt_mem_epcs_flash_controller_0+0xff82e25c>
  837bd8:	8880004c 	andi	r2,r17,1
  837bdc:	10000c1e 	bne	r2,zero,837c10 <__ssvfscanf_r+0xae0>
  837be0:	8c40008c 	andi	r17,r17,2
  837be4:	88000a26 	beq	r17,zero,837c10 <__ssvfscanf_r+0xae0>
  837be8:	d8c09c17 	ldw	r3,624(sp)
  837bec:	d9009c17 	ldw	r4,624(sp)
  837bf0:	dd009d17 	ldw	r20,628(sp)
  837bf4:	18800017 	ldw	r2,0(r3)
  837bf8:	9007d7fa 	srai	r3,r18,31
  837bfc:	21000104 	addi	r4,r4,4
  837c00:	14800015 	stw	r18,0(r2)
  837c04:	10c00115 	stw	r3,4(r2)
  837c08:	d9009c15 	stw	r4,624(sp)
  837c0c:	003d8406 	br	837220 <__alt_mem_epcs_flash_controller_0+0xff82e220>
  837c10:	d9409c17 	ldw	r5,624(sp)
  837c14:	dd009d17 	ldw	r20,628(sp)
  837c18:	28800017 	ldw	r2,0(r5)
  837c1c:	29400104 	addi	r5,r5,4
  837c20:	d9409c15 	stw	r5,624(sp)
  837c24:	14800015 	stw	r18,0(r2)
  837c28:	003d7d06 	br	837220 <__alt_mem_epcs_flash_controller_0+0xff82e220>
  837c2c:	980b883a 	mov	r5,r19
  837c30:	b809883a 	mov	r4,r23
  837c34:	08429480 	call	842948 <__ssrefill_r>
  837c38:	103f971e 	bne	r2,zero,837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  837c3c:	b4000017 	ldw	r16,0(r22)
  837c40:	003ed206 	br	83778c <__alt_mem_epcs_flash_controller_0+0xff82e78c>
  837c44:	980b883a 	mov	r5,r19
  837c48:	b809883a 	mov	r4,r23
  837c4c:	08429480 	call	842948 <__ssrefill_r>
  837c50:	103f911e 	bne	r2,zero,837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  837c54:	01002134 	movhi	r4,132
  837c58:	21034704 	addi	r4,r4,3356
  837c5c:	01400404 	movi	r5,16
  837c60:	b4000017 	ldw	r16,0(r22)
  837c64:	d900a115 	stw	r4,644(sp)
  837c68:	d9409e15 	stw	r5,632(sp)
  837c6c:	050000c4 	movi	r20,3
  837c70:	003e3d06 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  837c74:	980b883a 	mov	r5,r19
  837c78:	b809883a 	mov	r4,r23
  837c7c:	08429480 	call	842948 <__ssrefill_r>
  837c80:	103f851e 	bne	r2,zero,837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  837c84:	b4000017 	ldw	r16,0(r22)
  837c88:	05000084 	movi	r20,2
  837c8c:	003e3606 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  837c90:	980b883a 	mov	r5,r19
  837c94:	b809883a 	mov	r4,r23
  837c98:	08429480 	call	842948 <__ssrefill_r>
  837c9c:	103eea26 	beq	r2,zero,837848 <__alt_mem_epcs_flash_controller_0+0xff82e848>
  837ca0:	003f7d06 	br	837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  837ca4:	980b883a 	mov	r5,r19
  837ca8:	b809883a 	mov	r4,r23
  837cac:	08429480 	call	842948 <__ssrefill_r>
  837cb0:	103f791e 	bne	r2,zero,837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  837cb4:	b4000017 	ldw	r16,0(r22)
  837cb8:	05000104 	movi	r20,4
  837cbc:	003e2a06 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  837cc0:	980b883a 	mov	r5,r19
  837cc4:	b809883a 	mov	r4,r23
  837cc8:	08429480 	call	842948 <__ssrefill_r>
  837ccc:	103f721e 	bne	r2,zero,837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  837cd0:	b4000017 	ldw	r16,0(r22)
  837cd4:	003e8c06 	br	837708 <__alt_mem_epcs_flash_controller_0+0xff82e708>
  837cd8:	980b883a 	mov	r5,r19
  837cdc:	b809883a 	mov	r4,r23
  837ce0:	08429480 	call	842948 <__ssrefill_r>
  837ce4:	103f6c1e 	bne	r2,zero,837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  837ce8:	00802134 	movhi	r2,132
  837cec:	10834704 	addi	r2,r2,3356
  837cf0:	00c00284 	movi	r3,10
  837cf4:	b4000017 	ldw	r16,0(r22)
  837cf8:	d880a115 	stw	r2,644(sp)
  837cfc:	d8c09e15 	stw	r3,632(sp)
  837d00:	050000c4 	movi	r20,3
  837d04:	003e1806 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  837d08:	980b883a 	mov	r5,r19
  837d0c:	b809883a 	mov	r4,r23
  837d10:	08429480 	call	842948 <__ssrefill_r>
  837d14:	103f601e 	bne	r2,zero,837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  837d18:	00802134 	movhi	r2,132
  837d1c:	10834704 	addi	r2,r2,3356
  837d20:	00c00204 	movi	r3,8
  837d24:	b4000017 	ldw	r16,0(r22)
  837d28:	d880a115 	stw	r2,644(sp)
  837d2c:	d8c09e15 	stw	r3,632(sp)
  837d30:	050000c4 	movi	r20,3
  837d34:	003e0c06 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  837d38:	980b883a 	mov	r5,r19
  837d3c:	b809883a 	mov	r4,r23
  837d40:	08429480 	call	842948 <__ssrefill_r>
  837d44:	103f541e 	bne	r2,zero,837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  837d48:	00802134 	movhi	r2,132
  837d4c:	1081e904 	addi	r2,r2,1956
  837d50:	b4000017 	ldw	r16,0(r22)
  837d54:	d880a115 	stw	r2,644(sp)
  837d58:	d8009e15 	stw	zero,632(sp)
  837d5c:	050000c4 	movi	r20,3
  837d60:	003e0106 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  837d64:	980b883a 	mov	r5,r19
  837d68:	b809883a 	mov	r4,r23
  837d6c:	08429480 	call	842948 <__ssrefill_r>
  837d70:	103f491e 	bne	r2,zero,837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  837d74:	00802134 	movhi	r2,132
  837d78:	10834704 	addi	r2,r2,3356
  837d7c:	00c00404 	movi	r3,16
  837d80:	b4000017 	ldw	r16,0(r22)
  837d84:	d880a115 	stw	r2,644(sp)
  837d88:	d8c09e15 	stw	r3,632(sp)
  837d8c:	050000c4 	movi	r20,3
  837d90:	003df506 	br	837568 <__alt_mem_epcs_flash_controller_0+0xff82e568>
  837d94:	014000c4 	movi	r5,3
  837d98:	a1416726 	beq	r20,r5,838338 <__ssvfscanf_r+0x1208>
  837d9c:	01000104 	movi	r4,4
  837da0:	a101491e 	bne	r20,r4,8382c8 <__ssvfscanf_r+0x1198>
  837da4:	b809883a 	mov	r4,r23
  837da8:	083d2ac0 	call	83d2ac <_localeconv_r>
  837dac:	10800017 	ldw	r2,0(r2)
  837db0:	e0ffffc4 	addi	r3,fp,-1
  837db4:	d880a315 	stw	r2,652(sp)
  837db8:	00805704 	movi	r2,348
  837dbc:	10c21e2e 	bgeu	r2,r3,838638 <__ssvfscanf_r+0x1508>
  837dc0:	e73fa8c4 	addi	fp,fp,-349
  837dc4:	df00a215 	stw	fp,648(sp)
  837dc8:	07005744 	movi	fp,349
  837dcc:	8d01e014 	ori	r20,r17,1920
  837dd0:	0023883a 	mov	r17,zero
  837dd4:	dc000104 	addi	r16,sp,4
  837dd8:	002b883a 	mov	r21,zero
  837ddc:	8805883a 	mov	r2,r17
  837de0:	0007883a 	mov	r3,zero
  837de4:	8023883a 	mov	r17,r16
  837de8:	b80d883a 	mov	r6,r23
  837dec:	e021883a 	mov	r16,fp
  837df0:	a82f883a 	mov	r23,r21
  837df4:	d800a515 	stw	zero,660(sp)
  837df8:	d800a415 	stw	zero,656(sp)
  837dfc:	d8009f15 	stw	zero,636(sp)
  837e00:	01c01384 	movi	r7,78
  837e04:	182b883a 	mov	r21,r3
  837e08:	1039883a 	mov	fp,r2
  837e0c:	99000017 	ldw	r4,0(r19)
  837e10:	21400003 	ldbu	r5,0(r4)
  837e14:	28bff544 	addi	r2,r5,-43
  837e18:	10803fcc 	andi	r2,r2,255
  837e1c:	38810e36 	bltu	r7,r2,838258 <__ssvfscanf_r+0x1128>
  837e20:	100490ba 	slli	r2,r2,2
  837e24:	00c020f4 	movhi	r3,131
  837e28:	18df8e04 	addi	r3,r3,32312
  837e2c:	10c5883a 	add	r2,r2,r3
  837e30:	10800017 	ldw	r2,0(r2)
  837e34:	1000683a 	jmp	r2
  837e38:	0083812c 	andhi	r2,zero,3588
  837e3c:	00838258 	cmpnei	r2,zero,3593
  837e40:	0083812c 	andhi	r2,zero,3588
  837e44:	00838258 	cmpnei	r2,zero,3593
  837e48:	00838258 	cmpnei	r2,zero,3593
  837e4c:	00838100 	call	83810 <OSCtxSw_SWITCH_PC+0x837d0>
  837e50:	00837f74 	movhi	r2,3581
  837e54:	00837f74 	movhi	r2,3581
  837e58:	00837f74 	movhi	r2,3581
  837e5c:	00837f74 	movhi	r2,3581
  837e60:	00837f74 	movhi	r2,3581
  837e64:	00837f74 	movhi	r2,3581
  837e68:	00837f74 	movhi	r2,3581
  837e6c:	00837f74 	movhi	r2,3581
  837e70:	00837f74 	movhi	r2,3581
  837e74:	00838258 	cmpnei	r2,zero,3593
  837e78:	00838258 	cmpnei	r2,zero,3593
  837e7c:	00838258 	cmpnei	r2,zero,3593
  837e80:	00838258 	cmpnei	r2,zero,3593
  837e84:	00838258 	cmpnei	r2,zero,3593
  837e88:	00838258 	cmpnei	r2,zero,3593
  837e8c:	00838258 	cmpnei	r2,zero,3593
  837e90:	00838248 	cmpgei	r2,zero,3593
  837e94:	00838258 	cmpnei	r2,zero,3593
  837e98:	00838258 	cmpnei	r2,zero,3593
  837e9c:	00838258 	cmpnei	r2,zero,3593
  837ea0:	00838204 	movi	r2,3592
  837ea4:	008381e8 	cmpgeui	r2,zero,3591
  837ea8:	00838258 	cmpnei	r2,zero,3593
  837eac:	00838258 	cmpnei	r2,zero,3593
  837eb0:	008381b0 	cmpltui	r2,zero,3590
  837eb4:	00838258 	cmpnei	r2,zero,3593
  837eb8:	00838258 	cmpnei	r2,zero,3593
  837ebc:	00838258 	cmpnei	r2,zero,3593
  837ec0:	00838258 	cmpnei	r2,zero,3593
  837ec4:	00838178 	rdprs	r2,zero,3589
  837ec8:	00838258 	cmpnei	r2,zero,3593
  837ecc:	00838258 	cmpnei	r2,zero,3593
  837ed0:	00838258 	cmpnei	r2,zero,3593
  837ed4:	00838258 	cmpnei	r2,zero,3593
  837ed8:	00838258 	cmpnei	r2,zero,3593
  837edc:	0083815c 	xori	r2,zero,3589
  837ee0:	00838258 	cmpnei	r2,zero,3593
  837ee4:	00838258 	cmpnei	r2,zero,3593
  837ee8:	00838258 	cmpnei	r2,zero,3593
  837eec:	00838258 	cmpnei	r2,zero,3593
  837ef0:	00838140 	call	83814 <OSCtxSw_SWITCH_PC+0x837d4>
  837ef4:	00838258 	cmpnei	r2,zero,3593
  837ef8:	00838258 	cmpnei	r2,zero,3593
  837efc:	00838258 	cmpnei	r2,zero,3593
  837f00:	00838258 	cmpnei	r2,zero,3593
  837f04:	00838258 	cmpnei	r2,zero,3593
  837f08:	00838258 	cmpnei	r2,zero,3593
  837f0c:	00838258 	cmpnei	r2,zero,3593
  837f10:	00838248 	cmpgei	r2,zero,3593
  837f14:	00838258 	cmpnei	r2,zero,3593
  837f18:	00838258 	cmpnei	r2,zero,3593
  837f1c:	00838258 	cmpnei	r2,zero,3593
  837f20:	00838204 	movi	r2,3592
  837f24:	008381e8 	cmpgeui	r2,zero,3591
  837f28:	00838258 	cmpnei	r2,zero,3593
  837f2c:	00838258 	cmpnei	r2,zero,3593
  837f30:	008381b0 	cmpltui	r2,zero,3590
  837f34:	00838258 	cmpnei	r2,zero,3593
  837f38:	00838258 	cmpnei	r2,zero,3593
  837f3c:	00838258 	cmpnei	r2,zero,3593
  837f40:	00838258 	cmpnei	r2,zero,3593
  837f44:	00838178 	rdprs	r2,zero,3589
  837f48:	00838258 	cmpnei	r2,zero,3593
  837f4c:	00838258 	cmpnei	r2,zero,3593
  837f50:	00838258 	cmpnei	r2,zero,3593
  837f54:	00838258 	cmpnei	r2,zero,3593
  837f58:	00838258 	cmpnei	r2,zero,3593
  837f5c:	0083815c 	xori	r2,zero,3589
  837f60:	00838258 	cmpnei	r2,zero,3593
  837f64:	00838258 	cmpnei	r2,zero,3593
  837f68:	00838258 	cmpnei	r2,zero,3593
  837f6c:	00838258 	cmpnei	r2,zero,3593
  837f70:	00838140 	call	83814 <OSCtxSw_SWITCH_PC+0x837d4>
  837f74:	a8803fcc 	andi	r2,r21,255
  837f78:	1080201c 	xori	r2,r2,128
  837f7c:	10bfe004 	addi	r2,r2,-128
  837f80:	b885883a 	add	r2,r23,r2
  837f84:	10000d1e 	bne	r2,zero,837fbc <__ssvfscanf_r+0xe8c>
  837f88:	00bf9fc4 	movi	r2,-385
  837f8c:	a0a8703a 	and	r20,r20,r2
  837f90:	89400005 	stb	r5,0(r17)
  837f94:	8c400044 	addi	r17,r17,1
  837f98:	98800117 	ldw	r2,4(r19)
  837f9c:	843fffc4 	addi	r16,r16,-1
  837fa0:	94800044 	addi	r18,r18,1
  837fa4:	10bfffc4 	addi	r2,r2,-1
  837fa8:	98800115 	stw	r2,4(r19)
  837fac:	0080b40e 	bge	zero,r2,838280 <__ssvfscanf_r+0x1150>
  837fb0:	21000044 	addi	r4,r4,1
  837fb4:	99000015 	stw	r4,0(r19)
  837fb8:	803f941e 	bne	r16,zero,837e0c <__alt_mem_epcs_flash_controller_0+0xff82ee0c>
  837fbc:	8821883a 	mov	r16,r17
  837fc0:	a807883a 	mov	r3,r21
  837fc4:	e023883a 	mov	r17,fp
  837fc8:	b82b883a 	mov	r21,r23
  837fcc:	302f883a 	mov	r23,r6
  837fd0:	e001961e 	bne	fp,zero,83862c <__ssvfscanf_r+0x14fc>
  837fd4:	ab3fffc4 	addi	r12,r21,-1
  837fd8:	00800044 	movi	r2,1
  837fdc:	1302a22e 	bgeu	r2,r12,838a68 <__ssvfscanf_r+0x1938>
  837fe0:	18803fcc 	andi	r2,r3,255
  837fe4:	1080201c 	xori	r2,r2,128
  837fe8:	10bfe004 	addi	r2,r2,-128
  837fec:	113fffc4 	addi	r4,r2,-1
  837ff0:	01400184 	movi	r5,6
  837ff4:	29001136 	bltu	r5,r4,83803c <__ssvfscanf_r+0xf0c>
  837ff8:	01000084 	movi	r4,2
  837ffc:	2082770e 	bge	r4,r2,8389dc <__ssvfscanf_r+0x18ac>
  838000:	054000c4 	movi	r21,3
  838004:	1839883a 	mov	fp,r3
  838008:	15400c26 	beq	r2,r21,83803c <__ssvfscanf_r+0xf0c>
  83800c:	9425c83a 	sub	r18,r18,r16
  838010:	843fffc4 	addi	r16,r16,-1
  838014:	81400007 	ldb	r5,0(r16)
  838018:	980d883a 	mov	r6,r19
  83801c:	b809883a 	mov	r4,r23
  838020:	08428400 	call	842840 <_sungetc_r>
  838024:	e0bfffc4 	addi	r2,fp,-1
  838028:	10c03fcc 	andi	r3,r2,255
  83802c:	8493883a 	add	r9,r16,r18
  838030:	1039883a 	mov	fp,r2
  838034:	a8fff636 	bltu	r21,r3,838010 <__alt_mem_epcs_flash_controller_0+0xff82f010>
  838038:	4825883a 	mov	r18,r9
  83803c:	a080400c 	andi	r2,r20,256
  838040:	10001426 	beq	r2,zero,838094 <__ssvfscanf_r+0xf64>
  838044:	a081000c 	andi	r2,r20,1024
  838048:	10027b1e 	bne	r2,zero,838a38 <__ssvfscanf_r+0x1908>
  83804c:	817fffc7 	ldb	r5,-1(r16)
  838050:	00801944 	movi	r2,101
  838054:	873fffc4 	addi	fp,r16,-1
  838058:	957fffc4 	addi	r21,r18,-1
  83805c:	28800826 	beq	r5,r2,838080 <__ssvfscanf_r+0xf50>
  838060:	00801144 	movi	r2,69
  838064:	28800626 	beq	r5,r2,838080 <__ssvfscanf_r+0xf50>
  838068:	980d883a 	mov	r6,r19
  83806c:	b809883a 	mov	r4,r23
  838070:	08428400 	call	842840 <_sungetc_r>
  838074:	817fff87 	ldb	r5,-2(r16)
  838078:	873fff84 	addi	fp,r16,-2
  83807c:	957fff84 	addi	r21,r18,-2
  838080:	980d883a 	mov	r6,r19
  838084:	b809883a 	mov	r4,r23
  838088:	08428400 	call	842840 <_sungetc_r>
  83808c:	a825883a 	mov	r18,r21
  838090:	e021883a 	mov	r16,fp
  838094:	a080040c 	andi	r2,r20,16
  838098:	103e451e 	bne	r2,zero,8379b0 <__alt_mem_epcs_flash_controller_0+0xff82e9b0>
  83809c:	80000005 	stb	zero,0(r16)
  8380a0:	a081800c 	andi	r2,r20,1536
  8380a4:	01010004 	movi	r4,1024
  8380a8:	1101ea26 	beq	r2,r4,838854 <__ssvfscanf_r+0x1724>
  8380ac:	d8c0a417 	ldw	r3,656(sp)
  8380b0:	1801f41e 	bne	r3,zero,838884 <__ssvfscanf_r+0x1754>
  8380b4:	000d883a 	mov	r6,zero
  8380b8:	d9400104 	addi	r5,sp,4
  8380bc:	b809883a 	mov	r4,r23
  8380c0:	083f0a80 	call	83f0a8 <_strtod_r>
  8380c4:	1021883a 	mov	r16,r2
  8380c8:	a080004c 	andi	r2,r20,1
  8380cc:	1001b926 	beq	r2,zero,8387b4 <__ssvfscanf_r+0x1684>
  8380d0:	d9009c17 	ldw	r4,624(sp)
  8380d4:	20800017 	ldw	r2,0(r4)
  8380d8:	21000104 	addi	r4,r4,4
  8380dc:	d9009c15 	stw	r4,624(sp)
  8380e0:	14000015 	stw	r16,0(r2)
  8380e4:	10c00115 	stw	r3,4(r2)
  8380e8:	d8c0a017 	ldw	r3,640(sp)
  8380ec:	dd009d17 	ldw	r20,628(sp)
  8380f0:	18c00044 	addi	r3,r3,1
  8380f4:	d8c0a015 	stw	r3,640(sp)
  8380f8:	a00d883a 	mov	r6,r20
  8380fc:	003c4906 	br	837224 <__alt_mem_epcs_flash_controller_0+0xff82e224>
  838100:	a080400c 	andi	r2,r20,256
  838104:	103f9b26 	beq	r2,zero,837f74 <__alt_mem_epcs_flash_controller_0+0xff82ef74>
  838108:	d8c0a217 	ldw	r3,648(sp)
  83810c:	00bfdfc4 	movi	r2,-129
  838110:	a0a8703a 	and	r20,r20,r2
  838114:	e7000044 	addi	fp,fp,1
  838118:	183f9f26 	beq	r3,zero,837f98 <__alt_mem_epcs_flash_controller_0+0xff82ef98>
  83811c:	18ffffc4 	addi	r3,r3,-1
  838120:	d8c0a215 	stw	r3,648(sp)
  838124:	84000044 	addi	r16,r16,1
  838128:	003f9b06 	br	837f98 <__alt_mem_epcs_flash_controller_0+0xff82ef98>
  83812c:	a080200c 	andi	r2,r20,128
  838130:	103fa226 	beq	r2,zero,837fbc <__alt_mem_epcs_flash_controller_0+0xff82efbc>
  838134:	00bfdfc4 	movi	r2,-129
  838138:	a0a8703a 	and	r20,r20,r2
  83813c:	003f9406 	br	837f90 <__alt_mem_epcs_flash_controller_0+0xff82ef90>
  838140:	a8803fcc 	andi	r2,r21,255
  838144:	1080201c 	xori	r2,r2,128
  838148:	10bfe004 	addi	r2,r2,-128
  83814c:	00c001c4 	movi	r3,7
  838150:	10ff9a1e 	bne	r2,r3,837fbc <__alt_mem_epcs_flash_controller_0+0xff82efbc>
  838154:	05400204 	movi	r21,8
  838158:	003f8d06 	br	837f90 <__alt_mem_epcs_flash_controller_0+0xff82ef90>
  83815c:	a8803fcc 	andi	r2,r21,255
  838160:	1080201c 	xori	r2,r2,128
  838164:	10bfe004 	addi	r2,r2,-128
  838168:	02000184 	movi	r8,6
  83816c:	123f931e 	bne	r2,r8,837fbc <__alt_mem_epcs_flash_controller_0+0xff82efbc>
  838170:	054001c4 	movi	r21,7
  838174:	003f8606 	br	837f90 <__alt_mem_epcs_flash_controller_0+0xff82ef90>
  838178:	b8004f1e 	bne	r23,zero,8382b8 <__ssvfscanf_r+0x1188>
  83817c:	e000031e 	bne	fp,zero,83818c <__ssvfscanf_r+0x105c>
  838180:	a081c00c 	andi	r2,r20,1792
  838184:	0201c004 	movi	r8,1792
  838188:	1201a226 	beq	r2,r8,838814 <__ssvfscanf_r+0x16e4>
  83818c:	a8803fcc 	andi	r2,r21,255
  838190:	1080201c 	xori	r2,r2,128
  838194:	10bfe004 	addi	r2,r2,-128
  838198:	02000044 	movi	r8,1
  83819c:	12000226 	beq	r2,r8,8381a8 <__ssvfscanf_r+0x1078>
  8381a0:	02000104 	movi	r8,4
  8381a4:	123f851e 	bne	r2,r8,837fbc <__alt_mem_epcs_flash_controller_0+0xff82efbc>
  8381a8:	ad400044 	addi	r21,r21,1
  8381ac:	003f7806 	br	837f90 <__alt_mem_epcs_flash_controller_0+0xff82ef90>
  8381b0:	a8803fcc 	andi	r2,r21,255
  8381b4:	1080201c 	xori	r2,r2,128
  8381b8:	10bfe004 	addi	r2,r2,-128
  8381bc:	1000391e 	bne	r2,zero,8382a4 <__ssvfscanf_r+0x1174>
  8381c0:	e001151e 	bne	fp,zero,838618 <__ssvfscanf_r+0x14e8>
  8381c4:	a081c00c 	andi	r2,r20,1792
  8381c8:	0201c004 	movi	r8,1792
  8381cc:	12019b26 	beq	r2,r8,83883c <__ssvfscanf_r+0x170c>
  8381d0:	8821883a 	mov	r16,r17
  8381d4:	a807883a 	mov	r3,r21
  8381d8:	e023883a 	mov	r17,fp
  8381dc:	b82b883a 	mov	r21,r23
  8381e0:	302f883a 	mov	r23,r6
  8381e4:	003f7b06 	br	837fd4 <__alt_mem_epcs_flash_controller_0+0xff82efd4>
  8381e8:	a8803fcc 	andi	r2,r21,255
  8381ec:	1080201c 	xori	r2,r2,128
  8381f0:	10bfe004 	addi	r2,r2,-128
  8381f4:	02000084 	movi	r8,2
  8381f8:	123f701e 	bne	r2,r8,837fbc <__alt_mem_epcs_flash_controller_0+0xff82efbc>
  8381fc:	054000c4 	movi	r21,3
  838200:	003f6306 	br	837f90 <__alt_mem_epcs_flash_controller_0+0xff82ef90>
  838204:	a081400c 	andi	r2,r20,1280
  838208:	00c10004 	movi	r3,1024
  83820c:	10c00326 	beq	r2,r3,83821c <__ssvfscanf_r+0x10ec>
  838210:	a0c4703a 	and	r2,r20,r3
  838214:	103f6926 	beq	r2,zero,837fbc <__alt_mem_epcs_flash_controller_0+0xff82efbc>
  838218:	e03fed26 	beq	fp,zero,8381d0 <__alt_mem_epcs_flash_controller_0+0xff82f1d0>
  83821c:	a080800c 	andi	r2,r20,512
  838220:	1000041e 	bne	r2,zero,838234 <__ssvfscanf_r+0x1104>
  838224:	d8c09f17 	ldw	r3,636(sp)
  838228:	dc40a515 	stw	r17,660(sp)
  83822c:	e0f9c83a 	sub	fp,fp,r3
  838230:	df00a415 	stw	fp,656(sp)
  838234:	00be1fc4 	movi	r2,-1921
  838238:	a0a8703a 	and	r20,r20,r2
  83823c:	a5006014 	ori	r20,r20,384
  838240:	0039883a 	mov	fp,zero
  838244:	003f5206 	br	837f90 <__alt_mem_epcs_flash_controller_0+0xff82ef90>
  838248:	00800044 	movi	r2,1
  83824c:	b8bf5b1e 	bne	r23,r2,837fbc <__alt_mem_epcs_flash_controller_0+0xff82efbc>
  838250:	05c00084 	movi	r23,2
  838254:	003f4e06 	br	837f90 <__alt_mem_epcs_flash_controller_0+0xff82ef90>
  838258:	d8c0a317 	ldw	r3,652(sp)
  83825c:	2a003fcc 	andi	r8,r5,255
  838260:	18800003 	ldbu	r2,0(r3)
  838264:	40bf551e 	bne	r8,r2,837fbc <__alt_mem_epcs_flash_controller_0+0xff82efbc>
  838268:	a080800c 	andi	r2,r20,512
  83826c:	103f5326 	beq	r2,zero,837fbc <__alt_mem_epcs_flash_controller_0+0xff82efbc>
  838270:	00bf5fc4 	movi	r2,-641
  838274:	a0a8703a 	and	r20,r20,r2
  838278:	df009f15 	stw	fp,636(sp)
  83827c:	003f4406 	br	837f90 <__alt_mem_epcs_flash_controller_0+0xff82ef90>
  838280:	3009883a 	mov	r4,r6
  838284:	980b883a 	mov	r5,r19
  838288:	d980a915 	stw	r6,676(sp)
  83828c:	d9c0aa15 	stw	r7,680(sp)
  838290:	08429480 	call	842948 <__ssrefill_r>
  838294:	d980a917 	ldw	r6,676(sp)
  838298:	d9c0aa17 	ldw	r7,680(sp)
  83829c:	103f4626 	beq	r2,zero,837fb8 <__alt_mem_epcs_flash_controller_0+0xff82efb8>
  8382a0:	003f4606 	br	837fbc <__alt_mem_epcs_flash_controller_0+0xff82efbc>
  8382a4:	020000c4 	movi	r8,3
  8382a8:	123fbf26 	beq	r2,r8,8381a8 <__alt_mem_epcs_flash_controller_0+0xff82f1a8>
  8382ac:	02000144 	movi	r8,5
  8382b0:	123fbd26 	beq	r2,r8,8381a8 <__alt_mem_epcs_flash_controller_0+0xff82f1a8>
  8382b4:	003f4106 	br	837fbc <__alt_mem_epcs_flash_controller_0+0xff82efbc>
  8382b8:	00800084 	movi	r2,2
  8382bc:	b8bfb31e 	bne	r23,r2,83818c <__alt_mem_epcs_flash_controller_0+0xff82f18c>
  8382c0:	05c000c4 	movi	r23,3
  8382c4:	003f3206 	br	837f90 <__alt_mem_epcs_flash_controller_0+0xff82ef90>
  8382c8:	e000011e 	bne	fp,zero,8382d0 <__ssvfscanf_r+0x11a0>
  8382cc:	073fffc4 	movi	fp,-1
  8382d0:	8900004c 	andi	r4,r17,1
  8382d4:	20011d1e 	bne	r4,zero,83874c <__ssvfscanf_r+0x161c>
  8382d8:	8c40040c 	andi	r17,r17,16
  8382dc:	8800da26 	beq	r17,zero,838648 <__ssvfscanf_r+0x1518>
  8382e0:	0023883a 	mov	r17,zero
  8382e4:	00000306 	br	8382f4 <__ssvfscanf_r+0x11c4>
  8382e8:	18800003 	ldbu	r2,0(r3)
  8382ec:	8085883a 	add	r2,r16,r2
  8382f0:	10800043 	ldbu	r2,1(r2)
  8382f4:	1080020c 	andi	r2,r2,8
  8382f8:	1000fc1e 	bne	r2,zero,8386ec <__ssvfscanf_r+0x15bc>
  8382fc:	98800117 	ldw	r2,4(r19)
  838300:	18c00044 	addi	r3,r3,1
  838304:	8c400044 	addi	r17,r17,1
  838308:	10bfffc4 	addi	r2,r2,-1
  83830c:	98800115 	stw	r2,4(r19)
  838310:	98c00015 	stw	r3,0(r19)
  838314:	8f00f526 	beq	r17,fp,8386ec <__ssvfscanf_r+0x15bc>
  838318:	00bff316 	blt	zero,r2,8382e8 <__alt_mem_epcs_flash_controller_0+0xff82f2e8>
  83831c:	980b883a 	mov	r5,r19
  838320:	b809883a 	mov	r4,r23
  838324:	08429480 	call	842948 <__ssrefill_r>
  838328:	1000f01e 	bne	r2,zero,8386ec <__ssvfscanf_r+0x15bc>
  83832c:	b4000017 	ldw	r16,0(r22)
  838330:	98c00017 	ldw	r3,0(r19)
  838334:	003fec06 	br	8382e8 <__alt_mem_epcs_flash_controller_0+0xff82f2e8>
  838338:	e0bfffc4 	addi	r2,fp,-1
  83833c:	01405704 	movi	r5,348
  838340:	2880bf2e 	bgeu	r5,r2,838640 <__ssvfscanf_r+0x1510>
  838344:	e1ffa8c4 	addi	r7,fp,-349
  838348:	07005744 	movi	fp,349
  83834c:	8c436014 	ori	r17,r17,3456
  838350:	9013883a 	mov	r9,r18
  838354:	8825883a 	mov	r18,r17
  838358:	dc409e17 	ldw	r17,632(sp)
  83835c:	0029883a 	mov	r20,zero
  838360:	dc000104 	addi	r16,sp,4
  838364:	05401344 	movi	r21,77
  838368:	02c08004 	movi	r11,512
  83836c:	01bf7fc4 	movi	r6,-513
  838370:	023fdfc4 	movi	r8,-129
  838374:	20bff544 	addi	r2,r4,-43
  838378:	10803fcc 	andi	r2,r2,255
  83837c:	a8807236 	bltu	r21,r2,838548 <__ssvfscanf_r+0x1418>
  838380:	100490ba 	slli	r2,r2,2
  838384:	01402134 	movhi	r5,132
  838388:	2960e604 	addi	r5,r5,-31848
  83838c:	1145883a 	add	r2,r2,r5
  838390:	10800017 	ldw	r2,0(r2)
  838394:	1000683a 	jmp	r2
  838398:	008385cc 	andi	r2,zero,3607
  83839c:	00838548 	cmpgei	r2,zero,3605
  8383a0:	008385cc 	andi	r2,zero,3607
  8383a4:	00838548 	cmpgei	r2,zero,3605
  8383a8:	00838548 	cmpgei	r2,zero,3605
  8383ac:	008385a4 	muli	r2,zero,3606
  8383b0:	00838584 	movi	r2,3606
  8383b4:	00838584 	movi	r2,3606
  8383b8:	00838584 	movi	r2,3606
  8383bc:	00838584 	movi	r2,3606
  8383c0:	00838584 	movi	r2,3606
  8383c4:	00838584 	movi	r2,3606
  8383c8:	00838584 	movi	r2,3606
  8383cc:	0083852c 	andhi	r2,zero,3604
  8383d0:	0083852c 	andhi	r2,zero,3604
  8383d4:	00838548 	cmpgei	r2,zero,3605
  8383d8:	00838548 	cmpgei	r2,zero,3605
  8383dc:	00838548 	cmpgei	r2,zero,3605
  8383e0:	00838548 	cmpgei	r2,zero,3605
  8383e4:	00838548 	cmpgei	r2,zero,3605
  8383e8:	00838548 	cmpgei	r2,zero,3605
  8383ec:	00838548 	cmpgei	r2,zero,3605
  8383f0:	00838518 	cmpnei	r2,zero,3604
  8383f4:	00838518 	cmpnei	r2,zero,3604
  8383f8:	00838518 	cmpnei	r2,zero,3604
  8383fc:	00838518 	cmpnei	r2,zero,3604
  838400:	00838518 	cmpnei	r2,zero,3604
  838404:	00838518 	cmpnei	r2,zero,3604
  838408:	00838548 	cmpgei	r2,zero,3605
  83840c:	00838548 	cmpgei	r2,zero,3605
  838410:	00838548 	cmpgei	r2,zero,3605
  838414:	00838548 	cmpgei	r2,zero,3605
  838418:	00838548 	cmpgei	r2,zero,3605
  83841c:	00838548 	cmpgei	r2,zero,3605
  838420:	00838548 	cmpgei	r2,zero,3605
  838424:	00838548 	cmpgei	r2,zero,3605
  838428:	00838548 	cmpgei	r2,zero,3605
  83842c:	00838548 	cmpgei	r2,zero,3605
  838430:	00838548 	cmpgei	r2,zero,3605
  838434:	00838548 	cmpgei	r2,zero,3605
  838438:	00838548 	cmpgei	r2,zero,3605
  83843c:	00838548 	cmpgei	r2,zero,3605
  838440:	00838548 	cmpgei	r2,zero,3605
  838444:	00838548 	cmpgei	r2,zero,3605
  838448:	00838548 	cmpgei	r2,zero,3605
  83844c:	008384d0 	cmplti	r2,zero,3603
  838450:	00838548 	cmpgei	r2,zero,3605
  838454:	00838548 	cmpgei	r2,zero,3605
  838458:	00838548 	cmpgei	r2,zero,3605
  83845c:	00838548 	cmpgei	r2,zero,3605
  838460:	00838548 	cmpgei	r2,zero,3605
  838464:	00838548 	cmpgei	r2,zero,3605
  838468:	00838548 	cmpgei	r2,zero,3605
  83846c:	00838548 	cmpgei	r2,zero,3605
  838470:	00838518 	cmpnei	r2,zero,3604
  838474:	00838518 	cmpnei	r2,zero,3604
  838478:	00838518 	cmpnei	r2,zero,3604
  83847c:	00838518 	cmpnei	r2,zero,3604
  838480:	00838518 	cmpnei	r2,zero,3604
  838484:	00838518 	cmpnei	r2,zero,3604
  838488:	00838548 	cmpgei	r2,zero,3605
  83848c:	00838548 	cmpgei	r2,zero,3605
  838490:	00838548 	cmpgei	r2,zero,3605
  838494:	00838548 	cmpgei	r2,zero,3605
  838498:	00838548 	cmpgei	r2,zero,3605
  83849c:	00838548 	cmpgei	r2,zero,3605
  8384a0:	00838548 	cmpgei	r2,zero,3605
  8384a4:	00838548 	cmpgei	r2,zero,3605
  8384a8:	00838548 	cmpgei	r2,zero,3605
  8384ac:	00838548 	cmpgei	r2,zero,3605
  8384b0:	00838548 	cmpgei	r2,zero,3605
  8384b4:	00838548 	cmpgei	r2,zero,3605
  8384b8:	00838548 	cmpgei	r2,zero,3605
  8384bc:	00838548 	cmpgei	r2,zero,3605
  8384c0:	00838548 	cmpgei	r2,zero,3605
  8384c4:	00838548 	cmpgei	r2,zero,3605
  8384c8:	00838548 	cmpgei	r2,zero,3605
  8384cc:	008384d0 	cmplti	r2,zero,3603
  8384d0:	9081800c 	andi	r2,r18,1536
  8384d4:	12c01c1e 	bne	r2,r11,838548 <__ssvfscanf_r+0x1418>
  8384d8:	91a4703a 	and	r18,r18,r6
  8384dc:	94814014 	ori	r18,r18,1280
  8384e0:	04400404 	movi	r17,16
  8384e4:	81000005 	stb	r4,0(r16)
  8384e8:	84000044 	addi	r16,r16,1
  8384ec:	98800117 	ldw	r2,4(r19)
  8384f0:	10bfffc4 	addi	r2,r2,-1
  8384f4:	98800115 	stw	r2,4(r19)
  8384f8:	0080380e 	bge	zero,r2,8385dc <__ssvfscanf_r+0x14ac>
  8384fc:	18c00044 	addi	r3,r3,1
  838500:	98c00015 	stw	r3,0(r19)
  838504:	e73fffc4 	addi	fp,fp,-1
  838508:	e0000f26 	beq	fp,zero,838548 <__ssvfscanf_r+0x1418>
  83850c:	98c00017 	ldw	r3,0(r19)
  838510:	19000003 	ldbu	r4,0(r3)
  838514:	003f9706 	br	838374 <__alt_mem_epcs_flash_controller_0+0xff82f374>
  838518:	00800284 	movi	r2,10
  83851c:	14400a0e 	bge	r2,r17,838548 <__ssvfscanf_r+0x1418>
  838520:	00bd1fc4 	movi	r2,-2945
  838524:	90a4703a 	and	r18,r18,r2
  838528:	003fee06 	br	8384e4 <__alt_mem_epcs_flash_controller_0+0xff82f4e4>
  83852c:	014021b4 	movhi	r5,134
  838530:	8c63883a 	add	r17,r17,r17
  838534:	29644b84 	addi	r5,r5,-28370
  838538:	2c45883a 	add	r2,r5,r17
  83853c:	1440000f 	ldh	r17,0(r2)
  838540:	00800204 	movi	r2,8
  838544:	147ff616 	blt	r2,r17,838520 <__alt_mem_epcs_flash_controller_0+0xff82f520>
  838548:	dc409e15 	stw	r17,632(sp)
  83854c:	9023883a 	mov	r17,r18
  838550:	8880400c 	andi	r2,r17,256
  838554:	4825883a 	mov	r18,r9
  838558:	10000426 	beq	r2,zero,83856c <__ssvfscanf_r+0x143c>
  83855c:	d8800104 	addi	r2,sp,4
  838560:	1400b036 	bltu	r2,r16,838824 <__ssvfscanf_r+0x16f4>
  838564:	d8c00104 	addi	r3,sp,4
  838568:	1c3b3226 	beq	r3,r16,837234 <__alt_mem_epcs_flash_controller_0+0xff82e234>
  83856c:	8880040c 	andi	r2,r17,16
  838570:	10006226 	beq	r2,zero,8386fc <__ssvfscanf_r+0x15cc>
  838574:	d8800104 	addi	r2,sp,4
  838578:	80a1c83a 	sub	r16,r16,r2
  83857c:	8521883a 	add	r16,r16,r20
  838580:	003ca506 	br	837818 <__alt_mem_epcs_flash_controller_0+0xff82e818>
  838584:	014021b4 	movhi	r5,134
  838588:	8c63883a 	add	r17,r17,r17
  83858c:	29644b84 	addi	r5,r5,-28370
  838590:	2c45883a 	add	r2,r5,r17
  838594:	1440000f 	ldh	r17,0(r2)
  838598:	00bd1fc4 	movi	r2,-2945
  83859c:	90a4703a 	and	r18,r18,r2
  8385a0:	003fd006 	br	8384e4 <__alt_mem_epcs_flash_controller_0+0xff82f4e4>
  8385a4:	9082000c 	andi	r2,r18,2048
  8385a8:	103fce26 	beq	r2,zero,8384e4 <__alt_mem_epcs_flash_controller_0+0xff82f4e4>
  8385ac:	8800021e 	bne	r17,zero,8385b8 <__ssvfscanf_r+0x1488>
  8385b0:	94808014 	ori	r18,r18,512
  8385b4:	04400204 	movi	r17,8
  8385b8:	9081000c 	andi	r2,r18,1024
  8385bc:	10008626 	beq	r2,zero,8387d8 <__ssvfscanf_r+0x16a8>
  8385c0:	00be9fc4 	movi	r2,-1409
  8385c4:	90a4703a 	and	r18,r18,r2
  8385c8:	003fc606 	br	8384e4 <__alt_mem_epcs_flash_controller_0+0xff82f4e4>
  8385cc:	9080200c 	andi	r2,r18,128
  8385d0:	103fdd26 	beq	r2,zero,838548 <__alt_mem_epcs_flash_controller_0+0xff82f548>
  8385d4:	9224703a 	and	r18,r18,r8
  8385d8:	003fc206 	br	8384e4 <__alt_mem_epcs_flash_controller_0+0xff82f4e4>
  8385dc:	980b883a 	mov	r5,r19
  8385e0:	b809883a 	mov	r4,r23
  8385e4:	d980a915 	stw	r6,676(sp)
  8385e8:	d9c0aa15 	stw	r7,680(sp)
  8385ec:	da00a715 	stw	r8,668(sp)
  8385f0:	da40a815 	stw	r9,672(sp)
  8385f4:	dac0a615 	stw	r11,664(sp)
  8385f8:	08429480 	call	842948 <__ssrefill_r>
  8385fc:	d980a917 	ldw	r6,676(sp)
  838600:	d9c0aa17 	ldw	r7,680(sp)
  838604:	da00a717 	ldw	r8,668(sp)
  838608:	da40a817 	ldw	r9,672(sp)
  83860c:	dac0a617 	ldw	r11,664(sp)
  838610:	103fbc26 	beq	r2,zero,838504 <__alt_mem_epcs_flash_controller_0+0xff82f504>
  838614:	003fcc06 	br	838548 <__alt_mem_epcs_flash_controller_0+0xff82f548>
  838618:	8821883a 	mov	r16,r17
  83861c:	a807883a 	mov	r3,r21
  838620:	e023883a 	mov	r17,fp
  838624:	b82b883a 	mov	r21,r23
  838628:	302f883a 	mov	r23,r6
  83862c:	00bfbfc4 	movi	r2,-257
  838630:	a0a8703a 	and	r20,r20,r2
  838634:	003e6706 	br	837fd4 <__alt_mem_epcs_flash_controller_0+0xff82efd4>
  838638:	d800a215 	stw	zero,648(sp)
  83863c:	003de306 	br	837dcc <__alt_mem_epcs_flash_controller_0+0xff82edcc>
  838640:	000f883a 	mov	r7,zero
  838644:	003f4106 	br	83834c <__alt_mem_epcs_flash_controller_0+0xff82f34c>
  838648:	d9409c17 	ldw	r5,624(sp)
  83864c:	e2bfffc4 	addi	r10,fp,-1
  838650:	2c400017 	ldw	r17,0(r5)
  838654:	2c000104 	addi	r16,r5,4
  838658:	8aa9883a 	add	r20,r17,r10
  83865c:	880b883a 	mov	r5,r17
  838660:	00000606 	br	83867c <__ssvfscanf_r+0x154c>
  838664:	98c00017 	ldw	r3,0(r19)
  838668:	b1000017 	ldw	r4,0(r22)
  83866c:	a80b883a 	mov	r5,r21
  838670:	18800003 	ldbu	r2,0(r3)
  838674:	2085883a 	add	r2,r4,r2
  838678:	10800043 	ldbu	r2,1(r2)
  83867c:	1080020c 	andi	r2,r2,8
  838680:	1000621e 	bne	r2,zero,83880c <__ssvfscanf_r+0x16dc>
  838684:	98800117 	ldw	r2,4(r19)
  838688:	19000044 	addi	r4,r3,1
  83868c:	99000015 	stw	r4,0(r19)
  838690:	10bfffc4 	addi	r2,r2,-1
  838694:	98800115 	stw	r2,4(r19)
  838698:	18800003 	ldbu	r2,0(r3)
  83869c:	2d400044 	addi	r21,r5,1
  8386a0:	a839883a 	mov	fp,r21
  8386a4:	28800005 	stb	r2,0(r5)
  8386a8:	2d000626 	beq	r5,r20,8386c4 <__ssvfscanf_r+0x1594>
  8386ac:	98800117 	ldw	r2,4(r19)
  8386b0:	00bfec16 	blt	zero,r2,838664 <__alt_mem_epcs_flash_controller_0+0xff82f664>
  8386b4:	980b883a 	mov	r5,r19
  8386b8:	b809883a 	mov	r4,r23
  8386bc:	08429480 	call	842948 <__ssrefill_r>
  8386c0:	103fe826 	beq	r2,zero,838664 <__alt_mem_epcs_flash_controller_0+0xff82f664>
  8386c4:	d880a017 	ldw	r2,640(sp)
  8386c8:	dd009d17 	ldw	r20,628(sp)
  8386cc:	e463c83a 	sub	r17,fp,r17
  8386d0:	10800044 	addi	r2,r2,1
  8386d4:	e0000005 	stb	zero,0(fp)
  8386d8:	9465883a 	add	r18,r18,r17
  8386dc:	d880a015 	stw	r2,640(sp)
  8386e0:	dc009c15 	stw	r16,624(sp)
  8386e4:	a00d883a 	mov	r6,r20
  8386e8:	003ace06 	br	837224 <__alt_mem_epcs_flash_controller_0+0xff82e224>
  8386ec:	dd009d17 	ldw	r20,628(sp)
  8386f0:	9465883a 	add	r18,r18,r17
  8386f4:	a00d883a 	mov	r6,r20
  8386f8:	003aca06 	br	837224 <__alt_mem_epcs_flash_controller_0+0xff82e224>
  8386fc:	d8c0a117 	ldw	r3,644(sp)
  838700:	d9c09e17 	ldw	r7,632(sp)
  838704:	000d883a 	mov	r6,zero
  838708:	d9400104 	addi	r5,sp,4
  83870c:	b809883a 	mov	r4,r23
  838710:	80000005 	stb	zero,0(r16)
  838714:	183ee83a 	callr	r3
  838718:	88c0080c 	andi	r3,r17,32
  83871c:	1800351e 	bne	r3,zero,8387f4 <__ssvfscanf_r+0x16c4>
  838720:	88c0010c 	andi	r3,r17,4
  838724:	18007026 	beq	r3,zero,8388e8 <__ssvfscanf_r+0x17b8>
  838728:	d9409c17 	ldw	r5,624(sp)
  83872c:	28c00017 	ldw	r3,0(r5)
  838730:	29400104 	addi	r5,r5,4
  838734:	d9409c15 	stw	r5,624(sp)
  838738:	1880000d 	sth	r2,0(r3)
  83873c:	d940a017 	ldw	r5,640(sp)
  838740:	29400044 	addi	r5,r5,1
  838744:	d940a015 	stw	r5,640(sp)
  838748:	003f8a06 	br	838574 <__alt_mem_epcs_flash_controller_0+0xff82f574>
  83874c:	dd409904 	addi	r21,sp,612
  838750:	8c40040c 	andi	r17,r17,16
  838754:	01800204 	movi	r6,8
  838758:	000b883a 	mov	r5,zero
  83875c:	a809883a 	mov	r4,r21
  838760:	08342980 	call	834298 <memset>
  838764:	8800391e 	bne	r17,zero,83884c <__ssvfscanf_r+0x171c>
  838768:	d8c09c17 	ldw	r3,624(sp)
  83876c:	1d000017 	ldw	r20,0(r3)
  838770:	18c00104 	addi	r3,r3,4
  838774:	d8c09c15 	stw	r3,624(sp)
  838778:	000d883a 	mov	r6,zero
  83877c:	3021883a 	mov	r16,r6
  838780:	dc409f15 	stw	r17,636(sp)
  838784:	98800017 	ldw	r2,0(r19)
  838788:	b0c00017 	ldw	r3,0(r22)
  83878c:	10800003 	ldbu	r2,0(r2)
  838790:	1885883a 	add	r2,r3,r2
  838794:	10800043 	ldbu	r2,1(r2)
  838798:	1080020c 	andi	r2,r2,8
  83879c:	1000011e 	bne	r2,zero,8387a4 <__ssvfscanf_r+0x1674>
  8387a0:	e000651e 	bne	fp,zero,838938 <__ssvfscanf_r+0x1808>
  8387a4:	dc409f17 	ldw	r17,636(sp)
  8387a8:	883c811e 	bne	r17,zero,8379b0 <__alt_mem_epcs_flash_controller_0+0xff82e9b0>
  8387ac:	a0000015 	stw	zero,0(r20)
  8387b0:	003c7c06 	br	8379a4 <__alt_mem_epcs_flash_controller_0+0xff82e9a4>
  8387b4:	a2c0008c 	andi	r11,r20,2
  8387b8:	58003c26 	beq	r11,zero,8388ac <__ssvfscanf_r+0x177c>
  8387bc:	d9409c17 	ldw	r5,624(sp)
  8387c0:	28800017 	ldw	r2,0(r5)
  8387c4:	29400104 	addi	r5,r5,4
  8387c8:	d9409c15 	stw	r5,624(sp)
  8387cc:	14000015 	stw	r16,0(r2)
  8387d0:	10c00115 	stw	r3,4(r2)
  8387d4:	003e4406 	br	8380e8 <__alt_mem_epcs_flash_controller_0+0xff82f0e8>
  8387d8:	00bf1fc4 	movi	r2,-897
  8387dc:	90a4703a 	and	r18,r18,r2
  8387e0:	38000226 	beq	r7,zero,8387ec <__ssvfscanf_r+0x16bc>
  8387e4:	39ffffc4 	addi	r7,r7,-1
  8387e8:	e7000044 	addi	fp,fp,1
  8387ec:	a5000044 	addi	r20,r20,1
  8387f0:	003f3e06 	br	8384ec <__alt_mem_epcs_flash_controller_0+0xff82f4ec>
  8387f4:	d9009c17 	ldw	r4,624(sp)
  8387f8:	20c00017 	ldw	r3,0(r4)
  8387fc:	21000104 	addi	r4,r4,4
  838800:	d9009c15 	stw	r4,624(sp)
  838804:	18800015 	stw	r2,0(r3)
  838808:	003fcc06 	br	83873c <__alt_mem_epcs_flash_controller_0+0xff82f73c>
  83880c:	2839883a 	mov	fp,r5
  838810:	003fac06 	br	8386c4 <__alt_mem_epcs_flash_controller_0+0xff82f6c4>
  838814:	00be1fc4 	movi	r2,-1921
  838818:	a0a8703a 	and	r20,r20,r2
  83881c:	05c00044 	movi	r23,1
  838820:	003ddb06 	br	837f90 <__alt_mem_epcs_flash_controller_0+0xff82ef90>
  838824:	817fffc7 	ldb	r5,-1(r16)
  838828:	980d883a 	mov	r6,r19
  83882c:	b809883a 	mov	r4,r23
  838830:	843fffc4 	addi	r16,r16,-1
  838834:	08428400 	call	842840 <_sungetc_r>
  838838:	003f4a06 	br	838564 <__alt_mem_epcs_flash_controller_0+0xff82f564>
  83883c:	00fe1fc4 	movi	r3,-1921
  838840:	a0e8703a 	and	r20,r20,r3
  838844:	05400044 	movi	r21,1
  838848:	003dd106 	br	837f90 <__alt_mem_epcs_flash_controller_0+0xff82ef90>
  83884c:	dd009b04 	addi	r20,sp,620
  838850:	003fc906 	br	838778 <__alt_mem_epcs_flash_controller_0+0xff82f778>
  838854:	d8c09f17 	ldw	r3,636(sp)
  838858:	88e3c83a 	sub	r17,r17,r3
  83885c:	044dc83a 	sub	r6,zero,r17
  838860:	883e1426 	beq	r17,zero,8380b4 <__alt_mem_epcs_flash_controller_0+0xff82f0b4>
  838864:	d88055c4 	addi	r2,sp,343
  838868:	80800136 	bltu	r16,r2,838870 <__ssvfscanf_r+0x1740>
  83886c:	dc005584 	addi	r16,sp,342
  838870:	014021b4 	movhi	r5,134
  838874:	29644a04 	addi	r5,r5,-28376
  838878:	8009883a 	mov	r4,r16
  83887c:	08349840 	call	834984 <sprintf>
  838880:	003e0c06 	br	8380b4 <__alt_mem_epcs_flash_controller_0+0xff82f0b4>
  838884:	d8c0a517 	ldw	r3,660(sp)
  838888:	000d883a 	mov	r6,zero
  83888c:	01c00284 	movi	r7,10
  838890:	19400044 	addi	r5,r3,1
  838894:	b809883a 	mov	r4,r23
  838898:	08407a40 	call	8407a4 <_strtol_r>
  83889c:	d8c0a417 	ldw	r3,656(sp)
  8388a0:	dc00a517 	ldw	r16,660(sp)
  8388a4:	10cdc83a 	sub	r6,r2,r3
  8388a8:	003fee06 	br	838864 <__alt_mem_epcs_flash_controller_0+0xff82f864>
  8388ac:	d8809c17 	ldw	r2,624(sp)
  8388b0:	180b883a 	mov	r5,r3
  8388b4:	8009883a 	mov	r4,r16
  8388b8:	15000017 	ldw	r20,0(r2)
  8388bc:	14400104 	addi	r17,r2,4
  8388c0:	d8c0a615 	stw	r3,664(sp)
  8388c4:	083ee1c0 	call	83ee1c <__fpclassifyd>
  8388c8:	d8c0a617 	ldw	r3,664(sp)
  8388cc:	10007226 	beq	r2,zero,838a98 <__ssvfscanf_r+0x1968>
  8388d0:	8009883a 	mov	r4,r16
  8388d4:	180b883a 	mov	r5,r3
  8388d8:	0831db00 	call	831db0 <__truncdfsf2>
  8388dc:	a0800015 	stw	r2,0(r20)
  8388e0:	dc409c15 	stw	r17,624(sp)
  8388e4:	003e0006 	br	8380e8 <__alt_mem_epcs_flash_controller_0+0xff82f0e8>
  8388e8:	88c0004c 	andi	r3,r17,1
  8388ec:	183fc11e 	bne	r3,zero,8387f4 <__alt_mem_epcs_flash_controller_0+0xff82f7f4>
  8388f0:	8c40008c 	andi	r17,r17,2
  8388f4:	883fbf26 	beq	r17,zero,8387f4 <__alt_mem_epcs_flash_controller_0+0xff82f7f4>
  8388f8:	d940a117 	ldw	r5,644(sp)
  8388fc:	00802134 	movhi	r2,132
  838900:	10834704 	addi	r2,r2,3356
  838904:	d9c09e17 	ldw	r7,632(sp)
  838908:	000d883a 	mov	r6,zero
  83890c:	28806726 	beq	r5,r2,838aac <__ssvfscanf_r+0x197c>
  838910:	d9400104 	addi	r5,sp,4
  838914:	b809883a 	mov	r4,r23
  838918:	0840a180 	call	840a18 <_strtoll_r>
  83891c:	d9409c17 	ldw	r5,624(sp)
  838920:	29000017 	ldw	r4,0(r5)
  838924:	29400104 	addi	r5,r5,4
  838928:	d9409c15 	stw	r5,624(sp)
  83892c:	20800015 	stw	r2,0(r4)
  838930:	20c00115 	stw	r3,4(r4)
  838934:	003f8106 	br	83873c <__alt_mem_epcs_flash_controller_0+0xff82f73c>
  838938:	083d2880 	call	83d288 <__locale_mb_cur_max>
  83893c:	80bc5626 	beq	r16,r2,837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  838940:	98800017 	ldw	r2,0(r19)
  838944:	99000117 	ldw	r4,4(r19)
  838948:	d9400104 	addi	r5,sp,4
  83894c:	12000003 	ldbu	r8,0(r2)
  838950:	213fffc4 	addi	r4,r4,-1
  838954:	10800044 	addi	r2,r2,1
  838958:	99000115 	stw	r4,4(r19)
  83895c:	98800015 	stw	r2,0(r19)
  838960:	84400044 	addi	r17,r16,1
  838964:	dd400015 	stw	r21,0(sp)
  838968:	2c21883a 	add	r16,r5,r16
  83896c:	280d883a 	mov	r6,r5
  838970:	880f883a 	mov	r7,r17
  838974:	a00b883a 	mov	r5,r20
  838978:	b809883a 	mov	r4,r23
  83897c:	82000005 	stb	r8,0(r16)
  838980:	083d33c0 	call	83d33c <_mbrtowc_r>
  838984:	00ffffc4 	movi	r3,-1
  838988:	10fc4326 	beq	r2,r3,837a98 <__alt_mem_epcs_flash_controller_0+0xff82ea98>
  83898c:	103c371e 	bne	r2,zero,837a6c <__alt_mem_epcs_flash_controller_0+0xff82ea6c>
  838990:	a0000015 	stw	zero,0(r20)
  838994:	0009883a 	mov	r4,zero
  838998:	083d1d00 	call	83d1d0 <iswspace>
  83899c:	10001b26 	beq	r2,zero,838a0c <__ssvfscanf_r+0x18dc>
  8389a0:	8821883a 	mov	r16,r17
  8389a4:	dc409f17 	ldw	r17,636(sp)
  8389a8:	803f7f26 	beq	r16,zero,8387a8 <__alt_mem_epcs_flash_controller_0+0xff82f7a8>
  8389ac:	843fffc4 	addi	r16,r16,-1
  8389b0:	d9400104 	addi	r5,sp,4
  8389b4:	2c2b883a 	add	r21,r5,r16
  8389b8:	00000106 	br	8389c0 <__ssvfscanf_r+0x1890>
  8389bc:	843fffc4 	addi	r16,r16,-1
  8389c0:	a9400003 	ldbu	r5,0(r21)
  8389c4:	980d883a 	mov	r6,r19
  8389c8:	b809883a 	mov	r4,r23
  8389cc:	08428400 	call	842840 <_sungetc_r>
  8389d0:	ad7fffc4 	addi	r21,r21,-1
  8389d4:	803ff91e 	bne	r16,zero,8389bc <__alt_mem_epcs_flash_controller_0+0xff82f9bc>
  8389d8:	003f7306 	br	8387a8 <__alt_mem_epcs_flash_controller_0+0xff82f7a8>
  8389dc:	d9400104 	addi	r5,sp,4
  8389e0:	802b883a 	mov	r21,r16
  8389e4:	9839883a 	mov	fp,r19
  8389e8:	2c3a122e 	bgeu	r5,r16,837234 <__alt_mem_epcs_flash_controller_0+0xff82e234>
  8389ec:	ad7fffc4 	addi	r21,r21,-1
  8389f0:	a9400007 	ldb	r5,0(r21)
  8389f4:	e00d883a 	mov	r6,fp
  8389f8:	b809883a 	mov	r4,r23
  8389fc:	08428400 	call	842840 <_sungetc_r>
  838a00:	d8800104 	addi	r2,sp,4
  838a04:	157ff91e 	bne	r2,r21,8389ec <__alt_mem_epcs_flash_controller_0+0xff82f9ec>
  838a08:	003a0a06 	br	837234 <__alt_mem_epcs_flash_controller_0+0xff82e234>
  838a0c:	d8c09f17 	ldw	r3,636(sp)
  838a10:	9465883a 	add	r18,r18,r17
  838a14:	e73fffc4 	addi	fp,fp,-1
  838a18:	1800051e 	bne	r3,zero,838a30 <__ssvfscanf_r+0x1900>
  838a1c:	a5000104 	addi	r20,r20,4
  838a20:	0021883a 	mov	r16,zero
  838a24:	003c1406 	br	837a78 <__alt_mem_epcs_flash_controller_0+0xff82ea78>
  838a28:	a1000017 	ldw	r4,0(r20)
  838a2c:	003fda06 	br	838998 <__alt_mem_epcs_flash_controller_0+0xff82f998>
  838a30:	0021883a 	mov	r16,zero
  838a34:	003c1006 	br	837a78 <__alt_mem_epcs_flash_controller_0+0xff82ea78>
  838a38:	d8c00104 	addi	r3,sp,4
  838a3c:	802b883a 	mov	r21,r16
  838a40:	9839883a 	mov	fp,r19
  838a44:	1c39fb2e 	bgeu	r3,r16,837234 <__alt_mem_epcs_flash_controller_0+0xff82e234>
  838a48:	ad7fffc4 	addi	r21,r21,-1
  838a4c:	a9400007 	ldb	r5,0(r21)
  838a50:	b809883a 	mov	r4,r23
  838a54:	e00d883a 	mov	r6,fp
  838a58:	08428400 	call	842840 <_sungetc_r>
  838a5c:	d9000104 	addi	r4,sp,4
  838a60:	257ff91e 	bne	r4,r21,838a48 <__alt_mem_epcs_flash_controller_0+0xff82fa48>
  838a64:	0039f306 	br	837234 <__alt_mem_epcs_flash_controller_0+0xff82e234>
  838a68:	d8c00104 	addi	r3,sp,4
  838a6c:	802b883a 	mov	r21,r16
  838a70:	9839883a 	mov	fp,r19
  838a74:	1c39ef2e 	bgeu	r3,r16,837234 <__alt_mem_epcs_flash_controller_0+0xff82e234>
  838a78:	ad7fffc4 	addi	r21,r21,-1
  838a7c:	a9400007 	ldb	r5,0(r21)
  838a80:	b809883a 	mov	r4,r23
  838a84:	e00d883a 	mov	r6,fp
  838a88:	08428400 	call	842840 <_sungetc_r>
  838a8c:	d9000104 	addi	r4,sp,4
  838a90:	257ff91e 	bne	r4,r21,838a78 <__alt_mem_epcs_flash_controller_0+0xff82fa78>
  838a94:	0039e706 	br	837234 <__alt_mem_epcs_flash_controller_0+0xff82e234>
  838a98:	0009883a 	mov	r4,zero
  838a9c:	083ef600 	call	83ef60 <nanf>
  838aa0:	a0800015 	stw	r2,0(r20)
  838aa4:	dc409c15 	stw	r17,624(sp)
  838aa8:	003d8f06 	br	8380e8 <__alt_mem_epcs_flash_controller_0+0xff82f0e8>
  838aac:	d9400104 	addi	r5,sp,4
  838ab0:	b809883a 	mov	r4,r23
  838ab4:	0840fb00 	call	840fb0 <_strtoull_r>
  838ab8:	003f9806 	br	83891c <__alt_mem_epcs_flash_controller_0+0xff82f91c>

00838abc <_times_r>:
  838abc:	2809883a 	mov	r4,r5
  838ac0:	084a1541 	jmpi	84a154 <times>

00838ac4 <___vfprintf_internal_r>:
  838ac4:	deffb804 	addi	sp,sp,-288
  838ac8:	dfc04715 	stw	ra,284(sp)
  838acc:	ddc04515 	stw	r23,276(sp)
  838ad0:	dd404315 	stw	r21,268(sp)
  838ad4:	d9002d15 	stw	r4,180(sp)
  838ad8:	282f883a 	mov	r23,r5
  838adc:	302b883a 	mov	r21,r6
  838ae0:	d9c02e15 	stw	r7,184(sp)
  838ae4:	df004615 	stw	fp,280(sp)
  838ae8:	dd804415 	stw	r22,272(sp)
  838aec:	dd004215 	stw	r20,264(sp)
  838af0:	dcc04115 	stw	r19,260(sp)
  838af4:	dc804015 	stw	r18,256(sp)
  838af8:	dc403f15 	stw	r17,252(sp)
  838afc:	dc003e15 	stw	r16,248(sp)
  838b00:	083d2ac0 	call	83d2ac <_localeconv_r>
  838b04:	10800017 	ldw	r2,0(r2)
  838b08:	1009883a 	mov	r4,r2
  838b0c:	d8803415 	stw	r2,208(sp)
  838b10:	0834c200 	call	834c20 <strlen>
  838b14:	d8803715 	stw	r2,220(sp)
  838b18:	d8802d17 	ldw	r2,180(sp)
  838b1c:	10000226 	beq	r2,zero,838b28 <___vfprintf_internal_r+0x64>
  838b20:	10800e17 	ldw	r2,56(r2)
  838b24:	1000fb26 	beq	r2,zero,838f14 <___vfprintf_internal_r+0x450>
  838b28:	b880030b 	ldhu	r2,12(r23)
  838b2c:	10c8000c 	andi	r3,r2,8192
  838b30:	1800061e 	bne	r3,zero,838b4c <___vfprintf_internal_r+0x88>
  838b34:	b9001917 	ldw	r4,100(r23)
  838b38:	00f7ffc4 	movi	r3,-8193
  838b3c:	10880014 	ori	r2,r2,8192
  838b40:	20c6703a 	and	r3,r4,r3
  838b44:	b880030d 	sth	r2,12(r23)
  838b48:	b8c01915 	stw	r3,100(r23)
  838b4c:	10c0020c 	andi	r3,r2,8
  838b50:	1800c326 	beq	r3,zero,838e60 <___vfprintf_internal_r+0x39c>
  838b54:	b8c00417 	ldw	r3,16(r23)
  838b58:	1800c126 	beq	r3,zero,838e60 <___vfprintf_internal_r+0x39c>
  838b5c:	1080068c 	andi	r2,r2,26
  838b60:	00c00284 	movi	r3,10
  838b64:	10c0c626 	beq	r2,r3,838e80 <___vfprintf_internal_r+0x3bc>
  838b68:	d8c00404 	addi	r3,sp,16
  838b6c:	050021b4 	movhi	r20,134
  838b70:	d9001e04 	addi	r4,sp,120
  838b74:	a5245404 	addi	r20,r20,-28336
  838b78:	d8c01e15 	stw	r3,120(sp)
  838b7c:	d8002015 	stw	zero,128(sp)
  838b80:	d8001f15 	stw	zero,124(sp)
  838b84:	d8003315 	stw	zero,204(sp)
  838b88:	d8003615 	stw	zero,216(sp)
  838b8c:	d8003815 	stw	zero,224(sp)
  838b90:	1811883a 	mov	r8,r3
  838b94:	d8003915 	stw	zero,228(sp)
  838b98:	d8003a15 	stw	zero,232(sp)
  838b9c:	d8002f15 	stw	zero,188(sp)
  838ba0:	d9002815 	stw	r4,160(sp)
  838ba4:	a8800007 	ldb	r2,0(r21)
  838ba8:	10028b26 	beq	r2,zero,8395d8 <___vfprintf_internal_r+0xb14>
  838bac:	00c00944 	movi	r3,37
  838bb0:	a823883a 	mov	r17,r21
  838bb4:	10c0021e 	bne	r2,r3,838bc0 <___vfprintf_internal_r+0xfc>
  838bb8:	00001406 	br	838c0c <___vfprintf_internal_r+0x148>
  838bbc:	10c00326 	beq	r2,r3,838bcc <___vfprintf_internal_r+0x108>
  838bc0:	8c400044 	addi	r17,r17,1
  838bc4:	88800007 	ldb	r2,0(r17)
  838bc8:	103ffc1e 	bne	r2,zero,838bbc <__alt_mem_epcs_flash_controller_0+0xff82fbbc>
  838bcc:	8d61c83a 	sub	r16,r17,r21
  838bd0:	80000e26 	beq	r16,zero,838c0c <___vfprintf_internal_r+0x148>
  838bd4:	d8c02017 	ldw	r3,128(sp)
  838bd8:	d8801f17 	ldw	r2,124(sp)
  838bdc:	45400015 	stw	r21,0(r8)
  838be0:	1c07883a 	add	r3,r3,r16
  838be4:	10800044 	addi	r2,r2,1
  838be8:	d8c02015 	stw	r3,128(sp)
  838bec:	44000115 	stw	r16,4(r8)
  838bf0:	d8801f15 	stw	r2,124(sp)
  838bf4:	00c001c4 	movi	r3,7
  838bf8:	1880a916 	blt	r3,r2,838ea0 <___vfprintf_internal_r+0x3dc>
  838bfc:	42000204 	addi	r8,r8,8
  838c00:	d9402f17 	ldw	r5,188(sp)
  838c04:	2c0b883a 	add	r5,r5,r16
  838c08:	d9402f15 	stw	r5,188(sp)
  838c0c:	88800007 	ldb	r2,0(r17)
  838c10:	1000aa26 	beq	r2,zero,838ebc <___vfprintf_internal_r+0x3f8>
  838c14:	8d400044 	addi	r21,r17,1
  838c18:	8c400047 	ldb	r17,1(r17)
  838c1c:	0021883a 	mov	r16,zero
  838c20:	00bfffc4 	movi	r2,-1
  838c24:	0025883a 	mov	r18,zero
  838c28:	dc002905 	stb	r16,164(sp)
  838c2c:	d8002785 	stb	zero,158(sp)
  838c30:	d8002b05 	stb	zero,172(sp)
  838c34:	d8802a15 	stw	r2,168(sp)
  838c38:	d8003115 	stw	zero,196(sp)
  838c3c:	04c01604 	movi	r19,88
  838c40:	05800244 	movi	r22,9
  838c44:	9021883a 	mov	r16,r18
  838c48:	4039883a 	mov	fp,r8
  838c4c:	ad400044 	addi	r21,r21,1
  838c50:	88bff804 	addi	r2,r17,-32
  838c54:	98833236 	bltu	r19,r2,839920 <___vfprintf_internal_r+0xe5c>
  838c58:	100490ba 	slli	r2,r2,2
  838c5c:	00c02134 	movhi	r3,132
  838c60:	18e31c04 	addi	r3,r3,-29584
  838c64:	10c5883a 	add	r2,r2,r3
  838c68:	10800017 	ldw	r2,0(r2)
  838c6c:	1000683a 	jmp	r2
  838c70:	00839818 	cmpnei	r2,zero,3680
  838c74:	00839920 	cmpeqi	r2,zero,3684
  838c78:	00839920 	cmpeqi	r2,zero,3684
  838c7c:	00839838 	rdprs	r2,zero,3680
  838c80:	00839920 	cmpeqi	r2,zero,3684
  838c84:	00839920 	cmpeqi	r2,zero,3684
  838c88:	00839920 	cmpeqi	r2,zero,3684
  838c8c:	00839920 	cmpeqi	r2,zero,3684
  838c90:	00839920 	cmpeqi	r2,zero,3684
  838c94:	00839920 	cmpeqi	r2,zero,3684
  838c98:	00838f20 	cmpeqi	r2,zero,3644
  838c9c:	00839728 	cmpgeui	r2,zero,3676
  838ca0:	00839920 	cmpeqi	r2,zero,3684
  838ca4:	00838de4 	muli	r2,zero,3639
  838ca8:	00838f44 	movi	r2,3645
  838cac:	00839920 	cmpeqi	r2,zero,3684
  838cb0:	00838f94 	movui	r2,3646
  838cb4:	00838fa0 	cmpeqi	r2,zero,3646
  838cb8:	00838fa0 	cmpeqi	r2,zero,3646
  838cbc:	00838fa0 	cmpeqi	r2,zero,3646
  838cc0:	00838fa0 	cmpeqi	r2,zero,3646
  838cc4:	00838fa0 	cmpeqi	r2,zero,3646
  838cc8:	00838fa0 	cmpeqi	r2,zero,3646
  838ccc:	00838fa0 	cmpeqi	r2,zero,3646
  838cd0:	00838fa0 	cmpeqi	r2,zero,3646
  838cd4:	00838fa0 	cmpeqi	r2,zero,3646
  838cd8:	00839920 	cmpeqi	r2,zero,3684
  838cdc:	00839920 	cmpeqi	r2,zero,3684
  838ce0:	00839920 	cmpeqi	r2,zero,3684
  838ce4:	00839920 	cmpeqi	r2,zero,3684
  838ce8:	00839920 	cmpeqi	r2,zero,3684
  838cec:	00839920 	cmpeqi	r2,zero,3684
  838cf0:	00839920 	cmpeqi	r2,zero,3684
  838cf4:	00839920 	cmpeqi	r2,zero,3684
  838cf8:	00839920 	cmpeqi	r2,zero,3684
  838cfc:	00839920 	cmpeqi	r2,zero,3684
  838d00:	00838fdc 	xori	r2,zero,3647
  838d04:	008390a4 	muli	r2,zero,3650
  838d08:	00839920 	cmpeqi	r2,zero,3684
  838d0c:	008390a4 	muli	r2,zero,3650
  838d10:	00839920 	cmpeqi	r2,zero,3684
  838d14:	00839920 	cmpeqi	r2,zero,3684
  838d18:	00839920 	cmpeqi	r2,zero,3684
  838d1c:	00839920 	cmpeqi	r2,zero,3684
  838d20:	00839150 	cmplti	r2,zero,3653
  838d24:	00839920 	cmpeqi	r2,zero,3684
  838d28:	00839920 	cmpeqi	r2,zero,3684
  838d2c:	0083915c 	xori	r2,zero,3653
  838d30:	00839920 	cmpeqi	r2,zero,3684
  838d34:	00839920 	cmpeqi	r2,zero,3684
  838d38:	00839920 	cmpeqi	r2,zero,3684
  838d3c:	00839920 	cmpeqi	r2,zero,3684
  838d40:	00839920 	cmpeqi	r2,zero,3684
  838d44:	008395e0 	cmpeqi	r2,zero,3671
  838d48:	00839920 	cmpeqi	r2,zero,3684
  838d4c:	00839920 	cmpeqi	r2,zero,3684
  838d50:	0083964c 	andi	r2,zero,3673
  838d54:	00839920 	cmpeqi	r2,zero,3684
  838d58:	00839920 	cmpeqi	r2,zero,3684
  838d5c:	00839920 	cmpeqi	r2,zero,3684
  838d60:	00839920 	cmpeqi	r2,zero,3684
  838d64:	00839920 	cmpeqi	r2,zero,3684
  838d68:	00839920 	cmpeqi	r2,zero,3684
  838d6c:	00839920 	cmpeqi	r2,zero,3684
  838d70:	00839920 	cmpeqi	r2,zero,3684
  838d74:	00839920 	cmpeqi	r2,zero,3684
  838d78:	00839920 	cmpeqi	r2,zero,3684
  838d7c:	008398c4 	movi	r2,3683
  838d80:	00839844 	movi	r2,3681
  838d84:	008390a4 	muli	r2,zero,3650
  838d88:	008390a4 	muli	r2,zero,3650
  838d8c:	008390a4 	muli	r2,zero,3650
  838d90:	00839864 	muli	r2,zero,3681
  838d94:	00839844 	movi	r2,3681
  838d98:	00839920 	cmpeqi	r2,zero,3684
  838d9c:	00839920 	cmpeqi	r2,zero,3684
  838da0:	00839870 	cmpltui	r2,zero,3681
  838da4:	00839920 	cmpeqi	r2,zero,3684
  838da8:	00839884 	movi	r2,3682
  838dac:	00839708 	cmpgei	r2,zero,3676
  838db0:	00838df0 	cmpltui	r2,zero,3639
  838db4:	00839740 	call	83974 <OSCtxSw_SWITCH_PC+0x83934>
  838db8:	00839920 	cmpeqi	r2,zero,3684
  838dbc:	0083974c 	andi	r2,zero,3677
  838dc0:	00839920 	cmpeqi	r2,zero,3684
  838dc4:	008397b0 	cmpltui	r2,zero,3678
  838dc8:	00839920 	cmpeqi	r2,zero,3684
  838dcc:	00839920 	cmpeqi	r2,zero,3684
  838dd0:	008397d0 	cmplti	r2,zero,3679
  838dd4:	d8c03117 	ldw	r3,196(sp)
  838dd8:	d8802e15 	stw	r2,184(sp)
  838ddc:	00c7c83a 	sub	r3,zero,r3
  838de0:	d8c03115 	stw	r3,196(sp)
  838de4:	84000114 	ori	r16,r16,4
  838de8:	ac400007 	ldb	r17,0(r21)
  838dec:	003f9706 	br	838c4c <__alt_mem_epcs_flash_controller_0+0xff82fc4c>
  838df0:	00800c04 	movi	r2,48
  838df4:	d8802705 	stb	r2,156(sp)
  838df8:	00801e04 	movi	r2,120
  838dfc:	d8802745 	stb	r2,157(sp)
  838e00:	d9002a17 	ldw	r4,168(sp)
  838e04:	d8802e17 	ldw	r2,184(sp)
  838e08:	d8002785 	stb	zero,158(sp)
  838e0c:	e011883a 	mov	r8,fp
  838e10:	10c00104 	addi	r3,r2,4
  838e14:	14c00017 	ldw	r19,0(r2)
  838e18:	002d883a 	mov	r22,zero
  838e1c:	80800094 	ori	r2,r16,2
  838e20:	2002ca16 	blt	r4,zero,83994c <___vfprintf_internal_r+0xe88>
  838e24:	00bfdfc4 	movi	r2,-129
  838e28:	80a4703a 	and	r18,r16,r2
  838e2c:	d8c02e15 	stw	r3,184(sp)
  838e30:	94800094 	ori	r18,r18,2
  838e34:	9802b41e 	bne	r19,zero,839908 <___vfprintf_internal_r+0xe44>
  838e38:	014021b4 	movhi	r5,134
  838e3c:	29643a04 	addi	r5,r5,-28440
  838e40:	d9403915 	stw	r5,228(sp)
  838e44:	04401e04 	movi	r17,120
  838e48:	d8802a17 	ldw	r2,168(sp)
  838e4c:	0039883a 	mov	fp,zero
  838e50:	1001fa26 	beq	r2,zero,83963c <___vfprintf_internal_r+0xb78>
  838e54:	0027883a 	mov	r19,zero
  838e58:	002d883a 	mov	r22,zero
  838e5c:	00021906 	br	8396c4 <___vfprintf_internal_r+0xc00>
  838e60:	d9002d17 	ldw	r4,180(sp)
  838e64:	b80b883a 	mov	r5,r23
  838e68:	083b0300 	call	83b030 <__swsetup_r>
  838e6c:	1005dc1e 	bne	r2,zero,83a5e0 <___vfprintf_internal_r+0x1b1c>
  838e70:	b880030b 	ldhu	r2,12(r23)
  838e74:	00c00284 	movi	r3,10
  838e78:	1080068c 	andi	r2,r2,26
  838e7c:	10ff3a1e 	bne	r2,r3,838b68 <__alt_mem_epcs_flash_controller_0+0xff82fb68>
  838e80:	b880038f 	ldh	r2,14(r23)
  838e84:	103f3816 	blt	r2,zero,838b68 <__alt_mem_epcs_flash_controller_0+0xff82fb68>
  838e88:	d9c02e17 	ldw	r7,184(sp)
  838e8c:	d9002d17 	ldw	r4,180(sp)
  838e90:	a80d883a 	mov	r6,r21
  838e94:	b80b883a 	mov	r5,r23
  838e98:	083adbc0 	call	83adbc <__sbprintf>
  838e9c:	00001106 	br	838ee4 <___vfprintf_internal_r+0x420>
  838ea0:	d9002d17 	ldw	r4,180(sp)
  838ea4:	d9801e04 	addi	r6,sp,120
  838ea8:	b80b883a 	mov	r5,r23
  838eac:	0843f800 	call	843f80 <__sprint_r>
  838eb0:	1000081e 	bne	r2,zero,838ed4 <___vfprintf_internal_r+0x410>
  838eb4:	da000404 	addi	r8,sp,16
  838eb8:	003f5106 	br	838c00 <__alt_mem_epcs_flash_controller_0+0xff82fc00>
  838ebc:	d8802017 	ldw	r2,128(sp)
  838ec0:	10000426 	beq	r2,zero,838ed4 <___vfprintf_internal_r+0x410>
  838ec4:	d9002d17 	ldw	r4,180(sp)
  838ec8:	d9801e04 	addi	r6,sp,120
  838ecc:	b80b883a 	mov	r5,r23
  838ed0:	0843f800 	call	843f80 <__sprint_r>
  838ed4:	b880030b 	ldhu	r2,12(r23)
  838ed8:	1080100c 	andi	r2,r2,64
  838edc:	1005c01e 	bne	r2,zero,83a5e0 <___vfprintf_internal_r+0x1b1c>
  838ee0:	d8802f17 	ldw	r2,188(sp)
  838ee4:	dfc04717 	ldw	ra,284(sp)
  838ee8:	df004617 	ldw	fp,280(sp)
  838eec:	ddc04517 	ldw	r23,276(sp)
  838ef0:	dd804417 	ldw	r22,272(sp)
  838ef4:	dd404317 	ldw	r21,268(sp)
  838ef8:	dd004217 	ldw	r20,264(sp)
  838efc:	dcc04117 	ldw	r19,260(sp)
  838f00:	dc804017 	ldw	r18,256(sp)
  838f04:	dc403f17 	ldw	r17,252(sp)
  838f08:	dc003e17 	ldw	r16,248(sp)
  838f0c:	dec04804 	addi	sp,sp,288
  838f10:	f800283a 	ret
  838f14:	d9002d17 	ldw	r4,180(sp)
  838f18:	083274c0 	call	83274c <__sinit>
  838f1c:	003f0206 	br	838b28 <__alt_mem_epcs_flash_controller_0+0xff82fb28>
  838f20:	d9002e17 	ldw	r4,184(sp)
  838f24:	d9402e17 	ldw	r5,184(sp)
  838f28:	21000017 	ldw	r4,0(r4)
  838f2c:	28800104 	addi	r2,r5,4
  838f30:	d9003115 	stw	r4,196(sp)
  838f34:	203fa716 	blt	r4,zero,838dd4 <__alt_mem_epcs_flash_controller_0+0xff82fdd4>
  838f38:	d8802e15 	stw	r2,184(sp)
  838f3c:	ac400007 	ldb	r17,0(r21)
  838f40:	003f4206 	br	838c4c <__alt_mem_epcs_flash_controller_0+0xff82fc4c>
  838f44:	ac400007 	ldb	r17,0(r21)
  838f48:	01000a84 	movi	r4,42
  838f4c:	a8c00044 	addi	r3,r21,1
  838f50:	89075826 	beq	r17,r4,83acb4 <___vfprintf_internal_r+0x21f0>
  838f54:	8cbff404 	addi	r18,r17,-48
  838f58:	b486ae36 	bltu	r22,r18,83aa14 <___vfprintf_internal_r+0x1f50>
  838f5c:	0009883a 	mov	r4,zero
  838f60:	1823883a 	mov	r17,r3
  838f64:	01400284 	movi	r5,10
  838f68:	08305040 	call	830504 <__mulsi3>
  838f6c:	88c00007 	ldb	r3,0(r17)
  838f70:	1489883a 	add	r4,r2,r18
  838f74:	8d400044 	addi	r21,r17,1
  838f78:	1cbff404 	addi	r18,r3,-48
  838f7c:	a823883a 	mov	r17,r21
  838f80:	b4bff82e 	bgeu	r22,r18,838f64 <__alt_mem_epcs_flash_controller_0+0xff82ff64>
  838f84:	1823883a 	mov	r17,r3
  838f88:	2005f616 	blt	r4,zero,83a764 <___vfprintf_internal_r+0x1ca0>
  838f8c:	d9002a15 	stw	r4,168(sp)
  838f90:	003f2f06 	br	838c50 <__alt_mem_epcs_flash_controller_0+0xff82fc50>
  838f94:	84002014 	ori	r16,r16,128
  838f98:	ac400007 	ldb	r17,0(r21)
  838f9c:	003f2b06 	br	838c4c <__alt_mem_epcs_flash_controller_0+0xff82fc4c>
  838fa0:	8cbff404 	addi	r18,r17,-48
  838fa4:	d8003115 	stw	zero,196(sp)
  838fa8:	0009883a 	mov	r4,zero
  838fac:	a823883a 	mov	r17,r21
  838fb0:	01400284 	movi	r5,10
  838fb4:	08305040 	call	830504 <__mulsi3>
  838fb8:	88c00007 	ldb	r3,0(r17)
  838fbc:	9089883a 	add	r4,r18,r2
  838fc0:	ad400044 	addi	r21,r21,1
  838fc4:	1cbff404 	addi	r18,r3,-48
  838fc8:	a823883a 	mov	r17,r21
  838fcc:	b4bff82e 	bgeu	r22,r18,838fb0 <__alt_mem_epcs_flash_controller_0+0xff82ffb0>
  838fd0:	1823883a 	mov	r17,r3
  838fd4:	d9003115 	stw	r4,196(sp)
  838fd8:	003f1d06 	br	838c50 <__alt_mem_epcs_flash_controller_0+0xff82fc50>
  838fdc:	8025883a 	mov	r18,r16
  838fe0:	dc002903 	ldbu	r16,164(sp)
  838fe4:	e011883a 	mov	r8,fp
  838fe8:	84003fcc 	andi	r16,r16,255
  838fec:	8007531e 	bne	r16,zero,83ad3c <___vfprintf_internal_r+0x2278>
  838ff0:	94800414 	ori	r18,r18,16
  838ff4:	9080080c 	andi	r2,r18,32
  838ff8:	1003a326 	beq	r2,zero,839e88 <___vfprintf_internal_r+0x13c4>
  838ffc:	d9002e17 	ldw	r4,184(sp)
  839000:	20800117 	ldw	r2,4(r4)
  839004:	24c00017 	ldw	r19,0(r4)
  839008:	21000204 	addi	r4,r4,8
  83900c:	d9002e15 	stw	r4,184(sp)
  839010:	102d883a 	mov	r22,r2
  839014:	10047316 	blt	r2,zero,83a1e4 <___vfprintf_internal_r+0x1720>
  839018:	d9002a17 	ldw	r4,168(sp)
  83901c:	df002783 	ldbu	fp,158(sp)
  839020:	2003e416 	blt	r4,zero,839fb4 <___vfprintf_internal_r+0x14f0>
  839024:	00ffdfc4 	movi	r3,-129
  839028:	9d84b03a 	or	r2,r19,r22
  83902c:	90e4703a 	and	r18,r18,r3
  839030:	10018026 	beq	r2,zero,839634 <___vfprintf_internal_r+0xb70>
  839034:	b003ab26 	beq	r22,zero,839ee4 <___vfprintf_internal_r+0x1420>
  839038:	dc402915 	stw	r17,164(sp)
  83903c:	dc001e04 	addi	r16,sp,120
  839040:	b023883a 	mov	r17,r22
  839044:	402d883a 	mov	r22,r8
  839048:	9809883a 	mov	r4,r19
  83904c:	880b883a 	mov	r5,r17
  839050:	01800284 	movi	r6,10
  839054:	000f883a 	mov	r7,zero
  839058:	0846d700 	call	846d70 <__umoddi3>
  83905c:	10800c04 	addi	r2,r2,48
  839060:	843fffc4 	addi	r16,r16,-1
  839064:	9809883a 	mov	r4,r19
  839068:	880b883a 	mov	r5,r17
  83906c:	80800005 	stb	r2,0(r16)
  839070:	01800284 	movi	r6,10
  839074:	000f883a 	mov	r7,zero
  839078:	08467740 	call	846774 <__udivdi3>
  83907c:	1027883a 	mov	r19,r2
  839080:	10c4b03a 	or	r2,r2,r3
  839084:	1823883a 	mov	r17,r3
  839088:	103fef1e 	bne	r2,zero,839048 <__alt_mem_epcs_flash_controller_0+0xff830048>
  83908c:	d8c02817 	ldw	r3,160(sp)
  839090:	dc402917 	ldw	r17,164(sp)
  839094:	b011883a 	mov	r8,r22
  839098:	1c07c83a 	sub	r3,r3,r16
  83909c:	d8c02b15 	stw	r3,172(sp)
  8390a0:	00005f06 	br	839220 <___vfprintf_internal_r+0x75c>
  8390a4:	8025883a 	mov	r18,r16
  8390a8:	dc002903 	ldbu	r16,164(sp)
  8390ac:	e011883a 	mov	r8,fp
  8390b0:	84003fcc 	andi	r16,r16,255
  8390b4:	80071e1e 	bne	r16,zero,83ad30 <___vfprintf_internal_r+0x226c>
  8390b8:	9080020c 	andi	r2,r18,8
  8390bc:	1004af26 	beq	r2,zero,83a37c <___vfprintf_internal_r+0x18b8>
  8390c0:	d9002e17 	ldw	r4,184(sp)
  8390c4:	d9402e17 	ldw	r5,184(sp)
  8390c8:	d8802e17 	ldw	r2,184(sp)
  8390cc:	21000017 	ldw	r4,0(r4)
  8390d0:	29400117 	ldw	r5,4(r5)
  8390d4:	10800204 	addi	r2,r2,8
  8390d8:	d9003615 	stw	r4,216(sp)
  8390dc:	d9403815 	stw	r5,224(sp)
  8390e0:	d8802e15 	stw	r2,184(sp)
  8390e4:	d9003617 	ldw	r4,216(sp)
  8390e8:	d9403817 	ldw	r5,224(sp)
  8390ec:	da003d15 	stw	r8,244(sp)
  8390f0:	04000044 	movi	r16,1
  8390f4:	083ee1c0 	call	83ee1c <__fpclassifyd>
  8390f8:	da003d17 	ldw	r8,244(sp)
  8390fc:	1404441e 	bne	r2,r16,83a210 <___vfprintf_internal_r+0x174c>
  839100:	d9003617 	ldw	r4,216(sp)
  839104:	d9403817 	ldw	r5,224(sp)
  839108:	000d883a 	mov	r6,zero
  83910c:	000f883a 	mov	r7,zero
  839110:	08489100 	call	848910 <__ledf2>
  839114:	da003d17 	ldw	r8,244(sp)
  839118:	1005e316 	blt	r2,zero,83a8a8 <___vfprintf_internal_r+0x1de4>
  83911c:	df002783 	ldbu	fp,158(sp)
  839120:	008011c4 	movi	r2,71
  839124:	1445580e 	bge	r2,r17,83a688 <___vfprintf_internal_r+0x1bc4>
  839128:	040021b4 	movhi	r16,134
  83912c:	84243204 	addi	r16,r16,-28472
  839130:	00c000c4 	movi	r3,3
  839134:	00bfdfc4 	movi	r2,-129
  839138:	d8c02915 	stw	r3,164(sp)
  83913c:	90a4703a 	and	r18,r18,r2
  839140:	d8c02b15 	stw	r3,172(sp)
  839144:	d8002a15 	stw	zero,168(sp)
  839148:	d8003215 	stw	zero,200(sp)
  83914c:	00003a06 	br	839238 <___vfprintf_internal_r+0x774>
  839150:	84000214 	ori	r16,r16,8
  839154:	ac400007 	ldb	r17,0(r21)
  839158:	003ebc06 	br	838c4c <__alt_mem_epcs_flash_controller_0+0xff82fc4c>
  83915c:	8025883a 	mov	r18,r16
  839160:	dc002903 	ldbu	r16,164(sp)
  839164:	e011883a 	mov	r8,fp
  839168:	84003fcc 	andi	r16,r16,255
  83916c:	8007001e 	bne	r16,zero,83ad70 <___vfprintf_internal_r+0x22ac>
  839170:	94800414 	ori	r18,r18,16
  839174:	9080080c 	andi	r2,r18,32
  839178:	1002fa26 	beq	r2,zero,839d64 <___vfprintf_internal_r+0x12a0>
  83917c:	d9002e17 	ldw	r4,184(sp)
  839180:	d9402a17 	ldw	r5,168(sp)
  839184:	d8002785 	stb	zero,158(sp)
  839188:	20800204 	addi	r2,r4,8
  83918c:	24c00017 	ldw	r19,0(r4)
  839190:	25800117 	ldw	r22,4(r4)
  839194:	2804b116 	blt	r5,zero,83a45c <___vfprintf_internal_r+0x1998>
  839198:	013fdfc4 	movi	r4,-129
  83919c:	9d86b03a 	or	r3,r19,r22
  8391a0:	d8802e15 	stw	r2,184(sp)
  8391a4:	9124703a 	and	r18,r18,r4
  8391a8:	1802fb1e 	bne	r3,zero,839d98 <___vfprintf_internal_r+0x12d4>
  8391ac:	d8c02a17 	ldw	r3,168(sp)
  8391b0:	0039883a 	mov	fp,zero
  8391b4:	1805e526 	beq	r3,zero,83a94c <___vfprintf_internal_r+0x1e88>
  8391b8:	0027883a 	mov	r19,zero
  8391bc:	002d883a 	mov	r22,zero
  8391c0:	dc001e04 	addi	r16,sp,120
  8391c4:	9806d0fa 	srli	r3,r19,3
  8391c8:	b008977a 	slli	r4,r22,29
  8391cc:	b02cd0fa 	srli	r22,r22,3
  8391d0:	9cc001cc 	andi	r19,r19,7
  8391d4:	98800c04 	addi	r2,r19,48
  8391d8:	843fffc4 	addi	r16,r16,-1
  8391dc:	20e6b03a 	or	r19,r4,r3
  8391e0:	80800005 	stb	r2,0(r16)
  8391e4:	9d86b03a 	or	r3,r19,r22
  8391e8:	183ff61e 	bne	r3,zero,8391c4 <__alt_mem_epcs_flash_controller_0+0xff8301c4>
  8391ec:	90c0004c 	andi	r3,r18,1
  8391f0:	18014126 	beq	r3,zero,8396f8 <___vfprintf_internal_r+0xc34>
  8391f4:	10803fcc 	andi	r2,r2,255
  8391f8:	1080201c 	xori	r2,r2,128
  8391fc:	10bfe004 	addi	r2,r2,-128
  839200:	00c00c04 	movi	r3,48
  839204:	10c13c26 	beq	r2,r3,8396f8 <___vfprintf_internal_r+0xc34>
  839208:	80ffffc5 	stb	r3,-1(r16)
  83920c:	d8c02817 	ldw	r3,160(sp)
  839210:	80bfffc4 	addi	r2,r16,-1
  839214:	1021883a 	mov	r16,r2
  839218:	1887c83a 	sub	r3,r3,r2
  83921c:	d8c02b15 	stw	r3,172(sp)
  839220:	d8802b17 	ldw	r2,172(sp)
  839224:	d9002a17 	ldw	r4,168(sp)
  839228:	1100010e 	bge	r2,r4,839230 <___vfprintf_internal_r+0x76c>
  83922c:	2005883a 	mov	r2,r4
  839230:	d8802915 	stw	r2,164(sp)
  839234:	d8003215 	stw	zero,200(sp)
  839238:	e7003fcc 	andi	fp,fp,255
  83923c:	e700201c 	xori	fp,fp,128
  839240:	e73fe004 	addi	fp,fp,-128
  839244:	e0000326 	beq	fp,zero,839254 <___vfprintf_internal_r+0x790>
  839248:	d8c02917 	ldw	r3,164(sp)
  83924c:	18c00044 	addi	r3,r3,1
  839250:	d8c02915 	stw	r3,164(sp)
  839254:	90c0008c 	andi	r3,r18,2
  839258:	d8c02c15 	stw	r3,176(sp)
  83925c:	18000326 	beq	r3,zero,83926c <___vfprintf_internal_r+0x7a8>
  839260:	d8c02917 	ldw	r3,164(sp)
  839264:	18c00084 	addi	r3,r3,2
  839268:	d8c02915 	stw	r3,164(sp)
  83926c:	90c0210c 	andi	r3,r18,132
  839270:	d8c03015 	stw	r3,192(sp)
  839274:	1801c51e 	bne	r3,zero,83998c <___vfprintf_internal_r+0xec8>
  839278:	d9003117 	ldw	r4,196(sp)
  83927c:	d8c02917 	ldw	r3,164(sp)
  839280:	20e7c83a 	sub	r19,r4,r3
  839284:	04c1c10e 	bge	zero,r19,83998c <___vfprintf_internal_r+0xec8>
  839288:	02400404 	movi	r9,16
  83928c:	d8c02017 	ldw	r3,128(sp)
  839290:	d8801f17 	ldw	r2,124(sp)
  839294:	4cc52f0e 	bge	r9,r19,83a754 <___vfprintf_internal_r+0x1c90>
  839298:	014021b4 	movhi	r5,134
  83929c:	29645804 	addi	r5,r5,-28320
  8392a0:	dc403b15 	stw	r17,236(sp)
  8392a4:	d9403515 	stw	r5,212(sp)
  8392a8:	9823883a 	mov	r17,r19
  8392ac:	482d883a 	mov	r22,r9
  8392b0:	9027883a 	mov	r19,r18
  8392b4:	070001c4 	movi	fp,7
  8392b8:	8025883a 	mov	r18,r16
  8392bc:	dc002d17 	ldw	r16,180(sp)
  8392c0:	00000306 	br	8392d0 <___vfprintf_internal_r+0x80c>
  8392c4:	8c7ffc04 	addi	r17,r17,-16
  8392c8:	42000204 	addi	r8,r8,8
  8392cc:	b440130e 	bge	r22,r17,83931c <___vfprintf_internal_r+0x858>
  8392d0:	010021b4 	movhi	r4,134
  8392d4:	18c00404 	addi	r3,r3,16
  8392d8:	10800044 	addi	r2,r2,1
  8392dc:	21245804 	addi	r4,r4,-28320
  8392e0:	41000015 	stw	r4,0(r8)
  8392e4:	45800115 	stw	r22,4(r8)
  8392e8:	d8c02015 	stw	r3,128(sp)
  8392ec:	d8801f15 	stw	r2,124(sp)
  8392f0:	e0bff40e 	bge	fp,r2,8392c4 <__alt_mem_epcs_flash_controller_0+0xff8302c4>
  8392f4:	d9801e04 	addi	r6,sp,120
  8392f8:	b80b883a 	mov	r5,r23
  8392fc:	8009883a 	mov	r4,r16
  839300:	0843f800 	call	843f80 <__sprint_r>
  839304:	103ef31e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  839308:	8c7ffc04 	addi	r17,r17,-16
  83930c:	d8c02017 	ldw	r3,128(sp)
  839310:	d8801f17 	ldw	r2,124(sp)
  839314:	da000404 	addi	r8,sp,16
  839318:	b47fed16 	blt	r22,r17,8392d0 <__alt_mem_epcs_flash_controller_0+0xff8302d0>
  83931c:	9021883a 	mov	r16,r18
  839320:	9825883a 	mov	r18,r19
  839324:	8827883a 	mov	r19,r17
  839328:	dc403b17 	ldw	r17,236(sp)
  83932c:	d9403517 	ldw	r5,212(sp)
  839330:	98c7883a 	add	r3,r19,r3
  839334:	10800044 	addi	r2,r2,1
  839338:	41400015 	stw	r5,0(r8)
  83933c:	44c00115 	stw	r19,4(r8)
  839340:	d8c02015 	stw	r3,128(sp)
  839344:	d8801f15 	stw	r2,124(sp)
  839348:	010001c4 	movi	r4,7
  83934c:	2082c516 	blt	r4,r2,839e64 <___vfprintf_internal_r+0x13a0>
  839350:	df002787 	ldb	fp,158(sp)
  839354:	42000204 	addi	r8,r8,8
  839358:	e0000c26 	beq	fp,zero,83938c <___vfprintf_internal_r+0x8c8>
  83935c:	d8801f17 	ldw	r2,124(sp)
  839360:	d9002784 	addi	r4,sp,158
  839364:	18c00044 	addi	r3,r3,1
  839368:	10800044 	addi	r2,r2,1
  83936c:	41000015 	stw	r4,0(r8)
  839370:	01000044 	movi	r4,1
  839374:	41000115 	stw	r4,4(r8)
  839378:	d8c02015 	stw	r3,128(sp)
  83937c:	d8801f15 	stw	r2,124(sp)
  839380:	010001c4 	movi	r4,7
  839384:	20825e16 	blt	r4,r2,839d00 <___vfprintf_internal_r+0x123c>
  839388:	42000204 	addi	r8,r8,8
  83938c:	d8802c17 	ldw	r2,176(sp)
  839390:	10000c26 	beq	r2,zero,8393c4 <___vfprintf_internal_r+0x900>
  839394:	d8801f17 	ldw	r2,124(sp)
  839398:	d9002704 	addi	r4,sp,156
  83939c:	18c00084 	addi	r3,r3,2
  8393a0:	10800044 	addi	r2,r2,1
  8393a4:	41000015 	stw	r4,0(r8)
  8393a8:	01000084 	movi	r4,2
  8393ac:	41000115 	stw	r4,4(r8)
  8393b0:	d8c02015 	stw	r3,128(sp)
  8393b4:	d8801f15 	stw	r2,124(sp)
  8393b8:	010001c4 	movi	r4,7
  8393bc:	20825816 	blt	r4,r2,839d20 <___vfprintf_internal_r+0x125c>
  8393c0:	42000204 	addi	r8,r8,8
  8393c4:	d9003017 	ldw	r4,192(sp)
  8393c8:	00802004 	movi	r2,128
  8393cc:	2081bb26 	beq	r4,r2,839abc <___vfprintf_internal_r+0xff8>
  8393d0:	d9402a17 	ldw	r5,168(sp)
  8393d4:	d8802b17 	ldw	r2,172(sp)
  8393d8:	28adc83a 	sub	r22,r5,r2
  8393dc:	0580310e 	bge	zero,r22,8394a4 <___vfprintf_internal_r+0x9e0>
  8393e0:	07000404 	movi	fp,16
  8393e4:	d8801f17 	ldw	r2,124(sp)
  8393e8:	e584360e 	bge	fp,r22,83a4c4 <___vfprintf_internal_r+0x1a00>
  8393ec:	014021b4 	movhi	r5,134
  8393f0:	29645404 	addi	r5,r5,-28336
  8393f4:	dc402a15 	stw	r17,168(sp)
  8393f8:	d9402c15 	stw	r5,176(sp)
  8393fc:	b023883a 	mov	r17,r22
  839400:	04c001c4 	movi	r19,7
  839404:	a82d883a 	mov	r22,r21
  839408:	902b883a 	mov	r21,r18
  83940c:	8025883a 	mov	r18,r16
  839410:	dc002d17 	ldw	r16,180(sp)
  839414:	00000306 	br	839424 <___vfprintf_internal_r+0x960>
  839418:	8c7ffc04 	addi	r17,r17,-16
  83941c:	42000204 	addi	r8,r8,8
  839420:	e440110e 	bge	fp,r17,839468 <___vfprintf_internal_r+0x9a4>
  839424:	18c00404 	addi	r3,r3,16
  839428:	10800044 	addi	r2,r2,1
  83942c:	45000015 	stw	r20,0(r8)
  839430:	47000115 	stw	fp,4(r8)
  839434:	d8c02015 	stw	r3,128(sp)
  839438:	d8801f15 	stw	r2,124(sp)
  83943c:	98bff60e 	bge	r19,r2,839418 <__alt_mem_epcs_flash_controller_0+0xff830418>
  839440:	d9801e04 	addi	r6,sp,120
  839444:	b80b883a 	mov	r5,r23
  839448:	8009883a 	mov	r4,r16
  83944c:	0843f800 	call	843f80 <__sprint_r>
  839450:	103ea01e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  839454:	8c7ffc04 	addi	r17,r17,-16
  839458:	d8c02017 	ldw	r3,128(sp)
  83945c:	d8801f17 	ldw	r2,124(sp)
  839460:	da000404 	addi	r8,sp,16
  839464:	e47fef16 	blt	fp,r17,839424 <__alt_mem_epcs_flash_controller_0+0xff830424>
  839468:	9021883a 	mov	r16,r18
  83946c:	a825883a 	mov	r18,r21
  839470:	b02b883a 	mov	r21,r22
  839474:	882d883a 	mov	r22,r17
  839478:	dc402a17 	ldw	r17,168(sp)
  83947c:	d9002c17 	ldw	r4,176(sp)
  839480:	1d87883a 	add	r3,r3,r22
  839484:	10800044 	addi	r2,r2,1
  839488:	41000015 	stw	r4,0(r8)
  83948c:	45800115 	stw	r22,4(r8)
  839490:	d8c02015 	stw	r3,128(sp)
  839494:	d8801f15 	stw	r2,124(sp)
  839498:	010001c4 	movi	r4,7
  83949c:	20821016 	blt	r4,r2,839ce0 <___vfprintf_internal_r+0x121c>
  8394a0:	42000204 	addi	r8,r8,8
  8394a4:	9080400c 	andi	r2,r18,256
  8394a8:	10013a1e 	bne	r2,zero,839994 <___vfprintf_internal_r+0xed0>
  8394ac:	d9402b17 	ldw	r5,172(sp)
  8394b0:	d8801f17 	ldw	r2,124(sp)
  8394b4:	44000015 	stw	r16,0(r8)
  8394b8:	1947883a 	add	r3,r3,r5
  8394bc:	10800044 	addi	r2,r2,1
  8394c0:	41400115 	stw	r5,4(r8)
  8394c4:	d8c02015 	stw	r3,128(sp)
  8394c8:	d8801f15 	stw	r2,124(sp)
  8394cc:	010001c4 	movi	r4,7
  8394d0:	2081f516 	blt	r4,r2,839ca8 <___vfprintf_internal_r+0x11e4>
  8394d4:	42000204 	addi	r8,r8,8
  8394d8:	9480010c 	andi	r18,r18,4
  8394dc:	90003226 	beq	r18,zero,8395a8 <___vfprintf_internal_r+0xae4>
  8394e0:	d9403117 	ldw	r5,196(sp)
  8394e4:	d8802917 	ldw	r2,164(sp)
  8394e8:	28a1c83a 	sub	r16,r5,r2
  8394ec:	04002e0e 	bge	zero,r16,8395a8 <___vfprintf_internal_r+0xae4>
  8394f0:	04400404 	movi	r17,16
  8394f4:	d8801f17 	ldw	r2,124(sp)
  8394f8:	8c04c40e 	bge	r17,r16,83a80c <___vfprintf_internal_r+0x1d48>
  8394fc:	014021b4 	movhi	r5,134
  839500:	29645804 	addi	r5,r5,-28320
  839504:	d9403515 	stw	r5,212(sp)
  839508:	048001c4 	movi	r18,7
  83950c:	dcc02d17 	ldw	r19,180(sp)
  839510:	00000306 	br	839520 <___vfprintf_internal_r+0xa5c>
  839514:	843ffc04 	addi	r16,r16,-16
  839518:	42000204 	addi	r8,r8,8
  83951c:	8c00130e 	bge	r17,r16,83956c <___vfprintf_internal_r+0xaa8>
  839520:	010021b4 	movhi	r4,134
  839524:	18c00404 	addi	r3,r3,16
  839528:	10800044 	addi	r2,r2,1
  83952c:	21245804 	addi	r4,r4,-28320
  839530:	41000015 	stw	r4,0(r8)
  839534:	44400115 	stw	r17,4(r8)
  839538:	d8c02015 	stw	r3,128(sp)
  83953c:	d8801f15 	stw	r2,124(sp)
  839540:	90bff40e 	bge	r18,r2,839514 <__alt_mem_epcs_flash_controller_0+0xff830514>
  839544:	d9801e04 	addi	r6,sp,120
  839548:	b80b883a 	mov	r5,r23
  83954c:	9809883a 	mov	r4,r19
  839550:	0843f800 	call	843f80 <__sprint_r>
  839554:	103e5f1e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  839558:	843ffc04 	addi	r16,r16,-16
  83955c:	d8c02017 	ldw	r3,128(sp)
  839560:	d8801f17 	ldw	r2,124(sp)
  839564:	da000404 	addi	r8,sp,16
  839568:	8c3fed16 	blt	r17,r16,839520 <__alt_mem_epcs_flash_controller_0+0xff830520>
  83956c:	d9403517 	ldw	r5,212(sp)
  839570:	1c07883a 	add	r3,r3,r16
  839574:	10800044 	addi	r2,r2,1
  839578:	41400015 	stw	r5,0(r8)
  83957c:	44000115 	stw	r16,4(r8)
  839580:	d8c02015 	stw	r3,128(sp)
  839584:	d8801f15 	stw	r2,124(sp)
  839588:	010001c4 	movi	r4,7
  83958c:	2080060e 	bge	r4,r2,8395a8 <___vfprintf_internal_r+0xae4>
  839590:	d9002d17 	ldw	r4,180(sp)
  839594:	d9801e04 	addi	r6,sp,120
  839598:	b80b883a 	mov	r5,r23
  83959c:	0843f800 	call	843f80 <__sprint_r>
  8395a0:	103e4c1e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  8395a4:	d8c02017 	ldw	r3,128(sp)
  8395a8:	d8803117 	ldw	r2,196(sp)
  8395ac:	d9002917 	ldw	r4,164(sp)
  8395b0:	1100010e 	bge	r2,r4,8395b8 <___vfprintf_internal_r+0xaf4>
  8395b4:	2005883a 	mov	r2,r4
  8395b8:	d9402f17 	ldw	r5,188(sp)
  8395bc:	288b883a 	add	r5,r5,r2
  8395c0:	d9402f15 	stw	r5,188(sp)
  8395c4:	1801c01e 	bne	r3,zero,839cc8 <___vfprintf_internal_r+0x1204>
  8395c8:	a8800007 	ldb	r2,0(r21)
  8395cc:	d8001f15 	stw	zero,124(sp)
  8395d0:	da000404 	addi	r8,sp,16
  8395d4:	103d751e 	bne	r2,zero,838bac <__alt_mem_epcs_flash_controller_0+0xff82fbac>
  8395d8:	a823883a 	mov	r17,r21
  8395dc:	003d8b06 	br	838c0c <__alt_mem_epcs_flash_controller_0+0xff82fc0c>
  8395e0:	8025883a 	mov	r18,r16
  8395e4:	dc002903 	ldbu	r16,164(sp)
  8395e8:	e011883a 	mov	r8,fp
  8395ec:	84003fcc 	andi	r16,r16,255
  8395f0:	8005e51e 	bne	r16,zero,83ad88 <___vfprintf_internal_r+0x22c4>
  8395f4:	94800414 	ori	r18,r18,16
  8395f8:	9080080c 	andi	r2,r18,32
  8395fc:	10022b26 	beq	r2,zero,839eac <___vfprintf_internal_r+0x13e8>
  839600:	d9002e17 	ldw	r4,184(sp)
  839604:	d9402a17 	ldw	r5,168(sp)
  839608:	d8002785 	stb	zero,158(sp)
  83960c:	20c00204 	addi	r3,r4,8
  839610:	24c00017 	ldw	r19,0(r4)
  839614:	25800117 	ldw	r22,4(r4)
  839618:	28042e16 	blt	r5,zero,83a6d4 <___vfprintf_internal_r+0x1c10>
  83961c:	013fdfc4 	movi	r4,-129
  839620:	9d84b03a 	or	r2,r19,r22
  839624:	d8c02e15 	stw	r3,184(sp)
  839628:	9124703a 	and	r18,r18,r4
  83962c:	0039883a 	mov	fp,zero
  839630:	103e801e 	bne	r2,zero,839034 <__alt_mem_epcs_flash_controller_0+0xff830034>
  839634:	d9002a17 	ldw	r4,168(sp)
  839638:	2002e01e 	bne	r4,zero,83a1bc <___vfprintf_internal_r+0x16f8>
  83963c:	d8002a15 	stw	zero,168(sp)
  839640:	d8002b15 	stw	zero,172(sp)
  839644:	dc001e04 	addi	r16,sp,120
  839648:	003ef506 	br	839220 <__alt_mem_epcs_flash_controller_0+0xff830220>
  83964c:	8025883a 	mov	r18,r16
  839650:	dc002903 	ldbu	r16,164(sp)
  839654:	e011883a 	mov	r8,fp
  839658:	84003fcc 	andi	r16,r16,255
  83965c:	8005ba1e 	bne	r16,zero,83ad48 <___vfprintf_internal_r+0x2284>
  839660:	010021b4 	movhi	r4,134
  839664:	21243504 	addi	r4,r4,-28460
  839668:	d9003915 	stw	r4,228(sp)
  83966c:	9080080c 	andi	r2,r18,32
  839670:	10006126 	beq	r2,zero,8397f8 <___vfprintf_internal_r+0xd34>
  839674:	d9402e17 	ldw	r5,184(sp)
  839678:	2cc00017 	ldw	r19,0(r5)
  83967c:	2d800117 	ldw	r22,4(r5)
  839680:	29400204 	addi	r5,r5,8
  839684:	d9402e15 	stw	r5,184(sp)
  839688:	9080004c 	andi	r2,r18,1
  83968c:	1001ac26 	beq	r2,zero,839d40 <___vfprintf_internal_r+0x127c>
  839690:	9d84b03a 	or	r2,r19,r22
  839694:	10038526 	beq	r2,zero,83a4ac <___vfprintf_internal_r+0x19e8>
  839698:	d8c02a17 	ldw	r3,168(sp)
  83969c:	00800c04 	movi	r2,48
  8396a0:	d8802705 	stb	r2,156(sp)
  8396a4:	dc402745 	stb	r17,157(sp)
  8396a8:	d8002785 	stb	zero,158(sp)
  8396ac:	90800094 	ori	r2,r18,2
  8396b0:	18047916 	blt	r3,zero,83a898 <___vfprintf_internal_r+0x1dd4>
  8396b4:	00bfdfc4 	movi	r2,-129
  8396b8:	90a4703a 	and	r18,r18,r2
  8396bc:	94800094 	ori	r18,r18,2
  8396c0:	0039883a 	mov	fp,zero
  8396c4:	d9003917 	ldw	r4,228(sp)
  8396c8:	dc001e04 	addi	r16,sp,120
  8396cc:	988003cc 	andi	r2,r19,15
  8396d0:	b006973a 	slli	r3,r22,28
  8396d4:	2085883a 	add	r2,r4,r2
  8396d8:	9826d13a 	srli	r19,r19,4
  8396dc:	10800003 	ldbu	r2,0(r2)
  8396e0:	b02cd13a 	srli	r22,r22,4
  8396e4:	843fffc4 	addi	r16,r16,-1
  8396e8:	1ce6b03a 	or	r19,r3,r19
  8396ec:	80800005 	stb	r2,0(r16)
  8396f0:	9d84b03a 	or	r2,r19,r22
  8396f4:	103ff51e 	bne	r2,zero,8396cc <__alt_mem_epcs_flash_controller_0+0xff8306cc>
  8396f8:	d8c02817 	ldw	r3,160(sp)
  8396fc:	1c07c83a 	sub	r3,r3,r16
  839700:	d8c02b15 	stw	r3,172(sp)
  839704:	003ec606 	br	839220 <__alt_mem_epcs_flash_controller_0+0xff830220>
  839708:	8025883a 	mov	r18,r16
  83970c:	dc002903 	ldbu	r16,164(sp)
  839710:	e011883a 	mov	r8,fp
  839714:	84003fcc 	andi	r16,r16,255
  839718:	803e9626 	beq	r16,zero,839174 <__alt_mem_epcs_flash_controller_0+0xff830174>
  83971c:	d8c02b03 	ldbu	r3,172(sp)
  839720:	d8c02785 	stb	r3,158(sp)
  839724:	003e9306 	br	839174 <__alt_mem_epcs_flash_controller_0+0xff830174>
  839728:	00c00044 	movi	r3,1
  83972c:	d8c02905 	stb	r3,164(sp)
  839730:	00c00ac4 	movi	r3,43
  839734:	d8c02b05 	stb	r3,172(sp)
  839738:	ac400007 	ldb	r17,0(r21)
  83973c:	003d4306 	br	838c4c <__alt_mem_epcs_flash_controller_0+0xff82fc4c>
  839740:	84000814 	ori	r16,r16,32
  839744:	ac400007 	ldb	r17,0(r21)
  839748:	003d4006 	br	838c4c <__alt_mem_epcs_flash_controller_0+0xff82fc4c>
  83974c:	d8802e17 	ldw	r2,184(sp)
  839750:	8025883a 	mov	r18,r16
  839754:	d8002785 	stb	zero,158(sp)
  839758:	14000017 	ldw	r16,0(r2)
  83975c:	e011883a 	mov	r8,fp
  839760:	14c00104 	addi	r19,r2,4
  839764:	80042d26 	beq	r16,zero,83a81c <___vfprintf_internal_r+0x1d58>
  839768:	d8c02a17 	ldw	r3,168(sp)
  83976c:	1803e416 	blt	r3,zero,83a700 <___vfprintf_internal_r+0x1c3c>
  839770:	180d883a 	mov	r6,r3
  839774:	000b883a 	mov	r5,zero
  839778:	8009883a 	mov	r4,r16
  83977c:	df003d15 	stw	fp,244(sp)
  839780:	083d5600 	call	83d560 <memchr>
  839784:	da003d17 	ldw	r8,244(sp)
  839788:	10046826 	beq	r2,zero,83a92c <___vfprintf_internal_r+0x1e68>
  83978c:	1405c83a 	sub	r2,r2,r16
  839790:	d8802b15 	stw	r2,172(sp)
  839794:	1003e016 	blt	r2,zero,83a718 <___vfprintf_internal_r+0x1c54>
  839798:	df002783 	ldbu	fp,158(sp)
  83979c:	d8802915 	stw	r2,164(sp)
  8397a0:	dcc02e15 	stw	r19,184(sp)
  8397a4:	d8002a15 	stw	zero,168(sp)
  8397a8:	d8003215 	stw	zero,200(sp)
  8397ac:	003ea206 	br	839238 <__alt_mem_epcs_flash_controller_0+0xff830238>
  8397b0:	8025883a 	mov	r18,r16
  8397b4:	dc002903 	ldbu	r16,164(sp)
  8397b8:	e011883a 	mov	r8,fp
  8397bc:	84003fcc 	andi	r16,r16,255
  8397c0:	803f8d26 	beq	r16,zero,8395f8 <__alt_mem_epcs_flash_controller_0+0xff8305f8>
  8397c4:	d8c02b03 	ldbu	r3,172(sp)
  8397c8:	d8c02785 	stb	r3,158(sp)
  8397cc:	003f8a06 	br	8395f8 <__alt_mem_epcs_flash_controller_0+0xff8305f8>
  8397d0:	8025883a 	mov	r18,r16
  8397d4:	dc002903 	ldbu	r16,164(sp)
  8397d8:	e011883a 	mov	r8,fp
  8397dc:	84003fcc 	andi	r16,r16,255
  8397e0:	8005661e 	bne	r16,zero,83ad7c <___vfprintf_internal_r+0x22b8>
  8397e4:	010021b4 	movhi	r4,134
  8397e8:	21243a04 	addi	r4,r4,-28440
  8397ec:	d9003915 	stw	r4,228(sp)
  8397f0:	9080080c 	andi	r2,r18,32
  8397f4:	103f9f1e 	bne	r2,zero,839674 <__alt_mem_epcs_flash_controller_0+0xff830674>
  8397f8:	9080040c 	andi	r2,r18,16
  8397fc:	1002eb26 	beq	r2,zero,83a3ac <___vfprintf_internal_r+0x18e8>
  839800:	d8802e17 	ldw	r2,184(sp)
  839804:	002d883a 	mov	r22,zero
  839808:	14c00017 	ldw	r19,0(r2)
  83980c:	10800104 	addi	r2,r2,4
  839810:	d8802e15 	stw	r2,184(sp)
  839814:	003f9c06 	br	839688 <__alt_mem_epcs_flash_controller_0+0xff830688>
  839818:	d8802b07 	ldb	r2,172(sp)
  83981c:	1002e11e 	bne	r2,zero,83a3a4 <___vfprintf_internal_r+0x18e0>
  839820:	00c00044 	movi	r3,1
  839824:	d8c02905 	stb	r3,164(sp)
  839828:	00c00804 	movi	r3,32
  83982c:	d8c02b05 	stb	r3,172(sp)
  839830:	ac400007 	ldb	r17,0(r21)
  839834:	003d0506 	br	838c4c <__alt_mem_epcs_flash_controller_0+0xff82fc4c>
  839838:	84000054 	ori	r16,r16,1
  83983c:	ac400007 	ldb	r17,0(r21)
  839840:	003d0206 	br	838c4c <__alt_mem_epcs_flash_controller_0+0xff82fc4c>
  839844:	8025883a 	mov	r18,r16
  839848:	dc002903 	ldbu	r16,164(sp)
  83984c:	e011883a 	mov	r8,fp
  839850:	84003fcc 	andi	r16,r16,255
  839854:	803de726 	beq	r16,zero,838ff4 <__alt_mem_epcs_flash_controller_0+0xff82fff4>
  839858:	d8c02b03 	ldbu	r3,172(sp)
  83985c:	d8c02785 	stb	r3,158(sp)
  839860:	003de406 	br	838ff4 <__alt_mem_epcs_flash_controller_0+0xff82fff4>
  839864:	84001014 	ori	r16,r16,64
  839868:	ac400007 	ldb	r17,0(r21)
  83986c:	003cf706 	br	838c4c <__alt_mem_epcs_flash_controller_0+0xff82fc4c>
  839870:	ac400007 	ldb	r17,0(r21)
  839874:	00801b04 	movi	r2,108
  839878:	88838f26 	beq	r17,r2,83a6b8 <___vfprintf_internal_r+0x1bf4>
  83987c:	84000414 	ori	r16,r16,16
  839880:	003cf206 	br	838c4c <__alt_mem_epcs_flash_controller_0+0xff82fc4c>
  839884:	8025883a 	mov	r18,r16
  839888:	dc002903 	ldbu	r16,164(sp)
  83988c:	e011883a 	mov	r8,fp
  839890:	84003fcc 	andi	r16,r16,255
  839894:	80053f1e 	bne	r16,zero,83ad94 <___vfprintf_internal_r+0x22d0>
  839898:	9080080c 	andi	r2,r18,32
  83989c:	1002d226 	beq	r2,zero,83a3e8 <___vfprintf_internal_r+0x1924>
  8398a0:	d9002e17 	ldw	r4,184(sp)
  8398a4:	d9402f17 	ldw	r5,188(sp)
  8398a8:	20800017 	ldw	r2,0(r4)
  8398ac:	2807d7fa 	srai	r3,r5,31
  8398b0:	21000104 	addi	r4,r4,4
  8398b4:	d9002e15 	stw	r4,184(sp)
  8398b8:	11400015 	stw	r5,0(r2)
  8398bc:	10c00115 	stw	r3,4(r2)
  8398c0:	003cb806 	br	838ba4 <__alt_mem_epcs_flash_controller_0+0xff82fba4>
  8398c4:	d8c02e17 	ldw	r3,184(sp)
  8398c8:	d9002e17 	ldw	r4,184(sp)
  8398cc:	8025883a 	mov	r18,r16
  8398d0:	18800017 	ldw	r2,0(r3)
  8398d4:	21000104 	addi	r4,r4,4
  8398d8:	00c00044 	movi	r3,1
  8398dc:	e011883a 	mov	r8,fp
  8398e0:	d8c02915 	stw	r3,164(sp)
  8398e4:	d8002785 	stb	zero,158(sp)
  8398e8:	d8801405 	stb	r2,80(sp)
  8398ec:	d9002e15 	stw	r4,184(sp)
  8398f0:	d8c02b15 	stw	r3,172(sp)
  8398f4:	d8002a15 	stw	zero,168(sp)
  8398f8:	d8003215 	stw	zero,200(sp)
  8398fc:	dc001404 	addi	r16,sp,80
  839900:	0039883a 	mov	fp,zero
  839904:	003e5306 	br	839254 <__alt_mem_epcs_flash_controller_0+0xff830254>
  839908:	010021b4 	movhi	r4,134
  83990c:	21243a04 	addi	r4,r4,-28440
  839910:	0039883a 	mov	fp,zero
  839914:	d9003915 	stw	r4,228(sp)
  839918:	04401e04 	movi	r17,120
  83991c:	003f6906 	br	8396c4 <__alt_mem_epcs_flash_controller_0+0xff8306c4>
  839920:	8025883a 	mov	r18,r16
  839924:	dc002903 	ldbu	r16,164(sp)
  839928:	e011883a 	mov	r8,fp
  83992c:	84003fcc 	andi	r16,r16,255
  839930:	8005081e 	bne	r16,zero,83ad54 <___vfprintf_internal_r+0x2290>
  839934:	883d6126 	beq	r17,zero,838ebc <__alt_mem_epcs_flash_controller_0+0xff82febc>
  839938:	00c00044 	movi	r3,1
  83993c:	d8c02915 	stw	r3,164(sp)
  839940:	dc401405 	stb	r17,80(sp)
  839944:	d8002785 	stb	zero,158(sp)
  839948:	003fe906 	br	8398f0 <__alt_mem_epcs_flash_controller_0+0xff8308f0>
  83994c:	014021b4 	movhi	r5,134
  839950:	29643a04 	addi	r5,r5,-28440
  839954:	d9403915 	stw	r5,228(sp)
  839958:	d8c02e15 	stw	r3,184(sp)
  83995c:	1025883a 	mov	r18,r2
  839960:	04401e04 	movi	r17,120
  839964:	9d84b03a 	or	r2,r19,r22
  839968:	1000fc1e 	bne	r2,zero,839d5c <___vfprintf_internal_r+0x1298>
  83996c:	0039883a 	mov	fp,zero
  839970:	00800084 	movi	r2,2
  839974:	10803fcc 	andi	r2,r2,255
  839978:	00c00044 	movi	r3,1
  83997c:	10c20f26 	beq	r2,r3,83a1bc <___vfprintf_internal_r+0x16f8>
  839980:	00c00084 	movi	r3,2
  839984:	10fd3326 	beq	r2,r3,838e54 <__alt_mem_epcs_flash_controller_0+0xff82fe54>
  839988:	003e0b06 	br	8391b8 <__alt_mem_epcs_flash_controller_0+0xff8301b8>
  83998c:	d8c02017 	ldw	r3,128(sp)
  839990:	003e7106 	br	839358 <__alt_mem_epcs_flash_controller_0+0xff830358>
  839994:	00801944 	movi	r2,101
  839998:	14407e0e 	bge	r2,r17,839b94 <___vfprintf_internal_r+0x10d0>
  83999c:	d9003617 	ldw	r4,216(sp)
  8399a0:	d9403817 	ldw	r5,224(sp)
  8399a4:	000d883a 	mov	r6,zero
  8399a8:	000f883a 	mov	r7,zero
  8399ac:	d8c03c15 	stw	r3,240(sp)
  8399b0:	da003d15 	stw	r8,244(sp)
  8399b4:	08487ac0 	call	8487ac <__eqdf2>
  8399b8:	d8c03c17 	ldw	r3,240(sp)
  8399bc:	da003d17 	ldw	r8,244(sp)
  8399c0:	1000f71e 	bne	r2,zero,839da0 <___vfprintf_internal_r+0x12dc>
  8399c4:	d8801f17 	ldw	r2,124(sp)
  8399c8:	010021b4 	movhi	r4,134
  8399cc:	21244104 	addi	r4,r4,-28412
  8399d0:	18c00044 	addi	r3,r3,1
  8399d4:	10800044 	addi	r2,r2,1
  8399d8:	41000015 	stw	r4,0(r8)
  8399dc:	01000044 	movi	r4,1
  8399e0:	41000115 	stw	r4,4(r8)
  8399e4:	d8c02015 	stw	r3,128(sp)
  8399e8:	d8801f15 	stw	r2,124(sp)
  8399ec:	010001c4 	movi	r4,7
  8399f0:	2082b816 	blt	r4,r2,83a4d4 <___vfprintf_internal_r+0x1a10>
  8399f4:	42000204 	addi	r8,r8,8
  8399f8:	d8802617 	ldw	r2,152(sp)
  8399fc:	d9403317 	ldw	r5,204(sp)
  839a00:	11400216 	blt	r2,r5,839a0c <___vfprintf_internal_r+0xf48>
  839a04:	9080004c 	andi	r2,r18,1
  839a08:	103eb326 	beq	r2,zero,8394d8 <__alt_mem_epcs_flash_controller_0+0xff8304d8>
  839a0c:	d8803717 	ldw	r2,220(sp)
  839a10:	d9003417 	ldw	r4,208(sp)
  839a14:	d9403717 	ldw	r5,220(sp)
  839a18:	1887883a 	add	r3,r3,r2
  839a1c:	d8801f17 	ldw	r2,124(sp)
  839a20:	41000015 	stw	r4,0(r8)
  839a24:	41400115 	stw	r5,4(r8)
  839a28:	10800044 	addi	r2,r2,1
  839a2c:	d8c02015 	stw	r3,128(sp)
  839a30:	d8801f15 	stw	r2,124(sp)
  839a34:	010001c4 	movi	r4,7
  839a38:	20832916 	blt	r4,r2,83a6e0 <___vfprintf_internal_r+0x1c1c>
  839a3c:	42000204 	addi	r8,r8,8
  839a40:	d8803317 	ldw	r2,204(sp)
  839a44:	143fffc4 	addi	r16,r2,-1
  839a48:	043ea30e 	bge	zero,r16,8394d8 <__alt_mem_epcs_flash_controller_0+0xff8304d8>
  839a4c:	04400404 	movi	r17,16
  839a50:	d8801f17 	ldw	r2,124(sp)
  839a54:	8c00880e 	bge	r17,r16,839c78 <___vfprintf_internal_r+0x11b4>
  839a58:	014021b4 	movhi	r5,134
  839a5c:	29645404 	addi	r5,r5,-28336
  839a60:	d9402c15 	stw	r5,176(sp)
  839a64:	058001c4 	movi	r22,7
  839a68:	dcc02d17 	ldw	r19,180(sp)
  839a6c:	00000306 	br	839a7c <___vfprintf_internal_r+0xfb8>
  839a70:	42000204 	addi	r8,r8,8
  839a74:	843ffc04 	addi	r16,r16,-16
  839a78:	8c00820e 	bge	r17,r16,839c84 <___vfprintf_internal_r+0x11c0>
  839a7c:	18c00404 	addi	r3,r3,16
  839a80:	10800044 	addi	r2,r2,1
  839a84:	45000015 	stw	r20,0(r8)
  839a88:	44400115 	stw	r17,4(r8)
  839a8c:	d8c02015 	stw	r3,128(sp)
  839a90:	d8801f15 	stw	r2,124(sp)
  839a94:	b0bff60e 	bge	r22,r2,839a70 <__alt_mem_epcs_flash_controller_0+0xff830a70>
  839a98:	d9801e04 	addi	r6,sp,120
  839a9c:	b80b883a 	mov	r5,r23
  839aa0:	9809883a 	mov	r4,r19
  839aa4:	0843f800 	call	843f80 <__sprint_r>
  839aa8:	103d0a1e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  839aac:	d8c02017 	ldw	r3,128(sp)
  839ab0:	d8801f17 	ldw	r2,124(sp)
  839ab4:	da000404 	addi	r8,sp,16
  839ab8:	003fee06 	br	839a74 <__alt_mem_epcs_flash_controller_0+0xff830a74>
  839abc:	d9403117 	ldw	r5,196(sp)
  839ac0:	d8802917 	ldw	r2,164(sp)
  839ac4:	28adc83a 	sub	r22,r5,r2
  839ac8:	05be410e 	bge	zero,r22,8393d0 <__alt_mem_epcs_flash_controller_0+0xff8303d0>
  839acc:	07000404 	movi	fp,16
  839ad0:	d8801f17 	ldw	r2,124(sp)
  839ad4:	e5838f0e 	bge	fp,r22,83a914 <___vfprintf_internal_r+0x1e50>
  839ad8:	014021b4 	movhi	r5,134
  839adc:	29645404 	addi	r5,r5,-28336
  839ae0:	dc403015 	stw	r17,192(sp)
  839ae4:	d9402c15 	stw	r5,176(sp)
  839ae8:	b023883a 	mov	r17,r22
  839aec:	04c001c4 	movi	r19,7
  839af0:	a82d883a 	mov	r22,r21
  839af4:	902b883a 	mov	r21,r18
  839af8:	8025883a 	mov	r18,r16
  839afc:	dc002d17 	ldw	r16,180(sp)
  839b00:	00000306 	br	839b10 <___vfprintf_internal_r+0x104c>
  839b04:	8c7ffc04 	addi	r17,r17,-16
  839b08:	42000204 	addi	r8,r8,8
  839b0c:	e440110e 	bge	fp,r17,839b54 <___vfprintf_internal_r+0x1090>
  839b10:	18c00404 	addi	r3,r3,16
  839b14:	10800044 	addi	r2,r2,1
  839b18:	45000015 	stw	r20,0(r8)
  839b1c:	47000115 	stw	fp,4(r8)
  839b20:	d8c02015 	stw	r3,128(sp)
  839b24:	d8801f15 	stw	r2,124(sp)
  839b28:	98bff60e 	bge	r19,r2,839b04 <__alt_mem_epcs_flash_controller_0+0xff830b04>
  839b2c:	d9801e04 	addi	r6,sp,120
  839b30:	b80b883a 	mov	r5,r23
  839b34:	8009883a 	mov	r4,r16
  839b38:	0843f800 	call	843f80 <__sprint_r>
  839b3c:	103ce51e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  839b40:	8c7ffc04 	addi	r17,r17,-16
  839b44:	d8c02017 	ldw	r3,128(sp)
  839b48:	d8801f17 	ldw	r2,124(sp)
  839b4c:	da000404 	addi	r8,sp,16
  839b50:	e47fef16 	blt	fp,r17,839b10 <__alt_mem_epcs_flash_controller_0+0xff830b10>
  839b54:	9021883a 	mov	r16,r18
  839b58:	a825883a 	mov	r18,r21
  839b5c:	b02b883a 	mov	r21,r22
  839b60:	882d883a 	mov	r22,r17
  839b64:	dc403017 	ldw	r17,192(sp)
  839b68:	d9002c17 	ldw	r4,176(sp)
  839b6c:	1d87883a 	add	r3,r3,r22
  839b70:	10800044 	addi	r2,r2,1
  839b74:	41000015 	stw	r4,0(r8)
  839b78:	45800115 	stw	r22,4(r8)
  839b7c:	d8c02015 	stw	r3,128(sp)
  839b80:	d8801f15 	stw	r2,124(sp)
  839b84:	010001c4 	movi	r4,7
  839b88:	20818e16 	blt	r4,r2,83a1c4 <___vfprintf_internal_r+0x1700>
  839b8c:	42000204 	addi	r8,r8,8
  839b90:	003e0f06 	br	8393d0 <__alt_mem_epcs_flash_controller_0+0xff8303d0>
  839b94:	d9403317 	ldw	r5,204(sp)
  839b98:	00800044 	movi	r2,1
  839b9c:	18c00044 	addi	r3,r3,1
  839ba0:	1141530e 	bge	r2,r5,83a0f0 <___vfprintf_internal_r+0x162c>
  839ba4:	dc401f17 	ldw	r17,124(sp)
  839ba8:	00800044 	movi	r2,1
  839bac:	40800115 	stw	r2,4(r8)
  839bb0:	8c400044 	addi	r17,r17,1
  839bb4:	44000015 	stw	r16,0(r8)
  839bb8:	d8c02015 	stw	r3,128(sp)
  839bbc:	dc401f15 	stw	r17,124(sp)
  839bc0:	008001c4 	movi	r2,7
  839bc4:	14416b16 	blt	r2,r17,83a174 <___vfprintf_internal_r+0x16b0>
  839bc8:	42000204 	addi	r8,r8,8
  839bcc:	d8803717 	ldw	r2,220(sp)
  839bd0:	d9003417 	ldw	r4,208(sp)
  839bd4:	8c400044 	addi	r17,r17,1
  839bd8:	10c7883a 	add	r3,r2,r3
  839bdc:	40800115 	stw	r2,4(r8)
  839be0:	41000015 	stw	r4,0(r8)
  839be4:	d8c02015 	stw	r3,128(sp)
  839be8:	dc401f15 	stw	r17,124(sp)
  839bec:	008001c4 	movi	r2,7
  839bf0:	14416916 	blt	r2,r17,83a198 <___vfprintf_internal_r+0x16d4>
  839bf4:	45800204 	addi	r22,r8,8
  839bf8:	d9003617 	ldw	r4,216(sp)
  839bfc:	d9403817 	ldw	r5,224(sp)
  839c00:	000d883a 	mov	r6,zero
  839c04:	000f883a 	mov	r7,zero
  839c08:	d8c03c15 	stw	r3,240(sp)
  839c0c:	08487ac0 	call	8487ac <__eqdf2>
  839c10:	d8c03c17 	ldw	r3,240(sp)
  839c14:	1000bc26 	beq	r2,zero,839f08 <___vfprintf_internal_r+0x1444>
  839c18:	d9403317 	ldw	r5,204(sp)
  839c1c:	84000044 	addi	r16,r16,1
  839c20:	8c400044 	addi	r17,r17,1
  839c24:	28bfffc4 	addi	r2,r5,-1
  839c28:	1887883a 	add	r3,r3,r2
  839c2c:	b0800115 	stw	r2,4(r22)
  839c30:	b4000015 	stw	r16,0(r22)
  839c34:	d8c02015 	stw	r3,128(sp)
  839c38:	dc401f15 	stw	r17,124(sp)
  839c3c:	008001c4 	movi	r2,7
  839c40:	14414316 	blt	r2,r17,83a150 <___vfprintf_internal_r+0x168c>
  839c44:	b5800204 	addi	r22,r22,8
  839c48:	d9003a17 	ldw	r4,232(sp)
  839c4c:	df0022c4 	addi	fp,sp,139
  839c50:	8c400044 	addi	r17,r17,1
  839c54:	20c7883a 	add	r3,r4,r3
  839c58:	b7000015 	stw	fp,0(r22)
  839c5c:	b1000115 	stw	r4,4(r22)
  839c60:	d8c02015 	stw	r3,128(sp)
  839c64:	dc401f15 	stw	r17,124(sp)
  839c68:	008001c4 	movi	r2,7
  839c6c:	14400e16 	blt	r2,r17,839ca8 <___vfprintf_internal_r+0x11e4>
  839c70:	b2000204 	addi	r8,r22,8
  839c74:	003e1806 	br	8394d8 <__alt_mem_epcs_flash_controller_0+0xff8304d8>
  839c78:	010021b4 	movhi	r4,134
  839c7c:	21245404 	addi	r4,r4,-28336
  839c80:	d9002c15 	stw	r4,176(sp)
  839c84:	d9002c17 	ldw	r4,176(sp)
  839c88:	1c07883a 	add	r3,r3,r16
  839c8c:	44000115 	stw	r16,4(r8)
  839c90:	41000015 	stw	r4,0(r8)
  839c94:	10800044 	addi	r2,r2,1
  839c98:	d8c02015 	stw	r3,128(sp)
  839c9c:	d8801f15 	stw	r2,124(sp)
  839ca0:	010001c4 	movi	r4,7
  839ca4:	20be0b0e 	bge	r4,r2,8394d4 <__alt_mem_epcs_flash_controller_0+0xff8304d4>
  839ca8:	d9002d17 	ldw	r4,180(sp)
  839cac:	d9801e04 	addi	r6,sp,120
  839cb0:	b80b883a 	mov	r5,r23
  839cb4:	0843f800 	call	843f80 <__sprint_r>
  839cb8:	103c861e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  839cbc:	d8c02017 	ldw	r3,128(sp)
  839cc0:	da000404 	addi	r8,sp,16
  839cc4:	003e0406 	br	8394d8 <__alt_mem_epcs_flash_controller_0+0xff8304d8>
  839cc8:	d9002d17 	ldw	r4,180(sp)
  839ccc:	d9801e04 	addi	r6,sp,120
  839cd0:	b80b883a 	mov	r5,r23
  839cd4:	0843f800 	call	843f80 <__sprint_r>
  839cd8:	103e3b26 	beq	r2,zero,8395c8 <__alt_mem_epcs_flash_controller_0+0xff8305c8>
  839cdc:	003c7d06 	br	838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  839ce0:	d9002d17 	ldw	r4,180(sp)
  839ce4:	d9801e04 	addi	r6,sp,120
  839ce8:	b80b883a 	mov	r5,r23
  839cec:	0843f800 	call	843f80 <__sprint_r>
  839cf0:	103c781e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  839cf4:	d8c02017 	ldw	r3,128(sp)
  839cf8:	da000404 	addi	r8,sp,16
  839cfc:	003de906 	br	8394a4 <__alt_mem_epcs_flash_controller_0+0xff8304a4>
  839d00:	d9002d17 	ldw	r4,180(sp)
  839d04:	d9801e04 	addi	r6,sp,120
  839d08:	b80b883a 	mov	r5,r23
  839d0c:	0843f800 	call	843f80 <__sprint_r>
  839d10:	103c701e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  839d14:	d8c02017 	ldw	r3,128(sp)
  839d18:	da000404 	addi	r8,sp,16
  839d1c:	003d9b06 	br	83938c <__alt_mem_epcs_flash_controller_0+0xff83038c>
  839d20:	d9002d17 	ldw	r4,180(sp)
  839d24:	d9801e04 	addi	r6,sp,120
  839d28:	b80b883a 	mov	r5,r23
  839d2c:	0843f800 	call	843f80 <__sprint_r>
  839d30:	103c681e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  839d34:	d8c02017 	ldw	r3,128(sp)
  839d38:	da000404 	addi	r8,sp,16
  839d3c:	003da106 	br	8393c4 <__alt_mem_epcs_flash_controller_0+0xff8303c4>
  839d40:	d9402a17 	ldw	r5,168(sp)
  839d44:	d8002785 	stb	zero,158(sp)
  839d48:	283f0616 	blt	r5,zero,839964 <__alt_mem_epcs_flash_controller_0+0xff830964>
  839d4c:	00ffdfc4 	movi	r3,-129
  839d50:	9d84b03a 	or	r2,r19,r22
  839d54:	90e4703a 	and	r18,r18,r3
  839d58:	103c3b26 	beq	r2,zero,838e48 <__alt_mem_epcs_flash_controller_0+0xff82fe48>
  839d5c:	0039883a 	mov	fp,zero
  839d60:	003e5806 	br	8396c4 <__alt_mem_epcs_flash_controller_0+0xff8306c4>
  839d64:	9080040c 	andi	r2,r18,16
  839d68:	1001b326 	beq	r2,zero,83a438 <___vfprintf_internal_r+0x1974>
  839d6c:	d8c02e17 	ldw	r3,184(sp)
  839d70:	d9002a17 	ldw	r4,168(sp)
  839d74:	d8002785 	stb	zero,158(sp)
  839d78:	18800104 	addi	r2,r3,4
  839d7c:	1cc00017 	ldw	r19,0(r3)
  839d80:	002d883a 	mov	r22,zero
  839d84:	2001b516 	blt	r4,zero,83a45c <___vfprintf_internal_r+0x1998>
  839d88:	00ffdfc4 	movi	r3,-129
  839d8c:	d8802e15 	stw	r2,184(sp)
  839d90:	90e4703a 	and	r18,r18,r3
  839d94:	983d0526 	beq	r19,zero,8391ac <__alt_mem_epcs_flash_controller_0+0xff8301ac>
  839d98:	0039883a 	mov	fp,zero
  839d9c:	003d0806 	br	8391c0 <__alt_mem_epcs_flash_controller_0+0xff8301c0>
  839da0:	dc402617 	ldw	r17,152(sp)
  839da4:	0441d30e 	bge	zero,r17,83a4f4 <___vfprintf_internal_r+0x1a30>
  839da8:	dc403217 	ldw	r17,200(sp)
  839dac:	d8803317 	ldw	r2,204(sp)
  839db0:	1440010e 	bge	r2,r17,839db8 <___vfprintf_internal_r+0x12f4>
  839db4:	1023883a 	mov	r17,r2
  839db8:	04400a0e 	bge	zero,r17,839de4 <___vfprintf_internal_r+0x1320>
  839dbc:	d8801f17 	ldw	r2,124(sp)
  839dc0:	1c47883a 	add	r3,r3,r17
  839dc4:	44000015 	stw	r16,0(r8)
  839dc8:	10800044 	addi	r2,r2,1
  839dcc:	44400115 	stw	r17,4(r8)
  839dd0:	d8c02015 	stw	r3,128(sp)
  839dd4:	d8801f15 	stw	r2,124(sp)
  839dd8:	010001c4 	movi	r4,7
  839ddc:	20826516 	blt	r4,r2,83a774 <___vfprintf_internal_r+0x1cb0>
  839de0:	42000204 	addi	r8,r8,8
  839de4:	88026116 	blt	r17,zero,83a76c <___vfprintf_internal_r+0x1ca8>
  839de8:	d9003217 	ldw	r4,200(sp)
  839dec:	2463c83a 	sub	r17,r4,r17
  839df0:	04407b0e 	bge	zero,r17,839fe0 <___vfprintf_internal_r+0x151c>
  839df4:	05800404 	movi	r22,16
  839df8:	d8801f17 	ldw	r2,124(sp)
  839dfc:	b4419d0e 	bge	r22,r17,83a474 <___vfprintf_internal_r+0x19b0>
  839e00:	010021b4 	movhi	r4,134
  839e04:	21245404 	addi	r4,r4,-28336
  839e08:	d9002c15 	stw	r4,176(sp)
  839e0c:	070001c4 	movi	fp,7
  839e10:	dcc02d17 	ldw	r19,180(sp)
  839e14:	00000306 	br	839e24 <___vfprintf_internal_r+0x1360>
  839e18:	42000204 	addi	r8,r8,8
  839e1c:	8c7ffc04 	addi	r17,r17,-16
  839e20:	b441970e 	bge	r22,r17,83a480 <___vfprintf_internal_r+0x19bc>
  839e24:	18c00404 	addi	r3,r3,16
  839e28:	10800044 	addi	r2,r2,1
  839e2c:	45000015 	stw	r20,0(r8)
  839e30:	45800115 	stw	r22,4(r8)
  839e34:	d8c02015 	stw	r3,128(sp)
  839e38:	d8801f15 	stw	r2,124(sp)
  839e3c:	e0bff60e 	bge	fp,r2,839e18 <__alt_mem_epcs_flash_controller_0+0xff830e18>
  839e40:	d9801e04 	addi	r6,sp,120
  839e44:	b80b883a 	mov	r5,r23
  839e48:	9809883a 	mov	r4,r19
  839e4c:	0843f800 	call	843f80 <__sprint_r>
  839e50:	103c201e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  839e54:	d8c02017 	ldw	r3,128(sp)
  839e58:	d8801f17 	ldw	r2,124(sp)
  839e5c:	da000404 	addi	r8,sp,16
  839e60:	003fee06 	br	839e1c <__alt_mem_epcs_flash_controller_0+0xff830e1c>
  839e64:	d9002d17 	ldw	r4,180(sp)
  839e68:	d9801e04 	addi	r6,sp,120
  839e6c:	b80b883a 	mov	r5,r23
  839e70:	0843f800 	call	843f80 <__sprint_r>
  839e74:	103c171e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  839e78:	d8c02017 	ldw	r3,128(sp)
  839e7c:	df002787 	ldb	fp,158(sp)
  839e80:	da000404 	addi	r8,sp,16
  839e84:	003d3406 	br	839358 <__alt_mem_epcs_flash_controller_0+0xff830358>
  839e88:	9080040c 	andi	r2,r18,16
  839e8c:	10016126 	beq	r2,zero,83a414 <___vfprintf_internal_r+0x1950>
  839e90:	d9402e17 	ldw	r5,184(sp)
  839e94:	2cc00017 	ldw	r19,0(r5)
  839e98:	29400104 	addi	r5,r5,4
  839e9c:	d9402e15 	stw	r5,184(sp)
  839ea0:	982dd7fa 	srai	r22,r19,31
  839ea4:	b005883a 	mov	r2,r22
  839ea8:	003c5a06 	br	839014 <__alt_mem_epcs_flash_controller_0+0xff830014>
  839eac:	9080040c 	andi	r2,r18,16
  839eb0:	10003526 	beq	r2,zero,839f88 <___vfprintf_internal_r+0x14c4>
  839eb4:	d8c02e17 	ldw	r3,184(sp)
  839eb8:	d9002a17 	ldw	r4,168(sp)
  839ebc:	d8002785 	stb	zero,158(sp)
  839ec0:	18800104 	addi	r2,r3,4
  839ec4:	1cc00017 	ldw	r19,0(r3)
  839ec8:	002d883a 	mov	r22,zero
  839ecc:	20003716 	blt	r4,zero,839fac <___vfprintf_internal_r+0x14e8>
  839ed0:	00ffdfc4 	movi	r3,-129
  839ed4:	d8802e15 	stw	r2,184(sp)
  839ed8:	90e4703a 	and	r18,r18,r3
  839edc:	0039883a 	mov	fp,zero
  839ee0:	983dd426 	beq	r19,zero,839634 <__alt_mem_epcs_flash_controller_0+0xff830634>
  839ee4:	00800244 	movi	r2,9
  839ee8:	14fc5336 	bltu	r2,r19,839038 <__alt_mem_epcs_flash_controller_0+0xff830038>
  839eec:	d8c02817 	ldw	r3,160(sp)
  839ef0:	dc001dc4 	addi	r16,sp,119
  839ef4:	9cc00c04 	addi	r19,r19,48
  839ef8:	1c07c83a 	sub	r3,r3,r16
  839efc:	dcc01dc5 	stb	r19,119(sp)
  839f00:	d8c02b15 	stw	r3,172(sp)
  839f04:	003cc606 	br	839220 <__alt_mem_epcs_flash_controller_0+0xff830220>
  839f08:	d8803317 	ldw	r2,204(sp)
  839f0c:	143fffc4 	addi	r16,r2,-1
  839f10:	043f4d0e 	bge	zero,r16,839c48 <__alt_mem_epcs_flash_controller_0+0xff830c48>
  839f14:	07000404 	movi	fp,16
  839f18:	e400810e 	bge	fp,r16,83a120 <___vfprintf_internal_r+0x165c>
  839f1c:	014021b4 	movhi	r5,134
  839f20:	29645404 	addi	r5,r5,-28336
  839f24:	d9402c15 	stw	r5,176(sp)
  839f28:	01c001c4 	movi	r7,7
  839f2c:	dcc02d17 	ldw	r19,180(sp)
  839f30:	00000306 	br	839f40 <___vfprintf_internal_r+0x147c>
  839f34:	b5800204 	addi	r22,r22,8
  839f38:	843ffc04 	addi	r16,r16,-16
  839f3c:	e4007b0e 	bge	fp,r16,83a12c <___vfprintf_internal_r+0x1668>
  839f40:	18c00404 	addi	r3,r3,16
  839f44:	8c400044 	addi	r17,r17,1
  839f48:	b5000015 	stw	r20,0(r22)
  839f4c:	b7000115 	stw	fp,4(r22)
  839f50:	d8c02015 	stw	r3,128(sp)
  839f54:	dc401f15 	stw	r17,124(sp)
  839f58:	3c7ff60e 	bge	r7,r17,839f34 <__alt_mem_epcs_flash_controller_0+0xff830f34>
  839f5c:	d9801e04 	addi	r6,sp,120
  839f60:	b80b883a 	mov	r5,r23
  839f64:	9809883a 	mov	r4,r19
  839f68:	d9c03c15 	stw	r7,240(sp)
  839f6c:	0843f800 	call	843f80 <__sprint_r>
  839f70:	d9c03c17 	ldw	r7,240(sp)
  839f74:	103bd71e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  839f78:	d8c02017 	ldw	r3,128(sp)
  839f7c:	dc401f17 	ldw	r17,124(sp)
  839f80:	dd800404 	addi	r22,sp,16
  839f84:	003fec06 	br	839f38 <__alt_mem_epcs_flash_controller_0+0xff830f38>
  839f88:	9080100c 	andi	r2,r18,64
  839f8c:	d8002785 	stb	zero,158(sp)
  839f90:	10010e26 	beq	r2,zero,83a3cc <___vfprintf_internal_r+0x1908>
  839f94:	d9402e17 	ldw	r5,184(sp)
  839f98:	d8c02a17 	ldw	r3,168(sp)
  839f9c:	002d883a 	mov	r22,zero
  839fa0:	28800104 	addi	r2,r5,4
  839fa4:	2cc0000b 	ldhu	r19,0(r5)
  839fa8:	183fc90e 	bge	r3,zero,839ed0 <__alt_mem_epcs_flash_controller_0+0xff830ed0>
  839fac:	d8802e15 	stw	r2,184(sp)
  839fb0:	0039883a 	mov	fp,zero
  839fb4:	9d84b03a 	or	r2,r19,r22
  839fb8:	103c1e1e 	bne	r2,zero,839034 <__alt_mem_epcs_flash_controller_0+0xff830034>
  839fbc:	00800044 	movi	r2,1
  839fc0:	003e6c06 	br	839974 <__alt_mem_epcs_flash_controller_0+0xff830974>
  839fc4:	d9002d17 	ldw	r4,180(sp)
  839fc8:	d9801e04 	addi	r6,sp,120
  839fcc:	b80b883a 	mov	r5,r23
  839fd0:	0843f800 	call	843f80 <__sprint_r>
  839fd4:	103bbf1e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  839fd8:	d8c02017 	ldw	r3,128(sp)
  839fdc:	da000404 	addi	r8,sp,16
  839fe0:	d9003217 	ldw	r4,200(sp)
  839fe4:	d8802617 	ldw	r2,152(sp)
  839fe8:	d9403317 	ldw	r5,204(sp)
  839fec:	8123883a 	add	r17,r16,r4
  839ff0:	11400216 	blt	r2,r5,839ffc <___vfprintf_internal_r+0x1538>
  839ff4:	9100004c 	andi	r4,r18,1
  839ff8:	20000d26 	beq	r4,zero,83a030 <___vfprintf_internal_r+0x156c>
  839ffc:	d9003717 	ldw	r4,220(sp)
  83a000:	d9403417 	ldw	r5,208(sp)
  83a004:	1907883a 	add	r3,r3,r4
  83a008:	d9001f17 	ldw	r4,124(sp)
  83a00c:	41400015 	stw	r5,0(r8)
  83a010:	d9403717 	ldw	r5,220(sp)
  83a014:	21000044 	addi	r4,r4,1
  83a018:	d8c02015 	stw	r3,128(sp)
  83a01c:	41400115 	stw	r5,4(r8)
  83a020:	d9001f15 	stw	r4,124(sp)
  83a024:	014001c4 	movi	r5,7
  83a028:	2901e816 	blt	r5,r4,83a7cc <___vfprintf_internal_r+0x1d08>
  83a02c:	42000204 	addi	r8,r8,8
  83a030:	d9003317 	ldw	r4,204(sp)
  83a034:	8121883a 	add	r16,r16,r4
  83a038:	2085c83a 	sub	r2,r4,r2
  83a03c:	8461c83a 	sub	r16,r16,r17
  83a040:	1400010e 	bge	r2,r16,83a048 <___vfprintf_internal_r+0x1584>
  83a044:	1021883a 	mov	r16,r2
  83a048:	04000a0e 	bge	zero,r16,83a074 <___vfprintf_internal_r+0x15b0>
  83a04c:	d9001f17 	ldw	r4,124(sp)
  83a050:	1c07883a 	add	r3,r3,r16
  83a054:	44400015 	stw	r17,0(r8)
  83a058:	21000044 	addi	r4,r4,1
  83a05c:	44000115 	stw	r16,4(r8)
  83a060:	d8c02015 	stw	r3,128(sp)
  83a064:	d9001f15 	stw	r4,124(sp)
  83a068:	014001c4 	movi	r5,7
  83a06c:	2901fb16 	blt	r5,r4,83a85c <___vfprintf_internal_r+0x1d98>
  83a070:	42000204 	addi	r8,r8,8
  83a074:	8001f716 	blt	r16,zero,83a854 <___vfprintf_internal_r+0x1d90>
  83a078:	1421c83a 	sub	r16,r2,r16
  83a07c:	043d160e 	bge	zero,r16,8394d8 <__alt_mem_epcs_flash_controller_0+0xff8304d8>
  83a080:	04400404 	movi	r17,16
  83a084:	d8801f17 	ldw	r2,124(sp)
  83a088:	8c3efb0e 	bge	r17,r16,839c78 <__alt_mem_epcs_flash_controller_0+0xff830c78>
  83a08c:	014021b4 	movhi	r5,134
  83a090:	29645404 	addi	r5,r5,-28336
  83a094:	d9402c15 	stw	r5,176(sp)
  83a098:	058001c4 	movi	r22,7
  83a09c:	dcc02d17 	ldw	r19,180(sp)
  83a0a0:	00000306 	br	83a0b0 <___vfprintf_internal_r+0x15ec>
  83a0a4:	42000204 	addi	r8,r8,8
  83a0a8:	843ffc04 	addi	r16,r16,-16
  83a0ac:	8c3ef50e 	bge	r17,r16,839c84 <__alt_mem_epcs_flash_controller_0+0xff830c84>
  83a0b0:	18c00404 	addi	r3,r3,16
  83a0b4:	10800044 	addi	r2,r2,1
  83a0b8:	45000015 	stw	r20,0(r8)
  83a0bc:	44400115 	stw	r17,4(r8)
  83a0c0:	d8c02015 	stw	r3,128(sp)
  83a0c4:	d8801f15 	stw	r2,124(sp)
  83a0c8:	b0bff60e 	bge	r22,r2,83a0a4 <__alt_mem_epcs_flash_controller_0+0xff8310a4>
  83a0cc:	d9801e04 	addi	r6,sp,120
  83a0d0:	b80b883a 	mov	r5,r23
  83a0d4:	9809883a 	mov	r4,r19
  83a0d8:	0843f800 	call	843f80 <__sprint_r>
  83a0dc:	103b7d1e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  83a0e0:	d8c02017 	ldw	r3,128(sp)
  83a0e4:	d8801f17 	ldw	r2,124(sp)
  83a0e8:	da000404 	addi	r8,sp,16
  83a0ec:	003fee06 	br	83a0a8 <__alt_mem_epcs_flash_controller_0+0xff8310a8>
  83a0f0:	9088703a 	and	r4,r18,r2
  83a0f4:	203eab1e 	bne	r4,zero,839ba4 <__alt_mem_epcs_flash_controller_0+0xff830ba4>
  83a0f8:	dc401f17 	ldw	r17,124(sp)
  83a0fc:	40800115 	stw	r2,4(r8)
  83a100:	44000015 	stw	r16,0(r8)
  83a104:	8c400044 	addi	r17,r17,1
  83a108:	d8c02015 	stw	r3,128(sp)
  83a10c:	dc401f15 	stw	r17,124(sp)
  83a110:	008001c4 	movi	r2,7
  83a114:	14400e16 	blt	r2,r17,83a150 <___vfprintf_internal_r+0x168c>
  83a118:	45800204 	addi	r22,r8,8
  83a11c:	003eca06 	br	839c48 <__alt_mem_epcs_flash_controller_0+0xff830c48>
  83a120:	010021b4 	movhi	r4,134
  83a124:	21245404 	addi	r4,r4,-28336
  83a128:	d9002c15 	stw	r4,176(sp)
  83a12c:	d8802c17 	ldw	r2,176(sp)
  83a130:	1c07883a 	add	r3,r3,r16
  83a134:	8c400044 	addi	r17,r17,1
  83a138:	b0800015 	stw	r2,0(r22)
  83a13c:	b4000115 	stw	r16,4(r22)
  83a140:	d8c02015 	stw	r3,128(sp)
  83a144:	dc401f15 	stw	r17,124(sp)
  83a148:	008001c4 	movi	r2,7
  83a14c:	147ebd0e 	bge	r2,r17,839c44 <__alt_mem_epcs_flash_controller_0+0xff830c44>
  83a150:	d9002d17 	ldw	r4,180(sp)
  83a154:	d9801e04 	addi	r6,sp,120
  83a158:	b80b883a 	mov	r5,r23
  83a15c:	0843f800 	call	843f80 <__sprint_r>
  83a160:	103b5c1e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  83a164:	d8c02017 	ldw	r3,128(sp)
  83a168:	dc401f17 	ldw	r17,124(sp)
  83a16c:	dd800404 	addi	r22,sp,16
  83a170:	003eb506 	br	839c48 <__alt_mem_epcs_flash_controller_0+0xff830c48>
  83a174:	d9002d17 	ldw	r4,180(sp)
  83a178:	d9801e04 	addi	r6,sp,120
  83a17c:	b80b883a 	mov	r5,r23
  83a180:	0843f800 	call	843f80 <__sprint_r>
  83a184:	103b531e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  83a188:	d8c02017 	ldw	r3,128(sp)
  83a18c:	dc401f17 	ldw	r17,124(sp)
  83a190:	da000404 	addi	r8,sp,16
  83a194:	003e8d06 	br	839bcc <__alt_mem_epcs_flash_controller_0+0xff830bcc>
  83a198:	d9002d17 	ldw	r4,180(sp)
  83a19c:	d9801e04 	addi	r6,sp,120
  83a1a0:	b80b883a 	mov	r5,r23
  83a1a4:	0843f800 	call	843f80 <__sprint_r>
  83a1a8:	103b4a1e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  83a1ac:	d8c02017 	ldw	r3,128(sp)
  83a1b0:	dc401f17 	ldw	r17,124(sp)
  83a1b4:	dd800404 	addi	r22,sp,16
  83a1b8:	003e8f06 	br	839bf8 <__alt_mem_epcs_flash_controller_0+0xff830bf8>
  83a1bc:	0027883a 	mov	r19,zero
  83a1c0:	003f4a06 	br	839eec <__alt_mem_epcs_flash_controller_0+0xff830eec>
  83a1c4:	d9002d17 	ldw	r4,180(sp)
  83a1c8:	d9801e04 	addi	r6,sp,120
  83a1cc:	b80b883a 	mov	r5,r23
  83a1d0:	0843f800 	call	843f80 <__sprint_r>
  83a1d4:	103b3f1e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  83a1d8:	d8c02017 	ldw	r3,128(sp)
  83a1dc:	da000404 	addi	r8,sp,16
  83a1e0:	003c7b06 	br	8393d0 <__alt_mem_epcs_flash_controller_0+0xff8303d0>
  83a1e4:	d9402a17 	ldw	r5,168(sp)
  83a1e8:	04e7c83a 	sub	r19,zero,r19
  83a1ec:	07000b44 	movi	fp,45
  83a1f0:	9804c03a 	cmpne	r2,r19,zero
  83a1f4:	05adc83a 	sub	r22,zero,r22
  83a1f8:	df002785 	stb	fp,158(sp)
  83a1fc:	b0adc83a 	sub	r22,r22,r2
  83a200:	28017b16 	blt	r5,zero,83a7f0 <___vfprintf_internal_r+0x1d2c>
  83a204:	00bfdfc4 	movi	r2,-129
  83a208:	90a4703a 	and	r18,r18,r2
  83a20c:	003b8906 	br	839034 <__alt_mem_epcs_flash_controller_0+0xff830034>
  83a210:	d9003617 	ldw	r4,216(sp)
  83a214:	d9403817 	ldw	r5,224(sp)
  83a218:	da003d15 	stw	r8,244(sp)
  83a21c:	083ee1c0 	call	83ee1c <__fpclassifyd>
  83a220:	da003d17 	ldw	r8,244(sp)
  83a224:	1000f026 	beq	r2,zero,83a5e8 <___vfprintf_internal_r+0x1b24>
  83a228:	d9002a17 	ldw	r4,168(sp)
  83a22c:	05bff7c4 	movi	r22,-33
  83a230:	00bfffc4 	movi	r2,-1
  83a234:	8dac703a 	and	r22,r17,r22
  83a238:	20820026 	beq	r4,r2,83aa3c <___vfprintf_internal_r+0x1f78>
  83a23c:	008011c4 	movi	r2,71
  83a240:	b081f726 	beq	r22,r2,83aa20 <___vfprintf_internal_r+0x1f5c>
  83a244:	d9003817 	ldw	r4,224(sp)
  83a248:	90c04014 	ori	r3,r18,256
  83a24c:	d8c02c15 	stw	r3,176(sp)
  83a250:	20021516 	blt	r4,zero,83aaa8 <___vfprintf_internal_r+0x1fe4>
  83a254:	dcc03817 	ldw	r19,224(sp)
  83a258:	d8002905 	stb	zero,164(sp)
  83a25c:	00801984 	movi	r2,102
  83a260:	8881f926 	beq	r17,r2,83aa48 <___vfprintf_internal_r+0x1f84>
  83a264:	00801184 	movi	r2,70
  83a268:	88821c26 	beq	r17,r2,83aadc <___vfprintf_internal_r+0x2018>
  83a26c:	00801144 	movi	r2,69
  83a270:	b081ef26 	beq	r22,r2,83aa30 <___vfprintf_internal_r+0x1f6c>
  83a274:	d8c02a17 	ldw	r3,168(sp)
  83a278:	d8802104 	addi	r2,sp,132
  83a27c:	d8800315 	stw	r2,12(sp)
  83a280:	d9403617 	ldw	r5,216(sp)
  83a284:	d8802504 	addi	r2,sp,148
  83a288:	d9002d17 	ldw	r4,180(sp)
  83a28c:	d8800215 	stw	r2,8(sp)
  83a290:	d8802604 	addi	r2,sp,152
  83a294:	d8c00015 	stw	r3,0(sp)
  83a298:	d8800115 	stw	r2,4(sp)
  83a29c:	01c00084 	movi	r7,2
  83a2a0:	980d883a 	mov	r6,r19
  83a2a4:	d8c03c15 	stw	r3,240(sp)
  83a2a8:	da003d15 	stw	r8,244(sp)
  83a2ac:	083b5800 	call	83b580 <_dtoa_r>
  83a2b0:	1021883a 	mov	r16,r2
  83a2b4:	008019c4 	movi	r2,103
  83a2b8:	d8c03c17 	ldw	r3,240(sp)
  83a2bc:	da003d17 	ldw	r8,244(sp)
  83a2c0:	88817126 	beq	r17,r2,83a888 <___vfprintf_internal_r+0x1dc4>
  83a2c4:	008011c4 	movi	r2,71
  83a2c8:	88829126 	beq	r17,r2,83ad10 <___vfprintf_internal_r+0x224c>
  83a2cc:	80f9883a 	add	fp,r16,r3
  83a2d0:	d9003617 	ldw	r4,216(sp)
  83a2d4:	000d883a 	mov	r6,zero
  83a2d8:	000f883a 	mov	r7,zero
  83a2dc:	980b883a 	mov	r5,r19
  83a2e0:	da003d15 	stw	r8,244(sp)
  83a2e4:	08487ac0 	call	8487ac <__eqdf2>
  83a2e8:	da003d17 	ldw	r8,244(sp)
  83a2ec:	10018d26 	beq	r2,zero,83a924 <___vfprintf_internal_r+0x1e60>
  83a2f0:	d8802117 	ldw	r2,132(sp)
  83a2f4:	1700062e 	bgeu	r2,fp,83a310 <___vfprintf_internal_r+0x184c>
  83a2f8:	01000c04 	movi	r4,48
  83a2fc:	10c00044 	addi	r3,r2,1
  83a300:	d8c02115 	stw	r3,132(sp)
  83a304:	11000005 	stb	r4,0(r2)
  83a308:	d8802117 	ldw	r2,132(sp)
  83a30c:	173ffb36 	bltu	r2,fp,83a2fc <__alt_mem_epcs_flash_controller_0+0xff8312fc>
  83a310:	1405c83a 	sub	r2,r2,r16
  83a314:	d8803315 	stw	r2,204(sp)
  83a318:	008011c4 	movi	r2,71
  83a31c:	b0817626 	beq	r22,r2,83a8f8 <___vfprintf_internal_r+0x1e34>
  83a320:	00801944 	movi	r2,101
  83a324:	1442800e 	bge	r2,r17,83ad28 <___vfprintf_internal_r+0x2264>
  83a328:	d8c02617 	ldw	r3,152(sp)
  83a32c:	00801984 	movi	r2,102
  83a330:	d8c03215 	stw	r3,200(sp)
  83a334:	8881fe26 	beq	r17,r2,83ab30 <___vfprintf_internal_r+0x206c>
  83a338:	d8c03217 	ldw	r3,200(sp)
  83a33c:	d9003317 	ldw	r4,204(sp)
  83a340:	1901dd16 	blt	r3,r4,83aab8 <___vfprintf_internal_r+0x1ff4>
  83a344:	9480004c 	andi	r18,r18,1
  83a348:	90022b1e 	bne	r18,zero,83abf8 <___vfprintf_internal_r+0x2134>
  83a34c:	1805883a 	mov	r2,r3
  83a350:	18028316 	blt	r3,zero,83ad60 <___vfprintf_internal_r+0x229c>
  83a354:	d8c03217 	ldw	r3,200(sp)
  83a358:	044019c4 	movi	r17,103
  83a35c:	d8c02b15 	stw	r3,172(sp)
  83a360:	df002907 	ldb	fp,164(sp)
  83a364:	e001531e 	bne	fp,zero,83a8b4 <___vfprintf_internal_r+0x1df0>
  83a368:	df002783 	ldbu	fp,158(sp)
  83a36c:	d8802915 	stw	r2,164(sp)
  83a370:	dc802c17 	ldw	r18,176(sp)
  83a374:	d8002a15 	stw	zero,168(sp)
  83a378:	003baf06 	br	839238 <__alt_mem_epcs_flash_controller_0+0xff830238>
  83a37c:	d8c02e17 	ldw	r3,184(sp)
  83a380:	d9002e17 	ldw	r4,184(sp)
  83a384:	d9402e17 	ldw	r5,184(sp)
  83a388:	18c00017 	ldw	r3,0(r3)
  83a38c:	21000117 	ldw	r4,4(r4)
  83a390:	29400204 	addi	r5,r5,8
  83a394:	d8c03615 	stw	r3,216(sp)
  83a398:	d9003815 	stw	r4,224(sp)
  83a39c:	d9402e15 	stw	r5,184(sp)
  83a3a0:	003b5006 	br	8390e4 <__alt_mem_epcs_flash_controller_0+0xff8300e4>
  83a3a4:	ac400007 	ldb	r17,0(r21)
  83a3a8:	003a2806 	br	838c4c <__alt_mem_epcs_flash_controller_0+0xff82fc4c>
  83a3ac:	9080100c 	andi	r2,r18,64
  83a3b0:	1000a826 	beq	r2,zero,83a654 <___vfprintf_internal_r+0x1b90>
  83a3b4:	d8c02e17 	ldw	r3,184(sp)
  83a3b8:	002d883a 	mov	r22,zero
  83a3bc:	1cc0000b 	ldhu	r19,0(r3)
  83a3c0:	18c00104 	addi	r3,r3,4
  83a3c4:	d8c02e15 	stw	r3,184(sp)
  83a3c8:	003caf06 	br	839688 <__alt_mem_epcs_flash_controller_0+0xff830688>
  83a3cc:	d9002e17 	ldw	r4,184(sp)
  83a3d0:	d9402a17 	ldw	r5,168(sp)
  83a3d4:	002d883a 	mov	r22,zero
  83a3d8:	20800104 	addi	r2,r4,4
  83a3dc:	24c00017 	ldw	r19,0(r4)
  83a3e0:	283ebb0e 	bge	r5,zero,839ed0 <__alt_mem_epcs_flash_controller_0+0xff830ed0>
  83a3e4:	003ef106 	br	839fac <__alt_mem_epcs_flash_controller_0+0xff830fac>
  83a3e8:	9080040c 	andi	r2,r18,16
  83a3ec:	1000921e 	bne	r2,zero,83a638 <___vfprintf_internal_r+0x1b74>
  83a3f0:	9480100c 	andi	r18,r18,64
  83a3f4:	90013926 	beq	r18,zero,83a8dc <___vfprintf_internal_r+0x1e18>
  83a3f8:	d9402e17 	ldw	r5,184(sp)
  83a3fc:	d8c02f17 	ldw	r3,188(sp)
  83a400:	28800017 	ldw	r2,0(r5)
  83a404:	29400104 	addi	r5,r5,4
  83a408:	d9402e15 	stw	r5,184(sp)
  83a40c:	10c0000d 	sth	r3,0(r2)
  83a410:	0039e406 	br	838ba4 <__alt_mem_epcs_flash_controller_0+0xff82fba4>
  83a414:	9080100c 	andi	r2,r18,64
  83a418:	10008026 	beq	r2,zero,83a61c <___vfprintf_internal_r+0x1b58>
  83a41c:	d8802e17 	ldw	r2,184(sp)
  83a420:	14c0000f 	ldh	r19,0(r2)
  83a424:	10800104 	addi	r2,r2,4
  83a428:	d8802e15 	stw	r2,184(sp)
  83a42c:	982dd7fa 	srai	r22,r19,31
  83a430:	b005883a 	mov	r2,r22
  83a434:	003af706 	br	839014 <__alt_mem_epcs_flash_controller_0+0xff830014>
  83a438:	9080100c 	andi	r2,r18,64
  83a43c:	d8002785 	stb	zero,158(sp)
  83a440:	10008a1e 	bne	r2,zero,83a66c <___vfprintf_internal_r+0x1ba8>
  83a444:	d9002e17 	ldw	r4,184(sp)
  83a448:	d9402a17 	ldw	r5,168(sp)
  83a44c:	002d883a 	mov	r22,zero
  83a450:	20800104 	addi	r2,r4,4
  83a454:	24c00017 	ldw	r19,0(r4)
  83a458:	283e4b0e 	bge	r5,zero,839d88 <__alt_mem_epcs_flash_controller_0+0xff830d88>
  83a45c:	9d86b03a 	or	r3,r19,r22
  83a460:	d8802e15 	stw	r2,184(sp)
  83a464:	183e4c1e 	bne	r3,zero,839d98 <__alt_mem_epcs_flash_controller_0+0xff830d98>
  83a468:	0039883a 	mov	fp,zero
  83a46c:	0005883a 	mov	r2,zero
  83a470:	003d4006 	br	839974 <__alt_mem_epcs_flash_controller_0+0xff830974>
  83a474:	014021b4 	movhi	r5,134
  83a478:	29645404 	addi	r5,r5,-28336
  83a47c:	d9402c15 	stw	r5,176(sp)
  83a480:	d9402c17 	ldw	r5,176(sp)
  83a484:	1c47883a 	add	r3,r3,r17
  83a488:	10800044 	addi	r2,r2,1
  83a48c:	41400015 	stw	r5,0(r8)
  83a490:	44400115 	stw	r17,4(r8)
  83a494:	d8c02015 	stw	r3,128(sp)
  83a498:	d8801f15 	stw	r2,124(sp)
  83a49c:	010001c4 	movi	r4,7
  83a4a0:	20bec816 	blt	r4,r2,839fc4 <__alt_mem_epcs_flash_controller_0+0xff830fc4>
  83a4a4:	42000204 	addi	r8,r8,8
  83a4a8:	003ecd06 	br	839fe0 <__alt_mem_epcs_flash_controller_0+0xff830fe0>
  83a4ac:	d9002a17 	ldw	r4,168(sp)
  83a4b0:	d8002785 	stb	zero,158(sp)
  83a4b4:	203d2d16 	blt	r4,zero,83996c <__alt_mem_epcs_flash_controller_0+0xff83096c>
  83a4b8:	00bfdfc4 	movi	r2,-129
  83a4bc:	90a4703a 	and	r18,r18,r2
  83a4c0:	003a6106 	br	838e48 <__alt_mem_epcs_flash_controller_0+0xff82fe48>
  83a4c4:	010021b4 	movhi	r4,134
  83a4c8:	21245404 	addi	r4,r4,-28336
  83a4cc:	d9002c15 	stw	r4,176(sp)
  83a4d0:	003bea06 	br	83947c <__alt_mem_epcs_flash_controller_0+0xff83047c>
  83a4d4:	d9002d17 	ldw	r4,180(sp)
  83a4d8:	d9801e04 	addi	r6,sp,120
  83a4dc:	b80b883a 	mov	r5,r23
  83a4e0:	0843f800 	call	843f80 <__sprint_r>
  83a4e4:	103a7b1e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  83a4e8:	d8c02017 	ldw	r3,128(sp)
  83a4ec:	da000404 	addi	r8,sp,16
  83a4f0:	003d4106 	br	8399f8 <__alt_mem_epcs_flash_controller_0+0xff8309f8>
  83a4f4:	d8801f17 	ldw	r2,124(sp)
  83a4f8:	014021b4 	movhi	r5,134
  83a4fc:	01000044 	movi	r4,1
  83a500:	18c00044 	addi	r3,r3,1
  83a504:	10800044 	addi	r2,r2,1
  83a508:	29644104 	addi	r5,r5,-28412
  83a50c:	41000115 	stw	r4,4(r8)
  83a510:	41400015 	stw	r5,0(r8)
  83a514:	d8c02015 	stw	r3,128(sp)
  83a518:	d8801f15 	stw	r2,124(sp)
  83a51c:	010001c4 	movi	r4,7
  83a520:	20805c16 	blt	r4,r2,83a694 <___vfprintf_internal_r+0x1bd0>
  83a524:	42000204 	addi	r8,r8,8
  83a528:	8800041e 	bne	r17,zero,83a53c <___vfprintf_internal_r+0x1a78>
  83a52c:	d8803317 	ldw	r2,204(sp)
  83a530:	1000021e 	bne	r2,zero,83a53c <___vfprintf_internal_r+0x1a78>
  83a534:	9080004c 	andi	r2,r18,1
  83a538:	103be726 	beq	r2,zero,8394d8 <__alt_mem_epcs_flash_controller_0+0xff8304d8>
  83a53c:	d9003717 	ldw	r4,220(sp)
  83a540:	d8801f17 	ldw	r2,124(sp)
  83a544:	d9403417 	ldw	r5,208(sp)
  83a548:	20c7883a 	add	r3,r4,r3
  83a54c:	10800044 	addi	r2,r2,1
  83a550:	41000115 	stw	r4,4(r8)
  83a554:	41400015 	stw	r5,0(r8)
  83a558:	d8c02015 	stw	r3,128(sp)
  83a55c:	d8801f15 	stw	r2,124(sp)
  83a560:	010001c4 	movi	r4,7
  83a564:	20812116 	blt	r4,r2,83a9ec <___vfprintf_internal_r+0x1f28>
  83a568:	42000204 	addi	r8,r8,8
  83a56c:	0463c83a 	sub	r17,zero,r17
  83a570:	0440730e 	bge	zero,r17,83a740 <___vfprintf_internal_r+0x1c7c>
  83a574:	05800404 	movi	r22,16
  83a578:	b440860e 	bge	r22,r17,83a794 <___vfprintf_internal_r+0x1cd0>
  83a57c:	014021b4 	movhi	r5,134
  83a580:	29645404 	addi	r5,r5,-28336
  83a584:	d9402c15 	stw	r5,176(sp)
  83a588:	070001c4 	movi	fp,7
  83a58c:	dcc02d17 	ldw	r19,180(sp)
  83a590:	00000306 	br	83a5a0 <___vfprintf_internal_r+0x1adc>
  83a594:	42000204 	addi	r8,r8,8
  83a598:	8c7ffc04 	addi	r17,r17,-16
  83a59c:	b440800e 	bge	r22,r17,83a7a0 <___vfprintf_internal_r+0x1cdc>
  83a5a0:	18c00404 	addi	r3,r3,16
  83a5a4:	10800044 	addi	r2,r2,1
  83a5a8:	45000015 	stw	r20,0(r8)
  83a5ac:	45800115 	stw	r22,4(r8)
  83a5b0:	d8c02015 	stw	r3,128(sp)
  83a5b4:	d8801f15 	stw	r2,124(sp)
  83a5b8:	e0bff60e 	bge	fp,r2,83a594 <__alt_mem_epcs_flash_controller_0+0xff831594>
  83a5bc:	d9801e04 	addi	r6,sp,120
  83a5c0:	b80b883a 	mov	r5,r23
  83a5c4:	9809883a 	mov	r4,r19
  83a5c8:	0843f800 	call	843f80 <__sprint_r>
  83a5cc:	103a411e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  83a5d0:	d8c02017 	ldw	r3,128(sp)
  83a5d4:	d8801f17 	ldw	r2,124(sp)
  83a5d8:	da000404 	addi	r8,sp,16
  83a5dc:	003fee06 	br	83a598 <__alt_mem_epcs_flash_controller_0+0xff831598>
  83a5e0:	00bfffc4 	movi	r2,-1
  83a5e4:	003a3f06 	br	838ee4 <__alt_mem_epcs_flash_controller_0+0xff82fee4>
  83a5e8:	008011c4 	movi	r2,71
  83a5ec:	1440b816 	blt	r2,r17,83a8d0 <___vfprintf_internal_r+0x1e0c>
  83a5f0:	040021b4 	movhi	r16,134
  83a5f4:	84243304 	addi	r16,r16,-28468
  83a5f8:	00c000c4 	movi	r3,3
  83a5fc:	00bfdfc4 	movi	r2,-129
  83a600:	d8c02915 	stw	r3,164(sp)
  83a604:	90a4703a 	and	r18,r18,r2
  83a608:	df002783 	ldbu	fp,158(sp)
  83a60c:	d8c02b15 	stw	r3,172(sp)
  83a610:	d8002a15 	stw	zero,168(sp)
  83a614:	d8003215 	stw	zero,200(sp)
  83a618:	003b0706 	br	839238 <__alt_mem_epcs_flash_controller_0+0xff830238>
  83a61c:	d8c02e17 	ldw	r3,184(sp)
  83a620:	1cc00017 	ldw	r19,0(r3)
  83a624:	18c00104 	addi	r3,r3,4
  83a628:	d8c02e15 	stw	r3,184(sp)
  83a62c:	982dd7fa 	srai	r22,r19,31
  83a630:	b005883a 	mov	r2,r22
  83a634:	003a7706 	br	839014 <__alt_mem_epcs_flash_controller_0+0xff830014>
  83a638:	d8c02e17 	ldw	r3,184(sp)
  83a63c:	d9002f17 	ldw	r4,188(sp)
  83a640:	18800017 	ldw	r2,0(r3)
  83a644:	18c00104 	addi	r3,r3,4
  83a648:	d8c02e15 	stw	r3,184(sp)
  83a64c:	11000015 	stw	r4,0(r2)
  83a650:	00395406 	br	838ba4 <__alt_mem_epcs_flash_controller_0+0xff82fba4>
  83a654:	d9002e17 	ldw	r4,184(sp)
  83a658:	002d883a 	mov	r22,zero
  83a65c:	24c00017 	ldw	r19,0(r4)
  83a660:	21000104 	addi	r4,r4,4
  83a664:	d9002e15 	stw	r4,184(sp)
  83a668:	003c0706 	br	839688 <__alt_mem_epcs_flash_controller_0+0xff830688>
  83a66c:	d9402e17 	ldw	r5,184(sp)
  83a670:	d8c02a17 	ldw	r3,168(sp)
  83a674:	002d883a 	mov	r22,zero
  83a678:	28800104 	addi	r2,r5,4
  83a67c:	2cc0000b 	ldhu	r19,0(r5)
  83a680:	183dc10e 	bge	r3,zero,839d88 <__alt_mem_epcs_flash_controller_0+0xff830d88>
  83a684:	003f7506 	br	83a45c <__alt_mem_epcs_flash_controller_0+0xff83145c>
  83a688:	040021b4 	movhi	r16,134
  83a68c:	84243104 	addi	r16,r16,-28476
  83a690:	003aa706 	br	839130 <__alt_mem_epcs_flash_controller_0+0xff830130>
  83a694:	d9002d17 	ldw	r4,180(sp)
  83a698:	d9801e04 	addi	r6,sp,120
  83a69c:	b80b883a 	mov	r5,r23
  83a6a0:	0843f800 	call	843f80 <__sprint_r>
  83a6a4:	103a0b1e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  83a6a8:	dc402617 	ldw	r17,152(sp)
  83a6ac:	d8c02017 	ldw	r3,128(sp)
  83a6b0:	da000404 	addi	r8,sp,16
  83a6b4:	003f9c06 	br	83a528 <__alt_mem_epcs_flash_controller_0+0xff831528>
  83a6b8:	ac400043 	ldbu	r17,1(r21)
  83a6bc:	84000814 	ori	r16,r16,32
  83a6c0:	ad400044 	addi	r21,r21,1
  83a6c4:	8c403fcc 	andi	r17,r17,255
  83a6c8:	8c40201c 	xori	r17,r17,128
  83a6cc:	8c7fe004 	addi	r17,r17,-128
  83a6d0:	00395e06 	br	838c4c <__alt_mem_epcs_flash_controller_0+0xff82fc4c>
  83a6d4:	d8c02e15 	stw	r3,184(sp)
  83a6d8:	0039883a 	mov	fp,zero
  83a6dc:	003e3506 	br	839fb4 <__alt_mem_epcs_flash_controller_0+0xff830fb4>
  83a6e0:	d9002d17 	ldw	r4,180(sp)
  83a6e4:	d9801e04 	addi	r6,sp,120
  83a6e8:	b80b883a 	mov	r5,r23
  83a6ec:	0843f800 	call	843f80 <__sprint_r>
  83a6f0:	1039f81e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  83a6f4:	d8c02017 	ldw	r3,128(sp)
  83a6f8:	da000404 	addi	r8,sp,16
  83a6fc:	003cd006 	br	839a40 <__alt_mem_epcs_flash_controller_0+0xff830a40>
  83a700:	8009883a 	mov	r4,r16
  83a704:	df003d15 	stw	fp,244(sp)
  83a708:	0834c200 	call	834c20 <strlen>
  83a70c:	d8802b15 	stw	r2,172(sp)
  83a710:	da003d17 	ldw	r8,244(sp)
  83a714:	103c200e 	bge	r2,zero,839798 <__alt_mem_epcs_flash_controller_0+0xff830798>
  83a718:	0005883a 	mov	r2,zero
  83a71c:	003c1e06 	br	839798 <__alt_mem_epcs_flash_controller_0+0xff830798>
  83a720:	d9002d17 	ldw	r4,180(sp)
  83a724:	d9801e04 	addi	r6,sp,120
  83a728:	b80b883a 	mov	r5,r23
  83a72c:	0843f800 	call	843f80 <__sprint_r>
  83a730:	1039e81e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  83a734:	d8c02017 	ldw	r3,128(sp)
  83a738:	d8801f17 	ldw	r2,124(sp)
  83a73c:	da000404 	addi	r8,sp,16
  83a740:	d9403317 	ldw	r5,204(sp)
  83a744:	10800044 	addi	r2,r2,1
  83a748:	44000015 	stw	r16,0(r8)
  83a74c:	28c7883a 	add	r3,r5,r3
  83a750:	003b5b06 	br	8394c0 <__alt_mem_epcs_flash_controller_0+0xff8304c0>
  83a754:	010021b4 	movhi	r4,134
  83a758:	21245804 	addi	r4,r4,-28320
  83a75c:	d9003515 	stw	r4,212(sp)
  83a760:	003af206 	br	83932c <__alt_mem_epcs_flash_controller_0+0xff83032c>
  83a764:	013fffc4 	movi	r4,-1
  83a768:	003a0806 	br	838f8c <__alt_mem_epcs_flash_controller_0+0xff82ff8c>
  83a76c:	0023883a 	mov	r17,zero
  83a770:	003d9d06 	br	839de8 <__alt_mem_epcs_flash_controller_0+0xff830de8>
  83a774:	d9002d17 	ldw	r4,180(sp)
  83a778:	d9801e04 	addi	r6,sp,120
  83a77c:	b80b883a 	mov	r5,r23
  83a780:	0843f800 	call	843f80 <__sprint_r>
  83a784:	1039d31e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  83a788:	d8c02017 	ldw	r3,128(sp)
  83a78c:	da000404 	addi	r8,sp,16
  83a790:	003d9406 	br	839de4 <__alt_mem_epcs_flash_controller_0+0xff830de4>
  83a794:	010021b4 	movhi	r4,134
  83a798:	21245404 	addi	r4,r4,-28336
  83a79c:	d9002c15 	stw	r4,176(sp)
  83a7a0:	d9002c17 	ldw	r4,176(sp)
  83a7a4:	1c47883a 	add	r3,r3,r17
  83a7a8:	10800044 	addi	r2,r2,1
  83a7ac:	41000015 	stw	r4,0(r8)
  83a7b0:	44400115 	stw	r17,4(r8)
  83a7b4:	d8c02015 	stw	r3,128(sp)
  83a7b8:	d8801f15 	stw	r2,124(sp)
  83a7bc:	010001c4 	movi	r4,7
  83a7c0:	20bfd716 	blt	r4,r2,83a720 <__alt_mem_epcs_flash_controller_0+0xff831720>
  83a7c4:	42000204 	addi	r8,r8,8
  83a7c8:	003fdd06 	br	83a740 <__alt_mem_epcs_flash_controller_0+0xff831740>
  83a7cc:	d9002d17 	ldw	r4,180(sp)
  83a7d0:	d9801e04 	addi	r6,sp,120
  83a7d4:	b80b883a 	mov	r5,r23
  83a7d8:	0843f800 	call	843f80 <__sprint_r>
  83a7dc:	1039bd1e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  83a7e0:	d8802617 	ldw	r2,152(sp)
  83a7e4:	d8c02017 	ldw	r3,128(sp)
  83a7e8:	da000404 	addi	r8,sp,16
  83a7ec:	003e1006 	br	83a030 <__alt_mem_epcs_flash_controller_0+0xff831030>
  83a7f0:	00800044 	movi	r2,1
  83a7f4:	10803fcc 	andi	r2,r2,255
  83a7f8:	00c00044 	movi	r3,1
  83a7fc:	10fa0d26 	beq	r2,r3,839034 <__alt_mem_epcs_flash_controller_0+0xff830034>
  83a800:	00c00084 	movi	r3,2
  83a804:	10fbaf26 	beq	r2,r3,8396c4 <__alt_mem_epcs_flash_controller_0+0xff8306c4>
  83a808:	003a6d06 	br	8391c0 <__alt_mem_epcs_flash_controller_0+0xff8301c0>
  83a80c:	010021b4 	movhi	r4,134
  83a810:	21245804 	addi	r4,r4,-28320
  83a814:	d9003515 	stw	r4,212(sp)
  83a818:	003b5406 	br	83956c <__alt_mem_epcs_flash_controller_0+0xff83056c>
  83a81c:	d8802a17 	ldw	r2,168(sp)
  83a820:	00c00184 	movi	r3,6
  83a824:	1880012e 	bgeu	r3,r2,83a82c <___vfprintf_internal_r+0x1d68>
  83a828:	1805883a 	mov	r2,r3
  83a82c:	d8802b15 	stw	r2,172(sp)
  83a830:	1000ef16 	blt	r2,zero,83abf0 <___vfprintf_internal_r+0x212c>
  83a834:	040021b4 	movhi	r16,134
  83a838:	d8802915 	stw	r2,164(sp)
  83a83c:	dcc02e15 	stw	r19,184(sp)
  83a840:	d8002a15 	stw	zero,168(sp)
  83a844:	d8003215 	stw	zero,200(sp)
  83a848:	84243f04 	addi	r16,r16,-28420
  83a84c:	0039883a 	mov	fp,zero
  83a850:	003a8006 	br	839254 <__alt_mem_epcs_flash_controller_0+0xff830254>
  83a854:	0021883a 	mov	r16,zero
  83a858:	003e0706 	br	83a078 <__alt_mem_epcs_flash_controller_0+0xff831078>
  83a85c:	d9002d17 	ldw	r4,180(sp)
  83a860:	d9801e04 	addi	r6,sp,120
  83a864:	b80b883a 	mov	r5,r23
  83a868:	0843f800 	call	843f80 <__sprint_r>
  83a86c:	1039991e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  83a870:	d8802617 	ldw	r2,152(sp)
  83a874:	d9403317 	ldw	r5,204(sp)
  83a878:	d8c02017 	ldw	r3,128(sp)
  83a87c:	da000404 	addi	r8,sp,16
  83a880:	2885c83a 	sub	r2,r5,r2
  83a884:	003dfb06 	br	83a074 <__alt_mem_epcs_flash_controller_0+0xff831074>
  83a888:	9080004c 	andi	r2,r18,1
  83a88c:	103e8f1e 	bne	r2,zero,83a2cc <__alt_mem_epcs_flash_controller_0+0xff8312cc>
  83a890:	d8802117 	ldw	r2,132(sp)
  83a894:	003e9e06 	br	83a310 <__alt_mem_epcs_flash_controller_0+0xff831310>
  83a898:	1025883a 	mov	r18,r2
  83a89c:	0039883a 	mov	fp,zero
  83a8a0:	00800084 	movi	r2,2
  83a8a4:	003fd306 	br	83a7f4 <__alt_mem_epcs_flash_controller_0+0xff8317f4>
  83a8a8:	07000b44 	movi	fp,45
  83a8ac:	df002785 	stb	fp,158(sp)
  83a8b0:	003a1b06 	br	839120 <__alt_mem_epcs_flash_controller_0+0xff830120>
  83a8b4:	00c00b44 	movi	r3,45
  83a8b8:	d8c02785 	stb	r3,158(sp)
  83a8bc:	d8802915 	stw	r2,164(sp)
  83a8c0:	dc802c17 	ldw	r18,176(sp)
  83a8c4:	d8002a15 	stw	zero,168(sp)
  83a8c8:	07000b44 	movi	fp,45
  83a8cc:	003a5e06 	br	839248 <__alt_mem_epcs_flash_controller_0+0xff830248>
  83a8d0:	040021b4 	movhi	r16,134
  83a8d4:	84243404 	addi	r16,r16,-28464
  83a8d8:	003f4706 	br	83a5f8 <__alt_mem_epcs_flash_controller_0+0xff8315f8>
  83a8dc:	d9002e17 	ldw	r4,184(sp)
  83a8e0:	d9402f17 	ldw	r5,188(sp)
  83a8e4:	20800017 	ldw	r2,0(r4)
  83a8e8:	21000104 	addi	r4,r4,4
  83a8ec:	d9002e15 	stw	r4,184(sp)
  83a8f0:	11400015 	stw	r5,0(r2)
  83a8f4:	0038ab06 	br	838ba4 <__alt_mem_epcs_flash_controller_0+0xff82fba4>
  83a8f8:	dd802617 	ldw	r22,152(sp)
  83a8fc:	00bfff44 	movi	r2,-3
  83a900:	b0801c16 	blt	r22,r2,83a974 <___vfprintf_internal_r+0x1eb0>
  83a904:	d9402a17 	ldw	r5,168(sp)
  83a908:	2d801a16 	blt	r5,r22,83a974 <___vfprintf_internal_r+0x1eb0>
  83a90c:	dd803215 	stw	r22,200(sp)
  83a910:	003e8906 	br	83a338 <__alt_mem_epcs_flash_controller_0+0xff831338>
  83a914:	010021b4 	movhi	r4,134
  83a918:	21245404 	addi	r4,r4,-28336
  83a91c:	d9002c15 	stw	r4,176(sp)
  83a920:	003c9106 	br	839b68 <__alt_mem_epcs_flash_controller_0+0xff830b68>
  83a924:	e005883a 	mov	r2,fp
  83a928:	003e7906 	br	83a310 <__alt_mem_epcs_flash_controller_0+0xff831310>
  83a92c:	d9002a17 	ldw	r4,168(sp)
  83a930:	df002783 	ldbu	fp,158(sp)
  83a934:	dcc02e15 	stw	r19,184(sp)
  83a938:	d9002915 	stw	r4,164(sp)
  83a93c:	d9002b15 	stw	r4,172(sp)
  83a940:	d8002a15 	stw	zero,168(sp)
  83a944:	d8003215 	stw	zero,200(sp)
  83a948:	003a3b06 	br	839238 <__alt_mem_epcs_flash_controller_0+0xff830238>
  83a94c:	9080004c 	andi	r2,r18,1
  83a950:	0039883a 	mov	fp,zero
  83a954:	10000426 	beq	r2,zero,83a968 <___vfprintf_internal_r+0x1ea4>
  83a958:	00800c04 	movi	r2,48
  83a95c:	dc001dc4 	addi	r16,sp,119
  83a960:	d8801dc5 	stb	r2,119(sp)
  83a964:	003b6406 	br	8396f8 <__alt_mem_epcs_flash_controller_0+0xff8306f8>
  83a968:	d8002b15 	stw	zero,172(sp)
  83a96c:	dc001e04 	addi	r16,sp,120
  83a970:	003a2b06 	br	839220 <__alt_mem_epcs_flash_controller_0+0xff830220>
  83a974:	8c7fff84 	addi	r17,r17,-2
  83a978:	b5bfffc4 	addi	r22,r22,-1
  83a97c:	dd802615 	stw	r22,152(sp)
  83a980:	dc4022c5 	stb	r17,139(sp)
  83a984:	b000bf16 	blt	r22,zero,83ac84 <___vfprintf_internal_r+0x21c0>
  83a988:	00800ac4 	movi	r2,43
  83a98c:	d8802305 	stb	r2,140(sp)
  83a990:	00800244 	movi	r2,9
  83a994:	15807016 	blt	r2,r22,83ab58 <___vfprintf_internal_r+0x2094>
  83a998:	00800c04 	movi	r2,48
  83a99c:	b5800c04 	addi	r22,r22,48
  83a9a0:	d8802345 	stb	r2,141(sp)
  83a9a4:	dd802385 	stb	r22,142(sp)
  83a9a8:	d88023c4 	addi	r2,sp,143
  83a9ac:	df0022c4 	addi	fp,sp,139
  83a9b0:	d8c03317 	ldw	r3,204(sp)
  83a9b4:	1739c83a 	sub	fp,r2,fp
  83a9b8:	d9003317 	ldw	r4,204(sp)
  83a9bc:	e0c7883a 	add	r3,fp,r3
  83a9c0:	df003a15 	stw	fp,232(sp)
  83a9c4:	d8c02b15 	stw	r3,172(sp)
  83a9c8:	00800044 	movi	r2,1
  83a9cc:	1100b30e 	bge	r2,r4,83ac9c <___vfprintf_internal_r+0x21d8>
  83a9d0:	d8c02b17 	ldw	r3,172(sp)
  83a9d4:	18c00044 	addi	r3,r3,1
  83a9d8:	d8c02b15 	stw	r3,172(sp)
  83a9dc:	1805883a 	mov	r2,r3
  83a9e0:	1800ac16 	blt	r3,zero,83ac94 <___vfprintf_internal_r+0x21d0>
  83a9e4:	d8003215 	stw	zero,200(sp)
  83a9e8:	003e5d06 	br	83a360 <__alt_mem_epcs_flash_controller_0+0xff831360>
  83a9ec:	d9002d17 	ldw	r4,180(sp)
  83a9f0:	d9801e04 	addi	r6,sp,120
  83a9f4:	b80b883a 	mov	r5,r23
  83a9f8:	0843f800 	call	843f80 <__sprint_r>
  83a9fc:	1039351e 	bne	r2,zero,838ed4 <__alt_mem_epcs_flash_controller_0+0xff82fed4>
  83aa00:	dc402617 	ldw	r17,152(sp)
  83aa04:	d8c02017 	ldw	r3,128(sp)
  83aa08:	d8801f17 	ldw	r2,124(sp)
  83aa0c:	da000404 	addi	r8,sp,16
  83aa10:	003ed606 	br	83a56c <__alt_mem_epcs_flash_controller_0+0xff83156c>
  83aa14:	182b883a 	mov	r21,r3
  83aa18:	d8002a15 	stw	zero,168(sp)
  83aa1c:	00388c06 	br	838c50 <__alt_mem_epcs_flash_controller_0+0xff82fc50>
  83aa20:	d8802a17 	ldw	r2,168(sp)
  83aa24:	103e071e 	bne	r2,zero,83a244 <__alt_mem_epcs_flash_controller_0+0xff831244>
  83aa28:	dc002a15 	stw	r16,168(sp)
  83aa2c:	003e0506 	br	83a244 <__alt_mem_epcs_flash_controller_0+0xff831244>
  83aa30:	d9002a17 	ldw	r4,168(sp)
  83aa34:	20c00044 	addi	r3,r4,1
  83aa38:	003e0f06 	br	83a278 <__alt_mem_epcs_flash_controller_0+0xff831278>
  83aa3c:	01400184 	movi	r5,6
  83aa40:	d9402a15 	stw	r5,168(sp)
  83aa44:	003dff06 	br	83a244 <__alt_mem_epcs_flash_controller_0+0xff831244>
  83aa48:	d8802104 	addi	r2,sp,132
  83aa4c:	d8800315 	stw	r2,12(sp)
  83aa50:	d8802504 	addi	r2,sp,148
  83aa54:	d8800215 	stw	r2,8(sp)
  83aa58:	d8802604 	addi	r2,sp,152
  83aa5c:	d8800115 	stw	r2,4(sp)
  83aa60:	d8802a17 	ldw	r2,168(sp)
  83aa64:	d9403617 	ldw	r5,216(sp)
  83aa68:	d9002d17 	ldw	r4,180(sp)
  83aa6c:	d8800015 	stw	r2,0(sp)
  83aa70:	01c000c4 	movi	r7,3
  83aa74:	980d883a 	mov	r6,r19
  83aa78:	da003d15 	stw	r8,244(sp)
  83aa7c:	083b5800 	call	83b580 <_dtoa_r>
  83aa80:	d8c02a17 	ldw	r3,168(sp)
  83aa84:	da003d17 	ldw	r8,244(sp)
  83aa88:	1021883a 	mov	r16,r2
  83aa8c:	10f9883a 	add	fp,r2,r3
  83aa90:	81000007 	ldb	r4,0(r16)
  83aa94:	00800c04 	movi	r2,48
  83aa98:	20805e26 	beq	r4,r2,83ac14 <___vfprintf_internal_r+0x2150>
  83aa9c:	d8c02617 	ldw	r3,152(sp)
  83aaa0:	e0f9883a 	add	fp,fp,r3
  83aaa4:	003e0a06 	br	83a2d0 <__alt_mem_epcs_flash_controller_0+0xff8312d0>
  83aaa8:	00c00b44 	movi	r3,45
  83aaac:	24e0003c 	xorhi	r19,r4,32768
  83aab0:	d8c02905 	stb	r3,164(sp)
  83aab4:	003de906 	br	83a25c <__alt_mem_epcs_flash_controller_0+0xff83125c>
  83aab8:	d8c03217 	ldw	r3,200(sp)
  83aabc:	00c07a0e 	bge	zero,r3,83aca8 <___vfprintf_internal_r+0x21e4>
  83aac0:	00800044 	movi	r2,1
  83aac4:	d9003317 	ldw	r4,204(sp)
  83aac8:	1105883a 	add	r2,r2,r4
  83aacc:	d8802b15 	stw	r2,172(sp)
  83aad0:	10004e16 	blt	r2,zero,83ac0c <___vfprintf_internal_r+0x2148>
  83aad4:	044019c4 	movi	r17,103
  83aad8:	003e2106 	br	83a360 <__alt_mem_epcs_flash_controller_0+0xff831360>
  83aadc:	d9002a17 	ldw	r4,168(sp)
  83aae0:	d8802104 	addi	r2,sp,132
  83aae4:	d8800315 	stw	r2,12(sp)
  83aae8:	d9000015 	stw	r4,0(sp)
  83aaec:	d8802504 	addi	r2,sp,148
  83aaf0:	d9403617 	ldw	r5,216(sp)
  83aaf4:	d9002d17 	ldw	r4,180(sp)
  83aaf8:	d8800215 	stw	r2,8(sp)
  83aafc:	d8802604 	addi	r2,sp,152
  83ab00:	d8800115 	stw	r2,4(sp)
  83ab04:	01c000c4 	movi	r7,3
  83ab08:	980d883a 	mov	r6,r19
  83ab0c:	da003d15 	stw	r8,244(sp)
  83ab10:	083b5800 	call	83b580 <_dtoa_r>
  83ab14:	d8c02a17 	ldw	r3,168(sp)
  83ab18:	da003d17 	ldw	r8,244(sp)
  83ab1c:	1021883a 	mov	r16,r2
  83ab20:	00801184 	movi	r2,70
  83ab24:	80f9883a 	add	fp,r16,r3
  83ab28:	88bfd926 	beq	r17,r2,83aa90 <__alt_mem_epcs_flash_controller_0+0xff831a90>
  83ab2c:	003de806 	br	83a2d0 <__alt_mem_epcs_flash_controller_0+0xff8312d0>
  83ab30:	d9002a17 	ldw	r4,168(sp)
  83ab34:	00c04d0e 	bge	zero,r3,83ac6c <___vfprintf_internal_r+0x21a8>
  83ab38:	2000441e 	bne	r4,zero,83ac4c <___vfprintf_internal_r+0x2188>
  83ab3c:	9480004c 	andi	r18,r18,1
  83ab40:	9000421e 	bne	r18,zero,83ac4c <___vfprintf_internal_r+0x2188>
  83ab44:	1805883a 	mov	r2,r3
  83ab48:	18006f16 	blt	r3,zero,83ad08 <___vfprintf_internal_r+0x2244>
  83ab4c:	d8c03217 	ldw	r3,200(sp)
  83ab50:	d8c02b15 	stw	r3,172(sp)
  83ab54:	003e0206 	br	83a360 <__alt_mem_epcs_flash_controller_0+0xff831360>
  83ab58:	df0022c4 	addi	fp,sp,139
  83ab5c:	dc002a15 	stw	r16,168(sp)
  83ab60:	4027883a 	mov	r19,r8
  83ab64:	e021883a 	mov	r16,fp
  83ab68:	b009883a 	mov	r4,r22
  83ab6c:	01400284 	movi	r5,10
  83ab70:	08303d40 	call	8303d4 <__modsi3>
  83ab74:	10800c04 	addi	r2,r2,48
  83ab78:	843fffc4 	addi	r16,r16,-1
  83ab7c:	b009883a 	mov	r4,r22
  83ab80:	01400284 	movi	r5,10
  83ab84:	80800005 	stb	r2,0(r16)
  83ab88:	08303500 	call	830350 <__divsi3>
  83ab8c:	102d883a 	mov	r22,r2
  83ab90:	00800244 	movi	r2,9
  83ab94:	15bff416 	blt	r2,r22,83ab68 <__alt_mem_epcs_flash_controller_0+0xff831b68>
  83ab98:	9811883a 	mov	r8,r19
  83ab9c:	b0800c04 	addi	r2,r22,48
  83aba0:	8027883a 	mov	r19,r16
  83aba4:	997fffc4 	addi	r5,r19,-1
  83aba8:	98bfffc5 	stb	r2,-1(r19)
  83abac:	dc002a17 	ldw	r16,168(sp)
  83abb0:	2f006d2e 	bgeu	r5,fp,83ad68 <___vfprintf_internal_r+0x22a4>
  83abb4:	d9c02384 	addi	r7,sp,142
  83abb8:	3ccfc83a 	sub	r7,r7,r19
  83abbc:	d9002344 	addi	r4,sp,141
  83abc0:	e1cf883a 	add	r7,fp,r7
  83abc4:	00000106 	br	83abcc <___vfprintf_internal_r+0x2108>
  83abc8:	28800003 	ldbu	r2,0(r5)
  83abcc:	20800005 	stb	r2,0(r4)
  83abd0:	21000044 	addi	r4,r4,1
  83abd4:	29400044 	addi	r5,r5,1
  83abd8:	393ffb1e 	bne	r7,r4,83abc8 <__alt_mem_epcs_flash_controller_0+0xff831bc8>
  83abdc:	d8802304 	addi	r2,sp,140
  83abe0:	14c5c83a 	sub	r2,r2,r19
  83abe4:	d8c02344 	addi	r3,sp,141
  83abe8:	1885883a 	add	r2,r3,r2
  83abec:	003f7006 	br	83a9b0 <__alt_mem_epcs_flash_controller_0+0xff8319b0>
  83abf0:	0005883a 	mov	r2,zero
  83abf4:	003f0f06 	br	83a834 <__alt_mem_epcs_flash_controller_0+0xff831834>
  83abf8:	d8c03217 	ldw	r3,200(sp)
  83abfc:	18c00044 	addi	r3,r3,1
  83ac00:	d8c02b15 	stw	r3,172(sp)
  83ac04:	1805883a 	mov	r2,r3
  83ac08:	183fb20e 	bge	r3,zero,83aad4 <__alt_mem_epcs_flash_controller_0+0xff831ad4>
  83ac0c:	0005883a 	mov	r2,zero
  83ac10:	003fb006 	br	83aad4 <__alt_mem_epcs_flash_controller_0+0xff831ad4>
  83ac14:	d9003617 	ldw	r4,216(sp)
  83ac18:	000d883a 	mov	r6,zero
  83ac1c:	000f883a 	mov	r7,zero
  83ac20:	980b883a 	mov	r5,r19
  83ac24:	d8c03c15 	stw	r3,240(sp)
  83ac28:	da003d15 	stw	r8,244(sp)
  83ac2c:	08487ac0 	call	8487ac <__eqdf2>
  83ac30:	d8c03c17 	ldw	r3,240(sp)
  83ac34:	da003d17 	ldw	r8,244(sp)
  83ac38:	103f9826 	beq	r2,zero,83aa9c <__alt_mem_epcs_flash_controller_0+0xff831a9c>
  83ac3c:	00800044 	movi	r2,1
  83ac40:	10c7c83a 	sub	r3,r2,r3
  83ac44:	d8c02615 	stw	r3,152(sp)
  83ac48:	003f9506 	br	83aaa0 <__alt_mem_epcs_flash_controller_0+0xff831aa0>
  83ac4c:	d9002a17 	ldw	r4,168(sp)
  83ac50:	d8c03217 	ldw	r3,200(sp)
  83ac54:	20800044 	addi	r2,r4,1
  83ac58:	1885883a 	add	r2,r3,r2
  83ac5c:	d8802b15 	stw	r2,172(sp)
  83ac60:	103dbf0e 	bge	r2,zero,83a360 <__alt_mem_epcs_flash_controller_0+0xff831360>
  83ac64:	0005883a 	mov	r2,zero
  83ac68:	003dbd06 	br	83a360 <__alt_mem_epcs_flash_controller_0+0xff831360>
  83ac6c:	2000201e 	bne	r4,zero,83acf0 <___vfprintf_internal_r+0x222c>
  83ac70:	9480004c 	andi	r18,r18,1
  83ac74:	90001e1e 	bne	r18,zero,83acf0 <___vfprintf_internal_r+0x222c>
  83ac78:	00800044 	movi	r2,1
  83ac7c:	d8802b15 	stw	r2,172(sp)
  83ac80:	003db706 	br	83a360 <__alt_mem_epcs_flash_controller_0+0xff831360>
  83ac84:	00800b44 	movi	r2,45
  83ac88:	05adc83a 	sub	r22,zero,r22
  83ac8c:	d8802305 	stb	r2,140(sp)
  83ac90:	003f3f06 	br	83a990 <__alt_mem_epcs_flash_controller_0+0xff831990>
  83ac94:	0005883a 	mov	r2,zero
  83ac98:	003f5206 	br	83a9e4 <__alt_mem_epcs_flash_controller_0+0xff8319e4>
  83ac9c:	90a4703a 	and	r18,r18,r2
  83aca0:	903f4e26 	beq	r18,zero,83a9dc <__alt_mem_epcs_flash_controller_0+0xff8319dc>
  83aca4:	003f4a06 	br	83a9d0 <__alt_mem_epcs_flash_controller_0+0xff8319d0>
  83aca8:	00800084 	movi	r2,2
  83acac:	10c5c83a 	sub	r2,r2,r3
  83acb0:	003f8406 	br	83aac4 <__alt_mem_epcs_flash_controller_0+0xff831ac4>
  83acb4:	d9402e17 	ldw	r5,184(sp)
  83acb8:	d9002e17 	ldw	r4,184(sp)
  83acbc:	ac400043 	ldbu	r17,1(r21)
  83acc0:	29400017 	ldw	r5,0(r5)
  83acc4:	20800104 	addi	r2,r4,4
  83acc8:	d8802e15 	stw	r2,184(sp)
  83accc:	d9402a15 	stw	r5,168(sp)
  83acd0:	182b883a 	mov	r21,r3
  83acd4:	283e7b0e 	bge	r5,zero,83a6c4 <__alt_mem_epcs_flash_controller_0+0xff8316c4>
  83acd8:	8c403fcc 	andi	r17,r17,255
  83acdc:	017fffc4 	movi	r5,-1
  83ace0:	8c40201c 	xori	r17,r17,128
  83ace4:	d9402a15 	stw	r5,168(sp)
  83ace8:	8c7fe004 	addi	r17,r17,-128
  83acec:	0037d706 	br	838c4c <__alt_mem_epcs_flash_controller_0+0xff82fc4c>
  83acf0:	d8c02a17 	ldw	r3,168(sp)
  83acf4:	18c00084 	addi	r3,r3,2
  83acf8:	d8c02b15 	stw	r3,172(sp)
  83acfc:	1805883a 	mov	r2,r3
  83ad00:	183d970e 	bge	r3,zero,83a360 <__alt_mem_epcs_flash_controller_0+0xff831360>
  83ad04:	003fd706 	br	83ac64 <__alt_mem_epcs_flash_controller_0+0xff831c64>
  83ad08:	0005883a 	mov	r2,zero
  83ad0c:	003f8f06 	br	83ab4c <__alt_mem_epcs_flash_controller_0+0xff831b4c>
  83ad10:	9080004c 	andi	r2,r18,1
  83ad14:	103f821e 	bne	r2,zero,83ab20 <__alt_mem_epcs_flash_controller_0+0xff831b20>
  83ad18:	d8802117 	ldw	r2,132(sp)
  83ad1c:	1405c83a 	sub	r2,r2,r16
  83ad20:	d8803315 	stw	r2,204(sp)
  83ad24:	b47ef426 	beq	r22,r17,83a8f8 <__alt_mem_epcs_flash_controller_0+0xff8318f8>
  83ad28:	dd802617 	ldw	r22,152(sp)
  83ad2c:	003f1206 	br	83a978 <__alt_mem_epcs_flash_controller_0+0xff831978>
  83ad30:	d8c02b03 	ldbu	r3,172(sp)
  83ad34:	d8c02785 	stb	r3,158(sp)
  83ad38:	0038df06 	br	8390b8 <__alt_mem_epcs_flash_controller_0+0xff8300b8>
  83ad3c:	d8c02b03 	ldbu	r3,172(sp)
  83ad40:	d8c02785 	stb	r3,158(sp)
  83ad44:	0038aa06 	br	838ff0 <__alt_mem_epcs_flash_controller_0+0xff82fff0>
  83ad48:	d8c02b03 	ldbu	r3,172(sp)
  83ad4c:	d8c02785 	stb	r3,158(sp)
  83ad50:	003a4306 	br	839660 <__alt_mem_epcs_flash_controller_0+0xff830660>
  83ad54:	d8c02b03 	ldbu	r3,172(sp)
  83ad58:	d8c02785 	stb	r3,158(sp)
  83ad5c:	003af506 	br	839934 <__alt_mem_epcs_flash_controller_0+0xff830934>
  83ad60:	0005883a 	mov	r2,zero
  83ad64:	003d7b06 	br	83a354 <__alt_mem_epcs_flash_controller_0+0xff831354>
  83ad68:	d8802344 	addi	r2,sp,141
  83ad6c:	003f1006 	br	83a9b0 <__alt_mem_epcs_flash_controller_0+0xff8319b0>
  83ad70:	d8c02b03 	ldbu	r3,172(sp)
  83ad74:	d8c02785 	stb	r3,158(sp)
  83ad78:	0038fd06 	br	839170 <__alt_mem_epcs_flash_controller_0+0xff830170>
  83ad7c:	d8c02b03 	ldbu	r3,172(sp)
  83ad80:	d8c02785 	stb	r3,158(sp)
  83ad84:	003a9706 	br	8397e4 <__alt_mem_epcs_flash_controller_0+0xff8307e4>
  83ad88:	d8c02b03 	ldbu	r3,172(sp)
  83ad8c:	d8c02785 	stb	r3,158(sp)
  83ad90:	003a1806 	br	8395f4 <__alt_mem_epcs_flash_controller_0+0xff8305f4>
  83ad94:	d8c02b03 	ldbu	r3,172(sp)
  83ad98:	d8c02785 	stb	r3,158(sp)
  83ad9c:	003abe06 	br	839898 <__alt_mem_epcs_flash_controller_0+0xff830898>

0083ada0 <__vfprintf_internal>:
  83ada0:	008021b4 	movhi	r2,134
  83ada4:	10adb604 	addi	r2,r2,-18728
  83ada8:	300f883a 	mov	r7,r6
  83adac:	280d883a 	mov	r6,r5
  83adb0:	200b883a 	mov	r5,r4
  83adb4:	11000017 	ldw	r4,0(r2)
  83adb8:	0838ac41 	jmpi	838ac4 <___vfprintf_internal_r>

0083adbc <__sbprintf>:
  83adbc:	2880030b 	ldhu	r2,12(r5)
  83adc0:	2ac01917 	ldw	r11,100(r5)
  83adc4:	2a80038b 	ldhu	r10,14(r5)
  83adc8:	2a400717 	ldw	r9,28(r5)
  83adcc:	2a000917 	ldw	r8,36(r5)
  83add0:	defee204 	addi	sp,sp,-1144
  83add4:	00c10004 	movi	r3,1024
  83add8:	dc011a15 	stw	r16,1128(sp)
  83addc:	10bfff4c 	andi	r2,r2,65533
  83ade0:	2821883a 	mov	r16,r5
  83ade4:	d8cb883a 	add	r5,sp,r3
  83ade8:	dc811c15 	stw	r18,1136(sp)
  83adec:	dc411b15 	stw	r17,1132(sp)
  83adf0:	dfc11d15 	stw	ra,1140(sp)
  83adf4:	2025883a 	mov	r18,r4
  83adf8:	d881030d 	sth	r2,1036(sp)
  83adfc:	dac11915 	stw	r11,1124(sp)
  83ae00:	da81038d 	sth	r10,1038(sp)
  83ae04:	da410715 	stw	r9,1052(sp)
  83ae08:	da010915 	stw	r8,1060(sp)
  83ae0c:	dec10015 	stw	sp,1024(sp)
  83ae10:	dec10415 	stw	sp,1040(sp)
  83ae14:	d8c10215 	stw	r3,1032(sp)
  83ae18:	d8c10515 	stw	r3,1044(sp)
  83ae1c:	d8010615 	stw	zero,1048(sp)
  83ae20:	0838ac40 	call	838ac4 <___vfprintf_internal_r>
  83ae24:	1023883a 	mov	r17,r2
  83ae28:	10000416 	blt	r2,zero,83ae3c <__sbprintf+0x80>
  83ae2c:	d9410004 	addi	r5,sp,1024
  83ae30:	9009883a 	mov	r4,r18
  83ae34:	08323600 	call	832360 <_fflush_r>
  83ae38:	10000d1e 	bne	r2,zero,83ae70 <__sbprintf+0xb4>
  83ae3c:	d881030b 	ldhu	r2,1036(sp)
  83ae40:	1080100c 	andi	r2,r2,64
  83ae44:	10000326 	beq	r2,zero,83ae54 <__sbprintf+0x98>
  83ae48:	8080030b 	ldhu	r2,12(r16)
  83ae4c:	10801014 	ori	r2,r2,64
  83ae50:	8080030d 	sth	r2,12(r16)
  83ae54:	8805883a 	mov	r2,r17
  83ae58:	dfc11d17 	ldw	ra,1140(sp)
  83ae5c:	dc811c17 	ldw	r18,1136(sp)
  83ae60:	dc411b17 	ldw	r17,1132(sp)
  83ae64:	dc011a17 	ldw	r16,1128(sp)
  83ae68:	dec11e04 	addi	sp,sp,1144
  83ae6c:	f800283a 	ret
  83ae70:	047fffc4 	movi	r17,-1
  83ae74:	003ff106 	br	83ae3c <__alt_mem_epcs_flash_controller_0+0xff831e3c>

0083ae78 <__swbuf_r>:
  83ae78:	defffb04 	addi	sp,sp,-20
  83ae7c:	dcc00315 	stw	r19,12(sp)
  83ae80:	dc800215 	stw	r18,8(sp)
  83ae84:	dc000015 	stw	r16,0(sp)
  83ae88:	dfc00415 	stw	ra,16(sp)
  83ae8c:	dc400115 	stw	r17,4(sp)
  83ae90:	2025883a 	mov	r18,r4
  83ae94:	2827883a 	mov	r19,r5
  83ae98:	3021883a 	mov	r16,r6
  83ae9c:	20000226 	beq	r4,zero,83aea8 <__swbuf_r+0x30>
  83aea0:	20800e17 	ldw	r2,56(r4)
  83aea4:	10004226 	beq	r2,zero,83afb0 <__swbuf_r+0x138>
  83aea8:	80800617 	ldw	r2,24(r16)
  83aeac:	8100030b 	ldhu	r4,12(r16)
  83aeb0:	80800215 	stw	r2,8(r16)
  83aeb4:	2080020c 	andi	r2,r4,8
  83aeb8:	10003626 	beq	r2,zero,83af94 <__swbuf_r+0x11c>
  83aebc:	80c00417 	ldw	r3,16(r16)
  83aec0:	18003426 	beq	r3,zero,83af94 <__swbuf_r+0x11c>
  83aec4:	2088000c 	andi	r2,r4,8192
  83aec8:	9c403fcc 	andi	r17,r19,255
  83aecc:	10001a26 	beq	r2,zero,83af38 <__swbuf_r+0xc0>
  83aed0:	80800017 	ldw	r2,0(r16)
  83aed4:	81000517 	ldw	r4,20(r16)
  83aed8:	10c7c83a 	sub	r3,r2,r3
  83aedc:	1900200e 	bge	r3,r4,83af60 <__swbuf_r+0xe8>
  83aee0:	18c00044 	addi	r3,r3,1
  83aee4:	81000217 	ldw	r4,8(r16)
  83aee8:	11400044 	addi	r5,r2,1
  83aeec:	81400015 	stw	r5,0(r16)
  83aef0:	213fffc4 	addi	r4,r4,-1
  83aef4:	81000215 	stw	r4,8(r16)
  83aef8:	14c00005 	stb	r19,0(r2)
  83aefc:	80800517 	ldw	r2,20(r16)
  83af00:	10c01e26 	beq	r2,r3,83af7c <__swbuf_r+0x104>
  83af04:	8080030b 	ldhu	r2,12(r16)
  83af08:	1080004c 	andi	r2,r2,1
  83af0c:	10000226 	beq	r2,zero,83af18 <__swbuf_r+0xa0>
  83af10:	00800284 	movi	r2,10
  83af14:	88801926 	beq	r17,r2,83af7c <__swbuf_r+0x104>
  83af18:	8805883a 	mov	r2,r17
  83af1c:	dfc00417 	ldw	ra,16(sp)
  83af20:	dcc00317 	ldw	r19,12(sp)
  83af24:	dc800217 	ldw	r18,8(sp)
  83af28:	dc400117 	ldw	r17,4(sp)
  83af2c:	dc000017 	ldw	r16,0(sp)
  83af30:	dec00504 	addi	sp,sp,20
  83af34:	f800283a 	ret
  83af38:	81401917 	ldw	r5,100(r16)
  83af3c:	00b7ffc4 	movi	r2,-8193
  83af40:	21080014 	ori	r4,r4,8192
  83af44:	2884703a 	and	r2,r5,r2
  83af48:	80801915 	stw	r2,100(r16)
  83af4c:	80800017 	ldw	r2,0(r16)
  83af50:	8100030d 	sth	r4,12(r16)
  83af54:	81000517 	ldw	r4,20(r16)
  83af58:	10c7c83a 	sub	r3,r2,r3
  83af5c:	193fe016 	blt	r3,r4,83aee0 <__alt_mem_epcs_flash_controller_0+0xff831ee0>
  83af60:	800b883a 	mov	r5,r16
  83af64:	9009883a 	mov	r4,r18
  83af68:	08323600 	call	832360 <_fflush_r>
  83af6c:	1000071e 	bne	r2,zero,83af8c <__swbuf_r+0x114>
  83af70:	80800017 	ldw	r2,0(r16)
  83af74:	00c00044 	movi	r3,1
  83af78:	003fda06 	br	83aee4 <__alt_mem_epcs_flash_controller_0+0xff831ee4>
  83af7c:	800b883a 	mov	r5,r16
  83af80:	9009883a 	mov	r4,r18
  83af84:	08323600 	call	832360 <_fflush_r>
  83af88:	103fe326 	beq	r2,zero,83af18 <__alt_mem_epcs_flash_controller_0+0xff831f18>
  83af8c:	00bfffc4 	movi	r2,-1
  83af90:	003fe206 	br	83af1c <__alt_mem_epcs_flash_controller_0+0xff831f1c>
  83af94:	800b883a 	mov	r5,r16
  83af98:	9009883a 	mov	r4,r18
  83af9c:	083b0300 	call	83b030 <__swsetup_r>
  83afa0:	103ffa1e 	bne	r2,zero,83af8c <__alt_mem_epcs_flash_controller_0+0xff831f8c>
  83afa4:	8100030b 	ldhu	r4,12(r16)
  83afa8:	80c00417 	ldw	r3,16(r16)
  83afac:	003fc506 	br	83aec4 <__alt_mem_epcs_flash_controller_0+0xff831ec4>
  83afb0:	083274c0 	call	83274c <__sinit>
  83afb4:	003fbc06 	br	83aea8 <__alt_mem_epcs_flash_controller_0+0xff831ea8>

0083afb8 <__swbuf>:
  83afb8:	008021b4 	movhi	r2,134
  83afbc:	10adb604 	addi	r2,r2,-18728
  83afc0:	280d883a 	mov	r6,r5
  83afc4:	200b883a 	mov	r5,r4
  83afc8:	11000017 	ldw	r4,0(r2)
  83afcc:	083ae781 	jmpi	83ae78 <__swbuf_r>

0083afd0 <_write_r>:
  83afd0:	defffd04 	addi	sp,sp,-12
  83afd4:	2805883a 	mov	r2,r5
  83afd8:	dc000015 	stw	r16,0(sp)
  83afdc:	040021b4 	movhi	r16,134
  83afe0:	dc400115 	stw	r17,4(sp)
  83afe4:	300b883a 	mov	r5,r6
  83afe8:	842e0c04 	addi	r16,r16,-18384
  83afec:	2023883a 	mov	r17,r4
  83aff0:	380d883a 	mov	r6,r7
  83aff4:	1009883a 	mov	r4,r2
  83aff8:	dfc00215 	stw	ra,8(sp)
  83affc:	80000015 	stw	zero,0(r16)
  83b000:	084a2080 	call	84a208 <write>
  83b004:	00ffffc4 	movi	r3,-1
  83b008:	10c00526 	beq	r2,r3,83b020 <_write_r+0x50>
  83b00c:	dfc00217 	ldw	ra,8(sp)
  83b010:	dc400117 	ldw	r17,4(sp)
  83b014:	dc000017 	ldw	r16,0(sp)
  83b018:	dec00304 	addi	sp,sp,12
  83b01c:	f800283a 	ret
  83b020:	80c00017 	ldw	r3,0(r16)
  83b024:	183ff926 	beq	r3,zero,83b00c <__alt_mem_epcs_flash_controller_0+0xff83200c>
  83b028:	88c00015 	stw	r3,0(r17)
  83b02c:	003ff706 	br	83b00c <__alt_mem_epcs_flash_controller_0+0xff83200c>

0083b030 <__swsetup_r>:
  83b030:	008021b4 	movhi	r2,134
  83b034:	defffd04 	addi	sp,sp,-12
  83b038:	10adb604 	addi	r2,r2,-18728
  83b03c:	dc400115 	stw	r17,4(sp)
  83b040:	2023883a 	mov	r17,r4
  83b044:	11000017 	ldw	r4,0(r2)
  83b048:	dc000015 	stw	r16,0(sp)
  83b04c:	dfc00215 	stw	ra,8(sp)
  83b050:	2821883a 	mov	r16,r5
  83b054:	20000226 	beq	r4,zero,83b060 <__swsetup_r+0x30>
  83b058:	20800e17 	ldw	r2,56(r4)
  83b05c:	10003126 	beq	r2,zero,83b124 <__swsetup_r+0xf4>
  83b060:	8080030b 	ldhu	r2,12(r16)
  83b064:	10c0020c 	andi	r3,r2,8
  83b068:	1009883a 	mov	r4,r2
  83b06c:	18000f26 	beq	r3,zero,83b0ac <__swsetup_r+0x7c>
  83b070:	80c00417 	ldw	r3,16(r16)
  83b074:	18001526 	beq	r3,zero,83b0cc <__swsetup_r+0x9c>
  83b078:	1100004c 	andi	r4,r2,1
  83b07c:	20001c1e 	bne	r4,zero,83b0f0 <__swsetup_r+0xc0>
  83b080:	1080008c 	andi	r2,r2,2
  83b084:	1000291e 	bne	r2,zero,83b12c <__swsetup_r+0xfc>
  83b088:	80800517 	ldw	r2,20(r16)
  83b08c:	80800215 	stw	r2,8(r16)
  83b090:	18001c26 	beq	r3,zero,83b104 <__swsetup_r+0xd4>
  83b094:	0005883a 	mov	r2,zero
  83b098:	dfc00217 	ldw	ra,8(sp)
  83b09c:	dc400117 	ldw	r17,4(sp)
  83b0a0:	dc000017 	ldw	r16,0(sp)
  83b0a4:	dec00304 	addi	sp,sp,12
  83b0a8:	f800283a 	ret
  83b0ac:	2080040c 	andi	r2,r4,16
  83b0b0:	10002e26 	beq	r2,zero,83b16c <__swsetup_r+0x13c>
  83b0b4:	2080010c 	andi	r2,r4,4
  83b0b8:	10001e1e 	bne	r2,zero,83b134 <__swsetup_r+0x104>
  83b0bc:	80c00417 	ldw	r3,16(r16)
  83b0c0:	20800214 	ori	r2,r4,8
  83b0c4:	8080030d 	sth	r2,12(r16)
  83b0c8:	183feb1e 	bne	r3,zero,83b078 <__alt_mem_epcs_flash_controller_0+0xff832078>
  83b0cc:	1100a00c 	andi	r4,r2,640
  83b0d0:	01408004 	movi	r5,512
  83b0d4:	217fe826 	beq	r4,r5,83b078 <__alt_mem_epcs_flash_controller_0+0xff832078>
  83b0d8:	800b883a 	mov	r5,r16
  83b0dc:	8809883a 	mov	r4,r17
  83b0e0:	08337600 	call	833760 <__smakebuf_r>
  83b0e4:	8080030b 	ldhu	r2,12(r16)
  83b0e8:	80c00417 	ldw	r3,16(r16)
  83b0ec:	003fe206 	br	83b078 <__alt_mem_epcs_flash_controller_0+0xff832078>
  83b0f0:	80800517 	ldw	r2,20(r16)
  83b0f4:	80000215 	stw	zero,8(r16)
  83b0f8:	0085c83a 	sub	r2,zero,r2
  83b0fc:	80800615 	stw	r2,24(r16)
  83b100:	183fe41e 	bne	r3,zero,83b094 <__alt_mem_epcs_flash_controller_0+0xff832094>
  83b104:	80c0030b 	ldhu	r3,12(r16)
  83b108:	0005883a 	mov	r2,zero
  83b10c:	1900200c 	andi	r4,r3,128
  83b110:	203fe126 	beq	r4,zero,83b098 <__alt_mem_epcs_flash_controller_0+0xff832098>
  83b114:	18c01014 	ori	r3,r3,64
  83b118:	80c0030d 	sth	r3,12(r16)
  83b11c:	00bfffc4 	movi	r2,-1
  83b120:	003fdd06 	br	83b098 <__alt_mem_epcs_flash_controller_0+0xff832098>
  83b124:	083274c0 	call	83274c <__sinit>
  83b128:	003fcd06 	br	83b060 <__alt_mem_epcs_flash_controller_0+0xff832060>
  83b12c:	0005883a 	mov	r2,zero
  83b130:	003fd606 	br	83b08c <__alt_mem_epcs_flash_controller_0+0xff83208c>
  83b134:	81400c17 	ldw	r5,48(r16)
  83b138:	28000626 	beq	r5,zero,83b154 <__swsetup_r+0x124>
  83b13c:	80801004 	addi	r2,r16,64
  83b140:	28800326 	beq	r5,r2,83b150 <__swsetup_r+0x120>
  83b144:	8809883a 	mov	r4,r17
  83b148:	0832c880 	call	832c88 <_free_r>
  83b14c:	8100030b 	ldhu	r4,12(r16)
  83b150:	80000c15 	stw	zero,48(r16)
  83b154:	80c00417 	ldw	r3,16(r16)
  83b158:	00bff6c4 	movi	r2,-37
  83b15c:	1108703a 	and	r4,r2,r4
  83b160:	80000115 	stw	zero,4(r16)
  83b164:	80c00015 	stw	r3,0(r16)
  83b168:	003fd506 	br	83b0c0 <__alt_mem_epcs_flash_controller_0+0xff8320c0>
  83b16c:	00800244 	movi	r2,9
  83b170:	88800015 	stw	r2,0(r17)
  83b174:	20801014 	ori	r2,r4,64
  83b178:	8080030d 	sth	r2,12(r16)
  83b17c:	00bfffc4 	movi	r2,-1
  83b180:	003fc506 	br	83b098 <__alt_mem_epcs_flash_controller_0+0xff832098>

0083b184 <_close_r>:
  83b184:	defffd04 	addi	sp,sp,-12
  83b188:	dc000015 	stw	r16,0(sp)
  83b18c:	040021b4 	movhi	r16,134
  83b190:	dc400115 	stw	r17,4(sp)
  83b194:	842e0c04 	addi	r16,r16,-18384
  83b198:	2023883a 	mov	r17,r4
  83b19c:	2809883a 	mov	r4,r5
  83b1a0:	dfc00215 	stw	ra,8(sp)
  83b1a4:	80000015 	stw	zero,0(r16)
  83b1a8:	08494980 	call	849498 <close>
  83b1ac:	00ffffc4 	movi	r3,-1
  83b1b0:	10c00526 	beq	r2,r3,83b1c8 <_close_r+0x44>
  83b1b4:	dfc00217 	ldw	ra,8(sp)
  83b1b8:	dc400117 	ldw	r17,4(sp)
  83b1bc:	dc000017 	ldw	r16,0(sp)
  83b1c0:	dec00304 	addi	sp,sp,12
  83b1c4:	f800283a 	ret
  83b1c8:	80c00017 	ldw	r3,0(r16)
  83b1cc:	183ff926 	beq	r3,zero,83b1b4 <__alt_mem_epcs_flash_controller_0+0xff8321b4>
  83b1d0:	88c00015 	stw	r3,0(r17)
  83b1d4:	003ff706 	br	83b1b4 <__alt_mem_epcs_flash_controller_0+0xff8321b4>

0083b1d8 <__call_exitprocs>:
  83b1d8:	defff504 	addi	sp,sp,-44
  83b1dc:	df000915 	stw	fp,36(sp)
  83b1e0:	dd400615 	stw	r21,24(sp)
  83b1e4:	dc800315 	stw	r18,12(sp)
  83b1e8:	dfc00a15 	stw	ra,40(sp)
  83b1ec:	ddc00815 	stw	r23,32(sp)
  83b1f0:	dd800715 	stw	r22,28(sp)
  83b1f4:	dd000515 	stw	r20,20(sp)
  83b1f8:	dcc00415 	stw	r19,16(sp)
  83b1fc:	dc400215 	stw	r17,8(sp)
  83b200:	dc000115 	stw	r16,4(sp)
  83b204:	d9000015 	stw	r4,0(sp)
  83b208:	2839883a 	mov	fp,r5
  83b20c:	04800044 	movi	r18,1
  83b210:	057fffc4 	movi	r21,-1
  83b214:	008021b4 	movhi	r2,134
  83b218:	10adb504 	addi	r2,r2,-18732
  83b21c:	12000017 	ldw	r8,0(r2)
  83b220:	45005217 	ldw	r20,328(r8)
  83b224:	44c05204 	addi	r19,r8,328
  83b228:	a0001c26 	beq	r20,zero,83b29c <__call_exitprocs+0xc4>
  83b22c:	a0800117 	ldw	r2,4(r20)
  83b230:	15ffffc4 	addi	r23,r2,-1
  83b234:	b8000d16 	blt	r23,zero,83b26c <__call_exitprocs+0x94>
  83b238:	14000044 	addi	r16,r2,1
  83b23c:	8421883a 	add	r16,r16,r16
  83b240:	8421883a 	add	r16,r16,r16
  83b244:	84402004 	addi	r17,r16,128
  83b248:	a463883a 	add	r17,r20,r17
  83b24c:	a421883a 	add	r16,r20,r16
  83b250:	e0001e26 	beq	fp,zero,83b2cc <__call_exitprocs+0xf4>
  83b254:	80804017 	ldw	r2,256(r16)
  83b258:	e0801c26 	beq	fp,r2,83b2cc <__call_exitprocs+0xf4>
  83b25c:	bdffffc4 	addi	r23,r23,-1
  83b260:	843fff04 	addi	r16,r16,-4
  83b264:	8c7fff04 	addi	r17,r17,-4
  83b268:	bd7ff91e 	bne	r23,r21,83b250 <__alt_mem_epcs_flash_controller_0+0xff832250>
  83b26c:	008020f4 	movhi	r2,131
  83b270:	108e4c04 	addi	r2,r2,14640
  83b274:	10000926 	beq	r2,zero,83b29c <__call_exitprocs+0xc4>
  83b278:	a0800117 	ldw	r2,4(r20)
  83b27c:	1000301e 	bne	r2,zero,83b340 <__call_exitprocs+0x168>
  83b280:	a0800017 	ldw	r2,0(r20)
  83b284:	10003226 	beq	r2,zero,83b350 <__call_exitprocs+0x178>
  83b288:	a009883a 	mov	r4,r20
  83b28c:	98800015 	stw	r2,0(r19)
  83b290:	08339300 	call	833930 <free>
  83b294:	9d000017 	ldw	r20,0(r19)
  83b298:	a03fe41e 	bne	r20,zero,83b22c <__alt_mem_epcs_flash_controller_0+0xff83222c>
  83b29c:	dfc00a17 	ldw	ra,40(sp)
  83b2a0:	df000917 	ldw	fp,36(sp)
  83b2a4:	ddc00817 	ldw	r23,32(sp)
  83b2a8:	dd800717 	ldw	r22,28(sp)
  83b2ac:	dd400617 	ldw	r21,24(sp)
  83b2b0:	dd000517 	ldw	r20,20(sp)
  83b2b4:	dcc00417 	ldw	r19,16(sp)
  83b2b8:	dc800317 	ldw	r18,12(sp)
  83b2bc:	dc400217 	ldw	r17,8(sp)
  83b2c0:	dc000117 	ldw	r16,4(sp)
  83b2c4:	dec00b04 	addi	sp,sp,44
  83b2c8:	f800283a 	ret
  83b2cc:	a0800117 	ldw	r2,4(r20)
  83b2d0:	80c00017 	ldw	r3,0(r16)
  83b2d4:	10bfffc4 	addi	r2,r2,-1
  83b2d8:	15c01426 	beq	r2,r23,83b32c <__call_exitprocs+0x154>
  83b2dc:	80000015 	stw	zero,0(r16)
  83b2e0:	183fde26 	beq	r3,zero,83b25c <__alt_mem_epcs_flash_controller_0+0xff83225c>
  83b2e4:	95c8983a 	sll	r4,r18,r23
  83b2e8:	a0806217 	ldw	r2,392(r20)
  83b2ec:	a5800117 	ldw	r22,4(r20)
  83b2f0:	2084703a 	and	r2,r4,r2
  83b2f4:	10000b26 	beq	r2,zero,83b324 <__call_exitprocs+0x14c>
  83b2f8:	a0806317 	ldw	r2,396(r20)
  83b2fc:	2088703a 	and	r4,r4,r2
  83b300:	20000c1e 	bne	r4,zero,83b334 <__call_exitprocs+0x15c>
  83b304:	89400017 	ldw	r5,0(r17)
  83b308:	d9000017 	ldw	r4,0(sp)
  83b30c:	183ee83a 	callr	r3
  83b310:	a0800117 	ldw	r2,4(r20)
  83b314:	15bfbf1e 	bne	r2,r22,83b214 <__alt_mem_epcs_flash_controller_0+0xff832214>
  83b318:	98800017 	ldw	r2,0(r19)
  83b31c:	153fcf26 	beq	r2,r20,83b25c <__alt_mem_epcs_flash_controller_0+0xff83225c>
  83b320:	003fbc06 	br	83b214 <__alt_mem_epcs_flash_controller_0+0xff832214>
  83b324:	183ee83a 	callr	r3
  83b328:	003ff906 	br	83b310 <__alt_mem_epcs_flash_controller_0+0xff832310>
  83b32c:	a5c00115 	stw	r23,4(r20)
  83b330:	003feb06 	br	83b2e0 <__alt_mem_epcs_flash_controller_0+0xff8322e0>
  83b334:	89000017 	ldw	r4,0(r17)
  83b338:	183ee83a 	callr	r3
  83b33c:	003ff406 	br	83b310 <__alt_mem_epcs_flash_controller_0+0xff832310>
  83b340:	a0800017 	ldw	r2,0(r20)
  83b344:	a027883a 	mov	r19,r20
  83b348:	1029883a 	mov	r20,r2
  83b34c:	003fb606 	br	83b228 <__alt_mem_epcs_flash_controller_0+0xff832228>
  83b350:	0005883a 	mov	r2,zero
  83b354:	003ffb06 	br	83b344 <__alt_mem_epcs_flash_controller_0+0xff832344>

0083b358 <quorem>:
  83b358:	defff204 	addi	sp,sp,-56
  83b35c:	ddc00b15 	stw	r23,44(sp)
  83b360:	20800417 	ldw	r2,16(r4)
  83b364:	2dc00417 	ldw	r23,16(r5)
  83b368:	dfc00d15 	stw	ra,52(sp)
  83b36c:	df000c15 	stw	fp,48(sp)
  83b370:	dd800a15 	stw	r22,40(sp)
  83b374:	dd400915 	stw	r21,36(sp)
  83b378:	dd000815 	stw	r20,32(sp)
  83b37c:	dcc00715 	stw	r19,28(sp)
  83b380:	dc800615 	stw	r18,24(sp)
  83b384:	dc400515 	stw	r17,20(sp)
  83b388:	dc000415 	stw	r16,16(sp)
  83b38c:	15c07a16 	blt	r2,r23,83b578 <quorem+0x220>
  83b390:	bdffffc4 	addi	r23,r23,-1
  83b394:	bde9883a 	add	r20,r23,r23
  83b398:	28c00504 	addi	r3,r5,20
  83b39c:	a529883a 	add	r20,r20,r20
  83b3a0:	1d39883a 	add	fp,r3,r20
  83b3a4:	24c00504 	addi	r19,r4,20
  83b3a8:	d9400215 	stw	r5,8(sp)
  83b3ac:	9d29883a 	add	r20,r19,r20
  83b3b0:	e1400017 	ldw	r5,0(fp)
  83b3b4:	d9000015 	stw	r4,0(sp)
  83b3b8:	a1000017 	ldw	r4,0(r20)
  83b3bc:	29400044 	addi	r5,r5,1
  83b3c0:	d8c00115 	stw	r3,4(sp)
  83b3c4:	dd000315 	stw	r20,12(sp)
  83b3c8:	08304480 	call	830448 <__udivsi3>
  83b3cc:	1025883a 	mov	r18,r2
  83b3d0:	10003026 	beq	r2,zero,83b494 <quorem+0x13c>
  83b3d4:	dc400117 	ldw	r17,4(sp)
  83b3d8:	9829883a 	mov	r20,r19
  83b3dc:	002d883a 	mov	r22,zero
  83b3e0:	0021883a 	mov	r16,zero
  83b3e4:	8d400017 	ldw	r21,0(r17)
  83b3e8:	900b883a 	mov	r5,r18
  83b3ec:	8c400104 	addi	r17,r17,4
  83b3f0:	a93fffcc 	andi	r4,r21,65535
  83b3f4:	08305040 	call	830504 <__mulsi3>
  83b3f8:	a808d43a 	srli	r4,r21,16
  83b3fc:	900b883a 	mov	r5,r18
  83b400:	15ad883a 	add	r22,r2,r22
  83b404:	08305040 	call	830504 <__mulsi3>
  83b408:	a1000017 	ldw	r4,0(r20)
  83b40c:	b00cd43a 	srli	r6,r22,16
  83b410:	b0ffffcc 	andi	r3,r22,65535
  83b414:	217fffcc 	andi	r5,r4,65535
  83b418:	2c21883a 	add	r16,r5,r16
  83b41c:	80c7c83a 	sub	r3,r16,r3
  83b420:	2008d43a 	srli	r4,r4,16
  83b424:	1185883a 	add	r2,r2,r6
  83b428:	1821d43a 	srai	r16,r3,16
  83b42c:	117fffcc 	andi	r5,r2,65535
  83b430:	2149c83a 	sub	r4,r4,r5
  83b434:	2421883a 	add	r16,r4,r16
  83b438:	8008943a 	slli	r4,r16,16
  83b43c:	18ffffcc 	andi	r3,r3,65535
  83b440:	102cd43a 	srli	r22,r2,16
  83b444:	20c8b03a 	or	r4,r4,r3
  83b448:	a1000015 	stw	r4,0(r20)
  83b44c:	8021d43a 	srai	r16,r16,16
  83b450:	a5000104 	addi	r20,r20,4
  83b454:	e47fe32e 	bgeu	fp,r17,83b3e4 <__alt_mem_epcs_flash_controller_0+0xff8323e4>
  83b458:	d8c00317 	ldw	r3,12(sp)
  83b45c:	18800017 	ldw	r2,0(r3)
  83b460:	10000c1e 	bne	r2,zero,83b494 <quorem+0x13c>
  83b464:	18bfff04 	addi	r2,r3,-4
  83b468:	9880082e 	bgeu	r19,r2,83b48c <quorem+0x134>
  83b46c:	18ffff17 	ldw	r3,-4(r3)
  83b470:	18000326 	beq	r3,zero,83b480 <quorem+0x128>
  83b474:	00000506 	br	83b48c <quorem+0x134>
  83b478:	10c00017 	ldw	r3,0(r2)
  83b47c:	1800031e 	bne	r3,zero,83b48c <quorem+0x134>
  83b480:	10bfff04 	addi	r2,r2,-4
  83b484:	bdffffc4 	addi	r23,r23,-1
  83b488:	98bffb36 	bltu	r19,r2,83b478 <__alt_mem_epcs_flash_controller_0+0xff832478>
  83b48c:	d8c00017 	ldw	r3,0(sp)
  83b490:	1dc00415 	stw	r23,16(r3)
  83b494:	d9400217 	ldw	r5,8(sp)
  83b498:	d9000017 	ldw	r4,0(sp)
  83b49c:	083e1240 	call	83e124 <__mcmp>
  83b4a0:	10002816 	blt	r2,zero,83b544 <quorem+0x1ec>
  83b4a4:	dc400117 	ldw	r17,4(sp)
  83b4a8:	94800044 	addi	r18,r18,1
  83b4ac:	980d883a 	mov	r6,r19
  83b4b0:	0007883a 	mov	r3,zero
  83b4b4:	31000017 	ldw	r4,0(r6)
  83b4b8:	89400017 	ldw	r5,0(r17)
  83b4bc:	31800104 	addi	r6,r6,4
  83b4c0:	20bfffcc 	andi	r2,r4,65535
  83b4c4:	10c7883a 	add	r3,r2,r3
  83b4c8:	28bfffcc 	andi	r2,r5,65535
  83b4cc:	1885c83a 	sub	r2,r3,r2
  83b4d0:	280ad43a 	srli	r5,r5,16
  83b4d4:	2008d43a 	srli	r4,r4,16
  83b4d8:	1007d43a 	srai	r3,r2,16
  83b4dc:	10bfffcc 	andi	r2,r2,65535
  83b4e0:	2149c83a 	sub	r4,r4,r5
  83b4e4:	20c9883a 	add	r4,r4,r3
  83b4e8:	200a943a 	slli	r5,r4,16
  83b4ec:	8c400104 	addi	r17,r17,4
  83b4f0:	2007d43a 	srai	r3,r4,16
  83b4f4:	2884b03a 	or	r2,r5,r2
  83b4f8:	30bfff15 	stw	r2,-4(r6)
  83b4fc:	e47fed2e 	bgeu	fp,r17,83b4b4 <__alt_mem_epcs_flash_controller_0+0xff8324b4>
  83b500:	bdc5883a 	add	r2,r23,r23
  83b504:	1085883a 	add	r2,r2,r2
  83b508:	9887883a 	add	r3,r19,r2
  83b50c:	18800017 	ldw	r2,0(r3)
  83b510:	10000c1e 	bne	r2,zero,83b544 <quorem+0x1ec>
  83b514:	18bfff04 	addi	r2,r3,-4
  83b518:	9880082e 	bgeu	r19,r2,83b53c <quorem+0x1e4>
  83b51c:	18ffff17 	ldw	r3,-4(r3)
  83b520:	18000326 	beq	r3,zero,83b530 <quorem+0x1d8>
  83b524:	00000506 	br	83b53c <quorem+0x1e4>
  83b528:	10c00017 	ldw	r3,0(r2)
  83b52c:	1800031e 	bne	r3,zero,83b53c <quorem+0x1e4>
  83b530:	10bfff04 	addi	r2,r2,-4
  83b534:	bdffffc4 	addi	r23,r23,-1
  83b538:	98bffb36 	bltu	r19,r2,83b528 <__alt_mem_epcs_flash_controller_0+0xff832528>
  83b53c:	d8c00017 	ldw	r3,0(sp)
  83b540:	1dc00415 	stw	r23,16(r3)
  83b544:	9005883a 	mov	r2,r18
  83b548:	dfc00d17 	ldw	ra,52(sp)
  83b54c:	df000c17 	ldw	fp,48(sp)
  83b550:	ddc00b17 	ldw	r23,44(sp)
  83b554:	dd800a17 	ldw	r22,40(sp)
  83b558:	dd400917 	ldw	r21,36(sp)
  83b55c:	dd000817 	ldw	r20,32(sp)
  83b560:	dcc00717 	ldw	r19,28(sp)
  83b564:	dc800617 	ldw	r18,24(sp)
  83b568:	dc400517 	ldw	r17,20(sp)
  83b56c:	dc000417 	ldw	r16,16(sp)
  83b570:	dec00e04 	addi	sp,sp,56
  83b574:	f800283a 	ret
  83b578:	0005883a 	mov	r2,zero
  83b57c:	003ff206 	br	83b548 <__alt_mem_epcs_flash_controller_0+0xff832548>

0083b580 <_dtoa_r>:
  83b580:	20801017 	ldw	r2,64(r4)
  83b584:	deffde04 	addi	sp,sp,-136
  83b588:	df002015 	stw	fp,128(sp)
  83b58c:	dcc01b15 	stw	r19,108(sp)
  83b590:	dc801a15 	stw	r18,104(sp)
  83b594:	dc401915 	stw	r17,100(sp)
  83b598:	dc001815 	stw	r16,96(sp)
  83b59c:	dfc02115 	stw	ra,132(sp)
  83b5a0:	ddc01f15 	stw	r23,124(sp)
  83b5a4:	dd801e15 	stw	r22,120(sp)
  83b5a8:	dd401d15 	stw	r21,116(sp)
  83b5ac:	dd001c15 	stw	r20,112(sp)
  83b5b0:	d9c00315 	stw	r7,12(sp)
  83b5b4:	2039883a 	mov	fp,r4
  83b5b8:	3023883a 	mov	r17,r6
  83b5bc:	2825883a 	mov	r18,r5
  83b5c0:	dc002417 	ldw	r16,144(sp)
  83b5c4:	3027883a 	mov	r19,r6
  83b5c8:	10000826 	beq	r2,zero,83b5ec <_dtoa_r+0x6c>
  83b5cc:	21801117 	ldw	r6,68(r4)
  83b5d0:	00c00044 	movi	r3,1
  83b5d4:	100b883a 	mov	r5,r2
  83b5d8:	1986983a 	sll	r3,r3,r6
  83b5dc:	11800115 	stw	r6,4(r2)
  83b5e0:	10c00215 	stw	r3,8(r2)
  83b5e4:	083d8480 	call	83d848 <_Bfree>
  83b5e8:	e0001015 	stw	zero,64(fp)
  83b5ec:	88002e16 	blt	r17,zero,83b6a8 <_dtoa_r+0x128>
  83b5f0:	80000015 	stw	zero,0(r16)
  83b5f4:	889ffc2c 	andhi	r2,r17,32752
  83b5f8:	00dffc34 	movhi	r3,32752
  83b5fc:	10c01c26 	beq	r2,r3,83b670 <_dtoa_r+0xf0>
  83b600:	000d883a 	mov	r6,zero
  83b604:	000f883a 	mov	r7,zero
  83b608:	9009883a 	mov	r4,r18
  83b60c:	980b883a 	mov	r5,r19
  83b610:	08487ac0 	call	8487ac <__eqdf2>
  83b614:	10002b1e 	bne	r2,zero,83b6c4 <_dtoa_r+0x144>
  83b618:	d9c02317 	ldw	r7,140(sp)
  83b61c:	00800044 	movi	r2,1
  83b620:	38800015 	stw	r2,0(r7)
  83b624:	d8802517 	ldw	r2,148(sp)
  83b628:	10019e26 	beq	r2,zero,83bca4 <_dtoa_r+0x724>
  83b62c:	d8c02517 	ldw	r3,148(sp)
  83b630:	008021b4 	movhi	r2,134
  83b634:	10a44144 	addi	r2,r2,-28411
  83b638:	18800015 	stw	r2,0(r3)
  83b63c:	10bfffc4 	addi	r2,r2,-1
  83b640:	dfc02117 	ldw	ra,132(sp)
  83b644:	df002017 	ldw	fp,128(sp)
  83b648:	ddc01f17 	ldw	r23,124(sp)
  83b64c:	dd801e17 	ldw	r22,120(sp)
  83b650:	dd401d17 	ldw	r21,116(sp)
  83b654:	dd001c17 	ldw	r20,112(sp)
  83b658:	dcc01b17 	ldw	r19,108(sp)
  83b65c:	dc801a17 	ldw	r18,104(sp)
  83b660:	dc401917 	ldw	r17,100(sp)
  83b664:	dc001817 	ldw	r16,96(sp)
  83b668:	dec02204 	addi	sp,sp,136
  83b66c:	f800283a 	ret
  83b670:	d8c02317 	ldw	r3,140(sp)
  83b674:	0089c3c4 	movi	r2,9999
  83b678:	18800015 	stw	r2,0(r3)
  83b67c:	90017726 	beq	r18,zero,83bc5c <_dtoa_r+0x6dc>
  83b680:	008021b4 	movhi	r2,134
  83b684:	10a50004 	addi	r2,r2,-27648
  83b688:	d9002517 	ldw	r4,148(sp)
  83b68c:	203fec26 	beq	r4,zero,83b640 <__alt_mem_epcs_flash_controller_0+0xff832640>
  83b690:	10c000c7 	ldb	r3,3(r2)
  83b694:	1801781e 	bne	r3,zero,83bc78 <_dtoa_r+0x6f8>
  83b698:	10c000c4 	addi	r3,r2,3
  83b69c:	d9802517 	ldw	r6,148(sp)
  83b6a0:	30c00015 	stw	r3,0(r6)
  83b6a4:	003fe606 	br	83b640 <__alt_mem_epcs_flash_controller_0+0xff832640>
  83b6a8:	04e00034 	movhi	r19,32768
  83b6ac:	9cffffc4 	addi	r19,r19,-1
  83b6b0:	00800044 	movi	r2,1
  83b6b4:	8ce6703a 	and	r19,r17,r19
  83b6b8:	80800015 	stw	r2,0(r16)
  83b6bc:	9823883a 	mov	r17,r19
  83b6c0:	003fcc06 	br	83b5f4 <__alt_mem_epcs_flash_controller_0+0xff8325f4>
  83b6c4:	d8800204 	addi	r2,sp,8
  83b6c8:	d8800015 	stw	r2,0(sp)
  83b6cc:	d9c00104 	addi	r7,sp,4
  83b6d0:	900b883a 	mov	r5,r18
  83b6d4:	980d883a 	mov	r6,r19
  83b6d8:	e009883a 	mov	r4,fp
  83b6dc:	8820d53a 	srli	r16,r17,20
  83b6e0:	083e4f00 	call	83e4f0 <__d2b>
  83b6e4:	d8800915 	stw	r2,36(sp)
  83b6e8:	8001651e 	bne	r16,zero,83bc80 <_dtoa_r+0x700>
  83b6ec:	dd800217 	ldw	r22,8(sp)
  83b6f0:	dc000117 	ldw	r16,4(sp)
  83b6f4:	00800804 	movi	r2,32
  83b6f8:	b421883a 	add	r16,r22,r16
  83b6fc:	80c10c84 	addi	r3,r16,1074
  83b700:	10c2d10e 	bge	r2,r3,83c248 <_dtoa_r+0xcc8>
  83b704:	00801004 	movi	r2,64
  83b708:	81010484 	addi	r4,r16,1042
  83b70c:	10c7c83a 	sub	r3,r2,r3
  83b710:	9108d83a 	srl	r4,r18,r4
  83b714:	88e2983a 	sll	r17,r17,r3
  83b718:	2448b03a 	or	r4,r4,r17
  83b71c:	0831d080 	call	831d08 <__floatunsidf>
  83b720:	017f8434 	movhi	r5,65040
  83b724:	01800044 	movi	r6,1
  83b728:	1009883a 	mov	r4,r2
  83b72c:	194b883a 	add	r5,r3,r5
  83b730:	843fffc4 	addi	r16,r16,-1
  83b734:	d9801115 	stw	r6,68(sp)
  83b738:	000d883a 	mov	r6,zero
  83b73c:	01cffe34 	movhi	r7,16376
  83b740:	0848a040 	call	848a04 <__subdf3>
  83b744:	0198dbf4 	movhi	r6,25455
  83b748:	01cff4f4 	movhi	r7,16339
  83b74c:	3190d844 	addi	r6,r6,17249
  83b750:	39e1e9c4 	addi	r7,r7,-30809
  83b754:	1009883a 	mov	r4,r2
  83b758:	180b883a 	mov	r5,r3
  83b75c:	083149c0 	call	83149c <__muldf3>
  83b760:	01a2d874 	movhi	r6,35681
  83b764:	01cff1f4 	movhi	r7,16327
  83b768:	31b22cc4 	addi	r6,r6,-14157
  83b76c:	39e28a04 	addi	r7,r7,-30168
  83b770:	180b883a 	mov	r5,r3
  83b774:	1009883a 	mov	r4,r2
  83b778:	08475300 	call	847530 <__adddf3>
  83b77c:	8009883a 	mov	r4,r16
  83b780:	1029883a 	mov	r20,r2
  83b784:	1823883a 	mov	r17,r3
  83b788:	08493800 	call	849380 <__floatsidf>
  83b78c:	019427f4 	movhi	r6,20639
  83b790:	01cff4f4 	movhi	r7,16339
  83b794:	319e7ec4 	addi	r6,r6,31227
  83b798:	39d104c4 	addi	r7,r7,17427
  83b79c:	1009883a 	mov	r4,r2
  83b7a0:	180b883a 	mov	r5,r3
  83b7a4:	083149c0 	call	83149c <__muldf3>
  83b7a8:	100d883a 	mov	r6,r2
  83b7ac:	180f883a 	mov	r7,r3
  83b7b0:	a009883a 	mov	r4,r20
  83b7b4:	880b883a 	mov	r5,r17
  83b7b8:	08475300 	call	847530 <__adddf3>
  83b7bc:	1009883a 	mov	r4,r2
  83b7c0:	180b883a 	mov	r5,r3
  83b7c4:	1029883a 	mov	r20,r2
  83b7c8:	1823883a 	mov	r17,r3
  83b7cc:	08493000 	call	849300 <__fixdfsi>
  83b7d0:	000d883a 	mov	r6,zero
  83b7d4:	000f883a 	mov	r7,zero
  83b7d8:	a009883a 	mov	r4,r20
  83b7dc:	880b883a 	mov	r5,r17
  83b7e0:	d8800515 	stw	r2,20(sp)
  83b7e4:	08489100 	call	848910 <__ledf2>
  83b7e8:	10028716 	blt	r2,zero,83c208 <_dtoa_r+0xc88>
  83b7ec:	d8c00517 	ldw	r3,20(sp)
  83b7f0:	00800584 	movi	r2,22
  83b7f4:	10c27536 	bltu	r2,r3,83c1cc <_dtoa_r+0xc4c>
  83b7f8:	180490fa 	slli	r2,r3,3
  83b7fc:	00c021b4 	movhi	r3,134
  83b800:	18e51b04 	addi	r3,r3,-27540
  83b804:	1885883a 	add	r2,r3,r2
  83b808:	11000017 	ldw	r4,0(r2)
  83b80c:	11400117 	ldw	r5,4(r2)
  83b810:	900d883a 	mov	r6,r18
  83b814:	980f883a 	mov	r7,r19
  83b818:	08488340 	call	848834 <__gedf2>
  83b81c:	00828d0e 	bge	zero,r2,83c254 <_dtoa_r+0xcd4>
  83b820:	d9000517 	ldw	r4,20(sp)
  83b824:	d8000e15 	stw	zero,56(sp)
  83b828:	213fffc4 	addi	r4,r4,-1
  83b82c:	d9000515 	stw	r4,20(sp)
  83b830:	b42dc83a 	sub	r22,r22,r16
  83b834:	b5bfffc4 	addi	r22,r22,-1
  83b838:	b0026f16 	blt	r22,zero,83c1f8 <_dtoa_r+0xc78>
  83b83c:	d8000815 	stw	zero,32(sp)
  83b840:	d9c00517 	ldw	r7,20(sp)
  83b844:	38026416 	blt	r7,zero,83c1d8 <_dtoa_r+0xc58>
  83b848:	b1ed883a 	add	r22,r22,r7
  83b84c:	d9c00d15 	stw	r7,52(sp)
  83b850:	d8000a15 	stw	zero,40(sp)
  83b854:	d9800317 	ldw	r6,12(sp)
  83b858:	00800244 	movi	r2,9
  83b85c:	11811436 	bltu	r2,r6,83bcb0 <_dtoa_r+0x730>
  83b860:	00800144 	movi	r2,5
  83b864:	1184e10e 	bge	r2,r6,83cbec <_dtoa_r+0x166c>
  83b868:	31bfff04 	addi	r6,r6,-4
  83b86c:	d9800315 	stw	r6,12(sp)
  83b870:	0023883a 	mov	r17,zero
  83b874:	d9800317 	ldw	r6,12(sp)
  83b878:	008000c4 	movi	r2,3
  83b87c:	30836726 	beq	r6,r2,83c61c <_dtoa_r+0x109c>
  83b880:	1183410e 	bge	r2,r6,83c588 <_dtoa_r+0x1008>
  83b884:	d9c00317 	ldw	r7,12(sp)
  83b888:	00800104 	movi	r2,4
  83b88c:	38827c26 	beq	r7,r2,83c280 <_dtoa_r+0xd00>
  83b890:	00800144 	movi	r2,5
  83b894:	3884c41e 	bne	r7,r2,83cba8 <_dtoa_r+0x1628>
  83b898:	00800044 	movi	r2,1
  83b89c:	d8800b15 	stw	r2,44(sp)
  83b8a0:	d8c00517 	ldw	r3,20(sp)
  83b8a4:	d9002217 	ldw	r4,136(sp)
  83b8a8:	1907883a 	add	r3,r3,r4
  83b8ac:	19800044 	addi	r6,r3,1
  83b8b0:	d8c00c15 	stw	r3,48(sp)
  83b8b4:	d9800615 	stw	r6,24(sp)
  83b8b8:	0183a40e 	bge	zero,r6,83c74c <_dtoa_r+0x11cc>
  83b8bc:	d9800617 	ldw	r6,24(sp)
  83b8c0:	3021883a 	mov	r16,r6
  83b8c4:	e0001115 	stw	zero,68(fp)
  83b8c8:	008005c4 	movi	r2,23
  83b8cc:	1184c92e 	bgeu	r2,r6,83cbf4 <_dtoa_r+0x1674>
  83b8d0:	00c00044 	movi	r3,1
  83b8d4:	00800104 	movi	r2,4
  83b8d8:	1085883a 	add	r2,r2,r2
  83b8dc:	11000504 	addi	r4,r2,20
  83b8e0:	180b883a 	mov	r5,r3
  83b8e4:	18c00044 	addi	r3,r3,1
  83b8e8:	313ffb2e 	bgeu	r6,r4,83b8d8 <__alt_mem_epcs_flash_controller_0+0xff8328d8>
  83b8ec:	e1401115 	stw	r5,68(fp)
  83b8f0:	e009883a 	mov	r4,fp
  83b8f4:	083d7a00 	call	83d7a0 <_Balloc>
  83b8f8:	d8800715 	stw	r2,28(sp)
  83b8fc:	e0801015 	stw	r2,64(fp)
  83b900:	00800384 	movi	r2,14
  83b904:	1400f736 	bltu	r2,r16,83bce4 <_dtoa_r+0x764>
  83b908:	8800f626 	beq	r17,zero,83bce4 <_dtoa_r+0x764>
  83b90c:	d9c00517 	ldw	r7,20(sp)
  83b910:	01c39a0e 	bge	zero,r7,83c77c <_dtoa_r+0x11fc>
  83b914:	388003cc 	andi	r2,r7,15
  83b918:	100490fa 	slli	r2,r2,3
  83b91c:	382bd13a 	srai	r21,r7,4
  83b920:	00c021b4 	movhi	r3,134
  83b924:	18e51b04 	addi	r3,r3,-27540
  83b928:	1885883a 	add	r2,r3,r2
  83b92c:	a8c0040c 	andi	r3,r21,16
  83b930:	12400017 	ldw	r9,0(r2)
  83b934:	12000117 	ldw	r8,4(r2)
  83b938:	18037926 	beq	r3,zero,83c720 <_dtoa_r+0x11a0>
  83b93c:	008021b4 	movhi	r2,134
  83b940:	10a51104 	addi	r2,r2,-27580
  83b944:	11800817 	ldw	r6,32(r2)
  83b948:	11c00917 	ldw	r7,36(r2)
  83b94c:	9009883a 	mov	r4,r18
  83b950:	980b883a 	mov	r5,r19
  83b954:	da001715 	stw	r8,92(sp)
  83b958:	da401615 	stw	r9,88(sp)
  83b95c:	0847ddc0 	call	847ddc <__divdf3>
  83b960:	da001717 	ldw	r8,92(sp)
  83b964:	da401617 	ldw	r9,88(sp)
  83b968:	ad4003cc 	andi	r21,r21,15
  83b96c:	040000c4 	movi	r16,3
  83b970:	1023883a 	mov	r17,r2
  83b974:	1829883a 	mov	r20,r3
  83b978:	a8001126 	beq	r21,zero,83b9c0 <_dtoa_r+0x440>
  83b97c:	05c021b4 	movhi	r23,134
  83b980:	bde51104 	addi	r23,r23,-27580
  83b984:	4805883a 	mov	r2,r9
  83b988:	4007883a 	mov	r3,r8
  83b98c:	a980004c 	andi	r6,r21,1
  83b990:	1009883a 	mov	r4,r2
  83b994:	a82bd07a 	srai	r21,r21,1
  83b998:	180b883a 	mov	r5,r3
  83b99c:	30000426 	beq	r6,zero,83b9b0 <_dtoa_r+0x430>
  83b9a0:	b9800017 	ldw	r6,0(r23)
  83b9a4:	b9c00117 	ldw	r7,4(r23)
  83b9a8:	84000044 	addi	r16,r16,1
  83b9ac:	083149c0 	call	83149c <__muldf3>
  83b9b0:	bdc00204 	addi	r23,r23,8
  83b9b4:	a83ff51e 	bne	r21,zero,83b98c <__alt_mem_epcs_flash_controller_0+0xff83298c>
  83b9b8:	1013883a 	mov	r9,r2
  83b9bc:	1811883a 	mov	r8,r3
  83b9c0:	480d883a 	mov	r6,r9
  83b9c4:	400f883a 	mov	r7,r8
  83b9c8:	8809883a 	mov	r4,r17
  83b9cc:	a00b883a 	mov	r5,r20
  83b9d0:	0847ddc0 	call	847ddc <__divdf3>
  83b9d4:	d8800f15 	stw	r2,60(sp)
  83b9d8:	d8c01015 	stw	r3,64(sp)
  83b9dc:	d8c00e17 	ldw	r3,56(sp)
  83b9e0:	18000626 	beq	r3,zero,83b9fc <_dtoa_r+0x47c>
  83b9e4:	d9000f17 	ldw	r4,60(sp)
  83b9e8:	d9401017 	ldw	r5,64(sp)
  83b9ec:	000d883a 	mov	r6,zero
  83b9f0:	01cffc34 	movhi	r7,16368
  83b9f4:	08489100 	call	848910 <__ledf2>
  83b9f8:	10040b16 	blt	r2,zero,83ca28 <_dtoa_r+0x14a8>
  83b9fc:	8009883a 	mov	r4,r16
  83ba00:	08493800 	call	849380 <__floatsidf>
  83ba04:	d9800f17 	ldw	r6,60(sp)
  83ba08:	d9c01017 	ldw	r7,64(sp)
  83ba0c:	1009883a 	mov	r4,r2
  83ba10:	180b883a 	mov	r5,r3
  83ba14:	083149c0 	call	83149c <__muldf3>
  83ba18:	000d883a 	mov	r6,zero
  83ba1c:	01d00734 	movhi	r7,16412
  83ba20:	1009883a 	mov	r4,r2
  83ba24:	180b883a 	mov	r5,r3
  83ba28:	08475300 	call	847530 <__adddf3>
  83ba2c:	1021883a 	mov	r16,r2
  83ba30:	d8800617 	ldw	r2,24(sp)
  83ba34:	047f3034 	movhi	r17,64704
  83ba38:	1c63883a 	add	r17,r3,r17
  83ba3c:	10031826 	beq	r2,zero,83c6a0 <_dtoa_r+0x1120>
  83ba40:	d8c00517 	ldw	r3,20(sp)
  83ba44:	db000617 	ldw	r12,24(sp)
  83ba48:	d8c01315 	stw	r3,76(sp)
  83ba4c:	d9000b17 	ldw	r4,44(sp)
  83ba50:	20038f26 	beq	r4,zero,83c890 <_dtoa_r+0x1310>
  83ba54:	60bfffc4 	addi	r2,r12,-1
  83ba58:	100490fa 	slli	r2,r2,3
  83ba5c:	00c021b4 	movhi	r3,134
  83ba60:	18e51b04 	addi	r3,r3,-27540
  83ba64:	1885883a 	add	r2,r3,r2
  83ba68:	11800017 	ldw	r6,0(r2)
  83ba6c:	11c00117 	ldw	r7,4(r2)
  83ba70:	d8800717 	ldw	r2,28(sp)
  83ba74:	0009883a 	mov	r4,zero
  83ba78:	014ff834 	movhi	r5,16352
  83ba7c:	db001615 	stw	r12,88(sp)
  83ba80:	15c00044 	addi	r23,r2,1
  83ba84:	0847ddc0 	call	847ddc <__divdf3>
  83ba88:	800d883a 	mov	r6,r16
  83ba8c:	880f883a 	mov	r7,r17
  83ba90:	1009883a 	mov	r4,r2
  83ba94:	180b883a 	mov	r5,r3
  83ba98:	0848a040 	call	848a04 <__subdf3>
  83ba9c:	d9401017 	ldw	r5,64(sp)
  83baa0:	d9000f17 	ldw	r4,60(sp)
  83baa4:	102b883a 	mov	r21,r2
  83baa8:	d8c01215 	stw	r3,72(sp)
  83baac:	08493000 	call	849300 <__fixdfsi>
  83bab0:	1009883a 	mov	r4,r2
  83bab4:	1029883a 	mov	r20,r2
  83bab8:	08493800 	call	849380 <__floatsidf>
  83babc:	d9000f17 	ldw	r4,60(sp)
  83bac0:	d9401017 	ldw	r5,64(sp)
  83bac4:	100d883a 	mov	r6,r2
  83bac8:	180f883a 	mov	r7,r3
  83bacc:	0848a040 	call	848a04 <__subdf3>
  83bad0:	1823883a 	mov	r17,r3
  83bad4:	d8c00717 	ldw	r3,28(sp)
  83bad8:	d9401217 	ldw	r5,72(sp)
  83badc:	a2000c04 	addi	r8,r20,48
  83bae0:	1021883a 	mov	r16,r2
  83bae4:	1a000005 	stb	r8,0(r3)
  83bae8:	800d883a 	mov	r6,r16
  83baec:	880f883a 	mov	r7,r17
  83baf0:	a809883a 	mov	r4,r21
  83baf4:	4029883a 	mov	r20,r8
  83baf8:	08488340 	call	848834 <__gedf2>
  83bafc:	00841d16 	blt	zero,r2,83cb74 <_dtoa_r+0x15f4>
  83bb00:	800d883a 	mov	r6,r16
  83bb04:	880f883a 	mov	r7,r17
  83bb08:	0009883a 	mov	r4,zero
  83bb0c:	014ffc34 	movhi	r5,16368
  83bb10:	0848a040 	call	848a04 <__subdf3>
  83bb14:	d9401217 	ldw	r5,72(sp)
  83bb18:	100d883a 	mov	r6,r2
  83bb1c:	180f883a 	mov	r7,r3
  83bb20:	a809883a 	mov	r4,r21
  83bb24:	08488340 	call	848834 <__gedf2>
  83bb28:	db001617 	ldw	r12,88(sp)
  83bb2c:	00840e16 	blt	zero,r2,83cb68 <_dtoa_r+0x15e8>
  83bb30:	00800044 	movi	r2,1
  83bb34:	13006b0e 	bge	r2,r12,83bce4 <_dtoa_r+0x764>
  83bb38:	d9000717 	ldw	r4,28(sp)
  83bb3c:	dd800f15 	stw	r22,60(sp)
  83bb40:	dcc01015 	stw	r19,64(sp)
  83bb44:	2319883a 	add	r12,r4,r12
  83bb48:	dcc01217 	ldw	r19,72(sp)
  83bb4c:	602d883a 	mov	r22,r12
  83bb50:	dc801215 	stw	r18,72(sp)
  83bb54:	b825883a 	mov	r18,r23
  83bb58:	00000906 	br	83bb80 <_dtoa_r+0x600>
  83bb5c:	0848a040 	call	848a04 <__subdf3>
  83bb60:	a80d883a 	mov	r6,r21
  83bb64:	980f883a 	mov	r7,r19
  83bb68:	1009883a 	mov	r4,r2
  83bb6c:	180b883a 	mov	r5,r3
  83bb70:	08489100 	call	848910 <__ledf2>
  83bb74:	1003e816 	blt	r2,zero,83cb18 <_dtoa_r+0x1598>
  83bb78:	b825883a 	mov	r18,r23
  83bb7c:	bd83e926 	beq	r23,r22,83cb24 <_dtoa_r+0x15a4>
  83bb80:	a809883a 	mov	r4,r21
  83bb84:	980b883a 	mov	r5,r19
  83bb88:	000d883a 	mov	r6,zero
  83bb8c:	01d00934 	movhi	r7,16420
  83bb90:	083149c0 	call	83149c <__muldf3>
  83bb94:	000d883a 	mov	r6,zero
  83bb98:	01d00934 	movhi	r7,16420
  83bb9c:	8009883a 	mov	r4,r16
  83bba0:	880b883a 	mov	r5,r17
  83bba4:	102b883a 	mov	r21,r2
  83bba8:	1827883a 	mov	r19,r3
  83bbac:	083149c0 	call	83149c <__muldf3>
  83bbb0:	180b883a 	mov	r5,r3
  83bbb4:	1009883a 	mov	r4,r2
  83bbb8:	1821883a 	mov	r16,r3
  83bbbc:	1023883a 	mov	r17,r2
  83bbc0:	08493000 	call	849300 <__fixdfsi>
  83bbc4:	1009883a 	mov	r4,r2
  83bbc8:	1029883a 	mov	r20,r2
  83bbcc:	08493800 	call	849380 <__floatsidf>
  83bbd0:	8809883a 	mov	r4,r17
  83bbd4:	800b883a 	mov	r5,r16
  83bbd8:	100d883a 	mov	r6,r2
  83bbdc:	180f883a 	mov	r7,r3
  83bbe0:	0848a040 	call	848a04 <__subdf3>
  83bbe4:	a5000c04 	addi	r20,r20,48
  83bbe8:	a80d883a 	mov	r6,r21
  83bbec:	980f883a 	mov	r7,r19
  83bbf0:	1009883a 	mov	r4,r2
  83bbf4:	180b883a 	mov	r5,r3
  83bbf8:	95000005 	stb	r20,0(r18)
  83bbfc:	1021883a 	mov	r16,r2
  83bc00:	1823883a 	mov	r17,r3
  83bc04:	08489100 	call	848910 <__ledf2>
  83bc08:	bdc00044 	addi	r23,r23,1
  83bc0c:	800d883a 	mov	r6,r16
  83bc10:	880f883a 	mov	r7,r17
  83bc14:	0009883a 	mov	r4,zero
  83bc18:	014ffc34 	movhi	r5,16368
  83bc1c:	103fcf0e 	bge	r2,zero,83bb5c <__alt_mem_epcs_flash_controller_0+0xff832b5c>
  83bc20:	d8c01317 	ldw	r3,76(sp)
  83bc24:	d8c00515 	stw	r3,20(sp)
  83bc28:	d9400917 	ldw	r5,36(sp)
  83bc2c:	e009883a 	mov	r4,fp
  83bc30:	083d8480 	call	83d848 <_Bfree>
  83bc34:	d9000517 	ldw	r4,20(sp)
  83bc38:	d9802317 	ldw	r6,140(sp)
  83bc3c:	d9c02517 	ldw	r7,148(sp)
  83bc40:	b8000005 	stb	zero,0(r23)
  83bc44:	20800044 	addi	r2,r4,1
  83bc48:	30800015 	stw	r2,0(r6)
  83bc4c:	3802aa26 	beq	r7,zero,83c6f8 <_dtoa_r+0x1178>
  83bc50:	3dc00015 	stw	r23,0(r7)
  83bc54:	d8800717 	ldw	r2,28(sp)
  83bc58:	003e7906 	br	83b640 <__alt_mem_epcs_flash_controller_0+0xff832640>
  83bc5c:	00800434 	movhi	r2,16
  83bc60:	10bfffc4 	addi	r2,r2,-1
  83bc64:	88a2703a 	and	r17,r17,r2
  83bc68:	883e851e 	bne	r17,zero,83b680 <__alt_mem_epcs_flash_controller_0+0xff832680>
  83bc6c:	008021b4 	movhi	r2,134
  83bc70:	10a4fd04 	addi	r2,r2,-27660
  83bc74:	003e8406 	br	83b688 <__alt_mem_epcs_flash_controller_0+0xff832688>
  83bc78:	10c00204 	addi	r3,r2,8
  83bc7c:	003e8706 	br	83b69c <__alt_mem_epcs_flash_controller_0+0xff83269c>
  83bc80:	01400434 	movhi	r5,16
  83bc84:	297fffc4 	addi	r5,r5,-1
  83bc88:	994a703a 	and	r5,r19,r5
  83bc8c:	9009883a 	mov	r4,r18
  83bc90:	843f0044 	addi	r16,r16,-1023
  83bc94:	294ffc34 	orhi	r5,r5,16368
  83bc98:	dd800217 	ldw	r22,8(sp)
  83bc9c:	d8001115 	stw	zero,68(sp)
  83bca0:	003ea506 	br	83b738 <__alt_mem_epcs_flash_controller_0+0xff832738>
  83bca4:	008021b4 	movhi	r2,134
  83bca8:	10a44104 	addi	r2,r2,-28412
  83bcac:	003e6406 	br	83b640 <__alt_mem_epcs_flash_controller_0+0xff832640>
  83bcb0:	e0001115 	stw	zero,68(fp)
  83bcb4:	000b883a 	mov	r5,zero
  83bcb8:	e009883a 	mov	r4,fp
  83bcbc:	083d7a00 	call	83d7a0 <_Balloc>
  83bcc0:	01bfffc4 	movi	r6,-1
  83bcc4:	01c00044 	movi	r7,1
  83bcc8:	d8800715 	stw	r2,28(sp)
  83bccc:	d9800c15 	stw	r6,48(sp)
  83bcd0:	e0801015 	stw	r2,64(fp)
  83bcd4:	d8000315 	stw	zero,12(sp)
  83bcd8:	d9c00b15 	stw	r7,44(sp)
  83bcdc:	d9800615 	stw	r6,24(sp)
  83bce0:	d8002215 	stw	zero,136(sp)
  83bce4:	d8800117 	ldw	r2,4(sp)
  83bce8:	10008916 	blt	r2,zero,83bf10 <_dtoa_r+0x990>
  83bcec:	d9000517 	ldw	r4,20(sp)
  83bcf0:	00c00384 	movi	r3,14
  83bcf4:	19008616 	blt	r3,r4,83bf10 <_dtoa_r+0x990>
  83bcf8:	200490fa 	slli	r2,r4,3
  83bcfc:	00c021b4 	movhi	r3,134
  83bd00:	d9802217 	ldw	r6,136(sp)
  83bd04:	18e51b04 	addi	r3,r3,-27540
  83bd08:	1885883a 	add	r2,r3,r2
  83bd0c:	14000017 	ldw	r16,0(r2)
  83bd10:	14400117 	ldw	r17,4(r2)
  83bd14:	30016316 	blt	r6,zero,83c2a4 <_dtoa_r+0xd24>
  83bd18:	800d883a 	mov	r6,r16
  83bd1c:	880f883a 	mov	r7,r17
  83bd20:	9009883a 	mov	r4,r18
  83bd24:	980b883a 	mov	r5,r19
  83bd28:	0847ddc0 	call	847ddc <__divdf3>
  83bd2c:	180b883a 	mov	r5,r3
  83bd30:	1009883a 	mov	r4,r2
  83bd34:	08493000 	call	849300 <__fixdfsi>
  83bd38:	1009883a 	mov	r4,r2
  83bd3c:	102b883a 	mov	r21,r2
  83bd40:	08493800 	call	849380 <__floatsidf>
  83bd44:	800d883a 	mov	r6,r16
  83bd48:	880f883a 	mov	r7,r17
  83bd4c:	1009883a 	mov	r4,r2
  83bd50:	180b883a 	mov	r5,r3
  83bd54:	083149c0 	call	83149c <__muldf3>
  83bd58:	100d883a 	mov	r6,r2
  83bd5c:	180f883a 	mov	r7,r3
  83bd60:	9009883a 	mov	r4,r18
  83bd64:	980b883a 	mov	r5,r19
  83bd68:	0848a040 	call	848a04 <__subdf3>
  83bd6c:	d9c00717 	ldw	r7,28(sp)
  83bd70:	1009883a 	mov	r4,r2
  83bd74:	a8800c04 	addi	r2,r21,48
  83bd78:	38800005 	stb	r2,0(r7)
  83bd7c:	3dc00044 	addi	r23,r7,1
  83bd80:	d9c00617 	ldw	r7,24(sp)
  83bd84:	01800044 	movi	r6,1
  83bd88:	180b883a 	mov	r5,r3
  83bd8c:	2005883a 	mov	r2,r4
  83bd90:	39803826 	beq	r7,r6,83be74 <_dtoa_r+0x8f4>
  83bd94:	000d883a 	mov	r6,zero
  83bd98:	01d00934 	movhi	r7,16420
  83bd9c:	083149c0 	call	83149c <__muldf3>
  83bda0:	000d883a 	mov	r6,zero
  83bda4:	000f883a 	mov	r7,zero
  83bda8:	1009883a 	mov	r4,r2
  83bdac:	180b883a 	mov	r5,r3
  83bdb0:	1025883a 	mov	r18,r2
  83bdb4:	1827883a 	mov	r19,r3
  83bdb8:	08487ac0 	call	8487ac <__eqdf2>
  83bdbc:	103f9a26 	beq	r2,zero,83bc28 <__alt_mem_epcs_flash_controller_0+0xff832c28>
  83bdc0:	d9c00617 	ldw	r7,24(sp)
  83bdc4:	d8c00717 	ldw	r3,28(sp)
  83bdc8:	b829883a 	mov	r20,r23
  83bdcc:	38bfffc4 	addi	r2,r7,-1
  83bdd0:	18ad883a 	add	r22,r3,r2
  83bdd4:	00000a06 	br	83be00 <_dtoa_r+0x880>
  83bdd8:	083149c0 	call	83149c <__muldf3>
  83bddc:	000d883a 	mov	r6,zero
  83bde0:	000f883a 	mov	r7,zero
  83bde4:	1009883a 	mov	r4,r2
  83bde8:	180b883a 	mov	r5,r3
  83bdec:	1025883a 	mov	r18,r2
  83bdf0:	1827883a 	mov	r19,r3
  83bdf4:	b829883a 	mov	r20,r23
  83bdf8:	08487ac0 	call	8487ac <__eqdf2>
  83bdfc:	103f8a26 	beq	r2,zero,83bc28 <__alt_mem_epcs_flash_controller_0+0xff832c28>
  83be00:	800d883a 	mov	r6,r16
  83be04:	880f883a 	mov	r7,r17
  83be08:	9009883a 	mov	r4,r18
  83be0c:	980b883a 	mov	r5,r19
  83be10:	0847ddc0 	call	847ddc <__divdf3>
  83be14:	180b883a 	mov	r5,r3
  83be18:	1009883a 	mov	r4,r2
  83be1c:	08493000 	call	849300 <__fixdfsi>
  83be20:	1009883a 	mov	r4,r2
  83be24:	102b883a 	mov	r21,r2
  83be28:	08493800 	call	849380 <__floatsidf>
  83be2c:	800d883a 	mov	r6,r16
  83be30:	880f883a 	mov	r7,r17
  83be34:	1009883a 	mov	r4,r2
  83be38:	180b883a 	mov	r5,r3
  83be3c:	083149c0 	call	83149c <__muldf3>
  83be40:	100d883a 	mov	r6,r2
  83be44:	180f883a 	mov	r7,r3
  83be48:	9009883a 	mov	r4,r18
  83be4c:	980b883a 	mov	r5,r19
  83be50:	0848a040 	call	848a04 <__subdf3>
  83be54:	aa000c04 	addi	r8,r21,48
  83be58:	a2000005 	stb	r8,0(r20)
  83be5c:	000d883a 	mov	r6,zero
  83be60:	01d00934 	movhi	r7,16420
  83be64:	1009883a 	mov	r4,r2
  83be68:	180b883a 	mov	r5,r3
  83be6c:	a5c00044 	addi	r23,r20,1
  83be70:	b53fd91e 	bne	r22,r20,83bdd8 <__alt_mem_epcs_flash_controller_0+0xff832dd8>
  83be74:	100d883a 	mov	r6,r2
  83be78:	180f883a 	mov	r7,r3
  83be7c:	1009883a 	mov	r4,r2
  83be80:	180b883a 	mov	r5,r3
  83be84:	08475300 	call	847530 <__adddf3>
  83be88:	100d883a 	mov	r6,r2
  83be8c:	180f883a 	mov	r7,r3
  83be90:	8009883a 	mov	r4,r16
  83be94:	880b883a 	mov	r5,r17
  83be98:	1027883a 	mov	r19,r2
  83be9c:	1825883a 	mov	r18,r3
  83bea0:	08489100 	call	848910 <__ledf2>
  83bea4:	10000816 	blt	r2,zero,83bec8 <_dtoa_r+0x948>
  83bea8:	980d883a 	mov	r6,r19
  83beac:	900f883a 	mov	r7,r18
  83beb0:	8009883a 	mov	r4,r16
  83beb4:	880b883a 	mov	r5,r17
  83beb8:	08487ac0 	call	8487ac <__eqdf2>
  83bebc:	103f5a1e 	bne	r2,zero,83bc28 <__alt_mem_epcs_flash_controller_0+0xff832c28>
  83bec0:	ad40004c 	andi	r21,r21,1
  83bec4:	a83f5826 	beq	r21,zero,83bc28 <__alt_mem_epcs_flash_controller_0+0xff832c28>
  83bec8:	bd3fffc3 	ldbu	r20,-1(r23)
  83becc:	b8bfffc4 	addi	r2,r23,-1
  83bed0:	1007883a 	mov	r3,r2
  83bed4:	01400e44 	movi	r5,57
  83bed8:	d9800717 	ldw	r6,28(sp)
  83bedc:	00000506 	br	83bef4 <_dtoa_r+0x974>
  83bee0:	18ffffc4 	addi	r3,r3,-1
  83bee4:	11824726 	beq	r2,r6,83c804 <_dtoa_r+0x1284>
  83bee8:	1d000003 	ldbu	r20,0(r3)
  83beec:	102f883a 	mov	r23,r2
  83bef0:	10bfffc4 	addi	r2,r2,-1
  83bef4:	a1003fcc 	andi	r4,r20,255
  83bef8:	2100201c 	xori	r4,r4,128
  83befc:	213fe004 	addi	r4,r4,-128
  83bf00:	217ff726 	beq	r4,r5,83bee0 <__alt_mem_epcs_flash_controller_0+0xff832ee0>
  83bf04:	a2000044 	addi	r8,r20,1
  83bf08:	12000005 	stb	r8,0(r2)
  83bf0c:	003f4606 	br	83bc28 <__alt_mem_epcs_flash_controller_0+0xff832c28>
  83bf10:	d9000b17 	ldw	r4,44(sp)
  83bf14:	2000c826 	beq	r4,zero,83c238 <_dtoa_r+0xcb8>
  83bf18:	d9800317 	ldw	r6,12(sp)
  83bf1c:	00c00044 	movi	r3,1
  83bf20:	1980f90e 	bge	r3,r6,83c308 <_dtoa_r+0xd88>
  83bf24:	d8800617 	ldw	r2,24(sp)
  83bf28:	d8c00a17 	ldw	r3,40(sp)
  83bf2c:	157fffc4 	addi	r21,r2,-1
  83bf30:	1d41f316 	blt	r3,r21,83c700 <_dtoa_r+0x1180>
  83bf34:	1d6bc83a 	sub	r21,r3,r21
  83bf38:	d9c00617 	ldw	r7,24(sp)
  83bf3c:	3802aa16 	blt	r7,zero,83c9e8 <_dtoa_r+0x1468>
  83bf40:	dd000817 	ldw	r20,32(sp)
  83bf44:	d8800617 	ldw	r2,24(sp)
  83bf48:	d8c00817 	ldw	r3,32(sp)
  83bf4c:	01400044 	movi	r5,1
  83bf50:	e009883a 	mov	r4,fp
  83bf54:	1887883a 	add	r3,r3,r2
  83bf58:	d8c00815 	stw	r3,32(sp)
  83bf5c:	b0ad883a 	add	r22,r22,r2
  83bf60:	083dbd40 	call	83dbd4 <__i2b>
  83bf64:	1023883a 	mov	r17,r2
  83bf68:	a0000826 	beq	r20,zero,83bf8c <_dtoa_r+0xa0c>
  83bf6c:	0580070e 	bge	zero,r22,83bf8c <_dtoa_r+0xa0c>
  83bf70:	a005883a 	mov	r2,r20
  83bf74:	b500b916 	blt	r22,r20,83c25c <_dtoa_r+0xcdc>
  83bf78:	d9000817 	ldw	r4,32(sp)
  83bf7c:	a0a9c83a 	sub	r20,r20,r2
  83bf80:	b0adc83a 	sub	r22,r22,r2
  83bf84:	2089c83a 	sub	r4,r4,r2
  83bf88:	d9000815 	stw	r4,32(sp)
  83bf8c:	d9800a17 	ldw	r6,40(sp)
  83bf90:	0181810e 	bge	zero,r6,83c598 <_dtoa_r+0x1018>
  83bf94:	d9c00b17 	ldw	r7,44(sp)
  83bf98:	3800b326 	beq	r7,zero,83c268 <_dtoa_r+0xce8>
  83bf9c:	a800b226 	beq	r21,zero,83c268 <_dtoa_r+0xce8>
  83bfa0:	880b883a 	mov	r5,r17
  83bfa4:	a80d883a 	mov	r6,r21
  83bfa8:	e009883a 	mov	r4,fp
  83bfac:	083de9c0 	call	83de9c <__pow5mult>
  83bfb0:	d9800917 	ldw	r6,36(sp)
  83bfb4:	100b883a 	mov	r5,r2
  83bfb8:	e009883a 	mov	r4,fp
  83bfbc:	1023883a 	mov	r17,r2
  83bfc0:	083dc100 	call	83dc10 <__multiply>
  83bfc4:	1021883a 	mov	r16,r2
  83bfc8:	d8800a17 	ldw	r2,40(sp)
  83bfcc:	d9400917 	ldw	r5,36(sp)
  83bfd0:	e009883a 	mov	r4,fp
  83bfd4:	1545c83a 	sub	r2,r2,r21
  83bfd8:	d8800a15 	stw	r2,40(sp)
  83bfdc:	083d8480 	call	83d848 <_Bfree>
  83bfe0:	d8c00a17 	ldw	r3,40(sp)
  83bfe4:	18009f1e 	bne	r3,zero,83c264 <_dtoa_r+0xce4>
  83bfe8:	05c00044 	movi	r23,1
  83bfec:	e009883a 	mov	r4,fp
  83bff0:	b80b883a 	mov	r5,r23
  83bff4:	083dbd40 	call	83dbd4 <__i2b>
  83bff8:	d9000d17 	ldw	r4,52(sp)
  83bffc:	102b883a 	mov	r21,r2
  83c000:	2000ce26 	beq	r4,zero,83c33c <_dtoa_r+0xdbc>
  83c004:	200d883a 	mov	r6,r4
  83c008:	100b883a 	mov	r5,r2
  83c00c:	e009883a 	mov	r4,fp
  83c010:	083de9c0 	call	83de9c <__pow5mult>
  83c014:	d9800317 	ldw	r6,12(sp)
  83c018:	102b883a 	mov	r21,r2
  83c01c:	b981810e 	bge	r23,r6,83c624 <_dtoa_r+0x10a4>
  83c020:	0027883a 	mov	r19,zero
  83c024:	a8800417 	ldw	r2,16(r21)
  83c028:	05c00804 	movi	r23,32
  83c02c:	10800104 	addi	r2,r2,4
  83c030:	1085883a 	add	r2,r2,r2
  83c034:	1085883a 	add	r2,r2,r2
  83c038:	a885883a 	add	r2,r21,r2
  83c03c:	11000017 	ldw	r4,0(r2)
  83c040:	083dabc0 	call	83dabc <__hi0bits>
  83c044:	b885c83a 	sub	r2,r23,r2
  83c048:	1585883a 	add	r2,r2,r22
  83c04c:	108007cc 	andi	r2,r2,31
  83c050:	1000b326 	beq	r2,zero,83c320 <_dtoa_r+0xda0>
  83c054:	00c00804 	movi	r3,32
  83c058:	1887c83a 	sub	r3,r3,r2
  83c05c:	01000104 	movi	r4,4
  83c060:	20c2cd0e 	bge	r4,r3,83cb98 <_dtoa_r+0x1618>
  83c064:	00c00704 	movi	r3,28
  83c068:	1885c83a 	sub	r2,r3,r2
  83c06c:	d8c00817 	ldw	r3,32(sp)
  83c070:	a0a9883a 	add	r20,r20,r2
  83c074:	b0ad883a 	add	r22,r22,r2
  83c078:	1887883a 	add	r3,r3,r2
  83c07c:	d8c00815 	stw	r3,32(sp)
  83c080:	d9800817 	ldw	r6,32(sp)
  83c084:	0180040e 	bge	zero,r6,83c098 <_dtoa_r+0xb18>
  83c088:	800b883a 	mov	r5,r16
  83c08c:	e009883a 	mov	r4,fp
  83c090:	083dfdc0 	call	83dfdc <__lshift>
  83c094:	1021883a 	mov	r16,r2
  83c098:	0580050e 	bge	zero,r22,83c0b0 <_dtoa_r+0xb30>
  83c09c:	a80b883a 	mov	r5,r21
  83c0a0:	b00d883a 	mov	r6,r22
  83c0a4:	e009883a 	mov	r4,fp
  83c0a8:	083dfdc0 	call	83dfdc <__lshift>
  83c0ac:	102b883a 	mov	r21,r2
  83c0b0:	d9c00e17 	ldw	r7,56(sp)
  83c0b4:	3801211e 	bne	r7,zero,83c53c <_dtoa_r+0xfbc>
  83c0b8:	d9800617 	ldw	r6,24(sp)
  83c0bc:	0181380e 	bge	zero,r6,83c5a0 <_dtoa_r+0x1020>
  83c0c0:	d8c00b17 	ldw	r3,44(sp)
  83c0c4:	1800ab1e 	bne	r3,zero,83c374 <_dtoa_r+0xdf4>
  83c0c8:	dc800717 	ldw	r18,28(sp)
  83c0cc:	dcc00617 	ldw	r19,24(sp)
  83c0d0:	9029883a 	mov	r20,r18
  83c0d4:	00000206 	br	83c0e0 <_dtoa_r+0xb60>
  83c0d8:	083d8700 	call	83d870 <__multadd>
  83c0dc:	1021883a 	mov	r16,r2
  83c0e0:	a80b883a 	mov	r5,r21
  83c0e4:	8009883a 	mov	r4,r16
  83c0e8:	083b3580 	call	83b358 <quorem>
  83c0ec:	10800c04 	addi	r2,r2,48
  83c0f0:	90800005 	stb	r2,0(r18)
  83c0f4:	94800044 	addi	r18,r18,1
  83c0f8:	9507c83a 	sub	r3,r18,r20
  83c0fc:	000f883a 	mov	r7,zero
  83c100:	01800284 	movi	r6,10
  83c104:	800b883a 	mov	r5,r16
  83c108:	e009883a 	mov	r4,fp
  83c10c:	1cfff216 	blt	r3,r19,83c0d8 <__alt_mem_epcs_flash_controller_0+0xff8330d8>
  83c110:	1011883a 	mov	r8,r2
  83c114:	d8800617 	ldw	r2,24(sp)
  83c118:	0082370e 	bge	zero,r2,83c9f8 <_dtoa_r+0x1478>
  83c11c:	d9000717 	ldw	r4,28(sp)
  83c120:	0025883a 	mov	r18,zero
  83c124:	20af883a 	add	r23,r4,r2
  83c128:	01800044 	movi	r6,1
  83c12c:	800b883a 	mov	r5,r16
  83c130:	e009883a 	mov	r4,fp
  83c134:	da001715 	stw	r8,92(sp)
  83c138:	083dfdc0 	call	83dfdc <__lshift>
  83c13c:	a80b883a 	mov	r5,r21
  83c140:	1009883a 	mov	r4,r2
  83c144:	d8800915 	stw	r2,36(sp)
  83c148:	083e1240 	call	83e124 <__mcmp>
  83c14c:	da001717 	ldw	r8,92(sp)
  83c150:	0081800e 	bge	zero,r2,83c754 <_dtoa_r+0x11d4>
  83c154:	b93fffc3 	ldbu	r4,-1(r23)
  83c158:	b8bfffc4 	addi	r2,r23,-1
  83c15c:	1007883a 	mov	r3,r2
  83c160:	01800e44 	movi	r6,57
  83c164:	d9c00717 	ldw	r7,28(sp)
  83c168:	00000506 	br	83c180 <_dtoa_r+0xc00>
  83c16c:	18ffffc4 	addi	r3,r3,-1
  83c170:	11c12326 	beq	r2,r7,83c600 <_dtoa_r+0x1080>
  83c174:	19000003 	ldbu	r4,0(r3)
  83c178:	102f883a 	mov	r23,r2
  83c17c:	10bfffc4 	addi	r2,r2,-1
  83c180:	21403fcc 	andi	r5,r4,255
  83c184:	2940201c 	xori	r5,r5,128
  83c188:	297fe004 	addi	r5,r5,-128
  83c18c:	29bff726 	beq	r5,r6,83c16c <__alt_mem_epcs_flash_controller_0+0xff83316c>
  83c190:	21000044 	addi	r4,r4,1
  83c194:	11000005 	stb	r4,0(r2)
  83c198:	a80b883a 	mov	r5,r21
  83c19c:	e009883a 	mov	r4,fp
  83c1a0:	083d8480 	call	83d848 <_Bfree>
  83c1a4:	883ea026 	beq	r17,zero,83bc28 <__alt_mem_epcs_flash_controller_0+0xff832c28>
  83c1a8:	90000426 	beq	r18,zero,83c1bc <_dtoa_r+0xc3c>
  83c1ac:	94400326 	beq	r18,r17,83c1bc <_dtoa_r+0xc3c>
  83c1b0:	900b883a 	mov	r5,r18
  83c1b4:	e009883a 	mov	r4,fp
  83c1b8:	083d8480 	call	83d848 <_Bfree>
  83c1bc:	880b883a 	mov	r5,r17
  83c1c0:	e009883a 	mov	r4,fp
  83c1c4:	083d8480 	call	83d848 <_Bfree>
  83c1c8:	003e9706 	br	83bc28 <__alt_mem_epcs_flash_controller_0+0xff832c28>
  83c1cc:	01800044 	movi	r6,1
  83c1d0:	d9800e15 	stw	r6,56(sp)
  83c1d4:	003d9606 	br	83b830 <__alt_mem_epcs_flash_controller_0+0xff832830>
  83c1d8:	d8800817 	ldw	r2,32(sp)
  83c1dc:	d8c00517 	ldw	r3,20(sp)
  83c1e0:	d8000d15 	stw	zero,52(sp)
  83c1e4:	10c5c83a 	sub	r2,r2,r3
  83c1e8:	00c9c83a 	sub	r4,zero,r3
  83c1ec:	d8800815 	stw	r2,32(sp)
  83c1f0:	d9000a15 	stw	r4,40(sp)
  83c1f4:	003d9706 	br	83b854 <__alt_mem_epcs_flash_controller_0+0xff832854>
  83c1f8:	05adc83a 	sub	r22,zero,r22
  83c1fc:	dd800815 	stw	r22,32(sp)
  83c200:	002d883a 	mov	r22,zero
  83c204:	003d8e06 	br	83b840 <__alt_mem_epcs_flash_controller_0+0xff832840>
  83c208:	d9000517 	ldw	r4,20(sp)
  83c20c:	08493800 	call	849380 <__floatsidf>
  83c210:	100d883a 	mov	r6,r2
  83c214:	180f883a 	mov	r7,r3
  83c218:	a009883a 	mov	r4,r20
  83c21c:	880b883a 	mov	r5,r17
  83c220:	08487ac0 	call	8487ac <__eqdf2>
  83c224:	103d7126 	beq	r2,zero,83b7ec <__alt_mem_epcs_flash_controller_0+0xff8327ec>
  83c228:	d9c00517 	ldw	r7,20(sp)
  83c22c:	39ffffc4 	addi	r7,r7,-1
  83c230:	d9c00515 	stw	r7,20(sp)
  83c234:	003d6d06 	br	83b7ec <__alt_mem_epcs_flash_controller_0+0xff8327ec>
  83c238:	dd400a17 	ldw	r21,40(sp)
  83c23c:	dd000817 	ldw	r20,32(sp)
  83c240:	0023883a 	mov	r17,zero
  83c244:	003f4806 	br	83bf68 <__alt_mem_epcs_flash_controller_0+0xff832f68>
  83c248:	10e3c83a 	sub	r17,r2,r3
  83c24c:	9448983a 	sll	r4,r18,r17
  83c250:	003d3206 	br	83b71c <__alt_mem_epcs_flash_controller_0+0xff83271c>
  83c254:	d8000e15 	stw	zero,56(sp)
  83c258:	003d7506 	br	83b830 <__alt_mem_epcs_flash_controller_0+0xff832830>
  83c25c:	b005883a 	mov	r2,r22
  83c260:	003f4506 	br	83bf78 <__alt_mem_epcs_flash_controller_0+0xff832f78>
  83c264:	dc000915 	stw	r16,36(sp)
  83c268:	d9800a17 	ldw	r6,40(sp)
  83c26c:	d9400917 	ldw	r5,36(sp)
  83c270:	e009883a 	mov	r4,fp
  83c274:	083de9c0 	call	83de9c <__pow5mult>
  83c278:	1021883a 	mov	r16,r2
  83c27c:	003f5a06 	br	83bfe8 <__alt_mem_epcs_flash_controller_0+0xff832fe8>
  83c280:	01c00044 	movi	r7,1
  83c284:	d9c00b15 	stw	r7,44(sp)
  83c288:	d8802217 	ldw	r2,136(sp)
  83c28c:	0081280e 	bge	zero,r2,83c730 <_dtoa_r+0x11b0>
  83c290:	100d883a 	mov	r6,r2
  83c294:	1021883a 	mov	r16,r2
  83c298:	d8800c15 	stw	r2,48(sp)
  83c29c:	d8800615 	stw	r2,24(sp)
  83c2a0:	003d8806 	br	83b8c4 <__alt_mem_epcs_flash_controller_0+0xff8328c4>
  83c2a4:	d8800617 	ldw	r2,24(sp)
  83c2a8:	00be9b16 	blt	zero,r2,83bd18 <__alt_mem_epcs_flash_controller_0+0xff832d18>
  83c2ac:	10010f1e 	bne	r2,zero,83c6ec <_dtoa_r+0x116c>
  83c2b0:	880b883a 	mov	r5,r17
  83c2b4:	000d883a 	mov	r6,zero
  83c2b8:	01d00534 	movhi	r7,16404
  83c2bc:	8009883a 	mov	r4,r16
  83c2c0:	083149c0 	call	83149c <__muldf3>
  83c2c4:	900d883a 	mov	r6,r18
  83c2c8:	980f883a 	mov	r7,r19
  83c2cc:	1009883a 	mov	r4,r2
  83c2d0:	180b883a 	mov	r5,r3
  83c2d4:	08488340 	call	848834 <__gedf2>
  83c2d8:	002b883a 	mov	r21,zero
  83c2dc:	0023883a 	mov	r17,zero
  83c2e0:	1000bf16 	blt	r2,zero,83c5e0 <_dtoa_r+0x1060>
  83c2e4:	d9802217 	ldw	r6,136(sp)
  83c2e8:	ddc00717 	ldw	r23,28(sp)
  83c2ec:	018c303a 	nor	r6,zero,r6
  83c2f0:	d9800515 	stw	r6,20(sp)
  83c2f4:	a80b883a 	mov	r5,r21
  83c2f8:	e009883a 	mov	r4,fp
  83c2fc:	083d8480 	call	83d848 <_Bfree>
  83c300:	883e4926 	beq	r17,zero,83bc28 <__alt_mem_epcs_flash_controller_0+0xff832c28>
  83c304:	003fad06 	br	83c1bc <__alt_mem_epcs_flash_controller_0+0xff8331bc>
  83c308:	d9c01117 	ldw	r7,68(sp)
  83c30c:	3801bc26 	beq	r7,zero,83ca00 <_dtoa_r+0x1480>
  83c310:	10810cc4 	addi	r2,r2,1075
  83c314:	dd400a17 	ldw	r21,40(sp)
  83c318:	dd000817 	ldw	r20,32(sp)
  83c31c:	003f0a06 	br	83bf48 <__alt_mem_epcs_flash_controller_0+0xff832f48>
  83c320:	00800704 	movi	r2,28
  83c324:	d9000817 	ldw	r4,32(sp)
  83c328:	a0a9883a 	add	r20,r20,r2
  83c32c:	b0ad883a 	add	r22,r22,r2
  83c330:	2089883a 	add	r4,r4,r2
  83c334:	d9000815 	stw	r4,32(sp)
  83c338:	003f5106 	br	83c080 <__alt_mem_epcs_flash_controller_0+0xff833080>
  83c33c:	d8c00317 	ldw	r3,12(sp)
  83c340:	b8c1fc0e 	bge	r23,r3,83cb34 <_dtoa_r+0x15b4>
  83c344:	0027883a 	mov	r19,zero
  83c348:	b805883a 	mov	r2,r23
  83c34c:	003f3e06 	br	83c048 <__alt_mem_epcs_flash_controller_0+0xff833048>
  83c350:	880b883a 	mov	r5,r17
  83c354:	e009883a 	mov	r4,fp
  83c358:	000f883a 	mov	r7,zero
  83c35c:	01800284 	movi	r6,10
  83c360:	083d8700 	call	83d870 <__multadd>
  83c364:	d9000c17 	ldw	r4,48(sp)
  83c368:	1023883a 	mov	r17,r2
  83c36c:	0102040e 	bge	zero,r4,83cb80 <_dtoa_r+0x1600>
  83c370:	d9000615 	stw	r4,24(sp)
  83c374:	0500050e 	bge	zero,r20,83c38c <_dtoa_r+0xe0c>
  83c378:	880b883a 	mov	r5,r17
  83c37c:	a00d883a 	mov	r6,r20
  83c380:	e009883a 	mov	r4,fp
  83c384:	083dfdc0 	call	83dfdc <__lshift>
  83c388:	1023883a 	mov	r17,r2
  83c38c:	9801241e 	bne	r19,zero,83c820 <_dtoa_r+0x12a0>
  83c390:	8829883a 	mov	r20,r17
  83c394:	d9000617 	ldw	r4,24(sp)
  83c398:	dcc00717 	ldw	r19,28(sp)
  83c39c:	9480004c 	andi	r18,r18,1
  83c3a0:	20bfffc4 	addi	r2,r4,-1
  83c3a4:	9885883a 	add	r2,r19,r2
  83c3a8:	d8800415 	stw	r2,16(sp)
  83c3ac:	dc800615 	stw	r18,24(sp)
  83c3b0:	a80b883a 	mov	r5,r21
  83c3b4:	8009883a 	mov	r4,r16
  83c3b8:	083b3580 	call	83b358 <quorem>
  83c3bc:	880b883a 	mov	r5,r17
  83c3c0:	8009883a 	mov	r4,r16
  83c3c4:	102f883a 	mov	r23,r2
  83c3c8:	083e1240 	call	83e124 <__mcmp>
  83c3cc:	a80b883a 	mov	r5,r21
  83c3d0:	a00d883a 	mov	r6,r20
  83c3d4:	e009883a 	mov	r4,fp
  83c3d8:	102d883a 	mov	r22,r2
  83c3dc:	083e1840 	call	83e184 <__mdiff>
  83c3e0:	1007883a 	mov	r3,r2
  83c3e4:	10800317 	ldw	r2,12(r2)
  83c3e8:	bc800c04 	addi	r18,r23,48
  83c3ec:	180b883a 	mov	r5,r3
  83c3f0:	10004e1e 	bne	r2,zero,83c52c <_dtoa_r+0xfac>
  83c3f4:	8009883a 	mov	r4,r16
  83c3f8:	d8c01615 	stw	r3,88(sp)
  83c3fc:	083e1240 	call	83e124 <__mcmp>
  83c400:	d8c01617 	ldw	r3,88(sp)
  83c404:	e009883a 	mov	r4,fp
  83c408:	d8801615 	stw	r2,88(sp)
  83c40c:	180b883a 	mov	r5,r3
  83c410:	083d8480 	call	83d848 <_Bfree>
  83c414:	d8801617 	ldw	r2,88(sp)
  83c418:	1000041e 	bne	r2,zero,83c42c <_dtoa_r+0xeac>
  83c41c:	d9800317 	ldw	r6,12(sp)
  83c420:	3000021e 	bne	r6,zero,83c42c <_dtoa_r+0xeac>
  83c424:	d8c00617 	ldw	r3,24(sp)
  83c428:	18003726 	beq	r3,zero,83c508 <_dtoa_r+0xf88>
  83c42c:	b0002016 	blt	r22,zero,83c4b0 <_dtoa_r+0xf30>
  83c430:	b000041e 	bne	r22,zero,83c444 <_dtoa_r+0xec4>
  83c434:	d9000317 	ldw	r4,12(sp)
  83c438:	2000021e 	bne	r4,zero,83c444 <_dtoa_r+0xec4>
  83c43c:	d8c00617 	ldw	r3,24(sp)
  83c440:	18001b26 	beq	r3,zero,83c4b0 <_dtoa_r+0xf30>
  83c444:	00810716 	blt	zero,r2,83c864 <_dtoa_r+0x12e4>
  83c448:	d8c00417 	ldw	r3,16(sp)
  83c44c:	9d800044 	addi	r22,r19,1
  83c450:	9c800005 	stb	r18,0(r19)
  83c454:	b02f883a 	mov	r23,r22
  83c458:	98c10626 	beq	r19,r3,83c874 <_dtoa_r+0x12f4>
  83c45c:	800b883a 	mov	r5,r16
  83c460:	000f883a 	mov	r7,zero
  83c464:	01800284 	movi	r6,10
  83c468:	e009883a 	mov	r4,fp
  83c46c:	083d8700 	call	83d870 <__multadd>
  83c470:	1021883a 	mov	r16,r2
  83c474:	000f883a 	mov	r7,zero
  83c478:	01800284 	movi	r6,10
  83c47c:	880b883a 	mov	r5,r17
  83c480:	e009883a 	mov	r4,fp
  83c484:	8d002526 	beq	r17,r20,83c51c <_dtoa_r+0xf9c>
  83c488:	083d8700 	call	83d870 <__multadd>
  83c48c:	a00b883a 	mov	r5,r20
  83c490:	000f883a 	mov	r7,zero
  83c494:	01800284 	movi	r6,10
  83c498:	e009883a 	mov	r4,fp
  83c49c:	1023883a 	mov	r17,r2
  83c4a0:	083d8700 	call	83d870 <__multadd>
  83c4a4:	1029883a 	mov	r20,r2
  83c4a8:	b027883a 	mov	r19,r22
  83c4ac:	003fc006 	br	83c3b0 <__alt_mem_epcs_flash_controller_0+0xff8333b0>
  83c4b0:	9011883a 	mov	r8,r18
  83c4b4:	00800e0e 	bge	zero,r2,83c4f0 <_dtoa_r+0xf70>
  83c4b8:	800b883a 	mov	r5,r16
  83c4bc:	01800044 	movi	r6,1
  83c4c0:	e009883a 	mov	r4,fp
  83c4c4:	da001715 	stw	r8,92(sp)
  83c4c8:	083dfdc0 	call	83dfdc <__lshift>
  83c4cc:	a80b883a 	mov	r5,r21
  83c4d0:	1009883a 	mov	r4,r2
  83c4d4:	1021883a 	mov	r16,r2
  83c4d8:	083e1240 	call	83e124 <__mcmp>
  83c4dc:	da001717 	ldw	r8,92(sp)
  83c4e0:	0081960e 	bge	zero,r2,83cb3c <_dtoa_r+0x15bc>
  83c4e4:	00800e44 	movi	r2,57
  83c4e8:	40817026 	beq	r8,r2,83caac <_dtoa_r+0x152c>
  83c4ec:	ba000c44 	addi	r8,r23,49
  83c4f0:	8825883a 	mov	r18,r17
  83c4f4:	9dc00044 	addi	r23,r19,1
  83c4f8:	9a000005 	stb	r8,0(r19)
  83c4fc:	a023883a 	mov	r17,r20
  83c500:	dc000915 	stw	r16,36(sp)
  83c504:	003f2406 	br	83c198 <__alt_mem_epcs_flash_controller_0+0xff833198>
  83c508:	00800e44 	movi	r2,57
  83c50c:	9011883a 	mov	r8,r18
  83c510:	90816626 	beq	r18,r2,83caac <_dtoa_r+0x152c>
  83c514:	05bff516 	blt	zero,r22,83c4ec <__alt_mem_epcs_flash_controller_0+0xff8334ec>
  83c518:	003ff506 	br	83c4f0 <__alt_mem_epcs_flash_controller_0+0xff8334f0>
  83c51c:	083d8700 	call	83d870 <__multadd>
  83c520:	1023883a 	mov	r17,r2
  83c524:	1029883a 	mov	r20,r2
  83c528:	003fdf06 	br	83c4a8 <__alt_mem_epcs_flash_controller_0+0xff8334a8>
  83c52c:	e009883a 	mov	r4,fp
  83c530:	083d8480 	call	83d848 <_Bfree>
  83c534:	00800044 	movi	r2,1
  83c538:	003fbc06 	br	83c42c <__alt_mem_epcs_flash_controller_0+0xff83342c>
  83c53c:	a80b883a 	mov	r5,r21
  83c540:	8009883a 	mov	r4,r16
  83c544:	083e1240 	call	83e124 <__mcmp>
  83c548:	103edb0e 	bge	r2,zero,83c0b8 <__alt_mem_epcs_flash_controller_0+0xff8330b8>
  83c54c:	800b883a 	mov	r5,r16
  83c550:	000f883a 	mov	r7,zero
  83c554:	01800284 	movi	r6,10
  83c558:	e009883a 	mov	r4,fp
  83c55c:	083d8700 	call	83d870 <__multadd>
  83c560:	1021883a 	mov	r16,r2
  83c564:	d8800517 	ldw	r2,20(sp)
  83c568:	d8c00b17 	ldw	r3,44(sp)
  83c56c:	10bfffc4 	addi	r2,r2,-1
  83c570:	d8800515 	stw	r2,20(sp)
  83c574:	183f761e 	bne	r3,zero,83c350 <__alt_mem_epcs_flash_controller_0+0xff833350>
  83c578:	d9000c17 	ldw	r4,48(sp)
  83c57c:	0101730e 	bge	zero,r4,83cb4c <_dtoa_r+0x15cc>
  83c580:	d9000615 	stw	r4,24(sp)
  83c584:	003ed006 	br	83c0c8 <__alt_mem_epcs_flash_controller_0+0xff8330c8>
  83c588:	00800084 	movi	r2,2
  83c58c:	3081861e 	bne	r6,r2,83cba8 <_dtoa_r+0x1628>
  83c590:	d8000b15 	stw	zero,44(sp)
  83c594:	003f3c06 	br	83c288 <__alt_mem_epcs_flash_controller_0+0xff833288>
  83c598:	dc000917 	ldw	r16,36(sp)
  83c59c:	003e9206 	br	83bfe8 <__alt_mem_epcs_flash_controller_0+0xff832fe8>
  83c5a0:	d9c00317 	ldw	r7,12(sp)
  83c5a4:	00800084 	movi	r2,2
  83c5a8:	11fec50e 	bge	r2,r7,83c0c0 <__alt_mem_epcs_flash_controller_0+0xff8330c0>
  83c5ac:	d9000617 	ldw	r4,24(sp)
  83c5b0:	20013c1e 	bne	r4,zero,83caa4 <_dtoa_r+0x1524>
  83c5b4:	a80b883a 	mov	r5,r21
  83c5b8:	000f883a 	mov	r7,zero
  83c5bc:	01800144 	movi	r6,5
  83c5c0:	e009883a 	mov	r4,fp
  83c5c4:	083d8700 	call	83d870 <__multadd>
  83c5c8:	100b883a 	mov	r5,r2
  83c5cc:	8009883a 	mov	r4,r16
  83c5d0:	102b883a 	mov	r21,r2
  83c5d4:	083e1240 	call	83e124 <__mcmp>
  83c5d8:	dc000915 	stw	r16,36(sp)
  83c5dc:	00bf410e 	bge	zero,r2,83c2e4 <__alt_mem_epcs_flash_controller_0+0xff8332e4>
  83c5e0:	d9c00717 	ldw	r7,28(sp)
  83c5e4:	00800c44 	movi	r2,49
  83c5e8:	38800005 	stb	r2,0(r7)
  83c5ec:	d8800517 	ldw	r2,20(sp)
  83c5f0:	3dc00044 	addi	r23,r7,1
  83c5f4:	10800044 	addi	r2,r2,1
  83c5f8:	d8800515 	stw	r2,20(sp)
  83c5fc:	003f3d06 	br	83c2f4 <__alt_mem_epcs_flash_controller_0+0xff8332f4>
  83c600:	d9800517 	ldw	r6,20(sp)
  83c604:	d9c00717 	ldw	r7,28(sp)
  83c608:	00800c44 	movi	r2,49
  83c60c:	31800044 	addi	r6,r6,1
  83c610:	d9800515 	stw	r6,20(sp)
  83c614:	38800005 	stb	r2,0(r7)
  83c618:	003edf06 	br	83c198 <__alt_mem_epcs_flash_controller_0+0xff833198>
  83c61c:	d8000b15 	stw	zero,44(sp)
  83c620:	003c9f06 	br	83b8a0 <__alt_mem_epcs_flash_controller_0+0xff8328a0>
  83c624:	903e7e1e 	bne	r18,zero,83c020 <__alt_mem_epcs_flash_controller_0+0xff833020>
  83c628:	00800434 	movhi	r2,16
  83c62c:	10bfffc4 	addi	r2,r2,-1
  83c630:	9884703a 	and	r2,r19,r2
  83c634:	1000ea1e 	bne	r2,zero,83c9e0 <_dtoa_r+0x1460>
  83c638:	9cdffc2c 	andhi	r19,r19,32752
  83c63c:	9800e826 	beq	r19,zero,83c9e0 <_dtoa_r+0x1460>
  83c640:	d9c00817 	ldw	r7,32(sp)
  83c644:	b5800044 	addi	r22,r22,1
  83c648:	04c00044 	movi	r19,1
  83c64c:	39c00044 	addi	r7,r7,1
  83c650:	d9c00815 	stw	r7,32(sp)
  83c654:	d8800d17 	ldw	r2,52(sp)
  83c658:	103e721e 	bne	r2,zero,83c024 <__alt_mem_epcs_flash_controller_0+0xff833024>
  83c65c:	00800044 	movi	r2,1
  83c660:	003e7906 	br	83c048 <__alt_mem_epcs_flash_controller_0+0xff833048>
  83c664:	8009883a 	mov	r4,r16
  83c668:	08493800 	call	849380 <__floatsidf>
  83c66c:	d9800f17 	ldw	r6,60(sp)
  83c670:	d9c01017 	ldw	r7,64(sp)
  83c674:	1009883a 	mov	r4,r2
  83c678:	180b883a 	mov	r5,r3
  83c67c:	083149c0 	call	83149c <__muldf3>
  83c680:	000d883a 	mov	r6,zero
  83c684:	01d00734 	movhi	r7,16412
  83c688:	1009883a 	mov	r4,r2
  83c68c:	180b883a 	mov	r5,r3
  83c690:	08475300 	call	847530 <__adddf3>
  83c694:	047f3034 	movhi	r17,64704
  83c698:	1021883a 	mov	r16,r2
  83c69c:	1c63883a 	add	r17,r3,r17
  83c6a0:	d9000f17 	ldw	r4,60(sp)
  83c6a4:	d9401017 	ldw	r5,64(sp)
  83c6a8:	000d883a 	mov	r6,zero
  83c6ac:	01d00534 	movhi	r7,16404
  83c6b0:	0848a040 	call	848a04 <__subdf3>
  83c6b4:	800d883a 	mov	r6,r16
  83c6b8:	880f883a 	mov	r7,r17
  83c6bc:	1009883a 	mov	r4,r2
  83c6c0:	180b883a 	mov	r5,r3
  83c6c4:	102b883a 	mov	r21,r2
  83c6c8:	1829883a 	mov	r20,r3
  83c6cc:	08488340 	call	848834 <__gedf2>
  83c6d0:	00806c16 	blt	zero,r2,83c884 <_dtoa_r+0x1304>
  83c6d4:	89e0003c 	xorhi	r7,r17,32768
  83c6d8:	800d883a 	mov	r6,r16
  83c6dc:	a809883a 	mov	r4,r21
  83c6e0:	a00b883a 	mov	r5,r20
  83c6e4:	08489100 	call	848910 <__ledf2>
  83c6e8:	103d7e0e 	bge	r2,zero,83bce4 <__alt_mem_epcs_flash_controller_0+0xff832ce4>
  83c6ec:	002b883a 	mov	r21,zero
  83c6f0:	0023883a 	mov	r17,zero
  83c6f4:	003efb06 	br	83c2e4 <__alt_mem_epcs_flash_controller_0+0xff8332e4>
  83c6f8:	d8800717 	ldw	r2,28(sp)
  83c6fc:	003bd006 	br	83b640 <__alt_mem_epcs_flash_controller_0+0xff832640>
  83c700:	d9000a17 	ldw	r4,40(sp)
  83c704:	d9800d17 	ldw	r6,52(sp)
  83c708:	dd400a15 	stw	r21,40(sp)
  83c70c:	a905c83a 	sub	r2,r21,r4
  83c710:	308d883a 	add	r6,r6,r2
  83c714:	d9800d15 	stw	r6,52(sp)
  83c718:	002b883a 	mov	r21,zero
  83c71c:	003e0606 	br	83bf38 <__alt_mem_epcs_flash_controller_0+0xff832f38>
  83c720:	9023883a 	mov	r17,r18
  83c724:	9829883a 	mov	r20,r19
  83c728:	04000084 	movi	r16,2
  83c72c:	003c9206 	br	83b978 <__alt_mem_epcs_flash_controller_0+0xff832978>
  83c730:	04000044 	movi	r16,1
  83c734:	dc000c15 	stw	r16,48(sp)
  83c738:	dc000615 	stw	r16,24(sp)
  83c73c:	dc002215 	stw	r16,136(sp)
  83c740:	e0001115 	stw	zero,68(fp)
  83c744:	000b883a 	mov	r5,zero
  83c748:	003c6906 	br	83b8f0 <__alt_mem_epcs_flash_controller_0+0xff8328f0>
  83c74c:	3021883a 	mov	r16,r6
  83c750:	003ffb06 	br	83c740 <__alt_mem_epcs_flash_controller_0+0xff833740>
  83c754:	1000021e 	bne	r2,zero,83c760 <_dtoa_r+0x11e0>
  83c758:	4200004c 	andi	r8,r8,1
  83c75c:	403e7d1e 	bne	r8,zero,83c154 <__alt_mem_epcs_flash_controller_0+0xff833154>
  83c760:	01000c04 	movi	r4,48
  83c764:	00000106 	br	83c76c <_dtoa_r+0x11ec>
  83c768:	102f883a 	mov	r23,r2
  83c76c:	b8bfffc4 	addi	r2,r23,-1
  83c770:	10c00007 	ldb	r3,0(r2)
  83c774:	193ffc26 	beq	r3,r4,83c768 <__alt_mem_epcs_flash_controller_0+0xff833768>
  83c778:	003e8706 	br	83c198 <__alt_mem_epcs_flash_controller_0+0xff833198>
  83c77c:	d8800517 	ldw	r2,20(sp)
  83c780:	00a3c83a 	sub	r17,zero,r2
  83c784:	8800a426 	beq	r17,zero,83ca18 <_dtoa_r+0x1498>
  83c788:	888003cc 	andi	r2,r17,15
  83c78c:	100490fa 	slli	r2,r2,3
  83c790:	00c021b4 	movhi	r3,134
  83c794:	18e51b04 	addi	r3,r3,-27540
  83c798:	1885883a 	add	r2,r3,r2
  83c79c:	11800017 	ldw	r6,0(r2)
  83c7a0:	11c00117 	ldw	r7,4(r2)
  83c7a4:	9009883a 	mov	r4,r18
  83c7a8:	980b883a 	mov	r5,r19
  83c7ac:	8823d13a 	srai	r17,r17,4
  83c7b0:	083149c0 	call	83149c <__muldf3>
  83c7b4:	d8800f15 	stw	r2,60(sp)
  83c7b8:	d8c01015 	stw	r3,64(sp)
  83c7bc:	8800e826 	beq	r17,zero,83cb60 <_dtoa_r+0x15e0>
  83c7c0:	050021b4 	movhi	r20,134
  83c7c4:	a5251104 	addi	r20,r20,-27580
  83c7c8:	04000084 	movi	r16,2
  83c7cc:	8980004c 	andi	r6,r17,1
  83c7d0:	1009883a 	mov	r4,r2
  83c7d4:	8823d07a 	srai	r17,r17,1
  83c7d8:	180b883a 	mov	r5,r3
  83c7dc:	30000426 	beq	r6,zero,83c7f0 <_dtoa_r+0x1270>
  83c7e0:	a1800017 	ldw	r6,0(r20)
  83c7e4:	a1c00117 	ldw	r7,4(r20)
  83c7e8:	84000044 	addi	r16,r16,1
  83c7ec:	083149c0 	call	83149c <__muldf3>
  83c7f0:	a5000204 	addi	r20,r20,8
  83c7f4:	883ff51e 	bne	r17,zero,83c7cc <__alt_mem_epcs_flash_controller_0+0xff8337cc>
  83c7f8:	d8800f15 	stw	r2,60(sp)
  83c7fc:	d8c01015 	stw	r3,64(sp)
  83c800:	003c7606 	br	83b9dc <__alt_mem_epcs_flash_controller_0+0xff8329dc>
  83c804:	00c00c04 	movi	r3,48
  83c808:	10c00005 	stb	r3,0(r2)
  83c80c:	d8c00517 	ldw	r3,20(sp)
  83c810:	bd3fffc3 	ldbu	r20,-1(r23)
  83c814:	18c00044 	addi	r3,r3,1
  83c818:	d8c00515 	stw	r3,20(sp)
  83c81c:	003db906 	br	83bf04 <__alt_mem_epcs_flash_controller_0+0xff832f04>
  83c820:	89400117 	ldw	r5,4(r17)
  83c824:	e009883a 	mov	r4,fp
  83c828:	083d7a00 	call	83d7a0 <_Balloc>
  83c82c:	89800417 	ldw	r6,16(r17)
  83c830:	89400304 	addi	r5,r17,12
  83c834:	11000304 	addi	r4,r2,12
  83c838:	31800084 	addi	r6,r6,2
  83c83c:	318d883a 	add	r6,r6,r6
  83c840:	318d883a 	add	r6,r6,r6
  83c844:	1027883a 	mov	r19,r2
  83c848:	08341500 	call	834150 <memcpy>
  83c84c:	01800044 	movi	r6,1
  83c850:	980b883a 	mov	r5,r19
  83c854:	e009883a 	mov	r4,fp
  83c858:	083dfdc0 	call	83dfdc <__lshift>
  83c85c:	1029883a 	mov	r20,r2
  83c860:	003ecc06 	br	83c394 <__alt_mem_epcs_flash_controller_0+0xff833394>
  83c864:	00800e44 	movi	r2,57
  83c868:	90809026 	beq	r18,r2,83caac <_dtoa_r+0x152c>
  83c86c:	92000044 	addi	r8,r18,1
  83c870:	003f1f06 	br	83c4f0 <__alt_mem_epcs_flash_controller_0+0xff8334f0>
  83c874:	9011883a 	mov	r8,r18
  83c878:	8825883a 	mov	r18,r17
  83c87c:	a023883a 	mov	r17,r20
  83c880:	003e2906 	br	83c128 <__alt_mem_epcs_flash_controller_0+0xff833128>
  83c884:	002b883a 	mov	r21,zero
  83c888:	0023883a 	mov	r17,zero
  83c88c:	003f5406 	br	83c5e0 <__alt_mem_epcs_flash_controller_0+0xff8335e0>
  83c890:	61bfffc4 	addi	r6,r12,-1
  83c894:	300490fa 	slli	r2,r6,3
  83c898:	00c021b4 	movhi	r3,134
  83c89c:	18e51b04 	addi	r3,r3,-27540
  83c8a0:	1885883a 	add	r2,r3,r2
  83c8a4:	11000017 	ldw	r4,0(r2)
  83c8a8:	11400117 	ldw	r5,4(r2)
  83c8ac:	d8800717 	ldw	r2,28(sp)
  83c8b0:	880f883a 	mov	r7,r17
  83c8b4:	d9801215 	stw	r6,72(sp)
  83c8b8:	800d883a 	mov	r6,r16
  83c8bc:	db001615 	stw	r12,88(sp)
  83c8c0:	15c00044 	addi	r23,r2,1
  83c8c4:	083149c0 	call	83149c <__muldf3>
  83c8c8:	d9401017 	ldw	r5,64(sp)
  83c8cc:	d9000f17 	ldw	r4,60(sp)
  83c8d0:	d8c01515 	stw	r3,84(sp)
  83c8d4:	d8801415 	stw	r2,80(sp)
  83c8d8:	08493000 	call	849300 <__fixdfsi>
  83c8dc:	1009883a 	mov	r4,r2
  83c8e0:	1021883a 	mov	r16,r2
  83c8e4:	08493800 	call	849380 <__floatsidf>
  83c8e8:	d9000f17 	ldw	r4,60(sp)
  83c8ec:	d9401017 	ldw	r5,64(sp)
  83c8f0:	100d883a 	mov	r6,r2
  83c8f4:	180f883a 	mov	r7,r3
  83c8f8:	0848a040 	call	848a04 <__subdf3>
  83c8fc:	1829883a 	mov	r20,r3
  83c900:	d8c00717 	ldw	r3,28(sp)
  83c904:	84000c04 	addi	r16,r16,48
  83c908:	1023883a 	mov	r17,r2
  83c90c:	1c000005 	stb	r16,0(r3)
  83c910:	db001617 	ldw	r12,88(sp)
  83c914:	00800044 	movi	r2,1
  83c918:	60802226 	beq	r12,r2,83c9a4 <_dtoa_r+0x1424>
  83c91c:	d9c00717 	ldw	r7,28(sp)
  83c920:	8805883a 	mov	r2,r17
  83c924:	b82b883a 	mov	r21,r23
  83c928:	3b19883a 	add	r12,r7,r12
  83c92c:	6023883a 	mov	r17,r12
  83c930:	a007883a 	mov	r3,r20
  83c934:	dc800f15 	stw	r18,60(sp)
  83c938:	000d883a 	mov	r6,zero
  83c93c:	01d00934 	movhi	r7,16420
  83c940:	1009883a 	mov	r4,r2
  83c944:	180b883a 	mov	r5,r3
  83c948:	083149c0 	call	83149c <__muldf3>
  83c94c:	180b883a 	mov	r5,r3
  83c950:	1009883a 	mov	r4,r2
  83c954:	1829883a 	mov	r20,r3
  83c958:	1025883a 	mov	r18,r2
  83c95c:	08493000 	call	849300 <__fixdfsi>
  83c960:	1009883a 	mov	r4,r2
  83c964:	1021883a 	mov	r16,r2
  83c968:	08493800 	call	849380 <__floatsidf>
  83c96c:	100d883a 	mov	r6,r2
  83c970:	180f883a 	mov	r7,r3
  83c974:	9009883a 	mov	r4,r18
  83c978:	a00b883a 	mov	r5,r20
  83c97c:	84000c04 	addi	r16,r16,48
  83c980:	0848a040 	call	848a04 <__subdf3>
  83c984:	ad400044 	addi	r21,r21,1
  83c988:	ac3fffc5 	stb	r16,-1(r21)
  83c98c:	ac7fea1e 	bne	r21,r17,83c938 <__alt_mem_epcs_flash_controller_0+0xff833938>
  83c990:	1023883a 	mov	r17,r2
  83c994:	d8801217 	ldw	r2,72(sp)
  83c998:	dc800f17 	ldw	r18,60(sp)
  83c99c:	1829883a 	mov	r20,r3
  83c9a0:	b8af883a 	add	r23,r23,r2
  83c9a4:	d9001417 	ldw	r4,80(sp)
  83c9a8:	d9401517 	ldw	r5,84(sp)
  83c9ac:	000d883a 	mov	r6,zero
  83c9b0:	01cff834 	movhi	r7,16352
  83c9b4:	08475300 	call	847530 <__adddf3>
  83c9b8:	880d883a 	mov	r6,r17
  83c9bc:	a00f883a 	mov	r7,r20
  83c9c0:	1009883a 	mov	r4,r2
  83c9c4:	180b883a 	mov	r5,r3
  83c9c8:	08489100 	call	848910 <__ledf2>
  83c9cc:	10003e0e 	bge	r2,zero,83cac8 <_dtoa_r+0x1548>
  83c9d0:	d9001317 	ldw	r4,76(sp)
  83c9d4:	bd3fffc3 	ldbu	r20,-1(r23)
  83c9d8:	d9000515 	stw	r4,20(sp)
  83c9dc:	003d3b06 	br	83becc <__alt_mem_epcs_flash_controller_0+0xff832ecc>
  83c9e0:	0027883a 	mov	r19,zero
  83c9e4:	003f1b06 	br	83c654 <__alt_mem_epcs_flash_controller_0+0xff833654>
  83c9e8:	d8800817 	ldw	r2,32(sp)
  83c9ec:	11e9c83a 	sub	r20,r2,r7
  83c9f0:	0005883a 	mov	r2,zero
  83c9f4:	003d5406 	br	83bf48 <__alt_mem_epcs_flash_controller_0+0xff832f48>
  83c9f8:	00800044 	movi	r2,1
  83c9fc:	003dc706 	br	83c11c <__alt_mem_epcs_flash_controller_0+0xff83311c>
  83ca00:	d8c00217 	ldw	r3,8(sp)
  83ca04:	00800d84 	movi	r2,54
  83ca08:	dd400a17 	ldw	r21,40(sp)
  83ca0c:	10c5c83a 	sub	r2,r2,r3
  83ca10:	dd000817 	ldw	r20,32(sp)
  83ca14:	003d4c06 	br	83bf48 <__alt_mem_epcs_flash_controller_0+0xff832f48>
  83ca18:	dc800f15 	stw	r18,60(sp)
  83ca1c:	dcc01015 	stw	r19,64(sp)
  83ca20:	04000084 	movi	r16,2
  83ca24:	003bed06 	br	83b9dc <__alt_mem_epcs_flash_controller_0+0xff8329dc>
  83ca28:	d9000617 	ldw	r4,24(sp)
  83ca2c:	203f0d26 	beq	r4,zero,83c664 <__alt_mem_epcs_flash_controller_0+0xff833664>
  83ca30:	d9800c17 	ldw	r6,48(sp)
  83ca34:	01bcab0e 	bge	zero,r6,83bce4 <__alt_mem_epcs_flash_controller_0+0xff832ce4>
  83ca38:	d9401017 	ldw	r5,64(sp)
  83ca3c:	d9000f17 	ldw	r4,60(sp)
  83ca40:	000d883a 	mov	r6,zero
  83ca44:	01d00934 	movhi	r7,16420
  83ca48:	083149c0 	call	83149c <__muldf3>
  83ca4c:	81000044 	addi	r4,r16,1
  83ca50:	d8800f15 	stw	r2,60(sp)
  83ca54:	d8c01015 	stw	r3,64(sp)
  83ca58:	08493800 	call	849380 <__floatsidf>
  83ca5c:	d9800f17 	ldw	r6,60(sp)
  83ca60:	d9c01017 	ldw	r7,64(sp)
  83ca64:	1009883a 	mov	r4,r2
  83ca68:	180b883a 	mov	r5,r3
  83ca6c:	083149c0 	call	83149c <__muldf3>
  83ca70:	01d00734 	movhi	r7,16412
  83ca74:	000d883a 	mov	r6,zero
  83ca78:	1009883a 	mov	r4,r2
  83ca7c:	180b883a 	mov	r5,r3
  83ca80:	08475300 	call	847530 <__adddf3>
  83ca84:	d9c00517 	ldw	r7,20(sp)
  83ca88:	047f3034 	movhi	r17,64704
  83ca8c:	1021883a 	mov	r16,r2
  83ca90:	39ffffc4 	addi	r7,r7,-1
  83ca94:	d9c01315 	stw	r7,76(sp)
  83ca98:	1c63883a 	add	r17,r3,r17
  83ca9c:	db000c17 	ldw	r12,48(sp)
  83caa0:	003bea06 	br	83ba4c <__alt_mem_epcs_flash_controller_0+0xff832a4c>
  83caa4:	dc000915 	stw	r16,36(sp)
  83caa8:	003e0e06 	br	83c2e4 <__alt_mem_epcs_flash_controller_0+0xff8332e4>
  83caac:	01000e44 	movi	r4,57
  83cab0:	8825883a 	mov	r18,r17
  83cab4:	9dc00044 	addi	r23,r19,1
  83cab8:	99000005 	stb	r4,0(r19)
  83cabc:	a023883a 	mov	r17,r20
  83cac0:	dc000915 	stw	r16,36(sp)
  83cac4:	003da406 	br	83c158 <__alt_mem_epcs_flash_controller_0+0xff833158>
  83cac8:	d9801417 	ldw	r6,80(sp)
  83cacc:	d9c01517 	ldw	r7,84(sp)
  83cad0:	0009883a 	mov	r4,zero
  83cad4:	014ff834 	movhi	r5,16352
  83cad8:	0848a040 	call	848a04 <__subdf3>
  83cadc:	880d883a 	mov	r6,r17
  83cae0:	a00f883a 	mov	r7,r20
  83cae4:	1009883a 	mov	r4,r2
  83cae8:	180b883a 	mov	r5,r3
  83caec:	08488340 	call	848834 <__gedf2>
  83caf0:	00bc7c0e 	bge	zero,r2,83bce4 <__alt_mem_epcs_flash_controller_0+0xff832ce4>
  83caf4:	01000c04 	movi	r4,48
  83caf8:	00000106 	br	83cb00 <_dtoa_r+0x1580>
  83cafc:	102f883a 	mov	r23,r2
  83cb00:	b8bfffc4 	addi	r2,r23,-1
  83cb04:	10c00007 	ldb	r3,0(r2)
  83cb08:	193ffc26 	beq	r3,r4,83cafc <__alt_mem_epcs_flash_controller_0+0xff833afc>
  83cb0c:	d9801317 	ldw	r6,76(sp)
  83cb10:	d9800515 	stw	r6,20(sp)
  83cb14:	003c4406 	br	83bc28 <__alt_mem_epcs_flash_controller_0+0xff832c28>
  83cb18:	d9801317 	ldw	r6,76(sp)
  83cb1c:	d9800515 	stw	r6,20(sp)
  83cb20:	003cea06 	br	83becc <__alt_mem_epcs_flash_controller_0+0xff832ecc>
  83cb24:	dd800f17 	ldw	r22,60(sp)
  83cb28:	dcc01017 	ldw	r19,64(sp)
  83cb2c:	dc801217 	ldw	r18,72(sp)
  83cb30:	003c6c06 	br	83bce4 <__alt_mem_epcs_flash_controller_0+0xff832ce4>
  83cb34:	903e031e 	bne	r18,zero,83c344 <__alt_mem_epcs_flash_controller_0+0xff833344>
  83cb38:	003ebb06 	br	83c628 <__alt_mem_epcs_flash_controller_0+0xff833628>
  83cb3c:	103e6c1e 	bne	r2,zero,83c4f0 <__alt_mem_epcs_flash_controller_0+0xff8334f0>
  83cb40:	4080004c 	andi	r2,r8,1
  83cb44:	103e6a26 	beq	r2,zero,83c4f0 <__alt_mem_epcs_flash_controller_0+0xff8334f0>
  83cb48:	003e6606 	br	83c4e4 <__alt_mem_epcs_flash_controller_0+0xff8334e4>
  83cb4c:	d8c00317 	ldw	r3,12(sp)
  83cb50:	00800084 	movi	r2,2
  83cb54:	10c02916 	blt	r2,r3,83cbfc <_dtoa_r+0x167c>
  83cb58:	d9000c17 	ldw	r4,48(sp)
  83cb5c:	003e8806 	br	83c580 <__alt_mem_epcs_flash_controller_0+0xff833580>
  83cb60:	04000084 	movi	r16,2
  83cb64:	003b9d06 	br	83b9dc <__alt_mem_epcs_flash_controller_0+0xff8329dc>
  83cb68:	d9001317 	ldw	r4,76(sp)
  83cb6c:	d9000515 	stw	r4,20(sp)
  83cb70:	003cd606 	br	83becc <__alt_mem_epcs_flash_controller_0+0xff832ecc>
  83cb74:	d8801317 	ldw	r2,76(sp)
  83cb78:	d8800515 	stw	r2,20(sp)
  83cb7c:	003c2a06 	br	83bc28 <__alt_mem_epcs_flash_controller_0+0xff832c28>
  83cb80:	d9800317 	ldw	r6,12(sp)
  83cb84:	00800084 	movi	r2,2
  83cb88:	11801516 	blt	r2,r6,83cbe0 <_dtoa_r+0x1660>
  83cb8c:	d9c00c17 	ldw	r7,48(sp)
  83cb90:	d9c00615 	stw	r7,24(sp)
  83cb94:	003df706 	br	83c374 <__alt_mem_epcs_flash_controller_0+0xff833374>
  83cb98:	193d3926 	beq	r3,r4,83c080 <__alt_mem_epcs_flash_controller_0+0xff833080>
  83cb9c:	00c00f04 	movi	r3,60
  83cba0:	1885c83a 	sub	r2,r3,r2
  83cba4:	003ddf06 	br	83c324 <__alt_mem_epcs_flash_controller_0+0xff833324>
  83cba8:	e009883a 	mov	r4,fp
  83cbac:	e0001115 	stw	zero,68(fp)
  83cbb0:	000b883a 	mov	r5,zero
  83cbb4:	083d7a00 	call	83d7a0 <_Balloc>
  83cbb8:	d8800715 	stw	r2,28(sp)
  83cbbc:	d8c00717 	ldw	r3,28(sp)
  83cbc0:	00bfffc4 	movi	r2,-1
  83cbc4:	01000044 	movi	r4,1
  83cbc8:	d8800c15 	stw	r2,48(sp)
  83cbcc:	e0c01015 	stw	r3,64(fp)
  83cbd0:	d9000b15 	stw	r4,44(sp)
  83cbd4:	d8800615 	stw	r2,24(sp)
  83cbd8:	d8002215 	stw	zero,136(sp)
  83cbdc:	003c4106 	br	83bce4 <__alt_mem_epcs_flash_controller_0+0xff832ce4>
  83cbe0:	d8c00c17 	ldw	r3,48(sp)
  83cbe4:	d8c00615 	stw	r3,24(sp)
  83cbe8:	003e7006 	br	83c5ac <__alt_mem_epcs_flash_controller_0+0xff8335ac>
  83cbec:	04400044 	movi	r17,1
  83cbf0:	003b2006 	br	83b874 <__alt_mem_epcs_flash_controller_0+0xff832874>
  83cbf4:	000b883a 	mov	r5,zero
  83cbf8:	003b3d06 	br	83b8f0 <__alt_mem_epcs_flash_controller_0+0xff8328f0>
  83cbfc:	d8800c17 	ldw	r2,48(sp)
  83cc00:	d8800615 	stw	r2,24(sp)
  83cc04:	003e6906 	br	83c5ac <__alt_mem_epcs_flash_controller_0+0xff8335ac>

0083cc08 <__sflags>:
  83cc08:	28800007 	ldb	r2,0(r5)
  83cc0c:	00c01c84 	movi	r3,114
  83cc10:	10c02426 	beq	r2,r3,83cca4 <__sflags+0x9c>
  83cc14:	00c01dc4 	movi	r3,119
  83cc18:	10c01e26 	beq	r2,r3,83cc94 <__sflags+0x8c>
  83cc1c:	00c01844 	movi	r3,97
  83cc20:	10c00426 	beq	r2,r3,83cc34 <__sflags+0x2c>
  83cc24:	00800584 	movi	r2,22
  83cc28:	20800015 	stw	r2,0(r4)
  83cc2c:	0005883a 	mov	r2,zero
  83cc30:	f800283a 	ret
  83cc34:	02c08204 	movi	r11,520
  83cc38:	01000044 	movi	r4,1
  83cc3c:	00804204 	movi	r2,264
  83cc40:	01c00ac4 	movi	r7,43
  83cc44:	02bff8c4 	movi	r10,-29
  83cc48:	027fff04 	movi	r9,-4
  83cc4c:	02001e04 	movi	r8,120
  83cc50:	29400044 	addi	r5,r5,1
  83cc54:	28c00007 	ldb	r3,0(r5)
  83cc58:	18000626 	beq	r3,zero,83cc74 <__sflags+0x6c>
  83cc5c:	19c00826 	beq	r3,r7,83cc80 <__sflags+0x78>
  83cc60:	1a3ffb1e 	bne	r3,r8,83cc50 <__alt_mem_epcs_flash_controller_0+0xff833c50>
  83cc64:	29400044 	addi	r5,r5,1
  83cc68:	28c00007 	ldb	r3,0(r5)
  83cc6c:	21020014 	ori	r4,r4,2048
  83cc70:	183ffa1e 	bne	r3,zero,83cc5c <__alt_mem_epcs_flash_controller_0+0xff833c5c>
  83cc74:	22c8b03a 	or	r4,r4,r11
  83cc78:	31000015 	stw	r4,0(r6)
  83cc7c:	f800283a 	ret
  83cc80:	1284703a 	and	r2,r2,r10
  83cc84:	2248703a 	and	r4,r4,r9
  83cc88:	10800414 	ori	r2,r2,16
  83cc8c:	21000094 	ori	r4,r4,2
  83cc90:	003fef06 	br	83cc50 <__alt_mem_epcs_flash_controller_0+0xff833c50>
  83cc94:	02c18004 	movi	r11,1536
  83cc98:	01000044 	movi	r4,1
  83cc9c:	00800204 	movi	r2,8
  83cca0:	003fe706 	br	83cc40 <__alt_mem_epcs_flash_controller_0+0xff833c40>
  83cca4:	0017883a 	mov	r11,zero
  83cca8:	0009883a 	mov	r4,zero
  83ccac:	00800104 	movi	r2,4
  83ccb0:	003fe306 	br	83cc40 <__alt_mem_epcs_flash_controller_0+0xff833c40>

0083ccb4 <__sfvwrite_r>:
  83ccb4:	30800217 	ldw	r2,8(r6)
  83ccb8:	10006726 	beq	r2,zero,83ce58 <__sfvwrite_r+0x1a4>
  83ccbc:	28c0030b 	ldhu	r3,12(r5)
  83ccc0:	defff404 	addi	sp,sp,-48
  83ccc4:	dd400715 	stw	r21,28(sp)
  83ccc8:	dd000615 	stw	r20,24(sp)
  83cccc:	dc000215 	stw	r16,8(sp)
  83ccd0:	dfc00b15 	stw	ra,44(sp)
  83ccd4:	df000a15 	stw	fp,40(sp)
  83ccd8:	ddc00915 	stw	r23,36(sp)
  83ccdc:	dd800815 	stw	r22,32(sp)
  83cce0:	dcc00515 	stw	r19,20(sp)
  83cce4:	dc800415 	stw	r18,16(sp)
  83cce8:	dc400315 	stw	r17,12(sp)
  83ccec:	1880020c 	andi	r2,r3,8
  83ccf0:	2821883a 	mov	r16,r5
  83ccf4:	202b883a 	mov	r21,r4
  83ccf8:	3029883a 	mov	r20,r6
  83ccfc:	10002726 	beq	r2,zero,83cd9c <__sfvwrite_r+0xe8>
  83cd00:	28800417 	ldw	r2,16(r5)
  83cd04:	10002526 	beq	r2,zero,83cd9c <__sfvwrite_r+0xe8>
  83cd08:	1880008c 	andi	r2,r3,2
  83cd0c:	a4400017 	ldw	r17,0(r20)
  83cd10:	10002a26 	beq	r2,zero,83cdbc <__sfvwrite_r+0x108>
  83cd14:	05a00034 	movhi	r22,32768
  83cd18:	0027883a 	mov	r19,zero
  83cd1c:	0025883a 	mov	r18,zero
  83cd20:	b5bf0004 	addi	r22,r22,-1024
  83cd24:	980d883a 	mov	r6,r19
  83cd28:	a809883a 	mov	r4,r21
  83cd2c:	90004626 	beq	r18,zero,83ce48 <__sfvwrite_r+0x194>
  83cd30:	900f883a 	mov	r7,r18
  83cd34:	b480022e 	bgeu	r22,r18,83cd40 <__sfvwrite_r+0x8c>
  83cd38:	01e00034 	movhi	r7,32768
  83cd3c:	39ff0004 	addi	r7,r7,-1024
  83cd40:	80800917 	ldw	r2,36(r16)
  83cd44:	81400717 	ldw	r5,28(r16)
  83cd48:	103ee83a 	callr	r2
  83cd4c:	00805a0e 	bge	zero,r2,83ceb8 <__sfvwrite_r+0x204>
  83cd50:	a0c00217 	ldw	r3,8(r20)
  83cd54:	98a7883a 	add	r19,r19,r2
  83cd58:	90a5c83a 	sub	r18,r18,r2
  83cd5c:	1885c83a 	sub	r2,r3,r2
  83cd60:	a0800215 	stw	r2,8(r20)
  83cd64:	103fef1e 	bne	r2,zero,83cd24 <__alt_mem_epcs_flash_controller_0+0xff833d24>
  83cd68:	0005883a 	mov	r2,zero
  83cd6c:	dfc00b17 	ldw	ra,44(sp)
  83cd70:	df000a17 	ldw	fp,40(sp)
  83cd74:	ddc00917 	ldw	r23,36(sp)
  83cd78:	dd800817 	ldw	r22,32(sp)
  83cd7c:	dd400717 	ldw	r21,28(sp)
  83cd80:	dd000617 	ldw	r20,24(sp)
  83cd84:	dcc00517 	ldw	r19,20(sp)
  83cd88:	dc800417 	ldw	r18,16(sp)
  83cd8c:	dc400317 	ldw	r17,12(sp)
  83cd90:	dc000217 	ldw	r16,8(sp)
  83cd94:	dec00c04 	addi	sp,sp,48
  83cd98:	f800283a 	ret
  83cd9c:	800b883a 	mov	r5,r16
  83cda0:	a809883a 	mov	r4,r21
  83cda4:	083b0300 	call	83b030 <__swsetup_r>
  83cda8:	1000ee1e 	bne	r2,zero,83d164 <__sfvwrite_r+0x4b0>
  83cdac:	80c0030b 	ldhu	r3,12(r16)
  83cdb0:	a4400017 	ldw	r17,0(r20)
  83cdb4:	1880008c 	andi	r2,r3,2
  83cdb8:	103fd61e 	bne	r2,zero,83cd14 <__alt_mem_epcs_flash_controller_0+0xff833d14>
  83cdbc:	1880004c 	andi	r2,r3,1
  83cdc0:	1000421e 	bne	r2,zero,83cecc <__sfvwrite_r+0x218>
  83cdc4:	0039883a 	mov	fp,zero
  83cdc8:	0025883a 	mov	r18,zero
  83cdcc:	90001a26 	beq	r18,zero,83ce38 <__sfvwrite_r+0x184>
  83cdd0:	1880800c 	andi	r2,r3,512
  83cdd4:	84c00217 	ldw	r19,8(r16)
  83cdd8:	10002126 	beq	r2,zero,83ce60 <__sfvwrite_r+0x1ac>
  83cddc:	982f883a 	mov	r23,r19
  83cde0:	94c09636 	bltu	r18,r19,83d03c <__sfvwrite_r+0x388>
  83cde4:	1881200c 	andi	r2,r3,1152
  83cde8:	1000a11e 	bne	r2,zero,83d070 <__sfvwrite_r+0x3bc>
  83cdec:	81000017 	ldw	r4,0(r16)
  83cdf0:	b80d883a 	mov	r6,r23
  83cdf4:	e00b883a 	mov	r5,fp
  83cdf8:	083d6440 	call	83d644 <memmove>
  83cdfc:	80c00217 	ldw	r3,8(r16)
  83ce00:	81000017 	ldw	r4,0(r16)
  83ce04:	9005883a 	mov	r2,r18
  83ce08:	1ce7c83a 	sub	r19,r3,r19
  83ce0c:	25cf883a 	add	r7,r4,r23
  83ce10:	84c00215 	stw	r19,8(r16)
  83ce14:	81c00015 	stw	r7,0(r16)
  83ce18:	a0c00217 	ldw	r3,8(r20)
  83ce1c:	e0b9883a 	add	fp,fp,r2
  83ce20:	90a5c83a 	sub	r18,r18,r2
  83ce24:	18a7c83a 	sub	r19,r3,r2
  83ce28:	a4c00215 	stw	r19,8(r20)
  83ce2c:	983fce26 	beq	r19,zero,83cd68 <__alt_mem_epcs_flash_controller_0+0xff833d68>
  83ce30:	80c0030b 	ldhu	r3,12(r16)
  83ce34:	903fe61e 	bne	r18,zero,83cdd0 <__alt_mem_epcs_flash_controller_0+0xff833dd0>
  83ce38:	8f000017 	ldw	fp,0(r17)
  83ce3c:	8c800117 	ldw	r18,4(r17)
  83ce40:	8c400204 	addi	r17,r17,8
  83ce44:	003fe106 	br	83cdcc <__alt_mem_epcs_flash_controller_0+0xff833dcc>
  83ce48:	8cc00017 	ldw	r19,0(r17)
  83ce4c:	8c800117 	ldw	r18,4(r17)
  83ce50:	8c400204 	addi	r17,r17,8
  83ce54:	003fb306 	br	83cd24 <__alt_mem_epcs_flash_controller_0+0xff833d24>
  83ce58:	0005883a 	mov	r2,zero
  83ce5c:	f800283a 	ret
  83ce60:	81000017 	ldw	r4,0(r16)
  83ce64:	80800417 	ldw	r2,16(r16)
  83ce68:	11005a36 	bltu	r2,r4,83cfd4 <__sfvwrite_r+0x320>
  83ce6c:	85c00517 	ldw	r23,20(r16)
  83ce70:	95c05836 	bltu	r18,r23,83cfd4 <__sfvwrite_r+0x320>
  83ce74:	00a00034 	movhi	r2,32768
  83ce78:	10bfffc4 	addi	r2,r2,-1
  83ce7c:	9009883a 	mov	r4,r18
  83ce80:	1480012e 	bgeu	r2,r18,83ce88 <__sfvwrite_r+0x1d4>
  83ce84:	1009883a 	mov	r4,r2
  83ce88:	b80b883a 	mov	r5,r23
  83ce8c:	08303500 	call	830350 <__divsi3>
  83ce90:	b80b883a 	mov	r5,r23
  83ce94:	1009883a 	mov	r4,r2
  83ce98:	08305040 	call	830504 <__mulsi3>
  83ce9c:	81400717 	ldw	r5,28(r16)
  83cea0:	80c00917 	ldw	r3,36(r16)
  83cea4:	100f883a 	mov	r7,r2
  83cea8:	e00d883a 	mov	r6,fp
  83ceac:	a809883a 	mov	r4,r21
  83ceb0:	183ee83a 	callr	r3
  83ceb4:	00bfd816 	blt	zero,r2,83ce18 <__alt_mem_epcs_flash_controller_0+0xff833e18>
  83ceb8:	8080030b 	ldhu	r2,12(r16)
  83cebc:	10801014 	ori	r2,r2,64
  83cec0:	8080030d 	sth	r2,12(r16)
  83cec4:	00bfffc4 	movi	r2,-1
  83cec8:	003fa806 	br	83cd6c <__alt_mem_epcs_flash_controller_0+0xff833d6c>
  83cecc:	0027883a 	mov	r19,zero
  83ced0:	0011883a 	mov	r8,zero
  83ced4:	0039883a 	mov	fp,zero
  83ced8:	0025883a 	mov	r18,zero
  83cedc:	90001f26 	beq	r18,zero,83cf5c <__sfvwrite_r+0x2a8>
  83cee0:	40005a26 	beq	r8,zero,83d04c <__sfvwrite_r+0x398>
  83cee4:	982d883a 	mov	r22,r19
  83cee8:	94c0012e 	bgeu	r18,r19,83cef0 <__sfvwrite_r+0x23c>
  83ceec:	902d883a 	mov	r22,r18
  83cef0:	81000017 	ldw	r4,0(r16)
  83cef4:	80800417 	ldw	r2,16(r16)
  83cef8:	b02f883a 	mov	r23,r22
  83cefc:	81c00517 	ldw	r7,20(r16)
  83cf00:	1100032e 	bgeu	r2,r4,83cf10 <__sfvwrite_r+0x25c>
  83cf04:	80c00217 	ldw	r3,8(r16)
  83cf08:	38c7883a 	add	r3,r7,r3
  83cf0c:	1d801816 	blt	r3,r22,83cf70 <__sfvwrite_r+0x2bc>
  83cf10:	b1c03e16 	blt	r22,r7,83d00c <__sfvwrite_r+0x358>
  83cf14:	80800917 	ldw	r2,36(r16)
  83cf18:	81400717 	ldw	r5,28(r16)
  83cf1c:	e00d883a 	mov	r6,fp
  83cf20:	da000115 	stw	r8,4(sp)
  83cf24:	a809883a 	mov	r4,r21
  83cf28:	103ee83a 	callr	r2
  83cf2c:	102f883a 	mov	r23,r2
  83cf30:	da000117 	ldw	r8,4(sp)
  83cf34:	00bfe00e 	bge	zero,r2,83ceb8 <__alt_mem_epcs_flash_controller_0+0xff833eb8>
  83cf38:	9de7c83a 	sub	r19,r19,r23
  83cf3c:	98001f26 	beq	r19,zero,83cfbc <__sfvwrite_r+0x308>
  83cf40:	a0800217 	ldw	r2,8(r20)
  83cf44:	e5f9883a 	add	fp,fp,r23
  83cf48:	95e5c83a 	sub	r18,r18,r23
  83cf4c:	15efc83a 	sub	r23,r2,r23
  83cf50:	a5c00215 	stw	r23,8(r20)
  83cf54:	b83f8426 	beq	r23,zero,83cd68 <__alt_mem_epcs_flash_controller_0+0xff833d68>
  83cf58:	903fe11e 	bne	r18,zero,83cee0 <__alt_mem_epcs_flash_controller_0+0xff833ee0>
  83cf5c:	8f000017 	ldw	fp,0(r17)
  83cf60:	8c800117 	ldw	r18,4(r17)
  83cf64:	0011883a 	mov	r8,zero
  83cf68:	8c400204 	addi	r17,r17,8
  83cf6c:	003fdb06 	br	83cedc <__alt_mem_epcs_flash_controller_0+0xff833edc>
  83cf70:	180d883a 	mov	r6,r3
  83cf74:	e00b883a 	mov	r5,fp
  83cf78:	da000115 	stw	r8,4(sp)
  83cf7c:	d8c00015 	stw	r3,0(sp)
  83cf80:	083d6440 	call	83d644 <memmove>
  83cf84:	d8c00017 	ldw	r3,0(sp)
  83cf88:	80800017 	ldw	r2,0(r16)
  83cf8c:	800b883a 	mov	r5,r16
  83cf90:	a809883a 	mov	r4,r21
  83cf94:	10c5883a 	add	r2,r2,r3
  83cf98:	80800015 	stw	r2,0(r16)
  83cf9c:	d8c00015 	stw	r3,0(sp)
  83cfa0:	08323600 	call	832360 <_fflush_r>
  83cfa4:	d8c00017 	ldw	r3,0(sp)
  83cfa8:	da000117 	ldw	r8,4(sp)
  83cfac:	103fc21e 	bne	r2,zero,83ceb8 <__alt_mem_epcs_flash_controller_0+0xff833eb8>
  83cfb0:	182f883a 	mov	r23,r3
  83cfb4:	9de7c83a 	sub	r19,r19,r23
  83cfb8:	983fe11e 	bne	r19,zero,83cf40 <__alt_mem_epcs_flash_controller_0+0xff833f40>
  83cfbc:	800b883a 	mov	r5,r16
  83cfc0:	a809883a 	mov	r4,r21
  83cfc4:	08323600 	call	832360 <_fflush_r>
  83cfc8:	103fbb1e 	bne	r2,zero,83ceb8 <__alt_mem_epcs_flash_controller_0+0xff833eb8>
  83cfcc:	0011883a 	mov	r8,zero
  83cfd0:	003fdb06 	br	83cf40 <__alt_mem_epcs_flash_controller_0+0xff833f40>
  83cfd4:	94c0012e 	bgeu	r18,r19,83cfdc <__sfvwrite_r+0x328>
  83cfd8:	9027883a 	mov	r19,r18
  83cfdc:	980d883a 	mov	r6,r19
  83cfe0:	e00b883a 	mov	r5,fp
  83cfe4:	083d6440 	call	83d644 <memmove>
  83cfe8:	80800217 	ldw	r2,8(r16)
  83cfec:	80c00017 	ldw	r3,0(r16)
  83cff0:	14c5c83a 	sub	r2,r2,r19
  83cff4:	1cc7883a 	add	r3,r3,r19
  83cff8:	80800215 	stw	r2,8(r16)
  83cffc:	80c00015 	stw	r3,0(r16)
  83d000:	10004326 	beq	r2,zero,83d110 <__sfvwrite_r+0x45c>
  83d004:	9805883a 	mov	r2,r19
  83d008:	003f8306 	br	83ce18 <__alt_mem_epcs_flash_controller_0+0xff833e18>
  83d00c:	b00d883a 	mov	r6,r22
  83d010:	e00b883a 	mov	r5,fp
  83d014:	da000115 	stw	r8,4(sp)
  83d018:	083d6440 	call	83d644 <memmove>
  83d01c:	80800217 	ldw	r2,8(r16)
  83d020:	80c00017 	ldw	r3,0(r16)
  83d024:	da000117 	ldw	r8,4(sp)
  83d028:	1585c83a 	sub	r2,r2,r22
  83d02c:	1dad883a 	add	r22,r3,r22
  83d030:	80800215 	stw	r2,8(r16)
  83d034:	85800015 	stw	r22,0(r16)
  83d038:	003fbf06 	br	83cf38 <__alt_mem_epcs_flash_controller_0+0xff833f38>
  83d03c:	81000017 	ldw	r4,0(r16)
  83d040:	9027883a 	mov	r19,r18
  83d044:	902f883a 	mov	r23,r18
  83d048:	003f6906 	br	83cdf0 <__alt_mem_epcs_flash_controller_0+0xff833df0>
  83d04c:	900d883a 	mov	r6,r18
  83d050:	01400284 	movi	r5,10
  83d054:	e009883a 	mov	r4,fp
  83d058:	083d5600 	call	83d560 <memchr>
  83d05c:	10003e26 	beq	r2,zero,83d158 <__sfvwrite_r+0x4a4>
  83d060:	10800044 	addi	r2,r2,1
  83d064:	1727c83a 	sub	r19,r2,fp
  83d068:	02000044 	movi	r8,1
  83d06c:	003f9d06 	br	83cee4 <__alt_mem_epcs_flash_controller_0+0xff833ee4>
  83d070:	80800517 	ldw	r2,20(r16)
  83d074:	81400417 	ldw	r5,16(r16)
  83d078:	81c00017 	ldw	r7,0(r16)
  83d07c:	10a7883a 	add	r19,r2,r2
  83d080:	9885883a 	add	r2,r19,r2
  83d084:	1026d7fa 	srli	r19,r2,31
  83d088:	396dc83a 	sub	r22,r7,r5
  83d08c:	b1000044 	addi	r4,r22,1
  83d090:	9885883a 	add	r2,r19,r2
  83d094:	1027d07a 	srai	r19,r2,1
  83d098:	2485883a 	add	r2,r4,r18
  83d09c:	980d883a 	mov	r6,r19
  83d0a0:	9880022e 	bgeu	r19,r2,83d0ac <__sfvwrite_r+0x3f8>
  83d0a4:	1027883a 	mov	r19,r2
  83d0a8:	100d883a 	mov	r6,r2
  83d0ac:	18c1000c 	andi	r3,r3,1024
  83d0b0:	18001c26 	beq	r3,zero,83d124 <__sfvwrite_r+0x470>
  83d0b4:	300b883a 	mov	r5,r6
  83d0b8:	a809883a 	mov	r4,r21
  83d0bc:	08339440 	call	833944 <_malloc_r>
  83d0c0:	102f883a 	mov	r23,r2
  83d0c4:	10002926 	beq	r2,zero,83d16c <__sfvwrite_r+0x4b8>
  83d0c8:	81400417 	ldw	r5,16(r16)
  83d0cc:	b00d883a 	mov	r6,r22
  83d0d0:	1009883a 	mov	r4,r2
  83d0d4:	08341500 	call	834150 <memcpy>
  83d0d8:	8080030b 	ldhu	r2,12(r16)
  83d0dc:	00fedfc4 	movi	r3,-1153
  83d0e0:	10c4703a 	and	r2,r2,r3
  83d0e4:	10802014 	ori	r2,r2,128
  83d0e8:	8080030d 	sth	r2,12(r16)
  83d0ec:	bd89883a 	add	r4,r23,r22
  83d0f0:	9d8fc83a 	sub	r7,r19,r22
  83d0f4:	85c00415 	stw	r23,16(r16)
  83d0f8:	84c00515 	stw	r19,20(r16)
  83d0fc:	81000015 	stw	r4,0(r16)
  83d100:	9027883a 	mov	r19,r18
  83d104:	81c00215 	stw	r7,8(r16)
  83d108:	902f883a 	mov	r23,r18
  83d10c:	003f3806 	br	83cdf0 <__alt_mem_epcs_flash_controller_0+0xff833df0>
  83d110:	800b883a 	mov	r5,r16
  83d114:	a809883a 	mov	r4,r21
  83d118:	08323600 	call	832360 <_fflush_r>
  83d11c:	103fb926 	beq	r2,zero,83d004 <__alt_mem_epcs_flash_controller_0+0xff834004>
  83d120:	003f6506 	br	83ceb8 <__alt_mem_epcs_flash_controller_0+0xff833eb8>
  83d124:	a809883a 	mov	r4,r21
  83d128:	083e8b80 	call	83e8b8 <_realloc_r>
  83d12c:	102f883a 	mov	r23,r2
  83d130:	103fee1e 	bne	r2,zero,83d0ec <__alt_mem_epcs_flash_controller_0+0xff8340ec>
  83d134:	81400417 	ldw	r5,16(r16)
  83d138:	a809883a 	mov	r4,r21
  83d13c:	0832c880 	call	832c88 <_free_r>
  83d140:	8080030b 	ldhu	r2,12(r16)
  83d144:	00ffdfc4 	movi	r3,-129
  83d148:	1884703a 	and	r2,r3,r2
  83d14c:	00c00304 	movi	r3,12
  83d150:	a8c00015 	stw	r3,0(r21)
  83d154:	003f5906 	br	83cebc <__alt_mem_epcs_flash_controller_0+0xff833ebc>
  83d158:	94c00044 	addi	r19,r18,1
  83d15c:	02000044 	movi	r8,1
  83d160:	003f6006 	br	83cee4 <__alt_mem_epcs_flash_controller_0+0xff833ee4>
  83d164:	00bfffc4 	movi	r2,-1
  83d168:	003f0006 	br	83cd6c <__alt_mem_epcs_flash_controller_0+0xff833d6c>
  83d16c:	00800304 	movi	r2,12
  83d170:	a8800015 	stw	r2,0(r21)
  83d174:	8080030b 	ldhu	r2,12(r16)
  83d178:	003f5006 	br	83cebc <__alt_mem_epcs_flash_controller_0+0xff833ebc>

0083d17c <_isatty_r>:
  83d17c:	defffd04 	addi	sp,sp,-12
  83d180:	dc000015 	stw	r16,0(sp)
  83d184:	040021b4 	movhi	r16,134
  83d188:	dc400115 	stw	r17,4(sp)
  83d18c:	842e0c04 	addi	r16,r16,-18384
  83d190:	2023883a 	mov	r17,r4
  83d194:	2809883a 	mov	r4,r5
  83d198:	dfc00215 	stw	ra,8(sp)
  83d19c:	80000015 	stw	zero,0(r16)
  83d1a0:	08499a00 	call	8499a0 <isatty>
  83d1a4:	00ffffc4 	movi	r3,-1
  83d1a8:	10c00526 	beq	r2,r3,83d1c0 <_isatty_r+0x44>
  83d1ac:	dfc00217 	ldw	ra,8(sp)
  83d1b0:	dc400117 	ldw	r17,4(sp)
  83d1b4:	dc000017 	ldw	r16,0(sp)
  83d1b8:	dec00304 	addi	sp,sp,12
  83d1bc:	f800283a 	ret
  83d1c0:	80c00017 	ldw	r3,0(r16)
  83d1c4:	183ff926 	beq	r3,zero,83d1ac <__alt_mem_epcs_flash_controller_0+0xff8341ac>
  83d1c8:	88c00015 	stw	r3,0(r17)
  83d1cc:	003ff706 	br	83d1ac <__alt_mem_epcs_flash_controller_0+0xff8341ac>

0083d1d0 <iswspace>:
  83d1d0:	00803fc4 	movi	r2,255
  83d1d4:	11000836 	bltu	r2,r4,83d1f8 <iswspace+0x28>
  83d1d8:	008021b4 	movhi	r2,134
  83d1dc:	10adb904 	addi	r2,r2,-18716
  83d1e0:	10800017 	ldw	r2,0(r2)
  83d1e4:	1109883a 	add	r4,r2,r4
  83d1e8:	20800043 	ldbu	r2,1(r4)
  83d1ec:	1080020c 	andi	r2,r2,8
  83d1f0:	10803fcc 	andi	r2,r2,255
  83d1f4:	f800283a 	ret
  83d1f8:	0005883a 	mov	r2,zero
  83d1fc:	f800283a 	ret

0083d200 <_setlocale_r>:
  83d200:	30001b26 	beq	r6,zero,83d270 <_setlocale_r+0x70>
  83d204:	014021b4 	movhi	r5,134
  83d208:	defffe04 	addi	sp,sp,-8
  83d20c:	29650104 	addi	r5,r5,-27644
  83d210:	3009883a 	mov	r4,r6
  83d214:	dc000015 	stw	r16,0(sp)
  83d218:	dfc00115 	stw	ra,4(sp)
  83d21c:	3021883a 	mov	r16,r6
  83d220:	083ef680 	call	83ef68 <strcmp>
  83d224:	1000061e 	bne	r2,zero,83d240 <_setlocale_r+0x40>
  83d228:	008021b4 	movhi	r2,134
  83d22c:	10a42f04 	addi	r2,r2,-28484
  83d230:	dfc00117 	ldw	ra,4(sp)
  83d234:	dc000017 	ldw	r16,0(sp)
  83d238:	dec00204 	addi	sp,sp,8
  83d23c:	f800283a 	ret
  83d240:	014021b4 	movhi	r5,134
  83d244:	29642f04 	addi	r5,r5,-28484
  83d248:	8009883a 	mov	r4,r16
  83d24c:	083ef680 	call	83ef68 <strcmp>
  83d250:	103ff526 	beq	r2,zero,83d228 <__alt_mem_epcs_flash_controller_0+0xff834228>
  83d254:	014021b4 	movhi	r5,134
  83d258:	29643904 	addi	r5,r5,-28444
  83d25c:	8009883a 	mov	r4,r16
  83d260:	083ef680 	call	83ef68 <strcmp>
  83d264:	103ff026 	beq	r2,zero,83d228 <__alt_mem_epcs_flash_controller_0+0xff834228>
  83d268:	0005883a 	mov	r2,zero
  83d26c:	003ff006 	br	83d230 <__alt_mem_epcs_flash_controller_0+0xff834230>
  83d270:	008021b4 	movhi	r2,134
  83d274:	10a42f04 	addi	r2,r2,-28484
  83d278:	f800283a 	ret

0083d27c <__locale_charset>:
  83d27c:	008021b4 	movhi	r2,134
  83d280:	10a83a04 	addi	r2,r2,-24344
  83d284:	f800283a 	ret

0083d288 <__locale_mb_cur_max>:
  83d288:	008021b4 	movhi	r2,134
  83d28c:	10adbb04 	addi	r2,r2,-18708
  83d290:	10800017 	ldw	r2,0(r2)
  83d294:	f800283a 	ret

0083d298 <__locale_msgcharset>:
  83d298:	008021b4 	movhi	r2,134
  83d29c:	10a83204 	addi	r2,r2,-24376
  83d2a0:	f800283a 	ret

0083d2a4 <__locale_cjk_lang>:
  83d2a4:	0005883a 	mov	r2,zero
  83d2a8:	f800283a 	ret

0083d2ac <_localeconv_r>:
  83d2ac:	008021b4 	movhi	r2,134
  83d2b0:	10a84204 	addi	r2,r2,-24312
  83d2b4:	f800283a 	ret

0083d2b8 <setlocale>:
  83d2b8:	008021b4 	movhi	r2,134
  83d2bc:	10adb604 	addi	r2,r2,-18728
  83d2c0:	280d883a 	mov	r6,r5
  83d2c4:	200b883a 	mov	r5,r4
  83d2c8:	11000017 	ldw	r4,0(r2)
  83d2cc:	083d2001 	jmpi	83d200 <_setlocale_r>

0083d2d0 <localeconv>:
  83d2d0:	008021b4 	movhi	r2,134
  83d2d4:	10a84204 	addi	r2,r2,-24312
  83d2d8:	f800283a 	ret

0083d2dc <_lseek_r>:
  83d2dc:	defffd04 	addi	sp,sp,-12
  83d2e0:	2805883a 	mov	r2,r5
  83d2e4:	dc000015 	stw	r16,0(sp)
  83d2e8:	040021b4 	movhi	r16,134
  83d2ec:	dc400115 	stw	r17,4(sp)
  83d2f0:	300b883a 	mov	r5,r6
  83d2f4:	842e0c04 	addi	r16,r16,-18384
  83d2f8:	2023883a 	mov	r17,r4
  83d2fc:	380d883a 	mov	r6,r7
  83d300:	1009883a 	mov	r4,r2
  83d304:	dfc00215 	stw	ra,8(sp)
  83d308:	80000015 	stw	zero,0(r16)
  83d30c:	0849a880 	call	849a88 <lseek>
  83d310:	00ffffc4 	movi	r3,-1
  83d314:	10c00526 	beq	r2,r3,83d32c <_lseek_r+0x50>
  83d318:	dfc00217 	ldw	ra,8(sp)
  83d31c:	dc400117 	ldw	r17,4(sp)
  83d320:	dc000017 	ldw	r16,0(sp)
  83d324:	dec00304 	addi	sp,sp,12
  83d328:	f800283a 	ret
  83d32c:	80c00017 	ldw	r3,0(r16)
  83d330:	183ff926 	beq	r3,zero,83d318 <__alt_mem_epcs_flash_controller_0+0xff834318>
  83d334:	88c00015 	stw	r3,0(r17)
  83d338:	003ff706 	br	83d318 <__alt_mem_epcs_flash_controller_0+0xff834318>

0083d33c <_mbrtowc_r>:
  83d33c:	defff704 	addi	sp,sp,-36
  83d340:	008021b4 	movhi	r2,134
  83d344:	dc800715 	stw	r18,28(sp)
  83d348:	dc400615 	stw	r17,24(sp)
  83d34c:	dc000515 	stw	r16,20(sp)
  83d350:	10adbc04 	addi	r2,r2,-18704
  83d354:	dfc00815 	stw	ra,32(sp)
  83d358:	2021883a 	mov	r16,r4
  83d35c:	dc400917 	ldw	r17,36(sp)
  83d360:	14800017 	ldw	r18,0(r2)
  83d364:	30001626 	beq	r6,zero,83d3c0 <_mbrtowc_r+0x84>
  83d368:	d9400215 	stw	r5,8(sp)
  83d36c:	d9800315 	stw	r6,12(sp)
  83d370:	d9c00415 	stw	r7,16(sp)
  83d374:	083d27c0 	call	83d27c <__locale_charset>
  83d378:	d9c00417 	ldw	r7,16(sp)
  83d37c:	d9800317 	ldw	r6,12(sp)
  83d380:	d9400217 	ldw	r5,8(sp)
  83d384:	d8800015 	stw	r2,0(sp)
  83d388:	dc400115 	stw	r17,4(sp)
  83d38c:	8009883a 	mov	r4,r16
  83d390:	903ee83a 	callr	r18
  83d394:	00ffffc4 	movi	r3,-1
  83d398:	10c0031e 	bne	r2,r3,83d3a8 <_mbrtowc_r+0x6c>
  83d39c:	88000015 	stw	zero,0(r17)
  83d3a0:	00c02284 	movi	r3,138
  83d3a4:	80c00015 	stw	r3,0(r16)
  83d3a8:	dfc00817 	ldw	ra,32(sp)
  83d3ac:	dc800717 	ldw	r18,28(sp)
  83d3b0:	dc400617 	ldw	r17,24(sp)
  83d3b4:	dc000517 	ldw	r16,20(sp)
  83d3b8:	dec00904 	addi	sp,sp,36
  83d3bc:	f800283a 	ret
  83d3c0:	083d27c0 	call	83d27c <__locale_charset>
  83d3c4:	018021b4 	movhi	r6,134
  83d3c8:	31a43904 	addi	r6,r6,-28444
  83d3cc:	dc400115 	stw	r17,4(sp)
  83d3d0:	d8800015 	stw	r2,0(sp)
  83d3d4:	01c00044 	movi	r7,1
  83d3d8:	000b883a 	mov	r5,zero
  83d3dc:	8009883a 	mov	r4,r16
  83d3e0:	903ee83a 	callr	r18
  83d3e4:	003feb06 	br	83d394 <__alt_mem_epcs_flash_controller_0+0xff834394>

0083d3e8 <mbrtowc>:
  83d3e8:	defff704 	addi	sp,sp,-36
  83d3ec:	008021b4 	movhi	r2,134
  83d3f0:	dc800415 	stw	r18,16(sp)
  83d3f4:	dc400315 	stw	r17,12(sp)
  83d3f8:	10adb604 	addi	r2,r2,-18728
  83d3fc:	dfc00815 	stw	ra,32(sp)
  83d400:	dd400715 	stw	r21,28(sp)
  83d404:	dd000615 	stw	r20,24(sp)
  83d408:	dcc00515 	stw	r19,20(sp)
  83d40c:	dc000215 	stw	r16,8(sp)
  83d410:	3825883a 	mov	r18,r7
  83d414:	14400017 	ldw	r17,0(r2)
  83d418:	28001c26 	beq	r5,zero,83d48c <mbrtowc+0xa4>
  83d41c:	008021b4 	movhi	r2,134
  83d420:	10adbc04 	addi	r2,r2,-18704
  83d424:	15400017 	ldw	r21,0(r2)
  83d428:	2821883a 	mov	r16,r5
  83d42c:	2027883a 	mov	r19,r4
  83d430:	3029883a 	mov	r20,r6
  83d434:	083d27c0 	call	83d27c <__locale_charset>
  83d438:	d8800015 	stw	r2,0(sp)
  83d43c:	dc800115 	stw	r18,4(sp)
  83d440:	a00f883a 	mov	r7,r20
  83d444:	800d883a 	mov	r6,r16
  83d448:	980b883a 	mov	r5,r19
  83d44c:	8809883a 	mov	r4,r17
  83d450:	a83ee83a 	callr	r21
  83d454:	00ffffc4 	movi	r3,-1
  83d458:	10c0031e 	bne	r2,r3,83d468 <mbrtowc+0x80>
  83d45c:	90000015 	stw	zero,0(r18)
  83d460:	00c02284 	movi	r3,138
  83d464:	88c00015 	stw	r3,0(r17)
  83d468:	dfc00817 	ldw	ra,32(sp)
  83d46c:	dd400717 	ldw	r21,28(sp)
  83d470:	dd000617 	ldw	r20,24(sp)
  83d474:	dcc00517 	ldw	r19,20(sp)
  83d478:	dc800417 	ldw	r18,16(sp)
  83d47c:	dc400317 	ldw	r17,12(sp)
  83d480:	dc000217 	ldw	r16,8(sp)
  83d484:	dec00904 	addi	sp,sp,36
  83d488:	f800283a 	ret
  83d48c:	008021b4 	movhi	r2,134
  83d490:	10adbc04 	addi	r2,r2,-18704
  83d494:	14000017 	ldw	r16,0(r2)
  83d498:	083d27c0 	call	83d27c <__locale_charset>
  83d49c:	018021b4 	movhi	r6,134
  83d4a0:	31a43904 	addi	r6,r6,-28444
  83d4a4:	dc800115 	stw	r18,4(sp)
  83d4a8:	d8800015 	stw	r2,0(sp)
  83d4ac:	01c00044 	movi	r7,1
  83d4b0:	000b883a 	mov	r5,zero
  83d4b4:	8809883a 	mov	r4,r17
  83d4b8:	803ee83a 	callr	r16
  83d4bc:	003fe506 	br	83d454 <__alt_mem_epcs_flash_controller_0+0xff834454>

0083d4c0 <__ascii_mbtowc>:
  83d4c0:	deffff04 	addi	sp,sp,-4
  83d4c4:	28000826 	beq	r5,zero,83d4e8 <__ascii_mbtowc+0x28>
  83d4c8:	30000926 	beq	r6,zero,83d4f0 <__ascii_mbtowc+0x30>
  83d4cc:	38000b26 	beq	r7,zero,83d4fc <__ascii_mbtowc+0x3c>
  83d4d0:	30800003 	ldbu	r2,0(r6)
  83d4d4:	28800015 	stw	r2,0(r5)
  83d4d8:	30800003 	ldbu	r2,0(r6)
  83d4dc:	1004c03a 	cmpne	r2,r2,zero
  83d4e0:	dec00104 	addi	sp,sp,4
  83d4e4:	f800283a 	ret
  83d4e8:	d80b883a 	mov	r5,sp
  83d4ec:	303ff71e 	bne	r6,zero,83d4cc <__alt_mem_epcs_flash_controller_0+0xff8344cc>
  83d4f0:	0005883a 	mov	r2,zero
  83d4f4:	dec00104 	addi	sp,sp,4
  83d4f8:	f800283a 	ret
  83d4fc:	00bfff84 	movi	r2,-2
  83d500:	003ff706 	br	83d4e0 <__alt_mem_epcs_flash_controller_0+0xff8344e0>

0083d504 <_mbtowc_r>:
  83d504:	008021b4 	movhi	r2,134
  83d508:	defff804 	addi	sp,sp,-32
  83d50c:	10adbc04 	addi	r2,r2,-18704
  83d510:	dfc00715 	stw	ra,28(sp)
  83d514:	dc000615 	stw	r16,24(sp)
  83d518:	14000017 	ldw	r16,0(r2)
  83d51c:	d9000215 	stw	r4,8(sp)
  83d520:	d9400315 	stw	r5,12(sp)
  83d524:	d9800415 	stw	r6,16(sp)
  83d528:	d9c00515 	stw	r7,20(sp)
  83d52c:	083d27c0 	call	83d27c <__locale_charset>
  83d530:	d8800015 	stw	r2,0(sp)
  83d534:	d8800817 	ldw	r2,32(sp)
  83d538:	d9c00517 	ldw	r7,20(sp)
  83d53c:	d9800417 	ldw	r6,16(sp)
  83d540:	d9400317 	ldw	r5,12(sp)
  83d544:	d9000217 	ldw	r4,8(sp)
  83d548:	d8800115 	stw	r2,4(sp)
  83d54c:	803ee83a 	callr	r16
  83d550:	dfc00717 	ldw	ra,28(sp)
  83d554:	dc000617 	ldw	r16,24(sp)
  83d558:	dec00804 	addi	sp,sp,32
  83d55c:	f800283a 	ret

0083d560 <memchr>:
  83d560:	208000cc 	andi	r2,r4,3
  83d564:	280f883a 	mov	r7,r5
  83d568:	10003426 	beq	r2,zero,83d63c <memchr+0xdc>
  83d56c:	30bfffc4 	addi	r2,r6,-1
  83d570:	30001a26 	beq	r6,zero,83d5dc <memchr+0x7c>
  83d574:	20c00003 	ldbu	r3,0(r4)
  83d578:	29803fcc 	andi	r6,r5,255
  83d57c:	30c0051e 	bne	r6,r3,83d594 <memchr+0x34>
  83d580:	00001806 	br	83d5e4 <memchr+0x84>
  83d584:	10001526 	beq	r2,zero,83d5dc <memchr+0x7c>
  83d588:	20c00003 	ldbu	r3,0(r4)
  83d58c:	10bfffc4 	addi	r2,r2,-1
  83d590:	30c01426 	beq	r6,r3,83d5e4 <memchr+0x84>
  83d594:	21000044 	addi	r4,r4,1
  83d598:	20c000cc 	andi	r3,r4,3
  83d59c:	183ff91e 	bne	r3,zero,83d584 <__alt_mem_epcs_flash_controller_0+0xff834584>
  83d5a0:	020000c4 	movi	r8,3
  83d5a4:	40801136 	bltu	r8,r2,83d5ec <memchr+0x8c>
  83d5a8:	10000c26 	beq	r2,zero,83d5dc <memchr+0x7c>
  83d5ac:	20c00003 	ldbu	r3,0(r4)
  83d5b0:	29403fcc 	andi	r5,r5,255
  83d5b4:	28c00b26 	beq	r5,r3,83d5e4 <memchr+0x84>
  83d5b8:	20c00044 	addi	r3,r4,1
  83d5bc:	39803fcc 	andi	r6,r7,255
  83d5c0:	2089883a 	add	r4,r4,r2
  83d5c4:	00000306 	br	83d5d4 <memchr+0x74>
  83d5c8:	18c00044 	addi	r3,r3,1
  83d5cc:	197fffc3 	ldbu	r5,-1(r3)
  83d5d0:	31400526 	beq	r6,r5,83d5e8 <memchr+0x88>
  83d5d4:	1805883a 	mov	r2,r3
  83d5d8:	20fffb1e 	bne	r4,r3,83d5c8 <__alt_mem_epcs_flash_controller_0+0xff8345c8>
  83d5dc:	0005883a 	mov	r2,zero
  83d5e0:	f800283a 	ret
  83d5e4:	2005883a 	mov	r2,r4
  83d5e8:	f800283a 	ret
  83d5ec:	28c03fcc 	andi	r3,r5,255
  83d5f0:	1812923a 	slli	r9,r3,8
  83d5f4:	02ffbff4 	movhi	r11,65279
  83d5f8:	02a02074 	movhi	r10,32897
  83d5fc:	48d2b03a 	or	r9,r9,r3
  83d600:	4806943a 	slli	r3,r9,16
  83d604:	5affbfc4 	addi	r11,r11,-257
  83d608:	52a02004 	addi	r10,r10,-32640
  83d60c:	48d2b03a 	or	r9,r9,r3
  83d610:	20c00017 	ldw	r3,0(r4)
  83d614:	48c6f03a 	xor	r3,r9,r3
  83d618:	1acd883a 	add	r6,r3,r11
  83d61c:	00c6303a 	nor	r3,zero,r3
  83d620:	30c6703a 	and	r3,r6,r3
  83d624:	1a86703a 	and	r3,r3,r10
  83d628:	183fe01e 	bne	r3,zero,83d5ac <__alt_mem_epcs_flash_controller_0+0xff8345ac>
  83d62c:	10bfff04 	addi	r2,r2,-4
  83d630:	21000104 	addi	r4,r4,4
  83d634:	40bff636 	bltu	r8,r2,83d610 <__alt_mem_epcs_flash_controller_0+0xff834610>
  83d638:	003fdb06 	br	83d5a8 <__alt_mem_epcs_flash_controller_0+0xff8345a8>
  83d63c:	3005883a 	mov	r2,r6
  83d640:	003fd706 	br	83d5a0 <__alt_mem_epcs_flash_controller_0+0xff8345a0>

0083d644 <memmove>:
  83d644:	2005883a 	mov	r2,r4
  83d648:	29000b2e 	bgeu	r5,r4,83d678 <memmove+0x34>
  83d64c:	298f883a 	add	r7,r5,r6
  83d650:	21c0092e 	bgeu	r4,r7,83d678 <memmove+0x34>
  83d654:	2187883a 	add	r3,r4,r6
  83d658:	198bc83a 	sub	r5,r3,r6
  83d65c:	30004826 	beq	r6,zero,83d780 <memmove+0x13c>
  83d660:	39ffffc4 	addi	r7,r7,-1
  83d664:	39000003 	ldbu	r4,0(r7)
  83d668:	18ffffc4 	addi	r3,r3,-1
  83d66c:	19000005 	stb	r4,0(r3)
  83d670:	28fffb1e 	bne	r5,r3,83d660 <__alt_mem_epcs_flash_controller_0+0xff834660>
  83d674:	f800283a 	ret
  83d678:	00c003c4 	movi	r3,15
  83d67c:	1980412e 	bgeu	r3,r6,83d784 <memmove+0x140>
  83d680:	2886b03a 	or	r3,r5,r2
  83d684:	18c000cc 	andi	r3,r3,3
  83d688:	1800401e 	bne	r3,zero,83d78c <memmove+0x148>
  83d68c:	33fffc04 	addi	r15,r6,-16
  83d690:	781ed13a 	srli	r15,r15,4
  83d694:	28c00104 	addi	r3,r5,4
  83d698:	13400104 	addi	r13,r2,4
  83d69c:	781c913a 	slli	r14,r15,4
  83d6a0:	2b000204 	addi	r12,r5,8
  83d6a4:	12c00204 	addi	r11,r2,8
  83d6a8:	73800504 	addi	r14,r14,20
  83d6ac:	2a800304 	addi	r10,r5,12
  83d6b0:	12400304 	addi	r9,r2,12
  83d6b4:	2b9d883a 	add	r14,r5,r14
  83d6b8:	2811883a 	mov	r8,r5
  83d6bc:	100f883a 	mov	r7,r2
  83d6c0:	41000017 	ldw	r4,0(r8)
  83d6c4:	39c00404 	addi	r7,r7,16
  83d6c8:	18c00404 	addi	r3,r3,16
  83d6cc:	393ffc15 	stw	r4,-16(r7)
  83d6d0:	193ffc17 	ldw	r4,-16(r3)
  83d6d4:	6b400404 	addi	r13,r13,16
  83d6d8:	5ac00404 	addi	r11,r11,16
  83d6dc:	693ffc15 	stw	r4,-16(r13)
  83d6e0:	61000017 	ldw	r4,0(r12)
  83d6e4:	4a400404 	addi	r9,r9,16
  83d6e8:	42000404 	addi	r8,r8,16
  83d6ec:	593ffc15 	stw	r4,-16(r11)
  83d6f0:	51000017 	ldw	r4,0(r10)
  83d6f4:	63000404 	addi	r12,r12,16
  83d6f8:	52800404 	addi	r10,r10,16
  83d6fc:	493ffc15 	stw	r4,-16(r9)
  83d700:	1bbfef1e 	bne	r3,r14,83d6c0 <__alt_mem_epcs_flash_controller_0+0xff8346c0>
  83d704:	79000044 	addi	r4,r15,1
  83d708:	2008913a 	slli	r4,r4,4
  83d70c:	328003cc 	andi	r10,r6,15
  83d710:	02c000c4 	movi	r11,3
  83d714:	1107883a 	add	r3,r2,r4
  83d718:	290b883a 	add	r5,r5,r4
  83d71c:	5a801e2e 	bgeu	r11,r10,83d798 <memmove+0x154>
  83d720:	1813883a 	mov	r9,r3
  83d724:	2811883a 	mov	r8,r5
  83d728:	500f883a 	mov	r7,r10
  83d72c:	41000017 	ldw	r4,0(r8)
  83d730:	4a400104 	addi	r9,r9,4
  83d734:	39ffff04 	addi	r7,r7,-4
  83d738:	493fff15 	stw	r4,-4(r9)
  83d73c:	42000104 	addi	r8,r8,4
  83d740:	59fffa36 	bltu	r11,r7,83d72c <__alt_mem_epcs_flash_controller_0+0xff83472c>
  83d744:	513fff04 	addi	r4,r10,-4
  83d748:	2008d0ba 	srli	r4,r4,2
  83d74c:	318000cc 	andi	r6,r6,3
  83d750:	21000044 	addi	r4,r4,1
  83d754:	2109883a 	add	r4,r4,r4
  83d758:	2109883a 	add	r4,r4,r4
  83d75c:	1907883a 	add	r3,r3,r4
  83d760:	290b883a 	add	r5,r5,r4
  83d764:	30000b26 	beq	r6,zero,83d794 <memmove+0x150>
  83d768:	198d883a 	add	r6,r3,r6
  83d76c:	29c00003 	ldbu	r7,0(r5)
  83d770:	18c00044 	addi	r3,r3,1
  83d774:	29400044 	addi	r5,r5,1
  83d778:	19ffffc5 	stb	r7,-1(r3)
  83d77c:	19bffb1e 	bne	r3,r6,83d76c <__alt_mem_epcs_flash_controller_0+0xff83476c>
  83d780:	f800283a 	ret
  83d784:	1007883a 	mov	r3,r2
  83d788:	003ff606 	br	83d764 <__alt_mem_epcs_flash_controller_0+0xff834764>
  83d78c:	1007883a 	mov	r3,r2
  83d790:	003ff506 	br	83d768 <__alt_mem_epcs_flash_controller_0+0xff834768>
  83d794:	f800283a 	ret
  83d798:	500d883a 	mov	r6,r10
  83d79c:	003ff106 	br	83d764 <__alt_mem_epcs_flash_controller_0+0xff834764>

0083d7a0 <_Balloc>:
  83d7a0:	20801317 	ldw	r2,76(r4)
  83d7a4:	defffc04 	addi	sp,sp,-16
  83d7a8:	dc400115 	stw	r17,4(sp)
  83d7ac:	dc000015 	stw	r16,0(sp)
  83d7b0:	dfc00315 	stw	ra,12(sp)
  83d7b4:	dc800215 	stw	r18,8(sp)
  83d7b8:	2023883a 	mov	r17,r4
  83d7bc:	2821883a 	mov	r16,r5
  83d7c0:	10000f26 	beq	r2,zero,83d800 <_Balloc+0x60>
  83d7c4:	8407883a 	add	r3,r16,r16
  83d7c8:	18c7883a 	add	r3,r3,r3
  83d7cc:	10c7883a 	add	r3,r2,r3
  83d7d0:	18800017 	ldw	r2,0(r3)
  83d7d4:	10001126 	beq	r2,zero,83d81c <_Balloc+0x7c>
  83d7d8:	11000017 	ldw	r4,0(r2)
  83d7dc:	19000015 	stw	r4,0(r3)
  83d7e0:	10000415 	stw	zero,16(r2)
  83d7e4:	10000315 	stw	zero,12(r2)
  83d7e8:	dfc00317 	ldw	ra,12(sp)
  83d7ec:	dc800217 	ldw	r18,8(sp)
  83d7f0:	dc400117 	ldw	r17,4(sp)
  83d7f4:	dc000017 	ldw	r16,0(sp)
  83d7f8:	dec00404 	addi	sp,sp,16
  83d7fc:	f800283a 	ret
  83d800:	01800844 	movi	r6,33
  83d804:	01400104 	movi	r5,4
  83d808:	084557c0 	call	84557c <_calloc_r>
  83d80c:	88801315 	stw	r2,76(r17)
  83d810:	103fec1e 	bne	r2,zero,83d7c4 <__alt_mem_epcs_flash_controller_0+0xff8347c4>
  83d814:	0005883a 	mov	r2,zero
  83d818:	003ff306 	br	83d7e8 <__alt_mem_epcs_flash_controller_0+0xff8347e8>
  83d81c:	01400044 	movi	r5,1
  83d820:	2c24983a 	sll	r18,r5,r16
  83d824:	8809883a 	mov	r4,r17
  83d828:	91800144 	addi	r6,r18,5
  83d82c:	318d883a 	add	r6,r6,r6
  83d830:	318d883a 	add	r6,r6,r6
  83d834:	084557c0 	call	84557c <_calloc_r>
  83d838:	103ff626 	beq	r2,zero,83d814 <__alt_mem_epcs_flash_controller_0+0xff834814>
  83d83c:	14000115 	stw	r16,4(r2)
  83d840:	14800215 	stw	r18,8(r2)
  83d844:	003fe606 	br	83d7e0 <__alt_mem_epcs_flash_controller_0+0xff8347e0>

0083d848 <_Bfree>:
  83d848:	28000826 	beq	r5,zero,83d86c <_Bfree+0x24>
  83d84c:	28c00117 	ldw	r3,4(r5)
  83d850:	20801317 	ldw	r2,76(r4)
  83d854:	18c7883a 	add	r3,r3,r3
  83d858:	18c7883a 	add	r3,r3,r3
  83d85c:	10c5883a 	add	r2,r2,r3
  83d860:	10c00017 	ldw	r3,0(r2)
  83d864:	28c00015 	stw	r3,0(r5)
  83d868:	11400015 	stw	r5,0(r2)
  83d86c:	f800283a 	ret

0083d870 <__multadd>:
  83d870:	defff704 	addi	sp,sp,-36
  83d874:	dc800215 	stw	r18,8(sp)
  83d878:	2c800417 	ldw	r18,16(r5)
  83d87c:	dd800615 	stw	r22,24(sp)
  83d880:	dd400515 	stw	r21,20(sp)
  83d884:	dd000415 	stw	r20,16(sp)
  83d888:	dcc00315 	stw	r19,12(sp)
  83d88c:	dc400115 	stw	r17,4(sp)
  83d890:	dc000015 	stw	r16,0(sp)
  83d894:	dfc00815 	stw	ra,32(sp)
  83d898:	ddc00715 	stw	r23,28(sp)
  83d89c:	2827883a 	mov	r19,r5
  83d8a0:	2029883a 	mov	r20,r4
  83d8a4:	3023883a 	mov	r17,r6
  83d8a8:	3821883a 	mov	r16,r7
  83d8ac:	2d400504 	addi	r21,r5,20
  83d8b0:	002d883a 	mov	r22,zero
  83d8b4:	adc00017 	ldw	r23,0(r21)
  83d8b8:	880b883a 	mov	r5,r17
  83d8bc:	ad400104 	addi	r21,r21,4
  83d8c0:	b93fffcc 	andi	r4,r23,65535
  83d8c4:	08305040 	call	830504 <__mulsi3>
  83d8c8:	b808d43a 	srli	r4,r23,16
  83d8cc:	880b883a 	mov	r5,r17
  83d8d0:	1421883a 	add	r16,r2,r16
  83d8d4:	08305040 	call	830504 <__mulsi3>
  83d8d8:	800ed43a 	srli	r7,r16,16
  83d8dc:	80ffffcc 	andi	r3,r16,65535
  83d8e0:	b5800044 	addi	r22,r22,1
  83d8e4:	11c5883a 	add	r2,r2,r7
  83d8e8:	100e943a 	slli	r7,r2,16
  83d8ec:	1020d43a 	srli	r16,r2,16
  83d8f0:	38c7883a 	add	r3,r7,r3
  83d8f4:	a8ffff15 	stw	r3,-4(r21)
  83d8f8:	b4bfee16 	blt	r22,r18,83d8b4 <__alt_mem_epcs_flash_controller_0+0xff8348b4>
  83d8fc:	80000926 	beq	r16,zero,83d924 <__multadd+0xb4>
  83d900:	98800217 	ldw	r2,8(r19)
  83d904:	9080130e 	bge	r18,r2,83d954 <__multadd+0xe4>
  83d908:	90800144 	addi	r2,r18,5
  83d90c:	1085883a 	add	r2,r2,r2
  83d910:	1085883a 	add	r2,r2,r2
  83d914:	9885883a 	add	r2,r19,r2
  83d918:	14000015 	stw	r16,0(r2)
  83d91c:	94800044 	addi	r18,r18,1
  83d920:	9c800415 	stw	r18,16(r19)
  83d924:	9805883a 	mov	r2,r19
  83d928:	dfc00817 	ldw	ra,32(sp)
  83d92c:	ddc00717 	ldw	r23,28(sp)
  83d930:	dd800617 	ldw	r22,24(sp)
  83d934:	dd400517 	ldw	r21,20(sp)
  83d938:	dd000417 	ldw	r20,16(sp)
  83d93c:	dcc00317 	ldw	r19,12(sp)
  83d940:	dc800217 	ldw	r18,8(sp)
  83d944:	dc400117 	ldw	r17,4(sp)
  83d948:	dc000017 	ldw	r16,0(sp)
  83d94c:	dec00904 	addi	sp,sp,36
  83d950:	f800283a 	ret
  83d954:	99400117 	ldw	r5,4(r19)
  83d958:	a009883a 	mov	r4,r20
  83d95c:	29400044 	addi	r5,r5,1
  83d960:	083d7a00 	call	83d7a0 <_Balloc>
  83d964:	99800417 	ldw	r6,16(r19)
  83d968:	99400304 	addi	r5,r19,12
  83d96c:	11000304 	addi	r4,r2,12
  83d970:	31800084 	addi	r6,r6,2
  83d974:	318d883a 	add	r6,r6,r6
  83d978:	318d883a 	add	r6,r6,r6
  83d97c:	1023883a 	mov	r17,r2
  83d980:	08341500 	call	834150 <memcpy>
  83d984:	98000a26 	beq	r19,zero,83d9b0 <__multadd+0x140>
  83d988:	98c00117 	ldw	r3,4(r19)
  83d98c:	a0801317 	ldw	r2,76(r20)
  83d990:	18c7883a 	add	r3,r3,r3
  83d994:	18c7883a 	add	r3,r3,r3
  83d998:	10c5883a 	add	r2,r2,r3
  83d99c:	10c00017 	ldw	r3,0(r2)
  83d9a0:	98c00015 	stw	r3,0(r19)
  83d9a4:	14c00015 	stw	r19,0(r2)
  83d9a8:	8827883a 	mov	r19,r17
  83d9ac:	003fd606 	br	83d908 <__alt_mem_epcs_flash_controller_0+0xff834908>
  83d9b0:	8827883a 	mov	r19,r17
  83d9b4:	003fd406 	br	83d908 <__alt_mem_epcs_flash_controller_0+0xff834908>

0083d9b8 <__s2b>:
  83d9b8:	defff904 	addi	sp,sp,-28
  83d9bc:	dc400115 	stw	r17,4(sp)
  83d9c0:	dc000015 	stw	r16,0(sp)
  83d9c4:	2023883a 	mov	r17,r4
  83d9c8:	2821883a 	mov	r16,r5
  83d9cc:	39000204 	addi	r4,r7,8
  83d9d0:	01400244 	movi	r5,9
  83d9d4:	dcc00315 	stw	r19,12(sp)
  83d9d8:	dc800215 	stw	r18,8(sp)
  83d9dc:	dfc00615 	stw	ra,24(sp)
  83d9e0:	dd400515 	stw	r21,20(sp)
  83d9e4:	dd000415 	stw	r20,16(sp)
  83d9e8:	3825883a 	mov	r18,r7
  83d9ec:	3027883a 	mov	r19,r6
  83d9f0:	08303500 	call	830350 <__divsi3>
  83d9f4:	00c00044 	movi	r3,1
  83d9f8:	000b883a 	mov	r5,zero
  83d9fc:	1880030e 	bge	r3,r2,83da0c <__s2b+0x54>
  83da00:	18c7883a 	add	r3,r3,r3
  83da04:	29400044 	addi	r5,r5,1
  83da08:	18bffd16 	blt	r3,r2,83da00 <__alt_mem_epcs_flash_controller_0+0xff834a00>
  83da0c:	8809883a 	mov	r4,r17
  83da10:	083d7a00 	call	83d7a0 <_Balloc>
  83da14:	d8c00717 	ldw	r3,28(sp)
  83da18:	10c00515 	stw	r3,20(r2)
  83da1c:	00c00044 	movi	r3,1
  83da20:	10c00415 	stw	r3,16(r2)
  83da24:	00c00244 	movi	r3,9
  83da28:	1cc0210e 	bge	r3,r19,83dab0 <__s2b+0xf8>
  83da2c:	80eb883a 	add	r21,r16,r3
  83da30:	a829883a 	mov	r20,r21
  83da34:	84e1883a 	add	r16,r16,r19
  83da38:	a1c00007 	ldb	r7,0(r20)
  83da3c:	01800284 	movi	r6,10
  83da40:	a5000044 	addi	r20,r20,1
  83da44:	100b883a 	mov	r5,r2
  83da48:	39fff404 	addi	r7,r7,-48
  83da4c:	8809883a 	mov	r4,r17
  83da50:	083d8700 	call	83d870 <__multadd>
  83da54:	a43ff81e 	bne	r20,r16,83da38 <__alt_mem_epcs_flash_controller_0+0xff834a38>
  83da58:	ace1883a 	add	r16,r21,r19
  83da5c:	843ffe04 	addi	r16,r16,-8
  83da60:	9c800a0e 	bge	r19,r18,83da8c <__s2b+0xd4>
  83da64:	94e5c83a 	sub	r18,r18,r19
  83da68:	84a5883a 	add	r18,r16,r18
  83da6c:	81c00007 	ldb	r7,0(r16)
  83da70:	01800284 	movi	r6,10
  83da74:	84000044 	addi	r16,r16,1
  83da78:	100b883a 	mov	r5,r2
  83da7c:	39fff404 	addi	r7,r7,-48
  83da80:	8809883a 	mov	r4,r17
  83da84:	083d8700 	call	83d870 <__multadd>
  83da88:	84bff81e 	bne	r16,r18,83da6c <__alt_mem_epcs_flash_controller_0+0xff834a6c>
  83da8c:	dfc00617 	ldw	ra,24(sp)
  83da90:	dd400517 	ldw	r21,20(sp)
  83da94:	dd000417 	ldw	r20,16(sp)
  83da98:	dcc00317 	ldw	r19,12(sp)
  83da9c:	dc800217 	ldw	r18,8(sp)
  83daa0:	dc400117 	ldw	r17,4(sp)
  83daa4:	dc000017 	ldw	r16,0(sp)
  83daa8:	dec00704 	addi	sp,sp,28
  83daac:	f800283a 	ret
  83dab0:	84000284 	addi	r16,r16,10
  83dab4:	1827883a 	mov	r19,r3
  83dab8:	003fe906 	br	83da60 <__alt_mem_epcs_flash_controller_0+0xff834a60>

0083dabc <__hi0bits>:
  83dabc:	20bfffec 	andhi	r2,r4,65535
  83dac0:	1000141e 	bne	r2,zero,83db14 <__hi0bits+0x58>
  83dac4:	2008943a 	slli	r4,r4,16
  83dac8:	00800404 	movi	r2,16
  83dacc:	20ffc02c 	andhi	r3,r4,65280
  83dad0:	1800021e 	bne	r3,zero,83dadc <__hi0bits+0x20>
  83dad4:	2008923a 	slli	r4,r4,8
  83dad8:	10800204 	addi	r2,r2,8
  83dadc:	20fc002c 	andhi	r3,r4,61440
  83dae0:	1800021e 	bne	r3,zero,83daec <__hi0bits+0x30>
  83dae4:	2008913a 	slli	r4,r4,4
  83dae8:	10800104 	addi	r2,r2,4
  83daec:	20f0002c 	andhi	r3,r4,49152
  83daf0:	1800031e 	bne	r3,zero,83db00 <__hi0bits+0x44>
  83daf4:	2109883a 	add	r4,r4,r4
  83daf8:	10800084 	addi	r2,r2,2
  83dafc:	2109883a 	add	r4,r4,r4
  83db00:	20000316 	blt	r4,zero,83db10 <__hi0bits+0x54>
  83db04:	2110002c 	andhi	r4,r4,16384
  83db08:	2000041e 	bne	r4,zero,83db1c <__hi0bits+0x60>
  83db0c:	00800804 	movi	r2,32
  83db10:	f800283a 	ret
  83db14:	0005883a 	mov	r2,zero
  83db18:	003fec06 	br	83dacc <__alt_mem_epcs_flash_controller_0+0xff834acc>
  83db1c:	10800044 	addi	r2,r2,1
  83db20:	f800283a 	ret

0083db24 <__lo0bits>:
  83db24:	20c00017 	ldw	r3,0(r4)
  83db28:	188001cc 	andi	r2,r3,7
  83db2c:	10000826 	beq	r2,zero,83db50 <__lo0bits+0x2c>
  83db30:	1880004c 	andi	r2,r3,1
  83db34:	1000211e 	bne	r2,zero,83dbbc <__lo0bits+0x98>
  83db38:	1880008c 	andi	r2,r3,2
  83db3c:	1000211e 	bne	r2,zero,83dbc4 <__lo0bits+0xa0>
  83db40:	1806d0ba 	srli	r3,r3,2
  83db44:	00800084 	movi	r2,2
  83db48:	20c00015 	stw	r3,0(r4)
  83db4c:	f800283a 	ret
  83db50:	18bfffcc 	andi	r2,r3,65535
  83db54:	10001326 	beq	r2,zero,83dba4 <__lo0bits+0x80>
  83db58:	0005883a 	mov	r2,zero
  83db5c:	19403fcc 	andi	r5,r3,255
  83db60:	2800021e 	bne	r5,zero,83db6c <__lo0bits+0x48>
  83db64:	1806d23a 	srli	r3,r3,8
  83db68:	10800204 	addi	r2,r2,8
  83db6c:	194003cc 	andi	r5,r3,15
  83db70:	2800021e 	bne	r5,zero,83db7c <__lo0bits+0x58>
  83db74:	1806d13a 	srli	r3,r3,4
  83db78:	10800104 	addi	r2,r2,4
  83db7c:	194000cc 	andi	r5,r3,3
  83db80:	2800021e 	bne	r5,zero,83db8c <__lo0bits+0x68>
  83db84:	1806d0ba 	srli	r3,r3,2
  83db88:	10800084 	addi	r2,r2,2
  83db8c:	1940004c 	andi	r5,r3,1
  83db90:	2800081e 	bne	r5,zero,83dbb4 <__lo0bits+0x90>
  83db94:	1806d07a 	srli	r3,r3,1
  83db98:	1800051e 	bne	r3,zero,83dbb0 <__lo0bits+0x8c>
  83db9c:	00800804 	movi	r2,32
  83dba0:	f800283a 	ret
  83dba4:	1806d43a 	srli	r3,r3,16
  83dba8:	00800404 	movi	r2,16
  83dbac:	003feb06 	br	83db5c <__alt_mem_epcs_flash_controller_0+0xff834b5c>
  83dbb0:	10800044 	addi	r2,r2,1
  83dbb4:	20c00015 	stw	r3,0(r4)
  83dbb8:	f800283a 	ret
  83dbbc:	0005883a 	mov	r2,zero
  83dbc0:	f800283a 	ret
  83dbc4:	1806d07a 	srli	r3,r3,1
  83dbc8:	00800044 	movi	r2,1
  83dbcc:	20c00015 	stw	r3,0(r4)
  83dbd0:	f800283a 	ret

0083dbd4 <__i2b>:
  83dbd4:	defffd04 	addi	sp,sp,-12
  83dbd8:	dc000015 	stw	r16,0(sp)
  83dbdc:	04000044 	movi	r16,1
  83dbe0:	dc400115 	stw	r17,4(sp)
  83dbe4:	2823883a 	mov	r17,r5
  83dbe8:	800b883a 	mov	r5,r16
  83dbec:	dfc00215 	stw	ra,8(sp)
  83dbf0:	083d7a00 	call	83d7a0 <_Balloc>
  83dbf4:	14400515 	stw	r17,20(r2)
  83dbf8:	14000415 	stw	r16,16(r2)
  83dbfc:	dfc00217 	ldw	ra,8(sp)
  83dc00:	dc400117 	ldw	r17,4(sp)
  83dc04:	dc000017 	ldw	r16,0(sp)
  83dc08:	dec00304 	addi	sp,sp,12
  83dc0c:	f800283a 	ret

0083dc10 <__multiply>:
  83dc10:	deffef04 	addi	sp,sp,-68
  83dc14:	dc400815 	stw	r17,32(sp)
  83dc18:	dc000715 	stw	r16,28(sp)
  83dc1c:	34400417 	ldw	r17,16(r6)
  83dc20:	2c000417 	ldw	r16,16(r5)
  83dc24:	dd800d15 	stw	r22,52(sp)
  83dc28:	dc800915 	stw	r18,36(sp)
  83dc2c:	dfc01015 	stw	ra,64(sp)
  83dc30:	df000f15 	stw	fp,60(sp)
  83dc34:	ddc00e15 	stw	r23,56(sp)
  83dc38:	dd400c15 	stw	r21,48(sp)
  83dc3c:	dd000b15 	stw	r20,44(sp)
  83dc40:	dcc00a15 	stw	r19,40(sp)
  83dc44:	2825883a 	mov	r18,r5
  83dc48:	302d883a 	mov	r22,r6
  83dc4c:	8440050e 	bge	r16,r17,83dc64 <__multiply+0x54>
  83dc50:	8007883a 	mov	r3,r16
  83dc54:	3025883a 	mov	r18,r6
  83dc58:	8821883a 	mov	r16,r17
  83dc5c:	282d883a 	mov	r22,r5
  83dc60:	1823883a 	mov	r17,r3
  83dc64:	90800217 	ldw	r2,8(r18)
  83dc68:	8447883a 	add	r3,r16,r17
  83dc6c:	d8c00215 	stw	r3,8(sp)
  83dc70:	91400117 	ldw	r5,4(r18)
  83dc74:	10c0010e 	bge	r2,r3,83dc7c <__multiply+0x6c>
  83dc78:	29400044 	addi	r5,r5,1
  83dc7c:	083d7a00 	call	83d7a0 <_Balloc>
  83dc80:	d8c00217 	ldw	r3,8(sp)
  83dc84:	d8800615 	stw	r2,24(sp)
  83dc88:	18eb883a 	add	r21,r3,r3
  83dc8c:	ad6b883a 	add	r21,r21,r21
  83dc90:	10c00504 	addi	r3,r2,20
  83dc94:	1d6b883a 	add	r21,r3,r21
  83dc98:	d8c00115 	stw	r3,4(sp)
  83dc9c:	dd400315 	stw	r21,12(sp)
  83dca0:	1805883a 	mov	r2,r3
  83dca4:	1d40042e 	bgeu	r3,r21,83dcb8 <__multiply+0xa8>
  83dca8:	d8c00317 	ldw	r3,12(sp)
  83dcac:	10000015 	stw	zero,0(r2)
  83dcb0:	10800104 	addi	r2,r2,4
  83dcb4:	10fffc36 	bltu	r2,r3,83dca8 <__alt_mem_epcs_flash_controller_0+0xff834ca8>
  83dcb8:	8c63883a 	add	r17,r17,r17
  83dcbc:	b5800504 	addi	r22,r22,20
  83dcc0:	8c63883a 	add	r17,r17,r17
  83dcc4:	94800504 	addi	r18,r18,20
  83dcc8:	8421883a 	add	r16,r16,r16
  83dccc:	b463883a 	add	r17,r22,r17
  83dcd0:	8421883a 	add	r16,r16,r16
  83dcd4:	dd800015 	stw	r22,0(sp)
  83dcd8:	dc800415 	stw	r18,16(sp)
  83dcdc:	dc400515 	stw	r17,20(sp)
  83dce0:	9429883a 	add	r20,r18,r16
  83dce4:	b4404f2e 	bgeu	r22,r17,83de24 <__multiply+0x214>
  83dce8:	d8c00017 	ldw	r3,0(sp)
  83dcec:	1c800017 	ldw	r18,0(r3)
  83dcf0:	947fffcc 	andi	r17,r18,65535
  83dcf4:	88001e26 	beq	r17,zero,83dd70 <__multiply+0x160>
  83dcf8:	dd800117 	ldw	r22,4(sp)
  83dcfc:	dd400417 	ldw	r21,16(sp)
  83dd00:	0027883a 	mov	r19,zero
  83dd04:	ac800017 	ldw	r18,0(r21)
  83dd08:	b4000017 	ldw	r16,0(r22)
  83dd0c:	880b883a 	mov	r5,r17
  83dd10:	913fffcc 	andi	r4,r18,65535
  83dd14:	08305040 	call	830504 <__mulsi3>
  83dd18:	9008d43a 	srli	r4,r18,16
  83dd1c:	84bfffcc 	andi	r18,r16,65535
  83dd20:	1485883a 	add	r2,r2,r18
  83dd24:	14e5883a 	add	r18,r2,r19
  83dd28:	8020d43a 	srli	r16,r16,16
  83dd2c:	9026d43a 	srli	r19,r18,16
  83dd30:	880b883a 	mov	r5,r17
  83dd34:	08305040 	call	830504 <__mulsi3>
  83dd38:	1405883a 	add	r2,r2,r16
  83dd3c:	14e1883a 	add	r16,r2,r19
  83dd40:	90ffffcc 	andi	r3,r18,65535
  83dd44:	8024943a 	slli	r18,r16,16
  83dd48:	ad400104 	addi	r21,r21,4
  83dd4c:	b005883a 	mov	r2,r22
  83dd50:	90c6b03a 	or	r3,r18,r3
  83dd54:	b0c00015 	stw	r3,0(r22)
  83dd58:	8026d43a 	srli	r19,r16,16
  83dd5c:	b5800104 	addi	r22,r22,4
  83dd60:	ad3fe836 	bltu	r21,r20,83dd04 <__alt_mem_epcs_flash_controller_0+0xff834d04>
  83dd64:	d8c00017 	ldw	r3,0(sp)
  83dd68:	14c00115 	stw	r19,4(r2)
  83dd6c:	1c800017 	ldw	r18,0(r3)
  83dd70:	9024d43a 	srli	r18,r18,16
  83dd74:	90002226 	beq	r18,zero,83de00 <__multiply+0x1f0>
  83dd78:	d8c00117 	ldw	r3,4(sp)
  83dd7c:	dd800417 	ldw	r22,16(sp)
  83dd80:	002f883a 	mov	r23,zero
  83dd84:	1f000017 	ldw	fp,0(r3)
  83dd88:	1823883a 	mov	r17,r3
  83dd8c:	182b883a 	mov	r21,r3
  83dd90:	e021883a 	mov	r16,fp
  83dd94:	00000106 	br	83dd9c <__multiply+0x18c>
  83dd98:	982b883a 	mov	r21,r19
  83dd9c:	b100000b 	ldhu	r4,0(r22)
  83dda0:	8020d43a 	srli	r16,r16,16
  83dda4:	900b883a 	mov	r5,r18
  83dda8:	08305040 	call	830504 <__mulsi3>
  83ddac:	1405883a 	add	r2,r2,r16
  83ddb0:	15ef883a 	add	r23,r2,r23
  83ddb4:	b804943a 	slli	r2,r23,16
  83ddb8:	e0ffffcc 	andi	r3,fp,65535
  83ddbc:	8c400104 	addi	r17,r17,4
  83ddc0:	10c6b03a 	or	r3,r2,r3
  83ddc4:	88ffff15 	stw	r3,-4(r17)
  83ddc8:	b5800104 	addi	r22,r22,4
  83ddcc:	b13fff17 	ldw	r4,-4(r22)
  83ddd0:	acc00104 	addi	r19,r21,4
  83ddd4:	900b883a 	mov	r5,r18
  83ddd8:	2008d43a 	srli	r4,r4,16
  83dddc:	9c000017 	ldw	r16,0(r19)
  83dde0:	08305040 	call	830504 <__mulsi3>
  83dde4:	b806d43a 	srli	r3,r23,16
  83dde8:	813fffcc 	andi	r4,r16,65535
  83ddec:	1105883a 	add	r2,r2,r4
  83ddf0:	10f9883a 	add	fp,r2,r3
  83ddf4:	e02ed43a 	srli	r23,fp,16
  83ddf8:	b53fe736 	bltu	r22,r20,83dd98 <__alt_mem_epcs_flash_controller_0+0xff834d98>
  83ddfc:	af000115 	stw	fp,4(r21)
  83de00:	d8c00017 	ldw	r3,0(sp)
  83de04:	d9000517 	ldw	r4,20(sp)
  83de08:	18c00104 	addi	r3,r3,4
  83de0c:	d8c00015 	stw	r3,0(sp)
  83de10:	d8c00117 	ldw	r3,4(sp)
  83de14:	18c00104 	addi	r3,r3,4
  83de18:	d8c00115 	stw	r3,4(sp)
  83de1c:	d8c00017 	ldw	r3,0(sp)
  83de20:	193fb136 	bltu	r3,r4,83dce8 <__alt_mem_epcs_flash_controller_0+0xff834ce8>
  83de24:	d8c00217 	ldw	r3,8(sp)
  83de28:	00c00c0e 	bge	zero,r3,83de5c <__multiply+0x24c>
  83de2c:	d8c00317 	ldw	r3,12(sp)
  83de30:	18bfff17 	ldw	r2,-4(r3)
  83de34:	1d7fff04 	addi	r21,r3,-4
  83de38:	10000326 	beq	r2,zero,83de48 <__multiply+0x238>
  83de3c:	00000706 	br	83de5c <__multiply+0x24c>
  83de40:	a8800017 	ldw	r2,0(r21)
  83de44:	1000051e 	bne	r2,zero,83de5c <__multiply+0x24c>
  83de48:	d8c00217 	ldw	r3,8(sp)
  83de4c:	ad7fff04 	addi	r21,r21,-4
  83de50:	18ffffc4 	addi	r3,r3,-1
  83de54:	d8c00215 	stw	r3,8(sp)
  83de58:	183ff91e 	bne	r3,zero,83de40 <__alt_mem_epcs_flash_controller_0+0xff834e40>
  83de5c:	d8c00617 	ldw	r3,24(sp)
  83de60:	d9000217 	ldw	r4,8(sp)
  83de64:	1805883a 	mov	r2,r3
  83de68:	19000415 	stw	r4,16(r3)
  83de6c:	dfc01017 	ldw	ra,64(sp)
  83de70:	df000f17 	ldw	fp,60(sp)
  83de74:	ddc00e17 	ldw	r23,56(sp)
  83de78:	dd800d17 	ldw	r22,52(sp)
  83de7c:	dd400c17 	ldw	r21,48(sp)
  83de80:	dd000b17 	ldw	r20,44(sp)
  83de84:	dcc00a17 	ldw	r19,40(sp)
  83de88:	dc800917 	ldw	r18,36(sp)
  83de8c:	dc400817 	ldw	r17,32(sp)
  83de90:	dc000717 	ldw	r16,28(sp)
  83de94:	dec01104 	addi	sp,sp,68
  83de98:	f800283a 	ret

0083de9c <__pow5mult>:
  83de9c:	defffa04 	addi	sp,sp,-24
  83dea0:	dcc00315 	stw	r19,12(sp)
  83dea4:	dc000015 	stw	r16,0(sp)
  83dea8:	dfc00515 	stw	ra,20(sp)
  83deac:	dd000415 	stw	r20,16(sp)
  83deb0:	dc800215 	stw	r18,8(sp)
  83deb4:	dc400115 	stw	r17,4(sp)
  83deb8:	308000cc 	andi	r2,r6,3
  83debc:	3021883a 	mov	r16,r6
  83dec0:	2027883a 	mov	r19,r4
  83dec4:	10002f1e 	bne	r2,zero,83df84 <__pow5mult+0xe8>
  83dec8:	2825883a 	mov	r18,r5
  83decc:	8021d0ba 	srai	r16,r16,2
  83ded0:	80001a26 	beq	r16,zero,83df3c <__pow5mult+0xa0>
  83ded4:	9c401217 	ldw	r17,72(r19)
  83ded8:	8800061e 	bne	r17,zero,83def4 <__pow5mult+0x58>
  83dedc:	00003406 	br	83dfb0 <__pow5mult+0x114>
  83dee0:	8021d07a 	srai	r16,r16,1
  83dee4:	80001526 	beq	r16,zero,83df3c <__pow5mult+0xa0>
  83dee8:	88800017 	ldw	r2,0(r17)
  83deec:	10001c26 	beq	r2,zero,83df60 <__pow5mult+0xc4>
  83def0:	1023883a 	mov	r17,r2
  83def4:	8080004c 	andi	r2,r16,1
  83def8:	103ff926 	beq	r2,zero,83dee0 <__alt_mem_epcs_flash_controller_0+0xff834ee0>
  83defc:	880d883a 	mov	r6,r17
  83df00:	900b883a 	mov	r5,r18
  83df04:	9809883a 	mov	r4,r19
  83df08:	083dc100 	call	83dc10 <__multiply>
  83df0c:	90001b26 	beq	r18,zero,83df7c <__pow5mult+0xe0>
  83df10:	91000117 	ldw	r4,4(r18)
  83df14:	98c01317 	ldw	r3,76(r19)
  83df18:	8021d07a 	srai	r16,r16,1
  83df1c:	2109883a 	add	r4,r4,r4
  83df20:	2109883a 	add	r4,r4,r4
  83df24:	1907883a 	add	r3,r3,r4
  83df28:	19000017 	ldw	r4,0(r3)
  83df2c:	91000015 	stw	r4,0(r18)
  83df30:	1c800015 	stw	r18,0(r3)
  83df34:	1025883a 	mov	r18,r2
  83df38:	803feb1e 	bne	r16,zero,83dee8 <__alt_mem_epcs_flash_controller_0+0xff834ee8>
  83df3c:	9005883a 	mov	r2,r18
  83df40:	dfc00517 	ldw	ra,20(sp)
  83df44:	dd000417 	ldw	r20,16(sp)
  83df48:	dcc00317 	ldw	r19,12(sp)
  83df4c:	dc800217 	ldw	r18,8(sp)
  83df50:	dc400117 	ldw	r17,4(sp)
  83df54:	dc000017 	ldw	r16,0(sp)
  83df58:	dec00604 	addi	sp,sp,24
  83df5c:	f800283a 	ret
  83df60:	880d883a 	mov	r6,r17
  83df64:	880b883a 	mov	r5,r17
  83df68:	9809883a 	mov	r4,r19
  83df6c:	083dc100 	call	83dc10 <__multiply>
  83df70:	88800015 	stw	r2,0(r17)
  83df74:	10000015 	stw	zero,0(r2)
  83df78:	003fdd06 	br	83def0 <__alt_mem_epcs_flash_controller_0+0xff834ef0>
  83df7c:	1025883a 	mov	r18,r2
  83df80:	003fd706 	br	83dee0 <__alt_mem_epcs_flash_controller_0+0xff834ee0>
  83df84:	10bfffc4 	addi	r2,r2,-1
  83df88:	1085883a 	add	r2,r2,r2
  83df8c:	00c021b4 	movhi	r3,134
  83df90:	18e50404 	addi	r3,r3,-27632
  83df94:	1085883a 	add	r2,r2,r2
  83df98:	1885883a 	add	r2,r3,r2
  83df9c:	11800017 	ldw	r6,0(r2)
  83dfa0:	000f883a 	mov	r7,zero
  83dfa4:	083d8700 	call	83d870 <__multadd>
  83dfa8:	1025883a 	mov	r18,r2
  83dfac:	003fc706 	br	83decc <__alt_mem_epcs_flash_controller_0+0xff834ecc>
  83dfb0:	05000044 	movi	r20,1
  83dfb4:	a00b883a 	mov	r5,r20
  83dfb8:	9809883a 	mov	r4,r19
  83dfbc:	083d7a00 	call	83d7a0 <_Balloc>
  83dfc0:	1023883a 	mov	r17,r2
  83dfc4:	00809c44 	movi	r2,625
  83dfc8:	88800515 	stw	r2,20(r17)
  83dfcc:	8d000415 	stw	r20,16(r17)
  83dfd0:	9c401215 	stw	r17,72(r19)
  83dfd4:	88000015 	stw	zero,0(r17)
  83dfd8:	003fc606 	br	83def4 <__alt_mem_epcs_flash_controller_0+0xff834ef4>

0083dfdc <__lshift>:
  83dfdc:	defff904 	addi	sp,sp,-28
  83dfe0:	dd400515 	stw	r21,20(sp)
  83dfe4:	dcc00315 	stw	r19,12(sp)
  83dfe8:	302bd17a 	srai	r21,r6,5
  83dfec:	2cc00417 	ldw	r19,16(r5)
  83dff0:	28800217 	ldw	r2,8(r5)
  83dff4:	dd000415 	stw	r20,16(sp)
  83dff8:	ace7883a 	add	r19,r21,r19
  83dffc:	dc800215 	stw	r18,8(sp)
  83e000:	dc400115 	stw	r17,4(sp)
  83e004:	dc000015 	stw	r16,0(sp)
  83e008:	dfc00615 	stw	ra,24(sp)
  83e00c:	9c000044 	addi	r16,r19,1
  83e010:	2823883a 	mov	r17,r5
  83e014:	3029883a 	mov	r20,r6
  83e018:	2025883a 	mov	r18,r4
  83e01c:	29400117 	ldw	r5,4(r5)
  83e020:	1400030e 	bge	r2,r16,83e030 <__lshift+0x54>
  83e024:	1085883a 	add	r2,r2,r2
  83e028:	29400044 	addi	r5,r5,1
  83e02c:	143ffd16 	blt	r2,r16,83e024 <__alt_mem_epcs_flash_controller_0+0xff835024>
  83e030:	9009883a 	mov	r4,r18
  83e034:	083d7a00 	call	83d7a0 <_Balloc>
  83e038:	10c00504 	addi	r3,r2,20
  83e03c:	0540070e 	bge	zero,r21,83e05c <__lshift+0x80>
  83e040:	ad6b883a 	add	r21,r21,r21
  83e044:	ad6b883a 	add	r21,r21,r21
  83e048:	1809883a 	mov	r4,r3
  83e04c:	1d47883a 	add	r3,r3,r21
  83e050:	20000015 	stw	zero,0(r4)
  83e054:	21000104 	addi	r4,r4,4
  83e058:	193ffd1e 	bne	r3,r4,83e050 <__alt_mem_epcs_flash_controller_0+0xff835050>
  83e05c:	8a000417 	ldw	r8,16(r17)
  83e060:	89000504 	addi	r4,r17,20
  83e064:	a18007cc 	andi	r6,r20,31
  83e068:	4211883a 	add	r8,r8,r8
  83e06c:	4211883a 	add	r8,r8,r8
  83e070:	2211883a 	add	r8,r4,r8
  83e074:	30002326 	beq	r6,zero,83e104 <__lshift+0x128>
  83e078:	02400804 	movi	r9,32
  83e07c:	4993c83a 	sub	r9,r9,r6
  83e080:	000b883a 	mov	r5,zero
  83e084:	21c00017 	ldw	r7,0(r4)
  83e088:	1815883a 	mov	r10,r3
  83e08c:	18c00104 	addi	r3,r3,4
  83e090:	398e983a 	sll	r7,r7,r6
  83e094:	21000104 	addi	r4,r4,4
  83e098:	394ab03a 	or	r5,r7,r5
  83e09c:	197fff15 	stw	r5,-4(r3)
  83e0a0:	217fff17 	ldw	r5,-4(r4)
  83e0a4:	2a4ad83a 	srl	r5,r5,r9
  83e0a8:	223ff636 	bltu	r4,r8,83e084 <__alt_mem_epcs_flash_controller_0+0xff835084>
  83e0ac:	51400115 	stw	r5,4(r10)
  83e0b0:	28001a1e 	bne	r5,zero,83e11c <__lshift+0x140>
  83e0b4:	843fffc4 	addi	r16,r16,-1
  83e0b8:	14000415 	stw	r16,16(r2)
  83e0bc:	88000826 	beq	r17,zero,83e0e0 <__lshift+0x104>
  83e0c0:	89000117 	ldw	r4,4(r17)
  83e0c4:	90c01317 	ldw	r3,76(r18)
  83e0c8:	2109883a 	add	r4,r4,r4
  83e0cc:	2109883a 	add	r4,r4,r4
  83e0d0:	1907883a 	add	r3,r3,r4
  83e0d4:	19000017 	ldw	r4,0(r3)
  83e0d8:	89000015 	stw	r4,0(r17)
  83e0dc:	1c400015 	stw	r17,0(r3)
  83e0e0:	dfc00617 	ldw	ra,24(sp)
  83e0e4:	dd400517 	ldw	r21,20(sp)
  83e0e8:	dd000417 	ldw	r20,16(sp)
  83e0ec:	dcc00317 	ldw	r19,12(sp)
  83e0f0:	dc800217 	ldw	r18,8(sp)
  83e0f4:	dc400117 	ldw	r17,4(sp)
  83e0f8:	dc000017 	ldw	r16,0(sp)
  83e0fc:	dec00704 	addi	sp,sp,28
  83e100:	f800283a 	ret
  83e104:	21400017 	ldw	r5,0(r4)
  83e108:	18c00104 	addi	r3,r3,4
  83e10c:	21000104 	addi	r4,r4,4
  83e110:	197fff15 	stw	r5,-4(r3)
  83e114:	223ffb36 	bltu	r4,r8,83e104 <__alt_mem_epcs_flash_controller_0+0xff835104>
  83e118:	003fe606 	br	83e0b4 <__alt_mem_epcs_flash_controller_0+0xff8350b4>
  83e11c:	9c000084 	addi	r16,r19,2
  83e120:	003fe406 	br	83e0b4 <__alt_mem_epcs_flash_controller_0+0xff8350b4>

0083e124 <__mcmp>:
  83e124:	20800417 	ldw	r2,16(r4)
  83e128:	28c00417 	ldw	r3,16(r5)
  83e12c:	10c5c83a 	sub	r2,r2,r3
  83e130:	1000111e 	bne	r2,zero,83e178 <__mcmp+0x54>
  83e134:	18c7883a 	add	r3,r3,r3
  83e138:	18c7883a 	add	r3,r3,r3
  83e13c:	21000504 	addi	r4,r4,20
  83e140:	29400504 	addi	r5,r5,20
  83e144:	20c5883a 	add	r2,r4,r3
  83e148:	28cb883a 	add	r5,r5,r3
  83e14c:	00000106 	br	83e154 <__mcmp+0x30>
  83e150:	20800a2e 	bgeu	r4,r2,83e17c <__mcmp+0x58>
  83e154:	10bfff04 	addi	r2,r2,-4
  83e158:	297fff04 	addi	r5,r5,-4
  83e15c:	11800017 	ldw	r6,0(r2)
  83e160:	28c00017 	ldw	r3,0(r5)
  83e164:	30fffa26 	beq	r6,r3,83e150 <__alt_mem_epcs_flash_controller_0+0xff835150>
  83e168:	30c00236 	bltu	r6,r3,83e174 <__mcmp+0x50>
  83e16c:	00800044 	movi	r2,1
  83e170:	f800283a 	ret
  83e174:	00bfffc4 	movi	r2,-1
  83e178:	f800283a 	ret
  83e17c:	0005883a 	mov	r2,zero
  83e180:	f800283a 	ret

0083e184 <__mdiff>:
  83e184:	28c00417 	ldw	r3,16(r5)
  83e188:	30800417 	ldw	r2,16(r6)
  83e18c:	defffa04 	addi	sp,sp,-24
  83e190:	dcc00315 	stw	r19,12(sp)
  83e194:	dc800215 	stw	r18,8(sp)
  83e198:	dfc00515 	stw	ra,20(sp)
  83e19c:	dd000415 	stw	r20,16(sp)
  83e1a0:	dc400115 	stw	r17,4(sp)
  83e1a4:	dc000015 	stw	r16,0(sp)
  83e1a8:	1887c83a 	sub	r3,r3,r2
  83e1ac:	2825883a 	mov	r18,r5
  83e1b0:	3027883a 	mov	r19,r6
  83e1b4:	1800141e 	bne	r3,zero,83e208 <__mdiff+0x84>
  83e1b8:	1085883a 	add	r2,r2,r2
  83e1bc:	1085883a 	add	r2,r2,r2
  83e1c0:	2a000504 	addi	r8,r5,20
  83e1c4:	34000504 	addi	r16,r6,20
  83e1c8:	4087883a 	add	r3,r8,r2
  83e1cc:	8085883a 	add	r2,r16,r2
  83e1d0:	00000106 	br	83e1d8 <__mdiff+0x54>
  83e1d4:	40c0592e 	bgeu	r8,r3,83e33c <__mdiff+0x1b8>
  83e1d8:	18ffff04 	addi	r3,r3,-4
  83e1dc:	10bfff04 	addi	r2,r2,-4
  83e1e0:	19c00017 	ldw	r7,0(r3)
  83e1e4:	11400017 	ldw	r5,0(r2)
  83e1e8:	397ffa26 	beq	r7,r5,83e1d4 <__alt_mem_epcs_flash_controller_0+0xff8351d4>
  83e1ec:	3940592e 	bgeu	r7,r5,83e354 <__mdiff+0x1d0>
  83e1f0:	9005883a 	mov	r2,r18
  83e1f4:	4023883a 	mov	r17,r8
  83e1f8:	9825883a 	mov	r18,r19
  83e1fc:	05000044 	movi	r20,1
  83e200:	1027883a 	mov	r19,r2
  83e204:	00000406 	br	83e218 <__mdiff+0x94>
  83e208:	18005616 	blt	r3,zero,83e364 <__mdiff+0x1e0>
  83e20c:	34400504 	addi	r17,r6,20
  83e210:	2c000504 	addi	r16,r5,20
  83e214:	0029883a 	mov	r20,zero
  83e218:	91400117 	ldw	r5,4(r18)
  83e21c:	083d7a00 	call	83d7a0 <_Balloc>
  83e220:	92400417 	ldw	r9,16(r18)
  83e224:	9b000417 	ldw	r12,16(r19)
  83e228:	12c00504 	addi	r11,r2,20
  83e22c:	4a51883a 	add	r8,r9,r9
  83e230:	6319883a 	add	r12,r12,r12
  83e234:	4211883a 	add	r8,r8,r8
  83e238:	6319883a 	add	r12,r12,r12
  83e23c:	15000315 	stw	r20,12(r2)
  83e240:	8211883a 	add	r8,r16,r8
  83e244:	8b19883a 	add	r12,r17,r12
  83e248:	0007883a 	mov	r3,zero
  83e24c:	81400017 	ldw	r5,0(r16)
  83e250:	89c00017 	ldw	r7,0(r17)
  83e254:	59800104 	addi	r6,r11,4
  83e258:	293fffcc 	andi	r4,r5,65535
  83e25c:	20c7883a 	add	r3,r4,r3
  83e260:	393fffcc 	andi	r4,r7,65535
  83e264:	1909c83a 	sub	r4,r3,r4
  83e268:	280ad43a 	srli	r5,r5,16
  83e26c:	380ed43a 	srli	r7,r7,16
  83e270:	2007d43a 	srai	r3,r4,16
  83e274:	213fffcc 	andi	r4,r4,65535
  83e278:	29cbc83a 	sub	r5,r5,r7
  83e27c:	28c7883a 	add	r3,r5,r3
  83e280:	180a943a 	slli	r5,r3,16
  83e284:	8c400104 	addi	r17,r17,4
  83e288:	84000104 	addi	r16,r16,4
  83e28c:	2908b03a 	or	r4,r5,r4
  83e290:	59000015 	stw	r4,0(r11)
  83e294:	1807d43a 	srai	r3,r3,16
  83e298:	3015883a 	mov	r10,r6
  83e29c:	3017883a 	mov	r11,r6
  83e2a0:	8b3fea36 	bltu	r17,r12,83e24c <__alt_mem_epcs_flash_controller_0+0xff83524c>
  83e2a4:	8200162e 	bgeu	r16,r8,83e300 <__mdiff+0x17c>
  83e2a8:	8017883a 	mov	r11,r16
  83e2ac:	59400017 	ldw	r5,0(r11)
  83e2b0:	31800104 	addi	r6,r6,4
  83e2b4:	5ac00104 	addi	r11,r11,4
  83e2b8:	293fffcc 	andi	r4,r5,65535
  83e2bc:	20c7883a 	add	r3,r4,r3
  83e2c0:	280ed43a 	srli	r7,r5,16
  83e2c4:	180bd43a 	srai	r5,r3,16
  83e2c8:	193fffcc 	andi	r4,r3,65535
  83e2cc:	3947883a 	add	r3,r7,r5
  83e2d0:	180a943a 	slli	r5,r3,16
  83e2d4:	1807d43a 	srai	r3,r3,16
  83e2d8:	2908b03a 	or	r4,r5,r4
  83e2dc:	313fff15 	stw	r4,-4(r6)
  83e2e0:	5a3ff236 	bltu	r11,r8,83e2ac <__alt_mem_epcs_flash_controller_0+0xff8352ac>
  83e2e4:	0406303a 	nor	r3,zero,r16
  83e2e8:	1a07883a 	add	r3,r3,r8
  83e2ec:	1806d0ba 	srli	r3,r3,2
  83e2f0:	18c00044 	addi	r3,r3,1
  83e2f4:	18c7883a 	add	r3,r3,r3
  83e2f8:	18c7883a 	add	r3,r3,r3
  83e2fc:	50d5883a 	add	r10,r10,r3
  83e300:	50ffff04 	addi	r3,r10,-4
  83e304:	2000041e 	bne	r4,zero,83e318 <__mdiff+0x194>
  83e308:	18ffff04 	addi	r3,r3,-4
  83e30c:	19000017 	ldw	r4,0(r3)
  83e310:	4a7fffc4 	addi	r9,r9,-1
  83e314:	203ffc26 	beq	r4,zero,83e308 <__alt_mem_epcs_flash_controller_0+0xff835308>
  83e318:	12400415 	stw	r9,16(r2)
  83e31c:	dfc00517 	ldw	ra,20(sp)
  83e320:	dd000417 	ldw	r20,16(sp)
  83e324:	dcc00317 	ldw	r19,12(sp)
  83e328:	dc800217 	ldw	r18,8(sp)
  83e32c:	dc400117 	ldw	r17,4(sp)
  83e330:	dc000017 	ldw	r16,0(sp)
  83e334:	dec00604 	addi	sp,sp,24
  83e338:	f800283a 	ret
  83e33c:	000b883a 	mov	r5,zero
  83e340:	083d7a00 	call	83d7a0 <_Balloc>
  83e344:	00c00044 	movi	r3,1
  83e348:	10c00415 	stw	r3,16(r2)
  83e34c:	10000515 	stw	zero,20(r2)
  83e350:	003ff206 	br	83e31c <__alt_mem_epcs_flash_controller_0+0xff83531c>
  83e354:	8023883a 	mov	r17,r16
  83e358:	0029883a 	mov	r20,zero
  83e35c:	4021883a 	mov	r16,r8
  83e360:	003fad06 	br	83e218 <__alt_mem_epcs_flash_controller_0+0xff835218>
  83e364:	9005883a 	mov	r2,r18
  83e368:	94400504 	addi	r17,r18,20
  83e36c:	9c000504 	addi	r16,r19,20
  83e370:	9825883a 	mov	r18,r19
  83e374:	05000044 	movi	r20,1
  83e378:	1027883a 	mov	r19,r2
  83e37c:	003fa606 	br	83e218 <__alt_mem_epcs_flash_controller_0+0xff835218>

0083e380 <__ulp>:
  83e380:	295ffc2c 	andhi	r5,r5,32752
  83e384:	00bf3034 	movhi	r2,64704
  83e388:	2887883a 	add	r3,r5,r2
  83e38c:	00c0020e 	bge	zero,r3,83e398 <__ulp+0x18>
  83e390:	0005883a 	mov	r2,zero
  83e394:	f800283a 	ret
  83e398:	00c7c83a 	sub	r3,zero,r3
  83e39c:	1807d53a 	srai	r3,r3,20
  83e3a0:	008004c4 	movi	r2,19
  83e3a4:	10c00b0e 	bge	r2,r3,83e3d4 <__ulp+0x54>
  83e3a8:	18bffb04 	addi	r2,r3,-20
  83e3ac:	01000784 	movi	r4,30
  83e3b0:	0007883a 	mov	r3,zero
  83e3b4:	20800516 	blt	r4,r2,83e3cc <__ulp+0x4c>
  83e3b8:	010007c4 	movi	r4,31
  83e3bc:	2089c83a 	sub	r4,r4,r2
  83e3c0:	00800044 	movi	r2,1
  83e3c4:	1104983a 	sll	r2,r2,r4
  83e3c8:	f800283a 	ret
  83e3cc:	00800044 	movi	r2,1
  83e3d0:	f800283a 	ret
  83e3d4:	01400234 	movhi	r5,8
  83e3d8:	28c7d83a 	sra	r3,r5,r3
  83e3dc:	0005883a 	mov	r2,zero
  83e3e0:	f800283a 	ret

0083e3e4 <__b2d>:
  83e3e4:	defffa04 	addi	sp,sp,-24
  83e3e8:	dc000015 	stw	r16,0(sp)
  83e3ec:	24000417 	ldw	r16,16(r4)
  83e3f0:	dc400115 	stw	r17,4(sp)
  83e3f4:	24400504 	addi	r17,r4,20
  83e3f8:	8421883a 	add	r16,r16,r16
  83e3fc:	8421883a 	add	r16,r16,r16
  83e400:	8c21883a 	add	r16,r17,r16
  83e404:	dc800215 	stw	r18,8(sp)
  83e408:	84bfff17 	ldw	r18,-4(r16)
  83e40c:	dd000415 	stw	r20,16(sp)
  83e410:	dcc00315 	stw	r19,12(sp)
  83e414:	9009883a 	mov	r4,r18
  83e418:	2829883a 	mov	r20,r5
  83e41c:	dfc00515 	stw	ra,20(sp)
  83e420:	083dabc0 	call	83dabc <__hi0bits>
  83e424:	00c00804 	movi	r3,32
  83e428:	1889c83a 	sub	r4,r3,r2
  83e42c:	a1000015 	stw	r4,0(r20)
  83e430:	01000284 	movi	r4,10
  83e434:	84ffff04 	addi	r19,r16,-4
  83e438:	20801216 	blt	r4,r2,83e484 <__b2d+0xa0>
  83e43c:	018002c4 	movi	r6,11
  83e440:	308dc83a 	sub	r6,r6,r2
  83e444:	9186d83a 	srl	r3,r18,r6
  83e448:	18cffc34 	orhi	r3,r3,16368
  83e44c:	8cc0212e 	bgeu	r17,r19,83e4d4 <__b2d+0xf0>
  83e450:	813ffe17 	ldw	r4,-8(r16)
  83e454:	218cd83a 	srl	r6,r4,r6
  83e458:	10800544 	addi	r2,r2,21
  83e45c:	9084983a 	sll	r2,r18,r2
  83e460:	1184b03a 	or	r2,r2,r6
  83e464:	dfc00517 	ldw	ra,20(sp)
  83e468:	dd000417 	ldw	r20,16(sp)
  83e46c:	dcc00317 	ldw	r19,12(sp)
  83e470:	dc800217 	ldw	r18,8(sp)
  83e474:	dc400117 	ldw	r17,4(sp)
  83e478:	dc000017 	ldw	r16,0(sp)
  83e47c:	dec00604 	addi	sp,sp,24
  83e480:	f800283a 	ret
  83e484:	8cc00f2e 	bgeu	r17,r19,83e4c4 <__b2d+0xe0>
  83e488:	117ffd44 	addi	r5,r2,-11
  83e48c:	80bffe17 	ldw	r2,-8(r16)
  83e490:	28000e26 	beq	r5,zero,83e4cc <__b2d+0xe8>
  83e494:	1949c83a 	sub	r4,r3,r5
  83e498:	9164983a 	sll	r18,r18,r5
  83e49c:	1106d83a 	srl	r3,r2,r4
  83e4a0:	81bffe04 	addi	r6,r16,-8
  83e4a4:	948ffc34 	orhi	r18,r18,16368
  83e4a8:	90c6b03a 	or	r3,r18,r3
  83e4ac:	89800e2e 	bgeu	r17,r6,83e4e8 <__b2d+0x104>
  83e4b0:	81bffd17 	ldw	r6,-12(r16)
  83e4b4:	1144983a 	sll	r2,r2,r5
  83e4b8:	310ad83a 	srl	r5,r6,r4
  83e4bc:	2884b03a 	or	r2,r5,r2
  83e4c0:	003fe806 	br	83e464 <__alt_mem_epcs_flash_controller_0+0xff835464>
  83e4c4:	10bffd44 	addi	r2,r2,-11
  83e4c8:	1000041e 	bne	r2,zero,83e4dc <__b2d+0xf8>
  83e4cc:	90cffc34 	orhi	r3,r18,16368
  83e4d0:	003fe406 	br	83e464 <__alt_mem_epcs_flash_controller_0+0xff835464>
  83e4d4:	000d883a 	mov	r6,zero
  83e4d8:	003fdf06 	br	83e458 <__alt_mem_epcs_flash_controller_0+0xff835458>
  83e4dc:	90a4983a 	sll	r18,r18,r2
  83e4e0:	0005883a 	mov	r2,zero
  83e4e4:	003ff906 	br	83e4cc <__alt_mem_epcs_flash_controller_0+0xff8354cc>
  83e4e8:	1144983a 	sll	r2,r2,r5
  83e4ec:	003fdd06 	br	83e464 <__alt_mem_epcs_flash_controller_0+0xff835464>

0083e4f0 <__d2b>:
  83e4f0:	defff804 	addi	sp,sp,-32
  83e4f4:	dc000215 	stw	r16,8(sp)
  83e4f8:	3021883a 	mov	r16,r6
  83e4fc:	dc400315 	stw	r17,12(sp)
  83e500:	8022907a 	slli	r17,r16,1
  83e504:	dd000615 	stw	r20,24(sp)
  83e508:	2829883a 	mov	r20,r5
  83e50c:	01400044 	movi	r5,1
  83e510:	dcc00515 	stw	r19,20(sp)
  83e514:	dc800415 	stw	r18,16(sp)
  83e518:	dfc00715 	stw	ra,28(sp)
  83e51c:	3825883a 	mov	r18,r7
  83e520:	8822d57a 	srli	r17,r17,21
  83e524:	083d7a00 	call	83d7a0 <_Balloc>
  83e528:	1027883a 	mov	r19,r2
  83e52c:	00800434 	movhi	r2,16
  83e530:	10bfffc4 	addi	r2,r2,-1
  83e534:	808c703a 	and	r6,r16,r2
  83e538:	88000126 	beq	r17,zero,83e540 <__d2b+0x50>
  83e53c:	31800434 	orhi	r6,r6,16
  83e540:	d9800015 	stw	r6,0(sp)
  83e544:	a0002426 	beq	r20,zero,83e5d8 <__d2b+0xe8>
  83e548:	d9000104 	addi	r4,sp,4
  83e54c:	dd000115 	stw	r20,4(sp)
  83e550:	083db240 	call	83db24 <__lo0bits>
  83e554:	d8c00017 	ldw	r3,0(sp)
  83e558:	10002f1e 	bne	r2,zero,83e618 <__d2b+0x128>
  83e55c:	d9000117 	ldw	r4,4(sp)
  83e560:	99000515 	stw	r4,20(r19)
  83e564:	1821003a 	cmpeq	r16,r3,zero
  83e568:	01000084 	movi	r4,2
  83e56c:	2421c83a 	sub	r16,r4,r16
  83e570:	98c00615 	stw	r3,24(r19)
  83e574:	9c000415 	stw	r16,16(r19)
  83e578:	88001f1e 	bne	r17,zero,83e5f8 <__d2b+0x108>
  83e57c:	10bef384 	addi	r2,r2,-1074
  83e580:	90800015 	stw	r2,0(r18)
  83e584:	00900034 	movhi	r2,16384
  83e588:	10bfffc4 	addi	r2,r2,-1
  83e58c:	8085883a 	add	r2,r16,r2
  83e590:	1085883a 	add	r2,r2,r2
  83e594:	1085883a 	add	r2,r2,r2
  83e598:	9885883a 	add	r2,r19,r2
  83e59c:	11000517 	ldw	r4,20(r2)
  83e5a0:	8020917a 	slli	r16,r16,5
  83e5a4:	083dabc0 	call	83dabc <__hi0bits>
  83e5a8:	d8c00817 	ldw	r3,32(sp)
  83e5ac:	8085c83a 	sub	r2,r16,r2
  83e5b0:	18800015 	stw	r2,0(r3)
  83e5b4:	9805883a 	mov	r2,r19
  83e5b8:	dfc00717 	ldw	ra,28(sp)
  83e5bc:	dd000617 	ldw	r20,24(sp)
  83e5c0:	dcc00517 	ldw	r19,20(sp)
  83e5c4:	dc800417 	ldw	r18,16(sp)
  83e5c8:	dc400317 	ldw	r17,12(sp)
  83e5cc:	dc000217 	ldw	r16,8(sp)
  83e5d0:	dec00804 	addi	sp,sp,32
  83e5d4:	f800283a 	ret
  83e5d8:	d809883a 	mov	r4,sp
  83e5dc:	083db240 	call	83db24 <__lo0bits>
  83e5e0:	d8c00017 	ldw	r3,0(sp)
  83e5e4:	04000044 	movi	r16,1
  83e5e8:	9c000415 	stw	r16,16(r19)
  83e5ec:	98c00515 	stw	r3,20(r19)
  83e5f0:	10800804 	addi	r2,r2,32
  83e5f4:	883fe126 	beq	r17,zero,83e57c <__alt_mem_epcs_flash_controller_0+0xff83557c>
  83e5f8:	00c00d44 	movi	r3,53
  83e5fc:	8c7ef344 	addi	r17,r17,-1075
  83e600:	88a3883a 	add	r17,r17,r2
  83e604:	1885c83a 	sub	r2,r3,r2
  83e608:	d8c00817 	ldw	r3,32(sp)
  83e60c:	94400015 	stw	r17,0(r18)
  83e610:	18800015 	stw	r2,0(r3)
  83e614:	003fe706 	br	83e5b4 <__alt_mem_epcs_flash_controller_0+0xff8355b4>
  83e618:	01000804 	movi	r4,32
  83e61c:	2089c83a 	sub	r4,r4,r2
  83e620:	1908983a 	sll	r4,r3,r4
  83e624:	d9400117 	ldw	r5,4(sp)
  83e628:	1886d83a 	srl	r3,r3,r2
  83e62c:	2148b03a 	or	r4,r4,r5
  83e630:	99000515 	stw	r4,20(r19)
  83e634:	d8c00015 	stw	r3,0(sp)
  83e638:	003fca06 	br	83e564 <__alt_mem_epcs_flash_controller_0+0xff835564>

0083e63c <__ratio>:
  83e63c:	defff904 	addi	sp,sp,-28
  83e640:	dc400315 	stw	r17,12(sp)
  83e644:	2823883a 	mov	r17,r5
  83e648:	d9400104 	addi	r5,sp,4
  83e64c:	dfc00615 	stw	ra,24(sp)
  83e650:	dcc00515 	stw	r19,20(sp)
  83e654:	dc800415 	stw	r18,16(sp)
  83e658:	2027883a 	mov	r19,r4
  83e65c:	dc000215 	stw	r16,8(sp)
  83e660:	083e3e40 	call	83e3e4 <__b2d>
  83e664:	d80b883a 	mov	r5,sp
  83e668:	8809883a 	mov	r4,r17
  83e66c:	1025883a 	mov	r18,r2
  83e670:	1821883a 	mov	r16,r3
  83e674:	083e3e40 	call	83e3e4 <__b2d>
  83e678:	8a000417 	ldw	r8,16(r17)
  83e67c:	99000417 	ldw	r4,16(r19)
  83e680:	d9400117 	ldw	r5,4(sp)
  83e684:	2209c83a 	sub	r4,r4,r8
  83e688:	2010917a 	slli	r8,r4,5
  83e68c:	d9000017 	ldw	r4,0(sp)
  83e690:	2909c83a 	sub	r4,r5,r4
  83e694:	4109883a 	add	r4,r8,r4
  83e698:	01000e0e 	bge	zero,r4,83e6d4 <__ratio+0x98>
  83e69c:	2008953a 	slli	r4,r4,20
  83e6a0:	2421883a 	add	r16,r4,r16
  83e6a4:	100d883a 	mov	r6,r2
  83e6a8:	180f883a 	mov	r7,r3
  83e6ac:	9009883a 	mov	r4,r18
  83e6b0:	800b883a 	mov	r5,r16
  83e6b4:	0847ddc0 	call	847ddc <__divdf3>
  83e6b8:	dfc00617 	ldw	ra,24(sp)
  83e6bc:	dcc00517 	ldw	r19,20(sp)
  83e6c0:	dc800417 	ldw	r18,16(sp)
  83e6c4:	dc400317 	ldw	r17,12(sp)
  83e6c8:	dc000217 	ldw	r16,8(sp)
  83e6cc:	dec00704 	addi	sp,sp,28
  83e6d0:	f800283a 	ret
  83e6d4:	2008953a 	slli	r4,r4,20
  83e6d8:	1907c83a 	sub	r3,r3,r4
  83e6dc:	003ff106 	br	83e6a4 <__alt_mem_epcs_flash_controller_0+0xff8356a4>

0083e6e0 <_mprec_log10>:
  83e6e0:	defffe04 	addi	sp,sp,-8
  83e6e4:	dc000015 	stw	r16,0(sp)
  83e6e8:	dfc00115 	stw	ra,4(sp)
  83e6ec:	008005c4 	movi	r2,23
  83e6f0:	2021883a 	mov	r16,r4
  83e6f4:	11000d0e 	bge	r2,r4,83e72c <_mprec_log10+0x4c>
  83e6f8:	0005883a 	mov	r2,zero
  83e6fc:	00cffc34 	movhi	r3,16368
  83e700:	843fffc4 	addi	r16,r16,-1
  83e704:	000d883a 	mov	r6,zero
  83e708:	01d00934 	movhi	r7,16420
  83e70c:	1009883a 	mov	r4,r2
  83e710:	180b883a 	mov	r5,r3
  83e714:	083149c0 	call	83149c <__muldf3>
  83e718:	803ff91e 	bne	r16,zero,83e700 <__alt_mem_epcs_flash_controller_0+0xff835700>
  83e71c:	dfc00117 	ldw	ra,4(sp)
  83e720:	dc000017 	ldw	r16,0(sp)
  83e724:	dec00204 	addi	sp,sp,8
  83e728:	f800283a 	ret
  83e72c:	202090fa 	slli	r16,r4,3
  83e730:	008021b4 	movhi	r2,134
  83e734:	10a51b04 	addi	r2,r2,-27540
  83e738:	1421883a 	add	r16,r2,r16
  83e73c:	80800017 	ldw	r2,0(r16)
  83e740:	80c00117 	ldw	r3,4(r16)
  83e744:	dfc00117 	ldw	ra,4(sp)
  83e748:	dc000017 	ldw	r16,0(sp)
  83e74c:	dec00204 	addi	sp,sp,8
  83e750:	f800283a 	ret

0083e754 <__copybits>:
  83e754:	297fffc4 	addi	r5,r5,-1
  83e758:	280fd17a 	srai	r7,r5,5
  83e75c:	30c00417 	ldw	r3,16(r6)
  83e760:	30800504 	addi	r2,r6,20
  83e764:	39c00044 	addi	r7,r7,1
  83e768:	18c7883a 	add	r3,r3,r3
  83e76c:	39cf883a 	add	r7,r7,r7
  83e770:	18c7883a 	add	r3,r3,r3
  83e774:	39cf883a 	add	r7,r7,r7
  83e778:	10c7883a 	add	r3,r2,r3
  83e77c:	21cf883a 	add	r7,r4,r7
  83e780:	10c00d2e 	bgeu	r2,r3,83e7b8 <__copybits+0x64>
  83e784:	200b883a 	mov	r5,r4
  83e788:	12000017 	ldw	r8,0(r2)
  83e78c:	29400104 	addi	r5,r5,4
  83e790:	10800104 	addi	r2,r2,4
  83e794:	2a3fff15 	stw	r8,-4(r5)
  83e798:	10fffb36 	bltu	r2,r3,83e788 <__alt_mem_epcs_flash_controller_0+0xff835788>
  83e79c:	1985c83a 	sub	r2,r3,r6
  83e7a0:	10bffac4 	addi	r2,r2,-21
  83e7a4:	1004d0ba 	srli	r2,r2,2
  83e7a8:	10800044 	addi	r2,r2,1
  83e7ac:	1085883a 	add	r2,r2,r2
  83e7b0:	1085883a 	add	r2,r2,r2
  83e7b4:	2089883a 	add	r4,r4,r2
  83e7b8:	21c0032e 	bgeu	r4,r7,83e7c8 <__copybits+0x74>
  83e7bc:	20000015 	stw	zero,0(r4)
  83e7c0:	21000104 	addi	r4,r4,4
  83e7c4:	21fffd36 	bltu	r4,r7,83e7bc <__alt_mem_epcs_flash_controller_0+0xff8357bc>
  83e7c8:	f800283a 	ret

0083e7cc <__any_on>:
  83e7cc:	20c00417 	ldw	r3,16(r4)
  83e7d0:	2805d17a 	srai	r2,r5,5
  83e7d4:	21000504 	addi	r4,r4,20
  83e7d8:	18800d0e 	bge	r3,r2,83e810 <__any_on+0x44>
  83e7dc:	18c7883a 	add	r3,r3,r3
  83e7e0:	18c7883a 	add	r3,r3,r3
  83e7e4:	20c7883a 	add	r3,r4,r3
  83e7e8:	20c0192e 	bgeu	r4,r3,83e850 <__any_on+0x84>
  83e7ec:	18bfff17 	ldw	r2,-4(r3)
  83e7f0:	18ffff04 	addi	r3,r3,-4
  83e7f4:	1000041e 	bne	r2,zero,83e808 <__any_on+0x3c>
  83e7f8:	20c0142e 	bgeu	r4,r3,83e84c <__any_on+0x80>
  83e7fc:	18ffff04 	addi	r3,r3,-4
  83e800:	19400017 	ldw	r5,0(r3)
  83e804:	283ffc26 	beq	r5,zero,83e7f8 <__alt_mem_epcs_flash_controller_0+0xff8357f8>
  83e808:	00800044 	movi	r2,1
  83e80c:	f800283a 	ret
  83e810:	10c00a0e 	bge	r2,r3,83e83c <__any_on+0x70>
  83e814:	1085883a 	add	r2,r2,r2
  83e818:	1085883a 	add	r2,r2,r2
  83e81c:	294007cc 	andi	r5,r5,31
  83e820:	2087883a 	add	r3,r4,r2
  83e824:	283ff026 	beq	r5,zero,83e7e8 <__alt_mem_epcs_flash_controller_0+0xff8357e8>
  83e828:	19800017 	ldw	r6,0(r3)
  83e82c:	3144d83a 	srl	r2,r6,r5
  83e830:	114a983a 	sll	r5,r2,r5
  83e834:	317ff41e 	bne	r6,r5,83e808 <__alt_mem_epcs_flash_controller_0+0xff835808>
  83e838:	003feb06 	br	83e7e8 <__alt_mem_epcs_flash_controller_0+0xff8357e8>
  83e83c:	1085883a 	add	r2,r2,r2
  83e840:	1085883a 	add	r2,r2,r2
  83e844:	2087883a 	add	r3,r4,r2
  83e848:	003fe706 	br	83e7e8 <__alt_mem_epcs_flash_controller_0+0xff8357e8>
  83e84c:	f800283a 	ret
  83e850:	0005883a 	mov	r2,zero
  83e854:	f800283a 	ret

0083e858 <_read_r>:
  83e858:	defffd04 	addi	sp,sp,-12
  83e85c:	2805883a 	mov	r2,r5
  83e860:	dc000015 	stw	r16,0(sp)
  83e864:	040021b4 	movhi	r16,134
  83e868:	dc400115 	stw	r17,4(sp)
  83e86c:	300b883a 	mov	r5,r6
  83e870:	842e0c04 	addi	r16,r16,-18384
  83e874:	2023883a 	mov	r17,r4
  83e878:	380d883a 	mov	r6,r7
  83e87c:	1009883a 	mov	r4,r2
  83e880:	dfc00215 	stw	ra,8(sp)
  83e884:	80000015 	stw	zero,0(r16)
  83e888:	0849ee00 	call	849ee0 <read>
  83e88c:	00ffffc4 	movi	r3,-1
  83e890:	10c00526 	beq	r2,r3,83e8a8 <_read_r+0x50>
  83e894:	dfc00217 	ldw	ra,8(sp)
  83e898:	dc400117 	ldw	r17,4(sp)
  83e89c:	dc000017 	ldw	r16,0(sp)
  83e8a0:	dec00304 	addi	sp,sp,12
  83e8a4:	f800283a 	ret
  83e8a8:	80c00017 	ldw	r3,0(r16)
  83e8ac:	183ff926 	beq	r3,zero,83e894 <__alt_mem_epcs_flash_controller_0+0xff835894>
  83e8b0:	88c00015 	stw	r3,0(r17)
  83e8b4:	003ff706 	br	83e894 <__alt_mem_epcs_flash_controller_0+0xff835894>

0083e8b8 <_realloc_r>:
  83e8b8:	defff604 	addi	sp,sp,-40
  83e8bc:	dc800215 	stw	r18,8(sp)
  83e8c0:	dfc00915 	stw	ra,36(sp)
  83e8c4:	df000815 	stw	fp,32(sp)
  83e8c8:	ddc00715 	stw	r23,28(sp)
  83e8cc:	dd800615 	stw	r22,24(sp)
  83e8d0:	dd400515 	stw	r21,20(sp)
  83e8d4:	dd000415 	stw	r20,16(sp)
  83e8d8:	dcc00315 	stw	r19,12(sp)
  83e8dc:	dc400115 	stw	r17,4(sp)
  83e8e0:	dc000015 	stw	r16,0(sp)
  83e8e4:	3025883a 	mov	r18,r6
  83e8e8:	2800b726 	beq	r5,zero,83ebc8 <_realloc_r+0x310>
  83e8ec:	282b883a 	mov	r21,r5
  83e8f0:	2029883a 	mov	r20,r4
  83e8f4:	084a42c0 	call	84a42c <__malloc_lock>
  83e8f8:	a8bfff17 	ldw	r2,-4(r21)
  83e8fc:	043fff04 	movi	r16,-4
  83e900:	90c002c4 	addi	r3,r18,11
  83e904:	01000584 	movi	r4,22
  83e908:	acfffe04 	addi	r19,r21,-8
  83e90c:	1420703a 	and	r16,r2,r16
  83e910:	20c0332e 	bgeu	r4,r3,83e9e0 <_realloc_r+0x128>
  83e914:	047ffe04 	movi	r17,-8
  83e918:	1c62703a 	and	r17,r3,r17
  83e91c:	8807883a 	mov	r3,r17
  83e920:	88005816 	blt	r17,zero,83ea84 <_realloc_r+0x1cc>
  83e924:	8c805736 	bltu	r17,r18,83ea84 <_realloc_r+0x1cc>
  83e928:	80c0300e 	bge	r16,r3,83e9ec <_realloc_r+0x134>
  83e92c:	070021b4 	movhi	fp,134
  83e930:	e7273004 	addi	fp,fp,-25408
  83e934:	e1c00217 	ldw	r7,8(fp)
  83e938:	9c09883a 	add	r4,r19,r16
  83e93c:	22000117 	ldw	r8,4(r4)
  83e940:	21c06326 	beq	r4,r7,83ead0 <_realloc_r+0x218>
  83e944:	017fff84 	movi	r5,-2
  83e948:	414a703a 	and	r5,r8,r5
  83e94c:	214b883a 	add	r5,r4,r5
  83e950:	29800117 	ldw	r6,4(r5)
  83e954:	3180004c 	andi	r6,r6,1
  83e958:	30003f26 	beq	r6,zero,83ea58 <_realloc_r+0x1a0>
  83e95c:	1080004c 	andi	r2,r2,1
  83e960:	10008326 	beq	r2,zero,83eb70 <_realloc_r+0x2b8>
  83e964:	900b883a 	mov	r5,r18
  83e968:	a009883a 	mov	r4,r20
  83e96c:	08339440 	call	833944 <_malloc_r>
  83e970:	1025883a 	mov	r18,r2
  83e974:	10011e26 	beq	r2,zero,83edf0 <_realloc_r+0x538>
  83e978:	a93fff17 	ldw	r4,-4(r21)
  83e97c:	10fffe04 	addi	r3,r2,-8
  83e980:	00bfff84 	movi	r2,-2
  83e984:	2084703a 	and	r2,r4,r2
  83e988:	9885883a 	add	r2,r19,r2
  83e98c:	1880ee26 	beq	r3,r2,83ed48 <_realloc_r+0x490>
  83e990:	81bfff04 	addi	r6,r16,-4
  83e994:	00800904 	movi	r2,36
  83e998:	1180b836 	bltu	r2,r6,83ec7c <_realloc_r+0x3c4>
  83e99c:	00c004c4 	movi	r3,19
  83e9a0:	19809636 	bltu	r3,r6,83ebfc <_realloc_r+0x344>
  83e9a4:	9005883a 	mov	r2,r18
  83e9a8:	a807883a 	mov	r3,r21
  83e9ac:	19000017 	ldw	r4,0(r3)
  83e9b0:	11000015 	stw	r4,0(r2)
  83e9b4:	19000117 	ldw	r4,4(r3)
  83e9b8:	11000115 	stw	r4,4(r2)
  83e9bc:	18c00217 	ldw	r3,8(r3)
  83e9c0:	10c00215 	stw	r3,8(r2)
  83e9c4:	a80b883a 	mov	r5,r21
  83e9c8:	a009883a 	mov	r4,r20
  83e9cc:	0832c880 	call	832c88 <_free_r>
  83e9d0:	a009883a 	mov	r4,r20
  83e9d4:	084a54c0 	call	84a54c <__malloc_unlock>
  83e9d8:	9005883a 	mov	r2,r18
  83e9dc:	00001206 	br	83ea28 <_realloc_r+0x170>
  83e9e0:	00c00404 	movi	r3,16
  83e9e4:	1823883a 	mov	r17,r3
  83e9e8:	003fce06 	br	83e924 <__alt_mem_epcs_flash_controller_0+0xff835924>
  83e9ec:	a825883a 	mov	r18,r21
  83e9f0:	8445c83a 	sub	r2,r16,r17
  83e9f4:	00c003c4 	movi	r3,15
  83e9f8:	18802636 	bltu	r3,r2,83ea94 <_realloc_r+0x1dc>
  83e9fc:	99800117 	ldw	r6,4(r19)
  83ea00:	9c07883a 	add	r3,r19,r16
  83ea04:	3180004c 	andi	r6,r6,1
  83ea08:	3420b03a 	or	r16,r6,r16
  83ea0c:	9c000115 	stw	r16,4(r19)
  83ea10:	18800117 	ldw	r2,4(r3)
  83ea14:	10800054 	ori	r2,r2,1
  83ea18:	18800115 	stw	r2,4(r3)
  83ea1c:	a009883a 	mov	r4,r20
  83ea20:	084a54c0 	call	84a54c <__malloc_unlock>
  83ea24:	9005883a 	mov	r2,r18
  83ea28:	dfc00917 	ldw	ra,36(sp)
  83ea2c:	df000817 	ldw	fp,32(sp)
  83ea30:	ddc00717 	ldw	r23,28(sp)
  83ea34:	dd800617 	ldw	r22,24(sp)
  83ea38:	dd400517 	ldw	r21,20(sp)
  83ea3c:	dd000417 	ldw	r20,16(sp)
  83ea40:	dcc00317 	ldw	r19,12(sp)
  83ea44:	dc800217 	ldw	r18,8(sp)
  83ea48:	dc400117 	ldw	r17,4(sp)
  83ea4c:	dc000017 	ldw	r16,0(sp)
  83ea50:	dec00a04 	addi	sp,sp,40
  83ea54:	f800283a 	ret
  83ea58:	017fff04 	movi	r5,-4
  83ea5c:	414a703a 	and	r5,r8,r5
  83ea60:	814d883a 	add	r6,r16,r5
  83ea64:	30c01f16 	blt	r6,r3,83eae4 <_realloc_r+0x22c>
  83ea68:	20800317 	ldw	r2,12(r4)
  83ea6c:	20c00217 	ldw	r3,8(r4)
  83ea70:	a825883a 	mov	r18,r21
  83ea74:	3021883a 	mov	r16,r6
  83ea78:	18800315 	stw	r2,12(r3)
  83ea7c:	10c00215 	stw	r3,8(r2)
  83ea80:	003fdb06 	br	83e9f0 <__alt_mem_epcs_flash_controller_0+0xff8359f0>
  83ea84:	00800304 	movi	r2,12
  83ea88:	a0800015 	stw	r2,0(r20)
  83ea8c:	0005883a 	mov	r2,zero
  83ea90:	003fe506 	br	83ea28 <__alt_mem_epcs_flash_controller_0+0xff835a28>
  83ea94:	98c00117 	ldw	r3,4(r19)
  83ea98:	9c4b883a 	add	r5,r19,r17
  83ea9c:	11000054 	ori	r4,r2,1
  83eaa0:	18c0004c 	andi	r3,r3,1
  83eaa4:	1c62b03a 	or	r17,r3,r17
  83eaa8:	9c400115 	stw	r17,4(r19)
  83eaac:	29000115 	stw	r4,4(r5)
  83eab0:	2885883a 	add	r2,r5,r2
  83eab4:	10c00117 	ldw	r3,4(r2)
  83eab8:	29400204 	addi	r5,r5,8
  83eabc:	a009883a 	mov	r4,r20
  83eac0:	18c00054 	ori	r3,r3,1
  83eac4:	10c00115 	stw	r3,4(r2)
  83eac8:	0832c880 	call	832c88 <_free_r>
  83eacc:	003fd306 	br	83ea1c <__alt_mem_epcs_flash_controller_0+0xff835a1c>
  83ead0:	017fff04 	movi	r5,-4
  83ead4:	414a703a 	and	r5,r8,r5
  83ead8:	89800404 	addi	r6,r17,16
  83eadc:	8151883a 	add	r8,r16,r5
  83eae0:	4180590e 	bge	r8,r6,83ec48 <_realloc_r+0x390>
  83eae4:	1080004c 	andi	r2,r2,1
  83eae8:	103f9e1e 	bne	r2,zero,83e964 <__alt_mem_epcs_flash_controller_0+0xff835964>
  83eaec:	adbffe17 	ldw	r22,-8(r21)
  83eaf0:	00bfff04 	movi	r2,-4
  83eaf4:	9dadc83a 	sub	r22,r19,r22
  83eaf8:	b1800117 	ldw	r6,4(r22)
  83eafc:	3084703a 	and	r2,r6,r2
  83eb00:	20002026 	beq	r4,zero,83eb84 <_realloc_r+0x2cc>
  83eb04:	80af883a 	add	r23,r16,r2
  83eb08:	b96f883a 	add	r23,r23,r5
  83eb0c:	21c05f26 	beq	r4,r7,83ec8c <_realloc_r+0x3d4>
  83eb10:	b8c01c16 	blt	r23,r3,83eb84 <_realloc_r+0x2cc>
  83eb14:	20800317 	ldw	r2,12(r4)
  83eb18:	20c00217 	ldw	r3,8(r4)
  83eb1c:	81bfff04 	addi	r6,r16,-4
  83eb20:	01000904 	movi	r4,36
  83eb24:	18800315 	stw	r2,12(r3)
  83eb28:	10c00215 	stw	r3,8(r2)
  83eb2c:	b0c00217 	ldw	r3,8(r22)
  83eb30:	b0800317 	ldw	r2,12(r22)
  83eb34:	b4800204 	addi	r18,r22,8
  83eb38:	18800315 	stw	r2,12(r3)
  83eb3c:	10c00215 	stw	r3,8(r2)
  83eb40:	21801b36 	bltu	r4,r6,83ebb0 <_realloc_r+0x2f8>
  83eb44:	008004c4 	movi	r2,19
  83eb48:	1180352e 	bgeu	r2,r6,83ec20 <_realloc_r+0x368>
  83eb4c:	a8800017 	ldw	r2,0(r21)
  83eb50:	b0800215 	stw	r2,8(r22)
  83eb54:	a8800117 	ldw	r2,4(r21)
  83eb58:	b0800315 	stw	r2,12(r22)
  83eb5c:	008006c4 	movi	r2,27
  83eb60:	11807f36 	bltu	r2,r6,83ed60 <_realloc_r+0x4a8>
  83eb64:	b0800404 	addi	r2,r22,16
  83eb68:	ad400204 	addi	r21,r21,8
  83eb6c:	00002d06 	br	83ec24 <_realloc_r+0x36c>
  83eb70:	adbffe17 	ldw	r22,-8(r21)
  83eb74:	00bfff04 	movi	r2,-4
  83eb78:	9dadc83a 	sub	r22,r19,r22
  83eb7c:	b1000117 	ldw	r4,4(r22)
  83eb80:	2084703a 	and	r2,r4,r2
  83eb84:	b03f7726 	beq	r22,zero,83e964 <__alt_mem_epcs_flash_controller_0+0xff835964>
  83eb88:	80af883a 	add	r23,r16,r2
  83eb8c:	b8ff7516 	blt	r23,r3,83e964 <__alt_mem_epcs_flash_controller_0+0xff835964>
  83eb90:	b0800317 	ldw	r2,12(r22)
  83eb94:	b0c00217 	ldw	r3,8(r22)
  83eb98:	81bfff04 	addi	r6,r16,-4
  83eb9c:	01000904 	movi	r4,36
  83eba0:	18800315 	stw	r2,12(r3)
  83eba4:	10c00215 	stw	r3,8(r2)
  83eba8:	b4800204 	addi	r18,r22,8
  83ebac:	21bfe52e 	bgeu	r4,r6,83eb44 <__alt_mem_epcs_flash_controller_0+0xff835b44>
  83ebb0:	a80b883a 	mov	r5,r21
  83ebb4:	9009883a 	mov	r4,r18
  83ebb8:	083d6440 	call	83d644 <memmove>
  83ebbc:	b821883a 	mov	r16,r23
  83ebc0:	b027883a 	mov	r19,r22
  83ebc4:	003f8a06 	br	83e9f0 <__alt_mem_epcs_flash_controller_0+0xff8359f0>
  83ebc8:	300b883a 	mov	r5,r6
  83ebcc:	dfc00917 	ldw	ra,36(sp)
  83ebd0:	df000817 	ldw	fp,32(sp)
  83ebd4:	ddc00717 	ldw	r23,28(sp)
  83ebd8:	dd800617 	ldw	r22,24(sp)
  83ebdc:	dd400517 	ldw	r21,20(sp)
  83ebe0:	dd000417 	ldw	r20,16(sp)
  83ebe4:	dcc00317 	ldw	r19,12(sp)
  83ebe8:	dc800217 	ldw	r18,8(sp)
  83ebec:	dc400117 	ldw	r17,4(sp)
  83ebf0:	dc000017 	ldw	r16,0(sp)
  83ebf4:	dec00a04 	addi	sp,sp,40
  83ebf8:	08339441 	jmpi	833944 <_malloc_r>
  83ebfc:	a8c00017 	ldw	r3,0(r21)
  83ec00:	90c00015 	stw	r3,0(r18)
  83ec04:	a8c00117 	ldw	r3,4(r21)
  83ec08:	90c00115 	stw	r3,4(r18)
  83ec0c:	00c006c4 	movi	r3,27
  83ec10:	19804536 	bltu	r3,r6,83ed28 <_realloc_r+0x470>
  83ec14:	90800204 	addi	r2,r18,8
  83ec18:	a8c00204 	addi	r3,r21,8
  83ec1c:	003f6306 	br	83e9ac <__alt_mem_epcs_flash_controller_0+0xff8359ac>
  83ec20:	9005883a 	mov	r2,r18
  83ec24:	a8c00017 	ldw	r3,0(r21)
  83ec28:	b821883a 	mov	r16,r23
  83ec2c:	b027883a 	mov	r19,r22
  83ec30:	10c00015 	stw	r3,0(r2)
  83ec34:	a8c00117 	ldw	r3,4(r21)
  83ec38:	10c00115 	stw	r3,4(r2)
  83ec3c:	a8c00217 	ldw	r3,8(r21)
  83ec40:	10c00215 	stw	r3,8(r2)
  83ec44:	003f6a06 	br	83e9f0 <__alt_mem_epcs_flash_controller_0+0xff8359f0>
  83ec48:	9c67883a 	add	r19,r19,r17
  83ec4c:	4445c83a 	sub	r2,r8,r17
  83ec50:	e4c00215 	stw	r19,8(fp)
  83ec54:	10800054 	ori	r2,r2,1
  83ec58:	98800115 	stw	r2,4(r19)
  83ec5c:	a8bfff17 	ldw	r2,-4(r21)
  83ec60:	a009883a 	mov	r4,r20
  83ec64:	1080004c 	andi	r2,r2,1
  83ec68:	1462b03a 	or	r17,r2,r17
  83ec6c:	ac7fff15 	stw	r17,-4(r21)
  83ec70:	084a54c0 	call	84a54c <__malloc_unlock>
  83ec74:	a805883a 	mov	r2,r21
  83ec78:	003f6b06 	br	83ea28 <__alt_mem_epcs_flash_controller_0+0xff835a28>
  83ec7c:	a80b883a 	mov	r5,r21
  83ec80:	9009883a 	mov	r4,r18
  83ec84:	083d6440 	call	83d644 <memmove>
  83ec88:	003f4e06 	br	83e9c4 <__alt_mem_epcs_flash_controller_0+0xff8359c4>
  83ec8c:	89000404 	addi	r4,r17,16
  83ec90:	b93fbc16 	blt	r23,r4,83eb84 <__alt_mem_epcs_flash_controller_0+0xff835b84>
  83ec94:	b0800317 	ldw	r2,12(r22)
  83ec98:	b0c00217 	ldw	r3,8(r22)
  83ec9c:	81bfff04 	addi	r6,r16,-4
  83eca0:	01000904 	movi	r4,36
  83eca4:	18800315 	stw	r2,12(r3)
  83eca8:	10c00215 	stw	r3,8(r2)
  83ecac:	b4800204 	addi	r18,r22,8
  83ecb0:	21804336 	bltu	r4,r6,83edc0 <_realloc_r+0x508>
  83ecb4:	008004c4 	movi	r2,19
  83ecb8:	11803f2e 	bgeu	r2,r6,83edb8 <_realloc_r+0x500>
  83ecbc:	a8800017 	ldw	r2,0(r21)
  83ecc0:	b0800215 	stw	r2,8(r22)
  83ecc4:	a8800117 	ldw	r2,4(r21)
  83ecc8:	b0800315 	stw	r2,12(r22)
  83eccc:	008006c4 	movi	r2,27
  83ecd0:	11803f36 	bltu	r2,r6,83edd0 <_realloc_r+0x518>
  83ecd4:	b0800404 	addi	r2,r22,16
  83ecd8:	ad400204 	addi	r21,r21,8
  83ecdc:	a8c00017 	ldw	r3,0(r21)
  83ece0:	10c00015 	stw	r3,0(r2)
  83ece4:	a8c00117 	ldw	r3,4(r21)
  83ece8:	10c00115 	stw	r3,4(r2)
  83ecec:	a8c00217 	ldw	r3,8(r21)
  83ecf0:	10c00215 	stw	r3,8(r2)
  83ecf4:	b447883a 	add	r3,r22,r17
  83ecf8:	bc45c83a 	sub	r2,r23,r17
  83ecfc:	e0c00215 	stw	r3,8(fp)
  83ed00:	10800054 	ori	r2,r2,1
  83ed04:	18800115 	stw	r2,4(r3)
  83ed08:	b0800117 	ldw	r2,4(r22)
  83ed0c:	a009883a 	mov	r4,r20
  83ed10:	1080004c 	andi	r2,r2,1
  83ed14:	1462b03a 	or	r17,r2,r17
  83ed18:	b4400115 	stw	r17,4(r22)
  83ed1c:	084a54c0 	call	84a54c <__malloc_unlock>
  83ed20:	9005883a 	mov	r2,r18
  83ed24:	003f4006 	br	83ea28 <__alt_mem_epcs_flash_controller_0+0xff835a28>
  83ed28:	a8c00217 	ldw	r3,8(r21)
  83ed2c:	90c00215 	stw	r3,8(r18)
  83ed30:	a8c00317 	ldw	r3,12(r21)
  83ed34:	90c00315 	stw	r3,12(r18)
  83ed38:	30801126 	beq	r6,r2,83ed80 <_realloc_r+0x4c8>
  83ed3c:	90800404 	addi	r2,r18,16
  83ed40:	a8c00404 	addi	r3,r21,16
  83ed44:	003f1906 	br	83e9ac <__alt_mem_epcs_flash_controller_0+0xff8359ac>
  83ed48:	90ffff17 	ldw	r3,-4(r18)
  83ed4c:	00bfff04 	movi	r2,-4
  83ed50:	a825883a 	mov	r18,r21
  83ed54:	1884703a 	and	r2,r3,r2
  83ed58:	80a1883a 	add	r16,r16,r2
  83ed5c:	003f2406 	br	83e9f0 <__alt_mem_epcs_flash_controller_0+0xff8359f0>
  83ed60:	a8800217 	ldw	r2,8(r21)
  83ed64:	b0800415 	stw	r2,16(r22)
  83ed68:	a8800317 	ldw	r2,12(r21)
  83ed6c:	b0800515 	stw	r2,20(r22)
  83ed70:	31000a26 	beq	r6,r4,83ed9c <_realloc_r+0x4e4>
  83ed74:	b0800604 	addi	r2,r22,24
  83ed78:	ad400404 	addi	r21,r21,16
  83ed7c:	003fa906 	br	83ec24 <__alt_mem_epcs_flash_controller_0+0xff835c24>
  83ed80:	a9000417 	ldw	r4,16(r21)
  83ed84:	90800604 	addi	r2,r18,24
  83ed88:	a8c00604 	addi	r3,r21,24
  83ed8c:	91000415 	stw	r4,16(r18)
  83ed90:	a9000517 	ldw	r4,20(r21)
  83ed94:	91000515 	stw	r4,20(r18)
  83ed98:	003f0406 	br	83e9ac <__alt_mem_epcs_flash_controller_0+0xff8359ac>
  83ed9c:	a8c00417 	ldw	r3,16(r21)
  83eda0:	ad400604 	addi	r21,r21,24
  83eda4:	b0800804 	addi	r2,r22,32
  83eda8:	b0c00615 	stw	r3,24(r22)
  83edac:	a8ffff17 	ldw	r3,-4(r21)
  83edb0:	b0c00715 	stw	r3,28(r22)
  83edb4:	003f9b06 	br	83ec24 <__alt_mem_epcs_flash_controller_0+0xff835c24>
  83edb8:	9005883a 	mov	r2,r18
  83edbc:	003fc706 	br	83ecdc <__alt_mem_epcs_flash_controller_0+0xff835cdc>
  83edc0:	a80b883a 	mov	r5,r21
  83edc4:	9009883a 	mov	r4,r18
  83edc8:	083d6440 	call	83d644 <memmove>
  83edcc:	003fc906 	br	83ecf4 <__alt_mem_epcs_flash_controller_0+0xff835cf4>
  83edd0:	a8800217 	ldw	r2,8(r21)
  83edd4:	b0800415 	stw	r2,16(r22)
  83edd8:	a8800317 	ldw	r2,12(r21)
  83eddc:	b0800515 	stw	r2,20(r22)
  83ede0:	31000726 	beq	r6,r4,83ee00 <_realloc_r+0x548>
  83ede4:	b0800604 	addi	r2,r22,24
  83ede8:	ad400404 	addi	r21,r21,16
  83edec:	003fbb06 	br	83ecdc <__alt_mem_epcs_flash_controller_0+0xff835cdc>
  83edf0:	a009883a 	mov	r4,r20
  83edf4:	084a54c0 	call	84a54c <__malloc_unlock>
  83edf8:	0005883a 	mov	r2,zero
  83edfc:	003f0a06 	br	83ea28 <__alt_mem_epcs_flash_controller_0+0xff835a28>
  83ee00:	a8c00417 	ldw	r3,16(r21)
  83ee04:	ad400604 	addi	r21,r21,24
  83ee08:	b0800804 	addi	r2,r22,32
  83ee0c:	b0c00615 	stw	r3,24(r22)
  83ee10:	a8ffff17 	ldw	r3,-4(r21)
  83ee14:	b0c00715 	stw	r3,28(r22)
  83ee18:	003fb006 	br	83ecdc <__alt_mem_epcs_flash_controller_0+0xff835cdc>

0083ee1c <__fpclassifyd>:
  83ee1c:	00a00034 	movhi	r2,32768
  83ee20:	10bfffc4 	addi	r2,r2,-1
  83ee24:	2884703a 	and	r2,r5,r2
  83ee28:	10000726 	beq	r2,zero,83ee48 <__fpclassifyd+0x2c>
  83ee2c:	00fffc34 	movhi	r3,65520
  83ee30:	019ff834 	movhi	r6,32736
  83ee34:	28c7883a 	add	r3,r5,r3
  83ee38:	31bfffc4 	addi	r6,r6,-1
  83ee3c:	30c00536 	bltu	r6,r3,83ee54 <__fpclassifyd+0x38>
  83ee40:	00800104 	movi	r2,4
  83ee44:	f800283a 	ret
  83ee48:	2000021e 	bne	r4,zero,83ee54 <__fpclassifyd+0x38>
  83ee4c:	00800084 	movi	r2,2
  83ee50:	f800283a 	ret
  83ee54:	00dffc34 	movhi	r3,32752
  83ee58:	019ff834 	movhi	r6,32736
  83ee5c:	28cb883a 	add	r5,r5,r3
  83ee60:	31bfffc4 	addi	r6,r6,-1
  83ee64:	317ff62e 	bgeu	r6,r5,83ee40 <__alt_mem_epcs_flash_controller_0+0xff835e40>
  83ee68:	01400434 	movhi	r5,16
  83ee6c:	297fffc4 	addi	r5,r5,-1
  83ee70:	28800236 	bltu	r5,r2,83ee7c <__fpclassifyd+0x60>
  83ee74:	008000c4 	movi	r2,3
  83ee78:	f800283a 	ret
  83ee7c:	10c00226 	beq	r2,r3,83ee88 <__fpclassifyd+0x6c>
  83ee80:	0005883a 	mov	r2,zero
  83ee84:	f800283a 	ret
  83ee88:	2005003a 	cmpeq	r2,r4,zero
  83ee8c:	f800283a 	ret

0083ee90 <__sccl>:
  83ee90:	2a000003 	ldbu	r8,0(r5)
  83ee94:	00801784 	movi	r2,94
  83ee98:	40802a26 	beq	r8,r2,83ef44 <__sccl+0xb4>
  83ee9c:	29400044 	addi	r5,r5,1
  83eea0:	000f883a 	mov	r7,zero
  83eea4:	0013883a 	mov	r9,zero
  83eea8:	2007883a 	mov	r3,r4
  83eeac:	21804004 	addi	r6,r4,256
  83eeb0:	19c00005 	stb	r7,0(r3)
  83eeb4:	18c00044 	addi	r3,r3,1
  83eeb8:	19bffd1e 	bne	r3,r6,83eeb0 <__alt_mem_epcs_flash_controller_0+0xff835eb0>
  83eebc:	40001126 	beq	r8,zero,83ef04 <__sccl+0x74>
  83eec0:	00800044 	movi	r2,1
  83eec4:	124fc83a 	sub	r7,r2,r9
  83eec8:	02800b44 	movi	r10,45
  83eecc:	02c01744 	movi	r11,93
  83eed0:	2205883a 	add	r2,r4,r8
  83eed4:	11c00005 	stb	r7,0(r2)
  83eed8:	28800044 	addi	r2,r5,1
  83eedc:	28c00003 	ldbu	r3,0(r5)
  83eee0:	1a800a26 	beq	r3,r10,83ef0c <__sccl+0x7c>
  83eee4:	1ac00426 	beq	r3,r11,83eef8 <__sccl+0x68>
  83eee8:	18000426 	beq	r3,zero,83eefc <__sccl+0x6c>
  83eeec:	1811883a 	mov	r8,r3
  83eef0:	100b883a 	mov	r5,r2
  83eef4:	003ff606 	br	83eed0 <__alt_mem_epcs_flash_controller_0+0xff835ed0>
  83eef8:	f800283a 	ret
  83eefc:	2805883a 	mov	r2,r5
  83ef00:	f800283a 	ret
  83ef04:	28bfffc4 	addi	r2,r5,-1
  83ef08:	f800283a 	ret
  83ef0c:	12400003 	ldbu	r9,0(r2)
  83ef10:	4ac01126 	beq	r9,r11,83ef58 <__sccl+0xc8>
  83ef14:	4a001016 	blt	r9,r8,83ef58 <__sccl+0xc8>
  83ef18:	41800044 	addi	r6,r8,1
  83ef1c:	29400084 	addi	r5,r5,2
  83ef20:	2187883a 	add	r3,r4,r6
  83ef24:	00000106 	br	83ef2c <__sccl+0x9c>
  83ef28:	31800044 	addi	r6,r6,1
  83ef2c:	19c00005 	stb	r7,0(r3)
  83ef30:	3011883a 	mov	r8,r6
  83ef34:	18c00044 	addi	r3,r3,1
  83ef38:	327ffb16 	blt	r6,r9,83ef28 <__alt_mem_epcs_flash_controller_0+0xff835f28>
  83ef3c:	10800084 	addi	r2,r2,2
  83ef40:	003fe606 	br	83eedc <__alt_mem_epcs_flash_controller_0+0xff835edc>
  83ef44:	2a000043 	ldbu	r8,1(r5)
  83ef48:	01c00044 	movi	r7,1
  83ef4c:	29400084 	addi	r5,r5,2
  83ef50:	02400044 	movi	r9,1
  83ef54:	003fd406 	br	83eea8 <__alt_mem_epcs_flash_controller_0+0xff835ea8>
  83ef58:	5011883a 	mov	r8,r10
  83ef5c:	003fe406 	br	83eef0 <__alt_mem_epcs_flash_controller_0+0xff835ef0>

0083ef60 <nanf>:
  83ef60:	009ff034 	movhi	r2,32704
  83ef64:	f800283a 	ret

0083ef68 <strcmp>:
  83ef68:	2144b03a 	or	r2,r4,r5
  83ef6c:	108000cc 	andi	r2,r2,3
  83ef70:	1000171e 	bne	r2,zero,83efd0 <strcmp+0x68>
  83ef74:	20800017 	ldw	r2,0(r4)
  83ef78:	28c00017 	ldw	r3,0(r5)
  83ef7c:	10c0141e 	bne	r2,r3,83efd0 <strcmp+0x68>
  83ef80:	027fbff4 	movhi	r9,65279
  83ef84:	4a7fbfc4 	addi	r9,r9,-257
  83ef88:	0086303a 	nor	r3,zero,r2
  83ef8c:	02202074 	movhi	r8,32897
  83ef90:	1245883a 	add	r2,r2,r9
  83ef94:	42202004 	addi	r8,r8,-32640
  83ef98:	10c4703a 	and	r2,r2,r3
  83ef9c:	1204703a 	and	r2,r2,r8
  83efa0:	10000226 	beq	r2,zero,83efac <strcmp+0x44>
  83efa4:	00002306 	br	83f034 <strcmp+0xcc>
  83efa8:	1000221e 	bne	r2,zero,83f034 <strcmp+0xcc>
  83efac:	21000104 	addi	r4,r4,4
  83efb0:	20c00017 	ldw	r3,0(r4)
  83efb4:	29400104 	addi	r5,r5,4
  83efb8:	29800017 	ldw	r6,0(r5)
  83efbc:	1a4f883a 	add	r7,r3,r9
  83efc0:	00c4303a 	nor	r2,zero,r3
  83efc4:	3884703a 	and	r2,r7,r2
  83efc8:	1204703a 	and	r2,r2,r8
  83efcc:	19bff626 	beq	r3,r6,83efa8 <__alt_mem_epcs_flash_controller_0+0xff835fa8>
  83efd0:	20800003 	ldbu	r2,0(r4)
  83efd4:	10c03fcc 	andi	r3,r2,255
  83efd8:	18c0201c 	xori	r3,r3,128
  83efdc:	18ffe004 	addi	r3,r3,-128
  83efe0:	18000c26 	beq	r3,zero,83f014 <strcmp+0xac>
  83efe4:	29800007 	ldb	r6,0(r5)
  83efe8:	19800326 	beq	r3,r6,83eff8 <strcmp+0x90>
  83efec:	00001306 	br	83f03c <strcmp+0xd4>
  83eff0:	29800007 	ldb	r6,0(r5)
  83eff4:	11800b1e 	bne	r2,r6,83f024 <strcmp+0xbc>
  83eff8:	21000044 	addi	r4,r4,1
  83effc:	20c00003 	ldbu	r3,0(r4)
  83f000:	29400044 	addi	r5,r5,1
  83f004:	18803fcc 	andi	r2,r3,255
  83f008:	1080201c 	xori	r2,r2,128
  83f00c:	10bfe004 	addi	r2,r2,-128
  83f010:	103ff71e 	bne	r2,zero,83eff0 <__alt_mem_epcs_flash_controller_0+0xff835ff0>
  83f014:	0007883a 	mov	r3,zero
  83f018:	28800003 	ldbu	r2,0(r5)
  83f01c:	1885c83a 	sub	r2,r3,r2
  83f020:	f800283a 	ret
  83f024:	28800003 	ldbu	r2,0(r5)
  83f028:	18c03fcc 	andi	r3,r3,255
  83f02c:	1885c83a 	sub	r2,r3,r2
  83f030:	f800283a 	ret
  83f034:	0005883a 	mov	r2,zero
  83f038:	f800283a 	ret
  83f03c:	10c03fcc 	andi	r3,r2,255
  83f040:	003ff506 	br	83f018 <__alt_mem_epcs_flash_controller_0+0xff836018>

0083f044 <sulp>:
  83f044:	defffd04 	addi	sp,sp,-12
  83f048:	dc400115 	stw	r17,4(sp)
  83f04c:	3023883a 	mov	r17,r6
  83f050:	dc000015 	stw	r16,0(sp)
  83f054:	dfc00215 	stw	ra,8(sp)
  83f058:	2821883a 	mov	r16,r5
  83f05c:	083e3800 	call	83e380 <__ulp>
  83f060:	88000c26 	beq	r17,zero,83f094 <sulp+0x50>
  83f064:	841ffc2c 	andhi	r16,r16,32752
  83f068:	8020d53a 	srli	r16,r16,20
  83f06c:	01c01ac4 	movi	r7,107
  83f070:	3c21c83a 	sub	r16,r7,r16
  83f074:	0400070e 	bge	zero,r16,83f094 <sulp+0x50>
  83f078:	8020953a 	slli	r16,r16,20
  83f07c:	01cffc34 	movhi	r7,16368
  83f080:	000d883a 	mov	r6,zero
  83f084:	81cf883a 	add	r7,r16,r7
  83f088:	1009883a 	mov	r4,r2
  83f08c:	180b883a 	mov	r5,r3
  83f090:	083149c0 	call	83149c <__muldf3>
  83f094:	dfc00217 	ldw	ra,8(sp)
  83f098:	dc400117 	ldw	r17,4(sp)
  83f09c:	dc000017 	ldw	r16,0(sp)
  83f0a0:	dec00304 	addi	sp,sp,12
  83f0a4:	f800283a 	ret

0083f0a8 <_strtod_r>:
  83f0a8:	deffe204 	addi	sp,sp,-120
  83f0ac:	ddc01b15 	stw	r23,108(sp)
  83f0b0:	dd801a15 	stw	r22,104(sp)
  83f0b4:	dc401515 	stw	r17,84(sp)
  83f0b8:	dfc01d15 	stw	ra,116(sp)
  83f0bc:	df001c15 	stw	fp,112(sp)
  83f0c0:	dd401915 	stw	r21,100(sp)
  83f0c4:	dd001815 	stw	r20,96(sp)
  83f0c8:	dcc01715 	stw	r19,92(sp)
  83f0cc:	dc801615 	stw	r18,88(sp)
  83f0d0:	dc001415 	stw	r16,80(sp)
  83f0d4:	d8000515 	stw	zero,20(sp)
  83f0d8:	d9400615 	stw	r5,24(sp)
  83f0dc:	2807883a 	mov	r3,r5
  83f0e0:	1f000003 	ldbu	fp,0(r3)
  83f0e4:	01c02134 	movhi	r7,132
  83f0e8:	2023883a 	mov	r17,r4
  83f0ec:	d9400715 	stw	r5,28(sp)
  83f0f0:	d9800915 	stw	r6,36(sp)
  83f0f4:	01000b44 	movi	r4,45
  83f0f8:	e0803fcc 	andi	r2,fp,255
  83f0fc:	39fc4704 	addi	r7,r7,-3812
  83f100:	002f883a 	mov	r23,zero
  83f104:	002d883a 	mov	r22,zero
  83f108:	20809c36 	bltu	r4,r2,83f37c <_strtod_r+0x2d4>
  83f10c:	100490ba 	slli	r2,r2,2
  83f110:	11c5883a 	add	r2,r2,r7
  83f114:	10800017 	ldw	r2,0(r2)
  83f118:	1000683a 	jmp	r2
  83f11c:	0083f1dc 	xori	r2,zero,4039
  83f120:	0083f37c 	xorhi	r2,zero,4045
  83f124:	0083f37c 	xorhi	r2,zero,4045
  83f128:	0083f37c 	xorhi	r2,zero,4045
  83f12c:	0083f37c 	xorhi	r2,zero,4045
  83f130:	0083f37c 	xorhi	r2,zero,4045
  83f134:	0083f37c 	xorhi	r2,zero,4045
  83f138:	0083f37c 	xorhi	r2,zero,4045
  83f13c:	0083f37c 	xorhi	r2,zero,4045
  83f140:	0083f368 	cmpgeui	r2,zero,4045
  83f144:	0083f368 	cmpgeui	r2,zero,4045
  83f148:	0083f368 	cmpgeui	r2,zero,4045
  83f14c:	0083f368 	cmpgeui	r2,zero,4045
  83f150:	0083f368 	cmpgeui	r2,zero,4045
  83f154:	0083f37c 	xorhi	r2,zero,4045
  83f158:	0083f37c 	xorhi	r2,zero,4045
  83f15c:	0083f37c 	xorhi	r2,zero,4045
  83f160:	0083f37c 	xorhi	r2,zero,4045
  83f164:	0083f37c 	xorhi	r2,zero,4045
  83f168:	0083f37c 	xorhi	r2,zero,4045
  83f16c:	0083f37c 	xorhi	r2,zero,4045
  83f170:	0083f37c 	xorhi	r2,zero,4045
  83f174:	0083f37c 	xorhi	r2,zero,4045
  83f178:	0083f37c 	xorhi	r2,zero,4045
  83f17c:	0083f37c 	xorhi	r2,zero,4045
  83f180:	0083f37c 	xorhi	r2,zero,4045
  83f184:	0083f37c 	xorhi	r2,zero,4045
  83f188:	0083f37c 	xorhi	r2,zero,4045
  83f18c:	0083f37c 	xorhi	r2,zero,4045
  83f190:	0083f37c 	xorhi	r2,zero,4045
  83f194:	0083f37c 	xorhi	r2,zero,4045
  83f198:	0083f37c 	xorhi	r2,zero,4045
  83f19c:	0083f368 	cmpgeui	r2,zero,4045
  83f1a0:	0083f37c 	xorhi	r2,zero,4045
  83f1a4:	0083f37c 	xorhi	r2,zero,4045
  83f1a8:	0083f37c 	xorhi	r2,zero,4045
  83f1ac:	0083f37c 	xorhi	r2,zero,4045
  83f1b0:	0083f37c 	xorhi	r2,zero,4045
  83f1b4:	0083f37c 	xorhi	r2,zero,4045
  83f1b8:	0083f37c 	xorhi	r2,zero,4045
  83f1bc:	0083f37c 	xorhi	r2,zero,4045
  83f1c0:	0083f37c 	xorhi	r2,zero,4045
  83f1c4:	0083f37c 	xorhi	r2,zero,4045
  83f1c8:	0083f240 	call	83f24 <OSCtxSw_SWITCH_PC+0x83ee4>
  83f1cc:	0083f37c 	xorhi	r2,zero,4045
  83f1d0:	0083f35c 	xori	r2,zero,4045
  83f1d4:	00801244 	movi	r2,73
  83f1d8:	b8844726 	beq	r23,r2,8402f8 <_strtod_r+0x1250>
  83f1dc:	d9000917 	ldw	r4,36(sp)
  83f1e0:	d8000815 	stw	zero,32(sp)
  83f1e4:	0039883a 	mov	fp,zero
  83f1e8:	20000726 	beq	r4,zero,83f208 <_strtod_r+0x160>
  83f1ec:	dc800717 	ldw	r18,28(sp)
  83f1f0:	d8000a15 	stw	zero,40(sp)
  83f1f4:	d9400917 	ldw	r5,36(sp)
  83f1f8:	2c800015 	stw	r18,0(r5)
  83f1fc:	d8800a17 	ldw	r2,40(sp)
  83f200:	10000126 	beq	r2,zero,83f208 <_strtod_r+0x160>
  83f204:	e720003c 	xorhi	fp,fp,32768
  83f208:	d8800817 	ldw	r2,32(sp)
  83f20c:	e007883a 	mov	r3,fp
  83f210:	dfc01d17 	ldw	ra,116(sp)
  83f214:	df001c17 	ldw	fp,112(sp)
  83f218:	ddc01b17 	ldw	r23,108(sp)
  83f21c:	dd801a17 	ldw	r22,104(sp)
  83f220:	dd401917 	ldw	r21,100(sp)
  83f224:	dd001817 	ldw	r20,96(sp)
  83f228:	dcc01717 	ldw	r19,92(sp)
  83f22c:	dc801617 	ldw	r18,88(sp)
  83f230:	dc401517 	ldw	r17,84(sp)
  83f234:	dc001417 	ldw	r16,80(sp)
  83f238:	dec01e04 	addi	sp,sp,120
  83f23c:	f800283a 	ret
  83f240:	d8000a15 	stw	zero,40(sp)
  83f244:	1c000044 	addi	r16,r3,1
  83f248:	dc000615 	stw	r16,24(sp)
  83f24c:	1f000043 	ldbu	fp,1(r3)
  83f250:	e0803fcc 	andi	r2,fp,255
  83f254:	1080201c 	xori	r2,r2,128
  83f258:	10bfe004 	addi	r2,r2,-128
  83f25c:	103fdf26 	beq	r2,zero,83f1dc <__alt_mem_epcs_flash_controller_0+0xff8361dc>
  83f260:	e1003fcc 	andi	r4,fp,255
  83f264:	2100201c 	xori	r4,r4,128
  83f268:	213fe004 	addi	r4,r4,-128
  83f26c:	00800c04 	movi	r2,48
  83f270:	2080d426 	beq	r4,r2,83f5c4 <_strtod_r+0x51c>
  83f274:	dc000815 	stw	r16,32(sp)
  83f278:	d8000c15 	stw	zero,48(sp)
  83f27c:	e0bff404 	addi	r2,fp,-48
  83f280:	10803fcc 	andi	r2,r2,255
  83f284:	05400244 	movi	r21,9
  83f288:	a8837836 	bltu	r21,r2,84006c <_strtod_r+0xfc4>
  83f28c:	dc800817 	ldw	r18,32(sp)
  83f290:	0029883a 	mov	r20,zero
  83f294:	0027883a 	mov	r19,zero
  83f298:	0021883a 	mov	r16,zero
  83f29c:	05800204 	movi	r22,8
  83f2a0:	b4003916 	blt	r22,r16,83f388 <_strtod_r+0x2e0>
  83f2a4:	e7003fcc 	andi	fp,fp,255
  83f2a8:	9809883a 	mov	r4,r19
  83f2ac:	01400284 	movi	r5,10
  83f2b0:	e700201c 	xori	fp,fp,128
  83f2b4:	08305040 	call	830504 <__mulsi3>
  83f2b8:	e73fe004 	addi	fp,fp,-128
  83f2bc:	1705883a 	add	r2,r2,fp
  83f2c0:	14fff404 	addi	r19,r2,-48
  83f2c4:	94800044 	addi	r18,r18,1
  83f2c8:	dc800615 	stw	r18,24(sp)
  83f2cc:	97000003 	ldbu	fp,0(r18)
  83f2d0:	84000044 	addi	r16,r16,1
  83f2d4:	e0bff404 	addi	r2,fp,-48
  83f2d8:	10803fcc 	andi	r2,r2,255
  83f2dc:	a8bff02e 	bgeu	r21,r2,83f2a0 <__alt_mem_epcs_flash_controller_0+0xff8362a0>
  83f2e0:	e5c03fcc 	andi	r23,fp,255
  83f2e4:	bdc0201c 	xori	r23,r23,128
  83f2e8:	bdffe004 	addi	r23,r23,-128
  83f2ec:	8809883a 	mov	r4,r17
  83f2f0:	083d2ac0 	call	83d2ac <_localeconv_r>
  83f2f4:	8809883a 	mov	r4,r17
  83f2f8:	15400017 	ldw	r21,0(r2)
  83f2fc:	083d2ac0 	call	83d2ac <_localeconv_r>
  83f300:	11000017 	ldw	r4,0(r2)
  83f304:	0834c200 	call	834c20 <strlen>
  83f308:	100d883a 	mov	r6,r2
  83f30c:	a80b883a 	mov	r5,r21
  83f310:	9009883a 	mov	r4,r18
  83f314:	0834cb80 	call	834cb8 <strncmp>
  83f318:	1000bd26 	beq	r2,zero,83f610 <_strtod_r+0x568>
  83f31c:	8039883a 	mov	fp,r16
  83f320:	002d883a 	mov	r22,zero
  83f324:	d8000b15 	stw	zero,44(sp)
  83f328:	0025883a 	mov	r18,zero
  83f32c:	00801944 	movi	r2,101
  83f330:	b8806026 	beq	r23,r2,83f4b4 <_strtod_r+0x40c>
  83f334:	00801144 	movi	r2,69
  83f338:	b8805e26 	beq	r23,r2,83f4b4 <_strtod_r+0x40c>
  83f33c:	0009883a 	mov	r4,zero
  83f340:	e0001a1e 	bne	fp,zero,83f3ac <_strtod_r+0x304>
  83f344:	b000cd26 	beq	r22,zero,83f67c <_strtod_r+0x5d4>
  83f348:	d8000815 	stw	zero,32(sp)
  83f34c:	d9000917 	ldw	r4,36(sp)
  83f350:	203faa26 	beq	r4,zero,83f1fc <__alt_mem_epcs_flash_controller_0+0xff8361fc>
  83f354:	dc800617 	ldw	r18,24(sp)
  83f358:	003fa606 	br	83f1f4 <__alt_mem_epcs_flash_controller_0+0xff8361f4>
  83f35c:	00800044 	movi	r2,1
  83f360:	d8800a15 	stw	r2,40(sp)
  83f364:	003fb706 	br	83f244 <__alt_mem_epcs_flash_controller_0+0xff836244>
  83f368:	18c00044 	addi	r3,r3,1
  83f36c:	d8c00615 	stw	r3,24(sp)
  83f370:	1f000003 	ldbu	fp,0(r3)
  83f374:	e0803fcc 	andi	r2,fp,255
  83f378:	20bf642e 	bgeu	r4,r2,83f10c <__alt_mem_epcs_flash_controller_0+0xff83610c>
  83f37c:	1821883a 	mov	r16,r3
  83f380:	d8000a15 	stw	zero,40(sp)
  83f384:	003fb606 	br	83f260 <__alt_mem_epcs_flash_controller_0+0xff836260>
  83f388:	e7003fcc 	andi	fp,fp,255
  83f38c:	a009883a 	mov	r4,r20
  83f390:	01400284 	movi	r5,10
  83f394:	e700201c 	xori	fp,fp,128
  83f398:	08305040 	call	830504 <__mulsi3>
  83f39c:	e73fe004 	addi	fp,fp,-128
  83f3a0:	1705883a 	add	r2,r2,fp
  83f3a4:	153ff404 	addi	r20,r2,-48
  83f3a8:	003fc606 	br	83f2c4 <__alt_mem_epcs_flash_controller_0+0xff8362c4>
  83f3ac:	d8c00b17 	ldw	r3,44(sp)
  83f3b0:	20ebc83a 	sub	r21,r4,r3
  83f3b4:	8000011e 	bne	r16,zero,83f3bc <_strtod_r+0x314>
  83f3b8:	e021883a 	mov	r16,fp
  83f3bc:	00800404 	movi	r2,16
  83f3c0:	e025883a 	mov	r18,fp
  83f3c4:	1700010e 	bge	r2,fp,83f3cc <_strtod_r+0x324>
  83f3c8:	1025883a 	mov	r18,r2
  83f3cc:	9809883a 	mov	r4,r19
  83f3d0:	0831d080 	call	831d08 <__floatunsidf>
  83f3d4:	102f883a 	mov	r23,r2
  83f3d8:	00800244 	movi	r2,9
  83f3dc:	182d883a 	mov	r22,r3
  83f3e0:	1480150e 	bge	r2,r18,83f438 <_strtod_r+0x390>
  83f3e4:	90bffdc4 	addi	r2,r18,-9
  83f3e8:	100490fa 	slli	r2,r2,3
  83f3ec:	180b883a 	mov	r5,r3
  83f3f0:	00c021b4 	movhi	r3,134
  83f3f4:	18e51b04 	addi	r3,r3,-27540
  83f3f8:	1885883a 	add	r2,r3,r2
  83f3fc:	11800017 	ldw	r6,0(r2)
  83f400:	11c00117 	ldw	r7,4(r2)
  83f404:	b809883a 	mov	r4,r23
  83f408:	083149c0 	call	83149c <__muldf3>
  83f40c:	a009883a 	mov	r4,r20
  83f410:	102f883a 	mov	r23,r2
  83f414:	182d883a 	mov	r22,r3
  83f418:	0831d080 	call	831d08 <__floatunsidf>
  83f41c:	b809883a 	mov	r4,r23
  83f420:	b00b883a 	mov	r5,r22
  83f424:	100d883a 	mov	r6,r2
  83f428:	180f883a 	mov	r7,r3
  83f42c:	08475300 	call	847530 <__adddf3>
  83f430:	102f883a 	mov	r23,r2
  83f434:	182d883a 	mov	r22,r3
  83f438:	008003c4 	movi	r2,15
  83f43c:	17009416 	blt	r2,fp,83f690 <_strtod_r+0x5e8>
  83f440:	a8001926 	beq	r21,zero,83f4a8 <_strtod_r+0x400>
  83f444:	05439c0e 	bge	zero,r21,8402b8 <_strtod_r+0x1210>
  83f448:	00c00584 	movi	r3,22
  83f44c:	1d430f16 	blt	r3,r21,84008c <_strtod_r+0xfe4>
  83f450:	a82a90fa 	slli	r21,r21,3
  83f454:	008021b4 	movhi	r2,134
  83f458:	10a51b04 	addi	r2,r2,-27540
  83f45c:	1545883a 	add	r2,r2,r21
  83f460:	11000017 	ldw	r4,0(r2)
  83f464:	11400117 	ldw	r5,4(r2)
  83f468:	b80d883a 	mov	r6,r23
  83f46c:	b00f883a 	mov	r7,r22
  83f470:	083149c0 	call	83149c <__muldf3>
  83f474:	d8800815 	stw	r2,32(sp)
  83f478:	1839883a 	mov	fp,r3
  83f47c:	003fb306 	br	83f34c <__alt_mem_epcs_flash_controller_0+0xff83634c>
  83f480:	014021b4 	movhi	r5,134
  83f484:	29655104 	addi	r5,r5,-27324
  83f488:	d9800204 	addi	r6,sp,8
  83f48c:	d9000604 	addi	r4,sp,24
  83f490:	08461b00 	call	8461b0 <__hexnan>
  83f494:	00c00144 	movi	r3,5
  83f498:	10c2161e 	bne	r2,r3,83fcf4 <_strtod_r+0xc4c>
  83f49c:	dd800317 	ldw	r22,12(sp)
  83f4a0:	ddc00217 	ldw	r23,8(sp)
  83f4a4:	b59ffc34 	orhi	r22,r22,32752
  83f4a8:	ddc00815 	stw	r23,32(sp)
  83f4ac:	b039883a 	mov	fp,r22
  83f4b0:	003fa606 	br	83f34c <__alt_mem_epcs_flash_controller_0+0xff83634c>
  83f4b4:	e001a926 	beq	fp,zero,83fb5c <_strtod_r+0xab4>
  83f4b8:	d8c00617 	ldw	r3,24(sp)
  83f4bc:	18800044 	addi	r2,r3,1
  83f4c0:	d8800615 	stw	r2,24(sp)
  83f4c4:	d8c00715 	stw	r3,28(sp)
  83f4c8:	18c00047 	ldb	r3,1(r3)
  83f4cc:	00800ac4 	movi	r2,43
  83f4d0:	1881e526 	beq	r3,r2,83fc68 <_strtod_r+0xbc0>
  83f4d4:	00800b44 	movi	r2,45
  83f4d8:	1881dc26 	beq	r3,r2,83fc4c <_strtod_r+0xba4>
  83f4dc:	182f883a 	mov	r23,r3
  83f4e0:	d8000e15 	stw	zero,56(sp)
  83f4e4:	b8bff404 	addi	r2,r23,-48
  83f4e8:	01000244 	movi	r4,9
  83f4ec:	2081ab36 	bltu	r4,r2,83fb9c <_strtod_r+0xaf4>
  83f4f0:	00800c04 	movi	r2,48
  83f4f4:	b880071e 	bne	r23,r2,83f514 <_strtod_r+0x46c>
  83f4f8:	d8800617 	ldw	r2,24(sp)
  83f4fc:	b809883a 	mov	r4,r23
  83f500:	10800044 	addi	r2,r2,1
  83f504:	d8800615 	stw	r2,24(sp)
  83f508:	15c00007 	ldb	r23,0(r2)
  83f50c:	10800044 	addi	r2,r2,1
  83f510:	b93ffc26 	beq	r23,r4,83f504 <__alt_mem_epcs_flash_controller_0+0xff836504>
  83f514:	b8bff3c4 	addi	r2,r23,-49
  83f518:	01000204 	movi	r4,8
  83f51c:	20bf8736 	bltu	r4,r2,83f33c <__alt_mem_epcs_flash_controller_0+0xff83633c>
  83f520:	d8c00617 	ldw	r3,24(sp)
  83f524:	b93ff404 	addi	r4,r23,-48
  83f528:	01400244 	movi	r5,9
  83f52c:	1ac00044 	addi	r11,r3,1
  83f530:	dac00615 	stw	r11,24(sp)
  83f534:	d8c00d15 	stw	r3,52(sp)
  83f538:	18c00043 	ldbu	r3,1(r3)
  83f53c:	18bff404 	addi	r2,r3,-48
  83f540:	1dc03fcc 	andi	r23,r3,255
  83f544:	bdc0201c 	xori	r23,r23,128
  83f548:	10803fcc 	andi	r2,r2,255
  83f54c:	bdffe004 	addi	r23,r23,-128
  83f550:	28801136 	bltu	r5,r2,83f598 <_strtod_r+0x4f0>
  83f554:	d8c00d17 	ldw	r3,52(sp)
  83f558:	1d400084 	addi	r21,r3,2
  83f55c:	01400284 	movi	r5,10
  83f560:	08305040 	call	830504 <__mulsi3>
  83f564:	dd400615 	stw	r21,24(sp)
  83f568:	a9400003 	ldbu	r5,0(r21)
  83f56c:	15c5883a 	add	r2,r2,r23
  83f570:	a817883a 	mov	r11,r21
  83f574:	28fff404 	addi	r3,r5,-48
  83f578:	2dc03fcc 	andi	r23,r5,255
  83f57c:	bdc0201c 	xori	r23,r23,128
  83f580:	18c03fcc 	andi	r3,r3,255
  83f584:	01400244 	movi	r5,9
  83f588:	113ff404 	addi	r4,r2,-48
  83f58c:	bdffe004 	addi	r23,r23,-128
  83f590:	ad400044 	addi	r21,r21,1
  83f594:	28fff12e 	bgeu	r5,r3,83f55c <__alt_mem_epcs_flash_controller_0+0xff83655c>
  83f598:	d8c00d17 	ldw	r3,52(sp)
  83f59c:	00800204 	movi	r2,8
  83f5a0:	58d7c83a 	sub	r11,r11,r3
  83f5a4:	12c2ab16 	blt	r2,r11,840054 <_strtod_r+0xfac>
  83f5a8:	009387c4 	movi	r2,19999
  83f5ac:	1100010e 	bge	r2,r4,83f5b4 <_strtod_r+0x50c>
  83f5b0:	1009883a 	mov	r4,r2
  83f5b4:	d8c00e17 	ldw	r3,56(sp)
  83f5b8:	183f6126 	beq	r3,zero,83f340 <__alt_mem_epcs_flash_controller_0+0xff836340>
  83f5bc:	0109c83a 	sub	r4,zero,r4
  83f5c0:	003f5f06 	br	83f340 <__alt_mem_epcs_flash_controller_0+0xff836340>
  83f5c4:	80800047 	ldb	r2,1(r16)
  83f5c8:	00c01604 	movi	r3,88
  83f5cc:	10c20026 	beq	r2,r3,83fdd0 <_strtod_r+0xd28>
  83f5d0:	00c01e04 	movi	r3,120
  83f5d4:	10c1fe26 	beq	r2,r3,83fdd0 <_strtod_r+0xd28>
  83f5d8:	80800044 	addi	r2,r16,1
  83f5dc:	1021883a 	mov	r16,r2
  83f5e0:	d8800615 	stw	r2,24(sp)
  83f5e4:	10800044 	addi	r2,r2,1
  83f5e8:	173fffc3 	ldbu	fp,-1(r2)
  83f5ec:	e0c03fcc 	andi	r3,fp,255
  83f5f0:	18c0201c 	xori	r3,r3,128
  83f5f4:	18ffe004 	addi	r3,r3,-128
  83f5f8:	193ff826 	beq	r3,r4,83f5dc <__alt_mem_epcs_flash_controller_0+0xff8365dc>
  83f5fc:	18002126 	beq	r3,zero,83f684 <_strtod_r+0x5dc>
  83f600:	00c00044 	movi	r3,1
  83f604:	dc000815 	stw	r16,32(sp)
  83f608:	d8c00c15 	stw	r3,48(sp)
  83f60c:	003f1b06 	br	83f27c <__alt_mem_epcs_flash_controller_0+0xff83627c>
  83f610:	8809883a 	mov	r4,r17
  83f614:	083d2ac0 	call	83d2ac <_localeconv_r>
  83f618:	11000017 	ldw	r4,0(r2)
  83f61c:	0834c200 	call	834c20 <strlen>
  83f620:	d8c00617 	ldw	r3,24(sp)
  83f624:	1885883a 	add	r2,r3,r2
  83f628:	d8800615 	stw	r2,24(sp)
  83f62c:	15c00007 	ldb	r23,0(r2)
  83f630:	8001771e 	bne	r16,zero,83fc10 <_strtod_r+0xb68>
  83f634:	01000c04 	movi	r4,48
  83f638:	b903581e 	bne	r23,r4,84039c <_strtod_r+0x12f4>
  83f63c:	11000044 	addi	r4,r2,1
  83f640:	b80b883a 	mov	r5,r23
  83f644:	d9000615 	stw	r4,24(sp)
  83f648:	25c00007 	ldb	r23,0(r4)
  83f64c:	20adc83a 	sub	r22,r4,r2
  83f650:	21000044 	addi	r4,r4,1
  83f654:	b97ffb26 	beq	r23,r5,83f644 <__alt_mem_epcs_flash_controller_0+0xff836644>
  83f658:	b8bff3c4 	addi	r2,r23,-49
  83f65c:	01000204 	movi	r4,8
  83f660:	2083002e 	bgeu	r4,r2,840264 <_strtod_r+0x11bc>
  83f664:	00801944 	movi	r2,101
  83f668:	b8813a26 	beq	r23,r2,83fb54 <_strtod_r+0xaac>
  83f66c:	0039883a 	mov	fp,zero
  83f670:	d8000b15 	stw	zero,44(sp)
  83f674:	04800044 	movi	r18,1
  83f678:	003f2e06 	br	83f334 <__alt_mem_epcs_flash_controller_0+0xff836334>
  83f67c:	d8c00c17 	ldw	r3,48(sp)
  83f680:	18017d26 	beq	r3,zero,83fc78 <_strtod_r+0xbd0>
  83f684:	d8000815 	stw	zero,32(sp)
  83f688:	0039883a 	mov	fp,zero
  83f68c:	003f2f06 	br	83f34c <__alt_mem_epcs_flash_controller_0+0xff83634c>
  83f690:	e4a5c83a 	sub	r18,fp,r18
  83f694:	9565883a 	add	r18,r18,r21
  83f698:	0482370e 	bge	zero,r18,83ff78 <_strtod_r+0xed0>
  83f69c:	908003cc 	andi	r2,r18,15
  83f6a0:	10000b26 	beq	r2,zero,83f6d0 <_strtod_r+0x628>
  83f6a4:	100490fa 	slli	r2,r2,3
  83f6a8:	00c021b4 	movhi	r3,134
  83f6ac:	18e51b04 	addi	r3,r3,-27540
  83f6b0:	1885883a 	add	r2,r3,r2
  83f6b4:	11000017 	ldw	r4,0(r2)
  83f6b8:	11400117 	ldw	r5,4(r2)
  83f6bc:	b80d883a 	mov	r6,r23
  83f6c0:	b00f883a 	mov	r7,r22
  83f6c4:	083149c0 	call	83149c <__muldf3>
  83f6c8:	102f883a 	mov	r23,r2
  83f6cc:	182d883a 	mov	r22,r3
  83f6d0:	053ffc04 	movi	r20,-16
  83f6d4:	9524703a 	and	r18,r18,r20
  83f6d8:	90003826 	beq	r18,zero,83f7bc <_strtod_r+0x714>
  83f6dc:	00804d04 	movi	r2,308
  83f6e0:	1481eb16 	blt	r2,r18,83fe90 <_strtod_r+0xde8>
  83f6e4:	9029d13a 	srai	r20,r18,4
  83f6e8:	02c00044 	movi	r11,1
  83f6ec:	5d03900e 	bge	r11,r20,840530 <_strtod_r+0x1488>
  83f6f0:	010021b4 	movhi	r4,134
  83f6f4:	21251104 	addi	r4,r4,-27580
  83f6f8:	2011883a 	mov	r8,r4
  83f6fc:	0025883a 	mov	r18,zero
  83f700:	880b883a 	mov	r5,r17
  83f704:	d9000715 	stw	r4,28(sp)
  83f708:	dc000b15 	stw	r16,44(sp)
  83f70c:	9023883a 	mov	r17,r18
  83f710:	b805883a 	mov	r2,r23
  83f714:	b007883a 	mov	r3,r22
  83f718:	0009883a 	mov	r4,zero
  83f71c:	4021883a 	mov	r16,r8
  83f720:	2825883a 	mov	r18,r5
  83f724:	a180004c 	andi	r6,r20,1
  83f728:	30000826 	beq	r6,zero,83f74c <_strtod_r+0x6a4>
  83f72c:	81800017 	ldw	r6,0(r16)
  83f730:	81c00117 	ldw	r7,4(r16)
  83f734:	1009883a 	mov	r4,r2
  83f738:	180b883a 	mov	r5,r3
  83f73c:	dac01315 	stw	r11,76(sp)
  83f740:	083149c0 	call	83149c <__muldf3>
  83f744:	dac01317 	ldw	r11,76(sp)
  83f748:	01000044 	movi	r4,1
  83f74c:	a029d07a 	srai	r20,r20,1
  83f750:	8c400044 	addi	r17,r17,1
  83f754:	84000204 	addi	r16,r16,8
  83f758:	a2fff21e 	bne	r20,r11,83f724 <__alt_mem_epcs_flash_controller_0+0xff836724>
  83f75c:	900b883a 	mov	r5,r18
  83f760:	21003fcc 	andi	r4,r4,255
  83f764:	8825883a 	mov	r18,r17
  83f768:	dc000b17 	ldw	r16,44(sp)
  83f76c:	2823883a 	mov	r17,r5
  83f770:	2003c01e 	bne	r4,zero,840674 <_strtod_r+0x15cc>
  83f774:	901490fa 	slli	r10,r18,3
  83f778:	d8800717 	ldw	r2,28(sp)
  83f77c:	01ff2c34 	movhi	r7,64688
  83f780:	b80d883a 	mov	r6,r23
  83f784:	12a5883a 	add	r18,r2,r10
  83f788:	91000017 	ldw	r4,0(r18)
  83f78c:	91400117 	ldw	r5,4(r18)
  83f790:	b1cf883a 	add	r7,r22,r7
  83f794:	083149c0 	call	83149c <__muldf3>
  83f798:	102f883a 	mov	r23,r2
  83f79c:	011f2834 	movhi	r4,31904
  83f7a0:	189ffc2c 	andhi	r2,r3,32752
  83f7a4:	2081ba36 	bltu	r4,r2,83fe90 <_strtod_r+0xde8>
  83f7a8:	011f2434 	movhi	r4,31888
  83f7ac:	20834a2e 	bgeu	r4,r2,8404d8 <_strtod_r+0x1430>
  83f7b0:	059ffc34 	movhi	r22,32752
  83f7b4:	b5bfffc4 	addi	r22,r22,-1
  83f7b8:	05ffffc4 	movi	r23,-1
  83f7bc:	d8000715 	stw	zero,28(sp)
  83f7c0:	d9400817 	ldw	r5,32(sp)
  83f7c4:	dcc00015 	stw	r19,0(sp)
  83f7c8:	e00f883a 	mov	r7,fp
  83f7cc:	800d883a 	mov	r6,r16
  83f7d0:	8809883a 	mov	r4,r17
  83f7d4:	083d9b80 	call	83d9b8 <__s2b>
  83f7d8:	d8800b15 	stw	r2,44(sp)
  83f7dc:	1001ac26 	beq	r2,zero,83fe90 <_strtod_r+0xde8>
  83f7e0:	a807d7fa 	srai	r3,r21,31
  83f7e4:	0545c83a 	sub	r2,zero,r21
  83f7e8:	dd400c15 	stw	r21,48(sp)
  83f7ec:	1886703a 	and	r3,r3,r2
  83f7f0:	d8c00e15 	stw	r3,56(sp)
  83f7f4:	a8015916 	blt	r21,zero,83fd5c <_strtod_r+0xcb4>
  83f7f8:	d9400b17 	ldw	r5,44(sp)
  83f7fc:	0011883a 	mov	r8,zero
  83f800:	0021883a 	mov	r16,zero
  83f804:	29400304 	addi	r5,r5,12
  83f808:	d9401115 	stw	r5,68(sp)
  83f80c:	4025883a 	mov	r18,r8
  83f810:	d8800b17 	ldw	r2,44(sp)
  83f814:	8809883a 	mov	r4,r17
  83f818:	11400117 	ldw	r5,4(r2)
  83f81c:	083d7a00 	call	83d7a0 <_Balloc>
  83f820:	1027883a 	mov	r19,r2
  83f824:	10015226 	beq	r2,zero,83fd70 <_strtod_r+0xcc8>
  83f828:	d8c00b17 	ldw	r3,44(sp)
  83f82c:	d9401117 	ldw	r5,68(sp)
  83f830:	11000304 	addi	r4,r2,12
  83f834:	19800417 	ldw	r6,16(r3)
  83f838:	31800084 	addi	r6,r6,2
  83f83c:	318d883a 	add	r6,r6,r6
  83f840:	318d883a 	add	r6,r6,r6
  83f844:	08341500 	call	834150 <memcpy>
  83f848:	d9000204 	addi	r4,sp,8
  83f84c:	d9000015 	stw	r4,0(sp)
  83f850:	d9c00404 	addi	r7,sp,16
  83f854:	b80b883a 	mov	r5,r23
  83f858:	b00d883a 	mov	r6,r22
  83f85c:	8809883a 	mov	r4,r17
  83f860:	083e4f00 	call	83e4f0 <__d2b>
  83f864:	d8800515 	stw	r2,20(sp)
  83f868:	ddc00815 	stw	r23,32(sp)
  83f86c:	dd801215 	stw	r22,72(sp)
  83f870:	10029f26 	beq	r2,zero,8402f0 <_strtod_r+0x1248>
  83f874:	01400044 	movi	r5,1
  83f878:	8809883a 	mov	r4,r17
  83f87c:	083dbd40 	call	83dbd4 <__i2b>
  83f880:	1021883a 	mov	r16,r2
  83f884:	10013a26 	beq	r2,zero,83fd70 <_strtod_r+0xcc8>
  83f888:	d8800417 	ldw	r2,16(sp)
  83f88c:	1000b816 	blt	r2,zero,83fb70 <_strtod_r+0xac8>
  83f890:	d9400e17 	ldw	r5,56(sp)
  83f894:	d9000c17 	ldw	r4,48(sp)
  83f898:	28a9883a 	add	r20,r5,r2
  83f89c:	d9400717 	ldw	r5,28(sp)
  83f8a0:	dd400217 	ldw	r21,8(sp)
  83f8a4:	073f0084 	movi	fp,-1022
  83f8a8:	1147c83a 	sub	r3,r2,r5
  83f8ac:	1d47883a 	add	r3,r3,r21
  83f8b0:	00800d84 	movi	r2,54
  83f8b4:	18ffffc4 	addi	r3,r3,-1
  83f8b8:	156bc83a 	sub	r21,r2,r21
  83f8bc:	1f00950e 	bge	r3,fp,83fb14 <_strtod_r+0xa6c>
  83f8c0:	e0f9c83a 	sub	fp,fp,r3
  83f8c4:	008007c4 	movi	r2,31
  83f8c8:	af2bc83a 	sub	r21,r21,fp
  83f8cc:	1700ac16 	blt	r2,fp,83fb80 <_strtod_r+0xad8>
  83f8d0:	00800044 	movi	r2,1
  83f8d4:	1704983a 	sll	r2,r2,fp
  83f8d8:	d8000d15 	stw	zero,52(sp)
  83f8dc:	d8800f15 	stw	r2,60(sp)
  83f8e0:	2547883a 	add	r3,r4,r21
  83f8e4:	d9000717 	ldw	r4,28(sp)
  83f8e8:	a56b883a 	add	r21,r20,r21
  83f8ec:	20f9883a 	add	fp,r4,r3
  83f8f0:	a009883a 	mov	r4,r20
  83f8f4:	ad00010e 	bge	r21,r20,83f8fc <_strtod_r+0x854>
  83f8f8:	a809883a 	mov	r4,r21
  83f8fc:	e005883a 	mov	r2,fp
  83f900:	2700010e 	bge	r4,fp,83f908 <_strtod_r+0x860>
  83f904:	2005883a 	mov	r2,r4
  83f908:	0080030e 	bge	zero,r2,83f918 <_strtod_r+0x870>
  83f90c:	a8abc83a 	sub	r21,r21,r2
  83f910:	e0b9c83a 	sub	fp,fp,r2
  83f914:	a0a9c83a 	sub	r20,r20,r2
  83f918:	d9400e17 	ldw	r5,56(sp)
  83f91c:	28001126 	beq	r5,zero,83f964 <_strtod_r+0x8bc>
  83f920:	280d883a 	mov	r6,r5
  83f924:	8809883a 	mov	r4,r17
  83f928:	800b883a 	mov	r5,r16
  83f92c:	083de9c0 	call	83de9c <__pow5mult>
  83f930:	1021883a 	mov	r16,r2
  83f934:	10010e26 	beq	r2,zero,83fd70 <_strtod_r+0xcc8>
  83f938:	d9800517 	ldw	r6,20(sp)
  83f93c:	100b883a 	mov	r5,r2
  83f940:	8809883a 	mov	r4,r17
  83f944:	083dc100 	call	83dc10 <__multiply>
  83f948:	10010926 	beq	r2,zero,83fd70 <_strtod_r+0xcc8>
  83f94c:	d9400517 	ldw	r5,20(sp)
  83f950:	8809883a 	mov	r4,r17
  83f954:	d8801315 	stw	r2,76(sp)
  83f958:	083d8480 	call	83d848 <_Bfree>
  83f95c:	d8801317 	ldw	r2,76(sp)
  83f960:	d8800515 	stw	r2,20(sp)
  83f964:	0540060e 	bge	zero,r21,83f980 <_strtod_r+0x8d8>
  83f968:	d9400517 	ldw	r5,20(sp)
  83f96c:	a80d883a 	mov	r6,r21
  83f970:	8809883a 	mov	r4,r17
  83f974:	083dfdc0 	call	83dfdc <__lshift>
  83f978:	d8800515 	stw	r2,20(sp)
  83f97c:	10025c26 	beq	r2,zero,8402f0 <_strtod_r+0x1248>
  83f980:	d8800c17 	ldw	r2,48(sp)
  83f984:	10000626 	beq	r2,zero,83f9a0 <_strtod_r+0x8f8>
  83f988:	d9800c17 	ldw	r6,48(sp)
  83f98c:	980b883a 	mov	r5,r19
  83f990:	8809883a 	mov	r4,r17
  83f994:	083de9c0 	call	83de9c <__pow5mult>
  83f998:	1027883a 	mov	r19,r2
  83f99c:	1000f426 	beq	r2,zero,83fd70 <_strtod_r+0xcc8>
  83f9a0:	0700060e 	bge	zero,fp,83f9bc <_strtod_r+0x914>
  83f9a4:	980b883a 	mov	r5,r19
  83f9a8:	e00d883a 	mov	r6,fp
  83f9ac:	8809883a 	mov	r4,r17
  83f9b0:	083dfdc0 	call	83dfdc <__lshift>
  83f9b4:	1027883a 	mov	r19,r2
  83f9b8:	1000ed26 	beq	r2,zero,83fd70 <_strtod_r+0xcc8>
  83f9bc:	0500060e 	bge	zero,r20,83f9d8 <_strtod_r+0x930>
  83f9c0:	800b883a 	mov	r5,r16
  83f9c4:	a00d883a 	mov	r6,r20
  83f9c8:	8809883a 	mov	r4,r17
  83f9cc:	083dfdc0 	call	83dfdc <__lshift>
  83f9d0:	1021883a 	mov	r16,r2
  83f9d4:	1000e626 	beq	r2,zero,83fd70 <_strtod_r+0xcc8>
  83f9d8:	d9400517 	ldw	r5,20(sp)
  83f9dc:	980d883a 	mov	r6,r19
  83f9e0:	8809883a 	mov	r4,r17
  83f9e4:	083e1840 	call	83e184 <__mdiff>
  83f9e8:	1025883a 	mov	r18,r2
  83f9ec:	1000e026 	beq	r2,zero,83fd70 <_strtod_r+0xcc8>
  83f9f0:	15400317 	ldw	r21,12(r2)
  83f9f4:	800b883a 	mov	r5,r16
  83f9f8:	10000315 	stw	zero,12(r2)
  83f9fc:	1009883a 	mov	r4,r2
  83fa00:	083e1240 	call	83e124 <__mcmp>
  83fa04:	10026716 	blt	r2,zero,8403a4 <_strtod_r+0x12fc>
  83fa08:	10029626 	beq	r2,zero,840464 <_strtod_r+0x13bc>
  83fa0c:	800b883a 	mov	r5,r16
  83fa10:	9009883a 	mov	r4,r18
  83fa14:	083e63c0 	call	83e63c <__ratio>
  83fa18:	000d883a 	mov	r6,zero
  83fa1c:	01d00034 	movhi	r7,16384
  83fa20:	1009883a 	mov	r4,r2
  83fa24:	180b883a 	mov	r5,r3
  83fa28:	1039883a 	mov	fp,r2
  83fa2c:	1829883a 	mov	r20,r3
  83fa30:	08489100 	call	848910 <__ledf2>
  83fa34:	00803b16 	blt	zero,r2,83fb24 <_strtod_r+0xa7c>
  83fa38:	a8005e26 	beq	r21,zero,83fbb4 <_strtod_r+0xb0c>
  83fa3c:	050ffc34 	movhi	r20,16368
  83fa40:	d8000f15 	stw	zero,60(sp)
  83fa44:	d8001015 	stw	zero,64(sp)
  83fa48:	dd000d15 	stw	r20,52(sp)
  83fa4c:	b71ffc2c 	andhi	fp,r22,32752
  83fa50:	009ff834 	movhi	r2,32736
  83fa54:	e080f226 	beq	fp,r2,83fe20 <_strtod_r+0xd78>
  83fa58:	d9000717 	ldw	r4,28(sp)
  83fa5c:	20000c26 	beq	r4,zero,83fa90 <_strtod_r+0x9e8>
  83fa60:	0081a834 	movhi	r2,1696
  83fa64:	17000a36 	bltu	r2,fp,83fa90 <_strtod_r+0x9e8>
  83fa68:	d9001017 	ldw	r4,64(sp)
  83fa6c:	d9400d17 	ldw	r5,52(sp)
  83fa70:	01d07834 	movhi	r7,16864
  83fa74:	39ffffc4 	addi	r7,r7,-1
  83fa78:	01bff034 	movhi	r6,65472
  83fa7c:	08489100 	call	848910 <__ledf2>
  83fa80:	0080a70e 	bge	zero,r2,83fd20 <_strtod_r+0xc78>
  83fa84:	0081ac34 	movhi	r2,1712
  83fa88:	a091883a 	add	r8,r20,r2
  83fa8c:	4729c83a 	sub	r20,r8,fp
  83fa90:	b809883a 	mov	r4,r23
  83fa94:	b00b883a 	mov	r5,r22
  83fa98:	083e3800 	call	83e380 <__ulp>
  83fa9c:	d9000f17 	ldw	r4,60(sp)
  83faa0:	a00b883a 	mov	r5,r20
  83faa4:	100d883a 	mov	r6,r2
  83faa8:	180f883a 	mov	r7,r3
  83faac:	083149c0 	call	83149c <__muldf3>
  83fab0:	b80d883a 	mov	r6,r23
  83fab4:	b00f883a 	mov	r7,r22
  83fab8:	1009883a 	mov	r4,r2
  83fabc:	180b883a 	mov	r5,r3
  83fac0:	08475300 	call	847530 <__adddf3>
  83fac4:	102f883a 	mov	r23,r2
  83fac8:	182d883a 	mov	r22,r3
  83facc:	1829883a 	mov	r20,r3
  83fad0:	d9000717 	ldw	r4,28(sp)
  83fad4:	2000021e 	bne	r4,zero,83fae0 <_strtod_r+0xa38>
  83fad8:	a09ffc2c 	andhi	r2,r20,32752
  83fadc:	e080f126 	beq	fp,r2,83fea4 <_strtod_r+0xdfc>
  83fae0:	d9400517 	ldw	r5,20(sp)
  83fae4:	8809883a 	mov	r4,r17
  83fae8:	083d8480 	call	83d848 <_Bfree>
  83faec:	980b883a 	mov	r5,r19
  83faf0:	8809883a 	mov	r4,r17
  83faf4:	083d8480 	call	83d848 <_Bfree>
  83faf8:	800b883a 	mov	r5,r16
  83fafc:	8809883a 	mov	r4,r17
  83fb00:	083d8480 	call	83d848 <_Bfree>
  83fb04:	900b883a 	mov	r5,r18
  83fb08:	8809883a 	mov	r4,r17
  83fb0c:	083d8480 	call	83d848 <_Bfree>
  83fb10:	003f3f06 	br	83f810 <__alt_mem_epcs_flash_controller_0+0xff836810>
  83fb14:	00c00044 	movi	r3,1
  83fb18:	d8000d15 	stw	zero,52(sp)
  83fb1c:	d8c00f15 	stw	r3,60(sp)
  83fb20:	003f6f06 	br	83f8e0 <__alt_mem_epcs_flash_controller_0+0xff8368e0>
  83fb24:	000d883a 	mov	r6,zero
  83fb28:	01cff834 	movhi	r7,16352
  83fb2c:	e009883a 	mov	r4,fp
  83fb30:	a00b883a 	mov	r5,r20
  83fb34:	083149c0 	call	83149c <__muldf3>
  83fb38:	d8801015 	stw	r2,64(sp)
  83fb3c:	d8c00d15 	stw	r3,52(sp)
  83fb40:	a8001a1e 	bne	r21,zero,83fbac <_strtod_r+0xb04>
  83fb44:	1a20003c 	xorhi	r8,r3,32768
  83fb48:	d8800f15 	stw	r2,60(sp)
  83fb4c:	4029883a 	mov	r20,r8
  83fb50:	003fbe06 	br	83fa4c <__alt_mem_epcs_flash_controller_0+0xff836a4c>
  83fb54:	d8000b15 	stw	zero,44(sp)
  83fb58:	04800044 	movi	r18,1
  83fb5c:	b000021e 	bne	r22,zero,83fb68 <_strtod_r+0xac0>
  83fb60:	d8c00c17 	ldw	r3,48(sp)
  83fb64:	183d9d26 	beq	r3,zero,83f1dc <__alt_mem_epcs_flash_controller_0+0xff8361dc>
  83fb68:	0039883a 	mov	fp,zero
  83fb6c:	003e5206 	br	83f4b8 <__alt_mem_epcs_flash_controller_0+0xff8364b8>
  83fb70:	d8c00c17 	ldw	r3,48(sp)
  83fb74:	dd000e17 	ldw	r20,56(sp)
  83fb78:	1889c83a 	sub	r4,r3,r2
  83fb7c:	003f4706 	br	83f89c <__alt_mem_epcs_flash_controller_0+0xff83689c>
  83fb80:	00bef884 	movi	r2,-1054
  83fb84:	07000044 	movi	fp,1
  83fb88:	10c5c83a 	sub	r2,r2,r3
  83fb8c:	e084983a 	sll	r2,fp,r2
  83fb90:	df000f15 	stw	fp,60(sp)
  83fb94:	d8800d15 	stw	r2,52(sp)
  83fb98:	003f5106 	br	83f8e0 <__alt_mem_epcs_flash_controller_0+0xff8368e0>
  83fb9c:	d8c00717 	ldw	r3,28(sp)
  83fba0:	0009883a 	mov	r4,zero
  83fba4:	d8c00615 	stw	r3,24(sp)
  83fba8:	003de506 	br	83f340 <__alt_mem_epcs_flash_controller_0+0xff836340>
  83fbac:	da000d17 	ldw	r8,52(sp)
  83fbb0:	003fe506 	br	83fb48 <__alt_mem_epcs_flash_controller_0+0xff836b48>
  83fbb4:	b800521e 	bne	r23,zero,83fd00 <_strtod_r+0xc58>
  83fbb8:	01000434 	movhi	r4,16
  83fbbc:	213fffc4 	addi	r4,r4,-1
  83fbc0:	b104703a 	and	r2,r22,r4
  83fbc4:	1000501e 	bne	r2,zero,83fd08 <_strtod_r+0xc60>
  83fbc8:	000d883a 	mov	r6,zero
  83fbcc:	01cffc34 	movhi	r7,16368
  83fbd0:	e009883a 	mov	r4,fp
  83fbd4:	a00b883a 	mov	r5,r20
  83fbd8:	08489100 	call	848910 <__ledf2>
  83fbdc:	10024216 	blt	r2,zero,8404e8 <_strtod_r+0x1440>
  83fbe0:	a00b883a 	mov	r5,r20
  83fbe4:	000d883a 	mov	r6,zero
  83fbe8:	01cff834 	movhi	r7,16352
  83fbec:	e009883a 	mov	r4,fp
  83fbf0:	083149c0 	call	83149c <__muldf3>
  83fbf4:	d8801015 	stw	r2,64(sp)
  83fbf8:	d8c00d15 	stw	r3,52(sp)
  83fbfc:	1029883a 	mov	r20,r2
  83fc00:	1a20003c 	xorhi	r8,r3,32768
  83fc04:	dd000f15 	stw	r20,60(sp)
  83fc08:	4029883a 	mov	r20,r8
  83fc0c:	003f8f06 	br	83fa4c <__alt_mem_epcs_flash_controller_0+0xff836a4c>
  83fc10:	8039883a 	mov	fp,r16
  83fc14:	002d883a 	mov	r22,zero
  83fc18:	d8000b15 	stw	zero,44(sp)
  83fc1c:	bd7ff404 	addi	r21,r23,-48
  83fc20:	00800244 	movi	r2,9
  83fc24:	15401236 	bltu	r2,r21,83fc70 <_strtod_r+0xbc8>
  83fc28:	dd400e15 	stw	r21,56(sp)
  83fc2c:	b0800044 	addi	r2,r22,1
  83fc30:	a801701e 	bne	r21,zero,8401f4 <_strtod_r+0x114c>
  83fc34:	ddc00617 	ldw	r23,24(sp)
  83fc38:	102d883a 	mov	r22,r2
  83fc3c:	b8800044 	addi	r2,r23,1
  83fc40:	d8800615 	stw	r2,24(sp)
  83fc44:	bdc00047 	ldb	r23,1(r23)
  83fc48:	003ff406 	br	83fc1c <__alt_mem_epcs_flash_controller_0+0xff836c1c>
  83fc4c:	00c00044 	movi	r3,1
  83fc50:	d8c00e15 	stw	r3,56(sp)
  83fc54:	d8c00717 	ldw	r3,28(sp)
  83fc58:	18800084 	addi	r2,r3,2
  83fc5c:	d8800615 	stw	r2,24(sp)
  83fc60:	1dc00087 	ldb	r23,2(r3)
  83fc64:	003e1f06 	br	83f4e4 <__alt_mem_epcs_flash_controller_0+0xff8364e4>
  83fc68:	d8000e15 	stw	zero,56(sp)
  83fc6c:	003ff906 	br	83fc54 <__alt_mem_epcs_flash_controller_0+0xff836c54>
  83fc70:	04800044 	movi	r18,1
  83fc74:	003dad06 	br	83f32c <__alt_mem_epcs_flash_controller_0+0xff83632c>
  83fc78:	903d581e 	bne	r18,zero,83f1dc <__alt_mem_epcs_flash_controller_0+0xff8361dc>
  83fc7c:	00801384 	movi	r2,78
  83fc80:	b8800526 	beq	r23,r2,83fc98 <_strtod_r+0xbf0>
  83fc84:	15fd530e 	bge	r2,r23,83f1d4 <__alt_mem_epcs_flash_controller_0+0xff8361d4>
  83fc88:	00801a44 	movi	r2,105
  83fc8c:	b8819a26 	beq	r23,r2,8402f8 <_strtod_r+0x1250>
  83fc90:	00801b84 	movi	r2,110
  83fc94:	b8bd511e 	bne	r23,r2,83f1dc <__alt_mem_epcs_flash_controller_0+0xff8361dc>
  83fc98:	014021b4 	movhi	r5,134
  83fc9c:	d9000617 	ldw	r4,24(sp)
  83fca0:	29655004 	addi	r5,r5,-27328
  83fca4:	01c00644 	movi	r7,25
  83fca8:	00000b06 	br	83fcd8 <_strtod_r+0xc30>
  83fcac:	21000044 	addi	r4,r4,1
  83fcb0:	20800003 	ldbu	r2,0(r4)
  83fcb4:	10ffefc4 	addi	r3,r2,-65
  83fcb8:	10803fcc 	andi	r2,r2,255
  83fcbc:	1080201c 	xori	r2,r2,128
  83fcc0:	18c03fcc 	andi	r3,r3,255
  83fcc4:	10bfe004 	addi	r2,r2,-128
  83fcc8:	38c00136 	bltu	r7,r3,83fcd0 <_strtod_r+0xc28>
  83fccc:	10800804 	addi	r2,r2,32
  83fcd0:	29400044 	addi	r5,r5,1
  83fcd4:	11bd411e 	bne	r2,r6,83f1dc <__alt_mem_epcs_flash_controller_0+0xff8361dc>
  83fcd8:	29800007 	ldb	r6,0(r5)
  83fcdc:	303ff31e 	bne	r6,zero,83fcac <__alt_mem_epcs_flash_controller_0+0xff836cac>
  83fce0:	20800044 	addi	r2,r4,1
  83fce4:	d8800615 	stw	r2,24(sp)
  83fce8:	20c00047 	ldb	r3,1(r4)
  83fcec:	00800a04 	movi	r2,40
  83fcf0:	18bde326 	beq	r3,r2,83f480 <__alt_mem_epcs_flash_controller_0+0xff836480>
  83fcf4:	05bffe34 	movhi	r22,65528
  83fcf8:	002f883a 	mov	r23,zero
  83fcfc:	003dea06 	br	83f4a8 <__alt_mem_epcs_flash_controller_0+0xff8364a8>
  83fd00:	00800044 	movi	r2,1
  83fd04:	b880ff26 	beq	r23,r2,840104 <_strtod_r+0x105c>
  83fd08:	014ffc34 	movhi	r5,16368
  83fd0c:	d8000f15 	stw	zero,60(sp)
  83fd10:	052ffc34 	movhi	r20,49136
  83fd14:	d8001015 	stw	zero,64(sp)
  83fd18:	d9400d15 	stw	r5,52(sp)
  83fd1c:	003f4b06 	br	83fa4c <__alt_mem_epcs_flash_controller_0+0xff836a4c>
  83fd20:	d9001017 	ldw	r4,64(sp)
  83fd24:	d9400d17 	ldw	r5,52(sp)
  83fd28:	08467000 	call	846700 <__fixunsdfsi>
  83fd2c:	1000f126 	beq	r2,zero,8400f4 <_strtod_r+0x104c>
  83fd30:	1009883a 	mov	r4,r2
  83fd34:	0831d080 	call	831d08 <__floatunsidf>
  83fd38:	d8801015 	stw	r2,64(sp)
  83fd3c:	d8c00d15 	stw	r3,52(sp)
  83fd40:	a800ea1e 	bne	r21,zero,8400ec <_strtod_r+0x1044>
  83fd44:	d8800d17 	ldw	r2,52(sp)
  83fd48:	1220003c 	xorhi	r8,r2,32768
  83fd4c:	d8c01017 	ldw	r3,64(sp)
  83fd50:	4029883a 	mov	r20,r8
  83fd54:	d8c00f15 	stw	r3,60(sp)
  83fd58:	003f4a06 	br	83fa84 <__alt_mem_epcs_flash_controller_0+0xff836a84>
  83fd5c:	d8000c15 	stw	zero,48(sp)
  83fd60:	003ea506 	br	83f7f8 <__alt_mem_epcs_flash_controller_0+0xff8367f8>
  83fd64:	d8c00817 	ldw	r3,32(sp)
  83fd68:	00bfffc4 	movi	r2,-1
  83fd6c:	1880441e 	bne	r3,r2,83fe80 <_strtod_r+0xdd8>
  83fd70:	9011883a 	mov	r8,r18
  83fd74:	d8800517 	ldw	r2,20(sp)
  83fd78:	00c00884 	movi	r3,34
  83fd7c:	88c00015 	stw	r3,0(r17)
  83fd80:	d8000815 	stw	zero,32(sp)
  83fd84:	071ffc34 	movhi	fp,32752
  83fd88:	100b883a 	mov	r5,r2
  83fd8c:	8809883a 	mov	r4,r17
  83fd90:	da001315 	stw	r8,76(sp)
  83fd94:	083d8480 	call	83d848 <_Bfree>
  83fd98:	980b883a 	mov	r5,r19
  83fd9c:	8809883a 	mov	r4,r17
  83fda0:	083d8480 	call	83d848 <_Bfree>
  83fda4:	800b883a 	mov	r5,r16
  83fda8:	8809883a 	mov	r4,r17
  83fdac:	083d8480 	call	83d848 <_Bfree>
  83fdb0:	d9400b17 	ldw	r5,44(sp)
  83fdb4:	8809883a 	mov	r4,r17
  83fdb8:	083d8480 	call	83d848 <_Bfree>
  83fdbc:	da001317 	ldw	r8,76(sp)
  83fdc0:	8809883a 	mov	r4,r17
  83fdc4:	400b883a 	mov	r5,r8
  83fdc8:	083d8480 	call	83d848 <_Bfree>
  83fdcc:	003d5f06 	br	83f34c <__alt_mem_epcs_flash_controller_0+0xff83634c>
  83fdd0:	d8c00a17 	ldw	r3,40(sp)
  83fdd4:	d8800504 	addi	r2,sp,20
  83fdd8:	018021b4 	movhi	r6,134
  83fddc:	31a55604 	addi	r6,r6,-27304
  83fde0:	d8c00115 	stw	r3,4(sp)
  83fde4:	d8800015 	stw	r2,0(sp)
  83fde8:	d9c00404 	addi	r7,sp,16
  83fdec:	d9400604 	addi	r5,sp,24
  83fdf0:	8809883a 	mov	r4,r17
  83fdf4:	08459600 	call	845960 <__gethex>
  83fdf8:	148001cc 	andi	r18,r2,7
  83fdfc:	903e2126 	beq	r18,zero,83f684 <__alt_mem_epcs_flash_controller_0+0xff836684>
  83fe00:	00c00184 	movi	r3,6
  83fe04:	90c0c71e 	bne	r18,r3,840124 <_strtod_r+0x107c>
  83fe08:	84000044 	addi	r16,r16,1
  83fe0c:	dc000615 	stw	r16,24(sp)
  83fe10:	d8000815 	stw	zero,32(sp)
  83fe14:	0039883a 	mov	fp,zero
  83fe18:	d8000a15 	stw	zero,40(sp)
  83fe1c:	003d4b06 	br	83f34c <__alt_mem_epcs_flash_controller_0+0xff83634c>
  83fe20:	00bf2c34 	movhi	r2,64688
  83fe24:	b0ad883a 	add	r22,r22,r2
  83fe28:	b809883a 	mov	r4,r23
  83fe2c:	b00b883a 	mov	r5,r22
  83fe30:	083e3800 	call	83e380 <__ulp>
  83fe34:	d9000f17 	ldw	r4,60(sp)
  83fe38:	100d883a 	mov	r6,r2
  83fe3c:	180f883a 	mov	r7,r3
  83fe40:	a00b883a 	mov	r5,r20
  83fe44:	083149c0 	call	83149c <__muldf3>
  83fe48:	b80d883a 	mov	r6,r23
  83fe4c:	1009883a 	mov	r4,r2
  83fe50:	b00f883a 	mov	r7,r22
  83fe54:	180b883a 	mov	r5,r3
  83fe58:	08475300 	call	847530 <__adddf3>
  83fe5c:	011f2834 	movhi	r4,31904
  83fe60:	102f883a 	mov	r23,r2
  83fe64:	213fffc4 	addi	r4,r4,-1
  83fe68:	189ffc2c 	andhi	r2,r3,32752
  83fe6c:	20807b2e 	bgeu	r4,r2,84005c <_strtod_r+0xfb4>
  83fe70:	d9401217 	ldw	r5,72(sp)
  83fe74:	009ffc34 	movhi	r2,32752
  83fe78:	10bfffc4 	addi	r2,r2,-1
  83fe7c:	28bfb926 	beq	r5,r2,83fd64 <__alt_mem_epcs_flash_controller_0+0xff836d64>
  83fe80:	059ffc34 	movhi	r22,32752
  83fe84:	b5bfffc4 	addi	r22,r22,-1
  83fe88:	05ffffc4 	movi	r23,-1
  83fe8c:	003f1406 	br	83fae0 <__alt_mem_epcs_flash_controller_0+0xff836ae0>
  83fe90:	00800884 	movi	r2,34
  83fe94:	88800015 	stw	r2,0(r17)
  83fe98:	d8000815 	stw	zero,32(sp)
  83fe9c:	071ffc34 	movhi	fp,32752
  83fea0:	003d2a06 	br	83f34c <__alt_mem_epcs_flash_controller_0+0xff83634c>
  83fea4:	d9400d17 	ldw	r5,52(sp)
  83fea8:	d9001017 	ldw	r4,64(sp)
  83feac:	08493000 	call	849300 <__fixdfsi>
  83feb0:	1009883a 	mov	r4,r2
  83feb4:	08493800 	call	849380 <__floatsidf>
  83feb8:	d9001017 	ldw	r4,64(sp)
  83febc:	d9400d17 	ldw	r5,52(sp)
  83fec0:	100d883a 	mov	r6,r2
  83fec4:	180f883a 	mov	r7,r3
  83fec8:	0848a040 	call	848a04 <__subdf3>
  83fecc:	1011883a 	mov	r8,r2
  83fed0:	1839883a 	mov	fp,r3
  83fed4:	a800121e 	bne	r21,zero,83ff20 <_strtod_r+0xe78>
  83fed8:	b800111e 	bne	r23,zero,83ff20 <_strtod_r+0xe78>
  83fedc:	01400434 	movhi	r5,16
  83fee0:	297fffc4 	addi	r5,r5,-1
  83fee4:	a168703a 	and	r20,r20,r5
  83fee8:	a0000d1e 	bne	r20,zero,83ff20 <_strtod_r+0xe78>
  83feec:	01a52834 	movhi	r6,38048
  83fef0:	01cff434 	movhi	r7,16336
  83fef4:	318d6544 	addi	r6,r6,13717
  83fef8:	39ffffc4 	addi	r7,r7,-1
  83fefc:	1009883a 	mov	r4,r2
  83ff00:	180b883a 	mov	r5,r3
  83ff04:	08489100 	call	848910 <__ledf2>
  83ff08:	103ef50e 	bge	r2,zero,83fae0 <__alt_mem_epcs_flash_controller_0+0xff836ae0>
  83ff0c:	9011883a 	mov	r8,r18
  83ff10:	d8800517 	ldw	r2,20(sp)
  83ff14:	d8000815 	stw	zero,32(sp)
  83ff18:	b039883a 	mov	fp,r22
  83ff1c:	003f9a06 	br	83fd88 <__alt_mem_epcs_flash_controller_0+0xff836d88>
  83ff20:	01a52834 	movhi	r6,38048
  83ff24:	01cff834 	movhi	r7,16352
  83ff28:	4009883a 	mov	r4,r8
  83ff2c:	318d6544 	addi	r6,r6,13717
  83ff30:	39ffffc4 	addi	r7,r7,-1
  83ff34:	e00b883a 	mov	r5,fp
  83ff38:	da001315 	stw	r8,76(sp)
  83ff3c:	08489100 	call	848910 <__ledf2>
  83ff40:	da001317 	ldw	r8,76(sp)
  83ff44:	10000716 	blt	r2,zero,83ff64 <_strtod_r+0xebc>
  83ff48:	018d6c34 	movhi	r6,13744
  83ff4c:	31b94d44 	addi	r6,r6,-6859
  83ff50:	01cff834 	movhi	r7,16352
  83ff54:	4009883a 	mov	r4,r8
  83ff58:	e00b883a 	mov	r5,fp
  83ff5c:	08488340 	call	848834 <__gedf2>
  83ff60:	00bedf0e 	bge	zero,r2,83fae0 <__alt_mem_epcs_flash_controller_0+0xff836ae0>
  83ff64:	9011883a 	mov	r8,r18
  83ff68:	d8800517 	ldw	r2,20(sp)
  83ff6c:	ddc00815 	stw	r23,32(sp)
  83ff70:	b039883a 	mov	fp,r22
  83ff74:	003f8406 	br	83fd88 <__alt_mem_epcs_flash_controller_0+0xff836d88>
  83ff78:	903e1026 	beq	r18,zero,83f7bc <__alt_mem_epcs_flash_controller_0+0xff8367bc>
  83ff7c:	04a5c83a 	sub	r18,zero,r18
  83ff80:	908003cc 	andi	r2,r18,15
  83ff84:	10000b26 	beq	r2,zero,83ffb4 <_strtod_r+0xf0c>
  83ff88:	100490fa 	slli	r2,r2,3
  83ff8c:	00c021b4 	movhi	r3,134
  83ff90:	18e51b04 	addi	r3,r3,-27540
  83ff94:	1885883a 	add	r2,r3,r2
  83ff98:	11800017 	ldw	r6,0(r2)
  83ff9c:	11c00117 	ldw	r7,4(r2)
  83ffa0:	b809883a 	mov	r4,r23
  83ffa4:	b00b883a 	mov	r5,r22
  83ffa8:	0847ddc0 	call	847ddc <__divdf3>
  83ffac:	102f883a 	mov	r23,r2
  83ffb0:	182d883a 	mov	r22,r3
  83ffb4:	9025d13a 	srai	r18,r18,4
  83ffb8:	903e0026 	beq	r18,zero,83f7bc <__alt_mem_epcs_flash_controller_0+0xff8367bc>
  83ffbc:	008007c4 	movi	r2,31
  83ffc0:	14801f16 	blt	r2,r18,840040 <_strtod_r+0xf98>
  83ffc4:	9080040c 	andi	r2,r18,16
  83ffc8:	10018d26 	beq	r2,zero,840600 <_strtod_r+0x1558>
  83ffcc:	00c01a84 	movi	r3,106
  83ffd0:	d8c00715 	stw	r3,28(sp)
  83ffd4:	04817e0e 	bge	zero,r18,8405d0 <_strtod_r+0x1528>
  83ffd8:	050021b4 	movhi	r20,134
  83ffdc:	a5255b04 	addi	r20,r20,-27284
  83ffe0:	b805883a 	mov	r2,r23
  83ffe4:	b007883a 	mov	r3,r22
  83ffe8:	0009883a 	mov	r4,zero
  83ffec:	9180004c 	andi	r6,r18,1
  83fff0:	30000626 	beq	r6,zero,84000c <_strtod_r+0xf64>
  83fff4:	a1800017 	ldw	r6,0(r20)
  83fff8:	a1c00117 	ldw	r7,4(r20)
  83fffc:	1009883a 	mov	r4,r2
  840000:	180b883a 	mov	r5,r3
  840004:	083149c0 	call	83149c <__muldf3>
  840008:	01000044 	movi	r4,1
  84000c:	9025d07a 	srai	r18,r18,1
  840010:	a5000204 	addi	r20,r20,8
  840014:	903ff51e 	bne	r18,zero,83ffec <__alt_mem_epcs_flash_controller_0+0xff836fec>
  840018:	21003fcc 	andi	r4,r4,255
  84001c:	2001891e 	bne	r4,zero,840644 <_strtod_r+0x159c>
  840020:	d9000717 	ldw	r4,28(sp)
  840024:	20016a1e 	bne	r4,zero,8405d0 <_strtod_r+0x1528>
  840028:	000d883a 	mov	r6,zero
  84002c:	000f883a 	mov	r7,zero
  840030:	b809883a 	mov	r4,r23
  840034:	b00b883a 	mov	r5,r22
  840038:	08487ac0 	call	8487ac <__eqdf2>
  84003c:	103de01e 	bne	r2,zero,83f7c0 <__alt_mem_epcs_flash_controller_0+0xff8367c0>
  840040:	00800884 	movi	r2,34
  840044:	88800015 	stw	r2,0(r17)
  840048:	d8000815 	stw	zero,32(sp)
  84004c:	0039883a 	mov	fp,zero
  840050:	003cbe06 	br	83f34c <__alt_mem_epcs_flash_controller_0+0xff83634c>
  840054:	011387c4 	movi	r4,19999
  840058:	003d5606 	br	83f5b4 <__alt_mem_epcs_flash_controller_0+0xff8365b4>
  84005c:	0580d434 	movhi	r22,848
  840060:	1dad883a 	add	r22,r3,r22
  840064:	b029883a 	mov	r20,r22
  840068:	003e9906 	br	83fad0 <__alt_mem_epcs_flash_controller_0+0xff836ad0>
  84006c:	e5c03fcc 	andi	r23,fp,255
  840070:	bdc0201c 	xori	r23,r23,128
  840074:	bdffe004 	addi	r23,r23,-128
  840078:	dc800817 	ldw	r18,32(sp)
  84007c:	0029883a 	mov	r20,zero
  840080:	0027883a 	mov	r19,zero
  840084:	0021883a 	mov	r16,zero
  840088:	003c9806 	br	83f2ec <__alt_mem_epcs_flash_controller_0+0xff8362ec>
  84008c:	00c00944 	movi	r3,37
  840090:	1f07c83a 	sub	r3,r3,fp
  840094:	1d7d7e16 	blt	r3,r21,83f690 <__alt_mem_epcs_flash_controller_0+0xff836690>
  840098:	1721c83a 	sub	r16,r2,fp
  84009c:	800490fa 	slli	r2,r16,3
  8400a0:	044021b4 	movhi	r17,134
  8400a4:	8c651b04 	addi	r17,r17,-27540
  8400a8:	8885883a 	add	r2,r17,r2
  8400ac:	11000017 	ldw	r4,0(r2)
  8400b0:	11400117 	ldw	r5,4(r2)
  8400b4:	b80d883a 	mov	r6,r23
  8400b8:	b00f883a 	mov	r7,r22
  8400bc:	083149c0 	call	83149c <__muldf3>
  8400c0:	ac2bc83a 	sub	r21,r21,r16
  8400c4:	a80c90fa 	slli	r6,r21,3
  8400c8:	1009883a 	mov	r4,r2
  8400cc:	180b883a 	mov	r5,r3
  8400d0:	8985883a 	add	r2,r17,r6
  8400d4:	11800017 	ldw	r6,0(r2)
  8400d8:	11c00117 	ldw	r7,4(r2)
  8400dc:	083149c0 	call	83149c <__muldf3>
  8400e0:	d8800815 	stw	r2,32(sp)
  8400e4:	1839883a 	mov	fp,r3
  8400e8:	003c9806 	br	83f34c <__alt_mem_epcs_flash_controller_0+0xff83634c>
  8400ec:	da000d17 	ldw	r8,52(sp)
  8400f0:	003f1606 	br	83fd4c <__alt_mem_epcs_flash_controller_0+0xff836d4c>
  8400f4:	014ffc34 	movhi	r5,16368
  8400f8:	d8001015 	stw	zero,64(sp)
  8400fc:	d9400d15 	stw	r5,52(sp)
  840100:	003f0f06 	br	83fd40 <__alt_mem_epcs_flash_controller_0+0xff836d40>
  840104:	b03f001e 	bne	r22,zero,83fd08 <__alt_mem_epcs_flash_controller_0+0xff836d08>
  840108:	9011883a 	mov	r8,r18
  84010c:	00800884 	movi	r2,34
  840110:	88800015 	stw	r2,0(r17)
  840114:	d8000815 	stw	zero,32(sp)
  840118:	d8800517 	ldw	r2,20(sp)
  84011c:	0039883a 	mov	fp,zero
  840120:	003f1906 	br	83fd88 <__alt_mem_epcs_flash_controller_0+0xff836d88>
  840124:	d9800517 	ldw	r6,20(sp)
  840128:	30000826 	beq	r6,zero,84014c <_strtod_r+0x10a4>
  84012c:	01400d44 	movi	r5,53
  840130:	d9000204 	addi	r4,sp,8
  840134:	d8801315 	stw	r2,76(sp)
  840138:	083e7540 	call	83e754 <__copybits>
  84013c:	d9400517 	ldw	r5,20(sp)
  840140:	8809883a 	mov	r4,r17
  840144:	083d8480 	call	83d848 <_Bfree>
  840148:	d8801317 	ldw	r2,76(sp)
  84014c:	00c00184 	movi	r3,6
  840150:	1c800f36 	bltu	r3,r18,840190 <_strtod_r+0x10e8>
  840154:	902490ba 	slli	r18,r18,2
  840158:	00c02134 	movhi	r3,132
  84015c:	18c05b04 	addi	r3,r3,364
  840160:	90e5883a 	add	r18,r18,r3
  840164:	90c00017 	ldw	r3,0(r18)
  840168:	1800683a 	jmp	r3
  84016c:	008401e8 	cmpgeui	r2,zero,4103
  840170:	008401c0 	call	8401c <OSCtxSw_SWITCH_PC+0x83fdc>
  840174:	008401a4 	muli	r2,zero,4102
  840178:	00840188 	cmpgei	r2,zero,4102
  84017c:	008401b0 	cmpltui	r2,zero,4102
  840180:	008401c0 	call	8401c <OSCtxSw_SWITCH_PC+0x83fdc>
  840184:	008401e8 	cmpgeui	r2,zero,4103
  840188:	059ffc34 	movhi	r22,32752
  84018c:	002f883a 	mov	r23,zero
  840190:	1080020c 	andi	r2,r2,8
  840194:	ddc00815 	stw	r23,32(sp)
  840198:	103cc426 	beq	r2,zero,83f4ac <__alt_mem_epcs_flash_controller_0+0xff8364ac>
  84019c:	b7200034 	orhi	fp,r22,32768
  8401a0:	003c6a06 	br	83f34c <__alt_mem_epcs_flash_controller_0+0xff83634c>
  8401a4:	ddc00217 	ldw	r23,8(sp)
  8401a8:	dd800317 	ldw	r22,12(sp)
  8401ac:	003ff806 	br	840190 <__alt_mem_epcs_flash_controller_0+0xff837190>
  8401b0:	05a00034 	movhi	r22,32768
  8401b4:	b5bfffc4 	addi	r22,r22,-1
  8401b8:	05ffffc4 	movi	r23,-1
  8401bc:	003ff406 	br	840190 <__alt_mem_epcs_flash_controller_0+0xff837190>
  8401c0:	d8c00417 	ldw	r3,16(sp)
  8401c4:	dd800317 	ldw	r22,12(sp)
  8401c8:	013ffc34 	movhi	r4,65520
  8401cc:	18c10cc4 	addi	r3,r3,1075
  8401d0:	1806953a 	slli	r3,r3,20
  8401d4:	213fffc4 	addi	r4,r4,-1
  8401d8:	b12c703a 	and	r22,r22,r4
  8401dc:	ddc00217 	ldw	r23,8(sp)
  8401e0:	b0ecb03a 	or	r22,r22,r3
  8401e4:	003fea06 	br	840190 <__alt_mem_epcs_flash_controller_0+0xff837190>
  8401e8:	002d883a 	mov	r22,zero
  8401ec:	002f883a 	mov	r23,zero
  8401f0:	003fe706 	br	840190 <__alt_mem_epcs_flash_controller_0+0xff837190>
  8401f4:	d8c00b17 	ldw	r3,44(sp)
  8401f8:	b72d883a 	add	r22,r22,fp
  8401fc:	1887883a 	add	r3,r3,r2
  840200:	d8c00b15 	stw	r3,44(sp)
  840204:	00c00044 	movi	r3,1
  840208:	10c11126 	beq	r2,r3,840650 <_strtod_r+0x15a8>
  84020c:	05c00204 	movi	r23,8
  840210:	04800404 	movi	r18,16
  840214:	e7000044 	addi	fp,fp,1
  840218:	e0bfffc4 	addi	r2,fp,-1
  84021c:	b8802016 	blt	r23,r2,8402a0 <_strtod_r+0x11f8>
  840220:	9809883a 	mov	r4,r19
  840224:	01400284 	movi	r5,10
  840228:	08305040 	call	830504 <__mulsi3>
  84022c:	1027883a 	mov	r19,r2
  840230:	e5bff81e 	bne	fp,r22,840214 <__alt_mem_epcs_flash_controller_0+0xff837214>
  840234:	ddc00617 	ldw	r23,24(sp)
  840238:	e7000044 	addi	fp,fp,1
  84023c:	00800204 	movi	r2,8
  840240:	1580100e 	bge	r2,r22,840284 <_strtod_r+0x11dc>
  840244:	00800404 	movi	r2,16
  840248:	002d883a 	mov	r22,zero
  84024c:	173e7b16 	blt	r2,fp,83fc3c <__alt_mem_epcs_flash_controller_0+0xff836c3c>
  840250:	a009883a 	mov	r4,r20
  840254:	01400284 	movi	r5,10
  840258:	08305040 	call	830504 <__mulsi3>
  84025c:	a8a9883a 	add	r20,r21,r2
  840260:	003e7606 	br	83fc3c <__alt_mem_epcs_flash_controller_0+0xff836c3c>
  840264:	d9000617 	ldw	r4,24(sp)
  840268:	bdfff404 	addi	r23,r23,-48
  84026c:	b5800044 	addi	r22,r22,1
  840270:	ddc00e15 	stw	r23,56(sp)
  840274:	d9000815 	stw	r4,32(sp)
  840278:	dd800b15 	stw	r22,44(sp)
  84027c:	202f883a 	mov	r23,r4
  840280:	07000044 	movi	fp,1
  840284:	9809883a 	mov	r4,r19
  840288:	01400284 	movi	r5,10
  84028c:	08305040 	call	830504 <__mulsi3>
  840290:	d8c00e17 	ldw	r3,56(sp)
  840294:	002d883a 	mov	r22,zero
  840298:	18a7883a 	add	r19,r3,r2
  84029c:	003e6706 	br	83fc3c <__alt_mem_epcs_flash_controller_0+0xff836c3c>
  8402a0:	973fe316 	blt	r18,fp,840230 <__alt_mem_epcs_flash_controller_0+0xff837230>
  8402a4:	a009883a 	mov	r4,r20
  8402a8:	01400284 	movi	r5,10
  8402ac:	08305040 	call	830504 <__mulsi3>
  8402b0:	1029883a 	mov	r20,r2
  8402b4:	003fde06 	br	840230 <__alt_mem_epcs_flash_controller_0+0xff837230>
  8402b8:	00bffa84 	movi	r2,-22
  8402bc:	a8bcf416 	blt	r21,r2,83f690 <__alt_mem_epcs_flash_controller_0+0xff836690>
  8402c0:	a82a90fa 	slli	r21,r21,3
  8402c4:	008021b4 	movhi	r2,134
  8402c8:	10a51b04 	addi	r2,r2,-27540
  8402cc:	1545c83a 	sub	r2,r2,r21
  8402d0:	11800017 	ldw	r6,0(r2)
  8402d4:	11c00117 	ldw	r7,4(r2)
  8402d8:	b809883a 	mov	r4,r23
  8402dc:	b00b883a 	mov	r5,r22
  8402e0:	0847ddc0 	call	847ddc <__divdf3>
  8402e4:	d8800815 	stw	r2,32(sp)
  8402e8:	1839883a 	mov	fp,r3
  8402ec:	003c1706 	br	83f34c <__alt_mem_epcs_flash_controller_0+0xff83634c>
  8402f0:	9011883a 	mov	r8,r18
  8402f4:	003ea006 	br	83fd78 <__alt_mem_epcs_flash_controller_0+0xff836d78>
  8402f8:	014021b4 	movhi	r5,134
  8402fc:	d9000617 	ldw	r4,24(sp)
  840300:	29654d04 	addi	r5,r5,-27340
  840304:	01c00644 	movi	r7,25
  840308:	00000b06 	br	840338 <_strtod_r+0x1290>
  84030c:	21000044 	addi	r4,r4,1
  840310:	20800003 	ldbu	r2,0(r4)
  840314:	10ffefc4 	addi	r3,r2,-65
  840318:	10803fcc 	andi	r2,r2,255
  84031c:	1080201c 	xori	r2,r2,128
  840320:	18c03fcc 	andi	r3,r3,255
  840324:	10bfe004 	addi	r2,r2,-128
  840328:	38c00136 	bltu	r7,r3,840330 <_strtod_r+0x1288>
  84032c:	10800804 	addi	r2,r2,32
  840330:	29400044 	addi	r5,r5,1
  840334:	11bba91e 	bne	r2,r6,83f1dc <__alt_mem_epcs_flash_controller_0+0xff8361dc>
  840338:	29800007 	ldb	r6,0(r5)
  84033c:	303ff31e 	bne	r6,zero,84030c <__alt_mem_epcs_flash_controller_0+0xff83730c>
  840340:	018021b4 	movhi	r6,134
  840344:	d9000615 	stw	r4,24(sp)
  840348:	31a54e04 	addi	r6,r6,-27336
  84034c:	200b883a 	mov	r5,r4
  840350:	02000644 	movi	r8,25
  840354:	00000a06 	br	840380 <_strtod_r+0x12d8>
  840358:	28800003 	ldbu	r2,0(r5)
  84035c:	10ffefc4 	addi	r3,r2,-65
  840360:	10803fcc 	andi	r2,r2,255
  840364:	1080201c 	xori	r2,r2,128
  840368:	18c03fcc 	andi	r3,r3,255
  84036c:	10bfe004 	addi	r2,r2,-128
  840370:	40c00136 	bltu	r8,r3,840378 <_strtod_r+0x12d0>
  840374:	10800804 	addi	r2,r2,32
  840378:	31800044 	addi	r6,r6,1
  84037c:	11c0691e 	bne	r2,r7,840524 <_strtod_r+0x147c>
  840380:	31c00007 	ldb	r7,0(r6)
  840384:	29400044 	addi	r5,r5,1
  840388:	383ff31e 	bne	r7,zero,840358 <__alt_mem_epcs_flash_controller_0+0xff837358>
  84038c:	d9400615 	stw	r5,24(sp)
  840390:	059ffc34 	movhi	r22,32752
  840394:	002f883a 	mov	r23,zero
  840398:	003c4306 	br	83f4a8 <__alt_mem_epcs_flash_controller_0+0xff8364a8>
  84039c:	002d883a 	mov	r22,zero
  8403a0:	003cad06 	br	83f658 <__alt_mem_epcs_flash_controller_0+0xff836658>
  8403a4:	9011883a 	mov	r8,r18
  8403a8:	df001217 	ldw	fp,72(sp)
  8403ac:	a800461e 	bne	r21,zero,8404c8 <_strtod_r+0x1420>
  8403b0:	b800451e 	bne	r23,zero,8404c8 <_strtod_r+0x1420>
  8403b4:	00800434 	movhi	r2,16
  8403b8:	10bfffc4 	addi	r2,r2,-1
  8403bc:	b084703a 	and	r2,r22,r2
  8403c0:	1000411e 	bne	r2,zero,8404c8 <_strtod_r+0x1420>
  8403c4:	b49ffc2c 	andhi	r18,r22,32752
  8403c8:	0081ac34 	movhi	r2,1712
  8403cc:	14803e2e 	bgeu	r2,r18,8404c8 <_strtod_r+0x1420>
  8403d0:	40800517 	ldw	r2,20(r8)
  8403d4:	1000031e 	bne	r2,zero,8403e4 <_strtod_r+0x133c>
  8403d8:	40800417 	ldw	r2,16(r8)
  8403dc:	00c00044 	movi	r3,1
  8403e0:	1880390e 	bge	r3,r2,8404c8 <_strtod_r+0x1420>
  8403e4:	400b883a 	mov	r5,r8
  8403e8:	01800044 	movi	r6,1
  8403ec:	8809883a 	mov	r4,r17
  8403f0:	083dfdc0 	call	83dfdc <__lshift>
  8403f4:	800b883a 	mov	r5,r16
  8403f8:	1009883a 	mov	r4,r2
  8403fc:	d8801315 	stw	r2,76(sp)
  840400:	083e1240 	call	83e124 <__mcmp>
  840404:	da001317 	ldw	r8,76(sp)
  840408:	00802f0e 	bge	zero,r2,8404c8 <_strtod_r+0x1420>
  84040c:	d9000717 	ldw	r4,28(sp)
  840410:	20008026 	beq	r4,zero,840614 <_strtod_r+0x156c>
  840414:	0081ac34 	movhi	r2,1712
  840418:	14807e16 	blt	r2,r18,840614 <_strtod_r+0x156c>
  84041c:	0080dc34 	movhi	r2,880
  840420:	14bf3a0e 	bge	r2,r18,84010c <__alt_mem_epcs_flash_controller_0+0xff83710c>
  840424:	d9000817 	ldw	r4,32(sp)
  840428:	e00b883a 	mov	r5,fp
  84042c:	000d883a 	mov	r6,zero
  840430:	01ce5434 	movhi	r7,14672
  840434:	da001315 	stw	r8,76(sp)
  840438:	083149c0 	call	83149c <__muldf3>
  84043c:	d8800815 	stw	r2,32(sp)
  840440:	1839883a 	mov	fp,r3
  840444:	da001317 	ldw	r8,76(sp)
  840448:	1800211e 	bne	r3,zero,8404d0 <_strtod_r+0x1428>
  84044c:	d8c00817 	ldw	r3,32(sp)
  840450:	d8800517 	ldw	r2,20(sp)
  840454:	183e4c1e 	bne	r3,zero,83fd88 <__alt_mem_epcs_flash_controller_0+0xff836d88>
  840458:	00c00884 	movi	r3,34
  84045c:	88c00015 	stw	r3,0(r17)
  840460:	003e4906 	br	83fd88 <__alt_mem_epcs_flash_controller_0+0xff836d88>
  840464:	00800434 	movhi	r2,16
  840468:	9011883a 	mov	r8,r18
  84046c:	df001217 	ldw	fp,72(sp)
  840470:	10bfffc4 	addi	r2,r2,-1
  840474:	a8002226 	beq	r21,zero,840500 <_strtod_r+0x1458>
  840478:	b086703a 	and	r3,r22,r2
  84047c:	18804126 	beq	r3,r2,840584 <_strtod_r+0x14dc>
  840480:	d8c00d17 	ldw	r3,52(sp)
  840484:	18002326 	beq	r3,zero,840514 <_strtod_r+0x146c>
  840488:	1da4703a 	and	r18,r3,r22
  84048c:	90000e26 	beq	r18,zero,8404c8 <_strtod_r+0x1420>
  840490:	da001315 	stw	r8,76(sp)
  840494:	d9800717 	ldw	r6,28(sp)
  840498:	b809883a 	mov	r4,r23
  84049c:	b00b883a 	mov	r5,r22
  8404a0:	a8002826 	beq	r21,zero,840544 <_strtod_r+0x149c>
  8404a4:	083f0440 	call	83f044 <sulp>
  8404a8:	100d883a 	mov	r6,r2
  8404ac:	180f883a 	mov	r7,r3
  8404b0:	b809883a 	mov	r4,r23
  8404b4:	b00b883a 	mov	r5,r22
  8404b8:	08475300 	call	847530 <__adddf3>
  8404bc:	da001317 	ldw	r8,76(sp)
  8404c0:	d8800815 	stw	r2,32(sp)
  8404c4:	1839883a 	mov	fp,r3
  8404c8:	d8800717 	ldw	r2,28(sp)
  8404cc:	103fd51e 	bne	r2,zero,840424 <__alt_mem_epcs_flash_controller_0+0xff837424>
  8404d0:	d8800517 	ldw	r2,20(sp)
  8404d4:	003e2c06 	br	83fd88 <__alt_mem_epcs_flash_controller_0+0xff836d88>
  8404d8:	0580d434 	movhi	r22,848
  8404dc:	1dad883a 	add	r22,r3,r22
  8404e0:	d8000715 	stw	zero,28(sp)
  8404e4:	003cb606 	br	83f7c0 <__alt_mem_epcs_flash_controller_0+0xff8367c0>
  8404e8:	008ff834 	movhi	r2,16352
  8404ec:	0029883a 	mov	r20,zero
  8404f0:	022ff834 	movhi	r8,49120
  8404f4:	d8001015 	stw	zero,64(sp)
  8404f8:	d8800d15 	stw	r2,52(sp)
  8404fc:	003dc106 	br	83fc04 <__alt_mem_epcs_flash_controller_0+0xff836c04>
  840500:	b084703a 	and	r2,r22,r2
  840504:	103fde1e 	bne	r2,zero,840480 <__alt_mem_epcs_flash_controller_0+0xff837480>
  840508:	b83fdd1e 	bne	r23,zero,840480 <__alt_mem_epcs_flash_controller_0+0xff837480>
  84050c:	b49ffc2c 	andhi	r18,r22,32752
  840510:	003fbe06 	br	84040c <__alt_mem_epcs_flash_controller_0+0xff83740c>
  840514:	d8c00f17 	ldw	r3,60(sp)
  840518:	1de8703a 	and	r20,r3,r23
  84051c:	a03fea26 	beq	r20,zero,8404c8 <__alt_mem_epcs_flash_controller_0+0xff8374c8>
  840520:	003fdb06 	br	840490 <__alt_mem_epcs_flash_controller_0+0xff837490>
  840524:	21000044 	addi	r4,r4,1
  840528:	d9000615 	stw	r4,24(sp)
  84052c:	003f9806 	br	840390 <__alt_mem_epcs_flash_controller_0+0xff837390>
  840530:	014021b4 	movhi	r5,134
  840534:	29651104 	addi	r5,r5,-27580
  840538:	d9400715 	stw	r5,28(sp)
  84053c:	0025883a 	mov	r18,zero
  840540:	003c8c06 	br	83f774 <__alt_mem_epcs_flash_controller_0+0xff836774>
  840544:	083f0440 	call	83f044 <sulp>
  840548:	100d883a 	mov	r6,r2
  84054c:	180f883a 	mov	r7,r3
  840550:	b809883a 	mov	r4,r23
  840554:	b00b883a 	mov	r5,r22
  840558:	0848a040 	call	848a04 <__subdf3>
  84055c:	000d883a 	mov	r6,zero
  840560:	000f883a 	mov	r7,zero
  840564:	1009883a 	mov	r4,r2
  840568:	180b883a 	mov	r5,r3
  84056c:	d8800815 	stw	r2,32(sp)
  840570:	1839883a 	mov	fp,r3
  840574:	08487ac0 	call	8487ac <__eqdf2>
  840578:	da001317 	ldw	r8,76(sp)
  84057c:	103ee326 	beq	r2,zero,84010c <__alt_mem_epcs_flash_controller_0+0xff83710c>
  840580:	003fd106 	br	8404c8 <__alt_mem_epcs_flash_controller_0+0xff8374c8>
  840584:	d8c00717 	ldw	r3,28(sp)
  840588:	18002026 	beq	r3,zero,84060c <_strtod_r+0x1564>
  84058c:	b09ffc2c 	andhi	r2,r22,32752
  840590:	00c1a834 	movhi	r3,1696
  840594:	18801d36 	bltu	r3,r2,84060c <_strtod_r+0x1564>
  840598:	1004d53a 	srli	r2,r2,20
  84059c:	00c01ac4 	movi	r3,107
  8405a0:	1887c83a 	sub	r3,r3,r2
  8405a4:	00bfffc4 	movi	r2,-1
  8405a8:	10c4983a 	sll	r2,r2,r3
  8405ac:	15ffb41e 	bne	r2,r23,840480 <__alt_mem_epcs_flash_controller_0+0xff837480>
  8405b0:	00dffc34 	movhi	r3,32752
  8405b4:	18ffffc4 	addi	r3,r3,-1
  8405b8:	b0c03126 	beq	r22,r3,840680 <_strtod_r+0x15d8>
  8405bc:	b59ffc2c 	andhi	r22,r22,32752
  8405c0:	00800434 	movhi	r2,16
  8405c4:	d8000815 	stw	zero,32(sp)
  8405c8:	b0b9883a 	add	fp,r22,r2
  8405cc:	003fbe06 	br	8404c8 <__alt_mem_epcs_flash_controller_0+0xff8374c8>
  8405d0:	b49ffc2c 	andhi	r18,r22,32752
  8405d4:	9024d53a 	srli	r18,r18,20
  8405d8:	00801ac4 	movi	r2,107
  8405dc:	14a5c83a 	sub	r18,r2,r18
  8405e0:	04be910e 	bge	zero,r18,840028 <__alt_mem_epcs_flash_controller_0+0xff837028>
  8405e4:	008007c4 	movi	r2,31
  8405e8:	1480120e 	bge	r2,r18,840634 <_strtod_r+0x158c>
  8405ec:	00800d04 	movi	r2,52
  8405f0:	002f883a 	mov	r23,zero
  8405f4:	14801a0e 	bge	r2,r18,840660 <_strtod_r+0x15b8>
  8405f8:	0580dc34 	movhi	r22,880
  8405fc:	003e8a06 	br	840028 <__alt_mem_epcs_flash_controller_0+0xff837028>
  840600:	d8000715 	stw	zero,28(sp)
  840604:	04be7416 	blt	zero,r18,83ffd8 <__alt_mem_epcs_flash_controller_0+0xff836fd8>
  840608:	003e8706 	br	840028 <__alt_mem_epcs_flash_controller_0+0xff837028>
  84060c:	00bfffc4 	movi	r2,-1
  840610:	003fe606 	br	8405ac <__alt_mem_epcs_flash_controller_0+0xff8375ac>
  840614:	073ffc34 	movhi	fp,65520
  840618:	9725883a 	add	r18,r18,fp
  84061c:	017fffc4 	movi	r5,-1
  840620:	07000434 	movhi	fp,16
  840624:	e179883a 	add	fp,fp,r5
  840628:	d9400815 	stw	r5,32(sp)
  84062c:	9738b03a 	or	fp,r18,fp
  840630:	003fa506 	br	8404c8 <__alt_mem_epcs_flash_controller_0+0xff8374c8>
  840634:	00bfffc4 	movi	r2,-1
  840638:	14a4983a 	sll	r18,r2,r18
  84063c:	95ee703a 	and	r23,r18,r23
  840640:	003e7906 	br	840028 <__alt_mem_epcs_flash_controller_0+0xff837028>
  840644:	102f883a 	mov	r23,r2
  840648:	182d883a 	mov	r22,r3
  84064c:	003e7406 	br	840020 <__alt_mem_epcs_flash_controller_0+0xff837020>
  840650:	e02d883a 	mov	r22,fp
  840654:	ddc00617 	ldw	r23,24(sp)
  840658:	e0f9883a 	add	fp,fp,r3
  84065c:	003ef706 	br	84023c <__alt_mem_epcs_flash_controller_0+0xff83723c>
  840660:	94bff804 	addi	r18,r18,-32
  840664:	00bfffc4 	movi	r2,-1
  840668:	14a4983a 	sll	r18,r2,r18
  84066c:	95ac703a 	and	r22,r18,r22
  840670:	003e6d06 	br	840028 <__alt_mem_epcs_flash_controller_0+0xff837028>
  840674:	102f883a 	mov	r23,r2
  840678:	182d883a 	mov	r22,r3
  84067c:	003c3d06 	br	83f774 <__alt_mem_epcs_flash_controller_0+0xff836774>
  840680:	00ffffc4 	movi	r3,-1
  840684:	10ffcd1e 	bne	r2,r3,8405bc <__alt_mem_epcs_flash_controller_0+0xff8375bc>
  840688:	003dba06 	br	83fd74 <__alt_mem_epcs_flash_controller_0+0xff836d74>

0084068c <strtod>:
  84068c:	008021b4 	movhi	r2,134
  840690:	10adb604 	addi	r2,r2,-18728
  840694:	280d883a 	mov	r6,r5
  840698:	200b883a 	mov	r5,r4
  84069c:	11000017 	ldw	r4,0(r2)
  8406a0:	083f0a81 	jmpi	83f0a8 <_strtod_r>

008406a4 <strtof>:
  8406a4:	defffb04 	addi	sp,sp,-20
  8406a8:	dcc00315 	stw	r19,12(sp)
  8406ac:	04c021b4 	movhi	r19,134
  8406b0:	9cedb604 	addi	r19,r19,-18728
  8406b4:	280d883a 	mov	r6,r5
  8406b8:	200b883a 	mov	r5,r4
  8406bc:	99000017 	ldw	r4,0(r19)
  8406c0:	dfc00415 	stw	ra,16(sp)
  8406c4:	dc800215 	stw	r18,8(sp)
  8406c8:	dc400115 	stw	r17,4(sp)
  8406cc:	dc000015 	stw	r16,0(sp)
  8406d0:	083f0a80 	call	83f0a8 <_strtod_r>
  8406d4:	1009883a 	mov	r4,r2
  8406d8:	180b883a 	mov	r5,r3
  8406dc:	1025883a 	mov	r18,r2
  8406e0:	1823883a 	mov	r17,r3
  8406e4:	0831db00 	call	831db0 <__truncdfsf2>
  8406e8:	000b883a 	mov	r5,zero
  8406ec:	1009883a 	mov	r4,r2
  8406f0:	1021883a 	mov	r16,r2
  8406f4:	08473340 	call	847334 <__eqsf2>
  8406f8:	1000111e 	bne	r2,zero,840740 <strtof+0x9c>
  8406fc:	000d883a 	mov	r6,zero
  840700:	000f883a 	mov	r7,zero
  840704:	9009883a 	mov	r4,r18
  840708:	880b883a 	mov	r5,r17
  84070c:	08487ac0 	call	8487ac <__eqdf2>
  840710:	10000b26 	beq	r2,zero,840740 <strtof+0x9c>
  840714:	98800017 	ldw	r2,0(r19)
  840718:	00c00884 	movi	r3,34
  84071c:	10c00015 	stw	r3,0(r2)
  840720:	8005883a 	mov	r2,r16
  840724:	dfc00417 	ldw	ra,16(sp)
  840728:	dcc00317 	ldw	r19,12(sp)
  84072c:	dc800217 	ldw	r18,8(sp)
  840730:	dc400117 	ldw	r17,4(sp)
  840734:	dc000017 	ldw	r16,0(sp)
  840738:	dec00504 	addi	sp,sp,20
  84073c:	f800283a 	ret
  840740:	015fe034 	movhi	r5,32640
  840744:	297fffc4 	addi	r5,r5,-1
  840748:	8009883a 	mov	r4,r16
  84074c:	08473ac0 	call	8473ac <__gesf2>
  840750:	0080070e 	bge	zero,r2,840770 <strtof+0xcc>
  840754:	01dffc34 	movhi	r7,32752
  840758:	39ffffc4 	addi	r7,r7,-1
  84075c:	01bfffc4 	movi	r6,-1
  840760:	9009883a 	mov	r4,r18
  840764:	880b883a 	mov	r5,r17
  840768:	08488340 	call	848834 <__gedf2>
  84076c:	00bfe90e 	bge	zero,r2,840714 <__alt_mem_epcs_flash_controller_0+0xff837714>
  840770:	017fe034 	movhi	r5,65408
  840774:	297fffc4 	addi	r5,r5,-1
  840778:	8009883a 	mov	r4,r16
  84077c:	08474680 	call	847468 <__lesf2>
  840780:	103fe70e 	bge	r2,zero,840720 <__alt_mem_epcs_flash_controller_0+0xff837720>
  840784:	01fffc34 	movhi	r7,65520
  840788:	39ffffc4 	addi	r7,r7,-1
  84078c:	01bfffc4 	movi	r6,-1
  840790:	9009883a 	mov	r4,r18
  840794:	880b883a 	mov	r5,r17
  840798:	08489100 	call	848910 <__ledf2>
  84079c:	103fdd0e 	bge	r2,zero,840714 <__alt_mem_epcs_flash_controller_0+0xff837714>
  8407a0:	003fdf06 	br	840720 <__alt_mem_epcs_flash_controller_0+0xff837720>

008407a4 <_strtol_r>:
  8407a4:	008021b4 	movhi	r2,134
  8407a8:	defff204 	addi	sp,sp,-56
  8407ac:	10adb904 	addi	r2,r2,-18716
  8407b0:	dd800a15 	stw	r22,40(sp)
  8407b4:	15800017 	ldw	r22,0(r2)
  8407b8:	df000c15 	stw	fp,48(sp)
  8407bc:	d9000315 	stw	r4,12(sp)
  8407c0:	dfc00d15 	stw	ra,52(sp)
  8407c4:	ddc00b15 	stw	r23,44(sp)
  8407c8:	dd400915 	stw	r21,36(sp)
  8407cc:	dd000815 	stw	r20,32(sp)
  8407d0:	dcc00715 	stw	r19,28(sp)
  8407d4:	dc800615 	stw	r18,24(sp)
  8407d8:	dc400515 	stw	r17,20(sp)
  8407dc:	dc000415 	stw	r16,16(sp)
  8407e0:	d9400215 	stw	r5,8(sp)
  8407e4:	d9800015 	stw	r6,0(sp)
  8407e8:	3839883a 	mov	fp,r7
  8407ec:	2809883a 	mov	r4,r5
  8407f0:	24000003 	ldbu	r16,0(r4)
  8407f4:	24400044 	addi	r17,r4,1
  8407f8:	2007883a 	mov	r3,r4
  8407fc:	b405883a 	add	r2,r22,r16
  840800:	10800043 	ldbu	r2,1(r2)
  840804:	8809883a 	mov	r4,r17
  840808:	1080020c 	andi	r2,r2,8
  84080c:	103ff81e 	bne	r2,zero,8407f0 <__alt_mem_epcs_flash_controller_0+0xff8377f0>
  840810:	00800b44 	movi	r2,45
  840814:	80805526 	beq	r16,r2,84096c <_strtol_r+0x1c8>
  840818:	00800ac4 	movi	r2,43
  84081c:	80806026 	beq	r16,r2,8409a0 <_strtol_r+0x1fc>
  840820:	0029883a 	mov	r20,zero
  840824:	e0004726 	beq	fp,zero,840944 <_strtol_r+0x1a0>
  840828:	00800404 	movi	r2,16
  84082c:	e0806626 	beq	fp,r2,8409c8 <_strtol_r+0x224>
  840830:	e027883a 	mov	r19,fp
  840834:	00a00034 	movhi	r2,32768
  840838:	a025003a 	cmpeq	r18,r20,zero
  84083c:	14a5c83a 	sub	r18,r2,r18
  840840:	9009883a 	mov	r4,r18
  840844:	980b883a 	mov	r5,r19
  840848:	08304ac0 	call	8304ac <__umodsi3>
  84084c:	9009883a 	mov	r4,r18
  840850:	980b883a 	mov	r5,r19
  840854:	d8800115 	stw	r2,4(sp)
  840858:	08304480 	call	830448 <__udivsi3>
  84085c:	b407883a 	add	r3,r22,r16
  840860:	18c00043 	ldbu	r3,1(r3)
  840864:	102b883a 	mov	r21,r2
  840868:	0009883a 	mov	r4,zero
  84086c:	1940010c 	andi	r5,r3,4
  840870:	0005883a 	mov	r2,zero
  840874:	04800044 	movi	r18,1
  840878:	05ffffc4 	movi	r23,-1
  84087c:	28000f26 	beq	r5,zero,8408bc <_strtol_r+0x118>
  840880:	843ff404 	addi	r16,r16,-48
  840884:	8700130e 	bge	r16,fp,8408d4 <_strtol_r+0x130>
  840888:	15c00626 	beq	r2,r23,8408a4 <_strtol_r+0x100>
  84088c:	a9002936 	bltu	r21,r4,840934 <_strtol_r+0x190>
  840890:	25402626 	beq	r4,r21,84092c <_strtol_r+0x188>
  840894:	980b883a 	mov	r5,r19
  840898:	08305040 	call	830504 <__mulsi3>
  84089c:	8089883a 	add	r4,r16,r2
  8408a0:	00800044 	movi	r2,1
  8408a4:	8c000003 	ldbu	r16,0(r17)
  8408a8:	8c400044 	addi	r17,r17,1
  8408ac:	b407883a 	add	r3,r22,r16
  8408b0:	18c00043 	ldbu	r3,1(r3)
  8408b4:	1940010c 	andi	r5,r3,4
  8408b8:	283ff11e 	bne	r5,zero,840880 <__alt_mem_epcs_flash_controller_0+0xff837880>
  8408bc:	18c000cc 	andi	r3,r3,3
  8408c0:	18000426 	beq	r3,zero,8408d4 <_strtol_r+0x130>
  8408c4:	1c801d26 	beq	r3,r18,84093c <_strtol_r+0x198>
  8408c8:	00c015c4 	movi	r3,87
  8408cc:	80e1c83a 	sub	r16,r16,r3
  8408d0:	873fed16 	blt	r16,fp,840888 <__alt_mem_epcs_flash_controller_0+0xff837888>
  8408d4:	00ffffc4 	movi	r3,-1
  8408d8:	10c02826 	beq	r2,r3,84097c <_strtol_r+0x1d8>
  8408dc:	a0001e1e 	bne	r20,zero,840958 <_strtol_r+0x1b4>
  8408e0:	d8c00017 	ldw	r3,0(sp)
  8408e4:	18004326 	beq	r3,zero,8409f4 <_strtol_r+0x250>
  8408e8:	10001d1e 	bne	r2,zero,840960 <_strtol_r+0x1bc>
  8408ec:	dd800217 	ldw	r22,8(sp)
  8408f0:	2005883a 	mov	r2,r4
  8408f4:	d8c00017 	ldw	r3,0(sp)
  8408f8:	1d800015 	stw	r22,0(r3)
  8408fc:	dfc00d17 	ldw	ra,52(sp)
  840900:	df000c17 	ldw	fp,48(sp)
  840904:	ddc00b17 	ldw	r23,44(sp)
  840908:	dd800a17 	ldw	r22,40(sp)
  84090c:	dd400917 	ldw	r21,36(sp)
  840910:	dd000817 	ldw	r20,32(sp)
  840914:	dcc00717 	ldw	r19,28(sp)
  840918:	dc800617 	ldw	r18,24(sp)
  84091c:	dc400517 	ldw	r17,20(sp)
  840920:	dc000417 	ldw	r16,16(sp)
  840924:	dec00e04 	addi	sp,sp,56
  840928:	f800283a 	ret
  84092c:	d8c00117 	ldw	r3,4(sp)
  840930:	1c3fd80e 	bge	r3,r16,840894 <__alt_mem_epcs_flash_controller_0+0xff837894>
  840934:	00bfffc4 	movi	r2,-1
  840938:	003fda06 	br	8408a4 <__alt_mem_epcs_flash_controller_0+0xff8378a4>
  84093c:	00c00dc4 	movi	r3,55
  840940:	003fe206 	br	8408cc <__alt_mem_epcs_flash_controller_0+0xff8378cc>
  840944:	00800c04 	movi	r2,48
  840948:	80801926 	beq	r16,r2,8409b0 <_strtol_r+0x20c>
  84094c:	07000284 	movi	fp,10
  840950:	e027883a 	mov	r19,fp
  840954:	003fb706 	br	840834 <__alt_mem_epcs_flash_controller_0+0xff837834>
  840958:	0109c83a 	sub	r4,zero,r4
  84095c:	003fe006 	br	8408e0 <__alt_mem_epcs_flash_controller_0+0xff8378e0>
  840960:	2005883a 	mov	r2,r4
  840964:	8dbfffc4 	addi	r22,r17,-1
  840968:	003fe206 	br	8408f4 <__alt_mem_epcs_flash_controller_0+0xff8378f4>
  84096c:	1c400084 	addi	r17,r3,2
  840970:	1c000043 	ldbu	r16,1(r3)
  840974:	05000044 	movi	r20,1
  840978:	003faa06 	br	840824 <__alt_mem_epcs_flash_controller_0+0xff837824>
  84097c:	d9000317 	ldw	r4,12(sp)
  840980:	00c00884 	movi	r3,34
  840984:	a005003a 	cmpeq	r2,r20,zero
  840988:	20c00015 	stw	r3,0(r4)
  84098c:	00e00034 	movhi	r3,32768
  840990:	1885c83a 	sub	r2,r3,r2
  840994:	d8c00017 	ldw	r3,0(sp)
  840998:	183ff21e 	bne	r3,zero,840964 <__alt_mem_epcs_flash_controller_0+0xff837964>
  84099c:	003fd706 	br	8408fc <__alt_mem_epcs_flash_controller_0+0xff8378fc>
  8409a0:	1c400084 	addi	r17,r3,2
  8409a4:	1c000043 	ldbu	r16,1(r3)
  8409a8:	0029883a 	mov	r20,zero
  8409ac:	003f9d06 	br	840824 <__alt_mem_epcs_flash_controller_0+0xff837824>
  8409b0:	88800003 	ldbu	r2,0(r17)
  8409b4:	00c01604 	movi	r3,88
  8409b8:	108037cc 	andi	r2,r2,223
  8409bc:	10c00826 	beq	r2,r3,8409e0 <_strtol_r+0x23c>
  8409c0:	07000204 	movi	fp,8
  8409c4:	003f9a06 	br	840830 <__alt_mem_epcs_flash_controller_0+0xff837830>
  8409c8:	00800c04 	movi	r2,48
  8409cc:	80bf981e 	bne	r16,r2,840830 <__alt_mem_epcs_flash_controller_0+0xff837830>
  8409d0:	88800003 	ldbu	r2,0(r17)
  8409d4:	00c01604 	movi	r3,88
  8409d8:	108037cc 	andi	r2,r2,223
  8409dc:	10ff941e 	bne	r2,r3,840830 <__alt_mem_epcs_flash_controller_0+0xff837830>
  8409e0:	04c00404 	movi	r19,16
  8409e4:	8c000043 	ldbu	r16,1(r17)
  8409e8:	9839883a 	mov	fp,r19
  8409ec:	8c400084 	addi	r17,r17,2
  8409f0:	003f9006 	br	840834 <__alt_mem_epcs_flash_controller_0+0xff837834>
  8409f4:	2005883a 	mov	r2,r4
  8409f8:	003fc006 	br	8408fc <__alt_mem_epcs_flash_controller_0+0xff8378fc>

008409fc <strtol>:
  8409fc:	008021b4 	movhi	r2,134
  840a00:	10adb604 	addi	r2,r2,-18728
  840a04:	300f883a 	mov	r7,r6
  840a08:	280d883a 	mov	r6,r5
  840a0c:	200b883a 	mov	r5,r4
  840a10:	11000017 	ldw	r4,0(r2)
  840a14:	08407a41 	jmpi	8407a4 <_strtol_r>

00840a18 <_strtoll_r>:
  840a18:	008021b4 	movhi	r2,134
  840a1c:	deffef04 	addi	sp,sp,-68
  840a20:	10adb904 	addi	r2,r2,-18716
  840a24:	dd800d15 	stw	r22,52(sp)
  840a28:	15800017 	ldw	r22,0(r2)
  840a2c:	df000f15 	stw	fp,60(sp)
  840a30:	d9000515 	stw	r4,20(sp)
  840a34:	dfc01015 	stw	ra,64(sp)
  840a38:	ddc00e15 	stw	r23,56(sp)
  840a3c:	dd400c15 	stw	r21,48(sp)
  840a40:	dd000b15 	stw	r20,44(sp)
  840a44:	dcc00a15 	stw	r19,40(sp)
  840a48:	dc800915 	stw	r18,36(sp)
  840a4c:	dc400815 	stw	r17,32(sp)
  840a50:	dc000715 	stw	r16,28(sp)
  840a54:	d9400415 	stw	r5,16(sp)
  840a58:	d9800215 	stw	r6,8(sp)
  840a5c:	3839883a 	mov	fp,r7
  840a60:	2809883a 	mov	r4,r5
  840a64:	22000003 	ldbu	r8,0(r4)
  840a68:	24400044 	addi	r17,r4,1
  840a6c:	2007883a 	mov	r3,r4
  840a70:	b205883a 	add	r2,r22,r8
  840a74:	10800043 	ldbu	r2,1(r2)
  840a78:	8809883a 	mov	r4,r17
  840a7c:	1080020c 	andi	r2,r2,8
  840a80:	103ff81e 	bne	r2,zero,840a64 <__alt_mem_epcs_flash_controller_0+0xff837a64>
  840a84:	00800b44 	movi	r2,45
  840a88:	40807e26 	beq	r8,r2,840c84 <_strtoll_r+0x26c>
  840a8c:	00800ac4 	movi	r2,43
  840a90:	40808126 	beq	r8,r2,840c98 <_strtoll_r+0x280>
  840a94:	d8000115 	stw	zero,4(sp)
  840a98:	e0000b26 	beq	fp,zero,840ac8 <_strtoll_r+0xb0>
  840a9c:	00800404 	movi	r2,16
  840aa0:	e0808926 	beq	fp,r2,840cc8 <_strtoll_r+0x2b0>
  840aa4:	e00bd7fa 	srai	r5,fp,31
  840aa8:	d9000117 	ldw	r4,4(sp)
  840aac:	e025883a 	mov	r18,fp
  840ab0:	d9400015 	stw	r5,0(sp)
  840ab4:	20000b1e 	bne	r4,zero,840ae4 <_strtoll_r+0xcc>
  840ab8:	04200034 	movhi	r16,32768
  840abc:	843fffc4 	addi	r16,r16,-1
  840ac0:	053fffc4 	movi	r20,-1
  840ac4:	00000906 	br	840aec <_strtoll_r+0xd4>
  840ac8:	00800c04 	movi	r2,48
  840acc:	40807626 	beq	r8,r2,840ca8 <_strtoll_r+0x290>
  840ad0:	04800284 	movi	r18,10
  840ad4:	d8000015 	stw	zero,0(sp)
  840ad8:	9039883a 	mov	fp,r18
  840adc:	d9000117 	ldw	r4,4(sp)
  840ae0:	203ff526 	beq	r4,zero,840ab8 <__alt_mem_epcs_flash_controller_0+0xff837ab8>
  840ae4:	0029883a 	mov	r20,zero
  840ae8:	04200034 	movhi	r16,32768
  840aec:	d9c00017 	ldw	r7,0(sp)
  840af0:	a009883a 	mov	r4,r20
  840af4:	800b883a 	mov	r5,r16
  840af8:	900d883a 	mov	r6,r18
  840afc:	da000615 	stw	r8,24(sp)
  840b00:	0846d700 	call	846d70 <__umoddi3>
  840b04:	d9c00017 	ldw	r7,0(sp)
  840b08:	a009883a 	mov	r4,r20
  840b0c:	800b883a 	mov	r5,r16
  840b10:	900d883a 	mov	r6,r18
  840b14:	d8800315 	stw	r2,12(sp)
  840b18:	08467740 	call	846774 <__udivdi3>
  840b1c:	da000617 	ldw	r8,24(sp)
  840b20:	1829883a 	mov	r20,r3
  840b24:	882f883a 	mov	r23,r17
  840b28:	b207883a 	add	r3,r22,r8
  840b2c:	19800043 	ldbu	r6,1(r3)
  840b30:	1021883a 	mov	r16,r2
  840b34:	000f883a 	mov	r7,zero
  840b38:	30c0010c 	andi	r3,r6,4
  840b3c:	0009883a 	mov	r4,zero
  840b40:	000b883a 	mov	r5,zero
  840b44:	04400044 	movi	r17,1
  840b48:	057fffc4 	movi	r21,-1
  840b4c:	18000d26 	beq	r3,zero,840b84 <_strtoll_r+0x16c>
  840b50:	44fff404 	addi	r19,r8,-48
  840b54:	9f00110e 	bge	r19,fp,840b9c <_strtoll_r+0x184>
  840b58:	3d400426 	beq	r7,r21,840b6c <_strtoll_r+0x154>
  840b5c:	a1400236 	bltu	r20,r5,840b68 <_strtoll_r+0x150>
  840b60:	2d002a1e 	bne	r5,r20,840c0c <_strtoll_r+0x1f4>
  840b64:	8100292e 	bgeu	r16,r4,840c0c <_strtoll_r+0x1f4>
  840b68:	01ffffc4 	movi	r7,-1
  840b6c:	ba000003 	ldbu	r8,0(r23)
  840b70:	bdc00044 	addi	r23,r23,1
  840b74:	b207883a 	add	r3,r22,r8
  840b78:	19800043 	ldbu	r6,1(r3)
  840b7c:	30c0010c 	andi	r3,r6,4
  840b80:	183ff31e 	bne	r3,zero,840b50 <__alt_mem_epcs_flash_controller_0+0xff837b50>
  840b84:	318000cc 	andi	r6,r6,3
  840b88:	30000426 	beq	r6,zero,840b9c <_strtoll_r+0x184>
  840b8c:	34402b26 	beq	r6,r17,840c3c <_strtoll_r+0x224>
  840b90:	00c015c4 	movi	r3,87
  840b94:	40e7c83a 	sub	r19,r8,r3
  840b98:	9f3fef16 	blt	r19,fp,840b58 <__alt_mem_epcs_flash_controller_0+0xff837b58>
  840b9c:	00bfffc4 	movi	r2,-1
  840ba0:	38802c26 	beq	r7,r2,840c54 <_strtoll_r+0x23c>
  840ba4:	d8800117 	ldw	r2,4(sp)
  840ba8:	10000426 	beq	r2,zero,840bbc <_strtoll_r+0x1a4>
  840bac:	0109c83a 	sub	r4,zero,r4
  840bb0:	2004c03a 	cmpne	r2,r4,zero
  840bb4:	0151c83a 	sub	r8,zero,r5
  840bb8:	408bc83a 	sub	r5,r8,r2
  840bbc:	d8800217 	ldw	r2,8(sp)
  840bc0:	10005026 	beq	r2,zero,840d04 <_strtoll_r+0x2ec>
  840bc4:	2005883a 	mov	r2,r4
  840bc8:	2807883a 	mov	r3,r5
  840bcc:	38002b1e 	bne	r7,zero,840c7c <_strtoll_r+0x264>
  840bd0:	dd800417 	ldw	r22,16(sp)
  840bd4:	d9000217 	ldw	r4,8(sp)
  840bd8:	25800015 	stw	r22,0(r4)
  840bdc:	dfc01017 	ldw	ra,64(sp)
  840be0:	df000f17 	ldw	fp,60(sp)
  840be4:	ddc00e17 	ldw	r23,56(sp)
  840be8:	dd800d17 	ldw	r22,52(sp)
  840bec:	dd400c17 	ldw	r21,48(sp)
  840bf0:	dd000b17 	ldw	r20,44(sp)
  840bf4:	dcc00a17 	ldw	r19,40(sp)
  840bf8:	dc800917 	ldw	r18,36(sp)
  840bfc:	dc400817 	ldw	r17,32(sp)
  840c00:	dc000717 	ldw	r16,28(sp)
  840c04:	dec01104 	addi	sp,sp,68
  840c08:	f800283a 	ret
  840c0c:	24000d26 	beq	r4,r16,840c44 <_strtoll_r+0x22c>
  840c10:	d9c00017 	ldw	r7,0(sp)
  840c14:	900d883a 	mov	r6,r18
  840c18:	08465f40 	call	8465f4 <__muldi3>
  840c1c:	980bd7fa 	srai	r5,r19,31
  840c20:	9885883a 	add	r2,r19,r2
  840c24:	14d1803a 	cmpltu	r8,r2,r19
  840c28:	28c7883a 	add	r3,r5,r3
  840c2c:	1009883a 	mov	r4,r2
  840c30:	40cb883a 	add	r5,r8,r3
  840c34:	01c00044 	movi	r7,1
  840c38:	003fcc06 	br	840b6c <__alt_mem_epcs_flash_controller_0+0xff837b6c>
  840c3c:	00c00dc4 	movi	r3,55
  840c40:	003fd406 	br	840b94 <__alt_mem_epcs_flash_controller_0+0xff837b94>
  840c44:	2d3ff21e 	bne	r5,r20,840c10 <__alt_mem_epcs_flash_controller_0+0xff837c10>
  840c48:	d8800317 	ldw	r2,12(sp)
  840c4c:	14ffc616 	blt	r2,r19,840b68 <__alt_mem_epcs_flash_controller_0+0xff837b68>
  840c50:	003fef06 	br	840c10 <__alt_mem_epcs_flash_controller_0+0xff837c10>
  840c54:	d9000117 	ldw	r4,4(sp)
  840c58:	2000271e 	bne	r4,zero,840cf8 <_strtoll_r+0x2e0>
  840c5c:	00e00034 	movhi	r3,32768
  840c60:	18ffffc4 	addi	r3,r3,-1
  840c64:	3805883a 	mov	r2,r7
  840c68:	d9400517 	ldw	r5,20(sp)
  840c6c:	01000884 	movi	r4,34
  840c70:	29000015 	stw	r4,0(r5)
  840c74:	d9000217 	ldw	r4,8(sp)
  840c78:	203fd826 	beq	r4,zero,840bdc <__alt_mem_epcs_flash_controller_0+0xff837bdc>
  840c7c:	bdbfffc4 	addi	r22,r23,-1
  840c80:	003fd406 	br	840bd4 <__alt_mem_epcs_flash_controller_0+0xff837bd4>
  840c84:	00800044 	movi	r2,1
  840c88:	1c400084 	addi	r17,r3,2
  840c8c:	1a000043 	ldbu	r8,1(r3)
  840c90:	d8800115 	stw	r2,4(sp)
  840c94:	003f8006 	br	840a98 <__alt_mem_epcs_flash_controller_0+0xff837a98>
  840c98:	1c400084 	addi	r17,r3,2
  840c9c:	1a000043 	ldbu	r8,1(r3)
  840ca0:	d8000115 	stw	zero,4(sp)
  840ca4:	003f7c06 	br	840a98 <__alt_mem_epcs_flash_controller_0+0xff837a98>
  840ca8:	88800003 	ldbu	r2,0(r17)
  840cac:	00c01604 	movi	r3,88
  840cb0:	108037cc 	andi	r2,r2,223
  840cb4:	10c00a26 	beq	r2,r3,840ce0 <_strtoll_r+0x2c8>
  840cb8:	04800204 	movi	r18,8
  840cbc:	d8000015 	stw	zero,0(sp)
  840cc0:	9039883a 	mov	fp,r18
  840cc4:	003f8506 	br	840adc <__alt_mem_epcs_flash_controller_0+0xff837adc>
  840cc8:	00800c04 	movi	r2,48
  840ccc:	4080101e 	bne	r8,r2,840d10 <_strtoll_r+0x2f8>
  840cd0:	88800003 	ldbu	r2,0(r17)
  840cd4:	00c01604 	movi	r3,88
  840cd8:	108037cc 	andi	r2,r2,223
  840cdc:	10c00c1e 	bne	r2,r3,840d10 <_strtoll_r+0x2f8>
  840ce0:	04800404 	movi	r18,16
  840ce4:	8a000043 	ldbu	r8,1(r17)
  840ce8:	d8000015 	stw	zero,0(sp)
  840cec:	8c400084 	addi	r17,r17,2
  840cf0:	9039883a 	mov	fp,r18
  840cf4:	003f7906 	br	840adc <__alt_mem_epcs_flash_controller_0+0xff837adc>
  840cf8:	0005883a 	mov	r2,zero
  840cfc:	00e00034 	movhi	r3,32768
  840d00:	003fd906 	br	840c68 <__alt_mem_epcs_flash_controller_0+0xff837c68>
  840d04:	2005883a 	mov	r2,r4
  840d08:	2807883a 	mov	r3,r5
  840d0c:	003fb306 	br	840bdc <__alt_mem_epcs_flash_controller_0+0xff837bdc>
  840d10:	e025883a 	mov	r18,fp
  840d14:	d8000015 	stw	zero,0(sp)
  840d18:	003f7006 	br	840adc <__alt_mem_epcs_flash_controller_0+0xff837adc>

00840d1c <_strtoul_r>:
  840d1c:	008021b4 	movhi	r2,134
  840d20:	defff204 	addi	sp,sp,-56
  840d24:	10adb904 	addi	r2,r2,-18716
  840d28:	dd800a15 	stw	r22,40(sp)
  840d2c:	15800017 	ldw	r22,0(r2)
  840d30:	df000c15 	stw	fp,48(sp)
  840d34:	dd400915 	stw	r21,36(sp)
  840d38:	d9000315 	stw	r4,12(sp)
  840d3c:	dfc00d15 	stw	ra,52(sp)
  840d40:	ddc00b15 	stw	r23,44(sp)
  840d44:	dd000815 	stw	r20,32(sp)
  840d48:	dcc00715 	stw	r19,28(sp)
  840d4c:	dc800615 	stw	r18,24(sp)
  840d50:	dc400515 	stw	r17,20(sp)
  840d54:	dc000415 	stw	r16,16(sp)
  840d58:	d9400015 	stw	r5,0(sp)
  840d5c:	302b883a 	mov	r21,r6
  840d60:	3839883a 	mov	fp,r7
  840d64:	2809883a 	mov	r4,r5
  840d68:	24000003 	ldbu	r16,0(r4)
  840d6c:	24400044 	addi	r17,r4,1
  840d70:	2007883a 	mov	r3,r4
  840d74:	b405883a 	add	r2,r22,r16
  840d78:	10800043 	ldbu	r2,1(r2)
  840d7c:	8809883a 	mov	r4,r17
  840d80:	1080020c 	andi	r2,r2,8
  840d84:	103ff81e 	bne	r2,zero,840d68 <__alt_mem_epcs_flash_controller_0+0xff837d68>
  840d88:	00800b44 	movi	r2,45
  840d8c:	80805826 	beq	r16,r2,840ef0 <_strtoul_r+0x1d4>
  840d90:	00800ac4 	movi	r2,43
  840d94:	80805b26 	beq	r16,r2,840f04 <_strtoul_r+0x1e8>
  840d98:	d8000215 	stw	zero,8(sp)
  840d9c:	e0000d26 	beq	fp,zero,840dd4 <_strtoul_r+0xb8>
  840da0:	00800404 	movi	r2,16
  840da4:	e0806626 	beq	fp,r2,840f40 <_strtoul_r+0x224>
  840da8:	013fffc4 	movi	r4,-1
  840dac:	e00b883a 	mov	r5,fp
  840db0:	08304480 	call	830448 <__udivsi3>
  840db4:	e00b883a 	mov	r5,fp
  840db8:	013fffc4 	movi	r4,-1
  840dbc:	1025883a 	mov	r18,r2
  840dc0:	08304ac0 	call	8304ac <__umodsi3>
  840dc4:	d8800115 	stw	r2,4(sp)
  840dc8:	e027883a 	mov	r19,fp
  840dcc:	902f883a 	mov	r23,r18
  840dd0:	00000806 	br	840df4 <_strtoul_r+0xd8>
  840dd4:	00800c04 	movi	r2,48
  840dd8:	80804e26 	beq	r16,r2,840f14 <_strtoul_r+0x1f8>
  840ddc:	07000284 	movi	fp,10
  840de0:	00c00144 	movi	r3,5
  840de4:	05c666b4 	movhi	r23,6554
  840de8:	d8c00115 	stw	r3,4(sp)
  840dec:	bde66644 	addi	r23,r23,-26215
  840df0:	e027883a 	mov	r19,fp
  840df4:	b407883a 	add	r3,r22,r16
  840df8:	18c00043 	ldbu	r3,1(r3)
  840dfc:	0005883a 	mov	r2,zero
  840e00:	0009883a 	mov	r4,zero
  840e04:	1940010c 	andi	r5,r3,4
  840e08:	04800044 	movi	r18,1
  840e0c:	053fffc4 	movi	r20,-1
  840e10:	28000f26 	beq	r5,zero,840e50 <_strtoul_r+0x134>
  840e14:	843ff404 	addi	r16,r16,-48
  840e18:	8700130e 	bge	r16,fp,840e68 <_strtoul_r+0x14c>
  840e1c:	15000626 	beq	r2,r20,840e38 <_strtoul_r+0x11c>
  840e20:	b9002836 	bltu	r23,r4,840ec4 <_strtoul_r+0x1a8>
  840e24:	25c02526 	beq	r4,r23,840ebc <_strtoul_r+0x1a0>
  840e28:	980b883a 	mov	r5,r19
  840e2c:	08305040 	call	830504 <__mulsi3>
  840e30:	8089883a 	add	r4,r16,r2
  840e34:	00800044 	movi	r2,1
  840e38:	8c000003 	ldbu	r16,0(r17)
  840e3c:	8c400044 	addi	r17,r17,1
  840e40:	b407883a 	add	r3,r22,r16
  840e44:	18c00043 	ldbu	r3,1(r3)
  840e48:	1940010c 	andi	r5,r3,4
  840e4c:	283ff11e 	bne	r5,zero,840e14 <__alt_mem_epcs_flash_controller_0+0xff837e14>
  840e50:	18c000cc 	andi	r3,r3,3
  840e54:	18000426 	beq	r3,zero,840e68 <_strtoul_r+0x14c>
  840e58:	1c801c26 	beq	r3,r18,840ecc <_strtoul_r+0x1b0>
  840e5c:	00c015c4 	movi	r3,87
  840e60:	80e1c83a 	sub	r16,r16,r3
  840e64:	873fed16 	blt	r16,fp,840e1c <__alt_mem_epcs_flash_controller_0+0xff837e1c>
  840e68:	10001a16 	blt	r2,zero,840ed4 <_strtoul_r+0x1b8>
  840e6c:	d8c00217 	ldw	r3,8(sp)
  840e70:	18000126 	beq	r3,zero,840e78 <_strtoul_r+0x15c>
  840e74:	0109c83a 	sub	r4,zero,r4
  840e78:	a8000326 	beq	r21,zero,840e88 <_strtoul_r+0x16c>
  840e7c:	dd000017 	ldw	r20,0(sp)
  840e80:	1000191e 	bne	r2,zero,840ee8 <_strtoul_r+0x1cc>
  840e84:	ad000015 	stw	r20,0(r21)
  840e88:	2005883a 	mov	r2,r4
  840e8c:	dfc00d17 	ldw	ra,52(sp)
  840e90:	df000c17 	ldw	fp,48(sp)
  840e94:	ddc00b17 	ldw	r23,44(sp)
  840e98:	dd800a17 	ldw	r22,40(sp)
  840e9c:	dd400917 	ldw	r21,36(sp)
  840ea0:	dd000817 	ldw	r20,32(sp)
  840ea4:	dcc00717 	ldw	r19,28(sp)
  840ea8:	dc800617 	ldw	r18,24(sp)
  840eac:	dc400517 	ldw	r17,20(sp)
  840eb0:	dc000417 	ldw	r16,16(sp)
  840eb4:	dec00e04 	addi	sp,sp,56
  840eb8:	f800283a 	ret
  840ebc:	d8c00117 	ldw	r3,4(sp)
  840ec0:	1c3fd90e 	bge	r3,r16,840e28 <__alt_mem_epcs_flash_controller_0+0xff837e28>
  840ec4:	00bfffc4 	movi	r2,-1
  840ec8:	003fdb06 	br	840e38 <__alt_mem_epcs_flash_controller_0+0xff837e38>
  840ecc:	00c00dc4 	movi	r3,55
  840ed0:	003fe306 	br	840e60 <__alt_mem_epcs_flash_controller_0+0xff837e60>
  840ed4:	d8c00317 	ldw	r3,12(sp)
  840ed8:	00800884 	movi	r2,34
  840edc:	013fffc4 	movi	r4,-1
  840ee0:	18800015 	stw	r2,0(r3)
  840ee4:	a83fe826 	beq	r21,zero,840e88 <__alt_mem_epcs_flash_controller_0+0xff837e88>
  840ee8:	8d3fffc4 	addi	r20,r17,-1
  840eec:	003fe506 	br	840e84 <__alt_mem_epcs_flash_controller_0+0xff837e84>
  840ef0:	1c400084 	addi	r17,r3,2
  840ef4:	1c000043 	ldbu	r16,1(r3)
  840ef8:	00c00044 	movi	r3,1
  840efc:	d8c00215 	stw	r3,8(sp)
  840f00:	003fa606 	br	840d9c <__alt_mem_epcs_flash_controller_0+0xff837d9c>
  840f04:	1c400084 	addi	r17,r3,2
  840f08:	1c000043 	ldbu	r16,1(r3)
  840f0c:	d8000215 	stw	zero,8(sp)
  840f10:	003fa206 	br	840d9c <__alt_mem_epcs_flash_controller_0+0xff837d9c>
  840f14:	88800003 	ldbu	r2,0(r17)
  840f18:	00c01604 	movi	r3,88
  840f1c:	108037cc 	andi	r2,r2,223
  840f20:	10c00d26 	beq	r2,r3,840f58 <_strtoul_r+0x23c>
  840f24:	07000204 	movi	fp,8
  840f28:	00c001c4 	movi	r3,7
  840f2c:	05c80034 	movhi	r23,8192
  840f30:	d8c00115 	stw	r3,4(sp)
  840f34:	bdffffc4 	addi	r23,r23,-1
  840f38:	e027883a 	mov	r19,fp
  840f3c:	003fad06 	br	840df4 <__alt_mem_epcs_flash_controller_0+0xff837df4>
  840f40:	00800c04 	movi	r2,48
  840f44:	80800d1e 	bne	r16,r2,840f7c <_strtoul_r+0x260>
  840f48:	88800003 	ldbu	r2,0(r17)
  840f4c:	00c01604 	movi	r3,88
  840f50:	108037cc 	andi	r2,r2,223
  840f54:	10c0091e 	bne	r2,r3,840f7c <_strtoul_r+0x260>
  840f58:	04c00404 	movi	r19,16
  840f5c:	00c003c4 	movi	r3,15
  840f60:	04840034 	movhi	r18,4096
  840f64:	8c000043 	ldbu	r16,1(r17)
  840f68:	d8c00115 	stw	r3,4(sp)
  840f6c:	8c400084 	addi	r17,r17,2
  840f70:	94bfffc4 	addi	r18,r18,-1
  840f74:	9839883a 	mov	fp,r19
  840f78:	003f9406 	br	840dcc <__alt_mem_epcs_flash_controller_0+0xff837dcc>
  840f7c:	00c003c4 	movi	r3,15
  840f80:	05c40034 	movhi	r23,4096
  840f84:	d8c00115 	stw	r3,4(sp)
  840f88:	bdffffc4 	addi	r23,r23,-1
  840f8c:	e027883a 	mov	r19,fp
  840f90:	003f9806 	br	840df4 <__alt_mem_epcs_flash_controller_0+0xff837df4>

00840f94 <strtoul>:
  840f94:	008021b4 	movhi	r2,134
  840f98:	10adb604 	addi	r2,r2,-18728
  840f9c:	300f883a 	mov	r7,r6
  840fa0:	280d883a 	mov	r6,r5
  840fa4:	200b883a 	mov	r5,r4
  840fa8:	11000017 	ldw	r4,0(r2)
  840fac:	0840d1c1 	jmpi	840d1c <_strtoul_r>

00840fb0 <_strtoull_r>:
  840fb0:	008021b4 	movhi	r2,134
  840fb4:	deffef04 	addi	sp,sp,-68
  840fb8:	10adb904 	addi	r2,r2,-18716
  840fbc:	dd800d15 	stw	r22,52(sp)
  840fc0:	15800017 	ldw	r22,0(r2)
  840fc4:	df000f15 	stw	fp,60(sp)
  840fc8:	d9000515 	stw	r4,20(sp)
  840fcc:	dfc01015 	stw	ra,64(sp)
  840fd0:	ddc00e15 	stw	r23,56(sp)
  840fd4:	dd400c15 	stw	r21,48(sp)
  840fd8:	dd000b15 	stw	r20,44(sp)
  840fdc:	dcc00a15 	stw	r19,40(sp)
  840fe0:	dc800915 	stw	r18,36(sp)
  840fe4:	dc400815 	stw	r17,32(sp)
  840fe8:	dc000715 	stw	r16,28(sp)
  840fec:	d9400215 	stw	r5,8(sp)
  840ff0:	d9800115 	stw	r6,4(sp)
  840ff4:	3839883a 	mov	fp,r7
  840ff8:	2809883a 	mov	r4,r5
  840ffc:	22000003 	ldbu	r8,0(r4)
  841000:	24400044 	addi	r17,r4,1
  841004:	2007883a 	mov	r3,r4
  841008:	b205883a 	add	r2,r22,r8
  84100c:	10800043 	ldbu	r2,1(r2)
  841010:	8809883a 	mov	r4,r17
  841014:	1080020c 	andi	r2,r2,8
  841018:	103ff81e 	bne	r2,zero,840ffc <__alt_mem_epcs_flash_controller_0+0xff837ffc>
  84101c:	00800b44 	movi	r2,45
  841020:	40807726 	beq	r8,r2,841200 <_strtoull_r+0x250>
  841024:	00800ac4 	movi	r2,43
  841028:	40807a26 	beq	r8,r2,841214 <_strtoull_r+0x264>
  84102c:	d8000415 	stw	zero,16(sp)
  841030:	e0001426 	beq	fp,zero,841084 <_strtoull_r+0xd4>
  841034:	00800404 	movi	r2,16
  841038:	e0808826 	beq	fp,r2,84125c <_strtoull_r+0x2ac>
  84103c:	e025d7fa 	srai	r18,fp,31
  841040:	013fffc4 	movi	r4,-1
  841044:	200b883a 	mov	r5,r4
  841048:	e00d883a 	mov	r6,fp
  84104c:	900f883a 	mov	r7,r18
  841050:	da000615 	stw	r8,24(sp)
  841054:	08467740 	call	846774 <__udivdi3>
  841058:	013fffc4 	movi	r4,-1
  84105c:	e00d883a 	mov	r6,fp
  841060:	900f883a 	mov	r7,r18
  841064:	200b883a 	mov	r5,r4
  841068:	1021883a 	mov	r16,r2
  84106c:	182f883a 	mov	r23,r3
  841070:	0846d700 	call	846d70 <__umoddi3>
  841074:	d8800315 	stw	r2,12(sp)
  841078:	df000015 	stw	fp,0(sp)
  84107c:	da000617 	ldw	r8,24(sp)
  841080:	00000c06 	br	8410b4 <_strtoull_r+0x104>
  841084:	00800c04 	movi	r2,48
  841088:	40806626 	beq	r8,r2,841224 <_strtoull_r+0x274>
  84108c:	00800284 	movi	r2,10
  841090:	00c00144 	movi	r3,5
  841094:	042666b4 	movhi	r16,39322
  841098:	05c666b4 	movhi	r23,6554
  84109c:	d8800015 	stw	r2,0(sp)
  8410a0:	d8c00315 	stw	r3,12(sp)
  8410a4:	84266644 	addi	r16,r16,-26215
  8410a8:	bde66644 	addi	r23,r23,-26215
  8410ac:	0025883a 	mov	r18,zero
  8410b0:	1039883a 	mov	fp,r2
  8410b4:	b205883a 	add	r2,r22,r8
  8410b8:	11800043 	ldbu	r6,1(r2)
  8410bc:	882b883a 	mov	r21,r17
  8410c0:	000f883a 	mov	r7,zero
  8410c4:	3080010c 	andi	r2,r6,4
  8410c8:	0009883a 	mov	r4,zero
  8410cc:	000b883a 	mov	r5,zero
  8410d0:	04400044 	movi	r17,1
  8410d4:	053fffc4 	movi	r20,-1
  8410d8:	10000d26 	beq	r2,zero,841110 <_strtoull_r+0x160>
  8410dc:	44fff404 	addi	r19,r8,-48
  8410e0:	9f00110e 	bge	r19,fp,841128 <_strtoull_r+0x178>
  8410e4:	3d000426 	beq	r7,r20,8410f8 <_strtoull_r+0x148>
  8410e8:	b9400236 	bltu	r23,r5,8410f4 <_strtoull_r+0x144>
  8410ec:	2dc0291e 	bne	r5,r23,841194 <_strtoull_r+0x1e4>
  8410f0:	8100282e 	bgeu	r16,r4,841194 <_strtoull_r+0x1e4>
  8410f4:	01ffffc4 	movi	r7,-1
  8410f8:	aa000003 	ldbu	r8,0(r21)
  8410fc:	ad400044 	addi	r21,r21,1
  841100:	b205883a 	add	r2,r22,r8
  841104:	11800043 	ldbu	r6,1(r2)
  841108:	3080010c 	andi	r2,r6,4
  84110c:	103ff31e 	bne	r2,zero,8410dc <__alt_mem_epcs_flash_controller_0+0xff8380dc>
  841110:	318000cc 	andi	r6,r6,3
  841114:	30000426 	beq	r6,zero,841128 <_strtoull_r+0x178>
  841118:	34402a26 	beq	r6,r17,8411c4 <_strtoull_r+0x214>
  84111c:	00c015c4 	movi	r3,87
  841120:	40e7c83a 	sub	r19,r8,r3
  841124:	9f3fef16 	blt	r19,fp,8410e4 <__alt_mem_epcs_flash_controller_0+0xff8380e4>
  841128:	38002c16 	blt	r7,zero,8411dc <_strtoull_r+0x22c>
  84112c:	d8c00417 	ldw	r3,16(sp)
  841130:	18000426 	beq	r3,zero,841144 <_strtoull_r+0x194>
  841134:	0109c83a 	sub	r4,zero,r4
  841138:	2004c03a 	cmpne	r2,r4,zero
  84113c:	0151c83a 	sub	r8,zero,r5
  841140:	408bc83a 	sub	r5,r8,r2
  841144:	d8800117 	ldw	r2,4(sp)
  841148:	10000426 	beq	r2,zero,84115c <_strtoull_r+0x1ac>
  84114c:	dd000217 	ldw	r20,8(sp)
  841150:	3800291e 	bne	r7,zero,8411f8 <_strtoull_r+0x248>
  841154:	d8c00117 	ldw	r3,4(sp)
  841158:	1d000015 	stw	r20,0(r3)
  84115c:	2005883a 	mov	r2,r4
  841160:	2807883a 	mov	r3,r5
  841164:	dfc01017 	ldw	ra,64(sp)
  841168:	df000f17 	ldw	fp,60(sp)
  84116c:	ddc00e17 	ldw	r23,56(sp)
  841170:	dd800d17 	ldw	r22,52(sp)
  841174:	dd400c17 	ldw	r21,48(sp)
  841178:	dd000b17 	ldw	r20,44(sp)
  84117c:	dcc00a17 	ldw	r19,40(sp)
  841180:	dc800917 	ldw	r18,36(sp)
  841184:	dc400817 	ldw	r17,32(sp)
  841188:	dc000717 	ldw	r16,28(sp)
  84118c:	dec01104 	addi	sp,sp,68
  841190:	f800283a 	ret
  841194:	24000d26 	beq	r4,r16,8411cc <_strtoull_r+0x21c>
  841198:	d9800017 	ldw	r6,0(sp)
  84119c:	900f883a 	mov	r7,r18
  8411a0:	08465f40 	call	8465f4 <__muldi3>
  8411a4:	980bd7fa 	srai	r5,r19,31
  8411a8:	9885883a 	add	r2,r19,r2
  8411ac:	14d1803a 	cmpltu	r8,r2,r19
  8411b0:	28c7883a 	add	r3,r5,r3
  8411b4:	1009883a 	mov	r4,r2
  8411b8:	40cb883a 	add	r5,r8,r3
  8411bc:	01c00044 	movi	r7,1
  8411c0:	003fcd06 	br	8410f8 <__alt_mem_epcs_flash_controller_0+0xff8380f8>
  8411c4:	00c00dc4 	movi	r3,55
  8411c8:	003fd506 	br	841120 <__alt_mem_epcs_flash_controller_0+0xff838120>
  8411cc:	2dfff21e 	bne	r5,r23,841198 <__alt_mem_epcs_flash_controller_0+0xff838198>
  8411d0:	d8c00317 	ldw	r3,12(sp)
  8411d4:	1cffc716 	blt	r3,r19,8410f4 <__alt_mem_epcs_flash_controller_0+0xff8380f4>
  8411d8:	003fef06 	br	841198 <__alt_mem_epcs_flash_controller_0+0xff838198>
  8411dc:	d8c00517 	ldw	r3,20(sp)
  8411e0:	00800884 	movi	r2,34
  8411e4:	013fffc4 	movi	r4,-1
  8411e8:	18800015 	stw	r2,0(r3)
  8411ec:	d8800117 	ldw	r2,4(sp)
  8411f0:	200b883a 	mov	r5,r4
  8411f4:	103fd926 	beq	r2,zero,84115c <__alt_mem_epcs_flash_controller_0+0xff83815c>
  8411f8:	ad3fffc4 	addi	r20,r21,-1
  8411fc:	003fd506 	br	841154 <__alt_mem_epcs_flash_controller_0+0xff838154>
  841200:	00800044 	movi	r2,1
  841204:	1c400084 	addi	r17,r3,2
  841208:	1a000043 	ldbu	r8,1(r3)
  84120c:	d8800415 	stw	r2,16(sp)
  841210:	003f8706 	br	841030 <__alt_mem_epcs_flash_controller_0+0xff838030>
  841214:	1c400084 	addi	r17,r3,2
  841218:	1a000043 	ldbu	r8,1(r3)
  84121c:	d8000415 	stw	zero,16(sp)
  841220:	003f8306 	br	841030 <__alt_mem_epcs_flash_controller_0+0xff838030>
  841224:	88800003 	ldbu	r2,0(r17)
  841228:	00c01604 	movi	r3,88
  84122c:	108037cc 	andi	r2,r2,223
  841230:	10c01026 	beq	r2,r3,841274 <_strtoull_r+0x2c4>
  841234:	00c00204 	movi	r3,8
  841238:	008001c4 	movi	r2,7
  84123c:	043fffc4 	movi	r16,-1
  841240:	05c80034 	movhi	r23,8192
  841244:	d8c00015 	stw	r3,0(sp)
  841248:	d8800315 	stw	r2,12(sp)
  84124c:	bc2f883a 	add	r23,r23,r16
  841250:	0025883a 	mov	r18,zero
  841254:	1839883a 	mov	fp,r3
  841258:	003f9606 	br	8410b4 <__alt_mem_epcs_flash_controller_0+0xff8380b4>
  84125c:	00800c04 	movi	r2,48
  841260:	4080101e 	bne	r8,r2,8412a4 <_strtoull_r+0x2f4>
  841264:	88800003 	ldbu	r2,0(r17)
  841268:	00c01604 	movi	r3,88
  84126c:	108037cc 	andi	r2,r2,223
  841270:	10c0141e 	bne	r2,r3,8412c4 <_strtoull_r+0x314>
  841274:	00c00404 	movi	r3,16
  841278:	008003c4 	movi	r2,15
  84127c:	043fffc4 	movi	r16,-1
  841280:	05c40034 	movhi	r23,4096
  841284:	8a000043 	ldbu	r8,1(r17)
  841288:	d8c00015 	stw	r3,0(sp)
  84128c:	d8800315 	stw	r2,12(sp)
  841290:	8c400084 	addi	r17,r17,2
  841294:	bc2f883a 	add	r23,r23,r16
  841298:	0025883a 	mov	r18,zero
  84129c:	1839883a 	mov	fp,r3
  8412a0:	003f8406 	br	8410b4 <__alt_mem_epcs_flash_controller_0+0xff8380b4>
  8412a4:	008003c4 	movi	r2,15
  8412a8:	d8800315 	stw	r2,12(sp)
  8412ac:	043fffc4 	movi	r16,-1
  8412b0:	05c40034 	movhi	r23,4096
  8412b4:	bc2f883a 	add	r23,r23,r16
  8412b8:	df000015 	stw	fp,0(sp)
  8412bc:	0025883a 	mov	r18,zero
  8412c0:	003f7c06 	br	8410b4 <__alt_mem_epcs_flash_controller_0+0xff8380b4>
  8412c4:	00c003c4 	movi	r3,15
  8412c8:	d8c00315 	stw	r3,12(sp)
  8412cc:	003ff706 	br	8412ac <__alt_mem_epcs_flash_controller_0+0xff8382ac>

008412d0 <__ssprint_r>:
  8412d0:	30800217 	ldw	r2,8(r6)
  8412d4:	defff604 	addi	sp,sp,-40
  8412d8:	dc800215 	stw	r18,8(sp)
  8412dc:	dfc00915 	stw	ra,36(sp)
  8412e0:	df000815 	stw	fp,32(sp)
  8412e4:	ddc00715 	stw	r23,28(sp)
  8412e8:	dd800615 	stw	r22,24(sp)
  8412ec:	dd400515 	stw	r21,20(sp)
  8412f0:	dd000415 	stw	r20,16(sp)
  8412f4:	dcc00315 	stw	r19,12(sp)
  8412f8:	dc400115 	stw	r17,4(sp)
  8412fc:	dc000015 	stw	r16,0(sp)
  841300:	3025883a 	mov	r18,r6
  841304:	10005826 	beq	r2,zero,841468 <__ssprint_r+0x198>
  841308:	2027883a 	mov	r19,r4
  84130c:	35c00017 	ldw	r23,0(r6)
  841310:	29000017 	ldw	r4,0(r5)
  841314:	28800217 	ldw	r2,8(r5)
  841318:	2823883a 	mov	r17,r5
  84131c:	0039883a 	mov	fp,zero
  841320:	0021883a 	mov	r16,zero
  841324:	80003926 	beq	r16,zero,84140c <__ssprint_r+0x13c>
  841328:	102b883a 	mov	r21,r2
  84132c:	102d883a 	mov	r22,r2
  841330:	80803a36 	bltu	r16,r2,84141c <__ssprint_r+0x14c>
  841334:	88c0030b 	ldhu	r3,12(r17)
  841338:	1881200c 	andi	r2,r3,1152
  84133c:	10002626 	beq	r2,zero,8413d8 <__ssprint_r+0x108>
  841340:	88800517 	ldw	r2,20(r17)
  841344:	89400417 	ldw	r5,16(r17)
  841348:	81800044 	addi	r6,r16,1
  84134c:	108f883a 	add	r7,r2,r2
  841350:	3885883a 	add	r2,r7,r2
  841354:	100ed7fa 	srli	r7,r2,31
  841358:	216dc83a 	sub	r22,r4,r5
  84135c:	3589883a 	add	r4,r6,r22
  841360:	3885883a 	add	r2,r7,r2
  841364:	102bd07a 	srai	r21,r2,1
  841368:	a80d883a 	mov	r6,r21
  84136c:	a900022e 	bgeu	r21,r4,841378 <__ssprint_r+0xa8>
  841370:	202b883a 	mov	r21,r4
  841374:	200d883a 	mov	r6,r4
  841378:	18c1000c 	andi	r3,r3,1024
  84137c:	18002a26 	beq	r3,zero,841428 <__ssprint_r+0x158>
  841380:	300b883a 	mov	r5,r6
  841384:	9809883a 	mov	r4,r19
  841388:	08339440 	call	833944 <_malloc_r>
  84138c:	1029883a 	mov	r20,r2
  841390:	10002c26 	beq	r2,zero,841444 <__ssprint_r+0x174>
  841394:	89400417 	ldw	r5,16(r17)
  841398:	b00d883a 	mov	r6,r22
  84139c:	1009883a 	mov	r4,r2
  8413a0:	08341500 	call	834150 <memcpy>
  8413a4:	8880030b 	ldhu	r2,12(r17)
  8413a8:	00fedfc4 	movi	r3,-1153
  8413ac:	10c4703a 	and	r2,r2,r3
  8413b0:	10802014 	ori	r2,r2,128
  8413b4:	8880030d 	sth	r2,12(r17)
  8413b8:	a589883a 	add	r4,r20,r22
  8413bc:	adadc83a 	sub	r22,r21,r22
  8413c0:	8d400515 	stw	r21,20(r17)
  8413c4:	8d800215 	stw	r22,8(r17)
  8413c8:	8d000415 	stw	r20,16(r17)
  8413cc:	89000015 	stw	r4,0(r17)
  8413d0:	802b883a 	mov	r21,r16
  8413d4:	802d883a 	mov	r22,r16
  8413d8:	b00d883a 	mov	r6,r22
  8413dc:	e00b883a 	mov	r5,fp
  8413e0:	083d6440 	call	83d644 <memmove>
  8413e4:	88800217 	ldw	r2,8(r17)
  8413e8:	89000017 	ldw	r4,0(r17)
  8413ec:	90c00217 	ldw	r3,8(r18)
  8413f0:	1545c83a 	sub	r2,r2,r21
  8413f4:	2589883a 	add	r4,r4,r22
  8413f8:	88800215 	stw	r2,8(r17)
  8413fc:	89000015 	stw	r4,0(r17)
  841400:	1c21c83a 	sub	r16,r3,r16
  841404:	94000215 	stw	r16,8(r18)
  841408:	80001726 	beq	r16,zero,841468 <__ssprint_r+0x198>
  84140c:	bf000017 	ldw	fp,0(r23)
  841410:	bc000117 	ldw	r16,4(r23)
  841414:	bdc00204 	addi	r23,r23,8
  841418:	003fc206 	br	841324 <__alt_mem_epcs_flash_controller_0+0xff838324>
  84141c:	802b883a 	mov	r21,r16
  841420:	802d883a 	mov	r22,r16
  841424:	003fec06 	br	8413d8 <__alt_mem_epcs_flash_controller_0+0xff8383d8>
  841428:	9809883a 	mov	r4,r19
  84142c:	083e8b80 	call	83e8b8 <_realloc_r>
  841430:	1029883a 	mov	r20,r2
  841434:	103fe01e 	bne	r2,zero,8413b8 <__alt_mem_epcs_flash_controller_0+0xff8383b8>
  841438:	89400417 	ldw	r5,16(r17)
  84143c:	9809883a 	mov	r4,r19
  841440:	0832c880 	call	832c88 <_free_r>
  841444:	88c0030b 	ldhu	r3,12(r17)
  841448:	00800304 	movi	r2,12
  84144c:	98800015 	stw	r2,0(r19)
  841450:	18c01014 	ori	r3,r3,64
  841454:	88c0030d 	sth	r3,12(r17)
  841458:	00bfffc4 	movi	r2,-1
  84145c:	90000215 	stw	zero,8(r18)
  841460:	90000115 	stw	zero,4(r18)
  841464:	00000206 	br	841470 <__ssprint_r+0x1a0>
  841468:	90000115 	stw	zero,4(r18)
  84146c:	0005883a 	mov	r2,zero
  841470:	dfc00917 	ldw	ra,36(sp)
  841474:	df000817 	ldw	fp,32(sp)
  841478:	ddc00717 	ldw	r23,28(sp)
  84147c:	dd800617 	ldw	r22,24(sp)
  841480:	dd400517 	ldw	r21,20(sp)
  841484:	dd000417 	ldw	r20,16(sp)
  841488:	dcc00317 	ldw	r19,12(sp)
  84148c:	dc800217 	ldw	r18,8(sp)
  841490:	dc400117 	ldw	r17,4(sp)
  841494:	dc000017 	ldw	r16,0(sp)
  841498:	dec00a04 	addi	sp,sp,40
  84149c:	f800283a 	ret

008414a0 <___svfiprintf_internal_r>:
  8414a0:	2880030b 	ldhu	r2,12(r5)
  8414a4:	deffc804 	addi	sp,sp,-224
  8414a8:	dcc03115 	stw	r19,196(sp)
  8414ac:	dfc03715 	stw	ra,220(sp)
  8414b0:	df003615 	stw	fp,216(sp)
  8414b4:	ddc03515 	stw	r23,212(sp)
  8414b8:	dd803415 	stw	r22,208(sp)
  8414bc:	dd403315 	stw	r21,204(sp)
  8414c0:	dd003215 	stw	r20,200(sp)
  8414c4:	dc803015 	stw	r18,192(sp)
  8414c8:	dc402f15 	stw	r17,188(sp)
  8414cc:	dc002e15 	stw	r16,184(sp)
  8414d0:	d9402315 	stw	r5,140(sp)
  8414d4:	d9002715 	stw	r4,156(sp)
  8414d8:	1080200c 	andi	r2,r2,128
  8414dc:	d9c02415 	stw	r7,144(sp)
  8414e0:	3027883a 	mov	r19,r6
  8414e4:	10000226 	beq	r2,zero,8414f0 <___svfiprintf_internal_r+0x50>
  8414e8:	28800417 	ldw	r2,16(r5)
  8414ec:	10046d26 	beq	r2,zero,8426a4 <___svfiprintf_internal_r+0x1204>
  8414f0:	d8801a04 	addi	r2,sp,104
  8414f4:	d8c019c4 	addi	r3,sp,103
  8414f8:	058021b4 	movhi	r22,134
  8414fc:	10c9c83a 	sub	r4,r2,r3
  841500:	b5a56504 	addi	r22,r22,-27244
  841504:	d8801e15 	stw	r2,120(sp)
  841508:	d8c01f15 	stw	r3,124(sp)
  84150c:	dec01a15 	stw	sp,104(sp)
  841510:	d8001c15 	stw	zero,112(sp)
  841514:	d8001b15 	stw	zero,108(sp)
  841518:	d811883a 	mov	r8,sp
  84151c:	d8002915 	stw	zero,164(sp)
  841520:	d8002615 	stw	zero,152(sp)
  841524:	d9002c15 	stw	r4,176(sp)
  841528:	98800007 	ldb	r2,0(r19)
  84152c:	10031426 	beq	r2,zero,842180 <___svfiprintf_internal_r+0xce0>
  841530:	00c00944 	movi	r3,37
  841534:	9825883a 	mov	r18,r19
  841538:	10c0021e 	bne	r2,r3,841544 <___svfiprintf_internal_r+0xa4>
  84153c:	00001406 	br	841590 <___svfiprintf_internal_r+0xf0>
  841540:	10c00326 	beq	r2,r3,841550 <___svfiprintf_internal_r+0xb0>
  841544:	94800044 	addi	r18,r18,1
  841548:	90800007 	ldb	r2,0(r18)
  84154c:	103ffc1e 	bne	r2,zero,841540 <__alt_mem_epcs_flash_controller_0+0xff838540>
  841550:	94e1c83a 	sub	r16,r18,r19
  841554:	80000e26 	beq	r16,zero,841590 <___svfiprintf_internal_r+0xf0>
  841558:	d8c01c17 	ldw	r3,112(sp)
  84155c:	d8801b17 	ldw	r2,108(sp)
  841560:	44c00015 	stw	r19,0(r8)
  841564:	1c07883a 	add	r3,r3,r16
  841568:	10800044 	addi	r2,r2,1
  84156c:	d8c01c15 	stw	r3,112(sp)
  841570:	44000115 	stw	r16,4(r8)
  841574:	d8801b15 	stw	r2,108(sp)
  841578:	00c001c4 	movi	r3,7
  84157c:	18835c16 	blt	r3,r2,8422f0 <___svfiprintf_internal_r+0xe50>
  841580:	42000204 	addi	r8,r8,8
  841584:	d9402617 	ldw	r5,152(sp)
  841588:	2c0b883a 	add	r5,r5,r16
  84158c:	d9402615 	stw	r5,152(sp)
  841590:	90800007 	ldb	r2,0(r18)
  841594:	1002fc26 	beq	r2,zero,842188 <___svfiprintf_internal_r+0xce8>
  841598:	0023883a 	mov	r17,zero
  84159c:	00bfffc4 	movi	r2,-1
  8415a0:	0021883a 	mov	r16,zero
  8415a4:	94c00044 	addi	r19,r18,1
  8415a8:	90c00047 	ldb	r3,1(r18)
  8415ac:	dc402105 	stb	r17,132(sp)
  8415b0:	d8001d85 	stb	zero,118(sp)
  8415b4:	002b883a 	mov	r21,zero
  8415b8:	d8802015 	stw	r2,128(sp)
  8415bc:	d8002515 	stw	zero,148(sp)
  8415c0:	04801604 	movi	r18,88
  8415c4:	05000244 	movi	r20,9
  8415c8:	402f883a 	mov	r23,r8
  8415cc:	8023883a 	mov	r17,r16
  8415d0:	9cc00044 	addi	r19,r19,1
  8415d4:	18bff804 	addi	r2,r3,-32
  8415d8:	9081fb36 	bltu	r18,r2,841dc8 <___svfiprintf_internal_r+0x928>
  8415dc:	100490ba 	slli	r2,r2,2
  8415e0:	01002134 	movhi	r4,132
  8415e4:	21057d04 	addi	r4,r4,5620
  8415e8:	1105883a 	add	r2,r2,r4
  8415ec:	10800017 	ldw	r2,0(r2)
  8415f0:	1000683a 	jmp	r2
  8415f4:	008417f4 	movhi	r2,4191
  8415f8:	00841dc8 	cmpgei	r2,zero,4215
  8415fc:	00841dc8 	cmpgei	r2,zero,4215
  841600:	008417e8 	cmpgeui	r2,zero,4191
  841604:	00841dc8 	cmpgei	r2,zero,4215
  841608:	00841dc8 	cmpgei	r2,zero,4215
  84160c:	00841dc8 	cmpgei	r2,zero,4215
  841610:	00841dc8 	cmpgei	r2,zero,4215
  841614:	00841dc8 	cmpgei	r2,zero,4215
  841618:	00841dc8 	cmpgei	r2,zero,4215
  84161c:	00841758 	cmpnei	r2,zero,4189
  841620:	00841954 	movui	r2,4197
  841624:	00841dc8 	cmpgei	r2,zero,4215
  841628:	00841780 	call	84178 <OSCtxSw_SWITCH_PC+0x84138>
  84162c:	00841e04 	movi	r2,4216
  841630:	00841dc8 	cmpgei	r2,zero,4215
  841634:	00841df8 	rdprs	r2,zero,4215
  841638:	00841d8c 	andi	r2,zero,4214
  84163c:	00841d8c 	andi	r2,zero,4214
  841640:	00841d8c 	andi	r2,zero,4214
  841644:	00841d8c 	andi	r2,zero,4214
  841648:	00841d8c 	andi	r2,zero,4214
  84164c:	00841d8c 	andi	r2,zero,4214
  841650:	00841d8c 	andi	r2,zero,4214
  841654:	00841d8c 	andi	r2,zero,4214
  841658:	00841d8c 	andi	r2,zero,4214
  84165c:	00841dc8 	cmpgei	r2,zero,4215
  841660:	00841dc8 	cmpgei	r2,zero,4215
  841664:	00841dc8 	cmpgei	r2,zero,4215
  841668:	00841dc8 	cmpgei	r2,zero,4215
  84166c:	00841dc8 	cmpgei	r2,zero,4215
  841670:	00841dc8 	cmpgei	r2,zero,4215
  841674:	00841dc8 	cmpgei	r2,zero,4215
  841678:	00841dc8 	cmpgei	r2,zero,4215
  84167c:	00841dc8 	cmpgei	r2,zero,4215
  841680:	00841dc8 	cmpgei	r2,zero,4215
  841684:	00841d10 	cmplti	r2,zero,4212
  841688:	00841dc8 	cmpgei	r2,zero,4215
  84168c:	00841dc8 	cmpgei	r2,zero,4215
  841690:	00841dc8 	cmpgei	r2,zero,4215
  841694:	00841dc8 	cmpgei	r2,zero,4215
  841698:	00841dc8 	cmpgei	r2,zero,4215
  84169c:	00841dc8 	cmpgei	r2,zero,4215
  8416a0:	00841dc8 	cmpgei	r2,zero,4215
  8416a4:	00841dc8 	cmpgei	r2,zero,4215
  8416a8:	00841dc8 	cmpgei	r2,zero,4215
  8416ac:	00841dc8 	cmpgei	r2,zero,4215
  8416b0:	00841ec0 	call	841ec <OSCtxSw_SWITCH_PC+0x841ac>
  8416b4:	00841dc8 	cmpgei	r2,zero,4215
  8416b8:	00841dc8 	cmpgei	r2,zero,4215
  8416bc:	00841dc8 	cmpgei	r2,zero,4215
  8416c0:	00841dc8 	cmpgei	r2,zero,4215
  8416c4:	00841dc8 	cmpgei	r2,zero,4215
  8416c8:	00841e4c 	andi	r2,zero,4217
  8416cc:	00841dc8 	cmpgei	r2,zero,4215
  8416d0:	00841dc8 	cmpgei	r2,zero,4215
  8416d4:	00841b4c 	andi	r2,zero,4205
  8416d8:	00841dc8 	cmpgei	r2,zero,4215
  8416dc:	00841dc8 	cmpgei	r2,zero,4215
  8416e0:	00841dc8 	cmpgei	r2,zero,4215
  8416e4:	00841dc8 	cmpgei	r2,zero,4215
  8416e8:	00841dc8 	cmpgei	r2,zero,4215
  8416ec:	00841dc8 	cmpgei	r2,zero,4215
  8416f0:	00841dc8 	cmpgei	r2,zero,4215
  8416f4:	00841dc8 	cmpgei	r2,zero,4215
  8416f8:	00841dc8 	cmpgei	r2,zero,4215
  8416fc:	00841dc8 	cmpgei	r2,zero,4215
  841700:	00841a18 	cmpnei	r2,zero,4200
  841704:	00841bfc 	xorhi	r2,zero,4207
  841708:	00841dc8 	cmpgei	r2,zero,4215
  84170c:	00841dc8 	cmpgei	r2,zero,4215
  841710:	00841dc8 	cmpgei	r2,zero,4215
  841714:	00841bf0 	cmpltui	r2,zero,4207
  841718:	00841bfc 	xorhi	r2,zero,4207
  84171c:	00841dc8 	cmpgei	r2,zero,4215
  841720:	00841dc8 	cmpgei	r2,zero,4215
  841724:	00841bdc 	xori	r2,zero,4207
  841728:	00841dc8 	cmpgei	r2,zero,4215
  84172c:	00841b9c 	xori	r2,zero,4206
  841730:	00841968 	cmpgeui	r2,zero,4197
  841734:	0084178c 	andi	r2,zero,4190
  841738:	00841d04 	movi	r2,4212
  84173c:	00841dc8 	cmpgei	r2,zero,4215
  841740:	00841cb0 	cmpltui	r2,zero,4210
  841744:	00841dc8 	cmpgei	r2,zero,4215
  841748:	008418cc 	andi	r2,zero,4195
  84174c:	00841dc8 	cmpgei	r2,zero,4215
  841750:	00841dc8 	cmpgei	r2,zero,4215
  841754:	00841818 	cmpnei	r2,zero,4192
  841758:	d9002417 	ldw	r4,144(sp)
  84175c:	d9402417 	ldw	r5,144(sp)
  841760:	21000017 	ldw	r4,0(r4)
  841764:	28800104 	addi	r2,r5,4
  841768:	d9002515 	stw	r4,148(sp)
  84176c:	20032b0e 	bge	r4,zero,84241c <___svfiprintf_internal_r+0xf7c>
  841770:	d8c02517 	ldw	r3,148(sp)
  841774:	d8802415 	stw	r2,144(sp)
  841778:	00c7c83a 	sub	r3,zero,r3
  84177c:	d8c02515 	stw	r3,148(sp)
  841780:	8c400114 	ori	r17,r17,4
  841784:	98c00007 	ldb	r3,0(r19)
  841788:	003f9106 	br	8415d0 <__alt_mem_epcs_flash_controller_0+0xff8385d0>
  84178c:	00800c04 	movi	r2,48
  841790:	d9402417 	ldw	r5,144(sp)
  841794:	d9002017 	ldw	r4,128(sp)
  841798:	d8801d05 	stb	r2,116(sp)
  84179c:	00801e04 	movi	r2,120
  8417a0:	d8801d45 	stb	r2,117(sp)
  8417a4:	d8001d85 	stb	zero,118(sp)
  8417a8:	b811883a 	mov	r8,r23
  8417ac:	28c00104 	addi	r3,r5,4
  8417b0:	2c800017 	ldw	r18,0(r5)
  8417b4:	0029883a 	mov	r20,zero
  8417b8:	88800094 	ori	r2,r17,2
  8417bc:	20036316 	blt	r4,zero,84254c <___svfiprintf_internal_r+0x10ac>
  8417c0:	00bfdfc4 	movi	r2,-129
  8417c4:	88a0703a 	and	r16,r17,r2
  8417c8:	d8c02415 	stw	r3,144(sp)
  8417cc:	84000094 	ori	r16,r16,2
  8417d0:	90031c26 	beq	r18,zero,842444 <___svfiprintf_internal_r+0xfa4>
  8417d4:	014021b4 	movhi	r5,134
  8417d8:	29643a04 	addi	r5,r5,-28440
  8417dc:	002b883a 	mov	r21,zero
  8417e0:	d9402915 	stw	r5,164(sp)
  8417e4:	00002906 	br	84188c <___svfiprintf_internal_r+0x3ec>
  8417e8:	8c400054 	ori	r17,r17,1
  8417ec:	98c00007 	ldb	r3,0(r19)
  8417f0:	003f7706 	br	8415d0 <__alt_mem_epcs_flash_controller_0+0xff8385d0>
  8417f4:	a8803fcc 	andi	r2,r21,255
  8417f8:	1080201c 	xori	r2,r2,128
  8417fc:	10bfe004 	addi	r2,r2,-128
  841800:	10032a1e 	bne	r2,zero,8424ac <___svfiprintf_internal_r+0x100c>
  841804:	00c00044 	movi	r3,1
  841808:	d8c02105 	stb	r3,132(sp)
  84180c:	05400804 	movi	r21,32
  841810:	98c00007 	ldb	r3,0(r19)
  841814:	003f6e06 	br	8415d0 <__alt_mem_epcs_flash_controller_0+0xff8385d0>
  841818:	8821883a 	mov	r16,r17
  84181c:	dc402103 	ldbu	r17,132(sp)
  841820:	b811883a 	mov	r8,r23
  841824:	8c403fcc 	andi	r17,r17,255
  841828:	8803f01e 	bne	r17,zero,8427ec <___svfiprintf_internal_r+0x134c>
  84182c:	008021b4 	movhi	r2,134
  841830:	10a43a04 	addi	r2,r2,-28440
  841834:	d8802915 	stw	r2,164(sp)
  841838:	8080080c 	andi	r2,r16,32
  84183c:	1000cd26 	beq	r2,zero,841b74 <___svfiprintf_internal_r+0x6d4>
  841840:	d9002417 	ldw	r4,144(sp)
  841844:	24800017 	ldw	r18,0(r4)
  841848:	25000117 	ldw	r20,4(r4)
  84184c:	21000204 	addi	r4,r4,8
  841850:	d9002415 	stw	r4,144(sp)
  841854:	8080004c 	andi	r2,r16,1
  841858:	1002c726 	beq	r2,zero,842378 <___svfiprintf_internal_r+0xed8>
  84185c:	9504b03a 	or	r2,r18,r20
  841860:	1003061e 	bne	r2,zero,84247c <___svfiprintf_internal_r+0xfdc>
  841864:	d9002017 	ldw	r4,128(sp)
  841868:	d8001d85 	stb	zero,118(sp)
  84186c:	20033e16 	blt	r4,zero,842568 <___svfiprintf_internal_r+0x10c8>
  841870:	00bfdfc4 	movi	r2,-129
  841874:	80a0703a 	and	r16,r16,r2
  841878:	d9402017 	ldw	r5,128(sp)
  84187c:	002b883a 	mov	r21,zero
  841880:	28002826 	beq	r5,zero,841924 <___svfiprintf_internal_r+0x484>
  841884:	0025883a 	mov	r18,zero
  841888:	0029883a 	mov	r20,zero
  84188c:	d9002917 	ldw	r4,164(sp)
  841890:	dc401a04 	addi	r17,sp,104
  841894:	908003cc 	andi	r2,r18,15
  841898:	a006973a 	slli	r3,r20,28
  84189c:	2085883a 	add	r2,r4,r2
  8418a0:	9024d13a 	srli	r18,r18,4
  8418a4:	10800003 	ldbu	r2,0(r2)
  8418a8:	a028d13a 	srli	r20,r20,4
  8418ac:	8c7fffc4 	addi	r17,r17,-1
  8418b0:	1ca4b03a 	or	r18,r3,r18
  8418b4:	88800005 	stb	r2,0(r17)
  8418b8:	9504b03a 	or	r2,r18,r20
  8418bc:	103ff51e 	bne	r2,zero,841894 <__alt_mem_epcs_flash_controller_0+0xff838894>
  8418c0:	d8801e17 	ldw	r2,120(sp)
  8418c4:	1469c83a 	sub	r20,r2,r17
  8418c8:	00001906 	br	841930 <___svfiprintf_internal_r+0x490>
  8418cc:	8821883a 	mov	r16,r17
  8418d0:	dc402103 	ldbu	r17,132(sp)
  8418d4:	b811883a 	mov	r8,r23
  8418d8:	8c403fcc 	andi	r17,r17,255
  8418dc:	8803d01e 	bne	r17,zero,842820 <___svfiprintf_internal_r+0x1380>
  8418e0:	8080080c 	andi	r2,r16,32
  8418e4:	10016126 	beq	r2,zero,841e6c <___svfiprintf_internal_r+0x9cc>
  8418e8:	d9002417 	ldw	r4,144(sp)
  8418ec:	d9402017 	ldw	r5,128(sp)
  8418f0:	d8001d85 	stb	zero,118(sp)
  8418f4:	20c00204 	addi	r3,r4,8
  8418f8:	24800017 	ldw	r18,0(r4)
  8418fc:	25000117 	ldw	r20,4(r4)
  841900:	28030f16 	blt	r5,zero,842540 <___svfiprintf_internal_r+0x10a0>
  841904:	013fdfc4 	movi	r4,-129
  841908:	9504b03a 	or	r2,r18,r20
  84190c:	d8c02415 	stw	r3,144(sp)
  841910:	8120703a 	and	r16,r16,r4
  841914:	002b883a 	mov	r21,zero
  841918:	1000cd1e 	bne	r2,zero,841c50 <___svfiprintf_internal_r+0x7b0>
  84191c:	d8c02017 	ldw	r3,128(sp)
  841920:	1803141e 	bne	r3,zero,842574 <___svfiprintf_internal_r+0x10d4>
  841924:	d8002015 	stw	zero,128(sp)
  841928:	0029883a 	mov	r20,zero
  84192c:	dc401a04 	addi	r17,sp,104
  841930:	dc802017 	ldw	r18,128(sp)
  841934:	9500010e 	bge	r18,r20,84193c <___svfiprintf_internal_r+0x49c>
  841938:	a025883a 	mov	r18,r20
  84193c:	ad403fcc 	andi	r21,r21,255
  841940:	ad40201c 	xori	r21,r21,128
  841944:	ad7fe004 	addi	r21,r21,-128
  841948:	a8003f26 	beq	r21,zero,841a48 <___svfiprintf_internal_r+0x5a8>
  84194c:	94800044 	addi	r18,r18,1
  841950:	00003d06 	br	841a48 <___svfiprintf_internal_r+0x5a8>
  841954:	00c00044 	movi	r3,1
  841958:	d8c02105 	stb	r3,132(sp)
  84195c:	05400ac4 	movi	r21,43
  841960:	98c00007 	ldb	r3,0(r19)
  841964:	003f1a06 	br	8415d0 <__alt_mem_epcs_flash_controller_0+0xff8385d0>
  841968:	8821883a 	mov	r16,r17
  84196c:	dc402103 	ldbu	r17,132(sp)
  841970:	b811883a 	mov	r8,r23
  841974:	8c403fcc 	andi	r17,r17,255
  841978:	8803a71e 	bne	r17,zero,842818 <___svfiprintf_internal_r+0x1378>
  84197c:	8080080c 	andi	r2,r16,32
  841980:	10015726 	beq	r2,zero,841ee0 <___svfiprintf_internal_r+0xa40>
  841984:	d8c02417 	ldw	r3,144(sp)
  841988:	d9002017 	ldw	r4,128(sp)
  84198c:	d8001d85 	stb	zero,118(sp)
  841990:	18800204 	addi	r2,r3,8
  841994:	1c800017 	ldw	r18,0(r3)
  841998:	1d000117 	ldw	r20,4(r3)
  84199c:	2002db16 	blt	r4,zero,84250c <___svfiprintf_internal_r+0x106c>
  8419a0:	013fdfc4 	movi	r4,-129
  8419a4:	9506b03a 	or	r3,r18,r20
  8419a8:	d8802415 	stw	r2,144(sp)
  8419ac:	8120703a 	and	r16,r16,r4
  8419b0:	18015826 	beq	r3,zero,841f14 <___svfiprintf_internal_r+0xa74>
  8419b4:	002b883a 	mov	r21,zero
  8419b8:	dc401a04 	addi	r17,sp,104
  8419bc:	9006d0fa 	srli	r3,r18,3
  8419c0:	a008977a 	slli	r4,r20,29
  8419c4:	a028d0fa 	srli	r20,r20,3
  8419c8:	948001cc 	andi	r18,r18,7
  8419cc:	90800c04 	addi	r2,r18,48
  8419d0:	8c7fffc4 	addi	r17,r17,-1
  8419d4:	20e4b03a 	or	r18,r4,r3
  8419d8:	88800005 	stb	r2,0(r17)
  8419dc:	9506b03a 	or	r3,r18,r20
  8419e0:	183ff61e 	bne	r3,zero,8419bc <__alt_mem_epcs_flash_controller_0+0xff8389bc>
  8419e4:	80c0004c 	andi	r3,r16,1
  8419e8:	18028926 	beq	r3,zero,842410 <___svfiprintf_internal_r+0xf70>
  8419ec:	10803fcc 	andi	r2,r2,255
  8419f0:	1080201c 	xori	r2,r2,128
  8419f4:	10bfe004 	addi	r2,r2,-128
  8419f8:	00c00c04 	movi	r3,48
  8419fc:	10ffb026 	beq	r2,r3,8418c0 <__alt_mem_epcs_flash_controller_0+0xff8388c0>
  841a00:	88ffffc5 	stb	r3,-1(r17)
  841a04:	d8c01e17 	ldw	r3,120(sp)
  841a08:	88bfffc4 	addi	r2,r17,-1
  841a0c:	1023883a 	mov	r17,r2
  841a10:	18a9c83a 	sub	r20,r3,r2
  841a14:	003fc606 	br	841930 <__alt_mem_epcs_flash_controller_0+0xff838930>
  841a18:	d8c02417 	ldw	r3,144(sp)
  841a1c:	04800044 	movi	r18,1
  841a20:	8821883a 	mov	r16,r17
  841a24:	18800017 	ldw	r2,0(r3)
  841a28:	18c00104 	addi	r3,r3,4
  841a2c:	b811883a 	mov	r8,r23
  841a30:	d8001d85 	stb	zero,118(sp)
  841a34:	d8801005 	stb	r2,64(sp)
  841a38:	d8c02415 	stw	r3,144(sp)
  841a3c:	9029883a 	mov	r20,r18
  841a40:	dc401004 	addi	r17,sp,64
  841a44:	d8002015 	stw	zero,128(sp)
  841a48:	80c0008c 	andi	r3,r16,2
  841a4c:	d8c02115 	stw	r3,132(sp)
  841a50:	18000126 	beq	r3,zero,841a58 <___svfiprintf_internal_r+0x5b8>
  841a54:	94800084 	addi	r18,r18,2
  841a58:	80c0210c 	andi	r3,r16,132
  841a5c:	d8c02215 	stw	r3,136(sp)
  841a60:	1801321e 	bne	r3,zero,841f2c <___svfiprintf_internal_r+0xa8c>
  841a64:	d9002517 	ldw	r4,148(sp)
  841a68:	24b9c83a 	sub	fp,r4,r18
  841a6c:	07012f0e 	bge	zero,fp,841f2c <___svfiprintf_internal_r+0xa8c>
  841a70:	02400404 	movi	r9,16
  841a74:	d8c01c17 	ldw	r3,112(sp)
  841a78:	d8801b17 	ldw	r2,108(sp)
  841a7c:	4f03250e 	bge	r9,fp,842714 <___svfiprintf_internal_r+0x1274>
  841a80:	010021b4 	movhi	r4,134
  841a84:	21256904 	addi	r4,r4,-27228
  841a88:	dc002a15 	stw	r16,168(sp)
  841a8c:	dc402b15 	stw	r17,172(sp)
  841a90:	d9002815 	stw	r4,160(sp)
  841a94:	e023883a 	mov	r17,fp
  841a98:	482f883a 	mov	r23,r9
  841a9c:	9839883a 	mov	fp,r19
  841aa0:	054001c4 	movi	r21,7
  841aa4:	9027883a 	mov	r19,r18
  841aa8:	dc002717 	ldw	r16,156(sp)
  841aac:	dc802317 	ldw	r18,140(sp)
  841ab0:	00000306 	br	841ac0 <___svfiprintf_internal_r+0x620>
  841ab4:	8c7ffc04 	addi	r17,r17,-16
  841ab8:	42000204 	addi	r8,r8,8
  841abc:	bc40130e 	bge	r23,r17,841b0c <___svfiprintf_internal_r+0x66c>
  841ac0:	014021b4 	movhi	r5,134
  841ac4:	18c00404 	addi	r3,r3,16
  841ac8:	10800044 	addi	r2,r2,1
  841acc:	29656904 	addi	r5,r5,-27228
  841ad0:	41400015 	stw	r5,0(r8)
  841ad4:	45c00115 	stw	r23,4(r8)
  841ad8:	d8c01c15 	stw	r3,112(sp)
  841adc:	d8801b15 	stw	r2,108(sp)
  841ae0:	a8bff40e 	bge	r21,r2,841ab4 <__alt_mem_epcs_flash_controller_0+0xff838ab4>
  841ae4:	d9801a04 	addi	r6,sp,104
  841ae8:	900b883a 	mov	r5,r18
  841aec:	8009883a 	mov	r4,r16
  841af0:	08412d00 	call	8412d0 <__ssprint_r>
  841af4:	1001aa1e 	bne	r2,zero,8421a0 <___svfiprintf_internal_r+0xd00>
  841af8:	8c7ffc04 	addi	r17,r17,-16
  841afc:	d8c01c17 	ldw	r3,112(sp)
  841b00:	d8801b17 	ldw	r2,108(sp)
  841b04:	d811883a 	mov	r8,sp
  841b08:	bc7fed16 	blt	r23,r17,841ac0 <__alt_mem_epcs_flash_controller_0+0xff838ac0>
  841b0c:	9825883a 	mov	r18,r19
  841b10:	dc002a17 	ldw	r16,168(sp)
  841b14:	e027883a 	mov	r19,fp
  841b18:	8839883a 	mov	fp,r17
  841b1c:	dc402b17 	ldw	r17,172(sp)
  841b20:	d9002817 	ldw	r4,160(sp)
  841b24:	e0c7883a 	add	r3,fp,r3
  841b28:	10800044 	addi	r2,r2,1
  841b2c:	41000015 	stw	r4,0(r8)
  841b30:	47000115 	stw	fp,4(r8)
  841b34:	d8c01c15 	stw	r3,112(sp)
  841b38:	d8801b15 	stw	r2,108(sp)
  841b3c:	010001c4 	movi	r4,7
  841b40:	20821616 	blt	r4,r2,84239c <___svfiprintf_internal_r+0xefc>
  841b44:	42000204 	addi	r8,r8,8
  841b48:	0000fa06 	br	841f34 <___svfiprintf_internal_r+0xa94>
  841b4c:	8821883a 	mov	r16,r17
  841b50:	dc402103 	ldbu	r17,132(sp)
  841b54:	b811883a 	mov	r8,r23
  841b58:	8c403fcc 	andi	r17,r17,255
  841b5c:	8803361e 	bne	r17,zero,842838 <___svfiprintf_internal_r+0x1398>
  841b60:	014021b4 	movhi	r5,134
  841b64:	29643504 	addi	r5,r5,-28460
  841b68:	d9402915 	stw	r5,164(sp)
  841b6c:	8080080c 	andi	r2,r16,32
  841b70:	103f331e 	bne	r2,zero,841840 <__alt_mem_epcs_flash_controller_0+0xff838840>
  841b74:	8080040c 	andi	r2,r16,16
  841b78:	1002551e 	bne	r2,zero,8424d0 <___svfiprintf_internal_r+0x1030>
  841b7c:	8080100c 	andi	r2,r16,64
  841b80:	1002a626 	beq	r2,zero,84261c <___svfiprintf_internal_r+0x117c>
  841b84:	d8802417 	ldw	r2,144(sp)
  841b88:	0029883a 	mov	r20,zero
  841b8c:	1480000b 	ldhu	r18,0(r2)
  841b90:	10800104 	addi	r2,r2,4
  841b94:	d8802415 	stw	r2,144(sp)
  841b98:	003f2e06 	br	841854 <__alt_mem_epcs_flash_controller_0+0xff838854>
  841b9c:	8821883a 	mov	r16,r17
  841ba0:	dc402103 	ldbu	r17,132(sp)
  841ba4:	b811883a 	mov	r8,r23
  841ba8:	8c403fcc 	andi	r17,r17,255
  841bac:	88030b1e 	bne	r17,zero,8427dc <___svfiprintf_internal_r+0x133c>
  841bb0:	8080080c 	andi	r2,r16,32
  841bb4:	1002271e 	bne	r2,zero,842454 <___svfiprintf_internal_r+0xfb4>
  841bb8:	8080040c 	andi	r2,r16,16
  841bbc:	10028e26 	beq	r2,zero,8425f8 <___svfiprintf_internal_r+0x1158>
  841bc0:	d8c02417 	ldw	r3,144(sp)
  841bc4:	d9002617 	ldw	r4,152(sp)
  841bc8:	18800017 	ldw	r2,0(r3)
  841bcc:	18c00104 	addi	r3,r3,4
  841bd0:	d8c02415 	stw	r3,144(sp)
  841bd4:	11000015 	stw	r4,0(r2)
  841bd8:	003e5306 	br	841528 <__alt_mem_epcs_flash_controller_0+0xff838528>
  841bdc:	98c00007 	ldb	r3,0(r19)
  841be0:	01401b04 	movi	r5,108
  841be4:	19424f26 	beq	r3,r5,842524 <___svfiprintf_internal_r+0x1084>
  841be8:	8c400414 	ori	r17,r17,16
  841bec:	003e7806 	br	8415d0 <__alt_mem_epcs_flash_controller_0+0xff8385d0>
  841bf0:	8c401014 	ori	r17,r17,64
  841bf4:	98c00007 	ldb	r3,0(r19)
  841bf8:	003e7506 	br	8415d0 <__alt_mem_epcs_flash_controller_0+0xff8385d0>
  841bfc:	8821883a 	mov	r16,r17
  841c00:	dc402103 	ldbu	r17,132(sp)
  841c04:	b811883a 	mov	r8,r23
  841c08:	8c403fcc 	andi	r17,r17,255
  841c0c:	8802fe1e 	bne	r17,zero,842808 <___svfiprintf_internal_r+0x1368>
  841c10:	8080080c 	andi	r2,r16,32
  841c14:	10004626 	beq	r2,zero,841d30 <___svfiprintf_internal_r+0x890>
  841c18:	d9002417 	ldw	r4,144(sp)
  841c1c:	20800117 	ldw	r2,4(r4)
  841c20:	24800017 	ldw	r18,0(r4)
  841c24:	21000204 	addi	r4,r4,8
  841c28:	d9002415 	stw	r4,144(sp)
  841c2c:	1029883a 	mov	r20,r2
  841c30:	10004a16 	blt	r2,zero,841d5c <___svfiprintf_internal_r+0x8bc>
  841c34:	d9002017 	ldw	r4,128(sp)
  841c38:	dd401d83 	ldbu	r21,118(sp)
  841c3c:	2001eb16 	blt	r4,zero,8423ec <___svfiprintf_internal_r+0xf4c>
  841c40:	00ffdfc4 	movi	r3,-129
  841c44:	9504b03a 	or	r2,r18,r20
  841c48:	80e0703a 	and	r16,r16,r3
  841c4c:	103f3326 	beq	r2,zero,84191c <__alt_mem_epcs_flash_controller_0+0xff83891c>
  841c50:	a0009426 	beq	r20,zero,841ea4 <___svfiprintf_internal_r+0xa04>
  841c54:	dc401a04 	addi	r17,sp,104
  841c58:	402f883a 	mov	r23,r8
  841c5c:	9009883a 	mov	r4,r18
  841c60:	a00b883a 	mov	r5,r20
  841c64:	01800284 	movi	r6,10
  841c68:	000f883a 	mov	r7,zero
  841c6c:	0846d700 	call	846d70 <__umoddi3>
  841c70:	10800c04 	addi	r2,r2,48
  841c74:	8c7fffc4 	addi	r17,r17,-1
  841c78:	9009883a 	mov	r4,r18
  841c7c:	a00b883a 	mov	r5,r20
  841c80:	88800005 	stb	r2,0(r17)
  841c84:	01800284 	movi	r6,10
  841c88:	000f883a 	mov	r7,zero
  841c8c:	08467740 	call	846774 <__udivdi3>
  841c90:	1025883a 	mov	r18,r2
  841c94:	10c4b03a 	or	r2,r2,r3
  841c98:	1829883a 	mov	r20,r3
  841c9c:	103fef1e 	bne	r2,zero,841c5c <__alt_mem_epcs_flash_controller_0+0xff838c5c>
  841ca0:	d9001e17 	ldw	r4,120(sp)
  841ca4:	b811883a 	mov	r8,r23
  841ca8:	2469c83a 	sub	r20,r4,r17
  841cac:	003f2006 	br	841930 <__alt_mem_epcs_flash_controller_0+0xff838930>
  841cb0:	d8802417 	ldw	r2,144(sp)
  841cb4:	8821883a 	mov	r16,r17
  841cb8:	d8001d85 	stb	zero,118(sp)
  841cbc:	14400017 	ldw	r17,0(r2)
  841cc0:	b811883a 	mov	r8,r23
  841cc4:	15c00104 	addi	r23,r2,4
  841cc8:	88026c26 	beq	r17,zero,84267c <___svfiprintf_internal_r+0x11dc>
  841ccc:	d8c02017 	ldw	r3,128(sp)
  841cd0:	18025f16 	blt	r3,zero,842650 <___svfiprintf_internal_r+0x11b0>
  841cd4:	180d883a 	mov	r6,r3
  841cd8:	000b883a 	mov	r5,zero
  841cdc:	8809883a 	mov	r4,r17
  841ce0:	da002d15 	stw	r8,180(sp)
  841ce4:	083d5600 	call	83d560 <memchr>
  841ce8:	da002d17 	ldw	r8,180(sp)
  841cec:	1002a526 	beq	r2,zero,842784 <___svfiprintf_internal_r+0x12e4>
  841cf0:	1469c83a 	sub	r20,r2,r17
  841cf4:	dd401d83 	ldbu	r21,118(sp)
  841cf8:	ddc02415 	stw	r23,144(sp)
  841cfc:	d8002015 	stw	zero,128(sp)
  841d00:	003f0b06 	br	841930 <__alt_mem_epcs_flash_controller_0+0xff838930>
  841d04:	8c400814 	ori	r17,r17,32
  841d08:	98c00007 	ldb	r3,0(r19)
  841d0c:	003e3006 	br	8415d0 <__alt_mem_epcs_flash_controller_0+0xff8385d0>
  841d10:	8821883a 	mov	r16,r17
  841d14:	dc402103 	ldbu	r17,132(sp)
  841d18:	b811883a 	mov	r8,r23
  841d1c:	8c403fcc 	andi	r17,r17,255
  841d20:	8802b01e 	bne	r17,zero,8427e4 <___svfiprintf_internal_r+0x1344>
  841d24:	84000414 	ori	r16,r16,16
  841d28:	8080080c 	andi	r2,r16,32
  841d2c:	103fba1e 	bne	r2,zero,841c18 <__alt_mem_epcs_flash_controller_0+0xff838c18>
  841d30:	8080040c 	andi	r2,r16,16
  841d34:	1001df1e 	bne	r2,zero,8424b4 <___svfiprintf_internal_r+0x1014>
  841d38:	8080100c 	andi	r2,r16,64
  841d3c:	10023d26 	beq	r2,zero,842634 <___svfiprintf_internal_r+0x1194>
  841d40:	d8802417 	ldw	r2,144(sp)
  841d44:	1480000f 	ldh	r18,0(r2)
  841d48:	10800104 	addi	r2,r2,4
  841d4c:	d8802415 	stw	r2,144(sp)
  841d50:	9029d7fa 	srai	r20,r18,31
  841d54:	a005883a 	mov	r2,r20
  841d58:	103fb60e 	bge	r2,zero,841c34 <__alt_mem_epcs_flash_controller_0+0xff838c34>
  841d5c:	d9402017 	ldw	r5,128(sp)
  841d60:	04a5c83a 	sub	r18,zero,r18
  841d64:	05400b44 	movi	r21,45
  841d68:	9004c03a 	cmpne	r2,r18,zero
  841d6c:	0529c83a 	sub	r20,zero,r20
  841d70:	dd401d85 	stb	r21,118(sp)
  841d74:	a0a9c83a 	sub	r20,r20,r2
  841d78:	28026c16 	blt	r5,zero,84272c <___svfiprintf_internal_r+0x128c>
  841d7c:	00bfdfc4 	movi	r2,-129
  841d80:	80a0703a 	and	r16,r16,r2
  841d84:	a03fb31e 	bne	r20,zero,841c54 <__alt_mem_epcs_flash_controller_0+0xff838c54>
  841d88:	00004606 	br	841ea4 <___svfiprintf_internal_r+0xa04>
  841d8c:	9839883a 	mov	fp,r19
  841d90:	d8002515 	stw	zero,148(sp)
  841d94:	1c3ff404 	addi	r16,r3,-48
  841d98:	0009883a 	mov	r4,zero
  841d9c:	01400284 	movi	r5,10
  841da0:	08305040 	call	830504 <__mulsi3>
  841da4:	e0c00007 	ldb	r3,0(fp)
  841da8:	8089883a 	add	r4,r16,r2
  841dac:	9cc00044 	addi	r19,r19,1
  841db0:	1c3ff404 	addi	r16,r3,-48
  841db4:	9839883a 	mov	fp,r19
  841db8:	a43ff82e 	bgeu	r20,r16,841d9c <__alt_mem_epcs_flash_controller_0+0xff838d9c>
  841dbc:	d9002515 	stw	r4,148(sp)
  841dc0:	18bff804 	addi	r2,r3,-32
  841dc4:	90be052e 	bgeu	r18,r2,8415dc <__alt_mem_epcs_flash_controller_0+0xff8385dc>
  841dc8:	8821883a 	mov	r16,r17
  841dcc:	dc402103 	ldbu	r17,132(sp)
  841dd0:	b811883a 	mov	r8,r23
  841dd4:	8c403fcc 	andi	r17,r17,255
  841dd8:	88028d1e 	bne	r17,zero,842810 <___svfiprintf_internal_r+0x1370>
  841ddc:	1800ea26 	beq	r3,zero,842188 <___svfiprintf_internal_r+0xce8>
  841de0:	04800044 	movi	r18,1
  841de4:	d8c01005 	stb	r3,64(sp)
  841de8:	d8001d85 	stb	zero,118(sp)
  841dec:	9029883a 	mov	r20,r18
  841df0:	dc401004 	addi	r17,sp,64
  841df4:	003f1306 	br	841a44 <__alt_mem_epcs_flash_controller_0+0xff838a44>
  841df8:	8c402014 	ori	r17,r17,128
  841dfc:	98c00007 	ldb	r3,0(r19)
  841e00:	003df306 	br	8415d0 <__alt_mem_epcs_flash_controller_0+0xff8385d0>
  841e04:	98c00007 	ldb	r3,0(r19)
  841e08:	01000a84 	movi	r4,42
  841e0c:	9f000044 	addi	fp,r19,1
  841e10:	19026326 	beq	r3,r4,8427a0 <___svfiprintf_internal_r+0x1300>
  841e14:	1c3ff404 	addi	r16,r3,-48
  841e18:	0009883a 	mov	r4,zero
  841e1c:	a4025636 	bltu	r20,r16,842778 <___svfiprintf_internal_r+0x12d8>
  841e20:	01400284 	movi	r5,10
  841e24:	08305040 	call	830504 <__mulsi3>
  841e28:	e0c00007 	ldb	r3,0(fp)
  841e2c:	1409883a 	add	r4,r2,r16
  841e30:	e4c00044 	addi	r19,fp,1
  841e34:	1c3ff404 	addi	r16,r3,-48
  841e38:	9839883a 	mov	fp,r19
  841e3c:	a43ff82e 	bgeu	r20,r16,841e20 <__alt_mem_epcs_flash_controller_0+0xff838e20>
  841e40:	20020c16 	blt	r4,zero,842674 <___svfiprintf_internal_r+0x11d4>
  841e44:	d9002015 	stw	r4,128(sp)
  841e48:	003de206 	br	8415d4 <__alt_mem_epcs_flash_controller_0+0xff8385d4>
  841e4c:	8821883a 	mov	r16,r17
  841e50:	dc402103 	ldbu	r17,132(sp)
  841e54:	b811883a 	mov	r8,r23
  841e58:	8c403fcc 	andi	r17,r17,255
  841e5c:	8802721e 	bne	r17,zero,842828 <___svfiprintf_internal_r+0x1388>
  841e60:	84000414 	ori	r16,r16,16
  841e64:	8080080c 	andi	r2,r16,32
  841e68:	103e9f1e 	bne	r2,zero,8418e8 <__alt_mem_epcs_flash_controller_0+0xff8388e8>
  841e6c:	8080040c 	andi	r2,r16,16
  841e70:	10015326 	beq	r2,zero,8423c0 <___svfiprintf_internal_r+0xf20>
  841e74:	d8c02417 	ldw	r3,144(sp)
  841e78:	d9002017 	ldw	r4,128(sp)
  841e7c:	d8001d85 	stb	zero,118(sp)
  841e80:	18800104 	addi	r2,r3,4
  841e84:	1c800017 	ldw	r18,0(r3)
  841e88:	0029883a 	mov	r20,zero
  841e8c:	20015516 	blt	r4,zero,8423e4 <___svfiprintf_internal_r+0xf44>
  841e90:	00ffdfc4 	movi	r3,-129
  841e94:	d8802415 	stw	r2,144(sp)
  841e98:	80e0703a 	and	r16,r16,r3
  841e9c:	002b883a 	mov	r21,zero
  841ea0:	903e9e26 	beq	r18,zero,84191c <__alt_mem_epcs_flash_controller_0+0xff83891c>
  841ea4:	00800244 	movi	r2,9
  841ea8:	14bf6a36 	bltu	r2,r18,841c54 <__alt_mem_epcs_flash_controller_0+0xff838c54>
  841eac:	94800c04 	addi	r18,r18,48
  841eb0:	dc8019c5 	stb	r18,103(sp)
  841eb4:	dd002c17 	ldw	r20,176(sp)
  841eb8:	dc4019c4 	addi	r17,sp,103
  841ebc:	003e9c06 	br	841930 <__alt_mem_epcs_flash_controller_0+0xff838930>
  841ec0:	8821883a 	mov	r16,r17
  841ec4:	dc402103 	ldbu	r17,132(sp)
  841ec8:	b811883a 	mov	r8,r23
  841ecc:	8c403fcc 	andi	r17,r17,255
  841ed0:	8802571e 	bne	r17,zero,842830 <___svfiprintf_internal_r+0x1390>
  841ed4:	84000414 	ori	r16,r16,16
  841ed8:	8080080c 	andi	r2,r16,32
  841edc:	103ea91e 	bne	r2,zero,841984 <__alt_mem_epcs_flash_controller_0+0xff838984>
  841ee0:	8080040c 	andi	r2,r16,16
  841ee4:	10018026 	beq	r2,zero,8424e8 <___svfiprintf_internal_r+0x1048>
  841ee8:	d9402417 	ldw	r5,144(sp)
  841eec:	d8c02017 	ldw	r3,128(sp)
  841ef0:	d8001d85 	stb	zero,118(sp)
  841ef4:	28800104 	addi	r2,r5,4
  841ef8:	2c800017 	ldw	r18,0(r5)
  841efc:	0029883a 	mov	r20,zero
  841f00:	18018216 	blt	r3,zero,84250c <___svfiprintf_internal_r+0x106c>
  841f04:	00ffdfc4 	movi	r3,-129
  841f08:	d8802415 	stw	r2,144(sp)
  841f0c:	80e0703a 	and	r16,r16,r3
  841f10:	903ea81e 	bne	r18,zero,8419b4 <__alt_mem_epcs_flash_controller_0+0xff8389b4>
  841f14:	d8802017 	ldw	r2,128(sp)
  841f18:	002b883a 	mov	r21,zero
  841f1c:	1001f226 	beq	r2,zero,8426e8 <___svfiprintf_internal_r+0x1248>
  841f20:	0025883a 	mov	r18,zero
  841f24:	0029883a 	mov	r20,zero
  841f28:	003ea306 	br	8419b8 <__alt_mem_epcs_flash_controller_0+0xff8389b8>
  841f2c:	d8c01c17 	ldw	r3,112(sp)
  841f30:	d8801b17 	ldw	r2,108(sp)
  841f34:	d9001d87 	ldb	r4,118(sp)
  841f38:	20000b26 	beq	r4,zero,841f68 <___svfiprintf_internal_r+0xac8>
  841f3c:	d9001d84 	addi	r4,sp,118
  841f40:	18c00044 	addi	r3,r3,1
  841f44:	10800044 	addi	r2,r2,1
  841f48:	41000015 	stw	r4,0(r8)
  841f4c:	01000044 	movi	r4,1
  841f50:	41000115 	stw	r4,4(r8)
  841f54:	d8c01c15 	stw	r3,112(sp)
  841f58:	d8801b15 	stw	r2,108(sp)
  841f5c:	010001c4 	movi	r4,7
  841f60:	2080f316 	blt	r4,r2,842330 <___svfiprintf_internal_r+0xe90>
  841f64:	42000204 	addi	r8,r8,8
  841f68:	d9402117 	ldw	r5,132(sp)
  841f6c:	28000b26 	beq	r5,zero,841f9c <___svfiprintf_internal_r+0xafc>
  841f70:	d9001d04 	addi	r4,sp,116
  841f74:	18c00084 	addi	r3,r3,2
  841f78:	10800044 	addi	r2,r2,1
  841f7c:	41000015 	stw	r4,0(r8)
  841f80:	01000084 	movi	r4,2
  841f84:	41000115 	stw	r4,4(r8)
  841f88:	d8c01c15 	stw	r3,112(sp)
  841f8c:	d8801b15 	stw	r2,108(sp)
  841f90:	010001c4 	movi	r4,7
  841f94:	2080ef16 	blt	r4,r2,842354 <___svfiprintf_internal_r+0xeb4>
  841f98:	42000204 	addi	r8,r8,8
  841f9c:	d9402217 	ldw	r5,136(sp)
  841fa0:	01002004 	movi	r4,128
  841fa4:	29008f26 	beq	r5,r4,8421e4 <___svfiprintf_internal_r+0xd44>
  841fa8:	d9002017 	ldw	r4,128(sp)
  841fac:	252fc83a 	sub	r23,r4,r20
  841fb0:	05c0310e 	bge	zero,r23,842078 <___svfiprintf_internal_r+0xbd8>
  841fb4:	07000404 	movi	fp,16
  841fb8:	e5c17d0e 	bge	fp,r23,8425b0 <___svfiprintf_internal_r+0x1110>
  841fbc:	010021b4 	movhi	r4,134
  841fc0:	21256504 	addi	r4,r4,-27244
  841fc4:	dc002015 	stw	r16,128(sp)
  841fc8:	dc402215 	stw	r17,136(sp)
  841fcc:	d9002115 	stw	r4,132(sp)
  841fd0:	b823883a 	mov	r17,r23
  841fd4:	054001c4 	movi	r21,7
  841fd8:	982f883a 	mov	r23,r19
  841fdc:	dc002717 	ldw	r16,156(sp)
  841fe0:	9027883a 	mov	r19,r18
  841fe4:	dc802317 	ldw	r18,140(sp)
  841fe8:	00000306 	br	841ff8 <___svfiprintf_internal_r+0xb58>
  841fec:	8c7ffc04 	addi	r17,r17,-16
  841ff0:	42000204 	addi	r8,r8,8
  841ff4:	e440110e 	bge	fp,r17,84203c <___svfiprintf_internal_r+0xb9c>
  841ff8:	18c00404 	addi	r3,r3,16
  841ffc:	10800044 	addi	r2,r2,1
  842000:	45800015 	stw	r22,0(r8)
  842004:	47000115 	stw	fp,4(r8)
  842008:	d8c01c15 	stw	r3,112(sp)
  84200c:	d8801b15 	stw	r2,108(sp)
  842010:	a8bff60e 	bge	r21,r2,841fec <__alt_mem_epcs_flash_controller_0+0xff838fec>
  842014:	d9801a04 	addi	r6,sp,104
  842018:	900b883a 	mov	r5,r18
  84201c:	8009883a 	mov	r4,r16
  842020:	08412d00 	call	8412d0 <__ssprint_r>
  842024:	10005e1e 	bne	r2,zero,8421a0 <___svfiprintf_internal_r+0xd00>
  842028:	8c7ffc04 	addi	r17,r17,-16
  84202c:	d8c01c17 	ldw	r3,112(sp)
  842030:	d8801b17 	ldw	r2,108(sp)
  842034:	d811883a 	mov	r8,sp
  842038:	e47fef16 	blt	fp,r17,841ff8 <__alt_mem_epcs_flash_controller_0+0xff838ff8>
  84203c:	9825883a 	mov	r18,r19
  842040:	dc002017 	ldw	r16,128(sp)
  842044:	b827883a 	mov	r19,r23
  842048:	882f883a 	mov	r23,r17
  84204c:	dc402217 	ldw	r17,136(sp)
  842050:	d9402117 	ldw	r5,132(sp)
  842054:	1dc7883a 	add	r3,r3,r23
  842058:	10800044 	addi	r2,r2,1
  84205c:	41400015 	stw	r5,0(r8)
  842060:	45c00115 	stw	r23,4(r8)
  842064:	d8c01c15 	stw	r3,112(sp)
  842068:	d8801b15 	stw	r2,108(sp)
  84206c:	010001c4 	movi	r4,7
  842070:	2080a616 	blt	r4,r2,84230c <___svfiprintf_internal_r+0xe6c>
  842074:	42000204 	addi	r8,r8,8
  842078:	a0c7883a 	add	r3,r20,r3
  84207c:	10800044 	addi	r2,r2,1
  842080:	44400015 	stw	r17,0(r8)
  842084:	45000115 	stw	r20,4(r8)
  842088:	d8c01c15 	stw	r3,112(sp)
  84208c:	d8801b15 	stw	r2,108(sp)
  842090:	010001c4 	movi	r4,7
  842094:	20808816 	blt	r4,r2,8422b8 <___svfiprintf_internal_r+0xe18>
  842098:	42000204 	addi	r8,r8,8
  84209c:	8400010c 	andi	r16,r16,4
  8420a0:	80002c26 	beq	r16,zero,842154 <___svfiprintf_internal_r+0xcb4>
  8420a4:	d8802517 	ldw	r2,148(sp)
  8420a8:	14a1c83a 	sub	r16,r2,r18
  8420ac:	0400290e 	bge	zero,r16,842154 <___svfiprintf_internal_r+0xcb4>
  8420b0:	04400404 	movi	r17,16
  8420b4:	d8801b17 	ldw	r2,108(sp)
  8420b8:	8c01a70e 	bge	r17,r16,842758 <___svfiprintf_internal_r+0x12b8>
  8420bc:	014021b4 	movhi	r5,134
  8420c0:	29656904 	addi	r5,r5,-27228
  8420c4:	d9402815 	stw	r5,160(sp)
  8420c8:	050001c4 	movi	r20,7
  8420cc:	dd402717 	ldw	r21,156(sp)
  8420d0:	ddc02317 	ldw	r23,140(sp)
  8420d4:	00000306 	br	8420e4 <___svfiprintf_internal_r+0xc44>
  8420d8:	843ffc04 	addi	r16,r16,-16
  8420dc:	42000204 	addi	r8,r8,8
  8420e0:	8c00130e 	bge	r17,r16,842130 <___svfiprintf_internal_r+0xc90>
  8420e4:	010021b4 	movhi	r4,134
  8420e8:	18c00404 	addi	r3,r3,16
  8420ec:	10800044 	addi	r2,r2,1
  8420f0:	21256904 	addi	r4,r4,-27228
  8420f4:	41000015 	stw	r4,0(r8)
  8420f8:	44400115 	stw	r17,4(r8)
  8420fc:	d8c01c15 	stw	r3,112(sp)
  842100:	d8801b15 	stw	r2,108(sp)
  842104:	a0bff40e 	bge	r20,r2,8420d8 <__alt_mem_epcs_flash_controller_0+0xff8390d8>
  842108:	d9801a04 	addi	r6,sp,104
  84210c:	b80b883a 	mov	r5,r23
  842110:	a809883a 	mov	r4,r21
  842114:	08412d00 	call	8412d0 <__ssprint_r>
  842118:	1000211e 	bne	r2,zero,8421a0 <___svfiprintf_internal_r+0xd00>
  84211c:	843ffc04 	addi	r16,r16,-16
  842120:	d8c01c17 	ldw	r3,112(sp)
  842124:	d8801b17 	ldw	r2,108(sp)
  842128:	d811883a 	mov	r8,sp
  84212c:	8c3fed16 	blt	r17,r16,8420e4 <__alt_mem_epcs_flash_controller_0+0xff8390e4>
  842130:	d9402817 	ldw	r5,160(sp)
  842134:	1c07883a 	add	r3,r3,r16
  842138:	10800044 	addi	r2,r2,1
  84213c:	41400015 	stw	r5,0(r8)
  842140:	44000115 	stw	r16,4(r8)
  842144:	d8c01c15 	stw	r3,112(sp)
  842148:	d8801b15 	stw	r2,108(sp)
  84214c:	010001c4 	movi	r4,7
  842150:	2080b516 	blt	r4,r2,842428 <___svfiprintf_internal_r+0xf88>
  842154:	d8802517 	ldw	r2,148(sp)
  842158:	1480010e 	bge	r2,r18,842160 <___svfiprintf_internal_r+0xcc0>
  84215c:	9005883a 	mov	r2,r18
  842160:	d9002617 	ldw	r4,152(sp)
  842164:	2089883a 	add	r4,r4,r2
  842168:	d9002615 	stw	r4,152(sp)
  84216c:	18005a1e 	bne	r3,zero,8422d8 <___svfiprintf_internal_r+0xe38>
  842170:	98800007 	ldb	r2,0(r19)
  842174:	d8001b15 	stw	zero,108(sp)
  842178:	d811883a 	mov	r8,sp
  84217c:	103cec1e 	bne	r2,zero,841530 <__alt_mem_epcs_flash_controller_0+0xff838530>
  842180:	9825883a 	mov	r18,r19
  842184:	003d0206 	br	841590 <__alt_mem_epcs_flash_controller_0+0xff838590>
  842188:	d8801c17 	ldw	r2,112(sp)
  84218c:	10000426 	beq	r2,zero,8421a0 <___svfiprintf_internal_r+0xd00>
  842190:	d9402317 	ldw	r5,140(sp)
  842194:	d9002717 	ldw	r4,156(sp)
  842198:	d9801a04 	addi	r6,sp,104
  84219c:	08412d00 	call	8412d0 <__ssprint_r>
  8421a0:	d9402317 	ldw	r5,140(sp)
  8421a4:	d8802617 	ldw	r2,152(sp)
  8421a8:	28c0030b 	ldhu	r3,12(r5)
  8421ac:	18c0100c 	andi	r3,r3,64
  8421b0:	18015c1e 	bne	r3,zero,842724 <___svfiprintf_internal_r+0x1284>
  8421b4:	dfc03717 	ldw	ra,220(sp)
  8421b8:	df003617 	ldw	fp,216(sp)
  8421bc:	ddc03517 	ldw	r23,212(sp)
  8421c0:	dd803417 	ldw	r22,208(sp)
  8421c4:	dd403317 	ldw	r21,204(sp)
  8421c8:	dd003217 	ldw	r20,200(sp)
  8421cc:	dcc03117 	ldw	r19,196(sp)
  8421d0:	dc803017 	ldw	r18,192(sp)
  8421d4:	dc402f17 	ldw	r17,188(sp)
  8421d8:	dc002e17 	ldw	r16,184(sp)
  8421dc:	dec03804 	addi	sp,sp,224
  8421e0:	f800283a 	ret
  8421e4:	d9002517 	ldw	r4,148(sp)
  8421e8:	24afc83a 	sub	r23,r4,r18
  8421ec:	05ff6e0e 	bge	zero,r23,841fa8 <__alt_mem_epcs_flash_controller_0+0xff838fa8>
  8421f0:	07000404 	movi	fp,16
  8421f4:	e5c15c0e 	bge	fp,r23,842768 <___svfiprintf_internal_r+0x12c8>
  8421f8:	010021b4 	movhi	r4,134
  8421fc:	21256504 	addi	r4,r4,-27244
  842200:	dc002215 	stw	r16,136(sp)
  842204:	dc402815 	stw	r17,160(sp)
  842208:	d9002115 	stw	r4,132(sp)
  84220c:	b823883a 	mov	r17,r23
  842210:	054001c4 	movi	r21,7
  842214:	982f883a 	mov	r23,r19
  842218:	dc002717 	ldw	r16,156(sp)
  84221c:	9027883a 	mov	r19,r18
  842220:	dc802317 	ldw	r18,140(sp)
  842224:	00000306 	br	842234 <___svfiprintf_internal_r+0xd94>
  842228:	8c7ffc04 	addi	r17,r17,-16
  84222c:	42000204 	addi	r8,r8,8
  842230:	e440110e 	bge	fp,r17,842278 <___svfiprintf_internal_r+0xdd8>
  842234:	18c00404 	addi	r3,r3,16
  842238:	10800044 	addi	r2,r2,1
  84223c:	45800015 	stw	r22,0(r8)
  842240:	47000115 	stw	fp,4(r8)
  842244:	d8c01c15 	stw	r3,112(sp)
  842248:	d8801b15 	stw	r2,108(sp)
  84224c:	a8bff60e 	bge	r21,r2,842228 <__alt_mem_epcs_flash_controller_0+0xff839228>
  842250:	d9801a04 	addi	r6,sp,104
  842254:	900b883a 	mov	r5,r18
  842258:	8009883a 	mov	r4,r16
  84225c:	08412d00 	call	8412d0 <__ssprint_r>
  842260:	103fcf1e 	bne	r2,zero,8421a0 <__alt_mem_epcs_flash_controller_0+0xff8391a0>
  842264:	8c7ffc04 	addi	r17,r17,-16
  842268:	d8c01c17 	ldw	r3,112(sp)
  84226c:	d8801b17 	ldw	r2,108(sp)
  842270:	d811883a 	mov	r8,sp
  842274:	e47fef16 	blt	fp,r17,842234 <__alt_mem_epcs_flash_controller_0+0xff839234>
  842278:	9825883a 	mov	r18,r19
  84227c:	dc002217 	ldw	r16,136(sp)
  842280:	b827883a 	mov	r19,r23
  842284:	882f883a 	mov	r23,r17
  842288:	dc402817 	ldw	r17,160(sp)
  84228c:	d9402117 	ldw	r5,132(sp)
  842290:	1dc7883a 	add	r3,r3,r23
  842294:	10800044 	addi	r2,r2,1
  842298:	41400015 	stw	r5,0(r8)
  84229c:	45c00115 	stw	r23,4(r8)
  8422a0:	d8c01c15 	stw	r3,112(sp)
  8422a4:	d8801b15 	stw	r2,108(sp)
  8422a8:	010001c4 	movi	r4,7
  8422ac:	2080b716 	blt	r4,r2,84258c <___svfiprintf_internal_r+0x10ec>
  8422b0:	42000204 	addi	r8,r8,8
  8422b4:	003f3c06 	br	841fa8 <__alt_mem_epcs_flash_controller_0+0xff838fa8>
  8422b8:	d9402317 	ldw	r5,140(sp)
  8422bc:	d9002717 	ldw	r4,156(sp)
  8422c0:	d9801a04 	addi	r6,sp,104
  8422c4:	08412d00 	call	8412d0 <__ssprint_r>
  8422c8:	103fb51e 	bne	r2,zero,8421a0 <__alt_mem_epcs_flash_controller_0+0xff8391a0>
  8422cc:	d8c01c17 	ldw	r3,112(sp)
  8422d0:	d811883a 	mov	r8,sp
  8422d4:	003f7106 	br	84209c <__alt_mem_epcs_flash_controller_0+0xff83909c>
  8422d8:	d9402317 	ldw	r5,140(sp)
  8422dc:	d9002717 	ldw	r4,156(sp)
  8422e0:	d9801a04 	addi	r6,sp,104
  8422e4:	08412d00 	call	8412d0 <__ssprint_r>
  8422e8:	103fa126 	beq	r2,zero,842170 <__alt_mem_epcs_flash_controller_0+0xff839170>
  8422ec:	003fac06 	br	8421a0 <__alt_mem_epcs_flash_controller_0+0xff8391a0>
  8422f0:	d9402317 	ldw	r5,140(sp)
  8422f4:	d9002717 	ldw	r4,156(sp)
  8422f8:	d9801a04 	addi	r6,sp,104
  8422fc:	08412d00 	call	8412d0 <__ssprint_r>
  842300:	103fa71e 	bne	r2,zero,8421a0 <__alt_mem_epcs_flash_controller_0+0xff8391a0>
  842304:	d811883a 	mov	r8,sp
  842308:	003c9e06 	br	841584 <__alt_mem_epcs_flash_controller_0+0xff838584>
  84230c:	d9402317 	ldw	r5,140(sp)
  842310:	d9002717 	ldw	r4,156(sp)
  842314:	d9801a04 	addi	r6,sp,104
  842318:	08412d00 	call	8412d0 <__ssprint_r>
  84231c:	103fa01e 	bne	r2,zero,8421a0 <__alt_mem_epcs_flash_controller_0+0xff8391a0>
  842320:	d8c01c17 	ldw	r3,112(sp)
  842324:	d8801b17 	ldw	r2,108(sp)
  842328:	d811883a 	mov	r8,sp
  84232c:	003f5206 	br	842078 <__alt_mem_epcs_flash_controller_0+0xff839078>
  842330:	d9402317 	ldw	r5,140(sp)
  842334:	d9002717 	ldw	r4,156(sp)
  842338:	d9801a04 	addi	r6,sp,104
  84233c:	08412d00 	call	8412d0 <__ssprint_r>
  842340:	103f971e 	bne	r2,zero,8421a0 <__alt_mem_epcs_flash_controller_0+0xff8391a0>
  842344:	d8c01c17 	ldw	r3,112(sp)
  842348:	d8801b17 	ldw	r2,108(sp)
  84234c:	d811883a 	mov	r8,sp
  842350:	003f0506 	br	841f68 <__alt_mem_epcs_flash_controller_0+0xff838f68>
  842354:	d9402317 	ldw	r5,140(sp)
  842358:	d9002717 	ldw	r4,156(sp)
  84235c:	d9801a04 	addi	r6,sp,104
  842360:	08412d00 	call	8412d0 <__ssprint_r>
  842364:	103f8e1e 	bne	r2,zero,8421a0 <__alt_mem_epcs_flash_controller_0+0xff8391a0>
  842368:	d8c01c17 	ldw	r3,112(sp)
  84236c:	d8801b17 	ldw	r2,108(sp)
  842370:	d811883a 	mov	r8,sp
  842374:	003f0906 	br	841f9c <__alt_mem_epcs_flash_controller_0+0xff838f9c>
  842378:	d9402017 	ldw	r5,128(sp)
  84237c:	d8001d85 	stb	zero,118(sp)
  842380:	28007716 	blt	r5,zero,842560 <___svfiprintf_internal_r+0x10c0>
  842384:	00ffdfc4 	movi	r3,-129
  842388:	9504b03a 	or	r2,r18,r20
  84238c:	80e0703a 	and	r16,r16,r3
  842390:	103d3926 	beq	r2,zero,841878 <__alt_mem_epcs_flash_controller_0+0xff838878>
  842394:	002b883a 	mov	r21,zero
  842398:	003d3c06 	br	84188c <__alt_mem_epcs_flash_controller_0+0xff83888c>
  84239c:	d9402317 	ldw	r5,140(sp)
  8423a0:	d9002717 	ldw	r4,156(sp)
  8423a4:	d9801a04 	addi	r6,sp,104
  8423a8:	08412d00 	call	8412d0 <__ssprint_r>
  8423ac:	103f7c1e 	bne	r2,zero,8421a0 <__alt_mem_epcs_flash_controller_0+0xff8391a0>
  8423b0:	d8c01c17 	ldw	r3,112(sp)
  8423b4:	d8801b17 	ldw	r2,108(sp)
  8423b8:	d811883a 	mov	r8,sp
  8423bc:	003edd06 	br	841f34 <__alt_mem_epcs_flash_controller_0+0xff838f34>
  8423c0:	8080100c 	andi	r2,r16,64
  8423c4:	d8001d85 	stb	zero,118(sp)
  8423c8:	10008426 	beq	r2,zero,8425dc <___svfiprintf_internal_r+0x113c>
  8423cc:	d9402417 	ldw	r5,144(sp)
  8423d0:	d8c02017 	ldw	r3,128(sp)
  8423d4:	0029883a 	mov	r20,zero
  8423d8:	28800104 	addi	r2,r5,4
  8423dc:	2c80000b 	ldhu	r18,0(r5)
  8423e0:	183eab0e 	bge	r3,zero,841e90 <__alt_mem_epcs_flash_controller_0+0xff838e90>
  8423e4:	d8802415 	stw	r2,144(sp)
  8423e8:	002b883a 	mov	r21,zero
  8423ec:	9504b03a 	or	r2,r18,r20
  8423f0:	103e171e 	bne	r2,zero,841c50 <__alt_mem_epcs_flash_controller_0+0xff838c50>
  8423f4:	00800044 	movi	r2,1
  8423f8:	10803fcc 	andi	r2,r2,255
  8423fc:	00c00044 	movi	r3,1
  842400:	10c05c26 	beq	r2,r3,842574 <___svfiprintf_internal_r+0x10d4>
  842404:	00c00084 	movi	r3,2
  842408:	10fd1e26 	beq	r2,r3,841884 <__alt_mem_epcs_flash_controller_0+0xff838884>
  84240c:	003ec406 	br	841f20 <__alt_mem_epcs_flash_controller_0+0xff838f20>
  842410:	d9401e17 	ldw	r5,120(sp)
  842414:	2c69c83a 	sub	r20,r5,r17
  842418:	003d4506 	br	841930 <__alt_mem_epcs_flash_controller_0+0xff838930>
  84241c:	d8802415 	stw	r2,144(sp)
  842420:	98c00007 	ldb	r3,0(r19)
  842424:	003c6a06 	br	8415d0 <__alt_mem_epcs_flash_controller_0+0xff8385d0>
  842428:	d9402317 	ldw	r5,140(sp)
  84242c:	d9002717 	ldw	r4,156(sp)
  842430:	d9801a04 	addi	r6,sp,104
  842434:	08412d00 	call	8412d0 <__ssprint_r>
  842438:	103f591e 	bne	r2,zero,8421a0 <__alt_mem_epcs_flash_controller_0+0xff8391a0>
  84243c:	d8c01c17 	ldw	r3,112(sp)
  842440:	003f4406 	br	842154 <__alt_mem_epcs_flash_controller_0+0xff839154>
  842444:	014021b4 	movhi	r5,134
  842448:	29643a04 	addi	r5,r5,-28440
  84244c:	d9402915 	stw	r5,164(sp)
  842450:	003d0906 	br	841878 <__alt_mem_epcs_flash_controller_0+0xff838878>
  842454:	d8c02417 	ldw	r3,144(sp)
  842458:	d9002617 	ldw	r4,152(sp)
  84245c:	d9402417 	ldw	r5,144(sp)
  842460:	18800017 	ldw	r2,0(r3)
  842464:	2007d7fa 	srai	r3,r4,31
  842468:	29400104 	addi	r5,r5,4
  84246c:	d9402415 	stw	r5,144(sp)
  842470:	11000015 	stw	r4,0(r2)
  842474:	10c00115 	stw	r3,4(r2)
  842478:	003c2b06 	br	841528 <__alt_mem_epcs_flash_controller_0+0xff838528>
  84247c:	d8c01d45 	stb	r3,117(sp)
  842480:	d8c02017 	ldw	r3,128(sp)
  842484:	00800c04 	movi	r2,48
  842488:	d8801d05 	stb	r2,116(sp)
  84248c:	d8001d85 	stb	zero,118(sp)
  842490:	80800094 	ori	r2,r16,2
  842494:	1800ac16 	blt	r3,zero,842748 <___svfiprintf_internal_r+0x12a8>
  842498:	00bfdfc4 	movi	r2,-129
  84249c:	80a0703a 	and	r16,r16,r2
  8424a0:	84000094 	ori	r16,r16,2
  8424a4:	002b883a 	mov	r21,zero
  8424a8:	003cf806 	br	84188c <__alt_mem_epcs_flash_controller_0+0xff83888c>
  8424ac:	98c00007 	ldb	r3,0(r19)
  8424b0:	003c4706 	br	8415d0 <__alt_mem_epcs_flash_controller_0+0xff8385d0>
  8424b4:	d9402417 	ldw	r5,144(sp)
  8424b8:	2c800017 	ldw	r18,0(r5)
  8424bc:	29400104 	addi	r5,r5,4
  8424c0:	d9402415 	stw	r5,144(sp)
  8424c4:	9029d7fa 	srai	r20,r18,31
  8424c8:	a005883a 	mov	r2,r20
  8424cc:	003dd806 	br	841c30 <__alt_mem_epcs_flash_controller_0+0xff838c30>
  8424d0:	d9402417 	ldw	r5,144(sp)
  8424d4:	0029883a 	mov	r20,zero
  8424d8:	2c800017 	ldw	r18,0(r5)
  8424dc:	29400104 	addi	r5,r5,4
  8424e0:	d9402415 	stw	r5,144(sp)
  8424e4:	003cdb06 	br	841854 <__alt_mem_epcs_flash_controller_0+0xff838854>
  8424e8:	8080100c 	andi	r2,r16,64
  8424ec:	d8001d85 	stb	zero,118(sp)
  8424f0:	10003326 	beq	r2,zero,8425c0 <___svfiprintf_internal_r+0x1120>
  8424f4:	d9002417 	ldw	r4,144(sp)
  8424f8:	d9402017 	ldw	r5,128(sp)
  8424fc:	0029883a 	mov	r20,zero
  842500:	20800104 	addi	r2,r4,4
  842504:	2480000b 	ldhu	r18,0(r4)
  842508:	283e7e0e 	bge	r5,zero,841f04 <__alt_mem_epcs_flash_controller_0+0xff838f04>
  84250c:	9506b03a 	or	r3,r18,r20
  842510:	d8802415 	stw	r2,144(sp)
  842514:	183d271e 	bne	r3,zero,8419b4 <__alt_mem_epcs_flash_controller_0+0xff8389b4>
  842518:	002b883a 	mov	r21,zero
  84251c:	0005883a 	mov	r2,zero
  842520:	003fb506 	br	8423f8 <__alt_mem_epcs_flash_controller_0+0xff8393f8>
  842524:	98c00043 	ldbu	r3,1(r19)
  842528:	8c400814 	ori	r17,r17,32
  84252c:	9cc00044 	addi	r19,r19,1
  842530:	18c03fcc 	andi	r3,r3,255
  842534:	18c0201c 	xori	r3,r3,128
  842538:	18ffe004 	addi	r3,r3,-128
  84253c:	003c2406 	br	8415d0 <__alt_mem_epcs_flash_controller_0+0xff8385d0>
  842540:	d8c02415 	stw	r3,144(sp)
  842544:	002b883a 	mov	r21,zero
  842548:	003fa806 	br	8423ec <__alt_mem_epcs_flash_controller_0+0xff8393ec>
  84254c:	010021b4 	movhi	r4,134
  842550:	21243a04 	addi	r4,r4,-28440
  842554:	d9002915 	stw	r4,164(sp)
  842558:	d8c02415 	stw	r3,144(sp)
  84255c:	1021883a 	mov	r16,r2
  842560:	9504b03a 	or	r2,r18,r20
  842564:	103f8b1e 	bne	r2,zero,842394 <__alt_mem_epcs_flash_controller_0+0xff839394>
  842568:	002b883a 	mov	r21,zero
  84256c:	00800084 	movi	r2,2
  842570:	003fa106 	br	8423f8 <__alt_mem_epcs_flash_controller_0+0xff8393f8>
  842574:	0025883a 	mov	r18,zero
  842578:	94800c04 	addi	r18,r18,48
  84257c:	dc8019c5 	stb	r18,103(sp)
  842580:	dd002c17 	ldw	r20,176(sp)
  842584:	dc4019c4 	addi	r17,sp,103
  842588:	003ce906 	br	841930 <__alt_mem_epcs_flash_controller_0+0xff838930>
  84258c:	d9402317 	ldw	r5,140(sp)
  842590:	d9002717 	ldw	r4,156(sp)
  842594:	d9801a04 	addi	r6,sp,104
  842598:	08412d00 	call	8412d0 <__ssprint_r>
  84259c:	103f001e 	bne	r2,zero,8421a0 <__alt_mem_epcs_flash_controller_0+0xff8391a0>
  8425a0:	d8c01c17 	ldw	r3,112(sp)
  8425a4:	d8801b17 	ldw	r2,108(sp)
  8425a8:	d811883a 	mov	r8,sp
  8425ac:	003e7e06 	br	841fa8 <__alt_mem_epcs_flash_controller_0+0xff838fa8>
  8425b0:	014021b4 	movhi	r5,134
  8425b4:	29656504 	addi	r5,r5,-27244
  8425b8:	d9402115 	stw	r5,132(sp)
  8425bc:	003ea406 	br	842050 <__alt_mem_epcs_flash_controller_0+0xff839050>
  8425c0:	d8c02417 	ldw	r3,144(sp)
  8425c4:	d9002017 	ldw	r4,128(sp)
  8425c8:	0029883a 	mov	r20,zero
  8425cc:	18800104 	addi	r2,r3,4
  8425d0:	1c800017 	ldw	r18,0(r3)
  8425d4:	203e4b0e 	bge	r4,zero,841f04 <__alt_mem_epcs_flash_controller_0+0xff838f04>
  8425d8:	003fcc06 	br	84250c <__alt_mem_epcs_flash_controller_0+0xff83950c>
  8425dc:	d9002417 	ldw	r4,144(sp)
  8425e0:	d9402017 	ldw	r5,128(sp)
  8425e4:	0029883a 	mov	r20,zero
  8425e8:	20800104 	addi	r2,r4,4
  8425ec:	24800017 	ldw	r18,0(r4)
  8425f0:	283e270e 	bge	r5,zero,841e90 <__alt_mem_epcs_flash_controller_0+0xff838e90>
  8425f4:	003f7b06 	br	8423e4 <__alt_mem_epcs_flash_controller_0+0xff8393e4>
  8425f8:	8400100c 	andi	r16,r16,64
  8425fc:	80003326 	beq	r16,zero,8426cc <___svfiprintf_internal_r+0x122c>
  842600:	d9402417 	ldw	r5,144(sp)
  842604:	d8c02617 	ldw	r3,152(sp)
  842608:	28800017 	ldw	r2,0(r5)
  84260c:	29400104 	addi	r5,r5,4
  842610:	d9402415 	stw	r5,144(sp)
  842614:	10c0000d 	sth	r3,0(r2)
  842618:	003bc306 	br	841528 <__alt_mem_epcs_flash_controller_0+0xff838528>
  84261c:	d9002417 	ldw	r4,144(sp)
  842620:	0029883a 	mov	r20,zero
  842624:	24800017 	ldw	r18,0(r4)
  842628:	21000104 	addi	r4,r4,4
  84262c:	d9002415 	stw	r4,144(sp)
  842630:	003c8806 	br	841854 <__alt_mem_epcs_flash_controller_0+0xff838854>
  842634:	d8c02417 	ldw	r3,144(sp)
  842638:	1c800017 	ldw	r18,0(r3)
  84263c:	18c00104 	addi	r3,r3,4
  842640:	d8c02415 	stw	r3,144(sp)
  842644:	9029d7fa 	srai	r20,r18,31
  842648:	a005883a 	mov	r2,r20
  84264c:	003d7806 	br	841c30 <__alt_mem_epcs_flash_controller_0+0xff838c30>
  842650:	8809883a 	mov	r4,r17
  842654:	da002d15 	stw	r8,180(sp)
  842658:	0834c200 	call	834c20 <strlen>
  84265c:	1029883a 	mov	r20,r2
  842660:	dd401d83 	ldbu	r21,118(sp)
  842664:	ddc02415 	stw	r23,144(sp)
  842668:	d8002015 	stw	zero,128(sp)
  84266c:	da002d17 	ldw	r8,180(sp)
  842670:	003caf06 	br	841930 <__alt_mem_epcs_flash_controller_0+0xff838930>
  842674:	013fffc4 	movi	r4,-1
  842678:	003df206 	br	841e44 <__alt_mem_epcs_flash_controller_0+0xff838e44>
  84267c:	dd002017 	ldw	r20,128(sp)
  842680:	00800184 	movi	r2,6
  842684:	1500012e 	bgeu	r2,r20,84268c <___svfiprintf_internal_r+0x11ec>
  842688:	1029883a 	mov	r20,r2
  84268c:	a025883a 	mov	r18,r20
  842690:	a0004116 	blt	r20,zero,842798 <___svfiprintf_internal_r+0x12f8>
  842694:	044021b4 	movhi	r17,134
  842698:	ddc02415 	stw	r23,144(sp)
  84269c:	8c643f04 	addi	r17,r17,-28420
  8426a0:	003ce806 	br	841a44 <__alt_mem_epcs_flash_controller_0+0xff838a44>
  8426a4:	04001004 	movi	r16,64
  8426a8:	800b883a 	mov	r5,r16
  8426ac:	08339440 	call	833944 <_malloc_r>
  8426b0:	d8c02317 	ldw	r3,140(sp)
  8426b4:	18800015 	stw	r2,0(r3)
  8426b8:	18800415 	stw	r2,16(r3)
  8426bc:	10004d26 	beq	r2,zero,8427f4 <___svfiprintf_internal_r+0x1354>
  8426c0:	d9402317 	ldw	r5,140(sp)
  8426c4:	2c000515 	stw	r16,20(r5)
  8426c8:	003b8906 	br	8414f0 <__alt_mem_epcs_flash_controller_0+0xff8384f0>
  8426cc:	d9002417 	ldw	r4,144(sp)
  8426d0:	d9402617 	ldw	r5,152(sp)
  8426d4:	20800017 	ldw	r2,0(r4)
  8426d8:	21000104 	addi	r4,r4,4
  8426dc:	d9002415 	stw	r4,144(sp)
  8426e0:	11400015 	stw	r5,0(r2)
  8426e4:	003b9006 	br	841528 <__alt_mem_epcs_flash_controller_0+0xff838528>
  8426e8:	8080004c 	andi	r2,r16,1
  8426ec:	002b883a 	mov	r21,zero
  8426f0:	10000526 	beq	r2,zero,842708 <___svfiprintf_internal_r+0x1268>
  8426f4:	00800c04 	movi	r2,48
  8426f8:	d88019c5 	stb	r2,103(sp)
  8426fc:	dd002c17 	ldw	r20,176(sp)
  842700:	dc4019c4 	addi	r17,sp,103
  842704:	003c8a06 	br	841930 <__alt_mem_epcs_flash_controller_0+0xff838930>
  842708:	0029883a 	mov	r20,zero
  84270c:	dc401a04 	addi	r17,sp,104
  842710:	003c8706 	br	841930 <__alt_mem_epcs_flash_controller_0+0xff838930>
  842714:	014021b4 	movhi	r5,134
  842718:	29656904 	addi	r5,r5,-27228
  84271c:	d9402815 	stw	r5,160(sp)
  842720:	003cff06 	br	841b20 <__alt_mem_epcs_flash_controller_0+0xff838b20>
  842724:	00bfffc4 	movi	r2,-1
  842728:	003ea206 	br	8421b4 <__alt_mem_epcs_flash_controller_0+0xff8391b4>
  84272c:	00800044 	movi	r2,1
  842730:	10803fcc 	andi	r2,r2,255
  842734:	00c00044 	movi	r3,1
  842738:	10fd4526 	beq	r2,r3,841c50 <__alt_mem_epcs_flash_controller_0+0xff838c50>
  84273c:	00c00084 	movi	r3,2
  842740:	10fc5226 	beq	r2,r3,84188c <__alt_mem_epcs_flash_controller_0+0xff83888c>
  842744:	003c9c06 	br	8419b8 <__alt_mem_epcs_flash_controller_0+0xff8389b8>
  842748:	1021883a 	mov	r16,r2
  84274c:	002b883a 	mov	r21,zero
  842750:	00800084 	movi	r2,2
  842754:	003ff606 	br	842730 <__alt_mem_epcs_flash_controller_0+0xff839730>
  842758:	010021b4 	movhi	r4,134
  84275c:	21256904 	addi	r4,r4,-27228
  842760:	d9002815 	stw	r4,160(sp)
  842764:	003e7206 	br	842130 <__alt_mem_epcs_flash_controller_0+0xff839130>
  842768:	014021b4 	movhi	r5,134
  84276c:	29656504 	addi	r5,r5,-27244
  842770:	d9402115 	stw	r5,132(sp)
  842774:	003ec506 	br	84228c <__alt_mem_epcs_flash_controller_0+0xff83928c>
  842778:	e027883a 	mov	r19,fp
  84277c:	d8002015 	stw	zero,128(sp)
  842780:	003b9406 	br	8415d4 <__alt_mem_epcs_flash_controller_0+0xff8385d4>
  842784:	dd002017 	ldw	r20,128(sp)
  842788:	dd401d83 	ldbu	r21,118(sp)
  84278c:	ddc02415 	stw	r23,144(sp)
  842790:	d8002015 	stw	zero,128(sp)
  842794:	003c6606 	br	841930 <__alt_mem_epcs_flash_controller_0+0xff838930>
  842798:	0025883a 	mov	r18,zero
  84279c:	003fbd06 	br	842694 <__alt_mem_epcs_flash_controller_0+0xff839694>
  8427a0:	d9402417 	ldw	r5,144(sp)
  8427a4:	d8c02417 	ldw	r3,144(sp)
  8427a8:	29400017 	ldw	r5,0(r5)
  8427ac:	19000104 	addi	r4,r3,4
  8427b0:	d9002415 	stw	r4,144(sp)
  8427b4:	d9402015 	stw	r5,128(sp)
  8427b8:	98c00043 	ldbu	r3,1(r19)
  8427bc:	e027883a 	mov	r19,fp
  8427c0:	283f5b0e 	bge	r5,zero,842530 <__alt_mem_epcs_flash_controller_0+0xff839530>
  8427c4:	18c03fcc 	andi	r3,r3,255
  8427c8:	013fffc4 	movi	r4,-1
  8427cc:	18c0201c 	xori	r3,r3,128
  8427d0:	d9002015 	stw	r4,128(sp)
  8427d4:	18ffe004 	addi	r3,r3,-128
  8427d8:	003b7d06 	br	8415d0 <__alt_mem_epcs_flash_controller_0+0xff8385d0>
  8427dc:	dd401d85 	stb	r21,118(sp)
  8427e0:	003cf306 	br	841bb0 <__alt_mem_epcs_flash_controller_0+0xff838bb0>
  8427e4:	dd401d85 	stb	r21,118(sp)
  8427e8:	003d4e06 	br	841d24 <__alt_mem_epcs_flash_controller_0+0xff838d24>
  8427ec:	dd401d85 	stb	r21,118(sp)
  8427f0:	003c0e06 	br	84182c <__alt_mem_epcs_flash_controller_0+0xff83882c>
  8427f4:	d9002717 	ldw	r4,156(sp)
  8427f8:	00800304 	movi	r2,12
  8427fc:	20800015 	stw	r2,0(r4)
  842800:	00bfffc4 	movi	r2,-1
  842804:	003e6b06 	br	8421b4 <__alt_mem_epcs_flash_controller_0+0xff8391b4>
  842808:	dd401d85 	stb	r21,118(sp)
  84280c:	003d0006 	br	841c10 <__alt_mem_epcs_flash_controller_0+0xff838c10>
  842810:	dd401d85 	stb	r21,118(sp)
  842814:	003d7106 	br	841ddc <__alt_mem_epcs_flash_controller_0+0xff838ddc>
  842818:	dd401d85 	stb	r21,118(sp)
  84281c:	003c5706 	br	84197c <__alt_mem_epcs_flash_controller_0+0xff83897c>
  842820:	dd401d85 	stb	r21,118(sp)
  842824:	003c2e06 	br	8418e0 <__alt_mem_epcs_flash_controller_0+0xff8388e0>
  842828:	dd401d85 	stb	r21,118(sp)
  84282c:	003d8c06 	br	841e60 <__alt_mem_epcs_flash_controller_0+0xff838e60>
  842830:	dd401d85 	stb	r21,118(sp)
  842834:	003da706 	br	841ed4 <__alt_mem_epcs_flash_controller_0+0xff838ed4>
  842838:	dd401d85 	stb	r21,118(sp)
  84283c:	003cc806 	br	841b60 <__alt_mem_epcs_flash_controller_0+0xff838b60>

00842840 <_sungetc_r>:
  842840:	00bfffc4 	movi	r2,-1
  842844:	28803726 	beq	r5,r2,842924 <_sungetc_r+0xe4>
  842848:	3080030b 	ldhu	r2,12(r6)
  84284c:	30c00c17 	ldw	r3,48(r6)
  842850:	defffc04 	addi	sp,sp,-16
  842854:	10bff7cc 	andi	r2,r2,65503
  842858:	dc800215 	stw	r18,8(sp)
  84285c:	dfc00315 	stw	ra,12(sp)
  842860:	dc400115 	stw	r17,4(sp)
  842864:	dc000015 	stw	r16,0(sp)
  842868:	3080030d 	sth	r2,12(r6)
  84286c:	2c803fcc 	andi	r18,r5,255
  842870:	18001826 	beq	r3,zero,8428d4 <_sungetc_r+0x94>
  842874:	30c00117 	ldw	r3,4(r6)
  842878:	30800d17 	ldw	r2,52(r6)
  84287c:	3021883a 	mov	r16,r6
  842880:	2823883a 	mov	r17,r5
  842884:	18800e0e 	bge	r3,r2,8428c0 <_sungetc_r+0x80>
  842888:	80c00017 	ldw	r3,0(r16)
  84288c:	9005883a 	mov	r2,r18
  842890:	193fffc4 	addi	r4,r3,-1
  842894:	81000015 	stw	r4,0(r16)
  842898:	1c7fffc5 	stb	r17,-1(r3)
  84289c:	80c00117 	ldw	r3,4(r16)
  8428a0:	18c00044 	addi	r3,r3,1
  8428a4:	80c00115 	stw	r3,4(r16)
  8428a8:	dfc00317 	ldw	ra,12(sp)
  8428ac:	dc800217 	ldw	r18,8(sp)
  8428b0:	dc400117 	ldw	r17,4(sp)
  8428b4:	dc000017 	ldw	r16,0(sp)
  8428b8:	dec00404 	addi	sp,sp,16
  8428bc:	f800283a 	ret
  8428c0:	300b883a 	mov	r5,r6
  8428c4:	0843c040 	call	843c04 <__submore>
  8428c8:	103fef26 	beq	r2,zero,842888 <__alt_mem_epcs_flash_controller_0+0xff839888>
  8428cc:	00bfffc4 	movi	r2,-1
  8428d0:	003ff506 	br	8428a8 <__alt_mem_epcs_flash_controller_0+0xff8398a8>
  8428d4:	30c00417 	ldw	r3,16(r6)
  8428d8:	30800017 	ldw	r2,0(r6)
  8428dc:	18000326 	beq	r3,zero,8428ec <_sungetc_r+0xac>
  8428e0:	1880022e 	bgeu	r3,r2,8428ec <_sungetc_r+0xac>
  8428e4:	10ffffc3 	ldbu	r3,-1(r2)
  8428e8:	90c01026 	beq	r18,r3,84292c <_sungetc_r+0xec>
  8428ec:	31c00117 	ldw	r7,4(r6)
  8428f0:	30800e15 	stw	r2,56(r6)
  8428f4:	008000c4 	movi	r2,3
  8428f8:	31001004 	addi	r4,r6,64
  8428fc:	30c01084 	addi	r3,r6,66
  842900:	30800d15 	stw	r2,52(r6)
  842904:	00800044 	movi	r2,1
  842908:	30800115 	stw	r2,4(r6)
  84290c:	31c00f15 	stw	r7,60(r6)
  842910:	31000c15 	stw	r4,48(r6)
  842914:	31401085 	stb	r5,66(r6)
  842918:	30c00015 	stw	r3,0(r6)
  84291c:	9005883a 	mov	r2,r18
  842920:	003fe106 	br	8428a8 <__alt_mem_epcs_flash_controller_0+0xff8398a8>
  842924:	00bfffc4 	movi	r2,-1
  842928:	f800283a 	ret
  84292c:	30c00117 	ldw	r3,4(r6)
  842930:	10bfffc4 	addi	r2,r2,-1
  842934:	30800015 	stw	r2,0(r6)
  842938:	18800044 	addi	r2,r3,1
  84293c:	30800115 	stw	r2,4(r6)
  842940:	9005883a 	mov	r2,r18
  842944:	003fd806 	br	8428a8 <__alt_mem_epcs_flash_controller_0+0xff8398a8>

00842948 <__ssrefill_r>:
  842948:	defffe04 	addi	sp,sp,-8
  84294c:	dc000015 	stw	r16,0(sp)
  842950:	2821883a 	mov	r16,r5
  842954:	29400c17 	ldw	r5,48(r5)
  842958:	dfc00115 	stw	ra,4(sp)
  84295c:	28000e26 	beq	r5,zero,842998 <__ssrefill_r+0x50>
  842960:	80801004 	addi	r2,r16,64
  842964:	28800126 	beq	r5,r2,84296c <__ssrefill_r+0x24>
  842968:	0832c880 	call	832c88 <_free_r>
  84296c:	80800f17 	ldw	r2,60(r16)
  842970:	80000c15 	stw	zero,48(r16)
  842974:	80800115 	stw	r2,4(r16)
  842978:	10000726 	beq	r2,zero,842998 <__ssrefill_r+0x50>
  84297c:	80c00e17 	ldw	r3,56(r16)
  842980:	0005883a 	mov	r2,zero
  842984:	80c00015 	stw	r3,0(r16)
  842988:	dfc00117 	ldw	ra,4(sp)
  84298c:	dc000017 	ldw	r16,0(sp)
  842990:	dec00204 	addi	sp,sp,8
  842994:	f800283a 	ret
  842998:	8080030b 	ldhu	r2,12(r16)
  84299c:	80c00417 	ldw	r3,16(r16)
  8429a0:	80000115 	stw	zero,4(r16)
  8429a4:	10800814 	ori	r2,r2,32
  8429a8:	8080030d 	sth	r2,12(r16)
  8429ac:	80c00015 	stw	r3,0(r16)
  8429b0:	00bfffc4 	movi	r2,-1
  8429b4:	003ff406 	br	842988 <__alt_mem_epcs_flash_controller_0+0xff839988>

008429b8 <_sfread_r>:
  8429b8:	defff704 	addi	sp,sp,-36
  8429bc:	dd000415 	stw	r20,16(sp)
  8429c0:	dcc00315 	stw	r19,12(sp)
  8429c4:	2029883a 	mov	r20,r4
  8429c8:	2827883a 	mov	r19,r5
  8429cc:	3809883a 	mov	r4,r7
  8429d0:	300b883a 	mov	r5,r6
  8429d4:	ddc00715 	stw	r23,28(sp)
  8429d8:	dd400515 	stw	r21,20(sp)
  8429dc:	dc400115 	stw	r17,4(sp)
  8429e0:	dfc00815 	stw	ra,32(sp)
  8429e4:	dd800615 	stw	r22,24(sp)
  8429e8:	dc800215 	stw	r18,8(sp)
  8429ec:	dc000015 	stw	r16,0(sp)
  8429f0:	302f883a 	mov	r23,r6
  8429f4:	382b883a 	mov	r21,r7
  8429f8:	08305040 	call	830504 <__mulsi3>
  8429fc:	dc400917 	ldw	r17,36(sp)
  842a00:	10002726 	beq	r2,zero,842aa0 <_sfread_r+0xe8>
  842a04:	102d883a 	mov	r22,r2
  842a08:	1025883a 	mov	r18,r2
  842a0c:	00000b06 	br	842a3c <_sfread_r+0x84>
  842a10:	08341500 	call	834150 <memcpy>
  842a14:	88800017 	ldw	r2,0(r17)
  842a18:	9c27883a 	add	r19,r19,r16
  842a1c:	9425c83a 	sub	r18,r18,r16
  842a20:	1421883a 	add	r16,r2,r16
  842a24:	88000115 	stw	zero,4(r17)
  842a28:	880b883a 	mov	r5,r17
  842a2c:	8c000015 	stw	r16,0(r17)
  842a30:	a009883a 	mov	r4,r20
  842a34:	08429480 	call	842948 <__ssrefill_r>
  842a38:	10001b1e 	bne	r2,zero,842aa8 <_sfread_r+0xf0>
  842a3c:	8c000117 	ldw	r16,4(r17)
  842a40:	9809883a 	mov	r4,r19
  842a44:	89400017 	ldw	r5,0(r17)
  842a48:	800d883a 	mov	r6,r16
  842a4c:	84bff036 	bltu	r16,r18,842a10 <__alt_mem_epcs_flash_controller_0+0xff839a10>
  842a50:	900d883a 	mov	r6,r18
  842a54:	08341500 	call	834150 <memcpy>
  842a58:	88c00117 	ldw	r3,4(r17)
  842a5c:	89000017 	ldw	r4,0(r17)
  842a60:	a805883a 	mov	r2,r21
  842a64:	1c87c83a 	sub	r3,r3,r18
  842a68:	24a5883a 	add	r18,r4,r18
  842a6c:	88c00115 	stw	r3,4(r17)
  842a70:	8c800015 	stw	r18,0(r17)
  842a74:	dfc00817 	ldw	ra,32(sp)
  842a78:	ddc00717 	ldw	r23,28(sp)
  842a7c:	dd800617 	ldw	r22,24(sp)
  842a80:	dd400517 	ldw	r21,20(sp)
  842a84:	dd000417 	ldw	r20,16(sp)
  842a88:	dcc00317 	ldw	r19,12(sp)
  842a8c:	dc800217 	ldw	r18,8(sp)
  842a90:	dc400117 	ldw	r17,4(sp)
  842a94:	dc000017 	ldw	r16,0(sp)
  842a98:	dec00904 	addi	sp,sp,36
  842a9c:	f800283a 	ret
  842aa0:	0005883a 	mov	r2,zero
  842aa4:	003ff306 	br	842a74 <__alt_mem_epcs_flash_controller_0+0xff839a74>
  842aa8:	b80b883a 	mov	r5,r23
  842aac:	b489c83a 	sub	r4,r22,r18
  842ab0:	08304480 	call	830448 <__udivsi3>
  842ab4:	003fef06 	br	842a74 <__alt_mem_epcs_flash_controller_0+0xff839a74>

00842ab8 <__ssvfiscanf_r>:
  842ab8:	2880030b 	ldhu	r2,12(r5)
  842abc:	deff9b04 	addi	sp,sp,-404
  842ac0:	dd005f15 	stw	r20,380(sp)
  842ac4:	dc405c15 	stw	r17,368(sp)
  842ac8:	dfc06415 	stw	ra,400(sp)
  842acc:	df006315 	stw	fp,396(sp)
  842ad0:	ddc06215 	stw	r23,392(sp)
  842ad4:	dd806115 	stw	r22,388(sp)
  842ad8:	dd406015 	stw	r21,384(sp)
  842adc:	dcc05e15 	stw	r19,376(sp)
  842ae0:	dc805d15 	stw	r18,372(sp)
  842ae4:	dc005b15 	stw	r16,364(sp)
  842ae8:	10c8000c 	andi	r3,r2,8192
  842aec:	d9c04f15 	stw	r7,316(sp)
  842af0:	2829883a 	mov	r20,r5
  842af4:	2023883a 	mov	r17,r4
  842af8:	1800061e 	bne	r3,zero,842b14 <__ssvfiscanf_r+0x5c>
  842afc:	29001917 	ldw	r4,100(r5)
  842b00:	00f7ffc4 	movi	r3,-8193
  842b04:	10880014 	ori	r2,r2,8192
  842b08:	20c6703a 	and	r3,r4,r3
  842b0c:	2880030d 	sth	r2,12(r5)
  842b10:	28c01915 	stw	r3,100(r5)
  842b14:	30800003 	ldbu	r2,0(r6)
  842b18:	dac04104 	addi	r11,sp,260
  842b1c:	0039883a 	mov	fp,zero
  842b20:	048021b4 	movhi	r18,134
  842b24:	d8005215 	stw	zero,328(sp)
  842b28:	d8005015 	stw	zero,320(sp)
  842b2c:	d8005115 	stw	zero,324(sp)
  842b30:	dac04e15 	stw	r11,312(sp)
  842b34:	d8804d15 	stw	r2,308(sp)
  842b38:	e027883a 	mov	r19,fp
  842b3c:	94adb904 	addi	r18,r18,-18716
  842b40:	a039883a 	mov	fp,r20
  842b44:	35000044 	addi	r20,r6,1
  842b48:	10001e26 	beq	r2,zero,842bc4 <__ssvfiscanf_r+0x10c>
  842b4c:	95800017 	ldw	r22,0(r18)
  842b50:	b087883a 	add	r3,r22,r2
  842b54:	18c00043 	ldbu	r3,1(r3)
  842b58:	18c0020c 	andi	r3,r3,8
  842b5c:	18001b26 	beq	r3,zero,842bcc <__ssvfiscanf_r+0x114>
  842b60:	e0800117 	ldw	r2,4(fp)
  842b64:	00800e0e 	bge	zero,r2,842ba0 <__ssvfiscanf_r+0xe8>
  842b68:	e0c00017 	ldw	r3,0(fp)
  842b6c:	91000017 	ldw	r4,0(r18)
  842b70:	18800003 	ldbu	r2,0(r3)
  842b74:	2085883a 	add	r2,r4,r2
  842b78:	10800043 	ldbu	r2,1(r2)
  842b7c:	1080020c 	andi	r2,r2,8
  842b80:	10000b26 	beq	r2,zero,842bb0 <__ssvfiscanf_r+0xf8>
  842b84:	e0800117 	ldw	r2,4(fp)
  842b88:	18c00044 	addi	r3,r3,1
  842b8c:	e0c00015 	stw	r3,0(fp)
  842b90:	10bfffc4 	addi	r2,r2,-1
  842b94:	e0800115 	stw	r2,4(fp)
  842b98:	9cc00044 	addi	r19,r19,1
  842b9c:	00bff216 	blt	zero,r2,842b68 <__alt_mem_epcs_flash_controller_0+0xff839b68>
  842ba0:	e00b883a 	mov	r5,fp
  842ba4:	8809883a 	mov	r4,r17
  842ba8:	08429480 	call	842948 <__ssrefill_r>
  842bac:	103fee26 	beq	r2,zero,842b68 <__alt_mem_epcs_flash_controller_0+0xff839b68>
  842bb0:	a00d883a 	mov	r6,r20
  842bb4:	30800003 	ldbu	r2,0(r6)
  842bb8:	35000044 	addi	r20,r6,1
  842bbc:	d8804d15 	stw	r2,308(sp)
  842bc0:	103fe21e 	bne	r2,zero,842b4c <__alt_mem_epcs_flash_controller_0+0xff839b4c>
  842bc4:	d8805117 	ldw	r2,324(sp)
  842bc8:	00009a06 	br	842e34 <__ssvfiscanf_r+0x37c>
  842bcc:	00c00944 	movi	r3,37
  842bd0:	10c0891e 	bne	r2,r3,842df8 <__ssvfiscanf_r+0x340>
  842bd4:	31800043 	ldbu	r6,1(r6)
  842bd8:	002f883a 	mov	r23,zero
  842bdc:	b809883a 	mov	r4,r23
  842be0:	0021883a 	mov	r16,zero
  842be4:	01c01e04 	movi	r7,120
  842be8:	00c01b04 	movi	r3,108
  842bec:	302f883a 	mov	r23,r6
  842bf0:	a5400044 	addi	r21,r20,1
  842bf4:	3dc0e436 	bltu	r7,r23,842f88 <__ssvfiscanf_r+0x4d0>
  842bf8:	b80490ba 	slli	r2,r23,2
  842bfc:	01402134 	movhi	r5,132
  842c00:	294b0404 	addi	r5,r5,11280
  842c04:	1145883a 	add	r2,r2,r5
  842c08:	10800017 	ldw	r2,0(r2)
  842c0c:	1000683a 	jmp	r2
  842c10:	00842e30 	cmpltui	r2,zero,4280
  842c14:	00842f88 	cmpgei	r2,zero,4286
  842c18:	00842f88 	cmpgei	r2,zero,4286
  842c1c:	00842f88 	cmpgei	r2,zero,4286
  842c20:	00842f88 	cmpgei	r2,zero,4286
  842c24:	00842f88 	cmpgei	r2,zero,4286
  842c28:	00842f88 	cmpgei	r2,zero,4286
  842c2c:	00842f88 	cmpgei	r2,zero,4286
  842c30:	00842f88 	cmpgei	r2,zero,4286
  842c34:	00842f88 	cmpgei	r2,zero,4286
  842c38:	00842f88 	cmpgei	r2,zero,4286
  842c3c:	00842f88 	cmpgei	r2,zero,4286
  842c40:	00842f88 	cmpgei	r2,zero,4286
  842c44:	00842f88 	cmpgei	r2,zero,4286
  842c48:	00842f88 	cmpgei	r2,zero,4286
  842c4c:	00842f88 	cmpgei	r2,zero,4286
  842c50:	00842f88 	cmpgei	r2,zero,4286
  842c54:	00842f88 	cmpgei	r2,zero,4286
  842c58:	00842f88 	cmpgei	r2,zero,4286
  842c5c:	00842f88 	cmpgei	r2,zero,4286
  842c60:	00842f88 	cmpgei	r2,zero,4286
  842c64:	00842f88 	cmpgei	r2,zero,4286
  842c68:	00842f88 	cmpgei	r2,zero,4286
  842c6c:	00842f88 	cmpgei	r2,zero,4286
  842c70:	00842f88 	cmpgei	r2,zero,4286
  842c74:	00842f88 	cmpgei	r2,zero,4286
  842c78:	00842f88 	cmpgei	r2,zero,4286
  842c7c:	00842f88 	cmpgei	r2,zero,4286
  842c80:	00842f88 	cmpgei	r2,zero,4286
  842c84:	00842f88 	cmpgei	r2,zero,4286
  842c88:	00842f88 	cmpgei	r2,zero,4286
  842c8c:	00842f88 	cmpgei	r2,zero,4286
  842c90:	00842f88 	cmpgei	r2,zero,4286
  842c94:	00842f88 	cmpgei	r2,zero,4286
  842c98:	00842f88 	cmpgei	r2,zero,4286
  842c9c:	00842f88 	cmpgei	r2,zero,4286
  842ca0:	00842f88 	cmpgei	r2,zero,4286
  842ca4:	00842df4 	movhi	r2,4279
  842ca8:	00842f88 	cmpgei	r2,zero,4286
  842cac:	00842f88 	cmpgei	r2,zero,4286
  842cb0:	00842f88 	cmpgei	r2,zero,4286
  842cb4:	00842f88 	cmpgei	r2,zero,4286
  842cb8:	008431cc 	andi	r2,zero,4295
  842cbc:	00842f88 	cmpgei	r2,zero,4286
  842cc0:	00842f88 	cmpgei	r2,zero,4286
  842cc4:	00842f88 	cmpgei	r2,zero,4286
  842cc8:	00842f88 	cmpgei	r2,zero,4286
  842ccc:	00842f88 	cmpgei	r2,zero,4286
  842cd0:	00843138 	rdprs	r2,zero,4292
  842cd4:	00843138 	rdprs	r2,zero,4292
  842cd8:	00843138 	rdprs	r2,zero,4292
  842cdc:	00843138 	rdprs	r2,zero,4292
  842ce0:	00843138 	rdprs	r2,zero,4292
  842ce4:	00843138 	rdprs	r2,zero,4292
  842ce8:	00843138 	rdprs	r2,zero,4292
  842cec:	00843138 	rdprs	r2,zero,4292
  842cf0:	00843138 	rdprs	r2,zero,4292
  842cf4:	00843138 	rdprs	r2,zero,4292
  842cf8:	00842f88 	cmpgei	r2,zero,4286
  842cfc:	00842f88 	cmpgei	r2,zero,4286
  842d00:	00842f88 	cmpgei	r2,zero,4286
  842d04:	00842f88 	cmpgei	r2,zero,4286
  842d08:	00842f88 	cmpgei	r2,zero,4286
  842d0c:	00842f88 	cmpgei	r2,zero,4286
  842d10:	00842f88 	cmpgei	r2,zero,4286
  842d14:	00842f88 	cmpgei	r2,zero,4286
  842d18:	00842f88 	cmpgei	r2,zero,4286
  842d1c:	00842f88 	cmpgei	r2,zero,4286
  842d20:	0084310c 	andi	r2,zero,4292
  842d24:	00842f88 	cmpgei	r2,zero,4286
  842d28:	00842f88 	cmpgei	r2,zero,4286
  842d2c:	00842f88 	cmpgei	r2,zero,4286
  842d30:	00842f88 	cmpgei	r2,zero,4286
  842d34:	00842f88 	cmpgei	r2,zero,4286
  842d38:	00842f88 	cmpgei	r2,zero,4286
  842d3c:	00842f88 	cmpgei	r2,zero,4286
  842d40:	00843190 	cmplti	r2,zero,4294
  842d44:	00842f88 	cmpgei	r2,zero,4286
  842d48:	00842f88 	cmpgei	r2,zero,4286
  842d4c:	00843168 	cmpgeui	r2,zero,4293
  842d50:	00842f88 	cmpgei	r2,zero,4286
  842d54:	00842f88 	cmpgei	r2,zero,4286
  842d58:	00842f88 	cmpgei	r2,zero,4286
  842d5c:	00842f88 	cmpgei	r2,zero,4286
  842d60:	00842f88 	cmpgei	r2,zero,4286
  842d64:	00842f88 	cmpgei	r2,zero,4286
  842d68:	00842f88 	cmpgei	r2,zero,4286
  842d6c:	00842f88 	cmpgei	r2,zero,4286
  842d70:	008431a4 	muli	r2,zero,4294
  842d74:	00842f88 	cmpgei	r2,zero,4286
  842d78:	00842f88 	cmpgei	r2,zero,4286
  842d7c:	00843080 	call	84308 <OSCtxSw_SWITCH_PC+0x842c8>
  842d80:	00842f88 	cmpgei	r2,zero,4286
  842d84:	00842f88 	cmpgei	r2,zero,4286
  842d88:	00842f88 	cmpgei	r2,zero,4286
  842d8c:	00842f88 	cmpgei	r2,zero,4286
  842d90:	00842f88 	cmpgei	r2,zero,4286
  842d94:	00842f88 	cmpgei	r2,zero,4286
  842d98:	00842f88 	cmpgei	r2,zero,4286
  842d9c:	00843004 	movi	r2,4288
  842da0:	00842fdc 	xori	r2,zero,4287
  842da4:	00842f88 	cmpgei	r2,zero,4286
  842da8:	00842f88 	cmpgei	r2,zero,4286
  842dac:	00842f88 	cmpgei	r2,zero,4286
  842db0:	00842fc8 	cmpgei	r2,zero,4287
  842db4:	008431e0 	cmpeqi	r2,zero,4295
  842db8:	00842f88 	cmpgei	r2,zero,4286
  842dbc:	00842f88 	cmpgei	r2,zero,4286
  842dc0:	00842f70 	cmpltui	r2,zero,4285
  842dc4:	00842f88 	cmpgei	r2,zero,4286
  842dc8:	00842f44 	movi	r2,4285
  842dcc:	00842f1c 	xori	r2,zero,4284
  842dd0:	00842ef0 	cmpltui	r2,zero,4283
  842dd4:	00842f88 	cmpgei	r2,zero,4286
  842dd8:	00842f88 	cmpgei	r2,zero,4286
  842ddc:	00842edc 	xori	r2,zero,4283
  842de0:	00842f88 	cmpgei	r2,zero,4286
  842de4:	00842e64 	muli	r2,zero,4281
  842de8:	00842f88 	cmpgei	r2,zero,4286
  842dec:	00842f88 	cmpgei	r2,zero,4286
  842df0:	008431a4 	muli	r2,zero,4294
  842df4:	a829883a 	mov	r20,r21
  842df8:	e0800117 	ldw	r2,4(fp)
  842dfc:	0081e40e 	bge	zero,r2,843590 <__ssvfiscanf_r+0xad8>
  842e00:	e0800017 	ldw	r2,0(fp)
  842e04:	a0ffffc3 	ldbu	r3,-1(r20)
  842e08:	11000003 	ldbu	r4,0(r2)
  842e0c:	20ff6d1e 	bne	r4,r3,842bc4 <__alt_mem_epcs_flash_controller_0+0xff839bc4>
  842e10:	e0c00117 	ldw	r3,4(fp)
  842e14:	10800044 	addi	r2,r2,1
  842e18:	e0800015 	stw	r2,0(fp)
  842e1c:	18bfffc4 	addi	r2,r3,-1
  842e20:	e0800115 	stw	r2,4(fp)
  842e24:	9cc00044 	addi	r19,r19,1
  842e28:	a00d883a 	mov	r6,r20
  842e2c:	003f6106 	br	842bb4 <__alt_mem_epcs_flash_controller_0+0xff839bb4>
  842e30:	00bfffc4 	movi	r2,-1
  842e34:	dfc06417 	ldw	ra,400(sp)
  842e38:	df006317 	ldw	fp,396(sp)
  842e3c:	ddc06217 	ldw	r23,392(sp)
  842e40:	dd806117 	ldw	r22,388(sp)
  842e44:	dd406017 	ldw	r21,384(sp)
  842e48:	dd005f17 	ldw	r20,380(sp)
  842e4c:	dcc05e17 	ldw	r19,376(sp)
  842e50:	dc805d17 	ldw	r18,372(sp)
  842e54:	dc405c17 	ldw	r17,368(sp)
  842e58:	dc005b17 	ldw	r16,364(sp)
  842e5c:	dec06504 	addi	sp,sp,404
  842e60:	f800283a 	ret
  842e64:	e0800117 	ldw	r2,4(fp)
  842e68:	202f883a 	mov	r23,r4
  842e6c:	0081f20e 	bge	zero,r2,843638 <__ssvfiscanf_r+0xb80>
  842e70:	00802134 	movhi	r2,132
  842e74:	10834704 	addi	r2,r2,3356
  842e78:	02c00284 	movi	r11,10
  842e7c:	d8805215 	stw	r2,328(sp)
  842e80:	dac05015 	stw	r11,320(sp)
  842e84:	050000c4 	movi	r20,3
  842e88:	e0800017 	ldw	r2,0(fp)
  842e8c:	00000206 	br	842e98 <__ssvfiscanf_r+0x3e0>
  842e90:	10800044 	addi	r2,r2,1
  842e94:	e0800015 	stw	r2,0(fp)
  842e98:	11000003 	ldbu	r4,0(r2)
  842e9c:	20c03fcc 	andi	r3,r4,255
  842ea0:	b0c7883a 	add	r3,r22,r3
  842ea4:	18c00043 	ldbu	r3,1(r3)
  842ea8:	1940020c 	andi	r5,r3,8
  842eac:	2801ee26 	beq	r5,zero,843668 <__ssvfiscanf_r+0xbb0>
  842eb0:	e0c00117 	ldw	r3,4(fp)
  842eb4:	9cc00044 	addi	r19,r19,1
  842eb8:	18ffffc4 	addi	r3,r3,-1
  842ebc:	e0c00115 	stw	r3,4(fp)
  842ec0:	00fff316 	blt	zero,r3,842e90 <__alt_mem_epcs_flash_controller_0+0xff839e90>
  842ec4:	e00b883a 	mov	r5,fp
  842ec8:	8809883a 	mov	r4,r17
  842ecc:	08429480 	call	842948 <__ssrefill_r>
  842ed0:	10016a1e 	bne	r2,zero,84347c <__ssvfiscanf_r+0x9c4>
  842ed4:	95800017 	ldw	r22,0(r18)
  842ed8:	003feb06 	br	842e88 <__alt_mem_epcs_flash_controller_0+0xff839e88>
  842edc:	e0800117 	ldw	r2,4(fp)
  842ee0:	202f883a 	mov	r23,r4
  842ee4:	0081c80e 	bge	zero,r2,843608 <__ssvfiscanf_r+0xb50>
  842ee8:	05000084 	movi	r20,2
  842eec:	003fe606 	br	842e88 <__alt_mem_epcs_flash_controller_0+0xff839e88>
  842ef0:	e0800117 	ldw	r2,4(fp)
  842ef4:	202f883a 	mov	r23,r4
  842ef8:	84008814 	ori	r16,r16,544
  842efc:	0080ad0e 	bge	zero,r2,8431b4 <__ssvfiscanf_r+0x6fc>
  842f00:	00802134 	movhi	r2,132
  842f04:	10834704 	addi	r2,r2,3356
  842f08:	02c00404 	movi	r11,16
  842f0c:	d8805215 	stw	r2,328(sp)
  842f10:	dac05015 	stw	r11,320(sp)
  842f14:	050000c4 	movi	r20,3
  842f18:	003fdb06 	br	842e88 <__alt_mem_epcs_flash_controller_0+0xff839e88>
  842f1c:	e0800117 	ldw	r2,4(fp)
  842f20:	202f883a 	mov	r23,r4
  842f24:	0080940e 	bge	zero,r2,843178 <__ssvfiscanf_r+0x6c0>
  842f28:	00802134 	movhi	r2,132
  842f2c:	10834704 	addi	r2,r2,3356
  842f30:	02c00204 	movi	r11,8
  842f34:	d8805215 	stw	r2,328(sp)
  842f38:	dac05015 	stw	r11,320(sp)
  842f3c:	050000c4 	movi	r20,3
  842f40:	003fd106 	br	842e88 <__alt_mem_epcs_flash_controller_0+0xff839e88>
  842f44:	8080040c 	andi	r2,r16,16
  842f48:	1000e41e 	bne	r2,zero,8432dc <__ssvfiscanf_r+0x824>
  842f4c:	8080010c 	andi	r2,r16,4
  842f50:	10019926 	beq	r2,zero,8435b8 <__ssvfiscanf_r+0xb00>
  842f54:	dac04f17 	ldw	r11,316(sp)
  842f58:	a829883a 	mov	r20,r21
  842f5c:	58800017 	ldw	r2,0(r11)
  842f60:	5ac00104 	addi	r11,r11,4
  842f64:	dac04f15 	stw	r11,316(sp)
  842f68:	14c0000d 	sth	r19,0(r2)
  842f6c:	003f1006 	br	842bb0 <__alt_mem_epcs_flash_controller_0+0xff839bb0>
  842f70:	a5c00043 	ldbu	r23,1(r20)
  842f74:	b8c18b26 	beq	r23,r3,8435a4 <__ssvfiscanf_r+0xaec>
  842f78:	a829883a 	mov	r20,r21
  842f7c:	84000054 	ori	r16,r16,1
  842f80:	a5400044 	addi	r21,r20,1
  842f84:	3dff1c2e 	bgeu	r7,r23,842bf8 <__alt_mem_epcs_flash_controller_0+0xff839bf8>
  842f88:	b80d883a 	mov	r6,r23
  842f8c:	b185883a 	add	r2,r22,r6
  842f90:	10800043 	ldbu	r2,1(r2)
  842f94:	00c00044 	movi	r3,1
  842f98:	202f883a 	mov	r23,r4
  842f9c:	108000cc 	andi	r2,r2,3
  842fa0:	10c17226 	beq	r2,r3,84356c <__ssvfiscanf_r+0xab4>
  842fa4:	e0800117 	ldw	r2,4(fp)
  842fa8:	0081730e 	bge	zero,r2,843578 <__ssvfiscanf_r+0xac0>
  842fac:	00802134 	movhi	r2,132
  842fb0:	1081e904 	addi	r2,r2,1956
  842fb4:	02c00284 	movi	r11,10
  842fb8:	d8805215 	stw	r2,328(sp)
  842fbc:	dac05015 	stw	r11,320(sp)
  842fc0:	050000c4 	movi	r20,3
  842fc4:	003fb006 	br	842e88 <__alt_mem_epcs_flash_controller_0+0xff839e88>
  842fc8:	a1400043 	ldbu	r5,1(r20)
  842fcc:	84000114 	ori	r16,r16,4
  842fd0:	a829883a 	mov	r20,r21
  842fd4:	2dc03fcc 	andi	r23,r5,255
  842fd8:	003f0506 	br	842bf0 <__alt_mem_epcs_flash_controller_0+0xff839bf0>
  842fdc:	e0800117 	ldw	r2,4(fp)
  842fe0:	202f883a 	mov	r23,r4
  842fe4:	0081640e 	bge	zero,r2,843578 <__ssvfiscanf_r+0xac0>
  842fe8:	02c02134 	movhi	r11,132
  842fec:	5ac1e904 	addi	r11,r11,1956
  842ff0:	dac05215 	stw	r11,328(sp)
  842ff4:	02c00284 	movi	r11,10
  842ff8:	dac05015 	stw	r11,320(sp)
  842ffc:	050000c4 	movi	r20,3
  843000:	003fa106 	br	842e88 <__alt_mem_epcs_flash_controller_0+0xff839e88>
  843004:	e0800117 	ldw	r2,4(fp)
  843008:	202f883a 	mov	r23,r4
  84300c:	00812c0e 	bge	zero,r2,8434c0 <__ssvfiscanf_r+0xa08>
  843010:	b800011e 	bne	r23,zero,843018 <__ssvfiscanf_r+0x560>
  843014:	05c00044 	movi	r23,1
  843018:	8080004c 	andi	r2,r16,1
  84301c:	1000791e 	bne	r2,zero,843204 <__ssvfiscanf_r+0x74c>
  843020:	8400040c 	andi	r16,r16,16
  843024:	80013f26 	beq	r16,zero,843524 <__ssvfiscanf_r+0xa6c>
  843028:	0021883a 	mov	r16,zero
  84302c:	00000806 	br	843050 <__ssvfiscanf_r+0x598>
  843030:	1887883a 	add	r3,r3,r2
  843034:	e00b883a 	mov	r5,fp
  843038:	8809883a 	mov	r4,r17
  84303c:	e0c00015 	stw	r3,0(fp)
  843040:	80a1883a 	add	r16,r16,r2
  843044:	b8afc83a 	sub	r23,r23,r2
  843048:	08429480 	call	842948 <__ssrefill_r>
  84304c:	1001331e 	bne	r2,zero,84351c <__ssvfiscanf_r+0xa64>
  843050:	e0800117 	ldw	r2,4(fp)
  843054:	e0c00017 	ldw	r3,0(fp)
  843058:	15fff516 	blt	r2,r23,843030 <__alt_mem_epcs_flash_controller_0+0xff83a030>
  84305c:	15c5c83a 	sub	r2,r2,r23
  843060:	1dd5883a 	add	r10,r3,r23
  843064:	85e1883a 	add	r16,r16,r23
  843068:	e0800115 	stw	r2,4(fp)
  84306c:	e2800015 	stw	r10,0(fp)
  843070:	a829883a 	mov	r20,r21
  843074:	9c27883a 	add	r19,r19,r16
  843078:	a00d883a 	mov	r6,r20
  84307c:	003ecd06 	br	842bb4 <__alt_mem_epcs_flash_controller_0+0xff839bb4>
  843080:	202f883a 	mov	r23,r4
  843084:	a80b883a 	mov	r5,r21
  843088:	d9000104 	addi	r4,sp,4
  84308c:	083ee900 	call	83ee90 <__sccl>
  843090:	1029883a 	mov	r20,r2
  843094:	e0800117 	ldw	r2,4(fp)
  843098:	0081620e 	bge	zero,r2,843624 <__ssvfiscanf_r+0xb6c>
  84309c:	e1000017 	ldw	r4,0(fp)
  8430a0:	20800003 	ldbu	r2,0(r4)
  8430a4:	b8009026 	beq	r23,zero,8432e8 <__ssvfiscanf_r+0x830>
  8430a8:	8400040c 	andi	r16,r16,16
  8430ac:	80009126 	beq	r16,zero,8432f4 <__ssvfiscanf_r+0x83c>
  8430b0:	b821883a 	mov	r16,r23
  8430b4:	002b883a 	mov	r21,zero
  8430b8:	00000106 	br	8430c0 <__ssvfiscanf_r+0x608>
  8430bc:	20800003 	ldbu	r2,0(r4)
  8430c0:	10803fcc 	andi	r2,r2,255
  8430c4:	d8c00104 	addi	r3,sp,4
  8430c8:	1885883a 	add	r2,r3,r2
  8430cc:	10800007 	ldb	r2,0(r2)
  8430d0:	10011026 	beq	r2,zero,843514 <__ssvfiscanf_r+0xa5c>
  8430d4:	e0800117 	ldw	r2,4(fp)
  8430d8:	21000044 	addi	r4,r4,1
  8430dc:	ad400044 	addi	r21,r21,1
  8430e0:	10bfffc4 	addi	r2,r2,-1
  8430e4:	e0800115 	stw	r2,4(fp)
  8430e8:	e1000015 	stw	r4,0(fp)
  8430ec:	adc0eb26 	beq	r21,r23,84349c <__ssvfiscanf_r+0x9e4>
  8430f0:	00bff216 	blt	zero,r2,8430bc <__alt_mem_epcs_flash_controller_0+0xff83a0bc>
  8430f4:	e00b883a 	mov	r5,fp
  8430f8:	8809883a 	mov	r4,r17
  8430fc:	08429480 	call	842948 <__ssrefill_r>
  843100:	1000e51e 	bne	r2,zero,843498 <__ssvfiscanf_r+0x9e0>
  843104:	e1000017 	ldw	r4,0(fp)
  843108:	003fec06 	br	8430bc <__alt_mem_epcs_flash_controller_0+0xff83a0bc>
  84310c:	e0800117 	ldw	r2,4(fp)
  843110:	202f883a 	mov	r23,r4
  843114:	84000054 	ori	r16,r16,1
  843118:	0081170e 	bge	zero,r2,843578 <__ssvfiscanf_r+0xac0>
  84311c:	00c02134 	movhi	r3,132
  843120:	18c1e904 	addi	r3,r3,1956
  843124:	02c00284 	movi	r11,10
  843128:	d8c05215 	stw	r3,328(sp)
  84312c:	dac05015 	stw	r11,320(sp)
  843130:	050000c4 	movi	r20,3
  843134:	003f5406 	br	842e88 <__alt_mem_epcs_flash_controller_0+0xff839e88>
  843138:	01400284 	movi	r5,10
  84313c:	d8c05a15 	stw	r3,360(sp)
  843140:	d9c05915 	stw	r7,356(sp)
  843144:	08305040 	call	830504 <__mulsi3>
  843148:	a1400043 	ldbu	r5,1(r20)
  84314c:	15c5883a 	add	r2,r2,r23
  843150:	113ff404 	addi	r4,r2,-48
  843154:	a829883a 	mov	r20,r21
  843158:	2dc03fcc 	andi	r23,r5,255
  84315c:	d8c05a17 	ldw	r3,360(sp)
  843160:	d9c05917 	ldw	r7,356(sp)
  843164:	003ea206 	br	842bf0 <__alt_mem_epcs_flash_controller_0+0xff839bf0>
  843168:	e0800117 	ldw	r2,4(fp)
  84316c:	202f883a 	mov	r23,r4
  843170:	84000054 	ori	r16,r16,1
  843174:	00bf6c16 	blt	zero,r2,842f28 <__alt_mem_epcs_flash_controller_0+0xff839f28>
  843178:	e00b883a 	mov	r5,fp
  84317c:	8809883a 	mov	r4,r17
  843180:	08429480 	call	842948 <__ssrefill_r>
  843184:	1000bd1e 	bne	r2,zero,84347c <__ssvfiscanf_r+0x9c4>
  843188:	95800017 	ldw	r22,0(r18)
  84318c:	003f6606 	br	842f28 <__alt_mem_epcs_flash_controller_0+0xff839f28>
  843190:	a1400043 	ldbu	r5,1(r20)
  843194:	84000094 	ori	r16,r16,2
  843198:	a829883a 	mov	r20,r21
  84319c:	2dc03fcc 	andi	r23,r5,255
  8431a0:	003e9306 	br	842bf0 <__alt_mem_epcs_flash_controller_0+0xff839bf0>
  8431a4:	e0800117 	ldw	r2,4(fp)
  8431a8:	202f883a 	mov	r23,r4
  8431ac:	84008014 	ori	r16,r16,512
  8431b0:	00bf5316 	blt	zero,r2,842f00 <__alt_mem_epcs_flash_controller_0+0xff839f00>
  8431b4:	e00b883a 	mov	r5,fp
  8431b8:	8809883a 	mov	r4,r17
  8431bc:	08429480 	call	842948 <__ssrefill_r>
  8431c0:	1000ae1e 	bne	r2,zero,84347c <__ssvfiscanf_r+0x9c4>
  8431c4:	95800017 	ldw	r22,0(r18)
  8431c8:	003f4d06 	br	842f00 <__alt_mem_epcs_flash_controller_0+0xff839f00>
  8431cc:	a1400043 	ldbu	r5,1(r20)
  8431d0:	84000414 	ori	r16,r16,16
  8431d4:	a829883a 	mov	r20,r21
  8431d8:	2dc03fcc 	andi	r23,r5,255
  8431dc:	003e8406 	br	842bf0 <__alt_mem_epcs_flash_controller_0+0xff839bf0>
  8431e0:	e0800117 	ldw	r2,4(fp)
  8431e4:	202f883a 	mov	r23,r4
  8431e8:	0081190e 	bge	zero,r2,843650 <__ssvfiscanf_r+0xb98>
  8431ec:	00802134 	movhi	r2,132
  8431f0:	1081e904 	addi	r2,r2,1956
  8431f4:	d8805215 	stw	r2,328(sp)
  8431f8:	d8005015 	stw	zero,320(sp)
  8431fc:	050000c4 	movi	r20,3
  843200:	003f2106 	br	842e88 <__alt_mem_epcs_flash_controller_0+0xff839e88>
  843204:	d8c04b04 	addi	r3,sp,300
  843208:	8400040c 	andi	r16,r16,16
  84320c:	01800204 	movi	r6,8
  843210:	000b883a 	mov	r5,zero
  843214:	1809883a 	mov	r4,r3
  843218:	dc005415 	stw	r16,336(sp)
  84321c:	d8c05315 	stw	r3,332(sp)
  843220:	08342980 	call	834298 <memset>
  843224:	dc005417 	ldw	r16,336(sp)
  843228:	8000a026 	beq	r16,zero,8434ac <__ssvfiscanf_r+0x9f4>
  84322c:	002d883a 	mov	r22,zero
  843230:	0021883a 	mov	r16,zero
  843234:	083d2880 	call	83d288 <__locale_mb_cur_max>
  843238:	14009026 	beq	r2,r16,84347c <__ssvfiscanf_r+0x9c4>
  84323c:	e0800017 	ldw	r2,0(fp)
  843240:	e0c00117 	ldw	r3,4(fp)
  843244:	dac05317 	ldw	r11,332(sp)
  843248:	12000003 	ldbu	r8,0(r2)
  84324c:	18ffffc4 	addi	r3,r3,-1
  843250:	10800044 	addi	r2,r2,1
  843254:	d9004104 	addi	r4,sp,260
  843258:	e0c00115 	stw	r3,4(fp)
  84325c:	e0800015 	stw	r2,0(fp)
  843260:	85000044 	addi	r20,r16,1
  843264:	dac00015 	stw	r11,0(sp)
  843268:	2421883a 	add	r16,r4,r16
  84326c:	200d883a 	mov	r6,r4
  843270:	a00f883a 	mov	r7,r20
  843274:	b00b883a 	mov	r5,r22
  843278:	8809883a 	mov	r4,r17
  84327c:	82000005 	stb	r8,0(r16)
  843280:	083d33c0 	call	83d33c <_mbrtowc_r>
  843284:	00ffffc4 	movi	r3,-1
  843288:	10c07c26 	beq	r2,r3,84347c <__ssvfiscanf_r+0x9c4>
  84328c:	1000911e 	bne	r2,zero,8434d4 <__ssvfiscanf_r+0xa1c>
  843290:	dac05417 	ldw	r11,336(sp)
  843294:	5800951e 	bne	r11,zero,8434ec <__ssvfiscanf_r+0xa34>
  843298:	b0000015 	stw	zero,0(r22)
  84329c:	9d27883a 	add	r19,r19,r20
  8432a0:	b8ef883a 	add	r23,r23,r3
  8432a4:	b5800104 	addi	r22,r22,4
  8432a8:	e0800117 	ldw	r2,4(fp)
  8432ac:	0021883a 	mov	r16,zero
  8432b0:	00807c16 	blt	zero,r2,8434a4 <__ssvfiscanf_r+0x9ec>
  8432b4:	e00b883a 	mov	r5,fp
  8432b8:	8809883a 	mov	r4,r17
  8432bc:	08429480 	call	842948 <__ssrefill_r>
  8432c0:	10007826 	beq	r2,zero,8434a4 <__ssvfiscanf_r+0x9ec>
  8432c4:	80006d1e 	bne	r16,zero,84347c <__ssvfiscanf_r+0x9c4>
  8432c8:	d8c05417 	ldw	r3,336(sp)
  8432cc:	1800031e 	bne	r3,zero,8432dc <__ssvfiscanf_r+0x824>
  8432d0:	dac05117 	ldw	r11,324(sp)
  8432d4:	5ac00044 	addi	r11,r11,1
  8432d8:	dac05115 	stw	r11,324(sp)
  8432dc:	a829883a 	mov	r20,r21
  8432e0:	a00d883a 	mov	r6,r20
  8432e4:	003e3306 	br	842bb4 <__alt_mem_epcs_flash_controller_0+0xff839bb4>
  8432e8:	8400040c 	andi	r16,r16,16
  8432ec:	05ffffc4 	movi	r23,-1
  8432f0:	803f6f1e 	bne	r16,zero,8430b0 <__alt_mem_epcs_flash_controller_0+0xff83a0b0>
  8432f4:	dac04f17 	ldw	r11,316(sp)
  8432f8:	babfffc4 	addi	r10,r23,-1
  8432fc:	5d400017 	ldw	r21,0(r11)
  843300:	5c000104 	addi	r16,r11,4
  843304:	a807883a 	mov	r3,r21
  843308:	aaaf883a 	add	r23,r21,r10
  84330c:	00000306 	br	84331c <__ssvfiscanf_r+0x864>
  843310:	e1000017 	ldw	r4,0(fp)
  843314:	b007883a 	mov	r3,r22
  843318:	20800003 	ldbu	r2,0(r4)
  84331c:	10803fcc 	andi	r2,r2,255
  843320:	d9400104 	addi	r5,sp,4
  843324:	2885883a 	add	r2,r5,r2
  843328:	10800007 	ldb	r2,0(r2)
  84332c:	10007726 	beq	r2,zero,84350c <__ssvfiscanf_r+0xa54>
  843330:	e0800117 	ldw	r2,4(fp)
  843334:	21400044 	addi	r5,r4,1
  843338:	e1400015 	stw	r5,0(fp)
  84333c:	10bfffc4 	addi	r2,r2,-1
  843340:	e0800115 	stw	r2,4(fp)
  843344:	20800003 	ldbu	r2,0(r4)
  843348:	1d800044 	addi	r22,r3,1
  84334c:	18800005 	stb	r2,0(r3)
  843350:	1dc00726 	beq	r3,r23,843370 <__ssvfiscanf_r+0x8b8>
  843354:	e0800117 	ldw	r2,4(fp)
  843358:	00bfed16 	blt	zero,r2,843310 <__alt_mem_epcs_flash_controller_0+0xff83a310>
  84335c:	e00b883a 	mov	r5,fp
  843360:	8809883a 	mov	r4,r17
  843364:	08429480 	call	842948 <__ssrefill_r>
  843368:	103fe926 	beq	r2,zero,843310 <__alt_mem_epcs_flash_controller_0+0xff83a310>
  84336c:	ad804326 	beq	r21,r22,84347c <__ssvfiscanf_r+0x9c4>
  843370:	b56bc83a 	sub	r21,r22,r21
  843374:	a83e1326 	beq	r21,zero,842bc4 <__alt_mem_epcs_flash_controller_0+0xff839bc4>
  843378:	dac05117 	ldw	r11,324(sp)
  84337c:	b0000005 	stb	zero,0(r22)
  843380:	dc004f15 	stw	r16,316(sp)
  843384:	5ac00044 	addi	r11,r11,1
  843388:	dac05115 	stw	r11,324(sp)
  84338c:	9d67883a 	add	r19,r19,r21
  843390:	a00d883a 	mov	r6,r20
  843394:	003e0706 	br	842bb4 <__alt_mem_epcs_flash_controller_0+0xff839bb4>
  843398:	d8c04b04 	addi	r3,sp,300
  84339c:	8400040c 	andi	r16,r16,16
  8433a0:	01800204 	movi	r6,8
  8433a4:	000b883a 	mov	r5,zero
  8433a8:	1809883a 	mov	r4,r3
  8433ac:	d8c05315 	stw	r3,332(sp)
  8433b0:	08342980 	call	834298 <memset>
  8433b4:	8001eb1e 	bne	r16,zero,843b64 <__ssvfiscanf_r+0x10ac>
  8433b8:	dac04f17 	ldw	r11,316(sp)
  8433bc:	5d800017 	ldw	r22,0(r11)
  8433c0:	5ac00104 	addi	r11,r11,4
  8433c4:	dac04f15 	stw	r11,316(sp)
  8433c8:	000d883a 	mov	r6,zero
  8433cc:	3029883a 	mov	r20,r6
  8433d0:	e0800017 	ldw	r2,0(fp)
  8433d4:	90c00017 	ldw	r3,0(r18)
  8433d8:	10800003 	ldbu	r2,0(r2)
  8433dc:	1885883a 	add	r2,r3,r2
  8433e0:	10800043 	ldbu	r2,1(r2)
  8433e4:	1080020c 	andi	r2,r2,8
  8433e8:	1001ce1e 	bne	r2,zero,843b24 <__ssvfiscanf_r+0x106c>
  8433ec:	b801cd26 	beq	r23,zero,843b24 <__ssvfiscanf_r+0x106c>
  8433f0:	083d2880 	call	83d288 <__locale_mb_cur_max>
  8433f4:	a0802126 	beq	r20,r2,84347c <__ssvfiscanf_r+0x9c4>
  8433f8:	e0800017 	ldw	r2,0(fp)
  8433fc:	e1000117 	ldw	r4,4(fp)
  843400:	dac05317 	ldw	r11,332(sp)
  843404:	12000003 	ldbu	r8,0(r2)
  843408:	213fffc4 	addi	r4,r4,-1
  84340c:	10800044 	addi	r2,r2,1
  843410:	e1000115 	stw	r4,4(fp)
  843414:	d9404104 	addi	r5,sp,260
  843418:	e0800015 	stw	r2,0(fp)
  84341c:	a0c00044 	addi	r3,r20,1
  843420:	dac00015 	stw	r11,0(sp)
  843424:	2d29883a 	add	r20,r5,r20
  843428:	180f883a 	mov	r7,r3
  84342c:	280d883a 	mov	r6,r5
  843430:	8809883a 	mov	r4,r17
  843434:	a2000005 	stb	r8,0(r20)
  843438:	b00b883a 	mov	r5,r22
  84343c:	d8c05a15 	stw	r3,360(sp)
  843440:	083d33c0 	call	83d33c <_mbrtowc_r>
  843444:	013fffc4 	movi	r4,-1
  843448:	d8c05a17 	ldw	r3,360(sp)
  84344c:	11000b26 	beq	r2,r4,84347c <__ssvfiscanf_r+0x9c4>
  843450:	1001a226 	beq	r2,zero,843adc <__ssvfiscanf_r+0x1024>
  843454:	017fff84 	movi	r5,-2
  843458:	1829883a 	mov	r20,r3
  84345c:	1141e51e 	bne	r2,r5,843bf4 <__ssvfiscanf_r+0x113c>
  843460:	e0800117 	ldw	r2,4(fp)
  843464:	00bfda16 	blt	zero,r2,8433d0 <__alt_mem_epcs_flash_controller_0+0xff83a3d0>
  843468:	e00b883a 	mov	r5,fp
  84346c:	8809883a 	mov	r4,r17
  843470:	08429480 	call	842948 <__ssrefill_r>
  843474:	103fd626 	beq	r2,zero,8433d0 <__alt_mem_epcs_flash_controller_0+0xff83a3d0>
  843478:	a001aa26 	beq	r20,zero,843b24 <__ssvfiscanf_r+0x106c>
  84347c:	dac05117 	ldw	r11,324(sp)
  843480:	583e6b26 	beq	r11,zero,842e30 <__alt_mem_epcs_flash_controller_0+0xff839e30>
  843484:	e080030b 	ldhu	r2,12(fp)
  843488:	1080100c 	andi	r2,r2,64
  84348c:	103e681e 	bne	r2,zero,842e30 <__alt_mem_epcs_flash_controller_0+0xff839e30>
  843490:	5805883a 	mov	r2,r11
  843494:	003e6706 	br	842e34 <__alt_mem_epcs_flash_controller_0+0xff839e34>
  843498:	a821883a 	mov	r16,r21
  84349c:	802b883a 	mov	r21,r16
  8434a0:	003fba06 	br	84338c <__alt_mem_epcs_flash_controller_0+0xff83a38c>
  8434a4:	b83f631e 	bne	r23,zero,843234 <__alt_mem_epcs_flash_controller_0+0xff83a234>
  8434a8:	003f8706 	br	8432c8 <__alt_mem_epcs_flash_controller_0+0xff83a2c8>
  8434ac:	dac04f17 	ldw	r11,316(sp)
  8434b0:	5d800017 	ldw	r22,0(r11)
  8434b4:	5ac00104 	addi	r11,r11,4
  8434b8:	dac04f15 	stw	r11,316(sp)
  8434bc:	003f5c06 	br	843230 <__alt_mem_epcs_flash_controller_0+0xff83a230>
  8434c0:	e00b883a 	mov	r5,fp
  8434c4:	8809883a 	mov	r4,r17
  8434c8:	08429480 	call	842948 <__ssrefill_r>
  8434cc:	103ed026 	beq	r2,zero,843010 <__alt_mem_epcs_flash_controller_0+0xff83a010>
  8434d0:	003fea06 	br	84347c <__alt_mem_epcs_flash_controller_0+0xff83a47c>
  8434d4:	00ffff84 	movi	r3,-2
  8434d8:	10c0071e 	bne	r2,r3,8434f8 <__ssvfiscanf_r+0xa40>
  8434dc:	e0800117 	ldw	r2,4(fp)
  8434e0:	a021883a 	mov	r16,r20
  8434e4:	00bf5316 	blt	zero,r2,843234 <__alt_mem_epcs_flash_controller_0+0xff83a234>
  8434e8:	003f7206 	br	8432b4 <__alt_mem_epcs_flash_controller_0+0xff83a2b4>
  8434ec:	9d27883a 	add	r19,r19,r20
  8434f0:	bdffffc4 	addi	r23,r23,-1
  8434f4:	003f6c06 	br	8432a8 <__alt_mem_epcs_flash_controller_0+0xff83a2a8>
  8434f8:	dac05417 	ldw	r11,336(sp)
  8434fc:	9d27883a 	add	r19,r19,r20
  843500:	bdffffc4 	addi	r23,r23,-1
  843504:	583f6726 	beq	r11,zero,8432a4 <__alt_mem_epcs_flash_controller_0+0xff83a2a4>
  843508:	003f6706 	br	8432a8 <__alt_mem_epcs_flash_controller_0+0xff83a2a8>
  84350c:	182d883a 	mov	r22,r3
  843510:	003f9706 	br	843370 <__alt_mem_epcs_flash_controller_0+0xff83a370>
  843514:	a83f9d1e 	bne	r21,zero,84338c <__alt_mem_epcs_flash_controller_0+0xff83a38c>
  843518:	003daa06 	br	842bc4 <__alt_mem_epcs_flash_controller_0+0xff839bc4>
  84351c:	803ed41e 	bne	r16,zero,843070 <__alt_mem_epcs_flash_controller_0+0xff83a070>
  843520:	003fd606 	br	84347c <__alt_mem_epcs_flash_controller_0+0xff83a47c>
  843524:	dac04f17 	ldw	r11,316(sp)
  843528:	df000015 	stw	fp,0(sp)
  84352c:	b80f883a 	mov	r7,r23
  843530:	59400017 	ldw	r5,0(r11)
  843534:	01800044 	movi	r6,1
  843538:	8809883a 	mov	r4,r17
  84353c:	08429b80 	call	8429b8 <_sfread_r>
  843540:	dac04f17 	ldw	r11,316(sp)
  843544:	58c00104 	addi	r3,r11,4
  843548:	103fcc26 	beq	r2,zero,84347c <__alt_mem_epcs_flash_controller_0+0xff83a47c>
  84354c:	dac05117 	ldw	r11,324(sp)
  843550:	a829883a 	mov	r20,r21
  843554:	98a7883a 	add	r19,r19,r2
  843558:	5ac00044 	addi	r11,r11,1
  84355c:	dac05115 	stw	r11,324(sp)
  843560:	d8c04f15 	stw	r3,316(sp)
  843564:	a00d883a 	mov	r6,r20
  843568:	003d9206 	br	842bb4 <__alt_mem_epcs_flash_controller_0+0xff839bb4>
  84356c:	e0800117 	ldw	r2,4(fp)
  843570:	80e0b03a 	or	r16,r16,r3
  843574:	00be8d16 	blt	zero,r2,842fac <__alt_mem_epcs_flash_controller_0+0xff839fac>
  843578:	e00b883a 	mov	r5,fp
  84357c:	8809883a 	mov	r4,r17
  843580:	08429480 	call	842948 <__ssrefill_r>
  843584:	103fbd1e 	bne	r2,zero,84347c <__alt_mem_epcs_flash_controller_0+0xff83a47c>
  843588:	95800017 	ldw	r22,0(r18)
  84358c:	003e8706 	br	842fac <__alt_mem_epcs_flash_controller_0+0xff839fac>
  843590:	e00b883a 	mov	r5,fp
  843594:	8809883a 	mov	r4,r17
  843598:	08429480 	call	842948 <__ssrefill_r>
  84359c:	103e1826 	beq	r2,zero,842e00 <__alt_mem_epcs_flash_controller_0+0xff839e00>
  8435a0:	003fb606 	br	84347c <__alt_mem_epcs_flash_controller_0+0xff83a47c>
  8435a4:	a1400083 	ldbu	r5,2(r20)
  8435a8:	84000094 	ori	r16,r16,2
  8435ac:	a5000084 	addi	r20,r20,2
  8435b0:	2dc03fcc 	andi	r23,r5,255
  8435b4:	003d8e06 	br	842bf0 <__alt_mem_epcs_flash_controller_0+0xff839bf0>
  8435b8:	8080004c 	andi	r2,r16,1
  8435bc:	10000b1e 	bne	r2,zero,8435ec <__ssvfiscanf_r+0xb34>
  8435c0:	8400008c 	andi	r16,r16,2
  8435c4:	80000926 	beq	r16,zero,8435ec <__ssvfiscanf_r+0xb34>
  8435c8:	dac04f17 	ldw	r11,316(sp)
  8435cc:	9807d7fa 	srai	r3,r19,31
  8435d0:	a829883a 	mov	r20,r21
  8435d4:	58800017 	ldw	r2,0(r11)
  8435d8:	5ac00104 	addi	r11,r11,4
  8435dc:	dac04f15 	stw	r11,316(sp)
  8435e0:	14c00015 	stw	r19,0(r2)
  8435e4:	10c00115 	stw	r3,4(r2)
  8435e8:	003d7106 	br	842bb0 <__alt_mem_epcs_flash_controller_0+0xff839bb0>
  8435ec:	dac04f17 	ldw	r11,316(sp)
  8435f0:	a829883a 	mov	r20,r21
  8435f4:	58800017 	ldw	r2,0(r11)
  8435f8:	5ac00104 	addi	r11,r11,4
  8435fc:	dac04f15 	stw	r11,316(sp)
  843600:	14c00015 	stw	r19,0(r2)
  843604:	003d6a06 	br	842bb0 <__alt_mem_epcs_flash_controller_0+0xff839bb0>
  843608:	e00b883a 	mov	r5,fp
  84360c:	8809883a 	mov	r4,r17
  843610:	08429480 	call	842948 <__ssrefill_r>
  843614:	103f991e 	bne	r2,zero,84347c <__alt_mem_epcs_flash_controller_0+0xff83a47c>
  843618:	95800017 	ldw	r22,0(r18)
  84361c:	05000084 	movi	r20,2
  843620:	003e1906 	br	842e88 <__alt_mem_epcs_flash_controller_0+0xff839e88>
  843624:	e00b883a 	mov	r5,fp
  843628:	8809883a 	mov	r4,r17
  84362c:	08429480 	call	842948 <__ssrefill_r>
  843630:	103e9a26 	beq	r2,zero,84309c <__alt_mem_epcs_flash_controller_0+0xff83a09c>
  843634:	003f9106 	br	84347c <__alt_mem_epcs_flash_controller_0+0xff83a47c>
  843638:	e00b883a 	mov	r5,fp
  84363c:	8809883a 	mov	r4,r17
  843640:	08429480 	call	842948 <__ssrefill_r>
  843644:	103f8d1e 	bne	r2,zero,84347c <__alt_mem_epcs_flash_controller_0+0xff83a47c>
  843648:	95800017 	ldw	r22,0(r18)
  84364c:	003e0806 	br	842e70 <__alt_mem_epcs_flash_controller_0+0xff839e70>
  843650:	e00b883a 	mov	r5,fp
  843654:	8809883a 	mov	r4,r17
  843658:	08429480 	call	842948 <__ssrefill_r>
  84365c:	103f871e 	bne	r2,zero,84347c <__alt_mem_epcs_flash_controller_0+0xff83a47c>
  843660:	95800017 	ldw	r22,0(r18)
  843664:	003ee106 	br	8431ec <__alt_mem_epcs_flash_controller_0+0xff83a1ec>
  843668:	014000c4 	movi	r5,3
  84366c:	a140ae1e 	bne	r20,r5,843928 <__ssvfiscanf_r+0xe70>
  843670:	b8ffffc4 	addi	r3,r23,-1
  843674:	01400984 	movi	r5,38
  843678:	28c0d82e 	bgeu	r5,r3,8439dc <__ssvfiscanf_r+0xf24>
  84367c:	b9bff644 	addi	r6,r23,-39
  843680:	05c009c4 	movi	r23,39
  843684:	85836014 	ori	r22,r16,3456
  843688:	0021883a 	mov	r16,zero
  84368c:	a815883a 	mov	r10,r21
  843690:	982b883a 	mov	r21,r19
  843694:	8027883a 	mov	r19,r16
  843698:	dc005017 	ldw	r16,320(sp)
  84369c:	dd004104 	addi	r20,sp,260
  8436a0:	02401344 	movi	r9,77
  8436a4:	01c08004 	movi	r7,512
  8436a8:	00ff7fc4 	movi	r3,-513
  8436ac:	023fdfc4 	movi	r8,-129
  8436b0:	217ff544 	addi	r5,r4,-43
  8436b4:	29403fcc 	andi	r5,r5,255
  8436b8:	49408836 	bltu	r9,r5,8438dc <__ssvfiscanf_r+0xe24>
  8436bc:	280a90ba 	slli	r5,r5,2
  8436c0:	02c02134 	movhi	r11,132
  8436c4:	5acdb504 	addi	r11,r11,14036
  8436c8:	2acb883a 	add	r5,r5,r11
  8436cc:	29400017 	ldw	r5,0(r5)
  8436d0:	2800683a 	jmp	r5
  8436d4:	00843868 	cmpgeui	r2,zero,4321
  8436d8:	008438dc 	xori	r2,zero,4323
  8436dc:	00843868 	cmpgeui	r2,zero,4321
  8436e0:	008438dc 	xori	r2,zero,4323
  8436e4:	008438dc 	xori	r2,zero,4323
  8436e8:	00843898 	cmpnei	r2,zero,4322
  8436ec:	00843878 	rdprs	r2,zero,4321
  8436f0:	00843878 	rdprs	r2,zero,4321
  8436f4:	00843878 	rdprs	r2,zero,4321
  8436f8:	00843878 	rdprs	r2,zero,4321
  8436fc:	00843878 	rdprs	r2,zero,4321
  843700:	00843878 	rdprs	r2,zero,4321
  843704:	00843878 	rdprs	r2,zero,4321
  843708:	008438c0 	call	8438c <OSCtxSw_SWITCH_PC+0x8434c>
  84370c:	008438c0 	call	8438c <OSCtxSw_SWITCH_PC+0x8434c>
  843710:	008438dc 	xori	r2,zero,4323
  843714:	008438dc 	xori	r2,zero,4323
  843718:	008438dc 	xori	r2,zero,4323
  84371c:	008438dc 	xori	r2,zero,4323
  843720:	008438dc 	xori	r2,zero,4323
  843724:	008438dc 	xori	r2,zero,4323
  843728:	008438dc 	xori	r2,zero,4323
  84372c:	00843854 	movui	r2,4321
  843730:	00843854 	movui	r2,4321
  843734:	00843854 	movui	r2,4321
  843738:	00843854 	movui	r2,4321
  84373c:	00843854 	movui	r2,4321
  843740:	00843854 	movui	r2,4321
  843744:	008438dc 	xori	r2,zero,4323
  843748:	008438dc 	xori	r2,zero,4323
  84374c:	008438dc 	xori	r2,zero,4323
  843750:	008438dc 	xori	r2,zero,4323
  843754:	008438dc 	xori	r2,zero,4323
  843758:	008438dc 	xori	r2,zero,4323
  84375c:	008438dc 	xori	r2,zero,4323
  843760:	008438dc 	xori	r2,zero,4323
  843764:	008438dc 	xori	r2,zero,4323
  843768:	008438dc 	xori	r2,zero,4323
  84376c:	008438dc 	xori	r2,zero,4323
  843770:	008438dc 	xori	r2,zero,4323
  843774:	008438dc 	xori	r2,zero,4323
  843778:	008438dc 	xori	r2,zero,4323
  84377c:	008438dc 	xori	r2,zero,4323
  843780:	008438dc 	xori	r2,zero,4323
  843784:	008438dc 	xori	r2,zero,4323
  843788:	0084380c 	andi	r2,zero,4320
  84378c:	008438dc 	xori	r2,zero,4323
  843790:	008438dc 	xori	r2,zero,4323
  843794:	008438dc 	xori	r2,zero,4323
  843798:	008438dc 	xori	r2,zero,4323
  84379c:	008438dc 	xori	r2,zero,4323
  8437a0:	008438dc 	xori	r2,zero,4323
  8437a4:	008438dc 	xori	r2,zero,4323
  8437a8:	008438dc 	xori	r2,zero,4323
  8437ac:	00843854 	movui	r2,4321
  8437b0:	00843854 	movui	r2,4321
  8437b4:	00843854 	movui	r2,4321
  8437b8:	00843854 	movui	r2,4321
  8437bc:	00843854 	movui	r2,4321
  8437c0:	00843854 	movui	r2,4321
  8437c4:	008438dc 	xori	r2,zero,4323
  8437c8:	008438dc 	xori	r2,zero,4323
  8437cc:	008438dc 	xori	r2,zero,4323
  8437d0:	008438dc 	xori	r2,zero,4323
  8437d4:	008438dc 	xori	r2,zero,4323
  8437d8:	008438dc 	xori	r2,zero,4323
  8437dc:	008438dc 	xori	r2,zero,4323
  8437e0:	008438dc 	xori	r2,zero,4323
  8437e4:	008438dc 	xori	r2,zero,4323
  8437e8:	008438dc 	xori	r2,zero,4323
  8437ec:	008438dc 	xori	r2,zero,4323
  8437f0:	008438dc 	xori	r2,zero,4323
  8437f4:	008438dc 	xori	r2,zero,4323
  8437f8:	008438dc 	xori	r2,zero,4323
  8437fc:	008438dc 	xori	r2,zero,4323
  843800:	008438dc 	xori	r2,zero,4323
  843804:	008438dc 	xori	r2,zero,4323
  843808:	0084380c 	andi	r2,zero,4320
  84380c:	b141800c 	andi	r5,r22,1536
  843810:	29c0321e 	bne	r5,r7,8438dc <__ssvfiscanf_r+0xe24>
  843814:	b0ec703a 	and	r22,r22,r3
  843818:	b5814014 	ori	r22,r22,1280
  84381c:	04000404 	movi	r16,16
  843820:	a1000005 	stb	r4,0(r20)
  843824:	a5000044 	addi	r20,r20,1
  843828:	e1000117 	ldw	r4,4(fp)
  84382c:	213fffc4 	addi	r4,r4,-1
  843830:	e1000115 	stw	r4,4(fp)
  843834:	0100580e 	bge	zero,r4,843998 <__ssvfiscanf_r+0xee0>
  843838:	10800044 	addi	r2,r2,1
  84383c:	e0800015 	stw	r2,0(fp)
  843840:	bdffffc4 	addi	r23,r23,-1
  843844:	b8002526 	beq	r23,zero,8438dc <__ssvfiscanf_r+0xe24>
  843848:	e0800017 	ldw	r2,0(fp)
  84384c:	11000003 	ldbu	r4,0(r2)
  843850:	003f9706 	br	8436b0 <__alt_mem_epcs_flash_controller_0+0xff83a6b0>
  843854:	01400284 	movi	r5,10
  843858:	2c00200e 	bge	r5,r16,8438dc <__ssvfiscanf_r+0xe24>
  84385c:	017d1fc4 	movi	r5,-2945
  843860:	b16c703a 	and	r22,r22,r5
  843864:	003fee06 	br	843820 <__alt_mem_epcs_flash_controller_0+0xff83a820>
  843868:	b140200c 	andi	r5,r22,128
  84386c:	28001b26 	beq	r5,zero,8438dc <__ssvfiscanf_r+0xe24>
  843870:	b22c703a 	and	r22,r22,r8
  843874:	003fea06 	br	843820 <__alt_mem_epcs_flash_controller_0+0xff83a820>
  843878:	02c021b4 	movhi	r11,134
  84387c:	8421883a 	add	r16,r16,r16
  843880:	5ae56d04 	addi	r11,r11,-27212
  843884:	5c0b883a 	add	r5,r11,r16
  843888:	2c00000f 	ldh	r16,0(r5)
  84388c:	017d1fc4 	movi	r5,-2945
  843890:	b16c703a 	and	r22,r22,r5
  843894:	003fe206 	br	843820 <__alt_mem_epcs_flash_controller_0+0xff83a820>
  843898:	b142000c 	andi	r5,r22,2048
  84389c:	283fe026 	beq	r5,zero,843820 <__alt_mem_epcs_flash_controller_0+0xff83a820>
  8438a0:	8000021e 	bne	r16,zero,8438ac <__ssvfiscanf_r+0xdf4>
  8438a4:	b5808014 	ori	r22,r22,512
  8438a8:	04000204 	movi	r16,8
  8438ac:	b141000c 	andi	r5,r22,1024
  8438b0:	28009f26 	beq	r5,zero,843b30 <__ssvfiscanf_r+0x1078>
  8438b4:	017e9fc4 	movi	r5,-1409
  8438b8:	b16c703a 	and	r22,r22,r5
  8438bc:	003fd806 	br	843820 <__alt_mem_epcs_flash_controller_0+0xff83a820>
  8438c0:	02c021b4 	movhi	r11,134
  8438c4:	8421883a 	add	r16,r16,r16
  8438c8:	5ae56d04 	addi	r11,r11,-27212
  8438cc:	5c0b883a 	add	r5,r11,r16
  8438d0:	2c00000f 	ldh	r16,0(r5)
  8438d4:	01400204 	movi	r5,8
  8438d8:	2c3fe016 	blt	r5,r16,84385c <__alt_mem_epcs_flash_controller_0+0xff83a85c>
  8438dc:	dc005015 	stw	r16,320(sp)
  8438e0:	b080400c 	andi	r2,r22,256
  8438e4:	9821883a 	mov	r16,r19
  8438e8:	a827883a 	mov	r19,r21
  8438ec:	502b883a 	mov	r21,r10
  8438f0:	10000426 	beq	r2,zero,843904 <__ssvfiscanf_r+0xe4c>
  8438f4:	dac04e17 	ldw	r11,312(sp)
  8438f8:	5d009c36 	bltu	r11,r20,843b6c <__ssvfiscanf_r+0x10b4>
  8438fc:	dac04e17 	ldw	r11,312(sp)
  843900:	a2fcb026 	beq	r20,r11,842bc4 <__alt_mem_epcs_flash_controller_0+0xff839bc4>
  843904:	b080040c 	andi	r2,r22,16
  843908:	10006026 	beq	r2,zero,843a8c <__ssvfiscanf_r+0xfd4>
  84390c:	dac04e17 	ldw	r11,312(sp)
  843910:	a2e9c83a 	sub	r20,r20,r11
  843914:	a429883a 	add	r20,r20,r16
  843918:	9d27883a 	add	r19,r19,r20
  84391c:	a829883a 	mov	r20,r21
  843920:	a00d883a 	mov	r6,r20
  843924:	003ca306 	br	842bb4 <__alt_mem_epcs_flash_controller_0+0xff839bb4>
  843928:	b800011e 	bne	r23,zero,843930 <__ssvfiscanf_r+0xe78>
  84392c:	05ffffc4 	movi	r23,-1
  843930:	8100004c 	andi	r4,r16,1
  843934:	203e981e 	bne	r4,zero,843398 <__alt_mem_epcs_flash_controller_0+0xff83a398>
  843938:	8400040c 	andi	r16,r16,16
  84393c:	80002926 	beq	r16,zero,8439e4 <__ssvfiscanf_r+0xf2c>
  843940:	0021883a 	mov	r16,zero
  843944:	00000306 	br	843954 <__ssvfiscanf_r+0xe9c>
  843948:	10c00003 	ldbu	r3,0(r2)
  84394c:	b0c7883a 	add	r3,r22,r3
  843950:	18c00043 	ldbu	r3,1(r3)
  843954:	18c0020c 	andi	r3,r3,8
  843958:	183dc51e 	bne	r3,zero,843070 <__alt_mem_epcs_flash_controller_0+0xff83a070>
  84395c:	e0c00117 	ldw	r3,4(fp)
  843960:	10800044 	addi	r2,r2,1
  843964:	84000044 	addi	r16,r16,1
  843968:	18ffffc4 	addi	r3,r3,-1
  84396c:	e0c00115 	stw	r3,4(fp)
  843970:	e0800015 	stw	r2,0(fp)
  843974:	85fdbe26 	beq	r16,r23,843070 <__alt_mem_epcs_flash_controller_0+0xff83a070>
  843978:	00fff316 	blt	zero,r3,843948 <__alt_mem_epcs_flash_controller_0+0xff83a948>
  84397c:	e00b883a 	mov	r5,fp
  843980:	8809883a 	mov	r4,r17
  843984:	08429480 	call	842948 <__ssrefill_r>
  843988:	103db91e 	bne	r2,zero,843070 <__alt_mem_epcs_flash_controller_0+0xff83a070>
  84398c:	95800017 	ldw	r22,0(r18)
  843990:	e0800017 	ldw	r2,0(fp)
  843994:	003fec06 	br	843948 <__alt_mem_epcs_flash_controller_0+0xff83a948>
  843998:	e00b883a 	mov	r5,fp
  84399c:	8809883a 	mov	r4,r17
  8439a0:	d8c05a15 	stw	r3,360(sp)
  8439a4:	d9805715 	stw	r6,348(sp)
  8439a8:	d9c05915 	stw	r7,356(sp)
  8439ac:	da005615 	stw	r8,344(sp)
  8439b0:	da405515 	stw	r9,340(sp)
  8439b4:	da805815 	stw	r10,352(sp)
  8439b8:	08429480 	call	842948 <__ssrefill_r>
  8439bc:	d8c05a17 	ldw	r3,360(sp)
  8439c0:	d9805717 	ldw	r6,348(sp)
  8439c4:	d9c05917 	ldw	r7,356(sp)
  8439c8:	da005617 	ldw	r8,344(sp)
  8439cc:	da405517 	ldw	r9,340(sp)
  8439d0:	da805817 	ldw	r10,352(sp)
  8439d4:	103f9a26 	beq	r2,zero,843840 <__alt_mem_epcs_flash_controller_0+0xff83a840>
  8439d8:	003fc006 	br	8438dc <__alt_mem_epcs_flash_controller_0+0xff83a8dc>
  8439dc:	000d883a 	mov	r6,zero
  8439e0:	003f2806 	br	843684 <__alt_mem_epcs_flash_controller_0+0xff83a684>
  8439e4:	dac04f17 	ldw	r11,316(sp)
  8439e8:	babfffc4 	addi	r10,r23,-1
  8439ec:	5d000017 	ldw	r20,0(r11)
  8439f0:	5c000104 	addi	r16,r11,4
  8439f4:	a00b883a 	mov	r5,r20
  8439f8:	a2ad883a 	add	r22,r20,r10
  8439fc:	00000606 	br	843a18 <__ssvfiscanf_r+0xf60>
  843a00:	e0800017 	ldw	r2,0(fp)
  843a04:	91000017 	ldw	r4,0(r18)
  843a08:	b80b883a 	mov	r5,r23
  843a0c:	10c00003 	ldbu	r3,0(r2)
  843a10:	20c7883a 	add	r3,r4,r3
  843a14:	18c00043 	ldbu	r3,1(r3)
  843a18:	18c0020c 	andi	r3,r3,8
  843a1c:	2809883a 	mov	r4,r5
  843a20:	1800101e 	bne	r3,zero,843a64 <__ssvfiscanf_r+0xfac>
  843a24:	e0c00117 	ldw	r3,4(fp)
  843a28:	11800044 	addi	r6,r2,1
  843a2c:	e1800015 	stw	r6,0(fp)
  843a30:	18ffffc4 	addi	r3,r3,-1
  843a34:	e0c00115 	stw	r3,4(fp)
  843a38:	10800003 	ldbu	r2,0(r2)
  843a3c:	25c00044 	addi	r23,r4,1
  843a40:	28800005 	stb	r2,0(r5)
  843a44:	25800626 	beq	r4,r22,843a60 <__ssvfiscanf_r+0xfa8>
  843a48:	e0800117 	ldw	r2,4(fp)
  843a4c:	00bfec16 	blt	zero,r2,843a00 <__alt_mem_epcs_flash_controller_0+0xff83aa00>
  843a50:	e00b883a 	mov	r5,fp
  843a54:	8809883a 	mov	r4,r17
  843a58:	08429480 	call	842948 <__ssrefill_r>
  843a5c:	103fe826 	beq	r2,zero,843a00 <__alt_mem_epcs_flash_controller_0+0xff83aa00>
  843a60:	b809883a 	mov	r4,r23
  843a64:	dac05117 	ldw	r11,324(sp)
  843a68:	2529c83a 	sub	r20,r4,r20
  843a6c:	9d27883a 	add	r19,r19,r20
  843a70:	5ac00044 	addi	r11,r11,1
  843a74:	a829883a 	mov	r20,r21
  843a78:	20000005 	stb	zero,0(r4)
  843a7c:	dac05115 	stw	r11,324(sp)
  843a80:	dc004f15 	stw	r16,316(sp)
  843a84:	a00d883a 	mov	r6,r20
  843a88:	003c4a06 	br	842bb4 <__alt_mem_epcs_flash_controller_0+0xff839bb4>
  843a8c:	d9c05017 	ldw	r7,320(sp)
  843a90:	dac05217 	ldw	r11,328(sp)
  843a94:	000d883a 	mov	r6,zero
  843a98:	d9404104 	addi	r5,sp,260
  843a9c:	8809883a 	mov	r4,r17
  843aa0:	a0000005 	stb	zero,0(r20)
  843aa4:	583ee83a 	callr	r11
  843aa8:	b0c0080c 	andi	r3,r22,32
  843aac:	1800271e 	bne	r3,zero,843b4c <__ssvfiscanf_r+0x1094>
  843ab0:	b0c0010c 	andi	r3,r22,4
  843ab4:	18003326 	beq	r3,zero,843b84 <__ssvfiscanf_r+0x10cc>
  843ab8:	dac04f17 	ldw	r11,316(sp)
  843abc:	58c00017 	ldw	r3,0(r11)
  843ac0:	5ac00104 	addi	r11,r11,4
  843ac4:	dac04f15 	stw	r11,316(sp)
  843ac8:	1880000d 	sth	r2,0(r3)
  843acc:	dac05117 	ldw	r11,324(sp)
  843ad0:	5ac00044 	addi	r11,r11,1
  843ad4:	dac05115 	stw	r11,324(sp)
  843ad8:	003f8c06 	br	84390c <__alt_mem_epcs_flash_controller_0+0xff83a90c>
  843adc:	b0000015 	stw	zero,0(r22)
  843ae0:	0009883a 	mov	r4,zero
  843ae4:	d8c05a15 	stw	r3,360(sp)
  843ae8:	083d1d00 	call	83d1d0 <iswspace>
  843aec:	d8c05a17 	ldw	r3,360(sp)
  843af0:	10003826 	beq	r2,zero,843bd4 <__ssvfiscanf_r+0x111c>
  843af4:	18000b26 	beq	r3,zero,843b24 <__ssvfiscanf_r+0x106c>
  843af8:	1d3fffc4 	addi	r20,r3,-1
  843afc:	dac04104 	addi	r11,sp,260
  843b00:	5d2f883a 	add	r23,r11,r20
  843b04:	00000106 	br	843b0c <__ssvfiscanf_r+0x1054>
  843b08:	a53fffc4 	addi	r20,r20,-1
  843b0c:	b9400003 	ldbu	r5,0(r23)
  843b10:	e00d883a 	mov	r6,fp
  843b14:	8809883a 	mov	r4,r17
  843b18:	08428400 	call	842840 <_sungetc_r>
  843b1c:	bdffffc4 	addi	r23,r23,-1
  843b20:	a03ff91e 	bne	r20,zero,843b08 <__alt_mem_epcs_flash_controller_0+0xff83ab08>
  843b24:	803ded1e 	bne	r16,zero,8432dc <__alt_mem_epcs_flash_controller_0+0xff83a2dc>
  843b28:	b0000015 	stw	zero,0(r22)
  843b2c:	003de806 	br	8432d0 <__alt_mem_epcs_flash_controller_0+0xff83a2d0>
  843b30:	013f1fc4 	movi	r4,-897
  843b34:	b12c703a 	and	r22,r22,r4
  843b38:	30000226 	beq	r6,zero,843b44 <__ssvfiscanf_r+0x108c>
  843b3c:	31bfffc4 	addi	r6,r6,-1
  843b40:	bdc00044 	addi	r23,r23,1
  843b44:	9cc00044 	addi	r19,r19,1
  843b48:	003f3706 	br	843828 <__alt_mem_epcs_flash_controller_0+0xff83a828>
  843b4c:	dac04f17 	ldw	r11,316(sp)
  843b50:	58c00017 	ldw	r3,0(r11)
  843b54:	5ac00104 	addi	r11,r11,4
  843b58:	dac04f15 	stw	r11,316(sp)
  843b5c:	18800015 	stw	r2,0(r3)
  843b60:	003fda06 	br	843acc <__alt_mem_epcs_flash_controller_0+0xff83aacc>
  843b64:	dd804d04 	addi	r22,sp,308
  843b68:	003e1706 	br	8433c8 <__alt_mem_epcs_flash_controller_0+0xff83a3c8>
  843b6c:	a17fffc7 	ldb	r5,-1(r20)
  843b70:	e00d883a 	mov	r6,fp
  843b74:	8809883a 	mov	r4,r17
  843b78:	a53fffc4 	addi	r20,r20,-1
  843b7c:	08428400 	call	842840 <_sungetc_r>
  843b80:	003f5e06 	br	8438fc <__alt_mem_epcs_flash_controller_0+0xff83a8fc>
  843b84:	b0c0004c 	andi	r3,r22,1
  843b88:	183ff01e 	bne	r3,zero,843b4c <__alt_mem_epcs_flash_controller_0+0xff83ab4c>
  843b8c:	b580008c 	andi	r22,r22,2
  843b90:	b03fee26 	beq	r22,zero,843b4c <__alt_mem_epcs_flash_controller_0+0xff83ab4c>
  843b94:	dac05217 	ldw	r11,328(sp)
  843b98:	00802134 	movhi	r2,132
  843b9c:	10834704 	addi	r2,r2,3356
  843ba0:	d9c05017 	ldw	r7,320(sp)
  843ba4:	000d883a 	mov	r6,zero
  843ba8:	d9404104 	addi	r5,sp,260
  843bac:	8809883a 	mov	r4,r17
  843bb0:	58801226 	beq	r11,r2,843bfc <__ssvfiscanf_r+0x1144>
  843bb4:	0840a180 	call	840a18 <_strtoll_r>
  843bb8:	dac04f17 	ldw	r11,316(sp)
  843bbc:	59000017 	ldw	r4,0(r11)
  843bc0:	5ac00104 	addi	r11,r11,4
  843bc4:	dac04f15 	stw	r11,316(sp)
  843bc8:	20800015 	stw	r2,0(r4)
  843bcc:	20c00115 	stw	r3,4(r4)
  843bd0:	003fbe06 	br	843acc <__alt_mem_epcs_flash_controller_0+0xff83aacc>
  843bd4:	98e7883a 	add	r19,r19,r3
  843bd8:	bdffffc4 	addi	r23,r23,-1
  843bdc:	8000031e 	bne	r16,zero,843bec <__ssvfiscanf_r+0x1134>
  843be0:	b5800104 	addi	r22,r22,4
  843be4:	0029883a 	mov	r20,zero
  843be8:	003e1d06 	br	843460 <__alt_mem_epcs_flash_controller_0+0xff83a460>
  843bec:	0029883a 	mov	r20,zero
  843bf0:	003e1b06 	br	843460 <__alt_mem_epcs_flash_controller_0+0xff83a460>
  843bf4:	b1000017 	ldw	r4,0(r22)
  843bf8:	003fba06 	br	843ae4 <__alt_mem_epcs_flash_controller_0+0xff83aae4>
  843bfc:	0840fb00 	call	840fb0 <_strtoull_r>
  843c00:	003fed06 	br	843bb8 <__alt_mem_epcs_flash_controller_0+0xff83abb8>

00843c04 <__submore>:
  843c04:	defffa04 	addi	sp,sp,-24
  843c08:	dc000015 	stw	r16,0(sp)
  843c0c:	2821883a 	mov	r16,r5
  843c10:	29400c17 	ldw	r5,48(r5)
  843c14:	dfc00515 	stw	ra,20(sp)
  843c18:	dd000415 	stw	r20,16(sp)
  843c1c:	dcc00315 	stw	r19,12(sp)
  843c20:	dc800215 	stw	r18,8(sp)
  843c24:	dc400115 	stw	r17,4(sp)
  843c28:	80801004 	addi	r2,r16,64
  843c2c:	28801726 	beq	r5,r2,843c8c <__submore+0x88>
  843c30:	84400d17 	ldw	r17,52(r16)
  843c34:	8c67883a 	add	r19,r17,r17
  843c38:	980d883a 	mov	r6,r19
  843c3c:	083e8b80 	call	83e8b8 <_realloc_r>
  843c40:	1025883a 	mov	r18,r2
  843c44:	10002226 	beq	r2,zero,843cd0 <__submore+0xcc>
  843c48:	1469883a 	add	r20,r2,r17
  843c4c:	880d883a 	mov	r6,r17
  843c50:	100b883a 	mov	r5,r2
  843c54:	a009883a 	mov	r4,r20
  843c58:	08341500 	call	834150 <memcpy>
  843c5c:	0005883a 	mov	r2,zero
  843c60:	85000015 	stw	r20,0(r16)
  843c64:	84800c15 	stw	r18,48(r16)
  843c68:	84c00d15 	stw	r19,52(r16)
  843c6c:	dfc00517 	ldw	ra,20(sp)
  843c70:	dd000417 	ldw	r20,16(sp)
  843c74:	dcc00317 	ldw	r19,12(sp)
  843c78:	dc800217 	ldw	r18,8(sp)
  843c7c:	dc400117 	ldw	r17,4(sp)
  843c80:	dc000017 	ldw	r16,0(sp)
  843c84:	dec00604 	addi	sp,sp,24
  843c88:	f800283a 	ret
  843c8c:	04410004 	movi	r17,1024
  843c90:	880b883a 	mov	r5,r17
  843c94:	08339440 	call	833944 <_malloc_r>
  843c98:	1007883a 	mov	r3,r2
  843c9c:	10000c26 	beq	r2,zero,843cd0 <__submore+0xcc>
  843ca0:	80801083 	ldbu	r2,66(r16)
  843ca4:	80c00c15 	stw	r3,48(r16)
  843ca8:	84400d15 	stw	r17,52(r16)
  843cac:	1880ffc5 	stb	r2,1023(r3)
  843cb0:	81401043 	ldbu	r5,65(r16)
  843cb4:	1900ff44 	addi	r4,r3,1021
  843cb8:	0005883a 	mov	r2,zero
  843cbc:	1940ff85 	stb	r5,1022(r3)
  843cc0:	81401003 	ldbu	r5,64(r16)
  843cc4:	1940ff45 	stb	r5,1021(r3)
  843cc8:	81000015 	stw	r4,0(r16)
  843ccc:	003fe706 	br	843c6c <__alt_mem_epcs_flash_controller_0+0xff83ac6c>
  843cd0:	00bfffc4 	movi	r2,-1
  843cd4:	003fe506 	br	843c6c <__alt_mem_epcs_flash_controller_0+0xff83ac6c>

00843cd8 <_ungetc_r>:
  843cd8:	00bfffc4 	movi	r2,-1
  843cdc:	28806126 	beq	r5,r2,843e64 <_ungetc_r+0x18c>
  843ce0:	defffb04 	addi	sp,sp,-20
  843ce4:	dcc00315 	stw	r19,12(sp)
  843ce8:	dc400115 	stw	r17,4(sp)
  843cec:	dc000015 	stw	r16,0(sp)
  843cf0:	dfc00415 	stw	ra,16(sp)
  843cf4:	dc800215 	stw	r18,8(sp)
  843cf8:	2023883a 	mov	r17,r4
  843cfc:	3021883a 	mov	r16,r6
  843d00:	2827883a 	mov	r19,r5
  843d04:	20000226 	beq	r4,zero,843d10 <_ungetc_r+0x38>
  843d08:	20800e17 	ldw	r2,56(r4)
  843d0c:	10002e26 	beq	r2,zero,843dc8 <_ungetc_r+0xf0>
  843d10:	80c0030b 	ldhu	r3,12(r16)
  843d14:	1888000c 	andi	r2,r3,8192
  843d18:	1000051e 	bne	r2,zero,843d30 <_ungetc_r+0x58>
  843d1c:	81001917 	ldw	r4,100(r16)
  843d20:	00b7ffc4 	movi	r2,-8193
  843d24:	18c80014 	ori	r3,r3,8192
  843d28:	2084703a 	and	r2,r4,r2
  843d2c:	80801915 	stw	r2,100(r16)
  843d30:	00bff7c4 	movi	r2,-33
  843d34:	1884703a 	and	r2,r3,r2
  843d38:	8080030d 	sth	r2,12(r16)
  843d3c:	1900010c 	andi	r4,r3,4
  843d40:	2000061e 	bne	r4,zero,843d5c <_ungetc_r+0x84>
  843d44:	1900040c 	andi	r4,r3,16
  843d48:	20001d26 	beq	r4,zero,843dc0 <_ungetc_r+0xe8>
  843d4c:	18c0020c 	andi	r3,r3,8
  843d50:	1800331e 	bne	r3,zero,843e20 <_ungetc_r+0x148>
  843d54:	10800114 	ori	r2,r2,4
  843d58:	8080030d 	sth	r2,12(r16)
  843d5c:	80800c17 	ldw	r2,48(r16)
  843d60:	9c803fcc 	andi	r18,r19,255
  843d64:	10001a26 	beq	r2,zero,843dd0 <_ungetc_r+0xf8>
  843d68:	80c00117 	ldw	r3,4(r16)
  843d6c:	80800d17 	ldw	r2,52(r16)
  843d70:	18800f0e 	bge	r3,r2,843db0 <_ungetc_r+0xd8>
  843d74:	80c00017 	ldw	r3,0(r16)
  843d78:	9005883a 	mov	r2,r18
  843d7c:	193fffc4 	addi	r4,r3,-1
  843d80:	81000015 	stw	r4,0(r16)
  843d84:	1cffffc5 	stb	r19,-1(r3)
  843d88:	80c00117 	ldw	r3,4(r16)
  843d8c:	18c00044 	addi	r3,r3,1
  843d90:	80c00115 	stw	r3,4(r16)
  843d94:	dfc00417 	ldw	ra,16(sp)
  843d98:	dcc00317 	ldw	r19,12(sp)
  843d9c:	dc800217 	ldw	r18,8(sp)
  843da0:	dc400117 	ldw	r17,4(sp)
  843da4:	dc000017 	ldw	r16,0(sp)
  843da8:	dec00504 	addi	sp,sp,20
  843dac:	f800283a 	ret
  843db0:	800b883a 	mov	r5,r16
  843db4:	8809883a 	mov	r4,r17
  843db8:	0843c040 	call	843c04 <__submore>
  843dbc:	103fed26 	beq	r2,zero,843d74 <__alt_mem_epcs_flash_controller_0+0xff83ad74>
  843dc0:	00bfffc4 	movi	r2,-1
  843dc4:	003ff306 	br	843d94 <__alt_mem_epcs_flash_controller_0+0xff83ad94>
  843dc8:	083274c0 	call	83274c <__sinit>
  843dcc:	003fd006 	br	843d10 <__alt_mem_epcs_flash_controller_0+0xff83ad10>
  843dd0:	80c00417 	ldw	r3,16(r16)
  843dd4:	80800017 	ldw	r2,0(r16)
  843dd8:	18000326 	beq	r3,zero,843de8 <_ungetc_r+0x110>
  843ddc:	1880022e 	bgeu	r3,r2,843de8 <_ungetc_r+0x110>
  843de0:	10ffffc3 	ldbu	r3,-1(r2)
  843de4:	90c01826 	beq	r18,r3,843e48 <_ungetc_r+0x170>
  843de8:	81400117 	ldw	r5,4(r16)
  843dec:	80800e15 	stw	r2,56(r16)
  843df0:	008000c4 	movi	r2,3
  843df4:	81001004 	addi	r4,r16,64
  843df8:	80c01084 	addi	r3,r16,66
  843dfc:	80800d15 	stw	r2,52(r16)
  843e00:	00800044 	movi	r2,1
  843e04:	80800115 	stw	r2,4(r16)
  843e08:	81400f15 	stw	r5,60(r16)
  843e0c:	81000c15 	stw	r4,48(r16)
  843e10:	84c01085 	stb	r19,66(r16)
  843e14:	80c00015 	stw	r3,0(r16)
  843e18:	9005883a 	mov	r2,r18
  843e1c:	003fdd06 	br	843d94 <__alt_mem_epcs_flash_controller_0+0xff83ad94>
  843e20:	800b883a 	mov	r5,r16
  843e24:	8809883a 	mov	r4,r17
  843e28:	08323600 	call	832360 <_fflush_r>
  843e2c:	103fe41e 	bne	r2,zero,843dc0 <__alt_mem_epcs_flash_controller_0+0xff83adc0>
  843e30:	8080030b 	ldhu	r2,12(r16)
  843e34:	00fffdc4 	movi	r3,-9
  843e38:	80000215 	stw	zero,8(r16)
  843e3c:	1884703a 	and	r2,r3,r2
  843e40:	80000615 	stw	zero,24(r16)
  843e44:	003fc306 	br	843d54 <__alt_mem_epcs_flash_controller_0+0xff83ad54>
  843e48:	80c00117 	ldw	r3,4(r16)
  843e4c:	10bfffc4 	addi	r2,r2,-1
  843e50:	80800015 	stw	r2,0(r16)
  843e54:	18800044 	addi	r2,r3,1
  843e58:	80800115 	stw	r2,4(r16)
  843e5c:	9005883a 	mov	r2,r18
  843e60:	003fcc06 	br	843d94 <__alt_mem_epcs_flash_controller_0+0xff83ad94>
  843e64:	00bfffc4 	movi	r2,-1
  843e68:	f800283a 	ret

00843e6c <ungetc>:
  843e6c:	008021b4 	movhi	r2,134
  843e70:	10adb604 	addi	r2,r2,-18728
  843e74:	280d883a 	mov	r6,r5
  843e78:	200b883a 	mov	r5,r4
  843e7c:	11000017 	ldw	r4,0(r2)
  843e80:	0843cd81 	jmpi	843cd8 <_ungetc_r>

00843e84 <__sprint_r.part.0>:
  843e84:	28801917 	ldw	r2,100(r5)
  843e88:	defff604 	addi	sp,sp,-40
  843e8c:	dd400515 	stw	r21,20(sp)
  843e90:	dfc00915 	stw	ra,36(sp)
  843e94:	df000815 	stw	fp,32(sp)
  843e98:	ddc00715 	stw	r23,28(sp)
  843e9c:	dd800615 	stw	r22,24(sp)
  843ea0:	dd000415 	stw	r20,16(sp)
  843ea4:	dcc00315 	stw	r19,12(sp)
  843ea8:	dc800215 	stw	r18,8(sp)
  843eac:	dc400115 	stw	r17,4(sp)
  843eb0:	dc000015 	stw	r16,0(sp)
  843eb4:	1088000c 	andi	r2,r2,8192
  843eb8:	302b883a 	mov	r21,r6
  843ebc:	10002e26 	beq	r2,zero,843f78 <__sprint_r.part.0+0xf4>
  843ec0:	30800217 	ldw	r2,8(r6)
  843ec4:	35800017 	ldw	r22,0(r6)
  843ec8:	10002926 	beq	r2,zero,843f70 <__sprint_r.part.0+0xec>
  843ecc:	2827883a 	mov	r19,r5
  843ed0:	2029883a 	mov	r20,r4
  843ed4:	b5c00104 	addi	r23,r22,4
  843ed8:	04bfffc4 	movi	r18,-1
  843edc:	bc400017 	ldw	r17,0(r23)
  843ee0:	b4000017 	ldw	r16,0(r22)
  843ee4:	0039883a 	mov	fp,zero
  843ee8:	8822d0ba 	srli	r17,r17,2
  843eec:	8800031e 	bne	r17,zero,843efc <__sprint_r.part.0+0x78>
  843ef0:	00001806 	br	843f54 <__sprint_r.part.0+0xd0>
  843ef4:	84000104 	addi	r16,r16,4
  843ef8:	8f001526 	beq	r17,fp,843f50 <__sprint_r.part.0+0xcc>
  843efc:	81400017 	ldw	r5,0(r16)
  843f00:	980d883a 	mov	r6,r19
  843f04:	a009883a 	mov	r4,r20
  843f08:	08457bc0 	call	8457bc <_fputwc_r>
  843f0c:	e7000044 	addi	fp,fp,1
  843f10:	14bff81e 	bne	r2,r18,843ef4 <__alt_mem_epcs_flash_controller_0+0xff83aef4>
  843f14:	9005883a 	mov	r2,r18
  843f18:	a8000215 	stw	zero,8(r21)
  843f1c:	a8000115 	stw	zero,4(r21)
  843f20:	dfc00917 	ldw	ra,36(sp)
  843f24:	df000817 	ldw	fp,32(sp)
  843f28:	ddc00717 	ldw	r23,28(sp)
  843f2c:	dd800617 	ldw	r22,24(sp)
  843f30:	dd400517 	ldw	r21,20(sp)
  843f34:	dd000417 	ldw	r20,16(sp)
  843f38:	dcc00317 	ldw	r19,12(sp)
  843f3c:	dc800217 	ldw	r18,8(sp)
  843f40:	dc400117 	ldw	r17,4(sp)
  843f44:	dc000017 	ldw	r16,0(sp)
  843f48:	dec00a04 	addi	sp,sp,40
  843f4c:	f800283a 	ret
  843f50:	a8800217 	ldw	r2,8(r21)
  843f54:	8c63883a 	add	r17,r17,r17
  843f58:	8c63883a 	add	r17,r17,r17
  843f5c:	1445c83a 	sub	r2,r2,r17
  843f60:	a8800215 	stw	r2,8(r21)
  843f64:	b5800204 	addi	r22,r22,8
  843f68:	bdc00204 	addi	r23,r23,8
  843f6c:	103fdb1e 	bne	r2,zero,843edc <__alt_mem_epcs_flash_controller_0+0xff83aedc>
  843f70:	0005883a 	mov	r2,zero
  843f74:	003fe806 	br	843f18 <__alt_mem_epcs_flash_controller_0+0xff83af18>
  843f78:	083ccb40 	call	83ccb4 <__sfvwrite_r>
  843f7c:	003fe606 	br	843f18 <__alt_mem_epcs_flash_controller_0+0xff83af18>

00843f80 <__sprint_r>:
  843f80:	30c00217 	ldw	r3,8(r6)
  843f84:	18000126 	beq	r3,zero,843f8c <__sprint_r+0xc>
  843f88:	0843e841 	jmpi	843e84 <__sprint_r.part.0>
  843f8c:	30000115 	stw	zero,4(r6)
  843f90:	0005883a 	mov	r2,zero
  843f94:	f800283a 	ret

00843f98 <___vfiprintf_internal_r>:
  843f98:	deffca04 	addi	sp,sp,-216
  843f9c:	dd403115 	stw	r21,196(sp)
  843fa0:	dfc03515 	stw	ra,212(sp)
  843fa4:	df003415 	stw	fp,208(sp)
  843fa8:	ddc03315 	stw	r23,204(sp)
  843fac:	dd803215 	stw	r22,200(sp)
  843fb0:	dd003015 	stw	r20,192(sp)
  843fb4:	dcc02f15 	stw	r19,188(sp)
  843fb8:	dc802e15 	stw	r18,184(sp)
  843fbc:	dc402d15 	stw	r17,180(sp)
  843fc0:	dc002c15 	stw	r16,176(sp)
  843fc4:	d9002115 	stw	r4,132(sp)
  843fc8:	d9402015 	stw	r5,128(sp)
  843fcc:	d9c02215 	stw	r7,136(sp)
  843fd0:	302b883a 	mov	r21,r6
  843fd4:	20000226 	beq	r4,zero,843fe0 <___vfiprintf_internal_r+0x48>
  843fd8:	20800e17 	ldw	r2,56(r4)
  843fdc:	1000cf26 	beq	r2,zero,84431c <___vfiprintf_internal_r+0x384>
  843fe0:	d8c02017 	ldw	r3,128(sp)
  843fe4:	1880030b 	ldhu	r2,12(r3)
  843fe8:	10c8000c 	andi	r3,r2,8192
  843fec:	1800071e 	bne	r3,zero,84400c <___vfiprintf_internal_r+0x74>
  843ff0:	d9402017 	ldw	r5,128(sp)
  843ff4:	00f7ffc4 	movi	r3,-8193
  843ff8:	10880014 	ori	r2,r2,8192
  843ffc:	29001917 	ldw	r4,100(r5)
  844000:	2880030d 	sth	r2,12(r5)
  844004:	20c6703a 	and	r3,r4,r3
  844008:	28c01915 	stw	r3,100(r5)
  84400c:	10c0020c 	andi	r3,r2,8
  844010:	1800a526 	beq	r3,zero,8442a8 <___vfiprintf_internal_r+0x310>
  844014:	d9002017 	ldw	r4,128(sp)
  844018:	20c00417 	ldw	r3,16(r4)
  84401c:	1800a226 	beq	r3,zero,8442a8 <___vfiprintf_internal_r+0x310>
  844020:	1080068c 	andi	r2,r2,26
  844024:	00c00284 	movi	r3,10
  844028:	10c0a826 	beq	r2,r3,8442cc <___vfiprintf_internal_r+0x334>
  84402c:	d9001a04 	addi	r4,sp,104
  844030:	d94019c4 	addi	r5,sp,103
  844034:	048021b4 	movhi	r18,134
  844038:	2145c83a 	sub	r2,r4,r5
  84403c:	94a57584 	addi	r18,r18,-27178
  844040:	d9001e15 	stw	r4,120(sp)
  844044:	d9401f15 	stw	r5,124(sp)
  844048:	dec01a15 	stw	sp,104(sp)
  84404c:	d8001c15 	stw	zero,112(sp)
  844050:	d8001b15 	stw	zero,108(sp)
  844054:	d811883a 	mov	r8,sp
  844058:	d8002615 	stw	zero,152(sp)
  84405c:	d8002415 	stw	zero,144(sp)
  844060:	d8802815 	stw	r2,160(sp)
  844064:	a82d883a 	mov	r22,r21
  844068:	b0800007 	ldb	r2,0(r22)
  84406c:	10040d26 	beq	r2,zero,8450a4 <___vfiprintf_internal_r+0x110c>
  844070:	00c00944 	movi	r3,37
  844074:	b029883a 	mov	r20,r22
  844078:	10c0021e 	bne	r2,r3,844084 <___vfiprintf_internal_r+0xec>
  84407c:	00001606 	br	8440d8 <___vfiprintf_internal_r+0x140>
  844080:	10c00326 	beq	r2,r3,844090 <___vfiprintf_internal_r+0xf8>
  844084:	a5000044 	addi	r20,r20,1
  844088:	a0800007 	ldb	r2,0(r20)
  84408c:	103ffc1e 	bne	r2,zero,844080 <__alt_mem_epcs_flash_controller_0+0xff83b080>
  844090:	a5a1c83a 	sub	r16,r20,r22
  844094:	80001026 	beq	r16,zero,8440d8 <___vfiprintf_internal_r+0x140>
  844098:	d8c01c17 	ldw	r3,112(sp)
  84409c:	d8801b17 	ldw	r2,108(sp)
  8440a0:	45800015 	stw	r22,0(r8)
  8440a4:	80c7883a 	add	r3,r16,r3
  8440a8:	10800044 	addi	r2,r2,1
  8440ac:	44000115 	stw	r16,4(r8)
  8440b0:	d8c01c15 	stw	r3,112(sp)
  8440b4:	d8801b15 	stw	r2,108(sp)
  8440b8:	010001c4 	movi	r4,7
  8440bc:	2080750e 	bge	r4,r2,844294 <___vfiprintf_internal_r+0x2fc>
  8440c0:	1803951e 	bne	r3,zero,844f18 <___vfiprintf_internal_r+0xf80>
  8440c4:	d8c02417 	ldw	r3,144(sp)
  8440c8:	d8001b15 	stw	zero,108(sp)
  8440cc:	d811883a 	mov	r8,sp
  8440d0:	1c07883a 	add	r3,r3,r16
  8440d4:	d8c02415 	stw	r3,144(sp)
  8440d8:	a0800007 	ldb	r2,0(r20)
  8440dc:	1002e026 	beq	r2,zero,844c60 <___vfiprintf_internal_r+0xcc8>
  8440e0:	a5800044 	addi	r22,r20,1
  8440e4:	a0c00047 	ldb	r3,1(r20)
  8440e8:	d8001d85 	stb	zero,118(sp)
  8440ec:	0027883a 	mov	r19,zero
  8440f0:	d8002305 	stb	zero,140(sp)
  8440f4:	043fffc4 	movi	r16,-1
  8440f8:	d8002515 	stw	zero,148(sp)
  8440fc:	0023883a 	mov	r17,zero
  844100:	05001604 	movi	r20,88
  844104:	05400244 	movi	r21,9
  844108:	402f883a 	mov	r23,r8
  84410c:	b5800044 	addi	r22,r22,1
  844110:	18bff804 	addi	r2,r3,-32
  844114:	a0827736 	bltu	r20,r2,844af4 <___vfiprintf_internal_r+0xb5c>
  844118:	100490ba 	slli	r2,r2,2
  84411c:	01002134 	movhi	r4,132
  844120:	21104c04 	addi	r4,r4,16688
  844124:	1105883a 	add	r2,r2,r4
  844128:	10800017 	ldw	r2,0(r2)
  84412c:	1000683a 	jmp	r2
  844130:	008447f4 	movhi	r2,4383
  844134:	00844af4 	movhi	r2,4395
  844138:	00844af4 	movhi	r2,4395
  84413c:	00844810 	cmplti	r2,zero,4384
  844140:	00844af4 	movhi	r2,4395
  844144:	00844af4 	movhi	r2,4395
  844148:	00844af4 	movhi	r2,4395
  84414c:	00844af4 	movhi	r2,4395
  844150:	00844af4 	movhi	r2,4395
  844154:	00844af4 	movhi	r2,4395
  844158:	00844a18 	cmpnei	r2,zero,4392
  84415c:	00844a3c 	xorhi	r2,zero,4392
  844160:	00844af4 	movhi	r2,4395
  844164:	00844334 	movhi	r2,4364
  844168:	00844a50 	cmplti	r2,zero,4393
  84416c:	00844af4 	movhi	r2,4395
  844170:	0084481c 	xori	r2,zero,4384
  844174:	00844828 	cmpgeui	r2,zero,4384
  844178:	00844828 	cmpgeui	r2,zero,4384
  84417c:	00844828 	cmpgeui	r2,zero,4384
  844180:	00844828 	cmpgeui	r2,zero,4384
  844184:	00844828 	cmpgeui	r2,zero,4384
  844188:	00844828 	cmpgeui	r2,zero,4384
  84418c:	00844828 	cmpgeui	r2,zero,4384
  844190:	00844828 	cmpgeui	r2,zero,4384
  844194:	00844828 	cmpgeui	r2,zero,4384
  844198:	00844af4 	movhi	r2,4395
  84419c:	00844af4 	movhi	r2,4395
  8441a0:	00844af4 	movhi	r2,4395
  8441a4:	00844af4 	movhi	r2,4395
  8441a8:	00844af4 	movhi	r2,4395
  8441ac:	00844af4 	movhi	r2,4395
  8441b0:	00844af4 	movhi	r2,4395
  8441b4:	00844af4 	movhi	r2,4395
  8441b8:	00844af4 	movhi	r2,4395
  8441bc:	00844af4 	movhi	r2,4395
  8441c0:	00844868 	cmpgeui	r2,zero,4385
  8441c4:	00844af4 	movhi	r2,4395
  8441c8:	00844af4 	movhi	r2,4395
  8441cc:	00844af4 	movhi	r2,4395
  8441d0:	00844af4 	movhi	r2,4395
  8441d4:	00844af4 	movhi	r2,4395
  8441d8:	00844af4 	movhi	r2,4395
  8441dc:	00844af4 	movhi	r2,4395
  8441e0:	00844af4 	movhi	r2,4395
  8441e4:	00844af4 	movhi	r2,4395
  8441e8:	00844af4 	movhi	r2,4395
  8441ec:	008448a4 	muli	r2,zero,4386
  8441f0:	00844af4 	movhi	r2,4395
  8441f4:	00844af4 	movhi	r2,4395
  8441f8:	00844af4 	movhi	r2,4395
  8441fc:	00844af4 	movhi	r2,4395
  844200:	00844af4 	movhi	r2,4395
  844204:	00844900 	call	84490 <OSCtxSw_SWITCH_PC+0x84450>
  844208:	00844af4 	movhi	r2,4395
  84420c:	00844af4 	movhi	r2,4395
  844210:	00844974 	movhi	r2,4389
  844214:	00844af4 	movhi	r2,4395
  844218:	00844af4 	movhi	r2,4395
  84421c:	00844af4 	movhi	r2,4395
  844220:	00844af4 	movhi	r2,4395
  844224:	00844af4 	movhi	r2,4395
  844228:	00844af4 	movhi	r2,4395
  84422c:	00844af4 	movhi	r2,4395
  844230:	00844af4 	movhi	r2,4395
  844234:	00844af4 	movhi	r2,4395
  844238:	00844af4 	movhi	r2,4395
  84423c:	0084471c 	xori	r2,zero,4380
  844240:	0084474c 	andi	r2,zero,4381
  844244:	00844af4 	movhi	r2,4395
  844248:	00844af4 	movhi	r2,4395
  84424c:	00844af4 	movhi	r2,4395
  844250:	00844a9c 	xori	r2,zero,4394
  844254:	0084474c 	andi	r2,zero,4381
  844258:	00844af4 	movhi	r2,4395
  84425c:	00844af4 	movhi	r2,4395
  844260:	008445f4 	movhi	r2,4375
  844264:	00844af4 	movhi	r2,4395
  844268:	00844608 	cmpgei	r2,zero,4376
  84426c:	00844640 	call	84464 <OSCtxSw_SWITCH_PC+0x84424>
  844270:	00844340 	call	84434 <OSCtxSw_SWITCH_PC+0x843f4>
  844274:	008445e8 	cmpgeui	r2,zero,4375
  844278:	00844af4 	movhi	r2,4395
  84427c:	008449b4 	movhi	r2,4390
  844280:	00844af4 	movhi	r2,4395
  844284:	00844a00 	call	844a0 <OSCtxSw_SWITCH_PC+0x84460>
  844288:	00844af4 	movhi	r2,4395
  84428c:	00844af4 	movhi	r2,4395
  844290:	008446c4 	movi	r2,4379
  844294:	42000204 	addi	r8,r8,8
  844298:	d8c02417 	ldw	r3,144(sp)
  84429c:	1c07883a 	add	r3,r3,r16
  8442a0:	d8c02415 	stw	r3,144(sp)
  8442a4:	003f8c06 	br	8440d8 <__alt_mem_epcs_flash_controller_0+0xff83b0d8>
  8442a8:	d9402017 	ldw	r5,128(sp)
  8442ac:	d9002117 	ldw	r4,132(sp)
  8442b0:	083b0300 	call	83b030 <__swsetup_r>
  8442b4:	1003c11e 	bne	r2,zero,8451bc <___vfiprintf_internal_r+0x1224>
  8442b8:	d9402017 	ldw	r5,128(sp)
  8442bc:	00c00284 	movi	r3,10
  8442c0:	2880030b 	ldhu	r2,12(r5)
  8442c4:	1080068c 	andi	r2,r2,26
  8442c8:	10ff581e 	bne	r2,r3,84402c <__alt_mem_epcs_flash_controller_0+0xff83b02c>
  8442cc:	d8c02017 	ldw	r3,128(sp)
  8442d0:	1880038f 	ldh	r2,14(r3)
  8442d4:	103f5516 	blt	r2,zero,84402c <__alt_mem_epcs_flash_controller_0+0xff83b02c>
  8442d8:	d9c02217 	ldw	r7,136(sp)
  8442dc:	d9002117 	ldw	r4,132(sp)
  8442e0:	a80d883a 	mov	r6,r21
  8442e4:	180b883a 	mov	r5,r3
  8442e8:	08454c00 	call	8454c0 <__sbprintf>
  8442ec:	dfc03517 	ldw	ra,212(sp)
  8442f0:	df003417 	ldw	fp,208(sp)
  8442f4:	ddc03317 	ldw	r23,204(sp)
  8442f8:	dd803217 	ldw	r22,200(sp)
  8442fc:	dd403117 	ldw	r21,196(sp)
  844300:	dd003017 	ldw	r20,192(sp)
  844304:	dcc02f17 	ldw	r19,188(sp)
  844308:	dc802e17 	ldw	r18,184(sp)
  84430c:	dc402d17 	ldw	r17,180(sp)
  844310:	dc002c17 	ldw	r16,176(sp)
  844314:	dec03604 	addi	sp,sp,216
  844318:	f800283a 	ret
  84431c:	083274c0 	call	83274c <__sinit>
  844320:	003f2f06 	br	843fe0 <__alt_mem_epcs_flash_controller_0+0xff83afe0>
  844324:	d8c02517 	ldw	r3,148(sp)
  844328:	d8802215 	stw	r2,136(sp)
  84432c:	00c7c83a 	sub	r3,zero,r3
  844330:	d8c02515 	stw	r3,148(sp)
  844334:	8c400114 	ori	r17,r17,4
  844338:	b0c00007 	ldb	r3,0(r22)
  84433c:	003f7306 	br	84410c <__alt_mem_epcs_flash_controller_0+0xff83b10c>
  844340:	00800c04 	movi	r2,48
  844344:	d9402217 	ldw	r5,136(sp)
  844348:	d8801d05 	stb	r2,116(sp)
  84434c:	00801e04 	movi	r2,120
  844350:	d8801d45 	stb	r2,117(sp)
  844354:	d8001d85 	stb	zero,118(sp)
  844358:	b811883a 	mov	r8,r23
  84435c:	28c00104 	addi	r3,r5,4
  844360:	2cc00017 	ldw	r19,0(r5)
  844364:	0029883a 	mov	r20,zero
  844368:	88800094 	ori	r2,r17,2
  84436c:	80032516 	blt	r16,zero,845004 <___vfiprintf_internal_r+0x106c>
  844370:	00bfdfc4 	movi	r2,-129
  844374:	88a2703a 	and	r17,r17,r2
  844378:	d8c02215 	stw	r3,136(sp)
  84437c:	8c400094 	ori	r17,r17,2
  844380:	98032a1e 	bne	r19,zero,84502c <___vfiprintf_internal_r+0x1094>
  844384:	008021b4 	movhi	r2,134
  844388:	10a43a04 	addi	r2,r2,-28440
  84438c:	d8802615 	stw	r2,152(sp)
  844390:	002b883a 	mov	r21,zero
  844394:	8001741e 	bne	r16,zero,844968 <___vfiprintf_internal_r+0x9d0>
  844398:	0021883a 	mov	r16,zero
  84439c:	0029883a 	mov	r20,zero
  8443a0:	ddc01a04 	addi	r23,sp,104
  8443a4:	8027883a 	mov	r19,r16
  8443a8:	8500010e 	bge	r16,r20,8443b0 <___vfiprintf_internal_r+0x418>
  8443ac:	a027883a 	mov	r19,r20
  8443b0:	ad403fcc 	andi	r21,r21,255
  8443b4:	ad40201c 	xori	r21,r21,128
  8443b8:	ad7fe004 	addi	r21,r21,-128
  8443bc:	a8000126 	beq	r21,zero,8443c4 <___vfiprintf_internal_r+0x42c>
  8443c0:	9cc00044 	addi	r19,r19,1
  8443c4:	89c0008c 	andi	r7,r17,2
  8443c8:	38000126 	beq	r7,zero,8443d0 <___vfiprintf_internal_r+0x438>
  8443cc:	9cc00084 	addi	r19,r19,2
  8443d0:	88c0210c 	andi	r3,r17,132
  8443d4:	1801dd1e 	bne	r3,zero,844b4c <___vfiprintf_internal_r+0xbb4>
  8443d8:	d9402517 	ldw	r5,148(sp)
  8443dc:	2cebc83a 	sub	r21,r5,r19
  8443e0:	0541da0e 	bge	zero,r21,844b4c <___vfiprintf_internal_r+0xbb4>
  8443e4:	07000404 	movi	fp,16
  8443e8:	d8801c17 	ldw	r2,112(sp)
  8443ec:	e543be0e 	bge	fp,r21,8452e8 <___vfiprintf_internal_r+0x1350>
  8443f0:	014021b4 	movhi	r5,134
  8443f4:	29657984 	addi	r5,r5,-27162
  8443f8:	dc002715 	stw	r16,156(sp)
  8443fc:	d9801b17 	ldw	r6,108(sp)
  844400:	a821883a 	mov	r16,r21
  844404:	d9402315 	stw	r5,140(sp)
  844408:	028001c4 	movi	r10,7
  84440c:	d9c02915 	stw	r7,164(sp)
  844410:	182b883a 	mov	r21,r3
  844414:	00000506 	br	84442c <___vfiprintf_internal_r+0x494>
  844418:	31000084 	addi	r4,r6,2
  84441c:	42000204 	addi	r8,r8,8
  844420:	180d883a 	mov	r6,r3
  844424:	843ffc04 	addi	r16,r16,-16
  844428:	e4000f0e 	bge	fp,r16,844468 <___vfiprintf_internal_r+0x4d0>
  84442c:	010021b4 	movhi	r4,134
  844430:	10800404 	addi	r2,r2,16
  844434:	30c00044 	addi	r3,r6,1
  844438:	21257984 	addi	r4,r4,-27162
  84443c:	41000015 	stw	r4,0(r8)
  844440:	47000115 	stw	fp,4(r8)
  844444:	d8801c15 	stw	r2,112(sp)
  844448:	d8c01b15 	stw	r3,108(sp)
  84444c:	50fff20e 	bge	r10,r3,844418 <__alt_mem_epcs_flash_controller_0+0xff83b418>
  844450:	1001b21e 	bne	r2,zero,844b1c <___vfiprintf_internal_r+0xb84>
  844454:	843ffc04 	addi	r16,r16,-16
  844458:	000d883a 	mov	r6,zero
  84445c:	01000044 	movi	r4,1
  844460:	d811883a 	mov	r8,sp
  844464:	e43ff116 	blt	fp,r16,84442c <__alt_mem_epcs_flash_controller_0+0xff83b42c>
  844468:	a807883a 	mov	r3,r21
  84446c:	d9c02917 	ldw	r7,164(sp)
  844470:	802b883a 	mov	r21,r16
  844474:	dc002717 	ldw	r16,156(sp)
  844478:	d9402317 	ldw	r5,140(sp)
  84447c:	a885883a 	add	r2,r21,r2
  844480:	45400115 	stw	r21,4(r8)
  844484:	41400015 	stw	r5,0(r8)
  844488:	d8801c15 	stw	r2,112(sp)
  84448c:	d9001b15 	stw	r4,108(sp)
  844490:	014001c4 	movi	r5,7
  844494:	29026216 	blt	r5,r4,844e20 <___vfiprintf_internal_r+0xe88>
  844498:	d9801d87 	ldb	r6,118(sp)
  84449c:	42000204 	addi	r8,r8,8
  8444a0:	21400044 	addi	r5,r4,1
  8444a4:	3001ae1e 	bne	r6,zero,844b60 <___vfiprintf_internal_r+0xbc8>
  8444a8:	3801bb26 	beq	r7,zero,844b98 <___vfiprintf_internal_r+0xc00>
  8444ac:	d9001d04 	addi	r4,sp,116
  8444b0:	10800084 	addi	r2,r2,2
  8444b4:	41000015 	stw	r4,0(r8)
  8444b8:	01000084 	movi	r4,2
  8444bc:	41000115 	stw	r4,4(r8)
  8444c0:	d8801c15 	stw	r2,112(sp)
  8444c4:	d9401b15 	stw	r5,108(sp)
  8444c8:	010001c4 	movi	r4,7
  8444cc:	2142680e 	bge	r4,r5,844e70 <___vfiprintf_internal_r+0xed8>
  8444d0:	1002b11e 	bne	r2,zero,844f98 <___vfiprintf_internal_r+0x1000>
  8444d4:	01802004 	movi	r6,128
  8444d8:	01400044 	movi	r5,1
  8444dc:	0009883a 	mov	r4,zero
  8444e0:	d811883a 	mov	r8,sp
  8444e4:	1981ae1e 	bne	r3,r6,844ba0 <___vfiprintf_internal_r+0xc08>
  8444e8:	d8c02517 	ldw	r3,148(sp)
  8444ec:	1cf9c83a 	sub	fp,r3,r19
  8444f0:	0701ab0e 	bge	zero,fp,844ba0 <___vfiprintf_internal_r+0xc08>
  8444f4:	05400404 	movi	r21,16
  8444f8:	af03a90e 	bge	r21,fp,8453a0 <___vfiprintf_internal_r+0x1408>
  8444fc:	014021b4 	movhi	r5,134
  844500:	29657584 	addi	r5,r5,-27178
  844504:	d9402315 	stw	r5,140(sp)
  844508:	01c001c4 	movi	r7,7
  84450c:	00000506 	br	844524 <___vfiprintf_internal_r+0x58c>
  844510:	21800084 	addi	r6,r4,2
  844514:	42000204 	addi	r8,r8,8
  844518:	1809883a 	mov	r4,r3
  84451c:	e73ffc04 	addi	fp,fp,-16
  844520:	af000d0e 	bge	r21,fp,844558 <___vfiprintf_internal_r+0x5c0>
  844524:	10800404 	addi	r2,r2,16
  844528:	20c00044 	addi	r3,r4,1
  84452c:	44800015 	stw	r18,0(r8)
  844530:	45400115 	stw	r21,4(r8)
  844534:	d8801c15 	stw	r2,112(sp)
  844538:	d8c01b15 	stw	r3,108(sp)
  84453c:	38fff40e 	bge	r7,r3,844510 <__alt_mem_epcs_flash_controller_0+0xff83b510>
  844540:	10022b1e 	bne	r2,zero,844df0 <___vfiprintf_internal_r+0xe58>
  844544:	e73ffc04 	addi	fp,fp,-16
  844548:	01800044 	movi	r6,1
  84454c:	0009883a 	mov	r4,zero
  844550:	d811883a 	mov	r8,sp
  844554:	af3ff316 	blt	r21,fp,844524 <__alt_mem_epcs_flash_controller_0+0xff83b524>
  844558:	d8c02317 	ldw	r3,140(sp)
  84455c:	1705883a 	add	r2,r2,fp
  844560:	47000115 	stw	fp,4(r8)
  844564:	40c00015 	stw	r3,0(r8)
  844568:	d8801c15 	stw	r2,112(sp)
  84456c:	d9801b15 	stw	r6,108(sp)
  844570:	00c001c4 	movi	r3,7
  844574:	19829416 	blt	r3,r6,844fc8 <___vfiprintf_internal_r+0x1030>
  844578:	8521c83a 	sub	r16,r16,r20
  84457c:	42000204 	addi	r8,r8,8
  844580:	31400044 	addi	r5,r6,1
  844584:	3009883a 	mov	r4,r6
  844588:	04018716 	blt	zero,r16,844ba8 <___vfiprintf_internal_r+0xc10>
  84458c:	a085883a 	add	r2,r20,r2
  844590:	45c00015 	stw	r23,0(r8)
  844594:	45000115 	stw	r20,4(r8)
  844598:	d8801c15 	stw	r2,112(sp)
  84459c:	d9401b15 	stw	r5,108(sp)
  8445a0:	00c001c4 	movi	r3,7
  8445a4:	1941c20e 	bge	r3,r5,844cb0 <___vfiprintf_internal_r+0xd18>
  8445a8:	1002531e 	bne	r2,zero,844ef8 <___vfiprintf_internal_r+0xf60>
  8445ac:	d8001b15 	stw	zero,108(sp)
  8445b0:	8c40010c 	andi	r17,r17,4
  8445b4:	88023226 	beq	r17,zero,844e80 <___vfiprintf_internal_r+0xee8>
  8445b8:	d9002517 	ldw	r4,148(sp)
  8445bc:	24e3c83a 	sub	r17,r4,r19
  8445c0:	04432916 	blt	zero,r17,845268 <___vfiprintf_internal_r+0x12d0>
  8445c4:	d8802517 	ldw	r2,148(sp)
  8445c8:	14c0010e 	bge	r2,r19,8445d0 <___vfiprintf_internal_r+0x638>
  8445cc:	9805883a 	mov	r2,r19
  8445d0:	d8c02417 	ldw	r3,144(sp)
  8445d4:	1887883a 	add	r3,r3,r2
  8445d8:	d8c02415 	stw	r3,144(sp)
  8445dc:	d8001b15 	stw	zero,108(sp)
  8445e0:	d811883a 	mov	r8,sp
  8445e4:	003ea006 	br	844068 <__alt_mem_epcs_flash_controller_0+0xff83b068>
  8445e8:	8c400814 	ori	r17,r17,32
  8445ec:	b0c00007 	ldb	r3,0(r22)
  8445f0:	003ec606 	br	84410c <__alt_mem_epcs_flash_controller_0+0xff83b10c>
  8445f4:	b0c00007 	ldb	r3,0(r22)
  8445f8:	00801b04 	movi	r2,108
  8445fc:	18832026 	beq	r3,r2,845280 <___vfiprintf_internal_r+0x12e8>
  844600:	8c400414 	ori	r17,r17,16
  844604:	003ec106 	br	84410c <__alt_mem_epcs_flash_controller_0+0xff83b10c>
  844608:	9cc03fcc 	andi	r19,r19,255
  84460c:	b811883a 	mov	r8,r23
  844610:	9803981e 	bne	r19,zero,845474 <___vfiprintf_internal_r+0x14dc>
  844614:	8880080c 	andi	r2,r17,32
  844618:	1002be26 	beq	r2,zero,845114 <___vfiprintf_internal_r+0x117c>
  84461c:	d9002217 	ldw	r4,136(sp)
  844620:	d9402417 	ldw	r5,144(sp)
  844624:	20800017 	ldw	r2,0(r4)
  844628:	2807d7fa 	srai	r3,r5,31
  84462c:	21000104 	addi	r4,r4,4
  844630:	d9002215 	stw	r4,136(sp)
  844634:	11400015 	stw	r5,0(r2)
  844638:	10c00115 	stw	r3,4(r2)
  84463c:	003e8a06 	br	844068 <__alt_mem_epcs_flash_controller_0+0xff83b068>
  844640:	9cc03fcc 	andi	r19,r19,255
  844644:	b811883a 	mov	r8,r23
  844648:	9803871e 	bne	r19,zero,845468 <___vfiprintf_internal_r+0x14d0>
  84464c:	8880080c 	andi	r2,r17,32
  844650:	10009a26 	beq	r2,zero,8448bc <___vfiprintf_internal_r+0x924>
  844654:	d9002217 	ldw	r4,136(sp)
  844658:	d8001d85 	stb	zero,118(sp)
  84465c:	20800204 	addi	r2,r4,8
  844660:	24c00017 	ldw	r19,0(r4)
  844664:	25000117 	ldw	r20,4(r4)
  844668:	8002a416 	blt	r16,zero,8450fc <___vfiprintf_internal_r+0x1164>
  84466c:	013fdfc4 	movi	r4,-129
  844670:	9d06b03a 	or	r3,r19,r20
  844674:	d8802215 	stw	r2,136(sp)
  844678:	8922703a 	and	r17,r17,r4
  84467c:	18009b26 	beq	r3,zero,8448ec <___vfiprintf_internal_r+0x954>
  844680:	002b883a 	mov	r21,zero
  844684:	ddc01a04 	addi	r23,sp,104
  844688:	9806d0fa 	srli	r3,r19,3
  84468c:	a008977a 	slli	r4,r20,29
  844690:	a028d0fa 	srli	r20,r20,3
  844694:	9cc001cc 	andi	r19,r19,7
  844698:	98800c04 	addi	r2,r19,48
  84469c:	bdffffc4 	addi	r23,r23,-1
  8446a0:	20e6b03a 	or	r19,r4,r3
  8446a4:	b8800005 	stb	r2,0(r23)
  8446a8:	9d06b03a 	or	r3,r19,r20
  8446ac:	183ff61e 	bne	r3,zero,844688 <__alt_mem_epcs_flash_controller_0+0xff83b688>
  8446b0:	88c0004c 	andi	r3,r17,1
  8446b4:	18021f1e 	bne	r3,zero,844f34 <___vfiprintf_internal_r+0xf9c>
  8446b8:	d9401e17 	ldw	r5,120(sp)
  8446bc:	2de9c83a 	sub	r20,r5,r23
  8446c0:	003f3806 	br	8443a4 <__alt_mem_epcs_flash_controller_0+0xff83b3a4>
  8446c4:	9cc03fcc 	andi	r19,r19,255
  8446c8:	b811883a 	mov	r8,r23
  8446cc:	98034f1e 	bne	r19,zero,84540c <___vfiprintf_internal_r+0x1474>
  8446d0:	008021b4 	movhi	r2,134
  8446d4:	10a43a04 	addi	r2,r2,-28440
  8446d8:	d8802615 	stw	r2,152(sp)
  8446dc:	8880080c 	andi	r2,r17,32
  8446e0:	1000ac26 	beq	r2,zero,844994 <___vfiprintf_internal_r+0x9fc>
  8446e4:	d9002217 	ldw	r4,136(sp)
  8446e8:	24c00017 	ldw	r19,0(r4)
  8446ec:	25000117 	ldw	r20,4(r4)
  8446f0:	21000204 	addi	r4,r4,8
  8446f4:	d9002215 	stw	r4,136(sp)
  8446f8:	8880004c 	andi	r2,r17,1
  8446fc:	1001e726 	beq	r2,zero,844e9c <___vfiprintf_internal_r+0xf04>
  844700:	9d04b03a 	or	r2,r19,r20
  844704:	10025c1e 	bne	r2,zero,845078 <___vfiprintf_internal_r+0x10e0>
  844708:	d8001d85 	stb	zero,118(sp)
  84470c:	80024416 	blt	r16,zero,845020 <___vfiprintf_internal_r+0x1088>
  844710:	00bfdfc4 	movi	r2,-129
  844714:	88a2703a 	and	r17,r17,r2
  844718:	003f1d06 	br	844390 <__alt_mem_epcs_flash_controller_0+0xff83b390>
  84471c:	d8c02217 	ldw	r3,136(sp)
  844720:	04c00044 	movi	r19,1
  844724:	b811883a 	mov	r8,r23
  844728:	18800017 	ldw	r2,0(r3)
  84472c:	18c00104 	addi	r3,r3,4
  844730:	d8001d85 	stb	zero,118(sp)
  844734:	d8801005 	stb	r2,64(sp)
  844738:	d8c02215 	stw	r3,136(sp)
  84473c:	9829883a 	mov	r20,r19
  844740:	ddc01004 	addi	r23,sp,64
  844744:	0021883a 	mov	r16,zero
  844748:	003f1e06 	br	8443c4 <__alt_mem_epcs_flash_controller_0+0xff83b3c4>
  84474c:	9cc03fcc 	andi	r19,r19,255
  844750:	b811883a 	mov	r8,r23
  844754:	9803331e 	bne	r19,zero,845424 <___vfiprintf_internal_r+0x148c>
  844758:	8880080c 	andi	r2,r17,32
  84475c:	10004826 	beq	r2,zero,844880 <___vfiprintf_internal_r+0x8e8>
  844760:	d9002217 	ldw	r4,136(sp)
  844764:	20800117 	ldw	r2,4(r4)
  844768:	24c00017 	ldw	r19,0(r4)
  84476c:	21000204 	addi	r4,r4,8
  844770:	d9002215 	stw	r4,136(sp)
  844774:	1029883a 	mov	r20,r2
  844778:	10024c16 	blt	r2,zero,8450ac <___vfiprintf_internal_r+0x1114>
  84477c:	dd401d83 	ldbu	r21,118(sp)
  844780:	80007116 	blt	r16,zero,844948 <___vfiprintf_internal_r+0x9b0>
  844784:	00ffdfc4 	movi	r3,-129
  844788:	9d04b03a 	or	r2,r19,r20
  84478c:	88e2703a 	and	r17,r17,r3
  844790:	1000d126 	beq	r2,zero,844ad8 <___vfiprintf_internal_r+0xb40>
  844794:	a0023526 	beq	r20,zero,84506c <___vfiprintf_internal_r+0x10d4>
  844798:	ddc01a04 	addi	r23,sp,104
  84479c:	4039883a 	mov	fp,r8
  8447a0:	9809883a 	mov	r4,r19
  8447a4:	a00b883a 	mov	r5,r20
  8447a8:	01800284 	movi	r6,10
  8447ac:	000f883a 	mov	r7,zero
  8447b0:	0846d700 	call	846d70 <__umoddi3>
  8447b4:	10800c04 	addi	r2,r2,48
  8447b8:	bdffffc4 	addi	r23,r23,-1
  8447bc:	9809883a 	mov	r4,r19
  8447c0:	a00b883a 	mov	r5,r20
  8447c4:	b8800005 	stb	r2,0(r23)
  8447c8:	01800284 	movi	r6,10
  8447cc:	000f883a 	mov	r7,zero
  8447d0:	08467740 	call	846774 <__udivdi3>
  8447d4:	1027883a 	mov	r19,r2
  8447d8:	10c4b03a 	or	r2,r2,r3
  8447dc:	1829883a 	mov	r20,r3
  8447e0:	103fef1e 	bne	r2,zero,8447a0 <__alt_mem_epcs_flash_controller_0+0xff83b7a0>
  8447e4:	d9001e17 	ldw	r4,120(sp)
  8447e8:	e011883a 	mov	r8,fp
  8447ec:	25e9c83a 	sub	r20,r4,r23
  8447f0:	003eec06 	br	8443a4 <__alt_mem_epcs_flash_controller_0+0xff83b3a4>
  8447f4:	d8802307 	ldb	r2,140(sp)
  8447f8:	1002361e 	bne	r2,zero,8450d4 <___vfiprintf_internal_r+0x113c>
  8447fc:	00c00804 	movi	r3,32
  844800:	d8c02305 	stb	r3,140(sp)
  844804:	04c00044 	movi	r19,1
  844808:	b0c00007 	ldb	r3,0(r22)
  84480c:	003e3f06 	br	84410c <__alt_mem_epcs_flash_controller_0+0xff83b10c>
  844810:	8c400054 	ori	r17,r17,1
  844814:	b0c00007 	ldb	r3,0(r22)
  844818:	003e3c06 	br	84410c <__alt_mem_epcs_flash_controller_0+0xff83b10c>
  84481c:	8c402014 	ori	r17,r17,128
  844820:	b0c00007 	ldb	r3,0(r22)
  844824:	003e3906 	br	84410c <__alt_mem_epcs_flash_controller_0+0xff83b10c>
  844828:	dc002715 	stw	r16,156(sp)
  84482c:	d8002515 	stw	zero,148(sp)
  844830:	1f3ff404 	addi	fp,r3,-48
  844834:	0009883a 	mov	r4,zero
  844838:	b021883a 	mov	r16,r22
  84483c:	01400284 	movi	r5,10
  844840:	08305040 	call	830504 <__mulsi3>
  844844:	80c00007 	ldb	r3,0(r16)
  844848:	e089883a 	add	r4,fp,r2
  84484c:	b5800044 	addi	r22,r22,1
  844850:	1f3ff404 	addi	fp,r3,-48
  844854:	b021883a 	mov	r16,r22
  844858:	af3ff82e 	bgeu	r21,fp,84483c <__alt_mem_epcs_flash_controller_0+0xff83b83c>
  84485c:	d9002515 	stw	r4,148(sp)
  844860:	dc002717 	ldw	r16,156(sp)
  844864:	003e2a06 	br	844110 <__alt_mem_epcs_flash_controller_0+0xff83b110>
  844868:	9cc03fcc 	andi	r19,r19,255
  84486c:	b811883a 	mov	r8,r23
  844870:	9802e91e 	bne	r19,zero,845418 <___vfiprintf_internal_r+0x1480>
  844874:	8c400414 	ori	r17,r17,16
  844878:	8880080c 	andi	r2,r17,32
  84487c:	103fb81e 	bne	r2,zero,844760 <__alt_mem_epcs_flash_controller_0+0xff83b760>
  844880:	8880040c 	andi	r2,r17,16
  844884:	10022e26 	beq	r2,zero,845140 <___vfiprintf_internal_r+0x11a8>
  844888:	d9402217 	ldw	r5,136(sp)
  84488c:	2cc00017 	ldw	r19,0(r5)
  844890:	29400104 	addi	r5,r5,4
  844894:	d9402215 	stw	r5,136(sp)
  844898:	9829d7fa 	srai	r20,r19,31
  84489c:	a005883a 	mov	r2,r20
  8448a0:	003fb506 	br	844778 <__alt_mem_epcs_flash_controller_0+0xff83b778>
  8448a4:	9cc03fcc 	andi	r19,r19,255
  8448a8:	b811883a 	mov	r8,r23
  8448ac:	9802fa1e 	bne	r19,zero,845498 <___vfiprintf_internal_r+0x1500>
  8448b0:	8c400414 	ori	r17,r17,16
  8448b4:	8880080c 	andi	r2,r17,32
  8448b8:	103f661e 	bne	r2,zero,844654 <__alt_mem_epcs_flash_controller_0+0xff83b654>
  8448bc:	8880040c 	andi	r2,r17,16
  8448c0:	10020626 	beq	r2,zero,8450dc <___vfiprintf_internal_r+0x1144>
  8448c4:	d9402217 	ldw	r5,136(sp)
  8448c8:	d8001d85 	stb	zero,118(sp)
  8448cc:	0029883a 	mov	r20,zero
  8448d0:	28800104 	addi	r2,r5,4
  8448d4:	2cc00017 	ldw	r19,0(r5)
  8448d8:	80020816 	blt	r16,zero,8450fc <___vfiprintf_internal_r+0x1164>
  8448dc:	00ffdfc4 	movi	r3,-129
  8448e0:	d8802215 	stw	r2,136(sp)
  8448e4:	88e2703a 	and	r17,r17,r3
  8448e8:	983f651e 	bne	r19,zero,844680 <__alt_mem_epcs_flash_controller_0+0xff83b680>
  8448ec:	002b883a 	mov	r21,zero
  8448f0:	8002cf26 	beq	r16,zero,845430 <___vfiprintf_internal_r+0x1498>
  8448f4:	0027883a 	mov	r19,zero
  8448f8:	0029883a 	mov	r20,zero
  8448fc:	003f6106 	br	844684 <__alt_mem_epcs_flash_controller_0+0xff83b684>
  844900:	9cc03fcc 	andi	r19,r19,255
  844904:	b811883a 	mov	r8,r23
  844908:	9802e01e 	bne	r19,zero,84548c <___vfiprintf_internal_r+0x14f4>
  84490c:	8c400414 	ori	r17,r17,16
  844910:	8880080c 	andi	r2,r17,32
  844914:	1000641e 	bne	r2,zero,844aa8 <___vfiprintf_internal_r+0xb10>
  844918:	8880040c 	andi	r2,r17,16
  84491c:	1001c81e 	bne	r2,zero,845040 <___vfiprintf_internal_r+0x10a8>
  844920:	8880100c 	andi	r2,r17,64
  844924:	d8001d85 	stb	zero,118(sp)
  844928:	1002281e 	bne	r2,zero,8451cc <___vfiprintf_internal_r+0x1234>
  84492c:	d9002217 	ldw	r4,136(sp)
  844930:	0029883a 	mov	r20,zero
  844934:	20800104 	addi	r2,r4,4
  844938:	24c00017 	ldw	r19,0(r4)
  84493c:	8001c60e 	bge	r16,zero,845058 <___vfiprintf_internal_r+0x10c0>
  844940:	d8802215 	stw	r2,136(sp)
  844944:	002b883a 	mov	r21,zero
  844948:	9d04b03a 	or	r2,r19,r20
  84494c:	103f911e 	bne	r2,zero,844794 <__alt_mem_epcs_flash_controller_0+0xff83b794>
  844950:	00800044 	movi	r2,1
  844954:	10803fcc 	andi	r2,r2,255
  844958:	00c00044 	movi	r3,1
  84495c:	10c05f26 	beq	r2,r3,844adc <___vfiprintf_internal_r+0xb44>
  844960:	00c00084 	movi	r3,2
  844964:	10ffe31e 	bne	r2,r3,8448f4 <__alt_mem_epcs_flash_controller_0+0xff83b8f4>
  844968:	0027883a 	mov	r19,zero
  84496c:	0029883a 	mov	r20,zero
  844970:	00015106 	br	844eb8 <___vfiprintf_internal_r+0xf20>
  844974:	9cc03fcc 	andi	r19,r19,255
  844978:	b811883a 	mov	r8,r23
  84497c:	9802c01e 	bne	r19,zero,845480 <___vfiprintf_internal_r+0x14e8>
  844980:	014021b4 	movhi	r5,134
  844984:	29643504 	addi	r5,r5,-28460
  844988:	d9402615 	stw	r5,152(sp)
  84498c:	8880080c 	andi	r2,r17,32
  844990:	103f541e 	bne	r2,zero,8446e4 <__alt_mem_epcs_flash_controller_0+0xff83b6e4>
  844994:	8880040c 	andi	r2,r17,16
  844998:	1001f226 	beq	r2,zero,845164 <___vfiprintf_internal_r+0x11cc>
  84499c:	d9402217 	ldw	r5,136(sp)
  8449a0:	0029883a 	mov	r20,zero
  8449a4:	2cc00017 	ldw	r19,0(r5)
  8449a8:	29400104 	addi	r5,r5,4
  8449ac:	d9402215 	stw	r5,136(sp)
  8449b0:	003f5106 	br	8446f8 <__alt_mem_epcs_flash_controller_0+0xff83b6f8>
  8449b4:	d8c02217 	ldw	r3,136(sp)
  8449b8:	b811883a 	mov	r8,r23
  8449bc:	d8001d85 	stb	zero,118(sp)
  8449c0:	1dc00017 	ldw	r23,0(r3)
  8449c4:	1f000104 	addi	fp,r3,4
  8449c8:	b8025926 	beq	r23,zero,845330 <___vfiprintf_internal_r+0x1398>
  8449cc:	80023316 	blt	r16,zero,84529c <___vfiprintf_internal_r+0x1304>
  8449d0:	800d883a 	mov	r6,r16
  8449d4:	000b883a 	mov	r5,zero
  8449d8:	b809883a 	mov	r4,r23
  8449dc:	da002a15 	stw	r8,168(sp)
  8449e0:	083d5600 	call	83d560 <memchr>
  8449e4:	da002a17 	ldw	r8,168(sp)
  8449e8:	10026826 	beq	r2,zero,84538c <___vfiprintf_internal_r+0x13f4>
  8449ec:	15e9c83a 	sub	r20,r2,r23
  8449f0:	dd401d83 	ldbu	r21,118(sp)
  8449f4:	df002215 	stw	fp,136(sp)
  8449f8:	0021883a 	mov	r16,zero
  8449fc:	003e6906 	br	8443a4 <__alt_mem_epcs_flash_controller_0+0xff83b3a4>
  844a00:	9cc03fcc 	andi	r19,r19,255
  844a04:	b811883a 	mov	r8,r23
  844a08:	983fc126 	beq	r19,zero,844910 <__alt_mem_epcs_flash_controller_0+0xff83b910>
  844a0c:	d8c02303 	ldbu	r3,140(sp)
  844a10:	d8c01d85 	stb	r3,118(sp)
  844a14:	003fbe06 	br	844910 <__alt_mem_epcs_flash_controller_0+0xff83b910>
  844a18:	d9002217 	ldw	r4,136(sp)
  844a1c:	d9402217 	ldw	r5,136(sp)
  844a20:	21000017 	ldw	r4,0(r4)
  844a24:	28800104 	addi	r2,r5,4
  844a28:	d9002515 	stw	r4,148(sp)
  844a2c:	203e3d16 	blt	r4,zero,844324 <__alt_mem_epcs_flash_controller_0+0xff83b324>
  844a30:	d8802215 	stw	r2,136(sp)
  844a34:	b0c00007 	ldb	r3,0(r22)
  844a38:	003db406 	br	84410c <__alt_mem_epcs_flash_controller_0+0xff83b10c>
  844a3c:	00c00ac4 	movi	r3,43
  844a40:	d8c02305 	stb	r3,140(sp)
  844a44:	04c00044 	movi	r19,1
  844a48:	b0c00007 	ldb	r3,0(r22)
  844a4c:	003daf06 	br	84410c <__alt_mem_epcs_flash_controller_0+0xff83b10c>
  844a50:	b0c00007 	ldb	r3,0(r22)
  844a54:	01000a84 	movi	r4,42
  844a58:	b4000044 	addi	r16,r22,1
  844a5c:	19025e26 	beq	r3,r4,8453d8 <___vfiprintf_internal_r+0x1440>
  844a60:	1f3ff404 	addi	fp,r3,-48
  844a64:	0009883a 	mov	r4,zero
  844a68:	af025236 	bltu	r21,fp,8453b4 <___vfiprintf_internal_r+0x141c>
  844a6c:	01400284 	movi	r5,10
  844a70:	08305040 	call	830504 <__mulsi3>
  844a74:	80c00007 	ldb	r3,0(r16)
  844a78:	1709883a 	add	r4,r2,fp
  844a7c:	85800044 	addi	r22,r16,1
  844a80:	1f3ff404 	addi	fp,r3,-48
  844a84:	b021883a 	mov	r16,r22
  844a88:	af3ff82e 	bgeu	r21,fp,844a6c <__alt_mem_epcs_flash_controller_0+0xff83ba6c>
  844a8c:	2021883a 	mov	r16,r4
  844a90:	203d9f0e 	bge	r4,zero,844110 <__alt_mem_epcs_flash_controller_0+0xff83b110>
  844a94:	043fffc4 	movi	r16,-1
  844a98:	003d9d06 	br	844110 <__alt_mem_epcs_flash_controller_0+0xff83b110>
  844a9c:	8c401014 	ori	r17,r17,64
  844aa0:	b0c00007 	ldb	r3,0(r22)
  844aa4:	003d9906 	br	84410c <__alt_mem_epcs_flash_controller_0+0xff83b10c>
  844aa8:	d9002217 	ldw	r4,136(sp)
  844aac:	d8001d85 	stb	zero,118(sp)
  844ab0:	20c00204 	addi	r3,r4,8
  844ab4:	24c00017 	ldw	r19,0(r4)
  844ab8:	25000117 	ldw	r20,4(r4)
  844abc:	8001e716 	blt	r16,zero,84525c <___vfiprintf_internal_r+0x12c4>
  844ac0:	013fdfc4 	movi	r4,-129
  844ac4:	9d04b03a 	or	r2,r19,r20
  844ac8:	d8c02215 	stw	r3,136(sp)
  844acc:	8922703a 	and	r17,r17,r4
  844ad0:	002b883a 	mov	r21,zero
  844ad4:	103f2f1e 	bne	r2,zero,844794 <__alt_mem_epcs_flash_controller_0+0xff83b794>
  844ad8:	803e2f26 	beq	r16,zero,844398 <__alt_mem_epcs_flash_controller_0+0xff83b398>
  844adc:	0027883a 	mov	r19,zero
  844ae0:	9cc00c04 	addi	r19,r19,48
  844ae4:	dcc019c5 	stb	r19,103(sp)
  844ae8:	dd002817 	ldw	r20,160(sp)
  844aec:	ddc019c4 	addi	r23,sp,103
  844af0:	003e2c06 	br	8443a4 <__alt_mem_epcs_flash_controller_0+0xff83b3a4>
  844af4:	9cc03fcc 	andi	r19,r19,255
  844af8:	b811883a 	mov	r8,r23
  844afc:	9802571e 	bne	r19,zero,84545c <___vfiprintf_internal_r+0x14c4>
  844b00:	18005726 	beq	r3,zero,844c60 <___vfiprintf_internal_r+0xcc8>
  844b04:	04c00044 	movi	r19,1
  844b08:	d8c01005 	stb	r3,64(sp)
  844b0c:	d8001d85 	stb	zero,118(sp)
  844b10:	9829883a 	mov	r20,r19
  844b14:	ddc01004 	addi	r23,sp,64
  844b18:	003f0a06 	br	844744 <__alt_mem_epcs_flash_controller_0+0xff83b744>
  844b1c:	d9402017 	ldw	r5,128(sp)
  844b20:	d9002117 	ldw	r4,132(sp)
  844b24:	d9801a04 	addi	r6,sp,104
  844b28:	da802a15 	stw	r10,168(sp)
  844b2c:	0843e840 	call	843e84 <__sprint_r.part.0>
  844b30:	da802a17 	ldw	r10,168(sp)
  844b34:	1000501e 	bne	r2,zero,844c78 <___vfiprintf_internal_r+0xce0>
  844b38:	d9801b17 	ldw	r6,108(sp)
  844b3c:	d8801c17 	ldw	r2,112(sp)
  844b40:	d811883a 	mov	r8,sp
  844b44:	31000044 	addi	r4,r6,1
  844b48:	003e3606 	br	844424 <__alt_mem_epcs_flash_controller_0+0xff83b424>
  844b4c:	d9001b17 	ldw	r4,108(sp)
  844b50:	d8801c17 	ldw	r2,112(sp)
  844b54:	21400044 	addi	r5,r4,1
  844b58:	d9801d87 	ldb	r6,118(sp)
  844b5c:	303e5226 	beq	r6,zero,8444a8 <__alt_mem_epcs_flash_controller_0+0xff83b4a8>
  844b60:	01800044 	movi	r6,1
  844b64:	d9001d84 	addi	r4,sp,118
  844b68:	1185883a 	add	r2,r2,r6
  844b6c:	41000015 	stw	r4,0(r8)
  844b70:	41800115 	stw	r6,4(r8)
  844b74:	d8801c15 	stw	r2,112(sp)
  844b78:	d9401b15 	stw	r5,108(sp)
  844b7c:	010001c4 	movi	r4,7
  844b80:	2140b00e 	bge	r4,r5,844e44 <___vfiprintf_internal_r+0xeac>
  844b84:	1000f61e 	bne	r2,zero,844f60 <___vfiprintf_internal_r+0xfc8>
  844b88:	3800b31e 	bne	r7,zero,844e58 <___vfiprintf_internal_r+0xec0>
  844b8c:	0009883a 	mov	r4,zero
  844b90:	300b883a 	mov	r5,r6
  844b94:	d811883a 	mov	r8,sp
  844b98:	01802004 	movi	r6,128
  844b9c:	19be5226 	beq	r3,r6,8444e8 <__alt_mem_epcs_flash_controller_0+0xff83b4e8>
  844ba0:	8521c83a 	sub	r16,r16,r20
  844ba4:	043e790e 	bge	zero,r16,84458c <__alt_mem_epcs_flash_controller_0+0xff83b58c>
  844ba8:	05400404 	movi	r21,16
  844bac:	ac01b00e 	bge	r21,r16,845270 <___vfiprintf_internal_r+0x12d8>
  844bb0:	014021b4 	movhi	r5,134
  844bb4:	29657584 	addi	r5,r5,-27178
  844bb8:	d9402315 	stw	r5,140(sp)
  844bbc:	070001c4 	movi	fp,7
  844bc0:	00000506 	br	844bd8 <___vfiprintf_internal_r+0xc40>
  844bc4:	21400084 	addi	r5,r4,2
  844bc8:	42000204 	addi	r8,r8,8
  844bcc:	1809883a 	mov	r4,r3
  844bd0:	843ffc04 	addi	r16,r16,-16
  844bd4:	ac000d0e 	bge	r21,r16,844c0c <___vfiprintf_internal_r+0xc74>
  844bd8:	10800404 	addi	r2,r2,16
  844bdc:	20c00044 	addi	r3,r4,1
  844be0:	44800015 	stw	r18,0(r8)
  844be4:	45400115 	stw	r21,4(r8)
  844be8:	d8801c15 	stw	r2,112(sp)
  844bec:	d8c01b15 	stw	r3,108(sp)
  844bf0:	e0fff40e 	bge	fp,r3,844bc4 <__alt_mem_epcs_flash_controller_0+0xff83bbc4>
  844bf4:	1000101e 	bne	r2,zero,844c38 <___vfiprintf_internal_r+0xca0>
  844bf8:	843ffc04 	addi	r16,r16,-16
  844bfc:	01400044 	movi	r5,1
  844c00:	0009883a 	mov	r4,zero
  844c04:	d811883a 	mov	r8,sp
  844c08:	ac3ff316 	blt	r21,r16,844bd8 <__alt_mem_epcs_flash_controller_0+0xff83bbd8>
  844c0c:	d8c02317 	ldw	r3,140(sp)
  844c10:	1405883a 	add	r2,r2,r16
  844c14:	44000115 	stw	r16,4(r8)
  844c18:	40c00015 	stw	r3,0(r8)
  844c1c:	d8801c15 	stw	r2,112(sp)
  844c20:	d9401b15 	stw	r5,108(sp)
  844c24:	00c001c4 	movi	r3,7
  844c28:	19401916 	blt	r3,r5,844c90 <___vfiprintf_internal_r+0xcf8>
  844c2c:	42000204 	addi	r8,r8,8
  844c30:	29400044 	addi	r5,r5,1
  844c34:	003e5506 	br	84458c <__alt_mem_epcs_flash_controller_0+0xff83b58c>
  844c38:	d9402017 	ldw	r5,128(sp)
  844c3c:	d9002117 	ldw	r4,132(sp)
  844c40:	d9801a04 	addi	r6,sp,104
  844c44:	0843e840 	call	843e84 <__sprint_r.part.0>
  844c48:	10000b1e 	bne	r2,zero,844c78 <___vfiprintf_internal_r+0xce0>
  844c4c:	d9001b17 	ldw	r4,108(sp)
  844c50:	d8801c17 	ldw	r2,112(sp)
  844c54:	d811883a 	mov	r8,sp
  844c58:	21400044 	addi	r5,r4,1
  844c5c:	003fdc06 	br	844bd0 <__alt_mem_epcs_flash_controller_0+0xff83bbd0>
  844c60:	d8801c17 	ldw	r2,112(sp)
  844c64:	10000426 	beq	r2,zero,844c78 <___vfiprintf_internal_r+0xce0>
  844c68:	d9402017 	ldw	r5,128(sp)
  844c6c:	d9002117 	ldw	r4,132(sp)
  844c70:	d9801a04 	addi	r6,sp,104
  844c74:	0843e840 	call	843e84 <__sprint_r.part.0>
  844c78:	d9402017 	ldw	r5,128(sp)
  844c7c:	2880030b 	ldhu	r2,12(r5)
  844c80:	1080100c 	andi	r2,r2,64
  844c84:	10014d1e 	bne	r2,zero,8451bc <___vfiprintf_internal_r+0x1224>
  844c88:	d8802417 	ldw	r2,144(sp)
  844c8c:	003d9706 	br	8442ec <__alt_mem_epcs_flash_controller_0+0xff83b2ec>
  844c90:	1000d21e 	bne	r2,zero,844fdc <___vfiprintf_internal_r+0x1044>
  844c94:	00c00044 	movi	r3,1
  844c98:	a005883a 	mov	r2,r20
  844c9c:	ddc00015 	stw	r23,0(sp)
  844ca0:	dd000115 	stw	r20,4(sp)
  844ca4:	dd001c15 	stw	r20,112(sp)
  844ca8:	d8c01b15 	stw	r3,108(sp)
  844cac:	d811883a 	mov	r8,sp
  844cb0:	42000204 	addi	r8,r8,8
  844cb4:	8c40010c 	andi	r17,r17,4
  844cb8:	88004026 	beq	r17,zero,844dbc <___vfiprintf_internal_r+0xe24>
  844cbc:	d9002517 	ldw	r4,148(sp)
  844cc0:	24e3c83a 	sub	r17,r4,r19
  844cc4:	04403d0e 	bge	zero,r17,844dbc <___vfiprintf_internal_r+0xe24>
  844cc8:	04000404 	movi	r16,16
  844ccc:	8441a90e 	bge	r16,r17,845374 <___vfiprintf_internal_r+0x13dc>
  844cd0:	00c021b4 	movhi	r3,134
  844cd4:	18e57984 	addi	r3,r3,-27162
  844cd8:	d9001b17 	ldw	r4,108(sp)
  844cdc:	d8c02315 	stw	r3,140(sp)
  844ce0:	050001c4 	movi	r20,7
  844ce4:	dd402117 	ldw	r21,132(sp)
  844ce8:	ddc02017 	ldw	r23,128(sp)
  844cec:	00000506 	br	844d04 <___vfiprintf_internal_r+0xd6c>
  844cf0:	21400084 	addi	r5,r4,2
  844cf4:	42000204 	addi	r8,r8,8
  844cf8:	1809883a 	mov	r4,r3
  844cfc:	8c7ffc04 	addi	r17,r17,-16
  844d00:	84400f0e 	bge	r16,r17,844d40 <___vfiprintf_internal_r+0xda8>
  844d04:	014021b4 	movhi	r5,134
  844d08:	10800404 	addi	r2,r2,16
  844d0c:	20c00044 	addi	r3,r4,1
  844d10:	29657984 	addi	r5,r5,-27162
  844d14:	41400015 	stw	r5,0(r8)
  844d18:	44000115 	stw	r16,4(r8)
  844d1c:	d8801c15 	stw	r2,112(sp)
  844d20:	d8c01b15 	stw	r3,108(sp)
  844d24:	a0fff20e 	bge	r20,r3,844cf0 <__alt_mem_epcs_flash_controller_0+0xff83bcf0>
  844d28:	1000141e 	bne	r2,zero,844d7c <___vfiprintf_internal_r+0xde4>
  844d2c:	8c7ffc04 	addi	r17,r17,-16
  844d30:	01400044 	movi	r5,1
  844d34:	0009883a 	mov	r4,zero
  844d38:	d811883a 	mov	r8,sp
  844d3c:	847ff116 	blt	r16,r17,844d04 <__alt_mem_epcs_flash_controller_0+0xff83bd04>
  844d40:	d8c02317 	ldw	r3,140(sp)
  844d44:	1445883a 	add	r2,r2,r17
  844d48:	44400115 	stw	r17,4(r8)
  844d4c:	40c00015 	stw	r3,0(r8)
  844d50:	d8801c15 	stw	r2,112(sp)
  844d54:	d9401b15 	stw	r5,108(sp)
  844d58:	00c001c4 	movi	r3,7
  844d5c:	1940170e 	bge	r3,r5,844dbc <___vfiprintf_internal_r+0xe24>
  844d60:	1000101e 	bne	r2,zero,844da4 <___vfiprintf_internal_r+0xe0c>
  844d64:	d8802517 	ldw	r2,148(sp)
  844d68:	14c11616 	blt	r2,r19,8451c4 <___vfiprintf_internal_r+0x122c>
  844d6c:	d9002417 	ldw	r4,144(sp)
  844d70:	2089883a 	add	r4,r4,r2
  844d74:	d9002415 	stw	r4,144(sp)
  844d78:	003e1806 	br	8445dc <__alt_mem_epcs_flash_controller_0+0xff83b5dc>
  844d7c:	d9801a04 	addi	r6,sp,104
  844d80:	b80b883a 	mov	r5,r23
  844d84:	a809883a 	mov	r4,r21
  844d88:	0843e840 	call	843e84 <__sprint_r.part.0>
  844d8c:	103fba1e 	bne	r2,zero,844c78 <__alt_mem_epcs_flash_controller_0+0xff83bc78>
  844d90:	d9001b17 	ldw	r4,108(sp)
  844d94:	d8801c17 	ldw	r2,112(sp)
  844d98:	d811883a 	mov	r8,sp
  844d9c:	21400044 	addi	r5,r4,1
  844da0:	003fd606 	br	844cfc <__alt_mem_epcs_flash_controller_0+0xff83bcfc>
  844da4:	d9402017 	ldw	r5,128(sp)
  844da8:	d9002117 	ldw	r4,132(sp)
  844dac:	d9801a04 	addi	r6,sp,104
  844db0:	0843e840 	call	843e84 <__sprint_r.part.0>
  844db4:	103fb01e 	bne	r2,zero,844c78 <__alt_mem_epcs_flash_controller_0+0xff83bc78>
  844db8:	d8801c17 	ldw	r2,112(sp)
  844dbc:	d8c02517 	ldw	r3,148(sp)
  844dc0:	1cc0010e 	bge	r3,r19,844dc8 <___vfiprintf_internal_r+0xe30>
  844dc4:	9807883a 	mov	r3,r19
  844dc8:	d9002417 	ldw	r4,144(sp)
  844dcc:	20c9883a 	add	r4,r4,r3
  844dd0:	d9002415 	stw	r4,144(sp)
  844dd4:	103e0126 	beq	r2,zero,8445dc <__alt_mem_epcs_flash_controller_0+0xff83b5dc>
  844dd8:	d9402017 	ldw	r5,128(sp)
  844ddc:	d9002117 	ldw	r4,132(sp)
  844de0:	d9801a04 	addi	r6,sp,104
  844de4:	0843e840 	call	843e84 <__sprint_r.part.0>
  844de8:	103dfc26 	beq	r2,zero,8445dc <__alt_mem_epcs_flash_controller_0+0xff83b5dc>
  844dec:	003fa206 	br	844c78 <__alt_mem_epcs_flash_controller_0+0xff83bc78>
  844df0:	d9402017 	ldw	r5,128(sp)
  844df4:	d9002117 	ldw	r4,132(sp)
  844df8:	d9801a04 	addi	r6,sp,104
  844dfc:	d9c02b15 	stw	r7,172(sp)
  844e00:	0843e840 	call	843e84 <__sprint_r.part.0>
  844e04:	d9c02b17 	ldw	r7,172(sp)
  844e08:	103f9b1e 	bne	r2,zero,844c78 <__alt_mem_epcs_flash_controller_0+0xff83bc78>
  844e0c:	d9001b17 	ldw	r4,108(sp)
  844e10:	d8801c17 	ldw	r2,112(sp)
  844e14:	d811883a 	mov	r8,sp
  844e18:	21800044 	addi	r6,r4,1
  844e1c:	003dbf06 	br	84451c <__alt_mem_epcs_flash_controller_0+0xff83b51c>
  844e20:	1000d81e 	bne	r2,zero,845184 <___vfiprintf_internal_r+0x11ec>
  844e24:	d9001d87 	ldb	r4,118(sp)
  844e28:	20000a26 	beq	r4,zero,844e54 <___vfiprintf_internal_r+0xebc>
  844e2c:	00800044 	movi	r2,1
  844e30:	d9001d84 	addi	r4,sp,118
  844e34:	100b883a 	mov	r5,r2
  844e38:	d9000015 	stw	r4,0(sp)
  844e3c:	d8800115 	stw	r2,4(sp)
  844e40:	d811883a 	mov	r8,sp
  844e44:	2809883a 	mov	r4,r5
  844e48:	42000204 	addi	r8,r8,8
  844e4c:	29400044 	addi	r5,r5,1
  844e50:	003d9506 	br	8444a8 <__alt_mem_epcs_flash_controller_0+0xff83b4a8>
  844e54:	3800fd26 	beq	r7,zero,84524c <___vfiprintf_internal_r+0x12b4>
  844e58:	00800084 	movi	r2,2
  844e5c:	d9001d04 	addi	r4,sp,116
  844e60:	d9000015 	stw	r4,0(sp)
  844e64:	d8800115 	stw	r2,4(sp)
  844e68:	01400044 	movi	r5,1
  844e6c:	d811883a 	mov	r8,sp
  844e70:	2809883a 	mov	r4,r5
  844e74:	42000204 	addi	r8,r8,8
  844e78:	29400044 	addi	r5,r5,1
  844e7c:	003f4606 	br	844b98 <__alt_mem_epcs_flash_controller_0+0xff83bb98>
  844e80:	d8802517 	ldw	r2,148(sp)
  844e84:	14c0010e 	bge	r2,r19,844e8c <___vfiprintf_internal_r+0xef4>
  844e88:	9805883a 	mov	r2,r19
  844e8c:	d9402417 	ldw	r5,144(sp)
  844e90:	288b883a 	add	r5,r5,r2
  844e94:	d9402415 	stw	r5,144(sp)
  844e98:	003dd006 	br	8445dc <__alt_mem_epcs_flash_controller_0+0xff83b5dc>
  844e9c:	d8001d85 	stb	zero,118(sp)
  844ea0:	80005d16 	blt	r16,zero,845018 <___vfiprintf_internal_r+0x1080>
  844ea4:	00ffdfc4 	movi	r3,-129
  844ea8:	9d04b03a 	or	r2,r19,r20
  844eac:	88e2703a 	and	r17,r17,r3
  844eb0:	103d3726 	beq	r2,zero,844390 <__alt_mem_epcs_flash_controller_0+0xff83b390>
  844eb4:	002b883a 	mov	r21,zero
  844eb8:	d9002617 	ldw	r4,152(sp)
  844ebc:	ddc01a04 	addi	r23,sp,104
  844ec0:	988003cc 	andi	r2,r19,15
  844ec4:	a006973a 	slli	r3,r20,28
  844ec8:	2085883a 	add	r2,r4,r2
  844ecc:	9826d13a 	srli	r19,r19,4
  844ed0:	10800003 	ldbu	r2,0(r2)
  844ed4:	a028d13a 	srli	r20,r20,4
  844ed8:	bdffffc4 	addi	r23,r23,-1
  844edc:	1ce6b03a 	or	r19,r3,r19
  844ee0:	b8800005 	stb	r2,0(r23)
  844ee4:	9d04b03a 	or	r2,r19,r20
  844ee8:	103ff51e 	bne	r2,zero,844ec0 <__alt_mem_epcs_flash_controller_0+0xff83bec0>
  844eec:	d8801e17 	ldw	r2,120(sp)
  844ef0:	15e9c83a 	sub	r20,r2,r23
  844ef4:	003d2b06 	br	8443a4 <__alt_mem_epcs_flash_controller_0+0xff83b3a4>
  844ef8:	d9402017 	ldw	r5,128(sp)
  844efc:	d9002117 	ldw	r4,132(sp)
  844f00:	d9801a04 	addi	r6,sp,104
  844f04:	0843e840 	call	843e84 <__sprint_r.part.0>
  844f08:	103f5b1e 	bne	r2,zero,844c78 <__alt_mem_epcs_flash_controller_0+0xff83bc78>
  844f0c:	d8801c17 	ldw	r2,112(sp)
  844f10:	d811883a 	mov	r8,sp
  844f14:	003f6706 	br	844cb4 <__alt_mem_epcs_flash_controller_0+0xff83bcb4>
  844f18:	d9402017 	ldw	r5,128(sp)
  844f1c:	d9002117 	ldw	r4,132(sp)
  844f20:	d9801a04 	addi	r6,sp,104
  844f24:	0843e840 	call	843e84 <__sprint_r.part.0>
  844f28:	103f531e 	bne	r2,zero,844c78 <__alt_mem_epcs_flash_controller_0+0xff83bc78>
  844f2c:	d811883a 	mov	r8,sp
  844f30:	003cd906 	br	844298 <__alt_mem_epcs_flash_controller_0+0xff83b298>
  844f34:	10803fcc 	andi	r2,r2,255
  844f38:	1080201c 	xori	r2,r2,128
  844f3c:	10bfe004 	addi	r2,r2,-128
  844f40:	00c00c04 	movi	r3,48
  844f44:	10ffe926 	beq	r2,r3,844eec <__alt_mem_epcs_flash_controller_0+0xff83beec>
  844f48:	b8ffffc5 	stb	r3,-1(r23)
  844f4c:	d8c01e17 	ldw	r3,120(sp)
  844f50:	b8bfffc4 	addi	r2,r23,-1
  844f54:	102f883a 	mov	r23,r2
  844f58:	18a9c83a 	sub	r20,r3,r2
  844f5c:	003d1106 	br	8443a4 <__alt_mem_epcs_flash_controller_0+0xff83b3a4>
  844f60:	d9402017 	ldw	r5,128(sp)
  844f64:	d9002117 	ldw	r4,132(sp)
  844f68:	d9801a04 	addi	r6,sp,104
  844f6c:	d8c02a15 	stw	r3,168(sp)
  844f70:	d9c02b15 	stw	r7,172(sp)
  844f74:	0843e840 	call	843e84 <__sprint_r.part.0>
  844f78:	d8c02a17 	ldw	r3,168(sp)
  844f7c:	d9c02b17 	ldw	r7,172(sp)
  844f80:	103f3d1e 	bne	r2,zero,844c78 <__alt_mem_epcs_flash_controller_0+0xff83bc78>
  844f84:	d9001b17 	ldw	r4,108(sp)
  844f88:	d8801c17 	ldw	r2,112(sp)
  844f8c:	d811883a 	mov	r8,sp
  844f90:	21400044 	addi	r5,r4,1
  844f94:	003d4406 	br	8444a8 <__alt_mem_epcs_flash_controller_0+0xff83b4a8>
  844f98:	d9402017 	ldw	r5,128(sp)
  844f9c:	d9002117 	ldw	r4,132(sp)
  844fa0:	d9801a04 	addi	r6,sp,104
  844fa4:	d8c02a15 	stw	r3,168(sp)
  844fa8:	0843e840 	call	843e84 <__sprint_r.part.0>
  844fac:	d8c02a17 	ldw	r3,168(sp)
  844fb0:	103f311e 	bne	r2,zero,844c78 <__alt_mem_epcs_flash_controller_0+0xff83bc78>
  844fb4:	d9001b17 	ldw	r4,108(sp)
  844fb8:	d8801c17 	ldw	r2,112(sp)
  844fbc:	d811883a 	mov	r8,sp
  844fc0:	21400044 	addi	r5,r4,1
  844fc4:	003ef406 	br	844b98 <__alt_mem_epcs_flash_controller_0+0xff83bb98>
  844fc8:	1000bd1e 	bne	r2,zero,8452c0 <___vfiprintf_internal_r+0x1328>
  844fcc:	01400044 	movi	r5,1
  844fd0:	0009883a 	mov	r4,zero
  844fd4:	d811883a 	mov	r8,sp
  844fd8:	003ef106 	br	844ba0 <__alt_mem_epcs_flash_controller_0+0xff83bba0>
  844fdc:	d9402017 	ldw	r5,128(sp)
  844fe0:	d9002117 	ldw	r4,132(sp)
  844fe4:	d9801a04 	addi	r6,sp,104
  844fe8:	0843e840 	call	843e84 <__sprint_r.part.0>
  844fec:	103f221e 	bne	r2,zero,844c78 <__alt_mem_epcs_flash_controller_0+0xff83bc78>
  844ff0:	d9401b17 	ldw	r5,108(sp)
  844ff4:	d8801c17 	ldw	r2,112(sp)
  844ff8:	d811883a 	mov	r8,sp
  844ffc:	29400044 	addi	r5,r5,1
  845000:	003d6206 	br	84458c <__alt_mem_epcs_flash_controller_0+0xff83b58c>
  845004:	014021b4 	movhi	r5,134
  845008:	29643a04 	addi	r5,r5,-28440
  84500c:	d9402615 	stw	r5,152(sp)
  845010:	d8c02215 	stw	r3,136(sp)
  845014:	1023883a 	mov	r17,r2
  845018:	9d04b03a 	or	r2,r19,r20
  84501c:	103fa51e 	bne	r2,zero,844eb4 <__alt_mem_epcs_flash_controller_0+0xff83beb4>
  845020:	002b883a 	mov	r21,zero
  845024:	00800084 	movi	r2,2
  845028:	003e4a06 	br	844954 <__alt_mem_epcs_flash_controller_0+0xff83b954>
  84502c:	014021b4 	movhi	r5,134
  845030:	29643a04 	addi	r5,r5,-28440
  845034:	002b883a 	mov	r21,zero
  845038:	d9402615 	stw	r5,152(sp)
  84503c:	003f9e06 	br	844eb8 <__alt_mem_epcs_flash_controller_0+0xff83beb8>
  845040:	d9402217 	ldw	r5,136(sp)
  845044:	d8001d85 	stb	zero,118(sp)
  845048:	0029883a 	mov	r20,zero
  84504c:	28800104 	addi	r2,r5,4
  845050:	2cc00017 	ldw	r19,0(r5)
  845054:	803e3a16 	blt	r16,zero,844940 <__alt_mem_epcs_flash_controller_0+0xff83b940>
  845058:	00ffdfc4 	movi	r3,-129
  84505c:	d8802215 	stw	r2,136(sp)
  845060:	88e2703a 	and	r17,r17,r3
  845064:	002b883a 	mov	r21,zero
  845068:	983e9b26 	beq	r19,zero,844ad8 <__alt_mem_epcs_flash_controller_0+0xff83bad8>
  84506c:	00800244 	movi	r2,9
  845070:	14fdc936 	bltu	r2,r19,844798 <__alt_mem_epcs_flash_controller_0+0xff83b798>
  845074:	003e9a06 	br	844ae0 <__alt_mem_epcs_flash_controller_0+0xff83bae0>
  845078:	00800c04 	movi	r2,48
  84507c:	d8c01d45 	stb	r3,117(sp)
  845080:	d8801d05 	stb	r2,116(sp)
  845084:	d8001d85 	stb	zero,118(sp)
  845088:	88c00094 	ori	r3,r17,2
  84508c:	80009c16 	blt	r16,zero,845300 <___vfiprintf_internal_r+0x1368>
  845090:	00bfdfc4 	movi	r2,-129
  845094:	88a2703a 	and	r17,r17,r2
  845098:	8c400094 	ori	r17,r17,2
  84509c:	002b883a 	mov	r21,zero
  8450a0:	003f8506 	br	844eb8 <__alt_mem_epcs_flash_controller_0+0xff83beb8>
  8450a4:	b029883a 	mov	r20,r22
  8450a8:	003c0b06 	br	8440d8 <__alt_mem_epcs_flash_controller_0+0xff83b0d8>
  8450ac:	04e7c83a 	sub	r19,zero,r19
  8450b0:	05400b44 	movi	r21,45
  8450b4:	9804c03a 	cmpne	r2,r19,zero
  8450b8:	0529c83a 	sub	r20,zero,r20
  8450bc:	dd401d85 	stb	r21,118(sp)
  8450c0:	a0a9c83a 	sub	r20,r20,r2
  8450c4:	80009716 	blt	r16,zero,845324 <___vfiprintf_internal_r+0x138c>
  8450c8:	00bfdfc4 	movi	r2,-129
  8450cc:	88a2703a 	and	r17,r17,r2
  8450d0:	003db006 	br	844794 <__alt_mem_epcs_flash_controller_0+0xff83b794>
  8450d4:	b0c00007 	ldb	r3,0(r22)
  8450d8:	003c0c06 	br	84410c <__alt_mem_epcs_flash_controller_0+0xff83b10c>
  8450dc:	8880100c 	andi	r2,r17,64
  8450e0:	d8001d85 	stb	zero,118(sp)
  8450e4:	1000461e 	bne	r2,zero,845200 <___vfiprintf_internal_r+0x1268>
  8450e8:	d9002217 	ldw	r4,136(sp)
  8450ec:	0029883a 	mov	r20,zero
  8450f0:	20800104 	addi	r2,r4,4
  8450f4:	24c00017 	ldw	r19,0(r4)
  8450f8:	803df80e 	bge	r16,zero,8448dc <__alt_mem_epcs_flash_controller_0+0xff83b8dc>
  8450fc:	9d06b03a 	or	r3,r19,r20
  845100:	d8802215 	stw	r2,136(sp)
  845104:	183d5e1e 	bne	r3,zero,844680 <__alt_mem_epcs_flash_controller_0+0xff83b680>
  845108:	002b883a 	mov	r21,zero
  84510c:	0005883a 	mov	r2,zero
  845110:	003e1006 	br	844954 <__alt_mem_epcs_flash_controller_0+0xff83b954>
  845114:	8880040c 	andi	r2,r17,16
  845118:	1000321e 	bne	r2,zero,8451e4 <___vfiprintf_internal_r+0x124c>
  84511c:	8c40100c 	andi	r17,r17,64
  845120:	88008d26 	beq	r17,zero,845358 <___vfiprintf_internal_r+0x13c0>
  845124:	d9402217 	ldw	r5,136(sp)
  845128:	d8c02417 	ldw	r3,144(sp)
  84512c:	28800017 	ldw	r2,0(r5)
  845130:	29400104 	addi	r5,r5,4
  845134:	d9402215 	stw	r5,136(sp)
  845138:	10c0000d 	sth	r3,0(r2)
  84513c:	003bca06 	br	844068 <__alt_mem_epcs_flash_controller_0+0xff83b068>
  845140:	8880100c 	andi	r2,r17,64
  845144:	10003a26 	beq	r2,zero,845230 <___vfiprintf_internal_r+0x1298>
  845148:	d8802217 	ldw	r2,136(sp)
  84514c:	14c0000f 	ldh	r19,0(r2)
  845150:	10800104 	addi	r2,r2,4
  845154:	d8802215 	stw	r2,136(sp)
  845158:	9829d7fa 	srai	r20,r19,31
  84515c:	a005883a 	mov	r2,r20
  845160:	003d8506 	br	844778 <__alt_mem_epcs_flash_controller_0+0xff83b778>
  845164:	8880100c 	andi	r2,r17,64
  845168:	10002b26 	beq	r2,zero,845218 <___vfiprintf_internal_r+0x1280>
  84516c:	d8802217 	ldw	r2,136(sp)
  845170:	0029883a 	mov	r20,zero
  845174:	14c0000b 	ldhu	r19,0(r2)
  845178:	10800104 	addi	r2,r2,4
  84517c:	d8802215 	stw	r2,136(sp)
  845180:	003d5d06 	br	8446f8 <__alt_mem_epcs_flash_controller_0+0xff83b6f8>
  845184:	d9402017 	ldw	r5,128(sp)
  845188:	d9002117 	ldw	r4,132(sp)
  84518c:	d9801a04 	addi	r6,sp,104
  845190:	d8c02a15 	stw	r3,168(sp)
  845194:	d9c02b15 	stw	r7,172(sp)
  845198:	0843e840 	call	843e84 <__sprint_r.part.0>
  84519c:	d8c02a17 	ldw	r3,168(sp)
  8451a0:	d9c02b17 	ldw	r7,172(sp)
  8451a4:	103eb41e 	bne	r2,zero,844c78 <__alt_mem_epcs_flash_controller_0+0xff83bc78>
  8451a8:	d9001b17 	ldw	r4,108(sp)
  8451ac:	d8801c17 	ldw	r2,112(sp)
  8451b0:	d811883a 	mov	r8,sp
  8451b4:	21400044 	addi	r5,r4,1
  8451b8:	003e6706 	br	844b58 <__alt_mem_epcs_flash_controller_0+0xff83bb58>
  8451bc:	00bfffc4 	movi	r2,-1
  8451c0:	003c4a06 	br	8442ec <__alt_mem_epcs_flash_controller_0+0xff83b2ec>
  8451c4:	9805883a 	mov	r2,r19
  8451c8:	003ee806 	br	844d6c <__alt_mem_epcs_flash_controller_0+0xff83bd6c>
  8451cc:	d8c02217 	ldw	r3,136(sp)
  8451d0:	0029883a 	mov	r20,zero
  8451d4:	18800104 	addi	r2,r3,4
  8451d8:	1cc0000b 	ldhu	r19,0(r3)
  8451dc:	803f9e0e 	bge	r16,zero,845058 <__alt_mem_epcs_flash_controller_0+0xff83c058>
  8451e0:	003dd706 	br	844940 <__alt_mem_epcs_flash_controller_0+0xff83b940>
  8451e4:	d8c02217 	ldw	r3,136(sp)
  8451e8:	d9002417 	ldw	r4,144(sp)
  8451ec:	18800017 	ldw	r2,0(r3)
  8451f0:	18c00104 	addi	r3,r3,4
  8451f4:	d8c02215 	stw	r3,136(sp)
  8451f8:	11000015 	stw	r4,0(r2)
  8451fc:	003b9a06 	br	844068 <__alt_mem_epcs_flash_controller_0+0xff83b068>
  845200:	d8c02217 	ldw	r3,136(sp)
  845204:	0029883a 	mov	r20,zero
  845208:	18800104 	addi	r2,r3,4
  84520c:	1cc0000b 	ldhu	r19,0(r3)
  845210:	803db20e 	bge	r16,zero,8448dc <__alt_mem_epcs_flash_controller_0+0xff83b8dc>
  845214:	003fb906 	br	8450fc <__alt_mem_epcs_flash_controller_0+0xff83c0fc>
  845218:	d9002217 	ldw	r4,136(sp)
  84521c:	0029883a 	mov	r20,zero
  845220:	24c00017 	ldw	r19,0(r4)
  845224:	21000104 	addi	r4,r4,4
  845228:	d9002215 	stw	r4,136(sp)
  84522c:	003d3206 	br	8446f8 <__alt_mem_epcs_flash_controller_0+0xff83b6f8>
  845230:	d8c02217 	ldw	r3,136(sp)
  845234:	1cc00017 	ldw	r19,0(r3)
  845238:	18c00104 	addi	r3,r3,4
  84523c:	d8c02215 	stw	r3,136(sp)
  845240:	9829d7fa 	srai	r20,r19,31
  845244:	a005883a 	mov	r2,r20
  845248:	003d4b06 	br	844778 <__alt_mem_epcs_flash_controller_0+0xff83b778>
  84524c:	0009883a 	mov	r4,zero
  845250:	01400044 	movi	r5,1
  845254:	d811883a 	mov	r8,sp
  845258:	003e4f06 	br	844b98 <__alt_mem_epcs_flash_controller_0+0xff83bb98>
  84525c:	d8c02215 	stw	r3,136(sp)
  845260:	002b883a 	mov	r21,zero
  845264:	003db806 	br	844948 <__alt_mem_epcs_flash_controller_0+0xff83b948>
  845268:	d811883a 	mov	r8,sp
  84526c:	003e9606 	br	844cc8 <__alt_mem_epcs_flash_controller_0+0xff83bcc8>
  845270:	010021b4 	movhi	r4,134
  845274:	21257584 	addi	r4,r4,-27178
  845278:	d9002315 	stw	r4,140(sp)
  84527c:	003e6306 	br	844c0c <__alt_mem_epcs_flash_controller_0+0xff83bc0c>
  845280:	b0c00043 	ldbu	r3,1(r22)
  845284:	8c400814 	ori	r17,r17,32
  845288:	b5800044 	addi	r22,r22,1
  84528c:	18c03fcc 	andi	r3,r3,255
  845290:	18c0201c 	xori	r3,r3,128
  845294:	18ffe004 	addi	r3,r3,-128
  845298:	003b9c06 	br	84410c <__alt_mem_epcs_flash_controller_0+0xff83b10c>
  84529c:	b809883a 	mov	r4,r23
  8452a0:	da002a15 	stw	r8,168(sp)
  8452a4:	0834c200 	call	834c20 <strlen>
  8452a8:	1029883a 	mov	r20,r2
  8452ac:	dd401d83 	ldbu	r21,118(sp)
  8452b0:	df002215 	stw	fp,136(sp)
  8452b4:	0021883a 	mov	r16,zero
  8452b8:	da002a17 	ldw	r8,168(sp)
  8452bc:	003c3906 	br	8443a4 <__alt_mem_epcs_flash_controller_0+0xff83b3a4>
  8452c0:	d9402017 	ldw	r5,128(sp)
  8452c4:	d9002117 	ldw	r4,132(sp)
  8452c8:	d9801a04 	addi	r6,sp,104
  8452cc:	0843e840 	call	843e84 <__sprint_r.part.0>
  8452d0:	103e691e 	bne	r2,zero,844c78 <__alt_mem_epcs_flash_controller_0+0xff83bc78>
  8452d4:	d9001b17 	ldw	r4,108(sp)
  8452d8:	d8801c17 	ldw	r2,112(sp)
  8452dc:	d811883a 	mov	r8,sp
  8452e0:	21400044 	addi	r5,r4,1
  8452e4:	003e2e06 	br	844ba0 <__alt_mem_epcs_flash_controller_0+0xff83bba0>
  8452e8:	010021b4 	movhi	r4,134
  8452ec:	21257984 	addi	r4,r4,-27162
  8452f0:	d9002315 	stw	r4,140(sp)
  8452f4:	d9001b17 	ldw	r4,108(sp)
  8452f8:	21000044 	addi	r4,r4,1
  8452fc:	003c5e06 	br	844478 <__alt_mem_epcs_flash_controller_0+0xff83b478>
  845300:	002b883a 	mov	r21,zero
  845304:	00800084 	movi	r2,2
  845308:	10803fcc 	andi	r2,r2,255
  84530c:	01000044 	movi	r4,1
  845310:	11002b26 	beq	r2,r4,8453c0 <___vfiprintf_internal_r+0x1428>
  845314:	01000084 	movi	r4,2
  845318:	11002b1e 	bne	r2,r4,8453c8 <___vfiprintf_internal_r+0x1430>
  84531c:	1823883a 	mov	r17,r3
  845320:	003ee506 	br	844eb8 <__alt_mem_epcs_flash_controller_0+0xff83beb8>
  845324:	8807883a 	mov	r3,r17
  845328:	00800044 	movi	r2,1
  84532c:	003ff606 	br	845308 <__alt_mem_epcs_flash_controller_0+0xff83c308>
  845330:	00800184 	movi	r2,6
  845334:	1400012e 	bgeu	r2,r16,84533c <___vfiprintf_internal_r+0x13a4>
  845338:	1021883a 	mov	r16,r2
  84533c:	8029883a 	mov	r20,r16
  845340:	8027883a 	mov	r19,r16
  845344:	80002216 	blt	r16,zero,8453d0 <___vfiprintf_internal_r+0x1438>
  845348:	05c021b4 	movhi	r23,134
  84534c:	df002215 	stw	fp,136(sp)
  845350:	bde43f04 	addi	r23,r23,-28420
  845354:	003cfb06 	br	844744 <__alt_mem_epcs_flash_controller_0+0xff83b744>
  845358:	d9002217 	ldw	r4,136(sp)
  84535c:	d9402417 	ldw	r5,144(sp)
  845360:	20800017 	ldw	r2,0(r4)
  845364:	21000104 	addi	r4,r4,4
  845368:	d9002215 	stw	r4,136(sp)
  84536c:	11400015 	stw	r5,0(r2)
  845370:	003b3d06 	br	844068 <__alt_mem_epcs_flash_controller_0+0xff83b068>
  845374:	014021b4 	movhi	r5,134
  845378:	29657984 	addi	r5,r5,-27162
  84537c:	d9402315 	stw	r5,140(sp)
  845380:	d9401b17 	ldw	r5,108(sp)
  845384:	29400044 	addi	r5,r5,1
  845388:	003e6d06 	br	844d40 <__alt_mem_epcs_flash_controller_0+0xff83bd40>
  84538c:	8029883a 	mov	r20,r16
  845390:	dd401d83 	ldbu	r21,118(sp)
  845394:	df002215 	stw	fp,136(sp)
  845398:	0021883a 	mov	r16,zero
  84539c:	003c0106 	br	8443a4 <__alt_mem_epcs_flash_controller_0+0xff83b3a4>
  8453a0:	00c021b4 	movhi	r3,134
  8453a4:	18e57584 	addi	r3,r3,-27178
  8453a8:	d8c02315 	stw	r3,140(sp)
  8453ac:	280d883a 	mov	r6,r5
  8453b0:	003c6906 	br	844558 <__alt_mem_epcs_flash_controller_0+0xff83b558>
  8453b4:	802d883a 	mov	r22,r16
  8453b8:	0021883a 	mov	r16,zero
  8453bc:	003b5406 	br	844110 <__alt_mem_epcs_flash_controller_0+0xff83b110>
  8453c0:	1823883a 	mov	r17,r3
  8453c4:	003cf306 	br	844794 <__alt_mem_epcs_flash_controller_0+0xff83b794>
  8453c8:	1823883a 	mov	r17,r3
  8453cc:	003cad06 	br	844684 <__alt_mem_epcs_flash_controller_0+0xff83b684>
  8453d0:	0027883a 	mov	r19,zero
  8453d4:	003fdc06 	br	845348 <__alt_mem_epcs_flash_controller_0+0xff83c348>
  8453d8:	d9402217 	ldw	r5,136(sp)
  8453dc:	8005883a 	mov	r2,r16
  8453e0:	b0c00043 	ldbu	r3,1(r22)
  8453e4:	2c000017 	ldw	r16,0(r5)
  8453e8:	29000104 	addi	r4,r5,4
  8453ec:	d9002215 	stw	r4,136(sp)
  8453f0:	102d883a 	mov	r22,r2
  8453f4:	803fa50e 	bge	r16,zero,84528c <__alt_mem_epcs_flash_controller_0+0xff83c28c>
  8453f8:	18c03fcc 	andi	r3,r3,255
  8453fc:	18c0201c 	xori	r3,r3,128
  845400:	043fffc4 	movi	r16,-1
  845404:	18ffe004 	addi	r3,r3,-128
  845408:	003b4006 	br	84410c <__alt_mem_epcs_flash_controller_0+0xff83b10c>
  84540c:	d9402303 	ldbu	r5,140(sp)
  845410:	d9401d85 	stb	r5,118(sp)
  845414:	003cae06 	br	8446d0 <__alt_mem_epcs_flash_controller_0+0xff83b6d0>
  845418:	d8c02303 	ldbu	r3,140(sp)
  84541c:	d8c01d85 	stb	r3,118(sp)
  845420:	003d1406 	br	844874 <__alt_mem_epcs_flash_controller_0+0xff83b874>
  845424:	d8c02303 	ldbu	r3,140(sp)
  845428:	d8c01d85 	stb	r3,118(sp)
  84542c:	003cca06 	br	844758 <__alt_mem_epcs_flash_controller_0+0xff83b758>
  845430:	8880004c 	andi	r2,r17,1
  845434:	002b883a 	mov	r21,zero
  845438:	10000526 	beq	r2,zero,845450 <___vfiprintf_internal_r+0x14b8>
  84543c:	00800c04 	movi	r2,48
  845440:	d88019c5 	stb	r2,103(sp)
  845444:	dd002817 	ldw	r20,160(sp)
  845448:	ddc019c4 	addi	r23,sp,103
  84544c:	003bd506 	br	8443a4 <__alt_mem_epcs_flash_controller_0+0xff83b3a4>
  845450:	0029883a 	mov	r20,zero
  845454:	ddc01a04 	addi	r23,sp,104
  845458:	003bd206 	br	8443a4 <__alt_mem_epcs_flash_controller_0+0xff83b3a4>
  84545c:	d9002303 	ldbu	r4,140(sp)
  845460:	d9001d85 	stb	r4,118(sp)
  845464:	003da606 	br	844b00 <__alt_mem_epcs_flash_controller_0+0xff83bb00>
  845468:	d8c02303 	ldbu	r3,140(sp)
  84546c:	d8c01d85 	stb	r3,118(sp)
  845470:	003c7606 	br	84464c <__alt_mem_epcs_flash_controller_0+0xff83b64c>
  845474:	d8c02303 	ldbu	r3,140(sp)
  845478:	d8c01d85 	stb	r3,118(sp)
  84547c:	003c6506 	br	844614 <__alt_mem_epcs_flash_controller_0+0xff83b614>
  845480:	d9002303 	ldbu	r4,140(sp)
  845484:	d9001d85 	stb	r4,118(sp)
  845488:	003d3d06 	br	844980 <__alt_mem_epcs_flash_controller_0+0xff83b980>
  84548c:	d8c02303 	ldbu	r3,140(sp)
  845490:	d8c01d85 	stb	r3,118(sp)
  845494:	003d1d06 	br	84490c <__alt_mem_epcs_flash_controller_0+0xff83b90c>
  845498:	d8c02303 	ldbu	r3,140(sp)
  84549c:	d8c01d85 	stb	r3,118(sp)
  8454a0:	003d0306 	br	8448b0 <__alt_mem_epcs_flash_controller_0+0xff83b8b0>

008454a4 <__vfiprintf_internal>:
  8454a4:	008021b4 	movhi	r2,134
  8454a8:	10adb604 	addi	r2,r2,-18728
  8454ac:	300f883a 	mov	r7,r6
  8454b0:	280d883a 	mov	r6,r5
  8454b4:	200b883a 	mov	r5,r4
  8454b8:	11000017 	ldw	r4,0(r2)
  8454bc:	0843f981 	jmpi	843f98 <___vfiprintf_internal_r>

008454c0 <__sbprintf>:
  8454c0:	2880030b 	ldhu	r2,12(r5)
  8454c4:	2ac01917 	ldw	r11,100(r5)
  8454c8:	2a80038b 	ldhu	r10,14(r5)
  8454cc:	2a400717 	ldw	r9,28(r5)
  8454d0:	2a000917 	ldw	r8,36(r5)
  8454d4:	defee204 	addi	sp,sp,-1144
  8454d8:	00c10004 	movi	r3,1024
  8454dc:	dc011a15 	stw	r16,1128(sp)
  8454e0:	10bfff4c 	andi	r2,r2,65533
  8454e4:	2821883a 	mov	r16,r5
  8454e8:	d8cb883a 	add	r5,sp,r3
  8454ec:	dc811c15 	stw	r18,1136(sp)
  8454f0:	dc411b15 	stw	r17,1132(sp)
  8454f4:	dfc11d15 	stw	ra,1140(sp)
  8454f8:	2025883a 	mov	r18,r4
  8454fc:	d881030d 	sth	r2,1036(sp)
  845500:	dac11915 	stw	r11,1124(sp)
  845504:	da81038d 	sth	r10,1038(sp)
  845508:	da410715 	stw	r9,1052(sp)
  84550c:	da010915 	stw	r8,1060(sp)
  845510:	dec10015 	stw	sp,1024(sp)
  845514:	dec10415 	stw	sp,1040(sp)
  845518:	d8c10215 	stw	r3,1032(sp)
  84551c:	d8c10515 	stw	r3,1044(sp)
  845520:	d8010615 	stw	zero,1048(sp)
  845524:	0843f980 	call	843f98 <___vfiprintf_internal_r>
  845528:	1023883a 	mov	r17,r2
  84552c:	10000416 	blt	r2,zero,845540 <__sbprintf+0x80>
  845530:	d9410004 	addi	r5,sp,1024
  845534:	9009883a 	mov	r4,r18
  845538:	08323600 	call	832360 <_fflush_r>
  84553c:	10000d1e 	bne	r2,zero,845574 <__sbprintf+0xb4>
  845540:	d881030b 	ldhu	r2,1036(sp)
  845544:	1080100c 	andi	r2,r2,64
  845548:	10000326 	beq	r2,zero,845558 <__sbprintf+0x98>
  84554c:	8080030b 	ldhu	r2,12(r16)
  845550:	10801014 	ori	r2,r2,64
  845554:	8080030d 	sth	r2,12(r16)
  845558:	8805883a 	mov	r2,r17
  84555c:	dfc11d17 	ldw	ra,1140(sp)
  845560:	dc811c17 	ldw	r18,1136(sp)
  845564:	dc411b17 	ldw	r17,1132(sp)
  845568:	dc011a17 	ldw	r16,1128(sp)
  84556c:	dec11e04 	addi	sp,sp,1144
  845570:	f800283a 	ret
  845574:	047fffc4 	movi	r17,-1
  845578:	003ff106 	br	845540 <__alt_mem_epcs_flash_controller_0+0xff83c540>

0084557c <_calloc_r>:
  84557c:	defffe04 	addi	sp,sp,-8
  845580:	2805883a 	mov	r2,r5
  845584:	dc000015 	stw	r16,0(sp)
  845588:	300b883a 	mov	r5,r6
  84558c:	2021883a 	mov	r16,r4
  845590:	1009883a 	mov	r4,r2
  845594:	dfc00115 	stw	ra,4(sp)
  845598:	08305040 	call	830504 <__mulsi3>
  84559c:	100b883a 	mov	r5,r2
  8455a0:	8009883a 	mov	r4,r16
  8455a4:	08339440 	call	833944 <_malloc_r>
  8455a8:	10002926 	beq	r2,zero,845650 <_calloc_r+0xd4>
  8455ac:	11bfff17 	ldw	r6,-4(r2)
  8455b0:	1021883a 	mov	r16,r2
  8455b4:	00bfff04 	movi	r2,-4
  8455b8:	308c703a 	and	r6,r6,r2
  8455bc:	00c00904 	movi	r3,36
  8455c0:	308d883a 	add	r6,r6,r2
  8455c4:	19801636 	bltu	r3,r6,845620 <_calloc_r+0xa4>
  8455c8:	008004c4 	movi	r2,19
  8455cc:	11800b2e 	bgeu	r2,r6,8455fc <_calloc_r+0x80>
  8455d0:	80000015 	stw	zero,0(r16)
  8455d4:	80000115 	stw	zero,4(r16)
  8455d8:	008006c4 	movi	r2,27
  8455dc:	11801a2e 	bgeu	r2,r6,845648 <_calloc_r+0xcc>
  8455e0:	80000215 	stw	zero,8(r16)
  8455e4:	80000315 	stw	zero,12(r16)
  8455e8:	30c0151e 	bne	r6,r3,845640 <_calloc_r+0xc4>
  8455ec:	80000415 	stw	zero,16(r16)
  8455f0:	80800604 	addi	r2,r16,24
  8455f4:	80000515 	stw	zero,20(r16)
  8455f8:	00000106 	br	845600 <_calloc_r+0x84>
  8455fc:	8005883a 	mov	r2,r16
  845600:	10000015 	stw	zero,0(r2)
  845604:	10000115 	stw	zero,4(r2)
  845608:	10000215 	stw	zero,8(r2)
  84560c:	8005883a 	mov	r2,r16
  845610:	dfc00117 	ldw	ra,4(sp)
  845614:	dc000017 	ldw	r16,0(sp)
  845618:	dec00204 	addi	sp,sp,8
  84561c:	f800283a 	ret
  845620:	000b883a 	mov	r5,zero
  845624:	8009883a 	mov	r4,r16
  845628:	08342980 	call	834298 <memset>
  84562c:	8005883a 	mov	r2,r16
  845630:	dfc00117 	ldw	ra,4(sp)
  845634:	dc000017 	ldw	r16,0(sp)
  845638:	dec00204 	addi	sp,sp,8
  84563c:	f800283a 	ret
  845640:	80800404 	addi	r2,r16,16
  845644:	003fee06 	br	845600 <__alt_mem_epcs_flash_controller_0+0xff83c600>
  845648:	80800204 	addi	r2,r16,8
  84564c:	003fec06 	br	845600 <__alt_mem_epcs_flash_controller_0+0xff83c600>
  845650:	0005883a 	mov	r2,zero
  845654:	003fee06 	br	845610 <__alt_mem_epcs_flash_controller_0+0xff83c610>

00845658 <__fputwc>:
  845658:	defff804 	addi	sp,sp,-32
  84565c:	dcc00415 	stw	r19,16(sp)
  845660:	dc800315 	stw	r18,12(sp)
  845664:	dc000115 	stw	r16,4(sp)
  845668:	dfc00715 	stw	ra,28(sp)
  84566c:	dd400615 	stw	r21,24(sp)
  845670:	dd000515 	stw	r20,20(sp)
  845674:	dc400215 	stw	r17,8(sp)
  845678:	2027883a 	mov	r19,r4
  84567c:	2825883a 	mov	r18,r5
  845680:	3021883a 	mov	r16,r6
  845684:	083d2880 	call	83d288 <__locale_mb_cur_max>
  845688:	00c00044 	movi	r3,1
  84568c:	10c03e26 	beq	r2,r3,845788 <__fputwc+0x130>
  845690:	81c01704 	addi	r7,r16,92
  845694:	900d883a 	mov	r6,r18
  845698:	d80b883a 	mov	r5,sp
  84569c:	9809883a 	mov	r4,r19
  8456a0:	084640c0 	call	84640c <_wcrtomb_r>
  8456a4:	1029883a 	mov	r20,r2
  8456a8:	00bfffc4 	movi	r2,-1
  8456ac:	a0802026 	beq	r20,r2,845730 <__fputwc+0xd8>
  8456b0:	d9400003 	ldbu	r5,0(sp)
  8456b4:	a0001c26 	beq	r20,zero,845728 <__fputwc+0xd0>
  8456b8:	0023883a 	mov	r17,zero
  8456bc:	05400284 	movi	r21,10
  8456c0:	00000906 	br	8456e8 <__fputwc+0x90>
  8456c4:	80800017 	ldw	r2,0(r16)
  8456c8:	11400005 	stb	r5,0(r2)
  8456cc:	80c00017 	ldw	r3,0(r16)
  8456d0:	18c00044 	addi	r3,r3,1
  8456d4:	80c00015 	stw	r3,0(r16)
  8456d8:	8c400044 	addi	r17,r17,1
  8456dc:	dc45883a 	add	r2,sp,r17
  8456e0:	8d00112e 	bgeu	r17,r20,845728 <__fputwc+0xd0>
  8456e4:	11400003 	ldbu	r5,0(r2)
  8456e8:	80c00217 	ldw	r3,8(r16)
  8456ec:	18ffffc4 	addi	r3,r3,-1
  8456f0:	80c00215 	stw	r3,8(r16)
  8456f4:	183ff30e 	bge	r3,zero,8456c4 <__alt_mem_epcs_flash_controller_0+0xff83c6c4>
  8456f8:	80800617 	ldw	r2,24(r16)
  8456fc:	18801916 	blt	r3,r2,845764 <__fputwc+0x10c>
  845700:	80800017 	ldw	r2,0(r16)
  845704:	11400005 	stb	r5,0(r2)
  845708:	80800017 	ldw	r2,0(r16)
  84570c:	10c00003 	ldbu	r3,0(r2)
  845710:	10800044 	addi	r2,r2,1
  845714:	1d402326 	beq	r3,r21,8457a4 <__fputwc+0x14c>
  845718:	80800015 	stw	r2,0(r16)
  84571c:	8c400044 	addi	r17,r17,1
  845720:	dc45883a 	add	r2,sp,r17
  845724:	8d3fef36 	bltu	r17,r20,8456e4 <__alt_mem_epcs_flash_controller_0+0xff83c6e4>
  845728:	9005883a 	mov	r2,r18
  84572c:	00000406 	br	845740 <__fputwc+0xe8>
  845730:	80c0030b 	ldhu	r3,12(r16)
  845734:	a005883a 	mov	r2,r20
  845738:	18c01014 	ori	r3,r3,64
  84573c:	80c0030d 	sth	r3,12(r16)
  845740:	dfc00717 	ldw	ra,28(sp)
  845744:	dd400617 	ldw	r21,24(sp)
  845748:	dd000517 	ldw	r20,20(sp)
  84574c:	dcc00417 	ldw	r19,16(sp)
  845750:	dc800317 	ldw	r18,12(sp)
  845754:	dc400217 	ldw	r17,8(sp)
  845758:	dc000117 	ldw	r16,4(sp)
  84575c:	dec00804 	addi	sp,sp,32
  845760:	f800283a 	ret
  845764:	800d883a 	mov	r6,r16
  845768:	29403fcc 	andi	r5,r5,255
  84576c:	9809883a 	mov	r4,r19
  845770:	083ae780 	call	83ae78 <__swbuf_r>
  845774:	10bfffe0 	cmpeqi	r2,r2,-1
  845778:	10803fcc 	andi	r2,r2,255
  84577c:	103fd626 	beq	r2,zero,8456d8 <__alt_mem_epcs_flash_controller_0+0xff83c6d8>
  845780:	00bfffc4 	movi	r2,-1
  845784:	003fee06 	br	845740 <__alt_mem_epcs_flash_controller_0+0xff83c740>
  845788:	90ffffc4 	addi	r3,r18,-1
  84578c:	01003f84 	movi	r4,254
  845790:	20ffbf36 	bltu	r4,r3,845690 <__alt_mem_epcs_flash_controller_0+0xff83c690>
  845794:	900b883a 	mov	r5,r18
  845798:	dc800005 	stb	r18,0(sp)
  84579c:	1029883a 	mov	r20,r2
  8457a0:	003fc506 	br	8456b8 <__alt_mem_epcs_flash_controller_0+0xff83c6b8>
  8457a4:	800d883a 	mov	r6,r16
  8457a8:	a80b883a 	mov	r5,r21
  8457ac:	9809883a 	mov	r4,r19
  8457b0:	083ae780 	call	83ae78 <__swbuf_r>
  8457b4:	10bfffe0 	cmpeqi	r2,r2,-1
  8457b8:	003fef06 	br	845778 <__alt_mem_epcs_flash_controller_0+0xff83c778>

008457bc <_fputwc_r>:
  8457bc:	3080030b 	ldhu	r2,12(r6)
  8457c0:	10c8000c 	andi	r3,r2,8192
  8457c4:	1800051e 	bne	r3,zero,8457dc <_fputwc_r+0x20>
  8457c8:	30c01917 	ldw	r3,100(r6)
  8457cc:	10880014 	ori	r2,r2,8192
  8457d0:	3080030d 	sth	r2,12(r6)
  8457d4:	18880014 	ori	r2,r3,8192
  8457d8:	30801915 	stw	r2,100(r6)
  8457dc:	08456581 	jmpi	845658 <__fputwc>

008457e0 <fputwc>:
  8457e0:	008021b4 	movhi	r2,134
  8457e4:	defffc04 	addi	sp,sp,-16
  8457e8:	10adb604 	addi	r2,r2,-18728
  8457ec:	dc000115 	stw	r16,4(sp)
  8457f0:	14000017 	ldw	r16,0(r2)
  8457f4:	dc400215 	stw	r17,8(sp)
  8457f8:	dfc00315 	stw	ra,12(sp)
  8457fc:	2023883a 	mov	r17,r4
  845800:	80000226 	beq	r16,zero,84580c <fputwc+0x2c>
  845804:	80800e17 	ldw	r2,56(r16)
  845808:	10001026 	beq	r2,zero,84584c <fputwc+0x6c>
  84580c:	2880030b 	ldhu	r2,12(r5)
  845810:	10c8000c 	andi	r3,r2,8192
  845814:	1800051e 	bne	r3,zero,84582c <fputwc+0x4c>
  845818:	28c01917 	ldw	r3,100(r5)
  84581c:	10880014 	ori	r2,r2,8192
  845820:	2880030d 	sth	r2,12(r5)
  845824:	18880014 	ori	r2,r3,8192
  845828:	28801915 	stw	r2,100(r5)
  84582c:	280d883a 	mov	r6,r5
  845830:	8009883a 	mov	r4,r16
  845834:	880b883a 	mov	r5,r17
  845838:	dfc00317 	ldw	ra,12(sp)
  84583c:	dc400217 	ldw	r17,8(sp)
  845840:	dc000117 	ldw	r16,4(sp)
  845844:	dec00404 	addi	sp,sp,16
  845848:	08456581 	jmpi	845658 <__fputwc>
  84584c:	8009883a 	mov	r4,r16
  845850:	d9400015 	stw	r5,0(sp)
  845854:	083274c0 	call	83274c <__sinit>
  845858:	d9400017 	ldw	r5,0(sp)
  84585c:	003feb06 	br	84580c <__alt_mem_epcs_flash_controller_0+0xff83c80c>

00845860 <rshift>:
  845860:	2807d17a 	srai	r3,r5,5
  845864:	20800417 	ldw	r2,16(r4)
  845868:	22000504 	addi	r8,r4,20
  84586c:	1880250e 	bge	r3,r2,845904 <rshift+0xa4>
  845870:	1085883a 	add	r2,r2,r2
  845874:	18c7883a 	add	r3,r3,r3
  845878:	1085883a 	add	r2,r2,r2
  84587c:	18c7883a 	add	r3,r3,r3
  845880:	294007cc 	andi	r5,r5,31
  845884:	4085883a 	add	r2,r8,r2
  845888:	40c7883a 	add	r3,r8,r3
  84588c:	28002026 	beq	r5,zero,845910 <rshift+0xb0>
  845890:	19800017 	ldw	r6,0(r3)
  845894:	02c00804 	movi	r11,32
  845898:	19c00104 	addi	r7,r3,4
  84589c:	5957c83a 	sub	r11,r11,r5
  8458a0:	314cd83a 	srl	r6,r6,r5
  8458a4:	38802c2e 	bgeu	r7,r2,845958 <rshift+0xf8>
  8458a8:	4015883a 	mov	r10,r8
  8458ac:	3a400017 	ldw	r9,0(r7)
  8458b0:	52800104 	addi	r10,r10,4
  8458b4:	39c00104 	addi	r7,r7,4
  8458b8:	4ad2983a 	sll	r9,r9,r11
  8458bc:	498cb03a 	or	r6,r9,r6
  8458c0:	51bfff15 	stw	r6,-4(r10)
  8458c4:	39bfff17 	ldw	r6,-4(r7)
  8458c8:	314cd83a 	srl	r6,r6,r5
  8458cc:	38bff736 	bltu	r7,r2,8458ac <__alt_mem_epcs_flash_controller_0+0xff83c8ac>
  8458d0:	10c7c83a 	sub	r3,r2,r3
  8458d4:	18fffec4 	addi	r3,r3,-5
  8458d8:	1806d0ba 	srli	r3,r3,2
  8458dc:	18c00044 	addi	r3,r3,1
  8458e0:	18c7883a 	add	r3,r3,r3
  8458e4:	18c7883a 	add	r3,r3,r3
  8458e8:	40c7883a 	add	r3,r8,r3
  8458ec:	19800015 	stw	r6,0(r3)
  8458f0:	30000126 	beq	r6,zero,8458f8 <rshift+0x98>
  8458f4:	18c00104 	addi	r3,r3,4
  8458f8:	1a05c83a 	sub	r2,r3,r8
  8458fc:	1005d0ba 	srai	r2,r2,2
  845900:	00001206 	br	84594c <rshift+0xec>
  845904:	20000415 	stw	zero,16(r4)
  845908:	20000515 	stw	zero,20(r4)
  84590c:	f800283a 	ret
  845910:	18bffc2e 	bgeu	r3,r2,845904 <__alt_mem_epcs_flash_controller_0+0xff83c904>
  845914:	180d883a 	mov	r6,r3
  845918:	400b883a 	mov	r5,r8
  84591c:	31c00017 	ldw	r7,0(r6)
  845920:	29400104 	addi	r5,r5,4
  845924:	31800104 	addi	r6,r6,4
  845928:	29ffff15 	stw	r7,-4(r5)
  84592c:	30bffb36 	bltu	r6,r2,84591c <__alt_mem_epcs_flash_controller_0+0xff83c91c>
  845930:	00c6303a 	nor	r3,zero,r3
  845934:	1885883a 	add	r2,r3,r2
  845938:	1004d0ba 	srli	r2,r2,2
  84593c:	10800044 	addi	r2,r2,1
  845940:	1085883a 	add	r2,r2,r2
  845944:	1085883a 	add	r2,r2,r2
  845948:	1005d0ba 	srai	r2,r2,2
  84594c:	20800415 	stw	r2,16(r4)
  845950:	103fed26 	beq	r2,zero,845908 <__alt_mem_epcs_flash_controller_0+0xff83c908>
  845954:	f800283a 	ret
  845958:	4007883a 	mov	r3,r8
  84595c:	003fe306 	br	8458ec <__alt_mem_epcs_flash_controller_0+0xff83c8ec>

00845960 <__gethex>:
  845960:	deffea04 	addi	sp,sp,-88
  845964:	d9c00415 	stw	r7,16(sp)
  845968:	dfc01515 	stw	ra,84(sp)
  84596c:	dd001015 	stw	r20,64(sp)
  845970:	dcc00f15 	stw	r19,60(sp)
  845974:	2829883a 	mov	r20,r5
  845978:	dc800e15 	stw	r18,56(sp)
  84597c:	d9000215 	stw	r4,8(sp)
  845980:	d9800115 	stw	r6,4(sp)
  845984:	df001415 	stw	fp,80(sp)
  845988:	ddc01315 	stw	r23,76(sp)
  84598c:	dd801215 	stw	r22,72(sp)
  845990:	dd401115 	stw	r21,68(sp)
  845994:	dc400d15 	stw	r17,52(sp)
  845998:	dc000c15 	stw	r16,48(sp)
  84599c:	083d2ac0 	call	83d2ac <_localeconv_r>
  8459a0:	14800017 	ldw	r18,0(r2)
  8459a4:	9009883a 	mov	r4,r18
  8459a8:	0834c200 	call	834c20 <strlen>
  8459ac:	a1c00017 	ldw	r7,0(r20)
  8459b0:	1027883a 	mov	r19,r2
  8459b4:	9085883a 	add	r2,r18,r2
  8459b8:	10bfffc3 	ldbu	r2,-1(r2)
  8459bc:	38c00083 	ldbu	r3,2(r7)
  8459c0:	d8800305 	stb	r2,12(sp)
  8459c4:	00800c04 	movi	r2,48
  8459c8:	18815a1e 	bne	r3,r2,845f34 <__gethex+0x5d4>
  8459cc:	013fff84 	movi	r4,-2
  8459d0:	388000c4 	addi	r2,r7,3
  8459d4:	21c9c83a 	sub	r4,r4,r7
  8459d8:	180b883a 	mov	r5,r3
  8459dc:	20b9883a 	add	fp,r4,r2
  8459e0:	102f883a 	mov	r23,r2
  8459e4:	10800044 	addi	r2,r2,1
  8459e8:	10ffffc3 	ldbu	r3,-1(r2)
  8459ec:	197ffb26 	beq	r3,r5,8459dc <__alt_mem_epcs_flash_controller_0+0xff83c9dc>
  8459f0:	058021b4 	movhi	r22,134
  8459f4:	b5a57d84 	addi	r22,r22,-27146
  8459f8:	b0c7883a 	add	r3,r22,r3
  8459fc:	18800003 	ldbu	r2,0(r3)
  845a00:	10008726 	beq	r2,zero,845c20 <__gethex+0x2c0>
  845a04:	b8800003 	ldbu	r2,0(r23)
  845a08:	d8000015 	stw	zero,0(sp)
  845a0c:	0021883a 	mov	r16,zero
  845a10:	b085883a 	add	r2,r22,r2
  845a14:	10800003 	ldbu	r2,0(r2)
  845a18:	b823883a 	mov	r17,r23
  845a1c:	10000526 	beq	r2,zero,845a34 <__gethex+0xd4>
  845a20:	8c400044 	addi	r17,r17,1
  845a24:	88800003 	ldbu	r2,0(r17)
  845a28:	b085883a 	add	r2,r22,r2
  845a2c:	10800003 	ldbu	r2,0(r2)
  845a30:	103ffb1e 	bne	r2,zero,845a20 <__alt_mem_epcs_flash_controller_0+0xff83ca20>
  845a34:	980d883a 	mov	r6,r19
  845a38:	900b883a 	mov	r5,r18
  845a3c:	8809883a 	mov	r4,r17
  845a40:	0834cb80 	call	834cb8 <strncmp>
  845a44:	1000031e 	bne	r2,zero,845a54 <__gethex+0xf4>
  845a48:	80015c26 	beq	r16,zero,845fbc <__gethex+0x65c>
  845a4c:	88800003 	ldbu	r2,0(r17)
  845a50:	00000206 	br	845a5c <__gethex+0xfc>
  845a54:	88800003 	ldbu	r2,0(r17)
  845a58:	80012926 	beq	r16,zero,845f00 <__gethex+0x5a0>
  845a5c:	8c21c83a 	sub	r16,r17,r16
  845a60:	8421883a 	add	r16,r16,r16
  845a64:	8421883a 	add	r16,r16,r16
  845a68:	0421c83a 	sub	r16,zero,r16
  845a6c:	10803fcc 	andi	r2,r2,255
  845a70:	01001404 	movi	r4,80
  845a74:	11008826 	beq	r2,r4,845c98 <__gethex+0x338>
  845a78:	01001c04 	movi	r4,112
  845a7c:	11008626 	beq	r2,r4,845c98 <__gethex+0x338>
  845a80:	882b883a 	mov	r21,r17
  845a84:	d8c00017 	ldw	r3,0(sp)
  845a88:	a4400015 	stw	r17,0(r20)
  845a8c:	1800711e 	bne	r3,zero,845c54 <__gethex+0x2f4>
  845a90:	adc5c83a 	sub	r2,r21,r23
  845a94:	10bfffc4 	addi	r2,r2,-1
  845a98:	00c001c4 	movi	r3,7
  845a9c:	000b883a 	mov	r5,zero
  845aa0:	1880030e 	bge	r3,r2,845ab0 <__gethex+0x150>
  845aa4:	1005d07a 	srai	r2,r2,1
  845aa8:	29400044 	addi	r5,r5,1
  845aac:	18bffd16 	blt	r3,r2,845aa4 <__alt_mem_epcs_flash_controller_0+0xff83caa4>
  845ab0:	d9000217 	ldw	r4,8(sp)
  845ab4:	083d7a00 	call	83d7a0 <_Balloc>
  845ab8:	10c00504 	addi	r3,r2,20
  845abc:	d8c00015 	stw	r3,0(sp)
  845ac0:	1029883a 	mov	r20,r2
  845ac4:	bd417c2e 	bgeu	r23,r21,8460b8 <__gethex+0x758>
  845ac8:	dc400303 	ldbu	r17,12(sp)
  845acc:	03000044 	movi	r12,1
  845ad0:	1813883a 	mov	r9,r3
  845ad4:	0039883a 	mov	fp,zero
  845ad8:	0007883a 	mov	r3,zero
  845adc:	64d9c83a 	sub	r12,r12,r19
  845ae0:	02800804 	movi	r10,32
  845ae4:	a8bfffc3 	ldbu	r2,-1(r21)
  845ae8:	ab7fffc4 	addi	r13,r21,-1
  845aec:	88803026 	beq	r17,r2,845bb0 <__gethex+0x250>
  845af0:	e2804526 	beq	fp,r10,845c08 <__gethex+0x2a8>
  845af4:	e00b883a 	mov	r5,fp
  845af8:	e7000104 	addi	fp,fp,4
  845afc:	a93fffc3 	ldbu	r4,-1(r21)
  845b00:	682b883a 	mov	r21,r13
  845b04:	b109883a 	add	r4,r22,r4
  845b08:	20800003 	ldbu	r2,0(r4)
  845b0c:	108003cc 	andi	r2,r2,15
  845b10:	1144983a 	sll	r2,r2,r5
  845b14:	1886b03a 	or	r3,r3,r2
  845b18:	bd7ff236 	bltu	r23,r21,845ae4 <__alt_mem_epcs_flash_controller_0+0xff83cae4>
  845b1c:	d9000017 	ldw	r4,0(sp)
  845b20:	48800104 	addi	r2,r9,4
  845b24:	48c00015 	stw	r3,0(r9)
  845b28:	1105c83a 	sub	r2,r2,r4
  845b2c:	1005d0ba 	srai	r2,r2,2
  845b30:	1809883a 	mov	r4,r3
  845b34:	a0800415 	stw	r2,16(r20)
  845b38:	1022917a 	slli	r17,r2,5
  845b3c:	083dabc0 	call	83dabc <__hi0bits>
  845b40:	d8c00117 	ldw	r3,4(sp)
  845b44:	8885c83a 	sub	r2,r17,r2
  845b48:	1c800017 	ldw	r18,0(r3)
  845b4c:	9080d016 	blt	r18,r2,845e90 <__gethex+0x530>
  845b50:	1480ed16 	blt	r2,r18,845f08 <__gethex+0x5a8>
  845b54:	0027883a 	mov	r19,zero
  845b58:	d8c00117 	ldw	r3,4(sp)
  845b5c:	18800217 	ldw	r2,8(r3)
  845b60:	14009416 	blt	r2,r16,845db4 <__gethex+0x454>
  845b64:	d8c00117 	ldw	r3,4(sp)
  845b68:	18800117 	ldw	r2,4(r3)
  845b6c:	8080b30e 	bge	r16,r2,845e3c <__gethex+0x4dc>
  845b70:	1421c83a 	sub	r16,r2,r16
  845b74:	8480f616 	blt	r16,r18,845f50 <__gethex+0x5f0>
  845b78:	18c00317 	ldw	r3,12(r3)
  845b7c:	01000084 	movi	r4,2
  845b80:	19015226 	beq	r3,r4,8460cc <__gethex+0x76c>
  845b84:	010000c4 	movi	r4,3
  845b88:	19013726 	beq	r3,r4,846068 <__gethex+0x708>
  845b8c:	01000044 	movi	r4,1
  845b90:	19015126 	beq	r3,r4,8460d8 <__gethex+0x778>
  845b94:	d9000217 	ldw	r4,8(sp)
  845b98:	a00b883a 	mov	r5,r20
  845b9c:	083d8480 	call	83d848 <_Bfree>
  845ba0:	d8801617 	ldw	r2,88(sp)
  845ba4:	10000015 	stw	zero,0(r2)
  845ba8:	00801404 	movi	r2,80
  845bac:	00002b06 	br	845c5c <__gethex+0x2fc>
  845bb0:	6b1d883a 	add	r14,r13,r12
  845bb4:	75ffce36 	bltu	r14,r23,845af0 <__alt_mem_epcs_flash_controller_0+0xff83caf0>
  845bb8:	7009883a 	mov	r4,r14
  845bbc:	980d883a 	mov	r6,r19
  845bc0:	900b883a 	mov	r5,r18
  845bc4:	d8c00715 	stw	r3,28(sp)
  845bc8:	da400615 	stw	r9,24(sp)
  845bcc:	da800b15 	stw	r10,44(sp)
  845bd0:	db000a15 	stw	r12,40(sp)
  845bd4:	db400815 	stw	r13,32(sp)
  845bd8:	db800915 	stw	r14,36(sp)
  845bdc:	0834cb80 	call	834cb8 <strncmp>
  845be0:	d8c00717 	ldw	r3,28(sp)
  845be4:	da400617 	ldw	r9,24(sp)
  845be8:	da800b17 	ldw	r10,44(sp)
  845bec:	db000a17 	ldw	r12,40(sp)
  845bf0:	db400817 	ldw	r13,32(sp)
  845bf4:	db800917 	ldw	r14,36(sp)
  845bf8:	103fbd1e 	bne	r2,zero,845af0 <__alt_mem_epcs_flash_controller_0+0xff83caf0>
  845bfc:	702b883a 	mov	r21,r14
  845c00:	bd7fb836 	bltu	r23,r21,845ae4 <__alt_mem_epcs_flash_controller_0+0xff83cae4>
  845c04:	003fc506 	br	845b1c <__alt_mem_epcs_flash_controller_0+0xff83cb1c>
  845c08:	07000104 	movi	fp,4
  845c0c:	48c00015 	stw	r3,0(r9)
  845c10:	000b883a 	mov	r5,zero
  845c14:	4f13883a 	add	r9,r9,fp
  845c18:	0007883a 	mov	r3,zero
  845c1c:	003fb706 	br	845afc <__alt_mem_epcs_flash_controller_0+0xff83cafc>
  845c20:	980d883a 	mov	r6,r19
  845c24:	900b883a 	mov	r5,r18
  845c28:	b809883a 	mov	r4,r23
  845c2c:	0834cb80 	call	834cb8 <strncmp>
  845c30:	10006c26 	beq	r2,zero,845de4 <__gethex+0x484>
  845c34:	b8800003 	ldbu	r2,0(r23)
  845c38:	b823883a 	mov	r17,r23
  845c3c:	10803fcc 	andi	r2,r2,255
  845c40:	01001404 	movi	r4,80
  845c44:	11001126 	beq	r2,r4,845c8c <__gethex+0x32c>
  845c48:	01001c04 	movi	r4,112
  845c4c:	11000f26 	beq	r2,r4,845c8c <__gethex+0x32c>
  845c50:	a4400015 	stw	r17,0(r20)
  845c54:	e0008c1e 	bne	fp,zero,845e88 <__gethex+0x528>
  845c58:	00800184 	movi	r2,6
  845c5c:	dfc01517 	ldw	ra,84(sp)
  845c60:	df001417 	ldw	fp,80(sp)
  845c64:	ddc01317 	ldw	r23,76(sp)
  845c68:	dd801217 	ldw	r22,72(sp)
  845c6c:	dd401117 	ldw	r21,68(sp)
  845c70:	dd001017 	ldw	r20,64(sp)
  845c74:	dcc00f17 	ldw	r19,60(sp)
  845c78:	dc800e17 	ldw	r18,56(sp)
  845c7c:	dc400d17 	ldw	r17,52(sp)
  845c80:	dc000c17 	ldw	r16,48(sp)
  845c84:	dec01604 	addi	sp,sp,88
  845c88:	f800283a 	ret
  845c8c:	00c00044 	movi	r3,1
  845c90:	0021883a 	mov	r16,zero
  845c94:	d8c00015 	stw	r3,0(sp)
  845c98:	88800043 	ldbu	r2,1(r17)
  845c9c:	01400ac4 	movi	r5,43
  845ca0:	11003fcc 	andi	r4,r2,255
  845ca4:	21407626 	beq	r4,r5,845e80 <__gethex+0x520>
  845ca8:	01400b44 	movi	r5,45
  845cac:	21404826 	beq	r4,r5,845dd0 <__gethex+0x470>
  845cb0:	8ac00044 	addi	r11,r17,1
  845cb4:	d8000515 	stw	zero,20(sp)
  845cb8:	10803fcc 	andi	r2,r2,255
  845cbc:	b085883a 	add	r2,r22,r2
  845cc0:	11000003 	ldbu	r4,0(r2)
  845cc4:	05400604 	movi	r21,24
  845cc8:	20bfffc4 	addi	r2,r4,-1
  845ccc:	10803fcc 	andi	r2,r2,255
  845cd0:	a8bf6b36 	bltu	r21,r2,845a80 <__alt_mem_epcs_flash_controller_0+0xff83ca80>
  845cd4:	58800043 	ldbu	r2,1(r11)
  845cd8:	014021b4 	movhi	r5,134
  845cdc:	29657d84 	addi	r5,r5,-27146
  845ce0:	2885883a 	add	r2,r5,r2
  845ce4:	12800003 	ldbu	r10,0(r2)
  845ce8:	21003fcc 	andi	r4,r4,255
  845cec:	213ffc04 	addi	r4,r4,-16
  845cf0:	50bfffc4 	addi	r2,r10,-1
  845cf4:	10803fcc 	andi	r2,r2,255
  845cf8:	5ac00044 	addi	r11,r11,1
  845cfc:	51803fcc 	andi	r6,r10,255
  845d00:	a8801036 	bltu	r21,r2,845d44 <__gethex+0x3e4>
  845d04:	5ac00044 	addi	r11,r11,1
  845d08:	01400284 	movi	r5,10
  845d0c:	d9800715 	stw	r6,28(sp)
  845d10:	dac00615 	stw	r11,24(sp)
  845d14:	08305040 	call	830504 <__mulsi3>
  845d18:	dac00617 	ldw	r11,24(sp)
  845d1c:	d9800717 	ldw	r6,28(sp)
  845d20:	5a800003 	ldbu	r10,0(r11)
  845d24:	1185883a 	add	r2,r2,r6
  845d28:	113ffc04 	addi	r4,r2,-16
  845d2c:	b295883a 	add	r10,r22,r10
  845d30:	51400003 	ldbu	r5,0(r10)
  845d34:	2abfffc4 	addi	r10,r5,-1
  845d38:	52803fcc 	andi	r10,r10,255
  845d3c:	29803fcc 	andi	r6,r5,255
  845d40:	aabff02e 	bgeu	r21,r10,845d04 <__alt_mem_epcs_flash_controller_0+0xff83cd04>
  845d44:	d8c00517 	ldw	r3,20(sp)
  845d48:	18000126 	beq	r3,zero,845d50 <__gethex+0x3f0>
  845d4c:	0109c83a 	sub	r4,zero,r4
  845d50:	882b883a 	mov	r21,r17
  845d54:	8121883a 	add	r16,r16,r4
  845d58:	5823883a 	mov	r17,r11
  845d5c:	003f4906 	br	845a84 <__alt_mem_epcs_flash_controller_0+0xff83ca84>
  845d60:	a0800217 	ldw	r2,8(r20)
  845d64:	a880f20e 	bge	r21,r2,846130 <__gethex+0x7d0>
  845d68:	a807883a 	mov	r3,r21
  845d6c:	18800144 	addi	r2,r3,5
  845d70:	1085883a 	add	r2,r2,r2
  845d74:	18c00044 	addi	r3,r3,1
  845d78:	1085883a 	add	r2,r2,r2
  845d7c:	a085883a 	add	r2,r20,r2
  845d80:	a0c00415 	stw	r3,16(r20)
  845d84:	01000044 	movi	r4,1
  845d88:	11000015 	stw	r4,0(r2)
  845d8c:	00800084 	movi	r2,2
  845d90:	8880da26 	beq	r17,r2,8460fc <__gethex+0x79c>
  845d94:	a8c0ae0e 	bge	r21,r3,846050 <__gethex+0x6f0>
  845d98:	01400044 	movi	r5,1
  845d9c:	a009883a 	mov	r4,r20
  845da0:	08458600 	call	845860 <rshift>
  845da4:	d8c00117 	ldw	r3,4(sp)
  845da8:	84000044 	addi	r16,r16,1
  845dac:	18800217 	ldw	r2,8(r3)
  845db0:	1400a90e 	bge	r2,r16,846058 <__gethex+0x6f8>
  845db4:	d9000217 	ldw	r4,8(sp)
  845db8:	a00b883a 	mov	r5,r20
  845dbc:	083d8480 	call	83d848 <_Bfree>
  845dc0:	d9001617 	ldw	r4,88(sp)
  845dc4:	008028c4 	movi	r2,163
  845dc8:	20000015 	stw	zero,0(r4)
  845dcc:	003fa306 	br	845c5c <__alt_mem_epcs_flash_controller_0+0xff83cc5c>
  845dd0:	00c00044 	movi	r3,1
  845dd4:	d8c00515 	stw	r3,20(sp)
  845dd8:	88800083 	ldbu	r2,2(r17)
  845ddc:	8ac00084 	addi	r11,r17,2
  845de0:	003fb506 	br	845cb8 <__alt_mem_epcs_flash_controller_0+0xff83ccb8>
  845de4:	bce3883a 	add	r17,r23,r19
  845de8:	89000003 	ldbu	r4,0(r17)
  845dec:	21403fcc 	andi	r5,r4,255
  845df0:	b145883a 	add	r2,r22,r5
  845df4:	10800003 	ldbu	r2,0(r2)
  845df8:	11803fcc 	andi	r6,r2,255
  845dfc:	30005026 	beq	r6,zero,845f40 <__gethex+0x5e0>
  845e00:	01000c04 	movi	r4,48
  845e04:	882f883a 	mov	r23,r17
  845e08:	2900061e 	bne	r5,r4,845e24 <__gethex+0x4c4>
  845e0c:	2809883a 	mov	r4,r5
  845e10:	bdc00044 	addi	r23,r23,1
  845e14:	b8800003 	ldbu	r2,0(r23)
  845e18:	113ffd26 	beq	r2,r4,845e10 <__alt_mem_epcs_flash_controller_0+0xff83ce10>
  845e1c:	b085883a 	add	r2,r22,r2
  845e20:	10800003 	ldbu	r2,0(r2)
  845e24:	10803fcc 	andi	r2,r2,255
  845e28:	1007003a 	cmpeq	r3,r2,zero
  845e2c:	d8c00015 	stw	r3,0(sp)
  845e30:	8821883a 	mov	r16,r17
  845e34:	07000044 	movi	fp,1
  845e38:	003ef706 	br	845a18 <__alt_mem_epcs_flash_controller_0+0xff83ca18>
  845e3c:	04400044 	movi	r17,1
  845e40:	98000926 	beq	r19,zero,845e68 <__gethex+0x508>
  845e44:	d8c00117 	ldw	r3,4(sp)
  845e48:	18800317 	ldw	r2,12(r3)
  845e4c:	00c00084 	movi	r3,2
  845e50:	10c06826 	beq	r2,r3,845ff4 <__gethex+0x694>
  845e54:	00c000c4 	movi	r3,3
  845e58:	10c06a26 	beq	r2,r3,846004 <__gethex+0x6a4>
  845e5c:	00c00044 	movi	r3,1
  845e60:	10c08d26 	beq	r2,r3,846098 <__gethex+0x738>
  845e64:	8c400414 	ori	r17,r17,16
  845e68:	d9001617 	ldw	r4,88(sp)
  845e6c:	d8c00417 	ldw	r3,16(sp)
  845e70:	8805883a 	mov	r2,r17
  845e74:	25000015 	stw	r20,0(r4)
  845e78:	1c000015 	stw	r16,0(r3)
  845e7c:	003f7706 	br	845c5c <__alt_mem_epcs_flash_controller_0+0xff83cc5c>
  845e80:	d8000515 	stw	zero,20(sp)
  845e84:	003fd406 	br	845dd8 <__alt_mem_epcs_flash_controller_0+0xff83cdd8>
  845e88:	0005883a 	mov	r2,zero
  845e8c:	003f7306 	br	845c5c <__alt_mem_epcs_flash_controller_0+0xff83cc5c>
  845e90:	14a3c83a 	sub	r17,r2,r18
  845e94:	880b883a 	mov	r5,r17
  845e98:	a009883a 	mov	r4,r20
  845e9c:	083e7cc0 	call	83e7cc <__any_on>
  845ea0:	10002926 	beq	r2,zero,845f48 <__gethex+0x5e8>
  845ea4:	897fffc4 	addi	r5,r17,-1
  845ea8:	2807d17a 	srai	r3,r5,5
  845eac:	d8800017 	ldw	r2,0(sp)
  845eb0:	290007cc 	andi	r4,r5,31
  845eb4:	18c7883a 	add	r3,r3,r3
  845eb8:	18c7883a 	add	r3,r3,r3
  845ebc:	04c00044 	movi	r19,1
  845ec0:	10c7883a 	add	r3,r2,r3
  845ec4:	9908983a 	sll	r4,r19,r4
  845ec8:	18c00017 	ldw	r3,0(r3)
  845ecc:	20c6703a 	and	r3,r4,r3
  845ed0:	18000626 	beq	r3,zero,845eec <__gethex+0x58c>
  845ed4:	99407b0e 	bge	r19,r5,8460c4 <__gethex+0x764>
  845ed8:	897fff84 	addi	r5,r17,-2
  845edc:	a009883a 	mov	r4,r20
  845ee0:	083e7cc0 	call	83e7cc <__any_on>
  845ee4:	10007726 	beq	r2,zero,8460c4 <__gethex+0x764>
  845ee8:	04c000c4 	movi	r19,3
  845eec:	880b883a 	mov	r5,r17
  845ef0:	a009883a 	mov	r4,r20
  845ef4:	08458600 	call	845860 <rshift>
  845ef8:	8461883a 	add	r16,r16,r17
  845efc:	003f1606 	br	845b58 <__alt_mem_epcs_flash_controller_0+0xff83cb58>
  845f00:	0021883a 	mov	r16,zero
  845f04:	003ed906 	br	845a6c <__alt_mem_epcs_flash_controller_0+0xff83ca6c>
  845f08:	d9000217 	ldw	r4,8(sp)
  845f0c:	90a3c83a 	sub	r17,r18,r2
  845f10:	a00b883a 	mov	r5,r20
  845f14:	880d883a 	mov	r6,r17
  845f18:	083dfdc0 	call	83dfdc <__lshift>
  845f1c:	10c00504 	addi	r3,r2,20
  845f20:	1029883a 	mov	r20,r2
  845f24:	8461c83a 	sub	r16,r16,r17
  845f28:	d8c00015 	stw	r3,0(sp)
  845f2c:	0027883a 	mov	r19,zero
  845f30:	003f0906 	br	845b58 <__alt_mem_epcs_flash_controller_0+0xff83cb58>
  845f34:	3dc00084 	addi	r23,r7,2
  845f38:	0039883a 	mov	fp,zero
  845f3c:	003eac06 	br	8459f0 <__alt_mem_epcs_flash_controller_0+0xff83c9f0>
  845f40:	2005883a 	mov	r2,r4
  845f44:	003f3d06 	br	845c3c <__alt_mem_epcs_flash_controller_0+0xff83cc3c>
  845f48:	0027883a 	mov	r19,zero
  845f4c:	003fe706 	br	845eec <__alt_mem_epcs_flash_controller_0+0xff83ceec>
  845f50:	847fffc4 	addi	r17,r16,-1
  845f54:	9800421e 	bne	r19,zero,846060 <__gethex+0x700>
  845f58:	88000426 	beq	r17,zero,845f6c <__gethex+0x60c>
  845f5c:	880b883a 	mov	r5,r17
  845f60:	a009883a 	mov	r4,r20
  845f64:	083e7cc0 	call	83e7cc <__any_on>
  845f68:	1027883a 	mov	r19,r2
  845f6c:	8805d17a 	srai	r2,r17,5
  845f70:	d8c00017 	ldw	r3,0(sp)
  845f74:	8c4007cc 	andi	r17,r17,31
  845f78:	1085883a 	add	r2,r2,r2
  845f7c:	1085883a 	add	r2,r2,r2
  845f80:	1885883a 	add	r2,r3,r2
  845f84:	00c00044 	movi	r3,1
  845f88:	1c62983a 	sll	r17,r3,r17
  845f8c:	10800017 	ldw	r2,0(r2)
  845f90:	8884703a 	and	r2,r17,r2
  845f94:	10000126 	beq	r2,zero,845f9c <__gethex+0x63c>
  845f98:	9cc00094 	ori	r19,r19,2
  845f9c:	800b883a 	mov	r5,r16
  845fa0:	a009883a 	mov	r4,r20
  845fa4:	08458600 	call	845860 <rshift>
  845fa8:	d8c00117 	ldw	r3,4(sp)
  845fac:	9425c83a 	sub	r18,r18,r16
  845fb0:	04400084 	movi	r17,2
  845fb4:	1c000117 	ldw	r16,4(r3)
  845fb8:	003fa106 	br	845e40 <__alt_mem_epcs_flash_controller_0+0xff83ce40>
  845fbc:	8ce1883a 	add	r16,r17,r19
  845fc0:	80800003 	ldbu	r2,0(r16)
  845fc4:	8023883a 	mov	r17,r16
  845fc8:	10c03fcc 	andi	r3,r2,255
  845fcc:	b0c7883a 	add	r3,r22,r3
  845fd0:	18c00003 	ldbu	r3,0(r3)
  845fd4:	183ea026 	beq	r3,zero,845a58 <__alt_mem_epcs_flash_controller_0+0xff83ca58>
  845fd8:	8c400044 	addi	r17,r17,1
  845fdc:	88800003 	ldbu	r2,0(r17)
  845fe0:	11003fcc 	andi	r4,r2,255
  845fe4:	b109883a 	add	r4,r22,r4
  845fe8:	21000003 	ldbu	r4,0(r4)
  845fec:	203ffa1e 	bne	r4,zero,845fd8 <__alt_mem_epcs_flash_controller_0+0xff83cfd8>
  845ff0:	003e9906 	br	845a58 <__alt_mem_epcs_flash_controller_0+0xff83ca58>
  845ff4:	d9001717 	ldw	r4,92(sp)
  845ff8:	00800044 	movi	r2,1
  845ffc:	1109c83a 	sub	r4,r2,r4
  846000:	d9001715 	stw	r4,92(sp)
  846004:	d8801717 	ldw	r2,92(sp)
  846008:	103f9626 	beq	r2,zero,845e64 <__alt_mem_epcs_flash_controller_0+0xff83ce64>
  84600c:	a5400417 	ldw	r21,16(r20)
  846010:	d9800017 	ldw	r6,0(sp)
  846014:	013fffc4 	movi	r4,-1
  846018:	ad67883a 	add	r19,r21,r21
  84601c:	9ce7883a 	add	r19,r19,r19
  846020:	3005883a 	mov	r2,r6
  846024:	34cb883a 	add	r5,r6,r19
  846028:	00000306 	br	846038 <__gethex+0x6d8>
  84602c:	10000015 	stw	zero,0(r2)
  846030:	10800104 	addi	r2,r2,4
  846034:	117f4a2e 	bgeu	r2,r5,845d60 <__alt_mem_epcs_flash_controller_0+0xff83cd60>
  846038:	10c00017 	ldw	r3,0(r2)
  84603c:	193ffb26 	beq	r3,r4,84602c <__alt_mem_epcs_flash_controller_0+0xff83d02c>
  846040:	18c00044 	addi	r3,r3,1
  846044:	10c00015 	stw	r3,0(r2)
  846048:	00800084 	movi	r2,2
  84604c:	88802b26 	beq	r17,r2,8460fc <__gethex+0x79c>
  846050:	948007cc 	andi	r18,r18,31
  846054:	90002f1e 	bne	r18,zero,846114 <__gethex+0x7b4>
  846058:	04400844 	movi	r17,33
  84605c:	003f8206 	br	845e68 <__alt_mem_epcs_flash_controller_0+0xff83ce68>
  846060:	04c00044 	movi	r19,1
  846064:	003fc106 	br	845f6c <__alt_mem_epcs_flash_controller_0+0xff83cf6c>
  846068:	d8c01717 	ldw	r3,92(sp)
  84606c:	183ec926 	beq	r3,zero,845b94 <__alt_mem_epcs_flash_controller_0+0xff83cb94>
  846070:	d8c00417 	ldw	r3,16(sp)
  846074:	d9001617 	ldw	r4,88(sp)
  846078:	18800015 	stw	r2,0(r3)
  84607c:	d8c00017 	ldw	r3,0(sp)
  846080:	00800044 	movi	r2,1
  846084:	a0800415 	stw	r2,16(r20)
  846088:	18800015 	stw	r2,0(r3)
  84608c:	25000015 	stw	r20,0(r4)
  846090:	00801884 	movi	r2,98
  846094:	003ef106 	br	845c5c <__alt_mem_epcs_flash_controller_0+0xff83cc5c>
  846098:	9880008c 	andi	r2,r19,2
  84609c:	103f7126 	beq	r2,zero,845e64 <__alt_mem_epcs_flash_controller_0+0xff83ce64>
  8460a0:	d8c00017 	ldw	r3,0(sp)
  8460a4:	18800017 	ldw	r2,0(r3)
  8460a8:	9884b03a 	or	r2,r19,r2
  8460ac:	1080004c 	andi	r2,r2,1
  8460b0:	103fd61e 	bne	r2,zero,84600c <__alt_mem_epcs_flash_controller_0+0xff83d00c>
  8460b4:	003f6b06 	br	845e64 <__alt_mem_epcs_flash_controller_0+0xff83ce64>
  8460b8:	da400017 	ldw	r9,0(sp)
  8460bc:	0007883a 	mov	r3,zero
  8460c0:	003e9606 	br	845b1c <__alt_mem_epcs_flash_controller_0+0xff83cb1c>
  8460c4:	04c00084 	movi	r19,2
  8460c8:	003f8806 	br	845eec <__alt_mem_epcs_flash_controller_0+0xff83ceec>
  8460cc:	d9001717 	ldw	r4,92(sp)
  8460d0:	203fe726 	beq	r4,zero,846070 <__alt_mem_epcs_flash_controller_0+0xff83d070>
  8460d4:	003eaf06 	br	845b94 <__alt_mem_epcs_flash_controller_0+0xff83cb94>
  8460d8:	943eae1e 	bne	r18,r16,845b94 <__alt_mem_epcs_flash_controller_0+0xff83cb94>
  8460dc:	1cbfe40e 	bge	r3,r18,846070 <__alt_mem_epcs_flash_controller_0+0xff83d070>
  8460e0:	917fffc4 	addi	r5,r18,-1
  8460e4:	a009883a 	mov	r4,r20
  8460e8:	083e7cc0 	call	83e7cc <__any_on>
  8460ec:	103ea926 	beq	r2,zero,845b94 <__alt_mem_epcs_flash_controller_0+0xff83cb94>
  8460f0:	d8c00117 	ldw	r3,4(sp)
  8460f4:	18800117 	ldw	r2,4(r3)
  8460f8:	003fdd06 	br	846070 <__alt_mem_epcs_flash_controller_0+0xff83d070>
  8460fc:	d8c00117 	ldw	r3,4(sp)
  846100:	18800017 	ldw	r2,0(r3)
  846104:	10bfffc4 	addi	r2,r2,-1
  846108:	90801c26 	beq	r18,r2,84617c <__gethex+0x81c>
  84610c:	04400884 	movi	r17,34
  846110:	003f5506 	br	845e68 <__alt_mem_epcs_flash_controller_0+0xff83ce68>
  846114:	34c5883a 	add	r2,r6,r19
  846118:	113fff17 	ldw	r4,-4(r2)
  84611c:	083dabc0 	call	83dabc <__hi0bits>
  846120:	00c00804 	movi	r3,32
  846124:	1ca5c83a 	sub	r18,r3,r18
  846128:	14bfcb0e 	bge	r2,r18,846058 <__alt_mem_epcs_flash_controller_0+0xff83d058>
  84612c:	003f1a06 	br	845d98 <__alt_mem_epcs_flash_controller_0+0xff83cd98>
  846130:	a1400117 	ldw	r5,4(r20)
  846134:	d9000217 	ldw	r4,8(sp)
  846138:	29400044 	addi	r5,r5,1
  84613c:	083d7a00 	call	83d7a0 <_Balloc>
  846140:	a1800417 	ldw	r6,16(r20)
  846144:	a1400304 	addi	r5,r20,12
  846148:	11000304 	addi	r4,r2,12
  84614c:	31800084 	addi	r6,r6,2
  846150:	318d883a 	add	r6,r6,r6
  846154:	318d883a 	add	r6,r6,r6
  846158:	102d883a 	mov	r22,r2
  84615c:	08341500 	call	834150 <memcpy>
  846160:	d9000217 	ldw	r4,8(sp)
  846164:	a00b883a 	mov	r5,r20
  846168:	b029883a 	mov	r20,r22
  84616c:	083d8480 	call	83d848 <_Bfree>
  846170:	b0c00417 	ldw	r3,16(r22)
  846174:	b1800504 	addi	r6,r22,20
  846178:	003efc06 	br	845d6c <__alt_mem_epcs_flash_controller_0+0xff83cd6c>
  84617c:	9005d17a 	srai	r2,r18,5
  846180:	944007cc 	andi	r17,r18,31
  846184:	1085883a 	add	r2,r2,r2
  846188:	1085883a 	add	r2,r2,r2
  84618c:	3087883a 	add	r3,r6,r2
  846190:	00800044 	movi	r2,1
  846194:	1462983a 	sll	r17,r2,r17
  846198:	18800017 	ldw	r2,0(r3)
  84619c:	8884703a 	and	r2,r17,r2
  8461a0:	1022c03a 	cmpne	r17,r2,zero
  8461a4:	00800884 	movi	r2,34
  8461a8:	1463c83a 	sub	r17,r2,r17
  8461ac:	003f2e06 	br	845e68 <__alt_mem_epcs_flash_controller_0+0xff83ce68>

008461b0 <__hexnan>:
  8461b0:	defff904 	addi	sp,sp,-28
  8461b4:	dc800215 	stw	r18,8(sp)
  8461b8:	2c800017 	ldw	r18,0(r5)
  8461bc:	dfc00615 	stw	ra,24(sp)
  8461c0:	dd400515 	stw	r21,20(sp)
  8461c4:	901fd17a 	srai	r15,r18,5
  8461c8:	dd000415 	stw	r20,16(sp)
  8461cc:	dcc00315 	stw	r19,12(sp)
  8461d0:	7bdf883a 	add	r15,r15,r15
  8461d4:	7bdf883a 	add	r15,r15,r15
  8461d8:	dc400115 	stw	r17,4(sp)
  8461dc:	dc000015 	stw	r16,0(sp)
  8461e0:	948007cc 	andi	r18,r18,31
  8461e4:	33df883a 	add	r15,r6,r15
  8461e8:	90000126 	beq	r18,zero,8461f0 <__hexnan+0x40>
  8461ec:	7bc00104 	addi	r15,r15,4
  8461f0:	22000017 	ldw	r8,0(r4)
  8461f4:	7affff04 	addi	r11,r15,-4
  8461f8:	038021b4 	movhi	r14,134
  8461fc:	783fff15 	stw	zero,-4(r15)
  846200:	581b883a 	mov	r13,r11
  846204:	580b883a 	mov	r5,r11
  846208:	000f883a 	mov	r7,zero
  84620c:	003f883a 	mov	ra,zero
  846210:	0019883a 	mov	r12,zero
  846214:	73a57d84 	addi	r14,r14,-27146
  846218:	04400204 	movi	r17,8
  84621c:	04000804 	movi	r16,32
  846220:	04c001c4 	movi	r19,7
  846224:	42000044 	addi	r8,r8,1
  846228:	40c00003 	ldbu	r3,0(r8)
  84622c:	18001d26 	beq	r3,zero,8462a4 <__hexnan+0xf4>
  846230:	70c5883a 	add	r2,r14,r3
  846234:	10800003 	ldbu	r2,0(r2)
  846238:	12403fcc 	andi	r9,r2,255
  84623c:	4800301e 	bne	r9,zero,846300 <__hexnan+0x150>
  846240:	80c04236 	bltu	r16,r3,84634c <__hexnan+0x19c>
  846244:	fb3ff70e 	bge	ra,r12,846224 <__alt_mem_epcs_flash_controller_0+0xff83d224>
  846248:	2b40112e 	bgeu	r5,r13,846290 <__hexnan+0xe0>
  84624c:	99c01016 	blt	r19,r7,846290 <__hexnan+0xe0>
  846250:	89e9c83a 	sub	r20,r17,r7
  846254:	a529883a 	add	r20,r20,r20
  846258:	2a800017 	ldw	r10,0(r5)
  84625c:	a529883a 	add	r20,r20,r20
  846260:	852bc83a 	sub	r21,r16,r20
  846264:	28c00104 	addi	r3,r5,4
  846268:	2805883a 	mov	r2,r5
  84626c:	19c00017 	ldw	r7,0(r3)
  846270:	10800104 	addi	r2,r2,4
  846274:	18c00104 	addi	r3,r3,4
  846278:	3d52983a 	sll	r9,r7,r21
  84627c:	4a92b03a 	or	r9,r9,r10
  846280:	3d14d83a 	srl	r10,r7,r20
  846284:	127fff15 	stw	r9,-4(r2)
  846288:	1abfff15 	stw	r10,-4(r3)
  84628c:	137ff736 	bltu	r2,r13,84626c <__alt_mem_epcs_flash_controller_0+0xff83d26c>
  846290:	31402836 	bltu	r6,r5,846334 <__hexnan+0x184>
  846294:	42000044 	addi	r8,r8,1
  846298:	40c00003 	ldbu	r3,0(r8)
  84629c:	01c00204 	movi	r7,8
  8462a0:	183fe31e 	bne	r3,zero,846230 <__alt_mem_epcs_flash_controller_0+0xff83d230>
  8462a4:	60002b26 	beq	r12,zero,846354 <__hexnan+0x1a4>
  8462a8:	2b40022e 	bgeu	r5,r13,8462b4 <__hexnan+0x104>
  8462ac:	008001c4 	movi	r2,7
  8462b0:	11c0430e 	bge	r2,r7,8463c0 <__hexnan+0x210>
  8462b4:	3140312e 	bgeu	r6,r5,84637c <__hexnan+0x1cc>
  8462b8:	3007883a 	mov	r3,r6
  8462bc:	29000017 	ldw	r4,0(r5)
  8462c0:	18800104 	addi	r2,r3,4
  8462c4:	29400104 	addi	r5,r5,4
  8462c8:	19000015 	stw	r4,0(r3)
  8462cc:	1007883a 	mov	r3,r2
  8462d0:	597ffa2e 	bgeu	r11,r5,8462bc <__alt_mem_epcs_flash_controller_0+0xff83d2bc>
  8462d4:	10000015 	stw	zero,0(r2)
  8462d8:	10800104 	addi	r2,r2,4
  8462dc:	58bffd2e 	bgeu	r11,r2,8462d4 <__alt_mem_epcs_flash_controller_0+0xff83d2d4>
  8462e0:	78bfff17 	ldw	r2,-4(r15)
  8462e4:	1000041e 	bne	r2,zero,8462f8 <__hexnan+0x148>
  8462e8:	32c02d26 	beq	r6,r11,8463a0 <__hexnan+0x1f0>
  8462ec:	5affff04 	addi	r11,r11,-4
  8462f0:	58800017 	ldw	r2,0(r11)
  8462f4:	103ffc26 	beq	r2,zero,8462e8 <__alt_mem_epcs_flash_controller_0+0xff83d2e8>
  8462f8:	00800144 	movi	r2,5
  8462fc:	00001606 	br	846358 <__hexnan+0x1a8>
  846300:	39c00044 	addi	r7,r7,1
  846304:	63000044 	addi	r12,r12,1
  846308:	89c0040e 	bge	r17,r7,84631c <__hexnan+0x16c>
  84630c:	317fc52e 	bgeu	r6,r5,846224 <__alt_mem_epcs_flash_controller_0+0xff83d224>
  846310:	283fff15 	stw	zero,-4(r5)
  846314:	01c00044 	movi	r7,1
  846318:	297fff04 	addi	r5,r5,-4
  84631c:	28c00017 	ldw	r3,0(r5)
  846320:	108003cc 	andi	r2,r2,15
  846324:	1806913a 	slli	r3,r3,4
  846328:	1884b03a 	or	r2,r3,r2
  84632c:	28800015 	stw	r2,0(r5)
  846330:	003fbc06 	br	846224 <__alt_mem_epcs_flash_controller_0+0xff83d224>
  846334:	2b7fff04 	addi	r13,r5,-4
  846338:	283fff15 	stw	zero,-4(r5)
  84633c:	603f883a 	mov	ra,r12
  846340:	680b883a 	mov	r5,r13
  846344:	000f883a 	mov	r7,zero
  846348:	003fb606 	br	846224 <__alt_mem_epcs_flash_controller_0+0xff83d224>
  84634c:	00800a44 	movi	r2,41
  846350:	18801726 	beq	r3,r2,8463b0 <__hexnan+0x200>
  846354:	00800104 	movi	r2,4
  846358:	dfc00617 	ldw	ra,24(sp)
  84635c:	dd400517 	ldw	r21,20(sp)
  846360:	dd000417 	ldw	r20,16(sp)
  846364:	dcc00317 	ldw	r19,12(sp)
  846368:	dc800217 	ldw	r18,8(sp)
  84636c:	dc400117 	ldw	r17,4(sp)
  846370:	dc000017 	ldw	r16,0(sp)
  846374:	dec00704 	addi	sp,sp,28
  846378:	f800283a 	ret
  84637c:	903fd826 	beq	r18,zero,8462e0 <__alt_mem_epcs_flash_controller_0+0xff83d2e0>
  846380:	00c00804 	movi	r3,32
  846384:	1ca5c83a 	sub	r18,r3,r18
  846388:	00ffffc4 	movi	r3,-1
  84638c:	78bfff17 	ldw	r2,-4(r15)
  846390:	1c86d83a 	srl	r3,r3,r18
  846394:	1884703a 	and	r2,r3,r2
  846398:	78bfff15 	stw	r2,-4(r15)
  84639c:	003fd106 	br	8462e4 <__alt_mem_epcs_flash_controller_0+0xff83d2e4>
  8463a0:	00800044 	movi	r2,1
  8463a4:	58800015 	stw	r2,0(r11)
  8463a8:	00800144 	movi	r2,5
  8463ac:	003fea06 	br	846358 <__alt_mem_epcs_flash_controller_0+0xff83d358>
  8463b0:	42000044 	addi	r8,r8,1
  8463b4:	22000015 	stw	r8,0(r4)
  8463b8:	603fbb1e 	bne	r12,zero,8462a8 <__alt_mem_epcs_flash_controller_0+0xff83d2a8>
  8463bc:	003fe506 	br	846354 <__alt_mem_epcs_flash_controller_0+0xff83d354>
  8463c0:	02400204 	movi	r9,8
  8463c4:	49d3c83a 	sub	r9,r9,r7
  8463c8:	4a53883a 	add	r9,r9,r9
  8463cc:	2a000017 	ldw	r8,0(r5)
  8463d0:	4a53883a 	add	r9,r9,r9
  8463d4:	02800804 	movi	r10,32
  8463d8:	5255c83a 	sub	r10,r10,r9
  8463dc:	28c00104 	addi	r3,r5,4
  8463e0:	2805883a 	mov	r2,r5
  8463e4:	19c00017 	ldw	r7,0(r3)
  8463e8:	10800104 	addi	r2,r2,4
  8463ec:	18c00104 	addi	r3,r3,4
  8463f0:	3a88983a 	sll	r4,r7,r10
  8463f4:	2208b03a 	or	r4,r4,r8
  8463f8:	3a50d83a 	srl	r8,r7,r9
  8463fc:	113fff15 	stw	r4,-4(r2)
  846400:	1a3fff15 	stw	r8,-4(r3)
  846404:	137ff736 	bltu	r2,r13,8463e4 <__alt_mem_epcs_flash_controller_0+0xff83d3e4>
  846408:	003faa06 	br	8462b4 <__alt_mem_epcs_flash_controller_0+0xff83d2b4>

0084640c <_wcrtomb_r>:
  84640c:	defff604 	addi	sp,sp,-40
  846410:	008021b4 	movhi	r2,134
  846414:	dc800815 	stw	r18,32(sp)
  846418:	dc400715 	stw	r17,28(sp)
  84641c:	dc000615 	stw	r16,24(sp)
  846420:	10adbd04 	addi	r2,r2,-18700
  846424:	dfc00915 	stw	ra,36(sp)
  846428:	2021883a 	mov	r16,r4
  84642c:	3823883a 	mov	r17,r7
  846430:	14800017 	ldw	r18,0(r2)
  846434:	28001426 	beq	r5,zero,846488 <_wcrtomb_r+0x7c>
  846438:	d9400415 	stw	r5,16(sp)
  84643c:	d9800515 	stw	r6,20(sp)
  846440:	083d27c0 	call	83d27c <__locale_charset>
  846444:	d9800517 	ldw	r6,20(sp)
  846448:	d9400417 	ldw	r5,16(sp)
  84644c:	100f883a 	mov	r7,r2
  846450:	dc400015 	stw	r17,0(sp)
  846454:	8009883a 	mov	r4,r16
  846458:	903ee83a 	callr	r18
  84645c:	00ffffc4 	movi	r3,-1
  846460:	10c0031e 	bne	r2,r3,846470 <_wcrtomb_r+0x64>
  846464:	88000015 	stw	zero,0(r17)
  846468:	00c02284 	movi	r3,138
  84646c:	80c00015 	stw	r3,0(r16)
  846470:	dfc00917 	ldw	ra,36(sp)
  846474:	dc800817 	ldw	r18,32(sp)
  846478:	dc400717 	ldw	r17,28(sp)
  84647c:	dc000617 	ldw	r16,24(sp)
  846480:	dec00a04 	addi	sp,sp,40
  846484:	f800283a 	ret
  846488:	083d27c0 	call	83d27c <__locale_charset>
  84648c:	100f883a 	mov	r7,r2
  846490:	dc400015 	stw	r17,0(sp)
  846494:	000d883a 	mov	r6,zero
  846498:	d9400104 	addi	r5,sp,4
  84649c:	8009883a 	mov	r4,r16
  8464a0:	903ee83a 	callr	r18
  8464a4:	003fed06 	br	84645c <__alt_mem_epcs_flash_controller_0+0xff83d45c>

008464a8 <wcrtomb>:
  8464a8:	defff604 	addi	sp,sp,-40
  8464ac:	008021b4 	movhi	r2,134
  8464b0:	dc800615 	stw	r18,24(sp)
  8464b4:	dc400515 	stw	r17,20(sp)
  8464b8:	10adb604 	addi	r2,r2,-18728
  8464bc:	dfc00915 	stw	ra,36(sp)
  8464c0:	dd000815 	stw	r20,32(sp)
  8464c4:	dcc00715 	stw	r19,28(sp)
  8464c8:	dc000415 	stw	r16,16(sp)
  8464cc:	3025883a 	mov	r18,r6
  8464d0:	14400017 	ldw	r17,0(r2)
  8464d4:	20001926 	beq	r4,zero,84653c <wcrtomb+0x94>
  8464d8:	008021b4 	movhi	r2,134
  8464dc:	10adbd04 	addi	r2,r2,-18700
  8464e0:	15000017 	ldw	r20,0(r2)
  8464e4:	2021883a 	mov	r16,r4
  8464e8:	2827883a 	mov	r19,r5
  8464ec:	083d27c0 	call	83d27c <__locale_charset>
  8464f0:	100f883a 	mov	r7,r2
  8464f4:	dc800015 	stw	r18,0(sp)
  8464f8:	980d883a 	mov	r6,r19
  8464fc:	800b883a 	mov	r5,r16
  846500:	8809883a 	mov	r4,r17
  846504:	a03ee83a 	callr	r20
  846508:	00ffffc4 	movi	r3,-1
  84650c:	10c0031e 	bne	r2,r3,84651c <wcrtomb+0x74>
  846510:	90000015 	stw	zero,0(r18)
  846514:	00c02284 	movi	r3,138
  846518:	88c00015 	stw	r3,0(r17)
  84651c:	dfc00917 	ldw	ra,36(sp)
  846520:	dd000817 	ldw	r20,32(sp)
  846524:	dcc00717 	ldw	r19,28(sp)
  846528:	dc800617 	ldw	r18,24(sp)
  84652c:	dc400517 	ldw	r17,20(sp)
  846530:	dc000417 	ldw	r16,16(sp)
  846534:	dec00a04 	addi	sp,sp,40
  846538:	f800283a 	ret
  84653c:	008021b4 	movhi	r2,134
  846540:	10adbd04 	addi	r2,r2,-18700
  846544:	14000017 	ldw	r16,0(r2)
  846548:	083d27c0 	call	83d27c <__locale_charset>
  84654c:	100f883a 	mov	r7,r2
  846550:	dc800015 	stw	r18,0(sp)
  846554:	000d883a 	mov	r6,zero
  846558:	d9400104 	addi	r5,sp,4
  84655c:	8809883a 	mov	r4,r17
  846560:	803ee83a 	callr	r16
  846564:	003fe806 	br	846508 <__alt_mem_epcs_flash_controller_0+0xff83d508>

00846568 <__ascii_wctomb>:
  846568:	28000526 	beq	r5,zero,846580 <__ascii_wctomb+0x18>
  84656c:	00803fc4 	movi	r2,255
  846570:	11800536 	bltu	r2,r6,846588 <__ascii_wctomb+0x20>
  846574:	29800005 	stb	r6,0(r5)
  846578:	00800044 	movi	r2,1
  84657c:	f800283a 	ret
  846580:	0005883a 	mov	r2,zero
  846584:	f800283a 	ret
  846588:	00802284 	movi	r2,138
  84658c:	20800015 	stw	r2,0(r4)
  846590:	00bfffc4 	movi	r2,-1
  846594:	f800283a 	ret

00846598 <_wctomb_r>:
  846598:	008021b4 	movhi	r2,134
  84659c:	defff904 	addi	sp,sp,-28
  8465a0:	10adbd04 	addi	r2,r2,-18700
  8465a4:	dfc00615 	stw	ra,24(sp)
  8465a8:	dc400515 	stw	r17,20(sp)
  8465ac:	dc000415 	stw	r16,16(sp)
  8465b0:	3823883a 	mov	r17,r7
  8465b4:	14000017 	ldw	r16,0(r2)
  8465b8:	d9000115 	stw	r4,4(sp)
  8465bc:	d9400215 	stw	r5,8(sp)
  8465c0:	d9800315 	stw	r6,12(sp)
  8465c4:	083d27c0 	call	83d27c <__locale_charset>
  8465c8:	d9800317 	ldw	r6,12(sp)
  8465cc:	d9400217 	ldw	r5,8(sp)
  8465d0:	d9000117 	ldw	r4,4(sp)
  8465d4:	100f883a 	mov	r7,r2
  8465d8:	dc400015 	stw	r17,0(sp)
  8465dc:	803ee83a 	callr	r16
  8465e0:	dfc00617 	ldw	ra,24(sp)
  8465e4:	dc400517 	ldw	r17,20(sp)
  8465e8:	dc000417 	ldw	r16,16(sp)
  8465ec:	dec00704 	addi	sp,sp,28
  8465f0:	f800283a 	ret

008465f4 <__muldi3>:
  8465f4:	defff604 	addi	sp,sp,-40
  8465f8:	dd800615 	stw	r22,24(sp)
  8465fc:	dd400515 	stw	r21,20(sp)
  846600:	dc400115 	stw	r17,4(sp)
  846604:	357fffcc 	andi	r21,r6,65535
  846608:	2022d43a 	srli	r17,r4,16
  84660c:	25bfffcc 	andi	r22,r4,65535
  846610:	dcc00315 	stw	r19,12(sp)
  846614:	dc800215 	stw	r18,8(sp)
  846618:	2027883a 	mov	r19,r4
  84661c:	2825883a 	mov	r18,r5
  846620:	b009883a 	mov	r4,r22
  846624:	a80b883a 	mov	r5,r21
  846628:	dfc00915 	stw	ra,36(sp)
  84662c:	df000815 	stw	fp,32(sp)
  846630:	ddc00715 	stw	r23,28(sp)
  846634:	3839883a 	mov	fp,r7
  846638:	302ed43a 	srli	r23,r6,16
  84663c:	dd000415 	stw	r20,16(sp)
  846640:	dc000015 	stw	r16,0(sp)
  846644:	3029883a 	mov	r20,r6
  846648:	08305040 	call	830504 <__mulsi3>
  84664c:	a80b883a 	mov	r5,r21
  846650:	8809883a 	mov	r4,r17
  846654:	1021883a 	mov	r16,r2
  846658:	08305040 	call	830504 <__mulsi3>
  84665c:	8809883a 	mov	r4,r17
  846660:	b80b883a 	mov	r5,r23
  846664:	102b883a 	mov	r21,r2
  846668:	08305040 	call	830504 <__mulsi3>
  84666c:	b80b883a 	mov	r5,r23
  846670:	b009883a 	mov	r4,r22
  846674:	1023883a 	mov	r17,r2
  846678:	08305040 	call	830504 <__mulsi3>
  84667c:	8006d43a 	srli	r3,r16,16
  846680:	1545883a 	add	r2,r2,r21
  846684:	1885883a 	add	r2,r3,r2
  846688:	1540022e 	bgeu	r2,r21,846694 <__muldi3+0xa0>
  84668c:	00c00074 	movhi	r3,1
  846690:	88e3883a 	add	r17,r17,r3
  846694:	1006d43a 	srli	r3,r2,16
  846698:	1004943a 	slli	r2,r2,16
  84669c:	e00b883a 	mov	r5,fp
  8466a0:	9809883a 	mov	r4,r19
  8466a4:	843fffcc 	andi	r16,r16,65535
  8466a8:	1c63883a 	add	r17,r3,r17
  8466ac:	1421883a 	add	r16,r2,r16
  8466b0:	08305040 	call	830504 <__mulsi3>
  8466b4:	900b883a 	mov	r5,r18
  8466b8:	a009883a 	mov	r4,r20
  8466bc:	1027883a 	mov	r19,r2
  8466c0:	08305040 	call	830504 <__mulsi3>
  8466c4:	9885883a 	add	r2,r19,r2
  8466c8:	1447883a 	add	r3,r2,r17
  8466cc:	8005883a 	mov	r2,r16
  8466d0:	dfc00917 	ldw	ra,36(sp)
  8466d4:	df000817 	ldw	fp,32(sp)
  8466d8:	ddc00717 	ldw	r23,28(sp)
  8466dc:	dd800617 	ldw	r22,24(sp)
  8466e0:	dd400517 	ldw	r21,20(sp)
  8466e4:	dd000417 	ldw	r20,16(sp)
  8466e8:	dcc00317 	ldw	r19,12(sp)
  8466ec:	dc800217 	ldw	r18,8(sp)
  8466f0:	dc400117 	ldw	r17,4(sp)
  8466f4:	dc000017 	ldw	r16,0(sp)
  8466f8:	dec00a04 	addi	sp,sp,40
  8466fc:	f800283a 	ret

00846700 <__fixunsdfsi>:
  846700:	defffd04 	addi	sp,sp,-12
  846704:	000d883a 	mov	r6,zero
  846708:	01d07834 	movhi	r7,16864
  84670c:	dc400115 	stw	r17,4(sp)
  846710:	dc000015 	stw	r16,0(sp)
  846714:	dfc00215 	stw	ra,8(sp)
  846718:	2023883a 	mov	r17,r4
  84671c:	2821883a 	mov	r16,r5
  846720:	08488340 	call	848834 <__gedf2>
  846724:	1000080e 	bge	r2,zero,846748 <__fixunsdfsi+0x48>
  846728:	8809883a 	mov	r4,r17
  84672c:	800b883a 	mov	r5,r16
  846730:	08493000 	call	849300 <__fixdfsi>
  846734:	dfc00217 	ldw	ra,8(sp)
  846738:	dc400117 	ldw	r17,4(sp)
  84673c:	dc000017 	ldw	r16,0(sp)
  846740:	dec00304 	addi	sp,sp,12
  846744:	f800283a 	ret
  846748:	000d883a 	mov	r6,zero
  84674c:	01d07834 	movhi	r7,16864
  846750:	8809883a 	mov	r4,r17
  846754:	800b883a 	mov	r5,r16
  846758:	0848a040 	call	848a04 <__subdf3>
  84675c:	180b883a 	mov	r5,r3
  846760:	1009883a 	mov	r4,r2
  846764:	08493000 	call	849300 <__fixdfsi>
  846768:	00e00034 	movhi	r3,32768
  84676c:	10c5883a 	add	r2,r2,r3
  846770:	003ff006 	br	846734 <__alt_mem_epcs_flash_controller_0+0xff83d734>

00846774 <__udivdi3>:
  846774:	defff404 	addi	sp,sp,-48
  846778:	dcc00515 	stw	r19,20(sp)
  84677c:	dc000215 	stw	r16,8(sp)
  846780:	dfc00b15 	stw	ra,44(sp)
  846784:	df000a15 	stw	fp,40(sp)
  846788:	ddc00915 	stw	r23,36(sp)
  84678c:	dd800815 	stw	r22,32(sp)
  846790:	dd400715 	stw	r21,28(sp)
  846794:	dd000615 	stw	r20,24(sp)
  846798:	dc800415 	stw	r18,16(sp)
  84679c:	dc400315 	stw	r17,12(sp)
  8467a0:	2027883a 	mov	r19,r4
  8467a4:	2821883a 	mov	r16,r5
  8467a8:	3800461e 	bne	r7,zero,8468c4 <__udivdi3+0x150>
  8467ac:	3023883a 	mov	r17,r6
  8467b0:	2025883a 	mov	r18,r4
  8467b4:	2980572e 	bgeu	r5,r6,846914 <__udivdi3+0x1a0>
  8467b8:	00bfffd4 	movui	r2,65535
  8467bc:	282d883a 	mov	r22,r5
  8467c0:	1180b236 	bltu	r2,r6,846a8c <__udivdi3+0x318>
  8467c4:	00803fc4 	movi	r2,255
  8467c8:	1185803a 	cmpltu	r2,r2,r6
  8467cc:	100490fa 	slli	r2,r2,3
  8467d0:	3086d83a 	srl	r3,r6,r2
  8467d4:	010021b4 	movhi	r4,134
  8467d8:	2123ef04 	addi	r4,r4,-28740
  8467dc:	20c7883a 	add	r3,r4,r3
  8467e0:	18c00003 	ldbu	r3,0(r3)
  8467e4:	1885883a 	add	r2,r3,r2
  8467e8:	00c00804 	movi	r3,32
  8467ec:	1887c83a 	sub	r3,r3,r2
  8467f0:	18000526 	beq	r3,zero,846808 <__udivdi3+0x94>
  8467f4:	80e0983a 	sll	r16,r16,r3
  8467f8:	9884d83a 	srl	r2,r19,r2
  8467fc:	30e2983a 	sll	r17,r6,r3
  846800:	98e4983a 	sll	r18,r19,r3
  846804:	142cb03a 	or	r22,r2,r16
  846808:	882ad43a 	srli	r21,r17,16
  84680c:	b009883a 	mov	r4,r22
  846810:	8d3fffcc 	andi	r20,r17,65535
  846814:	a80b883a 	mov	r5,r21
  846818:	08304ac0 	call	8304ac <__umodsi3>
  84681c:	b009883a 	mov	r4,r22
  846820:	a80b883a 	mov	r5,r21
  846824:	1027883a 	mov	r19,r2
  846828:	08304480 	call	830448 <__udivsi3>
  84682c:	100b883a 	mov	r5,r2
  846830:	a009883a 	mov	r4,r20
  846834:	102d883a 	mov	r22,r2
  846838:	08305040 	call	830504 <__mulsi3>
  84683c:	9826943a 	slli	r19,r19,16
  846840:	9006d43a 	srli	r3,r18,16
  846844:	1cc6b03a 	or	r3,r3,r19
  846848:	1880052e 	bgeu	r3,r2,846860 <__udivdi3+0xec>
  84684c:	1c47883a 	add	r3,r3,r17
  846850:	b13fffc4 	addi	r4,r22,-1
  846854:	1c400136 	bltu	r3,r17,84685c <__udivdi3+0xe8>
  846858:	18814236 	bltu	r3,r2,846d64 <__udivdi3+0x5f0>
  84685c:	202d883a 	mov	r22,r4
  846860:	18a1c83a 	sub	r16,r3,r2
  846864:	8009883a 	mov	r4,r16
  846868:	a80b883a 	mov	r5,r21
  84686c:	08304ac0 	call	8304ac <__umodsi3>
  846870:	1027883a 	mov	r19,r2
  846874:	8009883a 	mov	r4,r16
  846878:	a80b883a 	mov	r5,r21
  84687c:	9826943a 	slli	r19,r19,16
  846880:	08304480 	call	830448 <__udivsi3>
  846884:	100b883a 	mov	r5,r2
  846888:	a009883a 	mov	r4,r20
  84688c:	94bfffcc 	andi	r18,r18,65535
  846890:	1021883a 	mov	r16,r2
  846894:	94e4b03a 	or	r18,r18,r19
  846898:	08305040 	call	830504 <__mulsi3>
  84689c:	9080052e 	bgeu	r18,r2,8468b4 <__udivdi3+0x140>
  8468a0:	8ca5883a 	add	r18,r17,r18
  8468a4:	80ffffc4 	addi	r3,r16,-1
  8468a8:	94410c36 	bltu	r18,r17,846cdc <__udivdi3+0x568>
  8468ac:	90810b2e 	bgeu	r18,r2,846cdc <__udivdi3+0x568>
  8468b0:	843fff84 	addi	r16,r16,-2
  8468b4:	b004943a 	slli	r2,r22,16
  8468b8:	0007883a 	mov	r3,zero
  8468bc:	1404b03a 	or	r2,r2,r16
  8468c0:	00005e06 	br	846a3c <__udivdi3+0x2c8>
  8468c4:	29c05b36 	bltu	r5,r7,846a34 <__udivdi3+0x2c0>
  8468c8:	00bfffd4 	movui	r2,65535
  8468cc:	11c0672e 	bgeu	r2,r7,846a6c <__udivdi3+0x2f8>
  8468d0:	00804034 	movhi	r2,256
  8468d4:	10bfffc4 	addi	r2,r2,-1
  8468d8:	11c10a36 	bltu	r2,r7,846d04 <__udivdi3+0x590>
  8468dc:	00800404 	movi	r2,16
  8468e0:	3886d83a 	srl	r3,r7,r2
  8468e4:	010021b4 	movhi	r4,134
  8468e8:	2123ef04 	addi	r4,r4,-28740
  8468ec:	20c7883a 	add	r3,r4,r3
  8468f0:	18c00003 	ldbu	r3,0(r3)
  8468f4:	05c00804 	movi	r23,32
  8468f8:	1885883a 	add	r2,r3,r2
  8468fc:	b8afc83a 	sub	r23,r23,r2
  846900:	b800671e 	bne	r23,zero,846aa0 <__udivdi3+0x32c>
  846904:	3c010536 	bltu	r7,r16,846d1c <__udivdi3+0x5a8>
  846908:	9985403a 	cmpgeu	r2,r19,r6
  84690c:	0007883a 	mov	r3,zero
  846910:	00004a06 	br	846a3c <__udivdi3+0x2c8>
  846914:	3000041e 	bne	r6,zero,846928 <__udivdi3+0x1b4>
  846918:	000b883a 	mov	r5,zero
  84691c:	01000044 	movi	r4,1
  846920:	08304480 	call	830448 <__udivsi3>
  846924:	1023883a 	mov	r17,r2
  846928:	00bfffd4 	movui	r2,65535
  84692c:	1440532e 	bgeu	r2,r17,846a7c <__udivdi3+0x308>
  846930:	00804034 	movhi	r2,256
  846934:	10bfffc4 	addi	r2,r2,-1
  846938:	1440f436 	bltu	r2,r17,846d0c <__udivdi3+0x598>
  84693c:	00800404 	movi	r2,16
  846940:	8886d83a 	srl	r3,r17,r2
  846944:	010021b4 	movhi	r4,134
  846948:	2123ef04 	addi	r4,r4,-28740
  84694c:	20c7883a 	add	r3,r4,r3
  846950:	18c00003 	ldbu	r3,0(r3)
  846954:	1885883a 	add	r2,r3,r2
  846958:	00c00804 	movi	r3,32
  84695c:	1887c83a 	sub	r3,r3,r2
  846960:	1800a51e 	bne	r3,zero,846bf8 <__udivdi3+0x484>
  846964:	882ad43a 	srli	r21,r17,16
  846968:	8461c83a 	sub	r16,r16,r17
  84696c:	8d3fffcc 	andi	r20,r17,65535
  846970:	00c00044 	movi	r3,1
  846974:	a80b883a 	mov	r5,r21
  846978:	8009883a 	mov	r4,r16
  84697c:	d8c00115 	stw	r3,4(sp)
  846980:	08304ac0 	call	8304ac <__umodsi3>
  846984:	a80b883a 	mov	r5,r21
  846988:	8009883a 	mov	r4,r16
  84698c:	1027883a 	mov	r19,r2
  846990:	08304480 	call	830448 <__udivsi3>
  846994:	a00b883a 	mov	r5,r20
  846998:	1009883a 	mov	r4,r2
  84699c:	102d883a 	mov	r22,r2
  8469a0:	08305040 	call	830504 <__mulsi3>
  8469a4:	9826943a 	slli	r19,r19,16
  8469a8:	900ed43a 	srli	r7,r18,16
  8469ac:	d8c00117 	ldw	r3,4(sp)
  8469b0:	3cceb03a 	or	r7,r7,r19
  8469b4:	3880052e 	bgeu	r7,r2,8469cc <__udivdi3+0x258>
  8469b8:	3c4f883a 	add	r7,r7,r17
  8469bc:	b13fffc4 	addi	r4,r22,-1
  8469c0:	3c400136 	bltu	r7,r17,8469c8 <__udivdi3+0x254>
  8469c4:	3880e436 	bltu	r7,r2,846d58 <__udivdi3+0x5e4>
  8469c8:	202d883a 	mov	r22,r4
  8469cc:	38a1c83a 	sub	r16,r7,r2
  8469d0:	8009883a 	mov	r4,r16
  8469d4:	a80b883a 	mov	r5,r21
  8469d8:	d8c00115 	stw	r3,4(sp)
  8469dc:	08304ac0 	call	8304ac <__umodsi3>
  8469e0:	1027883a 	mov	r19,r2
  8469e4:	8009883a 	mov	r4,r16
  8469e8:	a80b883a 	mov	r5,r21
  8469ec:	9826943a 	slli	r19,r19,16
  8469f0:	08304480 	call	830448 <__udivsi3>
  8469f4:	a00b883a 	mov	r5,r20
  8469f8:	1009883a 	mov	r4,r2
  8469fc:	94bfffcc 	andi	r18,r18,65535
  846a00:	1021883a 	mov	r16,r2
  846a04:	94e4b03a 	or	r18,r18,r19
  846a08:	08305040 	call	830504 <__mulsi3>
  846a0c:	d8c00117 	ldw	r3,4(sp)
  846a10:	9080052e 	bgeu	r18,r2,846a28 <__udivdi3+0x2b4>
  846a14:	8ca5883a 	add	r18,r17,r18
  846a18:	813fffc4 	addi	r4,r16,-1
  846a1c:	9440ad36 	bltu	r18,r17,846cd4 <__udivdi3+0x560>
  846a20:	9080ac2e 	bgeu	r18,r2,846cd4 <__udivdi3+0x560>
  846a24:	843fff84 	addi	r16,r16,-2
  846a28:	b004943a 	slli	r2,r22,16
  846a2c:	1404b03a 	or	r2,r2,r16
  846a30:	00000206 	br	846a3c <__udivdi3+0x2c8>
  846a34:	0007883a 	mov	r3,zero
  846a38:	0005883a 	mov	r2,zero
  846a3c:	dfc00b17 	ldw	ra,44(sp)
  846a40:	df000a17 	ldw	fp,40(sp)
  846a44:	ddc00917 	ldw	r23,36(sp)
  846a48:	dd800817 	ldw	r22,32(sp)
  846a4c:	dd400717 	ldw	r21,28(sp)
  846a50:	dd000617 	ldw	r20,24(sp)
  846a54:	dcc00517 	ldw	r19,20(sp)
  846a58:	dc800417 	ldw	r18,16(sp)
  846a5c:	dc400317 	ldw	r17,12(sp)
  846a60:	dc000217 	ldw	r16,8(sp)
  846a64:	dec00c04 	addi	sp,sp,48
  846a68:	f800283a 	ret
  846a6c:	00803fc4 	movi	r2,255
  846a70:	11c5803a 	cmpltu	r2,r2,r7
  846a74:	100490fa 	slli	r2,r2,3
  846a78:	003f9906 	br	8468e0 <__alt_mem_epcs_flash_controller_0+0xff83d8e0>
  846a7c:	00803fc4 	movi	r2,255
  846a80:	1445803a 	cmpltu	r2,r2,r17
  846a84:	100490fa 	slli	r2,r2,3
  846a88:	003fad06 	br	846940 <__alt_mem_epcs_flash_controller_0+0xff83d940>
  846a8c:	00804034 	movhi	r2,256
  846a90:	10bfffc4 	addi	r2,r2,-1
  846a94:	11809f36 	bltu	r2,r6,846d14 <__udivdi3+0x5a0>
  846a98:	00800404 	movi	r2,16
  846a9c:	003f4c06 	br	8467d0 <__alt_mem_epcs_flash_controller_0+0xff83d7d0>
  846aa0:	3dce983a 	sll	r7,r7,r23
  846aa4:	30b8d83a 	srl	fp,r6,r2
  846aa8:	80a2d83a 	srl	r17,r16,r2
  846aac:	35cc983a 	sll	r6,r6,r23
  846ab0:	3f38b03a 	or	fp,r7,fp
  846ab4:	e024d43a 	srli	r18,fp,16
  846ab8:	9884d83a 	srl	r2,r19,r2
  846abc:	85e0983a 	sll	r16,r16,r23
  846ac0:	8809883a 	mov	r4,r17
  846ac4:	900b883a 	mov	r5,r18
  846ac8:	d9800015 	stw	r6,0(sp)
  846acc:	1420b03a 	or	r16,r2,r16
  846ad0:	08304ac0 	call	8304ac <__umodsi3>
  846ad4:	900b883a 	mov	r5,r18
  846ad8:	8809883a 	mov	r4,r17
  846adc:	1029883a 	mov	r20,r2
  846ae0:	e5bfffcc 	andi	r22,fp,65535
  846ae4:	08304480 	call	830448 <__udivsi3>
  846ae8:	100b883a 	mov	r5,r2
  846aec:	b009883a 	mov	r4,r22
  846af0:	102b883a 	mov	r21,r2
  846af4:	08305040 	call	830504 <__mulsi3>
  846af8:	a028943a 	slli	r20,r20,16
  846afc:	8006d43a 	srli	r3,r16,16
  846b00:	1d06b03a 	or	r3,r3,r20
  846b04:	1880042e 	bgeu	r3,r2,846b18 <__udivdi3+0x3a4>
  846b08:	1f07883a 	add	r3,r3,fp
  846b0c:	a93fffc4 	addi	r4,r21,-1
  846b10:	1f00892e 	bgeu	r3,fp,846d38 <__udivdi3+0x5c4>
  846b14:	202b883a 	mov	r21,r4
  846b18:	18a3c83a 	sub	r17,r3,r2
  846b1c:	8809883a 	mov	r4,r17
  846b20:	900b883a 	mov	r5,r18
  846b24:	08304ac0 	call	8304ac <__umodsi3>
  846b28:	1029883a 	mov	r20,r2
  846b2c:	8809883a 	mov	r4,r17
  846b30:	900b883a 	mov	r5,r18
  846b34:	a028943a 	slli	r20,r20,16
  846b38:	08304480 	call	830448 <__udivsi3>
  846b3c:	100b883a 	mov	r5,r2
  846b40:	b009883a 	mov	r4,r22
  846b44:	843fffcc 	andi	r16,r16,65535
  846b48:	1023883a 	mov	r17,r2
  846b4c:	8520b03a 	or	r16,r16,r20
  846b50:	08305040 	call	830504 <__mulsi3>
  846b54:	8080042e 	bgeu	r16,r2,846b68 <__udivdi3+0x3f4>
  846b58:	8721883a 	add	r16,r16,fp
  846b5c:	88ffffc4 	addi	r3,r17,-1
  846b60:	8700712e 	bgeu	r16,fp,846d28 <__udivdi3+0x5b4>
  846b64:	1823883a 	mov	r17,r3
  846b68:	a80e943a 	slli	r7,r21,16
  846b6c:	d8c00017 	ldw	r3,0(sp)
  846b70:	80a1c83a 	sub	r16,r16,r2
  846b74:	3c64b03a 	or	r18,r7,r17
  846b78:	1d3fffcc 	andi	r20,r3,65535
  846b7c:	9022d43a 	srli	r17,r18,16
  846b80:	95bfffcc 	andi	r22,r18,65535
  846b84:	a00b883a 	mov	r5,r20
  846b88:	b009883a 	mov	r4,r22
  846b8c:	182ad43a 	srli	r21,r3,16
  846b90:	08305040 	call	830504 <__mulsi3>
  846b94:	a00b883a 	mov	r5,r20
  846b98:	8809883a 	mov	r4,r17
  846b9c:	1039883a 	mov	fp,r2
  846ba0:	08305040 	call	830504 <__mulsi3>
  846ba4:	8809883a 	mov	r4,r17
  846ba8:	a80b883a 	mov	r5,r21
  846bac:	1029883a 	mov	r20,r2
  846bb0:	08305040 	call	830504 <__mulsi3>
  846bb4:	a80b883a 	mov	r5,r21
  846bb8:	b009883a 	mov	r4,r22
  846bbc:	1023883a 	mov	r17,r2
  846bc0:	08305040 	call	830504 <__mulsi3>
  846bc4:	e006d43a 	srli	r3,fp,16
  846bc8:	1505883a 	add	r2,r2,r20
  846bcc:	1887883a 	add	r3,r3,r2
  846bd0:	1d00022e 	bgeu	r3,r20,846bdc <__udivdi3+0x468>
  846bd4:	00800074 	movhi	r2,1
  846bd8:	88a3883a 	add	r17,r17,r2
  846bdc:	1804d43a 	srli	r2,r3,16
  846be0:	1463883a 	add	r17,r2,r17
  846be4:	84404436 	bltu	r16,r17,846cf8 <__udivdi3+0x584>
  846be8:	84403e26 	beq	r16,r17,846ce4 <__udivdi3+0x570>
  846bec:	9005883a 	mov	r2,r18
  846bf0:	0007883a 	mov	r3,zero
  846bf4:	003f9106 	br	846a3c <__alt_mem_epcs_flash_controller_0+0xff83da3c>
  846bf8:	88e2983a 	sll	r17,r17,r3
  846bfc:	80aed83a 	srl	r23,r16,r2
  846c00:	80e0983a 	sll	r16,r16,r3
  846c04:	882ad43a 	srli	r21,r17,16
  846c08:	9884d83a 	srl	r2,r19,r2
  846c0c:	b809883a 	mov	r4,r23
  846c10:	a80b883a 	mov	r5,r21
  846c14:	98e4983a 	sll	r18,r19,r3
  846c18:	142cb03a 	or	r22,r2,r16
  846c1c:	08304ac0 	call	8304ac <__umodsi3>
  846c20:	b809883a 	mov	r4,r23
  846c24:	a80b883a 	mov	r5,r21
  846c28:	1027883a 	mov	r19,r2
  846c2c:	8d3fffcc 	andi	r20,r17,65535
  846c30:	08304480 	call	830448 <__udivsi3>
  846c34:	a009883a 	mov	r4,r20
  846c38:	100b883a 	mov	r5,r2
  846c3c:	102f883a 	mov	r23,r2
  846c40:	08305040 	call	830504 <__mulsi3>
  846c44:	9826943a 	slli	r19,r19,16
  846c48:	b008d43a 	srli	r4,r22,16
  846c4c:	24c8b03a 	or	r4,r4,r19
  846c50:	2080062e 	bgeu	r4,r2,846c6c <__udivdi3+0x4f8>
  846c54:	2449883a 	add	r4,r4,r17
  846c58:	b8ffffc4 	addi	r3,r23,-1
  846c5c:	24403c36 	bltu	r4,r17,846d50 <__udivdi3+0x5dc>
  846c60:	20803b2e 	bgeu	r4,r2,846d50 <__udivdi3+0x5dc>
  846c64:	bdffff84 	addi	r23,r23,-2
  846c68:	2449883a 	add	r4,r4,r17
  846c6c:	20a1c83a 	sub	r16,r4,r2
  846c70:	a80b883a 	mov	r5,r21
  846c74:	8009883a 	mov	r4,r16
  846c78:	08304ac0 	call	8304ac <__umodsi3>
  846c7c:	a80b883a 	mov	r5,r21
  846c80:	8009883a 	mov	r4,r16
  846c84:	1027883a 	mov	r19,r2
  846c88:	08304480 	call	830448 <__udivsi3>
  846c8c:	a009883a 	mov	r4,r20
  846c90:	100b883a 	mov	r5,r2
  846c94:	9826943a 	slli	r19,r19,16
  846c98:	1039883a 	mov	fp,r2
  846c9c:	08305040 	call	830504 <__mulsi3>
  846ca0:	b13fffcc 	andi	r4,r22,65535
  846ca4:	24c8b03a 	or	r4,r4,r19
  846ca8:	2080062e 	bgeu	r4,r2,846cc4 <__udivdi3+0x550>
  846cac:	2449883a 	add	r4,r4,r17
  846cb0:	e0ffffc4 	addi	r3,fp,-1
  846cb4:	24402436 	bltu	r4,r17,846d48 <__udivdi3+0x5d4>
  846cb8:	2080232e 	bgeu	r4,r2,846d48 <__udivdi3+0x5d4>
  846cbc:	e73fff84 	addi	fp,fp,-2
  846cc0:	2449883a 	add	r4,r4,r17
  846cc4:	b82e943a 	slli	r23,r23,16
  846cc8:	20a1c83a 	sub	r16,r4,r2
  846ccc:	bf06b03a 	or	r3,r23,fp
  846cd0:	003f2806 	br	846974 <__alt_mem_epcs_flash_controller_0+0xff83d974>
  846cd4:	2021883a 	mov	r16,r4
  846cd8:	003f5306 	br	846a28 <__alt_mem_epcs_flash_controller_0+0xff83da28>
  846cdc:	1821883a 	mov	r16,r3
  846ce0:	003ef406 	br	8468b4 <__alt_mem_epcs_flash_controller_0+0xff83d8b4>
  846ce4:	1806943a 	slli	r3,r3,16
  846ce8:	9de6983a 	sll	r19,r19,r23
  846cec:	e73fffcc 	andi	fp,fp,65535
  846cf0:	1f07883a 	add	r3,r3,fp
  846cf4:	98ffbd2e 	bgeu	r19,r3,846bec <__alt_mem_epcs_flash_controller_0+0xff83dbec>
  846cf8:	90bfffc4 	addi	r2,r18,-1
  846cfc:	0007883a 	mov	r3,zero
  846d00:	003f4e06 	br	846a3c <__alt_mem_epcs_flash_controller_0+0xff83da3c>
  846d04:	00800604 	movi	r2,24
  846d08:	003ef506 	br	8468e0 <__alt_mem_epcs_flash_controller_0+0xff83d8e0>
  846d0c:	00800604 	movi	r2,24
  846d10:	003f0b06 	br	846940 <__alt_mem_epcs_flash_controller_0+0xff83d940>
  846d14:	00800604 	movi	r2,24
  846d18:	003ead06 	br	8467d0 <__alt_mem_epcs_flash_controller_0+0xff83d7d0>
  846d1c:	0007883a 	mov	r3,zero
  846d20:	00800044 	movi	r2,1
  846d24:	003f4506 	br	846a3c <__alt_mem_epcs_flash_controller_0+0xff83da3c>
  846d28:	80bf8e2e 	bgeu	r16,r2,846b64 <__alt_mem_epcs_flash_controller_0+0xff83db64>
  846d2c:	8c7fff84 	addi	r17,r17,-2
  846d30:	8721883a 	add	r16,r16,fp
  846d34:	003f8c06 	br	846b68 <__alt_mem_epcs_flash_controller_0+0xff83db68>
  846d38:	18bf762e 	bgeu	r3,r2,846b14 <__alt_mem_epcs_flash_controller_0+0xff83db14>
  846d3c:	ad7fff84 	addi	r21,r21,-2
  846d40:	1f07883a 	add	r3,r3,fp
  846d44:	003f7406 	br	846b18 <__alt_mem_epcs_flash_controller_0+0xff83db18>
  846d48:	1839883a 	mov	fp,r3
  846d4c:	003fdd06 	br	846cc4 <__alt_mem_epcs_flash_controller_0+0xff83dcc4>
  846d50:	182f883a 	mov	r23,r3
  846d54:	003fc506 	br	846c6c <__alt_mem_epcs_flash_controller_0+0xff83dc6c>
  846d58:	b5bfff84 	addi	r22,r22,-2
  846d5c:	3c4f883a 	add	r7,r7,r17
  846d60:	003f1a06 	br	8469cc <__alt_mem_epcs_flash_controller_0+0xff83d9cc>
  846d64:	b5bfff84 	addi	r22,r22,-2
  846d68:	1c47883a 	add	r3,r3,r17
  846d6c:	003ebc06 	br	846860 <__alt_mem_epcs_flash_controller_0+0xff83d860>

00846d70 <__umoddi3>:
  846d70:	defff304 	addi	sp,sp,-52
  846d74:	df000b15 	stw	fp,44(sp)
  846d78:	dc400415 	stw	r17,16(sp)
  846d7c:	dc000315 	stw	r16,12(sp)
  846d80:	dfc00c15 	stw	ra,48(sp)
  846d84:	ddc00a15 	stw	r23,40(sp)
  846d88:	dd800915 	stw	r22,36(sp)
  846d8c:	dd400815 	stw	r21,32(sp)
  846d90:	dd000715 	stw	r20,28(sp)
  846d94:	dcc00615 	stw	r19,24(sp)
  846d98:	dc800515 	stw	r18,20(sp)
  846d9c:	2021883a 	mov	r16,r4
  846da0:	2823883a 	mov	r17,r5
  846da4:	2839883a 	mov	fp,r5
  846da8:	3800401e 	bne	r7,zero,846eac <__umoddi3+0x13c>
  846dac:	3027883a 	mov	r19,r6
  846db0:	2029883a 	mov	r20,r4
  846db4:	2980552e 	bgeu	r5,r6,846f0c <__umoddi3+0x19c>
  846db8:	00bfffd4 	movui	r2,65535
  846dbc:	1180a236 	bltu	r2,r6,847048 <__umoddi3+0x2d8>
  846dc0:	01003fc4 	movi	r4,255
  846dc4:	2189803a 	cmpltu	r4,r4,r6
  846dc8:	200890fa 	slli	r4,r4,3
  846dcc:	3104d83a 	srl	r2,r6,r4
  846dd0:	00c021b4 	movhi	r3,134
  846dd4:	18e3ef04 	addi	r3,r3,-28740
  846dd8:	1885883a 	add	r2,r3,r2
  846ddc:	10c00003 	ldbu	r3,0(r2)
  846de0:	00800804 	movi	r2,32
  846de4:	1909883a 	add	r4,r3,r4
  846de8:	1125c83a 	sub	r18,r2,r4
  846dec:	90000526 	beq	r18,zero,846e04 <__umoddi3+0x94>
  846df0:	8ca2983a 	sll	r17,r17,r18
  846df4:	8108d83a 	srl	r4,r16,r4
  846df8:	34a6983a 	sll	r19,r6,r18
  846dfc:	84a8983a 	sll	r20,r16,r18
  846e00:	2478b03a 	or	fp,r4,r17
  846e04:	982cd43a 	srli	r22,r19,16
  846e08:	e009883a 	mov	r4,fp
  846e0c:	9dffffcc 	andi	r23,r19,65535
  846e10:	b00b883a 	mov	r5,r22
  846e14:	08304ac0 	call	8304ac <__umodsi3>
  846e18:	b00b883a 	mov	r5,r22
  846e1c:	e009883a 	mov	r4,fp
  846e20:	102b883a 	mov	r21,r2
  846e24:	08304480 	call	830448 <__udivsi3>
  846e28:	100b883a 	mov	r5,r2
  846e2c:	b809883a 	mov	r4,r23
  846e30:	08305040 	call	830504 <__mulsi3>
  846e34:	a82a943a 	slli	r21,r21,16
  846e38:	a006d43a 	srli	r3,r20,16
  846e3c:	1d46b03a 	or	r3,r3,r21
  846e40:	1880032e 	bgeu	r3,r2,846e50 <__umoddi3+0xe0>
  846e44:	1cc7883a 	add	r3,r3,r19
  846e48:	1cc00136 	bltu	r3,r19,846e50 <__umoddi3+0xe0>
  846e4c:	18813136 	bltu	r3,r2,847314 <__umoddi3+0x5a4>
  846e50:	18a1c83a 	sub	r16,r3,r2
  846e54:	b00b883a 	mov	r5,r22
  846e58:	8009883a 	mov	r4,r16
  846e5c:	08304ac0 	call	8304ac <__umodsi3>
  846e60:	b00b883a 	mov	r5,r22
  846e64:	8009883a 	mov	r4,r16
  846e68:	1023883a 	mov	r17,r2
  846e6c:	08304480 	call	830448 <__udivsi3>
  846e70:	100b883a 	mov	r5,r2
  846e74:	b809883a 	mov	r4,r23
  846e78:	8822943a 	slli	r17,r17,16
  846e7c:	08305040 	call	830504 <__mulsi3>
  846e80:	a0ffffcc 	andi	r3,r20,65535
  846e84:	1c46b03a 	or	r3,r3,r17
  846e88:	1880042e 	bgeu	r3,r2,846e9c <__umoddi3+0x12c>
  846e8c:	1cc7883a 	add	r3,r3,r19
  846e90:	1cc00236 	bltu	r3,r19,846e9c <__umoddi3+0x12c>
  846e94:	1880012e 	bgeu	r3,r2,846e9c <__umoddi3+0x12c>
  846e98:	1cc7883a 	add	r3,r3,r19
  846e9c:	1885c83a 	sub	r2,r3,r2
  846ea0:	1484d83a 	srl	r2,r2,r18
  846ea4:	0007883a 	mov	r3,zero
  846ea8:	00005306 	br	846ff8 <__umoddi3+0x288>
  846eac:	29c05036 	bltu	r5,r7,846ff0 <__umoddi3+0x280>
  846eb0:	00bfffd4 	movui	r2,65535
  846eb4:	11c05c2e 	bgeu	r2,r7,847028 <__umoddi3+0x2b8>
  846eb8:	00804034 	movhi	r2,256
  846ebc:	10bfffc4 	addi	r2,r2,-1
  846ec0:	11c10636 	bltu	r2,r7,8472dc <__umoddi3+0x56c>
  846ec4:	01000404 	movi	r4,16
  846ec8:	3904d83a 	srl	r2,r7,r4
  846ecc:	00c021b4 	movhi	r3,134
  846ed0:	18e3ef04 	addi	r3,r3,-28740
  846ed4:	1885883a 	add	r2,r3,r2
  846ed8:	14c00003 	ldbu	r19,0(r2)
  846edc:	00c00804 	movi	r3,32
  846ee0:	9927883a 	add	r19,r19,r4
  846ee4:	1ce9c83a 	sub	r20,r3,r19
  846ee8:	a0005c1e 	bne	r20,zero,84705c <__umoddi3+0x2ec>
  846eec:	3c400136 	bltu	r7,r17,846ef4 <__umoddi3+0x184>
  846ef0:	81810a36 	bltu	r16,r6,84731c <__umoddi3+0x5ac>
  846ef4:	8185c83a 	sub	r2,r16,r6
  846ef8:	89e3c83a 	sub	r17,r17,r7
  846efc:	8089803a 	cmpltu	r4,r16,r2
  846f00:	8939c83a 	sub	fp,r17,r4
  846f04:	e007883a 	mov	r3,fp
  846f08:	00003b06 	br	846ff8 <__umoddi3+0x288>
  846f0c:	3000041e 	bne	r6,zero,846f20 <__umoddi3+0x1b0>
  846f10:	000b883a 	mov	r5,zero
  846f14:	01000044 	movi	r4,1
  846f18:	08304480 	call	830448 <__udivsi3>
  846f1c:	1027883a 	mov	r19,r2
  846f20:	00bfffd4 	movui	r2,65535
  846f24:	14c0442e 	bgeu	r2,r19,847038 <__umoddi3+0x2c8>
  846f28:	00804034 	movhi	r2,256
  846f2c:	10bfffc4 	addi	r2,r2,-1
  846f30:	14c0ec36 	bltu	r2,r19,8472e4 <__umoddi3+0x574>
  846f34:	00800404 	movi	r2,16
  846f38:	9886d83a 	srl	r3,r19,r2
  846f3c:	010021b4 	movhi	r4,134
  846f40:	2123ef04 	addi	r4,r4,-28740
  846f44:	20c7883a 	add	r3,r4,r3
  846f48:	18c00003 	ldbu	r3,0(r3)
  846f4c:	1887883a 	add	r3,r3,r2
  846f50:	00800804 	movi	r2,32
  846f54:	10e5c83a 	sub	r18,r2,r3
  846f58:	9000ab1e 	bne	r18,zero,847208 <__umoddi3+0x498>
  846f5c:	982cd43a 	srli	r22,r19,16
  846f60:	8ce3c83a 	sub	r17,r17,r19
  846f64:	9dffffcc 	andi	r23,r19,65535
  846f68:	b00b883a 	mov	r5,r22
  846f6c:	8809883a 	mov	r4,r17
  846f70:	08304ac0 	call	8304ac <__umodsi3>
  846f74:	b00b883a 	mov	r5,r22
  846f78:	8809883a 	mov	r4,r17
  846f7c:	102b883a 	mov	r21,r2
  846f80:	08304480 	call	830448 <__udivsi3>
  846f84:	b80b883a 	mov	r5,r23
  846f88:	1009883a 	mov	r4,r2
  846f8c:	08305040 	call	830504 <__mulsi3>
  846f90:	a82a943a 	slli	r21,r21,16
  846f94:	a006d43a 	srli	r3,r20,16
  846f98:	1d46b03a 	or	r3,r3,r21
  846f9c:	1880042e 	bgeu	r3,r2,846fb0 <__umoddi3+0x240>
  846fa0:	1cc7883a 	add	r3,r3,r19
  846fa4:	1cc00236 	bltu	r3,r19,846fb0 <__umoddi3+0x240>
  846fa8:	1880012e 	bgeu	r3,r2,846fb0 <__umoddi3+0x240>
  846fac:	1cc7883a 	add	r3,r3,r19
  846fb0:	18a1c83a 	sub	r16,r3,r2
  846fb4:	b00b883a 	mov	r5,r22
  846fb8:	8009883a 	mov	r4,r16
  846fbc:	08304ac0 	call	8304ac <__umodsi3>
  846fc0:	1023883a 	mov	r17,r2
  846fc4:	b00b883a 	mov	r5,r22
  846fc8:	8009883a 	mov	r4,r16
  846fcc:	08304480 	call	830448 <__udivsi3>
  846fd0:	8822943a 	slli	r17,r17,16
  846fd4:	b80b883a 	mov	r5,r23
  846fd8:	1009883a 	mov	r4,r2
  846fdc:	08305040 	call	830504 <__mulsi3>
  846fe0:	a53fffcc 	andi	r20,r20,65535
  846fe4:	a446b03a 	or	r3,r20,r17
  846fe8:	18bfac2e 	bgeu	r3,r2,846e9c <__alt_mem_epcs_flash_controller_0+0xff83de9c>
  846fec:	003fa706 	br	846e8c <__alt_mem_epcs_flash_controller_0+0xff83de8c>
  846ff0:	2005883a 	mov	r2,r4
  846ff4:	2807883a 	mov	r3,r5
  846ff8:	dfc00c17 	ldw	ra,48(sp)
  846ffc:	df000b17 	ldw	fp,44(sp)
  847000:	ddc00a17 	ldw	r23,40(sp)
  847004:	dd800917 	ldw	r22,36(sp)
  847008:	dd400817 	ldw	r21,32(sp)
  84700c:	dd000717 	ldw	r20,28(sp)
  847010:	dcc00617 	ldw	r19,24(sp)
  847014:	dc800517 	ldw	r18,20(sp)
  847018:	dc400417 	ldw	r17,16(sp)
  84701c:	dc000317 	ldw	r16,12(sp)
  847020:	dec00d04 	addi	sp,sp,52
  847024:	f800283a 	ret
  847028:	04c03fc4 	movi	r19,255
  84702c:	99c9803a 	cmpltu	r4,r19,r7
  847030:	200890fa 	slli	r4,r4,3
  847034:	003fa406 	br	846ec8 <__alt_mem_epcs_flash_controller_0+0xff83dec8>
  847038:	00803fc4 	movi	r2,255
  84703c:	14c5803a 	cmpltu	r2,r2,r19
  847040:	100490fa 	slli	r2,r2,3
  847044:	003fbc06 	br	846f38 <__alt_mem_epcs_flash_controller_0+0xff83df38>
  847048:	00804034 	movhi	r2,256
  84704c:	10bfffc4 	addi	r2,r2,-1
  847050:	1180a636 	bltu	r2,r6,8472ec <__umoddi3+0x57c>
  847054:	01000404 	movi	r4,16
  847058:	003f5c06 	br	846dcc <__alt_mem_epcs_flash_controller_0+0xff83ddcc>
  84705c:	3d0e983a 	sll	r7,r7,r20
  847060:	34ead83a 	srl	r21,r6,r19
  847064:	8cc6d83a 	srl	r3,r17,r19
  847068:	8d10983a 	sll	r8,r17,r20
  84706c:	3d6ab03a 	or	r21,r7,r21
  847070:	a82cd43a 	srli	r22,r21,16
  847074:	84e2d83a 	srl	r17,r16,r19
  847078:	1809883a 	mov	r4,r3
  84707c:	b00b883a 	mov	r5,r22
  847080:	8a22b03a 	or	r17,r17,r8
  847084:	3524983a 	sll	r18,r6,r20
  847088:	dc400015 	stw	r17,0(sp)
  84708c:	d8c00115 	stw	r3,4(sp)
  847090:	08304ac0 	call	8304ac <__umodsi3>
  847094:	d8c00117 	ldw	r3,4(sp)
  847098:	b00b883a 	mov	r5,r22
  84709c:	1039883a 	mov	fp,r2
  8470a0:	1809883a 	mov	r4,r3
  8470a4:	08304480 	call	830448 <__udivsi3>
  8470a8:	adffffcc 	andi	r23,r21,65535
  8470ac:	100b883a 	mov	r5,r2
  8470b0:	b809883a 	mov	r4,r23
  8470b4:	1023883a 	mov	r17,r2
  8470b8:	08305040 	call	830504 <__mulsi3>
  8470bc:	d9400017 	ldw	r5,0(sp)
  8470c0:	e008943a 	slli	r4,fp,16
  8470c4:	8520983a 	sll	r16,r16,r20
  8470c8:	2806d43a 	srli	r3,r5,16
  8470cc:	1906b03a 	or	r3,r3,r4
  8470d0:	1880042e 	bgeu	r3,r2,8470e4 <__umoddi3+0x374>
  8470d4:	1d47883a 	add	r3,r3,r21
  8470d8:	893fffc4 	addi	r4,r17,-1
  8470dc:	1d40892e 	bgeu	r3,r21,847304 <__umoddi3+0x594>
  8470e0:	2023883a 	mov	r17,r4
  8470e4:	18b9c83a 	sub	fp,r3,r2
  8470e8:	b00b883a 	mov	r5,r22
  8470ec:	e009883a 	mov	r4,fp
  8470f0:	08304ac0 	call	8304ac <__umodsi3>
  8470f4:	b00b883a 	mov	r5,r22
  8470f8:	e009883a 	mov	r4,fp
  8470fc:	d8800215 	stw	r2,8(sp)
  847100:	08304480 	call	830448 <__udivsi3>
  847104:	100b883a 	mov	r5,r2
  847108:	b809883a 	mov	r4,r23
  84710c:	102d883a 	mov	r22,r2
  847110:	08305040 	call	830504 <__mulsi3>
  847114:	d9800217 	ldw	r6,8(sp)
  847118:	d8c00017 	ldw	r3,0(sp)
  84711c:	300c943a 	slli	r6,r6,16
  847120:	1a3fffcc 	andi	r8,r3,65535
  847124:	4190b03a 	or	r8,r8,r6
  847128:	4080042e 	bgeu	r8,r2,84713c <__umoddi3+0x3cc>
  84712c:	4551883a 	add	r8,r8,r21
  847130:	b0ffffc4 	addi	r3,r22,-1
  847134:	45406f2e 	bgeu	r8,r21,8472f4 <__umoddi3+0x584>
  847138:	182d883a 	mov	r22,r3
  84713c:	880e943a 	slli	r7,r17,16
  847140:	9006d43a 	srli	r3,r18,16
  847144:	91bfffcc 	andi	r6,r18,65535
  847148:	3dacb03a 	or	r22,r7,r22
  84714c:	b02ed43a 	srli	r23,r22,16
  847150:	b5bfffcc 	andi	r22,r22,65535
  847154:	300b883a 	mov	r5,r6
  847158:	b009883a 	mov	r4,r22
  84715c:	40a3c83a 	sub	r17,r8,r2
  847160:	d8c00115 	stw	r3,4(sp)
  847164:	d9800215 	stw	r6,8(sp)
  847168:	08305040 	call	830504 <__mulsi3>
  84716c:	d9800217 	ldw	r6,8(sp)
  847170:	b809883a 	mov	r4,r23
  847174:	1039883a 	mov	fp,r2
  847178:	300b883a 	mov	r5,r6
  84717c:	08305040 	call	830504 <__mulsi3>
  847180:	d8c00117 	ldw	r3,4(sp)
  847184:	b809883a 	mov	r4,r23
  847188:	d8800215 	stw	r2,8(sp)
  84718c:	180b883a 	mov	r5,r3
  847190:	08305040 	call	830504 <__mulsi3>
  847194:	d8c00117 	ldw	r3,4(sp)
  847198:	b009883a 	mov	r4,r22
  84719c:	102f883a 	mov	r23,r2
  8471a0:	180b883a 	mov	r5,r3
  8471a4:	08305040 	call	830504 <__mulsi3>
  8471a8:	d9800217 	ldw	r6,8(sp)
  8471ac:	e006d43a 	srli	r3,fp,16
  8471b0:	1185883a 	add	r2,r2,r6
  8471b4:	1885883a 	add	r2,r3,r2
  8471b8:	1180022e 	bgeu	r2,r6,8471c4 <__umoddi3+0x454>
  8471bc:	00c00074 	movhi	r3,1
  8471c0:	b8ef883a 	add	r23,r23,r3
  8471c4:	1006d43a 	srli	r3,r2,16
  8471c8:	1004943a 	slli	r2,r2,16
  8471cc:	e73fffcc 	andi	fp,fp,65535
  8471d0:	1dc7883a 	add	r3,r3,r23
  8471d4:	1739883a 	add	fp,r2,fp
  8471d8:	88c03a36 	bltu	r17,r3,8472c4 <__umoddi3+0x554>
  8471dc:	88c05126 	beq	r17,r3,847324 <__umoddi3+0x5b4>
  8471e0:	88c9c83a 	sub	r4,r17,r3
  8471e4:	e00f883a 	mov	r7,fp
  8471e8:	81cfc83a 	sub	r7,r16,r7
  8471ec:	81c7803a 	cmpltu	r3,r16,r7
  8471f0:	20c7c83a 	sub	r3,r4,r3
  8471f4:	1cc4983a 	sll	r2,r3,r19
  8471f8:	3d0ed83a 	srl	r7,r7,r20
  8471fc:	1d06d83a 	srl	r3,r3,r20
  847200:	11c4b03a 	or	r2,r2,r7
  847204:	003f7c06 	br	846ff8 <__alt_mem_epcs_flash_controller_0+0xff83dff8>
  847208:	9ca6983a 	sll	r19,r19,r18
  84720c:	88f8d83a 	srl	fp,r17,r3
  847210:	80c4d83a 	srl	r2,r16,r3
  847214:	982cd43a 	srli	r22,r19,16
  847218:	8ca2983a 	sll	r17,r17,r18
  84721c:	e009883a 	mov	r4,fp
  847220:	b00b883a 	mov	r5,r22
  847224:	146ab03a 	or	r21,r2,r17
  847228:	08304ac0 	call	8304ac <__umodsi3>
  84722c:	b00b883a 	mov	r5,r22
  847230:	e009883a 	mov	r4,fp
  847234:	1029883a 	mov	r20,r2
  847238:	9dffffcc 	andi	r23,r19,65535
  84723c:	08304480 	call	830448 <__udivsi3>
  847240:	b809883a 	mov	r4,r23
  847244:	100b883a 	mov	r5,r2
  847248:	08305040 	call	830504 <__mulsi3>
  84724c:	a008943a 	slli	r4,r20,16
  847250:	a806d43a 	srli	r3,r21,16
  847254:	84a8983a 	sll	r20,r16,r18
  847258:	1906b03a 	or	r3,r3,r4
  84725c:	1880042e 	bgeu	r3,r2,847270 <__umoddi3+0x500>
  847260:	1cc7883a 	add	r3,r3,r19
  847264:	1cc00236 	bltu	r3,r19,847270 <__umoddi3+0x500>
  847268:	1880012e 	bgeu	r3,r2,847270 <__umoddi3+0x500>
  84726c:	1cc7883a 	add	r3,r3,r19
  847270:	18a3c83a 	sub	r17,r3,r2
  847274:	b00b883a 	mov	r5,r22
  847278:	8809883a 	mov	r4,r17
  84727c:	08304ac0 	call	8304ac <__umodsi3>
  847280:	b00b883a 	mov	r5,r22
  847284:	8809883a 	mov	r4,r17
  847288:	1021883a 	mov	r16,r2
  84728c:	08304480 	call	830448 <__udivsi3>
  847290:	100b883a 	mov	r5,r2
  847294:	b809883a 	mov	r4,r23
  847298:	8020943a 	slli	r16,r16,16
  84729c:	08305040 	call	830504 <__mulsi3>
  8472a0:	a8ffffcc 	andi	r3,r21,65535
  8472a4:	1c06b03a 	or	r3,r3,r16
  8472a8:	1880042e 	bgeu	r3,r2,8472bc <__umoddi3+0x54c>
  8472ac:	1cc7883a 	add	r3,r3,r19
  8472b0:	1cc00236 	bltu	r3,r19,8472bc <__umoddi3+0x54c>
  8472b4:	1880012e 	bgeu	r3,r2,8472bc <__umoddi3+0x54c>
  8472b8:	1cc7883a 	add	r3,r3,r19
  8472bc:	18a3c83a 	sub	r17,r3,r2
  8472c0:	003f2906 	br	846f68 <__alt_mem_epcs_flash_controller_0+0xff83df68>
  8472c4:	e48fc83a 	sub	r7,fp,r18
  8472c8:	1d49c83a 	sub	r4,r3,r21
  8472cc:	e1f9803a 	cmpltu	fp,fp,r7
  8472d0:	2739c83a 	sub	fp,r4,fp
  8472d4:	8f09c83a 	sub	r4,r17,fp
  8472d8:	003fc306 	br	8471e8 <__alt_mem_epcs_flash_controller_0+0xff83e1e8>
  8472dc:	01000604 	movi	r4,24
  8472e0:	003ef906 	br	846ec8 <__alt_mem_epcs_flash_controller_0+0xff83dec8>
  8472e4:	00800604 	movi	r2,24
  8472e8:	003f1306 	br	846f38 <__alt_mem_epcs_flash_controller_0+0xff83df38>
  8472ec:	01000604 	movi	r4,24
  8472f0:	003eb606 	br	846dcc <__alt_mem_epcs_flash_controller_0+0xff83ddcc>
  8472f4:	40bf902e 	bgeu	r8,r2,847138 <__alt_mem_epcs_flash_controller_0+0xff83e138>
  8472f8:	b5bfff84 	addi	r22,r22,-2
  8472fc:	4551883a 	add	r8,r8,r21
  847300:	003f8e06 	br	84713c <__alt_mem_epcs_flash_controller_0+0xff83e13c>
  847304:	18bf762e 	bgeu	r3,r2,8470e0 <__alt_mem_epcs_flash_controller_0+0xff83e0e0>
  847308:	8c7fff84 	addi	r17,r17,-2
  84730c:	1d47883a 	add	r3,r3,r21
  847310:	003f7406 	br	8470e4 <__alt_mem_epcs_flash_controller_0+0xff83e0e4>
  847314:	1cc7883a 	add	r3,r3,r19
  847318:	003ecd06 	br	846e50 <__alt_mem_epcs_flash_controller_0+0xff83de50>
  84731c:	8005883a 	mov	r2,r16
  847320:	003ef806 	br	846f04 <__alt_mem_epcs_flash_controller_0+0xff83df04>
  847324:	873fe736 	bltu	r16,fp,8472c4 <__alt_mem_epcs_flash_controller_0+0xff83e2c4>
  847328:	e00f883a 	mov	r7,fp
  84732c:	0009883a 	mov	r4,zero
  847330:	003fad06 	br	8471e8 <__alt_mem_epcs_flash_controller_0+0xff83e1e8>

00847334 <__eqsf2>:
  847334:	2006d5fa 	srli	r3,r4,23
  847338:	280cd5fa 	srli	r6,r5,23
  84733c:	01c02034 	movhi	r7,128
  847340:	39ffffc4 	addi	r7,r7,-1
  847344:	18c03fcc 	andi	r3,r3,255
  847348:	02003fc4 	movi	r8,255
  84734c:	3904703a 	and	r2,r7,r4
  847350:	31803fcc 	andi	r6,r6,255
  847354:	394e703a 	and	r7,r7,r5
  847358:	2008d7fa 	srli	r4,r4,31
  84735c:	280ad7fa 	srli	r5,r5,31
  847360:	1a000d26 	beq	r3,r8,847398 <__eqsf2+0x64>
  847364:	02003fc4 	movi	r8,255
  847368:	32000826 	beq	r6,r8,84738c <__eqsf2+0x58>
  84736c:	19800226 	beq	r3,r6,847378 <__eqsf2+0x44>
  847370:	00800044 	movi	r2,1
  847374:	f800283a 	ret
  847378:	11fffd1e 	bne	r2,r7,847370 <__alt_mem_epcs_flash_controller_0+0xff83e370>
  84737c:	21400926 	beq	r4,r5,8473a4 <__eqsf2+0x70>
  847380:	183ffb1e 	bne	r3,zero,847370 <__alt_mem_epcs_flash_controller_0+0xff83e370>
  847384:	1004c03a 	cmpne	r2,r2,zero
  847388:	f800283a 	ret
  84738c:	383ff726 	beq	r7,zero,84736c <__alt_mem_epcs_flash_controller_0+0xff83e36c>
  847390:	00800044 	movi	r2,1
  847394:	f800283a 	ret
  847398:	103ff226 	beq	r2,zero,847364 <__alt_mem_epcs_flash_controller_0+0xff83e364>
  84739c:	00800044 	movi	r2,1
  8473a0:	f800283a 	ret
  8473a4:	0005883a 	mov	r2,zero
  8473a8:	f800283a 	ret

008473ac <__gesf2>:
  8473ac:	2004d5fa 	srli	r2,r4,23
  8473b0:	2806d5fa 	srli	r3,r5,23
  8473b4:	01802034 	movhi	r6,128
  8473b8:	31bfffc4 	addi	r6,r6,-1
  8473bc:	10803fcc 	andi	r2,r2,255
  8473c0:	01c03fc4 	movi	r7,255
  8473c4:	3110703a 	and	r8,r6,r4
  8473c8:	18c03fcc 	andi	r3,r3,255
  8473cc:	314c703a 	and	r6,r6,r5
  8473d0:	2008d7fa 	srli	r4,r4,31
  8473d4:	280ad7fa 	srli	r5,r5,31
  8473d8:	11c01926 	beq	r2,r7,847440 <__gesf2+0x94>
  8473dc:	01c03fc4 	movi	r7,255
  8473e0:	19c00f26 	beq	r3,r7,847420 <__gesf2+0x74>
  8473e4:	1000061e 	bne	r2,zero,847400 <__gesf2+0x54>
  8473e8:	400f003a 	cmpeq	r7,r8,zero
  8473ec:	1800071e 	bne	r3,zero,84740c <__gesf2+0x60>
  8473f0:	3000061e 	bne	r6,zero,84740c <__gesf2+0x60>
  8473f4:	0005883a 	mov	r2,zero
  8473f8:	40000e1e 	bne	r8,zero,847434 <__gesf2+0x88>
  8473fc:	f800283a 	ret
  847400:	18000a1e 	bne	r3,zero,84742c <__gesf2+0x80>
  847404:	30000b26 	beq	r6,zero,847434 <__gesf2+0x88>
  847408:	000f883a 	mov	r7,zero
  84740c:	29403fcc 	andi	r5,r5,255
  847410:	38000726 	beq	r7,zero,847430 <__gesf2+0x84>
  847414:	28000826 	beq	r5,zero,847438 <__gesf2+0x8c>
  847418:	00800044 	movi	r2,1
  84741c:	f800283a 	ret
  847420:	303ff026 	beq	r6,zero,8473e4 <__alt_mem_epcs_flash_controller_0+0xff83e3e4>
  847424:	00bfff84 	movi	r2,-2
  847428:	f800283a 	ret
  84742c:	29403fcc 	andi	r5,r5,255
  847430:	21400526 	beq	r4,r5,847448 <__gesf2+0x9c>
  847434:	203ff826 	beq	r4,zero,847418 <__alt_mem_epcs_flash_controller_0+0xff83e418>
  847438:	00bfffc4 	movi	r2,-1
  84743c:	f800283a 	ret
  847440:	403fe626 	beq	r8,zero,8473dc <__alt_mem_epcs_flash_controller_0+0xff83e3dc>
  847444:	003ff706 	br	847424 <__alt_mem_epcs_flash_controller_0+0xff83e424>
  847448:	18bffa16 	blt	r3,r2,847434 <__alt_mem_epcs_flash_controller_0+0xff83e434>
  84744c:	10c00216 	blt	r2,r3,847458 <__gesf2+0xac>
  847450:	323ff836 	bltu	r6,r8,847434 <__alt_mem_epcs_flash_controller_0+0xff83e434>
  847454:	4180022e 	bgeu	r8,r6,847460 <__gesf2+0xb4>
  847458:	203fef1e 	bne	r4,zero,847418 <__alt_mem_epcs_flash_controller_0+0xff83e418>
  84745c:	003ff606 	br	847438 <__alt_mem_epcs_flash_controller_0+0xff83e438>
  847460:	0005883a 	mov	r2,zero
  847464:	f800283a 	ret

00847468 <__lesf2>:
  847468:	2004d5fa 	srli	r2,r4,23
  84746c:	280cd5fa 	srli	r6,r5,23
  847470:	00c02034 	movhi	r3,128
  847474:	18ffffc4 	addi	r3,r3,-1
  847478:	10803fcc 	andi	r2,r2,255
  84747c:	01c03fc4 	movi	r7,255
  847480:	1910703a 	and	r8,r3,r4
  847484:	31803fcc 	andi	r6,r6,255
  847488:	1946703a 	and	r3,r3,r5
  84748c:	2008d7fa 	srli	r4,r4,31
  847490:	280ad7fa 	srli	r5,r5,31
  847494:	11c01b26 	beq	r2,r7,847504 <__lesf2+0x9c>
  847498:	01c03fc4 	movi	r7,255
  84749c:	31c01126 	beq	r6,r7,8474e4 <__lesf2+0x7c>
  8474a0:	1000071e 	bne	r2,zero,8474c0 <__lesf2+0x58>
  8474a4:	400f003a 	cmpeq	r7,r8,zero
  8474a8:	21003fcc 	andi	r4,r4,255
  8474ac:	3000081e 	bne	r6,zero,8474d0 <__lesf2+0x68>
  8474b0:	1800071e 	bne	r3,zero,8474d0 <__lesf2+0x68>
  8474b4:	0005883a 	mov	r2,zero
  8474b8:	40000f1e 	bne	r8,zero,8474f8 <__lesf2+0x90>
  8474bc:	f800283a 	ret
  8474c0:	21003fcc 	andi	r4,r4,255
  8474c4:	30000a1e 	bne	r6,zero,8474f0 <__lesf2+0x88>
  8474c8:	18000b26 	beq	r3,zero,8474f8 <__lesf2+0x90>
  8474cc:	000f883a 	mov	r7,zero
  8474d0:	29403fcc 	andi	r5,r5,255
  8474d4:	38000726 	beq	r7,zero,8474f4 <__lesf2+0x8c>
  8474d8:	28000826 	beq	r5,zero,8474fc <__lesf2+0x94>
  8474dc:	00800044 	movi	r2,1
  8474e0:	f800283a 	ret
  8474e4:	183fee26 	beq	r3,zero,8474a0 <__alt_mem_epcs_flash_controller_0+0xff83e4a0>
  8474e8:	00800084 	movi	r2,2
  8474ec:	f800283a 	ret
  8474f0:	29403fcc 	andi	r5,r5,255
  8474f4:	21400626 	beq	r4,r5,847510 <__lesf2+0xa8>
  8474f8:	203ff826 	beq	r4,zero,8474dc <__alt_mem_epcs_flash_controller_0+0xff83e4dc>
  8474fc:	00bfffc4 	movi	r2,-1
  847500:	f800283a 	ret
  847504:	403fe426 	beq	r8,zero,847498 <__alt_mem_epcs_flash_controller_0+0xff83e498>
  847508:	00800084 	movi	r2,2
  84750c:	f800283a 	ret
  847510:	30bff916 	blt	r6,r2,8474f8 <__alt_mem_epcs_flash_controller_0+0xff83e4f8>
  847514:	11800216 	blt	r2,r6,847520 <__lesf2+0xb8>
  847518:	1a3ff736 	bltu	r3,r8,8474f8 <__alt_mem_epcs_flash_controller_0+0xff83e4f8>
  84751c:	40c0022e 	bgeu	r8,r3,847528 <__lesf2+0xc0>
  847520:	203fee1e 	bne	r4,zero,8474dc <__alt_mem_epcs_flash_controller_0+0xff83e4dc>
  847524:	003ff506 	br	8474fc <__alt_mem_epcs_flash_controller_0+0xff83e4fc>
  847528:	0005883a 	mov	r2,zero
  84752c:	f800283a 	ret

00847530 <__adddf3>:
  847530:	02c00434 	movhi	r11,16
  847534:	5affffc4 	addi	r11,r11,-1
  847538:	2806d7fa 	srli	r3,r5,31
  84753c:	2ad4703a 	and	r10,r5,r11
  847540:	3ad2703a 	and	r9,r7,r11
  847544:	3804d53a 	srli	r2,r7,20
  847548:	3018d77a 	srli	r12,r6,29
  84754c:	280ad53a 	srli	r5,r5,20
  847550:	501490fa 	slli	r10,r10,3
  847554:	2010d77a 	srli	r8,r4,29
  847558:	481290fa 	slli	r9,r9,3
  84755c:	380ed7fa 	srli	r7,r7,31
  847560:	defffb04 	addi	sp,sp,-20
  847564:	dc800215 	stw	r18,8(sp)
  847568:	dc400115 	stw	r17,4(sp)
  84756c:	dc000015 	stw	r16,0(sp)
  847570:	dfc00415 	stw	ra,16(sp)
  847574:	dcc00315 	stw	r19,12(sp)
  847578:	1c803fcc 	andi	r18,r3,255
  84757c:	2c01ffcc 	andi	r16,r5,2047
  847580:	5210b03a 	or	r8,r10,r8
  847584:	202290fa 	slli	r17,r4,3
  847588:	1081ffcc 	andi	r2,r2,2047
  84758c:	4b12b03a 	or	r9,r9,r12
  847590:	300c90fa 	slli	r6,r6,3
  847594:	91c07526 	beq	r18,r7,84776c <__adddf3+0x23c>
  847598:	8087c83a 	sub	r3,r16,r2
  84759c:	00c0ab0e 	bge	zero,r3,84784c <__adddf3+0x31c>
  8475a0:	10002a1e 	bne	r2,zero,84764c <__adddf3+0x11c>
  8475a4:	4984b03a 	or	r2,r9,r6
  8475a8:	1000961e 	bne	r2,zero,847804 <__adddf3+0x2d4>
  8475ac:	888001cc 	andi	r2,r17,7
  8475b0:	10000726 	beq	r2,zero,8475d0 <__adddf3+0xa0>
  8475b4:	888003cc 	andi	r2,r17,15
  8475b8:	00c00104 	movi	r3,4
  8475bc:	10c00426 	beq	r2,r3,8475d0 <__adddf3+0xa0>
  8475c0:	88c7883a 	add	r3,r17,r3
  8475c4:	1c63803a 	cmpltu	r17,r3,r17
  8475c8:	4451883a 	add	r8,r8,r17
  8475cc:	1823883a 	mov	r17,r3
  8475d0:	4080202c 	andhi	r2,r8,128
  8475d4:	10005926 	beq	r2,zero,84773c <__adddf3+0x20c>
  8475d8:	84000044 	addi	r16,r16,1
  8475dc:	0081ffc4 	movi	r2,2047
  8475e0:	8080ba26 	beq	r16,r2,8478cc <__adddf3+0x39c>
  8475e4:	00bfe034 	movhi	r2,65408
  8475e8:	10bfffc4 	addi	r2,r2,-1
  8475ec:	4090703a 	and	r8,r8,r2
  8475f0:	4004977a 	slli	r2,r8,29
  8475f4:	4010927a 	slli	r8,r8,9
  8475f8:	8822d0fa 	srli	r17,r17,3
  8475fc:	8401ffcc 	andi	r16,r16,2047
  847600:	4010d33a 	srli	r8,r8,12
  847604:	9007883a 	mov	r3,r18
  847608:	1444b03a 	or	r2,r2,r17
  84760c:	8401ffcc 	andi	r16,r16,2047
  847610:	8020953a 	slli	r16,r16,20
  847614:	18c03fcc 	andi	r3,r3,255
  847618:	01000434 	movhi	r4,16
  84761c:	213fffc4 	addi	r4,r4,-1
  847620:	180697fa 	slli	r3,r3,31
  847624:	4110703a 	and	r8,r8,r4
  847628:	4410b03a 	or	r8,r8,r16
  84762c:	40c6b03a 	or	r3,r8,r3
  847630:	dfc00417 	ldw	ra,16(sp)
  847634:	dcc00317 	ldw	r19,12(sp)
  847638:	dc800217 	ldw	r18,8(sp)
  84763c:	dc400117 	ldw	r17,4(sp)
  847640:	dc000017 	ldw	r16,0(sp)
  847644:	dec00504 	addi	sp,sp,20
  847648:	f800283a 	ret
  84764c:	0081ffc4 	movi	r2,2047
  847650:	80bfd626 	beq	r16,r2,8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847654:	4a402034 	orhi	r9,r9,128
  847658:	00800e04 	movi	r2,56
  84765c:	10c09f16 	blt	r2,r3,8478dc <__adddf3+0x3ac>
  847660:	008007c4 	movi	r2,31
  847664:	10c0c216 	blt	r2,r3,847970 <__adddf3+0x440>
  847668:	00800804 	movi	r2,32
  84766c:	10c5c83a 	sub	r2,r2,r3
  847670:	488a983a 	sll	r5,r9,r2
  847674:	30c8d83a 	srl	r4,r6,r3
  847678:	3084983a 	sll	r2,r6,r2
  84767c:	48c6d83a 	srl	r3,r9,r3
  847680:	290cb03a 	or	r6,r5,r4
  847684:	1004c03a 	cmpne	r2,r2,zero
  847688:	308cb03a 	or	r6,r6,r2
  84768c:	898dc83a 	sub	r6,r17,r6
  847690:	89a3803a 	cmpltu	r17,r17,r6
  847694:	40d1c83a 	sub	r8,r8,r3
  847698:	4451c83a 	sub	r8,r8,r17
  84769c:	3023883a 	mov	r17,r6
  8476a0:	4080202c 	andhi	r2,r8,128
  8476a4:	10002326 	beq	r2,zero,847734 <__adddf3+0x204>
  8476a8:	04c02034 	movhi	r19,128
  8476ac:	9cffffc4 	addi	r19,r19,-1
  8476b0:	44e6703a 	and	r19,r8,r19
  8476b4:	98007626 	beq	r19,zero,847890 <__adddf3+0x360>
  8476b8:	9809883a 	mov	r4,r19
  8476bc:	0831f580 	call	831f58 <__clzsi2>
  8476c0:	10fffe04 	addi	r3,r2,-8
  8476c4:	010007c4 	movi	r4,31
  8476c8:	20c07716 	blt	r4,r3,8478a8 <__adddf3+0x378>
  8476cc:	00800804 	movi	r2,32
  8476d0:	10c5c83a 	sub	r2,r2,r3
  8476d4:	8884d83a 	srl	r2,r17,r2
  8476d8:	98d0983a 	sll	r8,r19,r3
  8476dc:	88e2983a 	sll	r17,r17,r3
  8476e0:	1204b03a 	or	r2,r2,r8
  8476e4:	1c007416 	blt	r3,r16,8478b8 <__adddf3+0x388>
  8476e8:	1c21c83a 	sub	r16,r3,r16
  8476ec:	82000044 	addi	r8,r16,1
  8476f0:	00c007c4 	movi	r3,31
  8476f4:	1a009116 	blt	r3,r8,84793c <__adddf3+0x40c>
  8476f8:	00c00804 	movi	r3,32
  8476fc:	1a07c83a 	sub	r3,r3,r8
  847700:	8a08d83a 	srl	r4,r17,r8
  847704:	88e2983a 	sll	r17,r17,r3
  847708:	10c6983a 	sll	r3,r2,r3
  84770c:	1210d83a 	srl	r8,r2,r8
  847710:	8804c03a 	cmpne	r2,r17,zero
  847714:	1906b03a 	or	r3,r3,r4
  847718:	18a2b03a 	or	r17,r3,r2
  84771c:	0021883a 	mov	r16,zero
  847720:	003fa206 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847724:	1890b03a 	or	r8,r3,r2
  847728:	40017d26 	beq	r8,zero,847d20 <__adddf3+0x7f0>
  84772c:	1011883a 	mov	r8,r2
  847730:	1823883a 	mov	r17,r3
  847734:	888001cc 	andi	r2,r17,7
  847738:	103f9e1e 	bne	r2,zero,8475b4 <__alt_mem_epcs_flash_controller_0+0xff83e5b4>
  84773c:	4004977a 	slli	r2,r8,29
  847740:	8822d0fa 	srli	r17,r17,3
  847744:	4010d0fa 	srli	r8,r8,3
  847748:	9007883a 	mov	r3,r18
  84774c:	1444b03a 	or	r2,r2,r17
  847750:	0101ffc4 	movi	r4,2047
  847754:	81002426 	beq	r16,r4,8477e8 <__adddf3+0x2b8>
  847758:	8120703a 	and	r16,r16,r4
  84775c:	01000434 	movhi	r4,16
  847760:	213fffc4 	addi	r4,r4,-1
  847764:	4110703a 	and	r8,r8,r4
  847768:	003fa806 	br	84760c <__alt_mem_epcs_flash_controller_0+0xff83e60c>
  84776c:	8089c83a 	sub	r4,r16,r2
  847770:	01005e0e 	bge	zero,r4,8478ec <__adddf3+0x3bc>
  847774:	10002b26 	beq	r2,zero,847824 <__adddf3+0x2f4>
  847778:	0081ffc4 	movi	r2,2047
  84777c:	80bf8b26 	beq	r16,r2,8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847780:	4a402034 	orhi	r9,r9,128
  847784:	00800e04 	movi	r2,56
  847788:	1100a40e 	bge	r2,r4,847a1c <__adddf3+0x4ec>
  84778c:	498cb03a 	or	r6,r9,r6
  847790:	300ac03a 	cmpne	r5,r6,zero
  847794:	0013883a 	mov	r9,zero
  847798:	2c4b883a 	add	r5,r5,r17
  84779c:	2c63803a 	cmpltu	r17,r5,r17
  8477a0:	4a11883a 	add	r8,r9,r8
  8477a4:	8a11883a 	add	r8,r17,r8
  8477a8:	2823883a 	mov	r17,r5
  8477ac:	4080202c 	andhi	r2,r8,128
  8477b0:	103fe026 	beq	r2,zero,847734 <__alt_mem_epcs_flash_controller_0+0xff83e734>
  8477b4:	84000044 	addi	r16,r16,1
  8477b8:	0081ffc4 	movi	r2,2047
  8477bc:	8080d226 	beq	r16,r2,847b08 <__adddf3+0x5d8>
  8477c0:	00bfe034 	movhi	r2,65408
  8477c4:	10bfffc4 	addi	r2,r2,-1
  8477c8:	4090703a 	and	r8,r8,r2
  8477cc:	880ad07a 	srli	r5,r17,1
  8477d0:	400897fa 	slli	r4,r8,31
  8477d4:	88c0004c 	andi	r3,r17,1
  8477d8:	28e2b03a 	or	r17,r5,r3
  8477dc:	4010d07a 	srli	r8,r8,1
  8477e0:	2462b03a 	or	r17,r4,r17
  8477e4:	003f7106 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  8477e8:	4088b03a 	or	r4,r8,r2
  8477ec:	20014526 	beq	r4,zero,847d04 <__adddf3+0x7d4>
  8477f0:	01000434 	movhi	r4,16
  8477f4:	42000234 	orhi	r8,r8,8
  8477f8:	213fffc4 	addi	r4,r4,-1
  8477fc:	4110703a 	and	r8,r8,r4
  847800:	003f8206 	br	84760c <__alt_mem_epcs_flash_controller_0+0xff83e60c>
  847804:	18ffffc4 	addi	r3,r3,-1
  847808:	1800491e 	bne	r3,zero,847930 <__adddf3+0x400>
  84780c:	898bc83a 	sub	r5,r17,r6
  847810:	8963803a 	cmpltu	r17,r17,r5
  847814:	4251c83a 	sub	r8,r8,r9
  847818:	4451c83a 	sub	r8,r8,r17
  84781c:	2823883a 	mov	r17,r5
  847820:	003f9f06 	br	8476a0 <__alt_mem_epcs_flash_controller_0+0xff83e6a0>
  847824:	4984b03a 	or	r2,r9,r6
  847828:	103f6026 	beq	r2,zero,8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  84782c:	213fffc4 	addi	r4,r4,-1
  847830:	2000931e 	bne	r4,zero,847a80 <__adddf3+0x550>
  847834:	898d883a 	add	r6,r17,r6
  847838:	3463803a 	cmpltu	r17,r6,r17
  84783c:	4251883a 	add	r8,r8,r9
  847840:	8a11883a 	add	r8,r17,r8
  847844:	3023883a 	mov	r17,r6
  847848:	003fd806 	br	8477ac <__alt_mem_epcs_flash_controller_0+0xff83e7ac>
  84784c:	1800541e 	bne	r3,zero,8479a0 <__adddf3+0x470>
  847850:	80800044 	addi	r2,r16,1
  847854:	1081ffcc 	andi	r2,r2,2047
  847858:	00c00044 	movi	r3,1
  84785c:	1880a00e 	bge	r3,r2,847ae0 <__adddf3+0x5b0>
  847860:	8989c83a 	sub	r4,r17,r6
  847864:	8905803a 	cmpltu	r2,r17,r4
  847868:	4267c83a 	sub	r19,r8,r9
  84786c:	98a7c83a 	sub	r19,r19,r2
  847870:	9880202c 	andhi	r2,r19,128
  847874:	10006326 	beq	r2,zero,847a04 <__adddf3+0x4d4>
  847878:	3463c83a 	sub	r17,r6,r17
  84787c:	4a07c83a 	sub	r3,r9,r8
  847880:	344d803a 	cmpltu	r6,r6,r17
  847884:	19a7c83a 	sub	r19,r3,r6
  847888:	3825883a 	mov	r18,r7
  84788c:	983f8a1e 	bne	r19,zero,8476b8 <__alt_mem_epcs_flash_controller_0+0xff83e6b8>
  847890:	8809883a 	mov	r4,r17
  847894:	0831f580 	call	831f58 <__clzsi2>
  847898:	10800804 	addi	r2,r2,32
  84789c:	10fffe04 	addi	r3,r2,-8
  8478a0:	010007c4 	movi	r4,31
  8478a4:	20ff890e 	bge	r4,r3,8476cc <__alt_mem_epcs_flash_controller_0+0xff83e6cc>
  8478a8:	10bff604 	addi	r2,r2,-40
  8478ac:	8884983a 	sll	r2,r17,r2
  8478b0:	0023883a 	mov	r17,zero
  8478b4:	1c3f8c0e 	bge	r3,r16,8476e8 <__alt_mem_epcs_flash_controller_0+0xff83e6e8>
  8478b8:	023fe034 	movhi	r8,65408
  8478bc:	423fffc4 	addi	r8,r8,-1
  8478c0:	80e1c83a 	sub	r16,r16,r3
  8478c4:	1210703a 	and	r8,r2,r8
  8478c8:	003f3806 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  8478cc:	9007883a 	mov	r3,r18
  8478d0:	0011883a 	mov	r8,zero
  8478d4:	0005883a 	mov	r2,zero
  8478d8:	003f4c06 	br	84760c <__alt_mem_epcs_flash_controller_0+0xff83e60c>
  8478dc:	498cb03a 	or	r6,r9,r6
  8478e0:	300cc03a 	cmpne	r6,r6,zero
  8478e4:	0007883a 	mov	r3,zero
  8478e8:	003f6806 	br	84768c <__alt_mem_epcs_flash_controller_0+0xff83e68c>
  8478ec:	20009c1e 	bne	r4,zero,847b60 <__adddf3+0x630>
  8478f0:	80800044 	addi	r2,r16,1
  8478f4:	1141ffcc 	andi	r5,r2,2047
  8478f8:	01000044 	movi	r4,1
  8478fc:	2140670e 	bge	r4,r5,847a9c <__adddf3+0x56c>
  847900:	0101ffc4 	movi	r4,2047
  847904:	11007f26 	beq	r2,r4,847b04 <__adddf3+0x5d4>
  847908:	898d883a 	add	r6,r17,r6
  84790c:	4247883a 	add	r3,r8,r9
  847910:	3451803a 	cmpltu	r8,r6,r17
  847914:	40d1883a 	add	r8,r8,r3
  847918:	402297fa 	slli	r17,r8,31
  84791c:	300cd07a 	srli	r6,r6,1
  847920:	4010d07a 	srli	r8,r8,1
  847924:	1021883a 	mov	r16,r2
  847928:	89a2b03a 	or	r17,r17,r6
  84792c:	003f1f06 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847930:	0081ffc4 	movi	r2,2047
  847934:	80bf481e 	bne	r16,r2,847658 <__alt_mem_epcs_flash_controller_0+0xff83e658>
  847938:	003f1c06 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  84793c:	843ff844 	addi	r16,r16,-31
  847940:	01000804 	movi	r4,32
  847944:	1406d83a 	srl	r3,r2,r16
  847948:	41005026 	beq	r8,r4,847a8c <__adddf3+0x55c>
  84794c:	01001004 	movi	r4,64
  847950:	2211c83a 	sub	r8,r4,r8
  847954:	1204983a 	sll	r2,r2,r8
  847958:	88a2b03a 	or	r17,r17,r2
  84795c:	8822c03a 	cmpne	r17,r17,zero
  847960:	1c62b03a 	or	r17,r3,r17
  847964:	0011883a 	mov	r8,zero
  847968:	0021883a 	mov	r16,zero
  84796c:	003f7106 	br	847734 <__alt_mem_epcs_flash_controller_0+0xff83e734>
  847970:	193ff804 	addi	r4,r3,-32
  847974:	00800804 	movi	r2,32
  847978:	4908d83a 	srl	r4,r9,r4
  84797c:	18804526 	beq	r3,r2,847a94 <__adddf3+0x564>
  847980:	00801004 	movi	r2,64
  847984:	10c5c83a 	sub	r2,r2,r3
  847988:	4886983a 	sll	r3,r9,r2
  84798c:	198cb03a 	or	r6,r3,r6
  847990:	300cc03a 	cmpne	r6,r6,zero
  847994:	218cb03a 	or	r6,r4,r6
  847998:	0007883a 	mov	r3,zero
  84799c:	003f3b06 	br	84768c <__alt_mem_epcs_flash_controller_0+0xff83e68c>
  8479a0:	80002a26 	beq	r16,zero,847a4c <__adddf3+0x51c>
  8479a4:	0101ffc4 	movi	r4,2047
  8479a8:	11006826 	beq	r2,r4,847b4c <__adddf3+0x61c>
  8479ac:	00c7c83a 	sub	r3,zero,r3
  8479b0:	42002034 	orhi	r8,r8,128
  8479b4:	01000e04 	movi	r4,56
  8479b8:	20c07c16 	blt	r4,r3,847bac <__adddf3+0x67c>
  8479bc:	010007c4 	movi	r4,31
  8479c0:	20c0da16 	blt	r4,r3,847d2c <__adddf3+0x7fc>
  8479c4:	01000804 	movi	r4,32
  8479c8:	20c9c83a 	sub	r4,r4,r3
  8479cc:	4114983a 	sll	r10,r8,r4
  8479d0:	88cad83a 	srl	r5,r17,r3
  8479d4:	8908983a 	sll	r4,r17,r4
  8479d8:	40c6d83a 	srl	r3,r8,r3
  8479dc:	5162b03a 	or	r17,r10,r5
  8479e0:	2008c03a 	cmpne	r4,r4,zero
  8479e4:	8922b03a 	or	r17,r17,r4
  8479e8:	3463c83a 	sub	r17,r6,r17
  8479ec:	48c7c83a 	sub	r3,r9,r3
  8479f0:	344d803a 	cmpltu	r6,r6,r17
  8479f4:	1991c83a 	sub	r8,r3,r6
  8479f8:	1021883a 	mov	r16,r2
  8479fc:	3825883a 	mov	r18,r7
  847a00:	003f2706 	br	8476a0 <__alt_mem_epcs_flash_controller_0+0xff83e6a0>
  847a04:	24d0b03a 	or	r8,r4,r19
  847a08:	40001b1e 	bne	r8,zero,847a78 <__adddf3+0x548>
  847a0c:	0005883a 	mov	r2,zero
  847a10:	0007883a 	mov	r3,zero
  847a14:	0021883a 	mov	r16,zero
  847a18:	003f4d06 	br	847750 <__alt_mem_epcs_flash_controller_0+0xff83e750>
  847a1c:	008007c4 	movi	r2,31
  847a20:	11003c16 	blt	r2,r4,847b14 <__adddf3+0x5e4>
  847a24:	00800804 	movi	r2,32
  847a28:	1105c83a 	sub	r2,r2,r4
  847a2c:	488e983a 	sll	r7,r9,r2
  847a30:	310ad83a 	srl	r5,r6,r4
  847a34:	3084983a 	sll	r2,r6,r2
  847a38:	4912d83a 	srl	r9,r9,r4
  847a3c:	394ab03a 	or	r5,r7,r5
  847a40:	1004c03a 	cmpne	r2,r2,zero
  847a44:	288ab03a 	or	r5,r5,r2
  847a48:	003f5306 	br	847798 <__alt_mem_epcs_flash_controller_0+0xff83e798>
  847a4c:	4448b03a 	or	r4,r8,r17
  847a50:	20003e26 	beq	r4,zero,847b4c <__adddf3+0x61c>
  847a54:	00c6303a 	nor	r3,zero,r3
  847a58:	18003a1e 	bne	r3,zero,847b44 <__adddf3+0x614>
  847a5c:	3463c83a 	sub	r17,r6,r17
  847a60:	4a07c83a 	sub	r3,r9,r8
  847a64:	344d803a 	cmpltu	r6,r6,r17
  847a68:	1991c83a 	sub	r8,r3,r6
  847a6c:	1021883a 	mov	r16,r2
  847a70:	3825883a 	mov	r18,r7
  847a74:	003f0a06 	br	8476a0 <__alt_mem_epcs_flash_controller_0+0xff83e6a0>
  847a78:	2023883a 	mov	r17,r4
  847a7c:	003f0d06 	br	8476b4 <__alt_mem_epcs_flash_controller_0+0xff83e6b4>
  847a80:	0081ffc4 	movi	r2,2047
  847a84:	80bf3f1e 	bne	r16,r2,847784 <__alt_mem_epcs_flash_controller_0+0xff83e784>
  847a88:	003ec806 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847a8c:	0005883a 	mov	r2,zero
  847a90:	003fb106 	br	847958 <__alt_mem_epcs_flash_controller_0+0xff83e958>
  847a94:	0007883a 	mov	r3,zero
  847a98:	003fbc06 	br	84798c <__alt_mem_epcs_flash_controller_0+0xff83e98c>
  847a9c:	4444b03a 	or	r2,r8,r17
  847aa0:	8000871e 	bne	r16,zero,847cc0 <__adddf3+0x790>
  847aa4:	1000ba26 	beq	r2,zero,847d90 <__adddf3+0x860>
  847aa8:	4984b03a 	or	r2,r9,r6
  847aac:	103ebf26 	beq	r2,zero,8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847ab0:	8985883a 	add	r2,r17,r6
  847ab4:	4247883a 	add	r3,r8,r9
  847ab8:	1451803a 	cmpltu	r8,r2,r17
  847abc:	40d1883a 	add	r8,r8,r3
  847ac0:	40c0202c 	andhi	r3,r8,128
  847ac4:	1023883a 	mov	r17,r2
  847ac8:	183f1a26 	beq	r3,zero,847734 <__alt_mem_epcs_flash_controller_0+0xff83e734>
  847acc:	00bfe034 	movhi	r2,65408
  847ad0:	10bfffc4 	addi	r2,r2,-1
  847ad4:	2021883a 	mov	r16,r4
  847ad8:	4090703a 	and	r8,r8,r2
  847adc:	003eb306 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847ae0:	4444b03a 	or	r2,r8,r17
  847ae4:	8000291e 	bne	r16,zero,847b8c <__adddf3+0x65c>
  847ae8:	10004b1e 	bne	r2,zero,847c18 <__adddf3+0x6e8>
  847aec:	4990b03a 	or	r8,r9,r6
  847af0:	40008b26 	beq	r8,zero,847d20 <__adddf3+0x7f0>
  847af4:	4811883a 	mov	r8,r9
  847af8:	3023883a 	mov	r17,r6
  847afc:	3825883a 	mov	r18,r7
  847b00:	003eaa06 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847b04:	1021883a 	mov	r16,r2
  847b08:	0011883a 	mov	r8,zero
  847b0c:	0005883a 	mov	r2,zero
  847b10:	003f0f06 	br	847750 <__alt_mem_epcs_flash_controller_0+0xff83e750>
  847b14:	217ff804 	addi	r5,r4,-32
  847b18:	00800804 	movi	r2,32
  847b1c:	494ad83a 	srl	r5,r9,r5
  847b20:	20807d26 	beq	r4,r2,847d18 <__adddf3+0x7e8>
  847b24:	00801004 	movi	r2,64
  847b28:	1109c83a 	sub	r4,r2,r4
  847b2c:	4912983a 	sll	r9,r9,r4
  847b30:	498cb03a 	or	r6,r9,r6
  847b34:	300cc03a 	cmpne	r6,r6,zero
  847b38:	298ab03a 	or	r5,r5,r6
  847b3c:	0013883a 	mov	r9,zero
  847b40:	003f1506 	br	847798 <__alt_mem_epcs_flash_controller_0+0xff83e798>
  847b44:	0101ffc4 	movi	r4,2047
  847b48:	113f9a1e 	bne	r2,r4,8479b4 <__alt_mem_epcs_flash_controller_0+0xff83e9b4>
  847b4c:	4811883a 	mov	r8,r9
  847b50:	3023883a 	mov	r17,r6
  847b54:	1021883a 	mov	r16,r2
  847b58:	3825883a 	mov	r18,r7
  847b5c:	003e9306 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847b60:	8000161e 	bne	r16,zero,847bbc <__adddf3+0x68c>
  847b64:	444ab03a 	or	r5,r8,r17
  847b68:	28005126 	beq	r5,zero,847cb0 <__adddf3+0x780>
  847b6c:	0108303a 	nor	r4,zero,r4
  847b70:	20004d1e 	bne	r4,zero,847ca8 <__adddf3+0x778>
  847b74:	89a3883a 	add	r17,r17,r6
  847b78:	4253883a 	add	r9,r8,r9
  847b7c:	898d803a 	cmpltu	r6,r17,r6
  847b80:	3251883a 	add	r8,r6,r9
  847b84:	1021883a 	mov	r16,r2
  847b88:	003f0806 	br	8477ac <__alt_mem_epcs_flash_controller_0+0xff83e7ac>
  847b8c:	1000301e 	bne	r2,zero,847c50 <__adddf3+0x720>
  847b90:	4984b03a 	or	r2,r9,r6
  847b94:	10007126 	beq	r2,zero,847d5c <__adddf3+0x82c>
  847b98:	4811883a 	mov	r8,r9
  847b9c:	3023883a 	mov	r17,r6
  847ba0:	3825883a 	mov	r18,r7
  847ba4:	0401ffc4 	movi	r16,2047
  847ba8:	003e8006 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847bac:	4462b03a 	or	r17,r8,r17
  847bb0:	8822c03a 	cmpne	r17,r17,zero
  847bb4:	0007883a 	mov	r3,zero
  847bb8:	003f8b06 	br	8479e8 <__alt_mem_epcs_flash_controller_0+0xff83e9e8>
  847bbc:	0141ffc4 	movi	r5,2047
  847bc0:	11403b26 	beq	r2,r5,847cb0 <__adddf3+0x780>
  847bc4:	0109c83a 	sub	r4,zero,r4
  847bc8:	42002034 	orhi	r8,r8,128
  847bcc:	01400e04 	movi	r5,56
  847bd0:	29006716 	blt	r5,r4,847d70 <__adddf3+0x840>
  847bd4:	014007c4 	movi	r5,31
  847bd8:	29007016 	blt	r5,r4,847d9c <__adddf3+0x86c>
  847bdc:	01400804 	movi	r5,32
  847be0:	290bc83a 	sub	r5,r5,r4
  847be4:	4154983a 	sll	r10,r8,r5
  847be8:	890ed83a 	srl	r7,r17,r4
  847bec:	894a983a 	sll	r5,r17,r5
  847bf0:	4108d83a 	srl	r4,r8,r4
  847bf4:	51e2b03a 	or	r17,r10,r7
  847bf8:	280ac03a 	cmpne	r5,r5,zero
  847bfc:	8962b03a 	or	r17,r17,r5
  847c00:	89a3883a 	add	r17,r17,r6
  847c04:	2253883a 	add	r9,r4,r9
  847c08:	898d803a 	cmpltu	r6,r17,r6
  847c0c:	3251883a 	add	r8,r6,r9
  847c10:	1021883a 	mov	r16,r2
  847c14:	003ee506 	br	8477ac <__alt_mem_epcs_flash_controller_0+0xff83e7ac>
  847c18:	4984b03a 	or	r2,r9,r6
  847c1c:	103e6326 	beq	r2,zero,8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847c20:	8987c83a 	sub	r3,r17,r6
  847c24:	88c9803a 	cmpltu	r4,r17,r3
  847c28:	4245c83a 	sub	r2,r8,r9
  847c2c:	1105c83a 	sub	r2,r2,r4
  847c30:	1100202c 	andhi	r4,r2,128
  847c34:	203ebb26 	beq	r4,zero,847724 <__alt_mem_epcs_flash_controller_0+0xff83e724>
  847c38:	3463c83a 	sub	r17,r6,r17
  847c3c:	4a07c83a 	sub	r3,r9,r8
  847c40:	344d803a 	cmpltu	r6,r6,r17
  847c44:	1991c83a 	sub	r8,r3,r6
  847c48:	3825883a 	mov	r18,r7
  847c4c:	003e5706 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847c50:	4984b03a 	or	r2,r9,r6
  847c54:	10002e26 	beq	r2,zero,847d10 <__adddf3+0x7e0>
  847c58:	4004d0fa 	srli	r2,r8,3
  847c5c:	8822d0fa 	srli	r17,r17,3
  847c60:	4010977a 	slli	r8,r8,29
  847c64:	10c0022c 	andhi	r3,r2,8
  847c68:	4462b03a 	or	r17,r8,r17
  847c6c:	18000826 	beq	r3,zero,847c90 <__adddf3+0x760>
  847c70:	4808d0fa 	srli	r4,r9,3
  847c74:	20c0022c 	andhi	r3,r4,8
  847c78:	1800051e 	bne	r3,zero,847c90 <__adddf3+0x760>
  847c7c:	300cd0fa 	srli	r6,r6,3
  847c80:	4806977a 	slli	r3,r9,29
  847c84:	2005883a 	mov	r2,r4
  847c88:	3825883a 	mov	r18,r7
  847c8c:	19a2b03a 	or	r17,r3,r6
  847c90:	8810d77a 	srli	r8,r17,29
  847c94:	100490fa 	slli	r2,r2,3
  847c98:	882290fa 	slli	r17,r17,3
  847c9c:	0401ffc4 	movi	r16,2047
  847ca0:	4090b03a 	or	r8,r8,r2
  847ca4:	003e4106 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847ca8:	0141ffc4 	movi	r5,2047
  847cac:	117fc71e 	bne	r2,r5,847bcc <__alt_mem_epcs_flash_controller_0+0xff83ebcc>
  847cb0:	4811883a 	mov	r8,r9
  847cb4:	3023883a 	mov	r17,r6
  847cb8:	1021883a 	mov	r16,r2
  847cbc:	003e3b06 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847cc0:	10002f26 	beq	r2,zero,847d80 <__adddf3+0x850>
  847cc4:	4984b03a 	or	r2,r9,r6
  847cc8:	10001126 	beq	r2,zero,847d10 <__adddf3+0x7e0>
  847ccc:	4004d0fa 	srli	r2,r8,3
  847cd0:	8822d0fa 	srli	r17,r17,3
  847cd4:	4010977a 	slli	r8,r8,29
  847cd8:	10c0022c 	andhi	r3,r2,8
  847cdc:	4462b03a 	or	r17,r8,r17
  847ce0:	183feb26 	beq	r3,zero,847c90 <__alt_mem_epcs_flash_controller_0+0xff83ec90>
  847ce4:	4808d0fa 	srli	r4,r9,3
  847ce8:	20c0022c 	andhi	r3,r4,8
  847cec:	183fe81e 	bne	r3,zero,847c90 <__alt_mem_epcs_flash_controller_0+0xff83ec90>
  847cf0:	300cd0fa 	srli	r6,r6,3
  847cf4:	4806977a 	slli	r3,r9,29
  847cf8:	2005883a 	mov	r2,r4
  847cfc:	19a2b03a 	or	r17,r3,r6
  847d00:	003fe306 	br	847c90 <__alt_mem_epcs_flash_controller_0+0xff83ec90>
  847d04:	0011883a 	mov	r8,zero
  847d08:	0005883a 	mov	r2,zero
  847d0c:	003e3f06 	br	84760c <__alt_mem_epcs_flash_controller_0+0xff83e60c>
  847d10:	0401ffc4 	movi	r16,2047
  847d14:	003e2506 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847d18:	0013883a 	mov	r9,zero
  847d1c:	003f8406 	br	847b30 <__alt_mem_epcs_flash_controller_0+0xff83eb30>
  847d20:	0005883a 	mov	r2,zero
  847d24:	0007883a 	mov	r3,zero
  847d28:	003e8906 	br	847750 <__alt_mem_epcs_flash_controller_0+0xff83e750>
  847d2c:	197ff804 	addi	r5,r3,-32
  847d30:	01000804 	movi	r4,32
  847d34:	414ad83a 	srl	r5,r8,r5
  847d38:	19002426 	beq	r3,r4,847dcc <__adddf3+0x89c>
  847d3c:	01001004 	movi	r4,64
  847d40:	20c7c83a 	sub	r3,r4,r3
  847d44:	40c6983a 	sll	r3,r8,r3
  847d48:	1c46b03a 	or	r3,r3,r17
  847d4c:	1806c03a 	cmpne	r3,r3,zero
  847d50:	28e2b03a 	or	r17,r5,r3
  847d54:	0007883a 	mov	r3,zero
  847d58:	003f2306 	br	8479e8 <__alt_mem_epcs_flash_controller_0+0xff83e9e8>
  847d5c:	0007883a 	mov	r3,zero
  847d60:	5811883a 	mov	r8,r11
  847d64:	00bfffc4 	movi	r2,-1
  847d68:	0401ffc4 	movi	r16,2047
  847d6c:	003e7806 	br	847750 <__alt_mem_epcs_flash_controller_0+0xff83e750>
  847d70:	4462b03a 	or	r17,r8,r17
  847d74:	8822c03a 	cmpne	r17,r17,zero
  847d78:	0009883a 	mov	r4,zero
  847d7c:	003fa006 	br	847c00 <__alt_mem_epcs_flash_controller_0+0xff83ec00>
  847d80:	4811883a 	mov	r8,r9
  847d84:	3023883a 	mov	r17,r6
  847d88:	0401ffc4 	movi	r16,2047
  847d8c:	003e0706 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847d90:	4811883a 	mov	r8,r9
  847d94:	3023883a 	mov	r17,r6
  847d98:	003e0406 	br	8475ac <__alt_mem_epcs_flash_controller_0+0xff83e5ac>
  847d9c:	21fff804 	addi	r7,r4,-32
  847da0:	01400804 	movi	r5,32
  847da4:	41ced83a 	srl	r7,r8,r7
  847da8:	21400a26 	beq	r4,r5,847dd4 <__adddf3+0x8a4>
  847dac:	01401004 	movi	r5,64
  847db0:	2909c83a 	sub	r4,r5,r4
  847db4:	4108983a 	sll	r4,r8,r4
  847db8:	2448b03a 	or	r4,r4,r17
  847dbc:	2008c03a 	cmpne	r4,r4,zero
  847dc0:	3922b03a 	or	r17,r7,r4
  847dc4:	0009883a 	mov	r4,zero
  847dc8:	003f8d06 	br	847c00 <__alt_mem_epcs_flash_controller_0+0xff83ec00>
  847dcc:	0007883a 	mov	r3,zero
  847dd0:	003fdd06 	br	847d48 <__alt_mem_epcs_flash_controller_0+0xff83ed48>
  847dd4:	0009883a 	mov	r4,zero
  847dd8:	003ff706 	br	847db8 <__alt_mem_epcs_flash_controller_0+0xff83edb8>

00847ddc <__divdf3>:
  847ddc:	defff004 	addi	sp,sp,-64
  847de0:	dc800815 	stw	r18,32(sp)
  847de4:	2824d53a 	srli	r18,r5,20
  847de8:	dd800c15 	stw	r22,48(sp)
  847dec:	282cd7fa 	srli	r22,r5,31
  847df0:	dc000615 	stw	r16,24(sp)
  847df4:	04000434 	movhi	r16,16
  847df8:	843fffc4 	addi	r16,r16,-1
  847dfc:	dfc00f15 	stw	ra,60(sp)
  847e00:	df000e15 	stw	fp,56(sp)
  847e04:	ddc00d15 	stw	r23,52(sp)
  847e08:	dd400b15 	stw	r21,44(sp)
  847e0c:	dd000a15 	stw	r20,40(sp)
  847e10:	dcc00915 	stw	r19,36(sp)
  847e14:	dc400715 	stw	r17,28(sp)
  847e18:	9481ffcc 	andi	r18,r18,2047
  847e1c:	2c20703a 	and	r16,r5,r16
  847e20:	b2003fcc 	andi	r8,r22,255
  847e24:	90006126 	beq	r18,zero,847fac <__divdf3+0x1d0>
  847e28:	0081ffc4 	movi	r2,2047
  847e2c:	202b883a 	mov	r21,r4
  847e30:	90803726 	beq	r18,r2,847f10 <__divdf3+0x134>
  847e34:	80800434 	orhi	r2,r16,16
  847e38:	100490fa 	slli	r2,r2,3
  847e3c:	2020d77a 	srli	r16,r4,29
  847e40:	202a90fa 	slli	r21,r4,3
  847e44:	94bf0044 	addi	r18,r18,-1023
  847e48:	80a0b03a 	or	r16,r16,r2
  847e4c:	0013883a 	mov	r9,zero
  847e50:	000b883a 	mov	r5,zero
  847e54:	3806d53a 	srli	r3,r7,20
  847e58:	382ed7fa 	srli	r23,r7,31
  847e5c:	04400434 	movhi	r17,16
  847e60:	8c7fffc4 	addi	r17,r17,-1
  847e64:	18c1ffcc 	andi	r3,r3,2047
  847e68:	3029883a 	mov	r20,r6
  847e6c:	3c62703a 	and	r17,r7,r17
  847e70:	bf003fcc 	andi	fp,r23,255
  847e74:	18006e26 	beq	r3,zero,848030 <__divdf3+0x254>
  847e78:	0081ffc4 	movi	r2,2047
  847e7c:	18806626 	beq	r3,r2,848018 <__divdf3+0x23c>
  847e80:	88800434 	orhi	r2,r17,16
  847e84:	100490fa 	slli	r2,r2,3
  847e88:	3022d77a 	srli	r17,r6,29
  847e8c:	302890fa 	slli	r20,r6,3
  847e90:	18ff0044 	addi	r3,r3,-1023
  847e94:	88a2b03a 	or	r17,r17,r2
  847e98:	000f883a 	mov	r7,zero
  847e9c:	b5e6f03a 	xor	r19,r22,r23
  847ea0:	3a4cb03a 	or	r6,r7,r9
  847ea4:	008003c4 	movi	r2,15
  847ea8:	9809883a 	mov	r4,r19
  847eac:	90c7c83a 	sub	r3,r18,r3
  847eb0:	9cc03fcc 	andi	r19,r19,255
  847eb4:	11809636 	bltu	r2,r6,848110 <__divdf3+0x334>
  847eb8:	300c90ba 	slli	r6,r6,2
  847ebc:	00802134 	movhi	r2,132
  847ec0:	109fb404 	addi	r2,r2,32464
  847ec4:	308d883a 	add	r6,r6,r2
  847ec8:	30800017 	ldw	r2,0(r6)
  847ecc:	1000683a 	jmp	r2
  847ed0:	00848110 	cmplti	r2,zero,4612
  847ed4:	00847f48 	cmpgei	r2,zero,4605
  847ed8:	00848100 	call	84810 <OSCtxSw_SWITCH_PC+0x847d0>
  847edc:	00847f3c 	xorhi	r2,zero,4604
  847ee0:	00848100 	call	84810 <OSCtxSw_SWITCH_PC+0x847d0>
  847ee4:	008480d4 	movui	r2,4611
  847ee8:	00848100 	call	84810 <OSCtxSw_SWITCH_PC+0x847d0>
  847eec:	00847f3c 	xorhi	r2,zero,4604
  847ef0:	00847f48 	cmpgei	r2,zero,4605
  847ef4:	00847f48 	cmpgei	r2,zero,4605
  847ef8:	008480d4 	movui	r2,4611
  847efc:	00847f3c 	xorhi	r2,zero,4604
  847f00:	00847f2c 	andhi	r2,zero,4604
  847f04:	00847f2c 	andhi	r2,zero,4604
  847f08:	00847f2c 	andhi	r2,zero,4604
  847f0c:	00848498 	cmpnei	r2,zero,4626
  847f10:	2404b03a 	or	r2,r4,r16
  847f14:	10006c1e 	bne	r2,zero,8480c8 <__divdf3+0x2ec>
  847f18:	02400204 	movi	r9,8
  847f1c:	0021883a 	mov	r16,zero
  847f20:	002b883a 	mov	r21,zero
  847f24:	01400084 	movi	r5,2
  847f28:	003fca06 	br	847e54 <__alt_mem_epcs_flash_controller_0+0xff83ee54>
  847f2c:	8023883a 	mov	r17,r16
  847f30:	a829883a 	mov	r20,r21
  847f34:	4039883a 	mov	fp,r8
  847f38:	280f883a 	mov	r7,r5
  847f3c:	00800084 	movi	r2,2
  847f40:	3881601e 	bne	r7,r2,8484c4 <__divdf3+0x6e8>
  847f44:	e027883a 	mov	r19,fp
  847f48:	9900004c 	andi	r4,r19,1
  847f4c:	0081ffc4 	movi	r2,2047
  847f50:	0021883a 	mov	r16,zero
  847f54:	002b883a 	mov	r21,zero
  847f58:	1004953a 	slli	r2,r2,20
  847f5c:	20c03fcc 	andi	r3,r4,255
  847f60:	01400434 	movhi	r5,16
  847f64:	297fffc4 	addi	r5,r5,-1
  847f68:	180697fa 	slli	r3,r3,31
  847f6c:	8160703a 	and	r16,r16,r5
  847f70:	80a0b03a 	or	r16,r16,r2
  847f74:	80c6b03a 	or	r3,r16,r3
  847f78:	a805883a 	mov	r2,r21
  847f7c:	dfc00f17 	ldw	ra,60(sp)
  847f80:	df000e17 	ldw	fp,56(sp)
  847f84:	ddc00d17 	ldw	r23,52(sp)
  847f88:	dd800c17 	ldw	r22,48(sp)
  847f8c:	dd400b17 	ldw	r21,44(sp)
  847f90:	dd000a17 	ldw	r20,40(sp)
  847f94:	dcc00917 	ldw	r19,36(sp)
  847f98:	dc800817 	ldw	r18,32(sp)
  847f9c:	dc400717 	ldw	r17,28(sp)
  847fa0:	dc000617 	ldw	r16,24(sp)
  847fa4:	dec01004 	addi	sp,sp,64
  847fa8:	f800283a 	ret
  847fac:	2404b03a 	or	r2,r4,r16
  847fb0:	2023883a 	mov	r17,r4
  847fb4:	10003f26 	beq	r2,zero,8480b4 <__divdf3+0x2d8>
  847fb8:	80015e26 	beq	r16,zero,848534 <__divdf3+0x758>
  847fbc:	8009883a 	mov	r4,r16
  847fc0:	d9800215 	stw	r6,8(sp)
  847fc4:	d9c00515 	stw	r7,20(sp)
  847fc8:	da000415 	stw	r8,16(sp)
  847fcc:	0831f580 	call	831f58 <__clzsi2>
  847fd0:	d9800217 	ldw	r6,8(sp)
  847fd4:	d9c00517 	ldw	r7,20(sp)
  847fd8:	da000417 	ldw	r8,16(sp)
  847fdc:	113ffd44 	addi	r4,r2,-11
  847fe0:	00c00704 	movi	r3,28
  847fe4:	19014f16 	blt	r3,r4,848524 <__divdf3+0x748>
  847fe8:	00c00744 	movi	r3,29
  847fec:	157ffe04 	addi	r21,r2,-8
  847ff0:	1907c83a 	sub	r3,r3,r4
  847ff4:	8560983a 	sll	r16,r16,r21
  847ff8:	88c6d83a 	srl	r3,r17,r3
  847ffc:	8d6a983a 	sll	r21,r17,r21
  848000:	1c20b03a 	or	r16,r3,r16
  848004:	1080fcc4 	addi	r2,r2,1011
  848008:	00a5c83a 	sub	r18,zero,r2
  84800c:	0013883a 	mov	r9,zero
  848010:	000b883a 	mov	r5,zero
  848014:	003f8f06 	br	847e54 <__alt_mem_epcs_flash_controller_0+0xff83ee54>
  848018:	3444b03a 	or	r2,r6,r17
  84801c:	1000231e 	bne	r2,zero,8480ac <__divdf3+0x2d0>
  848020:	0023883a 	mov	r17,zero
  848024:	0029883a 	mov	r20,zero
  848028:	01c00084 	movi	r7,2
  84802c:	003f9b06 	br	847e9c <__alt_mem_epcs_flash_controller_0+0xff83ee9c>
  848030:	3444b03a 	or	r2,r6,r17
  848034:	10001926 	beq	r2,zero,84809c <__divdf3+0x2c0>
  848038:	88014b26 	beq	r17,zero,848568 <__divdf3+0x78c>
  84803c:	8809883a 	mov	r4,r17
  848040:	d9400115 	stw	r5,4(sp)
  848044:	d9800215 	stw	r6,8(sp)
  848048:	da000415 	stw	r8,16(sp)
  84804c:	da400315 	stw	r9,12(sp)
  848050:	0831f580 	call	831f58 <__clzsi2>
  848054:	d9400117 	ldw	r5,4(sp)
  848058:	d9800217 	ldw	r6,8(sp)
  84805c:	da000417 	ldw	r8,16(sp)
  848060:	da400317 	ldw	r9,12(sp)
  848064:	113ffd44 	addi	r4,r2,-11
  848068:	00c00704 	movi	r3,28
  84806c:	19013a16 	blt	r3,r4,848558 <__divdf3+0x77c>
  848070:	00c00744 	movi	r3,29
  848074:	153ffe04 	addi	r20,r2,-8
  848078:	1907c83a 	sub	r3,r3,r4
  84807c:	8d22983a 	sll	r17,r17,r20
  848080:	30c6d83a 	srl	r3,r6,r3
  848084:	3528983a 	sll	r20,r6,r20
  848088:	1c62b03a 	or	r17,r3,r17
  84808c:	1080fcc4 	addi	r2,r2,1011
  848090:	0087c83a 	sub	r3,zero,r2
  848094:	000f883a 	mov	r7,zero
  848098:	003f8006 	br	847e9c <__alt_mem_epcs_flash_controller_0+0xff83ee9c>
  84809c:	0023883a 	mov	r17,zero
  8480a0:	0029883a 	mov	r20,zero
  8480a4:	01c00044 	movi	r7,1
  8480a8:	003f7c06 	br	847e9c <__alt_mem_epcs_flash_controller_0+0xff83ee9c>
  8480ac:	01c000c4 	movi	r7,3
  8480b0:	003f7a06 	br	847e9c <__alt_mem_epcs_flash_controller_0+0xff83ee9c>
  8480b4:	02400104 	movi	r9,4
  8480b8:	0021883a 	mov	r16,zero
  8480bc:	002b883a 	mov	r21,zero
  8480c0:	01400044 	movi	r5,1
  8480c4:	003f6306 	br	847e54 <__alt_mem_epcs_flash_controller_0+0xff83ee54>
  8480c8:	02400304 	movi	r9,12
  8480cc:	014000c4 	movi	r5,3
  8480d0:	003f6006 	br	847e54 <__alt_mem_epcs_flash_controller_0+0xff83ee54>
  8480d4:	04000434 	movhi	r16,16
  8480d8:	0009883a 	mov	r4,zero
  8480dc:	843fffc4 	addi	r16,r16,-1
  8480e0:	057fffc4 	movi	r21,-1
  8480e4:	0081ffc4 	movi	r2,2047
  8480e8:	003f9b06 	br	847f58 <__alt_mem_epcs_flash_controller_0+0xff83ef58>
  8480ec:	00c00044 	movi	r3,1
  8480f0:	1887c83a 	sub	r3,r3,r2
  8480f4:	01000e04 	movi	r4,56
  8480f8:	20c1530e 	bge	r4,r3,848648 <__divdf3+0x86c>
  8480fc:	9900004c 	andi	r4,r19,1
  848100:	0005883a 	mov	r2,zero
  848104:	0021883a 	mov	r16,zero
  848108:	002b883a 	mov	r21,zero
  84810c:	003f9206 	br	847f58 <__alt_mem_epcs_flash_controller_0+0xff83ef58>
  848110:	8c012e36 	bltu	r17,r16,8485cc <__divdf3+0x7f0>
  848114:	84412c26 	beq	r16,r17,8485c8 <__divdf3+0x7ec>
  848118:	a82f883a 	mov	r23,r21
  84811c:	18ffffc4 	addi	r3,r3,-1
  848120:	002b883a 	mov	r21,zero
  848124:	a004d63a 	srli	r2,r20,24
  848128:	8822923a 	slli	r17,r17,8
  84812c:	a028923a 	slli	r20,r20,8
  848130:	8009883a 	mov	r4,r16
  848134:	88acb03a 	or	r22,r17,r2
  848138:	dd000015 	stw	r20,0(sp)
  84813c:	b028d43a 	srli	r20,r22,16
  848140:	d8c00215 	stw	r3,8(sp)
  848144:	b4bfffcc 	andi	r18,r22,65535
  848148:	a00b883a 	mov	r5,r20
  84814c:	08304480 	call	830448 <__udivsi3>
  848150:	100b883a 	mov	r5,r2
  848154:	9009883a 	mov	r4,r18
  848158:	1023883a 	mov	r17,r2
  84815c:	08305040 	call	830504 <__mulsi3>
  848160:	8009883a 	mov	r4,r16
  848164:	a00b883a 	mov	r5,r20
  848168:	1039883a 	mov	fp,r2
  84816c:	08304ac0 	call	8304ac <__umodsi3>
  848170:	1004943a 	slli	r2,r2,16
  848174:	b808d43a 	srli	r4,r23,16
  848178:	d8c00217 	ldw	r3,8(sp)
  84817c:	2084b03a 	or	r2,r4,r2
  848180:	1700062e 	bgeu	r2,fp,84819c <__divdf3+0x3c0>
  848184:	1585883a 	add	r2,r2,r22
  848188:	893fffc4 	addi	r4,r17,-1
  84818c:	15811d36 	bltu	r2,r22,848604 <__divdf3+0x828>
  848190:	17011c2e 	bgeu	r2,fp,848604 <__divdf3+0x828>
  848194:	8c7fff84 	addi	r17,r17,-2
  848198:	1585883a 	add	r2,r2,r22
  84819c:	1739c83a 	sub	fp,r2,fp
  8481a0:	a00b883a 	mov	r5,r20
  8481a4:	e009883a 	mov	r4,fp
  8481a8:	d8c00215 	stw	r3,8(sp)
  8481ac:	08304480 	call	830448 <__udivsi3>
  8481b0:	100b883a 	mov	r5,r2
  8481b4:	9009883a 	mov	r4,r18
  8481b8:	1021883a 	mov	r16,r2
  8481bc:	08305040 	call	830504 <__mulsi3>
  8481c0:	a00b883a 	mov	r5,r20
  8481c4:	e009883a 	mov	r4,fp
  8481c8:	d8800415 	stw	r2,16(sp)
  8481cc:	08304ac0 	call	8304ac <__umodsi3>
  8481d0:	1004943a 	slli	r2,r2,16
  8481d4:	da000417 	ldw	r8,16(sp)
  8481d8:	bdffffcc 	andi	r23,r23,65535
  8481dc:	b884b03a 	or	r2,r23,r2
  8481e0:	d8c00217 	ldw	r3,8(sp)
  8481e4:	1200062e 	bgeu	r2,r8,848200 <__divdf3+0x424>
  8481e8:	1585883a 	add	r2,r2,r22
  8481ec:	813fffc4 	addi	r4,r16,-1
  8481f0:	15810236 	bltu	r2,r22,8485fc <__divdf3+0x820>
  8481f4:	1201012e 	bgeu	r2,r8,8485fc <__divdf3+0x820>
  8481f8:	843fff84 	addi	r16,r16,-2
  8481fc:	1585883a 	add	r2,r2,r22
  848200:	8822943a 	slli	r17,r17,16
  848204:	d9800017 	ldw	r6,0(sp)
  848208:	1211c83a 	sub	r8,r2,r8
  84820c:	8c22b03a 	or	r17,r17,r16
  848210:	373fffcc 	andi	fp,r6,65535
  848214:	8abfffcc 	andi	r10,r17,65535
  848218:	8820d43a 	srli	r16,r17,16
  84821c:	5009883a 	mov	r4,r10
  848220:	e00b883a 	mov	r5,fp
  848224:	302ed43a 	srli	r23,r6,16
  848228:	d8c00215 	stw	r3,8(sp)
  84822c:	da000415 	stw	r8,16(sp)
  848230:	da800115 	stw	r10,4(sp)
  848234:	08305040 	call	830504 <__mulsi3>
  848238:	800b883a 	mov	r5,r16
  84823c:	e009883a 	mov	r4,fp
  848240:	d8800515 	stw	r2,20(sp)
  848244:	08305040 	call	830504 <__mulsi3>
  848248:	8009883a 	mov	r4,r16
  84824c:	b80b883a 	mov	r5,r23
  848250:	d8800315 	stw	r2,12(sp)
  848254:	08305040 	call	830504 <__mulsi3>
  848258:	da800117 	ldw	r10,4(sp)
  84825c:	b80b883a 	mov	r5,r23
  848260:	1021883a 	mov	r16,r2
  848264:	5009883a 	mov	r4,r10
  848268:	08305040 	call	830504 <__mulsi3>
  84826c:	d9c00517 	ldw	r7,20(sp)
  848270:	da400317 	ldw	r9,12(sp)
  848274:	d8c00217 	ldw	r3,8(sp)
  848278:	3808d43a 	srli	r4,r7,16
  84827c:	1245883a 	add	r2,r2,r9
  848280:	da000417 	ldw	r8,16(sp)
  848284:	2085883a 	add	r2,r4,r2
  848288:	1240022e 	bgeu	r2,r9,848294 <__divdf3+0x4b8>
  84828c:	01000074 	movhi	r4,1
  848290:	8121883a 	add	r16,r16,r4
  848294:	1008d43a 	srli	r4,r2,16
  848298:	1004943a 	slli	r2,r2,16
  84829c:	39ffffcc 	andi	r7,r7,65535
  8482a0:	2409883a 	add	r4,r4,r16
  8482a4:	11c5883a 	add	r2,r2,r7
  8482a8:	4100bb36 	bltu	r8,r4,848598 <__divdf3+0x7bc>
  8482ac:	4100d726 	beq	r8,r4,84860c <__divdf3+0x830>
  8482b0:	4109c83a 	sub	r4,r8,r4
  8482b4:	a8a1c83a 	sub	r16,r21,r2
  8482b8:	ac2b803a 	cmpltu	r21,r21,r16
  8482bc:	256bc83a 	sub	r21,r4,r21
  8482c0:	b540d926 	beq	r22,r21,848628 <__divdf3+0x84c>
  8482c4:	a00b883a 	mov	r5,r20
  8482c8:	a809883a 	mov	r4,r21
  8482cc:	d8c00215 	stw	r3,8(sp)
  8482d0:	08304480 	call	830448 <__udivsi3>
  8482d4:	100b883a 	mov	r5,r2
  8482d8:	9009883a 	mov	r4,r18
  8482dc:	d8800515 	stw	r2,20(sp)
  8482e0:	08305040 	call	830504 <__mulsi3>
  8482e4:	a809883a 	mov	r4,r21
  8482e8:	a00b883a 	mov	r5,r20
  8482ec:	d8800415 	stw	r2,16(sp)
  8482f0:	08304ac0 	call	8304ac <__umodsi3>
  8482f4:	1004943a 	slli	r2,r2,16
  8482f8:	8008d43a 	srli	r4,r16,16
  8482fc:	da000417 	ldw	r8,16(sp)
  848300:	d8c00217 	ldw	r3,8(sp)
  848304:	2084b03a 	or	r2,r4,r2
  848308:	d9c00517 	ldw	r7,20(sp)
  84830c:	1200062e 	bgeu	r2,r8,848328 <__divdf3+0x54c>
  848310:	1585883a 	add	r2,r2,r22
  848314:	393fffc4 	addi	r4,r7,-1
  848318:	1580c536 	bltu	r2,r22,848630 <__divdf3+0x854>
  84831c:	1200c42e 	bgeu	r2,r8,848630 <__divdf3+0x854>
  848320:	39ffff84 	addi	r7,r7,-2
  848324:	1585883a 	add	r2,r2,r22
  848328:	122bc83a 	sub	r21,r2,r8
  84832c:	a00b883a 	mov	r5,r20
  848330:	a809883a 	mov	r4,r21
  848334:	d8c00215 	stw	r3,8(sp)
  848338:	d9c00515 	stw	r7,20(sp)
  84833c:	08304480 	call	830448 <__udivsi3>
  848340:	9009883a 	mov	r4,r18
  848344:	100b883a 	mov	r5,r2
  848348:	d8800415 	stw	r2,16(sp)
  84834c:	08305040 	call	830504 <__mulsi3>
  848350:	a809883a 	mov	r4,r21
  848354:	a00b883a 	mov	r5,r20
  848358:	1025883a 	mov	r18,r2
  84835c:	08304ac0 	call	8304ac <__umodsi3>
  848360:	1004943a 	slli	r2,r2,16
  848364:	813fffcc 	andi	r4,r16,65535
  848368:	d8c00217 	ldw	r3,8(sp)
  84836c:	20a0b03a 	or	r16,r4,r2
  848370:	d9c00517 	ldw	r7,20(sp)
  848374:	da000417 	ldw	r8,16(sp)
  848378:	8480062e 	bgeu	r16,r18,848394 <__divdf3+0x5b8>
  84837c:	85a1883a 	add	r16,r16,r22
  848380:	40bfffc4 	addi	r2,r8,-1
  848384:	8580ac36 	bltu	r16,r22,848638 <__divdf3+0x85c>
  848388:	8480ab2e 	bgeu	r16,r18,848638 <__divdf3+0x85c>
  84838c:	423fff84 	addi	r8,r8,-2
  848390:	85a1883a 	add	r16,r16,r22
  848394:	3804943a 	slli	r2,r7,16
  848398:	84a1c83a 	sub	r16,r16,r18
  84839c:	e009883a 	mov	r4,fp
  8483a0:	1228b03a 	or	r20,r2,r8
  8483a4:	a1ffffcc 	andi	r7,r20,65535
  8483a8:	a024d43a 	srli	r18,r20,16
  8483ac:	380b883a 	mov	r5,r7
  8483b0:	d8c00215 	stw	r3,8(sp)
  8483b4:	d9c00515 	stw	r7,20(sp)
  8483b8:	08305040 	call	830504 <__mulsi3>
  8483bc:	900b883a 	mov	r5,r18
  8483c0:	e009883a 	mov	r4,fp
  8483c4:	102b883a 	mov	r21,r2
  8483c8:	08305040 	call	830504 <__mulsi3>
  8483cc:	900b883a 	mov	r5,r18
  8483d0:	b809883a 	mov	r4,r23
  8483d4:	1039883a 	mov	fp,r2
  8483d8:	08305040 	call	830504 <__mulsi3>
  8483dc:	d9c00517 	ldw	r7,20(sp)
  8483e0:	b80b883a 	mov	r5,r23
  8483e4:	1025883a 	mov	r18,r2
  8483e8:	3809883a 	mov	r4,r7
  8483ec:	08305040 	call	830504 <__mulsi3>
  8483f0:	a808d43a 	srli	r4,r21,16
  8483f4:	1705883a 	add	r2,r2,fp
  8483f8:	d8c00217 	ldw	r3,8(sp)
  8483fc:	2085883a 	add	r2,r4,r2
  848400:	1700022e 	bgeu	r2,fp,84840c <__divdf3+0x630>
  848404:	01000074 	movhi	r4,1
  848408:	9125883a 	add	r18,r18,r4
  84840c:	1008d43a 	srli	r4,r2,16
  848410:	1004943a 	slli	r2,r2,16
  848414:	ad7fffcc 	andi	r21,r21,65535
  848418:	2489883a 	add	r4,r4,r18
  84841c:	1545883a 	add	r2,r2,r21
  848420:	81003836 	bltu	r16,r4,848504 <__divdf3+0x728>
  848424:	81003626 	beq	r16,r4,848500 <__divdf3+0x724>
  848428:	a5000054 	ori	r20,r20,1
  84842c:	1880ffc4 	addi	r2,r3,1023
  848430:	00bf2e0e 	bge	zero,r2,8480ec <__alt_mem_epcs_flash_controller_0+0xff83f0ec>
  848434:	a10001cc 	andi	r4,r20,7
  848438:	20000726 	beq	r4,zero,848458 <__divdf3+0x67c>
  84843c:	a10003cc 	andi	r4,r20,15
  848440:	01400104 	movi	r5,4
  848444:	21400426 	beq	r4,r5,848458 <__divdf3+0x67c>
  848448:	a149883a 	add	r4,r20,r5
  84844c:	2529803a 	cmpltu	r20,r4,r20
  848450:	8d23883a 	add	r17,r17,r20
  848454:	2029883a 	mov	r20,r4
  848458:	8900402c 	andhi	r4,r17,256
  84845c:	20000426 	beq	r4,zero,848470 <__divdf3+0x694>
  848460:	18810004 	addi	r2,r3,1024
  848464:	00ffc034 	movhi	r3,65280
  848468:	18ffffc4 	addi	r3,r3,-1
  84846c:	88e2703a 	and	r17,r17,r3
  848470:	00c1ff84 	movi	r3,2046
  848474:	18beb416 	blt	r3,r2,847f48 <__alt_mem_epcs_flash_controller_0+0xff83ef48>
  848478:	a028d0fa 	srli	r20,r20,3
  84847c:	882a977a 	slli	r21,r17,29
  848480:	8820927a 	slli	r16,r17,9
  848484:	1081ffcc 	andi	r2,r2,2047
  848488:	ad2ab03a 	or	r21,r21,r20
  84848c:	8020d33a 	srli	r16,r16,12
  848490:	9900004c 	andi	r4,r19,1
  848494:	003eb006 	br	847f58 <__alt_mem_epcs_flash_controller_0+0xff83ef58>
  848498:	8080022c 	andhi	r2,r16,8
  84849c:	10001226 	beq	r2,zero,8484e8 <__divdf3+0x70c>
  8484a0:	8880022c 	andhi	r2,r17,8
  8484a4:	1000101e 	bne	r2,zero,8484e8 <__divdf3+0x70c>
  8484a8:	00800434 	movhi	r2,16
  8484ac:	8c000234 	orhi	r16,r17,8
  8484b0:	10bfffc4 	addi	r2,r2,-1
  8484b4:	b809883a 	mov	r4,r23
  8484b8:	80a0703a 	and	r16,r16,r2
  8484bc:	a02b883a 	mov	r21,r20
  8484c0:	003f0806 	br	8480e4 <__alt_mem_epcs_flash_controller_0+0xff83f0e4>
  8484c4:	008000c4 	movi	r2,3
  8484c8:	3880b126 	beq	r7,r2,848790 <__divdf3+0x9b4>
  8484cc:	00800044 	movi	r2,1
  8484d0:	38805b1e 	bne	r7,r2,848640 <__divdf3+0x864>
  8484d4:	e009883a 	mov	r4,fp
  8484d8:	0005883a 	mov	r2,zero
  8484dc:	0021883a 	mov	r16,zero
  8484e0:	002b883a 	mov	r21,zero
  8484e4:	003e9c06 	br	847f58 <__alt_mem_epcs_flash_controller_0+0xff83ef58>
  8484e8:	00800434 	movhi	r2,16
  8484ec:	84000234 	orhi	r16,r16,8
  8484f0:	10bfffc4 	addi	r2,r2,-1
  8484f4:	b009883a 	mov	r4,r22
  8484f8:	80a0703a 	and	r16,r16,r2
  8484fc:	003ef906 	br	8480e4 <__alt_mem_epcs_flash_controller_0+0xff83f0e4>
  848500:	103fca26 	beq	r2,zero,84842c <__alt_mem_epcs_flash_controller_0+0xff83f42c>
  848504:	b421883a 	add	r16,r22,r16
  848508:	a17fffc4 	addi	r5,r20,-1
  84850c:	8580422e 	bgeu	r16,r22,848618 <__divdf3+0x83c>
  848510:	2829883a 	mov	r20,r5
  848514:	813fc41e 	bne	r16,r4,848428 <__alt_mem_epcs_flash_controller_0+0xff83f428>
  848518:	d9800017 	ldw	r6,0(sp)
  84851c:	30bfc21e 	bne	r6,r2,848428 <__alt_mem_epcs_flash_controller_0+0xff83f428>
  848520:	003fc206 	br	84842c <__alt_mem_epcs_flash_controller_0+0xff83f42c>
  848524:	143ff604 	addi	r16,r2,-40
  848528:	8c20983a 	sll	r16,r17,r16
  84852c:	002b883a 	mov	r21,zero
  848530:	003eb406 	br	848004 <__alt_mem_epcs_flash_controller_0+0xff83f004>
  848534:	d9800215 	stw	r6,8(sp)
  848538:	d9c00515 	stw	r7,20(sp)
  84853c:	da000415 	stw	r8,16(sp)
  848540:	0831f580 	call	831f58 <__clzsi2>
  848544:	10800804 	addi	r2,r2,32
  848548:	da000417 	ldw	r8,16(sp)
  84854c:	d9c00517 	ldw	r7,20(sp)
  848550:	d9800217 	ldw	r6,8(sp)
  848554:	003ea106 	br	847fdc <__alt_mem_epcs_flash_controller_0+0xff83efdc>
  848558:	147ff604 	addi	r17,r2,-40
  84855c:	3462983a 	sll	r17,r6,r17
  848560:	0029883a 	mov	r20,zero
  848564:	003ec906 	br	84808c <__alt_mem_epcs_flash_controller_0+0xff83f08c>
  848568:	3009883a 	mov	r4,r6
  84856c:	d9400115 	stw	r5,4(sp)
  848570:	d9800215 	stw	r6,8(sp)
  848574:	da000415 	stw	r8,16(sp)
  848578:	da400315 	stw	r9,12(sp)
  84857c:	0831f580 	call	831f58 <__clzsi2>
  848580:	10800804 	addi	r2,r2,32
  848584:	da400317 	ldw	r9,12(sp)
  848588:	da000417 	ldw	r8,16(sp)
  84858c:	d9800217 	ldw	r6,8(sp)
  848590:	d9400117 	ldw	r5,4(sp)
  848594:	003eb306 	br	848064 <__alt_mem_epcs_flash_controller_0+0xff83f064>
  848598:	d9800017 	ldw	r6,0(sp)
  84859c:	a9ab883a 	add	r21,r21,r6
  8485a0:	a98b803a 	cmpltu	r5,r21,r6
  8485a4:	2d8b883a 	add	r5,r5,r22
  8485a8:	2a11883a 	add	r8,r5,r8
  8485ac:	897fffc4 	addi	r5,r17,-1
  8485b0:	b2000c2e 	bgeu	r22,r8,8485e4 <__divdf3+0x808>
  8485b4:	41003f36 	bltu	r8,r4,8486b4 <__divdf3+0x8d8>
  8485b8:	22006c26 	beq	r4,r8,84876c <__divdf3+0x990>
  8485bc:	4109c83a 	sub	r4,r8,r4
  8485c0:	2823883a 	mov	r17,r5
  8485c4:	003f3b06 	br	8482b4 <__alt_mem_epcs_flash_controller_0+0xff83f2b4>
  8485c8:	ad3ed336 	bltu	r21,r20,848118 <__alt_mem_epcs_flash_controller_0+0xff83f118>
  8485cc:	a804d07a 	srli	r2,r21,1
  8485d0:	802e97fa 	slli	r23,r16,31
  8485d4:	a82a97fa 	slli	r21,r21,31
  8485d8:	8020d07a 	srli	r16,r16,1
  8485dc:	b8aeb03a 	or	r23,r23,r2
  8485e0:	003ed006 	br	848124 <__alt_mem_epcs_flash_controller_0+0xff83f124>
  8485e4:	b23ff51e 	bne	r22,r8,8485bc <__alt_mem_epcs_flash_controller_0+0xff83f5bc>
  8485e8:	d9800017 	ldw	r6,0(sp)
  8485ec:	a9bff12e 	bgeu	r21,r6,8485b4 <__alt_mem_epcs_flash_controller_0+0xff83f5b4>
  8485f0:	b109c83a 	sub	r4,r22,r4
  8485f4:	2823883a 	mov	r17,r5
  8485f8:	003f2e06 	br	8482b4 <__alt_mem_epcs_flash_controller_0+0xff83f2b4>
  8485fc:	2021883a 	mov	r16,r4
  848600:	003eff06 	br	848200 <__alt_mem_epcs_flash_controller_0+0xff83f200>
  848604:	2023883a 	mov	r17,r4
  848608:	003ee406 	br	84819c <__alt_mem_epcs_flash_controller_0+0xff83f19c>
  84860c:	a8bfe236 	bltu	r21,r2,848598 <__alt_mem_epcs_flash_controller_0+0xff83f598>
  848610:	0009883a 	mov	r4,zero
  848614:	003f2706 	br	8482b4 <__alt_mem_epcs_flash_controller_0+0xff83f2b4>
  848618:	81002d36 	bltu	r16,r4,8486d0 <__divdf3+0x8f4>
  84861c:	24005626 	beq	r4,r16,848778 <__divdf3+0x99c>
  848620:	2829883a 	mov	r20,r5
  848624:	003f8006 	br	848428 <__alt_mem_epcs_flash_controller_0+0xff83f428>
  848628:	053fffc4 	movi	r20,-1
  84862c:	003f7f06 	br	84842c <__alt_mem_epcs_flash_controller_0+0xff83f42c>
  848630:	200f883a 	mov	r7,r4
  848634:	003f3c06 	br	848328 <__alt_mem_epcs_flash_controller_0+0xff83f328>
  848638:	1011883a 	mov	r8,r2
  84863c:	003f5506 	br	848394 <__alt_mem_epcs_flash_controller_0+0xff83f394>
  848640:	e027883a 	mov	r19,fp
  848644:	003f7906 	br	84842c <__alt_mem_epcs_flash_controller_0+0xff83f42c>
  848648:	010007c4 	movi	r4,31
  84864c:	20c02816 	blt	r4,r3,8486f0 <__divdf3+0x914>
  848650:	00800804 	movi	r2,32
  848654:	10c5c83a 	sub	r2,r2,r3
  848658:	888a983a 	sll	r5,r17,r2
  84865c:	a0c8d83a 	srl	r4,r20,r3
  848660:	a084983a 	sll	r2,r20,r2
  848664:	88e2d83a 	srl	r17,r17,r3
  848668:	2906b03a 	or	r3,r5,r4
  84866c:	1004c03a 	cmpne	r2,r2,zero
  848670:	1886b03a 	or	r3,r3,r2
  848674:	188001cc 	andi	r2,r3,7
  848678:	10000726 	beq	r2,zero,848698 <__divdf3+0x8bc>
  84867c:	188003cc 	andi	r2,r3,15
  848680:	01000104 	movi	r4,4
  848684:	11000426 	beq	r2,r4,848698 <__divdf3+0x8bc>
  848688:	1805883a 	mov	r2,r3
  84868c:	10c00104 	addi	r3,r2,4
  848690:	1885803a 	cmpltu	r2,r3,r2
  848694:	88a3883a 	add	r17,r17,r2
  848698:	8880202c 	andhi	r2,r17,128
  84869c:	10002926 	beq	r2,zero,848744 <__divdf3+0x968>
  8486a0:	9900004c 	andi	r4,r19,1
  8486a4:	00800044 	movi	r2,1
  8486a8:	0021883a 	mov	r16,zero
  8486ac:	002b883a 	mov	r21,zero
  8486b0:	003e2906 	br	847f58 <__alt_mem_epcs_flash_controller_0+0xff83ef58>
  8486b4:	d9800017 	ldw	r6,0(sp)
  8486b8:	8c7fff84 	addi	r17,r17,-2
  8486bc:	a9ab883a 	add	r21,r21,r6
  8486c0:	a98b803a 	cmpltu	r5,r21,r6
  8486c4:	2d8b883a 	add	r5,r5,r22
  8486c8:	2a11883a 	add	r8,r5,r8
  8486cc:	003ef806 	br	8482b0 <__alt_mem_epcs_flash_controller_0+0xff83f2b0>
  8486d0:	d9800017 	ldw	r6,0(sp)
  8486d4:	318f883a 	add	r7,r6,r6
  8486d8:	398b803a 	cmpltu	r5,r7,r6
  8486dc:	2d8d883a 	add	r6,r5,r22
  8486e0:	81a1883a 	add	r16,r16,r6
  8486e4:	a17fff84 	addi	r5,r20,-2
  8486e8:	d9c00015 	stw	r7,0(sp)
  8486ec:	003f8806 	br	848510 <__alt_mem_epcs_flash_controller_0+0xff83f510>
  8486f0:	013ff844 	movi	r4,-31
  8486f4:	2085c83a 	sub	r2,r4,r2
  8486f8:	8888d83a 	srl	r4,r17,r2
  8486fc:	00800804 	movi	r2,32
  848700:	18802126 	beq	r3,r2,848788 <__divdf3+0x9ac>
  848704:	04001004 	movi	r16,64
  848708:	80c7c83a 	sub	r3,r16,r3
  84870c:	88e0983a 	sll	r16,r17,r3
  848710:	8504b03a 	or	r2,r16,r20
  848714:	1004c03a 	cmpne	r2,r2,zero
  848718:	2084b03a 	or	r2,r4,r2
  84871c:	144001cc 	andi	r17,r2,7
  848720:	88000d1e 	bne	r17,zero,848758 <__divdf3+0x97c>
  848724:	0021883a 	mov	r16,zero
  848728:	102ad0fa 	srli	r21,r2,3
  84872c:	9900004c 	andi	r4,r19,1
  848730:	0005883a 	mov	r2,zero
  848734:	ac6ab03a 	or	r21,r21,r17
  848738:	003e0706 	br	847f58 <__alt_mem_epcs_flash_controller_0+0xff83ef58>
  84873c:	1007883a 	mov	r3,r2
  848740:	0023883a 	mov	r17,zero
  848744:	8820927a 	slli	r16,r17,9
  848748:	1805883a 	mov	r2,r3
  84874c:	8822977a 	slli	r17,r17,29
  848750:	8020d33a 	srli	r16,r16,12
  848754:	003ff406 	br	848728 <__alt_mem_epcs_flash_controller_0+0xff83f728>
  848758:	10c003cc 	andi	r3,r2,15
  84875c:	01000104 	movi	r4,4
  848760:	193ff626 	beq	r3,r4,84873c <__alt_mem_epcs_flash_controller_0+0xff83f73c>
  848764:	0023883a 	mov	r17,zero
  848768:	003fc806 	br	84868c <__alt_mem_epcs_flash_controller_0+0xff83f68c>
  84876c:	a8bfd136 	bltu	r21,r2,8486b4 <__alt_mem_epcs_flash_controller_0+0xff83f6b4>
  848770:	2823883a 	mov	r17,r5
  848774:	003fa606 	br	848610 <__alt_mem_epcs_flash_controller_0+0xff83f610>
  848778:	d9800017 	ldw	r6,0(sp)
  84877c:	30bfd436 	bltu	r6,r2,8486d0 <__alt_mem_epcs_flash_controller_0+0xff83f6d0>
  848780:	2829883a 	mov	r20,r5
  848784:	003f6406 	br	848518 <__alt_mem_epcs_flash_controller_0+0xff83f518>
  848788:	0021883a 	mov	r16,zero
  84878c:	003fe006 	br	848710 <__alt_mem_epcs_flash_controller_0+0xff83f710>
  848790:	00800434 	movhi	r2,16
  848794:	8c000234 	orhi	r16,r17,8
  848798:	10bfffc4 	addi	r2,r2,-1
  84879c:	e009883a 	mov	r4,fp
  8487a0:	80a0703a 	and	r16,r16,r2
  8487a4:	a02b883a 	mov	r21,r20
  8487a8:	003e4e06 	br	8480e4 <__alt_mem_epcs_flash_controller_0+0xff83f0e4>

008487ac <__eqdf2>:
  8487ac:	2804d53a 	srli	r2,r5,20
  8487b0:	3806d53a 	srli	r3,r7,20
  8487b4:	02000434 	movhi	r8,16
  8487b8:	423fffc4 	addi	r8,r8,-1
  8487bc:	1081ffcc 	andi	r2,r2,2047
  8487c0:	0281ffc4 	movi	r10,2047
  8487c4:	2a12703a 	and	r9,r5,r8
  8487c8:	18c1ffcc 	andi	r3,r3,2047
  8487cc:	3a10703a 	and	r8,r7,r8
  8487d0:	280ad7fa 	srli	r5,r5,31
  8487d4:	380ed7fa 	srli	r7,r7,31
  8487d8:	12801026 	beq	r2,r10,84881c <__eqdf2+0x70>
  8487dc:	0281ffc4 	movi	r10,2047
  8487e0:	1a800a26 	beq	r3,r10,84880c <__eqdf2+0x60>
  8487e4:	10c00226 	beq	r2,r3,8487f0 <__eqdf2+0x44>
  8487e8:	00800044 	movi	r2,1
  8487ec:	f800283a 	ret
  8487f0:	4a3ffd1e 	bne	r9,r8,8487e8 <__alt_mem_epcs_flash_controller_0+0xff83f7e8>
  8487f4:	21bffc1e 	bne	r4,r6,8487e8 <__alt_mem_epcs_flash_controller_0+0xff83f7e8>
  8487f8:	29c00c26 	beq	r5,r7,84882c <__eqdf2+0x80>
  8487fc:	103ffa1e 	bne	r2,zero,8487e8 <__alt_mem_epcs_flash_controller_0+0xff83f7e8>
  848800:	2244b03a 	or	r2,r4,r9
  848804:	1004c03a 	cmpne	r2,r2,zero
  848808:	f800283a 	ret
  84880c:	3214b03a 	or	r10,r6,r8
  848810:	503ff426 	beq	r10,zero,8487e4 <__alt_mem_epcs_flash_controller_0+0xff83f7e4>
  848814:	00800044 	movi	r2,1
  848818:	f800283a 	ret
  84881c:	2254b03a 	or	r10,r4,r9
  848820:	503fee26 	beq	r10,zero,8487dc <__alt_mem_epcs_flash_controller_0+0xff83f7dc>
  848824:	00800044 	movi	r2,1
  848828:	f800283a 	ret
  84882c:	0005883a 	mov	r2,zero
  848830:	f800283a 	ret

00848834 <__gedf2>:
  848834:	2804d53a 	srli	r2,r5,20
  848838:	3806d53a 	srli	r3,r7,20
  84883c:	02000434 	movhi	r8,16
  848840:	423fffc4 	addi	r8,r8,-1
  848844:	1081ffcc 	andi	r2,r2,2047
  848848:	0241ffc4 	movi	r9,2047
  84884c:	2a14703a 	and	r10,r5,r8
  848850:	18c1ffcc 	andi	r3,r3,2047
  848854:	3a10703a 	and	r8,r7,r8
  848858:	280ad7fa 	srli	r5,r5,31
  84885c:	380ed7fa 	srli	r7,r7,31
  848860:	12401d26 	beq	r2,r9,8488d8 <__gedf2+0xa4>
  848864:	0241ffc4 	movi	r9,2047
  848868:	1a401226 	beq	r3,r9,8488b4 <__gedf2+0x80>
  84886c:	1000081e 	bne	r2,zero,848890 <__gedf2+0x5c>
  848870:	2296b03a 	or	r11,r4,r10
  848874:	5813003a 	cmpeq	r9,r11,zero
  848878:	1800091e 	bne	r3,zero,8488a0 <__gedf2+0x6c>
  84887c:	3218b03a 	or	r12,r6,r8
  848880:	6000071e 	bne	r12,zero,8488a0 <__gedf2+0x6c>
  848884:	0005883a 	mov	r2,zero
  848888:	5800101e 	bne	r11,zero,8488cc <__gedf2+0x98>
  84888c:	f800283a 	ret
  848890:	18000c1e 	bne	r3,zero,8488c4 <__gedf2+0x90>
  848894:	3212b03a 	or	r9,r6,r8
  848898:	48000c26 	beq	r9,zero,8488cc <__gedf2+0x98>
  84889c:	0013883a 	mov	r9,zero
  8488a0:	39c03fcc 	andi	r7,r7,255
  8488a4:	48000826 	beq	r9,zero,8488c8 <__gedf2+0x94>
  8488a8:	38000926 	beq	r7,zero,8488d0 <__gedf2+0x9c>
  8488ac:	00800044 	movi	r2,1
  8488b0:	f800283a 	ret
  8488b4:	3212b03a 	or	r9,r6,r8
  8488b8:	483fec26 	beq	r9,zero,84886c <__alt_mem_epcs_flash_controller_0+0xff83f86c>
  8488bc:	00bfff84 	movi	r2,-2
  8488c0:	f800283a 	ret
  8488c4:	39c03fcc 	andi	r7,r7,255
  8488c8:	29c00626 	beq	r5,r7,8488e4 <__gedf2+0xb0>
  8488cc:	283ff726 	beq	r5,zero,8488ac <__alt_mem_epcs_flash_controller_0+0xff83f8ac>
  8488d0:	00bfffc4 	movi	r2,-1
  8488d4:	f800283a 	ret
  8488d8:	2292b03a 	or	r9,r4,r10
  8488dc:	483fe126 	beq	r9,zero,848864 <__alt_mem_epcs_flash_controller_0+0xff83f864>
  8488e0:	003ff606 	br	8488bc <__alt_mem_epcs_flash_controller_0+0xff83f8bc>
  8488e4:	18bff916 	blt	r3,r2,8488cc <__alt_mem_epcs_flash_controller_0+0xff83f8cc>
  8488e8:	10c00316 	blt	r2,r3,8488f8 <__gedf2+0xc4>
  8488ec:	42bff736 	bltu	r8,r10,8488cc <__alt_mem_epcs_flash_controller_0+0xff83f8cc>
  8488f0:	52000326 	beq	r10,r8,848900 <__gedf2+0xcc>
  8488f4:	5200042e 	bgeu	r10,r8,848908 <__gedf2+0xd4>
  8488f8:	283fec1e 	bne	r5,zero,8488ac <__alt_mem_epcs_flash_controller_0+0xff83f8ac>
  8488fc:	003ff406 	br	8488d0 <__alt_mem_epcs_flash_controller_0+0xff83f8d0>
  848900:	313ff236 	bltu	r6,r4,8488cc <__alt_mem_epcs_flash_controller_0+0xff83f8cc>
  848904:	21bffc36 	bltu	r4,r6,8488f8 <__alt_mem_epcs_flash_controller_0+0xff83f8f8>
  848908:	0005883a 	mov	r2,zero
  84890c:	f800283a 	ret

00848910 <__ledf2>:
  848910:	2804d53a 	srli	r2,r5,20
  848914:	3810d53a 	srli	r8,r7,20
  848918:	00c00434 	movhi	r3,16
  84891c:	18ffffc4 	addi	r3,r3,-1
  848920:	1081ffcc 	andi	r2,r2,2047
  848924:	0241ffc4 	movi	r9,2047
  848928:	28d4703a 	and	r10,r5,r3
  84892c:	4201ffcc 	andi	r8,r8,2047
  848930:	38c6703a 	and	r3,r7,r3
  848934:	280ad7fa 	srli	r5,r5,31
  848938:	380ed7fa 	srli	r7,r7,31
  84893c:	12401f26 	beq	r2,r9,8489bc <__ledf2+0xac>
  848940:	0241ffc4 	movi	r9,2047
  848944:	42401426 	beq	r8,r9,848998 <__ledf2+0x88>
  848948:	1000091e 	bne	r2,zero,848970 <__ledf2+0x60>
  84894c:	2296b03a 	or	r11,r4,r10
  848950:	5813003a 	cmpeq	r9,r11,zero
  848954:	29403fcc 	andi	r5,r5,255
  848958:	40000a1e 	bne	r8,zero,848984 <__ledf2+0x74>
  84895c:	30d8b03a 	or	r12,r6,r3
  848960:	6000081e 	bne	r12,zero,848984 <__ledf2+0x74>
  848964:	0005883a 	mov	r2,zero
  848968:	5800111e 	bne	r11,zero,8489b0 <__ledf2+0xa0>
  84896c:	f800283a 	ret
  848970:	29403fcc 	andi	r5,r5,255
  848974:	40000c1e 	bne	r8,zero,8489a8 <__ledf2+0x98>
  848978:	30d2b03a 	or	r9,r6,r3
  84897c:	48000c26 	beq	r9,zero,8489b0 <__ledf2+0xa0>
  848980:	0013883a 	mov	r9,zero
  848984:	39c03fcc 	andi	r7,r7,255
  848988:	48000826 	beq	r9,zero,8489ac <__ledf2+0x9c>
  84898c:	38001126 	beq	r7,zero,8489d4 <__ledf2+0xc4>
  848990:	00800044 	movi	r2,1
  848994:	f800283a 	ret
  848998:	30d2b03a 	or	r9,r6,r3
  84899c:	483fea26 	beq	r9,zero,848948 <__alt_mem_epcs_flash_controller_0+0xff83f948>
  8489a0:	00800084 	movi	r2,2
  8489a4:	f800283a 	ret
  8489a8:	39c03fcc 	andi	r7,r7,255
  8489ac:	39400726 	beq	r7,r5,8489cc <__ledf2+0xbc>
  8489b0:	2800081e 	bne	r5,zero,8489d4 <__ledf2+0xc4>
  8489b4:	00800044 	movi	r2,1
  8489b8:	f800283a 	ret
  8489bc:	2292b03a 	or	r9,r4,r10
  8489c0:	483fdf26 	beq	r9,zero,848940 <__alt_mem_epcs_flash_controller_0+0xff83f940>
  8489c4:	00800084 	movi	r2,2
  8489c8:	f800283a 	ret
  8489cc:	4080030e 	bge	r8,r2,8489dc <__ledf2+0xcc>
  8489d0:	383fef26 	beq	r7,zero,848990 <__alt_mem_epcs_flash_controller_0+0xff83f990>
  8489d4:	00bfffc4 	movi	r2,-1
  8489d8:	f800283a 	ret
  8489dc:	123feb16 	blt	r2,r8,84898c <__alt_mem_epcs_flash_controller_0+0xff83f98c>
  8489e0:	1abff336 	bltu	r3,r10,8489b0 <__alt_mem_epcs_flash_controller_0+0xff83f9b0>
  8489e4:	50c00326 	beq	r10,r3,8489f4 <__ledf2+0xe4>
  8489e8:	50c0042e 	bgeu	r10,r3,8489fc <__ledf2+0xec>
  8489ec:	283fe81e 	bne	r5,zero,848990 <__alt_mem_epcs_flash_controller_0+0xff83f990>
  8489f0:	003ff806 	br	8489d4 <__alt_mem_epcs_flash_controller_0+0xff83f9d4>
  8489f4:	313fee36 	bltu	r6,r4,8489b0 <__alt_mem_epcs_flash_controller_0+0xff83f9b0>
  8489f8:	21bffc36 	bltu	r4,r6,8489ec <__alt_mem_epcs_flash_controller_0+0xff83f9ec>
  8489fc:	0005883a 	mov	r2,zero
  848a00:	f800283a 	ret

00848a04 <__subdf3>:
  848a04:	02000434 	movhi	r8,16
  848a08:	423fffc4 	addi	r8,r8,-1
  848a0c:	defffb04 	addi	sp,sp,-20
  848a10:	2a14703a 	and	r10,r5,r8
  848a14:	3812d53a 	srli	r9,r7,20
  848a18:	3a10703a 	and	r8,r7,r8
  848a1c:	2006d77a 	srli	r3,r4,29
  848a20:	3004d77a 	srli	r2,r6,29
  848a24:	dc000015 	stw	r16,0(sp)
  848a28:	501490fa 	slli	r10,r10,3
  848a2c:	2820d53a 	srli	r16,r5,20
  848a30:	401090fa 	slli	r8,r8,3
  848a34:	dc800215 	stw	r18,8(sp)
  848a38:	dc400115 	stw	r17,4(sp)
  848a3c:	dfc00415 	stw	ra,16(sp)
  848a40:	202290fa 	slli	r17,r4,3
  848a44:	dcc00315 	stw	r19,12(sp)
  848a48:	4a41ffcc 	andi	r9,r9,2047
  848a4c:	0101ffc4 	movi	r4,2047
  848a50:	2824d7fa 	srli	r18,r5,31
  848a54:	8401ffcc 	andi	r16,r16,2047
  848a58:	50c6b03a 	or	r3,r10,r3
  848a5c:	380ed7fa 	srli	r7,r7,31
  848a60:	408ab03a 	or	r5,r8,r2
  848a64:	300c90fa 	slli	r6,r6,3
  848a68:	49009626 	beq	r9,r4,848cc4 <__subdf3+0x2c0>
  848a6c:	39c0005c 	xori	r7,r7,1
  848a70:	8245c83a 	sub	r2,r16,r9
  848a74:	3c807426 	beq	r7,r18,848c48 <__subdf3+0x244>
  848a78:	0080af0e 	bge	zero,r2,848d38 <__subdf3+0x334>
  848a7c:	48002a1e 	bne	r9,zero,848b28 <__subdf3+0x124>
  848a80:	2988b03a 	or	r4,r5,r6
  848a84:	20009a1e 	bne	r4,zero,848cf0 <__subdf3+0x2ec>
  848a88:	888001cc 	andi	r2,r17,7
  848a8c:	10000726 	beq	r2,zero,848aac <__subdf3+0xa8>
  848a90:	888003cc 	andi	r2,r17,15
  848a94:	01000104 	movi	r4,4
  848a98:	11000426 	beq	r2,r4,848aac <__subdf3+0xa8>
  848a9c:	890b883a 	add	r5,r17,r4
  848aa0:	2c63803a 	cmpltu	r17,r5,r17
  848aa4:	1c47883a 	add	r3,r3,r17
  848aa8:	2823883a 	mov	r17,r5
  848aac:	1880202c 	andhi	r2,r3,128
  848ab0:	10005926 	beq	r2,zero,848c18 <__subdf3+0x214>
  848ab4:	84000044 	addi	r16,r16,1
  848ab8:	0081ffc4 	movi	r2,2047
  848abc:	8080be26 	beq	r16,r2,848db8 <__subdf3+0x3b4>
  848ac0:	017fe034 	movhi	r5,65408
  848ac4:	297fffc4 	addi	r5,r5,-1
  848ac8:	1946703a 	and	r3,r3,r5
  848acc:	1804977a 	slli	r2,r3,29
  848ad0:	1806927a 	slli	r3,r3,9
  848ad4:	8822d0fa 	srli	r17,r17,3
  848ad8:	8401ffcc 	andi	r16,r16,2047
  848adc:	180ad33a 	srli	r5,r3,12
  848ae0:	9100004c 	andi	r4,r18,1
  848ae4:	1444b03a 	or	r2,r2,r17
  848ae8:	80c1ffcc 	andi	r3,r16,2047
  848aec:	1820953a 	slli	r16,r3,20
  848af0:	20c03fcc 	andi	r3,r4,255
  848af4:	180897fa 	slli	r4,r3,31
  848af8:	00c00434 	movhi	r3,16
  848afc:	18ffffc4 	addi	r3,r3,-1
  848b00:	28c6703a 	and	r3,r5,r3
  848b04:	1c06b03a 	or	r3,r3,r16
  848b08:	1906b03a 	or	r3,r3,r4
  848b0c:	dfc00417 	ldw	ra,16(sp)
  848b10:	dcc00317 	ldw	r19,12(sp)
  848b14:	dc800217 	ldw	r18,8(sp)
  848b18:	dc400117 	ldw	r17,4(sp)
  848b1c:	dc000017 	ldw	r16,0(sp)
  848b20:	dec00504 	addi	sp,sp,20
  848b24:	f800283a 	ret
  848b28:	0101ffc4 	movi	r4,2047
  848b2c:	813fd626 	beq	r16,r4,848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  848b30:	29402034 	orhi	r5,r5,128
  848b34:	01000e04 	movi	r4,56
  848b38:	2080a316 	blt	r4,r2,848dc8 <__subdf3+0x3c4>
  848b3c:	010007c4 	movi	r4,31
  848b40:	2080c616 	blt	r4,r2,848e5c <__subdf3+0x458>
  848b44:	01000804 	movi	r4,32
  848b48:	2089c83a 	sub	r4,r4,r2
  848b4c:	2910983a 	sll	r8,r5,r4
  848b50:	308ed83a 	srl	r7,r6,r2
  848b54:	3108983a 	sll	r4,r6,r4
  848b58:	2884d83a 	srl	r2,r5,r2
  848b5c:	41ccb03a 	or	r6,r8,r7
  848b60:	2008c03a 	cmpne	r4,r4,zero
  848b64:	310cb03a 	or	r6,r6,r4
  848b68:	898dc83a 	sub	r6,r17,r6
  848b6c:	89a3803a 	cmpltu	r17,r17,r6
  848b70:	1887c83a 	sub	r3,r3,r2
  848b74:	1c47c83a 	sub	r3,r3,r17
  848b78:	3023883a 	mov	r17,r6
  848b7c:	1880202c 	andhi	r2,r3,128
  848b80:	10002326 	beq	r2,zero,848c10 <__subdf3+0x20c>
  848b84:	04c02034 	movhi	r19,128
  848b88:	9cffffc4 	addi	r19,r19,-1
  848b8c:	1ce6703a 	and	r19,r3,r19
  848b90:	98007a26 	beq	r19,zero,848d7c <__subdf3+0x378>
  848b94:	9809883a 	mov	r4,r19
  848b98:	0831f580 	call	831f58 <__clzsi2>
  848b9c:	113ffe04 	addi	r4,r2,-8
  848ba0:	00c007c4 	movi	r3,31
  848ba4:	19007b16 	blt	r3,r4,848d94 <__subdf3+0x390>
  848ba8:	00800804 	movi	r2,32
  848bac:	1105c83a 	sub	r2,r2,r4
  848bb0:	8884d83a 	srl	r2,r17,r2
  848bb4:	9906983a 	sll	r3,r19,r4
  848bb8:	8922983a 	sll	r17,r17,r4
  848bbc:	10c4b03a 	or	r2,r2,r3
  848bc0:	24007816 	blt	r4,r16,848da4 <__subdf3+0x3a0>
  848bc4:	2421c83a 	sub	r16,r4,r16
  848bc8:	80c00044 	addi	r3,r16,1
  848bcc:	010007c4 	movi	r4,31
  848bd0:	20c09516 	blt	r4,r3,848e28 <__subdf3+0x424>
  848bd4:	01400804 	movi	r5,32
  848bd8:	28cbc83a 	sub	r5,r5,r3
  848bdc:	88c8d83a 	srl	r4,r17,r3
  848be0:	8962983a 	sll	r17,r17,r5
  848be4:	114a983a 	sll	r5,r2,r5
  848be8:	10c6d83a 	srl	r3,r2,r3
  848bec:	8804c03a 	cmpne	r2,r17,zero
  848bf0:	290ab03a 	or	r5,r5,r4
  848bf4:	28a2b03a 	or	r17,r5,r2
  848bf8:	0021883a 	mov	r16,zero
  848bfc:	003fa206 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  848c00:	2090b03a 	or	r8,r4,r2
  848c04:	40018e26 	beq	r8,zero,849240 <__subdf3+0x83c>
  848c08:	1007883a 	mov	r3,r2
  848c0c:	2023883a 	mov	r17,r4
  848c10:	888001cc 	andi	r2,r17,7
  848c14:	103f9e1e 	bne	r2,zero,848a90 <__alt_mem_epcs_flash_controller_0+0xff83fa90>
  848c18:	1804977a 	slli	r2,r3,29
  848c1c:	8822d0fa 	srli	r17,r17,3
  848c20:	1810d0fa 	srli	r8,r3,3
  848c24:	9100004c 	andi	r4,r18,1
  848c28:	1444b03a 	or	r2,r2,r17
  848c2c:	00c1ffc4 	movi	r3,2047
  848c30:	80c02826 	beq	r16,r3,848cd4 <__subdf3+0x2d0>
  848c34:	01400434 	movhi	r5,16
  848c38:	297fffc4 	addi	r5,r5,-1
  848c3c:	80e0703a 	and	r16,r16,r3
  848c40:	414a703a 	and	r5,r8,r5
  848c44:	003fa806 	br	848ae8 <__alt_mem_epcs_flash_controller_0+0xff83fae8>
  848c48:	0080630e 	bge	zero,r2,848dd8 <__subdf3+0x3d4>
  848c4c:	48003026 	beq	r9,zero,848d10 <__subdf3+0x30c>
  848c50:	0101ffc4 	movi	r4,2047
  848c54:	813f8c26 	beq	r16,r4,848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  848c58:	29402034 	orhi	r5,r5,128
  848c5c:	01000e04 	movi	r4,56
  848c60:	2080a90e 	bge	r4,r2,848f08 <__subdf3+0x504>
  848c64:	298cb03a 	or	r6,r5,r6
  848c68:	3012c03a 	cmpne	r9,r6,zero
  848c6c:	0005883a 	mov	r2,zero
  848c70:	4c53883a 	add	r9,r9,r17
  848c74:	4c63803a 	cmpltu	r17,r9,r17
  848c78:	10c7883a 	add	r3,r2,r3
  848c7c:	88c7883a 	add	r3,r17,r3
  848c80:	4823883a 	mov	r17,r9
  848c84:	1880202c 	andhi	r2,r3,128
  848c88:	1000d026 	beq	r2,zero,848fcc <__subdf3+0x5c8>
  848c8c:	84000044 	addi	r16,r16,1
  848c90:	0081ffc4 	movi	r2,2047
  848c94:	8080fe26 	beq	r16,r2,849090 <__subdf3+0x68c>
  848c98:	00bfe034 	movhi	r2,65408
  848c9c:	10bfffc4 	addi	r2,r2,-1
  848ca0:	1886703a 	and	r3,r3,r2
  848ca4:	880ad07a 	srli	r5,r17,1
  848ca8:	180497fa 	slli	r2,r3,31
  848cac:	8900004c 	andi	r4,r17,1
  848cb0:	2922b03a 	or	r17,r5,r4
  848cb4:	1806d07a 	srli	r3,r3,1
  848cb8:	1462b03a 	or	r17,r2,r17
  848cbc:	3825883a 	mov	r18,r7
  848cc0:	003f7106 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  848cc4:	2984b03a 	or	r2,r5,r6
  848cc8:	103f6826 	beq	r2,zero,848a6c <__alt_mem_epcs_flash_controller_0+0xff83fa6c>
  848ccc:	39c03fcc 	andi	r7,r7,255
  848cd0:	003f6706 	br	848a70 <__alt_mem_epcs_flash_controller_0+0xff83fa70>
  848cd4:	4086b03a 	or	r3,r8,r2
  848cd8:	18015226 	beq	r3,zero,849224 <__subdf3+0x820>
  848cdc:	00c00434 	movhi	r3,16
  848ce0:	41400234 	orhi	r5,r8,8
  848ce4:	18ffffc4 	addi	r3,r3,-1
  848ce8:	28ca703a 	and	r5,r5,r3
  848cec:	003f7e06 	br	848ae8 <__alt_mem_epcs_flash_controller_0+0xff83fae8>
  848cf0:	10bfffc4 	addi	r2,r2,-1
  848cf4:	1000491e 	bne	r2,zero,848e1c <__subdf3+0x418>
  848cf8:	898fc83a 	sub	r7,r17,r6
  848cfc:	89e3803a 	cmpltu	r17,r17,r7
  848d00:	1947c83a 	sub	r3,r3,r5
  848d04:	1c47c83a 	sub	r3,r3,r17
  848d08:	3823883a 	mov	r17,r7
  848d0c:	003f9b06 	br	848b7c <__alt_mem_epcs_flash_controller_0+0xff83fb7c>
  848d10:	2988b03a 	or	r4,r5,r6
  848d14:	203f5c26 	beq	r4,zero,848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  848d18:	10bfffc4 	addi	r2,r2,-1
  848d1c:	1000931e 	bne	r2,zero,848f6c <__subdf3+0x568>
  848d20:	898d883a 	add	r6,r17,r6
  848d24:	3463803a 	cmpltu	r17,r6,r17
  848d28:	1947883a 	add	r3,r3,r5
  848d2c:	88c7883a 	add	r3,r17,r3
  848d30:	3023883a 	mov	r17,r6
  848d34:	003fd306 	br	848c84 <__alt_mem_epcs_flash_controller_0+0xff83fc84>
  848d38:	1000541e 	bne	r2,zero,848e8c <__subdf3+0x488>
  848d3c:	80800044 	addi	r2,r16,1
  848d40:	1081ffcc 	andi	r2,r2,2047
  848d44:	01000044 	movi	r4,1
  848d48:	2080a20e 	bge	r4,r2,848fd4 <__subdf3+0x5d0>
  848d4c:	8989c83a 	sub	r4,r17,r6
  848d50:	8905803a 	cmpltu	r2,r17,r4
  848d54:	1967c83a 	sub	r19,r3,r5
  848d58:	98a7c83a 	sub	r19,r19,r2
  848d5c:	9880202c 	andhi	r2,r19,128
  848d60:	10006326 	beq	r2,zero,848ef0 <__subdf3+0x4ec>
  848d64:	3463c83a 	sub	r17,r6,r17
  848d68:	28c7c83a 	sub	r3,r5,r3
  848d6c:	344d803a 	cmpltu	r6,r6,r17
  848d70:	19a7c83a 	sub	r19,r3,r6
  848d74:	3825883a 	mov	r18,r7
  848d78:	983f861e 	bne	r19,zero,848b94 <__alt_mem_epcs_flash_controller_0+0xff83fb94>
  848d7c:	8809883a 	mov	r4,r17
  848d80:	0831f580 	call	831f58 <__clzsi2>
  848d84:	10800804 	addi	r2,r2,32
  848d88:	113ffe04 	addi	r4,r2,-8
  848d8c:	00c007c4 	movi	r3,31
  848d90:	193f850e 	bge	r3,r4,848ba8 <__alt_mem_epcs_flash_controller_0+0xff83fba8>
  848d94:	10bff604 	addi	r2,r2,-40
  848d98:	8884983a 	sll	r2,r17,r2
  848d9c:	0023883a 	mov	r17,zero
  848da0:	243f880e 	bge	r4,r16,848bc4 <__alt_mem_epcs_flash_controller_0+0xff83fbc4>
  848da4:	00ffe034 	movhi	r3,65408
  848da8:	18ffffc4 	addi	r3,r3,-1
  848dac:	8121c83a 	sub	r16,r16,r4
  848db0:	10c6703a 	and	r3,r2,r3
  848db4:	003f3406 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  848db8:	9100004c 	andi	r4,r18,1
  848dbc:	000b883a 	mov	r5,zero
  848dc0:	0005883a 	mov	r2,zero
  848dc4:	003f4806 	br	848ae8 <__alt_mem_epcs_flash_controller_0+0xff83fae8>
  848dc8:	298cb03a 	or	r6,r5,r6
  848dcc:	300cc03a 	cmpne	r6,r6,zero
  848dd0:	0005883a 	mov	r2,zero
  848dd4:	003f6406 	br	848b68 <__alt_mem_epcs_flash_controller_0+0xff83fb68>
  848dd8:	10009a1e 	bne	r2,zero,849044 <__subdf3+0x640>
  848ddc:	82400044 	addi	r9,r16,1
  848de0:	4881ffcc 	andi	r2,r9,2047
  848de4:	02800044 	movi	r10,1
  848de8:	5080670e 	bge	r10,r2,848f88 <__subdf3+0x584>
  848dec:	0081ffc4 	movi	r2,2047
  848df0:	4880af26 	beq	r9,r2,8490b0 <__subdf3+0x6ac>
  848df4:	898d883a 	add	r6,r17,r6
  848df8:	1945883a 	add	r2,r3,r5
  848dfc:	3447803a 	cmpltu	r3,r6,r17
  848e00:	1887883a 	add	r3,r3,r2
  848e04:	182297fa 	slli	r17,r3,31
  848e08:	300cd07a 	srli	r6,r6,1
  848e0c:	1806d07a 	srli	r3,r3,1
  848e10:	4821883a 	mov	r16,r9
  848e14:	89a2b03a 	or	r17,r17,r6
  848e18:	003f1b06 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  848e1c:	0101ffc4 	movi	r4,2047
  848e20:	813f441e 	bne	r16,r4,848b34 <__alt_mem_epcs_flash_controller_0+0xff83fb34>
  848e24:	003f1806 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  848e28:	843ff844 	addi	r16,r16,-31
  848e2c:	01400804 	movi	r5,32
  848e30:	1408d83a 	srl	r4,r2,r16
  848e34:	19405026 	beq	r3,r5,848f78 <__subdf3+0x574>
  848e38:	01401004 	movi	r5,64
  848e3c:	28c7c83a 	sub	r3,r5,r3
  848e40:	10c4983a 	sll	r2,r2,r3
  848e44:	88a2b03a 	or	r17,r17,r2
  848e48:	8822c03a 	cmpne	r17,r17,zero
  848e4c:	2462b03a 	or	r17,r4,r17
  848e50:	0007883a 	mov	r3,zero
  848e54:	0021883a 	mov	r16,zero
  848e58:	003f6d06 	br	848c10 <__alt_mem_epcs_flash_controller_0+0xff83fc10>
  848e5c:	11fff804 	addi	r7,r2,-32
  848e60:	01000804 	movi	r4,32
  848e64:	29ced83a 	srl	r7,r5,r7
  848e68:	11004526 	beq	r2,r4,848f80 <__subdf3+0x57c>
  848e6c:	01001004 	movi	r4,64
  848e70:	2089c83a 	sub	r4,r4,r2
  848e74:	2904983a 	sll	r2,r5,r4
  848e78:	118cb03a 	or	r6,r2,r6
  848e7c:	300cc03a 	cmpne	r6,r6,zero
  848e80:	398cb03a 	or	r6,r7,r6
  848e84:	0005883a 	mov	r2,zero
  848e88:	003f3706 	br	848b68 <__alt_mem_epcs_flash_controller_0+0xff83fb68>
  848e8c:	80002a26 	beq	r16,zero,848f38 <__subdf3+0x534>
  848e90:	0101ffc4 	movi	r4,2047
  848e94:	49006626 	beq	r9,r4,849030 <__subdf3+0x62c>
  848e98:	0085c83a 	sub	r2,zero,r2
  848e9c:	18c02034 	orhi	r3,r3,128
  848ea0:	01000e04 	movi	r4,56
  848ea4:	20807e16 	blt	r4,r2,8490a0 <__subdf3+0x69c>
  848ea8:	010007c4 	movi	r4,31
  848eac:	2080e716 	blt	r4,r2,84924c <__subdf3+0x848>
  848eb0:	01000804 	movi	r4,32
  848eb4:	2089c83a 	sub	r4,r4,r2
  848eb8:	1914983a 	sll	r10,r3,r4
  848ebc:	8890d83a 	srl	r8,r17,r2
  848ec0:	8908983a 	sll	r4,r17,r4
  848ec4:	1884d83a 	srl	r2,r3,r2
  848ec8:	5222b03a 	or	r17,r10,r8
  848ecc:	2006c03a 	cmpne	r3,r4,zero
  848ed0:	88e2b03a 	or	r17,r17,r3
  848ed4:	3463c83a 	sub	r17,r6,r17
  848ed8:	2885c83a 	sub	r2,r5,r2
  848edc:	344d803a 	cmpltu	r6,r6,r17
  848ee0:	1187c83a 	sub	r3,r2,r6
  848ee4:	4821883a 	mov	r16,r9
  848ee8:	3825883a 	mov	r18,r7
  848eec:	003f2306 	br	848b7c <__alt_mem_epcs_flash_controller_0+0xff83fb7c>
  848ef0:	24d0b03a 	or	r8,r4,r19
  848ef4:	40001b1e 	bne	r8,zero,848f64 <__subdf3+0x560>
  848ef8:	0005883a 	mov	r2,zero
  848efc:	0009883a 	mov	r4,zero
  848f00:	0021883a 	mov	r16,zero
  848f04:	003f4906 	br	848c2c <__alt_mem_epcs_flash_controller_0+0xff83fc2c>
  848f08:	010007c4 	movi	r4,31
  848f0c:	20803a16 	blt	r4,r2,848ff8 <__subdf3+0x5f4>
  848f10:	01000804 	movi	r4,32
  848f14:	2089c83a 	sub	r4,r4,r2
  848f18:	2912983a 	sll	r9,r5,r4
  848f1c:	3090d83a 	srl	r8,r6,r2
  848f20:	3108983a 	sll	r4,r6,r4
  848f24:	2884d83a 	srl	r2,r5,r2
  848f28:	4a12b03a 	or	r9,r9,r8
  848f2c:	2008c03a 	cmpne	r4,r4,zero
  848f30:	4912b03a 	or	r9,r9,r4
  848f34:	003f4e06 	br	848c70 <__alt_mem_epcs_flash_controller_0+0xff83fc70>
  848f38:	1c48b03a 	or	r4,r3,r17
  848f3c:	20003c26 	beq	r4,zero,849030 <__subdf3+0x62c>
  848f40:	0084303a 	nor	r2,zero,r2
  848f44:	1000381e 	bne	r2,zero,849028 <__subdf3+0x624>
  848f48:	3463c83a 	sub	r17,r6,r17
  848f4c:	28c5c83a 	sub	r2,r5,r3
  848f50:	344d803a 	cmpltu	r6,r6,r17
  848f54:	1187c83a 	sub	r3,r2,r6
  848f58:	4821883a 	mov	r16,r9
  848f5c:	3825883a 	mov	r18,r7
  848f60:	003f0606 	br	848b7c <__alt_mem_epcs_flash_controller_0+0xff83fb7c>
  848f64:	2023883a 	mov	r17,r4
  848f68:	003f0906 	br	848b90 <__alt_mem_epcs_flash_controller_0+0xff83fb90>
  848f6c:	0101ffc4 	movi	r4,2047
  848f70:	813f3a1e 	bne	r16,r4,848c5c <__alt_mem_epcs_flash_controller_0+0xff83fc5c>
  848f74:	003ec406 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  848f78:	0005883a 	mov	r2,zero
  848f7c:	003fb106 	br	848e44 <__alt_mem_epcs_flash_controller_0+0xff83fe44>
  848f80:	0005883a 	mov	r2,zero
  848f84:	003fbc06 	br	848e78 <__alt_mem_epcs_flash_controller_0+0xff83fe78>
  848f88:	1c44b03a 	or	r2,r3,r17
  848f8c:	80008e1e 	bne	r16,zero,8491c8 <__subdf3+0x7c4>
  848f90:	1000c826 	beq	r2,zero,8492b4 <__subdf3+0x8b0>
  848f94:	2984b03a 	or	r2,r5,r6
  848f98:	103ebb26 	beq	r2,zero,848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  848f9c:	8989883a 	add	r4,r17,r6
  848fa0:	1945883a 	add	r2,r3,r5
  848fa4:	2447803a 	cmpltu	r3,r4,r17
  848fa8:	1887883a 	add	r3,r3,r2
  848fac:	1880202c 	andhi	r2,r3,128
  848fb0:	2023883a 	mov	r17,r4
  848fb4:	103f1626 	beq	r2,zero,848c10 <__alt_mem_epcs_flash_controller_0+0xff83fc10>
  848fb8:	00bfe034 	movhi	r2,65408
  848fbc:	10bfffc4 	addi	r2,r2,-1
  848fc0:	5021883a 	mov	r16,r10
  848fc4:	1886703a 	and	r3,r3,r2
  848fc8:	003eaf06 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  848fcc:	3825883a 	mov	r18,r7
  848fd0:	003f0f06 	br	848c10 <__alt_mem_epcs_flash_controller_0+0xff83fc10>
  848fd4:	1c44b03a 	or	r2,r3,r17
  848fd8:	8000251e 	bne	r16,zero,849070 <__subdf3+0x66c>
  848fdc:	1000661e 	bne	r2,zero,849178 <__subdf3+0x774>
  848fe0:	2990b03a 	or	r8,r5,r6
  848fe4:	40009626 	beq	r8,zero,849240 <__subdf3+0x83c>
  848fe8:	2807883a 	mov	r3,r5
  848fec:	3023883a 	mov	r17,r6
  848ff0:	3825883a 	mov	r18,r7
  848ff4:	003ea406 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  848ff8:	127ff804 	addi	r9,r2,-32
  848ffc:	01000804 	movi	r4,32
  849000:	2a52d83a 	srl	r9,r5,r9
  849004:	11008c26 	beq	r2,r4,849238 <__subdf3+0x834>
  849008:	01001004 	movi	r4,64
  84900c:	2085c83a 	sub	r2,r4,r2
  849010:	2884983a 	sll	r2,r5,r2
  849014:	118cb03a 	or	r6,r2,r6
  849018:	300cc03a 	cmpne	r6,r6,zero
  84901c:	4992b03a 	or	r9,r9,r6
  849020:	0005883a 	mov	r2,zero
  849024:	003f1206 	br	848c70 <__alt_mem_epcs_flash_controller_0+0xff83fc70>
  849028:	0101ffc4 	movi	r4,2047
  84902c:	493f9c1e 	bne	r9,r4,848ea0 <__alt_mem_epcs_flash_controller_0+0xff83fea0>
  849030:	2807883a 	mov	r3,r5
  849034:	3023883a 	mov	r17,r6
  849038:	4821883a 	mov	r16,r9
  84903c:	3825883a 	mov	r18,r7
  849040:	003e9106 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  849044:	80001f1e 	bne	r16,zero,8490c4 <__subdf3+0x6c0>
  849048:	1c48b03a 	or	r4,r3,r17
  84904c:	20005a26 	beq	r4,zero,8491b8 <__subdf3+0x7b4>
  849050:	0084303a 	nor	r2,zero,r2
  849054:	1000561e 	bne	r2,zero,8491b0 <__subdf3+0x7ac>
  849058:	89a3883a 	add	r17,r17,r6
  84905c:	1945883a 	add	r2,r3,r5
  849060:	898d803a 	cmpltu	r6,r17,r6
  849064:	3087883a 	add	r3,r6,r2
  849068:	4821883a 	mov	r16,r9
  84906c:	003f0506 	br	848c84 <__alt_mem_epcs_flash_controller_0+0xff83fc84>
  849070:	10002b1e 	bne	r2,zero,849120 <__subdf3+0x71c>
  849074:	2984b03a 	or	r2,r5,r6
  849078:	10008026 	beq	r2,zero,84927c <__subdf3+0x878>
  84907c:	2807883a 	mov	r3,r5
  849080:	3023883a 	mov	r17,r6
  849084:	3825883a 	mov	r18,r7
  849088:	0401ffc4 	movi	r16,2047
  84908c:	003e7e06 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  849090:	3809883a 	mov	r4,r7
  849094:	0011883a 	mov	r8,zero
  849098:	0005883a 	mov	r2,zero
  84909c:	003ee306 	br	848c2c <__alt_mem_epcs_flash_controller_0+0xff83fc2c>
  8490a0:	1c62b03a 	or	r17,r3,r17
  8490a4:	8822c03a 	cmpne	r17,r17,zero
  8490a8:	0005883a 	mov	r2,zero
  8490ac:	003f8906 	br	848ed4 <__alt_mem_epcs_flash_controller_0+0xff83fed4>
  8490b0:	3809883a 	mov	r4,r7
  8490b4:	4821883a 	mov	r16,r9
  8490b8:	0011883a 	mov	r8,zero
  8490bc:	0005883a 	mov	r2,zero
  8490c0:	003eda06 	br	848c2c <__alt_mem_epcs_flash_controller_0+0xff83fc2c>
  8490c4:	0101ffc4 	movi	r4,2047
  8490c8:	49003b26 	beq	r9,r4,8491b8 <__subdf3+0x7b4>
  8490cc:	0085c83a 	sub	r2,zero,r2
  8490d0:	18c02034 	orhi	r3,r3,128
  8490d4:	01000e04 	movi	r4,56
  8490d8:	20806e16 	blt	r4,r2,849294 <__subdf3+0x890>
  8490dc:	010007c4 	movi	r4,31
  8490e0:	20807716 	blt	r4,r2,8492c0 <__subdf3+0x8bc>
  8490e4:	01000804 	movi	r4,32
  8490e8:	2089c83a 	sub	r4,r4,r2
  8490ec:	1914983a 	sll	r10,r3,r4
  8490f0:	8890d83a 	srl	r8,r17,r2
  8490f4:	8908983a 	sll	r4,r17,r4
  8490f8:	1884d83a 	srl	r2,r3,r2
  8490fc:	5222b03a 	or	r17,r10,r8
  849100:	2006c03a 	cmpne	r3,r4,zero
  849104:	88e2b03a 	or	r17,r17,r3
  849108:	89a3883a 	add	r17,r17,r6
  84910c:	1145883a 	add	r2,r2,r5
  849110:	898d803a 	cmpltu	r6,r17,r6
  849114:	3087883a 	add	r3,r6,r2
  849118:	4821883a 	mov	r16,r9
  84911c:	003ed906 	br	848c84 <__alt_mem_epcs_flash_controller_0+0xff83fc84>
  849120:	2984b03a 	or	r2,r5,r6
  849124:	10004226 	beq	r2,zero,849230 <__subdf3+0x82c>
  849128:	1808d0fa 	srli	r4,r3,3
  84912c:	8822d0fa 	srli	r17,r17,3
  849130:	1806977a 	slli	r3,r3,29
  849134:	2080022c 	andhi	r2,r4,8
  849138:	1c62b03a 	or	r17,r3,r17
  84913c:	10000826 	beq	r2,zero,849160 <__subdf3+0x75c>
  849140:	2812d0fa 	srli	r9,r5,3
  849144:	4880022c 	andhi	r2,r9,8
  849148:	1000051e 	bne	r2,zero,849160 <__subdf3+0x75c>
  84914c:	300cd0fa 	srli	r6,r6,3
  849150:	2804977a 	slli	r2,r5,29
  849154:	4809883a 	mov	r4,r9
  849158:	3825883a 	mov	r18,r7
  84915c:	11a2b03a 	or	r17,r2,r6
  849160:	8806d77a 	srli	r3,r17,29
  849164:	200890fa 	slli	r4,r4,3
  849168:	882290fa 	slli	r17,r17,3
  84916c:	0401ffc4 	movi	r16,2047
  849170:	1906b03a 	or	r3,r3,r4
  849174:	003e4406 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  849178:	2984b03a 	or	r2,r5,r6
  84917c:	103e4226 	beq	r2,zero,848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  849180:	8989c83a 	sub	r4,r17,r6
  849184:	8911803a 	cmpltu	r8,r17,r4
  849188:	1945c83a 	sub	r2,r3,r5
  84918c:	1205c83a 	sub	r2,r2,r8
  849190:	1200202c 	andhi	r8,r2,128
  849194:	403e9a26 	beq	r8,zero,848c00 <__alt_mem_epcs_flash_controller_0+0xff83fc00>
  849198:	3463c83a 	sub	r17,r6,r17
  84919c:	28c5c83a 	sub	r2,r5,r3
  8491a0:	344d803a 	cmpltu	r6,r6,r17
  8491a4:	1187c83a 	sub	r3,r2,r6
  8491a8:	3825883a 	mov	r18,r7
  8491ac:	003e3606 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  8491b0:	0101ffc4 	movi	r4,2047
  8491b4:	493fc71e 	bne	r9,r4,8490d4 <__alt_mem_epcs_flash_controller_0+0xff8400d4>
  8491b8:	2807883a 	mov	r3,r5
  8491bc:	3023883a 	mov	r17,r6
  8491c0:	4821883a 	mov	r16,r9
  8491c4:	003e3006 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  8491c8:	10003626 	beq	r2,zero,8492a4 <__subdf3+0x8a0>
  8491cc:	2984b03a 	or	r2,r5,r6
  8491d0:	10001726 	beq	r2,zero,849230 <__subdf3+0x82c>
  8491d4:	1808d0fa 	srli	r4,r3,3
  8491d8:	8822d0fa 	srli	r17,r17,3
  8491dc:	1806977a 	slli	r3,r3,29
  8491e0:	2080022c 	andhi	r2,r4,8
  8491e4:	1c62b03a 	or	r17,r3,r17
  8491e8:	10000726 	beq	r2,zero,849208 <__subdf3+0x804>
  8491ec:	2812d0fa 	srli	r9,r5,3
  8491f0:	4880022c 	andhi	r2,r9,8
  8491f4:	1000041e 	bne	r2,zero,849208 <__subdf3+0x804>
  8491f8:	300cd0fa 	srli	r6,r6,3
  8491fc:	2804977a 	slli	r2,r5,29
  849200:	4809883a 	mov	r4,r9
  849204:	11a2b03a 	or	r17,r2,r6
  849208:	8806d77a 	srli	r3,r17,29
  84920c:	200890fa 	slli	r4,r4,3
  849210:	882290fa 	slli	r17,r17,3
  849214:	3825883a 	mov	r18,r7
  849218:	1906b03a 	or	r3,r3,r4
  84921c:	0401ffc4 	movi	r16,2047
  849220:	003e1906 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  849224:	000b883a 	mov	r5,zero
  849228:	0005883a 	mov	r2,zero
  84922c:	003e2e06 	br	848ae8 <__alt_mem_epcs_flash_controller_0+0xff83fae8>
  849230:	0401ffc4 	movi	r16,2047
  849234:	003e1406 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  849238:	0005883a 	mov	r2,zero
  84923c:	003f7506 	br	849014 <__alt_mem_epcs_flash_controller_0+0xff840014>
  849240:	0005883a 	mov	r2,zero
  849244:	0009883a 	mov	r4,zero
  849248:	003e7806 	br	848c2c <__alt_mem_epcs_flash_controller_0+0xff83fc2c>
  84924c:	123ff804 	addi	r8,r2,-32
  849250:	01000804 	movi	r4,32
  849254:	1a10d83a 	srl	r8,r3,r8
  849258:	11002526 	beq	r2,r4,8492f0 <__subdf3+0x8ec>
  84925c:	01001004 	movi	r4,64
  849260:	2085c83a 	sub	r2,r4,r2
  849264:	1884983a 	sll	r2,r3,r2
  849268:	1444b03a 	or	r2,r2,r17
  84926c:	1004c03a 	cmpne	r2,r2,zero
  849270:	40a2b03a 	or	r17,r8,r2
  849274:	0005883a 	mov	r2,zero
  849278:	003f1606 	br	848ed4 <__alt_mem_epcs_flash_controller_0+0xff83fed4>
  84927c:	02000434 	movhi	r8,16
  849280:	0009883a 	mov	r4,zero
  849284:	423fffc4 	addi	r8,r8,-1
  849288:	00bfffc4 	movi	r2,-1
  84928c:	0401ffc4 	movi	r16,2047
  849290:	003e6606 	br	848c2c <__alt_mem_epcs_flash_controller_0+0xff83fc2c>
  849294:	1c62b03a 	or	r17,r3,r17
  849298:	8822c03a 	cmpne	r17,r17,zero
  84929c:	0005883a 	mov	r2,zero
  8492a0:	003f9906 	br	849108 <__alt_mem_epcs_flash_controller_0+0xff840108>
  8492a4:	2807883a 	mov	r3,r5
  8492a8:	3023883a 	mov	r17,r6
  8492ac:	0401ffc4 	movi	r16,2047
  8492b0:	003df506 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  8492b4:	2807883a 	mov	r3,r5
  8492b8:	3023883a 	mov	r17,r6
  8492bc:	003df206 	br	848a88 <__alt_mem_epcs_flash_controller_0+0xff83fa88>
  8492c0:	123ff804 	addi	r8,r2,-32
  8492c4:	01000804 	movi	r4,32
  8492c8:	1a10d83a 	srl	r8,r3,r8
  8492cc:	11000a26 	beq	r2,r4,8492f8 <__subdf3+0x8f4>
  8492d0:	01001004 	movi	r4,64
  8492d4:	2085c83a 	sub	r2,r4,r2
  8492d8:	1884983a 	sll	r2,r3,r2
  8492dc:	1444b03a 	or	r2,r2,r17
  8492e0:	1004c03a 	cmpne	r2,r2,zero
  8492e4:	40a2b03a 	or	r17,r8,r2
  8492e8:	0005883a 	mov	r2,zero
  8492ec:	003f8606 	br	849108 <__alt_mem_epcs_flash_controller_0+0xff840108>
  8492f0:	0005883a 	mov	r2,zero
  8492f4:	003fdc06 	br	849268 <__alt_mem_epcs_flash_controller_0+0xff840268>
  8492f8:	0005883a 	mov	r2,zero
  8492fc:	003ff706 	br	8492dc <__alt_mem_epcs_flash_controller_0+0xff8402dc>

00849300 <__fixdfsi>:
  849300:	280cd53a 	srli	r6,r5,20
  849304:	00c00434 	movhi	r3,16
  849308:	18ffffc4 	addi	r3,r3,-1
  84930c:	3181ffcc 	andi	r6,r6,2047
  849310:	01c0ff84 	movi	r7,1022
  849314:	28c6703a 	and	r3,r5,r3
  849318:	280ad7fa 	srli	r5,r5,31
  84931c:	3980120e 	bge	r7,r6,849368 <__fixdfsi+0x68>
  849320:	00810744 	movi	r2,1053
  849324:	11800c16 	blt	r2,r6,849358 <__fixdfsi+0x58>
  849328:	00810cc4 	movi	r2,1075
  84932c:	1185c83a 	sub	r2,r2,r6
  849330:	01c007c4 	movi	r7,31
  849334:	18c00434 	orhi	r3,r3,16
  849338:	38800d16 	blt	r7,r2,849370 <__fixdfsi+0x70>
  84933c:	31befb44 	addi	r6,r6,-1043
  849340:	2084d83a 	srl	r2,r4,r2
  849344:	1986983a 	sll	r3,r3,r6
  849348:	1884b03a 	or	r2,r3,r2
  84934c:	28000726 	beq	r5,zero,84936c <__fixdfsi+0x6c>
  849350:	0085c83a 	sub	r2,zero,r2
  849354:	f800283a 	ret
  849358:	00a00034 	movhi	r2,32768
  84935c:	10bfffc4 	addi	r2,r2,-1
  849360:	2885883a 	add	r2,r5,r2
  849364:	f800283a 	ret
  849368:	0005883a 	mov	r2,zero
  84936c:	f800283a 	ret
  849370:	008104c4 	movi	r2,1043
  849374:	1185c83a 	sub	r2,r2,r6
  849378:	1884d83a 	srl	r2,r3,r2
  84937c:	003ff306 	br	84934c <__alt_mem_epcs_flash_controller_0+0xff84034c>

00849380 <__floatsidf>:
  849380:	defffd04 	addi	sp,sp,-12
  849384:	dfc00215 	stw	ra,8(sp)
  849388:	dc400115 	stw	r17,4(sp)
  84938c:	dc000015 	stw	r16,0(sp)
  849390:	20002b26 	beq	r4,zero,849440 <__floatsidf+0xc0>
  849394:	2023883a 	mov	r17,r4
  849398:	2020d7fa 	srli	r16,r4,31
  84939c:	20002d16 	blt	r4,zero,849454 <__floatsidf+0xd4>
  8493a0:	8809883a 	mov	r4,r17
  8493a4:	0831f580 	call	831f58 <__clzsi2>
  8493a8:	01410784 	movi	r5,1054
  8493ac:	288bc83a 	sub	r5,r5,r2
  8493b0:	01010cc4 	movi	r4,1075
  8493b4:	2149c83a 	sub	r4,r4,r5
  8493b8:	00c007c4 	movi	r3,31
  8493bc:	1900160e 	bge	r3,r4,849418 <__floatsidf+0x98>
  8493c0:	00c104c4 	movi	r3,1043
  8493c4:	1947c83a 	sub	r3,r3,r5
  8493c8:	88c6983a 	sll	r3,r17,r3
  8493cc:	00800434 	movhi	r2,16
  8493d0:	10bfffc4 	addi	r2,r2,-1
  8493d4:	1886703a 	and	r3,r3,r2
  8493d8:	2941ffcc 	andi	r5,r5,2047
  8493dc:	800d883a 	mov	r6,r16
  8493e0:	0005883a 	mov	r2,zero
  8493e4:	280a953a 	slli	r5,r5,20
  8493e8:	31803fcc 	andi	r6,r6,255
  8493ec:	01000434 	movhi	r4,16
  8493f0:	300c97fa 	slli	r6,r6,31
  8493f4:	213fffc4 	addi	r4,r4,-1
  8493f8:	1906703a 	and	r3,r3,r4
  8493fc:	1946b03a 	or	r3,r3,r5
  849400:	1986b03a 	or	r3,r3,r6
  849404:	dfc00217 	ldw	ra,8(sp)
  849408:	dc400117 	ldw	r17,4(sp)
  84940c:	dc000017 	ldw	r16,0(sp)
  849410:	dec00304 	addi	sp,sp,12
  849414:	f800283a 	ret
  849418:	00c002c4 	movi	r3,11
  84941c:	1887c83a 	sub	r3,r3,r2
  849420:	88c6d83a 	srl	r3,r17,r3
  849424:	8904983a 	sll	r2,r17,r4
  849428:	01000434 	movhi	r4,16
  84942c:	213fffc4 	addi	r4,r4,-1
  849430:	2941ffcc 	andi	r5,r5,2047
  849434:	1906703a 	and	r3,r3,r4
  849438:	800d883a 	mov	r6,r16
  84943c:	003fe906 	br	8493e4 <__alt_mem_epcs_flash_controller_0+0xff8403e4>
  849440:	000d883a 	mov	r6,zero
  849444:	000b883a 	mov	r5,zero
  849448:	0007883a 	mov	r3,zero
  84944c:	0005883a 	mov	r2,zero
  849450:	003fe406 	br	8493e4 <__alt_mem_epcs_flash_controller_0+0xff8403e4>
  849454:	0123c83a 	sub	r17,zero,r4
  849458:	003fd106 	br	8493a0 <__alt_mem_epcs_flash_controller_0+0xff8403a0>

0084945c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  84945c:	defffe04 	addi	sp,sp,-8
  849460:	dfc00115 	stw	ra,4(sp)
  849464:	df000015 	stw	fp,0(sp)
  849468:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  84946c:	d0a04917 	ldw	r2,-32476(gp)
  849470:	10000326 	beq	r2,zero,849480 <alt_get_errno+0x24>
  849474:	d0a04917 	ldw	r2,-32476(gp)
  849478:	103ee83a 	callr	r2
  84947c:	00000106 	br	849484 <alt_get_errno+0x28>
  849480:	d0a09204 	addi	r2,gp,-32184
}
  849484:	e037883a 	mov	sp,fp
  849488:	dfc00117 	ldw	ra,4(sp)
  84948c:	df000017 	ldw	fp,0(sp)
  849490:	dec00204 	addi	sp,sp,8
  849494:	f800283a 	ret

00849498 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  849498:	defffb04 	addi	sp,sp,-20
  84949c:	dfc00415 	stw	ra,16(sp)
  8494a0:	df000315 	stw	fp,12(sp)
  8494a4:	df000304 	addi	fp,sp,12
  8494a8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  8494ac:	e0bfff17 	ldw	r2,-4(fp)
  8494b0:	10000816 	blt	r2,zero,8494d4 <close+0x3c>
  8494b4:	01400304 	movi	r5,12
  8494b8:	e13fff17 	ldw	r4,-4(fp)
  8494bc:	08305040 	call	830504 <__mulsi3>
  8494c0:	1007883a 	mov	r3,r2
  8494c4:	008021b4 	movhi	r2,134
  8494c8:	10a85a04 	addi	r2,r2,-24216
  8494cc:	1885883a 	add	r2,r3,r2
  8494d0:	00000106 	br	8494d8 <close+0x40>
  8494d4:	0005883a 	mov	r2,zero
  8494d8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  8494dc:	e0bffd17 	ldw	r2,-12(fp)
  8494e0:	10001926 	beq	r2,zero,849548 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  8494e4:	e0bffd17 	ldw	r2,-12(fp)
  8494e8:	10800017 	ldw	r2,0(r2)
  8494ec:	10800417 	ldw	r2,16(r2)
  8494f0:	10000626 	beq	r2,zero,84950c <close+0x74>
  8494f4:	e0bffd17 	ldw	r2,-12(fp)
  8494f8:	10800017 	ldw	r2,0(r2)
  8494fc:	10800417 	ldw	r2,16(r2)
  849500:	e13ffd17 	ldw	r4,-12(fp)
  849504:	103ee83a 	callr	r2
  849508:	00000106 	br	849510 <close+0x78>
  84950c:	0005883a 	mov	r2,zero
  849510:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  849514:	e13fff17 	ldw	r4,-4(fp)
  849518:	0849fe40 	call	849fe4 <alt_release_fd>
    if (rval < 0)
  84951c:	e0bffe17 	ldw	r2,-8(fp)
  849520:	1000070e 	bge	r2,zero,849540 <close+0xa8>
    {
      ALT_ERRNO = -rval;
  849524:	084945c0 	call	84945c <alt_get_errno>
  849528:	1007883a 	mov	r3,r2
  84952c:	e0bffe17 	ldw	r2,-8(fp)
  849530:	0085c83a 	sub	r2,zero,r2
  849534:	18800015 	stw	r2,0(r3)
      return -1;
  849538:	00bfffc4 	movi	r2,-1
  84953c:	00000706 	br	84955c <close+0xc4>
    }
    return 0;
  849540:	0005883a 	mov	r2,zero
  849544:	00000506 	br	84955c <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  849548:	084945c0 	call	84945c <alt_get_errno>
  84954c:	1007883a 	mov	r3,r2
  849550:	00801444 	movi	r2,81
  849554:	18800015 	stw	r2,0(r3)
    return -1;
  849558:	00bfffc4 	movi	r2,-1
  }
}
  84955c:	e037883a 	mov	sp,fp
  849560:	dfc00117 	ldw	ra,4(sp)
  849564:	df000017 	ldw	fp,0(sp)
  849568:	dec00204 	addi	sp,sp,8
  84956c:	f800283a 	ret

00849570 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  849570:	defffc04 	addi	sp,sp,-16
  849574:	df000315 	stw	fp,12(sp)
  849578:	df000304 	addi	fp,sp,12
  84957c:	e13ffd15 	stw	r4,-12(fp)
  849580:	e17ffe15 	stw	r5,-8(fp)
  849584:	e1bfff15 	stw	r6,-4(fp)
  return len;
  849588:	e0bfff17 	ldw	r2,-4(fp)
}
  84958c:	e037883a 	mov	sp,fp
  849590:	df000017 	ldw	fp,0(sp)
  849594:	dec00104 	addi	sp,sp,4
  849598:	f800283a 	ret

0084959c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  84959c:	defffd04 	addi	sp,sp,-12
  8495a0:	df000215 	stw	fp,8(sp)
  8495a4:	df000204 	addi	fp,sp,8
  8495a8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  8495ac:	d020a345 	stb	zero,-32115(gp)
  8495b0:	e0bfff17 	ldw	r2,-4(fp)
  8495b4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  8495b8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  8495bc:	10000226 	beq	r2,zero,8495c8 <_exit+0x2c>
    ALT_SIM_FAIL();
  8495c0:	002af070 	cmpltui	zero,zero,43969
  8495c4:	00000106 	br	8495cc <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  8495c8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  8495cc:	003fff06 	br	8495cc <__alt_mem_epcs_flash_controller_0+0xff8405cc>

008495d0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8495d0:	defffe04 	addi	sp,sp,-8
  8495d4:	dfc00115 	stw	ra,4(sp)
  8495d8:	df000015 	stw	fp,0(sp)
  8495dc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8495e0:	d0a04917 	ldw	r2,-32476(gp)
  8495e4:	10000326 	beq	r2,zero,8495f4 <alt_get_errno+0x24>
  8495e8:	d0a04917 	ldw	r2,-32476(gp)
  8495ec:	103ee83a 	callr	r2
  8495f0:	00000106 	br	8495f8 <alt_get_errno+0x28>
  8495f4:	d0a09204 	addi	r2,gp,-32184
}
  8495f8:	e037883a 	mov	sp,fp
  8495fc:	dfc00117 	ldw	ra,4(sp)
  849600:	df000017 	ldw	fp,0(sp)
  849604:	dec00204 	addi	sp,sp,8
  849608:	f800283a 	ret

0084960c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  84960c:	defffb04 	addi	sp,sp,-20
  849610:	dfc00415 	stw	ra,16(sp)
  849614:	df000315 	stw	fp,12(sp)
  849618:	df000304 	addi	fp,sp,12
  84961c:	e13ffe15 	stw	r4,-8(fp)
  849620:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  849624:	e0bffe17 	ldw	r2,-8(fp)
  849628:	10000816 	blt	r2,zero,84964c <fstat+0x40>
  84962c:	01400304 	movi	r5,12
  849630:	e13ffe17 	ldw	r4,-8(fp)
  849634:	08305040 	call	830504 <__mulsi3>
  849638:	1007883a 	mov	r3,r2
  84963c:	008021b4 	movhi	r2,134
  849640:	10a85a04 	addi	r2,r2,-24216
  849644:	1885883a 	add	r2,r3,r2
  849648:	00000106 	br	849650 <fstat+0x44>
  84964c:	0005883a 	mov	r2,zero
  849650:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  849654:	e0bffd17 	ldw	r2,-12(fp)
  849658:	10001026 	beq	r2,zero,84969c <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  84965c:	e0bffd17 	ldw	r2,-12(fp)
  849660:	10800017 	ldw	r2,0(r2)
  849664:	10800817 	ldw	r2,32(r2)
  849668:	10000726 	beq	r2,zero,849688 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
  84966c:	e0bffd17 	ldw	r2,-12(fp)
  849670:	10800017 	ldw	r2,0(r2)
  849674:	10800817 	ldw	r2,32(r2)
  849678:	e17fff17 	ldw	r5,-4(fp)
  84967c:	e13ffd17 	ldw	r4,-12(fp)
  849680:	103ee83a 	callr	r2
  849684:	00000a06 	br	8496b0 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  849688:	e0bfff17 	ldw	r2,-4(fp)
  84968c:	00c80004 	movi	r3,8192
  849690:	10c00115 	stw	r3,4(r2)
      return 0;
  849694:	0005883a 	mov	r2,zero
  849698:	00000506 	br	8496b0 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  84969c:	08495d00 	call	8495d0 <alt_get_errno>
  8496a0:	1007883a 	mov	r3,r2
  8496a4:	00801444 	movi	r2,81
  8496a8:	18800015 	stw	r2,0(r3)
    return -1;
  8496ac:	00bfffc4 	movi	r2,-1
  }
}
  8496b0:	e037883a 	mov	sp,fp
  8496b4:	dfc00117 	ldw	ra,4(sp)
  8496b8:	df000017 	ldw	fp,0(sp)
  8496bc:	dec00204 	addi	sp,sp,8
  8496c0:	f800283a 	ret

008496c4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  8496c4:	defff904 	addi	sp,sp,-28
  8496c8:	dfc00615 	stw	ra,24(sp)
  8496cc:	df000515 	stw	fp,20(sp)
  8496d0:	df000504 	addi	fp,sp,20
  8496d4:	e13ffc15 	stw	r4,-16(fp)
  8496d8:	e17ffd15 	stw	r5,-12(fp)
  8496dc:	e1bffe15 	stw	r6,-8(fp)
  8496e0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  8496e4:	e0800217 	ldw	r2,8(fp)
  8496e8:	d8800015 	stw	r2,0(sp)
  8496ec:	e1ffff17 	ldw	r7,-4(fp)
  8496f0:	e1bffe17 	ldw	r6,-8(fp)
  8496f4:	e17ffd17 	ldw	r5,-12(fp)
  8496f8:	e13ffc17 	ldw	r4,-16(fp)
  8496fc:	08498740 	call	849874 <alt_iic_isr_register>
}  
  849700:	e037883a 	mov	sp,fp
  849704:	dfc00117 	ldw	ra,4(sp)
  849708:	df000017 	ldw	fp,0(sp)
  84970c:	dec00204 	addi	sp,sp,8
  849710:	f800283a 	ret

00849714 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  849714:	defff904 	addi	sp,sp,-28
  849718:	df000615 	stw	fp,24(sp)
  84971c:	df000604 	addi	fp,sp,24
  849720:	e13ffe15 	stw	r4,-8(fp)
  849724:	e17fff15 	stw	r5,-4(fp)
  849728:	e0bfff17 	ldw	r2,-4(fp)
  84972c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  849730:	0005303a 	rdctl	r2,status
  849734:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  849738:	e0fffb17 	ldw	r3,-20(fp)
  84973c:	00bfff84 	movi	r2,-2
  849740:	1884703a 	and	r2,r3,r2
  849744:	1001703a 	wrctl	status,r2
  
  return context;
  849748:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  84974c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  849750:	00c00044 	movi	r3,1
  849754:	e0bffa17 	ldw	r2,-24(fp)
  849758:	1884983a 	sll	r2,r3,r2
  84975c:	1007883a 	mov	r3,r2
  849760:	d0a09b17 	ldw	r2,-32148(gp)
  849764:	1884b03a 	or	r2,r3,r2
  849768:	d0a09b15 	stw	r2,-32148(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  84976c:	d0a09b17 	ldw	r2,-32148(gp)
  849770:	100170fa 	wrctl	ienable,r2
  849774:	e0bffc17 	ldw	r2,-16(fp)
  849778:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84977c:	e0bffd17 	ldw	r2,-12(fp)
  849780:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  849784:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  849788:	0001883a 	nop
}
  84978c:	e037883a 	mov	sp,fp
  849790:	df000017 	ldw	fp,0(sp)
  849794:	dec00104 	addi	sp,sp,4
  849798:	f800283a 	ret

0084979c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  84979c:	defff904 	addi	sp,sp,-28
  8497a0:	df000615 	stw	fp,24(sp)
  8497a4:	df000604 	addi	fp,sp,24
  8497a8:	e13ffe15 	stw	r4,-8(fp)
  8497ac:	e17fff15 	stw	r5,-4(fp)
  8497b0:	e0bfff17 	ldw	r2,-4(fp)
  8497b4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8497b8:	0005303a 	rdctl	r2,status
  8497bc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8497c0:	e0fffb17 	ldw	r3,-20(fp)
  8497c4:	00bfff84 	movi	r2,-2
  8497c8:	1884703a 	and	r2,r3,r2
  8497cc:	1001703a 	wrctl	status,r2
  
  return context;
  8497d0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  8497d4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  8497d8:	00c00044 	movi	r3,1
  8497dc:	e0bffa17 	ldw	r2,-24(fp)
  8497e0:	1884983a 	sll	r2,r3,r2
  8497e4:	0084303a 	nor	r2,zero,r2
  8497e8:	1007883a 	mov	r3,r2
  8497ec:	d0a09b17 	ldw	r2,-32148(gp)
  8497f0:	1884703a 	and	r2,r3,r2
  8497f4:	d0a09b15 	stw	r2,-32148(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  8497f8:	d0a09b17 	ldw	r2,-32148(gp)
  8497fc:	100170fa 	wrctl	ienable,r2
  849800:	e0bffc17 	ldw	r2,-16(fp)
  849804:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  849808:	e0bffd17 	ldw	r2,-12(fp)
  84980c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  849810:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  849814:	0001883a 	nop
}
  849818:	e037883a 	mov	sp,fp
  84981c:	df000017 	ldw	fp,0(sp)
  849820:	dec00104 	addi	sp,sp,4
  849824:	f800283a 	ret

00849828 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  849828:	defffc04 	addi	sp,sp,-16
  84982c:	df000315 	stw	fp,12(sp)
  849830:	df000304 	addi	fp,sp,12
  849834:	e13ffe15 	stw	r4,-8(fp)
  849838:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  84983c:	000530fa 	rdctl	r2,ienable
  849840:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  849844:	00c00044 	movi	r3,1
  849848:	e0bfff17 	ldw	r2,-4(fp)
  84984c:	1884983a 	sll	r2,r3,r2
  849850:	1007883a 	mov	r3,r2
  849854:	e0bffd17 	ldw	r2,-12(fp)
  849858:	1884703a 	and	r2,r3,r2
  84985c:	1004c03a 	cmpne	r2,r2,zero
  849860:	10803fcc 	andi	r2,r2,255
}
  849864:	e037883a 	mov	sp,fp
  849868:	df000017 	ldw	fp,0(sp)
  84986c:	dec00104 	addi	sp,sp,4
  849870:	f800283a 	ret

00849874 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  849874:	defff504 	addi	sp,sp,-44
  849878:	dfc00a15 	stw	ra,40(sp)
  84987c:	df000915 	stw	fp,36(sp)
  849880:	df000904 	addi	fp,sp,36
  849884:	e13ffc15 	stw	r4,-16(fp)
  849888:	e17ffd15 	stw	r5,-12(fp)
  84988c:	e1bffe15 	stw	r6,-8(fp)
  849890:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  849894:	00bffa84 	movi	r2,-22
  849898:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  84989c:	e0bffd17 	ldw	r2,-12(fp)
  8498a0:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  8498a4:	e0bff817 	ldw	r2,-32(fp)
  8498a8:	10800808 	cmpgei	r2,r2,32
  8498ac:	1000271e 	bne	r2,zero,84994c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8498b0:	0005303a 	rdctl	r2,status
  8498b4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8498b8:	e0fffb17 	ldw	r3,-20(fp)
  8498bc:	00bfff84 	movi	r2,-2
  8498c0:	1884703a 	and	r2,r3,r2
  8498c4:	1001703a 	wrctl	status,r2
  
  return context;
  8498c8:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  8498cc:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  8498d0:	008021b4 	movhi	r2,134
  8498d4:	10884f04 	addi	r2,r2,8508
  8498d8:	e0fff817 	ldw	r3,-32(fp)
  8498dc:	180690fa 	slli	r3,r3,3
  8498e0:	10c5883a 	add	r2,r2,r3
  8498e4:	e0fffe17 	ldw	r3,-8(fp)
  8498e8:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  8498ec:	008021b4 	movhi	r2,134
  8498f0:	10884f04 	addi	r2,r2,8508
  8498f4:	e0fff817 	ldw	r3,-32(fp)
  8498f8:	180690fa 	slli	r3,r3,3
  8498fc:	10c5883a 	add	r2,r2,r3
  849900:	10800104 	addi	r2,r2,4
  849904:	e0ffff17 	ldw	r3,-4(fp)
  849908:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  84990c:	e0bffe17 	ldw	r2,-8(fp)
  849910:	10000526 	beq	r2,zero,849928 <alt_iic_isr_register+0xb4>
  849914:	e0bff817 	ldw	r2,-32(fp)
  849918:	100b883a 	mov	r5,r2
  84991c:	e13ffc17 	ldw	r4,-16(fp)
  849920:	08497140 	call	849714 <alt_ic_irq_enable>
  849924:	00000406 	br	849938 <alt_iic_isr_register+0xc4>
  849928:	e0bff817 	ldw	r2,-32(fp)
  84992c:	100b883a 	mov	r5,r2
  849930:	e13ffc17 	ldw	r4,-16(fp)
  849934:	084979c0 	call	84979c <alt_ic_irq_disable>
  849938:	e0bff715 	stw	r2,-36(fp)
  84993c:	e0bffa17 	ldw	r2,-24(fp)
  849940:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  849944:	e0bff917 	ldw	r2,-28(fp)
  849948:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  84994c:	e0bff717 	ldw	r2,-36(fp)
}
  849950:	e037883a 	mov	sp,fp
  849954:	dfc00117 	ldw	ra,4(sp)
  849958:	df000017 	ldw	fp,0(sp)
  84995c:	dec00204 	addi	sp,sp,8
  849960:	f800283a 	ret

00849964 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  849964:	defffe04 	addi	sp,sp,-8
  849968:	dfc00115 	stw	ra,4(sp)
  84996c:	df000015 	stw	fp,0(sp)
  849970:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  849974:	d0a04917 	ldw	r2,-32476(gp)
  849978:	10000326 	beq	r2,zero,849988 <alt_get_errno+0x24>
  84997c:	d0a04917 	ldw	r2,-32476(gp)
  849980:	103ee83a 	callr	r2
  849984:	00000106 	br	84998c <alt_get_errno+0x28>
  849988:	d0a09204 	addi	r2,gp,-32184
}
  84998c:	e037883a 	mov	sp,fp
  849990:	dfc00117 	ldw	ra,4(sp)
  849994:	df000017 	ldw	fp,0(sp)
  849998:	dec00204 	addi	sp,sp,8
  84999c:	f800283a 	ret

008499a0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  8499a0:	deffed04 	addi	sp,sp,-76
  8499a4:	dfc01215 	stw	ra,72(sp)
  8499a8:	df001115 	stw	fp,68(sp)
  8499ac:	df001104 	addi	fp,sp,68
  8499b0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  8499b4:	e0bfff17 	ldw	r2,-4(fp)
  8499b8:	10000816 	blt	r2,zero,8499dc <isatty+0x3c>
  8499bc:	01400304 	movi	r5,12
  8499c0:	e13fff17 	ldw	r4,-4(fp)
  8499c4:	08305040 	call	830504 <__mulsi3>
  8499c8:	1007883a 	mov	r3,r2
  8499cc:	008021b4 	movhi	r2,134
  8499d0:	10a85a04 	addi	r2,r2,-24216
  8499d4:	1885883a 	add	r2,r3,r2
  8499d8:	00000106 	br	8499e0 <isatty+0x40>
  8499dc:	0005883a 	mov	r2,zero
  8499e0:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  8499e4:	e0bfef17 	ldw	r2,-68(fp)
  8499e8:	10000e26 	beq	r2,zero,849a24 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  8499ec:	e0bfef17 	ldw	r2,-68(fp)
  8499f0:	10800017 	ldw	r2,0(r2)
  8499f4:	10800817 	ldw	r2,32(r2)
  8499f8:	1000021e 	bne	r2,zero,849a04 <isatty+0x64>
    {
      return 1;
  8499fc:	00800044 	movi	r2,1
  849a00:	00000d06 	br	849a38 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  849a04:	e0bff004 	addi	r2,fp,-64
  849a08:	100b883a 	mov	r5,r2
  849a0c:	e13fff17 	ldw	r4,-4(fp)
  849a10:	084960c0 	call	84960c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  849a14:	e0bff117 	ldw	r2,-60(fp)
  849a18:	10880020 	cmpeqi	r2,r2,8192
  849a1c:	10803fcc 	andi	r2,r2,255
  849a20:	00000506 	br	849a38 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  849a24:	08499640 	call	849964 <alt_get_errno>
  849a28:	1007883a 	mov	r3,r2
  849a2c:	00801444 	movi	r2,81
  849a30:	18800015 	stw	r2,0(r3)
    return 0;
  849a34:	0005883a 	mov	r2,zero
  }
}
  849a38:	e037883a 	mov	sp,fp
  849a3c:	dfc00117 	ldw	ra,4(sp)
  849a40:	df000017 	ldw	fp,0(sp)
  849a44:	dec00204 	addi	sp,sp,8
  849a48:	f800283a 	ret

00849a4c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  849a4c:	defffe04 	addi	sp,sp,-8
  849a50:	dfc00115 	stw	ra,4(sp)
  849a54:	df000015 	stw	fp,0(sp)
  849a58:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  849a5c:	d0a04917 	ldw	r2,-32476(gp)
  849a60:	10000326 	beq	r2,zero,849a70 <alt_get_errno+0x24>
  849a64:	d0a04917 	ldw	r2,-32476(gp)
  849a68:	103ee83a 	callr	r2
  849a6c:	00000106 	br	849a74 <alt_get_errno+0x28>
  849a70:	d0a09204 	addi	r2,gp,-32184
}
  849a74:	e037883a 	mov	sp,fp
  849a78:	dfc00117 	ldw	ra,4(sp)
  849a7c:	df000017 	ldw	fp,0(sp)
  849a80:	dec00204 	addi	sp,sp,8
  849a84:	f800283a 	ret

00849a88 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  849a88:	defff904 	addi	sp,sp,-28
  849a8c:	dfc00615 	stw	ra,24(sp)
  849a90:	df000515 	stw	fp,20(sp)
  849a94:	df000504 	addi	fp,sp,20
  849a98:	e13ffd15 	stw	r4,-12(fp)
  849a9c:	e17ffe15 	stw	r5,-8(fp)
  849aa0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  849aa4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  849aa8:	e0bffd17 	ldw	r2,-12(fp)
  849aac:	10000816 	blt	r2,zero,849ad0 <lseek+0x48>
  849ab0:	01400304 	movi	r5,12
  849ab4:	e13ffd17 	ldw	r4,-12(fp)
  849ab8:	08305040 	call	830504 <__mulsi3>
  849abc:	1007883a 	mov	r3,r2
  849ac0:	008021b4 	movhi	r2,134
  849ac4:	10a85a04 	addi	r2,r2,-24216
  849ac8:	1885883a 	add	r2,r3,r2
  849acc:	00000106 	br	849ad4 <lseek+0x4c>
  849ad0:	0005883a 	mov	r2,zero
  849ad4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  849ad8:	e0bffc17 	ldw	r2,-16(fp)
  849adc:	10001026 	beq	r2,zero,849b20 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  849ae0:	e0bffc17 	ldw	r2,-16(fp)
  849ae4:	10800017 	ldw	r2,0(r2)
  849ae8:	10800717 	ldw	r2,28(r2)
  849aec:	10000926 	beq	r2,zero,849b14 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  849af0:	e0bffc17 	ldw	r2,-16(fp)
  849af4:	10800017 	ldw	r2,0(r2)
  849af8:	10800717 	ldw	r2,28(r2)
  849afc:	e1bfff17 	ldw	r6,-4(fp)
  849b00:	e17ffe17 	ldw	r5,-8(fp)
  849b04:	e13ffc17 	ldw	r4,-16(fp)
  849b08:	103ee83a 	callr	r2
  849b0c:	e0bffb15 	stw	r2,-20(fp)
  849b10:	00000506 	br	849b28 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  849b14:	00bfde84 	movi	r2,-134
  849b18:	e0bffb15 	stw	r2,-20(fp)
  849b1c:	00000206 	br	849b28 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
  849b20:	00bfebc4 	movi	r2,-81
  849b24:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  849b28:	e0bffb17 	ldw	r2,-20(fp)
  849b2c:	1000070e 	bge	r2,zero,849b4c <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
  849b30:	0849a4c0 	call	849a4c <alt_get_errno>
  849b34:	1007883a 	mov	r3,r2
  849b38:	e0bffb17 	ldw	r2,-20(fp)
  849b3c:	0085c83a 	sub	r2,zero,r2
  849b40:	18800015 	stw	r2,0(r3)
    rc = -1;
  849b44:	00bfffc4 	movi	r2,-1
  849b48:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  849b4c:	e0bffb17 	ldw	r2,-20(fp)
}
  849b50:	e037883a 	mov	sp,fp
  849b54:	dfc00117 	ldw	ra,4(sp)
  849b58:	df000017 	ldw	fp,0(sp)
  849b5c:	dec00204 	addi	sp,sp,8
  849b60:	f800283a 	ret

00849b64 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  849b64:	defff904 	addi	sp,sp,-28
  849b68:	dfc00615 	stw	ra,24(sp)
  849b6c:	df000515 	stw	fp,20(sp)
  849b70:	df000504 	addi	fp,sp,20
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  849b74:	0009883a 	mov	r4,zero
  849b78:	0851e440 	call	851e44 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  849b7c:	084ae880 	call	84ae88 <OSInit>
  849b80:	01000044 	movi	r4,1
  849b84:	084f7e40 	call	84f7e4 <OSSemCreate>
  849b88:	d0a0a015 	stw	r2,-32128(gp)
  849b8c:	01000044 	movi	r4,1
  849b90:	084f7e40 	call	84f7e4 <OSSemCreate>
  849b94:	d0a0a215 	stw	r2,-32120(gp)
  849b98:	d0a09a04 	addi	r2,gp,-32152
  849b9c:	e0bffc15 	stw	r2,-16(fp)
  849ba0:	00800044 	movi	r2,1
  849ba4:	e0bffd0d 	sth	r2,-12(fp)
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_create (OS_EVENT** sem, 
              INT16U value)
{
  *sem = OSSemCreate (value);
  849ba8:	e0bffd0b 	ldhu	r2,-12(fp)
  849bac:	1009883a 	mov	r4,r2
  849bb0:	084f7e40 	call	84f7e4 <OSSemCreate>
  849bb4:	1007883a 	mov	r3,r2
  849bb8:	e0bffc17 	ldw	r2,-16(fp)
  849bbc:	10c00015 	stw	r3,0(r2)
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  849bc0:	0851e7c0 	call	851e7c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  849bc4:	018021b4 	movhi	r6,134
  849bc8:	31a5c104 	addi	r6,r6,-26876
  849bcc:	014021b4 	movhi	r5,134
  849bd0:	2965c104 	addi	r5,r5,-26876
  849bd4:	010021b4 	movhi	r4,134
  849bd8:	2125c104 	addi	r4,r4,-26876
  849bdc:	08562740 	call	856274 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  849be0:	0855c6c0 	call	855c6c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  849be4:	01002174 	movhi	r4,133
  849be8:	21173304 	addi	r4,r4,23756
  849bec:	0856a0c0 	call	856a0c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  849bf0:	d0a09c17 	ldw	r2,-32144(gp)
  849bf4:	d0e09d17 	ldw	r3,-32140(gp)
  849bf8:	d1209e17 	ldw	r4,-32136(gp)
  849bfc:	200d883a 	mov	r6,r4
  849c00:	180b883a 	mov	r5,r3
  849c04:	1009883a 	mov	r4,r2
  849c08:	08018d80 	call	8018d8 <main>
  849c0c:	e0bffb15 	stw	r2,-20(fp)
  close(STDOUT_FILENO);
  849c10:	01000044 	movi	r4,1
  849c14:	08494980 	call	849498 <close>
  exit (result);
  849c18:	e13ffb17 	ldw	r4,-20(fp)
  849c1c:	08320080 	call	832008 <exit>

00849c20 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  849c20:	defffe04 	addi	sp,sp,-8
  849c24:	dfc00115 	stw	ra,4(sp)
  849c28:	df000015 	stw	fp,0(sp)
  849c2c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  849c30:	d0a04917 	ldw	r2,-32476(gp)
  849c34:	10000326 	beq	r2,zero,849c44 <alt_get_errno+0x24>
  849c38:	d0a04917 	ldw	r2,-32476(gp)
  849c3c:	103ee83a 	callr	r2
  849c40:	00000106 	br	849c48 <alt_get_errno+0x28>
  849c44:	d0a09204 	addi	r2,gp,-32184
}
  849c48:	e037883a 	mov	sp,fp
  849c4c:	dfc00117 	ldw	ra,4(sp)
  849c50:	df000017 	ldw	fp,0(sp)
  849c54:	dec00204 	addi	sp,sp,8
  849c58:	f800283a 	ret

00849c5c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  849c5c:	defffb04 	addi	sp,sp,-20
  849c60:	dfc00415 	stw	ra,16(sp)
  849c64:	df000315 	stw	fp,12(sp)
  849c68:	dc000215 	stw	r16,8(sp)
  849c6c:	df000304 	addi	fp,sp,12
  849c70:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  849c74:	e0bffe17 	ldw	r2,-8(fp)
  849c78:	10800217 	ldw	r2,8(r2)
  849c7c:	10d00034 	orhi	r3,r2,16384
  849c80:	e0bffe17 	ldw	r2,-8(fp)
  849c84:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  849c88:	e03ffd15 	stw	zero,-12(fp)
  849c8c:	00002306 	br	849d1c <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  849c90:	040021b4 	movhi	r16,134
  849c94:	84285a04 	addi	r16,r16,-24216
  849c98:	e0bffd17 	ldw	r2,-12(fp)
  849c9c:	01400304 	movi	r5,12
  849ca0:	1009883a 	mov	r4,r2
  849ca4:	08305040 	call	830504 <__mulsi3>
  849ca8:	8085883a 	add	r2,r16,r2
  849cac:	10c00017 	ldw	r3,0(r2)
  849cb0:	e0bffe17 	ldw	r2,-8(fp)
  849cb4:	10800017 	ldw	r2,0(r2)
  849cb8:	1880151e 	bne	r3,r2,849d10 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  849cbc:	040021b4 	movhi	r16,134
  849cc0:	84285a04 	addi	r16,r16,-24216
  849cc4:	e0bffd17 	ldw	r2,-12(fp)
  849cc8:	01400304 	movi	r5,12
  849ccc:	1009883a 	mov	r4,r2
  849cd0:	08305040 	call	830504 <__mulsi3>
  849cd4:	8085883a 	add	r2,r16,r2
  849cd8:	10800204 	addi	r2,r2,8
  849cdc:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  849ce0:	10000b0e 	bge	r2,zero,849d10 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  849ce4:	01400304 	movi	r5,12
  849ce8:	e13ffd17 	ldw	r4,-12(fp)
  849cec:	08305040 	call	830504 <__mulsi3>
  849cf0:	1007883a 	mov	r3,r2
  849cf4:	008021b4 	movhi	r2,134
  849cf8:	10a85a04 	addi	r2,r2,-24216
  849cfc:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  849d00:	e0bffe17 	ldw	r2,-8(fp)
  849d04:	18800226 	beq	r3,r2,849d10 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  849d08:	00bffcc4 	movi	r2,-13
  849d0c:	00000806 	br	849d30 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  849d10:	e0bffd17 	ldw	r2,-12(fp)
  849d14:	10800044 	addi	r2,r2,1
  849d18:	e0bffd15 	stw	r2,-12(fp)
  849d1c:	d0a04817 	ldw	r2,-32480(gp)
  849d20:	1007883a 	mov	r3,r2
  849d24:	e0bffd17 	ldw	r2,-12(fp)
  849d28:	18bfd92e 	bgeu	r3,r2,849c90 <__alt_mem_epcs_flash_controller_0+0xff840c90>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  849d2c:	0005883a 	mov	r2,zero
}
  849d30:	e6ffff04 	addi	sp,fp,-4
  849d34:	dfc00217 	ldw	ra,8(sp)
  849d38:	df000117 	ldw	fp,4(sp)
  849d3c:	dc000017 	ldw	r16,0(sp)
  849d40:	dec00304 	addi	sp,sp,12
  849d44:	f800283a 	ret

00849d48 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  849d48:	defff604 	addi	sp,sp,-40
  849d4c:	dfc00915 	stw	ra,36(sp)
  849d50:	df000815 	stw	fp,32(sp)
  849d54:	df000804 	addi	fp,sp,32
  849d58:	e13ffd15 	stw	r4,-12(fp)
  849d5c:	e17ffe15 	stw	r5,-8(fp)
  849d60:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  849d64:	00bfffc4 	movi	r2,-1
  849d68:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  849d6c:	00bffb44 	movi	r2,-19
  849d70:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  849d74:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  849d78:	d1604604 	addi	r5,gp,-32488
  849d7c:	e13ffd17 	ldw	r4,-12(fp)
  849d80:	0855d2c0 	call	855d2c <alt_find_dev>
  849d84:	e0bff815 	stw	r2,-32(fp)
  849d88:	e0bff817 	ldw	r2,-32(fp)
  849d8c:	1000051e 	bne	r2,zero,849da4 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  849d90:	e13ffd17 	ldw	r4,-12(fp)
  849d94:	0855dbc0 	call	855dbc <alt_find_file>
  849d98:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  849d9c:	00800044 	movi	r2,1
  849da0:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  849da4:	e0bff817 	ldw	r2,-32(fp)
  849da8:	10002b26 	beq	r2,zero,849e58 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
  849dac:	e13ff817 	ldw	r4,-32(fp)
  849db0:	08560000 	call	856000 <alt_get_fd>
  849db4:	e0bff915 	stw	r2,-28(fp)
  849db8:	e0bff917 	ldw	r2,-28(fp)
  849dbc:	1000030e 	bge	r2,zero,849dcc <open+0x84>
    {
      status = index;
  849dc0:	e0bff917 	ldw	r2,-28(fp)
  849dc4:	e0bffa15 	stw	r2,-24(fp)
  849dc8:	00002506 	br	849e60 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
  849dcc:	01400304 	movi	r5,12
  849dd0:	e13ff917 	ldw	r4,-28(fp)
  849dd4:	08305040 	call	830504 <__mulsi3>
  849dd8:	1007883a 	mov	r3,r2
  849ddc:	008021b4 	movhi	r2,134
  849de0:	10a85a04 	addi	r2,r2,-24216
  849de4:	1885883a 	add	r2,r3,r2
  849de8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  849dec:	e0fffe17 	ldw	r3,-8(fp)
  849df0:	00900034 	movhi	r2,16384
  849df4:	10bfffc4 	addi	r2,r2,-1
  849df8:	1886703a 	and	r3,r3,r2
  849dfc:	e0bffc17 	ldw	r2,-16(fp)
  849e00:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  849e04:	e0bffb17 	ldw	r2,-20(fp)
  849e08:	1000051e 	bne	r2,zero,849e20 <open+0xd8>
  849e0c:	e13ffc17 	ldw	r4,-16(fp)
  849e10:	0849c5c0 	call	849c5c <alt_file_locked>
  849e14:	e0bffa15 	stw	r2,-24(fp)
  849e18:	e0bffa17 	ldw	r2,-24(fp)
  849e1c:	10001016 	blt	r2,zero,849e60 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  849e20:	e0bff817 	ldw	r2,-32(fp)
  849e24:	10800317 	ldw	r2,12(r2)
  849e28:	10000826 	beq	r2,zero,849e4c <open+0x104>
  849e2c:	e0bff817 	ldw	r2,-32(fp)
  849e30:	10800317 	ldw	r2,12(r2)
  849e34:	e1ffff17 	ldw	r7,-4(fp)
  849e38:	e1bffe17 	ldw	r6,-8(fp)
  849e3c:	e17ffd17 	ldw	r5,-12(fp)
  849e40:	e13ffc17 	ldw	r4,-16(fp)
  849e44:	103ee83a 	callr	r2
  849e48:	00000106 	br	849e50 <open+0x108>
  849e4c:	0005883a 	mov	r2,zero
  849e50:	e0bffa15 	stw	r2,-24(fp)
  849e54:	00000206 	br	849e60 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
  849e58:	00bffb44 	movi	r2,-19
  849e5c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  849e60:	e0bffa17 	ldw	r2,-24(fp)
  849e64:	1000090e 	bge	r2,zero,849e8c <open+0x144>
  {
    alt_release_fd (index);  
  849e68:	e13ff917 	ldw	r4,-28(fp)
  849e6c:	0849fe40 	call	849fe4 <alt_release_fd>
    ALT_ERRNO = -status;
  849e70:	0849c200 	call	849c20 <alt_get_errno>
  849e74:	1007883a 	mov	r3,r2
  849e78:	e0bffa17 	ldw	r2,-24(fp)
  849e7c:	0085c83a 	sub	r2,zero,r2
  849e80:	18800015 	stw	r2,0(r3)
    return -1;
  849e84:	00bfffc4 	movi	r2,-1
  849e88:	00000106 	br	849e90 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
  849e8c:	e0bff917 	ldw	r2,-28(fp)
}
  849e90:	e037883a 	mov	sp,fp
  849e94:	dfc00117 	ldw	ra,4(sp)
  849e98:	df000017 	ldw	fp,0(sp)
  849e9c:	dec00204 	addi	sp,sp,8
  849ea0:	f800283a 	ret

00849ea4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  849ea4:	defffe04 	addi	sp,sp,-8
  849ea8:	dfc00115 	stw	ra,4(sp)
  849eac:	df000015 	stw	fp,0(sp)
  849eb0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  849eb4:	d0a04917 	ldw	r2,-32476(gp)
  849eb8:	10000326 	beq	r2,zero,849ec8 <alt_get_errno+0x24>
  849ebc:	d0a04917 	ldw	r2,-32476(gp)
  849ec0:	103ee83a 	callr	r2
  849ec4:	00000106 	br	849ecc <alt_get_errno+0x28>
  849ec8:	d0a09204 	addi	r2,gp,-32184
}
  849ecc:	e037883a 	mov	sp,fp
  849ed0:	dfc00117 	ldw	ra,4(sp)
  849ed4:	df000017 	ldw	fp,0(sp)
  849ed8:	dec00204 	addi	sp,sp,8
  849edc:	f800283a 	ret

00849ee0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  849ee0:	defff904 	addi	sp,sp,-28
  849ee4:	dfc00615 	stw	ra,24(sp)
  849ee8:	df000515 	stw	fp,20(sp)
  849eec:	df000504 	addi	fp,sp,20
  849ef0:	e13ffd15 	stw	r4,-12(fp)
  849ef4:	e17ffe15 	stw	r5,-8(fp)
  849ef8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  849efc:	e0bffd17 	ldw	r2,-12(fp)
  849f00:	10000816 	blt	r2,zero,849f24 <read+0x44>
  849f04:	01400304 	movi	r5,12
  849f08:	e13ffd17 	ldw	r4,-12(fp)
  849f0c:	08305040 	call	830504 <__mulsi3>
  849f10:	1007883a 	mov	r3,r2
  849f14:	008021b4 	movhi	r2,134
  849f18:	10a85a04 	addi	r2,r2,-24216
  849f1c:	1885883a 	add	r2,r3,r2
  849f20:	00000106 	br	849f28 <read+0x48>
  849f24:	0005883a 	mov	r2,zero
  849f28:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  849f2c:	e0bffb17 	ldw	r2,-20(fp)
  849f30:	10002226 	beq	r2,zero,849fbc <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  849f34:	e0bffb17 	ldw	r2,-20(fp)
  849f38:	10800217 	ldw	r2,8(r2)
  849f3c:	108000cc 	andi	r2,r2,3
  849f40:	10800060 	cmpeqi	r2,r2,1
  849f44:	1000181e 	bne	r2,zero,849fa8 <read+0xc8>
        (fd->dev->read))
  849f48:	e0bffb17 	ldw	r2,-20(fp)
  849f4c:	10800017 	ldw	r2,0(r2)
  849f50:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  849f54:	10001426 	beq	r2,zero,849fa8 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  849f58:	e0bffb17 	ldw	r2,-20(fp)
  849f5c:	10800017 	ldw	r2,0(r2)
  849f60:	10800517 	ldw	r2,20(r2)
  849f64:	e0ffff17 	ldw	r3,-4(fp)
  849f68:	180d883a 	mov	r6,r3
  849f6c:	e17ffe17 	ldw	r5,-8(fp)
  849f70:	e13ffb17 	ldw	r4,-20(fp)
  849f74:	103ee83a 	callr	r2
  849f78:	e0bffc15 	stw	r2,-16(fp)
  849f7c:	e0bffc17 	ldw	r2,-16(fp)
  849f80:	1000070e 	bge	r2,zero,849fa0 <read+0xc0>
        {
          ALT_ERRNO = -rval;
  849f84:	0849ea40 	call	849ea4 <alt_get_errno>
  849f88:	1007883a 	mov	r3,r2
  849f8c:	e0bffc17 	ldw	r2,-16(fp)
  849f90:	0085c83a 	sub	r2,zero,r2
  849f94:	18800015 	stw	r2,0(r3)
          return -1;
  849f98:	00bfffc4 	movi	r2,-1
  849f9c:	00000c06 	br	849fd0 <read+0xf0>
        }
        return rval;
  849fa0:	e0bffc17 	ldw	r2,-16(fp)
  849fa4:	00000a06 	br	849fd0 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
  849fa8:	0849ea40 	call	849ea4 <alt_get_errno>
  849fac:	1007883a 	mov	r3,r2
  849fb0:	00800344 	movi	r2,13
  849fb4:	18800015 	stw	r2,0(r3)
  849fb8:	00000406 	br	849fcc <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  849fbc:	0849ea40 	call	849ea4 <alt_get_errno>
  849fc0:	1007883a 	mov	r3,r2
  849fc4:	00801444 	movi	r2,81
  849fc8:	18800015 	stw	r2,0(r3)
  }
  return -1;
  849fcc:	00bfffc4 	movi	r2,-1
}
  849fd0:	e037883a 	mov	sp,fp
  849fd4:	dfc00117 	ldw	ra,4(sp)
  849fd8:	df000017 	ldw	fp,0(sp)
  849fdc:	dec00204 	addi	sp,sp,8
  849fe0:	f800283a 	ret

00849fe4 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  849fe4:	defffc04 	addi	sp,sp,-16
  849fe8:	dfc00315 	stw	ra,12(sp)
  849fec:	df000215 	stw	fp,8(sp)
  849ff0:	dc000115 	stw	r16,4(sp)
  849ff4:	df000204 	addi	fp,sp,8
  849ff8:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
  849ffc:	e0bffe17 	ldw	r2,-8(fp)
  84a000:	108000d0 	cmplti	r2,r2,3
  84a004:	1000111e 	bne	r2,zero,84a04c <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
  84a008:	040021b4 	movhi	r16,134
  84a00c:	84285a04 	addi	r16,r16,-24216
  84a010:	e0bffe17 	ldw	r2,-8(fp)
  84a014:	01400304 	movi	r5,12
  84a018:	1009883a 	mov	r4,r2
  84a01c:	08305040 	call	830504 <__mulsi3>
  84a020:	8085883a 	add	r2,r16,r2
  84a024:	10800204 	addi	r2,r2,8
  84a028:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  84a02c:	040021b4 	movhi	r16,134
  84a030:	84285a04 	addi	r16,r16,-24216
  84a034:	e0bffe17 	ldw	r2,-8(fp)
  84a038:	01400304 	movi	r5,12
  84a03c:	1009883a 	mov	r4,r2
  84a040:	08305040 	call	830504 <__mulsi3>
  84a044:	8085883a 	add	r2,r16,r2
  84a048:	10000015 	stw	zero,0(r2)
  }
}
  84a04c:	0001883a 	nop
  84a050:	e6ffff04 	addi	sp,fp,-4
  84a054:	dfc00217 	ldw	ra,8(sp)
  84a058:	df000117 	ldw	fp,4(sp)
  84a05c:	dc000017 	ldw	r16,0(sp)
  84a060:	dec00304 	addi	sp,sp,12
  84a064:	f800283a 	ret

0084a068 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  84a068:	defff904 	addi	sp,sp,-28
  84a06c:	df000615 	stw	fp,24(sp)
  84a070:	df000604 	addi	fp,sp,24
  84a074:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84a078:	0005303a 	rdctl	r2,status
  84a07c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84a080:	e0fffe17 	ldw	r3,-8(fp)
  84a084:	00bfff84 	movi	r2,-2
  84a088:	1884703a 	and	r2,r3,r2
  84a08c:	1001703a 	wrctl	status,r2
  
  return context;
  84a090:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  84a094:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  84a098:	d0a04b17 	ldw	r2,-32468(gp)
  84a09c:	10c000c4 	addi	r3,r2,3
  84a0a0:	00bfff04 	movi	r2,-4
  84a0a4:	1884703a 	and	r2,r3,r2
  84a0a8:	d0a04b15 	stw	r2,-32468(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  84a0ac:	d0e04b17 	ldw	r3,-32468(gp)
  84a0b0:	e0bfff17 	ldw	r2,-4(fp)
  84a0b4:	1887883a 	add	r3,r3,r2
  84a0b8:	00804034 	movhi	r2,256
  84a0bc:	10800004 	addi	r2,r2,0
  84a0c0:	10c0062e 	bgeu	r2,r3,84a0dc <sbrk+0x74>
  84a0c4:	e0bffb17 	ldw	r2,-20(fp)
  84a0c8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84a0cc:	e0bffa17 	ldw	r2,-24(fp)
  84a0d0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  84a0d4:	00bfffc4 	movi	r2,-1
  84a0d8:	00000b06 	br	84a108 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  84a0dc:	d0a04b17 	ldw	r2,-32468(gp)
  84a0e0:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  84a0e4:	d0e04b17 	ldw	r3,-32468(gp)
  84a0e8:	e0bfff17 	ldw	r2,-4(fp)
  84a0ec:	1885883a 	add	r2,r3,r2
  84a0f0:	d0a04b15 	stw	r2,-32468(gp)
  84a0f4:	e0bffb17 	ldw	r2,-20(fp)
  84a0f8:	e0bffc15 	stw	r2,-16(fp)
  84a0fc:	e0bffc17 	ldw	r2,-16(fp)
  84a100:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  84a104:	e0bffd17 	ldw	r2,-12(fp)
} 
  84a108:	e037883a 	mov	sp,fp
  84a10c:	df000017 	ldw	fp,0(sp)
  84a110:	dec00104 	addi	sp,sp,4
  84a114:	f800283a 	ret

0084a118 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  84a118:	defffe04 	addi	sp,sp,-8
  84a11c:	dfc00115 	stw	ra,4(sp)
  84a120:	df000015 	stw	fp,0(sp)
  84a124:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  84a128:	d0a04917 	ldw	r2,-32476(gp)
  84a12c:	10000326 	beq	r2,zero,84a13c <alt_get_errno+0x24>
  84a130:	d0a04917 	ldw	r2,-32476(gp)
  84a134:	103ee83a 	callr	r2
  84a138:	00000106 	br	84a140 <alt_get_errno+0x28>
  84a13c:	d0a09204 	addi	r2,gp,-32184
}
  84a140:	e037883a 	mov	sp,fp
  84a144:	dfc00117 	ldw	ra,4(sp)
  84a148:	df000017 	ldw	fp,0(sp)
  84a14c:	dec00204 	addi	sp,sp,8
  84a150:	f800283a 	ret

0084a154 <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  84a154:	defffc04 	addi	sp,sp,-16
  84a158:	dfc00315 	stw	ra,12(sp)
  84a15c:	df000215 	stw	fp,8(sp)
  84a160:	df000204 	addi	fp,sp,8
  84a164:	e13fff15 	stw	r4,-4(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  84a168:	d0a0b917 	ldw	r2,-32028(gp)
  clock_t ticks = alt_nticks(); 
  84a16c:	e0bffe15 	stw	r2,-8(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  84a170:	d0a0b817 	ldw	r2,-32032(gp)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  84a174:	1000061e 	bne	r2,zero,84a190 <times+0x3c>
  {
    ALT_ERRNO = ENOSYS;
  84a178:	084a1180 	call	84a118 <alt_get_errno>
  84a17c:	1007883a 	mov	r3,r2
  84a180:	00801604 	movi	r2,88
  84a184:	18800015 	stw	r2,0(r3)
    return 0;
  84a188:	0005883a 	mov	r2,zero
  84a18c:	00000a06 	br	84a1b8 <times+0x64>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  84a190:	e0bfff17 	ldw	r2,-4(fp)
  84a194:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  84a198:	e0bfff17 	ldw	r2,-4(fp)
  84a19c:	e0fffe17 	ldw	r3,-8(fp)
  84a1a0:	10c00115 	stw	r3,4(r2)
  buf->tms_cutime = 0;
  84a1a4:	e0bfff17 	ldw	r2,-4(fp)
  84a1a8:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  84a1ac:	e0bfff17 	ldw	r2,-4(fp)
  84a1b0:	10000315 	stw	zero,12(r2)

  return ticks;
  84a1b4:	e0bffe17 	ldw	r2,-8(fp)
}
  84a1b8:	e037883a 	mov	sp,fp
  84a1bc:	dfc00117 	ldw	ra,4(sp)
  84a1c0:	df000017 	ldw	fp,0(sp)
  84a1c4:	dec00204 	addi	sp,sp,8
  84a1c8:	f800283a 	ret

0084a1cc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  84a1cc:	defffe04 	addi	sp,sp,-8
  84a1d0:	dfc00115 	stw	ra,4(sp)
  84a1d4:	df000015 	stw	fp,0(sp)
  84a1d8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  84a1dc:	d0a04917 	ldw	r2,-32476(gp)
  84a1e0:	10000326 	beq	r2,zero,84a1f0 <alt_get_errno+0x24>
  84a1e4:	d0a04917 	ldw	r2,-32476(gp)
  84a1e8:	103ee83a 	callr	r2
  84a1ec:	00000106 	br	84a1f4 <alt_get_errno+0x28>
  84a1f0:	d0a09204 	addi	r2,gp,-32184
}
  84a1f4:	e037883a 	mov	sp,fp
  84a1f8:	dfc00117 	ldw	ra,4(sp)
  84a1fc:	df000017 	ldw	fp,0(sp)
  84a200:	dec00204 	addi	sp,sp,8
  84a204:	f800283a 	ret

0084a208 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  84a208:	defff904 	addi	sp,sp,-28
  84a20c:	dfc00615 	stw	ra,24(sp)
  84a210:	df000515 	stw	fp,20(sp)
  84a214:	df000504 	addi	fp,sp,20
  84a218:	e13ffd15 	stw	r4,-12(fp)
  84a21c:	e17ffe15 	stw	r5,-8(fp)
  84a220:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  84a224:	e0bffd17 	ldw	r2,-12(fp)
  84a228:	10000816 	blt	r2,zero,84a24c <write+0x44>
  84a22c:	01400304 	movi	r5,12
  84a230:	e13ffd17 	ldw	r4,-12(fp)
  84a234:	08305040 	call	830504 <__mulsi3>
  84a238:	1007883a 	mov	r3,r2
  84a23c:	008021b4 	movhi	r2,134
  84a240:	10a85a04 	addi	r2,r2,-24216
  84a244:	1885883a 	add	r2,r3,r2
  84a248:	00000106 	br	84a250 <write+0x48>
  84a24c:	0005883a 	mov	r2,zero
  84a250:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  84a254:	e0bffb17 	ldw	r2,-20(fp)
  84a258:	10002126 	beq	r2,zero,84a2e0 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  84a25c:	e0bffb17 	ldw	r2,-20(fp)
  84a260:	10800217 	ldw	r2,8(r2)
  84a264:	108000cc 	andi	r2,r2,3
  84a268:	10001826 	beq	r2,zero,84a2cc <write+0xc4>
  84a26c:	e0bffb17 	ldw	r2,-20(fp)
  84a270:	10800017 	ldw	r2,0(r2)
  84a274:	10800617 	ldw	r2,24(r2)
  84a278:	10001426 	beq	r2,zero,84a2cc <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  84a27c:	e0bffb17 	ldw	r2,-20(fp)
  84a280:	10800017 	ldw	r2,0(r2)
  84a284:	10800617 	ldw	r2,24(r2)
  84a288:	e0ffff17 	ldw	r3,-4(fp)
  84a28c:	180d883a 	mov	r6,r3
  84a290:	e17ffe17 	ldw	r5,-8(fp)
  84a294:	e13ffb17 	ldw	r4,-20(fp)
  84a298:	103ee83a 	callr	r2
  84a29c:	e0bffc15 	stw	r2,-16(fp)
  84a2a0:	e0bffc17 	ldw	r2,-16(fp)
  84a2a4:	1000070e 	bge	r2,zero,84a2c4 <write+0xbc>
      {
        ALT_ERRNO = -rval;
  84a2a8:	084a1cc0 	call	84a1cc <alt_get_errno>
  84a2ac:	1007883a 	mov	r3,r2
  84a2b0:	e0bffc17 	ldw	r2,-16(fp)
  84a2b4:	0085c83a 	sub	r2,zero,r2
  84a2b8:	18800015 	stw	r2,0(r3)
        return -1;
  84a2bc:	00bfffc4 	movi	r2,-1
  84a2c0:	00000c06 	br	84a2f4 <write+0xec>
      }
      return rval;
  84a2c4:	e0bffc17 	ldw	r2,-16(fp)
  84a2c8:	00000a06 	br	84a2f4 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
  84a2cc:	084a1cc0 	call	84a1cc <alt_get_errno>
  84a2d0:	1007883a 	mov	r3,r2
  84a2d4:	00800344 	movi	r2,13
  84a2d8:	18800015 	stw	r2,0(r3)
  84a2dc:	00000406 	br	84a2f0 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  84a2e0:	084a1cc0 	call	84a1cc <alt_get_errno>
  84a2e4:	1007883a 	mov	r3,r2
  84a2e8:	00801444 	movi	r2,81
  84a2ec:	18800015 	stw	r2,0(r3)
  }
  return -1;
  84a2f0:	00bfffc4 	movi	r2,-1
}
  84a2f4:	e037883a 	mov	sp,fp
  84a2f8:	dfc00117 	ldw	ra,4(sp)
  84a2fc:	df000017 	ldw	fp,0(sp)
  84a300:	dec00204 	addi	sp,sp,8
  84a304:	f800283a 	ret

0084a308 <__env_lock>:
/*
 *
 */

void __env_lock ( struct _reent *_r )
{
  84a308:	deffdf04 	addi	sp,sp,-132
  84a30c:	dfc02015 	stw	ra,128(sp)
  84a310:	df001f15 	stw	fp,124(sp)
  84a314:	df001f04 	addi	fp,sp,124
  84a318:	e13fff15 	stw	r4,-4(fp)
  INT8U err;
  int id;

  /* use our priority as a task id */

  err = OSTaskQuery( OS_PRIO_SELF, &tcb );
  84a31c:	e0bfe204 	addi	r2,fp,-120
  84a320:	100b883a 	mov	r5,r2
  84a324:	01003fc4 	movi	r4,255
  84a328:	085176c0 	call	85176c <OSTaskQuery>
  84a32c:	e0bffe85 	stb	r2,-6(fp)
  if (err != OS_NO_ERR)
  84a330:	e0bffe83 	ldbu	r2,-6(fp)
  84a334:	10803fcc 	andi	r2,r2,255
  84a338:	10001e1e 	bne	r2,zero,84a3b4 <__env_lock+0xac>
    return;

  id = tcb.OSTCBPrio;
  84a33c:	e0bfee83 	ldbu	r2,-70(fp)
  84a340:	10803fcc 	andi	r2,r2,255
  84a344:	e0bfe115 	stw	r2,-124(fp)
   
  /* see if we own the environment already */

  OSSemQuery( alt_envsem, &semdata );
  84a348:	d0a0a017 	ldw	r2,-32128(gp)
  84a34c:	e0fffd04 	addi	r3,fp,-12
  84a350:	180b883a 	mov	r5,r3
  84a354:	1009883a 	mov	r4,r2
  84a358:	084ff840 	call	84ff84 <OSSemQuery>
  if( semdata.OSEventGrp && id == lockid ) 
  84a35c:	e0bffe43 	ldbu	r2,-7(fp)
  84a360:	10803fcc 	andi	r2,r2,255
  84a364:	10000726 	beq	r2,zero,84a384 <__env_lock+0x7c>
  84a368:	d0a04c17 	ldw	r2,-32464(gp)
  84a36c:	e0ffe117 	ldw	r3,-124(fp)
  84a370:	1880041e 	bne	r3,r2,84a384 <__env_lock+0x7c>
  {
    /* we do; just count the recursion */

    locks++;
  84a374:	d0a09f17 	ldw	r2,-32132(gp)
  84a378:	10800044 	addi	r2,r2,1
  84a37c:	d0a09f15 	stw	r2,-32132(gp)
  84a380:	00000a06 	br	84a3ac <__env_lock+0xa4>
  }
  else 
  {
    /* wait on the other task to yield, then claim ownership */

    OSSemPend( alt_envsem, 0, &err );
  84a384:	d0a0a017 	ldw	r2,-32128(gp)
  84a388:	e0fffe84 	addi	r3,fp,-6
  84a38c:	180d883a 	mov	r6,r3
  84a390:	000b883a 	mov	r5,zero
  84a394:	1009883a 	mov	r4,r2
  84a398:	084fafc0 	call	84fafc <OSSemPend>
    locks  = 1;
  84a39c:	00800044 	movi	r2,1
  84a3a0:	d0a09f15 	stw	r2,-32132(gp)
    lockid = id;
  84a3a4:	e0bfe117 	ldw	r2,-124(fp)
  84a3a8:	d0a04c15 	stw	r2,-32464(gp)
  }

#endif /* OS_THREAD_SAFE_NEWLIB */
  return;
  84a3ac:	0001883a 	nop
  84a3b0:	00000106 	br	84a3b8 <__env_lock+0xb0>

  /* use our priority as a task id */

  err = OSTaskQuery( OS_PRIO_SELF, &tcb );
  if (err != OS_NO_ERR)
    return;
  84a3b4:	0001883a 	nop
    lockid = id;
  }

#endif /* OS_THREAD_SAFE_NEWLIB */
  return;
}
  84a3b8:	e037883a 	mov	sp,fp
  84a3bc:	dfc00117 	ldw	ra,4(sp)
  84a3c0:	df000017 	ldw	fp,0(sp)
  84a3c4:	dec00204 	addi	sp,sp,8
  84a3c8:	f800283a 	ret

0084a3cc <__env_unlock>:
/*
 *
 */

void __env_unlock ( struct _reent *_r )
{
  84a3cc:	defffd04 	addi	sp,sp,-12
  84a3d0:	dfc00215 	stw	ra,8(sp)
  84a3d4:	df000115 	stw	fp,4(sp)
  84a3d8:	df000104 	addi	fp,sp,4
  84a3dc:	e13fff15 	stw	r4,-4(fp)
#if OS_THREAD_SAFE_NEWLIB
  if (locks == 0)
  84a3e0:	d0a09f17 	ldw	r2,-32132(gp)
  84a3e4:	10000b26 	beq	r2,zero,84a414 <__env_unlock+0x48>
   /* 
    * release the environment once the number of locks == the number 
    * of unlocks 
    */

  if( (--locks) == 0 ) 
  84a3e8:	d0a09f17 	ldw	r2,-32132(gp)
  84a3ec:	10bfffc4 	addi	r2,r2,-1
  84a3f0:	d0a09f15 	stw	r2,-32132(gp)
  84a3f4:	d0a09f17 	ldw	r2,-32132(gp)
  84a3f8:	1000071e 	bne	r2,zero,84a418 <__env_unlock+0x4c>
  {
    lockid = -1;
  84a3fc:	00bfffc4 	movi	r2,-1
  84a400:	d0a04c15 	stw	r2,-32464(gp)
    OSSemPost( alt_envsem );
  84a404:	d0a0a017 	ldw	r2,-32128(gp)
  84a408:	1009883a 	mov	r4,r2
  84a40c:	084fe740 	call	84fe74 <OSSemPost>
  84a410:	00000106 	br	84a418 <__env_unlock+0x4c>

void __env_unlock ( struct _reent *_r )
{
#if OS_THREAD_SAFE_NEWLIB
  if (locks == 0)
    return;
  84a414:	0001883a 	nop
  {
    lockid = -1;
    OSSemPost( alt_envsem );
  }
#endif /* OS_THREAD_SAFE_NEWLIB */
}
  84a418:	e037883a 	mov	sp,fp
  84a41c:	dfc00117 	ldw	ra,4(sp)
  84a420:	df000017 	ldw	fp,0(sp)
  84a424:	dec00204 	addi	sp,sp,8
  84a428:	f800283a 	ret

0084a42c <__malloc_lock>:
/*
 *
 */

void __malloc_lock ( struct _reent *_r )
{
  84a42c:	deffdb04 	addi	sp,sp,-148
  84a430:	dfc02415 	stw	ra,144(sp)
  84a434:	df002315 	stw	fp,140(sp)
  84a438:	df002304 	addi	fp,sp,140
  84a43c:	e13fff15 	stw	r4,-4(fp)
  OS_TCB tcb;
  OS_SEM_DATA semdata;
  INT8U err;
  int id;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84a440:	e03fdd15 	stw	zero,-140(fp)
#endif  
  
  if (OSRunning != OS_TRUE)
  84a444:	d0a0a343 	ldbu	r2,-32115(gp)
  84a448:	10803fcc 	andi	r2,r2,255
  84a44c:	10800060 	cmpeqi	r2,r2,1
  84a450:	10003626 	beq	r2,zero,84a52c <__malloc_lock+0x100>
      return;

  /* use our priority as a task id */

  err = OSTaskQuery( OS_PRIO_SELF, &tcb );
  84a454:	e0bfe204 	addi	r2,fp,-120
  84a458:	100b883a 	mov	r5,r2
  84a45c:	01003fc4 	movi	r4,255
  84a460:	085176c0 	call	85176c <OSTaskQuery>
  84a464:	e0bffe85 	stb	r2,-6(fp)
  if (err != OS_NO_ERR)
  84a468:	e0bffe83 	ldbu	r2,-6(fp)
  84a46c:	10803fcc 	andi	r2,r2,255
  84a470:	1000301e 	bne	r2,zero,84a534 <__malloc_lock+0x108>
    return;

  id = tcb.OSTCBPrio;
  84a474:	e0bfee83 	ldbu	r2,-70(fp)
  84a478:	10803fcc 	andi	r2,r2,255
  84a47c:	e0bfde15 	stw	r2,-136(fp)
   
  /* see if we own the heap already */

  OSSemQuery( alt_heapsem, &semdata );
  84a480:	d0a0a217 	ldw	r2,-32120(gp)
  84a484:	e0fffd04 	addi	r3,fp,-12
  84a488:	180b883a 	mov	r5,r3
  84a48c:	1009883a 	mov	r4,r2
  84a490:	084ff840 	call	84ff84 <OSSemQuery>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84a494:	0005303a 	rdctl	r2,status
  84a498:	e0bfe115 	stw	r2,-124(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84a49c:	e0ffe117 	ldw	r3,-124(fp)
  84a4a0:	00bfff84 	movi	r2,-2
  84a4a4:	1884703a 	and	r2,r3,r2
  84a4a8:	1001703a 	wrctl	status,r2
  
  return context;
  84a4ac:	e0bfe117 	ldw	r2,-124(fp)
  
  OS_ENTER_CRITICAL();
  84a4b0:	e0bfdd15 	stw	r2,-140(fp)

  if( !semdata.OSCnt && id == lockid ) 
  84a4b4:	e0bffd0b 	ldhu	r2,-12(fp)
  84a4b8:	10bfffcc 	andi	r2,r2,65535
  84a4bc:	10000b1e 	bne	r2,zero,84a4ec <__malloc_lock+0xc0>
  84a4c0:	d0a04d17 	ldw	r2,-32460(gp)
  84a4c4:	e0ffde17 	ldw	r3,-136(fp)
  84a4c8:	1880081e 	bne	r3,r2,84a4ec <__malloc_lock+0xc0>
  {
    /* we do; just count the recursion */
    locks++;
  84a4cc:	d0a0a117 	ldw	r2,-32124(gp)
  84a4d0:	10800044 	addi	r2,r2,1
  84a4d4:	d0a0a115 	stw	r2,-32124(gp)
  84a4d8:	e0bfdd17 	ldw	r2,-140(fp)
  84a4dc:	e0bfdf15 	stw	r2,-132(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84a4e0:	e0bfdf17 	ldw	r2,-132(fp)
  84a4e4:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
  84a4e8:	00000e06 	br	84a524 <__malloc_lock+0xf8>
  84a4ec:	e0bfdd17 	ldw	r2,-140(fp)
  84a4f0:	e0bfe015 	stw	r2,-128(fp)
  84a4f4:	e0bfe017 	ldw	r2,-128(fp)
  84a4f8:	1001703a 	wrctl	status,r2
  else 
  {
    /* wait on the other task to yield the heap, then claim ownership of it */
    OS_EXIT_CRITICAL();

    OSSemPend( alt_heapsem, 0, &err );
  84a4fc:	d0a0a217 	ldw	r2,-32120(gp)
  84a500:	e0fffe84 	addi	r3,fp,-6
  84a504:	180d883a 	mov	r6,r3
  84a508:	000b883a 	mov	r5,zero
  84a50c:	1009883a 	mov	r4,r2
  84a510:	084fafc0 	call	84fafc <OSSemPend>
    locks  = 1;
  84a514:	00800044 	movi	r2,1
  84a518:	d0a0a115 	stw	r2,-32124(gp)
    lockid = id;
  84a51c:	e0bfde17 	ldw	r2,-136(fp)
  84a520:	d0a04d15 	stw	r2,-32460(gp)
  }

#endif /* OS_THREAD_SAFE_NEWLIB */
  return;
  84a524:	0001883a 	nop
  84a528:	00000306 	br	84a538 <__malloc_lock+0x10c>
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
#endif  
  
  if (OSRunning != OS_TRUE)
      return;
  84a52c:	0001883a 	nop
  84a530:	00000106 	br	84a538 <__malloc_lock+0x10c>

  /* use our priority as a task id */

  err = OSTaskQuery( OS_PRIO_SELF, &tcb );
  if (err != OS_NO_ERR)
    return;
  84a534:	0001883a 	nop
    lockid = id;
  }

#endif /* OS_THREAD_SAFE_NEWLIB */
  return;
}
  84a538:	e037883a 	mov	sp,fp
  84a53c:	dfc00117 	ldw	ra,4(sp)
  84a540:	df000017 	ldw	fp,0(sp)
  84a544:	dec00204 	addi	sp,sp,8
  84a548:	f800283a 	ret

0084a54c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  84a54c:	defff804 	addi	sp,sp,-32
  84a550:	dfc00715 	stw	ra,28(sp)
  84a554:	df000615 	stw	fp,24(sp)
  84a558:	df000604 	addi	fp,sp,24
  84a55c:	e13fff15 	stw	r4,-4(fp)
#if OS_THREAD_SAFE_NEWLIB

#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84a560:	e03ffa15 	stw	zero,-24(fp)
#endif 

  if (OSRunning != OS_TRUE)
  84a564:	d0a0a343 	ldbu	r2,-32115(gp)
  84a568:	10803fcc 	andi	r2,r2,255
  84a56c:	10800060 	cmpeqi	r2,r2,1
  84a570:	10002326 	beq	r2,zero,84a600 <__malloc_unlock+0xb4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84a574:	0005303a 	rdctl	r2,status
  84a578:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84a57c:	e0fffe17 	ldw	r3,-8(fp)
  84a580:	00bfff84 	movi	r2,-2
  84a584:	1884703a 	and	r2,r3,r2
  84a588:	1001703a 	wrctl	status,r2
  
  return context;
  84a58c:	e0bffe17 	ldw	r2,-8(fp)
      return;

  OS_ENTER_CRITICAL();
  84a590:	e0bffa15 	stw	r2,-24(fp)
  if (locks == 0)
  84a594:	d0a0a117 	ldw	r2,-32124(gp)
  84a598:	1000051e 	bne	r2,zero,84a5b0 <__malloc_unlock+0x64>
  84a59c:	e0bffa17 	ldw	r2,-24(fp)
  84a5a0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84a5a4:	e0bffb17 	ldw	r2,-20(fp)
  84a5a8:	1001703a 	wrctl	status,r2
  {
      OS_EXIT_CRITICAL();
      return;
  84a5ac:	00001506 	br	84a604 <__malloc_unlock+0xb8>
  }

  /* release the heap once the number of locks == the number of unlocks */
  if( (--locks) == 0 ) 
  84a5b0:	d0a0a117 	ldw	r2,-32124(gp)
  84a5b4:	10bfffc4 	addi	r2,r2,-1
  84a5b8:	d0a0a115 	stw	r2,-32124(gp)
  84a5bc:	d0a0a117 	ldw	r2,-32124(gp)
  84a5c0:	10000a1e 	bne	r2,zero,84a5ec <__malloc_unlock+0xa0>
  {
    lockid = -1;
  84a5c4:	00bfffc4 	movi	r2,-1
  84a5c8:	d0a04d15 	stw	r2,-32460(gp)
  84a5cc:	e0bffa17 	ldw	r2,-24(fp)
  84a5d0:	e0bffc15 	stw	r2,-16(fp)
  84a5d4:	e0bffc17 	ldw	r2,-16(fp)
  84a5d8:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    OSSemPost( alt_heapsem );
  84a5dc:	d0a0a217 	ldw	r2,-32120(gp)
  84a5e0:	1009883a 	mov	r4,r2
  84a5e4:	084fe740 	call	84fe74 <OSSemPost>
  84a5e8:	00000606 	br	84a604 <__malloc_unlock+0xb8>
  84a5ec:	e0bffa17 	ldw	r2,-24(fp)
  84a5f0:	e0bffd15 	stw	r2,-12(fp)
  84a5f4:	e0bffd17 	ldw	r2,-12(fp)
  84a5f8:	1001703a 	wrctl	status,r2
  84a5fc:	00000106 	br	84a604 <__malloc_unlock+0xb8>
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
#endif 

  if (OSRunning != OS_TRUE)
      return;
  84a600:	0001883a 	nop
  {
      OS_EXIT_CRITICAL();
  }
  
#endif /* OS_THREAD_SAFE_NEWLIB */
}
  84a604:	e037883a 	mov	sp,fp
  84a608:	dfc00117 	ldw	ra,4(sp)
  84a60c:	df000017 	ldw	fp,0(sp)
  84a610:	dec00204 	addi	sp,sp,8
  84a614:	f800283a 	ret

0084a618 <OSEventNameGet>:
*********************************************************************************************************
*/

#if (OS_EVENT_EN) && (OS_EVENT_NAME_SIZE > 1)
INT8U  OSEventNameGet (OS_EVENT *pevent, INT8U *pname, INT8U *perr)
{
  84a618:	defff704 	addi	sp,sp,-36
  84a61c:	dfc00815 	stw	ra,32(sp)
  84a620:	df000715 	stw	fp,28(sp)
  84a624:	df000704 	addi	fp,sp,28
  84a628:	e13ffd15 	stw	r4,-12(fp)
  84a62c:	e17ffe15 	stw	r5,-8(fp)
  84a630:	e1bfff15 	stw	r6,-4(fp)
    INT8U      len;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84a634:	e03ff915 	stw	zero,-28(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84a638:	e0bfff17 	ldw	r2,-4(fp)
  84a63c:	1000021e 	bne	r2,zero,84a648 <OSEventNameGet+0x30>
        return (0);
  84a640:	0005883a 	mov	r2,zero
  84a644:	00003706 	br	84a724 <OSEventNameGet+0x10c>
    }
    if (pevent == (OS_EVENT *)0) {               /* Is 'pevent' a NULL pointer?                        */
  84a648:	e0bffd17 	ldw	r2,-12(fp)
  84a64c:	1000051e 	bne	r2,zero,84a664 <OSEventNameGet+0x4c>
        *perr = OS_ERR_PEVENT_NULL;
  84a650:	e0bfff17 	ldw	r2,-4(fp)
  84a654:	00c00104 	movi	r3,4
  84a658:	10c00005 	stb	r3,0(r2)
        return (0);
  84a65c:	0005883a 	mov	r2,zero
  84a660:	00003006 	br	84a724 <OSEventNameGet+0x10c>
    }
    if (pname == (INT8U *)0) {                   /* Is 'pname' a NULL pointer?                         */
  84a664:	e0bffe17 	ldw	r2,-8(fp)
  84a668:	1000051e 	bne	r2,zero,84a680 <OSEventNameGet+0x68>
        *perr = OS_ERR_PNAME_NULL;
  84a66c:	e0bfff17 	ldw	r2,-4(fp)
  84a670:	00c00304 	movi	r3,12
  84a674:	10c00005 	stb	r3,0(r2)
        return (0);
  84a678:	0005883a 	mov	r2,zero
  84a67c:	00002906 	br	84a724 <OSEventNameGet+0x10c>
    }
#endif
    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  84a680:	d0a0b103 	ldbu	r2,-32060(gp)
  84a684:	10803fcc 	andi	r2,r2,255
  84a688:	10000526 	beq	r2,zero,84a6a0 <OSEventNameGet+0x88>
        *perr  = OS_ERR_NAME_GET_ISR;
  84a68c:	e0bfff17 	ldw	r2,-4(fp)
  84a690:	00c00444 	movi	r3,17
  84a694:	10c00005 	stb	r3,0(r2)
        return (0);
  84a698:	0005883a 	mov	r2,zero
  84a69c:	00002106 	br	84a724 <OSEventNameGet+0x10c>
    }
    switch (pevent->OSEventType) {
  84a6a0:	e0bffd17 	ldw	r2,-12(fp)
  84a6a4:	10800003 	ldbu	r2,0(r2)
  84a6a8:	10803fcc 	andi	r2,r2,255
  84a6ac:	10bfffc4 	addi	r2,r2,-1
  84a6b0:	10800128 	cmpgeui	r2,r2,4
  84a6b4:	10000526 	beq	r2,zero,84a6cc <OSEventNameGet+0xb4>
        case OS_EVENT_TYPE_MBOX:
        case OS_EVENT_TYPE_Q:
             break;

        default:
             *perr = OS_ERR_EVENT_TYPE;
  84a6b8:	e0bfff17 	ldw	r2,-4(fp)
  84a6bc:	00c00044 	movi	r3,1
  84a6c0:	10c00005 	stb	r3,0(r2)
             return (0);
  84a6c4:	0005883a 	mov	r2,zero
  84a6c8:	00001606 	br	84a724 <OSEventNameGet+0x10c>
    switch (pevent->OSEventType) {
        case OS_EVENT_TYPE_SEM:
        case OS_EVENT_TYPE_MUTEX:
        case OS_EVENT_TYPE_MBOX:
        case OS_EVENT_TYPE_Q:
             break;
  84a6cc:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84a6d0:	0005303a 	rdctl	r2,status
  84a6d4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84a6d8:	e0fffb17 	ldw	r3,-20(fp)
  84a6dc:	00bfff84 	movi	r2,-2
  84a6e0:	1884703a 	and	r2,r3,r2
  84a6e4:	1001703a 	wrctl	status,r2
  
  return context;
  84a6e8:	e0bffb17 	ldw	r2,-20(fp)

        default:
             *perr = OS_ERR_EVENT_TYPE;
             return (0);
    }
    OS_ENTER_CRITICAL();
  84a6ec:	e0bff915 	stw	r2,-28(fp)
    len   = OS_StrCopy(pname, pevent->OSEventName);   /* Copy name from OS_EVENT                       */
  84a6f0:	e0bffd17 	ldw	r2,-12(fp)
  84a6f4:	10800384 	addi	r2,r2,14
  84a6f8:	100b883a 	mov	r5,r2
  84a6fc:	e13ffe17 	ldw	r4,-8(fp)
  84a700:	084c09c0 	call	84c09c <OS_StrCopy>
  84a704:	e0bffa05 	stb	r2,-24(fp)
  84a708:	e0bff917 	ldw	r2,-28(fp)
  84a70c:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84a710:	e0bffc17 	ldw	r2,-16(fp)
  84a714:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84a718:	e0bfff17 	ldw	r2,-4(fp)
  84a71c:	10000005 	stb	zero,0(r2)
    return (len);
  84a720:	e0bffa03 	ldbu	r2,-24(fp)
}
  84a724:	e037883a 	mov	sp,fp
  84a728:	dfc00117 	ldw	ra,4(sp)
  84a72c:	df000017 	ldw	fp,0(sp)
  84a730:	dec00204 	addi	sp,sp,8
  84a734:	f800283a 	ret

0084a738 <OSEventNameSet>:
*********************************************************************************************************
*/

#if (OS_EVENT_EN) && (OS_EVENT_NAME_SIZE > 1)
void  OSEventNameSet (OS_EVENT *pevent, INT8U *pname, INT8U *perr)
{
  84a738:	defff604 	addi	sp,sp,-40
  84a73c:	dfc00915 	stw	ra,36(sp)
  84a740:	df000815 	stw	fp,32(sp)
  84a744:	df000804 	addi	fp,sp,32
  84a748:	e13ffd15 	stw	r4,-12(fp)
  84a74c:	e17ffe15 	stw	r5,-8(fp)
  84a750:	e1bfff15 	stw	r6,-4(fp)
    INT8U      len;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84a754:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84a758:	e0bfff17 	ldw	r2,-4(fp)
  84a75c:	10004026 	beq	r2,zero,84a860 <OSEventNameSet+0x128>
        return;
    }
    if (pevent == (OS_EVENT *)0) {               /* Is 'pevent' a NULL pointer?                        */
  84a760:	e0bffd17 	ldw	r2,-12(fp)
  84a764:	1000041e 	bne	r2,zero,84a778 <OSEventNameSet+0x40>
        *perr = OS_ERR_PEVENT_NULL;
  84a768:	e0bfff17 	ldw	r2,-4(fp)
  84a76c:	00c00104 	movi	r3,4
  84a770:	10c00005 	stb	r3,0(r2)
        return;
  84a774:	00003b06 	br	84a864 <OSEventNameSet+0x12c>
    }
    if (pname == (INT8U *)0) {                   /* Is 'pname' a NULL pointer?                         */
  84a778:	e0bffe17 	ldw	r2,-8(fp)
  84a77c:	1000041e 	bne	r2,zero,84a790 <OSEventNameSet+0x58>
        *perr = OS_ERR_PNAME_NULL;
  84a780:	e0bfff17 	ldw	r2,-4(fp)
  84a784:	00c00304 	movi	r3,12
  84a788:	10c00005 	stb	r3,0(r2)
        return;
  84a78c:	00003506 	br	84a864 <OSEventNameSet+0x12c>
    }
#endif
    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  84a790:	d0a0b103 	ldbu	r2,-32060(gp)
  84a794:	10803fcc 	andi	r2,r2,255
  84a798:	10000426 	beq	r2,zero,84a7ac <OSEventNameSet+0x74>
        *perr = OS_ERR_NAME_SET_ISR;
  84a79c:	e0bfff17 	ldw	r2,-4(fp)
  84a7a0:	00c00484 	movi	r3,18
  84a7a4:	10c00005 	stb	r3,0(r2)
        return;
  84a7a8:	00002e06 	br	84a864 <OSEventNameSet+0x12c>
    }
    switch (pevent->OSEventType) {
  84a7ac:	e0bffd17 	ldw	r2,-12(fp)
  84a7b0:	10800003 	ldbu	r2,0(r2)
  84a7b4:	10803fcc 	andi	r2,r2,255
  84a7b8:	10bfffc4 	addi	r2,r2,-1
  84a7bc:	10800128 	cmpgeui	r2,r2,4
  84a7c0:	10000426 	beq	r2,zero,84a7d4 <OSEventNameSet+0x9c>
        case OS_EVENT_TYPE_MBOX:
        case OS_EVENT_TYPE_Q:
             break;

        default:
             *perr = OS_ERR_EVENT_TYPE;
  84a7c4:	e0bfff17 	ldw	r2,-4(fp)
  84a7c8:	00c00044 	movi	r3,1
  84a7cc:	10c00005 	stb	r3,0(r2)
             return;
  84a7d0:	00002406 	br	84a864 <OSEventNameSet+0x12c>
    switch (pevent->OSEventType) {
        case OS_EVENT_TYPE_SEM:
        case OS_EVENT_TYPE_MUTEX:
        case OS_EVENT_TYPE_MBOX:
        case OS_EVENT_TYPE_Q:
             break;
  84a7d4:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84a7d8:	0005303a 	rdctl	r2,status
  84a7dc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84a7e0:	e0fffc17 	ldw	r3,-16(fp)
  84a7e4:	00bfff84 	movi	r2,-2
  84a7e8:	1884703a 	and	r2,r3,r2
  84a7ec:	1001703a 	wrctl	status,r2
  
  return context;
  84a7f0:	e0bffc17 	ldw	r2,-16(fp)

        default:
             *perr = OS_ERR_EVENT_TYPE;
             return;
    }
    OS_ENTER_CRITICAL();
  84a7f4:	e0bff815 	stw	r2,-32(fp)
    len = OS_StrLen(pname);                           /* Can we fit the string in the storage area?    */
  84a7f8:	e13ffe17 	ldw	r4,-8(fp)
  84a7fc:	084c1100 	call	84c110 <OS_StrLen>
  84a800:	e0bffa05 	stb	r2,-24(fp)
    if (len > (OS_EVENT_NAME_SIZE - 1)) {             /* No                                            */
  84a804:	e0bffa03 	ldbu	r2,-24(fp)
  84a808:	10800830 	cmpltui	r2,r2,32
  84a80c:	1000081e 	bne	r2,zero,84a830 <OSEventNameSet+0xf8>
  84a810:	e0bff817 	ldw	r2,-32(fp)
  84a814:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84a818:	e0bff917 	ldw	r2,-28(fp)
  84a81c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_EVENT_NAME_TOO_LONG;
  84a820:	e0bfff17 	ldw	r2,-4(fp)
  84a824:	00c002c4 	movi	r3,11
  84a828:	10c00005 	stb	r3,0(r2)
        return;
  84a82c:	00000d06 	br	84a864 <OSEventNameSet+0x12c>
    }
    (void)OS_StrCopy(pevent->OSEventName, pname);     /* Yes, copy name to the event control block     */
  84a830:	e0bffd17 	ldw	r2,-12(fp)
  84a834:	10800384 	addi	r2,r2,14
  84a838:	e17ffe17 	ldw	r5,-8(fp)
  84a83c:	1009883a 	mov	r4,r2
  84a840:	084c09c0 	call	84c09c <OS_StrCopy>
  84a844:	e0bff817 	ldw	r2,-32(fp)
  84a848:	e0bffb15 	stw	r2,-20(fp)
  84a84c:	e0bffb17 	ldw	r2,-20(fp)
  84a850:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84a854:	e0bfff17 	ldw	r2,-4(fp)
  84a858:	10000005 	stb	zero,0(r2)
  84a85c:	00000106 	br	84a864 <OSEventNameSet+0x12c>



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
        return;
  84a860:	0001883a 	nop
        return;
    }
    (void)OS_StrCopy(pevent->OSEventName, pname);     /* Yes, copy name to the event control block     */
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
}
  84a864:	e037883a 	mov	sp,fp
  84a868:	dfc00117 	ldw	ra,4(sp)
  84a86c:	df000017 	ldw	fp,0(sp)
  84a870:	dec00204 	addi	sp,sp,8
  84a874:	f800283a 	ret

0084a878 <OSEventPendMulti>:
*********************************************************************************************************
*/
/*$PAGE*/
#if ((OS_EVENT_EN) && (OS_EVENT_MULTI_EN > 0))
INT16U  OSEventPendMulti (OS_EVENT **pevents_pend, OS_EVENT **pevents_rdy, void **pmsgs_rdy, INT16U timeout, INT8U *perr)
{
  84a878:	deffed04 	addi	sp,sp,-76
  84a87c:	dfc01215 	stw	ra,72(sp)
  84a880:	df001115 	stw	fp,68(sp)
  84a884:	df001104 	addi	fp,sp,68
  84a888:	e13ffc15 	stw	r4,-16(fp)
  84a88c:	e17ffd15 	stw	r5,-12(fp)
  84a890:	e1bffe15 	stw	r6,-8(fp)
  84a894:	3805883a 	mov	r2,r7
  84a898:	e0bfff0d 	sth	r2,-4(fp)
#endif
    BOOLEAN     events_rdy;
    INT16U      events_rdy_nbr;
    INT8U       events_stat;
#if (OS_CRITICAL_METHOD == 3)                           /* Allocate storage for CPU status register    */
    OS_CPU_SR   cpu_sr = 0;
  84a89c:	e03ff315 	stw	zero,-52(fp)
#endif



#if (OS_ARG_CHK_EN > 0)
    if (perr == (INT8U *)0) {                           /* Validate 'perr'                             */
  84a8a0:	e0800217 	ldw	r2,8(fp)
  84a8a4:	1000021e 	bne	r2,zero,84a8b0 <OSEventPendMulti+0x38>
        return (0);
  84a8a8:	0005883a 	mov	r2,zero
  84a8ac:	00017106 	br	84ae74 <OSEventPendMulti+0x5fc>
    }
    if (pevents_pend == (OS_EVENT **)0) {               /* Validate 'pevents_pend'                     */
  84a8b0:	e0bffc17 	ldw	r2,-16(fp)
  84a8b4:	1000051e 	bne	r2,zero,84a8cc <OSEventPendMulti+0x54>
       *perr =  OS_ERR_PEVENT_NULL;
  84a8b8:	e0800217 	ldw	r2,8(fp)
  84a8bc:	00c00104 	movi	r3,4
  84a8c0:	10c00005 	stb	r3,0(r2)
        return (0);
  84a8c4:	0005883a 	mov	r2,zero
  84a8c8:	00016a06 	br	84ae74 <OSEventPendMulti+0x5fc>
    }
    if (pevents_rdy  == (OS_EVENT **)0) {               /* Validate 'pevents_rdy'                      */
  84a8cc:	e0bffd17 	ldw	r2,-12(fp)
  84a8d0:	1000051e 	bne	r2,zero,84a8e8 <OSEventPendMulti+0x70>
       *perr =  OS_ERR_PEVENT_NULL;
  84a8d4:	e0800217 	ldw	r2,8(fp)
  84a8d8:	00c00104 	movi	r3,4
  84a8dc:	10c00005 	stb	r3,0(r2)
        return (0);
  84a8e0:	0005883a 	mov	r2,zero
  84a8e4:	00016306 	br	84ae74 <OSEventPendMulti+0x5fc>
    }
    if (pmsgs_rdy == (void **)0) {                      /* Validate 'pmsgs_rdy'                        */
  84a8e8:	e0bffe17 	ldw	r2,-8(fp)
  84a8ec:	1000051e 	bne	r2,zero,84a904 <OSEventPendMulti+0x8c>
       *perr =  OS_ERR_PEVENT_NULL;
  84a8f0:	e0800217 	ldw	r2,8(fp)
  84a8f4:	00c00104 	movi	r3,4
  84a8f8:	10c00005 	stb	r3,0(r2)
        return (0);
  84a8fc:	0005883a 	mov	r2,zero
  84a900:	00015c06 	br	84ae74 <OSEventPendMulti+0x5fc>
    }
#endif

   *pevents_rdy = (OS_EVENT *)0;                        /* Init array to NULL in case of errors        */
  84a904:	e0bffd17 	ldw	r2,-12(fp)
  84a908:	10000015 	stw	zero,0(r2)

    pevents     =  pevents_pend;
  84a90c:	e0bffc17 	ldw	r2,-16(fp)
  84a910:	e0bfef15 	stw	r2,-68(fp)
    pevent      = *pevents;
  84a914:	e0bfef17 	ldw	r2,-68(fp)
  84a918:	10800017 	ldw	r2,0(r2)
  84a91c:	e0bff015 	stw	r2,-64(fp)
    while  (pevent != (OS_EVENT *)0) {
  84a920:	00001906 	br	84a988 <OSEventPendMulti+0x110>
        switch (pevent->OSEventType) {                  /* Validate event block types                  */
  84a924:	e0bff017 	ldw	r2,-64(fp)
  84a928:	10800003 	ldbu	r2,0(r2)
  84a92c:	10803fcc 	andi	r2,r2,255
  84a930:	10c000a0 	cmpeqi	r3,r2,2
  84a934:	1800091e 	bne	r3,zero,84a95c <OSEventPendMulti+0xe4>
  84a938:	10c000e0 	cmpeqi	r3,r2,3
  84a93c:	1800091e 	bne	r3,zero,84a964 <OSEventPendMulti+0xec>
  84a940:	10800060 	cmpeqi	r2,r2,1
  84a944:	1000091e 	bne	r2,zero,84a96c <OSEventPendMulti+0xf4>
#endif

            case OS_EVENT_TYPE_MUTEX:                                            
            case OS_EVENT_TYPE_FLAG:
            default:           
                *perr = OS_ERR_EVENT_TYPE;
  84a948:	e0800217 	ldw	r2,8(fp)
  84a94c:	00c00044 	movi	r3,1
  84a950:	10c00005 	stb	r3,0(r2)
                 return (0);
  84a954:	0005883a 	mov	r2,zero
  84a958:	00014606 	br	84ae74 <OSEventPendMulti+0x5fc>
            case OS_EVENT_TYPE_MBOX:
                 break;
#endif
#if ((OS_Q_EN   > 0) && (OS_MAX_QS > 0))
            case OS_EVENT_TYPE_Q:
                 break;
  84a95c:	0001883a 	nop
  84a960:	00000306 	br	84a970 <OSEventPendMulti+0xf8>
    pevent      = *pevents;
    while  (pevent != (OS_EVENT *)0) {
        switch (pevent->OSEventType) {                  /* Validate event block types                  */
#if (OS_SEM_EN  > 0)
            case OS_EVENT_TYPE_SEM:
                 break;
  84a964:	0001883a 	nop
  84a968:	00000106 	br	84a970 <OSEventPendMulti+0xf8>
#endif
#if (OS_MBOX_EN > 0)
            case OS_EVENT_TYPE_MBOX:
                 break;
  84a96c:	0001883a 	nop
            case OS_EVENT_TYPE_FLAG:
            default:           
                *perr = OS_ERR_EVENT_TYPE;
                 return (0);
        }
        pevents++;
  84a970:	e0bfef17 	ldw	r2,-68(fp)
  84a974:	10800104 	addi	r2,r2,4
  84a978:	e0bfef15 	stw	r2,-68(fp)
        pevent = *pevents;
  84a97c:	e0bfef17 	ldw	r2,-68(fp)
  84a980:	10800017 	ldw	r2,0(r2)
  84a984:	e0bff015 	stw	r2,-64(fp)

   *pevents_rdy = (OS_EVENT *)0;                        /* Init array to NULL in case of errors        */

    pevents     =  pevents_pend;
    pevent      = *pevents;
    while  (pevent != (OS_EVENT *)0) {
  84a988:	e0bff017 	ldw	r2,-64(fp)
  84a98c:	103fe51e 	bne	r2,zero,84a924 <__alt_mem_epcs_flash_controller_0+0xff841924>
        }
        pevents++;
        pevent = *pevents;
    }

    if (OSIntNesting  > 0) {                            /* See if called from ISR ...                  */
  84a990:	d0a0b103 	ldbu	r2,-32060(gp)
  84a994:	10803fcc 	andi	r2,r2,255
  84a998:	10000526 	beq	r2,zero,84a9b0 <OSEventPendMulti+0x138>
       *perr =  OS_ERR_PEND_ISR;                        /* ... can't PEND from an ISR                  */
  84a99c:	e0800217 	ldw	r2,8(fp)
  84a9a0:	00c00084 	movi	r3,2
  84a9a4:	10c00005 	stb	r3,0(r2)
        return (0);
  84a9a8:	0005883a 	mov	r2,zero
  84a9ac:	00013106 	br	84ae74 <OSEventPendMulti+0x5fc>
    }
    if (OSLockNesting > 0) {                            /* See if called with scheduler locked ...     */
  84a9b0:	d0a0a303 	ldbu	r2,-32116(gp)
  84a9b4:	10803fcc 	andi	r2,r2,255
  84a9b8:	10000526 	beq	r2,zero,84a9d0 <OSEventPendMulti+0x158>
       *perr =  OS_ERR_PEND_LOCKED;                     /* ... can't PEND when locked                  */
  84a9bc:	e0800217 	ldw	r2,8(fp)
  84a9c0:	00c00344 	movi	r3,13
  84a9c4:	10c00005 	stb	r3,0(r2)
        return (0);
  84a9c8:	0005883a 	mov	r2,zero
  84a9cc:	00012906 	br	84ae74 <OSEventPendMulti+0x5fc>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84a9d0:	0005303a 	rdctl	r2,status
  84a9d4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84a9d8:	e0fffb17 	ldw	r3,-20(fp)
  84a9dc:	00bfff84 	movi	r2,-2
  84a9e0:	1884703a 	and	r2,r3,r2
  84a9e4:	1001703a 	wrctl	status,r2
  
  return context;
  84a9e8:	e0bffb17 	ldw	r2,-20(fp)
    }

/*$PAGE*/
    OS_ENTER_CRITICAL();
  84a9ec:	e0bff315 	stw	r2,-52(fp)
    events_rdy     =  OS_FALSE;
  84a9f0:	e03ff105 	stb	zero,-60(fp)
    events_rdy_nbr =  0;
  84a9f4:	e03ff18d 	sth	zero,-58(fp)
    events_stat    =  OS_STAT_RDY;
  84a9f8:	e03ff205 	stb	zero,-56(fp)
    pevents        =  pevents_pend;
  84a9fc:	e0bffc17 	ldw	r2,-16(fp)
  84aa00:	e0bfef15 	stw	r2,-68(fp)
    pevent         = *pevents;
  84aa04:	e0bfef17 	ldw	r2,-68(fp)
  84aa08:	10800017 	ldw	r2,0(r2)
  84aa0c:	e0bff015 	stw	r2,-64(fp)
    while (pevent != (OS_EVENT *)0) {                   /* See if any events already available         */
  84aa10:	00008106 	br	84ac18 <OSEventPendMulti+0x3a0>
        switch (pevent->OSEventType) {
  84aa14:	e0bff017 	ldw	r2,-64(fp)
  84aa18:	10800003 	ldbu	r2,0(r2)
  84aa1c:	10803fcc 	andi	r2,r2,255
  84aa20:	10c000a0 	cmpeqi	r3,r2,2
  84aa24:	18003c1e 	bne	r3,zero,84ab18 <OSEventPendMulti+0x2a0>
  84aa28:	10c000e0 	cmpeqi	r3,r2,3
  84aa2c:	1800031e 	bne	r3,zero,84aa3c <OSEventPendMulti+0x1c4>
  84aa30:	10800060 	cmpeqi	r2,r2,1
  84aa34:	10001e1e 	bne	r2,zero,84aab0 <OSEventPendMulti+0x238>
  84aa38:	00006606 	br	84abd4 <OSEventPendMulti+0x35c>
#if (OS_SEM_EN > 0)
            case OS_EVENT_TYPE_SEM:
                 if (pevent->OSEventCnt > 0) {          /* If semaphore count > 0, resource available; */
  84aa3c:	e0bff017 	ldw	r2,-64(fp)
  84aa40:	1080020b 	ldhu	r2,8(r2)
  84aa44:	10bfffcc 	andi	r2,r2,65535
  84aa48:	10001526 	beq	r2,zero,84aaa0 <OSEventPendMulti+0x228>
                     pevent->OSEventCnt--;              /* ... decrement semaphore,                ... */
  84aa4c:	e0bff017 	ldw	r2,-64(fp)
  84aa50:	1080020b 	ldhu	r2,8(r2)
  84aa54:	10bfffc4 	addi	r2,r2,-1
  84aa58:	1007883a 	mov	r3,r2
  84aa5c:	e0bff017 	ldw	r2,-64(fp)
  84aa60:	10c0020d 	sth	r3,8(r2)
                    *pevents_rdy++ =  pevent;           /* ... and return available semaphore event    */
  84aa64:	e0bffd17 	ldw	r2,-12(fp)
  84aa68:	10c00104 	addi	r3,r2,4
  84aa6c:	e0fffd15 	stw	r3,-12(fp)
  84aa70:	e0fff017 	ldw	r3,-64(fp)
  84aa74:	10c00015 	stw	r3,0(r2)
                      events_rdy   =  OS_TRUE;
  84aa78:	00800044 	movi	r2,1
  84aa7c:	e0bff105 	stb	r2,-60(fp)
                    *pmsgs_rdy++   = (void *)0;         /* NO message returned  for semaphores         */
  84aa80:	e0bffe17 	ldw	r2,-8(fp)
  84aa84:	10c00104 	addi	r3,r2,4
  84aa88:	e0fffe15 	stw	r3,-8(fp)
  84aa8c:	10000015 	stw	zero,0(r2)
                      events_rdy_nbr++;
  84aa90:	e0bff18b 	ldhu	r2,-58(fp)
  84aa94:	10800044 	addi	r2,r2,1
  84aa98:	e0bff18d 	sth	r2,-58(fp)

                 } else {
                      events_stat |=  OS_STAT_SEM;      /* Configure multi-pend for semaphore events   */
                 }
                 break;
  84aa9c:	00005806 	br	84ac00 <OSEventPendMulti+0x388>
                      events_rdy   =  OS_TRUE;
                    *pmsgs_rdy++   = (void *)0;         /* NO message returned  for semaphores         */
                      events_rdy_nbr++;

                 } else {
                      events_stat |=  OS_STAT_SEM;      /* Configure multi-pend for semaphore events   */
  84aaa0:	e0bff203 	ldbu	r2,-56(fp)
  84aaa4:	10800054 	ori	r2,r2,1
  84aaa8:	e0bff205 	stb	r2,-56(fp)
                 }
                 break;
  84aaac:	00005406 	br	84ac00 <OSEventPendMulti+0x388>
#endif

#if (OS_MBOX_EN > 0)
            case OS_EVENT_TYPE_MBOX:
                 if (pevent->OSEventPtr != (void *)0) { /* If mailbox NOT empty;                   ... */
  84aab0:	e0bff017 	ldw	r2,-64(fp)
  84aab4:	10800117 	ldw	r2,4(r2)
  84aab8:	10001326 	beq	r2,zero,84ab08 <OSEventPendMulti+0x290>
                                                        /* ... return available message,           ... */
                    *pmsgs_rdy++         = (void *)pevent->OSEventPtr;
  84aabc:	e0bffe17 	ldw	r2,-8(fp)
  84aac0:	10c00104 	addi	r3,r2,4
  84aac4:	e0fffe15 	stw	r3,-8(fp)
  84aac8:	e0fff017 	ldw	r3,-64(fp)
  84aacc:	18c00117 	ldw	r3,4(r3)
  84aad0:	10c00015 	stw	r3,0(r2)
                     pevent->OSEventPtr  = (void *)0;
  84aad4:	e0bff017 	ldw	r2,-64(fp)
  84aad8:	10000115 	stw	zero,4(r2)
                    *pevents_rdy++       =  pevent;     /* ... and return available mailbox event      */
  84aadc:	e0bffd17 	ldw	r2,-12(fp)
  84aae0:	10c00104 	addi	r3,r2,4
  84aae4:	e0fffd15 	stw	r3,-12(fp)
  84aae8:	e0fff017 	ldw	r3,-64(fp)
  84aaec:	10c00015 	stw	r3,0(r2)
                      events_rdy         =  OS_TRUE;
  84aaf0:	00800044 	movi	r2,1
  84aaf4:	e0bff105 	stb	r2,-60(fp)
                      events_rdy_nbr++;
  84aaf8:	e0bff18b 	ldhu	r2,-58(fp)
  84aafc:	10800044 	addi	r2,r2,1
  84ab00:	e0bff18d 	sth	r2,-58(fp)

                 } else {
                      events_stat |= OS_STAT_MBOX;      /* Configure multi-pend for mailbox events     */
                 }
                 break;
  84ab04:	00003e06 	br	84ac00 <OSEventPendMulti+0x388>
                    *pevents_rdy++       =  pevent;     /* ... and return available mailbox event      */
                      events_rdy         =  OS_TRUE;
                      events_rdy_nbr++;

                 } else {
                      events_stat |= OS_STAT_MBOX;      /* Configure multi-pend for mailbox events     */
  84ab08:	e0bff203 	ldbu	r2,-56(fp)
  84ab0c:	10800094 	ori	r2,r2,2
  84ab10:	e0bff205 	stb	r2,-56(fp)
                 }
                 break;
  84ab14:	00003a06 	br	84ac00 <OSEventPendMulti+0x388>
#endif

#if ((OS_Q_EN > 0) && (OS_MAX_QS > 0))
            case OS_EVENT_TYPE_Q:
                 pq = (OS_Q *)pevent->OSEventPtr;
  84ab18:	e0bff017 	ldw	r2,-64(fp)
  84ab1c:	10800117 	ldw	r2,4(r2)
  84ab20:	e0bff515 	stw	r2,-44(fp)
                 if (pq->OSQEntries > 0) {              /* If queue NOT empty;                     ... */
  84ab24:	e0bff517 	ldw	r2,-44(fp)
  84ab28:	1080058b 	ldhu	r2,22(r2)
  84ab2c:	10bfffcc 	andi	r2,r2,65535
  84ab30:	10002426 	beq	r2,zero,84abc4 <OSEventPendMulti+0x34c>
                                                        /* ... return available message,           ... */
                    *pmsgs_rdy++ = (void *)*pq->OSQOut++;
  84ab34:	e0bffe17 	ldw	r2,-8(fp)
  84ab38:	10c00104 	addi	r3,r2,4
  84ab3c:	e0fffe15 	stw	r3,-8(fp)
  84ab40:	e0fff517 	ldw	r3,-44(fp)
  84ab44:	18c00417 	ldw	r3,16(r3)
  84ab48:	19400104 	addi	r5,r3,4
  84ab4c:	e13ff517 	ldw	r4,-44(fp)
  84ab50:	21400415 	stw	r5,16(r4)
  84ab54:	18c00017 	ldw	r3,0(r3)
  84ab58:	10c00015 	stw	r3,0(r2)
                     if (pq->OSQOut == pq->OSQEnd) {    /* If OUT ptr at queue end, ...                */
  84ab5c:	e0bff517 	ldw	r2,-44(fp)
  84ab60:	10c00417 	ldw	r3,16(r2)
  84ab64:	e0bff517 	ldw	r2,-44(fp)
  84ab68:	10800217 	ldw	r2,8(r2)
  84ab6c:	1880041e 	bne	r3,r2,84ab80 <OSEventPendMulti+0x308>
                         pq->OSQOut  = pq->OSQStart;    /* ... wrap   to queue start                   */
  84ab70:	e0bff517 	ldw	r2,-44(fp)
  84ab74:	10c00117 	ldw	r3,4(r2)
  84ab78:	e0bff517 	ldw	r2,-44(fp)
  84ab7c:	10c00415 	stw	r3,16(r2)
                     }
                     pq->OSQEntries--;                  /* Update number of queue entries              */
  84ab80:	e0bff517 	ldw	r2,-44(fp)
  84ab84:	1080058b 	ldhu	r2,22(r2)
  84ab88:	10bfffc4 	addi	r2,r2,-1
  84ab8c:	1007883a 	mov	r3,r2
  84ab90:	e0bff517 	ldw	r2,-44(fp)
  84ab94:	10c0058d 	sth	r3,22(r2)
                    *pevents_rdy++ = pevent;            /* ... and return available queue event        */
  84ab98:	e0bffd17 	ldw	r2,-12(fp)
  84ab9c:	10c00104 	addi	r3,r2,4
  84aba0:	e0fffd15 	stw	r3,-12(fp)
  84aba4:	e0fff017 	ldw	r3,-64(fp)
  84aba8:	10c00015 	stw	r3,0(r2)
                      events_rdy   = OS_TRUE;
  84abac:	00800044 	movi	r2,1
  84abb0:	e0bff105 	stb	r2,-60(fp)
                      events_rdy_nbr++;
  84abb4:	e0bff18b 	ldhu	r2,-58(fp)
  84abb8:	10800044 	addi	r2,r2,1
  84abbc:	e0bff18d 	sth	r2,-58(fp)

                 } else {
                      events_stat |= OS_STAT_Q;         /* Configure multi-pend for queue events       */
                 }
                 break;
  84abc0:	00000f06 	br	84ac00 <OSEventPendMulti+0x388>
                    *pevents_rdy++ = pevent;            /* ... and return available queue event        */
                      events_rdy   = OS_TRUE;
                      events_rdy_nbr++;

                 } else {
                      events_stat |= OS_STAT_Q;         /* Configure multi-pend for queue events       */
  84abc4:	e0bff203 	ldbu	r2,-56(fp)
  84abc8:	10800114 	ori	r2,r2,4
  84abcc:	e0bff205 	stb	r2,-56(fp)
                 }
                 break;
  84abd0:	00000b06 	br	84ac00 <OSEventPendMulti+0x388>
  84abd4:	e0bff317 	ldw	r2,-52(fp)
  84abd8:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84abdc:	e0bff417 	ldw	r2,-48(fp)
  84abe0:	1001703a 	wrctl	status,r2

            case OS_EVENT_TYPE_MUTEX:                                            
            case OS_EVENT_TYPE_FLAG:
            default:           
                 OS_EXIT_CRITICAL();
                *pevents_rdy = (OS_EVENT *)0;           /* NULL terminate return event array           */
  84abe4:	e0bffd17 	ldw	r2,-12(fp)
  84abe8:	10000015 	stw	zero,0(r2)
                *perr        =  OS_ERR_EVENT_TYPE;
  84abec:	e0800217 	ldw	r2,8(fp)
  84abf0:	00c00044 	movi	r3,1
  84abf4:	10c00005 	stb	r3,0(r2)
                 return (events_rdy_nbr);
  84abf8:	e0bff18b 	ldhu	r2,-58(fp)
  84abfc:	00009d06 	br	84ae74 <OSEventPendMulti+0x5fc>
        }
        pevents++;
  84ac00:	e0bfef17 	ldw	r2,-68(fp)
  84ac04:	10800104 	addi	r2,r2,4
  84ac08:	e0bfef15 	stw	r2,-68(fp)
        pevent = *pevents;
  84ac0c:	e0bfef17 	ldw	r2,-68(fp)
  84ac10:	10800017 	ldw	r2,0(r2)
  84ac14:	e0bff015 	stw	r2,-64(fp)
    events_rdy     =  OS_FALSE;
    events_rdy_nbr =  0;
    events_stat    =  OS_STAT_RDY;
    pevents        =  pevents_pend;
    pevent         = *pevents;
    while (pevent != (OS_EVENT *)0) {                   /* See if any events already available         */
  84ac18:	e0bff017 	ldw	r2,-64(fp)
  84ac1c:	103f7d1e 	bne	r2,zero,84aa14 <__alt_mem_epcs_flash_controller_0+0xff841a14>
        }
        pevents++;
        pevent = *pevents;
    }

    if ( events_rdy == OS_TRUE) {                       /* Return any events already available         */
  84ac20:	e0bff103 	ldbu	r2,-60(fp)
  84ac24:	10800058 	cmpnei	r2,r2,1
  84ac28:	10000a1e 	bne	r2,zero,84ac54 <OSEventPendMulti+0x3dc>
       *pevents_rdy = (OS_EVENT *)0;                    /* NULL terminate return event array           */
  84ac2c:	e0bffd17 	ldw	r2,-12(fp)
  84ac30:	10000015 	stw	zero,0(r2)
  84ac34:	e0bff317 	ldw	r2,-52(fp)
  84ac38:	e0bff615 	stw	r2,-40(fp)
  84ac3c:	e0bff617 	ldw	r2,-40(fp)
  84ac40:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
       *perr        =  OS_ERR_NONE;
  84ac44:	e0800217 	ldw	r2,8(fp)
  84ac48:	10000005 	stb	zero,0(r2)
        return (events_rdy_nbr);
  84ac4c:	e0bff18b 	ldhu	r2,-58(fp)
  84ac50:	00008806 	br	84ae74 <OSEventPendMulti+0x5fc>
    }
/*$PAGE*/
                                                        /* Otherwise, must wait until any event occurs */
    OSTCBCur->OSTCBStat     |= events_stat  |           /* Resource not available, ...                 */
  84ac54:	d0a0b217 	ldw	r2,-32056(gp)
  84ac58:	d0e0b217 	ldw	r3,-32056(gp)
  84ac5c:	19000c03 	ldbu	r4,48(r3)
  84ac60:	e0fff203 	ldbu	r3,-56(fp)
  84ac64:	20c6b03a 	or	r3,r4,r3
  84ac68:	1809883a 	mov	r4,r3
  84ac6c:	00ffe004 	movi	r3,-128
  84ac70:	20c6b03a 	or	r3,r4,r3
  84ac74:	10c00c05 	stb	r3,48(r2)
                               OS_STAT_MULTI;           /* ... pend on multiple events                 */
    OSTCBCur->OSTCBStatPend  = OS_STAT_PEND_OK;
  84ac78:	d0a0b217 	ldw	r2,-32056(gp)
  84ac7c:	10000c45 	stb	zero,49(r2)
    OSTCBCur->OSTCBDly       = timeout;                 /* Store pend timeout in TCB                   */
  84ac80:	d0a0b217 	ldw	r2,-32056(gp)
  84ac84:	e0ffff0b 	ldhu	r3,-4(fp)
  84ac88:	10c00b8d 	sth	r3,46(r2)
    OS_EventTaskWaitMulti(pevents_pend);                /* Suspend task until events or timeout occurs */
  84ac8c:	e13ffc17 	ldw	r4,-16(fp)
  84ac90:	084b7b40 	call	84b7b4 <OS_EventTaskWaitMulti>
  84ac94:	e0bff317 	ldw	r2,-52(fp)
  84ac98:	e0bff915 	stw	r2,-28(fp)
  84ac9c:	e0bff917 	ldw	r2,-28(fp)
  84aca0:	1001703a 	wrctl	status,r2

    OS_EXIT_CRITICAL();
    OS_Sched();                                         /* Find next highest priority task ready       */
  84aca4:	084bf580 	call	84bf58 <OS_Sched>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84aca8:	0005303a 	rdctl	r2,status
  84acac:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84acb0:	e0fff717 	ldw	r3,-36(fp)
  84acb4:	00bfff84 	movi	r2,-2
  84acb8:	1884703a 	and	r2,r3,r2
  84acbc:	1001703a 	wrctl	status,r2
  
  return context;
  84acc0:	e0bff717 	ldw	r2,-36(fp)
    OS_ENTER_CRITICAL();
  84acc4:	e0bff315 	stw	r2,-52(fp)

    switch (OSTCBCur->OSTCBStatPend) {                  /* Handle event posted, aborted, or timed-out  */
  84acc8:	d0a0b217 	ldw	r2,-32056(gp)
  84accc:	10800c43 	ldbu	r2,49(r2)
  84acd0:	10803fcc 	andi	r2,r2,255
  84acd4:	10000226 	beq	r2,zero,84ace0 <OSEventPendMulti+0x468>
  84acd8:	108000a0 	cmpeqi	r2,r2,2
  84acdc:	10001826 	beq	r2,zero,84ad40 <OSEventPendMulti+0x4c8>
        case OS_STAT_PEND_OK:
        case OS_STAT_PEND_ABORT:
             pevent = OSTCBCur->OSTCBEventPtr;
  84ace0:	d0a0b217 	ldw	r2,-32056(gp)
  84ace4:	10800717 	ldw	r2,28(r2)
  84ace8:	e0bff015 	stw	r2,-64(fp)
             if (pevent != (OS_EVENT *)0) {             /* If task event ptr != NULL, ...              */
  84acec:	e0bff017 	ldw	r2,-64(fp)
  84acf0:	10000b26 	beq	r2,zero,84ad20 <OSEventPendMulti+0x4a8>
                *pevents_rdy++ =  pevent;               /* ... return available event ...              */
  84acf4:	e0bffd17 	ldw	r2,-12(fp)
  84acf8:	10c00104 	addi	r3,r2,4
  84acfc:	e0fffd15 	stw	r3,-12(fp)
  84ad00:	e0fff017 	ldw	r3,-64(fp)
  84ad04:	10c00015 	stw	r3,0(r2)
                *pevents_rdy   = (OS_EVENT *)0;         /* ... & NULL terminate return event array     */
  84ad08:	e0bffd17 	ldw	r2,-12(fp)
  84ad0c:	10000015 	stw	zero,0(r2)
                  events_rdy_nbr++;
  84ad10:	e0bff18b 	ldhu	r2,-58(fp)
  84ad14:	10800044 	addi	r2,r2,1
  84ad18:	e0bff18d 	sth	r2,-58(fp)

             } else {                                   /* Else NO event available, handle as timeout  */
                 OSTCBCur->OSTCBStatPend = OS_STAT_PEND_TO;
                 OS_EventTaskRemoveMulti(OSTCBCur, pevents_pend);
             }
			 break;
  84ad1c:	00000d06 	br	84ad54 <OSEventPendMulti+0x4dc>
                *pevents_rdy++ =  pevent;               /* ... return available event ...              */
                *pevents_rdy   = (OS_EVENT *)0;         /* ... & NULL terminate return event array     */
                  events_rdy_nbr++;

             } else {                                   /* Else NO event available, handle as timeout  */
                 OSTCBCur->OSTCBStatPend = OS_STAT_PEND_TO;
  84ad20:	d0a0b217 	ldw	r2,-32056(gp)
  84ad24:	00c00044 	movi	r3,1
  84ad28:	10c00c45 	stb	r3,49(r2)
                 OS_EventTaskRemoveMulti(OSTCBCur, pevents_pend);
  84ad2c:	d0a0b217 	ldw	r2,-32056(gp)
  84ad30:	e17ffc17 	ldw	r5,-16(fp)
  84ad34:	1009883a 	mov	r4,r2
  84ad38:	084b9bc0 	call	84b9bc <OS_EventTaskRemoveMulti>
             }
			 break;
  84ad3c:	00000506 	br	84ad54 <OSEventPendMulti+0x4dc>

        case OS_STAT_PEND_TO:
        default:                                        /* ... remove task from events' wait lists     */
             OS_EventTaskRemoveMulti(OSTCBCur, pevents_pend);
  84ad40:	d0a0b217 	ldw	r2,-32056(gp)
  84ad44:	e17ffc17 	ldw	r5,-16(fp)
  84ad48:	1009883a 	mov	r4,r2
  84ad4c:	084b9bc0 	call	84b9bc <OS_EventTaskRemoveMulti>
             break;
  84ad50:	0001883a 	nop
    }

    switch (OSTCBCur->OSTCBStatPend) {
  84ad54:	d0a0b217 	ldw	r2,-32056(gp)
  84ad58:	10800c43 	ldbu	r2,49(r2)
  84ad5c:	10803fcc 	andi	r2,r2,255
  84ad60:	10000326 	beq	r2,zero,84ad70 <OSEventPendMulti+0x4f8>
  84ad64:	108000a0 	cmpeqi	r2,r2,2
  84ad68:	1000231e 	bne	r2,zero,84adf8 <OSEventPendMulti+0x580>
  84ad6c:	00002a06 	br	84ae18 <OSEventPendMulti+0x5a0>
        case OS_STAT_PEND_OK:
             switch (pevent->OSEventType) {             /* Return event's message                      */
  84ad70:	e0bff017 	ldw	r2,-64(fp)
  84ad74:	10800003 	ldbu	r2,0(r2)
  84ad78:	10803fcc 	andi	r2,r2,255
  84ad7c:	0080100e 	bge	zero,r2,84adc0 <OSEventPendMulti+0x548>
  84ad80:	10c000d0 	cmplti	r3,r2,3
  84ad84:	1800071e 	bne	r3,zero,84ada4 <OSEventPendMulti+0x52c>
  84ad88:	108000e0 	cmpeqi	r2,r2,3
  84ad8c:	10000c26 	beq	r2,zero,84adc0 <OSEventPendMulti+0x548>
#if (OS_SEM_EN > 0)
                 case OS_EVENT_TYPE_SEM:
                     *pmsgs_rdy++ = (void *)0;          /* NO message returned for semaphores          */
  84ad90:	e0bffe17 	ldw	r2,-8(fp)
  84ad94:	10c00104 	addi	r3,r2,4
  84ad98:	e0fffe15 	stw	r3,-8(fp)
  84ad9c:	10000015 	stw	zero,0(r2)
                      break;
  84ada0:	00001206 	br	84adec <OSEventPendMulti+0x574>

#if ((OS_MBOX_EN > 0) ||                 \
    ((OS_Q_EN    > 0) && (OS_MAX_QS > 0)))
                 case OS_EVENT_TYPE_MBOX:
                 case OS_EVENT_TYPE_Q:
                     *pmsgs_rdy++ = (void *)OSTCBCur->OSTCBMsg;     /* Return received message         */
  84ada4:	e0bffe17 	ldw	r2,-8(fp)
  84ada8:	10c00104 	addi	r3,r2,4
  84adac:	e0fffe15 	stw	r3,-8(fp)
  84adb0:	d0e0b217 	ldw	r3,-32056(gp)
  84adb4:	18c00917 	ldw	r3,36(r3)
  84adb8:	10c00015 	stw	r3,0(r2)
                      break;
  84adbc:	00000b06 	br	84adec <OSEventPendMulti+0x574>
  84adc0:	e0bff317 	ldw	r2,-52(fp)
  84adc4:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84adc8:	e0bff817 	ldw	r2,-32(fp)
  84adcc:	1001703a 	wrctl	status,r2

                 case OS_EVENT_TYPE_MUTEX:                                       
                 case OS_EVENT_TYPE_FLAG:
                 default:           
                      OS_EXIT_CRITICAL();
                     *pevents_rdy = (OS_EVENT *)0;      /* NULL terminate return event array           */
  84add0:	e0bffd17 	ldw	r2,-12(fp)
  84add4:	10000015 	stw	zero,0(r2)
                     *perr        =  OS_ERR_EVENT_TYPE;
  84add8:	e0800217 	ldw	r2,8(fp)
  84addc:	00c00044 	movi	r3,1
  84ade0:	10c00005 	stb	r3,0(r2)
                      return (events_rdy_nbr);
  84ade4:	e0bff18b 	ldhu	r2,-58(fp)
  84ade8:	00002206 	br	84ae74 <OSEventPendMulti+0x5fc>
             }
            *perr = OS_ERR_NONE;
  84adec:	e0800217 	ldw	r2,8(fp)
  84adf0:	10000005 	stb	zero,0(r2)
             break;
  84adf4:	00001006 	br	84ae38 <OSEventPendMulti+0x5c0>

        case OS_STAT_PEND_ABORT:
            *pmsgs_rdy++ = (void *)0;                   /* NO message returned for abort               */
  84adf8:	e0bffe17 	ldw	r2,-8(fp)
  84adfc:	10c00104 	addi	r3,r2,4
  84ae00:	e0fffe15 	stw	r3,-8(fp)
  84ae04:	10000015 	stw	zero,0(r2)
            *perr        =  OS_ERR_PEND_ABORT;          /* Indicate that event  aborted                */
  84ae08:	e0800217 	ldw	r2,8(fp)
  84ae0c:	00c00384 	movi	r3,14
  84ae10:	10c00005 	stb	r3,0(r2)
             break;
  84ae14:	00000806 	br	84ae38 <OSEventPendMulti+0x5c0>
                                                        
        case OS_STAT_PEND_TO:                                                
        default:        
            *pmsgs_rdy++ = (void *)0;                   /* NO message returned for timeout             */
  84ae18:	e0bffe17 	ldw	r2,-8(fp)
  84ae1c:	10c00104 	addi	r3,r2,4
  84ae20:	e0fffe15 	stw	r3,-8(fp)
  84ae24:	10000015 	stw	zero,0(r2)
            *perr        =  OS_ERR_TIMEOUT;             /* Indicate that events timed out              */
  84ae28:	e0800217 	ldw	r2,8(fp)
  84ae2c:	00c00284 	movi	r3,10
  84ae30:	10c00005 	stb	r3,0(r2)
             break;
  84ae34:	0001883a 	nop
    }

    OSTCBCur->OSTCBStat          =  OS_STAT_RDY;        /* Set   task  status to ready                 */
  84ae38:	d0a0b217 	ldw	r2,-32056(gp)
  84ae3c:	10000c05 	stb	zero,48(r2)
    OSTCBCur->OSTCBStatPend      =  OS_STAT_PEND_OK;    /* Clear pend  status                          */
  84ae40:	d0a0b217 	ldw	r2,-32056(gp)
  84ae44:	10000c45 	stb	zero,49(r2)
    OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;      /* Clear event pointers                        */
  84ae48:	d0a0b217 	ldw	r2,-32056(gp)
  84ae4c:	10000715 	stw	zero,28(r2)
    OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)0;
  84ae50:	d0a0b217 	ldw	r2,-32056(gp)
  84ae54:	10000815 	stw	zero,32(r2)
    OSTCBCur->OSTCBMsg           = (void      *)0;      /* Clear task  message                         */
  84ae58:	d0a0b217 	ldw	r2,-32056(gp)
  84ae5c:	10000915 	stw	zero,36(r2)
  84ae60:	e0bff317 	ldw	r2,-52(fp)
  84ae64:	e0bffa15 	stw	r2,-24(fp)
  84ae68:	e0bffa17 	ldw	r2,-24(fp)
  84ae6c:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();

    return (events_rdy_nbr);
  84ae70:	e0bff18b 	ldhu	r2,-58(fp)
}
  84ae74:	e037883a 	mov	sp,fp
  84ae78:	dfc00117 	ldw	ra,4(sp)
  84ae7c:	df000017 	ldw	fp,0(sp)
  84ae80:	dec00204 	addi	sp,sp,8
  84ae84:	f800283a 	ret

0084ae88 <OSInit>:
* Returns    : none
*********************************************************************************************************
*/

void  OSInit (void)
{
  84ae88:	defffe04 	addi	sp,sp,-8
  84ae8c:	dfc00115 	stw	ra,4(sp)
  84ae90:	df000015 	stw	fp,0(sp)
  84ae94:	d839883a 	mov	fp,sp
    OSInitHookBegin();                                           /* Call port specific initialization code   */
  84ae98:	085678c0 	call	85678c <OSInitHookBegin>

    OS_InitMisc();                                               /* Initialize miscellaneous variables       */
  84ae9c:	084bc040 	call	84bc04 <OS_InitMisc>

    OS_InitRdyList();                                            /* Initialize the Ready List                */
  84aea0:	084bc4c0 	call	84bc4c <OS_InitRdyList>

    OS_InitTCBList();                                            /* Initialize the free list of OS_TCBs      */
  84aea4:	084bdb80 	call	84bdb8 <OS_InitTCBList>

    OS_InitEventList();                                          /* Initialize the free list of OS_EVENTs    */
  84aea8:	084bb240 	call	84bb24 <OS_InitEventList>

#if (OS_FLAG_EN > 0) && (OS_MAX_FLAGS > 0)
    OS_FlagInit();                                               /* Initialize the event flag structures     */
  84aeac:	084dc580 	call	84dc58 <OS_FlagInit>
#endif

#if (OS_MEM_EN > 0) && (OS_MAX_MEM_PART > 0)
    OS_MemInit();                                                /* Initialize the memory manager            */
  84aeb0:	084e5580 	call	84e558 <OS_MemInit>
#endif

#if (OS_Q_EN > 0) && (OS_MAX_QS > 0)
    OS_QInit();                                                  /* Initialize the message queue structures  */
  84aeb4:	084f68c0 	call	84f68c <OS_QInit>
#endif

    OS_InitTaskIdle();                                           /* Create the Idle Task                     */
  84aeb8:	084bcb80 	call	84bcb8 <OS_InitTaskIdle>
#if OS_TASK_STAT_EN > 0
    OS_InitTaskStat();                                           /* Create the Statistic Task                */
  84aebc:	084bd380 	call	84bd38 <OS_InitTaskStat>

#if OS_TMR_EN > 0
    OSTmr_Init();                                                /* Initialize the Timer Manager             */
#endif

    OSInitHookEnd();                                             /* Call port specific init. code            */
  84aec0:	08567ac0 	call	8567ac <OSInitHookEnd>

#if OS_DEBUG_EN > 0
    OSDebugInit();
  84aec4:	084c62c0 	call	84c62c <OSDebugInit>
#endif
}
  84aec8:	0001883a 	nop
  84aecc:	e037883a 	mov	sp,fp
  84aed0:	dfc00117 	ldw	ra,4(sp)
  84aed4:	df000017 	ldw	fp,0(sp)
  84aed8:	dec00204 	addi	sp,sp,8
  84aedc:	f800283a 	ret

0084aee0 <OSIntEnter>:
*              5) You are allowed to nest interrupts up to 255 levels deep.
*********************************************************************************************************
*/

void  OSIntEnter (void)
{
  84aee0:	deffff04 	addi	sp,sp,-4
  84aee4:	df000015 	stw	fp,0(sp)
  84aee8:	d839883a 	mov	fp,sp
    if (OSRunning == OS_TRUE) {
  84aeec:	d0a0a343 	ldbu	r2,-32115(gp)
  84aef0:	10803fcc 	andi	r2,r2,255
  84aef4:	10800058 	cmpnei	r2,r2,1
  84aef8:	1000071e 	bne	r2,zero,84af18 <OSIntEnter+0x38>
        if (OSIntNesting < 255u) {
  84aefc:	d0a0b103 	ldbu	r2,-32060(gp)
  84af00:	10803fcc 	andi	r2,r2,255
  84af04:	10803fe0 	cmpeqi	r2,r2,255
  84af08:	1000031e 	bne	r2,zero,84af18 <OSIntEnter+0x38>
            OSIntNesting++;                      /* Increment ISR nesting level                        */
  84af0c:	d0a0b103 	ldbu	r2,-32060(gp)
  84af10:	10800044 	addi	r2,r2,1
  84af14:	d0a0b105 	stb	r2,-32060(gp)
        }
    }
}
  84af18:	0001883a 	nop
  84af1c:	e037883a 	mov	sp,fp
  84af20:	df000017 	ldw	fp,0(sp)
  84af24:	dec00104 	addi	sp,sp,4
  84af28:	f800283a 	ret

0084af2c <OSIntExit>:
*              2) Rescheduling is prevented when the scheduler is locked (see OS_SchedLock())
*********************************************************************************************************
*/

void  OSIntExit (void)
{
  84af2c:	defffb04 	addi	sp,sp,-20
  84af30:	dfc00415 	stw	ra,16(sp)
  84af34:	df000315 	stw	fp,12(sp)
  84af38:	df000304 	addi	fp,sp,12
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  84af3c:	e03ffd15 	stw	zero,-12(fp)
#endif



    if (OSRunning == OS_TRUE) {
  84af40:	d0a0a343 	ldbu	r2,-32115(gp)
  84af44:	10803fcc 	andi	r2,r2,255
  84af48:	10800058 	cmpnei	r2,r2,1
  84af4c:	10002f1e 	bne	r2,zero,84b00c <OSIntExit+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84af50:	0005303a 	rdctl	r2,status
  84af54:	e0bfff15 	stw	r2,-4(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84af58:	e0ffff17 	ldw	r3,-4(fp)
  84af5c:	00bfff84 	movi	r2,-2
  84af60:	1884703a 	and	r2,r3,r2
  84af64:	1001703a 	wrctl	status,r2
  
  return context;
  84af68:	e0bfff17 	ldw	r2,-4(fp)
        OS_ENTER_CRITICAL();
  84af6c:	e0bffd15 	stw	r2,-12(fp)
        if (OSIntNesting > 0) {                            /* Prevent OSIntNesting from wrapping       */
  84af70:	d0a0b103 	ldbu	r2,-32060(gp)
  84af74:	10803fcc 	andi	r2,r2,255
  84af78:	10000326 	beq	r2,zero,84af88 <OSIntExit+0x5c>
            OSIntNesting--;
  84af7c:	d0a0b103 	ldbu	r2,-32060(gp)
  84af80:	10bfffc4 	addi	r2,r2,-1
  84af84:	d0a0b105 	stb	r2,-32060(gp)
        }
        if (OSIntNesting == 0) {                           /* Reschedule only if all ISRs complete ... */
  84af88:	d0a0b103 	ldbu	r2,-32060(gp)
  84af8c:	10803fcc 	andi	r2,r2,255
  84af90:	10001a1e 	bne	r2,zero,84affc <OSIntExit+0xd0>
            if (OSLockNesting == 0) {                      /* ... and not locked.                      */
  84af94:	d0a0a303 	ldbu	r2,-32116(gp)
  84af98:	10803fcc 	andi	r2,r2,255
  84af9c:	1000171e 	bne	r2,zero,84affc <OSIntExit+0xd0>
                OS_SchedNew();
  84afa0:	084c0280 	call	84c028 <OS_SchedNew>
                if (OSPrioHighRdy != OSPrioCur) {          /* No Ctx Sw if current task is highest rdy */
  84afa4:	d0e0a503 	ldbu	r3,-32108(gp)
  84afa8:	d0a0a543 	ldbu	r2,-32107(gp)
  84afac:	18c03fcc 	andi	r3,r3,255
  84afb0:	10803fcc 	andi	r2,r2,255
  84afb4:	18801126 	beq	r3,r2,84affc <OSIntExit+0xd0>
                    OSTCBHighRdy  = OSTCBPrioTbl[OSPrioHighRdy];
  84afb8:	d0a0a503 	ldbu	r2,-32108(gp)
  84afbc:	10c03fcc 	andi	r3,r2,255
  84afc0:	008021b4 	movhi	r2,134
  84afc4:	10950304 	addi	r2,r2,21516
  84afc8:	18c7883a 	add	r3,r3,r3
  84afcc:	18c7883a 	add	r3,r3,r3
  84afd0:	10c5883a 	add	r2,r2,r3
  84afd4:	10800017 	ldw	r2,0(r2)
  84afd8:	d0a0ad15 	stw	r2,-32076(gp)
#if OS_TASK_PROFILE_EN > 0
                    OSTCBHighRdy->OSTCBCtxSwCtr++;         /* Inc. # of context switches to this task  */
  84afdc:	d0a0ad17 	ldw	r2,-32076(gp)
  84afe0:	10c00e17 	ldw	r3,56(r2)
  84afe4:	18c00044 	addi	r3,r3,1
  84afe8:	10c00e15 	stw	r3,56(r2)
#endif
                    OSCtxSwCtr++;                          /* Keep track of the number of ctx switches */
  84afec:	d0a0a817 	ldw	r2,-32096(gp)
  84aff0:	10800044 	addi	r2,r2,1
  84aff4:	d0a0a815 	stw	r2,-32096(gp)
                    OSIntCtxSw();                          /* Perform interrupt level ctx switch       */
  84aff8:	08564b80 	call	8564b8 <OSCtxSw>
  84affc:	e0bffd17 	ldw	r2,-12(fp)
  84b000:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84b004:	e0bffe17 	ldw	r2,-8(fp)
  84b008:	1001703a 	wrctl	status,r2
                }
            }
        }
        OS_EXIT_CRITICAL();
    }
}
  84b00c:	0001883a 	nop
  84b010:	e037883a 	mov	sp,fp
  84b014:	dfc00117 	ldw	ra,4(sp)
  84b018:	df000017 	ldw	fp,0(sp)
  84b01c:	dec00204 	addi	sp,sp,8
  84b020:	f800283a 	ret

0084b024 <OSSchedLock>:
*********************************************************************************************************
*/

#if OS_SCHED_LOCK_EN > 0
void  OSSchedLock (void)
{
  84b024:	defffc04 	addi	sp,sp,-16
  84b028:	df000315 	stw	fp,12(sp)
  84b02c:	df000304 	addi	fp,sp,12
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84b030:	e03ffd15 	stw	zero,-12(fp)
#endif



    if (OSRunning == OS_TRUE) {                  /* Make sure multitasking is running                  */
  84b034:	d0a0a343 	ldbu	r2,-32115(gp)
  84b038:	10803fcc 	andi	r2,r2,255
  84b03c:	10800058 	cmpnei	r2,r2,1
  84b040:	1000161e 	bne	r2,zero,84b09c <OSSchedLock+0x78>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84b044:	0005303a 	rdctl	r2,status
  84b048:	e0bfff15 	stw	r2,-4(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84b04c:	e0ffff17 	ldw	r3,-4(fp)
  84b050:	00bfff84 	movi	r2,-2
  84b054:	1884703a 	and	r2,r3,r2
  84b058:	1001703a 	wrctl	status,r2
  
  return context;
  84b05c:	e0bfff17 	ldw	r2,-4(fp)
        OS_ENTER_CRITICAL();
  84b060:	e0bffd15 	stw	r2,-12(fp)
        if (OSIntNesting == 0) {                 /* Can't call from an ISR                             */
  84b064:	d0a0b103 	ldbu	r2,-32060(gp)
  84b068:	10803fcc 	andi	r2,r2,255
  84b06c:	1000071e 	bne	r2,zero,84b08c <OSSchedLock+0x68>
            if (OSLockNesting < 255u) {          /* Prevent OSLockNesting from wrapping back to 0      */
  84b070:	d0a0a303 	ldbu	r2,-32116(gp)
  84b074:	10803fcc 	andi	r2,r2,255
  84b078:	10803fe0 	cmpeqi	r2,r2,255
  84b07c:	1000031e 	bne	r2,zero,84b08c <OSSchedLock+0x68>
                OSLockNesting++;                 /* Increment lock nesting level                       */
  84b080:	d0a0a303 	ldbu	r2,-32116(gp)
  84b084:	10800044 	addi	r2,r2,1
  84b088:	d0a0a305 	stb	r2,-32116(gp)
  84b08c:	e0bffd17 	ldw	r2,-12(fp)
  84b090:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84b094:	e0bffe17 	ldw	r2,-8(fp)
  84b098:	1001703a 	wrctl	status,r2
            }
        }
        OS_EXIT_CRITICAL();
    }
}
  84b09c:	0001883a 	nop
  84b0a0:	e037883a 	mov	sp,fp
  84b0a4:	df000017 	ldw	fp,0(sp)
  84b0a8:	dec00104 	addi	sp,sp,4
  84b0ac:	f800283a 	ret

0084b0b0 <OSSchedUnlock>:
*********************************************************************************************************
*/

#if OS_SCHED_LOCK_EN > 0
void  OSSchedUnlock (void)
{
  84b0b0:	defff804 	addi	sp,sp,-32
  84b0b4:	dfc00715 	stw	ra,28(sp)
  84b0b8:	df000615 	stw	fp,24(sp)
  84b0bc:	df000604 	addi	fp,sp,24
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  84b0c0:	e03ffa15 	stw	zero,-24(fp)
#endif



    if (OSRunning == OS_TRUE) {                            /* Make sure multitasking is running        */
  84b0c4:	d0a0a343 	ldbu	r2,-32115(gp)
  84b0c8:	10803fcc 	andi	r2,r2,255
  84b0cc:	10800058 	cmpnei	r2,r2,1
  84b0d0:	1000281e 	bne	r2,zero,84b174 <OSSchedUnlock+0xc4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84b0d4:	0005303a 	rdctl	r2,status
  84b0d8:	e0bfff15 	stw	r2,-4(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84b0dc:	e0ffff17 	ldw	r3,-4(fp)
  84b0e0:	00bfff84 	movi	r2,-2
  84b0e4:	1884703a 	and	r2,r3,r2
  84b0e8:	1001703a 	wrctl	status,r2
  
  return context;
  84b0ec:	e0bfff17 	ldw	r2,-4(fp)
        OS_ENTER_CRITICAL();
  84b0f0:	e0bffa15 	stw	r2,-24(fp)
        if (OSLockNesting > 0) {                           /* Do not decrement if already 0            */
  84b0f4:	d0a0a303 	ldbu	r2,-32116(gp)
  84b0f8:	10803fcc 	andi	r2,r2,255
  84b0fc:	10001926 	beq	r2,zero,84b164 <OSSchedUnlock+0xb4>
            OSLockNesting--;                               /* Decrement lock nesting level             */
  84b100:	d0a0a303 	ldbu	r2,-32116(gp)
  84b104:	10bfffc4 	addi	r2,r2,-1
  84b108:	d0a0a305 	stb	r2,-32116(gp)
            if (OSLockNesting == 0) {                      /* See if scheduler is enabled and ...      */
  84b10c:	d0a0a303 	ldbu	r2,-32116(gp)
  84b110:	10803fcc 	andi	r2,r2,255
  84b114:	10000e1e 	bne	r2,zero,84b150 <OSSchedUnlock+0xa0>
                if (OSIntNesting == 0) {                   /* ... not in an ISR                        */
  84b118:	d0a0b103 	ldbu	r2,-32060(gp)
  84b11c:	10803fcc 	andi	r2,r2,255
  84b120:	1000061e 	bne	r2,zero,84b13c <OSSchedUnlock+0x8c>
  84b124:	e0bffa17 	ldw	r2,-24(fp)
  84b128:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84b12c:	e0bffb17 	ldw	r2,-20(fp)
  84b130:	1001703a 	wrctl	status,r2
                    OS_EXIT_CRITICAL();
                    OS_Sched();                            /* See if a HPT is ready                    */
  84b134:	084bf580 	call	84bf58 <OS_Sched>
            }
        } else {
            OS_EXIT_CRITICAL();
        }
    }
}
  84b138:	00000e06 	br	84b174 <OSSchedUnlock+0xc4>
  84b13c:	e0bffa17 	ldw	r2,-24(fp)
  84b140:	e0bffc15 	stw	r2,-16(fp)
  84b144:	e0bffc17 	ldw	r2,-16(fp)
  84b148:	1001703a 	wrctl	status,r2
  84b14c:	00000906 	br	84b174 <OSSchedUnlock+0xc4>
  84b150:	e0bffa17 	ldw	r2,-24(fp)
  84b154:	e0bffd15 	stw	r2,-12(fp)
  84b158:	e0bffd17 	ldw	r2,-12(fp)
  84b15c:	1001703a 	wrctl	status,r2
  84b160:	00000406 	br	84b174 <OSSchedUnlock+0xc4>
  84b164:	e0bffa17 	ldw	r2,-24(fp)
  84b168:	e0bffe15 	stw	r2,-8(fp)
  84b16c:	e0bffe17 	ldw	r2,-8(fp)
  84b170:	1001703a 	wrctl	status,r2
  84b174:	0001883a 	nop
  84b178:	e037883a 	mov	sp,fp
  84b17c:	dfc00117 	ldw	ra,4(sp)
  84b180:	df000017 	ldw	fp,0(sp)
  84b184:	dec00204 	addi	sp,sp,8
  84b188:	f800283a 	ret

0084b18c <OSStart>:
*                 d_ Execute the task.
*********************************************************************************************************
*/

void  OSStart (void)
{
  84b18c:	defffe04 	addi	sp,sp,-8
  84b190:	dfc00115 	stw	ra,4(sp)
  84b194:	df000015 	stw	fp,0(sp)
  84b198:	d839883a 	mov	fp,sp
    if (OSRunning == OS_FALSE) {
  84b19c:	d0a0a343 	ldbu	r2,-32115(gp)
  84b1a0:	10803fcc 	andi	r2,r2,255
  84b1a4:	10000f1e 	bne	r2,zero,84b1e4 <OSStart+0x58>
        OS_SchedNew();                               /* Find highest priority's task priority number   */
  84b1a8:	084c0280 	call	84c028 <OS_SchedNew>
        OSPrioCur     = OSPrioHighRdy;
  84b1ac:	d0a0a503 	ldbu	r2,-32108(gp)
  84b1b0:	d0a0a545 	stb	r2,-32107(gp)
        OSTCBHighRdy  = OSTCBPrioTbl[OSPrioHighRdy]; /* Point to highest priority task ready to run    */
  84b1b4:	d0a0a503 	ldbu	r2,-32108(gp)
  84b1b8:	10c03fcc 	andi	r3,r2,255
  84b1bc:	008021b4 	movhi	r2,134
  84b1c0:	10950304 	addi	r2,r2,21516
  84b1c4:	18c7883a 	add	r3,r3,r3
  84b1c8:	18c7883a 	add	r3,r3,r3
  84b1cc:	10c5883a 	add	r2,r2,r3
  84b1d0:	10800017 	ldw	r2,0(r2)
  84b1d4:	d0a0ad15 	stw	r2,-32076(gp)
        OSTCBCur      = OSTCBHighRdy;
  84b1d8:	d0a0ad17 	ldw	r2,-32076(gp)
  84b1dc:	d0a0b215 	stw	r2,-32056(gp)
        OSStartHighRdy();                            /* Execute target specific code to start task     */
  84b1e0:	08565440 	call	856544 <OSStartHighRdy>
    }
}
  84b1e4:	0001883a 	nop
  84b1e8:	e037883a 	mov	sp,fp
  84b1ec:	dfc00117 	ldw	ra,4(sp)
  84b1f0:	df000017 	ldw	fp,0(sp)
  84b1f4:	dec00204 	addi	sp,sp,8
  84b1f8:	f800283a 	ret

0084b1fc <OSStatInit>:
*********************************************************************************************************
*/

#if OS_TASK_STAT_EN > 0
void  OSStatInit (void)
{
  84b1fc:	defff904 	addi	sp,sp,-28
  84b200:	dfc00615 	stw	ra,24(sp)
  84b204:	df000515 	stw	fp,20(sp)
  84b208:	df000504 	addi	fp,sp,20
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84b20c:	e03ffb15 	stw	zero,-20(fp)
#endif



    OSTimeDly(2);                                /* Synchronize with clock tick                        */
  84b210:	01000084 	movi	r4,2
  84b214:	08519000 	call	851900 <OSTimeDly>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84b218:	0005303a 	rdctl	r2,status
  84b21c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84b220:	e0fffc17 	ldw	r3,-16(fp)
  84b224:	00bfff84 	movi	r2,-2
  84b228:	1884703a 	and	r2,r3,r2
  84b22c:	1001703a 	wrctl	status,r2
  
  return context;
  84b230:	e0bffc17 	ldw	r2,-16(fp)
    OS_ENTER_CRITICAL();
  84b234:	e0bffb15 	stw	r2,-20(fp)
    OSIdleCtr    = 0L;                           /* Clear idle counter                                 */
  84b238:	d020a415 	stw	zero,-32112(gp)
  84b23c:	e0bffb17 	ldw	r2,-20(fp)
  84b240:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84b244:	e0bffd17 	ldw	r2,-12(fp)
  84b248:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    OSTimeDly(OS_TICKS_PER_SEC / 10);            /* Determine MAX. idle counter value for 1/10 second  */
  84b24c:	01001904 	movi	r4,100
  84b250:	08519000 	call	851900 <OSTimeDly>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84b254:	0005303a 	rdctl	r2,status
  84b258:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84b25c:	e0fffe17 	ldw	r3,-8(fp)
  84b260:	00bfff84 	movi	r2,-2
  84b264:	1884703a 	and	r2,r3,r2
  84b268:	1001703a 	wrctl	status,r2
  
  return context;
  84b26c:	e0bffe17 	ldw	r2,-8(fp)
    OS_ENTER_CRITICAL();
  84b270:	e0bffb15 	stw	r2,-20(fp)
    OSIdleCtrMax = OSIdleCtr;                    /* Store maximum idle counter count in 1/10 second    */
  84b274:	d0a0a417 	ldw	r2,-32112(gp)
  84b278:	d0a0a915 	stw	r2,-32092(gp)
    OSStatRdy    = OS_TRUE;
  84b27c:	00800044 	movi	r2,1
  84b280:	d0a0b505 	stb	r2,-32044(gp)
  84b284:	e0bffb17 	ldw	r2,-20(fp)
  84b288:	e0bfff15 	stw	r2,-4(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84b28c:	e0bfff17 	ldw	r2,-4(fp)
  84b290:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
}
  84b294:	0001883a 	nop
  84b298:	e037883a 	mov	sp,fp
  84b29c:	dfc00117 	ldw	ra,4(sp)
  84b2a0:	df000017 	ldw	fp,0(sp)
  84b2a4:	dec00204 	addi	sp,sp,8
  84b2a8:	f800283a 	ret

0084b2ac <OSTimeTick>:
* Returns    : none
*********************************************************************************************************
*/

void  OSTimeTick (void)
{
  84b2ac:	defff704 	addi	sp,sp,-36
  84b2b0:	dfc00815 	stw	ra,32(sp)
  84b2b4:	df000715 	stw	fp,28(sp)
  84b2b8:	df000704 	addi	fp,sp,28
    OS_TCB    *ptcb;
#if OS_TICK_STEP_EN > 0
    BOOLEAN    step;
#endif
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register     */
    OS_CPU_SR  cpu_sr = 0;
  84b2bc:	e03ffb15 	stw	zero,-20(fp)
#endif



#if OS_TIME_TICK_HOOK_EN > 0
    OSTimeTickHook();                                      /* Call user definable hook                     */
  84b2c0:	085676c0 	call	85676c <OSTimeTickHook>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84b2c4:	0005303a 	rdctl	r2,status
  84b2c8:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84b2cc:	e0fffd17 	ldw	r3,-12(fp)
  84b2d0:	00bfff84 	movi	r2,-2
  84b2d4:	1884703a 	and	r2,r3,r2
  84b2d8:	1001703a 	wrctl	status,r2
  
  return context;
  84b2dc:	e0bffd17 	ldw	r2,-12(fp)
#endif
#if OS_TIME_GET_SET_EN > 0
    OS_ENTER_CRITICAL();                                   /* Update the 32-bit tick counter               */
  84b2e0:	e0bffb15 	stw	r2,-20(fp)
    OSTime++;
  84b2e4:	d0a0b317 	ldw	r2,-32052(gp)
  84b2e8:	10800044 	addi	r2,r2,1
  84b2ec:	d0a0b315 	stw	r2,-32052(gp)
  84b2f0:	e0bffb17 	ldw	r2,-20(fp)
  84b2f4:	e0bfff15 	stw	r2,-4(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84b2f8:	e0bfff17 	ldw	r2,-4(fp)
  84b2fc:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
#endif
    if (OSRunning == OS_TRUE) {
  84b300:	d0a0a343 	ldbu	r2,-32115(gp)
  84b304:	10803fcc 	andi	r2,r2,255
  84b308:	10800058 	cmpnei	r2,r2,1
  84b30c:	10006a1e 	bne	r2,zero,84b4b8 <OSTimeTick+0x20c>
#if OS_TICK_STEP_EN > 0
        switch (OSTickStepState) {                         /* Determine whether we need to process a tick  */
  84b310:	d0a0a703 	ldbu	r2,-32100(gp)
  84b314:	10803fcc 	andi	r2,r2,255
  84b318:	10c00060 	cmpeqi	r3,r2,1
  84b31c:	1800061e 	bne	r3,zero,84b338 <OSTimeTick+0x8c>
  84b320:	10c000a0 	cmpeqi	r3,r2,2
  84b324:	1800061e 	bne	r3,zero,84b340 <OSTimeTick+0x94>
  84b328:	10000a1e 	bne	r2,zero,84b354 <OSTimeTick+0xa8>
            case OS_TICK_STEP_DIS:                         /* Yes, stepping is disabled                    */
                 step = OS_TRUE;
  84b32c:	00800044 	movi	r2,1
  84b330:	e0bffa05 	stb	r2,-24(fp)
                 break;
  84b334:	00000b06 	br	84b364 <OSTimeTick+0xb8>

            case OS_TICK_STEP_WAIT:                        /* No,  waiting for uC/OS-View to set ...       */
                 step = OS_FALSE;                          /*      .. OSTickStepState to OS_TICK_STEP_ONCE */
  84b338:	e03ffa05 	stb	zero,-24(fp)
                 break;
  84b33c:	00000906 	br	84b364 <OSTimeTick+0xb8>

            case OS_TICK_STEP_ONCE:                        /* Yes, process tick once and wait for next ... */
                 step            = OS_TRUE;                /*      ... step command from uC/OS-View        */
  84b340:	00800044 	movi	r2,1
  84b344:	e0bffa05 	stb	r2,-24(fp)
                 OSTickStepState = OS_TICK_STEP_WAIT;
  84b348:	00800044 	movi	r2,1
  84b34c:	d0a0a705 	stb	r2,-32100(gp)
                 break;
  84b350:	00000406 	br	84b364 <OSTimeTick+0xb8>

            default:                                       /* Invalid case, correct situation              */
                 step            = OS_TRUE;
  84b354:	00800044 	movi	r2,1
  84b358:	e0bffa05 	stb	r2,-24(fp)
                 OSTickStepState = OS_TICK_STEP_DIS;
  84b35c:	d020a705 	stb	zero,-32100(gp)
                 break;
  84b360:	0001883a 	nop
        }
        if (step == OS_FALSE) {                            /* Return if waiting for step command           */
  84b364:	e0bffa03 	ldbu	r2,-24(fp)
  84b368:	10005226 	beq	r2,zero,84b4b4 <OSTimeTick+0x208>
            return;
        }
#endif
        ptcb = OSTCBList;                                  /* Point at first TCB in TCB list               */
  84b36c:	d0a0a617 	ldw	r2,-32104(gp)
  84b370:	e0bff915 	stw	r2,-28(fp)
        while (ptcb->OSTCBPrio != OS_TASK_IDLE_PRIO) {     /* Go through all TCBs in TCB list              */
  84b374:	00004906 	br	84b49c <OSTimeTick+0x1f0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84b378:	0005303a 	rdctl	r2,status
  84b37c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84b380:	e0fffc17 	ldw	r3,-16(fp)
  84b384:	00bfff84 	movi	r2,-2
  84b388:	1884703a 	and	r2,r3,r2
  84b38c:	1001703a 	wrctl	status,r2
  
  return context;
  84b390:	e0bffc17 	ldw	r2,-16(fp)
            OS_ENTER_CRITICAL();
  84b394:	e0bffb15 	stw	r2,-20(fp)
            if (ptcb->OSTCBDly != 0) {                     /* No, Delayed or waiting for event with TO     */
  84b398:	e0bff917 	ldw	r2,-28(fp)
  84b39c:	10800b8b 	ldhu	r2,46(r2)
  84b3a0:	10bfffcc 	andi	r2,r2,65535
  84b3a4:	10003626 	beq	r2,zero,84b480 <OSTimeTick+0x1d4>
                if (--ptcb->OSTCBDly == 0) {               /* Decrement nbr of ticks to end of delay       */
  84b3a8:	e0bff917 	ldw	r2,-28(fp)
  84b3ac:	10800b8b 	ldhu	r2,46(r2)
  84b3b0:	10bfffc4 	addi	r2,r2,-1
  84b3b4:	1007883a 	mov	r3,r2
  84b3b8:	e0bff917 	ldw	r2,-28(fp)
  84b3bc:	10c00b8d 	sth	r3,46(r2)
  84b3c0:	e0bff917 	ldw	r2,-28(fp)
  84b3c4:	10800b8b 	ldhu	r2,46(r2)
  84b3c8:	10bfffcc 	andi	r2,r2,65535
  84b3cc:	10002c1e 	bne	r2,zero,84b480 <OSTimeTick+0x1d4>
                                                           /* Check for timeout                            */
                    if ((ptcb->OSTCBStat & OS_STAT_PEND_ANY) != OS_STAT_RDY) {
  84b3d0:	e0bff917 	ldw	r2,-28(fp)
  84b3d4:	10800c03 	ldbu	r2,48(r2)
  84b3d8:	10803fcc 	andi	r2,r2,255
  84b3dc:	10800dcc 	andi	r2,r2,55
  84b3e0:	10000b26 	beq	r2,zero,84b410 <OSTimeTick+0x164>
                        ptcb->OSTCBStat  &= ~(INT8U)OS_STAT_PEND_ANY;          /* Yes, Clear status flag   */
  84b3e4:	e0bff917 	ldw	r2,-28(fp)
  84b3e8:	10c00c03 	ldbu	r3,48(r2)
  84b3ec:	00bff204 	movi	r2,-56
  84b3f0:	1884703a 	and	r2,r3,r2
  84b3f4:	1007883a 	mov	r3,r2
  84b3f8:	e0bff917 	ldw	r2,-28(fp)
  84b3fc:	10c00c05 	stb	r3,48(r2)
                        ptcb->OSTCBStatPend = OS_STAT_PEND_TO;                 /* Indicate PEND timeout    */
  84b400:	e0bff917 	ldw	r2,-28(fp)
  84b404:	00c00044 	movi	r3,1
  84b408:	10c00c45 	stb	r3,49(r2)
  84b40c:	00000206 	br	84b418 <OSTimeTick+0x16c>
                    } else {
                        ptcb->OSTCBStatPend = OS_STAT_PEND_OK;
  84b410:	e0bff917 	ldw	r2,-28(fp)
  84b414:	10000c45 	stb	zero,49(r2)
                    }

                    if ((ptcb->OSTCBStat & OS_STAT_SUSPEND) == OS_STAT_RDY) {  /* Is task suspended?       */
  84b418:	e0bff917 	ldw	r2,-28(fp)
  84b41c:	10800c03 	ldbu	r2,48(r2)
  84b420:	10803fcc 	andi	r2,r2,255
  84b424:	1080020c 	andi	r2,r2,8
  84b428:	1000151e 	bne	r2,zero,84b480 <OSTimeTick+0x1d4>
                        OSRdyGrp               |= ptcb->OSTCBBitY;             /* No,  Make ready          */
  84b42c:	e0bff917 	ldw	r2,-28(fp)
  84b430:	10c00d83 	ldbu	r3,54(r2)
  84b434:	d0a0af03 	ldbu	r2,-32068(gp)
  84b438:	1884b03a 	or	r2,r3,r2
  84b43c:	d0a0af05 	stb	r2,-32068(gp)
                        OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
  84b440:	e0bff917 	ldw	r2,-28(fp)
  84b444:	10800d03 	ldbu	r2,52(r2)
  84b448:	10c03fcc 	andi	r3,r2,255
  84b44c:	e0bff917 	ldw	r2,-28(fp)
  84b450:	10800d03 	ldbu	r2,52(r2)
  84b454:	11003fcc 	andi	r4,r2,255
  84b458:	d0a0af44 	addi	r2,gp,-32067
  84b45c:	2085883a 	add	r2,r4,r2
  84b460:	11000003 	ldbu	r4,0(r2)
  84b464:	e0bff917 	ldw	r2,-28(fp)
  84b468:	10800d43 	ldbu	r2,53(r2)
  84b46c:	2084b03a 	or	r2,r4,r2
  84b470:	1009883a 	mov	r4,r2
  84b474:	d0a0af44 	addi	r2,gp,-32067
  84b478:	1885883a 	add	r2,r3,r2
  84b47c:	11000005 	stb	r4,0(r2)
                    }
                }
            }
            ptcb = ptcb->OSTCBNext;                        /* Point at next TCB in TCB list                */
  84b480:	e0bff917 	ldw	r2,-28(fp)
  84b484:	10800517 	ldw	r2,20(r2)
  84b488:	e0bff915 	stw	r2,-28(fp)
  84b48c:	e0bffb17 	ldw	r2,-20(fp)
  84b490:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84b494:	e0bffe17 	ldw	r2,-8(fp)
  84b498:	1001703a 	wrctl	status,r2
        if (step == OS_FALSE) {                            /* Return if waiting for step command           */
            return;
        }
#endif
        ptcb = OSTCBList;                                  /* Point at first TCB in TCB list               */
        while (ptcb->OSTCBPrio != OS_TASK_IDLE_PRIO) {     /* Go through all TCBs in TCB list              */
  84b49c:	e0bff917 	ldw	r2,-28(fp)
  84b4a0:	10800c83 	ldbu	r2,50(r2)
  84b4a4:	10803fcc 	andi	r2,r2,255
  84b4a8:	10800518 	cmpnei	r2,r2,20
  84b4ac:	103fb21e 	bne	r2,zero,84b378 <__alt_mem_epcs_flash_controller_0+0xff842378>
  84b4b0:	00000106 	br	84b4b8 <OSTimeTick+0x20c>
                 step            = OS_TRUE;
                 OSTickStepState = OS_TICK_STEP_DIS;
                 break;
        }
        if (step == OS_FALSE) {                            /* Return if waiting for step command           */
            return;
  84b4b4:	0001883a 	nop
            }
            ptcb = ptcb->OSTCBNext;                        /* Point at next TCB in TCB list                */
            OS_EXIT_CRITICAL();
        }
    }
}
  84b4b8:	e037883a 	mov	sp,fp
  84b4bc:	dfc00117 	ldw	ra,4(sp)
  84b4c0:	df000017 	ldw	fp,0(sp)
  84b4c4:	dec00204 	addi	sp,sp,8
  84b4c8:	f800283a 	ret

0084b4cc <OSVersion>:
* Returns    : the version number of uC/OS-II multiplied by 100.
*********************************************************************************************************
*/

INT16U  OSVersion (void)
{
  84b4cc:	deffff04 	addi	sp,sp,-4
  84b4d0:	df000015 	stw	fp,0(sp)
  84b4d4:	d839883a 	mov	fp,sp
    return (OS_VERSION);
  84b4d8:	00804784 	movi	r2,286
}
  84b4dc:	e037883a 	mov	sp,fp
  84b4e0:	df000017 	ldw	fp,0(sp)
  84b4e4:	dec00104 	addi	sp,sp,4
  84b4e8:	f800283a 	ret

0084b4ec <OS_Dummy>:
*********************************************************************************************************
*/

#if OS_TASK_DEL_EN > 0
void  OS_Dummy (void)
{
  84b4ec:	deffff04 	addi	sp,sp,-4
  84b4f0:	df000015 	stw	fp,0(sp)
  84b4f4:	d839883a 	mov	fp,sp
}
  84b4f8:	0001883a 	nop
  84b4fc:	e037883a 	mov	sp,fp
  84b500:	df000017 	ldw	fp,0(sp)
  84b504:	dec00104 	addi	sp,sp,4
  84b508:	f800283a 	ret

0084b50c <OS_EventTaskRdy>:
* Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/
#if (OS_EVENT_EN)
INT8U  OS_EventTaskRdy (OS_EVENT *pevent, void *pmsg, INT8U msk, INT8U pend_stat)
{
  84b50c:	defff804 	addi	sp,sp,-32
  84b510:	dfc00715 	stw	ra,28(sp)
  84b514:	df000615 	stw	fp,24(sp)
  84b518:	df000604 	addi	fp,sp,24
  84b51c:	e13ffc15 	stw	r4,-16(fp)
  84b520:	e17ffd15 	stw	r5,-12(fp)
  84b524:	3007883a 	mov	r3,r6
  84b528:	3805883a 	mov	r2,r7
  84b52c:	e0fffe05 	stb	r3,-8(fp)
  84b530:	e0bfff05 	stb	r2,-4(fp)
    INT16U  *ptbl;
#endif


#if OS_LOWEST_PRIO <= 63
    y    = OSUnMapTbl[pevent->OSEventGrp];              /* Find HPT waiting for message                */
  84b534:	e0bffc17 	ldw	r2,-16(fp)
  84b538:	10800283 	ldbu	r2,10(r2)
  84b53c:	10c03fcc 	andi	r3,r2,255
  84b540:	008021b4 	movhi	r2,134
  84b544:	10a5c604 	addi	r2,r2,-26856
  84b548:	10c5883a 	add	r2,r2,r3
  84b54c:	10800003 	ldbu	r2,0(r2)
  84b550:	e0bffa05 	stb	r2,-24(fp)
    x    = OSUnMapTbl[pevent->OSEventTbl[y]];
  84b554:	e0bffa03 	ldbu	r2,-24(fp)
  84b558:	e0fffc17 	ldw	r3,-16(fp)
  84b55c:	1885883a 	add	r2,r3,r2
  84b560:	108002c4 	addi	r2,r2,11
  84b564:	10800003 	ldbu	r2,0(r2)
  84b568:	10c03fcc 	andi	r3,r2,255
  84b56c:	008021b4 	movhi	r2,134
  84b570:	10a5c604 	addi	r2,r2,-26856
  84b574:	10c5883a 	add	r2,r2,r3
  84b578:	10800003 	ldbu	r2,0(r2)
  84b57c:	e0bffa45 	stb	r2,-23(fp)
    prio = (INT8U)((y << 3) + x);                       /* Find priority of task getting the msg       */
  84b580:	e0bffa03 	ldbu	r2,-24(fp)
  84b584:	100490fa 	slli	r2,r2,3
  84b588:	1007883a 	mov	r3,r2
  84b58c:	e0bffa43 	ldbu	r2,-23(fp)
  84b590:	1885883a 	add	r2,r3,r2
  84b594:	e0bffa85 	stb	r2,-22(fp)
        x = OSUnMapTbl[(*ptbl >> 8) & 0xFF] + 8;
    }
    prio = (INT8U)((y << 4) + x);                       /* Find priority of task getting the msg       */
#endif

    ptcb                  =  OSTCBPrioTbl[prio];        /* Point to this task's OS_TCB                 */
  84b598:	e0fffa83 	ldbu	r3,-22(fp)
  84b59c:	008021b4 	movhi	r2,134
  84b5a0:	10950304 	addi	r2,r2,21516
  84b5a4:	18c7883a 	add	r3,r3,r3
  84b5a8:	18c7883a 	add	r3,r3,r3
  84b5ac:	10c5883a 	add	r2,r2,r3
  84b5b0:	10800017 	ldw	r2,0(r2)
  84b5b4:	e0bffb15 	stw	r2,-20(fp)
    ptcb->OSTCBDly        =  0;                         /* Prevent OSTimeTick() from readying task     */
  84b5b8:	e0bffb17 	ldw	r2,-20(fp)
  84b5bc:	10000b8d 	sth	zero,46(r2)
#if ((OS_Q_EN > 0) && (OS_MAX_QS > 0)) || (OS_MBOX_EN > 0)
    ptcb->OSTCBMsg        =  pmsg;                      /* Send message directly to waiting task       */
  84b5c0:	e0bffb17 	ldw	r2,-20(fp)
  84b5c4:	e0fffd17 	ldw	r3,-12(fp)
  84b5c8:	10c00915 	stw	r3,36(r2)
#else
    pmsg                  =  pmsg;                      /* Prevent compiler warning if not used        */
#endif
    ptcb->OSTCBStat      &= ~msk;                       /* Clear bit associated with event type        */
  84b5cc:	e0bffb17 	ldw	r2,-20(fp)
  84b5d0:	10800c03 	ldbu	r2,48(r2)
  84b5d4:	1007883a 	mov	r3,r2
  84b5d8:	e0bffe03 	ldbu	r2,-8(fp)
  84b5dc:	0084303a 	nor	r2,zero,r2
  84b5e0:	1884703a 	and	r2,r3,r2
  84b5e4:	1007883a 	mov	r3,r2
  84b5e8:	e0bffb17 	ldw	r2,-20(fp)
  84b5ec:	10c00c05 	stb	r3,48(r2)
    ptcb->OSTCBStatPend   =  pend_stat;                 /* Set pend status of post or abort            */
  84b5f0:	e0bffb17 	ldw	r2,-20(fp)
  84b5f4:	e0ffff03 	ldbu	r3,-4(fp)
  84b5f8:	10c00c45 	stb	r3,49(r2)
                                                        /* See if task is ready (could be susp'd)      */
    if ((ptcb->OSTCBStat &   OS_STAT_SUSPEND) == OS_STAT_RDY) {
  84b5fc:	e0bffb17 	ldw	r2,-20(fp)
  84b600:	10800c03 	ldbu	r2,48(r2)
  84b604:	10803fcc 	andi	r2,r2,255
  84b608:	1080020c 	andi	r2,r2,8
  84b60c:	1000111e 	bne	r2,zero,84b654 <OS_EventTaskRdy+0x148>
        OSRdyGrp         |=  ptcb->OSTCBBitY;           /* Put task in the ready to run list           */
  84b610:	e0bffb17 	ldw	r2,-20(fp)
  84b614:	10c00d83 	ldbu	r3,54(r2)
  84b618:	d0a0af03 	ldbu	r2,-32068(gp)
  84b61c:	1884b03a 	or	r2,r3,r2
  84b620:	d0a0af05 	stb	r2,-32068(gp)
        OSRdyTbl[y]      |=  ptcb->OSTCBBitX;
  84b624:	e0fffa03 	ldbu	r3,-24(fp)
  84b628:	e13ffa03 	ldbu	r4,-24(fp)
  84b62c:	d0a0af44 	addi	r2,gp,-32067
  84b630:	2085883a 	add	r2,r4,r2
  84b634:	11000003 	ldbu	r4,0(r2)
  84b638:	e0bffb17 	ldw	r2,-20(fp)
  84b63c:	10800d43 	ldbu	r2,53(r2)
  84b640:	2084b03a 	or	r2,r4,r2
  84b644:	1009883a 	mov	r4,r2
  84b648:	d0a0af44 	addi	r2,gp,-32067
  84b64c:	1885883a 	add	r2,r3,r2
  84b650:	11000005 	stb	r4,0(r2)
    }

    OS_EventTaskRemove(ptcb, pevent);                   /* Remove this task from event   wait list     */
  84b654:	e17ffc17 	ldw	r5,-16(fp)
  84b658:	e13ffb17 	ldw	r4,-20(fp)
  84b65c:	084b9040 	call	84b904 <OS_EventTaskRemove>
#if (OS_EVENT_MULTI_EN > 0)
    if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {   /* Remove this task from events' wait lists    */
  84b660:	e0bffb17 	ldw	r2,-20(fp)
  84b664:	10800817 	ldw	r2,32(r2)
  84b668:	10000826 	beq	r2,zero,84b68c <OS_EventTaskRdy+0x180>
        OS_EventTaskRemoveMulti(ptcb, ptcb->OSTCBEventMultiPtr);
  84b66c:	e0bffb17 	ldw	r2,-20(fp)
  84b670:	10800817 	ldw	r2,32(r2)
  84b674:	100b883a 	mov	r5,r2
  84b678:	e13ffb17 	ldw	r4,-20(fp)
  84b67c:	084b9bc0 	call	84b9bc <OS_EventTaskRemoveMulti>
        ptcb->OSTCBEventPtr       = (OS_EVENT  *)pevent;/* Return event as first multi-pend event ready*/
  84b680:	e0bffb17 	ldw	r2,-20(fp)
  84b684:	e0fffc17 	ldw	r3,-16(fp)
  84b688:	10c00715 	stw	r3,28(r2)
    }
#endif

    return (prio);
  84b68c:	e0bffa83 	ldbu	r2,-22(fp)
}
  84b690:	e037883a 	mov	sp,fp
  84b694:	dfc00117 	ldw	ra,4(sp)
  84b698:	df000017 	ldw	fp,0(sp)
  84b69c:	dec00204 	addi	sp,sp,8
  84b6a0:	f800283a 	ret

0084b6a4 <OS_EventTaskWait>:
* Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/
#if (OS_EVENT_EN)
void  OS_EventTaskWait (OS_EVENT *pevent)
{
  84b6a4:	defffd04 	addi	sp,sp,-12
  84b6a8:	df000215 	stw	fp,8(sp)
  84b6ac:	df000204 	addi	fp,sp,8
  84b6b0:	e13fff15 	stw	r4,-4(fp)
    INT8U  y;


    OSTCBCur->OSTCBEventPtr               = pevent;                 /* Store ptr to ECB in TCB         */
  84b6b4:	d0a0b217 	ldw	r2,-32056(gp)
  84b6b8:	e0ffff17 	ldw	r3,-4(fp)
  84b6bc:	10c00715 	stw	r3,28(r2)

    pevent->OSEventTbl[OSTCBCur->OSTCBY] |= OSTCBCur->OSTCBBitX;    /* Put task in waiting list        */
  84b6c0:	d0a0b217 	ldw	r2,-32056(gp)
  84b6c4:	10800d03 	ldbu	r2,52(r2)
  84b6c8:	10803fcc 	andi	r2,r2,255
  84b6cc:	d0e0b217 	ldw	r3,-32056(gp)
  84b6d0:	18c00d03 	ldbu	r3,52(r3)
  84b6d4:	18c03fcc 	andi	r3,r3,255
  84b6d8:	e13fff17 	ldw	r4,-4(fp)
  84b6dc:	20c7883a 	add	r3,r4,r3
  84b6e0:	18c002c4 	addi	r3,r3,11
  84b6e4:	19000003 	ldbu	r4,0(r3)
  84b6e8:	d0e0b217 	ldw	r3,-32056(gp)
  84b6ec:	18c00d43 	ldbu	r3,53(r3)
  84b6f0:	20c6b03a 	or	r3,r4,r3
  84b6f4:	1809883a 	mov	r4,r3
  84b6f8:	e0ffff17 	ldw	r3,-4(fp)
  84b6fc:	1885883a 	add	r2,r3,r2
  84b700:	108002c4 	addi	r2,r2,11
  84b704:	11000005 	stb	r4,0(r2)
    pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
  84b708:	e0bfff17 	ldw	r2,-4(fp)
  84b70c:	10c00283 	ldbu	r3,10(r2)
  84b710:	d0a0b217 	ldw	r2,-32056(gp)
  84b714:	10800d83 	ldbu	r2,54(r2)
  84b718:	1884b03a 	or	r2,r3,r2
  84b71c:	1007883a 	mov	r3,r2
  84b720:	e0bfff17 	ldw	r2,-4(fp)
  84b724:	10c00285 	stb	r3,10(r2)

    y             =  OSTCBCur->OSTCBY;            /* Task no longer ready                              */
  84b728:	d0a0b217 	ldw	r2,-32056(gp)
  84b72c:	10800d03 	ldbu	r2,52(r2)
  84b730:	e0bffe05 	stb	r2,-8(fp)
    OSRdyTbl[y]  &= ~OSTCBCur->OSTCBBitX;
  84b734:	e0fffe03 	ldbu	r3,-8(fp)
  84b738:	e13ffe03 	ldbu	r4,-8(fp)
  84b73c:	d0a0af44 	addi	r2,gp,-32067
  84b740:	2085883a 	add	r2,r4,r2
  84b744:	10800003 	ldbu	r2,0(r2)
  84b748:	1009883a 	mov	r4,r2
  84b74c:	d0a0b217 	ldw	r2,-32056(gp)
  84b750:	10800d43 	ldbu	r2,53(r2)
  84b754:	0084303a 	nor	r2,zero,r2
  84b758:	2084703a 	and	r2,r4,r2
  84b75c:	1009883a 	mov	r4,r2
  84b760:	d0a0af44 	addi	r2,gp,-32067
  84b764:	1885883a 	add	r2,r3,r2
  84b768:	11000005 	stb	r4,0(r2)
    if (OSRdyTbl[y] == 0) {
  84b76c:	e0fffe03 	ldbu	r3,-8(fp)
  84b770:	d0a0af44 	addi	r2,gp,-32067
  84b774:	1885883a 	add	r2,r3,r2
  84b778:	10800003 	ldbu	r2,0(r2)
  84b77c:	10803fcc 	andi	r2,r2,255
  84b780:	1000071e 	bne	r2,zero,84b7a0 <OS_EventTaskWait+0xfc>
        OSRdyGrp &= ~OSTCBCur->OSTCBBitY;         /* Clear event grp bit if this was only task pending */
  84b784:	d0a0b217 	ldw	r2,-32056(gp)
  84b788:	10800d83 	ldbu	r2,54(r2)
  84b78c:	0084303a 	nor	r2,zero,r2
  84b790:	1007883a 	mov	r3,r2
  84b794:	d0a0af03 	ldbu	r2,-32068(gp)
  84b798:	1884703a 	and	r2,r3,r2
  84b79c:	d0a0af05 	stb	r2,-32068(gp)
    }
}
  84b7a0:	0001883a 	nop
  84b7a4:	e037883a 	mov	sp,fp
  84b7a8:	df000017 	ldw	fp,0(sp)
  84b7ac:	dec00104 	addi	sp,sp,4
  84b7b0:	f800283a 	ret

0084b7b4 <OS_EventTaskWaitMulti>:
* Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/
#if ((OS_EVENT_EN) && (OS_EVENT_MULTI_EN > 0))
void  OS_EventTaskWaitMulti (OS_EVENT **pevents_wait)
{
  84b7b4:	defffb04 	addi	sp,sp,-20
  84b7b8:	df000415 	stw	fp,16(sp)
  84b7bc:	df000404 	addi	fp,sp,16
  84b7c0:	e13fff15 	stw	r4,-4(fp)
    OS_EVENT **pevents;
    OS_EVENT  *pevent;
    INT8U      y;


    OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;
  84b7c4:	d0a0b217 	ldw	r2,-32056(gp)
  84b7c8:	10000715 	stw	zero,28(r2)
    OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)pevents_wait;       /* Store ptr to ECBs in TCB        */
  84b7cc:	d0a0b217 	ldw	r2,-32056(gp)
  84b7d0:	e0ffff17 	ldw	r3,-4(fp)
  84b7d4:	10c00815 	stw	r3,32(r2)

    pevents =  pevents_wait;
  84b7d8:	e0bfff17 	ldw	r2,-4(fp)
  84b7dc:	e0bffc15 	stw	r2,-16(fp)
    pevent  = *pevents;
  84b7e0:	e0bffc17 	ldw	r2,-16(fp)
  84b7e4:	10800017 	ldw	r2,0(r2)
  84b7e8:	e0bffd15 	stw	r2,-12(fp)
    while (pevent != (OS_EVENT *)0) {                               /* Put task in waiting lists       */
  84b7ec:	00002006 	br	84b870 <OS_EventTaskWaitMulti+0xbc>
        pevent->OSEventTbl[OSTCBCur->OSTCBY] |= OSTCBCur->OSTCBBitX;
  84b7f0:	d0a0b217 	ldw	r2,-32056(gp)
  84b7f4:	10800d03 	ldbu	r2,52(r2)
  84b7f8:	10803fcc 	andi	r2,r2,255
  84b7fc:	d0e0b217 	ldw	r3,-32056(gp)
  84b800:	18c00d03 	ldbu	r3,52(r3)
  84b804:	18c03fcc 	andi	r3,r3,255
  84b808:	e13ffd17 	ldw	r4,-12(fp)
  84b80c:	20c7883a 	add	r3,r4,r3
  84b810:	18c002c4 	addi	r3,r3,11
  84b814:	19000003 	ldbu	r4,0(r3)
  84b818:	d0e0b217 	ldw	r3,-32056(gp)
  84b81c:	18c00d43 	ldbu	r3,53(r3)
  84b820:	20c6b03a 	or	r3,r4,r3
  84b824:	1809883a 	mov	r4,r3
  84b828:	e0fffd17 	ldw	r3,-12(fp)
  84b82c:	1885883a 	add	r2,r3,r2
  84b830:	108002c4 	addi	r2,r2,11
  84b834:	11000005 	stb	r4,0(r2)
        pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
  84b838:	e0bffd17 	ldw	r2,-12(fp)
  84b83c:	10c00283 	ldbu	r3,10(r2)
  84b840:	d0a0b217 	ldw	r2,-32056(gp)
  84b844:	10800d83 	ldbu	r2,54(r2)
  84b848:	1884b03a 	or	r2,r3,r2
  84b84c:	1007883a 	mov	r3,r2
  84b850:	e0bffd17 	ldw	r2,-12(fp)
  84b854:	10c00285 	stb	r3,10(r2)
        pevents++;
  84b858:	e0bffc17 	ldw	r2,-16(fp)
  84b85c:	10800104 	addi	r2,r2,4
  84b860:	e0bffc15 	stw	r2,-16(fp)
        pevent = *pevents;
  84b864:	e0bffc17 	ldw	r2,-16(fp)
  84b868:	10800017 	ldw	r2,0(r2)
  84b86c:	e0bffd15 	stw	r2,-12(fp)
    OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;
    OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)pevents_wait;       /* Store ptr to ECBs in TCB        */

    pevents =  pevents_wait;
    pevent  = *pevents;
    while (pevent != (OS_EVENT *)0) {                               /* Put task in waiting lists       */
  84b870:	e0bffd17 	ldw	r2,-12(fp)
  84b874:	103fde1e 	bne	r2,zero,84b7f0 <__alt_mem_epcs_flash_controller_0+0xff8427f0>
        pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
        pevents++;
        pevent = *pevents;
    }

    y             =  OSTCBCur->OSTCBY;            /* Task no longer ready                              */
  84b878:	d0a0b217 	ldw	r2,-32056(gp)
  84b87c:	10800d03 	ldbu	r2,52(r2)
  84b880:	e0bffe05 	stb	r2,-8(fp)
    OSRdyTbl[y]  &= ~OSTCBCur->OSTCBBitX;
  84b884:	e0fffe03 	ldbu	r3,-8(fp)
  84b888:	e13ffe03 	ldbu	r4,-8(fp)
  84b88c:	d0a0af44 	addi	r2,gp,-32067
  84b890:	2085883a 	add	r2,r4,r2
  84b894:	10800003 	ldbu	r2,0(r2)
  84b898:	1009883a 	mov	r4,r2
  84b89c:	d0a0b217 	ldw	r2,-32056(gp)
  84b8a0:	10800d43 	ldbu	r2,53(r2)
  84b8a4:	0084303a 	nor	r2,zero,r2
  84b8a8:	2084703a 	and	r2,r4,r2
  84b8ac:	1009883a 	mov	r4,r2
  84b8b0:	d0a0af44 	addi	r2,gp,-32067
  84b8b4:	1885883a 	add	r2,r3,r2
  84b8b8:	11000005 	stb	r4,0(r2)
    if (OSRdyTbl[y] == 0) {
  84b8bc:	e0fffe03 	ldbu	r3,-8(fp)
  84b8c0:	d0a0af44 	addi	r2,gp,-32067
  84b8c4:	1885883a 	add	r2,r3,r2
  84b8c8:	10800003 	ldbu	r2,0(r2)
  84b8cc:	10803fcc 	andi	r2,r2,255
  84b8d0:	1000071e 	bne	r2,zero,84b8f0 <OS_EventTaskWaitMulti+0x13c>
        OSRdyGrp &= ~OSTCBCur->OSTCBBitY;         /* Clear event grp bit if this was only task pending */
  84b8d4:	d0a0b217 	ldw	r2,-32056(gp)
  84b8d8:	10800d83 	ldbu	r2,54(r2)
  84b8dc:	0084303a 	nor	r2,zero,r2
  84b8e0:	1007883a 	mov	r3,r2
  84b8e4:	d0a0af03 	ldbu	r2,-32068(gp)
  84b8e8:	1884703a 	and	r2,r3,r2
  84b8ec:	d0a0af05 	stb	r2,-32068(gp)
    }
}
  84b8f0:	0001883a 	nop
  84b8f4:	e037883a 	mov	sp,fp
  84b8f8:	df000017 	ldw	fp,0(sp)
  84b8fc:	dec00104 	addi	sp,sp,4
  84b900:	f800283a 	ret

0084b904 <OS_EventTaskRemove>:
*********************************************************************************************************
*/
#if (OS_EVENT_EN)
void  OS_EventTaskRemove (OS_TCB   *ptcb,
                          OS_EVENT *pevent)
{
  84b904:	defffc04 	addi	sp,sp,-16
  84b908:	df000315 	stw	fp,12(sp)
  84b90c:	df000304 	addi	fp,sp,12
  84b910:	e13ffe15 	stw	r4,-8(fp)
  84b914:	e17fff15 	stw	r5,-4(fp)
    INT8U  y;


    y                       =  ptcb->OSTCBY;
  84b918:	e0bffe17 	ldw	r2,-8(fp)
  84b91c:	10800d03 	ldbu	r2,52(r2)
  84b920:	e0bffd05 	stb	r2,-12(fp)
    pevent->OSEventTbl[y]  &= ~ptcb->OSTCBBitX;         /* Remove task from wait list                  */
  84b924:	e0bffd03 	ldbu	r2,-12(fp)
  84b928:	e0fffd03 	ldbu	r3,-12(fp)
  84b92c:	e13fff17 	ldw	r4,-4(fp)
  84b930:	20c7883a 	add	r3,r4,r3
  84b934:	18c002c4 	addi	r3,r3,11
  84b938:	18c00003 	ldbu	r3,0(r3)
  84b93c:	1809883a 	mov	r4,r3
  84b940:	e0fffe17 	ldw	r3,-8(fp)
  84b944:	18c00d43 	ldbu	r3,53(r3)
  84b948:	00c6303a 	nor	r3,zero,r3
  84b94c:	20c6703a 	and	r3,r4,r3
  84b950:	1809883a 	mov	r4,r3
  84b954:	e0ffff17 	ldw	r3,-4(fp)
  84b958:	1885883a 	add	r2,r3,r2
  84b95c:	108002c4 	addi	r2,r2,11
  84b960:	11000005 	stb	r4,0(r2)
    if (pevent->OSEventTbl[y] == 0) {
  84b964:	e0bffd03 	ldbu	r2,-12(fp)
  84b968:	e0ffff17 	ldw	r3,-4(fp)
  84b96c:	1885883a 	add	r2,r3,r2
  84b970:	108002c4 	addi	r2,r2,11
  84b974:	10800003 	ldbu	r2,0(r2)
  84b978:	10803fcc 	andi	r2,r2,255
  84b97c:	10000a1e 	bne	r2,zero,84b9a8 <OS_EventTaskRemove+0xa4>
        pevent->OSEventGrp &= ~ptcb->OSTCBBitY;
  84b980:	e0bfff17 	ldw	r2,-4(fp)
  84b984:	10800283 	ldbu	r2,10(r2)
  84b988:	1007883a 	mov	r3,r2
  84b98c:	e0bffe17 	ldw	r2,-8(fp)
  84b990:	10800d83 	ldbu	r2,54(r2)
  84b994:	0084303a 	nor	r2,zero,r2
  84b998:	1884703a 	and	r2,r3,r2
  84b99c:	1007883a 	mov	r3,r2
  84b9a0:	e0bfff17 	ldw	r2,-4(fp)
  84b9a4:	10c00285 	stb	r3,10(r2)
    }
}
  84b9a8:	0001883a 	nop
  84b9ac:	e037883a 	mov	sp,fp
  84b9b0:	df000017 	ldw	fp,0(sp)
  84b9b4:	dec00104 	addi	sp,sp,4
  84b9b8:	f800283a 	ret

0084b9bc <OS_EventTaskRemoveMulti>:
*********************************************************************************************************
*/
#if ((OS_EVENT_EN) && (OS_EVENT_MULTI_EN > 0))
void  OS_EventTaskRemoveMulti (OS_TCB    *ptcb,
                               OS_EVENT **pevents_multi)
{
  84b9bc:	defffa04 	addi	sp,sp,-24
  84b9c0:	df000515 	stw	fp,20(sp)
  84b9c4:	df000504 	addi	fp,sp,20
  84b9c8:	e13ffe15 	stw	r4,-8(fp)
  84b9cc:	e17fff15 	stw	r5,-4(fp)
    INT16U     bity;
    INT16U     bitx;
#endif


    y       =  ptcb->OSTCBY;
  84b9d0:	e0bffe17 	ldw	r2,-8(fp)
  84b9d4:	10800d03 	ldbu	r2,52(r2)
  84b9d8:	e0bffd05 	stb	r2,-12(fp)
    bity    =  ptcb->OSTCBBitY;
  84b9dc:	e0bffe17 	ldw	r2,-8(fp)
  84b9e0:	10800d83 	ldbu	r2,54(r2)
  84b9e4:	e0bffd45 	stb	r2,-11(fp)
    bitx    =  ptcb->OSTCBBitX;
  84b9e8:	e0bffe17 	ldw	r2,-8(fp)
  84b9ec:	10800d43 	ldbu	r2,53(r2)
  84b9f0:	e0bffd85 	stb	r2,-10(fp)
    pevents =  pevents_multi;
  84b9f4:	e0bfff17 	ldw	r2,-4(fp)
  84b9f8:	e0bffb15 	stw	r2,-20(fp)
    pevent  = *pevents;
  84b9fc:	e0bffb17 	ldw	r2,-20(fp)
  84ba00:	10800017 	ldw	r2,0(r2)
  84ba04:	e0bffc15 	stw	r2,-16(fp)
    while (pevent != (OS_EVENT *)0) {                   /* Remove task from all events' wait lists     */
  84ba08:	00002506 	br	84baa0 <OS_EventTaskRemoveMulti+0xe4>
        pevent->OSEventTbl[y]  &= ~bitx;
  84ba0c:	e0bffd03 	ldbu	r2,-12(fp)
  84ba10:	e0fffd03 	ldbu	r3,-12(fp)
  84ba14:	e13ffc17 	ldw	r4,-16(fp)
  84ba18:	20c7883a 	add	r3,r4,r3
  84ba1c:	18c002c4 	addi	r3,r3,11
  84ba20:	18c00003 	ldbu	r3,0(r3)
  84ba24:	1809883a 	mov	r4,r3
  84ba28:	e0fffd83 	ldbu	r3,-10(fp)
  84ba2c:	00c6303a 	nor	r3,zero,r3
  84ba30:	20c6703a 	and	r3,r4,r3
  84ba34:	1809883a 	mov	r4,r3
  84ba38:	e0fffc17 	ldw	r3,-16(fp)
  84ba3c:	1885883a 	add	r2,r3,r2
  84ba40:	108002c4 	addi	r2,r2,11
  84ba44:	11000005 	stb	r4,0(r2)
        if (pevent->OSEventTbl[y] == 0) {
  84ba48:	e0bffd03 	ldbu	r2,-12(fp)
  84ba4c:	e0fffc17 	ldw	r3,-16(fp)
  84ba50:	1885883a 	add	r2,r3,r2
  84ba54:	108002c4 	addi	r2,r2,11
  84ba58:	10800003 	ldbu	r2,0(r2)
  84ba5c:	10803fcc 	andi	r2,r2,255
  84ba60:	1000091e 	bne	r2,zero,84ba88 <OS_EventTaskRemoveMulti+0xcc>
            pevent->OSEventGrp &= ~bity;
  84ba64:	e0bffc17 	ldw	r2,-16(fp)
  84ba68:	10800283 	ldbu	r2,10(r2)
  84ba6c:	1007883a 	mov	r3,r2
  84ba70:	e0bffd43 	ldbu	r2,-11(fp)
  84ba74:	0084303a 	nor	r2,zero,r2
  84ba78:	1884703a 	and	r2,r3,r2
  84ba7c:	1007883a 	mov	r3,r2
  84ba80:	e0bffc17 	ldw	r2,-16(fp)
  84ba84:	10c00285 	stb	r3,10(r2)
        }
        pevents++;
  84ba88:	e0bffb17 	ldw	r2,-20(fp)
  84ba8c:	10800104 	addi	r2,r2,4
  84ba90:	e0bffb15 	stw	r2,-20(fp)
        pevent = *pevents;
  84ba94:	e0bffb17 	ldw	r2,-20(fp)
  84ba98:	10800017 	ldw	r2,0(r2)
  84ba9c:	e0bffc15 	stw	r2,-16(fp)
    y       =  ptcb->OSTCBY;
    bity    =  ptcb->OSTCBBitY;
    bitx    =  ptcb->OSTCBBitX;
    pevents =  pevents_multi;
    pevent  = *pevents;
    while (pevent != (OS_EVENT *)0) {                   /* Remove task from all events' wait lists     */
  84baa0:	e0bffc17 	ldw	r2,-16(fp)
  84baa4:	103fd91e 	bne	r2,zero,84ba0c <__alt_mem_epcs_flash_controller_0+0xff842a0c>
            pevent->OSEventGrp &= ~bity;
        }
        pevents++;
        pevent = *pevents;
    }
}
  84baa8:	0001883a 	nop
  84baac:	e037883a 	mov	sp,fp
  84bab0:	df000017 	ldw	fp,0(sp)
  84bab4:	dec00104 	addi	sp,sp,4
  84bab8:	f800283a 	ret

0084babc <OS_EventWaitListInit>:
* Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/
#if (OS_EVENT_EN)
void  OS_EventWaitListInit (OS_EVENT *pevent)
{
  84babc:	defffc04 	addi	sp,sp,-16
  84bac0:	df000315 	stw	fp,12(sp)
  84bac4:	df000304 	addi	fp,sp,12
  84bac8:	e13fff15 	stw	r4,-4(fp)
    INT16U *ptbl;
#endif
    INT8U   i;


    pevent->OSEventGrp = 0;                      /* No task waiting on event                           */
  84bacc:	e0bfff17 	ldw	r2,-4(fp)
  84bad0:	10000285 	stb	zero,10(r2)
    ptbl               = &pevent->OSEventTbl[0];
  84bad4:	e0bfff17 	ldw	r2,-4(fp)
  84bad8:	108002c4 	addi	r2,r2,11
  84badc:	e0bffd15 	stw	r2,-12(fp)

    for (i = 0; i < OS_EVENT_TBL_SIZE; i++) {
  84bae0:	e03ffe05 	stb	zero,-8(fp)
  84bae4:	00000706 	br	84bb04 <OS_EventWaitListInit+0x48>
        *ptbl++ = 0;
  84bae8:	e0bffd17 	ldw	r2,-12(fp)
  84baec:	10c00044 	addi	r3,r2,1
  84baf0:	e0fffd15 	stw	r3,-12(fp)
  84baf4:	10000005 	stb	zero,0(r2)


    pevent->OSEventGrp = 0;                      /* No task waiting on event                           */
    ptbl               = &pevent->OSEventTbl[0];

    for (i = 0; i < OS_EVENT_TBL_SIZE; i++) {
  84baf8:	e0bffe03 	ldbu	r2,-8(fp)
  84bafc:	10800044 	addi	r2,r2,1
  84bb00:	e0bffe05 	stb	r2,-8(fp)
  84bb04:	e0bffe03 	ldbu	r2,-8(fp)
  84bb08:	108000f0 	cmpltui	r2,r2,3
  84bb0c:	103ff61e 	bne	r2,zero,84bae8 <__alt_mem_epcs_flash_controller_0+0xff842ae8>
        *ptbl++ = 0;
    }
}
  84bb10:	0001883a 	nop
  84bb14:	e037883a 	mov	sp,fp
  84bb18:	df000017 	ldw	fp,0(sp)
  84bb1c:	dec00104 	addi	sp,sp,4
  84bb20:	f800283a 	ret

0084bb24 <OS_InitEventList>:
* Returns    : none
*********************************************************************************************************
*/

static  void  OS_InitEventList (void)
{
  84bb24:	defffb04 	addi	sp,sp,-20
  84bb28:	dfc00415 	stw	ra,16(sp)
  84bb2c:	df000315 	stw	fp,12(sp)
  84bb30:	df000304 	addi	fp,sp,12
    INT16U     i;
    OS_EVENT  *pevent1;
    OS_EVENT  *pevent2;


    OS_MemClr((INT8U *)&OSEventTbl[0], sizeof(OSEventTbl)); /* Clear the event table                   */
  84bb34:	0142d004 	movi	r5,2880
  84bb38:	010021b4 	movhi	r4,134
  84bb3c:	2110ef04 	addi	r4,r4,17340
  84bb40:	084be9c0 	call	84be9c <OS_MemClr>
    pevent1 = &OSEventTbl[0];
  84bb44:	008021b4 	movhi	r2,134
  84bb48:	1090ef04 	addi	r2,r2,17340
  84bb4c:	e0bffe15 	stw	r2,-8(fp)
    pevent2 = &OSEventTbl[1];
  84bb50:	008021b4 	movhi	r2,134
  84bb54:	1090fb04 	addi	r2,r2,17388
  84bb58:	e0bfff15 	stw	r2,-4(fp)
    for (i = 0; i < (OS_MAX_EVENTS - 1); i++) {             /* Init. list of free EVENT control blocks */
  84bb5c:	e03ffd0d 	sth	zero,-12(fp)
  84bb60:	00001306 	br	84bbb0 <OS_InitEventList+0x8c>
        pevent1->OSEventType    = OS_EVENT_TYPE_UNUSED;
  84bb64:	e0bffe17 	ldw	r2,-8(fp)
  84bb68:	10000005 	stb	zero,0(r2)
        pevent1->OSEventPtr     = pevent2;
  84bb6c:	e0bffe17 	ldw	r2,-8(fp)
  84bb70:	e0ffff17 	ldw	r3,-4(fp)
  84bb74:	10c00115 	stw	r3,4(r2)
#if OS_EVENT_NAME_SIZE > 1
        pevent1->OSEventName[0] = '?';                      /* Unknown name                            */
  84bb78:	e0bffe17 	ldw	r2,-8(fp)
  84bb7c:	00c00fc4 	movi	r3,63
  84bb80:	10c00385 	stb	r3,14(r2)
        pevent1->OSEventName[1] = OS_ASCII_NUL;
  84bb84:	e0bffe17 	ldw	r2,-8(fp)
  84bb88:	100003c5 	stb	zero,15(r2)
#endif
        pevent1++;
  84bb8c:	e0bffe17 	ldw	r2,-8(fp)
  84bb90:	10800c04 	addi	r2,r2,48
  84bb94:	e0bffe15 	stw	r2,-8(fp)
        pevent2++;
  84bb98:	e0bfff17 	ldw	r2,-4(fp)
  84bb9c:	10800c04 	addi	r2,r2,48
  84bba0:	e0bfff15 	stw	r2,-4(fp)


    OS_MemClr((INT8U *)&OSEventTbl[0], sizeof(OSEventTbl)); /* Clear the event table                   */
    pevent1 = &OSEventTbl[0];
    pevent2 = &OSEventTbl[1];
    for (i = 0; i < (OS_MAX_EVENTS - 1); i++) {             /* Init. list of free EVENT control blocks */
  84bba4:	e0bffd0b 	ldhu	r2,-12(fp)
  84bba8:	10800044 	addi	r2,r2,1
  84bbac:	e0bffd0d 	sth	r2,-12(fp)
  84bbb0:	e0bffd0b 	ldhu	r2,-12(fp)
  84bbb4:	10800ef0 	cmpltui	r2,r2,59
  84bbb8:	103fea1e 	bne	r2,zero,84bb64 <__alt_mem_epcs_flash_controller_0+0xff842b64>
        pevent1->OSEventName[1] = OS_ASCII_NUL;
#endif
        pevent1++;
        pevent2++;
    }
    pevent1->OSEventType            = OS_EVENT_TYPE_UNUSED;
  84bbbc:	e0bffe17 	ldw	r2,-8(fp)
  84bbc0:	10000005 	stb	zero,0(r2)
    pevent1->OSEventPtr             = (OS_EVENT *)0;
  84bbc4:	e0bffe17 	ldw	r2,-8(fp)
  84bbc8:	10000115 	stw	zero,4(r2)
#if OS_EVENT_NAME_SIZE > 1
    pevent1->OSEventName[0]         = '?';
  84bbcc:	e0bffe17 	ldw	r2,-8(fp)
  84bbd0:	00c00fc4 	movi	r3,63
  84bbd4:	10c00385 	stb	r3,14(r2)
    pevent1->OSEventName[1]         = OS_ASCII_NUL;
  84bbd8:	e0bffe17 	ldw	r2,-8(fp)
  84bbdc:	100003c5 	stb	zero,15(r2)
#endif
    OSEventFreeList                 = &OSEventTbl[0];
  84bbe0:	008021b4 	movhi	r2,134
  84bbe4:	1090ef04 	addi	r2,r2,17340
  84bbe8:	d0a0b015 	stw	r2,-32064(gp)
    OSEventFreeList->OSEventName[0] = '?';                  /* Unknown name                            */
    OSEventFreeList->OSEventName[1] = OS_ASCII_NUL;
#endif
#endif
#endif
}
  84bbec:	0001883a 	nop
  84bbf0:	e037883a 	mov	sp,fp
  84bbf4:	dfc00117 	ldw	ra,4(sp)
  84bbf8:	df000017 	ldw	fp,0(sp)
  84bbfc:	dec00204 	addi	sp,sp,8
  84bc00:	f800283a 	ret

0084bc04 <OS_InitMisc>:
* Returns    : none
*********************************************************************************************************
*/

static  void  OS_InitMisc (void)
{
  84bc04:	deffff04 	addi	sp,sp,-4
  84bc08:	df000015 	stw	fp,0(sp)
  84bc0c:	d839883a 	mov	fp,sp
#if OS_TIME_GET_SET_EN > 0
    OSTime        = 0L;                                    /* Clear the 32-bit system clock            */
  84bc10:	d020b315 	stw	zero,-32052(gp)
#endif

    OSIntNesting  = 0;                                     /* Clear the interrupt nesting counter      */
  84bc14:	d020b105 	stb	zero,-32060(gp)
    OSLockNesting = 0;                                     /* Clear the scheduling lock counter        */
  84bc18:	d020a305 	stb	zero,-32116(gp)

    OSTaskCtr     = 0;                                     /* Clear the number of tasks                */
  84bc1c:	d020ab45 	stb	zero,-32083(gp)

    OSRunning     = OS_FALSE;                              /* Indicate that multitasking not started   */
  84bc20:	d020a345 	stb	zero,-32115(gp)

    OSCtxSwCtr    = 0;                                     /* Clear the context switch counter         */
  84bc24:	d020a815 	stw	zero,-32096(gp)
    OSIdleCtr     = 0L;                                    /* Clear the 32-bit idle counter            */
  84bc28:	d020a415 	stw	zero,-32112(gp)

#if OS_TASK_STAT_EN > 0
    OSIdleCtrRun  = 0L;
  84bc2c:	d020b615 	stw	zero,-32040(gp)
    OSIdleCtrMax  = 0L;
  84bc30:	d020a915 	stw	zero,-32092(gp)
    OSStatRdy     = OS_FALSE;                              /* Statistic task is not ready              */
  84bc34:	d020b505 	stb	zero,-32044(gp)
#endif
}
  84bc38:	0001883a 	nop
  84bc3c:	e037883a 	mov	sp,fp
  84bc40:	df000017 	ldw	fp,0(sp)
  84bc44:	dec00104 	addi	sp,sp,4
  84bc48:	f800283a 	ret

0084bc4c <OS_InitRdyList>:
* Returns    : none
*********************************************************************************************************
*/

static  void  OS_InitRdyList (void)
{
  84bc4c:	defffd04 	addi	sp,sp,-12
  84bc50:	df000215 	stw	fp,8(sp)
  84bc54:	df000204 	addi	fp,sp,8
#else
    INT16U  *prdytbl;
#endif


    OSRdyGrp      = 0;                                     /* Clear the ready list                     */
  84bc58:	d020af05 	stb	zero,-32068(gp)
    prdytbl       = &OSRdyTbl[0];
  84bc5c:	d0a0af44 	addi	r2,gp,-32067
  84bc60:	e0bfff15 	stw	r2,-4(fp)
    for (i = 0; i < OS_RDY_TBL_SIZE; i++) {
  84bc64:	e03ffe05 	stb	zero,-8(fp)
  84bc68:	00000706 	br	84bc88 <OS_InitRdyList+0x3c>
        *prdytbl++ = 0;
  84bc6c:	e0bfff17 	ldw	r2,-4(fp)
  84bc70:	10c00044 	addi	r3,r2,1
  84bc74:	e0ffff15 	stw	r3,-4(fp)
  84bc78:	10000005 	stb	zero,0(r2)
#endif


    OSRdyGrp      = 0;                                     /* Clear the ready list                     */
    prdytbl       = &OSRdyTbl[0];
    for (i = 0; i < OS_RDY_TBL_SIZE; i++) {
  84bc7c:	e0bffe03 	ldbu	r2,-8(fp)
  84bc80:	10800044 	addi	r2,r2,1
  84bc84:	e0bffe05 	stb	r2,-8(fp)
  84bc88:	e0bffe03 	ldbu	r2,-8(fp)
  84bc8c:	108000f0 	cmpltui	r2,r2,3
  84bc90:	103ff61e 	bne	r2,zero,84bc6c <__alt_mem_epcs_flash_controller_0+0xff842c6c>
        *prdytbl++ = 0;
    }

    OSPrioCur     = 0;
  84bc94:	d020a545 	stb	zero,-32107(gp)
    OSPrioHighRdy = 0;
  84bc98:	d020a505 	stb	zero,-32108(gp)

    OSTCBHighRdy  = (OS_TCB *)0;
  84bc9c:	d020ad15 	stw	zero,-32076(gp)
    OSTCBCur      = (OS_TCB *)0;
  84bca0:	d020b215 	stw	zero,-32056(gp)
}
  84bca4:	0001883a 	nop
  84bca8:	e037883a 	mov	sp,fp
  84bcac:	df000017 	ldw	fp,0(sp)
  84bcb0:	dec00104 	addi	sp,sp,4
  84bcb4:	f800283a 	ret

0084bcb8 <OS_InitTaskIdle>:
* Returns    : none
*********************************************************************************************************
*/

static  void  OS_InitTaskIdle (void)
{
  84bcb8:	defff804 	addi	sp,sp,-32
  84bcbc:	dfc00715 	stw	ra,28(sp)
  84bcc0:	df000615 	stw	fp,24(sp)
  84bcc4:	df000604 	addi	fp,sp,24
#endif


#if OS_TASK_CREATE_EXT_EN > 0
    #if OS_STK_GROWTH == 1
    (void)OSTaskCreateExt(OS_TaskIdle,
  84bcc8:	008000c4 	movi	r2,3
  84bccc:	d8800415 	stw	r2,16(sp)
  84bcd0:	d8000315 	stw	zero,12(sp)
  84bcd4:	00808004 	movi	r2,512
  84bcd8:	d8800215 	stw	r2,8(sp)
  84bcdc:	008021b4 	movhi	r2,134
  84bce0:	108eef04 	addi	r2,r2,15292
  84bce4:	d8800115 	stw	r2,4(sp)
  84bce8:	00bfffd4 	movui	r2,65535
  84bcec:	d8800015 	stw	r2,0(sp)
  84bcf0:	01c00504 	movi	r7,20
  84bcf4:	018021b4 	movhi	r6,134
  84bcf8:	3190ee04 	addi	r6,r6,17336
  84bcfc:	000b883a 	mov	r5,zero
  84bd00:	01002174 	movhi	r4,133
  84bd04:	21305904 	addi	r4,r4,-16028
  84bd08:	08508300 	call	850830 <OSTaskCreateExt>
                       OS_TASK_IDLE_PRIO);
    #endif
#endif

#if OS_TASK_NAME_SIZE > 14
    OSTaskNameSet(OS_TASK_IDLE_PRIO, (INT8U *)"uC/OS-II Idle", &err);
  84bd0c:	e1bfff04 	addi	r6,fp,-4
  84bd10:	014021b4 	movhi	r5,134
  84bd14:	29660604 	addi	r5,r5,-26600
  84bd18:	01000504 	movi	r4,20
  84bd1c:	08510400 	call	851040 <OSTaskNameSet>
#else
#if OS_TASK_NAME_SIZE > 7
    OSTaskNameSet(OS_TASK_IDLE_PRIO, (INT8U *)"OS-Idle", &err);
#endif
#endif
}
  84bd20:	0001883a 	nop
  84bd24:	e037883a 	mov	sp,fp
  84bd28:	dfc00117 	ldw	ra,4(sp)
  84bd2c:	df000017 	ldw	fp,0(sp)
  84bd30:	dec00204 	addi	sp,sp,8
  84bd34:	f800283a 	ret

0084bd38 <OS_InitTaskStat>:
*********************************************************************************************************
*/

#if OS_TASK_STAT_EN > 0
static  void  OS_InitTaskStat (void)
{
  84bd38:	defff804 	addi	sp,sp,-32
  84bd3c:	dfc00715 	stw	ra,28(sp)
  84bd40:	df000615 	stw	fp,24(sp)
  84bd44:	df000604 	addi	fp,sp,24
#endif


#if OS_TASK_CREATE_EXT_EN > 0
    #if OS_STK_GROWTH == 1
    (void)OSTaskCreateExt(OS_TaskStat,
  84bd48:	008000c4 	movi	r2,3
  84bd4c:	d8800415 	stw	r2,16(sp)
  84bd50:	d8000315 	stw	zero,12(sp)
  84bd54:	00808004 	movi	r2,512
  84bd58:	d8800215 	stw	r2,8(sp)
  84bd5c:	008021b4 	movhi	r2,134
  84bd60:	108c7704 	addi	r2,r2,12764
  84bd64:	d8800115 	stw	r2,4(sp)
  84bd68:	00bfff94 	movui	r2,65534
  84bd6c:	d8800015 	stw	r2,0(sp)
  84bd70:	01c004c4 	movi	r7,19
  84bd74:	018021b4 	movhi	r6,134
  84bd78:	318e7604 	addi	r6,r6,14808
  84bd7c:	000b883a 	mov	r5,zero
  84bd80:	01002174 	movhi	r4,133
  84bd84:	21307004 	addi	r4,r4,-15936
  84bd88:	08508300 	call	850830 <OSTaskCreateExt>
                       OS_TASK_STAT_PRIO);                             /* One higher than the idle task  */
    #endif
#endif

#if OS_TASK_NAME_SIZE > 14
    OSTaskNameSet(OS_TASK_STAT_PRIO, (INT8U *)"uC/OS-II Stat", &err);
  84bd8c:	e1bfff04 	addi	r6,fp,-4
  84bd90:	014021b4 	movhi	r5,134
  84bd94:	29660a04 	addi	r5,r5,-26584
  84bd98:	010004c4 	movi	r4,19
  84bd9c:	08510400 	call	851040 <OSTaskNameSet>
#else
#if OS_TASK_NAME_SIZE > 7
    OSTaskNameSet(OS_TASK_STAT_PRIO, (INT8U *)"OS-Stat", &err);
#endif
#endif
}
  84bda0:	0001883a 	nop
  84bda4:	e037883a 	mov	sp,fp
  84bda8:	dfc00117 	ldw	ra,4(sp)
  84bdac:	df000017 	ldw	fp,0(sp)
  84bdb0:	dec00204 	addi	sp,sp,8
  84bdb4:	f800283a 	ret

0084bdb8 <OS_InitTCBList>:
* Returns    : none
*********************************************************************************************************
*/

static  void  OS_InitTCBList (void)
{
  84bdb8:	defffb04 	addi	sp,sp,-20
  84bdbc:	dfc00415 	stw	ra,16(sp)
  84bdc0:	df000315 	stw	fp,12(sp)
  84bdc4:	df000304 	addi	fp,sp,12
    INT8U    i;
    OS_TCB  *ptcb1;
    OS_TCB  *ptcb2;


    OS_MemClr((INT8U *)&OSTCBTbl[0],     sizeof(OSTCBTbl));      /* Clear all the TCBs                 */
  84bdc8:	01414404 	movi	r5,1296
  84bdcc:	010021b4 	movhi	r4,134
  84bdd0:	2113bf04 	addi	r4,r4,20220
  84bdd4:	084be9c0 	call	84be9c <OS_MemClr>
    OS_MemClr((INT8U *)&OSTCBPrioTbl[0], sizeof(OSTCBPrioTbl));  /* Clear the priority table           */
  84bdd8:	01401504 	movi	r5,84
  84bddc:	010021b4 	movhi	r4,134
  84bde0:	21150304 	addi	r4,r4,21516
  84bde4:	084be9c0 	call	84be9c <OS_MemClr>
    ptcb1 = &OSTCBTbl[0];
  84bde8:	008021b4 	movhi	r2,134
  84bdec:	1093bf04 	addi	r2,r2,20220
  84bdf0:	e0bffe15 	stw	r2,-8(fp)
    ptcb2 = &OSTCBTbl[1];
  84bdf4:	008021b4 	movhi	r2,134
  84bdf8:	1093da04 	addi	r2,r2,20328
  84bdfc:	e0bfff15 	stw	r2,-4(fp)
    for (i = 0; i < (OS_MAX_TASKS + OS_N_SYS_TASKS - 1); i++) {  /* Init. list of free TCBs            */
  84be00:	e03ffd05 	stb	zero,-12(fp)
  84be04:	00001106 	br	84be4c <OS_InitTCBList+0x94>
        ptcb1->OSTCBNext = ptcb2;
  84be08:	e0bffe17 	ldw	r2,-8(fp)
  84be0c:	e0ffff17 	ldw	r3,-4(fp)
  84be10:	10c00515 	stw	r3,20(r2)
#if OS_TASK_NAME_SIZE > 1
        ptcb1->OSTCBTaskName[0] = '?';                           /* Unknown name                       */
  84be14:	e0bffe17 	ldw	r2,-8(fp)
  84be18:	00c00fc4 	movi	r3,63
  84be1c:	10c01305 	stb	r3,76(r2)
        ptcb1->OSTCBTaskName[1] = OS_ASCII_NUL;
  84be20:	e0bffe17 	ldw	r2,-8(fp)
  84be24:	10001345 	stb	zero,77(r2)
#endif
        ptcb1++;
  84be28:	e0bffe17 	ldw	r2,-8(fp)
  84be2c:	10801b04 	addi	r2,r2,108
  84be30:	e0bffe15 	stw	r2,-8(fp)
        ptcb2++;
  84be34:	e0bfff17 	ldw	r2,-4(fp)
  84be38:	10801b04 	addi	r2,r2,108
  84be3c:	e0bfff15 	stw	r2,-4(fp)

    OS_MemClr((INT8U *)&OSTCBTbl[0],     sizeof(OSTCBTbl));      /* Clear all the TCBs                 */
    OS_MemClr((INT8U *)&OSTCBPrioTbl[0], sizeof(OSTCBPrioTbl));  /* Clear the priority table           */
    ptcb1 = &OSTCBTbl[0];
    ptcb2 = &OSTCBTbl[1];
    for (i = 0; i < (OS_MAX_TASKS + OS_N_SYS_TASKS - 1); i++) {  /* Init. list of free TCBs            */
  84be40:	e0bffd03 	ldbu	r2,-12(fp)
  84be44:	10800044 	addi	r2,r2,1
  84be48:	e0bffd05 	stb	r2,-12(fp)
  84be4c:	e0bffd03 	ldbu	r2,-12(fp)
  84be50:	108002f0 	cmpltui	r2,r2,11
  84be54:	103fec1e 	bne	r2,zero,84be08 <__alt_mem_epcs_flash_controller_0+0xff842e08>
        ptcb1->OSTCBTaskName[1] = OS_ASCII_NUL;
#endif
        ptcb1++;
        ptcb2++;
    }
    ptcb1->OSTCBNext = (OS_TCB *)0;                              /* Last OS_TCB                        */
  84be58:	e0bffe17 	ldw	r2,-8(fp)
  84be5c:	10000515 	stw	zero,20(r2)
#if OS_TASK_NAME_SIZE > 1
    ptcb1->OSTCBTaskName[0] = '?';                               /* Unknown name                       */
  84be60:	e0bffe17 	ldw	r2,-8(fp)
  84be64:	00c00fc4 	movi	r3,63
  84be68:	10c01305 	stb	r3,76(r2)
    ptcb1->OSTCBTaskName[1] = OS_ASCII_NUL;
  84be6c:	e0bffe17 	ldw	r2,-8(fp)
  84be70:	10001345 	stb	zero,77(r2)
#endif
    OSTCBList               = (OS_TCB *)0;                       /* TCB lists initializations          */
  84be74:	d020a615 	stw	zero,-32104(gp)
    OSTCBFreeList           = &OSTCBTbl[0];
  84be78:	008021b4 	movhi	r2,134
  84be7c:	1093bf04 	addi	r2,r2,20220
  84be80:	d0a0aa15 	stw	r2,-32088(gp)
}
  84be84:	0001883a 	nop
  84be88:	e037883a 	mov	sp,fp
  84be8c:	dfc00117 	ldw	ra,4(sp)
  84be90:	df000017 	ldw	fp,0(sp)
  84be94:	dec00204 	addi	sp,sp,8
  84be98:	f800283a 	ret

0084be9c <OS_MemClr>:
*                 of the alignment of the destination.
*********************************************************************************************************
*/

void  OS_MemClr (INT8U *pdest, INT16U size)
{
  84be9c:	defffd04 	addi	sp,sp,-12
  84bea0:	df000215 	stw	fp,8(sp)
  84bea4:	df000204 	addi	fp,sp,8
  84bea8:	e13ffe15 	stw	r4,-8(fp)
  84beac:	2805883a 	mov	r2,r5
  84beb0:	e0bfff0d 	sth	r2,-4(fp)
    while (size > 0) {
  84beb4:	00000706 	br	84bed4 <OS_MemClr+0x38>
        *pdest++ = (INT8U)0;
  84beb8:	e0bffe17 	ldw	r2,-8(fp)
  84bebc:	10c00044 	addi	r3,r2,1
  84bec0:	e0fffe15 	stw	r3,-8(fp)
  84bec4:	10000005 	stb	zero,0(r2)
        size--;
  84bec8:	e0bfff0b 	ldhu	r2,-4(fp)
  84becc:	10bfffc4 	addi	r2,r2,-1
  84bed0:	e0bfff0d 	sth	r2,-4(fp)
*********************************************************************************************************
*/

void  OS_MemClr (INT8U *pdest, INT16U size)
{
    while (size > 0) {
  84bed4:	e0bfff0b 	ldhu	r2,-4(fp)
  84bed8:	103ff71e 	bne	r2,zero,84beb8 <__alt_mem_epcs_flash_controller_0+0xff842eb8>
        *pdest++ = (INT8U)0;
        size--;
    }
}
  84bedc:	0001883a 	nop
  84bee0:	e037883a 	mov	sp,fp
  84bee4:	df000017 	ldw	fp,0(sp)
  84bee8:	dec00104 	addi	sp,sp,4
  84beec:	f800283a 	ret

0084bef0 <OS_MemCopy>:
*                 of the alignment of the source and destination.
*********************************************************************************************************
*/

void  OS_MemCopy (INT8U *pdest, INT8U *psrc, INT16U size)
{
  84bef0:	defffc04 	addi	sp,sp,-16
  84bef4:	df000315 	stw	fp,12(sp)
  84bef8:	df000304 	addi	fp,sp,12
  84befc:	e13ffd15 	stw	r4,-12(fp)
  84bf00:	e17ffe15 	stw	r5,-8(fp)
  84bf04:	3005883a 	mov	r2,r6
  84bf08:	e0bfff0d 	sth	r2,-4(fp)
    while (size > 0) {
  84bf0c:	00000b06 	br	84bf3c <OS_MemCopy+0x4c>
        *pdest++ = *psrc++;
  84bf10:	e0bffd17 	ldw	r2,-12(fp)
  84bf14:	10c00044 	addi	r3,r2,1
  84bf18:	e0fffd15 	stw	r3,-12(fp)
  84bf1c:	e0fffe17 	ldw	r3,-8(fp)
  84bf20:	19000044 	addi	r4,r3,1
  84bf24:	e13ffe15 	stw	r4,-8(fp)
  84bf28:	18c00003 	ldbu	r3,0(r3)
  84bf2c:	10c00005 	stb	r3,0(r2)
        size--;
  84bf30:	e0bfff0b 	ldhu	r2,-4(fp)
  84bf34:	10bfffc4 	addi	r2,r2,-1
  84bf38:	e0bfff0d 	sth	r2,-4(fp)
*********************************************************************************************************
*/

void  OS_MemCopy (INT8U *pdest, INT8U *psrc, INT16U size)
{
    while (size > 0) {
  84bf3c:	e0bfff0b 	ldhu	r2,-4(fp)
  84bf40:	103ff31e 	bne	r2,zero,84bf10 <__alt_mem_epcs_flash_controller_0+0xff842f10>
        *pdest++ = *psrc++;
        size--;
    }
}
  84bf44:	0001883a 	nop
  84bf48:	e037883a 	mov	sp,fp
  84bf4c:	df000017 	ldw	fp,0(sp)
  84bf50:	dec00104 	addi	sp,sp,4
  84bf54:	f800283a 	ret

0084bf58 <OS_Sched>:
*              2) Rescheduling is prevented when the scheduler is locked (see OS_SchedLock())
*********************************************************************************************************
*/

void  OS_Sched (void)
{
  84bf58:	defffb04 	addi	sp,sp,-20
  84bf5c:	dfc00415 	stw	ra,16(sp)
  84bf60:	df000315 	stw	fp,12(sp)
  84bf64:	df000304 	addi	fp,sp,12
#if OS_CRITICAL_METHOD == 3                            /* Allocate storage for CPU status register     */
    OS_CPU_SR  cpu_sr = 0;
  84bf68:	e03ffd15 	stw	zero,-12(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84bf6c:	0005303a 	rdctl	r2,status
  84bf70:	e0bfff15 	stw	r2,-4(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84bf74:	e0ffff17 	ldw	r3,-4(fp)
  84bf78:	00bfff84 	movi	r2,-2
  84bf7c:	1884703a 	and	r2,r3,r2
  84bf80:	1001703a 	wrctl	status,r2
  
  return context;
  84bf84:	e0bfff17 	ldw	r2,-4(fp)
#endif



    OS_ENTER_CRITICAL();
  84bf88:	e0bffd15 	stw	r2,-12(fp)
    if (OSIntNesting == 0) {                           /* Schedule only if all ISRs done and ...       */
  84bf8c:	d0a0b103 	ldbu	r2,-32060(gp)
  84bf90:	10803fcc 	andi	r2,r2,255
  84bf94:	10001a1e 	bne	r2,zero,84c000 <OS_Sched+0xa8>
        if (OSLockNesting == 0) {                      /* ... scheduler is not locked                  */
  84bf98:	d0a0a303 	ldbu	r2,-32116(gp)
  84bf9c:	10803fcc 	andi	r2,r2,255
  84bfa0:	1000171e 	bne	r2,zero,84c000 <OS_Sched+0xa8>
            OS_SchedNew();
  84bfa4:	084c0280 	call	84c028 <OS_SchedNew>
            if (OSPrioHighRdy != OSPrioCur) {          /* No Ctx Sw if current task is highest rdy     */
  84bfa8:	d0e0a503 	ldbu	r3,-32108(gp)
  84bfac:	d0a0a543 	ldbu	r2,-32107(gp)
  84bfb0:	18c03fcc 	andi	r3,r3,255
  84bfb4:	10803fcc 	andi	r2,r2,255
  84bfb8:	18801126 	beq	r3,r2,84c000 <OS_Sched+0xa8>
                OSTCBHighRdy = OSTCBPrioTbl[OSPrioHighRdy];
  84bfbc:	d0a0a503 	ldbu	r2,-32108(gp)
  84bfc0:	10c03fcc 	andi	r3,r2,255
  84bfc4:	008021b4 	movhi	r2,134
  84bfc8:	10950304 	addi	r2,r2,21516
  84bfcc:	18c7883a 	add	r3,r3,r3
  84bfd0:	18c7883a 	add	r3,r3,r3
  84bfd4:	10c5883a 	add	r2,r2,r3
  84bfd8:	10800017 	ldw	r2,0(r2)
  84bfdc:	d0a0ad15 	stw	r2,-32076(gp)
#if OS_TASK_PROFILE_EN > 0
                OSTCBHighRdy->OSTCBCtxSwCtr++;         /* Inc. # of context switches to this task      */
  84bfe0:	d0a0ad17 	ldw	r2,-32076(gp)
  84bfe4:	10c00e17 	ldw	r3,56(r2)
  84bfe8:	18c00044 	addi	r3,r3,1
  84bfec:	10c00e15 	stw	r3,56(r2)
#endif
                OSCtxSwCtr++;                          /* Increment context switch counter             */
  84bff0:	d0a0a817 	ldw	r2,-32096(gp)
  84bff4:	10800044 	addi	r2,r2,1
  84bff8:	d0a0a815 	stw	r2,-32096(gp)
                OS_TASK_SW();                          /* Perform a context switch                     */
  84bffc:	08564b80 	call	8564b8 <OSCtxSw>
  84c000:	e0bffd17 	ldw	r2,-12(fp)
  84c004:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84c008:	e0bffe17 	ldw	r2,-8(fp)
  84c00c:	1001703a 	wrctl	status,r2
            }
        }
    }
    OS_EXIT_CRITICAL();
}
  84c010:	0001883a 	nop
  84c014:	e037883a 	mov	sp,fp
  84c018:	dfc00117 	ldw	ra,4(sp)
  84c01c:	df000017 	ldw	fp,0(sp)
  84c020:	dec00204 	addi	sp,sp,8
  84c024:	f800283a 	ret

0084c028 <OS_SchedNew>:
*              2) Interrupts are assumed to be disabled when this function is called.
*********************************************************************************************************
*/

static  void  OS_SchedNew (void)
{
  84c028:	defffe04 	addi	sp,sp,-8
  84c02c:	df000115 	stw	fp,4(sp)
  84c030:	df000104 	addi	fp,sp,4
#if OS_LOWEST_PRIO <= 63                         /* See if we support up to 64 tasks                   */
    INT8U   y;


    y             = OSUnMapTbl[OSRdyGrp];
  84c034:	d0a0af03 	ldbu	r2,-32068(gp)
  84c038:	10c03fcc 	andi	r3,r2,255
  84c03c:	008021b4 	movhi	r2,134
  84c040:	10a5c604 	addi	r2,r2,-26856
  84c044:	10c5883a 	add	r2,r2,r3
  84c048:	10800003 	ldbu	r2,0(r2)
  84c04c:	e0bfff05 	stb	r2,-4(fp)
    OSPrioHighRdy = (INT8U)((y << 3) + OSUnMapTbl[OSRdyTbl[y]]);
  84c050:	e0bfff03 	ldbu	r2,-4(fp)
  84c054:	100490fa 	slli	r2,r2,3
  84c058:	1009883a 	mov	r4,r2
  84c05c:	e0ffff03 	ldbu	r3,-4(fp)
  84c060:	d0a0af44 	addi	r2,gp,-32067
  84c064:	1885883a 	add	r2,r3,r2
  84c068:	10800003 	ldbu	r2,0(r2)
  84c06c:	10c03fcc 	andi	r3,r2,255
  84c070:	008021b4 	movhi	r2,134
  84c074:	10a5c604 	addi	r2,r2,-26856
  84c078:	10c5883a 	add	r2,r2,r3
  84c07c:	10800003 	ldbu	r2,0(r2)
  84c080:	2085883a 	add	r2,r4,r2
  84c084:	d0a0a505 	stb	r2,-32108(gp)
        OSPrioHighRdy = (INT8U)((y << 4) + OSUnMapTbl[(*ptbl & 0xFF)]);
    } else {
        OSPrioHighRdy = (INT8U)((y << 4) + OSUnMapTbl[(*ptbl >> 8) & 0xFF] + 8);
    }
#endif
}
  84c088:	0001883a 	nop
  84c08c:	e037883a 	mov	sp,fp
  84c090:	df000017 	ldw	fp,0(sp)
  84c094:	dec00104 	addi	sp,sp,4
  84c098:	f800283a 	ret

0084c09c <OS_StrCopy>:
*********************************************************************************************************
*/

#if (OS_EVENT_NAME_SIZE > 1) || (OS_FLAG_NAME_SIZE > 1) || (OS_MEM_NAME_SIZE > 1) || (OS_TASK_NAME_SIZE > 1) || (OS_TMR_CFG_NAME_SIZE > 1)
INT8U  OS_StrCopy (INT8U *pdest, INT8U *psrc)
{
  84c09c:	defffc04 	addi	sp,sp,-16
  84c0a0:	df000315 	stw	fp,12(sp)
  84c0a4:	df000304 	addi	fp,sp,12
  84c0a8:	e13ffe15 	stw	r4,-8(fp)
  84c0ac:	e17fff15 	stw	r5,-4(fp)
    INT8U  len;


    len = 0;
  84c0b0:	e03ffd05 	stb	zero,-12(fp)
    while (*psrc != OS_ASCII_NUL) {
  84c0b4:	00000b06 	br	84c0e4 <OS_StrCopy+0x48>
        *pdest++ = *psrc++;
  84c0b8:	e0bffe17 	ldw	r2,-8(fp)
  84c0bc:	10c00044 	addi	r3,r2,1
  84c0c0:	e0fffe15 	stw	r3,-8(fp)
  84c0c4:	e0ffff17 	ldw	r3,-4(fp)
  84c0c8:	19000044 	addi	r4,r3,1
  84c0cc:	e13fff15 	stw	r4,-4(fp)
  84c0d0:	18c00003 	ldbu	r3,0(r3)
  84c0d4:	10c00005 	stb	r3,0(r2)
        len++;
  84c0d8:	e0bffd03 	ldbu	r2,-12(fp)
  84c0dc:	10800044 	addi	r2,r2,1
  84c0e0:	e0bffd05 	stb	r2,-12(fp)
{
    INT8U  len;


    len = 0;
    while (*psrc != OS_ASCII_NUL) {
  84c0e4:	e0bfff17 	ldw	r2,-4(fp)
  84c0e8:	10800003 	ldbu	r2,0(r2)
  84c0ec:	10803fcc 	andi	r2,r2,255
  84c0f0:	103ff11e 	bne	r2,zero,84c0b8 <__alt_mem_epcs_flash_controller_0+0xff8430b8>
        *pdest++ = *psrc++;
        len++;
    }
    *pdest = OS_ASCII_NUL;
  84c0f4:	e0bffe17 	ldw	r2,-8(fp)
  84c0f8:	10000005 	stb	zero,0(r2)
    return (len);
  84c0fc:	e0bffd03 	ldbu	r2,-12(fp)
}
  84c100:	e037883a 	mov	sp,fp
  84c104:	df000017 	ldw	fp,0(sp)
  84c108:	dec00104 	addi	sp,sp,4
  84c10c:	f800283a 	ret

0084c110 <OS_StrLen>:
*********************************************************************************************************
*/

#if (OS_EVENT_NAME_SIZE > 1) || (OS_FLAG_NAME_SIZE > 1) || (OS_MEM_NAME_SIZE > 1) || (OS_TASK_NAME_SIZE > 1) || (OS_TMR_CFG_NAME_SIZE > 1)
INT8U  OS_StrLen (INT8U *psrc)
{
  84c110:	defffd04 	addi	sp,sp,-12
  84c114:	df000215 	stw	fp,8(sp)
  84c118:	df000204 	addi	fp,sp,8
  84c11c:	e13fff15 	stw	r4,-4(fp)
    INT8U  len;


    len = 0;
  84c120:	e03ffe05 	stb	zero,-8(fp)
    while (*psrc != OS_ASCII_NUL) {
  84c124:	00000606 	br	84c140 <OS_StrLen+0x30>
        psrc++;
  84c128:	e0bfff17 	ldw	r2,-4(fp)
  84c12c:	10800044 	addi	r2,r2,1
  84c130:	e0bfff15 	stw	r2,-4(fp)
        len++;
  84c134:	e0bffe03 	ldbu	r2,-8(fp)
  84c138:	10800044 	addi	r2,r2,1
  84c13c:	e0bffe05 	stb	r2,-8(fp)
{
    INT8U  len;


    len = 0;
    while (*psrc != OS_ASCII_NUL) {
  84c140:	e0bfff17 	ldw	r2,-4(fp)
  84c144:	10800003 	ldbu	r2,0(r2)
  84c148:	10803fcc 	andi	r2,r2,255
  84c14c:	103ff61e 	bne	r2,zero,84c128 <__alt_mem_epcs_flash_controller_0+0xff843128>
        psrc++;
        len++;
    }
    return (len);
  84c150:	e0bffe03 	ldbu	r2,-8(fp)
}
  84c154:	e037883a 	mov	sp,fp
  84c158:	df000017 	ldw	fp,0(sp)
  84c15c:	dec00104 	addi	sp,sp,4
  84c160:	f800283a 	ret

0084c164 <OS_TaskIdle>:
*                 power.
*********************************************************************************************************
*/

void  OS_TaskIdle (void *p_arg)
{
  84c164:	defffa04 	addi	sp,sp,-24
  84c168:	dfc00515 	stw	ra,20(sp)
  84c16c:	df000415 	stw	fp,16(sp)
  84c170:	df000404 	addi	fp,sp,16
  84c174:	e13fff15 	stw	r4,-4(fp)
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84c178:	e03ffc15 	stw	zero,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84c17c:	0005303a 	rdctl	r2,status
  84c180:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84c184:	e0fffd17 	ldw	r3,-12(fp)
  84c188:	00bfff84 	movi	r2,-2
  84c18c:	1884703a 	and	r2,r3,r2
  84c190:	1001703a 	wrctl	status,r2
  
  return context;
  84c194:	e0bffd17 	ldw	r2,-12(fp)



    (void)p_arg;                                 /* Prevent compiler warning for not using 'p_arg'     */
    for (;;) {
        OS_ENTER_CRITICAL();
  84c198:	e0bffc15 	stw	r2,-16(fp)
        OSIdleCtr++;
  84c19c:	d0a0a417 	ldw	r2,-32112(gp)
  84c1a0:	10800044 	addi	r2,r2,1
  84c1a4:	d0a0a415 	stw	r2,-32112(gp)
  84c1a8:	e0bffc17 	ldw	r2,-16(fp)
  84c1ac:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84c1b0:	e0bffe17 	ldw	r2,-8(fp)
  84c1b4:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        OSTaskIdleHook();                        /* Call user definable HOOK                           */
  84c1b8:	08567cc0 	call	8567cc <OSTaskIdleHook>
    }
  84c1bc:	003fef06 	br	84c17c <__alt_mem_epcs_flash_controller_0+0xff84317c>

0084c1c0 <OS_TaskStat>:
*********************************************************************************************************
*/

#if OS_TASK_STAT_EN > 0
void  OS_TaskStat (void *p_arg)
{
  84c1c0:	defffa04 	addi	sp,sp,-24
  84c1c4:	dfc00515 	stw	ra,20(sp)
  84c1c8:	df000415 	stw	fp,16(sp)
  84c1cc:	df000404 	addi	fp,sp,16
  84c1d0:	e13fff15 	stw	r4,-4(fp)
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84c1d4:	e03ffc15 	stw	zero,-16(fp)
#endif



    (void)p_arg;                                 /* Prevent compiler warning for not using 'p_arg'     */
    while (OSStatRdy == OS_FALSE) {
  84c1d8:	00000206 	br	84c1e4 <OS_TaskStat+0x24>
        OSTimeDly(2 * OS_TICKS_PER_SEC / 10);    /* Wait until statistic task is ready                 */
  84c1dc:	01003204 	movi	r4,200
  84c1e0:	08519000 	call	851900 <OSTimeDly>
#endif



    (void)p_arg;                                 /* Prevent compiler warning for not using 'p_arg'     */
    while (OSStatRdy == OS_FALSE) {
  84c1e4:	d0a0b503 	ldbu	r2,-32044(gp)
  84c1e8:	10803fcc 	andi	r2,r2,255
  84c1ec:	103ffb26 	beq	r2,zero,84c1dc <__alt_mem_epcs_flash_controller_0+0xff8431dc>
        OSTimeDly(2 * OS_TICKS_PER_SEC / 10);    /* Wait until statistic task is ready                 */
    }
    OSIdleCtrMax /= 100L;
  84c1f0:	d0a0a917 	ldw	r2,-32092(gp)
  84c1f4:	01401904 	movi	r5,100
  84c1f8:	1009883a 	mov	r4,r2
  84c1fc:	08304480 	call	830448 <__udivsi3>
  84c200:	d0a0a915 	stw	r2,-32092(gp)
    if (OSIdleCtrMax == 0L) {
  84c204:	d0a0a917 	ldw	r2,-32092(gp)
  84c208:	1000031e 	bne	r2,zero,84c218 <OS_TaskStat+0x58>
        OSCPUUsage = 0;
  84c20c:	d020ab05 	stb	zero,-32084(gp)
        (void)OSTaskSuspend(OS_PRIO_SELF);
  84c210:	01003fc4 	movi	r4,255
  84c214:	08515880 	call	851588 <OSTaskSuspend>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84c218:	0005303a 	rdctl	r2,status
  84c21c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84c220:	e0fffd17 	ldw	r3,-12(fp)
  84c224:	00bfff84 	movi	r2,-2
  84c228:	1884703a 	and	r2,r3,r2
  84c22c:	1001703a 	wrctl	status,r2
  
  return context;
  84c230:	e0bffd17 	ldw	r2,-12(fp)
    }
    for (;;) {
        OS_ENTER_CRITICAL();
  84c234:	e0bffc15 	stw	r2,-16(fp)
        OSIdleCtrRun = OSIdleCtr;                /* Obtain the of the idle counter for the past second */
  84c238:	d0a0a417 	ldw	r2,-32112(gp)
  84c23c:	d0a0b615 	stw	r2,-32040(gp)
        OSIdleCtr    = 0L;                       /* Reset the idle counter for the next second         */
  84c240:	d020a415 	stw	zero,-32112(gp)
  84c244:	e0bffc17 	ldw	r2,-16(fp)
  84c248:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84c24c:	e0bffe17 	ldw	r2,-8(fp)
  84c250:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        OSCPUUsage   = (INT8U)(100L - OSIdleCtrRun / OSIdleCtrMax);
  84c254:	d0a0b617 	ldw	r2,-32040(gp)
  84c258:	d0e0a917 	ldw	r3,-32092(gp)
  84c25c:	180b883a 	mov	r5,r3
  84c260:	1009883a 	mov	r4,r2
  84c264:	08304480 	call	830448 <__udivsi3>
  84c268:	1007883a 	mov	r3,r2
  84c26c:	00801904 	movi	r2,100
  84c270:	10c5c83a 	sub	r2,r2,r3
  84c274:	d0a0ab05 	stb	r2,-32084(gp)
        OSTaskStatHook();                        /* Invoke user definable hook                         */
  84c278:	085674c0 	call	85674c <OSTaskStatHook>
#if (OS_TASK_STAT_STK_CHK_EN > 0) && (OS_TASK_CREATE_EXT_EN > 0)
        OS_TaskStatStkChk();                     /* Check the stacks for each task                     */
  84c27c:	084c28c0 	call	84c28c <OS_TaskStatStkChk>
#endif
        OSTimeDly(OS_TICKS_PER_SEC / 10);        /* Accumulate OSIdleCtr for the next 1/10 second      */
  84c280:	01001904 	movi	r4,100
  84c284:	08519000 	call	851900 <OSTimeDly>
    }
  84c288:	003fe306 	br	84c218 <__alt_mem_epcs_flash_controller_0+0xff843218>

0084c28c <OS_TaskStatStkChk>:
*********************************************************************************************************
*/

#if (OS_TASK_STAT_STK_CHK_EN > 0) && (OS_TASK_CREATE_EXT_EN > 0)
void  OS_TaskStatStkChk (void)
{
  84c28c:	defffa04 	addi	sp,sp,-24
  84c290:	dfc00515 	stw	ra,20(sp)
  84c294:	df000415 	stw	fp,16(sp)
  84c298:	df000404 	addi	fp,sp,16
    OS_STK_DATA  stk_data;
    INT8U        err;
    INT8U        prio;


    for (prio = 0; prio <= OS_TASK_IDLE_PRIO; prio++) {
  84c29c:	e03ffc05 	stb	zero,-16(fp)
  84c2a0:	00002406 	br	84c334 <OS_TaskStatStkChk+0xa8>
        err = OSTaskStkChk(prio, &stk_data);
  84c2a4:	e0bffc03 	ldbu	r2,-16(fp)
  84c2a8:	e0fffe04 	addi	r3,fp,-8
  84c2ac:	180b883a 	mov	r5,r3
  84c2b0:	1009883a 	mov	r4,r2
  84c2b4:	08513c80 	call	8513c8 <OSTaskStkChk>
  84c2b8:	e0bffc45 	stb	r2,-15(fp)
        if (err == OS_ERR_NONE) {
  84c2bc:	e0bffc43 	ldbu	r2,-15(fp)
  84c2c0:	1000191e 	bne	r2,zero,84c328 <OS_TaskStatStkChk+0x9c>
            ptcb = OSTCBPrioTbl[prio];
  84c2c4:	e0fffc03 	ldbu	r3,-16(fp)
  84c2c8:	008021b4 	movhi	r2,134
  84c2cc:	10950304 	addi	r2,r2,21516
  84c2d0:	18c7883a 	add	r3,r3,r3
  84c2d4:	18c7883a 	add	r3,r3,r3
  84c2d8:	10c5883a 	add	r2,r2,r3
  84c2dc:	10800017 	ldw	r2,0(r2)
  84c2e0:	e0bffd15 	stw	r2,-12(fp)
            if (ptcb != (OS_TCB *)0) {                               /* Make sure task 'ptcb' is ...   */
  84c2e4:	e0bffd17 	ldw	r2,-12(fp)
  84c2e8:	10000f26 	beq	r2,zero,84c328 <OS_TaskStatStkChk+0x9c>
                if (ptcb != OS_TCB_RESERVED) {                       /* ... still valid.               */
  84c2ec:	e0bffd17 	ldw	r2,-12(fp)
  84c2f0:	10800060 	cmpeqi	r2,r2,1
  84c2f4:	10000c1e 	bne	r2,zero,84c328 <OS_TaskStatStkChk+0x9c>
#if OS_TASK_PROFILE_EN > 0
                    #if OS_STK_GROWTH == 1
                    ptcb->OSTCBStkBase = ptcb->OSTCBStkBottom + ptcb->OSTCBStkSize;
  84c2f8:	e0bffd17 	ldw	r2,-12(fp)
  84c2fc:	10c00217 	ldw	r3,8(r2)
  84c300:	e0bffd17 	ldw	r2,-12(fp)
  84c304:	10800317 	ldw	r2,12(r2)
  84c308:	1085883a 	add	r2,r2,r2
  84c30c:	1085883a 	add	r2,r2,r2
  84c310:	1887883a 	add	r3,r3,r2
  84c314:	e0bffd17 	ldw	r2,-12(fp)
  84c318:	10c01115 	stw	r3,68(r2)
                    #else
                    ptcb->OSTCBStkBase = ptcb->OSTCBStkBottom - ptcb->OSTCBStkSize;
                    #endif
                    ptcb->OSTCBStkUsed = stk_data.OSUsed;            /* Store the number of bytes used */
  84c31c:	e0ffff17 	ldw	r3,-4(fp)
  84c320:	e0bffd17 	ldw	r2,-12(fp)
  84c324:	10c01215 	stw	r3,72(r2)
    OS_STK_DATA  stk_data;
    INT8U        err;
    INT8U        prio;


    for (prio = 0; prio <= OS_TASK_IDLE_PRIO; prio++) {
  84c328:	e0bffc03 	ldbu	r2,-16(fp)
  84c32c:	10800044 	addi	r2,r2,1
  84c330:	e0bffc05 	stb	r2,-16(fp)
  84c334:	e0bffc03 	ldbu	r2,-16(fp)
  84c338:	10800570 	cmpltui	r2,r2,21
  84c33c:	103fd91e 	bne	r2,zero,84c2a4 <__alt_mem_epcs_flash_controller_0+0xff8432a4>
#endif
                }
            }
        }
    }
}
  84c340:	0001883a 	nop
  84c344:	e037883a 	mov	sp,fp
  84c348:	dfc00117 	ldw	ra,4(sp)
  84c34c:	df000017 	ldw	fp,0(sp)
  84c350:	dec00204 	addi	sp,sp,8
  84c354:	f800283a 	ret

0084c358 <OS_TCBInit>:
* Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/

INT8U  OS_TCBInit (INT8U prio, OS_STK *ptos, OS_STK *pbos, INT16U id, INT32U stk_size, void *pext, INT16U opt)
{
  84c358:	defff204 	addi	sp,sp,-56
  84c35c:	dfc00d15 	stw	ra,52(sp)
  84c360:	df000c15 	stw	fp,48(sp)
  84c364:	df000c04 	addi	fp,sp,48
  84c368:	e17ffc15 	stw	r5,-16(fp)
  84c36c:	e1bffd15 	stw	r6,-12(fp)
  84c370:	3807883a 	mov	r3,r7
  84c374:	e0800417 	ldw	r2,16(fp)
  84c378:	e13ffb05 	stb	r4,-20(fp)
  84c37c:	e0fffe0d 	sth	r3,-8(fp)
  84c380:	e0bfff0d 	sth	r2,-4(fp)
    OS_TCB    *ptcb;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  84c384:	e03ff415 	stw	zero,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84c388:	0005303a 	rdctl	r2,status
  84c38c:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84c390:	e0fffa17 	ldw	r3,-24(fp)
  84c394:	00bfff84 	movi	r2,-2
  84c398:	1884703a 	and	r2,r3,r2
  84c39c:	1001703a 	wrctl	status,r2
  
  return context;
  84c3a0:	e0bffa17 	ldw	r2,-24(fp)
#endif



    OS_ENTER_CRITICAL();
  84c3a4:	e0bff415 	stw	r2,-48(fp)
    ptcb = OSTCBFreeList;                                  /* Get a free TCB from the free TCB list    */
  84c3a8:	d0a0aa17 	ldw	r2,-32088(gp)
  84c3ac:	e0bff615 	stw	r2,-40(fp)
    if (ptcb != (OS_TCB *)0) {
  84c3b0:	e0bff617 	ldw	r2,-40(fp)
  84c3b4:	10009326 	beq	r2,zero,84c604 <OS_TCBInit+0x2ac>
        OSTCBFreeList            = ptcb->OSTCBNext;        /* Update pointer to free TCB list          */
  84c3b8:	e0bff617 	ldw	r2,-40(fp)
  84c3bc:	10800517 	ldw	r2,20(r2)
  84c3c0:	d0a0aa15 	stw	r2,-32088(gp)
  84c3c4:	e0bff417 	ldw	r2,-48(fp)
  84c3c8:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84c3cc:	e0bff817 	ldw	r2,-32(fp)
  84c3d0:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        ptcb->OSTCBStkPtr        = ptos;                   /* Load Stack pointer in TCB                */
  84c3d4:	e0bff617 	ldw	r2,-40(fp)
  84c3d8:	e0fffc17 	ldw	r3,-16(fp)
  84c3dc:	10c00015 	stw	r3,0(r2)
        ptcb->OSTCBPrio          = prio;                   /* Load task priority into TCB              */
  84c3e0:	e0bff617 	ldw	r2,-40(fp)
  84c3e4:	e0fffb03 	ldbu	r3,-20(fp)
  84c3e8:	10c00c85 	stb	r3,50(r2)
        ptcb->OSTCBStat          = OS_STAT_RDY;            /* Task is ready to run                     */
  84c3ec:	e0bff617 	ldw	r2,-40(fp)
  84c3f0:	10000c05 	stb	zero,48(r2)
        ptcb->OSTCBStatPend      = OS_STAT_PEND_OK;        /* Clear pend status                        */
  84c3f4:	e0bff617 	ldw	r2,-40(fp)
  84c3f8:	10000c45 	stb	zero,49(r2)
        ptcb->OSTCBDly           = 0;                      /* Task is not delayed                      */
  84c3fc:	e0bff617 	ldw	r2,-40(fp)
  84c400:	10000b8d 	sth	zero,46(r2)

#if OS_TASK_CREATE_EXT_EN > 0
        ptcb->OSTCBExtPtr        = pext;                   /* Store pointer to TCB extension           */
  84c404:	e0bff617 	ldw	r2,-40(fp)
  84c408:	e0c00317 	ldw	r3,12(fp)
  84c40c:	10c00115 	stw	r3,4(r2)
        ptcb->OSTCBStkSize       = stk_size;               /* Store stack size                         */
  84c410:	e0bff617 	ldw	r2,-40(fp)
  84c414:	e0c00217 	ldw	r3,8(fp)
  84c418:	10c00315 	stw	r3,12(r2)
        ptcb->OSTCBStkBottom     = pbos;                   /* Store pointer to bottom of stack         */
  84c41c:	e0bff617 	ldw	r2,-40(fp)
  84c420:	e0fffd17 	ldw	r3,-12(fp)
  84c424:	10c00215 	stw	r3,8(r2)
        ptcb->OSTCBOpt           = opt;                    /* Store task options                       */
  84c428:	e0bff617 	ldw	r2,-40(fp)
  84c42c:	e0ffff0b 	ldhu	r3,-4(fp)
  84c430:	10c0040d 	sth	r3,16(r2)
        ptcb->OSTCBId            = id;                     /* Store task ID                            */
  84c434:	e0bff617 	ldw	r2,-40(fp)
  84c438:	e0fffe0b 	ldhu	r3,-8(fp)
  84c43c:	10c0048d 	sth	r3,18(r2)
        opt                      = opt;
        id                       = id;
#endif

#if OS_TASK_DEL_EN > 0
        ptcb->OSTCBDelReq        = OS_ERR_NONE;
  84c440:	e0bff617 	ldw	r2,-40(fp)
  84c444:	10000dc5 	stb	zero,55(r2)
#endif

#if OS_LOWEST_PRIO <= 63
        ptcb->OSTCBY             = (INT8U)(prio >> 3);          /* Pre-compute X, Y, BitX and BitY     */
  84c448:	e0bffb03 	ldbu	r2,-20(fp)
  84c44c:	1004d0fa 	srli	r2,r2,3
  84c450:	1007883a 	mov	r3,r2
  84c454:	e0bff617 	ldw	r2,-40(fp)
  84c458:	10c00d05 	stb	r3,52(r2)
        ptcb->OSTCBX             = (INT8U)(prio & 0x07);
  84c45c:	e0bffb03 	ldbu	r2,-20(fp)
  84c460:	108001cc 	andi	r2,r2,7
  84c464:	1007883a 	mov	r3,r2
  84c468:	e0bff617 	ldw	r2,-40(fp)
  84c46c:	10c00cc5 	stb	r3,51(r2)
        ptcb->OSTCBBitY          = (INT8U)(1 << ptcb->OSTCBY);
  84c470:	e0bff617 	ldw	r2,-40(fp)
  84c474:	10800d03 	ldbu	r2,52(r2)
  84c478:	10803fcc 	andi	r2,r2,255
  84c47c:	00c00044 	movi	r3,1
  84c480:	1884983a 	sll	r2,r3,r2
  84c484:	1007883a 	mov	r3,r2
  84c488:	e0bff617 	ldw	r2,-40(fp)
  84c48c:	10c00d85 	stb	r3,54(r2)
        ptcb->OSTCBBitX          = (INT8U)(1 << ptcb->OSTCBX);
  84c490:	e0bff617 	ldw	r2,-40(fp)
  84c494:	10800cc3 	ldbu	r2,51(r2)
  84c498:	10803fcc 	andi	r2,r2,255
  84c49c:	00c00044 	movi	r3,1
  84c4a0:	1884983a 	sll	r2,r3,r2
  84c4a4:	1007883a 	mov	r3,r2
  84c4a8:	e0bff617 	ldw	r2,-40(fp)
  84c4ac:	10c00d45 	stb	r3,53(r2)
        ptcb->OSTCBBitY          = (INT16U)(1 << ptcb->OSTCBY);
        ptcb->OSTCBBitX          = (INT16U)(1 << ptcb->OSTCBX);
#endif

#if (OS_EVENT_EN)
        ptcb->OSTCBEventPtr      = (OS_EVENT  *)0;         /* Task is not pending on an  event         */
  84c4b0:	e0bff617 	ldw	r2,-40(fp)
  84c4b4:	10000715 	stw	zero,28(r2)
#if (OS_EVENT_MULTI_EN > 0)
        ptcb->OSTCBEventMultiPtr = (OS_EVENT **)0;         /* Task is not pending on any events        */
  84c4b8:	e0bff617 	ldw	r2,-40(fp)
  84c4bc:	10000815 	stw	zero,32(r2)
#endif
#endif

#if (OS_FLAG_EN > 0) && (OS_MAX_FLAGS > 0) && (OS_TASK_DEL_EN > 0)
        ptcb->OSTCBFlagNode  = (OS_FLAG_NODE *)0;          /* Task is not pending on an event flag     */
  84c4c0:	e0bff617 	ldw	r2,-40(fp)
  84c4c4:	10000a15 	stw	zero,40(r2)
#endif

#if (OS_MBOX_EN > 0) || ((OS_Q_EN > 0) && (OS_MAX_QS > 0))
        ptcb->OSTCBMsg       = (void *)0;                  /* No message received                      */
  84c4c8:	e0bff617 	ldw	r2,-40(fp)
  84c4cc:	10000915 	stw	zero,36(r2)
#endif

#if OS_TASK_PROFILE_EN > 0
        ptcb->OSTCBCtxSwCtr    = 0L;                       /* Initialize profiling variables           */
  84c4d0:	e0bff617 	ldw	r2,-40(fp)
  84c4d4:	10000e15 	stw	zero,56(r2)
        ptcb->OSTCBCyclesStart = 0L;
  84c4d8:	e0bff617 	ldw	r2,-40(fp)
  84c4dc:	10001015 	stw	zero,64(r2)
        ptcb->OSTCBCyclesTot   = 0L;
  84c4e0:	e0bff617 	ldw	r2,-40(fp)
  84c4e4:	10000f15 	stw	zero,60(r2)
        ptcb->OSTCBStkBase     = (OS_STK *)0;
  84c4e8:	e0bff617 	ldw	r2,-40(fp)
  84c4ec:	10001115 	stw	zero,68(r2)
        ptcb->OSTCBStkUsed     = 0L;
  84c4f0:	e0bff617 	ldw	r2,-40(fp)
  84c4f4:	10001215 	stw	zero,72(r2)
#endif

#if OS_TASK_NAME_SIZE > 1
        ptcb->OSTCBTaskName[0] = '?';                      /* Unknown name at task creation            */
  84c4f8:	e0bff617 	ldw	r2,-40(fp)
  84c4fc:	00c00fc4 	movi	r3,63
  84c500:	10c01305 	stb	r3,76(r2)
        ptcb->OSTCBTaskName[1] = OS_ASCII_NUL;
  84c504:	e0bff617 	ldw	r2,-40(fp)
  84c508:	10001345 	stb	zero,77(r2)
#endif

        OSTCBInitHook(ptcb);
  84c50c:	e13ff617 	ldw	r4,-40(fp)
  84c510:	08567ec0 	call	8567ec <OSTCBInitHook>

        OSTaskCreateHook(ptcb);                            /* Call user defined hook                   */
  84c514:	e13ff617 	ldw	r4,-40(fp)
  84c518:	08566e40 	call	8566e4 <OSTaskCreateHook>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84c51c:	0005303a 	rdctl	r2,status
  84c520:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84c524:	e0fff517 	ldw	r3,-44(fp)
  84c528:	00bfff84 	movi	r2,-2
  84c52c:	1884703a 	and	r2,r3,r2
  84c530:	1001703a 	wrctl	status,r2
  
  return context;
  84c534:	e0bff517 	ldw	r2,-44(fp)

        OS_ENTER_CRITICAL();
  84c538:	e0bff415 	stw	r2,-48(fp)
        OSTCBPrioTbl[prio] = ptcb;
  84c53c:	e0fffb03 	ldbu	r3,-20(fp)
  84c540:	008021b4 	movhi	r2,134
  84c544:	10950304 	addi	r2,r2,21516
  84c548:	18c7883a 	add	r3,r3,r3
  84c54c:	18c7883a 	add	r3,r3,r3
  84c550:	10c5883a 	add	r2,r2,r3
  84c554:	e0fff617 	ldw	r3,-40(fp)
  84c558:	10c00015 	stw	r3,0(r2)
        ptcb->OSTCBNext    = OSTCBList;                    /* Link into TCB chain                      */
  84c55c:	d0e0a617 	ldw	r3,-32104(gp)
  84c560:	e0bff617 	ldw	r2,-40(fp)
  84c564:	10c00515 	stw	r3,20(r2)
        ptcb->OSTCBPrev    = (OS_TCB *)0;
  84c568:	e0bff617 	ldw	r2,-40(fp)
  84c56c:	10000615 	stw	zero,24(r2)
        if (OSTCBList != (OS_TCB *)0) {
  84c570:	d0a0a617 	ldw	r2,-32104(gp)
  84c574:	10000326 	beq	r2,zero,84c584 <OS_TCBInit+0x22c>
            OSTCBList->OSTCBPrev = ptcb;
  84c578:	d0a0a617 	ldw	r2,-32104(gp)
  84c57c:	e0fff617 	ldw	r3,-40(fp)
  84c580:	10c00615 	stw	r3,24(r2)
        }
        OSTCBList               = ptcb;
  84c584:	e0bff617 	ldw	r2,-40(fp)
  84c588:	d0a0a615 	stw	r2,-32104(gp)
        OSRdyGrp               |= ptcb->OSTCBBitY;         /* Make task ready to run                   */
  84c58c:	e0bff617 	ldw	r2,-40(fp)
  84c590:	10c00d83 	ldbu	r3,54(r2)
  84c594:	d0a0af03 	ldbu	r2,-32068(gp)
  84c598:	1884b03a 	or	r2,r3,r2
  84c59c:	d0a0af05 	stb	r2,-32068(gp)
        OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
  84c5a0:	e0bff617 	ldw	r2,-40(fp)
  84c5a4:	10800d03 	ldbu	r2,52(r2)
  84c5a8:	10c03fcc 	andi	r3,r2,255
  84c5ac:	e0bff617 	ldw	r2,-40(fp)
  84c5b0:	10800d03 	ldbu	r2,52(r2)
  84c5b4:	11003fcc 	andi	r4,r2,255
  84c5b8:	d0a0af44 	addi	r2,gp,-32067
  84c5bc:	2085883a 	add	r2,r4,r2
  84c5c0:	11000003 	ldbu	r4,0(r2)
  84c5c4:	e0bff617 	ldw	r2,-40(fp)
  84c5c8:	10800d43 	ldbu	r2,53(r2)
  84c5cc:	2084b03a 	or	r2,r4,r2
  84c5d0:	1009883a 	mov	r4,r2
  84c5d4:	d0a0af44 	addi	r2,gp,-32067
  84c5d8:	1885883a 	add	r2,r3,r2
  84c5dc:	11000005 	stb	r4,0(r2)
        OSTaskCtr++;                                       /* Increment the #tasks counter             */
  84c5e0:	d0a0ab43 	ldbu	r2,-32083(gp)
  84c5e4:	10800044 	addi	r2,r2,1
  84c5e8:	d0a0ab45 	stb	r2,-32083(gp)
  84c5ec:	e0bff417 	ldw	r2,-48(fp)
  84c5f0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84c5f4:	e0bff717 	ldw	r2,-36(fp)
  84c5f8:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_NONE);
  84c5fc:	0005883a 	mov	r2,zero
  84c600:	00000506 	br	84c618 <OS_TCBInit+0x2c0>
  84c604:	e0bff417 	ldw	r2,-48(fp)
  84c608:	e0bff915 	stw	r2,-28(fp)
  84c60c:	e0bff917 	ldw	r2,-28(fp)
  84c610:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    return (OS_ERR_TASK_NO_MORE_TCB);
  84c614:	00801084 	movi	r2,66
}
  84c618:	e037883a 	mov	sp,fp
  84c61c:	dfc00117 	ldw	ra,4(sp)
  84c620:	df000017 	ldw	fp,0(sp)
  84c624:	dec00204 	addi	sp,sp,8
  84c628:	f800283a 	ret

0084c62c <OSDebugInit>:
*********************************************************************************************************
*/

#if OS_DEBUG_EN > 0
void  OSDebugInit (void)
{
  84c62c:	defffe04 	addi	sp,sp,-8
  84c630:	df000115 	stw	fp,4(sp)
  84c634:	df000104 	addi	fp,sp,4
    void  *ptemp;

    
    ptemp = (void *)&OSDebugEn;
  84c638:	d0a04e04 	addi	r2,gp,-32456
  84c63c:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSEndiannessTest;
  84c640:	d0a04f04 	addi	r2,gp,-32452
  84c644:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSEventMax;
  84c648:	d0a05084 	addi	r2,gp,-32446
  84c64c:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSEventNameSize;
  84c650:	d0a05104 	addi	r2,gp,-32444
  84c654:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSEventEn;
  84c658:	d0a05004 	addi	r2,gp,-32448
  84c65c:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSEventSize;
  84c660:	d0a05184 	addi	r2,gp,-32442
  84c664:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSEventTblSize;
  84c668:	d0a05204 	addi	r2,gp,-32440
  84c66c:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSEventMultiEn;
  84c670:	d0a05284 	addi	r2,gp,-32438
  84c674:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSFlagEn;
  84c678:	d0a05304 	addi	r2,gp,-32436
  84c67c:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSFlagGrpSize;
  84c680:	d0a05384 	addi	r2,gp,-32434
  84c684:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSFlagNodeSize;
  84c688:	d0a05404 	addi	r2,gp,-32432
  84c68c:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSFlagWidth;
  84c690:	d0a05484 	addi	r2,gp,-32430
  84c694:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSFlagMax;
  84c698:	d0a05504 	addi	r2,gp,-32428
  84c69c:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSFlagNameSize;
  84c6a0:	d0a05584 	addi	r2,gp,-32426
  84c6a4:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSLowestPrio;
  84c6a8:	d0a05604 	addi	r2,gp,-32424
  84c6ac:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSMboxEn;
  84c6b0:	d0a05684 	addi	r2,gp,-32422
  84c6b4:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSMemEn;
  84c6b8:	d0a05704 	addi	r2,gp,-32420
  84c6bc:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSMemMax;
  84c6c0:	d0a05784 	addi	r2,gp,-32418
  84c6c4:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSMemNameSize;
  84c6c8:	d0a05804 	addi	r2,gp,-32416
  84c6cc:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSMemSize;
  84c6d0:	d0a05884 	addi	r2,gp,-32414
  84c6d4:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSMemTblSize;
  84c6d8:	d0a05904 	addi	r2,gp,-32412
  84c6dc:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSMutexEn;
  84c6e0:	d0a05984 	addi	r2,gp,-32410
  84c6e4:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSPtrSize;
  84c6e8:	d0a05a04 	addi	r2,gp,-32408
  84c6ec:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSQEn;
  84c6f0:	d0a05a84 	addi	r2,gp,-32406
  84c6f4:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSQMax;
  84c6f8:	d0a05b04 	addi	r2,gp,-32404
  84c6fc:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSQSize;
  84c700:	d0a05b84 	addi	r2,gp,-32402
  84c704:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSRdyTblSize;
  84c708:	d0a05c04 	addi	r2,gp,-32400
  84c70c:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSSemEn;
  84c710:	d0a05c84 	addi	r2,gp,-32398
  84c714:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSStkWidth;
  84c718:	d0a05d04 	addi	r2,gp,-32396
  84c71c:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSTaskCreateEn;
  84c720:	d0a05d84 	addi	r2,gp,-32394
  84c724:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskCreateExtEn;
  84c728:	d0a05e04 	addi	r2,gp,-32392
  84c72c:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskDelEn;
  84c730:	d0a05e84 	addi	r2,gp,-32390
  84c734:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskIdleStkSize;
  84c738:	d0a05f04 	addi	r2,gp,-32388
  84c73c:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskProfileEn;
  84c740:	d0a05f84 	addi	r2,gp,-32386
  84c744:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskMax;
  84c748:	d0a06004 	addi	r2,gp,-32384
  84c74c:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskNameSize;
  84c750:	d0a06084 	addi	r2,gp,-32382
  84c754:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskStatEn;
  84c758:	d0a06104 	addi	r2,gp,-32380
  84c75c:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskStatStkSize;
  84c760:	d0a06184 	addi	r2,gp,-32378
  84c764:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskStatStkChkEn;
  84c768:	d0a06204 	addi	r2,gp,-32376
  84c76c:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTaskSwHookEn;
  84c770:	d0a06284 	addi	r2,gp,-32374
  84c774:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSTCBPrioTblMax;
  84c778:	d0a06304 	addi	r2,gp,-32372
  84c77c:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTCBSize;
  84c780:	d0a06384 	addi	r2,gp,-32370
  84c784:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSTicksPerSec;
  84c788:	d0a06404 	addi	r2,gp,-32368
  84c78c:	e0bfff15 	stw	r2,-4(fp)
    ptemp = (void *)&OSTimeTickHookEn;
  84c790:	d0a06484 	addi	r2,gp,-32366
  84c794:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSTmrWheelSize;
    ptemp = (void *)&OSTmrWheelTblSize;
#endif

    ptemp = (void *)&OSVersionNbr;
  84c798:	d0a06504 	addi	r2,gp,-32364
  84c79c:	e0bfff15 	stw	r2,-4(fp)

    ptemp = (void *)&OSDataSize;
  84c7a0:	d0a06a04 	addi	r2,gp,-32344
  84c7a4:	e0bfff15 	stw	r2,-4(fp)

    ptemp = ptemp;                             /* Prevent compiler warning for 'ptemp' not being used! */
}
  84c7a8:	0001883a 	nop
  84c7ac:	e037883a 	mov	sp,fp
  84c7b0:	df000017 	ldw	fp,0(sp)
  84c7b4:	dec00104 	addi	sp,sp,4
  84c7b8:	f800283a 	ret

0084c7bc <OSFlagAccept>:
*********************************************************************************************************
*/

#if OS_FLAG_ACCEPT_EN > 0
OS_FLAGS  OSFlagAccept (OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT8U *perr)
{
  84c7bc:	defff204 	addi	sp,sp,-56
  84c7c0:	df000d15 	stw	fp,52(sp)
  84c7c4:	df000d04 	addi	fp,sp,52
  84c7c8:	e13ffc15 	stw	r4,-16(fp)
  84c7cc:	2807883a 	mov	r3,r5
  84c7d0:	3005883a 	mov	r2,r6
  84c7d4:	e1ffff15 	stw	r7,-4(fp)
  84c7d8:	e0fffd0d 	sth	r3,-12(fp)
  84c7dc:	e0bffe05 	stb	r2,-8(fp)
    OS_FLAGS      flags_rdy;
    INT8U         result;
    BOOLEAN       consume;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR     cpu_sr = 0;
  84c7e0:	e03ff415 	stw	zero,-48(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                              /* Validate 'perr'                          */
  84c7e4:	e0bfff17 	ldw	r2,-4(fp)
  84c7e8:	1000021e 	bne	r2,zero,84c7f4 <OSFlagAccept+0x38>
        return ((OS_FLAGS)0);
  84c7ec:	0005883a 	mov	r2,zero
  84c7f0:	0000b006 	br	84cab4 <OSFlagAccept+0x2f8>
    }
    if (pgrp == (OS_FLAG_GRP *)0) {                        /* Validate 'pgrp'                          */
  84c7f4:	e0bffc17 	ldw	r2,-16(fp)
  84c7f8:	1000051e 	bne	r2,zero,84c810 <OSFlagAccept+0x54>
        *perr = OS_ERR_FLAG_INVALID_PGRP;
  84c7fc:	e0bfff17 	ldw	r2,-4(fp)
  84c800:	00c01b84 	movi	r3,110
  84c804:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84c808:	0005883a 	mov	r2,zero
  84c80c:	0000a906 	br	84cab4 <OSFlagAccept+0x2f8>
    }
#endif
    if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {          /* Validate event block type                */
  84c810:	e0bffc17 	ldw	r2,-16(fp)
  84c814:	10800003 	ldbu	r2,0(r2)
  84c818:	10803fcc 	andi	r2,r2,255
  84c81c:	10800160 	cmpeqi	r2,r2,5
  84c820:	1000051e 	bne	r2,zero,84c838 <OSFlagAccept+0x7c>
        *perr = OS_ERR_EVENT_TYPE;
  84c824:	e0bfff17 	ldw	r2,-4(fp)
  84c828:	00c00044 	movi	r3,1
  84c82c:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84c830:	0005883a 	mov	r2,zero
  84c834:	00009f06 	br	84cab4 <OSFlagAccept+0x2f8>
    }
    result = (INT8U)(wait_type & OS_FLAG_CONSUME);
  84c838:	e0fffe03 	ldbu	r3,-8(fp)
  84c83c:	00bfe004 	movi	r2,-128
  84c840:	1884703a 	and	r2,r3,r2
  84c844:	e0bff505 	stb	r2,-44(fp)
    if (result != (INT8U)0) {                              /* See if we need to consume the flags      */
  84c848:	e0bff503 	ldbu	r2,-44(fp)
  84c84c:	10000626 	beq	r2,zero,84c868 <OSFlagAccept+0xac>
        wait_type &= ~OS_FLAG_CONSUME;
  84c850:	e0bffe03 	ldbu	r2,-8(fp)
  84c854:	10801fcc 	andi	r2,r2,127
  84c858:	e0bffe05 	stb	r2,-8(fp)
        consume    = OS_TRUE;
  84c85c:	00800044 	movi	r2,1
  84c860:	e0bff385 	stb	r2,-50(fp)
  84c864:	00000106 	br	84c86c <OSFlagAccept+0xb0>
    } else {
        consume    = OS_FALSE;
  84c868:	e03ff385 	stb	zero,-50(fp)
    }
/*$PAGE*/
    *perr = OS_ERR_NONE;                                   /* Assume NO error until proven otherwise.  */
  84c86c:	e0bfff17 	ldw	r2,-4(fp)
  84c870:	10000005 	stb	zero,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84c874:	0005303a 	rdctl	r2,status
  84c878:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84c87c:	e0fffb17 	ldw	r3,-20(fp)
  84c880:	00bfff84 	movi	r2,-2
  84c884:	1884703a 	and	r2,r3,r2
  84c888:	1001703a 	wrctl	status,r2
  
  return context;
  84c88c:	e0bffb17 	ldw	r2,-20(fp)
    OS_ENTER_CRITICAL();
  84c890:	e0bff415 	stw	r2,-48(fp)
    switch (wait_type) {
  84c894:	e0bffe03 	ldbu	r2,-8(fp)
  84c898:	10c00060 	cmpeqi	r3,r2,1
  84c89c:	18005f1e 	bne	r3,zero,84ca1c <OSFlagAccept+0x260>
  84c8a0:	10c00088 	cmpgei	r3,r2,2
  84c8a4:	1800021e 	bne	r3,zero,84c8b0 <OSFlagAccept+0xf4>
  84c8a8:	10003f26 	beq	r2,zero,84c9a8 <OSFlagAccept+0x1ec>
  84c8ac:	00007706 	br	84ca8c <OSFlagAccept+0x2d0>
  84c8b0:	10c000a0 	cmpeqi	r3,r2,2
  84c8b4:	1800031e 	bne	r3,zero,84c8c4 <OSFlagAccept+0x108>
  84c8b8:	108000e0 	cmpeqi	r2,r2,3
  84c8bc:	10001e1e 	bne	r2,zero,84c938 <OSFlagAccept+0x17c>
  84c8c0:	00007206 	br	84ca8c <OSFlagAccept+0x2d0>
        case OS_FLAG_WAIT_SET_ALL:                         /* See if all required flags are set        */
             flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & flags);     /* Extract only the bits we want   */
  84c8c4:	e0bffc17 	ldw	r2,-16(fp)
  84c8c8:	10c0020b 	ldhu	r3,8(r2)
  84c8cc:	e0bffd0b 	ldhu	r2,-12(fp)
  84c8d0:	1884703a 	and	r2,r3,r2
  84c8d4:	e0bff30d 	sth	r2,-52(fp)
             if (flags_rdy == flags) {                     /* Must match ALL the bits that we want     */
  84c8d8:	e0fff30b 	ldhu	r3,-52(fp)
  84c8dc:	e0bffd0b 	ldhu	r2,-12(fp)
  84c8e0:	18800d1e 	bne	r3,r2,84c918 <OSFlagAccept+0x15c>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84c8e4:	e0bff383 	ldbu	r2,-50(fp)
  84c8e8:	10800058 	cmpnei	r2,r2,1
  84c8ec:	10000d1e 	bne	r2,zero,84c924 <OSFlagAccept+0x168>
                     pgrp->OSFlagFlags &= ~flags_rdy;      /* Clear ONLY the flags that we wanted      */
  84c8f0:	e0bffc17 	ldw	r2,-16(fp)
  84c8f4:	1080020b 	ldhu	r2,8(r2)
  84c8f8:	1007883a 	mov	r3,r2
  84c8fc:	e0bff30b 	ldhu	r2,-52(fp)
  84c900:	0084303a 	nor	r2,zero,r2
  84c904:	1884703a 	and	r2,r3,r2
  84c908:	1007883a 	mov	r3,r2
  84c90c:	e0bffc17 	ldw	r2,-16(fp)
  84c910:	10c0020d 	sth	r3,8(r2)
  84c914:	00000306 	br	84c924 <OSFlagAccept+0x168>
                 }
             } else {
                 *perr = OS_ERR_FLAG_NOT_RDY;
  84c918:	e0bfff17 	ldw	r2,-4(fp)
  84c91c:	00c01c04 	movi	r3,112
  84c920:	10c00005 	stb	r3,0(r2)
  84c924:	e0bff417 	ldw	r2,-48(fp)
  84c928:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84c92c:	e0bff617 	ldw	r2,-40(fp)
  84c930:	1001703a 	wrctl	status,r2
             }
             OS_EXIT_CRITICAL();
             break;
  84c934:	00005e06 	br	84cab0 <OSFlagAccept+0x2f4>

        case OS_FLAG_WAIT_SET_ANY:
             flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & flags);     /* Extract only the bits we want   */
  84c938:	e0bffc17 	ldw	r2,-16(fp)
  84c93c:	10c0020b 	ldhu	r3,8(r2)
  84c940:	e0bffd0b 	ldhu	r2,-12(fp)
  84c944:	1884703a 	and	r2,r3,r2
  84c948:	e0bff30d 	sth	r2,-52(fp)
             if (flags_rdy != (OS_FLAGS)0) {               /* See if any flag set                      */
  84c94c:	e0bff30b 	ldhu	r2,-52(fp)
  84c950:	10000d26 	beq	r2,zero,84c988 <OSFlagAccept+0x1cc>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84c954:	e0bff383 	ldbu	r2,-50(fp)
  84c958:	10800058 	cmpnei	r2,r2,1
  84c95c:	10000d1e 	bne	r2,zero,84c994 <OSFlagAccept+0x1d8>
                     pgrp->OSFlagFlags &= ~flags_rdy;      /* Clear ONLY the flags that we got         */
  84c960:	e0bffc17 	ldw	r2,-16(fp)
  84c964:	1080020b 	ldhu	r2,8(r2)
  84c968:	1007883a 	mov	r3,r2
  84c96c:	e0bff30b 	ldhu	r2,-52(fp)
  84c970:	0084303a 	nor	r2,zero,r2
  84c974:	1884703a 	and	r2,r3,r2
  84c978:	1007883a 	mov	r3,r2
  84c97c:	e0bffc17 	ldw	r2,-16(fp)
  84c980:	10c0020d 	sth	r3,8(r2)
  84c984:	00000306 	br	84c994 <OSFlagAccept+0x1d8>
                 }
             } else {
                 *perr = OS_ERR_FLAG_NOT_RDY;
  84c988:	e0bfff17 	ldw	r2,-4(fp)
  84c98c:	00c01c04 	movi	r3,112
  84c990:	10c00005 	stb	r3,0(r2)
  84c994:	e0bff417 	ldw	r2,-48(fp)
  84c998:	e0bff715 	stw	r2,-36(fp)
  84c99c:	e0bff717 	ldw	r2,-36(fp)
  84c9a0:	1001703a 	wrctl	status,r2
             }
             OS_EXIT_CRITICAL();
             break;
  84c9a4:	00004206 	br	84cab0 <OSFlagAccept+0x2f4>

#if OS_FLAG_WAIT_CLR_EN > 0
        case OS_FLAG_WAIT_CLR_ALL:                         /* See if all required flags are cleared    */
             flags_rdy = (OS_FLAGS)(~pgrp->OSFlagFlags & flags);  /* Extract only the bits we want     */
  84c9a8:	e0bffc17 	ldw	r2,-16(fp)
  84c9ac:	1080020b 	ldhu	r2,8(r2)
  84c9b0:	0084303a 	nor	r2,zero,r2
  84c9b4:	1007883a 	mov	r3,r2
  84c9b8:	e0bffd0b 	ldhu	r2,-12(fp)
  84c9bc:	1884703a 	and	r2,r3,r2
  84c9c0:	e0bff30d 	sth	r2,-52(fp)
             if (flags_rdy == flags) {                     /* Must match ALL the bits that we want     */
  84c9c4:	e0fff30b 	ldhu	r3,-52(fp)
  84c9c8:	e0bffd0b 	ldhu	r2,-12(fp)
  84c9cc:	18800b1e 	bne	r3,r2,84c9fc <OSFlagAccept+0x240>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84c9d0:	e0bff383 	ldbu	r2,-50(fp)
  84c9d4:	10800058 	cmpnei	r2,r2,1
  84c9d8:	10000b1e 	bne	r2,zero,84ca08 <OSFlagAccept+0x24c>
                     pgrp->OSFlagFlags |= flags_rdy;       /* Set ONLY the flags that we wanted        */
  84c9dc:	e0bffc17 	ldw	r2,-16(fp)
  84c9e0:	10c0020b 	ldhu	r3,8(r2)
  84c9e4:	e0bff30b 	ldhu	r2,-52(fp)
  84c9e8:	1884b03a 	or	r2,r3,r2
  84c9ec:	1007883a 	mov	r3,r2
  84c9f0:	e0bffc17 	ldw	r2,-16(fp)
  84c9f4:	10c0020d 	sth	r3,8(r2)
  84c9f8:	00000306 	br	84ca08 <OSFlagAccept+0x24c>
                 }
             } else {
                 *perr = OS_ERR_FLAG_NOT_RDY;
  84c9fc:	e0bfff17 	ldw	r2,-4(fp)
  84ca00:	00c01c04 	movi	r3,112
  84ca04:	10c00005 	stb	r3,0(r2)
  84ca08:	e0bff417 	ldw	r2,-48(fp)
  84ca0c:	e0bff815 	stw	r2,-32(fp)
  84ca10:	e0bff817 	ldw	r2,-32(fp)
  84ca14:	1001703a 	wrctl	status,r2
             }
             OS_EXIT_CRITICAL();
             break;
  84ca18:	00002506 	br	84cab0 <OSFlagAccept+0x2f4>

        case OS_FLAG_WAIT_CLR_ANY:
             flags_rdy = (OS_FLAGS)(~pgrp->OSFlagFlags & flags); /* Extract only the bits we want      */
  84ca1c:	e0bffc17 	ldw	r2,-16(fp)
  84ca20:	1080020b 	ldhu	r2,8(r2)
  84ca24:	0084303a 	nor	r2,zero,r2
  84ca28:	1007883a 	mov	r3,r2
  84ca2c:	e0bffd0b 	ldhu	r2,-12(fp)
  84ca30:	1884703a 	and	r2,r3,r2
  84ca34:	e0bff30d 	sth	r2,-52(fp)
             if (flags_rdy != (OS_FLAGS)0) {               /* See if any flag cleared                  */
  84ca38:	e0bff30b 	ldhu	r2,-52(fp)
  84ca3c:	10000b26 	beq	r2,zero,84ca6c <OSFlagAccept+0x2b0>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84ca40:	e0bff383 	ldbu	r2,-50(fp)
  84ca44:	10800058 	cmpnei	r2,r2,1
  84ca48:	10000b1e 	bne	r2,zero,84ca78 <OSFlagAccept+0x2bc>
                     pgrp->OSFlagFlags |= flags_rdy;       /* Set ONLY the flags that we got           */
  84ca4c:	e0bffc17 	ldw	r2,-16(fp)
  84ca50:	10c0020b 	ldhu	r3,8(r2)
  84ca54:	e0bff30b 	ldhu	r2,-52(fp)
  84ca58:	1884b03a 	or	r2,r3,r2
  84ca5c:	1007883a 	mov	r3,r2
  84ca60:	e0bffc17 	ldw	r2,-16(fp)
  84ca64:	10c0020d 	sth	r3,8(r2)
  84ca68:	00000306 	br	84ca78 <OSFlagAccept+0x2bc>
                 }
             } else {
                 *perr = OS_ERR_FLAG_NOT_RDY;
  84ca6c:	e0bfff17 	ldw	r2,-4(fp)
  84ca70:	00c01c04 	movi	r3,112
  84ca74:	10c00005 	stb	r3,0(r2)
  84ca78:	e0bff417 	ldw	r2,-48(fp)
  84ca7c:	e0bff915 	stw	r2,-28(fp)
  84ca80:	e0bff917 	ldw	r2,-28(fp)
  84ca84:	1001703a 	wrctl	status,r2
             }
             OS_EXIT_CRITICAL();
             break;
  84ca88:	00000906 	br	84cab0 <OSFlagAccept+0x2f4>
  84ca8c:	e0bff417 	ldw	r2,-48(fp)
  84ca90:	e0bffa15 	stw	r2,-24(fp)
  84ca94:	e0bffa17 	ldw	r2,-24(fp)
  84ca98:	1001703a 	wrctl	status,r2
#endif

        default:
             OS_EXIT_CRITICAL();
             flags_rdy = (OS_FLAGS)0;
  84ca9c:	e03ff30d 	sth	zero,-52(fp)
             *perr     = OS_ERR_FLAG_WAIT_TYPE;
  84caa0:	e0bfff17 	ldw	r2,-4(fp)
  84caa4:	00c01bc4 	movi	r3,111
  84caa8:	10c00005 	stb	r3,0(r2)
             break;
  84caac:	0001883a 	nop
    }
    return (flags_rdy);
  84cab0:	e0bff30b 	ldhu	r2,-52(fp)
}
  84cab4:	e037883a 	mov	sp,fp
  84cab8:	df000017 	ldw	fp,0(sp)
  84cabc:	dec00104 	addi	sp,sp,4
  84cac0:	f800283a 	ret

0084cac4 <OSFlagCreate>:
* Called from: Task ONLY
*********************************************************************************************************
*/

OS_FLAG_GRP  *OSFlagCreate (OS_FLAGS flags, INT8U *perr)
{
  84cac4:	defff804 	addi	sp,sp,-32
  84cac8:	df000715 	stw	fp,28(sp)
  84cacc:	df000704 	addi	fp,sp,28
  84cad0:	2005883a 	mov	r2,r4
  84cad4:	e17fff15 	stw	r5,-4(fp)
  84cad8:	e0bffe0d 	sth	r2,-8(fp)
    OS_FLAG_GRP *pgrp;
#if OS_CRITICAL_METHOD == 3                         /* Allocate storage for CPU status register        */
    OS_CPU_SR    cpu_sr = 0;
  84cadc:	e03ff915 	stw	zero,-28(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                       /* Validate 'perr'                                 */
  84cae0:	e0bfff17 	ldw	r2,-4(fp)
  84cae4:	1000021e 	bne	r2,zero,84caf0 <OSFlagCreate+0x2c>
        return ((OS_FLAG_GRP *)0);
  84cae8:	0005883a 	mov	r2,zero
  84caec:	00003306 	br	84cbbc <OSFlagCreate+0xf8>
    }
#endif
    if (OSIntNesting > 0) {                         /* See if called from ISR ...                      */
  84caf0:	d0a0b103 	ldbu	r2,-32060(gp)
  84caf4:	10803fcc 	andi	r2,r2,255
  84caf8:	10000526 	beq	r2,zero,84cb10 <OSFlagCreate+0x4c>
        *perr = OS_ERR_CREATE_ISR;                  /* ... can't CREATE from an ISR                    */
  84cafc:	e0bfff17 	ldw	r2,-4(fp)
  84cb00:	00c00404 	movi	r3,16
  84cb04:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAG_GRP *)0);
  84cb08:	0005883a 	mov	r2,zero
  84cb0c:	00002b06 	br	84cbbc <OSFlagCreate+0xf8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84cb10:	0005303a 	rdctl	r2,status
  84cb14:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84cb18:	e0fffd17 	ldw	r3,-12(fp)
  84cb1c:	00bfff84 	movi	r2,-2
  84cb20:	1884703a 	and	r2,r3,r2
  84cb24:	1001703a 	wrctl	status,r2
  
  return context;
  84cb28:	e0bffd17 	ldw	r2,-12(fp)
    }
    OS_ENTER_CRITICAL();
  84cb2c:	e0bff915 	stw	r2,-28(fp)
    pgrp = OSFlagFreeList;                          /* Get next free event flag                        */
  84cb30:	d0a0b417 	ldw	r2,-32048(gp)
  84cb34:	e0bffb15 	stw	r2,-20(fp)
    if (pgrp != (OS_FLAG_GRP *)0) {                 /* See if we have event flag groups available      */
  84cb38:	e0bffb17 	ldw	r2,-20(fp)
  84cb3c:	10001726 	beq	r2,zero,84cb9c <OSFlagCreate+0xd8>
                                                    /* Adjust free list                                */
        OSFlagFreeList       = (OS_FLAG_GRP *)OSFlagFreeList->OSFlagWaitList;
  84cb40:	d0a0b417 	ldw	r2,-32048(gp)
  84cb44:	10800117 	ldw	r2,4(r2)
  84cb48:	d0a0b415 	stw	r2,-32048(gp)
        pgrp->OSFlagType     = OS_EVENT_TYPE_FLAG;  /* Set to event flag group type                    */
  84cb4c:	e0bffb17 	ldw	r2,-20(fp)
  84cb50:	00c00144 	movi	r3,5
  84cb54:	10c00005 	stb	r3,0(r2)
        pgrp->OSFlagFlags    = flags;               /* Set to desired initial value                    */
  84cb58:	e0bffb17 	ldw	r2,-20(fp)
  84cb5c:	e0fffe0b 	ldhu	r3,-8(fp)
  84cb60:	10c0020d 	sth	r3,8(r2)
        pgrp->OSFlagWaitList = (void *)0;           /* Clear list of tasks waiting on flags            */
  84cb64:	e0bffb17 	ldw	r2,-20(fp)
  84cb68:	10000115 	stw	zero,4(r2)
#if OS_FLAG_NAME_SIZE > 1
        pgrp->OSFlagName[0]  = '?';
  84cb6c:	e0bffb17 	ldw	r2,-20(fp)
  84cb70:	00c00fc4 	movi	r3,63
  84cb74:	10c00285 	stb	r3,10(r2)
        pgrp->OSFlagName[1]  = OS_ASCII_NUL;
  84cb78:	e0bffb17 	ldw	r2,-20(fp)
  84cb7c:	100002c5 	stb	zero,11(r2)
  84cb80:	e0bff917 	ldw	r2,-28(fp)
  84cb84:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84cb88:	e0bffa17 	ldw	r2,-24(fp)
  84cb8c:	1001703a 	wrctl	status,r2
#endif
        OS_EXIT_CRITICAL();
        *perr                = OS_ERR_NONE;
  84cb90:	e0bfff17 	ldw	r2,-4(fp)
  84cb94:	10000005 	stb	zero,0(r2)
  84cb98:	00000706 	br	84cbb8 <OSFlagCreate+0xf4>
  84cb9c:	e0bff917 	ldw	r2,-28(fp)
  84cba0:	e0bffc15 	stw	r2,-16(fp)
  84cba4:	e0bffc17 	ldw	r2,-16(fp)
  84cba8:	1001703a 	wrctl	status,r2
    } else {
        OS_EXIT_CRITICAL();
        *perr                = OS_ERR_FLAG_GRP_DEPLETED;
  84cbac:	e0bfff17 	ldw	r2,-4(fp)
  84cbb0:	00c01c84 	movi	r3,114
  84cbb4:	10c00005 	stb	r3,0(r2)
    }
    return (pgrp);                                  /* Return pointer to event flag group              */
  84cbb8:	e0bffb17 	ldw	r2,-20(fp)
}
  84cbbc:	e037883a 	mov	sp,fp
  84cbc0:	df000017 	ldw	fp,0(sp)
  84cbc4:	dec00104 	addi	sp,sp,4
  84cbc8:	f800283a 	ret

0084cbcc <OSFlagDel>:
*********************************************************************************************************
*/

#if OS_FLAG_DEL_EN > 0
OS_FLAG_GRP  *OSFlagDel (OS_FLAG_GRP *pgrp, INT8U opt, INT8U *perr)
{
  84cbcc:	defff204 	addi	sp,sp,-56
  84cbd0:	dfc00d15 	stw	ra,52(sp)
  84cbd4:	df000c15 	stw	fp,48(sp)
  84cbd8:	df000c04 	addi	fp,sp,48
  84cbdc:	e13ffd15 	stw	r4,-12(fp)
  84cbe0:	2805883a 	mov	r2,r5
  84cbe4:	e1bfff15 	stw	r6,-4(fp)
  84cbe8:	e0bffe05 	stb	r2,-8(fp)
    BOOLEAN       tasks_waiting;
    OS_FLAG_NODE *pnode;
    OS_FLAG_GRP  *pgrp_return;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR     cpu_sr = 0;
  84cbec:	e03ff715 	stw	zero,-36(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                              /* Validate 'perr'                          */
  84cbf0:	e0bfff17 	ldw	r2,-4(fp)
  84cbf4:	1000021e 	bne	r2,zero,84cc00 <OSFlagDel+0x34>
        return (pgrp);
  84cbf8:	e0bffd17 	ldw	r2,-12(fp)
  84cbfc:	00008006 	br	84ce00 <OSFlagDel+0x234>
    }
    if (pgrp == (OS_FLAG_GRP *)0) {                        /* Validate 'pgrp'                          */
  84cc00:	e0bffd17 	ldw	r2,-12(fp)
  84cc04:	1000051e 	bne	r2,zero,84cc1c <OSFlagDel+0x50>
        *perr = OS_ERR_FLAG_INVALID_PGRP;
  84cc08:	e0bfff17 	ldw	r2,-4(fp)
  84cc0c:	00c01b84 	movi	r3,110
  84cc10:	10c00005 	stb	r3,0(r2)
        return (pgrp);
  84cc14:	e0bffd17 	ldw	r2,-12(fp)
  84cc18:	00007906 	br	84ce00 <OSFlagDel+0x234>
    }
#endif
    if (OSIntNesting > 0) {                                /* See if called from ISR ...               */
  84cc1c:	d0a0b103 	ldbu	r2,-32060(gp)
  84cc20:	10803fcc 	andi	r2,r2,255
  84cc24:	10000526 	beq	r2,zero,84cc3c <OSFlagDel+0x70>
        *perr = OS_ERR_DEL_ISR;                            /* ... can't DELETE from an ISR             */
  84cc28:	e0bfff17 	ldw	r2,-4(fp)
  84cc2c:	00c003c4 	movi	r3,15
  84cc30:	10c00005 	stb	r3,0(r2)
        return (pgrp);
  84cc34:	e0bffd17 	ldw	r2,-12(fp)
  84cc38:	00007106 	br	84ce00 <OSFlagDel+0x234>
    }
    if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {          /* Validate event group type                */
  84cc3c:	e0bffd17 	ldw	r2,-12(fp)
  84cc40:	10800003 	ldbu	r2,0(r2)
  84cc44:	10803fcc 	andi	r2,r2,255
  84cc48:	10800160 	cmpeqi	r2,r2,5
  84cc4c:	1000051e 	bne	r2,zero,84cc64 <OSFlagDel+0x98>
        *perr = OS_ERR_EVENT_TYPE;
  84cc50:	e0bfff17 	ldw	r2,-4(fp)
  84cc54:	00c00044 	movi	r3,1
  84cc58:	10c00005 	stb	r3,0(r2)
        return (pgrp);
  84cc5c:	e0bffd17 	ldw	r2,-12(fp)
  84cc60:	00006706 	br	84ce00 <OSFlagDel+0x234>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84cc64:	0005303a 	rdctl	r2,status
  84cc68:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84cc6c:	e0fffc17 	ldw	r3,-16(fp)
  84cc70:	00bfff84 	movi	r2,-2
  84cc74:	1884703a 	and	r2,r3,r2
  84cc78:	1001703a 	wrctl	status,r2
  
  return context;
  84cc7c:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84cc80:	e0bff715 	stw	r2,-36(fp)
    if (pgrp->OSFlagWaitList != (void *)0) {               /* See if any tasks waiting on event flags  */
  84cc84:	e0bffd17 	ldw	r2,-12(fp)
  84cc88:	10800117 	ldw	r2,4(r2)
  84cc8c:	10000326 	beq	r2,zero,84cc9c <OSFlagDel+0xd0>
        tasks_waiting = OS_TRUE;                           /* Yes                                      */
  84cc90:	00800044 	movi	r2,1
  84cc94:	e0bff405 	stb	r2,-48(fp)
  84cc98:	00000106 	br	84cca0 <OSFlagDel+0xd4>
    } else {
        tasks_waiting = OS_FALSE;                          /* No                                       */
  84cc9c:	e03ff405 	stb	zero,-48(fp)
    }
    switch (opt) {
  84cca0:	e0bffe03 	ldbu	r2,-8(fp)
  84cca4:	10000326 	beq	r2,zero,84ccb4 <OSFlagDel+0xe8>
  84cca8:	10800060 	cmpeqi	r2,r2,1
  84ccac:	1000231e 	bne	r2,zero,84cd3c <OSFlagDel+0x170>
  84ccb0:	00004806 	br	84cdd4 <OSFlagDel+0x208>
        case OS_DEL_NO_PEND:                               /* Delete group if no task waiting          */
             if (tasks_waiting == OS_FALSE) {
  84ccb4:	e0bff403 	ldbu	r2,-48(fp)
  84ccb8:	1000161e 	bne	r2,zero,84cd14 <OSFlagDel+0x148>
#if OS_FLAG_NAME_SIZE > 1
                 pgrp->OSFlagName[0]  = '?';               /* Unknown name                             */
  84ccbc:	e0bffd17 	ldw	r2,-12(fp)
  84ccc0:	00c00fc4 	movi	r3,63
  84ccc4:	10c00285 	stb	r3,10(r2)
                 pgrp->OSFlagName[1]  = OS_ASCII_NUL;
  84ccc8:	e0bffd17 	ldw	r2,-12(fp)
  84cccc:	100002c5 	stb	zero,11(r2)
#endif
                 pgrp->OSFlagType     = OS_EVENT_TYPE_UNUSED;
  84ccd0:	e0bffd17 	ldw	r2,-12(fp)
  84ccd4:	10000005 	stb	zero,0(r2)
                 pgrp->OSFlagWaitList = (void *)OSFlagFreeList; /* Return group to free list           */
  84ccd8:	d0e0b417 	ldw	r3,-32048(gp)
  84ccdc:	e0bffd17 	ldw	r2,-12(fp)
  84cce0:	10c00115 	stw	r3,4(r2)
                 pgrp->OSFlagFlags    = (OS_FLAGS)0;
  84cce4:	e0bffd17 	ldw	r2,-12(fp)
  84cce8:	1000020d 	sth	zero,8(r2)
                 OSFlagFreeList       = pgrp;
  84ccec:	e0bffd17 	ldw	r2,-12(fp)
  84ccf0:	d0a0b415 	stw	r2,-32048(gp)
  84ccf4:	e0bff717 	ldw	r2,-36(fp)
  84ccf8:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84ccfc:	e0bff817 	ldw	r2,-32(fp)
  84cd00:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
                 *perr                = OS_ERR_NONE;
  84cd04:	e0bfff17 	ldw	r2,-4(fp)
  84cd08:	10000005 	stb	zero,0(r2)
                 pgrp_return          = (OS_FLAG_GRP *)0;  /* Event Flag Group has been deleted        */
  84cd0c:	e03ff615 	stw	zero,-40(fp)
             } else {
                 OS_EXIT_CRITICAL();
                 *perr                = OS_ERR_TASK_WAITING;
                 pgrp_return          = pgrp;
             }
             break;
  84cd10:	00003a06 	br	84cdfc <OSFlagDel+0x230>
  84cd14:	e0bff717 	ldw	r2,-36(fp)
  84cd18:	e0bff915 	stw	r2,-28(fp)
  84cd1c:	e0bff917 	ldw	r2,-28(fp)
  84cd20:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
                 *perr                = OS_ERR_NONE;
                 pgrp_return          = (OS_FLAG_GRP *)0;  /* Event Flag Group has been deleted        */
             } else {
                 OS_EXIT_CRITICAL();
                 *perr                = OS_ERR_TASK_WAITING;
  84cd24:	e0bfff17 	ldw	r2,-4(fp)
  84cd28:	00c01244 	movi	r3,73
  84cd2c:	10c00005 	stb	r3,0(r2)
                 pgrp_return          = pgrp;
  84cd30:	e0bffd17 	ldw	r2,-12(fp)
  84cd34:	e0bff615 	stw	r2,-40(fp)
             }
             break;
  84cd38:	00003006 	br	84cdfc <OSFlagDel+0x230>

        case OS_DEL_ALWAYS:                                /* Always delete the event flag group       */
             pnode = (OS_FLAG_NODE *)pgrp->OSFlagWaitList;
  84cd3c:	e0bffd17 	ldw	r2,-12(fp)
  84cd40:	10800117 	ldw	r2,4(r2)
  84cd44:	e0bff515 	stw	r2,-44(fp)
             while (pnode != (OS_FLAG_NODE *)0) {          /* Ready ALL tasks waiting for flags        */
  84cd48:	00000606 	br	84cd64 <OSFlagDel+0x198>
                 (void)OS_FlagTaskRdy(pnode, (OS_FLAGS)0);
  84cd4c:	000b883a 	mov	r5,zero
  84cd50:	e13ff517 	ldw	r4,-44(fp)
  84cd54:	084dd380 	call	84dd38 <OS_FlagTaskRdy>
                 pnode = (OS_FLAG_NODE *)pnode->OSFlagNodeNext;
  84cd58:	e0bff517 	ldw	r2,-44(fp)
  84cd5c:	10800017 	ldw	r2,0(r2)
  84cd60:	e0bff515 	stw	r2,-44(fp)
             }
             break;

        case OS_DEL_ALWAYS:                                /* Always delete the event flag group       */
             pnode = (OS_FLAG_NODE *)pgrp->OSFlagWaitList;
             while (pnode != (OS_FLAG_NODE *)0) {          /* Ready ALL tasks waiting for flags        */
  84cd64:	e0bff517 	ldw	r2,-44(fp)
  84cd68:	103ff81e 	bne	r2,zero,84cd4c <__alt_mem_epcs_flash_controller_0+0xff843d4c>
                 (void)OS_FlagTaskRdy(pnode, (OS_FLAGS)0);
                 pnode = (OS_FLAG_NODE *)pnode->OSFlagNodeNext;
             }
#if OS_FLAG_NAME_SIZE > 1
             pgrp->OSFlagName[0]  = '?';                   /* Unknown name                             */
  84cd6c:	e0bffd17 	ldw	r2,-12(fp)
  84cd70:	00c00fc4 	movi	r3,63
  84cd74:	10c00285 	stb	r3,10(r2)
             pgrp->OSFlagName[1]  = OS_ASCII_NUL;
  84cd78:	e0bffd17 	ldw	r2,-12(fp)
  84cd7c:	100002c5 	stb	zero,11(r2)
#endif
             pgrp->OSFlagType     = OS_EVENT_TYPE_UNUSED;
  84cd80:	e0bffd17 	ldw	r2,-12(fp)
  84cd84:	10000005 	stb	zero,0(r2)
             pgrp->OSFlagWaitList = (void *)OSFlagFreeList;/* Return group to free list                */
  84cd88:	d0e0b417 	ldw	r3,-32048(gp)
  84cd8c:	e0bffd17 	ldw	r2,-12(fp)
  84cd90:	10c00115 	stw	r3,4(r2)
             pgrp->OSFlagFlags    = (OS_FLAGS)0;
  84cd94:	e0bffd17 	ldw	r2,-12(fp)
  84cd98:	1000020d 	sth	zero,8(r2)
             OSFlagFreeList       = pgrp;
  84cd9c:	e0bffd17 	ldw	r2,-12(fp)
  84cda0:	d0a0b415 	stw	r2,-32048(gp)
  84cda4:	e0bff717 	ldw	r2,-36(fp)
  84cda8:	e0bffa15 	stw	r2,-24(fp)
  84cdac:	e0bffa17 	ldw	r2,-24(fp)
  84cdb0:	1001703a 	wrctl	status,r2
             OS_EXIT_CRITICAL();
             if (tasks_waiting == OS_TRUE) {               /* Reschedule only if task(s) were waiting  */
  84cdb4:	e0bff403 	ldbu	r2,-48(fp)
  84cdb8:	10800058 	cmpnei	r2,r2,1
  84cdbc:	1000011e 	bne	r2,zero,84cdc4 <OSFlagDel+0x1f8>
                 OS_Sched();                               /* Find highest priority task ready to run  */
  84cdc0:	084bf580 	call	84bf58 <OS_Sched>
             }
             *perr = OS_ERR_NONE;
  84cdc4:	e0bfff17 	ldw	r2,-4(fp)
  84cdc8:	10000005 	stb	zero,0(r2)
             pgrp_return          = (OS_FLAG_GRP *)0;      /* Event Flag Group has been deleted        */
  84cdcc:	e03ff615 	stw	zero,-40(fp)
             break;
  84cdd0:	00000a06 	br	84cdfc <OSFlagDel+0x230>
  84cdd4:	e0bff717 	ldw	r2,-36(fp)
  84cdd8:	e0bffb15 	stw	r2,-20(fp)
  84cddc:	e0bffb17 	ldw	r2,-20(fp)
  84cde0:	1001703a 	wrctl	status,r2

        default:
             OS_EXIT_CRITICAL();
             *perr                = OS_ERR_INVALID_OPT;
  84cde4:	e0bfff17 	ldw	r2,-4(fp)
  84cde8:	00c001c4 	movi	r3,7
  84cdec:	10c00005 	stb	r3,0(r2)
             pgrp_return          = pgrp;
  84cdf0:	e0bffd17 	ldw	r2,-12(fp)
  84cdf4:	e0bff615 	stw	r2,-40(fp)
             break;
  84cdf8:	0001883a 	nop
    }
    return (pgrp_return);
  84cdfc:	e0bff617 	ldw	r2,-40(fp)
}
  84ce00:	e037883a 	mov	sp,fp
  84ce04:	dfc00117 	ldw	ra,4(sp)
  84ce08:	df000017 	ldw	fp,0(sp)
  84ce0c:	dec00204 	addi	sp,sp,8
  84ce10:	f800283a 	ret

0084ce14 <OSFlagNameGet>:
*********************************************************************************************************
*/

#if OS_FLAG_NAME_SIZE > 1
INT8U  OSFlagNameGet (OS_FLAG_GRP *pgrp, INT8U *pname, INT8U *perr)
{
  84ce14:	defff604 	addi	sp,sp,-40
  84ce18:	dfc00915 	stw	ra,36(sp)
  84ce1c:	df000815 	stw	fp,32(sp)
  84ce20:	df000804 	addi	fp,sp,32
  84ce24:	e13ffd15 	stw	r4,-12(fp)
  84ce28:	e17ffe15 	stw	r5,-8(fp)
  84ce2c:	e1bfff15 	stw	r6,-4(fp)
    INT8U      len;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84ce30:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84ce34:	e0bfff17 	ldw	r2,-4(fp)
  84ce38:	1000021e 	bne	r2,zero,84ce44 <OSFlagNameGet+0x30>
        return (0);
  84ce3c:	0005883a 	mov	r2,zero
  84ce40:	00003906 	br	84cf28 <OSFlagNameGet+0x114>
    }
    if (pgrp == (OS_FLAG_GRP *)0) {              /* Is 'pgrp' a NULL pointer?                          */
  84ce44:	e0bffd17 	ldw	r2,-12(fp)
  84ce48:	1000051e 	bne	r2,zero,84ce60 <OSFlagNameGet+0x4c>
        *perr = OS_ERR_FLAG_INVALID_PGRP;
  84ce4c:	e0bfff17 	ldw	r2,-4(fp)
  84ce50:	00c01b84 	movi	r3,110
  84ce54:	10c00005 	stb	r3,0(r2)
        return (0);
  84ce58:	0005883a 	mov	r2,zero
  84ce5c:	00003206 	br	84cf28 <OSFlagNameGet+0x114>
    }
    if (pname == (INT8U *)0) {                   /* Is 'pname' a NULL pointer?                         */
  84ce60:	e0bffe17 	ldw	r2,-8(fp)
  84ce64:	1000051e 	bne	r2,zero,84ce7c <OSFlagNameGet+0x68>
        *perr = OS_ERR_PNAME_NULL;
  84ce68:	e0bfff17 	ldw	r2,-4(fp)
  84ce6c:	00c00304 	movi	r3,12
  84ce70:	10c00005 	stb	r3,0(r2)
        return (0);
  84ce74:	0005883a 	mov	r2,zero
  84ce78:	00002b06 	br	84cf28 <OSFlagNameGet+0x114>
    }
#endif
    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  84ce7c:	d0a0b103 	ldbu	r2,-32060(gp)
  84ce80:	10803fcc 	andi	r2,r2,255
  84ce84:	10000526 	beq	r2,zero,84ce9c <OSFlagNameGet+0x88>
        *perr = OS_ERR_NAME_GET_ISR;
  84ce88:	e0bfff17 	ldw	r2,-4(fp)
  84ce8c:	00c00444 	movi	r3,17
  84ce90:	10c00005 	stb	r3,0(r2)
        return (0);
  84ce94:	0005883a 	mov	r2,zero
  84ce98:	00002306 	br	84cf28 <OSFlagNameGet+0x114>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84ce9c:	0005303a 	rdctl	r2,status
  84cea0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84cea4:	e0fffc17 	ldw	r3,-16(fp)
  84cea8:	00bfff84 	movi	r2,-2
  84ceac:	1884703a 	and	r2,r3,r2
  84ceb0:	1001703a 	wrctl	status,r2
  
  return context;
  84ceb4:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84ceb8:	e0bff815 	stw	r2,-32(fp)
    if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {
  84cebc:	e0bffd17 	ldw	r2,-12(fp)
  84cec0:	10800003 	ldbu	r2,0(r2)
  84cec4:	10803fcc 	andi	r2,r2,255
  84cec8:	10800160 	cmpeqi	r2,r2,5
  84cecc:	1000091e 	bne	r2,zero,84cef4 <OSFlagNameGet+0xe0>
  84ced0:	e0bff817 	ldw	r2,-32(fp)
  84ced4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84ced8:	e0bff917 	ldw	r2,-28(fp)
  84cedc:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_EVENT_TYPE;
  84cee0:	e0bfff17 	ldw	r2,-4(fp)
  84cee4:	00c00044 	movi	r3,1
  84cee8:	10c00005 	stb	r3,0(r2)
        return (0);
  84ceec:	0005883a 	mov	r2,zero
  84cef0:	00000d06 	br	84cf28 <OSFlagNameGet+0x114>
    }
    len   = OS_StrCopy(pname, pgrp->OSFlagName); /* Copy name from OS_FLAG_GRP                         */
  84cef4:	e0bffd17 	ldw	r2,-12(fp)
  84cef8:	10800284 	addi	r2,r2,10
  84cefc:	100b883a 	mov	r5,r2
  84cf00:	e13ffe17 	ldw	r4,-8(fp)
  84cf04:	084c09c0 	call	84c09c <OS_StrCopy>
  84cf08:	e0bffb05 	stb	r2,-20(fp)
  84cf0c:	e0bff817 	ldw	r2,-32(fp)
  84cf10:	e0bffa15 	stw	r2,-24(fp)
  84cf14:	e0bffa17 	ldw	r2,-24(fp)
  84cf18:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84cf1c:	e0bfff17 	ldw	r2,-4(fp)
  84cf20:	10000005 	stb	zero,0(r2)
    return (len);
  84cf24:	e0bffb03 	ldbu	r2,-20(fp)
}
  84cf28:	e037883a 	mov	sp,fp
  84cf2c:	dfc00117 	ldw	ra,4(sp)
  84cf30:	df000017 	ldw	fp,0(sp)
  84cf34:	dec00204 	addi	sp,sp,8
  84cf38:	f800283a 	ret

0084cf3c <OSFlagNameSet>:
*********************************************************************************************************
*/

#if OS_FLAG_NAME_SIZE > 1
void  OSFlagNameSet (OS_FLAG_GRP *pgrp, INT8U *pname, INT8U *perr)
{
  84cf3c:	defff504 	addi	sp,sp,-44
  84cf40:	dfc00a15 	stw	ra,40(sp)
  84cf44:	df000915 	stw	fp,36(sp)
  84cf48:	df000904 	addi	fp,sp,36
  84cf4c:	e13ffd15 	stw	r4,-12(fp)
  84cf50:	e17ffe15 	stw	r5,-8(fp)
  84cf54:	e1bfff15 	stw	r6,-4(fp)
    INT8U      len;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84cf58:	e03ff715 	stw	zero,-36(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84cf5c:	e0bfff17 	ldw	r2,-4(fp)
  84cf60:	10004326 	beq	r2,zero,84d070 <OSFlagNameSet+0x134>
        return;
    }
    if (pgrp == (OS_FLAG_GRP *)0) {              /* Is 'pgrp' a NULL pointer?                          */
  84cf64:	e0bffd17 	ldw	r2,-12(fp)
  84cf68:	1000041e 	bne	r2,zero,84cf7c <OSFlagNameSet+0x40>
        *perr = OS_ERR_FLAG_INVALID_PGRP;
  84cf6c:	e0bfff17 	ldw	r2,-4(fp)
  84cf70:	00c01b84 	movi	r3,110
  84cf74:	10c00005 	stb	r3,0(r2)
        return;
  84cf78:	00003e06 	br	84d074 <OSFlagNameSet+0x138>
    }
    if (pname == (INT8U *)0) {                   /* Is 'pname' a NULL pointer?                         */
  84cf7c:	e0bffe17 	ldw	r2,-8(fp)
  84cf80:	1000041e 	bne	r2,zero,84cf94 <OSFlagNameSet+0x58>
        *perr = OS_ERR_PNAME_NULL;
  84cf84:	e0bfff17 	ldw	r2,-4(fp)
  84cf88:	00c00304 	movi	r3,12
  84cf8c:	10c00005 	stb	r3,0(r2)
        return;
  84cf90:	00003806 	br	84d074 <OSFlagNameSet+0x138>
    }
#endif
    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  84cf94:	d0a0b103 	ldbu	r2,-32060(gp)
  84cf98:	10803fcc 	andi	r2,r2,255
  84cf9c:	10000426 	beq	r2,zero,84cfb0 <OSFlagNameSet+0x74>
        *perr = OS_ERR_NAME_SET_ISR;
  84cfa0:	e0bfff17 	ldw	r2,-4(fp)
  84cfa4:	00c00484 	movi	r3,18
  84cfa8:	10c00005 	stb	r3,0(r2)
        return;
  84cfac:	00003106 	br	84d074 <OSFlagNameSet+0x138>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84cfb0:	0005303a 	rdctl	r2,status
  84cfb4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84cfb8:	e0fffc17 	ldw	r3,-16(fp)
  84cfbc:	00bfff84 	movi	r2,-2
  84cfc0:	1884703a 	and	r2,r3,r2
  84cfc4:	1001703a 	wrctl	status,r2
  
  return context;
  84cfc8:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84cfcc:	e0bff715 	stw	r2,-36(fp)
    if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {
  84cfd0:	e0bffd17 	ldw	r2,-12(fp)
  84cfd4:	10800003 	ldbu	r2,0(r2)
  84cfd8:	10803fcc 	andi	r2,r2,255
  84cfdc:	10800160 	cmpeqi	r2,r2,5
  84cfe0:	1000081e 	bne	r2,zero,84d004 <OSFlagNameSet+0xc8>
  84cfe4:	e0bff717 	ldw	r2,-36(fp)
  84cfe8:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84cfec:	e0bff817 	ldw	r2,-32(fp)
  84cff0:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_EVENT_TYPE;
  84cff4:	e0bfff17 	ldw	r2,-4(fp)
  84cff8:	00c00044 	movi	r3,1
  84cffc:	10c00005 	stb	r3,0(r2)
        return;
  84d000:	00001c06 	br	84d074 <OSFlagNameSet+0x138>
    }
    len = OS_StrLen(pname);                      /* Can we fit the string in the storage area?         */
  84d004:	e13ffe17 	ldw	r4,-8(fp)
  84d008:	084c1100 	call	84c110 <OS_StrLen>
  84d00c:	e0bffa05 	stb	r2,-24(fp)
    if (len > (OS_FLAG_NAME_SIZE - 1)) {         /* No                                                 */
  84d010:	e0bffa03 	ldbu	r2,-24(fp)
  84d014:	10800830 	cmpltui	r2,r2,32
  84d018:	1000081e 	bne	r2,zero,84d03c <OSFlagNameSet+0x100>
  84d01c:	e0bff717 	ldw	r2,-36(fp)
  84d020:	e0bff915 	stw	r2,-28(fp)
  84d024:	e0bff917 	ldw	r2,-28(fp)
  84d028:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_FLAG_NAME_TOO_LONG;
  84d02c:	e0bfff17 	ldw	r2,-4(fp)
  84d030:	00c01cc4 	movi	r3,115
  84d034:	10c00005 	stb	r3,0(r2)
        return;
  84d038:	00000e06 	br	84d074 <OSFlagNameSet+0x138>
    }
    (void)OS_StrCopy(pgrp->OSFlagName, pname);   /* Yes, copy name from OS_FLAG_GRP                    */
  84d03c:	e0bffd17 	ldw	r2,-12(fp)
  84d040:	10800284 	addi	r2,r2,10
  84d044:	e17ffe17 	ldw	r5,-8(fp)
  84d048:	1009883a 	mov	r4,r2
  84d04c:	084c09c0 	call	84c09c <OS_StrCopy>
  84d050:	e0bff717 	ldw	r2,-36(fp)
  84d054:	e0bffb15 	stw	r2,-20(fp)
  84d058:	e0bffb17 	ldw	r2,-20(fp)
  84d05c:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84d060:	e0bfff17 	ldw	r2,-4(fp)
  84d064:	10000005 	stb	zero,0(r2)
    return;
  84d068:	0001883a 	nop
  84d06c:	00000106 	br	84d074 <OSFlagNameSet+0x138>



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
        return;
  84d070:	0001883a 	nop
    }
    (void)OS_StrCopy(pgrp->OSFlagName, pname);   /* Yes, copy name from OS_FLAG_GRP                    */
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
    return;
}
  84d074:	e037883a 	mov	sp,fp
  84d078:	dfc00117 	ldw	ra,4(sp)
  84d07c:	df000017 	ldw	fp,0(sp)
  84d080:	dec00204 	addi	sp,sp,8
  84d084:	f800283a 	ret

0084d088 <OSFlagPend>:
*                 event flags.
*********************************************************************************************************
*/

OS_FLAGS  OSFlagPend (OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U wait_type, INT16U timeout, INT8U *perr)
{
  84d088:	deffe104 	addi	sp,sp,-124
  84d08c:	dfc01e15 	stw	ra,120(sp)
  84d090:	df001d15 	stw	fp,116(sp)
  84d094:	df001d04 	addi	fp,sp,116
  84d098:	e13ffc15 	stw	r4,-16(fp)
  84d09c:	2809883a 	mov	r4,r5
  84d0a0:	3007883a 	mov	r3,r6
  84d0a4:	3805883a 	mov	r2,r7
  84d0a8:	e13ffd0d 	sth	r4,-12(fp)
  84d0ac:	e0fffe05 	stb	r3,-8(fp)
  84d0b0:	e0bfff0d 	sth	r2,-4(fp)
    OS_FLAGS      flags_rdy;
    INT8U         result;
    INT8U         pend_stat;
    BOOLEAN       consume;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR     cpu_sr = 0;
  84d0b4:	e03fe515 	stw	zero,-108(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                              /* Validate 'perr'                          */
  84d0b8:	e0800217 	ldw	r2,8(fp)
  84d0bc:	1000021e 	bne	r2,zero,84d0c8 <OSFlagPend+0x40>
        return ((OS_FLAGS)0);
  84d0c0:	0005883a 	mov	r2,zero
  84d0c4:	00015906 	br	84d62c <OSFlagPend+0x5a4>
    }
    if (pgrp == (OS_FLAG_GRP *)0) {                        /* Validate 'pgrp'                          */
  84d0c8:	e0bffc17 	ldw	r2,-16(fp)
  84d0cc:	1000051e 	bne	r2,zero,84d0e4 <OSFlagPend+0x5c>
        *perr = OS_ERR_FLAG_INVALID_PGRP;
  84d0d0:	e0800217 	ldw	r2,8(fp)
  84d0d4:	00c01b84 	movi	r3,110
  84d0d8:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84d0dc:	0005883a 	mov	r2,zero
  84d0e0:	00015206 	br	84d62c <OSFlagPend+0x5a4>
    }
#endif
    if (OSIntNesting > 0) {                                /* See if called from ISR ...               */
  84d0e4:	d0a0b103 	ldbu	r2,-32060(gp)
  84d0e8:	10803fcc 	andi	r2,r2,255
  84d0ec:	10000526 	beq	r2,zero,84d104 <OSFlagPend+0x7c>
        *perr = OS_ERR_PEND_ISR;                           /* ... can't PEND from an ISR               */
  84d0f0:	e0800217 	ldw	r2,8(fp)
  84d0f4:	00c00084 	movi	r3,2
  84d0f8:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84d0fc:	0005883a 	mov	r2,zero
  84d100:	00014a06 	br	84d62c <OSFlagPend+0x5a4>
    }
    if (OSLockNesting > 0) {                               /* See if called with scheduler locked ...  */
  84d104:	d0a0a303 	ldbu	r2,-32116(gp)
  84d108:	10803fcc 	andi	r2,r2,255
  84d10c:	10000526 	beq	r2,zero,84d124 <OSFlagPend+0x9c>
        *perr = OS_ERR_PEND_LOCKED;                        /* ... can't PEND when locked               */
  84d110:	e0800217 	ldw	r2,8(fp)
  84d114:	00c00344 	movi	r3,13
  84d118:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84d11c:	0005883a 	mov	r2,zero
  84d120:	00014206 	br	84d62c <OSFlagPend+0x5a4>
    }
    if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {          /* Validate event block type                */
  84d124:	e0bffc17 	ldw	r2,-16(fp)
  84d128:	10800003 	ldbu	r2,0(r2)
  84d12c:	10803fcc 	andi	r2,r2,255
  84d130:	10800160 	cmpeqi	r2,r2,5
  84d134:	1000051e 	bne	r2,zero,84d14c <OSFlagPend+0xc4>
        *perr = OS_ERR_EVENT_TYPE;
  84d138:	e0800217 	ldw	r2,8(fp)
  84d13c:	00c00044 	movi	r3,1
  84d140:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84d144:	0005883a 	mov	r2,zero
  84d148:	00013806 	br	84d62c <OSFlagPend+0x5a4>
    }
    result = (INT8U)(wait_type & OS_FLAG_CONSUME);
  84d14c:	e0fffe03 	ldbu	r3,-8(fp)
  84d150:	00bfe004 	movi	r2,-128
  84d154:	1884703a 	and	r2,r3,r2
  84d158:	e0bfe605 	stb	r2,-104(fp)
    if (result != (INT8U)0) {                             /* See if we need to consume the flags      */
  84d15c:	e0bfe603 	ldbu	r2,-104(fp)
  84d160:	10000626 	beq	r2,zero,84d17c <OSFlagPend+0xf4>
        wait_type &= ~(INT8U)OS_FLAG_CONSUME;
  84d164:	e0bffe03 	ldbu	r2,-8(fp)
  84d168:	10801fcc 	andi	r2,r2,127
  84d16c:	e0bffe05 	stb	r2,-8(fp)
        consume    = OS_TRUE;
  84d170:	00800044 	movi	r2,1
  84d174:	e0bfe405 	stb	r2,-112(fp)
  84d178:	00000106 	br	84d180 <OSFlagPend+0xf8>
    } else {
        consume    = OS_FALSE;
  84d17c:	e03fe405 	stb	zero,-112(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84d180:	0005303a 	rdctl	r2,status
  84d184:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84d188:	e0fff617 	ldw	r3,-40(fp)
  84d18c:	00bfff84 	movi	r2,-2
  84d190:	1884703a 	and	r2,r3,r2
  84d194:	1001703a 	wrctl	status,r2
  
  return context;
  84d198:	e0bff617 	ldw	r2,-40(fp)
    }
/*$PAGE*/
    OS_ENTER_CRITICAL();
  84d19c:	e0bfe515 	stw	r2,-108(fp)
    switch (wait_type) {
  84d1a0:	e0bffe03 	ldbu	r2,-8(fp)
  84d1a4:	10c00060 	cmpeqi	r3,r2,1
  84d1a8:	1800921e 	bne	r3,zero,84d3f4 <OSFlagPend+0x36c>
  84d1ac:	10c00088 	cmpgei	r3,r2,2
  84d1b0:	1800021e 	bne	r3,zero,84d1bc <OSFlagPend+0x134>
  84d1b4:	10006126 	beq	r2,zero,84d33c <OSFlagPend+0x2b4>
  84d1b8:	0000bb06 	br	84d4a8 <OSFlagPend+0x420>
  84d1bc:	10c000a0 	cmpeqi	r3,r2,2
  84d1c0:	1800031e 	bne	r3,zero,84d1d0 <OSFlagPend+0x148>
  84d1c4:	108000e0 	cmpeqi	r2,r2,3
  84d1c8:	10002f1e 	bne	r2,zero,84d288 <OSFlagPend+0x200>
  84d1cc:	0000b606 	br	84d4a8 <OSFlagPend+0x420>
        case OS_FLAG_WAIT_SET_ALL:                         /* See if all required flags are set        */
             flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & flags);   /* Extract only the bits we want     */
  84d1d0:	e0bffc17 	ldw	r2,-16(fp)
  84d1d4:	10c0020b 	ldhu	r3,8(r2)
  84d1d8:	e0bffd0b 	ldhu	r2,-12(fp)
  84d1dc:	1884703a 	and	r2,r3,r2
  84d1e0:	e0bfe80d 	sth	r2,-96(fp)
             if (flags_rdy == flags) {                     /* Must match ALL the bits that we want     */
  84d1e4:	e0ffe80b 	ldhu	r3,-96(fp)
  84d1e8:	e0bffd0b 	ldhu	r2,-12(fp)
  84d1ec:	1880171e 	bne	r3,r2,84d24c <OSFlagPend+0x1c4>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84d1f0:	e0bfe403 	ldbu	r2,-112(fp)
  84d1f4:	10800058 	cmpnei	r2,r2,1
  84d1f8:	1000091e 	bne	r2,zero,84d220 <OSFlagPend+0x198>
                     pgrp->OSFlagFlags &= ~flags_rdy;      /* Clear ONLY the flags that we wanted      */
  84d1fc:	e0bffc17 	ldw	r2,-16(fp)
  84d200:	1080020b 	ldhu	r2,8(r2)
  84d204:	1007883a 	mov	r3,r2
  84d208:	e0bfe80b 	ldhu	r2,-96(fp)
  84d20c:	0084303a 	nor	r2,zero,r2
  84d210:	1884703a 	and	r2,r3,r2
  84d214:	1007883a 	mov	r3,r2
  84d218:	e0bffc17 	ldw	r2,-16(fp)
  84d21c:	10c0020d 	sth	r3,8(r2)
                 }
                 OSTCBCur->OSTCBFlagsRdy = flags_rdy;      /* Save flags that were ready               */
  84d220:	d0a0b217 	ldw	r2,-32056(gp)
  84d224:	e0ffe80b 	ldhu	r3,-96(fp)
  84d228:	10c00b0d 	sth	r3,44(r2)
  84d22c:	e0bfe517 	ldw	r2,-108(fp)
  84d230:	e0bfe715 	stw	r2,-100(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84d234:	e0bfe717 	ldw	r2,-100(fp)
  84d238:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();                       /* Yes, condition met, return to caller     */
                 *perr                   = OS_ERR_NONE;
  84d23c:	e0800217 	ldw	r2,8(fp)
  84d240:	10000005 	stb	zero,0(r2)
                 return (flags_rdy);
  84d244:	e0bfe80b 	ldhu	r2,-96(fp)
  84d248:	0000f806 	br	84d62c <OSFlagPend+0x5a4>
             } else {                                      /* Block task until events occur or timeout */
                 OS_FlagBlock(pgrp, &node, flags, wait_type, timeout);
  84d24c:	e13ffd0b 	ldhu	r4,-12(fp)
  84d250:	e17ffe03 	ldbu	r5,-8(fp)
  84d254:	e0bfff0b 	ldhu	r2,-4(fp)
  84d258:	e0fff704 	addi	r3,fp,-36
  84d25c:	d8800015 	stw	r2,0(sp)
  84d260:	280f883a 	mov	r7,r5
  84d264:	200d883a 	mov	r6,r4
  84d268:	180b883a 	mov	r5,r3
  84d26c:	e13ffc17 	ldw	r4,-16(fp)
  84d270:	084daf80 	call	84daf8 <OS_FlagBlock>
  84d274:	e0bfe517 	ldw	r2,-108(fp)
  84d278:	e0bfe915 	stw	r2,-92(fp)
  84d27c:	e0bfe917 	ldw	r2,-92(fp)
  84d280:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
             }
             break;
  84d284:	00009206 	br	84d4d0 <OSFlagPend+0x448>

        case OS_FLAG_WAIT_SET_ANY:
             flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & flags);    /* Extract only the bits we want    */
  84d288:	e0bffc17 	ldw	r2,-16(fp)
  84d28c:	10c0020b 	ldhu	r3,8(r2)
  84d290:	e0bffd0b 	ldhu	r2,-12(fp)
  84d294:	1884703a 	and	r2,r3,r2
  84d298:	e0bfe80d 	sth	r2,-96(fp)
             if (flags_rdy != (OS_FLAGS)0) {               /* See if any flag set                      */
  84d29c:	e0bfe80b 	ldhu	r2,-96(fp)
  84d2a0:	10001726 	beq	r2,zero,84d300 <OSFlagPend+0x278>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84d2a4:	e0bfe403 	ldbu	r2,-112(fp)
  84d2a8:	10800058 	cmpnei	r2,r2,1
  84d2ac:	1000091e 	bne	r2,zero,84d2d4 <OSFlagPend+0x24c>
                     pgrp->OSFlagFlags &= ~flags_rdy;      /* Clear ONLY the flags that we got         */
  84d2b0:	e0bffc17 	ldw	r2,-16(fp)
  84d2b4:	1080020b 	ldhu	r2,8(r2)
  84d2b8:	1007883a 	mov	r3,r2
  84d2bc:	e0bfe80b 	ldhu	r2,-96(fp)
  84d2c0:	0084303a 	nor	r2,zero,r2
  84d2c4:	1884703a 	and	r2,r3,r2
  84d2c8:	1007883a 	mov	r3,r2
  84d2cc:	e0bffc17 	ldw	r2,-16(fp)
  84d2d0:	10c0020d 	sth	r3,8(r2)
                 }
                 OSTCBCur->OSTCBFlagsRdy = flags_rdy;      /* Save flags that were ready               */
  84d2d4:	d0a0b217 	ldw	r2,-32056(gp)
  84d2d8:	e0ffe80b 	ldhu	r3,-96(fp)
  84d2dc:	10c00b0d 	sth	r3,44(r2)
  84d2e0:	e0bfe517 	ldw	r2,-108(fp)
  84d2e4:	e0bfea15 	stw	r2,-88(fp)
  84d2e8:	e0bfea17 	ldw	r2,-88(fp)
  84d2ec:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();                       /* Yes, condition met, return to caller     */
                 *perr                   = OS_ERR_NONE;
  84d2f0:	e0800217 	ldw	r2,8(fp)
  84d2f4:	10000005 	stb	zero,0(r2)
                 return (flags_rdy);
  84d2f8:	e0bfe80b 	ldhu	r2,-96(fp)
  84d2fc:	0000cb06 	br	84d62c <OSFlagPend+0x5a4>
             } else {                                      /* Block task until events occur or timeout */
                 OS_FlagBlock(pgrp, &node, flags, wait_type, timeout);
  84d300:	e13ffd0b 	ldhu	r4,-12(fp)
  84d304:	e17ffe03 	ldbu	r5,-8(fp)
  84d308:	e0bfff0b 	ldhu	r2,-4(fp)
  84d30c:	e0fff704 	addi	r3,fp,-36
  84d310:	d8800015 	stw	r2,0(sp)
  84d314:	280f883a 	mov	r7,r5
  84d318:	200d883a 	mov	r6,r4
  84d31c:	180b883a 	mov	r5,r3
  84d320:	e13ffc17 	ldw	r4,-16(fp)
  84d324:	084daf80 	call	84daf8 <OS_FlagBlock>
  84d328:	e0bfe517 	ldw	r2,-108(fp)
  84d32c:	e0bfeb15 	stw	r2,-84(fp)
  84d330:	e0bfeb17 	ldw	r2,-84(fp)
  84d334:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
             }
             break;
  84d338:	00006506 	br	84d4d0 <OSFlagPend+0x448>

#if OS_FLAG_WAIT_CLR_EN > 0
        case OS_FLAG_WAIT_CLR_ALL:                         /* See if all required flags are cleared    */
             flags_rdy = (OS_FLAGS)(~pgrp->OSFlagFlags & flags);  /* Extract only the bits we want     */
  84d33c:	e0bffc17 	ldw	r2,-16(fp)
  84d340:	1080020b 	ldhu	r2,8(r2)
  84d344:	0084303a 	nor	r2,zero,r2
  84d348:	1007883a 	mov	r3,r2
  84d34c:	e0bffd0b 	ldhu	r2,-12(fp)
  84d350:	1884703a 	and	r2,r3,r2
  84d354:	e0bfe80d 	sth	r2,-96(fp)
             if (flags_rdy == flags) {                     /* Must match ALL the bits that we want     */
  84d358:	e0ffe80b 	ldhu	r3,-96(fp)
  84d35c:	e0bffd0b 	ldhu	r2,-12(fp)
  84d360:	1880151e 	bne	r3,r2,84d3b8 <OSFlagPend+0x330>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84d364:	e0bfe403 	ldbu	r2,-112(fp)
  84d368:	10800058 	cmpnei	r2,r2,1
  84d36c:	1000071e 	bne	r2,zero,84d38c <OSFlagPend+0x304>
                     pgrp->OSFlagFlags |= flags_rdy;       /* Set ONLY the flags that we wanted        */
  84d370:	e0bffc17 	ldw	r2,-16(fp)
  84d374:	10c0020b 	ldhu	r3,8(r2)
  84d378:	e0bfe80b 	ldhu	r2,-96(fp)
  84d37c:	1884b03a 	or	r2,r3,r2
  84d380:	1007883a 	mov	r3,r2
  84d384:	e0bffc17 	ldw	r2,-16(fp)
  84d388:	10c0020d 	sth	r3,8(r2)
                 }
                 OSTCBCur->OSTCBFlagsRdy = flags_rdy;      /* Save flags that were ready               */
  84d38c:	d0a0b217 	ldw	r2,-32056(gp)
  84d390:	e0ffe80b 	ldhu	r3,-96(fp)
  84d394:	10c00b0d 	sth	r3,44(r2)
  84d398:	e0bfe517 	ldw	r2,-108(fp)
  84d39c:	e0bfec15 	stw	r2,-80(fp)
  84d3a0:	e0bfec17 	ldw	r2,-80(fp)
  84d3a4:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();                       /* Yes, condition met, return to caller     */
                 *perr                   = OS_ERR_NONE;
  84d3a8:	e0800217 	ldw	r2,8(fp)
  84d3ac:	10000005 	stb	zero,0(r2)
                 return (flags_rdy);
  84d3b0:	e0bfe80b 	ldhu	r2,-96(fp)
  84d3b4:	00009d06 	br	84d62c <OSFlagPend+0x5a4>
             } else {                                      /* Block task until events occur or timeout */
                 OS_FlagBlock(pgrp, &node, flags, wait_type, timeout);
  84d3b8:	e13ffd0b 	ldhu	r4,-12(fp)
  84d3bc:	e17ffe03 	ldbu	r5,-8(fp)
  84d3c0:	e0bfff0b 	ldhu	r2,-4(fp)
  84d3c4:	e0fff704 	addi	r3,fp,-36
  84d3c8:	d8800015 	stw	r2,0(sp)
  84d3cc:	280f883a 	mov	r7,r5
  84d3d0:	200d883a 	mov	r6,r4
  84d3d4:	180b883a 	mov	r5,r3
  84d3d8:	e13ffc17 	ldw	r4,-16(fp)
  84d3dc:	084daf80 	call	84daf8 <OS_FlagBlock>
  84d3e0:	e0bfe517 	ldw	r2,-108(fp)
  84d3e4:	e0bfed15 	stw	r2,-76(fp)
  84d3e8:	e0bfed17 	ldw	r2,-76(fp)
  84d3ec:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
             }
             break;
  84d3f0:	00003706 	br	84d4d0 <OSFlagPend+0x448>

        case OS_FLAG_WAIT_CLR_ANY:
             flags_rdy = (OS_FLAGS)(~pgrp->OSFlagFlags & flags); /* Extract only the bits we want      */
  84d3f4:	e0bffc17 	ldw	r2,-16(fp)
  84d3f8:	1080020b 	ldhu	r2,8(r2)
  84d3fc:	0084303a 	nor	r2,zero,r2
  84d400:	1007883a 	mov	r3,r2
  84d404:	e0bffd0b 	ldhu	r2,-12(fp)
  84d408:	1884703a 	and	r2,r3,r2
  84d40c:	e0bfe80d 	sth	r2,-96(fp)
             if (flags_rdy != (OS_FLAGS)0) {               /* See if any flag cleared                  */
  84d410:	e0bfe80b 	ldhu	r2,-96(fp)
  84d414:	10001526 	beq	r2,zero,84d46c <OSFlagPend+0x3e4>
                 if (consume == OS_TRUE) {                 /* See if we need to consume the flags      */
  84d418:	e0bfe403 	ldbu	r2,-112(fp)
  84d41c:	10800058 	cmpnei	r2,r2,1
  84d420:	1000071e 	bne	r2,zero,84d440 <OSFlagPend+0x3b8>
                     pgrp->OSFlagFlags |= flags_rdy;       /* Set ONLY the flags that we got           */
  84d424:	e0bffc17 	ldw	r2,-16(fp)
  84d428:	10c0020b 	ldhu	r3,8(r2)
  84d42c:	e0bfe80b 	ldhu	r2,-96(fp)
  84d430:	1884b03a 	or	r2,r3,r2
  84d434:	1007883a 	mov	r3,r2
  84d438:	e0bffc17 	ldw	r2,-16(fp)
  84d43c:	10c0020d 	sth	r3,8(r2)
                 }
                 OSTCBCur->OSTCBFlagsRdy = flags_rdy;      /* Save flags that were ready               */
  84d440:	d0a0b217 	ldw	r2,-32056(gp)
  84d444:	e0ffe80b 	ldhu	r3,-96(fp)
  84d448:	10c00b0d 	sth	r3,44(r2)
  84d44c:	e0bfe517 	ldw	r2,-108(fp)
  84d450:	e0bfee15 	stw	r2,-72(fp)
  84d454:	e0bfee17 	ldw	r2,-72(fp)
  84d458:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();                       /* Yes, condition met, return to caller     */
                 *perr                   = OS_ERR_NONE;
  84d45c:	e0800217 	ldw	r2,8(fp)
  84d460:	10000005 	stb	zero,0(r2)
                 return (flags_rdy);
  84d464:	e0bfe80b 	ldhu	r2,-96(fp)
  84d468:	00007006 	br	84d62c <OSFlagPend+0x5a4>
             } else {                                      /* Block task until events occur or timeout */
                 OS_FlagBlock(pgrp, &node, flags, wait_type, timeout);
  84d46c:	e13ffd0b 	ldhu	r4,-12(fp)
  84d470:	e17ffe03 	ldbu	r5,-8(fp)
  84d474:	e0bfff0b 	ldhu	r2,-4(fp)
  84d478:	e0fff704 	addi	r3,fp,-36
  84d47c:	d8800015 	stw	r2,0(sp)
  84d480:	280f883a 	mov	r7,r5
  84d484:	200d883a 	mov	r6,r4
  84d488:	180b883a 	mov	r5,r3
  84d48c:	e13ffc17 	ldw	r4,-16(fp)
  84d490:	084daf80 	call	84daf8 <OS_FlagBlock>
  84d494:	e0bfe517 	ldw	r2,-108(fp)
  84d498:	e0bfef15 	stw	r2,-68(fp)
  84d49c:	e0bfef17 	ldw	r2,-68(fp)
  84d4a0:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
             }
             break;
  84d4a4:	00000a06 	br	84d4d0 <OSFlagPend+0x448>
  84d4a8:	e0bfe517 	ldw	r2,-108(fp)
  84d4ac:	e0bff015 	stw	r2,-64(fp)
  84d4b0:	e0bff017 	ldw	r2,-64(fp)
  84d4b4:	1001703a 	wrctl	status,r2
#endif

        default:
             OS_EXIT_CRITICAL();
             flags_rdy = (OS_FLAGS)0;
  84d4b8:	e03fe80d 	sth	zero,-96(fp)
             *perr      = OS_ERR_FLAG_WAIT_TYPE;
  84d4bc:	e0800217 	ldw	r2,8(fp)
  84d4c0:	00c01bc4 	movi	r3,111
  84d4c4:	10c00005 	stb	r3,0(r2)
             return (flags_rdy);
  84d4c8:	e0bfe80b 	ldhu	r2,-96(fp)
  84d4cc:	00005706 	br	84d62c <OSFlagPend+0x5a4>
    }
/*$PAGE*/
    OS_Sched();                                            /* Find next HPT ready to run               */
  84d4d0:	084bf580 	call	84bf58 <OS_Sched>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84d4d4:	0005303a 	rdctl	r2,status
  84d4d8:	e0bff115 	stw	r2,-60(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84d4dc:	e0fff117 	ldw	r3,-60(fp)
  84d4e0:	00bfff84 	movi	r2,-2
  84d4e4:	1884703a 	and	r2,r3,r2
  84d4e8:	1001703a 	wrctl	status,r2
  
  return context;
  84d4ec:	e0bff117 	ldw	r2,-60(fp)
    OS_ENTER_CRITICAL();
  84d4f0:	e0bfe515 	stw	r2,-108(fp)
    if (OSTCBCur->OSTCBStatPend != OS_STAT_PEND_OK) {      /* Have we timed-out or aborted?            */
  84d4f4:	d0a0b217 	ldw	r2,-32056(gp)
  84d4f8:	10800c43 	ldbu	r2,49(r2)
  84d4fc:	10803fcc 	andi	r2,r2,255
  84d500:	10001c26 	beq	r2,zero,84d574 <OSFlagPend+0x4ec>
        pend_stat                = OSTCBCur->OSTCBStatPend;
  84d504:	d0a0b217 	ldw	r2,-32056(gp)
  84d508:	10800c43 	ldbu	r2,49(r2)
  84d50c:	e0bff305 	stb	r2,-52(fp)
        OSTCBCur->OSTCBStatPend  = OS_STAT_PEND_OK;
  84d510:	d0a0b217 	ldw	r2,-32056(gp)
  84d514:	10000c45 	stb	zero,49(r2)
        OS_FlagUnlink(&node);
  84d518:	e0bff704 	addi	r2,fp,-36
  84d51c:	1009883a 	mov	r4,r2
  84d520:	084de2c0 	call	84de2c <OS_FlagUnlink>
        OSTCBCur->OSTCBStat      = OS_STAT_RDY;            /* Yes, make task ready-to-run              */
  84d524:	d0a0b217 	ldw	r2,-32056(gp)
  84d528:	10000c05 	stb	zero,48(r2)
  84d52c:	e0bfe517 	ldw	r2,-108(fp)
  84d530:	e0bff215 	stw	r2,-56(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84d534:	e0bff217 	ldw	r2,-56(fp)
  84d538:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        flags_rdy                = (OS_FLAGS)0;
  84d53c:	e03fe80d 	sth	zero,-96(fp)
        switch (pend_stat) {
  84d540:	e0bff303 	ldbu	r2,-52(fp)
  84d544:	108000a0 	cmpeqi	r2,r2,2
  84d548:	10000426 	beq	r2,zero,84d55c <OSFlagPend+0x4d4>
            case OS_STAT_PEND_ABORT:
                 *perr = OS_ERR_PEND_ABORT;                 /* Indicate that we aborted   waiting       */
  84d54c:	e0800217 	ldw	r2,8(fp)
  84d550:	00c00384 	movi	r3,14
  84d554:	10c00005 	stb	r3,0(r2)
                 break;
  84d558:	00000406 	br	84d56c <OSFlagPend+0x4e4>

            case OS_STAT_PEND_TO:
            default:
                 *perr = OS_ERR_TIMEOUT;                    /* Indicate that we timed-out waiting       */
  84d55c:	e0800217 	ldw	r2,8(fp)
  84d560:	00c00284 	movi	r3,10
  84d564:	10c00005 	stb	r3,0(r2)
                 break;
  84d568:	0001883a 	nop
        }
        return (flags_rdy);
  84d56c:	e0bfe80b 	ldhu	r2,-96(fp)
  84d570:	00002e06 	br	84d62c <OSFlagPend+0x5a4>
    }
    flags_rdy = OSTCBCur->OSTCBFlagsRdy;
  84d574:	d0a0b217 	ldw	r2,-32056(gp)
  84d578:	10800b0b 	ldhu	r2,44(r2)
  84d57c:	e0bfe80d 	sth	r2,-96(fp)
    if (consume == OS_TRUE) {                              /* See if we need to consume the flags      */
  84d580:	e0bfe403 	ldbu	r2,-112(fp)
  84d584:	10800058 	cmpnei	r2,r2,1
  84d588:	1000211e 	bne	r2,zero,84d610 <OSFlagPend+0x588>
        switch (wait_type) {
  84d58c:	e0bffe03 	ldbu	r2,-8(fp)
  84d590:	10001616 	blt	r2,zero,84d5ec <OSFlagPend+0x564>
  84d594:	10c00090 	cmplti	r3,r2,2
  84d598:	18000c1e 	bne	r3,zero,84d5cc <OSFlagPend+0x544>
  84d59c:	10800108 	cmpgei	r2,r2,4
  84d5a0:	1000121e 	bne	r2,zero,84d5ec <OSFlagPend+0x564>
            case OS_FLAG_WAIT_SET_ALL:
            case OS_FLAG_WAIT_SET_ANY:                     /* Clear ONLY the flags we got              */
                 pgrp->OSFlagFlags &= ~flags_rdy;
  84d5a4:	e0bffc17 	ldw	r2,-16(fp)
  84d5a8:	1080020b 	ldhu	r2,8(r2)
  84d5ac:	1007883a 	mov	r3,r2
  84d5b0:	e0bfe80b 	ldhu	r2,-96(fp)
  84d5b4:	0084303a 	nor	r2,zero,r2
  84d5b8:	1884703a 	and	r2,r3,r2
  84d5bc:	1007883a 	mov	r3,r2
  84d5c0:	e0bffc17 	ldw	r2,-16(fp)
  84d5c4:	10c0020d 	sth	r3,8(r2)
                 break;
  84d5c8:	00001106 	br	84d610 <OSFlagPend+0x588>

#if OS_FLAG_WAIT_CLR_EN > 0
            case OS_FLAG_WAIT_CLR_ALL:
            case OS_FLAG_WAIT_CLR_ANY:                     /* Set   ONLY the flags we got              */
                 pgrp->OSFlagFlags |=  flags_rdy;
  84d5cc:	e0bffc17 	ldw	r2,-16(fp)
  84d5d0:	10c0020b 	ldhu	r3,8(r2)
  84d5d4:	e0bfe80b 	ldhu	r2,-96(fp)
  84d5d8:	1884b03a 	or	r2,r3,r2
  84d5dc:	1007883a 	mov	r3,r2
  84d5e0:	e0bffc17 	ldw	r2,-16(fp)
  84d5e4:	10c0020d 	sth	r3,8(r2)
                 break;
  84d5e8:	00000906 	br	84d610 <OSFlagPend+0x588>
  84d5ec:	e0bfe517 	ldw	r2,-108(fp)
  84d5f0:	e0bff415 	stw	r2,-48(fp)
  84d5f4:	e0bff417 	ldw	r2,-48(fp)
  84d5f8:	1001703a 	wrctl	status,r2
#endif
            default:
                 OS_EXIT_CRITICAL();
                 *perr = OS_ERR_FLAG_WAIT_TYPE;
  84d5fc:	e0800217 	ldw	r2,8(fp)
  84d600:	00c01bc4 	movi	r3,111
  84d604:	10c00005 	stb	r3,0(r2)
                 return ((OS_FLAGS)0);
  84d608:	0005883a 	mov	r2,zero
  84d60c:	00000706 	br	84d62c <OSFlagPend+0x5a4>
  84d610:	e0bfe517 	ldw	r2,-108(fp)
  84d614:	e0bff515 	stw	r2,-44(fp)
  84d618:	e0bff517 	ldw	r2,-44(fp)
  84d61c:	1001703a 	wrctl	status,r2
        }
    }
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;                                   /* Event(s) must have occurred              */
  84d620:	e0800217 	ldw	r2,8(fp)
  84d624:	10000005 	stb	zero,0(r2)
    return (flags_rdy);
  84d628:	e0bfe80b 	ldhu	r2,-96(fp)
}
  84d62c:	e037883a 	mov	sp,fp
  84d630:	dfc00117 	ldw	ra,4(sp)
  84d634:	df000017 	ldw	fp,0(sp)
  84d638:	dec00204 	addi	sp,sp,8
  84d63c:	f800283a 	ret

0084d640 <OSFlagPendGetFlagsRdy>:
* Called from: Task ONLY
*********************************************************************************************************
*/

OS_FLAGS  OSFlagPendGetFlagsRdy (void)
{
  84d640:	defffb04 	addi	sp,sp,-20
  84d644:	df000415 	stw	fp,16(sp)
  84d648:	df000404 	addi	fp,sp,16
    OS_FLAGS      flags;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR     cpu_sr = 0;
  84d64c:	e03ffc15 	stw	zero,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84d650:	0005303a 	rdctl	r2,status
  84d654:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84d658:	e0fffe17 	ldw	r3,-8(fp)
  84d65c:	00bfff84 	movi	r2,-2
  84d660:	1884703a 	and	r2,r3,r2
  84d664:	1001703a 	wrctl	status,r2
  
  return context;
  84d668:	e0bffe17 	ldw	r2,-8(fp)
#endif



    OS_ENTER_CRITICAL();
  84d66c:	e0bffc15 	stw	r2,-16(fp)
    flags = OSTCBCur->OSTCBFlagsRdy;
  84d670:	d0a0b217 	ldw	r2,-32056(gp)
  84d674:	10800b0b 	ldhu	r2,44(r2)
  84d678:	e0bffd0d 	sth	r2,-12(fp)
  84d67c:	e0bffc17 	ldw	r2,-16(fp)
  84d680:	e0bfff15 	stw	r2,-4(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84d684:	e0bfff17 	ldw	r2,-4(fp)
  84d688:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (flags);
  84d68c:	e0bffd0b 	ldhu	r2,-12(fp)
}
  84d690:	e037883a 	mov	sp,fp
  84d694:	df000017 	ldw	fp,0(sp)
  84d698:	dec00104 	addi	sp,sp,4
  84d69c:	f800283a 	ret

0084d6a0 <OSFlagPost>:
*              2) The amount of time interrupts are DISABLED depends on the number of tasks waiting on
*                 the event flag group.
*********************************************************************************************************
*/
OS_FLAGS  OSFlagPost (OS_FLAG_GRP *pgrp, OS_FLAGS flags, INT8U opt, INT8U *perr)
{
  84d6a0:	deffef04 	addi	sp,sp,-68
  84d6a4:	dfc01015 	stw	ra,64(sp)
  84d6a8:	df000f15 	stw	fp,60(sp)
  84d6ac:	df000f04 	addi	fp,sp,60
  84d6b0:	e13ffc15 	stw	r4,-16(fp)
  84d6b4:	2807883a 	mov	r3,r5
  84d6b8:	3005883a 	mov	r2,r6
  84d6bc:	e1ffff15 	stw	r7,-4(fp)
  84d6c0:	e0fffd0d 	sth	r3,-12(fp)
  84d6c4:	e0bffe05 	stb	r2,-8(fp)
    BOOLEAN       sched;
    OS_FLAGS      flags_cur;
    OS_FLAGS      flags_rdy;
    BOOLEAN       rdy;
#if OS_CRITICAL_METHOD == 3                          /* Allocate storage for CPU status register       */
    OS_CPU_SR     cpu_sr = 0;
  84d6c8:	e03ff315 	stw	zero,-52(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                        /* Validate 'perr'                                */
  84d6cc:	e0bfff17 	ldw	r2,-4(fp)
  84d6d0:	1000021e 	bne	r2,zero,84d6dc <OSFlagPost+0x3c>
        return ((OS_FLAGS)0);
  84d6d4:	0005883a 	mov	r2,zero
  84d6d8:	0000d106 	br	84da20 <OSFlagPost+0x380>
    }
    if (pgrp == (OS_FLAG_GRP *)0) {                  /* Validate 'pgrp'                                */
  84d6dc:	e0bffc17 	ldw	r2,-16(fp)
  84d6e0:	1000051e 	bne	r2,zero,84d6f8 <OSFlagPost+0x58>
        *perr = OS_ERR_FLAG_INVALID_PGRP;
  84d6e4:	e0bfff17 	ldw	r2,-4(fp)
  84d6e8:	00c01b84 	movi	r3,110
  84d6ec:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84d6f0:	0005883a 	mov	r2,zero
  84d6f4:	0000ca06 	br	84da20 <OSFlagPost+0x380>
    }
#endif
    if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) {    /* Make sure we are pointing to an event flag grp */
  84d6f8:	e0bffc17 	ldw	r2,-16(fp)
  84d6fc:	10800003 	ldbu	r2,0(r2)
  84d700:	10803fcc 	andi	r2,r2,255
  84d704:	10800160 	cmpeqi	r2,r2,5
  84d708:	1000051e 	bne	r2,zero,84d720 <OSFlagPost+0x80>
        *perr = OS_ERR_EVENT_TYPE;
  84d70c:	e0bfff17 	ldw	r2,-4(fp)
  84d710:	00c00044 	movi	r3,1
  84d714:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84d718:	0005883a 	mov	r2,zero
  84d71c:	0000c006 	br	84da20 <OSFlagPost+0x380>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84d720:	0005303a 	rdctl	r2,status
  84d724:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84d728:	e0fffb17 	ldw	r3,-20(fp)
  84d72c:	00bfff84 	movi	r2,-2
  84d730:	1884703a 	and	r2,r3,r2
  84d734:	1001703a 	wrctl	status,r2
  
  return context;
  84d738:	e0bffb17 	ldw	r2,-20(fp)
    }
/*$PAGE*/
    OS_ENTER_CRITICAL();
  84d73c:	e0bff315 	stw	r2,-52(fp)
    switch (opt) {
  84d740:	e0bffe03 	ldbu	r2,-8(fp)
  84d744:	10000326 	beq	r2,zero,84d754 <OSFlagPost+0xb4>
  84d748:	10800060 	cmpeqi	r2,r2,1
  84d74c:	10000b1e 	bne	r2,zero,84d77c <OSFlagPost+0xdc>
  84d750:	00001206 	br	84d79c <OSFlagPost+0xfc>
        case OS_FLAG_CLR:
             pgrp->OSFlagFlags &= ~flags;            /* Clear the flags specified in the group         */
  84d754:	e0bffc17 	ldw	r2,-16(fp)
  84d758:	1080020b 	ldhu	r2,8(r2)
  84d75c:	1007883a 	mov	r3,r2
  84d760:	e0bffd0b 	ldhu	r2,-12(fp)
  84d764:	0084303a 	nor	r2,zero,r2
  84d768:	1884703a 	and	r2,r3,r2
  84d76c:	1007883a 	mov	r3,r2
  84d770:	e0bffc17 	ldw	r2,-16(fp)
  84d774:	10c0020d 	sth	r3,8(r2)
             break;
  84d778:	00001106 	br	84d7c0 <OSFlagPost+0x120>

        case OS_FLAG_SET:
             pgrp->OSFlagFlags |=  flags;            /* Set   the flags specified in the group         */
  84d77c:	e0bffc17 	ldw	r2,-16(fp)
  84d780:	10c0020b 	ldhu	r3,8(r2)
  84d784:	e0bffd0b 	ldhu	r2,-12(fp)
  84d788:	1884b03a 	or	r2,r3,r2
  84d78c:	1007883a 	mov	r3,r2
  84d790:	e0bffc17 	ldw	r2,-16(fp)
  84d794:	10c0020d 	sth	r3,8(r2)
             break;
  84d798:	00000906 	br	84d7c0 <OSFlagPost+0x120>
  84d79c:	e0bff317 	ldw	r2,-52(fp)
  84d7a0:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84d7a4:	e0bff417 	ldw	r2,-48(fp)
  84d7a8:	1001703a 	wrctl	status,r2

        default:
             OS_EXIT_CRITICAL();                     /* INVALID option                                 */
             *perr = OS_ERR_FLAG_INVALID_OPT;
  84d7ac:	e0bfff17 	ldw	r2,-4(fp)
  84d7b0:	00c01c44 	movi	r3,113
  84d7b4:	10c00005 	stb	r3,0(r2)
             return ((OS_FLAGS)0);
  84d7b8:	0005883a 	mov	r2,zero
  84d7bc:	00009806 	br	84da20 <OSFlagPost+0x380>
    }
    sched = OS_FALSE;                                /* Indicate that we don't need rescheduling       */
  84d7c0:	e03ff205 	stb	zero,-56(fp)
    pnode = (OS_FLAG_NODE *)pgrp->OSFlagWaitList;
  84d7c4:	e0bffc17 	ldw	r2,-16(fp)
  84d7c8:	10800117 	ldw	r2,4(r2)
  84d7cc:	e0bff115 	stw	r2,-60(fp)
    while (pnode != (OS_FLAG_NODE *)0) {             /* Go through all tasks waiting on event flag(s)  */
  84d7d0:	00007706 	br	84d9b0 <OSFlagPost+0x310>
        switch (pnode->OSFlagNodeWaitType) {
  84d7d4:	e0bff117 	ldw	r2,-60(fp)
  84d7d8:	10800483 	ldbu	r2,18(r2)
  84d7dc:	10803fcc 	andi	r2,r2,255
  84d7e0:	10c00060 	cmpeqi	r3,r2,1
  84d7e4:	18004a1e 	bne	r3,zero,84d910 <OSFlagPost+0x270>
  84d7e8:	10c00088 	cmpgei	r3,r2,2
  84d7ec:	1800021e 	bne	r3,zero,84d7f8 <OSFlagPost+0x158>
  84d7f0:	10002f26 	beq	r2,zero,84d8b0 <OSFlagPost+0x210>
  84d7f4:	00005b06 	br	84d964 <OSFlagPost+0x2c4>
  84d7f8:	10c000a0 	cmpeqi	r3,r2,2
  84d7fc:	1800031e 	bne	r3,zero,84d80c <OSFlagPost+0x16c>
  84d800:	108000e0 	cmpeqi	r2,r2,3
  84d804:	1000171e 	bne	r2,zero,84d864 <OSFlagPost+0x1c4>
  84d808:	00005606 	br	84d964 <OSFlagPost+0x2c4>
            case OS_FLAG_WAIT_SET_ALL:               /* See if all req. flags are set for current node */
                 flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & pnode->OSFlagNodeFlags);
  84d80c:	e0bffc17 	ldw	r2,-16(fp)
  84d810:	10c0020b 	ldhu	r3,8(r2)
  84d814:	e0bff117 	ldw	r2,-60(fp)
  84d818:	1080040b 	ldhu	r2,16(r2)
  84d81c:	1884703a 	and	r2,r3,r2
  84d820:	e0bff60d 	sth	r2,-40(fp)
                 if (flags_rdy == pnode->OSFlagNodeFlags) {
  84d824:	e0bff117 	ldw	r2,-60(fp)
  84d828:	1080040b 	ldhu	r2,16(r2)
  84d82c:	10ffffcc 	andi	r3,r2,65535
  84d830:	e0bff60b 	ldhu	r2,-40(fp)
  84d834:	1880541e 	bne	r3,r2,84d988 <OSFlagPost+0x2e8>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
  84d838:	e0bff60b 	ldhu	r2,-40(fp)
  84d83c:	100b883a 	mov	r5,r2
  84d840:	e13ff117 	ldw	r4,-60(fp)
  84d844:	084dd380 	call	84dd38 <OS_FlagTaskRdy>
  84d848:	e0bff685 	stb	r2,-38(fp)
                     if (rdy == OS_TRUE) {
  84d84c:	e0bff683 	ldbu	r2,-38(fp)
  84d850:	10800058 	cmpnei	r2,r2,1
  84d854:	10004c1e 	bne	r2,zero,84d988 <OSFlagPost+0x2e8>
                         sched = OS_TRUE;                     /* When done we will reschedule          */
  84d858:	00800044 	movi	r2,1
  84d85c:	e0bff205 	stb	r2,-56(fp)
                     }
                 }
                 break;
  84d860:	00004906 	br	84d988 <OSFlagPost+0x2e8>

            case OS_FLAG_WAIT_SET_ANY:               /* See if any flag set                            */
                 flags_rdy = (OS_FLAGS)(pgrp->OSFlagFlags & pnode->OSFlagNodeFlags);
  84d864:	e0bffc17 	ldw	r2,-16(fp)
  84d868:	10c0020b 	ldhu	r3,8(r2)
  84d86c:	e0bff117 	ldw	r2,-60(fp)
  84d870:	1080040b 	ldhu	r2,16(r2)
  84d874:	1884703a 	and	r2,r3,r2
  84d878:	e0bff60d 	sth	r2,-40(fp)
                 if (flags_rdy != (OS_FLAGS)0) {
  84d87c:	e0bff60b 	ldhu	r2,-40(fp)
  84d880:	10004326 	beq	r2,zero,84d990 <OSFlagPost+0x2f0>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
  84d884:	e0bff60b 	ldhu	r2,-40(fp)
  84d888:	100b883a 	mov	r5,r2
  84d88c:	e13ff117 	ldw	r4,-60(fp)
  84d890:	084dd380 	call	84dd38 <OS_FlagTaskRdy>
  84d894:	e0bff685 	stb	r2,-38(fp)
                     if (rdy == OS_TRUE) {
  84d898:	e0bff683 	ldbu	r2,-38(fp)
  84d89c:	10800058 	cmpnei	r2,r2,1
  84d8a0:	10003b1e 	bne	r2,zero,84d990 <OSFlagPost+0x2f0>
                         sched = OS_TRUE;                     /* When done we will reschedule          */
  84d8a4:	00800044 	movi	r2,1
  84d8a8:	e0bff205 	stb	r2,-56(fp)
                     }
                 }
                 break;
  84d8ac:	00003806 	br	84d990 <OSFlagPost+0x2f0>

#if OS_FLAG_WAIT_CLR_EN > 0
            case OS_FLAG_WAIT_CLR_ALL:               /* See if all req. flags are set for current node */
                 flags_rdy = (OS_FLAGS)(~pgrp->OSFlagFlags & pnode->OSFlagNodeFlags);
  84d8b0:	e0bffc17 	ldw	r2,-16(fp)
  84d8b4:	1080020b 	ldhu	r2,8(r2)
  84d8b8:	0084303a 	nor	r2,zero,r2
  84d8bc:	1007883a 	mov	r3,r2
  84d8c0:	e0bff117 	ldw	r2,-60(fp)
  84d8c4:	1080040b 	ldhu	r2,16(r2)
  84d8c8:	1884703a 	and	r2,r3,r2
  84d8cc:	e0bff60d 	sth	r2,-40(fp)
                 if (flags_rdy == pnode->OSFlagNodeFlags) {
  84d8d0:	e0bff117 	ldw	r2,-60(fp)
  84d8d4:	1080040b 	ldhu	r2,16(r2)
  84d8d8:	10ffffcc 	andi	r3,r2,65535
  84d8dc:	e0bff60b 	ldhu	r2,-40(fp)
  84d8e0:	18802d1e 	bne	r3,r2,84d998 <OSFlagPost+0x2f8>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
  84d8e4:	e0bff60b 	ldhu	r2,-40(fp)
  84d8e8:	100b883a 	mov	r5,r2
  84d8ec:	e13ff117 	ldw	r4,-60(fp)
  84d8f0:	084dd380 	call	84dd38 <OS_FlagTaskRdy>
  84d8f4:	e0bff685 	stb	r2,-38(fp)
                     if (rdy == OS_TRUE) {
  84d8f8:	e0bff683 	ldbu	r2,-38(fp)
  84d8fc:	10800058 	cmpnei	r2,r2,1
  84d900:	1000251e 	bne	r2,zero,84d998 <OSFlagPost+0x2f8>
                         sched = OS_TRUE;                     /* When done we will reschedule          */
  84d904:	00800044 	movi	r2,1
  84d908:	e0bff205 	stb	r2,-56(fp)
                     }
                 }
                 break;
  84d90c:	00002206 	br	84d998 <OSFlagPost+0x2f8>

            case OS_FLAG_WAIT_CLR_ANY:               /* See if any flag set                            */
                 flags_rdy = (OS_FLAGS)(~pgrp->OSFlagFlags & pnode->OSFlagNodeFlags);
  84d910:	e0bffc17 	ldw	r2,-16(fp)
  84d914:	1080020b 	ldhu	r2,8(r2)
  84d918:	0084303a 	nor	r2,zero,r2
  84d91c:	1007883a 	mov	r3,r2
  84d920:	e0bff117 	ldw	r2,-60(fp)
  84d924:	1080040b 	ldhu	r2,16(r2)
  84d928:	1884703a 	and	r2,r3,r2
  84d92c:	e0bff60d 	sth	r2,-40(fp)
                 if (flags_rdy != (OS_FLAGS)0) {
  84d930:	e0bff60b 	ldhu	r2,-40(fp)
  84d934:	10001a26 	beq	r2,zero,84d9a0 <OSFlagPost+0x300>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
  84d938:	e0bff60b 	ldhu	r2,-40(fp)
  84d93c:	100b883a 	mov	r5,r2
  84d940:	e13ff117 	ldw	r4,-60(fp)
  84d944:	084dd380 	call	84dd38 <OS_FlagTaskRdy>
  84d948:	e0bff685 	stb	r2,-38(fp)
                     if (rdy == OS_TRUE) {
  84d94c:	e0bff683 	ldbu	r2,-38(fp)
  84d950:	10800058 	cmpnei	r2,r2,1
  84d954:	1000121e 	bne	r2,zero,84d9a0 <OSFlagPost+0x300>
                         sched = OS_TRUE;                     /* When done we will reschedule          */
  84d958:	00800044 	movi	r2,1
  84d95c:	e0bff205 	stb	r2,-56(fp)
                     }
                 }
                 break;
  84d960:	00000f06 	br	84d9a0 <OSFlagPost+0x300>
  84d964:	e0bff317 	ldw	r2,-52(fp)
  84d968:	e0bff515 	stw	r2,-44(fp)
  84d96c:	e0bff517 	ldw	r2,-44(fp)
  84d970:	1001703a 	wrctl	status,r2
#endif
            default:
                 OS_EXIT_CRITICAL();
                 *perr = OS_ERR_FLAG_WAIT_TYPE;
  84d974:	e0bfff17 	ldw	r2,-4(fp)
  84d978:	00c01bc4 	movi	r3,111
  84d97c:	10c00005 	stb	r3,0(r2)
                 return ((OS_FLAGS)0);
  84d980:	0005883a 	mov	r2,zero
  84d984:	00002606 	br	84da20 <OSFlagPost+0x380>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
                     if (rdy == OS_TRUE) {
                         sched = OS_TRUE;                     /* When done we will reschedule          */
                     }
                 }
                 break;
  84d988:	0001883a 	nop
  84d98c:	00000506 	br	84d9a4 <OSFlagPost+0x304>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
                     if (rdy == OS_TRUE) {
                         sched = OS_TRUE;                     /* When done we will reschedule          */
                     }
                 }
                 break;
  84d990:	0001883a 	nop
  84d994:	00000306 	br	84d9a4 <OSFlagPost+0x304>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
                     if (rdy == OS_TRUE) {
                         sched = OS_TRUE;                     /* When done we will reschedule          */
                     }
                 }
                 break;
  84d998:	0001883a 	nop
  84d99c:	00000106 	br	84d9a4 <OSFlagPost+0x304>
                     rdy = OS_FlagTaskRdy(pnode, flags_rdy);  /* Make task RTR, event(s) Rx'd          */
                     if (rdy == OS_TRUE) {
                         sched = OS_TRUE;                     /* When done we will reschedule          */
                     }
                 }
                 break;
  84d9a0:	0001883a 	nop
            default:
                 OS_EXIT_CRITICAL();
                 *perr = OS_ERR_FLAG_WAIT_TYPE;
                 return ((OS_FLAGS)0);
        }
        pnode = (OS_FLAG_NODE *)pnode->OSFlagNodeNext; /* Point to next task waiting for event flag(s) */
  84d9a4:	e0bff117 	ldw	r2,-60(fp)
  84d9a8:	10800017 	ldw	r2,0(r2)
  84d9ac:	e0bff115 	stw	r2,-60(fp)
             *perr = OS_ERR_FLAG_INVALID_OPT;
             return ((OS_FLAGS)0);
    }
    sched = OS_FALSE;                                /* Indicate that we don't need rescheduling       */
    pnode = (OS_FLAG_NODE *)pgrp->OSFlagWaitList;
    while (pnode != (OS_FLAG_NODE *)0) {             /* Go through all tasks waiting on event flag(s)  */
  84d9b0:	e0bff117 	ldw	r2,-60(fp)
  84d9b4:	103f871e 	bne	r2,zero,84d7d4 <__alt_mem_epcs_flash_controller_0+0xff8447d4>
  84d9b8:	e0bff317 	ldw	r2,-52(fp)
  84d9bc:	e0bff715 	stw	r2,-36(fp)
  84d9c0:	e0bff717 	ldw	r2,-36(fp)
  84d9c4:	1001703a 	wrctl	status,r2
                 return ((OS_FLAGS)0);
        }
        pnode = (OS_FLAG_NODE *)pnode->OSFlagNodeNext; /* Point to next task waiting for event flag(s) */
    }
    OS_EXIT_CRITICAL();
    if (sched == OS_TRUE) {
  84d9c8:	e0bff203 	ldbu	r2,-56(fp)
  84d9cc:	10800058 	cmpnei	r2,r2,1
  84d9d0:	1000011e 	bne	r2,zero,84d9d8 <OSFlagPost+0x338>
        OS_Sched();
  84d9d4:	084bf580 	call	84bf58 <OS_Sched>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84d9d8:	0005303a 	rdctl	r2,status
  84d9dc:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84d9e0:	e0fffa17 	ldw	r3,-24(fp)
  84d9e4:	00bfff84 	movi	r2,-2
  84d9e8:	1884703a 	and	r2,r3,r2
  84d9ec:	1001703a 	wrctl	status,r2
  
  return context;
  84d9f0:	e0bffa17 	ldw	r2,-24(fp)
    }
    OS_ENTER_CRITICAL();
  84d9f4:	e0bff315 	stw	r2,-52(fp)
    flags_cur = pgrp->OSFlagFlags;
  84d9f8:	e0bffc17 	ldw	r2,-16(fp)
  84d9fc:	1080020b 	ldhu	r2,8(r2)
  84da00:	e0bff90d 	sth	r2,-28(fp)
  84da04:	e0bff317 	ldw	r2,-52(fp)
  84da08:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84da0c:	e0bff817 	ldw	r2,-32(fp)
  84da10:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr     = OS_ERR_NONE;
  84da14:	e0bfff17 	ldw	r2,-4(fp)
  84da18:	10000005 	stb	zero,0(r2)
    return (flags_cur);
  84da1c:	e0bff90b 	ldhu	r2,-28(fp)
}
  84da20:	e037883a 	mov	sp,fp
  84da24:	dfc00117 	ldw	ra,4(sp)
  84da28:	df000017 	ldw	fp,0(sp)
  84da2c:	dec00204 	addi	sp,sp,8
  84da30:	f800283a 	ret

0084da34 <OSFlagQuery>:
*********************************************************************************************************
*/

#if OS_FLAG_QUERY_EN > 0
OS_FLAGS  OSFlagQuery (OS_FLAG_GRP *pgrp, INT8U *perr)
{
  84da34:	defff904 	addi	sp,sp,-28
  84da38:	df000615 	stw	fp,24(sp)
  84da3c:	df000604 	addi	fp,sp,24
  84da40:	e13ffe15 	stw	r4,-8(fp)
  84da44:	e17fff15 	stw	r5,-4(fp)
    OS_FLAGS   flags;
#if OS_CRITICAL_METHOD == 3                       /* Allocate storage for CPU status register          */
    OS_CPU_SR  cpu_sr = 0;
  84da48:	e03ffa15 	stw	zero,-24(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                     /* Validate 'perr'                                   */
  84da4c:	e0bfff17 	ldw	r2,-4(fp)
  84da50:	1000021e 	bne	r2,zero,84da5c <OSFlagQuery+0x28>
        return ((OS_FLAGS)0);
  84da54:	0005883a 	mov	r2,zero
  84da58:	00002306 	br	84dae8 <OSFlagQuery+0xb4>
    }
    if (pgrp == (OS_FLAG_GRP *)0) {               /* Validate 'pgrp'                                   */
  84da5c:	e0bffe17 	ldw	r2,-8(fp)
  84da60:	1000051e 	bne	r2,zero,84da78 <OSFlagQuery+0x44>
        *perr = OS_ERR_FLAG_INVALID_PGRP;
  84da64:	e0bfff17 	ldw	r2,-4(fp)
  84da68:	00c01b84 	movi	r3,110
  84da6c:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84da70:	0005883a 	mov	r2,zero
  84da74:	00001c06 	br	84dae8 <OSFlagQuery+0xb4>
    }
#endif
    if (pgrp->OSFlagType != OS_EVENT_TYPE_FLAG) { /* Validate event block type                         */
  84da78:	e0bffe17 	ldw	r2,-8(fp)
  84da7c:	10800003 	ldbu	r2,0(r2)
  84da80:	10803fcc 	andi	r2,r2,255
  84da84:	10800160 	cmpeqi	r2,r2,5
  84da88:	1000051e 	bne	r2,zero,84daa0 <OSFlagQuery+0x6c>
        *perr = OS_ERR_EVENT_TYPE;
  84da8c:	e0bfff17 	ldw	r2,-4(fp)
  84da90:	00c00044 	movi	r3,1
  84da94:	10c00005 	stb	r3,0(r2)
        return ((OS_FLAGS)0);
  84da98:	0005883a 	mov	r2,zero
  84da9c:	00001206 	br	84dae8 <OSFlagQuery+0xb4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84daa0:	0005303a 	rdctl	r2,status
  84daa4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84daa8:	e0fffc17 	ldw	r3,-16(fp)
  84daac:	00bfff84 	movi	r2,-2
  84dab0:	1884703a 	and	r2,r3,r2
  84dab4:	1001703a 	wrctl	status,r2
  
  return context;
  84dab8:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84dabc:	e0bffa15 	stw	r2,-24(fp)
    flags = pgrp->OSFlagFlags;
  84dac0:	e0bffe17 	ldw	r2,-8(fp)
  84dac4:	1080020b 	ldhu	r2,8(r2)
  84dac8:	e0bffb0d 	sth	r2,-20(fp)
  84dacc:	e0bffa17 	ldw	r2,-24(fp)
  84dad0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84dad4:	e0bffd17 	ldw	r2,-12(fp)
  84dad8:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84dadc:	e0bfff17 	ldw	r2,-4(fp)
  84dae0:	10000005 	stb	zero,0(r2)
    return (flags);                               /* Return the current value of the event flags       */
  84dae4:	e0bffb0b 	ldhu	r2,-20(fp)
}
  84dae8:	e037883a 	mov	sp,fp
  84daec:	df000017 	ldw	fp,0(sp)
  84daf0:	dec00104 	addi	sp,sp,4
  84daf4:	f800283a 	ret

0084daf8 <OS_FlagBlock>:
* Note(s)    : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/

static  void  OS_FlagBlock (OS_FLAG_GRP *pgrp, OS_FLAG_NODE *pnode, OS_FLAGS flags, INT8U wait_type, INT16U timeout)
{
  84daf8:	defff804 	addi	sp,sp,-32
  84dafc:	df000715 	stw	fp,28(sp)
  84db00:	df000704 	addi	fp,sp,28
  84db04:	e13ffb15 	stw	r4,-20(fp)
  84db08:	e17ffc15 	stw	r5,-16(fp)
  84db0c:	3009883a 	mov	r4,r6
  84db10:	3807883a 	mov	r3,r7
  84db14:	e0800117 	ldw	r2,4(fp)
  84db18:	e13ffd0d 	sth	r4,-12(fp)
  84db1c:	e0fffe05 	stb	r3,-8(fp)
  84db20:	e0bfff0d 	sth	r2,-4(fp)
    OS_FLAG_NODE  *pnode_next;
    INT8U          y;


    OSTCBCur->OSTCBStat      |= OS_STAT_FLAG;
  84db24:	d0a0b217 	ldw	r2,-32056(gp)
  84db28:	d0e0b217 	ldw	r3,-32056(gp)
  84db2c:	18c00c03 	ldbu	r3,48(r3)
  84db30:	18c00814 	ori	r3,r3,32
  84db34:	10c00c05 	stb	r3,48(r2)
    OSTCBCur->OSTCBStatPend   = OS_STAT_PEND_OK;
  84db38:	d0a0b217 	ldw	r2,-32056(gp)
  84db3c:	10000c45 	stb	zero,49(r2)
    OSTCBCur->OSTCBDly        = timeout;              /* Store timeout in task's TCB                   */
  84db40:	d0a0b217 	ldw	r2,-32056(gp)
  84db44:	e0ffff0b 	ldhu	r3,-4(fp)
  84db48:	10c00b8d 	sth	r3,46(r2)
#if OS_TASK_DEL_EN > 0
    OSTCBCur->OSTCBFlagNode   = pnode;                /* TCB to link to node                           */
  84db4c:	d0a0b217 	ldw	r2,-32056(gp)
  84db50:	e0fffc17 	ldw	r3,-16(fp)
  84db54:	10c00a15 	stw	r3,40(r2)
#endif
    pnode->OSFlagNodeFlags    = flags;                /* Save the flags that we need to wait for       */
  84db58:	e0bffc17 	ldw	r2,-16(fp)
  84db5c:	e0fffd0b 	ldhu	r3,-12(fp)
  84db60:	10c0040d 	sth	r3,16(r2)
    pnode->OSFlagNodeWaitType = wait_type;            /* Save the type of wait we are doing            */
  84db64:	e0bffc17 	ldw	r2,-16(fp)
  84db68:	e0fffe03 	ldbu	r3,-8(fp)
  84db6c:	10c00485 	stb	r3,18(r2)
    pnode->OSFlagNodeTCB      = (void *)OSTCBCur;     /* Link to task's TCB                            */
  84db70:	d0e0b217 	ldw	r3,-32056(gp)
  84db74:	e0bffc17 	ldw	r2,-16(fp)
  84db78:	10c00215 	stw	r3,8(r2)
    pnode->OSFlagNodeNext     = pgrp->OSFlagWaitList; /* Add node at beginning of event flag wait list */
  84db7c:	e0bffb17 	ldw	r2,-20(fp)
  84db80:	10c00117 	ldw	r3,4(r2)
  84db84:	e0bffc17 	ldw	r2,-16(fp)
  84db88:	10c00015 	stw	r3,0(r2)
    pnode->OSFlagNodePrev     = (void *)0;
  84db8c:	e0bffc17 	ldw	r2,-16(fp)
  84db90:	10000115 	stw	zero,4(r2)
    pnode->OSFlagNodeFlagGrp  = (void *)pgrp;         /* Link to Event Flag Group                      */
  84db94:	e0bffc17 	ldw	r2,-16(fp)
  84db98:	e0fffb17 	ldw	r3,-20(fp)
  84db9c:	10c00315 	stw	r3,12(r2)
    pnode_next                = (OS_FLAG_NODE *)pgrp->OSFlagWaitList;
  84dba0:	e0bffb17 	ldw	r2,-20(fp)
  84dba4:	10800117 	ldw	r2,4(r2)
  84dba8:	e0bff915 	stw	r2,-28(fp)
    if (pnode_next != (void *)0) {                    /* Is this the first NODE to insert?             */
  84dbac:	e0bff917 	ldw	r2,-28(fp)
  84dbb0:	10000326 	beq	r2,zero,84dbc0 <OS_FlagBlock+0xc8>
        pnode_next->OSFlagNodePrev = pnode;           /* No, link in doubly linked list                */
  84dbb4:	e0bff917 	ldw	r2,-28(fp)
  84dbb8:	e0fffc17 	ldw	r3,-16(fp)
  84dbbc:	10c00115 	stw	r3,4(r2)
    }
    pgrp->OSFlagWaitList = (void *)pnode;
  84dbc0:	e0bffb17 	ldw	r2,-20(fp)
  84dbc4:	e0fffc17 	ldw	r3,-16(fp)
  84dbc8:	10c00115 	stw	r3,4(r2)

    y            =  OSTCBCur->OSTCBY;                 /* Suspend current task until flag(s) received   */
  84dbcc:	d0a0b217 	ldw	r2,-32056(gp)
  84dbd0:	10800d03 	ldbu	r2,52(r2)
  84dbd4:	e0bffa05 	stb	r2,-24(fp)
    OSRdyTbl[y] &= ~OSTCBCur->OSTCBBitX;
  84dbd8:	e0fffa03 	ldbu	r3,-24(fp)
  84dbdc:	e13ffa03 	ldbu	r4,-24(fp)
  84dbe0:	d0a0af44 	addi	r2,gp,-32067
  84dbe4:	2085883a 	add	r2,r4,r2
  84dbe8:	10800003 	ldbu	r2,0(r2)
  84dbec:	1009883a 	mov	r4,r2
  84dbf0:	d0a0b217 	ldw	r2,-32056(gp)
  84dbf4:	10800d43 	ldbu	r2,53(r2)
  84dbf8:	0084303a 	nor	r2,zero,r2
  84dbfc:	2084703a 	and	r2,r4,r2
  84dc00:	1009883a 	mov	r4,r2
  84dc04:	d0a0af44 	addi	r2,gp,-32067
  84dc08:	1885883a 	add	r2,r3,r2
  84dc0c:	11000005 	stb	r4,0(r2)
    if (OSRdyTbl[y] == 0x00) {
  84dc10:	e0fffa03 	ldbu	r3,-24(fp)
  84dc14:	d0a0af44 	addi	r2,gp,-32067
  84dc18:	1885883a 	add	r2,r3,r2
  84dc1c:	10800003 	ldbu	r2,0(r2)
  84dc20:	10803fcc 	andi	r2,r2,255
  84dc24:	1000071e 	bne	r2,zero,84dc44 <OS_FlagBlock+0x14c>
        OSRdyGrp &= ~OSTCBCur->OSTCBBitY;
  84dc28:	d0a0b217 	ldw	r2,-32056(gp)
  84dc2c:	10800d83 	ldbu	r2,54(r2)
  84dc30:	0084303a 	nor	r2,zero,r2
  84dc34:	1007883a 	mov	r3,r2
  84dc38:	d0a0af03 	ldbu	r2,-32068(gp)
  84dc3c:	1884703a 	and	r2,r3,r2
  84dc40:	d0a0af05 	stb	r2,-32068(gp)
    }
}
  84dc44:	0001883a 	nop
  84dc48:	e037883a 	mov	sp,fp
  84dc4c:	df000017 	ldw	fp,0(sp)
  84dc50:	dec00104 	addi	sp,sp,4
  84dc54:	f800283a 	ret

0084dc58 <OS_FlagInit>:
* WARNING    : You MUST NOT call this function from your code.  This is an INTERNAL function to uC/OS-II.
*********************************************************************************************************
*/

void  OS_FlagInit (void)
{
  84dc58:	defffb04 	addi	sp,sp,-20
  84dc5c:	dfc00415 	stw	ra,16(sp)
  84dc60:	df000315 	stw	fp,12(sp)
  84dc64:	df000304 	addi	fp,sp,12
    INT16U       i;
    OS_FLAG_GRP *pgrp1;
    OS_FLAG_GRP *pgrp2;


    OS_MemClr((INT8U *)&OSFlagTbl[0], sizeof(OSFlagTbl));           /* Clear the flag group table      */
  84dc68:	0140dc04 	movi	r5,880
  84dc6c:	010021b4 	movhi	r4,134
  84dc70:	21088f04 	addi	r4,r4,8764
  84dc74:	084be9c0 	call	84be9c <OS_MemClr>
    pgrp1 = &OSFlagTbl[0];
  84dc78:	008021b4 	movhi	r2,134
  84dc7c:	10888f04 	addi	r2,r2,8764
  84dc80:	e0bffe15 	stw	r2,-8(fp)
    pgrp2 = &OSFlagTbl[1];
  84dc84:	008021b4 	movhi	r2,134
  84dc88:	10889a04 	addi	r2,r2,8808
  84dc8c:	e0bfff15 	stw	r2,-4(fp)
    for (i = 0; i < (OS_MAX_FLAGS - 1); i++) {                      /* Init. list of free EVENT FLAGS  */
  84dc90:	e03ffd0d 	sth	zero,-12(fp)
  84dc94:	00001306 	br	84dce4 <OS_FlagInit+0x8c>
        pgrp1->OSFlagType     = OS_EVENT_TYPE_UNUSED;
  84dc98:	e0bffe17 	ldw	r2,-8(fp)
  84dc9c:	10000005 	stb	zero,0(r2)
        pgrp1->OSFlagWaitList = (void *)pgrp2;
  84dca0:	e0bffe17 	ldw	r2,-8(fp)
  84dca4:	e0ffff17 	ldw	r3,-4(fp)
  84dca8:	10c00115 	stw	r3,4(r2)
#if OS_FLAG_NAME_SIZE > 1
        pgrp1->OSFlagName[0]  = '?';                                /* Unknown name                    */
  84dcac:	e0bffe17 	ldw	r2,-8(fp)
  84dcb0:	00c00fc4 	movi	r3,63
  84dcb4:	10c00285 	stb	r3,10(r2)
        pgrp1->OSFlagName[1]  = OS_ASCII_NUL;
  84dcb8:	e0bffe17 	ldw	r2,-8(fp)
  84dcbc:	100002c5 	stb	zero,11(r2)
#endif
        pgrp1++;
  84dcc0:	e0bffe17 	ldw	r2,-8(fp)
  84dcc4:	10800b04 	addi	r2,r2,44
  84dcc8:	e0bffe15 	stw	r2,-8(fp)
        pgrp2++;
  84dccc:	e0bfff17 	ldw	r2,-4(fp)
  84dcd0:	10800b04 	addi	r2,r2,44
  84dcd4:	e0bfff15 	stw	r2,-4(fp)


    OS_MemClr((INT8U *)&OSFlagTbl[0], sizeof(OSFlagTbl));           /* Clear the flag group table      */
    pgrp1 = &OSFlagTbl[0];
    pgrp2 = &OSFlagTbl[1];
    for (i = 0; i < (OS_MAX_FLAGS - 1); i++) {                      /* Init. list of free EVENT FLAGS  */
  84dcd8:	e0bffd0b 	ldhu	r2,-12(fp)
  84dcdc:	10800044 	addi	r2,r2,1
  84dce0:	e0bffd0d 	sth	r2,-12(fp)
  84dce4:	e0bffd0b 	ldhu	r2,-12(fp)
  84dce8:	108004f0 	cmpltui	r2,r2,19
  84dcec:	103fea1e 	bne	r2,zero,84dc98 <__alt_mem_epcs_flash_controller_0+0xff844c98>
        pgrp1->OSFlagName[1]  = OS_ASCII_NUL;
#endif
        pgrp1++;
        pgrp2++;
    }
    pgrp1->OSFlagType     = OS_EVENT_TYPE_UNUSED;
  84dcf0:	e0bffe17 	ldw	r2,-8(fp)
  84dcf4:	10000005 	stb	zero,0(r2)
    pgrp1->OSFlagWaitList = (void *)0;
  84dcf8:	e0bffe17 	ldw	r2,-8(fp)
  84dcfc:	10000115 	stw	zero,4(r2)
#if OS_FLAG_NAME_SIZE > 1
    pgrp1->OSFlagName[0]  = '?';                                    /* Unknown name                    */
  84dd00:	e0bffe17 	ldw	r2,-8(fp)
  84dd04:	00c00fc4 	movi	r3,63
  84dd08:	10c00285 	stb	r3,10(r2)
    pgrp1->OSFlagName[1]  = OS_ASCII_NUL;
  84dd0c:	e0bffe17 	ldw	r2,-8(fp)
  84dd10:	100002c5 	stb	zero,11(r2)
#endif
    OSFlagFreeList        = &OSFlagTbl[0];
  84dd14:	008021b4 	movhi	r2,134
  84dd18:	10888f04 	addi	r2,r2,8764
  84dd1c:	d0a0b415 	stw	r2,-32048(gp)
#endif
}
  84dd20:	0001883a 	nop
  84dd24:	e037883a 	mov	sp,fp
  84dd28:	dfc00117 	ldw	ra,4(sp)
  84dd2c:	df000017 	ldw	fp,0(sp)
  84dd30:	dec00204 	addi	sp,sp,8
  84dd34:	f800283a 	ret

0084dd38 <OS_FlagTaskRdy>:
*              2) This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/

static  BOOLEAN  OS_FlagTaskRdy (OS_FLAG_NODE *pnode, OS_FLAGS flags_rdy)
{
  84dd38:	defffa04 	addi	sp,sp,-24
  84dd3c:	dfc00515 	stw	ra,20(sp)
  84dd40:	df000415 	stw	fp,16(sp)
  84dd44:	df000404 	addi	fp,sp,16
  84dd48:	e13ffe15 	stw	r4,-8(fp)
  84dd4c:	2805883a 	mov	r2,r5
  84dd50:	e0bfff0d 	sth	r2,-4(fp)
    OS_TCB   *ptcb;
    BOOLEAN   sched;


    ptcb                 = (OS_TCB *)pnode->OSFlagNodeTCB; /* Point to TCB of waiting task             */
  84dd54:	e0bffe17 	ldw	r2,-8(fp)
  84dd58:	10800217 	ldw	r2,8(r2)
  84dd5c:	e0bffd15 	stw	r2,-12(fp)
    ptcb->OSTCBDly       = 0;
  84dd60:	e0bffd17 	ldw	r2,-12(fp)
  84dd64:	10000b8d 	sth	zero,46(r2)
    ptcb->OSTCBFlagsRdy  = flags_rdy;
  84dd68:	e0bffd17 	ldw	r2,-12(fp)
  84dd6c:	e0ffff0b 	ldhu	r3,-4(fp)
  84dd70:	10c00b0d 	sth	r3,44(r2)
    ptcb->OSTCBStat     &= ~(INT8U)OS_STAT_FLAG;
  84dd74:	e0bffd17 	ldw	r2,-12(fp)
  84dd78:	10c00c03 	ldbu	r3,48(r2)
  84dd7c:	00bff7c4 	movi	r2,-33
  84dd80:	1884703a 	and	r2,r3,r2
  84dd84:	1007883a 	mov	r3,r2
  84dd88:	e0bffd17 	ldw	r2,-12(fp)
  84dd8c:	10c00c05 	stb	r3,48(r2)
    ptcb->OSTCBStatPend  = OS_STAT_PEND_OK;
  84dd90:	e0bffd17 	ldw	r2,-12(fp)
  84dd94:	10000c45 	stb	zero,49(r2)
    if (ptcb->OSTCBStat == OS_STAT_RDY) {                  /* Task now ready?                          */
  84dd98:	e0bffd17 	ldw	r2,-12(fp)
  84dd9c:	10800c03 	ldbu	r2,48(r2)
  84dda0:	10803fcc 	andi	r2,r2,255
  84dda4:	1000181e 	bne	r2,zero,84de08 <OS_FlagTaskRdy+0xd0>
        OSRdyGrp               |= ptcb->OSTCBBitY;         /* Put task into ready list                 */
  84dda8:	e0bffd17 	ldw	r2,-12(fp)
  84ddac:	10c00d83 	ldbu	r3,54(r2)
  84ddb0:	d0a0af03 	ldbu	r2,-32068(gp)
  84ddb4:	1884b03a 	or	r2,r3,r2
  84ddb8:	d0a0af05 	stb	r2,-32068(gp)
        OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
  84ddbc:	e0bffd17 	ldw	r2,-12(fp)
  84ddc0:	10800d03 	ldbu	r2,52(r2)
  84ddc4:	10c03fcc 	andi	r3,r2,255
  84ddc8:	e0bffd17 	ldw	r2,-12(fp)
  84ddcc:	10800d03 	ldbu	r2,52(r2)
  84ddd0:	11003fcc 	andi	r4,r2,255
  84ddd4:	d0a0af44 	addi	r2,gp,-32067
  84ddd8:	2085883a 	add	r2,r4,r2
  84dddc:	11000003 	ldbu	r4,0(r2)
  84dde0:	e0bffd17 	ldw	r2,-12(fp)
  84dde4:	10800d43 	ldbu	r2,53(r2)
  84dde8:	2084b03a 	or	r2,r4,r2
  84ddec:	1009883a 	mov	r4,r2
  84ddf0:	d0a0af44 	addi	r2,gp,-32067
  84ddf4:	1885883a 	add	r2,r3,r2
  84ddf8:	11000005 	stb	r4,0(r2)
        sched                   = OS_TRUE;
  84ddfc:	00800044 	movi	r2,1
  84de00:	e0bffc05 	stb	r2,-16(fp)
  84de04:	00000106 	br	84de0c <OS_FlagTaskRdy+0xd4>
    } else {
        sched                   = OS_FALSE;
  84de08:	e03ffc05 	stb	zero,-16(fp)
    }
    OS_FlagUnlink(pnode);
  84de0c:	e13ffe17 	ldw	r4,-8(fp)
  84de10:	084de2c0 	call	84de2c <OS_FlagUnlink>
    return (sched);
  84de14:	e0bffc03 	ldbu	r2,-16(fp)
}
  84de18:	e037883a 	mov	sp,fp
  84de1c:	dfc00117 	ldw	ra,4(sp)
  84de20:	df000017 	ldw	fp,0(sp)
  84de24:	dec00204 	addi	sp,sp,8
  84de28:	f800283a 	ret

0084de2c <OS_FlagUnlink>:
*              2) This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/

void  OS_FlagUnlink (OS_FLAG_NODE *pnode)
{
  84de2c:	defffa04 	addi	sp,sp,-24
  84de30:	df000515 	stw	fp,20(sp)
  84de34:	df000504 	addi	fp,sp,20
  84de38:	e13fff15 	stw	r4,-4(fp)
    OS_FLAG_GRP  *pgrp;
    OS_FLAG_NODE *pnode_prev;
    OS_FLAG_NODE *pnode_next;


    pnode_prev = (OS_FLAG_NODE *)pnode->OSFlagNodePrev;
  84de3c:	e0bfff17 	ldw	r2,-4(fp)
  84de40:	10800117 	ldw	r2,4(r2)
  84de44:	e0bffb15 	stw	r2,-20(fp)
    pnode_next = (OS_FLAG_NODE *)pnode->OSFlagNodeNext;
  84de48:	e0bfff17 	ldw	r2,-4(fp)
  84de4c:	10800017 	ldw	r2,0(r2)
  84de50:	e0bffc15 	stw	r2,-16(fp)
    if (pnode_prev == (OS_FLAG_NODE *)0) {                      /* Is it first node in wait list?      */
  84de54:	e0bffb17 	ldw	r2,-20(fp)
  84de58:	10000b1e 	bne	r2,zero,84de88 <OS_FlagUnlink+0x5c>
        pgrp                 = (OS_FLAG_GRP *)pnode->OSFlagNodeFlagGrp;
  84de5c:	e0bfff17 	ldw	r2,-4(fp)
  84de60:	10800317 	ldw	r2,12(r2)
  84de64:	e0bffd15 	stw	r2,-12(fp)
        pgrp->OSFlagWaitList = (void *)pnode_next;              /*      Update list for new 1st node   */
  84de68:	e0bffd17 	ldw	r2,-12(fp)
  84de6c:	e0fffc17 	ldw	r3,-16(fp)
  84de70:	10c00115 	stw	r3,4(r2)
        if (pnode_next != (OS_FLAG_NODE *)0) {
  84de74:	e0bffc17 	ldw	r2,-16(fp)
  84de78:	10000b26 	beq	r2,zero,84dea8 <OS_FlagUnlink+0x7c>
            pnode_next->OSFlagNodePrev = (OS_FLAG_NODE *)0;     /*      Link new 1st node PREV to NULL */
  84de7c:	e0bffc17 	ldw	r2,-16(fp)
  84de80:	10000115 	stw	zero,4(r2)
  84de84:	00000806 	br	84dea8 <OS_FlagUnlink+0x7c>
        }
    } else {                                                    /* No,  A node somewhere in the list   */
        pnode_prev->OSFlagNodeNext = pnode_next;                /*      Link around the node to unlink */
  84de88:	e0bffb17 	ldw	r2,-20(fp)
  84de8c:	e0fffc17 	ldw	r3,-16(fp)
  84de90:	10c00015 	stw	r3,0(r2)
        if (pnode_next != (OS_FLAG_NODE *)0) {                  /*      Was this the LAST node?        */
  84de94:	e0bffc17 	ldw	r2,-16(fp)
  84de98:	10000326 	beq	r2,zero,84dea8 <OS_FlagUnlink+0x7c>
            pnode_next->OSFlagNodePrev = pnode_prev;            /*      No, Link around current node   */
  84de9c:	e0bffc17 	ldw	r2,-16(fp)
  84dea0:	e0fffb17 	ldw	r3,-20(fp)
  84dea4:	10c00115 	stw	r3,4(r2)
        }
    }
#if OS_TASK_DEL_EN > 0
    ptcb                = (OS_TCB *)pnode->OSFlagNodeTCB;
  84dea8:	e0bfff17 	ldw	r2,-4(fp)
  84deac:	10800217 	ldw	r2,8(r2)
  84deb0:	e0bffe15 	stw	r2,-8(fp)
    ptcb->OSTCBFlagNode = (OS_FLAG_NODE *)0;
  84deb4:	e0bffe17 	ldw	r2,-8(fp)
  84deb8:	10000a15 	stw	zero,40(r2)
#endif
}
  84debc:	0001883a 	nop
  84dec0:	e037883a 	mov	sp,fp
  84dec4:	df000017 	ldw	fp,0(sp)
  84dec8:	dec00104 	addi	sp,sp,4
  84decc:	f800283a 	ret

0084ded0 <OSMemCreate>:
*                              free partition is available.
*********************************************************************************************************
*/

OS_MEM  *OSMemCreate (void *addr, INT32U nblks, INT32U blksize, INT8U *perr)
{
  84ded0:	defff404 	addi	sp,sp,-48
  84ded4:	df000b15 	stw	fp,44(sp)
  84ded8:	df000b04 	addi	fp,sp,44
  84dedc:	e13ffc15 	stw	r4,-16(fp)
  84dee0:	e17ffd15 	stw	r5,-12(fp)
  84dee4:	e1bffe15 	stw	r6,-8(fp)
  84dee8:	e1ffff15 	stw	r7,-4(fp)
    OS_MEM    *pmem;
    INT8U     *pblk;
    void     **plink;
    INT32U     i;
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84deec:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0              
    if (perr == (INT8U *)0) {                         /* Validate 'perr'                               */
  84def0:	e0bfff17 	ldw	r2,-4(fp)
  84def4:	1000021e 	bne	r2,zero,84df00 <OSMemCreate+0x30>
        return ((OS_MEM *)0);
  84def8:	0005883a 	mov	r2,zero
  84defc:	00006506 	br	84e094 <OSMemCreate+0x1c4>
    }
    if (addr == (void *)0) {                          /* Must pass a valid address for the memory part.*/
  84df00:	e0bffc17 	ldw	r2,-16(fp)
  84df04:	1000051e 	bne	r2,zero,84df1c <OSMemCreate+0x4c>
        *perr = OS_ERR_MEM_INVALID_ADDR;
  84df08:	e0bfff17 	ldw	r2,-4(fp)
  84df0c:	00c01884 	movi	r3,98
  84df10:	10c00005 	stb	r3,0(r2)
        return ((OS_MEM *)0);
  84df14:	0005883a 	mov	r2,zero
  84df18:	00005e06 	br	84e094 <OSMemCreate+0x1c4>
    }
    if (((INT32U)addr & (sizeof(void *) - 1)) != 0){  /* Must be pointer size aligned                  */
  84df1c:	e0bffc17 	ldw	r2,-16(fp)
  84df20:	108000cc 	andi	r2,r2,3
  84df24:	10000526 	beq	r2,zero,84df3c <OSMemCreate+0x6c>
        *perr = OS_ERR_MEM_INVALID_ADDR;
  84df28:	e0bfff17 	ldw	r2,-4(fp)
  84df2c:	00c01884 	movi	r3,98
  84df30:	10c00005 	stb	r3,0(r2)
        return ((OS_MEM *)0);
  84df34:	0005883a 	mov	r2,zero
  84df38:	00005606 	br	84e094 <OSMemCreate+0x1c4>
    }
    if (nblks < 2) {                                  /* Must have at least 2 blocks per partition     */
  84df3c:	e0bffd17 	ldw	r2,-12(fp)
  84df40:	108000a8 	cmpgeui	r2,r2,2
  84df44:	1000051e 	bne	r2,zero,84df5c <OSMemCreate+0x8c>
        *perr = OS_ERR_MEM_INVALID_BLKS;
  84df48:	e0bfff17 	ldw	r2,-4(fp)
  84df4c:	00c016c4 	movi	r3,91
  84df50:	10c00005 	stb	r3,0(r2)
        return ((OS_MEM *)0);
  84df54:	0005883a 	mov	r2,zero
  84df58:	00004e06 	br	84e094 <OSMemCreate+0x1c4>
    }
    if (blksize < sizeof(void *)) {                   /* Must contain space for at least a pointer     */
  84df5c:	e0bffe17 	ldw	r2,-8(fp)
  84df60:	10800128 	cmpgeui	r2,r2,4
  84df64:	1000051e 	bne	r2,zero,84df7c <OSMemCreate+0xac>
        *perr = OS_ERR_MEM_INVALID_SIZE;
  84df68:	e0bfff17 	ldw	r2,-4(fp)
  84df6c:	00c01704 	movi	r3,92
  84df70:	10c00005 	stb	r3,0(r2)
        return ((OS_MEM *)0);
  84df74:	0005883a 	mov	r2,zero
  84df78:	00004606 	br	84e094 <OSMemCreate+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84df7c:	0005303a 	rdctl	r2,status
  84df80:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84df84:	e0fffb17 	ldw	r3,-20(fp)
  84df88:	00bfff84 	movi	r2,-2
  84df8c:	1884703a 	and	r2,r3,r2
  84df90:	1001703a 	wrctl	status,r2
  
  return context;
  84df94:	e0bffb17 	ldw	r2,-20(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  84df98:	e0bff815 	stw	r2,-32(fp)
    pmem = OSMemFreeList;                             /* Get next free memory partition                */
  84df9c:	d0a0ac17 	ldw	r2,-32080(gp)
  84dfa0:	e0bffa15 	stw	r2,-24(fp)
    if (OSMemFreeList != (OS_MEM *)0) {               /* See if pool of free partitions was empty      */
  84dfa4:	d0a0ac17 	ldw	r2,-32080(gp)
  84dfa8:	10000326 	beq	r2,zero,84dfb8 <OSMemCreate+0xe8>
        OSMemFreeList = (OS_MEM *)OSMemFreeList->OSMemFreeList;
  84dfac:	d0a0ac17 	ldw	r2,-32080(gp)
  84dfb0:	10800117 	ldw	r2,4(r2)
  84dfb4:	d0a0ac15 	stw	r2,-32080(gp)
  84dfb8:	e0bff817 	ldw	r2,-32(fp)
  84dfbc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84dfc0:	e0bff917 	ldw	r2,-28(fp)
  84dfc4:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    if (pmem == (OS_MEM *)0) {                        /* See if we have a memory partition             */
  84dfc8:	e0bffa17 	ldw	r2,-24(fp)
  84dfcc:	1000051e 	bne	r2,zero,84dfe4 <OSMemCreate+0x114>
        *perr = OS_ERR_MEM_INVALID_PART;
  84dfd0:	e0bfff17 	ldw	r2,-4(fp)
  84dfd4:	00c01684 	movi	r3,90
  84dfd8:	10c00005 	stb	r3,0(r2)
        return ((OS_MEM *)0);
  84dfdc:	0005883a 	mov	r2,zero
  84dfe0:	00002c06 	br	84e094 <OSMemCreate+0x1c4>
    }
    plink = (void **)addr;                            /* Create linked list of free memory blocks      */
  84dfe4:	e0bffc17 	ldw	r2,-16(fp)
  84dfe8:	e0bff615 	stw	r2,-40(fp)
    pblk  = (INT8U *)((INT32U)addr + blksize);
  84dfec:	e0fffc17 	ldw	r3,-16(fp)
  84dff0:	e0bffe17 	ldw	r2,-8(fp)
  84dff4:	1885883a 	add	r2,r3,r2
  84dff8:	e0bff515 	stw	r2,-44(fp)
    for (i = 0; i < (nblks - 1); i++) {
  84dffc:	e03ff715 	stw	zero,-36(fp)
  84e000:	00000c06 	br	84e034 <OSMemCreate+0x164>
       *plink = (void *)pblk;                         /* Save pointer to NEXT block in CURRENT block   */
  84e004:	e0bff617 	ldw	r2,-40(fp)
  84e008:	e0fff517 	ldw	r3,-44(fp)
  84e00c:	10c00015 	stw	r3,0(r2)
        plink = (void **)pblk;                        /* Position to  NEXT      block                  */
  84e010:	e0bff517 	ldw	r2,-44(fp)
  84e014:	e0bff615 	stw	r2,-40(fp)
        pblk  = (INT8U *)((INT32U)pblk + blksize);    /* Point to the FOLLOWING block                  */
  84e018:	e0fff517 	ldw	r3,-44(fp)
  84e01c:	e0bffe17 	ldw	r2,-8(fp)
  84e020:	1885883a 	add	r2,r3,r2
  84e024:	e0bff515 	stw	r2,-44(fp)
        *perr = OS_ERR_MEM_INVALID_PART;
        return ((OS_MEM *)0);
    }
    plink = (void **)addr;                            /* Create linked list of free memory blocks      */
    pblk  = (INT8U *)((INT32U)addr + blksize);
    for (i = 0; i < (nblks - 1); i++) {
  84e028:	e0bff717 	ldw	r2,-36(fp)
  84e02c:	10800044 	addi	r2,r2,1
  84e030:	e0bff715 	stw	r2,-36(fp)
  84e034:	e0bffd17 	ldw	r2,-12(fp)
  84e038:	10bfffc4 	addi	r2,r2,-1
  84e03c:	e0fff717 	ldw	r3,-36(fp)
  84e040:	18bff036 	bltu	r3,r2,84e004 <__alt_mem_epcs_flash_controller_0+0xff845004>
       *plink = (void *)pblk;                         /* Save pointer to NEXT block in CURRENT block   */
        plink = (void **)pblk;                        /* Position to  NEXT      block                  */
        pblk  = (INT8U *)((INT32U)pblk + blksize);    /* Point to the FOLLOWING block                  */
    }
    *plink              = (void *)0;                  /* Last memory block points to NULL              */
  84e044:	e0bff617 	ldw	r2,-40(fp)
  84e048:	10000015 	stw	zero,0(r2)
    pmem->OSMemAddr     = addr;                       /* Store start address of memory partition       */
  84e04c:	e0bffa17 	ldw	r2,-24(fp)
  84e050:	e0fffc17 	ldw	r3,-16(fp)
  84e054:	10c00015 	stw	r3,0(r2)
    pmem->OSMemFreeList = addr;                       /* Initialize pointer to pool of free blocks     */
  84e058:	e0bffa17 	ldw	r2,-24(fp)
  84e05c:	e0fffc17 	ldw	r3,-16(fp)
  84e060:	10c00115 	stw	r3,4(r2)
    pmem->OSMemNFree    = nblks;                      /* Store number of free blocks in MCB            */
  84e064:	e0bffa17 	ldw	r2,-24(fp)
  84e068:	e0fffd17 	ldw	r3,-12(fp)
  84e06c:	10c00415 	stw	r3,16(r2)
    pmem->OSMemNBlks    = nblks;
  84e070:	e0bffa17 	ldw	r2,-24(fp)
  84e074:	e0fffd17 	ldw	r3,-12(fp)
  84e078:	10c00315 	stw	r3,12(r2)
    pmem->OSMemBlkSize  = blksize;                    /* Store block size of each memory blocks        */
  84e07c:	e0bffa17 	ldw	r2,-24(fp)
  84e080:	e0fffe17 	ldw	r3,-8(fp)
  84e084:	10c00215 	stw	r3,8(r2)
    *perr               = OS_ERR_NONE;
  84e088:	e0bfff17 	ldw	r2,-4(fp)
  84e08c:	10000005 	stb	zero,0(r2)
    return (pmem);
  84e090:	e0bffa17 	ldw	r2,-24(fp)
}
  84e094:	e037883a 	mov	sp,fp
  84e098:	df000017 	ldw	fp,0(sp)
  84e09c:	dec00104 	addi	sp,sp,4
  84e0a0:	f800283a 	ret

0084e0a4 <OSMemGet>:
*               A pointer to NULL if an error is detected
*********************************************************************************************************
*/

void  *OSMemGet (OS_MEM *pmem, INT8U *perr)
{
  84e0a4:	defff804 	addi	sp,sp,-32
  84e0a8:	df000715 	stw	fp,28(sp)
  84e0ac:	df000704 	addi	fp,sp,28
  84e0b0:	e13ffe15 	stw	r4,-8(fp)
  84e0b4:	e17fff15 	stw	r5,-4(fp)
    void      *pblk;
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84e0b8:	e03ff915 	stw	zero,-28(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                         /* Validate 'perr'                               */
  84e0bc:	e0bfff17 	ldw	r2,-4(fp)
  84e0c0:	1000021e 	bne	r2,zero,84e0cc <OSMemGet+0x28>
        return ((void *)0);
  84e0c4:	0005883a 	mov	r2,zero
  84e0c8:	00002e06 	br	84e184 <OSMemGet+0xe0>
    }
    if (pmem == (OS_MEM *)0) {                        /* Must point to a valid memory partition        */
  84e0cc:	e0bffe17 	ldw	r2,-8(fp)
  84e0d0:	1000051e 	bne	r2,zero,84e0e8 <OSMemGet+0x44>
        *perr = OS_ERR_MEM_INVALID_PMEM;
  84e0d4:	e0bfff17 	ldw	r2,-4(fp)
  84e0d8:	00c01804 	movi	r3,96
  84e0dc:	10c00005 	stb	r3,0(r2)
        return ((void *)0);
  84e0e0:	0005883a 	mov	r2,zero
  84e0e4:	00002706 	br	84e184 <OSMemGet+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e0e8:	0005303a 	rdctl	r2,status
  84e0ec:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e0f0:	e0fffd17 	ldw	r3,-12(fp)
  84e0f4:	00bfff84 	movi	r2,-2
  84e0f8:	1884703a 	and	r2,r3,r2
  84e0fc:	1001703a 	wrctl	status,r2
  
  return context;
  84e100:	e0bffd17 	ldw	r2,-12(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  84e104:	e0bff915 	stw	r2,-28(fp)
    if (pmem->OSMemNFree > 0) {                       /* See if there are any free memory blocks       */
  84e108:	e0bffe17 	ldw	r2,-8(fp)
  84e10c:	10800417 	ldw	r2,16(r2)
  84e110:	10001426 	beq	r2,zero,84e164 <OSMemGet+0xc0>
        pblk                = pmem->OSMemFreeList;    /* Yes, point to next free memory block          */
  84e114:	e0bffe17 	ldw	r2,-8(fp)
  84e118:	10800117 	ldw	r2,4(r2)
  84e11c:	e0bffb15 	stw	r2,-20(fp)
        pmem->OSMemFreeList = *(void **)pblk;         /*      Adjust pointer to new free list          */
  84e120:	e0bffb17 	ldw	r2,-20(fp)
  84e124:	10c00017 	ldw	r3,0(r2)
  84e128:	e0bffe17 	ldw	r2,-8(fp)
  84e12c:	10c00115 	stw	r3,4(r2)
        pmem->OSMemNFree--;                           /*      One less memory block in this partition  */
  84e130:	e0bffe17 	ldw	r2,-8(fp)
  84e134:	10800417 	ldw	r2,16(r2)
  84e138:	10ffffc4 	addi	r3,r2,-1
  84e13c:	e0bffe17 	ldw	r2,-8(fp)
  84e140:	10c00415 	stw	r3,16(r2)
  84e144:	e0bff917 	ldw	r2,-28(fp)
  84e148:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84e14c:	e0bffa17 	ldw	r2,-24(fp)
  84e150:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_NONE;                          /*      No error                                 */
  84e154:	e0bfff17 	ldw	r2,-4(fp)
  84e158:	10000005 	stb	zero,0(r2)
        return (pblk);                                /*      Return memory block to caller            */
  84e15c:	e0bffb17 	ldw	r2,-20(fp)
  84e160:	00000806 	br	84e184 <OSMemGet+0xe0>
  84e164:	e0bff917 	ldw	r2,-28(fp)
  84e168:	e0bffc15 	stw	r2,-16(fp)
  84e16c:	e0bffc17 	ldw	r2,-16(fp)
  84e170:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_MEM_NO_FREE_BLKS;                  /* No,  Notify caller of empty memory partition  */
  84e174:	e0bfff17 	ldw	r2,-4(fp)
  84e178:	00c01744 	movi	r3,93
  84e17c:	10c00005 	stb	r3,0(r2)
    return ((void *)0);                               /*      Return NULL pointer to caller            */
  84e180:	0005883a 	mov	r2,zero
}
  84e184:	e037883a 	mov	sp,fp
  84e188:	df000017 	ldw	fp,0(sp)
  84e18c:	dec00104 	addi	sp,sp,4
  84e190:	f800283a 	ret

0084e194 <OSMemNameGet>:
*********************************************************************************************************
*/

#if OS_MEM_NAME_SIZE > 1
INT8U  OSMemNameGet (OS_MEM *pmem, INT8U *pname, INT8U *perr)
{
  84e194:	defff704 	addi	sp,sp,-36
  84e198:	dfc00815 	stw	ra,32(sp)
  84e19c:	df000715 	stw	fp,28(sp)
  84e1a0:	df000704 	addi	fp,sp,28
  84e1a4:	e13ffd15 	stw	r4,-12(fp)
  84e1a8:	e17ffe15 	stw	r5,-8(fp)
  84e1ac:	e1bfff15 	stw	r6,-4(fp)
    INT8U      len;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84e1b0:	e03ff915 	stw	zero,-28(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84e1b4:	e0bfff17 	ldw	r2,-4(fp)
  84e1b8:	1000021e 	bne	r2,zero,84e1c4 <OSMemNameGet+0x30>
        return (0);
  84e1bc:	0005883a 	mov	r2,zero
  84e1c0:	00002b06 	br	84e270 <OSMemNameGet+0xdc>
    }
    if (pmem == (OS_MEM *)0) {                   /* Is 'pmem' a NULL pointer?                          */
  84e1c4:	e0bffd17 	ldw	r2,-12(fp)
  84e1c8:	1000051e 	bne	r2,zero,84e1e0 <OSMemNameGet+0x4c>
        *perr = OS_ERR_MEM_INVALID_PMEM;
  84e1cc:	e0bfff17 	ldw	r2,-4(fp)
  84e1d0:	00c01804 	movi	r3,96
  84e1d4:	10c00005 	stb	r3,0(r2)
        return (0);
  84e1d8:	0005883a 	mov	r2,zero
  84e1dc:	00002406 	br	84e270 <OSMemNameGet+0xdc>
    }
    if (pname == (INT8U *)0) {                   /* Is 'pname' a NULL pointer?                         */
  84e1e0:	e0bffe17 	ldw	r2,-8(fp)
  84e1e4:	1000051e 	bne	r2,zero,84e1fc <OSMemNameGet+0x68>
        *perr = OS_ERR_PNAME_NULL;
  84e1e8:	e0bfff17 	ldw	r2,-4(fp)
  84e1ec:	00c00304 	movi	r3,12
  84e1f0:	10c00005 	stb	r3,0(r2)
        return (0);
  84e1f4:	0005883a 	mov	r2,zero
  84e1f8:	00001d06 	br	84e270 <OSMemNameGet+0xdc>
    }
#endif
    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  84e1fc:	d0a0b103 	ldbu	r2,-32060(gp)
  84e200:	10803fcc 	andi	r2,r2,255
  84e204:	10000526 	beq	r2,zero,84e21c <OSMemNameGet+0x88>
        *perr = OS_ERR_NAME_GET_ISR;
  84e208:	e0bfff17 	ldw	r2,-4(fp)
  84e20c:	00c00444 	movi	r3,17
  84e210:	10c00005 	stb	r3,0(r2)
        return (0);
  84e214:	0005883a 	mov	r2,zero
  84e218:	00001506 	br	84e270 <OSMemNameGet+0xdc>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e21c:	0005303a 	rdctl	r2,status
  84e220:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e224:	e0fffb17 	ldw	r3,-20(fp)
  84e228:	00bfff84 	movi	r2,-2
  84e22c:	1884703a 	and	r2,r3,r2
  84e230:	1001703a 	wrctl	status,r2
  
  return context;
  84e234:	e0bffb17 	ldw	r2,-20(fp)
    }
    OS_ENTER_CRITICAL();
  84e238:	e0bff915 	stw	r2,-28(fp)
    len   = OS_StrCopy(pname, pmem->OSMemName);  /* Copy name from OS_MEM                              */
  84e23c:	e0bffd17 	ldw	r2,-12(fp)
  84e240:	10800504 	addi	r2,r2,20
  84e244:	100b883a 	mov	r5,r2
  84e248:	e13ffe17 	ldw	r4,-8(fp)
  84e24c:	084c09c0 	call	84c09c <OS_StrCopy>
  84e250:	e0bffa05 	stb	r2,-24(fp)
  84e254:	e0bff917 	ldw	r2,-28(fp)
  84e258:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84e25c:	e0bffc17 	ldw	r2,-16(fp)
  84e260:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84e264:	e0bfff17 	ldw	r2,-4(fp)
  84e268:	10000005 	stb	zero,0(r2)
    return (len);
  84e26c:	e0bffa03 	ldbu	r2,-24(fp)
}
  84e270:	e037883a 	mov	sp,fp
  84e274:	dfc00117 	ldw	ra,4(sp)
  84e278:	df000017 	ldw	fp,0(sp)
  84e27c:	dec00204 	addi	sp,sp,8
  84e280:	f800283a 	ret

0084e284 <OSMemNameSet>:
*********************************************************************************************************
*/

#if OS_MEM_NAME_SIZE > 1
void  OSMemNameSet (OS_MEM *pmem, INT8U *pname, INT8U *perr)
{
  84e284:	defff604 	addi	sp,sp,-40
  84e288:	dfc00915 	stw	ra,36(sp)
  84e28c:	df000815 	stw	fp,32(sp)
  84e290:	df000804 	addi	fp,sp,32
  84e294:	e13ffd15 	stw	r4,-12(fp)
  84e298:	e17ffe15 	stw	r5,-8(fp)
  84e29c:	e1bfff15 	stw	r6,-4(fp)
    INT8U      len;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84e2a0:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84e2a4:	e0bfff17 	ldw	r2,-4(fp)
  84e2a8:	10003526 	beq	r2,zero,84e380 <OSMemNameSet+0xfc>
        return;
    }
    if (pmem == (OS_MEM *)0) {                   /* Is 'pmem' a NULL pointer?                          */
  84e2ac:	e0bffd17 	ldw	r2,-12(fp)
  84e2b0:	1000041e 	bne	r2,zero,84e2c4 <OSMemNameSet+0x40>
        *perr = OS_ERR_MEM_INVALID_PMEM;
  84e2b4:	e0bfff17 	ldw	r2,-4(fp)
  84e2b8:	00c01804 	movi	r3,96
  84e2bc:	10c00005 	stb	r3,0(r2)
        return;
  84e2c0:	00003006 	br	84e384 <OSMemNameSet+0x100>
    }
    if (pname == (INT8U *)0) {                   /* Is 'pname' a NULL pointer?                         */
  84e2c4:	e0bffe17 	ldw	r2,-8(fp)
  84e2c8:	1000041e 	bne	r2,zero,84e2dc <OSMemNameSet+0x58>
        *perr = OS_ERR_PNAME_NULL;
  84e2cc:	e0bfff17 	ldw	r2,-4(fp)
  84e2d0:	00c00304 	movi	r3,12
  84e2d4:	10c00005 	stb	r3,0(r2)
        return;
  84e2d8:	00002a06 	br	84e384 <OSMemNameSet+0x100>
    }
#endif
    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  84e2dc:	d0a0b103 	ldbu	r2,-32060(gp)
  84e2e0:	10803fcc 	andi	r2,r2,255
  84e2e4:	10000426 	beq	r2,zero,84e2f8 <OSMemNameSet+0x74>
        *perr = OS_ERR_NAME_SET_ISR;
  84e2e8:	e0bfff17 	ldw	r2,-4(fp)
  84e2ec:	00c00484 	movi	r3,18
  84e2f0:	10c00005 	stb	r3,0(r2)
        return;
  84e2f4:	00002306 	br	84e384 <OSMemNameSet+0x100>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e2f8:	0005303a 	rdctl	r2,status
  84e2fc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e300:	e0fffc17 	ldw	r3,-16(fp)
  84e304:	00bfff84 	movi	r2,-2
  84e308:	1884703a 	and	r2,r3,r2
  84e30c:	1001703a 	wrctl	status,r2
  
  return context;
  84e310:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84e314:	e0bff815 	stw	r2,-32(fp)
    len = OS_StrLen(pname);                      /* Can we fit the string in the storage area?         */
  84e318:	e13ffe17 	ldw	r4,-8(fp)
  84e31c:	084c1100 	call	84c110 <OS_StrLen>
  84e320:	e0bffa05 	stb	r2,-24(fp)
    if (len > (OS_MEM_NAME_SIZE - 1)) {          /* No                                                 */
  84e324:	e0bffa03 	ldbu	r2,-24(fp)
  84e328:	10800830 	cmpltui	r2,r2,32
  84e32c:	1000081e 	bne	r2,zero,84e350 <OSMemNameSet+0xcc>
  84e330:	e0bff817 	ldw	r2,-32(fp)
  84e334:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84e338:	e0bff917 	ldw	r2,-28(fp)
  84e33c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_MEM_NAME_TOO_LONG;
  84e340:	e0bfff17 	ldw	r2,-4(fp)
  84e344:	00c018c4 	movi	r3,99
  84e348:	10c00005 	stb	r3,0(r2)
        return;
  84e34c:	00000d06 	br	84e384 <OSMemNameSet+0x100>
    }
    (void)OS_StrCopy(pmem->OSMemName, pname);    /* Yes, copy name to the memory partition header      */
  84e350:	e0bffd17 	ldw	r2,-12(fp)
  84e354:	10800504 	addi	r2,r2,20
  84e358:	e17ffe17 	ldw	r5,-8(fp)
  84e35c:	1009883a 	mov	r4,r2
  84e360:	084c09c0 	call	84c09c <OS_StrCopy>
  84e364:	e0bff817 	ldw	r2,-32(fp)
  84e368:	e0bffb15 	stw	r2,-20(fp)
  84e36c:	e0bffb17 	ldw	r2,-20(fp)
  84e370:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84e374:	e0bfff17 	ldw	r2,-4(fp)
  84e378:	10000005 	stb	zero,0(r2)
  84e37c:	00000106 	br	84e384 <OSMemNameSet+0x100>



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
        return;
  84e380:	0001883a 	nop
        return;
    }
    (void)OS_StrCopy(pmem->OSMemName, pname);    /* Yes, copy name to the memory partition header      */
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
}
  84e384:	e037883a 	mov	sp,fp
  84e388:	dfc00117 	ldw	ra,4(sp)
  84e38c:	df000017 	ldw	fp,0(sp)
  84e390:	dec00204 	addi	sp,sp,8
  84e394:	f800283a 	ret

0084e398 <OSMemPut>:
*               OS_ERR_MEM_INVALID_PBLK  if you passed a NULL pointer for the block to release.
*********************************************************************************************************
*/

INT8U  OSMemPut (OS_MEM *pmem, void *pblk)
{
  84e398:	defff904 	addi	sp,sp,-28
  84e39c:	df000615 	stw	fp,24(sp)
  84e3a0:	df000604 	addi	fp,sp,24
  84e3a4:	e13ffe15 	stw	r4,-8(fp)
  84e3a8:	e17fff15 	stw	r5,-4(fp)
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84e3ac:	e03ffa15 	stw	zero,-24(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pmem == (OS_MEM *)0) {                   /* Must point to a valid memory partition             */
  84e3b0:	e0bffe17 	ldw	r2,-8(fp)
  84e3b4:	1000021e 	bne	r2,zero,84e3c0 <OSMemPut+0x28>
        return (OS_ERR_MEM_INVALID_PMEM);
  84e3b8:	00801804 	movi	r2,96
  84e3bc:	00002806 	br	84e460 <OSMemPut+0xc8>
    }
    if (pblk == (void *)0) {                     /* Must release a valid block                         */
  84e3c0:	e0bfff17 	ldw	r2,-4(fp)
  84e3c4:	1000021e 	bne	r2,zero,84e3d0 <OSMemPut+0x38>
        return (OS_ERR_MEM_INVALID_PBLK);
  84e3c8:	008017c4 	movi	r2,95
  84e3cc:	00002406 	br	84e460 <OSMemPut+0xc8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e3d0:	0005303a 	rdctl	r2,status
  84e3d4:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e3d8:	e0fffd17 	ldw	r3,-12(fp)
  84e3dc:	00bfff84 	movi	r2,-2
  84e3e0:	1884703a 	and	r2,r3,r2
  84e3e4:	1001703a 	wrctl	status,r2
  
  return context;
  84e3e8:	e0bffd17 	ldw	r2,-12(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  84e3ec:	e0bffa15 	stw	r2,-24(fp)
    if (pmem->OSMemNFree >= pmem->OSMemNBlks) {  /* Make sure all blocks not already returned          */
  84e3f0:	e0bffe17 	ldw	r2,-8(fp)
  84e3f4:	10c00417 	ldw	r3,16(r2)
  84e3f8:	e0bffe17 	ldw	r2,-8(fp)
  84e3fc:	10800317 	ldw	r2,12(r2)
  84e400:	18800636 	bltu	r3,r2,84e41c <OSMemPut+0x84>
  84e404:	e0bffa17 	ldw	r2,-24(fp)
  84e408:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84e40c:	e0bffb17 	ldw	r2,-20(fp)
  84e410:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_MEM_FULL);
  84e414:	00801784 	movi	r2,94
  84e418:	00001106 	br	84e460 <OSMemPut+0xc8>
    }
    *(void **)pblk      = pmem->OSMemFreeList;   /* Insert released block into free block list         */
  84e41c:	e0bffe17 	ldw	r2,-8(fp)
  84e420:	10c00117 	ldw	r3,4(r2)
  84e424:	e0bfff17 	ldw	r2,-4(fp)
  84e428:	10c00015 	stw	r3,0(r2)
    pmem->OSMemFreeList = pblk;
  84e42c:	e0bffe17 	ldw	r2,-8(fp)
  84e430:	e0ffff17 	ldw	r3,-4(fp)
  84e434:	10c00115 	stw	r3,4(r2)
    pmem->OSMemNFree++;                          /* One more memory block in this partition            */
  84e438:	e0bffe17 	ldw	r2,-8(fp)
  84e43c:	10800417 	ldw	r2,16(r2)
  84e440:	10c00044 	addi	r3,r2,1
  84e444:	e0bffe17 	ldw	r2,-8(fp)
  84e448:	10c00415 	stw	r3,16(r2)
  84e44c:	e0bffa17 	ldw	r2,-24(fp)
  84e450:	e0bffc15 	stw	r2,-16(fp)
  84e454:	e0bffc17 	ldw	r2,-16(fp)
  84e458:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);                        /* Notify caller that memory block was released       */
  84e45c:	0005883a 	mov	r2,zero
}
  84e460:	e037883a 	mov	sp,fp
  84e464:	df000017 	ldw	fp,0(sp)
  84e468:	dec00104 	addi	sp,sp,4
  84e46c:	f800283a 	ret

0084e470 <OSMemQuery>:
*********************************************************************************************************
*/

#if OS_MEM_QUERY_EN > 0
INT8U  OSMemQuery (OS_MEM *pmem, OS_MEM_DATA *p_mem_data)
{
  84e470:	defffa04 	addi	sp,sp,-24
  84e474:	df000515 	stw	fp,20(sp)
  84e478:	df000504 	addi	fp,sp,20
  84e47c:	e13ffe15 	stw	r4,-8(fp)
  84e480:	e17fff15 	stw	r5,-4(fp)
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84e484:	e03ffb15 	stw	zero,-20(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pmem == (OS_MEM *)0) {                   /* Must point to a valid memory partition             */
  84e488:	e0bffe17 	ldw	r2,-8(fp)
  84e48c:	1000021e 	bne	r2,zero,84e498 <OSMemQuery+0x28>
        return (OS_ERR_MEM_INVALID_PMEM);
  84e490:	00801804 	movi	r2,96
  84e494:	00002c06 	br	84e548 <OSMemQuery+0xd8>
    }
    if (p_mem_data == (OS_MEM_DATA *)0) {        /* Must release a valid storage area for the data     */
  84e498:	e0bfff17 	ldw	r2,-4(fp)
  84e49c:	1000021e 	bne	r2,zero,84e4a8 <OSMemQuery+0x38>
        return (OS_ERR_MEM_INVALID_PDATA);
  84e4a0:	00801844 	movi	r2,97
  84e4a4:	00002806 	br	84e548 <OSMemQuery+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e4a8:	0005303a 	rdctl	r2,status
  84e4ac:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e4b0:	e0fffc17 	ldw	r3,-16(fp)
  84e4b4:	00bfff84 	movi	r2,-2
  84e4b8:	1884703a 	and	r2,r3,r2
  84e4bc:	1001703a 	wrctl	status,r2
  
  return context;
  84e4c0:	e0bffc17 	ldw	r2,-16(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  84e4c4:	e0bffb15 	stw	r2,-20(fp)
    p_mem_data->OSAddr     = pmem->OSMemAddr;
  84e4c8:	e0bffe17 	ldw	r2,-8(fp)
  84e4cc:	10c00017 	ldw	r3,0(r2)
  84e4d0:	e0bfff17 	ldw	r2,-4(fp)
  84e4d4:	10c00015 	stw	r3,0(r2)
    p_mem_data->OSFreeList = pmem->OSMemFreeList;
  84e4d8:	e0bffe17 	ldw	r2,-8(fp)
  84e4dc:	10c00117 	ldw	r3,4(r2)
  84e4e0:	e0bfff17 	ldw	r2,-4(fp)
  84e4e4:	10c00115 	stw	r3,4(r2)
    p_mem_data->OSBlkSize  = pmem->OSMemBlkSize;
  84e4e8:	e0bffe17 	ldw	r2,-8(fp)
  84e4ec:	10c00217 	ldw	r3,8(r2)
  84e4f0:	e0bfff17 	ldw	r2,-4(fp)
  84e4f4:	10c00215 	stw	r3,8(r2)
    p_mem_data->OSNBlks    = pmem->OSMemNBlks;
  84e4f8:	e0bffe17 	ldw	r2,-8(fp)
  84e4fc:	10c00317 	ldw	r3,12(r2)
  84e500:	e0bfff17 	ldw	r2,-4(fp)
  84e504:	10c00315 	stw	r3,12(r2)
    p_mem_data->OSNFree    = pmem->OSMemNFree;
  84e508:	e0bffe17 	ldw	r2,-8(fp)
  84e50c:	10c00417 	ldw	r3,16(r2)
  84e510:	e0bfff17 	ldw	r2,-4(fp)
  84e514:	10c00415 	stw	r3,16(r2)
  84e518:	e0bffb17 	ldw	r2,-20(fp)
  84e51c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84e520:	e0bffd17 	ldw	r2,-12(fp)
  84e524:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    p_mem_data->OSNUsed    = p_mem_data->OSNBlks - p_mem_data->OSNFree;
  84e528:	e0bfff17 	ldw	r2,-4(fp)
  84e52c:	10c00317 	ldw	r3,12(r2)
  84e530:	e0bfff17 	ldw	r2,-4(fp)
  84e534:	10800417 	ldw	r2,16(r2)
  84e538:	1887c83a 	sub	r3,r3,r2
  84e53c:	e0bfff17 	ldw	r2,-4(fp)
  84e540:	10c00515 	stw	r3,20(r2)
    return (OS_ERR_NONE);
  84e544:	0005883a 	mov	r2,zero
}
  84e548:	e037883a 	mov	sp,fp
  84e54c:	df000017 	ldw	fp,0(sp)
  84e550:	dec00104 	addi	sp,sp,4
  84e554:	f800283a 	ret

0084e558 <OS_MemInit>:
* Note(s)    : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/

void  OS_MemInit (void)
{
  84e558:	defffc04 	addi	sp,sp,-16
  84e55c:	dfc00315 	stw	ra,12(sp)
  84e560:	df000215 	stw	fp,8(sp)
  84e564:	df000204 	addi	fp,sp,8
#if OS_MAX_MEM_PART >= 2
    OS_MEM  *pmem;
    INT16U   i;


    OS_MemClr((INT8U *)&OSMemTbl[0], sizeof(OSMemTbl));   /* Clear the memory partition table          */
  84e568:	01430c04 	movi	r5,3120
  84e56c:	010021b4 	movhi	r4,134
  84e570:	21096b04 	addi	r4,r4,9644
  84e574:	084be9c0 	call	84be9c <OS_MemClr>
    pmem = &OSMemTbl[0];                                  /* Point to memory control block (MCB)       */
  84e578:	008021b4 	movhi	r2,134
  84e57c:	10896b04 	addi	r2,r2,9644
  84e580:	e0bffe15 	stw	r2,-8(fp)
    for (i = 0; i < (OS_MAX_MEM_PART - 1); i++) {         /* Init. list of free memory partitions      */
  84e584:	e03fff0d 	sth	zero,-4(fp)
  84e588:	00001606 	br	84e5e4 <OS_MemInit+0x8c>
        pmem->OSMemFreeList = (void *)&OSMemTbl[i+1];     /* Chain list of free partitions             */
  84e58c:	e0bfff0b 	ldhu	r2,-4(fp)
  84e590:	10800044 	addi	r2,r2,1
  84e594:	01400d04 	movi	r5,52
  84e598:	1009883a 	mov	r4,r2
  84e59c:	08305040 	call	830504 <__mulsi3>
  84e5a0:	1007883a 	mov	r3,r2
  84e5a4:	008021b4 	movhi	r2,134
  84e5a8:	10896b04 	addi	r2,r2,9644
  84e5ac:	1887883a 	add	r3,r3,r2
  84e5b0:	e0bffe17 	ldw	r2,-8(fp)
  84e5b4:	10c00115 	stw	r3,4(r2)
#if OS_MEM_NAME_SIZE > 1
        pmem->OSMemName[0]  = '?';                        /* Unknown name                              */
  84e5b8:	e0bffe17 	ldw	r2,-8(fp)
  84e5bc:	00c00fc4 	movi	r3,63
  84e5c0:	10c00505 	stb	r3,20(r2)
        pmem->OSMemName[1]  = OS_ASCII_NUL;
  84e5c4:	e0bffe17 	ldw	r2,-8(fp)
  84e5c8:	10000545 	stb	zero,21(r2)
#endif
        pmem++;
  84e5cc:	e0bffe17 	ldw	r2,-8(fp)
  84e5d0:	10800d04 	addi	r2,r2,52
  84e5d4:	e0bffe15 	stw	r2,-8(fp)
    INT16U   i;


    OS_MemClr((INT8U *)&OSMemTbl[0], sizeof(OSMemTbl));   /* Clear the memory partition table          */
    pmem = &OSMemTbl[0];                                  /* Point to memory control block (MCB)       */
    for (i = 0; i < (OS_MAX_MEM_PART - 1); i++) {         /* Init. list of free memory partitions      */
  84e5d8:	e0bfff0b 	ldhu	r2,-4(fp)
  84e5dc:	10800044 	addi	r2,r2,1
  84e5e0:	e0bfff0d 	sth	r2,-4(fp)
  84e5e4:	e0bfff0b 	ldhu	r2,-4(fp)
  84e5e8:	10800ef0 	cmpltui	r2,r2,59
  84e5ec:	103fe71e 	bne	r2,zero,84e58c <__alt_mem_epcs_flash_controller_0+0xff84558c>
        pmem->OSMemName[0]  = '?';                        /* Unknown name                              */
        pmem->OSMemName[1]  = OS_ASCII_NUL;
#endif
        pmem++;
    }
    pmem->OSMemFreeList = (void *)0;                      /* Initialize last node                      */
  84e5f0:	e0bffe17 	ldw	r2,-8(fp)
  84e5f4:	10000115 	stw	zero,4(r2)
#if OS_MEM_NAME_SIZE > 1
    pmem->OSMemName[0]  = '?';                            /* Unknown name                              */
  84e5f8:	e0bffe17 	ldw	r2,-8(fp)
  84e5fc:	00c00fc4 	movi	r3,63
  84e600:	10c00505 	stb	r3,20(r2)
    pmem->OSMemName[1]  = OS_ASCII_NUL;
  84e604:	e0bffe17 	ldw	r2,-8(fp)
  84e608:	10000545 	stb	zero,21(r2)
#endif

    OSMemFreeList       = &OSMemTbl[0];                   /* Point to beginning of free list           */
  84e60c:	008021b4 	movhi	r2,134
  84e610:	10896b04 	addi	r2,r2,9644
  84e614:	d0a0ac15 	stw	r2,-32080(gp)
#endif
}
  84e618:	0001883a 	nop
  84e61c:	e037883a 	mov	sp,fp
  84e620:	dfc00117 	ldw	ra,4(sp)
  84e624:	df000017 	ldw	fp,0(sp)
  84e628:	dec00204 	addi	sp,sp,8
  84e62c:	f800283a 	ret

0084e630 <OSQAccept>:
*********************************************************************************************************
*/

#if OS_Q_ACCEPT_EN > 0
void  *OSQAccept (OS_EVENT *pevent, INT8U *perr)
{
  84e630:	defff804 	addi	sp,sp,-32
  84e634:	df000715 	stw	fp,28(sp)
  84e638:	df000704 	addi	fp,sp,28
  84e63c:	e13ffe15 	stw	r4,-8(fp)
  84e640:	e17fff15 	stw	r5,-4(fp)
    void      *pmsg;
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84e644:	e03ffa15 	stw	zero,-24(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84e648:	e0bfff17 	ldw	r2,-4(fp)
  84e64c:	1000021e 	bne	r2,zero,84e658 <OSQAccept+0x28>
        return ((void *)0);
  84e650:	0005883a 	mov	r2,zero
  84e654:	00004206 	br	84e760 <OSQAccept+0x130>
    }
    if (pevent == (OS_EVENT *)0) {               /* Validate 'pevent'                                  */
  84e658:	e0bffe17 	ldw	r2,-8(fp)
  84e65c:	1000051e 	bne	r2,zero,84e674 <OSQAccept+0x44>
        *perr = OS_ERR_PEVENT_NULL;
  84e660:	e0bfff17 	ldw	r2,-4(fp)
  84e664:	00c00104 	movi	r3,4
  84e668:	10c00005 	stb	r3,0(r2)
        return ((void *)0);
  84e66c:	0005883a 	mov	r2,zero
  84e670:	00003b06 	br	84e760 <OSQAccept+0x130>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {/* Validate event block type                          */
  84e674:	e0bffe17 	ldw	r2,-8(fp)
  84e678:	10800003 	ldbu	r2,0(r2)
  84e67c:	10803fcc 	andi	r2,r2,255
  84e680:	108000a0 	cmpeqi	r2,r2,2
  84e684:	1000051e 	bne	r2,zero,84e69c <OSQAccept+0x6c>
        *perr = OS_ERR_EVENT_TYPE;
  84e688:	e0bfff17 	ldw	r2,-4(fp)
  84e68c:	00c00044 	movi	r3,1
  84e690:	10c00005 	stb	r3,0(r2)
        return ((void *)0);
  84e694:	0005883a 	mov	r2,zero
  84e698:	00003106 	br	84e760 <OSQAccept+0x130>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e69c:	0005303a 	rdctl	r2,status
  84e6a0:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e6a4:	e0fffd17 	ldw	r3,-12(fp)
  84e6a8:	00bfff84 	movi	r2,-2
  84e6ac:	1884703a 	and	r2,r3,r2
  84e6b0:	1001703a 	wrctl	status,r2
  
  return context;
  84e6b4:	e0bffd17 	ldw	r2,-12(fp)
    }
    OS_ENTER_CRITICAL();
  84e6b8:	e0bffa15 	stw	r2,-24(fp)
    pq = (OS_Q *)pevent->OSEventPtr;             /* Point at queue control block                       */
  84e6bc:	e0bffe17 	ldw	r2,-8(fp)
  84e6c0:	10800117 	ldw	r2,4(r2)
  84e6c4:	e0bffc15 	stw	r2,-16(fp)
    if (pq->OSQEntries > 0) {                    /* See if any messages in the queue                   */
  84e6c8:	e0bffc17 	ldw	r2,-16(fp)
  84e6cc:	1080058b 	ldhu	r2,22(r2)
  84e6d0:	10bfffcc 	andi	r2,r2,65535
  84e6d4:	10001926 	beq	r2,zero,84e73c <OSQAccept+0x10c>
        pmsg = *pq->OSQOut++;                    /* Yes, extract oldest message from the queue         */
  84e6d8:	e0bffc17 	ldw	r2,-16(fp)
  84e6dc:	10800417 	ldw	r2,16(r2)
  84e6e0:	11000104 	addi	r4,r2,4
  84e6e4:	e0fffc17 	ldw	r3,-16(fp)
  84e6e8:	19000415 	stw	r4,16(r3)
  84e6ec:	10800017 	ldw	r2,0(r2)
  84e6f0:	e0bff915 	stw	r2,-28(fp)
        pq->OSQEntries--;                        /* Update the number of entries in the queue          */
  84e6f4:	e0bffc17 	ldw	r2,-16(fp)
  84e6f8:	1080058b 	ldhu	r2,22(r2)
  84e6fc:	10bfffc4 	addi	r2,r2,-1
  84e700:	1007883a 	mov	r3,r2
  84e704:	e0bffc17 	ldw	r2,-16(fp)
  84e708:	10c0058d 	sth	r3,22(r2)
        if (pq->OSQOut == pq->OSQEnd) {          /* Wrap OUT pointer if we are at the end of the queue */
  84e70c:	e0bffc17 	ldw	r2,-16(fp)
  84e710:	10c00417 	ldw	r3,16(r2)
  84e714:	e0bffc17 	ldw	r2,-16(fp)
  84e718:	10800217 	ldw	r2,8(r2)
  84e71c:	1880041e 	bne	r3,r2,84e730 <OSQAccept+0x100>
            pq->OSQOut = pq->OSQStart;
  84e720:	e0bffc17 	ldw	r2,-16(fp)
  84e724:	10c00117 	ldw	r3,4(r2)
  84e728:	e0bffc17 	ldw	r2,-16(fp)
  84e72c:	10c00415 	stw	r3,16(r2)
        }
        *perr = OS_ERR_NONE;
  84e730:	e0bfff17 	ldw	r2,-4(fp)
  84e734:	10000005 	stb	zero,0(r2)
  84e738:	00000406 	br	84e74c <OSQAccept+0x11c>
    } else {
        *perr = OS_ERR_Q_EMPTY;
  84e73c:	e0bfff17 	ldw	r2,-4(fp)
  84e740:	00c007c4 	movi	r3,31
  84e744:	10c00005 	stb	r3,0(r2)
        pmsg  = (void *)0;                       /* Queue is empty                                     */
  84e748:	e03ff915 	stw	zero,-28(fp)
  84e74c:	e0bffa17 	ldw	r2,-24(fp)
  84e750:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84e754:	e0bffb17 	ldw	r2,-20(fp)
  84e758:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    return (pmsg);                               /* Return message received (or NULL)                  */
  84e75c:	e0bff917 	ldw	r2,-28(fp)
}
  84e760:	e037883a 	mov	sp,fp
  84e764:	df000017 	ldw	fp,0(sp)
  84e768:	dec00104 	addi	sp,sp,4
  84e76c:	f800283a 	ret

0084e770 <OSQCreate>:
*              == (OS_EVENT *)0  if no event control blocks were available or an error was detected
*********************************************************************************************************
*/

OS_EVENT  *OSQCreate (void **start, INT16U size)
{
  84e770:	defff404 	addi	sp,sp,-48
  84e774:	dfc00b15 	stw	ra,44(sp)
  84e778:	df000a15 	stw	fp,40(sp)
  84e77c:	df000a04 	addi	fp,sp,40
  84e780:	e13ffe15 	stw	r4,-8(fp)
  84e784:	2805883a 	mov	r2,r5
  84e788:	e0bfff0d 	sth	r2,-4(fp)
    OS_EVENT  *pevent;
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84e78c:	e03ff715 	stw	zero,-36(fp)
#endif



    if (OSIntNesting > 0) {                      /* See if called from ISR ...                         */
  84e790:	d0a0b103 	ldbu	r2,-32060(gp)
  84e794:	10803fcc 	andi	r2,r2,255
  84e798:	10000226 	beq	r2,zero,84e7a4 <OSQCreate+0x34>
        return ((OS_EVENT *)0);                  /* ... can't CREATE from an ISR                       */
  84e79c:	0005883a 	mov	r2,zero
  84e7a0:	00005906 	br	84e908 <OSQCreate+0x198>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e7a4:	0005303a 	rdctl	r2,status
  84e7a8:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e7ac:	e0fffd17 	ldw	r3,-12(fp)
  84e7b0:	00bfff84 	movi	r2,-2
  84e7b4:	1884703a 	and	r2,r3,r2
  84e7b8:	1001703a 	wrctl	status,r2
  
  return context;
  84e7bc:	e0bffd17 	ldw	r2,-12(fp)
    }
    OS_ENTER_CRITICAL();
  84e7c0:	e0bff715 	stw	r2,-36(fp)
    pevent = OSEventFreeList;                    /* Get next free event control block                  */
  84e7c4:	d0a0b017 	ldw	r2,-32064(gp)
  84e7c8:	e0bff615 	stw	r2,-40(fp)
    if (OSEventFreeList != (OS_EVENT *)0) {      /* See if pool of free ECB pool was empty             */
  84e7cc:	d0a0b017 	ldw	r2,-32064(gp)
  84e7d0:	10000326 	beq	r2,zero,84e7e0 <OSQCreate+0x70>
        OSEventFreeList = (OS_EVENT *)OSEventFreeList->OSEventPtr;
  84e7d4:	d0a0b017 	ldw	r2,-32064(gp)
  84e7d8:	10800117 	ldw	r2,4(r2)
  84e7dc:	d0a0b015 	stw	r2,-32064(gp)
  84e7e0:	e0bff717 	ldw	r2,-36(fp)
  84e7e4:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84e7e8:	e0bff817 	ldw	r2,-32(fp)
  84e7ec:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    if (pevent != (OS_EVENT *)0) {               /* See if we have an event control block              */
  84e7f0:	e0bff617 	ldw	r2,-40(fp)
  84e7f4:	10004326 	beq	r2,zero,84e904 <OSQCreate+0x194>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e7f8:	0005303a 	rdctl	r2,status
  84e7fc:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e800:	e0fff917 	ldw	r3,-28(fp)
  84e804:	00bfff84 	movi	r2,-2
  84e808:	1884703a 	and	r2,r3,r2
  84e80c:	1001703a 	wrctl	status,r2
  
  return context;
  84e810:	e0bff917 	ldw	r2,-28(fp)
        OS_ENTER_CRITICAL();
  84e814:	e0bff715 	stw	r2,-36(fp)
        pq = OSQFreeList;                        /* Get a free queue control block                     */
  84e818:	d0a0ae17 	ldw	r2,-32072(gp)
  84e81c:	e0bffb15 	stw	r2,-20(fp)
        if (pq != (OS_Q *)0) {                   /* Were we able to get a queue control block ?        */
  84e820:	e0bffb17 	ldw	r2,-20(fp)
  84e824:	10002d26 	beq	r2,zero,84e8dc <OSQCreate+0x16c>
            OSQFreeList            = OSQFreeList->OSQPtr; /* Yes, Adjust free list pointer to next free*/
  84e828:	d0a0ae17 	ldw	r2,-32072(gp)
  84e82c:	10800017 	ldw	r2,0(r2)
  84e830:	d0a0ae15 	stw	r2,-32072(gp)
  84e834:	e0bff717 	ldw	r2,-36(fp)
  84e838:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84e83c:	e0bffa17 	ldw	r2,-24(fp)
  84e840:	1001703a 	wrctl	status,r2
            OS_EXIT_CRITICAL();
            pq->OSQStart           = start;               /*      Initialize the queue                 */
  84e844:	e0bffb17 	ldw	r2,-20(fp)
  84e848:	e0fffe17 	ldw	r3,-8(fp)
  84e84c:	10c00115 	stw	r3,4(r2)
            pq->OSQEnd             = &start[size];
  84e850:	e0bfff0b 	ldhu	r2,-4(fp)
  84e854:	1085883a 	add	r2,r2,r2
  84e858:	1085883a 	add	r2,r2,r2
  84e85c:	1007883a 	mov	r3,r2
  84e860:	e0bffe17 	ldw	r2,-8(fp)
  84e864:	10c7883a 	add	r3,r2,r3
  84e868:	e0bffb17 	ldw	r2,-20(fp)
  84e86c:	10c00215 	stw	r3,8(r2)
            pq->OSQIn              = start;
  84e870:	e0bffb17 	ldw	r2,-20(fp)
  84e874:	e0fffe17 	ldw	r3,-8(fp)
  84e878:	10c00315 	stw	r3,12(r2)
            pq->OSQOut             = start;
  84e87c:	e0bffb17 	ldw	r2,-20(fp)
  84e880:	e0fffe17 	ldw	r3,-8(fp)
  84e884:	10c00415 	stw	r3,16(r2)
            pq->OSQSize            = size;
  84e888:	e0bffb17 	ldw	r2,-20(fp)
  84e88c:	e0ffff0b 	ldhu	r3,-4(fp)
  84e890:	10c0050d 	sth	r3,20(r2)
            pq->OSQEntries         = 0;
  84e894:	e0bffb17 	ldw	r2,-20(fp)
  84e898:	1000058d 	sth	zero,22(r2)
            pevent->OSEventType    = OS_EVENT_TYPE_Q;
  84e89c:	e0bff617 	ldw	r2,-40(fp)
  84e8a0:	00c00084 	movi	r3,2
  84e8a4:	10c00005 	stb	r3,0(r2)
            pevent->OSEventCnt     = 0;
  84e8a8:	e0bff617 	ldw	r2,-40(fp)
  84e8ac:	1000020d 	sth	zero,8(r2)
            pevent->OSEventPtr     = pq;
  84e8b0:	e0bff617 	ldw	r2,-40(fp)
  84e8b4:	e0fffb17 	ldw	r3,-20(fp)
  84e8b8:	10c00115 	stw	r3,4(r2)
#if OS_EVENT_NAME_SIZE > 1
            pevent->OSEventName[0] = '?';                  /* Unknown name                             */
  84e8bc:	e0bff617 	ldw	r2,-40(fp)
  84e8c0:	00c00fc4 	movi	r3,63
  84e8c4:	10c00385 	stb	r3,14(r2)
            pevent->OSEventName[1] = OS_ASCII_NUL;
  84e8c8:	e0bff617 	ldw	r2,-40(fp)
  84e8cc:	100003c5 	stb	zero,15(r2)
#endif
            OS_EventWaitListInit(pevent);                 /*      Initalize the wait list              */
  84e8d0:	e13ff617 	ldw	r4,-40(fp)
  84e8d4:	084babc0 	call	84babc <OS_EventWaitListInit>
  84e8d8:	00000a06 	br	84e904 <OSQCreate+0x194>
        } else {
            pevent->OSEventPtr = (void *)OSEventFreeList; /* No,  Return event control block on error  */
  84e8dc:	d0e0b017 	ldw	r3,-32064(gp)
  84e8e0:	e0bff617 	ldw	r2,-40(fp)
  84e8e4:	10c00115 	stw	r3,4(r2)
            OSEventFreeList    = pevent;
  84e8e8:	e0bff617 	ldw	r2,-40(fp)
  84e8ec:	d0a0b015 	stw	r2,-32064(gp)
  84e8f0:	e0bff717 	ldw	r2,-36(fp)
  84e8f4:	e0bffc15 	stw	r2,-16(fp)
  84e8f8:	e0bffc17 	ldw	r2,-16(fp)
  84e8fc:	1001703a 	wrctl	status,r2
            OS_EXIT_CRITICAL();
            pevent = (OS_EVENT *)0;
  84e900:	e03ff615 	stw	zero,-40(fp)
        }
    }
    return (pevent);
  84e904:	e0bff617 	ldw	r2,-40(fp)
}
  84e908:	e037883a 	mov	sp,fp
  84e90c:	dfc00117 	ldw	ra,4(sp)
  84e910:	df000017 	ldw	fp,0(sp)
  84e914:	dec00204 	addi	sp,sp,8
  84e918:	f800283a 	ret

0084e91c <OSQDel>:
*********************************************************************************************************
*/

#if OS_Q_DEL_EN > 0
OS_EVENT  *OSQDel (OS_EVENT *pevent, INT8U opt, INT8U *perr)
{
  84e91c:	defff204 	addi	sp,sp,-56
  84e920:	dfc00d15 	stw	ra,52(sp)
  84e924:	df000c15 	stw	fp,48(sp)
  84e928:	df000c04 	addi	fp,sp,48
  84e92c:	e13ffd15 	stw	r4,-12(fp)
  84e930:	2805883a 	mov	r2,r5
  84e934:	e1bfff15 	stw	r6,-4(fp)
  84e938:	e0bffe05 	stb	r2,-8(fp)
    BOOLEAN    tasks_waiting;
    OS_EVENT  *pevent_return;
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  84e93c:	e03ff615 	stw	zero,-40(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                              /* Validate 'perr'                          */
  84e940:	e0bfff17 	ldw	r2,-4(fp)
  84e944:	1000021e 	bne	r2,zero,84e950 <OSQDel+0x34>
        return (pevent);
  84e948:	e0bffd17 	ldw	r2,-12(fp)
  84e94c:	00008e06 	br	84eb88 <OSQDel+0x26c>
    }
    if (pevent == (OS_EVENT *)0) {                         /* Validate 'pevent'                        */
  84e950:	e0bffd17 	ldw	r2,-12(fp)
  84e954:	1000051e 	bne	r2,zero,84e96c <OSQDel+0x50>
        *perr = OS_ERR_PEVENT_NULL;
  84e958:	e0bfff17 	ldw	r2,-4(fp)
  84e95c:	00c00104 	movi	r3,4
  84e960:	10c00005 	stb	r3,0(r2)
        return (pevent);
  84e964:	e0bffd17 	ldw	r2,-12(fp)
  84e968:	00008706 	br	84eb88 <OSQDel+0x26c>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {          /* Validate event block type                */
  84e96c:	e0bffd17 	ldw	r2,-12(fp)
  84e970:	10800003 	ldbu	r2,0(r2)
  84e974:	10803fcc 	andi	r2,r2,255
  84e978:	108000a0 	cmpeqi	r2,r2,2
  84e97c:	1000051e 	bne	r2,zero,84e994 <OSQDel+0x78>
        *perr = OS_ERR_EVENT_TYPE;
  84e980:	e0bfff17 	ldw	r2,-4(fp)
  84e984:	00c00044 	movi	r3,1
  84e988:	10c00005 	stb	r3,0(r2)
        return (pevent);
  84e98c:	e0bffd17 	ldw	r2,-12(fp)
  84e990:	00007d06 	br	84eb88 <OSQDel+0x26c>
    }
    if (OSIntNesting > 0) {                                /* See if called from ISR ...               */
  84e994:	d0a0b103 	ldbu	r2,-32060(gp)
  84e998:	10803fcc 	andi	r2,r2,255
  84e99c:	10000526 	beq	r2,zero,84e9b4 <OSQDel+0x98>
        *perr = OS_ERR_DEL_ISR;                            /* ... can't DELETE from an ISR             */
  84e9a0:	e0bfff17 	ldw	r2,-4(fp)
  84e9a4:	00c003c4 	movi	r3,15
  84e9a8:	10c00005 	stb	r3,0(r2)
        return (pevent);
  84e9ac:	e0bffd17 	ldw	r2,-12(fp)
  84e9b0:	00007506 	br	84eb88 <OSQDel+0x26c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84e9b4:	0005303a 	rdctl	r2,status
  84e9b8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84e9bc:	e0fffc17 	ldw	r3,-16(fp)
  84e9c0:	00bfff84 	movi	r2,-2
  84e9c4:	1884703a 	and	r2,r3,r2
  84e9c8:	1001703a 	wrctl	status,r2
  
  return context;
  84e9cc:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84e9d0:	e0bff615 	stw	r2,-40(fp)
    if (pevent->OSEventGrp != 0) {                         /* See if any tasks waiting on queue        */
  84e9d4:	e0bffd17 	ldw	r2,-12(fp)
  84e9d8:	10800283 	ldbu	r2,10(r2)
  84e9dc:	10803fcc 	andi	r2,r2,255
  84e9e0:	10000326 	beq	r2,zero,84e9f0 <OSQDel+0xd4>
        tasks_waiting = OS_TRUE;                           /* Yes                                      */
  84e9e4:	00800044 	movi	r2,1
  84e9e8:	e0bff405 	stb	r2,-48(fp)
  84e9ec:	00000106 	br	84e9f4 <OSQDel+0xd8>
    } else {
        tasks_waiting = OS_FALSE;                          /* No                                       */
  84e9f0:	e03ff405 	stb	zero,-48(fp)
    }
    switch (opt) {
  84e9f4:	e0bffe03 	ldbu	r2,-8(fp)
  84e9f8:	10000326 	beq	r2,zero,84ea08 <OSQDel+0xec>
  84e9fc:	10800060 	cmpeqi	r2,r2,1
  84ea00:	1000301e 	bne	r2,zero,84eac4 <OSQDel+0x1a8>
  84ea04:	00005506 	br	84eb5c <OSQDel+0x240>
        case OS_DEL_NO_PEND:                               /* Delete queue only if no task waiting     */
             if (tasks_waiting == OS_FALSE) {
  84ea08:	e0bff403 	ldbu	r2,-48(fp)
  84ea0c:	10001e1e 	bne	r2,zero,84ea88 <OSQDel+0x16c>
#if OS_EVENT_NAME_SIZE > 1
                 pevent->OSEventName[0] = '?';             /* Unknown name                             */
  84ea10:	e0bffd17 	ldw	r2,-12(fp)
  84ea14:	00c00fc4 	movi	r3,63
  84ea18:	10c00385 	stb	r3,14(r2)
                 pevent->OSEventName[1] = OS_ASCII_NUL;
  84ea1c:	e0bffd17 	ldw	r2,-12(fp)
  84ea20:	100003c5 	stb	zero,15(r2)
#endif
                 pq                     = (OS_Q *)pevent->OSEventPtr;  /* Return OS_Q to free list     */
  84ea24:	e0bffd17 	ldw	r2,-12(fp)
  84ea28:	10800117 	ldw	r2,4(r2)
  84ea2c:	e0bff815 	stw	r2,-32(fp)
                 pq->OSQPtr             = OSQFreeList;
  84ea30:	d0e0ae17 	ldw	r3,-32072(gp)
  84ea34:	e0bff817 	ldw	r2,-32(fp)
  84ea38:	10c00015 	stw	r3,0(r2)
                 OSQFreeList            = pq;
  84ea3c:	e0bff817 	ldw	r2,-32(fp)
  84ea40:	d0a0ae15 	stw	r2,-32072(gp)
                 pevent->OSEventType    = OS_EVENT_TYPE_UNUSED;
  84ea44:	e0bffd17 	ldw	r2,-12(fp)
  84ea48:	10000005 	stb	zero,0(r2)
                 pevent->OSEventPtr     = OSEventFreeList; /* Return Event Control Block to free list  */
  84ea4c:	d0e0b017 	ldw	r3,-32064(gp)
  84ea50:	e0bffd17 	ldw	r2,-12(fp)
  84ea54:	10c00115 	stw	r3,4(r2)
                 pevent->OSEventCnt     = 0;
  84ea58:	e0bffd17 	ldw	r2,-12(fp)
  84ea5c:	1000020d 	sth	zero,8(r2)
                 OSEventFreeList        = pevent;          /* Get next free event control block        */
  84ea60:	e0bffd17 	ldw	r2,-12(fp)
  84ea64:	d0a0b015 	stw	r2,-32064(gp)
  84ea68:	e0bff617 	ldw	r2,-40(fp)
  84ea6c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84ea70:	e0bff717 	ldw	r2,-36(fp)
  84ea74:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_NONE;
  84ea78:	e0bfff17 	ldw	r2,-4(fp)
  84ea7c:	10000005 	stb	zero,0(r2)
                 pevent_return          = (OS_EVENT *)0;   /* Queue has been deleted                   */
  84ea80:	e03ff515 	stw	zero,-44(fp)
             } else {
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_TASK_WAITING;
                 pevent_return          = pevent;
             }
             break;
  84ea84:	00003f06 	br	84eb84 <OSQDel+0x268>
  84ea88:	e0bff617 	ldw	r2,-40(fp)
  84ea8c:	e0bff915 	stw	r2,-28(fp)
  84ea90:	e0bff917 	ldw	r2,-28(fp)
  84ea94:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_NONE;
                 pevent_return          = (OS_EVENT *)0;   /* Queue has been deleted                   */
             } else {
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_TASK_WAITING;
  84ea98:	e0bfff17 	ldw	r2,-4(fp)
  84ea9c:	00c01244 	movi	r3,73
  84eaa0:	10c00005 	stb	r3,0(r2)
                 pevent_return          = pevent;
  84eaa4:	e0bffd17 	ldw	r2,-12(fp)
  84eaa8:	e0bff515 	stw	r2,-44(fp)
             }
             break;
  84eaac:	00003506 	br	84eb84 <OSQDel+0x268>

        case OS_DEL_ALWAYS:                                /* Always delete the queue                  */
             while (pevent->OSEventGrp != 0) {             /* Ready ALL tasks waiting for queue        */
                 (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_Q, OS_STAT_PEND_OK);
  84eab0:	000f883a 	mov	r7,zero
  84eab4:	01800104 	movi	r6,4
  84eab8:	000b883a 	mov	r5,zero
  84eabc:	e13ffd17 	ldw	r4,-12(fp)
  84eac0:	084b50c0 	call	84b50c <OS_EventTaskRdy>
                 pevent_return          = pevent;
             }
             break;

        case OS_DEL_ALWAYS:                                /* Always delete the queue                  */
             while (pevent->OSEventGrp != 0) {             /* Ready ALL tasks waiting for queue        */
  84eac4:	e0bffd17 	ldw	r2,-12(fp)
  84eac8:	10800283 	ldbu	r2,10(r2)
  84eacc:	10803fcc 	andi	r2,r2,255
  84ead0:	103ff71e 	bne	r2,zero,84eab0 <__alt_mem_epcs_flash_controller_0+0xff845ab0>
                 (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_Q, OS_STAT_PEND_OK);
             }
#if OS_EVENT_NAME_SIZE > 1
             pevent->OSEventName[0] = '?';                 /* Unknown name                             */
  84ead4:	e0bffd17 	ldw	r2,-12(fp)
  84ead8:	00c00fc4 	movi	r3,63
  84eadc:	10c00385 	stb	r3,14(r2)
             pevent->OSEventName[1] = OS_ASCII_NUL;
  84eae0:	e0bffd17 	ldw	r2,-12(fp)
  84eae4:	100003c5 	stb	zero,15(r2)
#endif
             pq                     = (OS_Q *)pevent->OSEventPtr;   /* Return OS_Q to free list        */
  84eae8:	e0bffd17 	ldw	r2,-12(fp)
  84eaec:	10800117 	ldw	r2,4(r2)
  84eaf0:	e0bff815 	stw	r2,-32(fp)
             pq->OSQPtr             = OSQFreeList;
  84eaf4:	d0e0ae17 	ldw	r3,-32072(gp)
  84eaf8:	e0bff817 	ldw	r2,-32(fp)
  84eafc:	10c00015 	stw	r3,0(r2)
             OSQFreeList            = pq;
  84eb00:	e0bff817 	ldw	r2,-32(fp)
  84eb04:	d0a0ae15 	stw	r2,-32072(gp)
             pevent->OSEventType    = OS_EVENT_TYPE_UNUSED;
  84eb08:	e0bffd17 	ldw	r2,-12(fp)
  84eb0c:	10000005 	stb	zero,0(r2)
             pevent->OSEventPtr     = OSEventFreeList;     /* Return Event Control Block to free list  */
  84eb10:	d0e0b017 	ldw	r3,-32064(gp)
  84eb14:	e0bffd17 	ldw	r2,-12(fp)
  84eb18:	10c00115 	stw	r3,4(r2)
             pevent->OSEventCnt     = 0;
  84eb1c:	e0bffd17 	ldw	r2,-12(fp)
  84eb20:	1000020d 	sth	zero,8(r2)
             OSEventFreeList        = pevent;              /* Get next free event control block        */
  84eb24:	e0bffd17 	ldw	r2,-12(fp)
  84eb28:	d0a0b015 	stw	r2,-32064(gp)
  84eb2c:	e0bff617 	ldw	r2,-40(fp)
  84eb30:	e0bffa15 	stw	r2,-24(fp)
  84eb34:	e0bffa17 	ldw	r2,-24(fp)
  84eb38:	1001703a 	wrctl	status,r2
             OS_EXIT_CRITICAL();
             if (tasks_waiting == OS_TRUE) {               /* Reschedule only if task(s) were waiting  */
  84eb3c:	e0bff403 	ldbu	r2,-48(fp)
  84eb40:	10800058 	cmpnei	r2,r2,1
  84eb44:	1000011e 	bne	r2,zero,84eb4c <OSQDel+0x230>
                 OS_Sched();                               /* Find highest priority task ready to run  */
  84eb48:	084bf580 	call	84bf58 <OS_Sched>
             }
             *perr                  = OS_ERR_NONE;
  84eb4c:	e0bfff17 	ldw	r2,-4(fp)
  84eb50:	10000005 	stb	zero,0(r2)
             pevent_return          = (OS_EVENT *)0;       /* Queue has been deleted                   */
  84eb54:	e03ff515 	stw	zero,-44(fp)
             break;
  84eb58:	00000a06 	br	84eb84 <OSQDel+0x268>
  84eb5c:	e0bff617 	ldw	r2,-40(fp)
  84eb60:	e0bffb15 	stw	r2,-20(fp)
  84eb64:	e0bffb17 	ldw	r2,-20(fp)
  84eb68:	1001703a 	wrctl	status,r2

        default:
             OS_EXIT_CRITICAL();
             *perr                  = OS_ERR_INVALID_OPT;
  84eb6c:	e0bfff17 	ldw	r2,-4(fp)
  84eb70:	00c001c4 	movi	r3,7
  84eb74:	10c00005 	stb	r3,0(r2)
             pevent_return          = pevent;
  84eb78:	e0bffd17 	ldw	r2,-12(fp)
  84eb7c:	e0bff515 	stw	r2,-44(fp)
             break;
  84eb80:	0001883a 	nop
    }
    return (pevent_return);
  84eb84:	e0bff517 	ldw	r2,-44(fp)
}
  84eb88:	e037883a 	mov	sp,fp
  84eb8c:	dfc00117 	ldw	ra,4(sp)
  84eb90:	df000017 	ldw	fp,0(sp)
  84eb94:	dec00204 	addi	sp,sp,8
  84eb98:	f800283a 	ret

0084eb9c <OSQFlush>:
*********************************************************************************************************
*/

#if OS_Q_FLUSH_EN > 0
INT8U  OSQFlush (OS_EVENT *pevent)
{
  84eb9c:	defffa04 	addi	sp,sp,-24
  84eba0:	df000515 	stw	fp,20(sp)
  84eba4:	df000504 	addi	fp,sp,20
  84eba8:	e13fff15 	stw	r4,-4(fp)
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84ebac:	e03ffb15 	stw	zero,-20(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  84ebb0:	e0bfff17 	ldw	r2,-4(fp)
  84ebb4:	1000021e 	bne	r2,zero,84ebc0 <OSQFlush+0x24>
        return (OS_ERR_PEVENT_NULL);
  84ebb8:	00800104 	movi	r2,4
  84ebbc:	00002106 	br	84ec44 <OSQFlush+0xa8>
    }
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {     /* Validate event block type                     */
  84ebc0:	e0bfff17 	ldw	r2,-4(fp)
  84ebc4:	10800003 	ldbu	r2,0(r2)
  84ebc8:	10803fcc 	andi	r2,r2,255
  84ebcc:	108000a0 	cmpeqi	r2,r2,2
  84ebd0:	1000021e 	bne	r2,zero,84ebdc <OSQFlush+0x40>
        return (OS_ERR_EVENT_TYPE);
  84ebd4:	00800044 	movi	r2,1
  84ebd8:	00001a06 	br	84ec44 <OSQFlush+0xa8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84ebdc:	0005303a 	rdctl	r2,status
  84ebe0:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84ebe4:	e0fffd17 	ldw	r3,-12(fp)
  84ebe8:	00bfff84 	movi	r2,-2
  84ebec:	1884703a 	and	r2,r3,r2
  84ebf0:	1001703a 	wrctl	status,r2
  
  return context;
  84ebf4:	e0bffd17 	ldw	r2,-12(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  84ebf8:	e0bffb15 	stw	r2,-20(fp)
    pq             = (OS_Q *)pevent->OSEventPtr;      /* Point to queue storage structure              */
  84ebfc:	e0bfff17 	ldw	r2,-4(fp)
  84ec00:	10800117 	ldw	r2,4(r2)
  84ec04:	e0bffc15 	stw	r2,-16(fp)
    pq->OSQIn      = pq->OSQStart;
  84ec08:	e0bffc17 	ldw	r2,-16(fp)
  84ec0c:	10c00117 	ldw	r3,4(r2)
  84ec10:	e0bffc17 	ldw	r2,-16(fp)
  84ec14:	10c00315 	stw	r3,12(r2)
    pq->OSQOut     = pq->OSQStart;
  84ec18:	e0bffc17 	ldw	r2,-16(fp)
  84ec1c:	10c00117 	ldw	r3,4(r2)
  84ec20:	e0bffc17 	ldw	r2,-16(fp)
  84ec24:	10c00415 	stw	r3,16(r2)
    pq->OSQEntries = 0;
  84ec28:	e0bffc17 	ldw	r2,-16(fp)
  84ec2c:	1000058d 	sth	zero,22(r2)
  84ec30:	e0bffb17 	ldw	r2,-20(fp)
  84ec34:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84ec38:	e0bffe17 	ldw	r2,-8(fp)
  84ec3c:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  84ec40:	0005883a 	mov	r2,zero
}
  84ec44:	e037883a 	mov	sp,fp
  84ec48:	df000017 	ldw	fp,0(sp)
  84ec4c:	dec00104 	addi	sp,sp,4
  84ec50:	f800283a 	ret

0084ec54 <OSQPend>:
* Note(s)    : As of V2.60, this function allows you to receive NULL pointer messages.
*********************************************************************************************************
*/

void  *OSQPend (OS_EVENT *pevent, INT16U timeout, INT8U *perr)
{
  84ec54:	defff304 	addi	sp,sp,-52
  84ec58:	dfc00c15 	stw	ra,48(sp)
  84ec5c:	df000b15 	stw	fp,44(sp)
  84ec60:	df000b04 	addi	fp,sp,44
  84ec64:	e13ffd15 	stw	r4,-12(fp)
  84ec68:	2805883a 	mov	r2,r5
  84ec6c:	e1bfff15 	stw	r6,-4(fp)
  84ec70:	e0bffe0d 	sth	r2,-8(fp)
    void      *pmsg;
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  84ec74:	e03ff615 	stw	zero,-40(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                    /* Validate 'perr'                                    */
  84ec78:	e0bfff17 	ldw	r2,-4(fp)
  84ec7c:	1000021e 	bne	r2,zero,84ec88 <OSQPend+0x34>
        return ((void *)0);
  84ec80:	0005883a 	mov	r2,zero
  84ec84:	00009106 	br	84eecc <OSQPend+0x278>
    }
    if (pevent == (OS_EVENT *)0) {               /* Validate 'pevent'                                  */
  84ec88:	e0bffd17 	ldw	r2,-12(fp)
  84ec8c:	1000051e 	bne	r2,zero,84eca4 <OSQPend+0x50>
        *perr = OS_ERR_PEVENT_NULL;
  84ec90:	e0bfff17 	ldw	r2,-4(fp)
  84ec94:	00c00104 	movi	r3,4
  84ec98:	10c00005 	stb	r3,0(r2)
        return ((void *)0);
  84ec9c:	0005883a 	mov	r2,zero
  84eca0:	00008a06 	br	84eecc <OSQPend+0x278>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {/* Validate event block type                          */
  84eca4:	e0bffd17 	ldw	r2,-12(fp)
  84eca8:	10800003 	ldbu	r2,0(r2)
  84ecac:	10803fcc 	andi	r2,r2,255
  84ecb0:	108000a0 	cmpeqi	r2,r2,2
  84ecb4:	1000051e 	bne	r2,zero,84eccc <OSQPend+0x78>
        *perr = OS_ERR_EVENT_TYPE;
  84ecb8:	e0bfff17 	ldw	r2,-4(fp)
  84ecbc:	00c00044 	movi	r3,1
  84ecc0:	10c00005 	stb	r3,0(r2)
        return ((void *)0);
  84ecc4:	0005883a 	mov	r2,zero
  84ecc8:	00008006 	br	84eecc <OSQPend+0x278>
    }
    if (OSIntNesting > 0) {                      /* See if called from ISR ...                         */
  84eccc:	d0a0b103 	ldbu	r2,-32060(gp)
  84ecd0:	10803fcc 	andi	r2,r2,255
  84ecd4:	10000526 	beq	r2,zero,84ecec <OSQPend+0x98>
        *perr = OS_ERR_PEND_ISR;                 /* ... can't PEND from an ISR                         */
  84ecd8:	e0bfff17 	ldw	r2,-4(fp)
  84ecdc:	00c00084 	movi	r3,2
  84ece0:	10c00005 	stb	r3,0(r2)
        return ((void *)0);
  84ece4:	0005883a 	mov	r2,zero
  84ece8:	00007806 	br	84eecc <OSQPend+0x278>
    }
    if (OSLockNesting > 0) {                     /* See if called with scheduler locked ...            */
  84ecec:	d0a0a303 	ldbu	r2,-32116(gp)
  84ecf0:	10803fcc 	andi	r2,r2,255
  84ecf4:	10000526 	beq	r2,zero,84ed0c <OSQPend+0xb8>
        *perr = OS_ERR_PEND_LOCKED;              /* ... can't PEND when locked                         */
  84ecf8:	e0bfff17 	ldw	r2,-4(fp)
  84ecfc:	00c00344 	movi	r3,13
  84ed00:	10c00005 	stb	r3,0(r2)
        return ((void *)0);
  84ed04:	0005883a 	mov	r2,zero
  84ed08:	00007006 	br	84eecc <OSQPend+0x278>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84ed0c:	0005303a 	rdctl	r2,status
  84ed10:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84ed14:	e0fffc17 	ldw	r3,-16(fp)
  84ed18:	00bfff84 	movi	r2,-2
  84ed1c:	1884703a 	and	r2,r3,r2
  84ed20:	1001703a 	wrctl	status,r2
  
  return context;
  84ed24:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84ed28:	e0bff615 	stw	r2,-40(fp)
    pq = (OS_Q *)pevent->OSEventPtr;             /* Point at queue control block                       */
  84ed2c:	e0bffd17 	ldw	r2,-12(fp)
  84ed30:	10800117 	ldw	r2,4(r2)
  84ed34:	e0bff815 	stw	r2,-32(fp)
    if (pq->OSQEntries > 0) {                    /* See if any messages in the queue                   */
  84ed38:	e0bff817 	ldw	r2,-32(fp)
  84ed3c:	1080058b 	ldhu	r2,22(r2)
  84ed40:	10bfffcc 	andi	r2,r2,65535
  84ed44:	10001e26 	beq	r2,zero,84edc0 <OSQPend+0x16c>
        pmsg = *pq->OSQOut++;                    /* Yes, extract oldest message from the queue         */
  84ed48:	e0bff817 	ldw	r2,-32(fp)
  84ed4c:	10800417 	ldw	r2,16(r2)
  84ed50:	11000104 	addi	r4,r2,4
  84ed54:	e0fff817 	ldw	r3,-32(fp)
  84ed58:	19000415 	stw	r4,16(r3)
  84ed5c:	10800017 	ldw	r2,0(r2)
  84ed60:	e0bff515 	stw	r2,-44(fp)
        pq->OSQEntries--;                        /* Update the number of entries in the queue          */
  84ed64:	e0bff817 	ldw	r2,-32(fp)
  84ed68:	1080058b 	ldhu	r2,22(r2)
  84ed6c:	10bfffc4 	addi	r2,r2,-1
  84ed70:	1007883a 	mov	r3,r2
  84ed74:	e0bff817 	ldw	r2,-32(fp)
  84ed78:	10c0058d 	sth	r3,22(r2)
        if (pq->OSQOut == pq->OSQEnd) {          /* Wrap OUT pointer if we are at the end of the queue */
  84ed7c:	e0bff817 	ldw	r2,-32(fp)
  84ed80:	10c00417 	ldw	r3,16(r2)
  84ed84:	e0bff817 	ldw	r2,-32(fp)
  84ed88:	10800217 	ldw	r2,8(r2)
  84ed8c:	1880041e 	bne	r3,r2,84eda0 <OSQPend+0x14c>
            pq->OSQOut = pq->OSQStart;
  84ed90:	e0bff817 	ldw	r2,-32(fp)
  84ed94:	10c00117 	ldw	r3,4(r2)
  84ed98:	e0bff817 	ldw	r2,-32(fp)
  84ed9c:	10c00415 	stw	r3,16(r2)
  84eda0:	e0bff617 	ldw	r2,-40(fp)
  84eda4:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84eda8:	e0bff717 	ldw	r2,-36(fp)
  84edac:	1001703a 	wrctl	status,r2
        }
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_NONE;
  84edb0:	e0bfff17 	ldw	r2,-4(fp)
  84edb4:	10000005 	stb	zero,0(r2)
        return (pmsg);                           /* Return message received                            */
  84edb8:	e0bff517 	ldw	r2,-44(fp)
  84edbc:	00004306 	br	84eecc <OSQPend+0x278>
    }
    OSTCBCur->OSTCBStat     |= OS_STAT_Q;        /* Task will have to pend for a message to be posted  */
  84edc0:	d0a0b217 	ldw	r2,-32056(gp)
  84edc4:	d0e0b217 	ldw	r3,-32056(gp)
  84edc8:	18c00c03 	ldbu	r3,48(r3)
  84edcc:	18c00114 	ori	r3,r3,4
  84edd0:	10c00c05 	stb	r3,48(r2)
    OSTCBCur->OSTCBStatPend  = OS_STAT_PEND_OK;
  84edd4:	d0a0b217 	ldw	r2,-32056(gp)
  84edd8:	10000c45 	stb	zero,49(r2)
    OSTCBCur->OSTCBDly       = timeout;          /* Load timeout into TCB                              */
  84eddc:	d0a0b217 	ldw	r2,-32056(gp)
  84ede0:	e0fffe0b 	ldhu	r3,-8(fp)
  84ede4:	10c00b8d 	sth	r3,46(r2)
    OS_EventTaskWait(pevent);                    /* Suspend task until event or timeout occurs         */
  84ede8:	e13ffd17 	ldw	r4,-12(fp)
  84edec:	084b6a40 	call	84b6a4 <OS_EventTaskWait>
  84edf0:	e0bff617 	ldw	r2,-40(fp)
  84edf4:	e0bffb15 	stw	r2,-20(fp)
  84edf8:	e0bffb17 	ldw	r2,-20(fp)
  84edfc:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    OS_Sched();                                  /* Find next highest priority task ready to run       */
  84ee00:	084bf580 	call	84bf58 <OS_Sched>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84ee04:	0005303a 	rdctl	r2,status
  84ee08:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84ee0c:	e0fff917 	ldw	r3,-28(fp)
  84ee10:	00bfff84 	movi	r2,-2
  84ee14:	1884703a 	and	r2,r3,r2
  84ee18:	1001703a 	wrctl	status,r2
  
  return context;
  84ee1c:	e0bff917 	ldw	r2,-28(fp)
    OS_ENTER_CRITICAL();
  84ee20:	e0bff615 	stw	r2,-40(fp)
    switch (OSTCBCur->OSTCBStatPend) {                /* See if we timed-out or aborted                */
  84ee24:	d0a0b217 	ldw	r2,-32056(gp)
  84ee28:	10800c43 	ldbu	r2,49(r2)
  84ee2c:	10803fcc 	andi	r2,r2,255
  84ee30:	10000326 	beq	r2,zero,84ee40 <OSQPend+0x1ec>
  84ee34:	108000a0 	cmpeqi	r2,r2,2
  84ee38:	1000071e 	bne	r2,zero,84ee58 <OSQPend+0x204>
  84ee3c:	00000b06 	br	84ee6c <OSQPend+0x218>
        case OS_STAT_PEND_OK:                         /* Extract message from TCB (Put there by QPost) */
             pmsg =  OSTCBCur->OSTCBMsg;
  84ee40:	d0a0b217 	ldw	r2,-32056(gp)
  84ee44:	10800917 	ldw	r2,36(r2)
  84ee48:	e0bff515 	stw	r2,-44(fp)
            *perr =  OS_ERR_NONE;
  84ee4c:	e0bfff17 	ldw	r2,-4(fp)
  84ee50:	10000005 	stb	zero,0(r2)
             break;
  84ee54:	00000e06 	br	84ee90 <OSQPend+0x23c>

        case OS_STAT_PEND_ABORT:
             pmsg = (void *)0;
  84ee58:	e03ff515 	stw	zero,-44(fp)
            *perr =  OS_ERR_PEND_ABORT;               /* Indicate that we aborted                      */
  84ee5c:	e0bfff17 	ldw	r2,-4(fp)
  84ee60:	00c00384 	movi	r3,14
  84ee64:	10c00005 	stb	r3,0(r2)
             break;
  84ee68:	00000906 	br	84ee90 <OSQPend+0x23c>

        case OS_STAT_PEND_TO:
        default:
             OS_EventTaskRemove(OSTCBCur, pevent);
  84ee6c:	d0a0b217 	ldw	r2,-32056(gp)
  84ee70:	e17ffd17 	ldw	r5,-12(fp)
  84ee74:	1009883a 	mov	r4,r2
  84ee78:	084b9040 	call	84b904 <OS_EventTaskRemove>
             pmsg = (void *)0;
  84ee7c:	e03ff515 	stw	zero,-44(fp)
            *perr =  OS_ERR_TIMEOUT;                  /* Indicate that we didn't get event within TO   */
  84ee80:	e0bfff17 	ldw	r2,-4(fp)
  84ee84:	00c00284 	movi	r3,10
  84ee88:	10c00005 	stb	r3,0(r2)
             break;
  84ee8c:	0001883a 	nop
    }
    OSTCBCur->OSTCBStat          =  OS_STAT_RDY;      /* Set   task  status to ready                   */
  84ee90:	d0a0b217 	ldw	r2,-32056(gp)
  84ee94:	10000c05 	stb	zero,48(r2)
    OSTCBCur->OSTCBStatPend      =  OS_STAT_PEND_OK;  /* Clear pend  status                            */
  84ee98:	d0a0b217 	ldw	r2,-32056(gp)
  84ee9c:	10000c45 	stb	zero,49(r2)
    OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;    /* Clear event pointers                          */
  84eea0:	d0a0b217 	ldw	r2,-32056(gp)
  84eea4:	10000715 	stw	zero,28(r2)
#if (OS_EVENT_MULTI_EN > 0)
    OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)0;
  84eea8:	d0a0b217 	ldw	r2,-32056(gp)
  84eeac:	10000815 	stw	zero,32(r2)
#endif
    OSTCBCur->OSTCBMsg           = (void      *)0;    /* Clear  received message                       */
  84eeb0:	d0a0b217 	ldw	r2,-32056(gp)
  84eeb4:	10000915 	stw	zero,36(r2)
  84eeb8:	e0bff617 	ldw	r2,-40(fp)
  84eebc:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84eec0:	e0bffa17 	ldw	r2,-24(fp)
  84eec4:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (pmsg);                                    /* Return received message                       */
  84eec8:	e0bff517 	ldw	r2,-44(fp)
}
  84eecc:	e037883a 	mov	sp,fp
  84eed0:	dfc00117 	ldw	ra,4(sp)
  84eed4:	df000017 	ldw	fp,0(sp)
  84eed8:	dec00204 	addi	sp,sp,8
  84eedc:	f800283a 	ret

0084eee0 <OSQPendAbort>:
*********************************************************************************************************
*/

#if OS_Q_PEND_ABORT_EN > 0
INT8U  OSQPendAbort (OS_EVENT *pevent, INT8U opt, INT8U *perr)
{
  84eee0:	defff604 	addi	sp,sp,-40
  84eee4:	dfc00915 	stw	ra,36(sp)
  84eee8:	df000815 	stw	fp,32(sp)
  84eeec:	df000804 	addi	fp,sp,32
  84eef0:	e13ffd15 	stw	r4,-12(fp)
  84eef4:	2805883a 	mov	r2,r5
  84eef8:	e1bfff15 	stw	r6,-4(fp)
  84eefc:	e0bffe05 	stb	r2,-8(fp)
    INT8U      nbr_tasks;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  84ef00:	e03ff915 	stw	zero,-28(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                              /* Validate 'perr'                          */
  84ef04:	e0bfff17 	ldw	r2,-4(fp)
  84ef08:	1000021e 	bne	r2,zero,84ef14 <OSQPendAbort+0x34>
        return (0);
  84ef0c:	0005883a 	mov	r2,zero
  84ef10:	00004906 	br	84f038 <OSQPendAbort+0x158>
    }
    if (pevent == (OS_EVENT *)0) {                         /* Validate 'pevent'                        */
  84ef14:	e0bffd17 	ldw	r2,-12(fp)
  84ef18:	1000051e 	bne	r2,zero,84ef30 <OSQPendAbort+0x50>
        *perr = OS_ERR_PEVENT_NULL;
  84ef1c:	e0bfff17 	ldw	r2,-4(fp)
  84ef20:	00c00104 	movi	r3,4
  84ef24:	10c00005 	stb	r3,0(r2)
        return (0);
  84ef28:	0005883a 	mov	r2,zero
  84ef2c:	00004206 	br	84f038 <OSQPendAbort+0x158>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {          /* Validate event block type                */
  84ef30:	e0bffd17 	ldw	r2,-12(fp)
  84ef34:	10800003 	ldbu	r2,0(r2)
  84ef38:	10803fcc 	andi	r2,r2,255
  84ef3c:	108000a0 	cmpeqi	r2,r2,2
  84ef40:	1000051e 	bne	r2,zero,84ef58 <OSQPendAbort+0x78>
        *perr = OS_ERR_EVENT_TYPE;
  84ef44:	e0bfff17 	ldw	r2,-4(fp)
  84ef48:	00c00044 	movi	r3,1
  84ef4c:	10c00005 	stb	r3,0(r2)
        return (0);
  84ef50:	0005883a 	mov	r2,zero
  84ef54:	00003806 	br	84f038 <OSQPendAbort+0x158>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84ef58:	0005303a 	rdctl	r2,status
  84ef5c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84ef60:	e0fffc17 	ldw	r3,-16(fp)
  84ef64:	00bfff84 	movi	r2,-2
  84ef68:	1884703a 	and	r2,r3,r2
  84ef6c:	1001703a 	wrctl	status,r2
  
  return context;
  84ef70:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84ef74:	e0bff915 	stw	r2,-28(fp)
    if (pevent->OSEventGrp != 0) {                         /* See if any task waiting on queue?        */
  84ef78:	e0bffd17 	ldw	r2,-12(fp)
  84ef7c:	10800283 	ldbu	r2,10(r2)
  84ef80:	10803fcc 	andi	r2,r2,255
  84ef84:	10002526 	beq	r2,zero,84f01c <OSQPendAbort+0x13c>
        nbr_tasks = 0;
  84ef88:	e03ff805 	stb	zero,-32(fp)
        switch (opt) {
  84ef8c:	e0bffe03 	ldbu	r2,-8(fp)
  84ef90:	10800060 	cmpeqi	r2,r2,1
  84ef94:	10000e26 	beq	r2,zero,84efd0 <OSQPendAbort+0xf0>
            case OS_PEND_OPT_BROADCAST:                    /* Do we need to abort ALL waiting tasks?   */
                 while (pevent->OSEventGrp != 0) {         /* Yes, ready ALL tasks waiting on queue    */
  84ef98:	00000806 	br	84efbc <OSQPendAbort+0xdc>
                     (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_Q, OS_STAT_PEND_ABORT);
  84ef9c:	01c00084 	movi	r7,2
  84efa0:	01800104 	movi	r6,4
  84efa4:	000b883a 	mov	r5,zero
  84efa8:	e13ffd17 	ldw	r4,-12(fp)
  84efac:	084b50c0 	call	84b50c <OS_EventTaskRdy>
                     nbr_tasks++;
  84efb0:	e0bff803 	ldbu	r2,-32(fp)
  84efb4:	10800044 	addi	r2,r2,1
  84efb8:	e0bff805 	stb	r2,-32(fp)
    OS_ENTER_CRITICAL();
    if (pevent->OSEventGrp != 0) {                         /* See if any task waiting on queue?        */
        nbr_tasks = 0;
        switch (opt) {
            case OS_PEND_OPT_BROADCAST:                    /* Do we need to abort ALL waiting tasks?   */
                 while (pevent->OSEventGrp != 0) {         /* Yes, ready ALL tasks waiting on queue    */
  84efbc:	e0bffd17 	ldw	r2,-12(fp)
  84efc0:	10800283 	ldbu	r2,10(r2)
  84efc4:	10803fcc 	andi	r2,r2,255
  84efc8:	103ff41e 	bne	r2,zero,84ef9c <__alt_mem_epcs_flash_controller_0+0xff845f9c>
                     (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_Q, OS_STAT_PEND_ABORT);
                     nbr_tasks++;
                 }
                 break;
  84efcc:	00000906 	br	84eff4 <OSQPendAbort+0x114>
               
            case OS_PEND_OPT_NONE:
            default:                                       /* No,  ready HPT       waiting on queue    */
                 (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_Q, OS_STAT_PEND_ABORT);
  84efd0:	01c00084 	movi	r7,2
  84efd4:	01800104 	movi	r6,4
  84efd8:	000b883a 	mov	r5,zero
  84efdc:	e13ffd17 	ldw	r4,-12(fp)
  84efe0:	084b50c0 	call	84b50c <OS_EventTaskRdy>
                 nbr_tasks++;
  84efe4:	e0bff803 	ldbu	r2,-32(fp)
  84efe8:	10800044 	addi	r2,r2,1
  84efec:	e0bff805 	stb	r2,-32(fp)
                 break;
  84eff0:	0001883a 	nop
  84eff4:	e0bff917 	ldw	r2,-28(fp)
  84eff8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84effc:	e0bffa17 	ldw	r2,-24(fp)
  84f000:	1001703a 	wrctl	status,r2
        }
        OS_EXIT_CRITICAL();
        OS_Sched();                                        /* Find HPT ready to run                    */
  84f004:	084bf580 	call	84bf58 <OS_Sched>
        *perr = OS_ERR_PEND_ABORT;
  84f008:	e0bfff17 	ldw	r2,-4(fp)
  84f00c:	00c00384 	movi	r3,14
  84f010:	10c00005 	stb	r3,0(r2)
        return (nbr_tasks);
  84f014:	e0bff803 	ldbu	r2,-32(fp)
  84f018:	00000706 	br	84f038 <OSQPendAbort+0x158>
  84f01c:	e0bff917 	ldw	r2,-28(fp)
  84f020:	e0bffb15 	stw	r2,-20(fp)
  84f024:	e0bffb17 	ldw	r2,-20(fp)
  84f028:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84f02c:	e0bfff17 	ldw	r2,-4(fp)
  84f030:	10000005 	stb	zero,0(r2)
    return (0);                                            /* No tasks waiting on queue                */
  84f034:	0005883a 	mov	r2,zero
}
  84f038:	e037883a 	mov	sp,fp
  84f03c:	dfc00117 	ldw	ra,4(sp)
  84f040:	df000017 	ldw	fp,0(sp)
  84f044:	dec00204 	addi	sp,sp,8
  84f048:	f800283a 	ret

0084f04c <OSQPost>:
*********************************************************************************************************
*/

#if OS_Q_POST_EN > 0
INT8U  OSQPost (OS_EVENT *pevent, void *pmsg)
{
  84f04c:	defff604 	addi	sp,sp,-40
  84f050:	dfc00915 	stw	ra,36(sp)
  84f054:	df000815 	stw	fp,32(sp)
  84f058:	df000804 	addi	fp,sp,32
  84f05c:	e13ffe15 	stw	r4,-8(fp)
  84f060:	e17fff15 	stw	r5,-4(fp)
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                            /* Allocate storage for CPU status register     */
    OS_CPU_SR  cpu_sr = 0;
  84f064:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                     /* Validate 'pevent'                            */
  84f068:	e0bffe17 	ldw	r2,-8(fp)
  84f06c:	1000021e 	bne	r2,zero,84f078 <OSQPost+0x2c>
        return (OS_ERR_PEVENT_NULL);
  84f070:	00800104 	movi	r2,4
  84f074:	00004a06 	br	84f1a0 <OSQPost+0x154>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {      /* Validate event block type                    */
  84f078:	e0bffe17 	ldw	r2,-8(fp)
  84f07c:	10800003 	ldbu	r2,0(r2)
  84f080:	10803fcc 	andi	r2,r2,255
  84f084:	108000a0 	cmpeqi	r2,r2,2
  84f088:	1000021e 	bne	r2,zero,84f094 <OSQPost+0x48>
        return (OS_ERR_EVENT_TYPE);
  84f08c:	00800044 	movi	r2,1
  84f090:	00004306 	br	84f1a0 <OSQPost+0x154>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84f094:	0005303a 	rdctl	r2,status
  84f098:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84f09c:	e0fffd17 	ldw	r3,-12(fp)
  84f0a0:	00bfff84 	movi	r2,-2
  84f0a4:	1884703a 	and	r2,r3,r2
  84f0a8:	1001703a 	wrctl	status,r2
  
  return context;
  84f0ac:	e0bffd17 	ldw	r2,-12(fp)
    }
    OS_ENTER_CRITICAL();
  84f0b0:	e0bff815 	stw	r2,-32(fp)
    if (pevent->OSEventGrp != 0) {                     /* See if any task pending on queue             */
  84f0b4:	e0bffe17 	ldw	r2,-8(fp)
  84f0b8:	10800283 	ldbu	r2,10(r2)
  84f0bc:	10803fcc 	andi	r2,r2,255
  84f0c0:	10000c26 	beq	r2,zero,84f0f4 <OSQPost+0xa8>
                                                       /* Ready highest priority task waiting on event */
        (void)OS_EventTaskRdy(pevent, pmsg, OS_STAT_Q, OS_STAT_PEND_OK);
  84f0c4:	000f883a 	mov	r7,zero
  84f0c8:	01800104 	movi	r6,4
  84f0cc:	e17fff17 	ldw	r5,-4(fp)
  84f0d0:	e13ffe17 	ldw	r4,-8(fp)
  84f0d4:	084b50c0 	call	84b50c <OS_EventTaskRdy>
  84f0d8:	e0bff817 	ldw	r2,-32(fp)
  84f0dc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84f0e0:	e0bff917 	ldw	r2,-28(fp)
  84f0e4:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        OS_Sched();                                    /* Find highest priority task ready to run      */
  84f0e8:	084bf580 	call	84bf58 <OS_Sched>
        return (OS_ERR_NONE);
  84f0ec:	0005883a 	mov	r2,zero
  84f0f0:	00002b06 	br	84f1a0 <OSQPost+0x154>
    }
    pq = (OS_Q *)pevent->OSEventPtr;                   /* Point to queue control block                 */
  84f0f4:	e0bffe17 	ldw	r2,-8(fp)
  84f0f8:	10800117 	ldw	r2,4(r2)
  84f0fc:	e0bffb15 	stw	r2,-20(fp)
    if (pq->OSQEntries >= pq->OSQSize) {               /* Make sure queue is not full                  */
  84f100:	e0bffb17 	ldw	r2,-20(fp)
  84f104:	10c0058b 	ldhu	r3,22(r2)
  84f108:	e0bffb17 	ldw	r2,-20(fp)
  84f10c:	1080050b 	ldhu	r2,20(r2)
  84f110:	18ffffcc 	andi	r3,r3,65535
  84f114:	10bfffcc 	andi	r2,r2,65535
  84f118:	18800636 	bltu	r3,r2,84f134 <OSQPost+0xe8>
  84f11c:	e0bff817 	ldw	r2,-32(fp)
  84f120:	e0bffa15 	stw	r2,-24(fp)
  84f124:	e0bffa17 	ldw	r2,-24(fp)
  84f128:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_Q_FULL);
  84f12c:	00800784 	movi	r2,30
  84f130:	00001b06 	br	84f1a0 <OSQPost+0x154>
    }
    *pq->OSQIn++ = pmsg;                               /* Insert message into queue                    */
  84f134:	e0bffb17 	ldw	r2,-20(fp)
  84f138:	10800317 	ldw	r2,12(r2)
  84f13c:	11000104 	addi	r4,r2,4
  84f140:	e0fffb17 	ldw	r3,-20(fp)
  84f144:	19000315 	stw	r4,12(r3)
  84f148:	e0ffff17 	ldw	r3,-4(fp)
  84f14c:	10c00015 	stw	r3,0(r2)
    pq->OSQEntries++;                                  /* Update the nbr of entries in the queue       */
  84f150:	e0bffb17 	ldw	r2,-20(fp)
  84f154:	1080058b 	ldhu	r2,22(r2)
  84f158:	10800044 	addi	r2,r2,1
  84f15c:	1007883a 	mov	r3,r2
  84f160:	e0bffb17 	ldw	r2,-20(fp)
  84f164:	10c0058d 	sth	r3,22(r2)
    if (pq->OSQIn == pq->OSQEnd) {                     /* Wrap IN ptr if we are at end of queue        */
  84f168:	e0bffb17 	ldw	r2,-20(fp)
  84f16c:	10c00317 	ldw	r3,12(r2)
  84f170:	e0bffb17 	ldw	r2,-20(fp)
  84f174:	10800217 	ldw	r2,8(r2)
  84f178:	1880041e 	bne	r3,r2,84f18c <OSQPost+0x140>
        pq->OSQIn = pq->OSQStart;
  84f17c:	e0bffb17 	ldw	r2,-20(fp)
  84f180:	10c00117 	ldw	r3,4(r2)
  84f184:	e0bffb17 	ldw	r2,-20(fp)
  84f188:	10c00315 	stw	r3,12(r2)
  84f18c:	e0bff817 	ldw	r2,-32(fp)
  84f190:	e0bffc15 	stw	r2,-16(fp)
  84f194:	e0bffc17 	ldw	r2,-16(fp)
  84f198:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  84f19c:	0005883a 	mov	r2,zero
}
  84f1a0:	e037883a 	mov	sp,fp
  84f1a4:	dfc00117 	ldw	ra,4(sp)
  84f1a8:	df000017 	ldw	fp,0(sp)
  84f1ac:	dec00204 	addi	sp,sp,8
  84f1b0:	f800283a 	ret

0084f1b4 <OSQPostFront>:
*********************************************************************************************************
*/

#if OS_Q_POST_FRONT_EN > 0
INT8U  OSQPostFront (OS_EVENT *pevent, void *pmsg)
{
  84f1b4:	defff604 	addi	sp,sp,-40
  84f1b8:	dfc00915 	stw	ra,36(sp)
  84f1bc:	df000815 	stw	fp,32(sp)
  84f1c0:	df000804 	addi	fp,sp,32
  84f1c4:	e13ffe15 	stw	r4,-8(fp)
  84f1c8:	e17fff15 	stw	r5,-4(fp)
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84f1cc:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  84f1d0:	e0bffe17 	ldw	r2,-8(fp)
  84f1d4:	1000021e 	bne	r2,zero,84f1e0 <OSQPostFront+0x2c>
        return (OS_ERR_PEVENT_NULL);
  84f1d8:	00800104 	movi	r2,4
  84f1dc:	00004c06 	br	84f310 <OSQPostFront+0x15c>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {     /* Validate event block type                     */
  84f1e0:	e0bffe17 	ldw	r2,-8(fp)
  84f1e4:	10800003 	ldbu	r2,0(r2)
  84f1e8:	10803fcc 	andi	r2,r2,255
  84f1ec:	108000a0 	cmpeqi	r2,r2,2
  84f1f0:	1000021e 	bne	r2,zero,84f1fc <OSQPostFront+0x48>
        return (OS_ERR_EVENT_TYPE);
  84f1f4:	00800044 	movi	r2,1
  84f1f8:	00004506 	br	84f310 <OSQPostFront+0x15c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84f1fc:	0005303a 	rdctl	r2,status
  84f200:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84f204:	e0fffd17 	ldw	r3,-12(fp)
  84f208:	00bfff84 	movi	r2,-2
  84f20c:	1884703a 	and	r2,r3,r2
  84f210:	1001703a 	wrctl	status,r2
  
  return context;
  84f214:	e0bffd17 	ldw	r2,-12(fp)
    }
    OS_ENTER_CRITICAL();
  84f218:	e0bff815 	stw	r2,-32(fp)
    if (pevent->OSEventGrp != 0) {                    /* See if any task pending on queue              */
  84f21c:	e0bffe17 	ldw	r2,-8(fp)
  84f220:	10800283 	ldbu	r2,10(r2)
  84f224:	10803fcc 	andi	r2,r2,255
  84f228:	10000c26 	beq	r2,zero,84f25c <OSQPostFront+0xa8>
                                                      /* Ready highest priority task waiting on event  */
        (void)OS_EventTaskRdy(pevent, pmsg, OS_STAT_Q, OS_STAT_PEND_OK);
  84f22c:	000f883a 	mov	r7,zero
  84f230:	01800104 	movi	r6,4
  84f234:	e17fff17 	ldw	r5,-4(fp)
  84f238:	e13ffe17 	ldw	r4,-8(fp)
  84f23c:	084b50c0 	call	84b50c <OS_EventTaskRdy>
  84f240:	e0bff817 	ldw	r2,-32(fp)
  84f244:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84f248:	e0bff917 	ldw	r2,-28(fp)
  84f24c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        OS_Sched();                                   /* Find highest priority task ready to run       */
  84f250:	084bf580 	call	84bf58 <OS_Sched>
        return (OS_ERR_NONE);
  84f254:	0005883a 	mov	r2,zero
  84f258:	00002d06 	br	84f310 <OSQPostFront+0x15c>
    }
    pq = (OS_Q *)pevent->OSEventPtr;                  /* Point to queue control block                  */
  84f25c:	e0bffe17 	ldw	r2,-8(fp)
  84f260:	10800117 	ldw	r2,4(r2)
  84f264:	e0bffb15 	stw	r2,-20(fp)
    if (pq->OSQEntries >= pq->OSQSize) {              /* Make sure queue is not full                   */
  84f268:	e0bffb17 	ldw	r2,-20(fp)
  84f26c:	10c0058b 	ldhu	r3,22(r2)
  84f270:	e0bffb17 	ldw	r2,-20(fp)
  84f274:	1080050b 	ldhu	r2,20(r2)
  84f278:	18ffffcc 	andi	r3,r3,65535
  84f27c:	10bfffcc 	andi	r2,r2,65535
  84f280:	18800636 	bltu	r3,r2,84f29c <OSQPostFront+0xe8>
  84f284:	e0bff817 	ldw	r2,-32(fp)
  84f288:	e0bffa15 	stw	r2,-24(fp)
  84f28c:	e0bffa17 	ldw	r2,-24(fp)
  84f290:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_Q_FULL);
  84f294:	00800784 	movi	r2,30
  84f298:	00001d06 	br	84f310 <OSQPostFront+0x15c>
    }
    if (pq->OSQOut == pq->OSQStart) {                 /* Wrap OUT ptr if we are at the 1st queue entry */
  84f29c:	e0bffb17 	ldw	r2,-20(fp)
  84f2a0:	10c00417 	ldw	r3,16(r2)
  84f2a4:	e0bffb17 	ldw	r2,-20(fp)
  84f2a8:	10800117 	ldw	r2,4(r2)
  84f2ac:	1880041e 	bne	r3,r2,84f2c0 <OSQPostFront+0x10c>
        pq->OSQOut = pq->OSQEnd;
  84f2b0:	e0bffb17 	ldw	r2,-20(fp)
  84f2b4:	10c00217 	ldw	r3,8(r2)
  84f2b8:	e0bffb17 	ldw	r2,-20(fp)
  84f2bc:	10c00415 	stw	r3,16(r2)
    }
    pq->OSQOut--;
  84f2c0:	e0bffb17 	ldw	r2,-20(fp)
  84f2c4:	10800417 	ldw	r2,16(r2)
  84f2c8:	10ffff04 	addi	r3,r2,-4
  84f2cc:	e0bffb17 	ldw	r2,-20(fp)
  84f2d0:	10c00415 	stw	r3,16(r2)
    *pq->OSQOut = pmsg;                               /* Insert message into queue                     */
  84f2d4:	e0bffb17 	ldw	r2,-20(fp)
  84f2d8:	10800417 	ldw	r2,16(r2)
  84f2dc:	e0ffff17 	ldw	r3,-4(fp)
  84f2e0:	10c00015 	stw	r3,0(r2)
    pq->OSQEntries++;                                 /* Update the nbr of entries in the queue        */
  84f2e4:	e0bffb17 	ldw	r2,-20(fp)
  84f2e8:	1080058b 	ldhu	r2,22(r2)
  84f2ec:	10800044 	addi	r2,r2,1
  84f2f0:	1007883a 	mov	r3,r2
  84f2f4:	e0bffb17 	ldw	r2,-20(fp)
  84f2f8:	10c0058d 	sth	r3,22(r2)
  84f2fc:	e0bff817 	ldw	r2,-32(fp)
  84f300:	e0bffc15 	stw	r2,-16(fp)
  84f304:	e0bffc17 	ldw	r2,-16(fp)
  84f308:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  84f30c:	0005883a 	mov	r2,zero
}
  84f310:	e037883a 	mov	sp,fp
  84f314:	dfc00117 	ldw	ra,4(sp)
  84f318:	df000017 	ldw	fp,0(sp)
  84f31c:	dec00204 	addi	sp,sp,8
  84f320:	f800283a 	ret

0084f324 <OSQPostOpt>:
*********************************************************************************************************
*/

#if OS_Q_POST_OPT_EN > 0
INT8U  OSQPostOpt (OS_EVENT *pevent, void *pmsg, INT8U opt)
{
  84f324:	defff504 	addi	sp,sp,-44
  84f328:	dfc00a15 	stw	ra,40(sp)
  84f32c:	df000915 	stw	fp,36(sp)
  84f330:	df000904 	addi	fp,sp,36
  84f334:	e13ffd15 	stw	r4,-12(fp)
  84f338:	e17ffe15 	stw	r5,-8(fp)
  84f33c:	3005883a 	mov	r2,r6
  84f340:	e0bfff05 	stb	r2,-4(fp)
    OS_Q      *pq;
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84f344:	e03ff715 	stw	zero,-36(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  84f348:	e0bffd17 	ldw	r2,-12(fp)
  84f34c:	1000021e 	bne	r2,zero,84f358 <OSQPostOpt+0x34>
        return (OS_ERR_PEVENT_NULL);
  84f350:	00800104 	movi	r2,4
  84f354:	00007106 	br	84f51c <OSQPostOpt+0x1f8>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {     /* Validate event block type                     */
  84f358:	e0bffd17 	ldw	r2,-12(fp)
  84f35c:	10800003 	ldbu	r2,0(r2)
  84f360:	10803fcc 	andi	r2,r2,255
  84f364:	108000a0 	cmpeqi	r2,r2,2
  84f368:	1000021e 	bne	r2,zero,84f374 <OSQPostOpt+0x50>
        return (OS_ERR_EVENT_TYPE);
  84f36c:	00800044 	movi	r2,1
  84f370:	00006a06 	br	84f51c <OSQPostOpt+0x1f8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84f374:	0005303a 	rdctl	r2,status
  84f378:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84f37c:	e0fffc17 	ldw	r3,-16(fp)
  84f380:	00bfff84 	movi	r2,-2
  84f384:	1884703a 	and	r2,r3,r2
  84f388:	1001703a 	wrctl	status,r2
  
  return context;
  84f38c:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84f390:	e0bff715 	stw	r2,-36(fp)
    if (pevent->OSEventGrp != 0x00) {                 /* See if any task pending on queue              */
  84f394:	e0bffd17 	ldw	r2,-12(fp)
  84f398:	10800283 	ldbu	r2,10(r2)
  84f39c:	10803fcc 	andi	r2,r2,255
  84f3a0:	10001d26 	beq	r2,zero,84f418 <OSQPostOpt+0xf4>
        if ((opt & OS_POST_OPT_BROADCAST) != 0x00) {  /* Do we need to post msg to ALL waiting tasks ? */
  84f3a4:	e0bfff03 	ldbu	r2,-4(fp)
  84f3a8:	1080004c 	andi	r2,r2,1
  84f3ac:	10000b26 	beq	r2,zero,84f3dc <OSQPostOpt+0xb8>
            while (pevent->OSEventGrp != 0) {         /* Yes, Post to ALL tasks waiting on queue       */
  84f3b0:	00000506 	br	84f3c8 <OSQPostOpt+0xa4>
                (void)OS_EventTaskRdy(pevent, pmsg, OS_STAT_Q, OS_STAT_PEND_OK);
  84f3b4:	000f883a 	mov	r7,zero
  84f3b8:	01800104 	movi	r6,4
  84f3bc:	e17ffe17 	ldw	r5,-8(fp)
  84f3c0:	e13ffd17 	ldw	r4,-12(fp)
  84f3c4:	084b50c0 	call	84b50c <OS_EventTaskRdy>
        return (OS_ERR_EVENT_TYPE);
    }
    OS_ENTER_CRITICAL();
    if (pevent->OSEventGrp != 0x00) {                 /* See if any task pending on queue              */
        if ((opt & OS_POST_OPT_BROADCAST) != 0x00) {  /* Do we need to post msg to ALL waiting tasks ? */
            while (pevent->OSEventGrp != 0) {         /* Yes, Post to ALL tasks waiting on queue       */
  84f3c8:	e0bffd17 	ldw	r2,-12(fp)
  84f3cc:	10800283 	ldbu	r2,10(r2)
  84f3d0:	10803fcc 	andi	r2,r2,255
  84f3d4:	103ff71e 	bne	r2,zero,84f3b4 <__alt_mem_epcs_flash_controller_0+0xff8463b4>
  84f3d8:	00000506 	br	84f3f0 <OSQPostOpt+0xcc>
                (void)OS_EventTaskRdy(pevent, pmsg, OS_STAT_Q, OS_STAT_PEND_OK);
            }
        } else {                                      /* No,  Post to HPT waiting on queue             */
            (void)OS_EventTaskRdy(pevent, pmsg, OS_STAT_Q, OS_STAT_PEND_OK);
  84f3dc:	000f883a 	mov	r7,zero
  84f3e0:	01800104 	movi	r6,4
  84f3e4:	e17ffe17 	ldw	r5,-8(fp)
  84f3e8:	e13ffd17 	ldw	r4,-12(fp)
  84f3ec:	084b50c0 	call	84b50c <OS_EventTaskRdy>
  84f3f0:	e0bff717 	ldw	r2,-36(fp)
  84f3f4:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84f3f8:	e0bff817 	ldw	r2,-32(fp)
  84f3fc:	1001703a 	wrctl	status,r2
        }
        OS_EXIT_CRITICAL();
        if ((opt & OS_POST_OPT_NO_SCHED) == 0) {	  /* See if scheduler needs to be invoked          */
  84f400:	e0bfff03 	ldbu	r2,-4(fp)
  84f404:	1080010c 	andi	r2,r2,4
  84f408:	1000011e 	bne	r2,zero,84f410 <OSQPostOpt+0xec>
            OS_Sched();                               /* Find highest priority task ready to run       */
  84f40c:	084bf580 	call	84bf58 <OS_Sched>
        }
        return (OS_ERR_NONE);
  84f410:	0005883a 	mov	r2,zero
  84f414:	00004106 	br	84f51c <OSQPostOpt+0x1f8>
    }
    pq = (OS_Q *)pevent->OSEventPtr;                  /* Point to queue control block                  */
  84f418:	e0bffd17 	ldw	r2,-12(fp)
  84f41c:	10800117 	ldw	r2,4(r2)
  84f420:	e0bffa15 	stw	r2,-24(fp)
    if (pq->OSQEntries >= pq->OSQSize) {              /* Make sure queue is not full                   */
  84f424:	e0bffa17 	ldw	r2,-24(fp)
  84f428:	10c0058b 	ldhu	r3,22(r2)
  84f42c:	e0bffa17 	ldw	r2,-24(fp)
  84f430:	1080050b 	ldhu	r2,20(r2)
  84f434:	18ffffcc 	andi	r3,r3,65535
  84f438:	10bfffcc 	andi	r2,r2,65535
  84f43c:	18800636 	bltu	r3,r2,84f458 <OSQPostOpt+0x134>
  84f440:	e0bff717 	ldw	r2,-36(fp)
  84f444:	e0bff915 	stw	r2,-28(fp)
  84f448:	e0bff917 	ldw	r2,-28(fp)
  84f44c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_Q_FULL);
  84f450:	00800784 	movi	r2,30
  84f454:	00003106 	br	84f51c <OSQPostOpt+0x1f8>
    }
    if ((opt & OS_POST_OPT_FRONT) != 0x00) {          /* Do we post to the FRONT of the queue?         */
  84f458:	e0bfff03 	ldbu	r2,-4(fp)
  84f45c:	1080008c 	andi	r2,r2,2
  84f460:	10001326 	beq	r2,zero,84f4b0 <OSQPostOpt+0x18c>
        if (pq->OSQOut == pq->OSQStart) {             /* Yes, Post as LIFO, Wrap OUT pointer if we ... */
  84f464:	e0bffa17 	ldw	r2,-24(fp)
  84f468:	10c00417 	ldw	r3,16(r2)
  84f46c:	e0bffa17 	ldw	r2,-24(fp)
  84f470:	10800117 	ldw	r2,4(r2)
  84f474:	1880041e 	bne	r3,r2,84f488 <OSQPostOpt+0x164>
            pq->OSQOut = pq->OSQEnd;                  /*      ... are at the 1st queue entry           */
  84f478:	e0bffa17 	ldw	r2,-24(fp)
  84f47c:	10c00217 	ldw	r3,8(r2)
  84f480:	e0bffa17 	ldw	r2,-24(fp)
  84f484:	10c00415 	stw	r3,16(r2)
        }
        pq->OSQOut--;
  84f488:	e0bffa17 	ldw	r2,-24(fp)
  84f48c:	10800417 	ldw	r2,16(r2)
  84f490:	10ffff04 	addi	r3,r2,-4
  84f494:	e0bffa17 	ldw	r2,-24(fp)
  84f498:	10c00415 	stw	r3,16(r2)
        *pq->OSQOut = pmsg;                           /*      Insert message into queue                */
  84f49c:	e0bffa17 	ldw	r2,-24(fp)
  84f4a0:	10800417 	ldw	r2,16(r2)
  84f4a4:	e0fffe17 	ldw	r3,-8(fp)
  84f4a8:	10c00015 	stw	r3,0(r2)
  84f4ac:	00001006 	br	84f4f0 <OSQPostOpt+0x1cc>
    } else {                                          /* No,  Post as FIFO                             */
        *pq->OSQIn++ = pmsg;                          /*      Insert message into queue                */
  84f4b0:	e0bffa17 	ldw	r2,-24(fp)
  84f4b4:	10800317 	ldw	r2,12(r2)
  84f4b8:	11000104 	addi	r4,r2,4
  84f4bc:	e0fffa17 	ldw	r3,-24(fp)
  84f4c0:	19000315 	stw	r4,12(r3)
  84f4c4:	e0fffe17 	ldw	r3,-8(fp)
  84f4c8:	10c00015 	stw	r3,0(r2)
        if (pq->OSQIn == pq->OSQEnd) {                /*      Wrap IN ptr if we are at end of queue    */
  84f4cc:	e0bffa17 	ldw	r2,-24(fp)
  84f4d0:	10c00317 	ldw	r3,12(r2)
  84f4d4:	e0bffa17 	ldw	r2,-24(fp)
  84f4d8:	10800217 	ldw	r2,8(r2)
  84f4dc:	1880041e 	bne	r3,r2,84f4f0 <OSQPostOpt+0x1cc>
            pq->OSQIn = pq->OSQStart;
  84f4e0:	e0bffa17 	ldw	r2,-24(fp)
  84f4e4:	10c00117 	ldw	r3,4(r2)
  84f4e8:	e0bffa17 	ldw	r2,-24(fp)
  84f4ec:	10c00315 	stw	r3,12(r2)
        }
    }
    pq->OSQEntries++;                                 /* Update the nbr of entries in the queue        */
  84f4f0:	e0bffa17 	ldw	r2,-24(fp)
  84f4f4:	1080058b 	ldhu	r2,22(r2)
  84f4f8:	10800044 	addi	r2,r2,1
  84f4fc:	1007883a 	mov	r3,r2
  84f500:	e0bffa17 	ldw	r2,-24(fp)
  84f504:	10c0058d 	sth	r3,22(r2)
  84f508:	e0bff717 	ldw	r2,-36(fp)
  84f50c:	e0bffb15 	stw	r2,-20(fp)
  84f510:	e0bffb17 	ldw	r2,-20(fp)
  84f514:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  84f518:	0005883a 	mov	r2,zero
}
  84f51c:	e037883a 	mov	sp,fp
  84f520:	dfc00117 	ldw	ra,4(sp)
  84f524:	df000017 	ldw	fp,0(sp)
  84f528:	dec00204 	addi	sp,sp,8
  84f52c:	f800283a 	ret

0084f530 <OSQQuery>:
*********************************************************************************************************
*/

#if OS_Q_QUERY_EN > 0
INT8U  OSQQuery (OS_EVENT *pevent, OS_Q_DATA *p_q_data)
{
  84f530:	defff604 	addi	sp,sp,-40
  84f534:	df000915 	stw	fp,36(sp)
  84f538:	df000904 	addi	fp,sp,36
  84f53c:	e13ffe15 	stw	r4,-8(fp)
  84f540:	e17fff15 	stw	r5,-4(fp)
#else
    INT16U    *psrc;
    INT16U    *pdest;
#endif
#if OS_CRITICAL_METHOD == 3                            /* Allocate storage for CPU status register     */
    OS_CPU_SR  cpu_sr = 0;
  84f544:	e03ffa15 	stw	zero,-24(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                     /* Validate 'pevent'                            */
  84f548:	e0bffe17 	ldw	r2,-8(fp)
  84f54c:	1000021e 	bne	r2,zero,84f558 <OSQQuery+0x28>
        return (OS_ERR_PEVENT_NULL);
  84f550:	00800104 	movi	r2,4
  84f554:	00004906 	br	84f67c <OSQQuery+0x14c>
    }
    if (p_q_data == (OS_Q_DATA *)0) {                  /* Validate 'p_q_data'                          */
  84f558:	e0bfff17 	ldw	r2,-4(fp)
  84f55c:	1000021e 	bne	r2,zero,84f568 <OSQQuery+0x38>
        return (OS_ERR_PDATA_NULL);
  84f560:	00800244 	movi	r2,9
  84f564:	00004506 	br	84f67c <OSQQuery+0x14c>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_Q) {      /* Validate event block type                    */
  84f568:	e0bffe17 	ldw	r2,-8(fp)
  84f56c:	10800003 	ldbu	r2,0(r2)
  84f570:	10803fcc 	andi	r2,r2,255
  84f574:	108000a0 	cmpeqi	r2,r2,2
  84f578:	1000021e 	bne	r2,zero,84f584 <OSQQuery+0x54>
        return (OS_ERR_EVENT_TYPE);
  84f57c:	00800044 	movi	r2,1
  84f580:	00003e06 	br	84f67c <OSQQuery+0x14c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84f584:	0005303a 	rdctl	r2,status
  84f588:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84f58c:	e0fffd17 	ldw	r3,-12(fp)
  84f590:	00bfff84 	movi	r2,-2
  84f594:	1884703a 	and	r2,r3,r2
  84f598:	1001703a 	wrctl	status,r2
  
  return context;
  84f59c:	e0bffd17 	ldw	r2,-12(fp)
    }
    OS_ENTER_CRITICAL();
  84f5a0:	e0bffa15 	stw	r2,-24(fp)
    p_q_data->OSEventGrp = pevent->OSEventGrp;         /* Copy message queue wait list                 */
  84f5a4:	e0bffe17 	ldw	r2,-8(fp)
  84f5a8:	10c00283 	ldbu	r3,10(r2)
  84f5ac:	e0bfff17 	ldw	r2,-4(fp)
  84f5b0:	10c002c5 	stb	r3,11(r2)
    psrc                 = &pevent->OSEventTbl[0];
  84f5b4:	e0bffe17 	ldw	r2,-8(fp)
  84f5b8:	108002c4 	addi	r2,r2,11
  84f5bc:	e0bff815 	stw	r2,-32(fp)
    pdest                = &p_q_data->OSEventTbl[0];
  84f5c0:	e0bfff17 	ldw	r2,-4(fp)
  84f5c4:	10800204 	addi	r2,r2,8
  84f5c8:	e0bff915 	stw	r2,-28(fp)
    for (i = 0; i < OS_EVENT_TBL_SIZE; i++) {
  84f5cc:	e03ff705 	stb	zero,-36(fp)
  84f5d0:	00000b06 	br	84f600 <OSQQuery+0xd0>
        *pdest++ = *psrc++;
  84f5d4:	e0bff917 	ldw	r2,-28(fp)
  84f5d8:	10c00044 	addi	r3,r2,1
  84f5dc:	e0fff915 	stw	r3,-28(fp)
  84f5e0:	e0fff817 	ldw	r3,-32(fp)
  84f5e4:	19000044 	addi	r4,r3,1
  84f5e8:	e13ff815 	stw	r4,-32(fp)
  84f5ec:	18c00003 	ldbu	r3,0(r3)
  84f5f0:	10c00005 	stb	r3,0(r2)
    }
    OS_ENTER_CRITICAL();
    p_q_data->OSEventGrp = pevent->OSEventGrp;         /* Copy message queue wait list                 */
    psrc                 = &pevent->OSEventTbl[0];
    pdest                = &p_q_data->OSEventTbl[0];
    for (i = 0; i < OS_EVENT_TBL_SIZE; i++) {
  84f5f4:	e0bff703 	ldbu	r2,-36(fp)
  84f5f8:	10800044 	addi	r2,r2,1
  84f5fc:	e0bff705 	stb	r2,-36(fp)
  84f600:	e0bff703 	ldbu	r2,-36(fp)
  84f604:	108000f0 	cmpltui	r2,r2,3
  84f608:	103ff21e 	bne	r2,zero,84f5d4 <__alt_mem_epcs_flash_controller_0+0xff8465d4>
        *pdest++ = *psrc++;
    }
    pq = (OS_Q *)pevent->OSEventPtr;
  84f60c:	e0bffe17 	ldw	r2,-8(fp)
  84f610:	10800117 	ldw	r2,4(r2)
  84f614:	e0bffc15 	stw	r2,-16(fp)
    if (pq->OSQEntries > 0) {
  84f618:	e0bffc17 	ldw	r2,-16(fp)
  84f61c:	1080058b 	ldhu	r2,22(r2)
  84f620:	10bfffcc 	andi	r2,r2,65535
  84f624:	10000626 	beq	r2,zero,84f640 <OSQQuery+0x110>
        p_q_data->OSMsg = *pq->OSQOut;                 /* Get next message to return if available      */
  84f628:	e0bffc17 	ldw	r2,-16(fp)
  84f62c:	10800417 	ldw	r2,16(r2)
  84f630:	10c00017 	ldw	r3,0(r2)
  84f634:	e0bfff17 	ldw	r2,-4(fp)
  84f638:	10c00015 	stw	r3,0(r2)
  84f63c:	00000206 	br	84f648 <OSQQuery+0x118>
    } else {
        p_q_data->OSMsg = (void *)0;
  84f640:	e0bfff17 	ldw	r2,-4(fp)
  84f644:	10000015 	stw	zero,0(r2)
    }
    p_q_data->OSNMsgs = pq->OSQEntries;
  84f648:	e0bffc17 	ldw	r2,-16(fp)
  84f64c:	10c0058b 	ldhu	r3,22(r2)
  84f650:	e0bfff17 	ldw	r2,-4(fp)
  84f654:	10c0010d 	sth	r3,4(r2)
    p_q_data->OSQSize = pq->OSQSize;
  84f658:	e0bffc17 	ldw	r2,-16(fp)
  84f65c:	10c0050b 	ldhu	r3,20(r2)
  84f660:	e0bfff17 	ldw	r2,-4(fp)
  84f664:	10c0018d 	sth	r3,6(r2)
  84f668:	e0bffa17 	ldw	r2,-24(fp)
  84f66c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84f670:	e0bffb17 	ldw	r2,-20(fp)
  84f674:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  84f678:	0005883a 	mov	r2,zero
}
  84f67c:	e037883a 	mov	sp,fp
  84f680:	df000017 	ldw	fp,0(sp)
  84f684:	dec00104 	addi	sp,sp,4
  84f688:	f800283a 	ret

0084f68c <OS_QInit>:
* Note(s)    : This function is INTERNAL to uC/OS-II and your application should not call it.
*********************************************************************************************************
*/

void  OS_QInit (void)
{
  84f68c:	defffb04 	addi	sp,sp,-20
  84f690:	dfc00415 	stw	ra,16(sp)
  84f694:	df000315 	stw	fp,12(sp)
  84f698:	df000304 	addi	fp,sp,12
    OS_Q   *pq1;
    OS_Q   *pq2;



    OS_MemClr((INT8U *)&OSQTbl[0], sizeof(OSQTbl));  /* Clear the queue table                          */
  84f69c:	01407804 	movi	r5,480
  84f6a0:	010021b4 	movhi	r4,134
  84f6a4:	210e7704 	addi	r4,r4,14812
  84f6a8:	084be9c0 	call	84be9c <OS_MemClr>
    pq1 = &OSQTbl[0];
  84f6ac:	008021b4 	movhi	r2,134
  84f6b0:	108e7704 	addi	r2,r2,14812
  84f6b4:	e0bffe15 	stw	r2,-8(fp)
    pq2 = &OSQTbl[1];
  84f6b8:	008021b4 	movhi	r2,134
  84f6bc:	108e7d04 	addi	r2,r2,14836
  84f6c0:	e0bfff15 	stw	r2,-4(fp)
    for (i = 0; i < (OS_MAX_QS - 1); i++) {          /* Init. list of free QUEUE control blocks        */
  84f6c4:	e03ffd0d 	sth	zero,-12(fp)
  84f6c8:	00000c06 	br	84f6fc <OS_QInit+0x70>
        pq1->OSQPtr = pq2;
  84f6cc:	e0bffe17 	ldw	r2,-8(fp)
  84f6d0:	e0ffff17 	ldw	r3,-4(fp)
  84f6d4:	10c00015 	stw	r3,0(r2)
        pq1++;
  84f6d8:	e0bffe17 	ldw	r2,-8(fp)
  84f6dc:	10800604 	addi	r2,r2,24
  84f6e0:	e0bffe15 	stw	r2,-8(fp)
        pq2++;
  84f6e4:	e0bfff17 	ldw	r2,-4(fp)
  84f6e8:	10800604 	addi	r2,r2,24
  84f6ec:	e0bfff15 	stw	r2,-4(fp)


    OS_MemClr((INT8U *)&OSQTbl[0], sizeof(OSQTbl));  /* Clear the queue table                          */
    pq1 = &OSQTbl[0];
    pq2 = &OSQTbl[1];
    for (i = 0; i < (OS_MAX_QS - 1); i++) {          /* Init. list of free QUEUE control blocks        */
  84f6f0:	e0bffd0b 	ldhu	r2,-12(fp)
  84f6f4:	10800044 	addi	r2,r2,1
  84f6f8:	e0bffd0d 	sth	r2,-12(fp)
  84f6fc:	e0bffd0b 	ldhu	r2,-12(fp)
  84f700:	108004f0 	cmpltui	r2,r2,19
  84f704:	103ff11e 	bne	r2,zero,84f6cc <__alt_mem_epcs_flash_controller_0+0xff8466cc>
        pq1->OSQPtr = pq2;
        pq1++;
        pq2++;
    }
    pq1->OSQPtr = (OS_Q *)0;
  84f708:	e0bffe17 	ldw	r2,-8(fp)
  84f70c:	10000015 	stw	zero,0(r2)
    OSQFreeList = &OSQTbl[0];
  84f710:	008021b4 	movhi	r2,134
  84f714:	108e7704 	addi	r2,r2,14812
  84f718:	d0a0ae15 	stw	r2,-32072(gp)
#endif
}
  84f71c:	0001883a 	nop
  84f720:	e037883a 	mov	sp,fp
  84f724:	dfc00117 	ldw	ra,4(sp)
  84f728:	df000017 	ldw	fp,0(sp)
  84f72c:	dec00204 	addi	sp,sp,8
  84f730:	f800283a 	ret

0084f734 <OSSemAccept>:
*********************************************************************************************************
*/

#if OS_SEM_ACCEPT_EN > 0
INT16U  OSSemAccept (OS_EVENT *pevent)
{
  84f734:	defffa04 	addi	sp,sp,-24
  84f738:	df000515 	stw	fp,20(sp)
  84f73c:	df000504 	addi	fp,sp,20
  84f740:	e13fff15 	stw	r4,-4(fp)
    INT16U     cnt;
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84f744:	e03ffb15 	stw	zero,-20(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  84f748:	e0bfff17 	ldw	r2,-4(fp)
  84f74c:	1000021e 	bne	r2,zero,84f758 <OSSemAccept+0x24>
        return (0);
  84f750:	0005883a 	mov	r2,zero
  84f754:	00001f06 	br	84f7d4 <OSSemAccept+0xa0>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_SEM) {   /* Validate event block type                     */
  84f758:	e0bfff17 	ldw	r2,-4(fp)
  84f75c:	10800003 	ldbu	r2,0(r2)
  84f760:	10803fcc 	andi	r2,r2,255
  84f764:	108000e0 	cmpeqi	r2,r2,3
  84f768:	1000021e 	bne	r2,zero,84f774 <OSSemAccept+0x40>
        return (0);
  84f76c:	0005883a 	mov	r2,zero
  84f770:	00001806 	br	84f7d4 <OSSemAccept+0xa0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84f774:	0005303a 	rdctl	r2,status
  84f778:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84f77c:	e0fffe17 	ldw	r3,-8(fp)
  84f780:	00bfff84 	movi	r2,-2
  84f784:	1884703a 	and	r2,r3,r2
  84f788:	1001703a 	wrctl	status,r2
  
  return context;
  84f78c:	e0bffe17 	ldw	r2,-8(fp)
    }
    OS_ENTER_CRITICAL();
  84f790:	e0bffb15 	stw	r2,-20(fp)
    cnt = pevent->OSEventCnt;
  84f794:	e0bfff17 	ldw	r2,-4(fp)
  84f798:	1080020b 	ldhu	r2,8(r2)
  84f79c:	e0bffd0d 	sth	r2,-12(fp)
    if (cnt > 0) {                                    /* See if resource is available                  */
  84f7a0:	e0bffd0b 	ldhu	r2,-12(fp)
  84f7a4:	10000626 	beq	r2,zero,84f7c0 <OSSemAccept+0x8c>
        pevent->OSEventCnt--;                         /* Yes, decrement semaphore and notify caller    */
  84f7a8:	e0bfff17 	ldw	r2,-4(fp)
  84f7ac:	1080020b 	ldhu	r2,8(r2)
  84f7b0:	10bfffc4 	addi	r2,r2,-1
  84f7b4:	1007883a 	mov	r3,r2
  84f7b8:	e0bfff17 	ldw	r2,-4(fp)
  84f7bc:	10c0020d 	sth	r3,8(r2)
  84f7c0:	e0bffb17 	ldw	r2,-20(fp)
  84f7c4:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84f7c8:	e0bffc17 	ldw	r2,-16(fp)
  84f7cc:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    return (cnt);                                     /* Return semaphore count                        */
  84f7d0:	e0bffd0b 	ldhu	r2,-12(fp)
}
  84f7d4:	e037883a 	mov	sp,fp
  84f7d8:	df000017 	ldw	fp,0(sp)
  84f7dc:	dec00104 	addi	sp,sp,4
  84f7e0:	f800283a 	ret

0084f7e4 <OSSemCreate>:
*              == (void *)0  if no event control blocks were available
*********************************************************************************************************
*/

OS_EVENT  *OSSemCreate (INT16U cnt)
{
  84f7e4:	defff904 	addi	sp,sp,-28
  84f7e8:	dfc00615 	stw	ra,24(sp)
  84f7ec:	df000515 	stw	fp,20(sp)
  84f7f0:	df000504 	addi	fp,sp,20
  84f7f4:	2005883a 	mov	r2,r4
  84f7f8:	e0bfff0d 	sth	r2,-4(fp)
    OS_EVENT  *pevent;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  84f7fc:	e03ffb15 	stw	zero,-20(fp)
#endif



    if (OSIntNesting > 0) {                                /* See if called from ISR ...               */
  84f800:	d0a0b103 	ldbu	r2,-32060(gp)
  84f804:	10803fcc 	andi	r2,r2,255
  84f808:	10000226 	beq	r2,zero,84f814 <OSSemCreate+0x30>
        return ((OS_EVENT *)0);                            /* ... can't CREATE from an ISR             */
  84f80c:	0005883a 	mov	r2,zero
  84f810:	00002506 	br	84f8a8 <OSSemCreate+0xc4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84f814:	0005303a 	rdctl	r2,status
  84f818:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84f81c:	e0fffe17 	ldw	r3,-8(fp)
  84f820:	00bfff84 	movi	r2,-2
  84f824:	1884703a 	and	r2,r3,r2
  84f828:	1001703a 	wrctl	status,r2
  
  return context;
  84f82c:	e0bffe17 	ldw	r2,-8(fp)
    }
    OS_ENTER_CRITICAL();
  84f830:	e0bffb15 	stw	r2,-20(fp)
    pevent = OSEventFreeList;                              /* Get next free event control block        */
  84f834:	d0a0b017 	ldw	r2,-32064(gp)
  84f838:	e0bffd15 	stw	r2,-12(fp)
    if (OSEventFreeList != (OS_EVENT *)0) {                /* See if pool of free ECB pool was empty   */
  84f83c:	d0a0b017 	ldw	r2,-32064(gp)
  84f840:	10000326 	beq	r2,zero,84f850 <OSSemCreate+0x6c>
        OSEventFreeList = (OS_EVENT *)OSEventFreeList->OSEventPtr;
  84f844:	d0a0b017 	ldw	r2,-32064(gp)
  84f848:	10800117 	ldw	r2,4(r2)
  84f84c:	d0a0b015 	stw	r2,-32064(gp)
  84f850:	e0bffb17 	ldw	r2,-20(fp)
  84f854:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84f858:	e0bffc17 	ldw	r2,-16(fp)
  84f85c:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    if (pevent != (OS_EVENT *)0) {                         /* Get an event control block               */
  84f860:	e0bffd17 	ldw	r2,-12(fp)
  84f864:	10000f26 	beq	r2,zero,84f8a4 <OSSemCreate+0xc0>
        pevent->OSEventType    = OS_EVENT_TYPE_SEM;
  84f868:	e0bffd17 	ldw	r2,-12(fp)
  84f86c:	00c000c4 	movi	r3,3
  84f870:	10c00005 	stb	r3,0(r2)
        pevent->OSEventCnt     = cnt;                      /* Set semaphore value                      */
  84f874:	e0bffd17 	ldw	r2,-12(fp)
  84f878:	e0ffff0b 	ldhu	r3,-4(fp)
  84f87c:	10c0020d 	sth	r3,8(r2)
        pevent->OSEventPtr     = (void *)0;                /* Unlink from ECB free list                */
  84f880:	e0bffd17 	ldw	r2,-12(fp)
  84f884:	10000115 	stw	zero,4(r2)
#if OS_EVENT_NAME_SIZE > 1
        pevent->OSEventName[0] = '?';                      /* Unknown name                             */
  84f888:	e0bffd17 	ldw	r2,-12(fp)
  84f88c:	00c00fc4 	movi	r3,63
  84f890:	10c00385 	stb	r3,14(r2)
        pevent->OSEventName[1] = OS_ASCII_NUL;
  84f894:	e0bffd17 	ldw	r2,-12(fp)
  84f898:	100003c5 	stb	zero,15(r2)
#endif
        OS_EventWaitListInit(pevent);                      /* Initialize to 'nobody waiting' on sem.   */
  84f89c:	e13ffd17 	ldw	r4,-12(fp)
  84f8a0:	084babc0 	call	84babc <OS_EventWaitListInit>
    }
    return (pevent);
  84f8a4:	e0bffd17 	ldw	r2,-12(fp)
}
  84f8a8:	e037883a 	mov	sp,fp
  84f8ac:	dfc00117 	ldw	ra,4(sp)
  84f8b0:	df000017 	ldw	fp,0(sp)
  84f8b4:	dec00204 	addi	sp,sp,8
  84f8b8:	f800283a 	ret

0084f8bc <OSSemDel>:
*********************************************************************************************************
*/

#if OS_SEM_DEL_EN > 0
OS_EVENT  *OSSemDel (OS_EVENT *pevent, INT8U opt, INT8U *perr)
{
  84f8bc:	defff304 	addi	sp,sp,-52
  84f8c0:	dfc00c15 	stw	ra,48(sp)
  84f8c4:	df000b15 	stw	fp,44(sp)
  84f8c8:	df000b04 	addi	fp,sp,44
  84f8cc:	e13ffd15 	stw	r4,-12(fp)
  84f8d0:	2805883a 	mov	r2,r5
  84f8d4:	e1bfff15 	stw	r6,-4(fp)
  84f8d8:	e0bffe05 	stb	r2,-8(fp)
    BOOLEAN    tasks_waiting;
    OS_EVENT  *pevent_return;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  84f8dc:	e03ff715 	stw	zero,-36(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                              /* Validate 'perr'                          */
  84f8e0:	e0bfff17 	ldw	r2,-4(fp)
  84f8e4:	1000021e 	bne	r2,zero,84f8f0 <OSSemDel+0x34>
        return (pevent);
  84f8e8:	e0bffd17 	ldw	r2,-12(fp)
  84f8ec:	00007e06 	br	84fae8 <OSSemDel+0x22c>
    }
    if (pevent == (OS_EVENT *)0) {                         /* Validate 'pevent'                        */
  84f8f0:	e0bffd17 	ldw	r2,-12(fp)
  84f8f4:	1000051e 	bne	r2,zero,84f90c <OSSemDel+0x50>
        *perr = OS_ERR_PEVENT_NULL;
  84f8f8:	e0bfff17 	ldw	r2,-4(fp)
  84f8fc:	00c00104 	movi	r3,4
  84f900:	10c00005 	stb	r3,0(r2)
        return (pevent);
  84f904:	e0bffd17 	ldw	r2,-12(fp)
  84f908:	00007706 	br	84fae8 <OSSemDel+0x22c>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_SEM) {        /* Validate event block type                */
  84f90c:	e0bffd17 	ldw	r2,-12(fp)
  84f910:	10800003 	ldbu	r2,0(r2)
  84f914:	10803fcc 	andi	r2,r2,255
  84f918:	108000e0 	cmpeqi	r2,r2,3
  84f91c:	1000051e 	bne	r2,zero,84f934 <OSSemDel+0x78>
        *perr = OS_ERR_EVENT_TYPE;
  84f920:	e0bfff17 	ldw	r2,-4(fp)
  84f924:	00c00044 	movi	r3,1
  84f928:	10c00005 	stb	r3,0(r2)
        return (pevent);
  84f92c:	e0bffd17 	ldw	r2,-12(fp)
  84f930:	00006d06 	br	84fae8 <OSSemDel+0x22c>
    }
    if (OSIntNesting > 0) {                                /* See if called from ISR ...               */
  84f934:	d0a0b103 	ldbu	r2,-32060(gp)
  84f938:	10803fcc 	andi	r2,r2,255
  84f93c:	10000526 	beq	r2,zero,84f954 <OSSemDel+0x98>
        *perr = OS_ERR_DEL_ISR;                             /* ... can't DELETE from an ISR             */
  84f940:	e0bfff17 	ldw	r2,-4(fp)
  84f944:	00c003c4 	movi	r3,15
  84f948:	10c00005 	stb	r3,0(r2)
        return (pevent);
  84f94c:	e0bffd17 	ldw	r2,-12(fp)
  84f950:	00006506 	br	84fae8 <OSSemDel+0x22c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84f954:	0005303a 	rdctl	r2,status
  84f958:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84f95c:	e0fffc17 	ldw	r3,-16(fp)
  84f960:	00bfff84 	movi	r2,-2
  84f964:	1884703a 	and	r2,r3,r2
  84f968:	1001703a 	wrctl	status,r2
  
  return context;
  84f96c:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84f970:	e0bff715 	stw	r2,-36(fp)
    if (pevent->OSEventGrp != 0) {                         /* See if any tasks waiting on semaphore    */
  84f974:	e0bffd17 	ldw	r2,-12(fp)
  84f978:	10800283 	ldbu	r2,10(r2)
  84f97c:	10803fcc 	andi	r2,r2,255
  84f980:	10000326 	beq	r2,zero,84f990 <OSSemDel+0xd4>
        tasks_waiting = OS_TRUE;                           /* Yes                                      */
  84f984:	00800044 	movi	r2,1
  84f988:	e0bff505 	stb	r2,-44(fp)
  84f98c:	00000106 	br	84f994 <OSSemDel+0xd8>
    } else {
        tasks_waiting = OS_FALSE;                          /* No                                       */
  84f990:	e03ff505 	stb	zero,-44(fp)
    }
    switch (opt) {
  84f994:	e0bffe03 	ldbu	r2,-8(fp)
  84f998:	10000326 	beq	r2,zero,84f9a8 <OSSemDel+0xec>
  84f99c:	10800060 	cmpeqi	r2,r2,1
  84f9a0:	1000281e 	bne	r2,zero,84fa44 <OSSemDel+0x188>
  84f9a4:	00004506 	br	84fabc <OSSemDel+0x200>
        case OS_DEL_NO_PEND:                               /* Delete semaphore only if no task waiting */
             if (tasks_waiting == OS_FALSE) {
  84f9a8:	e0bff503 	ldbu	r2,-44(fp)
  84f9ac:	1000161e 	bne	r2,zero,84fa08 <OSSemDel+0x14c>
#if OS_EVENT_NAME_SIZE > 1
                 pevent->OSEventName[0] = '?';             /* Unknown name                             */
  84f9b0:	e0bffd17 	ldw	r2,-12(fp)
  84f9b4:	00c00fc4 	movi	r3,63
  84f9b8:	10c00385 	stb	r3,14(r2)
                 pevent->OSEventName[1] = OS_ASCII_NUL;
  84f9bc:	e0bffd17 	ldw	r2,-12(fp)
  84f9c0:	100003c5 	stb	zero,15(r2)
#endif
                 pevent->OSEventType    = OS_EVENT_TYPE_UNUSED;
  84f9c4:	e0bffd17 	ldw	r2,-12(fp)
  84f9c8:	10000005 	stb	zero,0(r2)
                 pevent->OSEventPtr     = OSEventFreeList; /* Return Event Control Block to free list  */
  84f9cc:	d0e0b017 	ldw	r3,-32064(gp)
  84f9d0:	e0bffd17 	ldw	r2,-12(fp)
  84f9d4:	10c00115 	stw	r3,4(r2)
                 pevent->OSEventCnt     = 0;
  84f9d8:	e0bffd17 	ldw	r2,-12(fp)
  84f9dc:	1000020d 	sth	zero,8(r2)
                 OSEventFreeList        = pevent;          /* Get next free event control block        */
  84f9e0:	e0bffd17 	ldw	r2,-12(fp)
  84f9e4:	d0a0b015 	stw	r2,-32064(gp)
  84f9e8:	e0bff717 	ldw	r2,-36(fp)
  84f9ec:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84f9f0:	e0bff817 	ldw	r2,-32(fp)
  84f9f4:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_NONE;
  84f9f8:	e0bfff17 	ldw	r2,-4(fp)
  84f9fc:	10000005 	stb	zero,0(r2)
                 pevent_return          = (OS_EVENT *)0;   /* Semaphore has been deleted               */
  84fa00:	e03ff615 	stw	zero,-40(fp)
             } else {
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_TASK_WAITING;
                 pevent_return          = pevent;
             }
             break;
  84fa04:	00003706 	br	84fae4 <OSSemDel+0x228>
  84fa08:	e0bff717 	ldw	r2,-36(fp)
  84fa0c:	e0bff915 	stw	r2,-28(fp)
  84fa10:	e0bff917 	ldw	r2,-28(fp)
  84fa14:	1001703a 	wrctl	status,r2
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_NONE;
                 pevent_return          = (OS_EVENT *)0;   /* Semaphore has been deleted               */
             } else {
                 OS_EXIT_CRITICAL();
                 *perr                  = OS_ERR_TASK_WAITING;
  84fa18:	e0bfff17 	ldw	r2,-4(fp)
  84fa1c:	00c01244 	movi	r3,73
  84fa20:	10c00005 	stb	r3,0(r2)
                 pevent_return          = pevent;
  84fa24:	e0bffd17 	ldw	r2,-12(fp)
  84fa28:	e0bff615 	stw	r2,-40(fp)
             }
             break;
  84fa2c:	00002d06 	br	84fae4 <OSSemDel+0x228>

        case OS_DEL_ALWAYS:                                /* Always delete the semaphore              */
             while (pevent->OSEventGrp != 0) {             /* Ready ALL tasks waiting for semaphore    */
                 (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_SEM, OS_STAT_PEND_OK);
  84fa30:	000f883a 	mov	r7,zero
  84fa34:	01800044 	movi	r6,1
  84fa38:	000b883a 	mov	r5,zero
  84fa3c:	e13ffd17 	ldw	r4,-12(fp)
  84fa40:	084b50c0 	call	84b50c <OS_EventTaskRdy>
                 pevent_return          = pevent;
             }
             break;

        case OS_DEL_ALWAYS:                                /* Always delete the semaphore              */
             while (pevent->OSEventGrp != 0) {             /* Ready ALL tasks waiting for semaphore    */
  84fa44:	e0bffd17 	ldw	r2,-12(fp)
  84fa48:	10800283 	ldbu	r2,10(r2)
  84fa4c:	10803fcc 	andi	r2,r2,255
  84fa50:	103ff71e 	bne	r2,zero,84fa30 <__alt_mem_epcs_flash_controller_0+0xff846a30>
                 (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_SEM, OS_STAT_PEND_OK);
             }
#if OS_EVENT_NAME_SIZE > 1
             pevent->OSEventName[0] = '?';                 /* Unknown name                             */
  84fa54:	e0bffd17 	ldw	r2,-12(fp)
  84fa58:	00c00fc4 	movi	r3,63
  84fa5c:	10c00385 	stb	r3,14(r2)
             pevent->OSEventName[1] = OS_ASCII_NUL;
  84fa60:	e0bffd17 	ldw	r2,-12(fp)
  84fa64:	100003c5 	stb	zero,15(r2)
#endif
             pevent->OSEventType    = OS_EVENT_TYPE_UNUSED;
  84fa68:	e0bffd17 	ldw	r2,-12(fp)
  84fa6c:	10000005 	stb	zero,0(r2)
             pevent->OSEventPtr     = OSEventFreeList;     /* Return Event Control Block to free list  */
  84fa70:	d0e0b017 	ldw	r3,-32064(gp)
  84fa74:	e0bffd17 	ldw	r2,-12(fp)
  84fa78:	10c00115 	stw	r3,4(r2)
             pevent->OSEventCnt     = 0;
  84fa7c:	e0bffd17 	ldw	r2,-12(fp)
  84fa80:	1000020d 	sth	zero,8(r2)
             OSEventFreeList        = pevent;              /* Get next free event control block        */
  84fa84:	e0bffd17 	ldw	r2,-12(fp)
  84fa88:	d0a0b015 	stw	r2,-32064(gp)
  84fa8c:	e0bff717 	ldw	r2,-36(fp)
  84fa90:	e0bffa15 	stw	r2,-24(fp)
  84fa94:	e0bffa17 	ldw	r2,-24(fp)
  84fa98:	1001703a 	wrctl	status,r2
             OS_EXIT_CRITICAL();
             if (tasks_waiting == OS_TRUE) {               /* Reschedule only if task(s) were waiting  */
  84fa9c:	e0bff503 	ldbu	r2,-44(fp)
  84faa0:	10800058 	cmpnei	r2,r2,1
  84faa4:	1000011e 	bne	r2,zero,84faac <OSSemDel+0x1f0>
                 OS_Sched();                               /* Find highest priority task ready to run  */
  84faa8:	084bf580 	call	84bf58 <OS_Sched>
             }
             *perr                  = OS_ERR_NONE;
  84faac:	e0bfff17 	ldw	r2,-4(fp)
  84fab0:	10000005 	stb	zero,0(r2)
             pevent_return          = (OS_EVENT *)0;       /* Semaphore has been deleted               */
  84fab4:	e03ff615 	stw	zero,-40(fp)
             break;
  84fab8:	00000a06 	br	84fae4 <OSSemDel+0x228>
  84fabc:	e0bff717 	ldw	r2,-36(fp)
  84fac0:	e0bffb15 	stw	r2,-20(fp)
  84fac4:	e0bffb17 	ldw	r2,-20(fp)
  84fac8:	1001703a 	wrctl	status,r2

        default:
             OS_EXIT_CRITICAL();
             *perr                  = OS_ERR_INVALID_OPT;
  84facc:	e0bfff17 	ldw	r2,-4(fp)
  84fad0:	00c001c4 	movi	r3,7
  84fad4:	10c00005 	stb	r3,0(r2)
             pevent_return          = pevent;
  84fad8:	e0bffd17 	ldw	r2,-12(fp)
  84fadc:	e0bff615 	stw	r2,-40(fp)
             break;
  84fae0:	0001883a 	nop
    }
    return (pevent_return);
  84fae4:	e0bff617 	ldw	r2,-40(fp)
}
  84fae8:	e037883a 	mov	sp,fp
  84faec:	dfc00117 	ldw	ra,4(sp)
  84faf0:	df000017 	ldw	fp,0(sp)
  84faf4:	dec00204 	addi	sp,sp,8
  84faf8:	f800283a 	ret

0084fafc <OSSemPend>:
* Returns    : none
*********************************************************************************************************
*/
/*$PAGE*/
void  OSSemPend (OS_EVENT *pevent, INT16U timeout, INT8U *perr)
{
  84fafc:	defff504 	addi	sp,sp,-44
  84fb00:	dfc00a15 	stw	ra,40(sp)
  84fb04:	df000915 	stw	fp,36(sp)
  84fb08:	df000904 	addi	fp,sp,36
  84fb0c:	e13ffd15 	stw	r4,-12(fp)
  84fb10:	2805883a 	mov	r2,r5
  84fb14:	e1bfff15 	stw	r6,-4(fp)
  84fb18:	e0bffe0d 	sth	r2,-8(fp)
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84fb1c:	e03ff715 	stw	zero,-36(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                         /* Validate 'perr'                               */
  84fb20:	e0bfff17 	ldw	r2,-4(fp)
  84fb24:	10007226 	beq	r2,zero,84fcf0 <OSSemPend+0x1f4>
        return;
    }
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  84fb28:	e0bffd17 	ldw	r2,-12(fp)
  84fb2c:	1000041e 	bne	r2,zero,84fb40 <OSSemPend+0x44>
        *perr = OS_ERR_PEVENT_NULL;
  84fb30:	e0bfff17 	ldw	r2,-4(fp)
  84fb34:	00c00104 	movi	r3,4
  84fb38:	10c00005 	stb	r3,0(r2)
        return;
  84fb3c:	00006d06 	br	84fcf4 <OSSemPend+0x1f8>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_SEM) {   /* Validate event block type                     */
  84fb40:	e0bffd17 	ldw	r2,-12(fp)
  84fb44:	10800003 	ldbu	r2,0(r2)
  84fb48:	10803fcc 	andi	r2,r2,255
  84fb4c:	108000e0 	cmpeqi	r2,r2,3
  84fb50:	1000041e 	bne	r2,zero,84fb64 <OSSemPend+0x68>
        *perr = OS_ERR_EVENT_TYPE;
  84fb54:	e0bfff17 	ldw	r2,-4(fp)
  84fb58:	00c00044 	movi	r3,1
  84fb5c:	10c00005 	stb	r3,0(r2)
        return;
  84fb60:	00006406 	br	84fcf4 <OSSemPend+0x1f8>
    }
    if (OSIntNesting > 0) {                           /* See if called from ISR ...                    */
  84fb64:	d0a0b103 	ldbu	r2,-32060(gp)
  84fb68:	10803fcc 	andi	r2,r2,255
  84fb6c:	10000426 	beq	r2,zero,84fb80 <OSSemPend+0x84>
        *perr = OS_ERR_PEND_ISR;                      /* ... can't PEND from an ISR                    */
  84fb70:	e0bfff17 	ldw	r2,-4(fp)
  84fb74:	00c00084 	movi	r3,2
  84fb78:	10c00005 	stb	r3,0(r2)
        return;
  84fb7c:	00005d06 	br	84fcf4 <OSSemPend+0x1f8>
    }
    if (OSLockNesting > 0) {                          /* See if called with scheduler locked ...       */
  84fb80:	d0a0a303 	ldbu	r2,-32116(gp)
  84fb84:	10803fcc 	andi	r2,r2,255
  84fb88:	10000426 	beq	r2,zero,84fb9c <OSSemPend+0xa0>
        *perr = OS_ERR_PEND_LOCKED;                   /* ... can't PEND when locked                    */
  84fb8c:	e0bfff17 	ldw	r2,-4(fp)
  84fb90:	00c00344 	movi	r3,13
  84fb94:	10c00005 	stb	r3,0(r2)
        return;
  84fb98:	00005606 	br	84fcf4 <OSSemPend+0x1f8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84fb9c:	0005303a 	rdctl	r2,status
  84fba0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84fba4:	e0fffc17 	ldw	r3,-16(fp)
  84fba8:	00bfff84 	movi	r2,-2
  84fbac:	1884703a 	and	r2,r3,r2
  84fbb0:	1001703a 	wrctl	status,r2
  
  return context;
  84fbb4:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84fbb8:	e0bff715 	stw	r2,-36(fp)
    if (pevent->OSEventCnt > 0) {                     /* If sem. is positive, resource available ...   */
  84fbbc:	e0bffd17 	ldw	r2,-12(fp)
  84fbc0:	1080020b 	ldhu	r2,8(r2)
  84fbc4:	10bfffcc 	andi	r2,r2,65535
  84fbc8:	10000d26 	beq	r2,zero,84fc00 <OSSemPend+0x104>
        pevent->OSEventCnt--;                         /* ... decrement semaphore only if positive.     */
  84fbcc:	e0bffd17 	ldw	r2,-12(fp)
  84fbd0:	1080020b 	ldhu	r2,8(r2)
  84fbd4:	10bfffc4 	addi	r2,r2,-1
  84fbd8:	1007883a 	mov	r3,r2
  84fbdc:	e0bffd17 	ldw	r2,-12(fp)
  84fbe0:	10c0020d 	sth	r3,8(r2)
  84fbe4:	e0bff717 	ldw	r2,-36(fp)
  84fbe8:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84fbec:	e0bff817 	ldw	r2,-32(fp)
  84fbf0:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_NONE;
  84fbf4:	e0bfff17 	ldw	r2,-4(fp)
  84fbf8:	10000005 	stb	zero,0(r2)
        return;
  84fbfc:	00003d06 	br	84fcf4 <OSSemPend+0x1f8>
    }
                                                      /* Otherwise, must wait until event occurs       */
    OSTCBCur->OSTCBStat     |= OS_STAT_SEM;           /* Resource not available, pend on semaphore     */
  84fc00:	d0a0b217 	ldw	r2,-32056(gp)
  84fc04:	d0e0b217 	ldw	r3,-32056(gp)
  84fc08:	18c00c03 	ldbu	r3,48(r3)
  84fc0c:	18c00054 	ori	r3,r3,1
  84fc10:	10c00c05 	stb	r3,48(r2)
    OSTCBCur->OSTCBStatPend  = OS_STAT_PEND_OK;
  84fc14:	d0a0b217 	ldw	r2,-32056(gp)
  84fc18:	10000c45 	stb	zero,49(r2)
    OSTCBCur->OSTCBDly       = timeout;               /* Store pend timeout in TCB                     */
  84fc1c:	d0a0b217 	ldw	r2,-32056(gp)
  84fc20:	e0fffe0b 	ldhu	r3,-8(fp)
  84fc24:	10c00b8d 	sth	r3,46(r2)
    OS_EventTaskWait(pevent);                         /* Suspend task until event or timeout occurs    */
  84fc28:	e13ffd17 	ldw	r4,-12(fp)
  84fc2c:	084b6a40 	call	84b6a4 <OS_EventTaskWait>
  84fc30:	e0bff717 	ldw	r2,-36(fp)
  84fc34:	e0bffb15 	stw	r2,-20(fp)
  84fc38:	e0bffb17 	ldw	r2,-20(fp)
  84fc3c:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    OS_Sched();                                       /* Find next highest priority task ready         */
  84fc40:	084bf580 	call	84bf58 <OS_Sched>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84fc44:	0005303a 	rdctl	r2,status
  84fc48:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84fc4c:	e0fff917 	ldw	r3,-28(fp)
  84fc50:	00bfff84 	movi	r2,-2
  84fc54:	1884703a 	and	r2,r3,r2
  84fc58:	1001703a 	wrctl	status,r2
  
  return context;
  84fc5c:	e0bff917 	ldw	r2,-28(fp)
    OS_ENTER_CRITICAL();
  84fc60:	e0bff715 	stw	r2,-36(fp)
    switch (OSTCBCur->OSTCBStatPend) {                /* See if we timed-out or aborted                */
  84fc64:	d0a0b217 	ldw	r2,-32056(gp)
  84fc68:	10800c43 	ldbu	r2,49(r2)
  84fc6c:	10803fcc 	andi	r2,r2,255
  84fc70:	10000326 	beq	r2,zero,84fc80 <OSSemPend+0x184>
  84fc74:	108000a0 	cmpeqi	r2,r2,2
  84fc78:	1000041e 	bne	r2,zero,84fc8c <OSSemPend+0x190>
  84fc7c:	00000706 	br	84fc9c <OSSemPend+0x1a0>
        case OS_STAT_PEND_OK:
             *perr = OS_ERR_NONE;
  84fc80:	e0bfff17 	ldw	r2,-4(fp)
  84fc84:	10000005 	stb	zero,0(r2)
             break;
  84fc88:	00000c06 	br	84fcbc <OSSemPend+0x1c0>

        case OS_STAT_PEND_ABORT:
             *perr = OS_ERR_PEND_ABORT;               /* Indicate that we aborted                      */
  84fc8c:	e0bfff17 	ldw	r2,-4(fp)
  84fc90:	00c00384 	movi	r3,14
  84fc94:	10c00005 	stb	r3,0(r2)
             break;
  84fc98:	00000806 	br	84fcbc <OSSemPend+0x1c0>

        case OS_STAT_PEND_TO:
        default:        
             OS_EventTaskRemove(OSTCBCur, pevent);
  84fc9c:	d0a0b217 	ldw	r2,-32056(gp)
  84fca0:	e17ffd17 	ldw	r5,-12(fp)
  84fca4:	1009883a 	mov	r4,r2
  84fca8:	084b9040 	call	84b904 <OS_EventTaskRemove>
             *perr = OS_ERR_TIMEOUT;                  /* Indicate that we didn't get event within TO   */
  84fcac:	e0bfff17 	ldw	r2,-4(fp)
  84fcb0:	00c00284 	movi	r3,10
  84fcb4:	10c00005 	stb	r3,0(r2)
             break;
  84fcb8:	0001883a 	nop
    }
    OSTCBCur->OSTCBStat          =  OS_STAT_RDY;      /* Set   task  status to ready                   */
  84fcbc:	d0a0b217 	ldw	r2,-32056(gp)
  84fcc0:	10000c05 	stb	zero,48(r2)
    OSTCBCur->OSTCBStatPend      =  OS_STAT_PEND_OK;  /* Clear pend  status                            */
  84fcc4:	d0a0b217 	ldw	r2,-32056(gp)
  84fcc8:	10000c45 	stb	zero,49(r2)
    OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;    /* Clear event pointers                          */
  84fccc:	d0a0b217 	ldw	r2,-32056(gp)
  84fcd0:	10000715 	stw	zero,28(r2)
#if (OS_EVENT_MULTI_EN > 0)
    OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)0;
  84fcd4:	d0a0b217 	ldw	r2,-32056(gp)
  84fcd8:	10000815 	stw	zero,32(r2)
  84fcdc:	e0bff717 	ldw	r2,-36(fp)
  84fce0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84fce4:	e0bffa17 	ldw	r2,-24(fp)
  84fce8:	1001703a 	wrctl	status,r2
  84fcec:	00000106 	br	84fcf4 <OSSemPend+0x1f8>



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                         /* Validate 'perr'                               */
        return;
  84fcf0:	0001883a 	nop
    OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;    /* Clear event pointers                          */
#if (OS_EVENT_MULTI_EN > 0)
    OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)0;
#endif
    OS_EXIT_CRITICAL();
}
  84fcf4:	e037883a 	mov	sp,fp
  84fcf8:	dfc00117 	ldw	ra,4(sp)
  84fcfc:	df000017 	ldw	fp,0(sp)
  84fd00:	dec00204 	addi	sp,sp,8
  84fd04:	f800283a 	ret

0084fd08 <OSSemPendAbort>:
*********************************************************************************************************
*/

#if OS_SEM_PEND_ABORT_EN > 0
INT8U  OSSemPendAbort (OS_EVENT *pevent, INT8U opt, INT8U *perr)
{
  84fd08:	defff604 	addi	sp,sp,-40
  84fd0c:	dfc00915 	stw	ra,36(sp)
  84fd10:	df000815 	stw	fp,32(sp)
  84fd14:	df000804 	addi	fp,sp,32
  84fd18:	e13ffd15 	stw	r4,-12(fp)
  84fd1c:	2805883a 	mov	r2,r5
  84fd20:	e1bfff15 	stw	r6,-4(fp)
  84fd24:	e0bffe05 	stb	r2,-8(fp)
    INT8U      nbr_tasks;
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84fd28:	e03ff915 	stw	zero,-28(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                         /* Validate 'perr'                               */
  84fd2c:	e0bfff17 	ldw	r2,-4(fp)
  84fd30:	1000021e 	bne	r2,zero,84fd3c <OSSemPendAbort+0x34>
        return (0);
  84fd34:	0005883a 	mov	r2,zero
  84fd38:	00004906 	br	84fe60 <OSSemPendAbort+0x158>
    }
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  84fd3c:	e0bffd17 	ldw	r2,-12(fp)
  84fd40:	1000051e 	bne	r2,zero,84fd58 <OSSemPendAbort+0x50>
        *perr = OS_ERR_PEVENT_NULL;
  84fd44:	e0bfff17 	ldw	r2,-4(fp)
  84fd48:	00c00104 	movi	r3,4
  84fd4c:	10c00005 	stb	r3,0(r2)
        return (0);
  84fd50:	0005883a 	mov	r2,zero
  84fd54:	00004206 	br	84fe60 <OSSemPendAbort+0x158>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_SEM) {   /* Validate event block type                     */
  84fd58:	e0bffd17 	ldw	r2,-12(fp)
  84fd5c:	10800003 	ldbu	r2,0(r2)
  84fd60:	10803fcc 	andi	r2,r2,255
  84fd64:	108000e0 	cmpeqi	r2,r2,3
  84fd68:	1000051e 	bne	r2,zero,84fd80 <OSSemPendAbort+0x78>
        *perr = OS_ERR_EVENT_TYPE;
  84fd6c:	e0bfff17 	ldw	r2,-4(fp)
  84fd70:	00c00044 	movi	r3,1
  84fd74:	10c00005 	stb	r3,0(r2)
        return (0);
  84fd78:	0005883a 	mov	r2,zero
  84fd7c:	00003806 	br	84fe60 <OSSemPendAbort+0x158>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84fd80:	0005303a 	rdctl	r2,status
  84fd84:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84fd88:	e0fffc17 	ldw	r3,-16(fp)
  84fd8c:	00bfff84 	movi	r2,-2
  84fd90:	1884703a 	and	r2,r3,r2
  84fd94:	1001703a 	wrctl	status,r2
  
  return context;
  84fd98:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  84fd9c:	e0bff915 	stw	r2,-28(fp)
    if (pevent->OSEventGrp != 0) {                    /* See if any task waiting on semaphore?         */
  84fda0:	e0bffd17 	ldw	r2,-12(fp)
  84fda4:	10800283 	ldbu	r2,10(r2)
  84fda8:	10803fcc 	andi	r2,r2,255
  84fdac:	10002526 	beq	r2,zero,84fe44 <OSSemPendAbort+0x13c>
        nbr_tasks = 0;
  84fdb0:	e03ff805 	stb	zero,-32(fp)
        switch (opt) {
  84fdb4:	e0bffe03 	ldbu	r2,-8(fp)
  84fdb8:	10800060 	cmpeqi	r2,r2,1
  84fdbc:	10000e26 	beq	r2,zero,84fdf8 <OSSemPendAbort+0xf0>
            case OS_PEND_OPT_BROADCAST:               /* Do we need to abort ALL waiting tasks?        */
                 while (pevent->OSEventGrp != 0) {    /* Yes, ready ALL tasks waiting on semaphore     */
  84fdc0:	00000806 	br	84fde4 <OSSemPendAbort+0xdc>
                     (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_SEM, OS_STAT_PEND_ABORT);
  84fdc4:	01c00084 	movi	r7,2
  84fdc8:	01800044 	movi	r6,1
  84fdcc:	000b883a 	mov	r5,zero
  84fdd0:	e13ffd17 	ldw	r4,-12(fp)
  84fdd4:	084b50c0 	call	84b50c <OS_EventTaskRdy>
                     nbr_tasks++;
  84fdd8:	e0bff803 	ldbu	r2,-32(fp)
  84fddc:	10800044 	addi	r2,r2,1
  84fde0:	e0bff805 	stb	r2,-32(fp)
    OS_ENTER_CRITICAL();
    if (pevent->OSEventGrp != 0) {                    /* See if any task waiting on semaphore?         */
        nbr_tasks = 0;
        switch (opt) {
            case OS_PEND_OPT_BROADCAST:               /* Do we need to abort ALL waiting tasks?        */
                 while (pevent->OSEventGrp != 0) {    /* Yes, ready ALL tasks waiting on semaphore     */
  84fde4:	e0bffd17 	ldw	r2,-12(fp)
  84fde8:	10800283 	ldbu	r2,10(r2)
  84fdec:	10803fcc 	andi	r2,r2,255
  84fdf0:	103ff41e 	bne	r2,zero,84fdc4 <__alt_mem_epcs_flash_controller_0+0xff846dc4>
                     (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_SEM, OS_STAT_PEND_ABORT);
                     nbr_tasks++;
                 }
                 break;
  84fdf4:	00000906 	br	84fe1c <OSSemPendAbort+0x114>
                 
            case OS_PEND_OPT_NONE:
            default:                                  /* No,  ready HPT       waiting on semaphore     */
                 (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_SEM, OS_STAT_PEND_ABORT);
  84fdf8:	01c00084 	movi	r7,2
  84fdfc:	01800044 	movi	r6,1
  84fe00:	000b883a 	mov	r5,zero
  84fe04:	e13ffd17 	ldw	r4,-12(fp)
  84fe08:	084b50c0 	call	84b50c <OS_EventTaskRdy>
                 nbr_tasks++;
  84fe0c:	e0bff803 	ldbu	r2,-32(fp)
  84fe10:	10800044 	addi	r2,r2,1
  84fe14:	e0bff805 	stb	r2,-32(fp)
                 break;
  84fe18:	0001883a 	nop
  84fe1c:	e0bff917 	ldw	r2,-28(fp)
  84fe20:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84fe24:	e0bffa17 	ldw	r2,-24(fp)
  84fe28:	1001703a 	wrctl	status,r2
        }
        OS_EXIT_CRITICAL();
        OS_Sched();                                   /* Find HPT ready to run                         */
  84fe2c:	084bf580 	call	84bf58 <OS_Sched>
        *perr = OS_ERR_PEND_ABORT;
  84fe30:	e0bfff17 	ldw	r2,-4(fp)
  84fe34:	00c00384 	movi	r3,14
  84fe38:	10c00005 	stb	r3,0(r2)
        return (nbr_tasks);
  84fe3c:	e0bff803 	ldbu	r2,-32(fp)
  84fe40:	00000706 	br	84fe60 <OSSemPendAbort+0x158>
  84fe44:	e0bff917 	ldw	r2,-28(fp)
  84fe48:	e0bffb15 	stw	r2,-20(fp)
  84fe4c:	e0bffb17 	ldw	r2,-20(fp)
  84fe50:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  84fe54:	e0bfff17 	ldw	r2,-4(fp)
  84fe58:	10000005 	stb	zero,0(r2)
    return (0);                                       /* No tasks waiting on semaphore                 */
  84fe5c:	0005883a 	mov	r2,zero
}
  84fe60:	e037883a 	mov	sp,fp
  84fe64:	dfc00117 	ldw	ra,4(sp)
  84fe68:	df000017 	ldw	fp,0(sp)
  84fe6c:	dec00204 	addi	sp,sp,8
  84fe70:	f800283a 	ret

0084fe74 <OSSemPost>:
*              OS_ERR_PEVENT_NULL  If 'pevent' is a NULL pointer.
*********************************************************************************************************
*/

INT8U  OSSemPost (OS_EVENT *pevent)
{
  84fe74:	defff804 	addi	sp,sp,-32
  84fe78:	dfc00715 	stw	ra,28(sp)
  84fe7c:	df000615 	stw	fp,24(sp)
  84fe80:	df000604 	addi	fp,sp,24
  84fe84:	e13fff15 	stw	r4,-4(fp)
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  84fe88:	e03ffa15 	stw	zero,-24(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  84fe8c:	e0bfff17 	ldw	r2,-4(fp)
  84fe90:	1000021e 	bne	r2,zero,84fe9c <OSSemPost+0x28>
        return (OS_ERR_PEVENT_NULL);
  84fe94:	00800104 	movi	r2,4
  84fe98:	00003506 	br	84ff70 <OSSemPost+0xfc>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_SEM) {   /* Validate event block type                     */
  84fe9c:	e0bfff17 	ldw	r2,-4(fp)
  84fea0:	10800003 	ldbu	r2,0(r2)
  84fea4:	10803fcc 	andi	r2,r2,255
  84fea8:	108000e0 	cmpeqi	r2,r2,3
  84feac:	1000021e 	bne	r2,zero,84feb8 <OSSemPost+0x44>
        return (OS_ERR_EVENT_TYPE);
  84feb0:	00800044 	movi	r2,1
  84feb4:	00002e06 	br	84ff70 <OSSemPost+0xfc>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84feb8:	0005303a 	rdctl	r2,status
  84febc:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84fec0:	e0fffe17 	ldw	r3,-8(fp)
  84fec4:	00bfff84 	movi	r2,-2
  84fec8:	1884703a 	and	r2,r3,r2
  84fecc:	1001703a 	wrctl	status,r2
  
  return context;
  84fed0:	e0bffe17 	ldw	r2,-8(fp)
    }
    OS_ENTER_CRITICAL();
  84fed4:	e0bffa15 	stw	r2,-24(fp)
    if (pevent->OSEventGrp != 0) {                    /* See if any task waiting for semaphore         */
  84fed8:	e0bfff17 	ldw	r2,-4(fp)
  84fedc:	10800283 	ldbu	r2,10(r2)
  84fee0:	10803fcc 	andi	r2,r2,255
  84fee4:	10000c26 	beq	r2,zero,84ff18 <OSSemPost+0xa4>
                                                      /* Ready HPT waiting on event                    */
        (void)OS_EventTaskRdy(pevent, (void *)0, OS_STAT_SEM, OS_STAT_PEND_OK);
  84fee8:	000f883a 	mov	r7,zero
  84feec:	01800044 	movi	r6,1
  84fef0:	000b883a 	mov	r5,zero
  84fef4:	e13fff17 	ldw	r4,-4(fp)
  84fef8:	084b50c0 	call	84b50c <OS_EventTaskRdy>
  84fefc:	e0bffa17 	ldw	r2,-24(fp)
  84ff00:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  84ff04:	e0bffb17 	ldw	r2,-20(fp)
  84ff08:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        OS_Sched();                                   /* Find HPT ready to run                         */
  84ff0c:	084bf580 	call	84bf58 <OS_Sched>
        return (OS_ERR_NONE);
  84ff10:	0005883a 	mov	r2,zero
  84ff14:	00001606 	br	84ff70 <OSSemPost+0xfc>
    }
    if (pevent->OSEventCnt < 65535u) {                /* Make sure semaphore will not overflow         */
  84ff18:	e0bfff17 	ldw	r2,-4(fp)
  84ff1c:	1080020b 	ldhu	r2,8(r2)
  84ff20:	10ffffcc 	andi	r3,r2,65535
  84ff24:	00bfffd4 	movui	r2,65535
  84ff28:	18800c26 	beq	r3,r2,84ff5c <OSSemPost+0xe8>
        pevent->OSEventCnt++;                         /* Increment semaphore count to register event   */
  84ff2c:	e0bfff17 	ldw	r2,-4(fp)
  84ff30:	1080020b 	ldhu	r2,8(r2)
  84ff34:	10800044 	addi	r2,r2,1
  84ff38:	1007883a 	mov	r3,r2
  84ff3c:	e0bfff17 	ldw	r2,-4(fp)
  84ff40:	10c0020d 	sth	r3,8(r2)
  84ff44:	e0bffa17 	ldw	r2,-24(fp)
  84ff48:	e0bffc15 	stw	r2,-16(fp)
  84ff4c:	e0bffc17 	ldw	r2,-16(fp)
  84ff50:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_NONE);
  84ff54:	0005883a 	mov	r2,zero
  84ff58:	00000506 	br	84ff70 <OSSemPost+0xfc>
  84ff5c:	e0bffa17 	ldw	r2,-24(fp)
  84ff60:	e0bffd15 	stw	r2,-12(fp)
  84ff64:	e0bffd17 	ldw	r2,-12(fp)
  84ff68:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();                               /* Semaphore value has reached its maximum       */
    return (OS_ERR_SEM_OVF);
  84ff6c:	00800c84 	movi	r2,50
}
  84ff70:	e037883a 	mov	sp,fp
  84ff74:	dfc00117 	ldw	ra,4(sp)
  84ff78:	df000017 	ldw	fp,0(sp)
  84ff7c:	dec00204 	addi	sp,sp,8
  84ff80:	f800283a 	ret

0084ff84 <OSSemQuery>:
*********************************************************************************************************
*/

#if OS_SEM_QUERY_EN > 0
INT8U  OSSemQuery (OS_EVENT *pevent, OS_SEM_DATA *p_sem_data)
{
  84ff84:	defff704 	addi	sp,sp,-36
  84ff88:	df000815 	stw	fp,32(sp)
  84ff8c:	df000804 	addi	fp,sp,32
  84ff90:	e13ffe15 	stw	r4,-8(fp)
  84ff94:	e17fff15 	stw	r5,-4(fp)
    INT16U    *psrc;
    INT16U    *pdest;
#endif
    INT8U      i;
#if OS_CRITICAL_METHOD == 3                                /* Allocate storage for CPU status register */
    OS_CPU_SR  cpu_sr = 0;
  84ff98:	e03ffb15 	stw	zero,-20(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (pevent == (OS_EVENT *)0) {                         /* Validate 'pevent'                        */
  84ff9c:	e0bffe17 	ldw	r2,-8(fp)
  84ffa0:	1000021e 	bne	r2,zero,84ffac <OSSemQuery+0x28>
        return (OS_ERR_PEVENT_NULL);
  84ffa4:	00800104 	movi	r2,4
  84ffa8:	00003606 	br	850084 <OSSemQuery+0x100>
    }
    if (p_sem_data == (OS_SEM_DATA *)0) {                  /* Validate 'p_sem_data'                    */
  84ffac:	e0bfff17 	ldw	r2,-4(fp)
  84ffb0:	1000021e 	bne	r2,zero,84ffbc <OSSemQuery+0x38>
        return (OS_ERR_PDATA_NULL);
  84ffb4:	00800244 	movi	r2,9
  84ffb8:	00003206 	br	850084 <OSSemQuery+0x100>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_SEM) {        /* Validate event block type                */
  84ffbc:	e0bffe17 	ldw	r2,-8(fp)
  84ffc0:	10800003 	ldbu	r2,0(r2)
  84ffc4:	10803fcc 	andi	r2,r2,255
  84ffc8:	108000e0 	cmpeqi	r2,r2,3
  84ffcc:	1000021e 	bne	r2,zero,84ffd8 <OSSemQuery+0x54>
        return (OS_ERR_EVENT_TYPE);
  84ffd0:	00800044 	movi	r2,1
  84ffd4:	00002b06 	br	850084 <OSSemQuery+0x100>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  84ffd8:	0005303a 	rdctl	r2,status
  84ffdc:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  84ffe0:	e0fffd17 	ldw	r3,-12(fp)
  84ffe4:	00bfff84 	movi	r2,-2
  84ffe8:	1884703a 	and	r2,r3,r2
  84ffec:	1001703a 	wrctl	status,r2
  
  return context;
  84fff0:	e0bffd17 	ldw	r2,-12(fp)
    }
    OS_ENTER_CRITICAL();
  84fff4:	e0bffb15 	stw	r2,-20(fp)
    p_sem_data->OSEventGrp = pevent->OSEventGrp;           /* Copy message mailbox wait list           */
  84fff8:	e0bffe17 	ldw	r2,-8(fp)
  84fffc:	10c00283 	ldbu	r3,10(r2)
  850000:	e0bfff17 	ldw	r2,-4(fp)
  850004:	10c00145 	stb	r3,5(r2)
    psrc                   = &pevent->OSEventTbl[0];
  850008:	e0bffe17 	ldw	r2,-8(fp)
  85000c:	108002c4 	addi	r2,r2,11
  850010:	e0bff815 	stw	r2,-32(fp)
    pdest                  = &p_sem_data->OSEventTbl[0];
  850014:	e0bfff17 	ldw	r2,-4(fp)
  850018:	10800084 	addi	r2,r2,2
  85001c:	e0bff915 	stw	r2,-28(fp)
    for (i = 0; i < OS_EVENT_TBL_SIZE; i++) {
  850020:	e03ffa05 	stb	zero,-24(fp)
  850024:	00000b06 	br	850054 <OSSemQuery+0xd0>
        *pdest++ = *psrc++;
  850028:	e0bff917 	ldw	r2,-28(fp)
  85002c:	10c00044 	addi	r3,r2,1
  850030:	e0fff915 	stw	r3,-28(fp)
  850034:	e0fff817 	ldw	r3,-32(fp)
  850038:	19000044 	addi	r4,r3,1
  85003c:	e13ff815 	stw	r4,-32(fp)
  850040:	18c00003 	ldbu	r3,0(r3)
  850044:	10c00005 	stb	r3,0(r2)
    }
    OS_ENTER_CRITICAL();
    p_sem_data->OSEventGrp = pevent->OSEventGrp;           /* Copy message mailbox wait list           */
    psrc                   = &pevent->OSEventTbl[0];
    pdest                  = &p_sem_data->OSEventTbl[0];
    for (i = 0; i < OS_EVENT_TBL_SIZE; i++) {
  850048:	e0bffa03 	ldbu	r2,-24(fp)
  85004c:	10800044 	addi	r2,r2,1
  850050:	e0bffa05 	stb	r2,-24(fp)
  850054:	e0bffa03 	ldbu	r2,-24(fp)
  850058:	108000f0 	cmpltui	r2,r2,3
  85005c:	103ff21e 	bne	r2,zero,850028 <__alt_mem_epcs_flash_controller_0+0xff847028>
        *pdest++ = *psrc++;
    }
    p_sem_data->OSCnt = pevent->OSEventCnt;                /* Get semaphore count                      */
  850060:	e0bffe17 	ldw	r2,-8(fp)
  850064:	10c0020b 	ldhu	r3,8(r2)
  850068:	e0bfff17 	ldw	r2,-4(fp)
  85006c:	10c0000d 	sth	r3,0(r2)
  850070:	e0bffb17 	ldw	r2,-20(fp)
  850074:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  850078:	e0bffc17 	ldw	r2,-16(fp)
  85007c:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  850080:	0005883a 	mov	r2,zero
}
  850084:	e037883a 	mov	sp,fp
  850088:	df000017 	ldw	fp,0(sp)
  85008c:	dec00104 	addi	sp,sp,4
  850090:	f800283a 	ret

00850094 <OSSemSet>:
*********************************************************************************************************
*/

#if OS_SEM_SET_EN > 0
void  OSSemSet (OS_EVENT *pevent, INT16U cnt, INT8U *perr)
{
  850094:	defff904 	addi	sp,sp,-28
  850098:	df000615 	stw	fp,24(sp)
  85009c:	df000604 	addi	fp,sp,24
  8500a0:	e13ffd15 	stw	r4,-12(fp)
  8500a4:	2805883a 	mov	r2,r5
  8500a8:	e1bfff15 	stw	r6,-4(fp)
  8500ac:	e0bffe0d 	sth	r2,-8(fp)
#if OS_CRITICAL_METHOD == 3                           /* Allocate storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  8500b0:	e03ffa15 	stw	zero,-24(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                         /* Validate 'perr'                               */
  8500b4:	e0bfff17 	ldw	r2,-4(fp)
  8500b8:	10003126 	beq	r2,zero,850180 <OSSemSet+0xec>
        return;
    }
    if (pevent == (OS_EVENT *)0) {                    /* Validate 'pevent'                             */
  8500bc:	e0bffd17 	ldw	r2,-12(fp)
  8500c0:	1000041e 	bne	r2,zero,8500d4 <OSSemSet+0x40>
        *perr = OS_ERR_PEVENT_NULL;
  8500c4:	e0bfff17 	ldw	r2,-4(fp)
  8500c8:	00c00104 	movi	r3,4
  8500cc:	10c00005 	stb	r3,0(r2)
        return;
  8500d0:	00002c06 	br	850184 <OSSemSet+0xf0>
    }
#endif
    if (pevent->OSEventType != OS_EVENT_TYPE_SEM) {   /* Validate event block type                     */
  8500d4:	e0bffd17 	ldw	r2,-12(fp)
  8500d8:	10800003 	ldbu	r2,0(r2)
  8500dc:	10803fcc 	andi	r2,r2,255
  8500e0:	108000e0 	cmpeqi	r2,r2,3
  8500e4:	1000041e 	bne	r2,zero,8500f8 <OSSemSet+0x64>
        *perr = OS_ERR_EVENT_TYPE;
  8500e8:	e0bfff17 	ldw	r2,-4(fp)
  8500ec:	00c00044 	movi	r3,1
  8500f0:	10c00005 	stb	r3,0(r2)
        return;
  8500f4:	00002306 	br	850184 <OSSemSet+0xf0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8500f8:	0005303a 	rdctl	r2,status
  8500fc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  850100:	e0fffc17 	ldw	r3,-16(fp)
  850104:	00bfff84 	movi	r2,-2
  850108:	1884703a 	and	r2,r3,r2
  85010c:	1001703a 	wrctl	status,r2
  
  return context;
  850110:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  850114:	e0bffa15 	stw	r2,-24(fp)
    *perr = OS_ERR_NONE;
  850118:	e0bfff17 	ldw	r2,-4(fp)
  85011c:	10000005 	stb	zero,0(r2)
    if (pevent->OSEventCnt > 0) {                     /* See if semaphore already has a count          */
  850120:	e0bffd17 	ldw	r2,-12(fp)
  850124:	1080020b 	ldhu	r2,8(r2)
  850128:	10bfffcc 	andi	r2,r2,65535
  85012c:	10000426 	beq	r2,zero,850140 <OSSemSet+0xac>
        pevent->OSEventCnt = cnt;                     /* Yes, set it to the new value specified.       */
  850130:	e0bffd17 	ldw	r2,-12(fp)
  850134:	e0fffe0b 	ldhu	r3,-8(fp)
  850138:	10c0020d 	sth	r3,8(r2)
  85013c:	00000b06 	br	85016c <OSSemSet+0xd8>
    } else {                                          /* No                                            */
        if (pevent->OSEventGrp == 0) {                /*      See if task(s) waiting?                  */
  850140:	e0bffd17 	ldw	r2,-12(fp)
  850144:	10800283 	ldbu	r2,10(r2)
  850148:	10803fcc 	andi	r2,r2,255
  85014c:	1000041e 	bne	r2,zero,850160 <OSSemSet+0xcc>
            pevent->OSEventCnt = cnt;                 /*      No, OK to set the value                  */
  850150:	e0bffd17 	ldw	r2,-12(fp)
  850154:	e0fffe0b 	ldhu	r3,-8(fp)
  850158:	10c0020d 	sth	r3,8(r2)
  85015c:	00000306 	br	85016c <OSSemSet+0xd8>
        } else {
            *perr              = OS_ERR_TASK_WAITING;
  850160:	e0bfff17 	ldw	r2,-4(fp)
  850164:	00c01244 	movi	r3,73
  850168:	10c00005 	stb	r3,0(r2)
  85016c:	e0bffa17 	ldw	r2,-24(fp)
  850170:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  850174:	e0bffb17 	ldw	r2,-20(fp)
  850178:	1001703a 	wrctl	status,r2
  85017c:	00000106 	br	850184 <OSSemSet+0xf0>



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                         /* Validate 'perr'                               */
        return;
  850180:	0001883a 	nop
        } else {
            *perr              = OS_ERR_TASK_WAITING;
        }
    }
    OS_EXIT_CRITICAL();
}
  850184:	e037883a 	mov	sp,fp
  850188:	df000017 	ldw	fp,0(sp)
  85018c:	dec00104 	addi	sp,sp,4
  850190:	f800283a 	ret

00850194 <OSTaskChangePrio>:
*********************************************************************************************************
*/

#if OS_TASK_CHANGE_PRIO_EN > 0
INT8U  OSTaskChangePrio (INT8U oldprio, INT8U newprio)
{
  850194:	defff104 	addi	sp,sp,-60
  850198:	dfc00e15 	stw	ra,56(sp)
  85019c:	df000d15 	stw	fp,52(sp)
  8501a0:	df000d04 	addi	fp,sp,52
  8501a4:	2007883a 	mov	r3,r4
  8501a8:	2805883a 	mov	r2,r5
  8501ac:	e0fffe05 	stb	r3,-8(fp)
  8501b0:	e0bfff05 	stb	r2,-4(fp)
    INT16U     bitx_new;
    INT16U     bity_old;
    INT16U     bitx_old;
#endif
#if OS_CRITICAL_METHOD == 3
    OS_CPU_SR  cpu_sr = 0;                                  /* Storage for CPU status register         */
  8501b4:	e03ff515 	stw	zero,-44(fp)
#endif


/*$PAGE*/
#if OS_ARG_CHK_EN > 0
    if (oldprio >= OS_LOWEST_PRIO) {
  8501b8:	e0bffe03 	ldbu	r2,-8(fp)
  8501bc:	10800530 	cmpltui	r2,r2,20
  8501c0:	1000051e 	bne	r2,zero,8501d8 <OSTaskChangePrio+0x44>
        if (oldprio != OS_PRIO_SELF) {
  8501c4:	e0bffe03 	ldbu	r2,-8(fp)
  8501c8:	10803fe0 	cmpeqi	r2,r2,255
  8501cc:	1000021e 	bne	r2,zero,8501d8 <OSTaskChangePrio+0x44>
            return (OS_ERR_PRIO_INVALID);
  8501d0:	00800a84 	movi	r2,42
  8501d4:	00012606 	br	850670 <OSTaskChangePrio+0x4dc>
        }
    }
    if (newprio >= OS_LOWEST_PRIO) {
  8501d8:	e0bfff03 	ldbu	r2,-4(fp)
  8501dc:	10800530 	cmpltui	r2,r2,20
  8501e0:	1000021e 	bne	r2,zero,8501ec <OSTaskChangePrio+0x58>
        return (OS_ERR_PRIO_INVALID);
  8501e4:	00800a84 	movi	r2,42
  8501e8:	00012106 	br	850670 <OSTaskChangePrio+0x4dc>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8501ec:	0005303a 	rdctl	r2,status
  8501f0:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8501f4:	e0fffd17 	ldw	r3,-12(fp)
  8501f8:	00bfff84 	movi	r2,-2
  8501fc:	1884703a 	and	r2,r3,r2
  850200:	1001703a 	wrctl	status,r2
  
  return context;
  850204:	e0bffd17 	ldw	r2,-12(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  850208:	e0bff515 	stw	r2,-44(fp)
    if (OSTCBPrioTbl[newprio] != (OS_TCB *)0) {             /* New priority must not already exist     */
  85020c:	e0ffff03 	ldbu	r3,-4(fp)
  850210:	008021b4 	movhi	r2,134
  850214:	10950304 	addi	r2,r2,21516
  850218:	18c7883a 	add	r3,r3,r3
  85021c:	18c7883a 	add	r3,r3,r3
  850220:	10c5883a 	add	r2,r2,r3
  850224:	10800017 	ldw	r2,0(r2)
  850228:	10000626 	beq	r2,zero,850244 <OSTaskChangePrio+0xb0>
  85022c:	e0bff517 	ldw	r2,-44(fp)
  850230:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  850234:	e0bff617 	ldw	r2,-40(fp)
  850238:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_PRIO_EXIST);
  85023c:	00800a04 	movi	r2,40
  850240:	00010b06 	br	850670 <OSTaskChangePrio+0x4dc>
    }
    if (oldprio == OS_PRIO_SELF) {                          /* See if changing self                    */
  850244:	e0bffe03 	ldbu	r2,-8(fp)
  850248:	10803fd8 	cmpnei	r2,r2,255
  85024c:	1000031e 	bne	r2,zero,85025c <OSTaskChangePrio+0xc8>
        oldprio = OSTCBCur->OSTCBPrio;                      /* Yes, get priority                       */
  850250:	d0a0b217 	ldw	r2,-32056(gp)
  850254:	10800c83 	ldbu	r2,50(r2)
  850258:	e0bffe05 	stb	r2,-8(fp)
    }
    ptcb = OSTCBPrioTbl[oldprio];
  85025c:	e0fffe03 	ldbu	r3,-8(fp)
  850260:	008021b4 	movhi	r2,134
  850264:	10950304 	addi	r2,r2,21516
  850268:	18c7883a 	add	r3,r3,r3
  85026c:	18c7883a 	add	r3,r3,r3
  850270:	10c5883a 	add	r2,r2,r3
  850274:	10800017 	ldw	r2,0(r2)
  850278:	e0bff815 	stw	r2,-32(fp)
    if (ptcb == (OS_TCB *)0) {                              /* Does task to change exist?              */
  85027c:	e0bff817 	ldw	r2,-32(fp)
  850280:	1000061e 	bne	r2,zero,85029c <OSTaskChangePrio+0x108>
  850284:	e0bff517 	ldw	r2,-44(fp)
  850288:	e0bff715 	stw	r2,-36(fp)
  85028c:	e0bff717 	ldw	r2,-36(fp)
  850290:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();                                 /* No, can't change its priority!          */
        return (OS_ERR_PRIO);
  850294:	00800a44 	movi	r2,41
  850298:	0000f506 	br	850670 <OSTaskChangePrio+0x4dc>
    }
    if (ptcb == OS_TCB_RESERVED) {                          /* Is task assigned to Mutex               */
  85029c:	e0bff817 	ldw	r2,-32(fp)
  8502a0:	10800058 	cmpnei	r2,r2,1
  8502a4:	1000061e 	bne	r2,zero,8502c0 <OSTaskChangePrio+0x12c>
  8502a8:	e0bff517 	ldw	r2,-44(fp)
  8502ac:	e0bff915 	stw	r2,-28(fp)
  8502b0:	e0bff917 	ldw	r2,-28(fp)
  8502b4:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();                                 /* No, can't change its priority!          */
        return (OS_ERR_TASK_NOT_EXIST);
  8502b8:	008010c4 	movi	r2,67
  8502bc:	0000ec06 	br	850670 <OSTaskChangePrio+0x4dc>
    }
#if OS_LOWEST_PRIO <= 63
    y_new                 = (INT8U)(newprio >> 3);          /* Yes, compute new TCB fields             */
  8502c0:	e0bfff03 	ldbu	r2,-4(fp)
  8502c4:	1004d0fa 	srli	r2,r2,3
  8502c8:	e0bffb05 	stb	r2,-20(fp)
    x_new                 = (INT8U)(newprio & 0x07);
  8502cc:	e0bfff03 	ldbu	r2,-4(fp)
  8502d0:	108001cc 	andi	r2,r2,7
  8502d4:	e0bffb45 	stb	r2,-19(fp)
    bity_new              = (INT8U)(1 << y_new);
  8502d8:	e0bffb03 	ldbu	r2,-20(fp)
  8502dc:	00c00044 	movi	r3,1
  8502e0:	1884983a 	sll	r2,r3,r2
  8502e4:	e0bffb85 	stb	r2,-18(fp)
    bitx_new              = (INT8U)(1 << x_new);
  8502e8:	e0bffb43 	ldbu	r2,-19(fp)
  8502ec:	00c00044 	movi	r3,1
  8502f0:	1884983a 	sll	r2,r3,r2
  8502f4:	e0bffbc5 	stb	r2,-17(fp)
    x_new                 = (INT8U)( newprio & 0x0F);
    bity_new              = (INT16U)(1 << y_new);
    bitx_new              = (INT16U)(1 << x_new);
#endif

    OSTCBPrioTbl[oldprio] = (OS_TCB *)0;                    /* Remove TCB from old priority            */
  8502f8:	e0fffe03 	ldbu	r3,-8(fp)
  8502fc:	008021b4 	movhi	r2,134
  850300:	10950304 	addi	r2,r2,21516
  850304:	18c7883a 	add	r3,r3,r3
  850308:	18c7883a 	add	r3,r3,r3
  85030c:	10c5883a 	add	r2,r2,r3
  850310:	10000015 	stw	zero,0(r2)
    OSTCBPrioTbl[newprio] =  ptcb;                          /* Place pointer to TCB @ new priority     */
  850314:	e0ffff03 	ldbu	r3,-4(fp)
  850318:	008021b4 	movhi	r2,134
  85031c:	10950304 	addi	r2,r2,21516
  850320:	18c7883a 	add	r3,r3,r3
  850324:	18c7883a 	add	r3,r3,r3
  850328:	10c5883a 	add	r2,r2,r3
  85032c:	e0fff817 	ldw	r3,-32(fp)
  850330:	10c00015 	stw	r3,0(r2)
    y_old                 =  ptcb->OSTCBY;
  850334:	e0bff817 	ldw	r2,-32(fp)
  850338:	10800d03 	ldbu	r2,52(r2)
  85033c:	e0bffc05 	stb	r2,-16(fp)
    bity_old              =  ptcb->OSTCBBitY;
  850340:	e0bff817 	ldw	r2,-32(fp)
  850344:	10800d83 	ldbu	r2,54(r2)
  850348:	e0bffc45 	stb	r2,-15(fp)
    bitx_old              =  ptcb->OSTCBBitX;
  85034c:	e0bff817 	ldw	r2,-32(fp)
  850350:	10800d43 	ldbu	r2,53(r2)
  850354:	e0bffc85 	stb	r2,-14(fp)
    if ((OSRdyTbl[y_old] &   bitx_old) != 0) {              /* If task is ready make it not            */
  850358:	e0fffc03 	ldbu	r3,-16(fp)
  85035c:	d0a0af44 	addi	r2,gp,-32067
  850360:	1885883a 	add	r2,r3,r2
  850364:	10c00003 	ldbu	r3,0(r2)
  850368:	e0bffc83 	ldbu	r2,-14(fp)
  85036c:	1884703a 	and	r2,r3,r2
  850370:	10803fcc 	andi	r2,r2,255
  850374:	10002826 	beq	r2,zero,850418 <OSTaskChangePrio+0x284>
         OSRdyTbl[y_old] &= ~bitx_old;
  850378:	e0fffc03 	ldbu	r3,-16(fp)
  85037c:	e13ffc03 	ldbu	r4,-16(fp)
  850380:	d0a0af44 	addi	r2,gp,-32067
  850384:	2085883a 	add	r2,r4,r2
  850388:	10800003 	ldbu	r2,0(r2)
  85038c:	1009883a 	mov	r4,r2
  850390:	e0bffc83 	ldbu	r2,-14(fp)
  850394:	0084303a 	nor	r2,zero,r2
  850398:	2084703a 	and	r2,r4,r2
  85039c:	1009883a 	mov	r4,r2
  8503a0:	d0a0af44 	addi	r2,gp,-32067
  8503a4:	1885883a 	add	r2,r3,r2
  8503a8:	11000005 	stb	r4,0(r2)
         if (OSRdyTbl[y_old] == 0) {
  8503ac:	e0fffc03 	ldbu	r3,-16(fp)
  8503b0:	d0a0af44 	addi	r2,gp,-32067
  8503b4:	1885883a 	add	r2,r3,r2
  8503b8:	10800003 	ldbu	r2,0(r2)
  8503bc:	10803fcc 	andi	r2,r2,255
  8503c0:	1000061e 	bne	r2,zero,8503dc <OSTaskChangePrio+0x248>
             OSRdyGrp &= ~bity_old;
  8503c4:	e0bffc43 	ldbu	r2,-15(fp)
  8503c8:	0084303a 	nor	r2,zero,r2
  8503cc:	1007883a 	mov	r3,r2
  8503d0:	d0a0af03 	ldbu	r2,-32068(gp)
  8503d4:	1884703a 	and	r2,r3,r2
  8503d8:	d0a0af05 	stb	r2,-32068(gp)
         }
         OSRdyGrp        |= bity_new;                       /* Make new priority ready to run          */
  8503dc:	d0e0af03 	ldbu	r3,-32068(gp)
  8503e0:	e0bffb83 	ldbu	r2,-18(fp)
  8503e4:	1884b03a 	or	r2,r3,r2
  8503e8:	d0a0af05 	stb	r2,-32068(gp)
         OSRdyTbl[y_new] |= bitx_new;
  8503ec:	e0fffb03 	ldbu	r3,-20(fp)
  8503f0:	e13ffb03 	ldbu	r4,-20(fp)
  8503f4:	d0a0af44 	addi	r2,gp,-32067
  8503f8:	2085883a 	add	r2,r4,r2
  8503fc:	11000003 	ldbu	r4,0(r2)
  850400:	e0bffbc3 	ldbu	r2,-17(fp)
  850404:	2084b03a 	or	r2,r4,r2
  850408:	1009883a 	mov	r4,r2
  85040c:	d0a0af44 	addi	r2,gp,-32067
  850410:	1885883a 	add	r2,r3,r2
  850414:	11000005 	stb	r4,0(r2)
    }

#if (OS_EVENT_EN)
    pevent = ptcb->OSTCBEventPtr;
  850418:	e0bff817 	ldw	r2,-32(fp)
  85041c:	10800717 	ldw	r2,28(r2)
  850420:	e0bff315 	stw	r2,-52(fp)
    if (pevent != (OS_EVENT *)0) {
  850424:	e0bff317 	ldw	r2,-52(fp)
  850428:	10003326 	beq	r2,zero,8504f8 <OSTaskChangePrio+0x364>
        pevent->OSEventTbl[y_old] &= ~bitx_old;             /* Remove old task prio from wait list     */
  85042c:	e0bffc03 	ldbu	r2,-16(fp)
  850430:	e0fffc03 	ldbu	r3,-16(fp)
  850434:	e13ff317 	ldw	r4,-52(fp)
  850438:	20c7883a 	add	r3,r4,r3
  85043c:	18c002c4 	addi	r3,r3,11
  850440:	18c00003 	ldbu	r3,0(r3)
  850444:	1809883a 	mov	r4,r3
  850448:	e0fffc83 	ldbu	r3,-14(fp)
  85044c:	00c6303a 	nor	r3,zero,r3
  850450:	20c6703a 	and	r3,r4,r3
  850454:	1809883a 	mov	r4,r3
  850458:	e0fff317 	ldw	r3,-52(fp)
  85045c:	1885883a 	add	r2,r3,r2
  850460:	108002c4 	addi	r2,r2,11
  850464:	11000005 	stb	r4,0(r2)
        if (pevent->OSEventTbl[y_old] == 0) {
  850468:	e0bffc03 	ldbu	r2,-16(fp)
  85046c:	e0fff317 	ldw	r3,-52(fp)
  850470:	1885883a 	add	r2,r3,r2
  850474:	108002c4 	addi	r2,r2,11
  850478:	10800003 	ldbu	r2,0(r2)
  85047c:	10803fcc 	andi	r2,r2,255
  850480:	1000091e 	bne	r2,zero,8504a8 <OSTaskChangePrio+0x314>
            pevent->OSEventGrp    &= ~bity_old;
  850484:	e0bff317 	ldw	r2,-52(fp)
  850488:	10800283 	ldbu	r2,10(r2)
  85048c:	1007883a 	mov	r3,r2
  850490:	e0bffc43 	ldbu	r2,-15(fp)
  850494:	0084303a 	nor	r2,zero,r2
  850498:	1884703a 	and	r2,r3,r2
  85049c:	1007883a 	mov	r3,r2
  8504a0:	e0bff317 	ldw	r2,-52(fp)
  8504a4:	10c00285 	stb	r3,10(r2)
        }
        pevent->OSEventGrp        |= bity_new;              /* Add    new task prio to   wait list     */
  8504a8:	e0bff317 	ldw	r2,-52(fp)
  8504ac:	10c00283 	ldbu	r3,10(r2)
  8504b0:	e0bffb83 	ldbu	r2,-18(fp)
  8504b4:	1884b03a 	or	r2,r3,r2
  8504b8:	1007883a 	mov	r3,r2
  8504bc:	e0bff317 	ldw	r2,-52(fp)
  8504c0:	10c00285 	stb	r3,10(r2)
        pevent->OSEventTbl[y_new] |= bitx_new;
  8504c4:	e0bffb03 	ldbu	r2,-20(fp)
  8504c8:	e0fffb03 	ldbu	r3,-20(fp)
  8504cc:	e13ff317 	ldw	r4,-52(fp)
  8504d0:	20c7883a 	add	r3,r4,r3
  8504d4:	18c002c4 	addi	r3,r3,11
  8504d8:	19000003 	ldbu	r4,0(r3)
  8504dc:	e0fffbc3 	ldbu	r3,-17(fp)
  8504e0:	20c6b03a 	or	r3,r4,r3
  8504e4:	1809883a 	mov	r4,r3
  8504e8:	e0fff317 	ldw	r3,-52(fp)
  8504ec:	1885883a 	add	r2,r3,r2
  8504f0:	108002c4 	addi	r2,r2,11
  8504f4:	11000005 	stb	r4,0(r2)
    }
#if (OS_EVENT_MULTI_EN > 0)
    if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {
  8504f8:	e0bff817 	ldw	r2,-32(fp)
  8504fc:	10800817 	ldw	r2,32(r2)
  850500:	10004226 	beq	r2,zero,85060c <OSTaskChangePrio+0x478>
        pevents =  ptcb->OSTCBEventMultiPtr;
  850504:	e0bff817 	ldw	r2,-32(fp)
  850508:	10800817 	ldw	r2,32(r2)
  85050c:	e0bff415 	stw	r2,-48(fp)
        pevent  = *pevents;
  850510:	e0bff417 	ldw	r2,-48(fp)
  850514:	10800017 	ldw	r2,0(r2)
  850518:	e0bff315 	stw	r2,-52(fp)
        while (pevent != (OS_EVENT *)0) {
  85051c:	00003906 	br	850604 <OSTaskChangePrio+0x470>
            pevent->OSEventTbl[y_old] &= ~bitx_old;         /* Remove old task prio from wait lists    */
  850520:	e0bffc03 	ldbu	r2,-16(fp)
  850524:	e0fffc03 	ldbu	r3,-16(fp)
  850528:	e13ff317 	ldw	r4,-52(fp)
  85052c:	20c7883a 	add	r3,r4,r3
  850530:	18c002c4 	addi	r3,r3,11
  850534:	18c00003 	ldbu	r3,0(r3)
  850538:	1809883a 	mov	r4,r3
  85053c:	e0fffc83 	ldbu	r3,-14(fp)
  850540:	00c6303a 	nor	r3,zero,r3
  850544:	20c6703a 	and	r3,r4,r3
  850548:	1809883a 	mov	r4,r3
  85054c:	e0fff317 	ldw	r3,-52(fp)
  850550:	1885883a 	add	r2,r3,r2
  850554:	108002c4 	addi	r2,r2,11
  850558:	11000005 	stb	r4,0(r2)
            if (pevent->OSEventTbl[y_old] == 0) {
  85055c:	e0bffc03 	ldbu	r2,-16(fp)
  850560:	e0fff317 	ldw	r3,-52(fp)
  850564:	1885883a 	add	r2,r3,r2
  850568:	108002c4 	addi	r2,r2,11
  85056c:	10800003 	ldbu	r2,0(r2)
  850570:	10803fcc 	andi	r2,r2,255
  850574:	1000091e 	bne	r2,zero,85059c <OSTaskChangePrio+0x408>
                pevent->OSEventGrp    &= ~bity_old;
  850578:	e0bff317 	ldw	r2,-52(fp)
  85057c:	10800283 	ldbu	r2,10(r2)
  850580:	1007883a 	mov	r3,r2
  850584:	e0bffc43 	ldbu	r2,-15(fp)
  850588:	0084303a 	nor	r2,zero,r2
  85058c:	1884703a 	and	r2,r3,r2
  850590:	1007883a 	mov	r3,r2
  850594:	e0bff317 	ldw	r2,-52(fp)
  850598:	10c00285 	stb	r3,10(r2)
            }
            pevent->OSEventGrp        |= bity_new;          /* Add    new task prio to   wait lists    */
  85059c:	e0bff317 	ldw	r2,-52(fp)
  8505a0:	10c00283 	ldbu	r3,10(r2)
  8505a4:	e0bffb83 	ldbu	r2,-18(fp)
  8505a8:	1884b03a 	or	r2,r3,r2
  8505ac:	1007883a 	mov	r3,r2
  8505b0:	e0bff317 	ldw	r2,-52(fp)
  8505b4:	10c00285 	stb	r3,10(r2)
            pevent->OSEventTbl[y_new] |= bitx_new;
  8505b8:	e0bffb03 	ldbu	r2,-20(fp)
  8505bc:	e0fffb03 	ldbu	r3,-20(fp)
  8505c0:	e13ff317 	ldw	r4,-52(fp)
  8505c4:	20c7883a 	add	r3,r4,r3
  8505c8:	18c002c4 	addi	r3,r3,11
  8505cc:	19000003 	ldbu	r4,0(r3)
  8505d0:	e0fffbc3 	ldbu	r3,-17(fp)
  8505d4:	20c6b03a 	or	r3,r4,r3
  8505d8:	1809883a 	mov	r4,r3
  8505dc:	e0fff317 	ldw	r3,-52(fp)
  8505e0:	1885883a 	add	r2,r3,r2
  8505e4:	108002c4 	addi	r2,r2,11
  8505e8:	11000005 	stb	r4,0(r2)
            pevents++;
  8505ec:	e0bff417 	ldw	r2,-48(fp)
  8505f0:	10800104 	addi	r2,r2,4
  8505f4:	e0bff415 	stw	r2,-48(fp)
            pevent                     = *pevents;
  8505f8:	e0bff417 	ldw	r2,-48(fp)
  8505fc:	10800017 	ldw	r2,0(r2)
  850600:	e0bff315 	stw	r2,-52(fp)
    }
#if (OS_EVENT_MULTI_EN > 0)
    if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {
        pevents =  ptcb->OSTCBEventMultiPtr;
        pevent  = *pevents;
        while (pevent != (OS_EVENT *)0) {
  850604:	e0bff317 	ldw	r2,-52(fp)
  850608:	103fc51e 	bne	r2,zero,850520 <__alt_mem_epcs_flash_controller_0+0xff847520>
        }
    }
#endif
#endif

    ptcb->OSTCBPrio = newprio;                              /* Set new task priority                   */
  85060c:	e0bff817 	ldw	r2,-32(fp)
  850610:	e0ffff03 	ldbu	r3,-4(fp)
  850614:	10c00c85 	stb	r3,50(r2)
    ptcb->OSTCBY    = y_new;
  850618:	e0bff817 	ldw	r2,-32(fp)
  85061c:	e0fffb03 	ldbu	r3,-20(fp)
  850620:	10c00d05 	stb	r3,52(r2)
    ptcb->OSTCBX    = x_new;
  850624:	e0bff817 	ldw	r2,-32(fp)
  850628:	e0fffb43 	ldbu	r3,-19(fp)
  85062c:	10c00cc5 	stb	r3,51(r2)
    ptcb->OSTCBBitY = bity_new;
  850630:	e0bff817 	ldw	r2,-32(fp)
  850634:	e0fffb83 	ldbu	r3,-18(fp)
  850638:	10c00d85 	stb	r3,54(r2)
    ptcb->OSTCBBitX = bitx_new;
  85063c:	e0bff817 	ldw	r2,-32(fp)
  850640:	e0fffbc3 	ldbu	r3,-17(fp)
  850644:	10c00d45 	stb	r3,53(r2)
  850648:	e0bff517 	ldw	r2,-44(fp)
  85064c:	e0bffa15 	stw	r2,-24(fp)
  850650:	e0bffa17 	ldw	r2,-24(fp)
  850654:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    if (OSRunning == OS_TRUE) {
  850658:	d0a0a343 	ldbu	r2,-32115(gp)
  85065c:	10803fcc 	andi	r2,r2,255
  850660:	10800058 	cmpnei	r2,r2,1
  850664:	1000011e 	bne	r2,zero,85066c <OSTaskChangePrio+0x4d8>
        OS_Sched();                                         /* Find new highest priority task          */
  850668:	084bf580 	call	84bf58 <OS_Sched>
    }
    return (OS_ERR_NONE);
  85066c:	0005883a 	mov	r2,zero
}
  850670:	e037883a 	mov	sp,fp
  850674:	dfc00117 	ldw	ra,4(sp)
  850678:	df000017 	ldw	fp,0(sp)
  85067c:	dec00204 	addi	sp,sp,8
  850680:	f800283a 	ret

00850684 <OSTaskCreate>:
*********************************************************************************************************
*/

#if OS_TASK_CREATE_EN > 0
INT8U  OSTaskCreate (void (*task)(void *p_arg), void *p_arg, OS_STK *ptos, INT8U prio)
{
  850684:	deffee04 	addi	sp,sp,-72
  850688:	dfc01115 	stw	ra,68(sp)
  85068c:	df001015 	stw	fp,64(sp)
  850690:	df001004 	addi	fp,sp,64
  850694:	e13ffc15 	stw	r4,-16(fp)
  850698:	e17ffd15 	stw	r5,-12(fp)
  85069c:	e1bffe15 	stw	r6,-8(fp)
  8506a0:	3805883a 	mov	r2,r7
  8506a4:	e0bfff05 	stb	r2,-4(fp)
    OS_STK    *psp;
    INT8U      err;
#if OS_CRITICAL_METHOD == 3                  /* Allocate storage for CPU status register               */
    OS_CPU_SR  cpu_sr = 0;
  8506a8:	e03ff315 	stw	zero,-52(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (prio > OS_LOWEST_PRIO) {             /* Make sure priority is within allowable range           */
  8506ac:	e0bfff03 	ldbu	r2,-4(fp)
  8506b0:	10800570 	cmpltui	r2,r2,21
  8506b4:	1000021e 	bne	r2,zero,8506c0 <OSTaskCreate+0x3c>
        return (OS_ERR_PRIO_INVALID);
  8506b8:	00800a84 	movi	r2,42
  8506bc:	00005706 	br	85081c <OSTaskCreate+0x198>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8506c0:	0005303a 	rdctl	r2,status
  8506c4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8506c8:	e0fffb17 	ldw	r3,-20(fp)
  8506cc:	00bfff84 	movi	r2,-2
  8506d0:	1884703a 	and	r2,r3,r2
  8506d4:	1001703a 	wrctl	status,r2
  
  return context;
  8506d8:	e0bffb17 	ldw	r2,-20(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  8506dc:	e0bff315 	stw	r2,-52(fp)
    if (OSIntNesting > 0) {                  /* Make sure we don't create the task from within an ISR  */
  8506e0:	d0a0b103 	ldbu	r2,-32060(gp)
  8506e4:	10803fcc 	andi	r2,r2,255
  8506e8:	10000626 	beq	r2,zero,850704 <OSTaskCreate+0x80>
  8506ec:	e0bff317 	ldw	r2,-52(fp)
  8506f0:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8506f4:	e0bff417 	ldw	r2,-48(fp)
  8506f8:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_CREATE_ISR);
  8506fc:	00800f04 	movi	r2,60
  850700:	00004606 	br	85081c <OSTaskCreate+0x198>
    }
    if (OSTCBPrioTbl[prio] == (OS_TCB *)0) { /* Make sure task doesn't already exist at this priority  */
  850704:	e0ffff03 	ldbu	r3,-4(fp)
  850708:	008021b4 	movhi	r2,134
  85070c:	10950304 	addi	r2,r2,21516
  850710:	18c7883a 	add	r3,r3,r3
  850714:	18c7883a 	add	r3,r3,r3
  850718:	10c5883a 	add	r2,r2,r3
  85071c:	10800017 	ldw	r2,0(r2)
  850720:	1000391e 	bne	r2,zero,850808 <OSTaskCreate+0x184>
        OSTCBPrioTbl[prio] = OS_TCB_RESERVED;/* Reserve the priority to prevent others from doing ...  */
  850724:	e0ffff03 	ldbu	r3,-4(fp)
  850728:	008021b4 	movhi	r2,134
  85072c:	10950304 	addi	r2,r2,21516
  850730:	18c7883a 	add	r3,r3,r3
  850734:	18c7883a 	add	r3,r3,r3
  850738:	10c5883a 	add	r2,r2,r3
  85073c:	00c00044 	movi	r3,1
  850740:	10c00015 	stw	r3,0(r2)
  850744:	e0bff317 	ldw	r2,-52(fp)
  850748:	e0bff515 	stw	r2,-44(fp)
  85074c:	e0bff517 	ldw	r2,-44(fp)
  850750:	1001703a 	wrctl	status,r2
                                             /* ... the same thing until task is created.              */
        OS_EXIT_CRITICAL();
        psp = OSTaskStkInit(task, p_arg, ptos, 0);              /* Initialize the task's stack         */
  850754:	000f883a 	mov	r7,zero
  850758:	e1bffe17 	ldw	r6,-8(fp)
  85075c:	e17ffd17 	ldw	r5,-12(fp)
  850760:	e13ffc17 	ldw	r4,-16(fp)
  850764:	08565880 	call	856588 <OSTaskStkInit>
  850768:	e0bff715 	stw	r2,-36(fp)
        err = OS_TCBInit(prio, psp, (OS_STK *)0, 0, 0, (void *)0, 0);
  85076c:	e0bfff03 	ldbu	r2,-4(fp)
  850770:	d8000215 	stw	zero,8(sp)
  850774:	d8000115 	stw	zero,4(sp)
  850778:	d8000015 	stw	zero,0(sp)
  85077c:	000f883a 	mov	r7,zero
  850780:	000d883a 	mov	r6,zero
  850784:	e17ff717 	ldw	r5,-36(fp)
  850788:	1009883a 	mov	r4,r2
  85078c:	084c3580 	call	84c358 <OS_TCBInit>
  850790:	e0bff805 	stb	r2,-32(fp)
        if (err == OS_ERR_NONE) {
  850794:	e0bff803 	ldbu	r2,-32(fp)
  850798:	1000061e 	bne	r2,zero,8507b4 <OSTaskCreate+0x130>
            if (OSRunning == OS_TRUE) {      /* Find highest priority task if multitasking has started */
  85079c:	d0a0a343 	ldbu	r2,-32115(gp)
  8507a0:	10803fcc 	andi	r2,r2,255
  8507a4:	10800058 	cmpnei	r2,r2,1
  8507a8:	1000151e 	bne	r2,zero,850800 <OSTaskCreate+0x17c>
                OS_Sched();
  8507ac:	084bf580 	call	84bf58 <OS_Sched>
  8507b0:	00001306 	br	850800 <OSTaskCreate+0x17c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8507b4:	0005303a 	rdctl	r2,status
  8507b8:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8507bc:	e0fffa17 	ldw	r3,-24(fp)
  8507c0:	00bfff84 	movi	r2,-2
  8507c4:	1884703a 	and	r2,r3,r2
  8507c8:	1001703a 	wrctl	status,r2
  
  return context;
  8507cc:	e0bffa17 	ldw	r2,-24(fp)
            }
        } else {
            OS_ENTER_CRITICAL();
  8507d0:	e0bff315 	stw	r2,-52(fp)
            OSTCBPrioTbl[prio] = (OS_TCB *)0;/* Make this priority available to others                 */
  8507d4:	e0ffff03 	ldbu	r3,-4(fp)
  8507d8:	008021b4 	movhi	r2,134
  8507dc:	10950304 	addi	r2,r2,21516
  8507e0:	18c7883a 	add	r3,r3,r3
  8507e4:	18c7883a 	add	r3,r3,r3
  8507e8:	10c5883a 	add	r2,r2,r3
  8507ec:	10000015 	stw	zero,0(r2)
  8507f0:	e0bff317 	ldw	r2,-52(fp)
  8507f4:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8507f8:	e0bff617 	ldw	r2,-40(fp)
  8507fc:	1001703a 	wrctl	status,r2
            OS_EXIT_CRITICAL();
        }
        return (err);
  850800:	e0bff803 	ldbu	r2,-32(fp)
  850804:	00000506 	br	85081c <OSTaskCreate+0x198>
  850808:	e0bff317 	ldw	r2,-52(fp)
  85080c:	e0bff915 	stw	r2,-28(fp)
  850810:	e0bff917 	ldw	r2,-28(fp)
  850814:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    return (OS_ERR_PRIO_EXIST);
  850818:	00800a04 	movi	r2,40
}
  85081c:	e037883a 	mov	sp,fp
  850820:	dfc00117 	ldw	ra,4(sp)
  850824:	df000017 	ldw	fp,0(sp)
  850828:	dec00204 	addi	sp,sp,8
  85082c:	f800283a 	ret

00850830 <OSTaskCreateExt>:
                        INT16U   id,
                        OS_STK  *pbos,
                        INT32U   stk_size,
                        void    *pext,
                        INT16U   opt)
{
  850830:	deffec04 	addi	sp,sp,-80
  850834:	dfc01315 	stw	ra,76(sp)
  850838:	df001215 	stw	fp,72(sp)
  85083c:	df001204 	addi	fp,sp,72
  850840:	e13ffa15 	stw	r4,-24(fp)
  850844:	e17ffb15 	stw	r5,-20(fp)
  850848:	e1bffc15 	stw	r6,-16(fp)
  85084c:	3809883a 	mov	r4,r7
  850850:	e0c00217 	ldw	r3,8(fp)
  850854:	e0800617 	ldw	r2,24(fp)
  850858:	e13ffd05 	stb	r4,-12(fp)
  85085c:	e0fffe0d 	sth	r3,-8(fp)
  850860:	e0bfff0d 	sth	r2,-4(fp)
    OS_STK    *psp;
    INT8U      err;
#if OS_CRITICAL_METHOD == 3                  /* Allocate storage for CPU status register               */
    OS_CPU_SR  cpu_sr = 0;
  850864:	e03ff115 	stw	zero,-60(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (prio > OS_LOWEST_PRIO) {             /* Make sure priority is within allowable range           */
  850868:	e0bffd03 	ldbu	r2,-12(fp)
  85086c:	10800570 	cmpltui	r2,r2,21
  850870:	1000021e 	bne	r2,zero,85087c <OSTaskCreateExt+0x4c>
        return (OS_ERR_PRIO_INVALID);
  850874:	00800a84 	movi	r2,42
  850878:	00006106 	br	850a00 <OSTaskCreateExt+0x1d0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  85087c:	0005303a 	rdctl	r2,status
  850880:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  850884:	e0fff917 	ldw	r3,-28(fp)
  850888:	00bfff84 	movi	r2,-2
  85088c:	1884703a 	and	r2,r3,r2
  850890:	1001703a 	wrctl	status,r2
  
  return context;
  850894:	e0bff917 	ldw	r2,-28(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  850898:	e0bff115 	stw	r2,-60(fp)
    if (OSIntNesting > 0) {                  /* Make sure we don't create the task from within an ISR  */
  85089c:	d0a0b103 	ldbu	r2,-32060(gp)
  8508a0:	10803fcc 	andi	r2,r2,255
  8508a4:	10000626 	beq	r2,zero,8508c0 <OSTaskCreateExt+0x90>
  8508a8:	e0bff117 	ldw	r2,-60(fp)
  8508ac:	e0bff215 	stw	r2,-56(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8508b0:	e0bff217 	ldw	r2,-56(fp)
  8508b4:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_CREATE_ISR);
  8508b8:	00800f04 	movi	r2,60
  8508bc:	00005006 	br	850a00 <OSTaskCreateExt+0x1d0>
    }
    if (OSTCBPrioTbl[prio] == (OS_TCB *)0) { /* Make sure task doesn't already exist at this priority  */
  8508c0:	e0fffd03 	ldbu	r3,-12(fp)
  8508c4:	008021b4 	movhi	r2,134
  8508c8:	10950304 	addi	r2,r2,21516
  8508cc:	18c7883a 	add	r3,r3,r3
  8508d0:	18c7883a 	add	r3,r3,r3
  8508d4:	10c5883a 	add	r2,r2,r3
  8508d8:	10800017 	ldw	r2,0(r2)
  8508dc:	1000431e 	bne	r2,zero,8509ec <OSTaskCreateExt+0x1bc>
        OSTCBPrioTbl[prio] = OS_TCB_RESERVED;/* Reserve the priority to prevent others from doing ...  */
  8508e0:	e0fffd03 	ldbu	r3,-12(fp)
  8508e4:	008021b4 	movhi	r2,134
  8508e8:	10950304 	addi	r2,r2,21516
  8508ec:	18c7883a 	add	r3,r3,r3
  8508f0:	18c7883a 	add	r3,r3,r3
  8508f4:	10c5883a 	add	r2,r2,r3
  8508f8:	00c00044 	movi	r3,1
  8508fc:	10c00015 	stw	r3,0(r2)
  850900:	e0bff117 	ldw	r2,-60(fp)
  850904:	e0bff315 	stw	r2,-52(fp)
  850908:	e0bff317 	ldw	r2,-52(fp)
  85090c:	1001703a 	wrctl	status,r2
                                             /* ... the same thing until task is created.              */
        OS_EXIT_CRITICAL();

#if (OS_TASK_STAT_STK_CHK_EN > 0)
        OS_TaskStkClr(pbos, stk_size, opt);                    /* Clear the task stack (if needed)     */
  850910:	e0bfff0b 	ldhu	r2,-4(fp)
  850914:	100d883a 	mov	r6,r2
  850918:	e1400417 	ldw	r5,16(fp)
  85091c:	e1000317 	ldw	r4,12(fp)
  850920:	08518900 	call	851890 <OS_TaskStkClr>
#endif

        psp = OSTaskStkInit(task, p_arg, ptos, opt);           /* Initialize the task's stack          */
  850924:	e0bfff0b 	ldhu	r2,-4(fp)
  850928:	100f883a 	mov	r7,r2
  85092c:	e1bffc17 	ldw	r6,-16(fp)
  850930:	e17ffb17 	ldw	r5,-20(fp)
  850934:	e13ffa17 	ldw	r4,-24(fp)
  850938:	08565880 	call	856588 <OSTaskStkInit>
  85093c:	e0bff515 	stw	r2,-44(fp)
        err = OS_TCBInit(prio, psp, pbos, id, stk_size, pext, opt);
  850940:	e0fffd03 	ldbu	r3,-12(fp)
  850944:	e13ffe0b 	ldhu	r4,-8(fp)
  850948:	e0bfff0b 	ldhu	r2,-4(fp)
  85094c:	d8800215 	stw	r2,8(sp)
  850950:	e0800517 	ldw	r2,20(fp)
  850954:	d8800115 	stw	r2,4(sp)
  850958:	e0800417 	ldw	r2,16(fp)
  85095c:	d8800015 	stw	r2,0(sp)
  850960:	200f883a 	mov	r7,r4
  850964:	e1800317 	ldw	r6,12(fp)
  850968:	e17ff517 	ldw	r5,-44(fp)
  85096c:	1809883a 	mov	r4,r3
  850970:	084c3580 	call	84c358 <OS_TCBInit>
  850974:	e0bff605 	stb	r2,-40(fp)
        if (err == OS_ERR_NONE) {
  850978:	e0bff603 	ldbu	r2,-40(fp)
  85097c:	1000061e 	bne	r2,zero,850998 <OSTaskCreateExt+0x168>
            if (OSRunning == OS_TRUE) {                        /* Find HPT if multitasking has started */
  850980:	d0a0a343 	ldbu	r2,-32115(gp)
  850984:	10803fcc 	andi	r2,r2,255
  850988:	10800058 	cmpnei	r2,r2,1
  85098c:	1000151e 	bne	r2,zero,8509e4 <OSTaskCreateExt+0x1b4>
                OS_Sched();
  850990:	084bf580 	call	84bf58 <OS_Sched>
  850994:	00001306 	br	8509e4 <OSTaskCreateExt+0x1b4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  850998:	0005303a 	rdctl	r2,status
  85099c:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8509a0:	e0fff817 	ldw	r3,-32(fp)
  8509a4:	00bfff84 	movi	r2,-2
  8509a8:	1884703a 	and	r2,r3,r2
  8509ac:	1001703a 	wrctl	status,r2
  
  return context;
  8509b0:	e0bff817 	ldw	r2,-32(fp)
            }
        } else {
            OS_ENTER_CRITICAL();
  8509b4:	e0bff115 	stw	r2,-60(fp)
            OSTCBPrioTbl[prio] = (OS_TCB *)0;                  /* Make this priority avail. to others  */
  8509b8:	e0fffd03 	ldbu	r3,-12(fp)
  8509bc:	008021b4 	movhi	r2,134
  8509c0:	10950304 	addi	r2,r2,21516
  8509c4:	18c7883a 	add	r3,r3,r3
  8509c8:	18c7883a 	add	r3,r3,r3
  8509cc:	10c5883a 	add	r2,r2,r3
  8509d0:	10000015 	stw	zero,0(r2)
  8509d4:	e0bff117 	ldw	r2,-60(fp)
  8509d8:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8509dc:	e0bff417 	ldw	r2,-48(fp)
  8509e0:	1001703a 	wrctl	status,r2
            OS_EXIT_CRITICAL();
        }
        return (err);
  8509e4:	e0bff603 	ldbu	r2,-40(fp)
  8509e8:	00000506 	br	850a00 <OSTaskCreateExt+0x1d0>
  8509ec:	e0bff117 	ldw	r2,-60(fp)
  8509f0:	e0bff715 	stw	r2,-36(fp)
  8509f4:	e0bff717 	ldw	r2,-36(fp)
  8509f8:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    return (OS_ERR_PRIO_EXIST);
  8509fc:	00800a04 	movi	r2,40
}
  850a00:	e037883a 	mov	sp,fp
  850a04:	dfc00117 	ldw	ra,4(sp)
  850a08:	df000017 	ldw	fp,0(sp)
  850a0c:	dec00204 	addi	sp,sp,8
  850a10:	f800283a 	ret

00850a14 <OSTaskDel>:
*********************************************************************************************************
*/

#if OS_TASK_DEL_EN > 0
INT8U  OSTaskDel (INT8U prio)
{
  850a14:	defff404 	addi	sp,sp,-48
  850a18:	dfc00b15 	stw	ra,44(sp)
  850a1c:	df000a15 	stw	fp,40(sp)
  850a20:	df000a04 	addi	fp,sp,40
  850a24:	2005883a 	mov	r2,r4
  850a28:	e0bfff05 	stb	r2,-4(fp)
#if (OS_FLAG_EN > 0) && (OS_MAX_FLAGS > 0)
    OS_FLAG_NODE *pnode;
#endif
    OS_TCB       *ptcb;
#if OS_CRITICAL_METHOD == 3                             /* Allocate storage for CPU status register    */
    OS_CPU_SR     cpu_sr = 0;
  850a2c:	e03ff615 	stw	zero,-40(fp)
#endif



    if (OSIntNesting > 0) {                             /* See if trying to delete from ISR            */
  850a30:	d0a0b103 	ldbu	r2,-32060(gp)
  850a34:	10803fcc 	andi	r2,r2,255
  850a38:	10000226 	beq	r2,zero,850a44 <OSTaskDel+0x30>
        return (OS_ERR_TASK_DEL_ISR);
  850a3c:	00801004 	movi	r2,64
  850a40:	0000c006 	br	850d44 <OSTaskDel+0x330>
    }
    if (prio == OS_TASK_IDLE_PRIO) {                    /* Not allowed to delete idle task             */
  850a44:	e0bfff03 	ldbu	r2,-4(fp)
  850a48:	10800518 	cmpnei	r2,r2,20
  850a4c:	1000021e 	bne	r2,zero,850a58 <OSTaskDel+0x44>
        return (OS_ERR_TASK_DEL_IDLE);
  850a50:	00800f84 	movi	r2,62
  850a54:	0000bb06 	br	850d44 <OSTaskDel+0x330>
    }
#if OS_ARG_CHK_EN > 0
    if (prio >= OS_LOWEST_PRIO) {                       /* Task priority valid ?                       */
  850a58:	e0bfff03 	ldbu	r2,-4(fp)
  850a5c:	10800530 	cmpltui	r2,r2,20
  850a60:	1000051e 	bne	r2,zero,850a78 <OSTaskDel+0x64>
        if (prio != OS_PRIO_SELF) {
  850a64:	e0bfff03 	ldbu	r2,-4(fp)
  850a68:	10803fe0 	cmpeqi	r2,r2,255
  850a6c:	1000021e 	bne	r2,zero,850a78 <OSTaskDel+0x64>
            return (OS_ERR_PRIO_INVALID);
  850a70:	00800a84 	movi	r2,42
  850a74:	0000b306 	br	850d44 <OSTaskDel+0x330>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  850a78:	0005303a 	rdctl	r2,status
  850a7c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  850a80:	e0fffe17 	ldw	r3,-8(fp)
  850a84:	00bfff84 	movi	r2,-2
  850a88:	1884703a 	and	r2,r3,r2
  850a8c:	1001703a 	wrctl	status,r2
  
  return context;
  850a90:	e0bffe17 	ldw	r2,-8(fp)
        }
    }
#endif

/*$PAGE*/
    OS_ENTER_CRITICAL();
  850a94:	e0bff615 	stw	r2,-40(fp)
    if (prio == OS_PRIO_SELF) {                         /* See if requesting to delete self            */
  850a98:	e0bfff03 	ldbu	r2,-4(fp)
  850a9c:	10803fd8 	cmpnei	r2,r2,255
  850aa0:	1000031e 	bne	r2,zero,850ab0 <OSTaskDel+0x9c>
        prio = OSTCBCur->OSTCBPrio;                     /* Set priority to delete to current           */
  850aa4:	d0a0b217 	ldw	r2,-32056(gp)
  850aa8:	10800c83 	ldbu	r2,50(r2)
  850aac:	e0bfff05 	stb	r2,-4(fp)
    }
    ptcb = OSTCBPrioTbl[prio];
  850ab0:	e0ffff03 	ldbu	r3,-4(fp)
  850ab4:	008021b4 	movhi	r2,134
  850ab8:	10950304 	addi	r2,r2,21516
  850abc:	18c7883a 	add	r3,r3,r3
  850ac0:	18c7883a 	add	r3,r3,r3
  850ac4:	10c5883a 	add	r2,r2,r3
  850ac8:	10800017 	ldw	r2,0(r2)
  850acc:	e0bff815 	stw	r2,-32(fp)
    if (ptcb == (OS_TCB *)0) {                          /* Task to delete must exist                   */
  850ad0:	e0bff817 	ldw	r2,-32(fp)
  850ad4:	1000061e 	bne	r2,zero,850af0 <OSTaskDel+0xdc>
  850ad8:	e0bff617 	ldw	r2,-40(fp)
  850adc:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  850ae0:	e0bff717 	ldw	r2,-36(fp)
  850ae4:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);
  850ae8:	008010c4 	movi	r2,67
  850aec:	00009506 	br	850d44 <OSTaskDel+0x330>
    }
    if (ptcb == OS_TCB_RESERVED) {                      /* Must not be assigned to Mutex               */
  850af0:	e0bff817 	ldw	r2,-32(fp)
  850af4:	10800058 	cmpnei	r2,r2,1
  850af8:	1000061e 	bne	r2,zero,850b14 <OSTaskDel+0x100>
  850afc:	e0bff617 	ldw	r2,-40(fp)
  850b00:	e0bff915 	stw	r2,-28(fp)
  850b04:	e0bff917 	ldw	r2,-28(fp)
  850b08:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_DEL);
  850b0c:	00800f44 	movi	r2,61
  850b10:	00008c06 	br	850d44 <OSTaskDel+0x330>
    }

    OSRdyTbl[ptcb->OSTCBY] &= ~ptcb->OSTCBBitX;
  850b14:	e0bff817 	ldw	r2,-32(fp)
  850b18:	10800d03 	ldbu	r2,52(r2)
  850b1c:	10c03fcc 	andi	r3,r2,255
  850b20:	e0bff817 	ldw	r2,-32(fp)
  850b24:	10800d03 	ldbu	r2,52(r2)
  850b28:	11003fcc 	andi	r4,r2,255
  850b2c:	d0a0af44 	addi	r2,gp,-32067
  850b30:	2085883a 	add	r2,r4,r2
  850b34:	10800003 	ldbu	r2,0(r2)
  850b38:	1009883a 	mov	r4,r2
  850b3c:	e0bff817 	ldw	r2,-32(fp)
  850b40:	10800d43 	ldbu	r2,53(r2)
  850b44:	0084303a 	nor	r2,zero,r2
  850b48:	2084703a 	and	r2,r4,r2
  850b4c:	1009883a 	mov	r4,r2
  850b50:	d0a0af44 	addi	r2,gp,-32067
  850b54:	1885883a 	add	r2,r3,r2
  850b58:	11000005 	stb	r4,0(r2)
    if (OSRdyTbl[ptcb->OSTCBY] == 0) {                  /* Make task not ready                         */
  850b5c:	e0bff817 	ldw	r2,-32(fp)
  850b60:	10800d03 	ldbu	r2,52(r2)
  850b64:	10c03fcc 	andi	r3,r2,255
  850b68:	d0a0af44 	addi	r2,gp,-32067
  850b6c:	1885883a 	add	r2,r3,r2
  850b70:	10800003 	ldbu	r2,0(r2)
  850b74:	10803fcc 	andi	r2,r2,255
  850b78:	1000071e 	bne	r2,zero,850b98 <OSTaskDel+0x184>
        OSRdyGrp           &= ~ptcb->OSTCBBitY;
  850b7c:	e0bff817 	ldw	r2,-32(fp)
  850b80:	10800d83 	ldbu	r2,54(r2)
  850b84:	0084303a 	nor	r2,zero,r2
  850b88:	1007883a 	mov	r3,r2
  850b8c:	d0a0af03 	ldbu	r2,-32068(gp)
  850b90:	1884703a 	and	r2,r3,r2
  850b94:	d0a0af05 	stb	r2,-32068(gp)
    }
    
#if (OS_EVENT_EN)
    if (ptcb->OSTCBEventPtr != (OS_EVENT *)0) {
  850b98:	e0bff817 	ldw	r2,-32(fp)
  850b9c:	10800717 	ldw	r2,28(r2)
  850ba0:	10000526 	beq	r2,zero,850bb8 <OSTaskDel+0x1a4>
        OS_EventTaskRemove(ptcb, ptcb->OSTCBEventPtr);  /* Remove this task from any event   wait list */
  850ba4:	e0bff817 	ldw	r2,-32(fp)
  850ba8:	10800717 	ldw	r2,28(r2)
  850bac:	100b883a 	mov	r5,r2
  850bb0:	e13ff817 	ldw	r4,-32(fp)
  850bb4:	084b9040 	call	84b904 <OS_EventTaskRemove>
    }
#if (OS_EVENT_MULTI_EN > 0)
    if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {   /* Remove this task from any events' wait lists*/
  850bb8:	e0bff817 	ldw	r2,-32(fp)
  850bbc:	10800817 	ldw	r2,32(r2)
  850bc0:	10000526 	beq	r2,zero,850bd8 <OSTaskDel+0x1c4>
        OS_EventTaskRemoveMulti(ptcb, ptcb->OSTCBEventMultiPtr);
  850bc4:	e0bff817 	ldw	r2,-32(fp)
  850bc8:	10800817 	ldw	r2,32(r2)
  850bcc:	100b883a 	mov	r5,r2
  850bd0:	e13ff817 	ldw	r4,-32(fp)
  850bd4:	084b9bc0 	call	84b9bc <OS_EventTaskRemoveMulti>
    }
#endif
#endif

#if (OS_FLAG_EN > 0) && (OS_MAX_FLAGS > 0)
    pnode = ptcb->OSTCBFlagNode;
  850bd8:	e0bff817 	ldw	r2,-32(fp)
  850bdc:	10800a17 	ldw	r2,40(r2)
  850be0:	e0bffb15 	stw	r2,-20(fp)
    if (pnode != (OS_FLAG_NODE *)0) {                   /* If task is waiting on event flag            */
  850be4:	e0bffb17 	ldw	r2,-20(fp)
  850be8:	10000226 	beq	r2,zero,850bf4 <OSTaskDel+0x1e0>
        OS_FlagUnlink(pnode);                           /* Remove from wait list                       */
  850bec:	e13ffb17 	ldw	r4,-20(fp)
  850bf0:	084de2c0 	call	84de2c <OS_FlagUnlink>
    }
#endif

    ptcb->OSTCBDly      = 0;                            /* Prevent OSTimeTick() from updating          */
  850bf4:	e0bff817 	ldw	r2,-32(fp)
  850bf8:	10000b8d 	sth	zero,46(r2)
    ptcb->OSTCBStat     = OS_STAT_RDY;                  /* Prevent task from being resumed             */
  850bfc:	e0bff817 	ldw	r2,-32(fp)
  850c00:	10000c05 	stb	zero,48(r2)
    ptcb->OSTCBStatPend = OS_STAT_PEND_OK;
  850c04:	e0bff817 	ldw	r2,-32(fp)
  850c08:	10000c45 	stb	zero,49(r2)
    if (OSLockNesting < 255u) {                         /* Make sure we don't context switch           */
  850c0c:	d0a0a303 	ldbu	r2,-32116(gp)
  850c10:	10803fcc 	andi	r2,r2,255
  850c14:	10803fe0 	cmpeqi	r2,r2,255
  850c18:	1000031e 	bne	r2,zero,850c28 <OSTaskDel+0x214>
        OSLockNesting++;
  850c1c:	d0a0a303 	ldbu	r2,-32116(gp)
  850c20:	10800044 	addi	r2,r2,1
  850c24:	d0a0a305 	stb	r2,-32116(gp)
  850c28:	e0bff617 	ldw	r2,-40(fp)
  850c2c:	e0bffd15 	stw	r2,-12(fp)
  850c30:	e0bffd17 	ldw	r2,-12(fp)
  850c34:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();                                 /* Enabling INT. ignores next instruc.         */
    OS_Dummy();                                         /* ... Dummy ensures that INTs will be         */
  850c38:	084b4ec0 	call	84b4ec <OS_Dummy>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  850c3c:	0005303a 	rdctl	r2,status
  850c40:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  850c44:	e0fffa17 	ldw	r3,-24(fp)
  850c48:	00bfff84 	movi	r2,-2
  850c4c:	1884703a 	and	r2,r3,r2
  850c50:	1001703a 	wrctl	status,r2
  
  return context;
  850c54:	e0bffa17 	ldw	r2,-24(fp)
    OS_ENTER_CRITICAL();                                /* ... disabled HERE!                          */
  850c58:	e0bff615 	stw	r2,-40(fp)
    if (OSLockNesting > 0) {                            /* Remove context switch lock                  */
  850c5c:	d0a0a303 	ldbu	r2,-32116(gp)
  850c60:	10803fcc 	andi	r2,r2,255
  850c64:	10000326 	beq	r2,zero,850c74 <OSTaskDel+0x260>
        OSLockNesting--;
  850c68:	d0a0a303 	ldbu	r2,-32116(gp)
  850c6c:	10bfffc4 	addi	r2,r2,-1
  850c70:	d0a0a305 	stb	r2,-32116(gp)
    }
    OSTaskDelHook(ptcb);                                /* Call user defined hook                      */
  850c74:	e13ff817 	ldw	r4,-32(fp)
  850c78:	08567080 	call	856708 <OSTaskDelHook>
    OSTaskCtr--;                                        /* One less task being managed                 */
  850c7c:	d0a0ab43 	ldbu	r2,-32083(gp)
  850c80:	10bfffc4 	addi	r2,r2,-1
  850c84:	d0a0ab45 	stb	r2,-32083(gp)
    OSTCBPrioTbl[prio] = (OS_TCB *)0;                   /* Clear old priority entry                    */
  850c88:	e0ffff03 	ldbu	r3,-4(fp)
  850c8c:	008021b4 	movhi	r2,134
  850c90:	10950304 	addi	r2,r2,21516
  850c94:	18c7883a 	add	r3,r3,r3
  850c98:	18c7883a 	add	r3,r3,r3
  850c9c:	10c5883a 	add	r2,r2,r3
  850ca0:	10000015 	stw	zero,0(r2)
    if (ptcb->OSTCBPrev == (OS_TCB *)0) {               /* Remove from TCB chain                       */
  850ca4:	e0bff817 	ldw	r2,-32(fp)
  850ca8:	10800617 	ldw	r2,24(r2)
  850cac:	1000071e 	bne	r2,zero,850ccc <OSTaskDel+0x2b8>
        ptcb->OSTCBNext->OSTCBPrev = (OS_TCB *)0;
  850cb0:	e0bff817 	ldw	r2,-32(fp)
  850cb4:	10800517 	ldw	r2,20(r2)
  850cb8:	10000615 	stw	zero,24(r2)
        OSTCBList                  = ptcb->OSTCBNext;
  850cbc:	e0bff817 	ldw	r2,-32(fp)
  850cc0:	10800517 	ldw	r2,20(r2)
  850cc4:	d0a0a615 	stw	r2,-32104(gp)
  850cc8:	00000a06 	br	850cf4 <OSTaskDel+0x2e0>
    } else {
        ptcb->OSTCBPrev->OSTCBNext = ptcb->OSTCBNext;
  850ccc:	e0bff817 	ldw	r2,-32(fp)
  850cd0:	10800617 	ldw	r2,24(r2)
  850cd4:	e0fff817 	ldw	r3,-32(fp)
  850cd8:	18c00517 	ldw	r3,20(r3)
  850cdc:	10c00515 	stw	r3,20(r2)
        ptcb->OSTCBNext->OSTCBPrev = ptcb->OSTCBPrev;
  850ce0:	e0bff817 	ldw	r2,-32(fp)
  850ce4:	10800517 	ldw	r2,20(r2)
  850ce8:	e0fff817 	ldw	r3,-32(fp)
  850cec:	18c00617 	ldw	r3,24(r3)
  850cf0:	10c00615 	stw	r3,24(r2)
    }
    ptcb->OSTCBNext   = OSTCBFreeList;                  /* Return TCB to free TCB list                 */
  850cf4:	d0e0aa17 	ldw	r3,-32088(gp)
  850cf8:	e0bff817 	ldw	r2,-32(fp)
  850cfc:	10c00515 	stw	r3,20(r2)
    OSTCBFreeList     = ptcb;
  850d00:	e0bff817 	ldw	r2,-32(fp)
  850d04:	d0a0aa15 	stw	r2,-32088(gp)
#if OS_TASK_NAME_SIZE > 1
    ptcb->OSTCBTaskName[0] = '?';                       /* Unknown name                                */
  850d08:	e0bff817 	ldw	r2,-32(fp)
  850d0c:	00c00fc4 	movi	r3,63
  850d10:	10c01305 	stb	r3,76(r2)
    ptcb->OSTCBTaskName[1] = OS_ASCII_NUL;
  850d14:	e0bff817 	ldw	r2,-32(fp)
  850d18:	10001345 	stb	zero,77(r2)
  850d1c:	e0bff617 	ldw	r2,-40(fp)
  850d20:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  850d24:	e0bffc17 	ldw	r2,-16(fp)
  850d28:	1001703a 	wrctl	status,r2
#endif
    OS_EXIT_CRITICAL();
    if (OSRunning == OS_TRUE) {
  850d2c:	d0a0a343 	ldbu	r2,-32115(gp)
  850d30:	10803fcc 	andi	r2,r2,255
  850d34:	10800058 	cmpnei	r2,r2,1
  850d38:	1000011e 	bne	r2,zero,850d40 <OSTaskDel+0x32c>
        OS_Sched();                                     /* Find new highest priority task              */
  850d3c:	084bf580 	call	84bf58 <OS_Sched>
    }
    return (OS_ERR_NONE);
  850d40:	0005883a 	mov	r2,zero
}
  850d44:	e037883a 	mov	sp,fp
  850d48:	dfc00117 	ldw	ra,4(sp)
  850d4c:	df000017 	ldw	fp,0(sp)
  850d50:	dec00204 	addi	sp,sp,8
  850d54:	f800283a 	ret

00850d58 <OSTaskDelReq>:
*********************************************************************************************************
*/
/*$PAGE*/
#if OS_TASK_DEL_EN > 0
INT8U  OSTaskDelReq (INT8U prio)
{
  850d58:	defff504 	addi	sp,sp,-44
  850d5c:	df000a15 	stw	fp,40(sp)
  850d60:	df000a04 	addi	fp,sp,40
  850d64:	2005883a 	mov	r2,r4
  850d68:	e0bfff05 	stb	r2,-4(fp)
    INT8U      stat;
    OS_TCB    *ptcb;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  850d6c:	e03ff615 	stw	zero,-40(fp)
#endif



    if (prio == OS_TASK_IDLE_PRIO) {                            /* Not allowed to delete idle task     */
  850d70:	e0bfff03 	ldbu	r2,-4(fp)
  850d74:	10800518 	cmpnei	r2,r2,20
  850d78:	1000021e 	bne	r2,zero,850d84 <OSTaskDelReq+0x2c>
        return (OS_ERR_TASK_DEL_IDLE);
  850d7c:	00800f84 	movi	r2,62
  850d80:	00004506 	br	850e98 <OSTaskDelReq+0x140>
    }
#if OS_ARG_CHK_EN > 0
    if (prio >= OS_LOWEST_PRIO) {                               /* Task priority valid ?               */
  850d84:	e0bfff03 	ldbu	r2,-4(fp)
  850d88:	10800530 	cmpltui	r2,r2,20
  850d8c:	1000051e 	bne	r2,zero,850da4 <OSTaskDelReq+0x4c>
        if (prio != OS_PRIO_SELF) {
  850d90:	e0bfff03 	ldbu	r2,-4(fp)
  850d94:	10803fe0 	cmpeqi	r2,r2,255
  850d98:	1000021e 	bne	r2,zero,850da4 <OSTaskDelReq+0x4c>
            return (OS_ERR_PRIO_INVALID);
  850d9c:	00800a84 	movi	r2,42
  850da0:	00003d06 	br	850e98 <OSTaskDelReq+0x140>
        }
    }
#endif
    if (prio == OS_PRIO_SELF) {                                 /* See if a task is requesting to ...  */
  850da4:	e0bfff03 	ldbu	r2,-4(fp)
  850da8:	10803fd8 	cmpnei	r2,r2,255
  850dac:	1000111e 	bne	r2,zero,850df4 <OSTaskDelReq+0x9c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  850db0:	0005303a 	rdctl	r2,status
  850db4:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  850db8:	e0fff917 	ldw	r3,-28(fp)
  850dbc:	00bfff84 	movi	r2,-2
  850dc0:	1884703a 	and	r2,r3,r2
  850dc4:	1001703a 	wrctl	status,r2
  
  return context;
  850dc8:	e0bff917 	ldw	r2,-28(fp)
        OS_ENTER_CRITICAL();                                    /* ... this task to delete itself      */
  850dcc:	e0bff615 	stw	r2,-40(fp)
        stat = OSTCBCur->OSTCBDelReq;                           /* Return request status to caller     */
  850dd0:	d0a0b217 	ldw	r2,-32056(gp)
  850dd4:	10800dc3 	ldbu	r2,55(r2)
  850dd8:	e0bff805 	stb	r2,-32(fp)
  850ddc:	e0bff617 	ldw	r2,-40(fp)
  850de0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  850de4:	e0bffe17 	ldw	r2,-8(fp)
  850de8:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (stat);
  850dec:	e0bff803 	ldbu	r2,-32(fp)
  850df0:	00002906 	br	850e98 <OSTaskDelReq+0x140>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  850df4:	0005303a 	rdctl	r2,status
  850df8:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  850dfc:	e0fff717 	ldw	r3,-36(fp)
  850e00:	00bfff84 	movi	r2,-2
  850e04:	1884703a 	and	r2,r3,r2
  850e08:	1001703a 	wrctl	status,r2
  
  return context;
  850e0c:	e0bff717 	ldw	r2,-36(fp)
    }
    OS_ENTER_CRITICAL();
  850e10:	e0bff615 	stw	r2,-40(fp)
    ptcb = OSTCBPrioTbl[prio];
  850e14:	e0ffff03 	ldbu	r3,-4(fp)
  850e18:	008021b4 	movhi	r2,134
  850e1c:	10950304 	addi	r2,r2,21516
  850e20:	18c7883a 	add	r3,r3,r3
  850e24:	18c7883a 	add	r3,r3,r3
  850e28:	10c5883a 	add	r2,r2,r3
  850e2c:	10800017 	ldw	r2,0(r2)
  850e30:	e0bffb15 	stw	r2,-20(fp)
    if (ptcb == (OS_TCB *)0) {                                  /* Task to delete must exist           */
  850e34:	e0bffb17 	ldw	r2,-20(fp)
  850e38:	1000061e 	bne	r2,zero,850e54 <OSTaskDelReq+0xfc>
  850e3c:	e0bff617 	ldw	r2,-40(fp)
  850e40:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  850e44:	e0bffa17 	ldw	r2,-24(fp)
  850e48:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);                         /* Task must already be deleted        */
  850e4c:	008010c4 	movi	r2,67
  850e50:	00001106 	br	850e98 <OSTaskDelReq+0x140>
    }
    if (ptcb == OS_TCB_RESERVED) {                              /* Must NOT be assigned to a Mutex     */
  850e54:	e0bffb17 	ldw	r2,-20(fp)
  850e58:	10800058 	cmpnei	r2,r2,1
  850e5c:	1000061e 	bne	r2,zero,850e78 <OSTaskDelReq+0x120>
  850e60:	e0bff617 	ldw	r2,-40(fp)
  850e64:	e0bffc15 	stw	r2,-16(fp)
  850e68:	e0bffc17 	ldw	r2,-16(fp)
  850e6c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_DEL);
  850e70:	00800f44 	movi	r2,61
  850e74:	00000806 	br	850e98 <OSTaskDelReq+0x140>
    }
    ptcb->OSTCBDelReq = OS_ERR_TASK_DEL_REQ;                    /* Set flag indicating task to be DEL. */
  850e78:	e0bffb17 	ldw	r2,-20(fp)
  850e7c:	00c00fc4 	movi	r3,63
  850e80:	10c00dc5 	stb	r3,55(r2)
  850e84:	e0bff617 	ldw	r2,-40(fp)
  850e88:	e0bffd15 	stw	r2,-12(fp)
  850e8c:	e0bffd17 	ldw	r2,-12(fp)
  850e90:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  850e94:	0005883a 	mov	r2,zero
}
  850e98:	e037883a 	mov	sp,fp
  850e9c:	df000017 	ldw	fp,0(sp)
  850ea0:	dec00104 	addi	sp,sp,4
  850ea4:	f800283a 	ret

00850ea8 <OSTaskNameGet>:
*********************************************************************************************************
*/

#if OS_TASK_NAME_SIZE > 1
INT8U  OSTaskNameGet (INT8U prio, INT8U *pname, INT8U *perr)
{
  850ea8:	defff404 	addi	sp,sp,-48
  850eac:	dfc00b15 	stw	ra,44(sp)
  850eb0:	df000a15 	stw	fp,40(sp)
  850eb4:	df000a04 	addi	fp,sp,40
  850eb8:	2005883a 	mov	r2,r4
  850ebc:	e17ffe15 	stw	r5,-8(fp)
  850ec0:	e1bfff15 	stw	r6,-4(fp)
  850ec4:	e0bffd05 	stb	r2,-12(fp)
    OS_TCB    *ptcb;
    INT8U      len;
#if OS_CRITICAL_METHOD == 3                              /* Allocate storage for CPU status register   */
    OS_CPU_SR  cpu_sr = 0;
  850ec8:	e03ff615 	stw	zero,-40(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                            /* Validate 'perr'                            */
  850ecc:	e0bfff17 	ldw	r2,-4(fp)
  850ed0:	1000021e 	bne	r2,zero,850edc <OSTaskNameGet+0x34>
        return (0);
  850ed4:	0005883a 	mov	r2,zero
  850ed8:	00005406 	br	85102c <OSTaskNameGet+0x184>
    }
    if (prio > OS_LOWEST_PRIO) {                         /* Task priority valid ?                      */
  850edc:	e0bffd03 	ldbu	r2,-12(fp)
  850ee0:	10800570 	cmpltui	r2,r2,21
  850ee4:	1000081e 	bne	r2,zero,850f08 <OSTaskNameGet+0x60>
        if (prio != OS_PRIO_SELF) {
  850ee8:	e0bffd03 	ldbu	r2,-12(fp)
  850eec:	10803fe0 	cmpeqi	r2,r2,255
  850ef0:	1000051e 	bne	r2,zero,850f08 <OSTaskNameGet+0x60>
            *perr = OS_ERR_PRIO_INVALID;                 /* No                                         */
  850ef4:	e0bfff17 	ldw	r2,-4(fp)
  850ef8:	00c00a84 	movi	r3,42
  850efc:	10c00005 	stb	r3,0(r2)
            return (0);
  850f00:	0005883a 	mov	r2,zero
  850f04:	00004906 	br	85102c <OSTaskNameGet+0x184>
        }
    }
    if (pname == (INT8U *)0) {                           /* Is 'pname' a NULL pointer?                 */
  850f08:	e0bffe17 	ldw	r2,-8(fp)
  850f0c:	1000051e 	bne	r2,zero,850f24 <OSTaskNameGet+0x7c>
        *perr = OS_ERR_PNAME_NULL;                       /* Yes                                        */
  850f10:	e0bfff17 	ldw	r2,-4(fp)
  850f14:	00c00304 	movi	r3,12
  850f18:	10c00005 	stb	r3,0(r2)
        return (0);
  850f1c:	0005883a 	mov	r2,zero
  850f20:	00004206 	br	85102c <OSTaskNameGet+0x184>
    }
#endif
    if (OSIntNesting > 0) {                              /* See if trying to call from an ISR          */
  850f24:	d0a0b103 	ldbu	r2,-32060(gp)
  850f28:	10803fcc 	andi	r2,r2,255
  850f2c:	10000526 	beq	r2,zero,850f44 <OSTaskNameGet+0x9c>
        *perr = OS_ERR_NAME_GET_ISR;
  850f30:	e0bfff17 	ldw	r2,-4(fp)
  850f34:	00c00444 	movi	r3,17
  850f38:	10c00005 	stb	r3,0(r2)
        return (0);
  850f3c:	0005883a 	mov	r2,zero
  850f40:	00003a06 	br	85102c <OSTaskNameGet+0x184>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  850f44:	0005303a 	rdctl	r2,status
  850f48:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  850f4c:	e0fffc17 	ldw	r3,-16(fp)
  850f50:	00bfff84 	movi	r2,-2
  850f54:	1884703a 	and	r2,r3,r2
  850f58:	1001703a 	wrctl	status,r2
  
  return context;
  850f5c:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  850f60:	e0bff615 	stw	r2,-40(fp)
    if (prio == OS_PRIO_SELF) {                          /* See if caller desires it's own name        */
  850f64:	e0bffd03 	ldbu	r2,-12(fp)
  850f68:	10803fd8 	cmpnei	r2,r2,255
  850f6c:	1000031e 	bne	r2,zero,850f7c <OSTaskNameGet+0xd4>
        prio = OSTCBCur->OSTCBPrio;
  850f70:	d0a0b217 	ldw	r2,-32056(gp)
  850f74:	10800c83 	ldbu	r2,50(r2)
  850f78:	e0bffd05 	stb	r2,-12(fp)
    }
    ptcb = OSTCBPrioTbl[prio];
  850f7c:	e0fffd03 	ldbu	r3,-12(fp)
  850f80:	008021b4 	movhi	r2,134
  850f84:	10950304 	addi	r2,r2,21516
  850f88:	18c7883a 	add	r3,r3,r3
  850f8c:	18c7883a 	add	r3,r3,r3
  850f90:	10c5883a 	add	r2,r2,r3
  850f94:	10800017 	ldw	r2,0(r2)
  850f98:	e0bff815 	stw	r2,-32(fp)
    if (ptcb == (OS_TCB *)0) {                           /* Does task exist?                           */
  850f9c:	e0bff817 	ldw	r2,-32(fp)
  850fa0:	1000091e 	bne	r2,zero,850fc8 <OSTaskNameGet+0x120>
  850fa4:	e0bff617 	ldw	r2,-40(fp)
  850fa8:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  850fac:	e0bff717 	ldw	r2,-36(fp)
  850fb0:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();                              /* No                                         */
        *perr = OS_ERR_TASK_NOT_EXIST;
  850fb4:	e0bfff17 	ldw	r2,-4(fp)
  850fb8:	00c010c4 	movi	r3,67
  850fbc:	10c00005 	stb	r3,0(r2)
        return (0);
  850fc0:	0005883a 	mov	r2,zero
  850fc4:	00001906 	br	85102c <OSTaskNameGet+0x184>
    }
    if (ptcb == OS_TCB_RESERVED) {                       /* Task assigned to a Mutex?                  */
  850fc8:	e0bff817 	ldw	r2,-32(fp)
  850fcc:	10800058 	cmpnei	r2,r2,1
  850fd0:	1000091e 	bne	r2,zero,850ff8 <OSTaskNameGet+0x150>
  850fd4:	e0bff617 	ldw	r2,-40(fp)
  850fd8:	e0bff915 	stw	r2,-28(fp)
  850fdc:	e0bff917 	ldw	r2,-28(fp)
  850fe0:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();                              /* Yes                                        */
        *perr = OS_ERR_TASK_NOT_EXIST;
  850fe4:	e0bfff17 	ldw	r2,-4(fp)
  850fe8:	00c010c4 	movi	r3,67
  850fec:	10c00005 	stb	r3,0(r2)
        return (0);
  850ff0:	0005883a 	mov	r2,zero
  850ff4:	00000d06 	br	85102c <OSTaskNameGet+0x184>
    }
    len   = OS_StrCopy(pname, ptcb->OSTCBTaskName);      /* Yes, copy name from TCB                    */
  850ff8:	e0bff817 	ldw	r2,-32(fp)
  850ffc:	10801304 	addi	r2,r2,76
  851000:	100b883a 	mov	r5,r2
  851004:	e13ffe17 	ldw	r4,-8(fp)
  851008:	084c09c0 	call	84c09c <OS_StrCopy>
  85100c:	e0bffb05 	stb	r2,-20(fp)
  851010:	e0bff617 	ldw	r2,-40(fp)
  851014:	e0bffa15 	stw	r2,-24(fp)
  851018:	e0bffa17 	ldw	r2,-24(fp)
  85101c:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  851020:	e0bfff17 	ldw	r2,-4(fp)
  851024:	10000005 	stb	zero,0(r2)
    return (len);
  851028:	e0bffb03 	ldbu	r2,-20(fp)
}
  85102c:	e037883a 	mov	sp,fp
  851030:	dfc00117 	ldw	ra,4(sp)
  851034:	df000017 	ldw	fp,0(sp)
  851038:	dec00204 	addi	sp,sp,8
  85103c:	f800283a 	ret

00851040 <OSTaskNameSet>:
* Returns    : None
*********************************************************************************************************
*/
#if OS_TASK_NAME_SIZE > 1
void  OSTaskNameSet (INT8U prio, INT8U *pname, INT8U *perr)
{
  851040:	defff304 	addi	sp,sp,-52
  851044:	dfc00c15 	stw	ra,48(sp)
  851048:	df000b15 	stw	fp,44(sp)
  85104c:	df000b04 	addi	fp,sp,44
  851050:	2005883a 	mov	r2,r4
  851054:	e17ffe15 	stw	r5,-8(fp)
  851058:	e1bfff15 	stw	r6,-4(fp)
  85105c:	e0bffd05 	stb	r2,-12(fp)
    INT8U      len;
    OS_TCB    *ptcb;
#if OS_CRITICAL_METHOD == 3                          /* Allocate storage for CPU status register       */
    OS_CPU_SR  cpu_sr = 0;
  851060:	e03ff515 	stw	zero,-44(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                        /* Validate 'perr'                                */
  851064:	e0bfff17 	ldw	r2,-4(fp)
  851068:	10005c26 	beq	r2,zero,8511dc <OSTaskNameSet+0x19c>
        return;
    }
    if (prio > OS_LOWEST_PRIO) {                     /* Task priority valid ?                          */
  85106c:	e0bffd03 	ldbu	r2,-12(fp)
  851070:	10800570 	cmpltui	r2,r2,21
  851074:	1000071e 	bne	r2,zero,851094 <OSTaskNameSet+0x54>
        if (prio != OS_PRIO_SELF) {
  851078:	e0bffd03 	ldbu	r2,-12(fp)
  85107c:	10803fe0 	cmpeqi	r2,r2,255
  851080:	1000041e 	bne	r2,zero,851094 <OSTaskNameSet+0x54>
            *perr = OS_ERR_PRIO_INVALID;             /* No                                             */
  851084:	e0bfff17 	ldw	r2,-4(fp)
  851088:	00c00a84 	movi	r3,42
  85108c:	10c00005 	stb	r3,0(r2)
            return;
  851090:	00005306 	br	8511e0 <OSTaskNameSet+0x1a0>
        }
    }
    if (pname == (INT8U *)0) {                       /* Is 'pname' a NULL pointer?                     */
  851094:	e0bffe17 	ldw	r2,-8(fp)
  851098:	1000041e 	bne	r2,zero,8510ac <OSTaskNameSet+0x6c>
        *perr = OS_ERR_PNAME_NULL;                   /* Yes                                            */
  85109c:	e0bfff17 	ldw	r2,-4(fp)
  8510a0:	00c00304 	movi	r3,12
  8510a4:	10c00005 	stb	r3,0(r2)
        return;
  8510a8:	00004d06 	br	8511e0 <OSTaskNameSet+0x1a0>
    }
#endif
    if (OSIntNesting > 0) {                          /* See if trying to call from an ISR              */
  8510ac:	d0a0b103 	ldbu	r2,-32060(gp)
  8510b0:	10803fcc 	andi	r2,r2,255
  8510b4:	10000426 	beq	r2,zero,8510c8 <OSTaskNameSet+0x88>
        *perr = OS_ERR_NAME_SET_ISR;
  8510b8:	e0bfff17 	ldw	r2,-4(fp)
  8510bc:	00c00484 	movi	r3,18
  8510c0:	10c00005 	stb	r3,0(r2)
        return;
  8510c4:	00004606 	br	8511e0 <OSTaskNameSet+0x1a0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8510c8:	0005303a 	rdctl	r2,status
  8510cc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8510d0:	e0fffc17 	ldw	r3,-16(fp)
  8510d4:	00bfff84 	movi	r2,-2
  8510d8:	1884703a 	and	r2,r3,r2
  8510dc:	1001703a 	wrctl	status,r2
  
  return context;
  8510e0:	e0bffc17 	ldw	r2,-16(fp)
    }
    OS_ENTER_CRITICAL();
  8510e4:	e0bff515 	stw	r2,-44(fp)
    if (prio == OS_PRIO_SELF) {                      /* See if caller desires to set it's own name     */
  8510e8:	e0bffd03 	ldbu	r2,-12(fp)
  8510ec:	10803fd8 	cmpnei	r2,r2,255
  8510f0:	1000031e 	bne	r2,zero,851100 <OSTaskNameSet+0xc0>
        prio = OSTCBCur->OSTCBPrio;
  8510f4:	d0a0b217 	ldw	r2,-32056(gp)
  8510f8:	10800c83 	ldbu	r2,50(r2)
  8510fc:	e0bffd05 	stb	r2,-12(fp)
    }
    ptcb = OSTCBPrioTbl[prio];
  851100:	e0fffd03 	ldbu	r3,-12(fp)
  851104:	008021b4 	movhi	r2,134
  851108:	10950304 	addi	r2,r2,21516
  85110c:	18c7883a 	add	r3,r3,r3
  851110:	18c7883a 	add	r3,r3,r3
  851114:	10c5883a 	add	r2,r2,r3
  851118:	10800017 	ldw	r2,0(r2)
  85111c:	e0bff715 	stw	r2,-36(fp)
    if (ptcb == (OS_TCB *)0) {                       /* Does task exist?                               */
  851120:	e0bff717 	ldw	r2,-36(fp)
  851124:	1000081e 	bne	r2,zero,851148 <OSTaskNameSet+0x108>
  851128:	e0bff517 	ldw	r2,-44(fp)
  85112c:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851130:	e0bff617 	ldw	r2,-40(fp)
  851134:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();                          /* No                                             */
        *perr = OS_ERR_TASK_NOT_EXIST;
  851138:	e0bfff17 	ldw	r2,-4(fp)
  85113c:	00c010c4 	movi	r3,67
  851140:	10c00005 	stb	r3,0(r2)
        return;
  851144:	00002606 	br	8511e0 <OSTaskNameSet+0x1a0>
    }
    if (ptcb == OS_TCB_RESERVED) {                   /* Task assigned to a Mutex?                      */
  851148:	e0bff717 	ldw	r2,-36(fp)
  85114c:	10800058 	cmpnei	r2,r2,1
  851150:	1000081e 	bne	r2,zero,851174 <OSTaskNameSet+0x134>
  851154:	e0bff517 	ldw	r2,-44(fp)
  851158:	e0bff815 	stw	r2,-32(fp)
  85115c:	e0bff817 	ldw	r2,-32(fp)
  851160:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();                          /* Yes                                            */
        *perr = OS_ERR_TASK_NOT_EXIST;
  851164:	e0bfff17 	ldw	r2,-4(fp)
  851168:	00c010c4 	movi	r3,67
  85116c:	10c00005 	stb	r3,0(r2)
        return;
  851170:	00001b06 	br	8511e0 <OSTaskNameSet+0x1a0>
    }
    len = OS_StrLen(pname);                          /* Yes, Can we fit the string in the TCB?         */
  851174:	e13ffe17 	ldw	r4,-8(fp)
  851178:	084c1100 	call	84c110 <OS_StrLen>
  85117c:	e0bffa05 	stb	r2,-24(fp)
    if (len > (OS_TASK_NAME_SIZE - 1)) {             /*      No                                        */
  851180:	e0bffa03 	ldbu	r2,-24(fp)
  851184:	10800830 	cmpltui	r2,r2,32
  851188:	1000081e 	bne	r2,zero,8511ac <OSTaskNameSet+0x16c>
  85118c:	e0bff517 	ldw	r2,-44(fp)
  851190:	e0bff915 	stw	r2,-28(fp)
  851194:	e0bff917 	ldw	r2,-28(fp)
  851198:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        *perr = OS_ERR_TASK_NAME_TOO_LONG;
  85119c:	e0bfff17 	ldw	r2,-4(fp)
  8511a0:	00c01044 	movi	r3,65
  8511a4:	10c00005 	stb	r3,0(r2)
        return;
  8511a8:	00000d06 	br	8511e0 <OSTaskNameSet+0x1a0>
    }
    (void)OS_StrCopy(ptcb->OSTCBTaskName, pname);    /*      Yes, copy to TCB                          */
  8511ac:	e0bff717 	ldw	r2,-36(fp)
  8511b0:	10801304 	addi	r2,r2,76
  8511b4:	e17ffe17 	ldw	r5,-8(fp)
  8511b8:	1009883a 	mov	r4,r2
  8511bc:	084c09c0 	call	84c09c <OS_StrCopy>
  8511c0:	e0bff517 	ldw	r2,-44(fp)
  8511c4:	e0bffb15 	stw	r2,-20(fp)
  8511c8:	e0bffb17 	ldw	r2,-20(fp)
  8511cc:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
  8511d0:	e0bfff17 	ldw	r2,-4(fp)
  8511d4:	10000005 	stb	zero,0(r2)
  8511d8:	00000106 	br	8511e0 <OSTaskNameSet+0x1a0>



#if OS_ARG_CHK_EN > 0
    if (perr == (INT8U *)0) {                        /* Validate 'perr'                                */
        return;
  8511dc:	0001883a 	nop
        return;
    }
    (void)OS_StrCopy(ptcb->OSTCBTaskName, pname);    /*      Yes, copy to TCB                          */
    OS_EXIT_CRITICAL();
    *perr = OS_ERR_NONE;
}
  8511e0:	e037883a 	mov	sp,fp
  8511e4:	dfc00117 	ldw	ra,4(sp)
  8511e8:	df000017 	ldw	fp,0(sp)
  8511ec:	dec00204 	addi	sp,sp,8
  8511f0:	f800283a 	ret

008511f4 <OSTaskResume>:
*********************************************************************************************************
*/

#if OS_TASK_SUSPEND_EN > 0
INT8U  OSTaskResume (INT8U prio)
{
  8511f4:	defff404 	addi	sp,sp,-48
  8511f8:	dfc00b15 	stw	ra,44(sp)
  8511fc:	df000a15 	stw	fp,40(sp)
  851200:	df000a04 	addi	fp,sp,40
  851204:	2005883a 	mov	r2,r4
  851208:	e0bfff05 	stb	r2,-4(fp)
    OS_TCB    *ptcb;
#if OS_CRITICAL_METHOD == 3                                   /* Storage for CPU status register       */
    OS_CPU_SR  cpu_sr = 0;
  85120c:	e03ff615 	stw	zero,-40(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (prio >= OS_LOWEST_PRIO) {                             /* Make sure task priority is valid      */
  851210:	e0bfff03 	ldbu	r2,-4(fp)
  851214:	10800530 	cmpltui	r2,r2,20
  851218:	1000021e 	bne	r2,zero,851224 <OSTaskResume+0x30>
        return (OS_ERR_PRIO_INVALID);
  85121c:	00800a84 	movi	r2,42
  851220:	00006406 	br	8513b4 <OSTaskResume+0x1c0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  851224:	0005303a 	rdctl	r2,status
  851228:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  85122c:	e0fffe17 	ldw	r3,-8(fp)
  851230:	00bfff84 	movi	r2,-2
  851234:	1884703a 	and	r2,r3,r2
  851238:	1001703a 	wrctl	status,r2
  
  return context;
  85123c:	e0bffe17 	ldw	r2,-8(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  851240:	e0bff615 	stw	r2,-40(fp)
    ptcb = OSTCBPrioTbl[prio];
  851244:	e0ffff03 	ldbu	r3,-4(fp)
  851248:	008021b4 	movhi	r2,134
  85124c:	10950304 	addi	r2,r2,21516
  851250:	18c7883a 	add	r3,r3,r3
  851254:	18c7883a 	add	r3,r3,r3
  851258:	10c5883a 	add	r2,r2,r3
  85125c:	10800017 	ldw	r2,0(r2)
  851260:	e0bff815 	stw	r2,-32(fp)
    if (ptcb == (OS_TCB *)0) {                                /* Task to suspend must exist            */
  851264:	e0bff817 	ldw	r2,-32(fp)
  851268:	1000061e 	bne	r2,zero,851284 <OSTaskResume+0x90>
  85126c:	e0bff617 	ldw	r2,-40(fp)
  851270:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851274:	e0bff717 	ldw	r2,-36(fp)
  851278:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_RESUME_PRIO);
  85127c:	00801184 	movi	r2,70
  851280:	00004c06 	br	8513b4 <OSTaskResume+0x1c0>
    }
    if (ptcb == OS_TCB_RESERVED) {                            /* See if assigned to Mutex              */
  851284:	e0bff817 	ldw	r2,-32(fp)
  851288:	10800058 	cmpnei	r2,r2,1
  85128c:	1000061e 	bne	r2,zero,8512a8 <OSTaskResume+0xb4>
  851290:	e0bff617 	ldw	r2,-40(fp)
  851294:	e0bff915 	stw	r2,-28(fp)
  851298:	e0bff917 	ldw	r2,-28(fp)
  85129c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);
  8512a0:	008010c4 	movi	r2,67
  8512a4:	00004306 	br	8513b4 <OSTaskResume+0x1c0>
    }
    if ((ptcb->OSTCBStat & OS_STAT_SUSPEND) != OS_STAT_RDY) { /* Task must be suspended                */
  8512a8:	e0bff817 	ldw	r2,-32(fp)
  8512ac:	10800c03 	ldbu	r2,48(r2)
  8512b0:	10803fcc 	andi	r2,r2,255
  8512b4:	1080020c 	andi	r2,r2,8
  8512b8:	10003926 	beq	r2,zero,8513a0 <OSTaskResume+0x1ac>
        ptcb->OSTCBStat &= ~(INT8U)OS_STAT_SUSPEND;           /* Remove suspension                     */
  8512bc:	e0bff817 	ldw	r2,-32(fp)
  8512c0:	10c00c03 	ldbu	r3,48(r2)
  8512c4:	00bffdc4 	movi	r2,-9
  8512c8:	1884703a 	and	r2,r3,r2
  8512cc:	1007883a 	mov	r3,r2
  8512d0:	e0bff817 	ldw	r2,-32(fp)
  8512d4:	10c00c05 	stb	r3,48(r2)
        if (ptcb->OSTCBStat == OS_STAT_RDY) {                 /* See if task is now ready              */
  8512d8:	e0bff817 	ldw	r2,-32(fp)
  8512dc:	10800c03 	ldbu	r2,48(r2)
  8512e0:	10803fcc 	andi	r2,r2,255
  8512e4:	1000281e 	bne	r2,zero,851388 <OSTaskResume+0x194>
            if (ptcb->OSTCBDly == 0) {
  8512e8:	e0bff817 	ldw	r2,-32(fp)
  8512ec:	10800b8b 	ldhu	r2,46(r2)
  8512f0:	10bfffcc 	andi	r2,r2,65535
  8512f4:	10001f1e 	bne	r2,zero,851374 <OSTaskResume+0x180>
                OSRdyGrp               |= ptcb->OSTCBBitY;    /* Yes, Make task ready to run           */
  8512f8:	e0bff817 	ldw	r2,-32(fp)
  8512fc:	10c00d83 	ldbu	r3,54(r2)
  851300:	d0a0af03 	ldbu	r2,-32068(gp)
  851304:	1884b03a 	or	r2,r3,r2
  851308:	d0a0af05 	stb	r2,-32068(gp)
                OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
  85130c:	e0bff817 	ldw	r2,-32(fp)
  851310:	10800d03 	ldbu	r2,52(r2)
  851314:	10c03fcc 	andi	r3,r2,255
  851318:	e0bff817 	ldw	r2,-32(fp)
  85131c:	10800d03 	ldbu	r2,52(r2)
  851320:	11003fcc 	andi	r4,r2,255
  851324:	d0a0af44 	addi	r2,gp,-32067
  851328:	2085883a 	add	r2,r4,r2
  85132c:	11000003 	ldbu	r4,0(r2)
  851330:	e0bff817 	ldw	r2,-32(fp)
  851334:	10800d43 	ldbu	r2,53(r2)
  851338:	2084b03a 	or	r2,r4,r2
  85133c:	1009883a 	mov	r4,r2
  851340:	d0a0af44 	addi	r2,gp,-32067
  851344:	1885883a 	add	r2,r3,r2
  851348:	11000005 	stb	r4,0(r2)
  85134c:	e0bff617 	ldw	r2,-40(fp)
  851350:	e0bffa15 	stw	r2,-24(fp)
  851354:	e0bffa17 	ldw	r2,-24(fp)
  851358:	1001703a 	wrctl	status,r2
                OS_EXIT_CRITICAL();
                if (OSRunning == OS_TRUE) {
  85135c:	d0a0a343 	ldbu	r2,-32115(gp)
  851360:	10803fcc 	andi	r2,r2,255
  851364:	10800058 	cmpnei	r2,r2,1
  851368:	10000b1e 	bne	r2,zero,851398 <OSTaskResume+0x1a4>
                    OS_Sched();                               /* Find new highest priority task        */
  85136c:	084bf580 	call	84bf58 <OS_Sched>
  851370:	00000906 	br	851398 <OSTaskResume+0x1a4>
  851374:	e0bff617 	ldw	r2,-40(fp)
  851378:	e0bffb15 	stw	r2,-20(fp)
  85137c:	e0bffb17 	ldw	r2,-20(fp)
  851380:	1001703a 	wrctl	status,r2
  851384:	00000406 	br	851398 <OSTaskResume+0x1a4>
  851388:	e0bff617 	ldw	r2,-40(fp)
  85138c:	e0bffc15 	stw	r2,-16(fp)
  851390:	e0bffc17 	ldw	r2,-16(fp)
  851394:	1001703a 	wrctl	status,r2
                OS_EXIT_CRITICAL();
            }
        } else {                                              /* Must be pending on event              */
            OS_EXIT_CRITICAL();
        }
        return (OS_ERR_NONE);
  851398:	0005883a 	mov	r2,zero
  85139c:	00000506 	br	8513b4 <OSTaskResume+0x1c0>
  8513a0:	e0bff617 	ldw	r2,-40(fp)
  8513a4:	e0bffd15 	stw	r2,-12(fp)
  8513a8:	e0bffd17 	ldw	r2,-12(fp)
  8513ac:	1001703a 	wrctl	status,r2
    }
    OS_EXIT_CRITICAL();
    return (OS_ERR_TASK_NOT_SUSPENDED);
  8513b0:	00801104 	movi	r2,68
}
  8513b4:	e037883a 	mov	sp,fp
  8513b8:	dfc00117 	ldw	ra,4(sp)
  8513bc:	df000017 	ldw	fp,0(sp)
  8513c0:	dec00204 	addi	sp,sp,8
  8513c4:	f800283a 	ret

008513c8 <OSTaskStkChk>:
*              OS_ERR_PDATA_NULL      if 'p_stk_data' is a NULL pointer
*********************************************************************************************************
*/
#if (OS_TASK_STAT_STK_CHK_EN > 0) && (OS_TASK_CREATE_EXT_EN > 0)
INT8U  OSTaskStkChk (INT8U prio, OS_STK_DATA *p_stk_data)
{
  8513c8:	defff304 	addi	sp,sp,-52
  8513cc:	df000c15 	stw	fp,48(sp)
  8513d0:	df000c04 	addi	fp,sp,48
  8513d4:	2005883a 	mov	r2,r4
  8513d8:	e17fff15 	stw	r5,-4(fp)
  8513dc:	e0bffe05 	stb	r2,-8(fp)
    OS_TCB    *ptcb;
    OS_STK    *pchk;
    INT32U     nfree;
    INT32U     size;
#if OS_CRITICAL_METHOD == 3                            /* Allocate storage for CPU status register     */
    OS_CPU_SR  cpu_sr = 0;
  8513e0:	e03ff615 	stw	zero,-40(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (prio > OS_LOWEST_PRIO) {                       /* Make sure task priority is valid             */
  8513e4:	e0bffe03 	ldbu	r2,-8(fp)
  8513e8:	10800570 	cmpltui	r2,r2,21
  8513ec:	1000051e 	bne	r2,zero,851404 <OSTaskStkChk+0x3c>
        if (prio != OS_PRIO_SELF) {
  8513f0:	e0bffe03 	ldbu	r2,-8(fp)
  8513f4:	10803fe0 	cmpeqi	r2,r2,255
  8513f8:	1000021e 	bne	r2,zero,851404 <OSTaskStkChk+0x3c>
            return (OS_ERR_PRIO_INVALID);
  8513fc:	00800a84 	movi	r2,42
  851400:	00005d06 	br	851578 <OSTaskStkChk+0x1b0>
        }
    }
    if (p_stk_data == (OS_STK_DATA *)0) {              /* Validate 'p_stk_data'                        */
  851404:	e0bfff17 	ldw	r2,-4(fp)
  851408:	1000021e 	bne	r2,zero,851414 <OSTaskStkChk+0x4c>
        return (OS_ERR_PDATA_NULL);
  85140c:	00800244 	movi	r2,9
  851410:	00005906 	br	851578 <OSTaskStkChk+0x1b0>
    }
#endif
    p_stk_data->OSFree = 0;                            /* Assume failure, set to 0 size                */
  851414:	e0bfff17 	ldw	r2,-4(fp)
  851418:	10000015 	stw	zero,0(r2)
    p_stk_data->OSUsed = 0;
  85141c:	e0bfff17 	ldw	r2,-4(fp)
  851420:	10000115 	stw	zero,4(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  851424:	0005303a 	rdctl	r2,status
  851428:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  85142c:	e0fffd17 	ldw	r3,-12(fp)
  851430:	00bfff84 	movi	r2,-2
  851434:	1884703a 	and	r2,r3,r2
  851438:	1001703a 	wrctl	status,r2
  
  return context;
  85143c:	e0bffd17 	ldw	r2,-12(fp)
    OS_ENTER_CRITICAL();
  851440:	e0bff615 	stw	r2,-40(fp)
    if (prio == OS_PRIO_SELF) {                        /* See if check for SELF                        */
  851444:	e0bffe03 	ldbu	r2,-8(fp)
  851448:	10803fd8 	cmpnei	r2,r2,255
  85144c:	1000031e 	bne	r2,zero,85145c <OSTaskStkChk+0x94>
        prio = OSTCBCur->OSTCBPrio;
  851450:	d0a0b217 	ldw	r2,-32056(gp)
  851454:	10800c83 	ldbu	r2,50(r2)
  851458:	e0bffe05 	stb	r2,-8(fp)
    }
    ptcb = OSTCBPrioTbl[prio];
  85145c:	e0fffe03 	ldbu	r3,-8(fp)
  851460:	008021b4 	movhi	r2,134
  851464:	10950304 	addi	r2,r2,21516
  851468:	18c7883a 	add	r3,r3,r3
  85146c:	18c7883a 	add	r3,r3,r3
  851470:	10c5883a 	add	r2,r2,r3
  851474:	10800017 	ldw	r2,0(r2)
  851478:	e0bff815 	stw	r2,-32(fp)
    if (ptcb == (OS_TCB *)0) {                         /* Make sure task exist                         */
  85147c:	e0bff817 	ldw	r2,-32(fp)
  851480:	1000061e 	bne	r2,zero,85149c <OSTaskStkChk+0xd4>
  851484:	e0bff617 	ldw	r2,-40(fp)
  851488:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  85148c:	e0bff717 	ldw	r2,-36(fp)
  851490:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);
  851494:	008010c4 	movi	r2,67
  851498:	00003706 	br	851578 <OSTaskStkChk+0x1b0>
    }
    if (ptcb == OS_TCB_RESERVED) {
  85149c:	e0bff817 	ldw	r2,-32(fp)
  8514a0:	10800058 	cmpnei	r2,r2,1
  8514a4:	1000061e 	bne	r2,zero,8514c0 <OSTaskStkChk+0xf8>
  8514a8:	e0bff617 	ldw	r2,-40(fp)
  8514ac:	e0bff915 	stw	r2,-28(fp)
  8514b0:	e0bff917 	ldw	r2,-28(fp)
  8514b4:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);
  8514b8:	008010c4 	movi	r2,67
  8514bc:	00002e06 	br	851578 <OSTaskStkChk+0x1b0>
    }
    if ((ptcb->OSTCBOpt & OS_TASK_OPT_STK_CHK) == 0) { /* Make sure stack checking option is set       */
  8514c0:	e0bff817 	ldw	r2,-32(fp)
  8514c4:	1080040b 	ldhu	r2,16(r2)
  8514c8:	10bfffcc 	andi	r2,r2,65535
  8514cc:	1080004c 	andi	r2,r2,1
  8514d0:	1000061e 	bne	r2,zero,8514ec <OSTaskStkChk+0x124>
  8514d4:	e0bff617 	ldw	r2,-40(fp)
  8514d8:	e0bffa15 	stw	r2,-24(fp)
  8514dc:	e0bffa17 	ldw	r2,-24(fp)
  8514e0:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_OPT);
  8514e4:	00801144 	movi	r2,69
  8514e8:	00002306 	br	851578 <OSTaskStkChk+0x1b0>
    }
    nfree = 0;
  8514ec:	e03ff515 	stw	zero,-44(fp)
    size  = ptcb->OSTCBStkSize;
  8514f0:	e0bff817 	ldw	r2,-32(fp)
  8514f4:	10800317 	ldw	r2,12(r2)
  8514f8:	e0bffc15 	stw	r2,-16(fp)
    pchk  = ptcb->OSTCBStkBottom;
  8514fc:	e0bff817 	ldw	r2,-32(fp)
  851500:	10800217 	ldw	r2,8(r2)
  851504:	e0bff415 	stw	r2,-48(fp)
  851508:	e0bff617 	ldw	r2,-40(fp)
  85150c:	e0bffb15 	stw	r2,-20(fp)
  851510:	e0bffb17 	ldw	r2,-20(fp)
  851514:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
#if OS_STK_GROWTH == 1
    while (*pchk++ == (OS_STK)0) {                    /* Compute the number of zero entries on the stk */
  851518:	00000306 	br	851528 <OSTaskStkChk+0x160>
        nfree++;
  85151c:	e0bff517 	ldw	r2,-44(fp)
  851520:	10800044 	addi	r2,r2,1
  851524:	e0bff515 	stw	r2,-44(fp)
    nfree = 0;
    size  = ptcb->OSTCBStkSize;
    pchk  = ptcb->OSTCBStkBottom;
    OS_EXIT_CRITICAL();
#if OS_STK_GROWTH == 1
    while (*pchk++ == (OS_STK)0) {                    /* Compute the number of zero entries on the stk */
  851528:	e0bff417 	ldw	r2,-48(fp)
  85152c:	10c00104 	addi	r3,r2,4
  851530:	e0fff415 	stw	r3,-48(fp)
  851534:	10800017 	ldw	r2,0(r2)
  851538:	103ff826 	beq	r2,zero,85151c <__alt_mem_epcs_flash_controller_0+0xff84851c>
#else
    while (*pchk-- == (OS_STK)0) {
        nfree++;
    }
#endif
    p_stk_data->OSFree = nfree * sizeof(OS_STK);          /* Compute number of free bytes on the stack */
  85153c:	e0bff517 	ldw	r2,-44(fp)
  851540:	1085883a 	add	r2,r2,r2
  851544:	1085883a 	add	r2,r2,r2
  851548:	1007883a 	mov	r3,r2
  85154c:	e0bfff17 	ldw	r2,-4(fp)
  851550:	10c00015 	stw	r3,0(r2)
    p_stk_data->OSUsed = (size - nfree) * sizeof(OS_STK); /* Compute number of bytes used on the stack */
  851554:	e0fffc17 	ldw	r3,-16(fp)
  851558:	e0bff517 	ldw	r2,-44(fp)
  85155c:	1885c83a 	sub	r2,r3,r2
  851560:	1085883a 	add	r2,r2,r2
  851564:	1085883a 	add	r2,r2,r2
  851568:	1007883a 	mov	r3,r2
  85156c:	e0bfff17 	ldw	r2,-4(fp)
  851570:	10c00115 	stw	r3,4(r2)
    return (OS_ERR_NONE);
  851574:	0005883a 	mov	r2,zero
}
  851578:	e037883a 	mov	sp,fp
  85157c:	df000017 	ldw	fp,0(sp)
  851580:	dec00104 	addi	sp,sp,4
  851584:	f800283a 	ret

00851588 <OSTaskSuspend>:
*********************************************************************************************************
*/

#if OS_TASK_SUSPEND_EN > 0
INT8U  OSTaskSuspend (INT8U prio)
{
  851588:	defff504 	addi	sp,sp,-44
  85158c:	dfc00a15 	stw	ra,40(sp)
  851590:	df000915 	stw	fp,36(sp)
  851594:	df000904 	addi	fp,sp,36
  851598:	2005883a 	mov	r2,r4
  85159c:	e0bfff05 	stb	r2,-4(fp)
    BOOLEAN    self;
    OS_TCB    *ptcb;
    INT8U      y;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  8515a0:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (prio == OS_TASK_IDLE_PRIO) {                            /* Not allowed to suspend idle task    */
  8515a4:	e0bfff03 	ldbu	r2,-4(fp)
  8515a8:	10800518 	cmpnei	r2,r2,20
  8515ac:	1000021e 	bne	r2,zero,8515b8 <OSTaskSuspend+0x30>
        return (OS_ERR_TASK_SUSPEND_IDLE);
  8515b0:	008011c4 	movi	r2,71
  8515b4:	00006806 	br	851758 <OSTaskSuspend+0x1d0>
    }
    if (prio >= OS_LOWEST_PRIO) {                               /* Task priority valid ?               */
  8515b8:	e0bfff03 	ldbu	r2,-4(fp)
  8515bc:	10800530 	cmpltui	r2,r2,20
  8515c0:	1000051e 	bne	r2,zero,8515d8 <OSTaskSuspend+0x50>
        if (prio != OS_PRIO_SELF) {
  8515c4:	e0bfff03 	ldbu	r2,-4(fp)
  8515c8:	10803fe0 	cmpeqi	r2,r2,255
  8515cc:	1000021e 	bne	r2,zero,8515d8 <OSTaskSuspend+0x50>
            return (OS_ERR_PRIO_INVALID);
  8515d0:	00800a84 	movi	r2,42
  8515d4:	00006006 	br	851758 <OSTaskSuspend+0x1d0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8515d8:	0005303a 	rdctl	r2,status
  8515dc:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8515e0:	e0fffe17 	ldw	r3,-8(fp)
  8515e4:	00bfff84 	movi	r2,-2
  8515e8:	1884703a 	and	r2,r3,r2
  8515ec:	1001703a 	wrctl	status,r2
  
  return context;
  8515f0:	e0bffe17 	ldw	r2,-8(fp)
        }
    }
#endif
    OS_ENTER_CRITICAL();
  8515f4:	e0bff815 	stw	r2,-32(fp)
    if (prio == OS_PRIO_SELF) {                                 /* See if suspend SELF                 */
  8515f8:	e0bfff03 	ldbu	r2,-4(fp)
  8515fc:	10803fd8 	cmpnei	r2,r2,255
  851600:	1000061e 	bne	r2,zero,85161c <OSTaskSuspend+0x94>
        prio = OSTCBCur->OSTCBPrio;
  851604:	d0a0b217 	ldw	r2,-32056(gp)
  851608:	10800c83 	ldbu	r2,50(r2)
  85160c:	e0bfff05 	stb	r2,-4(fp)
        self = OS_TRUE;
  851610:	00800044 	movi	r2,1
  851614:	e0bff705 	stb	r2,-36(fp)
  851618:	00000906 	br	851640 <OSTaskSuspend+0xb8>
    } else if (prio == OSTCBCur->OSTCBPrio) {                   /* See if suspending self              */
  85161c:	d0a0b217 	ldw	r2,-32056(gp)
  851620:	10800c83 	ldbu	r2,50(r2)
  851624:	10c03fcc 	andi	r3,r2,255
  851628:	e0bfff03 	ldbu	r2,-4(fp)
  85162c:	1880031e 	bne	r3,r2,85163c <OSTaskSuspend+0xb4>
        self = OS_TRUE;
  851630:	00800044 	movi	r2,1
  851634:	e0bff705 	stb	r2,-36(fp)
  851638:	00000106 	br	851640 <OSTaskSuspend+0xb8>
    } else {
        self = OS_FALSE;                                        /* No suspending another task          */
  85163c:	e03ff705 	stb	zero,-36(fp)
    }
    ptcb = OSTCBPrioTbl[prio];
  851640:	e0ffff03 	ldbu	r3,-4(fp)
  851644:	008021b4 	movhi	r2,134
  851648:	10950304 	addi	r2,r2,21516
  85164c:	18c7883a 	add	r3,r3,r3
  851650:	18c7883a 	add	r3,r3,r3
  851654:	10c5883a 	add	r2,r2,r3
  851658:	10800017 	ldw	r2,0(r2)
  85165c:	e0bffa15 	stw	r2,-24(fp)
    if (ptcb == (OS_TCB *)0) {                                  /* Task to suspend must exist          */
  851660:	e0bffa17 	ldw	r2,-24(fp)
  851664:	1000061e 	bne	r2,zero,851680 <OSTaskSuspend+0xf8>
  851668:	e0bff817 	ldw	r2,-32(fp)
  85166c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851670:	e0bff917 	ldw	r2,-28(fp)
  851674:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_SUSPEND_PRIO);
  851678:	00801204 	movi	r2,72
  85167c:	00003606 	br	851758 <OSTaskSuspend+0x1d0>
    }
    if (ptcb == OS_TCB_RESERVED) {                              /* See if assigned to Mutex            */
  851680:	e0bffa17 	ldw	r2,-24(fp)
  851684:	10800058 	cmpnei	r2,r2,1
  851688:	1000061e 	bne	r2,zero,8516a4 <OSTaskSuspend+0x11c>
  85168c:	e0bff817 	ldw	r2,-32(fp)
  851690:	e0bffb15 	stw	r2,-20(fp)
  851694:	e0bffb17 	ldw	r2,-20(fp)
  851698:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);
  85169c:	008010c4 	movi	r2,67
  8516a0:	00002d06 	br	851758 <OSTaskSuspend+0x1d0>
    }
    y            = ptcb->OSTCBY;
  8516a4:	e0bffa17 	ldw	r2,-24(fp)
  8516a8:	10800d03 	ldbu	r2,52(r2)
  8516ac:	e0bffd05 	stb	r2,-12(fp)
    OSRdyTbl[y] &= ~ptcb->OSTCBBitX;                            /* Make task not ready                 */
  8516b0:	e0fffd03 	ldbu	r3,-12(fp)
  8516b4:	e13ffd03 	ldbu	r4,-12(fp)
  8516b8:	d0a0af44 	addi	r2,gp,-32067
  8516bc:	2085883a 	add	r2,r4,r2
  8516c0:	10800003 	ldbu	r2,0(r2)
  8516c4:	1009883a 	mov	r4,r2
  8516c8:	e0bffa17 	ldw	r2,-24(fp)
  8516cc:	10800d43 	ldbu	r2,53(r2)
  8516d0:	0084303a 	nor	r2,zero,r2
  8516d4:	2084703a 	and	r2,r4,r2
  8516d8:	1009883a 	mov	r4,r2
  8516dc:	d0a0af44 	addi	r2,gp,-32067
  8516e0:	1885883a 	add	r2,r3,r2
  8516e4:	11000005 	stb	r4,0(r2)
    if (OSRdyTbl[y] == 0) {
  8516e8:	e0fffd03 	ldbu	r3,-12(fp)
  8516ec:	d0a0af44 	addi	r2,gp,-32067
  8516f0:	1885883a 	add	r2,r3,r2
  8516f4:	10800003 	ldbu	r2,0(r2)
  8516f8:	10803fcc 	andi	r2,r2,255
  8516fc:	1000071e 	bne	r2,zero,85171c <OSTaskSuspend+0x194>
        OSRdyGrp &= ~ptcb->OSTCBBitY;
  851700:	e0bffa17 	ldw	r2,-24(fp)
  851704:	10800d83 	ldbu	r2,54(r2)
  851708:	0084303a 	nor	r2,zero,r2
  85170c:	1007883a 	mov	r3,r2
  851710:	d0a0af03 	ldbu	r2,-32068(gp)
  851714:	1884703a 	and	r2,r3,r2
  851718:	d0a0af05 	stb	r2,-32068(gp)
    }
    ptcb->OSTCBStat |= OS_STAT_SUSPEND;                         /* Status of task is 'SUSPENDED'       */
  85171c:	e0bffa17 	ldw	r2,-24(fp)
  851720:	10800c03 	ldbu	r2,48(r2)
  851724:	10800214 	ori	r2,r2,8
  851728:	1007883a 	mov	r3,r2
  85172c:	e0bffa17 	ldw	r2,-24(fp)
  851730:	10c00c05 	stb	r3,48(r2)
  851734:	e0bff817 	ldw	r2,-32(fp)
  851738:	e0bffc15 	stw	r2,-16(fp)
  85173c:	e0bffc17 	ldw	r2,-16(fp)
  851740:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    if (self == OS_TRUE) {                                      /* Context switch only if SELF         */
  851744:	e0bff703 	ldbu	r2,-36(fp)
  851748:	10800058 	cmpnei	r2,r2,1
  85174c:	1000011e 	bne	r2,zero,851754 <OSTaskSuspend+0x1cc>
        OS_Sched();                                             /* Find new highest priority task      */
  851750:	084bf580 	call	84bf58 <OS_Sched>
    }
    return (OS_ERR_NONE);
  851754:	0005883a 	mov	r2,zero
}
  851758:	e037883a 	mov	sp,fp
  85175c:	dfc00117 	ldw	ra,4(sp)
  851760:	df000017 	ldw	fp,0(sp)
  851764:	dec00204 	addi	sp,sp,8
  851768:	f800283a 	ret

0085176c <OSTaskQuery>:
*********************************************************************************************************
*/

#if OS_TASK_QUERY_EN > 0
INT8U  OSTaskQuery (INT8U prio, OS_TCB *p_task_data)
{
  85176c:	defff604 	addi	sp,sp,-40
  851770:	dfc00915 	stw	ra,36(sp)
  851774:	df000815 	stw	fp,32(sp)
  851778:	df000804 	addi	fp,sp,32
  85177c:	2005883a 	mov	r2,r4
  851780:	e17fff15 	stw	r5,-4(fp)
  851784:	e0bffe05 	stb	r2,-8(fp)
    OS_TCB    *ptcb;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  851788:	e03ff815 	stw	zero,-32(fp)
#endif



#if OS_ARG_CHK_EN > 0
    if (prio > OS_LOWEST_PRIO) {                 /* Task priority valid ?                              */
  85178c:	e0bffe03 	ldbu	r2,-8(fp)
  851790:	10800570 	cmpltui	r2,r2,21
  851794:	1000051e 	bne	r2,zero,8517ac <OSTaskQuery+0x40>
        if (prio != OS_PRIO_SELF) {
  851798:	e0bffe03 	ldbu	r2,-8(fp)
  85179c:	10803fe0 	cmpeqi	r2,r2,255
  8517a0:	1000021e 	bne	r2,zero,8517ac <OSTaskQuery+0x40>
            return (OS_ERR_PRIO_INVALID);
  8517a4:	00800a84 	movi	r2,42
  8517a8:	00003406 	br	85187c <OSTaskQuery+0x110>
        }
    }
    if (p_task_data == (OS_TCB *)0) {            /* Validate 'p_task_data'                             */
  8517ac:	e0bfff17 	ldw	r2,-4(fp)
  8517b0:	1000021e 	bne	r2,zero,8517bc <OSTaskQuery+0x50>
        return (OS_ERR_PDATA_NULL);
  8517b4:	00800244 	movi	r2,9
  8517b8:	00003006 	br	85187c <OSTaskQuery+0x110>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8517bc:	0005303a 	rdctl	r2,status
  8517c0:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8517c4:	e0fffd17 	ldw	r3,-12(fp)
  8517c8:	00bfff84 	movi	r2,-2
  8517cc:	1884703a 	and	r2,r3,r2
  8517d0:	1001703a 	wrctl	status,r2
  
  return context;
  8517d4:	e0bffd17 	ldw	r2,-12(fp)
    }
#endif
    OS_ENTER_CRITICAL();
  8517d8:	e0bff815 	stw	r2,-32(fp)
    if (prio == OS_PRIO_SELF) {                  /* See if suspend SELF                                */
  8517dc:	e0bffe03 	ldbu	r2,-8(fp)
  8517e0:	10803fd8 	cmpnei	r2,r2,255
  8517e4:	1000031e 	bne	r2,zero,8517f4 <OSTaskQuery+0x88>
        prio = OSTCBCur->OSTCBPrio;
  8517e8:	d0a0b217 	ldw	r2,-32056(gp)
  8517ec:	10800c83 	ldbu	r2,50(r2)
  8517f0:	e0bffe05 	stb	r2,-8(fp)
    }
    ptcb = OSTCBPrioTbl[prio];
  8517f4:	e0fffe03 	ldbu	r3,-8(fp)
  8517f8:	008021b4 	movhi	r2,134
  8517fc:	10950304 	addi	r2,r2,21516
  851800:	18c7883a 	add	r3,r3,r3
  851804:	18c7883a 	add	r3,r3,r3
  851808:	10c5883a 	add	r2,r2,r3
  85180c:	10800017 	ldw	r2,0(r2)
  851810:	e0bffa15 	stw	r2,-24(fp)
    if (ptcb == (OS_TCB *)0) {                   /* Task to query must exist                           */
  851814:	e0bffa17 	ldw	r2,-24(fp)
  851818:	1000061e 	bne	r2,zero,851834 <OSTaskQuery+0xc8>
  85181c:	e0bff817 	ldw	r2,-32(fp)
  851820:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851824:	e0bff917 	ldw	r2,-28(fp)
  851828:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_PRIO);
  85182c:	00800a44 	movi	r2,41
  851830:	00001206 	br	85187c <OSTaskQuery+0x110>
    }
    if (ptcb == OS_TCB_RESERVED) {               /* Task to query must not be assigned to a Mutex      */
  851834:	e0bffa17 	ldw	r2,-24(fp)
  851838:	10800058 	cmpnei	r2,r2,1
  85183c:	1000061e 	bne	r2,zero,851858 <OSTaskQuery+0xec>
  851840:	e0bff817 	ldw	r2,-32(fp)
  851844:	e0bffb15 	stw	r2,-20(fp)
  851848:	e0bffb17 	ldw	r2,-20(fp)
  85184c:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);
  851850:	008010c4 	movi	r2,67
  851854:	00000906 	br	85187c <OSTaskQuery+0x110>
    }
                                                 /* Copy TCB into user storage area                    */
    OS_MemCopy((INT8U *)p_task_data, (INT8U *)ptcb, sizeof(OS_TCB));
  851858:	01801b04 	movi	r6,108
  85185c:	e17ffa17 	ldw	r5,-24(fp)
  851860:	e13fff17 	ldw	r4,-4(fp)
  851864:	084bef00 	call	84bef0 <OS_MemCopy>
  851868:	e0bff817 	ldw	r2,-32(fp)
  85186c:	e0bffc15 	stw	r2,-16(fp)
  851870:	e0bffc17 	ldw	r2,-16(fp)
  851874:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (OS_ERR_NONE);
  851878:	0005883a 	mov	r2,zero
}
  85187c:	e037883a 	mov	sp,fp
  851880:	dfc00117 	ldw	ra,4(sp)
  851884:	df000017 	ldw	fp,0(sp)
  851888:	dec00204 	addi	sp,sp,8
  85188c:	f800283a 	ret

00851890 <OS_TaskStkClr>:
* Returns    : none
*********************************************************************************************************
*/
#if (OS_TASK_STAT_STK_CHK_EN > 0) && (OS_TASK_CREATE_EXT_EN > 0)
void  OS_TaskStkClr (OS_STK *pbos, INT32U size, INT16U opt)
{
  851890:	defffc04 	addi	sp,sp,-16
  851894:	df000315 	stw	fp,12(sp)
  851898:	df000304 	addi	fp,sp,12
  85189c:	e13ffd15 	stw	r4,-12(fp)
  8518a0:	e17ffe15 	stw	r5,-8(fp)
  8518a4:	3005883a 	mov	r2,r6
  8518a8:	e0bfff0d 	sth	r2,-4(fp)
    if ((opt & OS_TASK_OPT_STK_CHK) != 0x0000) {       /* See if stack checking has been enabled       */
  8518ac:	e0bfff0b 	ldhu	r2,-4(fp)
  8518b0:	1080004c 	andi	r2,r2,1
  8518b4:	10000d26 	beq	r2,zero,8518ec <OS_TaskStkClr+0x5c>
        if ((opt & OS_TASK_OPT_STK_CLR) != 0x0000) {   /* See if stack needs to be cleared             */
  8518b8:	e0bfff0b 	ldhu	r2,-4(fp)
  8518bc:	1080008c 	andi	r2,r2,2
  8518c0:	10000a26 	beq	r2,zero,8518ec <OS_TaskStkClr+0x5c>
#if OS_STK_GROWTH == 1
            while (size > 0) {                         /* Stack grows from HIGH to LOW memory          */
  8518c4:	00000706 	br	8518e4 <OS_TaskStkClr+0x54>
                size--;
  8518c8:	e0bffe17 	ldw	r2,-8(fp)
  8518cc:	10bfffc4 	addi	r2,r2,-1
  8518d0:	e0bffe15 	stw	r2,-8(fp)
                *pbos++ = (OS_STK)0;                   /* Clear from bottom of stack and up!           */
  8518d4:	e0bffd17 	ldw	r2,-12(fp)
  8518d8:	10c00104 	addi	r3,r2,4
  8518dc:	e0fffd15 	stw	r3,-12(fp)
  8518e0:	10000015 	stw	zero,0(r2)
void  OS_TaskStkClr (OS_STK *pbos, INT32U size, INT16U opt)
{
    if ((opt & OS_TASK_OPT_STK_CHK) != 0x0000) {       /* See if stack checking has been enabled       */
        if ((opt & OS_TASK_OPT_STK_CLR) != 0x0000) {   /* See if stack needs to be cleared             */
#if OS_STK_GROWTH == 1
            while (size > 0) {                         /* Stack grows from HIGH to LOW memory          */
  8518e4:	e0bffe17 	ldw	r2,-8(fp)
  8518e8:	103ff71e 	bne	r2,zero,8518c8 <__alt_mem_epcs_flash_controller_0+0xff8488c8>
                *pbos-- = (OS_STK)0;                   /* Clear from bottom of stack and down          */
            }
#endif
        }
    }
}
  8518ec:	0001883a 	nop
  8518f0:	e037883a 	mov	sp,fp
  8518f4:	df000017 	ldw	fp,0(sp)
  8518f8:	dec00104 	addi	sp,sp,4
  8518fc:	f800283a 	ret

00851900 <OSTimeDly>:
* Returns    : none
*********************************************************************************************************
*/

void  OSTimeDly (INT16U ticks)
{
  851900:	defff904 	addi	sp,sp,-28
  851904:	dfc00615 	stw	ra,24(sp)
  851908:	df000515 	stw	fp,20(sp)
  85190c:	df000504 	addi	fp,sp,20
  851910:	2005883a 	mov	r2,r4
  851914:	e0bfff0d 	sth	r2,-4(fp)
    INT8U      y;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  851918:	e03ffb15 	stw	zero,-20(fp)
#endif



    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  85191c:	d0a0b103 	ldbu	r2,-32060(gp)
  851920:	10803fcc 	andi	r2,r2,255
  851924:	1000311e 	bne	r2,zero,8519ec <OSTimeDly+0xec>
        return;
    }
    if (ticks > 0) {                             /* 0 means no delay!                                  */
  851928:	e0bfff0b 	ldhu	r2,-4(fp)
  85192c:	10003026 	beq	r2,zero,8519f0 <OSTimeDly+0xf0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  851930:	0005303a 	rdctl	r2,status
  851934:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  851938:	e0fffe17 	ldw	r3,-8(fp)
  85193c:	00bfff84 	movi	r2,-2
  851940:	1884703a 	and	r2,r3,r2
  851944:	1001703a 	wrctl	status,r2
  
  return context;
  851948:	e0bffe17 	ldw	r2,-8(fp)
        OS_ENTER_CRITICAL();
  85194c:	e0bffb15 	stw	r2,-20(fp)
        y            =  OSTCBCur->OSTCBY;        /* Delay current task                                 */
  851950:	d0a0b217 	ldw	r2,-32056(gp)
  851954:	10800d03 	ldbu	r2,52(r2)
  851958:	e0bffd05 	stb	r2,-12(fp)
        OSRdyTbl[y] &= ~OSTCBCur->OSTCBBitX;
  85195c:	e0fffd03 	ldbu	r3,-12(fp)
  851960:	e13ffd03 	ldbu	r4,-12(fp)
  851964:	d0a0af44 	addi	r2,gp,-32067
  851968:	2085883a 	add	r2,r4,r2
  85196c:	10800003 	ldbu	r2,0(r2)
  851970:	1009883a 	mov	r4,r2
  851974:	d0a0b217 	ldw	r2,-32056(gp)
  851978:	10800d43 	ldbu	r2,53(r2)
  85197c:	0084303a 	nor	r2,zero,r2
  851980:	2084703a 	and	r2,r4,r2
  851984:	1009883a 	mov	r4,r2
  851988:	d0a0af44 	addi	r2,gp,-32067
  85198c:	1885883a 	add	r2,r3,r2
  851990:	11000005 	stb	r4,0(r2)
        if (OSRdyTbl[y] == 0) {
  851994:	e0fffd03 	ldbu	r3,-12(fp)
  851998:	d0a0af44 	addi	r2,gp,-32067
  85199c:	1885883a 	add	r2,r3,r2
  8519a0:	10800003 	ldbu	r2,0(r2)
  8519a4:	10803fcc 	andi	r2,r2,255
  8519a8:	1000071e 	bne	r2,zero,8519c8 <OSTimeDly+0xc8>
            OSRdyGrp &= ~OSTCBCur->OSTCBBitY;
  8519ac:	d0a0b217 	ldw	r2,-32056(gp)
  8519b0:	10800d83 	ldbu	r2,54(r2)
  8519b4:	0084303a 	nor	r2,zero,r2
  8519b8:	1007883a 	mov	r3,r2
  8519bc:	d0a0af03 	ldbu	r2,-32068(gp)
  8519c0:	1884703a 	and	r2,r3,r2
  8519c4:	d0a0af05 	stb	r2,-32068(gp)
        }
        OSTCBCur->OSTCBDly = ticks;              /* Load ticks in TCB                                  */
  8519c8:	d0a0b217 	ldw	r2,-32056(gp)
  8519cc:	e0ffff0b 	ldhu	r3,-4(fp)
  8519d0:	10c00b8d 	sth	r3,46(r2)
  8519d4:	e0bffb17 	ldw	r2,-20(fp)
  8519d8:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8519dc:	e0bffc17 	ldw	r2,-16(fp)
  8519e0:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        OS_Sched();                              /* Find next task to run!                             */
  8519e4:	084bf580 	call	84bf58 <OS_Sched>
  8519e8:	00000106 	br	8519f0 <OSTimeDly+0xf0>
#endif



    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
        return;
  8519ec:	0001883a 	nop
        }
        OSTCBCur->OSTCBDly = ticks;              /* Load ticks in TCB                                  */
        OS_EXIT_CRITICAL();
        OS_Sched();                              /* Find next task to run!                             */
    }
}
  8519f0:	e037883a 	mov	sp,fp
  8519f4:	dfc00117 	ldw	ra,4(sp)
  8519f8:	df000017 	ldw	fp,0(sp)
  8519fc:	dec00204 	addi	sp,sp,8
  851a00:	f800283a 	ret

00851a04 <OSTimeDlyHMSM>:
*********************************************************************************************************
*/

#if OS_TIME_DLY_HMSM_EN > 0
INT8U  OSTimeDlyHMSM (INT8U hours, INT8U minutes, INT8U seconds, INT16U ms)
{
  851a04:	defff704 	addi	sp,sp,-36
  851a08:	dfc00815 	stw	ra,32(sp)
  851a0c:	df000715 	stw	fp,28(sp)
  851a10:	dc000615 	stw	r16,24(sp)
  851a14:	df000704 	addi	fp,sp,28
  851a18:	2011883a 	mov	r8,r4
  851a1c:	2809883a 	mov	r4,r5
  851a20:	3007883a 	mov	r3,r6
  851a24:	3805883a 	mov	r2,r7
  851a28:	e23ffb05 	stb	r8,-20(fp)
  851a2c:	e13ffc05 	stb	r4,-16(fp)
  851a30:	e0fffd05 	stb	r3,-12(fp)
  851a34:	e0bffe0d 	sth	r2,-8(fp)
    INT32U ticks;
    INT16U loops;


    if (OSIntNesting > 0) {                      /* See if trying to call from an ISR                  */
  851a38:	d0a0b103 	ldbu	r2,-32060(gp)
  851a3c:	10803fcc 	andi	r2,r2,255
  851a40:	10000226 	beq	r2,zero,851a4c <OSTimeDlyHMSM+0x48>
        return (OS_ERR_TIME_DLY_ISR);
  851a44:	00801544 	movi	r2,85
  851a48:	00004706 	br	851b68 <OSTimeDlyHMSM+0x164>
    }
#if OS_ARG_CHK_EN > 0
    if (hours == 0) {
  851a4c:	e0bffb03 	ldbu	r2,-20(fp)
  851a50:	1000081e 	bne	r2,zero,851a74 <OSTimeDlyHMSM+0x70>
        if (minutes == 0) {
  851a54:	e0bffc03 	ldbu	r2,-16(fp)
  851a58:	1000061e 	bne	r2,zero,851a74 <OSTimeDlyHMSM+0x70>
            if (seconds == 0) {
  851a5c:	e0bffd03 	ldbu	r2,-12(fp)
  851a60:	1000041e 	bne	r2,zero,851a74 <OSTimeDlyHMSM+0x70>
                if (ms == 0) {
  851a64:	e0bffe0b 	ldhu	r2,-8(fp)
  851a68:	1000021e 	bne	r2,zero,851a74 <OSTimeDlyHMSM+0x70>
                    return (OS_ERR_TIME_ZERO_DLY);
  851a6c:	00801504 	movi	r2,84
  851a70:	00003d06 	br	851b68 <OSTimeDlyHMSM+0x164>
                }
            }
        }
    }
    if (minutes > 59) {
  851a74:	e0bffc03 	ldbu	r2,-16(fp)
  851a78:	10800f30 	cmpltui	r2,r2,60
  851a7c:	1000021e 	bne	r2,zero,851a88 <OSTimeDlyHMSM+0x84>
        return (OS_ERR_TIME_INVALID_MINUTES);    /* Validate arguments to be within range              */
  851a80:	00801444 	movi	r2,81
  851a84:	00003806 	br	851b68 <OSTimeDlyHMSM+0x164>
    }
    if (seconds > 59) {
  851a88:	e0bffd03 	ldbu	r2,-12(fp)
  851a8c:	10800f30 	cmpltui	r2,r2,60
  851a90:	1000021e 	bne	r2,zero,851a9c <OSTimeDlyHMSM+0x98>
        return (OS_ERR_TIME_INVALID_SECONDS);
  851a94:	00801484 	movi	r2,82
  851a98:	00003306 	br	851b68 <OSTimeDlyHMSM+0x164>
    }
    if (ms > 999) {
  851a9c:	e0bffe0b 	ldhu	r2,-8(fp)
  851aa0:	1080fa30 	cmpltui	r2,r2,1000
  851aa4:	1000021e 	bne	r2,zero,851ab0 <OSTimeDlyHMSM+0xac>
        return (OS_ERR_TIME_INVALID_MS);
  851aa8:	008014c4 	movi	r2,83
  851aac:	00002e06 	br	851b68 <OSTimeDlyHMSM+0x164>
    }
#endif
                                                 /* Compute the total number of clock ticks required.. */
                                                 /* .. (rounded to the nearest tick)                   */
    ticks = ((INT32U)hours * 3600L + (INT32U)minutes * 60L + (INT32U)seconds) * OS_TICKS_PER_SEC
  851ab0:	e0bffb03 	ldbu	r2,-20(fp)
  851ab4:	01438404 	movi	r5,3600
  851ab8:	1009883a 	mov	r4,r2
  851abc:	08305040 	call	830504 <__mulsi3>
  851ac0:	1021883a 	mov	r16,r2
  851ac4:	e0bffc03 	ldbu	r2,-16(fp)
  851ac8:	01400f04 	movi	r5,60
  851acc:	1009883a 	mov	r4,r2
  851ad0:	08305040 	call	830504 <__mulsi3>
  851ad4:	8087883a 	add	r3,r16,r2
  851ad8:	e0bffd03 	ldbu	r2,-12(fp)
  851adc:	1885883a 	add	r2,r3,r2
  851ae0:	0140fa04 	movi	r5,1000
  851ae4:	1009883a 	mov	r4,r2
  851ae8:	08305040 	call	830504 <__mulsi3>
  851aec:	1021883a 	mov	r16,r2
          + OS_TICKS_PER_SEC * ((INT32U)ms + 500L / OS_TICKS_PER_SEC) / 1000L;
  851af0:	e0bffe0b 	ldhu	r2,-8(fp)
  851af4:	0140fa04 	movi	r5,1000
  851af8:	1009883a 	mov	r4,r2
  851afc:	08305040 	call	830504 <__mulsi3>
  851b00:	0140fa04 	movi	r5,1000
  851b04:	1009883a 	mov	r4,r2
  851b08:	08304480 	call	830448 <__udivsi3>
        return (OS_ERR_TIME_INVALID_MS);
    }
#endif
                                                 /* Compute the total number of clock ticks required.. */
                                                 /* .. (rounded to the nearest tick)                   */
    ticks = ((INT32U)hours * 3600L + (INT32U)minutes * 60L + (INT32U)seconds) * OS_TICKS_PER_SEC
  851b0c:	8085883a 	add	r2,r16,r2
  851b10:	e0bffa15 	stw	r2,-24(fp)
          + OS_TICKS_PER_SEC * ((INT32U)ms + 500L / OS_TICKS_PER_SEC) / 1000L;
    loops = (INT16U)(ticks >> 16);               /* Compute the integral number of 65536 tick delays   */
  851b14:	e0bffa17 	ldw	r2,-24(fp)
  851b18:	1004d43a 	srli	r2,r2,16
  851b1c:	e0bff90d 	sth	r2,-28(fp)
    ticks = ticks & 0xFFFFL;                     /* Obtain  the fractional number of ticks             */
  851b20:	e0bffa17 	ldw	r2,-24(fp)
  851b24:	10bfffcc 	andi	r2,r2,65535
  851b28:	e0bffa15 	stw	r2,-24(fp)
    OSTimeDly((INT16U)ticks);
  851b2c:	e0bffa17 	ldw	r2,-24(fp)
  851b30:	10bfffcc 	andi	r2,r2,65535
  851b34:	1009883a 	mov	r4,r2
  851b38:	08519000 	call	851900 <OSTimeDly>
    while (loops > 0) {
  851b3c:	00000706 	br	851b5c <OSTimeDlyHMSM+0x158>
        OSTimeDly((INT16U)32768u);
  851b40:	01200014 	movui	r4,32768
  851b44:	08519000 	call	851900 <OSTimeDly>
        OSTimeDly((INT16U)32768u);
  851b48:	01200014 	movui	r4,32768
  851b4c:	08519000 	call	851900 <OSTimeDly>
        loops--;
  851b50:	e0bff90b 	ldhu	r2,-28(fp)
  851b54:	10bfffc4 	addi	r2,r2,-1
  851b58:	e0bff90d 	sth	r2,-28(fp)
    ticks = ((INT32U)hours * 3600L + (INT32U)minutes * 60L + (INT32U)seconds) * OS_TICKS_PER_SEC
          + OS_TICKS_PER_SEC * ((INT32U)ms + 500L / OS_TICKS_PER_SEC) / 1000L;
    loops = (INT16U)(ticks >> 16);               /* Compute the integral number of 65536 tick delays   */
    ticks = ticks & 0xFFFFL;                     /* Obtain  the fractional number of ticks             */
    OSTimeDly((INT16U)ticks);
    while (loops > 0) {
  851b5c:	e0bff90b 	ldhu	r2,-28(fp)
  851b60:	103ff71e 	bne	r2,zero,851b40 <__alt_mem_epcs_flash_controller_0+0xff848b40>
        OSTimeDly((INT16U)32768u);
        OSTimeDly((INT16U)32768u);
        loops--;
    }
    return (OS_ERR_NONE);
  851b64:	0005883a 	mov	r2,zero
}
  851b68:	e6ffff04 	addi	sp,fp,-4
  851b6c:	dfc00217 	ldw	ra,8(sp)
  851b70:	df000117 	ldw	fp,4(sp)
  851b74:	dc000017 	ldw	r16,0(sp)
  851b78:	dec00304 	addi	sp,sp,12
  851b7c:	f800283a 	ret

00851b80 <OSTimeDlyResume>:
*********************************************************************************************************
*/

#if OS_TIME_DLY_RESUME_EN > 0
INT8U  OSTimeDlyResume (INT8U prio)
{
  851b80:	defff504 	addi	sp,sp,-44
  851b84:	dfc00a15 	stw	ra,40(sp)
  851b88:	df000915 	stw	fp,36(sp)
  851b8c:	df000904 	addi	fp,sp,36
  851b90:	2005883a 	mov	r2,r4
  851b94:	e0bfff05 	stb	r2,-4(fp)
    OS_TCB    *ptcb;
#if OS_CRITICAL_METHOD == 3                                    /* Storage for CPU status register      */
    OS_CPU_SR  cpu_sr = 0;
  851b98:	e03ff715 	stw	zero,-36(fp)
#endif



    if (prio >= OS_LOWEST_PRIO) {
  851b9c:	e0bfff03 	ldbu	r2,-4(fp)
  851ba0:	10800530 	cmpltui	r2,r2,20
  851ba4:	1000021e 	bne	r2,zero,851bb0 <OSTimeDlyResume+0x30>
        return (OS_ERR_PRIO_INVALID);
  851ba8:	00800a84 	movi	r2,42
  851bac:	00006406 	br	851d40 <OSTimeDlyResume+0x1c0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  851bb0:	0005303a 	rdctl	r2,status
  851bb4:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  851bb8:	e0fffe17 	ldw	r3,-8(fp)
  851bbc:	00bfff84 	movi	r2,-2
  851bc0:	1884703a 	and	r2,r3,r2
  851bc4:	1001703a 	wrctl	status,r2
  
  return context;
  851bc8:	e0bffe17 	ldw	r2,-8(fp)
    }
    OS_ENTER_CRITICAL();
  851bcc:	e0bff715 	stw	r2,-36(fp)
    ptcb = OSTCBPrioTbl[prio];                                 /* Make sure that task exist            */
  851bd0:	e0ffff03 	ldbu	r3,-4(fp)
  851bd4:	008021b4 	movhi	r2,134
  851bd8:	10950304 	addi	r2,r2,21516
  851bdc:	18c7883a 	add	r3,r3,r3
  851be0:	18c7883a 	add	r3,r3,r3
  851be4:	10c5883a 	add	r2,r2,r3
  851be8:	10800017 	ldw	r2,0(r2)
  851bec:	e0bff915 	stw	r2,-28(fp)
    if (ptcb == (OS_TCB *)0) {
  851bf0:	e0bff917 	ldw	r2,-28(fp)
  851bf4:	1000061e 	bne	r2,zero,851c10 <OSTimeDlyResume+0x90>
  851bf8:	e0bff717 	ldw	r2,-36(fp)
  851bfc:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851c00:	e0bff817 	ldw	r2,-32(fp)
  851c04:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);                        /* The task does not exist              */
  851c08:	008010c4 	movi	r2,67
  851c0c:	00004c06 	br	851d40 <OSTimeDlyResume+0x1c0>
    }
    if (ptcb == OS_TCB_RESERVED) {
  851c10:	e0bff917 	ldw	r2,-28(fp)
  851c14:	10800058 	cmpnei	r2,r2,1
  851c18:	1000061e 	bne	r2,zero,851c34 <OSTimeDlyResume+0xb4>
  851c1c:	e0bff717 	ldw	r2,-36(fp)
  851c20:	e0bffa15 	stw	r2,-24(fp)
  851c24:	e0bffa17 	ldw	r2,-24(fp)
  851c28:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TASK_NOT_EXIST);                        /* The task does not exist              */
  851c2c:	008010c4 	movi	r2,67
  851c30:	00004306 	br	851d40 <OSTimeDlyResume+0x1c0>
    }
    if (ptcb->OSTCBDly == 0) {                                 /* See if task is delayed               */
  851c34:	e0bff917 	ldw	r2,-28(fp)
  851c38:	10800b8b 	ldhu	r2,46(r2)
  851c3c:	10bfffcc 	andi	r2,r2,65535
  851c40:	1000061e 	bne	r2,zero,851c5c <OSTimeDlyResume+0xdc>
  851c44:	e0bff717 	ldw	r2,-36(fp)
  851c48:	e0bffb15 	stw	r2,-20(fp)
  851c4c:	e0bffb17 	ldw	r2,-20(fp)
  851c50:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        return (OS_ERR_TIME_NOT_DLY);                          /* Indicate that task was not delayed   */
  851c54:	00801404 	movi	r2,80
  851c58:	00003906 	br	851d40 <OSTimeDlyResume+0x1c0>
    }

    ptcb->OSTCBDly = 0;                                        /* Clear the time delay                 */
  851c5c:	e0bff917 	ldw	r2,-28(fp)
  851c60:	10000b8d 	sth	zero,46(r2)
    if ((ptcb->OSTCBStat & OS_STAT_PEND_ANY) != OS_STAT_RDY) {
  851c64:	e0bff917 	ldw	r2,-28(fp)
  851c68:	10800c03 	ldbu	r2,48(r2)
  851c6c:	10803fcc 	andi	r2,r2,255
  851c70:	10800dcc 	andi	r2,r2,55
  851c74:	10000b26 	beq	r2,zero,851ca4 <OSTimeDlyResume+0x124>
        ptcb->OSTCBStat     &= ~OS_STAT_PEND_ANY;              /* Yes, Clear status flag               */
  851c78:	e0bff917 	ldw	r2,-28(fp)
  851c7c:	10c00c03 	ldbu	r3,48(r2)
  851c80:	00bff204 	movi	r2,-56
  851c84:	1884703a 	and	r2,r3,r2
  851c88:	1007883a 	mov	r3,r2
  851c8c:	e0bff917 	ldw	r2,-28(fp)
  851c90:	10c00c05 	stb	r3,48(r2)
        ptcb->OSTCBStatPend  =  OS_STAT_PEND_TO;               /* Indicate PEND timeout                */
  851c94:	e0bff917 	ldw	r2,-28(fp)
  851c98:	00c00044 	movi	r3,1
  851c9c:	10c00c45 	stb	r3,49(r2)
  851ca0:	00000206 	br	851cac <OSTimeDlyResume+0x12c>
    } else {
        ptcb->OSTCBStatPend  =  OS_STAT_PEND_OK;
  851ca4:	e0bff917 	ldw	r2,-28(fp)
  851ca8:	10000c45 	stb	zero,49(r2)
    }
    if ((ptcb->OSTCBStat & OS_STAT_SUSPEND) == OS_STAT_RDY) {  /* Is task suspended?                   */
  851cac:	e0bff917 	ldw	r2,-28(fp)
  851cb0:	10800c03 	ldbu	r2,48(r2)
  851cb4:	10803fcc 	andi	r2,r2,255
  851cb8:	1080020c 	andi	r2,r2,8
  851cbc:	10001b1e 	bne	r2,zero,851d2c <OSTimeDlyResume+0x1ac>
        OSRdyGrp               |= ptcb->OSTCBBitY;             /* No,  Make ready                      */
  851cc0:	e0bff917 	ldw	r2,-28(fp)
  851cc4:	10c00d83 	ldbu	r3,54(r2)
  851cc8:	d0a0af03 	ldbu	r2,-32068(gp)
  851ccc:	1884b03a 	or	r2,r3,r2
  851cd0:	d0a0af05 	stb	r2,-32068(gp)
        OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
  851cd4:	e0bff917 	ldw	r2,-28(fp)
  851cd8:	10800d03 	ldbu	r2,52(r2)
  851cdc:	10c03fcc 	andi	r3,r2,255
  851ce0:	e0bff917 	ldw	r2,-28(fp)
  851ce4:	10800d03 	ldbu	r2,52(r2)
  851ce8:	11003fcc 	andi	r4,r2,255
  851cec:	d0a0af44 	addi	r2,gp,-32067
  851cf0:	2085883a 	add	r2,r4,r2
  851cf4:	11000003 	ldbu	r4,0(r2)
  851cf8:	e0bff917 	ldw	r2,-28(fp)
  851cfc:	10800d43 	ldbu	r2,53(r2)
  851d00:	2084b03a 	or	r2,r4,r2
  851d04:	1009883a 	mov	r4,r2
  851d08:	d0a0af44 	addi	r2,gp,-32067
  851d0c:	1885883a 	add	r2,r3,r2
  851d10:	11000005 	stb	r4,0(r2)
  851d14:	e0bff717 	ldw	r2,-36(fp)
  851d18:	e0bffc15 	stw	r2,-16(fp)
  851d1c:	e0bffc17 	ldw	r2,-16(fp)
  851d20:	1001703a 	wrctl	status,r2
        OS_EXIT_CRITICAL();
        OS_Sched();                                            /* See if this is new highest priority  */
  851d24:	084bf580 	call	84bf58 <OS_Sched>
  851d28:	00000406 	br	851d3c <OSTimeDlyResume+0x1bc>
  851d2c:	e0bff717 	ldw	r2,-36(fp)
  851d30:	e0bffd15 	stw	r2,-12(fp)
  851d34:	e0bffd17 	ldw	r2,-12(fp)
  851d38:	1001703a 	wrctl	status,r2
    } else {
        OS_EXIT_CRITICAL();                                    /* Task may be suspended                */
    }
    return (OS_ERR_NONE);
  851d3c:	0005883a 	mov	r2,zero
}
  851d40:	e037883a 	mov	sp,fp
  851d44:	dfc00117 	ldw	ra,4(sp)
  851d48:	df000017 	ldw	fp,0(sp)
  851d4c:	dec00204 	addi	sp,sp,8
  851d50:	f800283a 	ret

00851d54 <OSTimeGet>:
*********************************************************************************************************
*/

#if OS_TIME_GET_SET_EN > 0
INT32U  OSTimeGet (void)
{
  851d54:	defffb04 	addi	sp,sp,-20
  851d58:	df000415 	stw	fp,16(sp)
  851d5c:	df000404 	addi	fp,sp,16
    INT32U     ticks;
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  851d60:	e03ffc15 	stw	zero,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  851d64:	0005303a 	rdctl	r2,status
  851d68:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  851d6c:	e0fffe17 	ldw	r3,-8(fp)
  851d70:	00bfff84 	movi	r2,-2
  851d74:	1884703a 	and	r2,r3,r2
  851d78:	1001703a 	wrctl	status,r2
  
  return context;
  851d7c:	e0bffe17 	ldw	r2,-8(fp)
#endif



    OS_ENTER_CRITICAL();
  851d80:	e0bffc15 	stw	r2,-16(fp)
    ticks = OSTime;
  851d84:	d0a0b317 	ldw	r2,-32052(gp)
  851d88:	e0bffd15 	stw	r2,-12(fp)
  851d8c:	e0bffc17 	ldw	r2,-16(fp)
  851d90:	e0bfff15 	stw	r2,-4(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851d94:	e0bfff17 	ldw	r2,-4(fp)
  851d98:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
    return (ticks);
  851d9c:	e0bffd17 	ldw	r2,-12(fp)
}
  851da0:	e037883a 	mov	sp,fp
  851da4:	df000017 	ldw	fp,0(sp)
  851da8:	dec00104 	addi	sp,sp,4
  851dac:	f800283a 	ret

00851db0 <OSTimeSet>:
*********************************************************************************************************
*/

#if OS_TIME_GET_SET_EN > 0
void  OSTimeSet (INT32U ticks)
{
  851db0:	defffb04 	addi	sp,sp,-20
  851db4:	df000415 	stw	fp,16(sp)
  851db8:	df000404 	addi	fp,sp,16
  851dbc:	e13fff15 	stw	r4,-4(fp)
#if OS_CRITICAL_METHOD == 3                      /* Allocate storage for CPU status register           */
    OS_CPU_SR  cpu_sr = 0;
  851dc0:	e03ffc15 	stw	zero,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  851dc4:	0005303a 	rdctl	r2,status
  851dc8:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  851dcc:	e0fffd17 	ldw	r3,-12(fp)
  851dd0:	00bfff84 	movi	r2,-2
  851dd4:	1884703a 	and	r2,r3,r2
  851dd8:	1001703a 	wrctl	status,r2
  
  return context;
  851ddc:	e0bffd17 	ldw	r2,-12(fp)
#endif



    OS_ENTER_CRITICAL();
  851de0:	e0bffc15 	stw	r2,-16(fp)
    OSTime = ticks;
  851de4:	e0bfff17 	ldw	r2,-4(fp)
  851de8:	d0a0b315 	stw	r2,-32052(gp)
  851dec:	e0bffc17 	ldw	r2,-16(fp)
  851df0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  851df4:	e0bffe17 	ldw	r2,-8(fp)
  851df8:	1001703a 	wrctl	status,r2
    OS_EXIT_CRITICAL();
}
  851dfc:	0001883a 	nop
  851e00:	e037883a 	mov	sp,fp
  851e04:	df000017 	ldw	fp,0(sp)
  851e08:	dec00104 	addi	sp,sp,4
  851e0c:	f800283a 	ret

00851e10 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  851e10:	defffd04 	addi	sp,sp,-12
  851e14:	dfc00215 	stw	ra,8(sp)
  851e18:	df000115 	stw	fp,4(sp)
  851e1c:	df000104 	addi	fp,sp,4
  851e20:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  851e24:	d1604604 	addi	r5,gp,-32488
  851e28:	e13fff17 	ldw	r4,-4(fp)
  851e2c:	0855bc80 	call	855bc8 <alt_dev_llist_insert>
}
  851e30:	e037883a 	mov	sp,fp
  851e34:	dfc00117 	ldw	ra,4(sp)
  851e38:	df000017 	ldw	fp,0(sp)
  851e3c:	dec00204 	addi	sp,sp,8
  851e40:	f800283a 	ret

00851e44 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  851e44:	defffd04 	addi	sp,sp,-12
  851e48:	dfc00215 	stw	ra,8(sp)
  851e4c:	df000115 	stw	fp,4(sp)
  851e50:	df000104 	addi	fp,sp,4
  851e54:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
  851e58:	08564940 	call	856494 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  851e5c:	00800044 	movi	r2,1
  851e60:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  851e64:	0001883a 	nop
  851e68:	e037883a 	mov	sp,fp
  851e6c:	dfc00117 	ldw	ra,4(sp)
  851e70:	df000017 	ldw	fp,0(sp)
  851e74:	dec00204 	addi	sp,sp,8
  851e78:	f800283a 	ret

00851e7c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  851e7c:	defffe04 	addi	sp,sp,-8
  851e80:	dfc00115 	stw	ra,4(sp)
  851e84:	df000015 	stw	fp,0(sp)
  851e88:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
  851e8c:	01c0fa04 	movi	r7,1000
  851e90:	01800104 	movi	r6,4
  851e94:	000b883a 	mov	r5,zero
  851e98:	01004074 	movhi	r4,257
  851e9c:	21281004 	addi	r4,r4,-24512
  851ea0:	08537d80 	call	8537d8 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_EPCS_FLASH_CONTROLLER_INIT ( EPCS_FLASH_CONTROLLER_0, epcs_flash_controller_0);
  851ea4:	010021b4 	movhi	r4,134
  851ea8:	2128ba04 	addi	r4,r4,-23832
  851eac:	0851f6c0 	call	851f6c <alt_epcs_flash_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
  851eb0:	000d883a 	mov	r6,zero
  851eb4:	000b883a 	mov	r5,zero
  851eb8:	010021b4 	movhi	r4,134
  851ebc:	2128f704 	addi	r4,r4,-23588
  851ec0:	0852b980 	call	852b98 <altera_avalon_jtag_uart_init>
  851ec4:	010021b4 	movhi	r4,134
  851ec8:	2128ed04 	addi	r4,r4,-23628
  851ecc:	0851e100 	call	851e10 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
  851ed0:	0001883a 	nop
    ALTERA_AVALON_UART_INIT ( WIFI_UART, wifi_uart);
  851ed4:	01800044 	movi	r6,1
  851ed8:	000b883a 	mov	r5,zero
  851edc:	010021b4 	movhi	r4,134
  851ee0:	212d1204 	addi	r4,r4,-19384
  851ee4:	08539640 	call	853964 <altera_avalon_uart_init>
  851ee8:	010021b4 	movhi	r4,134
  851eec:	212d0804 	addi	r4,r4,-19424
  851ef0:	0851e100 	call	851e10 <alt_dev_reg>
    ALTERA_HOSTFS_INIT ( ALTERA_HOSTFS, altera_hostfs);
  851ef4:	010021b4 	movhi	r4,134
  851ef8:	212d3c04 	addi	r4,r4,-19216
  851efc:	0855f800 	call	855f80 <alt_fs_reg>
    FIFOED_AVALON_UART_INIT ( CAM_UART, cam_uart);
  851f00:	018001c4 	movi	r6,7
  851f04:	000b883a 	mov	r5,zero
  851f08:	010021b4 	movhi	r4,134
  851f0c:	212d5004 	addi	r4,r4,-19136
  851f10:	08556f00 	call	8556f0 <fifoed_avalon_uart_init>
  851f14:	010021b4 	movhi	r4,134
  851f18:	212d4604 	addi	r4,r4,-19176
  851f1c:	0851e100 	call	851e10 <alt_dev_reg>
}
  851f20:	0001883a 	nop
  851f24:	e037883a 	mov	sp,fp
  851f28:	dfc00117 	ldw	ra,4(sp)
  851f2c:	df000017 	ldw	fp,0(sp)
  851f30:	dec00204 	addi	sp,sp,8
  851f34:	f800283a 	ret

00851f38 <alt_flash_device_register>:

typedef struct alt_flash_dev alt_flash_dev; 
typedef alt_flash_dev alt_flash_fd;

static ALT_INLINE int alt_flash_device_register( alt_flash_fd* fd)
{
  851f38:	defffd04 	addi	sp,sp,-12
  851f3c:	dfc00215 	stw	ra,8(sp)
  851f40:	df000115 	stw	fp,4(sp)
  851f44:	df000104 	addi	fp,sp,4
  851f48:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_flash_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) fd, &alt_flash_dev_list);
  851f4c:	d1607d04 	addi	r5,gp,-32268
  851f50:	e13fff17 	ldw	r4,-4(fp)
  851f54:	0855bc80 	call	855bc8 <alt_dev_llist_insert>
}
  851f58:	e037883a 	mov	sp,fp
  851f5c:	dfc00117 	ldw	ra,4(sp)
  851f60:	df000017 	ldw	fp,0(sp)
  851f64:	dec00204 	addi	sp,sp,8
  851f68:	f800283a 	ret

00851f6c <alt_epcs_flash_init>:
/*
 * alt_epcs_flash_init
 *
 */
int alt_epcs_flash_init(alt_flash_epcs_dev* flash)
{
  851f6c:	defffc04 	addi	sp,sp,-16
  851f70:	dfc00315 	stw	ra,12(sp)
  851f74:	df000215 	stw	fp,8(sp)
  851f78:	df000204 	addi	fp,sp,8
  851f7c:	e13fff15 	stw	r4,-4(fp)
  int ret_code = 0;
  851f80:	e03ffe15 	stw	zero,-8(fp)

  /* Set up function pointers and/or data structures as needed. */
  ret_code = alt_epcs_flash_query(flash);
  851f84:	e13fff17 	ldw	r4,-4(fp)
  851f88:	0851fc00 	call	851fc0 <alt_epcs_flash_query>
  851f8c:	e0bffe15 	stw	r2,-8(fp)
  */

  /*
  *  Register this device as a valid flash device type
  */
  if (!ret_code)
  851f90:	e0bffe17 	ldw	r2,-8(fp)
  851f94:	1000041e 	bne	r2,zero,851fa8 <alt_epcs_flash_init+0x3c>
    ret_code = alt_flash_device_register(&(flash->dev));
  851f98:	e0bfff17 	ldw	r2,-4(fp)
  851f9c:	1009883a 	mov	r4,r2
  851fa0:	0851f380 	call	851f38 <alt_flash_device_register>
  851fa4:	e0bffe15 	stw	r2,-8(fp)

  return ret_code;
  851fa8:	e0bffe17 	ldw	r2,-8(fp)
}
  851fac:	e037883a 	mov	sp,fp
  851fb0:	dfc00117 	ldw	ra,4(sp)
  851fb4:	df000017 	ldw	fp,0(sp)
  851fb8:	dec00204 	addi	sp,sp,8
  851fbc:	f800283a 	ret

00851fc0 <alt_epcs_flash_query>:


static int alt_epcs_flash_query(alt_flash_epcs_dev* flash)
{
  851fc0:	defffc04 	addi	sp,sp,-16
  851fc4:	dfc00315 	stw	ra,12(sp)
  851fc8:	df000215 	stw	fp,8(sp)
  851fcc:	df000204 	addi	fp,sp,8
  851fd0:	e13fff15 	stw	r4,-4(fp)
  int ret_code = 0;
  851fd4:	e03ffe15 	stw	zero,-8(fp)
   * reset the device, or whatever, to ensure that
   * it's in a known working state.
  */
  
  /* Disable 4-bytes address mode. */
  flash->four_bytes_mode = 0;
  851fd8:	e0bfff17 	ldw	r2,-4(fp)
  851fdc:	10003215 	stw	zero,200(r2)
  
  /* Send the RES command sequence */
  flash->silicon_id =
    epcs_read_electronic_signature(flash->register_base);
  851fe0:	e0bfff17 	ldw	r2,-4(fp)
  851fe4:	10802e17 	ldw	r2,184(r2)
  851fe8:	1009883a 	mov	r4,r2
  851fec:	0854cc80 	call	854cc8 <epcs_read_electronic_signature>
  
  /* Disable 4-bytes address mode. */
  flash->four_bytes_mode = 0;
  
  /* Send the RES command sequence */
  flash->silicon_id =
  851ff0:	10c03fcc 	andi	r3,r2,255
  851ff4:	e0bfff17 	ldw	r2,-4(fp)
  851ff8:	10c03015 	stw	r3,192(r2)
    epcs_read_electronic_signature(flash->register_base);

  /* Fill in all device-specific parameters. */
  if (flash->silicon_id == 0x16) /* EPCS64 */
  851ffc:	e0bfff17 	ldw	r2,-4(fp)
  852000:	10803017 	ldw	r2,192(r2)
  852004:	10800598 	cmpnei	r2,r2,22
  852008:	10000a1e 	bne	r2,zero,852034 <alt_epcs_flash_query+0x74>
  {
    flash->dev.region_info[0].region_size = 64 * 1024 * 1024 / 8;
  85200c:	e0bfff17 	ldw	r2,-4(fp)
  852010:	00c02034 	movhi	r3,128
  852014:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 128;
  852018:	e0bfff17 	ldw	r2,-4(fp)
  85201c:	00c02004 	movi	r3,128
  852020:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
  852024:	e0bfff17 	ldw	r2,-4(fp)
  852028:	00c00074 	movhi	r3,1
  85202c:	10c01015 	stw	r3,64(r2)
  852030:	0000ce06 	br	85236c <alt_epcs_flash_query+0x3ac>
  }
  else if (flash->silicon_id == 0x14) /* EPCS16 */
  852034:	e0bfff17 	ldw	r2,-4(fp)
  852038:	10803017 	ldw	r2,192(r2)
  85203c:	10800518 	cmpnei	r2,r2,20
  852040:	10000a1e 	bne	r2,zero,85206c <alt_epcs_flash_query+0xac>
  {
    flash->dev.region_info[0].region_size = 16 * 1024 * 1024 / 8;
  852044:	e0bfff17 	ldw	r2,-4(fp)
  852048:	00c00834 	movhi	r3,32
  85204c:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 32;
  852050:	e0bfff17 	ldw	r2,-4(fp)
  852054:	00c00804 	movi	r3,32
  852058:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
  85205c:	e0bfff17 	ldw	r2,-4(fp)
  852060:	00c00074 	movhi	r3,1
  852064:	10c01015 	stw	r3,64(r2)
  852068:	0000c006 	br	85236c <alt_epcs_flash_query+0x3ac>
  }
  else if (flash->silicon_id == 0x13) /* EPCS8 */
  85206c:	e0bfff17 	ldw	r2,-4(fp)
  852070:	10803017 	ldw	r2,192(r2)
  852074:	108004d8 	cmpnei	r2,r2,19
  852078:	10000a1e 	bne	r2,zero,8520a4 <alt_epcs_flash_query+0xe4>
  {
    flash->dev.region_info[0].region_size = 8 * 1024 * 1024 / 8;
  85207c:	e0bfff17 	ldw	r2,-4(fp)
  852080:	00c00434 	movhi	r3,16
  852084:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 16;
  852088:	e0bfff17 	ldw	r2,-4(fp)
  85208c:	00c00404 	movi	r3,16
  852090:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
  852094:	e0bfff17 	ldw	r2,-4(fp)
  852098:	00c00074 	movhi	r3,1
  85209c:	10c01015 	stw	r3,64(r2)
  8520a0:	0000b206 	br	85236c <alt_epcs_flash_query+0x3ac>
  }
  else if (flash->silicon_id == 0x12) /* EPCS4 */
  8520a4:	e0bfff17 	ldw	r2,-4(fp)
  8520a8:	10803017 	ldw	r2,192(r2)
  8520ac:	10800498 	cmpnei	r2,r2,18
  8520b0:	10000a1e 	bne	r2,zero,8520dc <alt_epcs_flash_query+0x11c>
  {
    flash->dev.region_info[0].region_size = 4 * 1024 * 1024 / 8;
  8520b4:	e0bfff17 	ldw	r2,-4(fp)
  8520b8:	00c00234 	movhi	r3,8
  8520bc:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 8;
  8520c0:	e0bfff17 	ldw	r2,-4(fp)
  8520c4:	00c00204 	movi	r3,8
  8520c8:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
  8520cc:	e0bfff17 	ldw	r2,-4(fp)
  8520d0:	00c00074 	movhi	r3,1
  8520d4:	10c01015 	stw	r3,64(r2)
  8520d8:	0000a406 	br	85236c <alt_epcs_flash_query+0x3ac>
  }
  else if (flash->silicon_id == 0x10) /* EPCS1 */
  8520dc:	e0bfff17 	ldw	r2,-4(fp)
  8520e0:	10803017 	ldw	r2,192(r2)
  8520e4:	10800418 	cmpnei	r2,r2,16
  8520e8:	10000a1e 	bne	r2,zero,852114 <alt_epcs_flash_query+0x154>
  {
    flash->dev.region_info[0].region_size = 1 * 1024 * 1024 / 8;
  8520ec:	e0bfff17 	ldw	r2,-4(fp)
  8520f0:	00c000b4 	movhi	r3,2
  8520f4:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 4;
  8520f8:	e0bfff17 	ldw	r2,-4(fp)
  8520fc:	00c00104 	movi	r3,4
  852100:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 32768;
  852104:	e0bfff17 	ldw	r2,-4(fp)
  852108:	00e00014 	movui	r3,32768
  85210c:	10c01015 	stw	r3,64(r2)
  852110:	00009606 	br	85236c <alt_epcs_flash_query+0x3ac>
  {
    /* 
     * Read electronic signature doesn't work for newer devices; try 
     * the "Read Device ID" command" before giving up.
     */
    flash->silicon_id = epcs_read_device_id(flash->register_base);
  852114:	e0bfff17 	ldw	r2,-4(fp)
  852118:	10802e17 	ldw	r2,184(r2)
  85211c:	1009883a 	mov	r4,r2
  852120:	0854d300 	call	854d30 <epcs_read_device_id>
  852124:	1007883a 	mov	r3,r2
  852128:	e0bfff17 	ldw	r2,-4(fp)
  85212c:	10c03015 	stw	r3,192(r2)
    /*
     * Last byte is the density ID. Note the difference between
     * EPCS128 and EPCQ128 -- arranged differently, though the 
     * least significant byte of each is '0x18'.
     */
    if((flash->silicon_id & 0xFFFFFF) == 0x20BA15) /* EPCQ16 */
  852130:	e0bfff17 	ldw	r2,-4(fp)
  852134:	10c03017 	ldw	r3,192(r2)
  852138:	00804034 	movhi	r2,256
  85213c:	10bfffc4 	addi	r2,r2,-1
  852140:	1886703a 	and	r3,r3,r2
  852144:	00800874 	movhi	r2,33
  852148:	10ae8544 	addi	r2,r2,-17899
  85214c:	18800a1e 	bne	r3,r2,852178 <alt_epcs_flash_query+0x1b8>
    {
      flash->dev.region_info[0].region_size = 16 * 1024 * 1024 / 8;
  852150:	e0bfff17 	ldw	r2,-4(fp)
  852154:	00c00834 	movhi	r3,32
  852158:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 32; /* number of sectors */
  85215c:	e0bfff17 	ldw	r2,-4(fp)
  852160:	00c00804 	movi	r3,32
  852164:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
  852168:	e0bfff17 	ldw	r2,-4(fp)
  85216c:	00c00074 	movhi	r3,1
  852170:	10c01015 	stw	r3,64(r2)
  852174:	00007d06 	br	85236c <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFFFFFF) == 0x20BA16) /* EPCQ32 */
  852178:	e0bfff17 	ldw	r2,-4(fp)
  85217c:	10c03017 	ldw	r3,192(r2)
  852180:	00804034 	movhi	r2,256
  852184:	10bfffc4 	addi	r2,r2,-1
  852188:	1886703a 	and	r3,r3,r2
  85218c:	00800874 	movhi	r2,33
  852190:	10ae8584 	addi	r2,r2,-17898
  852194:	18800a1e 	bne	r3,r2,8521c0 <alt_epcs_flash_query+0x200>
    {
      flash->dev.region_info[0].region_size = 32 * 1024 * 1024 / 8;
  852198:	e0bfff17 	ldw	r2,-4(fp)
  85219c:	00c01034 	movhi	r3,64
  8521a0:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 64; /* number of sectors */
  8521a4:	e0bfff17 	ldw	r2,-4(fp)
  8521a8:	00c01004 	movi	r3,64
  8521ac:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
  8521b0:	e0bfff17 	ldw	r2,-4(fp)
  8521b4:	00c00074 	movhi	r3,1
  8521b8:	10c01015 	stw	r3,64(r2)
  8521bc:	00006b06 	br	85236c <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFFFFFF) == 0x20BA17) /* EPCQ64 */
  8521c0:	e0bfff17 	ldw	r2,-4(fp)
  8521c4:	10c03017 	ldw	r3,192(r2)
  8521c8:	00804034 	movhi	r2,256
  8521cc:	10bfffc4 	addi	r2,r2,-1
  8521d0:	1886703a 	and	r3,r3,r2
  8521d4:	00800874 	movhi	r2,33
  8521d8:	10ae85c4 	addi	r2,r2,-17897
  8521dc:	18800a1e 	bne	r3,r2,852208 <alt_epcs_flash_query+0x248>
    {
      flash->dev.region_info[0].region_size = 64 * 1024 * 1024 / 8;
  8521e0:	e0bfff17 	ldw	r2,-4(fp)
  8521e4:	00c02034 	movhi	r3,128
  8521e8:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 128; /* number of sectors */
  8521ec:	e0bfff17 	ldw	r2,-4(fp)
  8521f0:	00c02004 	movi	r3,128
  8521f4:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
  8521f8:	e0bfff17 	ldw	r2,-4(fp)
  8521fc:	00c00074 	movhi	r3,1
  852200:	10c01015 	stw	r3,64(r2)
  852204:	00005906 	br	85236c <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFFFFFF) == 0x20BA18) /* EPCQ128 */
  852208:	e0bfff17 	ldw	r2,-4(fp)
  85220c:	10c03017 	ldw	r3,192(r2)
  852210:	00804034 	movhi	r2,256
  852214:	10bfffc4 	addi	r2,r2,-1
  852218:	1886703a 	and	r3,r3,r2
  85221c:	00800874 	movhi	r2,33
  852220:	10ae8604 	addi	r2,r2,-17896
  852224:	18800a1e 	bne	r3,r2,852250 <alt_epcs_flash_query+0x290>
    {
      flash->dev.region_info[0].region_size = 128 * 1024 * 1024 / 8;
  852228:	e0bfff17 	ldw	r2,-4(fp)
  85222c:	00c04034 	movhi	r3,256
  852230:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 256; /* number of sectors */
  852234:	e0bfff17 	ldw	r2,-4(fp)
  852238:	00c04004 	movi	r3,256
  85223c:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
  852240:	e0bfff17 	ldw	r2,-4(fp)
  852244:	00c00074 	movhi	r3,1
  852248:	10c01015 	stw	r3,64(r2)
  85224c:	00004706 	br	85236c <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFF) == 0x18) /* EPCS128 */
  852250:	e0bfff17 	ldw	r2,-4(fp)
  852254:	10803017 	ldw	r2,192(r2)
  852258:	10803fcc 	andi	r2,r2,255
  85225c:	10800618 	cmpnei	r2,r2,24
  852260:	10000a1e 	bne	r2,zero,85228c <alt_epcs_flash_query+0x2cc>
    {
      flash->dev.region_info[0].region_size = 128 * 1024 * 1024 / 8;
  852264:	e0bfff17 	ldw	r2,-4(fp)
  852268:	00c04034 	movhi	r3,256
  85226c:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 64;
  852270:	e0bfff17 	ldw	r2,-4(fp)
  852274:	00c01004 	movi	r3,64
  852278:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 262144;
  85227c:	e0bfff17 	ldw	r2,-4(fp)
  852280:	00c00134 	movhi	r3,4
  852284:	10c01015 	stw	r3,64(r2)
  852288:	00003806 	br	85236c <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFF ) == 0x19) /* EPCQ256 */
  85228c:	e0bfff17 	ldw	r2,-4(fp)
  852290:	10803017 	ldw	r2,192(r2)
  852294:	10803fcc 	andi	r2,r2,255
  852298:	10800658 	cmpnei	r2,r2,25
  85229c:	10000d1e 	bne	r2,zero,8522d4 <alt_epcs_flash_query+0x314>
    {
      flash->dev.region_info[0].region_size = 256 * 1024 * 1024 / 8;
  8522a0:	e0bfff17 	ldw	r2,-4(fp)
  8522a4:	00c08034 	movhi	r3,512
  8522a8:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 512; /* number of sectors */
  8522ac:	e0bfff17 	ldw	r2,-4(fp)
  8522b0:	00c08004 	movi	r3,512
  8522b4:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
  8522b8:	e0bfff17 	ldw	r2,-4(fp)
  8522bc:	00c00074 	movhi	r3,1
  8522c0:	10c01015 	stw	r3,64(r2)
       * must first be programmed into the device, though. To complicate things, 
       * other Altera IP expects the chip to be in 3 byte address mode when they 
       * start using it. To be nice, we'll place the device into 4-byte address mode
       * when we need to, and take it back out when we're done.
       */
      flash->four_bytes_mode = 1;
  8522c4:	e0bfff17 	ldw	r2,-4(fp)
  8522c8:	00c00044 	movi	r3,1
  8522cc:	10c03215 	stw	r3,200(r2)
  8522d0:	00002606 	br	85236c <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFF ) == 0x20) /* EPCQ512 */
  8522d4:	e0bfff17 	ldw	r2,-4(fp)
  8522d8:	10803017 	ldw	r2,192(r2)
  8522dc:	10803fcc 	andi	r2,r2,255
  8522e0:	10800818 	cmpnei	r2,r2,32
  8522e4:	10000d1e 	bne	r2,zero,85231c <alt_epcs_flash_query+0x35c>
    {
      flash->dev.region_info[0].region_size = 512 * 1024 * 1024 / 8;
  8522e8:	e0bfff17 	ldw	r2,-4(fp)
  8522ec:	00c10034 	movhi	r3,1024
  8522f0:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 1024; /* number of sectors */
  8522f4:	e0bfff17 	ldw	r2,-4(fp)
  8522f8:	00c10004 	movi	r3,1024
  8522fc:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
  852300:	e0bfff17 	ldw	r2,-4(fp)
  852304:	00c00074 	movhi	r3,1
  852308:	10c01015 	stw	r3,64(r2)

      /* Enable 4-bytes address mode if the device density is greater than 256Mbit. */
      flash->four_bytes_mode = 1;
  85230c:	e0bfff17 	ldw	r2,-4(fp)
  852310:	00c00044 	movi	r3,1
  852314:	10c03215 	stw	r3,200(r2)
  852318:	00001406 	br	85236c <alt_epcs_flash_query+0x3ac>
    }
    else if((flash->silicon_id & 0xFF ) == 0x21) /* EPCQ1024 */
  85231c:	e0bfff17 	ldw	r2,-4(fp)
  852320:	10803017 	ldw	r2,192(r2)
  852324:	10803fcc 	andi	r2,r2,255
  852328:	10800858 	cmpnei	r2,r2,33
  85232c:	10000d1e 	bne	r2,zero,852364 <alt_epcs_flash_query+0x3a4>
    {
      flash->dev.region_info[0].region_size = 1024 * 1024 * 1024 / 8;
  852330:	e0bfff17 	ldw	r2,-4(fp)
  852334:	00c20034 	movhi	r3,2048
  852338:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 2048; /* number of sectors */
  85233c:	e0bfff17 	ldw	r2,-4(fp)
  852340:	00c20004 	movi	r3,2048
  852344:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
  852348:	e0bfff17 	ldw	r2,-4(fp)
  85234c:	00c00074 	movhi	r3,1
  852350:	10c01015 	stw	r3,64(r2)

      /* Enable 4-bytes address mode if the device density is greater than 256Mbit. */
      flash->four_bytes_mode = 1;
  852354:	e0bfff17 	ldw	r2,-4(fp)
  852358:	00c00044 	movi	r3,1
  85235c:	10c03215 	stw	r3,200(r2)
  852360:	00000206 	br	85236c <alt_epcs_flash_query+0x3ac>
    }
    else 
    {
      ret_code = -ENODEV; /* No known device found! */
  852364:	00bffb44 	movi	r2,-19
  852368:	e0bffe15 	stw	r2,-8(fp)
    }
  }
  
  flash->size_in_bytes = flash->dev.region_info[0].region_size;
  85236c:	e0bfff17 	ldw	r2,-4(fp)
  852370:	10800e17 	ldw	r2,56(r2)
  852374:	1007883a 	mov	r3,r2
  852378:	e0bfff17 	ldw	r2,-4(fp)
  85237c:	10c02f15 	stw	r3,188(r2)
  flash->dev.number_of_regions = 1;
  852380:	e0bfff17 	ldw	r2,-4(fp)
  852384:	00c00044 	movi	r3,1
  852388:	10c00c15 	stw	r3,48(r2)
  flash->dev.region_info[0].offset = 0;
  85238c:	e0bfff17 	ldw	r2,-4(fp)
  852390:	10000d15 	stw	zero,52(r2)
  flash->page_size = 256;
  852394:	e0bfff17 	ldw	r2,-4(fp)
  852398:	00c04004 	movi	r3,256
  85239c:	10c03115 	stw	r3,196(r2)

  /* Consider clearing all BP bits here. */
  return ret_code;
  8523a0:	e0bffe17 	ldw	r2,-8(fp)
}
  8523a4:	e037883a 	mov	sp,fp
  8523a8:	dfc00117 	ldw	ra,4(sp)
  8523ac:	df000017 	ldw	fp,0(sp)
  8523b0:	dec00204 	addi	sp,sp,8
  8523b4:	f800283a 	ret

008523b8 <alt_epcs_flash_memcmp>:
  alt_flash_dev* flash_info,
  const void* src_buffer,
  int offset,
  size_t n
)
{
  8523b8:	deffee04 	addi	sp,sp,-72
  8523bc:	dfc01115 	stw	ra,68(sp)
  8523c0:	df001015 	stw	fp,64(sp)
  8523c4:	df001004 	addi	fp,sp,64
  8523c8:	e13ffc15 	stw	r4,-16(fp)
  8523cc:	e17ffd15 	stw	r5,-12(fp)
  8523d0:	e1bffe15 	stw	r6,-8(fp)
  8523d4:	e1ffff15 	stw	r7,-4(fp)
  /*
   * Compare chunks of memory at a time, for better serial-flash
   * read efficiency.
   */
  alt_u8 chunk_buffer[32];
  const int chunk_size = sizeof(chunk_buffer) / sizeof(*chunk_buffer);
  8523d8:	00800804 	movi	r2,32
  8523dc:	e0bff115 	stw	r2,-60(fp)
  int current_offset = 0;
  8523e0:	e03ff015 	stw	zero,-64(fp)

  while (n > 0)
  8523e4:	00002706 	br	852484 <alt_epcs_flash_memcmp+0xcc>
  {
    int this_chunk_size = n > chunk_size ? chunk_size : n;
  8523e8:	e0fff117 	ldw	r3,-60(fp)
  8523ec:	e0bfff17 	ldw	r2,-4(fp)
  8523f0:	1880012e 	bgeu	r3,r2,8523f8 <alt_epcs_flash_memcmp+0x40>
  8523f4:	1805883a 	mov	r2,r3
  8523f8:	e0bff215 	stw	r2,-56(fp)
    int this_chunk_cmp;

    if (
      alt_epcs_flash_read(
  8523fc:	e0fffe17 	ldw	r3,-8(fp)
  852400:	e0bff017 	ldw	r2,-64(fp)
  852404:	1885883a 	add	r2,r3,r2
  852408:	e0fff404 	addi	r3,fp,-48
  85240c:	e1fff217 	ldw	r7,-56(fp)
  852410:	180d883a 	mov	r6,r3
  852414:	100b883a 	mov	r5,r2
  852418:	e13ffc17 	ldw	r4,-16(fp)
  85241c:	085299c0 	call	85299c <alt_epcs_flash_read>
  while (n > 0)
  {
    int this_chunk_size = n > chunk_size ? chunk_size : n;
    int this_chunk_cmp;

    if (
  852420:	1000020e 	bge	r2,zero,85242c <alt_epcs_flash_memcmp+0x74>
    {
      /*
      * If the read fails, I'm not sure what the appropriate action is.
      * Compare success seems wrong, so make it compare fail.
      */
      return -1;
  852424:	00bfffc4 	movi	r2,-1
  852428:	00001906 	br	852490 <alt_epcs_flash_memcmp+0xd8>
    }

    /* Compare this chunk against the source memory buffer. */
    this_chunk_cmp = memcmp(&((unsigned char*)(src_buffer))[current_offset], chunk_buffer, this_chunk_size);
  85242c:	e0bff017 	ldw	r2,-64(fp)
  852430:	e0fffd17 	ldw	r3,-12(fp)
  852434:	1885883a 	add	r2,r3,r2
  852438:	e13ff217 	ldw	r4,-56(fp)
  85243c:	e0fff404 	addi	r3,fp,-48
  852440:	200d883a 	mov	r6,r4
  852444:	180b883a 	mov	r5,r3
  852448:	1009883a 	mov	r4,r2
  85244c:	0856a200 	call	856a20 <memcmp>
  852450:	e0bff315 	stw	r2,-52(fp)
    if (this_chunk_cmp)
  852454:	e0bff317 	ldw	r2,-52(fp)
  852458:	10000226 	beq	r2,zero,852464 <alt_epcs_flash_memcmp+0xac>
    {
      return this_chunk_cmp;
  85245c:	e0bff317 	ldw	r2,-52(fp)
  852460:	00000b06 	br	852490 <alt_epcs_flash_memcmp+0xd8>
    }

    n -= this_chunk_size;
  852464:	e0bff217 	ldw	r2,-56(fp)
  852468:	e0ffff17 	ldw	r3,-4(fp)
  85246c:	1885c83a 	sub	r2,r3,r2
  852470:	e0bfff15 	stw	r2,-4(fp)
    current_offset += this_chunk_size;
  852474:	e0fff017 	ldw	r3,-64(fp)
  852478:	e0bff217 	ldw	r2,-56(fp)
  85247c:	1885883a 	add	r2,r3,r2
  852480:	e0bff015 	stw	r2,-64(fp)
   */
  alt_u8 chunk_buffer[32];
  const int chunk_size = sizeof(chunk_buffer) / sizeof(*chunk_buffer);
  int current_offset = 0;

  while (n > 0)
  852484:	e0bfff17 	ldw	r2,-4(fp)
  852488:	103fd71e 	bne	r2,zero,8523e8 <__alt_mem_epcs_flash_controller_0+0xff8493e8>
  }

  /*
   * If execution made it to this point, compare is successful.
   */
  return 0;
  85248c:	0005883a 	mov	r2,zero
}
  852490:	e037883a 	mov	sp,fp
  852494:	dfc00117 	ldw	ra,4(sp)
  852498:	df000017 	ldw	fp,0(sp)
  85249c:	dec00204 	addi	sp,sp,8
  8524a0:	f800283a 	ret

008524a4 <alt_epcs_flash_write>:
 * large buffer to tie up in our programming library, when not all users will
 * want that functionality.
 */
int alt_epcs_flash_write(alt_flash_dev* flash_info, int offset,
                          const void* src_addr, int length)
{
  8524a4:	defff404 	addi	sp,sp,-48
  8524a8:	dfc00b15 	stw	ra,44(sp)
  8524ac:	df000a15 	stw	fp,40(sp)
  8524b0:	df000a04 	addi	fp,sp,40
  8524b4:	e13ffc15 	stw	r4,-16(fp)
  8524b8:	e17ffd15 	stw	r5,-12(fp)
  8524bc:	e1bffe15 	stw	r6,-8(fp)
  8524c0:	e1ffff15 	stw	r7,-4(fp)
  int         ret_code = 0;
  8524c4:	e03ff715 	stw	zero,-36(fp)
  int         current_offset;

  /*
   * First and foremost which sectors are affected?
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
  8524c8:	e03ff815 	stw	zero,-32(fp)
  8524cc:	00008306 	br	8526dc <alt_epcs_flash_write+0x238>
  {
    /* Is it in this erase block region?*/
    if((offset >= flash_info->region_info[i].offset) &&
  8524d0:	e0fffc17 	ldw	r3,-16(fp)
  8524d4:	e0bff817 	ldw	r2,-32(fp)
  8524d8:	1004913a 	slli	r2,r2,4
  8524dc:	1885883a 	add	r2,r3,r2
  8524e0:	10800d04 	addi	r2,r2,52
  8524e4:	10800017 	ldw	r2,0(r2)
  8524e8:	e0fffd17 	ldw	r3,-12(fp)
  8524ec:	18807816 	blt	r3,r2,8526d0 <alt_epcs_flash_write+0x22c>
      (offset < (flash_info->region_info[i].offset +
  8524f0:	e0fffc17 	ldw	r3,-16(fp)
  8524f4:	e0bff817 	ldw	r2,-32(fp)
  8524f8:	1004913a 	slli	r2,r2,4
  8524fc:	1885883a 	add	r2,r3,r2
  852500:	10800d04 	addi	r2,r2,52
  852504:	10c00017 	ldw	r3,0(r2)
      flash_info->region_info[i].region_size)))
  852508:	e13ffc17 	ldw	r4,-16(fp)
  85250c:	e0bff817 	ldw	r2,-32(fp)
  852510:	1004913a 	slli	r2,r2,4
  852514:	2085883a 	add	r2,r4,r2
  852518:	10800e04 	addi	r2,r2,56
  85251c:	10800017 	ldw	r2,0(r2)
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
  {
    /* Is it in this erase block region?*/
    if((offset >= flash_info->region_info[i].offset) &&
      (offset < (flash_info->region_info[i].offset +
  852520:	1885883a 	add	r2,r3,r2
   * First and foremost which sectors are affected?
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
  {
    /* Is it in this erase block region?*/
    if((offset >= flash_info->region_info[i].offset) &&
  852524:	e0fffd17 	ldw	r3,-12(fp)
  852528:	1880690e 	bge	r3,r2,8526d0 <alt_epcs_flash_write+0x22c>
      (offset < (flash_info->region_info[i].offset +
      flash_info->region_info[i].region_size)))
    {
      current_offset = flash_info->region_info[i].offset;
  85252c:	e0fffc17 	ldw	r3,-16(fp)
  852530:	e0bff817 	ldw	r2,-32(fp)
  852534:	1004913a 	slli	r2,r2,4
  852538:	1885883a 	add	r2,r3,r2
  85253c:	10800d04 	addi	r2,r2,52
  852540:	10800017 	ldw	r2,0(r2)
  852544:	e0bffa15 	stw	r2,-24(fp)

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
  852548:	e03ff915 	stw	zero,-28(fp)
  85254c:	00005806 	br	8526b0 <alt_epcs_flash_write+0x20c>
      {
        if ((offset >= current_offset ) &&
  852550:	e0fffd17 	ldw	r3,-12(fp)
  852554:	e0bffa17 	ldw	r2,-24(fp)
  852558:	18804916 	blt	r3,r2,852680 <alt_epcs_flash_write+0x1dc>
            (offset < (current_offset +
            flash_info->region_info[i].block_size)))
  85255c:	e0fffc17 	ldw	r3,-16(fp)
  852560:	e0bff817 	ldw	r2,-32(fp)
  852564:	10800104 	addi	r2,r2,4
  852568:	1004913a 	slli	r2,r2,4
  85256c:	1885883a 	add	r2,r3,r2
  852570:	10c00017 	ldw	r3,0(r2)
      current_offset = flash_info->region_info[i].offset;

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
      {
        if ((offset >= current_offset ) &&
            (offset < (current_offset +
  852574:	e0bffa17 	ldw	r2,-24(fp)
  852578:	1885883a 	add	r2,r3,r2
    {
      current_offset = flash_info->region_info[i].offset;

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
      {
        if ((offset >= current_offset ) &&
  85257c:	e0fffd17 	ldw	r3,-12(fp)
  852580:	18803f0e 	bge	r3,r2,852680 <alt_epcs_flash_write+0x1dc>
        {
          /*
           * Check if the contents of the block are different
           * from the data we wish to put there
           */
          data_to_write = ( current_offset + flash_info->region_info[i].block_size
  852584:	e0fffc17 	ldw	r3,-16(fp)
  852588:	e0bff817 	ldw	r2,-32(fp)
  85258c:	10800104 	addi	r2,r2,4
  852590:	1004913a 	slli	r2,r2,4
  852594:	1885883a 	add	r2,r3,r2
  852598:	10c00017 	ldw	r3,0(r2)
  85259c:	e0bffa17 	ldw	r2,-24(fp)
  8525a0:	1887883a 	add	r3,r3,r2
  8525a4:	e0bffd17 	ldw	r2,-12(fp)
  8525a8:	1885c83a 	sub	r2,r3,r2
  8525ac:	e0bffb15 	stw	r2,-20(fp)
                            - offset);
          data_to_write = MIN(data_to_write, length);
  8525b0:	e0fffb17 	ldw	r3,-20(fp)
  8525b4:	e0bfff17 	ldw	r2,-4(fp)
  8525b8:	1880010e 	bge	r3,r2,8525c0 <alt_epcs_flash_write+0x11c>
  8525bc:	1805883a 	mov	r2,r3
  8525c0:	e0bffb15 	stw	r2,-20(fp)

          if(alt_epcs_flash_memcmp(flash_info, src_addr, offset, data_to_write))
  8525c4:	e0bffb17 	ldw	r2,-20(fp)
  8525c8:	100f883a 	mov	r7,r2
  8525cc:	e1bffd17 	ldw	r6,-12(fp)
  8525d0:	e17ffe17 	ldw	r5,-8(fp)
  8525d4:	e13ffc17 	ldw	r4,-16(fp)
  8525d8:	08523b80 	call	8523b8 <alt_epcs_flash_memcmp>
  8525dc:	10001226 	beq	r2,zero,852628 <alt_epcs_flash_write+0x184>
          {
            ret_code = (*flash_info->erase_block)(flash_info, current_offset);
  8525e0:	e0bffc17 	ldw	r2,-16(fp)
  8525e4:	10800817 	ldw	r2,32(r2)
  8525e8:	e17ffa17 	ldw	r5,-24(fp)
  8525ec:	e13ffc17 	ldw	r4,-16(fp)
  8525f0:	103ee83a 	callr	r2
  8525f4:	e0bff715 	stw	r2,-36(fp)

            if (!ret_code)
  8525f8:	e0bff717 	ldw	r2,-36(fp)
  8525fc:	10000a1e 	bne	r2,zero,852628 <alt_epcs_flash_write+0x184>
            {
              ret_code = (*flash_info->write_block)(
  852600:	e0bffc17 	ldw	r2,-16(fp)
  852604:	10800917 	ldw	r2,36(r2)
  852608:	e0fffb17 	ldw	r3,-20(fp)
  85260c:	d8c00015 	stw	r3,0(sp)
  852610:	e1fffe17 	ldw	r7,-8(fp)
  852614:	e1bffd17 	ldw	r6,-12(fp)
  852618:	e17ffa17 	ldw	r5,-24(fp)
  85261c:	e13ffc17 	ldw	r4,-16(fp)
  852620:	103ee83a 	callr	r2
  852624:	e0bff715 	stw	r2,-36(fp)
                                                  data_to_write);
            }
          }

          /* Was this the last block? */
          if ((length == data_to_write) || ret_code)
  852628:	e0ffff17 	ldw	r3,-4(fp)
  85262c:	e0bffb17 	ldw	r2,-20(fp)
  852630:	18802e26 	beq	r3,r2,8526ec <alt_epcs_flash_write+0x248>
  852634:	e0bff717 	ldw	r2,-36(fp)
  852638:	10002c1e 	bne	r2,zero,8526ec <alt_epcs_flash_write+0x248>
          {
            goto finished;
          }

          length -= data_to_write;
  85263c:	e0ffff17 	ldw	r3,-4(fp)
  852640:	e0bffb17 	ldw	r2,-20(fp)
  852644:	1885c83a 	sub	r2,r3,r2
  852648:	e0bfff15 	stw	r2,-4(fp)
          offset = current_offset + flash_info->region_info[i].block_size;
  85264c:	e0fffc17 	ldw	r3,-16(fp)
  852650:	e0bff817 	ldw	r2,-32(fp)
  852654:	10800104 	addi	r2,r2,4
  852658:	1004913a 	slli	r2,r2,4
  85265c:	1885883a 	add	r2,r3,r2
  852660:	10c00017 	ldw	r3,0(r2)
  852664:	e0bffa17 	ldw	r2,-24(fp)
  852668:	1885883a 	add	r2,r3,r2
  85266c:	e0bffd15 	stw	r2,-12(fp)
          src_addr = (alt_u8*)src_addr + data_to_write;
  852670:	e0bffb17 	ldw	r2,-20(fp)
  852674:	e0fffe17 	ldw	r3,-8(fp)
  852678:	1885883a 	add	r2,r3,r2
  85267c:	e0bffe15 	stw	r2,-8(fp)
        }
        current_offset += flash_info->region_info[i].block_size;
  852680:	e0fffc17 	ldw	r3,-16(fp)
  852684:	e0bff817 	ldw	r2,-32(fp)
  852688:	10800104 	addi	r2,r2,4
  85268c:	1004913a 	slli	r2,r2,4
  852690:	1885883a 	add	r2,r3,r2
  852694:	10800017 	ldw	r2,0(r2)
  852698:	e0fffa17 	ldw	r3,-24(fp)
  85269c:	1885883a 	add	r2,r3,r2
  8526a0:	e0bffa15 	stw	r2,-24(fp)
      (offset < (flash_info->region_info[i].offset +
      flash_info->region_info[i].region_size)))
    {
      current_offset = flash_info->region_info[i].offset;

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
  8526a4:	e0bff917 	ldw	r2,-28(fp)
  8526a8:	10800044 	addi	r2,r2,1
  8526ac:	e0bff915 	stw	r2,-28(fp)
  8526b0:	e0fffc17 	ldw	r3,-16(fp)
  8526b4:	e0bff817 	ldw	r2,-32(fp)
  8526b8:	1004913a 	slli	r2,r2,4
  8526bc:	1885883a 	add	r2,r3,r2
  8526c0:	10800f04 	addi	r2,r2,60
  8526c4:	10800017 	ldw	r2,0(r2)
  8526c8:	e0fff917 	ldw	r3,-28(fp)
  8526cc:	18bfa016 	blt	r3,r2,852550 <__alt_mem_epcs_flash_controller_0+0xff849550>
  int         current_offset;

  /*
   * First and foremost which sectors are affected?
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
  8526d0:	e0bff817 	ldw	r2,-32(fp)
  8526d4:	10800044 	addi	r2,r2,1
  8526d8:	e0bff815 	stw	r2,-32(fp)
  8526dc:	e0bffc17 	ldw	r2,-16(fp)
  8526e0:	10800c17 	ldw	r2,48(r2)
  8526e4:	e0fff817 	ldw	r3,-32(fp)
  8526e8:	18bf7916 	blt	r3,r2,8524d0 <__alt_mem_epcs_flash_controller_0+0xff8494d0>
      }
    }
  }

finished:
  return ret_code;
  8526ec:	e0bff717 	ldw	r2,-36(fp)
}
  8526f0:	e037883a 	mov	sp,fp
  8526f4:	dfc00117 	ldw	ra,4(sp)
  8526f8:	df000017 	ldw	fp,0(sp)
  8526fc:	dec00204 	addi	sp,sp,8
  852700:	f800283a 	ret

00852704 <alt_epcs_flash_get_info>:
 *
 *  Pass the table of erase blocks to the user
 */
int alt_epcs_flash_get_info(alt_flash_fd* fd, flash_region** info,
                            int* number_of_regions)
{
  852704:	defffa04 	addi	sp,sp,-24
  852708:	df000515 	stw	fp,20(sp)
  85270c:	df000504 	addi	fp,sp,20
  852710:	e13ffd15 	stw	r4,-12(fp)
  852714:	e17ffe15 	stw	r5,-8(fp)
  852718:	e1bfff15 	stw	r6,-4(fp)
  int ret_code = 0;
  85271c:	e03ffb15 	stw	zero,-20(fp)

  alt_flash_dev* flash = (alt_flash_dev*)fd;
  852720:	e0bffd17 	ldw	r2,-12(fp)
  852724:	e0bffc15 	stw	r2,-16(fp)

  *number_of_regions = flash->number_of_regions;
  852728:	e0bffc17 	ldw	r2,-16(fp)
  85272c:	10c00c17 	ldw	r3,48(r2)
  852730:	e0bfff17 	ldw	r2,-4(fp)
  852734:	10c00015 	stw	r3,0(r2)

  if (!flash->number_of_regions)
  852738:	e0bffc17 	ldw	r2,-16(fp)
  85273c:	10800c17 	ldw	r2,48(r2)
  852740:	1000031e 	bne	r2,zero,852750 <alt_epcs_flash_get_info+0x4c>
  {
    ret_code = -EIO;
  852744:	00bffec4 	movi	r2,-5
  852748:	e0bffb15 	stw	r2,-20(fp)
  85274c:	00000b06 	br	85277c <alt_epcs_flash_get_info+0x78>
  }
  else if (flash->number_of_regions > ALT_MAX_NUMBER_OF_FLASH_REGIONS)
  852750:	e0bffc17 	ldw	r2,-16(fp)
  852754:	10800c17 	ldw	r2,48(r2)
  852758:	10800250 	cmplti	r2,r2,9
  85275c:	1000031e 	bne	r2,zero,85276c <alt_epcs_flash_get_info+0x68>
  {
    ret_code = -ENOMEM;
  852760:	00bffd04 	movi	r2,-12
  852764:	e0bffb15 	stw	r2,-20(fp)
  852768:	00000406 	br	85277c <alt_epcs_flash_get_info+0x78>
  }
  else
  {
    *info = &flash->region_info[0];
  85276c:	e0bffc17 	ldw	r2,-16(fp)
  852770:	10c00d04 	addi	r3,r2,52
  852774:	e0bffe17 	ldw	r2,-8(fp)
  852778:	10c00015 	stw	r3,0(r2)
  }

  return ret_code;
  85277c:	e0bffb17 	ldw	r2,-20(fp)
}
  852780:	e037883a 	mov	sp,fp
  852784:	df000017 	ldw	fp,0(sp)
  852788:	dec00104 	addi	sp,sp,4
  85278c:	f800283a 	ret

00852790 <alt_epcs_test_address>:


/* This might be a candidate for optimization.  Precompute the last-address? */
static ALT_INLINE int alt_epcs_test_address(alt_flash_dev* flash_info, int offset)
{
  852790:	defff904 	addi	sp,sp,-28
  852794:	df000615 	stw	fp,24(sp)
  852798:	df000604 	addi	fp,sp,24
  85279c:	e13ffe15 	stw	r4,-8(fp)
  8527a0:	e17fff15 	stw	r5,-4(fp)
  int ret_code = 0;
  8527a4:	e03ffa15 	stw	zero,-24(fp)
  /* Error checking:
   * if the block offset is outside of the memory, return -EIO.
   */
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
  8527a8:	e0bffe17 	ldw	r2,-8(fp)
  8527ac:	e0bffb15 	stw	r2,-20(fp)

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
  8527b0:	e0bffb17 	ldw	r2,-20(fp)
  8527b4:	10800c17 	ldw	r2,48(r2)
  8527b8:	10bfffc4 	addi	r2,r2,-1
  8527bc:	e0bffc15 	stw	r2,-16(fp)
  alt_u32 last_device_address =
    -1 +
    f->dev.region_info[last_region_index].offset +
  8527c0:	e0fffb17 	ldw	r3,-20(fp)
  8527c4:	e0bffc17 	ldw	r2,-16(fp)
  8527c8:	1004913a 	slli	r2,r2,4
  8527cc:	1885883a 	add	r2,r3,r2
  8527d0:	10800d04 	addi	r2,r2,52
  8527d4:	10800017 	ldw	r2,0(r2)
   */
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
  alt_u32 last_device_address =
    -1 +
  8527d8:	10ffffc4 	addi	r3,r2,-1
    f->dev.region_info[last_region_index].offset +
    f->dev.region_info[last_region_index].region_size;
  8527dc:	e13ffb17 	ldw	r4,-20(fp)
  8527e0:	e0bffc17 	ldw	r2,-16(fp)
  8527e4:	1004913a 	slli	r2,r2,4
  8527e8:	2085883a 	add	r2,r4,r2
  8527ec:	10800e04 	addi	r2,r2,56
  8527f0:	10800017 	ldw	r2,0(r2)
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
  alt_u32 last_device_address =
    -1 +
    f->dev.region_info[last_region_index].offset +
  8527f4:	1885883a 	add	r2,r3,r2
   * if the block offset is outside of the memory, return -EIO.
   */
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
  alt_u32 last_device_address =
  8527f8:	e0bffd15 	stw	r2,-12(fp)
    -1 +
    f->dev.region_info[last_region_index].offset +
    f->dev.region_info[last_region_index].region_size;

  if (offset > last_device_address)
  8527fc:	e0bfff17 	ldw	r2,-4(fp)
  852800:	e0fffd17 	ldw	r3,-12(fp)
  852804:	1880022e 	bgeu	r3,r2,852810 <alt_epcs_test_address+0x80>
  {
    /* Someone tried to erase a block outside of this device's range. */
    ret_code = -EIO;
  852808:	00bffec4 	movi	r2,-5
  85280c:	e0bffa15 	stw	r2,-24(fp)
  }
  return ret_code;
  852810:	e0bffa17 	ldw	r2,-24(fp)
}
  852814:	e037883a 	mov	sp,fp
  852818:	df000017 	ldw	fp,0(sp)
  85281c:	dec00104 	addi	sp,sp,4
  852820:	f800283a 	ret

00852824 <alt_epcs_flash_erase_block>:
 *
 * Erase the selected erase block ("sector erase", from the POV
 * of the EPCS data sheet).
 */
int alt_epcs_flash_erase_block(alt_flash_dev* flash_info, int block_offset)
{
  852824:	defffa04 	addi	sp,sp,-24
  852828:	dfc00515 	stw	ra,20(sp)
  85282c:	df000415 	stw	fp,16(sp)
  852830:	df000404 	addi	fp,sp,16
  852834:	e13ffe15 	stw	r4,-8(fp)
  852838:	e17fff15 	stw	r5,-4(fp)
  int ret_code = 0;
  85283c:	e03ffc15 	stw	zero,-16(fp)
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
  852840:	e0bffe17 	ldw	r2,-8(fp)
  852844:	e0bffd15 	stw	r2,-12(fp)

  ret_code = alt_epcs_test_address(flash_info, block_offset);
  852848:	e17fff17 	ldw	r5,-4(fp)
  85284c:	e13ffe17 	ldw	r4,-8(fp)
  852850:	08527900 	call	852790 <alt_epcs_test_address>
  852854:	e0bffc15 	stw	r2,-16(fp)

  if (ret_code >= 0)
  852858:	e0bffc17 	ldw	r2,-16(fp)
  85285c:	10000916 	blt	r2,zero,852884 <alt_epcs_flash_erase_block+0x60>
  {
    /* Send the Sector Erase command, whose 3 address bytes are anywhere
     * within the chosen sector.
     */
    epcs_sector_erase(f->register_base, block_offset, f->four_bytes_mode);
  852860:	e0bffd17 	ldw	r2,-12(fp)
  852864:	10c02e17 	ldw	r3,184(r2)
  852868:	e13fff17 	ldw	r4,-4(fp)
  85286c:	e0bffd17 	ldw	r2,-12(fp)
  852870:	10803217 	ldw	r2,200(r2)
  852874:	100d883a 	mov	r6,r2
  852878:	200b883a 	mov	r5,r4
  85287c:	1809883a 	mov	r4,r3
  852880:	08548fc0 	call	8548fc <epcs_sector_erase>
  }
  return ret_code;
  852884:	e0bffc17 	ldw	r2,-16(fp)
}
  852888:	e037883a 	mov	sp,fp
  85288c:	dfc00117 	ldw	ra,4(sp)
  852890:	df000017 	ldw	fp,0(sp)
  852894:	dec00204 	addi	sp,sp,8
  852898:	f800283a 	ret

0085289c <alt_epcs_flash_write_block>:
 * function type compatibility.
 */
int alt_epcs_flash_write_block(alt_flash_dev* flash_info, int block_offset,
                                      int data_offset, const void* data,
                                      int length)
{
  85289c:	defff404 	addi	sp,sp,-48
  8528a0:	dfc00b15 	stw	ra,44(sp)
  8528a4:	df000a15 	stw	fp,40(sp)
  8528a8:	df000a04 	addi	fp,sp,40
  8528ac:	e13ffc15 	stw	r4,-16(fp)
  8528b0:	e17ffd15 	stw	r5,-12(fp)
  8528b4:	e1bffe15 	stw	r6,-8(fp)
  8528b8:	e1ffff15 	stw	r7,-4(fp)
  int ret_code;
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
  8528bc:	e0bffc17 	ldw	r2,-16(fp)
  8528c0:	e0bff815 	stw	r2,-32(fp)

  int buffer_offset = 0;
  8528c4:	e03ff715 	stw	zero,-36(fp)
  int length_of_current_write;
  ret_code = alt_epcs_test_address(flash_info, data_offset);
  8528c8:	e17ffe17 	ldw	r5,-8(fp)
  8528cc:	e13ffc17 	ldw	r4,-16(fp)
  8528d0:	08527900 	call	852790 <alt_epcs_test_address>
  8528d4:	e0bff915 	stw	r2,-28(fp)

  if (ret_code >= 0)
  8528d8:	e0bff917 	ldw	r2,-28(fp)
  8528dc:	10002916 	blt	r2,zero,852984 <alt_epcs_flash_write_block+0xe8>
  {

    /* "Block" writes must be broken up into the page writes that
     * the device understands.  Partial page writes are allowed.
     */
    while (length)
  8528e0:	00002606 	br	85297c <alt_epcs_flash_write_block+0xe0>
    {
      int next_page_start = (data_offset + f->page_size) & ~(f->page_size - 1);
  8528e4:	e0bff817 	ldw	r2,-32(fp)
  8528e8:	10c03117 	ldw	r3,196(r2)
  8528ec:	e0bffe17 	ldw	r2,-8(fp)
  8528f0:	1887883a 	add	r3,r3,r2
  8528f4:	e0bff817 	ldw	r2,-32(fp)
  8528f8:	10803117 	ldw	r2,196(r2)
  8528fc:	0085c83a 	sub	r2,zero,r2
  852900:	1884703a 	and	r2,r3,r2
  852904:	e0bffa15 	stw	r2,-24(fp)
      length_of_current_write = MIN(length, next_page_start - data_offset);
  852908:	e0fffa17 	ldw	r3,-24(fp)
  85290c:	e0bffe17 	ldw	r2,-8(fp)
  852910:	1885c83a 	sub	r2,r3,r2
  852914:	e0c00217 	ldw	r3,8(fp)
  852918:	1880010e 	bge	r3,r2,852920 <alt_epcs_flash_write_block+0x84>
  85291c:	1805883a 	mov	r2,r3
  852920:	e0bffb15 	stw	r2,-20(fp)

      epcs_write_buffer(f->register_base, data_offset, &((const alt_u8*)data)[buffer_offset], length_of_current_write,
  852924:	e0bff817 	ldw	r2,-32(fp)
  852928:	11002e17 	ldw	r4,184(r2)
  85292c:	e0bff717 	ldw	r2,-36(fp)
  852930:	e0ffff17 	ldw	r3,-4(fp)
  852934:	1887883a 	add	r3,r3,r2
  852938:	e0bff817 	ldw	r2,-32(fp)
  85293c:	10803217 	ldw	r2,200(r2)
  852940:	d8800015 	stw	r2,0(sp)
  852944:	e1fffb17 	ldw	r7,-20(fp)
  852948:	180d883a 	mov	r6,r3
  85294c:	e17ffe17 	ldw	r5,-8(fp)
  852950:	0854bac0 	call	854bac <epcs_write_buffer>
          f->four_bytes_mode);

      length -= length_of_current_write;
  852954:	e0c00217 	ldw	r3,8(fp)
  852958:	e0bffb17 	ldw	r2,-20(fp)
  85295c:	1885c83a 	sub	r2,r3,r2
  852960:	e0800215 	stw	r2,8(fp)
      buffer_offset += length_of_current_write;
  852964:	e0fff717 	ldw	r3,-36(fp)
  852968:	e0bffb17 	ldw	r2,-20(fp)
  85296c:	1885883a 	add	r2,r3,r2
  852970:	e0bff715 	stw	r2,-36(fp)
      data_offset = next_page_start;
  852974:	e0bffa17 	ldw	r2,-24(fp)
  852978:	e0bffe15 	stw	r2,-8(fp)
  {

    /* "Block" writes must be broken up into the page writes that
     * the device understands.  Partial page writes are allowed.
     */
    while (length)
  85297c:	e0800217 	ldw	r2,8(fp)
  852980:	103fd81e 	bne	r2,zero,8528e4 <__alt_mem_epcs_flash_controller_0+0xff8498e4>
      length -= length_of_current_write;
      buffer_offset += length_of_current_write;
      data_offset = next_page_start;
    }
  }
  return ret_code;
  852984:	e0bff917 	ldw	r2,-28(fp)
}
  852988:	e037883a 	mov	sp,fp
  85298c:	dfc00117 	ldw	ra,4(sp)
  852990:	df000017 	ldw	fp,0(sp)
  852994:	dec00204 	addi	sp,sp,8
  852998:	f800283a 	ret

0085299c <alt_epcs_flash_read>:
 *  to the beginning.  Reads that start beyond the end of the memory are
 *  flagged as errors with EIO (is there a better error code?).
 */
int alt_epcs_flash_read(alt_flash_dev* flash_info, int offset,
                        void* dest_addr, int length)
{
  85299c:	defff704 	addi	sp,sp,-36
  8529a0:	dfc00815 	stw	ra,32(sp)
  8529a4:	df000715 	stw	fp,28(sp)
  8529a8:	df000704 	addi	fp,sp,28
  8529ac:	e13ffc15 	stw	r4,-16(fp)
  8529b0:	e17ffd15 	stw	r5,-12(fp)
  8529b4:	e1bffe15 	stw	r6,-8(fp)
  8529b8:	e1ffff15 	stw	r7,-4(fp)
  int ret_code = 0;
  8529bc:	e03ffa15 	stw	zero,-24(fp)

  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
  8529c0:	e0bffc17 	ldw	r2,-16(fp)
  8529c4:	e0bffb15 	stw	r2,-20(fp)

  ret_code = alt_epcs_test_address(flash_info, offset);
  8529c8:	e17ffd17 	ldw	r5,-12(fp)
  8529cc:	e13ffc17 	ldw	r4,-16(fp)
  8529d0:	08527900 	call	852790 <alt_epcs_test_address>
  8529d4:	e0bffa15 	stw	r2,-24(fp)

  if (ret_code >= 0)
  8529d8:	e0bffa17 	ldw	r2,-24(fp)
  8529dc:	10000f16 	blt	r2,zero,852a1c <alt_epcs_flash_read+0x80>
  {
    ret_code = epcs_read_buffer(f->register_base, offset, dest_addr, length,
  8529e0:	e0bffb17 	ldw	r2,-20(fp)
  8529e4:	10c02e17 	ldw	r3,184(r2)
  8529e8:	e0bffb17 	ldw	r2,-20(fp)
  8529ec:	10803217 	ldw	r2,200(r2)
  8529f0:	d8800015 	stw	r2,0(sp)
  8529f4:	e1ffff17 	ldw	r7,-4(fp)
  8529f8:	e1bffe17 	ldw	r6,-8(fp)
  8529fc:	e17ffd17 	ldw	r5,-12(fp)
  852a00:	1809883a 	mov	r4,r3
  852a04:	08549f80 	call	8549f8 <epcs_read_buffer>
  852a08:	e0bffa15 	stw	r2,-24(fp)
                                f->four_bytes_mode);

    /* epcs_read_buffer returns the number of buffers read, but
     * alt_epcs_flash_read returns 0 on success, <0 on failure.
     */
    if (ret_code == length)
  852a0c:	e0fffa17 	ldw	r3,-24(fp)
  852a10:	e0bfff17 	ldw	r2,-4(fp)
  852a14:	1880011e 	bne	r3,r2,852a1c <alt_epcs_flash_read+0x80>
    {
      ret_code = 0;
  852a18:	e03ffa15 	stw	zero,-24(fp)
    }
  }
  return ret_code;
  852a1c:	e0bffa17 	ldw	r2,-24(fp)
}
  852a20:	e037883a 	mov	sp,fp
  852a24:	dfc00117 	ldw	ra,4(sp)
  852a28:	df000017 	ldw	fp,0(sp)
  852a2c:	dec00204 	addi	sp,sp,8
  852a30:	f800283a 	ret

00852a34 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  852a34:	defffa04 	addi	sp,sp,-24
  852a38:	dfc00515 	stw	ra,20(sp)
  852a3c:	df000415 	stw	fp,16(sp)
  852a40:	df000404 	addi	fp,sp,16
  852a44:	e13ffd15 	stw	r4,-12(fp)
  852a48:	e17ffe15 	stw	r5,-8(fp)
  852a4c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  852a50:	e0bffd17 	ldw	r2,-12(fp)
  852a54:	10800017 	ldw	r2,0(r2)
  852a58:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  852a5c:	e0bffc17 	ldw	r2,-16(fp)
  852a60:	10c00a04 	addi	r3,r2,40
  852a64:	e0bffd17 	ldw	r2,-12(fp)
  852a68:	10800217 	ldw	r2,8(r2)
  852a6c:	100f883a 	mov	r7,r2
  852a70:	e1bfff17 	ldw	r6,-4(fp)
  852a74:	e17ffe17 	ldw	r5,-8(fp)
  852a78:	1809883a 	mov	r4,r3
  852a7c:	08531e00 	call	8531e0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  852a80:	e037883a 	mov	sp,fp
  852a84:	dfc00117 	ldw	ra,4(sp)
  852a88:	df000017 	ldw	fp,0(sp)
  852a8c:	dec00204 	addi	sp,sp,8
  852a90:	f800283a 	ret

00852a94 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  852a94:	defffa04 	addi	sp,sp,-24
  852a98:	dfc00515 	stw	ra,20(sp)
  852a9c:	df000415 	stw	fp,16(sp)
  852aa0:	df000404 	addi	fp,sp,16
  852aa4:	e13ffd15 	stw	r4,-12(fp)
  852aa8:	e17ffe15 	stw	r5,-8(fp)
  852aac:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  852ab0:	e0bffd17 	ldw	r2,-12(fp)
  852ab4:	10800017 	ldw	r2,0(r2)
  852ab8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  852abc:	e0bffc17 	ldw	r2,-16(fp)
  852ac0:	10c00a04 	addi	r3,r2,40
  852ac4:	e0bffd17 	ldw	r2,-12(fp)
  852ac8:	10800217 	ldw	r2,8(r2)
  852acc:	100f883a 	mov	r7,r2
  852ad0:	e1bfff17 	ldw	r6,-4(fp)
  852ad4:	e17ffe17 	ldw	r5,-8(fp)
  852ad8:	1809883a 	mov	r4,r3
  852adc:	085349c0 	call	85349c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  852ae0:	e037883a 	mov	sp,fp
  852ae4:	dfc00117 	ldw	ra,4(sp)
  852ae8:	df000017 	ldw	fp,0(sp)
  852aec:	dec00204 	addi	sp,sp,8
  852af0:	f800283a 	ret

00852af4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  852af4:	defffc04 	addi	sp,sp,-16
  852af8:	dfc00315 	stw	ra,12(sp)
  852afc:	df000215 	stw	fp,8(sp)
  852b00:	df000204 	addi	fp,sp,8
  852b04:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  852b08:	e0bfff17 	ldw	r2,-4(fp)
  852b0c:	10800017 	ldw	r2,0(r2)
  852b10:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  852b14:	e0bffe17 	ldw	r2,-8(fp)
  852b18:	10c00a04 	addi	r3,r2,40
  852b1c:	e0bfff17 	ldw	r2,-4(fp)
  852b20:	10800217 	ldw	r2,8(r2)
  852b24:	100b883a 	mov	r5,r2
  852b28:	1809883a 	mov	r4,r3
  852b2c:	08530880 	call	853088 <altera_avalon_jtag_uart_close>
}
  852b30:	e037883a 	mov	sp,fp
  852b34:	dfc00117 	ldw	ra,4(sp)
  852b38:	df000017 	ldw	fp,0(sp)
  852b3c:	dec00204 	addi	sp,sp,8
  852b40:	f800283a 	ret

00852b44 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  852b44:	defffa04 	addi	sp,sp,-24
  852b48:	dfc00515 	stw	ra,20(sp)
  852b4c:	df000415 	stw	fp,16(sp)
  852b50:	df000404 	addi	fp,sp,16
  852b54:	e13ffd15 	stw	r4,-12(fp)
  852b58:	e17ffe15 	stw	r5,-8(fp)
  852b5c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  852b60:	e0bffd17 	ldw	r2,-12(fp)
  852b64:	10800017 	ldw	r2,0(r2)
  852b68:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  852b6c:	e0bffc17 	ldw	r2,-16(fp)
  852b70:	10800a04 	addi	r2,r2,40
  852b74:	e1bfff17 	ldw	r6,-4(fp)
  852b78:	e17ffe17 	ldw	r5,-8(fp)
  852b7c:	1009883a 	mov	r4,r2
  852b80:	08530f00 	call	8530f0 <altera_avalon_jtag_uart_ioctl>
}
  852b84:	e037883a 	mov	sp,fp
  852b88:	dfc00117 	ldw	ra,4(sp)
  852b8c:	df000017 	ldw	fp,0(sp)
  852b90:	dec00204 	addi	sp,sp,8
  852b94:	f800283a 	ret

00852b98 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  852b98:	defff104 	addi	sp,sp,-60
  852b9c:	dfc00e15 	stw	ra,56(sp)
  852ba0:	df000d15 	stw	fp,52(sp)
  852ba4:	df000d04 	addi	fp,sp,52
  852ba8:	e13ff915 	stw	r4,-28(fp)
  852bac:	e17ffa15 	stw	r5,-24(fp)
  852bb0:	e1bffb15 	stw	r6,-20(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  852bb4:	e0bff917 	ldw	r2,-28(fp)
  852bb8:	10800c04 	addi	r2,r2,48
  852bbc:	e0bff415 	stw	r2,-48(fp)
  852bc0:	e03ff80d 	sth	zero,-32(fp)

static ALT_INLINE int ALT_ALWAYS_INLINE alt_flag_create (OS_FLAG_GRP** pgroup, 
               OS_FLAGS flags)
{
  INT8U err;
  *pgroup = OSFlagCreate (flags, &err);
  852bc4:	e0bff80b 	ldhu	r2,-32(fp)
  852bc8:	e0fff884 	addi	r3,fp,-30
  852bcc:	180b883a 	mov	r5,r3
  852bd0:	1009883a 	mov	r4,r2
  852bd4:	084cac40 	call	84cac4 <OSFlagCreate>
  852bd8:	1007883a 	mov	r3,r2
  852bdc:	e0bff417 	ldw	r2,-48(fp)
  852be0:	10c00015 	stw	r3,0(r2)
  ALT_SEM_CREATE(&sp->read_lock, 1);
  852be4:	e0bff917 	ldw	r2,-28(fp)
  852be8:	10800a04 	addi	r2,r2,40
  852bec:	e0bff515 	stw	r2,-44(fp)
  852bf0:	00800044 	movi	r2,1
  852bf4:	e0bff78d 	sth	r2,-34(fp)
  852bf8:	e0bff78b 	ldhu	r2,-34(fp)
  852bfc:	1009883a 	mov	r4,r2
  852c00:	084f7e40 	call	84f7e4 <OSSemCreate>
  852c04:	1007883a 	mov	r3,r2
  852c08:	e0bff517 	ldw	r2,-44(fp)
  852c0c:	10c00015 	stw	r3,0(r2)
  ALT_SEM_CREATE(&sp->write_lock, 1);
  852c10:	e0bff917 	ldw	r2,-28(fp)
  852c14:	10800b04 	addi	r2,r2,44
  852c18:	e0bff615 	stw	r2,-40(fp)
  852c1c:	00800044 	movi	r2,1
  852c20:	e0bff70d 	sth	r2,-36(fp)
  852c24:	e0bff70b 	ldhu	r2,-36(fp)
  852c28:	1009883a 	mov	r4,r2
  852c2c:	084f7e40 	call	84f7e4 <OSSemCreate>
  852c30:	1007883a 	mov	r3,r2
  852c34:	e0bff617 	ldw	r2,-40(fp)
  852c38:	10c00015 	stw	r3,0(r2)

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  852c3c:	e0bff917 	ldw	r2,-28(fp)
  852c40:	00c00044 	movi	r3,1
  852c44:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  852c48:	e0bff917 	ldw	r2,-28(fp)
  852c4c:	10800017 	ldw	r2,0(r2)
  852c50:	10800104 	addi	r2,r2,4
  852c54:	1007883a 	mov	r3,r2
  852c58:	e0bff917 	ldw	r2,-28(fp)
  852c5c:	10800817 	ldw	r2,32(r2)
  852c60:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  852c64:	e0bffa17 	ldw	r2,-24(fp)
  852c68:	e0fffb17 	ldw	r3,-20(fp)
  852c6c:	d8000015 	stw	zero,0(sp)
  852c70:	e1fff917 	ldw	r7,-28(fp)
  852c74:	01802174 	movhi	r6,133
  852c78:	318b3804 	addi	r6,r6,11488
  852c7c:	180b883a 	mov	r5,r3
  852c80:	1009883a 	mov	r4,r2
  852c84:	08496c40 	call	8496c4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  852c88:	e0bff917 	ldw	r2,-28(fp)
  852c8c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  852c90:	e0bff917 	ldw	r2,-28(fp)
  852c94:	10800204 	addi	r2,r2,8
  852c98:	d0e0b817 	ldw	r3,-32032(gp)
  852c9c:	e1fff917 	ldw	r7,-28(fp)
  852ca0:	01802174 	movhi	r6,133
  852ca4:	318be104 	addi	r6,r6,12164
  852ca8:	180b883a 	mov	r5,r3
  852cac:	1009883a 	mov	r4,r2
  852cb0:	0855a600 	call	855a60 <alt_alarm_start>
  852cb4:	1000040e 	bge	r2,zero,852cc8 <altera_avalon_jtag_uart_init+0x130>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  852cb8:	e0fff917 	ldw	r3,-28(fp)
  852cbc:	00a00034 	movhi	r2,32768
  852cc0:	10bfffc4 	addi	r2,r2,-1
  852cc4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  852cc8:	0001883a 	nop
  852ccc:	e037883a 	mov	sp,fp
  852cd0:	dfc00117 	ldw	ra,4(sp)
  852cd4:	df000017 	ldw	fp,0(sp)
  852cd8:	dec00204 	addi	sp,sp,8
  852cdc:	f800283a 	ret

00852ce0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  852ce0:	defff204 	addi	sp,sp,-56
  852ce4:	dfc00d15 	stw	ra,52(sp)
  852ce8:	df000c15 	stw	fp,48(sp)
  852cec:	df000c04 	addi	fp,sp,48
  852cf0:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  852cf4:	e0bfff17 	ldw	r2,-4(fp)
  852cf8:	e0bff615 	stw	r2,-40(fp)
  unsigned int base = sp->base;
  852cfc:	e0bff617 	ldw	r2,-40(fp)
  852d00:	10800017 	ldw	r2,0(r2)
  852d04:	e0bff715 	stw	r2,-36(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  852d08:	e0bff717 	ldw	r2,-36(fp)
  852d0c:	10800104 	addi	r2,r2,4
  852d10:	10800037 	ldwio	r2,0(r2)
  852d14:	e0bff815 	stw	r2,-32(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  852d18:	e0bff817 	ldw	r2,-32(fp)
  852d1c:	1080c00c 	andi	r2,r2,768
  852d20:	10009126 	beq	r2,zero,852f68 <altera_avalon_jtag_uart_irq+0x288>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  852d24:	e0bff817 	ldw	r2,-32(fp)
  852d28:	1080400c 	andi	r2,r2,256
  852d2c:	10004726 	beq	r2,zero,852e4c <altera_avalon_jtag_uart_irq+0x16c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  852d30:	00800074 	movhi	r2,1
  852d34:	e0bff415 	stw	r2,-48(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  852d38:	e0bff617 	ldw	r2,-40(fp)
  852d3c:	10800d17 	ldw	r2,52(r2)
  852d40:	10800044 	addi	r2,r2,1
  852d44:	1081ffcc 	andi	r2,r2,2047
  852d48:	e0bff915 	stw	r2,-28(fp)
        if (next == sp->rx_out)
  852d4c:	e0bff617 	ldw	r2,-40(fp)
  852d50:	10c00e17 	ldw	r3,56(r2)
  852d54:	e0bff917 	ldw	r2,-28(fp)
  852d58:	18802726 	beq	r3,r2,852df8 <altera_avalon_jtag_uart_irq+0x118>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  852d5c:	e0bff717 	ldw	r2,-36(fp)
  852d60:	10800037 	ldwio	r2,0(r2)
  852d64:	e0bff415 	stw	r2,-48(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  852d68:	e0bff417 	ldw	r2,-48(fp)
  852d6c:	10a0000c 	andi	r2,r2,32768
  852d70:	10002326 	beq	r2,zero,852e00 <altera_avalon_jtag_uart_irq+0x120>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  852d74:	e0bff617 	ldw	r2,-40(fp)
  852d78:	10800d17 	ldw	r2,52(r2)
  852d7c:	e0fff417 	ldw	r3,-48(fp)
  852d80:	1809883a 	mov	r4,r3
  852d84:	e0fff617 	ldw	r3,-40(fp)
  852d88:	1885883a 	add	r2,r3,r2
  852d8c:	10801104 	addi	r2,r2,68
  852d90:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  852d94:	e0bff617 	ldw	r2,-40(fp)
  852d98:	10800d17 	ldw	r2,52(r2)
  852d9c:	10800044 	addi	r2,r2,1
  852da0:	10c1ffcc 	andi	r3,r2,2047
  852da4:	e0bff617 	ldw	r2,-40(fp)
  852da8:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
  852dac:	e0bff617 	ldw	r2,-40(fp)
  852db0:	10800c17 	ldw	r2,48(r2)
  852db4:	e0bffb15 	stw	r2,-20(fp)
  852db8:	00800044 	movi	r2,1
  852dbc:	e0bffc0d 	sth	r2,-16(fp)
  852dc0:	00800044 	movi	r2,1
  852dc4:	e0bffc85 	stb	r2,-14(fp)
                   OS_FLAGS     flags, 
                   INT8U        opt)
{
  INT8U err;

  if (OSRunning)
  852dc8:	d0a0a343 	ldbu	r2,-32115(gp)
  852dcc:	10803fcc 	andi	r2,r2,255
  852dd0:	103fd926 	beq	r2,zero,852d38 <__alt_mem_epcs_flash_controller_0+0xff849d38>
  {
    OSFlagPost (group, flags, opt, &err);
  852dd4:	e0bffc0b 	ldhu	r2,-16(fp)
  852dd8:	e0fffc83 	ldbu	r3,-14(fp)
  852ddc:	e13ffdc4 	addi	r4,fp,-9
  852de0:	200f883a 	mov	r7,r4
  852de4:	180d883a 	mov	r6,r3
  852de8:	100b883a 	mov	r5,r2
  852dec:	e13ffb17 	ldw	r4,-20(fp)
  852df0:	084d6a00 	call	84d6a0 <OSFlagPost>
      }
  852df4:	003fd006 	br	852d38 <__alt_mem_epcs_flash_controller_0+0xff849d38>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  852df8:	0001883a 	nop
  852dfc:	00000106 	br	852e04 <altera_avalon_jtag_uart_irq+0x124>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  852e00:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  852e04:	e0bff417 	ldw	r2,-48(fp)
  852e08:	10bfffec 	andhi	r2,r2,65535
  852e0c:	10000f26 	beq	r2,zero,852e4c <altera_avalon_jtag_uart_irq+0x16c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  852e10:	e0bff617 	ldw	r2,-40(fp)
  852e14:	10c00817 	ldw	r3,32(r2)
  852e18:	00bfff84 	movi	r2,-2
  852e1c:	1886703a 	and	r3,r3,r2
  852e20:	e0bff617 	ldw	r2,-40(fp)
  852e24:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  852e28:	e0bff717 	ldw	r2,-36(fp)
  852e2c:	10800104 	addi	r2,r2,4
  852e30:	1007883a 	mov	r3,r2
  852e34:	e0bff617 	ldw	r2,-40(fp)
  852e38:	10800817 	ldw	r2,32(r2)
  852e3c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  852e40:	e0bff717 	ldw	r2,-36(fp)
  852e44:	10800104 	addi	r2,r2,4
  852e48:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  852e4c:	e0bff817 	ldw	r2,-32(fp)
  852e50:	1080800c 	andi	r2,r2,512
  852e54:	103fac26 	beq	r2,zero,852d08 <__alt_mem_epcs_flash_controller_0+0xff849d08>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  852e58:	e0bff817 	ldw	r2,-32(fp)
  852e5c:	1004d43a 	srli	r2,r2,16
  852e60:	e0bff515 	stw	r2,-44(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  852e64:	00002606 	br	852f00 <altera_avalon_jtag_uart_irq+0x220>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  852e68:	e0bff717 	ldw	r2,-36(fp)
  852e6c:	e0fff617 	ldw	r3,-40(fp)
  852e70:	18c01017 	ldw	r3,64(r3)
  852e74:	e13ff617 	ldw	r4,-40(fp)
  852e78:	20c7883a 	add	r3,r4,r3
  852e7c:	18c21104 	addi	r3,r3,2116
  852e80:	18c00003 	ldbu	r3,0(r3)
  852e84:	18c03fcc 	andi	r3,r3,255
  852e88:	18c0201c 	xori	r3,r3,128
  852e8c:	18ffe004 	addi	r3,r3,-128
  852e90:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  852e94:	e0bff617 	ldw	r2,-40(fp)
  852e98:	10801017 	ldw	r2,64(r2)
  852e9c:	10800044 	addi	r2,r2,1
  852ea0:	10c1ffcc 	andi	r3,r2,2047
  852ea4:	e0bff617 	ldw	r2,-40(fp)
  852ea8:	10c01015 	stw	r3,64(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);
  852eac:	e0bff617 	ldw	r2,-40(fp)
  852eb0:	10800c17 	ldw	r2,48(r2)
  852eb4:	e0bffa15 	stw	r2,-24(fp)
  852eb8:	00800084 	movi	r2,2
  852ebc:	e0bffd0d 	sth	r2,-12(fp)
  852ec0:	00800044 	movi	r2,1
  852ec4:	e0bffd85 	stb	r2,-10(fp)
                   OS_FLAGS     flags, 
                   INT8U        opt)
{
  INT8U err;

  if (OSRunning)
  852ec8:	d0a0a343 	ldbu	r2,-32115(gp)
  852ecc:	10803fcc 	andi	r2,r2,255
  852ed0:	10000826 	beq	r2,zero,852ef4 <altera_avalon_jtag_uart_irq+0x214>
  {
    OSFlagPost (group, flags, opt, &err);
  852ed4:	e0bffd0b 	ldhu	r2,-12(fp)
  852ed8:	e0fffd83 	ldbu	r3,-10(fp)
  852edc:	e13ffe04 	addi	r4,fp,-8
  852ee0:	200f883a 	mov	r7,r4
  852ee4:	180d883a 	mov	r6,r3
  852ee8:	100b883a 	mov	r5,r2
  852eec:	e13ffa17 	ldw	r4,-24(fp)
  852ef0:	084d6a00 	call	84d6a0 <OSFlagPost>

        space--;
  852ef4:	e0bff517 	ldw	r2,-44(fp)
  852ef8:	10bfffc4 	addi	r2,r2,-1
  852efc:	e0bff515 	stw	r2,-44(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  852f00:	e0bff517 	ldw	r2,-44(fp)
  852f04:	10000526 	beq	r2,zero,852f1c <altera_avalon_jtag_uart_irq+0x23c>
  852f08:	e0bff617 	ldw	r2,-40(fp)
  852f0c:	10c01017 	ldw	r3,64(r2)
  852f10:	e0bff617 	ldw	r2,-40(fp)
  852f14:	10800f17 	ldw	r2,60(r2)
  852f18:	18bfd31e 	bne	r3,r2,852e68 <__alt_mem_epcs_flash_controller_0+0xff849e68>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  852f1c:	e0bff517 	ldw	r2,-44(fp)
  852f20:	103f7926 	beq	r2,zero,852d08 <__alt_mem_epcs_flash_controller_0+0xff849d08>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  852f24:	e0bff617 	ldw	r2,-40(fp)
  852f28:	10c00817 	ldw	r3,32(r2)
  852f2c:	00bfff44 	movi	r2,-3
  852f30:	1886703a 	and	r3,r3,r2
  852f34:	e0bff617 	ldw	r2,-40(fp)
  852f38:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  852f3c:	e0bff617 	ldw	r2,-40(fp)
  852f40:	10800017 	ldw	r2,0(r2)
  852f44:	10800104 	addi	r2,r2,4
  852f48:	1007883a 	mov	r3,r2
  852f4c:	e0bff617 	ldw	r2,-40(fp)
  852f50:	10800817 	ldw	r2,32(r2)
  852f54:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  852f58:	e0bff717 	ldw	r2,-36(fp)
  852f5c:	10800104 	addi	r2,r2,4
  852f60:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  852f64:	003f6806 	br	852d08 <__alt_mem_epcs_flash_controller_0+0xff849d08>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  852f68:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  852f6c:	0001883a 	nop
  852f70:	e037883a 	mov	sp,fp
  852f74:	dfc00117 	ldw	ra,4(sp)
  852f78:	df000017 	ldw	fp,0(sp)
  852f7c:	dec00204 	addi	sp,sp,8
  852f80:	f800283a 	ret

00852f84 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  852f84:	defff904 	addi	sp,sp,-28
  852f88:	dfc00615 	stw	ra,24(sp)
  852f8c:	df000515 	stw	fp,20(sp)
  852f90:	df000504 	addi	fp,sp,20
  852f94:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  852f98:	e0bfff17 	ldw	r2,-4(fp)
  852f9c:	e0bffb15 	stw	r2,-20(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  852fa0:	e0bffb17 	ldw	r2,-20(fp)
  852fa4:	10800017 	ldw	r2,0(r2)
  852fa8:	10800104 	addi	r2,r2,4
  852fac:	10800037 	ldwio	r2,0(r2)
  852fb0:	e0bffc15 	stw	r2,-16(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  852fb4:	e0bffc17 	ldw	r2,-16(fp)
  852fb8:	1081000c 	andi	r2,r2,1024
  852fbc:	10000b26 	beq	r2,zero,852fec <altera_avalon_jtag_uart_timeout+0x68>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  852fc0:	e0bffb17 	ldw	r2,-20(fp)
  852fc4:	10800017 	ldw	r2,0(r2)
  852fc8:	10800104 	addi	r2,r2,4
  852fcc:	1007883a 	mov	r3,r2
  852fd0:	e0bffb17 	ldw	r2,-20(fp)
  852fd4:	10800817 	ldw	r2,32(r2)
  852fd8:	10810014 	ori	r2,r2,1024
  852fdc:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  852fe0:	e0bffb17 	ldw	r2,-20(fp)
  852fe4:	10000915 	stw	zero,36(r2)
  852fe8:	00002106 	br	853070 <altera_avalon_jtag_uart_timeout+0xec>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  852fec:	e0bffb17 	ldw	r2,-20(fp)
  852ff0:	10c00917 	ldw	r3,36(r2)
  852ff4:	00a00034 	movhi	r2,32768
  852ff8:	10bfff04 	addi	r2,r2,-4
  852ffc:	10c01c36 	bltu	r2,r3,853070 <altera_avalon_jtag_uart_timeout+0xec>
    sp->host_inactive++;
  853000:	e0bffb17 	ldw	r2,-20(fp)
  853004:	10800917 	ldw	r2,36(r2)
  853008:	10c00044 	addi	r3,r2,1
  85300c:	e0bffb17 	ldw	r2,-20(fp)
  853010:	10c00915 	stw	r3,36(r2)
    
    if (sp->host_inactive >= sp->timeout) {
  853014:	e0bffb17 	ldw	r2,-20(fp)
  853018:	10c00917 	ldw	r3,36(r2)
  85301c:	e0bffb17 	ldw	r2,-20(fp)
  853020:	10800117 	ldw	r2,4(r2)
  853024:	18801236 	bltu	r3,r2,853070 <altera_avalon_jtag_uart_timeout+0xec>
      /* Post an event to indicate host is inactive (for jtag_uart_read */
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
  853028:	e0bffb17 	ldw	r2,-20(fp)
  85302c:	10800c17 	ldw	r2,48(r2)
  853030:	e0bffd15 	stw	r2,-12(fp)
  853034:	00800104 	movi	r2,4
  853038:	e0bffe0d 	sth	r2,-8(fp)
  85303c:	00800044 	movi	r2,1
  853040:	e0bffe85 	stb	r2,-6(fp)
                   OS_FLAGS     flags, 
                   INT8U        opt)
{
  INT8U err;

  if (OSRunning)
  853044:	d0a0a343 	ldbu	r2,-32115(gp)
  853048:	10803fcc 	andi	r2,r2,255
  85304c:	10000826 	beq	r2,zero,853070 <altera_avalon_jtag_uart_timeout+0xec>
  {
    OSFlagPost (group, flags, opt, &err);
  853050:	e0bffe0b 	ldhu	r2,-8(fp)
  853054:	e0fffe83 	ldbu	r3,-6(fp)
  853058:	e13ffec4 	addi	r4,fp,-5
  85305c:	200f883a 	mov	r7,r4
  853060:	180d883a 	mov	r6,r3
  853064:	100b883a 	mov	r5,r2
  853068:	e13ffd17 	ldw	r4,-12(fp)
  85306c:	084d6a00 	call	84d6a0 <OSFlagPost>
  853070:	d0a0b817 	ldw	r2,-32032(gp)
    }
  }

  return alt_ticks_per_second();
}
  853074:	e037883a 	mov	sp,fp
  853078:	dfc00117 	ldw	ra,4(sp)
  85307c:	df000017 	ldw	fp,0(sp)
  853080:	dec00204 	addi	sp,sp,8
  853084:	f800283a 	ret

00853088 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  853088:	defffd04 	addi	sp,sp,-12
  85308c:	df000215 	stw	fp,8(sp)
  853090:	df000204 	addi	fp,sp,8
  853094:	e13ffe15 	stw	r4,-8(fp)
  853098:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  85309c:	00000506 	br	8530b4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  8530a0:	e0bfff17 	ldw	r2,-4(fp)
  8530a4:	1090000c 	andi	r2,r2,16384
  8530a8:	10000226 	beq	r2,zero,8530b4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  8530ac:	00bffd44 	movi	r2,-11
  8530b0:	00000b06 	br	8530e0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  8530b4:	e0bffe17 	ldw	r2,-8(fp)
  8530b8:	10c01017 	ldw	r3,64(r2)
  8530bc:	e0bffe17 	ldw	r2,-8(fp)
  8530c0:	10800f17 	ldw	r2,60(r2)
  8530c4:	18800526 	beq	r3,r2,8530dc <altera_avalon_jtag_uart_close+0x54>
  8530c8:	e0bffe17 	ldw	r2,-8(fp)
  8530cc:	10c00917 	ldw	r3,36(r2)
  8530d0:	e0bffe17 	ldw	r2,-8(fp)
  8530d4:	10800117 	ldw	r2,4(r2)
  8530d8:	18bff136 	bltu	r3,r2,8530a0 <__alt_mem_epcs_flash_controller_0+0xff84a0a0>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  8530dc:	0005883a 	mov	r2,zero
}
  8530e0:	e037883a 	mov	sp,fp
  8530e4:	df000017 	ldw	fp,0(sp)
  8530e8:	dec00104 	addi	sp,sp,4
  8530ec:	f800283a 	ret

008530f0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  8530f0:	defffa04 	addi	sp,sp,-24
  8530f4:	df000515 	stw	fp,20(sp)
  8530f8:	df000504 	addi	fp,sp,20
  8530fc:	e13ffd15 	stw	r4,-12(fp)
  853100:	e17ffe15 	stw	r5,-8(fp)
  853104:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  853108:	00bff9c4 	movi	r2,-25
  85310c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  853110:	e0bffe17 	ldw	r2,-8(fp)
  853114:	10da8060 	cmpeqi	r3,r2,27137
  853118:	1800031e 	bne	r3,zero,853128 <altera_avalon_jtag_uart_ioctl+0x38>
  85311c:	109a80a0 	cmpeqi	r2,r2,27138
  853120:	1000181e 	bne	r2,zero,853184 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  853124:	00002906 	br	8531cc <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  853128:	e0bffd17 	ldw	r2,-12(fp)
  85312c:	10c00117 	ldw	r3,4(r2)
  853130:	00a00034 	movhi	r2,32768
  853134:	10bfffc4 	addi	r2,r2,-1
  853138:	18802126 	beq	r3,r2,8531c0 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  85313c:	e0bfff17 	ldw	r2,-4(fp)
  853140:	10800017 	ldw	r2,0(r2)
  853144:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  853148:	e0bffc17 	ldw	r2,-16(fp)
  85314c:	10800090 	cmplti	r2,r2,2
  853150:	1000061e 	bne	r2,zero,85316c <altera_avalon_jtag_uart_ioctl+0x7c>
  853154:	e0fffc17 	ldw	r3,-16(fp)
  853158:	00a00034 	movhi	r2,32768
  85315c:	10bfffc4 	addi	r2,r2,-1
  853160:	18800226 	beq	r3,r2,85316c <altera_avalon_jtag_uart_ioctl+0x7c>
  853164:	e0bffc17 	ldw	r2,-16(fp)
  853168:	00000206 	br	853174 <altera_avalon_jtag_uart_ioctl+0x84>
  85316c:	00a00034 	movhi	r2,32768
  853170:	10bfff84 	addi	r2,r2,-2
  853174:	e0fffd17 	ldw	r3,-12(fp)
  853178:	18800115 	stw	r2,4(r3)
      rc = 0;
  85317c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  853180:	00000f06 	br	8531c0 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  853184:	e0bffd17 	ldw	r2,-12(fp)
  853188:	10c00117 	ldw	r3,4(r2)
  85318c:	00a00034 	movhi	r2,32768
  853190:	10bfffc4 	addi	r2,r2,-1
  853194:	18800c26 	beq	r3,r2,8531c8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  853198:	e0bffd17 	ldw	r2,-12(fp)
  85319c:	10c00917 	ldw	r3,36(r2)
  8531a0:	e0bffd17 	ldw	r2,-12(fp)
  8531a4:	10800117 	ldw	r2,4(r2)
  8531a8:	1885803a 	cmpltu	r2,r3,r2
  8531ac:	10c03fcc 	andi	r3,r2,255
  8531b0:	e0bfff17 	ldw	r2,-4(fp)
  8531b4:	10c00015 	stw	r3,0(r2)
      rc = 0;
  8531b8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  8531bc:	00000206 	br	8531c8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  8531c0:	0001883a 	nop
  8531c4:	00000106 	br	8531cc <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  8531c8:	0001883a 	nop

  default:
    break;
  }

  return rc;
  8531cc:	e0bffb17 	ldw	r2,-20(fp)
}
  8531d0:	e037883a 	mov	sp,fp
  8531d4:	df000017 	ldw	fp,0(sp)
  8531d8:	dec00104 	addi	sp,sp,4
  8531dc:	f800283a 	ret

008531e0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  8531e0:	deffed04 	addi	sp,sp,-76
  8531e4:	dfc01215 	stw	ra,72(sp)
  8531e8:	df001115 	stw	fp,68(sp)
  8531ec:	df001104 	addi	fp,sp,68
  8531f0:	e13ffc15 	stw	r4,-16(fp)
  8531f4:	e17ffd15 	stw	r5,-12(fp)
  8531f8:	e1bffe15 	stw	r6,-8(fp)
  8531fc:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  853200:	e0bffd17 	ldw	r2,-12(fp)
  853204:	e0bff015 	stw	r2,-64(fp)

  /*
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);
  853208:	e0bffc17 	ldw	r2,-16(fp)
  85320c:	10800a17 	ldw	r2,40(r2)
  853210:	e0bff815 	stw	r2,-32(fp)
  853214:	e03ff90d 	sth	zero,-28(fp)

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_pend (OS_EVENT* sem, 
                  INT16U timeout)
{
  INT8U err;
  OSSemPend (sem, timeout, &err);
  853218:	e0bff90b 	ldhu	r2,-28(fp)
  85321c:	e0fffb04 	addi	r3,fp,-20
  853220:	180d883a 	mov	r6,r3
  853224:	100b883a 	mov	r5,r2
  853228:	e13ff817 	ldw	r4,-32(fp)
  85322c:	084fafc0 	call	84fafc <OSSemPend>

  while (space > 0)
  853230:	00006106 	br	8533b8 <altera_avalon_jtag_uart_read+0x1d8>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  853234:	e0bffc17 	ldw	r2,-16(fp)
  853238:	10800d17 	ldw	r2,52(r2)
  85323c:	e0bff315 	stw	r2,-52(fp)
      out = sp->rx_out;
  853240:	e0bffc17 	ldw	r2,-16(fp)
  853244:	10800e17 	ldw	r2,56(r2)
  853248:	e0bff415 	stw	r2,-48(fp)

      if (in >= out)
  85324c:	e0fff317 	ldw	r3,-52(fp)
  853250:	e0bff417 	ldw	r2,-48(fp)
  853254:	18800536 	bltu	r3,r2,85326c <altera_avalon_jtag_uart_read+0x8c>
        n = in - out;
  853258:	e0fff317 	ldw	r3,-52(fp)
  85325c:	e0bff417 	ldw	r2,-48(fp)
  853260:	1885c83a 	sub	r2,r3,r2
  853264:	e0bff115 	stw	r2,-60(fp)
  853268:	00000406 	br	85327c <altera_avalon_jtag_uart_read+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  85326c:	00c20004 	movi	r3,2048
  853270:	e0bff417 	ldw	r2,-48(fp)
  853274:	1885c83a 	sub	r2,r3,r2
  853278:	e0bff115 	stw	r2,-60(fp)

      if (n == 0)
  85327c:	e0bff117 	ldw	r2,-60(fp)
  853280:	10001e26 	beq	r2,zero,8532fc <altera_avalon_jtag_uart_read+0x11c>
        break; /* No more data available */

      if (n > space)
  853284:	e0fffe17 	ldw	r3,-8(fp)
  853288:	e0bff117 	ldw	r2,-60(fp)
  85328c:	1880022e 	bgeu	r3,r2,853298 <altera_avalon_jtag_uart_read+0xb8>
        n = space;
  853290:	e0bffe17 	ldw	r2,-8(fp)
  853294:	e0bff115 	stw	r2,-60(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  853298:	e0bffc17 	ldw	r2,-16(fp)
  85329c:	10c01104 	addi	r3,r2,68
  8532a0:	e0bff417 	ldw	r2,-48(fp)
  8532a4:	1885883a 	add	r2,r3,r2
  8532a8:	e1bff117 	ldw	r6,-60(fp)
  8532ac:	100b883a 	mov	r5,r2
  8532b0:	e13ff017 	ldw	r4,-64(fp)
  8532b4:	08341500 	call	834150 <memcpy>
      ptr   += n;
  8532b8:	e0fff017 	ldw	r3,-64(fp)
  8532bc:	e0bff117 	ldw	r2,-60(fp)
  8532c0:	1885883a 	add	r2,r3,r2
  8532c4:	e0bff015 	stw	r2,-64(fp)
      space -= n;
  8532c8:	e0fffe17 	ldw	r3,-8(fp)
  8532cc:	e0bff117 	ldw	r2,-60(fp)
  8532d0:	1885c83a 	sub	r2,r3,r2
  8532d4:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8532d8:	e0fff417 	ldw	r3,-48(fp)
  8532dc:	e0bff117 	ldw	r2,-60(fp)
  8532e0:	1885883a 	add	r2,r3,r2
  8532e4:	10c1ffcc 	andi	r3,r2,2047
  8532e8:	e0bffc17 	ldw	r2,-16(fp)
  8532ec:	10c00e15 	stw	r3,56(r2)
    }
    while (space > 0);
  8532f0:	e0bffe17 	ldw	r2,-8(fp)
  8532f4:	00bfcf16 	blt	zero,r2,853234 <__alt_mem_epcs_flash_controller_0+0xff84a234>
  8532f8:	00000106 	br	853300 <altera_avalon_jtag_uart_read+0x120>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  8532fc:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  853300:	e0fff017 	ldw	r3,-64(fp)
  853304:	e0bffd17 	ldw	r2,-12(fp)
  853308:	18802e1e 	bne	r3,r2,8533c4 <altera_avalon_jtag_uart_read+0x1e4>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  85330c:	e0bfff17 	ldw	r2,-4(fp)
  853310:	1090000c 	andi	r2,r2,16384
  853314:	10002d1e 	bne	r2,zero,8533cc <altera_avalon_jtag_uart_read+0x1ec>
      break;

#ifdef __ucosii__
    /* OS Present: Pend on a flag if the OS is running, otherwise spin */
    if(OSRunning == OS_TRUE) {
  853318:	d0a0a343 	ldbu	r2,-32115(gp)
  85331c:	10803fcc 	andi	r2,r2,255
  853320:	10800058 	cmpnei	r2,r2,1
  853324:	1000161e 	bne	r2,zero,853380 <altera_avalon_jtag_uart_read+0x1a0>
       * When running in a multi-threaded mode, we pend on the read event
       * flag set and timeout event flag set in the isr. This avoids wasting CPU
       * cycles waiting in this thread, when we could be doing something more
       * profitable elsewhere.
       */
      ALT_FLAG_PEND (sp->events,
  853328:	e0bffc17 	ldw	r2,-16(fp)
  85332c:	10800c17 	ldw	r2,48(r2)
  853330:	e0bff215 	stw	r2,-56(fp)
  853334:	00800144 	movi	r2,5
  853338:	e0bff98d 	sth	r2,-26(fp)
  85333c:	00bfe0c4 	movi	r2,-125
  853340:	e0bffa05 	stb	r2,-24(fp)
  853344:	e03ffa8d 	sth	zero,-22(fp)
                   OS_FLAGS flags, 
                   INT8U wait_type, 
                   INT16U timeout)
{
  INT8U err;
  if (OSRunning)
  853348:	d0a0a343 	ldbu	r2,-32115(gp)
  85334c:	10803fcc 	andi	r2,r2,255
  853350:	10001526 	beq	r2,zero,8533a8 <altera_avalon_jtag_uart_read+0x1c8>
  {
    OSFlagPend (group, flags, wait_type, timeout, &err);
  853354:	e0fff98b 	ldhu	r3,-26(fp)
  853358:	e13ffa03 	ldbu	r4,-24(fp)
  85335c:	e17ffa8b 	ldhu	r5,-22(fp)
  853360:	e0bffb44 	addi	r2,fp,-19
  853364:	d8800015 	stw	r2,0(sp)
  853368:	280f883a 	mov	r7,r5
  85336c:	200d883a 	mov	r6,r4
  853370:	180b883a 	mov	r5,r3
  853374:	e13ff217 	ldw	r4,-56(fp)
  853378:	084d0880 	call	84d088 <OSFlagPend>
  85337c:	00000a06 	br	8533a8 <altera_avalon_jtag_uart_read+0x1c8>
                     OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                     0);
    }
    else {
      /* Spin until more data arrives or until host disconnects */
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  853380:	0001883a 	nop
  853384:	e0bffc17 	ldw	r2,-16(fp)
  853388:	10c00d17 	ldw	r3,52(r2)
  85338c:	e0bff317 	ldw	r2,-52(fp)
  853390:	1880051e 	bne	r3,r2,8533a8 <altera_avalon_jtag_uart_read+0x1c8>
  853394:	e0bffc17 	ldw	r2,-16(fp)
  853398:	10c00917 	ldw	r3,36(r2)
  85339c:	e0bffc17 	ldw	r2,-16(fp)
  8533a0:	10800117 	ldw	r2,4(r2)
  8533a4:	18bff736 	bltu	r3,r2,853384 <__alt_mem_epcs_flash_controller_0+0xff84a384>
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  8533a8:	e0bffc17 	ldw	r2,-16(fp)
  8533ac:	10c00d17 	ldw	r3,52(r2)
  8533b0:	e0bff317 	ldw	r2,-52(fp)
  8533b4:	18800726 	beq	r3,r2,8533d4 <altera_avalon_jtag_uart_read+0x1f4>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  8533b8:	e0bffe17 	ldw	r2,-8(fp)
  8533bc:	00bf9d16 	blt	zero,r2,853234 <__alt_mem_epcs_flash_controller_0+0xff84a234>
  8533c0:	00000506 	br	8533d8 <altera_avalon_jtag_uart_read+0x1f8>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  8533c4:	0001883a 	nop
  8533c8:	00000306 	br	8533d8 <altera_avalon_jtag_uart_read+0x1f8>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  8533cc:	0001883a 	nop
  8533d0:	00000106 	br	8533d8 <altera_avalon_jtag_uart_read+0x1f8>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  8533d4:	0001883a 	nop
  /*
   * Now that access to the circular buffer is complete, release the read
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);
  8533d8:	e0bffc17 	ldw	r2,-16(fp)
  8533dc:	10800a17 	ldw	r2,40(r2)
  8533e0:	1009883a 	mov	r4,r2
  8533e4:	084fe740 	call	84fe74 <OSSemPost>

  if (ptr != buffer)
  8533e8:	e0fff017 	ldw	r3,-64(fp)
  8533ec:	e0bffd17 	ldw	r2,-12(fp)
  8533f0:	18801826 	beq	r3,r2,853454 <altera_avalon_jtag_uart_read+0x274>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8533f4:	0005303a 	rdctl	r2,status
  8533f8:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8533fc:	e0fff717 	ldw	r3,-36(fp)
  853400:	00bfff84 	movi	r2,-2
  853404:	1884703a 	and	r2,r3,r2
  853408:	1001703a 	wrctl	status,r2
  
  return context;
  85340c:	e0bff717 	ldw	r2,-36(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  853410:	e0bff615 	stw	r2,-40(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  853414:	e0bffc17 	ldw	r2,-16(fp)
  853418:	10800817 	ldw	r2,32(r2)
  85341c:	10c00054 	ori	r3,r2,1
  853420:	e0bffc17 	ldw	r2,-16(fp)
  853424:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  853428:	e0bffc17 	ldw	r2,-16(fp)
  85342c:	10800017 	ldw	r2,0(r2)
  853430:	10800104 	addi	r2,r2,4
  853434:	1007883a 	mov	r3,r2
  853438:	e0bffc17 	ldw	r2,-16(fp)
  85343c:	10800817 	ldw	r2,32(r2)
  853440:	18800035 	stwio	r2,0(r3)
  853444:	e0bff617 	ldw	r2,-40(fp)
  853448:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  85344c:	e0bff517 	ldw	r2,-44(fp)
  853450:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  853454:	e0fff017 	ldw	r3,-64(fp)
  853458:	e0bffd17 	ldw	r2,-12(fp)
  85345c:	18800426 	beq	r3,r2,853470 <altera_avalon_jtag_uart_read+0x290>
    return ptr - buffer;
  853460:	e0fff017 	ldw	r3,-64(fp)
  853464:	e0bffd17 	ldw	r2,-12(fp)
  853468:	1885c83a 	sub	r2,r3,r2
  85346c:	00000606 	br	853488 <altera_avalon_jtag_uart_read+0x2a8>
  else if (flags & O_NONBLOCK)
  853470:	e0bfff17 	ldw	r2,-4(fp)
  853474:	1090000c 	andi	r2,r2,16384
  853478:	10000226 	beq	r2,zero,853484 <altera_avalon_jtag_uart_read+0x2a4>
    return -EWOULDBLOCK;
  85347c:	00bffd44 	movi	r2,-11
  853480:	00000106 	br	853488 <altera_avalon_jtag_uart_read+0x2a8>
  else
    return -EIO;
  853484:	00bffec4 	movi	r2,-5
}
  853488:	e037883a 	mov	sp,fp
  85348c:	dfc00117 	ldw	ra,4(sp)
  853490:	df000017 	ldw	fp,0(sp)
  853494:	dec00204 	addi	sp,sp,8
  853498:	f800283a 	ret

0085349c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  85349c:	deffed04 	addi	sp,sp,-76
  8534a0:	dfc01215 	stw	ra,72(sp)
  8534a4:	df001115 	stw	fp,68(sp)
  8534a8:	df001104 	addi	fp,sp,68
  8534ac:	e13ffc15 	stw	r4,-16(fp)
  8534b0:	e17ffd15 	stw	r5,-12(fp)
  8534b4:	e1bffe15 	stw	r6,-8(fp)
  8534b8:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  8534bc:	e03ff015 	stw	zero,-64(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  8534c0:	e0bffd17 	ldw	r2,-12(fp)
  8534c4:	e0bff215 	stw	r2,-56(fp)

  /*
   * When running in a multi threaded environment, obtain the "write_lock"
   * semaphore. This ensures that writing to the device is thread-safe.
   */
  ALT_SEM_PEND (sp->write_lock, 0);
  8534c8:	e0bffc17 	ldw	r2,-16(fp)
  8534cc:	10800b17 	ldw	r2,44(r2)
  8534d0:	e0bff815 	stw	r2,-32(fp)
  8534d4:	e03ff90d 	sth	zero,-28(fp)
  8534d8:	e0bff90b 	ldhu	r2,-28(fp)
  8534dc:	e0fffb44 	addi	r3,fp,-19
  8534e0:	180d883a 	mov	r6,r3
  8534e4:	100b883a 	mov	r5,r2
  8534e8:	e13ff817 	ldw	r4,-32(fp)
  8534ec:	084fafc0 	call	84fafc <OSSemPend>

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  8534f0:	00003706 	br	8535d0 <altera_avalon_jtag_uart_write+0x134>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  8534f4:	e0bffc17 	ldw	r2,-16(fp)
  8534f8:	10800f17 	ldw	r2,60(r2)
  8534fc:	e0bff415 	stw	r2,-48(fp)
      out = sp->tx_out;
  853500:	e0bffc17 	ldw	r2,-16(fp)
  853504:	10801017 	ldw	r2,64(r2)
  853508:	e0bff015 	stw	r2,-64(fp)

      if (in < out)
  85350c:	e0fff417 	ldw	r3,-48(fp)
  853510:	e0bff017 	ldw	r2,-64(fp)
  853514:	1880062e 	bgeu	r3,r2,853530 <altera_avalon_jtag_uart_write+0x94>
        n = out - 1 - in;
  853518:	e0fff017 	ldw	r3,-64(fp)
  85351c:	e0bff417 	ldw	r2,-48(fp)
  853520:	1885c83a 	sub	r2,r3,r2
  853524:	10bfffc4 	addi	r2,r2,-1
  853528:	e0bff115 	stw	r2,-60(fp)
  85352c:	00000b06 	br	85355c <altera_avalon_jtag_uart_write+0xc0>
      else if (out > 0)
  853530:	e0bff017 	ldw	r2,-64(fp)
  853534:	10000526 	beq	r2,zero,85354c <altera_avalon_jtag_uart_write+0xb0>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  853538:	00c20004 	movi	r3,2048
  85353c:	e0bff417 	ldw	r2,-48(fp)
  853540:	1885c83a 	sub	r2,r3,r2
  853544:	e0bff115 	stw	r2,-60(fp)
  853548:	00000406 	br	85355c <altera_avalon_jtag_uart_write+0xc0>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  85354c:	00c1ffc4 	movi	r3,2047
  853550:	e0bff417 	ldw	r2,-48(fp)
  853554:	1885c83a 	sub	r2,r3,r2
  853558:	e0bff115 	stw	r2,-60(fp)

      if (n == 0)
  85355c:	e0bff117 	ldw	r2,-60(fp)
  853560:	10001e26 	beq	r2,zero,8535dc <altera_avalon_jtag_uart_write+0x140>
        break;

      if (n > count)
  853564:	e0fffe17 	ldw	r3,-8(fp)
  853568:	e0bff117 	ldw	r2,-60(fp)
  85356c:	1880022e 	bgeu	r3,r2,853578 <altera_avalon_jtag_uart_write+0xdc>
        n = count;
  853570:	e0bffe17 	ldw	r2,-8(fp)
  853574:	e0bff115 	stw	r2,-60(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  853578:	e0bffc17 	ldw	r2,-16(fp)
  85357c:	10c21104 	addi	r3,r2,2116
  853580:	e0bff417 	ldw	r2,-48(fp)
  853584:	1885883a 	add	r2,r3,r2
  853588:	e1bff117 	ldw	r6,-60(fp)
  85358c:	e17ffd17 	ldw	r5,-12(fp)
  853590:	1009883a 	mov	r4,r2
  853594:	08341500 	call	834150 <memcpy>
      ptr   += n;
  853598:	e0fffd17 	ldw	r3,-12(fp)
  85359c:	e0bff117 	ldw	r2,-60(fp)
  8535a0:	1885883a 	add	r2,r3,r2
  8535a4:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  8535a8:	e0fffe17 	ldw	r3,-8(fp)
  8535ac:	e0bff117 	ldw	r2,-60(fp)
  8535b0:	1885c83a 	sub	r2,r3,r2
  8535b4:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8535b8:	e0fff417 	ldw	r3,-48(fp)
  8535bc:	e0bff117 	ldw	r2,-60(fp)
  8535c0:	1885883a 	add	r2,r3,r2
  8535c4:	10c1ffcc 	andi	r3,r2,2047
  8535c8:	e0bffc17 	ldw	r2,-16(fp)
  8535cc:	10c00f15 	stw	r3,60(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  8535d0:	e0bffe17 	ldw	r2,-8(fp)
  8535d4:	00bfc716 	blt	zero,r2,8534f4 <__alt_mem_epcs_flash_controller_0+0xff84a4f4>
  8535d8:	00000106 	br	8535e0 <altera_avalon_jtag_uart_write+0x144>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  8535dc:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8535e0:	0005303a 	rdctl	r2,status
  8535e4:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8535e8:	e0fff717 	ldw	r3,-36(fp)
  8535ec:	00bfff84 	movi	r2,-2
  8535f0:	1884703a 	and	r2,r3,r2
  8535f4:	1001703a 	wrctl	status,r2
  
  return context;
  8535f8:	e0bff717 	ldw	r2,-36(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  8535fc:	e0bff615 	stw	r2,-40(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  853600:	e0bffc17 	ldw	r2,-16(fp)
  853604:	10800817 	ldw	r2,32(r2)
  853608:	10c00094 	ori	r3,r2,2
  85360c:	e0bffc17 	ldw	r2,-16(fp)
  853610:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  853614:	e0bffc17 	ldw	r2,-16(fp)
  853618:	10800017 	ldw	r2,0(r2)
  85361c:	10800104 	addi	r2,r2,4
  853620:	1007883a 	mov	r3,r2
  853624:	e0bffc17 	ldw	r2,-16(fp)
  853628:	10800817 	ldw	r2,32(r2)
  85362c:	18800035 	stwio	r2,0(r3)
  853630:	e0bff617 	ldw	r2,-40(fp)
  853634:	e0bff315 	stw	r2,-52(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  853638:	e0bff317 	ldw	r2,-52(fp)
  85363c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  853640:	e0bffe17 	ldw	r2,-8(fp)
  853644:	00802a0e 	bge	zero,r2,8536f0 <altera_avalon_jtag_uart_write+0x254>
    {
      if (flags & O_NONBLOCK)
  853648:	e0bfff17 	ldw	r2,-4(fp)
  85364c:	1090000c 	andi	r2,r2,16384
  853650:	10002a1e 	bne	r2,zero,8536fc <altera_avalon_jtag_uart_write+0x260>
        break;

#ifdef __ucosii__
      /* OS Present: Pend on a flag if the OS is running, otherwise spin */
      if(OSRunning == OS_TRUE) {
  853654:	d0a0a343 	ldbu	r2,-32115(gp)
  853658:	10803fcc 	andi	r2,r2,255
  85365c:	10800058 	cmpnei	r2,r2,1
  853660:	1000161e 	bne	r2,zero,8536bc <altera_avalon_jtag_uart_write+0x220>
         * more profitable elsewhere.
         */
#ifdef ALTERA_AVALON_JTAG_UART_IGNORE_FIFO_FULL_ERROR
        if(!sp->host_inactive)
#endif
        ALT_FLAG_PEND (sp->events,
  853664:	e0bffc17 	ldw	r2,-16(fp)
  853668:	10800c17 	ldw	r2,48(r2)
  85366c:	e0bff515 	stw	r2,-44(fp)
  853670:	00800184 	movi	r2,6
  853674:	e0bff98d 	sth	r2,-26(fp)
  853678:	00bfe0c4 	movi	r2,-125
  85367c:	e0bffa05 	stb	r2,-24(fp)
  853680:	e03ffa8d 	sth	zero,-22(fp)
                   OS_FLAGS flags, 
                   INT8U wait_type, 
                   INT16U timeout)
{
  INT8U err;
  if (OSRunning)
  853684:	d0a0a343 	ldbu	r2,-32115(gp)
  853688:	10803fcc 	andi	r2,r2,255
  85368c:	10001526 	beq	r2,zero,8536e4 <altera_avalon_jtag_uart_write+0x248>
  {
    OSFlagPend (group, flags, wait_type, timeout, &err);
  853690:	e0fff98b 	ldhu	r3,-26(fp)
  853694:	e13ffa03 	ldbu	r4,-24(fp)
  853698:	e17ffa8b 	ldhu	r5,-22(fp)
  85369c:	e0bffb04 	addi	r2,fp,-20
  8536a0:	d8800015 	stw	r2,0(sp)
  8536a4:	280f883a 	mov	r7,r5
  8536a8:	200d883a 	mov	r6,r4
  8536ac:	180b883a 	mov	r5,r3
  8536b0:	e13ff517 	ldw	r4,-44(fp)
  8536b4:	084d0880 	call	84d088 <OSFlagPend>
  8536b8:	00000a06 	br	8536e4 <altera_avalon_jtag_uart_write+0x248>
        /*
         * OS not running: Wait for data to be removed from buffer.
         * Once the interrupt routine has removed some data then we
         * will be able to insert some more.
         */
        while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  8536bc:	0001883a 	nop
  8536c0:	e0bffc17 	ldw	r2,-16(fp)
  8536c4:	10c01017 	ldw	r3,64(r2)
  8536c8:	e0bff017 	ldw	r2,-64(fp)
  8536cc:	1880051e 	bne	r3,r2,8536e4 <altera_avalon_jtag_uart_write+0x248>
  8536d0:	e0bffc17 	ldw	r2,-16(fp)
  8536d4:	10c00917 	ldw	r3,36(r2)
  8536d8:	e0bffc17 	ldw	r2,-16(fp)
  8536dc:	10800117 	ldw	r2,4(r2)
  8536e0:	18bff736 	bltu	r3,r2,8536c0 <__alt_mem_epcs_flash_controller_0+0xff84a6c0>
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  8536e4:	e0bffc17 	ldw	r2,-16(fp)
  8536e8:	10800917 	ldw	r2,36(r2)
  8536ec:	1000051e 	bne	r2,zero,853704 <altera_avalon_jtag_uart_write+0x268>
         break;
    }
  }
  while (count > 0);
  8536f0:	e0bffe17 	ldw	r2,-8(fp)
  8536f4:	00bfb616 	blt	zero,r2,8535d0 <__alt_mem_epcs_flash_controller_0+0xff84a5d0>
  8536f8:	00000306 	br	853708 <altera_avalon_jtag_uart_write+0x26c>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  8536fc:	0001883a 	nop
  853700:	00000106 	br	853708 <altera_avalon_jtag_uart_write+0x26c>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  853704:	0001883a 	nop

  /*
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);
  853708:	e0bffc17 	ldw	r2,-16(fp)
  85370c:	10800b17 	ldw	r2,44(r2)
  853710:	1009883a 	mov	r4,r2
  853714:	084fe740 	call	84fe74 <OSSemPost>

  if (ptr != start)
  853718:	e0fffd17 	ldw	r3,-12(fp)
  85371c:	e0bff217 	ldw	r2,-56(fp)
  853720:	18800426 	beq	r3,r2,853734 <altera_avalon_jtag_uart_write+0x298>
    return ptr - start;
  853724:	e0fffd17 	ldw	r3,-12(fp)
  853728:	e0bff217 	ldw	r2,-56(fp)
  85372c:	1885c83a 	sub	r2,r3,r2
  853730:	00000606 	br	85374c <altera_avalon_jtag_uart_write+0x2b0>
  else if (flags & O_NONBLOCK)
  853734:	e0bfff17 	ldw	r2,-4(fp)
  853738:	1090000c 	andi	r2,r2,16384
  85373c:	10000226 	beq	r2,zero,853748 <altera_avalon_jtag_uart_write+0x2ac>
    return -EWOULDBLOCK;
  853740:	00bffd44 	movi	r2,-11
  853744:	00000106 	br	85374c <altera_avalon_jtag_uart_write+0x2b0>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  853748:	00bffec4 	movi	r2,-5
}
  85374c:	e037883a 	mov	sp,fp
  853750:	dfc00117 	ldw	ra,4(sp)
  853754:	df000017 	ldw	fp,0(sp)
  853758:	dec00204 	addi	sp,sp,8
  85375c:	f800283a 	ret

00853760 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  853760:	defffa04 	addi	sp,sp,-24
  853764:	dfc00515 	stw	ra,20(sp)
  853768:	df000415 	stw	fp,16(sp)
  85376c:	df000404 	addi	fp,sp,16
  853770:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  853774:	0007883a 	mov	r3,zero
  853778:	e0bfff17 	ldw	r2,-4(fp)
  85377c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  853780:	e0bfff17 	ldw	r2,-4(fp)
  853784:	10800104 	addi	r2,r2,4
  853788:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  85378c:	0005303a 	rdctl	r2,status
  853790:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  853794:	e0fffd17 	ldw	r3,-12(fp)
  853798:	00bfff84 	movi	r2,-2
  85379c:	1884703a 	and	r2,r3,r2
  8537a0:	1001703a 	wrctl	status,r2
  
  return context;
  8537a4:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  8537a8:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  8537ac:	085638c0 	call	85638c <alt_tick>
  8537b0:	e0bffc17 	ldw	r2,-16(fp)
  8537b4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8537b8:	e0bffe17 	ldw	r2,-8(fp)
  8537bc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  8537c0:	0001883a 	nop
  8537c4:	e037883a 	mov	sp,fp
  8537c8:	dfc00117 	ldw	ra,4(sp)
  8537cc:	df000017 	ldw	fp,0(sp)
  8537d0:	dec00204 	addi	sp,sp,8
  8537d4:	f800283a 	ret

008537d8 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  8537d8:	defff804 	addi	sp,sp,-32
  8537dc:	dfc00715 	stw	ra,28(sp)
  8537e0:	df000615 	stw	fp,24(sp)
  8537e4:	df000604 	addi	fp,sp,24
  8537e8:	e13ffc15 	stw	r4,-16(fp)
  8537ec:	e17ffd15 	stw	r5,-12(fp)
  8537f0:	e1bffe15 	stw	r6,-8(fp)
  8537f4:	e1ffff15 	stw	r7,-4(fp)
  8537f8:	e0bfff17 	ldw	r2,-4(fp)
  8537fc:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  853800:	d0a0b817 	ldw	r2,-32032(gp)
  853804:	1000021e 	bne	r2,zero,853810 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
  853808:	e0bffb17 	ldw	r2,-20(fp)
  85380c:	d0a0b815 	stw	r2,-32032(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  853810:	e0bffc17 	ldw	r2,-16(fp)
  853814:	10800104 	addi	r2,r2,4
  853818:	00c001c4 	movi	r3,7
  85381c:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  853820:	d8000015 	stw	zero,0(sp)
  853824:	e1fffc17 	ldw	r7,-16(fp)
  853828:	01802174 	movhi	r6,133
  85382c:	318dd804 	addi	r6,r6,14176
  853830:	e17ffe17 	ldw	r5,-8(fp)
  853834:	e13ffd17 	ldw	r4,-12(fp)
  853838:	08496c40 	call	8496c4 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  85383c:	0001883a 	nop
  853840:	e037883a 	mov	sp,fp
  853844:	dfc00117 	ldw	ra,4(sp)
  853848:	df000017 	ldw	fp,0(sp)
  85384c:	dec00204 	addi	sp,sp,8
  853850:	f800283a 	ret

00853854 <altera_avalon_uart_read_fd>:
 *
 */

int 
altera_avalon_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  853854:	defffa04 	addi	sp,sp,-24
  853858:	dfc00515 	stw	ra,20(sp)
  85385c:	df000415 	stw	fp,16(sp)
  853860:	df000404 	addi	fp,sp,16
  853864:	e13ffd15 	stw	r4,-12(fp)
  853868:	e17ffe15 	stw	r5,-8(fp)
  85386c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  853870:	e0bffd17 	ldw	r2,-12(fp)
  853874:	10800017 	ldw	r2,0(r2)
  853878:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_read(&dev->state, buffer, space,
  85387c:	e0bffc17 	ldw	r2,-16(fp)
  853880:	10c00a04 	addi	r3,r2,40
  853884:	e0bffd17 	ldw	r2,-12(fp)
  853888:	10800217 	ldw	r2,8(r2)
  85388c:	100f883a 	mov	r7,r2
  853890:	e1bfff17 	ldw	r6,-4(fp)
  853894:	e17ffe17 	ldw	r5,-8(fp)
  853898:	1809883a 	mov	r4,r3
  85389c:	0853ecc0 	call	853ecc <altera_avalon_uart_read>
      fd->fd_flags);
}
  8538a0:	e037883a 	mov	sp,fp
  8538a4:	dfc00117 	ldw	ra,4(sp)
  8538a8:	df000017 	ldw	fp,0(sp)
  8538ac:	dec00204 	addi	sp,sp,8
  8538b0:	f800283a 	ret

008538b4 <altera_avalon_uart_write_fd>:

int 
altera_avalon_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  8538b4:	defffa04 	addi	sp,sp,-24
  8538b8:	dfc00515 	stw	ra,20(sp)
  8538bc:	df000415 	stw	fp,16(sp)
  8538c0:	df000404 	addi	fp,sp,16
  8538c4:	e13ffd15 	stw	r4,-12(fp)
  8538c8:	e17ffe15 	stw	r5,-8(fp)
  8538cc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  8538d0:	e0bffd17 	ldw	r2,-12(fp)
  8538d4:	10800017 	ldw	r2,0(r2)
  8538d8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_write(&dev->state, buffer, space,
  8538dc:	e0bffc17 	ldw	r2,-16(fp)
  8538e0:	10c00a04 	addi	r3,r2,40
  8538e4:	e0bffd17 	ldw	r2,-12(fp)
  8538e8:	10800217 	ldw	r2,8(r2)
  8538ec:	100f883a 	mov	r7,r2
  8538f0:	e1bfff17 	ldw	r6,-4(fp)
  8538f4:	e17ffe17 	ldw	r5,-8(fp)
  8538f8:	1809883a 	mov	r4,r3
  8538fc:	08541700 	call	854170 <altera_avalon_uart_write>
      fd->fd_flags);
}
  853900:	e037883a 	mov	sp,fp
  853904:	dfc00117 	ldw	ra,4(sp)
  853908:	df000017 	ldw	fp,0(sp)
  85390c:	dec00204 	addi	sp,sp,8
  853910:	f800283a 	ret

00853914 <altera_avalon_uart_close_fd>:

#endif /* ALTERA_AVALON_UART_USE_IOCTL */

int 
altera_avalon_uart_close_fd(alt_fd* fd)
{
  853914:	defffc04 	addi	sp,sp,-16
  853918:	dfc00315 	stw	ra,12(sp)
  85391c:	df000215 	stw	fp,8(sp)
  853920:	df000204 	addi	fp,sp,8
  853924:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  853928:	e0bfff17 	ldw	r2,-4(fp)
  85392c:	10800017 	ldw	r2,0(r2)
  853930:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_uart_close(&dev->state, fd->fd_flags);
  853934:	e0bffe17 	ldw	r2,-8(fp)
  853938:	10c00a04 	addi	r3,r2,40
  85393c:	e0bfff17 	ldw	r2,-4(fp)
  853940:	10800217 	ldw	r2,8(r2)
  853944:	100b883a 	mov	r5,r2
  853948:	1809883a 	mov	r4,r3
  85394c:	0853e3c0 	call	853e3c <altera_avalon_uart_close>
}
  853950:	e037883a 	mov	sp,fp
  853954:	dfc00117 	ldw	ra,4(sp)
  853958:	df000017 	ldw	fp,0(sp)
  85395c:	dec00204 	addi	sp,sp,8
  853960:	f800283a 	ret

00853964 <altera_avalon_uart_init>:
  alt_u32 status);

void 
altera_avalon_uart_init(altera_avalon_uart_state* sp, 
  alt_u32 irq_controller_id,  alt_u32 irq)
{
  853964:	defff304 	addi	sp,sp,-52
  853968:	dfc00c15 	stw	ra,48(sp)
  85396c:	df000b15 	stw	fp,44(sp)
  853970:	df000b04 	addi	fp,sp,44
  853974:	e13ffd15 	stw	r4,-12(fp)
  853978:	e17ffe15 	stw	r5,-8(fp)
  85397c:	e1bfff15 	stw	r6,-4(fp)
  void* base = sp->base;
  853980:	e0bffd17 	ldw	r2,-12(fp)
  853984:	10800017 	ldw	r2,0(r2)
  853988:	e0bff615 	stw	r2,-40(fp)
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  85398c:	e0bffd17 	ldw	r2,-12(fp)
  853990:	10800704 	addi	r2,r2,28
  853994:	e0bffa15 	stw	r2,-24(fp)
  853998:	e03ffb0d 	sth	zero,-20(fp)

static ALT_INLINE int ALT_ALWAYS_INLINE alt_flag_create (OS_FLAG_GRP** pgroup, 
               OS_FLAGS flags)
{
  INT8U err;
  *pgroup = OSFlagCreate (flags, &err);
  85399c:	e0bffb0b 	ldhu	r2,-20(fp)
  8539a0:	e0fffc84 	addi	r3,fp,-14
  8539a4:	180b883a 	mov	r5,r3
  8539a8:	1009883a 	mov	r4,r2
  8539ac:	084cac40 	call	84cac4 <OSFlagCreate>
  8539b0:	1007883a 	mov	r3,r2
  8539b4:	e0bffa17 	ldw	r2,-24(fp)
  8539b8:	10c00015 	stw	r3,0(r2)
  return err;
  8539bc:	e0bffc83 	ldbu	r2,-14(fp)
  8539c0:	10803fcc 	andi	r2,r2,255
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  8539c4:	1000241e 	bne	r2,zero,853a58 <altera_avalon_uart_init+0xf4>
  8539c8:	e0bffd17 	ldw	r2,-12(fp)
  8539cc:	10800804 	addi	r2,r2,32
  8539d0:	e0bff715 	stw	r2,-36(fp)
  8539d4:	00800044 	movi	r2,1
  8539d8:	e0bffb8d 	sth	r2,-18(fp)
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_create (OS_EVENT** sem, 
              INT16U value)
{
  *sem = OSSemCreate (value);
  8539dc:	e0bffb8b 	ldhu	r2,-18(fp)
  8539e0:	1009883a 	mov	r4,r2
  8539e4:	084f7e40 	call	84f7e4 <OSSemCreate>
  8539e8:	1007883a 	mov	r3,r2
  8539ec:	e0bff717 	ldw	r2,-36(fp)
  8539f0:	10c00015 	stw	r3,0(r2)
  return *sem ? 0 : -1;
  8539f4:	e0bff717 	ldw	r2,-36(fp)
  8539f8:	10800017 	ldw	r2,0(r2)
  8539fc:	10000226 	beq	r2,zero,853a08 <altera_avalon_uart_init+0xa4>
  853a00:	0005883a 	mov	r2,zero
  853a04:	00000106 	br	853a0c <altera_avalon_uart_init+0xa8>
  853a08:	00bfffc4 	movi	r2,-1
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  853a0c:	1000121e 	bne	r2,zero,853a58 <altera_avalon_uart_init+0xf4>
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
          ALT_SEM_CREATE (&sp->write_lock, 1);
  853a10:	e0bffd17 	ldw	r2,-12(fp)
  853a14:	10800904 	addi	r2,r2,36
  853a18:	e0bff815 	stw	r2,-32(fp)
  853a1c:	00800044 	movi	r2,1
  853a20:	e0bffc0d 	sth	r2,-16(fp)
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_create (OS_EVENT** sem, 
              INT16U value)
{
  *sem = OSSemCreate (value);
  853a24:	e0bffc0b 	ldhu	r2,-16(fp)
  853a28:	1009883a 	mov	r4,r2
  853a2c:	084f7e40 	call	84f7e4 <OSSemCreate>
  853a30:	1007883a 	mov	r3,r2
  853a34:	e0bff817 	ldw	r2,-32(fp)
  853a38:	10c00015 	stw	r3,0(r2)
  return *sem ? 0 : -1;
  853a3c:	e0bff817 	ldw	r2,-32(fp)
  853a40:	10800017 	ldw	r2,0(r2)
  853a44:	10000226 	beq	r2,zero,853a50 <altera_avalon_uart_init+0xec>
  853a48:	0005883a 	mov	r2,zero
  853a4c:	00000106 	br	853a54 <altera_avalon_uart_init+0xf0>
  853a50:	00bfffc4 	movi	r2,-1
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  853a54:	10000226 	beq	r2,zero,853a60 <altera_avalon_uart_init+0xfc>
  853a58:	00800044 	movi	r2,1
  853a5c:	00000106 	br	853a64 <altera_avalon_uart_init+0x100>
  853a60:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  853a64:	e0bff915 	stw	r2,-28(fp)
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
          ALT_SEM_CREATE (&sp->write_lock, 1);

  if (!error)
  853a68:	e0bff917 	ldw	r2,-28(fp)
  853a6c:	10000f1e 	bne	r2,zero,853aac <altera_avalon_uart_init+0x148>
  {
    /* enable interrupts at the device */
    sp->ctrl = ALTERA_AVALON_UART_CONTROL_RTS_MSK  |
  853a70:	e0bffd17 	ldw	r2,-12(fp)
  853a74:	00c32004 	movi	r3,3200
  853a78:	10c00115 	stw	r3,4(r2)
                ALTERA_AVALON_UART_CONTROL_RRDY_MSK |
                ALTERA_AVALON_UART_CONTROL_DCTS_MSK;

    IOWR_ALTERA_AVALON_UART_CONTROL(base, sp->ctrl); 
  853a7c:	e0bff617 	ldw	r2,-40(fp)
  853a80:	10800304 	addi	r2,r2,12
  853a84:	e0fffd17 	ldw	r3,-12(fp)
  853a88:	18c00117 	ldw	r3,4(r3)
  853a8c:	10c00035 	stwio	r3,0(r2)
  
    /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
    alt_ic_isr_register(irq_controller_id, irq, altera_avalon_uart_irq, sp, 
  853a90:	d8000015 	stw	zero,0(sp)
  853a94:	e1fffd17 	ldw	r7,-12(fp)
  853a98:	01802174 	movhi	r6,133
  853a9c:	318eb104 	addi	r6,r6,15044
  853aa0:	e17fff17 	ldw	r5,-4(fp)
  853aa4:	e13ffe17 	ldw	r4,-8(fp)
  853aa8:	08496c40 	call	8496c4 <alt_ic_isr_register>
      0x0);
#else
    alt_irq_register (irq, sp, altera_avalon_uart_irq);
#endif  
  }
}
  853aac:	0001883a 	nop
  853ab0:	e037883a 	mov	sp,fp
  853ab4:	dfc00117 	ldw	ra,4(sp)
  853ab8:	df000017 	ldw	fp,0(sp)
  853abc:	dec00204 	addi	sp,sp,8
  853ac0:	f800283a 	ret

00853ac4 <altera_avalon_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_uart_irq(void* context)
#else
static void altera_avalon_uart_irq(void* context, alt_u32 id)
#endif
{
  853ac4:	defffa04 	addi	sp,sp,-24
  853ac8:	dfc00515 	stw	ra,20(sp)
  853acc:	df000415 	stw	fp,16(sp)
  853ad0:	df000404 	addi	fp,sp,16
  853ad4:	e13fff15 	stw	r4,-4(fp)
  alt_u32 status;

  altera_avalon_uart_state* sp = (altera_avalon_uart_state*) context;
  853ad8:	e0bfff17 	ldw	r2,-4(fp)
  853adc:	e0bffc15 	stw	r2,-16(fp)
  void* base               = sp->base;
  853ae0:	e0bffc17 	ldw	r2,-16(fp)
  853ae4:	10800017 	ldw	r2,0(r2)
  853ae8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Read the status register in order to determine the cause of the
   * interrupt.
   */

  status = IORD_ALTERA_AVALON_UART_STATUS(base);
  853aec:	e0bffd17 	ldw	r2,-12(fp)
  853af0:	10800204 	addi	r2,r2,8
  853af4:	10800037 	ldwio	r2,0(r2)
  853af8:	e0bffe15 	stw	r2,-8(fp)

  /* Clear any error flags set at the device */
  IOWR_ALTERA_AVALON_UART_STATUS(base, 0);
  853afc:	e0bffd17 	ldw	r2,-12(fp)
  853b00:	10800204 	addi	r2,r2,8
  853b04:	0007883a 	mov	r3,zero
  853b08:	10c00035 	stwio	r3,0(r2)

  /* Dummy read to ensure IRQ is negated before ISR returns */
  IORD_ALTERA_AVALON_UART_STATUS(base);
  853b0c:	e0bffd17 	ldw	r2,-12(fp)
  853b10:	10800204 	addi	r2,r2,8
  853b14:	10800037 	ldwio	r2,0(r2)
  
  /* process a read irq */
  if (status & ALTERA_AVALON_UART_STATUS_RRDY_MSK)
  853b18:	e0bffe17 	ldw	r2,-8(fp)
  853b1c:	1080200c 	andi	r2,r2,128
  853b20:	10000326 	beq	r2,zero,853b30 <altera_avalon_uart_irq+0x6c>
  {
    altera_avalon_uart_rxirq(sp, status);
  853b24:	e17ffe17 	ldw	r5,-8(fp)
  853b28:	e13ffc17 	ldw	r4,-16(fp)
  853b2c:	0853b600 	call	853b60 <altera_avalon_uart_rxirq>
  }

  /* process a write irq */
  if (status & (ALTERA_AVALON_UART_STATUS_TRDY_MSK | 
  853b30:	e0bffe17 	ldw	r2,-8(fp)
  853b34:	1081100c 	andi	r2,r2,1088
  853b38:	10000326 	beq	r2,zero,853b48 <altera_avalon_uart_irq+0x84>
                  ALTERA_AVALON_UART_STATUS_DCTS_MSK))
  {
    altera_avalon_uart_txirq(sp, status);
  853b3c:	e17ffe17 	ldw	r5,-8(fp)
  853b40:	e13ffc17 	ldw	r4,-16(fp)
  853b44:	0853c980 	call	853c98 <altera_avalon_uart_txirq>
  }
  

}
  853b48:	0001883a 	nop
  853b4c:	e037883a 	mov	sp,fp
  853b50:	dfc00117 	ldw	ra,4(sp)
  853b54:	df000017 	ldw	fp,0(sp)
  853b58:	dec00204 	addi	sp,sp,8
  853b5c:	f800283a 	ret

00853b60 <altera_avalon_uart_rxirq>:
 * the receive circular buffer, and sets the apropriate flags to indicate 
 * that there is data ready to be processed.
 */
static void 
altera_avalon_uart_rxirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  853b60:	defff904 	addi	sp,sp,-28
  853b64:	dfc00615 	stw	ra,24(sp)
  853b68:	df000515 	stw	fp,20(sp)
  853b6c:	df000504 	addi	fp,sp,20
  853b70:	e13ffe15 	stw	r4,-8(fp)
  853b74:	e17fff15 	stw	r5,-4(fp)
  alt_u32 next;
  
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
  853b78:	e0bfff17 	ldw	r2,-4(fp)
  853b7c:	108000cc 	andi	r2,r2,3
  853b80:	10003f1e 	bne	r2,zero,853c80 <altera_avalon_uart_rxirq+0x120>
   * In a multi-threaded environment, set the read event flag to indicate
   * that there is data ready. This is only done if the circular buffer was
   * previously empty.
   */

  if (sp->rx_end == sp->rx_start)
  853b84:	e0bffe17 	ldw	r2,-8(fp)
  853b88:	10c00317 	ldw	r3,12(r2)
  853b8c:	e0bffe17 	ldw	r2,-8(fp)
  853b90:	10800217 	ldw	r2,8(r2)
  853b94:	1880121e 	bne	r3,r2,853be0 <altera_avalon_uart_rxirq+0x80>
  {
    ALT_FLAG_POST (sp->events, ALT_UART_READ_RDY, OS_FLAG_SET);
  853b98:	e0bffe17 	ldw	r2,-8(fp)
  853b9c:	10800717 	ldw	r2,28(r2)
  853ba0:	e0bffc15 	stw	r2,-16(fp)
  853ba4:	00800044 	movi	r2,1
  853ba8:	e0bffd0d 	sth	r2,-12(fp)
  853bac:	00800044 	movi	r2,1
  853bb0:	e0bffd85 	stb	r2,-10(fp)
                   OS_FLAGS     flags, 
                   INT8U        opt)
{
  INT8U err;

  if (OSRunning)
  853bb4:	d0a0a343 	ldbu	r2,-32115(gp)
  853bb8:	10803fcc 	andi	r2,r2,255
  853bbc:	10000826 	beq	r2,zero,853be0 <altera_avalon_uart_rxirq+0x80>
  {
    OSFlagPost (group, flags, opt, &err);
  853bc0:	e0bffd0b 	ldhu	r2,-12(fp)
  853bc4:	e0fffd83 	ldbu	r3,-10(fp)
  853bc8:	e13ffdc4 	addi	r4,fp,-9
  853bcc:	200f883a 	mov	r7,r4
  853bd0:	180d883a 	mov	r6,r3
  853bd4:	100b883a 	mov	r5,r2
  853bd8:	e13ffc17 	ldw	r4,-16(fp)
  853bdc:	084d6a00 	call	84d6a0 <OSFlagPost>
  }

  /* Determine which slot to use next in the circular buffer */

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  853be0:	e0bffe17 	ldw	r2,-8(fp)
  853be4:	10800317 	ldw	r2,12(r2)
  853be8:	10800044 	addi	r2,r2,1
  853bec:	10800fcc 	andi	r2,r2,63
  853bf0:	e0bffb15 	stw	r2,-20(fp)

  /* Transfer data from the device to the circular buffer */

  sp->rx_buf[sp->rx_end] = IORD_ALTERA_AVALON_UART_RXDATA(sp->base);
  853bf4:	e0bffe17 	ldw	r2,-8(fp)
  853bf8:	10800317 	ldw	r2,12(r2)
  853bfc:	e0fffe17 	ldw	r3,-8(fp)
  853c00:	18c00017 	ldw	r3,0(r3)
  853c04:	18c00037 	ldwio	r3,0(r3)
  853c08:	1809883a 	mov	r4,r3
  853c0c:	e0fffe17 	ldw	r3,-8(fp)
  853c10:	1885883a 	add	r2,r3,r2
  853c14:	10800a04 	addi	r2,r2,40
  853c18:	11000005 	stb	r4,0(r2)

  sp->rx_end = next;
  853c1c:	e0bffe17 	ldw	r2,-8(fp)
  853c20:	e0fffb17 	ldw	r3,-20(fp)
  853c24:	10c00315 	stw	r3,12(r2)

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  853c28:	e0bffe17 	ldw	r2,-8(fp)
  853c2c:	10800317 	ldw	r2,12(r2)
  853c30:	10800044 	addi	r2,r2,1
  853c34:	10800fcc 	andi	r2,r2,63
  853c38:	e0bffb15 	stw	r2,-20(fp)
  /*
   * If the cicular buffer was full, disable interrupts. Interrupts will be
   * re-enabled when data is removed from the buffer.
   */

  if (next == sp->rx_start)
  853c3c:	e0bffe17 	ldw	r2,-8(fp)
  853c40:	10c00217 	ldw	r3,8(r2)
  853c44:	e0bffb17 	ldw	r2,-20(fp)
  853c48:	18800e1e 	bne	r3,r2,853c84 <altera_avalon_uart_rxirq+0x124>
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  853c4c:	e0bffe17 	ldw	r2,-8(fp)
  853c50:	10c00117 	ldw	r3,4(r2)
  853c54:	00bfdfc4 	movi	r2,-129
  853c58:	1886703a 	and	r3,r3,r2
  853c5c:	e0bffe17 	ldw	r2,-8(fp)
  853c60:	10c00115 	stw	r3,4(r2)
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
  853c64:	e0bffe17 	ldw	r2,-8(fp)
  853c68:	10800017 	ldw	r2,0(r2)
  853c6c:	10800304 	addi	r2,r2,12
  853c70:	e0fffe17 	ldw	r3,-8(fp)
  853c74:	18c00117 	ldw	r3,4(r3)
  853c78:	10c00035 	stwio	r3,0(r2)
  853c7c:	00000106 	br	853c84 <altera_avalon_uart_rxirq+0x124>
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
                  ALTERA_AVALON_UART_STATUS_FE_MSK))
  {
    return;
  853c80:	0001883a 	nop
  if (next == sp->rx_start)
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
  }   
}
  853c84:	e037883a 	mov	sp,fp
  853c88:	dfc00117 	ldw	ra,4(sp)
  853c8c:	df000017 	ldw	fp,0(sp)
  853c90:	dec00204 	addi	sp,sp,8
  853c94:	f800283a 	ret

00853c98 <altera_avalon_uart_txirq>:
 * buffer to the device, and sets the apropriate flags to indicate that 
 * there is data ready to be processed.
 */
static void 
altera_avalon_uart_txirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  853c98:	defffa04 	addi	sp,sp,-24
  853c9c:	dfc00515 	stw	ra,20(sp)
  853ca0:	df000415 	stw	fp,16(sp)
  853ca4:	df000404 	addi	fp,sp,16
  853ca8:	e13ffe15 	stw	r4,-8(fp)
  853cac:	e17fff15 	stw	r5,-4(fp)
  /* Transfer data if there is some ready to be transfered */

  if (sp->tx_start != sp->tx_end)
  853cb0:	e0bffe17 	ldw	r2,-8(fp)
  853cb4:	10c00417 	ldw	r3,16(r2)
  853cb8:	e0bffe17 	ldw	r2,-8(fp)
  853cbc:	10800517 	ldw	r2,20(r2)
  853cc0:	18804726 	beq	r3,r2,853de0 <altera_avalon_uart_txirq+0x148>
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  853cc4:	e0bffe17 	ldw	r2,-8(fp)
  853cc8:	10800617 	ldw	r2,24(r2)
  853ccc:	1080008c 	andi	r2,r2,2
  853cd0:	10000326 	beq	r2,zero,853ce0 <altera_avalon_uart_txirq+0x48>
      (status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  853cd4:	e0bfff17 	ldw	r2,-4(fp)
  853cd8:	1082000c 	andi	r2,r2,2048
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  853cdc:	10003226 	beq	r2,zero,853da8 <altera_avalon_uart_txirq+0x110>
       * In a multi-threaded environment, set the write event flag to indicate
       * that there is space in the circular buffer. This is only done if the
       * buffer was previously empty.
       */

      if (sp->tx_start == ((sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK))
  853ce0:	e0bffe17 	ldw	r2,-8(fp)
  853ce4:	10c00417 	ldw	r3,16(r2)
  853ce8:	e0bffe17 	ldw	r2,-8(fp)
  853cec:	10800517 	ldw	r2,20(r2)
  853cf0:	10800044 	addi	r2,r2,1
  853cf4:	10800fcc 	andi	r2,r2,63
  853cf8:	1880121e 	bne	r3,r2,853d44 <altera_avalon_uart_txirq+0xac>
      { 
        ALT_FLAG_POST (sp->events, 
  853cfc:	e0bffe17 	ldw	r2,-8(fp)
  853d00:	10800717 	ldw	r2,28(r2)
  853d04:	e0bffc15 	stw	r2,-16(fp)
  853d08:	00800084 	movi	r2,2
  853d0c:	e0bffd0d 	sth	r2,-12(fp)
  853d10:	00800044 	movi	r2,1
  853d14:	e0bffd85 	stb	r2,-10(fp)
                   OS_FLAGS     flags, 
                   INT8U        opt)
{
  INT8U err;

  if (OSRunning)
  853d18:	d0a0a343 	ldbu	r2,-32115(gp)
  853d1c:	10803fcc 	andi	r2,r2,255
  853d20:	10000826 	beq	r2,zero,853d44 <altera_avalon_uart_txirq+0xac>
  {
    OSFlagPost (group, flags, opt, &err);
  853d24:	e0bffd0b 	ldhu	r2,-12(fp)
  853d28:	e0fffd83 	ldbu	r3,-10(fp)
  853d2c:	e13ffdc4 	addi	r4,fp,-9
  853d30:	200f883a 	mov	r7,r4
  853d34:	180d883a 	mov	r6,r3
  853d38:	100b883a 	mov	r5,r2
  853d3c:	e13ffc17 	ldw	r4,-16(fp)
  853d40:	084d6a00 	call	84d6a0 <OSFlagPost>
                       OS_FLAG_SET);
      }

      /* Write the data to the device */

      IOWR_ALTERA_AVALON_UART_TXDATA(sp->base, sp->tx_buf[sp->tx_start]);
  853d44:	e0bffe17 	ldw	r2,-8(fp)
  853d48:	10800017 	ldw	r2,0(r2)
  853d4c:	10800104 	addi	r2,r2,4
  853d50:	e0fffe17 	ldw	r3,-8(fp)
  853d54:	18c00417 	ldw	r3,16(r3)
  853d58:	e13ffe17 	ldw	r4,-8(fp)
  853d5c:	20c7883a 	add	r3,r4,r3
  853d60:	18c01a04 	addi	r3,r3,104
  853d64:	18c00003 	ldbu	r3,0(r3)
  853d68:	18c03fcc 	andi	r3,r3,255
  853d6c:	10c00035 	stwio	r3,0(r2)

      sp->tx_start = (++sp->tx_start) & ALT_AVALON_UART_BUF_MSK;
  853d70:	e0bffe17 	ldw	r2,-8(fp)
  853d74:	10800417 	ldw	r2,16(r2)
  853d78:	10800044 	addi	r2,r2,1
  853d7c:	e0fffe17 	ldw	r3,-8(fp)
  853d80:	18800415 	stw	r2,16(r3)
  853d84:	10c00fcc 	andi	r3,r2,63
  853d88:	e0bffe17 	ldw	r2,-8(fp)
  853d8c:	10c00415 	stw	r3,16(r2)
      /*
       * In case the tranmit interrupt had previously been disabled by 
       * detecting a low value on CTS, it is reenabled here.
       */ 

      sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  853d90:	e0bffe17 	ldw	r2,-8(fp)
  853d94:	10800117 	ldw	r2,4(r2)
  853d98:	10c01014 	ori	r3,r2,64
  853d9c:	e0bffe17 	ldw	r2,-8(fp)
  853da0:	10c00115 	stw	r3,4(r2)
  853da4:	00000e06 	br	853de0 <altera_avalon_uart_txirq+0x148>
       * the last write to the status register. To avoid this resulting in
       * deadlock, it's necessary to re-check the status register here
       * before throttling.
       */
 
      status = IORD_ALTERA_AVALON_UART_STATUS(sp->base); 
  853da8:	e0bffe17 	ldw	r2,-8(fp)
  853dac:	10800017 	ldw	r2,0(r2)
  853db0:	10800204 	addi	r2,r2,8
  853db4:	10800037 	ldwio	r2,0(r2)
  853db8:	e0bfff15 	stw	r2,-4(fp)

      if (!(status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  853dbc:	e0bfff17 	ldw	r2,-4(fp)
  853dc0:	1082000c 	andi	r2,r2,2048
  853dc4:	1000061e 	bne	r2,zero,853de0 <altera_avalon_uart_txirq+0x148>
      {
        sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  853dc8:	e0bffe17 	ldw	r2,-8(fp)
  853dcc:	10c00117 	ldw	r3,4(r2)
  853dd0:	00bfefc4 	movi	r2,-65
  853dd4:	1886703a 	and	r3,r3,r2
  853dd8:	e0bffe17 	ldw	r2,-8(fp)
  853ddc:	10c00115 	stw	r3,4(r2)
  /*
   * If the circular buffer is empty, disable the interrupt. This will be
   * re-enabled when new data is placed in the buffer.
   */

  if (sp->tx_start == sp->tx_end)
  853de0:	e0bffe17 	ldw	r2,-8(fp)
  853de4:	10c00417 	ldw	r3,16(r2)
  853de8:	e0bffe17 	ldw	r2,-8(fp)
  853dec:	10800517 	ldw	r2,20(r2)
  853df0:	1880061e 	bne	r3,r2,853e0c <altera_avalon_uart_txirq+0x174>
  {
    sp->ctrl &= ~(ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  853df4:	e0bffe17 	ldw	r2,-8(fp)
  853df8:	10c00117 	ldw	r3,4(r2)
  853dfc:	00beefc4 	movi	r2,-1089
  853e00:	1886703a 	and	r3,r3,r2
  853e04:	e0bffe17 	ldw	r2,-8(fp)
  853e08:	10c00115 	stw	r3,4(r2)
                    ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
  }

  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  853e0c:	e0bffe17 	ldw	r2,-8(fp)
  853e10:	10800017 	ldw	r2,0(r2)
  853e14:	10800304 	addi	r2,r2,12
  853e18:	e0fffe17 	ldw	r3,-8(fp)
  853e1c:	18c00117 	ldw	r3,4(r3)
  853e20:	10c00035 	stwio	r3,0(r2)
}
  853e24:	0001883a 	nop
  853e28:	e037883a 	mov	sp,fp
  853e2c:	dfc00117 	ldw	ra,4(sp)
  853e30:	df000017 	ldw	fp,0(sp)
  853e34:	dec00204 	addi	sp,sp,8
  853e38:	f800283a 	ret

00853e3c <altera_avalon_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  853e3c:	defffd04 	addi	sp,sp,-12
  853e40:	df000215 	stw	fp,8(sp)
  853e44:	df000204 	addi	fp,sp,8
  853e48:	e13ffe15 	stw	r4,-8(fp)
  853e4c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  853e50:	00000506 	br	853e68 <altera_avalon_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  853e54:	e0bfff17 	ldw	r2,-4(fp)
  853e58:	1090000c 	andi	r2,r2,16384
  853e5c:	10000226 	beq	r2,zero,853e68 <altera_avalon_uart_close+0x2c>
      return -EWOULDBLOCK; 
  853e60:	00bffd44 	movi	r2,-11
  853e64:	00000606 	br	853e80 <altera_avalon_uart_close+0x44>
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  853e68:	e0bffe17 	ldw	r2,-8(fp)
  853e6c:	10c00417 	ldw	r3,16(r2)
  853e70:	e0bffe17 	ldw	r2,-8(fp)
  853e74:	10800517 	ldw	r2,20(r2)
  853e78:	18bff61e 	bne	r3,r2,853e54 <__alt_mem_epcs_flash_controller_0+0xff84ae54>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  853e7c:	0005883a 	mov	r2,zero
}
  853e80:	e037883a 	mov	sp,fp
  853e84:	df000017 	ldw	fp,0(sp)
  853e88:	dec00104 	addi	sp,sp,4
  853e8c:	f800283a 	ret

00853e90 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  853e90:	defffe04 	addi	sp,sp,-8
  853e94:	dfc00115 	stw	ra,4(sp)
  853e98:	df000015 	stw	fp,0(sp)
  853e9c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  853ea0:	d0a04917 	ldw	r2,-32476(gp)
  853ea4:	10000326 	beq	r2,zero,853eb4 <alt_get_errno+0x24>
  853ea8:	d0a04917 	ldw	r2,-32476(gp)
  853eac:	103ee83a 	callr	r2
  853eb0:	00000106 	br	853eb8 <alt_get_errno+0x28>
  853eb4:	d0a09204 	addi	r2,gp,-32184
}
  853eb8:	e037883a 	mov	sp,fp
  853ebc:	dfc00117 	ldw	ra,4(sp)
  853ec0:	df000017 	ldw	fp,0(sp)
  853ec4:	dec00204 	addi	sp,sp,8
  853ec8:	f800283a 	ret

00853ecc <altera_avalon_uart_read>:
 */

int 
altera_avalon_uart_read(altera_avalon_uart_state* sp, char* ptr, int len,
  int flags)
{
  853ecc:	deffec04 	addi	sp,sp,-80
  853ed0:	dfc01315 	stw	ra,76(sp)
  853ed4:	df001215 	stw	fp,72(sp)
  853ed8:	df001204 	addi	fp,sp,72
  853edc:	e13ffc15 	stw	r4,-16(fp)
  853ee0:	e17ffd15 	stw	r5,-12(fp)
  853ee4:	e1bffe15 	stw	r6,-8(fp)
  853ee8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             block;
  alt_u8          read_would_block = 0;
  853eec:	e03fef05 	stb	zero,-68(fp)
  int             count = 0;
  853ef0:	e03ff015 	stw	zero,-64(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  block = !(flags & O_NONBLOCK);
  853ef4:	e0bfff17 	ldw	r2,-4(fp)
  853ef8:	1090000c 	andi	r2,r2,16384
  853efc:	1005003a 	cmpeq	r2,r2,zero
  853f00:	10803fcc 	andi	r2,r2,255
  853f04:	e0bff115 	stw	r2,-60(fp)
  /*
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */

  ALT_SEM_PEND (sp->read_lock, 0);
  853f08:	e0bffc17 	ldw	r2,-16(fp)
  853f0c:	10800817 	ldw	r2,32(r2)
  853f10:	e0bff815 	stw	r2,-32(fp)
  853f14:	e03ff90d 	sth	zero,-28(fp)

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_pend (OS_EVENT* sem, 
                  INT16U timeout)
{
  INT8U err;
  OSSemPend (sem, timeout, &err);
  853f18:	e0bff90b 	ldhu	r2,-28(fp)
  853f1c:	e0fffb44 	addi	r3,fp,-19
  853f20:	180d883a 	mov	r6,r3
  853f24:	100b883a 	mov	r5,r2
  853f28:	e13ff817 	ldw	r4,-32(fp)
  853f2c:	084fafc0 	call	84fafc <OSSemPend>
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  853f30:	00001306 	br	853f80 <altera_avalon_uart_read+0xb4>
    {
      count++;
  853f34:	e0bff017 	ldw	r2,-64(fp)
  853f38:	10800044 	addi	r2,r2,1
  853f3c:	e0bff015 	stw	r2,-64(fp)
      *ptr++ = sp->rx_buf[sp->rx_start];
  853f40:	e0bffd17 	ldw	r2,-12(fp)
  853f44:	10c00044 	addi	r3,r2,1
  853f48:	e0fffd15 	stw	r3,-12(fp)
  853f4c:	e0fffc17 	ldw	r3,-16(fp)
  853f50:	18c00217 	ldw	r3,8(r3)
  853f54:	e13ffc17 	ldw	r4,-16(fp)
  853f58:	20c7883a 	add	r3,r4,r3
  853f5c:	18c00a04 	addi	r3,r3,40
  853f60:	18c00003 	ldbu	r3,0(r3)
  853f64:	10c00005 	stb	r3,0(r2)
      
      sp->rx_start = (sp->rx_start+1) & ALT_AVALON_UART_BUF_MSK;
  853f68:	e0bffc17 	ldw	r2,-16(fp)
  853f6c:	10800217 	ldw	r2,8(r2)
  853f70:	10800044 	addi	r2,r2,1
  853f74:	10c00fcc 	andi	r3,r2,63
  853f78:	e0bffc17 	ldw	r2,-16(fp)
  853f7c:	10c00215 	stw	r3,8(r2)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  853f80:	e0fff017 	ldw	r3,-64(fp)
  853f84:	e0bffe17 	ldw	r2,-8(fp)
  853f88:	1880050e 	bge	r3,r2,853fa0 <altera_avalon_uart_read+0xd4>
  853f8c:	e0bffc17 	ldw	r2,-16(fp)
  853f90:	10c00217 	ldw	r3,8(r2)
  853f94:	e0bffc17 	ldw	r2,-16(fp)
  853f98:	10800317 	ldw	r2,12(r2)
  853f9c:	18bfe51e 	bne	r3,r2,853f34 <__alt_mem_epcs_flash_controller_0+0xff84af34>
    /*
     * If no data has been transferred, the circular buffer is empty, and
     * this is not a non-blocking access, block waiting for data to arrive.
     */

    if (!count && (sp->rx_start == sp->rx_end))
  853fa0:	e0bff017 	ldw	r2,-64(fp)
  853fa4:	10003a1e 	bne	r2,zero,854090 <altera_avalon_uart_read+0x1c4>
  853fa8:	e0bffc17 	ldw	r2,-16(fp)
  853fac:	10c00217 	ldw	r3,8(r2)
  853fb0:	e0bffc17 	ldw	r2,-16(fp)
  853fb4:	10800317 	ldw	r2,12(r2)
  853fb8:	1880351e 	bne	r3,r2,854090 <altera_avalon_uart_read+0x1c4>
    {
      if (!block)
  853fbc:	e0bff117 	ldw	r2,-60(fp)
  853fc0:	1000071e 	bne	r2,zero,853fe0 <altera_avalon_uart_read+0x114>
      {
        /* Set errno to indicate the reason we're not returning any data */

        ALT_ERRNO = EWOULDBLOCK;
  853fc4:	0853e900 	call	853e90 <alt_get_errno>
  853fc8:	1007883a 	mov	r3,r2
  853fcc:	008002c4 	movi	r2,11
  853fd0:	18800015 	stw	r2,0(r3)
        read_would_block = 1;
  853fd4:	00800044 	movi	r2,1
  853fd8:	e0bfef05 	stb	r2,-68(fp)
        break;
  853fdc:	00003006 	br	8540a0 <altera_avalon_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  853fe0:	0005303a 	rdctl	r2,status
  853fe4:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  853fe8:	e0fff517 	ldw	r3,-44(fp)
  853fec:	00bfff84 	movi	r2,-2
  853ff0:	1884703a 	and	r2,r3,r2
  853ff4:	1001703a 	wrctl	status,r2
  
  return context;
  853ff8:	e0bff517 	ldw	r2,-44(fp)
      {
       /* Block waiting for some data to arrive */

       /* First, ensure read interrupts are enabled to avoid deadlock */

       context = alt_irq_disable_all ();
  853ffc:	e0bff415 	stw	r2,-48(fp)
       sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  854000:	e0bffc17 	ldw	r2,-16(fp)
  854004:	10800117 	ldw	r2,4(r2)
  854008:	10c02014 	ori	r3,r2,128
  85400c:	e0bffc17 	ldw	r2,-16(fp)
  854010:	10c00115 	stw	r3,4(r2)
       IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  854014:	e0bffc17 	ldw	r2,-16(fp)
  854018:	10800017 	ldw	r2,0(r2)
  85401c:	10800304 	addi	r2,r2,12
  854020:	e0fffc17 	ldw	r3,-16(fp)
  854024:	18c00117 	ldw	r3,4(r3)
  854028:	10c00035 	stwio	r3,0(r2)
  85402c:	e0bff417 	ldw	r2,-48(fp)
  854030:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  854034:	e0bff617 	ldw	r2,-40(fp)
  854038:	1001703a 	wrctl	status,r2
        * flag set in the interrupt service routine. This avoids wasting CPU
        * cycles waiting in this thread, when we could be doing something more 
        * profitable elsewhere.
        */

       ALT_FLAG_PEND (sp->events, 
  85403c:	e0bffc17 	ldw	r2,-16(fp)
  854040:	10800717 	ldw	r2,28(r2)
  854044:	e0bff215 	stw	r2,-56(fp)
  854048:	00800044 	movi	r2,1
  85404c:	e0bff98d 	sth	r2,-26(fp)
  854050:	00bfe0c4 	movi	r2,-125
  854054:	e0bffa05 	stb	r2,-24(fp)
  854058:	e03ffa8d 	sth	zero,-22(fp)
                   OS_FLAGS flags, 
                   INT8U wait_type, 
                   INT16U timeout)
{
  INT8U err;
  if (OSRunning)
  85405c:	d0a0a343 	ldbu	r2,-32115(gp)
  854060:	10803fcc 	andi	r2,r2,255
  854064:	10000a26 	beq	r2,zero,854090 <altera_avalon_uart_read+0x1c4>
  {
    OSFlagPend (group, flags, wait_type, timeout, &err);
  854068:	e0fff98b 	ldhu	r3,-26(fp)
  85406c:	e13ffa03 	ldbu	r4,-24(fp)
  854070:	e17ffa8b 	ldhu	r5,-22(fp)
  854074:	e0bffb04 	addi	r2,fp,-20
  854078:	d8800015 	stw	r2,0(sp)
  85407c:	280f883a 	mov	r7,r5
  854080:	200d883a 	mov	r6,r4
  854084:	180b883a 	mov	r5,r3
  854088:	e13ff217 	ldw	r4,-56(fp)
  85408c:	084d0880 	call	84d088 <OSFlagPend>
                      OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                      0);
      }
    }
  }
  while (!count && len);
  854090:	e0bff017 	ldw	r2,-64(fp)
  854094:	1000021e 	bne	r2,zero,8540a0 <altera_avalon_uart_read+0x1d4>
  854098:	e0bffe17 	ldw	r2,-8(fp)
  85409c:	103fb81e 	bne	r2,zero,853f80 <__alt_mem_epcs_flash_controller_0+0xff84af80>
  /*
   * Now that access to the circular buffer is complete, release the read
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);
  8540a0:	e0bffc17 	ldw	r2,-16(fp)
  8540a4:	10800817 	ldw	r2,32(r2)
  8540a8:	1009883a 	mov	r4,r2
  8540ac:	084fe740 	call	84fe74 <OSSemPost>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8540b0:	0005303a 	rdctl	r2,status
  8540b4:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8540b8:	e0fff717 	ldw	r3,-36(fp)
  8540bc:	00bfff84 	movi	r2,-2
  8540c0:	1884703a 	and	r2,r3,r2
  8540c4:	1001703a 	wrctl	status,r2
  
  return context;
  8540c8:	e0bff717 	ldw	r2,-36(fp)
  /*
   * Ensure that interrupts are enabled, so that the circular buffer can
   * re-fill.
   */

  context = alt_irq_disable_all ();
  8540cc:	e0bff415 	stw	r2,-48(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  8540d0:	e0bffc17 	ldw	r2,-16(fp)
  8540d4:	10800117 	ldw	r2,4(r2)
  8540d8:	10c02014 	ori	r3,r2,128
  8540dc:	e0bffc17 	ldw	r2,-16(fp)
  8540e0:	10c00115 	stw	r3,4(r2)
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  8540e4:	e0bffc17 	ldw	r2,-16(fp)
  8540e8:	10800017 	ldw	r2,0(r2)
  8540ec:	10800304 	addi	r2,r2,12
  8540f0:	e0fffc17 	ldw	r3,-16(fp)
  8540f4:	18c00117 	ldw	r3,4(r3)
  8540f8:	10c00035 	stwio	r3,0(r2)
  8540fc:	e0bff417 	ldw	r2,-48(fp)
  854100:	e0bff315 	stw	r2,-52(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  854104:	e0bff317 	ldw	r2,-52(fp)
  854108:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* Return the number of bytes read */
  if(read_would_block) {
  85410c:	e0bfef03 	ldbu	r2,-68(fp)
  854110:	10000226 	beq	r2,zero,85411c <altera_avalon_uart_read+0x250>
    return -EWOULDBLOCK;
  854114:	00bffd44 	movi	r2,-11
  854118:	00000106 	br	854120 <altera_avalon_uart_read+0x254>
  }
  else {
    return count;
  85411c:	e0bff017 	ldw	r2,-64(fp)
  }
}
  854120:	e037883a 	mov	sp,fp
  854124:	dfc00117 	ldw	ra,4(sp)
  854128:	df000017 	ldw	fp,0(sp)
  85412c:	dec00204 	addi	sp,sp,8
  854130:	f800283a 	ret

00854134 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  854134:	defffe04 	addi	sp,sp,-8
  854138:	dfc00115 	stw	ra,4(sp)
  85413c:	df000015 	stw	fp,0(sp)
  854140:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  854144:	d0a04917 	ldw	r2,-32476(gp)
  854148:	10000326 	beq	r2,zero,854158 <alt_get_errno+0x24>
  85414c:	d0a04917 	ldw	r2,-32476(gp)
  854150:	103ee83a 	callr	r2
  854154:	00000106 	br	85415c <alt_get_errno+0x28>
  854158:	d0a09204 	addi	r2,gp,-32184
}
  85415c:	e037883a 	mov	sp,fp
  854160:	dfc00117 	ldw	ra,4(sp)
  854164:	df000017 	ldw	fp,0(sp)
  854168:	dec00204 	addi	sp,sp,8
  85416c:	f800283a 	ret

00854170 <altera_avalon_uart_write>:
 */

int
altera_avalon_uart_write(altera_avalon_uart_state* sp, const char* ptr, int len,
  int flags)
{
  854170:	deffec04 	addi	sp,sp,-80
  854174:	dfc01315 	stw	ra,76(sp)
  854178:	df001215 	stw	fp,72(sp)
  85417c:	df001204 	addi	fp,sp,72
  854180:	e13ffc15 	stw	r4,-16(fp)
  854184:	e17ffd15 	stw	r5,-12(fp)
  854188:	e1bffe15 	stw	r6,-8(fp)
  85418c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             no_block;
  alt_u32         next;
  int             count = len;
  854190:	e0bffe17 	ldw	r2,-8(fp)
  854194:	e0bfef15 	stw	r2,-68(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  no_block = (flags & O_NONBLOCK);
  854198:	e0bfff17 	ldw	r2,-4(fp)
  85419c:	1090000c 	andi	r2,r2,16384
  8541a0:	e0bff015 	stw	r2,-64(fp)
  /*
   * When running in a multi threaded environment, obtain the "write_lock"
   * semaphore. This ensures that writing to the device is thread-safe.
   */

  ALT_SEM_PEND (sp->write_lock, 0);
  8541a4:	e0bffc17 	ldw	r2,-16(fp)
  8541a8:	10800917 	ldw	r2,36(r2)
  8541ac:	e0bff815 	stw	r2,-32(fp)
  8541b0:	e03ff90d 	sth	zero,-28(fp)
  8541b4:	e0bff90b 	ldhu	r2,-28(fp)
  8541b8:	e0fffb44 	addi	r3,fp,-19
  8541bc:	180d883a 	mov	r6,r3
  8541c0:	100b883a 	mov	r5,r2
  8541c4:	e13ff817 	ldw	r4,-32(fp)
  8541c8:	084fafc0 	call	84fafc <OSSemPend>
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  8541cc:	00005106 	br	854314 <altera_avalon_uart_write+0x1a4>
  {
    /* Determine the next slot in the buffer to access */

    next = (sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  8541d0:	e0bffc17 	ldw	r2,-16(fp)
  8541d4:	10800517 	ldw	r2,20(r2)
  8541d8:	10800044 	addi	r2,r2,1
  8541dc:	10800fcc 	andi	r2,r2,63
  8541e0:	e0bff215 	stw	r2,-56(fp)

    /* block waiting for space if necessary */

    if (next == sp->tx_start)
  8541e4:	e0bffc17 	ldw	r2,-16(fp)
  8541e8:	10c00417 	ldw	r3,16(r2)
  8541ec:	e0bff217 	ldw	r2,-56(fp)
  8541f0:	1880371e 	bne	r3,r2,8542d0 <altera_avalon_uart_write+0x160>
    {
      if (no_block)
  8541f4:	e0bff017 	ldw	r2,-64(fp)
  8541f8:	10000526 	beq	r2,zero,854210 <altera_avalon_uart_write+0xa0>
      {
        /* Set errno to indicate why this function returned early */
 
        ALT_ERRNO = EWOULDBLOCK;
  8541fc:	08541340 	call	854134 <alt_get_errno>
  854200:	1007883a 	mov	r3,r2
  854204:	008002c4 	movi	r2,11
  854208:	18800015 	stw	r2,0(r3)
        break;
  85420c:	00004306 	br	85431c <altera_avalon_uart_write+0x1ac>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  854210:	0005303a 	rdctl	r2,status
  854214:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  854218:	e0fff517 	ldw	r3,-44(fp)
  85421c:	00bfff84 	movi	r2,-2
  854220:	1884703a 	and	r2,r3,r2
  854224:	1001703a 	wrctl	status,r2
  
  return context;
  854228:	e0bff517 	ldw	r2,-44(fp)
      {
        /* Block waiting for space in the circular buffer */

        /* First, ensure transmit interrupts are enabled to avoid deadlock */

        context = alt_irq_disable_all ();
  85422c:	e0bff415 	stw	r2,-48(fp)
        sp->ctrl |= (ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  854230:	e0bffc17 	ldw	r2,-16(fp)
  854234:	10800117 	ldw	r2,4(r2)
  854238:	10c11014 	ori	r3,r2,1088
  85423c:	e0bffc17 	ldw	r2,-16(fp)
  854240:	10c00115 	stw	r3,4(r2)
                        ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
        IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  854244:	e0bffc17 	ldw	r2,-16(fp)
  854248:	10800017 	ldw	r2,0(r2)
  85424c:	10800304 	addi	r2,r2,12
  854250:	e0fffc17 	ldw	r3,-16(fp)
  854254:	18c00117 	ldw	r3,4(r3)
  854258:	10c00035 	stwio	r3,0(r2)
  85425c:	e0bff417 	ldw	r2,-48(fp)
  854260:	e0bff115 	stw	r2,-60(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  854264:	e0bff117 	ldw	r2,-60(fp)
  854268:	1001703a 	wrctl	status,r2
           * flag set in the interrupt service routine. This avoids wasting CPU
           * cycles waiting in this thread, when we could be doing something
           * more profitable elsewhere.
           */

          ALT_FLAG_PEND (sp->events, 
  85426c:	e0bffc17 	ldw	r2,-16(fp)
  854270:	10800717 	ldw	r2,28(r2)
  854274:	e0bff315 	stw	r2,-52(fp)
  854278:	00800084 	movi	r2,2
  85427c:	e0bff98d 	sth	r2,-26(fp)
  854280:	00bfe0c4 	movi	r2,-125
  854284:	e0bffa05 	stb	r2,-24(fp)
  854288:	e03ffa8d 	sth	zero,-22(fp)
                   OS_FLAGS flags, 
                   INT8U wait_type, 
                   INT16U timeout)
{
  INT8U err;
  if (OSRunning)
  85428c:	d0a0a343 	ldbu	r2,-32115(gp)
  854290:	10803fcc 	andi	r2,r2,255
  854294:	10000a26 	beq	r2,zero,8542c0 <altera_avalon_uart_write+0x150>
  {
    OSFlagPend (group, flags, wait_type, timeout, &err);
  854298:	e0fff98b 	ldhu	r3,-26(fp)
  85429c:	e13ffa03 	ldbu	r4,-24(fp)
  8542a0:	e17ffa8b 	ldhu	r5,-22(fp)
  8542a4:	e0bffb04 	addi	r2,fp,-20
  8542a8:	d8800015 	stw	r2,0(sp)
  8542ac:	280f883a 	mov	r7,r5
  8542b0:	200d883a 	mov	r6,r4
  8542b4:	180b883a 	mov	r5,r3
  8542b8:	e13ff317 	ldw	r4,-52(fp)
  8542bc:	084d0880 	call	84d088 <OSFlagPend>
                         ALT_UART_WRITE_RDY,
                         OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                         0);
        }
        while ((next == sp->tx_start));
  8542c0:	e0bffc17 	ldw	r2,-16(fp)
  8542c4:	10c00417 	ldw	r3,16(r2)
  8542c8:	e0bff217 	ldw	r2,-56(fp)
  8542cc:	18bfe726 	beq	r3,r2,85426c <__alt_mem_epcs_flash_controller_0+0xff84b26c>
      }
    }

    count--;
  8542d0:	e0bfef17 	ldw	r2,-68(fp)
  8542d4:	10bfffc4 	addi	r2,r2,-1
  8542d8:	e0bfef15 	stw	r2,-68(fp)

    /* Add the next character to the transmit buffer */

    sp->tx_buf[sp->tx_end] = *ptr++;
  8542dc:	e0bffc17 	ldw	r2,-16(fp)
  8542e0:	10c00517 	ldw	r3,20(r2)
  8542e4:	e0bffd17 	ldw	r2,-12(fp)
  8542e8:	11000044 	addi	r4,r2,1
  8542ec:	e13ffd15 	stw	r4,-12(fp)
  8542f0:	10800003 	ldbu	r2,0(r2)
  8542f4:	1009883a 	mov	r4,r2
  8542f8:	e0bffc17 	ldw	r2,-16(fp)
  8542fc:	10c5883a 	add	r2,r2,r3
  854300:	10801a04 	addi	r2,r2,104
  854304:	11000005 	stb	r4,0(r2)
    sp->tx_end = next;
  854308:	e0bffc17 	ldw	r2,-16(fp)
  85430c:	e0fff217 	ldw	r3,-56(fp)
  854310:	10c00515 	stw	r3,20(r2)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  854314:	e0bfef17 	ldw	r2,-68(fp)
  854318:	103fad1e 	bne	r2,zero,8541d0 <__alt_mem_epcs_flash_controller_0+0xff84b1d0>
  /*
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->write_lock);
  85431c:	e0bffc17 	ldw	r2,-16(fp)
  854320:	10800917 	ldw	r2,36(r2)
  854324:	1009883a 	mov	r4,r2
  854328:	084fe740 	call	84fe74 <OSSemPost>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  85432c:	0005303a 	rdctl	r2,status
  854330:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  854334:	e0fff717 	ldw	r3,-36(fp)
  854338:	00bfff84 	movi	r2,-2
  85433c:	1884703a 	and	r2,r3,r2
  854340:	1001703a 	wrctl	status,r2
  
  return context;
  854344:	e0bff717 	ldw	r2,-36(fp)
  /* 
   * Ensure that interrupts are enabled, so that the circular buffer can 
   * drain.
   */

  context = alt_irq_disable_all ();
  854348:	e0bff415 	stw	r2,-48(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  85434c:	e0bffc17 	ldw	r2,-16(fp)
  854350:	10800117 	ldw	r2,4(r2)
  854354:	10c11014 	ori	r3,r2,1088
  854358:	e0bffc17 	ldw	r2,-16(fp)
  85435c:	10c00115 	stw	r3,4(r2)
                 ALTERA_AVALON_UART_CONTROL_DCTS_MSK;
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  854360:	e0bffc17 	ldw	r2,-16(fp)
  854364:	10800017 	ldw	r2,0(r2)
  854368:	10800304 	addi	r2,r2,12
  85436c:	e0fffc17 	ldw	r3,-16(fp)
  854370:	18c00117 	ldw	r3,4(r3)
  854374:	10c00035 	stwio	r3,0(r2)
  854378:	e0bff417 	ldw	r2,-48(fp)
  85437c:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  854380:	e0bff617 	ldw	r2,-40(fp)
  854384:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* return the number of bytes written */

  return (len - count);
  854388:	e0fffe17 	ldw	r3,-8(fp)
  85438c:	e0bfef17 	ldw	r2,-68(fp)
  854390:	1885c83a 	sub	r2,r3,r2
}
  854394:	e037883a 	mov	sp,fp
  854398:	dfc00117 	ldw	ra,4(sp)
  85439c:	df000017 	ldw	fp,0(sp)
  8543a0:	dec00204 	addi	sp,sp,8
  8543a4:	f800283a 	ret

008543a8 <alt_hostfs_open>:
* alt_hostfs_open
*
* If we can't find anything return -1
*/
int alt_hostfs_open(alt_fd* fd, const char * name, int flags, int mode)
{
  8543a8:	defff404 	addi	sp,sp,-48
  8543ac:	df000b15 	stw	fp,44(sp)
  8543b0:	df000b04 	addi	fp,sp,44
  8543b4:	e13ffc15 	stw	r4,-16(fp)
  8543b8:	e17ffd15 	stw	r5,-12(fp)
  8543bc:	e1bffe15 	stw	r6,-8(fp)
  8543c0:	e1ffff15 	stw	r7,-4(fp)
  static const struct HOSTCALL_INFO hcinfo = { 0x0103, "open" };

  alt_hostfs_dev* dev= (alt_hostfs_dev*)fd->dev;
  8543c4:	e0bffc17 	ldw	r2,-16(fp)
  8543c8:	10800017 	ldw	r2,0(r2)
  8543cc:	e0bff515 	stw	r2,-44(fp)
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
  8543d0:	e0bff517 	ldw	r2,-44(fp)
  8543d4:	10800217 	ldw	r2,8(r2)
  8543d8:	e0bff615 	stw	r2,-40(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
  8543dc:	e0bff617 	ldw	r2,-40(fp)
  8543e0:	10bfffc4 	addi	r2,r2,-1
  8543e4:	e0bffb15 	stw	r2,-20(fp)

  while (*++ptr != 0)
  8543e8:	e0bffb17 	ldw	r2,-20(fp)
  8543ec:	10800044 	addi	r2,r2,1
  8543f0:	e0bffb15 	stw	r2,-20(fp)
  8543f4:	e0bffb17 	ldw	r2,-20(fp)
  8543f8:	10800003 	ldbu	r2,0(r2)
  8543fc:	10803fcc 	andi	r2,r2,255
  854400:	1080201c 	xori	r2,r2,128
  854404:	10bfe004 	addi	r2,r2,-128
  854408:	103ff71e 	bne	r2,zero,8543e8 <__alt_mem_epcs_flash_controller_0+0xff84b3e8>
    ;

  return ptr - string;
  85440c:	e0fffb17 	ldw	r3,-20(fp)
  854410:	e0bff617 	ldw	r2,-40(fp)
  854414:	1885c83a 	sub	r2,r3,r2
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
  854418:	10800044 	addi	r2,r2,1
  85441c:	1007883a 	mov	r3,r2
  854420:	e0bffd17 	ldw	r2,-12(fp)
  854424:	10c5883a 	add	r2,r2,r3
  854428:	e0bffd15 	stw	r2,-12(fp)

  r3 = (int)&hcinfo;
  85442c:	d0a06b04 	addi	r2,gp,-32340
  854430:	1007883a 	mov	r3,r2
  r4 = (int)name;
  854434:	e0bffd17 	ldw	r2,-12(fp)
  854438:	1009883a 	mov	r4,r2
  r5 = flags;
  85443c:	e17ffe17 	ldw	r5,-8(fp)
  r6 = mode;
  854440:	e1bfff17 	ldw	r6,-4(fp)
  854444:	e0bffd17 	ldw	r2,-12(fp)
  854448:	e0bff915 	stw	r2,-28(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
  85444c:	e0bff917 	ldw	r2,-28(fp)
  854450:	10bfffc4 	addi	r2,r2,-1
  854454:	e0bffa15 	stw	r2,-24(fp)

  while (*++ptr != 0)
  854458:	e0bffa17 	ldw	r2,-24(fp)
  85445c:	10800044 	addi	r2,r2,1
  854460:	e0bffa15 	stw	r2,-24(fp)
  854464:	e0bffa17 	ldw	r2,-24(fp)
  854468:	10800003 	ldbu	r2,0(r2)
  85446c:	10803fcc 	andi	r2,r2,255
  854470:	1080201c 	xori	r2,r2,128
  854474:	10bfe004 	addi	r2,r2,-128
  854478:	103ff71e 	bne	r2,zero,854458 <__alt_mem_epcs_flash_controller_0+0xff84b458>
    ;

  return ptr - string;
  85447c:	e1fffa17 	ldw	r7,-24(fp)
  854480:	e0bff917 	ldw	r2,-28(fp)
  854484:	3885c83a 	sub	r2,r7,r2

  r3 = (int)&hcinfo;
  r4 = (int)name;
  r5 = flags;
  r6 = mode;
  r7 = inline_strlen(name);
  854488:	100f883a 	mov	r7,r2

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6), "r" (r7) : "memory" );
  85448c:	003da07a 	break	1

  handle = (void *)r2;
  854490:	e0bff715 	stw	r2,-36(fp)
  error = r3;
  854494:	e0fff815 	stw	r3,-32(fp)

  if (error == 0)
  854498:	e0bff817 	ldw	r2,-32(fp)
  85449c:	1000031e 	bne	r2,zero,8544ac <alt_hostfs_open+0x104>
    fd->priv = handle;
  8544a0:	e0bffc17 	ldw	r2,-16(fp)
  8544a4:	e0fff717 	ldw	r3,-36(fp)
  8544a8:	10c00115 	stw	r3,4(r2)

  return -error;
  8544ac:	e0bff817 	ldw	r2,-32(fp)
  8544b0:	0085c83a 	sub	r2,zero,r2
}
  8544b4:	e037883a 	mov	sp,fp
  8544b8:	df000017 	ldw	fp,0(sp)
  8544bc:	dec00104 	addi	sp,sp,4
  8544c0:	f800283a 	ret

008544c4 <alt_hostfs_close>:
* alt_hostfs_close
*
* Read the file
*/
int alt_hostfs_close(alt_fd* fd)
{
  8544c4:	defffd04 	addi	sp,sp,-12
  8544c8:	df000215 	stw	fp,8(sp)
  8544cc:	df000204 	addi	fp,sp,8
  8544d0:	e13fff15 	stw	r4,-4(fp)

  /* Input and output parameters for the hostcall */
  register int r3 asm ("r3");
  register int r4 asm ("r4");

  r3 = (int)&hcinfo;
  8544d4:	d0a06e04 	addi	r2,gp,-32328
  8544d8:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
  8544dc:	e0bfff17 	ldw	r2,-4(fp)
  8544e0:	10800117 	ldw	r2,4(r2)
  8544e4:	1009883a 	mov	r4,r2

  __asm__ volatile("break 1" : "+r" (r3) : "r" (r4) );
  8544e8:	003da07a 	break	1

  error = r3;
  8544ec:	e0fffe15 	stw	r3,-8(fp)

  return -error;
  8544f0:	e0bffe17 	ldw	r2,-8(fp)
  8544f4:	0085c83a 	sub	r2,zero,r2
}
  8544f8:	e037883a 	mov	sp,fp
  8544fc:	df000017 	ldw	fp,0(sp)
  854500:	dec00104 	addi	sp,sp,4
  854504:	f800283a 	ret

00854508 <alt_hostfs_read>:
* alt_hostfs_read
*
* Read the file
*/
int alt_hostfs_read(alt_fd* fd, char * ptr, int len)
{
  854508:	defffa04 	addi	sp,sp,-24
  85450c:	df000515 	stw	fp,20(sp)
  854510:	df000504 	addi	fp,sp,20
  854514:	e13ffd15 	stw	r4,-12(fp)
  854518:	e17ffe15 	stw	r5,-8(fp)
  85451c:	e1bfff15 	stw	r6,-4(fp)
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");


  r3 = (int)&hcinfo;
  854520:	d0a07104 	addi	r2,gp,-32316
  854524:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
  854528:	e0bffd17 	ldw	r2,-12(fp)
  85452c:	10800117 	ldw	r2,4(r2)
  854530:	1009883a 	mov	r4,r2
  r5 = (int)ptr;
  854534:	e0bffe17 	ldw	r2,-8(fp)
  854538:	100b883a 	mov	r5,r2
  r6 = len;
  85453c:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
  854540:	003da07a 	break	1

  rc = r2;
  854544:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
  854548:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
  85454c:	e0bffc17 	ldw	r2,-16(fp)
  854550:	10000326 	beq	r2,zero,854560 <alt_hostfs_read+0x58>
  854554:	e0bffc17 	ldw	r2,-16(fp)
  854558:	0085c83a 	sub	r2,zero,r2
  85455c:	00000106 	br	854564 <alt_hostfs_read+0x5c>
  854560:	e0bffb17 	ldw	r2,-20(fp)
}
  854564:	e037883a 	mov	sp,fp
  854568:	df000017 	ldw	fp,0(sp)
  85456c:	dec00104 	addi	sp,sp,4
  854570:	f800283a 	ret

00854574 <alt_hostfs_write>:
* alt_hostfs_write
*
* Read the file
*/
int alt_hostfs_write(alt_fd* fd, const char * ptr, int len)
{
  854574:	defffa04 	addi	sp,sp,-24
  854578:	df000515 	stw	fp,20(sp)
  85457c:	df000504 	addi	fp,sp,20
  854580:	e13ffd15 	stw	r4,-12(fp)
  854584:	e17ffe15 	stw	r5,-8(fp)
  854588:	e1bfff15 	stw	r6,-4(fp)
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");

  r3 = (int)&hcinfo;
  85458c:	d0a07404 	addi	r2,gp,-32304
  854590:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
  854594:	e0bffd17 	ldw	r2,-12(fp)
  854598:	10800117 	ldw	r2,4(r2)
  85459c:	1009883a 	mov	r4,r2
  r5 = (int)ptr;
  8545a0:	e0bffe17 	ldw	r2,-8(fp)
  8545a4:	100b883a 	mov	r5,r2
  r6 = len;
  8545a8:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
  8545ac:	003da07a 	break	1

  rc = r2;
  8545b0:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
  8545b4:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
  8545b8:	e0bffc17 	ldw	r2,-16(fp)
  8545bc:	10000326 	beq	r2,zero,8545cc <alt_hostfs_write+0x58>
  8545c0:	e0bffc17 	ldw	r2,-16(fp)
  8545c4:	0085c83a 	sub	r2,zero,r2
  8545c8:	00000106 	br	8545d0 <alt_hostfs_write+0x5c>
  8545cc:	e0bffb17 	ldw	r2,-20(fp)
}
  8545d0:	e037883a 	mov	sp,fp
  8545d4:	df000017 	ldw	fp,0(sp)
  8545d8:	dec00104 	addi	sp,sp,4
  8545dc:	f800283a 	ret

008545e0 <alt_hostfs_seek>:
* Move around within a file
*
* returns -errno for an error or the offset within the file
*/
int alt_hostfs_seek(alt_fd* fd, int ptr, int dir)
{
  8545e0:	defffa04 	addi	sp,sp,-24
  8545e4:	df000515 	stw	fp,20(sp)
  8545e8:	df000504 	addi	fp,sp,20
  8545ec:	e13ffd15 	stw	r4,-12(fp)
  8545f0:	e17ffe15 	stw	r5,-8(fp)
  8545f4:	e1bfff15 	stw	r6,-4(fp)
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");

  r3 = (int)&hcinfo;
  8545f8:	d0a07704 	addi	r2,gp,-32292
  8545fc:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
  854600:	e0bffd17 	ldw	r2,-12(fp)
  854604:	10800117 	ldw	r2,4(r2)
  854608:	1009883a 	mov	r4,r2
  r5 = ptr;
  85460c:	e17ffe17 	ldw	r5,-8(fp)
  r6 = dir;
  854610:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
  854614:	003da07a 	break	1

  rc = r2;
  854618:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
  85461c:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
  854620:	e0bffc17 	ldw	r2,-16(fp)
  854624:	10000326 	beq	r2,zero,854634 <alt_hostfs_seek+0x54>
  854628:	e0bffc17 	ldw	r2,-16(fp)
  85462c:	0085c83a 	sub	r2,zero,r2
  854630:	00000106 	br	854638 <alt_hostfs_seek+0x58>
  854634:	e0bffb17 	ldw	r2,-20(fp)
}
  854638:	e037883a 	mov	sp,fp
  85463c:	df000017 	ldw	fp,0(sp)
  854640:	dec00104 	addi	sp,sp,4
  854644:	f800283a 	ret

00854648 <alt_hostfs_fstat>:
* at the lower address.
* We need to copy the structure and byte swap it to make it match our local
* layout of struct stat.
*/
int alt_hostfs_fstat(alt_fd* fd, struct stat* st)
{
  854648:	deffe904 	addi	sp,sp,-92
  85464c:	df001615 	stw	fp,88(sp)
  854650:	df001604 	addi	fp,sp,88
  854654:	e13ffe15 	stw	r4,-8(fp)
  854658:	e17fff15 	stw	r5,-4(fp)
  register int r2 asm ("r2");
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");

  r3 = (int)&hcinfo;
  85465c:	d0a07a04 	addi	r2,gp,-32280
  854660:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
  854664:	e0bffe17 	ldw	r2,-8(fp)
  854668:	10800117 	ldw	r2,4(r2)
  85466c:	1009883a 	mov	r4,r2
  r5 = (int)&hoststat;
  854670:	e0bfee04 	addi	r2,fp,-72
  854674:	100b883a 	mov	r5,r2

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5) : "memory" );
  854678:	003da07a 	break	1

  rc = r2;
  85467c:	e0bfeb15 	stw	r2,-84(fp)
  error = r3;
  854680:	e0ffec15 	stw	r3,-80(fp)

  if (error == 0)
  854684:	e0bfec17 	ldw	r2,-80(fp)
  854688:	1000621e 	bne	r2,zero,854814 <alt_hostfs_fstat+0x1cc>
     * no change is required.  On a little-endian processor we need to swap
     * the bytes in each word.
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
  85468c:	e0bfee04 	addi	r2,fp,-72
  854690:	e0bfea15 	stw	r2,-88(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
  854694:	e0bfea17 	ldw	r2,-88(fp)
  854698:	10801004 	addi	r2,r2,64
  85469c:	e0bfed15 	stw	r2,-76(fp)
    for ( ; ptr < end ; ptr++)
  8546a0:	00001606 	br	8546fc <alt_hostfs_fstat+0xb4>
      *ptr = ((*ptr & 0xFF000000) >> 24) |
  8546a4:	e0bfea17 	ldw	r2,-88(fp)
  8546a8:	10800017 	ldw	r2,0(r2)
  8546ac:	1006d63a 	srli	r3,r2,24
             ((*ptr & 0x00FF0000) >> 8)  |
  8546b0:	e0bfea17 	ldw	r2,-88(fp)
  8546b4:	10800017 	ldw	r2,0(r2)
  8546b8:	10803fec 	andhi	r2,r2,255
  8546bc:	1004d23a 	srli	r2,r2,8

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
  8546c0:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
  8546c4:	e0bfea17 	ldw	r2,-88(fp)
  8546c8:	10800017 	ldw	r2,0(r2)
  8546cc:	10bfc00c 	andi	r2,r2,65280
  8546d0:	1004923a 	slli	r2,r2,8
#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
  8546d4:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
  8546d8:	e0bfea17 	ldw	r2,-88(fp)
  8546dc:	10800017 	ldw	r2,0(r2)
  8546e0:	1004963a 	slli	r2,r2,24
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
  8546e4:	1886b03a 	or	r3,r3,r2

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
  8546e8:	e0bfea17 	ldw	r2,-88(fp)
  8546ec:	10c00015 	stw	r3,0(r2)
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
  8546f0:	e0bfea17 	ldw	r2,-88(fp)
  8546f4:	10800104 	addi	r2,r2,4
  8546f8:	e0bfea15 	stw	r2,-88(fp)
  8546fc:	e0ffea17 	ldw	r3,-88(fp)
  854700:	e0bfed17 	ldw	r2,-76(fp)
  854704:	18bfe736 	bltu	r3,r2,8546a4 <__alt_mem_epcs_flash_controller_0+0xff84b6a4>
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
  854708:	e0bfff17 	ldw	r2,-4(fp)
  85470c:	e0bfea15 	stw	r2,-88(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
  854710:	e0bfea17 	ldw	r2,-88(fp)
  854714:	10800f04 	addi	r2,r2,60
  854718:	e0bfed15 	stw	r2,-76(fp)
    for ( ; ptr < end ; ptr++)
  85471c:	00000506 	br	854734 <alt_hostfs_fstat+0xec>
      *ptr = 0;
  854720:	e0bfea17 	ldw	r2,-88(fp)
  854724:	10000015 	stw	zero,0(r2)
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
    for ( ; ptr < end ; ptr++)
  854728:	e0bfea17 	ldw	r2,-88(fp)
  85472c:	10800104 	addi	r2,r2,4
  854730:	e0bfea15 	stw	r2,-88(fp)
  854734:	e0ffea17 	ldw	r3,-88(fp)
  854738:	e0bfed17 	ldw	r2,-76(fp)
  85473c:	18bff836 	bltu	r3,r2,854720 <__alt_mem_epcs_flash_controller_0+0xff84b720>

    /* Copy the data provided by the host into our local copy, for data which
     * is provided as 64bit values by the host we just use the least
     * significant word.
     */
    st->st_dev     = hoststat.fst_dev;
  854740:	e0bfee17 	ldw	r2,-72(fp)
  854744:	1007883a 	mov	r3,r2
  854748:	e0bfff17 	ldw	r2,-4(fp)
  85474c:	10c0000d 	sth	r3,0(r2)
    st->st_ino     = hoststat.fst_ino;
  854750:	e0bfef17 	ldw	r2,-68(fp)
  854754:	1007883a 	mov	r3,r2
  854758:	e0bfff17 	ldw	r2,-4(fp)
  85475c:	10c0008d 	sth	r3,2(r2)
    st->st_mode    = hoststat.fst_mode;
  854760:	e0fff017 	ldw	r3,-64(fp)
  854764:	e0bfff17 	ldw	r2,-4(fp)
  854768:	10c00115 	stw	r3,4(r2)
    st->st_nlink   = hoststat.fst_nlink;
  85476c:	e0bff117 	ldw	r2,-60(fp)
  854770:	1007883a 	mov	r3,r2
  854774:	e0bfff17 	ldw	r2,-4(fp)
  854778:	10c0020d 	sth	r3,8(r2)
    st->st_uid     = hoststat.fst_uid;
  85477c:	e0bff217 	ldw	r2,-56(fp)
  854780:	1007883a 	mov	r3,r2
  854784:	e0bfff17 	ldw	r2,-4(fp)
  854788:	10c0028d 	sth	r3,10(r2)
    st->st_gid     = hoststat.fst_gid;
  85478c:	e0bff317 	ldw	r2,-52(fp)
  854790:	1007883a 	mov	r3,r2
  854794:	e0bfff17 	ldw	r2,-4(fp)
  854798:	10c0030d 	sth	r3,12(r2)
    st->st_rdev    = hoststat.fst_rdev;
  85479c:	e0bff417 	ldw	r2,-48(fp)
  8547a0:	1007883a 	mov	r3,r2
  8547a4:	e0bfff17 	ldw	r2,-4(fp)
  8547a8:	10c0038d 	sth	r3,14(r2)
    st->st_size    = hoststat.fst_size[1];
  8547ac:	e0bff617 	ldw	r2,-40(fp)
  8547b0:	1007883a 	mov	r3,r2
  8547b4:	e0bfff17 	ldw	r2,-4(fp)
  8547b8:	10c00415 	stw	r3,16(r2)

    st->st_atime   = hoststat.fst_atime;
  8547bc:	e0bffb17 	ldw	r2,-20(fp)
  8547c0:	1007883a 	mov	r3,r2
  8547c4:	e0bfff17 	ldw	r2,-4(fp)
  8547c8:	10c00515 	stw	r3,20(r2)
    st->st_mtime   = hoststat.fst_mtime;
  8547cc:	e0bffc17 	ldw	r2,-16(fp)
  8547d0:	1007883a 	mov	r3,r2
  8547d4:	e0bfff17 	ldw	r2,-4(fp)
  8547d8:	10c00715 	stw	r3,28(r2)
    st->st_ctime   = hoststat.fst_ctime;
  8547dc:	e0bffd17 	ldw	r2,-12(fp)
  8547e0:	1007883a 	mov	r3,r2
  8547e4:	e0bfff17 	ldw	r2,-4(fp)
  8547e8:	10c00915 	stw	r3,36(r2)

    st->st_blksize = hoststat.fst_blksize[1];
  8547ec:	e0bff817 	ldw	r2,-32(fp)
  8547f0:	1007883a 	mov	r3,r2
  8547f4:	e0bfff17 	ldw	r2,-4(fp)
  8547f8:	10c00b15 	stw	r3,44(r2)
    st->st_blocks  = hoststat.fst_blocks[1];
  8547fc:	e0bffa17 	ldw	r2,-24(fp)
  854800:	1007883a 	mov	r3,r2
  854804:	e0bfff17 	ldw	r2,-4(fp)
  854808:	10c00c15 	stw	r3,48(r2)

    return rc;
  85480c:	e0bfeb17 	ldw	r2,-84(fp)
  854810:	00000206 	br	85481c <alt_hostfs_fstat+0x1d4>
  }
  else
    return -error;
  854814:	e0bfec17 	ldw	r2,-80(fp)
  854818:	0085c83a 	sub	r2,zero,r2
}
  85481c:	e037883a 	mov	sp,fp
  854820:	df000017 	ldw	fp,0(sp)
  854824:	dec00104 	addi	sp,sp,4
  854828:	f800283a 	ret

0085482c <epcs_read_status_register>:
#include "alt_types.h"
#include "epcs_commands.h"
#include "altera_avalon_spi.h"

alt_u8 epcs_read_status_register(alt_u32 base)
{
  85482c:	defff904 	addi	sp,sp,-28
  854830:	dfc00615 	stw	ra,24(sp)
  854834:	df000515 	stw	fp,20(sp)
  854838:	df000504 	addi	fp,sp,20
  85483c:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 rdsr = epcs_rdsr;
  854840:	00800144 	movi	r2,5
  854844:	e0bffe05 	stb	r2,-8(fp)
  alt_u8 status;
  alt_avalon_spi_command(
  854848:	d8000215 	stw	zero,8(sp)
  85484c:	e0bffe44 	addi	r2,fp,-7
  854850:	d8800115 	stw	r2,4(sp)
  854854:	00800044 	movi	r2,1
  854858:	d8800015 	stw	r2,0(sp)
  85485c:	e1fffe04 	addi	r7,fp,-8
  854860:	01800044 	movi	r6,1
  854864:	000b883a 	mov	r5,zero
  854868:	e13fff17 	ldw	r4,-4(fp)
  85486c:	08568100 	call	856810 <alt_avalon_spi_command>
    1,
    &status,
    0
  );

  return status;
  854870:	e0bffe43 	ldbu	r2,-7(fp)
}
  854874:	e037883a 	mov	sp,fp
  854878:	dfc00117 	ldw	ra,4(sp)
  85487c:	df000017 	ldw	fp,0(sp)
  854880:	dec00204 	addi	sp,sp,8
  854884:	f800283a 	ret

00854888 <epcs_test_wip>:

static ALT_INLINE int epcs_test_wip(alt_u32 base)
{
  854888:	defffd04 	addi	sp,sp,-12
  85488c:	dfc00215 	stw	ra,8(sp)
  854890:	df000115 	stw	fp,4(sp)
  854894:	df000104 	addi	fp,sp,4
  854898:	e13fff15 	stw	r4,-4(fp)
  return epcs_read_status_register(base) & 1;
  85489c:	e13fff17 	ldw	r4,-4(fp)
  8548a0:	085482c0 	call	85482c <epcs_read_status_register>
  8548a4:	10803fcc 	andi	r2,r2,255
  8548a8:	1080004c 	andi	r2,r2,1
}
  8548ac:	e037883a 	mov	sp,fp
  8548b0:	dfc00117 	ldw	ra,4(sp)
  8548b4:	df000017 	ldw	fp,0(sp)
  8548b8:	dec00204 	addi	sp,sp,8
  8548bc:	f800283a 	ret

008548c0 <epcs_await_wip_released>:

static ALT_INLINE void epcs_await_wip_released(alt_u32 base)
{
  8548c0:	defffd04 	addi	sp,sp,-12
  8548c4:	dfc00215 	stw	ra,8(sp)
  8548c8:	df000115 	stw	fp,4(sp)
  8548cc:	df000104 	addi	fp,sp,4
  8548d0:	e13fff15 	stw	r4,-4(fp)
  /* Wait until the WIP bit goes low. */
  while (epcs_test_wip(base))
  8548d4:	0001883a 	nop
  8548d8:	e13fff17 	ldw	r4,-4(fp)
  8548dc:	08548880 	call	854888 <epcs_test_wip>
  8548e0:	103ffd1e 	bne	r2,zero,8548d8 <__alt_mem_epcs_flash_controller_0+0xff84b8d8>
  {
  }
}
  8548e4:	0001883a 	nop
  8548e8:	e037883a 	mov	sp,fp
  8548ec:	dfc00117 	ldw	ra,4(sp)
  8548f0:	df000017 	ldw	fp,0(sp)
  8548f4:	dec00204 	addi	sp,sp,8
  8548f8:	f800283a 	ret

008548fc <epcs_sector_erase>:

void epcs_sector_erase(alt_u32 base, alt_u32 offset, alt_u32 four_bytes_mode)
{
  8548fc:	defff604 	addi	sp,sp,-40
  854900:	dfc00915 	stw	ra,36(sp)
  854904:	df000815 	stw	fp,32(sp)
  854908:	df000804 	addi	fp,sp,32
  85490c:	e13ffd15 	stw	r4,-12(fp)
  854910:	e17ffe15 	stw	r5,-8(fp)
  854914:	e1bfff15 	stw	r6,-4(fp)
  alt_u8 se[5];
  alt_u8 len;
  
  if(four_bytes_mode)
  854918:	e0bfff17 	ldw	r2,-4(fp)
  85491c:	10001226 	beq	r2,zero,854968 <epcs_sector_erase+0x6c>
  {
      se[0] = epcs_se;  /* Note: Use epcs_se for Micron EPCS256 */
  854920:	00bff604 	movi	r2,-40
  854924:	e0bffb45 	stb	r2,-19(fp)
      se[1] = (offset >> 24) & 0xFF;
  854928:	e0bffe17 	ldw	r2,-8(fp)
  85492c:	1004d63a 	srli	r2,r2,24
  854930:	e0bffb85 	stb	r2,-18(fp)
      se[2] = (offset >> 16) & 0xFF;
  854934:	e0bffe17 	ldw	r2,-8(fp)
  854938:	1004d43a 	srli	r2,r2,16
  85493c:	e0bffbc5 	stb	r2,-17(fp)
      se[3] = (offset >> 8) & 0xFF;
  854940:	e0bffe17 	ldw	r2,-8(fp)
  854944:	1004d23a 	srli	r2,r2,8
  854948:	e0bffc05 	stb	r2,-16(fp)
      se[4] = offset & 0xFF;
  85494c:	e0bffe17 	ldw	r2,-8(fp)
  854950:	e0bffc45 	stb	r2,-15(fp)
      len   = 5;
  854954:	00800144 	movi	r2,5
  854958:	e0bffb05 	stb	r2,-20(fp)
      epcs_enter_4_bytes_mode(base);
  85495c:	e13ffd17 	ldw	r4,-12(fp)
  854960:	0854db00 	call	854db0 <epcs_enter_4_bytes_mode>
  854964:	00000c06 	br	854998 <epcs_sector_erase+0x9c>
  }
  else
  {
      se[0] = epcs_se;
  854968:	00bff604 	movi	r2,-40
  85496c:	e0bffb45 	stb	r2,-19(fp)
      se[1] = (offset >> 16) & 0xFF;
  854970:	e0bffe17 	ldw	r2,-8(fp)
  854974:	1004d43a 	srli	r2,r2,16
  854978:	e0bffb85 	stb	r2,-18(fp)
      se[2] = (offset >> 8) & 0xFF;
  85497c:	e0bffe17 	ldw	r2,-8(fp)
  854980:	1004d23a 	srli	r2,r2,8
  854984:	e0bffbc5 	stb	r2,-17(fp)
      se[3] = offset & 0xFF;
  854988:	e0bffe17 	ldw	r2,-8(fp)
  85498c:	e0bffc05 	stb	r2,-16(fp)
      len   = 4;
  854990:	00800104 	movi	r2,4
  854994:	e0bffb05 	stb	r2,-20(fp)
  }

  /* Execute a WREN instruction */
  epcs_write_enable(base);
  854998:	e13ffd17 	ldw	r4,-12(fp)
  85499c:	0854aec0 	call	854aec <epcs_write_enable>

  alt_avalon_spi_command(
  8549a0:	e0bffb03 	ldbu	r2,-20(fp)
  8549a4:	e0fffb44 	addi	r3,fp,-19
  8549a8:	d8000215 	stw	zero,8(sp)
  8549ac:	d8000115 	stw	zero,4(sp)
  8549b0:	d8000015 	stw	zero,0(sp)
  8549b4:	180f883a 	mov	r7,r3
  8549b8:	100d883a 	mov	r6,r2
  8549bc:	000b883a 	mov	r5,zero
  8549c0:	e13ffd17 	ldw	r4,-12(fp)
  8549c4:	08568100 	call	856810 <alt_avalon_spi_command>
    0,
    (alt_u8*)0,
    0
  );

  epcs_await_wip_released(base);
  8549c8:	e13ffd17 	ldw	r4,-12(fp)
  8549cc:	08548c00 	call	8548c0 <epcs_await_wip_released>

  if(four_bytes_mode)
  8549d0:	e0bfff17 	ldw	r2,-4(fp)
  8549d4:	10000226 	beq	r2,zero,8549e0 <epcs_sector_erase+0xe4>
  {
    epcs_exit_4_bytes_mode(base);
  8549d8:	e13ffd17 	ldw	r4,-12(fp)
  8549dc:	0854e0c0 	call	854e0c <epcs_exit_4_bytes_mode>
  }
}
  8549e0:	0001883a 	nop
  8549e4:	e037883a 	mov	sp,fp
  8549e8:	dfc00117 	ldw	ra,4(sp)
  8549ec:	df000017 	ldw	fp,0(sp)
  8549f0:	dec00204 	addi	sp,sp,8
  8549f4:	f800283a 	ret

008549f8 <epcs_read_buffer>:

alt_32 epcs_read_buffer(alt_u32 base, int offset, alt_u8 *dest_addr, int length,
                        alt_u32 four_bytes_mode)
{
  8549f8:	defff404 	addi	sp,sp,-48
  8549fc:	dfc00b15 	stw	ra,44(sp)
  854a00:	df000a15 	stw	fp,40(sp)
  854a04:	df000a04 	addi	fp,sp,40
  854a08:	e13ffc15 	stw	r4,-16(fp)
  854a0c:	e17ffd15 	stw	r5,-12(fp)
  854a10:	e1bffe15 	stw	r6,-8(fp)
  854a14:	e1ffff15 	stw	r7,-4(fp)
  alt_u8 read_command[5];
  alt_u32 cmd_len;

  read_command[0] = epcs_read;
  854a18:	008000c4 	movi	r2,3
  854a1c:	e0bffa05 	stb	r2,-24(fp)
  
  if(four_bytes_mode)
  854a20:	e0800217 	ldw	r2,8(fp)
  854a24:	10001026 	beq	r2,zero,854a68 <epcs_read_buffer+0x70>
  {
        read_command[1] = (offset >> 24) & 0xFF;
  854a28:	e0bffd17 	ldw	r2,-12(fp)
  854a2c:	1004d63a 	srli	r2,r2,24
  854a30:	e0bffa45 	stb	r2,-23(fp)
        read_command[2] = (offset >> 16) & 0xFF;
  854a34:	e0bffd17 	ldw	r2,-12(fp)
  854a38:	1005d43a 	srai	r2,r2,16
  854a3c:	e0bffa85 	stb	r2,-22(fp)
        read_command[3] = (offset >> 8) & 0xFF;
  854a40:	e0bffd17 	ldw	r2,-12(fp)
  854a44:	1005d23a 	srai	r2,r2,8
  854a48:	e0bffac5 	stb	r2,-21(fp)
        read_command[4] = offset & 0xFF;
  854a4c:	e0bffd17 	ldw	r2,-12(fp)
  854a50:	e0bffb05 	stb	r2,-20(fp)
        cmd_len = 5;
  854a54:	00800144 	movi	r2,5
  854a58:	e0bff915 	stw	r2,-28(fp)
        epcs_enter_4_bytes_mode(base);
  854a5c:	e13ffc17 	ldw	r4,-16(fp)
  854a60:	0854db00 	call	854db0 <epcs_enter_4_bytes_mode>
  854a64:	00000a06 	br	854a90 <epcs_read_buffer+0x98>
  }
  else
  {
        read_command[1] = (offset >> 16) & 0xFF;
  854a68:	e0bffd17 	ldw	r2,-12(fp)
  854a6c:	1005d43a 	srai	r2,r2,16
  854a70:	e0bffa45 	stb	r2,-23(fp)
        read_command[2] = (offset >> 8) & 0xFF;
  854a74:	e0bffd17 	ldw	r2,-12(fp)
  854a78:	1005d23a 	srai	r2,r2,8
  854a7c:	e0bffa85 	stb	r2,-22(fp)
        read_command[3] = offset & 0xFF;
  854a80:	e0bffd17 	ldw	r2,-12(fp)
  854a84:	e0bffac5 	stb	r2,-21(fp)
        cmd_len = 4;
  854a88:	00800104 	movi	r2,4
  854a8c:	e0bff915 	stw	r2,-28(fp)
  }

  epcs_await_wip_released(base);
  854a90:	e13ffc17 	ldw	r4,-16(fp)
  854a94:	08548c00 	call	8548c0 <epcs_await_wip_released>

  alt_avalon_spi_command(
  854a98:	e0bfff17 	ldw	r2,-4(fp)
  854a9c:	e13ffa04 	addi	r4,fp,-24
  854aa0:	d8000215 	stw	zero,8(sp)
  854aa4:	e0fffe17 	ldw	r3,-8(fp)
  854aa8:	d8c00115 	stw	r3,4(sp)
  854aac:	d8800015 	stw	r2,0(sp)
  854ab0:	200f883a 	mov	r7,r4
  854ab4:	e1bff917 	ldw	r6,-28(fp)
  854ab8:	000b883a 	mov	r5,zero
  854abc:	e13ffc17 	ldw	r4,-16(fp)
  854ac0:	08568100 	call	856810 <alt_avalon_spi_command>
    length,
    (alt_u8*)dest_addr,
    0
  );

  if(four_bytes_mode)
  854ac4:	e0800217 	ldw	r2,8(fp)
  854ac8:	10000226 	beq	r2,zero,854ad4 <epcs_read_buffer+0xdc>
  {
    epcs_exit_4_bytes_mode(base);
  854acc:	e13ffc17 	ldw	r4,-16(fp)
  854ad0:	0854e0c0 	call	854e0c <epcs_exit_4_bytes_mode>
  }

  return length;
  854ad4:	e0bfff17 	ldw	r2,-4(fp)
}
  854ad8:	e037883a 	mov	sp,fp
  854adc:	dfc00117 	ldw	ra,4(sp)
  854ae0:	df000017 	ldw	fp,0(sp)
  854ae4:	dec00204 	addi	sp,sp,8
  854ae8:	f800283a 	ret

00854aec <epcs_write_enable>:

void epcs_write_enable(alt_u32 base)
{
  854aec:	defff904 	addi	sp,sp,-28
  854af0:	dfc00615 	stw	ra,24(sp)
  854af4:	df000515 	stw	fp,20(sp)
  854af8:	df000504 	addi	fp,sp,20
  854afc:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 wren = epcs_wren;
  854b00:	00800184 	movi	r2,6
  854b04:	e0bffe05 	stb	r2,-8(fp)
  alt_avalon_spi_command(
  854b08:	d8000215 	stw	zero,8(sp)
  854b0c:	d8000115 	stw	zero,4(sp)
  854b10:	d8000015 	stw	zero,0(sp)
  854b14:	e1fffe04 	addi	r7,fp,-8
  854b18:	01800044 	movi	r6,1
  854b1c:	000b883a 	mov	r5,zero
  854b20:	e13fff17 	ldw	r4,-4(fp)
  854b24:	08568100 	call	856810 <alt_avalon_spi_command>
    &wren,
    0,
    (alt_u8*)0,
    0
  );
}
  854b28:	0001883a 	nop
  854b2c:	e037883a 	mov	sp,fp
  854b30:	dfc00117 	ldw	ra,4(sp)
  854b34:	df000017 	ldw	fp,0(sp)
  854b38:	dec00204 	addi	sp,sp,8
  854b3c:	f800283a 	ret

00854b40 <epcs_write_status_register>:

void epcs_write_status_register(alt_u32 base, alt_u8 value)
{
  854b40:	defff804 	addi	sp,sp,-32
  854b44:	dfc00715 	stw	ra,28(sp)
  854b48:	df000615 	stw	fp,24(sp)
  854b4c:	df000604 	addi	fp,sp,24
  854b50:	e13ffe15 	stw	r4,-8(fp)
  854b54:	2805883a 	mov	r2,r5
  854b58:	e0bfff05 	stb	r2,-4(fp)
  alt_u8 wrsr[2];
  
  wrsr[0] = epcs_wrsr;
  854b5c:	00800044 	movi	r2,1
  854b60:	e0bffd05 	stb	r2,-12(fp)
  wrsr[1] = value;
  854b64:	e0bfff03 	ldbu	r2,-4(fp)
  854b68:	e0bffd45 	stb	r2,-11(fp)

  alt_avalon_spi_command(
  854b6c:	d8000215 	stw	zero,8(sp)
  854b70:	d8000115 	stw	zero,4(sp)
  854b74:	d8000015 	stw	zero,0(sp)
  854b78:	e1fffd04 	addi	r7,fp,-12
  854b7c:	01800084 	movi	r6,2
  854b80:	000b883a 	mov	r5,zero
  854b84:	e13ffe17 	ldw	r4,-8(fp)
  854b88:	08568100 	call	856810 <alt_avalon_spi_command>
    0,
    (alt_u8*)0,
    0
  );

  epcs_await_wip_released(base);
  854b8c:	e13ffe17 	ldw	r4,-8(fp)
  854b90:	08548c00 	call	8548c0 <epcs_await_wip_released>
}
  854b94:	0001883a 	nop
  854b98:	e037883a 	mov	sp,fp
  854b9c:	dfc00117 	ldw	ra,4(sp)
  854ba0:	df000017 	ldw	fp,0(sp)
  854ba4:	dec00204 	addi	sp,sp,8
  854ba8:	f800283a 	ret

00854bac <epcs_write_buffer>:

/* Write a partial or full page, assuming that page has been erased */
alt_32 epcs_write_buffer(alt_u32 base, int offset, const alt_u8* src_addr, 
                         int length, alt_u32 four_bytes_mode)
{
  854bac:	defff404 	addi	sp,sp,-48
  854bb0:	dfc00b15 	stw	ra,44(sp)
  854bb4:	df000a15 	stw	fp,40(sp)
  854bb8:	df000a04 	addi	fp,sp,40
  854bbc:	e13ffc15 	stw	r4,-16(fp)
  854bc0:	e17ffd15 	stw	r5,-12(fp)
  854bc4:	e1bffe15 	stw	r6,-8(fp)
  854bc8:	e1ffff15 	stw	r7,-4(fp)
  alt_u8 pp[5];
  alt_u32 cmd_len;
  
  pp[0] = epcs_pp;
  854bcc:	00800084 	movi	r2,2
  854bd0:	e0bffa05 	stb	r2,-24(fp)
  
  if(four_bytes_mode)
  854bd4:	e0800217 	ldw	r2,8(fp)
  854bd8:	10001026 	beq	r2,zero,854c1c <epcs_write_buffer+0x70>
  {
      pp[1] = (offset >> 24) & 0xFF;
  854bdc:	e0bffd17 	ldw	r2,-12(fp)
  854be0:	1004d63a 	srli	r2,r2,24
  854be4:	e0bffa45 	stb	r2,-23(fp)
      pp[2] = (offset >> 16) & 0xFF;
  854be8:	e0bffd17 	ldw	r2,-12(fp)
  854bec:	1005d43a 	srai	r2,r2,16
  854bf0:	e0bffa85 	stb	r2,-22(fp)
      pp[3] = (offset >> 8) & 0xFF;
  854bf4:	e0bffd17 	ldw	r2,-12(fp)
  854bf8:	1005d23a 	srai	r2,r2,8
  854bfc:	e0bffac5 	stb	r2,-21(fp)
      pp[4] = offset & 0xFF;
  854c00:	e0bffd17 	ldw	r2,-12(fp)
  854c04:	e0bffb05 	stb	r2,-20(fp)
      cmd_len = 5;
  854c08:	00800144 	movi	r2,5
  854c0c:	e0bff915 	stw	r2,-28(fp)
      epcs_enter_4_bytes_mode(base);
  854c10:	e13ffc17 	ldw	r4,-16(fp)
  854c14:	0854db00 	call	854db0 <epcs_enter_4_bytes_mode>
  854c18:	00000a06 	br	854c44 <epcs_write_buffer+0x98>
  }
  else
  {
      pp[1] = (offset >> 16) & 0xFF;
  854c1c:	e0bffd17 	ldw	r2,-12(fp)
  854c20:	1005d43a 	srai	r2,r2,16
  854c24:	e0bffa45 	stb	r2,-23(fp)
      pp[2] = (offset >> 8) & 0xFF;
  854c28:	e0bffd17 	ldw	r2,-12(fp)
  854c2c:	1005d23a 	srai	r2,r2,8
  854c30:	e0bffa85 	stb	r2,-22(fp)
      pp[3] = offset & 0xFF;
  854c34:	e0bffd17 	ldw	r2,-12(fp)
  854c38:	e0bffac5 	stb	r2,-21(fp)
      cmd_len = 4;
  854c3c:	00800104 	movi	r2,4
  854c40:	e0bff915 	stw	r2,-28(fp)
  }

  /* First, WREN */
  epcs_write_enable(base);
  854c44:	e13ffc17 	ldw	r4,-16(fp)
  854c48:	0854aec0 	call	854aec <epcs_write_enable>

  /* Send the PP command */
  alt_avalon_spi_command(
  854c4c:	e0fffa04 	addi	r3,fp,-24
  854c50:	00800044 	movi	r2,1
  854c54:	d8800215 	stw	r2,8(sp)
  854c58:	d8000115 	stw	zero,4(sp)
  854c5c:	d8000015 	stw	zero,0(sp)
  854c60:	180f883a 	mov	r7,r3
  854c64:	e1bff917 	ldw	r6,-28(fp)
  854c68:	000b883a 	mov	r5,zero
  854c6c:	e13ffc17 	ldw	r4,-16(fp)
  854c70:	08568100 	call	856810 <alt_avalon_spi_command>
    (alt_u8*)0,
    ALT_AVALON_SPI_COMMAND_MERGE
  );

  /* Send the user's buffer */
  alt_avalon_spi_command(
  854c74:	e0bfff17 	ldw	r2,-4(fp)
  854c78:	d8000215 	stw	zero,8(sp)
  854c7c:	d8000115 	stw	zero,4(sp)
  854c80:	d8000015 	stw	zero,0(sp)
  854c84:	e1fffe17 	ldw	r7,-8(fp)
  854c88:	100d883a 	mov	r6,r2
  854c8c:	000b883a 	mov	r5,zero
  854c90:	e13ffc17 	ldw	r4,-16(fp)
  854c94:	08568100 	call	856810 <alt_avalon_spi_command>
   * if the user's going to go off and ignore the flash for
   * a while, its writes could occur in parallel with user code
   * execution.  Unfortunately, I have to guard all reads/writes
   * with wip-tests, to make that happen.
   */
  epcs_await_wip_released(base);
  854c98:	e13ffc17 	ldw	r4,-16(fp)
  854c9c:	08548c00 	call	8548c0 <epcs_await_wip_released>

  if(four_bytes_mode)
  854ca0:	e0800217 	ldw	r2,8(fp)
  854ca4:	10000226 	beq	r2,zero,854cb0 <epcs_write_buffer+0x104>
  {
    epcs_exit_4_bytes_mode(base);
  854ca8:	e13ffc17 	ldw	r4,-16(fp)
  854cac:	0854e0c0 	call	854e0c <epcs_exit_4_bytes_mode>
  }

  return length;
  854cb0:	e0bfff17 	ldw	r2,-4(fp)
}
  854cb4:	e037883a 	mov	sp,fp
  854cb8:	dfc00117 	ldw	ra,4(sp)
  854cbc:	df000017 	ldw	fp,0(sp)
  854cc0:	dec00204 	addi	sp,sp,8
  854cc4:	f800283a 	ret

00854cc8 <epcs_read_electronic_signature>:


alt_u8 epcs_read_electronic_signature(alt_u32 base)
{
  854cc8:	defff804 	addi	sp,sp,-32
  854ccc:	dfc00715 	stw	ra,28(sp)
  854cd0:	df000615 	stw	fp,24(sp)
  854cd4:	df000604 	addi	fp,sp,24
  854cd8:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 res_cmd[] = {epcs_res, 0, 0, 0};
  854cdc:	00bfeac4 	movi	r2,-85
  854ce0:	e0bffd05 	stb	r2,-12(fp)
  854ce4:	e03ffd45 	stb	zero,-11(fp)
  854ce8:	e03ffd85 	stb	zero,-10(fp)
  854cec:	e03ffdc5 	stb	zero,-9(fp)
  alt_u8 res;

  alt_avalon_spi_command(
  854cf0:	d8000215 	stw	zero,8(sp)
  854cf4:	e0bffe04 	addi	r2,fp,-8
  854cf8:	d8800115 	stw	r2,4(sp)
  854cfc:	00800044 	movi	r2,1
  854d00:	d8800015 	stw	r2,0(sp)
  854d04:	e1fffd04 	addi	r7,fp,-12
  854d08:	01800104 	movi	r6,4
  854d0c:	000b883a 	mov	r5,zero
  854d10:	e13fff17 	ldw	r4,-4(fp)
  854d14:	08568100 	call	856810 <alt_avalon_spi_command>
    1,
    &res,
    0
  );

  return res;
  854d18:	e0bffe03 	ldbu	r2,-8(fp)
}
  854d1c:	e037883a 	mov	sp,fp
  854d20:	dfc00117 	ldw	ra,4(sp)
  854d24:	df000017 	ldw	fp,0(sp)
  854d28:	dec00204 	addi	sp,sp,8
  854d2c:	f800283a 	ret

00854d30 <epcs_read_device_id>:

alt_u32 epcs_read_device_id(alt_u32 base)
{
  854d30:	defff904 	addi	sp,sp,-28
  854d34:	dfc00615 	stw	ra,24(sp)
  854d38:	df000515 	stw	fp,20(sp)
  854d3c:	df000504 	addi	fp,sp,20
  854d40:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 rd_id_cmd[] = {epcs_rdid};
  854d44:	00bfe7c4 	movi	r2,-97
  854d48:	e0bffe05 	stb	r2,-8(fp)
  alt_u8 id[3];

  alt_avalon_spi_command(
  854d4c:	d8000215 	stw	zero,8(sp)
  854d50:	e0bffe44 	addi	r2,fp,-7
  854d54:	d8800115 	stw	r2,4(sp)
  854d58:	008000c4 	movi	r2,3
  854d5c:	d8800015 	stw	r2,0(sp)
  854d60:	e1fffe04 	addi	r7,fp,-8
  854d64:	01800044 	movi	r6,1
  854d68:	000b883a 	mov	r5,zero
  854d6c:	e13fff17 	ldw	r4,-4(fp)
  854d70:	08568100 	call	856810 <alt_avalon_spi_command>
    3,
    id,
    0
  );

  return (alt_u32) ((id[0] << 16) | (id[1] << 8) | id[2]);
  854d74:	e0bffe43 	ldbu	r2,-7(fp)
  854d78:	10803fcc 	andi	r2,r2,255
  854d7c:	1006943a 	slli	r3,r2,16
  854d80:	e0bffe83 	ldbu	r2,-6(fp)
  854d84:	10803fcc 	andi	r2,r2,255
  854d88:	1004923a 	slli	r2,r2,8
  854d8c:	1886b03a 	or	r3,r3,r2
  854d90:	e0bffec3 	ldbu	r2,-5(fp)
  854d94:	10803fcc 	andi	r2,r2,255
  854d98:	1884b03a 	or	r2,r3,r2
}
  854d9c:	e037883a 	mov	sp,fp
  854da0:	dfc00117 	ldw	ra,4(sp)
  854da4:	df000017 	ldw	fp,0(sp)
  854da8:	dec00204 	addi	sp,sp,8
  854dac:	f800283a 	ret

00854db0 <epcs_enter_4_bytes_mode>:

void epcs_enter_4_bytes_mode(alt_u32 base)
{
  854db0:	defff904 	addi	sp,sp,-28
  854db4:	dfc00615 	stw	ra,24(sp)
  854db8:	df000515 	stw	fp,20(sp)
  854dbc:	df000504 	addi	fp,sp,20
  854dc0:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 en4b_cmd = epcs_en4b;
  854dc4:	00bfedc4 	movi	r2,-73
  854dc8:	e0bffe05 	stb	r2,-8(fp)

  /* First, WREN */
  epcs_write_enable(base);
  854dcc:	e13fff17 	ldw	r4,-4(fp)
  854dd0:	0854aec0 	call	854aec <epcs_write_enable>

  alt_avalon_spi_command(
  854dd4:	d8000215 	stw	zero,8(sp)
  854dd8:	d8000115 	stw	zero,4(sp)
  854ddc:	d8000015 	stw	zero,0(sp)
  854de0:	e1fffe04 	addi	r7,fp,-8
  854de4:	01800044 	movi	r6,1
  854de8:	000b883a 	mov	r5,zero
  854dec:	e13fff17 	ldw	r4,-4(fp)
  854df0:	08568100 	call	856810 <alt_avalon_spi_command>
    0,
    (alt_u8*)0,
    0
  );

  return;
  854df4:	0001883a 	nop
}
  854df8:	e037883a 	mov	sp,fp
  854dfc:	dfc00117 	ldw	ra,4(sp)
  854e00:	df000017 	ldw	fp,0(sp)
  854e04:	dec00204 	addi	sp,sp,8
  854e08:	f800283a 	ret

00854e0c <epcs_exit_4_bytes_mode>:

void epcs_exit_4_bytes_mode(alt_u32 base)
{
  854e0c:	defff904 	addi	sp,sp,-28
  854e10:	dfc00615 	stw	ra,24(sp)
  854e14:	df000515 	stw	fp,20(sp)
  854e18:	df000504 	addi	fp,sp,20
  854e1c:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 exit4b_cmd = epcs_dis4b;
  854e20:	00bffa44 	movi	r2,-23
  854e24:	e0bffe05 	stb	r2,-8(fp)

  /* First, WREN */
  epcs_write_enable(base);
  854e28:	e13fff17 	ldw	r4,-4(fp)
  854e2c:	0854aec0 	call	854aec <epcs_write_enable>

  alt_avalon_spi_command(
  854e30:	d8000215 	stw	zero,8(sp)
  854e34:	d8000115 	stw	zero,4(sp)
  854e38:	d8000015 	stw	zero,0(sp)
  854e3c:	e1fffe04 	addi	r7,fp,-8
  854e40:	01800044 	movi	r6,1
  854e44:	000b883a 	mov	r5,zero
  854e48:	e13fff17 	ldw	r4,-4(fp)
  854e4c:	08568100 	call	856810 <alt_avalon_spi_command>
    0,
    (alt_u8*)0,
    0
  );

  return;
  854e50:	0001883a 	nop
}
  854e54:	e037883a 	mov	sp,fp
  854e58:	dfc00117 	ldw	ra,4(sp)
  854e5c:	df000017 	ldw	fp,0(sp)
  854e60:	dec00204 	addi	sp,sp,8
  854e64:	f800283a 	ret

00854e68 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  854e68:	defffe04 	addi	sp,sp,-8
  854e6c:	dfc00115 	stw	ra,4(sp)
  854e70:	df000015 	stw	fp,0(sp)
  854e74:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  854e78:	d0a04917 	ldw	r2,-32476(gp)
  854e7c:	10000326 	beq	r2,zero,854e8c <alt_get_errno+0x24>
  854e80:	d0a04917 	ldw	r2,-32476(gp)
  854e84:	103ee83a 	callr	r2
  854e88:	00000106 	br	854e90 <alt_get_errno+0x28>
  854e8c:	d0a09204 	addi	r2,gp,-32184
}
  854e90:	e037883a 	mov	sp,fp
  854e94:	dfc00117 	ldw	ra,4(sp)
  854e98:	df000017 	ldw	fp,0(sp)
  854e9c:	dec00204 	addi	sp,sp,8
  854ea0:	f800283a 	ret

00854ea4 <fifoed_avalon_uart_read>:
 * transfered from a circular buffer. The interrupt handler is then responsible
 * for copying data from the device into this buffer.
 */

int fifoed_avalon_uart_read (fifoed_avalon_uart_state* sp, char* ptr, int len, int flags)
{
  854ea4:	deffed04 	addi	sp,sp,-76
  854ea8:	dfc01215 	stw	ra,72(sp)
  854eac:	df001115 	stw	fp,68(sp)
  854eb0:	df001104 	addi	fp,sp,68
  854eb4:	e13ffc15 	stw	r4,-16(fp)
  854eb8:	e17ffd15 	stw	r5,-12(fp)
  854ebc:	e1bffe15 	stw	r6,-8(fp)
  854ec0:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             block;
 // alt_u32         next; //9.3.1 patch

  int count                = 0;
  854ec4:	e03ff015 	stw	zero,-64(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  block = !(flags & O_NONBLOCK);
  854ec8:	e0bfff17 	ldw	r2,-4(fp)
  854ecc:	1090000c 	andi	r2,r2,16384
  854ed0:	1005003a 	cmpeq	r2,r2,zero
  854ed4:	10803fcc 	andi	r2,r2,255
  854ed8:	e0bff115 	stw	r2,-60(fp)
  /*
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */

  ALT_SEM_PEND (sp->read_lock, 0);
  854edc:	e0bffc17 	ldw	r2,-16(fp)
  854ee0:	10800817 	ldw	r2,32(r2)
  854ee4:	e0bff815 	stw	r2,-32(fp)
  854ee8:	e03ff90d 	sth	zero,-28(fp)
  854eec:	e0bff90b 	ldhu	r2,-28(fp)
  854ef0:	e0fffb44 	addi	r3,fp,-19
  854ef4:	180d883a 	mov	r6,r3
  854ef8:	100b883a 	mov	r5,r2
  854efc:	e13ff817 	ldw	r4,-32(fp)
  854f00:	084fafc0 	call	84fafc <OSSemPend>
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  854f04:	00001706 	br	854f64 <fifoed_avalon_uart_read+0xc0>
    {
      count++;
  854f08:	e0bff017 	ldw	r2,-64(fp)
  854f0c:	10800044 	addi	r2,r2,1
  854f10:	e0bff015 	stw	r2,-64(fp)
      *ptr++ = sp->rx_buf[sp->rx_start];
  854f14:	e0bffd17 	ldw	r2,-12(fp)
  854f18:	10c00044 	addi	r3,r2,1
  854f1c:	e0fffd15 	stw	r3,-12(fp)
  854f20:	e0fffc17 	ldw	r3,-16(fp)
  854f24:	18c00217 	ldw	r3,8(r3)
  854f28:	e13ffc17 	ldw	r4,-16(fp)
  854f2c:	20c7883a 	add	r3,r4,r3
  854f30:	18c00a04 	addi	r3,r3,40
  854f34:	18c00003 	ldbu	r3,0(r3)
  854f38:	10c00005 	stb	r3,0(r2)
      
  //  9.3.1 patch  sp->rx_start = (++sp->rx_start) & FIFOED_AVALON_UART_BUF_MSK;
      ++sp->rx_start;
  854f3c:	e0bffc17 	ldw	r2,-16(fp)
  854f40:	10800217 	ldw	r2,8(r2)
  854f44:	10c00044 	addi	r3,r2,1
  854f48:	e0bffc17 	ldw	r2,-16(fp)
  854f4c:	10c00215 	stw	r3,8(r2)
      sp->rx_start = sp->rx_start & FIFOED_AVALON_UART_BUF_MSK; 
  854f50:	e0bffc17 	ldw	r2,-16(fp)
  854f54:	10800217 	ldw	r2,8(r2)
  854f58:	10c00fcc 	andi	r3,r2,63
  854f5c:	e0bffc17 	ldw	r2,-16(fp)
  854f60:	10c00215 	stw	r3,8(r2)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  854f64:	e0fff017 	ldw	r3,-64(fp)
  854f68:	e0bffe17 	ldw	r2,-8(fp)
  854f6c:	1880050e 	bge	r3,r2,854f84 <fifoed_avalon_uart_read+0xe0>
  854f70:	e0bffc17 	ldw	r2,-16(fp)
  854f74:	10c00217 	ldw	r3,8(r2)
  854f78:	e0bffc17 	ldw	r2,-16(fp)
  854f7c:	10800317 	ldw	r2,12(r2)
  854f80:	18bfe11e 	bne	r3,r2,854f08 <__alt_mem_epcs_flash_controller_0+0xff84bf08>
    /*
     * If no data has been transferred, the circular buffer is empty, and
     * this is not a non-blocking access, block waiting for data to arrive.
     */

    if (!count && (sp->rx_start == sp->rx_end))
  854f84:	e0bff017 	ldw	r2,-64(fp)
  854f88:	1000381e 	bne	r2,zero,85506c <fifoed_avalon_uart_read+0x1c8>
  854f8c:	e0bffc17 	ldw	r2,-16(fp)
  854f90:	10c00217 	ldw	r3,8(r2)
  854f94:	e0bffc17 	ldw	r2,-16(fp)
  854f98:	10800317 	ldw	r2,12(r2)
  854f9c:	1880331e 	bne	r3,r2,85506c <fifoed_avalon_uart_read+0x1c8>
    {
      if (!block)
  854fa0:	e0bff117 	ldw	r2,-60(fp)
  854fa4:	1000051e 	bne	r2,zero,854fbc <fifoed_avalon_uart_read+0x118>
      {
        /* Set errno to indicate the reason we're not returning any data */

        ALT_ERRNO = EWOULDBLOCK;
  854fa8:	0854e680 	call	854e68 <alt_get_errno>
  854fac:	1007883a 	mov	r3,r2
  854fb0:	008002c4 	movi	r2,11
  854fb4:	18800015 	stw	r2,0(r3)
        break;
  854fb8:	00003006 	br	85507c <fifoed_avalon_uart_read+0x1d8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  854fbc:	0005303a 	rdctl	r2,status
  854fc0:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  854fc4:	e0fff517 	ldw	r3,-44(fp)
  854fc8:	00bfff84 	movi	r2,-2
  854fcc:	1884703a 	and	r2,r3,r2
  854fd0:	1001703a 	wrctl	status,r2
  
  return context;
  854fd4:	e0bff517 	ldw	r2,-44(fp)
      {
       /* Block waiting for some data to arrive */

       /* First, ensure read interrupts are enabled to avoid deadlock */

       context = alt_irq_disable_all ();
  854fd8:	e0bff415 	stw	r2,-48(fp)
       sp->ctrl |= FIFOED_AVALON_UART_CONTROL_RRDY_MSK;
  854fdc:	e0bffc17 	ldw	r2,-16(fp)
  854fe0:	10800117 	ldw	r2,4(r2)
  854fe4:	10c02014 	ori	r3,r2,128
  854fe8:	e0bffc17 	ldw	r2,-16(fp)
  854fec:	10c00115 	stw	r3,4(r2)
       IOWR_FIFOED_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  854ff0:	e0bffc17 	ldw	r2,-16(fp)
  854ff4:	10800017 	ldw	r2,0(r2)
  854ff8:	10800304 	addi	r2,r2,12
  854ffc:	e0fffc17 	ldw	r3,-16(fp)
  855000:	18c00117 	ldw	r3,4(r3)
  855004:	10c00035 	stwio	r3,0(r2)
  855008:	e0bff417 	ldw	r2,-48(fp)
  85500c:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  855010:	e0bff617 	ldw	r2,-40(fp)
  855014:	1001703a 	wrctl	status,r2
        * flag set in the interrupt service routine. This avoids wasting CPU
        * cycles waiting in this thread, when we could be doing something more 
        * profitable elsewhere.
        */

       ALT_FLAG_PEND (sp->events,
  855018:	e0bffc17 	ldw	r2,-16(fp)
  85501c:	10800717 	ldw	r2,28(r2)
  855020:	e0bff215 	stw	r2,-56(fp)
  855024:	00800044 	movi	r2,1
  855028:	e0bff98d 	sth	r2,-26(fp)
  85502c:	00bfe0c4 	movi	r2,-125
  855030:	e0bffa05 	stb	r2,-24(fp)
  855034:	e03ffa8d 	sth	zero,-22(fp)
                   OS_FLAGS flags, 
                   INT8U wait_type, 
                   INT16U timeout)
{
  INT8U err;
  if (OSRunning)
  855038:	d0a0a343 	ldbu	r2,-32115(gp)
  85503c:	10803fcc 	andi	r2,r2,255
  855040:	10000a26 	beq	r2,zero,85506c <fifoed_avalon_uart_read+0x1c8>
  {
    OSFlagPend (group, flags, wait_type, timeout, &err);
  855044:	e0fff98b 	ldhu	r3,-26(fp)
  855048:	e13ffa03 	ldbu	r4,-24(fp)
  85504c:	e17ffa8b 	ldhu	r5,-22(fp)
  855050:	e0bffb04 	addi	r2,fp,-20
  855054:	d8800015 	stw	r2,0(sp)
  855058:	280f883a 	mov	r7,r5
  85505c:	200d883a 	mov	r6,r4
  855060:	180b883a 	mov	r5,r3
  855064:	e13ff217 	ldw	r4,-56(fp)
  855068:	084d0880 	call	84d088 <OSFlagPend>
                      OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                      0);
      }
    }
  }
  while (!count && len);
  85506c:	e0bff017 	ldw	r2,-64(fp)
  855070:	1000021e 	bne	r2,zero,85507c <fifoed_avalon_uart_read+0x1d8>
  855074:	e0bffe17 	ldw	r2,-8(fp)
  855078:	103fba1e 	bne	r2,zero,854f64 <__alt_mem_epcs_flash_controller_0+0xff84bf64>
  /*
   * Now that access to the circular buffer is complete, release the read
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);
  85507c:	e0bffc17 	ldw	r2,-16(fp)
  855080:	10800817 	ldw	r2,32(r2)
  855084:	1009883a 	mov	r4,r2
  855088:	084fe740 	call	84fe74 <OSSemPost>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  85508c:	0005303a 	rdctl	r2,status
  855090:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  855094:	e0fff717 	ldw	r3,-36(fp)
  855098:	00bfff84 	movi	r2,-2
  85509c:	1884703a 	and	r2,r3,r2
  8550a0:	1001703a 	wrctl	status,r2
  
  return context;
  8550a4:	e0bff717 	ldw	r2,-36(fp)
  /*
   * Ensure that interrupts are enabled, so that the circular buffer can
   * re-fill.
   */

  context = alt_irq_disable_all ();
  8550a8:	e0bff415 	stw	r2,-48(fp)
  sp->ctrl |= FIFOED_AVALON_UART_CONTROL_RRDY_MSK;
  8550ac:	e0bffc17 	ldw	r2,-16(fp)
  8550b0:	10800117 	ldw	r2,4(r2)
  8550b4:	10c02014 	ori	r3,r2,128
  8550b8:	e0bffc17 	ldw	r2,-16(fp)
  8550bc:	10c00115 	stw	r3,4(r2)
  IOWR_FIFOED_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  8550c0:	e0bffc17 	ldw	r2,-16(fp)
  8550c4:	10800017 	ldw	r2,0(r2)
  8550c8:	10800304 	addi	r2,r2,12
  8550cc:	e0fffc17 	ldw	r3,-16(fp)
  8550d0:	18c00117 	ldw	r3,4(r3)
  8550d4:	10c00035 	stwio	r3,0(r2)
  8550d8:	e0bff417 	ldw	r2,-48(fp)
  8550dc:	e0bff315 	stw	r2,-52(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8550e0:	e0bff317 	ldw	r2,-52(fp)
  8550e4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* Return the number of bytes read */

  return count;
  8550e8:	e0bff017 	ldw	r2,-64(fp)
}
  8550ec:	e037883a 	mov	sp,fp
  8550f0:	dfc00117 	ldw	ra,4(sp)
  8550f4:	df000017 	ldw	fp,0(sp)
  8550f8:	dec00204 	addi	sp,sp,8
  8550fc:	f800283a 	ret

00855100 <fifoed_avalon_uart_write>:
 * transfered to a circular buffer. The interrupt handler is then responsible
 * for copying data from this buffer into the device.
 */

int fifoed_avalon_uart_write (fifoed_avalon_uart_state* sp, const char* ptr, int len, int flags)
{
  855100:	deffec04 	addi	sp,sp,-80
  855104:	dfc01315 	stw	ra,76(sp)
  855108:	df001215 	stw	fp,72(sp)
  85510c:	df001204 	addi	fp,sp,72
  855110:	e13ffc15 	stw	r4,-16(fp)
  855114:	e17ffd15 	stw	r5,-12(fp)
  855118:	e1bffe15 	stw	r6,-8(fp)
  85511c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             no_block;
  alt_u32         next;
  int count                = len;
  855120:	e0bffe17 	ldw	r2,-8(fp)
  855124:	e0bfef15 	stw	r2,-68(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  no_block = (flags & O_NONBLOCK);
  855128:	e0bfff17 	ldw	r2,-4(fp)
  85512c:	1090000c 	andi	r2,r2,16384
  855130:	e0bff015 	stw	r2,-64(fp)
  /*
   * When running in a multi threaded environment, obtain the "write_lock"
   * semaphore. This ensures that writing to the device is thread-safe.
   */

  ALT_SEM_PEND (sp->write_lock, 0);
  855134:	e0bffc17 	ldw	r2,-16(fp)
  855138:	10800917 	ldw	r2,36(r2)
  85513c:	e0bff815 	stw	r2,-32(fp)
  855140:	e03ff90d 	sth	zero,-28(fp)
  855144:	e0bff90b 	ldhu	r2,-28(fp)
  855148:	e0fffb44 	addi	r3,fp,-19
  85514c:	180d883a 	mov	r6,r3
  855150:	100b883a 	mov	r5,r2
  855154:	e13ff817 	ldw	r4,-32(fp)
  855158:	084fafc0 	call	84fafc <OSSemPend>
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  85515c:	00005106 	br	8552a4 <fifoed_avalon_uart_write+0x1a4>
  {
    /* Determine the next slot in the buffer to access */

    next = (sp->tx_end + 1) & FIFOED_AVALON_UART_BUF_MSK;
  855160:	e0bffc17 	ldw	r2,-16(fp)
  855164:	10800517 	ldw	r2,20(r2)
  855168:	10800044 	addi	r2,r2,1
  85516c:	10800fcc 	andi	r2,r2,63
  855170:	e0bff215 	stw	r2,-56(fp)

    /* block waiting for space if necessary */

    if (next == sp->tx_start)
  855174:	e0bffc17 	ldw	r2,-16(fp)
  855178:	10c00417 	ldw	r3,16(r2)
  85517c:	e0bff217 	ldw	r2,-56(fp)
  855180:	1880371e 	bne	r3,r2,855260 <fifoed_avalon_uart_write+0x160>
    {
      if (no_block)
  855184:	e0bff017 	ldw	r2,-64(fp)
  855188:	10000526 	beq	r2,zero,8551a0 <fifoed_avalon_uart_write+0xa0>
      {
        /* Set errno to indicate why this function returned early */
 
        ALT_ERRNO = EWOULDBLOCK;
  85518c:	0854e680 	call	854e68 <alt_get_errno>
  855190:	1007883a 	mov	r3,r2
  855194:	008002c4 	movi	r2,11
  855198:	18800015 	stw	r2,0(r3)
        break;
  85519c:	00004306 	br	8552ac <fifoed_avalon_uart_write+0x1ac>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8551a0:	0005303a 	rdctl	r2,status
  8551a4:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8551a8:	e0fff517 	ldw	r3,-44(fp)
  8551ac:	00bfff84 	movi	r2,-2
  8551b0:	1884703a 	and	r2,r3,r2
  8551b4:	1001703a 	wrctl	status,r2
  
  return context;
  8551b8:	e0bff517 	ldw	r2,-44(fp)
      {
        /* Block waiting for space in the circular buffer */

        /* First, ensure transmit interrupts are enabled to avoid deadlock */

        context = alt_irq_disable_all ();
  8551bc:	e0bff415 	stw	r2,-48(fp)
        sp->ctrl |= (FIFOED_AVALON_UART_CONTROL_TRDY_MSK |
  8551c0:	e0bffc17 	ldw	r2,-16(fp)
  8551c4:	10800117 	ldw	r2,4(r2)
  8551c8:	10c11014 	ori	r3,r2,1088
  8551cc:	e0bffc17 	ldw	r2,-16(fp)
  8551d0:	10c00115 	stw	r3,4(r2)
                        FIFOED_AVALON_UART_CONTROL_DCTS_MSK);
        IOWR_FIFOED_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  8551d4:	e0bffc17 	ldw	r2,-16(fp)
  8551d8:	10800017 	ldw	r2,0(r2)
  8551dc:	10800304 	addi	r2,r2,12
  8551e0:	e0fffc17 	ldw	r3,-16(fp)
  8551e4:	18c00117 	ldw	r3,4(r3)
  8551e8:	10c00035 	stwio	r3,0(r2)
  8551ec:	e0bff417 	ldw	r2,-48(fp)
  8551f0:	e0bff115 	stw	r2,-60(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8551f4:	e0bff117 	ldw	r2,-60(fp)
  8551f8:	1001703a 	wrctl	status,r2
           * flag set in the interrupt service routine. This avoids wasting CPU
           * cycles waiting in this thread, when we could be doing something
           * more profitable elsewhere.
           */

          ALT_FLAG_PEND (sp->events,
  8551fc:	e0bffc17 	ldw	r2,-16(fp)
  855200:	10800717 	ldw	r2,28(r2)
  855204:	e0bff315 	stw	r2,-52(fp)
  855208:	00800084 	movi	r2,2
  85520c:	e0bff98d 	sth	r2,-26(fp)
  855210:	00bfe0c4 	movi	r2,-125
  855214:	e0bffa05 	stb	r2,-24(fp)
  855218:	e03ffa8d 	sth	zero,-22(fp)
                   OS_FLAGS flags, 
                   INT8U wait_type, 
                   INT16U timeout)
{
  INT8U err;
  if (OSRunning)
  85521c:	d0a0a343 	ldbu	r2,-32115(gp)
  855220:	10803fcc 	andi	r2,r2,255
  855224:	10000a26 	beq	r2,zero,855250 <fifoed_avalon_uart_write+0x150>
  {
    OSFlagPend (group, flags, wait_type, timeout, &err);
  855228:	e0fff98b 	ldhu	r3,-26(fp)
  85522c:	e13ffa03 	ldbu	r4,-24(fp)
  855230:	e17ffa8b 	ldhu	r5,-22(fp)
  855234:	e0bffb04 	addi	r2,fp,-20
  855238:	d8800015 	stw	r2,0(sp)
  85523c:	280f883a 	mov	r7,r5
  855240:	200d883a 	mov	r6,r4
  855244:	180b883a 	mov	r5,r3
  855248:	e13ff317 	ldw	r4,-52(fp)
  85524c:	084d0880 	call	84d088 <OSFlagPend>
                         ALT_UART_WRITE_RDY,
                         OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                         0);
        }
        while ((next == sp->tx_start));
  855250:	e0bffc17 	ldw	r2,-16(fp)
  855254:	10c00417 	ldw	r3,16(r2)
  855258:	e0bff217 	ldw	r2,-56(fp)
  85525c:	18bfe726 	beq	r3,r2,8551fc <__alt_mem_epcs_flash_controller_0+0xff84c1fc>
      }
    }

    count--;
  855260:	e0bfef17 	ldw	r2,-68(fp)
  855264:	10bfffc4 	addi	r2,r2,-1
  855268:	e0bfef15 	stw	r2,-68(fp)

    /* Add the next character to the transmit buffer */

    sp->tx_buf[sp->tx_end] = *ptr++;
  85526c:	e0bffc17 	ldw	r2,-16(fp)
  855270:	10c00517 	ldw	r3,20(r2)
  855274:	e0bffd17 	ldw	r2,-12(fp)
  855278:	11000044 	addi	r4,r2,1
  85527c:	e13ffd15 	stw	r4,-12(fp)
  855280:	10800003 	ldbu	r2,0(r2)
  855284:	1009883a 	mov	r4,r2
  855288:	e0bffc17 	ldw	r2,-16(fp)
  85528c:	10c5883a 	add	r2,r2,r3
  855290:	10801a04 	addi	r2,r2,104
  855294:	11000005 	stb	r4,0(r2)
    sp->tx_end = next;
  855298:	e0bffc17 	ldw	r2,-16(fp)
  85529c:	e0fff217 	ldw	r3,-56(fp)
  8552a0:	10c00515 	stw	r3,20(r2)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  8552a4:	e0bfef17 	ldw	r2,-68(fp)
  8552a8:	103fad1e 	bne	r2,zero,855160 <__alt_mem_epcs_flash_controller_0+0xff84c160>
  /*
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->write_lock);
  8552ac:	e0bffc17 	ldw	r2,-16(fp)
  8552b0:	10800917 	ldw	r2,36(r2)
  8552b4:	1009883a 	mov	r4,r2
  8552b8:	084fe740 	call	84fe74 <OSSemPost>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8552bc:	0005303a 	rdctl	r2,status
  8552c0:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8552c4:	e0fff717 	ldw	r3,-36(fp)
  8552c8:	00bfff84 	movi	r2,-2
  8552cc:	1884703a 	and	r2,r3,r2
  8552d0:	1001703a 	wrctl	status,r2
  
  return context;
  8552d4:	e0bff717 	ldw	r2,-36(fp)
  /* 
   * Ensure that interrupts are enabled, so that the circular buffer can 
   * drain.
   */

  context = alt_irq_disable_all ();
  8552d8:	e0bff415 	stw	r2,-48(fp)
  sp->ctrl |= FIFOED_AVALON_UART_CONTROL_TRDY_MSK |
  8552dc:	e0bffc17 	ldw	r2,-16(fp)
  8552e0:	10800117 	ldw	r2,4(r2)
  8552e4:	10c11014 	ori	r3,r2,1088
  8552e8:	e0bffc17 	ldw	r2,-16(fp)
  8552ec:	10c00115 	stw	r3,4(r2)
                 FIFOED_AVALON_UART_CONTROL_DCTS_MSK;
  IOWR_FIFOED_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  8552f0:	e0bffc17 	ldw	r2,-16(fp)
  8552f4:	10800017 	ldw	r2,0(r2)
  8552f8:	10800304 	addi	r2,r2,12
  8552fc:	e0fffc17 	ldw	r3,-16(fp)
  855300:	18c00117 	ldw	r3,4(r3)
  855304:	10c00035 	stwio	r3,0(r2)
  855308:	e0bff417 	ldw	r2,-48(fp)
  85530c:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  855310:	e0bff617 	ldw	r2,-40(fp)
  855314:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* return the number of bytes written */

  return (len - count);
  855318:	e0fffe17 	ldw	r3,-8(fp)
  85531c:	e0bfef17 	ldw	r2,-68(fp)
  855320:	1885c83a 	sub	r2,r3,r2
}
  855324:	e037883a 	mov	sp,fp
  855328:	dfc00117 	ldw	ra,4(sp)
  85532c:	df000017 	ldw	fp,0(sp)
  855330:	dec00204 	addi	sp,sp,8
  855334:	f800283a 	ret

00855338 <fifoed_avalon_uart_rxirq>:
 * dat ready to be processed.
 */

static void fifoed_avalon_uart_rxirq (fifoed_avalon_uart_state* sp,
                                   alt_u32              status)
{
  855338:	defff904 	addi	sp,sp,-28
  85533c:	dfc00615 	stw	ra,24(sp)
  855340:	df000515 	stw	fp,20(sp)
  855344:	df000504 	addi	fp,sp,20
  855348:	e13ffe15 	stw	r4,-8(fp)
  85534c:	e17fff15 	stw	r5,-4(fp)
   * previously empty.
   */
// allow to read as many as it can.
// (KN) fix the erronous status check (should be bit-wise AND rather than logical AND)
// while ( IORD_FIFOED_AVALON_UART_STATUS(sp->base) && FIFOED_AVALON_UART_STATUS_RRDY_MSK){
while ( IORD_FIFOED_AVALON_UART_STATUS(sp->base) & FIFOED_AVALON_UART_STATUS_RRDY_MSK){
  855350:	00004106 	br	855458 <fifoed_avalon_uart_rxirq+0x120>
  if (sp->rx_end == sp->rx_start)
  855354:	e0bffe17 	ldw	r2,-8(fp)
  855358:	10c00317 	ldw	r3,12(r2)
  85535c:	e0bffe17 	ldw	r2,-8(fp)
  855360:	10800217 	ldw	r2,8(r2)
  855364:	1880121e 	bne	r3,r2,8553b0 <fifoed_avalon_uart_rxirq+0x78>
  {
    ALT_FLAG_POST (sp->events, ALT_UART_READ_RDY, OS_FLAG_SET);
  855368:	e0bffe17 	ldw	r2,-8(fp)
  85536c:	10800717 	ldw	r2,28(r2)
  855370:	e0bffc15 	stw	r2,-16(fp)
  855374:	00800044 	movi	r2,1
  855378:	e0bffd0d 	sth	r2,-12(fp)
  85537c:	00800044 	movi	r2,1
  855380:	e0bffd85 	stb	r2,-10(fp)
                   OS_FLAGS     flags, 
                   INT8U        opt)
{
  INT8U err;

  if (OSRunning)
  855384:	d0a0a343 	ldbu	r2,-32115(gp)
  855388:	10803fcc 	andi	r2,r2,255
  85538c:	10000826 	beq	r2,zero,8553b0 <fifoed_avalon_uart_rxirq+0x78>
  {
    OSFlagPost (group, flags, opt, &err);
  855390:	e0bffd0b 	ldhu	r2,-12(fp)
  855394:	e0fffd83 	ldbu	r3,-10(fp)
  855398:	e13ffdc4 	addi	r4,fp,-9
  85539c:	200f883a 	mov	r7,r4
  8553a0:	180d883a 	mov	r6,r3
  8553a4:	100b883a 	mov	r5,r2
  8553a8:	e13ffc17 	ldw	r4,-16(fp)
  8553ac:	084d6a00 	call	84d6a0 <OSFlagPost>
  }

  /* Determine which slot to use next in the circular buffer */

  next = (sp->rx_end + 1) & FIFOED_AVALON_UART_BUF_MSK;
  8553b0:	e0bffe17 	ldw	r2,-8(fp)
  8553b4:	10800317 	ldw	r2,12(r2)
  8553b8:	10800044 	addi	r2,r2,1
  8553bc:	10800fcc 	andi	r2,r2,63
  8553c0:	e0bffb15 	stw	r2,-20(fp)

  /* Transfer data from the device to the circular buffer */

  sp->rx_buf[sp->rx_end] = IORD_FIFOED_AVALON_UART_RXDATA(sp->base);
  8553c4:	e0bffe17 	ldw	r2,-8(fp)
  8553c8:	10800317 	ldw	r2,12(r2)
  8553cc:	e0fffe17 	ldw	r3,-8(fp)
  8553d0:	18c00017 	ldw	r3,0(r3)
  8553d4:	18c00037 	ldwio	r3,0(r3)
  8553d8:	1809883a 	mov	r4,r3
  8553dc:	e0fffe17 	ldw	r3,-8(fp)
  8553e0:	1885883a 	add	r2,r3,r2
  8553e4:	10800a04 	addi	r2,r2,40
  8553e8:	11000005 	stb	r4,0(r2)
  /* If there was an error, discard the data */

// i have left this in tack but it is not necissarily right.
// next version of the fifo will track the errors in the fifo. 

  if (status & (FIFOED_AVALON_UART_STATUS_PE_MSK | 
  8553ec:	e0bfff17 	ldw	r2,-4(fp)
  8553f0:	108000cc 	andi	r2,r2,3
  8553f4:	10001f1e 	bne	r2,zero,855474 <fifoed_avalon_uart_rxirq+0x13c>
                  FIFOED_AVALON_UART_STATUS_FE_MSK))
  {
    return;
  }

  sp->rx_end = next;
  8553f8:	e0bffe17 	ldw	r2,-8(fp)
  8553fc:	e0fffb17 	ldw	r3,-20(fp)
  855400:	10c00315 	stw	r3,12(r2)

  next = (sp->rx_end + 1) & FIFOED_AVALON_UART_BUF_MSK;
  855404:	e0bffe17 	ldw	r2,-8(fp)
  855408:	10800317 	ldw	r2,12(r2)
  85540c:	10800044 	addi	r2,r2,1
  855410:	10800fcc 	andi	r2,r2,63
  855414:	e0bffb15 	stw	r2,-20(fp)
  /*
   * If the cicular buffer was full, disable interrupts. Interrupts will be
   * re-enabled when data is removed from the buffer.
   */

  if (next == sp->rx_start)
  855418:	e0bffe17 	ldw	r2,-8(fp)
  85541c:	10c00217 	ldw	r3,8(r2)
  855420:	e0bffb17 	ldw	r2,-20(fp)
  855424:	18800c1e 	bne	r3,r2,855458 <fifoed_avalon_uart_rxirq+0x120>
  {
    sp->ctrl &= ~FIFOED_AVALON_UART_CONTROL_RRDY_MSK;
  855428:	e0bffe17 	ldw	r2,-8(fp)
  85542c:	10c00117 	ldw	r3,4(r2)
  855430:	00bfdfc4 	movi	r2,-129
  855434:	1886703a 	and	r3,r3,r2
  855438:	e0bffe17 	ldw	r2,-8(fp)
  85543c:	10c00115 	stw	r3,4(r2)
    IOWR_FIFOED_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  855440:	e0bffe17 	ldw	r2,-8(fp)
  855444:	10800017 	ldw	r2,0(r2)
  855448:	10800304 	addi	r2,r2,12
  85544c:	e0fffe17 	ldw	r3,-8(fp)
  855450:	18c00117 	ldw	r3,4(r3)
  855454:	10c00035 	stwio	r3,0(r2)
   * previously empty.
   */
// allow to read as many as it can.
// (KN) fix the erronous status check (should be bit-wise AND rather than logical AND)
// while ( IORD_FIFOED_AVALON_UART_STATUS(sp->base) && FIFOED_AVALON_UART_STATUS_RRDY_MSK){
while ( IORD_FIFOED_AVALON_UART_STATUS(sp->base) & FIFOED_AVALON_UART_STATUS_RRDY_MSK){
  855458:	e0bffe17 	ldw	r2,-8(fp)
  85545c:	10800017 	ldw	r2,0(r2)
  855460:	10800204 	addi	r2,r2,8
  855464:	10800037 	ldwio	r2,0(r2)
  855468:	1080200c 	andi	r2,r2,128
  85546c:	103fb91e 	bne	r2,zero,855354 <__alt_mem_epcs_flash_controller_0+0xff84c354>
  855470:	00000106 	br	855478 <fifoed_avalon_uart_rxirq+0x140>
// next version of the fifo will track the errors in the fifo. 

  if (status & (FIFOED_AVALON_UART_STATUS_PE_MSK | 
                  FIFOED_AVALON_UART_STATUS_FE_MSK))
  {
    return;
  855474:	0001883a 	nop
  {
    sp->ctrl &= ~FIFOED_AVALON_UART_CONTROL_RRDY_MSK;
    IOWR_FIFOED_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  }   
}
}
  855478:	e037883a 	mov	sp,fp
  85547c:	dfc00117 	ldw	ra,4(sp)
  855480:	df000017 	ldw	fp,0(sp)
  855484:	dec00204 	addi	sp,sp,8
  855488:	f800283a 	ret

0085548c <fifoed_avalon_uart_txirq>:
 * data ready to be processed.
 */

static void fifoed_avalon_uart_txirq (fifoed_avalon_uart_state* sp,
                                   alt_u32              status)
{
  85548c:	defffa04 	addi	sp,sp,-24
  855490:	dfc00515 	stw	ra,20(sp)
  855494:	df000415 	stw	fp,16(sp)
  855498:	df000404 	addi	fp,sp,16
  85549c:	e13ffe15 	stw	r4,-8(fp)
  8554a0:	e17fff15 	stw	r5,-4(fp)
  /* Transfer data if there is some ready to be transfered */

  if (sp->tx_start != sp->tx_end)
  8554a4:	e0bffe17 	ldw	r2,-8(fp)
  8554a8:	10c00417 	ldw	r3,16(r2)
  8554ac:	e0bffe17 	ldw	r2,-8(fp)
  8554b0:	10800517 	ldw	r2,20(r2)
  8554b4:	18805326 	beq	r3,r2,855604 <fifoed_avalon_uart_txirq+0x178>
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & FIFOED_AVALON_UART_FC) ||
  8554b8:	e0bffe17 	ldw	r2,-8(fp)
  8554bc:	10800617 	ldw	r2,24(r2)
  8554c0:	1080008c 	andi	r2,r2,2
  8554c4:	10000326 	beq	r2,zero,8554d4 <fifoed_avalon_uart_txirq+0x48>
      (status & FIFOED_AVALON_UART_STATUS_CTS_MSK))
  8554c8:	e0bfff17 	ldw	r2,-4(fp)
  8554cc:	1082000c 	andi	r2,r2,2048
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & FIFOED_AVALON_UART_FC) ||
  8554d0:	10003e26 	beq	r2,zero,8555cc <fifoed_avalon_uart_txirq+0x140>
       * In a multi-threaded environment, set the write event flag to indicate
       * that there is space in the circular buffer. This is only done if the
       * buffer was previously empty.
       */

      if (sp->tx_start == ((sp->tx_end + 1) & FIFOED_AVALON_UART_BUF_MSK))
  8554d4:	e0bffe17 	ldw	r2,-8(fp)
  8554d8:	10c00417 	ldw	r3,16(r2)
  8554dc:	e0bffe17 	ldw	r2,-8(fp)
  8554e0:	10800517 	ldw	r2,20(r2)
  8554e4:	10800044 	addi	r2,r2,1
  8554e8:	10800fcc 	andi	r2,r2,63
  8554ec:	1880261e 	bne	r3,r2,855588 <fifoed_avalon_uart_txirq+0xfc>
      { 
        ALT_FLAG_POST (sp->events,
  8554f0:	e0bffe17 	ldw	r2,-8(fp)
  8554f4:	10800717 	ldw	r2,28(r2)
  8554f8:	e0bffc15 	stw	r2,-16(fp)
  8554fc:	00800084 	movi	r2,2
  855500:	e0bffd0d 	sth	r2,-12(fp)
  855504:	00800044 	movi	r2,1
  855508:	e0bffd85 	stb	r2,-10(fp)
                   OS_FLAGS     flags, 
                   INT8U        opt)
{
  INT8U err;

  if (OSRunning)
  85550c:	d0a0a343 	ldbu	r2,-32115(gp)
  855510:	10803fcc 	andi	r2,r2,255
  855514:	10001c26 	beq	r2,zero,855588 <fifoed_avalon_uart_txirq+0xfc>
  {
    OSFlagPost (group, flags, opt, &err);
  855518:	e0bffd0b 	ldhu	r2,-12(fp)
  85551c:	e0fffd83 	ldbu	r3,-10(fp)
  855520:	e13ffdc4 	addi	r4,fp,-9
  855524:	200f883a 	mov	r7,r4
  855528:	180d883a 	mov	r6,r3
  85552c:	100b883a 	mov	r5,r2
  855530:	e13ffc17 	ldw	r4,-16(fp)
  855534:	084d6a00 	call	84d6a0 <OSFlagPost>
                       OS_FLAG_SET);
      }

      /* Write the data to the device */
      // updated to allow mutiple writes here if the fifos are enabled.
       while ((sp->tx_start != sp->tx_end) &&
  855538:	00001306 	br	855588 <fifoed_avalon_uart_txirq+0xfc>
          (IORD_FIFOED_AVALON_UART_STATUS(sp->base) & FIFOED_AVALON_UART_STATUS_TRDY_MSK))
          {
              IOWR_FIFOED_AVALON_UART_TXDATA(sp->base, sp->tx_buf[sp->tx_start]);
  85553c:	e0bffe17 	ldw	r2,-8(fp)
  855540:	10800017 	ldw	r2,0(r2)
  855544:	10800104 	addi	r2,r2,4
  855548:	e0fffe17 	ldw	r3,-8(fp)
  85554c:	18c00417 	ldw	r3,16(r3)
  855550:	e13ffe17 	ldw	r4,-8(fp)
  855554:	20c7883a 	add	r3,r4,r3
  855558:	18c01a04 	addi	r3,r3,104
  85555c:	18c00003 	ldbu	r3,0(r3)
  855560:	18c03fcc 	andi	r3,r3,255
  855564:	10c00035 	stwio	r3,0(r2)

              sp->tx_start = (++sp->tx_start) & FIFOED_AVALON_UART_BUF_MSK;
  855568:	e0bffe17 	ldw	r2,-8(fp)
  85556c:	10800417 	ldw	r2,16(r2)
  855570:	10800044 	addi	r2,r2,1
  855574:	e0fffe17 	ldw	r3,-8(fp)
  855578:	18800415 	stw	r2,16(r3)
  85557c:	10c00fcc 	andi	r3,r2,63
  855580:	e0bffe17 	ldw	r2,-8(fp)
  855584:	10c00415 	stw	r3,16(r2)
                       OS_FLAG_SET);
      }

      /* Write the data to the device */
      // updated to allow mutiple writes here if the fifos are enabled.
       while ((sp->tx_start != sp->tx_end) &&
  855588:	e0bffe17 	ldw	r2,-8(fp)
  85558c:	10c00417 	ldw	r3,16(r2)
  855590:	e0bffe17 	ldw	r2,-8(fp)
  855594:	10800517 	ldw	r2,20(r2)
  855598:	18800626 	beq	r3,r2,8555b4 <fifoed_avalon_uart_txirq+0x128>
          (IORD_FIFOED_AVALON_UART_STATUS(sp->base) & FIFOED_AVALON_UART_STATUS_TRDY_MSK))
  85559c:	e0bffe17 	ldw	r2,-8(fp)
  8555a0:	10800017 	ldw	r2,0(r2)
  8555a4:	10800204 	addi	r2,r2,8
  8555a8:	10800037 	ldwio	r2,0(r2)
  8555ac:	1080100c 	andi	r2,r2,64
                       OS_FLAG_SET);
      }

      /* Write the data to the device */
      // updated to allow mutiple writes here if the fifos are enabled.
       while ((sp->tx_start != sp->tx_end) &&
  8555b0:	103fe21e 	bne	r2,zero,85553c <__alt_mem_epcs_flash_controller_0+0xff84c53c>
      /*
       * In case the tranmit interrupt had previously been disabled by 
       * detecting a low value on CTS, it is reenabled here.
       */ 

      sp->ctrl |= FIFOED_AVALON_UART_CONTROL_TRDY_MSK;
  8555b4:	e0bffe17 	ldw	r2,-8(fp)
  8555b8:	10800117 	ldw	r2,4(r2)
  8555bc:	10c01014 	ori	r3,r2,64
  8555c0:	e0bffe17 	ldw	r2,-8(fp)
  8555c4:	10c00115 	stw	r3,4(r2)
  8555c8:	00000e06 	br	855604 <fifoed_avalon_uart_txirq+0x178>
       * the last write to the status register. To avoid this resulting in
       * deadlock, it's necessary to re-check the status register here
       * before throttling.
       */
 
      status = IORD_FIFOED_AVALON_UART_STATUS(sp->base);
  8555cc:	e0bffe17 	ldw	r2,-8(fp)
  8555d0:	10800017 	ldw	r2,0(r2)
  8555d4:	10800204 	addi	r2,r2,8
  8555d8:	10800037 	ldwio	r2,0(r2)
  8555dc:	e0bfff15 	stw	r2,-4(fp)

      if (!(status & FIFOED_AVALON_UART_STATUS_CTS_MSK))
  8555e0:	e0bfff17 	ldw	r2,-4(fp)
  8555e4:	1082000c 	andi	r2,r2,2048
  8555e8:	1000061e 	bne	r2,zero,855604 <fifoed_avalon_uart_txirq+0x178>
      {
        sp->ctrl &= ~FIFOED_AVALON_UART_CONTROL_TRDY_MSK;
  8555ec:	e0bffe17 	ldw	r2,-8(fp)
  8555f0:	10c00117 	ldw	r3,4(r2)
  8555f4:	00bfefc4 	movi	r2,-65
  8555f8:	1886703a 	and	r3,r3,r2
  8555fc:	e0bffe17 	ldw	r2,-8(fp)
  855600:	10c00115 	stw	r3,4(r2)
  /*
   * If the circular buffer is empty, disable the interrupt. This will be
   * re-enabled when new data is placed in the buffer.
   */

  if (sp->tx_start == sp->tx_end)
  855604:	e0bffe17 	ldw	r2,-8(fp)
  855608:	10c00417 	ldw	r3,16(r2)
  85560c:	e0bffe17 	ldw	r2,-8(fp)
  855610:	10800517 	ldw	r2,20(r2)
  855614:	1880061e 	bne	r3,r2,855630 <fifoed_avalon_uart_txirq+0x1a4>
  {
    sp->ctrl &= ~(FIFOED_AVALON_UART_CONTROL_TRDY_MSK |
  855618:	e0bffe17 	ldw	r2,-8(fp)
  85561c:	10c00117 	ldw	r3,4(r2)
  855620:	00beefc4 	movi	r2,-1089
  855624:	1886703a 	and	r3,r3,r2
  855628:	e0bffe17 	ldw	r2,-8(fp)
  85562c:	10c00115 	stw	r3,4(r2)
                    FIFOED_AVALON_UART_CONTROL_DCTS_MSK);
  }

  IOWR_FIFOED_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  855630:	e0bffe17 	ldw	r2,-8(fp)
  855634:	10800017 	ldw	r2,0(r2)
  855638:	10800304 	addi	r2,r2,12
  85563c:	e0fffe17 	ldw	r3,-8(fp)
  855640:	18c00117 	ldw	r3,4(r3)
  855644:	10c00035 	stwio	r3,0(r2)
}
  855648:	0001883a 	nop
  85564c:	e037883a 	mov	sp,fp
  855650:	dfc00117 	ldw	ra,4(sp)
  855654:	df000017 	ldw	fp,0(sp)
  855658:	dec00204 	addi	sp,sp,8
  85565c:	f800283a 	ret

00855660 <fifoed_avalon_uart_irq>:
 #ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void fifoed_avalon_uart_irq(void* context)
#else
static void fifoed_avalon_uart_irq(void* context, alt_u32 id)
#endif
{
  855660:	defffa04 	addi	sp,sp,-24
  855664:	dfc00515 	stw	ra,20(sp)
  855668:	df000415 	stw	fp,16(sp)
  85566c:	df000404 	addi	fp,sp,16
  855670:	e13fff15 	stw	r4,-4(fp)
  alt_u32 status;

  fifoed_avalon_uart_state* sp = (fifoed_avalon_uart_state*) context;
  855674:	e0bfff17 	ldw	r2,-4(fp)
  855678:	e0bffc15 	stw	r2,-16(fp)
  void* base               = sp->base;
  85567c:	e0bffc17 	ldw	r2,-16(fp)
  855680:	10800017 	ldw	r2,0(r2)
  855684:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Read the status register in order to determine the cause of the
   * interrupt.
   */

  status = IORD_FIFOED_AVALON_UART_STATUS(base);
  855688:	e0bffd17 	ldw	r2,-12(fp)
  85568c:	10800204 	addi	r2,r2,8
  855690:	10800037 	ldwio	r2,0(r2)
  855694:	e0bffe15 	stw	r2,-8(fp)

  /* Clear any error flags set at the device */

  IOWR_FIFOED_AVALON_UART_STATUS(base, 0);
  855698:	e0bffd17 	ldw	r2,-12(fp)
  85569c:	10800204 	addi	r2,r2,8
  8556a0:	0007883a 	mov	r3,zero
  8556a4:	10c00035 	stwio	r3,0(r2)

  /* process a read irq */
 
  if (status & FIFOED_AVALON_UART_STATUS_RRDY_MSK)
  8556a8:	e0bffe17 	ldw	r2,-8(fp)
  8556ac:	1080200c 	andi	r2,r2,128
  8556b0:	10000326 	beq	r2,zero,8556c0 <fifoed_avalon_uart_irq+0x60>
  {
    fifoed_avalon_uart_rxirq (sp, status);
  8556b4:	e17ffe17 	ldw	r5,-8(fp)
  8556b8:	e13ffc17 	ldw	r4,-16(fp)
  8556bc:	08553380 	call	855338 <fifoed_avalon_uart_rxirq>
  }

  /* process a write irq */

  if (status & (FIFOED_AVALON_UART_STATUS_TRDY_MSK | 
  8556c0:	e0bffe17 	ldw	r2,-8(fp)
  8556c4:	1081100c 	andi	r2,r2,1088
  8556c8:	10000326 	beq	r2,zero,8556d8 <fifoed_avalon_uart_irq+0x78>
                  FIFOED_AVALON_UART_STATUS_DCTS_MSK))
  {
    fifoed_avalon_uart_txirq (sp, status);
  8556cc:	e17ffe17 	ldw	r5,-8(fp)
  8556d0:	e13ffc17 	ldw	r4,-16(fp)
  8556d4:	085548c0 	call	85548c <fifoed_avalon_uart_txirq>
  }
}
  8556d8:	0001883a 	nop
  8556dc:	e037883a 	mov	sp,fp
  8556e0:	dfc00117 	ldw	ra,4(sp)
  8556e4:	df000017 	ldw	fp,0(sp)
  8556e8:	dec00204 	addi	sp,sp,8
  8556ec:	f800283a 	ret

008556f0 <fifoed_avalon_uart_init>:
 * through a call to alt_dev_reg().
 */

void fifoed_avalon_uart_init (fifoed_avalon_uart_state* sp,alt_u32 irq_controller_id,
      alt_u32 irq)
{
  8556f0:	defff304 	addi	sp,sp,-52
  8556f4:	dfc00c15 	stw	ra,48(sp)
  8556f8:	df000b15 	stw	fp,44(sp)
  8556fc:	df000b04 	addi	fp,sp,44
  855700:	e13ffd15 	stw	r4,-12(fp)
  855704:	e17ffe15 	stw	r5,-8(fp)
  855708:	e1bfff15 	stw	r6,-4(fp)
  void* base = sp->base;
  85570c:	e0bffd17 	ldw	r2,-12(fp)
  855710:	10800017 	ldw	r2,0(r2)
  855714:	e0bff615 	stw	r2,-40(fp)
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */

  error = ALT_FLAG_CREATE (&sp->events, 0)    ||
  855718:	e0bffd17 	ldw	r2,-12(fp)
  85571c:	10800704 	addi	r2,r2,28
  855720:	e0bffa15 	stw	r2,-24(fp)
  855724:	e03ffb0d 	sth	zero,-20(fp)

static ALT_INLINE int ALT_ALWAYS_INLINE alt_flag_create (OS_FLAG_GRP** pgroup, 
               OS_FLAGS flags)
{
  INT8U err;
  *pgroup = OSFlagCreate (flags, &err);
  855728:	e0bffb0b 	ldhu	r2,-20(fp)
  85572c:	e0fffc84 	addi	r3,fp,-14
  855730:	180b883a 	mov	r5,r3
  855734:	1009883a 	mov	r4,r2
  855738:	084cac40 	call	84cac4 <OSFlagCreate>
  85573c:	1007883a 	mov	r3,r2
  855740:	e0bffa17 	ldw	r2,-24(fp)
  855744:	10c00015 	stw	r3,0(r2)
  return err;
  855748:	e0bffc83 	ldbu	r2,-14(fp)
  85574c:	10803fcc 	andi	r2,r2,255
          ALT_SEM_CREATE (&sp->read_lock, 1)   ||
  855750:	1000241e 	bne	r2,zero,8557e4 <fifoed_avalon_uart_init+0xf4>
  855754:	e0bffd17 	ldw	r2,-12(fp)
  855758:	10800804 	addi	r2,r2,32
  85575c:	e0bff715 	stw	r2,-36(fp)
  855760:	00800044 	movi	r2,1
  855764:	e0bffb8d 	sth	r2,-18(fp)
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_create (OS_EVENT** sem, 
              INT16U value)
{
  *sem = OSSemCreate (value);
  855768:	e0bffb8b 	ldhu	r2,-18(fp)
  85576c:	1009883a 	mov	r4,r2
  855770:	084f7e40 	call	84f7e4 <OSSemCreate>
  855774:	1007883a 	mov	r3,r2
  855778:	e0bff717 	ldw	r2,-36(fp)
  85577c:	10c00015 	stw	r3,0(r2)
  return *sem ? 0 : -1;
  855780:	e0bff717 	ldw	r2,-36(fp)
  855784:	10800017 	ldw	r2,0(r2)
  855788:	10000226 	beq	r2,zero,855794 <fifoed_avalon_uart_init+0xa4>
  85578c:	0005883a 	mov	r2,zero
  855790:	00000106 	br	855798 <fifoed_avalon_uart_init+0xa8>
  855794:	00bfffc4 	movi	r2,-1
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */

  error = ALT_FLAG_CREATE (&sp->events, 0)    ||
  855798:	1000121e 	bne	r2,zero,8557e4 <fifoed_avalon_uart_init+0xf4>
          ALT_SEM_CREATE (&sp->read_lock, 1)   ||
          ALT_SEM_CREATE (&sp->write_lock, 1);
  85579c:	e0bffd17 	ldw	r2,-12(fp)
  8557a0:	10800904 	addi	r2,r2,36
  8557a4:	e0bff815 	stw	r2,-32(fp)
  8557a8:	00800044 	movi	r2,1
  8557ac:	e0bffc0d 	sth	r2,-16(fp)
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_create (OS_EVENT** sem, 
              INT16U value)
{
  *sem = OSSemCreate (value);
  8557b0:	e0bffc0b 	ldhu	r2,-16(fp)
  8557b4:	1009883a 	mov	r4,r2
  8557b8:	084f7e40 	call	84f7e4 <OSSemCreate>
  8557bc:	1007883a 	mov	r3,r2
  8557c0:	e0bff817 	ldw	r2,-32(fp)
  8557c4:	10c00015 	stw	r3,0(r2)
  return *sem ? 0 : -1;
  8557c8:	e0bff817 	ldw	r2,-32(fp)
  8557cc:	10800017 	ldw	r2,0(r2)
  8557d0:	10000226 	beq	r2,zero,8557dc <fifoed_avalon_uart_init+0xec>
  8557d4:	0005883a 	mov	r2,zero
  8557d8:	00000106 	br	8557e0 <fifoed_avalon_uart_init+0xf0>
  8557dc:	00bfffc4 	movi	r2,-1
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */

  error = ALT_FLAG_CREATE (&sp->events, 0)    ||
          ALT_SEM_CREATE (&sp->read_lock, 1)   ||
  8557e0:	10000226 	beq	r2,zero,8557ec <fifoed_avalon_uart_init+0xfc>
  8557e4:	00800044 	movi	r2,1
  8557e8:	00000106 	br	8557f0 <fifoed_avalon_uart_init+0x100>
  8557ec:	0005883a 	mov	r2,zero
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */

  error = ALT_FLAG_CREATE (&sp->events, 0)    ||
  8557f0:	e0bff915 	stw	r2,-28(fp)
          ALT_SEM_CREATE (&sp->read_lock, 1)   ||
          ALT_SEM_CREATE (&sp->write_lock, 1);

  if (!error)
  8557f4:	e0bff917 	ldw	r2,-28(fp)
  8557f8:	10000f1e 	bne	r2,zero,855838 <fifoed_avalon_uart_init+0x148>
  {
    /* enable interrupts at the device */

    sp->ctrl = FIFOED_AVALON_UART_CONTROL_RTS_MSK  |
  8557fc:	e0bffd17 	ldw	r2,-12(fp)
  855800:	00c32004 	movi	r3,3200
  855804:	10c00115 	stw	r3,4(r2)
                FIFOED_AVALON_UART_CONTROL_RRDY_MSK |
                FIFOED_AVALON_UART_CONTROL_DCTS_MSK;

    IOWR_FIFOED_AVALON_UART_CONTROL(base, sp->ctrl);
  855808:	e0bff617 	ldw	r2,-40(fp)
  85580c:	10800304 	addi	r2,r2,12
  855810:	e0fffd17 	ldw	r3,-12(fp)
  855814:	18c00117 	ldw	r3,4(r3)
  855818:	10c00035 	stwio	r3,0(r2)

    /* register the interrupt handler */

//    alt_irq_register (irq, sp, fifoed_avalon_uart_irq);
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
    alt_ic_isr_register(irq_controller_id, irq, fifoed_avalon_uart_irq, sp,
  85581c:	d8000015 	stw	zero,0(sp)
  855820:	e1fffd17 	ldw	r7,-12(fp)
  855824:	01802174 	movhi	r6,133
  855828:	31959804 	addi	r6,r6,22112
  85582c:	e17fff17 	ldw	r5,-4(fp)
  855830:	e13ffe17 	ldw	r4,-8(fp)
  855834:	08496c40 	call	8496c4 <alt_ic_isr_register>
      0x0);
#else
    alt_irq_register (irq, sp, fifoed_avalon_uart_irq);
#endif
  }
}
  855838:	0001883a 	nop
  85583c:	e037883a 	mov	sp,fp
  855840:	dfc00117 	ldw	ra,4(sp)
  855844:	df000017 	ldw	fp,0(sp)
  855848:	dec00204 	addi	sp,sp,8
  85584c:	f800283a 	ret

00855850 <fifoed_avalon_uart_classic_read>:
extern int fifoed_avalon_uart_ioctl(fifoed_avalon_uart_state* sp,
  int req, void* arg);

int fifoed_avalon_uart_classic_read(fifoed_avalon_uart_state* sp,
  char* buffer, int space, int flags)
  {
  855850:	defffa04 	addi	sp,sp,-24
  855854:	dfc00515 	stw	ra,20(sp)
  855858:	df000415 	stw	fp,16(sp)
  85585c:	df000404 	addi	fp,sp,16
  855860:	e13ffc15 	stw	r4,-16(fp)
  855864:	e17ffd15 	stw	r5,-12(fp)
  855868:	e1bffe15 	stw	r6,-8(fp)
  85586c:	e1ffff15 	stw	r7,-4(fp)
     return fifoed_avalon_uart_read( sp,
  855870:	e1ffff17 	ldw	r7,-4(fp)
  855874:	e1bffe17 	ldw	r6,-8(fp)
  855878:	e17ffd17 	ldw	r5,-12(fp)
  85587c:	e13ffc17 	ldw	r4,-16(fp)
  855880:	0854ea40 	call	854ea4 <fifoed_avalon_uart_read>
  buffer, space,  flags);
  }
  855884:	e037883a 	mov	sp,fp
  855888:	dfc00117 	ldw	ra,4(sp)
  85588c:	df000017 	ldw	fp,0(sp)
  855890:	dec00204 	addi	sp,sp,8
  855894:	f800283a 	ret

00855898 <fifoed_avalon_uart_classic_write>:

  int fifoed_avalon_uart_classic_write(fifoed_avalon_uart_state* sp,
  const char* ptr, int count, int flags)
  {
  855898:	defffa04 	addi	sp,sp,-24
  85589c:	dfc00515 	stw	ra,20(sp)
  8558a0:	df000415 	stw	fp,16(sp)
  8558a4:	df000404 	addi	fp,sp,16
  8558a8:	e13ffc15 	stw	r4,-16(fp)
  8558ac:	e17ffd15 	stw	r5,-12(fp)
  8558b0:	e1bffe15 	stw	r6,-8(fp)
  8558b4:	e1ffff15 	stw	r7,-4(fp)
     return fifoed_avalon_uart_write( sp,
  8558b8:	e1ffff17 	ldw	r7,-4(fp)
  8558bc:	e1bffe17 	ldw	r6,-8(fp)
  8558c0:	e17ffd17 	ldw	r5,-12(fp)
  8558c4:	e13ffc17 	ldw	r4,-16(fp)
  8558c8:	08551000 	call	855100 <fifoed_avalon_uart_write>
  ptr, count,  flags);
  }
  8558cc:	e037883a 	mov	sp,fp
  8558d0:	dfc00117 	ldw	ra,4(sp)
  8558d4:	df000017 	ldw	fp,0(sp)
  8558d8:	dec00204 	addi	sp,sp,8
  8558dc:	f800283a 	ret

008558e0 <fifoed_avalon_uart_read_fd>:
 *
 */

int
fifoed_avalon_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  8558e0:	defffa04 	addi	sp,sp,-24
  8558e4:	dfc00515 	stw	ra,20(sp)
  8558e8:	df000415 	stw	fp,16(sp)
  8558ec:	df000404 	addi	fp,sp,16
  8558f0:	e13ffd15 	stw	r4,-12(fp)
  8558f4:	e17ffe15 	stw	r5,-8(fp)
  8558f8:	e1bfff15 	stw	r6,-4(fp)
    fifoed_avalon_uart_dev* dev = (fifoed_avalon_uart_dev*) fd->dev;
  8558fc:	e0bffd17 	ldw	r2,-12(fp)
  855900:	10800017 	ldw	r2,0(r2)
  855904:	e0bffc15 	stw	r2,-16(fp)

    return fifoed_avalon_uart_read(&dev->state, buffer, space,
  855908:	e0bffc17 	ldw	r2,-16(fp)
  85590c:	10c00a04 	addi	r3,r2,40
  855910:	e0bffd17 	ldw	r2,-12(fp)
  855914:	10800217 	ldw	r2,8(r2)
  855918:	100f883a 	mov	r7,r2
  85591c:	e1bfff17 	ldw	r6,-4(fp)
  855920:	e17ffe17 	ldw	r5,-8(fp)
  855924:	1809883a 	mov	r4,r3
  855928:	0854ea40 	call	854ea4 <fifoed_avalon_uart_read>
      fd->fd_flags);
}
  85592c:	e037883a 	mov	sp,fp
  855930:	dfc00117 	ldw	ra,4(sp)
  855934:	df000017 	ldw	fp,0(sp)
  855938:	dec00204 	addi	sp,sp,8
  85593c:	f800283a 	ret

00855940 <fifoed_avalon_uart_write_fd>:

int
fifoed_avalon_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  855940:	defffa04 	addi	sp,sp,-24
  855944:	dfc00515 	stw	ra,20(sp)
  855948:	df000415 	stw	fp,16(sp)
  85594c:	df000404 	addi	fp,sp,16
  855950:	e13ffd15 	stw	r4,-12(fp)
  855954:	e17ffe15 	stw	r5,-8(fp)
  855958:	e1bfff15 	stw	r6,-4(fp)
    fifoed_avalon_uart_dev* dev = (fifoed_avalon_uart_dev*) fd->dev;
  85595c:	e0bffd17 	ldw	r2,-12(fp)
  855960:	10800017 	ldw	r2,0(r2)
  855964:	e0bffc15 	stw	r2,-16(fp)

    return fifoed_avalon_uart_write(&dev->state, buffer, space,
  855968:	e0bffc17 	ldw	r2,-16(fp)
  85596c:	10c00a04 	addi	r3,r2,40
  855970:	e0bffd17 	ldw	r2,-12(fp)
  855974:	10800217 	ldw	r2,8(r2)
  855978:	100f883a 	mov	r7,r2
  85597c:	e1bfff17 	ldw	r6,-4(fp)
  855980:	e17ffe17 	ldw	r5,-8(fp)
  855984:	1809883a 	mov	r4,r3
  855988:	08551000 	call	855100 <fifoed_avalon_uart_write>
      fd->fd_flags);
}
  85598c:	e037883a 	mov	sp,fp
  855990:	dfc00117 	ldw	ra,4(sp)
  855994:	df000017 	ldw	fp,0(sp)
  855998:	dec00204 	addi	sp,sp,8
  85599c:	f800283a 	ret

008559a0 <fifoed_avalon_uart_classic_read_fd>:
int
 fifoed_avalon_uart_classic_read_fd(alt_fd* fd, char* buffer, int space)
{
  8559a0:	defffa04 	addi	sp,sp,-24
  8559a4:	dfc00515 	stw	ra,20(sp)
  8559a8:	df000415 	stw	fp,16(sp)
  8559ac:	df000404 	addi	fp,sp,16
  8559b0:	e13ffd15 	stw	r4,-12(fp)
  8559b4:	e17ffe15 	stw	r5,-8(fp)
  8559b8:	e1bfff15 	stw	r6,-4(fp)
    fifoed_avalon_uart_dev* dev = (fifoed_avalon_uart_dev*) fd->dev;
  8559bc:	e0bffd17 	ldw	r2,-12(fp)
  8559c0:	10800017 	ldw	r2,0(r2)
  8559c4:	e0bffc15 	stw	r2,-16(fp)

    return fifoed_avalon_uart_read(&dev->state, buffer, space,
  8559c8:	e0bffc17 	ldw	r2,-16(fp)
  8559cc:	10c00a04 	addi	r3,r2,40
  8559d0:	e0bffd17 	ldw	r2,-12(fp)
  8559d4:	10800217 	ldw	r2,8(r2)
  8559d8:	100f883a 	mov	r7,r2
  8559dc:	e1bfff17 	ldw	r6,-4(fp)
  8559e0:	e17ffe17 	ldw	r5,-8(fp)
  8559e4:	1809883a 	mov	r4,r3
  8559e8:	0854ea40 	call	854ea4 <fifoed_avalon_uart_read>
      fd->fd_flags);
}
  8559ec:	e037883a 	mov	sp,fp
  8559f0:	dfc00117 	ldw	ra,4(sp)
  8559f4:	df000017 	ldw	fp,0(sp)
  8559f8:	dec00204 	addi	sp,sp,8
  8559fc:	f800283a 	ret

00855a00 <fifoed_avalon_uart_classic_write_fd>:

int
fifoed_avalon_uart_classic_write_fd(alt_fd* fd, const char* buffer, int space)
{
  855a00:	defffa04 	addi	sp,sp,-24
  855a04:	dfc00515 	stw	ra,20(sp)
  855a08:	df000415 	stw	fp,16(sp)
  855a0c:	df000404 	addi	fp,sp,16
  855a10:	e13ffd15 	stw	r4,-12(fp)
  855a14:	e17ffe15 	stw	r5,-8(fp)
  855a18:	e1bfff15 	stw	r6,-4(fp)
    fifoed_avalon_uart_dev* dev = (fifoed_avalon_uart_dev*) fd->dev;
  855a1c:	e0bffd17 	ldw	r2,-12(fp)
  855a20:	10800017 	ldw	r2,0(r2)
  855a24:	e0bffc15 	stw	r2,-16(fp)

    return fifoed_avalon_uart_write(&dev->state, buffer, space,
  855a28:	e0bffc17 	ldw	r2,-16(fp)
  855a2c:	10c00a04 	addi	r3,r2,40
  855a30:	e0bffd17 	ldw	r2,-12(fp)
  855a34:	10800217 	ldw	r2,8(r2)
  855a38:	100f883a 	mov	r7,r2
  855a3c:	e1bfff17 	ldw	r6,-4(fp)
  855a40:	e17ffe17 	ldw	r5,-8(fp)
  855a44:	1809883a 	mov	r4,r3
  855a48:	08551000 	call	855100 <fifoed_avalon_uart_write>
      fd->fd_flags);
}
  855a4c:	e037883a 	mov	sp,fp
  855a50:	dfc00117 	ldw	ra,4(sp)
  855a54:	df000017 	ldw	fp,0(sp)
  855a58:	dec00204 	addi	sp,sp,8
  855a5c:	f800283a 	ret

00855a60 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  855a60:	defff504 	addi	sp,sp,-44
  855a64:	df000a15 	stw	fp,40(sp)
  855a68:	df000a04 	addi	fp,sp,40
  855a6c:	e13ffc15 	stw	r4,-16(fp)
  855a70:	e17ffd15 	stw	r5,-12(fp)
  855a74:	e1bffe15 	stw	r6,-8(fp)
  855a78:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  855a7c:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  855a80:	d0a0b817 	ldw	r2,-32032(gp)
  
  if (alt_ticks_per_second ())
  855a84:	10003c26 	beq	r2,zero,855b78 <alt_alarm_start+0x118>
  {
    if (alarm)
  855a88:	e0bffc17 	ldw	r2,-16(fp)
  855a8c:	10003826 	beq	r2,zero,855b70 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  855a90:	e0bffc17 	ldw	r2,-16(fp)
  855a94:	e0fffe17 	ldw	r3,-8(fp)
  855a98:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  855a9c:	e0bffc17 	ldw	r2,-16(fp)
  855aa0:	e0ffff17 	ldw	r3,-4(fp)
  855aa4:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  855aa8:	0005303a 	rdctl	r2,status
  855aac:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  855ab0:	e0fff917 	ldw	r3,-28(fp)
  855ab4:	00bfff84 	movi	r2,-2
  855ab8:	1884703a 	and	r2,r3,r2
  855abc:	1001703a 	wrctl	status,r2
  
  return context;
  855ac0:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  855ac4:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  855ac8:	d0a0b917 	ldw	r2,-32028(gp)
      
      current_nticks = alt_nticks();
  855acc:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  855ad0:	e0fffd17 	ldw	r3,-12(fp)
  855ad4:	e0bff617 	ldw	r2,-40(fp)
  855ad8:	1885883a 	add	r2,r3,r2
  855adc:	10c00044 	addi	r3,r2,1
  855ae0:	e0bffc17 	ldw	r2,-16(fp)
  855ae4:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  855ae8:	e0bffc17 	ldw	r2,-16(fp)
  855aec:	10c00217 	ldw	r3,8(r2)
  855af0:	e0bff617 	ldw	r2,-40(fp)
  855af4:	1880042e 	bgeu	r3,r2,855b08 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  855af8:	e0bffc17 	ldw	r2,-16(fp)
  855afc:	00c00044 	movi	r3,1
  855b00:	10c00405 	stb	r3,16(r2)
  855b04:	00000206 	br	855b10 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  855b08:	e0bffc17 	ldw	r2,-16(fp)
  855b0c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  855b10:	e0bffc17 	ldw	r2,-16(fp)
  855b14:	d0e07f04 	addi	r3,gp,-32260
  855b18:	e0fffa15 	stw	r3,-24(fp)
  855b1c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  855b20:	e0bffb17 	ldw	r2,-20(fp)
  855b24:	e0fffa17 	ldw	r3,-24(fp)
  855b28:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  855b2c:	e0bffa17 	ldw	r2,-24(fp)
  855b30:	10c00017 	ldw	r3,0(r2)
  855b34:	e0bffb17 	ldw	r2,-20(fp)
  855b38:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  855b3c:	e0bffa17 	ldw	r2,-24(fp)
  855b40:	10800017 	ldw	r2,0(r2)
  855b44:	e0fffb17 	ldw	r3,-20(fp)
  855b48:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  855b4c:	e0bffa17 	ldw	r2,-24(fp)
  855b50:	e0fffb17 	ldw	r3,-20(fp)
  855b54:	10c00015 	stw	r3,0(r2)
  855b58:	e0bff817 	ldw	r2,-32(fp)
  855b5c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  855b60:	e0bff717 	ldw	r2,-36(fp)
  855b64:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  855b68:	0005883a 	mov	r2,zero
  855b6c:	00000306 	br	855b7c <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  855b70:	00bffa84 	movi	r2,-22
  855b74:	00000106 	br	855b7c <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  855b78:	00bfde84 	movi	r2,-134
  }
}
  855b7c:	e037883a 	mov	sp,fp
  855b80:	df000017 	ldw	fp,0(sp)
  855b84:	dec00104 	addi	sp,sp,4
  855b88:	f800283a 	ret

00855b8c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  855b8c:	defffe04 	addi	sp,sp,-8
  855b90:	dfc00115 	stw	ra,4(sp)
  855b94:	df000015 	stw	fp,0(sp)
  855b98:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  855b9c:	d0a04917 	ldw	r2,-32476(gp)
  855ba0:	10000326 	beq	r2,zero,855bb0 <alt_get_errno+0x24>
  855ba4:	d0a04917 	ldw	r2,-32476(gp)
  855ba8:	103ee83a 	callr	r2
  855bac:	00000106 	br	855bb4 <alt_get_errno+0x28>
  855bb0:	d0a09204 	addi	r2,gp,-32184
}
  855bb4:	e037883a 	mov	sp,fp
  855bb8:	dfc00117 	ldw	ra,4(sp)
  855bbc:	df000017 	ldw	fp,0(sp)
  855bc0:	dec00204 	addi	sp,sp,8
  855bc4:	f800283a 	ret

00855bc8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  855bc8:	defffa04 	addi	sp,sp,-24
  855bcc:	dfc00515 	stw	ra,20(sp)
  855bd0:	df000415 	stw	fp,16(sp)
  855bd4:	df000404 	addi	fp,sp,16
  855bd8:	e13ffe15 	stw	r4,-8(fp)
  855bdc:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  855be0:	e0bffe17 	ldw	r2,-8(fp)
  855be4:	10000326 	beq	r2,zero,855bf4 <alt_dev_llist_insert+0x2c>
  855be8:	e0bffe17 	ldw	r2,-8(fp)
  855bec:	10800217 	ldw	r2,8(r2)
  855bf0:	1000061e 	bne	r2,zero,855c0c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  855bf4:	0855b8c0 	call	855b8c <alt_get_errno>
  855bf8:	1007883a 	mov	r3,r2
  855bfc:	00800584 	movi	r2,22
  855c00:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  855c04:	00bffa84 	movi	r2,-22
  855c08:	00001306 	br	855c58 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  855c0c:	e0bffe17 	ldw	r2,-8(fp)
  855c10:	e0ffff17 	ldw	r3,-4(fp)
  855c14:	e0fffc15 	stw	r3,-16(fp)
  855c18:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  855c1c:	e0bffd17 	ldw	r2,-12(fp)
  855c20:	e0fffc17 	ldw	r3,-16(fp)
  855c24:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  855c28:	e0bffc17 	ldw	r2,-16(fp)
  855c2c:	10c00017 	ldw	r3,0(r2)
  855c30:	e0bffd17 	ldw	r2,-12(fp)
  855c34:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  855c38:	e0bffc17 	ldw	r2,-16(fp)
  855c3c:	10800017 	ldw	r2,0(r2)
  855c40:	e0fffd17 	ldw	r3,-12(fp)
  855c44:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  855c48:	e0bffc17 	ldw	r2,-16(fp)
  855c4c:	e0fffd17 	ldw	r3,-12(fp)
  855c50:	10c00015 	stw	r3,0(r2)

  return 0;  
  855c54:	0005883a 	mov	r2,zero
}
  855c58:	e037883a 	mov	sp,fp
  855c5c:	dfc00117 	ldw	ra,4(sp)
  855c60:	df000017 	ldw	fp,0(sp)
  855c64:	dec00204 	addi	sp,sp,8
  855c68:	f800283a 	ret

00855c6c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  855c6c:	defffd04 	addi	sp,sp,-12
  855c70:	dfc00215 	stw	ra,8(sp)
  855c74:	df000115 	stw	fp,4(sp)
  855c78:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  855c7c:	00802174 	movhi	r2,133
  855c80:	109aec04 	addi	r2,r2,27568
  855c84:	e0bfff15 	stw	r2,-4(fp)
  855c88:	00000606 	br	855ca4 <_do_ctors+0x38>
        (*ctor) (); 
  855c8c:	e0bfff17 	ldw	r2,-4(fp)
  855c90:	10800017 	ldw	r2,0(r2)
  855c94:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  855c98:	e0bfff17 	ldw	r2,-4(fp)
  855c9c:	10bfff04 	addi	r2,r2,-4
  855ca0:	e0bfff15 	stw	r2,-4(fp)
  855ca4:	e0ffff17 	ldw	r3,-4(fp)
  855ca8:	00802174 	movhi	r2,133
  855cac:	109aed04 	addi	r2,r2,27572
  855cb0:	18bff62e 	bgeu	r3,r2,855c8c <__alt_mem_epcs_flash_controller_0+0xff84cc8c>
        (*ctor) (); 
}
  855cb4:	0001883a 	nop
  855cb8:	e037883a 	mov	sp,fp
  855cbc:	dfc00117 	ldw	ra,4(sp)
  855cc0:	df000017 	ldw	fp,0(sp)
  855cc4:	dec00204 	addi	sp,sp,8
  855cc8:	f800283a 	ret

00855ccc <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  855ccc:	defffd04 	addi	sp,sp,-12
  855cd0:	dfc00215 	stw	ra,8(sp)
  855cd4:	df000115 	stw	fp,4(sp)
  855cd8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  855cdc:	00802174 	movhi	r2,133
  855ce0:	109aec04 	addi	r2,r2,27568
  855ce4:	e0bfff15 	stw	r2,-4(fp)
  855ce8:	00000606 	br	855d04 <_do_dtors+0x38>
        (*dtor) (); 
  855cec:	e0bfff17 	ldw	r2,-4(fp)
  855cf0:	10800017 	ldw	r2,0(r2)
  855cf4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  855cf8:	e0bfff17 	ldw	r2,-4(fp)
  855cfc:	10bfff04 	addi	r2,r2,-4
  855d00:	e0bfff15 	stw	r2,-4(fp)
  855d04:	e0ffff17 	ldw	r3,-4(fp)
  855d08:	00802174 	movhi	r2,133
  855d0c:	109aed04 	addi	r2,r2,27572
  855d10:	18bff62e 	bgeu	r3,r2,855cec <__alt_mem_epcs_flash_controller_0+0xff84ccec>
        (*dtor) (); 
}
  855d14:	0001883a 	nop
  855d18:	e037883a 	mov	sp,fp
  855d1c:	dfc00117 	ldw	ra,4(sp)
  855d20:	df000017 	ldw	fp,0(sp)
  855d24:	dec00204 	addi	sp,sp,8
  855d28:	f800283a 	ret

00855d2c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  855d2c:	defffa04 	addi	sp,sp,-24
  855d30:	dfc00515 	stw	ra,20(sp)
  855d34:	df000415 	stw	fp,16(sp)
  855d38:	df000404 	addi	fp,sp,16
  855d3c:	e13ffe15 	stw	r4,-8(fp)
  855d40:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  855d44:	e0bfff17 	ldw	r2,-4(fp)
  855d48:	10800017 	ldw	r2,0(r2)
  855d4c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  855d50:	e13ffe17 	ldw	r4,-8(fp)
  855d54:	0834c200 	call	834c20 <strlen>
  855d58:	10800044 	addi	r2,r2,1
  855d5c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  855d60:	00000d06 	br	855d98 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  855d64:	e0bffc17 	ldw	r2,-16(fp)
  855d68:	10800217 	ldw	r2,8(r2)
  855d6c:	e0fffd17 	ldw	r3,-12(fp)
  855d70:	180d883a 	mov	r6,r3
  855d74:	e17ffe17 	ldw	r5,-8(fp)
  855d78:	1009883a 	mov	r4,r2
  855d7c:	0856a200 	call	856a20 <memcmp>
  855d80:	1000021e 	bne	r2,zero,855d8c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  855d84:	e0bffc17 	ldw	r2,-16(fp)
  855d88:	00000706 	br	855da8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  855d8c:	e0bffc17 	ldw	r2,-16(fp)
  855d90:	10800017 	ldw	r2,0(r2)
  855d94:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  855d98:	e0fffc17 	ldw	r3,-16(fp)
  855d9c:	e0bfff17 	ldw	r2,-4(fp)
  855da0:	18bff01e 	bne	r3,r2,855d64 <__alt_mem_epcs_flash_controller_0+0xff84cd64>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  855da4:	0005883a 	mov	r2,zero
}
  855da8:	e037883a 	mov	sp,fp
  855dac:	dfc00117 	ldw	ra,4(sp)
  855db0:	df000017 	ldw	fp,0(sp)
  855db4:	dec00204 	addi	sp,sp,8
  855db8:	f800283a 	ret

00855dbc <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  855dbc:	defffb04 	addi	sp,sp,-20
  855dc0:	dfc00415 	stw	ra,16(sp)
  855dc4:	df000315 	stw	fp,12(sp)
  855dc8:	df000304 	addi	fp,sp,12
  855dcc:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  855dd0:	d0a04417 	ldw	r2,-32496(gp)
  855dd4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  855dd8:	00003106 	br	855ea0 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  855ddc:	e0bffd17 	ldw	r2,-12(fp)
  855de0:	10800217 	ldw	r2,8(r2)
  855de4:	1009883a 	mov	r4,r2
  855de8:	0834c200 	call	834c20 <strlen>
  855dec:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  855df0:	e0bffd17 	ldw	r2,-12(fp)
  855df4:	10c00217 	ldw	r3,8(r2)
  855df8:	e0bffe17 	ldw	r2,-8(fp)
  855dfc:	10bfffc4 	addi	r2,r2,-1
  855e00:	1885883a 	add	r2,r3,r2
  855e04:	10800003 	ldbu	r2,0(r2)
  855e08:	10803fcc 	andi	r2,r2,255
  855e0c:	1080201c 	xori	r2,r2,128
  855e10:	10bfe004 	addi	r2,r2,-128
  855e14:	10800bd8 	cmpnei	r2,r2,47
  855e18:	1000031e 	bne	r2,zero,855e28 <alt_find_file+0x6c>
    {
      len -= 1;
  855e1c:	e0bffe17 	ldw	r2,-8(fp)
  855e20:	10bfffc4 	addi	r2,r2,-1
  855e24:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  855e28:	e0bffe17 	ldw	r2,-8(fp)
  855e2c:	e0ffff17 	ldw	r3,-4(fp)
  855e30:	1885883a 	add	r2,r3,r2
  855e34:	10800003 	ldbu	r2,0(r2)
  855e38:	10803fcc 	andi	r2,r2,255
  855e3c:	1080201c 	xori	r2,r2,128
  855e40:	10bfe004 	addi	r2,r2,-128
  855e44:	10800be0 	cmpeqi	r2,r2,47
  855e48:	1000081e 	bne	r2,zero,855e6c <alt_find_file+0xb0>
  855e4c:	e0bffe17 	ldw	r2,-8(fp)
  855e50:	e0ffff17 	ldw	r3,-4(fp)
  855e54:	1885883a 	add	r2,r3,r2
  855e58:	10800003 	ldbu	r2,0(r2)
  855e5c:	10803fcc 	andi	r2,r2,255
  855e60:	1080201c 	xori	r2,r2,128
  855e64:	10bfe004 	addi	r2,r2,-128
  855e68:	10000a1e 	bne	r2,zero,855e94 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  855e6c:	e0bffd17 	ldw	r2,-12(fp)
  855e70:	10800217 	ldw	r2,8(r2)
  855e74:	e0fffe17 	ldw	r3,-8(fp)
  855e78:	180d883a 	mov	r6,r3
  855e7c:	e17fff17 	ldw	r5,-4(fp)
  855e80:	1009883a 	mov	r4,r2
  855e84:	0856a200 	call	856a20 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  855e88:	1000021e 	bne	r2,zero,855e94 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  855e8c:	e0bffd17 	ldw	r2,-12(fp)
  855e90:	00000706 	br	855eb0 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  855e94:	e0bffd17 	ldw	r2,-12(fp)
  855e98:	10800017 	ldw	r2,0(r2)
  855e9c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  855ea0:	e0fffd17 	ldw	r3,-12(fp)
  855ea4:	d0a04404 	addi	r2,gp,-32496
  855ea8:	18bfcc1e 	bne	r3,r2,855ddc <__alt_mem_epcs_flash_controller_0+0xff84cddc>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  855eac:	0005883a 	mov	r2,zero
}
  855eb0:	e037883a 	mov	sp,fp
  855eb4:	dfc00117 	ldw	ra,4(sp)
  855eb8:	df000017 	ldw	fp,0(sp)
  855ebc:	dec00204 	addi	sp,sp,8
  855ec0:	f800283a 	ret

00855ec4 <alt_flash_open_dev>:
#include "priv/alt_file.h"

ALT_LLIST_HEAD(alt_flash_dev_list);

alt_flash_fd* alt_flash_open_dev(const char* name)
{
  855ec4:	defffc04 	addi	sp,sp,-16
  855ec8:	dfc00315 	stw	ra,12(sp)
  855ecc:	df000215 	stw	fp,8(sp)
  855ed0:	df000204 	addi	fp,sp,8
  855ed4:	e13fff15 	stw	r4,-4(fp)
  alt_flash_dev* dev = (alt_flash_dev*)alt_find_dev(name, &alt_flash_dev_list);
  855ed8:	d1607d04 	addi	r5,gp,-32268
  855edc:	e13fff17 	ldw	r4,-4(fp)
  855ee0:	0855d2c0 	call	855d2c <alt_find_dev>
  855ee4:	e0bffe15 	stw	r2,-8(fp)

  if ((dev) && dev->open)
  855ee8:	e0bffe17 	ldw	r2,-8(fp)
  855eec:	10000926 	beq	r2,zero,855f14 <alt_flash_open_dev+0x50>
  855ef0:	e0bffe17 	ldw	r2,-8(fp)
  855ef4:	10800317 	ldw	r2,12(r2)
  855ef8:	10000626 	beq	r2,zero,855f14 <alt_flash_open_dev+0x50>
  {
    return dev->open(dev, name);
  855efc:	e0bffe17 	ldw	r2,-8(fp)
  855f00:	10800317 	ldw	r2,12(r2)
  855f04:	e17fff17 	ldw	r5,-4(fp)
  855f08:	e13ffe17 	ldw	r4,-8(fp)
  855f0c:	103ee83a 	callr	r2
  855f10:	00000106 	br	855f18 <alt_flash_open_dev+0x54>
  }

  return dev;
  855f14:	e0bffe17 	ldw	r2,-8(fp)
}
  855f18:	e037883a 	mov	sp,fp
  855f1c:	dfc00117 	ldw	ra,4(sp)
  855f20:	df000017 	ldw	fp,0(sp)
  855f24:	dec00204 	addi	sp,sp,8
  855f28:	f800283a 	ret

00855f2c <alt_flash_close_dev>:

void alt_flash_close_dev(alt_flash_fd* fd)
{
  855f2c:	defffd04 	addi	sp,sp,-12
  855f30:	dfc00215 	stw	ra,8(sp)
  855f34:	df000115 	stw	fp,4(sp)
  855f38:	df000104 	addi	fp,sp,4
  855f3c:	e13fff15 	stw	r4,-4(fp)
  if (fd && fd->close)
  855f40:	e0bfff17 	ldw	r2,-4(fp)
  855f44:	10000826 	beq	r2,zero,855f68 <alt_flash_close_dev+0x3c>
  855f48:	e0bfff17 	ldw	r2,-4(fp)
  855f4c:	10800417 	ldw	r2,16(r2)
  855f50:	10000526 	beq	r2,zero,855f68 <alt_flash_close_dev+0x3c>
  {
    fd->close(fd);
  855f54:	e0bfff17 	ldw	r2,-4(fp)
  855f58:	10800417 	ldw	r2,16(r2)
  855f5c:	e13fff17 	ldw	r4,-4(fp)
  855f60:	103ee83a 	callr	r2
  }
  return;
  855f64:	0001883a 	nop
  855f68:	0001883a 	nop
}
  855f6c:	e037883a 	mov	sp,fp
  855f70:	dfc00117 	ldw	ra,4(sp)
  855f74:	df000017 	ldw	fp,0(sp)
  855f78:	dec00204 	addi	sp,sp,8
  855f7c:	f800283a 	ret

00855f80 <alt_fs_reg>:
 * A return value of zero indicates success. A negative return value indicates
 * failure. 
 */
 
int alt_fs_reg (alt_dev* dev)
{
  855f80:	defffc04 	addi	sp,sp,-16
  855f84:	df000315 	stw	fp,12(sp)
  855f88:	df000304 	addi	fp,sp,12
  855f8c:	e13fff15 	stw	r4,-4(fp)
  /*
   * check that the device has a name.
   */

  if (!dev->name)
  855f90:	e0bfff17 	ldw	r2,-4(fp)
  855f94:	10800217 	ldw	r2,8(r2)
  855f98:	1000021e 	bne	r2,zero,855fa4 <alt_fs_reg+0x24>
  {
    return -ENODEV;
  855f9c:	00bffb44 	movi	r2,-19
  855fa0:	00001306 	br	855ff0 <alt_fs_reg+0x70>
  
  /*
   * register the file system.
   */

  alt_llist_insert(&alt_fs_list, &dev->llist);
  855fa4:	e0bfff17 	ldw	r2,-4(fp)
  855fa8:	d0e04404 	addi	r3,gp,-32496
  855fac:	e0fffd15 	stw	r3,-12(fp)
  855fb0:	e0bffe15 	stw	r2,-8(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  855fb4:	e0bffe17 	ldw	r2,-8(fp)
  855fb8:	e0fffd17 	ldw	r3,-12(fp)
  855fbc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  855fc0:	e0bffd17 	ldw	r2,-12(fp)
  855fc4:	10c00017 	ldw	r3,0(r2)
  855fc8:	e0bffe17 	ldw	r2,-8(fp)
  855fcc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  855fd0:	e0bffd17 	ldw	r2,-12(fp)
  855fd4:	10800017 	ldw	r2,0(r2)
  855fd8:	e0fffe17 	ldw	r3,-8(fp)
  855fdc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  855fe0:	e0bffd17 	ldw	r2,-12(fp)
  855fe4:	e0fffe17 	ldw	r3,-8(fp)
  855fe8:	10c00015 	stw	r3,0(r2)

  return 0;
  855fec:	0005883a 	mov	r2,zero
} 
  855ff0:	e037883a 	mov	sp,fp
  855ff4:	df000017 	ldw	fp,0(sp)
  855ff8:	dec00104 	addi	sp,sp,4
  855ffc:	f800283a 	ret

00856000 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  856000:	defff804 	addi	sp,sp,-32
  856004:	dfc00715 	stw	ra,28(sp)
  856008:	df000615 	stw	fp,24(sp)
  85600c:	dc000515 	stw	r16,20(sp)
  856010:	df000604 	addi	fp,sp,24
  856014:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
  856018:	00bffa04 	movi	r2,-24
  85601c:	e0bffb15 	stw	r2,-20(fp)
  /* 
   * Take the alt_fd_list_lock semaphore in order to avoid races when 
   * accessing the file descriptor pool.
   */
  
  ALT_SEM_PEND(alt_fd_list_lock, 0);
  856020:	d0a09a17 	ldw	r2,-32152(gp)
  856024:	e0bffc15 	stw	r2,-16(fp)
  856028:	e03ffd0d 	sth	zero,-12(fp)

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sem_pend (OS_EVENT* sem, 
                  INT16U timeout)
{
  INT8U err;
  OSSemPend (sem, timeout, &err);
  85602c:	e0bffd0b 	ldhu	r2,-12(fp)
  856030:	e0fffd84 	addi	r3,fp,-10
  856034:	180d883a 	mov	r6,r3
  856038:	100b883a 	mov	r5,r2
  85603c:	e13ffc17 	ldw	r4,-16(fp)
  856040:	084fafc0 	call	84fafc <OSSemPend>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  856044:	e03ffa15 	stw	zero,-24(fp)
  856048:	00001d06 	br	8560c0 <alt_get_fd+0xc0>
  {
    if (!alt_fd_list[i].dev)
  85604c:	040021b4 	movhi	r16,134
  856050:	84285a04 	addi	r16,r16,-24216
  856054:	e0bffa17 	ldw	r2,-24(fp)
  856058:	01400304 	movi	r5,12
  85605c:	1009883a 	mov	r4,r2
  856060:	08305040 	call	830504 <__mulsi3>
  856064:	8085883a 	add	r2,r16,r2
  856068:	10800017 	ldw	r2,0(r2)
  85606c:	1000111e 	bne	r2,zero,8560b4 <alt_get_fd+0xb4>
    {
      alt_fd_list[i].dev = dev;
  856070:	040021b4 	movhi	r16,134
  856074:	84285a04 	addi	r16,r16,-24216
  856078:	e0bffa17 	ldw	r2,-24(fp)
  85607c:	01400304 	movi	r5,12
  856080:	1009883a 	mov	r4,r2
  856084:	08305040 	call	830504 <__mulsi3>
  856088:	8085883a 	add	r2,r16,r2
  85608c:	e0fffe17 	ldw	r3,-8(fp)
  856090:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  856094:	d0e04817 	ldw	r3,-32480(gp)
  856098:	e0bffa17 	ldw	r2,-24(fp)
  85609c:	1880020e 	bge	r3,r2,8560a8 <alt_get_fd+0xa8>
      {
        alt_max_fd = i;
  8560a0:	e0bffa17 	ldw	r2,-24(fp)
  8560a4:	d0a04815 	stw	r2,-32480(gp)
      }
      rc = i;
  8560a8:	e0bffa17 	ldw	r2,-24(fp)
  8560ac:	e0bffb15 	stw	r2,-20(fp)
      goto alt_get_fd_exit;
  8560b0:	00000606 	br	8560cc <alt_get_fd+0xcc>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  8560b4:	e0bffa17 	ldw	r2,-24(fp)
  8560b8:	10800044 	addi	r2,r2,1
  8560bc:	e0bffa15 	stw	r2,-24(fp)
  8560c0:	e0bffa17 	ldw	r2,-24(fp)
  8560c4:	10800810 	cmplti	r2,r2,32
  8560c8:	103fe01e 	bne	r2,zero,85604c <__alt_mem_epcs_flash_controller_0+0xff84d04c>
  /*
   * Release the alt_fd_list_lock semaphore now that we are done with the
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);
  8560cc:	d0a09a17 	ldw	r2,-32152(gp)
  8560d0:	1009883a 	mov	r4,r2
  8560d4:	084fe740 	call	84fe74 <OSSemPost>

  return rc;
  8560d8:	e0bffb17 	ldw	r2,-20(fp)
}
  8560dc:	e6ffff04 	addi	sp,fp,-4
  8560e0:	dfc00217 	ldw	ra,8(sp)
  8560e4:	df000117 	ldw	fp,4(sp)
  8560e8:	dc000017 	ldw	r16,0(sp)
  8560ec:	dec00304 	addi	sp,sp,12
  8560f0:	f800283a 	ret

008560f4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  8560f4:	defffe04 	addi	sp,sp,-8
  8560f8:	df000115 	stw	fp,4(sp)
  8560fc:	df000104 	addi	fp,sp,4
  856100:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  856104:	e0bfff17 	ldw	r2,-4(fp)
  856108:	10bffe84 	addi	r2,r2,-6
  85610c:	10c00428 	cmpgeui	r3,r2,16
  856110:	18001a1e 	bne	r3,zero,85617c <alt_exception_cause_generated_bad_addr+0x88>
  856114:	100690ba 	slli	r3,r2,2
  856118:	00802174 	movhi	r2,133
  85611c:	10984b04 	addi	r2,r2,24876
  856120:	1885883a 	add	r2,r3,r2
  856124:	10800017 	ldw	r2,0(r2)
  856128:	1000683a 	jmp	r2
  85612c:	0085616c 	andhi	r2,zero,5509
  856130:	0085616c 	andhi	r2,zero,5509
  856134:	0085617c 	xorhi	r2,zero,5509
  856138:	0085617c 	xorhi	r2,zero,5509
  85613c:	0085617c 	xorhi	r2,zero,5509
  856140:	0085616c 	andhi	r2,zero,5509
  856144:	00856174 	movhi	r2,5509
  856148:	0085617c 	xorhi	r2,zero,5509
  85614c:	0085616c 	andhi	r2,zero,5509
  856150:	0085616c 	andhi	r2,zero,5509
  856154:	0085617c 	xorhi	r2,zero,5509
  856158:	0085616c 	andhi	r2,zero,5509
  85615c:	00856174 	movhi	r2,5509
  856160:	0085617c 	xorhi	r2,zero,5509
  856164:	0085617c 	xorhi	r2,zero,5509
  856168:	0085616c 	andhi	r2,zero,5509
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  85616c:	00800044 	movi	r2,1
  856170:	00000306 	br	856180 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  856174:	0005883a 	mov	r2,zero
  856178:	00000106 	br	856180 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  85617c:	0005883a 	mov	r2,zero
  }
}
  856180:	e037883a 	mov	sp,fp
  856184:	df000017 	ldw	fp,0(sp)
  856188:	dec00104 	addi	sp,sp,4
  85618c:	f800283a 	ret

00856190 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  856190:	defff804 	addi	sp,sp,-32
  856194:	dfc00715 	stw	ra,28(sp)
  856198:	df000615 	stw	fp,24(sp)
  85619c:	dc000515 	stw	r16,20(sp)
  8561a0:	df000604 	addi	fp,sp,24
  8561a4:	e13ffb15 	stw	r4,-20(fp)
  8561a8:	e17ffc15 	stw	r5,-16(fp)
  8561ac:	e1bffd15 	stw	r6,-12(fp)
  8561b0:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
  8561b4:	e1bffe17 	ldw	r6,-8(fp)
  8561b8:	e17ffd17 	ldw	r5,-12(fp)
  8561bc:	e13ffc17 	ldw	r4,-16(fp)
  8561c0:	0849d480 	call	849d48 <open>
  8561c4:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
  8561c8:	e0bffa17 	ldw	r2,-24(fp)
  8561cc:	10002216 	blt	r2,zero,856258 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
  8561d0:	040021b4 	movhi	r16,134
  8561d4:	84285a04 	addi	r16,r16,-24216
  8561d8:	e0bffa17 	ldw	r2,-24(fp)
  8561dc:	01400304 	movi	r5,12
  8561e0:	1009883a 	mov	r4,r2
  8561e4:	08305040 	call	830504 <__mulsi3>
  8561e8:	8085883a 	add	r2,r16,r2
  8561ec:	10c00017 	ldw	r3,0(r2)
  8561f0:	e0bffb17 	ldw	r2,-20(fp)
  8561f4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  8561f8:	040021b4 	movhi	r16,134
  8561fc:	84285a04 	addi	r16,r16,-24216
  856200:	e0bffa17 	ldw	r2,-24(fp)
  856204:	01400304 	movi	r5,12
  856208:	1009883a 	mov	r4,r2
  85620c:	08305040 	call	830504 <__mulsi3>
  856210:	8085883a 	add	r2,r16,r2
  856214:	10800104 	addi	r2,r2,4
  856218:	10c00017 	ldw	r3,0(r2)
  85621c:	e0bffb17 	ldw	r2,-20(fp)
  856220:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  856224:	040021b4 	movhi	r16,134
  856228:	84285a04 	addi	r16,r16,-24216
  85622c:	e0bffa17 	ldw	r2,-24(fp)
  856230:	01400304 	movi	r5,12
  856234:	1009883a 	mov	r4,r2
  856238:	08305040 	call	830504 <__mulsi3>
  85623c:	8085883a 	add	r2,r16,r2
  856240:	10800204 	addi	r2,r2,8
  856244:	10c00017 	ldw	r3,0(r2)
  856248:	e0bffb17 	ldw	r2,-20(fp)
  85624c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  856250:	e13ffa17 	ldw	r4,-24(fp)
  856254:	0849fe40 	call	849fe4 <alt_release_fd>
  }
} 
  856258:	0001883a 	nop
  85625c:	e6ffff04 	addi	sp,fp,-4
  856260:	dfc00217 	ldw	ra,8(sp)
  856264:	df000117 	ldw	fp,4(sp)
  856268:	dc000017 	ldw	r16,0(sp)
  85626c:	dec00304 	addi	sp,sp,12
  856270:	f800283a 	ret

00856274 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  856274:	defffb04 	addi	sp,sp,-20
  856278:	dfc00415 	stw	ra,16(sp)
  85627c:	df000315 	stw	fp,12(sp)
  856280:	df000304 	addi	fp,sp,12
  856284:	e13ffd15 	stw	r4,-12(fp)
  856288:	e17ffe15 	stw	r5,-8(fp)
  85628c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  856290:	01c07fc4 	movi	r7,511
  856294:	01800044 	movi	r6,1
  856298:	e17ffd17 	ldw	r5,-12(fp)
  85629c:	010021b4 	movhi	r4,134
  8562a0:	21285d04 	addi	r4,r4,-24204
  8562a4:	08561900 	call	856190 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  8562a8:	01c07fc4 	movi	r7,511
  8562ac:	000d883a 	mov	r6,zero
  8562b0:	e17ffe17 	ldw	r5,-8(fp)
  8562b4:	010021b4 	movhi	r4,134
  8562b8:	21285a04 	addi	r4,r4,-24216
  8562bc:	08561900 	call	856190 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  8562c0:	01c07fc4 	movi	r7,511
  8562c4:	01800044 	movi	r6,1
  8562c8:	e17fff17 	ldw	r5,-4(fp)
  8562cc:	010021b4 	movhi	r4,134
  8562d0:	21286004 	addi	r4,r4,-24192
  8562d4:	08561900 	call	856190 <alt_open_fd>
}  
  8562d8:	0001883a 	nop
  8562dc:	e037883a 	mov	sp,fp
  8562e0:	dfc00117 	ldw	ra,4(sp)
  8562e4:	df000017 	ldw	fp,0(sp)
  8562e8:	dec00204 	addi	sp,sp,8
  8562ec:	f800283a 	ret

008562f0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  8562f0:	defffa04 	addi	sp,sp,-24
  8562f4:	df000515 	stw	fp,20(sp)
  8562f8:	df000504 	addi	fp,sp,20
  8562fc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  856300:	0005303a 	rdctl	r2,status
  856304:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  856308:	e0fffc17 	ldw	r3,-16(fp)
  85630c:	00bfff84 	movi	r2,-2
  856310:	1884703a 	and	r2,r3,r2
  856314:	1001703a 	wrctl	status,r2
  
  return context;
  856318:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  85631c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  856320:	e0bfff17 	ldw	r2,-4(fp)
  856324:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  856328:	e0bffd17 	ldw	r2,-12(fp)
  85632c:	10800017 	ldw	r2,0(r2)
  856330:	e0fffd17 	ldw	r3,-12(fp)
  856334:	18c00117 	ldw	r3,4(r3)
  856338:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  85633c:	e0bffd17 	ldw	r2,-12(fp)
  856340:	10800117 	ldw	r2,4(r2)
  856344:	e0fffd17 	ldw	r3,-12(fp)
  856348:	18c00017 	ldw	r3,0(r3)
  85634c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  856350:	e0bffd17 	ldw	r2,-12(fp)
  856354:	e0fffd17 	ldw	r3,-12(fp)
  856358:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  85635c:	e0bffd17 	ldw	r2,-12(fp)
  856360:	e0fffd17 	ldw	r3,-12(fp)
  856364:	10c00015 	stw	r3,0(r2)
  856368:	e0bffb17 	ldw	r2,-20(fp)
  85636c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  856370:	e0bffe17 	ldw	r2,-8(fp)
  856374:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  856378:	0001883a 	nop
  85637c:	e037883a 	mov	sp,fp
  856380:	df000017 	ldw	fp,0(sp)
  856384:	dec00104 	addi	sp,sp,4
  856388:	f800283a 	ret

0085638c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  85638c:	defffb04 	addi	sp,sp,-20
  856390:	dfc00415 	stw	ra,16(sp)
  856394:	df000315 	stw	fp,12(sp)
  856398:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  85639c:	d0a07f17 	ldw	r2,-32260(gp)
  8563a0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  8563a4:	d0a0b917 	ldw	r2,-32028(gp)
  8563a8:	10800044 	addi	r2,r2,1
  8563ac:	d0a0b915 	stw	r2,-32028(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  8563b0:	00002e06 	br	85646c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  8563b4:	e0bffd17 	ldw	r2,-12(fp)
  8563b8:	10800017 	ldw	r2,0(r2)
  8563bc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  8563c0:	e0bffd17 	ldw	r2,-12(fp)
  8563c4:	10800403 	ldbu	r2,16(r2)
  8563c8:	10803fcc 	andi	r2,r2,255
  8563cc:	10000426 	beq	r2,zero,8563e0 <alt_tick+0x54>
  8563d0:	d0a0b917 	ldw	r2,-32028(gp)
  8563d4:	1000021e 	bne	r2,zero,8563e0 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  8563d8:	e0bffd17 	ldw	r2,-12(fp)
  8563dc:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  8563e0:	e0bffd17 	ldw	r2,-12(fp)
  8563e4:	10800217 	ldw	r2,8(r2)
  8563e8:	d0e0b917 	ldw	r3,-32028(gp)
  8563ec:	18801d36 	bltu	r3,r2,856464 <alt_tick+0xd8>
  8563f0:	e0bffd17 	ldw	r2,-12(fp)
  8563f4:	10800403 	ldbu	r2,16(r2)
  8563f8:	10803fcc 	andi	r2,r2,255
  8563fc:	1000191e 	bne	r2,zero,856464 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  856400:	e0bffd17 	ldw	r2,-12(fp)
  856404:	10800317 	ldw	r2,12(r2)
  856408:	e0fffd17 	ldw	r3,-12(fp)
  85640c:	18c00517 	ldw	r3,20(r3)
  856410:	1809883a 	mov	r4,r3
  856414:	103ee83a 	callr	r2
  856418:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  85641c:	e0bfff17 	ldw	r2,-4(fp)
  856420:	1000031e 	bne	r2,zero,856430 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  856424:	e13ffd17 	ldw	r4,-12(fp)
  856428:	08562f00 	call	8562f0 <alt_alarm_stop>
  85642c:	00000d06 	br	856464 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  856430:	e0bffd17 	ldw	r2,-12(fp)
  856434:	10c00217 	ldw	r3,8(r2)
  856438:	e0bfff17 	ldw	r2,-4(fp)
  85643c:	1887883a 	add	r3,r3,r2
  856440:	e0bffd17 	ldw	r2,-12(fp)
  856444:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  856448:	e0bffd17 	ldw	r2,-12(fp)
  85644c:	10c00217 	ldw	r3,8(r2)
  856450:	d0a0b917 	ldw	r2,-32028(gp)
  856454:	1880032e 	bgeu	r3,r2,856464 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  856458:	e0bffd17 	ldw	r2,-12(fp)
  85645c:	00c00044 	movi	r3,1
  856460:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  856464:	e0bffe17 	ldw	r2,-8(fp)
  856468:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  85646c:	e0fffd17 	ldw	r3,-12(fp)
  856470:	d0a07f04 	addi	r2,gp,-32260
  856474:	18bfcf1e 	bne	r3,r2,8563b4 <__alt_mem_epcs_flash_controller_0+0xff84d3b4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  856478:	084b2ac0 	call	84b2ac <OSTimeTick>
}
  85647c:	0001883a 	nop
  856480:	e037883a 	mov	sp,fp
  856484:	dfc00117 	ldw	ra,4(sp)
  856488:	df000017 	ldw	fp,0(sp)
  85648c:	dec00204 	addi	sp,sp,8
  856490:	f800283a 	ret

00856494 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  856494:	deffff04 	addi	sp,sp,-4
  856498:	df000015 	stw	fp,0(sp)
  85649c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  8564a0:	000170fa 	wrctl	ienable,zero
}
  8564a4:	0001883a 	nop
  8564a8:	e037883a 	mov	sp,fp
  8564ac:	df000017 	ldw	fp,0(sp)
  8564b0:	dec00104 	addi	sp,sp,4
  8564b4:	f800283a 	ret

008564b8 <OSCtxSw>:

      /* 
       * Save the remaining registers to the stack. 
       */

      addi sp, sp, -44
  8564b8:	defff504 	addi	sp,sp,-44
      bltu  sp, et, .Lstack_overflow

#endif

#if OS_THREAD_SAFE_NEWLIB
      ldw r3, %gprel(_impure_ptr)(gp)   /* load the pointer */
  8564bc:	d0e03c17 	ldw	r3,-32528(gp)
#endif /* OS_THREAD_SAFE_NEWLIB */

      ldw r4, %gprel(OSTCBCur)(gp)
  8564c0:	d120b217 	ldw	r4,-32056(gp)

      stw ra,  0(sp)
  8564c4:	dfc00015 	stw	ra,0(sp)
      stw fp,  4(sp)
  8564c8:	df000115 	stw	fp,4(sp)
      stw r23, 8(sp)
  8564cc:	ddc00215 	stw	r23,8(sp)
      stw r22, 12(sp)
  8564d0:	dd800315 	stw	r22,12(sp)
      stw r21, 16(sp)
  8564d4:	dd400415 	stw	r21,16(sp)
      stw r20, 20(sp)
  8564d8:	dd000515 	stw	r20,20(sp)
      stw r19, 24(sp)
  8564dc:	dcc00615 	stw	r19,24(sp)
      stw r18, 28(sp)
  8564e0:	dc800715 	stw	r18,28(sp)
      stw r17, 32(sp)
  8564e4:	dc400815 	stw	r17,32(sp)
      stw r16, 36(sp)
  8564e8:	dc000915 	stw	r16,36(sp)
       * store the current value of _impure_ptr so it can be restored
       * later; _impure_ptr is asigned on a per task basis. It is used
       * by Newlib to achieve reentrancy.	
       */

      stw r3, 40(sp)                  /* save the impure pointer */
  8564ec:	d8c00a15 	stw	r3,40(sp)
      /* 
       * Save the current tasks stack pointer into the current tasks OS_TCB.
       * i.e. OSTCBCur->OSTCBStkPtr = sp;
       */

      stw sp, (r4)                  /* save the stack pointer (OSTCBStkPtr */
  8564f0:	26c00015 	stw	sp,0(r4)

      /*
       * Call the user definable OSTaskSWHook()
       */

      call OSTaskSwHook
  8564f4:	085672c0 	call	85672c <OSTaskSwHook>
      /*
       * OSTCBCur = OSTCBHighRdy; 
       * OSPrioCur = OSPrioHighRdy; 
       */

      ldw r4, %gprel(OSTCBHighRdy)(gp)
  8564f8:	d120ad17 	ldw	r4,-32076(gp)
      ldb r5, %gprel(OSPrioHighRdy)(gp)
  8564fc:	d160a507 	ldb	r5,-32108(gp)

      stw r4, %gprel(OSTCBCur)(gp)     /* set the current task to be the new task */
  856500:	d120b215 	stw	r4,-32056(gp)
      stb r5, %gprel(OSPrioCur)(gp)    /* store the new task's priority as the current */
  856504:	d160a545 	stb	r5,-32107(gp)

      /*
       * Set the stack pointer to point to the new task's stack
       */

      ldw sp, (r4) /* the stack pointer is the first entry in the OS_TCB structure */
  856508:	26c00017 	ldw	sp,0(r4)
      /*
       * restore the value of _impure_ptr ; _impure_ptr is asigned on a 
       * per task basis. It is used by Newlib to achieve reentrancy.	
       */

      ldw r3, 40(sp)                  /* load the new impure pointer */
  85650c:	d8c00a17 	ldw	r3,40(sp)

      /*
       * Restore the saved registers for the new task.
       */

      ldw ra,  0(sp)
  856510:	dfc00017 	ldw	ra,0(sp)
      ldw fp,  4(sp)
  856514:	df000117 	ldw	fp,4(sp)
      ldw r23, 8(sp)
  856518:	ddc00217 	ldw	r23,8(sp)
      ldw r22, 12(sp)
  85651c:	dd800317 	ldw	r22,12(sp)
      ldw r21, 16(sp)
  856520:	dd400417 	ldw	r21,16(sp)
      ldw r20, 20(sp)
  856524:	dd000517 	ldw	r20,20(sp)
      ldw r19, 24(sp)
  856528:	dcc00617 	ldw	r19,24(sp)
      ldw r18, 28(sp)
  85652c:	dc800717 	ldw	r18,28(sp)
      ldw r17, 32(sp)
  856530:	dc400817 	ldw	r17,32(sp)
      ldw r16, 36(sp)
  856534:	dc000917 	ldw	r16,36(sp)

#if OS_THREAD_SAFE_NEWLIB

      stw r3, %gprel(_impure_ptr)(gp) /* update _impure_ptr */
  856538:	d0e03c15 	stw	r3,-32528(gp)

      stw et, %gprel(alt_stack_limit_value)(gp)

#endif

      addi sp, sp, 44
  85653c:	dec00b04 	addi	sp,sp,44

      /*
       * resume execution of the new task.
       */

      ret
  856540:	f800283a 	ret

00856544 <OSStartHighRdy>:

      /*
       * disable interrupts so that the scheduler doesn't run while
       * we're initialising this task.
       */  
      rdctl r18, status
  856544:	0025303a 	rdctl	r18,status
      subi  r17, zero, 2   /* r17 = 0xfffffffe */
  856548:	047fff84 	movi	r17,-2
      and   r18, r18, r17
  85654c:	9464703a 	and	r18,r18,r17
      wrctl status, r18
  856550:	9001703a 	wrctl	status,r18

      /*
       * Call the user definable OSTaskSWHook()
       */

      call OSTaskSwHook
  856554:	085672c0 	call	85672c <OSTaskSwHook>

      /* 
       * set OSRunning = TRUE.
       */

      movi r18, 1                    /* set r18 to the value 'TRUE' */
  856558:	04800044 	movi	r18,1
      stb r18, %gprel(OSRunning)(gp) /* save this to OSRunning */
  85655c:	d4a0a345 	stb	r18,-32115(gp)

      /*
       * start execution of the new task.
       */

      br 9b
  856560:	003fe506 	br	8564f8 <__alt_mem_epcs_flash_controller_0+0xff84d4f8>

00856564 <OSStartTsk>:

OSStartTsk:
      /* This instruction is never executed.  Its here to make the
       * backtrace work right 
       */
      movi sp, 0
  856564:	06c00004 	movi	sp,0

      /* Enable interrupts */
      rdctl r2, status
  856568:	0005303a 	rdctl	r2,status
      ori   r2, r2, 0x1
  85656c:	10800054 	ori	r2,r2,1
      wrctl status, r2
  856570:	1001703a 	wrctl	status,r2

      ldw r2, 4(sp)
  856574:	d8800117 	ldw	r2,4(sp)
      ldw r4, 0(sp)
  856578:	d9000017 	ldw	r4,0(sp)

      addi sp, sp, 8
  85657c:	dec00204 	addi	sp,sp,8

      callr r2
  856580:	103ee83a 	callr	r2

      nop
  856584:	0001883a 	nop

00856588 <OSTaskStkInit>:
 *              been placed on the stack in the proper order.
 *
 ***********************************************************************************************/

OS_STK *OSTaskStkInit(void (*task)(void *pd), void *pdata, OS_STK *pstk, INT16U opt)
{
  856588:	defff704 	addi	sp,sp,-36
  85658c:	dfc00815 	stw	ra,32(sp)
  856590:	df000715 	stw	fp,28(sp)
  856594:	df000704 	addi	fp,sp,28
  856598:	e13ffc15 	stw	r4,-16(fp)
  85659c:	e17ffd15 	stw	r5,-12(fp)
  8565a0:	e1bffe15 	stw	r6,-8(fp)
  8565a4:	3805883a 	mov	r2,r7
  8565a8:	e0bfff0d 	sth	r2,-4(fp)
    * create and initialise the impure pointer used for Newlib thread local storage.
    * This is only done if the C library is being used in a thread safe mode. Otherwise
    * a single reent structure is used for all threads, which saves memory.
    */

   local_impure_ptr = (struct _reent*)((((INT32U)(pstk)) & ~0x3) - sizeof(struct _reent));
  8565ac:	e0fffe17 	ldw	r3,-8(fp)
  8565b0:	00bfff04 	movi	r2,-4
  8565b4:	1884703a 	and	r2,r3,r2
  8565b8:	10bef704 	addi	r2,r2,-1060
  8565bc:	e0bff915 	stw	r2,-28(fp)

   _REENT_INIT_PTR (local_impure_ptr);
  8565c0:	01810904 	movi	r6,1060
  8565c4:	000b883a 	mov	r5,zero
  8565c8:	e13ff917 	ldw	r4,-28(fp)
  8565cc:	08342980 	call	834298 <memset>
  8565d0:	e0bff917 	ldw	r2,-28(fp)
  8565d4:	10c0bb04 	addi	r3,r2,748
  8565d8:	e0bff917 	ldw	r2,-28(fp)
  8565dc:	10c00115 	stw	r3,4(r2)
  8565e0:	e0bff917 	ldw	r2,-28(fp)
  8565e4:	10c0d504 	addi	r3,r2,852
  8565e8:	e0bff917 	ldw	r2,-28(fp)
  8565ec:	10c00215 	stw	r3,8(r2)
  8565f0:	e0bff917 	ldw	r2,-28(fp)
  8565f4:	10c0ef04 	addi	r3,r2,956
  8565f8:	e0bff917 	ldw	r2,-28(fp)
  8565fc:	10c00315 	stw	r3,12(r2)
  856600:	e0fff917 	ldw	r3,-28(fp)
  856604:	008021b4 	movhi	r2,134
  856608:	10a62604 	addi	r2,r2,-26472
  85660c:	18800d15 	stw	r2,52(r3)
  856610:	e0bff917 	ldw	r2,-28(fp)
  856614:	00c00044 	movi	r3,1
  856618:	10c02915 	stw	r3,164(r2)
  85661c:	10002a15 	stw	zero,168(r2)
  856620:	e0bff917 	ldw	r2,-28(fp)
  856624:	00ccc384 	movi	r3,13070
  856628:	10c02b0d 	sth	r3,172(r2)
  85662c:	e0bff917 	ldw	r2,-28(fp)
  856630:	00eaf344 	movi	r3,-21555
  856634:	10c02b8d 	sth	r3,174(r2)
  856638:	e0bff917 	ldw	r2,-28(fp)
  85663c:	00c48d04 	movi	r3,4660
  856640:	10c02c0d 	sth	r3,176(r2)
  856644:	e0bff917 	ldw	r2,-28(fp)
  856648:	00f99b44 	movi	r3,-6547
  85664c:	10c02c8d 	sth	r3,178(r2)
  856650:	e0bff917 	ldw	r2,-28(fp)
  856654:	00f7bb04 	movi	r3,-8468
  856658:	10c02d0d 	sth	r3,180(r2)
  85665c:	e0bff917 	ldw	r2,-28(fp)
  856660:	00c00144 	movi	r3,5
  856664:	10c02d8d 	sth	r3,182(r2)
  856668:	e0bff917 	ldw	r2,-28(fp)
  85666c:	00c002c4 	movi	r3,11
  856670:	10c02e0d 	sth	r3,184(r2)
   /* 
    * create a stack frame at the top of the stack (leaving space for the 
    * reentrant data structure).
    */

   frame_pointer = (INT32U*) local_impure_ptr;
  856674:	e0bff917 	ldw	r2,-28(fp)
  856678:	e0bffa15 	stw	r2,-24(fp)
#else
   frame_pointer =   (INT32U*) (((INT32U)(pstk)) & ~0x3);
#endif /* OS_THREAD_SAFE_NEWLIB */
   stk = frame_pointer - 13;
  85667c:	e0bffa17 	ldw	r2,-24(fp)
  856680:	10bff304 	addi	r2,r2,-52
  856684:	e0bffb15 	stw	r2,-20(fp)

   /* Now fill the stack frame. */

   stk[12] = (INT32U)task;            /* task address (ra) */
  856688:	e0bffb17 	ldw	r2,-20(fp)
  85668c:	10800c04 	addi	r2,r2,48
  856690:	e0fffc17 	ldw	r3,-16(fp)
  856694:	10c00015 	stw	r3,0(r2)
   stk[11] = (INT32U) pdata;          /* first register argument (r4) */
  856698:	e0bffb17 	ldw	r2,-20(fp)
  85669c:	10800b04 	addi	r2,r2,44
  8566a0:	e0fffd17 	ldw	r3,-12(fp)
  8566a4:	10c00015 	stw	r3,0(r2)

#if OS_THREAD_SAFE_NEWLIB
   stk[10] = (INT32U) local_impure_ptr; /* value of _impure_ptr for this thread */
  8566a8:	e0bffb17 	ldw	r2,-20(fp)
  8566ac:	10800a04 	addi	r2,r2,40
  8566b0:	e0fff917 	ldw	r3,-28(fp)
  8566b4:	10c00015 	stw	r3,0(r2)
#endif /* OS_THREAD_SAFE_NEWLIB */
   stk[0]  = ((INT32U)&OSStartTsk) + 4;/* exception return address (ea) */  
  8566b8:	00802174 	movhi	r2,133
  8566bc:	10995904 	addi	r2,r2,25956
  8566c0:	10c00104 	addi	r3,r2,4
  8566c4:	e0bffb17 	ldw	r2,-20(fp)
  8566c8:	10c00015 	stw	r3,0(r2)
    */
   __asm__ (".set OSTCBNext_OFFSET,%0" :: "i" (offsetof(OS_TCB, OSTCBNext)));
   __asm__ (".set OSTCBPrio_OFFSET,%0" :: "i" (offsetof(OS_TCB, OSTCBPrio)));
   __asm__ (".set OSTCBStkPtr_OFFSET,%0" :: "i" (offsetof(OS_TCB, OSTCBStkPtr)));
  
   return((OS_STK *)stk);
  8566cc:	e0bffb17 	ldw	r2,-20(fp)
}
  8566d0:	e037883a 	mov	sp,fp
  8566d4:	dfc00117 	ldw	ra,4(sp)
  8566d8:	df000017 	ldw	fp,0(sp)
  8566dc:	dec00204 	addi	sp,sp,8
  8566e0:	f800283a 	ret

008566e4 <OSTaskCreateHook>:
*
* Note(s)    : 1) Interrupts are disabled during this call.
*********************************************************************************************************
*/
void OSTaskCreateHook (OS_TCB *ptcb)
{
  8566e4:	defffe04 	addi	sp,sp,-8
  8566e8:	df000115 	stw	fp,4(sp)
  8566ec:	df000104 	addi	fp,sp,4
  8566f0:	e13fff15 	stw	r4,-4(fp)
    ptcb = ptcb;                       /* Prevent compiler warning */
}
  8566f4:	0001883a 	nop
  8566f8:	e037883a 	mov	sp,fp
  8566fc:	df000017 	ldw	fp,0(sp)
  856700:	dec00104 	addi	sp,sp,4
  856704:	f800283a 	ret

00856708 <OSTaskDelHook>:
*
* Note(s)    : 1) Interrupts are disabled during this call.
*********************************************************************************************************
*/
void OSTaskDelHook (OS_TCB *ptcb)
{
  856708:	defffe04 	addi	sp,sp,-8
  85670c:	df000115 	stw	fp,4(sp)
  856710:	df000104 	addi	fp,sp,4
  856714:	e13fff15 	stw	r4,-4(fp)
    ptcb = ptcb;                       /* Prevent compiler warning                                     */
}
  856718:	0001883a 	nop
  85671c:	e037883a 	mov	sp,fp
  856720:	df000017 	ldw	fp,0(sp)
  856724:	dec00104 	addi	sp,sp,4
  856728:	f800283a 	ret

0085672c <OSTaskSwHook>:
*                 will be 'switched in' (i.e. the highest priority task) and, 'OSTCBCur' points to the
*                 task being switched out (i.e. the preempted task).
*********************************************************************************************************
*/
void OSTaskSwHook (void)
{
  85672c:	deffff04 	addi	sp,sp,-4
  856730:	df000015 	stw	fp,0(sp)
  856734:	d839883a 	mov	fp,sp
}
  856738:	0001883a 	nop
  85673c:	e037883a 	mov	sp,fp
  856740:	df000017 	ldw	fp,0(sp)
  856744:	dec00104 	addi	sp,sp,4
  856748:	f800283a 	ret

0085674c <OSTaskStatHook>:
*
* Arguments  : none
*********************************************************************************************************
*/
void OSTaskStatHook (void)
{
  85674c:	deffff04 	addi	sp,sp,-4
  856750:	df000015 	stw	fp,0(sp)
  856754:	d839883a 	mov	fp,sp
}
  856758:	0001883a 	nop
  85675c:	e037883a 	mov	sp,fp
  856760:	df000017 	ldw	fp,0(sp)
  856764:	dec00104 	addi	sp,sp,4
  856768:	f800283a 	ret

0085676c <OSTimeTickHook>:
#ifdef ALT_INICHE
void cticks_hook(void);
#endif

void OSTimeTickHook (void)
{
  85676c:	deffff04 	addi	sp,sp,-4
  856770:	df000015 	stw	fp,0(sp)
  856774:	d839883a 	mov	fp,sp
    
#ifdef ALT_INICHE
    /* Service the Interniche timer */
    cticks_hook();
#endif
}
  856778:	0001883a 	nop
  85677c:	e037883a 	mov	sp,fp
  856780:	df000017 	ldw	fp,0(sp)
  856784:	dec00104 	addi	sp,sp,4
  856788:	f800283a 	ret

0085678c <OSInitHookBegin>:

void OSInitHookBegin(void)
{
  85678c:	deffff04 	addi	sp,sp,-4
  856790:	df000015 	stw	fp,0(sp)
  856794:	d839883a 	mov	fp,sp
#if OS_TMR_EN > 0
    OSTmrCtr = 0;
#endif
}
  856798:	0001883a 	nop
  85679c:	e037883a 	mov	sp,fp
  8567a0:	df000017 	ldw	fp,0(sp)
  8567a4:	dec00104 	addi	sp,sp,4
  8567a8:	f800283a 	ret

008567ac <OSInitHookEnd>:

void OSInitHookEnd(void)
{
  8567ac:	deffff04 	addi	sp,sp,-4
  8567b0:	df000015 	stw	fp,0(sp)
  8567b4:	d839883a 	mov	fp,sp
}
  8567b8:	0001883a 	nop
  8567bc:	e037883a 	mov	sp,fp
  8567c0:	df000017 	ldw	fp,0(sp)
  8567c4:	dec00104 	addi	sp,sp,4
  8567c8:	f800283a 	ret

008567cc <OSTaskIdleHook>:

void OSTaskIdleHook(void)
{
  8567cc:	deffff04 	addi	sp,sp,-4
  8567d0:	df000015 	stw	fp,0(sp)
  8567d4:	d839883a 	mov	fp,sp
}
  8567d8:	0001883a 	nop
  8567dc:	e037883a 	mov	sp,fp
  8567e0:	df000017 	ldw	fp,0(sp)
  8567e4:	dec00104 	addi	sp,sp,4
  8567e8:	f800283a 	ret

008567ec <OSTCBInitHook>:

void OSTCBInitHook(OS_TCB *ptcb)
{
  8567ec:	defffe04 	addi	sp,sp,-8
  8567f0:	df000115 	stw	fp,4(sp)
  8567f4:	df000104 	addi	fp,sp,4
  8567f8:	e13fff15 	stw	r4,-4(fp)
}
  8567fc:	0001883a 	nop
  856800:	e037883a 	mov	sp,fp
  856804:	df000017 	ldw	fp,0(sp)
  856808:	dec00104 	addi	sp,sp,4
  85680c:	f800283a 	ret

00856810 <alt_avalon_spi_command>:

int alt_avalon_spi_command(alt_u32 base, alt_u32 slave,
                           alt_u32 write_length, const alt_u8 * write_data,
                           alt_u32 read_length, alt_u8 * read_data,
                           alt_u32 flags)
{
  856810:	defff404 	addi	sp,sp,-48
  856814:	df000b15 	stw	fp,44(sp)
  856818:	df000b04 	addi	fp,sp,44
  85681c:	e13ffc15 	stw	r4,-16(fp)
  856820:	e17ffd15 	stw	r5,-12(fp)
  856824:	e1bffe15 	stw	r6,-8(fp)
  856828:	e1ffff15 	stw	r7,-4(fp)
  const alt_u8 * write_end = write_data + write_length;
  85682c:	e0ffff17 	ldw	r3,-4(fp)
  856830:	e0bffe17 	ldw	r2,-8(fp)
  856834:	1885883a 	add	r2,r3,r2
  856838:	e0bff815 	stw	r2,-32(fp)
  alt_u8 * read_end = read_data + read_length;
  85683c:	e0c00217 	ldw	r3,8(fp)
  856840:	e0800117 	ldw	r2,4(fp)
  856844:	1885883a 	add	r2,r3,r2
  856848:	e0bff915 	stw	r2,-28(fp)

  alt_u32 write_zeros = read_length;
  85684c:	e0800117 	ldw	r2,4(fp)
  856850:	e0bff515 	stw	r2,-44(fp)
  alt_u32 read_ignore = write_length;
  856854:	e0bffe17 	ldw	r2,-8(fp)
  856858:	e0bff615 	stw	r2,-40(fp)

  /* We must not send more than two bytes to the target before it has
   * returned any as otherwise it will overflow. */
  /* Unfortunately the hardware does not seem to work with credits > 1,
   * leave it at 1 for now. */
  alt_32 credits = 1;
  85685c:	00800044 	movi	r2,1
  856860:	e0bff715 	stw	r2,-36(fp)
  /* Warning: this function is not currently safe if called in a multi-threaded
   * environment, something above must perform locking to make it safe if more
   * than one thread intends to use it.
   */

  IOWR_ALTERA_AVALON_SPI_SLAVE_SEL(base, 1 << slave);
  856864:	e0bffc17 	ldw	r2,-16(fp)
  856868:	10800504 	addi	r2,r2,20
  85686c:	1009883a 	mov	r4,r2
  856870:	00c00044 	movi	r3,1
  856874:	e0bffd17 	ldw	r2,-12(fp)
  856878:	1884983a 	sll	r2,r3,r2
  85687c:	20800035 	stwio	r2,0(r4)
  
  /* Set the SSO bit (force chipselect) only if the toggle flag is not set */
  if ((flags & ALT_AVALON_SPI_COMMAND_TOGGLE_SS_N) == 0) {
  856880:	e0800317 	ldw	r2,12(fp)
  856884:	1080008c 	andi	r2,r2,2
  856888:	1000051e 	bne	r2,zero,8568a0 <alt_avalon_spi_command+0x90>
    IOWR_ALTERA_AVALON_SPI_CONTROL(base, ALTERA_AVALON_SPI_CONTROL_SSO_MSK);
  85688c:	e0bffc17 	ldw	r2,-16(fp)
  856890:	10800304 	addi	r2,r2,12
  856894:	1007883a 	mov	r3,r2
  856898:	00810004 	movi	r2,1024
  85689c:	18800035 	stwio	r2,0(r3)
  /*
   * Discard any stale data present in the RXDATA register, in case
   * previous communication was interrupted and stale data was left
   * behind.
   */
  IORD_ALTERA_AVALON_SPI_RXDATA(base);
  8568a0:	e0bffc17 	ldw	r2,-16(fp)
  8568a4:	10800037 	ldwio	r2,0(r2)
  for ( ; ; )
  {
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
  8568a8:	e0bffc17 	ldw	r2,-16(fp)
  8568ac:	10800204 	addi	r2,r2,8
  8568b0:	10800037 	ldwio	r2,0(r2)
  8568b4:	e0bffa15 	stw	r2,-24(fp)
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
  8568b8:	e0bffa17 	ldw	r2,-24(fp)
  8568bc:	1080100c 	andi	r2,r2,64
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);
  8568c0:	10000226 	beq	r2,zero,8568cc <alt_avalon_spi_command+0xbc>
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
  8568c4:	e0bff717 	ldw	r2,-36(fp)
  8568c8:	1000031e 	bne	r2,zero,8568d8 <alt_avalon_spi_command+0xc8>
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);
  8568cc:	e0bffa17 	ldw	r2,-24(fp)
  8568d0:	1080200c 	andi	r2,r2,128
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
  8568d4:	103ff426 	beq	r2,zero,8568a8 <__alt_mem_epcs_flash_controller_0+0xff84d8a8>
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);

    if ((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) != 0 && credits > 0)
  8568d8:	e0bffa17 	ldw	r2,-24(fp)
  8568dc:	1080100c 	andi	r2,r2,64
  8568e0:	10001e26 	beq	r2,zero,85695c <alt_avalon_spi_command+0x14c>
  8568e4:	e0bff717 	ldw	r2,-36(fp)
  8568e8:	00801c0e 	bge	zero,r2,85695c <alt_avalon_spi_command+0x14c>
    {
      credits--;
  8568ec:	e0bff717 	ldw	r2,-36(fp)
  8568f0:	10bfffc4 	addi	r2,r2,-1
  8568f4:	e0bff715 	stw	r2,-36(fp)

      if (write_data < write_end)
  8568f8:	e0ffff17 	ldw	r3,-4(fp)
  8568fc:	e0bff817 	ldw	r2,-32(fp)
  856900:	18800a2e 	bgeu	r3,r2,85692c <alt_avalon_spi_command+0x11c>
        IOWR_ALTERA_AVALON_SPI_TXDATA(base, *write_data++);
  856904:	e0bffc17 	ldw	r2,-16(fp)
  856908:	10800104 	addi	r2,r2,4
  85690c:	1009883a 	mov	r4,r2
  856910:	e0bfff17 	ldw	r2,-4(fp)
  856914:	10c00044 	addi	r3,r2,1
  856918:	e0ffff15 	stw	r3,-4(fp)
  85691c:	10800003 	ldbu	r2,0(r2)
  856920:	10803fcc 	andi	r2,r2,255
  856924:	20800035 	stwio	r2,0(r4)
  856928:	00000c06 	br	85695c <alt_avalon_spi_command+0x14c>
      else if (write_zeros > 0)
  85692c:	e0bff517 	ldw	r2,-44(fp)
  856930:	10000826 	beq	r2,zero,856954 <alt_avalon_spi_command+0x144>
      {
        write_zeros--;
  856934:	e0bff517 	ldw	r2,-44(fp)
  856938:	10bfffc4 	addi	r2,r2,-1
  85693c:	e0bff515 	stw	r2,-44(fp)
        IOWR_ALTERA_AVALON_SPI_TXDATA(base, 0);
  856940:	e0bffc17 	ldw	r2,-16(fp)
  856944:	10800104 	addi	r2,r2,4
  856948:	0007883a 	mov	r3,zero
  85694c:	10c00035 	stwio	r3,0(r2)
  856950:	00000206 	br	85695c <alt_avalon_spi_command+0x14c>
      }
      else
        credits = -1024;
  856954:	00bf0004 	movi	r2,-1024
  856958:	e0bff715 	stw	r2,-36(fp)
    };

    if ((status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) != 0)
  85695c:	e0bffa17 	ldw	r2,-24(fp)
  856960:	1080200c 	andi	r2,r2,128
  856964:	103fd026 	beq	r2,zero,8568a8 <__alt_mem_epcs_flash_controller_0+0xff84d8a8>
    {
      alt_u32 rxdata = IORD_ALTERA_AVALON_SPI_RXDATA(base);
  856968:	e0bffc17 	ldw	r2,-16(fp)
  85696c:	10800037 	ldwio	r2,0(r2)
  856970:	e0bffb15 	stw	r2,-20(fp)

      if (read_ignore > 0)
  856974:	e0bff617 	ldw	r2,-40(fp)
  856978:	10000426 	beq	r2,zero,85698c <alt_avalon_spi_command+0x17c>
        read_ignore--;
  85697c:	e0bff617 	ldw	r2,-40(fp)
  856980:	10bfffc4 	addi	r2,r2,-1
  856984:	e0bff615 	stw	r2,-40(fp)
  856988:	00000506 	br	8569a0 <alt_avalon_spi_command+0x190>
      else
        *read_data++ = (alt_u8)rxdata;
  85698c:	e0800217 	ldw	r2,8(fp)
  856990:	10c00044 	addi	r3,r2,1
  856994:	e0c00215 	stw	r3,8(fp)
  856998:	e0fffb17 	ldw	r3,-20(fp)
  85699c:	10c00005 	stb	r3,0(r2)
      credits++;
  8569a0:	e0bff717 	ldw	r2,-36(fp)
  8569a4:	10800044 	addi	r2,r2,1
  8569a8:	e0bff715 	stw	r2,-36(fp)

      if (read_ignore == 0 && read_data == read_end)
  8569ac:	e0bff617 	ldw	r2,-40(fp)
  8569b0:	103fbd1e 	bne	r2,zero,8568a8 <__alt_mem_epcs_flash_controller_0+0xff84d8a8>
  8569b4:	e0c00217 	ldw	r3,8(fp)
  8569b8:	e0bff917 	ldw	r2,-28(fp)
  8569bc:	18bfba1e 	bne	r3,r2,8568a8 <__alt_mem_epcs_flash_controller_0+0xff84d8a8>
  }

  /* Wait until the interface has finished transmitting */
  do
  {
    status = IORD_ALTERA_AVALON_SPI_STATUS(base);
  8569c0:	e0bffc17 	ldw	r2,-16(fp)
  8569c4:	10800204 	addi	r2,r2,8
  8569c8:	10800037 	ldwio	r2,0(r2)
  8569cc:	e0bffa15 	stw	r2,-24(fp)
  }
  while ((status & ALTERA_AVALON_SPI_STATUS_TMT_MSK) == 0);
  8569d0:	e0bffa17 	ldw	r2,-24(fp)
  8569d4:	1080080c 	andi	r2,r2,32
  8569d8:	103ff926 	beq	r2,zero,8569c0 <__alt_mem_epcs_flash_controller_0+0xff84d9c0>

  /* Clear SSO (release chipselect) unless the caller is going to
   * keep using this chip
   */
  if ((flags & ALT_AVALON_SPI_COMMAND_MERGE) == 0)
  8569dc:	e0800317 	ldw	r2,12(fp)
  8569e0:	1080004c 	andi	r2,r2,1
  8569e4:	1000041e 	bne	r2,zero,8569f8 <alt_avalon_spi_command+0x1e8>
    IOWR_ALTERA_AVALON_SPI_CONTROL(base, 0);
  8569e8:	e0bffc17 	ldw	r2,-16(fp)
  8569ec:	10800304 	addi	r2,r2,12
  8569f0:	0007883a 	mov	r3,zero
  8569f4:	10c00035 	stwio	r3,0(r2)

  return read_length;
  8569f8:	e0800117 	ldw	r2,4(fp)
}
  8569fc:	e037883a 	mov	sp,fp
  856a00:	df000017 	ldw	fp,0(sp)
  856a04:	dec00104 	addi	sp,sp,4
  856a08:	f800283a 	ret

00856a0c <atexit>:
  856a0c:	200b883a 	mov	r5,r4
  856a10:	000f883a 	mov	r7,zero
  856a14:	000d883a 	mov	r6,zero
  856a18:	0009883a 	mov	r4,zero
  856a1c:	0856a9c1 	jmpi	856a9c <__register_exitproc>

00856a20 <memcmp>:
  856a20:	01c000c4 	movi	r7,3
  856a24:	3980192e 	bgeu	r7,r6,856a8c <memcmp+0x6c>
  856a28:	2144b03a 	or	r2,r4,r5
  856a2c:	11c4703a 	and	r2,r2,r7
  856a30:	10000f26 	beq	r2,zero,856a70 <memcmp+0x50>
  856a34:	20800003 	ldbu	r2,0(r4)
  856a38:	28c00003 	ldbu	r3,0(r5)
  856a3c:	10c0151e 	bne	r2,r3,856a94 <memcmp+0x74>
  856a40:	31bfff84 	addi	r6,r6,-2
  856a44:	01ffffc4 	movi	r7,-1
  856a48:	00000406 	br	856a5c <memcmp+0x3c>
  856a4c:	20800003 	ldbu	r2,0(r4)
  856a50:	28c00003 	ldbu	r3,0(r5)
  856a54:	31bfffc4 	addi	r6,r6,-1
  856a58:	10c00e1e 	bne	r2,r3,856a94 <memcmp+0x74>
  856a5c:	21000044 	addi	r4,r4,1
  856a60:	29400044 	addi	r5,r5,1
  856a64:	31fff91e 	bne	r6,r7,856a4c <__alt_mem_epcs_flash_controller_0+0xff84da4c>
  856a68:	0005883a 	mov	r2,zero
  856a6c:	f800283a 	ret
  856a70:	20c00017 	ldw	r3,0(r4)
  856a74:	28800017 	ldw	r2,0(r5)
  856a78:	18bfee1e 	bne	r3,r2,856a34 <__alt_mem_epcs_flash_controller_0+0xff84da34>
  856a7c:	31bfff04 	addi	r6,r6,-4
  856a80:	21000104 	addi	r4,r4,4
  856a84:	29400104 	addi	r5,r5,4
  856a88:	39bff936 	bltu	r7,r6,856a70 <__alt_mem_epcs_flash_controller_0+0xff84da70>
  856a8c:	303fe91e 	bne	r6,zero,856a34 <__alt_mem_epcs_flash_controller_0+0xff84da34>
  856a90:	003ff506 	br	856a68 <__alt_mem_epcs_flash_controller_0+0xff84da68>
  856a94:	10c5c83a 	sub	r2,r2,r3
  856a98:	f800283a 	ret

00856a9c <__register_exitproc>:
  856a9c:	defffa04 	addi	sp,sp,-24
  856aa0:	dc000315 	stw	r16,12(sp)
  856aa4:	040021b4 	movhi	r16,134
  856aa8:	842db504 	addi	r16,r16,-18732
  856aac:	80c00017 	ldw	r3,0(r16)
  856ab0:	dc400415 	stw	r17,16(sp)
  856ab4:	dfc00515 	stw	ra,20(sp)
  856ab8:	18805217 	ldw	r2,328(r3)
  856abc:	2023883a 	mov	r17,r4
  856ac0:	10003726 	beq	r2,zero,856ba0 <__register_exitproc+0x104>
  856ac4:	10c00117 	ldw	r3,4(r2)
  856ac8:	010007c4 	movi	r4,31
  856acc:	20c00e16 	blt	r4,r3,856b08 <__register_exitproc+0x6c>
  856ad0:	1a000044 	addi	r8,r3,1
  856ad4:	8800221e 	bne	r17,zero,856b60 <__register_exitproc+0xc4>
  856ad8:	18c00084 	addi	r3,r3,2
  856adc:	18c7883a 	add	r3,r3,r3
  856ae0:	18c7883a 	add	r3,r3,r3
  856ae4:	12000115 	stw	r8,4(r2)
  856ae8:	10c7883a 	add	r3,r2,r3
  856aec:	19400015 	stw	r5,0(r3)
  856af0:	0005883a 	mov	r2,zero
  856af4:	dfc00517 	ldw	ra,20(sp)
  856af8:	dc400417 	ldw	r17,16(sp)
  856afc:	dc000317 	ldw	r16,12(sp)
  856b00:	dec00604 	addi	sp,sp,24
  856b04:	f800283a 	ret
  856b08:	008020f4 	movhi	r2,131
  856b0c:	108e4704 	addi	r2,r2,14620
  856b10:	10002626 	beq	r2,zero,856bac <__register_exitproc+0x110>
  856b14:	01006404 	movi	r4,400
  856b18:	d9400015 	stw	r5,0(sp)
  856b1c:	d9800115 	stw	r6,4(sp)
  856b20:	d9c00215 	stw	r7,8(sp)
  856b24:	083391c0 	call	83391c <malloc>
  856b28:	d9400017 	ldw	r5,0(sp)
  856b2c:	d9800117 	ldw	r6,4(sp)
  856b30:	d9c00217 	ldw	r7,8(sp)
  856b34:	10001d26 	beq	r2,zero,856bac <__register_exitproc+0x110>
  856b38:	81000017 	ldw	r4,0(r16)
  856b3c:	10000115 	stw	zero,4(r2)
  856b40:	02000044 	movi	r8,1
  856b44:	22405217 	ldw	r9,328(r4)
  856b48:	0007883a 	mov	r3,zero
  856b4c:	12400015 	stw	r9,0(r2)
  856b50:	20805215 	stw	r2,328(r4)
  856b54:	10006215 	stw	zero,392(r2)
  856b58:	10006315 	stw	zero,396(r2)
  856b5c:	883fde26 	beq	r17,zero,856ad8 <__alt_mem_epcs_flash_controller_0+0xff84dad8>
  856b60:	18c9883a 	add	r4,r3,r3
  856b64:	2109883a 	add	r4,r4,r4
  856b68:	1109883a 	add	r4,r2,r4
  856b6c:	21802215 	stw	r6,136(r4)
  856b70:	01800044 	movi	r6,1
  856b74:	12406217 	ldw	r9,392(r2)
  856b78:	30cc983a 	sll	r6,r6,r3
  856b7c:	4992b03a 	or	r9,r9,r6
  856b80:	12406215 	stw	r9,392(r2)
  856b84:	21c04215 	stw	r7,264(r4)
  856b88:	01000084 	movi	r4,2
  856b8c:	893fd21e 	bne	r17,r4,856ad8 <__alt_mem_epcs_flash_controller_0+0xff84dad8>
  856b90:	11006317 	ldw	r4,396(r2)
  856b94:	218cb03a 	or	r6,r4,r6
  856b98:	11806315 	stw	r6,396(r2)
  856b9c:	003fce06 	br	856ad8 <__alt_mem_epcs_flash_controller_0+0xff84dad8>
  856ba0:	18805304 	addi	r2,r3,332
  856ba4:	18805215 	stw	r2,328(r3)
  856ba8:	003fc606 	br	856ac4 <__alt_mem_epcs_flash_controller_0+0xff84dac4>
  856bac:	00bfffc4 	movi	r2,-1
  856bb0:	003fd006 	br	856af4 <__alt_mem_epcs_flash_controller_0+0xff84daf4>
